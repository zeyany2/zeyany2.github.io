<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOC REPO – MSC Nastran manuals</title>
    <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/</link>
    <description>Recent content in MSC Nastran manuals on DOC REPO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>User&#39;s Manual P1</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_001/</guid>
      <description>
        
        
        &lt;p&gt;MSC Nastran 2024.1
Design Sensitivity and Optimization
User’s GuideMSC Nastran Design Sensitivity and Optimization User’s Guide&lt;/p&gt;
&lt;p&gt;Worldwide Web
&lt;a href=&#34;https://www.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.hexagon.com&lt;/a&gt;
Support
&lt;a href=&#34;https://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com&lt;/a&gt;
Disclaimer
Hexagon reserves the right to make changes in specifications and other information contained in this document without prior notice.
The concepts, methods, and examples presented in this text are for illustrative and educational purposes only, and are not intended
to be exhaustive or to apply to any particular engineering problem or design. Hexagon assumes no liability or responsibility to any
person or company for direct or indirect damages resulting from the use of any information contained herein.
User Documentation: Copyright 2024 Hexagon AB and/or its subsidiaries. All Rights Reserved.
This notice shall be marked on any reproduction of this documentation, in whole or in part. Any reproduction or distribution of this
document, in whole or in part, without the prior written consent of Hexagon is prohibited.
This software may contain certain third-party software that is protected by copyright and licensed from Hexagon suppliers. Additional
terms and conditions and/or notices may apply for certain third party software. Such additional third party software terms and
conditions and/or notices may be set forth in documentation and/or at third-party software information  (or successor website designated
by Hexagon from time to time).
PCGLSS 8.0, Copyright © 1992-2016, Computational Applications and System Integration Inc. All rights reserved. PCGLSS 8.0 is
licensed from Computational Applications and System Integration Inc.
The Hexagon logo, Hexagon, MSC Software logo, MSC, Dytran, Marc, MSC Nastran, Patran, e -Xstream, Digimat, and Simulating
Reality are trademarks or registered trademarks of Hexagon AB and/or its subsidiaries in the United States and/or other countries.
NASTRAN is a registered trademark of NASA. FLEXlm and FlexNet Publisher are trademarks or registered trademarks of Flexera
Software. All other trademarks are the property of their respective owners.
Use, duplicate, or disclosure by the U.S. Government is subjected to restrictions as set forth in FAR 12.212 (Commercial Computer
Software) and DFARS 227.7202 (Commercial Computer Software and Commercial Computer Software Documentation), as
applicable.
U.S. Patent 9,361,413
May 16, 2024
NA:V2024.1:Z:Z:Z:DC-DSO-PDFCorporate Office
Hexagon Manufacturing Intelligence, Inc. UK
78 Portsmouth Road Cedar House
Cobham, Surrey KT11 1HY
Telephone: (+44) 02070686555&lt;/p&gt;
&lt;p&gt;Documentation Feedback
At Hexagon Manufacturing Intelligence, we strive to produce the highest quality documentation and
welcome your feedback. If you have comments or suggestions about our documentation, write to us .
Please include the following information with your feedback:
Document name
Release/Version number
Chapter/Section name
Topic title (for Online Help)
Brief description of the content (for example, incomplete/incorrect information, grammatical
errors, information that requires clarification or more details and so on).
Your suggestions for correcting/improving documentation
Note:   The above mentioned e-mail address is only for providing documentation specific
feedback. If you have any technical problems, issues, or queries, please contact Technical
Support .&lt;/p&gt;
&lt;p&gt;C o n t e n t s
Design Sensitivity and Optimization User’s Guide
Contents
Main Index
Contents
Preface
About this Book  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  2
Organization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  2
Developments Introduced Since Version 68 of MSC Nastran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
List of MSC Nastran Guides . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
Technical Support  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
Training and Internet Resources . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
1 Getting Started
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  12
What is Design Optimization? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  12
What is Design Sensitivity? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  12
Why Use Design Sensitivity and Optimization?  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  13
How Does Design Optimization Differ from Analysis?  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  14
Numerical Optimization Basics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  17
How Much Do I Need to Know About Optimizers? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  17
An Illustration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  18
Numerically Searching for an Optimum . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  21
Structural Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  28
Relating the Finite Element Analysis Model to th e Design Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  29
Managing the Structural Optimization Task . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  29
Overview of Approximation Concepts Used in Structural Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . .  30
Summary  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  32
2 Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Overview of Fundamentals  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  34
Initial Design  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  35
Structural Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  35
Constraint Screening  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  36
Sensitivity Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  36&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guidevi
Main Index
Optimizer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  36
Approximate Model  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  36
The Improved Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  36
Converged . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Types of Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Sizing Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Shape Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Toptimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Topology Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Topometry Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37
Topography Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
The Design Model  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
Design Variables  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
Designed Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
Type-1 Properties  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  41
Type-2 Properties  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  44
Type-3 Properties  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  44
Designed Shapes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  44
Design Responses  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  45
Type-1 Responses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  45
Type-2 Responses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  45
Type-3 Responses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  45
Multidisciplinary Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  48
Response Calculation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  49
Mode Tracking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  51
Constraint Screening . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  52
Design Sensitivity Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  54
General Considerations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  54
Element and Grid Responses  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  57
Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  77
Connection Between the Optimizer and the Approximate Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  77
The Approximate Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  81
Formal Approximations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  82
A Simple Linear Design Space  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  83
Move Limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  84
Design Variable Limits  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  84
Property Limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  85
Transformation of the Approximate Optimization Task to a Feasible Design  . . . . . . . . . . . . . . . . . . . . . . .  89
Function Evaluation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  90
Gradient Evaluation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  96
Tests for Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  102
Convergence of Design Cycles: Hard and Soft Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  102&lt;/p&gt;
&lt;p&gt;vii Contents
Main Index
3 Developing the Design Model for Sensitivity and Optimization
Overview of Design Modeling  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  112
Case Control for Design Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  114
Defining the Design Variables  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  116
Relating Design Variables to Properties  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  118
Designating the Design Responses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  121
DRESP1 Bulk Data Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  121
DRESP2 Bulk Data Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  121
DRESP3 Bulk Data Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  127
Defining the Objective Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  129
Defining the Constraints  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  130
4 Input Data
Optimizers (Licensing) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  134
File Management  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  135
Shape Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  135
User Defined Beam Libraries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  135
External Responses  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  135
Executive Control  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  136
Solution 200 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  136
Case Control Section  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  136
Analysis Discipline Definition  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  136
Design Task Definition  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  137
Mode Tracking  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  140
Shape Basis Vector Computation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  141
Generation of a New Bulk Data File . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  142
Bulk Data Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  142
BEADVAR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  142
BNDGRID  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  146
DCONADD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  147
DCONSTR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  147
DDVAL  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  149
DEQATN  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  150
DESVAR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  154
DLINK . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  156
DOPTPRM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  157
DRESP1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  158
DRESP2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  162
DRESP3  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  168&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide viii
Main Index
DSCREEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  171
DTABLE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  172
DTABLE2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  173
DVBSHAP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  174
DVCREL1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  175
DVCREL2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
DVGRID  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  179
DVLREL1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  180
DVMREL1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  181
DVMREL2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  183
DVPREL1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  185
DVPREL2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  188
DVPSURF . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  189
DVSHAP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  190
MODTRAK  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  191
SEDLINK  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  192
SEDRSP3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  195
STOCHAS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  198
TOMVAR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  199
TOPVAR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  201
Parameters Unique to Design Sensitivity and Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  203
Design Responses  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  206
Optimization Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227
DOPTPRM  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227
External Response . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  237
External Response or Type-3 Response  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  237
User Interface for Setting Up External Response . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  240
Creating a DRESP3 entry  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  240
Write C or Fortran Routines to Calculate Response Based on Template Routines  . . . . . . . . . . . . . . . . . . .  241
Build External Servers  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  246
Building with SCons/SDK  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  248
Creating a CONNECT Command . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
Creating an Evaluator Connection File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
Submitting a Nastran Job with the gmconn Keyword  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
5 Output Features and Interpretation
Output-Controlling Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  258
Design Optimization Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  259
DSOUG4 Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  259
Modification of Move Limit Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  276
Special Prints for Fully Stressed Design  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  277
Special Prints for Discrete Variable Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  278&lt;/p&gt;
&lt;p&gt;ix Contents
Main Index
Special Prints for Topology Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  279
Design Sensitivity Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  279
Formatted Design Sensitivity  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  280
Unformatted Design Sensitivity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  282
Design Punch Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  284
Punch Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  285
Example for DESPCH  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  286
Special Punch Considerations for Topology Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287
Special Punch in the Case of Shape Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287
New Bulk Data File . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287
Postprocessing Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  289
Comma Separated Values File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  289
Output from PARAM POST  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  291
6 Shape Optimization
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  296
Basis Vectors in Shape Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  296
Relating Design Variables to Shape Changes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  300
Use of Patran to generate a Shape Optimization deck . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  320
Examples  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  327
Shape Optimization of a Culvert  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  327
Analytic Boundary Shapes  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  337
7 Topology, Topometry and Topography Optimization
Topology Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  356
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  356
Features and Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  356
Brief Literature Review  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  356
Bulk Data and Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  358
TOPVAR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  358
Bulk Data Entry DRESP1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  362
Design Optimization Parameters (DOPTPRM)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  363
Modeling Guidelines and Limitations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  366
Modeling Tips . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  366
Limitations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  369
Patran User Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  369
General Topology Optimization Preprocessing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  369
Patran Postprocessing  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  374&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guidex
Main Index
Application Examples  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  378
Bridge Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  378
MBB Beam with Variations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  397
Torsion Beam with Variations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  401
A Bracket example for Overhang Constraint . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  407
Engine Mount . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  409
Optimization Solution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  411
Topology Optimization with Glued Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  433
Anisotropic Materials in 3D Solid Topology Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  439
Topometry Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  441
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  441
Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  441
TOMVAR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  442
Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  444
Guidelines and Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  445
Example 1 - Three-bar Truss (tomex1.dat) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  445
Input  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  447
Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  448
Example 2 – Car Model Topometry Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  449
Example 3 - Mirror Symmetry Constraint Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  449
Post-processing Topometry Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  451
Topography (Bead or Stamp) Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  455
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  455
Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  455
BEADVAR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  455
Outputs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  459
Guidelines and Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  459
Example 3 – A Square (togex1.dat)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  460
Input  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  460
Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  461
Postprocessing Topography Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  462
Toptomization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  464
Example 1 - Topography  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  464
Example 2 - Topometry Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  469
8 Example Problems
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  474
Three-Bar Truss . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  475
Analysis Model Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  476
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  476
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  498
Analysis Model Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  498&lt;/p&gt;
&lt;p&gt;xi Contents
Main Index
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  498
Cantilevered Plate  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  502
Analysis Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  503
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  503
Stiffened Plate  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  511
Analysis Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  512
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  516
Dynamic Response Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  517
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization  . . . . . . . . . . . . . . . . . . . . . . .  527
Analysis Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  528
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  528
Design Optimization with Composite Materials with Fully Stressed Design . . . . . . . . . . . . . . . . . . . . . . .  535
Acoustic Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  541
RMS Response  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  551
Transient Dynamic Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  558
External Response to Include Alternative Buckling Response . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  563
Continuing the Design Process in a Subsequent Job . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  573
Continuing a Property Optimization Design Task  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  573
Continuing a Shape Optimization Design Task  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  577
Restarting from a Previous Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  577
Cantilevered Plate with Redundant Materials  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  580
Analysis Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  580
Design Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  581
Dynamic Response Optimization with Objective Spanning Subcases . . . . . . . . . . . . . . . . . . . . . . . . . . . .  587
The Equivalent Radiated Power (ERP) Design Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  591
9 Special Topics
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  598
Discrete Variable Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  598
Fully Stressed Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  599
Trust Region . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  601
Superelement Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  606
Automatic External Superelement Optimization (AESO) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  610
Randomization of a User’s Input Data File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  619
Optimization of Nonlinear Structural Responses (Pre-release)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  620
Solving Large Problems in SOL 200 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  639
Special Considerations When Designing One-Dimensional Bending Elements . . . . . . . . . . . . . . . . . . . . .  643&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guidexii
M ain Index
MultiOpt-Global Optimization and Multi Model Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  646
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  646
Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  648
User Input . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  649
User Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  654
GO Test Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  654MMO Test Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  657Setup MultiOpt Remoting for Multi-Node Execution  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  659Guidelines and Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  662
Global Optimization Licensing  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  664Multi-Model Optimization Licensing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  665
OpenMDO
TM. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  665
Optimization with Multiple Mass Configurations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  666
A Adding Your Own Beam Cross-Section Library
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  668
BSCON Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  669BSBRPD Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  670BSGRQ Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  680BSBRT Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  681BSBRID Subroutine  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  684BSBRGD Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  690BSBRCD Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  696BSMSG Subroutine. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  702Linking Your Library to MSC Nastran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  703Example of Building and Linking a Beam Server . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  703
B The IPOPT Algorithm
IPOPT  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  706
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  706
Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  706
Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  706
Nomenclature  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  710
Glossary  714
References 724 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .&lt;/p&gt;
&lt;p&gt;M ain Index
Preface
MSC Nastran Design Sensitivity and Optimization User’s GuideDesign Sensitivity and Opti -
mization User’s Guide
Preface
About this Book     2
List of MSC Nastran Guides     7
Technical Support     8
Training and Internet Resources     8&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
About this Book2
Main Index
About this Book
MSC Nastran is a general purpose finite element program which solves a wide variety of engineering
problems. It is developed, marketed and supported by the Hexagon.
The MSC Nastran Design Sensitivity and Optimization User&amp;rsquo;s Guide is intended to explain the capability of
MSC Nastran to predict the effect of changes in the structural model on structural responses (sensitivity) and
to resize the structure so as to satisfy imposed design conditions while taking a particular response to
minimum (or maximum) value (Optimization). Note that sensitivity analysis is available in standard MSC
Nastran and does not require additional licenses. The resizing capability does require Nastran Optimization
license. Guidance is provided in preparing the input and assessing the output. A number of examples are
provided to illustrate the use of MSC Nastran Design Sensitivity and Optimization.
This guide contains many highlighted links (text in blue) to other MSC Nastran documents. All the
documents are delivered together as a collection. The links between the documents will work, if you keep the
collection together.
T wo ways of working with links are as follows:
Use alt  to return back to the window your cursor is in.
To open the other “linked to” documents in a new window from an Adobe Reader, choose Edit 
Preferences  Documents    Open cross-document links in the same window. Then
uncheck the checkbox and select OK.
Organization
The Guide is divided into nine chapters and three appendices. A brief description of each of these is:
Chapter 1. Getting Started
This chapter provides an overview of design sensitivity and optimization and is presented at an introductory
level. This chapter assumes limited knowledge of the field and can be skimmed or skipped altogether by
knowledgeable workers in this area.
Chapter 2. Fundamentals of Design Sensitivity and Optimization in MSC Nastran
This chapter can be regarded as a theoretical overview of the Design Sensitivity and Optimization capability
that identifies and describes the concepts that are used. There is minimal reference to the user interface in this
chapter. Instead, it provides information on the algorithms used and is intended for the high-end user and
for developers.
Chapter 3. Developing the Design Model for Sensitivity and Optimization
This chapter serves as a bridge between the concepts of Chapter 2 and the input description of
Chapter 4. It is intended to provide an overview of the concept of the Design Model as it is implemented in
MSC Nastran and provides guidelines for the use of the capabilities.&lt;/p&gt;
&lt;p&gt;3 Preface
About this Book
Main Index
Chapter 4. Input Data
This chapter provides explicit descriptions of each of the Case Control Commands, Bulk Data Entries and
Parameters that are related to design sensitivity and optimization.
Chapter 5. Output Features and Interpretation
This chapter provides a description of the output available from running design sensitivity and optimization
tasks. In addition to a comprehensive discussion of the output provided in the.f06 output file, there is also
mention of the design sensitivity and optimization outputs that are available in the.pch file and that can be
used in post-processors, especially Patran.
Chapter 6. Shape Optimization
This chapter focuses exclusively on shape optimization. The reader can use this as a standalone reference for
shape optimization. A discussion of Basis Vectors, various methods available to generate basis vectors, various
sections of the input deck unique to shape optimization, example problems and Patran support are the topics
that make up this chapter.
Chapter 7. Topology, Topometry and Topography Optimization
This chapter is intended to provide a complete reference to topology, topometry and topography
optimization. It contains the theory, MSC Nastran specific input deck entries, features and guidelines, a
complete tutorial to Patran usage for pre- and post-processing and example problems.
Chapter 8. Example Problems
A series of example problems are given to illustrate the capabilities available in MSC Nastran for Design
Sensitivity and Optimization. All the example problems are available in the MSC Nastran TPL (Test Problem
Library) with the naming convention DSOUGxx.dat. It is expected that all readers will benefit from reading
this chapter and practising the example problems. Studying the effects of variations on the provided input
should be particularly beneficial.
Chapter 9. Special Topics
This final chapter is provided to go into greater depth on features that are part of MSC Nastran’s design
optimization capability, but that require special handling outside the descriptions of the more basic features.
Appendix A. Nomenclature and Glossary of Terms
This appendix provides a quick reference for the nomenclature used in this guide and to some technical terms
used throughout. It also contains a listing of references called out in this guide.
Appendix B. Adding Your Own Beam Cross-section Library
Appendix C. The IPOPT Optimizer
This appendix provides a brief description of the theory contained in the IPOPT optimization algorithm.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
About this Book4
Main Index
Developments Introduced Since Version 68 of MSC Nastran
New versions of MSC Nastran are released periodically. This guide has been prepared with minimal reference
to the version number and is consistent with the 2014.1 Release of MSC Nastran. It is felt to be of historical
interest to show how the Design Sensitivity and Optimization capability evolved. It is also of great practical
interest to those who are not using the most recent release to see which of the capabilities described in this
Guide are not available to them. The major enhancements since Version 68 are identified here. Discussions
of each of these topics are included in this Guide.
Version 68.2
Support for inertial relief in a statics analysis
Consideration of differential stiffness effects in buckling sensitivity analysis
Version 69
Design of the PBARL. This was done in conjunction with the introduction of the beam library in
the same release. The beam library also allowed for the analysis of PBEAML properties, but their
design was deferred until the Version 70.7 release.
Mode tracking
Formatted design sensitivity prints
Support for multiple boundary conditions (normal modes, buckling and flutter). Multiple static
boundary conditions were first supported in Version 68.
Version  70
Adjoint sensitivity analysis
Version 70.5
Rigid element sensitivities with shape design changes
Simplified design of beams
Version 70.7
Design of the PBEAML
Material and connectivity sensitivity
Total weight response
In earlier releases, the weight was computed by multiplying the structural volume by the density of
the material. This neglected any non-structural mass and concentrated masses.
Extend the DRESP2
This entailed a number of new features. More significant ones include the ability to include material
and connectivity properties and the ability to reference a DRESP2.
Enhanced design data in the punch file
Output of a comma separated values (CSV) file with design data that can be read into a spreadsheet&lt;/p&gt;
&lt;p&gt;5 Preface
About this Book
Main Index
MSC Nastran 2001
Complex eigenvalue sensitivity and optimization
Discrete variable optimization
Random response sensitivity and optimization
Fully stressed design
MSC Nastran 2004
External Response (DRESP3)
Eigenvector sensitivity and optimization
Subcase dependent frequency excitation sets
Prior to this enhancement, it was necessary to use the same set of excitation frequencies in each
frequency response subcase.
DMP and ACMS technology
Punch of a complete, unsorted Bulk Data file
Rayleigh Quotient Approximation for eigenvalues/eigenfrequencies
Spanning of subcases and superelements
PSD response sensitivity and optimization
DESVAR Case Control command
Removal of property limit constraints that are redundant with design variable limits
MSC Nastran 2005
Topology optimization
Composite strength ratio response
Beta and match function for the DRESP2.
ADS optimizer
BIGDOT optimizer
Transformation of approximate optimization task for a feasible design
MSC Nastran 2005 R2
Topology Optimization
Zero Density Material
High’s method for eigenvector sensitivity and optimization
Design of PBRSECT and PBMSECT
MD Nastran R1 and MSC 2005 R3
Topology optimization with manufacturability constraints
Revised Optimizer options
Supporting Trust Regions in SOL 200 for Adaptive Move Limits&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
About this Book6
Main Index
Support of analysis model value overriding design model value
MD Nastran R2 and MD Nastran R2.1
Topology optimization enhancements
Automatic External Superlement Optimization
MD Nastran R3 and MSC Nastran 2008 R1
Enhancements in DRESP3
Topometry Optimization
Topography Optimization
Permanent glued contact modeling in SOL 200
Randomization of an Input data file
Random elimination of element types
Optimization of nonlinear structural responses (pre-release)
MD Nastran 2010
Design of Part Superelements
Integer input for DTABLE/DTABLE2
Invariant DRESP3 gradients
Design of monitor points
Parallel design sensitivities
IPOPT Optimization Algorithm
Optimization of nonlinear response with topology and contact
Multi-Model Optimization - MultiOPT
BIGDOT and DOT are not supplied with MD Nastran 2010. Default Optimizers changed to
MSCADS and IPOPT.
MSC NASTRAN 2011
OpenMDO - allows user to insert their own Optimizer.
MSC NASTRAN 2012
Design of Control Surfaces
MSC NASTRAN 2013
ERP and Fatigue responses
MSC NASTRAN 2014
Fatigue responses for Spot and Seam welds&lt;/p&gt;
&lt;p&gt;7 Preface
List of MSC Nastran Guides
Main Index
Design of Loads
MSC NASTRAN 2014.1
Weight as a function of material or property ID.
MSC NASTRAN 2016
Global Optimization
MSC NASTRAN 2017
Stress constraints in Topology Optimization with solids.
Maximum thickness constraints in Topology Optimization.
MSC NASTRAN 2018
Stress constraints in Topology and Topometry Optimization with shells.
Optimization with Multiple Mass Configurations.
List of MSC Nastran Guides
A list of some of the MSC Nastran guides is as follows:
Installation and Release Guides
Installation and Operations Guide
Release Guide
Reference Guides
Quick Reference Guide
DMAP Programmer’s Guide
Reference Guide
Utilities Guide
Getting Started Guide
SOL 400 Getting Started Guide
MSC Nastran Error Messages Guide
Demonstration Guides
Linear Analysis
Implicit Nonlinear (SOL 400)
Explicit Nonlinear (SOL 700)
MSC Nastran Verification Guide
User’s Guides
Automated Component Modal Synthesis (ACMS)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Technical Support8
Main Index
You may find any of these documents from Hexagon at:
&lt;a href=&#34;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&lt;/a&gt;
Technical Support
For technical support phone numbers and contact information, please visit:
&lt;a href=&#34;https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304&lt;/a&gt;
Support Center ( &lt;a href=&#34;http://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://simcompanion.hexagon.com&lt;/a&gt;)
The SimCompanion link above gives you access to the wealth of resources for Hexagon products. Here you
will find product and support contact information, product documentations, knowledge base articles,
product error list, knowledge base articles and SimAcademy Webinars. It is a searchable database which allows
you to find articles relevant to your inquiry. Valid MSC customer entitlement and login is required to access
the database and documents. It is a single sign-on that gives you access to product documentation for
complete list of products from Hexagon, allows you to manage your support cases, and participate in our
discussion forums.
Training and Internet Resources
The Hexagon corporate site has the information on the latest events, products, and services for the
CAD/CAE/CAM marketplace.
Design and Engineering e-LearningAccess Manual
Aeroelastic Analysis
Design Sensitivity and Optimization
DEMATD
Dynamic Analysis
Embedded Fatigue
Embedded Vibration Fatigue
Explicit Nonlinear (SOL 700)
High Performance Computing
Linear Static Analysis
Nonlinear (SOL 400)
Numerical Methods
Rotordynamics
Superelements and Modules
Thermal Analysis
User Defined Services&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P10</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_010/</guid>
      <description>
        
        
        &lt;p&gt;169 Chapter 4: Input Data
Bulk Data Entries
Main Index
Example:
DRESP3 1 LBUCK TAILWNG BUCK
DESVAR 101 3 4 5 1 205 209
201
DTABLE PI YM L
DRESP1 14 1 4 22 6 33 2
DNODE 14 1 4 1 22 3
2 1 43 1
DVPREL1 101 102
DVCREL1 201 202
DVMREL1 301
DVPREL2 401 402
DVCREL2 501
DVMREL2 601 602 603
DRESP2 50 51
USRDATA 1234 Material Constants
Field Contents
ID Unique identification number.  (Integer &amp;gt;0)
LABEL User-defined label.  (Character)
GROUP Group of external response that this type belongs to. (Character)
TYPE External response type. (Character)
“DESVAR” Flag indicating DESVAR entry identification numbers.  (Character)
DVIDi DESVAR entry identification number.  (Integer &amp;gt;0)
“DTABLE” Flag indicating that the labels for the constants in a DTABLE entry follow.  (Character)
LABLj Label for a constant in the DTABLE entry.  (Character)
“DRESP1” Flag indicating DRESP1 entry identification numbers.  (Character)
NRk DRESP1 entry identification number.  (Integer &amp;gt;0)
“DNODE” Flag signifying that the following fields are grid points.
Gm Grid point identification number. (Integer &amp;gt;0)
Cm Degree-of-freedom number of grid point GM.  (1&amp;lt;Integer &amp;lt;3)
DVPREL1 Flag indicating DVPREL1 entry identification number.  (Character)
DPIPi DVPREL1 entry identification number.  (Integer &amp;gt;0)
DVCREL1 Flag indicating DVCREL1 entry identification number. (Character)
DCICi DVCREL1 entry identification number. (Integer &amp;gt; 0)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries170
Main Index
Associated Entries:
The DCONSTR entry can be used to place bounds on a DRESP3 response using the DRESP3 entry ID as
a reference:
The DESOBJ Case Control command can also reference the DRESP3 entry ID.
Discussion:
As discussed in Design Responses , the DRESP3 entry enables the consideration of responses that are not
direct MSC  Nastran quantities and that cannot be formulated from MSC  Nastran quantities through the use
of the DRESP2 entry. Instead, the DRESP3 invokes an API (application programming interface) to compute
the response using a combination of MSC N astran supplied data and user supplied data and algorithms. It is
seen that the input format for the DRESP3 is very similar to the DRESP2 in that it permits a variety of types
of information to be used as arguments. The DRESP3 does not use the DEQATN, so there is no EQID
identified. Instead, the GROUP name refers to an FMS CONNECT entry (See File Management ) that
defines the API evaluator while the TYPE argument identifies the particular response type that is to be used
to evaluate the response. Another difference from the DRESP2 is the provision for another type of data
designed USRDATA. This character string data provides a convenient way of communicating to the API and
can include, for example, a file name that needs to be opened or some special instructions. The server
program parses this character string and takes the appropriate action. As with the DRESP2, it is necessary to DVMREL1 Flag indicating DVPREL2 entry identification number. (Character)
DMIMi DVMREL1 entry identification number. (Integer &amp;gt; 0)
DVMPREL2 Flag indicating DVPREL2 entry identification number. (Character)
DPI2Pi DVPREL2 entry identification number. (Integer &amp;gt; 0)
DVCREL2 Flag indicating DVCREL2 entry identification number. (Character)
DCI2Ci DVCREL2 entry identification number. (Integer &amp;gt; 0)
DVMREL2 Flag indicating DVMREL2 entry identification number. (Character)
DMI2Mi DVMREL2 entry identification number. (Integer &amp;gt; 0)
DRESP2 Flag indicating other DRESP2 entry identification number. (Character)
NRRk DRESP2 entry identification number. (Integer &amp;gt; 0)
DVLREL1 Flag indicating other DVLREL1 entry identification number. (Character)
DLILi DVLREL1 entry identification number. (Integer &amp;gt; 0)
USRDATA Flag indicating user input data. (Character)
DCONSTR DCID RID LALLOW UALLOWField Contents
DESOBJmin
maxn=&lt;/p&gt;
&lt;p&gt;171 Chapter 4: Input Data
Bulk Data Entries
Main Index
use the DRSPAN Case Control command when the DRESP1 or DRESP2 q uantities come from more than
one subcase.
DSCREEN
Purpose:
Defines override information necessary to screen the constraints for temporary deletion.
Entry Description:
Associated Entries:
The regions for constraint screening are automatically established by default. These defaults can be
overridden though and new ones can be established by defining new regions on the DRESP1, DRESP2 or
DRESP3 entries.
Discussion:
To reduce the costs associated with the sensitivity analysis and to reduce the size of the optimization problem,
many of the noncritical constraints are dynamically deleted during the optimization process. Default values
of parameters that control the screening process can be overridden using DSCREEN entries. Since these
defaults are often satisfactory, including DSCREEN entries is often unnecessary. One application where it
has utility is when you are performing a sensitivity analysis and want to make sure that the sensitivities of all DSCREEN RTYPE TRS NSTR
Field Contents
RTYPE Response type for which the screening criteria apply. (Character)
TRS T runcation threshold. (Real; Default = -0.5)
NSTR Maximum number of constraints to be retained per region per load case.
(Integer &amp;gt; 0; Default = 20)
DRESP1 ID LABEL RTYPE PTYPE REGION ATTA ATTB ATT1
ATT2 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-
“DTABLE” LABL1 LABL2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-
“DRESP2” NRR1 NRR2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries172
Main Index
the responses of interest are provided. The TRS value can then be set to a large negative number (say -1000.)
and the NSTR value can be set to a number equal to or greater than the number of responses.
The RTYPE refers to the RTYPE used on the DRESP1. For the DRESP2’s, the applicable RTYPE is EQUA.
For the DRESP3’s, the applicable RTYPE for constraint screening is DRESP3. RTYPE= ALL supports the
special case where the user wants to retain all the responses without the need for a separate DSCREEN entry
for each type. The NSTR and TRS values prescribed when RTYPE=ALL are applied to all response types and
any other DSCREEN entries that are present in the input file are ignored. Constraint screening is performed
in two stages. In the first step, deletion, the constraint values that fall below a certain threshold level are
deleted from the constraint set. The default threshold level is -0.5, but this can be overridden by specifying a
TRS value on the DSCREEN entry. In MSC Nastran, the normalized constraints are considered violated if
they are positive quantities. The default TRS states that only those constraints that are within 50% of their
critical values are retained.
The second step, regionalization, sorts the remaining constraints and retains up to a prescribed maximum per
region per load case. The default region specifications are given in Table 4-3 as a function of Response type.
NSTR, or the number of constraints to be retained per region, has a default value of 20, which again can be
overridden. The NSTR value can not be used for response types WEIGHT , VOLUME, EIGN, LAMA,
CEIG, FRMASS, COMP and TOTSE.
DTABLE
Purpose:
Defines a table of constants to be used in conjunction with DEQATN equations.
Entry Description:
Associated Entries:
DRESP2, DRESP3, SEDRSP2, SEDRSP3 and DVPREL2, DVCREL2, DVMREL2 entries list the input
arguments to equations that define synthetic response and property relations, respectively. These input
arguments may include table constants defined on the DTABLE entry.DTABLE LABL1 VALU1 LABL2 VALU2 LABL3 VALU3 LABL4 VALU4
LABL5 VALU5 LABL6 VALU6 -etc.-
Field Contents
LABLi Label for the constant. (Character)
VALUi Value of the constant. (Real or Integer)
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-
“DTABLE” LABL1 LABL2 -etc.-
“DRESP1&amp;quot; NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;173 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
Constants used in equations can either be “built into” the DEQATN entry when the equation is defined or
passed in as arguments. Building-in the values of constants may be inconvenient and can prevent one
equation from easily being used in different contexts.
The DTABLE entry allows these constants to be stored in a table and then used in the equations as necessary.
On the DTABLE entry, a constant is given a name and a value. When the “DTABLE” argument list is defined
on a DVPREL2 or other entry, the constant is referenced by its name.
Multiple DTABLE entries may appear in the Bulk Data.
For PART SE, if LABLi is referenced on SEDRSP2 and/or SEDRSP3, DTABLE entries must be placed in a
PART SE where companion design model entries, such as DESVAR, DRESP1 and etc, are available.
If the VALUi is an integer, this points to the ID of a TABLEDx Bulk Data entry that lists the constants as a
function of frequency or time.
DTABLE2
Purpose
Defines real constants from a field of property, material or connections bulk data entries which then can be
used with DEQATN equations.
Entry Description:DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-
“DTABLE” LABL1 LABL2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DVPREL2 ID TYPE PID FID PMIN PMAX EQID
“DESVAR” DVID1 DVID2 DVID3 -etc.-
“DTABLE” LABL1 LABL2 LABL3 -etc.-
DVCREL2 ID TYPE EID CPNAME CPMIN CPMAX EQID
“DESVAR” DVID1 DVID2 DVID3 -etc.-
“DTABLE” LABL1 LABL2 LABL3 -etc.-
DVMREL2 ID TYPE MID MINAME MPMIN MPMAX EQID
“DESVAR” DVID1 DVID2 DVID3 -etc.-
“DTABLE” LABL1 LABL2 LABL3 -etc.-
1 2 3 4 5 6 7 8 9 10&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries174
Main Index
Discussion:
LABLi on DTABLE2 and DTABLE must be unique. LABLi on DTABLE2 can be referenced under
DTABLE flag of DVxREL2 (where x=P , M or C)/DRESP2/DRESP3/SEDRSP2/SEDRSP3. Values for the
FNAMEi field of the PNAMEi Bulk Data entry with the ID of PIDi are taken from analysis model before
updating of analysis values with the designed value. If the updated value is desired, use the DVxREL2 flag on
DRESP2 or DRESP3 entries instead. FNAMEi must be the same as the character string that appears on the
PNAMEi Bulk Data entry.
DVBSHAP
Purpose:
Defines a shape basis vector as a linear combination of analytic boundary shapes solutions and assigns a design
variable to the result.
Entry Description:
Associated Entries:
Design variables must first be defined using DESVAR entries.DTABLE2 LABL1 PNAME1 PID1 FNAME1 LABL2 PNAME2 PID2 FNAME2
LABL3 PNAME3 PID3 FNAME3
Field Contents
LABLi Label for the constant. ( Character)
PNAMEi Property, material or connection bulk data entry name. (Character)
PIDi ID of PNAMEi entry. (Integer &amp;gt; 0)
FNAMEi Field name of PNAMEi. (Character)
DVBSHAP DVID AUXMOD COL1 SF1 COL2 SF2 COL3 SF3
Field Contents
DVID Design variable identification number of a DESVAR entry. (Integer &amp;gt;0)
AUXMOD Auxiliary model identification number. (Integer &amp;gt; 0)
Coli Load sequence identification number from AUXMODEL Case Control
command. (Integer &amp;gt; 0)
SFi Scaling factor for load sequence identification number. (Real; Default = 1.0)
DESVAR ID LABEL XINIT XLB XUB DELXV&lt;/p&gt;
&lt;p&gt;175 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
In shape optimization, shape basis vectors relate the changes in a design variable to changes in grid locations.
Analytical Boundary Shapes are calculated in an auxiliary model as described in Relating Design Variables to
Shape Changes . The DVBSHAP entry is then used to identify the auxiliary model and then apply scale
factors to a series of solution vectors. If multiple DVBSHAP entries share the same design variable ID, the
shapes are added.
DVCREL1
Purpose:
Defines the relation between a connectivity property and design variables.
Entry Description:
Associated Entries:
Design variables are referenced on DVCREL1 entries by their DESVAR-defined IDs.DVCREL1 ID TYPE EID CFNAME CPMIN CPMAX C0
DVID1 COEF1/
PVALDVID2 COEF2 DVID3 COEF3 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
TYPE Name of an element connectivity entry, such as “CBAR”, “CQUAD”, etc.
(Character)
EID Element Identification number. (Integer &amp;gt; 0)
CPNAME Name of connectivity property, such as “X1”, “X2”, “X3”, “ZOFFS”, etc.
(Character)
CPMIN Minimum value allowed for this property. If CPNAME references a connectivity
property that can only be positive, then the default value of CPMIN is 1.0E-20.
Otherwise, it is -1.0E35. (Real)
CPMAX Maximum value allowed for this property. (Real; Default = 1.0E+20)
C0 Constant term of relation. (Real; Default = 0.0)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)
COEFi Coefficient of linear relation. (Real)
‘PVAL’ Flag to indicate COEF2 is to be set to the current connectivity property.
(Character = PVAL)
DESVAR ID LABEL XINIT XLB XUB DELXV&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries176
Main Index
The DVCREL1 can be included in DRESP2 or DRESP3 entries:
Discussion:
A “connectivity” property is one that has been defined on a Bulk Data entry that begins with the letter “C”.
The design of these properties enables you to design things such as beam offsets and concentrated masses. A
connectivity property can be expressed as a linear combination of design variables as
Both independent as well as dependent design variables can appear in this relation (see the DLINK entry).
This form is especially useful in the sense that it can be used to express not only a simple one-to-one
correspondence between a design variable and a property, but more complex reduced basis formulations as
well.
The CPNAME is a character string that identifies the required property value by using the same name as that
given in the MSC Nastran Quick Reference Guide . Table 2-3 of this User’s Guide identifies the properties
that are available for design.
It is seen that limits can be placed on the property by specifying CPMIN and CPMAX values. This is in
addition to the limits that are provided by the XLB/XUB fields on the DESVAR entries. If possible, the limits
on the DESVAR entries should be more restrictive than those on the DVCREL1 entries. This is because the
optimizer will never allow a design variable limit to be violated, but it may allow a property limit to be
violated if this seems to help satisfy some other violated constraint. Violating a connectivity constraint could
have disastrous results if it produces an element that is physically meaningless.
It is seen that there is a redundancy in the computation of the connectivity property value in that it is the
product of the user defined coefficients and the design variable value. A guideline is that the coefficients
should be specified in a way that allows the design variable values to be near unity. The optimizer performs
best when all the design variables are in the same range and, in particular, when they are all on the order of 1.0. DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVCREL1” DCIC1 DCIC2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;“DVCREL1” DCIC1 DCIC2 -etc.-
p1c0= c1x1c2x2 cnxn+ + + +&lt;/p&gt;
&lt;p&gt;177 Chapter 4: Input Data
Bulk Data Entries
Main Index
If the term ‘PVAL’ is entered in the COEF1 field, this is a flag that the COEF1 value is to be obtained from
the corresponding property on the connectivity entry.  This simplifies the process of completing this entry
when the desire is to have a one-to-one correspondence between the designed variable and the designed
property.  The assumption is that the DESVAR entry identified by DVID1 is 1.0.&lt;br&gt;
DVCREL2
Purpose:
Defines a connectivity property by reference to an equation defined on a DEQATN entry.
Entry Description:
Associated Entries:
To define a synthetic property relation, the DVCREL2 entry identifies a DEQATN entry and declares the
design variable (DESVAR) and any necessary table constant (DTABLE) arguments.DVCREL2 ID TYPE EID CPNAME CPMIN CPMAX EQID
“DESVAR” DVID1 DVID2 -etc.-
“DTABLE” LABl1 LABL2 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
TYPE Name of an element connectivity entry, such as “CBAR”, “CBEAM”, etc.
(Character)
EID Element Identification number. (Integer &amp;gt; 0)
CPNAME Connectivity property name, such as “Z1”, “ZOFFS”, etc. (Character)
CPMIN Minimum value allowed for this property. If CPNAME references a connectivity
property that can only be positive, then the default value of CPMIN is 1.0E-20.
Otherwise, it is -1.0E35. (Real)
CPMAX Maximum value allowed for this property. (Real; Default = 1.0E20)
EQID DEQATN entry identification number. (Integer &amp;gt; 0)
“DESVAR” DESVAR flag. Indicates that the IDs of DESVAR entries follow. (Character)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)
“DTABLE” DTABLE flag. Indicates that the IDs for the constants in a DTABLE or
DTABLE2 entry follow. This field may be omitted if there are no constants
involved in this relation. (Character)
LABi Label for constant on the DTABLE or DTABLE2 entry. (Integer &amp;gt; 0)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries178
Main Index
The DVCREL2 entries can be included in DRESP2 or DRESP3 entries.
Discussion:
For some applications, the linear design variable-to-property relations provided by the DVCREL1 entry may
not be sufficient. In these cases, equations may be defined to relate design variables to properties in a
nonlinear fashion. The DVCREL2 entry provides the arguments to an equation defined on a DEQATN
entry. These arguments may be design variables defined on DESVAR entries and table constants defined on
a DTABLE or DTABLE2 entry.
Every property defined on a DVCREL2 entry becomes an independently varying property internally in MSC&lt;br&gt;
Nastran. Design sensitivities are first computed with respect to these independently varying properties, and
then the chain rule applied to relate these sensitivities to changes in the design variables. Care should be taken
to not use the DVCREL2 entry when the relationship between the design variable and the connectivity
property is linear; the DVCREL1 entry should be used in this case. This is because the DVCREL2 entry
requires the added design sensitivity calculations and could therefore impact the performance. DEQAT
NEQID EQUATION
EQUATION (Cont.)
DESVAR ID LABEL XINIT XLB XUB DELXV
DTABLE LABL1 VALU1 LABL2 VALU2 LABL3 VALU3 LABL4 VALU4
LABL5 VALU5 LABL6 VALU6 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVCREL2” DCIC1 DCIC2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;“DVCREL2” DCIC1 DCIC2 -etc.-&lt;/p&gt;
&lt;p&gt;179 Chapter 4: Input Data
Bulk Data Entries
Main Index
DVGRID
Purpose:
Defines design variable-to-grid coordinate relations for shape sensitivity and optimization.
Entry Description:
Associated Entries:
The DESVAR entry defines a design variable that can be used to describe grid variations as well as other
design relations. The GRID entry (not shown) provides the baseline locations for the designed grid.
Discussion:
Changes in grid coordinate values are expressed as functions of design variables according to the relation
where changes in the i-th grid point are expressed in terms of changes in the j-th design variable. If the
number of design variables is less than the number of grid points, this relation is called a reduced basis
formulation. Reduced basis formulations are discussed in Basis Vectors in Shape Optimization .
The DVGRID entry defines the particular grid point, design variable, and components of each {T}ij vector.
Multiple references to the same grid point and design variable pair result in vectorial addition of the
corresponding {T}ij.
Other shape basis vector definition methods utilize DVBSHAP and DVSHAP Bulk Data entries.DVGRID DVID GID CID COEFF N1 N2 N3
Field Contents
DVID DESVAR entry identification number. (Integer &amp;gt; 0)
GID Grid point identification number. (Integer &amp;gt; 0)
CID Coordinate system identification number. (Integer &amp;gt; 0; Default = 0)
COEFF Multiplier of the vector defined by Ni. (Real; Default = 0.0)
Ni Components of the vector measured in the coordinate system defined by CID.
(Real; at least one )
DESVAR ID LABEL XINIT XLB XUB DELXVNi0.0
Gi Tij
j= xj&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries180
Main Index
DVLREL1
Purpose:
Defines the linear relation between analysis model loading and design variables  in SOL 200 with ANALYSIS
= STATICS .
Entry Description:
Associated Entries:
Design variables are referenced on DVLREL1 entries by their DESVAR-defined IDs.
The DVLREL1 can be included in DRESP2 or DRESP3 entries: DVLREL1 ID TYPE SID LNAME LMIN LMAX C0&lt;br&gt;
ATT1 ATT2 ATT3 ATT4 ATT5
DVID COEF DVID2 COEF2 DVID3 Etc
Field Contents
ID Unique identification number (Integer&amp;gt;0)
TYPE Name of Load, such as FORCE. (Character)
SID Load set ID (Integer&amp;gt;0)
LNAME Load Name, such as F or N1 on the FORCE entry. (Character)
LMIN Minimum value for the load. (Real, default=-1.0e35)
LMAX Maximum value for the load (Real, Default=1.0e20)
C 0 Constant term of relation (Real, Default=0.0)
ATTi Attributes of the designed load, see Table 4.5 (Integer&amp;gt;0 or blank)
DVIDi DESVAR entry identification number. (Integer&amp;gt;0)
COEFi Coefficient of linear relation or keyword= “PVAL”, (If i=1, Real or Character; if i&amp;gt;1,
Real)
DESVAR ID LABEL XINIT XLB XUB DELXV
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVLREL1” DLIL1 DLIL2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;p&gt;181 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
A “load” property is one that has been defined on a FORCE, MOMEMT or LOAD Bulk Data entry. The
design of these properties enables you to investigate the effect an external load has on designated responses in
a Statics Analysis. It is noted that this design quantity is limited in the applied loads entries that it can design
and that is it is limited to subcases with ANALYSIS=STATICS  and indirectly for subcases with
ANALYSIS=BUCKLING.  The primary application of the DVLREL1 at this point is felt to be in sensitivity
analysis. A particular instance is where a global/local analysis is being performed and you can now determine
how the internal loads from the global analysis drive responses in a local analysis when they become applied
loads in the local analysis. A load property can be expressed as a linear combination of design variables as
Both independent as well as dependent design variables can appear in this relation (see the DLINK entry).
This form is especially useful in the sense that it can be used to express not only a simple one-to-one
correspondence between a design variable and a property, but more complex reduced basis formulations as
well.
The LNAME is a character string that identifies the required property value by using the same name as that
given in the MSC Nastran Quick Reference Guide . Table 2-4 of this User’s Guide identifies the properties that are
available for design.
It is seen that limits can be placed on the property by specifying LPMIN and LPMAX values. This is in
addition to the limits that are provided by the XLB/XUB fields on the DESVAR entries. If possible, the limits
on the DESVAR entries should be more restrictive than those on the DVLREL1 entries. This is because the
optimizer will never allow a design variable limit to be violated, but it may allow a load limit to be violated if
this seems to help satisfy some other violated constraint.
It is seen that there is a redundancy in the computation of the load property value in that it is the product of
the user defined coefficients and the design variable value. A guideline is that the coefficients should be
specified in a way that allows the design variable values to be near unity. The optimizer performs best when
all the design variables are in the same range and, in particular, when they are all on the order of 1.0.
If the term ‘PVAL’ is entered in the COEF1 field, this is a flag that the COEF1 value is to be obtained from
the corresponding property on the load entry. This simplifies the process of completing this entry when the
desire is to have a one-to-one correspondence between the designed variable and the designed load. The
assumption is that the DESVAR entry identified by DVID1 is 1.0.&lt;br&gt;
DVMREL1
Purpose:
Defines the relation between a material property and design variables.- - - -&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;“DVLREL1” DLIL1 DLIL2 -etc.-
p1c0= c1x1c2x2 cnxn+ + + +&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries182
Main Index
Entry Description:
Associated Entries:
Design variables are referenced on DVMREL1 entries by their DESVAR-defined IDs.
The DVMREL1 can be included in DRESP2 or DRESP3 entries:DVMREL1 ID TYPE MID MPNAME MPMIN MPMAX C0
DVID1 COEF1/
&amp;lsquo;PVAL’DVID2 COEF2 DVID3 COEF3 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
TYPE Name of a material property entry, such as “MAT1”, “MAT2”, etc. (Character)
MID Material Identification number. (Integer &amp;gt; 0)
MPNAME Name of material property, such as “E”, “RHO”, etc. (Character)
MPMIN Minimum value allowed for this property. If MPNAME references a material
property that can only be positive, then the default value of MPMIN is 1.0E-20.
Otherwise, it is -1.0E35. (Real)
MPMAX Maximum value allowed for this property. (Real; Default = 1.0E+20)
C0 Constant term of relation. (Real; Default = 0.0)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)
COEFi Coefficient of linear relation. (Real)
‘PVAL’ Flag to indicate COEF1 is to be set to the current material property.
(Character = ‘PVAL’)
DESVAR ID LABEL XINIT XLB XUB DELXV
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVMREL1” DMIM1 DMIM2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVMREL1” DMIM1 DMIM2 -etc.-&lt;/p&gt;
&lt;p&gt;183 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
A material property is a real number that has been defined on a MATi Bulk Data entry. The design of these
properties allows you to vary such key parameters as Young’s Modulus and material density. A material
property can be expressed as a linear combination of design variables as
Both independent as well as dependent design variables can appear in this relation (see the DLINK entry).
This form can be used to express not only a simple one-to-one correspondence between a design variable and
a property, but more complex reduced basis formulations as well.
The MPNAME is a character string that identifies the required property value by using the same name as
that given in the  MSC Nastran Quick Reference Guide . Table 2-2 of this User’s Guide identifies the properties
that are available for design.
It is seen that limits can be placed on the property by specifying MPMIN and MPMAX values. This is in
addition to the limits that are provided by the XLB/XUB fields on the DESVAR entries. If possible, the limits
on the DESVAR entries should be more restrictive than those on the DVMREL1 entries. This is because the
optimizer will never allow a design variable limit to be violated, but it may allow a property limit to be
violated if this seems to help satisfy some other violated constraint. Violating a material property constraint
could have disastrous results if it produces a material that is physically meaningless.
It is seen that there is a redundancy in the computation of the material property value in that it is the product
of the user defined coefficients and the design variable value. A guideline is that the coefficients should be
specified in a way that allows the design variable values to be near unity. The optimizer performs best when
all the design variables are in the same range and, in particular, when they are all on the order of 1.0.
If the term ‘PVAL’ is entered in the COEF1 field, this is a flag that the COEF1 value is to be obtained from
the corresponding property on the material entry.  This simplifies the process of completing this entry when
the desire is to have a one-to-one correspondence between the designed variable and the designed property.&lt;br&gt;
The assumption is that the DESVAR entry identified by DVID1 is 1.0.&lt;br&gt;
DVMREL2
Purpose:
Defines a connectivity property by reference to an equation defined on a DEQATN entry.
Entry Description:
DVMREL2 ID TYPE EID MPNAME MPMIN MPMAX EQID
“DESVAR” DVID1 DVID2 -etc.-
“DTABLE” LABL1 LABL2 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
TYPE Name of a material property entry, such as “MAT1”, “MAT2”, etc. (Character)p1c0= c1x1c2x2 cnxn+ + + +&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries184
Main Index
Associated Entries:
To define a synthetic property relation, the DVMREL2 entry identifies a DEQATN entry and declares the
design variable (DESVAR) and any necessary table constant (DTABLE, DTABLE2) arguments.
The DVMREL2 entries can be included in DRESP2 or DRESP3 entries.MID Material Identification number. (Integer &amp;gt; 0)
MPNAME Name of material property, such as “E”, “RHO”, etc. (Character)
MPMIN Minimum value allowed for this property. If MPNAME references a material
property that can only be positive, then the default value of MPMIN is 1.0E-20.
Otherwise, it is -1.0E35. (Real)
MPMAX Maximum value allowed for this property. (Real; Default = 1.0E+20)
EQID DEQATN entry identification number. (Integer &amp;gt; 0)
“DESVAR” DESVAR flag. Indicates that the IDs of DESVAR entries follow. (Character)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)
“DTABLE” DTABLE flag. Indicates that the IDs for the constants in a DTABLE or
DTABLE2 entry follow. This field may be omitted if there are no constants
involved in this relation. (Character)
LABi Label for a constant on the DTABLE or DTABLE2 entry. (Integer &amp;gt; 0)
DEQAT
NEQID EQUATION
EQUATION (Cont.)
DESVAR ID LABEL XINIT XLB XUB DELXV
DTABLE LABL1 VALU1 LABL2 VALU2 LABL3 VALU3 LABL4 VALU4
LABL5 VALU5 LABL6 VALU6 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVMREL2” DMI2M1 DMI2M2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;185 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
For some applications, the linear design variable-to-property relations provided by the DVMREL1 entry may
not be sufficient. In these cases, equations may be defined to relate design variables to material properties in
a nonlinear fashion. The DVMREL2 entry provides the arguments to an equation defined on a DEQATN
entry. These arguments may be design variables defined on DESVAR entries and table constants defined on
a DTABLE or DTABLE2 entry.
Every property defined on a DVMREL2 entry becomes an independently varying property internally in
MSC Nastran. Design sensitivities are first computed with respect to these independently varying properties,
and then the chain rule applied to relate these sensitivities to changes in the design variables. Care should be
taken to not use the DVMREL2 entry when the relationship between the design variable and the material
property is linear; the DVMREL1 entry should be used in this case. This is because the DVMREL2 entry
requires the added design sensitivity calculations and could therefore impact the performance.
DVPREL1
Purpose:
Defines the relation between an analysis model property and design variables.
Format:
Example:- - - - - -
“DVMREL2” DMI2M1 DMI2M2 -etc.-
1 2 3 4 5 6 7 8 9 10
DVPREL1 ID TYPE PID PNAME/
FIDPMIN PMAX C0
DVID1 COEF1/
‘PVAL’DVID2 COEF2 DVID3 -etc.-
DVPREL1 12 PBAR 612 6 0.2 3.0
4 0.25 20 20.0 5 0.3
Field Contents
ID Unique identification number.  (Integer &amp;gt;0)
TYPE Name of a property entry, such as “PBAR”, “PBEAM”, etc.  (Character)
PID Property entry identification number.  (Integer &amp;gt;0)
PNAME/FlD Property name, such as “T”, “A”, or field position of the property entry, or word
position in the element property table of the analysis model.  (Character or Integer  
0)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries186
Main Index
Associated Entries:
Design variables are referenced on DVPREL1 entries by their DESVAR-defined IDs.
The DVPREL1 IDs can be included in DRESP2 or DRESP3 entries:
Discussion:
An analysis model property can be expressed as a linear combination of design variables as
Both independent as well as dependent design variables can appear in this relation (see the DLINK entry).
This form can be used to express not only a simple one-to-one correspondence between a design variable and
a property, but more complex reduced basis formulations as well.PMIN Minimum value allowed for this property.  If FID references a stress recovery location,
then the default value for PMIN is -1.0 +35. PMIN must be explicitly set to a
negative number for properties that may be less than zero (for example, field ZO on
the PCOMP entry).  (Real; Default =1.0E-20)
PMAX Maximum value allowed for this property.  (Real; Default =1.0E+20)
C0 Constant term of relation.  (Real; Default =0.0)
DVIDi DESVAR entry identification number.  (Integer &amp;gt;0)
COEFi Coefficient of linear relation.  (Real)
‘PVAL’ Flag to indicate COEF1 is to be set to the current property value
(Character = ‘PVAL’)
DESVAR ID LABEL XINIT XLB XUB DELVXV
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DVPREL1” DPIP1 DPIP2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;“DVPREL1
”DPIP1 DPIP2 -etc.-Field Contents
p1c0= c1x1c2x2 cnxn+ + + +&lt;/p&gt;
&lt;p&gt;187 Chapter 4: Input Data
Bulk Data Entries
Main Index
The TYPE typically identifies the property type; e.g., PBAR, being designed with TYPE=GPLY a special case
that allows for the design of a global ply id that can span multiple PCOMPG entries.
The PNAME is a character string that identifies the required property value by using the same name as that
given in the MSC Nastran Quick Reference Guide . Table 2-1 of this User’s Guide identifies the properties that
are available for design.
Limits can be placed on the property by specifying PMIN and PMAX values. This is in addition to the limits
that are provided by the XLB/XUB fields on the DESVAR entries. If possible, the limits on the DESVAR
entries should be more restrictive than those on the DVPREL1 entries. This is because the optimizer will
never allow a design variable limit to be violated, but it may allow a property limit to be violated if this seems
to help satisfy some other violated constraint. Violating a material property constraint could have disastrous
results if it produces a material that is physically meaningless.
Note that there is a redundancy in the computation of the property value in that it is the product of the user
defined coefficients and the design variable value. A guideline is that the coefficients should be specified in a
way that allows the design variable values to be near unity. The optimizer performs best when all the design
variables are in the same range and, in particular, when they are all on the order of 1.0.
If the term ‘PVAL’ is entered in the COEF1 field, this is a flag that the COEF1 value is to be obtained from
the corresponding property entry.  This simplifies the process of completing this entry when the desire is to
have a one-to-one correspondence between the designed variable and the designed property.  The assumption
is that the DESVAR entry identified by DVID1 is 1.0.&lt;br&gt;
Guidelines for the PCOMP and PCOMPG Entries
Table 2-1 indicates that all the real values on the PCOMP and PCOMPG entries can be designed. T wo of
these merit further discussion
The ZO property indicates the offset from the reference plane to the bottom surface. If this is left blank, the
value defaults to half the total thickness. It is not necessary to design the ZO quantity if the user input value
is blank and the half thickness value is acceptable since the ZO value adjusts to half the total thickness in this
case.
The ORIENTi field is a difficult property to design since the composite materials vary as the fourth power
of the quantity. Suggested guidelines are to:
Limit the allowable movement of the designed orientation to no more than +20o.
Avoid design variable values of 0.0 because it is difficult to move away from this value. It is better to
apply an offset such as i = -1 + Xi so that an Xi of 1.0 gives a zero orientation angle.
A special situation occurs for the PCOMPG where it is likely that the user wants to design the thickness or
orientation of a ply id that spans multiple PCOMPG entries. In this case, as discussed above, the TYPE is set
to GPLY. Then the PID is set to the PLY ID value on the PCOMPG’s and the PNAME can be either T or
THETA. In this situation, the relationship between the global ply value and the design variables is given by:
for PNAME=T or THETA PiC0 T0i or THETA0i  COEFjXDVIDj 
j + =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries188
Main Index
Use of the C0 term is not recommended in this situation and it is seen the designed property uses the initial
thickness or theta value in its computation. This is because a global ply can have different thicknesses on
different PCOMPG entries. If THETA0 is initially zero, it is reset to 1.0 in this case.
DVPREL2
Purpose:
Defines a structural property by reference to an equation defined on a DEQATN entry.
Entry Description:
Associated Entries:
To define a synthetic property relation, the DVPREL2 entry identifies a DEQATN entry and declares the
design variable (DESVAR) and any necessary table constant (DTABLE, DTABLE2) arguments.DVPREL2 ID TYPE PID FNAME PMIN PMAX EQID
“DESVAR” DVID1 DVID2 -etc.-
‘DTABLE” LABL1 LABL2 -etc.-
Field Contents
ID Unique identification number.  (Integer &amp;gt;0)
TYPE Name of a property entry, such as PBAR, PBEAM, etc.  (Character)
PID Property entry identification number.  (Integer &amp;gt;0)
PNAME/FID Property name, such as “T”, “A”, or field position of the property entry, or word
position in the element property table of the analysis model.  (Character or Integer  
0)
PMIN Minimum value allowed for this property.  If FID references a stress recovery location
field, then the default value for PMIN is -1.0+35.  PMIN must be explicitly set to a
negative number for properties that may be less than zero (for example, field ZO on
the PCOMP entry).  (Real; Default =1.E-20)
PMAX Maximum value allowed for this property.  (Real; Default =1.0E20)
EQID DEQATN entry identification number.  (Integer &amp;gt;0)
“DESVAR” DESVAR flag.  Indicates that the IDs of DESVAR entries follow.  (Character)
DVIDi DESVAR entry identification number.  (Integer &amp;gt;0)
“DTABLE” DTABLE flag.  Indicates that the LABLs for the constants in a DTABLE or
DTABLE2 entry follow.  This field may be omitted if there are no constants involved
in this relation.  (Character)
LABLi Label for a constant on the DTABLE or DTABLE2 entry.  (Integer &amp;gt;0)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P11</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_011/</guid>
      <description>
        
        
        &lt;p&gt;189 Chapter 4: Input Data
Bulk Data Entries
Main Index
The DVPREL2 entries can be included in DRESP2 or DRESP3 entries.
Discussion:
For some applications, the linear design variable-to-property relations provided by the DVPREL1 entry may
not be sufficient. In these cases, equations may be defined to relate design variables to properties in a
nonlinear fashion. The DVPREL2 entry provides the arguments to an equation defined on a DEQATN
entry. These arguments may be design variables defined on DESVAR entries and table constants defined on
a DTABLE entry.
Every property defined on a DVPREL2 entry becomes an independently varying property internally in MSC
Nastran. Design sensitivities are first computed with respect to these independently varying properties, and
then the chain rule applied to relate these sensitivities to changes in the design variables. Care should be taken
to not use the DVPREL2 entry when the relationship between the design variable and the property is linear;
the DVPREL1 entry should be used in this case. This is because the DVPREL2 entry requires the added
design sensitivity calculations and could therefore impact the performance.
DVPSURF
Purpose:
Defines the relationship between a control surface setting in a particular subcase and a design variable.DEQATN EQID EQUATION
EQUATION (Cont.)
DESVAR ID LABEL XINIT XLB XUB DELXV
DTABLE LABL1 VALU1 LABL2 VALU2 LABL3 VALU3 LABL4 VALU4
LABL5 VALU5 LABL6 VALU6 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DVPREL2 DP2P1 DP2P2 -etc.-
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;DVPREL2 DP2P1 DP2P2 -etc.-&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries190
Main Index
Entry Description:
The DVPSURF is a special purpose entry that is limited to static aeroelasticity (ANALYSIS=SAERO). It
provides a linear relationship between a control surface setting and a design variable:
SURF  = COEF * XDVID
The AELABEL points to a particular AESURF entry that is being designed while the TRIMID points to the
subcase in which the user wants to design the control surface setting. This enables finding the values of
control surface settings during a maneuver that results, for example in the minimum root bending.
DVSHAP
Purpose:
Defines a shape basis vector by relating a design variable identification number (DVID) to columns of a
displacement matrix.
Format:
Associated Entries:
The design variables must first be defined using DESVAR entries.DVPSURF ID AELABEL TRIMID DVID COEF
Field Contents
ID Unique identification number (Integer&amp;gt;0)
AELABEL LABEL of the AESURF entry that is being designed (Character ,no default)
TRIMID Associated trim set identification number (Integer&amp;gt;0)
DVID DESVAR entry identification number (Integer&amp;gt;0)
COEF Coefficient of linear relation (Real)
1 2 3 4 5 6 7 8 9 10
DVSHAP DVID COL1 SF1 COL2 SF2 COL3 SF3
Field Contents
DVID Design variable identification number on the DESVAR entry.  (Integer &amp;gt;0)
COLi Column number of the displacement matrix.  See Remark 2. (1 &amp;lt;Integer &amp;lt; maximum
column number in the displacement matrix.)
SFi Scaling factor applied to the COLi-th column of the displacement matrix.&lt;br&gt;
(Real; Default =1.0)
DESVAR ID LABEL XINIT XLB XUB DELXV&lt;/p&gt;
&lt;p&gt;191 Chapter 4: Input Data
Bulk Data Entries
Main Index
The displacement vector are DBLOCATE’d using File Management Statements as shown in File
Management .
Discussion:
In shape optimization, shape basis vectors relate the changes in a design variable to changes in grid locations.
(See basis vectors in shape optimization in Relating Design Variables to Shape Changes .)
The DVSHAP entry is applied to solution vectors that are output in a separate analysis. The DVSHAP entry
is used to apply scale factors to a series of solution vectors. If multiple DVSHAP entries share the same design
variable ID, the shapes are added.
MODTRAK
Purpose:
Specifies parameters for mode tracking in design optimization (SOL 200).
Format:
Associated Entries:
The MODTRAK entry is invoked by the Case Control command:
MODTRAK = n
Discussion:
The concept of mode tracking is presented in Multidisciplinary Analysis . Mode tracking is available only in
normal modes analysis (ANALYSIS = MODES). The MODTRAK Bulk Data entry specifies a range of
modes (by sequence number) that are to be tracked and a threshold value MTFILTER that is used to
designate whether modes correlate. The default value of 0.9 is applied to normalized results of the triple
matrix product of Equation (2-22) and is usually adequate.1 2 3 4 5 6 7 8 9 10
MODTRAK SID LOWRNG HIGHRNG MTFILTER
Field Contents
SID Sets identification number that is selected in the Case Control Section with the
MODTRAK command. (Integer; No Default)
LOWRNG Lowest mode number in range to search. (Integer &amp;gt;0, Default =0.&lt;br&gt;
If nonzero, LOWRNG &amp;lt; HIGHRNG.)
HIGHRNG Highest mode number in range to search. (Integer &amp;gt;0, Default =number of
eigenvalues extracted.  If nonzero, LOWRNG &amp;lt;HIGHRNG.)
MTFILTER Filtering parameter used in mode cross-orthogonality check.
(Real, Default =0.9)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries192
Main Index
SEDLINK
Purpose:
Relates one design variable of a PART SE to one or more design variables from other PART SEs.
Format:
The SEDLINK bulk data entry enables linking design variables across superelement boundaries. It resembles
the DLINK entry and the discussion for that entry applies here as well. The distinction is the it is now
necessary to specify the parts superelement of the independent design variable(s) as well as its ID. The
SEDLINK must appear in the main bulk data section and is ignored if it is placed after a BEGIN
SUPER=seid data packet, where seid&amp;gt;0.
SEDRSP2
Purpose:
Defines equation responses that are used in the design, either as constraints or as an objective with quantities
from multiple PART SEs.1 2 3 4 5 6 7 8 9 10
SEDLIN
KID DSEID DDVID C0 CMULT ISEID1 IDV1 C1
ISEID2 IDV2 C2 ISEID3 IDV3 C3
ISEID4 IDV4 C4 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
DSEID PART SE identification number for DDVID (Integer &amp;gt;0)
DDVID Dependent design variable identification number. (Integer &amp;gt; 0)
C0 Constant term. (Real; Default = 0.0)
CMULT Constant multiplier. (Real; Default = 1.0)
ISEIDi PART SE identification number for IDVi (Integer &amp;gt;0)
IDVi Independent design variable identification number. (Integer &amp;gt; 0)
Ci Coefficient i corresponding to IDVi. (Real)&lt;/p&gt;
&lt;p&gt;193 Chapter 4: Input Data
Bulk Data Entries
Main Index
Format:
1 2 3 4 5 6 7 8 9 10
SEDRSP2 ID LABEL EQID or
FUNCREGION METHOD C1 C2 C3
“DESVAR” DVSEID1 DVID1 DVSEID2 DVID2 DVSEID3 DVID3
DVSEID4 DVID4 -etc.-
“DTABLE” LBSEID1 LABL1 LBSEID2 LABL2 LBSEID3 LABL3
LBSEID4 LABL4 -etc.-
“DRESP1” R1SEID1 NR1 R1SEID2 NR2 R1SEID3 NR3
R1SEID4 NR4 -etc.-
“DNODE” NDSEID1 G1 CMP1 NDSEID2 G2 CMP2
NDSEID3 G3 CMP3 -etc.-
“DVPREL
1P1SEID1 DPIP1 P1SEID2 DPIP2 P1SEID3 DPIP3
P1SEID4 DPIP4 -etc.-
“DVCREL
1”C1SEID1 DCIC1 C1SEID2 DCIC2 C1SEID3 DCIC3
C1SEID4 DCIC4 -etc.-
“DVMREL
1”M1SEID1 DMIM1 M1SEID2 DMIM2 M1SEID3 DMIM3
M1SEID4 DMIM4 -etc.-
“DVPREL
2”P2SEID1 PDI2P1 P2SEID2 DPI2P2 P2SEID3 DPI2P3
P2SEID4 DPI2P4 -etc.-
“DVCREL
2”C2SEID1 DC12C1 C2SEID2 DC12C2 C2SEID3 DC12C3
C2SEID4 DCI2C4 -etc.-
“DVMREL
2”M2SEID1 DM12M1 M2SEID2 DMI2M2 M2SEID3 DM12M3
M2SEID4 DMI2M4 -etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
LABEL User-defined label. (Character)
EQID DEQATN entry identification number. (Integer &amp;gt; 0)
FUNC Function to be applied to the arguments. (Character)
REGION Region identifier for constraint screening. (Integer &amp;gt; 0)
METHOD When used with FUNC = BETA, METHOD = MIN indicates a minimization task
while MAX indicates a maximization task. (Default = MIN) When used with
FUNCT = MATCH, METHOD = LS indicated a least squares while METHOD =
BETA indicated minimization of the maximum difference. (Default = LS)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries194
Main Index
Ci Constants used when FUNC = BETA or FUNC = MATCH in combination with
METHOD = BETA. See Remark 8. (Real; Defaults: C1 = 1.0., C2 = .005, and
C3=10.0
“DESVAR” Flag indicating DESVAR entry identification numbers. (Character)
DVSEIDi PART SE identification number for DVIDi (Integer &amp;gt;0)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)
“DTABLE” DTABLE flag. Indicates that the LABLs for the constants in a DTABLE or
DTABLE2 entry follow. This field may be omitted if there are no constants involved
in this relation. (Character)
LBSEIDj PART SE identification number for LABLj. (Integer &amp;gt;0)
LABLi Label for a constant on the DTABLE or DTABLE2 entry. (Character)
“DRESP1” Flag indicating DRESP1 entry identification numbers. (Character)
R1SEIDk PART SE identification number for NRk. (Integer &amp;gt;0)
NRk DRESP1 entry identification number. (Integer &amp;gt; 0)
“DNODE” Flag indicating grid point and component identification numbers. (Character)
NDSEIDm PART SE identification number for (Gm,Cm). (Integer &amp;gt;0)
Gm Identification number for any grid point in the model. (Integer &amp;gt; 0)
Cm Component number of grid point Gm. (1 &amp;lt; Integer &amp;lt; 3)
“DVPREL1” Flag indicating DVPREL1 entry identification number. (Character)
P1SEIDi PART SE identification number for DPIPi. (Integer &amp;gt;0)
DPIPi DVPREL1 entry identification number. (Integer &amp;gt; 0)
“DVCREL1” Flag indicating DVCREL1 entry identification number. (Character)
C1SEIDi PART SE identification number for DCICi. (Integer &amp;gt;0)
DCICi DVCREL1 entry identification number. (Integer &amp;gt; 0)
“DVMREL1” Flag indicating DVPREL2 entry identification number. (Character)
M1SEIDi PART SE identification number for DMIMi. (Integer &amp;gt;0)
DMIMi DVMREL1 entry identification number. (Integer &amp;gt; 0)
“DVPREL2” Flag indicating DVPREL2 entry identification number. (Character)
P2SEIDi PART SE identification number for DPI2Pi. (Integer &amp;gt;0)
DPI2Pi DVPREL2 entry identification number. (Integer &amp;gt; 0)
“DVCREL2” Flag indicating DVCREL2 entry identification number. (Character)
C2SEIDi PART SE identification number for DCI2Ci. (Integer &amp;gt;0)
DCI2Ci DVCREL2 entry identification number. (Integer &amp;gt; 0)
“DVMREL2” Flag indicating DVMREL2 entry identification number. (Character)Field Contents&lt;/p&gt;
&lt;p&gt;195 Chapter 4: Input Data
Bulk Data Entries
Main Index
The SEDRSP2 entry closely resembles the DRESP2 entry in that it combines design quantities and user
defined constants to create a new response that is not otherwise available using a DEQATN or an embedded
function. The comments for the DRESP2 therefore apply to the SEDRSP2, but now the combined
quantities can be gathered from separate parts superelements. The SEDRSP2 must appear in the main bulk
data section and is ignored if it is placed after a BEGIN SUPER=seid data packet, where seid&amp;gt;0. Unlike the
DRESP2, the SEDRSP2 does not support DRESP2 or DVLREL1 flags. It is recommended that DTABLE
constants be placed in the main bulk data section. If they are in the parts superelement and they are referenced
by the SEDRSP2, there must be at least one DESVAR, DVxRELy or DRESP1 Flag in the SEDRSP2 that
references the same SEID.
SEDRSP3
Purpose:
Defines constituents from multiple PART SE for an external response using user-supplied routine(s).M2SEIDi PART SE identification number for DMI2Mi. (Integer &amp;gt;0)
DMI2Mi DVMREL2 entry identification number. (Integer &amp;gt; 0)Field Contents&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries196
Main Index
Format:
1 2 3 4 5 6 7 8 9 10
SEDRSP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVSEID1 DVID1 DVSEID2 DVID2 DVSEID3 DVID3
DVSEID4 DVID4 -etc.-
“DTABLE” LBSEID1 LABL1 LBSEID2 LABL2 LBSEID3 LABL3
LBSEID4 LABL4 -etc.-
“DRESP1 R1SEID1 NR1 R1SEID2 NR2 R1SEID3 NR3
R1SEID4 NR4 -etc.-
“DNODE” NDSEID1 G1 CMP1 NDSEID2 G2 CMP2
NDSEID3 G3 CMP3 -etc.-
“DVPREL
1”P1SEID1 DPIP1 P1SEID2 DPIP2 P1SEID3 DPIP3
P1SEID4 DPIP4 -etc.-
“DVCREL
1”C1SEID1 DCIC1 C1SEID2 DCIC2 C1SEID3 DCIC3
C1SEID4 DCIC4 -etc.-
“DVMREL
1:M1SEID1 DMIM1 M1SEID2 DMIM2 M1SEID3 DMIM3
M1SEID4 DMIM4 -etc.-
“DVPREL
1”P2SEID DPI2P1 P2SEID2 DPI2P2 P2SEID3 DPI2P3
P2SEID4 DPI2P4 -etc.-
“DVCREL
2”C2SEID1 DC12C1 C2SEID2 DCI2C2 C2SEID3 DCI2C3
C2SEID4 DCI2C4 -etc.-
“DVMREL
2”M2SEID DMI2M1 M2SEID2 DMI2M2 M2SEID3 DMI2M3
M2SEID4 DMI2M4 -etc.-
“USRDAT
A”String
-etc.-
Field Contents
ID Unique identification number. (Integer &amp;gt; 0)
LABEL User-defined label. (Character)
GROUP Group name the external response type belongs to (Character).
TYPE External response type (Character).
“DESVAR” Flag indicating DESVAR entry identification numbers. (Character)
DVSEIDi PART SE identification number for DVIDi. (Integer &amp;gt;0)
DVIDi DESVAR entry identification number. (Integer &amp;gt; 0)&lt;/p&gt;
&lt;p&gt;197 Chapter 4: Input Data
Bulk Data Entries
Main Index
The SEDRSP3 entry closely resembles the DRESP3 entry in that it combines design quantities and user
defined constants to create a new response that is not otherwise available using a user supplied external “DTABLE” DTABLE flag. Indicates that the LABLs for the constants in a DTABLE or
DTABLE2 entry follow. This field may be omitted if there are no constants involved
in this relation. (Character)
LBSEIDj PART SE identification number for LABLj. (Integer &amp;gt;0)
LABLi Label for a constant on the DTABLE or DTABLE2 entry. (Character)
“DRESP1” Flag indicating DRESP1 entry identification numbers. (Character)
R1SEIDk PART SE identification number for NRk. (Integer &amp;gt;0)
NRk DRESP1 entry identification number. (Integer &amp;gt; 0)
“DNODE” Flag indicating grid point and component identification numbers. (Character)
NDSEIDm PART SE identification number for (Gm,Cm). (Integer &amp;gt;0)
Gm Identification number for any grid point in the model. (Integer &amp;gt; 0)
Cm Component number of grid point Gm. (1 &amp;lt; Integer &amp;lt; 3)
“DVPREL1” Flag indicating DVPREL1 entry identification number. (Character)
P1SEIDi PART SE identification number for DPIPi. (Integer &amp;gt;0)
DPIPi DVPREL1 entry identification number. (Integer &amp;gt; 0)
“DVCREL1” Flag indicating DVCREL1 entry identification number. (Character)
C1SEIDi PART SE identification number for DCICi. (Integer &amp;gt;0)
DCICi DVCREL1 entry identification number. (Integer &amp;gt; 0)
“DVMREL1” Flag indicating DVPREL2 entry identification number. (Character)
M1SEIDi PART SE identification number for DMIMi. (Integer &amp;gt;0)
DMIMi DVMREL1 entry identification number. (Integer &amp;gt; 0)
“DVPREL2” Flag indicating DVPREL2 entry identification number. (Character)
P2SEIDi PART SE identification number for DPI2Pi. (Integer &amp;gt;0)
DPI2Pi DVPREL2 entry identification number. (Integer &amp;gt; 0)
“DVCREL2” Flag indicating DVCREL2 entry identification number. (Character)
C2SEIDi PART SE identification number for DCI2Ci. (Integer &amp;gt;0)
DCI2Ci DVCREL2 entry identification number. (Integer &amp;gt; 0)
“DVMREL2” Flag indicating DVMREL2 entry identification number. (Character)
M2SEIDi PART SE identification number for DMI2Mi. (Integer &amp;gt;0)
DMI2Mi DVMREL2 entry identification number. (Integer &amp;gt; 0)
“USRDATA” Flag indicating user input data. (Character).Field Contents&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries198
Main Index
function. The comments for the DRESP3 therefore apply to the SEDRSP3, but now the combined
quantities can be gathered from separate parts superelements. The SEDRSP3 must appear in the main bulk
data section and is ignored if it is placed after a BEGIN SUPER=seid data packet, where seid&amp;gt;0. Unlike the
DRESP3, the SEDRSP3 does not support DRESP2 or DVLREL1 flags. It is recommended that DTABLE
constants be placed in the main bulk data section. If they are in the parts superelement and they are referenced
by the SEDRSP3, there must be at least one DESVAR, DVxRELy or DRESP1 Flag in the SEDRSP that
references the same SEID.
STOCHAS
Purpose:
Specifies statistics used in randomization selected model parameters.
Format:
Example 1:
Randomize all element and material properties with the default settings
Example 2:
Randomize material properties with CoV = 0.1 and loadings with CoV = 0.3 and default multipliers of
standard deviations 1 2 3 4 5 6 7 8 9 10
STOCHAS SID PENTRY CDF CoV m
MENTRY CDF CoV m
CENTRY CDF CoV m
LOADS CDF CoV m
SPCD CDF CoV m
STOCHAS 100 PENTRY
MENTRY
STOCHAS 200 LOADS GAUSS 0.3
MENTRY GAUSS 0.1
Field Contents
SID Unique identification number that is selected by the STOCHASTICS Case Control
command. (Integer &amp;gt; 0)
“PENTRY” Flag for randomizing real values on all the element property entries. (Character)&lt;/p&gt;
&lt;p&gt;199 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
The STOCHAS entry was provided to simulate the condition that user defined parameters are not known
exactly, but have a statistical variation. The intent is to assess the variability in the results due to the variability
in the input. This is a “stand-alone” computation and it does not interact with standard SOL 200 capabilities
of sensitivity or optimization. Further, it is available in all the linear solution sequences of MSC Nastran and
is listed here only because it bears some similarity to the design of properties provided by the DVxRELy
entries. Some guidelines in applying the feature are:
1.At least one flag must exist but they can be placed in any order.
2.Only Gaussian distributions are supported.
3.The range of a random variable is defined as ( ) where  is the mean of the
random variable (or the value of one analysis model parameter on a Bulk Data entry),  is the standard
deviation that is related to , CoV  by CoV. and m is the multiplier of the standard deviations.
4.m.CoV  must be &amp;lt; 1.0.
TOMVAR
Purpose:
Defines a design region for topometry optimization (element-by-element optimization).
Entry Description:“MENTRY” Flag for randomizing real values on all the independent material property entries.
(Character)
“CENTRY” Flag for randomizing real values on all the connectivity entries. (Character)
“LOADs” Flag for randomizing real values on all the load entries. (Character)
“SPCD” Flag for randomizing real values on all the SPCD entries. (Character)
CDF Name of a cumulative distribution function. See Remark 2. (Character; Default =
GAUSSIANS or blank).
CoV Coefficient of variance. (Real &amp;gt; 0; Default = 0.05)
m Number of standard deviations. See Remark 3. (Real &amp;gt; 0; Default = 3.0)
1 2 3 4 5 6 7 8 9 10
TOMVAR ID PTYPE PID PNAME/
FIDXINIT XLB XUB DELXV
DLINK TID C0 C1
DDVAL DSVID
“STRESS” STLIMField Contents
m–m+&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries200
Main Index
The TOMVAR entry provides a simple user interface that allows you to easily generate a design model that
independently designs each element referenced by the TOMVAR. For example if TYPE is PSHELL, PID is
1000 and PNAME is T , the thickness of each element that invokes PSHELL 1000 will be independently
designed. A special feature of the entry is that the PNAME can refer to a material property that is associated
with the PID. So if TYPE is PSHELL, PID is 1000 and PNAME is E, Young’s modulus will be separately
designed for each element that is associated with PSHELL 1000. This feature creates a problem in one
instance: PNAME=”A” could mean the area of a property or it could be the thermal expansion coefficient on
a MATi entry. This is resolved by always interpreting PNAME=”A” as a thermal expansion coefficient. If the
area of a property is desired, the integer field ID for that property is used. The TOMVAR supports DESVAR
like features, such as discrete variables and design variable linking. The linking is limited to ply thicknesses Field Contents
ID Unique topometry design region identification number. (Integer &amp;gt; 0)
TYPE Property entry type. Used with PID to identify the elements to be designed.
(Character: “PBAR”, “PSHELL”,  ‘PSOLID”, and “PCOMP”, etc.)
PID Property entry identifier (Integer &amp;gt; 0). This PID must be unique for PIDs referenced
by other TOPVAR, DVPREL1, DVPREL2, DVMREL1, and DVMREL2 entries.
T opometry, topology, and sizing variables cannot share the same properties. (Integer &amp;gt;
0). Combined topometry, topology, topography, sizing, and shape variables are
allowed.
PNAME/FID Property name or property material name, such as “T”, “A”, “E”, and “GE”, or field
position of the property entry or word position in the element property table of the
analysis model. Property names that begin with an integer such as 12I/T**3 may only
be referenced by field position. (Character or Integer &amp;gt; 0.)
XINIT Initial value. (Real or blank, no Default).  Typically, XINIT is defined to match the
mass target constraint (so the initial design does not have violated constraints) or the
analysis model input property value.
XLB Lower bound. (Real or blank; Default = blank) . The default  is XLB=0.5&lt;em&gt;XINIT.
XUB Upper bound. (Real or blank; Default = blank). The default  is XLB=1.5&lt;/em&gt;XINIT.
DELXV Fractional change allowed for the design variable during approximate optimization.
(Real &amp;gt; 0.0; Default = 0.5)
DDVAL Indicates that this line defines discrete TOMVAR variables.
DSVID DDVAL entry identifier. (Integer &amp;gt; 0)
DLINK Indicates that this line relates a ply thickness to another ply thickness.
TID TOMVAR entry identifier. (Integer &amp;gt; 0)
C0 Constant term. (Real; Default = 0.0)
C1 Coefficient term. (Real; no Default)
STRESS Indicates that this line defines a stress limit (at element center).
STLIM Von Mises stress upper bound (Real &amp;gt;0.0).&lt;/p&gt;
&lt;p&gt;201 Chapter 4: Input Data
Bulk Data Entries
Main Index
on th e PCOMP e ntry. “STRESS” limits can only be used for PTYPE=PSHELL and PNAME= T . The Von
Mises stress (at element center) constraints apply to all shell elements in both designed and non-designed
regions. All TOMVAR entries must have the same STLIM.
TOPVAR&lt;br&gt;
Purpose:
Defines a topology design region for topology optimization.
Entry Description:
1 2 3 4 5 6 7 8 9 10
TOPVAR ID LABEL PTYPE XINIT XLB DELXV POWER PID
“SYM” CID MS1 MS2 MS3 CS NCS
“CAST” CID DD DIE ALIGN
“EXT” CID ED ALIGN
“PRINT” CID PD
“TDMIN” TVMIN TVMAX
“STRESS” STLIM
Field Contents
ID Unique topology design region identification number. (Integer &amp;gt; 0)
LABEL User-supplied name for printing purpose. (Character)
PTYPE Property entry name. Used with PID to identify the elements to be designed.
(Character: “PBAR”,  “PSHELL”,  &amp;lsquo;PSOLID”, etc.)
XINIT Initial value. (Blank or Real, XLB &amp;lt;XINIT &amp;lt;  1.0; Default = Blank). T ypically, XINIT is
defined to match the mass constraint on DRESP1=FRMASS, so the initial design does not
have violated constraints. In this case, the default is set to the constraint value. If the mass
(DRESP1=FRMASS or WEIGHT) is the objective, the default is 0.9. The default of XINIT
is 0.6 for the other cases.
XLB Lower bound to prevent the singularity of the stiffness matrix. (Real; Default = 0.001)
DELXV Fractional change allowed for the design variable during approximate optimization. See
Remark 3. (Real &amp;gt; 0.0; Default = 0.2)
POWER A penalty factor used in the relation between topology design variables and element Young&amp;rsquo;s
modulus. (Real &amp;gt; 1.0; Default = 3.0, or 4.0 if symmetry constraints used). 2.0 &amp;lt; POWER &amp;lt;
5.0 is recommended.
PID Property entry identifier. This PID must be unique for PIDs referenced by other TOPVAR,
DVPREL1 and DVPREL2 entries. T opology and sizing variables cannot share the same
properties. (Integer &amp;gt; 0)
“SYM” Indicates that this line defines symmetry constraints.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries202
Main Index
Discussion:
Topology optimization is a special version of optimization that seeks to find the optimal distribution of
material based on some criterion for given space, loads, and boundary conditions. The TOPVAR entry
identifies the finite elements that are to participate in the design task. Every element that is a member of the
PTYPE/PID pair given of the TOPVAR has its own design variable that drives the Young’s modulus and
density of the element. The desired case is that the design variable will be driven to either its upper bound
value of 1.0 (retain the element) or its lower bound values close to zero (discard the element). In addition to
specifying the PTYPE/PID information, the entry provides an initial value for the variable upper and lower
bound, a DELXV parameter to specify how rapidly the design variable can change, and a POWER parameter CID Rectangular coordinate system ID used for specifying manufacturing constraints. (Blank or
Integer &amp;gt; 0; Default = blank)
MSi Mirror symmetry plane. (Character, &amp;lsquo;XY&amp;rsquo;, &amp;lsquo;YZ&amp;rsquo;, or &amp;lsquo;ZX&amp;rsquo;)
CS Cyclic symmetry axis. (character X, Y, Z).
NCS Number of cyclic symmetric segments in 360 degrees (Integer &amp;gt; 0).
“CAST” Indicates that this line defines casting constraints (i.e., die draw direction constraints).
DD Draw Direction. DDi=X, Y, Z or X-, Y-, Z- for a single die option (DIE=1) where X-, Y-, Z-
indicates the opposite direction of X, Y, and Z respectively. DDi=X, Y, and Z for two die
option (DIE =2) (Character)
DIE Die Options. (Blank or integer 1 or 2; Default = 1) = 1 (or blank). A single die will be used
and the die slides in the given draw direction (i.e., material grows from the bottom in the
draw direction) = 2. T wo dies will be used and the dies split apart along the draw direction
(i.e., material grows from the splitting plane in opposite direction along the axis specified by
the draw direction DDi. The splitting plane is determined by optimization)
ALIGN Indicates whether the designed property finite element mesh is precisely aligned with the
draw direction or extrusion direction. (Character: “YES” or “NO” or Blank; Default = blank
= “NO”)
“EXT” Indicates that this line defines extrusion constraints (i.e., enforce constant cross-section)
ED Extrusion direction. (Character, X, Y, or Z)
“PRINT” Indicates that this line defines overhang constraints (maximum overhang angle is 45 degree).
PD PRINT Direction. PD =X, Y, Z or X-, Y-, and Z- where X-, Y-, Z- indicates the opposite
direction of X, Y, and Z respectively (Character).
“TDMIN” Indicates that this line defines a minimum and/or maximum member size.
TVMIN Minimum member size. (Real&amp;gt;=0.0 or blank)
TVMAX Maximum member size. (Real &amp;gt; TVMIN or blank)
“STRESS” Indicates that this line defines a stress limit (at element center).
STLIM von Mises stress upper bound. (Real &amp;gt;0.0) Field Contents&lt;/p&gt;
&lt;p&gt;203 Chapter 4: Input Data
Parameters Unique to Design Sensitivity and Optimization
Main Index
that is the exponent used in Equation (7-1) (as given in Topology Optimization ). T ypically, the default values for
these parameters are adequate.
The PTYPEs than can be invoked by the TOPVAR include PROD, PBAR, PBARL, PBEND, PBEAM,
PBEAML, PSHELL, PSHEAR, PSOLID, and PWELD. All designated element properties must refer to a
MAT1 or MAT9 (for PSOLID only) entry; therefore, a PCOMP cannot be designed in topology
optimization.
The optional continuation lines for this entry permit the specification of manufacturability constraints as
defined as given in the Topology Optimization ). Manufacturability constraints are specified in a rectangular
(CORD1R and CORD2R) coordinate system and only one system can be specified for a given TOPVAR
entry. One, two or three different mirror symmetry planes can be present (such as MS1=XY, MS2=YZ, and
MS3=ZX). Casting (“CAST”) , Extrusion (“EXT”) and overhang (“PRINT”) m anufacturability constraints
can be applied to PTYPE=”PSOLID” only. Casting constraints cannot be combined with extrusion
constraints for the same TOPVAR entry.  Overhang constraint cannot be used to with other
manufacturability constraints.
Some symmetry constraint types can be combined with casting or extrusion constraints. The referenced
coordinate system CID must be the same for the combined constraints. Some possible combinations are:
For “EXT” constraints, possible combinations are (Edi=X, MSi=XY and/or ZX), (EDi=Y, MSi=YZ
and/or XY), (EDi=Z, MSi=ZX and/or YZ),
For “CAST” constraints, possible combinations are (DDi=X or -X, MSi=XY and/or ZX), (DDi=Y or
-Y, MSi=YZ and/or XY), (DDi=Z or -Z, MSi=ZX and/or YZ)
For the two dies option (DIE=2), the splitting plane is optimized. For a single die DIE=1, the parting plane
is the bottom surface of the designed part in the draw direction.
TDMIN is a dimensional quantity with a guideline that it should be set to at least three times a representative
element dimension. Without a TDMIN continuation line, the minimum member size constraint is taken
from the specification of TDMIN parameter on the DOPTPRM entry. This option is applied on 2 and 3 D
elements only. Minimum member size constraints can be used with “SYM”, “CAST”, and “EXT” constraints.
TVMAX is a dimensional quantity that should be no greater than ten times a representative element
dimension. This parameter is reserved for special situations where the designs would otherwise pose
manufacturing difficulties due to large member size.
For problems with casting constraints, it is recommended to use an aligned mesh for the topology designed
property since a smaller tolerance can be used.
STLIM imposes stress limits on the designed and undersigned solid elements. Stress limits are not supported
for one dimensional elements.
Topology Optimization contains a number of simple Topology Optimization examples that demonstrate
various manufacturability constraints.
Parameters Unique to Design Sensitivity and
Optimization
MSC Nastran allows you to specify a number of parameters for the input of scalar values and for requesting
special features. These are in addition to the optimization control possible with Bulk Data entries such as&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Parameters Unique to Design Sensitivity and Optimization204
Main Index
DOPTPRM and DSCREEN. This section is intended to be a complete quick reference for all such Case
Control and Bulk Data parameters that are associated with Design Sensitivity and Optimization. Refer to
Parameters  (p.805) in the MSC Nastran Quick Reference Guide  for a description of all MSC  Nastran
parameters.
AUTOADJ Select the adjoint sensitivity analysis.
YES Selection is based on a determination as whether the adjoint or the
direct method is most efficient. (Default)
NO Direct method is used.
CDIF Controls the selection of finite difference scheme used in sensitivity analysis.
YES Selects central differences. (Default for shape optimization)
NO Selects forward differences. (Default for property optimization
only)
DESPCH Controls the frequency of updated DESVAR and GRID Bulk Data entry output
to the PUNCH file.
N &amp;lt; 0 No output.
N = 0 Final design cycle. (Default)
N &amp;gt; 0 Every N-th, as well as final design cycles.
DESPCH1 Specifies the amount of data to be written to the .pch file. (Default = 6)
N = 0 Write no data.
N = + 1 Write property entries that are designed.
N = + 2 Write all property entries of a given type when one or more
property of that type is designed.
N = + 4 Write new DESVAR and DRESP1 entries.
N = + n Write combined quantities from summing values.
Note: A positive value of N results in large field formats while a negative
value gives small field formats.
DPEPS Controls overriding of the analysis value by the design model. (Default =1.0E-4)
If all the differences between the analysis and design model properties are less than
DPEPS, the differences are ignored and it is possible to reuse analysis results from
a previous run. Setting this parameter to a large value is not recommended since it
can result in poor sensitivity values.
DSNOKD Indicates if the differential stiffness effect is to be included in buckling sensitivity
analysis.
1.0 Include differential stiffness.
0.0 Do not include differential stiffness. (Default)
DSZERO Specifies the minimum absolute value for printout of design sensitivities. (Default
= 0.0)&lt;/p&gt;
&lt;p&gt;205 Chapter 4: Input Data
Parameters Unique to Design Sensitivity and Optimization
Main Index
IUNIT IUNIT specifies the FORTRAN unit number on which the DSCMCOL table and
the DSCM2 matrix in SOL 200 will be written.  (See the OUTPUT2 and
OUTPUT4 module descriptions in the MSC Nastran 2005 r3 DMAP Programmer’s
Guide. ) (Default =11)
NASPRT Controls the frequency of MSC  Nastran output.
-1 No output.
0 Output on initial and final design cycles. (Default)
N Output every N-th iteration and also prior to exit.
OPTEXIT Instructs the program to exit at one of seven predetermined exit points.
0 Do not exit.  Proceed with optimization. (Default)
N &amp;gt; 0 Exit at one of the locations 1 through 7 (1 N).
1 Exit after the initialization of the analysis and design model but
before finite element analysis begins.
2 Exit after finite element analysis and initial design response and
shape basis vector processing.
3 Exit after design constraint evaluation and screening.
4 Exit after design sensitivity analysis and print the matrix of design
sensitivity coefficients (DSCM2).  This is equivalent to the
DSAPRT (UNFORM,END=SENS) Case Control command.
-4 Exit after design sensitivity analysis and write the data blocks
related to sensitivity coefficients (DSCM2 and DSCMCOL) to an
external file using the OUTPUT2 and OUTPUT4 modules.  This
is equivalent to the DSAPRT (NOPRINT ,EXPORT
END=SENS) Case Control command.  See related parameters
ITAPE, IUNIT, and OMAXR.
5 Exit after the first approximate optimization of the design model.
6 Exit after the first update of the analysis model based on the first
approximate optimization of the design model.
7 Compute and output design sensitivity coefficients at the end of
normal program termination:  hard convergence, soft convergence,
or maximum design cycles.  This is equivalent to the DSAPRT
(UNFORM,START=LAST) Case Control command. If the final
design is a discrete design optimization, no sensitivity is performed
and the OPTEXIT=7 request is not honored.
SENSUOO If set to yes, pseudo-displacements are recovered to the o-set while including the
terms of Equation (2-69). Default=NO
SOFTEXIT Determines whether to terminate design cycles if soft convergence is indicated.
NO Do not stop if soft convergence is indicated. (Default)
YES Terminate design cycles if soft convergence is achieved.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses206
Main Index
Design Responses
DRESP1
This section contains a detailed description of each of the Response T ypes in the DRESP1 entry.
In order to facilitate this discussion, Table 4-5 is duplicated from the Bulk Data entry DRESP1  in the MSC
Nastran Quick Reference Guide . The “Remarks” that are called out in this table are not given explicitly here,
but the information is provided in detail in the response type descriptions that follow.SOLADJC Indicates if adjoint solution vectors are to be calculated during the analysis.
-1 Do not calculate adjoint solution vectors during the analysis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 For ANALYSIS =DFREQ, the adjoint vectors will be calculated
during the solution if the conditions given in the full description
in Parameters  in the MSC Nastran Quick Reference Guide  are met.
(Default)
TDMIN Default = 0.0 T opology minimum member diameter in the basic coordinate
system. (Real &amp;gt; 0.0, Default = 0.0, i.e., no minimum member size
control.) This option is applied on 2D and 3D elements only.
UPDTBSH Controls the update of the boundary shapes in the analytic boundary shapes
method for shape optimization.
NO Do not update the boundary shapes. (Default)
YES Update the boundary shapes.
Note: Regardless of the value of UPDTBSH, shape basis vectors are still
updated for every design cycle (interpolation to the interior grids).
UPDTBSH only controls updates on the boundary shapes.
XYUNIT n Specifies the unit number for storage of design sensitivity data in
comma-separated value format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;207 Chapter 4: Input Data
Design Responses
Main Index
Table 4-5  Design Sensitivity Response Attributes
Response Type
(RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0) ATTI (Integer &amp;gt;0)
WEIGHT Row Number
(1 &amp;lt; ROW &amp;lt; 6)
See Remark 23.Column Number
(1 &amp;lt; COL &amp;lt; 6)SEIDi or All or blank. See
Remark 12.
VOLUME Blank Blank SEIDi or ALL or blank.
See Remark 12.
FRMASS (see Remarks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;27&#34;&gt;
&lt;li&gt;&amp;amp; 28.)Blank Blank Blank or Property ID
(PID). See Remark 36.
COMP (see Remark
27.)Blank Blank Blank
EIGN Normal Modes Mode
Number. See Remark
32.Approximation Code.&lt;br&gt;
See Remark 19.Blank
CEIG Complex Eigenvalue
Mode Number.
(Integer &amp;gt; 0)ALPHA or OMEGA
(Default = ALPHA)Blank
FREQ Normal Modes Mode
Number.
See Remarks 18. and 32.Approximation Code.&lt;br&gt;
See Remark 19.Blank
LAMA Buckling Mode
NumberApproximation Code.&lt;br&gt;
See Remark 19.Blank
DISP Displacement
ComponentBlank or Mode Number Grid ID
STRAIN Strain Item Code Blank or Mode Number Property ID (PID) or
Element ID (EID)
ESE Strain Energy Item
Code
See Remark 20.Blank or Mode Number Property ID (PID) or
Element ID (EID)
STRESS Stress Item Code Blank or Mode Number Property ID (PID) or
Element ID (EID)
FORCE Force Item Code Blank or Mode Number Property ID (PID) or
Element ID (EID)
FATIGUE See Remark
38.Fatigue Item Code. See
Remark 42.ID of a FATIGUE case
control. See Remark 39.Property ID (PID) or&lt;br&gt;
Element ID (EID)
SPCFORCE SPC Force Component Blank Grid ID&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses208
Main Index
CSTRAIN Strain Item Code LAMINA Number
(Integer; Default =1)Property ID (PID) or
Element ID (EID)
CSTRESS Stress Item Code LAMINA Number
(Integer; Default =1)Property ID (PID) or
Element ID (EID)
CFAILURE Failure Indices Item
Code LAMINA Number
(Integer; Default =1)Property ID (PID) or
Element ID (EID)
CSTRAT Composite Strength
Ratio Item CodeLAMINA Number
(Integer; Default =1)Property ID (PID) or
Element ID (EID)
TOTSE (T otal Strain
Energy)
SeeRemark 45.Blank Blank or Mode Number SEIDi or All or blank. See
Remark 12.
GPFORCE GPFORCE
Component Code (1-6;
seeRemark 24.)Blank Element ID
GPFORCP Grid Point (see Remark
25.)Blank Grid ID connected to
ATTA grid to specify
orientation.
ABSTRESS Arbitrary Beam Stress
Item Code (see Remark
29.)Blank Property ID (PID) or
Element ID (EID)
FRDISP Displacement
ComponentFrequency Value. (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Grid ID
PRES Acoustic Pressure
Component (=1 or 7)Frequency Value. (Blank;
Real &amp;gt; 0.0 or Character)
See Remarks 15. and 20.Grid ID
FRVELO Velocity Component Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Grid ID
FRACCL Acceleration
ComponentFrequency Value.  (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Grid ID
FRSPCF SPC Force Component Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Grid IDTable 4-5  Design Sensitivity Response Attributes
Response Type
(RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0) ATTI (Integer &amp;gt;0)&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P12</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_012/</guid>
      <description>
        
        
        &lt;p&gt;209 Chapter 4: Input Data
Design Responses
Main Index
FRSTRE Stress Item Code Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Property ID (PID) or
Element ID (EID)
FRFORC Force Item Code Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)&lt;br&gt;
See Remarks 15. and 20.Property ID (PID) or
Element ID (EID)
PSDDISP Displacement
Component (see
Remarks 26. and 30.)Frequency Value. (Blank;
Real &amp;gt; 0.0 or Character).
See Remarks 15. and 20.Grid ID
PSDVELO Velocity Component
(see Remarks 26. and
30.) Frequency Value (Blank;
Real &amp;gt; 0.0 or Character).
See Remarks 15. and 20.Grid ID
PSDACCL Acceleration
Component (see
Remarks 26. and 30.)Frequency Value. (Blank;
Real &amp;gt; 0.0 or Character).
See Remarks 15. and 20.Grid ID
RMSDISP Displacement
Component (see
Remark 30.)RANDPS ID Grid ID
RMSVELO Velocity Component
(see Remark 30.)RANDPS ID Grid ID
RMSACCL Acceleration
Component (see
Remark 30.)RANDPS ID Grid ID
ACPWR - acoustic
power radiated through
a panel. (See Remark
33.)Blank Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15. and 20.Blank
ACINTS - acoustic
intensityBlank Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20.Grid ID of wetted surface.
AFPRES - Acoustic
Intensity for AFPM.
(See Remark 34.)Acoustic Pressure
Component (Integer =
1 or 7)Frequency Value.  (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20.Grid ID of AFPMID.Table 4-5  Design Sensitivity Response Attributes
Response Type
(RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0) ATTI (Integer &amp;gt;0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses210
Main Index
AFINTS - Acoustic
Intensity for AFPM.
(See Remark 34.)Component Code -
0 - normal to AFPM,
1 - x-dir
2 - y-dir
3 - z-dirFrequency Value. (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20.Grid ID of AFPMID.
AFVELO - Velocity for
AFPM. (See Remark
34.)Component Code -
11 - Real/Mag in x-dir
12 - Real/Mag in y-dir
13 - Real/Mag in z-dir
71 - Img/Ph in x-dir
72 - Img/Ph in y-dir
73 - Img/Ph in z-dirFrequency Value. (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20.Grid ID of AFPMID.
AFPWR - Acoustic
Power for AFPM. (See
Remark 34.)Blank Frequency Value. (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20. Blank
DYNSTIFF Dynamic Stiffness
ComponentFrequency Value. (Blank;
Real &amp;gt;0.0 or Character)
See Remarks 15.and 20.Grid ID
ERP (See Remarks 40.
and 41.)ERP Item Code Frequency Value. (Blank;
Real &amp;gt;0.0 or Character )
See Remarks 15.and 20.Set3 ID or Blank
TDISP Displacement
ComponentTime Value.  (Blank; Real;
or Character)  See
Remarks 16. and Grid ID
TVELO Velocity Component Time Value.  (Blank; Real,
or Character)  See
Remarks 16. and Grid ID
TACCL Acceleration
ComponentTime Value.  (Blank; Real,
or Character)  See
Remarks 16. and Grid ID
TSPCF SPC Force Component Time Value.  (Blank; Real,
or Character)  See
Remarks 16. and Grid ID
TSTRE Stress Item Code Time Value.  (Blank; Real,
or Character)  See
Remarks 16. and Property ID (PID) or
Element ID (EID)Table 4-5  Design Sensitivity Response Attributes
Response Type
(RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0) ATTI (Integer &amp;gt;0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;211 Chapter 4: Input Data
Design Responses
Main Index
The terms in parenthesis are representative test case from TPL(Test Problem Library)
WEIGH T
(..\tpl\ugdesopt\dsoug1.dat )
The weight response is computed using the same Grid Point Weight Generator utility that is used when with
the PARAM GRDPNT request is used to obtain printed results regarding the weight. This calculation results
in a 6x6 mass matrix computed about the grid designated by the GRDPNT or about the origin of the basic
coordinate system if the GRDPNT is not defined (or is defined and the grid point does not exist). The TFORC Force Item Code Time Value.  (Blank; Real,
or Character)  See
Remarks 16. and Property ID (PID) or
Element ID (EID)
STMONP1
Structural
MONPNT1Component (see
Remark 35.)Blank Blank
STMOND1
Structural
MONDSP1Component (see
Remark 35.)Blank Blank
MONPNT3 Component (see
Remark 35.)Blank Blank
AEMONP1
Aerodynamic
MONPNT1Component (see
Remark 35.)Blank Blank
AEMOND1
Aerodynamic
MONDSP1Component (see
Remark 35.)Blank Blank
TRIM AESTAT or AESURF
entry IDBlank Blank
STABDER AESTAT or AESURF
entry IDRestraint Flag. (Integer 0
or 1)  See Remark 13.Component
FLUTTER Blank Blank See Remark 14.
DIVERG Divergence Root
Number (See remark
37.)Blank Mach No.
WMPID (see Remarks&lt;br&gt;
43. and 44.)MID SEID PIDTable 4-5  Design Sensitivity Response Attributes
Response Type
(RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0) ATTI (Integer &amp;gt;0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses212
Main Index
particular weight that is to be used in the response is selected with the ATTA field specifying which row of
the 6x6 matrix field to select and ATTB field identifying the column. The default values for ATTA and ATTB
are 3, resulting in the mass of the structure in the z direction being the default weight response. The associated
ANALYSIS Type column of Table 4-3 indicates that this response can be invoked from any ANALYSIS type
or above the subcase level before an ANALYSIS type is specified. It is recommended that the response be
invoked above the subcase level using the DESOBJ Case Control command if it is the response is the
objective and the DESGLB Case Control command if the response is constrained. The response can be for
the entire structure or can be for an individual superelement specified in the ATT1 field. If ATT1 is blank,
the total weight of the structure is used for the response. If it is zero, the weight of the residual is used.
The following bulk data fragment shows how three DRESP1’s with response type WEIGHT can be
combined to compute the x and y locations of the center of gravity of a structure. This enables using the
center of gravity value as a design constraint or the objective.
A final comment on the WEIGHT response is to reiterate the caution on Defining the Objective Function&lt;br&gt;
that, since the WEIGHT response gives the weight of the entire structure, it may be insensitive to design
variable changes. Subtracting out the weight of the undesigned structure using a DRESP2 may improve the
optimizer performance. Alternatively, DOPTPRM parameter OBJMOD can be used to create an objective
that is relative to the initial objective.
VOLUME
(..\tpl\ugdesopt\dsoug7.dat )
The VOLUME response provides the total volume of all of the structural elements in the structure based on
the geometry of your model. The response can be for the entire structure or can be for an individual
superelement specified in the ATT1 field. If ATT1 is blank, the total weight of the structure is used for the
response. If it is zero, the weight of the residual is used.
FRMASS
(..\tpl\cc2005\topex1.dat)
The FRMASS response indicates a target mass fraction that typically is used as a constraint in a topology
optimization task; (e.g., minimize the compliance of the structure while limiting the mass to 40% of the mass
of the original structure). This response is only available with topology optimization.$
DRESP1 33 WT33 WEIGHT 33
DRESP1 26 W26 WEIGHT 26
DRESP1 34 W34 WEIGHT 34
$
$ THE CENTER OF GRAVITY (CG)
$
DRESP2 50 CG-X 200
DRESP1 41 43
DRESP2 51 CG-Y 200
DRESP1 41 42
DEQATN 200 F(R1,R2) = R2/R1
$
ENDDATA&lt;/p&gt;
&lt;p&gt;213 Chapter 4: Input Data
Design Responses
Main Index
COMP
(..\tpl\cc2005\topex2.dat)
The COMP response permits the specification of a compliance value as a design response. Compliance is
simply the product of the displacement times the applied load and is typically used as an objective in a
topology optimization design task to maximize structural stiffness in a static design problem.
EIGN
(..\tpl\cc2005\icwcs.dat)
The EIGN response specifies an eigenvalue from a normal modes analysis as the response. The FREQ
response is also associated with an eigenvalue, but the FREQ response quantity is in units of Hz. while the
EIGN response is applied directly to the eigenvalue.
The ATTB field of this response can be used to select the approximation technique that is applied when
APRCOD=2 is used. By default, this approximation is performed using the Rayleigh Quotient
approximation of Equation (2-137). If the ATTB is set to 1, the direct method is used to approximate the
eigenvalue while ATTB=2 is used to specify the inverse variable approximation The default is felt to be
adequate for all cases, with the additional options available for experimentation.
CEIG
(..\tpl\ceignopt\d200ce01.dat)
The CEIG response selects a component of a complex eigenvalue. The application for this response is in areas
such as brake squeal or landing gear stability where typically there is a desire to ensure that the real part of the
eigenvalue is positive. The ATTB field is used to select the component by specifying ALPHA (real part) or
OMEGA (imaginary part) with ALPHA being the default. If the physical constraint is that the ALPHA value
must be greater than zero, it is recommended that a DRESP2 be used to offset the DRESP1 response by some
quantity in order to avoid a poorly scaled constraint.
FREQ
(..\tpl\ugdesopt\dsoug2.dat )
The FREQ response is similar to the EIGN response and the comments made above for that response apply
here as well. Specification of design constraints in Hz is considered as being more intuitive in the typical
application. The ATTB options of the EIGN response are applicable here as well and the default Rayleigh
Quotient Approximation is again considered best.
LAMA
(..\tpl\opt_size\d200g12.dat)
The LAMA response refers to a buckling eigenvalue and indicates what multiple of the applied load in a
statics analysis would cause the structure to buckle. Typically then, the response is constrained to be greater
than 1.0. The ATTA field specifies the buckling mode of interest and it is recommended that more than one
LAMA response be applied to preclude buckling behavior. If only a single LAMA response is constrained, it
is likely that the optimization will produce a design where a previously non-critical mode becomes critical.
The ATTB field can again be used to specify the approximation technique. In this case, the Rayleigh rfreq1
2&amp;mdash;&amp;mdash;reign=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses214
Main Index
Quotient does not apply. Instead, ATTB=1 (default) selects the direct method while ATTB=2 select the
inverse variable approximation.
DISP
(..\tpl\ugdesopt\dsoug10.dat )
The DISP response identifies a displacement in a statics or static aeroelastic analysis. The ATTA field specifies
the grid component(s) while the ATTi fields specify the grids at which the response is to be evaluated. The
ATTA field can be any combination of the digits 1-6 (e.g., 135) and each digit will result in the recovery of
a displacement (e.g., components 1,3 and 5 when ATTA is 135). The ATTB field is used for
ANALYSIS =MODES subcases to identify the mode number. ATTB is ignored for ANALYSIS =STATICS.
Any number of grids can be specified using the ATTi fields. The grids must exist and there is no support for
a THRU option.
STRAIN
(..\tpl\opt_sens\d200n07.dat)
The STRAIN response invokes a strain response on a finite element. In this case, the ATTA field selects the
strain item code and the meaning of the ATTi field is dependent on what has been input in the PTYPE field
of the entry. If the PTYPE is “ELEM”, then the ATTi data select the element IDs for the response (MSC&lt;br&gt;
Nastran requires that all element IDs be unique across element types so that there is no ambiguity when
selecting the element IDs.) If the PTYPE selects a property type, such as PROD or PSHELL, the ATTi field
selects property IDs of the type selected with PTYPE. The ATTB field is used for ANALYSIS =MODES
subcases to identify the mode number. ATTB is ignored for ANALYSIS =STATICS.
Item codes for stress and strain can be found in Item Codes  in the MSC Nastran Quick Reference Guide . An
example using the CQUAD4 element type with center strains is shown in Table 4-6.
Table 4-6  Item Code Example for the QUAD4 Element with Linear Output
Element Name
(Code)Real Stresses or Strains Complex Stresses or Strains
Item
Code ItemItem
Code ItemReal/Mag. or
Imag./Phase
CQUAD4
(33)
Linear2 Z1=Fiber distance 1 2 Z1=Fiber distance
1
31Normal x at Z1 31Normal x at Z1 RM
41Normal y at Z1 41Normal x at Z1 IP
51Shear xy at Z1 51Normal y at Z1 RM
6 Shear angle at Z1 61Normal y at Z1 IP
7 Major principal at Z1 71Shear xy at Z1 RM
8 Minor principal at Z1 81Shear xy at Z1 IP
9 von Mises or
maximum shear at Z19 Z2=Fiber distance
2
10 Z2=Fiber distance 2 101Normal x at Z2 RM&lt;/p&gt;
&lt;p&gt;215 Chapter 4: Input Data
Design Responses
Main Index
ESE
(..\tpl\opt_ese\spcese1.dat)
The ESE response type identifies an element strain energy response. The ATTB field is used for
ANALYSIS =MODES subcases to identify the mode number. ATTB is ignored for ANALYSIS =STATICS.
The ATTA field selects the element strain energy item code and the ATTi field selects the applicable elements
or properties in the same manner as just described for the STRAIN response. The item codes are found in
Element Strain Energy Item Codes  in the MSC Nastran Quick Reference Guide . Only item codes 2 and 4 from this
table are selectable on a DRESP1 entry and it is noted from the reference that not all element types are
supported with item code 4. The sensitivity of the ESE response is not computed for design variables which
affect the shape of the model.
STRESS
(..\tpl\ugdesopt\dsoug1.dat )
The STRESS response invokes a stress response in an element. The comments for the STRAIN response
apply to the STRESS response.
FORCE
(..\tpl\cc2003\tpchsm.dat)
The FORCE response invokes a force response in an element. The ATTA field in this case points to item
codes contained in Element Force Item Codes  in the MSC Nastran Quick Reference Guide . It is noted from
Table 4-5 that the direct form of approximation is used for the response type. In general, the force in a element
is a weak function of the model properties making it difficult to satisfy constraints imposed on this response. 111NormaI x at Z2 111NormaI x at Z2 IP
121Normal y at Z2 121Normal y at Z2 RM
131Shear xy at Z2 131Normal y at Z2 IP
14 Shear angle at Z2 14 Shear xy at Z2 RM
15 Major principal at Z2 15 Shear xy at Z2 IP
16 Minor principal at Z2
17 von Mises or
maximum shear at Z2Table 4-6  Item Code Example for the QUAD4 Element with Linear Output  (continued)
Element Name
(Code)Real Stresses or Strains Complex Stresses or Strains
Item
Code ItemItem
Code ItemReal/Mag. or
Imag./Phase
Note:   This table is applicable when a STRAIN Case Control command is absent in case control or
present with the CENTER (default) option. As an example from the table, it is seen that item
code 7 selects the major principal stress at the center Z1 location.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses216
Main Index
The ATTB field is used for ANALYSIS =MODES subcases to identify the mode number. ATTB is ignored
for ANALYSIS =STATICS.
Fatigue
(..\tpl\fatigue\ftgdsa3.dat)
The FATIGUE response is available for ANALYSIS=STATICS subcases. The format of the input is similar
to other static element responses such as stress in that the PTYPE field specifies whether the ATTi  refers to a
particular element or to a property ID. Unlike other static element responses, the DRESP1 must point to an
element that has participated in the fatigue analysis. The ATTA field points to item codes as defined in Fatigue
Item Codes  in the MSC Nastran Quick Reference Guide . Available item codes are 4 -9 and 12 for the first node
of the element or the element center if LOC=ELEM has been used on the FTGPARM entry. For subsequent
nodes, the item code needs to be incremented as specified in Fatigue Item Codes .   The ATTB field must be set
to the FATIGUE ID that has been invoked in case control. Note that while multiple fatigue analyses are
supported in a given submittal, optimization supports only a single fatigue analysis  so that the same
FATIGUE ID must be used for all the DRESP1 entries with TYPE=FATIGUE.  As discussed above, the
meaning of the ATTi field input is dependent on the PTYPE data. If ATT1 is blank, all the fatigue responses
that match the property id are extracted. Due to the fact that the fatigue analysis is likely to span subcases,
the DESGLB case control command should be used to apply the constraints above the subcase level. For more
details see Design Optimization  in the MSC Nastran Embedded Fatigue User’s Guide .
SPCFORCE
(..\tpl\opt_ese\spcese1.dat)
The SPCFORCE response invokes a single point constraint response at a designated degree-of-freedom in
the model. The ATTA and ATTi field attributes follow the rules of the DISP response.
CSTRAIN
(..\tpl\cc2003\tpchsm.dat)
The CSTRAIN response invokes a strain response in a finite element whose properties have been provided
on a PCOMP or PCOMPG entry. The item codes for composite properties differ so you must make sure you
are using the correct element code when requesting composite responses. Note that corner stresses are not
available for composite elements. Also, composite responses differ from homogeneous element responses in
that the von Mises stress/strain is not available. The composite responses are derived on a layer by layer basis
and the ATTB field is used to identify which layer is of interest. This number corresponds to the value of i
in the T i input on the PCOMP . For the PCOMPG, ATTB points to the GPLYIDi. ATTB cannot be blank
on PCOMPG references. If the ATTB field is left blank for the PCOMP , the response will be calculated for
the first layer.
It is noted that it is possible use the PCOMP entry but still request STRAIN/STRESS type responses for the
elements by either using PTYPE =PSHELL or by identifying the elements by their ID.
CSTRESS
(..\tpl\optim\d200m14.dat)
The CSTRESS response type is the composite stress equivalent to the CSTRAIN response for composite
strains. The remarks given for the CSTRAIN response type apply equally to the CSTRESS type.&lt;/p&gt;
&lt;p&gt;217 Chapter 4: Input Data
Design Responses
Main Index
CFAILURE
(..\tpl\cc2003\tpchsm.dat)
The CFAILURE response type allows the specification of a composite failure criterion in the design of
composite structures. The ATTB and ATTi fields for this response are the same as the CSTRAIN or
CSTRESS, but the item codes differ in that the failure item codes are provide in Element Force Item Codes  in
the MSC Nastran Quick Reference Guide . Only item codes 5 (direct stresses) or 7 (interlaminar shear stress)
are supported. Further, the specification of the failure criterion depends on correctly specifying a number of
other items in the bulk data file:
The failure theory to be used (e.g., Tsai-Wu) is selected on the FT field of the PCOMP or
PCOMPG entry.
The allowable bonding shear stress is taken from the SB field on the PCOMP or PCOMPG entry.
Stress limits that are used in computing the failure index are taken from the ST,SC and SS fields on
the MATi entry invoked by the PCOMP or PCOMPG.
CSTRAT
(..\tpl\cc2005\icwcs.dat)
The composite strength ratio response is a direct failure indicator and, as such, is an ideal response for the
design of composites. Only item codes 5 and 7 from the composite element force item codes are available for
this response type.
TOTSE
(..\tpl\dloads\dl_totse.dat)
The TOTSE response is a global response quantity in that the entire structure contributes to the total strain
energy response due to a static load in an ANALYSIS =STATICS subcase or a normal mode in an
ANALYSIS =MODES subcase. The ATTB field is used to identify the mode number in a normal modes
analysis. The response can be for the entire structure or can be for an individual superelement specified in the
ATT1 field. If ATT1 is blank, the total strain energy of the structure is used for the response. If it is zero, the
total strain energy of the residual is used.  In topology optimization TOTSE should not be used when the
TOPVAR entry contains a STRESS limit. The COMP response is a viable alternative for this case.
GPFORCE
(..\tpl\cc2003\gpfds1.dat)
The GPFORCE response type allows the specification of a grid point force response in a statics analysis. The
ATTA field can be any combination of the digits 1-6 (e.g., 135) and each digit will result in the recovery of
a grid point force (e.g., components 1, 3, and 5). Any number of elements can be specified using the ATTi
fields. The PTYPE field is used in this case to indicate which grid the grid point force is associated with.
For standard data recovery in MSC  Nastran, setting NOELOF &amp;gt;0 allows for a special type of grid point force
printout that is along the edges of the elements. This form of grid point force is not supported on the
DRESP1 entry.
GPFORCP
(..\tpl\cc2003\gpfds2.dat)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses218
Main Index
The GPFORCP response type allows the specification of a grid point force response that is of the form output
when the PARAM NOELOP &amp;gt;1 is used for standard data recovery. In this form, the sum of the grid point
forces are computed parallel to the edges of the adjacent elements. The ATTA field identifies the grid point
and the ATTi field(s) identify the orientation of the force by specifying the grid ID(s) that is connected to
the ATTA grid.
FRDISP
(..\tpl\opt_dyn\d200d03.dat)
The FRDISP response type identifies an displacement in a frequency response analysis at a particular grid
point and component. It is therefore similar to the DISP response in statics except that the component
specified by ATTA can now range from 1 through 12, where components 7-12 refer to the imaginary part of
the response or to the phase angle. It is no longer possible therefore to specify multiple components using the
ATTA field. As indicated in the Case Control description of Case Control Section , the selection of whether
the REAL/IMAGINARY or MAGNITUDE/PHASE representation is to be used is based on the option
selected on the DISPLACEMENT Case Control command. In the absence of this command, the DRESP1
response is based on the default of the REAL/IMAGINARY option. Multiple subcases are supported for
frequency response analysis and the set of excitation frequencies, as well as design responses and constraints,
can be changed between subcases. The ATTi fields are used to identify the grid points the responses are to be
extracted from while the ATTB field has a number of options that need to be covered in detail.
If the ATTB field is blank, the response is evaluated at all the excitation frequencies. As indicated on the
DCONSTR entry, it is possible to specify a range of frequencies over which the constraint is applied. In this
case, the constraints will only be evaluated over a range of the frequencies. If the excitation frequencies are
based on FREQ3, FREQ4 and/or FREQ5 Bulk Data entries, the excitation frequencies change as the design
changes so that the frequencies at which the DRESP1 responses are evaluated will change as well.
If the ATTB field is a real number, the response is calculated at the excitation frequency (in Hz.) that is nearest
to that number.
ATTB field can also be one of six special character strings that have the following meaning:
SUM Xi
i1=n
=
AVG Xin
i1=n
=
SSQ Xi2
i1=n
=&lt;/p&gt;
&lt;p&gt;219 Chapter 4: Input Data
Design Responses
Main Index
The xi is the response at a particular frequency identified by the  i subscript and the n is the number of
excitation frequencies in the analysis. These special commands provide a convenient alternative to the
DRESP2/DEQATN formulation and are similar to the specialized intrinsic functions discussed with the
DEQATN and FUNC attribute on the DRESP2 entry. A difference is that the use of the ATTB character
string on the DRESP1 applies the function to the particular frequency response results. The FUNC attribute
on the DRESP2 entry is more general in that it applies to all the arguments while the special DEQATN
functions are even more general because the arguments are explicitly selected.
A special situation exists when the result from a DRESP1 that includes character string input in the ATTB
field is subsequently used in a DRESP2 entry. The DRESP1 in this case is regarded as a DRESP2 so that the
DRESP1 ID should be referenced as a DRESP2 on the subsequent DRESP2. The following bulk data
fragment shows how two DRESP1 entries that provide a RSS response at a particular grid can be summed
into a single response.
PRES
(..\tpl\ugdesopt\dsoug1.dat)
The PRES response identifies an acoustic pressure that is computed in a frequency response analysis. These
pressures are computed for grid points that are in the fluid of the model and output as component 1 of that
grid. The ATTA and ATTi fields are similar to the other frequency response types except that the ATTA field
should only specify component 1 or 7. The DISP Case Control command selects whether the
REAL/IMAGINARY or the MAGNITUDE/PHASE representation of data is used (input on the
PRESSURE Case Control command is ignored). The comments regarding the ATTB field for the FRDISP
response type apply to the PRES response type as well.
FRVELO
(..\tpl\opt_dyn\d200d03.dat)FREQ1 100 0.0 1.0 100
$ DRESP1 41O PROVIDES A SUM OF SQUARES OF THE ACCELERATION OF COMPONENT 2
OF GRID 100
$ OVER THE 101 FREQUENCY POINTS FROM 0.0 TO 100. HZ.
DRESP1 410 ACEL1 FRACCL 2SSQ 100
$ DRESP1 420 PERFORMS THE SAME FUNCTION FOR GRID 200
DRESP1 420 ACEL2 FRACCL 2SSQ 200
$ DRESP2 501 USES THE &amp;ldquo;DRESP2&amp;rdquo; FLAG TO SUM THE TWO RESPONSES THAT ARE ACTUALLY
DRESP1&amp;rsquo;S
DRESP2 501 SUM
DRESP2 410 420RSS Xi2
i1=n
=
MAX Largest value among Xii=1 to n =
MIN Smallest value among Xii=1 to n =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses220
Main Index
The FRVELO response identifies a velocity in a frequency response analysis at a particular grid point and
component. The comments for the FRDISP response type apply to the FRVELO response type. The VELO
Case Control command selects whether the REAL/IMAGINARY or the MAGNITUDE/PHASE
representation of data is used.
FRACCL
(..\tpl\opt_dyn\d200d03.dat)
The FRACCL response identifies an acceleration in a frequency response analysis at a particular grid point
and component. The comments for the FRDISP response type apply to the FRACCL response type. The
ACCE Case Control command selects whether the REAL/IMAGINARY or the MAGNITUDE/PHASE
representation of data is used.
FRFORC
(..\tpl\opt_dyn\d200d04.dat)
The FRFORC response identifies an element force in a frequency response analysis. The comments regarding
the ATTB field for the FRDISP response type apply to the FRFORC response type as well. The FORCE Case
Control command selects whether the REAL/IMAGINARY or the MAGNITUDE/PHASE representation
of data is used.
The ATTA and ATTi fields are similar to that described for the FORCE response. In selecting items codes
from Element Stress (or Strain) Item Codes  in the MSC Nastran Quick Reference Guide, make sure that the
Complex Element Force columns are used.
FRSTRE
(..\tpl\opt_dyn\d200d04.dat)
The FRSTRE response identifies an element stress in a frequency response analysis. The comments regarding
the ATTB field for the FRDISP response type apply to the FRSTRE response type as well. The STRESS Case
Control command selects whether the REAL/IMAGINARY or the MAGNITUDE/PHASE representation
of data is used.
The ATTA and ATTi fields are similar to that described for the STRAIN response. In selecting items codes
from Element Stress (or Strain) Item Codes  in the MSC Nastran Quick Reference Guide, make sure that the
Complex Element STRESS columns are used.
FRSPCF
(..\tpl\opt_dyn\d200d03.dat)
The FRSPCF response identifies an single point constraint force in a frequency response analysis. The
comments for the FRDISP response type apply to the FRSPCF response type. The SPCF Case Control
command selects whether the REAL/IMAGINARY or the MAGNITUDE/PHASE representation of data is
used. A comment on the FRSPCF response is that even though it appears to be a grid response, it is not
treated as such in the determination of whether adjoint sensitivity analysis is appropriate (see Design
Sensitivity Analysis ). This is because the required df/du adjoint load vector of Equation (2-85) is not trivial to
construct for single point constraint forces.&lt;/p&gt;
&lt;p&gt;221 Chapter 4: Input Data
Design Responses
Main Index
PSDDISP
(..\tpl\psd_200\d200psd3.dat)
The PSDDISP response identifies a power spectral density displacement value that is generated in a frequency
response analysis. The form of this response is shown in Equation (2-18). The use of the ATTA, ATTB and
ATTi fields are the same as the FRDISP . In this case, the REAL/IMAGINARY form of the data is used to
construct the PSD value so the Case Control command does not play a role in selecting the data
representation. The PTYPE field identifies the ID of the RANDPS Bulk Data entry that is used to define the
input power spectrum. The use of the RANDPS enables this response to span subcases. If a PSDDISP
response is being applied with RANDPS Bulk Data entries that include multiple subcases, the DESSUB or
DESOBJ request that invokes the PSDDISP response must be in the first subcase used by the RANDPS
entry.
PSDVELO
(..\tpl\psd_200\d200ps7a.dat)
The PSDVELO response identifies a Power Spectral Density velocity value that is generated in a frequency
response analysis. The comments for the PSDDISP response are applicable with the PSDVELO response as
well.
PSDACCL
(..\tpl\psd_200\d200psd6.dat)
The PSDACCL response identifies a Power Spectral Density acceleration value that is generated in a
frequency response analysis. The comments for the PSDDISP response are applicable with the PSDACCL
response as well.
RMSDISP
(..\tpl\ugdesopt\dsoug11.dat)
The RMSDISP response identifies a root mean square displacement value that is generated in a frequency
response analysis. The form of this response is shown in Equation (2-20). The use of the ATTA, ATTB and
ATTi fields are the same as the FRDISP . In this case, the REAL/IMAGINARY form of the data is used to
construct the PSD value so the Case Control command does not play a role in selecting the data
representation. The ATTB field identifies the ID of the RANDPS Bulk Data entry that is used to define the
input power spectrum. The use of the RANDPS enables this response to span subcases. If a RMSDISP
response is being applied with RANDPS Bulk Data entries that include multiple subcases, the DESSUB or
DESOBJ request that invokes the PSDDISP response must be in the first subcase used by the RANDPS
entry.
RMSVELO
(..\tpl\randopt\d200rd06.dat)
The RMSVELO response identifies a root mean square velocity value that is generated in a frequency
response analysis. The comments for the RMSDISP response are applicable with the RMSVELO response as
well.
RMSACCL
(..\tpl\psd_200\d200psd5.dat)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses222
Main Index
The RMSACCL response identifies a root mean square acceleration value that is generated in a frequency
response analysis. The comments for the RMSDISP response are applicable with the RMSACCL response as
well.
ACPWR
(..\tpl\acoweak\acoweak3.dat)
The ACPWR response identifies the acoustic power radiated through wetted surface and all panels or through
a specified panel. The output is requested by Case Control command ACPOWER. The PTYPE should have
the panel name for acoustic power through panel. If PTYPE is blank, the total acoustic power radiated for all
panels is calculated. ATTA and ATTi fields are blank. The comments regarding the ATTB field for the
FRDISP response type apply to this response type as well.
ACINTS
(..\tpl\acoweak\acoweak3.dat)
The ACINTS response identifies acoustic intensity normal to wetted surface. The output is requested by Case
Control command INTENSITY. The PTYPE and ATTA fields should be left blank. The comments
regarding the ATTB field for the FRDISP response type apply to this response type as well. F ield ATTi should
contain the Grid ID of wetted surface.
AFPRES
(..\tpl\acoweak\acoweak3.dat)
The AFPRES response identifies acoustic pressure for Acoustic Field Point Mesh (AFPM). The output is
requested by Case Control command ACFPMRESULT . The PTYPE contains the AFPM ID. ATTA field
should only specify component 1 or 7. The comments regarding the ATTB field for the FRDISP response
type apply to this response type as well. A TTi field should specify the Grid ID of AFPM.
AFINTS
(..\tpl\acoweak\acoweak3.dat)
The AFINTS response identifies acoustic intensity for Acoustic Field Point Mesh (AFPM). The output is
requested by Case Control command ACFPMRESULT . The PTYPE contains the AFPM ID. ATTA field
should specify component code - 0 for normal to AFPM and 1, 2 or 3 for x-, y- or z-directions respectively .
The comments regarding the ATTB field for the FRDISP response type apply to this response type as well.
ATTi field should specify the Grid ID of AFPM.
AFVELO
(..\tpl\acoweak\acoweak3.dat)
The AFVELO response identifies particle velocities for requested Acoustic Field Point Mesh (AFPM) grid
points. The output is requested by Case Control command ACFPMRESULT. The PTYPE contains the
AFPM ID. ATTA field should specify component code - 11, 12 or 13 for real (magnitude) component of
velocity respectively, or 71, 72 or 73 for imaginary (phase) component of velocity respectively. If the ATTB
field is a real number, the response is calculated at the excitation frequency (in Hz.) that is nearest to that
number. The comments regarding the ATTB field for the FRDISP response type apply to this response type
as well. A TTi field should specify the Grid ID of AFPM.&lt;/p&gt;
&lt;p&gt;223 Chapter 4: Input Data
Design Responses
Main Index
AFPWR
(..\tpl\acoweak\acoweak3.dat)
The AFPWR response identifies acoustic power for various frequencies through Acoustic Field Point Mesh
(AFPM). The output is requested by Case Control command ACFPMRESULT. The PTYPE contains the
AFPM ID. ATTA and ATTi fields are blank . The comments regarding the ATTB field for the FRDISP
response type apply to this response type as well. A TTi field should specify the Grid ID of AFPM.
DYNSTIFF
(..\tpl\elafoc\dystsens.dat)
The DYNSTIFF response identifies a dynamic stiffness response in a frequency response analysis. The
DYSTIFF Case Control command selects whether the REAL/IMAG or the MAGNITUDE/PHASE
representation of the data is used.
The ATTA, ATTB and ATTi fields are like those described for the FRDISP .
An example of the use of the dynamic stiffness response can be found in TPL deck elafoc\dystenc.dat .
Equivalent Radiated Power (ERP)
(..\tpl\erpopt\erpopt0.dat)
Equivalent Radiated Power identifies the amount of acoustic power being radiated into a cavity.  These
responses can be designed within a frequency response analysis.  The item code of the ATTA field can be
2 - ERP value
3 - ERP fraction (i.e., the power of the identified panel divided by the total power).
4 - ERP in Db.
Since the response is used in frequency response, the comments regarding the ATTB field for the FRDISP
response type apply to the ERP response as well. The ATTi fields can point to a specific SET3 ID, or, if left
blank, all panel responses identified in the analysis will be used. The PTYPE field needs to be specified as
ERPPNL.
TDISP
(..\tpl\ugdesopt\dsoug12.dat)
The TDISP response identifies a displacement in a transient response analysis at a particular grid point and
component. It is therefore similar to the DISP response in statics, including the feature that it possible to
specify multiple components using the ATTA field. The ATTi fields are used to identify the grid points the
response is to be extracted from while the ATTB field has a number of options that need to be covered in
detail.
If the ATTB field is blank, the response is evaluated at all the excitation time steps.
If the ATTB field is a real number, the response is calculated at the excitation time step that is nearest to that
number.
ATTB field can also be one of six special character string discussed with the FRDISP response except that
now the operations are occurring over multiple time steps instead of multiple frequencies.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses224
Main Index
TVELO
(..\tpl\dynsen\d1112m.dat)
The TVELO response identifies a velocity in a transient response analysis at a particular grid point and
component. The comments for the TDISP response type apply to the TVELO response type.
TACCL
(..\tpl\dynsen\d112g1d.dat)
The TACCL response identifies an acceleration in a transient response analysis at a particular grid point and
component. The comments for the TDISP response type apply to the TACCL response type.
TSPCF
(..\tpl\dynsen\d112g1d.dat)
The TSPCF response identifies an single point constraint force in a transient response analysis at a particular
grid point and component. The comments for the TDISP response type apply to the TSPCF response type.
TSTRE
(..\tpl\dynsen\d112g1d.dat)
The TSTRE response identifies an element stress in a transient response analysis. In this case the ATTA field
refers to a real stress item code as given in Element Stress (or Strain) Item Codes  in the MSC Nastran Quick Reference
Guide. The comments on the ATTB field provided with the TDISP description are applicable to the TSTRE
response as well.
TFORCE
(..\tpl\ugdesopt\dsoug12.dat)
The TFORCE response identifies an element force in a transient response analysis. In this case the ATTA
field refers to a real force item code as given in Element Force Item Codes  in the MSC Nastran Quick Reference
Guide. The comments on the ATTB field provided with the TDISP description are applicable to the
TFORCE response as well.
STMONP1
(..\tpl\ue_mdr4\dmoncants.dat)
The STMONP1 response invokes a structural MONPNT1 (as opposed to an aerodynamic MONPNT1).
This response is only available in static aeroelastic (ANALYSIS=SAERO) and static (ANALYSIS=STATICS)
subcases and not in dynamic or modal subcases. Invoking this response in a statics subcase may not make
much sense since loads are typically invariant with respect to the designed properties. The ATTA field
specifies the components to be extracted. These can be any subset of the integers 1 through 6 that appear on
the monitor quantity with the NAME provided in the PTYPE field.
STMOND1
(..\tpl\ue_mdr4\dmp3.dat)
The STMOND1 response invokes a structural MONDSP1 (as opposed to an aerodynamic MONDSP1).
This response is only available in static aeroelastic (ANALYSIS=SAERO) and static (ANALYSIS=STATICS)
subcases and not in dynamic or modal subcases. The ATTA field specifies the components to be extracted.&lt;/p&gt;
&lt;p&gt;225 Chapter 4: Input Data
Design Responses
Main Index
These can be any subset of the integers 1 through 6 that appear on the monitor quantity with the NAME
provided in the PTYPE field. This response can be thought of as being an averaged displacement.
MONPNT3
(..\tpl\ue_mdr4\dmp3.dat)
The MONPNT3 response invokes a MONPNT3 bulk data entry. This response i s only available in static
aeroelastic (ANALYSIS=SAERO) and static (ANALYSIS=STATICS) subcases and not in dynamic or modal
subcases. The ATTA field specifies the components to be extracted. These can be any subset of the integers
1 through 6 that appear on the monitor quantity with the NAME provided in the PTYPE field.
AEMONP1
(..\tpl\ue_mdr4\dmoncants.dat)
The AEMONP1 response invokes an aerodynamic MONPNT1 bulk data entry. This response is only
available in static aeroelastic (ANALYSIS=SAERO) subcases. The ATTA field specifies the components to be
extracted. These can be any subset of the integers 1 through 6 that appear on the monitor quantity with the
NAME provided in the PTYPE field.
AEMOND1
(..\tpl\ue_mdr4\dmpa.dat)
The AEMOND1 response invokes an aerodynamic MONDSP1 bulk data entry. This response is only
available in static aeroelastic (ANALYSIS=SAERO) subcases. The ATTA field specifies the components to be
extracted. These can be any subset of the integers 1 through 6 that appear on the monitor quantity with the
NAME provided in the PTYPE field. This response can be thought of as being an averaged displacement.
TRIM
(..\tpl\opt_aero\d200a03.dat)
The TRIM response identifies a trim variable in a static aeroelastic response analysis. This can be used to
impose limits on the values these variables can take on during the analysis. It is only necessary to identify the
ID of the AESTAT or AESURF entry that defines the trim variable using the ATTA field. The MSC Nastran
Aeroelastic Analysis User’s Guide, V68 provides further information on this response in Aeroelastic Design
Sensitivity and Optimization .
STABDER
(..\tpl\aero_ss\ha200b.dat)
The STABDER response identifies a stability derivative in a static aeroelastic response analysis. This can be
used to impose limits on the values these variables can take on during the analysis. In addition to the
AESTAT/AESURF entry in the ATTA field, a single component (1 through 6) is specified using the ATT1
field. The ATTB field is used to specify whether restrained (ATTB=1) or unrestrained (ATTB=0) form of the
derivative is to be used. The MSC N astran User’s Guide for Aeroelastic Analysis, V68 provides further
information on this response in Aeroelastic Design Sensitivity and Optimization  and examples in Chapter 10 of that
guide show how the stability derivative for the roll rate due to the a control surface deflection can be
combined with the stability derivative for the roll rate due to roll to provide a measure of the achievable roll
rate of the vehicle.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Responses226
Main Index
FLUTTER
(..\tpl\aero_ss\ha200b.dat)
The FLUTTER response identifies a flutter damping value from an aeroelastic flutter analysis. In this case,
the ATTi fields are used to uniquely identify the damping values of interest.
ATT1 identifies a SET1 Bulk Data entry that specifies for which modes the responses are computed.
This allows you to pinpoint the flutter roots of interest and to avoid placing constraints on flutter
eigenvalues that are primarily due to rigid body modes and therefore not affected by changes in the
structure.
ATT2 identifies an FLFACT entry that specifies the densities at which the flutter responses are
desired. This should be the same set or a subset of the densities used in the flutter analysis that have
been selected on the FLUTTER Bulk Data entry.
ATT3 identifies an FLFACT entry that specifies the Mach numbers at which the flutter responses
are desired. This should be the same set or a subset of the Mach numbers used in the flutter analysis
that have been selected on the FLUTTER Bulk Data entry.
ATT4 identifies an FLFACT entry that specifies the velocities at which the flutter responses are
desired. Note that only the PK and PKNL methods of flutter analysis are supported for this
response. This should be the same set or a subset of the velocities used in the flutter analysis that
have been selected on the FLUTTER Bulk Data entry.
If the PKNL method has been specified on the FLUTTER Bulk Data entry, it must be specified in the
PTYPE field of the DRESP1 entry.
DIVERG
(..\tpl\aero_ss\ha200d.dat)
The DIVERG response is available for the special ANALYSIS=DIVERG subcase that performs a static
aeroelastic divergence analysis and the response value is the dynamic pressure of the selected root. The ATT1
field identifies the single Mach number of the divergence analysis while the ATTA field selects the divergence
root of interest. Typically this would be the first root, but as with the LAMA response, it may be necessary to
specify multiple roots to avoid the situation where satisfying the limit on the first divergence behavior results
in a mechanism from the second or higher root falling below the desired dynamic pressure.
WMPID
(..\tpl\wmpid\wmpid.dat)
The WMPID response can be used to create a response that represents the contribution to the weight of the
model from a particular material or property ID. ATTA specifies the material ID and is optional.  The ATTi
entries specify the property id’s associated with the response. If these PID’s are specified, it is necessary to
specify the property type on the PTYPE field . If ATTA is specified PTYPE and ATTi are optional. If ATTA
is blank, PTYPE and ATTi are required. A TTB is another optional input that specifies the superelement ID.
If ATTB is blank, the response applies to all superelements. If it is zero, it applies to the residual and if it is a
positive integer, it refers to the weight associated with that particular superelement. Composite materials are
supported for this response type and this includes the ability to segregate the weight of a material that is used
in one or more, but not all the laminae.&lt;/p&gt;
&lt;p&gt;227 Chapter 4: Input Data
Optimization Parameters
Main Index
Optimization Parameters
DOPTPRM
Purpose:
Overrides default values of parameters used in design optimization.
Entry Description:
Associated Entries:
None.
Discussion:
There are numerous parameters that control various aspects of the optimization process itself. While all of
these parameters have defaults (the DOPTPRM entry is optional), the defaults may be changed using the
DOPTPRM entry. An overview of selected  parameters, grouped according to their functionality is presented
in this section. See also The Bulk Data Section  in the MSC Nastran Quick Reference Guide as it contains the
complete list of all optimization parameters that may be changed.
Choice of Approximation Method (APRCOD )
There are three types of approximation methods to choose from: direct linearization, mixed method, and
convex linearization (see Function Evaluation ). The mixed method is the default.
Direct linearization (APRCOD = 1) is based on the simple first-order Taylor series expansion directly in terms
of the design variables. The method is often useful for dynamic response optimization, shape optimization,
and optimization tasks that use basis vector formulations.
The mixed method (APRCOD = 2) uses a combination of direct and reciprocal approximations, depending
on the response type being approximated (see Table 4-5). DOPTPR
MPARAM1 VAL1 PARAM2 VAL2 PARAM3 VAL3 PARAM4 VAL4
PARAM5 VAL5 -etc.-
Field Contents
PARAMi Name of the design optimization parameter. For allowable names, see the
DOPTPRM listing in The Bulk Data Section  in the MSC Nastran Quick Reference
Guide . (Character)
VALi Value of the parameter. (Real or Integer; see the DOPTPRM listing in The Bulk
Data Section  in the MSC Nastran Quick Reference Guide )&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization Parameters228
Main Index
Convex linearization (APRCOD = 3) uses either a direct or reciprocal approximation, depending on which
one yields the more conservative approximation. The choice is made on an individual design variable and
individual constraint basis.
Optimization Method (OPTCOD, METHOD)
The OPTCOD parameter permits the specification of the optimization code to be used as shown in Table 4-7.
Note that if neither system cell number 413 or OPTCOD is specified, the code selects the best optimization
algorithm to use based on problem parameters. This is usually adequate.
The METHOD parameter selects the particular algorithm that is to be used with MSCADS as shown in
Table 4-8. The parameter is only relevant for MSCADS.  For MSCADS, METHOD’s 1, 2 and 3 refer to the
Modified Method of Feasible Directions (MMFD), Sequential Linear Programming (SLP) and Sequential
Quadratic Programming (SQP), respectively. Experience has shown that the MMFD algorithm is the most
reliable for MSCADS.
METHOD=4 is sequential unconstrained minimization technique (SUMT) and is only available with
MSCADS. METHOD=ijk is provides access to a suite of MSCADS optimization techniques, with the I
specifying the strategy, j the optimizer and k the one-dimensional search method as shown in Table 4-9. No
guidelines are provided in the use of these ijk alternatives, they are simply made available for knowledgeable
users who are encountering difficulties with one of the basic methods. Table 4-7  OPTCOD Options
Name Description, Type and Default Value
OPTCOD OPTCOD (Character; Default = Blank)
= Blank taken from system cell number 413
= “MSCADS” MSCADS is used
= “IPOPT” IPOPT is used
Table 4-8  METHOD Options
Name Description, Type and Default Value
METHOD Optimization method (Integer &amp;gt; 0; Default = 0)
0 Automatic selection for a better performance based on number of
design variables, number of constraints, number of active/violated
constraints and computer memory.
1 Modified Method of Feasible Directions for MSCADS.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P13</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_013/</guid>
      <description>
        
        
        &lt;p&gt;229 Chapter 4: Input Data
Optimization Parameters
Main Index
2 Sequential Linear Programming for MSCADS
3 Sequential Quadratic Programming for MSCADS
4 SUMT method for MSCADS
IJK See Table 4-9
Table 4-9  MSCADS Options
MSCADS strategy options (integer 0-9)
0 None - Go directly to the optimizer
1 Sequential unconstrained minimization using the exterior penalty
function method
2 Sequential unconstrained minimization using the linear extended
interior penalty function method
3 Sequential unconstrained minimization using the quadratic
extended interior penalty function method
4 Sequential unconstrained minimization using the cubic extended
interior penalty function method
5 Augmented Lagrange multiplier method
6 Sequential linear programming
7 Method of centers
8 Sequential quadratic programming
9 Sequential convex programming
MSCADS optimizer options for J (Integer 1-5)
1 Fletcher-Reeves algorithm for unconstrained minimization
2 Davidson-Fletcher-Powell (DFP) variable metric method for
unconstrained minimization
3 Broydon-Fletcher-Goldfarb-Shanno (BFGS) variable metric
method for unconstrained minimization
4 Method of feasible directions for constrained minimization
5 Modified method of feasible directions for constrained
minimization
MSCADS one-dimensional search options for K (integer 1-8)Table 4-8  METHOD Options
Name Description, Type and Default Value&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization Parameters230
Main Index
Transformation of the Approximate Optimization Task to a Feasible Design (PENAL)
The PENAL parameter can be used to transform an infeasible design into a feasible one using the equations
where the algorithm initializes B to a value equal to the maximum value of gj (if this is a negative number,
the transformation is not required). 0 is the initial value of the objective.
This parameter has been shown to be most useful when applied with the ADS algorithms. PENAL=2.0 is
recommended.
Design Cycle Print Controls (P1, P2, P3, P2CR, P2CDDV, P2CP, P2CC, P2CM, P2CBL, P2CALL,
P2RSET)
Insight into the progress of the optimization task can be obtained by requesting prints of selected information
during the optimization. This can potentially produce an unmanageable amount of data so that a number of
DOPTPRM parameters are available for specifying this print. P1 controls the frequency of the output:1 Find the minimum of an unconstrained function using the Golden
Section method
2 Find the minimum of an unconstrained function using the Golden
Section method followed by polynomial interpolation
3 Find the minimum of an unconstrained function by first finding
bounds and then using polynomial interpolation
4 Find the minimum of an unconstrained function by polynomial
interpolation/extrapolation without first finding bounds on the
solution
5 Find the minimum of a constrained function using the Golden
Section method
6 Find the minimum of a constrained function using the Golden
Section method followed by polynomial interpolation
7 Find the minimum of a constrained function by first finding
bounds and then using polynomial interpolation
8 Find the minimum of a constrained function by polynomial
interpolation/extrapolation without first finding bounds on the
solutionTable 4-9  MSCADS Options  (continued)
gjigjBj12ncon  =  – =
1BPENAL0 + =&lt;/p&gt;
&lt;p&gt;231 Chapter 4: Input Data
Optimization Parameters
Main Index
P2 provides a “first level” control of which design quantities are printed:
The various P2 options can be summed to produce output combinations. For example, P2 =15 prints out
all available design data. The P2 =16 option is the result of a special request and is not directly related to
design.
P3 controls the output of design variables and properties for topology, topography and topometry
optimization. This requires special consideration since the number of designed quantities can be huge and of
limited interest and would typically want to be avoided. The P3 parameter enables the print of these data
when you need insight into the number of variables and their values.
In addition to the intermediate results requested by the P2 parameter, two additional design related outputs
are only output when P3=1 in a topology/topography and topometry optimization task:
a.When making a comparison of the designed properties for the analysis and design model before
the design task begins.
b.At the end of the design task, the history of the design variables at every design cycle.P1 =0 output for initial and optimal designs (default)
=n output for every nth design cycle
P2 =0 No print.
=1 Print objective and design variables. (Default for sizing/shape optimization)
Print objective. (Default for topology optimization)
See P3 for the print of design variables for topology/topography and tomography
optimization.
=2 See P3 for the print of designed properties for topology/topography and tomography
optimization.
=4 Print constraints
=8 Print responses
=16 Print weight as a function of a material ID (note that this is not a design quantity so that
only inputs to the approximate design are available).
= n Sum of desired items. For example, P2 = 10 means print properties and responses
P3 =0 No print of topology/topography and topometry information.
=1 Print design variables and design properties for topology/topography and topometry
optimization as requested by the P2 parameter.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization Parameters232
Main Index
Eight additional parameters control constraint and response prints once these prints have initially been
invoked with the P2 parameter.
P2CALL can be used to provide a default for any or all of the categories. For example, P2CALL = 10 will
print up to 10 of each type of constraint. If there are fewer than ten constraints of a give type available, only
the available number will be printed. Note that P2CALL applies to each type of constraint individually. No
attempt is made to find the most critical constraints across all types and only print out these constraints.
The remaining P2Cx parameters allow you to selectively specify the number of constraints printed for that
constraint type. If the number specified is fewer than the number available, a sort is performed to find the
P2Cx most critical and only these are printed. If the number specified exceeds the number of constraints
available, no sorting is performed and all the constraints are printed in the order of increasing internal
constraint ID.
P2RSET can be utilized to print a selected set of responses. P2RSET refers to a SET1 Bulk Data entry that
contains a list of DRESPx IDs that are to be printed.   Only retained responses (i.e., those that survived the
constraint screening process) are printed.
The print of responses can now be affected by three DOPTPRM parameters: P2, P2CR and P2RSET.
Figure 4-2 depicts how the three parameters affect the print. P2CR Maximum number of Constraints on Responses to be printed
P2CDDV Maximum number of Constraints on Dependent Design Variables to be printed
P2CP Maximum number of Constraints on Properties to be printed
P2CC Maximum number of Constraints on Connectivity properties to be printed
P2CM Maximum number of Constraints on Material properties to be printed
P2CBL Maximum number of Constraints on Beam Library dimensions to be printed
P2CALL Maximum number of Constraints of all categories to be printed
P2RSET SET1 ID for which a set of Response IDs is defined&lt;/p&gt;
&lt;p&gt;233 Chapter 4: Input Data
Optimization Parameters
Main Index
Figure 4-2  Flowchart Showing How P2, P2RSET and P2CR Affect the Print of Retained Design Responses
Optimizer Level Print Control (IPRINT)
The parameter IPRINT controls the amount of optimizer output. This parameter is normally turned off
(default = 0) by users since the optimizer is used in a “black-box” mode. However, sometimes it is useful to
follow what is happening within the optimizer itself. The levels of optimizer print are as follows:
Note that IPRINT &amp;gt; 3 produces constraint prints. These constraint values are in the internal constraint order,
which is associated with the constraint evaluation and is not affected by the print order produced with the
P2Cx parameters. The internal constraint ID is still printed when the P2Cx parameters are used, but the
constraints are unlikely to be in ascending order of this ID.IPRINT Optimizer Printout
0 No output (default)
1 Internal parameters, initial information, and results
2 Same, plus objective function and design variables at each iteration
3 Same, plus constraint values and identification of critical constraints
4 Same, plus gradients
5 Same, plus search direction
6 Same, plus scaling factors and miscellaneous search information
7 Same, plus one-dimensional search informationP2 Set for
Response Print
No Response
Print
P2RSET &amp;gt; 0P2CR &amp;gt; 0
P2RSET &amp;gt; 0
Print all retained
responses in set
P2RSETPrint only
retained
responses
associated
with printed
constraintsAll retained
responses printedN
N
NNY
YY
Y
P2RSET = -1Y&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization Parameters234
Main Index
Maximum Number of Mathematical Programming Design Cycles (DESMAX)
The optimization process is iterative since the optimizer obtains data about the design space from
approximations. The approximate model, constructed based on a detailed finite element analysis, is used by
the optimizer to find an approximate optimum. This design is resubmitted for another finite element analysis
followed by another approximate optimization. This process is repeated until convergence with respect to
these overall design cycles is reached or until the maximum specified number of design cycles (DESMAX) is
reached. The default value of DESMAX is five. Usually, good progress toward a optimal design has been made
by this point and it’s a good time to review the results. However, more cycles are often necessary and the
DESMAX parameter can be adjusted at the user’s discretion. At other times, it is desirable to set DESMAX
to one so that you can make sure that everything appears to be in order before committing to a longer run.
If the maximum number of design cycles is reached before convergence is achieved, a fresh start can  always
be performed after including results from the punch file. (see Punch Parameters ).
Fully Stressed Design (FSDMAX, FSDALP)
The Fully Stressed Design (FSD) algorithm discussed in Fully Stressed Design  has a design loop that is
independent from the mathematical programming loop. The maximum number of FSD design cycles is
specified by FSDMAX, which has a default value of 0 (no FSD cycles). Once the FSD cycles have been
completed (either from convergence or after FSDMAX design cycles), the algorithm automatically transitions
to the mathematical programming algorithm with DESMAX used to control the maximum number of
additional cycles that will be made. Setting DESMAX to 0 will prevent any mathematical programming
cycles.
The FSDALP parameter controls the relaxation factor, , used in the resizing equation of Equation (9-1). The
default value of 0.9 for FSDALP is usually adequate to achieve quick convergence. Lower values, such as 0.5,
can be used to achieve a completely converged solution.
Move Limits on the Approximate Optimization (DELP, DPMIN, DELX, DXMIN)
As the optimizer modifies the design variables, the structure’s properties and/or shape will vary depending on
the design model description. As discussed in The Approximate Model , move limits need to be placed on the
approximate subproblem for efficiency reasons. These move limits are imposed with respect to analysis model
properties as well as design variables. They can be changed from their defaults by modifying DELP and
DPMIN for properties, and DELX and DXMIN for design variables. The DELXV attribute on the DESVAR
entry allows control in the movement of an individual design variable. DELP must always be less than 1.0.
A value of 1.0 or greater could allow the property to go to zero or even negative, with unpredictable results.
Convergence Criteria (CONV1, CONV2, GMAX, CONVDV, CONVPR)
The parameters CONV1, CONV2, GMAX, CONVDV, and CONVPR are used to test for overall design
cycle convergence. These parameters are used in connection with tests for both hard and soft convergence.
Tests for Convergence , describes the types of convergence testing as well as the convergence decision logic.
Soft convergence compares the design variables and design properties output from the approximated model
optimization with these same values at the beginning of the design cycle. Soft convergence is not sufficient
to terminate the design cycle iterations unless the parameter SOFTEXIT is set to YES. NO is the default and
it can be changed with a PARAM Bulk Data entry, not with the DOPTPRM entry.&lt;/p&gt;
&lt;p&gt;235 Chapter 4: Input Data
Optimization Parameters
Main Index
Hard convergence testing compares the analysis results of current design cycle with those of the previous
cycle. This test is a more conclusive test of convergence since it is based on hard evidence. Hard convergence
will always terminate the design cycle process.
Convergence at the optimizer level can also be controlled using the DOPTPRM entry. Parameters that can
be changed include DABOBJ and DELOBJ.
Finite Difference Perturbations (DELB, STPCSL)
Design sensitivity coefficients are computed in MSC  Nastran using a semianalytic approach, as explained in
Design Sensitivity Analysis .
The value of the property finite difference move parameter DELB of Equation (2-40) and Equation (2-41) can
be changed with the DOPTPRM entry although the default value of 1.0E-4 gives good results in most cases.
The value of the shape finite difference move parameter STPCSL of Equation (2-42) can also be changed with
the DOPTPRM entry.
Comparison Between the Design and Analysis Properties (PTOL, PLVIOL)
The initial value of an analysis property given on a property Bulk Data entry may not always correspond to
the value of the property calculated using the initial values of the design variables. If the relative difference
between the properties differs by more than PTOL, the program terminates with an error condition. The
default of 1.0E35 implies that nearly all discrepancies are tolerated and the initial analysis property values will
be overridden using the design model data. If you want your analysis models and design models to agree,
setting PTOL to a value close to zero will terminate the run when the two models differ significantly. A related
DOPTPRM parameter is PLVIOL, which can be set to a non-zero integer to allow the run to continue when
the initial designed properties violate the limits imposed on the properties by the PMIN and PMAX values
on the DVxRELy entries. Allowing these violations is not good practice since it puts a burden on the
optimizer to satisfy a violated property constraint that is more properly satisfied when preparing the input.
A final comment on analysis versus design property values is that the DPEPS parameter entered with a
PARAM entry allows you to specify a difference value that is used to assess whether the analysis properties
are close enough to the designed properties that previously computed results using the analysis properties can
be used in subsequent sensitivity analysis. The default value of DPEPS = 1.0E-4 allows for only a very small
difference so that a new analysis will be performed whenever the design properties differ from the analysis
properties. Setting this parameter to a larger value allows greater differences and perhaps avoids a finite
element analysis. But it must be realized that the sensitivities, which are computed using the design values,
are not fully consistent with the analysis values which have been calculated using the analysis values.
Discrete Variable Optimization (DISCOD, DISBEG)
As discussed in Discrete Variable Optimization , a continuous optimization task can be followed by an essentially
postprocessing operation which determines the values of the design variables which provides an optimal
design while limiting the design variable values to a discrete set of values specified using the DDVAL entry.
Two DOPTPRM parameters (DISCOD and DISBEG) control the discrete variable processing. The
DISBEG parameter specifies at which mathematical programming design cycle you want to start performing
discrete optimization. The default value of 0 performs discrete optimization only after the continuous&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization Parameters236
Main Index
optimization process is complete. The DISCOD parameter selects from one of the four discrete optimization
alternative methods.
The DISCOD =0 option facilitates ignoring DDVAL data on the DESVAR entry when a discrete variable
optimization task is not desired. Options 1-4 are discussed in greater detail in Discrete Variable Optimization .
Constraint Normalization (GSCAL)
Equation (2-10) indicates how the constraints are normalized and makes reference to a GSCAL parameter. This
parameter can be modified from is default value of 0.001 using the DOPTPRM entry. As the discussion
following Equation (2-10) indicates, it is not good practice to define constraints in a way that requires the use
of GSCAL. Instead, the response should be recast in a form (perhaps through the use of a DRESP2 entry)
that avoids the small bounds that invoke the use of GSCAL.
Active and Violated Constraints (CT, CTMIN)
The MSCADS optimizer makes a determination of what constraints it should consider when performing its
task that is over and above the screening actions discussed in Constraint Screening . DOPTPRM parameter
CT is used to define that threshold above which a constraint is considered active while CTMIN is used to
identify violated constraints. (See Figure 2-8 and Figure 2-9.) The default values of -0.03 for CT and 0.003 for
CTMIN have been found to be adequate in most cases. When it appears that the default value is causing the
optimizer to neglect constraints that become critical once the redesign is performed, the CT value can be
changed to a value such as -0.1.
Topology Optimization Variables (TCHECK and TDMIN) and Special Topology Optimization
Settings
Topology optimization has two parameters that are unique to it. Parameter TCHECK is used to turn on a
filtering parameter that is used to prevent a checkerboard pattern from being produced.
The value 1 turns on the filtering algorithm. Use TCHECK=2 to invoke Density Constraint method when
the minimum member size is relatively larger. The default value -1 is automatic selection of the filtering
algorithm and density constraint and is the recommended option. TCHECK=0 turns off filtering.
The second parameter, TDMIN, is used to prevent achieving a final design that is characterized by thin
disjoint fibers that are impractical from a manufacturing standpoint. Design variable elements that are within
a distance of TDMIN from an element with a design variable close to 1.0 are filtered to ensure they are not DISCOD Value Discrete Optimization Method
1 Design of Experiments (Default)
2 Conservative Discrete Design
3 Round up to the nearest design variable
4 Round off to the nearest design variable
0 Turn off discrete variable processing&lt;/p&gt;
&lt;p&gt;237 Chapter 4: Input Data
External Response
Main Index
small. Note that the value of TDMIN is problem-size dependent but not mesh-size dependent. The default
for TDMIN is 0.0 (no filtering).
Tuning of the topology optimization algorithm has indicated the following parameters benefit from a
different default value than is used in standard design optimization.
External Response
External Response or Type-3 Response
Type-3 responses provide a completely general way of synthesizing responses which are (i) not Nastran&lt;br&gt;
responses or Type-1 responses and (ii) too complex to evaluate using synthetic formulations or Type-2&lt;br&gt;
responses.
The Type-3 response is regarded as a major extension of the Type-2 response.
The representation of Type-3 response is similar to that of Type-2. T o illustrate, equations (2-7) and (2-8) from
Fundamentals of Design Sensitivity and Optimization in MSC Nastran  are reproduced below as equations
(4-1) (for Type-2) and (4-2) (for Type-3), respectively:
r2 = f(X,C,R1,P,R2,XYZ) (4-1)
r3 = f(X,C,R1,P,R2,XYZ,string) (4-2)
However, there are some differences. T wo of them can be immediately spotted from a cursory glance at the
equations (4-1) and (4-2). While Type-2 responses may be functions of other Type-2 responses (note R2 in the
argument list in equation 2-7), T ype-3 responses cannot be functions of Type-3 responses. The additional
&amp;lsquo;string&amp;rsquo; argument in equation 2-8 permits the passing of user data that can be used to direct the execution of
the program calculating the response.
A major difference is that while the evaluation of Type-2 response is accomplished by internally solving an
explicit equation defined on the DEQATN Bulk Data Entry, the evaluation of the Type-3 response is by an
external program with which Nastran communicates through an API (Application Program Interface). This
is what gives the Type-3 response an unlimited potential to evaluate responses of any complexity. More
importantly, the external program could be proprietary; Nastran only needs to know the value of the
response, and not how it is calculated. Table 4-10  Modified DOPTPRM Default for Topology
Optimization
Parameter Topology Default
DESMAX 30 or 60 for T opology with
minimum member size
CONVDV 1.0E-4
DELX 0.2
DXMIN 1.0E-5&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
External Response238
Main Index
To illustrate this difference, Figure 3-4 and Figure 3-7 from Developing the Design Model for Sensitivity and
Optimization  are reproduced as Figure 4-3 and Figure 4-4, respectively. They depict the data structures of
DRESP2 and DRESP3 (Bulk Data entries for T ype-2 and Type-3 responses, respectively).
Figure 4-3  Second - Level ResponsesAnalysis
Results
DRESP1 DEQATN DRESP2DESVAR
DTABLE
DNODE
DVPREL1
DVCREL1
DVMREL1
DVLREL1
DVPREL2
DVCREL2
DVMREL2&lt;/p&gt;
&lt;p&gt;239 Chapter 4: Input Data
External Response
Main Index
Figure 4-4  Third-Level Responses
The first line of the DRESP2 Bulk Data Entry contains field EQID or FUNC for providing the ID of
DEQATN entry. DRESP3 Bulk Data Entry does not have this field. Instead, it has fields GROUP and TYPE
which identify the group and type for the external response.
The client-server technology that has been used in Type-3 response is illustrated in Figure 4-5.Analysis
Results
DRESP1External ServerDESVAR
DTABLE
DNODE
DVPREL1
DVCREL1
DVMREL1
DVLREL1
DVPREL2
DVCREL2
DVMREL2
DVMREL2
DRESP2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response240
Main Index
Figure 4-5  The External Response Client-Server Capabilities
User Interface for Setting Up External Response
There are six steps required in setting up the external response in a design task:
1.Create DRESP3 entry to specify the group and type of response
2.Write C or Fortran routines to calculate response based on template routines
3.Build an External server executable using scripts or the SCons Tool executable
4.Create an FMS CONNECT entry to define the external response group
5.Create an evaluator connection file to associate the external response group with the server program.
6.Submit the MSC Nastran job with the gmconn keyword that references to the evaluator connection
file.
These six steps are now explained in detail.
Creating a DRESP3 entry
A DRESP3 entry defines an external response calculated using user-supplied routines. The response can be
used as constraints or as an objective in a design. A compact form of the DRESP3 entry is given below. See
DRESP3 for the detailed description of the Bulk Data Entry. In-House
ProgramServer 1
Server iServer 2API MSC Nastran
i110 =&lt;/p&gt;
&lt;p&gt;241 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
Example
Write C or Fortran Routines to Calculate Response Based on Template
Routines
Two subroutines are modified to perform the server task. These subroutines, and any further routines are
placed in the src subdirectory described in Step 3 below.  The first subroutine is entitled R3SGRT and a
simple example is shown in Listing 4-1 below.  This sets up the parameters used for the external response.
Listing 4-1  R3SGRT Subroutine
SUBROUTINE R3SGRT(GRPID,TYPNAM,nresp, grdtyp, ERROR)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     PURPOSE: VERIFY THE EXTERNAL RESPONSE TYPE
C
C     GRPID   input integer        - Group ID
C     TYPNAM  input character*8    - Name of external response type
c     nresp   outpt integer        - number of responses for this dresp3
c     grdtyp  outpt integer        - integer array of length nresp
c                                   indicating how gradient are to be
c                                   computed
c             = 1 user to supply analytic gradients1 2 3 4 5 6 7 8 9
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;List of DESVAR IDs &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
“DTABLE” &amp;mdash;&amp;mdash;&amp;mdash;-List of LABELs for constants in DTABLE entry&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
“DRESP1” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-List of DRESP1 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
“DNODE” &amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;List of Grid IDs and corresponding degree of freedom&amp;mdash;&amp;mdash;&amp;ndash;
“DVPREL1” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-List of DVPREL1 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
“DVCREL1” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-List of DVCREL1 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
“DVMREL1” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-List of DVMREL1 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
“DVPREL2” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-List of DVPREL2 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
“DVCREL2” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;List of DVCREL2 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
“DVMREL2” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;List of DVMREL2 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
“DRESP2” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;List of DRESP2 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
“DVLREL1” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;List of DVLREL1 IDs&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
“USRDATA” &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;String&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
DRESP3 1 MYRESP MYBUCK BUCKEJ
DESVAR 1 2 3
DRESP1 10 11 12
USRDATA Constants: 12345.6  789.0  99.0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response242
Main Index
c                 varies during approx. optimization
c             = 2 user to supply analytic gradients
c                 invariant during approx. optimization
c             = 3 finite difference technique to provide gradients
c                 varies during approx. optimization
c             = 4 finite difference technique to provide gradients
c                 invariant during approx. optimization
c
C     ERROR   input/output integer -error code for the call.
C
C   Method
C      Match the user input: typnam with the list of available
C      external response types. If no match is found, set error code.
C
C   Called by
C             R3CGRT
C
C   NOTE:
C     The writer of this routine is responsible to specify
C     NTYPES and R3TYPE.
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     VARIABLES PASSED IN
C
INTEGER GRPID, ERROR, nresp
integer grdtyp(&lt;em&gt;)
C      double precision rgdtyp(&lt;/em&gt;)
CHARACTER&lt;em&gt;8 TYPNAM
C
C     LOCAL VARIABLES
C
INTEGER NTYPES, BADTYP
PARAMETER(NTYPES=6)
CHARACTER&lt;/em&gt;8 R3TYPE(NTYPES)
C
DATA BADTYP/7554/
DATA R3TYPE/&amp;lsquo;USEVAR1 &amp;lsquo;,&amp;lsquo;USEVAR10&amp;rsquo;,&amp;lsquo;USEALL&amp;rsquo;,
.            &amp;lsquo;USEMIXVS&amp;rsquo;,&amp;lsquo;FREQMOD &amp;lsquo;,&amp;lsquo;EULJOH &amp;lsquo;/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ERROR = 0
  DO 100 ITYPE = 1, NTYPES
     IF (TYPNAM .EQ. R3TYPE(ITYPE)) THEN
        nresp = 2
        grdtyp(1) = 1
        grdtyp(2) = 1
        GOTO 200
     END IF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;100   CONTINUE
ERROR = BADTYP
200   CONTINUE
RETURN
END
The user is required to assign a value to NTYPES in the parameter statement for the number of response
types for a given response group and to assign the response type names to the array R3TYPE in the data
statement. Further, the user must provide a value to the number of responses NRESP to be calculated for the
response type. Finally, the user must indicate how the gradients are to be supplied for each of the response
types. In the example shown above, there are two responses for the response type and analytical gradients are
to be supplied.&lt;/p&gt;
&lt;p&gt;243 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
Before listing the R3SVALD routine, a portion of a sample input deck containing the DRESP3 and related
entries is given below:&lt;/p&gt;
&lt;p&gt;Listing 4-2  R3SVALD Subroutine
SUBROUTINE R3SVALD(GRPID,TYPNAM,
.                   NITEMS,ARGLIS,
.                   NSIZE, ARGVAL,
.                   NWRDA8,ARGCHR,
.                   forg,nresp,narg,
.                   DR3VAL,senval,
.                   error)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     PURPOSE: COMPUTE THE EXTERNAL RESPONSE
C
C     GRPID   INPUT INTEGER        - GROUP ID
C     TYPNAM  INPUT CHARACTER&lt;em&gt;8    - NAME OF EXTERNAL RESPONSE TYPE
C     NITEMS  INPUT INTEGER        - DIMENSION OF ARRAY ARGLIS
C     NSIZE   INPUT INTEGER        - DIMENSION OF ARRAY ARGVAL
C     NWRDA8  INPUT INTEGER        - DIMENSION OF CHARACTER ARRAY ARGCHR
C     ARGLIS  INPUT INTEGER        - ARRAY OF NO. OF ITEMS FOR EACH
c                                     ARGUMENT type
C     ARGVAL  INPUT DOUBLE         - ARRAY OF ARGUMENT VALUES (except
c                                            characters)
C     ARGCHR  INPUT CHARACTER&lt;/em&gt;8    - ARRAY OF CHARACTER VALUES
c     nresp   input integer        - number of responses
c     forg    input integer        - type of call
c                                     = 0 function evaluation
c                                     = 1 sensitivity evaluation
c     narg    input integer        - number of arguments needing gradients
C     DR3VAL  OUTPUT DOUBLE        - VALUE OF THE EXTERNAL RESPONSEs
c     senval  output  double       - matrix of the sensitivity of the IRth
c                                    response to the IARGth argument
C     ERROR   input/output integer -error code for the call.
C
C   Method
C       A)SET UP VARIOUS PARAMETERS FROM THE ARGUMENT LIST
C       B)if forg = 0 EVALUATE THE EXTERNAL RESPONSE BASED ON THE
c                     GIVEN TYPNAMDRESP3 32 JOHNSO
NTESTGRP EULJOH
DESVAR 1
DTABLE L E SIGMAC
DRESP1 25
DESVAR 1 R 1.0 0.01 10.0
DRESP1 25 SIGMA STRESS PBAR 6 10
Note:   DRESP3 has 5 arguments labeled as R, L, E, SIGMAC and S1&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response244
Main Index
C       C)else if forg = 1 EVALUATE THE sensitivities of the external
c                          responses to the arguments that can vary for
c                          the given typnam
C       D)RETURN BADTYP ERROR IF TYPNAM IS NOT MATCHED HERE.
C
C     nsize - the number of arguments or values in a dresp3 entry
C
C     NSIZE=NV+NC+NR+NNC+NDVP1+NDVP2+NDVC1+NDVC2+NDVM1+NDVM2+NRR2
c        where:
c        nv     = number of desvars    nr    = number of dtables
c        nr     = number of dresp1s    nnc   = number of dnode pairs
c        ndvp1  = number of dvprel1s   ndvp2 = number dvprel2s
c        ndvc1  = number of dvcrel1s   ndvc2 = number dvcrel2s
c        ndvm1  = number of dvmrel1s   ndvm2 = number dvmrel2s
c        nrr2   = number of dresp2s
c     narg = nsize - nc
C
C   CALLED BY
C       Various
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     VARIABLES PASSED IN
C
CHARACTER&lt;em&gt;8 TYPNAM, ARGCHR(NWRDA8)
integer forg , nresp
INTEGER GRPID, NITEMS, NSIZE, ARGLIS(NITEMS), ERROR, NWRDA8
DOUBLE PRECISION ARGVAL(NSIZE), DR3VAL(&lt;/em&gt;), senval(nresp,*)
C
C
C     LOCAL VARIABLES
C
INTEGER BADTYP, idbg
DOUBLE PRECISION PI,  FAC, FACT, SLNDER
DOUBLE PRECISION R,L,E,SIGMA,SIGMAC, RGYRA
C
DATA BADTYP /7554/, badfg /7555/
C
PI = 3.14159
PI2 = PI * PI
nresp  = 2
C
C     THE USER-SUPPLIED EQUATION TO DEFINE THE EXTERNAL RESPONSES
C     SIGMA = DRESP1, R=DESVAR, L, E AND SIGMAC = DTABLE CONSTANTS
C
C     EULER  : EULER= -SIGMA * (L/ RGYRA ) &lt;strong&gt;2 / (PI&lt;/strong&gt;2 * E)
C              RGYRA = R / 2.0
C
C     JOHNSON: JOHNSON = -SIGMA / (SIGMAC * FACTOR )
C              FACTOR = 1. - SIGMAC * (L/RGYRA)&lt;strong&gt;2 /(4 * PI&lt;/strong&gt;2 * E)
ERROR = 0
C
C     SET UP PARAMETERS FOR VARIOUS ARGUMENT ITEMS
C
IF (TYPNAM .EQ. &amp;lsquo;EULJOH &amp;lsquo;) THEN
c        function evaluation
R      = ARGVAL(1)
L      = ARGVAL(2)
E      = ARGVAL(3)
SIGMAC = ARGVAL(4)
SIGMA  = ARGVAL(5)&lt;/p&gt;
&lt;p&gt;245 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
RGYRA  = R / 2.0
SLNDER = L / RGYRA
FACT = PI * SQRT(2.0D0 * E / SIGMAC)
FAC    = 1.0D0 - SIGMAC * (SLNDER) ** 2 /(4.0D0 * PI2 * E )
if ( forg .eq. 0 ) then
c          function evaluation
C          JOHNSON CRITERION
DR3VAL(1) = -SIGMA / (SIGMAC * FAC)
C          EULER CRITERION
DR3VAL(2) = -SIGMA * SLNDER&lt;strong&gt;2 / (PI2 * E )
else if ( forg .eq. 1 ) then
c           gradient evaluation
do 10 iresp = 1, nresp
do 20 iarg = 1, narg
senval(iresp,iarg) = 0.0d0
20            continue
10         continue
c           note that argval(2,3 and 4) are constant and therefore have
c           zero sensitivity
dsldr = -slnder / r
dfacr = -sigmac * slnder * dsldr / (2.0d0 &lt;em&gt;pi2 * e)
c       sensitivity of the first response to the first argument
senval(1,1 ) = dfacr * sigma / ( sigmac * fac ** 2)
c       sensitivity of the second response to the first argument
senval(2,1) = -2.0D0&lt;/em&gt;sigma * slnder * dsldr /
1                     (pi2 * e )
c       sensitivity of the first response to the second argument
senval(1,2) = - 1.0d0 / (sigmac * fac)
c       sensitivity of the second response to the second argument
senval(2,2) = -slnder&lt;/strong&gt;2 / (pi2 * e)
else
error = badfg
endif
ELSE
ERROR = BADTYP
END IF&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RETURN
  END
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The subroutine gets the values of the response as a function of the five DRESP3 arguments. The user has to
supply code for the computation of all DR3VAL(IR) and SENVAL(IR,IARG) for as many response types as
defined in R3SGRT. In the sample routine taken above, the coding has been done only for TYPNAM =
EULJOH. Note that only variable arguments are counted in IARG for SENVAL. In this case, IARG=1 is R
which is ARGVAL(1) and IARG=2 is SIGMA which is ARGVAL(5). ARGVAL(2), ARGVAL(3) and
ARGVAL(4) which are constants are not counted in IARG for SENVAL. The same subroutine is used for
function evaluation and gradient evaluation. The FORG parameter specifies if this is a function evaluation
(FORG=0) or a gradient evaluation (FORG=1).&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response246
Main Index
Build External Servers
Overview
MSC Nastran provides an external server capability (beam library, DRESP3, and Spline servers) to allow
clients to create custom applications without modifying the Nastran program. Prior to MSC Nastran 2023.4
the binary server executables were built using SCons and SDK. Starting with MSC Nastran 2023.4 the binary
servers may also be built with scripts. Note that SDK is being deprecated in a future release.
In this document, building DRESP3 servers is described. However, the discussion directly applies to the other
two servers.
Data Structure Of External Servers
The location of a server directory is in the install_dir/msc 20241/nast/  directory. The supported
beam library, dresp3 and spline servers are placed in three separate directories:
The root directory for beam library server:  install_dir/msc 20241/nast/beamlib
The root directory for DRESP3 server:  install_dir/msc20241/ nast/dr3
The root directory for Spline server:  install_dir/msc20241/ nast/spline_server
The installation directory for DRESP3 server is shown in the figure below. It is located in
install_dir/msc 20241/nast/dr3  on UNIX and install_dir\msc 20241\nast\dr3  on
Windows.&lt;/p&gt;
&lt;p&gt;247 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
Building with Scripts
The examples below are for linux.  For windows use “.bat” as an extension rather than &amp;ldquo;.sh&amp;rdquo;
To build all the DR3 servers type:
build_dr3.sh
The above command will create all the dr3 server templates.  E.g.:
find . -executable -type f
./build_dr3.sh
./src/dr3serv25bar2d/dr3serv25bar2d
./src/dr3servc/dr3servc
./src/dr3servh/dr3servh
./src/dr3servsig/dr3servsig
./src/dr3servr3/dr3servr3&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response248
Main Index
./src/dr3servd/dr3servd
./src/dr3serv25bar1/dr3serv25bar1
./src/dr3serve/dr3serve
./src/dr3servs/dr3servs
./src/dr3servusrdat/dr3servusrdat
./src/dr3servf/dr3servf
./src/dr3serv13/dr3serv13
./src/dr3servb/dr3servb
./src/dr3servaa/dr3servaa
./src/dr3servp/dr3servp
./src/dr3serv/dr3serv
./src/dr3servg/dr3servg
./src/dr3serva/dr3serva
If it is desired to only build one server, you may specify that server name.  e.g.:
build_dr3.sh dr3serva
Modifying Compiler options
The compile and link scripts are located one level above the DR3 files. E.g.:
install_dir/msc 20241/nast/compf.sh and compc.sh
If different compiler or link switches are needed, these files may be updated.
Building with SCons/SDK
SCons is a Software Construction tool. Several benefits of using SCons tools are:
1.Automatically resolves source code dependencies.
2.Easy to build binary programs on different platforms with different operating systems. This is
particularly true for building external server programs on Windows.
3.Easy to build new server programs when you add new source code. You can simply drop your source
code to the target directory without the need to modify SConscript.
4.Easy to extend the current procedures to support applications that are written in Python scripts as
well as in C or Fortran.
Three SCons configuration files in the root directory are required by the SCons tool. Three subdirectories in
the root directory are: include , lib and src.
The include/ directory contains general and operating system defines and defines macro to
facilitate passing character strings between Fortran programs and C programs.
The lib/ directory includes predefined library and object files that are architecture dependent.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P14</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_014/</guid>
      <description>
        
        
        &lt;p&gt;249 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
The src/ directory includes subdirectories that are created to hold source code for various sample
server programs. For each server program, the Scons tool requires a subdirectory be created in the src
directory. It is convenient to use the same program name for the directory name, but it is not
required. For example, directory dr3serv is created for the dr3serv program. It contains a SConscript
file and three Fortran template routines, r3sgrt, r3svald, r3svals described in Step 2: Write C or
Fortran routines.
Build a DRESP3 Server
Building an external server requires your computer to have Software Development Kit installation (SDK) and
the MSC Nastran installation with the external server option. (This is the standard installation and should
require no action on the user&amp;rsquo;s part).&lt;br&gt;
SCons is a Software Construction tool. Several benefits of using SCons tools are:
1.Automatically resolves source code dependencies.
2.Easy to build binary programs on different platforms with different operating systems. This is
particularly true for building external server programs on Windows.
3.Easy to build new server programs when you add new source code. You can simply drop your source
code to the target directory without the need to modify SConscript.
4.Easy to extend the current procedures to support applications that are written in Python scripts as
well as in C or Fortran.
For the purposes of this discussion, it is assumed the name of the program you are building is called dr3serv.
In the dr3serv/ subdirectory, you have already modified three Fortran template routines. The binary program
is saved as dr3serv on UNIX or dr3serv.exe on Windows.
The simplest way to build a server is to enter the command from the root directory,
scons dr3serv
where dr3serv is the name of the program you are building. By default, the command saves the program in
the directory  ~dr3/Apps/arch/bin  that is architecture dependent. For example, arch=LX8664 indicates
Linux 64 bit machine or arch=WIN8664 a Window 64 bit machine.
If you do not have the write privilege to the install_dir, you must copy the entire dr3/ directory to another
location. Then enter the above command in the root directory to build the server.
The next several subsections present more advanced topics to customize your build, such as how to build a
server from a subdirectory, how to redirect the output from a build to a new location and how to modify
SConscript file for your special applications. For simple DRESP3 applications, this material can be skipped
over for now and you can proceed to Creating a CONNECT Command.
Build All the Programs in the ~src/ Directory
The current MSC supplied src/ directory contains 18 subdirectories or server programs. If you want the entire
tree to be built, change to the root directory, (e.g., ~dr3/) and enter the command:
scons
This will build all the programs in the ~dr3/Apps/arch/bin  directory.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response250
Main Index
Build Server Program(s) from a Subdirectory
If you want to build all the programs from a subdirectory, enter the following command in a subdirectory,
scons -D
If you are currently working in the dr3serv source directory and want to build only the dr3erv program from
that directory, enter the following command
scons -D dr3serv
Store Server Program(s) in a Different Location
By default, the program is saved in the ~dr3/Apps/  directory. Specifying construction variables,
APPS_LOCAL  and SCA_OBJECT  allows you to redirect the output from the build to another location. For
example, you can use this option if you want to work from the system installation directory that you do not
have the write access to and store the output in a subdirectory you do have write access to.&lt;br&gt;
APPS_LOCAL  is used to specify the location of Apps Local directory tree that contains the program(s) you
have built and SCA_OBJECT  is used to specify the location of the Object directory tree. To learn more about
the SCons build environment, consult Chapter 16 of SCA Framework User&amp;rsquo;s Guide . These two variables may be
specified in one of two ways:
1.Add an option to the scons command
scons dr3serv APPS_LOCAL=/scratch  SCA_OBJECT=/scratch/.obj
or
2.Define construction variables APPS_LOCAL and SCA_OBJECT in the SConopts.user file. The
SConopts.user is an optional SCons configuration file that is located in the home directory on your
computer. The following shows a sample SConopts.user file:&lt;/p&gt;
&lt;h1&gt;Sample of SConopts.user file&lt;/h1&gt;&lt;p&gt;import sys
import SCASCons&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;Object and Apps directory&lt;/h1&gt;&lt;p&gt;if SCASCons.MACHINE == &amp;lsquo;WINNT&amp;rsquo;:
SCA_OBJECT   = &amp;lsquo;C:/shz/msc2009t0/.obj&amp;rsquo;
APPS_LOCAL   = &amp;lsquo;C:/shz/msc2009t0&amp;rsquo;
elif (SCASCons.MACHINE).startswith(&amp;lsquo;LX&amp;rsquo;):
SCA_OBJECT   = &amp;lsquo;/scratch/shz/msc2009t0/.obj&amp;rsquo;
APPS_LOCAL   = &amp;lsquo;/scratch/shz/msc2009t0&amp;rsquo;
Build a Server Using Additional Source Files
Three Fortran routines, r3sgrt, r3svald and r3svals are template routines that provide a basis for your
applications. You can extend them by simply arranging more lines in the template or calling a subroutine
from the template. The subroutine may be written in Fortran and/or C. The SCons tool automatically
processes all the source files in the directory that holds the SConscript file. So you simply drop the source
codes in the directory without the need to modify the SConscript file.
After your code modification is complete for building a program called myserver1, you can enter the
command from the subdirectory,&lt;/p&gt;
&lt;p&gt;251 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
scons -D myserver1
Modify SConscript File to Build Custom Server Programs
If you want to provide a user-supplied name to your program or if you want to build the program by
including your own library or object files, you need to modify the SConscript file. The SConscript file is
written in Python scripts and is used to set any special construction variables unique to the directory that
holds the file. It consists of three parts:
Standard and local library imports
This part is required to initialize the SCons construction environment and is placed at the top of the file.
import os
import time
Import(&amp;ldquo;env_base&amp;rdquo;)
env = env_base.Copy()
Standard ending scripts
They are exclusively reserved at the end of the file and should not be changed:
retval = env.ProcessDir(env_base)
Return(&amp;lsquo;retval&amp;rsquo;)
Local customizations.
Contains various construction variables that are used to
a.specify different compiler options for different platforms,
b.reference predefined global and machine dependent library and object files
c.specify the name of the program to built
A sample of local customizations from the SConscript file is shown below. The highlighted lines will be
further discussed in the following special applications.&lt;/p&gt;
&lt;h1&gt;Start of local customization&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;machine map &amp;hellip;&lt;/h1&gt;&lt;h1&gt;Global and Local Compiling Options&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;env.Append(CPPDEFINES=[&amp;lsquo;DRESP3_SERVER&amp;rsquo;, &amp;lsquo;_MSCUTIL&amp;rsquo;, &amp;lsquo;_OEM_NASTRAN&amp;rsquo;])
env.Append(MSCFPP_DEFINES = [&amp;rsquo;_IMPLICITNONE&amp;rsquo;, &amp;lsquo;DRESP3_SERVER&amp;rsquo;])
env.Append(CPPPATH=[src_top + os.sep + &amp;lsquo;include&amp;rsquo;])&lt;/p&gt;
&lt;h1&gt;&amp;hellip;&lt;/h1&gt;&lt;h1&gt;Set up Local Variables&lt;/h1&gt;&lt;p&gt;src_top=env.AbsDirPathInSou(&amp;rsquo;#&amp;rsquo;)
libdir=src_top + os.sep + &amp;rsquo;lib&amp;rsquo; + os.sep + MscArch + os.sep&lt;/p&gt;
&lt;h1&gt;Set Up Access to machine dependent Library and Object Files&lt;/h1&gt;&lt;p&gt;if env[&amp;lsquo;MACHINE&amp;rsquo;] == &amp;lsquo;hpux&amp;rsquo;:
env.Append(LIBS=[&amp;rsquo;nsl&amp;rsquo;, &amp;lsquo;pthread&amp;rsquo;,&amp;lsquo;c&amp;rsquo;,&amp;lsquo;dld&amp;rsquo;])
elif env[&amp;lsquo;MACHINE&amp;rsquo;] == &amp;lsquo;hpuxipf&amp;rsquo;:
env.Append(LIBS=[&amp;rsquo;nsl&amp;rsquo;])
elif env[&amp;lsquo;MACHINE&amp;rsquo;] == &amp;lsquo;solaris&amp;rsquo;:
env.Append(LIBS=[&amp;lsquo;aio&amp;rsquo;,&amp;lsquo;rt&amp;rsquo;,&amp;lsquo;sunmath&amp;rsquo;,&amp;lsquo;socket&amp;rsquo;,&amp;rsquo;nsl&amp;rsquo;,&amp;lsquo;intl&amp;rsquo;])
env.Append(LIBS=[&amp;lsquo;Cstd&amp;rsquo;,&amp;lsquo;Crun&amp;rsquo;,&amp;lsquo;malloc&amp;rsquo;,&amp;lsquo;dl&amp;rsquo;,&amp;lsquo;mvec&amp;rsquo;])&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response252
Main Index
elif env[&amp;lsquo;MACHINE&amp;rsquo;].startswith(&amp;lsquo;WIN&amp;rsquo;):
env.AddLinkLibrary(src_top + &amp;lsquo;/../../api/&amp;rsquo; + MscArch + &amp;lsquo;/xdr&amp;rsquo;)
env.Append(LIBS=[&amp;rsquo;netapi32&amp;rsquo;, &amp;lsquo;Advapi32&amp;rsquo;, &amp;lsquo;ws2_32&amp;rsquo;])
env.AddLinkSource(libdir+&amp;lsquo;getlserm&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])&lt;/p&gt;
&lt;h1&gt;Set Up Access to Global Library and Object Files&lt;/h1&gt;&lt;p&gt;env.AddLinkSource(libdir+&amp;lsquo;cnxx&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])
env.AddLinkSource(libdir+&amp;lsquo;initgmsrvcmns&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])
env.AddLinkSource(libdir+&amp;lsquo;main&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])
env.AddLinkSource(libdir+&amp;lsquo;semd&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])
env.AddLinkLibrary(libdir+&amp;lsquo;dr3srv&amp;rsquo;)&lt;/p&gt;
&lt;h1&gt;Specify Name of the Program to be Built and Other Options.&lt;/h1&gt;&lt;p&gt;env.BuildProgram(&amp;lsquo;dr3serv&amp;rsquo;,  aliases=None, tree=&amp;lsquo;apps&amp;rsquo;, fortranmain=False,
fortranlibs=True)&lt;/p&gt;
&lt;h1&gt;End of local customization&lt;/h1&gt;&lt;p&gt;Now we are ready to modify the SConscipts file and build servers with special requirements.
1.Build a Server with a User-Supplied Name
If you want to create a program with a selected name, follow the steps below and assume the server is called
mydr3serv.
a.Create a new subdirectory called mydr3serv (or any other name) in the src/ directory.
b.Change to the new directory and create files SConscript, r3sgrt, r3svald, r3svals by copying from
an existing directory, say dr3serv/.
c.Edit SConscript and locate env.BuildProgram line as highlighted above. The program name given
in the env.BuildProgram() must match that of the program you are building.
env.BuildProgram(&amp;lsquo;dr3serv&amp;rsquo;, aliases=None, tree=&amp;lsquo;apps&amp;rsquo;, ….)               # before
env.BuildProgram(&amp;lsquo;mydr3serv&amp;rsquo;, aliases=None, tree=&amp;lsquo;apps&amp;rsquo;, ….)            # after
d.Modify the Fortran routines as needed
Enter the following command from your working directory,
scons -D mydr3serv
Or change directory to the root and enter command
scons mydr3serv
If the command runs successfully, the binary program, mydr3serv should be created.
2.Build a Server Using Additional Library and Object Files
You can build a program while including your own library or object files. Assume your server needs one
custom library called libmydr3.a and two object files called mydr3obj1.o  and mydr3obj2.o  on UNIX or
mydr3.lib , mydr3obj1.obj  and mydr3obj2.obj  on Windows. Further assume your new program is
called myserver2 . Follow the steps below to complete this special task.
a.Change to the lib/ directory and place your three library and object files there.
b.Create a new directory called myserver2 under ~src/  and change to that directory.
c.Copy SConscript file and three Fortran routines from an existing sample directory.
d.Edit SConscript file,&lt;/p&gt;
&lt;p&gt;253 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
Locate env.AddLinkLibrary  as highlighted in the sample local customization shown above.
The existing python script references the existing library, dr3srv stored in  ~lib  directory. Notice
local variable libdir has been defined for the ~dr3/lib/  directory. It also references another local
variable, src_top that defines the path of the root directory. Therefore, inserting the following
script will allow the SCons tool to including your own library, mydr3 in your server build:
Env.AddLinkLibrary(libdir+&amp;lsquo;mydr3&amp;rsquo;)
e.Locate env.AddSource as highlighted above. This python script line is used for each object file in
the ~lib directory. In order to include two of your own object files, you need to insert the
following lines:
env.AddLinkSource(libdir+&amp;lsquo;mydr3obj1&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])&lt;br&gt;
env.AddLinkSource(libdir+&amp;lsquo;mydr3obj2&amp;rsquo;+env[&amp;lsquo;OBJSUFFIX&amp;rsquo;])&lt;br&gt;
Notice variable env[&amp;lsquo;OBJSUFFIX&amp;rsquo;] automatically resolves architecture dependent file extension
for an object file: the form of .o on UNIX and the form of .obj on Windows.
f.To build the server from the subdirectory you are working on, enter the following command
scons -D myserver2
3.Special procedure for Window Platforms
If you are building a server program on Windows in a non-system installation directory, you must
take the following extra steps to avoid reference to a missing xdr library.
a.First locate the xdr library file. Assume it has been located at
d:\bld\nastran\msc2012\api\win64\xdr.lib &amp;ldquo;. Open the SConscript file in the target
subdirectory.
b.Define local variable, libdir1 to reference the path holding the xdr library:  libdir1=&amp;rsquo;d:&amp;rsquo; +
os.sep + &amp;lsquo;bld&amp;rsquo; + os.sep + &amp;rsquo;nastran&amp;rsquo; + os.sep + &amp;lsquo;msc2012&amp;rsquo; + os.sep +
&amp;lsquo;api&amp;rsquo; + os.sep + MscArch + os.sep
c.Locate an existing script line,&lt;br&gt;
env.AddLinkLibrary(src_top + &amp;lsquo;/../../api/&amp;rsquo; + MscArch + &amp;lsquo;/xdr&amp;rsquo;)
and replace it with the new script line:
env.AddLinkLibrary(libdir1 + &amp;lsquo;xdr&amp;rsquo;).
Useful SCons Build Options
There are many options you may specify on a SCons command. T wo options described in this documents
are: Buildtype and Debugprint. To learn more, consult Chapter 16 of SCA Framework User&amp;rsquo;s Guide.
Buildtype
specifies a compiler option for the build. If you like to run a debugger program (assuming it is available from
your system) to detect possible coding errors, you need to build your program with a debug compile. This
can be achieved by entering the command
scons dr3serv debug=yes&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response254
Main Index
Debugprint
This option requests the SCons tool to print out build diagnostic messages by adding debugprint=i (i=0 to
3) to the command. The following command with debugprint=3 will print out the full set of diagnostic
messages such as source trees scanning, compiling and linking information of each subroutine used in your
server program.
scons dr3serv debugprint=3
Creating a CONNECT Command
The CONNECT command, specified in the File Management System (FMS) section, defines the response
group. Multiple CONNECT entries may be used to define multiple groups. This command is discussed in
File Management.
For continuity, the format is repeated here:
Example
Creating an Evaluator Connection File
The evaluator connection file defines the association between the response group and the corresponding
server program.
Format:
Evaluator_name, the connection option, the path of the server program
Example for evaluator connection file extconnect:
EXTRESP,-,/net/harkness/users/shz/dr3srv/dr3serv on UNIX
or
EXTRESP,-,D:\Scratch\DRESP3\dr3serv.exe  on Windows
where EXTRESP is the evaluator name, symbol &amp;lsquo;-&amp;rsquo; indicates that the pipe option is used for the association
(i.e., server executable program resides in the same computer as the Nastran program does). The last term is
the path name where the server program, dr3serv resides.
Submitting a Nastran Job with the gmconn Keyword
gmconn is the keyword used on the command line to reference the name of the evaluator connection files.
The connection file is processed at the Nastran initialization stage to establish a physical link between the
Nastran program and the server program(s).CONNECT DRESP3 Group_name Evaluator_name
CONNECT DRESP3 MYBUCK EXTRESP&lt;/p&gt;
&lt;p&gt;255 Chapter 4: Input Data
User Interface for Setting Up External Response
Main Index
Example:
mscnast2012 myjob scr=yes gmconn=extconnect
Summary of User Interface
Guidelines and Limitations
It is important to realize that the gradients that are provided are for the responses with respect to the DRESP3
arguments and not (necessarily) the design variables. This takes the burden of performing the chain rule
calculations from the user and uses existing Nastran operations to compute terms such as:
Instead, the R3SVALD subroutine provides the r3/x and r3/ri terms and the remaining operations are
performed within Nastran.
Limitation
There is a limitation that all GRDTYP’s for a particular TYPE must be the same. The GRDTYP’s do not
need to all be the same for all the DRESP3’s in an input file. That is, one can specify analytic gradients for
one TYPE and finite difference gradients for another type.
dr3
dx&amp;mdash;&amp;mdash;&amp;ndash;r3
x&amp;mdash;&amp;mdash;&amp;ndash; =r3
ri&amp;mdash;&amp;mdash;&amp;ndash;ri
x&amp;mdash;&amp;mdash;-+&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
User Interface for Setting Up External Response256
Main Index
Useful Feature for the Case of a Large Number of DRESP1 Entries and Few Variables
DRESP3’s which have a large number of DRESP1’s and no other types of data have been given a special
gradient path. It makes sense to do the finite difference gradient calculation by perturbing all the DRESP1
quantities for a particular design variable and then calling DRESP3 evaluation. In this way, the number of
calls to the evaluator is reduced from 2&lt;em&gt;NRSP1 to 2&lt;/em&gt;NDVI. When NRESP1 &amp;raquo; NDVI, this can provide a
major performance improvement.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 5: Output Features and Interpretation
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
5Output Features and
Interpretation
Output-Controlling Parameters     258
Design Optimization Output     259
Design Sensitivity Output     279
Design Punch Output     284
Postprocessing Output     289&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Output-Controlling Parameters258
Main Index
A MSC Nastran run will produce a number of output files and the goal of this chapter is to explain the
features of these files that are unique to Design Sensitivity and Optimization. Results shown in the .f06 file
are emphasized, but attention is also given to results in the .pch (punch) file, a special “comma separated
values” file and in two possible output database files: .op2 and .xdb.
Since design optimization is an iterative process, a significant amount of output may be generated depending
on the quantity of data requested for each design cycle and the number of cycles performed. There are a few
parameters that affect the level of detail and the frequency of output (for design cycle-dependent data).
Although covered elsewhere in this guide, these parameters are summarized in this chapter in Output-
Controlling Parameters .
This is followed by Design Optimization Output  that serves to document the printed output that is unique
to design optimization through the use of the output from a design optimization problem (DSOUG4.DAT)
in the Test Problem Library (TPL) supplied with your MSC Nastran installation tapes. This example
introduces most of the frequently encountered types of design optimization output, within the context of an
actual problem. The section also documents prints that occur for some of the specialized features of design
optimization, such as Fully Stressed Design. The Design Sensitivity Output  is a similar output example for
design sensitivity analysis. Punch output is described in Design Punch Output  while several postprocessing
options are described in Postprocessing Output.
Output-Controlling Parameters
Parameters that affect either the frequency or level of detail of the output are discussed here briefly. Some of
them (namely, IPRINT , P1, P2, and P2xxxx) are specified on the DOPTPRM Bulk Data entry described in
Bulk Data Entries  while the remainder are input using the PARAM Bulk Data entry. More information on
many of these same parameters can be obtained from Parameters Unique to Design Sensitivity and
Optimization .
DESPCH Controls the frequency updated Bulk Data entry output to the punch file. The default
is for the final design cycle only, but can be changed to every n-th design cycle (plus the
last) with this parameter.
DESPCH1 Controls the amount and form of updated Bulk Data entry output to the punch file.
The amount refers to updated properties, DESVAR, DRESP1 and GRID entries. The
sign selects between short and large field formats.
IPRINT Controls the level of printout available directly from the optimizer.  Its value, which may
range from 0 to 7, is set on the DOPTPRM entry. An increasing value provides
increasing levels of detail.  See the Bulk Data entry, DOPTPRM .
NASPRT Governs the frequency of MSC Nastran analysis results output.  Output may be
requested for the first and last designs only, the first and every n-th design, or turned off
completely with this Bulk Data parameter.
OPTEXIT When set to a value of 4 or 7, provides output of the unformatted design sensitivity
coefficient matrix DSCM2.  This Bulk Data parameter may assume any value from 1 to
7 indicating exit at any one of seven predefined locations in the solution sequence.&lt;br&gt;
However, only OPTEXIT=4 and 7 generate DSCM2 (design sensitivity coefficient)
output. This parameter has been superseded by the DSAPRT Case Control command.&lt;/p&gt;
&lt;h2&gt;259 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
Design Optimization Output
This section presents design sensitivity and optimization output in the context of one of the example
problems (DSOUG4) from MSC Nastran’s test problem library that is also presented as the Stiffened Plate .
This problem is chosen because it contains most of the output commonly encountered in a typical
optimization example. The best approach is for the reader to locate this problem in the test problem library
and run it on his/her installation. The output from the actual problem can then be referenced while reading
this section. The results shown here were generated using MSC Nastran 2014.1 on an Intel-based PC
running Linux. Your output should be quite similar, but there may be slight differences.
DSOUG4 Output
Assuming you have run this example on your installation and have the output file available, you will notice
the following table appearing shortly after the Bulk Data echo:
&amp;mdash;&amp;ndash; COMPARISON BETWEEN INPUT PROPERTY VALUES FROM ANALYSIS AND DESIGN MODELS &amp;mdash;&amp;ndash;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;------comparison-between-input-property-values-from-analysis-and-design-models------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#------comparison-between-input-property-values-from-analysis-and-design-models------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;PROPERTY   PROPERTY   PROPERTY     ANALYSIS         DESIGN          LOWER           UPPER       DIFFERENCE     SPAWNING
TYPE        ID        NAME         VALUE          VALUE           BOUND           BOUND          FLAG          FLAG&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;type--------id--------name---------value----------value-----------bound-----------bound----------flag----------flag&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#type--------id--------name---------value----------value-----------bound-----------bound----------flag----------flag&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;PBAR               3         A    9.600000E-01    9.600000E-01    1.000000E-15    1.000000E+20      NONE           *&lt;br&gt;
PBAR               3        I1    1.207200E+00    1.207200E+00    1.000000E-15    1.000000E+20      NONE           *&lt;br&gt;
PBAR               3        I2    9.812000E-01    9.812000E-01    1.000000E-15    1.000000E+20      NONE           *&lt;br&gt;
PBAR               3         J    3.223445E-03    3.223445E-03    1.000000E-15    1.000000E+20      NONE           *&lt;br&gt;
PBAR               3        C1    1.500000E+00    1.500000E+00        N/A             N/A           NONE           *&lt;br&gt;
PBAR               3        D1   -1.500000E+00   -1.500000E+00        N/A             N/A           NONE           *&lt;br&gt;
PBAR               3        E1   -1.500000E+00   -1.500000E+00        N/A             N/A           NONE           *&lt;br&gt;
PBAR               3        F1    1.500000E+00    1.500000E+00        N/A             N/A           NONE           *&lt;br&gt;
PBAR               3        K1    5.477937E-01    5.477937E-01        N/A             N/A           NONE           *&lt;br&gt;
PBAR               3        K2    1.200344E-01    1.200344E-01        N/A             N/A           NONE           *&lt;br&gt;
PBARL              3      DIM2    1.000000E-01    1.000000E-01        N/A             N/A           NONE            &lt;br&gt;
PSHELL             1         T    1.500000E-01    1.500000E-01    1.000000E-02    1.000000E+20      NONE               P1 Controls the frequency of design cycle output.  By default, initial and final optimization
summaries are output but can be changed to every n-th cycle using this parameter.
P2 Controls how much design cycle information is output at the intervals determined by
P1.
P2CR Maximum number of Constraints on Responses to be printed.
P2CDDV Maximum number of Constraints on Dependent Design Variables to be printed.
P2CP Maximum number of Constraints on Properties to be printed.
P2CC Maximum number of Constraints on Connectivity properties to be printed.
P2CM Maximum number of Constraints on Material properties to be printed.
P2CBL Maximum number of Constraints on Beam Library dimensions to be printed.
P2CALL Maximum number of Constraints of all categories to be printed.
P2RSET SET1 ID for which a set of Response IDs is defined.
POST This Bulk Data parameter is used to identify the data base (.xdb or .op2) to be used for
storing pre- and postprocessing data and, in the case of the .op2 file, what postprocessor
is to be used. In the context of design optimization,  PARAM POST-1 is the most useful
in that it creates data blocks that can be used to perform xy plotting in Patran as shown
in Postprocessing Output.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output260
Main Index
1. THE DIFFERENCE FLAG IS USED TO CHARACTERIZE DIFFERENCES BETWEEN ANALYSIS AND DESIGN MODEL PROPERTIES:
IF THE FLAG IS NONE, THEN THERE IS NO SIGNIFICANT DIFFERENCE BETWEEN THE TWO VALUES.
IF THE FLAG IS WARNING, THEN THE USER IS ADVISED THAT DIFFERENCES EXIST AND THE DESIGN MODEL
IS BEING USED TO OVERRIDE THE ANALYSIS MODEL.
IF THE FLAG IS FATAL, THEN THE DIFFERENCES ARE GREATER THAN  1.00000E+35 AND THE RUN WILL BE TERMINATED.
2. THE SPAWNING FLAG (*) INDICATES THAT THE SPAWNED PROPERTY IS DERIVED EITHER FROM THE BEAM CROSS SECTION
LIBRARY OR FROM A PBEAM ENTRY. THE PROPERTY ID FOR THE SPAWNED PROPERTY IS IDENTICAL TO ITS PARENT.
&amp;mdash;&amp;ndash; COMPARISON BETWEEN INPUT CONNECTIVITY PROPERTY VALUES FROM ANALYSIS AND DESIGN MODELS &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ELEMENT    ELEMENT   CONNECTIVITY  ANALYSIS         DESIGN          LOWER           UPPER       DIFFERENCE
TYPE        ID        NAME         VALUE          VALUE           BOUND           BOUND          FLAG
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
CBAR             31        W3A    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             31        W3B    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             32        W3A    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             32        W3B    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             33        W3A    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             33        W3B    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             34        W3A    1.575000E+00    1.575000E+00        N/A             N/A           NONE
CBAR             34        W3B    1.575000E+00    1.575000E+00        N/A             N/A           NONE
1. THE DIFFERENCE FLAG IS USED TO CHARACTERIZE DIfFERENCES BETWEEN ANALYSIS AND DESIGN MODEL PROPERTIES:
IF THE FLAG IS NONE, THEN THERE IS NO SIGNIFICANT DIFFERENCE BETWEEN THE TWO VALUES.
IF THE FLAG IS WARNING, THEN THE USER IS ADVISED THAT DIFFERENCES EXIST AND THE DESIGN MODEL
IS BEING USED TO OVERRIDE THE ANALYSIS MODEL.
IF THE FLAG IS FATAL, THEN THE DIFFERENCES ARE GREATER THAN  1.00000E+35 AND
THE RUN WILL BE TERMINATED.
Note that this example has two sets of properties that are being compared: the “properties” that are defined
on a property Bulk Data entry and designed using a DVPRELi Bulk Data entry and the “connectivity
properties that are defined on connectivity bulk data entries (those that begin with the letter ‘c’) and that are
designed using the DVCRELi Bulk Data entries. If there had been designed material properties in the
example, this would have caused the print of an additional table that is a “COMPARSION BETWEEN
INPUT MATERIAL PROPERTY VALUES FROM ANALYSIS AND DESIGN MODELS.” This
comparison data is only printed once, at the beginning of the design task and it cannot be “turned off.”
The point of these tables is to allow you to check if the design values in your model are what you expect and
to see if they differ from the analysis values. If any of the analysis model properties differ from the design
model description, the design model will be used to override the analysis model.  This table simply reports on
any differences found and provides notification if this override took place. T he design value column contains
the property values computed from the initial design variable values.  In this example, no differences were
found for any of the properties defined on property entries or on connectivity properties. Note that the first
table lists a series of PBAR properties that have not been explicitly designed in the input file. Instead, the
second beam dimension on the PBARL entry (which corresponds to the thickness of a HAT beam cross
section) is designed and this causes 10 PBAR properties to be designed, including four stress recovery points.
These derived or “spawned” properties are indicated by an asterisk in the final field of the table.
The upper and lower bounds that are printed in these tables correspond to the PMIN and PMAX values
provided on the DVPREL1 and DVCREL1 entries. The “spawned” properties that are a nonlinear function
of the design variable have default values applied to these bounds. The DIM2 property of the PBARL, the
“spawned” properties that are a linear function of the design variable and all of the material properties have
bounds of “N/A” (not applicable) indicating that no bounds are imposed on these properties that are linear
functions of a single design variable.
If the DIFFERENCE FLAG has a FATAL value, this indicates that the analysis model and design model
differ by such a large degree that the design task will be stopped. This should not happen in normal
circumstances, but the discussion of the PTOL parameter in the Comparison Between the Design and&lt;/p&gt;
&lt;p&gt;261 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
Analysis Properties (PTOL, PLVIOL)  portion of the DOPTPRM description shows how the allowable
difference between the analysis and designed property values can be made arbitrarily small.
Once the analysis and design models have been compared, Solution 200 proceeds with an analysis of the
model to gather baseline response data.  A DMAP information message from subDMAP FEA serves notice
that a static analysis has been initiated:
^^^ USER INFORMATION MESSAGE 9051 (FEA)
^^^ STATIC ANALYSIS INITIATED.  DESIGN CYCLE NUMBER=            1
Since this is the first analysis and the parameter NASPRT is at its default value of zero, full data recovery is
performed based on Case Control output requests.  Since displacements and stresses have been requested, we
see the familiar MSC Nastran static analysis output (abbreviated here):
LOAD CONDITION 1                                                                                       SUBCASE 1           &lt;br&gt;
D I S P L A C E M E N T   V E C T O R&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
     10000      G      0.0            0.0            0.0           -1.951458E-02   1.643483E-03   0.0
     10001      G      1.310807E-03  -7.580876E-05   0.0            2.822207E-02  -7.535636E-05   0.0
     10002      G      2.869767E-03  -2.416459E-04   0.0            3.423017E-02   4.365287E-06   0.0
     10003      G      5.090274E-03  -6.282286E-05   0.0            2.823293E-02   7.113095E-05   0.0
     10004      G      8.191596E-03   1.850179E-03   0.0           -1.949971E-02  -1.643704E-03   0.0
     10100      G      0.0           -3.821074E-04   0.0            1.326969E-02  -1.979090E-02   0.0
                ..                           ..                      ..    
                ..                           ..                      ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;..                           ..                      ..
.. .. ..
LOAD CONDITION 2                                                                                       SUBCASE 2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                     S T R E S S E S   I N   Q U A D R I L A T E R A L   E L E M E N T S   ( Q U A D 4 )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;ELEMENT      FIBER               STRESSES IN ELEMENT COORD SYSTEM             PRINCIPAL STRESSES (ZERO SHEAR)              &lt;br&gt;
ID.       DISTANCE           NORMAL-X       NORMAL-Y      SHEAR-XY       ANGLE         MAJOR           MINOR     &lt;br&gt;
VON MISES
1   -7.500000E-02     -1.741460E+03   3.724309E+01   2.401960E+02    82.4431    6.910829E+01   -1.773325E+03&lt;br&gt;
1.808870E+03
7.500000E-02     -1.847658E+03   2.857752E+02  -5.812001E+02   -75.7081    4.338334E+02   -1.995717E+03&lt;br&gt;
2.244305E+03
2   -7.500000E-02     -1.766428E+03  -1.469386E+02  -1.724371E+02   -83.9892   -1.287818E+02   -1.784585E+03&lt;br&gt;
1.723806E+03
7.500000E-02     -1.055006E+03   4.101843E+02  -8.230811E+02   -65.8356    7.794776E+02   -1.424299E+03&lt;br&gt;
1.935568E+03
3   -7.500000E-02     -5.709843E+02  -4.379282E+02  -3.948668E+02   -49.7818   -1.040243E+02   -9.048882E+02&lt;br&gt;
8.576207E+02
7.500000E-02     -6.261518E+02  -8.278744E+01  -6.108423E+02   -56.9889    3.140658E+02   -1.023005E+03&lt;br&gt;
1.210978E+03
4   -7.500000E-02      5.041106E+02  -1.189463E+02  -6.960353E+02   -32.9439    9.551535E+02   -5.699892E+02&lt;br&gt;
1.334778E+03
7.500000E-02     -3.647220E+02   5.339794E+01   9.883966E+02    50.9714    8.546022E+02   -1.165926E+03&lt;br&gt;
1.756739E+03
This is followed by the DMAP information message:
^^^ USER INFORMATION MESSAGE 9052 (FEA)
^^^ STATIC ANALYSIS COMPLETED.  DESIGN CYCLE NUMBER=            1
If other analyses are performed (normal modes, dynamic response, etc.), similar DMAP information
messages and data recovery output will follow.
With the finite element analysis complete, the code performs a hard convergence check when this is the
second or greater design cycle.  Since this is just the first cycle though, DOM12 (the module that performs
the convergence tests) simply reports on the maximum constraint value:
THIS IS THE FIRST ANALYSIS - NO CONVERGENCE CHECK&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;this-is-the-first-analysis---no-convergence-check&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#this-is-the-first-analysis---no-convergence-check&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;MAXIMUM VALUE OF CONSTRAINTS           : -1.6392E-01&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;maximum-value-of-constraints-------------16392e-01&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#maximum-value-of-constraints-------------16392e-01&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Recall that these constraint values refer to the normalized constraints constructed internally in MSC Nastran.&lt;br&gt;
Since the maximum constraint value is negative, we can characterize this initial design as feasible.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output262
Main Index
Furthermore, its value of -0.16392 indicates a constraint satisfaction of around 16%. We will see shortly how
to determine which constraint is responsible for this maximum value.
The next set of design related prints in the output is controlled by the P1 and P2 parameters just discussed
in Output-Controlling Parameters . The example has set P1=1 and P2=15 so that all available design data are
printed. An abbreviated version of these prints is presented here interspersed in the text. In this case, the prints
follow the initial analysis so there is no redesign information available to print. Instead, initial data, as
indicated by the following prints, is presented.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                            *                                                                  *
                            *                                                                  *
                            *                D E S I G N    O P T I M I Z A T I O N            *
                            *                                                                  *
                            *                                                                  *
                            ********************************************************************
                                     ***********************************************
                                     *                                             *
                                     *       I N I T I A L   A N A L Y S I S       *
                                     *                                             *
                                     ***********************************************
                                *******   ANALYSIS RESULTS BASED ON THE INITIAL DESIGN   *******
                                              -----   DESIGN OBJECTIVE   -----
 ----------------------------------------------------------------------------------------------------
            INTERNAL                            MINIMIZE                                                           
            RESPONSE                RESPONSE       OR       SUPERELEMENT    SUBCASE
               ID        DRESPx       TYPE      MAXIMIZE         ID            ID          VALUE   
 ----------------------------------------------------------------------------------------------------
                   1     DRESP1     WEIGHT      MINIMIZE             0            0      6.9618E+00
                                              -----   DESIGN VARIABLES   -----
 ---------------------------------------------------------------------------------------------------------
        INTERNAL       DESVAR                         LOWER                               UPPER   
           ID            ID          LABEL            BOUND             VALUE             BOUND   
 ---------------------------------------------------------------------------------------------------------
               1             1      T-PLATE         1.0000E-03        1.5000E-01        1.0000E+01
               2             2      HATDIM2         1.0000E-03        1.0000E+00        1.0000E+01
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The DESIGN OBJECTIVE print provides attributes of the objective and its initial value. This is followed
by a table DESIGN VARIABLES that contains information included on the DESVAR, including the initial
values of the design variables. T wo IDs are provided each design variable: an internal ID that indicates the
position of the design variable in the design task and the user provided DESVAR ID. Dependent design
variables that are defined using DLINK entries always follow the independent design variables. The identity
of these design variables is useful when attempting to analyze the output from the optimizer algorithm and
when interpreting unformatted design sensitivity prints.
The designed properties are presented next and it is again seen that a distinction is made in the type of
property in that standard properties are presented in a table separate from connectivity properties (and
material properties if any are present in the design). Also spawned beam properties are designated as having
a SECPRO type of property. The initial value of the property is bracketed by its lower and upper bounds.
Again, properties that are a linear function of a single design variable and have no user designed limits do not
have bounds.&lt;/p&gt;
&lt;p&gt;263 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
The property prints are followed by constraint prints and there can be up to four types of constraints printed.
The first table shows the constraints on the design responses. These are the constraints that are imposed on
DRESP1/2/3 responses. The constraints each have an internal ID and this is useful in analyzing the detailed
optimization prints discussed on page 266. The internal constraint ID is followed by a DCONSTR ID that
was used in the definition of the constraint and then has the internal response ID. This internal ID can be
used to identify the response that resulted in the constraint, as will be seen in a moment when we discuss how
to trace the identity of the response that results in the maximum constraint. The response type (RTYPE on
the DRESP1 entry) is then given, as is a flag indicating whether the constraint arose from a lower bound of
upper bound limit. The region ID used in the screening process is followed by the subcase ID and finally the
constraint value.
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH **)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1         10          2          3   STRESS     UPPER           2         1    -4.3148E-01&lt;br&gt;
2         10          3          3   STRESS     UPPER           2         1    -3.9778E-01&lt;br&gt;
3         10          4          3   STRESS     UPPER           2         1    -4.3148E-01&lt;br&gt;
4         10          5          3   STRESS     UPPER           2         1    -3.9778E-01&lt;br&gt;
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH &lt;strong&gt;)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
5         10          6          6   STRESS     UPPER           2         1    -4.6689E-01&lt;br&gt;
6         10          7          6   STRESS     UPPER           2         1    -4.5410E-01&lt;br&gt;
7         10          8          6   STRESS     UPPER           2         1    -4.6689E-01&lt;br&gt;
8         10          9          6   STRESS     UPPER           2         1    -4.5410E-01&lt;br&gt;
9         10         11          1   STRESS     UPPER           1         2    -1.6392E-01&lt;/strong&gt;                                                &amp;mdash;&amp;ndash;   DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
PROPERTY     PROPERTY     PROPERTY     TYPE OF          LOWER                             UPPER&lt;br&gt;
TYPE          ID          NAME       PROPERTY         BOUND            VALUE            BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
PSHELL              1            T     DVPREL1        1.0000E-02       1.5000E-01       1.0000E+20
PBARL               3         DIM2     DVPREL1           N/A           1.0000E-01          N/A
PBAR                3            A     SECPRO         1.0000E-15       9.6000E-01       1.0000E+20
PBAR                3           I1     SECPRO         1.0000E-15       1.2072E+00       1.0000E+20
PBAR                3           I2     SECPRO         1.0000E-15       9.8120E-01       1.0000E+20
PBAR                3            J     SECPRO         1.0000E-15       3.2000E-03       1.0000E+20
PBAR                3           C1     SECPRO        -1.0000E+35       1.5000E+00       1.0000E+20
PBAR                3           D1     SECPRO        -1.0000E+35      -1.5000E+00       1.0000E+20
PBAR                3           E1     SECPRO        -1.0000E+35      -1.5000E+00       1.0000E+20
PBAR                3           F1     SECPRO        -1.0000E+35       1.5000E+00       1.0000E+20
PBAR                3           K1     SECPRO        -1.0000E-03       5.8333E-01       1.0000E+20
PBAR                3           K2     SECPRO        -1.0000E-03       3.7500E-01       1.0000E+20
&amp;mdash;&amp;ndash;   DESIGNED CONNECTIVITY PROPERTIES   &amp;mdash;-
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
ELEMENT      ELEMENT      PROPEETY     TYPE OF          LOWER                             UPPER&lt;br&gt;
TYPE          ID          NAME       PROPERTY         BOUND            VALUE            BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
CBAR               31          W3A     DVCREL1           N/A           1.5750E+00          N/A
CBAR               32          W3A     DVCREL1           N/A           1.5750E+00          N/A
CBAR               33          W3A     DVCREL1           N/A           1.5750E+00          N/A
CBAR               34          W3A     DVCREL1           N/A           1.5750E+00          N/A
CBAR               31          W3B     DVCREL1           N/A           1.5750E+00          N/A
CBAR               32          W3B     DVCREL1           N/A           1.5750E+00          N/A
CBAR               33          W3B     DVCREL1           N/A           1.5750E+00          N/A
CBAR               34          W3B     DVCREL1           N/A           1.5750E+00          N/A&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output264
Main Index
10         10         12          2   STRESS     UPPER           1         2    -4.9124E-01&lt;br&gt;
11         10         13          2   STRESS     UPPER           1         2    -2.2041E-01&lt;br&gt;
12         30         10         14   DISP       UPPER          14         2    -4.9579E-01&lt;br&gt;
&amp;mdash;&amp;ndash;   CONSTRAINTS ON DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL     PROPERTY        PROPERTY           L/U              CYCLE &lt;br&gt;
ID           ID             NAME             FLAG             LIMIT                 VALUE &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
13            1               T          LOWER            7.5000E-02           -1.0000E+00
14            3               A          LOWER            4.8000E-01           -1.0000E+00
15            3              I1          LOWER            6.0360E-01           -1.0000E+00
16            3              I2          LOWER            4.9060E-01           -1.0000E+00
17            3               J          LOWER            1.0000E-15           -3.2234E+12
18            1               T          UPPER            2.2500E-01           -3.3333E-01
19            3               A          UPPER            1.4400E+00           -3.3333E-01
20            3              I1          UPPER            1.8108E+00           -3.3333E-01
21            3              I2          UPPER            1.4718E+00           -3.3333E-01
22            3               J          UPPER            1.3223E-02           -7.5623E-01
&amp;mdash;&amp;ndash;   CONSTRAINTS ON DESIGNED BEAM LIBRARY DIMENSIONS    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL        PBARL         GROUP             TYPE           CONSTRAINT
ID            ID                                                 NO.                VALUE &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
23            3        MSCBML0           HAT                      1           -2.8000E+00
24            3        MSCBML0           HAT                      2           -1.8000E+00
The header for the DESIGN CONSTRAINT ON RESPONSES also includes the notation: “MAXIMUM
RESPONSE CONSTRAINTS ARE MARKED WITH **”. In this case, we see that the ninth internal
constraint has a value of -0.16392 (the value given from the hard convergence check above) and that the
corresponding internal response ID of this maximum constraint is 11. T o see which response this is, we skip
ahead to the table on the next page. It is seen that the eleventh internal response is a stress response in a CBAR
element 34 and that the stress occurs in the second subcase and is component 7 (the maximum stress at End
A of the element). It is also seen that the satisfied constraint results from the stress being less than the
allowable value of 25,000.
Returning to the constraint printout, the next type of constraint that could be printed is those resulting from
constraints placed on dependent design variables. In this example, there are no dependent design variables,
so there is no print for this type of constraint. There are constraints applied to the properties however and
these occur next in the printout. The internal constraint numbering continues from the response constraints
and the table then lists the property ID and name, an indication as to whether the constraint comes from a
lower or upper bound, the cycle limit and then the constraint value. The cycle limit is the limit placed on the
property for the current approximate model and, as explained in the Move Limits , this limit is computed
using the current value of the property, and the user applied limits and the DELP and DPMIN parameters.
A comparison of the list of constrained properties in this printout with the designed properties of the previous
fragment indicates that not all designed properties are constrained. As the Move Limits  has indicated, a
property is not constrained when
1.it is a linear function of a single design variable, and
2.the user has not imposed any limits on the property.
These two criteria are satisfied for the DIM2 PBARL dimension, the BAR stress recovery points and for all
the connectivity properties. The thickness of the PSHELL is a linear function of a single design variable, but
since it has been limited to be greater than 0.01, there is a move limit constraint.
The final constraint type is associated with the beam library. It is seen that there are two of these constraints
and that the are applied to the PBARL with PID=3 and that the section type is a HAT. Referring to Table 2-6,
it is seen that the two constraints are to insure that twice the thickness (DIM2) never exceeds the height&lt;/p&gt;
&lt;h2&gt;265 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
(DIM1) of the HAT or the center (DIM3) of the HAT. In this case, the initial thickness is 0.1, the
(undesigned) height is 3.0 and the width is 2.0, resulting in constraint values of -2.8 and -1.8, respectively.
Note that the maximum constraint that is marked with the ** is only for the constraints that derive from the
responses. In this case, this happens to be the maximum response across all response types, but it is possible
to have situations where the maximum constraint comes from one of the other constraint types and it will
not be flagged.
The final P1/P2 associated prints are associated with the responses themselves. Each response type has
specialized formats to provide the information and it would be tedious to describe each of the possible
formats. Each of the responses does have an internal ID and we have already seen how this can be used to link
the constraints on the responses to the responses themselves. The DRESP1 responses are sorted by
superelement, by subcase and by response type. If there a re DRESP2 responses, they follow the DRESP1
responses for a given superelement/subcase and DRESP3 responses follow the DRESP2s.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;responses-for-a-given-superelementsubcase-and-dresp3-responses-follow-the-dresp2s&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#responses-for-a-given-superelementsubcase-and-dresp3-responses-follow-the-dresp2s&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                           |        R E S P O N S E S    IN    D E S I G N    M O D E L         |
                           ----------------------------------------------------------------------
                                            (N/A - BOUND NOT ACTIVE OR AVAILABLE)
                                         (*** VIOLATED RESPONSES MARKED WITH V ***)
                                         (*** ACTIVE RESPONSES MARKED WITH A ***)
                                              -----    WEIGHT RESPONSE    -----
 ------------------------------------------------------------------------------------------------------------
      INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER                         UPPER   
         ID         ID       LABEL        ID         ID           BOUND          VALUE          BOUND   
 ------------------------------------------------------------------------------------------------------------
           1        15      W             3          3              N/A          6.9618E+00       N/A      
                               I N I T I A L   A N A L Y S I S    S U B C A S E =       1
                                             -----    STRESS RESPONSES    -----
 -----------------------------------------------------------------------------------------------------------
    INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER   
       ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND   
 -----------------------------------------------------------------------------------------------------------
           2         3  S13              2                   9       N/A          1.4213E+04    2.5000E+04  
           3         3  S13              3                   9       N/A          1.5056E+04    2.5000E+04  
           4         3  S13             14                   9       N/A          1.4213E+04    2.5000E+04  
           5         3  S13             15                   9       N/A          1.5056E+04    2.5000E+04  
           6         6  S16              2                  17       N/A          1.3328E+04    2.5000E+04  
           7         6  S16              3                  17       N/A          1.3648E+04    2.5000E+04  
           8         6  S16             14                  17       N/A          1.3328E+04    2.5000E+04  
           9         6  S16             15                  17       N/A          1.3648E+04    2.5000E+04  
                               I N I T I A L   A N A L Y S I S    S U B C A S E =       2
                                          -----    DISPLACEMENT RESPONSES    -----
 ------------------------------------------------------------------------------------------------------------
      INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER                         UPPER   
         ID         ID       LABEL        ID         NO.          BOUND          VALUE          BOUND   
 ------------------------------------------------------------------------------------------------------------
            10         14   D2            10203           3        N/A           1.5126E-02     3.0000E-02  
                                             -----    STRESS RESPONSES    -----
 -----------------------------------------------------------------------------------------------------------
    INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER   
       ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND   
 -----------------------------------------------------------------------------------------------------------
          11         1  SBARA           34                   7       N/A          2.0902E+04    2.5000E+04  
                               I N I T I A L   A N A L Y S I S    S U B C A S E =       2
                                             -----    STRESS RESPONSES    -----
 -----------------------------------------------------------------------------------------------------------
    INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER   
       ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND   
 -----------------------------------------------------------------------------------------------------------
          12         2  SBARB           32                  14       N/A          1.2719E+04    2.5000E+04  
          13         2  SBARB           33                  14       N/A          1.9490E+04    2.5000E+04  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output266
Main Index
After the initial design information has been printed, two messages appear in the output to indicate that a
sensitivity analysis has been performed.
Unless the DSAPRT Case Control command has been used to request sensitivities for this design cycle, no
prints are produced during the sensitivity calculations. Sensitivity prints are discussed in the next section:
Design Sensitivity Output . After the sensitivity analysis has been performed, all of the information necessary
to perform an optimization is available.
The DSOUG4 deck as present in the tpl also produces a large amount of output based on the DOPTPRM
parameter IPRINT . IPRINT = 7 in this example, the most verbose value, produces information on the
optimization parameter and the initial design in terms of the objective, design variables and constraints as
seen by the optimizer. It can also produce gradient information, search direction information and then results
from the one-dimensional search. After the optimization for the current cycle is complete, information on
the final objective, design variables and constraints are printed as is information on the time spent in different
phases of the optimization task. Typically, this is more information than is needed for a SOL 200 analysis and
would be invoked only if, for example, the approximate optimization tasks fails or leads to a design that does
not appear credible. This IPRINT=7 information is not presented here.
After the approximate optimization summary, output for the first design cycle, produced by the P1 =1,
P2=15 parameters on the DOPTPRM entry, is presented. This is the same type of output as we discussed
starting on page 262 except that now we have data available from the input and the output of the approximate
optimization problem. The input values are identical to the initial values for the design and the tables of data
have the same number of rows so only an abbreviated set of these tables are shown here. This summary begins
with the identification of the design cycle number and this is followed by listing of the design objective and
the design variables:&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                            *                                                                  *
                            *                                                                  *
                            *                D E S I G N    O P T I M I Z A T I O N            *
                            *                                                                  *
                            *                                                                  *
                            ********************************************************************
                                         *******************************************
                                         *                                         *
                                         *      D E S I G N   C Y C L E       1    *
                                         *                                         *
                                         *******************************************
                             *****   OPTIMIZATION RESULTS BASED ON THE APPROXIMATE MODEL   *****
                                              -----   DESIGN OBJECTIVE   -----
 --------------------------------------------------------------------------------------------------------------
            INTERNAL                            MINIMIZE                                                           
            RESPONSE                RESPONSE       OR       SUPERELEMENT    SUBCASE        INPUT          OUTPUT   
               ID        DRESPx       TYPE      MAXIMIZE         ID            ID          VALUE           VALUE   
 --------------------------------------------------------------------------------------------------------------
                   1     DRESP1     WEIGHT      MINIMIZE             0            0      6.9618E+00      5.3694E+00
                                              -----   DESIGN VARIABLES   ----- ^^^ USER INFORMATION MESSAGE 9051 (FEA) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;^^^ STATIC SENSITIVITY ANALYSIS INITIATED.  DESIGN CYCLE NUMBER=            1
^^^ USER INFORMATION MESSAGE 9052 (FEA)
^^^ STATIC SENSITIVITY ANALYSIS COMPLETED.  DESIGN CYCLE NUMBER=            1&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Main Index&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL       DESVAR                         LOWER             INPUT            OUTPUT             UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID            ID          LABEL            BOUND             VALUE             VALUE             BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1             1      T-PLATE         1.0000E-03        1.5000E-01        1.0851E-01        1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2             2      HATDIM2         1.0000E-03        1.0000E+00        8.4327E-01        1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Note that the first design variable has decreased while the second has increased.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;The listing of the Designed Properties shows the corresponding changes in the properties and this is&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;particularly useful for the beam properties where the thickness change in the HAT cross-section produces&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;changes in the properties that are not a linear function of the design variable.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;   DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;267 Chapter 5: Output Features and Interpretation
Design Optimization Output&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-optimization-output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-optimization-output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;PROPERTY     PROPERTY     PROPERTY     TYPE OF          LOWER            INPUT           OUTPUT            UPPER&lt;br&gt;
TYPE          ID          NAME       PROPERTY         BOUND            VALUE            VALUE            BOUND&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;type----------id----------name-------property---------bound------------value------------value------------bound&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#type----------id----------name-------property---------bound------------value------------value------------bound&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;PSHELL               1           T     DVPREL1        1.0000E-02       1.5000E-01       1.0851E-01       1.0000E+20
PBARL                3        DIM2     DVPREL1           N/A           1.0000E-01       8.4327E-02          N/A
PBAR                 3           A     SECPRO         1.0000E-15       9.6000E-01       8.1218E-01       1.0000E+20
PBAR                 3          I1     SECPRO         1.0000E-15       1.2072E+00       1.0304E+00       1.0000E+20
PBAR                 3          I2     SECPRO         1.0000E-15       9.8120E-01       8.3704E-01       1.0000E+20
PBAR                 3           J     SECPRO         1.0000E-15       3.2234E-03       1.9374E-03       1.0000E+20
PBAR                 3          C1     SECPRO            N/A           1.5000E+00       1.4953E+00          N/A
PBAR                 3          D1     SECPRO            N/A          -1.5000E+00      -1.5047E+00          N/A
PBAR                 3          E1     SECPRO            N/A          -1.5000E+00      -1.5047E+00          N/A
PBAR                 3          F1     SECPRO            N/A           1.5000E+00       1.4953E+00          N/A
PBAR                 3          K1     SECPRO            N/A           5.4779E-01       5.4799E-01          N/A
PBAR                 3          K2     SECPRO            N/A           1.2003E-01       1.1983E-01          N/A
&amp;mdash;&amp;ndash;   DESIGNED CONNECTIVITY PROPERTIES   &amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;--------designed-connectivity-properties-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#--------designed-connectivity-properties-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;ELEMENT      ELEMENT      PROPERTY     TYPE OF          LOWER            INPUT           OUTPUT            UPPER&lt;br&gt;
TYPE          ID          NAME       PROPERTY         BOUND            VALUE            VALUE            BOUND&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;type----------id----------name-------property---------bound------------value------------value------------bound-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#type----------id----------name-------property---------bound------------value------------value------------bound-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;CBAR                31         W3A     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                32         W3A     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                33         W3A     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                34         W3A     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                31         W3B     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                32         W3B     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                33         W3B     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
CBAR                34         W3B     DVCREL1           N/A           1.5750E+00       1.5543E+00          N/A
The listing of Constraints on Responses shows that the maximum constraint value numerically zero (on the
output as -6.49e-5).
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH &lt;strong&gt;)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE       INPUT           OUTPUT&lt;br&gt;
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE            VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
1         10          2          3   STRESS     UPPER           2         1    -4.3148E-01      -4.2829E-02&lt;br&gt;
2         10          3          3   STRESS     UPPER           2         1    -3.9778E-01      -6.4857E-05&lt;br&gt;
3         10          4          3   STRESS     UPPER           2         1    -4.3148E-01      -4.2829E-02&lt;br&gt;
4         10          5          3   STRESS     UPPER           2         1    -3.9778E-01      -6.4857E-05&lt;/strong&gt;
5         10          6          6   STRESS     UPPER           2         1    -4.6689E-01      -9.0600E-02&lt;br&gt;
6         10          7          6   STRESS     UPPER           2         1    -4.5410E-01      -8.1339E-02&lt;br&gt;
7         10          8          6   STRESS     UPPER           2         1    -4.6689E-01      -9.0600E-02&lt;br&gt;
8         10          9          6   STRESS     UPPER           2         1    -4.5410E-01      -8.1339E-02&lt;br&gt;
9         10         11          1   STRESS     UPPER           1         2    -1.6392E-01**    -7.3114E-04&lt;br&gt;
10         10         12          2   STRESS     UPPER           1         2    -4.9124E-01      -3.8934E-01&lt;br&gt;
11         10         13          2   STRESS     UPPER           1         2    -2.2041E-01      -6.4889E-02&lt;br&gt;
12         30         10         14   DISP       UPPER          14         2    -4.9579E-01      -3.8511E-01&lt;br&gt;
The listing of the Design Responses also shows the input and output values; note that two responses are now
at their limits. It is important to note that the constraints and responses in the preceding output are only
approximate, because they are based on the approximate model (see Type-1 Response Evaluation ).&lt;/p&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output268
Main Index&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;main-index&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#main-index&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                           |        R E S P O N S E S    IN    D E S I G N    M O D E L         |
                           ----------------------------------------------------------------------
                                            (N/A - BOUND NOT ACTIVE OR AVAILABLE)
                                         (*** VIOLATED RESPONSES MARKED WITH V ***)
                                         (*** ACTIVE RESPONSES MARKED WITH A ***)
                                              -----    WEIGHT RESPONSE    -----
 --------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID         ID       LABEL        ID         ID           BOUND          VALUE          VALUE          BOUND&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;-
INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER          INPUT         OUTPUT          UPPER  &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internal----dresp1----response-----row-------column---------lower----------input---------output----------upper&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internal----dresp1----response-----row-------column---------lower----------input---------output----------upper&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;           1        15      W             3          3          N/A          6.9618E+00    5.3694E+00       N/A      
                                D E S I G N   C Y C L E =       1    S U B C A S E =       1
                                             -----    STRESS RESPONSES    -----
 --------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         VALUE         BOUND&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;-
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER         INPUT        OUTPUT         UPPER  &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internal---dresp1---response---element----view----component------lower---------input--------output---------upper&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internal---dresp1---response---element----view----component------lower---------input--------output---------upper&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;           2         3  S13              2               9       N/A          1.4213E+04    2.3929E+04    2.5000E+04  
           3         3  S13              3               9       N/A          1.5056E+04    2.4998E+04    2.5000E+04 A
           4         3  S13             14               9       N/A          1.4213E+04    2.3929E+04    2.5000E+04  
           5         3  S13             15               9       N/A          1.5056E+04    2.4998E+04    2.5000E+04 A
           6         6  S16              2              17       N/A          1.3328E+04    2.2735E+04    2.5000E+04  
           7         6  S16              3              17       N/A          1.3648E+04    2.2967E+04    2.5000E+04  
           8         6  S16             14              17       N/A          1.3328E+04    2.2735E+04    2.5000E+04  
           9         6  S16             15              17       N/A          1.3648E+04    2.2967E+04    2.5000E+04  
                                D E S I G N   C Y C L E =       1    S U B C A S E =       2
                                          -----    DISPLACEMENT RESPONSES    -----
 --------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID         ID       LABEL        ID         NO.          BOUND          VALUE          VALUE          BOUND&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;-
INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER          INPUT         OUTPUT          UPPER  &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internal----dresp1----response-----grid-----component-------lower----------input---------output----------upper&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internal----dresp1----response-----grid-----component-------lower----------input---------output----------upper&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;            10         14   D2            10203           3       N/A          1.5126E-02    1.8447E-02    3.0000E-02  
                                             -----    STRESS RESPONSES    -----
 --------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         VALUE         BOUND&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;-
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER         INPUT        OUTPUT         UPPER  &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internal---dresp1---response---element----view----component------lower---------input--------output---------upper-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internal---dresp1---response---element----view----component------lower---------input--------output---------upper-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;          12         2  SBARB           32              14       N/A          1.2719E+04    1.5266E+04    2.5000E+04  
          13         2  SBARB           33              14       N/A          1.9490E+04    2.3378E+04    2.5000E+04  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The optimizer has been able to reduce the objective without violating any of the response limits. These and
all other necessary structural responses will be updated again on the next design cycle with a full finite element
analysis, and the process will be repeated again. The output Design Variable and Designed Property values
are exact and are not changed by the finite element analysis.
Once the approximate optimization is complete for this cycle, a soft convergence test is performed, and the
results are reported in the following table:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P15</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_015/</guid>
      <description>
        
        
        &lt;p&gt;269 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
Even if soft convergence had been achieved (which it was not), this test will not terminate the design cycles
unless the Bulk Data parameter SOFTEXIT had been set to YES (NO is the default).
A finite element analysis begins the new design cycle as is apparent from the following DMAP information
messages:&lt;/p&gt;
&lt;p&gt;With two successive finite element analyses available (one from the current design cycle and one from the
previous), a hard convergence test can now be performed. Even though convergence has not yet been
achieved, the test results are reported nonetheless.&lt;/p&gt;
&lt;p&gt;Note that convergence has failed on all counts. The objective has changed more than is permitted, the
maximum constraint (based on the exact analysis) is violated and the design variables and properties have
changed significantly. This is not surprising for the first redesign task.
Insight into the validity of the approximate model can be obtained by presenting some of the design
optimization results from the second design cycle.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                            *                                                                  *
                            *                                                                  *
                            *                D E S I G N    O P T I M I Z A T I O N            *
                            *                                                                  *
                            *                                                                  *
                            ********************************************************************
                                         ***********************************************************************************************************************************
                   INSPECTION OF CONVERGENCE DATA FOR THE OPTIMAL DESIGN WITH RESPECT TO 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;APPROXIMATE MODELS
(SOFT CONVERGENCE DECISION LOGIC)&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                      MAXIMUM OF RELATIVE PROP. CHANGES     3.9898E-01 MUST BE LESS THAN   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1.0000E-03
&amp;mdash; AND &amp;mdash;
MAXIMUM OF RELATIVE D.V. CHANGES      2.7659E-01  MUST BE LESS THAN&lt;br&gt;
1.0000E-03&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;^^^ USER INFORMATION MESSAGE 9051 (FEA)
^^^ STATIC ANALYSIS INITIATED.  DESIGN CYCLE NUMBER=            2
CONVERGENCE NOT ACHIEVED YET   (HARD CONVERGENCE DECISION LOGIC)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
RELATIVE CHANGE IN OBJECTIVE           :  2.2874E-01  MUST BE LESS THAN   1.0000E-03
OR      ABSOLUTE CHANGE IN OBJECTIVE           :  1.5924E+00  MUST BE LESS THAN   1.0000E-20
&amp;mdash; AND &amp;mdash;
MAXIMUM CONSTRAINT VALUE               :  7.1964E-02  MUST BE LESS THAN   5.0000E-03
(CONVERGENCE TO A FEASIBLE DESIGN)
&amp;mdash; OR &amp;mdash;
MAXIMUM OF RELATIVE PROP. CHANGES      :  3.9898E-01  MUST BE LESS THAN   1.0000E-03
AND     MAXIMUM OF RELATIVE D.V. CHANGES       :  2.7659E-01  MUST BE LESS THAN   1.0000E-03
(CONVERGENCE TO A BEST COMPROMISE INFEASIBLE DESIGN)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output270
Main Index
*                                         *
*      D E S I G N   C Y C L E       2    *
*                                         *
*******************************************
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH &lt;strong&gt;)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE       INPUT           OUTPUT&lt;br&gt;
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE            VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
1         10          3          3   STRESS     UPPER           2         1     2.9827E-02      -4.5212E-02&lt;br&gt;
2         10          4          3   STRESS     UPPER           2         1     7.1964E-02      -4.4486E-03&lt;/strong&gt;
3         10          5          3   STRESS     UPPER           2         1    -3.9299E-01      -4.2598E-01&lt;br&gt;
4         10          6          3   STRESS     UPPER           2         1     2.9827E-02      -4.5212E-02&lt;br&gt;
5         10          7          3   STRESS     UPPER           2         1     7.1964E-02**    -4.4486E-03&lt;br&gt;
6         10          8          3   STRESS     UPPER           2         1    -3.9299E-01      -4.2598E-01&lt;br&gt;
7         10          9          6   STRESS     UPPER           2         1    -4.2040E-01      -4.5636E-01&lt;br&gt;
8         10         10          6   STRESS     UPPER           2         1    -1.7585E-02      -9.1286E-02&lt;br&gt;
9         10         11          6   STRESS     UPPER           2         1    -9.2282E-03      -8.2167E-02&lt;br&gt;
10         10         12          6   STRESS     UPPER           2         1    -3.1864E-01      -3.5641E-01&lt;br&gt;
11         10         13          6   STRESS     UPPER           2         1    -4.4727E-01      -4.8071E-01&lt;br&gt;
12         10         14          6   STRESS     UPPER           2         1    -4.0146E-01      -4.4015E-01&lt;br&gt;
13         10         15          6   STRESS     UPPER           2         1    -4.4727E-01      -4.8071E-01&lt;br&gt;
14         10         16          6   STRESS     UPPER           2         1    -4.0146E-01      -4.4015E-01&lt;br&gt;
15         10         17          6   STRESS     UPPER           2         1    -4.2040E-01      -4.5636E-01&lt;br&gt;
16         10         18          6   STRESS     UPPER           2         1    -1.7585E-02      -9.1286E-02&lt;br&gt;
17         10         19          6   STRESS     UPPER           2         1    -9.2282E-03      -8.2167E-02&lt;br&gt;
18         10         20          6   STRESS     UPPER           2         1    -3.1864E-01      -3.5641E-01&lt;br&gt;
19         20          2         13   DISP       UPPER          13         1     3.3605E-02      -8.5977E-02&lt;br&gt;
20         10         22          1   STRESS     UPPER           1         2    -4.2589E-01      -4.2811E-01&lt;br&gt;
21         10         23          1   STRESS     UPPER           1         2    -4.1792E-03      -5.6009E-03&lt;br&gt;
22         10         24          2   STRESS     UPPER           1         2    -3.9115E-01      -3.9247E-01&lt;br&gt;
23         10         25          2   STRESS     UPPER           1         2    -6.7333E-02      -6.9596E-02&lt;br&gt;
24         30         21         14   DISP       UPPER          14         2    -3.8900E-01      -3.9111E-01&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
|        R E S P O N S E S    IN    D E S I G N    M O D E L         |
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
(N/A - BOUND NOT ACTIVE OR AVAILABLE)
(*** VIOLATED RESPONSES MARKED WITH V &lt;em&gt;&lt;strong&gt;)
(&lt;/strong&gt;&lt;/em&gt; ACTIVE RESPONSES MARKED WITH A ***)
&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER          INPUT         OUTPUT          UPPER&lt;br&gt;
ID         ID       LABEL        ID         ID           BOUND          VALUE          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
1        15      W             3          3          N/A          5.3694E+00    5.4910E+00       N/A   &lt;br&gt;
D E S I G N   C Y C L E =       2    S U B C A S E =       1
&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER          INPUT         OUTPUT          UPPER&lt;br&gt;
ID         ID       LABEL        ID         NO.          BOUND          VALUE          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
2         13   D1            10302           3       N/A          1.0336E-01    9.1402E-02    1.0000E-01&lt;br&gt;
&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER         INPUT        OUTPUT         UPPER&lt;br&gt;
ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
3         3  S13              2               9       N/A          2.5746E+04    2.3870E+04    2.5000E+04&lt;br&gt;
4         3  S13              3               9       N/A          2.6799E+04    2.4889E+04    2.5000E+04 A
5         3  S13              4               9       N/A          1.5175E+04    1.4350E+04    2.5000E+04&lt;br&gt;
6         3  S13             14               9       N/A          2.5746E+04    2.3870E+04    2.5000E+04&lt;br&gt;
7         3  S13             15               9       N/A          2.6799E+04    2.4889E+04    2.5000E+04 A
8         3  S13             16               9       N/A          1.5175E+04    1.4350E+04    2.5000E+04&lt;br&gt;
9         6  S16              1              17       N/A          1.4490E+04    1.3591E+04    2.5000E+04&lt;br&gt;
10         6  S16              2              17       N/A          2.4560E+04    2.2718E+04    2.5000E+04&lt;br&gt;
11         6  S16              3              17       N/A          2.4769E+04    2.2946E+04    2.5000E+04&lt;br&gt;
12         6  S16              4              17       N/A          1.7034E+04    1.6090E+04    2.5000E+04&lt;br&gt;
13         6  S16              5              17       N/A          1.3818E+04    1.2982E+04    2.5000E+04&lt;br&gt;
14         6  S16              8              17       N/A          1.4964E+04    1.3996E+04    2.5000E+04&lt;br&gt;
15         6  S16              9              17       N/A          1.3818E+04    1.2982E+04    2.5000E+04&lt;br&gt;
16         6  S16             12              17       N/A          1.4964E+04    1.3996E+04    2.5000E+04&lt;br&gt;
17         6  S16             13              17       N/A          1.4490E+04    1.3591E+04    2.5000E+04&lt;br&gt;
18         6  S16             14              17       N/A          2.4560E+04    2.2718E+04    2.5000E+04&lt;br&gt;
19         6  S16             15              17       N/A          2.4769E+04    2.2946E+04    2.5000E+04&lt;br&gt;
20         6  S16             16              17       N/A          1.7034E+04    1.6090E+04    2.5000E+04&lt;br&gt;
D E S I G N   C Y C L E =       2    S U B C A S E =       2&lt;/p&gt;
&lt;p&gt;271 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER          INPUT         OUTPUT          UPPER&lt;br&gt;
ID         ID       LABEL        ID         NO.          BOUND          VALUE          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
21         14   D2            10203           3       N/A          1.8330E-02    1.8267E-02    3.0000E-02&lt;br&gt;
&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER         INPUT        OUTPUT         UPPER&lt;br&gt;
ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
22         1  SBARA           33               7       N/A          1.4353E+04    1.4297E+04    2.5000E+04&lt;br&gt;
23         1  SBARA           34               7       N/A          2.4896E+04    2.4860E+04    2.5000E+04 A
24         2  SBARB           32              14       N/A          1.5221E+04    1.5188E+04    2.5000E+04&lt;br&gt;
25         2  SBARB           33              14       N/A          2.3317E+04    2.3260E+04    2.5000E+04&lt;br&gt;
A review of the DESIGN CONSTRAINTS ON RESPONSES shows a constraint with a positive value when
the approximate model results for the first design cycle indicated that all constraints have been satisfied. The
maximum constraint violation from the exact analysis is only 7.2% so the approximate values were not that
far off. Further comparisons of the RESPONSES IN THE DESIGN MODEL from the two design cycles
gives further information on the validity of the approximate model. The output WEIGHT response from the
first design cycle (5.3694) is identical with the input for the second design cycle. This should not be too
surprising since the weight is a linear function of the design variables in this case so there should not be any
approximation in this response. The grid and element responses differ and it is seen, in fact, that the set of
retained responses differ somewhat for the two design cycles. A response that is retained in both design cycles
is the von Mises stress at the top center (item code 9) of CQUAD4 element with ID=15. For the first design
cycle, this is the fifth internal response and the output value is 25,000. At the second design cycle, this is the
seventh internal response and the input value is 26,799. This is a fairly significant discrepancy, but recall that
the thickness of the plate at which the stress is being measured has been changed from 0.15000 to 0.10852.
This is an appropriate place to show the use of DOPTPRM parameters that can affect the prints that occur
based on the P1 and P2 parameters. For this simple case, the amount of print is modest, but one can imagine
larger models could produce an overwhelming amount of printout. Suppose the DOPTPRM entry at the
end of Listing 8-8 is replaced with:
The P2CR parameter is now requesting that only the five most critical constraints on response quantities are
to be printed while the P2RSET =10 points to a SET1 entry that indicates that only retained responses for
DRESP1 IDs 1 and 2 are to be printed. The results from the two parameters are shown:
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH &lt;strong&gt;)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE       INPUT           OUTPUT&lt;br&gt;
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE            VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
5         10          7          3   STRESS     UPPER           2         1     7.1964E-02&lt;/strong&gt;    -4.4486E-03  $
$&amp;hellip;Optional override of optimization parameters:
$
DOPTPRM IPRINT  7       DESMAX  20      DELP    0.5     P1      1       +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  P2      15 p2cr 5 p2rset 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;set1 10 1 2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output272
Main Index
2         10          4          3   STRESS     UPPER           2         1     7.1964E-02      -4.4486E-03**
19         20          2         13   DISP       UPPER          13         1     3.3605E-02      -8.5977E-02&lt;br&gt;
4         10          6          3   STRESS     UPPER           2         1     2.9827E-02      -4.5212E-02&lt;br&gt;
1         10          3          3   STRESS     UPPER           2         1     2.9827E-02      -4.5212E-02&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
|        R E S P O N S E S    IN    D E S I G N    M O D E L         |
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
(N/A - BOUND NOT ACTIVE OR AVAILABLE)
(*** VIOLATED RESPONSES MARKED WITH V &lt;em&gt;&lt;strong&gt;)
(&lt;/strong&gt;&lt;/em&gt; ACTIVE RESPONSES MARKED WITH A ***)
D E S I G N   C Y C L E =       2    S U B C A S E =       2
&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER         INPUT        OUTPUT         UPPER&lt;br&gt;
ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
22         1  SBARA           33               7       N/A          1.4353E+04    1.4297E+04    2.5000E+04&lt;br&gt;
23         1  SBARA           34               7       N/A          2.4896E+04    2.4860E+04    2.5000E+04 A
24         2  SBARB           32              14       N/A          1.5221E+04    1.5188E+04    2.5000E+04&lt;br&gt;
25         2  SBARB           33              14       N/A          2.3317E+04    2.3260E+04    2.5000E+04&lt;br&gt;
As requested, the five largest response constraints are printed and they have been sorted based on the input
(to the approximate optimization task) constraint values with the most critical occurring first. For the design
responses, the four retained responses associated with DRESP1 =1 or 2 are printed.
Continuing test problem DSOUG4, the design cycle proceeds for three design cycles when the following soft
convergence results are presented:
In this case. there is almost no change in the design and the optimization task could be terminated at this
point. However, since the SOFTEXIT parameter is set to the default value of “NO” the run continues to
hard convergence.
In this case, the relative change in the objective is zero and the maximum constraint value is less than the
criterion so convergence has been achieved.  **************************************************
TERMINATION OF DESIGN ITERATION (SOFT CONVERGENCE)
*************************************************
MAXIMUM OF RELATIVE PROP. CHANGES     1.2290E-16 MUST BE LESS THAN   1.0000E-03
&amp;mdash; AND &amp;mdash;
MAXIMUM OF RELATIVE D.V. CHANGES      1.2290E-16 MUST BE LESS THAN   1.0000E-03
EXPLANATION:
THE OPTIMIZATION PROCESS WITH RESPECT TO THE APPROXIMATE MODELS DID NOT CHANGE APPRECIABLY.
THIS DESIGN MAY NOT WARRANT AN ADDITIONAL COMPLETE FINITE ELEMENT ANALYSIS.
***** NORMAL CONVERGENCE CRITERIA SATISFIED ***** (HARD CONVERGENCE DECISION LOGIC)
**************************************************************************************
CONVERGENCE ACHIEVED BASED ON THE FOLLOWING CRITERIA
(HARD CONVERGENCE DECISION LOGIC)       &lt;br&gt;
RELATIVE CHANGE IN OBJECTIVE        0.0000E+00  MUST BE LESS THAN   1.0000E-03
OR    ABSOLUTE CHANGE IN OBJECTIVE        0.0000E+00  MUST BE LESS THAN   1.0000E-20
&amp;mdash; AND &amp;mdash;
MAXIMUM CONSTRAINT VALUE           -2.9793E-03  MUST BE LESS THAN   5.0000E-03
(CONVERGENCE TO A FEASIBLE DESIGN)
&amp;mdash; OR &amp;mdash;
MAXIMUM OF RELATIVE PROP. CHANGES   1.2290E-16  MUST BE LESS THAN   1.0000E-03
AND   MAXIMUM OF RELATIVE D.V. CHANGES    1.2290E-16  MUST BE LESS THAN   1.0000E-03
(CONVERGENCE TO A BEST COMPROMISE INFEASIBLE DESIGN)
**************************************************************************************&lt;/p&gt;
&lt;p&gt;273 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
Following convergence, additional data recovery may occur and final design optimization data, as indicated
in the following abstracted fragments, are printed as governed by the P2 parameter. In this case, it is necessary
to only print the values from the final analysis since that is the only new information that is available
(approximate model results have already been printed).&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                            *                                                                  *
                            *                                                                  *
                            *                D E S I G N    O P T I M I Z A T I O N            *
                            *                                                                  *
                            *                                                                  *
                            ********************************************************************
                                         *******************************************
                                         *                                         *
                                         *        F I N A L  A N A L Y S I S       *
                                         *                                         *
                                         *******************************************
                                *******   ANALYSIS RESULTS BASED ON THE FINAL DESIGN   *******
                                              -----   DESIGN OBJECTIVE   -----
 ----------------------------------------------------------------------------------------------------
            INTERNAL                            MINIMIZE                                                           
            RESPONSE                RESPONSE       OR       SUPERELEMENT    SUBCASE
               ID        DRESPx       TYPE      MAXIMIZE         ID            ID          VALUE   
 ----------------------------------------------------------------------------------------------------
                   1     DRESP1     WEIGHT      MINIMIZE             0            0      5.4910E+00
                                              -----   DESIGN VARIABLES   -----
 ---------------------------------------------------------------------------------------------------------
        INTERNAL       DESVAR                         LOWER                               UPPER   
           ID            ID          LABEL            BOUND             VALUE             BOUND   
 ---------------------------------------------------------------------------------------------------------
               1             1      T-PLATE         1.0000E-03        1.1292E-01        1.0000E+01
               2             2      HATDIM2         1.0000E-03        8.4210E-01        1.0000E+01
                                      -----   DESIGN CONSTRAINTS ON RESPONSES   -----
                                       (MAXIMUM RESPONSE CONSTRAINTS MARKED WITH **)
 ---------------------------------------------------------------------------------------------------------
                        INTERNAL   EXTERNAL                      INTERNAL                                        
  INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE
     ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE   
 ---------------------------------------------------------------------------------------------------------
         1         10          3          3   STRESS     UPPER           2         1    -4.3742E-02  
         2         10          4          3   STRESS     UPPER           2         1    -2.9793E-03  
         3         10          5          3   STRESS     UPPER           2         1    -4.2546E-01  
         4         10          6          3   STRESS     UPPER           2         1    -4.3742E-02  
         5         10          7          3   STRESS     UPPER           2         1    -2.9793E-03**
         6         10          8          3   STRESS     UPPER           2         1    -4.2546E-01  
         7         10          9          6   STRESS     UPPER           2         1    -4.5575E-01  
         8         10         10          6   STRESS     UPPER           2         1    -8.9797E-02  
         9         10         11          6   STRESS     UPPER           2         1    -8.0696E-02  
        10         10         12          6   STRESS     UPPER           2         1    -3.5588E-01  
        11         10         13          6   STRESS     UPPER           2         1    -4.8016E-01  
        12         10         14          6   STRESS     UPPER           2         1    -4.3951E-01  
        13         10         15          6   STRESS     UPPER           2         1    -4.8016E-01  
        14         10         16          6   STRESS     UPPER           2         1    -4.3951E-01  
        15         10         17          6   STRESS     UPPER           2         1    -4.5575E-01  
        16         10         18          6   STRESS     UPPER           2         1    -8.9797E-02  
        17         10         19          6   STRESS     UPPER           2         1    -8.0696E-02  
        18         10         20          6   STRESS     UPPER           2         1    -3.5588E-01  
        19         20          2         13   DISP       UPPER          13         1    -8.1341E-02  
        20         10         22          1   STRESS     UPPER           1         2    -4.2816E-01  
        21         10         23          1   STRESS     UPPER           1         2    -5.6958E-03  
        22         10         24          2   STRESS     UPPER           1         2    -3.9252E-01  
        23         10         25          2   STRESS     UPPER           1         2    -6.9684E-02  
        24         30         21         14   DISP       UPPER          14         2    -3.9120E-01  
                           ----------------------------------------------------------------------
                           |        R E S P O N S E S    IN    D E S I G N    M O D E L         |
                           ----------------------------------------------------------------------
                                            (N/A - BOUND NOT ACTIVE OR AVAILABLE)
                                         (*** VIOLATED RESPONSES MARKED WITH V ***)
                                         (*** ACTIVE RESPONSES MARKED WITH A ***)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output274
Main Index
&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER                         UPPER&lt;br&gt;
ID         ID       LABEL        ID         ID           BOUND          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1        15      W             3          3              N/A          5.4910E+00       N/A   &lt;br&gt;
F I N A L   A N A L Y S I S    S U B C A S E =       1
&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER                         UPPER&lt;br&gt;
ID         ID       LABEL        ID         NO.          BOUND          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
2         13   D1            10302           3        N/A           9.1866E-02     1.0000E-01&lt;br&gt;
&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER&lt;br&gt;
ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
3         3  S13              2                   9       N/A          2.3906E+04    2.5000E+04&lt;br&gt;
4         3  S13              3                   9       N/A          2.4926E+04    2.5000E+04 A
5         3  S13              4                   9       N/A          1.4363E+04    2.5000E+04&lt;br&gt;
6         3  S13             14                   9       N/A          2.3906E+04    2.5000E+04&lt;br&gt;
7         3  S13             15                   9       N/A          2.4926E+04    2.5000E+04 A
8         3  S13             16                   9       N/A          1.4363E+04    2.5000E+04&lt;br&gt;
9         6  S16              1                  17       N/A          1.3606E+04    2.5000E+04&lt;br&gt;
10         6  S16              2                  17       N/A          2.2755E+04    2.5000E+04&lt;br&gt;
11         6  S16              3                  17       N/A          2.2983E+04    2.5000E+04&lt;br&gt;
12         6  S16              4                  17       N/A          1.6103E+04    2.5000E+04&lt;br&gt;
13         6  S16              5                  17       N/A          1.2996E+04    2.5000E+04&lt;br&gt;
14         6  S16              8                  17       N/A          1.4012E+04    2.5000E+04&lt;br&gt;
15         6  S16              9                  17       N/A          1.2996E+04    2.5000E+04&lt;br&gt;
16         6  S16             12                  17       N/A          1.4012E+04    2.5000E+04&lt;br&gt;
17         6  S16             13                  17       N/A          1.3606E+04    2.5000E+04&lt;br&gt;
18         6  S16             14                  17       N/A          2.2755E+04    2.5000E+04&lt;br&gt;
19         6  S16             15                  17       N/A          2.2983E+04    2.5000E+04&lt;br&gt;
20         6  S16             16                  17       N/A          1.6103E+04    2.5000E+04&lt;br&gt;
&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER                         UPPER&lt;br&gt;
ID         ID       LABEL        ID         NO.          BOUND          VALUE          BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
21         14   D2            10203           3        N/A           1.8264E-02     3.0000E-02&lt;br&gt;
&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER&lt;br&gt;
ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
22         1  SBARA           33                   7       N/A          1.4296E+04    2.5000E+04&lt;br&gt;
23         1  SBARA           34                   7       N/A          2.4858E+04    2.5000E+04 A
24         2  SBARB           32                  14       N/A          1.5187E+04    2.5000E+04&lt;br&gt;
25         2  SBARB           33                  14       N/A          2.3258E+04    2.5000E+04&lt;br&gt;
After this final design cycle print, the summary of the design cycle history is given:&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
                                                  (HARD CONVERGENCE ACHIEVED)
                                                  (SOFT CONVERGENCE ACHIEVED)
                                   NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           4
                                   NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     3
                                          OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
       --------------------------------------------------------------------------------------------------------
                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
       --------------------------------------------------------------------------------------------------------
         INITIAL                                      6.961800E+00                                     -1.639152E-01
               1             5.369376E+00             5.369376E+00             3.187558E-13             7.196367E-02
               2             5.490995E+00             5.490995E+00             2.183650E-14            -2.979310E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;275 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
3             5.490995E+00             5.490995E+00             0.000000E+00            -2.979310E-03
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
DESIGN VARIABLE HISTORY&lt;/p&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;INTERNAL |   EXTERNAL   |             |&lt;/dt&gt;
&lt;dt&gt;DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4&lt;/dt&gt;
&lt;dd&gt;5       :&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;     1 |          1   |  T-PLATE    |   1.5000E-01 :   1.0851E-01 :   1.1292E-01 :   1.1292E-01 :
     2 |          2   |  HATDIM2    |   1.0000E+00 :   8.4327E-01 :   8.4210E-01 :   8.4210E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From this summary we see that an optimal design was found after 3 design cycles and 4 finite element analyses
(initial analysis plus one from each design cycle.)  As was also seen in the hard convergence output, the final
design is feasible.
The objective function history traces the progress made by the optimizer during successive optimizations with
respect to approximate models.  The fractional error of approximation is a measure of the error in the
approximated objective function versus the true objective.  The true objective is computed from the analysis
at the beginning of the next design cycle.  Here, the error is negligible since the weight objective is a linear
function of the design variables.  For objectives based on nonlinear structural responses (virtually any response
other than weight or volume), the error may be more significant.  If these approximation errors are large,
tighter move limits may be warranted.
Note also that, as a measure of approximation quality, the fractional error of approximation is incomplete at
best. Even though the error in the objective function is small, errors in constraints can be much greater.
The design variable history as a function of design cycle is listed at the end of the summary.  The external
design variable ID and the label columns are taken directly from the DESVAR Bulk Data entries.  The
internal design variable ID column simply refers to the order of internal sort on the design variables.  (The
internal and external design variable sort may differ if DLINK entries are present.  Independent design
variables are first sorted in ascending numerical order, followed by the dependent design variables, again in
ascending order.)
A final message is printed which indicates why the optimization task was stopped. In this case, this message
says:
indicating that the design task was successfully completed.
Other possible messages for the end of the optimization task and a brief explanation for each are:
“RUN TERMINATED DUE TO MAXIMUM NUMBER OF DESIGN CYCLES = “
The user prescribed maximum number of design cycles FSDMAX + DESMAX have been carried
out without achieving convergence.
“RUN TERMINATED DUE TO PARAMETER OPTEXIT = n“
The OPTEXIT parameter permits exiting the design tasks at a number of points.
“RUN TERMINATED DUE TO SOFT CONVERGENCE AT CYCLE NUMBER =” Parameter
SOFTEXIT has been set to YES and soft convergence was achieved *** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        3.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output276
Main Index
“RUN TERMINATED DUE TO HARD CONVERGENCE TO A BEST COMPROMISE
INFEASIBLE DESIGN AT CYCLE NUMBER = “
The optimizer could not find a feasible design and it could make no further progress, therefore the
run was terminated (see Compromise Infeasible Design .)
“RUN TERMINATED DUE TO CASE CONTROL COMMAND
DSAPRT(END=SENSITIVITY) “
The DSAPRT command has requested a design sensitivity only run.
“RUN TERMINATED DUE TO POOR GEOMETRY OR POOR PROPERTIES. SEE FATAL
MESSAGES PRINTED ABOVE FOR INFORMATION”
The redesign has produced a finite element model that violates finite element modeling rules. For
example, a mesh has distorted elements or an element property has taken on a value that is not
allowed, such as a negative shell thickness.
“RUN TERMINATED DUE TO MODE TRACKING FAILURE. SEE USER FATAL
MESSAGE 6677 (MTFRD) PRINTED ABOVE ”
The mode tracking algorithm (see Mode Tracking ) was unable to do its job and the run was
therefore terminated.
Modification of Move Limit Parameters
As explained in the Automatic Updates of Move Limits , the optimization algorithm sometimes reduces the
move limit parameters by a factor of 2.0. W hen this occurs, a message like the following appears in the .f06
file:
This message never appeared in the DSOUG4.F06 output discussed in this section, but still requires
explanation. I t is seen that four move limits have been revised and guidance is provided for continuing the
design task in a new run using the final design variable values obtained in the current run.  There are several
guidelines contained in the above listing. The first is that the new values should be used if the design task is                                       ********************************************************
*                                                      *
*                USER  WARNING  MESSAGE                *
*                                                      *
* IF YOU WANT TO CONTINUE THE DESIGN AFTER THIS JOB    *
* IS COMPLETED, YOU MUST INCLUDE A REVISED DOPTPRM     *
* BULK DATA ENTRY IN THE BULK DATA SECTION WITH THE    *
* FOLLOWING ITEMS MODIFIED AS SHOWN:                   *
*                                                      *
*                 DELP  =   1.0000E-01                 *
*                 DPMIN =   5.0000E-03                 *
*                 DELX  =   5.0000E-01                 *
*                 DXMIN =   2.5000E-02                 *
*                                                      *
********************************************************
********************************************************
*                                                      *
* IF A DELXV IS SPECIFIED ON A DESVAR BULK DATA ENTRY, *
* UPDATED DELXV VALUES ARE PRESENT ON THE DESVAR       *
* ENTRIES CONTAINED IN THE PUNCH FILE.                 *
*                                                      *
*                                                      *
*  (NOTE: THERE MAY BE MORE THAN ONE MESSAGE LIKE      *
*         THIS.  THE LAST ONE IN THIS RUN SHOULD       *
*         BE LOCATED AND USED.)                        *
*                                                      *
********************************************************&lt;/p&gt;
&lt;p&gt;277 Chapter 5: Output Features and Interpretation
Design Optimization Output
Main Index
continued.  The thinking is that the original move limits were too loose, so the reduced values are preferred.&lt;br&gt;
The statement that “YOU MUST INCLUDE A REVISED&amp;hellip;” is somewhat misleading in that the new job
will run with the original values for the parameters. Changing these limits is really left to the user’s judgment.&lt;br&gt;
The second guideline points out that DELXV values included on DESVAR entries in the punch file (see
Design Punch Output ) reflect the reduction in the individual move limits. It may be that these move limits
are now too restrictive and it will be necessary to manually adjust the DELXV values on the DESVAR entries.
Special Prints for Fully Stressed Design
The output produced by the FSD algorithm is very similar to that just presented for the Mathematical
Programming (MP) algorithm.  One significant difference is in the results that are printed at each design cycle.&lt;br&gt;
With MP , these results are printed after an approximate optimization and before a reanalysis has occurred.&lt;br&gt;
With FSD, there is no approximate analysis because the optimizer is never called. The output is deferred until
a new analysis has been performed.  This is indicated in the output by the printing of the following message:
*******OPTIMIZATION RESULTS BASED ON AN EXACT ANALYSIS *********
instead of the message:
***&lt;strong&gt;&lt;strong&gt;OPTIMIZATION RESULTS BASED ON THE APPROXIMATE MODEL&lt;/strong&gt;&lt;/strong&gt;
The absence of approximate results also affects the SUMMARY OF THE DESIGN CYCLE HISTORY that
occurs at the end of the run.  The following printout shows this table resulting from a design task that
included five FSD cycles followed by MP cycles to convergence. Note that the number of FSD cycles appears
at the top of the table, and that no approximate objective values and therefore no  “fractional error” are output
for the FSD cycles.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;          (HARD CONVERGENCE ACHIEVED)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;NUMBER OF FINITE ELEMENT ANALYSES COMPLETED 10
NUMBER OF FULLY STRESSED DESIGN CYCLES COMPLETED       5
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS       4
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;OBJECTIVE FROM OBJECTIVE FROM FRACTIONAL ERROR MAXIMUM VALUE
CYCLE APPROXIMATE EXACT OF OF
NUMBER OPTIMIZATION ANALYSIS APPROXIMATION CONSTRAINT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number-optimization-analysis-approximation-constraint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number-optimization-analysis-approximation-constraint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;INITIAL 4.828427E+00 -3.234952E-01
1 FSD 2.668171E+00 N/A 4.203515E-02
2 FSD 2.502887E+00 N/A 8.190254E-02
3 FSD 2.541077E+00 N/A 6.268603E-02
4 FSD 2.593662E+00 N/A 4.396826E-02
5 FSD 2.635597E+00 N/A 3.135078E-02
6 2.709053E+00 2.709045E+00 2.640250E-06 3.502930E-04
7 2.702080E+00 2.702064E+00 6.000030E-06 7.404297E-04
8 2.695884E+00 2.695881E+00 1.061257E-06 2.517090E-03
9 2.694964E+00 2.694966E+00 -7.962130E-07 2.553125E-03&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization Output278
Main Index
Special Prints for Discrete Variable Optimization
The output produced by the discrete variable processing methods is similar to  the continuous optimization
results. There is no change for results printed at each continuous optimization design cycle.  At each discrete
variable processing cycle, the feasibility of a new discrete solution is checked based on both approximate and
exact reanalysis, a similar approach to the one taken for continuous variable optimization. The approximate
analysis is based on the approximate model and is labeled “Soft Feasible” if all the constraints are satisfied.&lt;br&gt;
The results of the exact analysis of the discrete design are labeled “Hard Feasible” if all the constraints are
satisfied.  “Soft Infeasible” and “Hard Infeasible” indicate that at least one constraint is violated in either the
approximate or exact analyses, respectively.
At each discrete variable optimization cycle, the design objective, design variables, designed properties, and
design constraints are presented after the preceding continuous design cycle. For the discrete cycle, there is
no input value since the input values are the output values of the preceding continuous design cycle. Discrete
results are indicated by the printing of the following message. (Note that these results are based on a full finite
element analysis.)
The existing “SUMMARY OF DESIGN CYCLE HISTORY” is modified to include these new discrete
designs. An example of this new output follows. The summary table also shows the number of discrete
processing analyses completed and whether a soft or hard feasible discrete solution is obtained.  Note that the
cycle numbers flagged with a “D” correspond to the discrete results that have been computed based on the
preceding continuous design.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;(HARD CONVERGENCE ACHIEVED)
(SOFT CONVERGENCE ACHIEVED)
( HARD FEASIBLE DISCRETE SOLUTION OBTAINED)
( SOFT FEASIBLE DISCRETE SOLUTION OBTAINED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED 7
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS 6
NUMBER OF DISCRETE PROCESSING  ANALYSES COMPLETED 2
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;CYCLE OBJECTIVE FROM OBJECTIVE FROM FRACTIONAL ERROR MAXIMUM VALUE
NUMBER APPROXIMATE EXACT OF OF
OPTIMIZATION ANALYSIS APPROXIMATION CONSTRAINT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;optimization-analysis-approximation-constraint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#optimization-analysis-approximation-constraint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;INITIAL 4.740178E+02 2.907700E-02***** A SOFT FEASIBLE DISCRETE SOLUTION FOUND (SOFT FEASIBILITY DISCRETE SOLUTION CHECK LOGIC) *****
MAXIMUM CONSTRAINT VALUE               : -3.6252E-02  MUST BE LESS THAN   5.0000E-03&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;***** A HARD FEASIBLE DISCRETE SOLUTION FOUND (HARD FEASIBILITY DISCRETE SOLUTION CHECK LOGIC) *****
MAXIMUM CONSTRAINT VALUE               :  4.7029E-03  MUST BE LESS THAN   5.0000E-03&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                                                     *
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt; D I S C R E T E  D E S I G N   C Y C L E      6D    *
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                                                     *
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;*****   OPTIMIZATION RESULTS BASED ON AN EXACT ANALYSIS  *****&lt;/p&gt;
&lt;h2&gt;279 Chapter 5: Output Features and Interpretation
Design Sensitivity Output
Main Index
1 3.957753E+02 3.924499E+02 8.473461E-03 7.261696E-04
2 2.943152E+02 2.943384E+02 -7.900563E-05 7.262860E-04
3 1.962019E+02 1.962255E+02 -1.202970E-04 6.985210E-04
4 9.808932E+01 9.811287E+01 -2.400495E-04 6.985210E-04
5 4.883356E+00 4.905637E+00 -4.541855E-03 6.985210E-04
5D 4.93356E+00 5.056371E+00 -4.38652 E-03 9.285210E-04
6 4.905637E+00 4.905637E+00 0.000000E+00 6.985210E-04
6D 4.92156E+00 5.041347E+00 -4.28652 E-03 7.253256E-04&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6d-492156e00-5041347e00--428652-e-03-7253256e-04&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6d-492156e00-5041347e00--428652-e-03-7253256e-04&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |EXTERNAL|
DV. ID. |DV.ID. |LABEL |INITIAL :1 :2:3:4:5&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-dvid-label-initial-1-2345&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-dvid-label-initial-1-2345&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;1 |1|LAYER1 |1.0000E+00 :1.2734E+00 :1.3084E+00 :1.2966E+00 :1.2829E+00 :1.2671E+00
2 |2|E |1.0000E+00 :9.9815E-01 :9.9593E-01 :9.9645E-01 :1.0015E+00 :1.0146E+00
3 |3|RHO |1.0000E+00 :8.0000E-01 :6.0000E-01 :4.0000E-01 :2.0000E-01 :2.0000E-01
4 |4|NU |1.0000E+00 :1.2000E+00 :1.4400E+00 :1.7280E+00 :2.0736E+00 :2.4883E+00&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-4nu-10000e00-12000e00-14400e00-17280e00-20736e00-24883e00&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-4nu-10000e00-12000e00-14400e00-17280e00-20736e00-24883e00&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2&gt;INTERNAL |EXTERNAL |
DV. ID. |DV. ID. |LABEL |:5D 6: 6D:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-dv-id-label-5d-6-6d&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-dv-id-label-5d-6-6d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;1 | 1 |LAYER1 |:1.2000E+00 :1.2671E+00 :1.2000E+00 :&lt;br&gt;
2 | 2 |E |:1.0000E+00 :1.0146E-01 :1.0000E-01
3 | 3 |RHO |:2.0000E+00 :1.0000E-01 :1.0000E-01 : &lt;br&gt;
4 | 4 |NU |:2.5000E+00 :1.2886E+00 :1.5000E+00 :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4--4-nu-25000e00-12886e00-15000e00-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4--4-nu-25000e00-12886e00-15000e00-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A final message is printed that indicates why the discrete optimization task was terminated. For example,
indicating that the design task was successfully completed due to hard convergence of the corresponding
continuous design task and a hard feasible discrete design was found.
Special Prints for Topology Optimization
The majority of the prints for topology optimization follow that for standard optimization. An exception is
when design variables are to be printed. Even small topology optimization tasks are likely to have thousands
of design variables. Therefore, the “Comparison Between Input Property Variables from Analysis and Design
Models” print never occurs and the design variable print that normally occurs if P2 =1 is suppressed unless
P2&amp;gt;8. Similarly, the final Design Variable History print does not occur unless P2 &amp;gt;8 is specified.
Design Sensitivity Output
Design Optimization Output  has provided an explanation of the output that is produced in an optimization
task. It is also possible to obtain output from a sensitivity analysis and that is the topic of this subchapter.
Recall from Design Sensitivity Analysis  that a sensitivity coefficient is defined as a response rate of change for
a corresponding design variable change.  (The resultant partial derivative thus gives the slope of the j-th
response function for the current design in the i-th design variable dimension.) As has been mentioned several  *** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER = 15.
AND HARD FEASIBLE DISCRETE DESIGN OBTAINED&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Output280
Main Index
times, sensitivity information is valuable in its own right since it provides a quantitative indication of how
much a design response will change due to a change in a design variable.
The primary means of requesting design sensitivity output is with the DSAPRT Case Control command as
detailed in the Case Control Section . This command provides tables of data that allow you to easily identify
which response and design variable are associated with the sensitivity. This form of data is referred to as
“formatted” sensitivities and can be contrasted with “unformatted” sensitivities that simply provides a matrix
print of the DSCM2 matrix that contains the sensitivity coefficients as
(5-1)
where i is the row order and j is the column order.
Unformatted sensitivity data prints can be activated by setting the Bulk Data parameter OPTEXIT to 4 or
7, but this capability has been superseded by the DSAPRT command. All the functionality, and much more,
of the OPTEXIT =4 or 7 parameter is available with the DSAPRT command. Both the formatted and
unformatted forms of sensitivity data are presented here because the unformatted form has utility in that it
provides a more compact form of the data and it is ideal for those who would like to couple MSC Nastran-
computed sensitivities with their own postprocessors and/or optimizers.
Formatted Design Sensitivity
Examples of the formatted sensitivity output are presented in the following listings that are based on the
DSOUG4 example of Design Optimization Output  with the following Case Control command:
DSAPRT(START=1,END=LAST)=ALL&lt;br&gt;
DSAPRT used to provide formatted sensitivity information for the initial and final design.
The first print is for the initial design:&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                        *                                                                          *
                        *    D E S I G N    S E N S I T I V I T Y    M A T R I X    O U T P U T    *
                        *                                                                          *
                        *                                                                          *
                        *    R E S P O N S E    S E N S I T I V I T Y    C O E F F I C I E N T S   *
                        *                                                                          *
                        ****************************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=        15             RESPONSE TYPE= WEIGHT                                                        SEID=0 
         RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         6.9618E+00                    1 T-PLATE    2.8300E+01        2  HATDIM2    2.6602E+00
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=        14             RESPONSE TYPE= DISP         GRID ID=     10203     COMP NO=         3        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      2   1.5126E-02                   1 T-PLATE   -1.5621E-02        2  HATDIM2   -1.2575E-02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         1             RESPONSE TYPE= STRESS       ELEM ID=        34     COMP NO=         7        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      2   2.0902E+04                   1 T-PLATE   -1.3723E+04        2  HATDIM2   -1.7607E+04
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         2             RESPONSE TYPE= STRESS       ELEM ID=        32     COMP NO=        14        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-DSCM2ijrj
xi&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;281 Chapter 5: Output Features and Interpretation
Design Sensitivity Output
Main Index
2   1.2719E+04                   1 T-PLATE   -9.3138E+03        2  HATDIM2   -1.0773E+04&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         2             RESPONSE TYPE= STRESS       ELEM ID=        33     COMP NO=        14        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      2   1.9490E+04                   1 T-PLATE   -1.4878E+04        2  HATDIM2   -1.6233E+04
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         3             RESPONSE TYPE= STRESS       ELEM ID=         2     COMP NO=         9        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.4213E+04                   1 T-PLATE   -1.6833E+05        2  HATDIM2   -3.3410E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         3             RESPONSE TYPE= STRESS       ELEM ID=         3     COMP NO=         9        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.5056E+04                   1 T-PLATE   -1.7292E+05        2  HATDIM2   -1.3659E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         3             RESPONSE TYPE= STRESS       ELEM ID=        14     COMP NO=         9        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.4213E+04                   1 T-PLATE   -1.6833E+05        2  HATDIM2   -3.3410E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         3             RESPONSE TYPE= STRESS       ELEM ID=        15     COMP NO=         9        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.5056E+04                   1 T-PLATE   -1.7292E+05        2  HATDIM2   -1.3659E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         6             RESPONSE TYPE= STRESS       ELEM ID=         2     COMP NO=        17        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.3328E+04                   1 T-PLATE   -1.6365E+05        2  HATDIM2   -1.1546E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         6             RESPONSE TYPE= STRESS       ELEM ID=         3     COMP NO=        17        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.3648E+04                   1 T-PLATE   -1.6214E+05        2  HATDIM2   -1.0850E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         6             RESPONSE TYPE= STRESS       ELEM ID=        14     COMP NO=        17        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.3328E+04                   1 T-PLATE   -1.6365E+05        2  HATDIM2   -1.1546E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=         6             RESPONSE TYPE= STRESS       ELEM ID=        15     COMP NO=        17        SEID=0 
SUBCASE  RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;      1   1.3648E+04                   1 T-PLATE   -1.6214E+05        2  HATDIM2   -1.0850E+02
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The order of the data for the formatted prints can differ from that given for the RESPONSES IN THE
DESIGN MODEL listing since a different sort is used to organize the data. For formatted sensitivities, the
order of the data is:
Responses that share the superelement, response type, grid/element ID and component have a single header
with the subcase and frequency time/step supplied with the response value. Response ID order corresponds First by superelement ID , then by
Response type, then by
External Response ID, then by
Grid/Element ID, then by
Component, then by
Subcase, then by
Frequency/Time Step&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Output282
Main Index
to that given by Table 1 of the DRESP1 Bulk Data entry (see Bulk Data Entries  in the
MSC Nastran Quick Reference Guide ).
The example of the listing does not contain any type2 or type 3 responses. If any are present, they are sorted:
The extensive labeling makes the interpretation straightforward, so only a limited amount of explanation is
given here. The first response in the table is for RTYPE=WEIGHT. The value of the response is given as
6.9618 and the sensitivity with respect to the first design variable (which has a label T-PLATE) is 28.310.
This means that if the value of the first design variable changes by a unit amount, the weight will increase by
28.310. The sensitivity of the weight to the second design variable is 2.6608, indicating that a unit change
in this design variable increases the weight by a much smaller amount than the first design variable.
Unformatted Design Sensitivity
Unformatted design sensitivity output consists of two parts: a table listing the column order of the DSCM2
matrix of Equation (5-1), followed by a print of the DSCM2 matrix.
The rows of DSCM2 are sorted on ascending independent design variable IDs, given on the DESVAR Bulk
Data entries.  Row 1 thus corresponds to the independent design variable with the lowest ID, row 2 the
independent design variable with the second lowest ID and so on. There are a number of places where this
order is specified with the best one perhaps the DESIGN VARIABLE HISTORY summary that was shown
at the end of the DSOUG4 Output .
DSCM2 column order is given in a correlation table.  For OPTEXIT = +4 or 7, the formatted table contents
are printed in the output file.  This output indicates the particular column and response correlation in the
DSCM2 matrix.  For OPTEXIT = -4, this correlation information is output as the DSCMCOL table.  See the
MSC Nastran 2005 r3 DMAP Programmer’s Guide  for details.
Design Sensitivity Output Example
This example is taken from the Test Problem Library, problem number D200X5. Modified by the addition
of PARAM,OPTEXIT ,4 to the Bulk Data Section.  Thus, only sensitivity analysis and not optimization will
be performed.
D200X5 contains eleven design variables: three independent and eight dependent.  The independent design
variables are used as multipliers of basis functions, which have been implemented using DLINK entries.
The problem includes weight, displacement, and stress responses, with two separate loading conditions.  In
short, enough of the basic components are present to give a fairly complete description of the output format
in design sensitivity analysis.
The following is an abbreviated listing of the DSCM2 matrix output:First by superelement ID, then by
External response ID, then by
Subcase, then by
Frequency/time step&lt;/p&gt;
&lt;p&gt;283 Chapter 5: Output Features and Interpretation
Design Sensitivity Output
Main Index
Note that the size of DSCM2 is 3 rows by 61 columns.  Each row corresponds to a single independent design
variable.  Since design variables 9, 10, and 11 are independent, rows 1, 2, and 3 correspond, respectively, to
these quantities.  Each column corresponds to a particular response; we can note that the sensitivities of 61
responses have been computed.  The response order is listed in the correlation table, discussed shortly.
Before moving on to the correlation table, we should note that the density of this matrix is 100%, that is, no
zero terms are present.  We can conclude that every response will undergo some finite change for a change in
any of the independent design variables.
If this density were less than 100%, a closer inspection of the design model formulation might be warranted.&lt;br&gt;
A response that is not a function of any of the design variables (hence, a zero sensitivity coefficient), might
indicate a design modeling error.  Quite often, these types of errors will show up as a null row or column of
DSCM2.  A null column indicates a response which is not a function of any of the design variables.  A null r3
x3&amp;mdash;&amp;mdash;&amp;ndash;uz29
x3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;

SUBCASE1=Matrix
Dimension
See the following
Correlation Table
matrix densityrowscolumns zero terms –
rowscolumns&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  = 100MATRIX DSCM2    (GINO NAME 101 ) IS A REAL              61 COLUMN X           3 ROW RECTANG  MATRIX.
0COLUMN      1      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    4.0000E+01  2.2500E+01  1.5938E+01
0COLUMN      2      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    3.2871E+01  1.9345E+01  1.3255E+01
0COLUMN      3      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    3.2871E+01  1.9345E+01  1.3255E+01
0COLUMN      4      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    2.5733E+04  2.9702E+04  3.2985E+04
0COLUMN      5      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    2.5733E+04  2.9702E+04  3.2985E+04
0COLUMN      6      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.5881E+05 -1.5696E+05 -1.5544E+05
0COLUMN      7      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.5881E+05 -1.5696E+05 -1.5544E+05
.         .           .           .
.         .           .           .
.         .           .           .
.         .           .           .
0COLUMN     39      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -2.0435E+05 -2.9491E+04 -5.0688E+03
0COLUMN     40      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    2.1453E+00  1.4776E+00  1.1223E+00
0COLUMN     41      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)    2.1453E+00  1.4776E+00  1.1223E+00
0COLUMN     42      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.7913E+04 -1.7736E+04 -1.7589E+04
0COLUMN     43      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.7913E+04 -1.7736E+04 -1.7589E+04
0COLUMN     44      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.7913E+04 -1.7736E+04 -1.7589E+04
0COLUMN     45      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -1.7913E+04 -1.7736E+04 -1.7589E+04
.         .           .           .
.         .           .           .
.         .           .           .
.         .           .           .
0COLUMN     61      ROWS      1 THRU      3     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
ROW
1)   -2.1265E+04 -1.0639E+04 -5.4152E+03
0THE NUMBER OF NON-ZERO TERMS IN THE DENSEST COLUMN =   3
0THE DENSITY OF THIS MATRIX IS 100.00 PERCENT.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;  WEIGHT/VOLUME RESPONSES  &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;COLUMN         DRESP1         RESPONSE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NO.         ENTRY ID          TYPE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1              35          WEIGHT&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;  STATICS RESPONSES  &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Design Punch Output284
Main Index
row, on the other hand, indicates that changing a design variable will have no effect whatsoever on any of the
design responses.  Both of these errors are usually easily addressed, and underscore the significance of using
design sensitivities as a method for model checkout.
Column order in the design sensitivity coefficient matrix is given by the following abbreviated correlation
table:
Note that each column is associated with a particular response component for a given subcase.  For example,
column 3 of DSCM2 contains the sensitivities of the z-component displacement for grid 29, subcase 1.&lt;br&gt;
Column 41 contains the sensitivities of the same displacement component for subcase 2.
In general, responses are grouped first by superelement, then by subcase, and finally by DRESP1 or DRESP2
order. The responses are sorted by individual response type.  This order is given in Table 1 of the DRESP1
Bulk Data entry description (see Bulk Data Entries  in the MSC Nastran Quick Reference Guide ).
Design Punch Output
The term “punch file” refers to a output file whose origins can now be considered to be associated with the
infancy of digital computing. This file contains outputs from the MSC Nastran analysis that can be
conveniently used as input to another computer analysis. In the early days of computer analysis, these results
could be punched onto computer cards so that they could be read in, via a card reader, as input to another
analysis. This may seem quaint now that card punches and card readers are obsolete, but the punch file retains
considerable utility for postprocessing of MSC Nastran results. The file is particularly useful in the design
sensitivity and optimization context because it produces output in the format of the MSC Nastran bulk data
entries. This provides a convenient way of capturing the results of the design process and using these results
in a subsequent analysis to either punch fragments of the Bulk Data file or to punch a complete new input
Bulk Data file. This section provides an overview of the options that are available for punched output.  &amp;mdash;&amp;ndash;   IDENTIFICATION OF COLUMNS IN THE DESIGN SENSITIVITY  &amp;mdash;&amp;ndash;
&amp;mdash;&amp;ndash;     MATRIX THAT ARE ASSOCIATED WITH DRESP1  ENTRIES    &amp;mdash;&amp;ndash;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;----------matrix-that-are-associated-with-dresp1--entries---------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#----------matrix-that-are-associated-with-dresp1--entries---------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;        COLUMN         DRESP1         RESPONSE        GRID/ELM       COMPONENT           SUB             PLY  
          NO.         ENTRY ID          TYPE             ID              NO.             CASE             NO. 
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;            2              33            DISP               9               3               1
            3              34            DISP              29               3               1
            4               1          STRESS               1               7               1
            5               1          STRESS              11               7               1
            6               2          STRESS               1               9               1
            7               2          STRESS              11               9               1
            .               .             .                 .               .               .
            .               .             .                 .               .               .
            .               .             .                 .               .               .
            .               .             .                 .               .               .
           39              32          STRESS              18              17               1
           40              33            DISP               9               3               2
           41              34            DISP              29               3               2
           42               2          STRESS               1               9               2
           43               2          STRESS              11               9               2
           44               4          STRESS               1              17               2
           45               4          STRESS              11              17               2
            .               .             .                 .               .               .
            .               .             .                 .               .               .
            .               .             .                 .               .               .
            .               .             .                 .               .               .
           61              20          STRESS              15              17               2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;285 Chapter 5: Output Features and Interpretation
Design Punch Output
Main Index
Punch Parameters
As briefly explained in Output-Controlling Parameters , the DESPCH parameter indicates how often design
Bulk Data information is printed to the punch file while DESPCH1 specifies both the format of the data
(small field versus large field) and what data are to be punched. Typically, the default of DESPCH=0 is
adequate since this provides information for the final design cycle and it is typically only these data that are
of interest in subsequent analyses. Setting DESPCH to a positive integer n produces punched output at every
nth design cycle and the last design cycle. This could be useful if a review of the design cycle history indicates
that an intermediate design actually is better than the final design. DESPCH can also be set to a negative
number, in which case no design data is punched.
The DESPCH1 parameter controls the format and the amount of data that are punched. Positive values of
this parameter produce Bulk Data entries in the “large field” format; i.e. each item in the entry occupies 16
spaces. Data in the large field format can be difficult to interpret visually if you are not used to it, but this
may be the only way to obtain sufficient numerical accuracy to make the design results usable. Negative values
of DESPCH1 produce results in the standard small field (i.e. 8 spaces) format.
The Bulk Data entries that are punched are determined by the absolute value of the DESPCH1 parameter as
indicated by Table 5-1.
Some comments on this table are:
If any GRID location is being designed, the complete set of GRID points will be punched whenever
DESPCH1 is nonzero
DESPCH1=1 typically produces fewer entries than DESPCH1=2 and is ideal when your bulk data
file has the designed properties in a segregated part of the file. DESPCH1=2 supports the case where
the designed properties are sprinkled throughout the input file and it is simpler to globally replace all
the properties, even those that have not changed
The DRESP1 punch is for situations where mode tracking has been utilized. The original design
model may be imposing a limit on the 3rd mode, but the redesign has placed this physical mode in
the 5th position. The punched DRESP1 will indicate that the 5th mode is to be designed. All
DRESP1 entries that are of RTYPE=EIGN or RTYPE=FREQ will be punched in this situation.
Combined quantities can be obtained by summing the three values in the table. For example
DESPCH1=6, which is the default, punches all properties, the DESVARs and any DRESP1 entries.
Meaningful combined values are 5 and 6. DESPCH1=6 is the default value.Table 5-1&lt;br&gt;
DESPCH1 MEANING
0 Nothing is punched
1 Designed property entries (e.g., PROD or MAT1) are punched
2 All properties of a given type are punched when one or more of that property type is
designed.
4 Updated DESVAR and DRESP1 entries are punched&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Punch Output286
Main Index
Note that the number of analyses can exceed DESMAX in several ways.  If convergence is not
achieved after DESMAX design cycles, an additional analysis is required to determine the actual
responses.  Further, if discrete optimization is requested, a additional analysis is performed using the
discrete set of design values.  The SUMMARY OF DESIGN CYCLE HISTORY at the end of the
.f06 file contains information on the number of analyses performed; e.g.:
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           6
Example for DESPCH
Figure 5-1 is an example of the information found in the .pch  based on a DESPCH request when a PCOMP
Bulk Data entry has plies that are being designed. The DESIGN CYCLE number is provided in a banner for
the file and this is followed by annotations for each type of data that follows. In this case DESVAR entries
are provided in the large field format and this is followed by values of the designed PCOMP entry. A feature
of PCOMP analysis in MSC Nastran is that the PCOMP data is actually converted to equivalent
PSHELL/MAT2 entries. These updated entries are also provided in the .pch file, but are commented out so
that the entire file can be included in a bulk data file and there will be no difficulty with duplicate property
IDs. In certain applications, it may be desirable to remove the PCOMP data and remove the comments from
the PSHELL/MAT2 Bulk Data entries.
Figure 5-1  Sample of Punched Output from PARAM DESPCH$               **************************************************
$               *                                                *
$               *       DESIGN  CYCLE  NUMBER  =         9       *
$               *                                                *
$               **************************************************
$
$
$   UPDATED DESIGN MODEL DATA ENTRIES
$
DESVAR *               1PLY90             8.22658688E-02  1.99999996E-02+D    1V
*D    1V  3.00000000E+02  5.00000000E-01
DESVAR *               2PLYM45            2.85679966E-01  1.99999996E-02+D    2V
*D    2V  3.00000000E+02  5.00000000E-01
DESVAR *               3PLY45             1.99999996E-02  1.99999996E-02+D    3V
&lt;em&gt;D    3V  3.00000000E+02  5.00000000E-01
DESVAR *               4PLY0              8.38311464E-02  1.99999996E-02+D    4V
&lt;em&gt;D    4V  3.00000000E+02  5.00000000E-01
$
$   UPDATED ANALYSIS MODEL DATA ENTRIES
$
PCOMP&lt;/em&gt;                 1 -2.54759588E-03  0.00000000E+00  5.00000000E+03&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;              HILL  0.00000000E+00  0.00000000E+00             SYM*   
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 1  4.44235717E-04  9.00000000E+01             YES*   
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 1  1.54267182E-03  4.50000000E+01             YES*   
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 1  1.08000000E-04 -4.50000000E+01             YES*   
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 1  4.52688197E-04  0.00000000E+00             YES    
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ Spawned PSHELL, MAT2 entries from PCOMP           1
$   PSHELL*                1       100000001  5.09519130E-03       200000001*&lt;br&gt;
$   *         1.00000000E+00       300000001  1.00000000E+00  0.00000000E+00*&lt;br&gt;
$   *        -2.54759588E-03  2.54759565E-03               0 &lt;br&gt;
$   MAT2*          100000001  8.43634500E+06  3.43898675E+06  2.56559100E+06*&lt;br&gt;
$   *         8.37588350E+06  2.56559075E+06  3.73030525E+06  5.09999990E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00 &lt;br&gt;
$   *                      0 &lt;br&gt;
$   MAT2*          200000001  4.85598850E+06  3.05657825E+06  2.49240750E+06*&lt;br&gt;
$   *         1.27210570E+07  2.49240725E+06  3.34789700E+06  5.09999990E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00 &lt;br&gt;
$   *                      0 &lt;br&gt;
$   MAT2*          300000001  7.44932688E+05  0.00000000E+00  0.00000000E+00*&lt;br&gt;
$   *         9.02194062E+05  0.00000000E+00  0.00000000E+00  5.09999990E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00*&lt;br&gt;
$   *         0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00
$   *                      0&lt;/p&gt;
&lt;p&gt;287 Chapter 5: Output Features and Interpretation
Design Punch Output
Main Index
Special Punch Considerations for Topology Optimization
The DESPCH parameter has a separate function in Topology Optimization. In this case, PARAM DESPCH
n writes output to a jobname.des  file that lists the element ID and the design variable value for every n-th
design cycle. As shown in Postprocessing Output, this file can be brought into Patran for two-dimensional
problems to show the topology optimization results. Setting DESPCH 0 (default) produces design variable
values for the final design cycle only.
Special Punch in the Case of Shape Optimization
As described above, if shape optimization is being performed, a complete set of GRID Bulk Data entries will
be punched every n-th design cycle where n is set using PARAM DESPCH. A special case occurs when the
new mesh has become distorted to the extent that the resulting finite elements cannot be generated.
In this case, an invalid mesh message is produced by the EMG module and, if it has not already been
punched, the grid data for the last design whose mesh was valid are punched. This allows the user to start up
again from this last valid mesh while perhaps changing some move parameters so that the mesh distortions
do not occur.
New Bulk Data File
As indicated in the Case Control Section , the ECHO command can be used to cause the writing of a new
Bulk Data file after a design task has been completed. Figure 5-3 displays a portion of the file that is produced
if the DSOUG4 example of Design Optimization Output  includes the command
ECHO = SORT,PUNCH(NEWBULK)
A banner indicates the beginning of the updated Bulk Data file. It is apparent that much of the file does not
require any change. The first new Bulk Data entries are the CBAR entries that utilize the new beam offset
values. Properties and DESVAR entries are also changed, while the responses and constraints do not. It is now
very convenient to make additional MSC Nastran runs by including this new Bulk Data file in a new job
submittal. The new run may continue the SOL 200 design task or it could perform a completely new type
of analysis, such as nonlinear.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Punch Output288
Main Index
Figure 5-2  Punch File Produced Using ECHO=PUNCH(NEWBULK)$          *************************************************************
$          *                                                           *
$          *  ENTIRE NEW BULK DATA DECK WITH UPDATED ENTRIES INSERTED  *
$          *                                                           *
$          *************************************************************
$
BEGIN BULK
PARAM   POST    -1                                                           &lt;br&gt;
PARAM   NASPRT  1                                                            &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;    &lt;br&gt;
$ ANALYSIS MODEL:                                                            &lt;br&gt;
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;    &lt;br&gt;
$                                                                            &lt;br&gt;
GRID    10000           0.0     0.0     0.0                                  &lt;br&gt;
GRID    10001           2.5     0.0     0.0                                  &lt;br&gt;
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
GRID    10402           5.0     10.0    0.0                                  &lt;br&gt;
GRID    10403           7.5     10.0    0.0                                  &lt;br&gt;
GRID    10404           10.0    10.0    0.0                                  &lt;br&gt;
$                                                                            &lt;br&gt;
CQUAD4    1     1       10000   10001   10101   10100                        &lt;br&gt;
CQUAD4    2     1       10001   10002   10102   10101                        &lt;br&gt;
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
CQUAD4   15     1       10302   10303   10403   10402                        &lt;br&gt;
CQUAD4   16     1       10303   10304   10404   10403                        &lt;br&gt;
$                                                                            &lt;br&gt;
CBAR*                 31               3           10200           10201*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  1.00000000E+00  0.00000000E+00               1*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 0               0  0.00000000E+00  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.55632222E+00  0.00000000E+00  0.00000000E+00  1.55632222E+00        
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CBAR*                 32               3           10201           10202*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  1.00000000E+00  0.00000000E+00               1*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 0               0  0.00000000E+00  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.55632222E+00  0.00000000E+00  0.00000000E+00  1.55632222E+00        
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CBAR*                 33               3           10202           10203*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  1.00000000E+00  0.00000000E+00               1*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 0               0  0.00000000E+00  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.55632222E+00  0.00000000E+00  0.00000000E+00  1.55632222E+00        
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CBAR*                 34               3           10203           10204*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  1.00000000E+00  0.00000000E+00               1*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                 0               0  0.00000000E+00  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.55632222E+00  0.00000000E+00  0.00000000E+00  1.55632222E+00        
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$                                                                            &lt;br&gt;
PSHELL*                1               1  1.12644322E-01               1*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.00000000E+00               0  8.33333313E-01  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                                                 0                *       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PSHELL*                2               1  2.00000003E-01               1*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    1.00000000E+00               0  8.33333313E-01  0.00000000E+00*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                                                 0                *       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PBARL*                 3               1        MSCBML0         HAT     *&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;                                                                  *       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    3.00000000E+00  1.31358892E-01  2.00000000E+00  8.99999976E-01*       
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00                                                        
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$                                                                            &lt;br&gt;
MAT1    1       1.0E+7          0.33    0.283                                &lt;br&gt;
$                                                                            &lt;br&gt;
FORCE   1       10004           2000.0  1.0     0.0     0.0                  &lt;br&gt;
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
PARAM   AUTOSPC  YES                                                         &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;    &lt;br&gt;
$ DESIGN MODEL: $&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;    &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;hellip;DEFINE THE DESIGN VARIABLES:                                             &lt;br&gt;
$                                                                            &lt;br&gt;
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV                        &lt;br&gt;
DESVAR *               1T-PLATE           1.12644322E-01  1.00000005E-03+D    1V
*D    1V  1.00000000E+01  1.00000000E+00                                     &lt;br&gt;
DESVAR *               2T-BOX             1.31358886E+00  1.00000005E-03+D    2V
*D    2V  1.00000000E+01  1.00000000E+00&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P16</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_016/</guid>
      <description>
        
        
        &lt;p&gt;289 Chapter 5: Output Features and Interpretation
Postprocessing Output
Main Index
Figure 5-3  Punch File Produced Using ECHO=PUNCH(NEWBULK)
Postprocessing Output
This final section in the chapter discusses some of the postprocessing options that are available from SOL 200
analyses. In particular, the ability of Patran to postprocess optimization results is discussed. The immediate
discussion is of a file that contains results data in a format that allows input into a spreadsheet, thereby
providing access to the spreadsheet’s plotting capability.
Comma Separated Values File
The File Management  indicates how a file can be assigned for the special purpose of producing a file that can
be read into a spreadsheet utility such as Microsoft Excel. These results can then be manipulated using the
spreadsheet utilities and, in particular they can be plotted. The file is designated a Comma Separated Values
(or CSV) because the data are delimited by commas so that the spreadsheet can readily understand them. In
addition to the ASSIGN statement such as:
ASSIGN USERFILE=’DSOUG4.CSV’ , STATUS=NEW, FORM=FORMATTED, UNIT=52$                                                                            &lt;br&gt;
$&amp;hellip;RELATE THE DESIGN VARIABLES TO ANALYSIS MODEL PROPERTIES                 &lt;br&gt;
$   (LINEAR RELATIONS  SO USE DVPREL1)                                       &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;hellip;EXPRESS SHELL THICKNESSES AS FUNCTIONS OF X1  X2:                        &lt;br&gt;
$DVPREL1 ID     TYPE    PID     FID     PMIN    PMAX    C0              +    &lt;br&gt;
$+      DVIDD1  COEF1   DVID2   COEF2   &amp;hellip;                                  &lt;br&gt;
DVPREL1 1       PSHELL  1       T       0.01                            +DP1 &lt;br&gt;
+DP1    1       1.0                                                          &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;hellip;EXPRESS BOX THICKNESS AS A FUNCTION OF X2:                               &lt;br&gt;
DVPREL1 3       PBARL    3       DIM2                                        &lt;br&gt;
2       0.1                                                          &lt;br&gt;
$.   EXPRESS BOX OFFSET LOCATIONS AS A FUNCTION OF PLATE THICKNESS AND       &lt;br&gt;
$    FIXED BOX DIMENSIONS                                                    &lt;br&gt;
DVCREL1 10      CBAR    31      W3A                     1.5                  &lt;br&gt;
1       0.5                                                          &lt;br&gt;
DVCREL1 20      CBAR    32      W3A                     1.5                  &lt;br&gt;
1       0.5                                                          &lt;br&gt;
DRESP1  13      D1      DISP                    3               10302        &lt;br&gt;
DRESP1  14      D2      DISP                    3               10203        &lt;br&gt;
DRESP1  15      W       WEIGHT                                               &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;hellip;PLACE BOUNDS ON THE RESPONSES:                                           &lt;br&gt;
$                                                                            &lt;br&gt;
$DCONSTR DCID   RID     LALLOW  UALLOW                                       &lt;br&gt;
DCONSTR   10    1       -25000. 25000.                                       &lt;br&gt;
DCONSTR   10    2       -25000. 25000.                                       &lt;br&gt;
DCONSTR   10    3       -25000. 25000.                                       &lt;br&gt;
DCONSTR   10    6       -25000. 25000.                                       &lt;br&gt;
DCONSTR   20    13      -0.1    0.1                                          &lt;br&gt;
DCONSTR   30    14      -0.03   0.03                                         &lt;br&gt;
$                                                                            &lt;br&gt;
$DCONADD DCID   DC1     DC2     &amp;hellip;                                          &lt;br&gt;
$ SUMMED CONSTRAINT SET FOR SUBCASE 1                                        &lt;br&gt;
DCONADD   100   10      20                                                   &lt;br&gt;
$ SUMMED CONSTRAINT SET FOR SUBCASE 2                                        &lt;br&gt;
DCONADD   200   10      30                                                   &lt;br&gt;
$                                                                            &lt;br&gt;
$&amp;hellip;OPTIONAL OVERRIDE OF OPTIMIZATION PARAMETERS:                            &lt;br&gt;
$                                                                            &lt;br&gt;
DOPTPRM IPRINT  7       DESMAX  20      DELP    0.5     P1      1       +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  P2      15                                                              
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ (DELP=0.5 ALLOWS LARGER MOVES  THUS OVERCOMING CONSTRAINT                  &lt;br&gt;
$  VIOLATIONS QUICKER)                                                       &lt;br&gt;
$                                                                            &lt;br&gt;
ENDDATA&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Postprocessing Output290
Main Index
it is necessary to include a PARAM, XYUNIT, 52 in the Bulk Data file. The DSAPRT command is required
to produce formatted sensitivity data. Design cycle history data, including the objective, maximum constraint
and design variable values are all available in this file. Figure 5-4 shows four plots that can be derived from the
CSV file that is produced when the DSOUG4 file of the Stiffened Plate  is used. The first three plots show:
1.The sensitivity of the weight as a function of the two design variables
2.The sensitivity of the stress as a function of the two design variables
3.The ratio of the stress sensitivities to the weight sensitivities for the same two design variables.
This third chart is derived in Microsoft Excel by dividing the data of the second chart by that of the first. This
shows that the most effective way to achieve the desired stress limit is to reduce the first design variable while
increasing the second.
The fourth chart in Figure 5-4 depicts the values of the design variables as a function of the design cycle.
Similar plots could be produced for the objective and the maximum constraint value.
Figure 5-4  Plots Produced from a Comma Separated Values File&lt;/p&gt;
&lt;p&gt;291 Chapter 5: Output Features and Interpretation
Postprocessing Output
Main Index
Output from PARAM POST
This section discusses the postprocessing support that is available in Patran for optimization results from
MSC Nastran. There are two alternatives for creating output databases for Patran:
PARAM POST 0 in the MSC Nastran bulk data file results in an .xdb file that can be attached in an
Patran session.
PARAM POST -1 results in an .op2 file that is read onto the Patran data base.
Both of these options support display of finite element results as a function of design cycle. (It is necessary to
set PARAM NASPRT 1 to have data saved at each design cycle and only data requested in case control is
saved.) Therefore, it is possible to graphically depict, for example, the stress patterns or the deformations in
the designed structure at each design cycle.
The options differ in that the .op2 file contains some datablocks that are that specific to SOL 200. These
datablocks are documented in Section 4.4 of the Patran MSC Nastran Preference Guide, Volume 1: Structural
Analysis, which is available online when running Patran. In particular, a GEOMIN datablock permits the
display of shape basis vectors and new shapes as a function of the design cycle. Another datablock named
R1TABRG allows the display of which elements and grid responses are retained for the design task (see
Constraint Screening ). For element responses, elements with retained responses are identified in a on-off
manner with retained elements marked in white while the non-retained elements are black. For grid
responses, the direction of a marker at the grid point indicates which component of the grid response is
retained.
The .op2 file also contains information on the design variables, the maximum constraint values and the
objective function which are stored as global variables. These data are handled in a special way: when the .op2
file that contains these data is read into the Patran database, three XY plots are generated but not posted:
1.Objective function vs. design cycle
2.Maximum constraint vs. design cycle
3.Design Variable vs. design cycle.
Figure 5-5 compares displacement results for the first subcase at the initial and final design cycles for the design
task given in Cantilevered Plate . Note the scales on the side of the two plots which indicates that the
maximum displacement has increased from 0.218 to 2.00, which is equal to one of the design limits for this
problem. Figure 5-6 shows XY plots that are automatically generated in Patran that show the design objective
and the three design variable values as a function of the design cycle.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Postprocessing Output292
Main Index
Figure 5-5  Displacement Patterns for the Initial and Final Design Object&lt;/p&gt;
&lt;p&gt;293 Chapter 5: Output Features and Interpretation
Postprocessing Output
Main Index
a. Design variables as a function of design cycle
b. Design objective as a function of design cycle
Figure 5-6  Representative XY Plot from Patra n&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Postprocessing Output294
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 6: Shape Optimization
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
6 Shape Optimization
Introduction     296
Basis Vectors in Shape Optimization     296
Relating Design Variables to Shape Changes     300
Examples     327&lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
Introduction296
Main Index
Introduction
Shape sensitivity and optimization in MSC Nastran requires the definition of design variables, allowable
shape variations or shape basis vectors and relationship between the design variables and shape basis vectors.
A single shape or basis vector typically affects multiple grid locations. The amount the design variable is
changed during optimization results in a corresponding shape change.
This chapter begins with a discussion of basis vectors. This is followed by a detailed description of tools
available in MSC Nastran and Patran for relating design variables to the basis vectors. The final section
illustrates these tools, explains the input deck requirements, and describes the special outputs and post
processing support with example problems.
Basis Vectors in Shape Optimization
Shape basis vectors are used in MSC Nastran to characterize the allowable shape changes. The optimizer then
determines the best linear combination of these vectors, given the design criteria established by the engineer.
The angle bracket redesign of Figure 6-1 can be used to illustrate the concepts of shape basis vectors.
Figure 6-1  Angle Bracket
Suppose the design goal is to vary the lengths of the x- and 7y-axis legs of the bracket while keeping the outer
edge straight. The location of grid points 2 and 3 can easily be described in terms of the bracket leg lengths
G1y and G4x. For simplicity, assuming only four grids along this edge, we can write
(6-1)y
x1
2
3
4
G2x
G2y
G3x
G3y
0 13
23 0
0 23
13 0G1y
G4x&lt;/h1&gt;&lt;h1&gt;297 Chapter 6: Shape Optimization
Basis Vectors in Shape Optimization
Main Index
A more realistic model certainly would include more grid points along this edge in addition to a number of
grids in the structure’s interior. Adding these grids would simply add more equations to the set in Equation
(6-1), leaving its basic form unchanged.
We can write Equation (6-1) in terms of grid variations as
(6-2)
The coefficient matrix is unchanged in Equation (6-2) from that of Equation (6-1).
Equation (6-2) suggests that a convenient choice of design variables would be
(6-3)
or
(6-4)
Note that Equation (6-4) expresses a vector of grid coordinate changes in terms of a vector of design variable
changes. Each column of the matrix on the right-hand side of the equation is called a shape basis vector.
Generating the shape basis vectors is one of the design engineer’s primary tasks in shape optimization.
If we graph each column of the matrix in Equation (6-4) as a set of grid displacements, we see that column 1
represents a vertical (or y-component) variation in shape, while column 2 represents a horizontal shape
variation. (The column order is arbitrary and just depends on the order of the design variables.) Note that
both shape basis vectors, as well as any linear combination of them, keep the edge of the bracket as a straight
line, consistent with our design goals.G2x
G2y
G3x
G3y
0 13
23 0
0 23
13 0G1y
G4x&lt;/h1&gt;&lt;h1&gt;x1G1y=
x2G4x=
G1y
G2x
G2y
G3x
G3y
G4x
1 0
0 13
23 0
0 23
13 0
0 1x1
x2&lt;/h1&gt;&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Basis Vectors in Shape Optimization298
Main Index
Figure 6-2  Basis Vectors for the Angle Bracket
Once a shape basis vector description is available, the optimizer can vary the shape of the structure by
changing the corresponding design variables.
We can generalize the relation given in Equation (6-4) as
(6-5)
and i = design cycle number.
As the design variables change, the grid locations are computed as
(6-6)
Equation (6-5) expresses a vector of grid point changes as a function of changes in design variables. The linear
combination of design variable changes times each shape basis vector results in the total change in shape.
Typically, there are more grid points than design variables, or . For this reason, Equation (6-5) is often
called a reduced basis formulation.
It needs to be reemphasized that the designed shape is the perturbation of the original shape defined by the
GRID locations. The perturbation, as expressed in Equation (6-5), is the product of the shape basis vector and
the change  in the design variable value. This contrasts with sizing optimization, where the designed property
is determined based on the specification of Equation (2-2) or Equation (2-5) and the input property from the
analysis model is ignored.
Input of Shape Basis Vectors
MSC Nastran supports four methods to describe shape basis vectors:41y
2
3
x1y
x2
3
4
[T], Column 2 [T], Column 1G1y
G2y
G3yG2x
G3x
G4x
Gmx1Tmxnxnx1=
G Gi1+Gi– =
x xi1+= xi–
GnewGoTxnewxo–  + =
mn»&lt;/p&gt;
&lt;p&gt;299 Chapter 6: Shape Optimization
Basis Vectors in Shape Optimization
Main Index
1.Manual grid variation
2.Direct input of shapes
3.Geometric boundary shapes
4.Analytic boundary shapes
An overview of these methods is given here and details of the user interface in the next section, Relating
Design Variables to Shape Changes.
Manual Grid Variation
This is the most general, as well as the most tedious, method of generating shape basis vectors. A DVGRID
Bulk Data entry defines the direction and magnitude of a grid variation for a given change in a design
variable. This relation is shown in Figure 6-3 and Equation (6-7). A single DVGRID entry is required for every
design variable-grid pair.
Figure 6-3  Grid Point Variation Defined by a DVGRID Entry
(6-7)
Direct Input of Shapes
This approach greatly simplifies the process of defining shape basis vectors. With this method, externally-
generated vectors are DBLOCATEd and used to define shape basis vectors. These externally generated vectors
are solution vectors from an auxiliary model that shares the geometry (grid numbers and locations) with the
primary designed model but the boundary conditions and analyses are chosen to produce deformations (or
mode shapes) that are candidate shape changes. Relating Design Variables to Shape Changes  details the steps xz
yZ
Y
XGi
Gi
Gx
Gy
Gz
iCOEFFN1
N2
N3
     
ijxj=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes300
Main Index
required to use this method while Shape Optimization of a Culvert  provides an example application of this
technique.
Geometric Boundary Shapes
This method is similar to the Manual Grid Variation method except that the user is required to define the
allowable shape variations only on the boundary of the structure. In addition to supplying the DVGRID
information on the boundary, it is also necessary to supply BNDGRD Bulk Data entries to define the
structure’s boundaries. With this method, the shape basis vectors for the entire structure are automatically
generated by the code through a process of interpolation of the boundary shape changes to the interior of the
structure. An advantage of this method is that this interpolation is updated on every design cycle, minimizing
the problems associated with mesh distortion for large shape changes.
Analytic Boundary Shapes
This approach extends the geometric boundary shapes method to avoid having to supply DVGRID entries
on the boundary. Instead, the designer provides an auxiliary model over the boundaries of the structure that
are to be changed. This may be a collection of BAR elements along the edges of a two-dimensional structure
or a “skin” of plate elements over a three-dimensional part. We refer to this model over the boundaries as an
auxiliary boundary model. The designer then constrains and statically loads the auxiliary model to produce
a shape variation over the boundary, which the code then interpolates to the interior of the structure. The
result is a shape basis vector for optimization. Unlike the Direct Input of Shapes method, the auxiliary model
is included in the same input file as the primary model and the analysis of the auxiliary model feeds the shape
design task directly. Relating Design Variables to Shape Changes  details the steps required to use this method
while Analytic Boundary Shape  provides an example application of this technique.
Relating Design Variables to Shape Changes
This section enlarges on this earlier discussion by identifying the specific bulk data entries that are used for
each of these options. All of the methods, except for manual grid variation, use the concept of auxiliary model
in some form. Therefore the auxiliary model concept is first discussed before proceeding to the details of the
various methods.
Auxiliary Models in Shape Optimization
An auxiliary model is an additional finite element model used to generate shape basis vectors. Rather than
tediously specifying shape changes on an individual grid-by-grid basis, auxiliary models are a tool that can be
used to simplify this process. An auxiliary model usually shares the same geometry, element connectivity, and
(possibly) material type as the original structure. However, boundary conditions usually differ. Applying loads
to this structure will result in sets of displacement vectors {U}. When we think of the translational
displacement components of these vectors as representing individual components of grid motion, we realize
that the {U} v ectors can quite conveniently be used as basis vectors for shape optimization. For the “direct
input of shapes” method, the auxiliary model is exercised in a separate job submittal and the results input into
the shape optimization task. For the “geometric boundary shapes” and “analytic boundary shapes” methods,
the auxiliary model is integrated with the shape optimization task so that the shape vectors are generated is
the same job submittal as is used to perform the optimization task.&lt;/p&gt;
&lt;p&gt;301 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
As a simple example, consider the cantilever structure of Figure 6-4. The analysis model is clamped along the
left-hand edge and tip-loaded on the right. Suppose we would like to redesign the shape of the structure by
modifying the profile of the lower edge. In order to do so, we can use an auxiliary model to generate a few
characteristic profiles and use these as our shape basis vectors.
Figure 6-4  Simple 2-D Cantilever
Figure 6-5 shows the corresponding auxiliary model and its boundary conditions, exclusive of the loading. The
fixed edges on the left and top sides guarantee that the left-hand support and the horizontal upper edge will
not change during shape optimization. The support in the x direction along the right edge allows the depth
of the beam to change without changing its length. We can now load the bottom edge in a way to produce a
range of “shapes” or basis vectors.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes302
Main Index
Figure 6-5  Auxiliary Model for the Simple 2-D Cantilever
To view the basis vector:
a.Import the model,
b.Make a load case (displacement and loads) to generate the kind of shape you want
c.Select the subcases,&lt;br&gt;
d.Analyze and
e.View the displacement vectors by subcase (which is the same as viewing the basis vectors,
Figure 6-6).
This can be done for as many basis vectors as you want
Figure 6-6  Uniform Taper Basis Vector
A more arbitrary shape basis vector could be generated by loading an individual grid along the lower edge. In
order to avoid an inflection point in the resulting deflection pattern, it is advisable to add some very stiff
beams to the bottom edge of the auxiliary model. The produces a shape as shown in Figure 6-7. A number of
these shapes produced by loading other grids along this edge might comprise a useful set of shape basis
vectors.B
A
DC&lt;/p&gt;
&lt;p&gt;303 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-7  Point-Load Basis Vector
Modeling Methods (Shape Basis Vector Definition)
Shape optimization in MSC Nastran assumes the engineer is starting with a reasonably good design but
would like to investigate ways in which the shape of the part, or even the entire structure, might be modified
in order to better meet the design goals.
Although large shape variations can be investigated in MSC Nastran, it is important to note that in a practical
design environment, shape changes are often limited by numerous design considerations. Manufacturability
of the part, interference from neighboring components of the structure, aesthetics, and so on, often limit the
degree to which the structural shape can be modified.
Shape optimization in MSC Nastran allows you to investigate these “real world” types of shape variations.  It
will, for example, let you determine the optimum placement and size of cutouts to lighten a structure.
Unfortunately, it cannot tell you how many holes to use or otherwise affect the topology of the model.
The purpose of each of the four methods of shape optimization is the same: to define a basis vector (or a set
of basis vectors). The methods differ in terms of their user interfaces and whether or not the basis vectors are
automatically updated for each design cycle. The following subsections briefly outline each approach, its
strong as well as its possible weak points, and its requirements for use.
Manual Grid Variation
In this method, DVGRID entries alone are used to describe shape changes. For the simple linear taper of
Figure 6-6, the DESVAR/DVGRID data is defined as follows:
P&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes304
Main Index
As mentioned, this represents a significant amount of data that must be generated in some fashion. The
benefits, drawbacks and data preparation steps for this method are as follows:
Benefits
Since this can be considered the lowest-level approach, its strength lies in its generality. Using DVGRIDs
alone, the designer has direct control over every designed grid point in the model (that is, every grid point
whose location is to change during shape optimization.)
Drawbacks
In all but the simplest of problems, the data input can be formidable without a preprocessor.  The resultant
basis vectors are treated as constant and not updated with each design cycle, so the risks of mesh distortion
are increased.
Data Preparation
1.Define the shape design variables using DESVAR Bulk Data entries.
2.Establish the corresponding grid variations using DVGRID Bulk Data entries, one entry for every
design variable-designed grid pair in the model. This entry ties design variable changes to changes in
the structure’s shape.
3.Preview the resultant basis vectors and modify if necessary.
Direct Input of Shapes
This approach greatly simplifies the process of defining shape basis vectors. With this method, externally-
generated vectors are DBLOCATEd and used to define shape basis vectors. An auxiliary model analysis
provides these externally-generated vectors. These vectors could be the results of a statics analysis, but other
real vectors can also be used. For example, you may wish to use normal modes results. There are no DVGRID
entries required in this method (although you can still use them to augment the direct input shapes). Instead,
the DVSHAP entry is used to relate the DESVAR to the columns of the results from the auxiliary model
analysis. The benefits, drawbacks and data preparation steps for this method are: DESVAR 10LINTABP 1.0 0.01 10.
DVGRID 1011 1.0 0.0 0.4 0.0
DVGRID 1012 1.0 0.0 0.2667 0.0
DVGRID 1013 1.0 0.0 0.1333 0.0
DVGRID 1015 1.0 0.0 0.8 0.0
DVGRID 1016 1.0 0.0 0.5333 0.0
DVGRID 1017 1.0 0.0 0.2667 0.0
DVGRID 1019 1.0 0.0 1.2 0.0
DVGRID 1020 1.0 0.0 0.8 0.0
DVGRID 1021 1.0 0.0 0.4 0.0
DVGRID 1023 1.0 0.0 1.6 0.0
DVGRID 1024 1.0 0.0 1.067 0.0
DVGRID 1025 1.0 0.0 0.5333 0.0
DVGRID 1027 1.0 0.0 2.0 0.0
DVGRID 1028 1.0 0.0 1.3333 0.0
DVGRID 1029 1.0 0.0 0.6667 0.0&lt;/p&gt;
&lt;p&gt;305 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Benefits
Basis vectors for shape optimization can be generated using an external auxiliary model analysis and
DBLOCATEd, allowing for easy generation of shape basis vectors. In theory, any method of external
generation is possible, as long as the number of degrees-of-freedom in the auxiliary model is the same as in
the primary structure (i.e., G-sets must be equivalent).
Drawbacks
The process is not fully automatic since an auxiliary model analysis must be performed beforehand, with
results saved on the database, and DBLOCATEd for shape optimization. Since the basis vectors are externally
generated, they are not updated for each design cycle. This may cause mesh distortion problems for large
shape changes.
Data Preparation
1.Define an auxiliary model, perform an analysis, and save the results to the database using the
SCR=NO option on the NASTRAN job submittal command. This process is the same as a
conventional MSC Nastran analysis except that the auxiliary model geometry and boundary
conditions have been established with consideration given to the shape redesign goals.
2.DBLOCATE the results for shape optimization using the following FMS section commands
(assuming the master file is file1.MASTER):
ASSIGN FILE1 = “file1.MASTER”
DBLOCATE DATABLK=(UG/UGD,GEOM1/GEOM1D,GEOM2/GEOM2D),
LOGICAL=FILE1
3.Define shape design variables using DESVAR entries, and correlate these to the DBLOCATEd basis
vectors using DVSHAP Bulk Data entries.
4.Preview the resultant shape basis vectors to check for modeling errors.
Geometric Boundary Shapes
In this method, BNDGRD Bulk Data entries are used to define the structure’s boundaries and DVGRID
entries to furnish the shape variations only over these boundaries. The linear taper basis vector of Figure 6-6
can therefore be input using:Note:   The data blocks UG, GEOM1, and GEOM2, are DBLOCATEDd and renamed to
UGD, GEOM1D, and GEOM2D, respectively. The data block names UGD,
GEOM1D, and GEOM2D cannot be changed.
DESVAR 10LINTAP 1.0 0.01 10.
DVGRID 1011 1.0 0.0 0.4 0.0
DVGRID 1015 1.0 0.0 0.8 0.0
DVGRID 1019 1.0 0.0 1.2 0.0
DVGRID 1023 1.0 0.0 1.6 0.0
DVGRID 1027 1.0 0.0 2.0 0.0
BNDGRID 12311 15 19 23 27 78
910 14 18 22 26 30
BNDGRID 128 29 30&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes306
Main Index
It is seen that the input preparation is simplified relative to the manual grid variation input for the same
example. The benefits, drawbacks and data preparation for this method are:
Benefits
Since grid variations need only be specified over the boundaries, data preparation is greatly simplified. In fact,
since DVGRID entries are only written for the boundaries, many real-world problems can be effectively
solved without geometry-based preprocessors. Internal computation of the shape basis vectors means that
these can be recomputed (updated) for every design cycle, reducing the problems associated with mesh
distortion for large shape changes.
Drawbacks
Describing grid variations over the boundaries may still require significant DVGRID information, even
though orders of magnitude less than the manual grid variation method.
Data Preparation
1.Define the shape design variables using DESVAR Bulk Data entries.
2.Define corresponding shape variations over the structure’s boundaries using DVGRID entries.
3.Define the shape boundary conditions using BNDGRID Bulk Data entries. The BNDGRID-
DVGRID entry combination is analogous to the use of SPCDs to impose enforced boundary
displacements. The DVGRID entry supplies the enforced variation, much like an SPCD, to the
boundary grids specified on the BNDGRID entry (similar to an SPC entry).
Analytic Boundary Shape
The analytic boundary shapes method can be characterized as being the most sophisticated of the methods
and removes the need for DVGRID generation completely. Instead, you must generate an auxiliary model
that “clads” the boundary that is to be redesigned. This can be done in a preprocessor, thereby minimizing
the manual data preparation. The geometry (that is, GRID locations) is shared between the primary and
auxiliary models and it is necessary to include BNGRID entries in the primary model that identify the
boundary in the same way as in the geometry boundary shapes method. Analytic Boundary Shapes  provides
an example that uses this method and you should refer to this to get a clear picture of the requirements for
generating the auxiliary models. This method involves separate bulk data for the auxiliary models, with each
model denoted by a BEGIN BULK AUXMODEL = n command. Unique loads and boundary conditions
are applied to the auxiliary model(s), necessitating separate case control sections for each of the models. The
AUXCASE and AUXMODEL Case Control commands are used to select the separate bulk data files.
Benefits
The method is very general, and does not require a geometry-based pre- and postprocessor. The user interface
is entirely within the MSC Nastran environment. Shape basis vectors are updated on every design cycle,
reducing the problems associated with mesh distortion for large shape changes.Note:   It is necessary to specify the grid component combinations that are fixed using the BNGRID
entry, but it is not necessary to provide a DVGRID entry when the grids are fixed to zero.&lt;/p&gt;
&lt;p&gt;307 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Any combination of static  loading available in MSC Nastran may be used. Point loads (FORCE), enforced
displacements (SPCD), thermal loads (TEMP), pressure loads (PLOAD), and so on, may all be used to
generate the desired shapes.
Drawbacks
Creativity is often required in the selection of loads and boundary conditions for the auxiliary boundary
models. This is listed as a drawback because the “creativity” requires that you possess a certain amount of
sophistication in model preparation. You may see this as a benefit in that your creativity can be applied to
create the most appropriate shape basis vectors!
Data Preparation
1.Define auxiliary boundary models using one additional Bulk Data Section for each model. These
sections are identified with the command, BEGIN BULK AUXMODEL = n where n is the auxiliary
boundary model ID.
2.Select loading and boundary conditions in Case Control using AUXCASE and AUXMODEL = n to
define the auxiliary boundary model Case Control Sections.
3.Define the shape boundary conditions on the actual structure using BNDGRID Bulk Data entries.
In addition to defining the connection points with the auxiliary boundary model, the BNDGRID
entries must define those boundaries that are invariant during shape optimization.
4.Define the shape design variables using DESVAR entries, and relate these to the shape basis vectors
(which the code will compute) with DVSHAP entries.
Example: Shape Basis Vectors
This example further illustrates the process of defining shape basis vectors for each of the previously outlined
methods, excluding the manual grid variation method for which data preparation can be quite extensive.
Since DVGRIDs are used in the geometric boundary shapes method anyway, their use is covered here in
connection with that method.
Suppose we want to redesign the shape of a hole cutout in a square plate shown in Figure 6-8. This redesign
seeks to minimize the weight, subject to constraints on von Mises stresses. However, rather than allow only
circular variations, we would like to investigate elliptical shape changes. Since the edge traction force Tx is
twice Ty, one would expect a 2:1 ratio elliptical hole at the optimum, rather than simply a circle. T wo design
variables will be used-each one representing an axis length.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes308
Main Index
Figure 6-8  Plate Quarter Model
Recall that the equation for an ellipse centered at the origin of the x-y plane is given by
(6-8)
where a and b are the x and y axis intercepts, respectively, of the ellipse. We want the optimizer to vary the
shape of the ellipse, so a natural choice is to define two design variables, each representing the changes in a
and b. These quantities can be defined as
$ define design variables&amp;hellip;
$DESVAR,ID,     LABEL,  XINIT,  XLB,    XUB,    DELXV
DESVAR, 1,      DELA,   1.0,    -20.,   +20.
DESVAR, 2, DELB,   1.0,    -20.,   +20.
0.15m0.15m
0.05m
Material: aluminum, 7075-T6 sheet
E 7.2E10 = Nm2
 0.33 =
 2.8E3 = kgm3Ty1.0E4 = Nm
x2
ab&amp;mdash;&amp;ndash;y2
b2&amp;mdash;&amp;ndash;+ 1=&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P17</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_017/</guid>
      <description>
        
        
        &lt;p&gt;309 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
These two entries define two design variables: each with initial values of 1.0, lower bounds of -20., and upper
bounds of +20. The initial design variable values are somewhat arbitrary as are the lower and upper bounds.
Direct Input of Shapes
Direct input of shapes uses an external auxiliary model to generate shape basis vectors. The auxiliary model
is used to generate a set of displacement vectors that are then DBLOCATEd and identified as shape basis
vectors in the optimization run. All data for the auxiliary model analysis must be provided for by the designer
in a prior MSC Nastran run.
Figure 6-9 shows the auxiliary model and its boundary conditions. Its geometry and connectivity are the same
as for the primary structure. The material types are also the same, although this need not be the case. Note
that the chosen boundary conditions are consistent with our shape redesign goals: outer edges fixed,
symmetry along the x and y axes, and a free edge along the hole boundary.
Figure 6-9  External Auxiliary Model
Along the cutout, we will apply two sets of enforced displacements: one an elliptical variation in the a, or x,
direction, the other an elliptical variation in the b, or y, direction. We can use a geometry-based preprocessor
to give us this data or for simple cases, we can just compute this data by hand. Either way, the following SPCD
entries result:Note:   From Equation (6-5) a change in a design variables value causes a change in grid location. The
characteristics of the shape changes depend on the shape basis vectors. DESVAR entries 1 and 2
just define the presence of basis vector multipliers that the optimizer is free to vary. The basis
vector magnitudes will govern the corresponding magnitude of shape change.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes310
Main Index
$
$ &amp;ldquo;LOAD&amp;rdquo; 1: ELLIPTICAL X-COMPONENT VARIATION (10MM MAX. VALUE)
SPCD,   101,    1,      1,      .01
SPCD,   101,    5,      1,      .0098769
SPCD,   101,    6,      1,      .0095106
SPCD,   101,    7,      1,      .0089101
SPCD,   101,    8,      1,      .0080902
SPCD,   101,    9,      1,      .0070711
SPCD,   101,    10,     1,      .0058779
SPCD,   101,    11,     1,      .0045399
SPCD,   101,    12,     1,      .0030902
SPCD,   101,    13,     1,      .0015644
SPCD,   101,    14,     1,      0.0
SPC1,   102,    123456, 1,      5,      6,      7,      8,      9,      +
+,      10,     11,     12,     13,     14
SPCADD, 103,    101, 102
$
$
$ &amp;ldquo;LOAD 2&amp;rdquo;: ELLIPTICAL Y-COMPONENT VARIATION (10MM MAX. VALUE)
SPCD,   104,    5,      2,      .0015644
SPCD,   104,    6,      2,      .0030902
SPCD,   104,    7,      2,      .0045399
SPCD,   104,    8,      2,      .0058779
SPCD,   104,    9,      2,      .0070711
SPCD,   104,    10,     2,      .0080902
SPCD,   104,    11,     2,      .0089101
SPCD,   104,    12,     2,      .0095106
SPCD,   104,    13,     2,      .0098769
SPCD,   104,    14,     2,      .01
SPC1,   105,    123456, 1,      5,      6,      7,      8,      9,      +
+,      10,     11,     12,     13,     14
SPCADD, 106,    104,  105
$
Note:   The SPCD enforced displacement values correspond to an elliptical variation along the hole
boundary with a maximum value of 0.01. The result of these load applications are shown in
Figure 6-10 and Figure 6-11 (the deformations have been enlarged for clarity). These displacement
vectors are used next to generate our shape basis vectors.&lt;/p&gt;
&lt;p&gt;311 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-10  Displacement Vector 1&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes312
Main Index
Figure 6-11  Displacement Vector 2
In the optimization run, we will DBLOCATE these displacement vectors and use this data to define our
shape basis vectors. This data can be DBLOCATEd using the following FMS Section statements:
where plate33_aux.MASTER is the master DBset file corresponding to the auxiliary model analysis results
shown in Figure 6-10 and Figure 6-11.
Having input this information, we need to identify the design variables that are to act as multipliers of these
basis vectors. This is done using the following DVSHAP Bulk Data entries:
The first entry defines Design Variable 1 (DVID = 1) as the multiplier of the first DBLOCATEd
displacement vector (COL1 = 1) using the factor 1.0 (SF1) as the constant of multiplication. This process assign f1 = ’plate33_aux.MASTER’
dblocate datablk=(ug/ugd,geom1/geom1d,geom2/geom2d), logical=f1
$DVSHAP,DVID,   COL1,   SF1,    COL2,   SF2,    &amp;hellip;
DVSHAP, 1,      1,      1.0
DVSHAP, 2,      2,      1.0&lt;/p&gt;
&lt;h1&gt;313 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
defines the first shape basis vector. A similar process on the second DVSHAP entry defines the next shape
basis vector.
Note that we now have two basis vectors, one for each of the a and b elliptical variations of the hole boundary.
As the optimizer changes x1 and x2, the grid locations are varied according to
(6-9)
where u1 is the first DBLOCATEd basis vector (note the 1.0 multiplying factor) and u2 is the second.
Geometric Boundary Shapes
Rather than externally generating the shape basis vector data as in the previous approach, this method
generates the vectors automatically, based on geometric data supplied on the boundaries. A ll of the data
preparation and input appear in the optimization input file; there is no need for a prior auxiliary model
analysis.
In addition, with this method the shape basis vectors are updated on each design cycle as the shape changes.
One problem with basis vectors that are not updated is that they may lead to ill-conditioned meshes for large
shape changes. Updating this data on each design cycle minimizes (but not altogether eliminates) this
difficulty.
The geometric boundary shapes method begins with a definition of allowable variations over the boundaries.
These variations can be described with a geometry-based preprocessor, or with Bulk Data alone. Either way,
the boundaries are defined using BNDGRID entries, and the variations defined using DVGRID entries.
The elliptical variations on the boundaries can be defined as follows:G 1.0u1 1.0u2x1
x2&lt;/h1&gt;&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes314
Main Index
The first set of DVGRID entries are related to Design Variable 1, DELA. Note that the coefficient
magnitudes (COEFF) are the same as the SPCD magnitudes of the previous example. We observe that this
set describes an elliptical shape variation in the x-direction (N1 = 1.0, N2 =N3 = 0.0), dependent on changes
in Design Variable 1. The second set of DVGRID entries likewise describes an elliptical shape variation in
the y-direction, which is dependent on changes in Design Variable 2.
BNDGRID entries complete the shape boundary definition process and identify two categories of grid
components:
1.Grid components that change according to data supplied on the DVGRID entries.
2.Grid components that remain fixed.
The process is similar to the SPC, SPCD combination used to impose enforced displacements in static
analysis. The DVGRID entry supplies the grid motion on the boundary, much like an SPCD enforced
displacement. The boundary grids are identified using BNDGRID entries, much like an SPC entry that
identifies the corresponding grids and their components.$ DEFINE DESIGN VARIABLES&amp;hellip;
DESVAR, 1,      DELA,   1.0,    -20.,   +20.
DESVAR, 2,      DELB,   1.0,    -20.,   +20.
$
$ &amp;hellip;AND RELATE THESE TO BOUNDARY VARIATIONS DEFINED USING DVGRIDS:
$DVGRID,DVID,   GRID,   CID,    COEFF,  N1,     N2,     N3
$
$ BASIS VECTOR 1:
DVGRID, 1,      1,      ,       .01,     1.0,   0.0,    0.0
DVGRID, 1,      5,      ,       .0098769,1.0,   0.0,    0.0
DVGRID, 1,      6,      ,       .0095106,1.0,   0.0,    0.0
DVGRID, 1,      7,      ,       .0089101,1.0,   0.0,    0.0
DVGRID, 1,      8,      ,       .0080902,1.0,   0.0,    0.0
DVGRID, 1,      9,      ,       .0070711,1.0,   0.0,    0.0
DVGRID, 1,      10,     ,       .0058779,1.0,   0.0,    0.0
DVGRID, 1,      11,     ,       .0045399,1.0,   0.0,    0.0
DVGRID, 1,      12,     ,       .0030902,1.0,   0.0,    0.0
DVGRID, 1,      13,     ,       .0015644,1.0,   0.0,    0.0
DVGRID, 1,      14,     ,       .0,      1.0,   0.0,    0.0
$
$
$ BASIS VECTOR 2:
DVGRID, 2,      1,      ,       .0,      0.0,   1.0,    0.0
DVGRID, 2,      5,      ,       .0015644,0.0,   1.0,    0.0
DVGRID, 2,      6,      ,       .0030902,0.0,   1.0,    0.0
DVGRID, 2,      7,      ,       .0045399,0.0,   1.0,    0.0
DVGRID, 2,      8,      ,       .0058779,0.0,   1.0,    0.0
DVGRID, 2,      9,      ,       .0070711,0.0,   1.0,    0.0
DVGRID, 2,      10,     ,       .0080902,0.0,   1.0,    0.0
DVGRID, 2,      11,     ,       .0089101,0.0,   1.0,    0.0
DVGRID, 2,      12,     ,       .0095106,0.0,   1.0,    0.0
DVGRID, 2,      13,     ,       .0098769,0.0,   1.0,    0.0
DVGRID, 2,      14,     ,       .01,     0.0,   1.0,    0.0&lt;/p&gt;
&lt;p&gt;315 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
The first BNDGRID entry identifies all grid components along the plate outer edges. Since no DVGRIDs
have been furnished for these degrees-of-freedom, their displacements will be fixed to zero. For shape
optimization, the plate outer edges will be invariant.
The second BNDGRID entry identifies components 2 through 6 for those grids that lie on the x-axis. This
allows the x-component to vary during shape optimization, consistent with the elliptical changes made to the
cutout. All other components are considered fixed since no enforced shape changes for these degrees-of-
freedom have been supplied on DVGRID entries. The third BNDGRID entry furnishes similar information
as the previous entry, only with regard to shape changes along the y-axis.
The last BNDGRID entry identifies components 1 through 6 for the cutout edge grids. Shape changes are
enforced for components 1 and 2 since they have been provided on DVGRID entries. All other components
are considered fixed.
Once the free, fixed, and enforced portions of the shape changes have been defined, the code interpolates this
information to all of the interior degrees-of-freedom. In this case, the resulting shape basis vectors are
identical to those shown in Figure 6-10 and Figure 6-11.
On subsequent iterations, the shape basis vectors may change slightly because the interpolated solutions over
the interior of the structure will change due to the modified geometry.  Recomputing the basis vectors at the
beginning of each design cycle helps to minimize the problems associated with mesh distortion.
Analytic Boundary Shapes
This method also uses auxiliary models. Here, however, they are usually defined over the boundaries of the
structure, although they can cover the whole structure if required. The so-called auxiliary boundary models
can be an edge of BAR elements for a two-dimensional redesign or a skin of shell elements for a general, three-
dimensional shape optimization task.
Auxiliary boundary models are used to generate shape variations over the boundaries of the structure,
providing a shortcut to the geometric boundary shapes method.  You can define as many auxiliary boundary
models as are necessary using any number and types of applied static loading to produce sets of desired $
$ BOUNDARY CONDITIONS FOR SPCD APPLICATION (PROVIDED VIA DVGRIDS)
$       OUTER PLATE EDGES&amp;hellip;
BNDGRID,123456, 2,      15,     16,     17,     18,     3,      19,     +
+,      20,     21,     22,     4
$ Y=0 PLANE&amp;hellip;
BNDGRID,23456,  23,     24,     25,     26
$ X=0 PLANE&amp;hellip;
BNDGRID,13456,  99,     100,    101,    102
$       CUTOUT EDGE&amp;hellip;
BNDGRID,123456, 1,      5,      6,      7,      8,      9,      10,     +
+,      11,     12,     13,     14
Note:   The boundary conditions defined by the DVGRID and BNDGRID entries are only used to
generate shape basis vectors. They are not used in connection with the primary model analysis.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes316
Main Index
boundary variations.  The code interpolates these boundary changes to the structure’s interior, thus
automatically generating the shape basis vectors.
Each auxiliary boundary model requires its own Bulk Data Section. Each model can be loaded in any number
of subcases to produce more than one shape basis vector per auxiliary boundary model. Load and boundary
condition sets are selected using the auxiliary boundary model Case Control Sections.
The following Bulk Data section provides the auxiliary boundary model definition for our plate example.
This section must appear after the Bulk Data for the primary model.&lt;/p&gt;
&lt;p&gt;317 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
A number of interesting things can be seen in this listing. First, the CBAR entries define the auxiliary
boundary model elements as a ring of bar elements along the cutout. Note that GRID entries do not appear
because grid data is shared with the primary structure, and additional grids need not be defined. (Of course,
if extra grids are necessary, they can be added as required. If the location of the hole were to change, one might
want to define another grid at the center to use as an attachment point for rigid elements.)BEGIN BULK AUXMODEL = 1
$
PARAM, PRGPST, NO
$
$ auxillary model element definition (geometry from primary structure):
$
CBAR,   101,    20,     1,      5,      0.,     0.,     1.
CBAR,   102,    20,     5,      6,      0.,     0.,     1.
CBAR,   103,    20,     6,      7,      0.,     0.,     1.
CBAR,   104,    20,     7,      8,      0.,     0.,     1.
CBAR,   105,    20,     8,      9,      0.,     0.,     1.
CBAR,   106,    20,     9,      10,     0.,     0.,     1.
CBAR,   107,    20,     10,     11,     0.,     0.,     1.
CBAR,   108,    20,     11,     12,     0.,     0.,     1.
CBAR,   109,    20,     12,     13,     0.,     0.,     1.
CBAR,   110,    20,     13,     14,     0.,     0.,     1.
PBAR,   20,     102,    1.0E-3, 1.0E-12,1.0E-12,1.0E-12
MAT1,   102,    7.2+10, ,       0.33,   2.8015+3,1.0-2
$
$ boundary condition set I:
PLOAD1, 160,    101,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    102,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    103,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    104,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    105,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    106,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    107,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    108,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    109,    FX,     FR,     0.,     100.,   1.,     100.
PLOAD1, 160,    110,    FX,     FR,     0.,     100.,   1.,     100.
$
$ boundary condition set II:
PLOAD1, 161,    101,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    102,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    103,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    104,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    105,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    106,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    107,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    108,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    109,    FY,     FR,     0.,     100.,   1.,     100.
PLOAD1, 161,    110,    FY,     FR,     0.,     100.,   1.,     100.
$
$ temperature distribution:
TEMP,   162,    1,      1.,     5,      1.,     6,      1.
TEMP,   162,    7,      1.,     8,      1.,     9,      1.
TEMP,   162,    10,     1.,     11,     1.,     12,     1.
TEMP,   162,    13,     1.,     14,     1.
$
$ spc conditions for both load sets:
SPC,    100,    1,      23456,  0.0
SPC,    100,    14,     13456,  0.0
SPC1,   100,    345,    5,      6,      7,      8,      9,      10,     +
+,      11,     12,     13
$
ENDDATA&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes318
Main Index
T wo sets of loads are applied. One will result in an elliptical-type variation in the x-direction, and the other
a similar displacement in the y-direction. Uniform loading with PLOAD1’s and a uniform temperature load
have been used to generate these boundary deformations.
The loading and boundary condition sets are selected in the auxiliary boundary model Case Control Section,
which follows the Case Control for the primary model:
The keyword AUXCASE identifies the beginning of the auxiliary model Case Control Sections. In this
example, a single auxiliary boundary model (AUXMODEL = 1) is used to generate two basis vectors in
subcases 10 and 20. The resultant boundary displacements are shown in Figure 6-12 and Figure 6-13.
Figure 6-12  Boundary Displacement Set 1$ AUXILIARY MODEL CASE CONTROL:
AUXCASE
AUXMODEL = 1
SUBCASE 10
SUBTITLE = AUXILIARY MODEL 1, LOAD CASE 10
SPC  = 100
LOAD = 160
TEMP(LOAD) = 162
DISPLACEMENT = ALL
SUBCASE 20
SUBTITLE = AUXILIARY MODEL 1, LOAD CASE 20
SPC  = 100
LOAD = 161
TEMP(LOAD) = 162
DISPLACEMENT = ALL
BEGIN BULK&lt;/p&gt;
&lt;p&gt;319 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-13  Boundary Displacement Set 2
Once these boundary displacements have been computed, the code interpolates these displacements to the
interior grids. Once again, BNDGRID entries define the degrees-of-freedom along the boundaries that are
allowed to change and those degrees-of-freedom that are to remain fixed.
You will recognize these as being the same set of boundary conditions as were used in the geometric shapes
method. The auxiliary boundary model solutions, combined with the BNDGRID boundary data, supply
sufficient information to the code to use in interpolating these shape changes to the interior of the structure.
The result is a family of shape basis vectors. Finally, the designer ties these basis vectors to changes in the set
of design variables using the DVBSHAP entries:$
$ boundary conditions for basis vector generation:
$       outer plate edges&amp;hellip;
BNDGRID,123456, 2,      15,     16,     17,     18,     3,      19,     +
+,      20,     21,     22,     4
$       x=0 plane&amp;hellip;
BNDGRID,23456,  23,     24,     25,     26
$       y=0 plane&amp;hellip;
BNDGRID,13456,  99,     100,    101,    102
$       cutout edge&amp;hellip;
BNDGRID,123456, 1,      5,      6,      7,      8,      9,      10,     +
+,      11,     12,     13,     14&lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes320
Main Index
Each entry associates a Design Variable with a basis vector resulting from a particular auxiliary boundary
model (AUXMID). The column number (COL) indicates the auxiliary model displacement solution
number. In this example, design variable 1 is the multiplier (with a 1.0 multiple) of the shape basis vector
resulting from a solution of auxiliary boundary model 1 (AUXMID = 1). But recall that this model has two
subcases: 10 and 20. The COL field on the entry reconciles this. COL1 = 1 implies the first solution from
subcase 10. COL1 = 2 implies the second solution from subcase 20. Similarly, design variable 2 is the second
basis vector multiplier computed from the second solution (subcase 20) of auxiliary boundary model 1
(AUXMID = 1).
The resultant reduced basis formulation could be written as:
(6-10)
where each column is a displacement solution of the auxiliary model. Each column is the same size as {G}.&lt;br&gt;
The subscripts on displacement solutions indicate the source of the applied boundary displacements. The
first shape basis vector is derived from the first auxiliary boundary model subcase, while the second shape
basis vector is derived from the second auxiliary model subcase.
Use of Patran to generate a Shape Optimization deck
Patran has a Shape Optimization Utility which may be used for generating design variables, basis vectors and
DVGRID entries relating the basis vectors to the design variables. This feature is illustrated with the help of
an example.
Model 1 - Plate with hole
This model is of a square plate with a reinforced hole in the middle.  We want to vary the radius of the hole
and of the stiffened section.  Also the thickness of these plates can also be varied.  The objective is to minimize
mass and there are constraints on stress.$DVBSHAP,DVID,  AUXMID, COL1,   SF1,    &amp;hellip;
DVBSHAP,1,      1,      1,      1.0
DVBSHAP,2,      1,      2,      1.0
G1.0UAUXMID 1=
SUBCASE10= 1.0UAUXMID 1=
SUBCASE 20=x1
x2&lt;/h1&gt;&lt;p&gt;321 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-14  Plate with Hole
The plate is 10 units square.  The starting hole diameter is 4 units with a stiffened area out to 6 units diameter.
Procedure
1.Create the model in Patran and create model variables for both pshell thicknesses using the standard
Patran tool.
a.Go to Tools -&amp;gt; Design Study -&amp;gt; Pre Process&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes322
Main Index
Figure 6-15  Pre-process in Patran
b.Select Action-&amp;gt; Create, Object-&amp;gt; Design Variable, Type-&amp;gt; Property. Select Dimension-&amp;gt;2D and
Type-&amp;gt;Shell. Select desired property from Select Property Set. Set Input Bounds at Lower/Upper
and Value. Fill Variable Name, Analysis Model Value, and Lower (L) and Upper (U) bounds for
the designed thickness.&lt;/p&gt;
&lt;p&gt;323 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-16  Creating Design Variables
2.Create fields describing the changes in radius. These fields should reduce in magnitude to zero at a
radius away from the hole. (creating a zone of influence outside of which grid points are unaffected)
Use Field names Inner_D and Outer_D. Each field is a vector PCL field defined using the cylindrical
coordinate system 1. These fields must be of type vector to tell MSC Nastran which direction to move
the grid points. Only the R component is defined in the field.
a.Inner_D=((4-&amp;lsquo;R)+abs(4-&amp;lsquo;R))/4
b.Outer_D=((4.5-&amp;lsquo;R)+abs(4.5-&amp;lsquo;R))/4&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes324
Main Index
Figure 6-17  Creating Fields
3.Open the Shape utility form. Click Utilities-&amp;gt;Analysis-&amp;gt;Calculate Shape Basis Vectors&lt;/p&gt;
&lt;p&gt;325 Chapter 6: Shape Optimization
Relating Design Variables to Shape Changes
Main Index
Figure 6-18  Shape utility form
a.Select both fields
b.Select all grid points other than those on the boundary and add to the select box
c.Select “normalize m aximum vector” and put 0.5 in the normalized value box to allow 0.5&amp;quot;
maximum grid movement.
d.Select “offset D esvar ID number” and put 2 in the box
e.Select “apply”&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Shape Changes326
Main Index
Figure 6-19  Basis vector creation
This will create a file called dbname.bv.nn where dbname is the name of your Patran database and nn is a
unique number.  The file includes all the relevant d esvar and dvgrid entries for the shape optimization.  There
is also a line added in the direct text input for the current job:
include &amp;lsquo;dbname.bv.nn&amp;rsquo;
This effectively inserts the basis vector into the analysis.&lt;/p&gt;
&lt;p&gt;327 Chapter 6: Shape Optimization
Examples
Main Index
Examples
Shape Optimization of a Culvert
This example considers shape optimization using the direct input of shapes method.
In order to use this method, sets of displacement vectors are first generated using a separate auxiliary model
analysis.  These displacement vectors are then DBLOCATEd in a subsequent design optimization run and
used to generate a set of shape basis vectors.  The optimizer then seeks to find the best combination of these
shape basis vectors.
Problem Description
Figure 6-20 shows the finite element model of one half of a symmetric culvert structure (symmetry exists with
respect to the y-axis.)  The structure is made of steel, and has been modeled using CQUAD4 elements in plane
strain.  This example has been taken from “Shape Optimal Design Using Isoparametric Elements” (see
Reference 5.).
Figure 6-20  Initial Culvert Design
With the bottom surface fixed, pressure loads are applied on the top surface.  The design task is to minimize
the volume of the structure by changing the shape of the initially circular hole, subject to von Mises stress
constraints over the interior.
Modeling Considerations
The process of shape basis vector generation is closely associated with the nature of the design problem itself.&lt;br&gt;
For example, since the goal here is weight minimization, the shape basis vectors must clearly be able to reduce
the volume of the structure.  Were they to simply redistribute material, the weight would not change and the
optimizer would be able to make little progress.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples328
Main Index
Furthermore, since the redesign is subject to von Mises stresses, we can use the initial stress distribution to
help us in the selection of appropriate basis vectors.  This is also shown in Figure 6-20. Here we note that the
maximum von Mises stresses occur around the lower portion of the circular hole.  The stresses are not equally
distributed either.  This tells us that a circular boundary does not provide the optimal design.  Thus, our shape
basis vectors must contain other than just radial components.
We also need to decide how many design variables (or shape basis vectors) are needed.  The decision is not
unique because the selection can be affected by experience, various functional and manufacturing
requirements, or aesthetic requirements.  However, the shape basis vectors should yield as much generality as
possible, consistent with our design goals.
Creation of Auxiliary Model, and Generation of Basis Vectors
The top left frame in Figure 6-21 shows the auxiliary model geometry. Note that it has the same geometry as
the primary structure ( Figure 6-20), but with different boundary and loading conditions.  The input data file
for this model is given in Listing 6-1.
Figure 6-21  Auxiliary Model
Outside edges of the culvert are fixed in the auxiliary model to satisfy straight edge requirements.  Grid points
1, 2, 3 on the bottom are allowed  to move in the x-direction and grid points 13, 20, 27 on the symmetry line
can move along the y-direction.  Grids 5, 9, 14, 15, and 16 on the hole boundary are allowed to move as well.
Along this hole boundary, six CBAR elements have been added to help smooth the applied loading effects.
(It is important to allow z-rotations along this boundary.)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P18</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_018/</guid>
      <description>
        
        
        &lt;p&gt;329 Chapter 6: Shape Optimization
Examples
Main Index
To generate a set of displacements to be used as basis vectors, we can statically load each grid in a direction
normal to the boundary as shown in Figure 6-21. Note from Listing 6-1 that this can be performed in Solution
101 (or in Solution 200, with OPTEXIT = 2). This will result in seven displacement vectors, one
corresponding to each load case. Three of these vectors are also shown in Figure 6-21, the first with a load
applied at grid 13, the second at grid 16, and the third at grid 1.
To view shape basis vectors, import the model and results of external auxiliary model and click Result to
obtain the Results form and select the options as shown in Figure 6-22.
Figure 6-22  Visualizing  Shape Basis Vector
The database is saved through the use of the SCR=NO or SCR=MINI keyword when submitting the
auxiliary model job.
Listing 6-1  Auxiliary Model for the DSOUG5 Example (File DSOUG5A)
ID MSC, DSOUG5A $
$ This is the external auxiliary model file for the shape
$ optimization of a culvert example.  This deck must be
$ run first and the results saved to the datbase before the
$ culvert example, dsoug5.dat, is run.
TIME 10
SOL 101
CEND
TITLE=Culvert Example Using External Auxiliary Model           DSOUG5&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples330
Main Index
SUBTITLE=The External Auxiliary Model
SPC=25
$
$ seven load cases
$
SUBCASE 1
LOAD=100
DISP=ALL
SUBCASE 2
LOAD=101
DISP=ALL
SUBCASE 3
LOAD=102
DISP=ALL
SUBCASE 4
LOAD=103
DISP=ALL
SUBCASE 5
LOAD=104
DISP=ALL
SUBCASE 6
LOAD=105
DISP=ALL
SUBCASE 7
LOAD=106
DISP=ALL
BEGIN BULK
PARAM,POST,0
param,newseq,-1
$
$ The same GRID and CQUAD4 entries as the primary structure
$
GRID,  1,, 3.00000, 0.00000,.00
GRID,  2,, 4.00000, 0.00000,.00
GRID,  3,, 5.00000, 0.00000,.00
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
(see optimization input files)
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
GRID, 39,, 2.50000, 5.19600,.00
GRID, 40,, 3.00000, 5.19600,.00
CQUAD4,    1,101,    1,    2,    6,    5
CQUAD4,    2,101,    2,    3,    7,    6
CQUAD4,    3,101,    3,    4,    8,    7
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
(see optimization input files)
&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;
CQUAD4,   25,101,   30,   31,   38,   37
CQUAD4,   26,101,   31,   32,   39,   38
CQUAD4,   27,101,   32,   33,   40,   39
PSHELL,101,102,.44
MAT1,102,2.+7,,.3
$
$ Additional CBAR elements maintain smoothness of the circular boundary
$
CBAR,31,1,13,14,,1.0
CBAR,32,1,14,15,,1.0
CBAR,33,1,15,16,,1.0
CBAR,34,1,16, 9,,1.0
CBAR,35,1, 9, 5,,1.0
CBAR,36,1,5 , 1,,1.0
PBAR    1       102     20.0    1.0     1.0
$
$ Seven load cases
$&lt;/p&gt;
&lt;p&gt;331 Chapter 6: Shape Optimization
Examples
Main Index
FORCE,100,13,0,1.e5,0.,1.,0.
FORCE,101,14,0,1.e5,0.259,.9659
FORCE,102,15,0,1.e5,0.5,0.866,0.0
FORCE,103,16,0,1.e5,1.,1.,0.
FORCE,104,9,0,1.e5,0.866,0.5,0.0
FORCE,105,5,0,1.e5,0.9659,0.259
FORCE,106,1,0,1.e5,1.,0.,0.
$
$ Boundary conditions satisfy functional and manufacturing requirements
$
SPC1,25,345,1,THRU,40
SPC1,25,6,2,THRU,4
SPC1,25,6,6,THRU,8
SPC1,25,6,10,THRU,12
SPC1,25,6,17,THRU,19
SPC1,25,6,20,THRU,26
SPC1,25,6,27,THRU,33
SPC1,25,6,34,THRU,40
SPC1,25,12,33,THRU,40
SPC1,25,12,4,8,12,19,26
SPC1,25,1,13,20,27
SPC1,25,2,1,2,3
ENDDATA
Design Optimization Input
In the optimization run, the displacement matrix containing the seven displacement vectors from the
Auxiliary Model analysis are retrieved using the DBLOCATE statement. The optimization input file is shown
in Listing 6-2.
Listing 6-2  Input File for DSOUG5
$ DSOUG5.DAT
$ This is the input deck for the shape optimization of a culvert
$ example.  It DBLOCATE&amp;rsquo;s data from a prior auxiliary model run,
$ file DSOUG5A.DAT.  That job must be run first and the results
$ saved to the database before this one is run.
$
$ FMS section for retrieving the auxiliary displacement matrix
$ For Linux/Unix platforms, the MASTER file name must be lower case.
$
ASSIGN F1_AUX=&amp;lsquo;dsoug5a.MASTER&amp;rsquo;
dblocate datablk=(ug/ugd,geom1/geom1d,geom2/geom2d) ,
logical=f1_aux
ID MSC, DSOUG5 $
SOL    200  $
TIME   100
CEND
TITLE=CULVERT EXAMPLE USING EXTERNAL AUXILIARY STRUCTURE       DSOUG5
SUBTITLE=THE PRIMARY STRUCTURE
ANALYSIS = STATICS
SPC=25
LOAD=1
DISP=ALL
STRESS=all
DESSUB = 10
desobj = 5
BEGIN BULK
PARAM,POST,-1
param,cdif,no
PARAM,NEWSEQ,-1
GRID,  1,, 3.00000, 0.00000,.00
GRID,  2,, 4.00000, 0.00000,.00
GRID,  3,, 5.00000, 0.00000,.00
GRID,  4,, 6.00000, 0.00000,.00&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples332
Main Index
GRID,  5,, 2.89464, 0.78478,.00
GRID,  6,, 3.79369, 0.75885,.00
GRID,  7,, 4.69274, 0.73293,.00
GRID,  8,, 5.59178, 0.70700,.00
GRID,  9,, 2.60164, 1.49178,.00
GRID, 10,, 3.46229, 1.46585,.00
GRID, 11,, 4.32293, 1.43993,.00
GRID, 12,, 5.18357, 1.41400,.00
GRID, 13,, 0.00000, 3.00000,.00
GRID, 14,, 0.78478, 2.89464,.00
GRID, 15,, 1.49178, 2.60164,.00
GRID, 16,, 2.12100, 2.12100,.00
GRID, 17,, 3.00578, 2.12100,.00
GRID, 18,, 3.89057, 2.12100,.00
GRID, 19,, 4.77535, 2.12100,.00
GRID, 20,, 0.00000, 3.73200,.00
GRID, 21,, 0.68985, 3.66176,.00
GRID, 22,, 1.32785, 3.46643,.00
GRID, 23,, 1.91400, 3.14600,.00
GRID, 24,, 2.67052, 3.14600,.00
GRID, 25,, 3.42704, 3.14600,.00
GRID, 26,, 4.18357, 3.14600,.00
GRID, 27,, 0.00000, 4.46400,.00
GRID, 28,, 0.59493, 4.42888,.00
GRID, 29,, 1.16393, 4.33122,.00
GRID, 30,, 1.70700, 4.17100,.00
GRID, 31,, 2.33526, 4.17100,.00
GRID, 32,, 2.96352, 4.17100,.00
GRID, 33,, 3.59178, 4.17100,.00
GRID, 34,, 0.00000, 5.19600,.00
GRID, 35,, 0.50000, 5.19600,.00
GRID, 36,, 1.00000, 5.19600,.00
GRID, 37,, 1.50000, 5.19600,.00
GRID, 38,, 2.00000, 5.19600,.00
GRID, 39,, 2.50000, 5.19600,.00
GRID, 40,, 3.00000, 5.19600,.00
CQUAD4,    1,101,    1,    2,    6,    5
CQUAD4,    2,101,    2,    3,    7,    6
CQUAD4,    3,101,    3,    4,    8,    7
CQUAD4,    4,101,    5,    6,   10,    9
CQUAD4,    5,101,    6,    7,   11,   10
CQUAD4,    6,101,    7,    8,   12,   11
CQUAD4,    7,101,    9,   10,   17,   16
CQUAD4,    8,101,   10,   11,   18,   17
CQUAD4,    9,101,   11,   12,   19,   18
CQUAD4,   10,101,   13,   14,   21,   20
CQUAD4,   11,101,   14,   15,   22,   21
CQUAD4,   12,101,   15,   16,   23,   22
CQUAD4,   13,101,   20,   21,   28,   27
CQUAD4,   14,101,   21,   22,   29,   28
CQUAD4,   15,101,   22,   23,   30,   29
CQUAD4,   16,101,   27,   28,   35,   34
CQUAD4,   17,101,   28,   29,   36,   35
CQUAD4,   18,101,   29,   30,   37,   36
CQUAD4,   19,101,   16,   17,   24,   23
CQUAD4,   20,101,   17,   18,   25,   24
CQUAD4,   21,101,   18,   19,   26,   25
CQUAD4,   22,101,   23,   24,   31,   30
CQUAD4,   23,101,   24,   25,   32,   31
CQUAD4,   24,101,   25,   26,   33,   32
CQUAD4,   25,101,   30,   31,   38,   37
CQUAD4,   26,101,   31,   32,   39,   38
CQUAD4,   27,101,   32,   33,   40,   39
FORCE   1       34      0       1250.           -1.
FORCE   1       35      0       2500.           -1.
FORCE   1       36      0       2500.           -1.
FORCE   1       37      0       2500.           -1.
FORCE   1       38      0       2500.           -1.&lt;/p&gt;
&lt;p&gt;333 Chapter 6: Shape Optimization
Examples
Main Index
FORCE   1       39      0       2500.00         -1.
FORCE   1       40      0       1250.           -1.
PSHELL,101,102,.44
MAT1,102,2.+7,,.3,0.731-3
SPC1,25,3456,1,THRU,40
SPC1,25,12,1,THRU,4
SPC1,25,1,13,20,27,34
$
$ design model
$
desvar  1       b1      3.      -1.e6   1.e6    .25
desvar  2       b2      3.      -1.e6   1.e6    .25
desvar  3       b3      3.      -1.e6   1.e6    .25
desvar  4       b4      3.      -1.e6   1.e6    .25
desvar  5       b5      3.      -1.e6   1.e6    .25
desvar  6       b6      3.      -1.e6   1.e6    .25
desvar  7       b7      3.      -1.e6   1.e6    .25
$
$ A DVSHAP entry defines a shape basis vector by associating one design
$ variable to a dblocated displacement vector.
$
dvshap  1       1       66.773
dvshap  2       2       117.35
dvshap  3       3       216.33
dvshap  4       4       443.55
dvshap  5       5       220.89
dvshap  6       6       115.69
dvshap  7       7       65.669
dresp1  5       volume  volume
dresp1  2       von-mis stress  pshell          9               101
DCONSTR 10      2               3.100e4
doptprm DESMAX  25      APRCOD 1
param,nasprt,1
ENDDATA
Since each shape basis vector is defined in terms of a single displacement vector, seven DESVAR and
DVSHAP entries are used to define seven shape basis vectors.  The seven DVSHAP entry scaling factors have
been selected such that the maximum component of each shape basis vector is unity.  For example, DVSHAP
entry number 1 identifies the first shape basis vector in terms of the first DBLOCATE&amp;rsquo;d displacement vector
(1 in field 3). The 1 in field 2 indicates that design variable number 1 is to be the multiplier of this vector.&lt;br&gt;
Furthermore, since the maximum component of this vector is 1.0/66.773 (as determined from a manual
inspection of the data), the scaling factor has been given as 66.773, effectively unit normalizing the vector.
Each design variable acts as a multiplying coefficient of a shape basis vector.  Initial values are somewhat
arbitrary and have been selected as 3.0 here. However, when combined with 20% allowable move limits (0.2
in field 7 of the DESVAR entries), it can be seen that part of the reason for the choice is that these initial
values provide for reasonable move limits on the initial design. Lower and upper limits of -1.0E6 and +1.0E6
indicate that the design variables are to be considered effectively unbounded during optimization.
Figure 6-24 shows a representation of the shapes at the end of design cycles 1, 2, 3 and 5 represented as
deformation relative to the original grid.
To post process the shape change at the end of a chosen design cycle, import the model and results of the
primary model and click Result to obtain the Results form and select the options as shown in Figure 6-23.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples334
Main Index
Figure 6-23  Visualizing Shape Change after each Design Cycle
Viewing these in Patran can provide guidance in the qualitative behavior of the shape changes as a function
of design cycle.&lt;/p&gt;
&lt;p&gt;335 Chapter 6: Shape Optimization
Examples
Main Index
Figure 6-24  Designed Shapes for the Culvert as a Function of Design Cycle
Listing 6-3 shows that the optimization task was completed in five design cycles and that the volume was
decreased from 7.215 to 5.853, a decrease of 18.9% in volume (and weight) while still satisfying the stress
limits.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples336
Main Index
Listing 6-3  Design History Output for DSOUG5
The final shape is plotted in the left half of Figure 6-25 while the final stress contour is plotted in the right half
of the same figure.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
                                                  (HARD CONVERGENCE ACHIEVED)
                                   NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           6
                                   NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     5
                                          OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                      7.214704E+00                                     -1.021607E-01
               1             6.715202E+00             6.695635E+00             2.922292E-03             1.292378E-02
               2             6.156957E+00             6.162878E+00            -9.607040E-04            -1.678805E-02
               3             5.846110E+00             5.843273E+00             4.855196E-04             1.434227E-02
               4             5.858070E+00             5.858179E+00            -1.871390E-05             1.642825E-03
               5             5.852701E+00             5.852792E+00            -1.546714E-05             1.697738E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;1   CULVERT EXAMPLE USING EXTERNAL AUXILIARY STRUCTURE       DSOUG5         OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE 78
THE PRIMARY STRUCTURE                                                                                                       &lt;br&gt;
0                                                                                                                                &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  B1         |   3.0000E+00 :   3.7500E+00 :   4.6875E+00 :   4.5848E+00 :   3.7096E+00 :   2.7822E+00 :
     2 |          2   |  B2         |   3.0000E+00 :   3.7500E+00 :   4.6875E+00 :   4.8835E+00 :   6.1043E+00 :   7.4002E+00 :
     3 |          3   |  B3         |   3.0000E+00 :   3.7480E+00 :   4.6851E+00 :   5.3878E+00 :   4.7546E+00 :   4.2101E+00 :
     4 |          4   |  B4         |   3.0000E+00 :   2.9455E+00 :   2.8155E+00 :   3.0191E+00 :   3.0835E+00 :   3.1283E+00 :
     5 |          5   |  B5         |   3.0000E+00 :   3.7500E+00 :   4.2444E+00 :   3.6319E+00 :   3.6487E+00 :   3.7107E+00 :
     6 |          6   |  B6         |   3.0000E+00 :   3.7496E+00 :   4.6870E+00 :   5.2588E+00 :   5.2267E+00 :   5.1013E+00 :
     7 |          7   |  B7         |   3.0000E+00 :   3.7500E+00 :   4.6875E+00 :   5.8594E+00 :   5.7860E+00 : 5.8802E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        5.&lt;/p&gt;
&lt;p&gt;337 Chapter 6: Shape Optimization
Examples
Main Index
Figure 6-25  Final Culvert Design
Analytic Boundary Shapes
This example illustrates the use of the analytic boundary shapes method in shape optimal design.  In this
method, the entire modeling task can be written using the MSC Nastran input file alone, without the need
for a modeling pre- and postprocessor. Analytic Boundary Shapes  includes a checklist for setting up the design
model using this method.  You may want to refer to that section in connection with this example.
To use this method, you need to define auxiliary models over the boundaries of the structure.  When
constrained and loaded, these boundary models produce static deformations that can be used to describe
shape variations over the boundaries.  The code then interpolates this information to the interior grids,
resulting in basis vectors for shape optimization.  A static analysis is used for this interpolation.
Problem Description
Figure 6-26 shows the initial structure.  It is a simple cantilever, modeled with eighty solid elements, fixed at
the support and tip-loaded at the free end.  The design goal is to minimize the structure&amp;rsquo;s weight subject to
constraints that the element von Mises stresses must be less than 200. We&amp;rsquo;ll investigate minimizing the weight
by tapering the cantilever&amp;rsquo;s shape.  The initial stress distribution is shown in Figure 6-27. The maximum stress
is 183. and there are large regions where the stress is considerably less than the 200. limit.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples338
Main Index
Figure 6-26  Solid Cantilever&lt;/p&gt;
&lt;p&gt;339 Chapter 6: Shape Optimization
Examples
Main Index
Figure 6-27  Solid Cantilever &amp;ndash; Initial Stress Distribution
Since the cantilever is oriented and loaded in an x-z plane, removing material from the upper and lower
surfaces is an effective way to reduce the weight, tapering the cantilever from its root to its tip. Basis vectors
describing this characteristic shape can be easily generated using the analytic boundary shapes method. In this
Boundary Shape Changes Using Auxiliary Boundary Models
Figure 6-28 shows the auxiliary boundary models that can be used to generate these shapes. These disjoint
models, one for the upper surface and one for the lower, are built using QUAD4 elements.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples340
Main Index
Figure 6-28  Auxiliary Boundary Models
In the example, a total of six boundary shapes are computed using the auxiliary model:
Unit enforced displacements are imposed at the root and the tip of the top plate, resulting in a
uniform variation along the top surface.
A unit displacement is enforced at the tip of the top plate while the root is constrained in translation
but allowed to rotate about the y-axis. This produces a shape that is linear along the top surface.
An enforced displacement is applied at the tip while the root is fully constrained to produce a cubic
displacement along the top surface. Note that a quadratic displacement could be produced by
applying a moment at the tip of the plate.
The remaining three shapes are produced by imposing similar conditions on the bottom surface
while holding the top surface fixed.
is an abbreviated input file for the combined analysis and optimization of the primary structure, and the
auxiliary boundary model specification.  The complete file can be found in the Test Problem Library as
DSOUG6.DAT. The primary model definition is for static analysis and is conventional, so its description is
omitted here.  The design model portion of the primary structure will be described shortly.XYZ&lt;/p&gt;
&lt;p&gt;341 Chapter 6: Shape Optimization
Examples
Main Index
Listing 6-4  Selected Portions of Input File DSOUG6
ID MSC, DSOUG6 $
TIME 600      $
SOL  200      $
CEND
TITLE = CANTILEVERED BEAM - HEXA **** DSOUG6 ****       &lt;br&gt;
SUBTITLE = SHAPE OPTIMIZATION WITH ANALYTIC BOUNDARY SHAPES
DESOBJ = 15
DESSUB = 100
SUBCASE 100
ANALYSIS = STATICS
SPC     = 1
LOAD    = 1
DISPLACEMENT(plot) = ALL
stress(plot,corner) = all
AUXCASE
TITLE = AUXILIARY MODEL 1
AUXMODEL = 1
DISP(plot) = all
SUBCASE 200
SPC   = 200
LOAD  = 220
LABEL = LOWER - CONSTANT
SUBCASE 300
SPC   = 300
LOAD  = 330
LABEL = UPPER - CONSTANT
SUBCASE 400
SPC   = 400
LOAD  = 440
LABEL = LOWER - LINEAR
SUBCASE 500
SPC   = 500
LOAD  = 550
LABEL = UPPER -LINEAR
SUBCASE 600
SPC   = 600
LOAD  = 660
LABEL = LOWER - FLEXIBLE
SUBCASE 700
SPC   = 700
LOAD  = 770
LABEL = UPPER - FLEXIBLE
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
PARAM   AUTOSPC YES
PARAM   POST    -1
PARAM   GRDPNT  0
PARAM   MAXRATIO1.0E+8
$
GRID           1       0     0.0     0.0     0.0       0
GRID       2       0     1.0     0.0     0.0       0
GRID           3       0     2.0     0.0     0.0       0
GRID           4       0   3.000     0.0     0.0       0
.           .       .       .       .       .       .
.           .       .       .       .       .       .&lt;br&gt;
.           .       .       .       .       .       .&lt;br&gt;
.           .       .       .       .       .       .&lt;br&gt;
GRID         162       0     7.0   2.000   4.000       0
GRID         163       0     8.0   2.000   4.000       0
GRID         164       0   9.000   2.000   4.000       0
GRID         165       0  10.000   2.000   4.000       0
$GRDSET                                                       456&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples342
Main Index
CHEXA          1       1       1       2      13      12      34      35+EA    1
+EA    1      46      45
CHEXA          2       1       2       3      14      13      35      36+EA    2
+EA    2      47      46
&amp;hellip;&amp;hellip;&amp;hellip;..
&amp;hellip;&amp;hellip;&amp;hellip;..
&amp;hellip;&amp;hellip;&amp;hellip;..
CHEXA         80       1     120     121     132     131     153     154+EA   80
+EA   80     165     164
MAT1*                  1      2.0680E+05                   0.28999999166+MA    1
*MA    1      1.00000000 1.169999996E-05                                +MB    1
*MB    1      1500000.00      1500000.00        68000.00                +MC    1
*MC    1
PSOLID         1       1       0       0       0       0
SPC            1       1  123456     0.0
SPC            1      12  123456     0.0
SPC            1      23  123456     0.0
SPC            1      34  123456     0.0
SPC            1      45  123456     0.0
SPC            1      56  123456     0.0
SPC            1      67  123456     0.0
SPC            1      78  123456     0.0
SPC            1      89  123456     0.0
SPC            1     100  123456     0.0
SPC            1     111  123456     0.0
SPC            1     122  123456     0.0
SPC            1     133  123456     0.0
SPC            1     144  123456     0.0
SPC            1     155  123456     0.0
SPC1    1 456     1       THRU    165
FORCE          1     143       0     0.5     0.0     0.0   -50.0
FORCE          1     154       0     1.0     0.0     0.0   -50.0
FORCE          1     165       0     0.5     0.0     0.0   -50.0
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
PARAM,DESPCH,1
PARAM,NASPRT,1
$
$DESVAR,ID,     LABEL,  XINIT,  XLB,    XUB,    DELXV
DESVAR         1 UPPERC      1.0     .00    7.00     0.1
DESVAR         2 LOWERC      1.0     .00    7.00     0.1
DESVAR         3 UPPERL      1.0     .00    7.00     0.1
DESVAR         4 LOWERL      1.0     .00    7.00     0.1
DESVAR         5 UPPERF      1.0     .00    7.00     0.1
DESVAR         6 LOWERF      1.0     .00    7.00     0.1
$
$DVBSHAP,DVID,  AUXMID, COL1,   SF1,    COL2,   SF2,    &amp;hellip;
DVBSHAP 1       1       1       1.0
DVBSHAP 2       1       2       1.0
DVBSHAP 3       1       3       1.0
DVBSHAP 4       1       4       1.0
DVBSHAP 5       1       5       1.0
DVBSHAP 6       1       6       1.0
$
$DLINK, ID,     DDVID,  CO,     CMULT,  IDV1,   C1,     IDV2,   C2,     +
$+,     IDV3,   C3,     &amp;hellip;
$LINK   1       2               1.0     1       1.0
$
$ BOUNDARY CONDITIONS FOR SHAPE INTERPOLATIONS:
$
$ &amp;mdash;TOP SURFACE:
$BNDGRID,C,     GP1,    GP2,    GP3,    GP4,    GP5,    GP6,    GP7,    +
$+,     GP8,    &amp;hellip;
BNDGRID 123     133     THRU    165&lt;br&gt;
$&lt;/p&gt;
&lt;p&gt;343 Chapter 6: Shape Optimization
Examples
Main Index
$ &amp;mdash;BOTTOM SURFACE:
BNDGRID 123     1       THRU    33
$
$ &amp;mdash;EXTERIOR SURFACES - INTERPOLATION IN X&amp;amp;Z DIRECTION ONLY:
BNDGRID 2       34      35      36      37      38      39      40
41      42      43      44
BNDGRID 2       56      57      58      59      60      61      62
63      64      65      66
BNDGRID 2       67      68      69      70      71      72      73
74      75      76      77
BNDGRID 2       89      90      91      92      93      94      95
96      97      98      99
BNDGRID 2       100     101     102     103     104     105     106
107     108     109     110
BNDGRID 2       122     123     124     125     126     127     128
129     130     131     132
$
$ &amp;mdash;TIP END:
BNDGRID 1       44      55      66      77      88      99      110
121     132   &lt;br&gt;
$
$ &amp;mdash;FIXED END:
BNDGRID 1       34      45      56      67      78      89      100
111     122  &lt;br&gt;
$
$ FORMULATE WEIGHT-BASED SYNTHETIC RESPONSE:  F = 1.E5*W
DRESP1  1       WEIGHT  WEIGHT
DRESP2  15      WE1000  1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  DRESP1  1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DEQATN  1       F(A)=100000.*A
$
$ CONSTRAINTS ON VON MISES STRESSES:
DRESP1  2       STRESS  STRESS  PSOLID                13               1
DRESP1  3       STRESS  STRESS  PSOLID                34               1
DRESP1  4       STRESS  STRESS  PSOLID                55               1
DRESP1  5       STRESS  STRESS  PSOLID                76               1
DRESP1  6       STRESS  STRESS  PSOLID                97               1
DRESP1  7       STRESS  STRESS  PSOLID               118               1
DRESP1  8       STRESS  STRESS  PSOLID               139               1
DRESP1  9       STRESS  STRESS  PSOLID               160               1
DRESP1  10      STRESS  STRESS  PSOLID               181               1
DCONSTR 100     2                 200.
DCONSTR 100     3                 200.
DCONSTR 100     4                 200.
DCONSTR 100     5                 200.
DCONSTR 100     6                 200.
DCONSTR 100     7                 200.
DCONSTR 100     8                 200.
DCONSTR 100     9                 200.
DCONSTR 100     10                200.
$
$ OVERRIDE OF OPTIMIZATION PARAMETERS
DOPTPRM DESMAX  20      P1      1       P2      15 METHOD3
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ AUXILIARY BOUNDARY MODEL(S):
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
BEGIN BULK AUXMODEL=1
PARAM,PRGPST,NO
PARAM   MAXRATIO1.0E+8
PARAM,AUTOSPC,YES
$
$ LOWER SURFACE:
CQUAD4      1000       2       1       2      13      12     0.0
CQUAD4      1001       2       2       3      14      13     0.0
CQUAD4      1002       2       3       4      15      14     0.0
CQUAD4      1003       2       4       5      16      15     0.0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples344
Main Index
CQUAD4      1004       2       5       6      17      16     0.0
CQUAD4      1005       2       6       7      18      17     0.0
CQUAD4      1006       2       7       8      19      18     0.0
CQUAD4      1007       2       8       9      20      19     0.0
CQUAD4      1008       2       9      10      21      20     0.0
CQUAD4      1009       2      10      11      22      21     0.0
CQUAD4      1010       2      12      13      24      23     0.0
CQUAD4      1011       2      13      14      25      24     0.0
CQUAD4      1012       2      14      15      26      25     0.0
CQUAD4      1013       2      15      16      27      26     0.0
CQUAD4      1014       2      16      17      28      27     0.0
CQUAD4      1015       2      17      18      29      28     0.0
CQUAD4      1016       2      18      19      30      29     0.0
CQUAD4      1017       2      19      20      31      30     0.0
CQUAD4      1018       2      20      21      32      31     0.0
CQUAD4      1019       2      21      22      33      32     0.0
$
$ UPPER SURFACE:
CQUAD4       950       2     133     144     145     134     0.0
CQUAD4       951       2     134     145     146     135     0.0
CQUAD4       952       2     135     146     147     136     0.0
CQUAD4       953       2     136     147     148     137     0.0
CQUAD4       954       2     137     148     149     138     0.0
CQUAD4       955       2     138     149     150     139     0.0
CQUAD4       956       2     139     150     151     140     0.0
CQUAD4       957       2     140     151     152     141     0.0
CQUAD4       958       2     141     152     153     142     0.0
CQUAD4       959       2     142     153     154     143     0.0
CQUAD4       960       2     144     155     156     145     0.0
CQUAD4       961       2     145     156     157     146     0.0
CQUAD4       962       2     146     157     158     147     0.0
CQUAD4       963       2     147     158     159     148     0.0
CQUAD4       964       2     148     159     160     149     0.0
CQUAD4       965       2     149     160     161     150     0.0
CQUAD4       966       2     150     161     162     151     0.0
CQUAD4       967       2     151     162     163     152     0.0
CQUAD4       968       2     152     163     164     153     0.0
CQUAD4       969       2     153     164     165     154     0.0
$
MAT1          11  2.1E+5  0.8E+5     0.3    0.00
PSHELL         2      11    0.20      11                             0.0
$ USE ENFORCED DISPLACEMENTS TO CREATE A UNIFORM TRANSLATION ON THE
$ LOWER SURFACE
SPC1    200     123     1       12      23
SPC1    200     123     11      22      33
SPC1    200     123456  34      THRU    165
SPCD 220 1 3 1.0 12 3 1.0
SPCD 220 23 3 1.0
SPCD    220     11      3       1.0     22      3       1.0
SPCD    220     33      3       1.0
$ USE ENFORCED DISPLACEMENTS TO CREATE A UNIFORM TRANSLATION ON THE
$ UPPER SURFACE
SPC1    300     123     133     144     155
SPC1    300     123     143     154     165
SPC1    300     123456  1       THRU    132
SPCD 330 133 3 -1.0 144 3 -1.0
SPCD 330 155 3 -1.0
SPCD    330     143     3       -1.0    154     3       -1.0
SPCD    330     165     3       -1.0
$ USE ENFORCED DISPLACEMENTS TO CREATE A LINEAR TRANSLATION ON THE
$ LOWER SURFACE (FREE UP THE 5 ROTATION AT THE ROOT)
SPC1    400     12346   1       12      23
SPC1    400     12      11      22      33
SPC1    400     123456  34      THRU    165
SPCD    440     11      3       1.0     22      3       1.0
SPCD    440     33      3       1.0
SPC1    400     3       11      22      33
$ USE ENFORCED DISPLACEMENTS TO CREATE A LINEAR TRANSLATION ON THE&lt;/p&gt;
&lt;p&gt;345 Chapter 6: Shape Optimization
Examples
Main Index
$ UPPER SURFACE (FREE UP THE 5 ROTATION AT THE ROOT)
SPC1    500     12346   133     144     155
SPC1    500     12      143     154     165
SPC1    500     123456  1       THRU    132
SPCD    550     143     3       -1.0    154     3       -1.0
SPCD    550     165     3       -1.0
SPC1    500     3       143     154     165
$ USE ENFORCED DISPLACEMENT AT TIP AND RESTRAINED ROOT TO CREATE A
$ FLEXIBLE SHAPE ON THE LOWER SURFACE
SPC1    600     123456  1       12      23
SPC1    600     12      11      22      33
SPC1    600     123456  34      THRU    165
SPCD    660     11      3       1.0     22      3       1.0
SPCD    660     33      3       1.0
SPC1    600     3       11      22      33
$ USE ENFORCED DISPLACEMENT AT TIP AND RESTRAINED ROOT TO CREATE A
$ FLEXIBLE SHAPE ON THE UPPER SURFACT
SPC1    700     123456  133     144     155
SPC1    700     12      143     154     165
SPC1    700     123456  1       THRU    132
SPCD    770     143     3       -1.0    154     3       -1.0
SPCD    770     165     3       -1.0
SPC1    700     3       143     154     165
ENDDATA
Turning first to the auxiliary boundary model specification, we see that the boundary model is defined in a
special Bulk Data Section, appearing after the Bulk Data for the primary model. The statement, BEGIN
BULK AUXMODEL = 1, is used to indicate the beginning of this section. This section essentially defines
three components of the model: its connectivity, its loads, and its boundary conditions. This is just like any
other MSC Nastran model for static analysis.
The auxiliary boundary model connectivity is defined using CQUAD4 elements. The geometry should not
be redefined, since the primary model geometry is used. (If necessary, additional grids can be included. For
example, an additional grid may be necessary for use as a rigid element connection point. This grid should
then appear in this Bulk Data Section.)
The structure is constrained using six SPC sets that create the six boundary shapes identified above and use
enforced motion (SPCD’s) to supply the load. The first set of the SPC/SPCD conditions is explained here to
help understand this concept. First the grids at the root and tip of the lower plate are constrained in the
translational degrees of freedom as part of SPC SET 200. All of the remaining grids in the structure that are
not on the lower plate are constrained using SPC SET 200 in all six degrees of freedom so that these grid
locations will not move. SPCD SET 220 is then used to apply a unit enforced displacement at the root and
the tip in the z-direction. Note that the points on the interior of the bottom plate are not constrained and are
therefore free to move. In this case the whole plate will move as a rigid body in the z-direction, thereby
providing the boundary shape. The Case Control for these models appears after the primary model Case
Control, in a section beginning with the label, AUXCASE. Each subcase selects one of the six SPCD-defined
loads, using a different boundary condition for each. Static loading is always assumed for these auxiliary
model analyses.
The results of these six analyses are sets of six displacement vectors can be used to describe the shape changes
over the Primary Structure&amp;rsquo;s boundary. However, these boundary displacements must still be interpolated
over the structure&amp;rsquo;s interior in order to form shape basis vectors for the entire structure. This is achieved in
the primary model section of the Bulk Data.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples346
Main Index
Shape Changes over the Interior
BNDGRID entries provide the boundary conditions for the shape interpolation steps. The relation between
BNDGRID entries and the auxiliary boundary model solutions is similar to that of SPC&amp;rsquo;s and SPCD&amp;rsquo;s. The
auxiliary boundary model solutions are imposed as enforced displacements on the primary structure. These
displacement degrees of freedom must be present on BNDGRID entries, as with SPC entries. Degrees of
freedom listed on the BNDGRID entries are either enforced or fixed, depending on whether or not an
auxiliary boundary model solution exists for them. All other degrees of freedom are considered “free”, and are
solved for in the interpolation.
The BNDGRID data in this example are seen to be in three sets. The first set is applied to the grids along
the top and bottom surface where it is seen that components 1,2 and 3 are identified, which means that these
displacements will be determined from the auxiliary model. The second set is applied to grids that are on the
side faces of the structure (excluding those at the top and bottom corners). These grids are restrained from
moving in the y-direction so that the sides of the structure do not bulge out or contract. These side grids can
move in the x and z directions. The third set of grids is made up of points at the root and tip of the structure.
Here, the shape is not allowed to move in the x direction, while the x and z directions are left free.
Figure 6-29 shows the six deformations that result on the primary model when the displacement from the
auxiliary model is applied.
Figure 6-29  Shape Basis Vectors Shown as Deformations on the Primary Model
To obtain these shape basis vectors, run the deck with primary and auxiliary model with PARAM, OPTEXIT,
2 and import the model and results into Patran. Then click Results to get the Results form and select the
options as shown in Figure 6-30.&lt;/p&gt;
&lt;p&gt;347 Chapter 6: Shape Optimization
Examples
Main Index
Figure 6-30  Visualizing Shape Basis Vectors from static analysis of Auxiliary models
Modeling Summary
To summarize, auxiliary boundary models are created using additional Bulk Data Sections, labeled using
BEGIN BULK AUXMODEL = n. We can have as many of these sections as necessary to suit our auxiliary
boundary model needs. Boundary conditions and loads are applied with AUXCASE-labeled Case Control
Sections. The resultant boundary deformations are then interpolated to the interior of the primary structure
using BNDGRID entries to define the boundaries. The resulting total displacement vectors can now be
combined in any way to yield basis vectors for shape optimization.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples348
Main Index
Shape Basis Vectors
The shape basis vectors are defined using DVBSHAP Bulk Data entries. DVBSHAP entries 1 through 6
relate design variables 1 through 6, respectively, to the six displacement solutions in a one-to-one fashion.
Thus, each shape basis vector is simply 1.0 times each of the resultant displacement solutions.
Design Task
The design task is to modify the shape of the structure to find the minimum weight structure that satisfies
the limit that the von Mises cannot exceed 200. It is seen that a DRESP2 is used to magnify the weight by
1.0E5. This DRESP2 is then selected as the objective. This step is not necessary in this case, but it does
provide the optimizer with a sizable objective. Nine DRESP1 entries are used to identify von Mises stress
responses at each corner, plus the center, of each CHEXA element. An upper bound limit of 200. is applied
to these responses using DCONSTR entries. From the DOPTPRM entry, it is seen that the Sequential
Quadratic Programming method of optimization is selected using METHOD=3.
Optimization Results
Listing 6-5 shows the summary of design cycle history from the output file. In thirteen design cycles, the
objective has been reduced from 8.0 E+6 to 6.01 E+6. The final shape is shown in Figure 6-33, and the
corresponding stress distribution in Figure 6-34. It is seen that the final design is nearly symmetric and that
much of the stress along the top and bottom surfaces is at the limit of 200.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P19</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_019/</guid>
      <description>
        
        
        &lt;p&gt;349 Chapter 6: Shape Optimization
Examples
Main Index
Listing 6-5  Summary of Design Cycle History for DSOUG6&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                               ***************************************************************
                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
                                                  (HARD CONVERGENCE ACHIEVED)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;(SOFT CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED  22
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS    21
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
       ---------------------------------------------------------------------------------------------------------------
         INITIAL                                      8.000000E+06                                     -1.038308E-02
               1             7.678182E+06             7.678182E+06             2.789778E-15            -1.344510E-02
               2             7.310637E+06             7.310637E+06            -2.802642E-15            -1.377047E-02
               3             6.844931E+06             6.844931E+06             5.850588E-15             5.689703E-04
               4             6.426076E+06             6.426076E+06             7.971076E-15            -5.722828E-03
               5             6.351126E+06             6.351126E+06            -1.613029E-15            -3.289369E-03
               6             6.265261E+06             6.265261E+06             1.932432E-15             3.762481E-03
               7             6.149614E+06             6.149614E+06            -2.877437E-15             1.143854E-02
               8             6.100927E+06             6.100927E+06             2.137137E-15             1.095965E-02
               9             6.063002E+06             6.063002E+06            -4.608225E-16             9.076496E-03
              10             6.073063E+06             6.073063E+06             3.833825E-15             2.381226E-03
              11             6.043624E+06             6.043624E+06             1.849200E-15             3.746321E-03
              12             5.954269E+06             5.954269E+06            -3.910315E-15             6.505747E-03
              13             5.927489E+06             5.927489E+06            -3.613743E-15             1.053788E-02
              14             5.905153E+06             5.905153E+06             2.365703E-15             8.992363E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1    AUXILIARY MODEL 1                                                      OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   500&lt;/p&gt;
&lt;p&gt;0                                                                                                            SUBCASE 100         &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
15             5.892049E+06             5.892049E+06             5.374186E-15             9.294211E-03
16             5.926491E+06             5.926491E+06            -1.728603E-15             3.215698E-03
17             5.837944E+06             5.837944E+06            -3.031055E-15             1.545699E-02
18             5.820096E+06             5.820096E+06             1.088125E-14             1.494319E-02
19             5.816387E+06             5.816387E+06             1.040783E-14             1.564587E-02
20             5.902637E+06             5.902637E+06            -6.311230E-16             1.689551E-04
21             5.902637E+06             5.902637E+06             0.000000E+00             1.689551E-04
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1    AUXILIARY MODEL 1                                                      OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   501&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 100         &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  UPPERC     |   1.0000E+00 :   9.9303E-01 :   9.8875E-01 :   9.9939E-01 :   9.8774E-01 :   9.8306E-01 :
     2 |          2   |  LOWERC     |   1.0000E+00 :   9.9303E-01 :   9.8875E-01 :   9.9939E-01 :   9.8774E-01 :   9.8306E-01 :
     3 |          3   |  UPPERL     |   1.0000E+00 :   1.1000E+00 :   1.2100E+00 :   1.3310E+00 :   1.4641E+00 :   1.6105E+00 :
     4 |          4   |  LOWERL     |   1.0000E+00 :   1.1000E+00 :   1.2100E+00 :   1.3310E+00 :   1.4641E+00 :   1.6105E+00 :
     5 |          5   |  UPPERF     |   1.0000E+00 :   1.1000E+00 :   1.2100E+00 :   1.3310E+00 :   1.4641E+00 :   1.3444E+00 :
     6 |          6   |  LOWERF     |   1.0000E+00 :   1.1000E+00 :   1.2100E+00 :   1.3310E+00 :   1.4641E+00 :   1.3177E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  UPPERC     |   9.7382E-01 :   9.8135E-01 :   9.7780E-01 :   9.7486E-01 :   9.6232E-01 :   9.5276E-01 :
     2 |          2   |  LOWERC     |   9.7382E-01 :   9.8135E-01 :   9.7780E-01 :   9.7486E-01 :   9.6232E-01 :   9.5276E-01 :
     3 |          3   |  UPPERL     |   1.7716E+00 :   1.8998E+00 :   2.0120E+00 :   2.1101E+00 :   2.1992E+00 :   2.2952E+00 :
     4 |          4   |  LOWERL     |   1.7716E+00 :   1.9082E+00 :   2.0203E+00 :   2.1172E+00 :   2.1989E+00 :   2.2882E+00 :
     5 |          5   |  UPPERF     |   1.2100E+00 :   1.0890E+00 :   9.8008E-01 :   8.8207E-01 :   7.9386E-01 :   7.1448E-01 :
     6 |          6   |  LOWERF     |   1.1859E+00 :   1.0673E+00 :   9.6060E-01 :   8.6454E-01 :   7.7808E-01 :   7.0027E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples350
Main Index&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      12      :      13      :      14      :      15      :      16      :      17      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  UPPERC     |   9.7055E-01 :   9.5277E-01 :   9.5690E-01 :   9.4253E-01 :   9.3538E-01 :   8.4184E-01 :
     2 |          2   |  LOWERC     |   9.7055E-01 :   9.5278E-01 :   9.5691E-01 :   9.4254E-01 :   9.3543E-01 :   1.0246E+00 :
     3 |          3   |  UPPERL     |   2.3540E+00 :   2.5894E+00 :   2.4944E+00 :   2.7438E+00 :   2.7736E+00 :   3.0510E+00 :
     4 |          4   |  LOWERL     |   2.3535E+00 :   2.3113E+00 :   2.4979E+00 :   2.3963E+00 :   2.3651E+00 :   2.2609E+00 :
     5 |          5   |  UPPERF     |   6.4303E-01 :   5.7872E-01 :   5.2085E-01 :   4.6877E-01 :   5.1266E-01 :   4.6139E-01 :
     6 |          6   |  LOWERF     |   6.3025E-01 :   5.6722E-01 :   5.1050E-01 :   4.5945E-01 :   4.0945E-01 :   3.5945E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      18      :      19      :      20      :      21      :      22      :      23      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  UPPERC     |   9.2603E-01 :   9.8068E-01 :   9.7494E-01 :   9.7494E-01 :
     2 |          2   |  LOWERC     |   9.3856E-01 :   8.4471E-01 :   8.4045E-01 :   8.4045E-01 :
     3 |          3   |  UPPERL     |   2.9212E+00 :   3.2133E+00 :   3.1708E+00 :   3.1708E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1    AUXILIARY MODEL 1                                                      OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   502&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 100&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;0------------------------------------------------------------------------------------------------------------subcase-100&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#0------------------------------------------------------------------------------------------------------------subcase-100&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      18      :      19      :      20      :      21      :      22      :      23      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     4 |          4   |  LOWERL     |   2.4870E+00 :   2.3517E+00 :   2.3286E+00 :   2.3286E+00 :
     5 |          5   |  UPPERF     |   4.1139E-01 :   3.6139E-01 :   3.6087E-01 :   3.6087E-01 :
     6 |          6   |  LOWERF     |   3.0945E-01 :   2.5968E-01 :   2.5940E-01 :   2.5940E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =       21.&lt;/p&gt;
&lt;p&gt;351 Chapter 6: Shape Optimization
Examples
Main Index
To view the final shape and stress distribution, import the model and results into Patran, click on Results and
select the options as given in the Results form in Figure 6-31 and Figure 6-32.
Figure 6-31  Viewing the final designed shape&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples352
Main Index
Figure 6-32  Visualizing the final stress distribution&lt;/p&gt;
&lt;p&gt;353 Chapter 6: Shape Optimization
Examples
Main Index
Figure 6-33  Solid Cantilever &amp;ndash; Final Shape&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Examples354
Main Index
Figure 6-34  Solid Cantilever &amp;ndash; Final Stress Distribution
Special Punch in the Case of Shape Optimization
As described above, if shape optimization is being performed, a complete set of GRID Bulk Data entries will
be punched every n-th design cycle where n is set using PARAM DESPCH. A special case occurs when the
new mesh has become distorted to the extent that the resulting finite elements cannot be generated.
In this case, an invalid mesh message is produced by the EMG modals and, if it has not already been punched,
the grid data for the last design whose mesh was valid as punched. This allows the user to start up again from
this last valid mesh while perhaps changing some move parameters so that the mesh distortions do not occur .&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 7: Topology, Topometry and Topography Optimization
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
7Topology, Topometry and
Topography Optimization
Topology Optimization     356
Brief Literature Review     356
Bulk Data and Parameters     358
Modeling Guidelines and Limitations     366
Patran User Interface     369
Application Examples     378
Anisotropic Materials in 3D Solid Topology Optimization     439
Topometry Optimization     441
Topography (Bead or Stamp) Optimization     455
Toptomization     464&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topology Optimization356
Main Index
Topology Optimization
Introduction
In contrast to sizing and shape optimization for detail design, the layout and load-path study in the initial,
conceptual design stage uses the Topology Optimization function. T opology Optimization can also be used
to obtain rib patterns and weld distribution patterns. Topology optimization originally emphasized global
design responses (such as structural compliance, eigenvalue, and displacements). Local stress limits on solid
elements can be imposed to add practicality to the design proposal. In any case, it is recommended that
topology optimization be used to generate a conceptual design proposal with emphasis on global design
responses. Then a sizing and/or shape optimization can be performed based on the topology design proposal
with emphasis on local design responses.
Features and Benefits
A number of features have been incorporated in SOL 200 for T opology Optimization as a continual effort to
meet  industry demands. The most common difficulties with T opology Optimization have been checkerboard
effects, large number of small voids, introduction of large number of smaller members especially with mesh
refinement, design proposals difficult to manufacture, and large computational cost with increasing variables.
SOL 200 provides answers to each of these difficulties. The default filtering option helps overcome
checkerboard effects. The minimum and maximum member size constraints offer the user control over the
complexity of the design in terms of quantity of members. A large number of manufacturing constraints are
available to ensure manufacturability, such as symmetry constraints, including cyclic symmetry, extrusion
constraints for uniform thickness along draw direction, and single and two die casting constraints prevent
cavities along die movement. Stress constraints on solid elements impose practical limits on the design.
Additional, features are available in topology optimization which increase the flexibility for the designer.
Among these are setting multiple mass targets to different subdomains and combined size/shape and topology
variables in a single job.
Brief Literature Review
The solution to the T opology Optimization problem is ill-posed in the sense that the design tends to a
configuration with an unbounded number of microscopic holes rather than a small number of macroscopic
holes. This suggests that the design will not generally converge to an optimum as the mesh is refined. There
are two alternative ways for generating a well-posed Topology Optimization problem. In a procedure called
relaxation ( Kohn  and Strang [Ref. 6.]) checkerboard designs are accommodated by extending the design space
to include materials with periodic, perforated microstructures and then, using homogenization theory, to
compute effective material properties. Alternatively, in a procedure called restriction, the design space is
restricted to exclude checkerboard designs by imposing a perimeter constraint ( Ambrosio  and Buttazzo&lt;br&gt;
[Ref.7.]) or mesh independent filtering methods
(Sigmund  [Ref. 8.]).
In the homogenization-based approach, a composite material of a solid material and void is used instead of
pure solid material. An example of a composite material is one composed of unit square cells with rectangular
holes ( Bendsoe and Kikuchi  [Ref. 9.]), such that the variables defining the dimensions of the hole can vary&lt;/p&gt;
&lt;p&gt;357 Chapter 7: Topology, Topometry and Topography Optimization
Brief Literature Review
Main Index
between 0 to 1, thus covering the complete range of relative densities from zero (void) to one (solid). The
microstructure of the composite can vary from one element in the mesh to the next. In this way, the T opology
Optimization problem is converted from a 1-0 material distribution problem to a sizing problem. The theory
of homogenization is used to replace the composite with a kind of equivalent homogeneous material and, in
this way, relate the macroscopic material properties of the composite to its microstructure. The existence of
a solution is guaranteed in this approach, but the solutions are hazy.
The Density Method approach, alternatively called the Power Law approach or Artificial Material approach
(Bendsoe [Ref. 10.]), is based on the idea of convexification where an artificial material is used which is
homogeneous. The density of the artificial material can vary between 0 and 1.  The generalized material
parameters are simply taken to be proportional to the relative density.  A power law is used to relate the density
with the material property.
(7-1)
where 0 and E0 are respectively the fully solid density and Young&amp;rsquo;s modulus. A penalty factor p is introduced
to enforce the design variable to be close to a 0-1 solution when p&amp;gt;1.0. The penalty factor p usually takes
values between 2 and 5. This approach is simple and the optimum design consists of clear solid and void, but
there is no suppression of local optima.
The homogenization approach has the advantage that the design can form rapidly along the lines of the force
transmission path. The advantages of the density method are that it is more general and requires fewer design
variables than the homogenization approach.
Whatever the approach, once the problem is formulated, an optimization method has to be employed to solve
for the optimum design. The common methods are Mathematical Programming methods, Optimality
Criteria (OC) methods or Evolutionary Structural Optimization method.
Mathematical Programming methods are general and efficient with provided gradients. Mathematical
Programming methods are able to deal with many thousands of design variables and numerous constraints.
Optimality Criteria methods are indirect methods of optimization, unlike Mathematical Programming
methods, which directly optimize the objective function. OC methods attempt to satisfy a set of criteria
related to the behavior of the structure. Starting from a feasible point in the design space and using an iterative
scheme based on an OC derived from Kuhn -Tucker  conditions, the design variables are updated at each
iteration so that the design  gradually moves towards the optimum point. Though these methods are efficient
for problems with a large number of design variables and few constraints, inclusion of more constraints slows
down the process, and for general objective functions they do not work at all.
Evolutionary Structural Optimization ( Xie and Steven [Ref. 11.]) is based on the intuitive concept  that if
understressed material is gradually removed from the design domain, an optimal, i.e. least weight, topology
will be reached. This concept leads to a rejection criteria based on local stress level, where low stressed material
is assumed to be underutilized and is removed. However, in a brief note ( Zhou  and Rozvany  [Ref. 12.]) it has
been shown that ESO&amp;rsquo;s rejection criteria may result in a highly non-optimal design.
The Density method is used in MSC Nastran for Topology Optimization. As described earlier, the design
variables are the normalized material density of each designed element. This approach has fewer design 0 =
E E0xp=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data and Parameters358
Main Index
variables compared to the homogenization approach and is more general. The power law penalization on
Young&amp;rsquo;s Modulus E is used to achieve a 0-1 density distribution.
The original optimization problem is solved by solving a series of explicit approximate problems. Density and
Young&amp;rsquo;s Modulus are used as intermediate design variables.
For topology design sensitivity analysis, the adjoint method is available to compute efficiently the gradients
of the topology objective and constraints with respect to topology design variables. The optimization
algorithm used is MSCADS(method=4 SUMT) or IPOPT. All existing analysis types (statics, normal modes,
buckling, frequency response, transient response, complex eigenvalue, static aeroelasticity, and flutter) are
supported. Stress constraints can be applied to solid elements in static analysis.
Bulk Data and Parameters
TOPVAR
Topological Design Variables
To select a topologically designable region, the user needs to specify a group of elements. All elements
referencing a given property ID are made topologically designable with the Bulk Data entry TOPVAR
referencing that property ID. Topology design variables are automatically generated with one design variable
per designable element. The manufacturability constraints are then applied on all elements referencing the
given property ID.&lt;/p&gt;
&lt;p&gt;359 Chapter 7: Topology, Topometry and Topography Optimization
Bulk Data and Parameters
Main Index
Format:
Example:TOPVAR ID LABEL PTYPE XINIT XLB DELXV POWER PID
“SYM” CID MS1 MS2 MS3 CS NCS
“CAST” CID DD DIE ALIGN
“EXT” CID ED ALIGN
“PRINT” CID PD
“TDMIN” TVMIN TVMAX
“STRESS” STLIM
TOPVAR 1 TSHEL PSHELL .3 4 1
TDMIN 5.0 10.0
TOPVAR 2 PSOLID PSOLID 1
STRESS 5.0
1 2 3 4 5 6 7 8 9 10
TOPVAR 2 PS1 PSOLID 0.3 10
SYM 5 XY ZX
CAST 5 X 2
TDMIN 0.6
Describer Meaning
ID Unique topology design region identification number. (Integer &amp;gt; 0)
LABEL User-supplied name for printing purpose. (Character)
PTYPE Property entry name. Used with PID to identify the elements to be designed.
(Character: “PBAR”, “PSHELL”, ‘PSOLID”, etc.)
XINIT Initial value. (Blank or Real, XLB &amp;lt;XINIT &amp;lt;  1.0; Default = Blank). T ypically,
XINIT is defined to match the mass constraint on DRESP1=FRMASS, so the
initial design does not have violated constraints. In this case, the default is set to
the constraint value. If the mass (DRESP1=FRMASS or WEIGHT) is the
objective, the default is 0.9. The default of XINIT is 0.6 for the other cases.
XLB Lower bound to prevent the singularity of the stiffness matrix. (Real; Default =
0.001)
DELXV Fractional change allowed for the design variable during approximate
optimization. See Remark 3. (Real &amp;gt; 0.0; Default = 0.2)
POWER A penalty factor used in the relation between topology design variables and
element Young’s modulus. (Real &amp;gt; 1.0; Default = 3.0). 2.0 &amp;lt; POWER &amp;lt; 5.0 is
recommended.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data and Parameters360
Main Index
PID Property entry identifier. This PID must be unique for PIDs referenced by other
TOPVAR, DVPREL1 and DVPREL2 entries. T opology and sizing variables
cannot share the same properties. (Integer &amp;gt; 0)
“SYM” Indicates that this line defines symmetry constraints.
CID Rectangular coordinate system ID used for specifying manufacturing
constraints. See Remark 4. (Blank or Integer &amp;gt; 0; Default = blank)
MSi Mirror symmetry plane. See Remark 5. &amp;amp; 7. (Character, ‘XY’, ‘YZ’, or ‘ZX’)
CS Cyclic symmetry axis. (character X, Y, Z). See Remark 12.
NCS Number of cyclic symmetric segments in 360 degrees (Integer &amp;gt; 0). See Remark
9.
“CAST” Indicates that this line defines casting constraints (i.e., die draw direction
constraints). See Remarks 6., 7., 8., and 10.
DD Draw Direction. DDi=X, Y, Z or X-, Y-, Z- for a single die option (DIE=1)
where X-, Y-, Z- indicates the opposite direction of X, Y, and Z respectively.&lt;br&gt;
DDi=X, Y, and Z for two die option (DIE =2) (Character)
DIE  Die Options. (Blank or integer 1 or 2; Default = 1)
= 1 (or blank).  A single die will be used and the die slides in the given draw
direction (i.e., material grows from the bottom in the draw direction)
= 2. T wo dies will be used and the dies split apart along the draw direction (i.e.,
material grows from the splitting plane in opposite direction along the axis
specified by the draw direction DDi. The splitting plane is determined by
optimization)
ALIGN Indicates whether the designed property finite element mesh is precisely aligned
with the draw direction or extrusion direction. (Character: “YES” or “NO” or
Blank; Default = blank = “NO”) See Remark 10.
“EXT” Indicates that this line defines extrusion constraints (i.e., enforce constant cross-
section) See Remark 6. and 7.
ED Extrusion direction. (Character, X, Y, or Z)
“PRINT” Indicates that this line defines overhang constraints (maximum overhang angle
is 45 degree). See Remaks 16..
PD PRINT Direction. PD =X, Y, Z or X-, Y-, and Z- where X-, Y-, Z- indicates the
opposite direction of X, Y, and Z respectively (Character).
“TDMIN” Indicates that this line defines a minimum and/or maximum member size., See
remarks 11. and 12.
TVMIN Minimum member size. See Remarks 11. and 12. (Real&amp;gt;=0.0 or blank)
TVMAX Maximum member size. See Remarks 11. and 12. (Real &amp;gt; TVMIN or blank)Describer Meaning&lt;/p&gt;
&lt;p&gt;361 Chapter 7: Topology, Topometry and Topography Optimization
Bulk Data and Parameters
Main Index
Remarks:
1.The topologically designable element properties include PROD, PBAR, PBARL, PBEND, PBEAM,
PBEAML, PSHELL, PSHEAR, PSOLID, and PWELD. Multiple TOPVAR’s are allowed in a single
file. Combined topology, topography (BEADVAR), topometry (TOMVAR) sizing, and shape
optimization is supported in a single file. However, TOPVAR cannot be used with DVMREL1 and
DVMREL2 entries.
2.All designed element properties must refer to a MAT1 entry; therefore, a PCOMP/PCOMPG cannot
be used as designed property in topology optimization. PCOMP/PCOMPG’s can be used as non-
designed properties in a topology optimization job.
3.If DELXV is blank, the default is taken from the specification of DELX parameter on the
DOPTPRM entry.
4.Only CORD1R and CORD2R can be used as a referenced coordinate system to specify topology
manufacturing constraints. Only one reference coordinate system CID is allowed for each TOPVAR
entry.
5.One, two or three different mirror symmetry planes can present (such as MS1=XY, MS2=YZ, and
MS3=ZX).
6.Casting (“CAST”) and Extrusion (“EXT”) manufacturability constraints can be applied to
PTYPE=”PSOLID” only.  Casting constraints cannot be combined with extrusion constraints for the
same TOPVAR entry.
7.Some symmetry constraint types can be combined with casting or extrusion constraints. The
referenced coordinate system CID must be the same for the combined constraints. Some possible
combinations are:
•For “EXT” constraints, possible combinations are (ED=X, MSi=XY, and/or ZX or CS=X),
(ED=Y, MSi=YZ, and/or XY or CS=Y), (ED=Z, MSi=ZX, and/or YZ or CS=Z).
•For “CAST” constraints, possible combinations are (DD=X or X-, MSi=XY and/or ZX or CS=X),
(DD=Y or Y-, MSi=YZ and/or XY or CS=Y), (DD=Z or Z-, MSi=ZX and/or YZ or CS=Z).
8.For two dies option (DIE=2), the splitting plane is optimized. For a single die DIE=1, the parting
plane is the bottom surface of the designed part in the draw direction.
9.The first symmetry segment starts at the X-axis when CS = Z (at Z-axis when CS = Y, and at the Y-
axis when CS = X). One cycle symmetry can be combined with one mirror symmetry constraint as
long as the axis of cyclic symmetry is normal to the plane of mirror symmetry. For example, MSi =
YZ and CS = X, MSi = XZ and CS = Y, and MSi = XY and CS = Z. This feature can also be used for
&amp;lt; 360 degrees but NCS must be given in 360 degrees.
10. It is recommended to use aligned mesh for casting property due to smaller tolerance used.“STRESS” Indicates that this line defines a stress limit (at element center).
STLIM von Mises stress upper bound. See Remark 13.. (Real &amp;gt;0.0) Describer Meaning&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data and Parameters362
Main Index
11. Without a TDMIN continuation line, the minimum member size constraint is taken from the
specification of TDMIN parameter on the DOPTPRM entry. This option is applied on 2 and 3 D
elements only. Minimum member size constraints can be used with “SYM”, “CAST”, and “EXT”
constraints.
12. TVMIN and TVMAX are dimensional quantities. A guideline is that TVMIN be at least three times
a representative element dimension. TVMAX must be greater than TVMIN and it is recommended
that it be twice as big. If TVMAX is blank, no maximum member size is imposed. It is recommended
that TVMIN always be used when TVMAX is specified.
13. “STRESS” limits can only be used for PTYPE=PSOLID and/or SHELL. The Von Mises stress (at
element center) constraints apply to all solid and/or shell elements in both designed and non-designed
regions. All TOPVAR entries must have the same STLIM.
14. The TOPVAR entry cannot be used with thermal loads.
15. For normal mode topology optimization, lower and higher mode may switch during optimization.
This often occurs while maximizing or contraining the first eigenfrequency. This leads to a diverging
solution. A workaround is using the mean value of a few of the lowest eigenfrequency (3~6) by
DRESP2.
16. “PRINT” (overhang constraints) can be used for PTYPE=PSOLID only and are limited to one
TOPVAR entry, cannot be used with other manufacturing constraints.
Bulk Data Entry DRESP1
Response Types FRMASS and COMP
While all DRESP1 response type are available for T opology Optimization, two response types (FRMASS and
COMP) are available exclusively for T opology Optimization. The COMP response permits the specification
of a compliance value as a design response. Compliance is simply the product of the displacement times the
applied load and is typically used as an objective in a T opology Optimization design task to maximize
structural stiffness in a static design problem. The FRMASS response indicates a target mass fraction that
typically is used as a constraint in a T opology Optimization task; (e.g., minimize the compliance of the
structure while limiting the mass to 40% of the mass of the original structure). It is not associated with a
particular analysis type.
The COMP and FRMASS response types are provided to facilitate the specification of the classical T opology
Optimization task of minimizing the compliance of a loaded structure while limiting the mass to some
percentage of the maximum allowable amount. These responses can be applied generally so that the COMP
response could lead to a constraint and the minimization of FRMASS could be an objective. The response
attribute table for these two response types is given below:&lt;/p&gt;
&lt;p&gt;363 Chapter 7: Topology, Topometry and Topography Optimization
Bulk Data and Parameters
Main Index
Table 7-1  Responses for Topology Optimization
Remarks:
1.RTYPE=COMP (compliance of structures = PTu) and FRMASS (mass fraction of designed elements)
entries are used for Topology Optimization or combined topology, sizing/shape optimization.
2.RTYPE=FRMASS is the mass divided by the mass calculated if all topology design variables are 1.0.
FRMASS is calculated for topologically designed elements only. FRMASS = 1.0 if all topology design
variables are 1.0. ATTi=Blank is for total mass fraction. ATTi=PID is the mass fraction for
topological designed property PID.
Stress Constraints
Use of the DRESP1 to impose stress constraints in topology optimization is not a viable option in the normal
case because the sensitivity calculation is prohibitive with the large number of design variables. Stress
constraints can be imposed on the TOPVAR entry discussed above using the STLIM parameter. Note that
this constraint is only used with PSOLID elements and it applies to designed and undesigned elements. If
there are multiple TOPVAR entries, the STLIM value must be the same on each.
Design Optimization Parameters (DOPTPRM)
TCHECK and TDMIN
Two design optimization parameters TCHECK and TDMIN are available on the  DOPTPRM Bulk Data
entry for overriding default values of parameters used exclusively in Topology Optimization. Parameter
TCHECK is used to turn on a filtering parameter that is used to prevent a checkerboard pattern from being
produced. The default value of 1 turns on the filtering and is recommended. TCHECK=0 turns off filtering.
The other parameter, TDMIN, is used to achieve mesh independent solutions and control the size of
members in the topology optimized design; that is, to prevent achieving a final design that is characterized
by thin disjoint fibers that are impractical from a manufacturing standpoint. Design variable elements that
are within a distance of TDMIN from an element with a design variable close to 1.0 are filtered to ensure
they are not small. Note that the value of TDMIN is problem-size dependent but not mesh-size dependent.
The default for TDMIN is 0.0 (no filtering).The descriptions of these parameters are given in Table 7-2. Response Response Attributes
Type
(RTYPE)ATTA ATTB ATT1
COMP
(Remark 1)BLANK BLANK
FRMASS
(Remark 1,2)BLANK BLANK BLANK or
Property ID&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data and Parameters364
Main Index
Table 7-2  DOPTPRM Design Optimization Parameters
Note that TDMIN values on the TOPVAR entry overwrite the DOPTPRM value.
In addition, several existing DOPTPRM parameters have different default values for T opology Optimization
as opposed to Sizing/Shape optimization, as shown in Table 7-3. For combined sizing/shape and T opology
Optimization problems, the default values for T opology Optimization are imposed.
Table 7-3  Default Values for DOPTPRM Design Optimization Parameters
As a final comment on the DOPTPRM parameters described in Chapter 4: Optimization Parameters , the
definition of the P2 parameter that controls the amount of print that occurs at design cycles specified by P1
has a different meaning in a T opology Optimization context. For sizing and shape optimization, design
variables are printed for value of P2 = 1 (or if 1 is included in the sum of the options, that is, 3, 5, 7, 9, 11,
13 and 15). Since a Topology Optimization task can easily result in thousands of design variables, this would
not be a viable option for most problems. Instead, design variable prints are turned off unless a P2 value
greater than 8 (that is 9, 11, 13 or 15) is specified. The “Comparison b etween Input Property Variables from
Analysis and Design Models” p rint never occurs in Topology Optimization.
Output for Topology Optimization
Output for the two responses, compliance and fractional mass, and topology design variables are shown in
Figure 7-1. Also in this figure, the design variable history shows the external element ID associated with the
internal design variable IDName Description, type, and Default value
TCHEC
KT opology Filtering options (integer 1)
-1 Automatic selection of filter or density constraint (Default)
1Filtering algorithm is on for T opology Optimization
2Density Constraint method is On
0No filtering algorithm
TDMIN T opology minimum member diameter (real &amp;gt;=0.0) in the basic coordinate system. Default
=0.0 (i.e., no minimum member size control). It is recommended at least three times a
representative element dimension. This option is applied on 2 and 3 D elements only.
Parameter Sizing/Shape Topology
DESMAX 5 30or 60 with minimum member size
DELX 0.5 0.2
DXMIN 0.05 1.0E-5
CONV1 .001 .005
(when a clear topology solution is
obtained)&lt;/p&gt;
&lt;p&gt;365 Chapter 7: Topology, Topometry and Topography Optimization
Bulk Data and Parameters
Main Index
Figure 7-1  Selected .f06 output for Topology Optimization
Special Punch Considerations for Topology Optimization
MSC Nastran topology optimization generates an element density distribution file jobname.des for all design
cycles as a Patran element result format that is supported in the Patran postprocessor as well as other
postprocessors.
For sizing and shape optimization, the DESPCH parameter specifies when the optimized Bulk Data entries
are written to the PUNCH file. In T opology Optimization, DESPCH is used to specify when the topology
optimized element density values are written to the topology element density history file jobname.des. This
file can be directly read into Patran to display and animate the T opology Optimization results. Figure 7-1
shows the format of an element density history file.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Modeling Guidelines and Limitations366
Main Index
DESPCH &amp;lt; 0  Never
DESPCH = 0  at the last design cycle only (default)
DESPCH &amp;gt; 0  at every design cycle that is a multiple of DESPCH and the last design cycle. For example,
if n=2 and the maximum number of design cycles is 5 (DESMAX=5 on the DOPTPRM entry), then,
topology element density at design cycle 2, 4, and 5 are written in the punch file.
DESPCH1 &amp;gt;= 0  (default=0), write all (topology designed and non-designed) element density values to the
topology element density history file jobname.des.
DESPCH1 &amp;lt; 0 , write topological designed element density values to the topology element density history
file jobname.des .
Figure 7-2  Element Density History File jobname.des
Modeling Guidelines and Limitations
The quality of the results of a T opology Optimization task is a strong function of how the problem is posed
in MSC Nastran. This section contains a number of tips that have been developed based on extensive testing
of the capabilities.
Modeling Tips
1.A DRESP1=COMP is introduced to define the compliance of structures for Topology Optimization.
The response is usually used as an objective to maximize structural stiffness in static analysis problems.
2.A DRESP1=FRMASS is introduced to define the mass fraction of topology designed elements. For
Topology Optimization tasks, the DRESP1=FRMASS response is recommended to define a mass
reduction target in a design constraint.&lt;/p&gt;
&lt;p&gt;367 Chapter 7: Topology, Topometry and Topography Optimization
Modeling Guidelines and Limitations
Main Index
3.While FRMASS is calculated for topological designed properties only, RTYPE=WEIGHT computes
total weight including all designed and non-designed parts. For combined topology and sizing/shape
optimization problems, it is recommended that RTYPE=FRMASS be used for topological designed
property mass reduction constraints and RTYPE=WEIGHT be used for the total mass reduction
constraints.
4.The POWER field on the TOPVAR entry has a large influence on the solution of Topology
Optimization problems. A lower POWER (less than 2.0) often produces a solution that contains large
“grey” areas (area with intermediate densities 0.3 - 0.7). A higher value (greater than 5.0) produces
more distinct black and white (solid and void) designs. However, near singularities often occur when
a high POWER is selected.
5.A parameter TCHECK on DOPTPRM is used to turn on/off the checkerboard free algorithm. This
default normally results in a better design for general finite element mesh. However, if higher order
elements and/or a coarser mesh are used, turning off the filtering algorithm may produce a better
result. For minimum member size control, the density constraint method is very efficient, especially
when the mesh is fine and the predefined minimum member size is relatively large. This method also
helps to get a checkerboard free solution. It is activated by TCHECK=2.
6.The parameter TDMIN on DOPTPRM is mainly used to control the degree of simplicity in terms
of manufacturing considerations. It is common to see some members with smaller size than TDMIN
at the final design since the small members have contributions to the objective. Minimum member
size is more like quality control than quantity control. It is in general recommended that TDMIN
should not be less than the length of 3 elements. Note that the TOPVAR entry has a “TDMIN” line
that sets TV, which provides a minimum member size for each TOPVAR.
7.It is recommended to use default value of XINIT.
8.Maximum design cycle DESMAX=30 (as default) is often required to produce a reasonable result.
More design cycles may be required to achieve a clear 0/1 material distribution, particularly when
manufacturability constraints are used.
9.There are many solutions to a Topology Optimization problem, one global and many local optima.
It is not unusual to see different solutions to the same problem with the same discretization by using
different optimization solvers or the same optimization solver with different starting values of design
variables.
10. To obtain a rib pattern by Topology Optimization, a core non-designable shell element thickness
must be defined together with two designable element thicknesses above and below the core thickness.
That is, add two designable elements for each regular element.
11. If some elements are disconnected on the final topology design proposal this may be because, the mass
target may be too small to fill the design space.
12. It is recommended that a baseline Topology Optimization job (without any manufacturability
constraints) be carried out before a Topology Optimization solution with manufacturability
constraints is done. Benefits are: (a) a Topology Optimization without restriction may result in a
better design; (b) The design proposal from the no restriction run may give some hints for imposing
manufacturability constraints.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Modeling Guidelines and Limitations368
Main Index
13. Topology Optimization with manufacturability constraints often needs more material to fill the
design space. Therefore, the design with manufacturability constraints usually requires a relatively
bigger mass target (less material savings) than the one without manufacturability constraints.
14. It is recommended to use aligned mesh for casting property due to smaller tolerance used.
15. If multiple mass targets (multiple DRESP1=FRMASS) are used, it is recommended that each
TOPVAR&amp;rsquo;s initial value XINIT matchs its corresponding mass target.
16. The cyclical symmetry constraints can also be used for rotational parts &amp;lt;360 degree. In addition, the
starting surface must be XY plane for cyclical symmetry axis CS=X, YZ plane for CS=Y; ZX plane for
CS=Z respectively. The number of cyclical symmetric segments (NCS) must also be defined in 360
degrees for this case. For example, if a 90 degree rotational part has 3 segments, NCS must be set to
NCS=12 in 360 degree.
17. Patran can smooth, remesh, and generate IGES files for 2D topology designs and smooth 3D
topology designs.
18. Patran can support Topology Optimization with manufacturability constraints.
19. It is recommended that the IPOPT optimizer option be utilized for Topology Optimization and for
sizing and shape optimization problems with thousands of design variables. This is the default.
20. Numerical problems often occur when solving a Topology Optimization task. The nature of the
problem depends on element type, number of elements, optimization algorithm and so on. One
frequent numerical problem is the so-called checkerboard effect.  Checkerboard-like material
distribution pattern is observed in the Topology Optimization of continuum, especially when first
order finite elements, such as CQUAD4, are employed to analyze structural responses. It has been
shown that the Checkerboard-like phenomenon is caused by the finite element formulation. The
problem occurs because the checkerboard has an artificially high stiffness compared with a structure
with uniform material distribution. The easiest way to decrease the checkerboarding effect is to use
higher order elements (such as CQUAD8). This however increases the CPU-time considerably.
Another closely related phenomenon is mesh-dependent solutions. It is seen that a more detailed
structure is found by increasing the number of elements. The rationale of making a finer finite
element mesh is to get a better finite element solution. However, this finer meshing tends to have an
increasing number of members with decreasing size. This more detailed topology solution creates a
problem from a manufacturing point of view. In SOL 200, filtering algorithms are used to promote
a checkerboard-free and mesh independent topology optimized solution and TDMIN is used to limit
the increasing number of members.
21. The CASI solver is strongly recommended for solid elements topology problems for efficiency.
22. In many applications, loads or boundary conditions are related to assembly. It cannot be changed. In
this case, it is the best for users to model those elements associated with loads or boundary conditions
with different property IDs. Thus, those PIDS can be excluded from design space (TOPVAR entry
NOT references those PIDS).
23. The stress based topology optimization consumes substantially more CPU time than the classical
compliance minimization (subject to a fractional mass constraint) task. It is recommended that a
classic compliance minimization topology optimization be run first due to faster performance.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P2</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_002/</guid>
      <description>
        
        
        &lt;p&gt;9 Preface
Training and Internet Resources
Main Index
The above link will point you to schedule and description of seminars. Following courses are recommended
for beginning MSC Nastran users.
NAS120 - Linear Static Analysis using MSC Nastran and Patran
This seminar introduces basic finite element analysis techniques for linear static, normal modes, and buckling
analysis of structures using MSC Nastran and Patran. MSC Nastran data structure, the element library,
modeling practices, model validation, and guidelines for efficient solutions are discussed and illustrated with
examples and workshops. Patran will be an integral part of the examples and workshops and will be used to
generate and verify illustrative MSC Nastran models, manage analysis submission requests, and visualize
results. This seminar provides the foundation required for intermediate and advanced MSC Nastran
applications.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Training and Internet Resources10
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 1: Getting Started
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
1 Getting Started
Introduction     12
Numerical Optimization Basics     17
Structural Optimization     28
Summary     32&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction12
Main Index
Introduction
This chapter introduces some of the basic concepts of numerical optimization with an emphasis on the
methods used in MSC Nastran.
Some of the questions answered in this chapter include:
What is design optimization, and how does it differ from analysis?
What is the relationship between design sensitivity and optimization?
How is an optimization problem formulated?
How does an optimizer search for an optimum?
How does an optimizer communicate with the structural analysis?
What is Design Optimization?
Optimization is a broad and active area technology and we need to first focus the discussion on the particular
application that is the subject of this User’s Guide. We restrict ourselves to the optimization of structures that
can be analyzed with MSC Nastran. In this context, design optimization refers to the search for a structural
design that is, in some sense, optimal, or “the best,” while varying structural parameters. While performing
this search, the design is guided to satisfy operating limits that are imposed on the response of the structure
and by further limits on the values the structural parameters can assume. This, in a nutshell, represents the
design optimization task in MSC Nastran and leads directly to concepts like “objective,” “design variables,”
“design constraints,” “side constraints” and “search”, which are covered in this chapter.
What is Design Sensitivity?
The design optimization capability in MSC Nastran benefits significantly from being based on a design
sensitivity analysis. Design sensitivity analysis computes the rates of change of structural responses with
respect to changes in design parameters. These design parameters, or design variables, can be such things as
shell thicknesses, beam dimensions, hole radii, material variables and so on. In civil engineering, we may be
interested in how changes in the deflection of a bridge span can be affected by changes in the dimensions of
the bridge sections. In automotive chassis design, we may want to investigate changes in cabin resonant
frequencies given changes in panel thicknesses. These rates of change (what we call “partial derivatives” in the
language of calculus) are called design sensitivity coefficients.
These sensitivities are computed explicitly in MSC Nastran and are extremely valuable in their own right as
they can be used to predict how a design change will affect an important response. When they are applied
with an optimizer, they greatly improve the efficiency of the search since the algorithm now not only knows
the current state of the design but also has an idea of which way to look for an improved design. MSC,
therefore, takes considerable care that the predicted sensitivities are as accurate as possible and applies special
techniques to insure that they predict accurate response values as the design variables change.
The basic design optimization capability in MSC Nastran depends on having design sensitivity information
available and optimization cannot be performed without it. Design optimization in MSC Nastran is limited
to those analyses and design parameters that have been explicitly designated in the design of the capability
and that can be accessed by you in the performance of an optimization task. As you will learn from studying
this guide, the range of design tasks that MSC Nastran can address is very broad and expands as new versions&lt;/p&gt;
&lt;p&gt;13 Chapter 1: Getting Started
Introduction
Main Index
of the code are released. There will always remain, however, situations that cannot be addressed with MSC
Nastran and it is necessary to study this guide to determine if your design task is one that can be treated by
the capability.
As a final note to motivate the value of sensitivity analysis, it is useful to consider what would occur if you
did not have this information available. If the design task was to find the value of a single design variable that
provided the best performance, one could conceive that performing analyses with several values of this
parameter would provide information that could be displayed as a function of the variable and the optimum
design could be visually determined. Now consider the case with two design variables. The number of
analyses required is expanded and the plot now becomes three dimensional, but it still should be possible to
find an optimum in this fashion. But now consider 10 variables and then one hundred and then one
thousand. At some point, the most powerful computer would be overwhelmed by the number of analyses
required and in making sense of the analysis results. With sensitivity analyses, it is quite reasonable to pose
design tasks in MSC Nastran with a set of design variables that is far beyond that possible without the
sensitivity information. Even for a small number of design variables, the presence of design sensitivities makes
finding solutions much more efficient than what would be possible without these sensitivities.
Why Use Design Sensitivity and Optimization?
Why use design sensitivity and optimization? Perhaps you have been requested to investigate product
improvement using optimization, or perhaps you are aware that these tools can be used to create better
engineered designs. Design sensitivity and optimization are used when we seek to modify a design whose level
of structural complexity exceeds our ability to make appropriate design changes. What is surprising is that an
extremely simple design task may easily surpass our decision-making abilities. Experienced designers, those
with perhaps decades of experience, are sometimes fantastically adept at poring through mounds of data and
coming up with improved designs. Most of us, however, cannot draw upon such intuition and experience. A
basic goal of design optimization is to automate the design process by using a rational, mathematical approach
to yield improved designs. Ways in which this might be put to use include:
1.Producing more efficient designs having maximum margins of safety.
2.Performing trade-off or feasibility studies.
3.Assisting in design sensitivity studies.
4.Correlating test data and analysis results (model matching).
In addition to providing a complete description of the optimization tools in MSC Nastran, part of the aim
of this user’s guide is to suggest various ways in which design sensitivity and optimization might be used.
Consider the following examples:
Example A
A complex spacecraft is in a conceptual design stage. The total weight of the spacecraft cannot exceed 3,000
pounds. The nonstructural equipment including the payload is 2,000 pounds. Static loads are prescribed
based on the maximum acceleration at launch. Also, the guidance systems require that the fundamental elastic
frequency must be above 12 Hz. It is extremely important to reduce the structural weight since it costs several
thousand dollars to place one pound of mass in a low earth orbit. There are three types of proposed designs:
truss, frame, and stiffened shell configurations. Currently all of the designs fail to satisfy at least one design&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction14
Main Index
requirement and are expected to be overweight. We are to determine which configuration(s) promises the best
performance and warrants detailed design study. Also, the payload manager needs to know how much weight
could be saved if the frequency requirement were to be relaxed from 12 Hz to 10 Hz. The spacecraft’s
structure contains about 150 structural parameters, which we may want to vary simultaneously.
Example B
One part of a vehicle’s frame structure was found to be overstressed. Unfortunately, it is too expensive to
redesign that particular frame component at this stage in the engineering cycle. However, other structural
components nearby can be modified without severe cost increases. There are nearly 100 structural design
parameters that can be manipulated. The design goal is to reduce the magnitude of the stresses by reducing
the internal load to the overstressed member.
Example C
A frame structure, which supports a set of sensitive instruments, must withstand severe in-service dynamic
loads. Modal test results are available from comprehensive tests performed on the prototype structure. We
need to create a finite element model for dynamic analysis that is much less detailed than the original model
created for stress analysis since the costs of dynamic analysis using a complex model would be prohibitive. We
must ensure, however, that the first ten modes obtained from our simplified model are in close agreement
with those obtained from the test results. The goal is to determine suitable properties for the lumped
quantities in our simplified dynamic model so that the first ten eigenvalues correlate well with the prototype.
Example D&lt;br&gt;
Your company supplies automotive components and one of your products is a connecting rod that is
produced in the millions for a number of vehicles. The design of the component is well understood and has
been refined for years based on detailed design loads. It is now decided to see if shape optimization techniques
can be applied to produce a design that satisfies the design requirements at a final weight that is less than the
current weight. Even a 1-2% improvement will translate into significant cost savings when it is applied across
the large production run.
How Does Design Optimization Differ from Analysis?
Although design optimization and analysis can be viewed as complementary, there are some important
conceptual differences between the two which must be clear in order to make effective use of both.
When we perform an “analysis,” we create a mathematical idealization of some physical system in order to
obtain estimates of certain response quantities. The class of responses that we are interested in defines the
applicable analysis discipline to be used, while the accuracy of these responses is dependent on the quality of
the analysis model and our general knowledge of the true system. Our choice of finite element types,
representation of boundary conditions, loads, and definition of the finite element mesh all play critical roles
in determining how well our model is able to predict the responses of the physical structure. The goal is to
obtain an accurate prediction of the responses which can be expected from the real structure. For example,
consider the plate subjected to uniform tensile loads in Figure 1-1. The corresponding analysis model in
Figure 1-2 is a discretized finite element representation of idealized geometry, loads, and boundary conditions.&lt;/p&gt;
&lt;p&gt;15 Chapter 1: Getting Started
Introduction
Main Index
Figure 1-1  Flat Plate with Hole
Figure 1-2  Analysis Versus Design ModelsFinite element discretization of:
Structure (Mesh).
Loads.
Boundary Conditions
(1/4 Plate Representation).Find R such that:
Weight is minimized.
Stresses do not exceed allowables.
(R is the design variable, weight is the design
objective, and stresses are the design constraints.)y
x R
lTxTx
RAnalysis Model Design Model&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction16
Main Index
In contrast, a design model is an idealized statement of changes which might be made to the structure to
improve its performance or response. In order to accomplish this, we need to define what we mean by an
improved design. It may be the minimum weight or maximum stiffness, but whatever our choice is, this
constitutes a statement of the design objective. The design may be varied such that certain bounds on
responses are not exceeded. Expressions of maximum allowable stresses or minimum permissible frequencies
are termed design constraints. And, in our description of how the design might be changed, we use design
variables to express what we mean by a suitable variation. Limits on the range of the design variables are called
side constraints. By convention, the mathematical region over which our design variables, objective, and
constraints are defined is called the design space. Figure 1-2 also shows the design model corresponding to a
redesign of the hole radius for weight minimization. It gives allowable structural variations (hole radius)
subject to limits on structural responses (stress).
Probably the biggest difference between analysis and design is that analysis leads to “the solution” (within the
limits of the analysis model), while design optimization leads to “a solution.” In other words, in analysis, we
are usually guaranteed a unique solution, while more than one solution may be possible in design
optimization. Mathematically, we can say that our design space may contain local minima. This is analogous
to the situation in which we may want to find the low point in a valley, yet various low points are separated
by hills that we cannot see over. Simply finding a low point itself represents an acceptable solution, but there
may be more than one such solution. In some instances we may be able to restate the problem and, in effect,
shift the locations and contours of the hills to allow more efficient convergence. However, the fact remains
that our goal has been stated in the context of design improvement and not in determining a global optimum
or a unique solution (as in the case of analysis).
One thing the analysis and design models share is that the results are dependent upon the skill and judgment
used in their construction. A poorly-meshed finite element model may lead to inaccurate and misleading
results. Similarly, an ill-posed design optimization task may produce unexpected or useless results. Since the
redesign process is based on analysis results, the results of design optimization are strongly dependent on the
integrity of the analysis model. In fact, the optimizer can be expected to exploit inaccuracies in the analysis
model in a way that helps it perform the design task.
Optimizer Limitations
A numerical optimizer seeks to find an improved design by trying to minimize or maximize a specified
objective. Throughout this process, it must adhere to the bounds on responses and design variables given in
the design model. It does not have the intelligence to modify the objective or relax any of these limits. For
example, suppose you asked a friend to find you a nice apartment on his street. Your friend, the optimizer,
may have a somewhat different definition of “nice” than you do. His income might be higher than yours, so
that the optimal design he proposes may be infeasible in terms of your bank account. Even though he is
searching just on his street, the next block may turn out to have an apartment that you consider a better value.
The optimizer is not able to go beyond your specifications to search out other possible configurations.
The optimization problem statement requires an explicit description of the design objective, as well as bounds
which define the region in which it may search. You may ask for a design satisfying a minimum flexibility
requirement such as wing tip deflection, but without a weight budget, the design which the optimizer
proposes may turn out to be unrealistic. You also might have asked for a minimum weight design but allowed
for negative physical dimensions. The optimizer may have no trouble minimizing the weight by adding
negative mass, but this design may produce a challenge on the factory floor!&lt;/p&gt;
&lt;p&gt;17 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
What Do I Need to Use Design Optimization Effectively?
Since design sensitivity and optimization depends on the results of analyses, a reasonable level of skill in
preparing MSC Nastran analysis models is required. Design optimization in MSC Nastran can combine
analysis results from a number of disciplines, including statics, normal modes, buckling, direct and modal
frequency, modal transient, acoustic, direct and modal complex eigenanalysis, static aeroelastic response and
flutter analysis. In addition, design models can also employ superelements. Proficiency in any or all of these
disciplines is useful.
The topics covered in this user’s guide are intended to describe design sensitivity and optimization in MSC
Nastran. No prior knowledge of structural optimization is required. However, it must be recognized that the
discussion of structural optimization contained in this guide is restricted to the features appearing in design
sensitivity and optimization in MSC Nastran. This guide attempts to describe all aspects completely so that
someone new to the field of design optimization, as well as those with more experience, has enough
information available to use it wisely and effectively. More information may, at times, be desired on a topic
than is available is this guide. T wo text books that emphasize the concepts of this guide are in References 1.
and 2..
Probably the most critical requirement in the effective use of design optimization is common sense. Any
sufficiently general and powerful tool possesses the capacity for misuse. This is especially true of numerical
optimizers. The old adage that engineering is more art than science is probably truer of design optimization
than of many other disciplines. As you gain experience with numerical optimization, you will probably
discover a few pitfalls that are particular to your fields of application, and in the process you may discover
some especially useful and efficient “tricks” for clearly stating your optimization tasks. In any field of
application, there is no substitute for a well posed problem. If your design goals are clear, the constraints are
meaningful and well-conditioned, and the design variables are chosen carefully to produce useful designs,
then success is more certain. The description of methods for accomplishing these goals forms the majority of
the material of this guide.
Numerical Optimization Basics
This section introduces some of the basics of numerical optimization in an intuitive manner, stressing overall
concepts over technical details. This section may be a useful introduction to numerical optimization for those
entirely new to the subject. Once the basics of numerical optimization have been covered, Structural
Optimization  introduces the extension of these methods to the field of structural design.
How Much Do I Need to Know About Optimizers?
Some knowledge of the basic procedures involved in numerical optimizers will aid in understanding why an
optimizer does what it does, in interpreting the final results of an optimization run, and in understanding
what may have happened if the results are unexpected. As an analogy, it is not necessary to know all of the
details of sparse matrix decomposition in order to perform a linear static finite element analysis, but if
singularities are present in your model and the decomposition procedure fails, the results are far less
mystifying, and a modeling solution to the problem may be much more apparent if you know something of
the basics of the solution procedure. Most of the parameters that control the optimizer in MSC Nastran can
be changed to improve performance for various classes of problems. Understanding the significance of these
choices allows you to take full advantage of the tools at your disposal.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Numerical Optimization Basics18
Main Index
Design optimization in structural redesign is actually an application of operations research (a branch of
applied mathematics) to problems in engineering design. Generally, these are classes of problems in which
the optimum allocation of scarce resources is desired. Operations research is frequently used to solve
scheduling problems such as the routing of airplanes among various airport facilities. The allocation of 100
airplanes among 68 airports may not seem to have much to do with engineering design, but the optimization
methods employed are similar and can be extended to structural problems. An efficient engineering solution
to a design problem involves the optimum allocation of scarce resources. For example, tensile stresses cannot
be allowed to assume unlimited values and must be restricted within reasonable limits (the distribution of
strain energy density must be made in an optimal manner). Likewise, reducing structural mass leads to a
savings of material and possibly maintenance, fuel, or other indirect costs.
An Illustration
A useful way of introducing basic optimization concepts is to visualize a “design task” of finding the lowest
spot in the immediately surrounding terrain. Suppose we are standing on the side of a hill and would like to
find the point of lowest elevation; this is our “objective”. We will quantify the location of any point in terms
of coordinates and these are our “design variables.” Suppose, also, that some fences exist which force us to
restrict our search to within the region enclosed by these fences. These fences or “constraints” act as bounds
in our “design space,” which is the region that defines all of our possible positions on the hill. Only one out
of all points on the hill can be considered an optimum, though. For simplicity, we are neglecting the presence
of local minima.
Finding the lowest point on the hill while staying inside the fences is no real problem. All we really need to
do is have a good look about and note, from our perspective, which point on the hill appears to be the lowest.
We have scanned the hill, analyzed thousands of possible candidates at a glance, and made an immediate
decision. If we were blindfolded, though, our decision-making process would not be as simple, and that is
exactly the task a numerical optimizer is faced with.
In a computational sense, the elevation of a single point on the hill, or the numerical value of our objective
function, must be determined by an analysis which may take considerable effort. Evaluating hundreds or
thousands of candidate designs may be prohibitive. We need a systematic method of searching for an optimal
design. There are numerous techniques available to solve such a problem, all of which are classified as
numerical optimization algorithms.
Generally, numerical optimization methods seek to determine a direction of travel or “search direction” that
moves us down the hill as quickly as possible, yet allows us to find an optimum that lies within the fences. A
sequence of search directions is usually employed during the overall search procedure.
In our hill example, we could easily find a search direction, even though blindfolded, by taking small steps
from side to side and then forward and back to test for elevation changes. This will allow us to determine
which direction will move us down the hill the fastest and, based on this estimate, we can then proceed until
we hit a fence or the hill starts to climb up again. What we have done is to find the local value of the “gradient”
of our objective function and then used this information to establish a probable direction in which to search
for a minimum. Numerical optimization algorithms that rely on gradient information are termed “gradient-
based.” Once we have done the best we can possibly do in this direction, we find another search direction,
and again proceed as before. We continue to repeat this procedure until we cannot reduce the objective
function any further; that is, we have reached a point at which any move will take us up hill (an unconstrained&lt;/p&gt;
&lt;p&gt;19 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
option) or a point where we can move further downhill only by climbing over a fence (a constrained
optimum).
To quantify the location of a point on the hill, we might use north-south and east-west coordinates
corresponding to the elevation at a given point as our design variables. In design optimization terms, this is
a two “design variable” space since two coordinate values are required to uniquely specify a point in the design
space. T wo design variables are the most we can easily visualize. The task becomes understandably more
complex when considering that an optimizer may have to deal with hundreds of design variables. In fact,
recent topology optimization developments have considered one million design variables.
There are three other conditions that may apply to our hill climbing exercise that illustrate two additional
concepts. The fences on the hill are properly considered constraints, but we may have been told that under
no circumstances can we go north further than a specified amount, even though there is no fence there. This
constraint that is imposed directly on the design variable is called a “side constraint.” We might further have
the condition that we want the design to lie on some prescribed path or curve drawn on the hillside. This is
an equality constraint. Note that if there are as many equality constraints as design variables, a unique
solution exists (as long as the equalities are linearly independent). This solution can be found using standard
algebraic methods. (A linear finite element analysis belongs to this category of problem.) When the number
and type of constraints do not enable a direct, unique solution, the job becomes complicated and numerical
optimizers are the best way to attack the problem. Another condition is that we may be restricted to
coordinates that are a multiple of 10 (10.,20.,30&amp;hellip;..1000.). This is the concept of “discrete design variables”
and in MSC Nastran this is handled by first finding the continuous optimum and then stepping over to the
closest discrete solution that minimizes the elevation.
This illustration is too simple in some ways and we will learn that following the maximum gradient is not
always the fastest way to find the bottom of the hill. But we can build on this experience to express the
equations which describe the basic optimization problem statement.
The Basic Optimization Problem Statement
We are now in a position to express our optimization task in a quantitative form. This mathematical
expression of the design problem is called the basic optimization problem statement and can be found in
many textbooks.
Find X to minimize (or maximize)
F(X) objective (1-1)
subject to
gj(X) ≤ 0  j = 1, &amp;hellip;, ng inequality constraint s (1-2)
hk(X) = 0  k = 1, &amp;hellip;, nh equality constraint s (1-3)
side constraints (1-4)
X = { x1, x2, &amp;hellip;, xn} design variables (1-5)
In this notation, items that are in upper case and bold are vectors while members of the vectors are designated
using a lower case symbol with a subscript to indicate the member.xiLxixiU   i 1n = &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Numerical Optimization Basics20
Main Index
The objective function is the scalar quantity to be minimized. It is a function of the set of design variables.
(Although we stated the problem as a minimization task, we can easily maximize a function by minimizing
its negative.) Side constraints are placed on the design variables to limit the region of search, for example, to
plate thicknesses that are nonnegative or tubes whose wall thicknesses are less than one-tenth of the outer
radii. The inequality constraints are expressed in a less than or equal to zero form by convention; that is, a
constraint is satisfied if its value is negative. The location of the j-th “fence” lies at gj(X) = 0 . Equality
constraints, if present, must be satisfied exactly at the optimal design.
The objective and constraint functions may either be linear or nonlinear functions of the design variables. If
all of these functions are linear, we may use linear techniques to find an optimal solution if one exists. If just
one of these functions is nonlinear, then search algorithms which can deal with this nonlinearity must be
used. MSC Nastran includes capabilities for solving both linear and nonlinear optimization problems, with
nonlinear problems making up the vast majority of the prescribed tasks.
As seen throughout the remainder of this user’s guide, the basic optimization problem statement is used
directly in MSC Nastran and influences the nomenclature adopted here. For example, the design objective is
defined in the Case Control Section by the DESOBJ command, while the design variables and constraints
are defined in the Bulk Data Section using the DESVAR and DCONSTR entries respectively. We will see
how these are used in Developing the Design Model for Sensitivity and Optimization .
In conjunction with problems in structural optimization, we will discuss design spaces, objectives,&lt;br&gt;
constraints, and design variables. It is useful to take a look at a simple problem that is not explicitly related
to structural optimization, just to become familiar with these concepts.
Example
Consider the following optimization problem.
Find x1 and x2 to minimize the objective
F(X) = x1 + x2 (1-6)
subject to the constraints
(1-7)
x1≥0.1, x2≥0.1 (1-8)
The objective and constraint functions are dependent on two design variables x1 and x2. The objective F(X)
is linear in the design variables, while the constraint  g1(X) is nonlinear. Figure 1-3 shows the two variable
design space, where shading is used to denote regions in which the constraint or side constraints on the design
variables are violated. If no constraints are violated, we say the current design is feasible (although it is
probably not optimal). A design is infeasible if one or more of the constraints are violated. For example, the
point (2,2) is a feasible design, whereas the point (0.05,3) violates not only the inequality constraint but also
the lower bound constraint on x1.g1X1
x1&amp;mdash;&amp;ndash;=1
x2&amp;mdash;&amp;ndash;2– + 0&lt;/p&gt;
&lt;p&gt;21 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
Figure 1-3  Two-Variable Function Space
The optimal design at (1,1) can be found by inspection. The explicit description of the design problem has
allowed a graphical solution in two dimensions. In practice, we usually have more than two design variables
and non-explicit constraints and objective function.
Numerically Searching for an Optimum
The optimization algorithms in MSC Nastran belong to the family of methods generally referred to as
“gradient-based”, since, in addition to function values, they use function gradients to assist in the numerical
search for an optimum. (One exception to the gradient based optimizers is the Fully Stressed Design ).
The numerical search process can be summarized as follows: for a given point in the design space, we
determine the gradients of the objective function and constraints and use this information to determine a
search direction. We then proceed in this direction for as far as we can go, whereupon we investigate to see if
we are at an optimum point. If we are not, we repeat the process until we can make no further improvement
in our objective without violating any of the constraints.
Essentially, this is the procedure used by the optimizer in MSC Nastran, although the task is complicated by
the structural optimization context. Here, we consider each of the aspects of this process in more detail, with
an emphasis placed on the intuitive aspects rather than a rigorous mathematical treatment.
The first step in a numerical search procedure is to determine the direction to search. The situation may be
somewhat complicated if the current design is infeasible (one or more violated constraints) or if one or more
constraints are critical. For an infeasible design, we are outside of one of the fences, to use the hill analogy.
For a critical design, we are standing right next to a fence. In general, we at least need to know the gradient 01234
1 2 3 4F=4
3
12g=0
x1x2
Feasible Region
Optimumx10.1=
x20.1=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Numerical Optimization Basics22
Main Index
of our objective function and perhaps some of the constraint functions as well. The process of taking small
steps in each of the design variable directions (suppose we are not restricted by the fences for this step)
corresponds exactly to the mathematical concept of a first-forward finite difference approximation of a
derivative. For a single independent variable the first-forward difference is given by
(1-9)
where the quantity x represents the small step taken in the direction x. For most practical design tasks, we
are usually concerned with a vector of design variables. The resultant gradient vector of partial derivatives of
the function can be written as
(1-10)
where each partial derivative is a single component of the gradient vector.
Physically, the gradient vector points uphill, or in the direction of increasing objective function. If we want
to minimize the objective function, we will actually move in a direction opposite to that of the gradient. The
steepest descent algorithm searches in the direction defined by the negative of the objective function gradient,
or
S = -F (1-11)
since proceeding in this direction reduces the function value most rapidly. S is referred to as the search vector.
For now, just note that MSC Nastran uses the steepest descent direction only when none of the constraints
are critical or violated and then only as the starting point for other, more efficient search algorithms. The
difficulty in practice stems from the fact that, although the direction of steepest descent is usually a very good
starting direction, subsequent search directions often fail to improve the objective function significantly. In
MSC Nastran we use other, more efficient methods which can be generalized for the cases of active and/or
violated constraints. We will briefly introduce these methods later in this section. The next question to
consider is: once we have determined a search direction, how can this be used to improve our design?
In the hill example, once we found a search direction, we proceeded “downhill” until we bumped into a fence
or until we reached the lowest point along our current path. Note that this requires us to take a number of
steps in this given direction, which is equivalent to a number of function evaluations in numerical
optimization. For a search direction S and a vector of design variables X, the new design at the conclusion of
our search in this direction can be written as
X1 = X0 + *S1(1-12)
This relation allows us to update a potentially huge number of design variables by varying the single
parameter . We have been able to reduce the dimensionality from n design variables to a single search dfx
dx&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;fxx+fx –
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 
FXF
x1&amp;mdash;&amp;mdash;&amp;ndash;
.·
F
xn&amp;mdash;&amp;mdash;&amp;ndash;
 FXx1+FX –
x1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
.·
FXxn+FX –
xn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
         
 =&lt;/p&gt;
&lt;p&gt;23 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
parameter . For this reason, this process is called a one-dimensional search. When we can no longer proceed
in this search direction, we have the value of  which represents the move required to reach the best design
possible for this particular direction. This value is defined as . The new objective and constraints can now
be expressed as
F1 = F(X0 + &lt;em&gt;S1) (1-13)
(1-14)
From this new point in the design space, we can again compute the gradients and establish another search
direction based on this information. Again, we will proceed in this new direction until no further
improvement can be made, repeating the process, if necessary.
At some point we will not be able to establish a search direction which can yield an improved design. We may
be at the bottom of the hill, or we may have proceeded as far as possible without crossing over a fence. In the
numerical search algorithm, it is necessary to have some formal definition of an optimum. Any trial design
can then be measured against this criterion to see if it is met and an optimum has been found. This required
definition is provided by the Kuhn-T ucker conditions (see The IPOPT Algorithm ), which are physically
quite intuitive.
Figure 1-4 shows a two design variable space with constraints g1(X) a nd g2(X) a nd objective function F(X).&lt;br&gt;
The constraint boundaries are those curves for which the constraint values are identically zero. A few contours
of constant objective are shown as well; these can be thought of as contour lines drawn along constant
elevations of the hill. The optimum point in this example is the point which lies at the intersection of the two
constraints. This location is shown as X&lt;/em&gt;.gj1gjX0&lt;em&gt;S1+     j 1ng = =
x2g2X
FX&lt;/em&gt;g1X
x1
g1X&lt;em&gt;g2X&lt;/em&gt;X*FX constant =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Numerical Optimization Basics24
Main Index
Figure 1-4  Kuhn-Tucker Condition at a Constrained Optimum
If we compute the gradients of the objective and the two active constraints at the optimum, we see that they
all point off roughly in different directions (remember that function gradients point in the direction of
increasing  function values). For this situation-a constrained optimum-the Kuhn-T ucker conditions state that
the vector sum of the objective and all active constraints must be equal to zero given an appropriate choice of
multiplying factors. These factors are called the Lagrange multipliers. (Constraints which are not active at the
proposed optimum are not included in the vector summation.) Indeed, Figure 1-5 shows this to be the case
where 1 and 2 are the values of the Lagrange multipliers which enable the zero vector sum condition to be
met. We can convince ourselves that this condition could not be met for any other point in the neighboring
design space.
Figure 1-5  Graphical Interpretation of Kuhn-Tucker Conditions
The Kuhn-T ucker conditions are useful even if there are no active constraints at the optimum. In this case,
only the objective function gradient is considered, and this is identically equal to zero; i.e., any finite move
in any direction will not decrease the objective function. A zero objective function gradient indicates a
stationary condition.
Not only are the Kuhn-T ucker conditions useful in determining if we have achieved an optimal design; they
are also physically intuitive. The optimizer in MSC Nastran tests the Kuhn-T ucker conditions in connection
with the search direction determination algorithm. See The IPOPT Algorithm  for theoretical details.
A Simple Structural Example
Let’s take a look at a simple example to help illustrate optimization concepts and to introduce some qualitative
aspects of the optimizer used in MSC Nastran.
The cantilever beam in Figure 1-6 has a rectangular cross section. Suppose we want to minimize the volume,
and thus the weight of the beam, subject to constraints on maximum bending stress and deflection due to
the tip loading. In addition, the beam’s cross section must remain below a maximum beam height-to-width
ratio to guard against the introduction of twisting modes of failure.FX&lt;em&gt;
1g1X&lt;/em&gt;
g1X&lt;em&gt;FX&lt;/em&gt;–g2X&lt;em&gt;
2g2X&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;25 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
Figure 1-6  Cantilever Beam
The optimization problem statement could be written as follows
minimize
V = B  H  L (1-15)
subject
(1-16)
(1-17)
(1-18)
1  B  20 (1-19)
20  H  50 (1-20)
Since the objective and constraints are available explicitly, we can graphically display the two-variable design
space as shown in Figure 1-7.AHAP = 2250 N
L = 500 cmSection A-A
B
E 1x106N
cm2&amp;mdash;&amp;mdash;&amp;mdash;- =
Mc
I&amp;mdash;&amp;mdash;&amp;ndash;6PL
BH2&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;700N
cm2&amp;mdash;&amp;mdash;&amp;mdash;- = =
PL3
3EI&amp;mdash;&amp;mdash;&amp;mdash;-4PL3
BH3E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = = 2.54cm
H
B&amp;mdash;-12&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Numerical Optimization Basics26
Main Index
Figure 1-7  Cantilever Beam Design Space
In Figure 1-7, note that the optimum lies at the vertex formed by the intersections of the beam bending stress
constraint and the constraint on maximum allowable ratio of cross-sectional height to width. This optimum
occurs at an objective of approximately 100,000 cm3. Let us examine the path which the optimizer might
take as it searches for this constrained minimum by referring to Figure 1-8.
Assume that we begin with an initial design of H = 44 cm and B = 7 cm. Since none of the constraints are
active, the direction of steepest descent is used as an initial search direction, and the optimizer proceeds in
this direction until it encounters a constraint boundary. From Figure 1-8 we see that the structural volume
cannot be reduced any further in this search direction without violating the maximum allowable tip
deflection requirement. The optimizer is now faced with a choice. A finite move in the direction of steepest
descent would not be admissible since constraints would then be violated, yet we know that the objective
function can still be reduced.OptimumHeight H (cm)65
60
55
50
45
40
35
2.5 3 4 5 6 77.5
Width B (cm)50000100000
125000150000175000V = 200000H/B = 12
H = 50
75000 2.54 =
b700 =&lt;/p&gt;
&lt;p&gt;27 Chapter 1: Getting Started
Numerical Optimization Basics
Main Index
Figure 1-8  Sequence of Iterations: Modified Method of Feasible Directions
The optimizer in MSC Nastran resolves the situation by choosing a search vector that effectively follows the
active constraint boundary in the direction of decreasing objective function. (If the optimizer could not find
any direction in which to move, an optimum would be at hand since the Kuhn-T ucker conditions have
implicitly been satisfied.) The objective can be reduced further and we observe that by the time two such
iterations have been completed, the true optimum has been reached.
Note that for both of these iterations, one or more constraints have been slightly violated in the interim. This
is a characteristic of the default optimizer used in MSC Nastran, the modified method of feasible directions,
which establishes a search direction tangent to the critical constraint(s). If the constraint is nonlinear, a finite
move in this direction may lead to a small constraint violation. Thus, continual corrections must be made by
stepping back toward the constraint boundary along the current search direction. These corrections are
performed as part of the search process, and are qualitatively represented in Figure 1-8 as small steps back to
the constraint boundary.
If the initial design is infeasible, the optimizer’s first task is to return to the feasible region. Once this has been
achieved, the optimizer can then proceed to minimize the objective, if possible. Often simply finding a design OptimumHeight H (cm)60
55
50
45
40
35
3 4 5 6 7
Width B (cm)H/B = 12
H = 50
 2.54 =
 700 =X&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Structural Optimization28
Main Index
in which none of the constraints are violated is an engineering success. If no feasible designs are found, this
still provides useful information about the original design formulation, as one or more of our performance
criteria may need to be relaxed somewhat if we hope to produce a feasible design. By reexamining our design
goals, we may learn something about the problem that was not evident before.
A critical but related issue involves the identification of various applicable modes of failure. In developing a
set of design criteria, we must ensure that all possible failure modes are adequately addressed by the design
specifications. This is true in all aspects of engineering design but is especially so in design optimization. T o
use the current example, if we did not specify a maximum allowable beam height to width ratio, we might
run the risk of introducing twisting or other buckling modes beyond the simple bending stress criteria we had
already accounted for. Without this constraint, the optimizer would be able to reduce the structural volume
even further (see the design space of Figure 1-7), but would be completely unaware of the introduction of other
failure modes possible with narrow beam sections. Consequently, the engineer, not the optimizer, must accept
ultimate responsibility for the integrity of the final design.
We can also preview a concept that we will deal with in great detail in Fundamentals of Design Sensitivity
and Optimization in MSC Nastran ; optimizers work best when they are dealing with linear problems. MSC
Nastran applies concepts that make the structural response quantities a nearly linear function of the design
variables (see The Approximate Model ). The constraint contained in Equation (1-18) is highly nonlinear the
way it is written and the representation of Figure 1-7 suggests that this can be linearized as
H  12B  0 (1-21)
In practice, this linear specification of the constraint between the two design variables is a much easier
constraint to deal with than the non-linear one.
In summary, the intent of this example is to help illustrate the concepts presented in this section as well as to
give a general idea of the approach used by the modified method of feasible directions. The discussion was
simplified by the fact that we had an explicit functional description of the design space beforehand, as well
as only two design variables. In any real structural optimization task, each of the data points in the design
space can only be determined based on the results of a complete finite element analysis. This may be quite
expensive. Also, since a numerical optimizer usually needs a number of these function evaluations throughout
the search process, the costs associated with this analysis can quickly become enormous.
These factors, combined with tens or even hundreds of design variables and thousands of constraints, force
us to consider methods for efficiently coupling structural analysis routines with numerical optimizers. The
field of structural optimization as implemented in MSC Nastran is based on the introduction of
approximation concepts, which reduce the need for repeated finite element function evaluations.
Approximation concepts are actually quite intuitive and are a topic of the next section.
Structural Optimization
Introduction  and Numerical Optimization Basics  introduced some examples of ways in which numerical
optimization might be used to solve design problems and gave a brief overview of gradient-based numerical
optimizers. This final introductory section focuses more closely on how the optimization methods are
coupled with a structural analysis in general and with the MSC Nastran product in particular. This is done
by first introducing the concepts of design properties and design responses that link the features of MSC
Nastran that are familiar to the analyst to the design variables and constraints that are familiar to optimizer.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P20</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_020/</guid>
      <description>
        
        
        &lt;p&gt;369 Chapter 7: Topology, Topometry and Topography Optimization
Patran User Interface
Main Index
24. The overhang constraint is a mesh dependent constraint. To have a more accurate 45 degree overhang
angle, the mesh size should be close to uniform. HEXA mesh aligned in print direction is preferred.
In addition, the mass constraint has significant influence on the design with overhang constraint. If
the mass constraint is too restricted, the design may not have good connections.
Limitations
Elements referencing the composite property PCOMP entry cannot be designed.
Superelements are not supported.
Thermal loads are not supported.
Although combined topology and sizing optimization is supported, TOPVAR and DVPREL1/2
entries cannot reference the same property ID (PID).
RTYPE=COMP can be used even with pure sizing problems provided that Adjoint Method is used for
sensitivity calculation. However, RTYPE=COMP cannot be used in direct sensitivity calculation.
RTYPE=TOTSE (total strain energy) can be used in direct sensitivity calculation. RTYPE=FRMASS is not
supported in pure sizing problems even for the Adjoint Method.
Patran User Interface
All input data used in T opology Optimization analysis can be generated in Patran. This support includes all
the features like combined size and T opology Optimization, multiple mass targets, manufacturing
constraints, multidisciplinary optimization and output controls.
General Topology Optimization Preprocessing
From the Main Menu select Tools  -&amp;gt; Design Study -&amp;gt; Preprocess&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Patran User Interface370
Main Index
In the Pre-Process form, select Action : Create; Object : Design Variable; Type : Topology to create TOPVAR.&lt;/p&gt;
&lt;p&gt;371 Chapter 7: Topology, Topometry and Topography Optimization
Patran User Interface
Main Index
Figure 7-3  Patran Pre-process&lt;/p&gt;
&lt;p&gt;Label of TOPVAR entry&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Patran User Interface372
Main Index
The Manufacturing Constraints can be added by clicking the Define Manufacturing Constraints  tab and
filling up the form which appears (see Figure 7-4).
Figure 7-4  Creating Topology Variable
In the Pre-Process form, select Action : Create; Object : Objective; Solution : Linear Static; Response :
Compliance; Min/Max: Minimize to create Compliance Minimization as the Objective. Then select Action :
Create; Object : Constraint; Solution : Global; Response : Fractional Mass to create Constraint on Fractional
Mass. The converse can be done for Fractional Mass minimization subject to Compliance constraint.&lt;/p&gt;
&lt;p&gt;373 Chapter 7: Topology, Topometry and Topography Optimization
Patran User Interface
Main Index
Figure 7-5  Creating Objective and Constraint
Note that when FRMASS (Fractional Mass) constraint is being created, there is provision to select a
topologically designable region identified by a Property ID. Many such constraints can be created to allow
for separate mass targets on different regions. This is the ATT1 field for RTYPE=FRMASS in the DRESP1
entry. Furthermore, the Lower Bound and Upper Bound boxes correspond to the LALLOW and UALLOW
fields of the DCONSTR entry.
For other responses, analysis types and combined size and T opology Optimization, the procedure is just the
same as for size optimization.
For Output Control, click Analysis  and in the Analysis form select Action : Optimize; Object : Entire Model;
Method : Analysis Deck and click on Optimization Parameters . This opens the Optimization Parameters
form, which allows the user to select values for DOPTPRM parameters like P1, P2, and DESMAX, and few&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Patran User Interface374
Main Index
parameters like CONV1, CONV2, DELP and DELX on clicking the Advanced Optimization Parameters&lt;br&gt;
tab.
Figure 7-6  Setting Optimization Parameters
Patran Postprocessing
MSC Nastran produces a file with .des extension which contains the resulting optimal element density
distribution. This file can be directly read in Patran to display the T opology Optimization results. Patran
supports read and display of topology results, the smoothing/ remeshing of a topology design proposal for a
new reanalysis and the generation of IGES files for a topology design proposal for CAD systems.
From the Main Menu select Tools   Design Study  Postprocess
Then in the Post-Process form select Action : Read Results, then click the Select Results File  tab to Browse
through the list of available .des files, select the required file and then click Apply .&lt;/p&gt;
&lt;p&gt;375 Chapter 7: Topology, Topometry and Topography Optimization
Patran User Interface
Main Index
Figure 7-7  Patran Post-process
Figure 7-8  Reading Density Distribution
To see the results, select Action : Display Results and the required design cycle from Select Result Case  list
box, input a Threshold limit (density value below which the density will be treated as 0 or void), select the
Fringe check box (if density contours are desired). Click Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Patran User Interface376
Main Index
Figure 7-9  Displaying Density Distribution&lt;/p&gt;
&lt;p&gt;377 Chapter 7: Topology, Topometry and Topography Optimization
Patran User Interface
Main Index
Figure 7-10  Density Distribution Plot&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples378
Main Index
Application Examples
Bridge Example
Summary
Introduction
A simply supported bridge example (model shown in Figure 5.1) is used to demonstrate (a) basic MSC
Nastran T opology Optimization capabilities without manufacturing constraints (topoug1.dat in TPL)  and
(b) mirror symmetry constraints (topoug1a.dat in TPL).  The structural compliance (i.e., total strain energy)
is minimized with a mass target 0.4 (i.e., 60% material savings). The loading and boundary conditions are
shown in Figure 7-11. The structure is modeled with 3200 CQUAD4 elements. An additional objective of this
exercise is to give a step-by-step procedure in Patran to (a) import the model data (b) setup a Topology
Optimization problem (c) read the topology results (.des) file (d) display the density distribution (e) smooth
the boundaries (f) create a surface over the smoothed topology proposal and (g) export the IGES file of the
topology proposal.ATTRIBUTE VALUE
Title Bridge
T opology Optimization
featuresCompliance minimization
Mass target
Mirror symmetry constraints
Geometry
Length = 40 and width = 20
Thickness = 0.1
Material E = 2.0E+5 Pa, µ=0.3
Analysis Static analysis
Boundary conditions Supported on rollers at one point and fixed support at another point
Applied loads A concentrated force =  10.0 N
Element types 4 node linear QUAD elements
T opology result Material distribution&lt;/p&gt;
&lt;p&gt;379 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-11  Bridge
Solution Requirements
This bridge example is widely used by academic and industrial researchers for Topology Optimization
validation.&lt;br&gt;
Design Model Description
Objective:       Minimize compliance
Topology design region: PSHELL
Constraints:     Mass target = 0.4 (i.e., mass savings 60%)
With or without mirror symmetry constraints
These solutions demonstrate:
A distinct design can be obtained by MSC Nastran Topology  Optimization with checkerboard free
algorithm (as default)
By using symmetry constraints in Topology Optimization, a symmetric design can be obtained
regardless of the boundary conditions or loads.
The smoothed topology proposal can be exported as an IGES file which can be used by any CAD
system.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples380
Main Index
Optimization Solution
Basic Compliance Minimization
The input data for this example related to Topology Optimization model is given in Listing 7-1. A Bulk Data
entry TOPVAR =1 is used to define a topological design region. XINIT=0.4 on the TOPVAR entry matches
the mass target constraint so that the initial design is feasible. The rest of the values on the TOPVAR entry
are default values that are recommended for general Topology Optimization applications. Type one design
responses DRESP1 = 1 and 2 identify compliance and fractional mass, respectively. DCONSTR= 1 specifies
the mass target. DESOBJ=1 in Case Control Command selects DRESP1=1 entry to be used as a design
objective (minimization as default) and DESGLB selects the design constraint DCONSTR= 1 to be applied
in this Topology Optimization task.
Listing 7-1  Input File for Bridge Example
DESOBJ = 1
DESGLB = 1
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
SPC = 2
LOAD = 2
ANALYSIS = STATICS
BEGIN BULK
DCONSTR 1       2               .4
TOPVAR,    1  ,     Tshel,     Pshell, .4, , , ,   1
DRESP1   1       COMPL    COMP
DRESP1   2       FRMASS   FRMASS
Figure 7-12 shows the topology optimized result. This optimal design is very clear without any checkerboard
effect.
Figure 7-12  Bridge Topology Design
Mirror Symmetric Constraints
Since the loads applied on the bridge are not symmetric, the topology optimized design Figure 7-12 is not
symmetric about z-x plane. The bridge is employed again to demonstrate the mirror symmetric constraint
capability that enforces the design to be symmetric about a given plane. This entire exercise is taken up using
Patran.
Step 1: Importing the Bridge Model into Patran&lt;/p&gt;
&lt;p&gt;381 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
a.Create a new database in Patran. Click File  Import
b.In the Import form select Object : Model; Source : MSC Nastran Input.
c.Select the required data file from the browser. (This file contains the finite element model suitable
for a static analysis lacking any topology related input.)
d.Click Apply .
The Topology Optimization problem will be setup on this base model.
Figure 7-13  Importing Model into Patran
Step 2: Creating a Coordinate Frame for Defining Mirror Plane
A new Coordinate frame is created with its origin at the midpoint of the rectangular domain.
a.Click Geometry .
b.In the Geometry form, select Action : Create; Object : Coord; Method : 3 point;
Type : Rectangular
c.Enter [20 10 0] for Origin, [20 10 1] for a Point on Axis 3 and [21 10 0] for a Point on Plane 1-3
d.Click Apply .
This rectangular coordinate frame will define the mirror plane for the symmetry constraint (see Defining
Design Domain and Manufacturing Constraints ).&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples382
Main Index
Figure 7-14  Creating Coordinate Frame
Step 3: Creating a Load Case
The imported model has the FE entities and force and support entries, so a Load Case has to be created
combining the forces and supports.
a.Click Load Case .
b.In the Load Case form, select Action : Create; Type: Static
c.Enter a name for the load case in the Load Case Name box.
d.Click the  Input Data  tab.
e.In the Input Data form, click all the entries in the Select Individual Loads/BCs list box.
f.Click OK.
g.Click Apply .&lt;/p&gt;
&lt;p&gt;383 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-15  Creating Load Case
Step 4: Initiating Topology T optomization:
a.Click Analysis .
b.In the Analysis form, select Action : Toptomize, Object : Entire Model, Method : Analysis Deck
(Selecting Method : Full Run allows MSC Nastran to be called through the GUI itself.)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples384
Main Index
Figure 7-16  Initiating Toptomize for Topology Optimization&lt;/p&gt;
&lt;p&gt;385 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Step 5: Defining Objectives and Constraints
a.In the Analysis form, click the Objectives and Constraints  tab. In the Objectives and Constraints
form, select Type : Topology, Objective Functions : Minimize Compliance, Constraint Target :
Mass Fraction. Enter value of Mass Target Constraint as 0.4. Click OK.
Figure 7-17  Creating Objectives and Constraints
Step 6: Defining Design Domain and Manufacturing Constraints
a.Click the Design Domain  tab. In the Design Domain form, click property name prop1 in Valid
Properties then click the Manufacturing Constraints tab.
b.In the Manufacturing Constraints form, enter Reference Coordinate Frame as Coord 1 (created
in Creating a Coordinate Frame for Defining Mirror Plane ). Select the Symmetric Constraints
and Mirror Plane ZX check boxes. Click OK  to close the form.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples386
Main Index
c.Click OK to close Design Domain Form.
Figure 7-18  TOPVAR entry
This process results in generation of the TOPVAR entry as shown under:
Step 7: Defining Optimization Parameters
a.Click the Optimization Control tab.
b.Input 0.4 in Initial Design box in the Optimization Control Parameters form.
c.Click OK.&lt;/p&gt;
&lt;p&gt;387 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-19  Optimization Parameters&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples388
Main Index
Step 8: Creating and Selecting Subcase for Optimization
After the Optimization problem has been setup, the next requirement is the creation and selection of Subcase.
a.Click Analysis .
b.Select Action : Optimize; Object : Entire Model; Method : Analysis Deck in Analysis form
c.Click the Subcase Create tab.
d.In the Subcase Create form, select Solution Type : 101 Linear Static
e.Select the created Load Case from the Available Subcases list.
f.Click Apply , and Cancel.
g.Click the Subcase Select  tab in the Analysis Form.
h.In the Subcase Select form, select the created subcase from Subcases Available.
i.Select Solution Type : 101 Linear Static
j.Click OK.
k.Click Apply  in the Analysis form to create the analysis deck for optimization.
This completes the Preprocess.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P21</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_021/</guid>
      <description>
        
        
        &lt;p&gt;389 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-20  Creation and Selection of Subcase
Submit the analysis deck to MSC Nastran. (As indicated in Initiating Topology Toptomization: , this can be
done from the GUI itself if Method is Full Run instead of Analysis Deck). The density distribution file (.des)
will be created. This can be read by Patran and displayed as a density plot which is the topology design
proposed by MSC Nastran. This is achieved by Patran postprocessing and the steps are now described.
Step 9: Reading jobname.des file into Patran
a.Click ToolsDesign Study Post Process
b.Select Action : Read Results.
c.Click the Select Results File  tab.
d.Select the desired (.des) file through the browser.
e.Click Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples390
Main Index
Figure 7-21  Reading Density Distribution File into Patran
Step 10: Display Fringe Plot
a.Select Action : Display Results.
b.Select last design cycle in the Select Result Case list.
c.Input 0.4 as the Threshold.
d.Select the Fringe  check box.
e.Click Apply .&lt;/p&gt;
&lt;p&gt;391 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-22  Display of Fringe Plot
Step 11: Smooth Results
a.Select Action : FEM Smooth; Method : 2D
b.Select Remesh ElType : Quad4
c.Input 0.4 for Threshold.
d.Make a window around the full design domain to input Select FEM to smooth.
e.Click Apply .
A smoothed and remeshed topology design is displayed.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples392
Main Index
Figure 7-23  Smoothed and Remeshed Topology
Further work with this model requires that new geometry be created in a CAD system.  For this purpose the
new surfaces appearing in the proposed topology design are to be captured and then the geometric model can
be exported as an IGES file. This process is now explained.
Step 12: Capturing new Surfaces appearing in the Proposed Topology Design
a.Click Geometry .
b.In the Geometry form, select Action : Create; Object : Surface; Method : Mesh.
c.Make a window around the full design domain to create input for the Element List.
d.Click Apply .&lt;/p&gt;
&lt;p&gt;393 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-24  Creating new Surface
Step 13: Associate remaining Finite Elements in the Model with newly Created Surface
a.Click Element .
b.In the Element form, select Action : Associate; Object : Element; Method : Surface
c.Uncheck Auto Execute .
d.Make a window around the full domain to create input for the Element List.
e.Click on the newly created surface as input to the Surface List.
f.Click Apply .
Now the model has all the FE and geometric information and its association.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples394
Main Index
Figure 7-25  Associating FE with Surface
Step 14: Creation of IGES file
a.Click Preferences Global
b.Input 0.6 for the Global Tolerance (relax the Global Tolerance).
c.Click Apply .
d.Click File Export
e.In the Export form, select Format : IGES.
f.Check Export through Parasolid box.
g.Enter a File name.
h.Click the IGES Options  tab.
i.In the form, select Surfaces as the Entity Types.
j.Click OK.
k.Click Apply .&lt;/p&gt;
&lt;p&gt;395 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-26  Relaxing Global Tolerance&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples396
Main Index
Figure 7-27  Exporting IGES file&lt;/p&gt;
&lt;p&gt;397 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
MBB Beam with Variations
Summary
Introduction
An MBB beam example (a half model shown in Figure 7-28) is used to demonstrate (a) basic MSC Nastran
Topology Optimization capabilities without manufacturing constraints (topex3.dat in TPL), (b) minimum
member size control (topex3a.dat in TPL), and (c) mirror symmetry constraints (topex3b.dat in TPL).  The
structural compliance (i.e., total strain energy) is minimized with a mass target 0.5 (i.e., 50% material
savings). The loading and boundary conditions are shown in Figure 7-28. The structure is modeled with 4800
CQUAD4 elements. ATTRIBUTE VALUE
Title MBB Beam
Topology Optimization
featuresCompliance minimization
Mass target
Checkerboard free solution
Minimum member size control
Mirror symmetry constraints
Geometry
Length = 6 and width = 2
Thickness = 0.01
Material E = 2.05E+5 Pa, µ=0.3
Analysis Static analysis
Boundary conditions Supported on rollers at one point and fixed support at another point
Applied loads A concentrated force =  100.0 N
Element types 4 node linear QUAD elements
Topology result Material distribution&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples398
Main Index
Figure 7-28  MBB Beam
Solution Requirements
This MBB example is widely used by academic and industrial researchers for T opology Optimization
validation.&lt;br&gt;
Design Model Description
Objective:       Minimize compliance
Topology design region: PSHELL
Constraints:     Mass target = 0.5 (i.e. mass savings 50%)
a.Minimum member size control and/or
b.Mirror symmetry constraints
These solutions demonstrate:
A distinct design can be obtained by MSC Nastran Topology  Optimization with checkerboard free
algorithm (as default)
The minimum member size is mainly used to control the size of members in topology optimal
designs. Preventing thin members enhances the simplicity of the design and hence its
manufacturability.  Minimum member size is more like quality control than quantity control.
By using symmetry constraints in Topology Optimization, a symmetric design can be obtained
regardless of the boundary conditions or loads.
Optimization Solution
Basic Compliance Minimization
The input data for this example related to Topology Optimization model is given in Listing 7-2. A Bulk Data
entry TOPVAR =1 is used to define a topological design region. XINIT=0.5 on the TOPVAR entry matches
the mass target constraint so that the initial design is feasible. The rest of the values on the TOPVAR entry&lt;/p&gt;
&lt;p&gt;399 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
are default values that are recommended for general Topology Optimization applications. Type one design
responses DRESP1 = 1 and 2 identify compliance and fractional mass respectively. DCONSTR= 1 specifies
the mass target. DESOBJ=1 in Case Control Command selects DRESP1=1 entry to be used as a design
objective (minimization as default) and DESGLB selects the design constraint DCONSTR= 1 to be applied
in this Topology Optimization task.
Listing 7-2  Input File for MBB Beam
DESOBJ = 1
DESGLB = 1
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
SPC = 2
LOAD = 2
ANALYSIS = STATICS
BEGIN BULK
DCONSTR 1       2               .5
TOPVAR,    1  ,     Tshel,     Pshell, , , , ,   1
DRESP1   1       COMPL    COMP
DRESP1   2       FRMASS   FRMASS
Figure 7-29 shows the topology optimized result that is smoothed and remeshed by using Patran. This optimal
design is very clear without any checkerboard effect.  It is noticed that there are some small members.
Figure 7-29  MBB Beam Topology Design
Minimum Member Size Control
The MBB beam (shown in Figure 7-28) is used again to demonstrate the minimum member size control
capability.
The input data for this example related to T opology Optimization with “minimum m ember size” is given in
Listing 7-3. The minimum member size value is defined by the parameter TDMIN = 0.5 on the DOPTPRM
entry and corresponds to the length of 10 elements.&lt;br&gt;
Listing 7-3  Input File for MBB Beam with Minimum Member Size
DESOBJ = 1
DESGLB = 1
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
SPC = 2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples400
Main Index
LOAD = 2
ANALYSIS = STATICS
BEGIN BULK
DOPTPRM, TDMIN, 0.5
DCONSTR 1       2               .5
TOPVAR,    1  ,     Tshel,     Pshell, , , , ,   1
DRESP1   1       COMPL    COMP
DRESP1   2       FRMASS   FRMASS
The Figure 7-30 shows the topology optimized result with “minimum m ember size” TDMIN=0.5. Compared
to the design shown in Figure 7-29, this design with “minimum m ember size” is obviously much simpler and
there are no tiny members.
Figure 7-30  MBB Beam Topology Design with &amp;ldquo;Minimum Member Size&amp;rdquo;
Mirror Symmetric Constraints
Since the loads applied on the MBB beam are not symmetric, the topology optimized designs Figure 7-29 and
Figure 7-30 are not symmetric. The MBB beam is employed again to demonstrate the mirror symmetric
constraint capability that enforces the design to be symmetric about a given plane.
To apply symmetric constraints on designed properties, users need to create a reference coordinate system
using a rectangular coordinate system CORD1R or CORD2R. In this example, grid 10001 (location x=3,
y=1, and z=0) is defined as the origin. Grid 10002 (x=3, y=1, and z=1) lies on the z-axis, and grid 1003 (x=4,
y=1, and z=0) lies in the x-z plane. CORD1R CID=1 defines a reference coordinate system. A continuation
line “SYM” e nforces the property PSHELL=1 to be symmetric about the planes YZ and ZX in the reference
coordinate system CID=1. In addition, a minimum member size TDMIN=0.15 is applied. The input data
for this example is given in Listing 7-4.
Listing 7-4  Input File for MBB Beam with Mirror Symmetry Constraints
DESOBJ = 1
DESGLB = 1
SUBCASE 1
SUBTITLE=Default
SPC = 2
LOAD = 2
ANALYSIS = STATICS
BEGIN BULK
CORD1R   1       10001    10002   10003
GRID     10001            3.      1.     0.0
GRID     10002            3.      1.     1.0
GRID     10003            4.      1.     0.0
TOPVAR,  1     , Tshel,   Pshell, , , , ,   1
,  SYM   ,    1 ,   YZ    ,   ZX
, TDMIN,  0.15&lt;/p&gt;
&lt;p&gt;401 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
DRESP1   1       COMPL    COMP
DRESP1   2       FRMASS   FRMASS
DCONSTR  1       2               .5
The Figure 7-31 shows the topology optimal result with symmetric constraints and minimu m member&lt;br&gt;
size=0.15, with sym= yz and zx, and xinit field blank.
Figure 7-31  MBB Beam with Symmetric Constraints and Minimum Member Size
Torsion Beam with Variations
Summary
ATTRIBUTE VALUE
Title A T orsion Beam
Topology Optimization
featuresCompliance minimization
Mass target
Casting constraints
Extrusion constraints
Mirror symmetry constraints
Geometry
Length = 16 and width = 4
height = 4&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples402
Main Index
Introduction
A torsion beam is used here to demonstrate extrusion (topex5.dat in TPL), one-die casting constraint
(topex5a.dat in TPL) and two-die casting constraints (topex5b.dat in TPL). Figure 7-32 shows the FEM model
of the torsion beam. A pair of twisting forces is applied on one end while the other end is fixed. 2048 CHEXA
elements are used for this model. The objective is to minimize the structural compliance with mass target of
0.3 (i.e., 70% material savings).
Figure 7-32  Torsion Beam
Solution Requirements
This torsion beam is utilized to show MSC Nastran T opology Optimization extrusion and casting constraint
capabilities. Material E = 2.1E+5 Pa, µ=0.3, and RHO=1.0
Analysis Static analysis
Boundary conditions Fixed support at one end
Applied loads A pair of  twisting forces = 1000.0 N
Element types  8 node HEXA
T opology result Material distributionATTRIBUTE VALUE&lt;/p&gt;
&lt;p&gt;403 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Design Model Description
Objective:       Minimize compliance
Topology design region: PSOLID
Constraints:    Mass target = 0.3 (i.e., mass savings 70%)
(a) Extrusion constraints or
(b) Casting constraints with one or two dies
These solutions demonstrate:
By using extrusion constraints in Topology Optimization, a constant cross-section design along the
given extrusion direction can be obtained regardless of the boundary conditions or loads.
The use of casting constraints can prevent hollow profiles in Topology Optimization so that a die
can slide in a given direction. One or two dies options are available for selection.
Some combined manufacturing constraints are allowed in Topology Optimization to achieve the
design goal.
Optimization Solution
Extrusion Constraints With One Die
It is often seen that some topology optimized designs contain cavities that are not achievable or require a high
cost manufacturing process. For example, the result from the torsion beam without manufacturing
constraints is shown in Figure 7-33. Clearly, this topology design proposal is not achievable by casting.
Figure 7-33  Torsion Beam without Manufacturing Constraints&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples404
Main Index
The extrusion constraints enforce a constant cross-section design along the given extrusion direction. The
input data related to imposing an extrusion constraint along the z-axis in the basic coordinate system (as the
default option) is given in Listing 7-5.
Listing 7-5  Input File for Torsion Beam with Extrusion
DESOBJ = 1
DESGLB = 1
SUBCASE 1
SUBTITLE=Default
ANALYSIS = STATICS
SPC = 2
LOAD = 2
BEGIN BULK
DRESP1   2       Frmass   FRMASS
DRESP1   1       COMPL    COMP
DCONSTR  1       2                .3
TOPVAR,  1    ,     TSOLID,     PSOLID, .3, , , ,   1
,  EXT  ,           ,       Z
PSOLID   1       1        0
The Figure 7-34 shows the topology optimized result with extrusion constraints. It is obvious that the design
has a constant cross-section along the z-axis.
Figure 7-34  Torsion Beam with Extrusion Constraints in Z-Axis
Casting Constraints with One Die
A torsion beam (shown in Figure 7-32) is used here to demonstrate the combination of one die casting
manufacturability constraints and mirror symmetric constraints. (Figure 7-34)
The casting constraints with one die option enforce the material to be added to the region by “filling u p” in
the given draw direction from the bottom (or, stated another way, that voids extend from the top surface and
do not reappear in the die direction). To apply casting constraints and symmetric constraints on designed
properties, a reference coordinate system CID=1 is defined by using a rectangular coordinate system
CORD1R. A “CAST” c ontinuation line defines casting constraints in the Y direction and one die is a default&lt;/p&gt;
&lt;p&gt;405 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
option. Another “SYM” c ontinuation line defines symmetric constraints about the YZ plane. The input data
related to the Topology Optimization model is given in Listing 7-6.
Listing 7-6  Input File for Torsion with One Die
DESOBJ = 1
DESGLB = 1
SUBCASE 1
SUBTITLE=Default
ANALYSIS = STATICS
SPC = 2
LOAD = 2
BEGIN BULK
DRESP1   2       Frmass   FRMASS
DRESP1   1       COMPL    COMP
DCONSTR  1       2                 .3
CORD1R   1       5        167      7
PSOLID   1       1        0
TOPVAR,    1 ,      TSOLID,     PSOLID,    .3, , , 4.0,   1
,        CAST,          1 ,    Y
,         SYM,          1 ,   YZ, , YES
The Figure 7-35 shows the topology optimized result with one die casting constraint. It is observed that the
design material is added by “filling u p” in the Y direction from the bottom. In addition, the design is
symmetric about the YZ plane in the reference coordinate system CID=1.
Figure 7-35  Torsion Beam with One Die Casting Constraints in Y Direction
Casting Constraints with Two Dies
The torsion beam (shown in Figure 7-32) is again used here to demonstrate two die casting manufacturability
constraints.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples406
Main Index
The input for two die casting constraints is similar to the one die option in the previous example the&lt;br&gt;
difference is that 2 is selected for the DIE field on the TOPVAR entry. The input data related to imposing
two die casting constraints is given in Listing 7-7.
Listing 7-7  Input File for Torsion with Two Dies
DESOBJ = 1
DESGLB = 1
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
ANALYSIS = STATICS
SPC = 2
LOAD = 2
$ Direct Text Input for this Subcase
BEGIN BULK
DRESP1   2       Frmass   FRMASS
DRESP1   1       COMPL    COMP
DCONSTR  1       2                 .3
CORD1R   1       5        167      7
PSOLID   1       1        0
TOPVAR,    1 ,      TSOLID,     PSOLID,    .3      ,    ,   , 4.0 ,   1
,        CAST,         1 ,     Y,     2, YES
,        SYM ,         1 ,    YZ
The Figure 7-36 shows the topology optimized result with two die casting constraints. It is observed that the
design material grows from the splitting plane in opposite directions along the y-axis specified in the reference
coordinate system CID=1. The splitting plane is determined by optimization and in this case corresponds to
the y-z plane.
Figure 7-36  Torsion Beam with Two Die Casting Constraints in Y-Axis&lt;/p&gt;
&lt;p&gt;407 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
A Bracket example for Overhang Constraint
Representative results for the bracket example (~tpl/topex_20/top3dprt) are shown in Figure 7-37 through
Figure 7-38. Figure 7-37 shows the initial design for the bracket example.
Figure 7-37  Initial Design for the Bracket Example
Figure 7-38 shows the design result when there is no overhang constraint imposed. It is observed that if the
part is printed along the Z (horizontal) direction in coordinate system 3, some support material is required
to print material within the blue circle.
Figure 7-38  Optimal Result for Bracket without Overhang Constraints&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples408
Main Index
Figure 7-39 shows the final design obtained when an overhang constraint in Z direction in coordinate system
3 is imposed on the bracket. It is seen that the design is printable since the design satisfies the 45 degree angle
rule.
Figure 7-39  Optimal Result for Bracket with Overhang Constraints&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P22</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_022/</guid>
      <description>
        
        
        &lt;p&gt;409 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Engine Mount
Summary
Introduction
The main goal of this engine mount example is to minimize the compliance of the engine-front-mount-beam
(shown in Figure 7-40) with mass target 0.3 (material savings 70%) and displacements within a range (-0.6,
0.6) at 5 selected grids. The analysis model has 14 load cases. The finite element model is shown in Figure 7-41.
There are 62306 HEXA elements, 703 PENTA elements, 31 TETRA elements, and 5 RBE3 elements. (Refer
topoug2.dat in TPL).ATTRIBUTE VALUE
Title Engine Mount
Topology Optimization
featuresAveraged compliance minimization
Multiple TOPVAR entries
Multiple load cases
Displacement constraints
Geometry
Material E = 2.05E+5 Pa, µ=0.3
Analysis Static analysis
Boundary conditions Fixed at three points
Applied loads 14 load cases (forces)
Element types HEXA, PENTA, TETRA, and RBE3
Topology result Material distribution&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples410
Main Index
Figure 7-40  Front-Mount- Beam
Figure 7-41  Front-Mount-Beam FE Model
The objective of this example is to illustrate the step-by-step procedure to (a) setup a T opology Optimization
task with displacement constraints and multiple load cases in Patran using General Topology Optimization
interface and (b) use Patran Insight to get the iso-surfaces.
Solution Requirements
Design Model Description&lt;/p&gt;
&lt;p&gt;411 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Objective: Minimize averaged compliance Topology design region: PSOLID = 1, 2, 3, 8, 9
and 10
Constraints:     Mass target = 0.3 (i.e., mass savings 70%) Displacements at grid points 76095,
76096, 76419, 76420, and 76421 for all 14 load cases within the range (-6.0, 6.0)
This solution demonstrates:
The averaged compliance can be used for Topology Optimization problems with multiple load cases
to achieve an efficient design concept.
Multiple topological design parts are allowed
Displacement constraints can be readily handled in Topology Optimization.
Optimization Solution
Topology Optimization Input through Patran
Create a new database in Patran and Import the model file as an MSC Nastran input file. Next create 14 Load
cases. The latter two steps have already been explained in Patran T utorial 1. The following table gives the load
and displacement sets belonging to each load case.
Step 1: Initiating the General Topology Optimization interface.
This process enables the input of all T opology Optimization parameters for setup of the optimization job.
Click on Tools Design Study  Pre ProcessLoad Case Displacement ids Force ids
1 Displ_spc.1, Displ_spc.1.cid3 Force_force1.cid4, 5, 6, 7, 8, 9
2 Displ_spc.1, Displ_spc.1.cid3 Force_force2.cid4, 5, 6, 7, 8, 9
3 Displ_spc.1, Displ_spc.1.cid3 Force_force3.cid4, 5, 6, 7, 8, 9
4 Displ_spc.1, Displ_spc.1.cid3 Force_force4.cid4, 5, 6, 7, 8, 9
5 Displ_spc.1, Displ_spc.1.cid3 Force_force5.cid4, 5, 6, 7, 8, 9
6 Displ_spc.1, Displ_spc.1.cid3 Force_force6.cid4, 5, 6, 7, 8, 9
7 Displ_spc.1, Displ_spc.1.cid3 Force_force7.cid4, 5, 6, 7, 8, 9
8 Displ_spc.1, Displ_spc.1.cid3 Force_force8.cid4, 5, 6, 7, 8, 9
9 Displ_spc.1, Displ_spc.1.cid3 Force_force9.cid4, 5, 6, 7, 8, 9
10 Displ_spc.1, Displ_spc.1.cid3 Force_force10.cid4, 5, 6, 7, 8, 9
11 Displ_spc.1, Displ_spc.1.cid3 Force_force11.cid4, 5, 6, 7, 8, 9
12 Displ_spc.1, Displ_spc.1.cid3 Force_force12.cid4, 5, 6, 7, 8, 9
13 Displ_spc.1, Displ_spc.1.cid3 Force_force13.cid4, 5, 6, 7, 8, 9
14 Displ_spc.1, Displ_spc.1.cid3 Force_force14.cid4, 5, 6, 7, 8, 9&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples412
Main Index
The form that appears enables creation of TOPVAR variables, objective function, constraint functions,
constraint sets and a Design Study.
Figure 7-42  General Topology Optimization
Step 2: Creation of initial TOPVAR variable
a.Select Action : Create; Object : Design Variable; Type : Topology
b.Select Dimension 3-D; Type: Solid
c.Select psolid.1 in Select Property Set list. A variable name tv_psolid.1 will automatically appear
in the Variable Name box.&lt;br&gt;
d.Click Apply .&lt;/p&gt;
&lt;p&gt;413 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-43  Creation of TOPVAR
Similarly, create 5 more TOPVAR variables. The table below gives the designable property id for each of the
created TOPVAR variables.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples414
Main Index
Step 3: Creation of Objective
The objective is minimization of the average compliance of all the 14 load cases.
a.Select Action : Create; Object : Objective; Solution : Global; Response : Average Compliance.
b.Select Min/Max: minimize.
c.Input the Objective Name (avgcomp).
d.Click Apply .
Step 4: Creation of Global Constraint
a.There is a global constraint of 30% mass fraction.
b.Selecting Action : Create; Object : Constraint; Solution : Global; Response : Fractional Mass.
c.Input 0.3 as the Upper Bound.
d.Input mass as the Constraint Name.
e.Click Apply .TOPVAR ID PSOLID ID
1 (tv_psolid.1) 1 (psolid.1)
2 (tv_psolid.2) 2 (psolid.2)
3 (tv_psolid.3) 3 (psolid.3)
4 (tv_psolid.7) 7 (psolid.7)
6 (tv_psolid.8) 8 (psolid.8)
7 (tv_psolid.9) 9 (psolid.9)&lt;/p&gt;
&lt;p&gt;415 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-44  Creating Objective&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples416
Main Index
Figure 7-45  Creating Mass Constraint
In addition to the fractional mass global constraint, there are displacement constraints on 5 grid points under
each of the 14 load cases. The total number of constraints is 70 grouped into 14 constraint sets of 5
constraints each. Now the steps to create these constraints and constraint sets are explained.&lt;br&gt;
Step 5: Creation of Displacement Constraints
a.Select Action : Create; Object : Constraint; Solution : Linear Static; Response : Displacement
b.Input loadcase1grid1 for Constraint Name.
c.Input Node 76095 for Select Node.
d.Select -6 for Lower Bound and 6 for Upper Bound.
e.Check Magnitude radio button in Displacement Component section.&lt;/p&gt;
&lt;p&gt;417 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
f.Click Apply .
Figure 7-46  Creating Displacement Constraint&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples418
Main Index
Similarly, create 69 more constraints. The following table gives the load case and grid number for each of the
constraints. Each of these displacement responses is constrained to lie between -6 and 6.
Each row of constraints in the above table is combined into a constraint set. Thus there are 14 constraint sets.
It may be noted that in this example the same 5 displacement constraints apply to all the 14 load cases and
therefore only 5 constraints would have sufficed.
Step 6: Creation of Constraint Sets
a.Selecting Action : Create; Object : Constraint, Solution : Linear Static
b.Enter a Constraint Set Name.
c.Selecting the appropriate constraints from the Constraints to be included list.
d.Click Apply .Load
Case Grid 76095 Grid 76096 Grid 76419 Grid 76420 Grid 76421
1 loadcase1grid1 loadcase1grid2 loadcase1grid3 loadcase1grid4 loadcase1grid5
2 loadcase2grid1 loadcase2grid2 loadcase2grid3 loadcase2grid4 loadcase2grid5
3 loadcase3grid1 loadcase3grid2 loadcase3grid3 loadcase3grid4 loadcase3grid5
4 loadcase4grid1 loadcase4grid2 loadcase4grid3 loadcase4grid4 loadcase4grid5
5 loadcase5grid1 loadcase5grid2 loadcase5grid3 loadcase5grid4 loadcase5grid5
6 loadcase6grid1 loadcase6grid2 loadcase6grid3 loadcase6grid4 loadcase6grid5
7 loadcase7grid1 loadcase7grid2 loadcase7grid3 loadcase7grid4 loadcase7grid5
8 loadcase8grid1 loadcase8grid2 loadcase8grid3 loadcase8grid4 loadcase8grid5
9 loadcase9grid1 loadcase9grid2 loadcase9grid3 loadcase9grid4 loadcase9grid5
10 loadcase10grid1 loadcase10grid2 loadcase10grid3 loadcase10grid4 loadcase10grid3
11 loadcase11grid1 loadcase11grid2 loadcase11grid3 loadcase11grid4 loadcase11grid3
12 loadcase12grid1 loadcase12grid2 loadcase12grid3 loadcase12grid4 loadcase12grid3
13 loadcase13grid1 loadcase13grid2 loadcase13grid3 loadcase13grid4 loadcase13grid3
14 loadcase14grid1 loadcase14grid2 loadcase14grid3 loadcase14grid4 loadcase14grid3&lt;/p&gt;
&lt;p&gt;419 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-47  Creation of Constraint Set
Step 7: Creation of Design Study
Finally, a Design Study is created by selecting the created Design Variables, Objective, Constraints and
Constraint Sets.
a.Select Action : Create; Object : Design Study and enter a Design Study Name.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples420
Main Index
b.One by one, click all the tabs in the Design Study Setup section and select all the listed quantities
in the forms (Select Design Variables, Select Objective, Select Constraints and  Select Constraint
Sets).
c.Input 0.3 for the Initial Design Value
Figure 7-48  Creation of Design Study
Step 8: Creation of an Analysis Deck
a.Click Analysis .
b.In the Analysis form, select Action : Optimize; Object : Entire Model; Method : Analysis Deck.
c.Click the Design Study Select  tab and select ds1 (name of created design study) from the Existing
Design Studies form.
d.Click the Global Obj./ Constr. Select  tab and select avgcomp in Select an existing Global
Objective list and mass in Select Existing Global Constraint(s) list.&lt;/p&gt;
&lt;p&gt;421 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-49  Creation of Analysis Deck
Step 9: Setting up of Optimization Parameters
a.Click the Optimization Parameters tab.
b.Select the Print Objective and Design Variables, Print Properties, Print all Constraints and Print
all Responses check boxes.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples422
Main Index
Figure 7-50  Setting up Optimization Parameters
Step 10: Creation and Selection of Subcases
Subcases will be created and the appropriate load cases and constraint sets will be associated with the subcases.
Then the created subcases will be selected for the current job.
a.Click the Subcase tab.
b.In the Subcase Create form, select Solution Type: 101 LINEAR STATIC.
c.Enter Subcase Name as subcase1.
d.Click the Select Constraints/Objective  tab.
e.In the form, select loadcase1 from the Select Existing Constraint Sets list.
f.Click OK.
g.Click Apply .
Similarly create 13 more subcases by associating the remaining 13 load cases in sequence.
h.Click the Subcase Select tab.&lt;/p&gt;
&lt;p&gt;423 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
i.Select Subcases 1 to 14 from the Subcases Available list.
j.Click OK.
k.Click Apply  to generate the Analysis Deck.
This ends the Preprocessing section.
Figure 7-51  Creation of Subcases
Now run the deck with MSC Nastran which will generate the (.des) elemental density distribution file.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples424
Main Index
Creating Iso Surfaces using Patran Insight
This section illustrates how to use the Insight tool to create a smooth topology and iso surface(s)
for density.
Click Tools, Design Study, Post Process and then select Action : Read Results. Then click the Select Results
File tab to select the required .des file.
Step 1: Setting Insight Preferences for better Visual effect
a.Click the Insight  button on the toolbar. Click the Preferences menu and select  Insight
b.In the Insight Preferences form, select Display Method : Shaded; Edge Color : Black, Face Color:
Gray; Background Color : White
c.Click Apply .
Figure 7-52  Insight Preferences
Step 2: Initiating the Insight T ools for creating Isosurface
a.Click Insight .
b.In the Insight Tools form, select Action : Create; Tool : Isosurface.
c.Select the Result radio button in the Isosurface Value section.&lt;/p&gt;
&lt;p&gt;425 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
d.Click the Results Selection  tab.
e.In the Results Selection form, select one or more Current Load Case(s). Click the Update Results&lt;br&gt;
tab. Following this action, results will be updated into the Isosurface Result list.
f.Select Topology Optimization, Element Density Distribution from the Isosurface Results list.
g.Click the Result Options  tab.
h.Select the last load case from the Select Default Load Case list.
i.Click the Isovalue Setup  tab.
j.Input an isovalue directly into the Isovalue box or through the slider bar.
k.Click OK to close the Results Selection form.
l.Click the Isosurface Attributes tab.
m.In the form, select Color : Red, select the Clip in the isosurface box . Select Display : Free Edge and
Shaded.
n.Click OK.
o.Click Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples426
Main Index
Figure 7-53  Creating Isosurface&lt;/p&gt;
&lt;p&gt;427 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-54  Setting Isovalue&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples428
Main Index
Figure 7-55  Isosurface Attributes
The following Isosurface appears on clicking Apply.
Figure 7-56  Isosurface&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P23</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_023/</guid>
      <description>
        
        
        &lt;p&gt;429 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Step 3: Insight Control
This enables user to see different isosurfaces dynamically
a.Click Insight Control Isosurface Controls
b.Form Action : Immediate
c.Slide the Isovalue slider bar to dynamically view the isosurface changes.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples430
Main Index
Figure 7-57  Isosurface Control
Topology Optimization Input Deck for MSC Nastran
The input data related to the T opology Optimization model is given in Listing 7-8.
The TOPVAR entries define five topological design parts with XINIT (initial design)=0.3 that matches the
mass target so the initial design is feasible (reduce CPU time spent on optimizer).
In order for a structural response to be used either as an objective or a constraint, it first must be identified
on a DRESPi Bulk Data entry. The DRESP1 entries 200-213, for example, identify the compliance.&lt;br&gt;
DRSPAN  and SET Case Control Commands are then used to select one compliance DRESP1 entry for each
subcase that is used in DRESP2=1000 response.  The equation response DRESP2=1000 with the attribute
FUNC=AVG spans all subcases to calculate averaged compliance of the structure. A Case Control Command
DESOBJ selects DRESP2=1000 to be an objective.
DRESP1=500 defines a fractional mass response. This mass target is imposed by the upper bound on the
DCONSTR=50 entry. As always, fractional mass constraints should be applied at the global level in a design
optimization by using DESGLB. Separate DRESP1 entries 1 -5 identify displacements responses at grid
points. There responses are constrained by the bounds set using a corresponding set of DCONSTR entries.&lt;/p&gt;
&lt;p&gt;431 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Listing 7-8  Input File for Engine Mount
analysis=statics
set 1 = 200
set 2 = 201
set 3 = 202
set 4 = 203
set 5 = 204
set 6 = 205
set 7 = 206
set 8 = 207
set 9 = 208
set 10 = 209
set 11 = 210
set 12 = 211
set 13 = 212
set 14 = 213
DESOBJ = 1000
DESGLB = 50
DESSUB = 1
$ Direct Text Input for Global Case Control Data
$ $======================================================================$
$======================================================================
SUBCASE 1
LOAD = 1
DRSPAN = 1
SUBCASE 2
LOAD = 2
DRSPAN = 2
SUBCASE 3
LOAD = 3
DRSPAN = 3
SUBCASE 4
LOAD = 4
DRSPAN = 4
SUBCASE 5
LOAD = 5
DRSPAN = 5
SUBCASE 6
LOAD = 6
DRSPAN = 6
SUBCASE 7
LOAD = 7
DRSPAN = 7
SUBCASE 8
LOAD = 8
DRSPAN = 8
SUBCASE 9
LOAD = 9
DRSPAN = 9
SUBCASE 10
LOAD = 10
DRSPAN = 10
SUBCASE 11
LOAD = 11
DRSPAN = 11
SUBCASE 12
LOAD = 12
DRSPAN = 12
SUBCASE 13
LOAD = 13
DRSPAN = 13
SUBCASE 14
LOAD = 14
DRSPAN = 14
$======================================================================
BEGIN BULK
$&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples432
Main Index
$23456781234567812345678123456781234567812345678123456781234567812345678
DCONSTR  1       1      -6.      6.0
DCONSTR  1       2      -6.      6.0
DCONSTR  1       3      -6.      6.0
DCONSTR  1       4      -6.      6.0
DCONSTR  1       5      -6.      6.0
DCONSTR  50      500             .3
TOPVAR,    1  ,    psolid,      Psolid, .3, , , ,   1
TOPVAR,    2  ,    psolid2,     Psolid, .3, , , ,   2
TOPVAR,    3  ,    psolid3,     Psolid, .3, , , ,   3
TOPVAR,    4  ,    psolid8,     Psolid, .3, , , ,   8
TOPVAR,    5  ,    psolid9,     Psolid, .3, , , ,   9
TOPVAR,    6  ,    psolid10,    Psolid, .3, , , ,  10
$234567812345678123456781234567812345678123456781234567812345678
DRESP1  500      w       FRMASS
DRESP1   1       d       disp                   123             76095
DRESP1   2      d1       disp                   123             76096&lt;br&gt;
DRESP1   3      d2       disp                   123             76419
DRESP1   4      d3       disp                   123             76420
DRESP1   5      d4       disp                   123             76421
$234567812345678123456781234567812345678123456781234567812345678
DRESP1, 200,    COMP1,      COMP
DRESP1, 201,    COMP2,      COMP
DRESP1, 202,    COMP3,      COMP
DRESP1, 203,    COMP4,      COMP
DRESP1, 204,    COMP5,      COMP
DRESP1, 205,    COMP6,      COMP
DRESP1, 206,    COMP7,      COMP
DRESP1, 207,    COMP8,      COMP
DRESP1, 208,    COMP9,      COMP
DRESP1, 209,    COMP10,     COMP
DRESP1, 210,    COMP11,     COMP
DRESP1, 211,    COMP12,     COMP
DRESP1, 212,    COMP13,     COMP
DRESP1, 213,    COMP14,     COMP
$234567812345678123456781234567812345678123456781234567812345678
DRESP2   1000     COMPL     AVG&lt;br&gt;
DRESP1   200      201    202     203     204      205    206
207      208    209     210     211      212    213
A topology result shown in Figure 7-58 is obtained by MSC Nastran. The Topology Optimization design
proposal is smoothed by Patran.&lt;/p&gt;
&lt;p&gt;433 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-58  Front-Mount-Beam Topology Optimization Proposal
Topology Optimization with Glued Contact
Summary
ATTRIBUTE VALUE
Title Glued Contact
Topology Optimization features T opology Optimization with glued contact
Geometry
Material E = 2.1 E+11 Pa, µ=0.3, and RHO=7800&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples434
Main Index
Introduction
This problem has two solids glued together along a transverse plane to form a cantilever. The composite
cantilever is used to demonstrate Topology Optimization with glued contact. The objective is to minimize
the compliance subject to mass constraint of 0.3 (70% weight reduction). The loading and boundary
conditions are shown in Figure 7-59. The structure is modeled with 1683 CHEXA elements of PSOLID=1
property and 975 CHEXA elements with PSOLID=2 property. (Refer topoug5.dat in TPL).
Figure 7-59  Composite Cantilever with two solids permanently glued
Solution Requirements
Design Model Description
Objective:       Minimize compliance
Topology design region: PSOLID1 and PSOLID2
Constraints:     Mass target = 0.3 (i.e., mass savings 70%)Analysis Statics
Boundary conditions Fixed at one end
Applied loads Distributed upward load at lower edge of free end
Element types CHEXA
T opology result Material distributionATTRIBUTE VALUE&lt;/p&gt;
&lt;p&gt;435 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
The solution demonstrates:
Topology Optimization with glued contact
Optimization Solution
The input data for this example related to Topology Optimization model is given in  the test problem library
(tpl\topex_07\topoug5.dat ). A snippet of this file is shown in Listing 7-9. T wo TOPVAR entries are
used to define two topological design regions identified by PSOLID=1 and PSOLID=2. XINIT=0.3 on the
TOPVAR entries match the mass target constraint so that the initial design is feasible. The rest of the values
on the TOPVAR entry are default values that are recommended for general T opology Optimization
applications. Type one design responses DRESP1 = 2 and 10 identify fractional mass and compliance
respectively. DCONSTR= 1 specifies the mass target. DESOBJ=10 in Case Control Command selects
DRESP1=10 entry to be used as a design objective (minimization as default) and DESGLB selects the design
constraint DCONSTR= 1 to be applied in this Topology Optimization task.
Case Control Command BCONTACT =888 selects the Bulk Data Entry BCTABLE. Value 1 in field 5 of
first line in BCTABLE entry indicates that 1 set of secondary/primary e ntries is entered. “SECNDRY”
indicates touching body and “PRIMARY” i ndicates touched body. The presence of BCONTACT above the
Subcase and value of 1 in field 8 (IGLUE) of “SECNDRY” l ine in BCTABLE entry indicate that there is
Permanent Glued Contact between the two bodies. The first entries 1001 and 2001 in “SECNDRY” a nd
“PRIMARY”  lines respectively in BCTABLE entry are referenced by the two BCBODY entries with the
corresponding IDs. Field 5 in BCBODY entries contains the IDs of BSURF entries which define the
deformable surfaces identified by element IDs. In this problem deformations are small and linear.
Listing 7-9  Input File for Glued Contact
DESOBJ = 10
DESGLB = 1
BCONTACT = 888
smethod=element
ANALYSIS = STATICS
$ Direct Text Input for Global Case Control Data
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
SPC = 2
LOAD = 2
BEGIN BULK
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-0
BCTABLE 888                     1                                       +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  SECNDRY 1001    0.1                             1               +
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  PRIMARY 2001 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ &amp;hellip;&amp;hellip;
$
DCONSTR  1       2               .3
TOPVAR   1       PSOLID  PSOLID .3                               2
TOPVAR   2       PSOLID  PSOLID .3                               1
DRESP1   2       FRM     FRMASS
DRESP1   10      COMP    COMP&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples436
Main Index
$ Direct Text Input for Bulk Data
$ Elements and Element Properties for region : p1
PSOLID   1       1       0
BCBODY   1001    3D      DEFORM  3       0
BSURF    3       115     116     117     118     119     120     121
122     123     124     125     126     127     128     129
$ &amp;hellip;&amp;hellip;
BCBODY   2001    3D      DEFORM  4       0
BSURF    4       1798    1799    1800    1801    1802    1803    1804
1805    1806    1807    1808    1809    1810    1811    1812
$ &amp;hellip;&amp;hellip;
Figure 7-60 shows the topology optimized result by using Patran.
Figure 7-60  Glued Contact Topology Design
We can also set different fractional mass constraints for the two topological design regions. We will do this
using Patran.
Step 1: Import the deck (model including contact information)
Step 2: Set up deck using T optomize
a.Click Analysis.  Select Create : Toptomize, Object : Entire Model, Method : Analysis Deck.
b.Click the Objectives and Constraints  tab.
c.In the Objectives and Constraints form, select Type : Topology, Objective Function : Minimize
Compliance and Constraint Target : Mass Fraction.&lt;/p&gt;
&lt;p&gt;437 Chapter 7: Topology, Topometry and Topography Optimization
Application Examples
Main Index
Figure 7-61  Initiating Toptomize
d.Click the Design Domain tab.
e.In the Design Domain form, click p1 and p2 from Valid Properties list .
f.Change the fractional mass target of p1 to 0.2 and of p2 to 0.4 on the Design Domain Selected
Properties table.
g.Click OK.
h.Click the  Subcase Select  tab and select the default subcase. Click OK.
i.Click Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Application Examples438
Main Index
Figure 7-62  Setting multiple mass targets&lt;/p&gt;
&lt;p&gt;439 Chapter 7: Topology, Topometry and Topography Optimization
Anisotropic Materials in 3D Solid Topology Optimization
Main Index
Figure 7-63  Selecting Subcase
Anisotropic Materials in 3D Solid Topology Optimization
Topology optimization can be applied to anisotropic materials. It is important to realize the topology
optimization employs the relationships of Equation (7-1) to scale the mass and stiffness matrices, not the
properties provided on the MATx entry. Therefore, the final design is used to suggest where to place the
material for the structure but does not represent a sized structure as is produced in the sizing or shape
optimization features of SOL 200. One benefit from the support of anisotropic materials is that, when the
strength is along the given direction, a relatively light weight and cost-efficient design may be achievable.
The model ( ..\tpl\topex_20\topmat9_1.dat ) of Figure 7-64 is a disc brake with three PSOLID
properties assigned to different regions so that the design region can be easily selected and defined during
topology optimization. The objective is to minimize the total compliance across four subcases subject to an
FRMASS constraint of 0.3 (70% weight reduction). The loading and boundary conditions are represented
in Figure 7-64. Four distinct pressure loads are applied at the outer layer of rotor disc. The PSOLID properties
highlighted in green in the image contain the design region of interest which encompasses 13315 CHEXA
elements with assigned property PSOLID=2 .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Anisotropic Materials in 3D Solid Topology Optimization440
Main Index
Figure 7-64  Initial Mesh for Disk Brake
After 25 design cycles the job converges and a representative isosurface result is shown in Figure 7-65.
Figure 7-65  Isosurface Results for Disk Brake&lt;/p&gt;
&lt;p&gt;441 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
Topometry Optimization
Introduction
Topometry optimization is an element-by-element sizing optimization. Unlike conventional sizing
optimization where all elements referencing a property entry are grouped as one design variable, each
designable element has an independent design variable in topometry optimization. Since element-by-element
optimization has many design variables, it may find a better design than conventional sizing optimization. In
typical sizing optimization, you can use the design variable Bulk Data entry DESVAR and the relation of
model property and design variables Bulk Data entry DVxREL1 to support element-by-element sizing
optimization. However, with this approach you must generate a unique property data entry for each element
and perhaps prepare thousands of DESVAR and DVPREL1 entries. With the topometry optimization
capability, you can utilize Bulk Data entry, TOMVAR, to select designable regions (model property or
material property identification number), design parameters (such as thickness of PSHELLs, or Young’s
Modulus of materials), input initial values, lower and upper bounds to perform element-by-element sizing
optimization. The program internally generates DESVAR and DVPREL1 (and/or DVMREL1) for each
designed element. The implementation provides a very simple user interface to do element-by-element sizing
design optimization. In addition, topometry optimization supports the fully stressed design algorithm in
MSC Nastran. FSD is very efficient for certain problems with many stress constraints.
Topometry optimization can be applied to all elements that can be resized through Bulk Data entries
DVPREL1 and DVMREL1. Those element types include not only volume-based elements like CQUAD4
but also non-volume elements like CWELD, CBUSH, and CFAST.
Topology optimization is another element-by-element optimization technology. However, topology
optimization and topometry optimization are fundamentally different. T opology optimization is a “0” or “1”
discrete element-by-element optimization methodology. T opology optimization can be used to decide which
element should be retained and which element should be discarded from the design space. One the other
hand, topometry optimization aims to get a continuous variation of the designed properties. Although
topometry optimization is not recommended for topology optimization tasks, it is observed topometry
optimization can be used to get “similar topological results” for some cases. It is particularly useful for non-
structural elements like CELAS, CFAST, and CBUSH that MSC Nastran topology optimization does not
support.
In a single optimization problem, you can resize (or shape, topology) certain properties while topometry
optimizing other properties.
Benefits
Topometry optimization is easy-to-use. One TOMVAR Bulk Data entry replaces many thousands
of DESVAR and DVxREL1 entries for large element-by-element design optimization problems.
Topometry optimization is good to identify critical design regions.
Topometry optimization is good to locate where to add/or remove material to improve structural
performance.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization442
Main Index
Topometry optimization is good for finding the optimal location of spot welds. In particular,
topometry optimization is very useful for some properties that MSC Nastran topology does not
support; for example, PDAMP, PELAS, PMASS, PBUSH, PVISC, PGAP, PACBAR, and PFAST.
TOMVAR
The TOMVAR Bulk Data entry is used to select a topometry designable region and designed property name.
The initial, lower, and upper bound of the designed property value are also specified on the topometry entry.
The program automatically generates one design variable DVi for each element referencing a property PID.
The relationship between design variables DVi and the element property Pi given by
where Pi is the analysis model property value for the ith element. NE is the total number of elements&lt;br&gt;
referenced by the property PID. The user must input an initial value (such as the analysis model input
property value). The default of lower bound (XLB) on DVi is , and default of upper bound on
DVi (XUB) is .
The topometry Bulk Data entry is:
Format
Example 1
Design all element&amp;rsquo;s thickness referencing PSHELL ID = 5 with initial design = 10.0 ( t0 = 10.00 input
element thickness), lower bound  and upper bound .
Example 2
Design all element&amp;rsquo;s Young Modulus referred by PSHELL ID = 100 with initial design XINIT = 3.E+5,
XLB=1.0, and XUB= 1.0E+6.1 2 3 4 5 6 7 8 9 10
TOMVAR ID TYPE PID PNAME/
FIDXINIT XLB XUB DELXV
DLINK TID C0 C1
DDVAL DSVID
“STRESS” STLIM
“SYM” CID MS1 MS2 MS3 CS NCS SYMPID1
SYMPID2 -etc.- -etc.- SYMPIDn
TOMVAR 10 PSHELL 5 T 10.0PiDVi= i1NE,=
XLBDViXUB 
0.5DVi
1.5DVi
0.5t0 1.5t0&lt;/p&gt;
&lt;p&gt;443 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index&lt;/p&gt;
&lt;p&gt;TOMVAR 10 PSHELL 100 E 3.E+5 1.0 1.E+6
Field Contents
ID Unique topometry design region identification number. (Integer &amp;gt; 0)
TYPE Property entry type. Used with PID to identify the elements to be designed. See
Remark 2. (Character: “PBAR”, “PSHELL”,  “PSOLID”, and “PCOMP”, etc.)
PID Property entry identifier (Integer &amp;gt; 0). This PID must be unique for PIDs referenced
by other TOPVAR, DVPREL1, DVPREL2, DVMREL1, and DVMREL2 entries.
Topometry, topology, and sizing variables cannot share the same properties. (Integer &amp;gt;
0). Combined topometry, topology, topography, sizing, and shape variables are
allowed.
PNAME/FID Property name or property material name, such as “T”, “A”, “E”, and “GE”, or field
position of the property entry or word position in the element property table of the
analysis model. Property names that begin with an integer such as 12I/T**3 may only
be referenced by field position. See Remark 2. (Character or Integer &amp;gt; 0.)
XINIT Initial value. (Real or blank, no Default).  Typically, XINIT is defined to match the
mass target constraint (so the initial design does not have violated constraints) or the
analysis model input property value.
XLB Lower bound. (Real or blank; Default = blank) . The default is XLB=0.5&lt;em&gt;XINIT.
XUB Upper bound. (Real or blank; Default = blank). The default is XLB=1.5&lt;/em&gt;XINIT .
DELXV Fractional change allowed for the design variable during approximate optimization.
See Remark 3. (Real &amp;gt; 0.0; Default = 0.5)
DDVAL Indicates that this line defines discrete TOMVAR variables.
DSVID DDVAL entry identifier. (Integer &amp;gt; 0)
DLINK Indicates that this line relates a ply thickness to another ply thickness.
TID TOMVAR entry identifier. (Integer &amp;gt; 0)
C0 Constant term. (Real; Default = 0.0)
C1 Coefficient term. (Real; no Default)
STRESS Indicates that this line defines a stress limit (at element center).
STLIM Von Mises stress upper bound (Real &amp;gt;0.0)
&amp;ldquo;SYM&amp;rdquo; Indicates these lines defines symmetry constraints See Remark 6.
CID Rectangular coordinate system ID used for specifying symmetry constraints. See
Remark 7.
(Integer ≥ 0; Default=0)
MSi Mirror symmetry plane. See Remark 8.(Character, &amp;lsquo;XY&amp;rsquo;, &amp;lsquo;YZ&amp;rsquo;, or &amp;lsquo;ZX&amp;rsquo;)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization444
Main Index
Remarks:
1.Multiple TOMVAR’s are allowed in a single file.
2.Property name or FID &amp;gt; 0 can be used for element property values just like a Bulk Data entry
DVPREL1. Only property name can be used for material property values like DVMREL1. If a
property name is shared by both property and material (such as “A” for PROD and MAT1), this
name is taken as a material name. The user must provide a FID for property name (FID=4 for
PROD). PCOMPG, PBEAML,  PBARL, PBMSECT, PBRSECT are not supported. If material
property name is selected, PSHELL (with multiple MID inputs) must reference a single material ID.
3.Combined topometry, topography, topology, sizing, and shape optimization is supported in a single
file. However, topometry and topology cannot reference the same property ID. It is possible to
topometry certain elements while sizing others. It is allowed, but rare, to simultaneously design the
same elements with topometry and desvar (sizing and/or shape) variables but topometry and sizing
cannot reference the same property name.
4.Topometry optimization with element response constraints are slow due to many design variables. In
this case, fully stressed design (FSD) can be used for certain problems.
5.“STRESS” limits can only be used for PTYPE=PSHELL and PNAME= T. The Von Mises stress (at
element center) constraints apply to all shell elements in both designed and non-designed regions. All
TOMVAR entries must have the same STLIM .
6.“SYM” (symmetry constraints) can only be used for PTYPE=PSHELL/PSOLID
7.Only CORD1R and CORD2R can be used as a referenced coordinate system to specify symmetry
constraints. Only one reference coordinate system CID is allowed for each TOMVAR entry. The
default is the basic coordinate system.
8.One, two or three different mirror symmetry planes can be present (such as MS1=XY, MS2=YZ, and
MS3=ZX).
9.The first cyclic symmetry segment starts at the X-axis when CS = Z (at Z-axis when CS = Y, and at
the Y-axis when
CS = X). This feature can also be used for &amp;lt; 360 degrees but NCS must be given in 360 degrees.
Output
A regular SOL 200 summary table is produced. In addition, a Patran element result file jobname.des contains
the optimal design values for each element. This Patran element result file can be imported to Patran or other
post-processors to display topometry optimization results. CS Cyclic symmetry axis. (character X, Y, Z). See Remark 9.
NCS Number of cyclic symmetric segments in 360 degrees (Integer &amp;gt; 0). See Remark 9.
SYMPIDn Additional property IDs that are symmetric to PID (Integer&amp;gt;0)Field Contents&lt;/p&gt;
&lt;p&gt;445 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
Guidelines and Limitations
MSCADS, method=4 (SUMT) is recommended for topology, topometry and topography
optimization with many constraints through the optimization control Bulk Data entry DOPTPRM.
Since SOL 200 adjoint design sensitivity analysis method does not support element responses (such
as stress), a direct design sensitivity analysis method is automatically selected for problems with
element response constraints. In this case, topometry optimization with element response constraints
are slow due to many design variables. Fully stressed design (FSD) can be used for certain problems.
Topometry optimization can be used for analysis model properties PDAMP, PELAS, PMASS,
PBUSH, PVISC, PGAP, NSM, NSM1, PACBAR and PFAST. Topology optimization is limited to
analysis properties that can reference material property MAT1.
P2 &amp;gt; 13 on DOPTPRM prints design variables in *.f06.
The symmetry constraint can only be used for PTYPE=PSHELL and PSOLID for topometry
optimization, in particularly for shell thickness. The geometry and mesh for designed property
should be reasonably symmetric.
Example 1 - Three-bar Truss (tomex1.dat)
A simple sizing optimization example three-bar truss (a TPL file DSOUG1.dat) is adapted here to
demonstrate topometry optimization solved by the fully stressed design algorithm. Figure 7-66 shows the
three-bar truss that must withstand two separate loading conditions. The objective is to minimize structural
weight subject to displacement and stress constraints. The sizing design variables are the cross-sectional areas.
The detailed descriptions of analysis model and design optimization model can be seen in the three bar truss
Figure 7-66.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization446
Main Index
Figure 7-66  Three Bar Truss
The goal of this example is to show an alternate method of setting design variables by a TOMVAR entry. The
objective and constraints are not changed. In conventional sizing optimization, the set of DESVAR and
DVPREL1 entries define the relations Ai=1.0Xi (i=1, 2, 3) where A is the rod element cross-sectional area
and X is the design variable. In DSOUG1.dat, we have:
$&amp;hellip;DESIGN VARIABLE DEFINITION
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV(OPTIONAL)
DESVAR  1       A1      1.0     0.1     100.0
DESVAR  2       A2      2.0     0.1     100.0
DESVAR  3       A3      1.0     0.1     100.0
$
$&amp;hellip;DEFINITION OF DESIGN VARIABLE TO ANALYSIS MODEL PARAMETER $RELATIONS
$DVPREL1 ID     TYPE    PID     NAME    PMIN    PMAX    C0              +
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 10      PROD    11      A
1       1.0
DVPREL1 20      PROD    12      A
2       1.0
DVPREL1 30      PROD    13      A
3       1.0
In DSOUG1.dat, rod elements 11 and 12 have different property groups. Then, the DLINK entry is used
to explicitly link the design variables 1 and 3 together. In this example, we try to do element-by-element
optimization. Thus, we take three design variables (rod element cross-sectional areas) as independent
variables. The rod elements 1 and 3 have the same property group (PROD=1). TOMVAR entry 1
(Listing 7-10) is used to define two independent design variables with an initial value = 1.0 (and element cross-
sectional area = 1.0) for rod element 11 and 13 respectively. This is equivalent to four entries in
DSOUG1.dat:&lt;/p&gt;
&lt;p&gt;447 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
DESVAR  1       A1      1.0     0.1     100.0
DESVAR  3       A3      2.0     0.1     100.0
DVPREL1 10      PROD    11      A
1       1.0
DVPREL1 30      PROD    13      A
3       1.0
TOMVAR entry 2 ( Listing 7-10) is used to define one independent design variable with an initial value = 2.0
(and element cross-sectional area = 2.0) for rod element 12. This is equivalent to two entries in
DSOUG1.dat:
DESVAR  2       A2      2.0     0.1     100.0
DVPREL1 20      PROD    12      A
2       1.0
Input
The input data for this example is given in Listing 7-10.
Listing 7-10  Input File for Example 1
ID MSC  TOMEX1 $
TIME  10      $
SOL 200       $  OPTIMIZATION
CEND
TITLE = THREE BAR TRUSS TOPOMETRY  OPTIMIZATION
SUBTITLE = 3 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
ECHO        = SORT
SPC         = 100
DISP        = ALL
STRESS      = ALL
DESOBJ(MIN) = 20 $  (DESIGN OBJECTIVE = DRESP ID)
DESSUB      = 21 $  DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS    = STATICS
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD  = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD  = 310
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$ GRID DATA
$       2       3       4       5       6       7       8       9       10
GRID    1               -10.0     0.0   0.0
GRID    2                 0.0     0.0   0.0
GRID    3                10.0     0.0   0.0
GRID    4                 0.0   -10.0   0.0
$ SUPPORT DATA
SPC1    100     123456  1 THRU 3
$ ELEMENT DATA
CROD    1       11      1       4
CROD    2       12      2       4
CROD    3       11      3       4
$ PROPERTY DATA
PROD    11      1       1.0
PROD    12      1       2.0
MAT1    1       1.0E+7          0.33    0.1
$ EXTERNAL LOADS DATA
FORCE   300     4               20000.   0.8    -0.6&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization448
Main Index
FORCE   310     4               20000.  -0.8    -0.6
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;DESIGN TOPOMETRY DESIGN DEFINITION
$TOMVAR, ID,  PRYPE, PID, PNAME,  XINIT,  XLB,    XUB,  DELXV(OPTIONAL)
TOMVAR,   1 , PROD,  11,  4    ,     1.,  .1 ,   100.0
TOMVAR,   2 , PROD,  12,  4    ,     2.,  .1 ,   100.0
$
$&amp;hellip;STRUCTURAL RESPONSE IDENTIFICATION
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
DRESP1  20      W       WEIGHT
DRESP1  21      U4      DISP                    12              4
DRESP1  23      S1      STRESS  PROD            2               11
12
$&amp;hellip;CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 21      21      -0.20   0.20
DCONSTR 21      23      -15000. 20000.
$
$&amp;hellip;OPTIMIZATION CONTROL (FULLY STRESSED DESIGN):
$
DOPTPRM FSDMAX   20       DESMAX   0      P1      1       P2      15
$
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
ENDDATA
Output
A regular SOL 200 output can be found as:&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
                                                  (HARD CONVERGENCE ACHIEVED)
                                   NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          17
                                   NUMBER OF FULLY STRESSED DESIGN CYCLES COMPLETED     16
                                   NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     0
                                          OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number------------optimization---------------analysis--------------approximation-------------constraint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number------------optimization---------------analysis--------------approximation-------------constraint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INITIAL 4.828427E+00                                     -3.234952E-01
1               FSD                    3.862742E+00               N/A                   -1.543690E-01
2               FSD                    3.225798E+00               N/A                   -7.883203E-03
&amp;hellip;.
&amp;hellip;.
&amp;hellip;.
&amp;hellip;.
16               FSD                    2.741757E+00               N/A                    1.664062E-04
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL| EXTERNAL |
DV. ID. | ELEMENT ID | LABEL | INITIAL : 1 : 2 : 3 : 4 : 5&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id--element-id--label--initial--1--2--3--4--5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id--element-id--label--initial--1--2--3--4--5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;1 | 1 | TOMVAR | 1.0000E+00 : 8.0000E-01 : 6.8794E-01 : 6.8306E-01 : 6.9978E-01 : 7.2284E-01
2 | 3 | TOMVAR | 1.0000E+00 : 8.0000E-01 : 6.8794E-01 : 6.8306E-01 : 6.9978E-01 : 7.2284E-01
3 | 2 | TOMVAR | 2.0000E+00 : 1.6000E+00 : 1.2800E+00 : 1.0240E+00 : 8.1920E-01 : 6.5536E-01&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3--2--tomvar--20000e00--16000e00--12800e00--10240e00--81920e-01--65536e-01&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3--2--tomvar--20000e00--16000e00--12800e00--10240e00--81920e-01--65536e-01&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P24</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_024/</guid>
      <description>
        
        
        &lt;p&gt;449 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
Example 2 – Car Model Topometry Design
A real complex example car body is used here to demonstrate topometry optimization for graphical post-
processing.  This example also shows that SOL 200 is able to deal with very large optimization problems. The
objective is to minimize structural compliance and keep weight unchanged. SOL 200 produces an element
thickness distribution file *.des that can be used by Patran or other post-processors to view topometry
optimization results.
Figure 7-67  Optimal Thickness Distribution of Car Model
Example 3 - Mirror Symmetry Constraint Example
Representative results for example topm_cs2.dat are shown in Figure 7-68 through Figure 7-69. Figure 7-68
shows the initial design for the example that has symmetric boundary conditions but unsymmetric loads. The
objective is to minimize structural compliance (i.e., total strain energy) with 60% mass reduction. The shell
thickness design variable has initial value 0.003, lower bound and upper bound are 0.001 and 0.004
respectively. All designed element thickness referencing PSHELL PID= 1 must be symmetric about YZ plane.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization450
Main Index
Figure 7-68  Loads and Boundary Conditions for Example topm_cs2.dat
The input data for this example related to topometry optimization model is given in Listing 1. The coordinate system
CORD2R = 1 is created to be used to specify mirror symmetric constraints.
Listing 1&lt;/p&gt;
&lt;p&gt;451 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
Figure 7-69  Shell Element Thickness Distribution for topm_cs2.dat
Figure 7-69(a) shows the optimal design result (shell element thickness distribution) when there is no symmetry
constraint applied. Clearly, the optimal design is unsymmetric. Figure 7-69(b) shows the optimal design result
when there is a symmetry constraint applied on the designed PSHELL. Obviously, the optimal design is
symmetric about YZ plane in coordinate system CORD2R = 1 although the loading is unsymmetric.
Post-processing Topometry Results
1.Read in the model through File-&amp;gt;Import
2.Click File-&amp;gt; Import and in the Import form select Objects: Results and Format: Patran 2 .els…
3.In the Template for PATRAN 2.5 Import Results form select res_templates in Look in and then
topo.res_tmpl  from the list. Then click OK.
4.Click cancel to close the Import form
(b): With Symmetry Constraint (a) Without Symmetry Constraint&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization452
Main Index
5.Read jobname.des (in case of plies, the results are jobname.ply000n): Click Tools-&amp;gt;Design Study-&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Post Process and select Action: Read Results, Object: Result Entities, Method: DES and then click
Select Result files. After selecting the desired .des or .ply000n file, click OK and then Apply.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;453 Chapter 7: Topology, Topometry and Topography Optimization
Topometry Optimization
Main Index
6.Click Results and in the Results form select Action:Create, Object:Fringe, the desired design cycle in
Select Result Cases, Topology Optimization, Element Density in Select Fringe Result and then click
Apply. See image below.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topometry Optimization454
Main Index&lt;/p&gt;
&lt;p&gt;455 Chapter 7: Topology, Topometry and Topography Optimization
Topography (Bead or Stamp) Optimization
Main Index
Topography  (Bead or Stamp) Optimization
Introduction
Topography optimization (also called bead or stamp optimization) is used to generate a design proposal for
reinforcement bead patterns. T opography optimization is treated as a special shape optimization and built on
SOL 200 shape optimization technology. In topography optimization, finite element grids are moved as
normal vectors to the shell surface or the user&amp;rsquo;s given direction. Internally, shape design variables and shape
basis vectors are generated automatically based on your provided bead dimensions (minimum bead width,
maximum bead height, and draw angle). Since many design variables are generated in the topography
optimization, the adjoint design sensitivity analysis method and large scale optimizer play key roles in solving
topography optimization problems.
Benefits
Topography optimization is particularly powerful for designing sheet metal parts.
Topography optimization can be used for all SOL 200 analysis types such as statics, normal modes,
buckling, complex eigenvalue, dynamic frequency response, transient response and aeroelastic
analyses.
BEADVAR
The BEADVAR Bulk Data entry is used to define topography design regions.
1 2 3 4 5 6 7 8 9 10
BEADVAR ID PTYPE PID MW MH ANG BF SKIP
“DESVAR” NORM/XD YD ZD CID XLB XUB DELXV
“GRID” NGSET DGSET
Field Contents
ID Unique topography design region identification number. (Integer &amp;gt; 0)
PTYPE Property entry type. Used with PID to identify the element nodes to be
designed. (Character: “PSHELL”, “PSHEAR”, “PCOMP”, or “PCOMPG”.)
PID Property entry identifier. See Remark 1. (Integer &amp;gt; 0)
MW Minimum bead width.  This parameter controls the width of the beads. The
recommended value is between 1.5 and 2.5 times the average element width.
See Remark 2. (Real &amp;gt; 0.0)
MH        Maximum bead height (Real &amp;gt; 0.0). This parameter sets the maximum height
of the beads when XUB=1.0 (as Default). See Remark 2.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topography (Bead or Stamp) Optimization456
Main Index
ANG Draw angle in degrees (0.0 &amp;lt; Real &amp;lt; 90.0). This parameter controls the angle
of the sides of the beads. The recommended value is between 60 and 75
degrees.
BF Buffer zone (&amp;lsquo;yes&amp;rsquo; or &amp;rsquo;no&amp;rsquo;; Default=&amp;lsquo;yes&amp;rsquo;). This parameter creates a buffer zone
between elements in the topography design region and elements outside the
design region when BF=&amp;lsquo;yes&amp;rsquo;. See Remark 3.
SKIP Boundary skip (“bc”, “load”, “both”, or “none”; Default = “both”). This
parameter indicates which element nodes are excluded from the design region.
“bc” indicates all nodes referenced by “SPC” and “SPC1” are omitted from the
design region. “load” indicates all nodes referenced by “FORCE”, “FORCE1”,
“FORCE2”, “MOMENT”, “MOMENT1”, “MOMENT2”, and “SPCD”
are omitted from the design region. “both” indicates nodes with either “bc” or
“load” are omitted from the design region. “none” indicates all nodes
associated with elements referencing PID specified in field 4 are in the design
region.
“DESVAR” Indicates that this line defines bead design variables that are automatically
generated.
NORM/XD, YD, ZD Bead vector (draw direction). Norm indicates the shape variables are created in
the normal directions to the elements. If XD, YD, and ZD are provided, the
shape variables are created in the direction specified by the xyz vector defied by
XD/YD/ZD that is given in the basic coordinate system or CID. See Remark
4. (Character or Real, Default = blank = norm).
CID Coordinate system ID used for specifying draw direction (Blank or Integer &amp;gt;
0; Default = blank = basic coordinate system)
XLB Lower bound. (Real &amp;lt; XUB or blank; Default = blank = 0.0). This ensures the
lower bound on grid movement equal to XLB&lt;em&gt;MH. See Remark 5.
XUB Upper bound. (Real &amp;gt; XLB or blank; Default = 1.0). This sets the upper bound
of the beads equal to XUB&lt;/em&gt;MH. See Remark 5.
DELXV Fractional change allowed for the design variable during approximate
optimization. See Remark 3. (Real &amp;gt; 0.0; Default = 0.2)
“GRID” Indicates this line defines what element nodes can be added and/or removed
from topography design regions.
NGSET All grids listed on Bulk Data entry SET1 = NGSET are removed from
topography design regions.
DGSET All grids listed on Bulk Data entry SET1 = DGSET are added to topography
design regions.Field Contents&lt;/p&gt;
&lt;p&gt;457 Chapter 7: Topology, Topometry and Topography Optimization
Topography (Bead or Stamp) Optimization
Main Index
Remarks:
1.Multiple BEADVAR’s are allowed in a single file. Combined topometry, topology, topography,
sizing, and shape optimization is supported in a single file.
2.The user can provide allowable bead dimensions.
3.It is recommended to set buffer zone = yes to maintain a good quality of mesh during topography
optimization.
4.The grids moves in the normal direction. All element grids referenced by one BEADVAR entry must
follow the right hand rule. MW
MH
ANG
Bead Dimensions
Design elements
Buffer zone
Nondesign elementsNo buffer zone
Nondesign elements&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topography (Bead or Stamp) Optimization458
Main Index
5.To force the grids to move only in the positive bead vector direction (one side of the surface), use XLB
= 0.0. To force the grids to move only in the negative bead vector direction (another side of the
surface), use XUB = 0.0.  To allow girds to move in both positive and negative bead vector directions,
use XLB &amp;lt; 0.0 and XUB &amp;gt; 0.0. For example,Element NormalElement normal vectors
Baseline surfaceOptimized
surface
User defined draw vector
Baseline surfaceOptimized
surface
User’s Provided Draw Direction&lt;/p&gt;
&lt;p&gt;459 Chapter 7: Topology, Topometry and Topography Optimization
Topography (Bead or Stamp) Optimization
Main Index
6.The jobname.h5 (with setting MDLPRM,HDF5,0) has topography results (shape change) that can
be viewed by Patran. The text file jobname.pch also has updated grid coordinates that can be copied
to the original file, replace the original grids, and imported to Patran and other post-processors to view
topography optimization results.
Outputs
A regular SOL 200 design history summary table is produced. The jobname.h5 (with setting
MDLPRM,HDF5,0)  and jobname.pch can be imported to Patran and other post-processors to view
topography optimization results.
Guidelines and Limitations
MSCADS, method=4 (SUMT) is recommended for many constraint problems through the
optimization control Bulk Data entry DOPTPRM.
Since SOL 200 adjoint design sensitivity analysis method does not support element responses (such
as stress), a direct design sensitivity analysis method is automatically selected for problems with
element response constraints. In this case, topography optimization with element response
constraints is slow.
Since adjoint design sensitivity analysis does not support rigid body elements (RBE1, RBE2, RBE3,
RROD, RBAR, RTRPLT, RSPLINE), all grids connected to rigid body elements must be fixed in
topography optimization for static and dynamic frequency response analyses.
The minimum bead width and maximum bead height have significant effects on optimal designs. A
smaller minimum bead width results in more small beads.
Mesh distortion is a challenge for topography optimization. It is recommended that a relatively
coarse mesh be used for highly curved areas. Bead VectorBead Vector
Optimized SurfaceBase Surface
(a) XLB = 0.0 and XUB = 1.0 (b) XLB = -1.0 and XUB = 0.0 (c) XLB = -1.0 and XUB = 1.0Optimized Surface&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topography (Bead or Stamp) Optimization460
Main Index
P2 &amp;gt; 13 on DOPTPRM prints design variables in *.f06
Example 3 – A Square (togex1.dat)
A square model shown in Figure 7-70 is used to demonstrate topography optimization capabilities. The square
is modeled with quadrilateral plate elements (CQUAD4) and is fixed at all four edges. The objective is to
maximize the first frequency of the structure with a given bead dimension (minimum bead width = 10.0,
maximum bead height = 20.0, draw angle = 70.0).
Figure 7-70  A Square
Input
The input data for this example is given in Listing 7-11. The Bulk Data entry BEADVAR=1 defines the
topography designable region. It is noticed that element normals are used for bead vectors (draw direction)
and all grids associated with the boundary condition are fixed during optimization. PARAM, POST, -1
outputs results for Patran.
Listing 7-11  Input File for Example 2
$Topography opt example one
SOL 200
CEND
TITLE = MSC Nastran job created on 28-Nov-07
ECHO = NONE
$ Direct Text Input for Global Case Control Data
DESOBJ(MAX) = 1
SUBCASE 1
$ Subcase name : Default
SUBTITLE=Default
SPC = 2
METHOD = 1
DISPLACEMENT(SORT1,REAL,PLOT)=ALL
ANALYSIS=MODES
BEGIN BULK
EIGRL,1,,,20&lt;/p&gt;
&lt;p&gt;461 Chapter 7: Topology, Topometry and Topography Optimization
Topography (Bead or Stamp) Optimization
Main Index
$ Direct Text Input for Bulk Data
$ Elements and Element Properties for region : ps1
$
$ BEADVAR, ID, TYPE,   PID, MW, MH, ANG, BF, SKIP.
$
BEADVAR,   1   , PSHELL,   1,   10.,  20.0,  70.0, YES, BOTH
DRESP1,  1, MODES, FREQ,,,1
PARAM    POST    -1
Output
Figure 7-71 shows the topography optimized result by using Patran. The first frequency has increased from
0.568HZ at the initial design to 4.78 HZ.
Figure 7-71&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Topography (Bead or Stamp) Optimization462
Main Index
Postprocessing Topography Results
1.Run the Topography job. Create a new Patran database and read model and results from .op2 file.
2.Click Results-&amp;gt; Action Create, Object Deformation
3.Select the Final Results Case
4.Pick the desired case and Shape Change
Figure 7-72  Selecting Shape Change
5.Modify the Display Attributes by setting deformed color to red, undeformed color to white and scale
to True Scale.&lt;/p&gt;
&lt;p&gt;463 Chapter 7: Topology, Topometry and Topography Optimization
Topography (Bead or Stamp) Optimization
Main Index
Figure 7-73  Setting Display Attributes
6.Result will show the original mesh (white) and optimization results in relief (red).&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Toptomization464
Main Index
Figure 7-74  Optimized bead pattern
Toptomization
The Toptomize feature of Patran allows for the pre-processing of any Topology, Topometry or Topography
job. This section illustrates setting up of T opometry and Topography jobs through examples.
Example 1 - Topography
A square plate is supported at the four corners and a point load acting normal to the plate is applied at its
centre. The bead pattern is to be designed such that the compliance will be minimized subject to a constraint
on the volume.
Follow the procedure below to pre-process the optimization problem in Patran. (It is assumed that the model,
properties and load cases have already been created.)
Step 1: Select Toptomize
Click Analysis.  On the Analysis form, select Action : Toptomize, Object : Entire Model, Method :
Analysis Deck.&lt;/p&gt;
&lt;p&gt;465 Chapter 7: Topology, Topometry and Topography Optimization
Toptomization
Main Index
Figure 7-75  Initiating Toptomize for Topography Optimization
Step 2: Select T opography optimization, objective(s) and constraints
a.On the Analysis form, click the Objectives and Constraints  tab. On the Objectives and
Constraints form, select Type : Topography.
b.Select Objective Function(s) as Minimize Compliance or Maximize Frequency/Eigenvalue (both
can also be selected if required). If Maximize Frequency/Eigenvalue is selected, then the desired
mode number for which frequency is to be maximized needs to be entered in Mode Number(s)
(comma or space separated). There is also the option for requesting Mode Tracking by checking
the Track Modes check box. In this example, Minimize Compliance is selected.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Toptomization466
Main Index
c.Frequency constraint can be set by entering the mode number and corresponding lower bound
on frequency (the user can set multiple frequency constraints) in Frequency Constraint Target(s).
(Not used in this example).
d.Enter constraint on volume or weight in Constraint Target. (Volume is selected and target of 10
is entered in this example)
e.Click OK.
Figure 7-76  Creating objective and constraint
Step 3: Enter the fields of BEADVAR entry
a.On the Analysis form, click on the Optimization Control  tab.
b.In the Optimization Control Parameters form, enter Lower Bound, Upper Bound, Minimum
Bead Width, Maximum Bead Height and Draw Angle.
c.Check the Buffer Zone and allow the default value on SKIP field by selecting Both on the Exclude
from Design option.
d.The user can also specify the values for maximum number of design cycles (DESMAX), move
limit (DELXV) and convergence tolerance (CONV1).&lt;/p&gt;
&lt;p&gt;467 Chapter 7: Topology, Topometry and Topography Optimization
Toptomization
Main Index
Figure 7-77  Creating the BEADVAR entry
Step 4: Select the Properties to be designed and enter the DESVAR and GRID lines of the BEADVAR
entry.
a.On the Analysis form, click the Design Domain tab.
b.In the Design Domain form, click prop1 property in Valid Properties.
c.Click the Manufacturing Constraints  tab.
d.In the Manufacturing Constraints form, select the Normal  radio button in Extrusion direction.
e.Nodes to be excluded from or included to the design can also be entered in the form.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Toptomization468
Main Index
Figure 7-78  Manufacturing constraints
Step 5: Select the subcases
a.On the Analysis form, click on the Subcase Select  tab.
b.In the Subcase Select form, select Solution Type 101 Linear Static. Select the created subcase from
the Subcases Available list. (For composite objective such as sum of average compliance of static
subcases and frequency of selected mode number in Step b, Solution Type 103 and available
Normal Modes subcase can also be selected.)
c.Click OK.
d.Click Apply  on Analysis form to generate the input deck.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P25</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_025/</guid>
      <description>
        
        
        &lt;p&gt;469 Chapter 7: Topology, Topometry and Topography Optimization
Toptomization
Main Index
Figure 7-79  Selecting subcase
Example 2 - Topometry Optimization
The bridge problem is to be designed by continuous variation of shell thickness by using the TOMVAR entry.
Follow the procedure below to pre-process the optimization problem in Patran. (It is assumed that the model,
properties and load cases have already been created.)
Step 1: Select T optomize as in Step 1of Example 1 above.
Step 2: Select T opometry Optimization and enter Objective Function and Constraints
a.Click the Objectives and Constraints  tab on the Analysis form.
b.In the Objectives and Constraints form, select Type : Topometry.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Toptomization470
Main Index
c.Select Minimize Compliance as the Objective Function(s).
d.Select Mass Fraction as the Constraint Target and enter the value of the upper bound on
fractional mass. (Also available are weight and volume constraints).
e.Click OK.
Figure 7-80  Toptomize for topometry optimization
Step 3: Selecting the property to be designed and entering the bounds on it
a.On the Analysis form click on the Optimization Control  tab.
b.In the Optimization Control Parameters form, enter the values of XINIT, XLB, XUB, and
DELXV.
c.Select the property to be designed, In this example we select the Thickness.
d.Click OK.&lt;/p&gt;
&lt;p&gt;471 Chapter 7: Topology, Topometry and Topography Optimization
Toptomization
Main Index
Figure 7-81  Property to Optimize
Step 4: Select the Design Domain
a.On the Analysis form click on the Design Domain tab.
b.In the Design Domain form, click on the prop1 property in Valid Properties. Then click OK.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Toptomization472
Main Index
Figure 7-82  Design Domain
Step 5: Select the subcases (same as Step 5:  in example 1 above).
This creates the deck for topometry optimization .&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 8: Example Problems
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide8 Example Problems
Introduction     474
Three-Bar Truss     475
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)     498
Cantilevered Plate     502
Stiffened Plate     511
Dynamic Response Optimization     517
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization     527
Design Optimization with Composite Materials with Fully Stressed Design     535
Acoustic Optimization     541
RMS Response     551
Transient Dynamic Optimization     558
External Response to Include Alternative Buckling Response     563
Continuing the Design Process in a Subsequent Job     573
Cantilevered Plate with Redundant Materials      580
Dynamic Response Optimization with Objective Spanning Subcases     587
The Equivalent Radiated Power (ERP) Design Optimization      591&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction474
Main Index
Introduction
This chapter includes a wide range of examples intended to highlight and illustrate the Design Sensitivity and
Optimization features of MSC Nastran. Though by no means exhaustive, these seventeen examples cover
most major features including both Property and Shape Optimization, Dynamic Response Optimization,
Superelements, Composites, Acoustic Responses, Discrete Variables, Fully Stressed Design, External
Responses and Restarts. Additional examples can be found as given in Table 8-1:
Running these examples on your own machine is a good way to familiarize yourself with some of the
capabilities in MSC Nastran. The iterative nature of optimization is such that different versions of MSC
Nastran and different computer platforms could result in different results from those shown here. It is
expected that these differences will be small. All of these files are available in a directory delivered with your
system. The MSC_DOC_DIR/doc /desopt directory contains these files with the extension of .dat (mscxxxx
represents your version of MSC Nastran - replace the xxxx with your specific version). If you are unable to
find these files, you should contact your System Administrator for assistance. It is recommended you copy
any example problem to your local directory, so you don’t inadvertently create files in the delivery directory.Table 8-1  Additional Optimization Examples in MSC Nastran Guides&lt;br&gt;
GUIDE ChapterName
Description
Aeroelastic Analysis 10 Ha200a.dat Sensitivity with aeroelastic analysis
10 Ha200b.dat Optimization with aeroelastic analysis
MSC Nastran
Demonstration
Problem Manual29 Nug-29a.dat Road response optimization with engine
mount stiffness using modal frequency
response
29 Nug-29b.dat Like nug-29a with modified objective and
constraints
29 Nug-29c.dat Like nug-29a with analysis in the physical
coordinates
34 Nug-34a.dat T opology optimization of MBB Beam. Basic
compliance minimization
34 Nug-34b.dat Minimum member size
34 Nug-34c.dat Mirror symmetry constraints
34 Nug-34d.dat Extrusion constraints
34 Nug-34e.dat One die casting constraints
34 Nug-34f.dat Casting constraints with two dies
35 Nug-35.dat Engine mount topology optimization&lt;br&gt;
36 Nug-36.dat T opology optimization of a wheel with cyclic
symmetry constraints&lt;/p&gt;
&lt;p&gt;475 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Another good way to learn is by modifying these files.  You might try adding Shape variables to a Property
Optimization example, adding analysis disciplines, modifying the constraints, and so on.  Most of these files
are relatively small, and should not incur any great CPU-related costs.  In any event, the time spent learning
with simple examples can more than pay for itself when faced with larger, more complex problems.
Three-Bar Truss
A common task in design optimization is to reduce the mass of a structure subjected to several load
conditions.  Figure 8-1 shows a simple three-bar truss that must be built to withstand two separate loading
conditions.  Note that these two loads subject the outer truss members to both compressive as well as tensile
loads. D ue to the loading symmetry, we expect the design to be symmetric as well.  As an exercise, we&amp;rsquo;ll show
how to enforce this symmetry using design variable linking.
Figure 8-1  Three-Bar Truss
An important, but often overlooked consideration is that the optimization capability in MSC Nastran is
multidisciplinary. That is, the final optimal design is the result of a simultaneous consideration of all analysis
disciplines across all subcases.  In this case, the optimal three-bar truss design will satisfy the load requirements Note:   The results shown in this guide were obtained from MSC Nastran 2001, 2004, 2010 and 2014.1
running on Linux and Windows platforms. Results from running these cases on different
platforms or versions of MSC Nastran may result in somewhat different results, but they should
be similar.
3
41
2A312
XY
A13
10”10” 10”
20,000 lbs (Subcase
2)20,000 lbs (Subcase
1)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss476
Main Index
for both statics subcases, which is to be expected.  (If, for example, a normal modes or buckling subcase were
to be added, the resultant design would have to not only satisfy the static strength requirements, but also
constraints on eigenvalues.  As an exercise you may wish to try adding an eigenvalue constraint.)
Analysis Model Description
Design Model Description
The input data for this problem is given in Listing 8-1. Grid, element, and load data are assigned based on the
data supplied in the figure.  The two separate static load cases are defined in Solution 200 Case Control using
the parameter ANALYSIS = STATICS.
Listing 8-1  Input File for DSOUG1
ID MSC  DSOUG1 $
TIME  10      $
SOL 200       $  OPTIMIZATION
CEND
TITLE = SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG1
SUBTITLE = BASELINE - 2 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
ECHO        = SORT
SPC         = 100
DISP        = ALL
STRESS      = ALL
DESOBJ(MIN) = 20 $  (DESIGN OBJECTIVE = DRESP ID)
DESSUB      = 21 $  DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS    = STATICS
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD  = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD  = 310
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;Three rod (pin-jointed) structure in the x-y plane
Symmetric structural configuration with respect to the y axis
T wo distinct 20,000 lb load conditions
Material: E = 1.0E7 psi
Weight density = 0.1 lb /in3
Objective: Minimization of structural weight
Design variable: Cross-sectional areas A1, A2, and A3
Design variable linking such that A3 = A1
Constraints: Allowable stress: T ensile 20,000 psi
Compressive = -15,000 psi
Displacement: + 0.2 at grid 4 in x end of y directions&lt;/p&gt;
&lt;p&gt;477 Chapter 8: Example Problems
Three-Bar Truss
Main Index
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$ GRID DATA
$       2       3       4       5       6       7       8       9       10
GRID    1               -10.0     0.0   0.0
GRID    2                 0.0     0.0   0.0
GRID    3                10.0     0.0   0.0
GRID    4                 0.0   -10.0   0.0
$ SUPPORT DATA
SPC1    100     123456  1 THRU 3
$ ELEMENT DATA
CROD    1       11      1       4
CROD    2       12      2       4
CROD    3       13      3       4
$ PROPERTY DATA
PROD    11      1       1.0
PROD    12      1       2.0
PROD    13      1       1.0
MAT1    1       1.0E+7          0.33    0.1
$ EXTERNAL LOADS DATA
FORCE   300     4               20000.   0.8    -0.6
FORCE   310     4               20000.  -0.8    -0.6
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;DESIGN VARIABLE DEFINITION
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV(OPTIONAL)
DESVAR  1       A1      1.0     0.1     100.0
DESVAR  2       A2      2.0     0.1     100.0
DESVAR  3       A3      1.0     0.1     100.0
$
$&amp;hellip;IMPOSE X3=X1 (LEADS TO A3=A1)
$DLINK  ID      DDVID   CO      CMULT   IDV1    C1      IDV2    C2      +
$+      IDV3    C3      &amp;hellip;
DLINK   1       3       0.0     1.0     1       1.00
$
$&amp;hellip;DEFINITION OF DESIGN VARIABLE TO ANALYSIS MODEL PARAMETER RELATIONS
$DVPREL1 ID     TYPE    PID     NAME    PMIN    PMAX    C0              +
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 10      PROD    11      A
1       1.0
DVPREL1 20 PROD    12      A&lt;br&gt;
2       1.0
DVPREL1 30      PROD    13      A&lt;br&gt;
3       1.0
$
$&amp;hellip;STRUCTURAL RESPONSE IDENTIFICATION
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
DRESP1  20      W       WEIGHT
DRESP1  21      U4      DISP                    12              4
DRESP1  23      S1      STRESS  PROD            2               11
12 13
$&amp;hellip;CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 21      21      -0.20   0.20
DCONSTR 21      23      -15000. 20000.
$
$&amp;hellip;OPTIMIZATION CONTROL:
$
DOPTPRM DESMAX  10      DELP    0.5     P1      1       P2      15
$
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
ENDDATA&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss478
Main Index
T urning to the design model description, we see three design variables are used to control the individual rod
element cross-sectional areas. T he set of DESVAR, DVPREL1 entries define the relations :
(8-1)
Note that the initial design variable values are equal to the initial rod cross-sectional areas.  With the
multiplying coefficients of 1.0 on the DVPREL1 entries, the design model and the initial analysis model
properties agree. Thus, no design model override takes place.
Since the model is symmetric and the two loading cases act to impose the same critical design loads on each
side of the plane of symmetry, we expect the optimizer to yield a symmetric final design with A1 = A 3. We
may want to enforce some type of symmetry ourselves, perhaps to address ease-of-manufacture concerns.  This
can be done using the DLINK entry to explicitly link design variables together.  Although strictly not
necessary, DLINK 1 is used to define the relation
(8-2)
The value of X3 now depends on X1. The optimizer now only needs to consider two independent design
variables X1and X2 instead of three.  This not only simplifies the problem, but also reduces the cost of the
sensitivity analysis.  These cost savings can be significant in a larger problem.
An alternate method of linking would have been placing rod elements 11 and 13 in the same property group.&lt;br&gt;
The DLINK entry would then be unnecessary since a single design variable could control the areas of all
elements of the group.  You may want to try this formulation yourself to see that the results are indeed
identical. Alternatively, you may wish to remove the DLINK entry to assure yourself that MSC Nastran will
produce a symmetric design in this case even when the design model allows for X1  X3.
DRESP1 entries define the design responses:  displacement and stress responses which are to be constrained
and the weight response that is to be used as the objective.  Note that the objective and constraints are called
out in Case Control.  The DESOBJ command points to the weight response defined on DRESP1 20, while
the DESSUB command identifies DCONSTR set 21.  Since this appears above the subcase level, the
constraint bounds will be applied to both subcases.
A DOPTPRM entry is used to override some of the default optimization parameters.  DESMAX, or the
maximum number of design cycles to be performed, has been increased from the default of 5 to 10.  (If
convergence is encountered, fewer than 10 cycles may be performed.)  DELP has also been increased from its
default of 0.2 to 0.5.  This allows any analysis model parameter to undergo changes of up to 50% on each
design cycle.  As was discussed in Move Limits , this provides move limits on the approximate model.  And
finally, IPRINT, P1, and P2 have all been increased from their defaults to allow more diagnostic output.
T urning to the results of the optimization, we see from the hard convergence decision logic output that the
problem converges to a feasible design since all constraints are satisfied at the optimum. Note that the
properties and design variables have still changed appreciably from their values on the previous design cycle.&lt;br&gt;
This suggests that we may have some flexibility in choosing final dimensions for our design without greatly
affecting the overall weight.
The summary of design cycle history and the design variable history tables both indicate that convergence
was achieved in six iterations.  A total of seven finite element analyses were performed, one for the initial
analysis and one in connection with each of the design cycles.  Also listed in the summary of design cycle Ai1.0Xi= i123 =
X31.0X1=&lt;/p&gt;
&lt;p&gt;479 Chapter 8: Example Problems
Three-Bar Truss
Main Index
history is the fractional error of approximation in the objective function, which compares the approximate
objective function on exit from the optimizer with the true value computed from the subsequent finite
element analysis.  This is an indication of the quality of the objective function approximation.  Since the
weight is linear in the design variables (W = L1X1 + L2X2 + L3X3), we expect the linearized weight objective
to be an exact approximation; this indeed is seen to be the case, except for a small amount of numerical
“noise”.&lt;br&gt;
Caution should be used when interpreting the data appearing the fractional error of approximation column.
One might be tempted to use the fractional error of approximation information as justification for increasing
the move limits (DELP and DELX on the DOPTPRM entry, and/or DELXV on the DESVAR entry) in
order to achieve convergence earlier.  This might not yield the expected results.  In this case, the linear objective
function was approximated linearly, which is exact.  However, the stress constraints in this problem are
proportional to the inverse of the cross sectional areas, and are thus nonlinear in the design variables.  Too
large of a move limit could lead to increased approximation errors.  Here, the mixed method of approximation
was used, which we know to be pretty good at approximating sizing-type stress constraints.  Thus, increasing
move limits to 50% is reasonable, as it will probably save us the cost of a few additional finite element
analyses.  A recommendation would be to stick with the defaults, unless something is known about the
problem beforehand that would indicate enhanced efficiency by changing them.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss480
Main Index
Listing 8-2  Selected Output for DSOUG1
***** NORMAL CONVERGENCE CRITERIA SATISFIED ***** (HARD CONVERGENCE DECISION LOGIC)
**************************************************************************************
CONVERGENCE ACHIEVED BASED ON THE FOLLOWING CRITERIA
(HARD CONVERGENCE DECISION LOGIC)       &lt;br&gt;
RELATIVE CHANGE IN OBJECTIVE        6.3493E-04  MUST BE LESS THAN   1.0000E-03
OR    ABSOLUTE CHANGE IN OBJECTIVE        1.7131E-03  MUST BE LESS THAN   1.0000E-20
&amp;mdash; AND &amp;mdash;
MAXIMUM CONSTRAINT VALUE            1.6263E-03  MUST BE LESS THAN   5.0000E-03
(CONVERGENCE TO A FEASIBLE DESIGN)
&amp;mdash; OR &amp;mdash;
MAXIMUM OF RELATIVE PROP. CHANGES   1.8103E-02  MUST BE LESS THAN   1.0000E-03
AND   MAXIMUM OF RELATIVE D.V. CHANGES    1.8103E-02  MUST BE LESS THAN   1.0000E-03
(CONVERGENCE TO A BEST COMPROMISE INFEASIBLE DESIGN)&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           8
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     7
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                      4.828427E+00                                     -3.234952E-01
               1             3.013588E+00             3.013588E+00             2.817567E-13            -5.850226E-03
               2             2.823336E+00             2.823336E+00             1.684601E-13            -1.797806E-02
               3             2.734322E+00             2.734322E+00            -2.761020E-14            -3.296451E-03
               4             2.710048E+00             2.710048E+00             3.097099E-14             5.158377E-05
               5             2.703516E+00             2.703516E+00            -3.942325E-15             4.261767E-04
               6             2.698093E+00             2.698093E+00             1.349668E-14             1.116589E-03
               7             2.696380E+00             2.696380E+00            -3.952759E-15             1.626289E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;1    SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG1          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    80
BASELINE - 2 CROSS SECTIONAL AREAS AS DESIGN VARIABLES                                                                     &lt;br&gt;
0                                                                                                                                &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  A1         |   1.0000E+00 :   7.1191E-01 :   7.7981E-01 :   7.9873E-01 :   8.1395E-01 :   8.2430E-01 :
     2 |          2   |  A2         |   2.0000E+00 :   1.0000E+00 :   6.1771E-01 :   4.7517E-01 :   4.0784E-01 :   3.7203E-01 :
     3 |          3   |  A3         |   1.0000E+00 :   7.1191E-01 :   7.7981E-01 :   7.9873E-01 :   8.1395E-01 :   8.2430E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  A1         |   8.3571E-01 :   8.3724E-01 :
     2 |          2   |  A2         |   3.3435E-01 :   3.2830E-01 :
     3 |          3   |  A3         |   8.3571E-01 :   8.3724E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        7.
We will now see how the input deck for this example can be created in Patran.&lt;/p&gt;
&lt;p&gt;481 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Step 1: Open the Pre-Process Form
a.Click ToolsDesign Study  Pre-Process
Figure 8-2  Initiating Pre-process
Step 2: Create Design Variables
Since we are designing the area which is a property on the PROD entry, we can create design
variables easily by Property.
a.On the Pre-Process form, select Action : Create, Object : Design Variable, Type : Property.
b.Select Dimension : 1D and Type : Rod.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss482
Main Index
Figure 8-3  Creating Design Variables
c.Then click the  Select Property Set(s)  icon and select prod1, click Select Property icon and select
Area.
d.Select Input Bounds as Lower/Upper and Value and enter the values 0.1 and 100.0 for Lower (L)
and Upper (U), respectively.
e.Click Apply .
f.Similarly create design variables for area of prod2 and prod3.&lt;/p&gt;
&lt;p&gt;483 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-4  Setting Bounds on Design Variables
Step 3: Create relation between design variables (area of prod3 = area of prod1)
a.Select Action : Create, Object : Variable Relation, Type : General (DLINK)
b.Enter 0.0 for Constant Term (C0) and 1.0 for Multiplier (CMULT) .
c.Select prod3_Area in Dependent Design Variable list.
d.Click Define Indep Terms and select prod1_Area in Select Design Variable (IDVi) list on the
General (DLINK) Independent Terms form.
e.Click OK and Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss484
Main Index
Figure 8-5  Creating variable linking: DLINK&lt;/p&gt;
&lt;p&gt;485 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Relation between design variables can also be set very easily, in this case, by selecting T ype: Property
Relation. Simply select the Dependent Property Set as prod3 and Property Name as Area, and
Independent Property Set as prod1 and Property Name as Area. (Note that design variables
prod1_Area and prod3_Area need not be defined prior to this step because the two design variables
and their relation are automatically created.)
Figure 8-6  Creating variable linking: Property relation&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss486
Main Index
Figure 8-7  Define Property Relation
Step 4: Create Objective
a.Select Action : Create, Object : Objective, Solution : Global, Response : Weight and Min/Max:
Minimize.
b.Enter weight in Objective Name and click Apply .&lt;/p&gt;
&lt;p&gt;487 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-8  Creating Objective
Step 5: Create Displacement and Stress Constraints
a.Select Action : Create, Object : Constraint, Solution : Linear Static, Response : Displacement
b.Enter disp_u_4 for Constraint Name, select FEM radio button for Constraint and pick node 4
to Select Node.
c.Select TX for Displacement Component (another constraint has to be created for TY because
Patran does not allow selection of more than one component) and enter values -0.2 and 0.2 for
Lower Bound and Upper Bound respectively.
d.Click Apply .
e.For the stress constraints, repeat step 1, but select Stress for the Response.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss488
Main Index
f.Enter sigma_123 for Constraint Name, select P_Set for Constraint Region (by Property) and
select all properties in Select Existing Properties list.
g.Select Axial for Stress Component and enter values -15000 and 20000 for Lower Bound and
Upper Bound, respectively.
Figure 8-9  Creating constraints
We can also add a normal modes constraint. While it is not required for this example, we will take
up this step to illustrate how multidisciplinary optimization decks can be set up using Patran.
Step 6: Creating normal modes constraint
a.Select Action : Create, Object : Constraint, Solution : Normal Modes, Response : Frequency.
b.Enter mode1 for Constraint Name, 1 for Frequency Mode Number and 10 for Upper Bound.
c.Click Apply .&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P26</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_026/</guid>
      <description>
        
        
        &lt;p&gt;489 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-10  Creating normal modes constraint
Since the stress and displacement constraints will be considered for both the static load cases and
normal modes constraint will be considered only for the normal modes subcase, we need to create
constraint sets which will be selected for the corresponding subcases.
Step 7: Creating the static and modes constraint sets
a.Select Action : Create, Object : Constraint Set, Solution : Linear Static.
b.Enter staticset in Constraint Set Name, select all the constraints in the Constraints to be Included
list (note that only the static case constraints are listed). Click Apply .
c.Now change the Solution to Normal Modes, enter modeset in Constraint Set Name, select the
constraint mode1 in the Constraints to be Included list. Click Apply .&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss490
Main Index
Figure 8-11  Creating Constraint Sets
Step 8: Create a Design Study
a.Select Action : Create, Object : Design Study and enter ds1 for Design Study Name.
b.In Design Study Setup, click the Select Design Variables  tab.
c.Enter Design Values (it is equal to the Analysis Values in this case) and lower bounds as 0.1 and
upper bounds as 100 for each of the three design variables in the table.
d.Click the Select Objective  tab. Click the Select All  radio button. Click Close .
e.Repeat step 4 for Select Constraint Sets and Select Variable Relations.
f.Click Apply .&lt;/p&gt;
&lt;p&gt;491 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-12  Creating Design Study
Step 9: Creating Subcases and overwriting default Optimization Parameters
a.Click Analysis . Select Action : Optimize, Object : Entire Model, Method : Analysis Deck.
b.Click the Design Study Select  tab and select ds1.
c.Click the Global Obj./Constr. Select  tab and select weight.
d.Click the Optimization Parameters tab. In the Optimization Parameters form, change DESMAX
to 10 (default is 5), check Print Objective and Design Variables, Print Properties, Print All
Constraints and Print All Responses (this is equivalent to P2 =15 on DOPTPRM entry).&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss492
Main Index
e.Change the value of P1 to 1 (default is 0).
f.Click the Advanced Optimization Parameters  tab.
g.In the Advanced Optimization Parameters form, change the DELP value to 0.5 (default is 0.2).
Click OK.&lt;/p&gt;
&lt;p&gt;493 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-13  Setting Optimization Parameters&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss494
Main Index
Figure 8-14  Setting up objectives and constraints
Now the two static and one normal modes subcases will be created
h.Click the Subcase  tab.
i.In Subcase Create form, select Solution Type: 101 LINEAR STATIC.
j.From Available Subcases, select lc1. Click the Constraints/Objective  tab.
k.In Set Up Constraints/Objective form, select Type : Constraints/Objective. Selct Constraint Sets
radio button and select staticset  from Select Existing Constraint Sets list.
l.Click OK and Apply .
m.Similarly create lc2 subcase.
n.To create the normal modes subcase, select Solution Type: 103 NORMAL MODES and select
modeset from Select Existing Constraint Sets list.
o.Click Subcase Parameters tab and fill up the form.&lt;/p&gt;
&lt;p&gt;495 Chapter 8: Example Problems
Three-Bar Truss
Main Index
Figure 8-15  Subcase Parameters&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Three-Bar Truss496
Main Index
Figure 8-16  Selecting Subcases
p.Click Subcase Select tab and select the two static subcases and one modal subcase just created.
q.Click Apply  to get the SOL 200 deck.&lt;/p&gt;
&lt;p&gt;497 Chapter 8: Example Problems
Three-Bar Truss
Main Index&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)498
Main Index
Vibration of a Cantilevered Beam ( Turner&amp;rsquo;s Problem)
This problem was originally published by M.J. T urner (see Reference 13.). The problem is to design a
minimum weight structure while constraining the fundamental natural frequency to be at or above 20 Hz.&lt;br&gt;
The beam is symmetric about Z =0 and made up of a shear web having top and bottom caps that are modeled
with rod elements.  Turner&amp;rsquo;s original design model consisted of piecewise linear bar cross-sectional areas and
web thicknesses; however, we will just approximate this as a step function model with uniform cross-sectional
rod elements and uniform thickness shear elements within each of three bays.
Figure 8-17  Cantilever Beam Vibration Model
Analysis Model Description
Design Model DescriptionWeb is modeled by QUAD4 elements
Caps are modeled by ROD elements
Material: E = 1.03E7 psi
Poisson ratio = 0.3
Weight density = 0.1 lb/in3
Nonstructural mass: Lumped masses at top and bottom nodes, 15 lbs each
Objective: Minimization of structural weight
Design variables: Cross-sectional areas of rod elements (symmetry imposed on the top
and bottom elements)
Constraints: Fundamental bending frequency at or above 20 Hz20” 20” 20”6”A1 A2 A3
XZ
t2 t3 t1&lt;/p&gt;
&lt;p&gt;499 Chapter 8: Example Problems
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)
Main Index
Normal modes analysis is requested in Solution 200 by setting the Case Control parameter ANALYSIS =
MODES.  In order to determine a minimum weight design subject to a lower-bound constraint on
fundamental frequency, the thicknesses of the three shear panels and the six rod cross-sectional areas are
allowed to vary.  These variations are described using six design variables; three for the web thicknesses and
three for the rod cross-sectional areas (symmetry is imposed on the upper and lower ROD element areas.)  See
Listing 8-3 for details.
Listing 8-3  Input File for DSOUG2
ID MSC DSOUG2 $ v2004 ehj 25-Jun-2003
TIME  10
SOL 200       $  OPTIMIZATION
CEND
TITLE    = VIBRATION OF A BEAM.                                DSOUG2
SUBTITLE = TURNER&amp;rsquo;S PROBLEM
ECHO     = UNSORT
DISP     = ALL
STRESS   = ALL
METHOD   = 1
ANALYSIS = MODES
DESOBJ(MIN) = 10   $ OBJECTIVE FUNCTION DEFINITION
DESSUB =      10   $ CONSTRAINT SET SELECTION
$
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
EIGRL   1             &lt;br&gt;
GRID    1               0.0     0.0     -3.0            123456
GRID    2               20.0    0.0     -3.0            2456
GRID    3               40.0    0.0     -3.0            2456
GRID    4               60.0    0.0     -3.0            2456
GRID    5               0.0     0.0     3.0             123456
GRID    6               20.0    0.0     3.0             2456
GRID    7               40.0    0.0     3.0             2456
GRID    8               60.0    0.0     3.0             2456
$
CROD    1       201     5       6
CROD    2       202     6       7
CROD    3       203     7       8
CROD    7       201     1       2
CROD    8       202     2       3
CROD    9       203     3       4
PROD    201     1       1.0     0.0
PROD    202     1       1.0     0.0
PROD    203     1       1.0     0.0
$
CQUAD4  4       204     1       2       6       5
CQUAD4  5       205     2       3       7       6
CQUAD4  6       206     3       4       8       7
PSHELL  204     1       0.2
PSHELL  205     1       0.2
PSHELL  206     1       0.2
$
CONM2   10      2               15.0
CONM2   11      3               15.0
CONM2   12      4               15.0
CONM2   14      6               15.0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)500
Main Index
CONM2   15      7               15.0
CONM2   16      8               15.0
$
MAT1    1       1.03E7          0.3     0.1
PARAM   WTMASS  0.002588
PARAM   GRDPNT  1
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;Define the design variables
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV
$
DESVAR  1       A1      1.0     0.01    100.0
DESVAR  2       A2      1.0     0.01    100.0
DESVAR  3       A3      1.0     0.01    100.0
DESVAR  4       T1      1.0     0.001   10.0
DESVAR  5       T2      1.0     0.001   10.0
DESVAR  6       T3      1.0     0.001   10.0
$
$&amp;hellip;Relate the design variables to analysis model properties
$DVPREL1 ID     TYPE    PID     FID     PMIN    PMAX    C0              +
$+      DVIDD1  COEF1   DVID2   COEF2   &amp;hellip;
$
DVPREL1 1       PROD    201     A                              &lt;br&gt;
1       1.0
DVPREL1 2       PROD    202     A                                &lt;br&gt;
2       1.0
DVPREL1 3       PROD    203     A                                 &lt;br&gt;
3       1.0
DVPREL1 4       PSHELL  204     T                                    &lt;br&gt;
4       0.2
DVPREL1 5       PSHELL  205     T                                    &lt;br&gt;
5       0.2
DVPREL1 6       PSHELL  206     T                                    &lt;br&gt;
6       0.2
$
$&amp;hellip;Identify the analysis responses to be used in the design model
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
$
DRESP1  1       W       WEIGHT
DRESP2 10 STWGHT 20
DTABLE FIXWGT
DRESP1 1
DEQATN 20 STWGT(fixwgt,TOTWGT) = TOTWGT - FIXWGT
DTABLE FIXWGT 90.
DRESP1  2       F1      FREQ                    1
$
$   Identify the constraints
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 10      2       20.                                               &lt;br&gt;
$
$&amp;hellip;Optional override of design optimization parameters:
DOPTPRM  IPRINT 2       DESMAX  10      DELP    0.5     P1      1   &lt;br&gt;
P2     15
$
PARAM POST -1
ENDDATA&lt;/p&gt;
&lt;p&gt;501 Chapter 8: Example Problems
Vibration of a Cantilevered Beam (Turner&amp;rsquo;s Problem)
Main Index
The lower-bound constraint on the first mode is 20 Hz. The DRESP1 entry with ID=2 is used to designate
the first mode and DCONSTR 10 imposes the lower bound of 20. Hz. Note that the FREQ RTYPE has
been used on the DRESP1, allowing the constraint specification in Hz. If the EIGN RTYPE had been used,
the constraint would have to be specified on the eigenvalue value. Since there is no upper bound imposed on
the response, the upper bound field is left blank on the DCONSTR entry.
The objective to be minimized is the structural weight. The DRESP1 entry with ID=1 selects the WEIGHT
response type and, since the ATTA and ATTB fields are left blank, the total structural weight in the Z
direction is designated. Because the total weight includes the fixed weight of the lumped masses, a DRESP2
is used to subtract this 90. pound fixed weight from the total weight. This subtraction step is not a
requirement for this problem, but it does serve to highlight the structural weight and improves the ability of
the optimizer to focus on reducing the weight that it has influence over.
Turning to the optimization results of Listing 8-4, we note that hard convergence has been achieved after six
design cycles, requiring a total of seven finite element analyses.  We note that a feasible design has been
achieved as the maximum constraint value is less than the allowable maximum of GMAX=0.005. The slight
constraint violation results in a final first natural frequency of 19.941 Hz. as opposed to the 20.0 Hz.
requirement. This is considered more than adequate for engineering purposes, but it should be clear that the
GMAX limit could be reduced or the DCONSTR bound could be increased to produce a final design that
is closer to or above the 20 Hz. requirement. It is seen that the structural weight has been reduced from the
19.20 pounds of the original design to 6.973 pounds.
Listing 8-4  Design History Output for DSOUG2&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
                                                  (HARD CONVERGENCE ACHIEVED)
                                                  (SOFT CONVERGENCE ACHIEVED)
                                   NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           7
                                   NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     6
                                          OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;6             6.972686E+00             6.972686E+00             0.000000E+00             2.957554E-03&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1    VIBRATION OF A BEAM.                                DSOUG2             OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    89&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TURNER&amp;rsquo;S PROBLEM&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DESIGN VARIABLE HISTORY&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;INITIAL                                      1.920000E+01                                     -2.947325E-01
1             1.125909E+01             1.125909E+01             1.615573E-13            -1.220883E-01
2             8.090614E+00             8.090614E+00            -5.269385E-14            -3.213379E-02
3             7.083344E+00             7.083344E+00             8.426188E-14            -2.250564E-03
4             6.988010E+00             6.988010E+00             0.000000E+00             2.276177E-03
5             6.977588E+00             6.977588E+00            -2.036643E-15             2.787014E-03&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-------------6977588e00-------------6977588e00-------------2036643e-15-------------2787014e-03&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-------------6977588e00-------------6977588e00-------------2036643e-15-------------2787014e-03&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  A1         |   1.0000E+00 :   8.8237E-01 :   8.3002E-01 :   8.4447E-01 :   8.5627E-01 :   8.4962E-01 :
     2 |          2   |  A2         |   1.0000E+00 :   5.0000E-01 :   4.0636E-01 :   4.1912E-01 :   4.3035E-01 :   4.4847E-01 :
     3 |          3   |  A3         |   1.0000E+00 :   5.0000E-01 :   2.5000E-01 :   1.2500E-01 :   1.1164E-01 :   1.0969E-01 :
     4 |          4   |  T1         |   1.0000E+00 :   5.5400E-01 :   3.5403E-01 :   2.7531E-01 :   2.4266E-01 :   2.2924E-01 :
     5 |          5   |  T2         |   1.0000E+00 :   5.0000E-01 :   2.8941E-01 :   2.3658E-01 :   2.1514E-01 :   2.0575E-01 :
     6 |          6   |  T3         |   1.0000E+00 :   5.0000E-01 :   2.5035E-01 :   1.2517E-01 :   1.2344E-01 :   1.2603E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;/p&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate502
Main Index&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;main-index&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#main-index&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  A1         |   8.7142E-01 :
     2 |          2   |  A2         |   4.3177E-01 :
     3 |          3   |  A3         |   1.0851E-01 :
     4 |          4   |  T1         |   2.2539E-01 :
     5 |          5   |  T2         |   2.0078E-01 :
     6 |          6   |  T3         |   1.2627E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        6.
Cantilevered Plate
This section uses a simple cantilevered plate example to illustrate two important optimization features:
Multidisciplinary analysis and design
Reduced basis vectors
The multidisciplinary aspect of the example refers to the fact that a total of four subcases with three different
analysis types (STATICS, MODES and MFREQ) are analyzed and each has their own set of design
conditions. Reduced basis formulations were introduced in Designed Properties , as an efficient way to reduce
the number of independent design variables.  This example shows how the DVPREL1 entries can be used to
implement these reduced basis formulations.
Other features, such as constraint screening and optimization parameters are also illustrated and commented
upon during the description of the input data file.
Suppose we wish to determine the optimum thickness distribution of the cantilever plate in Figure 8-18 such
that the structural mass is minimized.  Two separate static loading conditions are imposed: the first is a tip
loading condition as shown in the figure; the second is a uniform pressure loading in the -Z direction.&lt;br&gt;
Constraints are placed on maximum allowable tip displacement and von Mises stresses at the upper surface
of the first row of elements along the length of the cantilever. A normal modes analysis is also performed and
a constraint is placed on first natural frequency. Finally, a frequency response analysis is performed that uses
a modal solution based on the modes computed in the normal modes analysis. The loading is the same tip
loading that is applied in the first static subcase except that it is applied across a frequency range extending
from 0.0 to 10. Hz. and at a magnitude that is 10% of the statically applied load.
Figure 8-18  Cantilever Plate Thickness Design10”
40”t1 t2 t3 t4 t5 t6 t7 t8p2ZYp1
X&lt;/p&gt;
&lt;p&gt;503 Chapter 8: Example Problems
Cantilevered Plate
Main Index
Analysis Model Description
Design Model Description
The reduced basis functions used here consist of three basis vectors:  constant, linear, and quadratic.  The
thickness distribution can be written as a linear combination of these basis vectors as:2 x 8 array of CQUAD4 elements
Material: E = 1.0E+7 psi
Poisson ratio = 0.33
Weight density = 0.1 lb/in3
T wo static load conditions:
Tip loading:
Pressure loading:
One normal modes analysis
One modal frequency analysis
Tip loading:
Structural damping of 10% T wo 500 lb loads in -z direction
Uniform at 7.5 lb/in2
T wo 50 lb loads in z-direction
Objective: Structural weight minimization
Design variables: Basis functions: Constant, linear and quadratic in
x direction to describe plate
element thicknesses
Constraints:
ANALYSIS =STATICS -2.0 Tip Displacement  2.0
von Mises Stress  29 ks i
ANALYSIS =MODES First natural frequency 1.5 Hz
ANALYSIS =MFREQ Magnitude of tip displacement  2.0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate504
Main Index
(8-3)
The eight individual plate thicknesses (one for each station along the length of the cantilever) are functions
of three independent design variables ,  and . Although DLINK entries could have been used to create
these relationships of (you may want to try this exercise on your own), this example applies the relations of
Equation (8-3) directly on the DVPREL1 entries.
Listing 8-5 begins with four subcases that define the design task. Subcases 1 and 2 perform static analysis and
impose differing load conditions while sharing the imposed design constraints (DESSUB=10). Subcase 3
performs a normal modes analysis with the METHOD=100 identifying the EIGRL Bulk Data entry that
specifies the eigenvalue requests while the DESSUB=30 points to the DCONSTR that imposes a limit on
the first natural frequency. Subcase 4 performs a modal frequency response analysis (ANALYSIS=MFREQ)
and uses the same METHOD=100 specification for the eigenanalyis. For the fourth subcase, the PHASE part
of the DISP(PHASE,SORT2)=100 acts to signify that the magnitude/phase representations is to be used not
only in the printed and stored results, but also for the FRDISP request on DRESP1 ID=230. The SORT2
request and the 100 have no effect on the design response.
Listing 8-5  Input File for DSOUG3
ID MSC  DSOUG3 $ v2004 ehj 25-Jun-2003
TIME  10
SOL 200       $  OPTIMIZATION
CEND
TITLE    = CANTILEVERED PLATE  -  DSOUG3
SUBTITLE = REDUCED BASIS FORMULATION - MULTIDISPLINARY OPTIMIZATION
SPC      = 100
DISP     = ALL
STRESS   = ALL
DESOBJ(MIN) = 35   $ OBJECTIVE FUNCTION DEFINITION
SUBCASE 1
ANALYSIS = STATICS
LABEL    = LOAD CONDITION 1
LOAD     = 300
DESSUB   = 10
SUBCASE 2
ANALYSIS = STATICS
LABEL    = LOAD CONDITION 2
LOAD     = 310
DESSUB   = 10
SUBCASE 3
ANALYSIS = MODES
LABEL    = NORMAL MODES ANALYSIS
STRESS   = NONE
METHOD   = 100
DESSUB   = 30
SUBCASE 4
ANALYSIS = MFREQt1
t2
t3
.
t8
11.0
1.0
1.0
.
1.0
= 21.0
0.875
0.75
.
0.125
31.0
0.7656
0.5625
.
0.0156         &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;505 Chapter 8: Example Problems
Cantilevered Plate
Main Index
METHOD   = 100
SET 100  = 9,19,29   &lt;br&gt;
DISP(PHASE,SORT2)  = 100
STRESS   = NONE
LABEL    = MODAL FREQUENCY ANALYSIS
LOADSET  = 2000
DLOAD    = 1000
DESSUB   = 40
FREQ     = 1000
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
MAT1    51      1.0E+7          0.33    0.1                             +M2
+M2     50000.  50000.  29000.
SPC1    100     123456  1       11      21
GRID    1                0.     -5.     0.
GRID    2                5.     -5.     0.
GRID    3               10.     -5.     0.
GRID    4               15.     -5.     0.
GRID    5               20.     -5.     0.
GRID    6               25.     -5.     0.
GRID    7               30.     -5.     0.
GRID    8               35.     -5.     0.
GRID    9               40.     -5.     0.
GRID    11               0.      0.     0.
GRID    12               5.      0.     0.
GRID    13              10.      0.     0.
GRID    14              15.      0.     0.
GRID    15              20.      0.     0.
GRID    16              25.      0.     0.
GRID    17              30.      0.     0.
GRID    18              35.      0.     0.
GRID    19              40.      0.     0.
GRID    21               0.      5.     0.
GRID    22               5.      5.     0.
GRID    23              10.      5.     0.
GRID    24              15.      5.     0.
GRID    25              20.      5.     0.
GRID    26              25.      5.     0.
GRID    27              30.      5.     0.
GRID    28              35.      5.     0.
GRID    29              40.      5.     0.
$
CQUAD4   1      1        1       2      12      11
CQUAD4   2      2        2       3      13      12
CQUAD4   3      3        3       4      14      13
CQUAD4   4      4        4       5      15      14
CQUAD4   5      5        5       6      16      15
CQUAD4   6      6        6       7      17      16
CQUAD4   7      7        7       8      18      17
CQUAD4   8      8        8       9      19      18
CQUAD4  11      1       11      12      22      21
CQUAD4  12      2       12      13      23      22
CQUAD4  13      3       13      14      24      23
CQUAD4  14      4       14      15      25      24
CQUAD4  15      5       15      16      26      25
CQUAD4  16      6       16      17      27      26
CQUAD4  17      7       17      18      28      27
CQUAD4  18      8       18      19      29      28&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate506
Main Index
PSHELL   1      51      3.0      51             51
PSHELL   2      51      2.640625 51
PSHELL   3      51      2.3125   51
PSHELL   4      51      2.015625 51
PSHELL   5      51      1.75     51
PSHELL   6      51      1.515625 51
PSHELL   7      51      1.3125   51
PSHELL   8      51      1.140625 51
$       2       3       4       5       6       7       8       9       10
FORCE   300     9               500.    0.0     0.0     -1.0
FORCE   300     29              500.    0.0     0.0     -1.0
PLOAD2  310     7.5      1      THRU     8
PLOAD2  310     7.5     11      THRU    18
$
EIGRL 100 10
$
LSEQ 2000 28 300
RLOAD1 1000 28 29
TABLED1 29
0.0 0.1     1000.0 0.1 ENDT
FREQ1 1000 0.0 0.10    100
PARAM G 0.10
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;DEFINE THE DESIGN VARIABLES
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV
DESVAR 10 ALPH1 1.0
DESVAR 20 ALPH2 1.0
DESVAR 30 ALPH3 1.0
$
$&amp;hellip;EXPRESS ANALYSIS MODEL PROPERTIES LINEARLY IN TERMS OF
$   DESIGN VARIABLES
$DVPREL1 ID     TYPE    PID     FID     PMIN    PMAX    C0           &lt;br&gt;
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 1       PSHELL  1       T                                &lt;br&gt;
10      1.0 20 1.000 30 1.0
DVPREL1 2       PSHELL  2       T                                    &lt;br&gt;
10      1.0 20 0.875 30 0.7656
DVPREL1 3       PSHELL  3       T                                    &lt;br&gt;
10      1.0     20 0.750 30 0.5625
DVPREL1 4       PSHELL  4       T                                    &lt;br&gt;
10      1.0     20 0.625 30 0.3906
DVPREL1 5       PSHELL  5       T                              &lt;br&gt;
10      1.0     20 0.500 30 0.250
DVPREL1 6       PSHELL  6       T                              &lt;br&gt;
10      1.0     20 0.375 30 0.1406
DVPREL1 7       PSHELL  7       T                              &lt;br&gt;
10      1.0     20 0.250 30 0.0625
DVPREL1 8       PSHELL  8       T                              &lt;br&gt;
10      1.0     20 0.125 30 0.0156
$
$&amp;hellip;IDENTIFY THE DESIGN RESPONSES
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1 &lt;br&gt;
$+      ATT2    &amp;hellip;
$      STATIC VON MISES STRESS IN  SHELL ELEMENTS
DRESP1   2      S12     STRESS  ELEM             9              1
2 3 4 5 6 7 8
$    STATIC DISPLACEMENT AT THE TIP
DRESP1  33      D1      DISP                     3              19&lt;/p&gt;
&lt;p&gt;507 Chapter 8: Example Problems
Cantilevered Plate
Main Index
$   FIRST NATURAL FREQUENCY
DRESP1 130 FFREQ FREQ 1&lt;br&gt;
$ DEFINE THE RESPONSES IN THE DYNAMIC RESPONSE ANALYSIS
DRESP1 230 TDISP FRDISP 3 19
$
$&amp;hellip;DEFINE THE WEIGHT RESPONSE TO BE USED AS THE OBJECTIVE FUNCTION:
DRESP1  35      W       WEIGHT
$
$&amp;hellip;DEFINE THE STATIC DESIGN CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 10       2      -29000. 29000.
DCONSTR 10      33      -2.     2.
$&amp;hellip;DEFINE THE NORMAL MODES DESIGN CONSTRAINT
DCONSTR 30 130 1.5&lt;br&gt;
$&amp;hellip;DEFINE THE FREQUENCY RESPONSE DESIGN CONSTRAINTS
DCONSTR 40 230 2.0
$
$&amp;hellip;OVERRIDE OPTIMIZATION PARAMETER DEFAULTS (OPTIONAL)
DOPTPRM DESMAX  20       P1 1 P2 15  iprint 7
$
PARAM NASPRT 1
PARAM POST -1
ENDDATA
Selected results from the .f06 file from this run are shown in Listing 8-6 and Listing 8-7. The first set of data
shows the print of final design information, including the objective, the design variable values, the final
property values, and the final responses. As expected, the final design has the thickest elements at the root
and the thickness decrease, monotonically along the span of the plate towards the tip.
The final responses show that only one response is close to its limiting value: the displacement of the structure
under the first static load. This single constraint condition is therefore dictating the design of the entire
structure to produce the thickness distribution shown above.
Listing 8-6  Final Results for DSOUG3&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                            *                                                                  *
                            *                                                                  *
                            *                D E S I G N    O P T I M I Z A T I O N            *
                            *                                                                  *
                            *                                                                  *
                            ********************************************************************
                                         *******************************************
                                         *                                         *
                                         *        F I N A L  A N A L Y S I S       *
                                         *                                         *
                                         *******************************************
                                *******   ANALYSIS RESULTS BASED ON THE FINAL DESIGN   *******
                                              -----   DESIGN OBJECTIVE   -----
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;            INTERNAL                            MINIMIZE                                                           
            RESPONSE                RESPONSE       OR       SUPERELEMENT    SUBCASE
               ID        DRESPx       TYPE      MAXIMIZE         ID            ID          VALUE   
 ----------------------------------------------------------------------------------------------------
                   1     DRESP1     WEIGHT      MINIMIZE             0            0      3.7342E+01
                                              -----   DESIGN VARIABLES   -----
 ---------------------------------------------------------------------------------------------------------
        INTERNAL       DESVAR                         LOWER                               UPPER   
           ID            ID          LABEL            BOUND             VALUE             BOUND   
 ---------------------------------------------------------------------------------------------------------
               1            10      ALPH1          -1.0000E+20        4.0591E-01        1.0000E+20
               2            20      ALPH2          -1.0000E+20        5.6317E-01        1.0000E+20
               3            30      ALPH3          -1.0000E+20        5.2922E-01        1.0000E+20
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;   DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;PROPERTY     PROPERTY     PROPERTY     TYPE OF          LOWER                             UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TYPE          ID          NAME       PROPERTY         BOUND            VALUE            BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               1           T     DVPREL1        1.0000E-15       1.4983E+00       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               2           T     DVPREL1        1.0000E-15       1.3038E+00       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               3           T     DVPREL1        1.0000E-15       1.1260E+00       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               4           T     DVPREL1        1.0000E-15       9.6460E-01       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               5           T     DVPREL1        1.0000E-15       8.1979E-01       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               6           T     DVPREL1        1.0000E-15       6.9150E-01       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               7           T     DVPREL1        1.0000E-15       5.7977E-01       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PSHELL               8           T     DVPREL1        1.0000E-15       4.8456E-01       1.0000E+20&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate508
Main Index
1    CANTILEVERED PLATE  -  DSOUG3                                          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   606
REDUCED BASIS FORMULATION - MULTIDISPLINARY OPTIMIZATION                                                                   &lt;br&gt;
0     MODAL FREQUENCY ANALYSIS                                                                               SUBCASE 4             &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;0-----modal-frequency-analysis-------------------------------------------------------------------------------subcase-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#0-----modal-frequency-analysis-------------------------------------------------------------------------------subcase-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                           |        R E S P O N S E S    IN    D E S I G N    M O D E L         |
                           ----------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER                         UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID         ID       LABEL        ID         ID           BOUND          VALUE          BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1        35      W             3          3              N/A          3.7342E+01       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER                         UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID         ID       LABEL        ID         NO.          BOUND          VALUE          BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2         33   D1               19           3    -2.0000E+00 A    -2.0019E+00        N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3         2  S12              5                   9       N/A          1.5492E+04    2.9000E+04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4         2  S12              6                   9       N/A          1.5473E+04    2.9000E+04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL    DRESP1    RESPONSE     GRID     COMPONENT       LOWER                         UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID         ID       LABEL        ID         NO.          BOUND          VALUE          BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5         33   D1               19           3        N/A           1.7345E+00     2.0000E+00&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1    CANTILEVERED PLATE  -  DSOUG3                                          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   609&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;REDUCED BASIS FORMULATION - MULTIDISPLINARY OPTIMIZATION&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0     MODAL FREQUENCY ANALYSIS                                                                               SUBCASE 4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    NORMAL MODE RESPONSES        &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL     DRESP1     RESPONSE      MODE          LOWER                           UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID          ID        LABEL         NO.          BOUND           VALUE           BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6         130    FFREQ              1      1.5000E+00        1.7410E+00         N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    FREQUENCY DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;(N/A - BOUND NOT ACTIVE OR AVAILABLE)
(*** VIOLATED RESPONSES MARKED WITH V &lt;em&gt;&lt;strong&gt;)
(&lt;/strong&gt;&lt;/em&gt; ACTIVE RESPONSES MARKED WITH A ***)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-active-responses-marked-with-a-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-active-responses-marked-with-a-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE    GRID    COMPONENT                    LOWER                       UPPER   
       ID        ID      LABEL       ID        NO.       FREQUENCY       BOUND         VALUE         BOUND   
 -------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;ndash;
9       230  TDISP           19         3     1.6000E+00       N/A          1.0125E+00    2.0000E+00&lt;br&gt;
10       230  TDISP           19         3     1.7000E+00       N/A          1.6801E+00    2.0000E+00&lt;br&gt;
11       230  TDISP           19         3     1.8000E+00       N/A          1.5100E+00    2.0000E+00&lt;br&gt;
1    CANTILEVERED PLATE  -  DSOUG3                                          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   610
REDUCED BASIS FORMULATION - MULTIDISPLINARY OPTIMIZATION                                                                   &lt;br&gt;
0     MODAL FREQUENCY ANALYSIS                                                                               SUBCASE 4
The summary of design cycle history in Listing 8-7 indicates that the initial design is well within the imposed
design requirements. This is indicated by the N/A that is shown in the “MAXIMUM VALUE OF&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P27</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_027/</guid>
      <description>
        
        
        &lt;p&gt;509 Chapter 8: Example Problems
Cantilevered Plate
Main Index
CONSTRAINT” column which indicates that none of the constraints exceeded the -0.5 value that is the
default for designating a constraint as being active. After six iterations, a minimum weight design has been
achieved that satisfies all constraints and has reduced the structural weight from 78.375 to 37.018.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate510
Main Index
Listing 8-7  Design History for DSOUG3&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           8
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     7
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number------------optimization---------------analysis--------------approximation-------------constraint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number------------optimization---------------analysis--------------approximation-------------constraint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INITIAL                                      7.843750E+01                                        N/A    &lt;br&gt;
1             6.283941E+01             6.283891E+01             7.956854E-06            -1.000000E+00
2             5.038702E+01             5.038702E+01            -7.383651E-13            -4.683028E-01
3             4.148369E+01             4.148369E+01            -2.552108E-13            -2.318927E-01
4             3.788143E+01             3.788143E+01            -7.502809E-16            -3.067887E-02
5             3.741385E+01             3.741385E+01            -1.956118E-14             1.225164E-03
6             3.737239E+01             3.737239E+01             1.597051E-14             1.314932E-03
7             3.734160E+01             3.734160E+01             3.044509E-15             9.430116E-04&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;7-------------3734160e01-------------3734160e01-------------3044509e-15-------------9430116e-04&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#7-------------3734160e01-------------3734160e01-------------3044509e-15-------------9430116e-04&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;1    CANTILEVERED PLATE  -  DSOUG3                                          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   611
REDUCED BASIS FORMULATION - MULTIDISPLINARY OPTIMIZATION                                                                   &lt;br&gt;
0     MODAL FREQUENCY ANALYSIS                                                                               SUBCASE 4           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |         10   |  ALPH1      |   1.0000E+00 :   8.0314E-01 :   6.4029E-01 :   5.0694E-01 :   3.8736E-01 :   3.9292E-01 :
     2 |         20   |  ALPH2      |   1.0000E+00 :   7.6985E-01 :   6.3549E-01 :   5.4245E-01 :   5.5949E-01 :   5.5459E-01 :
     3 |         30   |  ALPH3      |   1.0000E+00 :   8.4029E-01 :   6.5739E-01 :   5.6478E-01 :   6.1483E-01 :   5.7846E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |         10   |  ALPH1      |   4.0054E-01 :   4.0591E-01 :
     2 |         20   |  ALPH2      |   5.5589E-01 :   5.6317E-01 :
     3 |         30   |  ALPH3      |   5.5489E-01 :   5.2922E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        7.
Figure 8-19 depicts results from the two static subcases for the final design that have been produced using
Patran. This figure is representative of the many results can be produced from results in the .op2 database
that was generated based on the PARAM POST -1 in the input data file of Listing 8-5. Other items in the
input data file that affect the amount of data written to the output database are the case control commands,
such as DISP=ALL and STRESS=ALL and the PARAM NASPRT 1 that is used to output data recovery
results at every design cycle.&lt;/p&gt;
&lt;p&gt;511 Chapter 8: Example Problems
Stiffened Plate
Main Index
Figure 8-19  Representative Displacement and Stress Results for the Final Design of the Cantilevered Beam
Stiffened Plate
An effective way to keep the number of independent design variables to a minimum is by grouping designed
elements by property type.  A smaller set of independent design variables decreases the cost associated with
the sensitivity analysis, allows the optimizer to perform more efficiently, and makes interpretation of the final
results much easier.
A simple example is shown in Figure 8-20 and includes a plate with a hat stiffener. The design goal is to reduce
the weight of the stiffened panel subject to stress and displacement constraints under two separate static load
conditions.  The thickness of the plate and the thickness of the hat stiffener are allowed to vary.  The boundary
condition creates a simply supported condition with the plate also restrained in the x direction along x=0.0.&lt;br&gt;
The first load case includes both uniaxial tension in the x-direction and a vertical pressure load in the z-&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Stiffened Plate512
Main Index
direction.  The second load case is a concentrated load applied in the +z direction at grid 10203, which is
directly under the hat. The example illustrates how the beam library can be utilized to simplify the modeling
and design tasks and how the beam offset relations can be adjusted as the structural properties change.
Figure 8-20  Plate with a HAT Stiffener
Analysis Model Description
The input file for this example is shown in Listing 8-8.
16 CQUAD4 elements to model uniform thickness base plate
4 CBAR elements to model the hat stiffener. The HAT type is selected on the PBARL entry.
Material: E = 1.0E7 psi
Poisson ratio = 0.33
Weight density = 0.283 lb/in3
Loadings: Subcase 1: In-plane load of Nx = 1000 lb /in10
5.
10x1x2
10&amp;mdash;&amp;mdash;
XZ
Y&lt;/p&gt;
&lt;p&gt;513 Chapter 8: Example Problems
Stiffened Plate
Main Index
Listing 8-8  Input File for DSOUG4
$ field entries left justified for clarity
$ cbar entry line 1: vector v is z direction
$ cbar entry line 2: w3a and w3b that is fields 6 and 9
$ rename t-box as hatdim2
$
ID MSC  DSOUG4 $ v2004 ehj 25-Jun-2003
TIME  10
SOL 200       $  OPTIMIZATION
CEND
$
TITLE  = STATIC ANALYSIS OF A STIFFENED PLATE                  DSOUG4
ECHO   = BOTH
DISP   = ALL
STRESS = ALL
SPC    = 1
ANALYSIS = STATICS
DSAPRT(START=1,END=LAST)=ALL
DESOBJ(MIN) = 15     $ OBJECTIVE FUNCTION DEFINITION
$                      (MIN IS THE DEFAULT)
SUBCASE 1
LABEL  = LOAD CONDITION 1
LOAD   = 1
DESSUB = 100       $ CONSTRAINT DEFININITION
SUBCASE 2
LABEL  = LOAD CONDITION 2
LOAD   = 2
DESSUB = 200       $ CONSTRAINT DEFININITION
BEGIN BULK
param, post, -1
PARAM, NASPRT, 1
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
GRID    10000           0.0     0.0     0.0
GRID    10001           2.5     0.0     0.0
GRID    10002           5.0     0.0     0.0
GRID    10003           7.5     0.0     0.0
GRID    10004           10.0    0.0     0.0
GRID    10100           0.0     2.5     0.0
GRID    10101           2.5     2.5     0.0
GRID    10102           5.0     2.5     0.0
GRID    10103           7.5     2.5     0.0
GRID    10104           10.0    2.5     0.0
GRID    10200           0.0     5.0     0.0
GRID    10201           2.5     5.0     0.0
GRID    10202           5.0     5.0     0.0
GRID    10203           7.5     5.0     0.0
GRID    10204           10.0    5.0     0.0
GRID    10300           0.0     7.5     0.0
GRID    10301           2.5     7.5     0.0
GRID    10302           5.0     7.5     0.0
GRID    10303           7.5     7.5     0.0
GRID    10304           10.0    7.5     0.0
GRID    10400           0.0     10.0    0.0
GRID    10401           2.5     10.0    0.0
GRID    10402           5.0     10.0    0.0Uniform pressure load of 50 psi over the plate in the positive z-
direction
Subcase 2: Lumped vertical load of 10,000 lbs at Grid 10203&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Stiffened Plate514
Main Index
GRID    10403           7.5     10.0    0.0
GRID    10404           10.0    10.0    0.0
$
CQUAD4    1     1       10000   10001   10101   10100
CQUAD4    2     1       10001   10002   10102   10101
CQUAD4    3     1       10002   10003   10103   10102
CQUAD4    4     1       10003   10004   10104   10103
CQUAD4    5     1       10100   10101   10201   10200
CQUAD4    6     1       10101   10102   10202   10201
CQUAD4    7     1       10102   10103   10203   10202
CQUAD4    8     1       10103   10104   10204   10203
CQUAD4    9     1       10200   10201   10301   10300
CQUAD4   10     1       10201   10202   10302   10301
CQUAD4   11     1       10202   10203   10303   10302
CQUAD4   12     1       10203   10204   10304   10303
CQUAD4   13     1       10300   10301   10401   10400
CQUAD4   14     1       10301   10302   10402   10401
CQUAD4   15     1       10302   10303   10403   10402
CQUAD4   16     1       10303   10304   10404   10403
$
$11111112222222233333333444444445555555566666666777777778888888899999999
CBAR    31      3       10200   10201   0.0     0.0     1.0
1.575                   1.575
CBAR    32      3       10201   10202   0.0     0.0     1.0
1.575                   1.575
CBAR    33      3       10202   10203   0.0     0.0     1.0
1.575                   1.575
CBAR    34      3       10203   10204   0.0     0.0     1.0
1.575                   1.575
$
PSHELL  1       1       0.15    1
PSHELL  2       1       0.2     1
$11111112222222233333333444444445555555566666666777777778888888899999999
PBARL   3       1               hat
3.0     0.1     2.0     0.9
$
MAT1    1       1.0E+7          0.33    0.283
$
FORCE   1       10004           2000.0  1.0     0.0     0.0
FORCE   1       10104           2000.0  1.0     0.0     0.0
FORCE   1       10204           2000.0  1.0     0.0     0.0
FORCE   1       10304           2000.0  1.0     0.0     0.0
FORCE   1       10404           2000.0  1.0     0.0     0.0
FORCE   2       10203           10000.0 0.0     0.0     1.0
PLOAD2  1       50.     1       THRU    16
$
SPC1    1       1236    10000
SPC1    1       136     10100   10300   10400
SPC1    1       36      10001   10002   10003   10004   10104
SPC1    1       36      10401   10402   10403   10404   10304
SPC1    1       3       10204
SPC1    1       13      10200
SPC1    1       6       10101   10102   10103   10104
SPC1    1       6       10301   10302   10303   10304
$
PARAM   GRDPNT   1
PARAM   WTMASS   0.00259
PARAM   AUTOSPC  YES
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;Define the design variables:
$
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV
DESVAR  1       T-PLATE 0.15    0.001   10.0
DESVAR  2       HATDIM2 1.0     0.001   10.0&lt;/p&gt;
&lt;p&gt;515 Chapter 8: Example Problems
Stiffened Plate
Main Index
$
$&amp;hellip;Relate the design variables to analysis model properties
$   (linear relations  so use DVPREL1)
$
$&amp;hellip;Express shell thicknesses as functions of x1  x2:
$DVPREL1 ID     TYPE    PID     FID     PMIN    PMAX    C0              +
$+      DVIDD1  COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 1       PSHELL  1       T       0.01                            +DP1
+DP1    1       1.0
$
$&amp;hellip;Express BOX THICKNESS as a function of x2:
DVPREL1 3       PBARL    3       DIM2
2       0.1
$.   EXPRESS BOX OFFSET LOCATIONS AS A FUNCTION OF PLATE THICKNESS AND
$    FIXED BOX DIMENSIONS
$VCREL1 ID      TYPE    EID     CPNAME  CPMIN   CPMAX   C0              +
$+      DVIDD1  COEF1   DVID2   COEF2   &amp;hellip;
DVCREL1 10      CBAR    31      W3A                     1.5
1       0.5
DVCREL1 20      CBAR    32      W3A                     1.5
1       0.5
DVCREL1 30      CBAR    33      W3A                     1.5
1       0.5
DVCREL1 40      CBAR    34      W3A                     1.5
1       0.5
DVCREL1 50      CBAR    31      W3B                     1.5
1       0.5
DVCREL1 60      CBAR    32      W3B                     1.5
1       0.5
DVCREL1 70      CBAR    33      W3B                     1.5
1       0.5
DVCREL1 80      CBAR    34      W3B                     1.5
1       0.5
$&amp;hellip;Identify the design responses:
$
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
DRESP1   1      SBARA   STRESS  PBAR            7               3
DRESP1   2      SBARB   STRESS  PBAR            14              3
DRESP1   3      S13     STRESS  PSHELL          9               1
DRESP1   6      S16     STRESS  PSHELL          17              1
DRESP1  13      D1      DISP                    3               10302
DRESP1  14      D2      DISP                    3               10203
DRESP1  15      W       WEIGHT
$
$&amp;hellip;Place bounds on the responses:
$
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR   10    1       -25000. 25000.
DCONSTR   10    2       -25000. 25000.
DCONSTR   10    3       -25000. 25000.
DCONSTR   10    6       -25000. 25000.
DCONSTR   20    13      -0.1    0.1
DCONSTR   30    14      -0.03   0.03
$
$DCONADD DCID   DC1     DC2     &amp;hellip;
$ summed constraint set for subcase 1
DCONADD   100   10      20   &lt;br&gt;
$ summed constraint set for subcase 2
DCONADD   200   10      30   &lt;br&gt;
$
$&amp;hellip;Optional override of optimization parameters:
$
DOPTPRM IPRINT  7       DESMAX  20      DELP    0.5     P1      1       +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  P2      15
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ (DELP=0.5 allows larger moves  thus overcoming constraint
$  violations quicker)
$&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Stiffened Plate516
Main Index
ENDDATA
Design Model Description
The DVPREL1 entries express the analysis model properties in terms of design variables:
tplate = 1.0 X1
that = 0.1 X2 (8-4)
w3 = 1.5 + 0.5 X1
The third relationship adjusts the beam offset of the for the hat section to be one-half the height of the hat
stiffener plus one half the design plate thickness.
In order for a structural response to be used either as an objective or a constraint, it first must be identified
on a DRESPi Bulk Data entry. The DRESP1 entries 1 and 2, for example, identify the maximum stress at
ends A and B of a bar element.  (Item codes are used in the ATTA fields of the DRESP1 entry.  For the BAR
element, Item 7 is the maximum stress at end A, and Item 14 is the maximum stress at end B.  (See Item Codes&lt;br&gt;
of the MSC Nastran Quick Reference Guide  for a list of these plot codes.)  The ATTi fields on these entries
identify the property ID; here it is 3.  DRESP1 number 1 indicates that the maximum end A stress for every
BAR element in PBAR group 3 is to be used in the design model for a total of four such responses.  DRESP1
number 2 identifies similar information for end B of the BAR elements.
Similarly, DRESP1 entries 3 and 6 identify the von Mises stresses at Z1 and Z2 for half the elements in the
plate (only one side of the plate needs the responses in this case due to the symmetry of the structure and the
loading about line y=5.0.  Separate DRESP1 entries identify displacement responses at grid points. These
responses are constrained by the bounds set using a corresponding set of DCONSTR entries. The
DCONADD entry is used to accumulate the design constraints that are appropriate for each subcase. Note
that the stress constraints are used in both subcases while a distinct displacement constraint is applied for the
two loading conditions.
Extensive output for this example is presented in Design Optimization Output . The SUMMARY OF
DESIGN CYCLE HISTORY is repeated here Listing 8-9 and it is seen that the optimization task required 3
design cycles with 4 finite element analyses. Note that it was possible to both overcome design constraints
while reducing the weight objective function. The MAXIMUM VALUE OF CONSTRAINT column shows
the original design had a response that has a margin of error over 16% while the final design has a maximum Objective: Structural weight minimization
Design
variables:Plate thickness and hat stiffener thickness
Constraints:
Strength: von Mises stress &amp;lt; 25,000 psi at the centroid of plate elements
Maximum stress &amp;lt; 25,000 psi at both ends of rod elements.
Displacement: Vertical displacement at grid point 10302 for Subcase 1 &amp;lt; 0.1 inches
Vertical displacement at grid point 10203 for Subcase 2 &amp;lt; 0.03 inches&lt;/p&gt;
&lt;p&gt;517 Chapter 8: Example Problems
Dynamic Response Optimization
Main Index
violation that is much less than the 0.5% allowed by the GMAX parameter. The weight decreases from 6.962
to 5.484.
Listing 8-9  Design History Output for DSOUG4&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;(HARD CONVERGENCE ACHIEVED)
(SOFT CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           4
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     3
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                      6.961800E+00                                     -1.639152E-01
               1             5.369376E+00             5.369376E+00             3.185904E-13             7.196367E-02
               2             5.490995E+00             5.490995E+00             3.235036E-15            -2.979306E-03
               3             5.490995E+00             5.490995E+00             0.000000E+00            -2.979306E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;1    STATIC ANALYSIS OF A STIFFENED PLATE                  DSOUG4           OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   138
0                                                                                                                                &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       : 5&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4--------5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4--------5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T-PLATE    |   1.5000E-01 :   1.0851E-01 :   1.1292E-01 :   1.1292E-01 :
     2 |          2   |  HATDIM2    |   1.0000E+00 :   8.4327E-01 :   8.4210E-01 :   8.4210E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        3.
Dynamic Response Optimization
This example demonstrates structural optimization when the structural loads are frequency dependent.  The
system considered is a flat rectangular plate clamped on three edges and free along the fourth, as shown in
Figure 8-21. The problem investigates minimization of the mean square response of the transverse&lt;br&gt;
displacement at the midpoint of the free edge, while constraining the volume of the structure (and hence,
weight) to be equal to that of the initial design.  A pressure loading with an amplitude of 1.0 lbf /in2 is applied
across a frequency range of 20.0 to 200.0 Hz.  A small amount of frequency-dependent modal damping has
also been included.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization518
Main Index
Figure 8-21  Pressure-Loaded Flat Plate
Figure 8-22 shows the finite element representation. Due to symmetry conditions, only half of the structure
needs to be modeled.  Ten design variables are related to ten plate element property group thicknesses.  The
first such group is shown in the figure as the shaded “ring” of elements.  Subsequent design variables control
the thicknesses of subsequent rings of elements up to the tenth design variable which controls the single
element connected to GRID 1110.
Figure 8-22  Clamped-Free Plate(Uniform Pressure)XGrid 1110Y
Free
EdgeGrid 1110
xy
t1x1=Symmetric Boundary
Conditions&lt;/p&gt;
&lt;p&gt;519 Chapter 8: Example Problems
Dynamic Response Optimization
Main Index
The dynamic excitation is applied from 20. to 200. Hz. The objective is to minimize the root mean square
(RMS) of transverse displacements at GRID 1110. MSC Nastran provides several alternative ways of
computing RMS quantities and three of these are illustrated here. In the first variation, the SQRT and SSQ
arguments in the DEQATN functions and used to minimize an objective of the form:
(8-5)
The above notation indicates the square of the displacement responses are summed over 1.0 Hz intervals from
20.0 to 100.0 Hz, and over 2.0 Hz intervals from 102.0 to 200.0 Hz. The square root of this quantity,
therefore, provides a close approximation to the rms response over the frequency range. This particular form
was selected simply for illustrative purposes and to highlight the versatility of the DEQATN feature.
The second variation uses the RSS function directly on the DRESP1 entry. In this method, a root sum of
squares is performed for all the excitation frequencies in the analysis. When this response is chosen as the
objective, the resulting objective function is of the form:
(8-6)
The third variation selects the RMSDISP response type on the DRESP1 entry. The input power spectral
input is specified to be a unit value over the excitation range and the excitations frequencies are select ed so
that the response value computed from the RMSDISP response is virtually identical to that of
Equation (8-6).
Fifteen modes were retained for the modal representation. This number was selected based on a convergence
study which indicated good sensitivity information was obtained with this amount. A guideline
recommendation is to retain at least twice as many modes for modal sensitivity and optimization studies as
would be appropriate for an analysis. Of course, the resultant sensitivities should be checked for accuracy and
the number of modes increased, if necessary.
The input file Listing 8-10 shows the portion of the input that is common for all three versions of the example.
It can be seen that the thickness distribution of the initial design is a constant 0.08 inches. The corresponding
initial volume is 8.0 in3. The volume constraint is imposed as follows: the volume response is first identified
on DRESP1 number 201, bounds are placed on this response by DCONSTR number 10, which is in turn
selected as a global constraint in Case Control (global, since volume is a subcase-independent response) using
the DESGLB Case Control command. This results in:
7.99 vol8.01 (8-7)
Listing 8-10  Common Portion of Input File DSOUG7
ID MSC  DSOUG7A $
TIME 200
SOL 200
CEND
TITLE = Synthesis of Responses across Different Frequencies: DSOUG7A
SET 10 = 1110min uz1110i2
i20=100
2 uz11102i2
i51=100
+ =
min uz1110i2
i20=200
=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization520
Main Index
DISPL(PHASE,SORT1) = 10   $ MAGNITUDE/PHASE REPRESENTATION FOR RESPONSE
$                           ANALYSIS AS WELL AS SENSITIVITY ANALYSIS
desglb = 10
subcase 1
SPC          = 100
DLOAD        = 700
FREQ         = 740
METHOD       = 500
ANALYSIS =  MFREQ
sdamping   = 2000
DESOBJ = 1
output
disp(plot,phase) = 10
output(xyout)
cscale 2.0
ymax=4.0
plotter = nastran
ytitle = displacement at grid 1110
xyplot disp / 1110(t3)
$
BEGIN BULK
PARAM   WTMASS  .002588
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;GRID AND SPC DATA:
$
GRDSET                                                       6
GRID    100             0.      0.      0.
=       *(1) =          *(1.)   =       =
=9
GRID    200            0.      1.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    300            0.      2.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    400             0.      3.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    500             0.      4.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    600             0.      5.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    700             0.      6.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    800             0.      7.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    900             0.      8.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    1000            0.      9.0     0.
=       *(1)    =       *(1.)   =       =
=9
GRID    1100            0.      10.0    0.
=       *(1)    =       *(1.)   =       =
=9
$
SPC1    100     123456  100     101     102     103     104     105     +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  106     107     108     109     110     200     300     400     +
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  500     600     700     800     900     1000    1100
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPC1    100     246     1101    1102    1103    1104    1105    1106    +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  1107    1108    1109
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;521 Chapter 8: Example Problems
Dynamic Response Optimization
Main Index
SPC1    100     246     1110
$
$&amp;hellip;ELEMENT DEFINITION AND PROPERTIES:
$   (ELEMENTS GROUPED BY PID SINCE THICKNESS OF ALL ELEMENTS IN A GROUP
$    ARE TO BE AFFECTED BY A SINGLE DESIGN VARIABLE)
$
MAT1    150     1.0E7           0.3     0.1
$&amp;hellip;ELEMENT GROUP 1:
CQUAD4  101     1       100     101     201     200
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=8
CQUAD4  102     1       101     102     202     201
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=7
PSHELL  1       150     .08     150
$&amp;hellip;ELEMENT GROUP 2:
CQUAD4  202     2       201     202     302     301
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=7
CQUAD4  203     2       202     203     303     302
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=6
PSHELL  2       150     .08     150
$&amp;hellip;ELEMENT GROUP 3:
CQUAD4  303     3       302     303     403     402
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=6
CQUAD4  304     3       303     304     404     403
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=5
PSHELL  3       150     .08     150
$&amp;hellip;ELEMENT GROUP 4:
CQUAD4  404     4       403     404     504     503
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=5
CQUAD4  405     4       404     405     505     504
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=4
PSHELL  4       150     .08     150
$&amp;hellip;ELEMENT GROUP 5:
CQUAD4  505     5       504     505     605     604
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=4
CQUAD4  506     5       505     506     606     605
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=3
PSHELL  5       150     .08     150
$&amp;hellip;ELEMENT GROUP 6:
CQUAD4  606     6       605     606     706     705
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=3
CQUAD4  607     6       606     607     707     706
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=2
PSHELL  6       150     .08     150
$&amp;hellip;ELEMENT GROUP 7:
CQUAD4  707     7       706     707     807     806
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=2
CQUAD4  708     7       707     708     808     807
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
=1
PSHELL  7       150     .08     150
$&amp;hellip;ELEMENT GROUP 8:
CQUAD4  808     8       807     808     908     907
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
=1
CQUAD4  809     8       808     809     909     908&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization522
Main Index
=       *(1)    =       *(1)    *(1)    *(1)    *(1),
PSHELL  8       150     .08     150
$&amp;hellip;ELEMENT GROUP 9:
CQUAD4  909     9       908     909     1009    1008
=       *(100)  =       *(100)  *(100)  *(100)  *(100)
CQUAD4  910     9       909     910     1010    1009
PSHELL  9       150     .08     150
$&amp;hellip;ELEMENT GROUP 10:
CQUAD4  1010    10      1009    1010    1110    1109
PSHELL  10      150     .08     150
$
$&amp;hellip;EIGENVALUE EXTRACTION INFORMATION - 15 RETAINED MODES
$
EIGRL   500                     15      0
$
$&amp;hellip;FREQUENCY DEPENDENT LOADING DATA: (OSCILLATORY PRESSURE LOAD)
$
RLOAD1  700     730                     800
PLOAD2  730     1.0     101     THRU    110
PLOAD2  730     1.0     201     THRU    210
PLOAD2  730     1.0     301     THRU    310
PLOAD2  730     1.0     401     THRU    410
PLOAD2  730     1.0     501     THRU    510
PLOAD2  730     1.0     601     THRU    610
PLOAD2  730     1.0     701     THRU    710
PLOAD2  730     1.0     801     THRU    810
PLOAD2  730     1.0     901     THRU    910
PLOAD2  730     1.0     1001    THRU    1010
TABLED1 800                                                             +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  0.0     1.0     1.0E3   1.0     ENDT
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$
tabdmp1 2000
0.0     0.20    1000.0  0.20    endt
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;SPECIFY DESIGN VARIABLES  RELATE LINEARLY TO PLATE THICKNESS
DESVAR  1       T1      .08     .001     1.0
DESVAR  2       T2      .08     .001     1.0
DESVAR  3       T3      .08     .001     1.0
DESVAR  4       T4      .08     .001     1.0
DESVAR  5       T5      .08     .001     1.0
DESVAR  6       T6      .08     .001     1.0
DESVAR  7       T7      .08     .001     1.0
DESVAR  8       T8      .08     .001     1.0
DESVAR  9       T9      .08     .001     1.0
DESVAR  10      T10     .08     .001     1.0
$
$&amp;hellip;RELATE DESIGN VARIABLES TO PLATE THICKNESSES
DVPREL1 101     PSHELL  1       T       .01                          &lt;br&gt;
1       1.0
DVPREL1 102     PSHELL  2       T       .01                          &lt;br&gt;
2       1.0     &lt;br&gt;
DVPREL1 103     PSHELL  3       T       .01                          &lt;br&gt;
3       1.0
DVPREL1 104     PSHELL  4       T       .01                          &lt;br&gt;
4       1.0
DVPREL1 105     PSHELL  5       T       .01                          &lt;br&gt;
5       1.0
DVPREL1 106     PSHELL  6       T       .01                          &lt;br&gt;
6       1.0
DVPREL1 107     PSHELL  7       T       .01                          &lt;br&gt;
7       1.0
DVPREL1 108     PSHELL  8       T       .01                          &lt;br&gt;
8       1.0
DVPREL1 109     PSHELL  9       T       .01&lt;/p&gt;
&lt;p&gt;523 Chapter 8: Example Problems
Dynamic Response Optimization
Main Index
9       1.0
DVPREL1 110     PSHELL  10      T       .01                          &lt;br&gt;
10      1.0
$
DRESP1  201     VOLUME  VOLUME
include &amp;lsquo;dsoug7_deq.inc&amp;rsquo;
$include &amp;lsquo;dsoug7_rss.inc&amp;rsquo;
$include &amp;lsquo;dsoug7_rms.inc&amp;rsquo;
$
$
DCONSTR 10      201     7.99    8.01
doptprm desmax  40      p1      1       p2      8       conv1   0.01
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
$
PARAM   POST - 1
ENDDATA
The three versions of the objective are developed by including one of three files. The first is named
dsoug7_deq.inc and is given in Listing 8-11. The RMS response is the objective function. The underlying
transverse displacements are first identified by DRESP1 entries 20 through 100 and 102 through 200 (note
the use of Bulk Data replicators, a capability that is considered obsolete in the presence of preprocessors).
These identify the transverse component of displacement at GRID 1110 across the frequency range of
interest. These first-level responses are then used as input to DEQATN 1 via DRESP2 number 1, which
defines the equation input.  The resultant response is then defined as the objective function using the Case
Control DESOBJ command. The DEQATN uses the SSQ and SQRT functions to create the objective given
by Equation (8-5).
Listing 8-11  Include File dsoug7-deq.inc
FREQ1 740 20. 1. 179
DRESP1  20      g1110L  FRDISP                  3       20.0    1110
=       *(1)    =       =       =       =       =       *(1.0)  =
=79
DRESP1  102     G1110H  FRDISP                  3       102.0   1110
=       *(2)    =       =       =       =       =       *(2.0)  =
=48
$
DRESP2  1       UZ2     1
DRESP1  20      21      22      23      24      25      26
27      28      29      30      31      32      33
34      35      36      37      38      39      40
41      42      43      44      45      46      47
48      49      50      51      52      53      54
55      56      57      58      59      60      61
62      63      64      65      66      67      68
69      70      71      72      73      74      75
76      77      78      79      80      81      82
83      84      85      86      87      88      89
90      91      92      93      94      95      96
97      98      99      100     102     104     106
108     110     112     114     116     118     120
122     124     126     128     130     132     134
136     138     140     142     144     146     148
150     152     154     156     158     160     162
164     166     168     170     172     174     176
178     180     182     184     186     188     190
192     194     196     198     200
$
DEQATN  1       UZ2(U20,u21,u22,u23,u24,u25,U26,U27,U28,U29,U30,
U31,U32,U33,U34,U35,U36,U37,U38,U39,U40,
U41,U42,U43,U44,U45,U46,U47,U48,U49,U50,
U51,U52,U53,U54,U55,U56,U57,U58,U59,U60,
U61,U62,U63,U64,U65,U66,U67,U68,U69,U70,&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization524
Main Index
U71,U72,U73,U74,U75,U76,U77,U78,U79,U80,
U81,U82,U83,U84,U85,U86,U87,U88,U89,U90,
U91,U92,U93,U94,U95,U96,U97,U98,U99,U100,
U102,U104,U106,U108,U110,U112,U114,U116,U118,U120,
U122,U124,U126,U128,U130,U132,U134,U136,U138,U140,
U142,U144,U146,U148,U150,U152,U154,U156,U158,U160,
U162,U164,U166,U168,U170,U172,U174,U176,U178,U180,
U182,U184,U186,U188,U190,U192,U194,U196,U198,U200)
=sqrt(ssq(U20,u21,u22,u23,u24,u25,U26,U27,U28,U29,U30,
U31,U32,U33,U34,U35,U36,U37,U38,U39,U40,
U41,U42,U43,U44,U45,U46,U47,U48,U49,U50,
U51,U52,U53,U54,U55,U56,U57,U58,U59,U60,
U61,U62,U63,U64,U65,U66,U67,U68,U69,U70,
U71,U72,U73,U74,U75,U76,U77,U78,U79,U80,
U81,U82,U83,U84,U85,U86,U87,U88,U89,U90,
U91,U92,U93,U94,U95,U96,U97,U98,U99,U100) + 2.0 *
ssq( U102,U104,U106,U108,U110,U112,U114,U116,U118,U120,
U122,U124,U126,U128,U130,U132,U134,U136,U138,U140,
U142,U144,U146,U148,U150,U152,U154,U156,U158,U160,
U162,U164,U166,U168,U170,U172,U174,U176,U178,U180,
U182,U184,U186,U188,U190,U192,U194,U196,U198,U200))
The input for the second version is given in Listing 8-12 and it is seen that the RSS specification of the ATTB
field of the DRESP1 with ID=1 is sufficient to generate a root mean square response. In this case, all 181
frequencies contribute to the response.
Listing 8-12  Include File dsoug7-rss.inc
The unique input for the third version is given in Listing 8-13. The excitation frequencies have been changed
so that 2 Hz intervals are taken at excitation frequencies above 100. Hz. In this case, a DRESP1 with an
RMSDISP response type is used. The ATTB field of the DRESP1 points to the RANDPS entry with ID=20.
This random input power spectrum has a value of 1.0 across the range of excitation frequencies, with the net
result that the RMSDISP is virtually identical to the DEQATN of the first variation given by Equation (8-5).
Listing 8-13  Include File dsoug7-rms.inc
Printed output results for the three options are given in Listing 8-14, Listing 8-15, and Listing 8-16. The RMS
value decreases from 15.20 to around 12.0. $
FREQ1   740     20.     1.      180
DRESP1  1       g1110L  FRDISP                  3       rss     1110
$
FREQ1   740     20.     1.      79
FREQ1 740102. 2. 49
DRESP1  1       G1110L  RMSDISP                 3       20      1110
RANDPS 201 1 1.0 20
TABRND1 20
0.0 1.0 1000.0 1.0ENDT&lt;/p&gt;
&lt;h2&gt;525 Chapter 8: Example Problems
Dynamic Response Optimization
Main Index
Listing 8-14  Design History Results Using the DEQATN Option
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                      1.519651E+01                                     -1.248439E-03
               1             1.440165E+01             1.371054E+01             5.040694E-02            -1.248439E-03
               2             1.331217E+01             1.277316E+01             4.219882E-02            -1.248439E-03
               3             1.251692E+01             1.218467E+01             2.726748E-02            -1.248439E-03
               4             1.207519E+01             1.188961E+01             1.560810E-02            -1.248439E-03
               5             1.184918E+01             1.177518E+01             6.284044E-03            -1.248439E-03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;1    SYNTHESIS OF RESPONSES ACROSS DIFFERENT FREQUENCIES: DSOUG7            OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    79&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 1           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   8.0000E-02 :   9.6000E-02 :   9.6303E-02 :   9.9617E-02 :   9.8060E-02 :   1.0030E-01 :
     2 |          2   |  T2         |   8.0000E-02 :   7.7277E-02 :   8.4720E-02 :   8.3546E-02 :   8.5640E-02 :   8.3477E-02 :
     3 |          3   |  T3         |   8.0000E-02 :   6.6769E-02 :   6.6805E-02 :   7.0157E-02 :   7.0028E-02 :   6.8880E-02 :
     4 |          4   |  T4         |   8.0000E-02 :   6.7685E-02 :   5.6456E-02 :   4.8935E-02 :   4.5831E-02 :   4.3824E-02 :
     5 |          5   |  T5         |   8.0000E-02 :   7.3574E-02 :   6.4543E-02 :   5.6337E-02 :   5.1500E-02 :   4.9775E-02 :
     6 |          6   |  T6         |   8.0000E-02 :   7.9502E-02 :   7.5001E-02 :   7.1941E-02 :   7.3333E-02 :   7.4746E-02 :
     7 |          7   |  T7         |   8.0000E-02 :   8.5572E-02 :   8.6653E-02 :   8.6662E-02 :   8.9289E-02 :   9.1110E-02 :
     8 |          8   |  T8         |   8.0000E-02 :   9.4687E-02 :   1.0864E-01 :   1.1486E-01 :   1.1276E-01 :   1.1286E-01 :
     9 |          9   |  T9         |   8.0000E-02 :   9.5861E-02 :   1.1503E-01 :   1.3804E-01 :   1.5199E-01 :   1.5569E-01 :
    10 |         10   |  T10        |   8.0000E-02 :   9.6000E-02 :   1.1418E-01 :   1.3623E-01 :   1.6348E-01 :   1.8279E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        5.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization526
Main Index
Listing 8-15  Design History Results for the RSS Option on DRESP1
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      1.519890E+01                                     -1.248439E-03
1             1.440368E+01             1.371261E+01             5.039654E-02            -1.248439E-03
2             1.331418E+01             1.277491E+01             4.221385E-02            -1.248439E-03
3             1.251839E+01             1.218573E+01             2.729881E-02            -1.248439E-03
4             1.207604E+01             1.189011E+01             1.563755E-02            -1.248439E-03
5             1.184955E+01             1.177484E+01             6.345125E-03            -1.248439E-03
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1    SYNTHESIS OF RESPONSES ACROSS DIFFERENT FREQUENCIES: DSOUG7            OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   443&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 1           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   8.0000E-02 :   9.6000E-02 :   9.6295E-02 :   9.9612E-02 :   9.8057E-02 :   1.0029E-01 :
     2 |          2   |  T2         |   8.0000E-02 :   7.7267E-02 :   8.4709E-02 :   8.3531E-02 :   8.5623E-02 :   8.3458E-02 :
     3 |          3   |  T3         |   8.0000E-02 :   6.6759E-02 :   6.6784E-02 :   7.0131E-02 :   6.9999E-02 :   6.8847E-02 :
     4 |          4   |  T4         |   8.0000E-02 :   6.7685E-02 :   5.6451E-02 :   4.8911E-02 :   4.5780E-02 :   4.3753E-02 :
     5 |          5   |  T5         |   8.0000E-02 :   7.3586E-02 :   6.4569E-02 :   5.6378E-02 :   5.1561E-02 :   4.9867E-02 :
     6 |          6   |  T6         |   8.0000E-02 :   7.9518E-02 :   7.5035E-02 :   7.1981E-02 :   7.3367E-02 :   7.4791E-02 :
     7 |          7   |  T7         |   8.0000E-02 :   8.5580E-02 :   8.6674E-02 :   8.6687E-02 :   8.9313E-02 :   9.1148E-02 :
     8 |          8   |  T8         |   8.0000E-02 :   9.4683E-02 :   1.0863E-01 :   1.1488E-01 :   1.1280E-01 :   1.1291E-01 :
     9 |          9   |  T9         |   8.0000E-02 :   9.5861E-02 :   1.1503E-01 :   1.3804E-01 :   1.5202E-01 :   1.5575E-01 :
    10 |         10   |  T10        |   8.0000E-02 :   9.6000E-02 :   1.1417E-01 :   1.3622E-01 :   1.6347E-01 :   1.8279E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        5.
Listing 8-16  Design History for the RMS Option
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           7
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     6
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      1.518879E+01                                     -1.248439E-03
1             1.439476E+01             1.369964E+01             5.074054E-02            -1.248439E-03
2             1.326808E+01             1.265938E+01             4.808307E-02            -1.248439E-03
3             1.233925E+01             1.193572E+01             3.380842E-02            -1.248439E-03
4             1.177680E+01             1.153835E+01             2.066592E-02            -1.248439E-03
5             1.147208E+01             1.137074E+01             8.912379E-03            -1.248439E-03
6             1.134889E+01             1.128553E+01             5.614209E-03            -1.248439E-03
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1    SYNTHESIS OF RESPONSES ACROSS DIFFERENT FREQUENCIES: DSOUG7            OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    52&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 1           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   8.0000E-02 :   9.6000E-02 :   9.5526E-02 :   9.9420E-02 :   9.6665E-02 :   9.8223E-02 :
     2 |          2   |  T2         |   8.0000E-02 :   7.6866E-02 :   8.3420E-02 :   8.0723E-02 :   8.3484E-02 :   8.0532E-02 :
     3 |          3   |  T3         |   8.0000E-02 :   6.6472E-02 :   6.4740E-02 :   6.5594E-02 :   6.5037E-02 :   6.3416E-02 :
     4 |          4   |  T4         |   8.0000E-02 :   6.7769E-02 :   5.5639E-02 :   4.4940E-02 :   3.6399E-02 :   3.2604E-02 :
     5 |          5   |  T5         |   8.0000E-02 :   7.3661E-02 :   6.5310E-02 :   5.7365E-02 :   5.4659E-02 :   5.8079E-02 :
     6 |          6   |  T6         |   8.0000E-02 :   7.9607E-02 :   7.7075E-02 :   7.5476E-02 :   7.7135E-02 :   7.9679E-02 :
     7 |          7   |  T7         |   8.0000E-02 :   8.6333E-02 :   9.0835E-02 :   9.4095E-02 :   9.5659E-02 :   9.7136E-02 :
     8 |          8   |  T8         |   8.0000E-02 :   9.6000E-02 :   1.1376E-01 :   1.3122E-01 :   1.3548E-01 :   1.2718E-01 :
     9 |          9   |  T9         |   8.0000E-02 :   9.4650E-02 :   1.1358E-01 :   1.3630E-01 :   1.6356E-01 :   1.7525E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;527 Chapter 8: Example Problems
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization
Main Index
10 |         10   |  T10        |   8.0000E-02 :   9.6184E-02 :   1.1500E-01 :   1.3667E-01 :   1.6225E-01 :   1.9205E-01 :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;10----------10-----t10-----------80000e-02----96184e-02----11500e-01----13667e-01----16225e-01----19205e-01-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#10----------10-----t10-----------80000e-02----96184e-02----11500e-01----13667e-01----16225e-01----19205e-01-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   9.4962E-02 :
     2 |          2   |  T2         |   8.2114E-02 :
     3 |          3   |  T3         |   6.2652E-02 :
     4 |          4   |  T4         |   3.1166E-02 :
     5 |          5   |  T5         |   6.0859E-02 :
     6 |          6   |  T6         |   8.1423E-02 :
     7 |          7   |  T7         |   9.8918E-02 :
     8 |          8   |  T8         |   1.2416E-01 :
     9 |          9   |  T9         |   1.7539E-01 :
    10 |         10   |  T10        |   2.1318E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        6 .
Figure 8-23 shows the initial and final response data for the displacements used to formulate the objective for
the first variation of this problem (the other variations have a similar form). Note that the integral of the final
curve is indeed less than that of the original curve. In addition, the response peak has shifted somewhat, from
a value of 3.623 at 58 Hz to a value of 3.017 at 53 Hz, indicating a slight decrease in overall structural
stiffness.
Figure 8-23  Frequency-Dependent Displacements
Twenty-Five Bar Truss, Superelement and Discrete
Variable Optimization
This problem, often seen in the early design optimization literature, calls for a minimum weight structure
subject to member stress, Euler buckling, and joint displacement constraints.  The structure is shown in
Figure 8-24. The formulation of the buckling constraints is a good example of constructing normalized
constraints based on user-defined structural responses.
In addition, this problem will be substructured in order to illustrate superelement optimization and the final
design will be selected from a user specified list of discrete variables.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization528
Main Index
Figure 8-24  Twenty-Five Bar Truss
Analysis Model Description
Three-dimensional truss tower
Symmetric with respect to x-y plane and y-z plane
Weight density = 0.1 lb/in3
Materials:  E = 1.0E7 psi
T wo distinct loading conditions
Design Model Description
Minimization of structural weight
Design variables: Cross-sectional areas linked to eight independent design variables
Constraints:
Allowable stress: T ensile = 40,000 psi
Compressive = -40,000 psi
Displacement: 0.35 inches at grid 1 and 2 for all translational degrees of
freedom
Euler buckling constraints for compressive members assuming tubular section
diameter to thickness ratio of 10101
2
4
8
9756 3Superelement 1
Superelement 0Y
X&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P28</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_028/</guid>
      <description>
        
        
        &lt;p&gt;529 Chapter 8: Example Problems
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization
Main Index
Euler buckling occurs when the magnitude of a member&amp;rsquo;s compressive stress is greater than a critical stress
which, for the first buckling mode of a pin-connected member, is
(8-8)
We will prescribe thin-walled tubular members with a diameter-to-thickness ratio of 10, as indicated in the
sketch in Figure 8-25.
Figure 8-25  Thin-Walled Tube Cross-Section
With this formulation, the area and inertia terms of Equation (8-8) become
(8-9)
(8-10)
The critical buckling stress of Equation (8-8) can therefore be written as:
(8-11)bPb
A&amp;mdash;&amp;mdash;1
A&amp;mdash;2EI
L2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –
= =
A 2ro2ri2–DavgtDavg2
10&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = = =
I
4&amp;mdash;ro4ri4– 0.013 Davg4= =
b2E
L2A&amp;mdash;&amp;mdash;&amp;mdash;- – I0.13 2EDavg2
L2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – = =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization530
Main Index
It is also desirable to impose a factor of safety on the design for buckling so that the buckling response
constraint can be written as:
(8-12)
where Fs is the factor of safety.
The input data file for this example is shown in Listing 8-17 and needs only limited description. Eight
independent design variables (DESVAR 1 through 8) are used to represent eight ROD average diameters (the
diameter of the midsurface of the thin-walled tube). A single list of discrete variables is invoked on each
DESVAR entry to limit the allowable values of the design variables to 0.1, 0.5, or integer values between 1.0
and 100.0. DVPREL2 entries are used to relate the design variables to the rod areas using the relationship of
Equation (8-9).
Listing 8-17  Input File for Example DSOUG8
ID MSC  DSOUG8 $
TIME  10
SOL 200       $  OPTIMIZATION
CEND
TITLE    = OPTIMAL SIZING OF A 25-BAR TRUSS  -                 DSOUG8
SUBTITLE = EIGHT INDEPENDENT ROD DIAMETERS
ECHO     = UNSORT
OLOAD    = ALL
DISP     = ALL
SPCFORCE = ALL
ELFORCE  = ALL
STRESS   = ALL
SPC      = 100
ANALYSIS = STATICS $
DESOBJ(MIN) = 15      $ OBJECTIVE FUNCTION DEFINITION
DESSUB = 12           $ CONSTRAINT DEFININITION
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD = 310
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
$
SESET   1       1       2
GRDSET                                                  456
MAT1    1       10.0E6                  0.1                             +M1
+M1     25000.  25000.
SPC1    100     123     7       THRU    10
GRID    1                -37.5     0.0  200.0
GRID    2                 37.5     0.0  200.0
GRID    3                -37.5    37.5  100.0
GRID    4                 37.5    37.5  100.0
GRID    5                 37.5   -37.5  100.0
GRID    6                -37.5   -37.5  100.0
GRID    7               -100.0   100.0    0.0
GRID    8                100.0   100.0    0.0
GRID    9                100.0  -100.0    0.0
GRID    10              -100.0  -100.0    0.0rFs
b&amp;mdash;&amp;mdash;&amp;mdash;7.69L2Fs–
2EDavg2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1.0 = =&lt;/p&gt;
&lt;p&gt;531 Chapter 8: Example Problems
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization
Main Index
CROD    1       1       1       2
CROD    2       2       1       4
CROD    3       2       2       3
CROD    4       2       1       5
CROD    5       2       2       6
CROD    6       3       2       4
CROD    7       3       2       5
CROD    8       3       1       3
CROD    9       3       1       6
CROD    10      4       3       6
CROD    11      4       4       5
CROD    12      5       3       4
CROD    13      5       5       6
CROD    14      6       3       10
CROD    15      6       6       7
CROD    16      6       4       9
CROD    17      6       5       8
CROD    18      7       4       7
CROD    19      7       3       8
CROD    20      7       5       10
CROD    21      7       6       9
CROD    22      8       6       10
CROD    23      8       3       7
CROD    24      8       5       9
CROD    25      8       4       8
$
PROD    1       1       2.0     0.0
PROD    2       1       2.0     0.0
PROD    3       1       2.0     0.0
PROD    4       1       2.0     0.0
PROD    5       1       2.0     0.0
PROD    6       1       2.0     0.0
PROD    7       1       2.0     0.0
PROD    8       1       2.0     0.0
$
FORCE   300     1               1.0     1000.    10000. -5000.
FORCE   300     2               1.0        0.    10000. -5000.
FORCE   300     3               1.0      500.        0.     0.
FORCE   300     6               1.0      500.        0.     0.
FORCE   310     1               1.0        0.    20000. -5000.
FORCE   310     2               1.0        0.   -20000. -5000.
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
$
$&amp;hellip;DEFINE THE DESIGN VARIABLES
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV DDVAL
$
DESVAR  1       D1      2.0     0.01    100.0 10
DESVAR  2       D2      2.0     0.01    100.0 10
DESVAR  3       D3      2.0     0.01    100.0 10
DESVAR  4       D4      2.0     0.01    100.0 10
DESVAR  5       D5      2.0     0.01    100.0 10
DESVAR  6       D6      2.0     0.01    100.0 10
DESVAR  7       D7      2.0     0.01    100.0 10
DESVAR  8       D8      2.0     0.01    100.0 10
DDVAL 10 0.1 0.5
1.0 THRU 100. BY 1.0
$
$&amp;hellip;RELATE THE DESIGN VARIABLES TO THE ANALYSIS MODEL PROPERTIES
$DVPREL2 ID     TYPE    PID     FID     PMIN    PMAX    EQID       &lt;br&gt;
$        DESVAR DVID1 &lt;br&gt;
$
DVPREL2 1       PROD    1       A 100
DESVAR  1
DVPREL2 2       PROD    2       A 100
DESVAR  2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization532
Main Index
DVPREL2 3       PROD    3       A 100
DESVAR  3             &lt;br&gt;
DVPREL2 4       PROD    4       A 100
DESVAR  4
DVPREL2 5       PROD    5       A 100
DESVAR  5
DVPREL2 6       PROD    6       A 100
DESVAR  6&lt;br&gt;
DVPREL2 7       PROD    7       A 100
DESVAR  7
DVPREL2 8       PROD    8       A 100
DESVAR  8       &lt;br&gt;
$
$                                                                   &lt;br&gt;
$&amp;hellip;EQUATIONS USED TO DEFINE TYPE 2 PROPERTIES                 &lt;br&gt;
$DEQATN EQUID   F() = &amp;hellip;                                           &lt;br&gt;
$                                                                   &lt;br&gt;
DEQATN  100     AREA(DAVG) = PI(1) * DAVG**2 / 10.0;&lt;br&gt;
$                                                                   &lt;br&gt;
$&amp;hellip;IDENTIFY THE RESPONSES TO BE USED IN THE DESIGN MODEL
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
$
DRESP1  1       S1      STRESS  PROD            2               1
DRESP1  2       S2      STRESS  PROD            2               2
DRESP1  3       S3      STRESS  PROD            2               3
DRESP1  4       S4      STRESS  PROD            2               4
DRESP1  5       S5      STRESS  PROD            2               5
DRESP1  6       S6      STRESS  PROD            2               6
DRESP1  7       S7      STRESS  PROD            2               7
DRESP1  8       S8      STRESS  PROD            2               8
DRESP1  9       D1      DISP                    123             1
DRESP1  12      D4      DISP                    123             2
DRESP1  15      W       WEIGHT
$
$&amp;hellip;FORMULATE THE SECOND LEVEL RESPONSES (HERE  SIMPLE EULER BUCKLING)
$DRESP2 ID      LABEL   EQID    REGION                              &lt;br&gt;
$+      DESVAR  DVID1   DVID2   &amp;hellip;                                 &lt;br&gt;
$+      DTABLE  LABEL1  LABEL2  &amp;hellip;                                 &lt;br&gt;
$+      DRESP1  NR1     NR2     &amp;hellip;                                 &lt;br&gt;
$+      DNODE   NID1    DIR1    NID2    DIR2    &amp;hellip;                 &lt;br&gt;
$
DRESP2  16      SC1     1                                           &lt;br&gt;
DESVAR  1                                                   &lt;br&gt;
DTABLE  FS E L1
DRESP1  1
DRESP2  17      SC2     1                                           &lt;br&gt;
DESVAR  2                    &lt;br&gt;
DTABLE  FS E L2
DRESP1  2
DRESP2  18      SC3     1                                           &lt;br&gt;
DESVAR  3
DTABLE  FS E L3
DRESP1  3
DRESP2  19      SC4     1                                           &lt;br&gt;
DESVAR  4                                                   &lt;br&gt;
DTABLE  FS E L4
DRESP1  4
DRESP2  20      SC5     1                                           &lt;br&gt;
DESVAR  5                                                   &lt;br&gt;
DTABLE  FS E L5
DRESP1  5
DRESP2  21      SC6     1                                           &lt;br&gt;
DESVAR  6                                                   &lt;br&gt;
DTABLE  FS E L6
DRESP1  6
DRESP2  22      SC7     1&lt;/p&gt;
&lt;p&gt;533 Chapter 8: Example Problems
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization
Main Index
DESVAR  7                                                   &lt;br&gt;
DTABLE  FS E L7
DRESP1  7
DRESP2  23      SC8     1                                            &lt;br&gt;
DESVAR  8                                                   &lt;br&gt;
DTABLE  FS E L8
DRESP1  8
$
$&amp;hellip;EQUATIONS USED TO DEFINE SECOND LEVEL RESPONSES
$DEQATN EQUID   F() = &amp;hellip;
$
DEQATN  1       NUM(DAVG,FS,E,L,SIGMA) = 7.69 * L**2 * SIGMA;
DENOM                  = (PI(1) * DAVG)**2*E;
BUCKLING               = -FS * NUM / DENOM&lt;br&gt;
$
$&amp;hellip;TABLE CONSTANTS
$DTABLE LABEL1  VALUE1  LABEL2  VALUE2  LABEL3  VALUE3  LABEL4  VALUE4&lt;br&gt;
$+      LABEL5  VALUE5  &amp;hellip;
$
DTABLE  L1      75.00   L2      130.50  L3      106.80  L4       75.00&lt;br&gt;
L5      75.00   L6      181.14  L7      181.14  L8      133.46
E       1.0E7   FS      1.25
$
$&amp;hellip;DEFINE THE DESIGN CONSTRAINTS
$CONSTR DCID    RID     LALLOW  UALLOW
$
DCONSTR 10      1       -40000. 40000.
DCONSTR 10      2       -40000. 40000.
DCONSTR 10      3       -40000. 40000.
DCONSTR 10      4       -40000. 40000.
DCONSTR 10      5       -40000. 40000.
DCONSTR 10      6       -40000. 40000.
DCONSTR 10      7       -40000. 40000.
DCONSTR 10      8       -40000. 40000.
DCONSTR 10      9       -0.35   0.35
DCONSTR 10      10      -0.35   0.35
$
DCONSTR 11      16 1.0
DCONSTR 11      17 1.0
DCONSTR 11      18 1.0
DCONSTR 11      19 1.0
DCONSTR 11      20 1.0
DCONSTR 11      21 1.0
DCONSTR 11      22 1.0
DCONSTR 11      23 1.0
$
$&amp;hellip;COMBINE THE TWO CONSTRAINT SETS
$   (EQUIVALENT TO JUST PUTTING ALL INTO THE SAME SET TO BEGIN WITH)
DCONADD 12      10      11
$
$&amp;hellip;OVERRIDE OPTIMIZATION PARAMETER DEFAULTS:
$
DOPTPRM IPRINT  3 DESMAX        15      DELP    0.5     P1      1
P2      15
ENDDATA
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
Axial stresses and grid displacements are identified on DRESP1 entries 1 through 12 and are constrained
using DCONSTR entries with an ID of 10. Additionally, the axial rod stresses are used as input in the
definition of the Euler buckling responses DRESP2s 16 through 23), which all reference DEQATN 1. Note
that element lengths are included in these relations via constants defined on the DTABLE entry. This
simplifies the input since the element lengths do not need to be hard-coded on eight different DEQATN
entries. The DTABLE entry also defines the factor of safety at 125%. DCONSTR entries place bounds on
the buckling response. Since the lower bound is not of interest (e.g., tensile stresses on the elements will not
induce Euler buckling), we leave the lower bound blank on the DCONSTR entry.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Twenty-Five Bar Truss, Superelement and Discrete Variable Optimization534
Main Index
T urning to the superelement analysis model, in Case Control the SUPER = ALL command is recommended,
rather than an explicit data recovery subcase for each superelement.  In Bulk Data, the SESET has been used
to place grids 1 and 2 on the interior of superelement 1.
As far as the superelement aspects of the design model are concerned, the WEIGHT response of DRESP1
ID 15 has an “ALL” to indicate the total structural weight across all superelements is to be computed and
used as the objective Function. “ALL” i s the default for this attribute so that even this adjustment in the design
model to accommodate superelements was not strictly necessary.
Final results for the design task are shown in Listing 8-18. Note that the design required five finite analyses: an
initial design, three continuous redesigns, and a final discrete design. The initial design had a weight of 795.9
and was infeasible by a large amount (the maximum constraint value is 6.12). After eight redesigns, the weight
increased to 814.1 and the design is feasible. A single discrete variable optimization is performed and the
weight increases to 1007.3 while the maximum constraint decreases. The rather large increase in the objective
of over 200. caused by the discrete design may motivate consideration of additional discrete sizes.
Listing 8-18  Design History Results for DSOUG8&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;(HARD CONVERGENCE ACHIEVED)
(SOFT FEASIBLE DISCRETE DESIGN OBTAINED)
(HARD FEASIBLE DISCRETE DESIGN OBTAINED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          10
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     8
NUMBER OF DISCRETE PROCESSING ANALYSES COMPLETED      1
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT 
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                      4.155959E+02                                      6.115135E+00
               1             8.326029E+02             8.326029E+02            -5.658379E-13             4.043654E-01
               2             8.196226E+02             8.196226E+02            -7.046281E-14             5.899931E-03
               3             8.078099E+02             8.078099E+02             5.629386E-15             5.990734E-03
               4             8.031328E+02             8.031328E+02             7.643928E-15             1.996662E-05
               5             8.002964E+02             8.002964E+02             2.272895E-15             2.232508E-05
               6             7.986649E+02             7.986649E+02             1.138769E-15             3.249383E-05
               7             7.977197E+02             7.977197E+02             1.425148E-15             6.177562E-05
               8             7.971573E+02             7.971573E+02             1.283538E-15             1.467849E-04
               8D            1.007323E+03             1.007323E+03            -6.466897E-14            -1.106629E-01
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;1    OPTIMAL SIZING OF A 25-BAR TRUSS  -                 DSOUG8             OCTOBER   4, 2018  MSC Nastran  7/24/18&lt;br&gt;
PAGE   285
EIGHT INDEPENDENT ROD DIAMETERS                                                                   SUPERELEMENT 0           &lt;br&gt;
0                                                                                                                                &lt;br&gt;
1    OPTIMAL SIZING OF A 25-BAR TRUSS  -                 DSOUG8             OCTOBER   4, 2018  MSC Nastran  7/24/18&lt;br&gt;
PAGE   286
EIGHT INDEPENDENT ROD DIAMETERS                                                                   SUPERELEMENT 0           &lt;br&gt;
0                                                                                                                                &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;     1 |          1   |  D1         |   2.0000E+00 :   1.4268E+00 :   1.0081E+00 :   7.1287E-01 :   5.0403E-01 :   4.8684E-01 :
     2 |          2   |  D2         |   2.0000E+00 :   2.9903E+00 :   2.9665E+00 :   2.9540E+00 :   2.9494E+00 :   2.9487E+00 :
     3 |          3   |  D3         |   2.0000E+00 :   2.7576E+00 :   2.8707E+00 :   2.8761E+00 :   2.8825E+00 :   2.8830E+00 :
     4 |          4   |  D4         |   2.0000E+00 :   2.7281E+00 :   1.9291E+00 :   1.3640E+00 :   9.6453E-01 :   6.8204E-01 :
     5 |          5   |  D5         |   2.0000E+00 :   1.2897E+00 :   1.1725E+00 :   1.1883E+00 :   1.1944E+00 :   1.1931E+00 :
     6 |          6   |  D6         |   2.0000E+00 :   2.8329E+00 :   2.5173E+00 :   2.5086E+00 :   2.5041E+00 :   2.4973E+00 :
     7 |          7   |  D7         |   2.0000E+00 :   2.9903E+00 :   3.2848E+00 :   3.2860E+00 :   3.2902E+00 :   3.2907E+00 :
     8 |          8   |  D8         |   2.0000E+00 :   2.9903E+00 :   2.9751E+00 :   2.9709E+00 :   2.9715E+00 :   2.9731E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;535 Chapter 8: Example Problems
Design Optimization with Composite Materials with Fully Stressed Design
Main Index
INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       8D     :       9      : 9D:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------8d------------9-------9d&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------8d------------9-------9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  D1         |   4.5956E-01 :   4.1788E-01 :   3.5872E-01 :   1.0000E-01 :
     2 |          2   |  D2         |   2.9475E+00 :   2.9457E+00 :   2.9431E+00 :   3.0000E+00 :
     3 |          3   |  D3         |   2.8837E+00 :   2.8848E+00 :   2.8863E+00 :   3.0000E+00 :
     4 |          4   |  D4         |   4.8228E-01 :   3.4102E-01 :   2.4114E-01 :   1.0000E-01 :
     5 |          5   |  D5         |   1.1926E+00 :   1.1932E+00 :   1.1948E+00 :   2.0000E+00 :
     6 |          6   |  D6         |   2.4919E+00 :   2.4883E+00 :   2.4862E+00 :   3.0000E+00 :
     7 |          7   |  D7         |   3.2914E+00 :   3.2923E+00 :   3.2935E+00 :   4.0000E+00 :
     8 |          8   |  D8         |   2.9741E+00 :   2.9745E+00 :   2.9745E+00 :   3.0000E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        8.
AND HARD FEASIBLE DISCRETE DESIGN OBTAINED&lt;br&gt;
Design Optimization with Composite Materials with Fully
Stressed Design
In the optimal design of laminated composite structures, individual ply thicknesses and orientations are often
selected as design quantities. Figure 8-26 shows a simple wing model that has an aluminum substructure and
wing cover skins that are made from composite materials. These cover skins have layers in the 0,90,+45 and
-45 degree directions relative to material coordinate system that is aligned with the 50% chord of the wing
structure. Variations of this model have appeared numerous times in the design optimization literature.
Johnson and Neill provide a representative description (see Reference 14.).
Figure 8-26  Intermediate Complexity Wing Model
In the variation of the design task given here, the wing structure is subjected to two static load cases and a
normal modes analysis is also performed. The Fully Stressed Design (FSD) technique is employed to find a&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization with Composite Materials with Fully Stressed Design536
Main Index
good starting design for the complete design task, which requires a mathematical programming approach. As
discussed in Fully Stressed Design , the FSD technique can only deal with static loads and a limited subset of
design responses and designed properties. The design task is to minimize the wing’s structural weight while
satisfying the following strength and stiffness considerations:
The input data file is much too large to be listed here in its entirety so that only fragments are shown here in
Listing 8-19. The complete input file can be found in the MSC Nastran TPL with the name dsoug9.dat. The
finite element model consists of 109 GRIDSs, 39 CRODs that link top and bottom structural grids, 55
CSHEARs that model the wing ribs and spars and 2 CTRIA3s and 62 CQUAD4s that model the upper and
lower wing skins. 39 CONM2s model the nonstructural mass of the wing and 102 MPCs are used to connect
the grids associated with the mass model structural model.
The design model contains 153 DESVARs. A single DESVAR controls the areas of all the rods in the model
while a second DESVAR controls the thickness of all the ribs. The thicknesses of each of the 23 CSHEARs
that model the spars are independently designed. The remaining 128 design variables control the thicknesses
of the four layers of the composite cover skins. For the design concept employed in this example, unequal
number of plus and minus 45 degree plies are allowed but the top and bottom surfaces are constrained to
have the same thickness values. Each of the 32 finite elements that model a surface is independently designed.
Clearly, there are many ways to specify the design model for this structure and the one shown may not be the
most practical or desirable. You may wish to try decoupling the top and bottom surfaces for example or to
see what the weight penalty is for imposing a restriction that the number of +45 plies must equal the number
of -45 plies.
Analysis and design with composite materials is a advanced feature in MSC Nastran and it is felt worthwhile
to point out some of the special features that were used in this example. The first is that the SYM option has
been used for the LAM attribute on the PCOMP Bulk Data entry. With this option, it is only necessary to
model half the layup with the other half added in such a way that there is a equal amount of material above
and below the midplane of the laminate. In an actual layup, it would be necessary to specify the order of the
plies in terms of individual laminate. This ordering is not possible here and it is seen that the zero plies are
all lumped at the extreme locations in the laminate with the 90, +45 and -45 directions following so that the
-45 plies are at the midplane.
The objective is to minimize the weight and a DRESP2 is used to subtract 115. pounds from the weight
computed using the DRESP1 with RTYPE=WEIGHT . The 115. value is a an estimate of the weight of the
concentrated masses that is not affected by changes in design. Removing this fixed weight from the optimizer
allows the algorithm to focus on the weight it can affect.
The DVPREL1’s that specify the ply thicknesses multiply the DESVAR value by .00125. The intent here is
to make the DESVAR value a count of the required number of plies under the assumption that each laminate
has a thickness of .00250. Discrete variables could have been used in this example to make the design variables
an integer ply count, but this was not done. Composite Plies Strain is below failure point (see the CFAILURE discussion on
page 539).
Posts in Substructure -5.7 . 104 6.7 . 104
Webs in Substructures -3.9 . 104 3.9 . 104
Second Natural Frequency f2 40.0 Hz&lt;/p&gt;
&lt;p&gt;537 Chapter 8: Example Problems
Design Optimization with Composite Materials with Fully Stressed Design
Main Index
It is also necessary to take care in specifying the location of the bottom surface of the laminate (Z0 on the
PCOMP entry). The grid locations are taken to specify the OML (outer mold line) of the wing that has been
specified to achieve the desired aerodynamic shape and performance. The structural material must therefore
lie within the OML so that Z0 must be designed to be equal to the total thickness of the laminate. Also note
that the direction of the bottom surface is governed by the order in which the element is numbered so that
care must be taken to make this order consistent with the design intent. The Z0 quantity must be designed
using a DVPREL1 entry so that the bottom surface changes as the individual plies change. Note that the -
.0025 factor accounts for the fact that the total thickness is twice the thickness given on the PCOMP entry.
Listing 8-19  Input File Fragments for DSOUG9
ID MSC, DSOUG9  $ v2004 ehj 25-Jun-2003
TIME 200 $
SOL 200 $
CEND
TITLE =INTERMEDIATE COMPLEXITY WING *&lt;em&gt;STAT &amp;amp; EIGN CONSTRAINTS&lt;/em&gt; DSOUG9
SUBTIT = QUAD4 ELEMENTS WITH 153 DESIGN VARIABLES ** CMS ***
LABEL = COMPOSITE STRUCTURE WITH FIBER ORIENTATIONS (0,90,+45,-45)
ECHO  = SORT
SPC   = 1
MPC   = 200
DESOBJ= 1001
DESSUB= 1
SUBCASE 1
ANALYSIS=STATICS
METHOD=10
LOAD = 1
SUBCASE 2
ANALYSIS=STATICS
METHOD=10
LOAD = 2
SUBCASE 3
DESSUB = 3
ANALYSIS=MODES
METHOD=10
BEGIN BULK
$
DCONSTR 1       1               1.0
DCONSTR 1       2               1.0
DCONSTR 1       3               1.0
DCONSTR 1       4               1.0
DCONSTR 1       11              1.0
DCONSTR 1       12              1.0
DCONSTR 1       13              1.0
DCONSTR 1       14              1.0
DCONSTR 1       21      -5.7+4  6.7+4
DCONSTR 1       31      -3.9+4  3.9+4
DCONSTR 3       200     40.0
DESVAR  33      RIBS    0.21    0.20 &lt;br&gt;
DESVAR  34      SHEAR1  0.21    0.20 &lt;br&gt;
DESVAR  57      POSTS   0.21    0.20 &lt;br&gt;
DESVAR  1101    CTRIA31 1.000   1.00000
DESVAR  1102    CQUAD1  1.001   1.00000
DESVAR  1201    TRIA31  1.001   1.00000
DESVAR  1432    CQUAD32 1.001   1.00000
DOPTPRM FSDMAX  10      DESMAX  20      DELP    0.50    DPMIN   0.001
delx 0.49 p1 1 p2 15
DRESP1  1       STRAIN1 CFAILUREPCOMP           5       1       10001
DRESP1  2       STRAIN1 CFAILUREPCOMP           5       2       10001&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization with Composite Materials with Fully Stressed Design538
Main Index
DRESP1  3       STRAIN1 CFAILUREPCOMP           5       3       10001
DRESP1  4       STRAIN1 CFAILUREPCOMP           5       4       10001
DRESP1  11      STRAIN1 CFAILUREPCOMP           5       1       30031
30001   30002   30003   30004   30005   30006   30007   30008
30009   30010   30011   30012   30013   30014   30015   30016
30017   30018   30019   30020   30021   30022   30023   30024
30025   30026   30027   30028   30029   30030
DRESP1  12      STRAIN1 CFAILUREPCOMP           5       2       30031
30001   30002   30003   30004   30005   30006   30007   30008
DRESP1  21      STRESS  STRESS  PROD            2               10001
DRESP1  31      STRESS  STRESS  PSHEAR          3               40001
40002   40003   40004   40005   40006   40007   40008   40009
40010   40011   40012   40013   40014   40015   40016   40017
40018   40019   40020   40021   40022   40023   40024
DRESP1  101     W       WEIGHT                                  ALL
DRESP2 1001 STRWGT 1001
DRESP1 101
DEQATN 1001 STRWGT(TOTAL) = TOTAL - 115.
DRESP1  200     FREQ    FREQ                    2 1
DVPREL1 33      PSHEAR  40001   T       .02
33      0.1
DVPREL1 57      PROD    10001   A       .0001
57      0.1
DVPREL1 1101    PCOMP   10001   T1
1101    0.00125
DVPREL1 2432    PCOMP   32031   T4
1432    0.00125
DVPREL1 4101    PCOMP   10001   Z0
1101    -.00250 1201 -.00250 1301 -.00250 1401-.00250
DVPREL1 5132    PCOMP   32031   Z0
1132    -.00250 1232 -.00250 1332 -.00250 1432-.00250
DYNRED  100     300.0
EIGRL   10 40
FORCE   1       1       0       1.0     205.0   -7380.0 926.0
FORCE   1       2       0       1.0     -205.0  7380.0  926.0
FORCE   2       78      0       1.0     451.0   -86.0   175.0
GRID    1               63.5000 90.0000 1.1250
GRID    2               63.5000 90.0000 -1.1250
GRID    217             85.5    90.000  0.0
MAT1    10      1.05E+7 4.04E+6 0.30000 0.10000 0.00000 0.00000 0.00000
6.70E+4 5.70E+4 3.90E+4
MAT8    70      1.85E+7 1.60E+6 0.25000 0.65E6                  0.05500
0.0     0.0     100.    1.15E+5 1.15E+5 1.15E+5 1.15E+5 1.0E+15
MAT8    72      1.85E+7 1.60E+6 0.25000 0.65E6                  0.05500
0.0     0.0     100.
MPC     200     1       1       1.0     201     1       -.8924
201     5       -1.0040 201     2       -.4512
201     4       .5076
MPC     200     1       2       1.0     201     2       -.8924
201     1       .4512   201     5       .5076
201     4       1.0040
PARAM   WTMASS  0.00259
PARAM POST -1
PCOMP   10001   -.0105  0.0     0.65E6  TSAI                    SYM
70      0.500   0.0     YES     70      0.500   90.     YES
70      0.500   45.     YES     70      0.500   -45.    YES
PCOMP   32031   -.0105  0.0                                     SYM
72      0.500   0.0     YES     72      0.500   90.     YES
72      0.500   45.     YES     72      0.500   -45.    YES
PROD    10001   10      1.00
PSHEAR  40001   10      1.0
PSHEAR  40024   10      1.0&lt;/p&gt;
&lt;p&gt;539 Chapter 8: Example Problems
Design Optimization with Composite Materials with Fully Stressed Design
Main Index
SPC1    1       6       201     THRU    217
SPC1    1       123456  79      THRU    88
ENDDATA
Finally, the design task specifies a constraint on a CFAILURE response. The correct specification of this
response requires a combination of inputs that are described here. On the DRESP1, the CFAILURE response
type is invoked for each of the designed properties for each of the PCOMPS on the upper surface. Item code
5 is specified, which from Table 6-2 in the MSC Nastran Quick Reference Guide  is seen to be a failure mode for
direct stresses. The type of the failure mode is specified as TSAI (for Tsai-Wu theory) on the PCOMP entry.
Table 13-1 in Composites in Chapter 13 of the MSC Nastran Reference Guide gives the formula for the Tsai-Wu
criteria as:
The Xt, Xc, Yt, Yc, S and F12 values are specified on the material entry, MAT8 in this example.
The DOPTPRM Bulk Data entry is used to specify that up to 10 FSD cycles are to be performed followed
by up to 20 mathematical programming cycles, where “up to” refers to the fact that both the FSD and MP
algorithms will terminate before the specified number of cycles if the design is judged to have converged.
Listing 8-20 shows design history data for the example while Figure 8-27 shows some of the same data in xy plot
form. It is seen from Listing 8-20 that ten cycles of FSD were performed followed by six MP cycles. The FSD
algorithm did an effective job of coming up with a good starting design for the MP algorithm in that the
maximum constraint value is reduced from 570 to near 1 (note the log scale in Listing 8-20). The final FSD
design has a weight of 75.16 lbs but is infeasible. The final design is feasible and has a weight of 78.1 lbs. For
this simple example, the CPU time for each design cycle was approximately 2 secs. for each FSD cycles and
8 secs. for each MP cycle, illustrating the performance advantage of the FSD method.
Listing 8-20  Design Cycle History for DSOUG9&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          20
NUMBER OF FULLY STRESSED DESIGN CYCLES COMPLETED     10
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     9
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      5.392062E+01                                      5.488082E+02
1               FSD                    5.785143E+01               N/A                    2.468773E+02
2               FSD                    6.312334E+01               N/A                    1.123669E+02
3               FSD                    6.776608E+01               N/A                    5.545399E+01
4               FSD                    7.179576E+01               N/A                    2.620681E+011
Xt&amp;mdash;&amp;ndash;1
Xc &amp;mdash;&amp;mdash;-–11
Yt&amp;mdash;-1
Yc &amp;mdash;&amp;mdash;-–212
XtXc&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;22
YtYc&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;122
S2&amp;mdash;&amp;mdash;&amp;ndash;2F1212FI= + + + + +&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Optimization with Composite Materials with Fully Stressed Design540
Main Index
5               FSD                    7.476902E+01               N/A                    1.169474E+01
6               FSD                    7.571846E+01               N/A                    5.948312E+00
7               FSD                    7.566806E+01               N/A                    2.419423E+00
8               FSD                    7.587254E+01               N/A                    1.073762E+00
9               FSD                    7.525048E+01               N/A                    1.670854E+00
10               FSD                    7.413028E+01               N/A                    2.871246E+00
11             8.244905E+01             8.244905E+01            -4.171093E-14             4.730363E-01
12             7.648359E+01             7.648359E+01             3.530251E-14             2.083372E+00
13             7.962268E+01             7.962268E+01             1.177951E-14             3.511848E-01
14             7.894785E+01             7.894785E+01             2.160037E-15             1.162321E-02
15             7.848338E+01             7.848338E+01            -6.880597E-15             1.207810E-03
1   INTERMEDIATE COMPLEXITY WING *&lt;em&gt;STAT &amp;amp; EIGN CONSTRAINTS&lt;/em&gt; DSOUG9          OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   980
QUAD4 ELEMENTS WITH 153 DESIGN VARIABLES ** CMS ***                                                                        &lt;br&gt;
0     COMPOSITE STRUCTURE WITH FIBER ORIENTATIONS (0,90,+45,-45) SUBCASE 3&lt;/p&gt;
&lt;p&gt;541 Chapter 8: Example Problems
Acoustic Optimization
Main Index
Figure 8-27  Selected Design Cycle Results for DSOUG9
Acoustic Optimization
Acoustic Optimization uses acoustic pressures as a design response.  These are computed from a solution of
the coupled fluid-structure interaction problem.  An optimal design can thus be found based not only on a
consideration of acoustic pressures, but structural responses as well.
This example considers a closed box with fluid elements on the interior.  An acoustic source is located at one
end of the box, with a transducer located at the opposite end.  The design goal is to modify the thicknesses of
the box walls such that the peak acoustic pressure at the transducer is minimized without increasing the
weight of the box.
The box geometry and property groups of thicknesses to be modified are shown in Figure 8-28. Six design
variables are to be related to six of these property groups (the third property group in Figure 8-28 remains
fixed.)  The model consists of 1000 structural elements and 2000 fluid elements.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Acoustic Optimization542
Main Index
Figure 8-28  Acoustic Box Showing Portions Designed by Each Design Variable
(Prop 3 is Fixed)
An interesting feature of this, as well as many other dynamic response problems, is that a number of response
peaks may exist.  In addition, during the course of design optimization these peaks may not only increase or
decrease, but shift as well.  This example presents a useful way of addressing this problem.
Figure 8-29 shows an arbitrary pressure distribution as a function of frequency, P(f) . Three frequencies of
interest are shown as f1, f2, and f3. What we would like to do is to minimize the maximum pressure response
over all of these points.
Figure 8-29  Minimization of Response Peaks
c1 c2 c3Pf
x
f1f2 f3f&lt;/p&gt;
&lt;p&gt;543 Chapter 8: Example Problems
Acoustic Optimization
Main Index
We can choose a design variable to represent a peak threshold, here shown in the figure as x (is just a constant
of proportionality to facilitate scaling the threshold).  The difference between x and the pressure distribution
must be a positive quantity at all frequencies of interest.  Thus, constraints can be written which require c1,
c2, and c3 to be positive distances.  The design objective can then be to minimize x, or
minimize
x (8-13)
subject to:
(8-14)
As the optimizer decreases the threshold, the constraints ensure that the peaks are reduced as well.  Any
number of these constraints can be written to cover all frequency ranges of interest (or, in the case of transient
analysis, time steps).
Due to the size of this problem, Listing 8-21 is an excerpt of the input file consisting mainly of the design model
entries, as well as some the analysis entries.  Analysis modeling for Acoustics is covered in the Additional Topics&lt;br&gt;
of the MSC Nastran Reference Guide .Pf1x– 0
Pf2x– 0
Pf3x– 0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Acoustic Optimization544
Main Index
Listing 8-21  Fragments from Input Data File DSOUG10
ID MSC, DSOUG10 $ v2004 ehj 25-Jun-2003
$ Modified 26-Jul-2005 v2005 ehj
TIME 9999
SOL    200  $ MODAL FREQUENCY RESPONSE
CEND
TITLE = DESIGN OPTIMIZATION WITH ACOUSTICS
SUBTITLE = ACOUSTIC AND STRUCTURAL ELEMENTS
LABEL =   BOXAE1.DAT
SET 20 = 11280
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
ECHO = SORT(PARAM,EIGC,EIGRL,FREQ,DESVAR,DCONSTR,DRESP1,DRESP2,DEQATN,
DVPREL1)
SPC         = 1
DESGLB      = 5
DISP(PHASE) = 20
METHOD(STRUCTURE) = 20
METHOD(FLUID)     = 30
$
FREQUENCY = 200
DLOAD     = 100
DESSUB    = 10
DESOBJ    = 100
ANALYSIS  =  MFREQ
$
BEGIN BULK
$
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
EIGRL   20              300.
EIGRL    30        15.     200.             0            105.
$
$ SOUND PRESSURE LEVEL
PARAM,RMS,YES
$ REFERENCE PRESSURE FOR DB AND DBA
PARAM,PREFDB,2.-5
$
PARAM   AUTOSPC  NO
$
$ FLUID/STRUCTURE INTERFACE
ACMODL,DIFF ,  ,  ,  ,0.01
$
$ STRUCTURAL DAMPING
PARAM,G,0.02
$
PARAM POST -1
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
RLOAD1,100,101,,,102
DAREA,101,1288,3,100.
TABLED1,102
,0.,1.,1000.,1.,ENDT
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
FREQ1   200     40.     4.0     41
FREQ 200 97.5 102.5
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$   SENSITIVITY
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$
$
DESVAR,1,P1,0.02493,0.0001,1.
DESVAR,2,P2,0.01953,0.0001,1.
DESVAR,4,P4,0.02047,0.0001,1.&lt;/p&gt;
&lt;p&gt;545 Chapter 8: Example Problems
Acoustic Optimization
Main Index
DESVAR,5,P5,0.02596,0.0001,1.
DESVAR,6,P6,0.02175,0.0001,1.
DESVAR,7,P7,0.02426,0.0001,1.
$
DESVAR  8       BETA    1.0     0.001
$
DVPREL1,1,PSHELL,1,T,0.0001
,1,1.
DVPREL1,2,PSHELL,2,T,0.0001
,2,1.
DVPREL1,4,PSHELL,4,T,0.0001
,4,1.
DVPREL1,5,PSHELL,5,T,0.0001
,5,1.
DVPREL1,6,PSHELL,6,T,0.0001
,6,1.
DVPREL1,7,PSHELL,7,T,0.0001
,7,1.
$
DRESP2  100     BETA    100
DESVAR  8
DEQATN  100     OBJ(BETA) = 10000.0 * BETA
DRESP1  1       PRESS   FRDISP                  1               11280
DRESP1  2       WEIGHT  WEIGHT
DCONSTR 5       2       2890.   2910.
DRESP2  11      PRESBET 10
DESVAR  8
DRESP1  1
DEQATN  10      F(BETA,PRES) = 100.0 * BETA - PRES + 100.
DCONSTR 10      11      100.
$
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
$
$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$       STRUCTURAL MODEL
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$
PSHELL  1       1       .02493  1
PSHELL  2       1       .01953  1
PSHELL  3       1       .100    1
PSHELL  4       1       .02047  1
PSHELL  5       1       .02596  1
PSHELL  6       1       .02175  1
PSHELL  7       1       .02426  1
$
GRID    1               0.0     0.0     0.0
GRID    2               2.      0.0     0.0
GRID    3               2.      0.0     1.
GRID    1293            1.5     .5      1.
GRID    1294            1.6     .5      1.
GRID    1295            1.7     .5      1.
$
CQUAD4  1       1       1       9       29      28
CQUAD4  2       1       9       10      30      29
CQUAD4  998     3       1138    1139    296     317
CQUAD4  999     3       1139    1140    275     296
CQUAD4  1000    3       1140    897     5       275
$
$ THIS SECTION CONTAINS THE LOADS,CONSTRAINTS, AND CONTROL BULK DATA ENTRIES
$
$&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Acoustic Optimization546
Main Index
SPC     1       1       123     0.0
SPC     1       2       123     0.0
SPC 1     986 4
SPC 1     987 4
SPC 1     975 4
$
$
MAT1    1       2.+11           .3      7600.
$
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$       ACOUSTIC MODEL
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-10&amp;mdash;&amp;mdash;
GRID    10001           0.0     0.0     0.0           -1
GRID    10002           2.      0.0     0.0           -1
GRID    10003           2.      0.0     1.            -1
GRID    11279           1.      .5      .1            -1
GRID    11280           1.      .5      0.0           -1
GRID    11281           1.      .6      1.            -1
GRID    12539           2.      1.      .3            -1
GRID    12540           2.      1.      .2            -1
GRID    12541           2.      1.      .1            -1
$
CHEXA      10001100     10004   10126   10127   10009   10018   10137   +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  10138   10019
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CHEXA      10002100     10009   10127   10128   10010   10019   10138   +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  10139   10020
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CHEXA      11999100     12411   12530   12531   12412   12422   12540   +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  12541   12423
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CHEXA      12000100     12412   12531   12532   12413   12423   12541   +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  10006   12424
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$
PSOLID,100,100,,,,1,PFLUID
$
MAT10,100,,1.293,200.
DOPTPRM DESMAX  30      P1      1       P2      15      APRCOD 1
GMAX 0.015 DELX 0.5     CONV1 .005 adscod 1
ENDDATA
T urning to the listing, we see that the weight budget is established as a global constraint. The weight response
is defined on DRESP1 number 2; bounds are placed on this response with DCONSTR number 5, which is
in turn referenced in Case Control by the DESGLB command.  The bounds on weight allow less than one
third of one percent variation from the initial weight.  Allowing some variation is usually preferred over an
equality constraint since it not only yields a better conditioned problem, but is often consistent with our
design goals as well.
The objective function is defined as a constant times design variable number 8 using the DRESP2 number
100 entry. This refers to DEQATN 100 which defines
F = 10000 . x8 (8-15)
This is defined as the objective function by the DESOBJ 100 Case Control command.
The constraints on response peaks are defined by first identifying the pressure responses themselves with
DRESP1 entry number 1. This designates the “1” component of displacement at grid 11280 as the response.&lt;/p&gt;
&lt;p&gt;547 Chapter 8: Example Problems
Acoustic Optimization
Main Index
Since this grid is part of the fluid model, the response is a pressure with units of N/m2. Since the ATTB field
is blank on this DRESP1 entry, the response is computed for all output frequencies.
These pressure responses are used as input to DEQATN 10 via DRESP2 number 11. These entries, in
combination with DCONSTR number 10, identify constraints on pressure response of the form:
(8-16)
Note that this is similar to Equation (8-14), with the constant k2 added to avoid a bound of zero on the
constraint. It should be clear that the constants have been chosen to scale the objective and responses to values
that would minimize numerical difficulties. In this example, k1 and k2 are set at 100. This is in line with a
nominal peak pressure.
Listing 8-22 and Figure 8-30, and Figure 8-31 and Figure 8-32 present optimization results. The design cycle
history of Listing 8-22 shows the objective has decreased from 10000.0 to 282.8 in thirteen iterations. A
comparison of the plots of Figure 8-30 and Figure 8-31 indicates that although the objective appears to have
reached its minimum after eleven design cycles, the design variables continue to change. This indicates that
the design space is quite flat for this case, giving the designer some freedom in the selection of the design
variable values. The benefit of the procedure is dramatically demonstrated in Figure 8-32, which depicts a
reduction in the peak pressure from 205 N/mm2 to 3 N/mm2. The technique of minimizing the maximum
pressure has resulted in frequency response function that has three peaks near the maximum value whereas
the initial function has a single sharp peak.
As a final comment on this test case, it has been found the results achieved can be affected by the platform
and version of MSC Nastran that is used to run the problem. It is conjectured that this test is particularly
sensitive due to the fact that there are a number of repeated eigenvalues in the fluid eigenanalysis including
3 at an eigenfrequency of 100.412. If you exercise this test, the same qualitative behavior of a significant
reduction in the peak pressure should be observed, but it will likely not give the same final objective or
number of design cycles.&lt;br&gt;
Listing 8-22  Design Cycle History for DSOUG10&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          31
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS    30
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      1.000000E+04                                      1.047198E+00
1             5.000000E+03             5.000000E+03             0.000000E+00             7.312915E-01
2             7.500000E+03             7.500000E+03             0.000000E+00            -2.608385E-03
3             3.750000E+03             3.750000E+03             0.000000E+00            -2.608385E-03
4             2.380428E+03             2.380428E+03             0.000000E+00            -2.608385E-03
5             1.190214E+03             1.190214E+03             0.000000E+00            -2.608385E-03k1x8 Pf – k2+ k2&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;0       BOXAE1.DAT&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CYCLE              APPROXIMATE                 EXACT                    OF                       OF&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;17             5.269798E+02             5.269798E+02             0.000000E+00             7.598629E-02&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;18             5.582298E+02             5.582298E+02             0.000000E+00             2.720577E-02&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;19             5.893919E+02             5.893919E+02             0.000000E+00             2.046229E-02&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;20             6.206419E+02             6.206419E+02             0.000000E+00             6.852810E-03&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;21             5.893919E+02             5.893919E+02             0.000000E+00             6.172687E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;22             5.581419E+02             5.581419E+02             0.000000E+00             6.094552E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;23             5.268919E+02             5.268919E+02             0.000000E+00             6.094552E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;24             4.956419E+02             4.956419E+02             0.000000E+00             6.500856E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;25             4.643919E+02             4.643919E+02             0.000000E+00             6.203942E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;26             4.331419E+02             4.331419E+02             0.000000E+00             7.094684E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;27             4.018919E+02             4.018919E+02             0.000000E+00             6.875905E-14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;28             3.706419E+02             3.706419E+02             0.000000E+00            -6.660917E-05&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;29             3.662124E+02             3.662124E+02             0.000000E+00            -6.660917E-05&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;30             3.518618E+02             3.518618E+02             0.000000E+00            -6.660917E-05&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1    DESIGN OPTIMIZATION WITH ACOUSTICS                                     OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   448&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ACOUSTIC AND STRUCTURAL ELEMENTS&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0       BOXAE1.DAT&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DESIGN VARIABLE HISTORY&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Acoustic Optimization548
Main Index
6             5.951070E+02             5.951070E+02             0.000000E+00            -2.608385E-03
7             4.515054E+02             4.515054E+02             0.000000E+00             6.866609E-02
8             4.101954E+02             4.101954E+02             0.000000E+00             3.405263E-02
9             3.710534E+02             3.710534E+02             0.000000E+00             5.510012E-02
10             3.729871E+02             3.729871E+02             0.000000E+00             5.237409E-02
11             4.979871E+02             4.979871E+02             0.000000E+00             4.533226E-02
12             3.729871E+02             3.729871E+02             0.000000E+00             3.020005E-02
13             4.593560E+02             4.593560E+02             0.000000E+00             1.896110E-02
14             3.883539E+02             3.883539E+02             0.000000E+00             8.549801E-03
15             4.332298E+02             4.332298E+02             0.000000E+00             4.595560E-02
16             4.957298E+02             4.957298E+02             0.000000E+00             7.715146E-02
1    DESIGN OPTIMIZATION WITH ACOUSTICS                                     OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   447
ACOUSTIC AND STRUCTURAL ELEMENTS                                                                                             &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;acoustic-and-structural-elements&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#acoustic-and-structural-elements&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   2.4930E-02 :   2.4289E-02 :   1.1223E-02 :   1.0923E-02 :   8.9496E-03 :   8.9496E-03 :
     2 |          2   |  P2         |   1.9530E-02 :   1.8741E-02 :   3.4099E-02 :   3.4318E-02 :   2.4477E-02 :   2.4477E-02 :
     3 |          4   |  P4         |   2.0470E-02 :   2.2457E-02 :   3.4147E-02 :   3.4302E-02 :   2.4302E-02 :   2.4302E-02 :
     4 |          5   |  P5         |   2.5960E-02 :   2.4229E-02 :   3.7741E-02 :   3.8085E-02 :   4.7981E-02 :   4.7981E-02 :
     5 |          6   |  P6         |   2.1750E-02 :   2.4378E-02 :   2.2399E-02 :   2.2266E-02 :   2.8172E-02 :   2.8172E-02 :
     6 |          7   |  P7         |   2.4260E-02 :   2.2935E-02 :   1.0020E-02 :   9.9837E-03 :   1.5946E-02 :   1.5946E-02 :
     7 |          8   |  BETA       |   1.0000E+00 :   5.0000E-01 :   7.5000E-01 :   3.7500E-01 :   2.3804E-01 :   1.1902E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;INTERNAL |   EXTERNAL   |             |&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P29</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_029/</guid>
      <description>
        
        
        &lt;h2&gt;549 Chapter 8: Example Problems
Acoustic Optimization
Main Index
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   8.9926E-03 :   8.6436E-03 :   1.0122E-02 :   1.0417E-02 :   7.9172E-03 :   8.6575E-03 :
     2 |          2   |  P2         |   2.4559E-02 :   1.4559E-02 :   9.5585E-03 :   7.9486E-03 :   9.6349E-03 :   1.0244E-02 :
     3 |          4   |  P4         |   2.3985E-02 :   3.3905E-02 :   3.8905E-02 :   4.3905E-02 :   4.1405E-02 :   3.9326E-02 :
     4 |          5   |  P5         |   4.8726E-02 :   5.8726E-02 :   6.2871E-02 :   6.0180E-02 :   5.9485E-02 :   6.0821E-02 :
     5 |          6   |  P6         |   2.7332E-02 :   2.6527E-02 :   3.0476E-02 :   2.6260E-02 :   2.6171E-02 :   2.3758E-02 :
     6 |          7   |  P7         |   1.6446E-02 :   1.7641E-02 :   1.2641E-02 :   1.7641E-02 :   2.0141E-02 :   2.1576E-02 :
     7 |          8   |  BETA       |   5.9511E-02 :   4.5151E-02 :   4.1020E-02 :   3.7105E-02 :   3.7299E-02 :   4.9799E-02 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      12      :      13      :      14      :      15      :      16      :      17      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   1.0073E-02 :   1.1066E-02 :   1.1917E-02 :   9.4173E-03 :   1.0261E-02 :   1.1045E-02 :
     2 |          2   |  P2         |   9.1125E-03 :   8.7586E-03 :   8.8578E-03 :   9.4497E-03 :   1.0152E-02 :   9.7000E-03 :
     3 |          4   |  P4         |   3.6853E-02 :   3.4353E-02 :   3.1924E-02 :   2.9350E-02 :   2.9118E-02 :   2.9118E-02 :
     4 |          5   |  P5         |   5.8726E-02 :   5.7765E-02 :   5.4809E-02 :   5.5236E-02 :   5.4732E-02 :   5.4732E-02 :
     5 |          6   |  P6         |   2.3363E-02 :   2.1954E-02 :   2.1314E-02 :   2.1796E-02 :   2.0849E-02 :   2.0517E-02 :
     6 |          7   |  P7         |   2.3971E-02 :   2.6471E-02 :   2.8853E-02 :   3.1353E-02 :   3.1122E-02 :   3.1122E-02 :
     7 |          8   |  BETA       |   3.7299E-02 :   4.5936E-02 :   3.8835E-02 :   4.3323E-02 :   4.9573E-02 :   5.2698E-02 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      18      :      19      :      20      :      21      :      22      :      23      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;1    DESIGN OPTIMIZATION WITH ACOUSTICS                                     OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   449
ACOUSTIC AND STRUCTURAL ELEMENTS                                                                                           &lt;br&gt;
0       BOXAE1.DAT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;0-------boxae1dat&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#0-------boxae1dat&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      18      :      19      :      20      :      21      :      22      :      23      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------18------------19------------20------------21------------22------------23-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   1.0182E-02 :   1.0444E-02 :   1.0997E-02 :   1.1346E-02 :   1.1455E-02 :   1.1569E-02 :
     2 |          2   |  P2         |   9.0223E-03 :   8.9179E-03 :   8.7476E-03 :   8.6755E-03 :   8.6573E-03 :   8.6390E-03 :
     3 |          4   |  P4         |   2.6727E-02 :   2.6598E-02 :   2.5973E-02 :   2.5861E-02 :   2.5785E-02 :   2.5709E-02 :
     4 |          5   |  P5         |   5.4732E-02 :   5.4732E-02 :   5.4732E-02 :   5.4732E-02 :   5.4732E-02 :   5.4732E-02 :
     5 |          6   |  P6         |   2.0492E-02 :   1.9867E-02 :   1.9483E-02 :   1.8856E-02 :   1.8534E-02 :   1.8211E-02 :
     6 |          7   |  P7         |   3.3883E-02 :   3.4415E-02 :   3.4729E-02 :   3.5135E-02 :   3.5404E-02 :   3.5669E-02 :
     7 |          8   |  BETA       |   5.5823E-02 :   5.8939E-02 :   6.2064E-02 :   5.8939E-02 :   5.5814E-02 :   5.2689E-02 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      24      :      25      :      26      :      27      :      28      :      29      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------24------------25------------26------------27------------28------------29------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------24------------25------------26------------27------------28------------29------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   1.1690E-02 :   1.1818E-02 :   1.1265E-02 :   1.0658E-02 :   1.0058E-02 :   9.4335E-03 :
     2 |          2   |  P2         |   8.6205E-03 :   8.6016E-03 :   8.7997E-03 :   8.9852E-03 :   9.2595E-03 :   9.5228E-03 :
     3 |          4   |  P4         |   2.5633E-02 :   2.5556E-02 :   2.6169E-02 :   2.6524E-02 :   2.5899E-02 :   2.5274E-02 :
     4 |          5   |  P5         |   5.4732E-02 :   5.4732E-02 :   5.4791E-02 :   5.5411E-02 :   5.5676E-02 :   5.5867E-02 :
     5 |          6   |  P6         |   1.7882E-02 :   1.7543E-02 :   1.6997E-02 :   1.6371E-02 :   1.6324E-02 :   1.6458E-02 :
     6 |          7   |  P7         |   3.5934E-02 :   3.6202E-02 :   3.6767E-02 :   3.7328E-02 :   3.7863E-02 :   3.8308E-02 :
     7 |          8   |  BETA       |   4.9564E-02 :   4.6439E-02 :   4.3314E-02 :   4.0189E-02 :   3.7064E-02 :   3.6621E-02 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      30      :      31      :      32      :      33      :      34      :      35      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------30------------31------------32------------33------------34------------35------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------30------------31------------32------------33------------34------------35------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  P1         |   8.8285E-03 :
     2 |          2   |  P2         |   9.8758E-03 :
     3 |          4   |  P4         |   2.4581E-02 :
     4 |          5   |  P5         |   5.5312E-02 :
     5 |          6   |  P6         |   1.7083E-02 :
     6 |          7   |  P7         |   3.8559E-02 :
     7 |          8   |  BETA       |   3.5186E-02 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO MAXIMUM NUMBER OF DESIGN CYCLES =       30.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Acoustic Optimization550
Main Index
Figure 8-30  Objective Function versus Design Cycle
Figure 8-31  Design Variables versus Design Cycle&lt;/p&gt;
&lt;p&gt;551 Chapter 8: Example Problems
RMS Response
Main Index
Figure 8-32  Acoustic Optimization Sound Pressure Levels: Initial and Final Distributions
RMS Response
This example simulates a car subjected to random loading that is fully correlated. The goal of this analysis is
to minimize the RMS displacement at the center of gravity (cg) of the vehicle due to the random loading. A
sketch of the simple vehicle representation is given below.
120”1 5 2
3 4y
x&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
RMS Response552
Main Index
The goal of the optimization task is to minimize the RMS displacement of the vehicle CG while constraining
the stress. Design variables are the stiffness and damping (spring and shock absorber) of the suspension.
Numerical values for the design limits are:
The complete input data file is given in Listing 8-23. T wo subcases are required in this case &amp;ndash; one for the front
wheel and one for the back wheel. A  unit enforced displacement is applied to each wheel using the enforced
motion method.
Listing 8-23  Input Data File for DSOUG11
$
$   DSOUG11.DAT    -  RANDOM INPUT AT WHEELS - ENFORCED MOTION
$                     DIRECT METHOD
$                     STRESS CONSTRAINTS AT DISCRETE FREQ
$                     MINIMIZE ACCE AT GRID PT 5
$                     CROSS SPECTRUM
$                     USING NEW ENFORCED MOTION
$
ID MSC, DSOUG11 $
SOL 200 $
CEND
TITLE = SIMPLE CAR WITH RANDOM INPUT
SPC = 100
FREQUENCY = 130
STRESS(PHASE) = ALL
DISP(PHASE) = ALL
DESOBJ= 101
ANALYSIS = DFREQ
DESSUB = 800
$
$  THIS RANDOM CASE CONTROL CALLOUT IS NEEDED ONLY
$  FOR THE XYPLOT REQUEST WHEN USING OPTIMIZATION
$
RANDOM = 1000
SUBCASE 1
DLOAD = 111
SUBCASE 2
DLOAD = 112
$
OUTPUT (XYPLOT)
XTITLE = FREQUENCY (HZ)
YTITLE = DISP PSD AT GRID PT 5
XYPUNCH DISP PSDF /5(T2)
$
BEGIN BULK
$
$   CAR BODY    &lt;br&gt;
$
GRID    1               0.      0.      0.
GRID    2               120.    0.      0.
GRID    5               60.     0.      0.
$
$   WHEELS
$
GRID    3               0.      -10.    0.
GRID    4               120.    -10.    0.
$100K1000
1.0B10.
 4500&lt;/p&gt;
&lt;p&gt;553 Chapter 8: Example Problems
RMS Response
Main Index
CBAR    5       11      1       5       0.      1.      0.
CBAR    6       11      5       2       0.      1.      0.
$
PBAR    11      12      1.E2    1.E3    1.E3
100. 0. -100. 0.
MAT1    12      3.E+7                   7.8E-4
$
$ CONSTRAIN TO A PLANAR PROBLEM
$
SPC1    100     1345    1       2       5
SPC1    100     13456   3       4
SPC1,100,2,3,4
$
CONM2   10      1               2.5
CONM2   15      2               2.5
CONM2   20      5               5.0
CONM2   25      3               2.5
CONM2   26      4               2.5
$
CBUSH   100     1000    1       3                               0
CBUSH   200     1000    2       4                               0
PBUSH   1000    K               200.
B               2.
$
RLOAD2  111     222                     444 DISP
SPCD 222 3 2 1.0
TABLED1 444
0.      1.      100.    1.      ENDT
$
RLOAD2  112     223                     444 DISP
SPCD 223 3 2 1.0
$
FREQ2   130     0.1     2.      20
$
$ DEFINE THE INPUT PSD
$
RANDPS  1000    1       1       1.      0.      145
RANDPS  1000    2       2       1.      0.      145
RANDPS  1000    1       2       1.      0.      146
RANDPS  1000    1       2       0.      1.      147
TABRND1 145
.1      .1      5.      1.      10.     .05     ENDT
$
TABRND1 146
0.1000  0.0990  0.1096  0.1005  0.1202  0.1022  0.1318  0.1040
0.1445  0.1059  0.1585  0.1079  0.1738  0.1101  0.1905  0.1124
0.2089  0.1147  0.2291  0.1172  0.2512  0.1197  0.2754  0.1221
0.3020  0.1246  0.3311  0.1269  0.3631  0.1289  0.3981  0.1305
0.4365  0.1314  0.4786  0.1315  0.5248  0.1304  0.5754  0.1277
0.6310  0.1228  0.6918  0.1151  0.7586  0.1038  0.8318  0.0879
0.9120  0.0665  1.0000  0.0382  1.0965  0.0020  1.2023 -0.0434
1.3183 -0.0986  1.4454 -0.1636  1.5849 -0.2372  1.7378 -0.3159
1.9055 -0.3934  2.0893 -0.4593  2.2909 -0.4984  2.5119 -0.4910
2.7542 -0.4149  3.0200 -0.2508  3.3113  0.0072  3.6308  0.3364
3.9811  0.6685  4.3652  0.8819  4.7863  0.8223  5.2481  0.3435
5.7544  0.2965  6.3096  0.6842  6.9183  0.5743  7.5858  0.0891
8.3176  0.2820  9.1201  0.1964 10.0000  0.0063  ENDT
$
TABRND1 147
0.1000  0.0142  0.1096  0.0159  0.1202  0.0177  0.1318  0.0198
0.1445  0.0221  0.1585  0.0248  0.1738  0.0279  0.1905  0.0313
0.2089  0.0352  0.2291  0.0397  0.2512  0.0448  0.2754  0.0506
0.3020  0.0572  0.3311  0.0648  0.3631  0.0734  0.3981  0.0832
0.4365  0.0944  0.4786  0.1070  0.5248  0.1212  0.5754  0.1371
0.6310  0.1547  0.6918  0.1741  0.7586  0.1951  0.8318  0.2173
0.9120  0.2401  1.0000  0.2625  1.0965  0.2830  1.2023  0.2993
1.3183  0.3084  1.4454  0.3061  1.5849  0.2875  1.7378  0.2467
1.9055  0.1775  2.0893  0.0749  2.2909 -0.0631  2.5119 -0.2318&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
RMS Response554
Main Index
2.7542 -0.4160  3.0200 -0.5848  3.3113 -0.6898  3.6308 -0.6687
3.9811 -0.4624  4.3652 -0.0505  4.7863  0.4968  5.2481  0.8888
5.7544  0.8037  6.3096  0.3101  6.9183 -0.2722  7.5858 -0.5008
8.3176 -0.2390  9.1201  0.0928 10.0000  0.0496  ENDT
$
$  &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
$
$   DESIGN MODEL
$
DESVAR,1,K2,1.,0.5,5.
DESVAR,2,B2,1.,0.5,5.
$
DVPREL1,101,PBUSH,1000,K2,100.
,1,200.
DVPREL1,201,PBUSH,1000,B2,1.
,2,2.0
$
DRESP1,101,MING5T2,RMSDISP,,,2,1000,5
$
DCONSTR,800,801,,4500.
DCONSTR,800,802,,4500.
DRESP1,801,E5PTC,FRSTRE,PBAR,,12,,11
DRESP1,802,E5PTE,FRSTRE,PBAR,,14,,11
$
DOPTPRM DESMAX  20      P1      1       P2      14      METHOD  3$
ENDDATA
The stress constraints are applied to the stresses resulting from these unit displacements in the individual
subcases while the RMS response is calculated by integrating the results from the two subcases as given by
Equation (2-19) on page 50.
Unlike a non-optimization run, where the RANDPS is called out by the RANDOM Case Control
command, the optimization run references the RANDPS entries through the ATTB field (field 8) on the
DRESP1 entry.  There are four RANDPS entries for this case.  The first and second RANDPS entries
represent the same autospectrum applied at the front and back wheel, respectively.  The third and fourth
RANDPS entries represent the real and imaginary parts of the cross spectrum between the front and back
wheels.  Note that these spectra are applied the same way as in a non-optimization run.  The RTYPE field (field
4) on the DRESP1 entry specifies that an RMS displacement is to be used by specifying RMSDISP .  In this
example, we use the rms displacement (RMSDISP) as the objective function.
Listing 8-24 shows the design history for this example while Figure 8-33 shows the objective as a function of
design cycle and Figure 8-34 shows the design variable values. We see that the damping variable goes to its
upper bound while the stiffness is reduced relative to its initial value. Figure 8-35 shows the initial and final
PSD plots . The figures also show that it is the area under these two curves that is reduced as the objective
RMS displacement decrease from 1.906 to 0.627 inches.&lt;/p&gt;
&lt;p&gt;555 Chapter 8: Example Problems
RMS Response
Main Index
Listing 8-24  Design History&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;                               S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
                               ***************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(HARD CONVERGENCE ACHIEVED)
(SOFT CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          16
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS    15
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      1.905990E+00                                     -1.686028E-01
1            -6.776193E-01             2.046491E+00            -1.331113E+00             1.218781E-01
2            -2.601021E+00             2.032243E+00            -2.279877E+00            -9.506368E-02
3             8.464668E-01             1.405097E+00            -3.975741E-01            -3.461601E-01
4             1.347213E-01             1.491859E+00            -9.096957E-01            -3.783136E-01
5             1.033704E+00             1.101532E+00            -6.157639E-02            -6.585776E-01
6             9.261533E-01             1.088016E+00            -1.487689E-01            -4.968621E-01
7             9.549497E-01             1.029967E+00            -7.283430E-02            -6.460897E-01
8             9.093486E-01             9.930474E-01            -8.428489E-02            -4.844010E-01
9             9.277705E-01             9.561360E-01            -2.966677E-02            -6.291828E-01
10             8.666858E-01             8.994412E-01            -3.641747E-02            -4.673159E-01
11             8.369839E-01             8.096140E-01             3.380611E-02            -3.242741E-01
12             7.066263E-01             7.246610E-01            -2.488709E-02            -1.923585E-01
13             6.558644E-01             6.605268E-01            -7.058592E-03            -7.552324E-02
14             6.235935E-01             6.241076E-01            -8.237680E-04            -3.572072E-04
1    SIMPLE CAR WITH RANDOM INPUT                                           OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   151&lt;/p&gt;
&lt;p&gt;0                                                                                                                                &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
15             6.241076E-01             6.241076E-01             0.000000E+00            -3.572072E-04
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1    SIMPLE CAR WITH RANDOM INPUT                                           OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   152&lt;/p&gt;
&lt;h2&gt;0                                                                                                                                &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  K2         |   1.0000E+00 :   1.2003E+00 :   9.5847E-01 :   1.1472E+00 :   9.1971E-01 :   8.2929E-01 :
     2 |          2   |  B2         |   1.0000E+00 :   1.1997E+00 :   1.4414E+00 :   1.7256E+00 :   2.0678E+00 :   2.2715E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  K2         |   7.4843E-01 :   8.2304E-01 :   7.4220E-01 :   8.1459E-01 :   7.3366E-01 :   6.6214E-01 :
     2 |          2   |  B2         |   2.4933E+00 :   2.7407E+00 :   3.0082E+00 :   3.3015E+00 :   3.6295E+00 :   3.9833E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      12      :      13      :      14      :      15      :      16      :      17      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Design Sensitivity and Optimization User’s Guide
RMS Response556
Main Index
1 |          1   |  K2         |   5.9618E-01 :   5.3776E-01 :   5.0018E-01 :   5.0018E-01 :
2 |          2   |  B2         |   4.3801E+00 :   4.8093E+00 :   4.9991E+00 :   4.9991E+00 :
*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =       15.
Figure 8-33  Objective Function&lt;/p&gt;
&lt;p&gt;557 Chapter 8: Example Problems
RMS Response
Main Index
Figure 8-34  Design Variables&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Transient Dynamic Optimization558
Main Index
Figure 8-35  Comparison of PSDF DISP
Transient Dynamic Optimization
This simple example demonstrates the ability to perform structural optimization in conjunction with a
transient analysis. The example is a portal frame modeled with three bar elements that is excited by an
enforced motion at its base. This is a simple representation of a civil engineering structure subjected to a
seismic load.
The frame is subjected to a horizontal ground motion in the form of a half sine pulse:
The standard enforced displacement techniques that are used in SOL’s 109 and 112 are not available in SOL
200. Instead, this example employs the large mass method and offsets the start time of the enforced
displacement to avoid having to specify initial conditions, which are also not supported in SOL 200.
The design task is to minimize the weight of the structure while imposing limits on the rms structural
displacements and stresses as well as on the first natural frequency:
uet1.0 30t sin           0.005·t300.005 + =&lt;/p&gt;
&lt;p&gt;559 Chapter 8: Example Problems
Transient Dynamic Optimization
Main Index
The frame is modeled using three finite element bars (symmetry of the problem could have been used to limit
this to two elements). This example has been adapted from a PhD thesis (see Cassis, J.H., in Reference 15.)
and has some non-standard modeling techniques that are included here because they illustrate the use of
DVPREL2 and DRESP2 entries. In particular, the two design variables for the problem are the bending
inertia of the horizontal and vertical beams. The area of the beams is computed using:
and the stress at the end of the bars is computed as the ratio of the bending moment divided by the section
modulus, where the section modulus is given by:
The transient response was performed over a period of 250 milliseconds and responses were retained at every
5 milliseconds. An RMS response is computed by using the RSS option for the ATTB field on the DRESP1
entries for transient displacement and transient force response and then dividing the result by 51.0 (the
number of samples used to compute the RSS).
The input file for this example is shown in Listing 8-25. It is seen that there are two subcases, with the first
subcase performing a modal analysis while the second performs the modal transient analysis (since the same
METHOD entry is used for both subcases and the boundary condition does not change, only one modal
analysis is performed). The enforced displacement is applied using a time history provided on a TLOAD2
entry that also points to a DAREA entry that provides the magnitude of the displacement.fi9.55 Hz. 
RMS Displacement0.1in.
RMS Stress3000 psi
A 0.465I =
S 60.6I84000 + 290– =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Transient Dynamic Optimization560
Main Index
Listing 8-25  Input Data File for DSOUG12
ID MSC, DSOUG12 $ V2004 EHJ 25-JUN-2003
$ Modified 2-Apr-2009 ehj MDR$
$TIME 10
TIME 60
SOL 200
CEND
TITLE= TRANSIENT DYNAMIC OPTIMIZATION   - DSOUG12&lt;br&gt;
METHOD = 300
DISPL   = ALL
DESOBJ = 1000
DSAPRT(BY=1)       &lt;br&gt;
SUBCASE 2
DESSUB = 2
ANALYSIS =  MODES
SUBCASE 3
DESSUB = 3
STRESS  = ALL
FORCE   = ALL
DLOAD  = 310
TSTEP  = 335
ANALYSIS =  MTRAN
BEGIN BULK
$ EIGENVALUE EXTRACTION METHOD
EIGRL   300                     10
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
$
GRID    1               0.      0.      0.              23456
GRID    2               0.      180.    0.              345
GRID    3               180.    180.    0.              345
GRID    4               180.    0.      0.              23456
$ VERTICAL COLUMNS
CBAR    1       101     1       2       -1.     0.      0.
CBAR    2       101     4       3       -1.     0.      0.
$ HORIZONTAL BAR
CBAR    3       102     2       3       0.      1.      0.
$
MAT1    200     30.E6           0.33    0.28
PARAM   WTMASS  2.588E-3
PARAM POST -1
$
PBAR    101     200     7.92    290. 10.
PBAR    102     200     7.92    290.                    10.
$
RBE2    10      1       1       4
SUPORT  1       1
$ TRANSIENT LOADING DATA
$&amp;hellip;SPECIFY HALF-SINE WAVE ENFORCED DISPLACEMENT BEGINNING AT T=.005
$  SPECIFY TIME DELAY SO AS NOT TO REQUIRE INITIAL CONDITIONS         &lt;br&gt;
TLOAD2  310     320             1       .005    .10972  4.77465 -90.
0.0     0.0
$&amp;hellip;TIME STEPPING INFORMATION:
TSTEP   335     250     0.001   5
$ LARGE MASS METHOD FOR SPECIFYING TRANSIENT ENFORCED DISPLACEMENTS
CMASS2  11      2.0E9   1       1
DAREA   320     1       1       5.176E6
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;
&lt;p&gt;561 Chapter 8: Example Problems
Transient Dynamic Optimization
Main Index
$ DESIGN MODEL
DESVAR  1       X1      1.0     .1      10.&lt;br&gt;
DESVAR  2       X2      1.0     0.1     10.&lt;br&gt;
$
$&amp;hellip;DV TO I RELATIONS:
DVPREL1 10      PBAR    101     I1      1.0             0.0
1       1200.
DVPREL1 11      PBAR    102     I1      1.0             0.0
2       1200.
$
$&amp;hellip;DV TO A RELATIONS:
DVPREL2 12      PBAR    101     A       0.1             200
DESVAR  1
DVPREL2 13      PBAR    102     A       0.1             200
DESVAR  2
DEQATN  200     AREA(X) = .465  * SQRT(1200.*X)
$
DOPTPRM DESMAX  20 IPRINT 7 P1 1 P2 15
$&amp;hellip;DEFINE WEIGHT OBJECTIVE:
DRESP1  1       W       WEIGHT
DRESP2 1000 SWEIG 1000
DRESP1 1
DEQATN  1000     SWEIG(WEIGHT) = WEIGHT/100.
$
$&amp;hellip;FREQUENCY CONSTRAINT:
DRESP1  2       L1      FREQ                    2
DCONSTR 2       2       9.55&lt;br&gt;
$
$&amp;hellip;TRANSIENT DISPLACEMENT CONSTRAINTS:
DRESP1  3       UX2     TDISP                   1       RSS     2
DRESP2 30 RMS 30
DRESP2 3
DEQATN 30 RMS(RSS) = RSS / 51.
DCONSTR 3       30 0.10
$
$&amp;hellip;TRANSIENT BENDING STRESS CONSTRAINTS:
$&amp;hellip;&amp;hellip;VERTICAL COLUMN, STRESSES AT ENDS A AND B:
DRESP1  5       M1A1    TFORC   ELEM            2       RSS     1
DRESP1  6       M1B1    TFORC   ELEM            4       RSS     1
DRESP2  10      SIGA1   210
DESVAR  1
DRESP2  5
DRESP2  11      SIGB1   210
DESVAR  1
DRESP2  6
$&amp;hellip;.HORIZONTAL BEAM, STRESS AT END A
DRESP1  7       M2A1    TFORC   PBAR            2       RSS     102
DRESP2  12      SIGA2   210
DESVAR  2
DRESP2  7
DEQATN  210     BSIG(X,M) = M/( SQRT(72720. *X + 84000.) - 290. )/ 51.
DSCREEN EQUA-10.
DSCREEN DISP-10.
DCONSTR 3       10              +3.E3
DCONSTR 3       11              +3.E3
DCONSTR 3       12              +3.E3
ENDDATA
The initial values of the two DESVAR’s are set to 1.0 with the beam bending inertias being set to 1200. times
the design variable value. The inertia values are linear in the design variable and can therefore be input on a
DVPREL1 entry. The area, however, is nonlinear in the design variable and this  requires DVPREL2 entries.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Transient Dynamic Optimization562
Main Index
The responses are standard, but the RMS responses can perhaps benefit from a description. DRESP1 3 selects
a TDISP (transient displacement) response at GRID 2, component 1. The RSS in the ATTB field for this
entry indicates that the responses that are computed from this DRESP1 are to be converted into a RSS value.
The output of this process is scaled by 51., reflecting the 51 time steps that went into the RSS calculation.
Note that the DRESP2 that is used to provide this RMS responses invokes the RSS values using a DRESP2
label on its continuation even though the RSS value was created using a DRESP1. This is a special rule for
type-1 responses that use the character inputs in the ATTB field: subsequent references to the response must
identify it as a DRESP2. The limit of 0.1 in. on the RMS displacement is imposed as an upper bound on the
DRESP2 value. Three DRESP1 entries create RMS values for the bending moments at both ends of the one
of the vertical beams and at the left end of the horizontal beam (symmetry considerations make it unnecessary
to impose constraints on the left side of the structure). This value is converted into an RMS stress value by
dividing by 51.0.
Selected output is shown for this job in Listing 8-26. Attention is directed to the fragment that prints the final
response values. The RSS response type responses create some special results that are explained here. The
output fragment begins with prints of the final response values that are produced by the DRESP1 entries.
Data are shown for only two of the time steps, but the actual output file contains these data for all 51 time
steps. This is followed by a print of the RETAINED DRESP2 RESPONSES. It is seen that the first four
DRESP2 responses have the same response label as the DRESP1 values and that the Equation ID for all of
them is RSS. These responses are the RSS values that are computed from the DRESP1 transient responses.
This is followed by the final values for four actual DRESP2 responses that are constrained in the design task.
It is seen that two of the stress responses and the displacement response are very close to their limit values.
The design history shows that a converged design is obtained in 6 cycles. The initial weight is 7835. pounds
(this includes 5400. pounds of non-structural mass) while the final weight is 7404.
&amp;mdash;&amp;ndash;    MODAL TRANSIENT FORCE RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL   DRESP1   RESPONSE   ELEMENT  COMPONENT                LOWER                       UPPER&lt;br&gt;
ID        ID      LABEL        ID       NO.       TIME        BOUND         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
202         5  M1A1             1         2     2.4500E-01       N/A         -2.6434E+06       N/A   &lt;br&gt;
203         6  M1B1             1         4     2.4500E-01       N/A          1.6930E+06       N/A   &lt;br&gt;
204         7  M2A1             3         2     2.4500E-01       N/A          1.6930E+06       N/A   &lt;br&gt;
&amp;mdash;&amp;ndash;    MODAL TRANSIENT DISPLACEMENT RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL   DRESP1   RESPONSE    GRID    COMPONENT                    LOWER                       UPPER&lt;br&gt;
ID        ID      LABEL       ID        NO.          TIME         BOUND         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
205         3  UX2              2         1     2.5000E-01       N/A          6.7216E-01       N/A   &lt;br&gt;
&amp;mdash;&amp;ndash;    MODAL TRANSIENT FORCE RESPONSES    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL   DRESP1   RESPONSE   ELEMENT  COMPONENT                LOWER                       UPPER&lt;br&gt;
ID        ID      LABEL        ID       NO.       TIME        BOUND         VALUE         BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
206         5  M1A1             1         2     2.5000E-01       N/A         -2.5947E+06       N/A   &lt;br&gt;
207         6  M1B1             1         4     2.5000E-01       N/A          1.6622E+06       N/A   &lt;br&gt;
208         7  M2A1             3         2     2.5000E-01       N/A          1.6622E+06       N/A   &lt;br&gt;
1    TRANSIENT DYNAMIC OPTIMIZATION   - DSOUG12                             OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   373&lt;/p&gt;
&lt;p&gt;0                                                                                                            SUBCASE 3           &lt;br&gt;
&amp;mdash;- RETAINED DRESP2 RESPONSES &amp;mdash;-
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL      DRESP2      RESPONSE     EQUATION         LOWER                             UPPER&lt;br&gt;
ID           ID         LABEL          ID            BOUND            VALUE            BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
1         1000     SWEIG            1000          N/A             7.4040E+01          N/A   &lt;br&gt;
2             3    UX2          RSS               N/A             5.1134E+00          N/A   &lt;br&gt;
3             5    M1A1         RSS               N/A             1.2451E+07          N/A   &lt;br&gt;
4             6    M1B1         RSS               N/A             7.9751E+06          N/A   &lt;br&gt;
5             7    M2A1         RSS               N/A             7.9751E+06          N/A   &lt;br&gt;
6           10     SIGA1             210      -1.0000E+20         2.8447E+03       3.0000E+03&lt;br&gt;
7           11     SIGB1             210      -1.0000E+20         1.8222E+03       3.0000E+03&lt;br&gt;
8           12     SIGA2             210      -1.0000E+20         2.8427E+03       3.0000E+03&lt;br&gt;
9           30     RMS                30      -1.0000E+20         1.0026E-01       1.0000E-01 A&lt;/p&gt;
&lt;p&gt;563 Chapter 8: Example Problems
External Response to Include Alternative Buckling Response
Main Index
1    TRANSIENT DYNAMIC OPTIMIZATION   - DSOUG12                             OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   374&lt;/p&gt;
&lt;p&gt;0                                                                                                            SUBCASE 3           &lt;br&gt;
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           6
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     5
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      7.835541E+01                                     -2.253375E-01
1             7.578414E+01             7.578414E+01            -1.080101E-13            -1.035933E-01
2             7.463215E+01             7.463215E+01            -3.541663E-14            -3.300574E-02
3             7.413341E+01             7.413341E+01            -2.932903E-14            -2.888143E-03
4             7.405810E+01             7.405810E+01             3.070207E-15             1.674270E-03
5             7.404014E+01             7.404014E+01             6.525772E-15             2.625531E-03
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1    TRANSIENT DYNAMIC OPTIMIZATION   - DSOUG12                             OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE   375&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 3           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;     1 |          1   |  X1         |   1.0000E+00 :   8.0000E-01 :   7.5816E-01 :   7.6415E-01 :   7.7298E-01 :   7.8712E-01 :
     2 |          2   |  X2         |   1.0000E+00 :   8.0000E-01 :   6.3989E-01 :   5.3529E-01 :   5.0736E-01 :   4.8173E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        5.
External Response to Include Alternative Buckling
Response
This example demonstrates how the DRESP3 Bulk Data entry can be applied to include a buckling criteria
that is not available directly from MSC Nastran. The application is to a bar loaded longitudinally as shown
in Figure 8-36. This particular design example is so simple that it could be solved using hand calculations.
However, the contribution of this example is not in the complexity of the problem solved but in its
illustration of the process you must follow to apply the external response capability.
Figure 8-36  Pinned-Pinned Column BucklingP P
LL 40&amp;rsquo;&amp;rsquo; = =
 r2=
P 200,000 –=
co+80,000 =L&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
External Response to Include Alternative Buckling Response564
Main Index
The design task is to find the area of the rod that minimizes the weight while satisfying constraints on the
longitudinal stress and on the buckling behavior. The stress constraint is
-80,000 
while the critical buckling stress is computed using a combination of Johnson and Euler buckling criteria,
with the selection of the criterion to use based on the slenderness ratio of the rod (see Peery and Azar in
Reference 16.).
(8-17)
(8-18)
The fact that the failure criteria can branch based on a combination of structural properties and responses
makes it an ideal application for the external response capability. Listing 8-26 shows the input file for this
example. It is seen that there are two subcases with the first subcase performing a statics analysis and imposing
constraints on the stress in the element and on the combined buckling failure criteria. The second subcase
performs a buckling analysis and places a lower bound of 1.0 on the first buckling eigenvalue. This is
redundant with the Euler buckling condition of the first subcase and therefore provides a check on the
external response calculation.
Listing 8-26  Input Data File for the DRESP3 Example ( DSOUG13)
CONNECT DRESP3 TESTGRP EXTRESP
$ID MSC, DSOUG13 $ v2004 ehj 25-Jun-2003
DIAG 8,15 $
SOL 200
CEND
TITLE    = BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13
SUBTITLE = JOHNSON/EULER BUCKLING CASE
ECHO   = SORT
SPC    = 100
DESOBJ = 20
SUBCASE 1
DESSUB = 1
LABEL  = LOAD CONDITION 1
LOAD   = 300
ANALYSIS = STATICS
DISP   = ALL
STRESS = ALL
SUBCASE 2
DESSUB = 2
ANALYSIS = BUCKcr =critical buckling stress
L =effective length
 =radius of gyration
co =empirically determined column yield stresscr1coL2
42E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; – co= L2E
co&amp;mdash;&amp;mdash;&amp;ndash;
cr2E
L2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = L2E
co&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;
&lt;p&gt;565 Chapter 8: Example Problems
External Response to Include Alternative Buckling Response
Main Index
METHOD    = 1
DISP      = ALL
LABEL     = BUCKLING FACTORS
$
BEGIN BULK
PARAM,POST,-1
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$ GRID DATA
$       2       3       4       5       6       7       8       9       10
GRDSET                                                  345
GRID 1        0.0 0.0 0.0
GRID 2 8.0 0.0 0.0
GRID 3 16.0 0.0 0.0
GRID 4 24.0 0.0 0.0
GRID 5 32.0 0.0 0.0
GRID 6 40.0 0.0 0.0
GRID 10 0.0  0.0 100.0 123456
$
$ ELEMENT AND MATERIAL DATA
CBAR 1 10 1 2 10
CBAR 2 10 2 3 10
CBAR 3 10 3 4 10
CBAR 4 10 4 5 10
CBAR 5 10 5 6 10
MAT1    1       3.0E7           0.33    0.1
$ PROPERTY DATA
PBARL   10      1       MSCBML0 ROD
1.0
$ BOUNDARY CONDITION DATA
SPC1 100 1 1
SPC1 100 2 1 6
$ EXTERNAL LOADS DATA
FORCE   300     6               -2.0E5  1.0
$ BUCKLING ANALYSIS DATA
EIGRL   1       .05             4
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
DESVAR  1       RG 1.0 0.01 10.0
DOPTPRM P215      DESMAX  20      DELP    0.5     GMAX    0.01
CONVDV  0.01    CONVPR  0.02 P1 1
DRESP1  20      W       WEIGHT
DRESP1  23      S1      STRESS  PBAR            7               10
DRESP1  24      S1      STRESS  PBAR            8               10
DRESP1  25      S1      STRESS  PBAR            6               10
DRESP3 32 JOHNSON TESTGRP EULJOH
DESVAR 1
DTABLE L E SIGMAC
DRESP1 25
$
DCONSTR 1 23 100000.
DCONSTR 1 24 -80000.
DCONSTR 1 32 1.0
DTABLE E 30.0E6 L 40.0 SIGMAC 8.0E4
DVPREL1 10 PBARL 10 DIM1
1 1.0
$&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
External Response to Include Alternative Buckling Response566
Main Index
$  DESIGN FOR BUCKLING EIGENVALUE
DRESP1  1       BUCK1   LAMA                    1
DCONSTR 2 1 1.0
PARAM DSNOKD 1.0
ENDDATA
The listing shows the DRESP3 entry that provides the buckling response. It is seen that the inputs include
the design variable value, constants that define E, the rod length and co and the axial stress in the rod.
TESTGRP is specified on the DRESP3 entry as the external response GROUP and EULJOH as the TYPE.
A CONNECT file management statement specifies a DRESP3 application, TESTGRP as the group, and
EXTRESP as the external evaluator.
T wo subroutines are modified to perform the server task. As explained in DRESP3 Bulk Data Entries , the
entire contents of the / MSC2012/dr3srv/  directory need to be copied to your local directory. The two
subroutines that require modification are members of that directory. The first is entitled R3SGRT and is
shown in Listing 8-27. R3SGRT is used to specify the types of responses that are available from the server. This
is used to make sure that the user input TYPE is supported by the server. In this case, there is only one type
of response supported and it is EULJOH. The second subroutine is entitled R3SVALD (shown in Listing 8-29)
and performs the response evaluation based on the user input arguments. (Note that the D suffix on this
subroutine name is used when running on a short word; i.e., 32 bit, machine and that the subroutine named
R3SVALS should be modified when a long word machine is used). In this case, there are four real arguments
being passed and their order is given on the DRESP3 entry. The output of the subroutine is the DR3VAL
argument and is calculated using the formulas given in Equation (8-17) and Equation (8-18).&lt;/p&gt;
&lt;p&gt;567 Chapter 8: Example Problems
External Response to Include Alternative Buckling Response
Main Index
Listing 8-27  The R3SGRT Subroutine
SUBROUTINE R3SGRT(GRPID,TYPNAM,nresp, grdtyp, ERROR)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     PURPOSE: VERIFY THE EXTERNAL RESPONSE TYPE
C
C     GRPID   input integer        - Group ID
C     TYPNAM  input character&lt;em&gt;8    - Name of external response type
c     nresp   outpt integer        - number of responses for this dresp3
c     grdtyp  outpt integer        - integer array of length nresp
c                                   indicating how gradients are to be
c                                   computed
c             = 1 user to supply analytic gradients
c                 varies during approx. optimization
c             = 2 user to supply analytic gradients
c                 invariant during approx. optimization
c             = 3 finite difference technique to provide gradients
c                 varies during approx. optimization
c             = 4 finite difference technique to provide gradients
c                 invariant during approx. optimization
c
C     ERROR   input/output integer -error code for the call.
C
C   Method
C      Match the user input: typnam with the list of available
C      external response types. Once a match is found, nresp and grdtyp
c      are set.  If no match is found, set error code.
C
C   Called by
C             R3CGRT
C
C   NOTE:
C     The writer of this routine is responsible to specify
C     NTYPES and R3TYPE.
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     VARIABLES PASSED IN/out
C
INTEGER GRPID, ERROR, nresp
integer grdtyp(&lt;/em&gt;)
CHARACTER&lt;em&gt;8 TYPNAM
C
C     LOCAL VARIABLES
C
INTEGER NTYPES, BADTYP
PARAMETER(NTYPES=6)
CHARACTER&lt;/em&gt;8 R3TYPE(NTYPES)
C
DATA BADTYP/7554/
DATA R3TYPE/&amp;lsquo;USEVAR1 &amp;lsquo;,&amp;lsquo;USEVAR10&amp;rsquo;,&amp;lsquo;USEALL&amp;rsquo;,
.            &amp;lsquo;USEMIXVS&amp;rsquo;,&amp;lsquo;FREQMOD &amp;lsquo;,&amp;lsquo;EULJOH &amp;lsquo;/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ERROR = 0
  DO 100 ITYPE = 1, NTYPES
     IF (TYPNAM .EQ. R3TYPE(ITYPE)) THEN
        nresp = 1
        grdtyp(1) = 3
        GOTO 200
     END IF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;100   CONTINUE
ERROR = BADTYP
200   CONTINUE
C
RETURN
END&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
External Response to Include Alternative Buckling Response568
Main Index
Listing 8-28  The R3SVALD Subroutine
SUBROUTINE R3SVALD(GRPID,TYPNAM,
.                   NITEMS,ARGLIS,
.                   NSIZE, ARGVAL,
.                   NWRDA8,ARGCHR,
.                   forg,nresp,narg,
.                   DR3VAL,senval, error )
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     PURPOSE: COMPUTE THE EXTERNAL RESPONSE
C
C     GRPID   INPUT INTEGER        - GROUP ID
C     TYPNAM  INPUT CHARACTER&lt;em&gt;8    - NAME OF EXTERNAL RESPONSE TYPE
C     NITEMS  INPUT INTEGER        - DIMENSION OF ARRAY ARGLIS (=12)
C     NSIZE   INPUT INTEGER        - DIMENSION OF ARRAY ARGVAL
C     NWRDA8  INPUT INTEGER        - DIMENSION OF CHARACTER ARRAY ARGCHR
C     ARGLIS  INPUT INTEGER        - ARRAY OF NO. OF ITEMS FOR EACH
c                                     ARGUMENT type
C     ARGVAL  INPUT DOUBLE         - ARRAY OF ARGUMENT VALUES (except
c                                            characters)
C     ARGCHR  INPUT CHARACTER&lt;/em&gt;8    - ARRAY OF CHARACTER VALUES
c     nresp   input integer        - number of responses
c     forg    input integer        - type of call
c                                     = 0 function evaluation
c                                     = 1 sensitivity evaluation
c     narg    input integer        - number of arguments needing gradients
C     DR3VAL  OUTPUT DOUBLE        - VALUE OF THE EXTERNAL RESPONSEs
c     senval  output  double       - matrix of the sensitivity of the IRth
c                                    response to the IARGth argument
C     ERROR   INPUT/OUTPUT INTEGER -ERROR CODE FOR THE CALL.
C                                   0 = PRINT ERROR MESSAGES
C                                   1 = DO NOT PRINT ERROR MESSAGES.
C
C   METHOD
C       A)SET UP VARIOUS PARAMETERS FROM THE ARGUMENT LIST
C       B)if forg = 0 EVALUATE THE EXTERNAL RESPONSE BASED ON THE
c                     GIVEN TYPNAM
C       C)else if forg = 1 EVALUATE THE sensitivities of the external
c                          responses to the arguments that can vary for
c                          the given typnam
C       D)RETURN BADTYP ERROR IF TYPNAM IS NOT MATCHED HERE.
C
C     nsize - the number of arguments or values in a dresp3 entry
C
C     NSIZE=NV+NC+NR+NNC+NDVP1+NDVP2+NDVC1+NDVC2+NDVM1+NDVM2+NRR2
c        where:
c        nv     = number of desvars    nc    = number of dtables
c        nr     = number of dresp1s    nnc   = number of dnode pairs
c        ndvp1  = number of dvprel1s   ndvp2 = number dvprel2s
c        ndvc1  = number of dvcrel1s   ndvc2 = number dvcrel2s
c        ndvm1  = number of dvmrel1s   ndvm2 = number dvmrel2s
c        nrr2   = number of dresp2s
c     narg = nsize - nc
C   CALLED BY
C       SENDR3SVALD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C
C     VARIABLES PASSED IN
C
CHARACTER&lt;em&gt;8 TYPNAM, ARGCHR(NWRDA8)
integer forg , nresp
INTEGER GRPID, NITEMS, NSIZE, ARGLIS(NITEMS), ERROR, NWRDA8
DOUBLE PRECISION ARGVAL(NSIZE), DR3VAL(&lt;/em&gt;), senval(nresp,*)
C
C
C     LOCAL VARIABLES
C&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P3</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_003/</guid>
      <description>
        
        
        &lt;p&gt;29 Chapter 1: Getting Started
Structural Optimization
Main Index
Following paragraphs address the difficulties encountered when trying to make the optimization process
feasible for “real-world” design tasks. Optimization tools yield an orderly, rational approach to solving a
minimization problem subject to a set of constraints; however, a large number of function evaluations may
need to be performed. These function evaluations may be expensive, especially in a finite element structural
analysis context. Methods used in MSC Nastran to reduce the number of finite element analyses required are
introduced, as are methods for minimizing the effort involved in providing the information required during
the optimization.
Relating the Finite Element Analysis Model to the D esign Model
In analysis, our goal is to construct a mathematical idealization of an actual physical system. We must
determine analysis model properties, select appropriate response quantities, and determine a suitable finite
element mesh so that the desired responses are computed within an acceptable degree of accuracy. The
properties define materials, element thicknesses, element meshes and other quantities needed to perform the
analysis. The results of the analyses depend on the type of analysis performed, but include such things as
element stresses and modal frequencies. In design modeling, on the other hand, we wish to define how our
model can change in pursuit of an improved design along with the criteria which we (or the optimizer) use
to judge the effects of these changes. Numerical Optimization Basics  has presented the basics of the
optimization task and uses words such as objective, constraints and design variables. MSC Nastran links these
two models by introducing two intermediate concepts.
The first is the designed property and provides a link between the design variable used by the optimizer and
the finite element property used in the finite element analysis. The second concept is the design response. A
design response is a physically based result that can be used as the design objective or it can be used, with user
imposed limits, as a design constraint. The presence of this intermediate layer between the design quantities
and the analysis quantities is a key feature of Design Sensitivity and Optimization that adds to the flexibility
of the capability. Design properties and design responses are treated in detail in Developing the Design Model
for Sensitivity and Optimization .
Managing the Structural Optimization Task
Historically, the first attempts at linking structural analysis with numerical optimization were based on a
direct coupling or “black box” type of approach as seen in Figure 1-9. Whenever the optimizer needed a
function evaluation, the finite element analysis would be invoked to provide the necessary information. One
must also remember that these methods were being developed during the infancy of computerized structural
analysis when a finite element analysis that we now consider trivial consumed a measurable amount of
computer resources. Therefore, the sheer number of analyses quickly tended to make this approach
impractical in all but the smallest of problems. Recall that the numerical optimizer may not only require
response derivatives with respect to the design variables, but a number of function evaluations must also be
performed during each of the one-dimensional searches. This situation could quite easily lead to hundreds of
analyses. MSC Nastran therefore employs concepts that limit the number of required finite element analyses.
It is remarked that some commercial structural analysis codes that include an optimization capability still
perform their optimization tasks in the “black box” manner of Figure 1-9. Although they benefit from the high
performance capabilities of present day computers, they are still limited in the size of the design task (in terms&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Structural Optimization30
Main Index
of number of design variables and responses and the cost of finite element analysis) they can address relative
to what can be achieved using MSC Nastran.
Figure 1-9  Early Structural Optimization Attempts
The principal complicating factor in structural optimization is that the response quantities of interest are
usually implicit functions of the design variables. For example, a plate element’s stress variation with changing
thickness can only be determined in the general case by performing a finite element analysis of the structure.
When we consider that the optimizer may be asked to deal with perhaps hundreds of design variables and
thousands of constraints, it becomes apparent that we do not have the luxury of invoking a full finite element
analysis each time the optimizer proposes an incremental design change.
To avoid these difficulties, certain approximations can be implemented to reduce the computational
overhead. The remainder of this section introduces each of these methods, all of which are available in MSC
Nastran.
Overview of Approximation Concepts Used in Structural Optimization
Approximation concepts are actually nothing more than the computational implementation of methods
generally used by experienced design engineers. In many instances, an engineer is handed a stack of analysis
data and asked to propose an improved design. This raw data usually contains much more information than
is necessary to suggest possible design improvements. The question becomes one of how to reduce the
problem sufficiently so that only the most pertinent information is considered in the process of generating a
better design.
A first step may be to narrow the design task to that of determining the best combination of just a few design
variables. There is virtually no way for a designer to consider fifty or one hundred variables simultaneously
and expect to find a suitable combination from the group. It is much more efficient to link these together if
possible. That is, it would be advantageous if all the design variables could be varied in a suitably proportional
manner according to changes made to a much smaller set of independent variables. Describing a shape
defining polynomial surface in terms of just a few characteristic parameters, or allowing only linear variations
of plate element thicknesses, are both examples of types of “design variable linking.”
The next step might then be to identify the few constraints that are violated or nearly violated. There may be
just a few constraints which are currently guiding the design, such as stress concentrations due to thermal
loads, while others, such as the first bending mode, may be nowhere near critical and can be temporarily
disregarded. In structural optimization, this is a “constraint deletion” process. Constraint deletion allows the
optimizer to consider a reduced set of constraints, simplifying the numerical optimization phase. This also Numerical
OptimizationFinite Element
Analysis&lt;/p&gt;
&lt;p&gt;31 Chapter 1: Getting Started
Structural Optimization
Main Index
reduces the computational effort associated with determining the required structural response derivatives
(sensitivity analysis costs are reduced as well).
Once the engineer has determined the constraint set that seems to be driving the design, the next step might
be to perform some sort of parametric analysis in order to determine how these constraints vary as the design
is modified. The results of just a few analyses might be used to propose a design change based on a
compromise among the various trial designs.
A parametric study of the problem is carried one step further in structural optimization with formal
approximations, or series expansions of response quantities in terms of the design variables. Formal
approximations make use of the results of the sensitivity analysis to construct an approximation to the true
design space which, although only locally valid, is explicit in the design variables. The resultant explicit
representation can then be used by the optimizer whenever function or gradient evaluations are required
instead of the costly, implicit finite element structural analysis.
This coupling is illustrated in Figure 1-10. The finite element analysis forms the basis for creation of the
approximate model which is subsequently used by the optimizer. The approximate model includes the effects
of design variable linking, constraint deletion, and formal approximations. Design variable linking is
established by the engineer, while constraint deletion and formal approximations are performed automatically
in MSC Nastran.
Figure 1-10  Coupling Analysis and Optimization Using Approximations
Once a new design has been proposed by the optimizer (based on the information supplied by the
approximate model) the next step would most likely be to perform a detailed analysis of the new
configuration to see if it has actually managed to satisfy the various design constraints and reduce the objective
function. This reanalysis update of the proposed designs is represented by the upper segment of the loop in
Figure 1-10. If a subsequent approximate optimization is deemed necessary, the finite element analysis serves
as the new baseline from which to construct another approximate subproblem. This cycle may be repeated as
necessary until convergence is achieved. These loops are referred to as design cycles. Finite Element
AnalysisNumerical
Optimization
Approximate
Design ModelDesign Improvements&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Summary32
Main Index
Summary
By now you should have a fairly good idea of some of the various applications of design optimization as well
as some of the numerical optimization capabilities available to assist you in your design tasks. We introduced
the basic ideas of numerical optimization and some of the methods that are used to couple it with structural
analysis codes. Central to this has been the recognition that it is impractical to directly link numerical
optimizers and structural analysis codes to create a structural optimizer, and that some sort of approximations
are required.
It has also been shown that the set of approximation concepts acts as an interface between the analysis and
the optimizer. There is really nothing extraordinary about these approximations since in many ways they are
similar to the methods experienced designers already use. Of course, formalizing these methods in structural
optimization allows problems of considerably greater size and complexity to be solved than with traditional
design methods alone.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran&lt;br&gt;
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide2Fundamentals of Design
Sensitivity and Optimization
in MSC Nastran
Overview of Fundamentals     34
Types of Optimization     37
The Design Model     38
Multidisciplinary Analysis     48
Constraint Screening     52
Design Sensitivity Analysis     54
Optimization     77
The Approximate Model     81
Tests for Convergence     102&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Overview of Fundamentals34
Main Index
Overview of Fundamentals
Chapter 1 presented a Getting Started overview of design optimization in general and introduced a number
of concepts that are specific to MSC Nastran’s implementation of Design Sensitivity and Optimization. This
chapter goes into greater depth on the MSC Nastran methodology, again in terms of concepts and equations.
Mention of user interface features (that is, the case control commands and bulk data entries) is sometimes
unavoidable, but the intent is to defer a description of the interface to Developing the Design Model for
Sensitivity and Optimization . This chapter has been prepared for several classes of readers:
New users who want to obtain an overview of features of MSC Nastran’s implementation of Design
Sensitivity and Analysis.
More experienced users who will use this chapter as reference material to clarify details of the
features and to gain insight into the algorithms employed.
Support engineers and software developers who need to be able to explain, and possibly extend, the
capability.
It is recognized that this covers a broad spectrum of readers and you probably will not read this chapter from
beginning to end. Instead, you should skim the material until you find the topic that interests you and return
to the chapter as you gain more experience and want to obtain a deeper level understanding.
The majority of this chapter can be thought of as a description of the flow chart shown in Figure 2-1, which
is itself an expanded version of the sketch of Figure 1-10. The figure shows a design loop with a number of
blocks. The blocks, and the section in which they are described, are as follows:&lt;/p&gt;
&lt;p&gt;35 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Overview of Fundamentals
Main Index
Figure 2-1  MSC Nastran Implementation of Structural Optimization
Initial Design
The initial design is a combination of the analysis model familiar to MSC Nastran users and the design
model, which is a unique feature of the Design Sensitivity and Optimization capability. The design model is
discussed in The Design Model .
Structural Analysis
This is the analysis function that is, again, familiar to the MSC Nastran user. However, for design sensitivity
and optimization, it is frequently necessary to perform multiple types of analyses. This reflects the fact that
the design responses can be created by a number of analysis types and it is necessary for the optimizer to Initial
Design
Improved
Design
Structural
Analysis
Constraint
Screening
Sensitivity
AnalysisApproximate
ModelOptimizer
Finite Element
AnalysisMany  TimesConverged
Stop(One time around this loop is referred to as a design cycle
or design iteration.)
Y
N&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Overview of Fundamentals36
Main Index
synthesize these results when performing its redesign. Multidisciplinary Analysis  discusses this
“multidisciplinary” feature.
Constraint Screening
This concept was introduced in Structural Optimization  and refers to the process that is used to identify those
constraints that are likely to drive the redesign process. A detailed discussion on this is presented in Constraint
Screening .
Sensitivity Analysis
Accurate sensitivity analyses are the hallmark of the MSC Nastran implementation of design sensitivity and
optimization. The individual analysis types each have their own techniques for performing sensitivity analysis
and these are developed in Design Sensitivity Analysis .
Optimizer
MSC Nastran uses a variety of optimization algorithms from the MSCADS suite of algorithms as well as the
IPOPT algorithm.
The MSCADS algorithms are adapted from the public domain versions of ADS codes described in Reference
3. An extensive discussion of the theory contained in these algorithms can be found in Reference 1. The
IPOPT algorithm is a special purpose optimization algorithm to address design tasks with a large number (&amp;gt;
3000 to 4000) of design variables and has its primary application to topology optimization tasks, but can be
applied to the conventional design tasks that are discussed in this document as well. The IPOPT algorithm
is open sourec code available from COIN-OR and maintained by IBM. It implements an interior point line
search filter method, as described in Appendix B. The DOT and BIGDOT algorithms from Vanderplaats
R&amp;amp;D Inc.are not available in Nastran 2010 and subsequent releases. However, the DOT and BIGDOT
algorithms can be found in earlier releases.
Approximate Model
Structural Optimization  has also introduced this concept that involves the construction of high-quality
approximations to the finite element results so that the number of full scale finite element analyses is kept to
a minimum. The Approximate Model  documents the approximation concepts used in MSC Nastran.
The Improved Design
This is the point at which the finite element model is updated based on the results from the optimizer so that
a new finite element analysis can occur. This is a straightforward operation and its discussion is included in
the Converged write-up of Tests for Convergence .&lt;/p&gt;
&lt;p&gt;37 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Types of Optimization
Main Index
Converged
As Figure 2-1 indicates, Design Optimization is an iterative process and a key part of the implementation is
therefore determining when to stop the iterations. T ests for Convergence  discusses the many factors that enter
into making this decision.
Types of Optimization
MSC Nastran performs three basic types of optimization that differ primarily in how the relationship
between the design task and the analysis parameters is specified. For now, these types are introduced and the
remainder of the guide will go into greater detail on each of the types.
Sizing Optimization
Sizing optimization refers to a design task where the analysis quantities that can vary are called out explicitly
using DVxRELy entries that permit the design of such items as plate thickness, Young’s modulus and spring
stiffnesses (see Design Model)
Shape Optimization
For shape optimization, the design variables affect the locations of the grids that make up the finite element
model. The optimization task is then one which seeks the best shape to meet the prescribed objective and
constraints.
Toptimization
“Toptimization” is a MSC created word that lumps three types of redesign that share the feature that simple
user inputs spawn internal design variables that lead to innovative designs that would not be achievable using
conventional design techniques. These techniques are discussed in detail in Chapter 7 (Topology, T opometry
and T opography Optimization) and are mentioned here simply to set the stage.
Topology Optimization
Topology optimization can be thought of as a way to develop design concepts starting from a very basic
specification of the design task in terms of loads and boundary conditions and the design space. The
algorithm determines the subset of the material space that provides the optimum behavior. In this case, a
determination is made whether each designable finite element should be there or not.
Topometry Optimization
Topometry optimization provides a simple way of generating a design task that permits each designated
element to be separately designed. For example, if 1000 elements share a property ID, a single user input can
spawn an individual design variable and property id for each of these elements.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Design Model38
Main Index
Topography Optimization
Topography optimization is a special class of shape optimization where the identified finite elements grids
can move normal to the shell surface. It can be quite powerful in improving the response of sheet metal parts
with a negligible increase in weight.
The Design Model
Numerical Optimization Basics  introduced the general concepts of design variables, constraints, objective
function, and side constraints. Structural Optimization  presented further concepts of designed properties and
design responses and indicated that these intermediate quantities are used to fill the gap between standard
finite element analysis and optimization procedures. This section of the guide indicates how these concepts
are implemented in MSC Nastran.
Design Variables
Design Variables are quantities that are known to the optimizer and that can be directly changed to satisfy
the optimization statement. In MSC Nastran, the design variables are defined on the DESVAR entry (see
Defining the Design Variables and Bulk Data Entries ) and can only affect the finite element analysis if they
are used with designed properties, shapes and/or design responses. It is the user’s responsibility to define the
initial values of these design variables and, optionally, their upper and lower bounds. The bounds make up
the “side constraints” (See Equation (1-4)) of the optimization problem statement and these bounds can never
be exceeded at any time.
MSC Nastran distinguishes between dependent and independent design variables. Dependent design
variables are linked to the independent variables using a relationship of the form
(2-1)
MSC Nastran also supports the concept of “discrete” design variables wherein the value of the design variable
is restricted to a user specified set of real numbers. This topic is discussed in more detail as part of Discrete
Variable Optimization  (Ch. 9).
Designed Properties
Designed properties are quantities that do have a direct bearing on the finite element analysis and include
such things as element thicknesses, material properties, mass values, and grid locations. Designed grid
locations, which are used in shape optimization, are defined in a way that is distinct from the remaining
properties. Therefore, the link between grid locations and design variables is presented separately in Designed
Shapes  that follows immediately after this discussion which deals with element properties, material
properties, connectivity properties and load properties.
The first order of business is to explicitly define what these properties are. Element properties refer to
quantities defined in MSC Nastran using element property bulk data entries (those that begin with the letter xjDc0= cixiI
i1=ndvi
+&lt;/p&gt;
&lt;p&gt;39 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Design Model
Main Index
‘P’). Table 2-1 contains a list of the bulk data entries that have element properties that can be designed and
identifies which of the fields on the entry can be designed. In general, real numbers that appear on an element
property bulk data can be designed. In Table 2-1, property type GPLY refers to a particular ply ID that
appears on one or more PCOMPG entries. It enables the design of the thickness or orientation angle for this
ply ID across all PCOMPG entries that reference it.
Table 2-2 contains a list of the bulk data entries for material properties and again identifies which fields on
these entries can be designed. Table 2-3 performs the same function for connectivity entries (bulk data entries Table 2-1  Element Properties Available as Designed Properties
Property Entry Property
PACABS TESTAR, CUTFR, B, K, M
PACBAR MBACK, MSEPTM, FRESON, KRESON
PBAR A, I1, I2, J, NSM, C1, C2, D1, D2, E1, D2, F1, F2, K1, K2, I12
PBARL DIMi, NSM
PBEAM (A(i), I1(i), I2(i), I12(i), J(i), NSM(i), C1(i), C2(i), D1(I), D2(i), E1(i),
E2(i), F1(i), F2(i), i =A, B, 1 &amp;hellip; 9), K1, K2, S1, S2, (NSI(j), CW(j),
M1(j), M2(j), N1(j), N2(j), j =A, B)
PBEAML (DIMi(j), NSM(j), j =A, B, 1 &amp;hellip; 9)
PBRSECT/PBMSECT W (Overall Width), H(Overall Height),T(Overall Thickness) and T(n)
Thickness of segment.See PBRSECT, 644  for more information.
PBUSH (Ki, Bi, GEi, i = 1, 6), SA, ST , EA, ET
PBUSH1D K, C, M, SA, SE (only linear elements are supported for optimization)
PCOMP Z0, NSM, SB, TREF , GE, Ti, THETAi
PDAMP B1, B2, B3, B4
PELAS K1, GE1, S1, K2, GE2, S2
PFAST D, KT1, KT2, KT3, KR1, KR2, KR3, MASS, GE
PGAP U0, F0, KA, KB, KT, MU1, MU2
PCOMPG Z0, NSM, SB, TREF , GE, Ti, THETAi
PMASS M1, M2, M3, M4
PROD A, J, C, NSM
PSHEAR T, NSM, F1, F2
PSHELL T, 12I/T&lt;strong&gt;3, TS/T, NSM, Z1, Z2 (The 12I/T&lt;/strong&gt;3 term can be designed
but must be referenced by Field ID =6 rather than by name.)
PTUBE OD, T , NSM
PVISC CE1, CR1, CE2, CR2
GPLY T, THETA&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Design Model40
Main Index
that begin with the letter ‘C’). It is seen that this enables the support of properties such as beam offset vectors,
concentrated mass values, and tapered shell elements. Table 2-4 indicates which external loads properties can
be designed in a static analysis. In addition to the properties of these four tables, a final design quantity is the
deflection of a control surface (see entry DVPSURF).
Table 2-2  Material Properties  Available as Designed Properties
Material
Entry Material Properties
MAT1 E, G, NU, RHO, A, TREF , GE
MAT2 G11, G12, G13, G22, G23, G33, RHO, A1, A2, A3, TREF , GE
MAT3 EX, ETH, EZ, NUXTH, NUZTH, NUZX, RHO, GZX, AX, ATH, AZ, TREF , GE
MAT8 E1, E2, NU12, G12, G1Z, G2Z, RHO, A1, A2, TREF , Xt, Xc, Yt, Yc, S, GE
MAT9 G11, G12, G13, G14, G15, G16, G22, G23, G24, G25, G26, G33, G34, G35, G36,
G44, G45, G46, G55, G56, G66, RHO, A1, A2, A3, A4, A5, A6, TREF , GE
MAT10 BULK, RHO, C, GE
Table 2-3  Connectivity Properties Available as Designed Properties
Connectivity
Entries Connectivity Properties
CBAR X1, X2, X3, W1A, W2A, W3A, W1B, W2B, W3B
CBEAM X1, X2, X3, BIT , W1A, W2A, W3A, W1B, W2B, W3B
CBUSH X1, X2, X3, S, S1, S2, S3
CDAMP2,4 B
CELAS2 K, GE, S
CELAS4 K
CGAP X1, X2, X3
CMASS2,4 M
CONM1 M11, M21, M22, M31, M32, M33, M41, M42, M43, M44, M51, M52, M53,
M54, M55, M61, M62, M63, M64, M65, M66
CONM2 M, X1, X2, X3, I11, I21, I22, I31, I32, I33
CONROD A, J, C, NSM
CQUAD4,8,R THETA, ZOFFS, T1, T2, T3, T4
CTRIA3,5,R THETA, ZOFFS, T1, T2, T3
CTRIAX6 TH&lt;/p&gt;
&lt;p&gt;41 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Design Model
Main Index
Table 2-4  External Load Properties Available as Designed Properties
Type-1 Properties
Two methods are provided to relate the properties of Table 2-1 through Table 2-4 to the DESVAR values. The
first, which is designated type-1, specifies a linear relationship which can be expressed as
(2-2)
where  pj is the j-th property, expressed as a linear combination of  n design variables plus an optional constant
value. In a typical application, the property is a function of a single design variable, but Equation (2-1) can be
used to express a large number of properties in terms of a much small set of design variables. This is shown
in the following example.
Example
Assume the plate thickness distribution of the simple structure shown in Figure 2-2 is to be determined using
a combination of constant, linear, and quadratic basis functions as shown in Figure 2-3. The design variables
act as multipliers of these basis functions which are, in turn, used to specify the element plate thicknesses.Loads Entry Load Property
FORCE F ,N1,N2,N3
MOMENT M,N1,N2,N3
LOAD S,Si
pjco= ci
i+ xi&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Design Model42
Main Index
Figure 2-2  Plate Thickness Distributionx 0=
t1
t2
t10
x L=y
1.01.0
0.5FxL
F1
F2
F3
xL&lt;/p&gt;
&lt;h1&gt;43 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Design Model
Main Index
Figure 2-3  Basis Functions
The plate thicknesses are to vary in the x-axis direction, but are to remain constant in the y-direction.
Evaluating the basis functions for each of these ten thickness stations and writing these design variable-to-
thickness relations in matrix form, we get
(2-3)
The thicknesses of the ten element groups are controlled using only three design variables. Each of the matrix
columns correspond to constant, linear, and quadratic basis functions, respectively. Relations of this sort are
termed reduced basis formulations.
In general, a reduced basis formulation can be expressed as
{p}M = [T]MXN{x}N (2-4)
The most powerful form of Equation (2-4) occurs when the number of rows of [T] is much greater than the
number of columns or . Cantilevered Plate  presents an example that uses this concept in the design
of a cantilevered plate. F1x
L&amp;mdash;1.0=
F2x
L&amp;mdash;c11x
L&amp;mdash;–=
F3x
L&amp;mdash;c11x
L&amp;mdash;–2&lt;/h1&gt;&lt;h1&gt;t1
t2
t3
t4
t5
t6
t7
t8
t9
t10
1.01.01.0
1.00.90.81
1.00.8064
1.00.70.49
1.00.60.36
1.00.50.25
1.00.40.16
1.00.30.09
1.00.20.04
1.00.10.01x1
x2
x3&lt;/h1&gt;&lt;p&gt;MN»&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Design Model44
Main Index
Type-2 Properties
The second method, designated type-2, utilizes a general equation utility to define the relationship between
design variables and designed properties
pj = f(X,C) (2-5)
where the j-th property is a function of a collection of design variables and constants as indicated by the bold
notation.
A simple example of the application of a type-2 relation is in the design of beam cross-sectional properties.
For a rectangular cross section, the logical design variables would be the width and height of the beam but
MSC Nastran expects cross-sectional properties such as area and moment of inertia. If x1 represents the width
and x2 represents the height, these properties can be written using equations
(2-6)
It should be noted that the beam library feature of MSC Nastran permits the direct design of the PBARL and
PBEAML dimensions. This is a much simpler user interface and is to be preferred if the beam library supports
the cross section type of interest.
Type-3 Properties
The beam library does introduce a third type of designed property that is somewhat hidden from the user.
The user has direct access to the beam dimension in terms of designed properties. The actual beam properties,
such as area and moment of inertia, that are used in the development of the element stiffness matrices, are
functions of these dimensions. When a beam property is designed indirectly because it is a function of a beam
dimension, the designed beam property is referred to as a “spawned” design property. The relation between
the spawned property and the design variable can be linear (stress recovery points are typically a linear
function of the beam dimensions) or nonlinear (inertia properties are typically a nonlinear function of the
beam dimensions). MSC Nastran makes a special effort to determine the nature of this relationship because
the sensitivity calculations are much simpler when the relationship is linear. Spawned beam properties that
are spawned using nonlinear relations are referred to subsequently as type-3 properties.
Designed Shapes
Shape sensitivity and optimization in MSC Nastran requires the definition of design variables and a
relationship between these variables and the allowable shape variations. The shape variations are similar to
the basis vectors of the previous section in that a single shape typically affects multiple grid locations. The
amount the design variable is changed during optimization results in a corresponding shape change.
The allowable shape changes are defined using shape basis vectors. The optimizer then determines how much
the structure can change by modifying the design variables.
The various methods supported by MSC Nastran for the generation of basis vectors are described in Shape
Optimization .A x1x2 =
Ix1x23
12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;45 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Design Model
Main Index
Design Responses
Design responses are used in MSC Nastran as the basis for defining the design objective and design
constraints. In a manner similar to the designed properties, they are an intermediate layer that serves to
connect the MSC Nastran analysis with the Basic Optimization Problem Statement. Designating the Design
Responses  goes into the specifics of the available response quantities so that this discussion simply introduces
the three types of responses.
Type-1 Responses
The first type of response is entitled type-1 or first-level responses. These responses are available directly from
an MSC Nastran analysis. Structural weight, displacements at grid points, element stresses, and so on, are all
examples of type-1 responses. The DRESP1 Bulk Data entry is used to select this type of response and is
discussed at length in Bulk Data Entries .
Type-2 Responses
The second type is entitled type-2, or second-level responses. This class of responses is also frequently called
user-defined since they utilize the equation input feature in MSC Nastran. This response allows the user to
develop a response of the form
(2-7)
where the  X, C, R1, P, R2  and XYZ  vectors are design variables, constants, type-1 responses, designed
properties, type-2 responses and grid locations, respectively. This is an extremely powerful feature of the MSC
Nastran Design Sensitivity and Optimization capability that allows users to synthesize a wide variety of design
conditions that are not available from the MSC Nastran analysis directly. Example applications of type-2
responses are to formulate stress failure criteria not available in MSC Nastran, to evaluate local buckling
behavior, to develop root mean square responses and, in shape optimization, to impose limits that prevent
the geometry from becoming physically meaningless (e.g., to make sure a hole radius does not extend beyond
the boundary of the plate it is contained in). The DRESP2 Bulk Data entry is used to develop this type of
response.
Type-3 Responses
The final type of response is called type-3 or third level responses. This can be regarded as a major extension
of the type-2 response that creates a response using a representation similar to that of
Equation (2-7)
(2-8)
The evaluation of the type-3 response is performed using an API (Application Programming Interface) that
invokes a process running externally to MSC Nastran. The additional ‘string’ argument in the type-3
formulation permits the passing of general information that can be used to direct the execution of the external
process. For example, it could identify an input file needed by the external evaluator or it could be a simple rj2fXCR1, P, R2, XYZ   =
rj3fXCR1PR2XYZstring    =&lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
The Design Model46
Main Index
flag that directs the execution of the external evaluator in some way. It is seen that the type-3 response
provides a completely general way of synthesizing response quantities that can drive the design but which are
not MSC Nastran responses and are too complex to be evaluated using the type-2 formulation. Examples are
limited only by the imagination and cleverness of the user, and include proprietary buckling criteria, cost
models, detailed component analysis and other analyses not performed in MSC Nastran. The DRESP3 Bulk
Data entry is used to develop this type of response.
A complete description of Type-3 Responses is given in External Response .
Design Objective
The objective function is a scalar quantity that is either minimized or maximized by the optimizer. The design
objective is selected using the DESOBJ (DESign OBJective) Case Control command. This command points
to a design response defined on either a DRESP1, DRESP2 or DRESP3 Bulk Data entry which must define
a single scalar response.
Design Constraints
Design constraints are invoked by using the DCONSTR entry to identify a design response (DRESP1,
DRESP2 or DRESP3) and to impose limits on the response
(2-9)
where  is the lower bound on the j-th response and  is the corresponding upper bound. Unlike the
design objective, constraints can be applied to responses that have multiple values. For example, a stress
response that invokes a particular property ID will create a separate response value for every finite element
that references that property ID.
Normalized Constraints
The inequalities of Equation (2-9) are converted to normalized constraints that satisfy the convention of
Equation (1-2) in which satisfied constraints are negative
(2-10)
where
(2-11)rjLrjXrjU
rjLrjU
g2j1–XrjLrjX –
GNORM&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = 0
g2jXrjXrjU–
GNORM&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = 0
GNORMLALLOW for lower bounds if LALLOW GSCAL
UALLOW for upper bounds if UALLOW GSCAL
GSCAL otherwise  &lt;/h1&gt;&lt;p&gt;47 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Design Model
Main Index
where GSCAL is an MSC Nastran parameter with a default of 0.001.
The normalized constraints of Equation (2-10) are especially useful since the dependence on the magnitude of
the response quantity has been removed. A constraint having a value of +1 represents a 100% violation
irrespective of the magnitude of the response or whether it is an upper or lower bound. It will be seen that
this normalization enables the constraint screening discussed in Constraint Screening .
Since response bounds are used as normalizing factors, it is recommended that the bounds of zero be avoided.
To avoid a divide by zero error in the code, the small nonzero number GSCAL is used. This may or may not
be acceptable from a design standpoint. For example, consider the synthetic response
(2-12)
and assume the response had been formulated using a type-2 response as
(2-13)
At first glance, this seems acceptable since it is expressed in standard form. However, the upper bound
normalization uses GSCAL and the resultant normalized upper-bound constraint then becomes
(2-14)
To understand why this is not a good formulation, let’s assume max is 10000. and the  ()/2 responses
exceeds this by 1% to equal 10100. With the default value of GSCAL, Equation (2-14) gives a constraint value
of 100,000(!), implying a grossly violated constraint. Further, a small change in the design could result in
()/2 = 9900 and now the constraint is -100,000. The optimizer will have a difficult time making sense
out of these wild gyrations and is likely to become confused.
If the constraint is expressed instead as
(2-15)
then the limit max (provided as an upper bound on the DCONSTR entry) is used as the normalizing factor
or
(2-16)
now a 1% excedence by ()/2 of max results in a constraint value of 0.01 and the optimizer will have
a much better chance of doing its job. 12+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-max
12+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-max– 0
gu12+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-max–  
GSCAL&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = 0
12+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-max
gu12+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-max–
max&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = 0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Multidisciplinary Analysis48
Main Index
Equality Constraints in MSC Nastran
Equality constraints can be defined simply by specifying equivalent upper and lower bounds. This will yield
a pair of equal and opposite constraints that force the response to be satisfied with equality at the optimum
(2-17)
In practice, this is not a good idea since the optimizer does not have any special algorithms for dealing with
equality constraints so that one of the two relations in Equation (2-17) will always be violated. It is
recommended that the equality constraint be replaced with a tolerance by expressing the bounds as
Rj - and Rj +  on the DCONSTR entry, where  is the allowable tolerance and is perhaps 1% of the target
value.
Multidisciplinary Analysis
A structural design requires the synthesis of design requirements that can arise from any number of areas,
including strength, stiffness, and stability. Historically, this often led to additional design cycles as additional
analyses revealed shortcomings in the designs that were based on preliminary analyses with a limited set of
requirements. As an example from aircraft design, the term “flutter penalty” was applied to the extra weight
that was required in the design to satisfy flutter speed requirements once the initial strength design had been
performed. The MSC Nastran implementation of design sensitivity and optimization recognizes this by
combining analyses that were previously considered separate (with separate input files and job submittals)
into a single job. The responses from these combined analyses can then be included in the optimization step
so that all the applicable requirements are considered simultaneously.
Table 2-5 indicates the analyses that are available for design sensitivity and optimization and lists some of the
attributes of the analyses. The column of Solution Numbers refers to the number MSC Nastran would use
to perform the separate analyses. The Design Optimization Solution Number is 200.RjrjXRj
g2j1–XRjrjX –
Rj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = 0
g2jXrjXRj–
Rj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = 0
Table 2-5  Analysis Disciplines Supported in Multidisciplinary Analysis
and Design of SOL 200
Analysis SOL Numbers Multiple SubcasesMultiple Boundary
Conditions
Statics 101 Y Y
Normal Modes 103 Y Y
Buckling 105 Y Y
Direct Complex
Eigenanalysis107 N N&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P30</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_030/</guid>
      <description>
        
        
        &lt;p&gt;569 Chapter 8: Example Problems
External Response to Include Alternative Buckling Response
Main Index
INTEGER BADTYP
DOUBLE PRECISION PI,  FAC, FACT, SLNDER
DOUBLE PRECISION R,L,E,SIGMA,SIGMAC, RGYRA
C
DATA BADTYP /7554/
C
PI = 3.14159
PI2 = PI * PI
C
C     THE USER-SUPPLIED EQUATION TO DEFINE THE EXTERNAL RESPONSE
C     SIGMA = DRESP1, R=DESVAR, L, E AND SIGMAC = DTABLE CONSTANTS
C
C     EULER  : EULER= -SIGMA * (L/ RGYRA ) &lt;strong&gt;2 / (PI&lt;/strong&gt;2 * E)
C              RGYRA = R / 2.0
C
C     JOHNSON: JOHNSON = -SIGMA / (SIGMAC * FACTOR )
FACTOR = 1. - SIGMAC * (L/RGYRA)&lt;strong&gt;2 /(4 * PI&lt;/strong&gt;2 * E)
ERROR = 0
C
C     SET UP PARAMETERS FOR VARIOUS ARGUMENT ITEMS
C
IF (TYPNAM .EQ. &amp;lsquo;EULJOH &amp;lsquo;) THEN
R      = ARGVAL(1)
L      = ARGVAL(2)
E      = ARGVAL(3)
SIGMAC = ARGVAL(4)
SIGMA  = ARGVAL(5)
RGYRA  = R / 2.0
SLNDER = L / RGYRA
FACT = PI * SQRT(2.0D0 * E / SIGMAC)
IF ( SLNDER .LE.FACT) THEN
C           JOHNSON CRITERION
FAC    = 1.0D0 - SIGMAC * (SLNDER) ** 2 /(4.0D0 * PI2 * E )
DR3VAL(1) = -SIGMA / (SIGMAC * FAC)
ELSE
C           EULER CRITERION
DR3VAL(1) = -SIGMA * SLNDER**2 / (PI2 * E)
ENDIF
ELSE
ERROR = BADTYP
END IF&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RETURN
  END
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the two files have been modified, the next step is to build the server command using the command:
msc2012 ./dr3srv build
This will create the external response server with the name dr3serv.
A final file that is required is the one that indicates where the server program resides and, in this case, is named
‘evalconnect ’ and has the form:
EXTRESP,-,/usr/ehj/dsoug/dr3srv/dr3serv
where EXTRESP is the evaluator name given on the CONNECT file management statement and the ‘-’
connect option in this case indicates the server exists on any network mounted computer and this is followed
by the name of the file which contains the server.
Now that all the files have been assembled, the job is submitted using the gmconn option; for example:
nastran dsoug13 scr=yes gmconn=evalconnect&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
External Response to Include Alternative Buckling Response570
Main Index
Selected results for this simple design task are presented in Listing 8-29. The printout first gives results from
the final analysis and it is seen that the single design variable that the user has specified to be the radius of the
ROD input on the PBARL has generated nine designed properties for the bar cross section. The
“RESPONSE IN THE DESIGN MODEL” output indicates that the stresses in the bars are well below their
compression allowable and that the final global buckling response is 1.0863. Since this is above the 1.0 limit
that has been placed on this response, we can infer that the Johnson criterion is the critical design constraint.
This is confirmed by the fact that all of the retained DRESP3 responses are at their upper bound limit. The
design history summary indicates it was necessary to increase the rod radius from 1.0 to 1.1072 to satisfy this
design requirement and that this was accomplished in two design cycles.&lt;/p&gt;
&lt;h2&gt;571 Chapter 8: Example Problems
External Response to Include Alternative Buckling Response
Main Index
Listing 8-29  Final Results in the Buckling Design Task (DSOUG13)
*******************************************
*                                         *
*        F I N A L  A N A L Y S I S       *
*                                         *
*******************************************
*******   ANALYSIS RESULTS BASED ON THE FINAL DESIGN   *******
&amp;mdash;&amp;ndash;   DESIGN OBJECTIVE   &amp;mdash;&amp;ndash;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;--------design-objective--------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#--------design-objective--------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;            INTERNAL                            MINIMIZE                                                           
            RESPONSE                RESPONSE       OR       SUPERELEMENT    SUBCASE
               ID        DRESPx       TYPE      MAXIMIZE         ID            ID          VALUE   
 ----------------------------------------------------------------------------------------------------
                   1     DRESP1     WEIGHT      MINIMIZE             0            0      1.5431E+01
                                              -----   DESIGN VARIABLES   -----
 ---------------------------------------------------------------------------------------------------------
        INTERNAL       DESVAR                         LOWER                               UPPER   
           ID            ID          LABEL            BOUND             VALUE             BOUND   
 ---------------------------------------------------------------------------------------------------------
               1             1      RG              1.0000E-02        1.1081E+00        1.0000E+01
                                            -----   DESIGNED PROPERTIES   -----
 ----------------------------------------------------------------------------------------------------------
     PROPERTY     PROPERTY     PROPERTY     TYPE OF          LOWER                             UPPER   
       TYPE          ID          NAME       PROPERTY         BOUND            VALUE            BOUND   
 ----------------------------------------------------------------------------------------------------------
     PBARL               10        DIM1     DVPREL1           N/A           1.1081E+00          N/A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    69
JOHNSON/EULER BUCKLING CASE                                                                                                &lt;br&gt;
0     BUCKLING FACTORS                                                                                       SUBCASE 2
&amp;mdash;&amp;ndash;   DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
PROPERTY     PROPERTY     PROPERTY     TYPE OF          LOWER                             UPPER&lt;br&gt;
TYPE          ID          NAME       PROPERTY         BOUND            VALUE            BOUND&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
PBAR                10          C1     DVPREL1           N/A           1.1081E+00          N/A
PBAR                10          D2     DVPREL1           N/A           1.1081E+00          N/A
PBAR                10          E1     DVPREL1           N/A          -1.1081E+00          N/A
PBAR                10          F2     DVPREL1           N/A          -1.1081E+00          N/A
PBAR                10           A     SECPRO         1.0000E-15       3.8578E+00       1.0000E+20
PBAR                10          I1     SECPRO         1.0000E-15       1.1843E+00       1.0000E+20
PBAR                10          I2     SECPRO         1.0000E-15       1.1843E+00       1.0000E+20
PBAR                10           J     SECPRO         1.0000E-15       2.3686E+00       1.0000E+20
&amp;mdash;&amp;ndash;   DESIGN CONSTRAINTS ON RESPONSES   &amp;mdash;&amp;ndash;
(MAXIMUM RESPONSE CONSTRAINTS MARKED WITH &lt;strong&gt;)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL   EXTERNAL                      INTERNAL                                     &lt;br&gt;
INTERNAL    DCONSTR   RESPONSE    DRESPx    RESPONSE    L/U     REGION     SUBCASE
ID         ID         ID         ID        TYPE      FLAG      ID          ID         VALUE&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1          1          2         24   STRESS     LOWER           1         1    -3.5195E-01&lt;br&gt;
2          1          3         24   STRESS     LOWER           1         1    -3.5195E-01&lt;br&gt;
3          1          4         24   STRESS     LOWER           1         1    -3.5195E-01&lt;br&gt;
4          1          5         24   STRESS     LOWER           1         1    -3.5195E-01&lt;br&gt;
5          1          6         24   STRESS     LOWER           1         1    -3.5195E-01&lt;br&gt;
6          1          1         32   EXTERNAL   UPPER          32         1     1.4849E-04&lt;/strong&gt;
7          1          2         32   EXTERNAL   UPPER          32         1     1.4849E-04**
8          1          3         32   EXTERNAL   UPPER          32         1     1.4849E-04**
9          1          4         32   EXTERNAL   UPPER          32         1     1.4849E-04**
10          1          5         32   EXTERNAL   UPPER          32         1     1.4849E-04**
11          2         12          1   LAMA       LOWER           0         2    -8.9739E-02
&amp;mdash;&amp;ndash;   CONSTRAINTS ON DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL     PROPERTY        PROPERTY           L/U              CYCLE &lt;br&gt;
ID           ID             NAME             FLAG             LIMIT                 VALUE &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
12           10               A          LOWER            1.9289E+00           -1.0000E+00
13           10              I1          LOWER            5.9215E-01           -1.0000E+00
14           10              I2          LOWER            5.9215E-01           -1.0000E+00
15           10               J          LOWER            1.1843E+00           -1.0000E+00
16           10               A          UPPER            5.7866E+00           -3.3333E-01
17           10              I1          UPPER            1.7764E+00           -3.3333E-01
1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    70
JOHNSON/EULER BUCKLING CASE                                                                                                &lt;br&gt;
0     BUCKLING FACTORS                                                                                       SUBCASE 2           &lt;br&gt;
&amp;mdash;&amp;ndash;   CONSTRAINTS ON DESIGNED PROPERTIES   &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
INTERNAL     PROPERTY        PROPERTY           L/U              CYCLE &lt;br&gt;
ID           ID             NAME             FLAG             LIMIT                 VALUE &lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
18           10              I2          UPPER            1.7764E+00           -3.3333E-01
19           10               J          UPPER            3.5529E+00           -3.3333E-01
1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    71
JOHNSON/EULER BUCKLING CASE                                                                                                &lt;br&gt;
0     BUCKLING FACTORS                                                                                       SUBCASE 2&lt;/p&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
External Response to Include Alternative Buckling Response572
Main Index&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;main-index&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#main-index&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                           |        R E S P O N S E S    IN    D E S I G N    M O D E L         |
                           ----------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER                         UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID         ID       LABEL        ID         ID           BOUND          VALUE          BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1        20      W             3          3              N/A          1.5431E+01       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    STRESS RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL   DRESP1   RESPONSE   ELEMENT    VIEW    COMPONENT      LOWER                       UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID        ID      LABEL        ID     ELM ID      NO.         BOUND         VALUE         BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2        24  S1               1                   8   -8.0000E+04     -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3        24  S1               2                   8   -8.0000E+04     -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4        24  S1               3                   8   -8.0000E+04     -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5        24  S1               4                   8   -8.0000E+04     -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6        24  S1               5                   8   -8.0000E+04     -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7        25  S1               1                   6       N/A         -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8        25  S1               2                   6       N/A         -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9        25  S1               3                   6       N/A         -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10        25  S1               4                   6       N/A         -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11        25  S1               5                   6       N/A         -5.1844E+04       N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =       2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;ndash;    BUCKLING LOAD RESPONSES    &amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL     DRESP1     RESPONSE      MODE          LOWER                           UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID          ID        LABEL         NO.          BOUND           VALUE           BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;12           1    BUCK1              1      1.0000E+00        1.0897E+00         N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;72&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JOHNSON/EULER BUCKLING CASE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0     BUCKLING FACTORS                                                                                       SUBCASE 2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;- RETAINED DRESP3 RESPONSES &amp;mdash;-&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;(N/A - BOUND NOT ACTIVE OR AVAILABLE)
(*** VIOLATED RESPONSES MARKED WITH V &lt;em&gt;&lt;strong&gt;)
(&lt;/strong&gt;&lt;/em&gt; ACTIVE RESPONSES MARKED WITH A ***)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-active-responses-marked-with-a-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-active-responses-marked-with-a-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;-
INTERNAL     DRESP3  RESP      RESPONSE       GROUP        TYPE          LOWER                                 UPPER&lt;br&gt;
ID          ID     NO        LABEL         NAME         NAME          BOUND              VALUE              BOUND&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;id----------id-----no--------label---------name---------name----------bound--------------value--------------bound&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#id----------id-----no--------label---------name---------name----------bound--------------value--------------bound&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;-
1         32      1        JOHNSON      TESTGRP      EULJOH            N/A             1.0001E+00       1.0000E+00 A
2         32      1        JOHNSON      TESTGRP      EULJOH            N/A             1.0001E+00       1.0000E+00 A
3         32      1        JOHNSON      TESTGRP      EULJOH            N/A             1.0001E+00       1.0000E+00 A
4         32      1        JOHNSON      TESTGRP      EULJOH            N/A             1.0001E+00       1.0000E+00 A
5         32      1        JOHNSON      TESTGRP      EULJOH            N/A             1.0001E+00       1.0000E+00 A
1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE &lt;br&gt;
73
JOHNSON/EULER BUCKLING CASE                                                                                                &lt;br&gt;
0     BUCKLING FACTORS                                                                                       SUBCASE 2&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CYCLE              APPROXIMATE                 EXACT                    OF                       OF&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INITIAL                                      1.256637E+01                                      4.017632E-01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1             1.529970E+01             1.529970E+01            -9.160609E-14             1.345879E-02&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2             1.543101E+01             1.543101E+01            -3.453481E-15             1.484865E-04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3             1.543101E+01             1.543101E+01             0.000000E+00             1.484865E-04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1    BUCKLING TEST CASE WITH AN EXTERNAL RESPONSE - DSOUG13                 OCTOBER   4, 2018  MSC Nastran  7/24/18   PAGE    74&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JOHNSON/EULER BUCKLING CASE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0     BUCKLING FACTORS                                                                                       SUBCASE 2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DESIGN VARIABLE HISTORY&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;573 Chapter 8: Example Problems
Continuing the Design Process in a Subsequent Job
Main Index
Continuing the Design Process in a Subsequent Job
This final example section provides some guidance on continuing a design task across multiple job submittals.
The preferred situation would be that design information gathered on an initial run be available in a
subsequent run with a minimal amount of recalculation. This is related to the powerful feature in MSC
Nastran referred to as automatic restarts (see Automatic Restarts, (see RESTART  in the MSC Nastran Quick
Reference Guide . However, design optimization has specialized techniques in this area that differ from those
available in the other Solution Sequences. These techniques require more user intervention so that it is felt
valuable to provide this section with design optimization examples so that you can benefit from the available
capabilities. At the same time, there is limited support for the standard Restart capability of MSC Nastran
and this support is also described by example. This section therefore focuses on three separate scenarios:
1.Continuing a property optimization design task
2.Continuing a shape optimization design task
3.Restarting from a previous analysis
Continuing a Property Optimization Design Task
The basic principle to recognize when continuing an optimization task is that, in SOL 200, the design model
data overrides the analysis model . (Shape optimization is a special case, as discussed in the next subsection .)
This feature can be used to our advantage to continue from a previously obtained design.
As a design cycle is performed, PARAMeters DESPCH and DESPCH1 can be used to save critical design
information to the .pch file that is created during the run. By default, DESVAR and property results are ***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
(SOFT CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           4
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     3&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number-of-optimizations-wrt-approximate-models-----3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number-of-optimizations-wrt-approximate-models-----3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  RG         |   1.0000E+00 :   1.1034E+00 :   1.1081E+00 :   1.1081E+00 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        3.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Continuing the Design Process in a Subsequent Job574
Main Index
written to the .pch file following the last design cycle. It is a simple matter then to delete the existing DESVAR
entries and insert the new DESVAR entries from the punch file to continue the design process.
We can illustrate this process using the Three-Bar T russ example of DSOUG1. Listing 8-1 on page 476 does
not contain any punch parameters, with the result that the .pch file produced by this run contains only final
DESVAR and PROD properties as shown in Listing 8-30. Note that, by default, this output is given using the
double field format so that adequate data precision is obtained. (Small field format can be obtained by using
negative integers for the DESPCH1 parameter.) The DESVAR entries from the punch file are used in place
of the original DESVAR entries to produce the data file shown in Listing 8-31. It is not necessary (but does not
hurt) to include the PROD entries since the DESVAR values will be used to override the original properties.
Some other changes have been made in the file of Listing 8-31: the DLINK entry has been removed so that all
three rod areas are now being designed and the DOPTPRM entry has been changed to that the SQP
algorithm (METHOD=3) is used for optimization and a direct approximation (APRCOD=1) is used for the
approximate model calculations.
It is noted that the NEWBULK option of the ECHO command (generation of a new Bulk Data File)
provides a streamlined way of creating a complete updated bulk data deck in the .pch file. This same exercise
could be performed by adding case control and other commands to the bulk data file and making the
DLINK, METHOD and APPCOD edits discussed above.
Listing 8-30  The Punch File Produced by DSOUG1 in Section 7.1
Listing 8-31  Three Bar Truss Updated with File from Listing 8-30
ID MSC  DSOUG14 $
TIME  10      $
SOL 200       $  OPTIMIZATION
CEND
TITLE = SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG14
SUBTITLE = CONTINUATION - 3 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
ECHO        = SORT$
$          *************************************************************
$          *                                                           *
$          *      CONTINUOUS  DESIGN  CYCLE  NUMBER  =         6       *
$          *                                                           *
$          *************************************************************
$
$
$   UPDATED DESIGN MODEL DATA ENTRIES
$
DESVAR *               1A1                8.36519659E-01  1.00000001E-01+D    1V
*D    1V  1.00000000E+02  1.00000000E+00
DESVAR *               2A2                3.29410642E-01  1.00000001E-01+D    2V
&lt;em&gt;D    2V  1.00000000E+02  1.00000000E+00
DESVAR *               3A3                8.36519659E-01  1.00000001E-01+D    3V
&lt;em&gt;D    3V  1.00000000E+02  1.00000000E+00
$
$   UPDATED ANALYSIS MODEL DATA ENTRIES
$
PROD&lt;/em&gt;                 11               1  8.36519659E-01  0.00000000E+00&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  0.00000000E+00    
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PROD*                 12               1  3.29410642E-01  0.00000000E+00*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  0.00000000E+00    
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PROD*                 13               1  8.36519659E-01  0.00000000E+00*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    0.00000000E+00  0.00000000E+00 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;575 Chapter 8: Example Problems
Continuing the Design Process in a Subsequent Job
Main Index
SPC         = 100
DISP        = ALL
STRESS      = ALL
DESOBJ(MIN) = 20 $  (DESIGN OBJECTIVE = DRESP ID)
DESSUB      = 21 $  DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS    = STATICS
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD  = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD  = 310
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$ GRID DATA
$       2       3       4       5       6       7       8       9       10
GRID    1               -10.0     0.0   0.0
GRID    2                 0.0     0.0   0.0
GRID    3                10.0     0.0   0.0
GRID    4                 0.0   -10.0   0.0
$ SUPPORT DATA
SPC1    100     123456  1 THRU 3
$ ELEMENT DATA
CROD    1       11      1       4
CROD    2       12      2       4
CROD    3       13      3       4
$ PROPERTY DATA
PROD    11      1       1.0
PROD    12      1       2.0
PROD    13      1       1.0
MAT1    1       1.0E+7          0.33    0.1
$ EXTERNAL LOADS DATA
FORCE   300     4               20000.   0.8    -0.6
FORCE   310     4               20000.  -0.8    -0.6
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;DESIGN VARIABLE DEFINITION
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV(OPTIONAL)
$
$   UPDATED DESIGN MODEL DATA ENTRIES
$
DESVAR *               1A1                8.36519659E-01  1.00000001E-01+D    1V
*D    1V  1.00000000E+02  1.00000000E+00
DESVAR *               2A2                3.29410642E-01  1.00000001E-01+D    2V
*D    2V  1.00000000E+02  1.00000000E+00
DESVAR *               3A3                8.36519659E-01  1.00000001E-01+D    3V
*D    3V  1.00000000E+02  1.00000000E+00
$
$&amp;hellip;DEFINITION OF DESIGN VARIABLE TO ANALYSIS MODEL PARAMETER RELATIONS
$DVPREL1 ID     TYPE    PID     NAME    PMIN    PMAX    C0              +
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 10      PROD    11      A
1       1.0
DVPREL1 20 PROD    12      A&lt;br&gt;
2       1.0
DVPREL1 30      PROD    13      A&lt;br&gt;
3       1.0
$
$&amp;hellip;STRUCTURAL RESPONSE IDENTIFICATION
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CYCLE              APPROXIMATE                 EXACT                    OF                       OF&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INITIAL                                      2.695446E+00                                      1.998340E-03&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1             2.698603E+00             2.698606E+00            -1.148534E-06             9.824219E-04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2             2.698332E+00             2.698332E+00            -1.767155E-07             7.113281E-04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1    SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG14        DECEMBER  18, 2001  MSC.NASTRAN  4/ 9/01   PAGE    39&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CONTINUATION - 3 CROSS SECTIONAL AREAS AS DESIGN VARIABLES&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DESIGN VARIABLE HISTORY&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Continuing the Design Process in a Subsequent Job576
Main Index
DRESP1  20      W       WEIGHT
DRESP1  21      U4      DISP                    12              4
DRESP1  23      S1      STRESS  PROD            2               11
12 13
$&amp;hellip;CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 21      21      -0.20   0.20
DCONSTR 21      23      -15000. 20000.
$
$&amp;hellip;OPTIMIZATION CONTROL:
$
DOPTPRM DESMAX  10      METHOD  3       APRCOD  1$
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
ENDDATA
The design cycle history for the new file is shown in Listing 8-32. It is seen that there is a small change in the
design in this case in terms of the objective function and design variables. It is reassuring to see that the first
and third design variables remain identical even though there is no longer an explicit linking between the two
variables.
Listing 8-32  Design Cycle History for the Continued Design Task
Even though this example did not show a benefit from a subsequent submittal, it does illustrate several
reasons why this type of resubmittal could be beneficial. These reasons and others are given in the following
list:
1.Investigate the effect of optimization parameters.
2.Enable the ability to pause and examine the results, possibly adjusting the optimization parameters.
This is particularly useful in large problems where it would be prudent to limit the number of design
cycles until confidence is gained that the task is proceeding satisfactorily.&lt;br&gt;
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           3
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     2&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number-of-optimizations-wrt-approximate-models-----2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number-of-optimizations-wrt-approximate-models-----2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  A1         |   8.3652E-01 :   8.6093E-01 :   8.4220E-01 :
     2 |          2   |  A2         |   3.2941E-01 :   2.6353E-01 :   3.1623E-01 :
     3 |          3   |  A3         |   8.3652E-01 :   8.6093E-01 :   8.4220E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        2.&lt;/p&gt;
&lt;p&gt;577 Chapter 8: Example Problems
Continuing the Design Process in a Subsequent Job
Main Index
3.Investigate the effects of linking options.
4.Focus in on an intermediate design that is of interest. (This requires setting DESPCH=1 so that
design results are captured after each design cycle).
5.Apply more analysis types and/or subcases to the final design from the initial design task.
6.Use the previously computed optimal design with modified design requirements.
An alternative use of the .pch file is to take the final property values from this file and create a data file that
can be used for other types of analyses. For example, nonlinear analyses that cannot be performed in SOL
200 could now be run in order to check this behavior.
Continuing a Shape Optimization Design Task
The procedures are somewhat different for a shape optimization task since, in this case, the DESVAR values
do not cause an override of the grid locations. Recall from Equation (6-5) on page 298 that the design change
is the product of the shape basis vector and the change in the design variable values. If the technique of using
the final DESVAR values in a resubmittal were applied, there would be no change in the shape relative to the
initial design since the new design task knows nothing about the original DESVAR values. For shape
optimization then, it is necessary to input the final grid locations for the new job submittal. Again, the .pch
file can be used for this purpose since the new GRID bulk data entries are provided in the this file. The
DESPCH parameter specifies the frequency of this output with the default punching the grid bulk data
entries for the final design. (There is a special case when the optimization creates a mesh that provides
distorted elements, making it impossible to proceed. In this case, the punch file contains both the last good
mesh and the final distorted mesh.)
Restarting from a Previous Analysis
The second class of restarts is based on MSC Nastran&amp;rsquo;s automatic restart capability. In design optimization,
this works in conjunction with the predefined Solution 200 exit points, OPTEXIT 1 through 6.  Recall that
setting this parameter in Bulk Data will terminate the program at one of these six exit points.
Automatic restart for design optimization is somewhat limited since only the analysis restart logic is in place.&lt;br&gt;
That is, only data associated with the analysis results are used on restart, and all design optimization-related
processes are repeated.  For example, restarts from an OPTEXIT point of 4 or greater will result in a repeat of
the constraint evaluation and sensitivity analysis phases.  This recalculation occurs regardless of whether the
design model has changed or not. You are cautioned that it makes no sense to perform this type of restart
when changing the design model because the analysis results from the previous run are no longer valid.
To illustrate this procedure, suppose we wanted to perform a baseline analysis for the structure of TPL file
DSOUG1 (the first example in this chapter), compute and display the design responses and then pause to
examine these results before restarting.  The results of the finite element analysis are saved to the database by
including SCR=NO in the job submittal command.
The only difference between the original three-bar truss and the input of Listing 8-33 is the Bulk Data
parameter OPTEXIT.  In this case, OPTEXIT is set to 3 which instructs the code to exit after design
constraint evaluation and screening.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Continuing the Design Process in a Subsequent Job578
Main Index
Listing 8-33  Three Bar Truss with OPTEXIT=3 ( DSOUG1C)
$
ID MSC  DSOUG1 $
TIME  10      $
SOL 200       $  OPTIMIZATION
CEND
TITLE = SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG1
SUBTITLE = BASELINE - 2 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
ECHO        = SORT
SPC         = 100
DISP        = ALL
STRESS      = ALL
DESOBJ(MIN) = 20 $  (DESIGN OBJECTIVE = DRESP ID)
DESSUB      = 21 $  DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS    = STATICS
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD  = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD  = 310
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ ANALYSIS MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$ GRID DATA
$       2       3       4       5       6       7       8       9       10
GRID    1               -10.0     0.0   0.0
GRID    2                 0.0     0.0   0.0
GRID    3                10.0     0.0   0.0
GRID    4                 0.0   -10.0   0.0
$ SUPPORT DATA
SPC1    100     123456  1 THRU 3
$ ELEMENT DATA
CROD    1       11      1       4
CROD    2       12      2       4
CROD    3       13      3       4
$ PROPERTY DATA
PROD    11      1       1.0
PROD    12      1       2.0
PROD    13      1       1.0
MAT1    1       1.0E+7          0.33    0.1
$ EXTERNAL LOADS DATA
FORCE   300     4               20000.   0.8    -0.6
FORCE   310     4               20000.  -0.8    -0.6
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$ DESIGN MODEL
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
$
$&amp;hellip;DESIGN VARIABLE DEFINITION
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV(OPTIONAL)
DESVAR  1       A1      1.0     0.1     100.0
DESVAR  2       A2      2.0     0.1     100.0
DESVAR  3       A3      1.0     0.1     100.0
$
$&amp;hellip;IMPOSE X3=X1 (LEADS TO A3=A1)
$DLINK  ID      DDVID   CO      CMULT   IDV1    C1      IDV2    C2      +
$+      IDV3    C3      &amp;hellip;
DLINK   1       3       0.0     1.0     1       1.00
$
$&amp;hellip;DEFINITION OF DESIGN VARIABLE TO ANALYSIS MODEL PARAMETER RELATIONS
$DVPREL1 ID     TYPE    PID     NAME    PMIN    PMAX    C0              +
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;&lt;/p&gt;
&lt;p&gt;579 Chapter 8: Example Problems
Continuing the Design Process in a Subsequent Job
Main Index
DVPREL1 10      PROD    11      A
1       1.0
DVPREL1 20 PROD    12      A&lt;br&gt;
2       1.0
DVPREL1 30      PROD    13      A&lt;br&gt;
3       1.0
$
$&amp;hellip;STRUCTURAL RESPONSE IDENTIFICATION
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1    +
$+      ATT2    &amp;hellip;
DRESP1  20      W       WEIGHT
DRESP1  21      U4      DISP                    12              4
DRESP1  23      S1      STRESS  PROD            2               11
12 13
$&amp;hellip;CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 21      21      -0.20   0.20
DCONSTR 21      23      -15000. 20000.
$
$&amp;hellip;OPTIMIZATION CONTROL:
$
DOPTPRM DESMAX  10      DELP    0.5     P1      1       P2      15
PARAM OPTEXIT 3
$
$&amp;hellip;&amp;hellip;.2&amp;hellip;&amp;hellip;.3&amp;hellip;&amp;hellip;.4&amp;hellip;&amp;hellip;.5&amp;hellip;&amp;hellip;.6&amp;hellip;&amp;hellip;.7&amp;hellip;&amp;hellip;.8&amp;hellip;&amp;hellip;.9&amp;hellip;&amp;hellip;.0
ENDDATA
After the finite element and design results are examined and verified, the decision is made to continue with
optimization in the restart run.  This file is shown in Listing 8-34.
Listing 8-34  Restart File for Three Bar Truss ( DSOUG1R)
RESTART, VERSION=1, KEEP
ID MSC  DSOUG1 $
TIME  10      $
DIAG 8,15
SOL 200       $  OPTIMIZATION
CEND
TITLE = SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION  -       DSOUG1
SUBTITLE = BASELINE - 2 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
ECHO        = SORT
SPC         = 100
DISP        = ALL
STRESS      = ALL
DESOBJ(MIN) = 20 $  (DESIGN OBJECTIVE = DRESP ID)
DESSUB      = 21 $  DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS    = STATICS
SUBCASE 1
LABEL = LOAD CONDITION 1
LOAD  = 300
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD  = 310
BEGIN BULK
/ 28
ENDDATA
The RESTART command is required, and indicates that the first version on the database is to be used
(VERSION=1) and all versions are to be retained (KEEP).  If we always intend to use the last version on the
database for restarts and delete the rest, we can instead use,
RESTART, VERSION=LAST, NOKEEP&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate with Redundant Materials 580
Main Index
By specifying VERSION=1, KEEP , we always have the first version to fall back on.
The original database can be selected in one of two ways. At job submittal, the database can be selected with
a command such as:
nastran dsoug1r scr=n dbs=dsoug1c
alternatively, an assign statement can be included in the data file:
ASSIGN MASTER=dsoug1c.MASTER
In Listing 8-34, the ` /,28 &amp;rsquo; deletes the OPTEXIT parameter assignment from the Bulk Data, which is entry
number 28 in the sorted bulk data of the original run.  It is usually a good idea to request a listing of the
sorted Bulk Data, especially if subsequent restarts are anticipated. Sorted bulk data is the default, but is
explicit with the Case Control command, ECHO=SORT or ECHO=BOTH.
The optimization results from this restart are identical to those given in Listing 8-2 on page 480 and are not
repeated here . The contents of the .F04 file include statements such as the following, which indicate the
initial analysis was skipped.
Cantilevered Plate with Redundant Materials
This section uses a contrived variation of the DSOUG3 (Cantilevered Plate) example to demonstrate the use
of the DRESP1 that selects weight as a function of material ID.&lt;br&gt;
The finite element representation is essentially the same as that of the DSOUG3 example, but in this
DSOUG15 example, two sets of elements are positioned connecting the same grids. One set of elements is
aluminum while the second is steel and the design task is to use DRESP1 RTYPE=WMPID responses in a
DRESP2 to construct a cost function that incorporates the weight and the unit cost of each material.
Total Cost = Unit Cost of Aluminum * Weight of Aluminum + Unit Cost of Steel * Weight of Steel
Other differences from the DSOUG3 case are that only the static analyses are applied and the design variables
directly design the element thicknesses rather than via the reduced basis feature of DSOUG3.
Analysis Model Description
2 x 8 array of CQUAD4 elements 10:50:54     0:03      237.0         0.0         3.1        0.0    PHASE1A 70   (S)SEMG    BEGN &lt;br&gt;
&lt;em&gt;56&lt;/em&gt;                                                                               SEMG     NOT EXECUTED.&lt;br&gt;
10:50:54     0:03      239.0         0.0         3.1        0.0    PHASE1A 134  (S)SELG    BEGN &lt;br&gt;
&lt;em&gt;56&lt;/em&gt;                                                                               SELG     NOT EXECUTED.&lt;br&gt;
Property/Material Aluminum Steel
E 1.0E7 3.0E7
Poisson’s Ratio .33 .33&lt;/p&gt;
&lt;p&gt;581 Chapter 8: Example Problems
Cantilevered Plate with Redundant Materials
Main Index
Design Model Description
Listing 8-35 shows the input for DSOUG15. The file is similar to that of Listing 8-5, so this discussion will
focus on the unique features of this deck. As mentioned, two sets of elements are superimposed, one with an
aluminum material and one with steel. Sixteen design variables control the thickness of the 32 elements
(elements of the same material and span station have the same design). Constraints are placed on the
displacements and stresses under the two loading conditions. The objective is a DRESP2 that is a
combination of two DRESP1’s that give the weight of the separate materials and DTABLE entries that
provide a relative cost of the material. In the example of the listing, the cost of the aluminum (CAL) is set to
6.0 while the cost of steel (CST) is set at 1.0.&lt;br&gt;
Listing 8-35  Input File for DSOUG15
ID MSC  DSOUG15 $
TIME  10
SOL 200       $  OPTIMIZATION
CEND
TITLE    = CANTILEVERED PLATE  -  DSOUG14
SUBTITLE = COST AS A WEIGHTED SUM OF MATERIAL WEIGHTS                          &lt;br&gt;
SPC      = 100
DISP     = ALL
STRESS   = ALL
DESOBJ(MIN) = 350   $ OBJECTIVE FUNCTION DEFINITION
dsaprt(start=1,by=1)
SUBCASE 1
ANALYSIS = STATICS
LABEL    = LOAD CONDITION 1
LOAD     = 300
DESSUB   = 10Weight Density 0.1 lb/in30.3 lb/in3
T wo static load conditions:
Tip loading:T wo 500 lb loads in -z
direction
Pressure loading: Uniform at 75 lb/in2
Objective: Structural weight minimization
Design variables: Eight design variables control the
thicknesses of the spanwise
aluminum elements and eight
other design variables control the
thicknesses of the spanwise steel
elements.
Constraints:
ANALYSIS =STATICS -2.0 Tip Displacement  2.0
von Mises Stress  29ksi&lt;/p&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate with Redundant Materials 582
Main Index
SUBCASE 2
ANALYSIS = STATICS
LABEL    = LOAD CONDITION 2
LOAD     = 310
DESSUB   = 10
BEGIN BULK
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;----------------------------------------------------------------------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#----------------------------------------------------------------------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;$ ANALYSIS MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-----------------------------------------------------------------------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-----------------------------------------------------------------------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;$
MAT1    51      1.0E+7          0.33    0.1                             +M2
MAT1    52      3.0E+7          0.33    0.3                             +M2
+M2     50000.  50000.  29000.
SPC1    100     123456  1       11      21
GRID    1                0.     -5.     0.
GRID    2                5.     -5.     0.
GRID    3               10.     -5.     0.
GRID    4               15.     -5.     0.
GRID    5               20.     -5.     0.
GRID    6               25.     -5.     0.
GRID    7               30.     -5.     0.
GRID    8               35.     -5.     0.
GRID    9               40.     -5.     0.
GRID    11               0.      0.     0.
GRID    12               5.      0.     0.
GRID    13              10.      0.     0.
GRID    14              15.      0.     0.
GRID    15              20.      0.     0.
GRID    16              25.      0.     0.
GRID    17              30.      0.     0.
GRID    18              35.      0.     0.
GRID    19              40.      0.     0.
GRID    21               0.      5.     0.
GRID    22               5.      5.     0.
GRID    23              10.      5.     0.
GRID    24              15.      5.     0.
GRID    25              20.      5.     0.
GRID    26              25.      5.     0.
GRID    27              30.      5.     0.
GRID    28              35.      5.     0.
GRID    29              40.      5.     0.
$
CQUAD4   1      1        1       2      12      11
CQUAD4   2      2        2       3      13      12
CQUAD4   3      3        3       4      14      13
CQUAD4   4      4        4       5      15      14
CQUAD4   5      5        5       6      16      15
CQUAD4   6      6        6       7      17      16
CQUAD4   7      7        7       8      18      17
CQUAD4   8      8        8       9      19      18
CQUAD4  11      1       11      12      22      21
CQUAD4  12      2       12      13      23      22
CQUAD4  13      3       13      14      24      23
CQUAD4  14      4       14      15      25      24
CQUAD4  15      5       15      16      26      25
CQUAD4  16      6       16      17      27      26
CQUAD4  17      7       17      18      28      27&lt;/p&gt;
&lt;h2&gt;583 Chapter 8: Example Problems
Cantilevered Plate with Redundant Materials
Main Index
CQUAD4  18      8       18      19      29      28
CQUAD4  101     11       1       2      12      11
CQUAD4  102     21       2       3      13      12
CQUAD4  103     31       3       4      14      13
CQUAD4  104     41       4       5      15      14
CQUAD4  105     51       5       6      16      15
CQUAD4  106     61       6       7      17      16
CQUAD4  107     71       7       8      18      17
CQUAD4  108     81       8       9      19      18
CQUAD4  111      11      11      12      22      21
CQUAD4  112      21      12      13      23      22
CQUAD4  113      31      13      14      24      23
CQUAD4  114      41      14      15      25      24
CQUAD4  115      51      15      16      26      25
CQUAD4  116      61      16      17      27      26
CQUAD4  117      71      17      18      28      27
CQUAD4  118      81      18      19      29      28
PSHELL   1      51      3.0      51&lt;br&gt;
PSHELL   2      51      2.640625 51
PSHELL   3      51      2.3125   51
PSHELL   4      51      2.015625 51
PSHELL   5      51      1.75     51
PSHELL   6      51      1.515625 51
PSHELL   7      51      1.3125   51
PSHELL   8      51      1.140625 51
PSHELL   11     52      3.0      51&lt;br&gt;
PSHELL   21     52      2.640625 51
PSHELL   31     52      2.3125   51
PSHELL   41     52      2.015625 51
PSHELL   51     52      1.75     51
PSHELL   61     52      1.515625 51
PSHELL   71     52      1.3125   51
PSHELL   81     52      1.140625 51
$       2       3j      4       5       6       7       8       9       10
FORCE   300     9               500.    0.0     0.0     -1.0
FORCE   300     29              500.    0.0     0.0     -1.0
PLOAD2  310     7.5      1      THRU     8
PLOAD2  310     7.5     11      THRU    18
$
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-----------------------------------------------------------------------2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-----------------------------------------------------------------------2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;$ DESIGN MODEL:
$&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-----------------------------------------------------------------------3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-----------------------------------------------------------------------3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;$
$&amp;hellip;DEFINE THE DESIGN VARIABLES
$DESVAR ID      LABEL   XINIT   XLB     XUB     DELXV
DESVAR10t1a  1.0.001
DESVAR20t2a  1.0.001
DESVAR30t3a  1.0.001
DESVAR40t4a  1.0.001
DESVAR50t5a  1.0.001
DESVAR60t6a  1.0.001
DESVAR70t7a  1.0.001
DESVAR80t8a  1.0.001
DESVAR110t1s  1.0.001
DESVAR120t2s  1.0.001
DESVAR130t3s  1.0.001
DESVAR140t4s  1.0.001
DESVAR150t5s  1.0.001&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate with Redundant Materials 584
Main Index
DESVAR160t6s  1.0.001
DESVAR170t7s  1.0.001
DESVAR180t8s  1.0 .001
$
$&amp;hellip;EXPRESS ANALYSIS MODEL PROPERTIES LINEARLY IN TERMS OF
$   DESIGN VARIABLES
$DVPREL1 ID     TYPE    PID     FID     PMIN    PMAX    C0           &lt;br&gt;
$+      DVID1   COEF1   DVID2   COEF2   &amp;hellip;
DVPREL1 1       PSHELL  1       T                                  &lt;br&gt;
101.0
DVPREL1 2       PSHELL  2       T                                  &lt;br&gt;
201.0
DVPREL1 3       PSHELL  3       T                                  &lt;br&gt;
301.0
DVPREL1 4       PSHELL  4       T                                  &lt;br&gt;
401.0
DVPREL1 5       PSHELL  5       T                                  &lt;br&gt;
501.0
DVPREL1 6       PSHELL  6       T                                  &lt;br&gt;
601.0
DVPREL1 7       PSHELL  7       T                                  &lt;br&gt;
701.0
DVPREL1 8       PSHELL  8       T                                  &lt;br&gt;
801.0
DVPREL1 11      PSHELL  11      T                                  &lt;br&gt;
1101.0
DVPREL1 12      PSHELL  21      T                                  &lt;br&gt;
1201.0
DVPREL1 13      PSHELL  31      T                                  &lt;br&gt;
1301.0
DVPREL1 14      PSHELL  41      T                                  &lt;br&gt;
1401.0
DVPREL1 15      PSHELL  51      T                                  &lt;br&gt;
1501.0
DVPREL1 16      PSHELL  61      T                                  &lt;br&gt;
1601.0
DVPREL1 17      PSHELL  71      T                                  &lt;br&gt;
1701.0
DVPREL1 18      PSHELL  81      T                                  &lt;br&gt;
1801.0
$
$&amp;hellip;IDENTIFY THE DESIGN RESPONSES
$DRESP1 ID      LABEL   RTYPE   PTYPE   REGION  ATTA    ATTB    ATT1 &lt;br&gt;
$+      ATT2    &amp;hellip;
$      STATIC VON MISES STRESS IN  SHELL ELEMENTS
DRESP1   2      S12     STRESS  ELEM             9              1
2345678
DRESP1   20     S12     STRESS  ELEM             9              101
102103104105106107108
$    STATIC DISPLACEMENT AT THE TIP
DRESP1  33      D1      DISP                     3              19
$
$&amp;hellip;DEFINE THE WEIGHT RESPONSE TO BE USED AS THE OBJECTIVE FUNCTION:
DRESP1  35      W       WEIGHT
DRESP1  150     WAL     wmpid 51
DRESP1  250     Wst     wmpid 52
dresp2350cost350
dtablecalcst
dresp1150250
deqatn350cost(cal,cst,wal,wst) = cal * wal + cst*wst&lt;/p&gt;
&lt;p&gt;585 Chapter 8: Example Problems
Cantilevered Plate with Redundant Materials
Main Index
dtablecal6.0cst1.0
$
$&amp;hellip;DEFINE THE STATIC DESIGN CONSTRAINTS
$DCONSTR DCID   RID     LALLOW  UALLOW
DCONSTR 10       2      -29000. 29000.
DCONSTR 10      20      -1.0e5  1.0e5&lt;br&gt;
DCONSTR 10      33      -2.     2.
$
$&amp;hellip;OVERRIDE OPTIMIZATION PARAMETER DEFAULTS (OPTIONAL)
DOPTPRM DESMAX  20       P1 1P215  iprint7
ct-.10
$
PARAMNASPRT1
PARAMPOST-1
ENDDATA
Results in terms of the design history and are shown in Listing 8-36. It is seen that for this example the design
takes the aluminum thicknesses to their lower gage and the steel material has a tapered design to satisfy the
imposed constraints. This design arises from the fact that the aluminum material is high cost and therefore
avoided. A different answer would be obtained if the two costs were the same.&lt;br&gt;
Listing 8-36  Design History DSOUG1 5
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          17
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS    16
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      3.600000E+02                                     -3.039458E-01
1             2.457990E+02             2.457990E+02            -2.375038E-13             1.721427E-01
2             2.168748E+02             2.168748E+02            -5.307575E-14            -1.686704E-01
3             1.709462E+02             1.709462E+02            -1.358354E-13            -5.335285E-02
4             1.390033E+02             1.390033E+02            -1.472169E-14             5.879474E-02
5             1.298334E+02             1.298334E+02             3.020946E-14             7.754972E-02
6             1.276744E+02             1.276744E+02             7.791383E-15             3.754160E-02
7             1.251600E+02             1.251600E+02            -4.541660E-15             2.379823E-02
8             1.222140E+02             1.222140E+02             2.418591E-14             1.748015E-02
9             1.193843E+02             1.193843E+02            -2.975864E-15             1.076004E-02
10             1.164396E+02             1.164396E+02             2.221216E-14             8.259779E-03
11             1.135241E+02             1.135241E+02            -3.379837E-15             5.158290E-03
12             1.127035E+02             1.127035E+02             3.833155E-14             9.596043E-03
13             1.097484E+02             1.097484E+02             4.609695E-14             2.022052E-02
14             1.098179E+02             1.098179E+02             4.658536E-15             9.988325E-03&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;16  (FINAL)    1.095671E+02             1.095671E+02             3.891000E-16             3.999234E-03&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;DESIGN VARIABLE HISTORY&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Cantilevered Plate with Redundant Materials 586
Main Index
15             1.095543E+02             1.095543E+02            -2.205159E-15             4.928410E-03&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;15-------------1095543e02-------------1095543e02-------------2205159e-15-------------4928410e-03&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#15-------------1095543e02-------------1095543e02-------------2205159e-15-------------4928410e-03&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5--------2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |         10   |  T1A        |   1.0000E+00 :   9.1998E-01 :   4.6429E-01 :   2.3214E-01 :   1.1607E-01 :   8.7090E-02 :
     2 |         20   |  T2A        |   1.0000E+00 :   8.2196E-01 :   4.6643E-01 :   2.3321E-01 :   1.1661E-01 :   8.7477E-02 :
     3 |         30   |  T3A        |   1.0000E+00 :   7.0308E-01 :   4.5503E-01 :   2.2751E-01 :   1.1376E-01 :   8.5329E-02 :
     4 |         40   |  T4A        |   1.0000E+00 :   5.5394E-01 :   4.3478E-01 :   2.1739E-01 :   1.0870E-01 :   8.1530E-02 :
     5 |         50   |  T5A        |   1.0000E+00 :   5.0000E-01 :   5.0307E-01 :   2.5154E-01 :   1.2577E-01 :   9.4351E-02 :
     6 |         60   |  T6A        |   1.0000E+00 :   5.0000E-01 :   5.4614E-01 :   2.7984E-01 :   1.3992E-01 :   1.0499E-01 :
     7 |         70   |  T7A        |   1.0000E+00 :   5.0054E-01 :   3.3826E-01 :   2.4921E-01 :   1.2461E-01 :   9.3533E-02 :
     8 |         80   |  T8A        |   1.0000E+00 :   5.0006E-01 :   2.5003E-01 :   2.1145E-01 :   1.4400E-01 :   1.0800E-01 :
     9 |        110   |  T1S        |   1.0000E+00 :   1.2918E+00 :   1.3018E+00 :   1.7185E+00 :   1.0951E+00 :   1.3689E+00 :
    10 |        120   |  T2S        |   1.0000E+00 :   1.1554E+00 :   1.2990E+00 :   1.4111E+00 :   1.1500E+00 :   1.3379E+00 :
    11 |        130   |  T3S        |   1.0000E+00 :   9.9492E-01 :   1.2930E+00 :   1.1148E+00 :   1.2029E+00 :   1.0874E+00 :
    12 |        140   |  T4S        |   1.0000E+00 :   8.1030E-01 :   1.2154E+00 :   9.3425E-01 :   1.1519E+00 :   9.2968E-01 :
    13 |        150   |  T5S        |   1.0000E+00 :   6.3500E-01 :   9.5250E-01 :   8.8606E-01 :   9.6388E-01 :   8.4133E-01 :
    14 |        160   |  T6S        |   1.0000E+00 :   5.0000E-01 :   7.5000E-01 :   6.8180E-01 :   8.3946E-01 :   7.0139E-01 :
    15 |        170   |  T7S        |   1.0000E+00 :   5.0000E-01 :   4.8055E-01 :   5.9222E-01 :   5.9688E-01 :   5.7511E-01 :
    16 |        180   |  T8S        |   1.0000E+00 :   5.0000E-01 :   2.5000E-01 :   2.5307E-01 :   2.8795E-01 :   3.2935E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |         10   |  T1A        |   7.4590E-02 :   6.2092E-02 :   4.9592E-02 :   3.7092E-02 :   2.4592E-02 :   1.2092E-02 :
     2 |         20   |  T2A        |   7.4977E-02 :   6.2479E-02 :   4.9979E-02 :   3.7479E-02 :   2.4979E-02 :   1.2479E-02 :
     3 |         30   |  T3A        |   7.2829E-02 :   6.0330E-02 :   4.7830E-02 :   3.5330E-02 :   2.2830E-02 :   1.0330E-02 :
     4 |         40   |  T4A        |   6.9030E-02 :   5.6531E-02 :   4.4031E-02 :   3.1531E-02 :   1.9031E-02 :   6.5311E-03 :
     5 |         50   |  T5A        |   8.1851E-02 :   6.9354E-02 :   5.6854E-02 :   4.4354E-02 :   3.1854E-02 :   1.9354E-02 :
     6 |         60   |  T6A        |   9.1863E-02 :   7.9370E-02 :   6.6870E-02 :   5.4370E-02 :   4.1870E-02 :   2.9370E-02 :
     7 |         70   |  T7A        |   8.1093E-02 :   6.8601E-02 :   5.6102E-02 :   4.3602E-02 :   3.1102E-02 :   1.8602E-02 :
     8 |         80   |  T8A        |   9.4500E-02 :   8.2061E-02 :   6.9562E-02 :   5.7062E-02 :   4.4562E-02 :   3.2062E-02 :
     9 |        110   |  T1S        |   1.1978E+00 :   1.3475E+00 :   1.2690E+00 :   1.3255E+00 :   1.2704E+00 :   1.3163E+00 :
    10 |        120   |  T2S        |   1.1706E+00 :   1.3058E+00 :   1.1740E+00 :   1.2737E+00 :   1.1970E+00 :   1.2549E+00 :
    11 |        130   |  T3S        |   1.1554E+00 :   1.1047E+00 :   1.1646E+00 :   1.1178E+00 :   1.1441E+00 :   1.1313E+00 :
    12 |        140   |  T4S        |   1.0459E+00 :   9.8939E-01 :   1.0575E+00 :   9.9376E-01 :   1.0497E+00 :   1.0062E+00 :
    13 |        150   |  T5S        |   9.4637E-01 :   8.7690E-01 :   9.1873E-01 :   8.8337E-01 :   9.1361E-01 :   8.9460E-01 :
    14 |        160   |  T6S        |   7.8906E-01 :   7.3125E-01 :   7.7350E-01 :   7.5094E-01 :   7.8559E-01 :   7.4815E-01 :
    15 |        170   |  T7S        |   6.0340E-01 :   5.5699E-01 :   6.0232E-01 :   5.8762E-01 :   5.9948E-01 :   5.9023E-01 :
    16 |        180   |  T8S        |   3.2166E-01 :   3.4985E-01 :   3.0634E-01 :   3.4463E-01 :   3.2121E-01 :   3.4495E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |      12      :      13      :      14      :      15      :      16      :      17      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label----------12------------13------------14------------15------------16------------17------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |         10   |  T1A        |   1.0494E-02 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :
     2 |         20   |  T2A        |   1.0777E-02 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :
     3 |         30   |  T3A        |   9.1640E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :
     4 |         40   |  T4A        |   6.0649E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :   1.0000E-03 :
     5 |         50   |  T5A        |   1.5261E-02 :   2.7612E-03 :   2.6950E-03 :   1.0000E-03 :   1.0000E-03 :
     6 |         60   |  T6A        |   1.9953E-02 :   7.4527E-03 :   6.9708E-03 :   1.0000E-03 :   1.0000E-03 :
     7 |         70   |  T7A        |   1.4822E-02 :   2.3220E-03 :   2.2753E-03 :   1.0000E-03 :   1.0000E-03 :
     8 |         80   |  T8A        |   2.0883E-02 :   8.3830E-03 :   7.7735E-03 :   1.5235E-03 :   1.5174E-03 :
     9 |        110   |  T1S        |   1.2149E+00 :   1.3668E+00 :   1.2813E+00 :   1.3150E+00 :   1.2973E+00 :
    10 |        120   |  T2S        |   1.1836E+00 :   1.2812E+00 :   1.2011E+00 :   1.2512E+00 :   1.2112E+00 :
    11 |        130   |  T3S        |   1.1386E+00 :   1.0957E+00 :   1.1411E+00 :   1.1302E+00 :   1.1459E+00 :
    12 |        140   |  T4S        |   1.0651E+00 :   9.9983E-01 :   1.0337E+00 :   1.0154E+00 :   1.0384E+00 :
    13 |        150   |  T5S        |   9.4563E-01 :   8.7433E-01 :   9.1951E-01 :   8.9107E-01 :   9.1541E-01 :
    14 |        160   |  T6S        |   8.0711E-01 :   7.2950E-01 :   7.7509E-01 :   7.5395E-01 :   7.6637E-01 :
    15 |        170   |  T7S        |   6.1540E-01 :   5.8435E-01 :   5.9446E-01 :   5.8419E-01 :   5.8853E-01 :
    16 |        180   |  T8S        |   3.2833E-01 :   3.3507E-01 :   3.2741E-01 :   3.4553E-01 :   3.2432E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =       16.&lt;/p&gt;
&lt;p&gt;587 Chapter 8: Example Problems
Dynamic Response Optimization with Objective Spanning Subcases
Main Index
Dynamic Response Optimization with Objective
Spanning Subcases
This section uses a variation of the Dynamic Response Optimization Example (dsoug7 and variations) to
demonstrate the use of the DRSPAN case control command to combine responses across subcases. The input
deck for this example is tpl\ugdesopt\dsoug7r.dat . The design model is that of Figure 8-21 and
Figure 8-22. The Listing 8-10 provides the majority of the input, but requires a number of adjustments. The
revised case control is shown in Listing 8-37.
Listing 8-37  Revised Case Control for Spanning Subcases
SOL 200
CEND
TITLE = Synthesis of Responses across Different Frequencies: DSOUG7
subtitle = use of a drspan invoke dresp2s across subcases
echo = sort
DESOBJ = 1
desglb = 10
SPC          = 100
METHOD       = 500
FREQ         = 740
DLOAD        = 700
set 100 = 1110
set 1 = 700
set 2 = 800
disp(sort2,phase)  = 100
ANALYSIS =  MFREQ
sdamping   = 2000
subcase 1
DLOAD        = 700
drspan = 1 &lt;br&gt;
subcase 2
DLOAD        = 800
drspan = 2
It is seen that a second subcase is added pointing to DLOAD=800. A DRSPAN request is applied in each
subcase to identify the responses that are to be formed in this subcase. In this case, subcase 1 invokes
drspan=1, where SET 1 has been defined as 700. Subcase 2 points to drspan=2 which, in turn, points to set
2 = 800.   The DESOBJ is placed above the subcase level and points to DRESP2=1, which is described below.
The revised loading is shown in Listing 8-38. DLOAD 700 is the same uniform loading of the earlier example
while DLOAD 800 is a point load applied to GRID 1110 with a magnitude of 50.0 lbf across the frequency
range.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization with Objective Spanning Subcases588
Main Index
Listing 8-38  Extra Load Cases
$&amp;hellip;FREQUENCY DEPENDENT LOADING DATA: (OSCILLATORY point LOAD)
RLOAD1  800     830                     800
force 8301110 50.0 0.00.01.0
The design responses are provided in Listing 8-39.&lt;br&gt;
Listing 8-39  Design Responses
DRESP1  201     VOLUME  VOLUME
$
FREQ1   740     20.     1.      180
DRESP1  700     g1110L  FRDISP                  3       rss     1110
DRESP1  800     g1110L  FRDISP                  3       rss     1110
dresp2 1 total rss
dresp2 700 800
$
DCONSTR 10      201     7.99    8.01
An upper bound constraint of 8.0 is applied to the VOLUME response to keep it below a narrow target value
(this differs from the earlier example which place narrow upper and lower bounds on the volume). DRESP1
700, which is invoked by the DRSPAN = 1 request from subcase 1, creates an rss response that is identical to
Equation (8-6) while DRESP1 800 is invoked by the DRSPAN = 2 request from subcase 2, which creates a
second rss response. DRESP2 1 is invoked by the DESOBJ case control command and creates an objective
that combines the two responses using the RSS function so that the objective is
(8-19)
The design task therefore becomes: design the plate thicknesses with an upper bound on the total volume of
the structure while minimizing the combined RSS at grid 1110 at frequencies ranging from 20.0 to 200.0
Hz for two subcases. Note that the DRESP1&amp;rsquo;s with the ATTB=RSS are referenced as a DRESP2 on
DRESP2=1 since the it is necessary to have a scalar response for the objective.&lt;br&gt;
Optimization results are depicted in Listing 8-40. While Figure 8-37 compares the optimized thickness from the
current example with the RSS result of the Figure 8-23.iResp7002Resp8002+ =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P31</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_031/</guid>
      <description>
        
        
        &lt;p&gt;589 Chapter 8: Example Problems
Dynamic Response Optimization with Objective Spanning Subcases
Main Index
Listing 8-40  Design History Results for DSOUG7R
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           9
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     8
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE&lt;br&gt;
CYCLE              APPROXIMATE                 EXACT                    OF                       OF
NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT&lt;br&gt;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INITIAL                                      3.828785E+01                                     -1.248439E-03
1             3.640768E+01             3.496290E+01             4.132316E-02            -1.248439E-03
2             3.348181E+01             3.212427E+01             4.225875E-02            -1.248439E-03
3             3.101701E+01             2.993223E+01             3.624127E-02            -1.248439E-03
4             2.927629E+01             2.837293E+01             3.183900E-02            -1.248439E-03
5             2.805260E+01             2.745650E+01             2.171069E-02            -1.248439E-03
6             2.726543E+01             2.686238E+01             1.500424E-02            -1.248439E-03
7             2.673146E+01             2.645455E+01             1.046726E-02            -1.248439E-03
8  (FINAL)    2.638036E+01             2.620658E+01             6.631173E-03            -1.248439E-03
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;
&lt;h2&gt;0                                                                                                            SUBCASE 1           &lt;br&gt;
DESIGN VARIABLE HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;design-variable-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#design-variable-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;INTERNAL |   EXTERNAL   |             |                                                                                       &lt;br&gt;
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :      2       :      3       :      4       :      5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-------initial----------1-------------2-------------3-------------4-------------5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   8.0000E-02 :   7.8609E-02 :   7.6209E-02 :   7.5871E-02 :   7.6575E-02 :   7.4674E-02 :
     2 |          2   |  T2         |   8.0000E-02 :   7.3904E-02 :   7.2640E-02 :   7.0382E-02 :   6.9180E-02 :   6.7708E-02 :
     3 |          3   |  T3         |   8.0000E-02 :   7.6313E-02 :   7.3116E-02 :   6.9750E-02 :   6.5784E-02 :   6.3053E-02 :
     4 |          4   |  T4         |   8.0000E-02 :   8.0014E-02 :   7.7875E-02 :   7.4624E-02 :   6.9481E-02 :   6.5190E-02 :
     5 |          5   |  T5         |   8.0000E-02 :   8.2154E-02 :   8.1565E-02 :   8.0082E-02 :   7.7313E-02 :   7.6556E-02 :
     6 |          6   |  T6         |   8.0000E-02 :   8.2214E-02 :   8.0417E-02 :   7.7125E-02 :   7.4363E-02 :   7.8378E-02 :
     7 |          7   |  T7         |   8.0000E-02 :   8.3529E-02 :   8.3785E-02 :   8.5262E-02 :   9.2367E-02 :   1.0128E-01 :
     8 |          8   |  T8         |   8.0000E-02 :   9.0704E-02 :   1.0811E-01 :   1.2435E-01 :   1.3024E-01 :   1.3061E-01 :
     9 |          9   |  T9         |   8.0000E-02 :   9.6000E-02 :   1.1520E-01 :   1.3824E-01 :   1.6560E-01 :   1.7866E-01 :
    10 |         10   |  T10        |   8.0000E-02 :   9.5332E-02 :   1.1440E-01 :   1.3727E-01 :   1.6473E-01 :   1.9138E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     1 |          1   |  T1         |   7.4705E-02 :   7.3812E-02 :   7.2801E-02 :
     2 |          2   |  T2         |   6.5865E-02 :   6.4966E-02 :   6.3454E-02 :
     3 |          3   |  T3         |   6.0122E-02 :   5.7607E-02 :   5.5664E-02 :
     4 |          4   |  T4         |   6.0907E-02 :   5.7335E-02 :   5.5626E-02 :
     5 |          5   |  T5         |   7.6006E-02 :   7.6180E-02 :   7.7081E-02 :
     6 |          6   |  T6         |   8.3981E-02 :   8.9134E-02 :   9.2233E-02 :
     7 |          7   |  T7         |   1.0633E-01 :   1.1021E-01 :   1.1309E-01 :
     8 |          8   |  T8         |   1.3419E-01 :   1.3799E-01 :   1.4174E-01 :
     9 |          9   |  T9         |   1.8319E-01 :   1.8471E-01 :   1.8765E-01 :
    10 |         10   |  T10        |   2.1054E-01 :   2.2794E-01 :   2.3873E-01 :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*** USER INFORMATION MESSAGE 6464 (DOM12E)
RUN TERMINATED DUE TO HARD CONVERGENCE TO AN OPTIMUM AT CYCLE NUMBER =        8.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Dynamic Response Optimization with Objective Spanning Subcases590
Main Index
Figure 8-37  Final Thickness Distributions
It is seen that the addition of the second subcase makes an appreciable difference in the final design.
Guidelines and Limitations
The new capability has not been extended to DRESP3&amp;rsquo;s.
The Quick Reference Guide and the Design Sensitivity and Optimization User&amp;rsquo;s Guide have been updated
to reflect this new feature .
Users are cautioned not to use ATTB=MAX at the subcase level on a FRxxx DRESP1 in this spanning
application since a redesign is likely to result the MAX value moving to a different frequency so that gradient
information will not be meaningful or accrate&lt;/p&gt;
&lt;p&gt;591 Chapter 8: Example Problems
The Equivalent Radiated Power (ERP) Design Optimization
Main Index
The Equivalent Radiated Power (ERP) Design
Optimization
In automotive applications, the noise inside the passenger compartment can be caused by many sources
including vibrating body panels. The Equivalent Radiated Power (ERP) calculation focuses on the vibration
of body panels, which radiate acoustic power to the passenger cabin. Understanding which panels are
responsible for the radiated power is important in understanding the structural behavior and acoustic
consequences.
The ERP sensitivity calculation can be used to understand which parameters are the primary contributors to
the radiated power. Engineers can use the ERP  sensitivities and optimization to improve their design.
As a brief overview, ERP squares the normal velocity and multiplies it by the element area . The sum of this
product over all the elements of a user defined panel, multiplied with a constant, yields the ERP over a panel.
A detailed explanation of the ERP calculation can be found in the MSC Nastran Dynamic Analysis User’s
Guide .
Guidelines and Limitations
ERP, ERP sensitivity, and optimization are calculated currently for linear 3 and 4 noded shell
elements only. If desired the user can generate a layer of linear shells on top of quadratic solids.
PSHELL and PCOMP are supported
ERP, ERP sensitivity, and optimization are supported in direct and modal frequency response only.
ERP sensitivity is not supported by the adjoint method. Thus, it will be very time consuming for
problems that have many design variables (for example, topology, topometry, and topography
optimization) since a direct method is used for ERP sensitivity computation.
Test cases available in the TPL in directory \tpl\erpopt  include:
erp_opt_usecase.dat, erpopt0.dat, erpopt1.dat, erpopt2.dat, erpopt3.dat,
erpopt4.dat, erpopt5.dat, erpopt6.dat, erpopt7.dat, and erpopt8.dat .
Test problem erpopt1.dat  is a simple fluid bound by two panels (based on ERP analysis TPL example
problem erp_base1.dat . The excitation is on one panel as shown in Figure 8-38.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Equivalent Radiated Power (ERP) Design Optimization592
Main Index
Figure 8-38  Example erpopt1.dat geometry.
The input for erpopt1.dat  is a standard modal frequency response with a pressure loading and includes
fluid-structure interaction. The case control and bulk data entries required for ERP and sensitivity calculation
are as follows:
Case Control
ERP(PRINT,PUNCH,FILTER=0.0)=ALL
DSAPRT(FORMATTED, END=SENS) = ALL
Example ERP Panel Definition Bulk Data
ERPPNL,ERPX0,103,ERPX3,203,erpeid3,303
set3,103,prop,100
set3,203,prop,200
set3,303,element,114,124,134,214,224,234,
,314,324,334
Example ERP  Design Response Definition Bulk Data
DRESP1,700,ERP1,ERP ,ERPPNL,,2,,103
DRESP1,710,ERP2,ERP ,ERPPNL,,2,,203
DRESP1,720,ERP2,ERP ,ERPPNL,,2,,303
DRESP1,730,ALLPANEL,ERP ,ERPPNL,,2,,
Example ERP Design Constraint Definition Bulk Data
DCONSTR,100,700,,10.0
DCONSTR,100,710,,10.0
DCONSTR,100,720,,10.0
DCONSTR,100,730,,30.0
Specify Design Variables, Relate Linearly to PSHELL Thickness
DESVAR, 1,      T1,     .01,    .0001,    1.0
DESVAR, 2,      T2,     .01,    .0001,    1.0
DVPREL1 101     PSHELL  100     4       .01                          &lt;br&gt;
+00&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;593 Chapter 8: Example Problems
The Equivalent Radiated Power (ERP) Design Optimization
Main Index
+00     1       1.0
DVPREL1 102     PSHELL  200     4       .01                          &lt;br&gt;
+01
+01     2       1.0
Optimization Control Parameter Definition Bulk Data
DOPTPRM, P1, 1, P2, 8, DESMAX, 20
The design task for ERPOPT1.dat is to minimize the structural weight with constraints on ERP and
frequency velocity responses. There are two PSHELL thickness design variables defined by DESVAR and
DVPREL1 entries. ERP design responses are printed in erpopt1.f06 shown in Listing 8-41.
Listing 8-41  TPL Example ERPOPT1 ERP Design Response Print&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;listing-8-41--tpl-example-erpopt1-erp-design-response-print&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#listing-8-41--tpl-example-erpopt1-erp-design-response-print&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;      INTERNAL    DRESP1    RESPONSE     ROW       COLUMN    LOWER                              UPPER
             ID                 ID          LABEL               ID                    ID           BOUND          VALUE       BOUND
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;           1                 200          WEIGHT              3                  3                N/A          1.9400E-03       N/A
                               I N I T I A L   A N A L Y S I S    S U B C A S E =    1000
                                     ----  EQUIVALENT RADIATED POWER RESPONSES ---
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                               LOWER                      UPPER
          ID               ID              LABEL              ID              NO.          FREQUENCY       BOUND   VALUE      BOUND
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;           2               700            ERP103         103                2   1.0000E+01           N/A          6.1034E+00  
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;    FREQUENCY VELOCITY RESPONSES    &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1.0000E+01&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;10000e01&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#10000e01&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE    GRID    COMPONENT                             LOWER                       UPPER
             ID                ID           LABEL               ID               NO.       FREQUENCY      BOUND    VALUE      BOUND
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;           3       612  G608           121         1     1.4000E+01       N/A          2.8299E+00    5.0000E+00
           4       613  G805           131         1     1.4000E+01       N/A          5.2953E+00    5.0000E+00 V
                                     ----  EQUIVALENT RADIATED POWER RESPONSES ---
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                            LOWER                      UPPER
         ID                ID             LABEL                ID             NO.         FREQUENCY       BOUND   VALUE     BOUND
 -----------    ------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;           5       700  ERP103         103         2     1.4000E+01       N/A          5.9479E+01    1.0000E+01 V
           6       710  ERP203         203         2     1.4000E+01       N/A          7.7890E+01    1.0000E+01 V
           7       720  ERP303         303         2     1.4000E+01       N/A          7.7890E+01    1.0000E+01 V
           8       730  ERP303           0            2     1.4000E+01       N/A          1.3737E+02    3.0000E+01 V
                               I N I T I A L   A N A L Y S I S    S U B C A S E =    2000
                                     ----  EQUIVALENT RADIATED POWER RESPONSES ---
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                        LOWER                            UPPER
           ID              ID         LABEL                   ID           NO.       FREQUENCY     BOUND         VALUE         BOUND
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;           9       700  ERP103         103         2     1.0000E+01       N/A          6.1034E+00    1.0000E+01
                                       -----    FREQUENCY VELOCITY RESPONSES    -----
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;    INTERNAL   DRESP1   RESPONSE    GRID    COMPONENT                    LOWER                       UPPER
       ID        ID      LABEL       ID        NO.       FREQUENCY       BOUND         VALUE         BOUND
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;          10       612  G608           121         1     1.4000E+01       N/A          2.8299E+00    5.0000E+00
          11       613  G805           131         1     1.4000E+01       N/A          5.2953E+00    5.0000E+00 V
                                     ----  EQUIVALENT RADIATED POWER RESPONSES ---
 ---------------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID              ID         LABEL                   ID           NO.       FREQUENCY     BOUND         VALUE       BOUND&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
The Equivalent Radiated Power (ERP) Design Optimization594
Main Index
INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                        LOWER                            UPPER&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internal---dresp1---response-------set3----item-code------------------------lower----------------------------upper&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internal---dresp1---response-------set3----item-code------------------------lower----------------------------upper&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;          12       700  ERP103         103         2     1.4000E+01       N/A          5.9479E+01    1.0000E+01 V
          13       710  ERP203         203         2     1.4000E+01       N/A          7.7890E+01    1.0000E+01 V
          14       720  ERP303         303         2     1.4000E+01       N/A          7.7890E+01    1.0000E+01 V
          15       730  ERP303           0           2     1.4000E+01       N/A          1.3737E+02     3.0000E+01 V
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;The Case Control Command DSAPRT(FORMATTED, END=SENS) = ALL will result in sensitivity
computation only and the sensitivity coefficients are presented with headings and labels as shown in
Listing 8-42.
Listing 8-42   TPL Example ERPOPT1 ERP Design Sensitivity Print
**********************************************************************************
*                                                                                                               *
*    D E S I G N    S E N S I T I V I T Y    M A T R I X    O U T P U T      *
*                                                                                                               *
*                                                                                                               *
*    R E S P O N S E    S E N S I T I V I T Y    C O E F F I C I E N T S   *
*                                                                                                               *
**********************************************************************************&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;heading&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#heading&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;DRESP1 ID=       200             RESPONSE TYPE= WEIGHT                                                        SEID=         0
         RESP VALUE              DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         1.9400E-03                    1 T1         1.0002E-01        2  T2         9.0022E-02
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       612             RESPONSE TYPE= FRVELO       GRID ID=       121     COMP NO=         1        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  2.8299E+00  1.4000E+01        1 T1        -9.9617E+03        2  T2        -5.0551E+03
   2000  2.8299E+00  1.4000E+01        1 T1        -9.9617E+03        2  T2        -5.0551E+03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       613             RESPONSE TYPE= FRVELO       GRID ID=       131     COMP NO=         1        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  5.2953E+00  1.4000E+01        1 T1        -1.4141E+04        2  T2        -1.3616E+04
   2000  5.2953E+00  1.4000E+01        1 T1        -1.4141E+04        2  T2        -1.3616E+04
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       700             RESPONSE TYPE= ERP          SET3 ID=       103     COMP NO=         2        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  6.1034E+00  1.0000E+01        1 T1        -6.8398E+03        2  T2        -1.4668E+03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       700             RESPONSE TYPE= ERP          SET3 ID=       103     COMP NO=         2        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  5.9479E+01  1.4000E+01        1 T1        -1.8879E+05        2  T2        -2.8652E+04
   2000  6.1034E+00  1.0000E+01        1 T1        -6.8398E+03        2  T2        -1.4668E+03
   2000  5.9479E+01  1.4000E+01        1 T1        -1.8879E+05        2  T2        -2.8652E+04
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       710             RESPONSE TYPE= ERP          SET3 ID=       203     COMP NO=         2        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  7.7890E+01  1.4000E+01        1 T1        -1.3324E+05        2  T2        -2.7518E+05
   2000  7.7890E+01  1.4000E+01        1 T1        -1.3324E+05        2  T2        -2.7518E+05
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       720             RESPONSE TYPE= ERP          SET3 ID=       303     COMP NO=         2        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  7.7890E+01  1.4000E+01        1 T1        -1.3324E+05        2  T2        -2.7518E+05
   2000  7.7890E+01  1.4000E+01        1 T1        -1.3324E+05        2  T2        -2.7518E+05
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;DRESP1 ID=       730             RESPONSE TYPE= ERP          SET3 ID=         0     COMP NO=         2        SEID=         0
SUBCASE  RESP VALUE  FREQ/TIME   DESIGN  VARIABLE  COEFFICIENT   DESIGN  VARIABLE  COEFFICIENT
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;   1000  1.3737E+02  1.4000E+01        1 T1        -3.2202E+05        2  T2        -3.0383E+05
   2000  1.3737E+02  1.4000E+01        1 T1        -3.2202E+05        2  T2        -3.0383E+05
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run ERP optimization, simply remove the Case Control Command DSAPRT(FORMATTED,
END=SENS) = ALL in erpopt1.dat (i.e., this is erpopt8.dat) and rerun the job. The optimization results are
presented in Listing 8-43. It is seen that there is a significant reduction in the ERP response for a very small
change the panel thicknesses.&lt;br&gt;
Listing 8-43  TPL Example ERPOPT8.dat ERP Design Optimization History Table
*******   ANALYSIS RESULTS BASED ON THE FINAL DESIGN   *******
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
|        R E S P O N S E S    IN    D E S I G N    M O D E L         |
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
(N/A - BOUND NOT ACTIVE OR AVAILABLE)
(*** VIOLATED RESPONSES MARKED WITH V &lt;em&gt;&lt;strong&gt;)
(&lt;/strong&gt;&lt;/em&gt; ACTIVE RESPONSES MARKED WITH A ***)
&amp;mdash;&amp;ndash;    WEIGHT RESPONSE    &amp;mdash;&amp;ndash;
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
INTERNAL    DRESP1    RESPONSE     ROW       COLUMN         LOWER                         UPPER
ID         ID       LABEL        ID         ID           BOUND          VALUE          BOUND
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1       200      WEIGHT        3          3              N/A          1.9711E-03       N/A&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;-  EQUIVALENT RADIATED POWER RESPONSES &amp;mdash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                    LOWER                       UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID        ID      LABEL          ID        NO.       FREQUENCY       BOUND         VALUE         BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2       700  ERP103         103         2     1.0000E+01       N/A          5.3160E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3       700  ERP103         103         2     1.4000E+01       N/A          9.9843E+00    1.0000E+01 A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4       710  ERP203         203         2     1.4000E+01       N/A          5.2394E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5       720  ERP303         303         2     1.4000E+01       N/A          5.2394E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6       730  ERP303           0         2     1.4000E+01       N/A          1.5224E+01    3.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F I N A L   A N A L Y S I S    S U B C A S E =    2000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;-  EQUIVALENT RADIATED POWER RESPONSES &amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;INTERNAL   DRESP1   RESPONSE       SET3    ITEM CODE                    LOWER                       UPPER&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ID        ID      LABEL          ID        NO.       FREQUENCY       BOUND         VALUE         BOUND&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7       700  ERP103         103         2     1.0000E+01       N/A          5.3160E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8       700  ERP103         103         2     1.4000E+01       N/A          9.9843E+00    1.0000E+01 A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9       710  ERP203         203         2     1.4000E+01       N/A          5.2394E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10      720  ERP303         303         2     1.4000E+01       N/A          5.2394E+00    1.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11      730  ERP303           0          2     1.4000E+01       N/A          1.5224E+01    3.0000E+01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;***************************************************************&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;***************************************************************&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;(HARD CONVERGENCE ACHIEVED)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;(SOFT CONVERGENCE ACHIEVED)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NUMBER OF FINITE ELEMENT ANALYSES COMPLETED           7&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS     6&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;595 Chapter 8: Example Problems
The Equivalent Radiated Power (ERP) Design Optimization
Main Index
F I N A L   A N A L Y S I S    S U B C A S E =    1000&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;f-i-n-a-l---a-n-a-l-y-s-i-s----s-u-b-c-a-s-e-----1000&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#f-i-n-a-l---a-n-a-l-y-s-i-s----s-u-b-c-a-s-e-----1000&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                                 OBJECTIVE FROM           OBJECTIVE FROM      FRACTIONAL ERROR          MAXIMUM VALUE
         CYCLE              APPROXIMATE                 EXACT                                     OF                                       
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;NUMBER            OPTIMIZATION               ANALYSIS                       APPROXIMATION             CONSTRAINT&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;OF&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;of&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#of&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;         INITIAL                                          1.940000E-03                                                  6.789004E+00
               1             1.976649E-03             1.976640E-03             4.476062E-06             3.760033E-02
               2             1.970862E-03             1.970851E-03             5.434307E-06             2.967129E-02
               3             1.958435E-03             1.958432E-03             1.902180E-06             4.177151E+00
               4             1.963510E-03             1.963513E-03            -1.185786E-06             3.864629E-01
               5             1.969974E-03             1.969973E-03             8.273284E-07             4.618206E-02
               6             1.971119E-03             1.971119E-03             1.181211E-07            -1.572514E-03
       ---------------------------------------------------------------------------------------------------------------
                                                   DESIGN VARIABLE HISTORY
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;-
INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |   INITIAL    :      1       :          2       :               3       :           4       :           &lt;br&gt;
5       :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;-
1 |          1   |  T1         |   1.0000E-02 :   1.0248E-02 :   1.0035E-02 :   1.0184E-02 :   1.0000E-02 :   1.0044E-02 :
2 |          2   |  T2         |   1.0000E-02 :   1.0131E-02 :   1.0304E-02 :   1.0000E-02 :   1.0261E-02 :   1.0284E-02 :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-----------2-----t2------------10000e-02----10131e-02----10304e-02----10000e-02----10261e-02----10284e-02-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-----------2-----t2------------10000e-02----10131e-02----10304e-02----10000e-02----10261e-02----10284e-02-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;-
INTERNAL |   EXTERNAL   |             |
DV. ID. |    DV. ID.   |    LABEL    |       6      :       7      :       8      :       9      :      10      :      11      :&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dv-id-----dv-id-------label-----------6-------------7-------------8-------------9------------10------------11-------1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;-
1 |          1   |  T1         |   1.0052E-02 :
2 |          2   |  T2         |   1.0288E-02 :&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Equivalent Radiated Power (ERP) Design Optimization596
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 9: Special Topics&lt;br&gt;
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide9 Special Topics
Introduction     598
Discrete Variable Optimization     598
Fully Stressed Design     599
Trust Region     601
Superelement Optimization     606
Automatic External Superelement Optimization (AESO)     610
Randomization of a User’s Input Data File     619
Optimization of Nonlinear Structural Responses (Pre-release)     620
Solving Large Problems in SOL 200     639
Special Considerations When Designing One-Dimensional Bending Elements     643
MultiOpt-Global Optimization and Multi Model Optimization     646
OpenMDOTM     665
Optimization with Multiple Mass Configurations      666&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction598
Main Index
Introduction
This Chapter deals with special topics that are definitely part of MSC Nastran’s design optimization
capability, but do not fit neatly into one of the previous chapters.
Discrete Variable Optimization
Most optimization algorithms are based on the assumption that the design variables or quantities that are
modified in search of an optimal design can vary continuously within a defined range. Such is the case with
the gradient-based algorithms that are the focus of this User’s Guide. However, the practicing engineer must
often choose from discrete values that most closely match the optimal vector of design variables returned by
the optimizer. The constraints of mass production usually do not afford the engineer the luxury of specifying
a 1.84 mm plate thickness; instead the engineer must make a practical choice from among several of the
nearest available gauge sizes. A number of subsequent analyses will often need to be performed to verify that
the design goals have been reasonably met and that none of the critical performance constraints have been
violated. Discrete variable optimization seeks to avoid such tedium by allowing the engineer to specify a list
of available gauges beforehand, leaving the task of selection and validation to the optimizer.
Although some theoretical algorithms promise a high degree of precision (such as the Branch and Bound
Method), most algorithms are not computationally efficient and therefore, are unsuitable for use with large-
scale finite element analysis programs such as MSC Nastran. Instead, four practical and cpu-efficient methods
have been implemented:
1.Rounding up to the nearest discrete design variable
2.Rounding off to the nearest discrete design variable
3.Conservative Discrete Design (CDD)
4.Design of Experiments (DOE)
The first two methods simply automate the simple rounding process a user might employ after a continuous
optimization and require no new analyses. For the CDD method, each variable is independently set to the
discrete values that bracket the continuous variable result. An approximate analysis is carried out for the
discrete variable above the continuous value and one with the discrete variable below the continuous value.
The constraint results of these two analyses are compared and the discrete variable is chosen that gives the
minimum value for the maximum constraint. This is repeated for each design variable so that 2*nddv (where
nddv is the number of design variables that can take on discrete sizes) approximate analyses are carried out
for the CDD approach.
The DOE method implemented in MSC Nastran makes use of the concept of orthogonal arrays. As with the
CDD method, the postprocessing task is limited to searching for designs where only the discrete variable
values just above and just below the continuous variable are selected. In this case, however, any combination
of discrete variables can be used. This seemingly straightforward task can still be difficult as there are 2nddv&lt;br&gt;
possible vectors that could be analyzed. With a modest 25 variables, 3.35 x 107 (225) functions evaluations
would be required for an exhaustive search. At 10 evaluations per second, this would require over a month of
computing and is clearly impractical. The implementation of DOE employed in MSC Nastran employs an
exhaustive search when nddv is 16 or less. Above this value, an Orthogonal Array concept is employed to
select 216 candidate arrays that provide a representative sampling of the overall design space. Clearly this is&lt;/p&gt;
&lt;p&gt;599 Chapter 9: Special Topics
Fully Stressed Design
Main Index
an approximation, but the thinking is that this will provide adequate coverage of the possible discrete
solutions that it will not be far off from the “true” optimum that would be obtained from an exhaustive
search.
Each of these methods is a postprocessing operation of the continuous, optimal design. Moreover, the
engineer can specify that such discrete variable postprocessing be applied only to the final design, or to any
number of the previous, intermediate designs that lead up to the final design. Useful design information can
often be obtained by observing the progression of (hopefully) converging “optimal” discrete values, because
any one of the intermediate solutions may actually result in a more usable design than the optimal solution
itself. Note that computation of these intermediate discrete solutions has no influence on subsequent designs
because the next design cycle is always based on the previous continuous solution and not the discrete
solution.
Discrete variables can also be mixed with continuous ones, allowing “mixed-discrete” optimization. A typical
example is that of combined sizing and shape optimization; gauge sizes must be discrete, while the variables
that control shape may vary smoothly and continuously. Furthermore, both mathematical programming
(MP) and fully stressed design approaches can be used in conjunction with discrete variable optimization.
Fully Stressed Design
Fully Stressed Design (FSD) is a concept that has long been regarded as an automated design algorithm that
can quickly produce a design that satisfies key design requirements. Its implementation in MSC Nastran
complements the long standing mathematical-programming (MP) approach to automated design that is the
focus of this User’s Guide. It utilizes many of the same procedures to produce a “quick-look” design at a small
fraction of the computational costs. This efficiency can be exploited by requesting that the redesign take place
with literally thousands of independently designed properties, whereas an MP approach is realistically limited
to approximately one thousand design variables. The method is particularly useful in the design of aerospace
structures where the overriding requirement is that the structural weight be minimized. Although the
proposed design that results from the FSD technique may not be usable from a manufacturing standpoint
because it has neglected key design considerations, it can be thought of as providing a lower bound estimate
on the amount of structural material required to achieve the imposed design conditions. The output of the
FSD algorithm can also be used as an excellent starting design for a more general MP design task.
The basic resizing concept of FSD can be described as follows
(9-1)
where
And the old and new superscripts refer to before and after the resizing.t =designed property
i =index to indicate which property contains the design parameter and the
design response
, all =actual and allowable response quantities, such as stress
 =a real number (0.0 &amp;lt;  1.0 )ti newialltiold=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Fully Stressed Design600
Main Index
The implementation of FSD within MSC Nastran is embedded within the SOL 200 Design Optimization.
Design variable and constraint conditions are applied using the existing Bulk Data entries and Case Control
commands that have been developed for the MP algorithm. T wo parameters control the FSD algorithm:
The FSD algorithm shares much of its user interface and dataflow with the basic design optimization
capability. The capabilities available for FSD are a subset of those available for general multidisciplinary
optimization and include:
1.FSD is applicable to static and static aeroelastic analyses. Other analyses can be included in the input
and will be evaluated in the analysis associated with the FSD cycles and included in the redesign in
any subsequent MP design cycles.
2.Multiple subcases and multiple boundary conditions are supported.
3.Composite materials are supported.
4.Allowable limits can be placed on element stress and/or strain.
5.PROD areas and shell thicknesses s (PSHELL, PSHEAR and PCOMP thicknesses) are supported
with FSD.
6.For composites, the thicknesses of individual PCOMP layers can be resized using the FSD algorithm.
7.All elements sharing a single property ID are sized to a single value that satisfies all the imposed
conditions. Further, if a number of properties are controlled by a single DESVAR, the single
DESVAR value will be sized to satisfy all imposed conditions.
8.Minimum and maximum size limits are imposed (e.g., design variable bounds and property limits).
The above list implies the following additional limitations:
1.Beam cross-sections are not designed. Ply orientation angle cannot be used as a design variable for
FSD.
2.If an element is constrained, but the corresponding property for the element is not resized, the
constraint is ignored in the resizing.
3.If a property is designed, but has no imposed constraints, the property value is unchanged by the
resizing algorithm.
4.Shape design variables and material and connectivity properties are not supported in FSD.
5.Each designed property can reference only a single design variable.
A guideline for the use of the FSD capability is to limit its application to 5-10 design cycles and follow it up,
if practical, with MP design cycles. This is performed seamlessly in SOL 200 by the resizing algorithm
switching from FSD to MP after FSDMAX design cycles or after the FSD design is considered converged.
The MP algorithms have much more generality in application and are also known to be able to achieve a
lower weight structure. This is not practical when the FSD design task has thousands of design variables since FSDALP Relaxation parameter applied in Fully Stressed Design. (Real, 0.0 &amp;lt; FSDMAX &amp;lt;1.0,
Default = 0.9)
FSDMAX Specifies the number of Fully Stressed Design Cycles that are to be performed. (Integer,
Default = 0)&lt;/p&gt;
&lt;p&gt;601 Chapter 9: Special Topics
Trust Region
Main Index
this is likely to overwhelm the MP algorithm. The default value of 0.9 for FSDALP is usually adequate to
achieve quick convergence. Lower values, such as 0.5, can be used to achieve a completely converged solution.
Trust Region
Introduction
Formal approximate optimization is used in SOL 200 to find a new design without performing expensive and
exact finite element analyses ( The Approximate Model ). Move limits must be applied to define a restricted
region on which an adequate approximate model can be created.
Convergence checks are made following each approximate optimization task. Currently, if the approximate
optimization comes up with a design that an exact analysis shows is actually worse, it is assumed that the
region defined by move limits are too generous and they are reduced. Using T rust Region Concepts, this
simple update strategy can be improved in three fundamental ways:
1.A merit function is applied to provide a more quantitative measure of the quality of the
approximation.
2.A provision is made to increase the move limits when the approximate optimization results are shown
to be of high quality.
3.If the new design is judged to actually be worse, it is discarded and the approximate optimization task
is performed again with tighter move limits.
Benefits
Since the move limits can be either reduced or increased in an adaptive fashion, it is expected that the quality
of the approximate model will be enhanced. This should lead to more robust optimization result and faster
convergence. In addition, rejecting a bad design should also smooth the design optimization process.
Theory
Concept of Trust Region
The main idea behind the T rust Region is to first compute a merit function that is a combination of the
objective function and the maximum violated constraint value and then form a ratio of the exact reduction
in a merit function to the predicted reduction in the merit function. The ratio can be written as follows,
assuming a design task is a constrained minimization optimization task:
where:
The current exact merit function
The previous exact merit function
The approximate merit function.RatioMFpMFc–
MFpMFa–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
MFccPWmaxgc + =
MFppPWmaxgp + =
MFaaPWmaxgc + =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Trust Region602
Main Index
Notice that a merit function is the sum of objective () a nd the product of penalty weight and the maximum
violated constraint (g). Subscripts c, p and a, indicate that the function is evaluated exactly at the current
design cycle, evaluated exactly at the previous design cycle and evaluated approximately, respectively. The
penalty weight plays an important role in a successful optimization task with T rust Region Method.
The magnitude of Ratio varies in the real interval of (-).  The denominator is the predicted reduction in
merit function while the numerator is the exact reduction in merit function. Since we consider the case of
minimizing the objective, the denominator should always produce a positive number to indicate that the
optimizer has done a good job.
Different Ratio values can measure the quality of the approximate model. For example, a negative Ratio
(likely due to negative numerator) indicates that the approximate model is so bad that the exact merit
function is greater than the previous exact. Thus reducing move limits is necessary. On the other hand, Ratio
= 1 indicates the approximate model is very good that the predicted reduction is identical to the exact
reduction and the move limits can be increased. In general, the following strategies are used to update move
limits:
If Ratio &amp;lt; 1 (say 0.01), reject the design, cut the move limits in half and repeat the approximate optimization
task. For a minimization task, the reduction in the merit function must be greater than zero. A too small or
negative Ratio indicates that the new design proposed by the approximate model either does not reduce the
merit function, or the quality of the approximate model is very poor.
If 1 &amp;lt; Ratio &amp;lt; 2 (say 0.25), accept the design, but cut the move limits in half for the next approximate design
task. The ratio in this range indicates that quality of the approximate model is not good enough, or the
current move limit is too large.
If 2 &amp;lt; Ratio &amp;lt; 3 (say 0.75), accept the design and do not adjust the move limits.
If Ratio &amp;gt; 3, accept the design, but increase the move limits by 50%, up to a pre-specified upper value. The
ratio approaching to 1 indicates that the approximate model is accurately predicting the actual behavior.
Therefore, the current move limits can be increased. In addition, although Ratio &amp;gt; 1 indicates that the
approximate model is not particularly accurate, but it predicts in the right direction so that larger move limits
can also be used.
Penalty Weight
Penalty Weight (PW) is used to form the merit function. The penalty weight plays an important role in a
successful optimization task with T rust Region Method. It is problem dependent. The larger it becomes, the
more the maximum violated constraint is penalized. There are two ways to define PW: automatic and user
specified. For the automatic way, PW = 10 * the initial objective from the initial design cycle. This is the
default option. Alternatively, the user can provide his own through a Bulk Data Parameter, MXLAGM1.
Then, PW = 10.* MXLAGM1.
Rejecting a Design
If Ratio &amp;lt; 1, the current design will be rejected. When the flag is set, the subsequent design sensitivity phase
will be skipped and the approximate optimization job will be performed based on the previous good design
with reduced move limits.&lt;/p&gt;
&lt;p&gt;603 Chapter 9: Special Topics
Trust Region
Main Index
Input
Parameters related to Trust Region in DOPTPRM entry
Bulk Data Parameter
PARAM,MXLAGM1,VALUE  - Control parameter for Penalty Weight (Real, Default = 0.0).
Outputs
Special Printout from DOM12
If T rust Region method is invoked, DOM12 prints out additional information message as shown below. This
message is printed out once every design cycle. The left column is design cycle number. It prints out
Objective, Maximum violated constraint and merit function for exact current, exact previous and
approximate. It further prints out Ratio together with numerator, denominator. It also prints out the final
Update factor for move limits plus the rejecting status. Finally, it prints out current move limits for property
and design variable ply penalty weight.
Marker Indicating a Rejected Design in Design History
A rejected design will be marked by adding symbol ‘R’ to the design cycle number shown in the Summary of
Design Cycle History at the end of f06 file. Below is an example that shows design cycle 2 has been marked
with ‘R’. This is because although this design produces a smaller objective but with the violated constraint.
So the design is rejected. Design cycle 1 is used as the next starting design point. TREGION Flag to invoke T rust Region method.
= 0 (Default) Don’t employ trust regions
= 1 turn T rust Region on
ETA1 (1) the cutting ratio 1 (Default = 0.01), used by T rust Region Method.
ETA2 (2) the cutting ratio 2 (Default = 0.25), used by T rust Region Method.
ETA3 (3) the cutting ratio 3 (Default = 0.7), used by T rust Region Method.
UPDFAC1 Updating Factor 1 (Default = 2.0), used by T rust Region Method.
UPDFAC2 Updating factor 2 (Default = 0.5), used by T rust Region Method.
DPMAX Maximum fraction of change on designed property (Default = 0.5) , used by T rust
Region Method.
DXMAX Maximum fraction of change on design variable (Default = 1.0), used by T rust
Region Method.
DCYCL       OBJECTIVE    MAX-CONS     MERIT-FUN     NUMER         DENOM       RATIO         UPFAC   REJ-FLAG TTTT
2 PREV 6.893711E+00 2.133793E+01 1.477869E+03   5.0832E+02   5.0839E+02   9.9987E-01   2.0000E+00    0    TTTT
CURR 9.935308E+00 1.392006E+01 9.695438E+02                                                             TTTT
APPX 9.935904E+00 1.391907E+01 9.694761E+02                                                             TTTT
MOVEP,MOVP-MIN =  5.000000E-01 1.000000E-02                                                             TTTT
MOVEX,MOVX-MIN =  1.000000E+00 5.000000E-02                                                             TTTT
NDOFs(NDV-NACS)=             0                                                                          TTTT
PENAL WEIGHT   =    0.6894E+02                                                                          TTTT&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Design Sensitivity and Optimization User’s Guide
Trust Region604
Main Index
Guidelines and Limitations
1.All these parameters in t he DOPTPRM have their own defaults and are usually adequate. If you
want the optimization job to have more aggressive move limit, you may do so by reduce ETA3 and/or
increase DPMAX and DXMAX or increase UPDFAC1. Conversely, you may increase ETA3 and/or
reduce DPMAX, DXMAX and/or decrease UPDFAC1.
2.A non-zero MXLAGM1 is used to override the default Penalty Weight (PW). This parameter is
problem dependent and may require some iteration to come up a good number. When the need arises
to specify one, a general rule is to specify a big number (say 100. and larger) when the maximum
constraint is grossly violated.
3.In some cases, it is possible that activating Trust Region in SOL 200 may produce less desirable
result than a non-Trust Region job.
Example
The example (dtrustr2.dat) is a Stiffened Panel constrained optimization job taken from the testing problem
library (d200x7.dat). It minimizes a weight response while satisfying stress and displacement constraints. The
T rust Region is invoked by specifying TREGION=1 on the DOPTPRM entry. In addition, the parameter
MXLAGM1 is set to 10.
Figure 9-1 plots the objective history and DELX history with and without TR. The TR job converges at design
cycle 15 (notice that plots count initial design cycle as 1 that is actually zero if counted in the f06) while the
non-TR job converges at design cycle 27. Both have same final objective function with maximum feasible
constraint at the tolerance of GMAX=0.5%. The fast convergence achieved by the TR job may be explained
by the DELX history shown at the bottom of Figure 9-1. The non-trust region job uses a constant move limit
(e.g., DELX=0.5) while the DELX in the trust region job is adaptively updated: between design cycles 2 and
6, DELX=1.0 and then reduced below 0.5 between design cycles 8 and 14. Finally, Figure 9-2 plots the
maximum constraint values with and without TR. Listing 9-1 lists the summary of the design history.&lt;br&gt;
***************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
***************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF FINITE ELEMENT ANALYSES COMPLETED          16
NUMBER OF OPTIMIZATIONS W.R.T. APPROXIMATE MODELS    15&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number-of-optimizations-wrt-approximate-models----15&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number-of-optimizations-wrt-approximate-models----15&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;                          OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
         CYCLE              APPROXIMATE                 EXACT                    OF                       OF
         NUMBER            OPTIMIZATION               ANALYSIS              APPROXIMATION             CONSTRAINT   
    ---------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;         INITIAL                                     6.614414E+02                                      1.102773E-01
               1            5.987441E+02             5.987546E+02            -1.743120E-05            -4.438843E-04
               2R           5.475672E+02             5.475823E+02            -2.764282E-05             2.106060E+00
               3            5.626934E+02             5.627052E+02            -2.104267E-05            -3.308058E-04
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;605 Chapter 9: Special Topics
Trust Region
Main Index
Figure 9-1  Objective History of Example 2: Trust Region vs. Non-Trust Region
Figure 9-2  Max. Constraint History of Example 2: Trust Region vs. Non-Trust Region&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Superelement Optimization606
Main Index
Listing 9-1  Table Summary of Objective and Maximum Constraints
Superelement Optimization
With few exceptions, design modeling for superelement sensitivity and optimization is a largely transparent
operation in Solution 200. That is, design models spanning multiple superelements can be expressed using
the same tools and methods for non superelement models discussed in the previous sections. This is a useful
tool in any large-scale design task.
MSC Nastran provides a variety of techniques for performing superelement analysis and you are referred to
the MSC Nastran Superelements and Modules User’s Guide  for a discussion of these powerful techniques. For
the purposes of this discussion it is necessary to identify three basic ways of incorporating superelements in
your design optimization task.
1.List Superelements that are defined in the main bulk data section by specifying lists.
2.PART Superelements have a separate partitioned bulk data section that defines each superelement in
a standalone fashion. The main data section residual information and acts to integrate the parts into
a complete analysis.
3.External Superelements are represented in the run by matrices provided to the overall analysis.
A final concept is that of an image superelement, which allows you to duplicate one of the list or parts
superelements.
This section introduces the differences in superelement versus non superelement design modeling.
Limitations are summarized at the end of the section.
Supported Superelements
List, parts and image superelements only may be used in connection with the design model. List, parts, image
as well as external superelements may all be used in the analysis model.
The external superelement restriction occurs because external superelements are only known to the code via
their structural stiffness, mass, damping, and load matrices. Not having any of the properties or other
modeling data on hand prevents referencing any of this data in connection with the design model. Although
external superelements may be used in connection with the analysis model, their properties are assumed to
be constant with respect to the design model. INITIAL                                     5.784520E+00                                      1.291873E+00
1            8.610938E+00             8.610291E+00             7.509516E-05             6.616151E-01
2            6.194046E+00             6.193711E+00             5.412208E-05             5.258847E-01
3            7.550942E+00             7.550880E+00             8.146334E-06             2.141915E-01
4            7.982732E+00             7.982616E+00             1.451547E-05             9.803727E-02
5            7.912356E+00             7.912348E+00             1.084769E-06             6.846836E-02
6            7.772725E+00             7.772723E+00             1.840425E-07             5.525844E-02
7R           7.562489E+00             7.562516E+00            -3.657057E-06             6.685141E-02
8R           7.575960E+00             7.575985E+00            -3.398793E-06             6.633586E-02
9            7.943342E+00             7.943305E+00             4.622315E-06             1.302273E-02
10R           7.829101E+00             7.829069E+00             4.019795E-06             1.883844E-02
11            7.925030E+00             7.925027E+00             4.211797E-07             9.176641E-03
12            7.889203E+00             7.889194E+00             1.148394E-06             8.753594E-03
13            7.907179E+00             7.907176E+00             3.015218E-07             3.031719E-03
14            7.924466E+00             7.924470E+00            -5.415548E-07             3.125000E-06
15            7.924493E+00             7.924493E+00             0.000000E+00            -1.562500E-07&lt;/p&gt;
&lt;p&gt;607 Chapter 9: Special Topics
Superelement Optimization
Main Index
Design Variables in Superelement Design Modeling
You can relate design variables to properties just as in the case with non superelement models by using either
linear relationships specified on DVxREL1 Bulk Data entries or user-defined equations on DVPxEL2 entries.
Design variable-to-property relations may be local to a given superelement or may span superelement
boundaries. For example, a design variable may be related to a particular property entry which is, in turn,
used in a number of superelements in the model.
Each Part Superelement may contain DESVAR and DVxREL1/2 entries for that particular part on a
standalone basis. The SEDLINK entry can be used to provide cross boundary support and must be in the
residual bulk data section.
You can also define design variable-to-grid relationships using DVGRID Bulk Data entries. A given design
variable may be related to grid sets that span superelement boundaries. A DVGRID entry may reference both
interior and exterior grids of primary superelements. DVGRID entries are the only way to specify shape basis
vectors in superelement design models. The other methods-direct input of shapes, geometric boundary
shapes, and analytic boundary shapes&amp;ndash;are not supported.
For secondary superelements, the same property and/or grid variations prescribed on the primary
superelement also apply to the corresponding image superelements. All references to external grids of
secondary superelements are ignored, however. This stems from the fact that the superelement mapping
matrix is used to compute the secondary superelement matrices using the primary superelement.
Each Part Superelement may contain DRESP1, DRESP2, DRESP3 entries for that particular part on a
standalone basis. The SEDRSP2 and SEDRSP3 entries can be used to provide cross boundary support and
must be in the residual bulk data section. If the weight or volume of a particular part is used as a response,
the associated DRESP1 should be in the residual. If the objective is for an element or grid response that is in
a part, it is necessary to point to a SEDRSP2 in the residual that in turn points to the DRESP1 in the part.
Design Responses in Superelement Design M odeling
You can select design responses using DRESP1 and/or DRESP2 Bulk Data entries. A single DRESP1 entry
can be used to select a number of design responses by referring to multiple grid locations, property IDs, or
elements. The responses identified on a single DRESP1 entry can be from multiple superelements.
For weight and volume type responses, the applicable superelement IDs (SEIDi), or ‘ALL’ must be specified.
Weight or volume responses can be computed for the entire model or just a subset defined by superelement
ID reference. The default is the residual structure, or Superelement 0. By default, only those elements
belonging to the residual superelement are included in weight and volume computations. The design
responses input to DRESP2 equations can span multiple superelements or load cases.
Superelements and Constraint Screening
For superelement sensitivity, the constraint screening criteria are applied on an individual superelement basis.
That is, if a DRESP1 entry lists several element, grid, or property IDs which span superelement boundaries,
the screening criteria will apply individually to all superelements that share responses listed on this DRESP1
entry. If separate sets of constraint screening parameters, TRS (truncation threshold), and NSTR (number of
retained constraints per region) are required for different superelements, then separate sets of DRESP1 and
DCONSTR entries should be used to define superelement-specific response groups.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Superelement Optimization608
Main Index
Case Control
The simplest way to incorporate superelements is to use the SUPER = ALL command in Case Control. This
automatically satisfies a number of design optimization Case Control requirements. You can also use an
expanded subcase structure if necessary, with each subcase pertaining to a superelement or group of
superelements. If you choose the latter approach there are some additional requirements that must be
satisfied:
Each superelement subcase must define an analysis type using the ANALYSIS = command.
For ANALYSIS = MODES, the eigenvalue constraint must be called out from each MODES
subcase using the DESSUB command.
The METHOD command included in the residual subcase must also be used in the upstream
superelement subcases. This requirement also holds for Component Modes Synthesis (CMS) and
Generalized Dynamic Reduction (GDR).
Punch of PARTS Design Results
For user convenience, specifying PARAM, PSENPCH ,YES will write the updated bulk data entries into separate
‘.pch’ files for each Part Superelement, and each design cycle. Note that the number of design cycles that are
output is dependant on the value of PARAM, DESPCH . The advantage of specifying PARAM,PSENPCH,YES
is that each of the ‘.pch’ files with the updated design bulk data can be used to replace the original model with
an ‘INCLUDE’ entry after the appropriate ‘BEGIN SUPER= seid’. If PARAM,PSENPCH,YES is not
specified, the updated bulk data entries for all Part Superelements are written to a single ‘.pch’ file which will
require you to manually extract each Part Superelement model from the .pch file and place it in the
appropriate ‘BEGIN SUPER= seid’ section of the Bulk Data Section.
Output
For SOL 200 with design models in each Part Superelement, the .f06 output is similar to non Part
Superelement optimization jobs. There are some minor differences that are specific to Part Superelements
only.
The “Comparison Between Input Property Values from Analysis and Design Model” section of the .f06 will
repeat for the design model of each Part Superelement. A sample for a Part Superelement is shown as follows:PARAM,PSENPCH Default=NO. Setting PSENPCH to YES causes updated bulk data
entries of a Part Superelement for a design cycle punched to a separate
file named as follows
JOBNAME_psexx_yy.pch Where xx is for Part Superelement ID and yy is for design cycle.
Note that PARAM, PSENPCH has no effect for non-Part Superelement run.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P32</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_032/</guid>
      <description>
        
        
        &lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&amp;mdash;&amp;ndash;   COMPARISON BETWEEN INPUT PROPERTY VALUES FROM ANALYSIS AND DESIGN MODELS &amp;mdash;&amp;ndash;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;PROPERTY   PROPERTY   PROPERTY     ANALYSIS         DESIGN          LOWER           UPPER       DIFFERENCE     SPAWNING&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TYPE        ID        NAME         VALUE          VALUE           BOUND           BOUND          FLAG          FLAG&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;609 Chapter 9: Special Topics
Superelement Optimization
Main Index
Note that the Part Superelement ID shows up in the title line of a page. In addition, the residual Part
Superelement has two versions of above output, first and last. If there are differences between design and
analysis model for residual Part Superelement, the differences will show up in the first version.
Limitations
The limitations that apply to superelement design modeling are summarized as follows:
The design model may not reference external superelements. External superelements can be part of
the analysis model but are considered invariant with respect to changes in the design model.
Image superelements have the same design variations and design responses as defined on the
referenced primary superelement. The exception is external grids, which are invariant for the image
superelements.
Shape basis vectors can only be defined using the DVGRID entry.
Eigenvalue sensitivity is evaluated for the residual superelement. Since the residual contains the
boundary degrees-of-freedom from all superelements, the computed eigenvalue sensitivities pertain
to the entire structure. Eigenvalues computed during upstream superelement reduction are not
available as design responses. Guyan reduction (the default) is exact for stiffness properties but only
approximate for mass. Thus, you may want to consider using an advanced reduction method, such
as component modes synthesis, to improve the sensitivity analysis accuracy.
The DCONSTR and DSCREEN entries have no provisions for specification of superelement IDs.
If separate response allowables or screening criteria are to be applied, the DRESP1 entries should
define responses that do not span superelement boundaries.
Part Superelement optimization does not support topology (TOPVAR), topography (BEADVAR),
or topometry (TOPMVAR) optimization.
Example Using Part Superelement
TPL Problem d200pse1.dat
The double-headed fly swatter model will be used to demonstrate Part Superelement Optimization with the
design model SE 0 including DESVAR from each Part. DOUBLE FLYSWATTER MODEL $ ANALYSIS USING PART SUPERELEMENTS            JANUARY  13, 2009  MSC Nastran   1/12/09
S.E. STATICS - MULTIPLE LOADS                                                                     SUPERELEMENT 4        &lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;se-statics---multiple-loads---------------------------------------------------------------------superelement-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#se-statics---multiple-loads---------------------------------------------------------------------superelement-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;  PSHELL 4         T    5.000000E-02    5.000000E-02    5.000000E-03    1.000000E+20 NONE        
 1. THE DIFFERENCE FLAG IS USED TO CHARACTERIZE DIfFERENCES BETWEEN ANALYSIS AND DESIGN MODEL PROPERTIES:
    IF THE FLAG IS NONE, THEN THERE IS NO SIGNIFICANT DIFFERENCE BETWEEN THE TWO VALUES. 
    IF THE FLAG IS WARNING, THEN THE USER IS ADVISED THAT DIFFERENCES EXIST AND THE DESIGN MODEL
    IS BEING USED TO OVERRIDE THE ANALYSIS MODEL.  
    IF THE FLAG IS FATAL, THEN THE DIFFERENCES ARE GREATER THAN  1.00000E+35 AND THE RUN WILL BE TERMINATED.
 2. THE SPAWNING FLAG (*) INDICATES THAT THE SPAWNED PROPERTY IS DERIVED EITHER FROM THE BEAM CROSS SECTION 
    LIBRARY OR FROM A PBEAM ENTRY. THE PROPERTY ID FOR THE SPAWNED PROPERTY IS IDENTICAL TO ITS PARENT.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Automatic External Superelement Optimization (AESO)610
Main Index
Figure 9-3  Example problem d200pse1
The output is similar to output from non Part Superelement Optimization runs, as an example, the Design
Variable History for d200pse1.dat is:
Listing 9-2  Design Variable History Partitioned Superelements
DESVAR as defined in each PART . Duplicate IDs are allowed between Parts.
Automatic External Superelement Optimization (AESO)
Introduction
With superelements, you can manually partition the analysis model into two parts: a designed part and a non-
designed part. The latter is treated as one external part superelement while the former is defined as a residual
structure. A creation run is performed which applies Component Mode Synthesis (CMS) or Static
Condensation to the part superelement and stores the resulting boundary matrices in a database or an
OUTPUT2 file, or a punch file.  The optimization task is performed on the assembly run that assembles those&lt;/p&gt;
&lt;p&gt;611 Chapter 9: Special Topics
Automatic External Superelement Optimization (AESO)
Main Index
boundary matrices into the residual model for solving system solutions. The strategy is most efficient when
the size of the design model (or residual model) is much smaller than the size of the original analysis model.
However, although the feature is e fficient in CPU time, since both files of both creation and assembly runs
must be created by you, significant effort in manual partitioning the model might outweigh the performance
gain.
The AESO capability presented here extends this manual process in an important way: rather than requiring
you to segregate your large model into a designed and non-designed part, the process does this automatically
by identifying which parts of the finite element model are affected by the design task. In essence, the new
AESO capability provides an efficient and accurate solution in a user friendly way.
Benefits
Several major benefits are:
1.Removes a tedious and error prone task from the user in preparing the user input data.
2.Does not require you to be knowledgeable in the specialized area of superelements in general and
external superelements in particular.
3.Provides an efficient and accurate approach for large-scale design optimization tasks.
4.Enable the performance of various design studies rapidly once the model has been divided into a
designed and non-designed part. Examples of this are the setting up of different design constraints
and objective in the studies to gain insight into the design and the available trade-offs or the applying
of various frequency excitation loadings in the frequency response analyses.
Methodology
A complete AESO task involves two separate MSC Nastran job runs: 1) the first run is an AESO creation run
(or simply creation run) whose logical flow is described in Figure 9-4 and 2) the second run is an AESO
assembly run (or simply assembly run) whose logical flow is described in Figure 9-5.
As shown in Figure 9-4, the creation run automatically partitions the original analysis model into the residual
(the designed part) and external SE (the non-designed part). This automatic partition procedure will assign
the following grid points to the residual:
1.All grid points that belong to a design model consisting of DRESP1, DVGRID, DVPRELi,
DVMRELi and DVCRELi entries;
2.All grid points that are referenced on all static or dynamic loading entries such as DAREA, DPHASE,
FORCE, MOMENT, PLOADi, TEMP entries;
3.All grid points for a rigid element that has one or more connecting grid belonging to the residual;
4.Any grid point that is a dependent grid on an MPC entry
After the automatic partition procedure, a new user input file is created from the residual ( Figure 9-5). Then,
the remainder of the creation run is the application of Static Condensation and/or Component Modes
Synthesis procedures to produce stiffness, mass, damping boundary matrices. After the creation run is
complete, a MSC Nastran database is saved to store the boundary matrices and a .asm file is also created to
include superelement boundary connection information.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Automatic External Superelement Optimization (AESO)612
Main Index
The assembly run is similar to a conventional SOL 200 task as shown in Figure 9-6 by utilizing all three types
of data generated from the creation run ( Figure 9-5). The original optimization problem is solved by
assembling the boundary matrices into the residual for the system solutions.
Input
1.The two parameters on the DOPTPRM entry are used to create an AESO job:
AUTOSE - flag to request an AESO job (integer 0, 1, Default = 0). AUTOSE = 1 activates an AESO
creation run.
DRATIO - the threshold value that is used to turn off an active AESO job if the ratio of the size of
the design model to that of the analysis model is greater than DRATIO (Real &amp;gt; 0.;
Default = 0.1).
2.An ASSIGN statement with a logical key name ‘AESO’ is placed in the FMS to specify an input file
name for the assembly run.
3.If you wish to use the OUTPUT2 option (similar to the DMIGOP2 option on the EXTSEOUT
Case Control command), rather than the database, add an ASSIGN statement creating an
OUTPUT2 file as UNIT 41. If unit 41 exists and is assigned as an OUTPUT2 file, the program will
write the data to unit 41 using the DMIGOP2 option. If not, the information will be written to the
database.
To illustrate ideas behind the input and output for an AESO task, a test problem (aeso1.dat) is used here. MSC Nastran
EXTSE Database  or
OUTPUT2 file
Finite
Element
AnalysisSensitivity
AnalysisStructural
Response
Analysis
.asm fileNew Input File
for Assembly
RunInitial User
Input File
Automatic Model
Partition
CMS to create
boundary matricesInitial User
Input File
Constraint
ScreeningApproximate
ModelOptimizerImproved
Design
External SEResidual
Figure 9-4  AESO Creation
RunFigure 9-5  Output of
Creation Run and Input of Assembly
RunFigure 9-6  AESO Assembly Run&lt;/p&gt;
&lt;p&gt;613 Chapter 9: Special Topics
Automatic External Superelement Optimization (AESO)
Main Index
Figure 9-7 shows a sample model whose upper left portion covering elements 18 to 42 (SE 1) is the non-
designed part while the rest of structure is the residual structure.
The listing below is a condensed version of the creation run file (aeso1.dat) that only shows the required user
input to invoke an AESO creation run. The assign aeso=&amp;lsquo;aeso1_2.dat&amp;rsquo;  statement is specified in the FMS
section and autose 1  and dratio 0.9  are requested on the DOPTPRM entry. The DRATIO=0.9 here
overrides the default.
Figure 9-7  A Sample Mode l&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Automatic External Superelement Optimization (AESO)614
Main Index
Figure 9-8  Condensed Version of the Creation Run File, dseoptl.dat
Outputs
As shown in Figure 9-4, three types of data generated from the creation run are saved in the working directory:
a Nastran database, a .asm file and a new input file for the assembly run (or an assembly file). This section
describes each of these items and explains how they are used in the assembly run. In addition, some special
print outputs from the creation run are shown that display the model partition information.
Nastran Database Files
T wo Nastran database files: aeso1.MASTER and aeso1.DBALL are automatically saved when the creation
run is submitted with SCR=NO option. Notice the size of the database is much smaller than the regular
Nastran database because only boundary matrices are stored. The Master file will be referenced by an
ASSIGN statement in the new input file described below.
If an ASSIGN statement to create unit 41 as OUTPUT2 is included in the file, then it is not necessary to
save the databases, as the data needed to continue the optimization will be contained in the OUTPUT2 file.
The .asm File
The ‘aeso1.asm’ file that includes the boundary connection information follows. As shown in Figure 9-7, this
problem has only two boundary points, 35 and 36 between the residual and the external superelement 1. This
file is accessed through an INCLUDE command in the assembly file.assign aeso=&amp;lsquo;aeso1_2.dat&amp;rsquo;
SOL 200
CEND
desobj(max) = 1
analysis = modes
…..
Begin Bulk
……
doptprm  desmax  10       autose  1       dratio  0.9
enddata&lt;/p&gt;
&lt;p&gt;615 Chapter 9: Special Topics
Automatic External Superelement Optimization (AESO)
Main Index
New Input File for the Assembly Run
Notice that the name of this file, aeso1_2.dat is specified on the ASSIGN AESO statement in the creation
run ( Figure 9-8). It is a standard MSC Nastran input file. The AESO specific contents in the Executive
Control, Case Control and Bulk Data Sections are listed in Figure 9-9 and are described below.
Figure 9-9  Highlights of the Assembly Run File, aeso1_2.dat
1.Executive Control Section
The Nastran rseqcont=1 statement instructs the input file processor to ignore all continuation fields.
This statement is automatically created in this file regardless of whether the creation run has it or not.
The next two statements assign the Nastran Master database file and locate the EXTDB datablock
that stores various boundary matrices. $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$
$ ASSEMBLY PUNCH (.ASM) FILE FOR EXTERNAL SUPERELEMENT        1
$
$ THIS FILE CONTAINING BULK DATA ENTRIES PERTAINING TO
$ EXTERNAL SUPERELEMENT        1 IS MEANT FOR INCLUSION
$ ANYWHERE IN THE MAIN BULK DATA PORTION OF THE ASSEMBLY RUN
$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
SEBULK         1EXTERNAL          MANUAL
$
SECONCT        1       0 5.0E-05
35      35      36      36
$
$ BOUNDARY GRID DATA
$
GRID    35              -3.6    6.      0.
GRID    36              -2.8    6.      0.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
nastran rseqcont=1
assign se1=   &amp;lsquo;./aeso1.MASTER&amp;rsquo;
dblocate datablk(EXTDB) logical=se1,
CONVERT(SEID=1)
SOL 200
CEND}
Executive Control Section
desobj(max) = 1
analysis = modes
…….
subcase 10
method = 1
spc = 10
$}
Case Control Section
begin bulk
include &amp;lsquo;./aeso1.asm&amp;rsquo;
…….
doptprm  desmax  10
enddata}
Bulk Data Section&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Automatic External Superelement Optimization (AESO)616
Main Index
Notice that the other statements in Executive Control Section of the creation run are not retained.
2.Case Control Section
The whole Case Control section of the creation run is retained in the assembly file.
3.Bulk Data Section
This section completely defines the residual structure. The include ‘./aeso1.asm’ command allows the
assembly run to access the .asm file created from the creation run. In addition, the autose 1 and dratio
0.9 have been removed from the doptprm entry of the creation run.
Special Print Outputs from Creation Run
The following output is taken from the aeso1.f06 file. It displays detailed information about the model
partition. You may use Figure 9-7 to help read the printout here. Notice that the Superelement 1 covers the
non-designed part while the residual (or Superelement 0) covers the designed part.&lt;/p&gt;
&lt;h2&gt;617 Chapter 9: Special Topics
Automatic External Superelement Optimization (AESO)
Main Index
Listing 9-3  Printout Showing Model Partition of Designed and Non-Designed Parts
Guidelines and Limitations
You may adjust DRATIO to allow an assembly run with larger or smaller residual model. The UIM
7824 provides brief information about the sizes of your analysis model and design model in terms of
number of the grid points.
For an AESO job with Analysis=MODES or MFREQ, it is recommended to activate the matrix
domain based decomposition with ‘domainsolver acms(partopt=dof)’ in the Executive Control
section to speed up the CMS procedure.
Always specify the ASSIGN AESO=’ filename .ext’ statement in the creation run to define the name
of the assembly file. Directly assigning the original job name to filename  should be avoided and will
cause the assembly run to fail with User Fatal Message 713. A good practice is to add some suffix to
the original file name such as myjob_2nd.dat where myjob is the original file name. BOUNDARY SEQUENCE ASSIGNMENT TABLE
BOUNDARY
SEQUENCE ID  &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; ASSIGNED TO POINT ID (SUPERELEMENT) &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sequence-id-----------------------------assigned-to-point-id-superelement-------------------------------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sequence-id-----------------------------assigned-to-point-id-superelement-------------------------------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;      1B        35 (       0)       35 (       1)
      2B        36 (       0)       36 (       1)                                                                                                                           
                                          SUPERELEMENT        0
                                          LIST OF  INTERIOR POINTS         ( TOTAL NO. OF INTERIOR POINT = 70 )         
    INDEX      -1-      -2-      -3-      -4-      -5-      -6-      -7-      -8-      -9-     -10-
        1        1        2        3        4        5        6        7        8        9       10   
       11       11       12       13       14       15       16       17       18       19       20   
       21       21       22       23       24       25       26       27       28       29       30   
       31       31       32       39       40       41       42       43       44       51       52   
       41       53       54       55       56       63       64       65       66       67       68   
       51       75       76       77       78       79       80       87       88       89       90   
       61       91       92       99      100      101      102      103      104       1B       2B  
                                         SUPERELEMENT        0
                                          LIST OF  ELEMENTS                ( TOTAL NO. OF ELEMENTS       =  42 )         
   INDEX       -1-      -2-      -3-      -4-      -5-      -6-      -7-      -8-      -9-     -10-
       1         1        2        3        4        5        6        7        8        9       10   
      11        11       12       13       14       15       16       17       43       44       45   
      21        46       47       48       49       50       51       52       53       54       55   
      31        56       57       58       59       60       61       62       63       64       65  
      41        66       67                                                                                                 
                                         SUPERELEMENT        1
                                          LIST OF  EXTERIOR POINTS         ( TOTAL NO. OF EXTERIOR POINT =   2 )         
   INDEX       -1-      -2-      -3-      -4-      -5-      -6-      -7-      -8-      -9-     -10-
    1           1B       2B                                                                                                 
                                         SUPERELEMENT        1
                                          LIST OF  INTERIOR POINTS         ( TOTAL NO. OF INTERIOR POINT = 34 )         
   INDEX       -1-      -2-      -3-      -4-      -5-      -6-      -7-      -8-      -9-     -10-
       1        33       34       37       38       45       46       47       48       49       50   
      11        57       58       59       60       61       62       69       70       71       72   
      21        73       74       81       82       83       84       85       86       93       94   
      31        95       96       97       98                                                                           
                                         SUPERELEMENT        1
                                          LIST OF  ELEMENTS                ( TOTAL NO. OF ELEMENTS       = 25 )         
    INDEX      -1-      -2-      -3-      -4-      -5-      -6-      -7-      -8-      -9-     -10-
       1        18       19       20       21       22       23       24       25       26       27  
      11        28       29       30       31       32       33       34       35       36       37  
                     21                   38                  39                  40                 41                  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;42    &lt;br&gt;
*** USER INFORMATION MESSAGE 7824 (DSGRDM)
THE NUMBER OF GRID POINTS IN THE ANALYSIS MODEL =        104.
THE NUMBER OF GRID POINTS IN THE DESIGN MODEL =         70.
THE DESIGN MODEL COMPRISES     67.3 PERCENT OF THE ANALYSIS MODEL.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Automatic External Superelement Optimization (AESO)618
Main Index
When submitting the AESO creation run, use SCR=NO option. Otherwise, the Nastran database
will not be retained after the creation run is done. However, it is optional for submitting an assembly
run.
After the creation run is complete, check the following user information message in the f06 file to
ensure the job is terminated successfully.
The assembly input file may be modified to perform various design studies as long as the changes do
not affect the boundary matrices stored in the database.
If the AESO creation run includes a GRAV entry, it will be terminated with the following message.
The same applies to TEMPD entry. They should be removed from the file if they are temporary
inactive for the current task. Gravity and TEMPD loads are not supported with AESO since they
apply loads to the entire structure and therefore block any partitioning.
Duplicate GRID entries are allowed in the .asm file and in the assembly input file. They will be
automatically removed during the assembly run within the location tolerance specified by the TOL
field on the SECONCT entry. For the AESO jobs, the default of the location tolerance has been
increased to 5.E-5 from the original 1.E-5. However, due to numerical imperfection, this tolerance
may need to be adjusted particularly for the cases in which the boundary grid points are defined in
one or multi-levels of coordinate systems.
Bulk Data parameter SEMAPPRT can be used to control the printout of the model partition
information shown in Listing 9-3. For example, Setting SEMAPPRT to 0 will turn off the printout.
If the AESO task includes DVGRID entries, make sure that the grid points referenced by DVGRID
entries are inside the residual. Since the grid points on DVGRID entries vary during the design
process, including them as part of boundary grid points will invalidate the invariance of those
boundary matrices. Currently, the grid points on the DVGRID entries will not be automatically
assigned to be inside the residual. ASET and ASET1 entries can be used to create an enclosure or a
barrier to ensure the grid points referenced on the DVGRID entries are always placed inside the
residual. *** USER FATAL MESSAGE 732 (OPFUNT)
LOGICAL NAMES &amp;lsquo;INPUT   &amp;rsquo; AND &amp;lsquo;AESO    &amp;rsquo; ARE ASSIGNED TO THE SAME PHYSICAL
FILE.
USER INFORMATION: PHYSICAL FILE NAME 1: ./abc.aeso
PHYSICAL FILE NAME 2: ./abc.aeso
USER ACTION:  CHANGE FILE NAME ON ONE OF THE ASSOCIATED ASSIGN STATEMENTS.
^^^
^^^ USER INFORMATION MESSAGE 9181 (FEA)
^^^ THE JOB IS TERMINATED FOR AN AUTO   EXTERNAL CREATION RUN
^^^
*** USER FATAL MESSAGE 7699 (DSGRDM)
A GRAV Bulk Data entry is specified in an AESO creation run.
USER INFORMATION: The AESO run does not support the GRAV entry.&lt;/p&gt;
&lt;p&gt;619 Chapter 9: Special Topics
Randomization of a User’s Input Data File
Main Index
Since all the CORD1i entries are automatically converted to CORD2i entries during the AESO
creation run. The DVGRID entry should not reference the grid points that define the CORD1i
entry.
The AESO tasks do not support acoustics response.
Randomiza tion of a User’s Input Data File
Introduction
The stochastic capability in MSC Nastran is a first step towards a complete and automatic self-randomization
of a Finite Element model. The capability currently offers the user the possibility to automatically distribute
tolerances and uncertainties with minimum effort. This reduces dramatically the burden on a user wishing
to perform large-scale stochastic simulations. In fact, once the stochastic option is triggered, the entire Bulk
Data Deck is randomized automatically and without further user intervention. The resulting model, which
needs to be incorporated in a Monte Carlo Simulation loop - there are numerous off-the-shelf products which
support this capability - possesses unprecedented levels of realism.
In order to make full use of this new development, it is necessary to resort to a multi-run environment, which
can spawn a certain number of independent MSC Nastran executions, collect the results, and allow the user
to perform statistical post-processing. With the self-randomization capability in MSC Nastran, all the user
needs to define are the outputs he wishes to monitor, such as stresses, eigen-frequencies, temperatures,
displacements, etc. There is no need to define inputs, as these are defined automatically by MSC Nastran.
Benefits
A basic assumption of MSC Nastran is that the inputs to the analysis are known exactly so that the computed
responses are also known exactly. This is, of course, an invalid assumption in that there will always be some
uncertainty in the inputs with a corresponding variations in the outputs. The MSC Nastran provides a way
of introducing this uncertainty into the analysis process by automatically randomizing user input real
numbers based on the input values and statistical quantities that characterize the variation.
Input
The randomization capability is driven by STOCHASTICS case control command. If
STOCHASTICS=ALL is used, all real quantities on connectivity (those starting with C), Material and
Property entries as well as any loads and SPCD quantities are modified based on a covariance factor of 0.05.
A Gaussian distribution is used to randomly select the perturbed quantity with the restriction that the value
can be no more that a specified number of standards deviations from the user input mean value. The default
number of maximum standard deviations is 3.
Alternatively, the STOCHASTICS command can point to a STOCHAS bulk data entry that provides the
ability to selectively randomize different types of input quantities using user specified covariance values and
number of allowed standard deviations. In this case, only the types of input specified are randomized so that,
for example, it is possible to randomize the loads input while leaving the property values unchanged.
Output
There is no new output produced by this capability at present.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)620
Main Index
Guidelines and Limitations
The randomization algorithm involves using a random number generator, a Gaussian distribution, the
prescribed covariance and a mean value based on the user input to come up with a randomized value that is
to be used in the analysis. In order to avoid physically meaningless properties, the random value is prescribed
to be within m standard deviations of the input value, where m is a user input value with a default value of 3.0.
The product of m * COV should not be greater than 1.0 to eliminate the possibility of the property changing
sign.
The full benefit of this capability requires submitting multiple runs with the same randomization parameters.
Each would produce a unique randomization and it is possible to collect the results of each of these analyses
and produce statistical information on the variability of the responses. At present, MSC does not have
software that performs these functions.
If the user input property value is 0.0, no randomization occurs. It is recommended that any property values
that are 0.0 (say orientation angle on a PCOMP entry) be set to some non-zero value that is not negligible.
Optimization of Nonlinear Structural Responses (Pre-
release)
Introduction
Hexagon’ s SOL 200 is a gradient-based multidisciplinary design optimization capability and has been widely
used by clients in applying optimization techniques to linear structural analyses. Its success has led to the
desire to extend these techniques to nonlinear structural analyses. Studies have been done to apply both
gradient and non-gradient based approaches to the nonlinear structural analysis problems. The gradient
approach involves design sensitivity analysis of nonlinear responses and mathematical programming. It
provides accurate solutions but requires sensitivity calculations that are either too difficult in derivation, too
expensive numerically or that become problematic due to the potential discontinuities in the responses as a
function of design variables. Non-gradient based approaches often use Response Surface Methods to
construct a surrogate model and the mathematical programming techniques are applied to the surrogate
model. This approach is very general but is limited in the size of the design problems. An Equivalent Static
Loads (ESL) based approach has been developed that transforms the original problem into an iterative
solution of linear sub-optimization problems. The most attractive attribute of this approach is that it shares
the best features in gradient and non-gradient based approaches and avoids the disadvantages of each
approach. Therefore, it is able to solve small- or large-scale problems more efficiently. Furthermore, the
approach can be implemented with the existing highly developed nonlinear analysis (e.g., SOL 400) and
linear response optimization software systems (e.g., SOL 200). However, its limitation is that it may not
support general design statement due to limited support of nonlinear response and element types and
nonlinear analysis disciplines because it requires that any supporting nonlinear response type must have the
equivalent response type in the linear system.
The nonlinear response optimization capability in MSC Nastran (ESLNRO) is based on the ESL concept
and implemented within SOL 400. Only nonlinear displacement and stress responses are supported.
The capability is considered a research tool (as opposed to production tool) at this point due to the limitations
in its capability and because it has seen limited use. Therefore, it is designated “pre-release” or “beta”.&lt;/p&gt;
&lt;p&gt;621 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
What is supported:
Analysis = NLSTATIC,
Geometry (large displacement), material and boundary nonlinearities,
Nonlinear stress responses are available from the basic nonlinear elements: CBEAM, CROD,
CTUBE, CQUAD4, CQUADR, CTRIA3, CTRIA6, CHEXA, CPENTA, CTETRA.
Enhanced Nonlinear Elements (PBEMN1, PSNL1D, PSNL2D, PSLDN1) can be included in the
analysis model as long as no TOPVAR is present. The stress responses of these elements may also be
optimized if they can be mapped to that of the basic nonlinear elements.
RTYPE = DISP, STRESS, WEIGHT, VOLUME, SPCFORCE, FRMASS, COMP.
DRESP2
DESVAR, DVPRELx, TOPVAR
What is not supported:
TOMVAR, BEADVAR
DVMRELx, DVCRELx
Both TOPVAR and enhanced Nonlinear Elements in the same job
Methodology
Basic Optimization Statement
A general nonlinear response optimization problem can be stated as below:
where F(X, UNL) is the objective function such as structural weight, nonlinear compliance, maximum
displacement or any user defined response, g(X, UNL) is the design constraint such as displacement, stress,
fractional mass in topology optimization or any user defined constraint. Since the finite element based
nonlinear analysis solver is used, the basic equilibrium equation, K(X, UNL)UNL = P and the contact
condition is any, (U)  = 0 must also be satisfied. Notice the solution to the equilibrium equation requires
iterative process in addition to the optimization design loop.
ESLNRO
The ESLNRO approach involves three-iterative-procedures: Find: X
Minimize: F(X, UNL)
Subject to: g(X, UNL) &amp;lt; 0
XL &amp;lt; X &amp;lt; XU
and K(X, UNL)UNL = P and (U)  = 0 for contact conditions&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)622
Main Index
Figure 9-10&lt;br&gt;
First, a nonlinear analysis is carried out. Next, the equivalent static loads (ESL) are computed from the
nonlinear solutions. Then, the ESL is applied to a linear system and mathematical programming techniques
are carried out on this linear system. The new design from the linear optimization is used to start a new
ESLNRO loop. The process continues until the convergence criteria are satisfied. It is the ESL that establishes
a platform to perform nonlinear response optimization without actually calculating the sensitivities of
nonlinear responses.
One key ingredient in the ESLNRO is the generation of the equivalent static loads. According to Ref. 18., for
a particular nonlinear response, a required ESL should produce an equivalent and identical linear response at
the start of the linear response optimization. The displacement-based ESL is computed by multiplying the
linear stiffness matrix and nonlinear displacement solution and satisfies the requirement. For the stress-based
ESL, Ref. 17. has used a more involved approach by solving an extra linear system with the nonlinear stress Notice and at start of linear response optimization ULUNL=LNL=KXUNLUNLP=
PeqKLUNL=
KLXULPeq=
FXUL
KLXULPeq=
ULUAllowable
L&lt;em&gt;Allowable
L&lt;/em&gt;&amp;lsquo;L = NLL =Find:
Minimize:
Subject to:Nonlinear analysis
T ransformation to ESL
Linear contact analysis with ESL
Linear
response
optimization
including
contact
conditionsESLNRO
Loop
XU 0=
U 0=
U 0=&lt;/p&gt;
&lt;h1&gt;623 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
field as the initial condition without external loading. Then, the extra displacement solution is multiplied
with the linear stiffness matrix to generate the stress-based ESL. Furthermore, a stress ratio scheme is
introduced to ensure the linear stress filed will be identical to the nonlinear stress field. Notice that the
ESLNRO in MD Nastran R3 directly uses the displacement-based ESL as the stress-based ESL to avoid the
extra linear analysis. However, the stress ratio scheme is still applied to ensure that the linear stress responses
are identical to the nonlinear stress response at the start of the linear response optimization.
As shown in Figure 9-10, an ESL-based nonlinear response optimization task involves two types of loops. An
inner loop (or a SOL 200 loop) is carried out in the linear response optimization and follows all the rules in
a SOL 200 job. The ESLNRO loop is the outer loop that brings the nonlinear analysis and linear response
optimization together. Like the inner loop carried out in SOL 200, the ESLNRO loop also has its own design
move limit and the convergence criteria.
Design Move Limits in ESLNRO
In the ESLNRO, the actual nonlinear response optimization is solved by iterative solutions of linear sub-
optimization problems. Although the linear responses at the beginning of the linear system optimization are
identical to the nonlinear responses, there is no guarantee that the nonlinear responses evaluated with the
proposed design are the same as those linear response evaluated with the same design. The design proposed
by a linear sub-optimization solution may be too aggressive to affect convergence negatively. Ref. 17. has
proposed a scaled-back scheme to limit the design move at each design cycle. Its main idea is to scale back the
design move proposed by a linear sub-problem solution:
where Xk* is the design variable for the k-th design cycle, Xk-1 is the design variable at ( k-1)th design cycle,
is the proposed design from the linear optimization solution at ( k-1)th design cycle and DELXES
is the fractional change allowed in each design variable during the ESLNRO loop.
An alternate to the scaled-back scheme is to limit the design move by posing more restrictive lower and upper
bounds on each design variable. The following equations are used to update the design variable bounds.
Subscript k indicates k-th design cycle, o indicates the initial design cycle, and i indicates i-th design variable,
L lower bound and U upper bound. The initial design variable bounds are those specified on the DESVAR
entries and DXMIN is a DOPTPRM parameter and is the same parameter used in a SOL 200 run.
It has been found that each scheme is effective in certain applications. Therefore, a user selection is provided.
The Convergence Criteria for ESLNRO
An ESLNRO job will be terminated if one of four conditions is satisfied. The design cycle here refers the
ESLNRO design cycle (or the outer loop) not the design cycle in the linear response optimization (or the
inner loop). =&lt;/h1&gt;&lt;p&gt;MOVE =max(DXMIN,abs(Xi) . DELXESL)XkXk1– Xk1–1Xk1––  + DELXESL  =
Xk1–1
XkLmaxXoLXi, MOVE – 
XkUminXoUXi, MOVE – &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)624
Main Index
1.the maximum change among all design variables between the current and previous design cycles is less
than a given tolerance (CONVDV) for two consecutive design cycles or
2.the linear response optimization task achieves hard convergence in a single inner design cycle for two
consecutive ESLNRO design cycles or
3.the percentage of design variables that have their relative changes satisfy the tolerance (CONVDV)
exceeds the user-supplied tolerance (TOPOCONV) for two consecutive design cycles. This only
applies to topology optimization applications or
4.the maximum number of design cycles (DSMXESL) is reached
For an ESLNRO job terminated due to conditions 1 through 3, the following message will be printed out in
the f06 file:
Figure 9-11  Special Strategy to Handle Divergent Nonlinear Analyses
During a topology optimization process, the program adds density to the element with higher strain energy
and reduces density from the element with lower strain energy to minimize the compliance while maintaining
the weight constraint. Iteratively, this will result in a collection of elements with lower strain energy or ‘empty’
elements. Although creating empty and non-empty element groups is the goal of topology optimization, the
empty elements introduce singular behaviors to the analysis itself. When enough ‘empty’ elements exist in the
structure, the nonlinear analysis tends to fail to converge. In MD Nastran 2010, a simple strategy has been
implemented to handle divergent nonlinear analyses. If a nonlinear analysis fails to converge at the initial
design cycle, the job is terminated with appropriate message for the user to improve the model. However, if
a divergent analysis is encountered for design cycles greater than 1,  the design move produced by previous
design cycle is cut by half and a new analysis is performed on the reduced design. This heuristic strategy will
be consecutively for five design cycles. I f the nonlinear analysis still fails to converge, the job will be
terminated.
Implementation
The ESLNRO capability is implemented in MSC Nastran environment with nonlinear solver SOL 400, a
comprehensive and sophisticated nonlinear solution sequence that can deal with general applications with
geometric, material and boundary nonlinearities . The design logic for ESLNRO is shown in Figure 9-10.            ****************************************************************************
ESLNRO CONVERGENCE ACHIEVED ON THE FOLLOWING CRITERIA
(HARD CONVERGENCE DECISION LOGIC)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;             1)  MAXIMUM OF RELATIVE D.V. CHANGES = EEEEEEEEEEEE IS LESS THAN 
                 EEEEEEEEEEEE FOR 2 CONSECUTIVE ESLNRO DESIGN CYCLES;
  
                                      --- OR ---
  
             2)  TWO CONSECUTIVE LINEAR RESPONSE OPTIMIZATION RUNS ACHIEVED 
                 HARD CONVERENCE IN A SINGLE DESIGN CYCLE.
  
                                      --- OR ---
  
             3) FFFFFFFF% OF DESIGNED ELEMENTS OR IIIIIIII DESIGNED ELEMENTS HAVE 
               THE RELATIVE VALUE CHANGE THAT IS LESS THAN THE EEEEEEEE (CONVDV).
               THE HARD CONVERGENCE IS ARCHIEVED IF IT EXCEEDS FFFFFFFF% (TOPOCONV).
           ****************************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;625 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
Note that only a single user input file is required that specifies the nonlinear analysis model as well as the
design model with its design variables and constraints. However, internally, a multiple Nastran invocation
strategy is used to bring SOL 400 and SOL 200 together to provide an integrated solution to the design task.
Specifically, a dashed frame as shown in Figure 9-10 forms the main ESLNRO loop in which the iterative
solutions of linear sub-optimization problems are obtained through SOL 200 and SOL 400. The
communication between the main driver, the SOL 400 and SOL 200 runs are established through various
intermediate files. Outputs  and Guidelines and Limitations  will describe them and discuss how to manage
these files.
Figure 9-12  Program Flowchart
Input
In general, the required user input to perform an ESLNRO task is to add a design model definition to an
existing SOL 400 job. The detailed description will be shown in Examples . Here, several new types of input,
which may be required to perform ESLNRO tasks are described.
1.Activation of ESLNRO
To invoke ESLNRO, you are required to specify a Nastran ESLOPT statement.                             or        &lt;br&gt;
? DSMXESLkndvi DVi , 1 ?,  Program Flow Chart
A User Submits A Single Input File (SOL400 + Design Model)&lt;br&gt;
The single file is partitioned into two files:&lt;br&gt;
deslo_nlsol400.dat and deslo_eslsol200.dat
Launch SOL400 to perform nonlinear analysis
li
Update Design Variable Bounds&lt;br&gt;
Yes STOP Create design
history table
and clean up
files
No , k=k+1 Launch SOL200 to perform a linear response optimization  Generate Equivalent Static Loads k=0
X(new) ESLNRO loo p&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)626
Main Index
Example, to activate ESLNRO, use
Nastran ESLNRO = 1 or
Nastran system(443) = 1
2.Control parameters for ESLNRO tasks
New parameters, DELXESL and DSMXESL are added to the DOPTPRM entry. DELXESL is used
to control how much a design variable can move during a ESLNRO design cycle while DSMXESL is
the maximum allowable number of design cycles.
3.Definition of designed properties
Element property entries such as PBEAM, PROD, PSHELL and PTUBE can be specified on a
DVPRELi entry. The associated nonlinear element types are: CBEAM(94), CONROD(92),
CQUAD4(90), CQUADR(173), CROD(89), CTRIA3(88), CTRIAR(174), CTUBE(87). The
property names on these entries that can be referenced on a DVPRELi entry shown in the following
table:
DVMRELi and DVCRELi entries are not supported.System Cell Name
(Number) Function and Reference
ESLOPT (443) Flag to invoke ESLNRO concept of Equivalent Static Loads
0 – No ESLNRO, default
1 – T urn on ESLNRO
Name Description, Type, and Default Value
DELXESL Fractional change allowed in each design variable during the ESLNRO loop
(Real &amp;gt; 0.0, Default = 0.5)
DSMXESL Maximum number of design cycles applied to the ESLNRO loop (Integer &amp;gt; 0,
Default = 20).
Property Entry Property
PBEAM (A(i), I1(i), I2(i), I12(i), J(i), NSM(i), C1(i), C2(i), D1(I), D2(i), E1(i),
E2(i), F1(i), F2(i), (i=A, B, 1 &amp;hellip; 9)), K1, K2, S1, S2, (NSI(j), CW(j), M1(j),
M2(j), N1(j), N2(j), j=A, B)
PROD A, J, C, NSM&lt;br&gt;
PSHELL T, 12I/T&lt;strong&gt;3, TS/T, NSM, Z1, Z2 (The 12I/T&lt;/strong&gt;3 term can be designed but
must be referenced by Field ID=6 rather than by name.)
PTUBE OD, T , NSM&lt;/p&gt;
&lt;p&gt;627 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
4.New input for defining nonlinear responses with a DRESP1 Bulk Data entry
The displacement response is identified on a DRESP1 by RTYPE=DISP while the stress response is
identified by RTYPE=STRESS. The linear displacement response on a DRESP1 can be used to define
a nonlinear displacement response. However, defining nonlinear stress response requires specifying a
nonlinear stress item code on the ATTA field of a DRESP1 entry. These stress item codes can be
found in Element Stress (or Strain) Item Codes  in the MSC Nastran Quick Reference Guide .
Stress responses from the following nonlinear elements are supported: BEAM(94), QUAD4(90),
TRIA3(88), QUADR(172), TRIAR(173), HEXA(93), PENTA(91), TETRA(85). In order to ensure
to support the nonlinear stress responses that have the equivalent linear stress responses, the nonlinear
element stresses are categorized into three groups:
a.the stress having the same name and same meaning as those in the linear element stresses;
b.the stress having the different name but having the same meaning; and
c.the stress having the different name and different meaning.
Only the stresses in groups-a and-b can be specified on a DRESP1 entry. The following lists the
stresses from Groups-b and -c for supported nonlinear elements. For example, the Equivalent Stress
is a group-b stress because it is equivalent to the von Mises stress in a linear element although their
names are different. However, total strain, effective plastic strain and effective creep strain (as shown
in bold italic ) cannot be specified on a DRESP1 entry because they do not have linear equivalents.
Nonlinear 2D
QUAD4 (90) (equivalent stress) ( effective plastic strain, effective creep strain )
TRIA3(88) (equivalent stress) ( effective plastic strain, effective creep strain )
QUADR(172) (equivalent stress) ( effective plastic strain, effective creep strain )
TRIAR(173) (equivalent stress) ( effective plastic strain, effective creep strain )
Nonlinear 3D
Hexa (93) (effective stress), ( effective plastic strain, effective creep strain )
Penta (91) (effective stress), ( effective plastic strain, effective creep strain )
Tetra (85) (effective stress), ( effective plastic strain, effective creep strain )
5.ESL Bulk Data Parameters
Option to save ESLNRO intermediate files on disk
PARAM,ESLFSAV,character string (character, Default = NO)
ESLFSAV = YES requests that all the intermediate files from an ESLNRO job be saved on disk. The
destination of these files can be directed with the ‘sdir=’ option on a Nastran submittal command line.
Selection of move limit schemes
PARAM,ESLMOVE,Integer, Default = 0
ESLMOVE = 0 selects a move limit scheme that poses restrict lower and upper bounds on design
variables during the linear response optimization. ESLMOVE = 1 selects a move limit scheme that
scales back the design move proposed from a linear response optimization.
User-supplied RC file&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)628
Main Index
PARAM,ESLRCF,filename (Char*8, must be lower case). Default = blank
New Bulk Data parameter entry, PARAM,ESLRCF,filename allows the user-supplied RC file for the
internally spawned jobs where filename is a character string up to 8 characters. Only lower case is
supported.
Example:
PARAM,ESLRCF, myrc where myrc is the name of the user-supplied RC file with the following
contents:
MEM=200m
EXE=~local_path/MSCNASTRAN
DEL=~local_path/SSS
The example shows a user-supplied RC file that requests each spawned SOL 200 or SOL 400 job be run with
memory allocation of 200 million words per run and with executable and delivery database.
ESLLCOMP  &lt;br&gt;
Default = NO
ESLLCOMP selects types of compliance response to be included in the design task. The nonlinear
compliance response is defined using a DRESP1 entry with RTYPE=COMP for the ESLNRO topology
optimization tasks. As the default, it is computed by the product of the applied nonlinear loads and
corresponding nonlinear displacement components. Alternatively, ESLLCOMP=YES selects a linear
compliance response that computed as the total work done by the equivalent static loads on the linear system.
ESLMPC1  &lt;br&gt;
Default = 0
This parameter applies only to the ESLNRO jobs with 3D contact. Its default has different meanings
depending on the type of contact applications. As the default, for a glued contact ESLNRO job, a linear
response optimization task will include a set of MPC entries that are created from the nonlinear analysis. For
a touching contact ESLNRO job, the linear response optimization task will not include the MPC entries by
default. Setting ESLMPC1 to a positive number will turn on the MPC inclusion.
ESLMPC1 = 1: uses the MPC entries created from the nonlinear analysis at the converged nonlinear analysis.
ESLMPC1 = 2  uses the MPC entries created at the beginning of the very first nonlinear analysis
ESLOPTEX
Default = 0
The parameter allows the user to perform an ESLNRO job at a targeted exit point. The allowable values of
ESLOPTX are listed below with their description.
0   -   Do not exit. Proceed with ESLNRO nonlinear response optimization.
1   -   Exit after the initialization of the analysis and design model but before nonlinear FE analysis
begins.
2   -   Exit after nonlinear FE analysis ends.
3   -   Exit after design constraint evaluation and screening.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P33</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_033/</guid>
      <description>
        
        
        &lt;p&gt;629 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
ESLPRT
Default = 0
ESLPRT specifies how often the ESLNRO results are printed in the f06 file and saved in the xdb file. By
default, the program will print the results to the f06 file at the first and the last design cycles and save the
results to xdb (or op2) at the first and last design cycles on the disk  (See ESLPRT1 for selection of result
contents).
ESLPRT &amp;gt; 0, then the results are printed at the first design cycle; at every design cycle that is a multiplier of
ESLPRT; and the last design cycle.
ESLPRT &amp;lt; 0, the no results are printed and saved.
ESLPRT1
Default = 7
ESLPRT1 specifies what type of results to be written to the f06 and to xdb (or op2). It may take any of the
following base values or to a combination of these base values.
ESLPRT1 = 0, write no data.
ESLPRT1 = 1, write the nonlinear analysis results to the f06 file.
ESLPRT1 = 2, write the optimization data controlled by P1 and P2 to the f06 file.
ESLPRT1 = 4, save the nonlinear analysis results to the xdb (or op2) file.
ESLPRT1 = 8, save the linear response optimization results to the xdb (or op2) file.
For example, by default, results from the nonlinear analysis, the optimization data will be written to the f06
file and result data will be written to xdb or op2.
ESLUNT1, ESLUNT2
Default = 53, 54
File units are used to store and retrieve design variables and design properties for ESLNRO topology
optimization tasks.
TOPOCONV
Default = 80
Parameter TOPOCONV is applicable only to ESLNRO topology optimization tasks. It sets a lower bound
for the percentage of the design variables whose maximum relative changes are within the tolerance specified
by CONVDV on the DOPTPRM entry.
By default, when more than 80% of the design variables show their maximum relative changes are
within CONVDV, the job will be terminated.
Outputs
During the ESLNRO job, in addition to the primary Nastran result files (e.g., .f06, .f04 and log), files are
generated internally for communications between the main driver and nonlinear analyses (SOL 400 run) and
linear response optimizations (SOL 200 runs). These are temporary files and will be removed at the job’s&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)630
Main Index
completion by default. However, the user can use PARAM,ESLFSAV,YES to save them on the disk if
necessary.
These two types of files will be described using a user input file named deslo.dat.
The Primary Nastran Result Files (deslo.f06, .f04, log, etc.)
These are regular output files from a Nastran job and follow the MSC Nastran naming conventions such as
.f04, .f06 and log files. The .f06 file contains certain messages that are unique to an ESLNRO job. For
example, the following information messages are printed in the .f06 file for each design cycle to provide a
brief description of the ESLNRO process:
If a nonlinear analysis job is unable to converge and is terminated at design cycle 11 in the ESLNRO loop,
the following User Information Message 6464 will be printed out in the deslo.f06 file. In addition, the
deslo.f06 will also include the additional information on the lack of convergence is printed in the regular
SOL 400 .f06 file (not shown).
In addition, for initial design cycle and final design cycle, the results from nonlinear analysis tasks and the
optimization output data controlled by P1 and P2 on the DOPTPRM entry are always printed out in the
.f06 file. However, no results output are printed in the .f06 file for the intermediate design cycles.
At the end of the design cycle, a summary of design cycle history and design variable history are printed in
the .f06 file. If you are familiar with a SOL 200 job, they look very much like the design history tables from
an SOL 200 task. Here is the sample printout of the summary of design cycle history.                                         *****************************************************
*                                                                       *
*  E S L N R O  D E S I G N  C Y C L E  =  11 *
*                                                                       *
*****************************************************
^^^ A NONLINEAR ANALYSIS JOB INITIATED WITH FOLLOWING COMMAND:
/nast/MSC20071t1/linux64/nastran /scratch/./deslo_nlsol400 scr=yes bat=no rcf=my.rc out=/scratch/./deslo_nlsol400
^^^ A NONLINEAR ANALYSIS JOB FOR THE ESLNRO COMPLETED.
^^^ A LINEAR OPTIMIZATION JOB INITIATED WITH FOLLOWING COMMAND:
/nast/MSC20071t1/linux64/nastran /scratch/./deslo_eslsol200 scr=yes bat=no rcf=my.rc
out=/scratch/./deslo_eslsol200
^^^ A LINEAR OPTIMIZATION JOB FOR THE ESLNRO COMPLETED.
^^^ NO HARD CONVERGENCE IS ACHIEVED IN THE ESLNRO LOOP. JOB CONTINUES
*** USER INFORMATION MESSAGE 6464 (DELSOPT)
RUN TERMINATED DUE TO NONLINEAR ANALYSIS JOB UNABLE TO CONVERGE AT DESIGN CYCLE = 11.&lt;/p&gt;
&lt;h2&gt;631 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
The Internally Spawned Files
Two user input files, one for the SOL 400 run and one for the SOL 200 run are internally generated derived
from the primary user input file: deslo_nlsol400.dat and deslo_eslsol200.dat. deslo is the name of the primary
user input file and _nlsol400 and _eslsol200 are suffixes to distinguish a SOL 400 job from a SOL 200 job.
Each has a unique Executive Control Section and a Case Control Section. Each file also has unique Bulk Data
entries and shares a portion of common Bulk Data entries.
Detailed descriptions of two user input files are as follows. Notice multiple INCLUDE entries are used to
facilitate sharing common Bulk Data entries among two jobs, updating DESVAR entries or GRID entries
for shape optimization at the end of each design cycle without the need to changing the actual input files.
Description of a SOL 400 Input File (deslo_nlsol400.dat)
SOL 400
CEND
include &amp;lsquo;$sdir/deslo_nlsub.cas&amp;rsquo;  $ = original subcase contents minus DESOBJ/DESSUB/DRSPAN
BEGIN BULK
include ‘$sdir/deslo_grid.blk&amp;rsquo;  $ = all GRID entries. Original entries for initial design cycle and updated
entries for design cycle&amp;gt;1.
include ‘$sdir/deslo_desmod.blk&amp;rsquo; $ = all design model Bulk Data entries except DESVAR entries
include ‘$sdir/deslo_desvar.blk&amp;rsquo;  $ = all DESVAR entries
include &amp;lsquo;$sdir/deslo_nlmat.blk&amp;rsquo;    $ = nonlinear material entries such as MATS1, MATEP ,MATF , NLPARM
include &amp;lsquo;$sdir/deslo_loads.blk&amp;rsquo;    $ = the original loading Bulk Data entries.
include ‘$sdir/deslo_model’ $ = the remaining portion of the original Bulk Data entries
ENDDATA
Description of a SOL 200 Input File (deslo_eslsol200.dat)
SOL 200
CEND
include &amp;lsquo;$sdir/deslo_eslsub.cas&amp;rsquo;  $ = ESL Subcases + DESOBJ/DESSUB/DRSPAN
BEGIN BULK
include ‘$sdir/deslo_grid.blk&amp;rsquo;  $ = all GRID entries. Original entries for initial design cycle and updated
entries for design cycle&amp;gt;1.
include &amp;lsquo;$sdir/deslo_desmod.blk&amp;rsquo;   $ = all design model entries except DESVARs
include &amp;lsquo;$sdir/deslo_desvar.blk&amp;rsquo;    $ = all DESVARs entries
******************************************************************
S U M M A R Y   O F   D E S I G N    C Y C L E    H I S T O R Y
******************************************************************
(HARD CONVERGENCE ACHIEVED)
NUMBER OF NONLINEAR FINITE ELEMENT ANALYSES COMPLETED   38
NUMBER OF OPTIMIZATIONS W.R.T. LINEAR MODELS            37
OBJECTIVE AND MAXIMUM CONSTRAINT HISTORY&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;objective-and-maximum-constraint-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#objective-and-maximum-constraint-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;         OBJECTIVE FROM           OBJECTIVE FROM          FRACTIONAL ERROR          MAXIMUM VALUE  
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;CYCLE         LINEAR MODEL                EXACT                    OF                       OF
NUMBER        OPTIMIZATION               ANALYSIS              LINEAR MODEL              CONSTRAINT&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;number--------optimization---------------analysis--------------linear-model--------------constraint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#number--------optimization---------------analysis--------------linear-model--------------constraint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;INITIAL                          2.630691E-01                               4.676274E-01
1          3.190933E-01          2.742739E-01         1.634111E-01          1.778786E-01&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)632
Main Index
include ‘$sdir/deslo_esl’ $ = Equivalent Static Loads Bulk Data entries
include ‘$sdir/deslo_model’ $ = the remaining portion of the original bulk data entries
All the intermediate files are stored in the same Nastran scratch directory defined by environment variable
$sdir. It could be reset on the Nastran command line with sdir=local-path-directory. If SCR option is set to
Yes, they will be removed from the directory after the ESLNRO job is complete. If SCR is set to No, they
will be saved in the directory.
Descriptions of Individual Include Files
Guidelines and Limitations
To invoke the ESLNRO capability, set NASTRAN ESLOPT = 1 at the top of your input file.
When you start an ESLNRO job, make sure the directory that will store the intermediate files does
not contain any intermediate files from the previous ESLNRO run.
You can specify your own RC file for these internally spawned SOL 200 or SOL 400 jobs using
PARAM,ESLRCF, RC_ File_Name  to allocate more memory or for other purposes. deslo_nlsub.cas This file contains the original contents of the Case Control Section used by
a SOL 400 run.
deslo_eslsub.cas This file defines SUBCASES that reference load cases corresponding to the
same number of Equivalent Static Loads. It is generated by the SOL 400 run
and will be used by a SOL 200 job.
deslo_desmod.blk This file contains all the design entries except DESVAR entries and is used
by both a SOL 200 job and a SOL 400 job.
deslo_desvar.blk This file contains all the initial DESVAR entries for the initial design cycle.
For design cycle &amp;gt; 1, it contains updated DESVAR entries. The file is used
by both SOL 200 and SOL 400 runs.
deslo_grid.blk The file contains all the initial GRID entries at the initial design cycle. For
shape optimization it contains the updated GRID entries for design cycle &amp;gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is used by both jobs.
deslo_loads.blk The file contains the loads Bulk Data entries from the original user input file.
It is only used by a SOL 400 job.
deslo_esl.blk The file contains the loads Bulk Data entries for the Equivalent Static Loads.
It is generated by a SOL 400 run at every design cycle and is only used by a
SOL 200 job.
deslo_nlmat.blk The file contains nonlinear analysis specific data such as nonlinear material
entries that are supported by this project such as MATEP , MATF , MATS1
and NLPARM and is used only by SOL 400 job.
deslo_model This file contains the remaining Bulk Data entries after the entries in
deslo_grid.blk, deslo_nlmat.blk and deslo_desmod.blk, deslo_desvar,
deslo_loads are excluded from the original Bulk Data Section and is used by
both jobs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;633 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
After an ESLNRO job is complete, a complete Bulk Data Section with updated element properties
entry or GRID and DESVAR entries for the last design cycle will be saved in the PCH file. In
addition, the history of design objective, maximum constraints and design variables are also saved in
the PCH file from which XY-Plots can be generated using spreadsheet program such as Microsoft
Excel.
If DRSPAN is used, PARAM, ESLLCOMP, YES must be included in your job for a job with a
compliance response (i.e., RTYPE=COMP on a DRESP1 entry).
Use smaller design move limits (both delxesl and delx) for the highly nonlinear ESLNRO tasks such
as topology optimization with large deformation.
For the design tasks that have a contact body relying on other contact body to prevent rigid body
motion, the MPC equations should be included in the linear optimization using PARAM,
ESLMPC1, 1. However, this setting does not produce good results as expected and requires more
studies.
Examples
Example 1 10 Bar Truss  (test library problem: deslo.dat)
This example demonstrates an ESLNRO optimization problem involving both geometric and material
nonlinear behavior. The design task is to minimize the structural weight while maintaining nonlinear nodal (cross sectional areas)
Find:
Minimize: Weight
j 220 MPa  (j = 1,&amp;hellip;,10 )
all 100.0 mm (both x and y directions of all nodes)
78.5 mm2  Xi 2826.0  mm2 (i = 1,&amp;hellip;,10 )&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)634
Main Index
displacements and element stresses within allowable limits. The job is terminated due to hard convergence to
a feasible design. The following data compare the results between the initial design and the final design.
Although both initial nonlinear displacement and stress constraints are violated, the final design is a feasible
design.
Max Deflection:    Optimized: -99.85, Initial -146.76 (lower limit is -100.0)
Max Axial Stress: Optimized: -218.26, Initial -283.99 (upper limit is 220.00)
Figure 9-13 shows the design history where an ESLNRO design cycle represents a nonlinear analysis followed
by a linear optimization task. Each linear optimization task typically has its own series of design cycles as in
a standard SOL 200 run. The blue line is for weight while the red line is for the maximum constraint. It is
seen that a feasible design is attained after 10 design cycles but that the weight continues to decrease so that
ultimately 37 design cycles are performed. Even for this small problem, it should be obvious that the number
of nonlinear analyses required to solve the problem are much fewer than would be required if a response
surface method approach had been used.
Figure 9-13  History of 10 Bar Truss Design
Example 2 Topology Optimization Problem with Large Deformation
(deslo9.dat, deslo9a.dat, deslo10.dat, deslo10a.dat and deslo9l.dat, deslo9al.dat )
This problem, originally published in Ref. 18., shows the necessity to include nonlinear analysis with topology
optimization when large deformation is involved. A rectangular plate is modeled with CQUAD4 elements
(not shown) and has the dimension of 0.8m by 0.2m by 0.001m. The middle points at both ends are fixed
except the z-rotational degree of freedom. A concentrated force is applied at the middle point on the top as
shown in Figure 9-14.&lt;/p&gt;
&lt;p&gt;635 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index
Figure 9-14  A Rectangular Plate Model
Figure 9-15  nitial Deformation Plot
The deformation of the initial model is plotted as shown in Figure 9-15. The maximum displacement occurs
at the loading point with the value of is 0.249m, about 2.5 times of the height of the plate. So this is a
nonlinear problem with a large deformation behavior.
The design task is to find an ‘optimal’ distribution of materials on this rectangular plate to minimize the
nonlinear compliance while maintaining 20% of the original weight under the large displacement condition.
First, a linear topology optimization job of the same model is solved with SOL 200 (deslo9l.dat). It converges
in 39 design cycles. The final configuration with is shown in Figure 9-16. The plot is created using Patran’s  
0.8m 0.2m 200.N &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)636
Main Index
DesignTool/Post-Process with the threshold value of 0.2. Let us call it the updated linear structure (or FE
model). One can see that the right and left arms of the updated linear structure are in compression under the
original loading condition.
Figure 9-16  Final configuration from linear topology optimization
Next, the same job is solved by the new ESLNRO capability under the large displacement condition
(deslo9.dat).
The job converges in 89 design cycles. Its final configuration is shown in Figure 9-17 that is created using
Patran’s Design Tool/Post-Process/Display Results with the threshold value of 0.2. We will call it the updated
nonlinear structure (or FE model). Notice the updated structure is in always tension.
Figure 9-17  Final configuration from nonlinear topology optimization
It is clear that the updated linear and nonlinear structures are very different. One may notice that under the
current loading condition (see Figure 9-14), a part of the updated linear structure is under compression while
the updated nonlinear structure is all in the tension. T o verify which structure is more capable of sustaining
the nonlinear load condition, Patran’s Group techniques are used to create an updated FE model for both the
linear and nonlinear structures as shown in Figure 9-16 and Figure 9-17. Next, the nonlinear analysis is
performed on each of the two structures with the original loading (deslo9al.dat and deslo9a.dat).
The final results are very enlightening: the updated linear FE structure collapses due to local buckling because
the right and left arms are in compression. On the other hand, the updated nonlinear FE model performs
well. Figure 9-18 plots the deformation from the updated nonlinear FE model under the original loading. The
maximum displacement of 0.0184m occurs at the loading point.
 
 &lt;/p&gt;
&lt;p&gt;637 Chapter 9: Special Topics
Optimization of Nonlinear Structural Responses (Pre-release)
Main Index&lt;/p&gt;
&lt;p&gt;Figure 9-18  Displacement plot of the updated nonlinear structure
This example shows that it is necessary to perform the topology optimization by including nonlinear analysis
responses.
Notice Ref. 18. published a final configuration that is given in Figure 9-19. It is significantly different from
both the updated linear structure and the updated nonlinear structure as shown in Figure 9-16 and Figure 9-17.
According to Ref. 17., this updated nonlinear structure also performs well under the original loading.
Figure 9-19  Final configuration obtained by Ref. 18.
It is natural to ask why it is significantly different from the updated nonlinear structure obtained by ESLNRO
(Figure 9-17). One explanation lies in that the objective function used by Ref. 18. is nonlinear mean
compliance that is the sum of nonlinear strain energy and complementary energy. However, the nonlinear
compliance response in the ESLNRO is the sum of the product of applied loads and the corresponding
nonlinear displacement components or the work done. In the linear analysis, the strain energy and its
complementary energy are same. So the total work done is twice the strain energy .
However, in the geometrically nonlinear analysis, the above relation does not hold. The nonlinear compliance
response defined in ESLNRO is different from the mean compliance response.
To carry out the study further, a new ESLNRO job is performed by setting DESMAX to 1. This enforces
that the linear optimization job is only carried out in one design cycle and it then immediately returns the
proposed new design back to the ESLNRO loop. A new set of equivalent static loads will be generated from
the updated nonlinear analysis. The purpose of this exercise is to update the equivalent static loads as much
 
 &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization of Nonlinear Structural Responses (Pre-release)638
Main Index
as possible since the equivalent static loads in a linear optimization is invariant. The final configuration based
on this strategy is shown in Figure 9-18. The final configuration agrees well with the published results (See
Figure 9-19) except two small closed loops are formed at the bottom of the structure. Figure 10 is created using
Patran’s Design T ool/Post-Process/Display Results with the threshold value of 0.2.  It should be pointed out
that this run does not achieve hard convergence. Instead, it is terminated after 5 consecutive nonlinear
analyses unable to find a converged solution.&lt;/p&gt;
&lt;p&gt;Figure 9-20  Plot of displacement for the alternate updated nonlinear structure
Furthermore, an independent nonlinear analysis is performed for the updated nonlinear FE model under the
original loading (deslo10a.dat). The deformation plot from this nonlinear analysis is shown in Figure 9-21
with the maximum displacement of 0.021m that occurs at the loading point.&lt;/p&gt;
&lt;p&gt;Figure 9-21  Plot of displacement for the alternate updated nonlinear structure
From this example, we have learned that it is important and necessary to perform the topology optimization
by including large displacement as nonlinear responses. In addition, if measured in terms of the maximum
displacement, both updated nonlinear structures from Figure 9-17 and Figure 9-20 are close, 0.0184m vs.
0.021m. However, their configurations are significantly different. Therefore, the nonlinear topology
optimization tasks are more difficult to solve than the linear ones because it not only tends to show the local
minima phenomenon but also the nonlinear analyses may not lead to convergent solution because the
collection of elements with lower strain energy or ‘empty’ elements.&lt;/p&gt;
&lt;p&gt;639 Chapter 9: Special Topics
Solving Large Problems in SOL 200
Main Index
Solving Large Problems in SOL 200
This section deals with some specialized techniques that are available in MSC Nastran for solving large finite
element tasks. T wo techniques, DMP (distributed memory parallel) and ACMS (automated component
modal synthesis) are discussed here briefly to show the impact they can make of optimization tasks. Parallel
design sensitivity analysis (DSA) can reduce clock time spent in a sensitivity analysis.
Three distributed memory parallel (DMP) techniques are available for SOL 200: internal parallel for FRRD1
module, frequency domain parallel Lanczos method and degrees-of-freedom (DOF) domain parallel Lanczos
method.
Internal Parallel for FRRD1 Module
FRRD1 is the solution generator for frequency response analysis. For each forcing frequency, FRRD1 goes
through identical steps to produce solution vector(s). Therefore, the work assigned to each processor is equal
to the total number of forcing frequencies (NF) divided by the number of processors (NP). If the results of
NF divided by NP is not an integer, one or more processors will need to pick up one extra forcing frequency.
Hence, the maximum load unbalance among all processors in “internal parallel for FRRD1 module” is the
solution time for one forcing frequency. Although this DMP technique is supported in both direct frequency
(DFREQ) and modal frequency (MFREQ), it has the biggest impact for DFREQ jobs.
To request NP number of processors for frequency response SOL 200 job, add ‘dmp=NP’ to the job submittal
line.
As an illustrative example, a vehicle model with a half million DOFs in the analysis set has been exercised
using a varying number of processors. The direct frequency analysis has 12 forcing frequencies. A
performance study on an IBM SP3 produced the following results.
Overhead for DMP in FRRD1 occurs at the beginning and the end of FRRD1. Note that the overhead can
be greatly influenced by the workload of the system and network. The overhead is shown here is to indicate
that the overhead can become significant and the effectiveness of DMP reduces as the number of processors
increases. In this case, the FRRD1 module dominates the overall computing requirements so that there is a
significant payoff from running this module in the parallel mode. Note:   It is possible to select nodes for the DMP job. The defaults for the hosts are machine
dependent. See “hosts” in Keywords and Environment Variables (App. C) of your latest MSC
Nastran Installation and Operations Guide for more details.
Number of
ProcessorsTotal Elapsed Time Speed-upElapsed Time in
FRRD1Overhead for DMP in
FRRD1
1 252 min. 9 sec. 1 208 min. 4 sec. 0
2 139 min. 48 sec. 1.8 105 min. 44 sec. 9 min. 25 sec.
4 101 min. 29 sec. 2.5 67 min. 16 sec. 16 min. 6 sec.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Solving Large Problems in SOL 200640
Main Index
Frequency Domain Parallel Lanczos Method
Frequency domain parallel Lanczos in SOL 200 is available for ANALYSIS= MODES and other analyses that
use the modal formulation (ANALYSIS=MFREQ, MTRANS, MCEIG and FLUTTER) .
The following Executive Control Statement
DOMAINSOLVER MODES (PARTOPT=FREQ)
must be added to the beginning of the Executive Control Section.
For example:
NASTRAN buffsize=16385 $
domainsolver  modes (partopt=freq) $
SOL 200
Furthermore, the number of processors (NP) must be specified using the ‘dmp=NP’ keyword on the
submittal line. The Lanczos method must be used.
A vehicle model with a half million DOFs in the analysis set is used to indicate of benefits of frequency
domain parallel Lanczos. This is an MFREQ job with 12 forcing frequencies. A performance study on an
IBM SP3 produced the following results:
In this case, the READ module is less dominant in the overall total job elapsed time, but there is still a
significant speedup with more processors.
DOF Domain Parallel Lanczos Method
The DOF domain parallel Lanczos method is an alternative technique for extracting eigenvalues in parallel
mode. SOL 200 also supports this option for ANALYSIS = MODES and other analyses that use the modal
formulation (MFREQ, MTRANS, MCEIG, and FLUTTER).
The following Executive Control Statement
DOMAINSOLVER MODES (PARTOPT=DOF) $
must be added to the beginning of the Executive Control Section.
For example:
NASTRAN buffsize=16385 $
domainsolver modes (partopt=dof) $
SOL 200
The number of processors (NP) must be specified using the ‘dmp=NP’ keyword on the submittal line. The
Lanczos eigenvalue method must be used.Number of
Processors Total Elapsed Time Speed-up Elapsed Time in READ Module
1 245 min. 27 sec. 1 178 min. 57 sec.
2 217 min. 45 sec. 1.13 133 min. 16 sec.
4 158 min. 43 sec. 1.55 79 min. 35 sec.&lt;/p&gt;
&lt;p&gt;641 Chapter 9: Special Topics
Solving Large Problems in SOL 200
Main Index
A vehicle model with a half million DOFs in the analysis set is again used for this example. This is an MFREQ
job and has 12 forcing frequencies. A performance study on an IBM SP3 produced the following results:
Parallel Sensitivities
Introduction
Design sensitivity calculations may be performed in a distributed parallel environment in SOL 200 of MSC
Nastran. It is a coarse parallel implementation that divides the sensitivity task across a number of processors
so that each processes a subset of the total number of design variables. Following the sensitivity analysis and
before optimization, the separate sensitivity data are appended into a global sensitivity set.
Benefits
This feature is aimed at users who are currently spending significant time in the sensitivity phase of an
optimization design task. This typically occurs when the problem size (g-size) is large, there are many
(perhaps thousands) of design variables and the adjoint method of sensitivity analysis is either unavailable or
still time consuming.
User Interface
Inputs
1.Specify the DOMAINSOLVER  Executive Control statement with the new DSA keyword. For example:
DOMAINSOLVER DSA
Other DOMAINSOLVER  options like ACMS , FREQ , and MODES  may also be specified or modified along
with DSA.
For example,
DOMAINSOLVER DSA ACMS
By default, DOMAINSOLVER  options MODES  and FREQ  are always on with dmp keyword on the
Nastran submittal command.
2.Specify the dmp=n  keyword on the Nastran submittal command; where n is the number of available
processors.
Outputs
There are no new outputs. It should be noted that with dmp=n, by default, only the parent p rocessor’s
output (f04 and f06) is saved. childout=yes  may be specified on the Nastran submittal command
to request the children’  output.Number of
ProcessorsElapsed Time Speed-upElapsed Time in READ
Module
1 245 min. 27 sec. 1 178 min. 57 sec.
2 228 min. 42 sec. 1.07 149 min. 40 sec.
4 188 min. 49 sec. 1.30 95 min. 3 sec.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Solving Large Problems in SOL 200642
Main Index
Matrix Domain Automated Component Modal Synthesis (MDACMS)
MDACMS is an advanced Lanczos solver introduced in MSC Nastran 2005. You can find a detailed
discussion in “ACMS Now Available in the Matrix (DOF) Domain” in the MSC Nastran 2005 Release Guide .
You can use this feature in a SOL 200 run by specifying the DOMAINSOLVER ACMS (partopt=dof)
command. It is available for Analysis=MODES and/or =MFREQ and both serial and parallel processing are
supported. A parallel run is activated when DMP = n and n &amp;gt; 1.
This feature has been tested with an NVH optimization task with a 4.2M dofs, for an eigenanalysis up to 300
Hz that produced 1960 modes. It is not practical to execute this problem without the use of an advanced
numerical technique. Three separate runs were performed. The following plot shows that a parallel (4
processor) MDACMS SOL 200 job achieves more than 6 times speedup relative to a Geometric Domain
ACMS (GDACMS); DOMAINSOLVER ACMS (partopt = grid) SOL 200 run (reduced time from 37
hours to 6 hours) while the serial MDACMS SOL 200 run reduces to 14 Hrs for a 2.5 times speedup.
GDACMS is now regarded as an obsolete capability.
MDACMS vs. GDACMS in SOL200
1437
632
14
5
0510152025303540
GDACMS MDACMS(S) MDACMS(P)Elapsed Time (Hour)
One Design Cycle One FE Analysis&lt;/p&gt;
&lt;p&gt;643 Chapter 9: Special Topics
Special Considerations When Designing One-Dimensional Bending Elements
Main Index
Special Considerations When Designing One-
Dimensional Bending Elements
The seemingly simple BAR and BEAM straight 1-D bending elements in MSC Nastran have some special
behaviors that need to be pointed out if they are to be effectively designed. To begin, there are six property
types that are associated with these elements:
1.The PBAR defines basic bending properties of a CBAR element.
2.The PBARL defines dimensions of MSC supplied or user-supplied section types for the CBAR
element.
3.The PBRSECT enables the definition of arbitrary cross sections for CBAR elements by specification
of section type and sets of data that define the boundaries.
4.The PBEAM defines bending properties for a more complete 1-D element in that it allows definition
of the shear center, the neutral axis, center of gravity, warping and taper. The PBEAM property entry
is referenced by the CBEAM. The taper, in particular, makes the design of the PBEAM somewhat
complicated, although MSC has greatly simplified the design model requirements for the PBEAM in
recent releases.
5.The PBEAML defines dimension of MSC provided or user-supplied section types for the CBEAM
element. The availability of these libraries greatly simplifies the data preparation required from the
user. All of the features of the PBEAM, including taper, are available with the PBEAML.
6.The PBMSECT enables the definition of arbitrary cross sections for CBEAM elements by
specification of section type and sets of data that define its boundaries.
For all of the discussion of this section, the design is assumed to be performed using the PNAME option for
the fifth field of the DVPREL1 and DVPREL2 entries. The alternative specification of an FID or and EPT
location is deemed obsolete.
PBAR
The design of the PBAR is straightforward. Typically, the user’s design variables are cross-sectional
dimensions, necessitating the use of type-2 properties in specifying the properties as a function of the design
variables. The following considerations can be mentioned when designing PBARs:
Only use type-2 properties when they are needed. This is because each type-2 property is treated as
an additional design variable in the design sensitivity process (this is discussed in Internal
Representation of the Sensitivity Coefficients in MSC Nastran  on pp. 53-54). This places a
performance and numerical accuracy burden on the sensitivity analysis.
Keep in mind that changing a beam dimension affects not only the standard properties such as area
and moments of inertia, but also the stress recovery locations as well. These latter properties are
typically linear in the cross section dimensions and can therefore be designed using the DVPREL1
entry.
The generality of the PBAR makes it possible to make assumptions about the relationships among the section
properties. One could postulate, for example, a thin-walled beam where, to a first approximation, all the
properties are linear in terms of the wall thickness. Alternatively, one could select the area of the beam as the&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Special Considerations When Designing One-Dimensional Bending Elements644
Main Index
design variable and then specify that the bending moment of inertia is proportional to the square root of the
area.
PBARL
The design of the PBARL is the easiest from the user’s point of view. Typically, the user specifies designed
beam dimensions as linear functions of the design variables (nonlinear functions of beam dimensions with
respect to the design variables are not permitted) and the rest of the design is performed internally. An
important consideration is that these internal calculations can be done in one of two ways. If the MDLPRM
bulk data entry has TWBRBML=1, then the beam library formulations are used to evaluate bar properties
and their sensitivities. If this parameter is not set, the bar properties are computed using the same finite
element technology that is employed in creating these properties for the PBRSECT bulk data entry. There is
a tradeoff in whether to use the library approach or the finite element approach in that the finite element
method is considered more accurate but the sensitivity calculation, which uses differencing techniques for all
the properties, is computationally more expensive. The guideline is that the default finite element approach
be used unless performance issues make this prohibitive. The remainder of this discussion deals with issues
associated with the beam library approach.
Adding Your Own Beam Cross-Section Library  describes how you can add your own beam cross section types
and it provides insight into the operations that must occur to cause a change in the beam dimension to be
reflected in the beam properties. Briefly, MSC Nastran determines which properties of the beam cross section
are affected by each design variable and constructs what are referred to as “spawned” design properties to be
used in the design. These are properties that have not been explicitly designed by the user, but can be inferred
from the property/dimension relationship. A determination is made if this property/dimension relationship
is linear or nonlinear so as to use the less expensive and more exact linear relationship when it is valid.
A drawback of using the PBARL is that it can produce more designed properties than may be necessary for
the design task at hand. For example, the torsional stiffness of the BAR may have no effect on the response
of the structure and a user might not include its design when a PBAR is used. The PBARL will always design
this property if it is affected by a designed dimension. Perhaps a better example of this is that stress recovery
locations that are affected by a designed PBARL dimension are always designed while a user may find it
necessary only to define one or two of these points. In most cases, the design of these extra properties is not
a large concern, but it does become an issue when hundreds of PBARL’s are being designed in a large finite
element model.
PBRSECT
Arbitrary Beam Cross-section
Arbitrary beam cross-section, ABCS, capability has been implemented via Bulk Data entries, PBRSECT and
PBMSECT . There are three FORMs to describe arbitrary beam cross section with PBMSECT/PBRSECT ,
namely GS, CP and OP .   For design optimization analysis, data items from PBRSECT and PBMSECT
entries can be referenced by the design variable property relation entries, DVPREL1/DVPREL2.  Data items
that can be considered as design variables in the design optimization analysis include:
Overall Width - input W for PNAME field of DVPREL1/2. Overall width is computed as X1max-
X1min. Both X1max and X1min are obtained by examining X1 field of all POINT entries
referenced by a PBMSECT/PBRSECT. This data item is available for GS, CP, and OP.&lt;/p&gt;
&lt;p&gt;645 Chapter 9: Special Topics
Special Considerations When Designing One-Dimensional Bending Elements
Main Index
Overall Height - input H for PNAME field of DVPREL1/2. Overall width is computed as X2max-
X2min. Both X2max and X2min are obtained by examining X2 field of all POINT entries
referenced by a PBMSECT/PBRSECT.  This data item is  available for GS, CP, and OP.
Overall or Segment Thickness - input T or T(id) for PNAME field of DVPREL1/2. This data item
is available only for CP and OP.
Following response types can be utilized for design constraints,
RTYPE=STRESS  for regular stress recovery points of BAR and BEAM element, namely  C, D, E and
F. Note that the coordinates of the stress recovery points are selected by internal logic which pick
POINTs with extreme coordinates.  Use item code for CBAR(34) and CBEAM(2).
RTYPE=ABSTRESS for screened BAR/BEAM element stresses.  ABSTRESS is computed only for
BAR and BEAM elements referencing PBRSECT and PBMSECT, respectively. Use item code for
CBAR(238) and CBEAM(239).
Guidelines and limitations:
New PBRSECT, PBMSECT, and POINT entries can be punched after each design cycle.  Note that
connecting overall-Width and/or overall-Height to design variables has the effect of changing the
location of POINTs defining an ABCS, even though POINT itself can&amp;rsquo;t be linked directly to design
variable.
FEM is utilized to compute cross sectional properties of ABCS.  During internal iterations of
optimizer, FEM solution process is used repeatedly to compute properties of new designs.  The cost
(CPU time spent) of optimizer for a job with ABCS as design variables can become prohibitively
high.  To alleviate the cost concern, &amp;lsquo;PARAM,DV3PASS&amp;rsquo; can be utilized to control the frequency of
re-evaluation of sensitivity coefficients of ABCS sectional properties.
Current implementation of optimization does not support composite ABCS via
&amp;lsquo;PARAM,ARBMSTYP,TIMOSHEN(or TIMOFORC)&amp;rsquo;.
PBEAM
The design of the PBEAM is complicated by the possibility that the beam can be tapered. The original
requirements for designing the PBEAM were quite involved and non-intuitive, but MSC has simplified these
requirements so that the design of constant section PBEAMs follows the same basic procedures as those for
the PBAR. Older documentation that refers to the need to, for example, design both ends of a constant
section beam is now obsolete and is superseded by this document.
When designing a tapered beam property, the station is identified in parenthesis. As examples, specifying
A(A) or A on a DVPREL1 or DVPREL2 entry indicates that area of end A of the beam is to be designed,
I1(B) indicates that the plane-1 inertia at end B is to be designed while D2(6) indicates that the z-location at
the D stress recovery point for the 6th station is being designed.
As mentioned, the design of constant section beams is now quite similar to that for the PBAR. It should be
kept in mind that the user input for the PBEAM is used to determine whether a beam can be tapered. If only
END A data are provided on the PBEAM entry, the beam is regarded as constant section and only END A
properties can be designed. Similarly, if END B or other station data are provided on the PBEAM entry, the
beam is regarded as tapered and care must be taken to explicitly design each property that is expected to vary.
As a final comment, if the PBEAM contains specification of SO and X/XB for END B and other stations but&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization646
Main Index
blank fields are used to specify the properties, the beam is still regarded as a constant section. This input can
be used when it is desired to obtain stress output for a constant section beam at an intermediate station.
PBEAML
The design of the PBEAML is much simpler than that of the PBEAM in that it is only necessary to indicate
which beam dimensions are to be changed and the beam library performs the remainder of the design task.
Adding Your Own Beam Cross-Section Library  can provide insight into how this design occurs. As with the
PBARL, it should be kept in mind that all the properties that are affected by the designed dimension will be
designed as well, regardless for whether the user feels this is important. For example, the DIM3 dimension
that specifies the height of an “H” type element affects the C1,D1,E1 and F1 stress data recovery locations
in a linear way and the A,I1,I2,J,K1,K2,CWA and CWB in a nonlinear fashion. It is likely that some of these
properties are not important in the design or perhaps the stress recovery points are redundant, but they will
be designed in any case. Again, this is not a significant issue unless the models are large with many designed
PBEAML entries.
The PBEAML can be tapered and it is the PBEAML entry that governs whether the beam is permitted to
taper. Like the PBEAM entry, if the PBEAML provides data at END B and/or other intermediate stations,
it is considered tapered. If there is only END A data, the beam is considered constant section and only END
A dimensions can be specified on DVPRELi entries. If the PBEAML is tapered, only dimensions explicitly
invoked on DVPRELi entries will be designed. One distinction between the PBEAM and PBEAML is with
regard to taper. As mentioned above, the PBEAM is considered a constant section if the only inputs at END
B and/or intermediate stations are SO and X/XB. For the PBEAML, if any input (including SO and X/XB)
is provided at END B or an intermediate station, the beam is considered tapered.
PBMSECT
The description of the PBRSECT above applies to the PBMSECT as well and are not repeated here. Unlike
the PBEAML, the PBMSECT does not support taper. The PBMSECT supports using composite materials
in its construction, but these features are not supported for design.
MultiOpt-Global Optimization and Multi Model
Optimization
Introduction
The MSC Nastran utility MultiOpt was released in MSC Nastran 2010 to support Multiple Model
Optimization (MMO) that combines two or more related optimization tasks into a single combined
optimization task. In the MSC Nastran 2016 release, a new feature, Global Optimization (GO), was added
to the MultiOpt program. In addition, MMO was enhanced to support Mode i8 computer platforms and
remove the limitation of up to five MSC Nastran models.
Global Optimization
MSC Nastran has been supporting structural optimization via SOL200 for many years. The technology built
in SOL 200 uses gradient based local optimization algorithms. Many industry optimization applications&lt;/p&gt;
&lt;p&gt;647 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
show that multiple local minima are often obtained when starting from differing initial designs. This behavior
is particularly evident in composite and dynamical response optimizations. Clients often want to know
whether the optimal design is a local or global optimum. If it is a local, how can they improve the local
optimal design with limited computer resources? Mathematically speaking, it is impossible to find a global
optimum for general nonlinear problems unless all the possibilities in the design space are exhausted.
However, numerically, it is desirable to have a practical global optimization procedure to find an approximate
global solution with reasonable computing cost. Hexagon h as developed a multi-start method to solve both
unconstrained and constrained global optimization problems. It has four major aspects:
The global design space is first approximated by a small but intelligent set of points that are derived
using Design of Experiment (DOE) methods, such as orthogonal arrays, fractional or full factorial
design techniques. This important step enables the subsequent local searches to be performed in a
well-balanced, but reduced, design space.
Heuristic techniques are applied to quickly find the global optimum. The basic rule is to always start
a new local search from the point that has the largest distance from the current best local minimum
point. A direct benefit of this is to minimize the number of repeated visits to the same region of
attraction.
A gradient-based optimization tool is used as the local search engine. Specifically, the powerful
multidisciplinary design optimization capability in MSC Nastran SOL 200 is used here
Asymptotically correct condition or a user specified time budget is used to terminate the global
search process.
More discussion of the method can be found in a paper titled “A Practical Global Optimization Procedure”,
AIAA-2003-1671, 2003.
Multi Model Optimization
The MMO application starts the processing of the separate design models up to the point where the
optimization is to occur. Then, it merges the design information, performs the optimization and partitions
the results. Then the individual models are resumed in a design loop that is terminated when either
convergence is achieved or the maximum design cycles are reached. A flow chart of this process with two
design models is given in Figure 9-22.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization648
Main Index
Figure 9-22&lt;br&gt;
The boxes ‘Merge Approximate Models’, ‘Approximate Optimization’, and ‘Partition Constraints/Responses’
are driven by a subDMAP that is invoked by a MultiOpt created input deck ‘ MERGE.dat ’ (i.e, the user does
not need to create or even know about this deck).
Benefits
The benefit to the user for the automated global optimization (GO) feature is that it combines automatic
multi-start global methods and gradient based local optimization algorithms. The heuristics built into the
global search algorithm allow users to explore better designs with relatively modest computing resources. It
is expected that certain applications of applying GO will provide surprising variability in the design task and
this would provide deeper insight design process. GO can also be utilized to search for a feasible design when
a single SOL200 optimization was unable to find one.
The MMO ability to merge multiple design models allows the user to have separate models that differ in their
topology or in their analyses but still perform a combined optimization.Partition
Constraints/ResponsesCheck ConvergenceInitial Design
Model 1 Model 2
Structural
AnalysisStructural
Analysis
Sensitivity
AnalysisSensitivity
Analysis
Merge Approximate Models
Approximate
OptimizationImproved
Design
Partition
Constraints/Responses&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P34</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_034/</guid>
      <description>
        
        
        &lt;p&gt;649 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
One scenario might be if different variants of an aircraft share a common wing design but have different
fuselages (standard and stretch configurations). It would be difficult to design this with the standard version
of SOL 200, but it is readily achievable with this capability.
Another scenario is one where a detailed model of a component is available and can be used to match analysis
data with test results. At the same time, a less detailed model of the same component is included in a global
model that is being used to perform optimization with global constraints, such as flutter speed.
MMO can be used in this case to perform both optimizations simultaneously and thereby maintain a
common design.
A final scenario addresses the common scenario in the design stage where different groups have different finite
element representations of the same vehicle or device. For example, the stress group might have a detailed
model suitable for detailed analysis while the vibration group may have a less detailed model to be used in
providing modal information. With MMO, it is possible to retain these two separate models but still apply
design optimization techniques. For this to be of value, there needs to be some common design variables that
are shared by all the models and there needs to be a single objective that is based on responses from one or
more of the models. The constrained responses can be applied completely separate from each other, in the
separate models.
User Input
For GO applications, a standard MSC Nastran SOL 200 job can be used to explore global optimization.
For MMO applications, each of the models has its own data deck that is complete to the extent that it could
be run “stand-alone” in MSC Nastran SOL 200. The following changes need to be made in each of these
separate input files for a MultiOpt submittal:
1.A DESMOD case control command needs to be inserted in each model of the form:
DESMOD = model
2.Where “model” is a unique, user specified name of up to eight characters that designates the model.
The DOPTPRM entry in the separate models control parameters that are used by the optimizer and
others that are used in the iterative process. It is recommended that an identical DOPTPRM be used
in each model. The DOPTPRM in the first model controls what is used by the optimizer; e.g.,
OPTCOD, while convergence parameters and DESMAX are controlled by the local DOPTPRM
entry.
3.If the objectives are to be combined, the first model must have its DESOBJ request point to a
DRESP2 that contains the structure of the combined objective function. This is expanded upon
below.
Invoking MultiOpt
GO and MMO are features in the program MultiOpt. The way to invoke MultiOpt is using a command line
of the following form:
MSC20170    MultiOpt     mygofile.xml (or mymmofile.xml)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization650
Main Index
User GO Input
The GO input xml file (mygofile.xml) has this format&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;651 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
User MMO Input
The user MMO input xml file (mymmofile.xml) has this format&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization652
Main Index
For example,&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;653 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
3.OptType = &amp;ldquo;GO&amp;rdquo; must be used to perform global optimization. The goparam (global optimization
control parameters) are optional.
4.GO search is terminated when any of three conditions is met:
a.all the design points in the global search space are exhausted.
b.The number of consecutive local searches that do not provide an improved design exceeds the
given NGLSMX number.
c.The total number of FE analyses exceeds the given MAXFEA number.
5.OptType = &amp;ldquo;MMO&amp;rdquo; is used to perform multiple model optimization. The merge job in the MultiOpt
input XML file is optional.
6.MMO is terminated when either convergence is achieved or the maximum design cycles are reached
for each separate models.
7.More discussions about the options MEM, SCR and SMP can be found in MSC Nastran Quick
Reference Guide .
8.MMO combined objective function
COEF = Coefficient that provides the objective weighting for the model (default: =1.0 for the first
model and 0.0 for subsequent models). This default means the objective comes from the first model
only.When you are optimizing across several models, the overall objective can simply be the objective
of the first model or it can be a linear combination of the objectives from all the models. If the
objective is only from the first model, you set up the objective in this model in the same way as a
standalone SOL 200 optimization task and not apply any coefficients (coef and ci data in the above
options) in the xml file. Combining objectives from several models relies on a DRESP2 in the first
model that has to be constructed with some specific rules:
The DRESP2 must have a &amp;ldquo;DTABLE&amp;rdquo; with nmod (the number of models) LABLi values. The value
specified for the first LABL1 should be 1.0 and the subsequent LABLi values should be zero. In this
way, the objective of the first model is simply the first response. (Other LABLi values in the first
model are permitted, but can lead to confusion)
The DRESP2 must have either nmod DRESP1 quantities or nmod DRESP2 quantities. It is not
possible to mix DRESP2 and DRESP1 responses in the combined objective.
The second through nmod responses in the combined objective of the first model are dummy and
will replaced with the second through nmod responses that are the objectives in the second and
subsequent models.
The coefficients actually used for the models are the Ci data provided in the xml file.
The DEQATN that corresponds to the DRESP2 performs a linear addition of the responses:
COBJ = Ci OBJi
9.MultiOpt users can also use the Nastran RC file to set other Nastran keywords except (MEM, SMP,
and SCR) for GO or MMO. See the MSC Nastran Quick Reference Guide .
10. Windows users&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization654
Main Index
In order to run the MultiOpt utility, remotebootstrap.exe should be added to Windows Firewall
access list. Otherwise, it will be blocked by it. When MultiOpt is run, users should not disturb the
command prompt, especially when there are a large number of jobs;, i.e., more than 5. The status of
execution should be monitored from another prompt. Otherwise, the original one may be
unresponsive.
11. The folder path cannot contain blank spaces.
User Output
There are four types of outputs from GO.
A single summary output file multiopt.log that records the history of the search process. The local
optimization and final global optimization results can be checked in that file.
fn_go.dat is the global optimization job (fn is the basename of input model) with a sample design
that produces the global optimal solution. The sample design (as a design variable include file)
fn_xxxx_desvar.go is also saved for the global optimization.
fsave=&amp;ldquo;1&amp;rdquo; can be used to keep all local optimization results with a feasible design. fn_xxxx_desvar.go
is a design variable include file containing DESVAR entries where xxxx is a four digit number
indicating a particular design run. fn_xxxx.f06 is the local optimization result for the run.
Patran (or third part post-processor) can be used to view the global optimal design and optimization
history from the best local optimization run.
For MMO, the separate models each provide their separate .f06 files and any other outputs that would be
expected from a SOL 200 run. There is also a merge.f06 file produced from the optimization portion of the
process and could provide some insight into how the optimization is progressing and highlight any problems.
Comma Separated Values File
The ASSIGN statement (in File Management) can be used to generate optimization history in Comma
Separated Values (CSV) file (see Comma Separated Values File ). This is still valid for GO (local optimization)
and MMO (separate models). To produce the merge optimization design history in CSV file, users must
define USERFILE name by the DESMOD model name in Case Control (for example, DESMOD = model ;
use UPPERCASE on Linux )
ASSIGN USERFILE=&amp;rsquo; MODEL.csv&amp;rsquo;, STATUS=NEW, FORM=FORMATTED, UNIT=52
(It is necessary to include a PARAM, XYUNIT , 52 in the Bulk Data file)
The merge optimization history CSV file is called mymmofile_mmo.csv where mymmofile is the basename
of the MultiOpt input XML file.
GO Test Case
In order to validate the GO capability, a problem is obtained from the test problem library for Sol 200
(tpl/optim/d200c01.dat). The following figure shows a composite tube clamped at one end and free at the
other end. The tube is built from a composite material with 8 plies. The outer layer pairs are initially at 85o
orientations to the hoop direction while 4 core layers are at 60o orientations. The design task is to find the&lt;/p&gt;
&lt;p&gt;655 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
ply thickness and ply angles to minimize weight subject to Hill Failure criteria. Notice that the outer layer
pairs and four core layers are two design variables while the ply thickness is the third design variable.
Originally, when the problem was solved with SOL 200, a local minimum solution was found. After the
global optimization procedure is exercised, a global optimum solution has been found. See the following
Result section for the detailed numbers.
The MultiOpt input XML file can be found in the test problem library (tpl/go_opt/ d200c01.xml) as:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization656
Main Index&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;****                            Initial Local Search                            ****
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;The starting design variables are from your input deck
desvar ID     Label    Starting Value    Final Value     Lower Bound     Upper Bound
----------  --------- ---------------   -----------     -------------   ------------
        1    TPLY           1.0000E+00     5.7385E-02        1.0000E-03     1.0000E+01
        2    THETA        1.0000E+00     5.6849E-01      -1.0588E+00     1.0588E+00
        3    THETA        1.0000E+00     1.6880E-01      -1.5000E+00     1.5000E+00
 THIS IS THE FIRST LOCAL SEARCH BASED ON THE USER INPUT FILE
 OBJECTIVE                =   9.1709E-02,
 MAXIMUM CONSTRAINT VALUE =   3.9210E-03 (A FEASIBLE SOLUTION).
 THE LOCAL SEARCH USED       17 FE ANALYSES.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the actual ply angles are plus or minus 85.0 times the second design variable and plus or minus 60
times the second so that the plies can range from minus 90 to plus 90 degrees. Allowing ply angles to vary
over such a broad range is known to result in local minima.
The section of subsequent local searches that produce an infeasible solution
This section shows the result from the local search #1. It is actually the second local search if the very initial
local search is included. The statement following the header indicates that design run # 7 from the design
table is used in this local search. If a local search produces an infeasible solution, the output section will
indicate it accordingly, as shown here. Basically, the global search procedure simply discards such points and
proceeds to another local search based on the new design run.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;****                            Local Search #       1                          ****
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;The starting design variables are from sample #        7
desvar ID     Label    Starting Value    Final Value     Lower Bound     Upper Bound
----------  --------- ---------------   -----------     -------------   ------------
        1    TPLY          7.5003E+00     2.3414E-02       1.0000E-03     1.0000E+01
        2    THETA       -5.2941E-01    -3.6165E-02      -1.0588E+00     1.0588E+00
        3    THETA       -7.5000E-01    -6.9144E-02      -1.5000E+00     1.5000E+00
 THIS LOCAL SEARCH DOES NOT PRODUCE A UNIQUE LOCAL MINIMUM.
 OBJECTIVE                =   3.7419E-02,
 MAXIMUM CONSTRAINT VALUE =   8.9975E-03 ( AN INFEASIBLE SOLUTION ).
 THE LOCAL SEARCH USED       21 FE ANALYSES.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The section of subsequent local searches that produce a feasible solution
This section shows the result from the local search #5. The statement following the header indicates that
design run # 9 from the design table is used in this local search. The starting and final values of three design
variables from search # 5are listed under the columns of starting and final value. See the highlighted sentence
A FEASIBLE SOLUTION. It is possible that a local search may be trapped in the same region of attraction
and the final design will be identical to a previous local minimum. When that happens, the wording in the
statement is different.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;657 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
****                            Local Search #       5                          ****&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;The starting design variables are from sample #        9
desvar ID     Label    Starting Value    Final Value     Lower Bound     Upper Bound
----------  --------- ---------------   -----------     -------------   ------------
        1    TPLY          5.0005E+00      2.1409E-02        1.0000E-03     1.0000E+01
        2    THETA        0.0000E+00    -6.2499E-03      -1.0588E+00     1.0588E+00
        3    THETA        0.0000E+00    -6.2499E-03      -1.5000E+00     1.5000E+00
 THIS LOCAL SEARCH PRODUCE A CURRENT BEST LOCAL MINIMUM
 OBJECTIVE                =   3.4214E-02,
 MAXIMUM CONSTRAINT VALUE =   2.0041E-03 ( A FEASIBLE SOLUTION ).
 THE LOCAL SEARCH USED       16 FE ANALYSES.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final output section
The final section shows the global solution with the best objective and the maximum constraint value. The
user information message explains how the global search procedure is terminated. In this example case, the
job is terminated when all the design points in the design table are invoked. It also shows the total number
of FE analyses and the number of local searches being used in this job. The history of local minima shown at
the end of the section can be used for an xy-plot to gain the design insight (via &lt;em&gt;.xdb)
0&lt;/em&gt;** USER INFORMATION MESSAGE
RUN TERMINATED DUE TO ALL THE DESIGN POINTS IN THE SAMPLE SPACE ARE INVOKED.
THIS RUN USED      201 FE ANALYSES AND        9 LOCAL SEARCHES.
THE GLOBAL SOLUTION IS: LOCAL OPTIMIZATION SAMPLE #       9
OBJECTIVE                =   3.4214E-02,
MAXIMUM CONSTRAINT VALUE =   2.0041E-03 (A FEASIBLE SOLUTION).
********************   HISTORY OF LOCAL MINIMA    ********************
RUN    #          LOCAL MINIMUM
____________    ____________
0           9.1709E-02
9*          3.4214E-02
*******************************************
END OF GLOBAL OPTIMIZATION SEARCH
******************************************
MultiOpt is successfully complete
######## [END MULTIOPT: 03/04/2015  10:53:16] ########
MMO Test Case
This section provides details on an example that is both simple and exercises many of the developed features.
The example is based on the tpl deck dsoug1.dat and is the classic three bar truss example. The MultiOpt
version is located in the tpl/multiopt directory. The dsoug1.dat example has two subcases. For purposes of
this demonstration, the deck has been divided into two separate models, each with a single subcase. The first
deck is named cobj and contains the design model as it is in dsoug1 and applies only the second subcase. Also,
the DLINK entry has been removed (this was for the purposes of the test and not a requirement). The second
deck is called sub2d and applies the first load case. In another difference from the dsoug1.dat deck, the cobj
deck has a DESOBJ that points to a DRESP2 that is to be used to combine the two weight objectives from
the separate models. (This is a contrived objective that demonstrates how to combine objectives but does not&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization658
Main Index
have any physical meaning). The following listing shows portions of the input stream for cobj.dat with the
items of interest to this capability highlighted in red.
ID MSC, D200X1 $ V68 G_MOORE 24-MAR-1994
TIME 10 $
diag 8,15 $
SOL 200 $ OPTIMIZATION
CEND
TITLE = SYMMETRIC THREE BAR TRUSS DESIGN OPTIMIZATION - D200X1
SUBTITLE = BASELINE - 2 CROSS SECTIONAL AREAS AS DESIGN VARIABLES
label = this run only contains the second subcase of test deck d200x1
$ it is run in conjunction with sub2d.dat
ECHO = SORT
SPC = 100
DISP(plot) = ALL
STRESS(plot) = ALL
DESOBJ(MIN) = 200 $ (DESIGN OBJECTIVE = DRESP2 ID)
DESMOD=SUB1
DESSUB = 21 $ DEFINE CONSTRAINT SET FOR BOTH SUBCASES
ANALYSIS = STATICS
SUBCASE 2
LABEL = LOAD CONDITION 2
LOAD = 310
COBJ = ?Ci ? OBJ
Chapter 9: Special Topics 665
Multi Model Optimization (MultiOpt)
BEGIN BULK
$&amp;hellip;DESIGN VARIABLE DEFINITION
$DESVAR,ID, LABEL, XINIT, XLB, XUB, DELXV(OPTIONAL)
DESVAR, 1, A1, 1.0, 0.1, 100.0
DESVAR, 2, A2, 2.0, 0.1, 100.0
DESVAR, 3, A3, 1.0, 0.1, 100.0
$ $&amp;hellip;DEFINITION OF DESIGN VARIABLE TO ANALYSIS MODEL PARAMETER RELATIONS
$DVPREL1,ID, TYPE, PID, FID, PMIN, PMAX, C0, , +
$+, DVID1, COEF1, DVID2, COEF2, &amp;hellip;
DVPREL1 10 PROD 11 4 0.0 +DP1
+DP1, 1, 1.0
DVPREL1,20, PROD, 12, 4, , , , , +DP2
+DP2, 2, 1.0
DVPREL1,30, PROD, 13, 4, , , , , +DP3
+DP3, 3, 1.0
$&amp;hellip;STRUCTURAL RESPONSE IDENTIFICATION
$DRESP1,ID, LABEL, RTYPE, PTYPE, REGION, ATTA, ATTB, ATT1, +
$+, ATT2, &amp;hellip;
DRESP1, 20, W , WEIGHT
DRESP1, 21, U4, DISP , , , 1, , 4
DRESP1, 22, V4, DISP , , , 2, , 4
DRESP1, 23, S1, STRESS, PROD, , 2, , 11
DRESP1, 24, S2, STRESS, PROD, , 2, , 12
DRESP1, 25, S3, STRESS, PROD, , 2, , 13
dresp2 200 cobj 200
dtable coef1 cdum2
dresp1 20 21
dtable coef1 1.0 cdum2 0.0
deqatn 200 cobj(c1,cdum2,obj1,odum2) = c1 * obj1 + cdum2 * odum2
$ ENDDATA
The DESVAR/DVPREL1 Bulk Data entries set up design variables for each of the three rod elements in this
case. The DESMOD=SUB1 identifies design model as SUB1. The DESOBJ = 200 points to the DRESP2
that is shown at the bottom of the extracted data. It is seen that the objective is perceived as being the weighted
sum of a DRESP1 that is the weight response plus a DRESP1 that is a displacement response. Since the
weighting terms are 1.0 and 0.0, the objective for this model is actually the weight of the model, but this sets
up the combined objective for the merged model. The second model is input from the sub2d.dat input and
has a different loading condition and a different (i.e., DESMOD=SUB2) DESMOD value.&lt;/p&gt;
&lt;p&gt;659 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
The MultiOpt input XML file for this job is of the form:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization660
Main Index
instances of NASTRAN, and another machine that has 8 cores and 32 GB of memory can support six
instances of NASTRAN (see example NCConfigRemote.xml)
Export SCA_REMOTING_NCC=NCConfigRemote.xml
SCA_REMOTING_DSC
This file lists the remote machines that remote SCA kernels can run on. The machines can be listed by their
IP address or the hostname (see example DSConfig.xml)
Export SCA_REMOTING_DSC=DSConfig.xml
PREFERRED_ADDR
This variable is ONLY used if the client machine is multi-homed. An example of a multi-homed machine is
someone connected via MSC VPN in which case the computer will have two IP addresses. The user must set
PREFERRED_ADDR to the MSC network IP .
DS_ADDR
DS_ADDR points to the machine the Directory Server runs on. At the moment SCA only supports running
the Directory Server on the client machine. Therefore set the DS_ADDR to the live IP address (usually
172.x.x.x on MSC local network) of the client machine. This can be found using the ifconfig  on Linux
and ipconfig  on Windows.
DS_PORT
This is the port the Directory Server will listen to. Set this to any unused port above 34,000.
myhostrun.sh
export SCA_REMOTING_DSC=&lt;code&gt;pwd&lt;/code&gt;/DSConfig.xml
echo SCA_REMOTING_DSC=$SCA_REMOTING_DSC
export DS_ADDR=172.16.43.177
export DS_PORT=37000
export PREFERRED_ADDR=172.16.43.177
echo   DS_ADDR=$DS_ADDR DS_PORT=$DS_PORT PREFERRED_ADDR=$PREFERRED_ADDR
export MSC_LICENSE_FILE=1700@msclic-sa1
msc20241  MultiOpt d200c01.xml
NCConfigRemote.xml
?xml version=&amp;ldquo;1.0&amp;rdquo; ?&amp;gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;16&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;661 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;Node allowing 16 processes&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;16&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;Node allowing 16 processes&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
DSConfig.xml&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization662
Main Index
SD_PORT
This port is the port that the SCA remote kernel starter demon will listen for a remote call. Set this to any
available port above 34000 on the machine. NOTE: this port must match the entry for this machine in the
file pointed to by the SCA_REMOTING_DSC environment variable. Each remote machine must have a
unique one.
SDServer executable
After SD_PORT is set, user has to execute SDServer executable that is delivered with the SCA kernel
delivery. A sample script to execute this file is available upon delivery.
StarSDSever.sh
export SCA_REMOTING_NCC=NCConfigRemote.xml
echo ============== NCConfigRemote.xml ===========================&lt;/p&gt;
&lt;h1&gt;this remote machine 1&lt;/h1&gt;&lt;p&gt;export SD_PORT=35000
echo   SD_PORT=$SD_PORT
echo “Start StarterDaemon (SDServer) on Linux”
msc20241  SDServer -start
Guidelines and Limitations
It is recommended that the associated SOL jobs (for MMO, without DESMOD case control entry) be run
to insure that the models are well posed before launching GO/MMO applications. In addition, here are some
guidelines/limitations.
GO Guidelines
1.It is recommended to use all default values for the first try (SOL200 DOPTPRM default values except
DESMAX, plus GO parameter default values).
2.SCR=yes is recommended since less disk space is required
3.Parallel runs and/or SMP&amp;gt;=2 require more memory. GO may fail due to insufficient memory.
4.The upper and lower bounds on design variables (DESVAR) must be defined properly since they are
used to generate sample points. Otherwise, local optimization SOL200 job may fail due to improper
sample points. Notice the failed local optimization search is skipped and GO process continues to run
the end.
5.To explore more design space, users can use larger NGLSMAX and/or MAXFEA. In addition, users
can have both variability=”Golden” and “UPLO” run, or modify design variable limits.
6.Shape optimization is a challenge for GO since there is a higher chance to have bad mesh due to a
large shape changes during a GO search. A good quality of shape vectors and proper upper and lower
bounds on design variables are essential for global shape optimization. In addition, (DVGRID) must
be defined in the basic coordinate system.
7.GO does not support TOMVAR, TOPOPT, BEADVAR and Part Super Element.&lt;/p&gt;
&lt;p&gt;663 Chapter 9: Special Topics
MultiOpt-Global Optimization and Multi Model Optimization
Main Index
8.No design variables are allowed in any include files.
9.Does not support old IFP, supports mode i8 only.
10. The folder path cannot contain blank spaces.
11. To explore more design space, users can use larger NGLSMAX and/or MAXFEA. In addition, users
can have both variability=”Golden” and “UPLO” run, or modify design variable limits.
12. Support parameter study with Go process by allowing users to insert “param, optexit, 3” in the SOL
200 input data.
13. It is recommended that you remove old result files in your working directory when starting a new run.
14. Optimization, including Global Optimization is not available with FEA licensing.
15. To support PEM(Poro-Elastic Material), users need to define additional environment variables.
export MSC_ISHELLPATH=install_dir/msc20170/actran/linux64/Actran_16.1.b.92885/bin
export ACTRAN_PATH= install_dir/msc20170/actran/linux64
export ACTRAN_PRODUCTLINE= install_dir /msc20170/actran/linux64/Actran_16.1.b.92885
export ACTRAN_AFFINITY=reset
export ACTRAN_MPI= install_dir /msc20170/actran/linux64/Actran_16.1.b.92885/mpi/intelmpi
On Windows change “export” to “set” and “linux64” to “win64”.
MMO Guidelines
1.Each model must have a unique DESMOD case control entry.
2.Design variables that are to be shared across models must have the same ID.
3.It is an error to have Design Variables in the separate models that share an ID but have different label,
XLB,XUB , XVAL or DDVAL information.
4.Designed properties are assumed to be unique even when they are not. This is because it is almost
impossible to verify that the design properties are actually identical (e.g., a DVPREL1 that has
identical input may actually be referring to a completely different PSHELL entry in terms of its
physical meaning).
5.Support for shape optimization is minimal in that it the separate models must have the same topology.
6.The feature that allows the user to define an overall objective that is the weighted sum of individual
objective imposes the additional requirement of defining an objective in the first model that
represents the desired final model, but with dummy coefficients and objectives. This is described in
the input section above.
7.MMO does not support TOMVAR, TOPOPT, BEADVAR, TREGION=1 and Part Super
Element.
8.It is recommended that you remove old result files in your working directory when starting a new run.
9.The folder path cannot contain blank spaces.
10. Optimization, including Multi-model Optimization is not available with FEA licensing.
11. To support PEM(Poro-Elastic Material), users need to define additional environment variables.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
MultiOpt-Global Optimization and Multi Model Optimization664
Main Index
export MSC_ISHELLPATH=install_dir/msc 20241 /actran/linux64/Actran_16.1.b.92885/bin
export ACTRAN_PATH= install_dir /msc 20241 /actran/linux64
export ACTRAN_PRODUCTLINE= install_dir /msc 20241 /actran/linux64/Actran_16.1.b.92885
export ACTRAN_AFFINITY=reset
export ACTRAN_MPI= install_dir /msc 20241 /actran/linux64/Actran_16.1.b.92885/mpi/intelmpi
On Windows change “export” to “set” and “linux64” to “win64”.
Documentation Dependencies
More information on the DESMOD Case Control command can be found in DESMOD (Case)  in the MSC
Nastran Quick Reference Guide .
Global Optimization Licensing
Serial Parallel
SupportedLicense Draw
Multiplication
Factor(*1)Uses BLOCKING=N
in XML FileLicense Draw
Multiplication
Factor
Single Seat License Yes 1 not achievable (Note 5) N/A
Multiple Seat License
(same FLexLM server)Yes 1 Yes (N+1)/2
(Note 2/Note 4)
Master Key Yes 1 Yes (N+1)/2
(Note 2/Note 4)
MSC One Yes 1(Note3) Yes (N+1)/2
(Note 4)
Note:   1.For Global Optimization License Draw based upon features requested in single MSC
Nastran input file.
2.For MSC Nastran Embedded Fatigue and Aeroelasticity II, the license draw will be N.
3.MSC Nastran Embedded Fatigue and Aeroelasticity II cannot be used with MSC One.
4.If there are insufficient licenses available, the job will terminate; it is recommended to run
in Serial mode.
5.If BLOCKING=2, NEF and Aeroelasticity II are not used, the job will run with two
processors.&lt;/p&gt;
&lt;p&gt;665 Chapter 9: Special Topics
OpenMDOTM
Main Index
Multi-Model Optimization Licensing
OpenMDOTM
In MSC Nastran, there are two MSC proprietary general purpose optimizers: MSCADS and IPOPT. In the
MSC Nastran 2011 release MSC created a Simulation Component Architecture (SCA) plug-in to allow users
access to other commercially available optimization codes or their own optimization codes. The thinking was
that some investigators may conjecture that their algorithm for performing optimization surpasses the
proprietary algorithms and this provides an opportunity to test and perhaps commercialize their offering in
conjunction with SOL 200. Alternatively, some researchers may simply be interested in how their algorithm
performs in a commercial environment compared to the proprietary code across the wide variety test cases
that MSC has available. Serial Parallel
SupportedLicense Draw
Multiplication
Factor(*1)Uses BLOCKING=N
in XML FileLicense Draw
Multiplication
Factor
Single Seat License not achievable N/A not achievable N/A
Multiple Seat License
(same FLexLM server)Yes (MF+1)/2
See Note 2 and 3Yes (MF+1)/2
See Note 2 and 3
Master Key Yes (MF+1)/2
See Note 2 and 3Yes (MF+1)/2
See Note 2 and 3
MSC One Yes (MF+1)/2
See Note 2 and 4Yes (MF+1)/2
See Note 2 and 4
Note:   1.For Multi-Model License Draw based upon features requested in each MSC Nastran
input file, for the case where all jobs require the same features, then it would be
(M+1)/2 license draw for one simulation. If Aeroelasticity II or MSC Nastran
Embedded Fatigue is present then M Aeroelsticity II or Fatigue license are drawn.
2.MF is the accumulated license for all M models for a particular feature. For example, if
there are four models, M=4, if only use ACMS and one uses exterior acoustics then the
license draw for ACMS=(3+1)/2 and the license draw for exterior acoustic will be
(1+1)/2=1. The number of licenses drawn for base MSC Nastran is (4+1)/2=2.
3.For MSC Nastran Embedded Fatigue and Aeroelasticity II, the license draw will be MF.
4.MSC Nastran Embedded Fatigue and Aeroelasticity II cannot be used with MSC One
licensing.
5.If there are sufficient license available, the job will terminate.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization with Multiple Mass Configurations 666
Main Index
Since no one has taken on the challenge of plugging in an alternative optimizer, it is felt unnecessary to add
the description on how to achieve this here. Instead, you are referred to the extensive documentation on
OpenMDOTM in the MD Nastran 2011 and MSC Nastran 2011 Release Guide.
Optimization with Multiple Mass Configurations
Multiple Mass Configurations is a Nastran concept that allows you to construct and analyze multiple mass
matrices. This can be used, for example, to analyze several different fuel loadings in a single run. The support
for this concept in SOL 200 extends its ability to consider a variety of loading conditions and disciplines in
a single optimization task. The MSC Nastran Quick Reference Guide details how the MASSSET case control
command points to a MASSSET bulk data entry that allows the user to combine masses from separate
packets of input data that are designated by a BEGIN MASSID=xxx entry. The support in SOL 200 for this
feature has the restriction that designed properties must be in the primary bulk data packet; any design data
in the BEGIN MASSID = xxx packet are ignored. All supported ANALYSIS types are supported with
multiple mass cases. There is a restriction that superelement models are not supported.
An important guideline is that the WEIGHT response type on the DRESP1 entry DOES NOT include any
contributions from the MASSSET, regardless of how the design model is specified.&lt;/p&gt;
&lt;p&gt;Main Index
Appendix A: Adding Your Own Beam Cross-Section Library
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
AAdding Your Own Beam
Cross-Section Library
Introduction     668
BSCON Subroutine     669
BSBRPD Subroutine     670
BSGRQ Subroutine     680
BSBRT Subroutine     681
BSBRID Subroutine     684
BSBRGD Subroutine     690
BSBRCD Subroutine     696
BSMSG Subroutine     702
Linking Your Library to MSC Nastran     703
Example of Building and Linking a Beam Server     703&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Introduction668
Main Index
Introduction
This section details how to add your own cross section type that would be in addition to the 19 standard
section types that MSC provides. As this section shows, adding this section is an involved process that requires
the coding and connection of a number of subroutines. Before embarking on using this capability, it is
recommended that you explore the PBRSECT (for bars) and PBMSECT (for beams) bulk data entry that
allows you to define a general cross section using a set of points and instructions. Some considerations are:
The PBRSECT/PBMSECT does not require the developments of this appendix in terms of coding, building
and linking of the beam server.
Basic design of the PBRSECT/PBMSECT is supported (see Special Considerations when Designing One-
Dimensional Bending Elements).
If there is a beam cross section type that is not supported by one of the standard sections that is needed
extensively in a design and the dimensions of the sections are designable, there may be a payoff in the methods
of this appendix.
The PBEAML supports tapered sections while the PBMSECT has a constant cross section.
The standard cross sections provided by MSC should be adequate in the majority of cases. If these standard
sections are not adequate for your purposes, you can add your own library of cross sections to suit your needs.
To add your own library, you need to write a few simple subroutines in FORTRAN and link them to MSC
Nastran through inter-process communications. This process requires writing and/or modifying up to eight
basic subroutines.
1.BSCON &amp;ndash; Defines the number of dimensions for each of the section types.
2.BSBRPD &amp;ndash; Calculates section properties based on section dimensions.
3.BSGRQ &amp;ndash; Defines NSECT, the number of section types, and NDIMAX, the maximum number of
dimensions (including nonstructural mass) required by any of the sections.
4.BSBRT &amp;ndash; Provides the name, number of dimensions and number of design constraints for each
section type.
5.BSBRID &amp;ndash; Provides information for the calculation of gradients of section properties with respect to
section dimensions.
6.BSBRGD &amp;ndash; Calculates any nonlinear gradients of section properties with respect to section
dimensions.
7.BSBRCD &amp;ndash; Defines constraints in the design of section dimensions.
8.BSMSG &amp;ndash; A utility routine; handles errors that occur in the beam library.
BSCON and BSBRPD are always required. BSGRQ, BSBRT, and BSBRID are required if you wish to
perform sensitivity and/or optimization tasks using the beam library. BSBRGD is required if you are
providing nonlinear analytical sensitivities in the design task, and BSBRCD is an optional routine that can
be provided to help the optimizer to stay within physical design constraints. BSMSG handles any error
messages you feel are appropriate.
This appendix describes each of these basic routines in turn and provides MSC Software’s version of each.
Routines that are called by these basic routines are also described with adequate examples to allow you to
construct your own library. All the example routines shown are for the 32-bit machines.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P35</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_035/</guid>
      <description>
        
        
        &lt;p&gt;669 Appendix A: Adding Your Own Beam Cross-Section Library
BSCON Subroutine
Main Index
For 64-bit machines, all the routine names that end with “D” should be changed to end with “S”, and all real
variables must be designated as single precision instead of double precision. Therefore, the naming
convention for routines on 64-bit machines is BSCON, BSBRPS, BSGRQ, BSBRT , BSPRIS, BSBRGS,
BSBRCS, and BSMSG.
BSCON Subroutine
This routine provides the number of fields in the continuation lines to be read from the Bulk Data entries
PBARL and PBEAML for each cross section in the library. The value of the ENTYP variable may be 0, 1, or
2. When ENTYP=0, the value returned is the number of DIMi. When ENTYP=1, the value returned
includes both the DIMi and NSM fields. The value of 1 is used for PBARL only. When ENTYP =2, the
value returned includes the DIMi, NSM, SO, and XIXB fields for 11 different stations. The value of 2 applies
to PBEAML only.
The calling sequence and example routine for the standard MSC library is given below.
Listing 1-1  BSCON Subroutines
SUBROUTINE BSCON(GRPID,TYPE,ENTYP,NDIMI,ERROR)
C
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C   Purpose
C     To get the dimension information for &amp;lsquo;MSC&amp;rsquo; types
C
C   Arguments:
C
C    GRPID   input INTEGER INTEGER ID OF THIS GROUP OR GROUP NAME.
C    TYPE    input CHARACTER*8 TYPE OF CROSS SECTION
C    ENTYP   input INTEGER - 1: PBARL, 2:PBEAML
C    NDIMI   outpt NUMBER OF INPUT FIELDS FOR THE &amp;lsquo;ENTYP&amp;rsquo; CROSS SECTION
C
C   Called by BCCON
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT REAL (A-H,O-Z)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  INTEGER      ENTYP,GRPID,ERROR
  CHARACTER*8  TYPE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C   Local variables
INTEGER      NAM(2)
DATA NAM/4HBSCO,4HN   /&lt;/p&gt;
&lt;p&gt;C     Default to &amp;rsquo;nothing wrong&amp;rsquo;
ERROR = 0&lt;/p&gt;
&lt;p&gt;C     Dimensions vary with section type
IF    ( TYPE.EQ.&amp;lsquo;ROD     &amp;lsquo;) THEN
NDIMI = 1
ELSEIF( TYPE.EQ.&amp;lsquo;TUBE    &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;BAR     &amp;lsquo;) THEN
NDIMI = 2
ELSEIF( TYPE.EQ.&amp;lsquo;HEXA    &amp;lsquo;) THEN
NDIMI = 3
ELSEIF( TYPE.EQ.&amp;lsquo;BOX     &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;T       &amp;rsquo; .OR.
+        TYPE.EQ.&amp;lsquo;L       &amp;rsquo;                         .OR.
+        TYPE.EQ.&amp;lsquo;CHAN    &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;CROSS   &amp;rsquo; .OR.
+        TYPE.EQ.&amp;lsquo;H       &amp;rsquo;                         .OR.
+        TYPE.EQ.&amp;lsquo;I1      &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;T1      &amp;rsquo; .OR.
+        TYPE.EQ.&amp;lsquo;CHAN1   &amp;rsquo;                         .OR.
+        TYPE.EQ.&amp;lsquo;Z       &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;CHAN2   &amp;rsquo; .OR.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRPD Subroutine670
Main Index
+        TYPE.EQ.&amp;lsquo;T2      &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;HAT     &amp;lsquo;) THEN
NDIMI = 4
ELSEIF( TYPE.EQ.&amp;lsquo;HAT1    &amp;lsquo;) THEN
NDIMI = 5
ELSEIF( TYPE.EQ.&amp;lsquo;I       &amp;rsquo; .OR. TYPE.EQ.&amp;lsquo;BOX1    &amp;lsquo;) THEN
NDIMI = 6
ELSE
C             Is the return here necessary ?
ERROR = 5150
RETURN
ENDIF&lt;/p&gt;
&lt;p&gt;C     Specify ?
IF (ENTYP.EQ.1) NDIMI = NDIMI+1
IF (ENTYP.EQ.2) NDIMI = (NDIMI+3)*11&lt;/p&gt;
&lt;p&gt;C All done
RETURN
END
BSBRPD Subroutine
Finite element analysis requires section properties such as area, moment of inertia, etc., instead of section
dimensions. Therefore, the dimensions specified on PBARL and PBEAML need to be converted to the
equivalent properties specified on PBAR and PBEAM entries. The images of all these entries are stored in
EPT datablock as records.
The BSBRPD subroutine is the interface of your properties evaluator with MSC Nastran. You may use your
own naming convention for the subroutines that calculate the cross-section properties from the dimensions.
The calling tree used for the MSC standard library is shown in Figure 1-1.
Figure 1-1  Calling Tree Generate Property Data
The BSBRPD calls the bar evaluator routine MEVBRD for the BAR element and the beam evaluator routine
MEVBMD for the BEAM element. The evaluators in turn call the routines for each section. The routines
are named BRXXPD and BMXXPD, where XX is a two-letter identifier for the section. For example, the BRTUPD BRBXPDMEVBRD
BMTUPD BMBXPDBSBRPD
MEVBMD
OTHER
SECTIONS&lt;/p&gt;
&lt;p&gt;671 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRPD Subroutine
Main Index
routines for the TUBE section are called BRTUPD and BMTUPD. The details for various routines are given
in Listing 1-2.
Listing 1-2  BSBRPD Subroutines
SUBROUTINE BSBRPD(GRPID,ENTYP,TYPE,IDI,NID,IDO,NIDO,DIMI,NDIMI,
+                  DIMO,NDIMO,ERROR)
C=======================================================================
C   PURPOSE:
C           1.SET INTEGER PART
C           2.DETECT HOW MANY SECTIONS
C           3.UNIFORM OR LINEAR BEAM
C           4.CHECK WHAT ENTITY TYPE’S SUBROUTINE TO BE CALLED
C             (1:PBARL ;2:PBEAML)
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C   CALLED BY:
C             BCBRP
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C   CALLS:
C         MEVBRD ,MEVBMD
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C   IMPLICIT DECLARATIONS
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION  (A-H,O-Z)
C&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
C   EXPLICIT DECLARATIONS
INTEGER ENTYP,ERROR,GRPID
CHARACTER*8 TYPE
C&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
C   LOCAL VARIABLES
INTEGER NAM(2)
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C   DIMENSION STATEMENTS
INTEGER IDI(NID),IDO(NIDO)
DOUBLE PRECISION DIMI(NDIMI),DIMO(NDIMO)
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C   DATA
DATA NAM/4HBSBR,4HPD  /
C=======================================================================
C=== ENTYP=1, FOR PBARL; 2, FOR PBEAML
IF (ENTYP.EQ.1) THEN
CALL MEVBRD(GRPID,TYPE,IDI,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO
+               ,ERROR)
END IF
IF (ENTYP.EQ.2) THEN
CALL MEVBMD(GRPID,TYPE,IDI,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO
+               ,ERROR)
END IF
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
RETURN
END
MEVBRD and MEVBMD  Subroutines
MEVBRD and MEVBMD are the brancher routines for the various sections, and convert the section
dimensions to section properties for BAR and BEAM elements. Your may rename these routines as you like
or move the function of these routines to BSBRPD. These routines call the BRXXPD or BMXXPD routines
where XX is the two-letter keyword for various section types. The MEVBRD routine for the MSC standard
library is given in Listing 1-3. The MEVBMD routine is not shown but can be developed by using the
BMXXPD convention.
Listing 1-3  MEVBRD Subroutine&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRPD Subroutine672
Main Index
SUBROUTINE MEVBRD(GRPID,TYPE,ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,
+                  NDIMO,ERROR)
C=======================================================================
C   Purpose
C           Call the default type subroutine to convert PBARL to PBAR
C
C   Arguments
C
C   GRPID input   int     ID of group
C   TYPE  input   char    Type of cross section
C   DIMI  input   flt     Dimension values of cross section
C   NDIMI input   int     Size of DIMI array
C   DIMO  output  flt     Properties of cross section
C   NDIMO output  flt     Size of DIMO array
C   ERROR output  int     Type of error
C
C   Method
C             Call the subroutine with respect to  the section type
C
C   Called by
C             BSBRPD
C
C   CALLS
C             BRRDPD,BRTUPD,BRBRPD,BRBXPD,BRIIPD,BRTTPD,BRLLPD,BRCHPD
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION  (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling  sequence arguments
INTEGER          ERROR,GRPID,ID(NID),IDO(NIDO)
CHARACTER*8      TYPE
DOUBLE PRECISION DIMI(NDIMI),DIMO(NDIMO)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HMEVB,4HRD  /
C=======================================================================&lt;/p&gt;
&lt;p&gt;C     Clear the output array before usage
CALL    ZEROD ( DIMO, NDIMO )
CALL    ZEROI (  IDO, NIDO  )
ERROR = 0
C
IF    ( TYPE.EQ.’ROD     ‘) THEN
CALL BRRDPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’TUBE    ‘) THEN
CALL BRTUPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’BAR     ‘) THEN
CALL BRBRPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’BOX     ‘) THEN
CALL BRBXPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’I       ‘) THEN
CALL BRIIPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’T       ‘) THEN
CALL BRTTPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
c10939ELSEIF( TYPE.EQ.’L       ‘) THEN
c10939        CALL BRLLPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’CHAN    ‘) THEN
CALL BRCHPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’CROSS   ‘) THEN
CALL BRCRPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’H       ‘) THEN
CALL BRHHPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’T1      ‘) THEN
CALL BRT1PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’I1      ‘) THEN&lt;/p&gt;
&lt;p&gt;673 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRPD Subroutine
Main Index
CALL BRI1PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’CHAN1   ‘) THEN
CALL BRC1PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’Z       ‘) THEN
CALL BRZZPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’CHAN2   ‘) THEN
CALL BRC2PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’T2      ‘) THEN
CALL BRT2PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’BOX1    ‘) THEN
CALL BRB1PD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’HEXA    ‘) THEN
CALL BRHXPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’HAT     ‘) THEN
CALL BRHTPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSEIF( TYPE.EQ.’HAT1    ‘) THEN
CALL BRCLPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
ELSE
ERROR = 5150
END IF
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
RETURN
END
BRXXPD and BMXXPD Subroutines
The purpose of the BRXXPD and BMXXPD routines is to calculate the properties from the section
dimensions. For each cross section, subroutines are required to convert the images of PBARL and PBEAML
records to the images of PBAR and PBEAM records in the EPT datablock.
BRTUPD Subroutine
BRTUPD is an example routine that shows how to convert PBARL EPT record to PBAR EPT record for the
Tube section. First, the details for the PBARL and PBAR record are shown, and then the routine itself is given.
PBARL Record
The PBARL record in the EPT datablock is a derived from the PBARL Bulk Data entry and is given in
Table 1-1.&lt;/p&gt;
&lt;p&gt;Table 1-1  PBARL (9102, 91, 52)
Word Name Type Description
1 PID I Property identification number
2 MID I Material identification number
3 Group Char Group Name
4 Group Char Group Name
5 TYPE Char4 Cross-section Type
6 TYPE Char4 Cross-section Type&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRPD Subroutine674
Main Index
PBAR Record
The PBAR record in the EPT datablock is derived from the PBAR Bulk Data entry and consists of 19 words.
It is a replica of the Bulk Data entry, starting with PID field. The word 8 in the record is set to 0.0 since the
field 9 in the first line of the PBAR Bulk Data entry is not used. The details of the PBAR record are given in
Table 1-2. 7 Dim1 RS Dimension1
8 Dim2 RS Dimension2
n+7-1 Dim n RS Dimension n (note that the final dimension is the
nonstructural mass)
n+7 Flag I -1. Flag indicating end of cross-section dimensions
Table 1-2  PBAR (52, 20, 181)
Word Name Type Description
1 PID I Property identification number.
2 MID I Material identification number.
3 A RS Area of cross-section.
4 I1 RS Area moment of inertia for bending in plane 1.
5 I2 RS Area moment of inertia for bending in plane 2.
6 J RS Torsional constant.
7 NSM RS Nonstructural mass per unit length.
8 FE RS Not used. Set of 0.0.
9 C1 RS Stress recovery location.
10 C2 RS Stress recovery location.
11 D1 RS Stress recovery location.
12 D2 RS Stress recovery location.
13 E1 RS Stress recovery location.
14 E2 RS Stress recovery location.
15 F1 TS Stress recovery location.
16 F2 RS Stress recovery location.
17 K1 RS Area factor of shear for plane 1.
18 K2 RS Area factor of shear for plane 2.
19 I12 RS Area product of inertia.Table 1-1  PBARL (9102, 91, 52)
Word Name Type Description&lt;/p&gt;
&lt;p&gt;675 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRPD Subroutine
Main Index
Listing 1-4  BRTUPD Subroutine
SUBROUTINE BRTUPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
C=======================================================================
C   Purpose:
C      Convert PBARL(entity type : TUBE) to PBAR
C
C   Arguments:
C
C   ID    input  int Array of values PID, MID contained in PBARL
C                    entries
C   NID   input  int Size of ID array, NID=2 for PBARL entry
C   IDO   output int Array of integer values contained in PBAR
C                    entries
C   NIDO  output int Size of IDO array, NIDO=2 for PBAR entry
C   DIMI  input  flt Array of dimension values for cross-section
C                    (SEE FIG. 5 IN MEMO SSW-25, REV. 4, DATE 8/16/94)
C   NDIM  input  int Size of DIMI array
C   DIMO  output flt Array of property values for cross-section
C   NDIMO output int Size of DIMO array
C   ERROR output int Type of error
C
C   DISCRIPTION FOR DIMO ARRAY:
C       DIMO (1)  = A
C       DIMO (2)  = I1
C       DIMO (3)  = I2
C       DIMO (4)  = J
C       DIMO (5)  = NSM
C       DIMO (6)  = FE
C       DIMO (7)  = C1
C       DIMO (8)  = C2
C       DIMO (9)  = D1
C       DIMO (10) = D2
C       DIMO (11) = E1
C       DIMO (12) = E2
C       DIMO (13) = F1
C       DIMO (14) = F2
C       DIMO (15) = K1
C       DIMO (16) = K2
C       DIMO (17) = I12
C
C   Method
C
C   Called by:
C              MEVBRD
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION  (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          ID(NID),IDO(NIDO),ERROR
DOUBLE PRECISION DIMI(NDIMI),DIMO(NDIMO)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Nastran common blocks
COMMON /CONDAD/PI&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBRTU,4HPD  /
C=======================================================================
C
C=== WRITE THE PART OF INTEGER
DO 30 II = 1,NID
IDO(II) = ID(II)
30   CONTINUE&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRPD Subroutine676
Main Index
C
DIM1 = DIMI(1)
DIM2 = DIMI(2)
DIMO(1) = PI*(DIM1&lt;em&gt;DIM1-DIM2&lt;/em&gt;DIM2)
DIMO(2) = PI*(DIM1&lt;strong&gt;4-DIM2&lt;/strong&gt;4)/4.D0
DIMO(3) = DIMO(2)
DIMO(4) = PI*(DIM1&lt;strong&gt;4-DIM2&lt;/strong&gt;4)/2.D0
DIMO(5) = DIMI(3)
DIMO(6) = 0.D0
DIMO(7) = DIM1
DIMO(8) = 0.D0
DIMO(9) = 0.D0
DIMO(10) = DIM1
DIMO(11) = -DIM1
DIMO(12) = 0.D0
DIMO(13) = 0.D0
DIMO(14) = -DIM1
DIMO(15) = 0.5D0
DIMO(16) = 0.5D0
DIMO(17) = 0.D0&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  IF ( DIMI(1).LE.DIMI(2) ) error = 5102
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
RETURN
END
BMTUPD Subroutine
BMTUPD is an example routine that shows how to convert PBEAM EPT record to PBEAM EPT record for
the T ube section. First, the details of the PBEAML and the PBEAM records are shown, and then the routine
itself is given.
PBEAML Record
The PBEAML record on the EPT datablock is a derived from the PBEAML Bulk Data entry and is given in
Table 1-3.
Table 1-3  PBEAML (9202, 92, 53)
Word Name Type Description
1 PID I Property ID.
2 MID I Material ID.
3 Char Group Name.
4 Char Group Name.
5 Char4 Cross-section Type.
6 Char4 Cross-section Type.
7 RS Stress output request flag, 1=yes, =no.
8 RS X/XB - parametric location of the station.
9 RS Dimension 1.&lt;/p&gt;
&lt;p&gt;677 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRPD Subroutine
Main Index
PBEAM Record
The PBEAM record in EPT datablock consists of 197 words. The first five words and the last 16 words are
common to all the 11 stations. Each of the 11 stations has its own 16 unique words. The details of the
PBEAM record are given in Table 1-4.10 RS Dimension 2.
n+9-1 RS Dimension n (note that the final dimension is the
nonstructural mass).
n+9 I -1. Flag indicating end of cross-section dimensions.
Words 7 through 11 repeat 10 times.
Table 1-4  PBEAM (5402, 54, 262)
Word Name Type Description
1 PID I Property identification number.
2 MID I Material identification number.
3 N I Number of intermediate stations.
4 CCF I Constant cross-section flag. 1 = constant, 2 = variable.
5 X RS Unused.
6 SO RS Stress output request. 1.0 = yes, 0.0 = no.
7 XXB RS Parametric location of the station. Varies between 0. and
1.0.
8 A RS Area.
9 I1 RS Moment of inertia for bending in plane 1.
10 I2 RS Moment of inertia for bending in plane 2.
11 I12 RS Area product of inertia.
12 J RS Torsional constant.
13 NSM RS Nonstructural mass.
14 C1 RS Stress recovery location.
15 C2 RS Stress recovery location.
16 D1 RS Stress recovery location.
17 D2 RS Stress recovery location.
18 E1 RS Stress recovery location.
19 E2 RS Stress recovery location.Table 1-3  PBEAML (9202, 92, 53)
Word Name Type Description&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRPD Subroutine678
Main Index
Listing 1-5  BMTUPD Subroutine.
SUBROUTINE BMTUPD(ID,NID,IDO,NIDO,DIMI,NDIMI,DIMO,NDIMO,ERROR)
C=======================================================================
C   Purpose
C     Convert PBEAML(entity type : TUBE) to PBEAM
C
C   Arguments
C
C   ID    input  int  Contain the integer information PID, MID
C   NID   input  int  Size of ID array, NID = 2
C   DIMI  input  flt  Dimension values of cross section
C                   ( See  FIG.5 IN MEMO SSW-25, REV. 4, DATE 8/16/94)
C   NDIMI input  int  Size of DIMI array
C   IDO   output int  Contain the integer information PID,MID,N,CCF
C   NIDO  output int  Size of IDO array, NIDO = 4
C   DIMO  output flt  Properties of cross section
C   NDIMO output int  Size of DIMO array20 F1 RS Stress recovery location.
21 F2 RS Stress recovery location.
Words 6 through 21 repeat 10 times.
182 K1 RS Area factor for shear for plane 1.
183 K2 RS Area factor for shear for plane 2.
184 S1 RS Shear-relief coefficient for plane 1.
185 S2 RS Shear-relief coefficient for plane 2.
186 NSIA RS Nonstructural mass moment of inertia at end A.
187 NSIB RS Nonstructural mass moment of inertia at end B.
188 CWA RS Warping coefficient for end A.
189 CWB RS Warping coefficient for end B.
190 M1A RS Y-coordinate of center of gravity for nonstructural mass
at end A.
191 M2A RS Z-coordinate of center of gravity for nonstructural mass
at end A.
192 M1B RS Y-coordinate of center of gravity for nonstructural mass
at end B.
193 M2B RS Z-coordinate of center of gravity for nonstructural mass
at end B.
194 N1A RS Y-coordinate for neutral axis at end A.
195 N2A RS Z-coordinate for neutral axis at end A.
196 N1B RS Y-coordinate for neutral axis at end B.
197 N2B RS Z-coordinate for neutral axis at end B.Table 1-4  PBEAM (5402, 54, 262)
Word Name Type Description&lt;/p&gt;
&lt;p&gt;679 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRPD Subroutine
Main Index
C   ERROR output int  Type of error
C
C   Discription for DIMO array
C       DIMO (1)   = X
C       DIMO (2)   = SO
C       DIMO (3)   = XXB
C       DIMO (4)   = A
C       DIMO (5)   = I1
C       DIMO (6)   = I2
C       DIMO (7)   = I12
C       DIMO (8)   = J
C       DIMO (9)   = NSM
C       DIMO (10)  = C1
C       DIMO (11)  = C2
C       DIMO (12)  = D1
C       DIMO (13)  = D2
C       DIMO (14)  = E1
C       DIMO (15)  = E2
C       DIMO (16)  = F1
C       DIMO (17)  = F2
C    DIMO(2) thru DIMO(17) repeat 11 times
C       DIMO (178) = K1
C       DIMO (179) = K2
C       DIMO (180) = S1
C       DIMO (181) = S2
C       DIMO (182) = NSIA
C       DIMO (183) = NSIB
C       DIMO (184) = CWA
C       DIMO (185) = CWB
C       DIMO (186) = M1A
C       DIMO (187) = M2A
C       DIMO (188) = M1B
C       DIMO (189) = M2B
C       DIMO (190) = N1A
C       DIMO (191) = N2A
C       DIMO (192) = N1B
C       DIMO (193) = N2B
C
C  Method
C              Simply calculate the properties and locate that data
C              to the image of PBEAM entries
C    Called by
C              MEVBMD
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION  (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling  sequence arguments
INTEGER          ERROR,ID(NID),IDO(NIDO)
DOUBLE PRECISION DIMI(NDIMI),DIMO(NDIMO)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     NASTRAN common blocks
COMMON /CONDAD/PI&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBMTU,4HPD  /
C=======================================================================
C
C=== WRITE THE PART OF INTEGER
DO 30 II = 1,NID
IDO(II) = ID(II)
30   CONTINUE
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C=== DETECT HOW MANY STATION , CONSTANT OR LINEAR BEAM.
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSGRQ Subroutine680
Main Index
ISTATC = NDIMI/11
DO 35 II = 0,10
NW = II&lt;em&gt;ISTATC
IF (DIMI(3+NW).EQ.0.D0) THEN
call bmsido( ido(3), ido(4),ii)
GO TO 40
END IF
35   CONTINUE
C     If we got here , we have all the stations, so set the values
C
if( dimi(2+9&lt;/em&gt;istatc).eq. dimi(2+10&lt;em&gt;istatc) ) then
ii = 9
else
ii = 10
endif
ido(3) = ii
ido(4) = 0
c
40   continue
DIMO(1) = 0.D0
DO 100 L1 = 0,10
LC = 16&lt;/em&gt;L1
NW = L1*ISTATC
IF (DIMI(3+NW+ISTATC).EQ.0.D0) LC = 160
DIM1 = DIMI(3+NW)
DIM2 = DIMI(4+NW)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     IF ( DIM1.LE.DIM2 ) ERROR = 5102

     DIMO(2+LC) = DIMI(1+NW)
     DIMO(3+LC) = DIMI(2+NW)
     DIMO(4+LC) = PI*(DIM1*DIM1-DIM2*DIM2)
     DIMO(5+LC) = PI*(DIM1**4-DIM2**4)/4.D0
     DIMO(6+LC) = DIMO(5+LC)
     DIMO(7+LC) = 0.D0
     DIMO(8+LC) = PI*(DIM1**4-DIM2**4)/2.D0
     DIMO(9+LC) = DIMI(5+NW)
     DIMO(10+LC) = DIM1
     DIMO(11+LC) = 0.D0
     DIMO(12+LC) = 0.D0
     DIMO(13+LC) = DIM1
     DIMO(14+LC) = -DIM1
     DIMO(15+LC) = 0.D0
     DIMO(16+LC) = 0.D0
     DIMO(17+LC) = -DIM1
     IF (LC.EQ.160) GO TO 110
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;100  CONTINUE
110  DIMO(178) = 0.5D0
DIMO(179) = 0.5D0
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
300  RETURN
END
BSGRQ Subroutine
For the optimization of PBARL or PBEAML entries, you need to provide overall information on the number
of section types in your library and the maximum number of fields on the continuation lines. For the PBARL,
the maximum number is the maximum number of dimensions plus 1 for the non-structural mass field. For
the PBEAML, it is the number of words per station times the eleven possible stations. The count for the
number of station words is the maximum number of dimensions plus three additional words for SO,X/XB
and NSM. BSGRQ is only required if you wish to perform sensitivity or optimization with the section&lt;/p&gt;
&lt;p&gt;681 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRT Subroutine
Main Index
dimensions. The calling sequence and example subroutine for the MSCBML1 library is shown in Listing 1-6.
It is seen that NDIMAX is set to 7 for the PBARL and 99 for the PBEAML.
Listing 1-6  BSGRQ Routine
SUBROUTINE BSGRQ(GRPID,ENTYP, NSECT,NDIMAX,ERROR)
C
C ======================================================================
C   PURPOSE:
C     GET DIMENSION INFORMATION OF BEAM CROSS SECTION OF MSCBML0 TYPES
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C   ARGUMENTS:
C
C    INPUT      :
C       GRPID   - GROUP NAME
C     ENTYP     - INTEGER - Entity Type.
c                           (1: PBARL, 2:PBEAML )
C    OUTPUT     :
C       NSECT   - NUMBER OF DIFFERENT SECTION TYPES
C       NDIMAX  - MAXIMUM NUMBER OF DIMENSION FOR ANY SECTION TYPE
C       ERROR   - INDICATES IF AN ERROR HAS OCCURRED. THE CODE RETURNED
C                 INDICATES THE TYPE OF ERROR
C
C   REASSIGNED :
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C   CALLED BY:
C             BCGRQ routine
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
C
integer entyp
C
if ( entyp .eq. 1 ) then
nsect  = 21
ndimax = 7
else if ( entyp .eq. 2 ) then
nsect  = 21
ndimax = 99
endif
C
RETURN
END
BSBRT Subroutine
The BSBRT routine provides the name, number of dimension, and the number of constraints for each
section in the library. As an example, the name of the tube section, shown in Figure 1-2, in the MSC standard
library is “TUBE”, the number of dimension for the tube section is three (OUTER RADIUS, INNER
RADIUS, and NSM) and there is one physical constraint. This subroutine is shared by the PBARL and
PBEAML. For the PBEAML, the numbers apply to each station.
The physical constraint is that the inner radius (DIM2) cannot be greater than outer radius (DMI1). It is
necessary to specify the constraints so that the optimization of the section dimension in SOL 200 does not
result into an inconsistent shape.Note:   The arguments GRPID and ERROR are not used. GRPID is reserved for future use. You may
use the ERROR argument to send an error code which could later be used to print an error
message.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRT Subroutine682
Main Index
Figure 1-2  Tube Section
This routine is called during the optimization process. The calling sequence and example routine is given in
Listing 1-7.
Listing 1-7  BSBRT Subroutine
SUBROUTINE BSBRT(GRPID,ENTYP,TYPE,NDIM,NCONST,NSECT,ERROR)
C
C ======================================================================
C   Purpose
C          Get type dimensioning information for default sections
C
C   Arguments
C
C       GRPID  input  integer      The ID of group name
C       ENTYP  input  integer      1: PBARL, 2: PBEAML
C       TYPE   output character*8  Arrays for cross section types
C       NDIM   output integer      Number of dimensions for isect
C                                  section type
C       NCONST output integer      Number of dimensional constraints
C                                  imposed by isect section type
C       NSECT  input  integer      Number of sections
C       ERROR  output integer      Type of error
C
C   Method
C          Transfers dimension information for various sections
C
C   Called by
C             BCBRT routine
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)Y
ZDim1
Dim2F
EDC
Tuber0DIM1 =
riDIM2 =&lt;/p&gt;
&lt;p&gt;683 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRT Subroutine
Main Index&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER      GRPID,ENTYP,NDIM(NSECT),NCONST(NSECT)
CHARACTER*8  TYPE(NSECT)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBSBR,4HT   /
C ======================================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  GRPID = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C      ENTYP = 1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  TYPE(1) = &#39;ROD&#39;
  NDIM(1) = 2
  NCONST(1) = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C
TYPE(2) = &amp;lsquo;TUBE&amp;rsquo;
NDIM(2) = 3
NCONST(2) = 1
C
TYPE(3) = &amp;lsquo;BAR&amp;rsquo;
NDIM(3) = 3
NCONST(3) = 0
C
TYPE(4) = &amp;lsquo;BOX&amp;rsquo;
NDIM(4) = 5
NCONST(4) = 2
C
TYPE(5) = &amp;lsquo;I&amp;rsquo;
NDIM(5) = 7
NCONST(5) = 3
C
TYPE(6) = &amp;lsquo;T&amp;rsquo;
NDIM(6) = 5
NCONST(6) = 2
C
TYPE(7) = &amp;lsquo;L&amp;rsquo;
NDIM(7) = 5
NCONST(7) = 2
C
TYPE(8) = &amp;lsquo;CHAN&amp;rsquo;
NDIM(8) = 5
NCONST(8) = 2
C
TYPE(9) = &amp;lsquo;CROSS&amp;rsquo;
NDIM(9) = 5
NCONST(9) = 1
C
TYPE(10) = &amp;lsquo;H&amp;rsquo;
NDIM(10) = 5
NCONST(10) = 1
C
TYPE(11) = &amp;lsquo;T1&amp;rsquo;
NDIM(11) = 5
NCONST(11) = 1
C
TYPE(12) = &amp;lsquo;I1&amp;rsquo;
NDIM(12) = 5
NCONST(12) = 1
C
TYPE(13) = &amp;lsquo;CHAN1&amp;rsquo;
NDIM(13) = 5
NCONST(13) = 1
C
TYPE(14) = &amp;lsquo;Z&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRID Subroutine684
Main Index
NDIM(14) = 5
NCONST(14) = 1
C
TYPE(15) = &amp;lsquo;CHAN2&amp;rsquo;
NDIM(15) = 5
NCONST(15) = 2
C
TYPE(16) = &amp;lsquo;T2&amp;rsquo;
NDIM(16) = 5
NCONST(16) = 2
C
TYPE(17) = &amp;lsquo;BOX1&amp;rsquo;
NDIM(17) = 7
NCONST(17) = 2
C
TYPE(18) = &amp;lsquo;HEXA&amp;rsquo;
NDIM(18) = 4
NCONST(18) = 1
C
TYPE(19) = &amp;lsquo;HAT&amp;rsquo;
NDIM(19) = 5
NCONST(19) = 2
C
TYPE(20) = &amp;lsquo;HAT1&amp;rsquo;
NDIM(20) = 6
NCONST(20) = 3&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BSBRID Subroutine
The BSBRID subroutine is required if optimization is to be performed. Its function is to provide information
required in the calculation of the sensitivities (gradients) of the bar and beam properties with respect to their
dimensions.
T wo basic types of information are provided. The first is the SENTYP array, which indicates how each section
property varies as a function of each dimension. Values in the SENTYP array can be either: 0 for no variation;
1 for a linear variation; 2 for a nonlinear variation; 3 for an unknown variation. The SENTYP=3 option is to
be used when you know that the property is a function of the design dimension, but analytical gradient
information is not being provided using the BSBRGD subroutine. In this case, MSC Nastran will calculate
the gradients for you using central differencing techniques.
The second piece of information is the ALIN array. This array provides any linear sensitivity data. For
example, the C1 stress recovery location for the TUBE section is 1.0 * DIM1 so that this sensitivity of this
stress recovery point with respect to the first dimension is 1.0.
You may use your own naming convention for the subroutines that specify the section sensitivity data. The
calling tree used for the MSC Nastran standard library is shown in Figure 1-3.&lt;/p&gt;
&lt;p&gt;685 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRID Subroutine
Main Index
Figure 1-3  Calling Tree to Generate Sensitivity Data
BSBRID calls the bar evaluator routine MSBRID/S for the BAR element and MSBMID/S for the BEAM
element. The evaluators in turn call the routines for each section. The routines are named BRxxID or
BMxxID, where xx is a two-letter identifier for the section. For example, the routine for the bar TUBE section
is called BRTUID while the beam TUBE is called BMTUID. Listings of BSBRID, MSBRID, BRTUID and
BMTUID are given in Listing 1-8, Listing 1-9, Listing 1-10, and Listing 1-11, respectively. While MSBMID is not
shown, it can be developed by calling the BMXXID subroutines in place of the BRXXID of MSBRID.
Listing 1-8  BSBRID Subroutine
SUBROUTINE BSBRID(GRPID,ENTYP,SECTON,SENTYP,ALIN,NDIM,NPROP,
1                  ERROR)
C =====================================================================
C   Purpose
C     set up section dependent information for a particular cross
C     section type
C
C   Arguments
C
C       GRPID  input  integer      ID of the group
C       ENTYP  input  integer      1: PBARL, 2: PBEAML
C       SECTON input  character*8  Section type
C       SENTYP output integer      Type of sensitivity, 0: invariant,
C                                  1: linear, 2: nonlinear
C       ALIN   output double       Matrix providing the linear
C                                  factors for sensitive relationships
C       NDIM   input  integer      Number of dimensions
C       NPROP  input  integer      Number of properties
C       ERROR  output integer      Type of error
C
C   Method
C              Simply transfer control based on entry type
C
C   Called by
C              BCBRID
CBRTUID BRBXIDMSBRID
BMTUID BMBXIDBSBRPD
MSBMD
OTHER
SECTIONS&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRID Subroutine686
Main Index
C   Calls
C              MSBRID, MSBMID
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          ENTYP,ERROR,GRPID,SENTYP(NPROP,NDIM)
CHARACTER*8      SECTON
DOUBLE PRECISION ALIN(NPROP,NDIM)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBSBR,4HID  /
C ======================================================================
GRPID = 1
IF(ENTYP.EQ.1) THEN
CALL MSBRID(SECTON,SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE if ( entyp .eq. 2 ) then
CALL MSBmID(SECTON,SENTYP,ALIN,NDIM,NPROP,ERROR)
else
ERROR = 5400
END IF&lt;/p&gt;
&lt;p&gt;C
RETURN
END
MSBRID Subroutine
MSBRID is a brancher routine for providing information on the calculation of sensitivities for each of the
bar types. You may rename this routine as you like or move its function to BSBRID. MSBRID calls the
BRXXID routines, where XX is the two-letter keyword for various section types.&lt;/p&gt;
&lt;p&gt;687 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRID Subroutine
Main Index
Listing 1-9  MSBRID Subroutine
SUBROUTINE MSBRID(SECTON,SENTYP,ALIN,NDIM,NPROP,ERROR)
C =====================================================================
C   Purpose
C     To set up section dependent information for PBARL cross section
C
C   Arguments
C
C       SECTON input  character*8 Name of section type
C       SENTYP output integer     Type of sensitivity, 0: invariant,
C                                 1: linear, 2: nonlinear
C       ALIN   output double      Matrix providing the linear factors
C                                 for sensitive relationships
C       NDIM   input  integer     No. of dimensions
C       NPROP  input  integer     No. of properties in EPT data block
C       ERROR  output integer     Type of error
C
C    Method
C              Simply transfer the section dependent information of
C              the 19 kinds
C    Called by
C              BSBRID
C
C    Calls
C              BRRDID, BRBRID, BRTUID, BRBXID, BRIIID, BRLLID, BRTTID,
C              BRCHID, BRCRID, BRHHID, BRT1ID, BRI1ID, BRC1ID, BRZZID,
C              BRC2ID, BRT2ID, BRB1ID, BRHXID, BRHTID, BRCLID
C              ZEROI, ZEROD (Nastran utility)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  IMPLICIT INTEGER (I-N)
  IMPLICIT DOUBLE PRECISION (A-H,O-Z)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C     Calling sequence arguments
CHARACTER*8      SECTON
INTEGER          ERROR,SENTYP(NPROP,NDIM)
DOUBLE PRECISION ALIN(NPROP,NDIM)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HMSBR,4HID  /
C ======================================================================
C
CALL ZEROI( SENTYP(1,1), NPROP&lt;em&gt;NDIM )
CALL ZEROD( ALIN(1,1), NPROP&lt;/em&gt;NDIM )
ERROR = 0&lt;/p&gt;
&lt;p&gt;C
IF(SECTON.EQ.’ROD’) THEN
CALL BRRDID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’BAR’) THEN
CALL BRBRID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’TUBE’) THEN
CALL BRTUID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’BOX’) THEN
CALL BRBXID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’I’) THEN
CALL BRIIID(SENTYP,ALIN,NDIM,NPROP,ERROR)
c10939ELSE IF(SECTON.EQ.’L’) THEN
c10939   CALL BRLLID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’T’) THEN
CALL BRTTID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’CHAN’) THEN
CALL BRCHID(SENTYP,ALIN,NDIM,NPROP,ERROR)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRID Subroutine688
Main Index
ELSE IF(SECTON.EQ.’CROSS’) THEN
CALL BRCRID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’H’) THEN
CALL BRHHID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’T1’) THEN
CALL BRT1ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’I1’) THEN
CALL BRI1ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’CHAN1’) THEN
CALL BRC1ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’Z’) THEN
CALL BRZZID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’CHAN2’) THEN
CALL BRC2ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’T2’) THEN
CALL BRT2ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’BOX1’) THEN
CALL BRB1ID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’HEXA’) THEN
CALL BRHXID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’HAT’) THEN
CALL BRHTID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE IF(SECTON.EQ.’HAT1’) THEN
CALL BRCLID(SENTYP,ALIN,NDIM,NPROP,ERROR)
ELSE
ERROR = 5410
END IF&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BRTUID Subroutine
BRTUID is an example routine that shows how to define the sensitivity type of each of the bar properties for
the tube and the subset of the sensitivities that are linear.
Listing 1-10  BRTUID Subroutine
SUBROUTINE BRTUID(SENTYP,ALIN,NDIM,NPROP,ERROR)
C ======================================================================
C   Purpose
C     To set up section dependent information for rod cross section
C
C   Arguments
C
C       SENTYP output integer  Type of sensitivity, 0: invariant,
C                              1: linear, 2: nonlinear
C       ALIN   output double   Matrix providing the linear factors for
C                              sensitive relationships
C       NDIM   input  integer  No. of dimensions
C       NPROP  input  integer  No. of properties in EPT data block
C       ERROR  output integer  Type of error
C
C   Method
C              Simply provides the information
C
C   Called by
C              MSBRID
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          ERROR,SENTYP(NPROP,NDIM)
DOUBLE PRECISION ALIN(NPROP,NDIM)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P36</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_036/</guid>
      <description>
        
        
        &lt;p&gt;689 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRID Subroutine
Main Index&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBRTU,4HID  /
C ======================================================================
C
ALIN( 7,1) =  1.0D0
ALIN(10,1) =  1.0D0
ALIN(11,1) = -1.0D0
ALIN(14,1) = -1.0D0
ALIN( 5,3) =  1.0D0
C
SENTYP( 1,1) = 2
SENTYP( 1,2) = 2
SENTYP( 2,1) = 2
SENTYP( 2,2) = 2
SENTYP( 3,1) = 2
SENTYP( 3,2) = 2
SENTYP( 4,1) = 2
SENTYP( 4,2) = 2
SENTYP( 7,1) = 1
SENTYP(10,1) = 1
SENTYP(11,1) = 1
SENTYP(14,1) = 1
SENTYP( 5,3) = 1&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BMTUID Subroutine
BMTUID is an example routine that shows how to define the sensitivity type of each of the beam properties
for the tube and the subset of the sensitivities that are linear.
Listing 1-11  BMTUID Subroutine
SUBROUTINE BMTUID(SENTYP,ALIN,NDIM,NPROP,ERROR)
C ======================================================================
C   Purpose
C     To set up section dependent information for TUBE cross section
C
C   Arguments
C
C       SENTYP output integer  Type of sensitivity, 0: invariant,
C                              1: linear, 2: nonlinear
C       ALIN   output double   Matrix providing the linear factors for
C                              sensitive relationships
C       NDIM   input  integer  No. of dimensions
C       NPROP  input  integer  No. of properties in EPT data block
C       ERROR  output integer  Type of error
C
C   Method
C              Simply provides the information
C
C   Called by
C              MSBMID
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          ERROR,SENTYP(NPROP,NDIM)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRGD Subroutine690
Main Index
DOUBLE PRECISION ALIN(NPROP,NDIM)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBMTU,4HID  /
C ======================================================================
C
C     Tube dimensions for the beam:
C     1 - s0
C     2 - x/xb
C     3 - outer radius
C     4 - inner radius
C     5 - nsm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ALIN(10,3) =  1.0D0
  ALIN(13,3) =  1.0D0
  ALIN(14,3) = -1.0D0
  ALIN(17,3) = -1.0D0
  ALIN( 9,5) =  1.0D0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C
SENTYP( 4,3) = 2
SENTYP( 4,4) = 2
SENTYP( 5,3) = 2
SENTYP( 5,4) = 2
SENTYP( 6,3) = 2
SENTYP( 6,4) = 2
SENTYP( 8,3) = 2
SENTYP( 8,4) = 2
SENTYP(10,3) = 1
SENTYP(13,3) = 1
SENTYP(14,3) = 1
SENTYP(17,3) = 1
SENTYP( 9,5) = 1
C
100  continue
C      call mprtd ( ‘alin’, alin, nprop,ndim )
C     &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
RETURN
END
BSBRGD Subroutine
The BSBRGD subroutine is required if optimization is to be performed and analytical sensitivities are needed
(SENTYPE =2 in subroutine BSBRID). Its function is to provide the nonlinear gradients of the bar
properties with respect to the bar dimensions. You may use your own naming convention for the subroutines
that calculate the section gradients from the dimensions. The calling tree used for the MSC Nastran standard
library is shown in Figure 1-4.&lt;/p&gt;
&lt;p&gt;691 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRGD Subroutine
Main Index
Figure 1-4  Calling Tree to Generate Nonlinear Sensitivity Data
BSBRGD calls the bar evaluator routine MSBRGD/S for the BAR element and MSBMGD/S for the BEAM
element. The evaluator, in turn, calls the routines for each section. The routines are named BRxxGD or
BMxxGD where xx is a two-letter identifier for the section. For example, the routine for the TUBE section
is called BRTUGD. Listings of BSBRGD, MSBRGD, BRTUGD and BMTUGD are given in Listing 1-12,
Listing 1-13, Listing 1-14, and Listing 1-15, respectively. MSBMGD is not shown but can be developed by calling
MBxxGD subroutines in place of the BRxxGD of MSBRGP .
Listing 1-12  BSBRGD Subroutine
SUBROUTINE BSBRGD(GRPID,ENTYP,TYPE,DIMI,NDIMI,ANONL,NPROP,ERROR)
C ======================================================================
C   Purpose
C     To get the nonlinear factors of sensitivities for default sections
C
C   Arguments
C
C       GRPID input  integer      ID of group name
C       ENTYP input  integer      1: PBARL, 2: PBEAML
C       TYPE  input  character*8  Type name of cross-section
C       DIMI  input  double       Array from EPT record
C       NDIMI input  integer      Number of dimensions (Plus NSM)
C       ANONL output double       Array providing the nonlinear factors
C                                 for sensitivity relationships
C       NPROP input  integer      Number of properties in PBAR entries
C       ERROR output integer      Type of error
C
C   Method
C             Simply transfer control based on entry types
C   Called by
C             BCBRGD
C
C   Calls
C             MSBRGD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)
BRTUGD BRBXGDMSBRGD
BMTUGD BMBXGDBSBRGD
MSBMD
OTHER
SECTIONS&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRGD Subroutine692
Main Index
C     Calling sequence arguments
INTEGER          GRPID,ENTYP,NDIMI,NPROP,ERROR
CHARACTER*8      TYPE
DOUBLE PRECISION ANONL(NPROP,NDIMI), DIMI(NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBSBR,4HGD  /
C ======================================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  GRPID = 1
  IF(ENTYP .EQ. 1) THEN
     CALL MSBRGD(TYPE,DIMI,NDIMI,ANONL,NPROP,ERROR)
  ELSE if ( entyp .eq. 2 ) then
     CALL MSBMGD(TYPE,DIMI,NDIMI,ANONL,NPROP,ERROR)
  else
     ERROR = 5300
  END IF
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
RETURN
END
MSBRGD Subroutine
MSBRGD is a brancher routine for providing information on the calculation of nonlinear gradients for each
of the bar types. You may rename this routine as you like or move its function to BSBRGD. MSBRGD calls
the BRxxGD routines, where xx is the two-letter keyword for various section types.
Listing 1-13  MSBRGD Subroutine
SUBROUTINE MSBRGD(TYPE,DIMI,NDIMI,ANONL,NPROP,ERROR)
C
C&lt;/h1&gt;&lt;p&gt;=
C   Purpose
C     To get the nonlinear factors of sensitivities for PBARL entries
C
C   Arguments
C
C       TYPE  input  character*8  Type name of cross-section
C       DIMI  input  double       Array from EPT record
C       NDIMI input  integer      Number of dimensions (Plus NSM)
C       ANONL output double       Array providing the nonlinear factors
C                                 for sensitivity relationships
C       NPROP input  integer      Number of properties in PBAR entries
C       ERROR output integer      Type of error
C
C   Method
C             Simply transfer information based on cross-section type
C   Called by
C             BSBRGD
C
C   Calls
C             BRRDGD,BRBRGD,BRBXGD,BRTUGD,BRIIGD,BRTTGD,BRLLGD,BRCHGD
C             BRCRGD,BRHHGD,BRT1GD,BRT2GD,BRI1GD,BRC1GD,BRC2GD,BRZZGD&lt;/p&gt;
&lt;h2&gt;693 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRGD Subroutine
Main Index
C             BRHXGD,BRB1GD,BRHTGD,ZEROD(Nastran utility)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;c--------------------------------------------------------------------&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#c--------------------------------------------------------------------&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;  IMPLICIT INTEGER (I-N)
  IMPLICIT DOUBLE PRECISION (A-H,O-Z)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          NDIMI,NPROP,ERROR
CHARACTER*8      TYPE
DOUBLE PRECISION ANONL(NPROP,NDIMI), DIMI(NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;h1&gt;C     Local data
DATA NAM/4HMSBR,4HGD  /
C&lt;/h1&gt;&lt;p&gt;=&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  CALL ZEROD( ANONL(1,1), NPROP*NDIMI )
  ERROR = 0

  IF(TYPE.EQ.’ROD’)  THEN
        CALL  BRRDGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
  ELSE IF(TYPE.EQ.’BAR’)  THEN
         CALL BRBRGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
  ELSE IF(TYPE.EQ.’BOX’)  THEN
         CALL BRBXGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
  ELSE IF(TYPE.EQ.’TUBE’)  THEN
         CALL BRTUGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
  ELSE IF(TYPE.EQ.’I’)  THEN
         CALL BRIIGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;c10939ELSE IF(TYPE.EQ.’L’)  THEN
c10939       CALL BRLLGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’T’)  THEN
CALL BRTTGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’CHAN’)  THEN
CALL BRCHGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’CROSS’) THEN
CALL BRCRGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’H’) THEN
CALL BRHHGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’T1’) THEN
CALL BRT1GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’I1’) THEN
CALL BRI1GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’CHAN1’) THEN
CALL BRC1GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’Z’) THEN
CALL BRZZGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’CHAN2’) THEN
CALL BRC2GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’T2’) THEN&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRGD Subroutine694
Main Index
CALL BRT2GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’BOX1’) THEN
CALL BRB1GD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’HEXA’) THEN
CALL BRHXGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’HAT’) THEN
CALL BRHTGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE IF(TYPE.EQ.’HAT1’) THEN
CALL BRCLGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
ELSE
ERROR = 5310
ENDIF&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BRTUGD Subroutine
BRTUGD is a BAR example routine that shows how to define the nonlinear gradients of the TUBE section
as a function of the outer and inner radii of the tube.
Listing 1-14  BRTUGD Subroutine
SUBROUTINE BRTUGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
C ======================================================================
C   Purpose
C     To get the nonlinear factors of sensitivities for TUBE section
C
C   Arguments
C
C       DIMI  input  double       Array of EPT records (Dimi+NSM)
C       NDIMI input  integer      Number of dimensions (Plus NSM)
C       ANONL output double       Array providing the nonlinear factors
C                                 for sensitivity relationships
C       NPROP input  integer      Number of properties in PBAR entries
C       ERROR output integer      Type of error
C
C   Method
C             Simply calculates the nonlinear factors
C   Called by
C             MSBRGD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          NDIMI,NPROP,ERROR
DOUBLE PRECISION ANONL(NPROP,NDIMI), DIMI(NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Nastran common blocks
COMMON /CONDAD/ PI&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBRTU,4HGD  /
C ======================================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  DIM1       = DIMI(1)
  DIM2       = DIMI(2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;695 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRGD Subroutine
Main Index
PDIM13     = PI&lt;em&gt;DIM1**3
PDIM23     = PI&lt;/em&gt;DIM2**3
C
ANONL(1,1) = 2&lt;em&gt;PI&lt;/em&gt;DIM1
ANONL(1,2) = -2&lt;em&gt;PI&lt;/em&gt;DIM2
ANONL(2,1) = PDIM13
ANONL(2,2) = -PDIM23
ANONL(3,1) = PDIM13
ANONL(3,2) = -PDIM23
ANONL(4,1) = 2&lt;em&gt;PDIM13
ANONL(4,2) = -2&lt;/em&gt;PDIM23&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BMTUGD Subroutine
BMTUGD is a BEAM example routine that shows how to define the nonlinear gradients of the beam TUBE
section as a functional inner and outer radii of the tube.
Listing 1-15  BMTUGD Subroutine
SUBROUTINE BMTUGD(DIMI,NDIMI,ANONL,NPROP,ERROR)
C
C ======================================================================
C   Purpose
C     To get the nonlinear factors of sensitivities for TUBE section
C
C   Arguments
C
C       DIMI  input  double       Array of EPT records (Dimi+NSM)
C       NDIMI input  integer      Number of dimensions (Plus NSM)
C       ANONL output double       Array providing the nonlinear factors
C                                 for sensitivity relationships
C       NPROP input  integer      Number of properties in PBEAM entries
C       ERROR output integer      Type of error
C
C   Method
C             Simply calculates the nonlinear factors
C   Called by
C             MSBMGD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER          NDIMI,NPROP,ERROR
DOUBLE PRECISION ANONL(NPROP,NDIMI), DIMI(11 * NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Nastran common blocks
COMMON /CONDAD/ PI&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBMRD,4HGD  /
C ======================================================================&lt;/p&gt;
&lt;p&gt;C     Tube dimensions for the beam:
C     1 - s0
C     2 - x/xb
C     3 - outer radius
C     4 - inner radius
C     5 - nsm&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRCD Subroutine696
Main Index
C     items 1 through 5 repeat for 10 additional stations&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ndims = 5
  do 20 isect = 0, 10
     irows = isect * 16 + 1
     idim  = isect * ndims
     idim3 = idim + 3
     idim4 = idim + 4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C     special handling puts end b data
if ( isect .lt. 10 .and. dimi(idim3 + ndims) .eq. 0 ) then
irows = 161
endif
C
DIM1  = DIMI(idim3)
DIM2  = DIMI(idim4)
PDIM13     = PI&lt;em&gt;DIM1**3
PDIM23     = PI&lt;/em&gt;DIM2**3
C
ANONL(irows+ 3,3) = 2&lt;em&gt;PI&lt;/em&gt;DIM1
ANONL(irows+ 3,4) = -2&lt;em&gt;PI&lt;/em&gt;DIM2
ANONL(irows+ 4,3) = PDIM13
ANONL(irows+ 4,4) = -PDIM23
ANONL(irows+ 5,3) = PDIM13
ANONL(irows+ 5,4) = -PDIM23
ANONL(irows+ 7,3) = 2&lt;em&gt;PDIM13
ANONL(irows+ 7,4) = -2&lt;/em&gt;PDIM23&lt;/p&gt;
&lt;p&gt;C
if ( irows .eq. 161) go to 30
20   continue
30   continue
C      Call mprtd ( ‘nonlin’,anonl,nprop,ndimi )&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BSBRCD Subroutine
The BSBRCD subroutine allows you to place constraints on values the beam dimensions can take during a
design task. It is not needed unless optimization is used and, even then, is available only to impose conditions
on the dimensions to keep the optimization process from selecting physically meaningless dimensions.
For example, the optimizer might select a TUBE design with the inner radius greater than the outer radius
because this allows for a negative are and therefore a negative weight (something a weight minimization
algorithm loves!). These constraints are not the same as the PMIN and PMAX property limits that are
imposed on the DVPREL1 entry. Instead, these are constraints that occur between or among section
dimensions. A DRESP2 entry could be used to develop the same design constraints, but the subroutine
reduces the burden on the user interface, the primary goal of the beam library project. The calling tree used
for the MSC Nastran standard library is shown in Figure 1-5.&lt;/p&gt;
&lt;p&gt;697 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRCD Subroutine
Main Index
Figure 1-5  Calling Tree to Generate Beam Dimension Constraints
BSBRCD call the bar evaluator routine MSBRCD or the beam evaluator routine MSBMCD. The evaluator
in turn calls the routines for each section that requires constraints. The routines are named BRxxCD or
BMxxCD, where xx is a two-letter identifier for the section. For example, the routine for the TUBE section
is called BRTUCD. Listings for BSBRCD, MSBRCD, BRTUCD and BMTUCD are given in Listing 1-16,
Listing 1-17, Listing 1-18, and Listing 1-19, respectively. MSBMCD is not shown, but can be developed by calling
the BMxxCD subroutines in place of BRxxCD of MSBRCD.BRTUCD BRBXCDMSBRCD
BMTUCD BMBXCDBSBRCD
MSBMCD
OTHER
SECTIONS&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRCD Subroutine698
Main Index
Listing 1-16  BSBRCD Subroutine
SUBROUTINE BSBRCD(GRPID,ENTYP,TYPE,AFACT,NCONST,NDIMI,ERROR)
C
C ======================================================================
C   Purpose
C           To get constraint information for default types
C
C   Arguments
C
C       GRPID  input integer     ID of the group name
C       ENTYP  input integer     1: PBARL, 2: PBEAML
C       TYPE   input character*8 Section type
C       NCONST input integer     Number of constraints
C                                for the section type
C       NDIMI  input integer     Number of dimensions
C                                for the section type
C       AFACT  output double     The factor for the NDIMI dimension in
C                                the constraint relation. Dimensions are
C                                NCONST by NDIMI.
C       ERROR  output integer    type of error
C
C   Method
C             Simply transfers control based on PBARL or PBEAML entries
C
C   Called by
C             BCBRCD
C
C   Calls
C             MSBRCD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
CHARACTER*8          TYPE
INTEGER              GRPID,ENTYP,NCONST,NDIMI,ERROR
DOUBLE PRECISION     AFACT(NCONST,NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local Variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBSBR,4HCD  /
C ======================================================================
C
GRPID = 1
IF(ENTYP.eq.1) THEN
CALL MSBRCD(TYPE,AFACT,NCONST,NDIMI,ERROR)
else
CALL MSBMCD(TYPE,AFACT,NCONST,NDIMI,ERROR)
END IF
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
RETURN
END
MSBRCD Subroutine
MSBRCD is a brancher routine for providing information on the calculation of gradients for each of the bar
types. You may rename this routine as you like or move its function to BSBRCD. MSBRCD calls the
BRxxCD routines, where xx is the two-letter keyword for various section types.&lt;/p&gt;
&lt;p&gt;699 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRCD Subroutine
Main Index
Listing 1-17  MSBRCD Subroutine
SUBROUTINE MSBRCD(TYPE,AFACT,NCONST,NDIMI,ERROR)
C
C ======================================================================
C   Purpose
C           To get constraint information for PBARL types
C
C   Arguments
C
C       TYPE   input character*8 Section type
C       AFACT  output double     The factor for the NDIMI dimension in
C                                the constraint relation. Dimensions are
C                                NCONST by NDIMI.
C       NCONST input integer     Number of constraints
C                                for the section type
C       NDIMI  input integer     Number of dimensions
C                                for the section type
C       ERROR  output integer    type of error
C
C   Method
C             Simply transfers control based on group name
C
C   Called by
C             BSBRCT
C
C   Calls
C             BRTUCD, BRBXCD, BRIICD, BRTTCD, BRLLCD, BRCHCD, BRCRCD,
C             BRHHCD, BRT1CD, BRI1CD, BRC1CD, BRZZCD, BRC2CD, BRT2CD,
C             BRB1CD, BRHXCD, BRHTCD, BRCLCD,
C             ZEROD (Nastran utility)
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
CHARACTER*8          TYPE
INTEGER              NCONST,NDIMI,ERROR
DOUBLE PRECISION     AFACT(NCONST,NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local Variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HMSBR,4HCD  /
C ======================================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  CALL ZEROD( AFACT(1,1), NCONST*NDIMI )
  ERROR = 0

  IF(TYPE.EQ.’TUBE’) THEN
     CALL BRTUCD(AFACT,NCONST,NDIMI,ERROR)
  ELSE IF(TYPE.EQ.’BOX’) THEN
     CALL BRBXCD(AFACT,NCONST,NDIMI,ERROR)
  ELSE IF(TYPE.EQ.’I’) THEN
     CALL BRIICD(AFACT,NCONST,NDIMI,ERROR)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;c10939ELSE IF(TYPE.EQ.’L’) THEN
c10939   CALL BRLLCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’T’) THEN
CALL BRTTCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’CHAN’) THEN
CALL BRCHCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’CROSS’) THEN
CALL BRCRCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’H’) THEN
CALL BRHHCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’T1’) THEN
CALL BRT1CD(AFACT,NCONST,NDIMI,ERROR)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSBRCD Subroutine700
Main Index
ELSE IF(TYPE.EQ.’I1’) THEN
CALL BRI1CD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’CHAN1’) THEN
CALL BRC1CD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’Z’) THEN
CALL BRZZCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’CHAN2’) THEN
CALL BRC2CD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’T2’) THEN
CALL BRT2CD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’BOX1’) THEN
CALL BRB1CD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’HEXA’) THEN
CALL BRHXCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’HAT’) THEN
CALL BRHTCD(AFACT,NCONST,NDIMI,ERROR)
ELSE IF(TYPE.EQ.’HAT1’) THEN
CALL BRCLCD(AFACT,NCONST,NDIMI,ERROR)
ELSE
ERROR = 5500
END IF&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BRTUCD Subroutine
BRTUCD is an example routine that shows how to define the constraints for a bar section. This example
routine is for the TUBE section and imposes a single constraint that -DIM1 + DIM2 &amp;lt; 0.0, where DIM1 is
the outer radius and DIM2 is the inner radius of the tube. The constraints should always be specified so that
the specified linear combination of dimensions is less or equal to zero when the constraint is satisfied.
Listing 1-18  BRTUCD Subroutine
SUBROUTINE BRTUCD(AFACT,NCONST,NDIMI,ERROR)
C ======================================================================
C   Purpose
C           To get constraint information for TUBE type
C
C   Arguments
C
C       AFACT  output double     The factor for the NDIMI dimension in
C                                the constraint relation. Dimensions are
C                                NCONST by NDIMI.
C       NCONST input integer     Number of constraints
C                                for the section type
C       NDIMI  input integer     Number of dimensions
C                                for the section type
C       ERROR  output integer    type of error
C
C   Method
C             Simply transfers constraint information
C
C   Called by
C             MSBRCD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER              NCONST,NDIMI,ERROR
DOUBLE PRECISION     AFACT(NCONST,NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local Variables&lt;/p&gt;
&lt;p&gt;701 Appendix A: Adding Your Own Beam Cross-Section Library
BSBRCD Subroutine
Main Index
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBRTU,4HCD  /
C ======================================================================
C
IF(NCONST.NE.1) THEN
ERROR = 5502
RETURN
END IF
C
AFACT(1,1) = -1.0D0
AFACT(1,2) =  1.0D0&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BMTUCD Subroutine
BMTUCD is an example routine that shows how to define the constraints for a beam section This example
routine is for the TUBE section and imposes a single constraint that -DIM1 + DIM2 &amp;lt; 0.0, where DIM1 is
the outer radius and DIM2 is the inner radius of the tube. The constraints should always be specified so that
the specified linear combination of dimensions is less or equal to zero when the constraint is satisfied.
Listing 1-19  BMTUCD Subroutine
SUBROUTINE BMTUCD(AFACT,NCONST,NDIMI,ERROR)
C
C ======================================================================
C   Purpose
C           To get constraint information for TUBE type
C
C   Arguments
C
C       AFACT  output double     The factor for the NDIMI dimension in
C                                the constraint relation. Dimensions are
C                                NCONST by NDIMI.
C       NCONST input integer     Number of constraints
C                                for the section type
C       NDIMI  input integer     Number of dimensions
C                                for the section type
C       ERROR  output integer    type of error
C
C   Method
C             Simply transfers constraint information
C
C   Called by
C             MSBMCD
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
IMPLICIT INTEGER (I-N)
IMPLICIT DOUBLE PRECISION (A-H,O-Z)&lt;/p&gt;
&lt;p&gt;C     Calling sequence arguments
INTEGER              NCONST,NDIMI,ERROR
DOUBLE PRECISION     AFACT(NCONST,NDIMI)&lt;/p&gt;
&lt;p&gt;C     Local Variables
INTEGER NAM(2)&lt;/p&gt;
&lt;p&gt;C     Local data
DATA NAM/4HBMTU,4HCD  /
C ======================================================================
C
IF(NCONST.NE.1) THEN&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
BSMSG Subroutine702
Main Index
ERROR = 5502
RETURN
END IF
C
AFACT(1,3) = -1.0D0
AFACT(1,4) =  1.0D0&lt;/p&gt;
&lt;p&gt;C
RETURN
END
BSMSG Subroutine
The Error handling is performed by a subroutine called bsmsg.f. This routine has the following parameters.
SUBROUTINE BSMSG(GRPID,ERRCOD,MXLEN,Z,ERROR)
C ======================================================================
C   Purpose
C     To handle the error message of ‘MSCBML0’ group
C &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
C   Arguments
C
C   GRPID  input  int    ID of group or group name
C   ERRCOD input  int    Error message number if any found
C   MXLEN  output int    Maximum length of the message that can be passed
C   Z      output char   Array to contain the message return
C   ERROR  output int    The code returned indicates the type of error
C
C   Reassigned
C
C   Called by
C             BCMSG routine
C&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
The purpose of this subroutine is to return an error String associated with an error code. The error codes are
to be returned by the other 7 “BS&amp;hellip;” routines and, as such, the “BSMSG” routine is used as the repository of
all of the error messages for the Beam Library applications.
For example, suppose that “BSBRPD” application returns an error code of 5103 when a certain error
condition occurs. Then, the Beam Library Client routines will expect that there will be String returned from
the “BSMSG” routine, which corresponds to this error code. These error messages will be printed in the
“*.f06” file to guide the user as to what the error could have been and how to fix it. The string is limited to
be no more than 139 characters.
The following is an example of BSMSG code construct:
IF(ERRCOD .EQ. 5104) THEN
Z(1:MXLEN) =  &amp;rsquo;this is a User specified error message&amp;hellip;&amp;rsquo;//
&amp;amp;   &amp;rsquo; Message can be up to 139 character long..&amp;rsquo;
ERROR = ERRCOD
ELSE IF &amp;hellip;
&amp;hellip;
&amp;hellip;
END
We recommend that you use the example Beam Server files as a template to generate your BSMSG routines.&lt;/p&gt;
&lt;p&gt;703 Appendix A: Adding Your Own Beam Cross-Section Library
Linking Your Library to MSC Nastran
Main Index
Linking Your Library to MSC Nastran
Once you have created the eight “BS&amp;hellip;” routines, these routines may be linked with MSC Nastran Beam
Server Library to build a beam server executable. An example user-defined beam server has been delivered
with MSC Nastran. It is highly recommended that you study, build and use the example “Beam Server”
before you build your own version of the beam server.
The MSC Nastran special library contains a main routine as well as the communications routines that allow
MSC Nastran to communicate with the user-defined beam server.
The MSC Nastran user may connect up to 10 beam servers in a single job execution. This connection is made
using the concept of evaluator groups described in the remainder of this section. For each group, the user
specifies on the PBEAML/PBARL entry referring to an external beam server, MSC Nastran will start and
communicate with the beam server.
You may define as many beam evaluators as required using the “CONNECT FMS commands. Only 10 of
these evaluators, however, may be referenced in the groups on the PBARL or PBEAML Bulk Data entries.
The PBARL/PBEAML entries specify a “GROUP” name on the fourth field of the first entry. This group
name is associated with an Evaluator” class using a “Connect” command in the FMS section. Finally, the
“Evaluator” class is associated with an executable using the MSC Nastran configuration file specified via the
“gmconn” keyword on the nastran command line.
The following example shows the mappings mentioned:
1.Group is referenced on the PBARL/PBEAML entry (or entries).
PBARL,39,6, LOCSERV ,I_SECTION (specify the “Group” name).
2.The “Group” is associated with an “Evaluator” class.
CONNECT,BEAMEVAL, LOCSERV ,EXTBML (Associate the ”Group” name with an “Evaluator”
class.)
3.The external evaluator connection file associates the “Evaluator” class with a server executable. The
following statement must be specified in the connection file:
EXTBML,-, beam_server_pathname
4.Refer to the external evaluator connection file on the command line using the “gmconn” keyword.
nastran myjob&amp;hellip;gmconn= external_evaluator_pathname
5.In the example Beam Library section note that the standard input (FORTRAN unit 5) or standard
output (FORTRAN unit 6) are not used as these I/O channels are reserved by the Inter-Process
Communications (IPC) subsystem.
Example of Building and Linking a Beam Server
As an example of building and linking a beam server executable, the sample beam server will be modified.
Complete instructions on building and using a beam server are provided in the MSC Nastran Installation and
Operations Guide  for each release of MSC Nastran.
Make a copy of the beam server sample source.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Example of Building and Linking a Beam Server704
Main Index
Edit the source for the BRTUPD subroutine; this routine describes the equations that convert the
PBARL dimensions into the standard PBAR dimensions for a tube cross section.
Add an extra multiplication of 3.0 to the DIMO(2) equation to increase the calculated moments of
inertia.
Since the formulation of this bar section has been changed, the sensitivities for optimization will also change.
Rather than calculate what the new sensitivities, MSC Nastran can calculate them using central differencing
techniques. T o permit this, edit the source file for the BRTUID subroutine and change all occurrences of
SENTYP = 2 to SENTYP = 3.
Build your new beam server using the instructions detailed in the Installation and Operations Guide for your
system. Once you have built the beam server executable, you must create an external evaluator connection to
point to your executable. Typically, this file would be kept in the user’s home directory, but for this example
it will remain in the current directory. Edit the new file bmconfig.fil. Put the following line in the file:
LOCBMLS,-, pathname
where LOCBMLS is the evaluator referenced in the SAMPLE data file included with the beam server.
Remember, this file can contain references to any number of beam servers.
To run the sample job, type in the following command:
nastran sample scr=yes bat=no gmconn=bmconfig.fil
Common problems which may occur when attempting to run an external beam library job are generally
indicated in the F06 by USER FATAL MESSAGE 6498. If this message includes the text “No such group
defined,” the PBARL/PBEAML selected a group not defined on a CONNECT entry. If UFM 6498 includes
the text “No such evaluator class,” either the “gmconn” keyword was not specified or the CONNECT entry
selected an evaluator not defined in the configuration file.
If the job was successful, you can look at the Design Variable History and see that the results for the variable
mytubeor are different than the results for tubeor. These variables refer to the other radius of tube sections
from equivalent models. One model used the MSC Nastran tube section while the other used the tube section
in your modified beam server.&lt;/p&gt;
&lt;p&gt;Main Index
Appendix B: The IPOPT Algorithm
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and
Optimization User’s Guide
B The IPOPT Algorithm
IPOPT     706&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
IPOPT706
Main Index
IPOPT
Introduction
Hexagon conducts surveys of optimizer technologies from industry and academia. This has led to the
integration of optimizer IPOPT . IPOPT implements an interior point line search filter method that aims to
find a local optimal solution for large scale nonlinear optimization. It was originally developed by Carnegie
Mellon University  in 2002 and now is supported by IBM.
Interior point method as one of barrier methods was first proposed in the sixties. Barriers methods are used
to transform a “difficult” constrained problem into a sequence of “easy” unconstrained problems. MSCADS
SUMT method is one of this classical barrier method. Barrier methods were popular during the sixties.
Earlier, the classical barrier method had its shortcomings; practitioners of nonlinear programming lost
interest and switched to the more efficient MMFD and SQP-like methods (MSCADS and DOT) in the mid-
seventies and eighties.
In the mid-eighties, a modern interior-point revolution started with the well-known Karmarkar linear
programming algorithm which can be interpreted as a barrier method. Since then, interior point algorithms
have emerged as one of most important and useful algorithms for mathematical programming. In particular,
these interior point methods provide an attractive alternative to active constraint set methods in handling
problems with large numbers of design variables and inequality constraints.
IPOPT is a software package for large scale nonlinear optimization. This code has been shown to be capable
of handling tens of thousands of design variables. It can be used to solve SOL 200 sizing, shape, topology,
topometry, and topography problems.
Benefits
The interior point method is a very robust algorithm that provides an alternative to SOL 200 existing
optimizers, in particular, MSCADS SUMT method. The IPOPT optimizer not only enables performing
practical topology, topometry, and topography optimization tasks but can also be used to perform standard
shape and sizing optimization for design tasks.
Theory
In this section, a very brief discussion about the interior point method implemented in IPOPT is presented.
More detail can be read in “ On the implementation of a primal-dual interior point filter line search algorithm for
large-scale nonlinear programming ”, Mathematical Programming, 106(1):25–57, 2006 by A. Wachter and L.
T. Biegler.
To simplify the description of the interior point method, we consider a problem with equality constraints
(inequality constraints can be transformed to equality constraints by introducing slack variables) as:
minimize f(x)
subject to Cj(X) = 0 j = 1, 2, &amp;hellip;, m (2-1)
Xi  i = 1, 2, &amp;hellip;, n&lt;/p&gt;
&lt;p&gt;707 Appendix B: The IPOPT Algorithm
IPOPT
Main Index
where XL and XU are the  lower and upper bounds on the design variables X. n is the number of design
variables, and m is the number of equality constraints.  The objective function f(X) and the equality
constraints Cj(X) are assumed to be twice continuously differentiable.
In general, gradient-based optimization algorithms have a common strategy as below:
A general optimization algorithm loop
Start k = 0 , X = X0
Evaluate f(X) and Cj(X)
Calculate gradients of f(X) and gj(X)
Determine a search direction dk
Perform a one-dimensional search to find  that will minimize  f(X + dk) subject to the constraints.
Set Xk+1 = Xk + dk
Check for convergence. If satisfied, exit. Otherwise repeat the loop
Two critical parts of the optimization task consists of determining a search direction and finding a best one-
dimensional search step. The determining a search direction is the most time consuming part and one of
major difference between the interior method and SOL 200 other optimization methods.
As a barrier method, the interior point algorithm computes (approximates) solutions for a sequence of barrier
problems
for a decreasing sequence of barrier parameters µ converging to zero. Equivalently, this can be  interpreted as
applying a homotopy method to the primal-dual equations,
(2-3)
with the homotopy parameter  which is driven to zero. Here, Rm and zRn correspond to the Lagrangian
multipliers for the equality constraints and the bound constraints, respectively. Note, that Eq. (2-3) for 
together with “ x; zare the Karush-Kuhn-T ucker (KKT) conditions for the original problem Eq. (2-2).
Those are the first order optimality conditions for Eq. (2-1) if constraint qualifications are satisfied Eq. (2-3).
In order to solve the barrier problem Eq. (2-2) for a given fixed value j of the barrier parameter, a damped
Newton&amp;rsquo;s method is applied to the primal-dual Eq. (2-3). Here, a search direction is obtained from solving a
symmetric linear systemminimize
(2-2)
subject to Cj(X) = 0 j = 1, 2,&amp;hellip;, mxfx = xi ln
i1=n
–
fxcxz– + 0=
cx 0=
XZee– 0=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
IPOPT708
Main Index
(2-4)
where Jacobian Ak = c(xk) and Wk denotes the Hessian  of the Lagrangian function
The choice of scalars w and c is discussed in Wachter&amp;rsquo;s paper.
The overall efficiency of the interior point method is dependent on solving a (n + m)  (n + m)  sparse  linear
system Eq. (2-4).WkkwI + + Ak
AkTcI–dkx
dkjxkAkk+
cxk=
xx2Lxkkzk
Lxzfx = cxTz– +&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P37</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_037/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_037/</guid>
      <description>
        
        
        &lt;p&gt;Main Index
Nomenclature
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
Nomenclature&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 710
Main Index
. Vector dot product
x Vector cross product&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scalar multiplication
a Absolute value of the quantity a
[B] Matrix of damping terms in the finite element analysis
F(X) Objective function
gL Lower-bound constraint
gU Upper-bound constraint
Direct variable approximation for the j-th constraint
Reciprocal variable approximation for the j-th constraint
gj(X) j-th constraint function
Approximation of the j-th constraint function
hk(X) k-th equality constraint
[I] Identity matrix
[K] Stiffness matrix in the finite element analysis
[Kd] Differential stiffness matrix
[M] Mass matrix in the finite element analysis
Pj j-th property value
Upper move limit on j-th property
jth type-1 property (DVPREL1)
jth type-2 property (DVPREL2)
Lower move limit on j-th property
{p0} Vector of initial property values
{p} Load vector in the finite element analysis
rj jth response value
Lower bound of the j-th structural responseg˜jD
g˜jR
g˜jX
pjU
pj1
pj2
pjL
rjL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;711 Nomenclature
Main Index
Upper bound on the j-th structural response
jth type-1 response (DRESP1)
jth type-2 response (DRESP2)
jth type-3 response (DRESP3)
{r}Vector of analysis model responses (displacements, stresses,
eigenvalue, etc.)
S Search vector in the optimization’s one-dimensional search
[T]MXNMatrix of constant coefficients in reduced basis formulation
where M &amp;gt; N
{U} Vector of displacements
Y Vector of intermediate variables used in formal approximations
xi i-th design variable
Lower-bound side constraint on i-th design variable
Upper-bound side constraint on i-th design variable
X Vector of design variables
X0Initial value of vector of design variables (this characterizes the
initial design).
X* Vector of design variables at the optimal design
{ }T T ranspose of a vector
[ ]T T ranspose of a matrix
 One-dimensional search parameter
Optimal value of one-dimensional search parameter for the
current search direction S
Partial derivatives with respect to the i-th design variable
 Finite difference move, delta
 Adjoint solution vector
i Lagrange multiplier used in the Kuhn-T ucker conditionsrjU
rj1
rj2
rj3
xiL
xiU

xi&amp;mdash;&amp;mdash;-
xi&amp;mdash;&amp;mdash;-&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 712
Main Index
ijSensitivity coefficient for the i-th design variable and j-th
response
 Gradient operator
{n} n-th eigenvector
[] Modal transformation matrix
 Mass density
 Frequency of oscillation of a dynamic system (rad/s)&lt;/p&gt;
&lt;p&gt;Main Index
Glossary
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
Glossary&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 714
Main Index
Active Constraint  is a constraint whose numerical value is near zero. In MSC Nastran, the constant CT
(default = -0.03) is used to measure whether a constraint is active or inactive. A constraint
whose value is less than CT is deemed inactive, and if its value is greater than CT, it is
considered active. This information is used at the optimizer level in connection with the
numerical search process.   See Violated Constraints .
Adjoint Sensitivity Analysis  performs sensitivity analysis by first determining an adjoint load vector that is
the change the response quantity due to a change in the solution vector. This can be
compared with the Direct Sensitivity Analysis methods. The two methods give
comparable sensitivity results but the efforts required in their computation can differ
dramatically.
Analysis Discipline is used in Solution 200 to refer to the available analysis types: Statics, Normal Modes,
Buckling, Direct and Modal Complex Eigenanalysis, Direct and Modal Frequency, Modal
Transient, Static Aeroelasticity, divergence and Flutter.
Analysis Model  defines the geometry, element connectivity, material properties, and loads associated with an
MSC Nastran finite element analysis. The analysis model may be overridden by the design
model.
Approximate Model  is an approximate representation of the design space that is used by the optimizer to
determine an approximate optimum. Since the approximate model contains a reduced
number of constraints and is explicit in the design variables, it lends itself to efficient
solution by a numerical optimizer.
Approximate Optimization is used to refer to the optimization with respect to approximate design spaces.
Approximation Concepts  include design variable linking, constraint regionalization and deletion, and formal
approximations. All of these approximations are available in MSC Nastran. These tools
allow numerical optimizers to be coupled effectively with structural analysis codes where
the responses are usually implicit functions of the design variables. Solving the resultant
approximate subproblem yields an approximate optimum.
Auxiliary Boundary Model  is similar to an Auxiliary Model for generation of shape basis vectors, though
defined just on the boundary of the finite element model. It may be, for example, an
assembly of bar elements along the edge of a two-dimensional structure, or a group of plate
elements over the surface of a three-dimensional model. It is used to generate the boundary
portion of the shape basis vector from which the motion of interior points, and the
remaining portion of the basis vector, is interpolated.
Auxiliary Model  (or Auxiliary Structure) is a finite element model used to generate grid variations for
purposes of shape sensitivity or optimization. It usually shares geometry and connectivity
with the original (or primary) structure, but with different loads, boundary conditions, and
perhaps material types. The resultant deformations are used to generate a basis vector for
shape sensitivity and optimization.&lt;/p&gt;
&lt;p&gt;715 Glossary
Main Index
Basic Optimization Problem Statement  is a formal definition of the optimization task. This problem
statement is invoked by the engineer when constructing the design model and by the
optimizer when searching for an optimal design. See Equation (1-1) through
Equation (1-5).
Basis Vector  is a collection of constant coefficients used to relate changes in structural properties to changes
in design variables. They may be used in connection with either property optimization or
shape optimization. When used for shape optimization, they are commonly referred to as
Shape Basis Vectors .
Beam Library contains standard cross section definitions for relating beam dimensions to beam properties.
The MSC supplied section types can be augmented by user defined section types and all of
the members of the beam library can be designed.
Beta Method  is an optimization technique that minimizes an artificial design variable to minimize a
maximum response. See Acoustic Optimization .
Central Difference Sensitivities  rely on finite difference perturbations to compute approximate derivatives,
or sensitivities, of continuous functions. Central Difference Approximations, which
perturb the design variables in both a forward and backward direction, yield greatly
improved derivative approximations when compared to first order differencing schemes
(forward and backward differences are first order.)
Continuous Design Variables can assume any value in a specified range and are to be distinguished from
discrete design variables.
Constraint (Design Constraint)  is defined as an inequality which must be satisfied in order to indicate a
feasible design. MSC Nastran convention is that negative constraint values are deemed
satisfied while positive values are violated.
Constraint Deletion  is the process which temporarily removes constraints for a given design cycle. Once a
constraint is removed, its sensitivities do not need to be computed, and the optimizer does
not need to consider the constraint during the approximate optimization. Later design
cycles may include constraints that previously were deleted.
Constraint Regionalization  refers to the grouping of constraints by type in preparation for constraint
deletion. Regionalization is done in conjunction with constraint deletion to limit the
number of constraints that need to be considered in a particular region of the structure.
Constraint Screening  is an approximation concept which seeks to reduce the number of constraints in the
optimization problem. This reduction is based on the assumption that the entire constraint
set is likely to contain redundant design information. Both regionalization and deletion are
used to group and screen constraints for temporary deletion. Constraints which are
temporarily deleted may be retained on subsequent design cycles.
Convergence is the term to indicate that the design process has reached a final state and can be terminated.
This concept applies to both the Design Cycle and the Design Iteration processes. The
converged design can be feasible or infeasible.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 716
Main Index
CSV (Comma Separated Values) File  is a specialized output from design optimization which produces
design optimization data in a comma separated values format that can be read into a
spreadsheet and used to produce graphical displays of optimization results.
Dependent Design Variable  is a design variable defined on a DESVAR entry which is linearly dependent on
one or more independent design variables. This dependence is defined by DLINK Bulk
Data entries.
Design Cycle  refers to the process which invokes the optimizer once for each design cycle. Within a design
cycle a finite element analysis is performed, an approximate problem is created based on the
design sensitivity analysis, the optimizer is invoked, and convergence is tested. A number
of design cycles may need to be completed before overall convergence is achieved.
Design Iteration  is the optimizer level process of determining a search direction from available gradient
information, and performing a one-dimensional search in this direction. A number of these
iterations may be performed before an approximate optimum is found.
Design Model  defines the design variables, objective, and constraints. In the design model, design variables
are used to express permissible analysis model variations, and design responses are used as
the objective and constraint functions. The optimizer uses the information in the design
model to propose improved designs.
Design Optimization  refers to the automated redesign process that attempts to minimize (or maximize) a
specific quantity subject to limits or constraints on other responses. This process is often
referred to as Structural Optimization in this guide to indicate the application of these
methods to structural redesign tasks.
Designed Properties are those items that can be changed in the design optimization process. Properties can
be those found on MSC Nastran property entries (such as the thickness of a plate), those
found on material entries (such as Young’s modulus) and those found on connectivity
entries (such as a beam offset). Variations in shape are not considered Designed Properties.
Design Sensitivity Analysis  is the process which is used to determine rates of change of structural responses
with respect to changes in design variables. The resulting partial derivatives or design
sensitivity coefficients  can be used directly to perform parametric design studies
or to input to a numerical optimizer for design optimization.
Design Sensitivity Coefficient  (see Design Sensitivity Analysis).
Design Space  is the n-dimensional region over which the objective and constraints are defined, where n is
the number of independent design variables. The range of the design variables is limited by
upper and lower bounds on the variables and it is within this space that the optimizer
searches for an optimal design while simultaneously trying to satisfy all of the imposed
constraints.rjxi&lt;/p&gt;
&lt;p&gt;717 Glossary
Main Index
Design Variable Linking  allows a design variable to be expressed as a linear function of other, independent,
design variables. This linking must be explicitly defined by the engineer. It is one of the
components in the family of approximation concepts. Design variable linking can be used
to enforce symmetry, ensure equivalent element properties, and so on. It can also improve
the convergence characteristics of the problem by reducing the number of independent
design variables that must be considered by the optimizer.
Designed Coordinates  are grid coordinates that are allowed to vary in shape optimization. If a designed grid
is to only move in the x-y plane, for example, then it will have only two designed
coordinates x and y. The z coordinate for that grid will not be designed. More specifically,
the designed coordinates correspond to nonzero entries in the basis vector matrix for shape
optimization.
Designed Grids  are those grids whose locations vary in shape optimization. Grids on a moving boundary
would thus be designed, as would be grids on the interior of the structure which are
updated. Grids on a fixed boundary (one that does not change during shape optimization)
would not be Designed Grids. See also Designed Coordinates.
Direct Input of Shapes  refers to the method of DBLOCATEing displacement vectors that have been
generated using an external Auxiliary Model. Once input, they may be used for shape
sensitivity and optimization.
Direct Sensitivity Analysis  performs sensitivity analysis by first determining a pseudo load vector that is the
sensitivity of the system matrix times solution vector. This can be compared with the
Adjoint Sensitivity Analysis methods. The two methods give comparable sensitivity results
but the efforts required in their computation can differ dramatically.
Discrete Design Variables are design variables that can only take on one of the specified discrete values, as
opposed to continuous variables.
External Responses in MSC Nastran are those responses that are computed by an external process and
included with the MSC Nastran optimization task either as they objective or by placing
constraints on the response values.
Feasible Design  is a design which satisfies all of the constraints. A feasible design may not be optimal.
Finite Differences  are a numerical method for approximating derivatives. The method derives from the
Taylor series expansions of arbitrary functions. First-forward finite differences (see Equation
(2-28)) and central differences (see Equation (2-29)) are frequently used in MSC Nastran’s
semianalytic sensitivity analysis to provide low-cost derivative approximations.
First-level Response  is a response that is directly available from an MSC Nastran analysis. These responses
are identified for use in the design model with DRESP1 entries and are to be distinguished
from second and third level responses.
Flat Design Space is a term use to designate the situation where significant changes in design variable values
produce limited changes in the objective and constraint values. In this situation, the
designer has latitude in selecting the final design parameters other than those produced by
the computational optimization process without incurring a significant penalty.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 718
Main Index
Formal Approximations  are the Taylor series expansions of the implicit responses used in connection with
design optimization. The resultant explicit approximations are used by the optimizer to
find a corresponding approximate optimum.
Forward (and Backward) Sensitivities  perform finite difference sensitivity analysis by perturbing the design
variable in a single direction. These methods are faster, but less accurate, than central
differencing techniques.
Fully Stressed Design  is a non-gradient based resizing algorithm that is used to resize element thicknesses or
areas so as to produce a design where each designed property is subjected to its maximum
allowable stress (or strain) under at least one loading condition.
Global Optimum  is the term used to designate the optimum design that is the best among all positive relative
minima. The design optimization process as implemented in MSC Nastran can lead to a
relative, as opposed to, global optimum. This can be investigated by starting the design task
from different points in the design space and comparing the optimal designs.
Gradient  is defined as a vector of partial derivatives. See Equation (1-10). Physically, the gradient of a function
points in the direction of most rapidly increasing function values.
Gradient-based Numerical Optimizer is any optimizer that uses function gradient information to search for
an optimal design. The optimizers in MSC Nastran are of this class.
Grid Perturbation  refers to a small change in a grid point coordinate for a corresponding small design
variable change. These small variations are used in differencing schemes for design
sensitivity analysis.
Grid Variation  refers to a finite change in a grid point coordinate for a corresponding change in a design
variable. This results in a finite change of the structural shape.
Hard Convergence  refers to the design cycle convergence test that compares the results of two consecutive
finite element analyses. The terminology is chosen to indicate that the test is based on hard,
or conclusive, evidence.
Independent Design Variable  is a design variable defined on a DESVAR entry that is not expressed as a
function of any other design variable. All design variables are independent unless they are
made dependent by a DLINK entry. In design optimization, the optimizer varies the
independent variables directly.
Infeasible Design  is a design that violates one or more constraints.
Kuhn-Tucker Conditions  provide the formal definition of an optimal design (see The IPOPT Algorithm ).
These conditions are implicitly evaluated in MSC Nastran in connection with convergence
detection at the optimizer level.
Load Case Deletion represents a special case of constraint deletion where none of the constraints in a given
subcase survive the constraint deletion process. In this circumstance, the direct method of
sensitivity analysis can eliminate the load case from further consideration, thereby
decreasing the amount of effort required in the sensitivity analysis.&lt;/p&gt;
&lt;p&gt;719 Glossary
Main Index
Mode Tracking refers to the technique that is employed to allow the user to design a particular physical mode
shape (such as the first torsion mode) rather than a specific mode number. The mode
number for the physical mode can switch and the mode tracking permits the design task to
switch as well.
Move Limits  serve to limit the region in which the optimizer may search during the current approximate
optimization. Since the approximate subproblem is only valid in the region of the current
design (see Move Limits ), move limits serve to restrict the search in this approximate design
space to avoid numerical ill-conditioning due to poor approximations. Move limits are
placed both on the design variables and on the designed properties.
Nonunique Optimal Design  is an optimum design at which the objective function and all active constraints
are relatively insensitive to changes in the design variables. See Figure 2-18 in Tests for
Convergence , for a qualitative explanation of the situation. This is also referred to as a Flat
Design Space .
Objective Function (Design Objective)  is the function that the optimizer seeks to minimize (or maximize).
The objective function must be a continuous function of the design variables.
One-Dimensional Search  is the search process at the optimizer level in which all changes to the vector of
design variables are characterized by changes in a single-scalar parameter, . See Search
Direction , and Equation (1-12).
Optimum Design  is defined as a point in the design space for which the objective function is minimized and
the Kuhn-Tucker Conditions are satisfied. By definition, the optimum design is feasible.
It is possible that the optimum design is a relative minima in the design space, other
optimal designs can exist.
Primary Model  (or Primary Structure) refers to the finite element model used for analysis. The distinction
arises when Auxiliary Models are used for shape optimization. See the definitions for
Auxiliary Models, and Auxiliary Boundary Models .
Property Optimization  defines a design task in which the properties describing the analysis model are
allowed to vary. Also frequently referred to as sizing optimization, quantities such as plate
thicknesses, bar element moments of inertia, composite ply orientations, material
properties and concentrated mass values are modified in search of an improved design.
Pseudo-Load Vector  refers to the right-hand side vector in the sensitivity analysis equations. See Design
Sensitivity Analysis .
Reduced Basis Formulation  uses a small number of design variables to describe changes to a large number of
analysis model properties or grid coordinates. Essentially, each design variable acts as a
multiplier of a (constant) vector. The linear superposition of these so-called basis vectors
represents the total design changes. See Equation (2-3).&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 720
Main Index
Search Direction (Search Vector)  an n-dimensional vector where n is the number of independent design
variables, which characterizes a particular search path used by the optimizer. The optimizer
may search along a number of different paths in connection with a given design cycle. Each
of these searches is termed a design iteration. Upon completion of these iterations, an
approximate optimum is at hand. This approximate optimization process is repeated in
subsequent design cycles.
Second Level Responses,  also known as synthetic responses, are formulated by the engineer using MSC
Nastran’s equation input capability. These responses are defined using DRESP2 and
DEQATN Bulk Data entries.
Semianalytic Sensitivity Analysis  refers to an approximate solution of the analytic sensitivity equations. With
this approach, the appropriate system equations are differentiated and the structural
matrices approximated using finite differences. The resulting approximate set of equations
is then explicitly solved for the response derivatives. See Design Sensitivity Analysis , to see
how this approach is used for the various analysis disciplines.
Shape Basis Vector  is a basis vector used in connection with shape sensitivity and optimization. The vector
is a collection of directions along which designed grids can move. Each element of the
vector represents the magnitude of change in a grid coordinate due to a unit change in a
design variable. See the definition for Basis Vector .
Shape Design Variable  is a design variable used to describe structural shape variations. Theoretically, shape
design variables act as multipliers of shape basis vectors. Physically, the variables can
represent, for example, a radius, a coordinate location defining the center of a cutout or the
percentage addition of taper to a control arm.
Shape Optimization  defines a design task in which boundaries and connection point locations are allowed
to change in search of an improved design.
Shape Sensitivity  computes the rate of change of structural responses with respect to shape-defining design
variables. The grid coordinate changes are expressed in terms of design variable changes
using the methods of Relating Design Variables to Shape Changes .
Side Constraint  is an upper or a lower bound on a design variable. Since the optimizer never searches outside
of these bounds, these side constraints define the limits of the design space.
Soft Convergence refers to the design cycle convergence test that compares the design variables and properties
that are output from an approximate optimization task with those used as input to
approximate optimization task. This test, while not as conclusive as hard convergence, may
be a suitable test to indicate that further redesign cycles are unlikely to produce an
improved design.
Synthetic Response  is another term for Second Level Response.
Third Level Responses  are defined on DRESP3 Bulk Data entries and are also referred to as External
Responses .
Type-1 Design Variable-to-Property Relations  express analysis model properties as linear functions of
design variables. They are defined on DVPREL1 Bulk Data entries.&lt;/p&gt;
&lt;p&gt;721 Glossary
Main Index
Type-2 Design Variable-to-Property Relations  express analysis model properties in terms of design variables
using MSC Nastran’s equation input capability. They are defined on DVPREL2 Bulk Data
entries and use equations defined on DEQATN entries.
Violated Constraint  is, strictly speaking, any constraint whose value is greater than zero. In MSC Nastran,
the constant CTMIN (default = 0.003) is used to provide a numerical zero. This improves
the numerical conditioning of the problem since trying to precisely satisfy an inequality
relation is often a waste of computational resources.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 722
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
References
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
References&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide 724
Main Index
1.Vanderplaats, G. N., Multi-discipline Design Optimization, Vanderplaats Research and Development,
Inc., Colorado Springs, CO, 2009. Available on &lt;a href=&#34;https://www.vrand.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.vrand.com&lt;/a&gt;
2.Haftka, R.T., Gurdal, Z. and Kamat, M.P. “Elements of Structural Optimization”, Springer - Science&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business,  1990.
3.Vanderplaats, G. N., “ADS &amp;ndash; A FORTRAN Program for Automated Design Synthesis &amp;ndash; Version
1.10,” NASA Contractor Report 177985 , NASA Langley Research Center, Hampton, Virginia, 1985.
4.Nelson, R.B., “Simplified Calculations of Eigenvector Derivatives,” AIAA Journal, Vol. 14, No. 9 , pp.
1201-1205.
5.Belegundu, A.D. and Rajan, S.P., “Shape Optimal Design Using Isoparametric Elements,”
Proceedings , 29th AIAA/ASME/ASEE/AMS/ASC Structures, Dynamics and Materials Conference,  pp.
696-701, Williamsburg, VA, April 1988.
6.Kohn, R.V. and Strang, G., “Optimal Design and Relaxation of Variational Problems”,
Communications on Pure and Applied Mathematics, 39, 1986, pp. 1-25 (Part I) 139-182 (Part II) 353-
377 (Part III).
7.Ambrosio, L. and Buttazo, G., “An Optimal Design Problem with Perimeter Penalization”, Calculus
of variations and Partial Differential Equations 1 , 1993, pp. 55-69.
8.Sigmund, O., Design of Material Structures using Topology Optimization , Ph.D. Thesis, Technical
University of Denmark (DTU), Denmark, 1994.
9.Bendsoe, M.P. and Kikuchi, N., “Generating Optimal Topologies in Structural Design using a
Homogenization Method”, Computer Methods in Applied Mechanics and Engineering, 71 , 1988, pp.
197-224.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Bendsoe, M.P., “Optimal Shape Design as a Material Distribution Problem”, Structural
Optimization, 1 , 1989, pp. 193-202.&lt;/li&gt;
&lt;li&gt;Xie, Y.M. and Steven, G.P., “A Simple Evolutionary Procedure for Structural Optimization”,
Computers and Structures, 49 (5) , 1993, pp. 885-896.&lt;/li&gt;
&lt;li&gt;Zhou, M. and Rozvany, G.I.N., “On the Validity of ESO type Methods in Topology Optimization”,
Structural Multidisciplinary Optimization, 21 , 2001, pp. 80-83&lt;/li&gt;
&lt;li&gt;Turner, M.J., “Design of Minimum Mass Structures with Specified Natural Frequencies”, AIAA
Journal Vol. 5,  No. 3 , March 1967.&lt;/li&gt;
&lt;li&gt;Johnson, E.H. and Neill, D.J., “Automated Structural Optimization System (ASTROS)” , Volume
III, Application Manual , AFWAL TR-88-3028, December 1988, pp. 133-191.&lt;/li&gt;
&lt;li&gt;Cassis, J.H., Optimum Design of Structures Subjected to Dynamic Loads, UCLA-ENG-7451, June
1974.&lt;/li&gt;
&lt;li&gt;Peery, D.J. and Azar, J.J., Aircraft Structures , McGraw-Hill Book Company, 1982, pp 328-341.&lt;/li&gt;
&lt;li&gt;M.K. Shin, K.J. Park and G.J. Park, “Optimization of Structures with Nonlinear Behavior Using
Equivalent Loads,” Computer Methods in Applied Mechanics and Engineering, 196 (2007) 1154–1167.&lt;/li&gt;
&lt;li&gt;H. C. Gea and J. Luo, “Topology optimization of structures with geometric nonlinearities,”
Computers &amp;amp; Structures   79(2001) 1977-1985&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MSC.Fatigue Quick Start Guide
Index
Design Sensitivity and Optimization User’s Guide&lt;br&gt;
Main Index
Symbols
.asm file , 614
Numerics
10 bar truss , 633
A
ACHOBJ , 105
ACINTS , 222
Acoustic Optimization , 541
ACPWR , 222
Active and violated constraints , 79
Active and violated constraints (CT, CTMIN) , 236
Active constraints from type-1 responses , 98
Active constraints on type-2 responses , 99
Adjoint sensitivity analysis , 70
Advanced numerical techniques in SOL 200 , 635
AEMOND1 , 225
AEMONP1 , 225
AESO, 610
AFINTS , 222
AFPRES , 222
AFPWR , 223
AFVELO , 222
Alternative buckling response , 563
Analysis
sensitivity , 36
structural , 35
Analysis discipline definition, 136
Analysis model description
cantilevered beam , 498
cantilevered plate , 503, 580
stiffened plate , 512
three-bar truss , 476
twenty-five bar truss , 528
Analysis versus design Optimization , 14Analytic boundary shapes
auxilary models , 315
basis vectors in shape Optimization , 300
relating design variables to shape changes, 306
shapes Optimal design , 337
Application examples , 378
Approximate model , 36, 81
Approximate Optimization (DELP, DPMIN, DELX, DXMIN) ,
234
Approximation concepts used in structural Optimization ,
30
APRCOD , 227
ARBITRARY BEAM CROSS SECTION , 665
Associating FE with surface , 394
Automatic external superelement Optimization (AESO) ,
610
Automatic updates of move limits , 88
Auxiliary models in shape Optimization, 300
B
Basic compliance minimization , 380, 398
Basic Optimization problem statement
example , 20
Basics
numerical Optimization , 17
Basis vectors in shape Optimization , 296
Bead or Stamp , 455
Bead pattern , 464
BEADVAR , 142
Benefit of synthetic and external responses , 51
Benefits
Topography Optimization , 455
Topometry Optimization , 441
trust region , 601
BMTUCD , 701
BMTUGD , 695
BMTUID , 689
BMTUPD , 676
BMXXPD, 673Index&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
726
Main Index
BNDGRID , 142
Boundary shape Changes using auxiliary boundary
models , 339
Bridge example , 378
Bridge topology design , 380
Brief literature review , 356
BRTUCD , 700
BRTUGD , 694
BRTUID , 688
Subroutine , 688
BRTUPD , 673
BRXXPD , 673
BSBRCD , 696
BSBRGB, 690
BSBRID , 684
BSBRPD , 670
BSBRT , 681
BSCON , 669
BSGRQ , 680
BSMSG , 702
Buckling load factor sensitivities , 74
Building an external response server , 246
Bulk data and parameters , 358
Bulk data entries , 142
Bulk data entry DRESP1 , 362
C
Cantilevered plate , 502
Car model topometry, example , 449
Case control , 608
Case control for design Optimization , 114
Case control section , 136
Casting constraints
one die , 404
two dies , 405
CBAR, 40
CBEAM , 40
CBUSH , 40
CDAMP2,4 , 40
CEIG, 213
CELAS2, 40
CELAS4, 40
CFAILURE , 217
CGAP, 40
CHGDV , 105
CHGOBJ , 105CHGPRP , 105
Choice of approximation method (APRCOD) , 227
CMASS2,4 , 40
Comma separated values file , 289
COMP , 213
Complex eigenvalue sensitivity analysis , 75
Compromise infeasible design, 108
Concepts
approximation used in structural , 30
CONM1 , 40
CONM2 , 40
CONMAX , 105
Connectivity properties
table, 40
CONROD , 40
Constraint
deletion , 52
normalization (GSCAL) , 236
regionalization , 53
screening , 36
Constraint screening , 52
Constraints
beam dimensions , 95
beam library , 95
dependent design variables , 95
properties , 95
Continuing the design process in a Subsequent Job ,
573
Converged , 37
Convergence criteria (CONV1, CONV2, GMAX, CONVDV,
CONVPR) , 234
Convergence criteria parameters , 105
Convergence of design cycles
hard and soft convergence , 102
Convex linearization , 92
Coupled fluid-structure interaction sensitivity , 68
Coupling analysis and Optimization using
approximations , 31
CQUAD4,8,R , 40&lt;/p&gt;
&lt;p&gt;727 INDEX
Main Index
Creating
analysis deck , 421
BEADVAR , 467
CONNECT command , 254
constrained merit function , 602
constraint set , 419
constraint sets , 490
constraints , 488
coordinate frame , 382
design study , 420, 491
design variables , 482
displacement constraint , 417
DRESP3 entry , 240
evaluator connection file , 254
Isosurface , 426
load case , 383
mass constraint , 416
new surface , 393
normal modes constraint , 489
objective , 415, 487
objective and constraint (Patran) , 373
objectives and constraints , 385
subcases , 423
topology variable , 372
TOPVAR , 413
variable linking (DLINK) , 484
variable linking (property relation) , 485
Creating new surface , 393
Creation and selection of subcase , 389
Creation of auxiliary model, and generation of basis
vectors , 328
CSTRAIN , 216
CSTRAT , 217
CSTRESS , 216
CTRIA3,5,R , 40
CTRIAX6 , 40
D
Data recovery , 62
DCONADD , 147
DCONSTR , 147
DDVAL , 149
Default values for DOPTPRM , 364
Define property relation , 486Defining
constraints , 130
design variables , 116
objective function , 129
DELP, 86
DELXESL , 626
Density distribution plot , 377
DEQATN , 150
Description
SOL 200 input file , 631
SOL 400 input file , 631
template routines , 255
Descriptions
individual include files , 632
Design and analysis properties (PTOL, PLVIOL) , 235
Design constraint identification , 138
Design constraints , 46
Design cycle history
continued design task , 576
DSOUG6 , 349
DSOUG9 , 539
Design cycle print controls , 230
Design domain , 472
Design history
DSOUG3 , 510
Design history output
DSOUG4 , 517
Design history results
DSOUG8 , 534
Design model , 38
Design model description
cantilevered plate , 503, 581
stiffened plate , 516
three-bar truss , 476
twenty-five bar truss , 528
Design modeling
overview , 112
Design move limits in ESLNRO, 623
Design objective , 46
Design objective identification , 137
Design Optimization
input, 331
introduction , 12
output , 259
Design Optimization parameters (DOPTPRM) - TCHECK&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
728
Main Index
and TDMIN , 363
Design Optimization versus analysis , 14
Design Optimization with composite materials , 535
Design punch output , 284
Design response characterization , 140
Design responses , 45
Design responses in superelementdesign modeling ,
607
Design sensitivity
introduction , 12
Design sensitivity analysis , 54
Design sensitivity and Optimization examples
complex spacecraft conceptual design stage , 13
connecting rod production, 14
frame structure overstressed , 14
frame structure sensitive instruments , 14
Design sensitivity coefficient &amp;ndash; graphical interpretation ,
55
Design sensitivity output , 279
Design sensitivity output example , 282
Design sensitivity print , 139
Design sensitivity response attributes
table, 207
Design sensitvity and Optimization
introduction , 12
Design task , 348
Design task definition , 137
Design variable limits , 84
Design variable set selection , 138
Design variables , 38
Design variables and the finite element model , 117
Design variables in superelement design modeling ,
607
Designating the design responses , 121
Designed properties , 38
type-1 , 41
type-2 , 44
type-3 , 44
Designed responses
type-1 , 45
type-3 , 45
Designed shapes , 44
deslo_desmod.blk , 632
deslo_desvar.blk , 632
deslo_esl.blk , 632
deslo_eslsub.cas , 632deslo_grid.blk , 632
deslo_loads.blk, 632
deslo_model , 632
deslo_nlmat.blk , 632
deslo_nlsub.ca , 632
DESMAX , 234
DESPCH , 258, 286
DESPCH1 , 258
DESVAR , 88, 154
Developments from version 68 , 4
Direct and adjoint sensitivity methods , 57
Direct approximations , 91
Direct densitivities of static responses , 59
Direct frequency response sensitivity analysis , 65
Direct input of shapes , 299, 304, 309
Discrete variable Optimization , 598
Discrete variable Optimization (DISCOD, DISBEG) , 235
DISP, 214
Display of fringe plot , 391
Displaying density distribution , 376
DLINK , 156
dmp, 641
DOF domain parallel lanczos method , 640
DOMAINSOLVER , 641
DOPTPRM , 87, 157, 227
DOPTPRM design Optimization parameters , 364
DRESP1 , 158, 206
DRESP1 bulk data entries , 121
DRESP2 , 162
DRESP2 bulk data entries , 121
DRESP3 , 168
DRESP3 bulk data entries , 127
DSA, 641
DSCREEN , 171
DSMXESL , 626
DSOUG1C , 578
DSOUG1R , 579
DSOUG4 output , 259
DTABLE , 172
DTABLE Bulk Data entry
specification of , 173
DTABLE2 , 173
DVBSHAP, 174
DVCREL1 , 175
DVCREL2 , 177
DVGRID , 179&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P38</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_038/</guid>
      <description>
        
        
        &lt;p&gt;729 INDEX
Main Index
DVMREL1 , 181
DVMREL2 , 183
DVPREL1 , 185
DVPREL2 , 188
DVPSURF , 189
DVSHAP , 190
Dynamic response Optimization , 517
E
Efficient definition of responses , 123
EIGN, 213
Element and grid responses , 57
Element properties
table, 39
Engine mount , 409
Equality constraints in MSC Nastran , 48
ESE, 215
ESLNRO
design move limits , 623
implementation , 624
ESLOPT (443) , 626
Evaluator connection file extconnect example , 254
Example
basic Optimization problem statement , 20
building and inking a beam server , 703
car model tomometry , 449
design sensitivity output , 282
DESPCH , 286
shape basis vectors , 307
shape Optimization , 327
Square (togex1.dat) , 460
structural , 24
Three-bar truss, 445
Toptomization , 464
toptomization , 469
trust region , 604
type-1 properties , 41
Executive control , 136
Exporting IGES file , 396
External response (Type-3 Response) , 237
External responses , 135
F
FE with surface , 394Features and benefits
topology Optimization , 356
File management , 135
Final sensitivity calculations , 62
Finite difference methods , 57
Finite difference perturbations (DELB, STPCSL) , 235
FLUTTER , 226
Flutter sensitivity analysis , 76
FORCE , 215
Formal approximations , 82
Formatted design sensitivity , 280
FRACCL , 220
FRDISP , 218
FREQ, 213
Frequency domain parallel lanczos method , 640
FRFORC , 220
FRMASS , 212, 213
Front-Mount-Beam , 433
Front-mount-beam , 410
Front-mount-beam FE model, 410
FRSPCF , 220
FRSTRE , 220
FRVELO , 220
FSDALP , 600
FSDMAX , 600
Fully stressed design , 599
Fully stressed design (FSDMAX, FSDALP) , 234
Function evaluation , 90
Fundamentals
overview , 34
G
General considerations , 54, 65
General topology Optimization preprocessing , 369
Generation of a new bulk data file , 142
Geometric boundary shapes , 300, 305, 313
Glossary of terms , 714
gmconn keyword , 254
GPFORCE , 217
GPFORCP , 218
GPLY, 39
Gradient
evaluation , 96&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
730
Main Index
Gradients
active beam library constraints , 101
active dependent design variables , 101
active property constraints , 101
active type-3 responses , 100
properties , 97
type-1 responses , 98
type-2 responses , 99
Guidelines and limitations , 604
Topography Optimization , 459
Topometry Optimization , 445
H
Hard convergence decision logic , 105
I
Illustration , 18
CT and CTMIN , 81
Implied forcing frequency argument , 153
Importing model into patran , 381
Improved design , 36
Inertia relief sensitivity analysis , 62
Initial design , 35
Initiating toptomize , 437
Initiating toptomize for Topology Optimization, 384
Input
shape basis vectors , 298
Topography Optimization , 455
Topometry Optimization , 442
Input file
assembly run , 615
DSOUG , 476
DSOUG10 , 544
DSOUG11 , 552
DSOUG12 , 560
DSOUG13 , 564
DSOUG2 , 499
DSOUG3 , 504
DSOUG7 , 519
DSOUG8 , 530
DSOUG9 , 537
glued contact , 435
MBB beam , 399
torsion beam with extrusion , 404
Insight preferences , 424Internal parallel for FRRD1 module , 639
Introduction
adding your own beam cross section library , 668
design Optimization , 12
design sensitivity , 12
design sensitvity and Optimization , 12
MBB beam , 397
Topography Optimization , 455
Topology Optimization , 356
Topometry Optimization , 441
torsion beam , 402
trust region , 601
IPRINT , 233, 258
Isosurface , 428
attributes , 428
control , 430
L
LAMA , 213
Limitations , 369
Optimizer , 16
superelement Optimization , 609
Linear design space , 83
Linking your library to MSC.Nastran , 703
M
Managing the structural Optimization task , 29
Manual grid variation , 299, 303
Manufacturing constraint , 373
Manufacturing constraints , 468
MAT1 , 40
MAT10 , 40
MAT2 , 40
MAT3 , 40
MAT8 , 40
MAT9 , 40
Material properties
table, 40
Matrix domain automated component modal synthesis
(MDACMS) , 642
Maximum number of mathematical programming
design cycles (DESMAX) , 234
MBB beam topology design , 399
MBB beam with variations , 397
MDACMS , 642&lt;/p&gt;
&lt;p&gt;731 INDEX
Main Index
METHOD options
table, 228
Methods , 228
MEVBMD , 671
MEVBRD , 671
Minimum member size control, MBB , 399
Mirror symmetric constraints , 380
Mirror symmetric constraints, MBB , 400
Modal frequency response analysis, 66
Modal transient response sensitivities , 68
Mode tracking , 51, 140
Model 1 - Plate with hole , 320
Modeling considerations , 327
Modeling guidelines and limitations , 366
Modeling methods (Shape basis vector definition) , 303
Modeling summary , 347
Modeling tips , 366
Modification of move limit parameters , 276
Modified DOPTPRM default for Topology Optimization
table, 237
Modified objective function , 620
MODTRAK , 191
MONPNT3 , 225
Move limits , 84, 88
MSBRCD , 698
MSBRGD , 692
MSBRID , 686
MSC Nastran
equality constraints , 48
sensitivity coefficients , 55
MSCADS options
table, 229
Multi Model Optimization , 646
Multidisciplinary analysis , 48
Multidisciplinary Optimization , 48
N
NASPRT , 258
Nastran database files, 614
Nastran result files , 630
New bulk data file, 287
Nomenclature , 710
Non-Unique optima , 107
Normalized constraints , 46Numerical Optimization
basics , 17
Numerical searching , 21, 79
Numerically searching for an optimum , 21
O
Objective and constraint value evaluation , 94
One dimensional search , 21
OpenMDO , 665
OPTCOD , 134
OPTCOD options design Optimization parameters , 228
OPTEXIT , 258
Optimization , 12, 77, 380
parameters , 387
structural , 28
Optimization method (OPTCOD, METHOD) , 228
Optimization of nonlinear structural responses , 620
Optimization problem statement , 19
Optimization results , 348
Optimization solution, 380
glued contact , 435
MBB beam , 398
Patran tutorial 2 , 411
torsion beam with variations , 403
Optimized bead pattern , 464
Optimizer , 36
Optimizer and the approximate model , 77
Optimizer and the approximatefunction and gradient
evaluations , 79
Optimizer level print control (IPRINT) , 233
Optimizer limitations , 16
Optimizers (Licensing) , 134
Output
DSOUG1 , 480
DSOUG2 , 501
Topography Optimization , 459
Topology Optimization , 364
Topometry Optimization , 444
Output control , 258
Output from PARAM POST , 291
Overview
fundamentals , 34
P
P1, 259&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
732
Main Index
P2, 259
P2CALL , 259
P2CBL , 259
P2CC, 259
P2CDDV , 259
P2CM , 259
P2CP, 259
P2CR, 259
P2RSET , 259
PACABS , 39
PACBAR , 39
Parallel Sensitivities , 641
Parameters related to trust region in DOPTPRM entry ,
603
Parameters unique to design sensitivity and
Optimization , 203
Patran
post-process illustration , 375
postprocessing , 374
pre-process illustration , 371
tutorial 2 , 411
user interface , 369
PBAR, 39, 643
PBAR record , 674
PBARL , 39, 644
PBARL record , 673
PBEAM , 39, 626, 645
PBEAM record , 677
PBEAML , 39, 646
PBEAML record , 676
PBRSECT/PBMSECT , 39
PBUSH , 39
PBUSH1D , 39
PCOMP , 39
PCOMPG , 39
PDAMP , 39
PELAS , 39
PENAL , 230
Penalty weight, 602
Perturbed and baseline solution vectors , 61
PGAP, 39
Pinned-pinned column buckling , 563
PMASS, 39
PMAX , 86
PMIN, 86, 87
PMOVE , 86POST, 259
Postprocessing output , 289
Postprocessing topography results , 462
PRES, 219
Primary Nastran result files , 630
Print controls , 230
Printout from DOM12 , 603
PROD , 39, 626
Properties
type-1 , 41
type-2 , 44
type-3 , 44
Property and/or shape basis vector perturbation , 59
Property evaluation , 90
Property limits , 85
Property Optimization design task , 573
Property to Optimize , 471
PSD response , 50
PSD response sensitivities , 76
PSDACCL , 221, 222
PSDDISP , 221
PSDVELO, 221
Pseudo-Load vectors , 60
PSHEAR , 39
PSHELL, 39, 626
PTUBE , 39, 626
Punch parameters , 285
PVISC , 39
Q
QUAD4 element with lnear output , 214
R
R3SGRT , 567
R3SVALD , 243, 568
Randomization of a user’s input data file , 619
Reading density distribution , 375
Reading density distribution file into Patran , 390
Real eigenvalue sensitivities , 72
Real eigenvector sensitivities , 73
Reciprocal approximations , 91
References , 724
Rejecting a design , 602
Relating design variables to properties , 118
Relating design variables to shape changes , 300&lt;/p&gt;
&lt;p&gt;733 INDEX
Main Index
Relating finite element analysis model to the design
Model , 29
Relaxing global tolerance , 395
Residual vectors , 140
Response calculation , 49
Response types, 160, 207
Response types FRMASS and COMP , 362
Responses
type-1 , 45, 49
type-2 , 45, 51
type-3 , 45, 51
Responses for Topology Optimization , 363
Restarting analysis , 577
Results
DSOUG3 , 507
RMS response , 50, 551
RMS response sensitivities , 76
S
Searching
numerical identifying active and violated constraints ,
79
Optimum , 21
Selecting
shape change , 462
subcase , 439, 469, 496
Sensitivity
analysis , 36
coefficients in MSC Nastran , 55
computing , 55
Sensitivity analysis , 12
Setting
bounds on design variables , 483
display attributes , 463
Isovalue , 427
multiple mass targets , 438
objectives and constraints , 494
Optimization parameters , 374, 422, 493
Shape
basis vector computation , 141
basis vectors , 348
changes over the interior , 346
Optimization of a culvert , 327
sensitivity with rigid elements , 63
Shape Optimization , 135Shape Optimization design task , 577
Smoothed and remeshed topology , 392
Soft convergence decision logic , 104
Solution 200 , 136
Solution for the perturbed displacements , 61
Sparse data recovery in sensitivity analysis , 77
SPCFORCE , 216
Special
handling for eigenvalue/frequency response , 93
print outputs from creation run , 616
prints for discrete variable Optimization , 278
Special prints
fully stressed design, 277
Topology Optimization , 279
Special punch considerations for Topology Optimization ,
287, 365
Special punch in the case of shape Optimization , 287,
354
Special topics , 598
Special Topology Optimization settings , 236
Square (togex1.dat), example , 460
STABDER , 225
Static aeroelastic sensitivity analysis, 63
Stiffened plate , 511
STMOND1 , 224
STMONP1 , 224
STOCHAS , 198
STRAIN , 214
STRESS , 215
Structural
analysis , 35
example , 24
Optimization , 28
Subcase
parameters , 495
spanning responses , 138
Submitting a Nastran job with the gmconn keyword , 254&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
734
Main Index
Subroutine
BMTUCD , 701
BMTUGD , 695
BMTUID , 689
BMTUPD , 676
BMXXPD , 673
BRTUCD , 700
BRTUGD , 694
BRTUPD , 673
BRXXPD , 673
BSBRCD , 696
BSBRGB , 690
BSBRID , 684
BSBRPD , 670
BSBRT , 681
BSCON , 669
BSGRQ, 680
BSMSG , 702
MEVBMD , 671
MEVBRD , 671
MSBRCD , 698
MSBRGD , 692
MSBRID , 686
R3SGRT , 567
R3SVALD , 243, 568
Summary
Design Optimization , 32
Superelement Optimization , 606
Superelements and constraint screening , 607
Supported analysis disciplines , 48
Supported superelements , 606
System cell summary , 134
T
Table
connectivity properties , 40
design sensitivity response attributes , 207
element properties , 39
material properties , 40
METHOD options , 228
modified DOPTPRM default for Topology
Optimization , 237
MSCADS options , 229
TACCL , 224
TCHECK and TDMIN , 363
TDISP , 223Tests for convergence , 102
TFORCE , 224
Theory
trust region , 601
Things to consider when designing one-dimensional
bending elements , 643
Thinks to know about Optimizers , 17
Three-bar truss , 475
Three-bar truss (tomex1.dat), example, 445
TOMVAR , 199
Topography Optimization , 455
Topology
smoothed and remeshed , 392
Topology design
glued contact , 436
Topology design variables , 118
Topology Optimization , 356
glued contact , 433
Topology Optimization input through Patran , 411
Topology Optimization variables (TCHECK and TDMIN) ,
236
Topology Optimization, general , 412
Topology Optimization, solution requirements , 398
Topometry Optimization , 441
Toptomization , 464
example , 464, 469
Toptomize for Topometry Optimization , 470
TOPVAR , 201, 358
illustration , 386
Torsion beam with variations , 401
TOTSE , 217
Transient dynamic Optimization , 558
TRIM, 225
Trust region , 601
TSPCF , 224
TSTRE, 224
Turner’s problem , 498
TVELO , 224
Twenty-five bar truss , 527
Type-1 properties , 41
Type-1 response evaluation , 90
Type-1 responses , 45, 49
Type-2 properties , 44
Type-2 response evaluation , 94
Type-2 responses , 45, 51
Type-3 properties , 44&lt;/p&gt;
&lt;p&gt;735 INDEX
Main Index
Type-3 response evaluation , 94
Type-3 responses , 45, 51
U
Unformatted design sensitivity , 282
Use of design sensitivity and Optimization , 13
Use of patran to generate a shape Optimization deck ,
320
User defined beam libraries , 135
Using DRESP1 and DRESP2 entries , 125
V
Vibration of a cantilevered beam (Turner’s problem) , 498
Viewing final shape , 351
Visualization , 347
VOLUME , 212
Volume response , 49
Volume sensitivities , 72
W
WEIGHT , 211, 212, 213, 214, 215
Weight response , 49
Weight sensitivities, 71
WMPID Response , 50&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
736
Main Index&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P4</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_004/</guid>
      <description>
        
        
        &lt;p&gt;49 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Multidisciplinary Analysis
Main Index
It is seen that SOL 200 has value simply in the performance of multidisciplinary analysis. In fact, clients have
been known to use SOL 200 to submit combined analyses without any design sensitivity or optimization
simply because it simplifies the maintenance of input data and provides some performance efficiency (that is,
operations are not repeated for the separate analyses). The capabilities (and limitations) of the separate
Solution Numbers are incorporated into SOL 200 for the most part. Table 2-5 indicates that many of the
analysis types support multiple subcases and/or multiple boundary conditions. Analysis type Buckling
requires a Static subcase. Analyses from SOLs 103, 110, 111, 112 and 145 require a normal modes analysis.
When a SOL 200 job with multiple subcases is submitted, a determination is made of the number of unique
eigenanalyses that are required based on the boundary conditions and the eigenanalysis method selected in
the separate subcases. Only the unique analyses are performed with the results shared with the remaining
subcases.
Response Calculation
Type-1 Responses
The type-1 responses are, in most cases, response quantities that are available as part of standard
MSC Nastran results processing such as displacements, stresses and eigenvalues. These responses are
recovered from standard MSC Nastran tables. Several of the responses are not standard MSC Nastran results
and their development requires additional description.Direct Frequency 108 Y Y
Modal Complex
Eigenanalysis110 N N
Modal Frequency 111 Y Y
Modal T ransient 112 N N
Static Aeroelasticity 144 Y Y
Flutter 145 Y Y
Weight Response This response is calculated using the grid point weight generator that is used to
produce the weight and balance information that is printed based on
PARAM,GRDPNT . The WEIGHT type-1 response is identified by the
selection of the row and column of the 6X6 rigid body mass matrix that is to be
used for the response.
Volume Response This response is calculated by summing the individual volumes of each of the
finite elements.Table 2-5  Analysis Disciplines Supported in Multidisciplinary Analysis
and Design of SOL 200
Analysis SOL Numbers Multiple SubcasesMultiple Boundary
Conditions&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Multidisciplinary Analysis50
Main Index
(2-18)
where a and b denote two loading conditions (two subcases) and the superscript * indicates the complex
conjugate of the response.
As an example, with two subcases, a = 1 and b = 2, the spectral density is
(2-19)&lt;/p&gt;
&lt;p&gt;(2-20)
where, from the trapezoidal integration method, the frequency-dependent coefficients, Sjf, (f = fi) are
multiplied by the frequency factors
(2-21)WMPID Response This response provides the weight of a designated material ID or a material
ID/property ID combination.
PSD Response PSD responses are included as available design responses and the development
of these responses uses the same theoretical development as that given in the&lt;br&gt;
MSC Nastran Dynamic Analysis User’s Guide . EQ# (8-10) of that document, the
power spectral density of the an output response quantity is
Sj Hja
b
aHjb&lt;em&gt;Sab =
SjSjfS11Hj1Hj1&lt;/em&gt;= = S12Hj1Hj2*+
S21Hj2Hj1&lt;em&gt;S22Hj2Hj2&lt;/em&gt;+ +
Note:   Because the term S21 = S*
12, the resulting spectral density, Sj() is a real number. Individual
terms of Sj() can be specified as PSD responses.
RMS
ResponseRMS responses are the RMS value, uj, for the response quantity, j. This is theoretically
developed as an integral that is implemented in MSC Nastran using a numerical
approximation
ujSjffd
fCfSjf
f =
Cfi1
2&amp;mdash;= fi1+fi1––              1iN
Cf11
2&amp;mdash;f2f1–        = i1=
CfN1
2&amp;mdash;fNfN1––  = iN=&lt;/p&gt;
&lt;p&gt;51 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Multidisciplinary Analysis
Main Index
Type-2 Responses
The type-1 responses of the previous paragraphs provide responses that are directly available from MSC
Nastran. T ype-2 (or synthetic) responses, on the other hand, provide responses that are not directly available
form MSC Nastran but can be formulated using a combination of arguments and user-defined equations. A
number of predetermined functions are available for this response type. Please see the FUNC character strings
table in chapter 4 on page 165 for more information. These eliminate the task of preparing user-defined
equations. DRESP2 Bulk Data Entries  provides details on constructing these responses.
Type-3 Respones
This type of response has been provided for situations where the desired design response is beyond what is
available using the type-2 response. The type-3 (or external) response applies the same client-server
technology that has been used in MSC Nastran for user-supplied beam libraries. This enables, for example,
the incorporation of proprietary local buckling criteria that are too complex to be developed using a
DRESP2. DRESP3 Bulk Data Entries  provides detail on constructing these responses.
Added Benefit of Synthetic and External Responses
SOL 200 can offer a benefit in the analysis phase that is in addition to the features available in the separate
solution numbers. This benefit relates to The Design Model  and, in particular, the type-2 and type-3
responses. The results of evaluation of the responses can be reported in the output file and the user could
exploit this by developing responses that are in addition to what are available from standard data recovery. As
an example, suppose it is desired to assess the buckling behavior of a column that is contained within a large
finite element model. One could develop a type-2 response that is some combination of element response,
element dimensions, materials, geometry, and restraint conditions. Normally, this type of calculation would
require some type of postprocessing operation on the part of the user, but this could be automated within
SOL 200 to provide this result as part of the standard analysis.
Mode Tracking
The selection of a particular eigenvalue from a normal modes analysis as a design response is done by
specifying its mode number. The user’s intent when specifying this number may be to design this particular
mode number regardless of the physical nature of the original mode shape. However, in many applications,
most notably automotive, the intent is to control a particular physical mode; for example, the vibration of
the vehicle’s roof. In this case, the user’s intent is actually to design the frequency of the physical mode shape
and the mode number could vary due to the redesign. (That is, the example roof mode may be the 10th mode
of the initial design, but after a redesign it becomes the 12th.)
The eigenvalue analysis of SOL 200, includes a feature to “track” the modes so that the modes are ordered
based on their original physical behavior rather than on their frequency order. This is done by constructing
cross-orthogonality check between the current design cycle and the previous cycle
(2-22)
where the subscript i denotes the current design cycle, i-1 the previous, and the prime over  indicates mass-
normalized eigenvectors.iTMii1–ti=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Constraint Screening52
Main Index
If there had been no changes in either mode shape, order, or mass of the system, the cross-orthogonality check
would yield a diagonal matrix. If the mode shapes change due to a mass and/or stiffness variation, however,
their correlation will be less than 1.0. If the mode numbers have changed, dominant off-diagonal terms will
be present in ti. Where sufficient correlation exists, the results of this cross-orthogonality check can be used
as a basis to determine which modes have switched.
Constraint Screening
The concept of constraint screening was introduced in a general way in Structural Optimization . The idea is
to limit the constraints that are considered in the redesign to those that are likely to play an active role in the
redesign. To motivate the importance of this, consider an example where the user has defined four stress
responses (say x, y, xy and von Mises) at the top and bottom of each QUAD4 finite element and say the
model contains 10000 of these elements. Further, suppose 10 static loads cases represent the design loads for
the design task. This rather modest problem statement results in 4 stresses * 2 surfaces * 10000 elements * 10
subcases * 2 constraints (upper and lower bounds) = 1.6 million constraints. Clearly, it is not practical or
desirable to consider all of these constraint conditions when performing a design task; hence the use of
constraint screening.
The Design Model  discussed how the normalization of the design constraints has put all the design
conditions on an equal basis regardless of whether the underlying design response is a pressure, displacement,
stress or whatever. The screening process is a two stage process that does an initial screening based on a
threshold and a second screening based on the region. The threshold screening simply says that it is possible
to ignore constraints unless they exceed a specified value.
Figure 2-4 illustrates screening based on normalized constraints by representing the current value of each
constraint function in a bar chart format. If any constraint exceeds the “truncation threshold” value denoted
by TRS, we retain it for the ensuing approximate optimization, while temporarily deleting all others below
TRS.
Figure 2-4  Constraint DeletionTRS0
-1.0G(X)
List of ConstraintsX XXXXXXXX&lt;/p&gt;
&lt;p&gt;53 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Constraint Screening
Main Index
If there are a large number of constraints below this truncation threshold (as is typical in structural
optimization), the constraint screening phase will greatly simplify the optimization task. However, the
number of constraints can still be further reduced using regionalization.
As an example, suppose we have an automobile roof panel, modeled with a number of quadrilateral elements.
This panel is to be of constant thickness for manufacturing considerations and is found to be overstressed in
a number of locations. It would not make much sense to retain the stress constraints for every element in the
panel since all of these stresses will vary nearly in unison as the panel thickness is varied. Thus, it is probably
safe to retain only a few of the largest valued constraints from this “region.”
Constraint regionalization is shown in Figure 2-5, which is the same as Figure 2-4, but with the constraints
grouped into three regions. For now, we will assume these regions have been established based on some design
model characteristics. Of the three regions shown, only two have constraints that are numerically greater than
the truncation threshold. These constraints will pass the first screening test. Since the retained constraints
within each region are likely to contain redundant information, only the largest constraints from each region
are retained. These constraints are denoted by the check marks in the figure. NSTR, which in this example
is 2, stands for the maximum number of constraints to be retained per region.
Figure 2-5  Constraint Regionalization
It should be apparent that this screening process could result in a dramatic reduction in the 1.6 million
constraints mentioned in the example above; perhaps to as few as 100 retained constraints. This is a much
more tractable problem for the optimization algorithm to deal with. There is another more subtle, but equally
important, benefit that can be realized from constraint screening. The example given above assumed that 10
load cases were used to develop the constraints. It is quite conceivable that some of these loads are
unimportant in terms of producing critical design responses. The entire load case can then be eliminated from
consideration in the sensitivity phase of the analysis with a direct effect on the performance of the sensitivity
task of Design Sensitivity Analysis . This concept is referred to as “load case deletion” and plays an important
role in MSC Nastran design sensitivity and optimization.
As a final comment on constraint screening, sometimes it is desirable to retain constraints that would not
normally survive the screening process. For example, perhaps only a sensitivity analysis is being performed TRS0
-1.0G(X)
Region 1
1Region 2
0Region 3
2NSTR = 2
Retained ResponsesX XXXXXXXX&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis54
Main Index
and it is desired to know the sensitivity of all the responses, regardless of the value of the constraints. In
another case, it might happen that a particular constraint is very sensitive and while not critical for a particular
design, becomes critical, or even violated after a redesign and then gets deleted again after the second redesign.
The design could then bounce back and forth between two designs (one with the constraint well satisfied but
with a large objective and the second with the constraint violated but with a small objective) and not
converge. For these reasons, the threshold parameter TRS and the regionalization parameter NSTR are made
accessible to the user and can be adjusted to increase the likelihood that a particular response is retained.
Design Sensitivity Analysis
Design sensitivity analysis, as defined in this document, computes the rates of change of structural response
quantities with respect to changes in design variables. Other sensitivities, such as change in a constraint value
due to a change in the design variable or change in the response due to a change in a property, can be derived
from chain rule operations on the sensitivities featured here. Since these partial derivatives provide the
essential gradient information to the optimizer, they are always computed in connection with design
optimization. Sensitivity analysis is always performed automatically in MSC Nastran whenever design
optimization is requested. There may be times when you want MSC Nastran to compute just the sensitivity
coefficients and not perform optimization. You can then use this sensitivity information to perform
parametric design studies or to link with your own optimizer.
This section presents the theoretical basis for design sensitivity analysis in MSC Nastran. This is a broad
subject that is organized by first presenting some general concepts that are applicable to all of the sensitivity
analyses. This is followed by a detailed discussion of element and grid responses. Adjoint and direct
techniques for sensitivity are detailed and then sensitivity analyses for statics, dynamics and static
aeroelasticity are described. This is followed by a discussion of the sensitivity of a number of responses that
are global quantities: weight/volume, eigenvalues (normal modes and buckling), complex eigenanalysis, and
flutter.
General Considerations
A design sensitivity coefficient is defined as the rate of change of a particular response quantity r with respect
to a change in a design variable x or . These coefficients are evaluated at a particular design
characterized by the vector of design variables X0, giving
(2-23)
where subscripts are used to indicate the i-th design variable and the j-th response. Equation (2-23) is just the
slope of the response with respect to xi as is shown in Figure 2-6.rx
ijrj
xi&amp;mdash;&amp;mdash;-
X0=&lt;/p&gt;
&lt;p&gt;55 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
Figure 2-6  Design Sensitivity Coefficient &amp;ndash; Graphical Interpretation
For Which Responses Are Sensitivities Computed?
Sensitivities are computed for all of the responses (types-1, 2, and 3) that are used to define the objective
function and retained constraints.
Due to the constraint screening described in Constraint Screening , fewer response sensitivities are typically
computed than there are responses defined in the design model.
Internal Representation of the Sensitivity Coefficients in MSC Nastran
For reasons of efficiency as well as accuracy, MSC Nastran uses a slightly different internal representation of
the coefficients of Equation (2-23) depending on how the design variables are related to the analysis model
properties.
The set of independent design variables is taken as the basis for the design sensitivity coefficients when the
linear relation between the designed property and design variable is used. This is an efficient choice since a
large number of properties may be a function of a much smaller set of design variables.ijrjxi
xi0xi&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis56
Main Index
For nonlinear relations, the basis for sensitivity analysis is taken to be the set of analysis model properties
referenced on all of these second-level property relations. Inside the code, the sensitivities are then first
computed as
(2-24)
Choosing properties as the basis greatly improves the accuracy of the approximate responses used in design
optimization. Since an explicit relation between the properties and the associated design variables is known,
this information can be used to evaluate the properties for a given change in the set of design variables.
Computing the sensitivities with respect to the design variables would have linearized this relation, resulting
in a less accurate approximation.
To summarize, the sensitivity coefficients used internally in MSC Nastran are
i = 1, NDVI
k = 1, NIPR (2-25)
where NDVI  is the number of independent design variables and NIPR  is the set of designed properties which
are a nonlinear function of the design variables (including the “spawned” designed properties from the beam
library).
To illustrate the advantage in using a mixed design variable-property basis, consider responses that depend on
properties which are linear functions of the design variables. The approximation for a change in the response
due to a change in the design variable is
(2-26)
where the notation (X0 + xi) is used to indicate that the ith design variable is being perturbed while the
remaining variables on the X0 vector are unchanged.
For responses that depend on the properties that are nonlinear functions of the design variables, the
approximation can be written as
(2-27)
where the properties at the perturbed design in Equation (2-27) can be evaluated precisely from the input
equations.ijrj
pi&amp;mdash;&amp;mdash;-
X0=
rj
xi&amp;mdash;&amp;mdash;-
rj
pk&amp;mdash;&amp;mdash;&amp;ndash;
rjX0x1+ rjX0rj
x1&amp;mdash;&amp;mdash;&amp;ndash;
X0+ x1
rjX0xi+rjX0 =rj
pk&amp;mdash;&amp;mdash;&amp;ndash;
X0 k+ pkX0xi+pkX0 –   &lt;/p&gt;
&lt;p&gt;57 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
Finite Difference Methods
Finite difference techniques are used in places in MSC Nastran where it is not practical to compute analytical
sensitivities.
MSC Nastran employs two alternative finite difference schemes in its sensitivity calculation: forward
difference and central difference. Conceptually, forward difference techniques determine the slope of a
function  f(X) a t point X0 by solving
(2-28)
while central differencing solves for
(2-29)
The forward differencing provides an estimate of the true sensitivity with an error that is on the order of the
x step size. Central differencing reduces the expected error to be on the order of x2. Central differencing
therefore provides a higher quality result but at the added cost of two difference steps rather than one.
Sensitivities of type-2 and type-3 responses are always calculated using central differencing techniques to
obtain the change in the response due to the change in one of the inputs. Chain rule techniques are employed
to obtain the overall sensitivity of one of these responses to the design variable. For example, suppose one has
constructed a type-2 response that is a function of a single displacement, stress and design variable
rj = r2(ur, s, xt) (2-30)
Then the sensitivity with respect to the ith design variable is computed using
(2-31)
where the  and  terms are calculated using central differencing techniques and
and  terms are derived from the response sensitivity analysis described in the following
sections. The  term is 1.0 for i = t and 0.0 otherwise.
Element and Grid Responses
Direct and Adjoint Sensitivity Methods
MSC Nastran supports two distinct methods for computing sensitivity coefficients: direct sensitivity and
adjoint sensitivity. The difference between the two methods can be motivated by expressing a response as a
function of the finite element responses and the design variablesfX0
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;fX0xi+fX0 –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
fX0
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;fX0xi+fX0xi– –
2xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
drj
dxi&amp;mdash;&amp;mdash;-rj
xt&amp;mdash;&amp;mdash;-xt
xi&amp;mdash;&amp;mdash;- =rj
ur&amp;mdash;&amp;mdash;&amp;ndash;ur
xi&amp;mdash;&amp;mdash;&amp;ndash;rj
s&amp;mdash;&amp;mdash;&amp;mdash;s
xi&amp;mdash;&amp;mdash;&amp;mdash; + +
rjxtrjur rjs
urxisxi
xtxi&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis58
Main Index
r = f (u, X) (2-32)
The sensitivity of this response with respect to the design variables can be expressed as
(2-33)
The direct method solves for and uses that in a semi-analytic formulation such as that given in Direct
Sensitivities of Static Responses  to develop the response sensitivity. If the system equation for the finite
element analysis can be written in a general form as
[S]{u} = {P} (2-34)
where S is simply K in a statics analysis and is -2M + iB + K  in a frequency response analysis, then the
derivative of Equation (2-34) gives
(2-35)
The important point about Equation (2-35) for now is that it requires the solution of ndvnlc right-hand sides,
where NDV = NDVI + NIPR  of Equation (2-25) and nlc is the number of retained {u} s olution vectors. For
statics solutions, this is the number of retained subcases while for a frequency response analysis, it is the
number of retained frequencies per subcase summed over the number of subcases.
The adjoint method employs a scheme that first solves for adjoint solutions using
(2-36)
and then substitutes in Equation (2-33) to give
(2-37)
Where [S]-T[S] = [I ] has been used to eliminate the system matrix.
Equation (2-36) requires the solution of nresp  equations, where nresp  is the number of retained responses. There
is an important class of problems where the adjoint method has a distinct advantage over the direct method:
frequency response optimization. As an example, consider a design model that has 20 design variables and
100 frequency excitation points that results in 150 active responses distributed over the 100 frequencies.
(Note that excitation frequencies that do not result in active responses are screened out and do not contribute
to the nlc calculation.) In this case, the adjoint method requires 150 solutions while the direct method
requires 2000. This indicates that the adjoint method can be expected to require roughly 7.5% of the
resources (CPU and disk space) needed by the direct method.
This section continues by discussing the direct sensitivity method with a subsequent discussion of the adjoint
method. The adjoint method has been implemented in MSC Nastran for grid responses.r
x&amp;mdash;&amp;ndash;f
u&amp;mdash;&amp;mdash;u
x&amp;mdash;&amp;mdash; =
ux
Su
x&amp;mdash;&amp;mdash;
P
x&amp;mdash;&amp;mdash;
S
x&amp;mdash;&amp;mdash;u – =
STf
u&amp;mdash;&amp;mdash;
=
r
x&amp;mdash;&amp;ndash;TP
x&amp;mdash;&amp;mdash;S
x&amp;mdash;&amp;mdash;u –
   =&lt;/p&gt;
&lt;p&gt;59 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
Direct Sensitivities of Static Responses
For a given structure with specified geometry, material properties, and boundary conditions, a displacement-
based linear static analysis computes the displacement responses due to the applied loads. All other static
responses such as stresses and strains are determined from the displacement solution. For an arbitrary
response, r, the functional dependency on the displacement is written as ,
r = r(U, X) (2-38)
For the direct method in MSC Nastran, the sensitivities of these responses with respect to changes in the
design variables are approximated using first forward finite differences as
(2-39)
where rj is the j-th design response. It should be noted that Equation (2-39) uses X and x in a generic way to
encompass the non-linear properties of Equation (2-25). The steps required to evaluate Equation (2-4) include:
1.The designed properties and/or designed shape basis vectors are perturbed using a finite difference
step and perturbed element matrices are developed.
2.Pseudo-loads are constructed from the perturbed loads, the perturbed element matrices and the
solution vectors.
3.The perturbed displacements resulting are solved from the pseudo-loads.
4.The perturbed displacements are added to the baseline solution vectors to produce the total U + U
solution vectors.
5.Data recovery is applied to these total vectors to obtain the responses when the design quantities have
been perturbed.
6.Equation (2-39) is applied to obtain the required sensitivity.
Each of these steps is now described in greater detail.
Property and/or Shape Basis Vector Perturbation
For property optimization, the size of the move x is given by
xi = DELB  xi (2-40)
or
pi = DELB  pi (2-41)
where DELB is user accessible parameter with a default value of 0.0001. If xi in Equation (2-40) or pi in Equation
(2-41) is exactly zero, then the respective move is given by .001.
For shape basis vectors, the selection of the step size is more involved because, as the discussion on designed
shapes in The Design Model  indicates ( Equation (2-11)), the magnitude of the change in the grid location is
the product of the shape basis vector and the change in the design variable.
For shape sensitivities, grid coordinates are perturbed a finite amountrj
xi&amp;mdash;&amp;mdash;-rj
xi&amp;mdash;&amp;mdash;&amp;ndash;rjX0xiUU + +  rjX0U0 –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis60
Main Index
(2-42)
The subscript i in Equation (2-42) characterizes the relation as a variation in shape for the i-th design variable.
Ei is the maximum strain energy norm computed using the {T}i basis vector. STPSCL is a user accessible
parameter with a default value of 1.0.
The maximum strain energy norm used in Equation (2-42) is computed by first determining the grid “forces”
due to a shape basis vector “displacement”
[K]{T}i = {FS} (2-43)
Note that the components of T associated with rotational DOFs (degrees-of-freedom) are set to zero so that
no forces are generated on these DOFs. The forces can be used to compute a strain energy per grid location as
{FS}{T}i = {E}i (2-44)
Equation (2-44) is an open product, resulting in a vector of strain energies. Locating the maximum term in the
vector and taking its square root yields
Ei = (max{ E}i)1/2 (2-45)
We get one such Ei for each design variable-shape basis vector pair. This has been found to yield a consistent
set of finite difference move parameters for shape sensitivity.
Pseudo-Load Vectors
The term Pseudo-Load vectors is used to refer to the terms on the right hand side of Equation (2-35). For static
analysis this equation, can be written as
(2-46)
Computationally, Equation (2-46) and Equation (2-34) are identical except that they have different right-hand
side load vectors, hence the term pseudo-loads. The cost of the displacement sensitivity solution can be
reduced if the stiffness matrix, already available in decomposed form as a result of the finite element solution,
is reused. This observation is taken advantage of in MSC Nastran.
Note that the right-hand side of Equation (2-46) includes the partial derivatives  and .
Since these are generally implicit functions of the design variables, these derivatives are approximated using
finite differences.
The selection of the finite difference method (forward vs. central) is controlled in MSC Nastran by PARAM
CDIF . The default is ‘NO’ (forward differencing) for property sensitivity and ‘YES’ (central differencing) for
shape sensitivity. These defaults reflect MSC’s experience that it is generally more difficult to obtain accurate
shape sensitivities relative to the property sensitivities.
For forward differencing,GiSTPSCL
Ei&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-Ti=
KU
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;P
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =K
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;U –
PxiKxi&lt;/p&gt;
&lt;p&gt;61 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
(2-47)
For central differencing,
(2-48)
The product of the change in the matrices times the solution vectors is formed directly rather than first
forming the difference in the matrices and performing the multiplication by the solution vectors later. This
greatly improves the performance and disk space usage in the sensitivity calculation.
In most cases, the load vector is invariant with respect to design variable changes. An exception is if the loads
are being explicitly designed using the parameters available in Table 2-4. Additionally, gravity loads can vary
if the mass of the structure is changed, while thermal loads can also change as a function of element
properties. MSC Nastran does not account for changes in loading due to changes in shape in its sensitivity
calculations so that, for example, a pressure load is assumed to be invariant in the shape sensitivity calculation.
The changed load is accounted for when a finite analysis is performed on the redesigned shape.
Solution for the Perturbed Displacements
Once the pseudo-loads have been developed, standard MSC Nastran solution techniques can be used to solve
for the perturbed u d isplacements. This entails reduction techniques to bring the loads to the degrees-of-
freedom required by the decomposed stiffness matrix and subsequent recovery to bring the uvectors back
to the full set of physical degrees-of-freedom.
Addition of Perturbed and Baseline Solution Vectors
It needs to be recognized that in general
r(u u)  r(u) +  r(u) (2-49)
so that it is necessary to form the {u u} f or the recovery of the perturbed responses. This entails a
straightforward addition except that the {u} v ector has columns for each design variable for each column in
{u}. Therefore it is necessary to precede the addition by an operation which duplicates the u} v ectors to make
this matrix conformable with the {u} v ectors. K
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;uKX0xi+  KX0 –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;u 
P
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-PX0xi+
   PX0 –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 
K
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;uKX0xi+  KX0–xi   –
2xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;u 
P
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-PX0xi+
   PX0–xi
   –
2xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis62
Main Index
Data Recovery
Standard MSC Nastran data recovery techniques are applied to extract retained design responses for each of
the perturbed design variables.
Final Sensitivity Calculations
With the perturbed and baseline responses, it is now possible to apply Equation (2-39) to compute the actual
sensitivity of the type-1 one responses with respect to the independent design variables and the nonlinear
properties.
Inertia Relief Sensitivity A nalysis
A special case in static sensitivity analysis occurs when the structure being analyzed is free to move as a rigid
body. In this case “inertia relief” techniques are applied, resulting in additional terms in the sensitivity
calculations. A complete derivation of the sensitivity calculations for this case is not warranted; however, a
sketch of the method, indicating how inertia relief sensitivity analysis is implemented in MSC Nastran, is
provided.
For static inertia relief analysis, a revised loading is developed using
(2-50)
where
These accelerations can be either specified by the user with a DMIG,UACCEL Bulk Data entry or computed
as part of the solution using
(2-51)
where the mass and loading terms have been reduced to the “SUPORT”ed degrees-of-freedom.
The sensitivity of the load is then
(2-52)
D is considered invariant in this derivation, indicating that shape changes are not supported. The  term
is calculated from a perturbation of Equation (2-51) to giveL=the applied loading.
D=a “rigid body mode” matrix that provides accelerations at all grid points due to rigid body
accelerations .PiPLMDu··r– =
u··r
u··r Mr1–Prl
=
PiPLMDu··rMDu··rMDu··r– – –
   =
u··r&lt;/p&gt;
&lt;p&gt;63 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
(2-53)
Note that second order terms, such as , are retained in this special analysis.
Shape Sensitivity with Rigid Elements
Rigid elements provide a convenient way of specifying linear relationships among degrees-of-freedom. This
has implications in shape sensitivity analysis since the perturbations in the grid locations produce changes in
the linear relationships. Basically, the relationship between dependent (m-set) and independent (n-set)
degrees-of-freedom is expressed as
[Rm]{um} + [Rn]{un} = 0 (2-54)
This gives rise to a relationship between dependent and independent degrees-of-freedom of the form
{um} = [Gm]{un} (2-55)
where
[Gm] = -[Rm]-1[Rn] (2-56)
or
[Rm][Gm] = -[Rn] (2-57)
For sensitivity analysis, it is then necessary to develop [Gm] from perturbing Equation (2-57)
[Rm][Gm] + [Rm][Gm] = -[Rn] (2-58)
or
[Gm] = -[Rm]-1 ([Rn] + [Rm] + [Gm]) (2-59)
If [Rn]+ and [Rm]+ are defined as being finite forward steps for the Rn and Rm matrices, then Equation (2-57)
can be used in Equation (2-59) to give
[Gm] = -[Rm]-1 ([Rn]+ + [Rm]+ + [Gm]) (2-60)
The rigid element sensitivity calculation, therefore, entails including this [Gm] when computing the pseudo
loads. The details of including these terms are not shown here, but differ by analysis type and whether direct
or adjoint methods are employed.
Static Aeroelastic Sensitivity Analysis
Static Aeroelastic analysis performs a static analysis of a free-flying vehicle immersed in an airflow. This is a
separate discipline within MSC Nastran SOL 200 and the available responses are:
Static aeroelastic responses, including not only displacement, stresses, forces, etc., but also trim
variables. This allows the evaluation, for example, the change in the trim angle of attack due to a
structural change.u··r MrMr+ 1–PrLMru··r–
   =
MD u··r&lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis64
Main Index
Stability derivative sensitivities. This, for example, allows the determination of the effect that
strengthening a wing spar has on the rolling moment produced by a deflection of the aileron.
In addition to support for sizing, shape and topology optimization, Static Aeroelasticity supports the
design of control surfaces settings.
This section contains a brief description of the theory for aeroelastic sensitivity analysis. For both theoretical
and design modeling details as well as example problems, see the MSC Nastran Aeroelastic Analysis User’s
Guide .
The form of the equations is the same as for sensitivity analysis of static responses
[K]{u} = {P} (2-61)
where, for static aeroelastic analysis,
(2-62)
This equation is differentiated with respect to a design variable and solved for the “displacement” sensitivities
using a semi analytic approach as has been described in Equation (2-46) for static sensitivity analysis. Static
Aeroelastic Sensitivity (see Aeroelastic Design Sensitivities and Optimization  in Chapter 2 of the MSC Nastran
Aeroelastic Analysis User’s Guide ) provides further details of the sensitivity and indicates the special steps that
are required to accommodate the mean-axis constraint embedded in Equation (2-62). Also, the stability
derivative responses necessitate the generation of additional solution vectors for a unit deflection of the
associated aerodynamic variable. KKllKlla+ KlrKlra+ MllDMlr+ Klxa
DTMllMrl+ DTMlrMrr+ 0 0
DTKllaKrla+ DTKlraKrra+ mrDTKlxaKrxa+
0 0 0 0=
uul
un
u··r
ux&lt;/h1&gt;&lt;h1&gt;PPl
0
PrDTPl+
Px         &lt;/h1&gt;&lt;p&gt;65 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
Direct Sensitivities for Dynamics
Dynamic response sensitivities are computed in Solution 200 in connection with design sensitivity analysis
and optimization. The following disciplines are available:
Direct frequency
Modal frequency
Modal transient
All of these disciplines support fluid-structural coupling.
General Considerations
The general methodology employed for dynamic responses are very similar to those just described for static
analysis so that this description uses far less detail and the reader is referred to the previous section for a more
complete description.
The complete stiffness matrix for dynamic response analysis consists of a superposition from damping as well
as direct matrix input
(2-63)
The DMIG input of K2 cannot be designed, nor can PARAM G. The K1 matrix can be affected by any of
the available property or shape design parameters. The ge parameter is accessible to design as one of the
material properties shown in Table 2-2.
The total damping matrix is the sum of the contributions from viscous elements [B1] and direct matrix input
at the grids [B2]
[B] = [ B1] + [B2] (2-64)
For structural mass,
[M] = [ M1] + [M2] (2-65)
The direct matrix inputs for damping [B2] and mass [M2] are assumed constant in the sensitivity analysis as
is the case with the direct matrix input for stiffness.
Direct Frequency Response Sensitivity Analysis
Sensitivities for direct frequency response are obtained by differentiating the governing equation
(-2[M] + i[B] + [K]) { U} = {P} (2-66)
to obtain[K1] =structural stiffness
g =uniform structural damping coefficient PARAM,G
ge =structural damping coefficient, GE, on a MATi entry
[K2] =direct matrix input at grids DMIGK K1 = igK1igeKeK2 + + +&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis66
Main Index
(-2[M] + i[B] + [K]) {U} = {P} - [ -2[M] + i[B] + [K]{ U} (2-67)
where indicates differentiation with respect to a design variable, or . Equation (2-67) is solved once
for each forcing frequency, load condition, and design variable.
Although the force derivative term {P} i s shown in Equation (2-67) for completeness, this term is assumed to
be zero in MSC Nastran. Therefore, if gravity, thermal, or geometry dependent loadings are significant, some
error will be introduced into the approximation. This assumption of zero {P} a lso applies to the modal
frequency and modal transient formulations.
There is a subtle issue in the data recovery step of the dynamic sensitivity calculation that can be mentioned
here. MSC Nastran calculates results in the analysis set and then recovers them to the physical set. One step
in this standard recovery is the calculation of the omitted degrees-of-freedom using a relation of the form
{u0} = [G0]{ua} (2-68)
(See Equation (21-33) in the MSC Nastran Dynamic Analysis User’s Guide .
This ignores terms that arise from the structure’s mass and the loads applied to the omitted degrees-of-
freedom that is given in Eq. (21-30) in the .
(2-69)
In a standard dynamic analysis, user’s are cautioned to not apply loads to omitted degrees-of-freedom and not
to omit degrees-of-freedom that have appreciable mass so that the approximation involved in Equation (2-69)
can be considered negligible. The omitted degrees-of-freedom are typically nodal rotations that have no load
or mass associated with them. However, in a sensitivity analysis, Ku t erms can easily produce loads on
these omitted degrees-of-freedom with the result that the sensitivities of element responses can be in
significant error. MSC has provided a remedy in the form of PARAM SENSUOO. The default for this
parameter is NO so that the terms of Equation (2-68) are neglected. Setting SENSUOO to YES includes the
term. With the de-emphasis on omitted degrees-of-freedom in present day finite element analysis, this is
typically not a major issue.
Modal Frequency Response Analysis
The governing equations for modal frequency response analysis are obtained from the equations for frequency
response by introducing the modal transformation
(2-70)
where [] is a matrix of eigenvectors, perhaps augmented by residual vectors and {} is a vector of modal
coordinates.
If Equation (2-70) is applied to Equation (2-66) and the result is remultiplied by []T, the following set of
equations result
(-2[]T+ [M][] + i[]T[B][] + []T[K][]){} = []T{P} (2-71)xi
uoo
Koo1–PoMoaua –  =
U&lt;/p&gt;
&lt;p&gt;67 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
MSC Nastran also supports a modal damping term that can be added to the diagonal elements of the modal
damping matrix. These terms are expressed as
bi = giimi (2-72)
where i is the undamped vibration frequency, m is the generalized mass in the ith mode and gi is a user input
value. (See (6-19) in the MSC Nastran Dynamic Analysis User’s Guide . It is recommended that this form of
damping be avoided in design sensitivity and optimization. This is because MSC Nastran neglects the
sensitivity of this term when performing a sensitivity analysis in a modal frequency response analysis. It has
been found that this can result a substantial error in the sensitivity results, particularly when the excitation
frequency is near a resonant frequency. It is recommended that the PARAM G form of structural damping
be used in place of the modal damping when performing modal frequency response sensitivity analysis.
An important assumption that is made is that the normal modes technique used in performing the modal
analysis is equally adequate in performing a sensitivity analysis. That is, the basis that is used to span the
analysis space that is used to justify a modal analysis in the first place should be just as valid in a sensitivity
analysis. The benefit of making this assumption is that it avoids the need for computing the sensitivities of
the eigenvectors. Support for this assumption can be obtained from the realization that modal analyses can
be performed without any loss of accuracy relative to a direct analysis if a complete set of modes (that is all
the modes are extracted from the physical model) is used. Therefore a sensitivity analysis that uses a complete
set of modes applied to the pseudo-loads will result in the same sensitivity results as would be obtained using
a direct analysis. Another way of stating this is that it assumes that
(2-73)
Applying this to Equation (2-67) yields
(2-74)
With the derivatives of the modal coordinates computed from Equation (2-74), the displacement derivatives
are available by direct substitution into Equation (2-73). The data recovery steps of the static sensitivity analysis
can then be applied to obtain the sensitivities of the grid and element responses.
The above discussion of the assumption that accurate sensitivities can be obtained without including
eigenvector sensitivities should be qualified by pointing out that the pseudo-loads generated in a sensitivity
analysis are likely to excite the structure in ways that typical structural loads do not (for example, the pseudo-
loads are likely to be in the plane of the structure while applied loads are typically transverse to the structure).
For this reason, it is recommended that more modes be retained when performing a sensitivity analysis than
would be used in frequency response analysis. A rule of thumb is that twice as many modes should be retained
to obtain accurate sensitivities as are required to obtain accurate responses. However, this is only a guideline
and it is strongly recommended that a convergence study be performed by increasing the number of retained
normal modes until the sensitivity values do not change significantly. It is noted in this regard that residual
vectors are computed by default to degrees of freedom that are designated as design responses in a modal
frequency analysis.U 
2 –TMiTBTK + +    =
TP–2MiBK + +  U – &lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis68
Main Index
Modal Transient Response Sensitivities
The governing differential equation for transient dynamic response is
(2-75)
The modal transformation is again given by
(2-76)
Introducing the modal transformation into Equation (2-75) and differentiating with respect to a design variable
yields the expression for the modal transient displacement sensitivities
(2-77)
As in modal frequency sensitivity analysis, Equation (2-77) makes the assumption that a sufficient number of
modes are included such that the relation of Equation (2-73) is a good approximation.
Once the solution for the modal coordinates and their time derivatives are available, the displacement
derivatives are computed from Equation (2-76).
Coupled Fluid-Structure Interaction Sensitivity
Coupled fluid-structure analysis is used to solve problems in which the interaction effects between fluid and
structure are significant. MSC Nastran uses a fully-coupled formulation for this analysis. Although its
principal application is in acoustic problems, it can also be applied to other general problems, such as fluid
storage (tank sloshing), or other situations in which an inviscid, irrotational formulation is valid. Refer to the
Coupled Fluid-Structure Interaction  (p.752) in the MSC Nastran Reference Guide for details on the analysis
formulation.
The sensitivity equations for fluid-structure interaction are identical in form to the dynamic response
sensitivity equations and can be solved using the existing dynamic response sensitivity solution algorithms.
To understand why this is so, the general equations of motion for the fluid-structure system can be written as
(2-78)
The solution vector {X} c onsists of both structural displacements {U} and the fluid pressure {P}.
(2-79)
The vector of external loads {F} is comprised of both structural as well as fluid forces or
(2-80)MU·· BU· KU + + P =
U =
TM··TB·TK + +
TPMU··BU·KU + +   –  =
Mx·· Kx + F =
xU
P=
FFs
Ff
&lt;/h1&gt;
      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P5</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_005/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_005/</guid>
      <description>
        
        
        &lt;p&gt;69 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
The mass matrix in Equation (2-78) is defined as
(2-81)
The stiffness matrix consists of
(2-82)
If the loads in Equation (2-78) are frequency-dependent, a direct formulation can be written just as for the
structural case where no fluid effects are present. Differentiating the direct frequency equation yields an
expression similar to Equation (2-67), which can be solved by exactly the same methods.
In very large problems, it is often desirable to apply the modal decomposition method in order to reduce the
cost of the analysis. Modal formulations in coupled fluid-structure analysis are derived from a separate
consideration of both fluid and structural components.
The structural modes are computed for a structure in a vacuum, that is, in the absence of any fluid effects.
The modal transformation for the structural degrees-of-freedom can then be written as
(2-83)
The modes for the fluid are computed under the effects of rigid wall boundary conditions, which eliminate
the structural coupling effect. The resulting modal transformation for the fluid degrees-of-freedom is then[Ms] =structural mass
[Mf] =fluid mass (including compressibility effects)
[A] =fluid-structure coupling matrix
[Ks] =structural stiffness
[Kf] =effective fluid stiffness
[s] = are the modes for structure in a vacuumMMs0
AT– Mf=
KKsA
0 Kf=
uss =
mssTMs =
kssTKs =&lt;/p&gt;
&lt;h1&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis70
Main Index
(2-84)
where [f] are the modes of the fluid enclosed by a rigid container.
After modal reduction for both structural and fluid degrees-of-freedom, the equations of motion can be
written as
(2-85)
This modal transient formation can be differentiated with respect to a design variable to obtain the equations
for coupled fluid-structure interaction sensitivity. The form of the equations is similar to Equation (2-77) for
modal transient analysis, so it is not repeated here. However, the solution process is identical.
If the excitation is frequency-dependent rather than time-dependent, the resultant sensitivity equations
assume the form given by Equation (2-74) for structural problems. Due to the similarities of their equations,
the solution process is again identical.
Adjoint Sensitivity Analysis for Grid Responses
As detailed above, the criterion for invoking the adjoint sensitivity method is
NRESP &amp;lt; NDV NLC (2-86)
The actual selection of the adjoint sensitivity method involves further factors/restrictions:
The adjoint method is only available for statics (not including thermal loads or static aeroelasticity)
and frequency response analyses (both direct and modal).
Only grid responses are supported. SPC Forces are not supported.
The limitation to grid responses is motivated by two factors: 1) The development of the  vector
required in Equation (2-33) is not trivial for certain elements and 2) it is unlikely that a design task that included
element responses would pass the criterion of Equation (2-86).
The adjoint sensitivity analysis shares the property or shape basic vector perturbation step detailed by Equation
(2-40) thru Equation (2-45) with the direct method, but the two methods diverge at that point. The adjoint
method requires solution of the adjoint equation
(2-87)Pff =
mffTMf =
kffTKf =
ms0
fT– ATs   mf··
s
··
f
kssTAf   
0 kfs
f
+sTFs
fTFf     &lt;/h1&gt;&lt;p&gt;fu
STf
u&amp;mdash;&amp;mdash;
=&lt;/p&gt;
&lt;p&gt;71 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
where the  vectors are established based on the retained grid response(s) and the rows of these
vectors are all zeroes except for a 1.0 in the location corresponding to the degree-of-freedom of the active
response. The sensitivity can then be developed directly using
(2-88)
where the terms on the right-hand side are developed using the semi-analytic methods similar to those given
in Equation (2-47) and Equation (2-48).
Because many of the steps required in the direct sensitivity analysis are not needed in the adjoint method, this
permits additional savings in terms of CPU time and required disk space over and above the savings produced
from the fewer number of adjoint loads relative to the number of pseudo-loads.
Equation (2-87) is similar to the equation solved in a frequency response analysis. This similarity can be
exploited by solving for the adjoint solution vectors of {} as part of the analysis. This is particularly useful
in a direct frequency response analysis where a considerable portion of the time can be expended in the
decomposition of the [S] m atrix at each frequency. See the description of PARAM SOLADJC in SOLADJC&lt;br&gt;
for details as to when and how the adjoint solution vectors are computed during the frequency response
analysis.
This adjoint discussion has focused on frequency response analysis, but adjoint methods are also available for
static and static aeroelastic analysis. In most cases, the restriction on element responses as outlined above
precludes the use of adjoint methods in a statics analysis, but there is an important application that relies on
the adjoint method: compliance responses. Compliance is defined as the dot product of the load times the
displacement.
This response type is central in topology optimization where the number of design variables can be in the
thousands. The adjoint solution vector is equal to structural solution vector so there is no need to recalculate
this and the sensitivity becomes:
(2-89)
If the load is a function of the design variable, as is the case with the design of loads in Table 2-4, an extra term
is provided to give:
(2-90)
Weight Sensitivities
Weight sensitivities are calculated using matrix [M] and matrix [DRg]. The latter matrix provides the
displacement at all the degrees-of-freedom in the model based on a unit displacement at the six degrees-of-
freedom at the grid identified by PARAM GRDPNT .fu
r
x&amp;mdash;&amp;ndash;
–T2M – iBK + +  u =
r
x&amp;mdash;&amp;ndash;
u–TKu =
r
x&amp;mdash;&amp;ndash;
2uTPK – u   =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis72
Main Index
(2-91)
This is a six by six matrix for each design variable and the appropriate term in the matrix is selected based on
the user’s specification of the weight response.
Volume Sensitivities
Volume sensitivities are computed by computing the volume of all the finite elements for a perturbation in
each of the design variables, subtracting out the baseline volume and dividing by the perturbation.
(2-92)
Weight as a function of Material and Property ID Sensitivities
The sensitivity for the weight as a function of material response is similar to the volume response given above
except that:
1.The elements need to be separated by material ID.
2.The volumes need to be multiplied by the density associated with the material.
For the weight of the property ID, MSC Nastran already has the ability to provide that weight for each
property ID so again, a finite difference calculation is used to compute the sensitivity.
For composites the calculations are more involved since the layered composites have been converted to
anisotropic materials with spawned materials and thicknesses. The original PCOMP/G information has been
retained so the total weight of each element needs to be broken down to give the weight of the
material/property id of interest.
Real Eigenvalue Sensitivities
The eigenvalue equation is
([K] - n[M]){n} = 0 (2-93)
where n and {n} are the n-th eigenvalue and eigenvector, respectively. [K] is the structural stiffness, and [M]
is the structural mass.
The governing Equation (2-93) can be differentiated with respect to the i-th design variable xi to yield,
(2-94)
When Equation (2-94) is pre-multiplied {n}T, the  {n}T ([K] - n[M]) term that then appears at the front of
Equation (2-94) is the transpose of Equation (2-93) and therefore zero. Equation (2-94) can then be solved for the
eigenvalue derivativesW DRgTMDRg =
V
xi&amp;mdash;&amp;mdash;&amp;ndash;Vx0xi+Vx0 –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
KnM – n
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;K
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;nM
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- –  n +n
xi&amp;mdash;&amp;mdash;&amp;mdash;Mn =&lt;/p&gt;
&lt;p&gt;73 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
(2-95)
In practice the solution to the above equation is based on a semi analytic approach. The derivatives of the
mass and stiffness matrices are approximated using finite differences of the form in Equation (2-47) and
Equation (2-48). Equation (2-95) is solved for each retained eigenvalue referenced in the design model and for
each design variable. It should be mentioned that this equation is valid only for the case of distinct
eigenvalues.
Real Eigenvector Sensitivities
The eigenvector sensitivity method available in MSC Nastran is based on Nelson’s Method (see Nelson, R.
B., in Reference 4.. For the method, Equation (2-94) can be rewritten as
(2-96)
Equation (2-96) cannot be solved directly for the eigenvector sensitivity because the ([K] - n[M]) term is
singular. This requires that the matrix size be reduced by one and the reduction technique differs depending
on what method the user has specified for the normalization of the eigenvector. If the NORM=MAX option
has been selected, then the maximum term is assumed invariant so that this term can be removed from the
system, the reduced system solved, and a zero placed in the location of the maximum term.
For NORM=MASS, a substitution is made
(2-97)
Without loss of generality, one of the terms in Vi can be set to 0.0 and this row and column can be partitioned
out of the system to produce a reduced system than can be designated with a superscript bar (-)
(2-98)
Equation (2-97) contains a Cin term that can be derived from the requirement that the generalized mass is
invariant with respect to the design change
(2-99)
Substituting Equation (2-97) into Equation (2-99) yieldsn
xi&amp;mdash;&amp;mdash;&amp;mdash;nTK
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;nM
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- –  n
nTMn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
KnM – n
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;K
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;nM
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-n
xi&amp;mdash;&amp;mdash;&amp;mdash;M + –
   n –=
n
xi&amp;mdash;&amp;mdash;&amp;mdash;
ViCinn + =
kiMVnK
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;nM
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-n
xi&amp;mdash;&amp;mdash;&amp;mdash;M + –
   n –= –
2nTMn
xi&amp;mdash;&amp;mdash;&amp;mdash;nTM
xi&amp;mdash;&amp;mdash;&amp;ndash;n0= +&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis74
Main Index
(2-100)
The total sensitivity for the NORM=MASS method can now be determined by substituting results from
Equation (2-98) and Equation (2-100) into Equation (2-97).
It should be noted that NORM=POINT is not supported for eigenvector sensitivity analysis.
Buckling Load Factor Sensitivities
The derivation of buckling sensitivity is similar to that of eigenvalue sensitivities. The equation for
determining of the buckling load factor  is
[K]{n} + n[Kd]){n} = 0 (2-101)
Differentiating this expression and solving for the buckling load factor sensitivities yields
(2-102)
As before, this equation is solved semi analytically by approximating the structural property matrix derivatives
using finite differences.
The approximation of the differential stiffness is worth discussing. This stiffness is a function not only of
geometry but of displacement as well
[Kd] = [Kd (X, U )] (2-103)
where the displacement is of a particular static analysis that is used in the buckling analysis.
In the finite difference approximation, [Kd] can be approximated for the perturbed configuration as
(2-104)
MSC Nastran supports two variations for the sensitivity of the differential stiffness, neither of which is exactly
of the form given in (2-104). In the first, the differential stiffness matrix is ignored in its entirety. In some
situations, this provides an adequate approximation to the buckling sensitivity and certainly requires less
computational resources. The second alternative is to include the sensitivity of the differential stiffness using
(2-105)
This form relies on the assumption that the differential stiffness matrix is a linear function in the
displacements so that Cin1
2&amp;mdash;–2nTMVnnTM
xi&amp;mdash;&amp;mdash;&amp;ndash;n +  =
n
xi&amp;mdash;&amp;mdash;&amp;mdash;nTK
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;nKd
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +
   n
nTKdn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Kd
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;KdX0xiUU+ +   KdX0U   –
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 
Kd
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; Kd X0xi+ U    KdX0U   –KdX0U
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; + =&lt;/p&gt;
&lt;p&gt;75 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Design Sensitivity Analysis
Main Index
(2-106)
Experience has shown that this is a more accurate formulation than using differencing techniques to obtain
the effects of the perturbed displacements. The selection of which method is applied in a buckling sensitivity
calculation is based on PARAM DSNOKD. The default value for this parameter is 0.0, which neglects the
differential stiffness sensitivity. In the case where the analysis is being carried out on a determinant structure,
the differential stiffness matrix is invariant with respect to property changes so neglecting this term is
appropriate. DSNOKD=1.0 uses the formulation of Equation (2-105) and is recommended when accuracy is
important.
Complex Eigenvalue Sensitivity Analysis
The basic equation for complex eigenvalue analysis is
(2-107)
and there is an associated left-handed eigenvalue analysis
(2-108)
where pn, n and n denote the complex eigenvalue and right and left complex eigenvectors, respectively, of
the nth mode. Note that the left and right eigenvectors are distinct and share a common eigenvalue, pn which
can be defined as
pn =  + i (2-109)
where  and  are the real and imaginary parts of the complex eigenvalue, pn. The structural matrices [K],
[B], and [M] i nclude contributions both from structural elements as well as direct input via K2GG, B2GG,
M2GG, K2PP , B2PP , and M2PP .
Relations used in computing the design sensitivities can be derived by differentiating Equation (2-107) and
Equation (2-108) with respect to a design variable. Using  to refer to a perturbation, we obtain, from Equation
(2-107),
(2-110)
Expanding, ignoring higher order terms, and utilizing Equation (2-108) yields the following approximation for
the variation in the n-th complex eigenvalue
(2-111)
where
pn =  + i (2-112)Kdx0Uu+   Kdx0U   – Kdx0U   
Mpn2BpnK + +  n 0=
MTpn2BTpnKT+ +  n 0=
MM+pp+n2BB+pp+nKK+ + +  +n  0=
pnnTMpn2BpnK + +  n –
nT2pnMB + n&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; &lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Design Sensitivity Analysis76
Main Index
and  a nd  a re the real and imaginary variations, respectively, of the complex eigenvalue. Note that the
approximation in Equation (2-111) does not require complex eigenvector sensitivities. As in the case of modal
dynamic analysis of Equation (2-73) and Equation (2-46), the assumption is that enough modes have been
retained such that the perturbed subspace can be adequately represented by the original mode set. For this
reason, a larger mode set than would normally be required for analysis purposes is recommended for modal
complex sensitivity analysis. Because this number is highly problem-dependent, a logical approach would be
to include enough modes until acceptable accuracy convergence is achieved.
Flutter Sensitivity Analysis
The eigenvalue problem for flutter adds aerodynamic terms to the derivation given for complex eigenanalysis
in the previous section. The flutter equation is given by
(2-113)
where the terms in the above equation are defined in the Flutter Solution Techniques  in Chapter 2 of the MSC
Nastran Aeroelastic Analysis User’s Guide .
Flutter sensitivity computes the rates of change of the transient decay rate coefficient  with respect to changes
in the design variables.  is defined in connection with the complex eigenvalue p
p = ( + i) = pR + pI (2-114)
The sensitivity calculation for  is expressed in terms of the sensitivities of the eigenvalue as
(2-115)
The eigenvalue sensitivity computation is conceptually straightforward and somewhat along the lines of the
complex eigenvalue sensitivity given above. The complete derivation can be found in Aeroelastic Design
Sensitivities and Optimization  in the MSC Nastran Aeroelastic Analysis User’s Guide .
PSD Response Sensitivities
The calculation of the sensitivities of the PSD responses of Equation (2-18) is based on sensitivities calculated
from a dynamic sensitivity analysis
(2-116)
where the terms Hare sensitivities at a particular degree-of-freedom and frequency.
RMS Response Sensitivities
The sensitivity of the RMS quantity uj versus each design variable x is calculated from a numerical integration
of the PSD sensitivities of Equation (2-116) and the definition of RMS response given by Equation (2-20)Mhhp2Bhh1
4&amp;mdash;cVQhhl
k&amp;mdash;&amp;mdash;&amp;mdash; –
   p Khh1
2&amp;mdash;V2QhhR–  + + uh 0=

x&amp;mdash;&amp;ndash;1
pI&amp;mdash;-pR
x&amp;mdash;&amp;mdash;&amp;mdash;pI
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –  =
SjfxSab
bHjaHjb&lt;em&gt;HjaHjb&lt;/em&gt;+  
a=&lt;/p&gt;
&lt;p&gt;77 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Optimization
Main Index
(2-117)
Sparse Data Recovery in Sensitivity Analysis
A final aspect of sensitivity analysis bears mentioning simply because of the dramatic effect it can have on
performance and data storage requirements. As finite element model sizes become even larger, it has become
apparent that there is a benefit to be obtained in only computing minimum required values of physical
displacements. Data recovery refers to the steps that occur following the solution of equations like Equation
(2-34) in physical coordinates or Equation (2-71) in model coordinates. The concept of sparse data recovery will
be explained here in the modal context, since it is here that the most dramatic gain can be achieved. The
recovery from modal to physical coordinates occurs with the matrix multiply given in Equation (2-70). Sparse
data recovery entails limiting the terms in the [] m atrix to those that are to be used subsequently. In the
context of design sensitivity, the total degrees-of-freedom required in a sensitivity analysis are a union of sets
defined by
The user output requests.
Those required to evaluate the design responses.
Those touched by the design model and needed either to compute the pseudo-loads or in the
sensitivity calculations of Equation (2-88).
In extreme cases, a finite element model may have millions of degrees-of-freedom while only a few hundred
need to be recovered.
Sparse data recovery is currently employed in three analysis disciplines in SOL 200:
1.Normal Modes
2.Direct Frequency Analysis
3.Modal Frequency Analysis
While other disciplines could be added to this list, the three listed above are considered the most important.
Optimization
A variety of optimization algorithms are available for use in SOL 200. This subchapter is limited to a
discussion of the interaction between the optimizer and the approximate model and is applicable regardless
of the selected optimization algorithm. An overview of the available optimization algorithms is given in
Optimizer, 36  while the licensing considerations are discussed in Optimizers (Licensing), 134 .
Connection Between the Optimizer and the Approximate Model
Figure 2-7 is a flow chart of the approximate optimum design task using the specified optimization algorithm
as it is embedded within MSC Nastran. Note that the optimizer is called within a ‘do-while’ loop and that,
based on a the INFO parameter, the approximate model discussed in The Approximate Model  is used to
provide function values or gradient values. The figure shows the possibility of an error being encountered by
the optimizer that makes further progress impossible. This is, hopefully, a rare occurrence that is triggered by, uj1
2&amp;mdash;1
uj&amp;mdash;-CfSjf
f=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization78
Main Index
for example, attempting an optimization task that is too big or asking the optimizer to overcome a violated
constraint for which the gradient is zero. In this latter case, there is no possibility of achieving a feasible design
and this usually indicates a user error in specifying the design task.
As seen in Figure 2-7, if INFO=2, a gradient evaluation is required. This is a request for sensitivities of the
objectives and all the constraints the optimizer considers active. If INFO is 0 or 1, a function evaluation is
required. This is a request for the value of the objective and all of the constraints for the current values of the
design variables. INFO=0 indicates that the design task is complete, the ‘do-while’ loop is exited and control
is returned to the MSC Nastran system.&lt;/p&gt;
&lt;p&gt;79 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Optimization
Main Index
Figure 2-7  Interaction Between the Optimizer and the Approximate Function and Gradient Evaluations
Numerically Identifying the Active and Violated Constraints
The optimization algorithm makes a determination as to which of the retained constraints are violated and
which are active. The constraints which are neither active nor violated can be ignored in the gradient
evaluation of Figure 2-7, thereby reducing the amount of computations required, the amount of computer Function
EvaluationInitialization
Optimizer
(MSCADS, IPOPT)
Fatal
Error
INFO=2
INFO=0
ExitSTOP
Gradient
EvaluationY
Y
Y
YNNN&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimization80
Main Index
memory required and the size of the mathematical programming task. Figure 2-8 illustrates the concept of
active and violated constraints for a single inequality constraint in a simple two-design variable space and
Figure 2-9 presents the same information in a plot of a constraint value as a function of a single design variable
or search direction. A constraint is considered active if its numerical value exceeds CT . The default value for
CT is -0.03, but can be changed by the user. Once a constraint is active, its gradient is included in the search
direction computation. An active constraint may subsequently become inactive if its value falls below CT.
Figure 2-8  Active and Violated Constraintsx2
X1Feasible Region
Infeasible RegionActive ConstraintInactive Constraint
Violated ConstraintgjX CT=
gjX 0=
gjX CTMN =gjX0gjX0&lt;/p&gt;
&lt;p&gt;81 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
Figure 2-9  CT and CTMIN
The optimizer designates a constraint as violated if its value is greater than CTMIN. The CTMIN default is
0.003 as is seen in Figure 2-9. Thus, some small constraint violation (three-tenths of one percent, by default)
is tolerated.
The Approximate Model
MSC Nastran employs a number of techniques, collectively referred to as Approximation Concepts , to make
design optimization possible for large finite element models. Design variable linking, reduced basis vectors,
constraint screening and load case deletion have already been described and these approximation concepts all
play a role in reducing the cost of the design task. This subsection deals with the concept of the Approximate
Model that can be thought of as enabling design optimization as it is performed in MSC Nastran. MSC
Nastran uses formal approximations to the finite element analysis and the sensitivity analysis to avoid the high
cost associated with repeated finite element analyses during design optimization. As shown in Figure 2-7, the
optimizer interacts with the approximate model when it requires information. Given a set of design variables,
the optimizer needs information on the function values (the value of the objective and the values of the
retained constraints) and the gradient values (gradient of the objective with respect to the design variables and
the gradient of the active constraints with respect to the design variables). This section first introduces the
concept of using Taylor Series expansion to approximate the finite element analysis and follows this with a
discussion of how move limits are applied to try to restrict the changes in the design model to a region where
the approximations are valid. With this background, it is possible to describe the Function Evaluations and
Gradient Evaluations of Figure 2-7.Feasible Violated
Active
Numerical Constraint
Boundary0CTMIN (0.003)
CT (-0.03)
T rue Constraint Boundaryxgxgx&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model82
Main Index
Formal Approximations
The approximating functions used in MSC Nastran are based on T aylor series expansions of objective and
constraints. For any function f(X), an infinite series about a known value f(X0) in terms of the change in an
independent variable xcan be written as
(2-118)
In addition to the function value f(X0), this series requires that all derivatives at X0 be known as well.
Determining these derivatives may present some difficulty, so the series is often truncated to a given power
in x, yielding an approximate representation of the original function.
In MSC Nastran, we only include through the first derivative term in the series to obtain a linear
approximation
(2-119)
Since all terms of power and higher have been omitted, the error in the approximation is on the order of x2.
This situation is shown in Figure 2-10 where the error increases with increasing values of x. Note that the
approximation would be exact if the original function were linear.
Figure 2-10  Errors in Approximating Functions
In design optimization, we are concerned not just with a single independent variable but rather with a vector
of design variables, X. Under this condition, the approximations for the objective and constraints functions
becomefX0x+fX0 =df
dx&amp;mdash;&amp;mdash;
X0xd2f
dx2&amp;mdash;&amp;mdash;&amp;ndash;
X0+ +x2
2!&amp;mdash;&amp;mdash;&amp;mdash;d3f
dx3&amp;mdash;&amp;mdash;&amp;ndash;
X0+x3
3!&amp;mdash;&amp;mdash;&amp;mdash;+
f˜X0x+fX0 =df
dx&amp;mdash;&amp;mdash;
X0+x
ff˜
fx
fx0x+
x0x0x+x&lt;/p&gt;
&lt;p&gt;83 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
(2-120)
where a gradient term replaces the first derivative term of Equation (2-119).
A Simple Linear Design Space
At this point, it is probably worthwhile to take a look at a linearly approximated design space just to gain a
qualitative understanding of the nature of the approximation. For this example, we can refer to the A Simple
Structural Example .
Recall that the design variables for the cantilever beam are the base, B, and height, H, of the beam cross
section. If we construct linear approximations to the objective and constraint equations according to Equation
(2-120), we have
(2-121)
For an initial design at (B =6, H =45), the derivatives in the above equation can be evaluated based on
Equation (1-15) through Equation (1-17) to yield
(2-122)
The design space resulting from Equation (2-122) is shown in Figure 2-11, superimposed on the true design
space. From the graph, note that the optimum resulting from this linear approximation happens to be at a
slightly smaller value than the true objective. The linear approximation has allowed the design to become
slightly violated when compared to the true design space.F˜X0x+FX0 = FX0 + x
gjX0x+gjX0 = gj
X0 + x
V˜B0BH0HL + +  VB0H0L  =V
B&amp;mdash;&amp;mdash;
B0H0+ BV
H&amp;mdash;&amp;mdash;-
B0H0+ H
˜B0BH0HL + + B0H0L  =
B&amp;mdash;&amp;mdash;-
B0H0+ B
H&amp;mdash;&amp;mdash;-
BOH0+ H
˜B0BH0HL + + B0H0L  =
B&amp;mdash;&amp;mdash;-
B0H0+ B
H&amp;mdash;&amp;mdash;-
BOH0+ H
V˜B0BH0HL + + 1.35 = 105 2.25 + 104B 3.0+ 103H
˜B0BH0HL + + 555.56 = 92.593B – 24.691H –
˜B0BH0HL + + 2.0576 = 0.34294B – 0.13717H –&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model84
Main Index
Figure 2-11  Linearly Approximated Cantilever Beam Design Space
Though not yet an optimal design, the approximate optimum is a useful starting point for the next
approximate optimization cycle.
Move Limits
Since the approximations just discussed are only locally valid, limits are placed on the amount by which the
design is allowed to vary during the approximate optimization. In MSC Nastran, move limits are imposed in
terms of both allowable changes in design variables and allowable changes in properties.
Design Variable Limits
Imposing move limits using design variables is natural since the approximate model is explicit in these
quantities. However, move limits on designed properties must also be considered as well since the analysis
model is a function of these properties. Moreover, these designed properties may be nonlinear functions of
the design variables ( Equation (2-5)). A 10% change in a given design variable may equate to a 100% or more Height H (cm)65
60
55
50
45
40
35
2.5 3 4 5 6 77.5
Width B (cm)50000100000
125000150000175000V = 200000H/B = 12
H = 50
75000 2.54 =
b700 =Optimum
Approximate
Optimum
˜bX0
˜&lt;/p&gt;
&lt;p&gt;85 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
change in an analysis model property. Since these large design changes can easily invalidate the approximate
model, move limits on properties can also be included.
During approximate optimization, each design variable is bounded from above and below by
(2-123)
These bounds are determined at the beginning of each design cycle according to
(2-124)
The allowable percentage change in the design variable is supplied by DELXV on the DESVAR Bulk Data
entry. This value is optional and if not supplied, defaults to DELX, which is provided on the DOPTPRM
Bulk Data entry. The DELX default is 0.5 or 50% (0.2 or 20% for topology optimization) change in all
design variables. The DXMIN value ensures that the move limits don’t become too restrictive when the
design variable value is near zero. The default value for DXMIN is 0.05 (1.0E-5 for topology optimization),
but it, too, can be modified using the DOPTPRM entry.
Property Limits
Move limits can be imposed on designed properties as well, but not all properties. Designed Properties  has
discussed the three types of properties: type-1, type-2, and type-3. As shown there, type-1 properties are linear
in terms of the design variables (see Equation (2-2))
while type-2 enable a nonlinear relationship between design variables and properties (see Equation (2-5))
pj = f(X, C)
and type-3 refers to beam properties that are spawned when using the beam library. Move limits are always
imposed on designed properties with the following exceptions:
a.when the property is controlled by a single variable=the lower bound on the ith design variable
=the upper bound
MOVE =
XLB =the lower bound on the ith design variable
XUB =the upper boundxiLxixiU
xiL
xiU
xiLMAXXLB, xi0MOVE –  =
xiUMINXUB, xi0MOVE +   =
MAXDXMIN,xiDELXV   
pjco= ci
i+ xi&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model86
Main Index
pj = C0 + cixi
and the user has not imposed bounds on the value of the property.
Move limits are not imposed in this case since the move limit on the design variable already
restricts the change in the property value, i.e., if the DELXV value of (2-124) imposes a 50%
change on the i-th design variable of , the pj value can never exceed 50% on a given design cycle.
Not imposing limits on these properties simplifies the design optimization task by reducing the
number of constraints that have to be considered. You should not impose bounds on properties
that satisfy equation 2-125 unless there is a clear reason to do so.
b.For type 2 properties or type 1 properties that are a function of multiple design variables, property
limits are not imposed when the user does not specify and limits and the DPMIN parameter on
the DOPTPRM entry is 1.0e20.  This special case is provided if the user is confident that the
property limits will never play a meaningful role in the design task and they want to avoid the cost
of storing and processing the associated constraints.
c.Move limits are not imposed on type 2 or type3 properties that can change sign.  Placing move
limits on these properties has been shown to create problems.&lt;br&gt;
For the type-1 properties that are a function of more than one design variable and/or that have user imposed
limits and for type-2 or type-3 properties, bounds are imposed from below and above the designed properties
by
(2-125)
These bounds are based on percentage changes in the property value  at the outset of the approximate
optimization. These bounds are computed as
(2-126)=the lower bound on the j-th property
=the corresponding upper bound
PMOVE =
PMIN =the lower bound on the property
PMAX =the upper bound
DELP =the maximum allowable percentage change in the propertypjLpjpjU
pjL
pjU
pj0
pjLMAXPMINpj0PMOVE –  =
pjUMINPMAXpj0PMOVE +  =
MAXDPMINpj0DELP &lt;/p&gt;
&lt;p&gt;87 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
DELP can be defined on the DOPTPRM entry and has a default of 0.2 for a 20% maximum property
variation. DPMIN can also be defined on the DOPTPRM entry and has a default value of 0.01.
Figure 2-12 illustrates the situation for a property that is initially close to zero.  and  are the move limits
resulting from Equation (2-126). Since these limits are overly restrictive, the limits based on DPMIN, or&lt;br&gt;
and  are used instead. Although not shown in the figure, if PMIN is a numerically greater quantity than
, it becomes the lower bound. Similarly, PMAX will become the upper bound if it is less than .
Figure 2-12  Move Limits on Properties
Equation (2-124) and Equation (2-126) effectively form a “box” around the current design. This effect is shown
in Figure 2-13 where these move limits are shown for successive design cycles in a two design variable space.
For the first cycle, the approximate optimum is found to lie at a corner of the box, where the objective is
minimized and there are no active constraints. As a result of the second cycle, one of the constraints is slightly
violated due to errors in the approximation. By the third cycle, a near optimal design has been found. Of
course, the situation is usually more complex than in this simple design space. The intent of Figure 2-13 is
merely to suggest some general features of the overall process.DPMIN =1.0E20 can be used to remove constrains on designed properties when
it is felt that they can have no impact on the design process
pjLpjU
pjL
pjU
pjLpjU
1
0pjLpjLpjU
pj0
pjU&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model88
Main Index
Figure 2-13  Sequence of Approximations
Automatic Updates of Move Limits
Parameters related to design variables can be changed using the DOPTPRM entry (DELX and DXMIN) and
the DESVAR entry (DELXV, XLB, XUB). The designed property limits can be controlled using the
DOPTPRM entry (DELP , DPMIN) and the DVPREL1 or DVPREL2 entries (PMIN, PMAX). This set of
constants is used to recompute the move limits for each design cycle.
At times, the code may automatically adjust these move limits if the design task is performing poorly. The
situation might arise as follows: an approximate problem is constructed, from which the optimizer determines
a corresponding approximate optimum. Perhaps some of the approximate constraints are critical for this
design. The responses are now evaluated by a finite element analysis, and it is determined that rather than
just critical, these constraints are actually violated. Discrepancies have thus been detected between the
approximate and the true responses.
If these discrepancies continue from one design cycle to the next, it can be taken as an indication that the
move limits are probably too wide. Continued constraint violations have an adverse effect on overall 1
2
3 4x2
x1Constraint
BoundariesFX0&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P6</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_006/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_006/</guid>
      <description>
        
        
        &lt;p&gt;89 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
convergence. The move limit-controlling parameters are updated automatically in MSC Nastran if the
following criteria are satisfied:
1.The current design cycle number is greater than or equal to three.
2.There is at least one violated constraint (violated by more than 2%), and the level of constraint
violation is increasing.
Under these conditions, DELP , DPMIN, DELX, and DXMIN are reduced by one-half of their current
values. The reason for the first condition is that frequently the optimizer may violate the constraints
somewhat as it makes favorable gains in the objective function in the first few cycles. However, if this
condition continues, it may indicate that the problem is becoming ill-conditioned as a result of excessive
move limits. A corresponding User Warning Message is printed as notification that this update has occurred
(see Modification of Move Limit Parameters ). If the job is to be restarted, it is recommended that an updated
DOPTPRM entry with the new move limits be included in the restart file.
Implementation of Move Limits
Move limits on independent design variables are applied directly. Since the optimizer will never propose a
value for a design variable outside of its bounds, the lower and upper move limits computed from (2-124) are
simply input directly to the optimizer.
Move limits that are imposed on properties are implemented as equivalent constraints. For the
jth property in the design model, the equivalent lower and upper bound constraints are given by
(2-127)
where the lower and upper bounds  and  are given by Equation (2-126).
Transformation of the Approximate Optimization Task to a Feasible Design
This section addresses an optional feature of the approximate optimization task. A general statement can be
made that optimization algorithms perform best when the design task does not include violated constraints.
In fact, some algorithms will fail if a feasible design does not exist (the algorithms used in MSC Nastran search
for the best compromise infeasible design so that the transformation to a feasible design is not a strict
requirement). In order to facilitate the use of a general optimization procedure, a simple transformation
technique has been developed to ensure that the optimization task always works in the feasible domain.
The standard optimization task minimizes an objective subject to satisfying a set of constraints. The
transformed problem, designated the  Method , involves creating a  design variable that modifies the
constraints so that:gLXpjLpjX –
pjL&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = 0
gUXpjXpjU–
pjU&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;0 =
pjLpjU&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model90
Main Index
and the transforms the objective function so that:
&amp;rsquo;  PENAL *0
where PENAL is the user defined penalty parameter, 0is the initial objective function and is initialized
to the maximum initial constraint value. (If this maximum value is less than CTMIN, the transformation is
not applied.) In this way, the maximum constraint value is never positive while the penalty on the objective
acts to force the  value to zero. If there is a feasible design, this technique should lead to it. If there is not,
this will result in a compromise design where the maximum constraint violation is minimized.
Function Evaluation
The function evaluation proceeds in five steps:
1.The properties are evaluated exactly.
2.Approximate type-1 responses are evaluated.
3.Approximate type-2 responses are evaluated.
4.Approximate type-3 responses are evaluated.
5.The the objective and the constraints are evaluated .
Not all these steps need to be present in a particular design task. Each of these steps is now described.
Property Evaluation
Given the design variable values, the properties can be computed directly and exactly. For type-1 properties
that are a linear function of the design variables, the properties are evaluated using a multiply and add
operation (see Equation (2-2)). For type-2 properties, equations that contain constants plus design variable
values need to be evaluated on an individual basis. If beam library dimensions are being designed, it is
necessary to compute the beam properties. Some of these properties are linear in the design variables and can
be computed in a fashion similar to the type-1 properties. Others are nonlinear, and it is necessary to call the
beam library routines to calculate these properties.
Type-1 Response Evaluation
Three basic types of approximation are available in the computation of type-1 responses:
Direct variable approximations.
Reciprocal variable approximations
Convex linearization
The method used is based on the user specified parameter APRCOD that is discussed later with the
DOPTPRM  entry.
The formal approximations used in MSC Nastran are based on simple first-order T aylor series expansions.
The general form of this expansion for a response isgj g=j– j12ncon  = &lt;/p&gt;
&lt;p&gt;91 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
(2-128)
The required derivative information is available from the design sensitivity analysis as outlined in Design
Sensitivity Analysis . Note that the approximate response, rj (x0 + x), in Equation (2-128) is linear in the design
variable change x. In some instances, the response actually is a linear function of the design variable and
Equation (2-128) provides as exact response value. In general, however, we expect some error when we try to
approximate responses that are actually nonlinear in x.
Direct Approximations
A direct variable approximation linearizes the function directly in terms of the design variables. For the jth
response, the direct approximation is written as
(2-129)
where the superscript D indicates a direct approximation.
The quantity x represents a total vector move in the design space from the initial design X0. The partial
derivatives  are available from the design sensitivity analysis.
Reciprocal Approximations
The first-order Taylor series expansions of Equation (2-128) can alternately be expressed in terms of reciprocal
variables. This choice turns out to be quite useful for those responses that are inversely proportional to the
design variables. This simple idea can be easily shown in the case of the axially loaded rod element of
Figure 2-14 where the cross-sectional area A is taken as the design variable.
Figure 2-14  Axially Loaded Bar Element
The axial stress in the bar is equal to P/A, and the displacement is equal to PL/AE . If these responses are used
in the design model, linearizing with respect to the quantity 1/A  or 1/E will produce approximations which
are exact for both the stress and the displacement. (The stress is not a function of E so that while the
approximation of stress as a function of E is exact, it is also trivial.) In the general case, of course, these
approximations are not exact due to the static indeterminacy of the structure. However, for all element types, rjX0x+rjX0 =rj
xi&amp;mdash;&amp;mdash;-
X0 i+ xi
rD
jX0x+rjX0 =rj
xi&amp;mdash;&amp;mdash;-
X0 i+ xi
rjxi
LPA, E&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model92
Main Index
the proportionality of the stiffness matrices to the inverse of the sizing quantities forms a reasonable basis for
arguing the use of reciprocal approximations.
Reciprocal approximations can be derived from linear approximations if we first substitute the intermediate
variables yi. For the approximate constraint of (2-129), we get
(2-130)
Setting the intermediate variables to reciprocals of the design variables
(2-131)
yields
(2-132)
where the superscript R indicates a reciprocal approximation.
Convex Linearization
This third approximation method is actually applied on the constraints, but is discussed here because it bears
directly on the method used in the type-1 response calculation. This method chooses either a direct or
reciprocal constraint approximation depending on which one provides the larger estimation of the constraint&lt;br&gt;
function. In other words, this method chooses the more conservative of the two approximations.
The direct approximation for the j-th constraint is given in Equation (2-129) above while the reciprocal
approximation is given in Equation (2-132).
Convex linearization is applied on an individual constraint/design variable basis. Thus, a combination of
direct and reciprocal approximations may be made for a single constraint.
Since both approximations are readily available (both use the same gradient information), the choice of which
to use can be made by looking at the sign of the difference between the two for a particular design variable
(2-133)
Since the squared term in the expression is always positive, the choice depends on the sign of the product:rjY0y+rjY0 =rj
yi&amp;mdash;&amp;mdash;-
Y0yi+
yi1
xi&amp;mdash;-=
rjRY0x+rjX0 =rj
xi&amp;mdash;&amp;mdash;-
X0 i+xi0
xi&amp;mdash;&amp;ndash;xixi0– 
gjDX0+xgjRX0x+ –xixi0–2
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;gj
xi&amp;mdash;&amp;mdash;-
X0=&lt;/p&gt;
&lt;p&gt;93 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
As stated, convex linearization is only applied to constraints. If the objective function is obtained from a type-
1 response and the convex linearization method has been chosen, the objective function is calculated using a
direct approximation. Also, if a type-1 response is used in a type-2 or type-3 response, a direct approximation
is used for calculating the type-1 response even when convex linearization is used in the calculation of
constraints directly based on type-1 response.
Special Handling for Eigenvalue/Frequency Response
Eigenvalue (and frequency) responses cannot be reliably approximated using the either the direct or the
reciprocal approximations. This is because the eigenvalue is sometimes dominated by stiffness terms, which
would make it a linear function of a thickness design variable and sometimes by mass terms, which would
make it a linear function of the inverse of the design variable. MSC Nastran provides an additional option in
the approximation of eigenvalue responses that is given the name Rayleigh Quotient Approximation. In a
normal response analysis, the eigenvalue can be expressed using Rayleigh’s quotient
(2-134)
where U is referred to as the modal strain energy or generalized stiffness and T is referred to as the modal
kinetic energy or generalized mass.
Taylor series approximation to the modal strain and kinetic energies can be used to construct the eigenvalue
approximation. It has been found that reciprocal variables provide a conservative approximation for the strain
energies while direct variables are used for the kinetic energies
(2-135)
(2-136)
And, the eigenvalue approximation by the Rayleigh Quotient isIf use the direct approximation for gi since it yields a larger (more
conservative) estimate of constraint value.
If use the reciprocal approximation gi since it yields a larger
estimate of constraint value.1
xi&amp;mdash;-gj
xi&amp;mdash;&amp;mdash;-
X00
1
xi&amp;mdash;-gj
xi&amp;mdash;&amp;mdash;-
X00
TK
TM&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;U
T&amp;mdash;- = =
U˜R U0TK
xi&amp;mdash;&amp;mdash;-
i1=n
xix0i–x0i
xi&amp;mdash;&amp;mdash;- + =
T˜D T0TM
xi&amp;mdash;&amp;mdash;&amp;ndash;
i1=n
xix0i– + =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model94
Main Index
(2-137)
This Rayleigh Quotient Approximation is the standard technique used in approximating eigenvalue and
normal mode frequency responses. Approximations using direct and reciprocal approximations are also
available, as explained in DRESP1 .
Type-2 Response Evaluation
Type-2 responses can be functions of design variables, designed properties, type-1 responses, grid locations,
and other type-2 responses. The grid location may be a function of the design variables, so it is first necessary
to calculate the grid locations using Equation (6-6). It is then a straightforward task to assemble the arguments
required by a type-2 response and make the evaluation. When a type-2 response is a function of another type-
2, it is necessary to perform the evaluations in a precise order so that the response values are available when
needed.
An interesting special case occurs when all the design constraints and the objective are based on type-2
responses and these responses are not a function of the finite element responses. In this, perhaps academic,
scenario the responses can be evaluated exactly and the optimization task is also exact. Therefore, if no move
limits are placed on the design variables, the final optimal design can be obtained in a single design cycle.
Type-3 Response Evaluation
Type-3 evaluations are identical in form to type-2 evaluations with the exception that the type-2 evaluations
are performed using the internal MSC Nastran equation evaluator while the type-3 evaluations are performed
using the user supplied external program. type-3 responses cannot be a function of type-3 responses, so the
recursive step of the type-2 evaluation is not needed.
MSC Nastran addresses the issue that type-3 response and gradient calculation can be expensive by
supporting an “invariant gradient” concept. If this method is chosen, the type-3 response quantity is
calculated in the same fashion as the type-1 response calculation of Equation (2-129).
Objective and Constraint Value Evaluation
The objective is one of the type-1, 2, or 3 responses so that it is available immediately once that responses
have been evaluated. Constraint evaluations are more involved in that MSC Nastran considers four types of
constraints:
Constraints on responses
Constraints on dependent design variables
Constraints on properties
Constraints on beam dimensions
The evaluation of each of these types of constraints is now considered in turn.˜RQAU˜R
T˜D&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;95 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
Constraints on Responses
Once the responses have been evaluated, it is a simple matter to apply Equation (2-10) to compute the
constraints. An exception to this is when the convex linearization technique ( Convex Linearization ) is used.
In this case, it is necessary to first determine which approximation concept provides the most conservative
constraint value and to then use that method to evaluate the constraint.
Constraints on Dependent Design Variables
If there are dependent design variables, the lower and upper bounds on these variables are converted into
constraints using
(2-138)
where yi is the current value of the ith dependent design variable and XLBi and XUBi are the bounds imposed
on this variable.
These constraints differ from the side constraints of Equation (1-4) that are applied directly to the independent
design variables by the optimizer.
Constraints on Properties
Property constraints are computed using the relationships given by Equation (2-127).
Constraints on Beam Dimensions
The beam library calculates beam properties based on beam dimensions. It is necessary to prevent
combinations of dimensions from taking on values that are physically meaningless. For example, the inner
radius of a tube cross section cannot exceed the outer radius. Table 2-6 documents the constraints imposed on
the MSC supplied cross-sections. Constraints are satisfied when they are &amp;lt; 0.0. (Refer to the MSC Nastran
Quick Reference Guide  for the meaning of the dimensions.)
Table 2-6  Constraints for Beam Library
Section Type Constraint
TUBE DIM2 - DIM1
I DIM4 - DIM2
DIM4 - DIM3
DIM5 +DIM6 - DIM1
CHAN 2 * DIM4 - DIM2
DIM3 - DIM1
T DIM3 - DIM2gLDDVxiXLBixi– 
XLBi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
guDDVxixiXUBi–
XUBi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model96
Main Index
Note that the L cross-section type is only available for the PBEAML.
If the user supplies cross-section types that are in addition to the MSC supplied types, constraints can be
specified as a part of the specification (see Adding Your Own Beam Cross-Section Library ). The constraints
are applied once for each designed PBARL while the PBEAML has constraints for each designed section
(possible sections are End A, End B and up to nine intermediate stations). The constraints are evaluated
exactly as listed in Table 2-6 with no normalization.
Gradient Evaluation
The gradient evaluation of Figure 2-7 proceeds in 7 steps:DIM4 - DIM1
BOX 2&lt;em&gt;DIM4 - DIM1
2&lt;/em&gt;DIM3 - DIM2
CROSS DIM4 - DIM3
H DIM4 - DIM3
T1 DIM4 - DIM1
I1 DIM3 - DIM4
CHAN1 DIM3 - DIM4
Z DIM3 - DIM4
CHAN2 DIM2 - DIM3
2 * DIM1 - DIM4
bordered DIM4 - DIM1
DIM3 - DIM2
BOX1 DIM4 +DIM3 - DIM2
DIM5 +DIM6 - DIM1
HEXA 2 * DIM1 - DIM2
HAT 2 * DIM2 - DIM1
2 * DIM2 - DIM3
L DIM3 - DIM2
DIM4 - DIM1
HAT1 DIM3 - DIM1
2* DIM4 - DIM2
2* DIM4 +DIM5 - DMI2Table 2-6  Constraints for Beam Library  (continued)
Section Type Constraint&lt;/p&gt;
&lt;p&gt;97 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
The gradients of the properties are evaluated.
Gradients of active constraints on type-1 responses are evaluated.
Gradients of active constraints on type-2 responses are evaluated.
Gradients of active constraints on type-3 responses are evaluated.
Gradients of active constraints on dependent design variables are evaluated.
Gradients of active property constraints are evaluated.
Gradients of active beam library constraints are evaluated.
In addition, the gradient of the objective, which is one of the responses is always calculated.
Not all these steps need to be present in a particular design task. Optimization  has provided a definition of
active constraints; basically the concept is that the optimizer selects a reduced set of the retained constraints
to deal with when it requires a gradient evaluation. The approximate model takes advantage of this by only
computing the gradients of this reduced set. Each of the gradient steps is now described.
Gradients of the Properties
Gradients of all the properties are computed with respect to the design variables . This computation is a simple
matter in the case of type-1 properties since they are a linear function of the design variable ( Equation (2-2))
and the gradient is
(2-139)
where the superscript 1 denotes a type-1 property.
Finite difference techniques are applied for the type-2 properties of Equation (2-5) with properties being
perturbed one design variable at a time to provide
(2-140)
where the X0 + xi notation is meant to imply that the ith design variable is perturbed while the remaining
variables are held at their current values. The gradient of each type-2 property then is a vector with terms for
each independent design variable.
Beam library properties (also called type-3) require chain-rule operation to compute a property derivative of
the form
(2-141)
The second term in the chain rule is obtained from a type-1 gradient as given in Equation (2-139). The first
term is the sensitivity of the property with respect to the dimension. For section types in MSC Beam Library, pj1
xi&amp;mdash;&amp;mdash;&amp;mdash; Cji=
pj2
xi&amp;mdash;&amp;mdash;&amp;mdash;fX0XiC + fX0xiC –  –
2xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
pj3
xi&amp;mdash;&amp;mdash;&amp;mdash;pj3
DIMk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;DIMk
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
k1=ndim
=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model98
Main Index
this sensitivity is provided analytically based on the equations for the beam properties. For example, the area
of a tube cross-section is computed as
A = (DIM12 - DIM22) (2-142)
Then
(2-143)
For user supplied cross sections, you have the option of supplying the analytic gradients or specifying that
they are to be computed using central differencing techniques much along the lines of Equation (2-140).
Gradients of Type-1 Responses and of Active Constraints from Type-1 Responses
The gradients of all the type-1 responses are computed with respect to all the design variables in a two step
process. In the first step, the direct sensitivities with respect to the design variables and the type-2 and type-
3 properties are computed. The second step applies the approximation technique used in the function
evaluation to obtain a gradient consistent with the predicted response
(2-144)
where the first term on the right is available directly from the sensitivity analysis of Equation (2-23), as are the
and&lt;br&gt;
terms. The
and&lt;br&gt;
terms are the property gradients just discussed in Equation (2-142) and Equation (2-143), respectively.
Given the gradient of the type-1 response, the calculation of the gradient of the constraint based on the
response depends on the approximation used in calculating the response. For the direct approximation, the
constraint gradient is given by
(2-145)
where, from Equation (2-10), lower bound constraints have k = 2j - 1 and BNDk = -GNORM  while upper
bound constraints have k = 2j a nd BNDk = GNORM .
For the reciprocal approximation, the gradient isA
DIM1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 2DIM1 =
drj1
dxi&amp;mdash;&amp;mdash;&amp;ndash;rj1
xi&amp;mdash;&amp;mdash;&amp;ndash;rj1
pk2&amp;mdash;&amp;mdash;&amp;mdash;pk2
x1&amp;mdash;&amp;mdash;&amp;mdash;
krj1
pm3&amp;mdash;&amp;mdash;&amp;mdash;-pm3
xi&amp;mdash;&amp;mdash;&amp;mdash;-
m+ + =
rj1pk2rj1pk3
pk2xipk3xi
gk
xi&amp;mdash;&amp;mdash;&amp;ndash;1
BNDk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;drj1
dxi&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;h1&gt;99 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
(2-146)
where the k subscript and BNDk have the same meaning as given above.
If convex linearlization has been selected, the direct gradient of Equation (2-145) is used if the product of
while the reciprocal approximation of Equation (2-146) if this product is less than zero.
Gradients of Type-2 Responses and of Active Constraints on Type-2 Responses
The gradient of a type-2 response is required when the response is the objective, when the response is
constrained directly or when it is used in a type-3 or other type-2 response. The type-2 response can be a
function of design variables, designed properties (both type-1 and type-2 properties), design responses (both
type-1 and type-2 responses) and/or grid locations. With the exception of the grid locations and the type-2
responses, the gradients of these components have already been discussed. The grid location gradient can be
obtained directly from the basis vector relationship of Equation (6-5). For the sake of this discussion, we can
rewrite the type-2 response equation of Equation (2-7) into a condensed form of
(2-147)
where ARG can be any argument in the response. A chain rule operation is then applied to obtain the overall
gradient
(2-148)
The ARGk is a finite difference change in a component and  is the gradient of the component
with respect to the design variable and has already been calculated (  is 1.0 when ARGk is xi.
The ARGk term is calculated using
(2-149)
FDCH and FDCHM are 0.001 and 1.0-6, respectively.
The gradients of the constraints based on type-2 two responses are simplygk
xi&amp;mdash;&amp;mdash;&amp;ndash;1
BNDk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;drj1
dxi&amp;mdash;&amp;mdash;&amp;ndash;xi
xi0&amp;mdash;&amp;ndash;
2&lt;/h1&gt;&lt;p&gt;xi
BNDk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;rj
xi&amp;mdash;&amp;mdash;-0.0
rj2fARG =
drj2
xi&amp;mdash;&amp;mdash;&amp;ndash;fARGARGk+ fARGARGk–  –
2ARGk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ARGk
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
k=
ARGkxi
ARGkxi
ARGkFDCHARGk      FDCHARGkFDCHM  
FDCHM                      o therwise =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
The Approximate Model100
Main Index
(2-150)
where the k subscript and the BNDk value have the same meaning as they do for the type-1 response of
Equation (2-145).
Gradients of Active Type-3 Responses
The gradient of a type-3 response is required when the response is the objective or when the response is
constrained and the constraint is active. The type-3 response can be a function of design variables, designed
properties (both type-1 and type-2 properties), design responses (both type-1 and type-2 responses) and/or
grid locations. The user has a number of options for calculating these gradients and this is governed by the
GRDTYP specified in the R3SGRT subroutine introduced in “Creating a DRESP3 Entry”. Options are:
1.GRDTYP=1 - Analytical gradients are supplied by the user. These gradients are a function of the
approximate optimization task.
2.GRDTYP=2 - Analytical gradients are supplied by the user. These gradients are taken to be invariant
during the approximate optimization task.
3.GRDTYP=3 - Finite difference gradients are computed and they are a function of the approximate
optimization task.
4.GRDTYP=4 - Finite difference gradients are computed before the approximate optimization task and
are considered invariant during the task.
The same chain rule formulation as that given in Equation (2-148) for type-2 gradients is applicable for type-3
gradients when the finite difference method is applied. If the analytical gradient method is used, the user
needs to provide the gradient information via the R3SVALD subroutine. Gradients of the constraints based
on type-3 responses follow the method shown in Equation (2-150).
In R3SGRT , GRDTYP needs to be defined for all NRESP responses and the values must be either 1, 2, 3 or
4. It is an error if any other value is used.
Hexagon currently does not have test cases that allow an evaluation of the relative performance of the various
gradient options. However, one can make the following recommendations:
1.If the DRESP3 evaluations are cheap and simple, GRDTYP = 1 (analytic, variant) is recommended.
2.If the DRESP3 evaluations are simple but expensive, GRDTYP = 2 (analytic, invariant) is
recommended. It would seem that this option would be rarely needed.
3.If the DRESP3 evaluations are not simple but still cheap, GRDTYP = 3 (finite difference, variant) is
recommended.
4.If the DRESP3 evaluations are complex and expensive, GRDTYP = 4 (finite difference, invariant) is
recommended.
The invariant gradients will not provide as accurate a calculation as the variable ones so it becomes a trade-
off between the time spent performing the optimization and possible more design iterations to reach the final
design. It is expected that his capability will be used sparingly, but will provide a dramatic improvement in
CPU time in special circumstances.gk
dxi&amp;mdash;&amp;mdash;&amp;ndash;1
BNDk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;drj2
dxi&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;101 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
The Approximate Model
Main Index
Gradients of Active Dependent Design Variables
The gradient of an active constraint imposed on the  j-th dependent design variable with respect to the i th
independent variable is given by combining Equation (2-1) with Equation (2-138) and differentiating to get
(2-151)
Gradients of Active Property Constraints
The gradient of an active constraint imposed on the j th designed property with respect to the i th design
variable is given by
(2-152)
where the property gradients have been defined in Equation (2-139)., Equation (2-140), and Equation (2-141).
Gradients of Active Beam Library Constraints
From Table 2-6, it is seen that the gradient of the j-th beam library constraint with respect to the i th design
variable is given by
(2-153)
This is a straight-forward calculation. As an example, suppose a CHAN section type is being designed and
the DIM4 dimension is defined as being equal to 0.1 x5. Then the gradient of the first CHAN constraint
of Table 2-6 with respect to x5 is simply
(2-154)dgLDDV
dxi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ci–
XLB&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
dguDDV
i&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ci
XUB&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
dgLP
dxi&amp;mdash;&amp;mdash;&amp;mdash;1–
pjL&amp;mdash;&amp;mdash;&amp;ndash;pjx
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
guP
xi&amp;mdash;&amp;mdash;&amp;mdash;1
puL&amp;mdash;&amp;mdash;&amp;ndash;pjx
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
gBL
xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;gBL
DIMj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-DIMj
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
gCH1BL
x5&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 2.00.1 2.0= =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Tests for Convergence102
Main Index
Tests for Convergence
Since structural optimization is an iterative process, numerical criteria must be established to determine when
the overall process has converged. There are two levels at which convergence is tested: the first, lower level is
at the optimizer level; the second, higher level is with respect to the overall design cycles. This section is
concerned with design-cycle level convergence. Convergence at the optimizer level is discussed in The IPOPT
Algorithm .
Convergence of Design Cycles: Hard and Soft Convergence
Figure 2-1 has indicated that a convergence check is made immediately following the structural analysis. This
is a somewhat simplified representation in that, in reality, two methods are used to test for convergence with
respect to overall design cycles. These methods are denoted as soft convergence and hard convergence as
shown in the modified version of Figure 2-1 shown in Figure 2-15 which highlights the convergence aspects of
the design cycle loop. Soft convergence is based on the results of the approximate optimization, while hard
convergence is based on finite element analysis results.
Figure 2-15  The Design Cycle Loop with Emphasis on the Convergence TestsImproved
DesignInitial
Design
Structural
Analysis
Constraint
Screening
Sensitivity
AnalysisApproximate
ModelOptimizer
Finite Element AnalysisMany  TimesHard Convergence ExitExit
Soft ConvergenceY
Y
NN&lt;/p&gt;
&lt;p&gt;103 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Tests for Convergence
Main Index
Recall that at the outset of each design cycle, a finite element analysis and a sensitivity analysis are performed.
The approximate model is then constructed followed by an optimization with respect to this approximation.
Soft convergence compares the design variables and properties output from the approximate optimization
with those of the input to the approximate optimization. If these variables/properties have not changed
appreciably, another finite element analysis may not be warranted. For example, if a particular analysis model
has a high solution cost and the optimizer has not changed the design to any significant degree, it may be
permissible to forego the final finite element analysis. The results from the previous analysis are probably of
sufficient validity for design purposes; therefore, soft convergence may be a preferable and cost effective exit
point. Soft convergence is always tested, but, by default, does not result in program termination. Setting
PARAM SOFTEXIT to YES will result in program termination following a determination that soft
convergence has been achieved.
Once a corresponding approximate optimum is found, the finite element model, in terms of the design
properties and grid locations, is updated. The proposed design is submitted for another finite element analysis
to compute the updated responses, thus marking the beginning of the next design cycle.
Hard  convergence compares the results of this most recent finite element analysis with those from the
previous design cycle. Since this test compares the exact results (within the limits of the finite element
analysis) from two consecutive analyses, the conclusions are said to be based on hard evidence. Since this test
is conclusive, this is the default test for determining whether or not to terminate the design-cycle process.
Soft convergence compares the design variables and properties output from the approximate optimization
with those of the input to the approximate optimization. If these variables/properties have not changed
appreciably, another finite element analysis may not be warranted. For example, if a particular analysis model
has a high solution cost and the optimizer has not changed the design to any significant degree, it may be
permissible to forego the final finite element analysis. The results from the previous analysis are probably of
sufficient validity for design purposes; therefore, soft convergence may be a preferable and cost effective exit
point. Soft convergence is always tested, but, by default, does not result in program termination. Setting
PARAM SOFTEXIT to YES will result in program termination following a determination that soft
convergence has been achieved.
On the initial cycle of the Design Cycle loop shown in Figure 2-15, the hard convergence test is skipped and
program flow proceeds directly to the sensitivity analysis and approximate optimization. Once an
approximate optimum is obtained, a soft convergence test is performed to compare this design with the prior
design.
If soft convergence has not terminated the design process, a finite element evaluation of the new, proposed
design is performed followed by constraint evaluation and screening. If the analysis results are not appreciably
different from those of the prior cycle, hard convergence is achieved, and the design cycle process is
terminated. If the hard convergence criteria are not satisfied, the design cycle process continues.
If neither hard nor soft convergence is achieved, the design process will continue until convergence is
indicated or until the maximum allowable number of iterations is met. This default maximum number of
iterations is 5 but can be changed on the DOPTPRM entry using DESMAX.
The following paragraphs discuss soft and hard convergence decision logic.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Tests for Convergence104
Main Index
Soft Convergence Decision Logic
A schematic of the soft convergence decision logic is shown in Figure 2-16. The result of the test is a true or
false value for the logical variable SOFTCV. The design cycle terminates only if SOFTCV is ‘TRUE’ and the
parameter SOFTEXIT is ‘YES’.
Figure 2-16  Soft Convergence Decision Logic
From Figure 2-16, soft convergence is based solely on the relative changes in the properties and design
variables. The definitions of the parameters in the in the figure appear in Table 2-7 along with their default
values. These values may be modified using the DOPTPRM entry.CHGPRP CONVPR
CHGDV &amp;lt; CONDV
SOFTCV = TRUE SOFTCV = FALSEYY
NN&lt;/p&gt;
&lt;p&gt;105 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Tests for Convergence
Main Index
The assumption can be made that if the changes in the design variables and properties are not appreciable,
the objective and the constraints are unchanged and there is nothing to be gained from continuing.
Hard Convergence Decision Logic
Hard convergence is used to decide whether or not the design cycle process should continue, providing that
the maximum allowable number of design cycles (DESMAX) has not yet been reached. The satisfaction of
hard convergence is always sufficient to stop the design process.Table 2-7  Convergence Criteria Parameters (the P and P-1 Superscripts Refer to the Current and
Previous Design Cycle)
Internal
Variable Definition Parameters Default
CHGOBJ CONV1 0.001
(0.005  for topology
optimization)
ACHOBJ CONV2 1.0E-20
CHGPRP CONVPR 0.001
CHGDV CONVDV 0.001
(1.0E-4 for topology
optimization)
CONMAX GMAX 0.005OBJPOBJP1––
OBJP1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
OBJPOBJP1––
max
1iNPROP PiPPiP1––
PiP1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
    
max
1iNDVxiPxiP1––
xiP1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
    
max
kgkx&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Tests for Convergence106
Main Index
A flowchart of these criteria is shown in Figure 2-17 with the corresponding definitions of the terms appearing
previously in Table 2-7. Note that one of three possible conclusions may be reached.
Figure 2-17  Hard Convergence Decision Logic
The first check is with respect to the relative and absolute changes in the objective function. The reasoning
behind the application of an ‘OR’ test is based on a consideration of the objective function magnitude. If the
objective is large, such as the weight of a heavy machine part in kilograms, converging to within a plus or
minus range of a kilogram is probably quite sufficient. Forcing convergence to within a fraction of a kilogram
may be meaningless as well as expensive. On the other hand, there are situations where the objective function
is a very small number (e.g., minimization of the difference between analysis and test results). For such cases,
minimization of the absolute change may be more meaningful than the relative change.Convergence
Non unique If
CHGPRP  &amp;gt; CONVPR or
CHGDV  &amp;gt; CONVDVCHGOBJ  &amp;lt; CONV1
or
ACHOBJ &amp;lt; CONV2
Best Compromise,
Infeasible Design
FoundContinue with
OptimizationY
Y
YN
N
NCONMAX  &amp;lt; GMAX
CHGPRP  &amp;lt; CONVPR
and
CHGDV  &amp;lt; CONVDV&lt;/p&gt;
&lt;p&gt;107 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Tests for Convergence
Main Index
If the objective has not changed appreciably in either an absolute or a relative sense, a check is performed to
ensure that the maximum constraint value is less than its maximum allowable. If this criterion is satisfied,
then hard convergence is achieved.
Special Convergence in Topology Optimization
Topology optimization can converge using criteria that are somewhat different from that given above.  In this
case, it is still necessary that the current and previous design have no violated constraints but somewhat
relaxed criteria are imposed once this condition is met. Hard convergence is now achieved when:
CHGOBJ &amp;lt; 0.005
And
The percentage of grey elements is &amp;lt; 30. * XINIT
Where a grey element is one whose value is 0.3 &amp;lt; xi &amp;lt; 0.7. XINIT is set by the rules given on the TOPVAR
entry and it is seen that if it is 0.3, the percentage of grey elements must be less than 9%.
Non-Unique Optima
Even if hard convergence has been achieved, the user should check to see if the relative changes in properties
CHGPRP or the relative changes in design variables CHGDV are satisfied. If they are, then the design process
has converged to a unique design. If not, a non unique design may have been found.
From a design perspective, convergence to a non unique design is extremely useful information. This would
indicate that the optimum properties could be modified by the engineer with correspondingly little change
in the objective function and/or constraints. (In other words, the optimal design exhibits low sensitivity with
respect to changes in the design variables.) A design space of this type is shown in Figure 2-18 where contours
of the objective and active constraint boundary have similar curvatures in the region of the optimum. In
situations such as these, the design may be modified to take advantage of available sheet metal gauges or tube
sizes without violating the active constraint(s) and with correspondingly little change to the optimum
objective. Of course, any proposed changes should be subjected to an analysis and the results checked
carefully to ensure that other performance constraints are not violated.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Tests for Convergence108
Main Index
Figure 2-18  Non-unique Optimum
Compromise Infeasible Design
Returning to the hard convergence decision logic of Figure 2-17, note that the code only checks the relative
changes in properties and design variables if the limit on the maximum constraint value is not satisfied. The
purpose of this check is to determine whether the design is changing for the case of violated constraints. If
the design is still varying, optimization can continue in order to try to overcome the constraint violation(s).
However, if the design is not changing, then we are at a point in the design space that represents a best
compromise solution among the violated constraints. This situation is shown in Figure 2-19 where the optimal
design is that which minimizes the sum of the constraint violation.Non-unique
Optimum
F 10=F 15=F 20=gx
Fx*x2
x1&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P7</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_007/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_007/</guid>
      <description>
        
        
        &lt;p&gt;109 Chapter 2: Fundamentals of Design Sensitivity and Optimization in MSC Nastran
Tests for Convergence
Main Index
Figure 2-19  Design Space, No Feasible Solutions
Given the implications of hard convergence, a careful review of the output is advised in order to determine
which convergence conditions have been met. Just because the process has been terminated does not
necessarily imply that a unique, feasible design has been found. A discussion of the output from both the soft
and hard convergence checks, given in “ Design Optimization Output ” starting on page 259, is particularly
relevant to the stopping criteria in that it contains a list of all the possible messages that can occur at the end
of an optimization task.FX*g1Xx2
g2X
x1&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Tests for Convergence110
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 3: Developing the Design Model for Sensitivity and Optimization
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide
3Developing the Design
Model for Sensitivity and
Optimization
Overview of Design Modeling     112
Case Control for Design Optimization     114
Defining the Design Variables     116
Relating Design Variables to Properties     118
Designating the Design Responses     121
Defining the Objective Function     129
Defining the Constraints     130&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Overview of Design Modeling112
Main Index
The previous chapter provided an in-depth description of how Design Sensitivity and Optimization has been
implemented within the MSC Nastran product. A key concept in that description was that of the design
model ( The Design Model ). The design model is simply a formal statement of allowable changes that can be
made to a structure during the search for an optimal design. It also places limits on these allowable changes,
and defines limits on the structural responses. Constructing the design model requires good engineering
judgment if the design results are to be of any practical use.
The essential features of the design model are that it must
Define the design variables that may be modified.
Describe the relationship between the design variables and the analysis model properties and/or grid
locations (for shape optimal design).
Identify and/or develop responses that are to be used in the design.
Define the objective function, which provides a scalar measure of design quality.
Place bounds (constraints) limiting the design responses to an acceptable range.
This chapter describes each of these features in greater detail, with reference to the text user interface that is
used to define the design model. In connection with this chapter, you will want to refer to Input Data  that
explains the text interface in detail and Example Problems .
The examples in Chapter 7 should all be available on your system. Running some of these in connection with
the following discussions is a good way to begin to discover the many design modeling options available to
you in MSC Nastran.
Overview of Design Modeling
Given the wide range of problem types that may be addressed using design sensitivity and optimization, the
process of generating a design model is hardly a rote or mechanical operation. However, most of the
operations are sufficiently similar that one might generate a flowchart outlining the design modeling process
as follows:&lt;/p&gt;
&lt;p&gt;113 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Overview of Design Modeling
Main Index
Figure 3-1  Design Modeling Process
The following sections discuss each of these items in greater detail. Define the analysis disciplines to be used
for Design Optimization
(Executive Control: SOL 200;
Case Control: ANALYSIS = )
Define the design variables
(Bulk Data: DESVAR, DLINK, DDVAL, TOPVAR,
TOMVAR, BEADVAR, SEDLINK)
Relate the design variables to allowable
structural variations:
for properties (Bulk Data: DVPREL1, DVPREL2,
DVMREL1, DVMREL2,
DVCREL1, DVCREL2, DVLREL1, DVPSURF)
for shape (Bulk Data: DVGRID,
DVBSHAP , DVSHAP , BNDGRID)
Define the design responses
(Bulk Data: DRESP1, DRESP2, DRESP3, SEDRSP2,
SEDRSP3)
Define the objective (Case Control: DESOBJ)
and the constraints (Bulk Data: DCONSTR, DCONADD;
Case Control: DESGLB, DESSUB, DRSPAN)
Provide any necessary parameter overrides and constraint
values
(Bulk Data: DOPTPRM, DSCREEN, DTABLE, DTABLE2)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Case Control for Design Optimization114
Main Index
Case Control for Design Optimization
Case Control commands in MSC Nastran provide the overall direction for the analysis to be carried out as
well as the data recovery operations to be performed. In this context, a powerful feature of design sensitivity
and optimization in MSC Nastran is that you can specify that a structure be subjected to a number of
different analysis types for a number of various load conditions. The optimizer will consider the results of all
of these analyses simultaneously when proposing an improved design. This approach is often described as
multidisciplinary design optimization.
As an example, you may have a component that is subjected to two static loading conditions. The component
must also satisfy requirements on natural frequency bounds as determined from a modal analysis. Further,
the structure might also be subjected to transient loading conditions for which peak displacement responses
might be of concern. We can quite easily introduce these different analysis types in Solution 200 (the solution
sequence for design optimization) with the following Case Control packet:
Note some of the features in this example: SOL 200
cend
spc = 100
DESOBJ(MIN) = 15
ANALYSIS = STATICS
subcase 1
DESSUB = 10
displacement = all
stress = all
load = 1
subcase 2
DESSUB = 20
displacement = all
strain(fiber) = all
load = 2
subcase 3
ANALYSIS = MODES
DESSUB = 30
method = 3
subcase 4
ANALYSIS = MTRAN
DESSUB = 40
method = 4
dload = 4
tstep = 10
begin bulk
SOL 200 This is an Executive command indicating Solution 200, the solution sequence for
design sensitivity and optimization, is to be invoked.
ANALYSIS This Case Control command indicates the analysis discipline to be used for a
particular subcase (if appearing above a subcase level, all subsequent subcases
assume the same ANALYSIS command until changed). ANALYSIS may assume
any of the following values:
STATICS Statics
MODES Normal Modes&lt;/p&gt;
&lt;p&gt;115 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Case Control for Design Optimization
Main Index
Case Control Output Requests in Design Optimization
In addition to the analysis-related Case Control commands, output requests might also appear, such as:
In general, case control requests are for data recovery only; and are unnecessary for design optimization. All
necessary data recovery is automatically performed based on the design responses identified in the Bulk Data
(identifying the responses is discussed in Designating the Design Responses ). You do not need to explicitly
request this data recovery unless you want to view the results. There are some special cases however that you
need to know about where output options do play a role in specifying design responses:
If various output forms are possible (e.g., strain(strcur) or strain(fiber)), design optimization will use
the defaults unless a Case Control request to the contrary is provided. To use the STRAIN example,
STRAIN(STRCUR) representation is the default. If STRAIN(FIBER) is provided, data recovery
and design optimization responses are both computed using this form. Two other instances like this
are the VONMISES vs. MAXS option on the STRESS/STRAIN commands and the (REAL or
IMAG) vs. PHASE option of many case control commands in a Dynamic Response analysis.
Defaults are listed in the MSC Nastran Quick Reference Guide .
Shape optimization and superelement optimization each have some additional Case Control
considerations beyond those related to data recovery. Design Variables in Superelement Design Modeling&lt;br&gt;
discusses the Case Control structure for superelement design models. In addition, Example
Problems  includes examples of both, shape and superelement optimization.BUCK Buckling
DCEIG Direct complex eigenanalysis
DFREQ Direct Frequency
MCEIG Modal complex eigneanalysis
MFREQ Modal Frequency
MTRAN Modal T ransient
SAERO Steady Aeroelastic
FLUTTER Flutter
DESOBJ Selects the design objective from a response defined in Bulk Data with DRESP1,
DRESP2 or DRESP3.
DESSUB Selects constraints to be applied at a particular subcase level from a DCONSTR or
DCONADD set defined in Bulk Data.
displacement= all
strain(fiber)= all&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Defining the Design Variables116
Main Index
Defining the Design Variables
In design optimization, design variables are the quantities that are modified by the optimizer during the
search for an improved design. In design sensitivity analysis, rates of change of responses are computed with
respect to the design variables.
Defining the design variables is part of the design modeling task of the engineer. Once defined, the design
variables may be used to
Describe analysis model property variations.
Define shape variations.
Add additional terms to the design task that are not explicitly related to the finite element analysis.
This third category allows you to stretch your imagination when applying Design Optimization in MSC
Nastran. The availability of type-2 and type-3 responses allows you to consider design conditions that are not
directly related to the finite element analysis. Although you probably do not want to optimize text book
mathematical programming tasks using MSC Nastran, it is not outside the range of possibility. On a more
realistic note, the example of Acoustic Optimization  uses an added design variable in a novel way to minimize
the maximum acoustic pressure in the analysis.
As the optimizer changes the design variables, it does not “know” it is changing a structural model-it is only
performing a mathematical search. It is the design engineer who has defined exactly how the structure will
change. For example, a single design variable might have been used to describe a number of bar cross-sectional
areas, several plate element thicknesses as well as a fillet radius. As the optimizer changes this single variable,
the entire structure changes! Expressing allowable structural variations with an economy of design variables
is part of the challenge of design modeling.
A Design Variable is defined with a DESVAR Bulk Data entry. From the Bulk Data listings in Input Data ,
notice that the DESVAR entry provides an ID, an initial value for the variable, bounds (or side constraints),
an optional move limit for the approximate optimization and, for discrete variable optimization, a pointer to
a list of discrete values the design variable can assume. The bounds limit the region of search with respect to
each variable as
(3-1)
The optimizer will never propose a design that violates these bounds.
The following DESVAR entries define a pair of variables x10 and x11 with initial values of 0.05 and 0.03,
respectively.
The label fields are strictly to help you in characterizing the variable and you have complete freedom in the
name you specify for the variable. In this case, we can assume these design variables will be used to define an $DESVAR ID LABEL,  XINIT,  XLB,    XUB, DELXV, DDVAL
$
DESVAR, 10, AREA1,  0.05,   0.01,   0.1, 0.2
DESVAR, 11, THICK1, 0.03,   0.01,   0.08
$xiLxixiU&lt;/p&gt;
&lt;p&gt;117 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Defining the Design Variables
Main Index
area and a thickness, although the DESVAR entry does not actually provide these relations (this is up to the
DVPREL1 and DVPREL2 entries). Bounds have also been defined as
(3-2)
The DELXV field, which is 0.2 for the AREA1, limits the amount this design variable can change during an
optimization cycle by 20%. The THICK1 variable has this field blank so the move limit for this second
variable is the value of the DELX parameter you can provide as a default for all of the variables on the
DOPTPRM entry. If you don’t specify the DELX parameter either, the default move limit is 50%.
There is one more optional field on the DESVAR entry that enables you to perform a discrete optimization
task as explained in Special Topics . This is the DDVAL attribute on the DESVAR entry and the integer value
points to a DDVAL Bulk Data entry with this ID. The presence of this integer triggers discrete variable
optimization that produces a design with design variable values chosen from the discrete set of real numbers
given on the DDVAL entry.
The entire set of DESVAR entries can be thought of as defining a vector of design variables or
(3-3)
The quantity n is often referred to as the dimension of the design space. The greater the dimension the more
complicated the optimization task. The optimizer’s task is to find the best configuration for these variables.
A question that comes up frequently is: How many design variables can MSC Nastran handle in a design task?
There is no single answer for this question. The MSC Nastran code is written to avoid fixed limits and the
design sensitivity and optimization capability is no exception to this. Further, the answer depends on the
computer resources you have available, your tolerance for expending these resources and your time waiting
for the results and also on the type of problem you are trying to solve. Given all that, it is still useful to provide
a guideline. Problems with up to a thousand design variables are considered routine in MSC Nastran while
problems that have several thousand variables can be considered extreme. In cases where the design task is
“easy,” (i.e., find the set of design variables that minimizes the weight while satisfying a single displacement
limit), it’s possible to consider upwards of 10,000 variables.
The above paragraph refers to the MSCADS algorithms that are included as part of the design optimization
module. If the design task has several thousand design variables, we recommend that the IPOPT algorithm
be used. The main purpose for this IPOPT is to perform topology optimization, however, the IPOPT
optimization algorithm can be used for other design tasks with up to one million design variables. Note that
is not necessary for you to select the optimization algorithm. If a preference has not been specified, MSC
Nastran will select the most appropriate method based on the number of design variables and the number of
active constraints.
Design Variables and the Finite Element Model
Recall that the problem we are trying to solve is defined by the basic optimization problem statement of
Equation (1-1) through Equation (1-5). Note that the design objective and constraint functions are expressed as
functions of design variables. How is this the case in structural optimization?0.01x100.1
0.01x110.08 
X x1x2xn  T=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Properties118
Main Index
Assume that we are interested in minimizing the total structural mass for a particular mechanical component.&lt;br&gt;
This will be our objective function.  We know that the mass is a function of the properties used to describe
the component as well as its shape.  This can be expressed as
(3-4)
where the vector P is the collection of properties that describe the model and the vector G is the collection
of grid point coordinates.
In the next sections, we will show how the properties and shape of the structure can be expressed as functions
of design variables or
(3-5)
By direct substitution of (3-5) into (3-4),
(3-6)
or simply,
(3-7)
To summarize, as the optimizer changes the design variables, the analysis model properties and shape will also
change as defined by the design model.  The modified properties and shape result in changes to the computed
responses that we have used to define the objective and constraint functions.  Based on the modified objective
and constraints, the optimizer can measure the amount of design improvement.
Toptimization Design Variables
The discussion in this section has been terms of the DESVAR Bulk Data entry that is used in standard design
optimization. For topology optimization, there typically is a design variable for every finite element and it
would be impractical to ask the user to define each of these individually. Instead, a TOPVAR Bulk Data entry
is used as described in TOPVAR . This entry identifies a property ID that can be associated with many finite
elements. In this case, design variables are created internally for each of these elements. The initial values and
upper and lower bounds on each of these design variables are obtained from the TOPVAR entry. The density
and the Young’s Modulus of the element are then governed by the relationships shown in Equation (7-1).
Similarly, for topometry optimization the TOMVAR entry spawns a design variable for each element
associated with the identified property ID. For topography and the BEADVAR entry, a separate design
variable is spawned for each element associated with the identified property ID to create a shape variable.
Relating Design Variables to Properties
For the analysis model to vary as the design variables are changed, its properties and/or its shape must be
expressed in terms of the design variables. You need to provide these relations as part of the design model
specification. This section discusses analysis model property changes for sizing optimization. Relating Design
Variables to Shape Changes  discusses shape variations for shape optimization.M MPG =
P PX =
G GX =
M MPXGX  =
M MX =&lt;/p&gt;
&lt;p&gt;119 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Relating Design Variables to Properties
Main Index
Analysis model properties are defined as those quantities which appear as real numbers on Bulk Data property
entries. As discussed in Overview of Fundamentals , four different types of properties are supported for MSC
Nastran design sensitivity and optimization: element properties, material properties, connectivity properties
and load properties. Element properties are items such as plate thicknesses, area moments of inertia and elastic
spring stiffnesses while material properties are, for example, Young’s modulus and Poisson’s ratio.
Connectivity properties are on element connectivity entries and include such items as beam offsets and
concentrated masses. Load properties are currently limited to real numbers appearing on FORCE,
MOMENT and LOAD entries.
You can relate design variables to analysis model properties in either of two ways: with linear relations or with
MSC Nastran’s equation input capability. A linear relation is described using one of the DVxREL1 (Design
Variable-to-Property RELation, type-1) Bulk Data entry, where the x is replaced with a ‘P ’ for element
properties, an ‘M’ for material properties, a ‘C ’ for connectivity properties and a ‘L’ for load properties.
As a review from The Design Model , linear design variable-to-property relations are of the form
(3-8)
where pj is the j-th property expressed as a linear combination of i design variables.
As described as part of the DVxREL1 descriptions (see DVPREL1 ), a special case is provided for the case
when C0 and Ci (i &amp;gt;1) are 0.0 and the user wishes to use the actual property value for C1. In this case, if the
term PVAL is used as input for C1, the actual property value is used as the coefficient.&lt;br&gt;
An equation, or type-2 relation, is defined using a DVxREL2 Bulk Data entry which references a DEQATN
(Design EQuATioN) entry. A property expressed using these relations can be written as
(3-9)
where the j-th property is a function of a collection of design variables and constants. The function is defined
using a DEQATN Bulk Data entry. Note that there is no support for a type-2 load property.
The same design variables may appear in either type-1 or type-2 relations. The block diagram of Figure 3-2
may be helpful in understanding the role of the DVPREL1 and DVPREL2 entries in defining property
variations with the DVCREL1, DVMREL1, DVCREL2, and DVMREL2 entries having a similar structure.pjCo= Ci
i+ xi
pjfXC =
DVPREL2DEQATN DTABLE
Analysis
Model
PropertiesDESVAR
DVPREL1
p1 C0 = C1x + p2 fXC =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Relating Design Variables to Properties120
Main Index
Figure 3-2  Design Variable-to-Property Relations
The DVPREL1 entry defines linear property variations and requires only design variable input. All necessary
constants are supplied directly on the entry. On the other hand, the DVPREL2 entry relies on an equation
to describe the (generally) nonlinear property variations. This equation may have design variables (DESVAR)
as well as table constants (DTABLE, DTABLE2) as input. As shown in Figure 3-2, the result is again an
analysis model property variation.
In design variable-to-property relations, analysis model properties are referenced by property entry, rather
than on an element-by-element basis. This relation is shown schematically in Figure 3-3. The property IDs
MID1 through MIDm are referenced on the DVMREL1 and DVMREL2 entries. Since each of these
property groups may contain a large number of elements (EID1 through EIDn), you can control many
elements by using only a small set of DVMREL-type entries. For example, to modify the material density, all
that is required is to reference a MAT1 ID on a DVMREL entry. All elements that use that material will then
change accordingly.
Figure 3-3  Design Model Reference by Property Entry
You must identify a selected property entry item by its name on the property Bulk Data Entry, where the
name is given in the description of the entry in the MSC Nastran Quick Reference Guide . For example, the
area of a beam on a PBAR has the name A while the thermal expansion coefficient on a MAT1 entry also has
the name A. Table 2-1 through Table 2-4 list the available property names.
To illustrate both type-1 and type-2 design properties consider the following hypothetical example that calls
for designing a plate under the assumption that a change in the thickness of the plate causes a change in a
concentrated mass that is used to estimate such things as paint wiring and rivets. Specifically suppose the
relation between the mass and stiffness is given as:
and a0 and a1 are 0.1 and 0.5 respectively. The analysis model and the design model can be written as:DVMREL1,2EID1
EID2
.
.
.
EIDnMATID1
MATIDm.
.
.
mass a0a1t12+ =&lt;/p&gt;
&lt;p&gt;121 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Designating the Design Responses
Main Index
It is not necessary to define constants using the DTABLE entry, but this can enhance the readability of the
DEQATN when it is used in a large model. Also note that it is not necessary for the value of the designed
property be the same as the corresponding analysis value. In the above example, the CONM2 has an M value
of 0.35 while the designed M value is
The designed property value always takes precedence over the analysis property.
See Special Considerations When Designing One-Dimensional Bending Elements  for additional comments on this topic.
Designating the Design Responses
Before the objective function and constraints can be defined, the analysis responses on which they depend
must be designated. These responses are called design responses and are specified in the design model using
DRESP1, DRESP2, and/or DRESP3 Bulk Data entries.
DRESP1 Bulk Data Entries
DRESP1 Bulk Data entries define type-1, or first-level responses. These responses are available directly from
an MSC Nastran analysis. Structural weight, displacements at grid points, element stresses, and so on, are all
examples of type-1 responses. See the DRESP1 Bulk Data entry description for a list of available response
types in design optimization. The DRESP1 entries all require input of a response ID, response label, and
response type (e.g., WEIGHT) but the remaining data input is response type dependent and this entry is
therefore discussed at length in DRESP1 .
DRESP2 Bulk Data Entries
DRESP2 Bulk Data entries define type-2, or second-level responses. This class of responses is also referred to
as “user-defined” or “synthetic” since the DRESP2 utilizes the equation input feature in MSC Nastran in a
fashion similar to the of the user defined properties (DVPREL2,DVMREL2 and DVCREL2) discussed in
Relating Design Variables to Properties . With the DRESP2 entry and its companion DEQATN entry
(Design Equation), responses such as error functions, stress averages, and so on can be defined. First-level
responses, design variables, grid coordinate values, table constants, designed properties, and even other PSHELL  1       1       0.15    1
CONM210100101021.0
DESVAR  1       T-PLATE 1.0     0.001   10.0
DVPREL1 1       PSHELL  1       T       0.01
1       1.0
DVCREL21CONM210100M40
DESVAR1
DTABLE  A0      A1
DTABLEA00.1A10.5
DEQATN40MASS(X,A0,A1) = A0 + A1 * SQRT(X)
0.1.5(1.0)12+ 0.6=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Designating the Design Responses122
Main Index
second-level responses may all be used as input to these user-defined responses. Figure 3-4 is a diagram of the
DRESP1 and DRESP2 data structure.
Figure 3-4  Second-Level Responses
The DRESP2 entry has a number of features you need to understand to make the most effective use of this
powerful tool. DRESP2  provides a more in-depth discussion, but it is noted for now that one option available
on the DRESP2 entry is to invoke a standard type of operation that does not require a DEQATN. For
example, the SSQ option automatically performs a sum of squares operation on the DRESP2 arguments.
Therefore, you do not need to develop a DEQATN that performs this routine, but potentially lengthy,
summation. Other available standard options are discussed in Table 4-4.
To illustrate the difference between DRESP1 and DRESP2 entries, suppose we have a case where we want to
use the x and y static displacement components at a particular grid point as design responses in our design
model. These first-level responses can be identified using two DRESP1 entries as follows:Analysis
Results
DRESP1 DEQATN DRESP2DESVAR
DTABLE
DNODE
DVPREL1
DVCREL1
DVMREL1
DVLREL1
DVPREL2
DVCREL2
DVMREL2
SSQ XITEMi2
i1=NTERMS
=&lt;/p&gt;
&lt;p&gt;123 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Designating the Design Responses
Main Index
DRESP1 501 selects the x-component of displacement at Grid 100, and DRESP1 502 selects the
corresponding y-component. These displacements may also be used in a synthetic relation. For example, to
express the total x-y plane displacement at Grid 100 as the square root of the sum of displacement squares we
could use:
The equation data is supplied on the DEQATN entry, while the DRESP2 entry defines the arguments to this
equation. In this case the arguments are the two first-level responses DRESP1 501 and 502. DRESP2 520
can now be used as the objective function or invoked by a constraint.
A standard function can also be used in this case so that the input would be simply:
Efficient Definition of Responses
Since a large number of responses are often used in design, the DRESP1 entry must be able to efficiently
define many responses using few entries. For example, a single DRESP1 entry can identify the z-component
of displacement at grid points 100, 101, and 102 as follows:
This list can be extended as necessary to any number of grids. A THRU option is not supported, however.
Element-level responses can be selected using either element IDs (much like the list of grids in the previous
example), or property IDs. By supplying a property ID on a DRESP1 entry, we identify the element-level
response for every element in that property group. For example, the following selects the axial stress response $DRESP1,ID,     LABEL,  RTYPE,  PTYPE,  REGION, ATTA,   ATTB,   ATT1,   +
$+,     ATT2,   &amp;hellip;
$
$&amp;hellip; X DISPLACEMENT AT GRID 100:
DRESP1, 501,    UX100,  DISP,   ,       ,       1,      ,       100
$&amp;hellip; Y DISPLACEMENT AT GRID 100:
DRESP1, 502,    UY100,  DISP,   ,       ,       2,      ,       100
$
$&amp;hellip; DEFINITION OF EQUATION
DEQATN  510     U( UX, UY ) = SQRT( UX&lt;strong&gt;2 + UY&lt;/strong&gt;2 )
$
$&amp;hellip; SYNTHETIC RESPONSE:
DRESP2, 520,    U,      510,    ,       ,       ,       ,       ,       +
+,      DRESP1, 501,    502
$
$&amp;hellip; SYNTHETIC RESPONSE
DRESP2 520 URSS
DRESP1 501502
$DRESP1,ID,     LABEL,  RTYPE,  PTYPE,  REGION, ATTA,   ATTB,   ATT1,   +
$+,     ATT2,   &amp;hellip;
$
DRESP1, 100,    UZ,     DISP,   ,       ,       3,      ,       100,    +
+,      101,    102&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Designating the Design Responses124
Main Index
(the axial response is selected using a stress item code as explained in STRESS ) for all ROD elements in
property groups 150, 160, 170 and 180:
This can generate quite a lot of design data. Figure 3-5 is a schematic diagram of this hierarchy.
If limits are subsequently placed on these responses using a DCONSTR entry (discussed in Defining the
Constraints ), the result will be a pair of stress constraints (one for the upper bound and one for the lower
bound) for every element in each of these property groups. When it is further considered that this constraint
may be selected by multiple subcases, it is seen that just a pair of entries can possibly define thousands of stress
constraints.
Figure 3-5  Identification of Element-Level Responses
These efficiencies in design response identification extend to type-2 and type-3 responses as well. For
example, consider the following DRESP1 entries that identify major and minor principal stresses at surface
z1 for PSHELL group 10:$DRESP1,ID,     LABEL,  RTYPE,  PTYPE,  REGION, ATTA,   ATTB,   ATT1,   +
$+,     ATT2,   &amp;hellip;
$
DRESP1, 250,    SIG1,   STRESS, PROD,   ,       2,      ,       150,    +
+,      160,    170,    180
$DRESP1,ID,     LABEL,  RTYPE,  PTYPE,  REGION, ATTA,   ATTB,   ATT1,   +
$+,     ATT2,   &amp;hellip;
$
$ Major principal stress at surface z1:
DRESP1, 101,    SIG1,   STRESS, PSHELL, ,       7,      ,       10
$
$ Minor principal stress at surface z1:
DRESP1, 102,    SIG2,   STRESS, PSHELL, ,       8,      ,       10DRESP1EID1
EID2
.
.
.
EIDnPID1
PIDmPID2
.
.&lt;/p&gt;
&lt;p&gt;125 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Designating the Design Responses
Main Index
This pair of entries defines a pair of stresses for every element in this property group.  This could easily result
in hundreds of design responses.
Assume we wanted to write the maximum shearing stress as the average of these responses:
This single DRESP2 entry defines a maximum shear for every element in the group. Since the underlying
first-level responses are element-level, the DRESP2 is as well.
A few restrictions apply to the formulation of second and third-level responses:
1.When combining responses of different types (e.g. stress + strain, etc.), the responses must be scalar
quantities. That is, the corresponding DRESP1 entries must define a single response only.  This
implies that for displacements, only a single grid may be listed on the DRESP1 entry; for element-
level responses, the ELEM identifier must be used with only a single element ID; and so on.
2.A DRESP2 entry cannot self-reference the same DRESP2.
3.A DRESP2 can reference DRESP1 and DRESP2 e ntries from separate subcases, but this requires
special handling that involves the DRSPAN case control command.
4.If there is a desire to do parts superelements, the SEDRSP2 and SEDRSP3 entries must be used.
Example Using DRESP1 and DRESP2 Entries
Suppose we would like to include Euler’s buckling constraints in the design model for a simple, pin-ended
rod elements.  A representative element is shown in Figure 3-6.
Figure 3-6  Pin-ended Rod Element
The critical load which induces the first Euler buckling mode is given by
(3-10)
The design requirements call for the axial load in this ROD element to be greater (i.e., less compressive) than
this critical load PCR or$ Input to equation to compute max shears:
DRESP2, 201,    MAXS, AVG,    ,       ,       ,       ,       ,       +
+,      DRESP1, 101,    102
1 2xPA, E, I
L
PCR2EI
L2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Designating the Design Responses126
Main Index
(3-11)
which can be rewritten as
(3-12)
Note that the critical load is a function of the area moment of inertia, yet this quantity is not a part of the
analysis model specification for the ROD element.  (Since the inertia of the ROD is not necessary to compute
the axial force, the inertia is not needed to perform the analysis.) If the cross-sectional area of the element is
the design variable and a solid circular section is assumed, then
(3-13)
and from Equation (3-12)
(3-14)
The buckling constraint is now a function of the cross-sectional area design variable for this ROD element
geometry.  The following Bulk Data entries illustrate one way in which these relations may be implemented:
The DESVAR entry defines the area design variable with an initial value equal to the initial cross-sectional
area of the ROD.  Lower and upper bounds of 0.25 and 0.75, respectively, are set.
Since the constraint on Euler buckling is applied here for just a single element, the ‘ELEM’ identifier is used
on the DRESP1 in field 5 along with a ‘100’ in field 9 and a 2 in field 7 to specify that the axial load for
Element 100 is to be used in the design model.  The force component is selected by reference to the item
codes.  (See Item Codes  in the MSC Nastran Quick Reference Guide .)GRID 1 0.0.0.
GRID 2 10.0.0.
CROD 100 20012
PROD 200 2010.5
$DESIGN MODEL
DESVAR 1 A2000.50.250.75
DVPREL1 301 PROD200A
1 1.0
DRESP1 410 SAFORCEELEM 2 100
DRESP2 501 EUL1600
DESVAR 1
DTABLE L10.0 E10.0E7
DRESP1 401
DTABLE L 10.
DEQATN 600 EUL1(A,L,E,P) = -4. * P* L&lt;strong&gt;2/(PI(1) * E * A&lt;/strong&gt;2)
$ note the use of PI function (see DEQATN entry description)
DCONSTR 500 501 1.0P
PCR&amp;mdash;&amp;mdash;&amp;mdash;-1
P–L2
2EI&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
Ar2=
Ir4
4&amp;mdash;&amp;mdash;&amp;ndash; = IA2
4&amp;mdash;&amp;mdash;=
4–P
E&amp;mdash;&amp;mdash;&amp;mdash;-L
A&amp;mdash;2
1&lt;/p&gt;
&lt;p&gt;127 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Designating the Design Responses
Main Index
The DRESP2 entry defines the arguments of the Euler buckling equation DEQATN 600.  Note that this
information is positional; the values are assigned to the argument list of the equation based on the order of
specification in the DRESP2 entry. The order of the DRESP2 continuation lines is not interchangeable, with
the order provided by the DRESP2 Bulk Data entry description.
This example lends itself to illustrating another feature of the DRESP2 entry: the ability to reference another
DRESP2 entry. The example has been presented in terms of a single ROD entry and a single buckling
constraint. In reality, it is likely that you will want to impose this type of constraint at many points in the
structure and this could be done by duplicating the design model of the bulk data fragment for each
constraint. This entails determining the length of each rod and using it in the equation. Since the form of the
length calculation is shared across all the elements, it may be desirable to formulate a DRESP2/DEQATN to
just determine the length and to then use this in the buckling constraint. The bulk data fragment given above
could then be redone as:
DRESP3 Bulk Data Entries
DRESP3 Bulk Data entries define type-3 or external responses. This bears some similarity to the DRESP2
just described with the important difference that the DRESP3 response is evaluated by invoking an external
(to MSC Nastran) process via an application programming interface (API). Therefore, instead of invoking an
equation for DRESP2, the DRESP3 entry identifies a GROUP or TYPE for the external response. The
arguments for the DRESP3 are similar to DRESP2 so that the data structure diagrammed in Figure 3-4
becomes:grid# 1 0.0.0.
grid# 2 10.0.0.
CROD 100 20012
PROD 200 2010.5
$DESIGN MODEL
DESVAR 1 A2000.50.250.75
DVPREL1 301 PROD200A
1 1.0
DRESP1 410 SAFORCEELEM 2 100
DRESP2 411 LENGTH400
DNODE 1112 132
1222 3
DEQATN 400 LENGTH(X1,Y1,Z1,X2,Y2,Z2) = SQRT((X2 - X1)**2 +
(Y2 - y1)&lt;strong&gt;2 + (Z2 - Z1)&lt;strong&gt;2 )
DRESP2 501 EUL1600
DESVAR 1
DTABLE E
DRESP1 410
DRESP2 411
DTABLE E 1.0E7
DEQATN 600 EUL1(A,E,P,L) = -4. * P * L&lt;/strong&gt;2/(PI(1) * E * A&lt;/strong&gt;2)
DCONSTR 500 501 1.0&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Designating the Design Responses128
Main Index
Figure 3-7  Third-Level Responses
Note that, unlike the DRESP2, a DRESP3 cannot reference another DRESP3. Also, there is an additional
USRDATA argument than can be used to pass character data such as names of data files or options to take
within the external server.
Since an external response is computed using a user-built server executable, defining an external response
requires additional user actions to establish the association between the MSC Nastran program and the
response server programs. Five user actions are required in setting up the external response in a design task:
1.Create a DRESP3 entry to define the response.
2.Write Fortran or C routines and build a server executable based on the server template routines.
3.Create a CONNECT entry to define an external response group.
4.Create a evaluator connection file to associate the external response group with the server program.
5.Submit the MSC Nastran job with the gmconn keyword that references to the evaluator connection
file.
Descriptions of each user actions are given in External Response , with much of the description similar to that
found in Building and Using the Sample Programs  in Chapter 7 of the MSC Nastran Installation and Operations
Guide . An example application is shown in External Response to Include Alternative Buckling Response .Analysis
Results
DRESP1External
ServerDESVAR
DTABLE
DNODE
DVPREL1
DVCREL1
DVMREL1
DVPREL2
DVCREL2
DVMREL2
DVMREL2
DVLREL1
DRESP2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P8</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_008/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_008/</guid>
      <description>
        
        
        &lt;p&gt;129 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Defining the Objective Function
Main Index
Defining the Objective Function
The objective function is a scalar quantity that is either minimized or maximized by the optimizer. You
designate the design objective using the DESOBJ (DESign OBJective) Case Control command. This
command points to a design response defined on either a DRESP1, DRESP2 or DRESP3 Bulk Data entry
which must define a single scalar response.
When formulating the design objective, there are a couple of scaling-related issues that should be kept in
mind since they affect overall performance. First, the design problem should be posed so that the objective
function has sufficient sensitivity with respect to each of the design variables. This is a relative type of
consideration and is somewhat difficult criteria to define in a general sense. However, the idea is as follows:
Suppose a weight design objective is on the order of 1,000 kilograms. If a structural element in the model is
on the order of 1.0E-2 kg or less and is a function of a single design variable, then varying this quantity by
100% or more does not have any appreciable effect on the overall weight. There are three alternative remedies
for this, depending on how other design variables affect the objective. If none of the design variables have a
significant effect, you may not have formulated the best objective. In a weight minimization, this can occur
because the calculated weight includes all the weight in the structure, including fixed weights that are not
functions of the design variables. If these fixed weights dominate the overall weight, you can use a DRESP2
to subtract out this fixed weight so that the objective becomes a stronger function of the design variables. In
our example, if 998 of the 1,000 kilograms are fixed, subtracting this number as shown in the following bulk
data fragment will result in an objective that the optimizer will have an easier time in modifying.
The second alternative is to assess whether the design variable has an appreciable effect on the design in any
case. If the variable does not affect the weight significantly and it has little effect in satisfying a constraint
perhaps it should be removed from the design task or perhaps it can be combined with a number of other
variables that are negligible by themselves but become significant when they vary together. Combining design
variables makes the optimizer’s task easier and perhaps makes it easier for you to interpret the results as well.
In any case, it is always advisable, prior to optimization, to perform a design sensitivity analysis to ensure that
the objective function has sufficient sensitivity with respect to the design variables.
The third, and perhaps, best alternative, is to invoke the OBJMOD parameter on the DOPTPRM entry.
This acts to make the objective relative to the starting design.
A related difficulty can occur if you formulate an objective that has zero as its minimum. This can happen
when, for example, when you are trying to minimize the error between test results and your finite element
analysis using some type of least squares error function. It could be that the optimizer has no trouble in
reducing the error from 1000.0 to 0.01 but then bounces around between .01 and .005. The convergence TITLE = FOCUSED WEIGHT RESPONSE
DESOBJ = 100
.
.
.
BEGIN BULK
.
.
DRESP1 10ENTWGHT WEIGHT
DRESP2 100FWEIGHT 100
DRESP110
DEQATN 100FWEIGHT(ENTWGHT) = ENTWHGT - 998.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Defining the Constraints130
Main Index
tests of Figure 2-17 would regard this as a very large change and dictate that further design cycles be made. In
fact, this may be an insignificant difference and the extra design cycles are wasted. In this case, it would be
helpful to add a constant to the error function at a level that you feel is acceptable. For example, if you think
getting to within 0.01 with the error function is a good answer, adding 10.0 to this function will allow the
problem to terminate whenever the change in the error is less than .01 (this assumes that the default value of
CONV1=0.001 is being used). Alternatively, you could leave the error function unchanged but set the
CONV2 parameter to the 0.01 absolute change you regard as indicating a converged solution.
Defining the Constraints
To define constraints in MSC Nastran, you need to
Identify a first-level response (or group of responses) using a DRESP1 Bulk Data entry, write a
second-level response (or group of second-level responses) using a DRESP2 Bulk Data entry, or
develop a third-level response (or group of third-level responses) using your own application
program.
If the constraint is to be applied to a DRESP2 quantity that references DRESP1 and/or DRESP2
quantities from different subcases, the DRSPAN case control is required at the subcase level to
identify those responses that span subcases.&lt;br&gt;
Specify the response bounds using a DCONSTR entry.
Optionally collect the DCONSTR entries into a master set using the DCONADD entry.
Select DCONSTR and/or DCONADD entry sets in Case Control using either the DESGLB
command for “global” (e.g., non-subcase dependent) responses or the DESSUB command for
subcase-dependent responses.
In most cases, the constraints are associated with a particular analysis type and subcase, in which case the
DESSUB Case Control command is appropriate. In this regard, you should know that MSC Nastran does
not allow you to impose subcase dependent constraints that are on responses that are not consistent with the
ANALYSIS being performed in that subcase. For example, it is a User Fatal error if you attempt to constrain
a LAMA (buckling) response type in an ANALYSIS = STATICS subcase.
The DESGLB request is used in cases where the response is not associated with a subcase. The most obvious
example is if you want to constrain a WEIGHT or VOLUME response. If you constrain this response in
multiple subcases, you would get duplicate constraints that cause extra work for the optimizer. Instead, it is
recommended that you apply this constraint before any subcase using the DESGLB request. Another
example where the DESGLB request is appropriate is when you want to specify a relation among the design
variables. An example of this given in Equation (1-20) where an aspect ratio limit is imposed on the dimensions
of a beam. Since this response is not a function of the finite element analysis, the DESGLB command is used
to select this constraint.
The DCONADD Bulk Data entry allows you to collect constraints into an overall set that is selected using
the DESSUB or the DESGLB Case Control command. An example where this is useful is a static design task
that has multiple subcases. It is likely that the strength limits that are imposed on response types such as
STRESS, STRAIN, or CFAILURE are applicable in every subcase. At the same time there may be
displacement limits that are unique to each subcase. The availability of the DCONADD entry makes it&lt;/p&gt;
&lt;p&gt;131 Chapter 3: Developing the Design Model for Sensitivity and Optimization
Defining the Constraints
Main Index
possible to have a single set of DCONSTR entries for the strength limits. These entries are then combined
with the displacement limits using the DCONADD entry.
The DCONSTR entry bounds are used by MSC Nastran to create a pair of normalized constraints, one for
the lower bound and one for the upper bound, as discussed in The Design Model . The DCONSTR entry
contains an ID, which is invoked either directly by a DESGLB/DESSUB Case Control command or
indirectly through a DCONADD entry.
The DCONSTR entry is typically used to provide upper and lower bounds of the constraint, but there are
two special features that can be useful in frequency response optimization. The first is that integer IDs can
be used in the fields that specify the bounds. The presence of an integer indicates that the bound is specified
by a frequency dependent table. This enables specification of bound as a function of frequency. The second
feature is that the DCONSTR entry has optional inputs that specify the lowest and highest frequency for
which the constraint is to be applied.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Defining the Constraints132
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 4: Input Data
MSC Nastran Design Sensitivity and Optimization User’s Guide Design Sensitivity and Opti -
mization User’s Guide&lt;br&gt;
4 Input Data
Optimizers (Licensing)     134
File Management     135
Executive Control     136
Case Control Section     136
Bulk Data Entries     142
Parameters Unique to Design Sensitivity and Optimization     203
Design Responses     206
Optimization Parameters     227
External Response     237
User Interface for Setting Up External Response     240&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Optimizers (Licensing)134
Main Index
This chapter begins with a description of licensing options and then describes all Executive Control, File
Management, Case Control, Bulk Data, and Parameter requirements for design sensitivity and optimization.
These various input formats enable the following:
1.Specification of the applicable analysis discipline(s)
2.Definition of the design model
3.Overriding of the optimizer’s internal parameters
4.Control of the program flow and results output
Optimizers (Licensing)
MSC Nastran provides two optimization options:
1.Design Optimization - Enables both the MSCADS and IPOPT optimizer.
2.MultiOpt Optimization - Enables Multi_Model optimization.
The Design Sensitivity capability described in this guide does not require either option.
MSCADS is MSC&amp;rsquo;s version of the ADS (Automated Design Synthesis) code, a public domain FORTRAN
program developed by a predecessor of the Vanderplaats R&amp;amp;D, Inc under contract to NASA/Langley and the
US Navy.  IPOPT is an open source code from COIN-OR and maintained by IBM.
MSC Nastran selects the optimizer based on logic which estimates which one will provide the better
performance. There are two ways to override this default selection.  The first is by the OPTCOD parameter
(either MSCADS or IPOPT) which can be input on the DOPTPRM entry.  The second way is by specifying
an executive system parameter as shown in the system cell summary.
Table 4-1  System Cell Summary
System Cell
NumberSystem Cell
NameDescription and Default value
413 OPTCOD Specifies which optimization code is to be used in SOL 200
0 Optimizer is selected by the code to achieve the best performance
(default)
3 MSCADS
4 IPOPT
Note:   If one optimizer is selected with SYSTEM(413), and the other optimizer is selected with the
OPTCOD parameter on the DOPTPRM entry, the latter is selected.&lt;/p&gt;
&lt;p&gt;135 Chapter 4: Input Data
File Management
Main Index
File Management
Inputs are required in the File Management Section of the input file only in the special circumstances cited
in this section.
Shape Optimization
File Management Section statements are required in shape optimization for the direct input of shapes
method. This approach DBLOCATEs a set of displacement vector data from a database and uses this data to
generate a set of shape basis vectors for design optimization (see Relating Design Variables to Shape Changes ).
The following statements must be used:
The filename file.MASTER is the name of the database for the auxiliary model analysis.
The filename “file” is arbitrary. The UG, GEOM1, and GEOM2 data blocks must be DBLOCATEd and
renamed to UGD, GEOM1D, and GEOM2D, respectively. These new names cannot be changed since the
code looks for the data in these locations explicitly. See Shape Optimization of a Culvert  for an example using
this method.
User Defined Beam Libraries
MSC Nastran contains a beam library feature that allows you to input beam dimensions for an array of cross
section types, such as ROD, I and T . You can augment or replace MSC’s section types with your own sections
using an Application Programming Interface (API) option as outlined in Adding Your Own Beam Cross-
Section Library . The dimensions of these user defined cross sections can also be designed. The use of these
user defined beam sections is enabled by a CONNECT file management statement that identifies the
evaluator. The form of the CONNECT statement is:
CONNECT BEAMEVAL group evaluator
For example:
CONNECT BEAMEVAL MYBEAMS MYEVALS
where ‘group’ is the group name for the user supplied beam library and is called out on the PBARL or
PBEAML entry and must therefore be eight characters or less. ‘Evaluator’ is the evaluator connection file.
Each entry in the file uniquely associates the group name with the server program. You can have multiple
connect entries for multiple user defined beam libraries and also for the External Responses discussed next.
External Responses
As first discussed in The Design Model , the DRESP3 Bulk Data entry allows you to use an Application
Programming Interface (API) to compute external responses that beyond those available using the internal
DRESP1 and DRESP2 entries. The use of these user defined external responses is enabled by a CONNECT assign f1 = ’file.MASTER’
dblocate datablk=(ug/ugd,geom1/geom1d,geom2/geom2d), logical=f1&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Executive Control136
Main Index
in much the same fashion as for the user defined beam libraries just described. The form of the CONNECT
statement in this cases is:
CONNECT DRESP3 group evaluator&lt;br&gt;
For example:
CONNECT DRESP3 MYRESP MYEXT
where ‘group’ is the group name for the external response and is called out on the DRESP3 entry and must
therefore be eight characters or less. ‘Evaluator’ is the name of the server program and is currently uniquely
associated with the group name. You can have multiple connect entries for multiple external response libraries
and also for the user defined beam cross sections discussed above.
Executive Control
Solution 200
In design sensitivity and optimization, the only required Executive Control statement is the SOL statement:
SOL 200
This states that subDMAP DESOPT is to be invoked, which is the main subDMAP for design sensitivity
and optimization.
Case Control Section
The additions to the Case Control for design optimization are few and do not require any modification of
the Case Control commands already required for analysis.
Case Control commands for design sensitivity and optimization are associated with the following four tasks:
1.Analysis discipline definition
2.Design task definition
3.Design response characterization
4.Shape basis vector computation
This section discusses each of these tasks individually.
Analysis Discipline Definition
Design optimization in MSC Nastran is multidisciplinary: a number of different analyses may be performed
in Solution 200, and the results used simultaneously in optimization.
The analysis types are defined on a subcase basis using the ANALYSIS Case Control command. It can be set
to any of the following values in SOL 200:&lt;/p&gt;
&lt;p&gt;137 Chapter 4: Input Data
Case Control Section
Main Index
The following are a few Case Control issues to be aware of when using the ANALYSIS command.
1.If ANALYSIS is specified above the subcase level, all subsequent subcases utilize that analysis type
until ANALYSIS is redefined in a later subcase.
2.The buckling subcase defined by ANALYSIS = BUCK must also identify a STATICS subcase that
supplies the displacement that is used in the global buckling analysis. The STATIC subcase is selected
using the STATSUB Case Control command (STATSUB is only used with ANALYSIS = BUCK and
is not available for other analysis types).
3.Multiple boundary conditions may be used in Solution 200 for ANALYSIS = STATICS, MODES,
BUCKLING, DFREQ, MFREQ, SAERO and FLUTTER.
4.Only a single subcase is supported for ANALYSIS =DCEIG,MCEIG and MTRAN.
5.In general, any number of analysis types can be selected in a single run, but ANALYSIS=DFREQ and
MFREQ cannot both be used in the same run.
6.Table 2-5 indicates which disciplines support multiple subcases and boundary conditions.
Design Task Definition
The design model definition process in Case Control includes identification of the design objective function
and the design constraint sets.
Design Objective Identification
The design objective is identified in Case Control with the command:
where n is the set identification of a design response on either a DRESP1, DRESP2, or DRESP3 Bulk Data
entry. This response must be a single, scalar quantity.
A DESOBJ command appearing above the subcase level identifies a “global” response. Weight and volume
are typical examples of global responses. DESOBJ can also be used at the subcase level if the design goal is to
minimize or maximize a subcase-dependent response.STATICS
MODES
BUCKLING
DCEIG
DFREQ
MCEIG
MFREQ
MTRANS
SAERO
FLUTTERANALYSIS =
DESOBJ min
max n=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Case Control Section138
Main Index
A DESOBJ command is required in most cases, but there are certain situations where it is not needed:
1.If only sensitivity results are of interest, a DESOBJ command is not required.
2.If Fully Stressed Design is being used, there is not a requirement for a DESOBJ command. However,
it is recommended that the DESOBJ command be used and that it point to a WEIGHT response
type so that the weight response will be calculated and reported.
Design Constraint Identification
Design constraint sets are identified in Case Control by the following commands:
DESGLB = n
DESSUB = n
where n is the set identification number of a DCONSTR or a DCONADD Bulk Data entry.
DESGLB is used above the subcase level to define a subcase-independent constraint set. Weight and volume
are subcase-independent responses, as are DRESP2 responses that are not functions of DRESP1 responses
(e.g., DRESP2s that are functions of design variables, table constants, and grid coordinates only).
DESSUB defines subcase-dependent constraint sets at the subcase level. A DESSUB command remains in
effect until replaced with a new DESSUB in a subsequent subcase.
Subcase Spanning Responses
A special situation occurs when you wish to combine responses from multiple subcases. For example, you may
want to constrain the average displacement across multiple subcases. The constraint is on a global quantity
in this case, so that the DESGLB  command just discussed is used above the subcase level. It is also necessary
to identify the subcase responses that are to be included in the subcase spanning response. This is done with
a DRSPAN command:
DRSPAN = n
The n is the set identification of a previously appearing SET case control command.
The DRSPAN request occurs at the subcase level and must appear in every subcase that contains
DRESP1 /DRESP2  quantities that are to be used in the DRESP2 that spans subcases.
Design Variable Set Selection
The optional  DESVAR Case Control command selects a set of design variables defined by a SET command.
If the command is absent, all DESVAR Bulk Data entries will be utilized in the design task. A maximum of
one DESVAR Case Control command can appear and it must appear above the subcase level.
The basic purpose of the DESVAR command is to address the scenario where the design task started with
many design variables, but it is desired to focus on a subset. This could be done by editing the bulk data file Note:   If a DESOBJ request is needed for optimization and is not provided, the error is not detected
until optimization is attempted and therefore after an analysis and sensitivity analysis has been
performed. This can be an expensive error if these analyses consume significant resources.&lt;/p&gt;
&lt;p&gt;139 Chapter 4: Input Data
Case Control Section
Main Index
to remove the unwanted DESVAR entries, but this is a tedious process that is avoided using the DESVAR
case control command. It is still necessary to impose rules on what happens when these unneeded DESVAR’s
are referenced on other bulk data entries. These rules include:
If a DVxRELy (e.g., DVPREL2) or DLINK entry references DESVARs that are all included in the
set specified in case control, then that property is designed.
If a DVxRELy of DLINK entry references DESVARS that not included in the set specified in case
control, then that property is not designed
If a DVxRELy or DLINK entry references some DESVARs that are all included in the set specified
in case control and some that are not, a User Fatal Message is produced and the run is terminated.&lt;br&gt;
If a DRESP2 or DRESP3 references any DESVARs that are not included in the set specified in case
control, a User Fatal Message is produced and the run is terminated.
The DESVAR command is:
Format:
DESVAR = n
The n is the set identification of a previously appearing SET Case Control command.
Design Sensitivity Print
The meaning and importance of design sensitivity has been discussed at length in Design Sensitivity Analysis .
The design sensitivity data is quite useful in its own right and can be printed using the DSAPRT Case Control
command.
This command supports a number of options, the first of which indicates whether the output is to be
formatted. The formatting provides labeling information and is usually the preferred option. The data can
be exported to an external file using the EXPORT option. This enables the use of the sensitivity data in
another application. The frequency of the output is controlled by three parameters: START, BY, and END.
These parameters refer to the design cycle so that START indicates after which design cycle the print is to
begin, BY indicates how often it is to be printed between the START and END cycles and END identifies
the final cycle. The right-hand side of the command identifies the set of response IDs that are to be printed.
The default of ALL prints all the sensitivities.DSAPRTFORMATTED
UNFORMATTED
NOPRINTNOEXPORT
EXPORTSTARTi= BY y=END k=     
     
ALL
n
NONE=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Case Control Section140
Main Index
Mode Tracking
A normal modes subcase (ANALYSIS = MODES) can constrain the normal modes eigenvalues or frequencies
based on mode number. As the design changes, the order of the modes may change so that the physical nature
of the mode being constrained would change as well. As discussed in the Mode T racking paragraphs of
Multidisciplinary Analysis , MSC Nastran can be made to “track” the modes so that the constraint is being
applied to the same physical mode as the design changes. This is done using a MODTRAK Case Control
command:
MODETRAK = n
where n invokes the ID of a MODTRAK Bulk Data entry.
Residual Vectors
The RESVEC Case Control command is used to augment the modes created from a normal modes analysis
with additional shapes tailored to the modal analysis task at hand. The addition of these modes can greatly
improve the accuracy of the finite element analysis and occurs automatically if this command is not specified.
The RESVEC Case Control command can be used to control the creation of these additional modes and one
of the describers of this command is relevant here.
ADJLOD/NOADJLOD is an option on the RESVEC command that indicates whether adjoint loads should
be used to create residual vectors. These loads are derived from DRESP1 entries that invoke grid responses
in a frequency or transient response analysis. The ADJLOD option (the default) creates these residual vectors
and is recommended, while use of the NOADJLOD option is available to block the inclusion of adjoint loads
in residual vector computations.
Design Response Characterization
Strictly speaking, Case Control output requests are unnecessary in design sensitivity and optimization. In a
number of instances they can, however, be quite useful.
Solution 200 builds its own internal Case Control for data recovery based on the list of DRESP1 responses
identified in the design model. This provision ensures that all necessary data recovery is always performed for
design sensitivity and optimization. However, if you want to view MSC Nastran results, Case Control output
requests are necessary. The frequency of this output with respect to design cycle number is controlled by the
Bulk Data parameter NASPRT.
Case Control output commands are sometimes used to resolve design response ambiguities. For example,
element plate stresses can be output using either von Mises or maximum shear. (The ambiguity arises since
both share the same item code ID referenced on the DRESP1 entry.) The form identified in Case Control is
also used for design sensitivity and optimization. For example,Note:   A response sensitivity is available for printing only if the response has been constrained and then
only if the constraint has survived the screening process described in Constraint Screening . The
DSCREEN Bulk Data entry described in Bulk Data Entries  provides a way of forcing the
retention of responses that are of interest.&lt;/p&gt;
&lt;p&gt;141 Chapter 4: Input Data
Case Control Section
Main Index
If left unspecified, the defaults will be used (which in this case, is the von Mises representation).
A similar convention applies to the location and type of stress responses that are used as design responses for
plate elements. The element responses have options [ CENTER, CUBIC, SGAGE, (CORNER or BILIN) ].
A DRESP1 which references a plate element will have responses that are driven by what has been specified in
case control. This is particularly important when selecting corner versus element center responses since the
item codes are dependent on which option is selected.
Dynamic responses can be computed using either a real/imaginary or a magnitude/phase form. Here again,
Case Control can be used to define the output representation. For example,
Shape Basis Vector Computation
Additions to Case Control for shape optimization are only necessary when using the Analytic Boundary
Shapes method.
Relating Design Variables to Shape Changes  shows that the Analytic Boundary Shapes approach uses
additional Bulk Data Sections to describe the auxiliary boundary models. Each of these additional sections
must have a corresponding Case Control.
Each of the Auxiliary Boundary model Case Control Sections are identified by the delimiter
AUXCASE
The auxiliary boundary model Case Control Sections must follow the Case Control Section for the primary
model.
Within the auxiliary boundary model Case Control Section, individual auxiliary models are identified using
AUXMODEL = n
where n is the auxiliary boundary model ID, referenced in the corresponding BEGIN BULK =n Bulk Data
Section delimiter. An example using AUXCASE and AUXMODEL is shown in Relating Design Variables to
Shape Changes .STRESS (VONMISES) = 15 (von Mises stresses used for analysis and optimization)
STRESS (SHEAR) = 15 (maximum shear stresses used for analysis and optimization)
Note:   The SET number (15 in the example above) has no effect on which responses are used in the
design.
STRESS(IMAG) = ALL (real/imaginary form for analysis and optimization)
STRESS(PHASE) = ALL (magnitude/phase form for analysis and optimization)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries142
Main Index
Generation of a New Bulk Data File
The ECHO Case Control command has an option that is applicable only in design optimization:
ECHO = PUNCH(NEWBULK)
It is available to provide an unsorted Bulk Data file following a design optimization task that has updated
entries replacing the original entries. For example, the input XINIT value on a DESVAR entry is replaced by
the final value for this design variable from the design task. Similarly, new thicknesses that are produced will
be placed on the updated PSHELL entry. This file is contained in the output .pch file that is produced by
MSC Nastran. A complete description of the ECHO Case Control command is available in ECHO in the MSC
Nastran Quick Reference Guide . Additional information on the output produced by the NEWBULK option
can be found in Special Punch Considerations for T opology Optimization . An innovative use of the
NEWBULK parameters is to use it in conjunction with PARAM OPEXIT 1 through 3 to get a new bulk
data deck that reflects the changes introduced by the design model.
Bulk Data Entries
The design model is defined in the Bulk Data Section. This definition includes the design variables, the
design variable-to-property relations, shape basis vectors, design constraints, and so on. This section contains
a brief listing and description of all the Bulk Data entries related to design sensitivity and optimization. This
information is the alphabetical order of the entry name and has been extracted from the complete listings in
the The Bulk Data Section  in the MSC Nastran Quick Reference Guide . For each entry in this section, related
entries have also been listed with appropriately shaded fields to help clarify the interrelations among the
various entries.
BEADVAR
Topography Design Variable
Purpose:
Defines design region for topography (bead or stamp) optimization.
Entry Description:
Example using NORM:1 2 3 4 5 6 7 8 9 10
BEADVAR ID PTYPE PID MW MH ANG BF SKIP
&amp;ldquo;DESVAR &amp;ldquo;NORM/XD YD ZD CID XLB XUB DELXV
&amp;ldquo;GRID &amp;ldquo;NGSET DGSET
BEADVAR IO PSHELL 101 10.0 20.0 70&lt;/p&gt;
&lt;p&gt;143 Chapter 4: Input Data
Bulk Data Entries
Main Index
Example using &amp;ldquo;DESVAR&amp;rdquo; and &amp;ldquo;GRID&amp;rdquo;:
BEADVAR 10 PPSHLL 101 10.0 20.0 70.0 NONE
DESVAR 2.0 3.0 4.0 -1.0 1.0
GRID 100
Field Contents
ID Unique topography design region identification number. (Integer &amp;gt; 0)
PTYPE Property entry type. Used with PID to identify the element nodes to be designed.
(Character: &amp;ldquo;PSHELL&amp;rdquo;, &amp;ldquo;PSHEAR&amp;rdquo;, &amp;ldquo;PCOMP&amp;rdquo;, or &amp;ldquo;PCOMPG&amp;rdquo;.)
PID Property entry identifier. See Remark 1. (Integer &amp;gt; 0)
MW Minimum bead width. This parameter controls the width of the beads. The recommended
value is between 1.5 and 2.5 times the average element width. See Remark 2. (Real &amp;gt; 0.0)
MH Maximum bead height (Real &amp;gt; 0.0). This parameter sets the maximum height of the beads
when XUB=1 .0 (as Default). See Remark 2.
ANG Draw angle in degrees (0.0 &amp;lt; Real &amp;lt; 90.0). This parameter controls the angle of the sides
of the beads. The recommended value is between 60 and 75 degrees.
BF Buffer zone (&amp;lsquo;yes&amp;rsquo; or &amp;rsquo;no&amp;rsquo;; Default=&amp;lsquo;yes&amp;rsquo;). This parameter creates a buffer zone between
elements in the topography design region and elements outside the design region when
BF=&amp;lsquo;yes&amp;rsquo;. See Remark 3.
SKIP Boundary skip ( “bc”,  “load”,  “both”, or “none”;  Default = “both”). This parameter
indicates which element nodes are excluded from the design region. “bc” i ndicates all nodes
referenced by “SPC” and “SPC1” are omitted from the design region. “load” i ndicates all
nodes referenced by “FORCE”,  “FORCE1”,  “FORCE2”,  “MOMENT”,  “MOMENT1”,&lt;br&gt;
“MOMENT2”, and “SPCD” are omitted from the design region. “both” indicates nodes
with either “bc” o r “load” are omitted from the design region. “none” i ndicates all nodes
associated with elements referencing PID specified in field 4 are in the design region.
“DES VAR” Indicates that this line defines bead design variables that are automatically generated.
NORM/XD,
YD, ZDBead vector (draw direction). Norm indicates the shape variables are created in the normal
directions to the elements. If XD, YD, and ZD are provided, the shape variables are created
in the direction specified by the xyz vector defied by XD/YD/ZD that is given in the basic
coordinate system or CID. See Remark 4.
(Character or Real, Default = blank = norm).
CID Coordinate system ID used for specifying draw direction (Blank or Integer &amp;gt; 0; Default =
blank = basic coordinate system)
XLB Lower bound. (Real &amp;lt; XUB or blank; Default = blank=0.0). This ensures the lower bound
on grid movement equal to XLB&lt;em&gt;MH. See Remark 5.
XUB Upper bound. (Real &amp;gt; XLB or blank; Default = 1.0). This sets the upper bound of the beads
equal to XUB&lt;/em&gt;MH. See Remark 5.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries144
Main Index
Discussion:
1.Multiple BEADVAR&amp;rsquo;s are allowed in a single file. Combined topometry, topology, topography,
sizing, and shape optimization is supported in a single file.
The user can provide allowable bead dimensions.
Figure 4-1  Bead Dimensions
It is recommended to set buffer zone = yes to maintain a good quality of mesh during topography
optimization.DELXV Fractional change allowed for the design variable during approximate optimization. See
Remark 3. (Real &amp;gt; 0.0; Default = 0.2)
“GRID” &amp;ldquo;Indicates this line defines what element nodes can be added and/or removed from
topography design regions.
NGSET All grids listed on a Bulk Data entry SET1 = NGSET are removed from topography design
regions.
DGSET All grids listed on a Bulk Data entry SET1 = DGSET are added to topography design
regions.Field Contents
MW
MH
ANG
Bead Dimensions
Design elements
Buffer zone
Nondesign elementsNo buffer zone
Nondesign elements&lt;/p&gt;
&lt;p&gt;145 Chapter 4: Input Data
Bulk Data Entries
Main Index
The grids move in the normal direction. All element grids referenced by one BEADVAR entry must
follow the right hand rule.
To force the grids to move only in the positive bead vector direction (one side of the surface), use XLB
= 0.0. To force the grids to move only in the negative bead vector direction (another side of the
surface), use XUB = 0.0. To allow girds to move in both positive and negative bead vector directions,
use XLB &amp;lt; 0.0 and XUB &amp;gt; 0.0. For example,Element NormalElement normal vectors
Baseline surfaceOptimized
surface
User defined draw vector
Baseline surfaceOptimized
surface
User’s Provided Draw Direction&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries146
Main Index
The jobname.h5 file (created by specifying MDLPRM,HDF5,0 in the bulk data input) has topology
optimization results (shape changes) that can be viewed in Patran. T he text file jobname.pch also has
updated grid coordinates that can be copied to the original file, replace the original grids, and
imported to Patran and other post- processors to view topography optimization results.
BNDGRID
Purpose:
Specifies a list of grid point identification numbers on design boundaries or surfaces for shape optimization.
Entry Description:
Discussion:
Relating Design Variables to Shape Changes  identifies four alternative methods for defining shape basis
vectors and two of these methods: Geometric Boundary Shapes and Analytic Boundary Shapes entail first
defining the shape basis vector on the boundary. This, in turn, requires the definition of which degrees-of-
freedom appear on the boundary. The BNDGRID entry performs this task by selecting a component set and
then identifying the associated grid points. Analytic Boundary Shape  provides an example that applies the
Analytic Boundary Shapes Method and makes use of the BNDGRID entry.BNDGRID C GP1 GP2 GP3 GP4 GP5 GP6 GP7
GP8 -etc.-
Field Contents
C Component number (any unique combination of integers 1 through 6 with no
embedded blanks).
GPi Shape boundary grid pint identification number.Bead VectorBead Vector
Optimized SurfaceBase Surface
(a) XLB = 0.0 and XUB = 1.0 (b) XLB = -1.0 and XUB = 0.0 (c) XLB = -1.0 and XUB = 1.0Optimized Surface&lt;/p&gt;
&lt;p&gt;147 Chapter 4: Input Data
Bulk Data Entries
Main Index
DCONADD
Purpose:
Defines design constraints set as a union of DCONSTR entry sets.
Entry Description:
Associated Entries:
Discussion:
Constraints must be selected in Case Control. The DCONADD entry allows a number of DCONSTR entry
sets to be unified into a single set, making their selection in Case Control easier.
DCONSTR
Purpose:
Places limits on a design response. When selected in Case Control by either DESGLB or DESSUB, the
DCONSTR sets define the design constraints.
Entry Description:Note:   Grid coordinates that appear on the BNDGRID entry but that are not affected by the
displacement from the auxiliary model are assumed to not change their location during the
shape optimization task.
DCONADD DCID DC1 DC2 DC3 etc.
Field Contents
DCID Design constraint set identification number. (Integer &amp;gt; 0)
DCi DCONSTR entry identification number. (Integer &amp;gt; 0)
DCONSTR DCID RID LALLOW UALLOW LOWFQ HIGHFQ
DCONSTR DCID RID LALLOW/
LIDUALLOW/
UIDLOWFQ HIGHFQ
Field Contents
DCID Design constraint set identification number. (Integer &amp;gt; 0)
RID DRESPi entry identification number. (Integer &amp;gt; 0)
LALLOW Lower bound on the response quantity. (Real, Default =-1.0E20)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries148
Main Index
Associated Entries:
The IDs on DRESP1, DRESP2 and DRESP3 are the RIDs called out on the DCONSTR entry.
The DCONADD entry can be used to form the union of a number of DCONSTR sets.
Discussion:
To constrain a given response quantity, a DCONSTR (Design CONSTRaint) entry is used. This entry, in
turn, points to a specific response ID identified on a DRESP1, DRESP2 or DRESP3 Bulk Data entry. Note
that the DCONSTR entry serves only to place bounds on a response defined elsewhere in the design model
data. These bounds are used to construct normalized constraints for use by the optimizer as discussed in
Defining the Constraints . LOWFQ and HIGHFQ fields are functional only for frequency response
RTYPE’s, including  DYSTIFF or those with a &amp;lsquo;AC&amp;rsquo;, &amp;lsquo;AF&amp;rsquo;, &amp;lsquo;FR&amp;rsquo; or &amp;lsquo;PS&amp;rsquo; prefix. (FREQ is not a frequency
response). The LOWFQ and HIGHFQ fields are also functional when they are applied to a DRESP2 or
DRESP3 that inherit the frequency values from these RTYPES. The bounds provided in LALLOW and LID Set identification of a TABLEDi entry that supplies the lower bound as a function of
frequency.
UALLOW Upper bound on the response quantity. (Real, Default =1.0E20)
UID Set identification of a TABLEDi entry that supplies the upper bound as a function of
frequency.
LOWFQ Low end of frequency range in Hertz. (Real &amp;gt;0.0, Default =0.0)
HIGHFQ High end of frequency range in Hertz. (Real &amp;gt;LOWFQ, Default =1.0E+20)
DRESP1 ID LABEL RTYPE PTYPE REGION ATTA ATTB ATT1
ATT2 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1&amp;rdquo; NR1 NR2 -etc.-
‘DRESP2” NRR1 NRR2&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-
“DRESP2” NRR1 NRR2&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DCONADD DCID DC1 DC2 DC3 -etc.-&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P9</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide/msc_nastran_2024.1_design_sensitivity_and_optimization_user_guide_009/</guid>
      <description>
        
        
        &lt;p&gt;149 Chapter 4: Input Data
Bulk Data Entries
Main Index
UALLOW are applicable to a response only when the value of the forcing frequency of the response falls
between LOWFQ and HIGHFQ. The behavior varies depending on the value of ATTB on the DRESP1
entry.
a.If the field is blank, the LOWFQ/HIGHFQ fields are honored. If the DCONSTR with
LOWFQ/HIGHFQ refers to a DRESP2 that invokes a DRESP1 with ATTB blank, the fields are
not honored.
b.If the field is a character, the LOWFQ/HIGHFQ fields are honored.
c.If the field is a real number, the LOWFQ/HIGHFQ fields are honored even when the
DCONSTR refers to a DRESP2 that references the DRESP1.
The upper and lower bounds can be specified in one of two ways. If real numbers are used in the bound field,
these are the bounds. If integers are used, these point to TABLEDi entries that enable the input of these
bounds as a function of frequency.
DCONSTR entry sets (or the DCONADD union of these sets) must be selected in the Case Control Section
to complete the constraint definition process. The Case Control command DESGLB is used to identify
subcase-independent constraints (global constraints), while the DESSUB Case Control command is used to
select subcase-dependent constraint sets.
There are two guidelines for the user of the DCONSTR entry that can be noted here. The first is that it is
recommended that zero (and near zero) values be avoided when specifying LALLOW and UALLOW. There
are two reasons for this. The first is that this causes problem in the normalization as explained in Design
Constraints . If the constraint limit really is zero (for example it is desired to restrict the flutter damping to be
less than zero), it is recommended that the response be recast using a DRESP2 entry to offset the response by
some amount. For example, if a value of 1.0 is added to the flutter damping response, it will now be possible
to place an upper bound of 1.0 on the DRESP2 response. The second difficulty with a zero response is that
it can lead to unintended consequences in terms of constraint screening. Suppose the response is the von
Mises stress and it is desired that these stresses never exceed 30KSI. The UALLOW value is then 30000.0 but
it may seem natural to set LALLOW to 0.0. The unintended consequence of this is that this may create a
critical constraint when the element is essentially unstressed. The optimizer will try and satisfy this constraint
with unpredictable results. In this case, it is recommended that the LALLOW field be left blank so that the
default value of -1.0E20 will be used and this will never be a critical constraint.
The second guideline is that is recommended that “equality” constraints allow some tolerance as also
discussed in Design Constraints . For example, if you are trying to redesign the structure so that the first
normal mode is exactly 6.0 Hz., you should specify limits of LALLOW = 5.9 Hz. and UALLOW = 6.1 Hz.
so that the optimizer has a chance to satisfy both limits simultaneously. If the limits were both set to 6.0, one
or the other constraint would always be violated.
DDVAL
Purpose:
In a discrete optimization task, provide a list of discrete values that a design variable can assume.&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries150
Main Index
Entry Description:
Associated Entries:
The ID on the DDVAL entry is called out the DDVAL field on the DESVAR entry:
Discussion:
The Discrete Variable Optimization capability discussed in Special T opics  enables the designation of design
variable values from a discrete set of values. This selection is based on the conventional continuous
optimization that is the main topic of this User’s Guide and provides a means of performing optimization
when the application requires the design variable take on a discrete value (perhaps from available sheet metal
thickness or, in a composite design, an integer number of plies).
The DDVAL entry provides the allowable set of discrete values and is invoked by one or more design
variables. The real numbers can be input in arbitrary order and the THRU and BY features provide
convenient way of specifying a series of numbers.
If a DESVAR entry does not have a value in the DDVAL field, the design variable is allowed to vary
continuously in a discrete variable optimization task.
If the range of discrete values for a DESVAR entry do not extend out to the XLB and XUB range specified
on the DESVAR entry, the XLB and XUB values are adjusted to extend only over the discrete values.
Similarly, a discrete value that is outside the user specified XLB/XUB range will never be selected by the
discrete optimization algorithm.
DEQATN
Purpose:
Defines equations for use in synthetic relations. These equations can be used to define either second-level
responses or second-level design variable-to-property relations.
Entry Description:DDVAL ID DDVAL1 DDVAL2 DDVAL3 DDVAL4 DDVAL5 DDVAL6 DDVAL7
DDVAL8 -etc.-
Field Contents
ID Unique discrete value set identification number. (Integer &amp;gt; 0)
DDVALi Discrete values. (Real)
DESVAR ID LABEL XINIT XLB XUB DELXV DDVAL
DEQATN EQID EQUATION
EQUATION (Cont.)&lt;/p&gt;
&lt;p&gt;151 Chapter 4: Input Data
Bulk Data Entries
Main Index
Associated Entries:
The equation ID may be referenced in connection with a second-level response on a DRESP2 entry or in the
definition of a synthetic property relation on a DVPREL2 entry.
Discussion:
A powerful feature of MSC  Nastran design sensitivity and optimization is that it allows you to create new
response quantities and nonlinear design variable-to-property relations. This is accomplished by defining
equations much like the function definition procedure of many programming languages.
The DEQATN entry is used to specify a single equation or a set of nested equations. The syntax of the
expressions follows the FORTRAN language standard except that all arguments are assumed to be real
numbers (no integers). Intrinsic functions, such as SIN or MAX, may be used.
The equation input arguments are formal arguments that are defined at runtime. The DRESP2 entry for
responses and the DVCREL2, DVMREL2, DVPREL2 entries for design variable-to-property relations
specify the input, or actual, arguments to the appropriate DEQATN entry. A nested form of equation
definition may be used. Multiple equations can be specified on a single DEQATN entry with the input to
the latter equations based on the results of the previous equations. The return value of the function call is the
last equation in the DEQATN entry.
The power and versatility of the DEQATN, particularly when used with the DRESP2 entry, has given rise
to a number of special requests for this entry to extend the ease-of-use of the DEQATN. The features that
have been provided in response to these requests are explicitly pointed out here because they have primary
applicability in design sensitivity and optimization.
Special Functions
The majority of the intrinsic functions used in the DEQATN are those that are available in a programming
language such as FORTRAN; e.g., ABS for absolute value and TAN for tangent. However, there are eight Field Contents
EQID Unique equation identification number. (Integer &amp;gt; 0)
EQUATION Equation(s). (Character)
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1&amp;quot; NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DRESP2 NRR1 NRR2
DVPREL2 ID TYPE PID FNAME PMIN PMAX EQID
“DESVAR” DVID1 DVID2 DVID3 -etc.-
“DTABLE” LABL1 LABL2 LABL3 -etc.-&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries152
Main Index
functions as shown in Table 4-2 that have been provided, primarily, to give support in dynamic response design
and are applicable for any relevant analysis. The SUM,RSS, SSQ and AVG functions provide a shorthand
operation for operating on a series of arguments. (Refer to the DRESP2 entry for an alternative means of
performing these operation and to the ATTB field of the DRESP1 entry for the frequency response RTYPEs
for another simplified way of inputting these operations in special cases.) The use of these operators on the
DEQATN is not limited to responses so that you could use the AVG function to find, for example, the
average of a set of design variables). The DB,DBA, INVB and INVDBA provide a simplified way of dealing
with acoustic responses.
Table 4-2  Special DEQATN Functions
Format Description Mathematical Expression
AVG  (X1,X2,&amp;hellip;,Xn) average
DB(P , PREF) sound pressure in
decibel
DBA(P , PREF , F) sound pressure in
decibel (perceived)
INVDB(DB, PREF) inverse Db
INVDBA(DBA, PREF , F) inverse Dba
RSS (X1,X2,&amp;hellip;,Sn) square root of sum
of squares
SSQ (X1,X2,&amp;hellip;,Sn) sum of squares
SUM (X1,X2,&amp;hellip;,Sn) summation1
n&amp;mdash; Xi
i1=n

20.0logP
PREF&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
20.0logP
PREF&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 10.0+ logTa1  
10.0 Ta2 log +
10DB
20.0&amp;mdash;&amp;mdash;&amp;mdash;-logPREF +  
10DBA10.0– logTa1 10.0– logTa2
20.0&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  
Xi2
i1=n

Xi2
i1=n

Xi
i1=n
&lt;/p&gt;
&lt;p&gt;153 Chapter 4: Input Data
Bulk Data Entries
Main Index
Implied Forcing Frequency Argument
Frequency input to synthetic relations can be supplied in an implicit format that is activated by:
1.Frequency response-type ( “FR” o r “PSD”) arguments for the DRESP1 IDs invoked by a DRESP2.
2.A DEQATN entry whose input argument list exceeds the number of arguments defined on the
referencing DRESP2 entry.
The situation is perhaps most easily described by way of an example. Assume a simple average is to be
computed based on frequency response-computed displacements that are “normalized” b y their respective
forcing frequencies. We can then write:
Normally, the number of input arguments and values specified on the DEQATN/DRESP2 entries must
match. The rules, however, are relaxed when frequency response quantities (i.e., those preceded by “FR”)  are
encountered as input to the equation. In such cases, additional arguments can be defined via implicit (X1,X2,&amp;hellip;,Sn, P) = structure responses or acoustic pressure
PREF = reference pressure
F = forcing frequency
DB = acoustic pressure in Decibel
DBA = perceived acoustic pressure in Decibel
Ta1 =
Ta2 =
K1 = 2.242882e+16
K3 = 1.562339
P1 = 20.598997
P2 = 107.65265
P3 = 737.86223
P4 = 12194.22
$RESP1, ID, LABEL, RTYPE, PTYPE, REGION, ATTA, ATTB, ATT1, +
$, ATT2, &amp;hellip;
dresp1, 10, fdisp1, frdisp, , , 1, 10., 1001
dresp1, 20, fdisp2, frdisp, , , 1, 20., 1001
$RESP2, ID, LABEL, EQID, REGION, , , , , +
$, DRESP1, NR1, NR2, &amp;hellip;, , , , , +
dresp2, 30, avgfd, 100, , , , , , +
+, dresp1, 10, 20
deqatn 100 avg(d1,d2,f1,f2) = (d1/f1 + d2/f2)*0.5K3F4
F2P22+ F2P32+ &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
K1F4
F2P12+ 2F2P42+ 2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries154
Main Index
reference to the list of frequency values appearing on the DRESP1 entries, in the encountered order. In the
above example, f1 and f2 are 10. hertz and 20. hertz, respectively.
The above capability is particularly useful in the case of frequency definitions via the FREQ3, FREQ4, and
FREQ5 entries. Again, a simple example explains this feature. The presence of FREQ3, FREQ4, or FREQ5
entries is assumed in the following example:
A DRESP1/DRESP2 pair of responses will be generated for every forcing frequency, the value of which is
generally unknown at the outset. Note that the third input to the equation, F , is in excess of the number of
arguments defined in the DRESP2 relation. Because a frequency response displacement is referenced, the
code will automatically assign its value to be the corresponding forcing frequency.
DESVAR
Purpose:
Defines the design variables to be used in design sensitivity and optimization. Design sensitivity analysis
computes the rates of change of design responses with respect to changes in the design variables. In design
optimization, the set of design variables are the quantities modified by the optimizer in the search for an
improved design.
The optional DESVAR Case Control command can be used to specify the set of DESVAR Bulk Data entries
that are to be used in the design task. If the DESVAR Case Control command is absent, all DESVAR Bulk
Data entries will be used.
Entry Description:DRESP1,10,FRGD,FRDISP,,,1,,21
DRESP2,101,DBA,201,
,DTABLE,PREF,,,,,,,
,DRESP1,10
DTABLE,PREF,1.0
DEQATN 201 X(PREF,P,F)=DBA(P,PREF,F)
DESVAR ID LABEL XINIT XLB XUB DELXV DDVAL
Field Contents
ID Unique design variable identification number. (Integer &amp;gt; 0)
LABEL User-supplied name for printing purposes. (Character)
XINIT Initial value. (Real, XLB &amp;lt; XINIT &amp;lt; XUB)&lt;/p&gt;
&lt;p&gt;155 Chapter 4: Input Data
Bulk Data Entries
Main Index
Associated Entries:
Design variables may be related to properties on DVPREL1, DVCREL1, DVMREL1, DVLREL1 or
DVPREL2, DVCREL2, DVMREL2 entries, related to changes in shape using DVBSHAP , DVGRID, or
DVSHAP entries, linked using DLINK entries or input to user-defined responses on the DRESP2 entry and
external responses using the DRESP3 entry. The DVCRELi and DVMCRELi entries are not shown here
because of their close similarity with the DVPRELi entries.XLB Lower bound. (Real, default = -1.0E+20)
XUB Upper bound. (Real, default = +1.0E+20)
DELXV
DDVALMove limit for the design variable during approximate optimization.
(Real &amp;gt; 0.0)
ID of a DDVAL entry that provides a set of allowable discrete values. (Blank or
integer &amp;gt;0, Default =blank for continuous design variables.)
DVPREL1 ID TYPE PID PMIN PMAX C0
DVID1 COEF1 DVID2 COEF2 DVID3 -etc.-
DVPREL2 ID TYPE PID PMIN PMAX EQID
“DESVAR” DVID1 DVID2 DVID3 -etc.-
“DTABLE” LABL1 LABL2 LABL3 -etc.-
DVBSHAP DVID AUXMOD COL1 SF1 COL2 SF2 COL3 SF3
DVGRID DVID GID CID COEFF N1 N2 N3
DVSHAP DVID COL1 SF1 COL2 SF2 COL3 SF3
DLINK ID DDVID C0 CMULT IDV1 C1 IDV2 C2
IDV3 C3 -etc.-
DRESP2 ID LABEL EQID REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1&amp;quot; NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DRESP3 ID LABEL GROPU TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;-Field Contents&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries156
Main Index
Discussion:
In design optimization, structural properties are changed in order to determine the optimal value of the
objective function. To accomplish this, the optimizer varies the design variables. Not only must design
variables be defined, but they also must be functionally related to analysis model properties and/or changes
in structural shapes. Design variables can also be used as design parameters that are unrelated to the structural
properties. In this case, they are invoked by DRESP2 or DRESP3 entries. The DESVAR entry is used to
define an individual design variable.
The DELXV attribute is used to specify the amount a design variable can change during one optimization
cycle. This relates to the The Approximate Model  and should be used when it appears that the results from
the approximate analysis are not closely matched by the subsequent exact analysis. DELXV was provided
primarily for shape optimization tasks but is applicable in any context.
The DDVAL field enables the Discrete Variable Optimization capability of Special Topics .
Design variables may be defined as members of independent and dependent sets using DLINK Bulk Data
entries, if desired.
DLINK
Purpose:
Imposes a linear relationship among the design variables. The set of all DLINK entries partitions the design
variables into an independent set and a dependent set.
Entry Description:
Associated Entries:
Design variables are identified in DLINK relations by their IDs (both independent and dependent variables).“DRESP1” NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;USRDATA GEOMETRY DATA FILE
DLINK ID DDVID CO CMUL T IDV1 C1 IDV2 C2
IDV3 C3 -etc.-
Field Contents
ID Unique entry identifier. (Integer &amp;gt; 0)
DDVID Dependent design variable identification number. (Integer &amp;gt; 0)
C0 Constant term. (Real, default = 0.0)
CMUL T Constant multiplier. (Real, default = 1.0)
IDVi Independent design variable identification number. (Integer &amp;gt; 0)
Ci Coefficient i (corresponding to IDVi). (Real)&lt;/p&gt;
&lt;p&gt;157 Chapter 4: Input Data
Bulk Data Entries
Main Index
Discussion:
A DLINK entry specifies a design variable relationship of the form:
Design variable linking can be used, for example, to ensure structural symmetry or unify sizing changes across
property groups. In this way, you can perform “what-if” studies to see how different modeling assumptions
affect the derived design. The efficiency of the design process is usually improved if the number of
independent design variables can be kept to a minimum. Placing a design variable in the dependent set using
a DLINK entry removes it from the independent set.
DOPTPRM
Purpose:
Overrides default values of parameters used in design optimization.
Entry Description:
Associated Entries:
NoneDESVAR ID LABEL XINIT XLB XUB DELXV DDVAL
xD =dependent design variable
c0 =constant
ci=constant multiplying coefficient
xi=independent design variables
DOPTPRM PARAM1 VAL1 PARAM2 VAL2 PARAM3 VAL3 PARAM4 VAL4
PARAM5 VAL5 -etc.-
Field Contents
PARAMi Name of the design optimization parameter. For allowable names, see the
DOPTPRM listing in The Bulk Data Section  in the MSC N astran Quick Reference
Guide . (Character)
VALi Value of the parameter. (Real or Integer; see the DOPTPRM listing in The Bulk
Data Section  in the MSC Nastran Quick Reference Guide .)xDco= cixi
i+&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries158
Main Index
Discussion:
There are numerous parameters that control various aspects of the optimization process itself. While all of
these parameters have defaults (the DOPTPRM entry is optional), the defaults may be changed using the
DOPTPRM entry. An overview of selected  parameters, grouped according to their functionality is presented
in Optimization Parameters .
DRESP1
Purpose:
Defines direct, or first-level, analysis responses to be used in design sensitivity and optimization. The
responses identified here are those which are directly available from the analysis results as opposed to second-
level responses which are defined using DRESP2 and DEQATN entries or third-level responses which are
defined using DRESP3 and an external response evaluator.
Entry Description:
Associated Entries:
A response identified on a DRESP1 entry may be used either as a constraint or an objective. For constraints,
the response is identified by its ID number on DCONSTR entries.
For the objective, a first-level response must define a single, scalar response (e.g., weight, an eigenvalue, a grid
displacement component for a single subcase, and so on). The objective is defined in Case Control with the
commandDRESP1 ID LABEL RTYPE PTYPE REGION ATTA ATTB ATT1
ATT2 -etc.-
Field Contents
ID Unique entry identifier. (Integer &amp;gt; 0)
LABEL User-defined label. (Character)
RTYPE Response type. See the DRESP1 listing in The Bulk Data Section  in the MSC Nastran
Quick Reference Guide . (Character)
PTYPE Element flag (PTYPE = “ELEM”) or property entry name. Used with element type
responses (stress, strain, force, etc.) to identify the property type, since property entry
IDs are not unique across property types. (Character: “ELEM”, “PBAR”, “PSHELL”,
etc.)
REGION Region identifier for constraint screening. (Integer &amp;gt; 0)
ATTA, ATTB,
ATTiResponse attributes.
DCONSTR DCID RID LALLOW UALLOW&lt;/p&gt;
&lt;p&gt;159 Chapter 4: Input Data
Bulk Data Entries
Main Index
where  n is the DRESP1 entry ID. (Note that the n could optionally point to a DRESP2 or DRESP3 ID.)
A DRESP1 response can also be used as input to synthetic responses defined on DRESP2 entries or by an
external response on a DRESP3. It is referenced by its response ID.
If a DRESP1 or DRESP2 is to be used on a DRESP2 or DRESP3 that combines responses from two or more
subcases, the DRSPAN Case Control command is required at the subcase level to indicate this:
DRSPAN = n
where n is a previously appearing Set command that lists the DRESP1 IDs.
Discussion:
Depending on the particular analysis discipline, responses such as displacements, stresses, eigenvalues, etc.,
will be computed. The DRESP1 entry is used to identify responses that are to be used in connection with
design sensitivity and optimization either as an objective or as a constraint. These responses may also be used
as input to compute a second-level, or synthetic, response on a DRESP2 entry or passed to a third-level, or
external, response on a DRESP3 entry for application in a user defined response.
An internal Case Control for design sensitivity and optimization is built using the set of first-level responses.
Selecting design responses using DRESP1 entries also ensures that the appropriate data recovery is performed,
regardless of Case Control requests the user may have supplied. Output requests, if desired, still must be
specified with the appropriate Case Control commands; however, this is for postprocessing convenience only
and is not a requirement for either design sensitivity or optimization. An exception are special cases previously
discussed in Design Response Characterization.
Every DRESP1 entry has a unique ID, a user defined label and a response type. The response type identifies
what type of response quantities is of interest. Table 4-3 identifies each of the 40 unique response types,
indicates which ANALYSIS discipline (as defined on the ANALYSIS case control command) they are
applicable for, the approximation method (direct or inverse) that is used when APRCOD=2 and the default
REGION. If a response type is inconsistent with the ANALYSIS command as given in the table for a
particular subcase, it is a User Fatal Error and the run is terminated. DRESP2 ID LABEL EQID REGION&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DTABLE” LABL1 LABL2 -etc.-
“DRESP1&amp;quot; NR1 NR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-
“DRESP1&amp;quot; NR1 NR2 -etc.-DESOBJmin
maxn=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries160
Main Index
The REGION attribute on this entry is used in the constraint screening process discussed in Constraint
Screening . If this field is left blank, the defaults of Table 4-3 apply. The N/A designations in this table refer to
scalar responses where the concept of default REGION is not applicable. If a REGION is set, all responses
that share the REGION ID and have the same response type will be grouped together during the screening
process.
The fact that this single entry supports so many different response types makes this entry rather complex. A
complete discussion explaining each of the response types in turn is given in Design Responses .
Table 4-3  Response Type Options on the DRESP1 Entry
Response Types Associated ANALYSIS TypeApproximation
Technique Default Region
WEIGHT Any or None Direct N/A
VOLUME Any or None Direct N/A
EIGN MODES Rayleigh Quotient* N/A
CEIG DCEIG or MCEIG Inverse N/A
FREQ MODES Rayleigh Quotient* N/A
LAMA BUCK Direct* N/A
DISP STATICS or SAERO Inverse DRESP1 ID
STRAIN STATICS or SAERO Inverse Property ID or N/A
ESE STATICS or SAERO Inverse Property ID or N/A
STRESS STATICS or SAERO Inverse Property ID or N/A
FORCE STATICS or SAERO Direct Property ID or N/A
SPCFORCE STATICS or SAERO Inverse DRESP1 ID
CSTRAIN STATICS or SAERO Inverse Property ID or N/A
CSTRESS STATICS or SAERO Inverse Property ID or N/A
CFAILURE STATICS or SAERO Inverse Property ID or N/A
CSTRAT STATICS or SAERO Inverse Property ID or N/A
TOTSE STATICS or SAERO Inverse* N/A
GPFORCE STATICS or SAERO Inverse DRESP1 ID
GPFORCP STATICS or SAERO Inverse DRESP1 ID
FRDISP DFREQ or MFREQ Inverse DRESP1 ID
PRES DFREQ or MFREQ Inverse DRESP1 ID
FRVELO DFREQ or MFREQ Inverse DRESP1 ID
FRACCL DFREQ or MFREQ Inverse DRESP1 ID
FRSPCF DFREQ or MFREQ Inverse DRESP1 ID
FRSTRE DFREQ or MFREQ Inverse Property ID or Element ID&lt;/p&gt;
&lt;p&gt;161 Chapter 4: Input Data
Bulk Data Entries
Main Index
FRFORC DFREQ or MFREQ Inverse Property ID or Element ID
PSDDISP DFREQ or MFREQ Inverse DRESP1 ID
PSDVELO DFREQ or MFREQ Inverse DRESP1 ID
PSDACCL DFREQ or MFREQ Inverse DRESP1 ID
RMSDISP DFREQ or MFREQ Inverse N/A
RMSVELO DFREQ or MFREQ Inverse N/A
RMSACCL DFREQ or MFREQ Inverse N/A
TDISP MTRAN Inverse DRESP1 ID
TVELO MTRAN Inverse DRESP1 ID
TACCL MTRAN Inverse DRESP1 ID
TSPCF MTRAN Inverse DRESP1 ID
TSTRE MTRAN Inverse Property ID or Element ID
TFORC MTRAN Inverse Property ID or Element ID
TRIM SAERO Inverse N/A
STABDER SAERO Inverse N/A
DIVERG SAERO Inverse N/A
FLUTTER FLUTTER Inverse DRESP1 ID
COMP STATICS Direct* N/A
FRMASS** ANY Direct N/A
ACPWR DFREQ or MFREQ Inverse DRESP1 ID
DYNSTIFF DFREQ or MFREQ Inverse DRESP1 ID
ACINTS DFREQ or MFREQ Inverse DRESP1 ID
AFPRES DFREQ or MFREQ Inverse DRESP1 ID
AFINTS DFREQ or MFREQ Inverse DRESP1 ID
AFVELO DFREQ or MFREQ Inverse DRESP1 ID
AFPWR DFREQ or MFREQ Inverse DRESP1 ID
STMONP1 STATICS or SAERO Inverse DRESP1 ID
STMOND1 STATICS or SAERO Inverse DRESP1 ID
MONPNT3 STATICS or SAERO Inverse DRESP1 ID
AEMONP1 SAERO Inverse DRESP1 ID
AEMOND1 SAERO Inverse DRESP1 IDTable 4-3  Response Type Options on the DRESP1 Entry  (continued)
Response Types Associated ANALYSIS TypeApproximation
Technique Default Region&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries162
Main Index
DRESP2
Purpose:
Defines equation responses that are used in the design, either as constraints or as an objective.
Format:ERP DFREQ or MFREQ Direct DRESP1 ID
FATIGUE STATICS Inverse DRESP1 ID
DIVERG SAERO Inverse N/A
ABSSTRESS STATICS and SAERO Inverse Property ID or N/A
WMPID ANY Direct N/A
*Note that the approximation technique for these responses can be changed using the ATTB field on the
DRESP1 entry.
**FRMASS is only available for topology optimization.
1 2 3 4 5 6 7 8 9 10
DRESP2 ID LABEL EQID or
FUNCREGION METHOD C1 C2 C3
“DESVAR” DVID1 DVID2 DVID3 DVID4 DVID5 DVID6 DVID7
DVID8 -etc.-
“DTABLE” LABL1 LABL2 LABL3 LABL4 LABL5 LABL6 LABL7
LABL8 -etc.-
“DRESP1” NR1 NR2 NR3 NR4 NR5 NR6 NR7
NR8 -etc.-
“DNODE” G1 C1 G2 C2 G3 C3
G4 C4 etc.
“DVPREL1” DPIP1 DPIP2 DPIP3 DPIP4 DPIP5 DPIP6 DPIP7
DPIP8 DPIP9 -etc.-
“DVCREL1” DCIC1 DCIC2 DCIC3 DCIC4 DCIC5 DCIC6 DCIC7
DCIC8 DCIC9 -etc.-
“DVMREL1” DMIM1 DMIM2 DMIM3 DMIM4 DMIM5 DMIM6 DMIM7
DMIM8 DMIM9 -etc.-
“DVPREL2” DPI2P1 DPI2P2 DPI2P3 DPI2P4 DPI2P5 DPI2P6 DPI2P7
DPI2P8 DPI2P9 -etc.-
“DVCREL2” DCI2C1 DCI2C2 DCI2C3 DCI2C4 DCI2C5 DCI2C6 DCI2C7
DCI2C8 DCI2C9 -etc.-Table 4-3  Response Type Options on the DRESP1 Entry  (continued)
Response Types Associated ANALYSIS TypeApproximation
Technique Default Region&lt;/p&gt;
&lt;p&gt;163 Chapter 4: Input Data
Bulk Data Entries
Main Index
Example:“DVMREL2” DMI2M1 DMI2M2 DMI2M
3DMI2M4 DMI2M5 DMI2M6 DMI2M7
DMI2M8 DMI2M9 -etc.-
“DRESP2” NRR1 NRR2 NRR3 NRR4 NRR5 NRR6 NRR7
NRR8 -etc.-
“DVLREL1” DLIL1 DLIL2 DLIL3 DLIL4 DLIL5 DLIL6 DLIL7
DLIL8 -etc.-
DRESP2 1 LBUCK 5 3
DESVAR 101 3 4 5 1 205 209
201
DTABLE PI YM L
DRESP1 14 1 4 22 6 33 2
DNODE 14 1 4 1 22 3
2 1 43 1
DVPREL1 101 102
DVCREL1 201 202
DVMREL1 301
DVPREL2 401 402
DVCREL2 501
DVMREL2 601 602 603
DRESP2 50 51
Field Contents
ID Unique identification number.  (Integer &amp;gt;0)
LABEL User-defined label.  (Character)
EQID DEQATN entry identification number.  (Integer &amp;gt;0)
FUNC Function to be applied to the arguments. See Remark 8. (Character)
REGION Region identifier for constraint screening.  See Remark 5. (Integer &amp;gt;0)
METHOD When used with FUNC = BETA, METHOD = MIN indicates a minimization task
while MAX indicates a maximization task. (Default = MIN)
When used with FUNCT = MATCH, METHOD = LS indicated a least squares while
METHOD = BETA indicated minimization of the maximum difference.
(Default = LS)
Ci Constants used when FUNC = BETA or FUNC = MATCH in combination with
METHOD = BETA. See Remark 8. (Real, Defaults: C1 = 100., C2 = .005)&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries164
Main Index
Associated Entries:
The DCONSTR entry can be used to place bounds on a DRESP2 response using the DRESP2 entry ID as
a reference:
A DRESP2 response can also be used as input on another DRESP2 entry or on an external response defined
on DRESP3 entries.“DESVAR” Flag indicating DESVAR entry identification numbers.  (Character)
DVIDi DESVAR entry identification number.  (Integer &amp;gt;0)
“DTABLE” Flag indicating that the labels for the constants in a DTABLE entry follow. ( Character)
LABLj Label for a constant in the DTABLE entry.  (Character)
“DRESP1&amp;quot; Flag indicating DRESP1 entry identification numbers.  (Character)
NRk DRESP1 entry identification number.  (Integer &amp;gt;0)
“DNODE” Flag indicating grid point and component identification numbers. (Character)
Gm Identification number for any grid point in the model.  (Integer &amp;gt;0)
Cm Component number of grid point Gm.  (1&amp;lt;Integer &amp;lt;3)
DVPREL1 Flag indicating DVPREL1 entry identification number.  (Character)
DPIPi DVPREL1 entry identification number.  (Integer &amp;gt;0)
DVCREL1 Flag indicating DVCREL1 entry identification number. (Character)
DCICi DVCREL1 entry identification number. (Integer &amp;gt; 0)
DVMREL1 Flag indicating DVPREL2 entry identification number. (Character)
DMIMi DVMREL1 entry identification number. (Integer &amp;gt; 0)
DVPREL2 Flag indicating DVPREL2 entry identification number. (Character)
DPI2Pi DVPREL2 entry identification number. (Integer &amp;gt; 0)
DVCREL2 Flag indicating DVCREL2 entry identification number. (Character)
DCI2Ci DVCREL2 entry identification number. (Integer &amp;gt; 0)
DVMREL2 Flag indicating DVMREL2 entry identification number. (Character)
DMI2Mi DVMREL2 entry identification number. (Integer &amp;gt; 0)
DRESP2 Flag indicating other DRESP2 entry identification number. (Character)
NRRk DRESP2 entry identification number. (Integer &amp;gt; 0)
DVLREL1 Flag indicating other DVLREL1 entry identification number. (Character)
DLILi DVLREL1 entry identification number. (Integer &amp;gt; 0)
DCONSTR DCID RID LALLOW UALLOWField Contents&lt;/p&gt;
&lt;p&gt;165 Chapter 4: Input Data
Bulk Data Entries
Main Index
The DESOBJ Case Control command can also reference the DRESP2 entry ID:
Discussion:
It is often desirable to define responses that MSC  Nastran does not calculate directly, e.g., local buckling
criteria. Typically, the response equation is written on a DEQATN entry. This type of response is referred to
as “second-level” as opposed to “first-level” responses which are directly available from the analysis.
The DRESP2 entry defines the input, or actual, arguments to these equations. The arguments may be design
variables, table constants, first-level structural responses, grid coordinate locations, first and second-level
properties and other second level responses. The order of the arguments in the equation is dictated by the
order in which they appear on the DRESP2. It is therefore expected that the number of arguments on the
DEQATN will equal the number of DRESP2 arguments. The discussion of the DEQATN  indicates that the
number of DEQATN arguments may exceed those on the DRESP2. In this case, the missing arguments are
implied frequencies.
The DRESP1 and DRESP2 quantities called out on the DRESP2 can belong to separate superelements or
subcases. If the DRESP1 /DRESP2  quantities are not in the same subcase, it is necessary in Case Control to
invoke the spanning DRESP2 above the subcase level and to insert a DRSPAN command in the individual
subcases to which the DRESP1 /DRESP2  response belongs.
An alternative to referencing an equation ID is to supply one of the available FUNC character strings:DRESP2 ID LABEL EQID REGION&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DTABLE” LABL1 LABL2 -etc.-
“DRESP2” NRR1 NRR2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 -etc.-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;“DRESP1” NR1 NR2 -etc.-
“DRESP2” NRR1 NRR2 - - -
DESOBJmin
maxn=&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries166
Main Index
Table 4-4&lt;br&gt;
The meanings of the first six functions is the same as that given for the same functions described in Table 4-2.
The arguments used in the equations are all the arguments of the DRESP2 so that, for example, the AVG
function can be used to find the average of number of design variable values.
The BETA function has been provided to simplify input when the user wishes to minimize the maximum
response. The example in Acoustic Optimization  discusses this technique and provides input fragments of
doing this with and without the FUNC = BETA feature.
The DRESP2 with FUNC = BETA is intended to create the following design task
where C1 and C3 are user input values that have default values of 1.0 and 10.0, respectively. C1 is used to scale
the objective function and C3 is used to offset the constraint bound from 0.
The  quantity is computed so that the maximum constraint for all the response is equal to another user input
value C2:
where  is the value of the maximum response for the initial design. The default value for C2 is 0.005,
creating a maximum constraint that is just equal to the default value of DOPTPRM parameter GMAX.Function Description
SUM Sum of the arguments
AVG Average of the arguments
SSQ Sum of the squares of the arguments
RSS Square root of the sum of the squares of the arguments
MAX The largest value of the argument list
MIN The smallest value of the argument list
BETA Minimize the maximum response
MATCH Match analysis results with user specified value
SFMAX Maximization of stiffness and frequency.
Minimize:
Subject to:FX C1X=
grjX–
C3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0 =
gmaxrjmaxX– C3c2= =
rjmax&lt;/p&gt;
&lt;p&gt;167 Chapter 4: Input Data
Bulk Data Entries
Main Index
The METHOD field on DRESP2 can be used in conjunction with FUNC = BETA to designate whether the
task is to minimize the maximum response (METH = MIN) or maximize the minimum response (METH =
MAX).
The MATCH function has been provided to simplify input when the user wishes to match analysis results
with given values, such as those obtained in a test. Depending on the value of METHOD, one of two
techniques is used to create the match.
When FUNC = MATCH and METHOD = LS, a least square approach is used.
The technique converts the user input into a response of the following form:
where rj is a response from a DRESP1 and  is a user defined target response.
Typically, this response would be designated as the objective function to be minimized but it could also be
constrained.
When FUNC = BETA and METHOD = BETA, a beta approach is applied to minimize maximum deviation
in a way similar to the FUNC = BETA method described above. In this case, the DRESP2 results in a design
task to minimize a spawned design variable:
subject to:
Because X can become small, it is necessary to offset the constraint in a fashion similar to the BETA method
given above.
Define:
and then determine  and , the maximum and minimum values of .
The  quantity can then be determined from user specified values of C2 and C3 using the following equation:RmatchrjrjT–
rjT&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
2
J1=m
=
rjT
FX C1X=
X–rjrjT–
rjT&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;X     j12m =  
rjrjrjT–
rjT&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
R2maxR2minrj2&lt;/p&gt;
&lt;p&gt;Design Sensitivity and Optimization User’s Guide
Bulk Data Entries168
Main Index
In this case, the DRESP2 can only be invoked as the objective and cannot be constrained.
DRESP3
Purpose:
Defines an external response using user-supplied routines. The response can be used as a constraint or as an
objective.
Entry Description:
1 2 3 4 5 6 7 8 9 10
DRESP3 ID LABEL GROUP TYPE REGION
“DESVAR” DVID1 DVID2 DVID3 DVID4 DVID5 DVID6 DVID7
DVID8 -etc.-
“DTABLE” LABL1 LABL2 LABL3 LABL4 LABL5 LABL6 LABL7
LABL8 -etc.-
“DRESP1” NR1 NR2 NR3 NR4 NR5 NR6 NR7
NR8 -etc.-
“DNODE” G1 C1 G2 C2 G3 C3
G4 C4 etc.
“DVPREL1” DPIP1 DPIP2 DPIP3 DPIP4 DPIP5 DPIP6 DPIP7
DPIP8 DPIP9 -etc.-
“DVCREL1” DCIC1 DCIC2 DCIC3 DCIC4 DCIC5 DCIC6 DCIC7
DCIC8 DCIC9 -etc.-
“DVMREL1” DMIM1 DMIM2 DMIM3 DMIM4 DMIM5 DMIM6 DMIM7
DMIM8 DMIM9 -etc.-
“DVPREL2” DPI2P1 DPI2P2 DPI2P3 DPI2P4 DPI2P5 DPI2P6 DPI2P7
DPI2P8 DPI2P9 -etc.-
“DVCREL2” DCI2C1 DCI2C2 DCI2C3 DCI2C4 DCI2C5 DCI2C6 DCI2C7
DCI2C8 DCI2C9 -etc.-
“DVMREL2” DMI2M1 DMI2M2 DMI2M3 DMI2M4 DMI2M5 DMI2M6 DMI2M7
DMI2M8 DMI2M9 -etc.-
“DRESP2” NRR1 NRR2 NRR3 NRR4 NRR5 NRR6 NRR7
NRR8 -etc.-
“DVLREL1” DLIL1 DLIL2 DLIL3 DLIL4 DLIL5 DLIL6 DLIL7
DLIL8 -etc.-
“USRDATA” Character String Data
-etc.-MaxR2maxR2min– X–
C3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; C2=&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
