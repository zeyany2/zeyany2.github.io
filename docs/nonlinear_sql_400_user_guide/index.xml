<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOC REPO – MSC Nastran manuals</title>
    <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/</link>
    <description>Recent content in MSC Nastran manuals on DOC REPO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>User&#39;s Manual P1</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_001/</guid>
      <description>
        
        
        &lt;p&gt;MSC Nastran 2024.1
Nonlinear (SOL 400) User’s GuideMSC Nastran Nonlinear (SOL400) User’s guide&lt;/p&gt;
&lt;p&gt;Worldwide Web
&lt;a href=&#34;https://www.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.hexagon.com&lt;/a&gt;
Support
&lt;a href=&#34;https://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com&lt;/a&gt;
Disclaimer
Hexagon reserves the right to make changes in specifications and other information contained in this document without prior notice.
The concepts, methods, and examples presented in this text are for illustrative and educational purposes only, and are not intended
to be exhaustive or to apply to any particular engineering problem or design. Hexagon assumes no liability or responsibility to any
person or company for direct or indirect damages resulting from the use of any information contained herein.
User Documentation: Copyright 2024 Hexagon AB and/or its subsidiaries. All Rights Reserved.
This notice shall be marked on any reproduction of this documentation, in whole or in part. Any reproduction or distribution of this
document, in whole or in part, without the prior written consent of Hexagon is prohibited.
This software may contain certain third-party software that is protected by copyright and licensed from Hexagon suppliers. Additional
terms and conditions and/or notices may apply for certain third party software. Such additional third party software terms and
conditions and/or notices may be set forth in documentation and/or at third-party software information  (or successor website designated
by Hexagon from time to time).
PCGLSS 8.0, Copyright © 1992-2016, Computational Applications and System Integration Inc. All rights reserved. PCGLSS 8.0 is
licensed from Computational Applications and System Integration Inc.
The Hexagon logo, Hexagon, MSC Software logo, MSC, Dytran, Marc, MSC Nastran, Patran, e -Xstream, Digimat, and Simulating
Reality are trademarks or registered trademarks of Hexagon AB and/or its subsidiaries in the United States and/or other countries.
NASTRAN is a registered trademark of NASA. FLEXlm and FlexNet Publisher are trademarks or registered trademarks of Flexera
Software. All other trademarks are the property of their respective owners.
Use, duplicate, or disclosure by the U.S. Government is subjected to restrictions as set forth in FAR 12.212 (Commercial Computer
Software) and DFARS 227.7202 (Commercial Computer Software and Commercial Computer Software Documentation), as
applicable.
U.S. Patent 9,361,413
May 16, 2024
NA:V2024.1:Z:Z:Z:DC-USR-PDFCorporate Office
Hexagon Manufacturing Intelligence, Inc. UK
78 Portsmouth Road Cedar House
Cobham, Surrey KT11 1HY
Telephone: (+44) 02070686555&lt;/p&gt;
&lt;p&gt;Documentation Feedback
At Hexagon Manufacturing Intelligence, we strive to produce the highest quality documentation and
welcome your feedback. If you have comments or suggestions about our documentation, write to us .
Please include the following information with your feedback:
Document name
Release/Version number
Chapter/Section name
Topic title (for Online Help)
Brief description of the content (for example, incomplete/incorrect information, grammatical
errors, information that requires clarification or more details and so on).
Your suggestions for correcting/improving documentation
Note:   The above mentioned e-mail address is only for providing documentation specific
feedback. If you have any technical problems, issues, or queries, please contact Technical
Support .&lt;/p&gt;
&lt;p&gt;C o n t e n t s
MSC Nastran Nonlinear User’s Guide&lt;/p&gt;
&lt;p&gt;Main Index
Contents
1 Introduction
What’s New in SOL 400 since 2016 Release . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  2
Introduction  to MSC Nastran Implicit Nonlinear (SOL 400)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
Hexagon  Products  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
MSC Nastran Documentation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
List of MSC Nastran Guides . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
Patran Documentation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9
SOL 400 Training . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9
MSC Nastran Implicit Nonlinear (SOL 400)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9
Nonlinear Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9
Capabilities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  10
Using the Finite Element Method  (FEM)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  12
Clevis – Pin – Lug Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  12
Required Solution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  14
FEM Solution  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  15
General Analysis Tips . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  20
Frequently Asked Questions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  20
General Questions on SOL 400 Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  20
2 MSC Nastran Files
Introduction to Organization of MSC Nastran Files  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  28
Overview of the MSC Nastran Input File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  28
Input Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  29
Section Descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  30
SOL 400 Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  31
Running Existing Nonlinear Models in SOL 400 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  32
Generating and Editing the Bulk Data File in Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  33
Truss Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  33
Overview of the MSC Nastran Output Files . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
SOL 400 Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  43&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guidevi
Main Index
Postprocessing with Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  44
Parameter Discussion  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  45
The Executive Control Section Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  46
The Case Control Section . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  47
POST Case Control Command  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  49
The Bulk Data Section . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  51
3 Nonlinearity and Analysis Types
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  56
Linear Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  56
Nonlinear Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  57
Nonlinear Effects and Formulations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  58
Geometric Nonlinearities  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  61
Material Nonlinearities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  69
Nonlinear Boundary Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  76
Overview of Analysis Types . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  77
General Nonlinear Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  77
Linear Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  79
Static Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  84
Post-buckling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  85
Creep, Viscoplastic, and Viscoelastic Behavior  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  85
Normal Modes – ANALYSIS = MODES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  86
Natural Frequency Extraction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  86
Eigenvalue Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  88
Free Vibration Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  88
Eigenvalue Extraction Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  88
Inverse Power Method (INV) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  89
Enhanced Inverse Power Method (SINV) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  89
Lanczos Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  89
Comparison of Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  89
User Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  90
Panel Buckling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  90
Model Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  90
Solving the Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  92
Results Plots  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  94
Dynamic Analysis of Linear Systems By Modal Methods  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  95
Direct and Modal Frequency Response – ANALYSIS = DFREQ, MFREQ . . . . . . . . . . . . . . . . . . . . . . . . . . .  95
Complex Eigenvalue Analysis – ANALYSIS = DCEIG, MCEIG  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  96
Transient Dynamic Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  97
Direct Transient Response . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  97&lt;/p&gt;
&lt;p&gt;vii Contents
Main Index
Direct Linear Transient Time Integration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  97
Dynamic Integration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  98
Selecting Time Intergration Operators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  101
Damping in Direct Transient Response . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  102
Initial Conditions in Direct Transient Response  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  104
Nonlinear Transient Response Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  105
Nonlinear Transient Response Analysis Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  105
Time Step Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  106
Creep in SOL 400  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  107
Heat Transfer  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  108
References  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  109
4 Solution Strategies for Nonlinear Analysis
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  112
Nonlinear Characteristics and General Recommendations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  113
Differences Between Linear and Nonlinear Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  113
Load Increments and Iterations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  116
Equations Governing Nonlinear Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  119
Finite Element Formulation for Equilibrium Equations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  120
Load Incrementation and Iteration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  123
Nonlinear Solution Procedure  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  123
Adaptive Solution Strategies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  124
Newton&amp;rsquo;s Method of Iteration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  124
Stiffness Update Strategies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  126
Quasi-Newton Method  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  128
Load Increment Size . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  131
Fixed Load Incrementation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  132
Adaptive Load Incrementation in SOL 400 (NLSTEP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  132
NLSTEP Bulk Data Entry  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  132
Convergence Controls  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  137
Specifying Convergence Criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  140
Guidelines and Limitations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  140
Recycling Criterion  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  141
Arc-Length Methods for Post-buckling Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  144
Basic Theory for Arc Length Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  145
Riks&amp;rsquo; Method and Its Variations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  146
Crisfield&amp;rsquo;s Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  148
Adaptive Arc Length Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  149
BFGS Updates for Arc-length Methods  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  158&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guide viii
Main Index
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  159
5 Computational Methods
Nonlinear Computational Costs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  162
Material Nonlinearity  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  162
Large Deformation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  162
Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  163
Stiffness Matrix Assembly  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  163
Element Assembly Parallelization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  163
Element Memory Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  164
Stiffness Matrix Memory Requirements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  164
Solution of Matrix Equations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  165
Stiffness Matrix Decomposition  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  165
Singularity Ratio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  166
Matrix Conditioning  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  167
Numerical Stabilization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  169
The Scale Factors – LMFACT and PENFN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  169
Direct Solver  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  170
Iterative Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  171
Iterative Solver Background  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  173
Perturbation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  174
Computer Hardware . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  176
Memory Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  176
Buffer Pool . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
Solid State Disk (SSD)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
Resource Recommendations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
BUFFSIZE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
MPI Selection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  178
6 Setting Up, Monitoring, and Debugging the Analysis
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  180
Overview of Running a SOL 400 Job . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  180
Execution Procedure from the Command Line  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  180
Using Patran to Execute MSC Nastran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  181
How to Tell When the Analysis is Done . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  182
How to Tell if the Analysis Ran Successfully . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  182
Setting Up a SOL 400 Job  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  182
Executive Control Statements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  182
Solution Type . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  182
Specifying the Solution Type  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  183
Steps and Subcases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  183&lt;/p&gt;
&lt;p&gt;ix Contents
Main Index
Specifying Subcases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  183
Multi-step or Multi-subcase Analyses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  183
Analysis Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  184
Analysis Types  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  184
Setting Up the Analysis in Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  185
Translation Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  187
Solution Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  188
Requesting Output For a Step . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  190
Defining Subcases in Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  191
Define History by Selecting Load Steps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  191
Subcase Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  192
Static Subcase Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  192
Specifying Creep Subcase Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  193
Normal Modes Subcase Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  194
Specifying Transient Dynamic Subcase Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  195
Specifying Body Approach Subcase Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  196
Specifying Complex Eigenvalue Subcase Parameters  in Patran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  197
Specifying Frequency Response Subcase Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  198
Thermal So lution Subcases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  199
Setting Up a Sequential or Coupled Thermal Stress Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  200
Setting Up Multi-step Analyses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  201
Editing a MSC Nastran Input File . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  202
Monitoring the Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  203
Monitoring Using the Nonlinear Solution Status (.sts) File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  203
Monitoring Using the MSC Analysis Manager  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  205
SOL 400 Analysis  Messages  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  206
Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  208
Determining if Your Simulation has failed to Converge  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  208
Determining if Your Simulation is Converging Slowly . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  209
Rigid Body Modes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  210
Load Controlled Rigid Bodies  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  211
Contact Convergence Issues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  211
Follower Force Effects  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  212
Material Nonlinearity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  212
Mesh Distortion  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  213
Instability/Buckling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  214
General Hints for Starting out with Nonlinear Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  214
Output Messages  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  215&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guidex
Main Index
7 Results Output from the Analysis
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  218
Output Requests in Case Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  218
Output Requests to Get Additional Contact Output  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  220
NLOPRM  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  221
MSC Nastran Results Quantities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  222
Specifying Results Output Requests in Patran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  223
Results Output Options . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  224
Output Requests in Patran – Advanced Form  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  224
Result Files . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  226
Specifying Output File Format . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227
MSC Nastran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227
Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  228
Postprocessing SOL 400 with Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  228
Using Patran to Postprocess MSC Nastran Results Quantities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  228
Direct Results Access . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  230
Postprocessing Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  231
Advanced Output Requests  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  232
8 Load and Constraint Conditions
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  242
Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  242
Single-Point Constraints (SPC, SPC1) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  242
Enforced Motion Constraints (SPCD and SPCR) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  243
Applying Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  243
Single Degrees of Freedom  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  244
Spatial, Time, Temperature, and Other Dependencies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  244
Static Loads . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  244
Load Sets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  245
Subcases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  245
Load Steps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  246
Load Types  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  246
Loading Types  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  247
Loads on Grid Points and Scalar Points . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  248
Distributed Loads . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  249
Distributed Loads on Line Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  249
Distributed Loads on Surfaces  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  249
Inertial and Dynamic Loads . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  253
Gravity and Centrifugal Force . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  253&lt;/p&gt;
&lt;p&gt;xi Contents
Main Index
Initial Stress and Initial Plastic Strain Mapping from Previous Results  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
Thermal Loads (TEMP and TEMPD) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
Export of Static Loads  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  255
Using Patran to Apply Loads and Boundary Conditions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  257
Force LBCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  261
Pressure LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  262
Temperature LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  264
Inertial Loads LBCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  266
Velocity LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  267
Acceleration LBCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  268
Distributed Load LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  268
Total Load LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  270
Initial Conditions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  271
Initial Displacement LBCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  271
Initial Velocity LBCs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  271
9 Contact
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  275
Contact Methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  276
Node-to-Segment (NTS) Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  276
Segment-to-Segment (STS) Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  277
Defining Deformable Contact Bodies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  277
MSC Nastran Contact Data Styles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  279
MSC Nastran Format – Pre 2013 Release . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  279
MSC Nastran Format – Post 2013 Release  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  280
Element Considerations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  280
Element Dimensionality  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  281
Beam Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  281
Shell Contact Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  283
Contact Body Definition for STS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  285
Finite Sliding for Deformable Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  286
Analytical Description of a Deformable Body . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287
Rigid Contact Bodies  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  289
Two-dimensional Rigid Surfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  290
Patran Graphical User Interface for Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  294
Defining Contact Bodies in Patran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  294
Movement of Contact Bodies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  297
Velocity Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  299
Body Movement Definition  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  299
Contact Rigid Body Growth . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  299&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guidexii
Main Index
Initial Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  299
Cautions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  300
Contact Body Interaction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  300
Deformable-to-Deformable Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  302
Example of Poor Body Numbering  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  303
Example of Proper Body Numbering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  303
Controlling Contact Interactions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  308
Contact in Perturbation Steps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  311
Assembly Modeling/Dissimilar Mesh and Initially Imperfect Geometry  . . . . . . . . . . . . . . . . . . . . . . . . . . .  311
Defining Contact Control Parameters in Patran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  313
Automatic Contact Body Pair Creation User Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  317
Time Step Control  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  320
Contact  in SOL 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  321
Guidelines and Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  321
Example (tpl/3dcnt101/rg_lcdf.dat ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  321
Limits of Contact  in SOL 101  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  324
Linear Contact (LINCNT)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  327
Benefit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  327
Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  327
Guidelines and Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  328
Contact Detection  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  328
Patran Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  329
Shell Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  332
Contact Tolerance Distance  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  334
Interference Fit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  335
Neighbor Relations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  338
Separation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  344
Tolerance on Nodal Reaction Force or Nodal Stress Before Separation Occurs  . . . . . . . . . . . . . . . . . . . . .  344
Release  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  346
Defining Separation in Patran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  346
Delayed Slide Off  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  348
Friction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  348
Bilinear Friction Models  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  350
Friction User Subroutine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  353
Friction Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  353
Dynamic Impact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  355
Accuracy  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  356
Thermal Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  359
Mesh-to-Mesh Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  360
Mesh-to-Geometry Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  362
No Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  363
Mechanical Coupling  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  363&lt;/p&gt;
&lt;p&gt;xiii Contents
Main Index
Contact Model Check . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  364
Usage of contact model check  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  364
Example of contact model check  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  364
Initial Stress Free in Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  367
Automatic Contact Generation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  369
Generation of Contact Bodies  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  370
Generation of Contact Pairs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  370
User Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  371
ACG File Generation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  373
Examples  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  373
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading  . . . . . . . . . . . . . . . . . .  376
Problem Statement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  376
The Structure and Its Application  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  376
Model Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  377
Solving the Problem  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  379
Highlighted Sections of the MSC Nastran Bulk Data File  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  379
Inspecting the Results  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  382
Examples  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  384
Numerical Procedures  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  388
Lagrange Multipliers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  388
Penalty Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  388
Hybrid and Mixed Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  388
Direct Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  388
Automatic Penetration Checking Procedure  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  389
Implementation of Constraints in Node-to-Segment  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  389
Treatment of MPC Equations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  391
Lagrange Multipliers and Solution of Linear Equations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  392
Segment-to-Segment Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  393
Segment-to-Segment Contact Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  396
Contact Detection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  399
Force Vector and Stiffness Matrix Contribution  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  401
Iterative Penetration Checking and Contact Stress Update  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  403
Separation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  405
Beam Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  405
Interference Fit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  407
References  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  411
10 Materials
Material Model Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  415
Linear Elastic  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  417&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guide xiv
Main Index
Element Selection for Incompressible Materials  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  417
Linear Elastic Material Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  418
Isotropic Material (MAT1)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  418
Two-Dimensional Anisotropic Material (MAT2)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  420
Axisymmetric Solid Orthotropic Material (MAT3) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  421
Two-Dimensional Orthotropic Material (MAT8)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  422
Three-Dimensional Orthotropic Material (MATORT) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  424
Simplified Nonlinear Orthotropic Material (MATSORT)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  428
Classical Laminate Theory (PSHELL)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  428
Composite Material (PCOMP or PCOMPG) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  430
Specifying Composite Material Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  431
Creating Composite Materials In Patran  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  435
Nonlinear Material Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  436
SOL 400 Material Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  438
Nonlinear Elastic  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  439
Hypoelastic  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  439
Hyperelastic – Isotropic  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  439
Viscoelastic  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  459
MATS1 Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  472
Inelastic Behavior  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  475
Yield Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  476
Work Hardening Rules  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  485
Flow Rules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  489
Rate Dependent Yield . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  490
Time-independent Cyclic Plasticity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  492
Temperature-Dependent Behavior  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  502
Temperature-Dependent Stress Strain Curves  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  503
Specifying Elastoplastic Material Entries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  504
Failure and Damage Models (MATF) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  507
Isotropic/Orthotropic/Anisotropic Failure Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  507
Progressive Composite Failure  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  516
Micro-mechanics Material Models (MATDIGI) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  519
Interlaminar Shear for Thick Shell, Beam, Solid Shell, and 3-D Composite Brick Elements  . . . . . . . . . .  522
Interlaminar Stresses for Continuum Composite Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  524
Cohesive Zone Modeling (MCOHE)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  524
Creep (MATVP, CREEP)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  529
Viscoplasticity (Explicit Formulation) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  533
Creep (Implicit Formulation) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  534
ANAND Solder Creep Model  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  535
Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  536&lt;/p&gt;
&lt;p&gt;xv Contents
Main Index
Specifying Creep Material Entries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  537
Gasket (MATG)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  538
Specifying Gasket Material Entries  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  543
Thermo-Mechanical Shape Memory Model (MATSMA)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  543
Transformation Induced Deformation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  545
Constitutive Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  547
Phase Transformation Strains . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  547
Experimental Data Fitting for Thermo-mechanical Shape Memory Alloy  . . . . . . . . . . . . . . . . . . . . . . . . . .  549
Mechanical Shape Memory Model (MATSMA)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  553
Experimental Data Fitting for Mechanical Shape Memory Alloy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  556
Conversion from Thermo-Mechanical to Mechanical SMA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  557
Material Orientation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  558
Heat Transfer Properties  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  560
Thermal Strain  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  561
User Defined Material Subroutines  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  561
Feature Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  562
Limitation and Potential Enhancement  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  563
Experimental Data Fitting  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  563
References  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  580
11 Element Library
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  582
Interpolation Functions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  583
Element Integration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  583
Incompressible Behavior . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  584
Nonlinear Behavior . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  584
Higher-order Elements and Large Deformation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  584
Higher Order Elements and Contact  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  585
User Defined Services/Subroutines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  585
Property Options . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  585
Element Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  586
0-D. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  586
1-D Elements – Not Numerically Integrated  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  587
1-D Elements that are Numerically Integrated . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  587
Beam Element Considerations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  589
Large Displacement/Large Strain  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  591
Planar Continuum Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  591
Axisymmetric Shell Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  597&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guide xvi
Main Index
3-D Membrane, Plate, and Shell Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  598
Shells . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  599
Shear Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  601
3-D Solid Shell Element  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  601
3-D Volumetric Solid Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  603
Composite Solid Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  607
Interface Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  608
Automatic Property Mapping  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  612
Patran Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  617
Modeling Guidelines  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  617
Choosing the Right Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  618
Mesh Density . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  623
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  626
12 Rigid Elements, Connectors, and Multi-Point Constraints
Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  628
Kinematic Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  628
MPC Constraint  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  628
MPC Types . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  630
Automated Bolt Modeling  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  636
Enhanced Bolt Modeling with BOLT1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  642
Support for Bolts  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  644
BOLT D ata Entr y. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  644
BOLT1 Data Entry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  646
Patran Bolt Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  650
Enhanced Bolt Modeling with BOLT1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  650
Bolt Pre-load Tool  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  651
Manual Support Using Bolt LBC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  654
Benefits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  655
Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  655
Bolt Pre-load  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  656
Introduction to R-Type Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  677
Rigid Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  677
Description of the R-Type Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  677
RBAR Element  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  679
The RBE2 Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  684
Nonlinear RBE2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  687
The RBE3 Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  688
RJOINT Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  694
Methods for Rigid Element Solution  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  695&lt;/p&gt;
&lt;p&gt;xvii Contents
Main Index
Patran Support  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  697
Multi-Point Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  697
Pin Code for Beam Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  704
Constraint Conflict  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  705
13 Advanced Topics
Superelements and Modal Neutral Files  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  708
Fracture Mechanics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  708
Linear Fracture Mechanics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  708
Nonlinear Fracture Mechanics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  711
Numerical Evaluation of the Energy Release Rate with the VCCT Method  . . . . . . . . . . . . . . . . . . . . . . . . .  712
Dynamic Fracture Methodology  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  716
Dynamic Crack Propagation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  717
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  717
Inertia Relief . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  717
Introduction to Inertia Relief  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  717
Usage of Inertia Relief . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  718
Guidelines and Limitations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  718
Example of Inertia Relief . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  720
Large Displacement Grid Point Weight Generation  (GPWG) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  722
BSQUEAL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  722
RESTART . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  727
File Management Commands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  729
Case Control Modifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  729
Bulk Data Modifications  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  730
User Defined Services and Subroutines  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  732
User-defined State Variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  735
Utility Functions to Access MSC Nastran Data in UDS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  737
Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  740
Multiple Mass Configuration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  740
Guidelines for SOL 129 to SOL 400 Migration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  743
Step by step instructions for conversion of SOL 129 model into SOL 400  . . . . . . . . . . . . . . . . . . . . . . . . .  744
Comparison of SOL 129 and SOL 400 results  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  746
Additional Capabilities in SOL 400  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  772
A Interpreting the Results
Results Quantities  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  776
Deformations  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  777&lt;/p&gt;
&lt;p&gt;MSC Nastran Nonlinear User’s Guide xviii
Main Index
Grid Point Force Balance and Element Strain Energy  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  786
Grid Point Stresses  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  788
Description of the Grid Point Stress Method  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  790
Topological Method – Plate Elements and Solid Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  792
Treatment of Exception Points  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  796
Grid Point Stress Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  797
Gauss Point Results  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  800
Shape Function Interpolation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  800
Implication: The Evaluation of Element Displacements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  803
Implication: Linear vs Quadratic Elements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  804
Implication:  Nodal Temperature Loading With Temperature Dependent Materials  . . . . . . . . . . . . . . . . . .  806
Implication:  Element Thickness Interpolation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  807
Finite Element Equilibrium . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  807
Implication: Smoothed or Unsmoothed Stress Contours  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  809
Implication:  Limitations of the Averaging Scheme  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  811
Continuum and Generalized Stresses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  812
B Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and
NDAMP/NDAMPM (GEN-ALPHA)
Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)&lt;br&gt;
816&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 1: Introduction
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
1 Introduction
What’s New in SOL 400 since 2016 Release
Introduction  to MSC Nastran Implicit Nonlinear (SOL 400)
Hexagon Products
MSC Nastran Implicit Nonlinear (SOL 400)
Capabilities
Using the Finite Element Method  (FEM)
Clevis – Pin – Lug Design
General Analysis Tips
Frequently Asked Questions&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
What’s New in SOL 400 since 2016 Release2
Main Index
What’s New in SOL 400 since 2016 Release
2021.2
New BDF entries for Co-Simulation
Contact detection of PCOMP(G) with Z0
2021.1
Accelerated separation check for node-to-segment contact
2021
Brake squeal enhancement
Support specification of contact status in linear perturbation analysis with touching contact
Segment-to-segment contact default settings
SOL 400 algorithm improvements
Element strain energy (ESE) and kinetic energy (EKE) with linear perturbation analysis
External Superelement MONPNT1 and MONPNT3 Data Recovery
Addition of Lossy Compression for Nastran HDF5 Matrix and NLOUT Outputs (NH5RDB)
2020
Geometric perturbation
Nonlinear buckling analysis
New MATVE format
Check Input errors when using Advanced Nonlinear Elements
Support for NLLOAD output in HDF5
2019FP1
Linear perturbation buckling analysis
Surface contact
Linear contact in segment-to-segment contact
2019
Model contact check
Support for SEGANGL on BCPARA (and BCAUTOP)
Support for N3DSUM on NLOPRM, NLDBG to provide the simplified debug output
Output of advanced composites
Monitor points with NLSTAT and NLTRAN&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P10</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_010/</guid>
      <description>
        
        
        &lt;p&gt;163 Chapter 5: Computational Methods
Nonlinear Computational Costs
Main Index
Contact
Contact results in a large number of iterations either because MSC Nastran is not able to satisfy the geometric aspect of
contact given the increment of the applied load resulting in penetration, or because of separation of bodies which may lead
to both a geometric problem, and because of the need to redistribute the load over different paths.
The geometric problem may be both due to large step sizes and due to a contact tolerance distance that is inappropriate for
the particular model. The first problem can be addressed by taking either smaller load steps and/or using the NLSTEP  entry
to control the step size.
By default, the user does not need to enter the contact tolerance distance, and the program calculates one based upon the
user geometry. In models that combine shells, beams, and the program, tolerance may be too small. You should explicitly
define ERROR  on the  BCONPRG  option.
Stiffness Matrix Assembly
For each iteration if Full Newton-Raphson is used, the stiffness matrix is reassembled, which may lead to high
computational costs. While the number of assemblies of the matrix may be reduced using Modified Newton-Raphson,
these techniques are not recommended for highly nonlinear simulations, including rubber analysis, metal at elevated
temperature, buckling, or contact problems (especially those with friction).  The choice of which form of the Newton-
Raphson procedure is made through the KMETHOD  option on the NLSTEP or NLPARM  entry. The recommended
procedure is to use PFNT .
The computational time associated with the forming the stiffness matrix is dependent upon:
The number of elements in the model .
The complexity of the element – higher order elements, especially those with large number of integrations points
are more expensive.
The number of layer points in composite shells.
The type of material model; for example an orthotropic elastic-plastic material with damage is more expensive to
form linear elastic isotropic material.
The inclusion of follower force stiffness, especially for shell models, where it is likely that every element has a
pressure associated with it.
Element Assembly Parallelization
MSC Nastran SOL 400 can reduce the computational times by performing the element stiffness matrix formulation in
parallel. This capability is only available when using the advanced elements. Both shared-memory parallel (SMP) and
distributed-memory parallel (DMP) can be used as of the MSC Nastran 2017.0 release.
The SMP option is activated automatically when the user sets SMP=n.  No parameters or other settings are needed.
The DMP option is activated with the following statement in the executive control section:
DOMAINSOLVER NLSOLV&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Computational Costs164
Main Index
There are two modes that may be invoked which controls the implementation and the coordination between the different
groups of elements activated with the RUNOPT  keyword, MULTIPAR  and PARCHILD . Indicating multi- parent a nd parent-
child,  respectively.
MSC Nastran detects single- and multiple-host DMP execution and sets the default run option accordingly.
Note that the VCCT  bulk data entry for fracture mechanics is not available with parallel element assembly. Also, note that
DMP and SMP cannot be combined, and if a user selects both DMP and SMP , then the DMP parallel assembly will be
used.
Note that the recommended approach as of the MSC Nastran 2017.0 release is to use SMP as it is simpler and leads to
better performance.
Element Memory Usage
The memory requirements for SOL 400 are very similar to SOL 101 except the memory requirements for element storage
is higher for nonlinear analysis. The reason is that in a nonlinear analysis more data is stored such as the plastic strains, creep
strains, damage variable, and generally, two copies are required during the iteration process. Furthermore, if nonlinear shells
are included then one also must store this data for each layer.
Stiffness Matrix Memory Requirements
The size of the stiffness matrix is generally dependent upon the finite element mesh from both the number of grid points
in the model and the fill (or density) of the matrix. There are only a few things that you can do to control the stiffness matrix
size.
Large RBE or load controlled rigid surfaces increase the number of connections between grid points which increases the
stiffness matrix size
In SOL 400, activating large displacements ( PARAM, LGDISP ) activates the use of follower force and the creation of the
follower force stiffness. The follower force option may also be activated if any MOMENTi, FORCEi, PLOADi, or
RFORCE  bulk data entries are present. By default, follower force stiffness is nonsymmetric, which leads to a fully
nonsymmetric stiffness matrix. The nonsymmetric system will then lead to larger amount of memory for both the storage
of the matrix and the decomposition time. For many problems, this is unnecessary and either the follower force stiffness
matrix should be neglected or it should be symmetrized. It should be noted that the iterative solvers require that the stiffness
matrix is symmetric.
T o deactivate the calculation of the follower force stiffness, one can use the:
PARAM,FOLLOWK,0PARCHILD Specifies &amp;quot; parent-child&amp;quot;  Parallel execution mode. Only the Parent D MP process executes the full MSC
Nastran solution. This is optimal for single-host DMP execution.
MULTIPAR Specifies &amp;quot; parent-child&amp;quot;  Parallel execution mode. All DMP processes execute the full MSC Nastran
solution. This is optimal for multiple-host DMP execution.&lt;/p&gt;
&lt;p&gt;165 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
As an alternative one can also use
PARAM, LGDISP,2  instead of PARAM,LGDISP,1
To activate the symmetric formulation, one can use:
PARAM,FKSYMFC,1.0
While deactivating or symmetrizing the follower force stiffness matrix may increase the number of iterations, it does not
influence the accuracy of the solution in a nonlinear quasi-static or dynamic analysis. The accuracy is governed by the
convergence controls.
There are two types of solution procedures in MSC Nastran: the direct method and the iterative method. The iterative
method has two types of storage schemes: the storage of the complete matrix (similar to direct solvers) and the element
based CASI iterative solver. For large solid-like structures, the element based system requires significantly less memory.
Solution of Matrix Equations
Stiffness Matrix Decomposition
The heart of a finite element system is the calculation of
for a linear system or
for a nonlinear system
Numerically, we never invert the stiffness matrix, but either use techniques that fall under the classes of direct solution using
a variation of Gaussian elimination or iterative schemes.
The stiffness (or tangent stiffness) matrix may be either symmetric or nonsymmetric, and MSC Nastran has the following
procedures that may be used.
Symmetric Positive
DefiniteSymmetric Non-
Positive DefiniteNon-symmetric
Positive DefiniteNon-symmetric, Non-
positive Definite
Real Complex Real Complex Real Complex Real Complex
Direct Serial Yes Yes Yes Yes Yes Yes Yes Yes
Direct SMP Yes Yes Yes Yes Yes Yes Yes Yes
Direct DMP Yes Yes Yes Yes Yes Yes Yes Yes
Direct DMP /
SMPYes Yes Yes Yes Yes Yes Yes YesU K1–F =
dU KT1–R =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution of Matrix Equations166
Main Index
Singularity Ratio
The singularity ratio, , is a measure of the conditioning of the system of linear equations.  is related to the conditioning
number, , which is defined as the ratio between the highest and lowest eigenvalues in the system. The singularity ratio is
an upper bound for the inverse of the matrix conditioning number.
(5-1)
and  establish the growth of errors in the solution process. If the errors on the right-hand side of the equation are less
than  prior to the solution, the errors in the solution will be less than , with
(5-2)
The singularity ratio is a measure that is computed during the Crout elimination process of MSC Nastran Implicit
Nonlinear using the direct solver. In this process, a recursive algorithm redefines the diagonal terms
(5-3)
where  is a function of the matrix profile.  is a diagonal of the kth degree of freedom. The singularity ratio is defined as
(5-4)
If all  and  are positive, the singularity ratio indicates loss of accuracy during the Crout elimination process.
This loss of accuracy occurs for all positive definite matrices. The number of digits lost during the elimination process is
approximately equal to
(5-5)Element  Iterative
Serial Yes No No No No No No No
Matrix Serial
IterativeYes Yes No No No No No No
Matrix DMP
IterativeYes Yes No No No No No NoSymmetric Positive
DefiniteSymmetric Non-
Positive DefiniteNon-symmetric
Positive DefiniteNon-symmetric, Non-
positive Definite
Real Complex Real Complex Real Complex Real Complex
R R
C
1RC
C R
E 
CE
KkkkKkkk1–Kmk
m i=k1–
– = Kmk1 ik1–
i Kkk
R minKkkkKkkk1– =
KkkkKkkk1–
nlostlog10R –=&lt;/p&gt;
&lt;p&gt;167 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
The singularity ratio also indicates the presence of rigid body modes in the structure. In that case, the elimination process
produces zeros on the diagonal . Exact zeros never appear because of numerical error; therefore, the singularity
ratio is of the order
(5-6)
where  is the accuracy of floating-point numbers used in the calculation. For most versions of SOL 400, .
If rigid body modes are present,  is very small or negative. If either a zero or a negative diagonal is encountered,
execution of SOL 400 is terminated because the matrix is diagnosed as being singular.
You can force the solution of a nonpositive definite or singular matrix. In this case, SOL 400 does not stop when it
encounters a negative or small term  on the diagonal. If you use Lagrangian multiplier elements, the matrix becomes
non-positive definite and MSC Nastran Implicit Nonlinear automatically disables the test on the sign of . However,
it still tests for singular behavior.
MSC Nastran SOL 400 also supports the PARAM,AUTOSPC , in which case the rigid body mechanism is suppressed by
putting a large number on the diagonal. The value of EPS on the  AUTOSPC  case control is set to 1.E-8.
Matrix Conditioning
Matrix conditioning for linear systems such as those encountered in SOL 101 is governed by a few phenomenon which can
be controlled by the user.
1.Rigid body modes – the system is not fully constrained. In the case of a structure such as a building, this is a user
error, and one should use SPC to insure that there are no rigid body models. In the case of a plane or rocket, this is
by design, so the inertia relief ( INREL  parameter) should be used. If you are not sure if one has constrained the rigid
body modes, one can use the AUTOSPC  case control option.
2.Poorly conditioned matrices because continuum elements are used with very high aspect ratios. Typically aspect
ratio &amp;gt; 100 cause problems in structural analysis. This is less of a problem in heat transfer. In such case, either
improve the mesh or switch to beam or shell elements.
3.Shell or beam element that are very thin. The problem is due to the mismatch of the (high) membrane and (low)
bending stiffness. This is more likely to occur for shell models, in which case it may be beneficial to switch to
membrane elements. Note:   The correctness of a solution obtained for a linearized set of equations in a nonpositive definite system is not
guaranteed.Kkkk0
R O10ndigit – =
ndigitndigit12
Kkkk
Kkkk
Kkkk&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution of Matrix Equations168
Main Index
4.Flat shells, because of the formulation in the classic CQUAD4  and CTRIA3  shell elements – if they are flat a
singularity occurs associated with the normal to the surface. The K6ROT parameter may be used to eliminate this
problem.
5.Disparity in material moduli, for example if the Young’s modulus of one material is 1.e7 and another material is
1.e-1. Be sure one does not have data errors in model.
6.Poisson’s ratio =0.5 for conventional solid elements, either set Poisson’s ratio to 0.49 and/or use advanced elements.
7.Orthotropic materials where material data is close or beyond the stability limits.
8.Conflicting constraints, implying that degrees of freedom are treated as retained after previously defining them as
constrained can lead to poor conditioning. Occasionally this can be manually corrected, but the recommended
procedure is to use the AUTOMSET,YES parameter. It should be noted that this process has a cost associated with
it, but it is strongly recommended especially when using contact using the Node-to-Segment perspective and the
LMT2MPC=1  on the MDLPRM  bulk data entry.
For Nonlinear analysis, additional sources of poor matrix conditioning may include:
9.Use of rigid elements ( RBAR, RBAR1, RJOINT, RROD, RTRPLT, RTRPLT1, RBE1, RBE2 , and RBE3 ) with
Lagrange multipliers may lead to poor numerical conditioning.
The RIGID control case command selects the type of rigid element. It has the following format:
There are several strategies:
LINEAR  will select the linear rigid elements, LAGRAN  will select the Lagrange rigid element with the Lagrange
multiplier method, and LGELIM  will select the Lagrange element with the Lagrange elimination method.
If RIGID  control case command does not exist in the user case control file for SOL 400, the selection
RIGID=LAGRAN  is assumed.
If only small rotations occur, and all the nonlinearity is due to material behavior then RIGID=LINEAR  may be used.
Else, one can use RIGID=LGELIM .
10. When materials exist in the model that exhibit strain softening, the conditioning number will be adversely effected.
This may occur due to plasticity or rate effects.
11. When structural buckling occurs. This may be global buckling such as in classical Euler beam or column buckling
or the wrinkling of aerospace panels. The user can use NLSTEP  to obtain a solution. The alternative is to
incorporate dynamics into the model.
12. Contact, especially when a body separates and hence now has multiple rigid body modes.RIGIDLINEAR
LAGRAN
LGELIM=&lt;/p&gt;
&lt;p&gt;169 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
13. Contact, when using Node-to-Segment the default implementation is to use Lagrange multipliers. Lagrange
multipliers result in ill conditioned systems because theoretically they result in an exact zero on the diagonal. This
issue can be resolved by using the option LMT2MPC=2  on the MDLPRM bulk date entry. This is not necessary when
activating the Pardiso solver through the SPARSESOLVER  executive control statement. This technique cannot be
used in a heat transfer or a coupled thermal-mechanical analysis.
14. The numerical issues associated with Lagrange multipliers can be mitigated using the PARAM, LMFACT.  The
default value of LMFACT  is given in the output. If the conditioning number is poor, it is suggested that the user enter
the printed value divided by 100.
15. Similar to LMFACT , one may want to reduce the value of the penalty factor by using the PARAM,PENFN.
Hence, for nonlinear models, it is very useful to examine the conditioning number during the incremental process.
The SPARSESOLVER executive control statement may be used to control the amount of information regarding the
numerical pivoting.
Numerical Stabilization
MSC Nastran provides linear springs for the modeling of support conditions. These springs are activated via the following
two parameters and can help stabilize the model and allow user&amp;rsquo;s to get solutions in cases that would otherwise not converge.
These parameters should be used with care as they may add non-existent energy into the model that may significantly affect
the solution.
AUTOSPC  causes an SPC to be applied automatically to components of motion with zero or very small stiffness.
KDIAG
Default = -1.0 (SOL 400 with non-contact analysis), or 0.0 (SOL 400 with contact analysis)
In SOL 400 (nonlinear static and transient analysis), KDIAG  may be used to eliminate spurious mechanisms and
singularities in the nonlinear stiffness matrix. The absolute value of KDIAG  will be added to some or all of the diagonal
terms in the nonlinear stiffness matrix as follows:
The Scale Factors – LMFACT and PENFN
The LMFACT  and PENFN  parameters are the scale factor and penalty function for the kinematic elements. The purpose
of LMFACT  and PENFN  is to make the values of stiffness matrix of the kinematic elements and/or the contact
components about the same relative magnitude as those of the other elements in the model. Too small a value will produce
inaccurate results, and too large a value will produce numerical difficulties. The same value is usually assigned to both
LMFACT  and PENFN.  Under special requirement, user may assign different values for  LMFACT and PENFN . However,
user must exercise caution if different values are assigned to LMFACT  and PENFN . If PENFN=0.0  and LMFACT=0.0 , &amp;lt;0.0 For SOL 400, the absolute value of KDIAG is added to the diagonal term of null columns only.
=0.0 No action is taken.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.0 Add the value of KDIAG to all diagonal terms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution of Matrix Equations170
Main Index
then the solution method for the rigid elements becomes the pure Lagrange multiplier method instead of the augmented
Lagrangian method.
The default value for the kinematic element is computed automatically by SOL 400 based geometry of the individual
element and the average magnitude of the stiffness matrix. This means that actual scale factor is different for each kinematic
element.
Direct Solver
The direct solvers are robust for all solutions, though they may need more resources for large solid models. If poor numerical
conditioning is present (due to very thin shells, mixture of materials or buckling), then there is slight but negligible increase
in computational costs due to the need to perform more pivoting.
The MSC Nastran direct solvers (MSCLDL and MSCLU) can also benefit from parallelization and GPGPU technology.
The MSC solvers provides solutions for Distributed Memory, Shared Memory, and combinations. Because of the
continuous evolution of hardware and variable model size, it is difficult to predict the improvement in the performance.
The Intel MKL Pardiso solver was introduced in the MSC Nastran 2014.0 release. It shows greatly improved scalability
with SMP if there is enough memory available. The solver is activated using FACTMETH=PRDLDL on the
SPARSESOLVER executive control statement.
The SPARSESOLVER executive control statement can also be used to select other solver methods as well as other options.
However, it is recommended for direct solvers to use one of the MSC Nastran direct solvers or Pardiso.
Linear Equation Solution Parallelization
For MSC Nastran direct solvers, the SMP capability is activated on the MSC Nastran submittal by setting SMP=N and
results in parallelization at the kernel level in the decomposition (DCMP) module, forward-backward substitution (FBS)
module.
The Pardiso solver is the recommended solver when using SMP as it has better scalability on multi-core computers.&lt;br&gt;
However, it can consume 2-5x as much memory as the MSC Nastran direct solvers.
For MSC Nastran direct solvers, the DMP implementation is activated using DOMAINSOLVER STAT.  The number of
domains is set on the MSC Nastran submittal command DMP=M.
The DMP implementation is done using Message Passing Interface (MPI), and while the default MPI is acceptable, you do
have the freedom to choose a particular MPI.
The DMP direct solver only scales to DMP=2 and typically at DMP=4 and beyond the performance suffers.&lt;br&gt;
T oday the recommendation is to use SMP only, and to use Pardiso if there is enough memory available to have Pardiso run
in-core. The DMP implementation will continue to be supported and is the best available option when using SOL 400
with the MATDIGI bulk data entry.
Memory Usage
The user can specify the amount of memory used for the job, by specifying the memory on the command line. The default
is MEM=MAX , which indicates that the memory is equal to the maximum amount of memory “allowed”. This amount of&lt;/p&gt;
&lt;p&gt;171 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
memory set to by memorymaximum keyword. The default value of memorymaximum is 50% of the physical memory on
the machine.
When DMP is used for parallel simulation, then the amount of memory used for each process is set to memorymaxium
divided by the number of processes desired.
For example, for DMP=2 , the user is given one quarter of the available memory for each DMP process. The amounts given
to User Open Core, Executive System, Master, Scratch Memory (smem), and buffer Pool (bpool) are problem dependent.
For SOL 400 using MSCLDL, the standard division of memory to the various systems is designed to provide as much of
memory to bpool to reduce the I/O costs of element matrix computations. For SOL 400 using Pardiso, the division of
memory is designed to ensure that Pardiso is running in-core. While Pardiso solver can run out-of-core, it is recommended
to use MSCLDL if insufficient memory is available to use Pardiso in-core.
For this reason, it is often necessary to use more than half of the memory system when using Pardiso solver. This can be
achieved by setting memorymaximum=100gb  for a machine with 128 Gb of memory. In the following, we provide rough
details for a 4M degrees of freedom automobile body and the memory set by mem=max  with Pardiso followed by the amount
to keep the job completely in-core.
mem=max, smp=2,mode=i8
The amount required by Pardiso to be running in-core was 12.45 gb implying User OpenCore had enough memory for in-
core performance.
In some instances, it may be necessary to use more than half of the memory of the system to keep Pardiso in-core, and in
this case, one may use mem=max  along with memorymaximum=80gb  for the example described above.
Iterative Methods
Iterative solvers are a viable alternative for the solution of large systems. There are two types of iterative solver, element based
and matrix based. The SMETHOD  case control command specifies which type, if any, is to be used and further control is
specified using the ITER  bulk data entry. These iterative methods are based on preconditioned conjugate gradient methods.
The single biggest advantage of these iterative methods is that they allow the solution of very large systems at a reduced
computational cost. This is true regardless of the hardware configuration. The disadvantage of these methods is that the
solution time is dependent not only upon the size of the problem, but also the numerical conditioning of the system. A
poorly conditioned system leads to slow convergence – hence, increased computation costs.
When discussing iterative solvers, two related concepts are introduced: fractal dimension and conditioning number. Both
are mathematical concepts, although the fractal dimension is a simpler physical concept. Fractal dimension, the range of
which is between 1 and 3, is a measure of the “chunkiness” of the system. For instance, a beam has a fractal dimension of
1, while a cube has a fractal dimension of 3. In general, iterative methods are better when the fractal dimension of the
problem is &amp;gt; 2.5; i.e., dominated mostly by 3-D elements.Total System Memory Total MSC Nastran Memory User OpenCore Buffer Pool
96 gb 48 gb 35 gb 11.75 gb&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution of Matrix Equations172
Main Index
The conditioning number is related to the ratio of the lowest to the highest eigenvalues of the system. This number is also
related to the singularity ratio, which is reported in SOL 400 output when using a direct solution procedure. In problems
involving beams or shells, the conditioning number is typically small, because of large differences between the membrane
and bending stiffnesses.
There exist certain types of analyses for which the iterative solver is not appropriate. These types include:
Elastic analysis
Explicit creep analysis
Eigenvalue analysis
Elastic or explicit creep analysis involves repeated solutions using different load vectors. When a direct solver is used, this
is performed very efficiently using back substitution. However, when an iterative solver is used, the stiffness matrix is never
decomposed, and the solution associated with a new load vector requires a complete re -solution.
The iterative solvers are activated using the SMETHOD  case control command. One can activate the element based (CASI)
by using the SMETHOD=ELEMENT  or the matrix based iterative solver, using SMETHOD=MATRIX . The element based solver
is recommended. Both iterative solvers result in a significant decrease in the memory requirements, disk I/O and scratch
disk space.
An iterative solver has additional parameters that govern the accuracy, and hence, convergence of the linear solution phase.
Recall, that the Newton-Raphson controls still govern the accuracy of the total structural calculations.
Furthermore, the iterative solvers implemented are not designed to solve poorly conditioned problems or non-positive
definite models. For further details, see the section on Matrix Conditioning .
Iterative solvers use a preconditioner to improve the conditioning which reduces the number of iterations. This is set on
the ITER bulk data option.
For the matrix-based iterative solver, there are many preconditions that one can use where the default is the Block
Incomplete Cholesky (BIC). For well-conditioned systems, the Jacobi method may be faster.
For the Element based iterative solver there is only one choice:
ITER, PRECOND,CASI
The element based iterative solver has the following restrictions.
No GENEL elements
DMIG matrices must be small
Reduction to superelements is not possible.
No eigenvalue analysis
No Inertia Relief
No Scalar points, use conventional grid points
No heat transfer or thermal-mechanically coupled analysis
AUTOSPC is not supported.
The matrix based iterative solver overcomes some of these deficiencies.&lt;/p&gt;
&lt;p&gt;173 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
The additional controls available are available on the ITER  bulk data entry, the most significant ones are:
For a positive-definite system, the maximum number of iterations is equal to the number of active degrees of freedom. For
a well-conditioned system, the number of iterations is less than the square root of the number of of equations.
If the system is non-positive definite, a fatal error will occur in the NLSOLV module. This can occur for multiple reasons.
While switching to the direct solver will obtain a numerical solution, extra care is required that a meaningful engineering
solution is obtained.
Note that neither iterative solver can utilize GPGPU hardware accelerators.
The element based iterative solver automatically takes advantage of SMP if it is specified on the command line.
The matrix based iterative solver can be used in conjunction with DMP; see MDLPRM, DMPITER  for more details.
Iterative Solver Background
A linear finite element system is expressed as:
Ku = F (5-7)
And a nonlinear system is expressed as:
KTu = F - R = r (5-8)
where K is the elastic stiffness matrix, KT is the tangent stiffness matrix in a nonlinear system, u is the displacement vector,
F is the applied load vector, and r is the residual.
The linearized system is converted to a minimization problem expressed as:
u) = 1/2uTKu - uTF (5-9)
For linear structural problems, this process can be considered as the minimization of the potential energy. The minimum
is achieved when
u = K-1F (5-10)ITSMAX – The maximum number of iterations, for well-behaved systems this should
be in the order of magnitude of the square root of the number of degrees
of freedom. MSC Nastran uses a larger number.
ITSEPS – The convergence criteria – set to 1.e-6.
PARAM, CASIEMA {Yes,No} Yes – if the CASI solver encounters a poorly conditioned or non-positive
definite matrix, it will automatically switch to a direct solver. This is not
recommended.
PARAM,CASPIV, 1.e-10 – This is the pivot threshold for determining if the system is poorly
conditioned. A value less than this will cause CASI solver to print an error
message, and then Stop, unless PARAM,CASIEM,YES is used.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution of Matrix Equations174
Main Index
The function  decreases most rapidly in the direction of the negative gradient.
u) = F - Ku = r (5-11)
One method to solve both linear and nonlinear problems is to use iterations. The objective of the iterative techniques is to
minimize the function, , without decomposing the stiffness matrix. In the simplest methods,
uk+1 = uk + krk (5-12)
where
(5-13)
The problem is that the gradient directions are too close, which results in poor convergence.
An improved method led to the conjugate gradient method, in which
uk+1 = uk + kPk (5-14)
(5-15)
The trick is to choose Pk to be K conjugate to P1, P2, &amp;hellip; , Pk-1. Hence, the name “conjugate gradient methods. Note the
elegance of these methods is that the solution may be obtained through a series of matrix multiplications and the stiffness
matrix never needs to be decomposed.
Certain problems which are ill-conditioned can lead to poor convergence. The introduction of a preconditioner has been
shown to improve convergence. The next key step is to choose an appropriate preconditioner which is both effective as well
as computationally efficient. The easiest is to use the diagonal of the stiffness matrix. The incomplete Cholesky method has
been shown to be very effective in reducing the number of required iterations.
Perturbation
The perturbation methods that require eigenvalue analysis cannot be performed when using the matrix based iterative
solver. However, the element based iterative solver can be used with any of the ANALYSIS  case control commands.
MSC Nastran has multiple methods to perform the eigenvalue analysis required for either modal dynamics or buckling.
The METHOD  case control is used to indicate that an eigenvalue analysis will be performed.
Normal Modes Analysis
Linear Analysis
where
K is the linear stiffness matrixkrkTrkrkTKrk=
kPkTrk1–PkTKPk=
Ki2M – i0=&lt;/p&gt;
&lt;p&gt;175 Chapter 5: Computational Methods
Solution of Matrix Equations
Main Index
Nonlinear Analysis
where
MSC Nastran provides many methods to solve the eigenvalue problem :
1.Givens method
2.Householder method
3.Modified Givens method
4.Modified Householder method
5.Inverse power method
6.Sturm modified inverse power method
7.Lanczos
8.ACMS
The EIGRL  entry is used for the Lanczos method, and the EIGB  entry is used for power sweep methods.
Buckling
The linear buckling simulation is defined as obtaining the eigenvalues to the problem
[K - i&lt;em&gt;Kd]i = 0
where
For nonlinear buckling , we obtain the eigenvalues of the system
[KT - i&lt;/em&gt;Kid]i = 0KTis the tangent stiffness matrix
K is the linear stiffness matrix
Kd is the differential stiffness matrix
i , i are the eigenvalue and eigenvector, respectively.
Pa is the prescribed load to obtain the stress  used in the differential stiffness matrix
is the critical load KTi2M – i0=
picri*Pa =

picr&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Computer Hardware176
Main Index
where
The techniques include:
1.Inverse Power Sweep
2.Enhanced Inverse Power Sweep
3.Lanczos
If multiple number of buckle modes are required or the number of degrees of freedom is large (greater than 10000), then
the Lanczos method is the recommended. But if Lagrange Multipliers are used either in contact or for rigid elements, often
the Enhanced Inverse Power Sweep method is recommended. The EIGRL  entry is used for the Lanczos method, and the
EIGB entry is used for Power Sweep methods.
Note if the K or KT matrix is non symmetric, then complex eigenvalues will be obtained.
Only elements which have a differential stiffness matrix will contribute to the buckling simulation.
This includes CONROD, CROD, CTUBE, CBAR, CBEAM, CBEAM3, CBEND, CQUAD4, CQUADR, CQUAD8,
CTRIA3, CTRIAR, CTRIA6, CHEXA, CPENTA , and CTETRA .
One should note that the interface elements used for cohesive analysis do not have a differential stiffness matrix but may
be included in a buckling simulation.
Computer Hardware
Memory Systems
MSC Nastran is available on a variety of hardware and operating systems, including Windows 7, Windows 10, and various
Linux flavors. MSC Nastran is only available for what has historically been referred to as i8 mode. The MSC Nastran 2017
release is the first release where this is the case. The i8 mode effectively gives the user access to all of he hardware memory
on the system.
Note that allocating all of the hardware memory to your job is highly discouraged. This will result in memory conflict with
the operating system and would adversely affect other user’s jobs. If you are running on a standalone machine, then memory
maximum can be set to 80-90% of the real memory on the computer. KTis the tangent stiffness matrix
Kid is the incremental differential stiffness matrix due to a change in stress  d ue to the change in Load from&lt;br&gt;
Pn to Pn+1
Pn, Pn+1 are the applied loads at increment n and n+1.picrPni*Pn1+Pn–  + =&lt;/p&gt;
&lt;p&gt;177 Chapter 5: Computational Methods
Computer Hardware
Main Index
Buffer Pool
When MSC Nastran performs I/O, it buffers the process through a region of memory. This is called the buffer pool or
BPOOL. The purpose of this is to reduce the amount of physical disk I/O during the calculations. In today’s computing
environment where CPU speeds have improved at a greater rate than disk speeds and memory costs have been reduced, this
is highly beneficial.
For most solution sequence, the buffer pool is 25% of the memory. When SOL 101 or SOL 400 is used, the estimate
program is used to determine BPOOL size. The remaining memory would be used for storing the engineering data, the
stiffness matrix, and scratch space for the decomposition.
In general, the default values chosen by MSC are adequate, but as an alternative, the user can set size of the buffer pool
using the BPOOL command on the command line of the BUFFPOOL system cell.
Specify BPOOL in one of three ways:
a.bpool=N specifies number of GINO blocks for buffer pooling
b.bpool=size specifies a memory size for buffer pooling
c.bpool=Nx specifies a percentage of MEM to be used for buffer pooling
After a similar job has been run, the Run Statistics  in the.f04  file can serve as a guideline for setting the BPOOL in
subsequent runs.
Solid State Disk (SSD)
While not a capability directly within the MSC Nastran product, SSD may be successfully used to reduce the total wall
time of a solution. This is especially true from models that require out-of-core solution of the stiffness matrix.
Resource Recommendations
It is difficult to know exactly the amount of resources required for a simulation, the requirements are based upon the size
of the model (number or elements and grids), the element type, the connection of the stiffness matrix, the number of
modes, etc.  Neglecting the number of modes and focusing on the size of the model, the recommended memory is:
Up to 1 million degrees of freedom – 2 GB
Up to 5 million degrees of freedom – 8 GB
Up to 10 million degrees of freedom – 16 GB
Up to 20 million degrees of freedom – 64 GB
BUFFSIZE
BUFFSIZE  is the length of an MSC Nastran buffer in terms of 64-bit words. It controls the physical record size for data
storage/transfer that is contained in many MSC Nastran logical units. The default buffer size is 8193. The recommended
buffer size for large models is 65537 which is the largest allowed.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Computer Hardware178
Main Index
MPI Selection
The types of MPI available are :
On platforms which support more than one MPI implementation, a supported MPI implementation may be selected using
the mpiimplementation keyword. This keyword may be abbreviated as mpiimp .
For example, to select hpmpi  on linux64,
mpiimp=hpmpi
should be set on the command line or in the rc file.Operating System HPMPI IntelMPI MSMPI
Win 64 Available Not Available Default
Linux 64 Available Default Not available&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
6Setting Up, Monitoring, and
Debugging the Analysis
Introduction
Overview of Running a SOL 400 Job
Setting Up a SOL 400 Job
Analysis Procedures
Analysis Types
Setting Up the Analysis in Patran
Translation Parameters
Solution Parameters
Defining Subcases in Patran
Thermal Solution Subcases
Editing a MSC Nastran Input File
Monitoring the Analysis
SOL 400 A nalysis  Messages
Convergence
Rigid Body Modes&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction180
Main Index
Introduction
This chapter describes the practical steps involved in setting up and running MSC Nastran SOL 400 jobs, including the
use of Patran. The Patran UI is set up to guide you through the process of setting up the SOL 400 analysis, including the
job information for the executive section (select the solution type and solution parameters), the subcases and steps (create
subcases and steps and use subcase parameters to specify the required step/subcase control information), the job submission
(use Analyse - Entire Model - Full Run ), monitoring the job while it is running and once it is done (user Monitor - Job -
View sts  to monitor and Monitor - Job - View f06 to debug). It covers the Patran user interface (UI) and its capabilities for
setting up, submitting, and monitoring the job. It shows the user how to specify the analysis type, but does not go into any
detail about the analysis types of the individual steps being set up.  See Nonlinearity and Analysis Types  for the details of analysis
types.
In addition to describing the job set-up and execution, methods for monitoring and de-bugging the job are described. The
middle of the chapter describes the methods available for monitoring the job while it is running. Also, the Patran capabilities
for monitoring and viewing the various MSC Nastran analysis files such as .sts ,.f06 , etc. are covered. The last part of
the chapter describes the recommended approach for debugging a job that has failed. This includes guidance for
interpreting the error messages that are produced from simple formatting errors as well as resolving convergence problems
that may occur if the analysis ever gets to a point where it cannot arrive at an equilibrium condition and terminates.
Overview of Running a SOL 400 Job
Execution Procedure from the Command Line
The first step in running a SOL 400 analysis is generating the input file.
This can be done by:
1.using a graphical user interface such as Patran or SimXpert,
2.modifying an existing model/input file; or
3.from scratch using a text editor.
After the generation of the input file is complete, it is submitted for execution as a batch process (MSC Nastran is not an
interactive program). Once the input file has been submitted, you have no additional interaction with MSC Nastran until
the job is complete except that you can:
terminate the job prior to completion if it becomes necessary;
monitor several keys files such as, .f04 ,.f06 ,.sts ,.log .
MSC Nastran is executed with a command called nastran . (Your system manager may assign a different name to the
command.) The nastran  command permits the specification of keywords used to request options affecting MSC Nastran
job execution. The format of the nastran  command is:
nastran input_data_file [keyword1 = value1  keyword2 = value2 &amp;hellip;]&lt;/p&gt;
&lt;p&gt;181 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Overview of Running a SOL 400 Job
Main Index
where input_data_file  is the name of the file containing the input data and keywordi=valuei  is one or more
optional keyword assignment arguments. For example, to run an a job using the data file example1.dat , enter the
following command:
nastran example1
See Executing MSC Nastran  in the QRG .
The details of submitting a MSC Nastran job are specific to your computer system – contact your computer system
personnel or the MSC Nastran Installation and Operations Guide  for further information.
Using Patran to Execute MSC Nastran
The Analysis Application  controls the execution of MSC Nastran.
When the Action  is set to  Analyze,  the Method is set to  Full Run  or Analysis Deck , and the Apply  button is selected from
the Analysis  form, a jobname.bdf  file is created  and a MSC Nastran job is launched.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Setting Up a SOL 400 Job182
Main Index
When the analysis is successfully completed, one or more output file is produced. These output files can be directly
imported or attached into the Patran database for postprocessing by setting the Action  menu to Access Results.&lt;br&gt;
How to Tell When the Analysis is Done
If you submit the job from the MSC Nastran icon (i.e., outside Patran), as long as the parent window the job was run from
is active, the analysis is still running. If you submit the job from within Patran and use -stdout  when you execute Patran,
you can look in the Patran parent window and tell when it submits the MSC Nastran job and also when the MSC Nastran
job is completed. Once the job is complete, look in the parent window to see what files were generated.
How to Tell if the Analysis Ran Successfully
Look in the working directory and you will see the typical jobname.f06 , jobname.f04 , jobname.log . If these files
are there, you successfully submitted the MSC Nastran job. T o see if the run was successful, open jobname.sts  and look
for the number at the bottom. For most analyses, Exit= 0 means the run was successful. The following is an example of
what the end of the .sts  file looks like:
Job ends with exit number:       0
total wall time:          nn.nn
total CPU time:         mm.mm
exit DEFINITION &amp;mdash;&amp;ndash;
= 0  job terminates normally
= 1  job terminates abnormally
If the job did not complete successfully, look in the .f06  file for &amp;ldquo;FATAL&amp;rdquo;  errors, or check the .f04  file for resource issues.
Setting Up a SOL 400 Job
Executive Control Statements
The SOL 400 executive control statement is as follows:
SOL 400
See Chapter 2: MSC Nastran Files, The Executive Control Section Overview  for an explanation of some of the options.
Solution Type
MSC Nastran SOL 400 can simulate many different types of structural and thermal responses. In general, a structural
analysis can be either static or dynamic. Both static and dynamic analysis may simulate linear response or nonlinear&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P11</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_011/</guid>
      <description>
        
        
        &lt;p&gt;183 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Setting Up a SOL 400 Job
Main Index
response. SOL 400 incorporates the formulations and functionality to simulate nonlinear static and dynamic structural
responses.
Specifying the Solution Type
The specific procedure MSC Nastran will run is specified on the ANALYSIS  case control entry. SOL 400 represents
multiple types of analysis procedures including structural, thermal, or multi-physics; any of which can be specified using
the case control entries (see Analysis Procedures  on how to use case control to specify the analysis procedures, including multi-
physics/multistep).
Steps and Subcases
Creating multiple steps allows you to simulate complex loading histories and even mix and match different analysis
procedures as required to get and accurate and efficient solution. Each step is a collection of loads and boundary conditions
that define one phase of the behavior being modeled. For SOL 400, nonlinear analysis runs the starting point of each step
is the ending point of the previous step.
Creating multiple subcases allows you to “stack” simulations and efficiently analyze multiple stand-alone jobs in one run.
Each subcase should represent a complete stand-alone loading history, while gaining the efficiency of not having to re-form
any matrices that can be re-used. In SOL 400, multi-subcase runs the starting point of each subcase is an unstressed, un-
deformed state that is completely independent of the previous subcase .
Specifying Subcases
Each subcase is designated with the following case control command.
Multi-step or Multi-subcase Analyses
SOL 400 analysis allows for six analysis type combinations (nonlinear single physics,  nonlinear chained physics, nonlinear
coupled physics, linear perturbation analysis, nonlinear chained analysis with mesh/time change physics and standard linear
physics).  If there are multiple subcases, the linear subcases will be solved first.Entry Description
ANALYSIS Specifies the analysis procedure to be used for the step or subcase being set up.
Entry Description
SUBCASE Delimits and identifies a subcase.
STEP Delimits and identifies a section of a subcase, typically delineating one load step, or perturbation
step in the analysis (see Chapter 4: Solution Strategies for Nonlinear Analysis,  on multi-stepping
for a more detailed explanation of how STEP s and SUBCASE s work together).&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Analysis Procedures184
Main Index
The general rule is: The solutions of all SUBCASEs  are independent of each other. The solution  of any STEP  is a
continuation of the solution of the previous STEP  in the same SUBCASE.  The solutions of the SUBSTEPs  occur
sequentially within a STEP  (coupled analysis).
Analysis Procedures
The STEP  is the SOL 400 mechanism for associating loads and boundary conditions, output requests, and various other
parameters to be used during part of a complete run. Each step can be designated with one of the analysis types listed below.
For each Analysis Type , you will define the Solution Parameters  and Output Requests ; these collectively constitute the
Analysis Procedures.
In MSC Nastran, case control commands provide the loads and constraints, and load incrementation method, and controls
the program after the initial elastic analysis. Case control commands also include blocks which allow changes in the initial
model specifications. Case control commands can also specify print-out and postprocessing options. Each set of load sets
must begin with a SUBCASE/STEP  command and be terminated by another SUBCASE/STEP  or a BEGIN BULK&lt;br&gt;
command. If there is only one load case, the SUBCASE/STEP  entry is not required. The SUBCASE  option requests that
the program perform another increment or series of increments. The input format for these options is described in QRG .
Analysis Types
Analysis Types  for steps/subcases in SOL 400 include the following:
Type Description
Linear Static Static stress analysis is used when inertia effects can be neglected. During a linear static step, the
model’s response is defined by the linear elastic stiffness at the base state, the state of
deformation and stress at the beginning of the step.
Nonlinear Static Nonlinear static analysis requires the solution of nonlinear equilibrium equations, for which
SOL 400 uses Newton’s method. Many problems involve history dependent response, so that
the solution is usually obtained as a series of increments, with iteration within each increment
to obtain equilibrium. For most cases, the automatic incrementation provided by SOL 400 is
preferred, although direct user control is also provided for those cases where you have experience
with a particular problem. This includes creep, viscoelastic and body approach
Normal Modes This solution type uses eigenvalue techniques to extract the frequencies of the current system,
Modal Transient
DynamicThe Duhamel Integral method integrates all of the equations of motion through time. The
accuracy is based upon the number of modes extracted.
Nonlinear
Transient
DynamicThis solution type is used when nonlinear dynamic response is being studied. For most cases,
the automatic incrementation provided is preferred, although direct user control is also
provided for those cases where you have experience with a particular problem. The Generalized-
alpha method has been presented as an unconditionally stable (for linear systems), second-order
algorithm that allows user-controllable numerical dissipation.&lt;/p&gt;
&lt;p&gt;185 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Setting Up the Analysis in Patran
Main Index
A complete description of the available analysis types is provided in Chapter 3: Nonlinearity and Analysis Types .
Setting Up the Analysis in Patran
Prior to selecting a Solution Type , check to see that under Analysis Preferences , the Analysis Code  is set to MSC Nastran ,
and the Analysis Type  is set to Structural  or Thermal , depending on the type of solution desired.Direct Frequency
ResponseFrequency response analysis is a method used to compute structural response to steady-state
oscillatory (such as rotating machinery) excitation. In frequency response analysis the excitation
is explicitly defined in the frequency domain. The direct method solves the coupled equations
of motion in terms of forcing frequency
Modal Frequency
ResponseThe modal method utilizes the mode shapes of the structure to reduce and uncouple the
equations of motion. The solution for a particular forcing frequency is obtained through the
summation of the individual modal responses.
Direct Complex
EigenvalueComplex eigenvalue analysis is used to compute the damped modes of structures and assess the
stability of systems modeled with transfer functions. Direct Complex eigenvalue analysis solves
the coupled equations of motion.
Modal Complex
EigenvalueThe modal method utilizes the mode shapes of the structure to reduce and uncouple the
equations of motion.
Steady State Heat
T ransferThis solution type is for heat transfer problems where the  temperature field can be found for
the current contact and deformation states of the bodies being studied. (e.g., it is assumed that
there are no changes in the structure during the heat transfer analysis). For cases where there are
mechanical changes in the structure a coupled thermal-structural solution must be performed.
T ransient Heat
T ransferThis solution type is for transient heat transfer problems  where the temperature field can be
found based on the current state of stress and deformation of the bodies being studied (e.g., it
is assumed that there are no changes in the structure during the heat transfer analysis). For cases
where there are mechanical changes in the structure a coupled thermal-structural solution must
be performed. For all transient heat transfer cases, the time increments may be specified directly,
or will be selected automatically based on a user prescribed maximum nodal temperature change
in a step. Automatic time incrementation is generally recommended.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Setting Up the Analysis in Patran186
Main Index
T o set the Solution Type:
1.Click on the Analysis  application button.
2.On the Analysis  application form, click Solution Type&amp;hellip;  and select  Implicit Nonlinear  from the list of available
Solution Type s.
3.Under Subcases&amp;hellip;, select the solution type to be used for the step you are currently setting up.
4.Specify the Subcase Parameters for the current step.
5.Repeat 3 - 4 for each step .
6.Under the Subcase Select&amp;hellip;  menu, select the steps you have set up in the correct order and deselect the Default
step/subcase unless you used it .&lt;/p&gt;
&lt;p&gt;187 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Translation Parameters
Main Index
7.Hit Apply  on the main form to submit the job .
8.Click Subcases&amp;hellip;  and select an analysis type from the Analysis Type  pull-down menu.
Translation Parameters
Translation parameters define file formats, numerical tolerances, processing options, numbering offsets, and include files
used by Patran.
Defining Translation Parameters in Patran
To set translation parameters:
1.Click on the Analysis  Application button to bring up the Analysis Application  form.
2.On the  Analysis Application  form, click Translation Parameters&amp;hellip;Note:   There are two ways to set up SOL 400 analysis jobs in Patran. The first is to select Implicit Nonlinear
as the Solution Type. This option gives you access to most of the various analysis capabilities and
numerical controls available through SOL 400. The second option uses the same menus as if you were
setting up a non-SOL 400 analysis, such as a SOL 106 or 129, but simply changes the executive
command line. T o use this second option, simply set up your analysis the same way you would a non-
SOL 400 job and click on the SOL 400 Run toggle on the Solution Parameters form. The need to use
the non-SOL 400 menus is is particularly true for thermal and frequency response analysis where the
ONLY way to set up the step is to use, respectively, the thermal preference and the Frequency Response
solution type menus to set up the analysis.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution Parameters188
Main Index
Solution Parameters
Solution parameters control a range of functions in the SOL 400 analysis. Functions such as selecting the solver type,
establishing a restart, specifying domain decomposition are all part of the solution parameters.Tolerances Division – prevents divide by zero errors.
Numerical – determines if two real values are equal.
Writing – determines if a value is approximately zero when generating a bulk data
entry field.
Bulk Data Format Sorted Bulk Data – bulk data written in alphabetical order.
Card Format – small or large field.
Grid Precision Digits – specifies where to round off a grid point coordinate
before it’s written out to the .bdf file. For example, if this value is specified as 2
the number 1.3398 will be written out as 1.34.
Node Coordinates Defines which coordinate frame is used when generating the grid coordinates.
Number of Tasks Represents the number of processors to be used to run an analysis. It is assumed that
the environment is configured for distributed parallel processing.
Numbering Options&amp;hellip; Subform used to indicate offsets for all IDS to be automatically assigned during
translation.
Bulk Data Include File&amp;hellip; Prompts you for the filename of the include file.&lt;/p&gt;
&lt;p&gt;189 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Solution Parameters
Main Index
Defining Solution Parameters in Patran
To set solution parameters:
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.On the Analysis Application  form, click Solution Type&amp;hellip;  and select  Implicit Nonlinear.  Click  Solution
Parameters&amp;hellip;
Solver Options Specifies the solver to be used in numerically inverting the system of linear
equilibrium equations.
Contact Parameters Defines options for detecting and handling contact.
Direct Text Input This subform is used to directly enter entries in the File Management, Executive
Control, Case Control, and bulk data sections of the MSC Nastran input file.
Restart Parameters Includes a Restart  option in the MSC Nastran input file.
Advanced Job Control Sets alternate versions of the solver and alternate formats for the results file.
Domain Decomposition Designates that domain decomposition be done manually, semi -automatically, or
automatically.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Solution Parameters190
Main Index
Requesting Output For a Step
Creating a step includes requesting output.
You should suppress your output as much as possible! (Nonlinear jobs can quickly fill up your disk) .
•Usually you will output results every so many increments to reduce the size of the output file .
•Results are written in file job_id.op2/master/dball , which must be read back for postprocessing,
including visualizing results&lt;/p&gt;
&lt;p&gt;191 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
Defining Subcases in Patran
To define a subcase:
1.Click on the  Analysis Application button to bring up the Analysis Application  form.
2.From the Analysis Application  form click Subcases&amp;hellip;
Define History by Selecting Load Steps
Creating a step includes selecting load cases
Create the load steps to define the load history. The load step selection order specifies order in which loads and
boundary conditions are applied
Note that you are specifying total load, not incremental load. That is, put all loads in the load case that belong to
the step, even those you already used in the previous general step.
Only those steps that are selected will be included in the analysis .
Subcase Name Specifies a name for a new subcase.
Available Load Cases Selects one or more available load cases to be applied to the new subcase.
Subcase Options
Subcase ParametersControls load increment and iteration parameters for the subcase. Also defines
the nonlinear effects for the subcase.
Output RequestsDefines the nodal and element results quantities and also determines the
frequency of results reporting.
Direct Text InputThis subform is used to directly enter entries in the File Management, Executive
Control, Case Control, and Bulk Data Sections of the MSC Nastran input file.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Subcases in Patran192
Main Index
Subcase Parameters
The subcase parameters represent the settings in MSC Nastran Case Control and Bulk Data Section that take effect within
a subcase and do not affect the analysis in other subcases. Subcase parameters are dependent on the type of analysis being
performed. The set of subcase parameters applicable for each analysis type are described in the following sections.
Static Subcase Parameters
For static nonlinear analysis, the subcase parameters control the iteration process and the load incrementation.
Defining Static Subcase Parameters in Patran
1.Click the Analysis Application  button to bring up Analysis Application  form. Click on Solution Type  and check
to see that Implicit Nonlinear  is the selected Solution Type,  then click OK.
2.On the Analysis  form select Subcases&amp;hellip;  and choose  Static  from the Analysis Type  pull-down menu.
3.Click Subcase Parameters&amp;hellip;Select Superelements Defines which superelements are to be included in the subcase.
Select Explicit MPCs Selects explicit MPCs to be included in the subcase.
Entry Description
NLSTEP Defines parameters for automatic load/time stepping used in SOL 400.
NLPARM Nonlinear Static Analysis Parameter Selection.
NLPCI Defines a set of parameters for the arc -length incremental solution strategies in nonlinear static
analysis.
Note:
1.The ARCLN method is supported in permanent glue contact analysis.
2.The ARCLN method is not supported in general contact analysis.
3.The ARCLN method should not be used with SPCD or SPCR.&lt;/p&gt;
&lt;p&gt;193 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
Specifying Creep Subcase Parameters
The creep analysis option is activated in MSC Nastran through the NLSTEP  bulk data entry. The creep time period and
control tolerance information are input through the as usual on the NLSTEP  form. This option can be used repeatedly to
define a new creep time period and new tolerances. These tolerances are defined in the section on Iteration Parameters.
Alternatively, a fixed time step can also be specified. In this case, no additional tolerances are checked for controlling the
time step.Linearity Prescribes the nonlinear effects for the subcase.
Nonlinear Solution Parameters
Nonlinear Geometric EffectsDefines the type of geometric or material nonlinearity to be included in
the subcase.
Follower Forces Specifies whether forces will follow displacements.
Load Increment Params&amp;hellip; Defines whether the load increments will be fixed or adapted in each
iteration and the method by which adaptive load increments will be
determined.
Iteration Parameters&amp;hellip; Sets forth the iterative procedures that are employed to solve the
equilibrium problem at each load increment.
Contact Table&amp;hellip; Activates, deactivates, and controls the behavior of contact bodies in the
analysis.
Entry Description
NLSTEP Nonlinear Static Analysis Parameter Selection for doing creep analysis.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Subcases in Patran194
Main Index
Defining Creep Subcase Parameters in Patran
1.Click the  Analysis Application button to bring up Analysis Application  form. Click on Solution Type  and check
to see that Implicit Nonlinear  is the selected Solution Type,  then click OK.
2.On the Analysis  form select Subcases&amp;hellip;  and choose  Creep from the Analysis Type  pull-down menu.
Normal Modes Subcase Parameters
For normal modes nonlinear analysis, the subcase parameters control the eigenvalue extraction techniques and the range of
frequencies to be targeted for extraction.
Defining Normal Modes Subcase Parameters in Patran
1.Click the Analysis Application  button to bring up Analysis Application  form. Click on Solution Type  and check
to see that Implicit Nonlinear  is the selected  Solution Type , then click OK.MATVPMA Defines creep characteristics based on experimental data or known empirical creep law. This material
definition should be used with advanced elements.
CREEP Defines creep characteristics based on experimental data or known empirical creep law. This material
definition should be used with conventional elements.
Creep Solution Parameters
Procedure Selects Implicit or Explicit Creep method.
Nonlinear Geometric EffectsDefines the type of geometric or material nonlinearity to be
included in the subcase.
Follower Forces Specifies whether forces will follow displacements.
Increment T ype Defines a fixed or adaptive increment method.
Adaptive Increment Parameters&amp;hellip; For adaptive methods, sets boundaries for incrementation.
Iteration Parameters Sets forth the iterative procedures that are employed to solve the
equilibrium problem at each load increment.
Contact Table&amp;hellip; Activates, deactivates, and controls the behavior of contact bodies
in the analysis.
Entry Description
EIGRL Defines data needed to perform real eigenvalue (vibration or buckling) analysis with the Lanczos
method (recommended).
EIGR Defines data needed to perform real eigenvalue analysis.Entry Description&lt;/p&gt;
&lt;p&gt;195 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
2.On the Analysis  form select Subcases&amp;hellip;  and choose Normal Modes  from the Analysis Type  pull-down menu.
3.Click  Subcase Parameters&amp;hellip;
Specifying Transient Dynamic Subcase Parameters
For transient dynamic nonlinear analysis the subcase parameters control the iteration process and the load incrementation.
Defining Transient Dynamic Subcase Parameters in Patran
1.Click the Analysis Application  button to bring up Analysis Application  form. Click on Solution Type  and check
to see that Implicit Nonlinear is the selected  Solution Type , then click OK.
2.On the Analysis  form select Subcases&amp;hellip;  and choose Transient Dynamic  from the Analysis Type pull-down menu. Extraction Method Defines the method to use to extract the real eigenvalues.
Lancozs Parameters
Number of Modes Indicates an estimate of the number of eigenvalues to be located.
Lowest/Highest FrequencyDefines the lower and upper limits to the range of frequencies to be
examined.
Sequence Checking Requests that Sturm sequence checking be performed on the extracted
eigenvalues.
Entry Description
NLSTEP Parameters for automatic load/time stepping for both static and transient nonlinear analysis
(recommended).
TSTEPNL T raditional way to specify Nonlinear Dynamic Analysis Parameter Selection. Has been replaced by
NLSTEP&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Subcases in Patran196
Main Index
3.Click Subcase Parameters&amp;hellip;
Specifying Body Approach Subcase Parameters
For body approach analysis the subcase parameters control the iteration process and the load incrementation.
Defining Body Approach Subcase Parameters in Patran
1.Click the Analysis Application  button to bring up Analysis Application  form. Click on Solution Type and check
to see that Implicit Nonlinear  is the selected Solution Type,  then click OK.Linearity Prescribes the nonlinear effects for the subcase.
Nonlinear Solution Parameters
Nonlinear Geometric EffectsDefines the type of geometric or material nonlinearity to be included in
the subcase.
Follower Forces Specifies whether forces will follow displacements.
Load Increment Params&amp;hellip; Defines whether the load increments will be fixed or adapted in each
iteration and the method by which adaptive load increments will be
determined.
Iteration Parameters&amp;hellip; Sets forth the iterative procedures that are employed to solve the
equilibrium problem at each load increment.
Contact Table&amp;hellip; Activates, deactivates, and controls the behavior of contact bodies in the
analysis.
Entry Description
BCMOVE Specifies movement of rigid surfaces.&lt;/p&gt;
&lt;p&gt;197 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
2.On the Analysis  form select Subcases&amp;hellip;  and choose Body Approach  from the Analysis Type  pull-down menu.
3.Click Subcase Parameters&amp;hellip;
Specifying Complex Eigenvalue Subcase Parameters  in Patran
For transient dynamic nonlinear analysis the subcase parameters control the iteration process and the load incrementation.
Defining Complex Eigenvalue Subcase Parameters in Patran
1.Click the Analysis Application  button to bring up Analysis Application  form. Click on Solution Type  and check
to see that Implicit Nonlinear  is the selected Solution Type,  then click OK.
2.On the Analysis  form select Subcases&amp;hellip;  and choose Complex Eigenvalue  from the Analysis Type  pull-down menu.
3.Click Subcase Parameters&amp;hellip;Body Approach Solution Parameters
Total Time Places a time step option in the Load Step.
Synchronized If ON, specifies that when the first rigid body comes into contact, the rest stop moving.
Contact Table&amp;hellip; Activates, deactivates, and controls the behavior of contact bodies in the analysis.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Subcases in Patran198
Main Index
Specifying Frequency Response Subcase Parameters
When setting up a frequency response analysis in Patran it is necessary to use the same menus as if you were setting up a
SOL 108 or 111 analysis, and then manually edit the executive input command lines to specify SOL 400 as the solution
type. Formulation Specifies whether a direct or modal superposition solution will be
performed.
Solution Parameters
Complex Eigenvalue Opens Complex Eigenvalue Extraction input parameters form.
Initial Condition Load Factor&amp;hellip; Multiplier applied to loads and constraints used as initial conditions of
complex eigenvalue analysis.
Enable Rotor Dynamics&amp;hellip; Toggle this ON to enable Specify Spinning Properties  form which
allows user to input rotordynamics properties.
Contact Table&amp;hellip; Toggle Use Contact Table ON  to use of contact table rather than
contact pairs in the analysis. Once toggled ON, the Contact Table&lt;br&gt;
button brings up contact table input form.
Break Squeal&amp;hellip; Allows user to input parameters used for break squeal analysis.&lt;/p&gt;
&lt;p&gt;199 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
Thermal Solution Subcases
Three solution types are supported in the Patran MSC Nastran thermal interface: steady state, transient, and structural-
thermal analysis. These analysis types employ nonlinear solution algorithms so that nonlinear material properties or
boundary conditions can be included in the model.
Subcase Parameters Setup for Steady State Heat Transfer Analysis&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Subcases in Patran200
Main Index
Setting Up a Sequential or Coupled Thermal Stress Analysis
Patran will allow user&amp;rsquo;s to set up and run a SOL 101 sequential thermal - stress analysis by setting up a thermal analysis
subcase and a SOL101 subcase in the same database (this requires changing the preference from MSC Nastran Structural
to MSC Nastran Thermal under Preferences - Analysis) and then select and running the subcases in the order of: 1) thermal;
2) structural. This procedure can provide an input file that can easily be modified to support either sequentially coupled,
or fully coupled thermal stress analysis using SOL 400. After creating the model with all of the required thermal and
structural properties and LBC&amp;rsquo;s.&lt;/p&gt;
&lt;p&gt;201 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Defining Subcases in Patran
Main Index
Setting Up Multi-step Analyses
Chapter 8: Load and Constraint Conditions  describes how loading histories can be specified by grouping loads and constraints into
STEP s. The loading history is then specified by setting up the analysis such that the loading steps are run in the proper
sequence. In Patran, the loads and constraints are grouped using load cases, and each MSC Nastran STEP applies the loads
and constraints specified in that Patran load case. The previous sections described how to specify the subcase parameters
(equivalent to  STEP  parameters) that go along with each STEP.  Part of creating the step is specifying the Patran load case
containing the loads and constraints of that step and the final action in setting up the job is selecting the steps in the correct
order such that the loading sequence is correct. This action is done using the Subcase Select  form in Patran.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Editing a MSC Nastran Input File202
Main Index
The following points apply to selecting SOL 400 STEP s:
Creating a step includes selecting load cases
Create the load steps to define the load history
The load step selection order specifies the order in which loads and boundary conditions are applied
Note that you are specifying total load, not incremental load. This means you must put all loads in the load case
that belong to the step, even those you already used in the previous general step
Only those steps that are selected will be included in the analysis
In linear analysis, subcases refer to a separate analysis case constituted by substituting a different load vector into the
equation, making each subcase the equivalent of a separate analysis. SOL 400 has kept this terminology and allows you to
run multiple separate analyses in the same job by treating each subcase as a separate analysis. This treats the structure at the
beginning of the first step of the subcase as an un -deformed, unloaded structure with no residual stresses or strains carried
over from the previous subcase. This is in opposition to a step, where the loads and conditions in place at the end of the
previous step constitute the starting point of the next step. Thus, a series of steps in one subcase constitute a set of loading
steps in a separate analysis.
Editing a MSC Nastran Input File
There may be instances when you want to directly edit the MSC Nastran bulk data file. Some experienced MSC Nastran
users may want to add options directly to specific parameters and bulk data entries. Patran provides direct access to the bulk
data file as follows.
T o edit an existing bulk data file:
1.Click on the Analysis  Application icon to bring up the Analysis application form.
2.Set the Action&amp;gt;Object&amp;gt;Method combination to Analyze&amp;gt;Existing Deck&amp;gt;Full Run .
3.Click Edit Input File&amp;hellip;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P12</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_012/</guid>
      <description>
        
        
        &lt;p&gt;203 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Monitoring the Analysis
Main Index
Patran automatically looks for an existing deck name that matches the current database name and displays the
existing deck. Once done editing, you can hit Apply  to submit the job (providing p3_trans.ini  has been
configured to point to the MSC Nastran installation).
Monitoring the Analysis
This section describes three ways to monitor SOL 400 jobs while they are running:
monitor the .sts  file;
use MSC Analysis Manager;
use SOL 400 Analysis messages in LOG, F06 and F04 files.
Monitoring Using the Nonlinear Solution Status (.sts) File
SOL 400 will provide a status file ( jobname.sts ) that can be queried periodically to see how the analysis is progressing
and if the job is completed. The easiest way to have a real-time monitor of your SOL 400 job is to open the .sts  file with
a text editor that automatically updates when the file is changed.
The name of an STS file consists of the root name of the job and the extension of STS, for instance, my_job.sts .
While an STS file provides MSC Nastran users a convenient and succinct means to monitor the incremental solution
process and examine the relevant information of the overall iteration procedure, a sophisticated user is encouraged to look
into the F06 file for the nonlinear iteration module output, which is led by the percent sign “%” in each entry. The .f06&lt;br&gt;
file provides all nonlinear solution information.
The information in this file is especially important when manual or automatic time stepping procedures are being used to
step through an analysis procedure. One line is written after each successful increment.
A typical STS file is shown as follows. Its content is well self-explained by the file itself.  The file below may be slightly
different than the final version.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Monitoring the Analysis204
Main Index
The first column shows the procedural step, while the second column shows the increment within the step. Note that not
every increment size is equal, as can be seen in the TIME STEP OF INC  column. The third column ( cycl # ) indicates
the number of attempts made during this increment.
Patran provides a convenient way to access the status file using the  Monitor  option of the Analysis  form  In addition to
opening jobname.sts  (Patran knows the working directory and jobname already), you can also view the other MSC
Nastran job files including the .f06 ,.f04, and.log . The keyword search option makes it easy to find errors in the SOL
400 run by searching the .f06  file (search for “fatal” to immediately find the fatal error that terminated the job).
View.f04 ,.f06  files
•Shows all convergence controls used
•   defaults overridden by CONTROLS  – not usually needed
•All the details of the iterations
•Messages from the solver
•   numerical singularities, zero pivots, and negative eigenvalues
•Useful in pinpointing difficulties and troubleshooting
•    locations of highest residuals
•    locations of excessive deformation
•    locations of contact changes&lt;/p&gt;
&lt;p&gt;205 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Monitoring the Analysis
Main Index
Monitoring Using the MSC Analysis Manager
The Analysis Manager  provides interfaces within Patran to submit, monitor and manage analysis jobs on local and remote
networked systems. It can also operate in a stand-alone mode directly with MSC Nastran and Marc.
At many sites, engineers have several computing options. Users can choose from multiple platforms or various queues when
jobs are submitted. In reality, the resources available to them are not equal. They differ based on the amount of disk space
and memory available, system speed, cost of computing resources, and number of users. In networked environments, users
frequently do their modeling on local workstations with the actual analysis performed on compute servers or other licensed
workstations.
The Analysis Manager  automates the process of running analysis software even on remote and dissimilar platforms. Files
are automatically copied to where they are needed; the analysis is performed; pertinent information is relayed back to you;
files are returned or deleted when the analysis is complete even in heterogeneous computing environments. Time
consuming system housekeeping tasks are reduced so that more time is available for productive engineering.
The Analysis Manager  replaces text-oriented submission scripts with a Motif-based menu-driven interface (or windows
native interface on Windows platforms), allowing you to submit and control his job with point and click ease. No
programming is required. Most users are able to productively use it after a short demonstration.
The Analysis Manager  can also be used to monitor job progress (even non-jobs)
Shows all job and host information
Abort function can be used to stop running jobs&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
SOL 400 A nalysis  Messages206
Main Index
SOL 400 A nalysis  Messages
MSC Nastran generates a substantial amount of information concerning the problem being executed. The .f04 file provides
information on the sequence of modules being executed and the time required by each of the modules; the .log  file
contains system messages.
MSC Nastran may terminate as a result of errors detected by the operating system or by the program. If the DIAG 44 is
set, MSC Nastran will produce a dump of several key internal tables when most of these errors occur. Before the dump
occurs, there may be a fatal message written to the .f06  file. The general format of this message is
***SYSTEM FATAL ERROR 4276, subroutine-name ERROR CODE n
Some messages, like FATAL ERRORS , or other text &amp;hellip; issued whenever an interrupt occurs that MSC Nastran is unable
to satisfactorily process. The specific reasons for the interrupt are usually printed in the .f06  and/or.log  file.
For example, in SOL 400, nonlinear analysis may be terminated by divergence.  When it occurs, &amp;ldquo;FATAL ERROR&amp;rdquo;
printout shows before the end of .f06 statement, &amp;quot; * * * END OF JOB * * * &amp;ldquo;.  And the following message can be found
in the printout of &amp;quot; N O N - L I N E A R   I N T E R A T I O N   M O D U L E   O U T P U T &amp;quot;
*** JOB DOES NOT CONVERGE AT THE CURRENT TIME STEP OR INCREMENT.
*** SOLUTION DIVERGES FOR SUBCASE      m STEP      n.
immediately after the diverged iteration information (starting with &amp;ldquo;%&amp;rdquo; in .f06).
MSC Nastran has only two exit number, i.e.,
•0 – normal exit
•-1 – fatal error
MSC Nastran provides many user fatal error messages ( UFM). A normal/successful run exit message is as follows:
Note that for a job that terminates abnormally you are referred to the Fatal Error Message in the jobname.f06  file. UFMs
will be covered in a later discussion in this chapter.
One way to debug convergence issues is to use the NLOPRM  bulk data entry, such as NLDBG = ADVDBG,  DBGPOST&lt;br&gt;
options and so on, to load increment diagnostics in the .f06  file, which may help debug the model. Each iteration of each
load increment generates a report in the .f06  file giving the convergence and stiffness update information.&lt;/p&gt;
&lt;p&gt;207 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
SOL 400 A nalysis  Messages
Main Index
If the job terminates before 100% of the loading is applied this convergence information can be used to identify possible
reasons. The default numerical method used by SOL 400 is the full Newton method with the load increment size adjusted
according to how many iterations are required to achieve convergence. The incremental load size will be adjusted up if
convergence is achieved easily, and will be reduced if more than the target number of iterations is required to achieve
convergence. Convergence is achieved once the error factors on the selected criteria are below the required values (this is
called the convergence criteria). In this convergence and stiffness update information, the following values are given:
LOAD STEP  – percentage of total load reached at this incremental load value
NO. INC  – increment number of this increment relative to all increments in this step
ITR – number of iterations required to get convergence in this load increment
Under - - - - - - ERROR FACTORS  - - - - -  Convergence / Error Factors that measure convergence
DISP  – displacement vector residual
LOAD  – load vector residual
WORK  – work value residual
CONV RATE  – convergence rate
ITR DIV  – number of iterations that diverged in this increment
MAT DIV  – number of iterations that diverged due to material issues in this increment
NO. BIS  – number of bisections/cutbacks in this load increment
AVG R_FORCE  – average residual force
TOTL WORK  – integration of the forces over the displacements (e.g. total work) over the model
Under - - - - - DISP  - - - - - Displacement Summary
AVG  – average displacement value that occurred in this load increment
MAX  – maximum displacement value that occurred in this load increment
AT GRID  – tells the grid/node number at which the maximum displacement occurred
C – tells the degree of freedom (component) of grid/node at which the maximum displacement occurred
Under - - - - - LINE_S  - - - - - Line Search Parameters&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Convergence208
Main Index
FACT  – line search factor (does not apply with full Newton method)
NO – number of line searches (does not apply with full Newton method)
NO. QNV  – number of quasi-Newton vectors
TOT KUD  – total number of stiffness updates in this analysis/subcase
TOT ITR  – total number of iterations performed in this analysis/subcase
Convergence
From a user’s perspective, when performing a nonlinear simulation, the most difficult thing is to resolve convergence
problems encountered in the analysis.
In this section, we will only be focusing on convergence equilibrium of the structural system.  Figure 6-1 gives a quick
summpar of steps you should undertake.
For structural analysis, a lack of convergence implies that the numerical solution has not reached equilibrium to the desired
level of accuracy. Even if convergence is achieved, it is strongly recommended to determine how many iterations were
required and to consider if this was a reasonable number or an excessive number.
Recall that the number of iterations has a significant influence on the computational costs, so not only is there the
requirement that the solution converges, but that it also converges efficiently.
Determining if Your Simulation has failed to Converge
If a SOL 400 fails to converge, the exit number = 1. Also the output provides a message:
User-specified Upper Limit on Number of Iterations
Minimum Time Step Size Exceeded/Time-Step Size Too Small
Allowable Number of Bisections Exceeded
Excessive Pivot RatioNote:   Convergence in MSC Nastran may refer to :
Convergence in the iterative solver
Convergence in eigenvalue extraction
Convergence in aero-elasticity flutter calculation
Convergence in Optimization
Convergence in Equilibrium.&lt;/p&gt;
&lt;p&gt;209 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Convergence
Main Index&lt;/p&gt;
&lt;p&gt;Figure 6-1  Flowchart to Debugging a SOL 400 Run
Determining if Your Simulation is Converging Slowly
To determine how fast your solution is converging, examine the jobid.sts  file and look at the number of iterations per
increment.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Convergence210
Main Index
There are multiple reasons for why a job does not converge and often multiple phenomena may be present in the same
model. The following section provides an overview of the possible steps to remove the problem.
Rigid Body Modes
Make sure that the problem does not have any rigid body modes in the model. Nonlinear models fall into two groups, in
the first, the structure is supposed to always be constrained and those problems which may gain rigid body modes if
separation of contact bodies occur. For the first case, one can perform an eigenvalue simulation and look for zero modes.
Normally a single structure in 3-D will have six rigid body modes. If any exist, you should add a Single Point Constraint
(SPC) to remove the modes. If one has multiple contact bodies and there are no initial contract conditions, then each of
the bodies will have six degrees of freedom.
For the case of a potential separation between deformable bodies if a body will truly separate, there are really only three
possibilities:
1.Put soft springs ( CELAS  or CBUSH  elements) between the body that is being released and other bodies which are
known to be constrained.
2.Use the KDIAG  param to add a small value to the diagonals.
3.Perform a transient dynamic analysis. In a dynamic simulation, because of the inclusion of the mass matrix, the
system is always positive definite, and free modes simply result in rigid body motion.
If the job fails as soon as it is submitted (i.e., no increments/iterations successfully completed), it points to an insufficiently
constrained mesh. This, from a numerical stand-point, indicates a non-positive definite stiffness matrix and is often
accompanied by an EXCESSIVE PIVOT RATIO  error message. From a model set-up standpoint, this implies that the mesh
is not constrained in space; i.e., either incomplete (or no) BCs have been applied to the model.
In a contact analysis, one might want to change to glued contact to suppress the possibility that additional rigid body modes
are introduced into the system.
One may use the MAXRATIO parameter to set the value which is considered to be an excessive pivot. The default is 1.e7
and this value can be increased to 1.e10 if necessary.A value of 1 iteration per increment –may be deceiving. It means that the testing is based upon relative residual
force/moment, and there could be an exceptionally high value of the
reaction force.
A value of 2 iterations per increment –is very good.
A value between 3-6 iterations –is good; perhaps a smaller time step should be used, but it could also indicate
that the nonlinearity is changing location/character in the simulation.
A value of 7-8 –indicates that caution should be taken. The causes are discussed below.
A value greater than 8 –indicates problems with the simulation. You should take steps to modify
your model.&lt;/p&gt;
&lt;p&gt;211 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Convergence
Main Index
Load Controlled Rigid Bodies
Note that if one is using a Load Controlled Rigid bodies (see CONTROL  and NLOAD  on the BCBODY  bulk data entry),
then either a displacement constraint must be applied to the control nodes or the rigid contact must be in contact with
another body that is constrained.
AUTOSPC
The AUTOSPC  case control command may be used to automatically apply SPC to the system to remove the singularities.
This is recommended when there are contact bodies that are not in contact at the beginning of the analysis. In a SOL 400,
the recommended approach is to use the AUTOSPC  in each step where it is appropriate, such as:
SUBCASE 1
STEP 10
AUOSPC (RESIDUAL,SPC)=YES
LOAD = 10
STEP 20
AUOSPC (RESIDUAL,SPC)=YES
LOAD = 20
STEP 30
LOAD = 30
Removal of Constraints via Removal of SPC or Separation
When LBCs are removed, the forces/pressures (and the reaction forces due to displacement constraints) are removed
gradually over the subsequent step. The forces and pressures are always removed gradually, but the reaction forces of
displacement constraints may be removed suddenly at the beginning of the subsequent step. This sudden change in loading
can cause convergence problems.
Separation of a Node or Segment from a Contact Body
Similar to removing a LBC, when a node separates from a body, the reaction force on the node needs to be redistributed.
If the value is large, then significant amount of iterations may be required.
Contact Convergence Issues
Contact Separations
Often, in simulations, one may observe a region coming into contact, separating, contacting in successive increments or
iterations. The reason for this is that numerical separation occurs when the contact stress (or force) is zero; but in reality,
there are effects like surface tension or electrostatic adhesion. Having the separation based upon zero force or stress may
lead to excessive iterations. It is recommended to put in a finite value. For metals, 1% of the yield stress is a reasonable value
for stress based separation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Convergence212
Main Index
Contact Penalty Factor
When using the segment-to-segment contact procedure, penalty factors are used to apply the constraint of no penetration.
Additionally, an augmentation procedure might be used. If the penalty is too small, penetration may occur; but if the
penalty is too large, then excessive iterations may be required.
Contact Friction
Friction is a highly nonlinear process and almost always induces the need to take more iterations in the simulation. Many
problems are friction dominated (such as insertion of clips or brake squeal), and additional iterations are required for these
simulations. If it is not a friction dominated problem, it is often beneficial to first suppress friction using glued contact to
achieve convergence, and then add it in a subsequent simulation. Or one can set the friction coefficient to zero to neglect
the friction.
Follower Force Effects
When using follower force, one can use either a symmetric or nonsymmetric formulation. If one uses a symmetric
formulation, the memory requirements are smaller and the cost of decomposing the stiffness matrix is smaller, but the
convergence may be slower. This is likely to occur for structures that are extremely flexible that are subjected to loads oblique
to the surface. Check the value of FKSYMFAC  in the PARAM. A value of 0 results in the full nonsymmetric formulation
and a value of 1 is the full symmetric formulation.
Material Nonlinearity
Material behavior may cause convergence problems if the material no longer has the ability to carry the load or the stress.
There are multiple physical and numerical reasons for this.
The temperature increases and the material physically softens. This is true for virtually all materials, but for some, the
reduction in load carrying capacity occurs over a small temperature range. Hence, one may need to reduce the time step.
Nonlinear Elastic Materials
The experimental data is poor which leads to incorrect coefficients being used in rubber models such as Mooney-Rivlin or
Ogden. You should always check the numerical evaluation of the stress-strain curve with the original data.
The experimental data is of a limited strain range, in which case the stain-stress levels may be outside the range of the
experimental data. This problem is often encountered in with rubber materials. You should always check the calculated
strain levels with the experimental range.
The experimental data is obtained from only one test specimen in one (uniaxial) test. For rubber or plastic materials,
multiple tests are required due to both material variations and due to different behavior in tension and shear. It may be
beneficial to switch to the Arruda-Boyce model.&lt;/p&gt;
&lt;p&gt;213 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
Convergence
Main Index
Elastic-Plastic
While textbooks often discuss elastic pefectly plastic material, and this model only requires one additional material constant,
from a stability and convergence perspective a work-hardening material is preferred. The simplest example of this is in frame
structures a plastic hinge may form if the material is perfectly plastic. To improve convergence, if no other data is available,
one can set the work hardening to 1% of the Young’s modulus.
Composites
Material damage occurs in the composite material which reduces the load carrying capability. This potentially occurs for
MATF  or MATDIGI  materials. If sufficient material damage as occurred such that there are no longer load paths, then
failure to converge indicates that one has reached the maximum load.
Fracture
The cohesive material used in conjunction with Cohesive Zone Model fails leading to delamination and the need to
redistribute the load. This is a highly nonlinear process.
User Subroutines
User subroutines are very powerful tool to customize the material behavior, but caution is required when using them. It is
very easy to construct a user subroutine that does not represent the physical problem and hence, leads to an unstable
solution. It is important to test material user subroutines to insure stability and proper convergence. When using MATUSR&lt;br&gt;
and user subroutines UMAT  or HYPELA , it is important that the tangent stress-strain law is consistent with the stress to
insure quadratic convergence of the Newton-Raphson procedure. User subroutines should be tested with small load
controlled problems to verify their accuracy and robustness before being applied to engineering problems.
Incompressibility
Nonlinear structural analysis presents many scenarios that result in incompressible or nearly incompressible behavior,
including small strain elasticity (with Poisson’s ratio close to 0.5), rubber elasticity, plasticity, and creep. When using SOL
400 for these materials, it is strongly recommended to use the Advanced  elements that are activated with the additional
Property  options.
Nearly incompressible elements store significant strain energy when under compression. If the boundary conditions are
changed, it is likely that there will be a dramatic motion of the rubber material leading to convergence issues.
Mesh Distortion
For large deformation problems, especially for those undergoing large shear strains, the element may become inside out
which is discussed below. But, even before this point, the shape functions will be less effective to represent the deformation
which may lead to poorer convergence. This puts additional constraints on the mesh generation process. Not only must the
mesh to be good for the initial loading, but also good for the complete duration of the event. Lower order elements are
preferred when large deformations occurs.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
General Hints for Starting out with Nonlinear Analysis214
Main Index
Instability/Buckling
Many structures are loaded such that an instability may occur. Numerically, this may appear as either a message
(Excessive Pivot Ratio) or an increase in the number of iterations. In general, these are
very difficult models which require multiple approaches to solve. The fundamental problem
is that the compressive load is too large and this results in a non-positive definite
system or an excessive pivot.
The first thing to check at this point is: “Has the solution gone as far as it can?”; i.e., maybe you already have the complete
solution. Sometimes, nonlinear loading causes structures to buckle which may take your analysis into the post-buckled
region. Depending on the type of buckling, you may be simply trying to drive your analysis farther into the post-buckling
range which may not give you the information you are after. For example, if you load a frame structure with a load that
exceeds the critical buckling load, the analysis is simply working to drive the structure further into a plastic hinge.
There are several approaches to resolve buckling and instability issue:
The traditional way of solving buckling simulations is to use arc-length methods as defined in Arc-Length
Methods for Post-buckling Analysis  in Chapter 4: Solution Strategies for Nonlinear Analysis . Unfortunately, this
method is not effective when the buckling modes are in close proximity. This problem occurs in typical aerospace
panels with multiple spars and struts. The arc-length methods also cannot be used with contact.
Use the NLSTEP method and activate the artificial damping by setting IDAMP=4 .
Add transient dynamics and use a large time period. The inclusion of dynamics improves the numerical stability by
insuring that the system is always positive definite.
General Hints for Starting out with Nonlinear Analysis
Start your model simple and gradually add complexity.
It is better to start the analysis with a small load that will obtain convergence than start with a large load that requires the
program to subdivide the increment.
When starting with a new model, set up your model such that you get some initial results or a run-failure within a few
minutes. This means that you may need to start with a coarse mesh. Once you know your model runs to completion, you
can add refinement and/or complexity. As a general comment, a 1000-2000 node job would fail within few minutes if there
are set-up errors. This is what we want: if the job fails, it should fail fast. These initial few runs serve the purpose of testing
the set-up parameters to make sure that they work right for this model. One can expect to make a few/several runs to
determine that the parameters are correct for that class of problems. Once these parameters are known, you can apply them
to other models in that class of problems. Once the job runs to completion, you can add complexity/refinement. Now the
job will take longer, but we are confident that it will run to completion.
Displacement control: In general, problems with applied displacements are numerically more ‘stable’ than problems with
applied forces. For example, if a cantilever beam loaded at the end with a force, formation of a plastic hinge can make the
model go non-positive definite. With an applied displacement, this scenario is less likely.&lt;/p&gt;
&lt;p&gt;215 Chapter 6: Setting Up, Monitoring, and Debugging the Analysis
General Hints for Starting out with Nonlinear Analysis
Main Index
Output Messages
Additional Output
When convergence is a problem it is necessary to obtain as much information as possible on the numerical process. The
NLOPRM  case control command is used to obtain additional result information.
In particular:
NLOPRM       OUTCTRL=STD,INTERIM, NLDBG=NLBASIC,NRDBG, DBGPOST=LTIME
will provide the additional information to evaluate the performance. If contact bodies are present, it may be preferable to
use:
NLOPRM       OUTCTRL=STD,INTERIM, NLDBG=NLBASIC,NRDBG, DVDBG,N3DMED DBGPOST=LTIME
Standard User Fatal Messages
If you run the analysis and it does not run at all or ends before completing, you will get an error message in the
jobname.f06  or jobname.log   file that will give you an indication of what the problem is. Do a text search on the word
fatal in the jobname.f06   file. The first thing to check is to that you were able to get a license to run the job. Licensing
problems are a common reasons for a run to fail. If you are sure you have a license and submit the job correctly, you should
get a jobname.sts   file that will end with an exit number preceded by a description of why the run stopped. Common
exit numbers are:
If you receive a Nastran input from another source, it is strongly recommended that you read it into either Patran or
SimXpert and display the model to check for completeness.
Any.sts  file with nonzero total time lines means there are converged increments. Display the converged increments to
see what is going on.Exit 0 –success. The job ran to completion and did everything you asked.
Exit 1 –syntax error in the input file. You should check the input syntax of the line the
error message points to, but it is likely that the actual error was in the input block
prior to where the message points.
Exit 1 with user fatal
EXCESSIVE PIVOT RATIO
in.f06–typically means no convergence due to rigid body motions or a numerically ill-
conditioned system. See recommendations for equilibrium below.
Exit 1 with other user fatal –means the analysis ran into convergence problems part way through and did not
complete. Interpret the error message, look for model problems&lt;br&gt;
For SOL 400 User Fatal
Messages ( UFM s) and their
Interpretation see:http://simcompanion.mscsoftware.com/infocenter/&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
General Hints for Starting out with Nonlinear Analysis216
Main Index
User Fatal Message Scenarios
No Increments/Iterations Successfully Completed but Solution Has Started:
*** USER FATAL MESSAGE 4296 (EQD4D)&lt;/p&gt;
&lt;p&gt;ILLEGAL GEOMETRY FOR QUAD4 ELEMENT WITH ID = 97
If a UFM  message similar to the above comes as soon as the job is submitted; i.e., at the first assembly of the first iteration,
it indicates a meshing problem. Re-check mesh and re-mesh.
If an increment or iteration has been successfully completed and one gets the message:
*** USER FATAL MESSAGE 4296 (EQD4D)&lt;/p&gt;
&lt;p&gt;ILLEGAL GEOMETRY FOR QUAD4 ELEMENT WITH ID = 97
This exit message or a similar one may indicate excessive element deformation during a particular load increment in a
particular iteration. The way to get around this error is to reduce step size. However, SOL 400 does that automatically and
if the problem still persists, it gives this message. If the program is unable to recover after several cutbacks, it implies that
the last converged solution is not really a good solution or the deformation is excessive for this mesh. The solution may be
to either use Restart or rerun-the complete analysis with a tighter tolerance.
It may be necessary to change the original mesh to anticipate where the deformation will occur. Also, it should be recognized
that lower-order triangular or tetrahedral elements (with PSLDN1 ) is the preferred solution for large strain/distortion
models. Finally, if the deformation is extremely large resulting in large mesh distortion, the Marc product should be used
with the Global Adaptive Meshing capability.
User-specified Upper Limit on Number of Iterations: The solution may fail and give this message if SOL 400 reaches the
user-specified upper limit on the number of (Newton-Raphson) iterations within a load increment. The default is set to 10.
One of the first things to try, if you think the problem is otherwise “well posed” (e.g., no other problems are known) would
be to increase the value (specified on NLSTEP ) to a value of 20&amp;hellip; What is happening is that SOL400 keeps iterating and
tries to converge to a solution for that increment. If that does not happen, SOL 400 will cut back the load (by half) and re-
solve that increment. Sometimes this is not enough to get convergence, and it will exit with a UFM.
Check the residual values in the ADVDBG  section of the .f06  file to confirm this.
Minimum Time Step Size Exceeded/Time-Step Size Too Small: This exit message indicates that SOL 400 cuts back to a
time-step size too small for the analysis to continue. The load stepping algorithm has a cut-back feature where the load step
is automatically reduced (when the time step is decreased, the factor is calculated internally based upon the minimum time
step). When an increment runs into these problems, it automatically cuts the load-step size and resolve that increment. If
the problem persists, it cut-back the load-step again. This happens until the limit of the number of cut-backs is reached.
This can result in a very small time step. In such a case, SOL 400 stops the analysis with a UFM.
Allowable Number of Bisections Exceeded: SOL 400&amp;rsquo;s automatic load stepping scheme is set up such that the applied load
in an increment scales up (or down) depending on how easy (or difficult) the solution was in the previous increment. The
degree of difficulty is determined based on the NDESIR  parameter of NLSTEP : &amp;lsquo;desired number of iterations per
increment&amp;rsquo; (default = 4). SOL 400 will scale down the step size until it reaches a lower limit on the step size (default =
0.001% of total time step) and then exit with a UFM worded similar to the above. This is an indication to you that the
analysis encountered some difficulty at that stage.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 7: Results Output from the Analysis
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
7Results Output from the
Analysis
Introduction
Output Requests in Case Control
MSC Nastran Results Quantities
Specifying Results Output Requests in Patran
Result Files
Specifying Output File Format
Postprocessing SOL 400 with Patran&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction218
Main Index
Introduction
This chapter describes the process of requesting results from a SOL 400 analysis. It includes the topics of: case control input
which specifies the specific results quantities included in the output; how to make these requests in the SOL 400 input file
as well as when setting up the job in Patran; which results quantities (such as contact output) are included in the requested
output data blocks; what output format or file type is recommended for the various solution sequences; as well as the
available and recommended.
The interpretation of the results requested is beyond the scope of this chapter, but is in Appendix A: Interpreting the Results . In
that chapter, a complete description of the results, including the mathematical descriptions of the various types of results,
quantities such as Cauchy stress and engineering strain definitions, are provided. Appendix A also includes details on
interpreting the fringe plots made by the graphical user interfaces like Patran, and the numerical calculations they use to
arrive at the exact value that shows up in the fringe plot. Understanding these calculations is essential when interpreting the
results of a fringe plot, particularly in areas where a course mesh means that the values are extrapolated a significant distance
between the element integration point, where the stress is calculated, and the node point where the fringe value is
represented.
Output Requests in Case Control
As a part of the input, you request which results quantities you want to be written to the output from MSC Nastran, and
also which formats ( MASTER /DBALL ,op2, HDF5 ) of the results files you want. The format of the output file is specified
in the bulk data via the PARAM,POST  entry, and the output requests are placed in the case control section of the input
(see example of how to request MASTER /DBALL  output, and case control output requests in boxed lines below). Note that
while the DISPLACEMENT , SPCFORCES , and STRESS  requests are common with most MSC Nastran solution
sequences, the NLSTRESS  and BOUTPUT  requests are unique to SOL 400 and are required to get the output unique to
nonlinear analyses such as failure indices, nonlinear stress/strain tensors, and contact interaction status, forces, and stresses.
Control of these options is available through the Analysis  menu job setup interface in Patran.
SOL 400
CEND
TITLE = EXAMPLE
BCONTACT = ALL
SUBCASE 1
STEP 1
TITLE=This is a default subcase.
ANALYSIS = NLSTATIC
NLSTEP = 1
BCONTACT = ALLBODY
SPC = 2
LOAD = 1
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
NLSTRESS(SORT1)=ALL
BOUTPUT(SORT1,REAL)=ALL
BEGIN BULK
MSC recommends using either the MASTER /DBALL  or “new”.op2  (PARAM,POST,1 ) output file formats for SOL 400
analyses. The advantage of using the MASTER /DBALL  format is that it contains all of the database information from the
MSC Nastran run and can be used to retrieve the attributes of the model at a later time. The disadvantages to this format&lt;/p&gt;
&lt;p&gt;219 Chapter 7: Results Output from the Analysis
Output Requests in Case Control
Main Index
is that it is platform specific (e.g., not portable across platforms) and takes up more disk space. The advantages of the
new.op2  format is that it takes less disk space than the MASTER /DBALL  and has limited cross-platform portability (see the
The File Management Section (FMS)  of the QRG for more details on portability).
SOL 400 produces stress and strain results that are exactly equivalent to those results available with SOL 106 and 129, but
provides more advanced modeling capabilities. A detailed discussion of the stress and strain measures used is given in the
following sections. For a complete listing of all possible results quantities that can be returned for a SOL 400 analysis, please
refer to the QRG.
Output requests such as BOUTPUT , STRESS , DISPLACEMENT , NLSTRESS , and SPCFORCES  are used to tell MSC
Nastran what output quantities are required from the analysis. These are known as MSC Nastran Case Control Commands.
You can find more information about the organization of the MSC Nastran input file in Chapter 2: MSC Nastran Files . The
following table shows the case control output requests that may be selected for an MSC Nastran analysis.
You can find the complete list of other results types or more detail on each output request type; please see the Case Control
Commands  in the QRG .
Table 7-1  Output Request Description
Case Control
Output Request Description
ACCELERATION Requests the form and type of acceleration vector output.
BOUTPUT Requests 3-D contact output including open/closed status, contact interface shear and
normal forces and pressures.
DISPLACEMENT Requests the form and type of displacement or pressure vector output.
Note: PRESSURE  and VECTOR  are equivalent commands.
EDE Requests the output of the energy loss per cycle in selected elements.
EKE Requests the output of the kinetic energy in selected elements.
ELSDCON Requests mesh stress discontinuities based on element stresses (see STRESS ).
ENTHALPY Requests form of enthalpy vector output in transient heat transfer analysis.
ESE Requests the output of the strain energy in selected elements.
EQUILIBRIUM Specifies options for equilibrium force balance output of applied loads, single point
constraint forces and forces due to multi-point constraints and rigid elements.
FLUX Requests the form and type of gradient and flux output in heat transfer analysis.
FORCE Requests the form and type of element force output or particle velocity output in coupled
fluid-structural analysis.
Note: ELFORCE  is an equivalent command.
GPFORCE Requests grid point force balance at selected grid points.
GPKE Requests the output of the kinetic energy at selected grid points in normal modes analysis
only.
GPSDCON Requests mesh stress discontinuities based on grid point stresses (see GPSTRESS ).&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Output Requests in Case Control220
Main Index
For a complete list of the output requests available via the case control commands, see Case Control Command Summary  in the
MSC Nastran Quick Reference Guide .
Output Requests to Get Additional Contact Output
The BOUTPUT  case control command or bulk data entry is used to select the contact results.GPSTRAIN Requests grid points strains for printing only.
GPSTRESS Requests grid point stresses for printing only.
HDOT Requests form of rate of change of enthalpy vector output in transient heat transfer analysis.
MODALKE Requests a modal kinetic energy calculation and specifies the output form.
MODALSE Requests modal strain energy calculation and specifies the output form.
MEFFMASS Requests the output of the modal effective mass, participation factors, and modal effective
mass fractions in normal modes analysis.
MPCFORCES Requests the form and type of multipoint force of constraint vector output.
NLSTRESS Requests the form and type of nonlinear element stress output in nonlinear solution
sequences.
NLOUT Requests additional nonlinear output quantities. Needs to referenced by NLSTRESS Case
Control Command.
OLOAD Requests the form and type of applied load vector output.
RCROSS Requests computation and output of cross-power spectral density and cross-correlation
functions in random analysis.
SPCFORCES Requests the form and type of single-point force of constraint vector output.
STRAIN Requests the form and type of strain output.
STRESS Requests the form and type of element stress output.
Note: ELSTRESS  is an equivalent command.
STRFIELD Requests the computation of grid point stresses for graphical postprocessing and mesh stress
discontinuities.
SVECTOR Requests the form and type of solution set eigenvector output.
THERMAL Requests the form and type of temperature output.
VELOCITY Requests the form and type of velocity vector output.Table 7-1  Output Request Description  (continued)&lt;/p&gt;
&lt;h1&gt;221 Chapter 7: Results Output from the Analysis
Output Requests in Case Control
Main Index
NLOPRM
Case control command, NLOPRM , can be used to better control the nonlinear solution output during solution process,
to provide MSC Nastran users a direct access to nonlinear solutions even the job is still running, to give you some tools to
monitor and debug the nonlinear solution process and gain some insight of nonlinear solution procedure, and to allow users
to print out MPC  and MPCY  equations from contact constraints before and during a contact process.
Input
Examples
NLOPRM    OUTCTRL=STD,SOLUTION      DBGPOST=LTIME
NLOPRM    OUTCTRL=(SOLUTION,INTERM), MPCPCH=(OTIME,STEP)
Output
The output from NLOPRM  case control command is basically controlled by four keywords of OUTCTRL , NLDBG ,
DBGPOST , and MPCPCH . Each keyword has a group of describers that are assigned to either by one at a time or more in
juxtaposition. The output is destined to almost all MSC Nastran output media, such as .f06 ,.pch ,.op2 , and DBALL ,
depending on which keyword is used.
Guidelines
1.NLOPRM  case control command may only appear above all SUBCASE , STEP , and SUBSTEP  delimiters.
2.For OUTCTRL=SOLUTION , only nonlinear solutions, such as nonlinear stresses, strains, contact status and so on, are
output at the user-specified output intervals. Any solution results in superelements are not computed and recovered
in what we called Phase 3 data recovery. The job is terminated as soon as all nonlinear iterations are completed.NLOPRM OUTCTRL STD,SOLUTION,INTERM   =   =
NLDBGNONE
NLBASIC,NRDBG,ADVDBG,N3DBAS
N3DMED
N3DADV     
       &lt;/h1&gt;&lt;p&gt;DBGPOSTNONE
LTIME
LSTEP
LSUBC
ALL
= MPCPCHNONE
BEGN,OTIME,STEP
TBEGN,YOTIME,YSTEP     
= &lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MSC Nastran Results Quantities222
Main Index
The nonlinear solution results are also saved in DBALL  when a job is launched with scratch=post . They are ready
for postprocessing when the job is completed.
3.When OUTCTRL=INTERM  is specified, the nonlinear solutions, such as stresses, strains, contact status and so on, are
output into individual .op2  files for postprocessing, at the user-specified output intervals. You are able to access
these files while the job is still running. The name of a typical .op2  file is the job name followed by a suffix name
of eight-digit number, for instance, my_job.00000008 . In.f06  file, the relevant information of an .op2  file is
indicated as corresponding to the load or time increment, STEP , SUBSTEP , and SUBCASE .
4.NLDBG   is advanced contact output request for SOL400 users. Users can look into details of nonlinear iteration
for more contact details.
Among the debugging options, N3DBASE  can be used to print out some basic contact information in the .f06&lt;br&gt;
file. It includes the contact condition of touching node on the touched patch and separation contact forces.
Standard contact status output can be requested by the BOUTPUT  case control command.
5.DBGPOST  is used to select the output of nonlinear iterations for debugging purpose. When DBGPOST  is
activated, a MSC Nastran data block, OFDBGDT , is created to store both residual and displacement vectors at user-
specified iterations pertaining to load or time increments, STEP  and SUBCASE .
6.MPCPCH  allows you to punch out multipoint constraint equations from a contact process in the format of either
MPC  or MPCY  bulk data entries. This is probably the most useful tool for you to gain some insight of how a MSC
Nastran contact job proceeds.
MSC Nastran Results Quantities
Table 7-1 indicates all the possible result quantities associated with SOL 400 which can be loaded into the Patran database
from the MASTER /DBALL  or.op2  file. The Primary  and Secondary Labels  are items selected from the postprocessing
menus. The Type  indicates whether the results are Scalar , Vector , or Tensor . These types will determine which
postprocessing techniques will be available in order to view the results quantity. The Description  gives a brief discussion
about the results quantity. The Output Request  forms use the actual primary and secondary labels which will appear in the
results. For example, if Strain, Elastic  is selected on the Element Output Requests  form, the Strain, Elastic  is created for
postprocessing.
This allows the definition of what data is desired from the analysis code in the form of results. For most solution sequences,
the form consists of two formats: Basic  and Advanced . The Basic  form retains the simplicity of being able to specify the
output requests over the entire model and uses the default settings of MSC Nastran case control commands. There is a
special set defined in Patran called ALL FEM  which represents all nodes and elements associated with Object  defined on
the Analysis Form  in the Patran Interface to MSC Nastran Preference Guide.  This default set is used for all output requests
in the  Basic Output Requests  form in the Patran Interface to MSC Nastran Preference Guide .
The Advanced  version of this form allows the user to vary these default options. Since output requests have to be
appropriate to the type of analysis, the form changes depending on the solution sequence. The  Advanced Output Requests&lt;br&gt;
in the Patran Interface to MSC Nastran Preference Guide also adds the capability of being able to associate a given output
request to a subset of the model using Patran groups. This capability can be used effectively in significantly reducing the
results that are created for a model, optimizing the sizes and translation times of output files. The creation of Patran groups
are documented in  Group&amp;gt;Create  in the Patran Reference Manual.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P13</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_013/</guid>
      <description>
        
        
        &lt;p&gt;223 Chapter 7: Results Output from the Analysis
Specifying Results Output Requests in Patran
Main Index
The results types that will be brought into Patran due to any of these requests, are documented in  Supported OUTPUT2 Result
and Model Quantities  in the Patran Interface to MSC Nastran Preference Guide . In that chapter, tables are presented that correlate
the MSC Nastran results block, and the Patran primary and secondary results labels with the various output requests
SOL 400 produces stress and strain results that differ from those results available with other solution sequences.
Specifying Results Output Requests in Patran
The Output Requests  form is used to request results from the MSC Nastran analysis for use in postprocessing (post tape)
and verification (output file).
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.On the Analysis Application  form, select Subcases&amp;hellip;  and choose Output Requests&amp;hellip;  from the Subcase Options&lt;br&gt;
section.
Figure 7-1  Output Requests are Made From the Patran Subcase - Output Request Form
The available output requests depend on the active Solution Sequence
as indicated by this value.
This option menu is used to switch between the Advanced and Basic
version.
This listbox displays the appropriate Result Types that may be selected
for the Solution Sequence indicated at the top of the form.
This listbox displays the selected Output Requests for the subcase
shown at the top of the form.
The Delete button deletes the output request highlighted in the
Output Requests listbox.
The TITLE, SUBTITLE, and LABEL are written to the MSC Nastran
output file.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Specifying Results Output Requests in Patran224
Main Index
Results Output Options
Output Requests in Patran – Advanced Form
This form provides great flexibility in creating output requests. Output requests may be associated with different groups
(SET  options in MSC Nastran) as well as different superelements. The output requests available depend on the chosen&lt;br&gt;
Solution Types , Solution Parameters , and  T ranslation Parameters . The Advanced Output Requests  form is sensitive to the
Result Type  selected. The Form Type , Delete , OK, Defaults , and Cancel  buttons operate exactly like on the  Basic Output
Requests  form.
A description of the output requests and their associated options are listed in  Table 7-1.Select Basic  or Advanced The Advanced  option allows the user to defines the number of increments
between writing results to the MSC Nastran results file after the first
increment of the analysis and other filtering options.
Select Output Results  from List of
Available TypesPuts the output request in the Output Request  data box.&lt;br&gt;
Selected Output Results  show up in
Output Requests Data BoxThe selected Output Requests  will be written to the associated subcase
when the input file is written.
Delete Selecting the Output Request  from the data box and hitting Delete&lt;br&gt;
removes that output request.&lt;/p&gt;
&lt;p&gt;225 Chapter 7: Results Output from the Analysis
Specifying Results Output Requests in Patran
Main Index
Use this listbox to select the
result type to be created.This listbox is used to select the group to
which the output requests relate.
To fully support submittal of MSC
Nastran with UDS for SOL 400, the
specification of state variables is
necessary. Use this section to specify
the state variables.These are the options that are
appropriate to the highlighted result
type. They also indicate the options
that were selected for a highlighted
output request.
Use this list box to select Output Requests&lt;br&gt;
that are to be modified or deleted.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Result Files226
Main Index
Result Files
When a SOL 400 analysis has been successfully completed, a status file ( jobname.sts ), a print file ( jobname.f06 ) and
the requested results files are created and saved.
File Type Description
job_id.dat/bdf The MSC Nastran input file – a text file generated by MSC Nastran which defines the model
(preprocessing analysis data, model setup, and job information) which is documented in the
QRG of the MSC Nastran documentation set (an important document to have).  The .dat
suffix is common, Patran uses .bdf by default in reference to the fact that it is the “bulk data
file”.
job_id.f06 The “status” file – detailed formatting, warning and error messages, as well as output, can be
written to this file by MSC Nastran during processing the analysis. Often a large file, it can
also contain results in human-readable format. While no pre/postprocessors read results from
this file, it has the advantage that all output blocks can be written to it. A very common use
of this file is to, once the run has stopped, search it for the word &amp;ldquo;fatal&amp;rdquo; to determine if there
were any “fatal” messages telling why the run failed.
job_id.log The “log” file – A summary of the command line options used and the execution links. For
example, a summary of system-level messages written by MSC Nastran documenting the
progress of the analysis by giving a time-stamped chronology.
job_id.sts The “status” file – a small terse “quick-look” text-editable job summary file containing job
statistics about the time/load increments.  While provided for all solution types, this file is
particularly useful for monitoring the progress of a nonlinear solution during the
incremental/iterative loading procedure. During a SOL 400 analysis, it is quite informative
to open this file with a text editor that allows automatic updating of the file. In this case ,a
new line pops into the file for every converged increment, providing the user with real-time
progress of the analysis. For these non-linear runs it is also helpful to watch the increment
size because excessive cut-backs or very small time steps indicate that the job is having trouble
converging and may indicate that the user should terminate the run and fix the problem. See
Setting Up, Monitoring, and De-Bugging the Analysis for more details on using this file.
job_id.op2 The binary “results” file – is an often very large file containing the whole FEM model and
the requested output results.
job_id.h5 The binary file job_id.h5 is the results database in HDF5 format that is requested using the
MDLPRM, HDF5,1 bulk data entry.
job_id.f04 The job_id.f04 file – gives a history of the assigned files, disk space usage, and modules used
during the analysis. Useful for debugging.
job_id.MASTER or
job_id.DBALLUsed for results postprocessing. Complete descriptions of the MASTER and DBALL files.&lt;/p&gt;
&lt;p&gt;227 Chapter 7: Results Output from the Analysis
Specifying Output File Format
Main Index
Specifying Output File Format
MSC Nastran
The following table indicates the options required to select the type of postprocessing file.job_id.MASTER Part of the recommended “indexing” modules are tied to a system cell. That is, an MSC
Nastran database is indexed and saved by MSC Nastran by setting system cell “316” to a
value “7”. This system cell tells MSC Nastran executable to create index files for IFP and
OFP datablocks and move the indexed datablocks to the MASTER file. This means that one
can even delete the DBALL file after the MSC Nastran run completes. For example, if you
would like to get an indexed MASTER data file for the job, some_job.bdf, the following
must be executed:
&amp;lt; &amp;hellip;&amp;gt;/nastran some_job.bdf sys316=7 scr=no sdir=/tmp
This example generates a some_job.MASTER and some_job.DBALL database files. You can
delete the *.DBALL file because it does not contain any results or model data of importance.
However, if you would like to perform a restart from the run then the DBALL file must be
kept for future use but the MASTER file may be moved to other directories at will.
job_id.DBALL By default, all data to be stored on the database for restart purposes will be located on the
\DBALL database set DBset. These parameters permit the storage of some data blocks on
DBsets other than DBALL, which are defined by the user and specified on the INIT  file
management statement. Any or all of these parameters may be set to SCRATCH in order to
reduce overall disk space usage; e.g., PARAM,DBUP,SCRATCH or
PARAM,DBALL,SCRATCH. However, automatic restarts will be less efficient because data
normally assigned to a permanent DBset will have to be recomputed.
job_id.IFPDAT The file containing the bulk data entries for IFPStar restart processing (SYSTEM(444)=1)
job_id.plt Contains the plot information requested by the NASTRAN plotter commands specified in
input file.
job_id.pch Contains the punch output as requested in the input file.
job_id.xdb Old database used by Patran for postprocessing of the results. Not recommended for
SOL400 because it does not contain all nonlinear quantities.
miscellaneous scratch
filesSeveral scratch files are generated during the analysis which MSC Nastran will automatically
delete upon completion of the run.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran228
Main Index
Patran
The Results Output Format  form is used to request results from the MSC Nastran analysis for use in postprocessing and
verification (output file).
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.On the Analysis Application  form, select Solution Type  button to bring up the Solution Parameters  form.
3.On the Solution Parameters  form, select the Results Output  button to bring up the Results Output Format  form.
4.From this form you can select the output file format(s) you wish to use. The next sections of this chapter will provide
more information about each format to help you select the best format for your purpose.
Figure 7-2  Output Requests are Made From the Patran Subcase - Output Request Form
After the input file echo, the OLOAD RESULTANT  is printed which shows the resultant of the loads about the origin of the
basic coordinate system in this case. Next is the USER INFORMATION MESSAGE (UIM) 5293  which shows the epsilon
and external work for the run. The epsilon is a measure of the numeric conditioning of the model, while the external work
is the work due to the applied loads. Both of these values are useful for model checkout and are discussed in more detail in
Model Verification  (Ch. 10) in the MSC Nastran Linear Static Analysis User’s Guide.
Postprocessing SOL 400 with Patran
Using Patran to Postprocess MSC Nastran Results Quantities
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Access Results&amp;gt;Attach MASTER&amp;gt;Results Entities  or Access
Results&amp;gt;ACCESS Output2&amp;gt;Results Entities.Result File Type MSC Nastran Entry
.op2 PARAM,POST,-1 Goes in the Bulk Data Section
.master/.dball default is on
PARAM,DBALL,SCRATCH
removes DBALLGoes in the Executive Control Section&lt;/p&gt;
&lt;p&gt;229 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index
3.After selecting a MASTER  or.op2  file, you may want to specify translation parameters.
Tolerances
Division Prevent division by zero errors.
Numerical Compares real values for equality.
Additional Results to be Imported
Rotational Nodal Results Indicates whether Rotational Nodal Results  are skipped or included in
translation.
Stress/Strain Invariants Indicates whether Stress/Strain Invariants  are skipped or included in
translation.
Principal Directions Indicates whether Principal Directions  are skipped or included in
translation.
Element Results Positions If an element has results at both the centroid and at the nodes, this filter
indicates which results are to be included in the translation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran230
Main Index
In addition to these standard results quantities, several Global Variable  results can be created. Global Variables  are results
quantities where one value is representative of the entire model at a particular load increment.
Direct Results Access
Direct Result Access (DRA) is the default method (Method = Attach) of accessing results within Patran (or AFEA) via the
MSC Nastran Preference.  The results are not imported into the database but remain in the external results file. Only
metadata (labels) are imported into the database. The results are accessed and extracted from the external file when needed
during post-processing. If a results file is moved or deleted, the connection will be terminated and an error message to this
effect is issued. As long as the results file remains attached, you never have to reattach it when opening/closing a database.
In some instances with certain types of analyses using MSC Nastran, it is helpful to understand what DRA does and how
to avoid problems.
The results from a SOL 400 Analysis can be read into and postprocessed using Patran. Typically, you will get the most
complete set of results (i.e., rigid contact body information such as reaction forces, etc.) if you use the .MASTER /DBALL&lt;br&gt;
or.op2  results options.
The Results  application in Patran provides the capabilities for creating, modifying, deleting, posting, unposting, and
manipulating results visualization plots as well as viewing the finite element model. In addition, results can be derived,
interpolated, extrapolated, transformed, and averaged in a variety of ways, all controllable by the user.
Control is provided for manipulating the color/range assignment and other attributes for plot tools, and for controlling and
creating animations of static and transient results.
Results are selected from the database and assigned to plot tools using simple forms. Results transformations are provided
to derive scalars from vectors and tensors as well as to derive vectors from tensors. This allows for a wide variety of
visualization tools to be used with all of the available results.
If the job was created within Patran such that a Patran jobname of the same name as the MSC Nastran jobname exists, you
only need to use the Results tools and Patran will import or attach the jobname.xxx  file without you having to select it.
If you did not create the job in Patran, you can still import the model and results and postprocess (both are on the
MASTER /DBALL  and.op2  file).
Results
Like the enormous amount of data needed to define the simulation model to an analysis code, there is a large volume of
data returned from the simulation analysis. And just as it is virtually impossible to construct a model with a text editor alone,
it is equally as difficult to read and interpret the results by hand. Using a postprocessor with a graphical user interface such
as Patran or SimXpert is highly recommended.
The Patran Results  application gives you control of powerful graphical capabilities to display results quantities in a variety
of ways:
Deformed structural plots
Color banded fringe plots
Marker plots (vectors, tensors)
Freebody diagrams
Graph (XY) plots&lt;/p&gt;
&lt;p&gt;231 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index
Animations of most of these plot types.
The Results  application treats all results quantities in a very flexible and general manner. In addition, for maximum
flexibility results can be:
Sorted
Reported
Filtered
Derived
Deleted
All of these features help give meaningful insight into results interpretation of engineering problems that would otherwise
be difficult at best.
The Results  application is object oriented, providing postprocessing plots which are created, displayed, and manipulated
to obtain rapid insight into the nature of results data. The imaging is intended to provide graphics performance sufficient
for real time manipulation. Performance will vary depending on hardware, but consistency of functionality is maintained
as much as possible across all supported display devices.
Capabilities for interactive results postprocessing also exist. Advanced visualization capabilities allow creation of many plot
types which can be saved, simultaneously plotted, and interactively manipulated with results quantities reported at the click
of the mouse button to better understand mechanical behavior. Once defined, the visualization plots remain in the database
for immediate access and provide the means for results manipulation and review in a consistent and easy to use manner.
Results Imported to Patran
The following table indicates all the possible result quantities which can be loaded into the Patran database during results
translation from MSC Nastran. The Primary  and Secondary Labels  are items selected from the postprocessing menus. The
Type  indicates whether the results are Scalar , Vector , or Tensor . These types will determine which postprocessing
techniques will be available in order to view the results quantity. Postcodes  indicates which MSC Nastran element
postcodes the data comes from. The Description  gives a brief discussion about the results quantity. The Output  Requests&lt;br&gt;
forms use the actual primary and secondary labels which will appear in the results. For example, if Strain, Elastic  is selected
on the Element Output Requests  form, the Strain, Elastic  is created for postprocessing.
Postprocessing Contact
Rigid geometry results that exist in the MSC Nastran results file contain translation and rotation information per
increment. The rigid body NURB data (rigid geometry) can be imported into an empty database, but any translation or
rotation of that rigid geometry is only visible, viewable, or able to animate within Patran under the following conditions:
The standard output includes, at the end of each increment, a summary of information regarding each body. This
information reports the increment&amp;rsquo;s rigid body velocity, the position of the center of rotation, and the total loads on the
body. These last values are obtained by adding the contact forces of all nodes in contact with the rigid body. Deformable
bodies being in equilibrium have no load reported.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran232
Main Index
Additional information can be obtained by means of the NLPOPRM  case control command, NLDBG  keyword. In such
cases, all the contact activity is reported. Namely, every time a new node touches a surface or separates from a surface, a
corresponding message is issued.
The MSC Nastran results file contains the results for both the deformable bodies and the rigid bodies. In performing a
contact analysis, you can obtain three types of results. The first is the conventional results from the deformable body. This
includes the deformation, strains, stresses, and measures of inelastic behavior such as plastic and creep strains. In addition
to reaction forces at conventional boundary conditions, you can obtain the contact forces and friction forces imparted on
the body by rigid or other deformable bodies. By examining the location of these forces, you can observe where contact has
occurred, but MSC Nastran also allows you to select the contact status as a results file variable:
A value of 0 means that a node is not in contact.
A value of 0.5 means the node is in near thermal contact.
A value of 1 means that a node is in contact.
A value of 2 means the node is on a cyclic symmetry boundary.
It is also possible to obtain the resultant force following from contact on the deformable bodies and the resultant force and
moment on the rigid bodies. The moment is taken about the user-defined centroid of the rigid body. The time history of
these resultant forces are of significant issues in many engineering analysis. Of course, if there is no resultant force on a rigid
body, it implies that body is not in contact with any deformable body.
Finally, if the additional print is requested via the NLPOPRM  case control, NLDBG  keyword, the output file reflects
information on when a node comes into contact, what rigid body/segment is contacted, when separation occurs, when a
node contacts a sharp corner, the displacement in the local coordinate system, and the contact force in the local coordinate
system. For large problems, this can result in a significant amount of output.
The motion of the rigid bodies can be displayed as well as the deformable bodies. Rigid bodies which are modeled using
the piecewise linear approach are displayed as line segments for flat patches.
Advanced Output Requests
This form provides great flexibility in creating output requests. Output requests may be associated with different groups
(SET  options in MSC Nastran) as well as different superelements. The output requests available depend on the chosen&lt;br&gt;
Solution Types , Solution Parameters , and  T ranslation Parameters . The Advanced Output Requests  form is sensitive to the
Result Type  selected. The Form Type , Delete , OK, Defaults , and Cancel  buttons operate exactly like on the  Basic Output
Requests  form.&lt;/p&gt;
&lt;p&gt;233 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index
Table 7-2  Options Descriptions
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions
Sorting By
Node/ElementSORT1 Elements No Output is presented as tabular listing of
nodes/elements for each load,
frequency, eigenvalue, or time.
By
Frequency/Tim
eSORT2 Elements No Output is presented as tabular listing of
frequency or time for each node or
element.
Format Rectangular REAL Elements No Requests real and imaginary format for
complex output.
Polar PHASE Elements No Requests magnitude and phase format
for complex output.
Tensor Von Mises VONMISES Elements No Requests von Mises stresses or strains.
Maximum
ShearMAXS Elements No Requests Maximum shear or
Octahedral stresses or strains.
Element
PointsCubic CUBIC Elements No Requests QUAD4 stresses or strains at
the corner grid points as well as the
center using the strain gage approach
with cubic bending correction.
Corner CORNER Elements No Requests QUAD4 stresses or strains at
the corner grid points as well as the
center.
Center CENTER Elements No Requests QUAD4 stresses or strains at
the center only.
Strain Gage SGAGE Elements No Requests QUAD4 stresses or strains at
the corner grid points as well as the
center using the strain gage approach.
Bilinear BILIN Elements No Requests QUAD4 stresses or strains at
the corner grid points as well as the
center using bilinear extrapolation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran234
Main Index
Composite
Plate
OptionsElement Stresses STRESS=N (or
ALL) in case
control and
PARAM,NOC
OMPS,-1  in
bulk data entryElements:
SurfacesNo Composite element ply stresses and
failure indices are suppressed. Element
stresses for the equivalent homogeneous
element are output.
Ply Stresses STRESS=N (or
ALL) in case
control and
PARAM,NOC
OMPS,-1  in
bulk data entryElements:
SurfacesNo Composite element ply stresses and
failure indices are output. Model
should contain PCOMP  entry defining
composites.
Ply Strains STRESS=N (or
ALL) in case
control and
PARAM,NOC
OMPS,-1  in
bulk data entryElements:
SurfacesNo Composite element ply strains and
failure indices are output. Model
should contain PCOMP  entry defining
composites.
Element and Ply
StressesSTRESS=N (or
ALL) in case
control and
PARAM,NOC
OMPS,-1  in
bulk data entryElements:
SurfacesNo Composite element ply stresses and
failure indices as well as Element
stresses for the equivalent homogeneous
element are output. Model should
contain PCOMP  entry defining
composites.
Element and Ply
StrainsSTRESS=N (or
ALL) in case
control and
PARAM,NOC
OMPS,-1  in
bulk data entryElements:
SurfacesNo Composite element ply strains and
failure indices as well as Element
stresses for the equivalent homogeneous
element are output. Model should
contain PCOMP  entry defining
composites.Table 7-2  Options Descriptions  (continued)
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions&lt;/p&gt;
&lt;p&gt;235 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index
Plate Strain
Options
Plane Curv. STRCUR Elements:
SurfacesNo This option is available for Element
Strains  output requests only. Strains
and curvatures are output at the
reference plane for plate elements.
Fiber FIBER Elements:
SurfacesNo This option is available for Element
Strains  output requests only. Strains at
locations Z1 and Z2 (specified under
element properties) are output at the
reference plane for plate elements.
Output
CoordinateCoord COORD CID Elements:
Surfaces,
VolumesYes Selects the output coordinate frame for
grid point stress output. Coord 0 is the
basic coordinate frame.
Volume
OutputBoth Blank Elements:
VolumesYes Requests direct stress, principal stresses,
direction cosines, mean pressure stress
and von Mises equivalent stresses to be
output.
Principal PRINCIPAL Elements:
VolumesYes Requests principal stresses, direction
cosines, mean pressure stress and von
Mises equivalent stresses to be output.
Direct DIRECT Elements:
VolumesYes Requests direct stress, mean pressure
stress and von Mises equivalent stresses
to be output.Table 7-2  Options Descriptions  (continued)
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran236
Main Index
Fiber All FIBER, ALL Elements:
SurfacesYes Specifies that grid point stresses will be
output at all fiber locations, that is at
Z1, Z2 and the reference plane. Z1 and
Z2 distances are specified as element
properties (default Z1=-thickness/2,
Z2= +thickness/2).
Mid FIBER, MID Elements:
SurfacesYes Specifies that grid point stresses will be
output at the reference plane.
Z1 FIBER, Z1 Elements:
SurfacesYes Specifies that grid point stresses will be
output at distance Z1 from the
reference plane
(default Z1=-thickness/2).
Z2 FIBER, Z2 Elements:
SurfacesYes Specifies that grid point stresses will be
output at distance Z2 from the
reference plane
(default Z2=+thickness/2).
Normal X1 NORMAL X1 Elements:
Surfaces,Yes Specifies the x-axis of the output
coordinate frame to be the reference
direction for the positive fiber and shear
stress output.
X2 NORMAL X2 Elements:
SurfacesYes Specifies the y-axis of the output
coordinate frame to be the reference
direction for the positive fiber and shear
stress output.
X3 NORMAL X3 Elements:
SurfacesYes Specifies the z-axis of the output
coordinate frame to be the reference
direction for the positive fiber and shear
stress output.
Method Topological TOPOLOGI-
CALElements:
SurfacesYes Specifies the topological method for
calculating average grid point stresses.
This is the default.
Geometric GEOMETRIC Elements:
SurfacesYes Specifies the geometric interpolation
method for calculating average grid
point stresses. This method should be
used when there are large differences in
slope between adjacent elements.Table 7-2  Options Descriptions  (continued)
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions&lt;/p&gt;
&lt;p&gt;237 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index
X-axis of
Basic CoordX1 AXIS, X1 Elements:
SurfacesYes Specifies that the x-axis of the output
coordinate frame should be used as the
x-output axis and the local x-axis when
geometric interpolation method is
used.
X2 AXIS, X2 Elements:
SurfacesYes Specifies that the y-axis of the output
coordinate frame should be used as the
x-output axis and the local x-axis when
geometric interpolation method is
used.
X3 AXIS, X3 Elements:
SurfacesYes Specifies that the z-axis of the output
coordinate frame should be used as the
x-output axis and the local x-axis when
geometric interpolation method is
used.
Branch Break BREAK Elements:
SurfacesYes Treats multiple element intersections as
stress discontinuities in the geometric
interpolation method.
No Break NOBREAK Elements:
SurfacesYes Does not treat multiple element
intersections as stress discontinuities in
the geometric interpolation method.
Tolerance 0.0 TOL=0.0 Elements:
SurfacesYes Defines the tolerance to be used for
interelement slope differences. Slopes
beyond this tolerance will signify
discontinuous stresses.
Intermediat
e Output
OptionsYes INTOUT field
of NLSTEP&lt;br&gt;
bulk data entryAll Once per
subcaseIntermediate outputs are requested for
every computed load increment.
Applicable for nonlinear static solution
type only.
No INTOUT field
of NLSTEP&lt;br&gt;
bulk data entryAll Once per
subcaseIntermediate outputs are requested for
the last load of the subcase. Applicable
for nonlinear static solution type only.
All INTOUT field
of NLSTEP&lt;br&gt;
bulk data entryAll Once per
subcaseIntermediate outputs are requested for
every computed or user-specified load
increment. Applicable for nonlinear
static solution type only.Table 7-2  Options Descriptions  (continued)
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran238
Main Index
Suppress
Print for
Result TypeN/A Specifies PLOT
option instead
of PRINT on
the case control
output request
entry.All Yes Print to the .f06 file is suppressed for
the result type when this is selected.
Output
Device
OptionsPrint Specifies
PRINT on a
case control
request entry;
e.g., DISPL .All Yes The printer will be the output medium
for the .f06 file.
Punch Specifies
PUNCH on a
case control
request entry;
e.g., DISPL .All Yes The punch file will be the output
medium.
Both Specifies both
PRINT and
PUNCH.All Yes The printer and punch file will be the
output medium.
State
VariablesNLSTRESS in
Case Control
and NLOUT
with ESV in
Bulk Data
EntryAll Yes To fully support submittal of MSC
Nastran with UDS for SOL 400, the
specification of state variables is
necessary. Use this section to specify the
state variables.
Number of State
VariablesAll Yes Text box to enter the number of state
variables.
State Variable
NameSV in Bulk
Data EntryAll Yes Text box to enter the name of the
selected state variable.
Data ESV in Bulk
Data EntryAll Yes Spreadsheet displaying the state
variables and their names.Table 7-2  Options Descriptions  (continued)
Options LabelCase Control
Command or
Bulk Data
Options GroupsMultiple
Select
Allowed Descriptions&lt;/p&gt;
&lt;p&gt;239 Chapter 7: Results Output from the Analysis
Postprocessing SOL 400 with Patran
Main Index&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Postprocessing SOL 400 with Patran240
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 8: Load and Constraint Conditions
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
8Load and Constraint
Conditions
Introduction
Constraints
Enforced Motion Constraints (SPCD and SPCR)
Applying Constraints
Spatial, Time, Temperature, and Other Dependencies
Static Loads
Distributed Loads
Inertial and Dynamic Loads
Thermal Loads (TEMP and TEMPD)
Export of Static Loads&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction242
Main Index
Introduction
The purpose of this chapter is to describe the procedures for applying loads and constraints to SOL 400 models. Each type
of load or constraint is described, including how it is used in finite element modeling and in the MSC Nastran input.
Further information on how the various types of loads and constraints are used can be found in standard finite element text
books, and further information on the MSC Nastran input format can be found in the QRG .
Constraints
In static analysis, the rigid body modes must be restrained in order to remove the singularity of the stiffness matrix. The
required constraints may be supplied with single point constraints, multipoint constraints, or free body supports. If free
body supports are used, the rigid body characteristics will be calculated and a check will be made on the sufficiency of the
supports.
This process involves specifying the appropriate boundary conditions for your model. Boundary conditions are imposed in
the form of constraints on selected degrees of freedom on the model. Typically, several degrees of freedom (at least six) are
constrained to ground using either SPC  bulk data entries or the PS field of the GRID entry.
Besides single-point constraints, MSC Nastran provides a method of creating linear constraint relationships between several
degrees of freedom known as multiple-point constraints or MPCs. This chapter discusses both the single-point and
multiple-point constraints.
Single-Point Constraints (SPC, SPC1)
A Single-Point Constraint (SPC) is a constraint that is applied to a single degree of freedom, which may be either a
component of motion at a grid point or the displacement of a scalar point.
The primary applications for single-point constraints are as follows:
1.To constrain a structure.
2.To remove degrees of freedom that are not used in the structural analysis (i.e., are not connected to any structural
elements or otherwise joined to the structure).
3.To remove degrees of freedom that are very weakly coupled to the structure. This condition can occur, for example,
to the rotations about the normal of a slightly curved shell. In this case, a judgment must be made whether to remove
the degree of freedom using an SPC (in which case the structure may be over-constrained), or to leave it in the
problem (in which case the stiffness matrix is nearly singular).
When you apply a single-point constraint to remove a singularity, it is not required for the restrained component of motion
to be aligned exactly with the singular direction of motion (however, it is highly recommended). Consider the pair of
colinear pin-connected rods, shown in Figure 8-1, that permit unrestrained motion at point G in any direction perpendicular
to the axis of the rods.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P14</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_014/</guid>
      <description>
        
        
        &lt;p&gt;243 Chapter 8: Load and Constraint Conditions
Enforced Motion Constraints (SPCD and SPCR)
Main Index
Figure 8-1  Pin-Connected Rods
Enforced Motion Constraints (SPCD and SPCR)
An enforced motion constraint is used to apply a prescribed motion at a grid point, which may be either a component of
motion at a grid point or the displacement of a scalar point. SPCD  and SPCR  define an enforced displacement value for
static analysis and an enforced displacement, velocity or acceleration in dynamic analysis. SPCD  provides the final total
displacement, velocity, or acceleration at the end of the current loadcase, and SPCR  determines the incremental
displacement, velocity, or acceleration during the current loadcase, relative to the value of the previous loadcase.
When a GRID has deformation due to an applied load or motion applied in the previous STEP  and the user wishes to
prescribe displacements in the current STEP  relative to this unknown magnitude, then the SPCR  capability of applying
relative motion will provide an efficient procedure.
The primary applications for enforced motion constraints are as follows:
1.To apply a motion accurately on a structure;
2.To apply an incremental motion on a structure;
It should be noted that SPCD /SPCR  are treated as loads. SPC and SPC1  are requested by the SPC Case Control
command, while SPCD  and SPCR  are requested by the LOAD  or DLOAD  Case Control commands. A degree of freedom
referenced by SPCD  must be also on an SPC or SPC1  entry. A degree of freedom referenced by SPCR  must be also on a
SPC1 , but cannot be on an SPC.
Applying Constraints
Once you have constructed a model of your structure, constraints are added that force selected portions of your model to
remain fixed or to move by a specified amount. These constraints can be either:CROD 1
CROD 2xny
G&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Spatial, Time, Temperature, and Other Dependencies244
Main Index
Single Point Constraints
Multipoint Constraints
Single Degrees of Freedom
A constraint on a single degree of freedom (Single Point Constraint, or SPC) assigns a zero or nonzero value to a single
degree of freedom. It can be expressed as:
i = u (8-1)
where u is the value of the prescribed displacement on the degree of freedom i. The case of u = 0 is the most common
case, and is often used as a boundary condition, to “fix” or “ground” the movement of a point in a certain direction.
Since the value of i is known, one could, in principle, eliminate the specified degree of freedom from the other degrees of
freedom to be solved for as unknowns. This would reduce the size of the system of equations to be solved, but on the other
hand it would take time to perform the elimination, and this approach adds complexity to the code.
SOL 400 uses a different technique. A number which is large compared to the stiffness coefficients (say, for discussion, 1020)
is added to the diagonal term K11 of the equation for the degree of freedom to be constrained. Also, if the degree of freedom
is to be constrained to a nonzero value u, then u ×1020 is added to the right hand side of the modified equation. This
modified equation is now:
(8-2)
Assuming all Kij to be small with respect to 1020, the solution of the system of equations is obtained with negligible error.
The modified system of equations remain well conditioned. The value used by SOL 400 for the large number is 1010 times
the largest stiffness coefficient found on the diagonal of the stiffness matrix.
Spatial, Time, Temperature, and Other Dependencies
Different types of analyses require different kinds of loading which include different types of dependencies, such as spacial
or time distributions, temperature or frequency dependencies, and possibly others. For example, the loads in stress analysis
are forces; those in heat transfer analysis are heat fluxes. Force is a vector quantity defined by magnitude and direction; heat
flux is a scalar quantity defined by magnitude only. Loading can be time invariant (constant value) or time dependent.
Static Loads
A load is applied to the model only if it is specifically called out in the case control section. For reasons discussed earlier,
this provides you with greater versatility. If, however, you forget to request any load in the case control section, the problem
will be solved with zero loads applied. There are no error or warning messages indicating that there is no load being applied.
Forgetting to specify a load request in the case control section can be a common mistake many new users make. An
indication of this problem is when all of the displacements and stresses come out to be zero.Ki11 Kii1020i Kinn+ + + + Fiu1020 + =&lt;/p&gt;
&lt;p&gt;245 Chapter 8: Load and Constraint Conditions
Static Loads
Main Index
Load Sets
Subcases
In linear analysis, a subcase contains all the loads and boundary conditions used within a single linear analysis case. For
computational efficiency, it is possible to run multiple subcases (using the same inverted stiffness matrix) in the same
analysis run and simply resolve using the different loads in the multiple subcases.
For example, one load case may represent the loads and boundary conditions for each time point in a time-dependent
nonlinear analysis. Multiple load cases can be applied to the same model as subcases for linear analysis to examine how the
model reacts to different loading conditions. Load cases are central to the ability to perform complex analyses on an
individual model. For nonlinear analysis, multiple loadcase runs are used to define the load history on the model. The
ending point of the last step is the starting point of the next step.
For SOL 400 runs, the Subcase Select  form looks the same, except for the Select Steps for New Subcase  button  is not grey
(it can be picked).
For SOL 400, you can select subcases just as in any other solution case, except for one difference. SOL 400 differentiates
between load steps and subcases. A number of load steps make up a subcase. The list of load steps in the Selected Load
Steps  list box shows you which Patran subcases are designated as load steps for the analysis. A subordinate form shows you
which of those selected load steps are designated as the first load steps in the subcases to be run in the analysis. This is
somewhat confusing terminology as it conflicts with Patran&amp;rsquo;s terminology of a subcase. To help you visualize the setup of
subcases versus load steps, a tree widget is used to show the subcases and which load steps are selected for each subcase. You
can interact with either the tree widget or the list boxes. T o add and delete subcases, load steps, or to otherwise manipulate
them on the tree widget, use the right mouse button after selecting a tree item.Table 8-1  Bulk Data Entries for Loads
Loads
FORCEi Defines concentrated load at grid point.
MOMENTi Defines moment at a grid point.
NOLIN1i Defines nonlinear transient load.
PLOAD Defines pressure loads on CQUAD4 , CTRIA3 , CHEXA , CPENTA , and CTETRA . Should not be used
for hyperelastic plane elements CQUAD4 , CQUAD8 , CQUAD , CTRIA3 , and CTRIA6  or for
hyperelastic CHEXA , CPENTA , CTETRA  with midside nodes.
PLOAD2 Defines pressure loads on shell elements, CQUAD4  and CTRIA3 . Not available for hyperelastic
elements.
PLOAD4 Defines pressure loads on surfaces of CHEXA , CPENTA , CTETRA , CTRIA3 , and CQUAD4  elements.
Not available for hyperelastic plane elements CQUAD4 , CQUAD8 , CQUAD , CTRIA3 , and CTRIA6 .
PLOADX1 Defines pressure loads on axisymmetric elements CQUADX  and CTRIAX .
RFORCE Defines load due to centrifugal force field.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Static Loads246
Main Index
Load Steps
A load step (or analysis step) is defined by associating a load case, an analysis procedure, output requests, and any associated
parameters that guide the solution path for the chosen analysis procedure. Whereas a load case is a collection of loads and
boundary conditions for a particular load step, a load step is a collection of relevant analysis parameters including the
associated load case.
The load for a subcase is often subdivided into the number of increments specified for the subcase. The solution strategy
in nonlinear analysis is to apply the loads in an incremental fashion until the desired load level is reached.
Load Types
The static loads in nonlinear analysis consist of concentrated loads, distributed loads, and thermal loads as well as applied
displacements. Most of the relevant loads data applicable to the linear static analysis are also applicable to nonlinear static
analysis. T ransient loads define the loadings as functions of time and the location. A load can be applied at a particular
degree of freedom, pressure over the surface area, or the body force simulating an acceleration.
MSC Nastran is based on the stiffness method and deals primarily with force -displacement relations. In a linear elastic
system, force and displacement are related through the constant stiffness of the system; the governing equation of such a
system can be expressed as
Ku = F (8-3)
where K is the stiffness matrix and uandF are nodal displacement and nodal force vectors, respectively. Equation (8-3) can
be solved either for unknown displacements subjected to prescribed forces or for unknown forces (reactions) subjected to
prescribed displacements. At any nodal point, the nodal forces and nodal displacements cannot be simultaneously
prescribed as boundary conditions for the same degree of freedom.
The prescribed force boundary conditions are often referred to as loads and the prescribed displacement boundary
conditions as boundary conditions.
In a nonlinear stress analysis problem, MSC Nastran carries out the analysis incrementally and expresses the governing
equation in terms of the incremental displacement vector u and the incremental force vector F.
Ku = F (8-4)Note:   You must prescribe at least a minimum number of boundary conditions to insure that rigid body motion does
not occur.
Note:   Boundary conditions can be prescribed in either the global or a local coordinate system. A nodal transformation
between the global and the local coordinate systems must be carried out if the boundary condition is prescribed
in a local system.&lt;/p&gt;
&lt;p&gt;247 Chapter 8: Load and Constraint Conditions
Static Loads
Main Index
Consequently, you must also define both the loads and the prescribed nodal displacements incrementally.
In addition to the prescribed displacement boundary conditions, constraint relations can exist among the nodal
displacements. For example, the first degree of freedom of node i is equal to that of node j at all times. The expression of
this constraint relation is
ui = uj (8-5)
Generally, a homogenous linear constraint equation can be expressed as
ut = a1u1 + a2u2 +  &amp;hellip; +anun (8-6)
where u represents the degrees of freedom to be constrained, u1,  &amp;hellip; un are other retained degrees of freedom in the structure,
and a1,  &amp;hellip; an are constants.
You can enter constraints through either the MPC , RBE2 , or RBE3  bulk data entries.
Loading Types
You can categorize a particular type of load as either a point (concentrated) load or surface/volumetric (distributed) load,
depending on application conditions. The spatial distribution of the load can be uniform or nonuniform. Special loading
types also exist in various analyses. For example, centrifugal loading exists in stress analysis, and convection and radiation
exist in heat transfer analysis. You can add point loads directly to the nodal force vector, but equivalent nodal forces first
must be calculated by MSC Nastran from distributed loads and then added to the nodal force vector. These distinguishing
features are described below.
A point (or nodal) load of either a vector (force, moment) or a scalar (heat flux) quantity is a concentrated load that is
applied directly to a nodal point (see Figure 8-2). Mechanical point loads can be defined as fixed direction forces or as
follower forces.  In a global or local coordinate system, a force vector must be defined in terms of its vector components (see
Figure 8-3). If the force vector is defined in a local coordinate system, then a global-to-local coordinate transformation matrix
must be defined for the nodal point (see Figure 8-4 and Figure 8-5). For axisymmetric elements, the magnitude of the point
load must correspond to the ring load integrated around the circumferences.
Figure 8-2  Schematic of a Point Loady
x
Point (a)
Heat Flux Q (Scalar)Q
y
x
Point (b)
Force F (Vector)F&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Static Loads248
Main Index
Figure 8-3  Force Components
Figure 8-4  Special Selection of Local (x”, y”) Coordinate System Force Components:
Loads on Grid Points and Scalar Points
FORCE
Grid based forces can be defined using the FORCE , FORCE1 , and FORCE2  entries. The FORCE1  and FORCE2  entries
may be used to define a force that rotates with the finite element mesh.
MOMENT , MOMENT1 , and MOMENT2  are similar to the three FORCE  entries. The only difference is that the force
entries are used to apply concentrated force in the translational degrees of freedom (T1, T2, and T3). The moment entries
apply concentrated moments in the rotational degrees of freedom (R1, R2, and R3).
SLOAD
The SLOAD  entry is used to apply loads to scalar points only – it cannot be used with grid points. y
xF
FxFy
y
xF
Fx’Fy’y’
x’
y
xFy” = 0y” x”
F = Fx”
Fy&amp;rsquo;&amp;lsquo;0=&lt;/p&gt;
&lt;p&gt;249 Chapter 8: Load and Constraint Conditions
Distributed Loads
Main Index
Distributed Loads
Distributed Loads on Line Elements
PLOAD1
To apply a distributed load to a CBAR , CBEAM , or CBEND  element, you use the PLOAD1  entry. The PLOAD1  entry
can be used for both concentrated and linearly distributed forces. For the CBAR  and CBEAM  elements, the linearly
distributed force may be applied between any two locations on the element (or off the element if you wish.) For the
CBEND  element, the linearly distributed loads are restricted to linearly varying forces and moments between the end
points.
PLOADB3
The PLOAD3  bulk data entry in the QRG  defines a distributed load over the entire length of a CBEAM3  element axis.
The load is applied along the line of the shear center.
Distributed Loads on Surfaces
There are three bulk data entries available to apply distributed loads to element surfaces. The PLOAD  and PLOAD2  entries
are used to apply a distributed load to the CQUAD4 , CTRIA3 , and CSHEAR  elements only. The PLOAD4  entry can be
used to apply distributed loads on any of the 2-D elements and on the surfaces of 3-D elements.
The PLOAD  entry is different from the other PLOADi  entries because it references three or four grid points rather than
the element itself. When the PLOAD  entry is used to load a CTRIA3  element, then the total force acting on the element
is divided evenly among the three corner points. When the PLOAD  entry is used to load a CQUAD4  element, the total
force acting on the element is distributed to corner grid points using the geometric shape of the element. The resultant of
the applied corner loads acts through the centroid of the element. The direction of the pressure load is determined using
the right-hand rule by the numbering sequence of the grid points on the PLOAD  entry.
PLOAD2
The format for the PLOAD2  bulk data entry is similar to the PLOAD  entry except that the PLOAD2  references the
element ID instead of the grid points where the element is attached.
The PLOAD2  is usually preferred over the PLOAD  entry because it is easier to use. The PLOAD2  entry, similar to the
PLOAD  entry, is limited to pressure acting normal to the element surface. The direction of the pressure load is determined
by the numbering sequence of the grid points on the connectivity entry ( CQUAD4 , CTRIA3 , etc.).
PLOAD4
The PLOAD4  entry possesses the most general pressure definition. It can be used to apply pressures and/or tractions to any
of the two-dimensional elements and the surfaces of the 3-D elements. The PLOAD4  entry can be used for everything that
a PLOAD2  entry is used for. The direction of the pressure can be set by one of two methods. By default, the direction of&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Distributed Loads250
Main Index
the pressure is determined by the element normal. For 2-D elements, the direction of positive pressure is in the direction
of the outward normal as is determined by applying the right-hand rule to the ordering sequence of the grid points on the
connectivity entry. For surfaces of solid elements, the direction of positive pressure is inward toward the center of the
element. The face of the solid to which you are applying the pressure is determined by specifying the appropriate corner
grid points.
Surface/volumetric loads, such as pressure, distributed heat flux, and body force, are distributed loads that are applied to
the surface (volume) of various elements (see Figure 8-5). A surface/volumetric load is characterized by the distribution
(uniform/nonuniform) and the magnitude of the load, as well as the surface to which the load is applied (surface/volume
identification). The total load applied to the surface (volume) is, therefore, dependent on the area (interior) of the
surface (volume).
Figure 8-5  Schematic of Surface/Volumetric Load
Equivalent nodal forces first must be calculated from surface/volumetric loads and then added to the nodal force vector.
MSC Nastran carries out this computation through numerical integration. The calculated equivalent nodal forces for lower-
order elements are the same as those obtained by equally lumping the uniformly distributed loads onto the nodes. However,
for high-order elements, the lumping is no longer simple. As a result, the surface/volumetric loads should not be lumped
arbitrarily.y
x1P2
4 3
2Px
Q
(a) Distributed Mechanical Load (b) Distributed Heat FluxPyP1
Py
x1P2
4 3
2P1
q
Surface 2-3:
Uniform Normal Pressure p Uniform Heat flux q
Surface 3-4:
Nonuniform Normal Pressure p1 - p2 Nonuniform Heat flux q1 = q2
Whole Volume:
Volumetric Loads Px’Py Volumetric Heat Flux Q&lt;/p&gt;
&lt;p&gt;251 Chapter 8: Load and Constraint Conditions
Distributed Loads
Main Index
Figure 8-6  Allocation of a Uniform Body Force to Nodes for a Rectangular Element Family
This consistent load is generated automatically inside MSC Nastran by using the PLOAD4  entry. 1/4
1/4 1/41/41/2 1/2 1/4
1/4
1/41/4
-1/12
1/3
1/31/3
-1/12
-1/12-1/12
1/31/6 1/6 2/3-1/1 2 -1/12
-1/12 -1/12 1/31/3
1/3 1/3&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Distributed Loads252
Main Index
Figure 8-7  Consistent Loads Due to Uniform Loads on a Solid Element FaceCHEXA
(a)P/4
P/4CPENTA
(6 Nodes)
(b)P/4
P/4
CPENTA
(6 Nodes)
(c).08333P
(d)(8 Nodes)P/4
P/4P/4
P/4
.3333P.08333P.08333P
.08333P
.3333PCHEXA
(20 Nodes)CPENTA
(15 Nodes)
CPENTA
(15 Nodes).08333P.3333P.08333P.08333P
.08333P
.3333P.3333P
.3333P.3333P
.3333PCPENTA
(6 Nodes)&lt;/p&gt;
&lt;p&gt;253 Chapter 8: Load and Constraint Conditions
Inertial and Dynamic Loads
Main Index
Inertial and Dynamic Loads
Gravity and Centrifugal Force
Gravity (GRAV)
The GRAV  entry is used to define the direction and magnitude of a gravity vector in any user-defined coordinate system.
The components of the gravity vector are multiplied by the mass matrix to obtain the components of the gravity force at
each grid point. Since the mass matrix is used to compute the forces, you must have mass in your model, typically defined
by the density on a material entry. gravity also includes the effects of nonstructural mass and lumped mass defined through
the CONM1  and CONM2  entries. Note that the GRAV  entry must have a unique SID-no other loading entry may use
the same ID. The LOAD  entry (discussed in the next section) can be used to combine gravity loading with other types of
loading.
Gravity loading is one the best loadings to use when you are performing model checkout because the force is applied at
every point in the structure that has mass. If you have modeling errors where elements or grids points are not attached to
the structure, their displacement is unbounded and the job fails. If this occurs, a diagnostic message indicating the grid
point and component, where the singularity is detected, is printed.
Centrifugal (RFORCE)
The RFORCE  entry is used when you need to apply a force to your structure due to rotational velocity and/or acceleration.
On the RFORCE  entry, you input the components of a spin vector that are used internally to compute centrifugal forces.
Each component of the spin vector is multiplied by the same scale factor.
You must select one of two methods for the internal calculation of the loading vector.
Method=1 yields correct results only when there is no coupling in the mass matrix. This occurs when the lumped mass
option is used with or without the ZOFFS  option (see the CQUAD4  entry for a description of ZOFFS). Method=2 yields
correct results for lumped or consistent mass matrix only if the ZOFFS option is not used. The acceleration terms due to
the mass offset (X1, X2, X3) on the CONM2  entry are not computed with method=2. All the possible combinations of
mass matrices and offset and the correct method to be used are shown in Table 8-2.
In addition, for problems with elements that have edge grid points ( CQUAD8 , CTRIA6 , CTRlAX6 , CHEXA , CPENTA ,
and CTETRA ), correct centrifugal loads are produced only if the parameter PARAM,COUPMASS,x  (where x is greater
than 1), is included in the input file and Method 2 is used.Table 8-2  Restrictions when using the RFORCE Entry
No Offset Offset
Lumped Method=1 or
Method=2 Method=1
Coupled Method=2 Neither&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermal Loads (TEMP and TEMPD)254
Main Index
Note for PARAM,COUPMASS=-1  (the default) the generation of lumped mass matrices that contains only translational
components for the elements listed above. Notable exceptions to this are the CBAR  and CBEAM  elements, both of which
will yield rotational and coupling terms in order to preserve the mass center when element offsets are defined. This offset
mass is ‘lumped’ in the sense that it has low matrix rank, and is ‘coupled’ in the sense that there are nonzero off diagonal
terms in the mass matrix. The CBEAM  element will also yield a mass moment of inertia about the local X axis of the
element, and if NASTRAN BARMASS &amp;gt;0, then this is also true of the CBAR  element.
In order to yield a lumped mass matrix containing translational components only for the CBAR  and CBEAM  elements,
set SYSTEM(414) = 1 , along with the default value for PARAM,COUPMASS (-1) . The default value (0) for
SYSTEM(414)  produces the coupled mass matrices for CBAR  and CBEAM .
Acceleration Loads (ACCEL and ACCEL1)
ACCEL  and ACCEL1  bulk data entries are used to apply an acceleration load that varies across the structure. The ACCEL&lt;br&gt;
entries apply acceleration loads which may vary over a region of the structural model. The load variation is based upon the
tabular input defined on this bulk data entry. The ACCEL1  entry applies static acceleration load at individual grid points.
The ACCEL  and ACCEL1  bulk data entries in the QRG  are used in the same way as other load entries (such as GRAV ,
FORCE , and MOMENT , etc.) through the MSC Nastran case control commands.
Initial Stress and Initial Plastic Strain Mapping from Previous Results
MSC Nastran allows you to enter a set of initial stresses through the ISTRESS  bulk data entry that simulates the stress state
in the structure at the beginning of an analysis. A typical example is prestress in a tensioned fabric roof. The set of initial
stresses must be self-equilibrating and should not exceed the yield stress of the material.
MSC Nastran allows you to define the equivalent plastic strain using the IPSTRAIN  bulk data entry throughout the model.
This is useful in metal forming analysis in which the previous amount of equivalent plastic strain is often required. This
history dependent variable represents the amount of plastic deformation that the model was subjected to, and is used in the
work (strain) hardening model. This is only used to determine the value of the strain hardening once plasticity occurs.
Preprocessors such as Patran and SimXpert are very useful in mapping stress states between analyses.
Thermal Loads (TEMP and TEMPD)
Thermal loads can be used on a structure to perform stress analysis or to determine thermal expansion. You must define a
temperature distribution via TEMPij  bulk data entries and thermal expansion coefficients.Thermal expansion coefficients
are specified on the material bulk data entries. Temperatures can be specified at grid points ( TEMP  and TEMPD  bulk data
entries in the QRG and interpolated to grid points within elements.
Alternatively, temperature data can be specified on an element-by-element basis as shown in Table 8-3.&lt;/p&gt;
&lt;p&gt;255 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
Average temperatures specified directly for an element take precedence over the temperatures interpolated from the
element’s connected grid points. Solid elements obtain their temperatures only by interpolation from connected grid points.
Note that interpolated grid point temperatures provide temperature gradients over the neutral surface of shell elements,
whereas the TEMPPi  entries do not.
The temperature data and the thermal expansion coefficients are used internally to calculate equivalent forces and moments
acting at the grid points.
The TEMPERATURE  (Case) (INIT ) and TEMPERATURE  (Case) (LOAD ) case control commands specify the initial
temperature and applied temperature, respectively. The TEMP(INIT ) command must appear either above the first subcase
or inside the first subcase.
Export of Static Loads
Functionality exists in MSC Nastran to facilitate load transfer from one run to the next in three ways:
1.MSC Nastran can use Grid Point Force methodology to extract the load on a user-defined free body. This load is
output on a PG-like matrix that has an associated NAME , ID, and optional label. A BGPDT  data block is also
produced that contains information on the grids associated with the free-body.
2.MSC Nastran can export static loads from a load case defined in the current subcase.
3.MSC Nastran can import a load from a pre-defined database (including, but not limited to, loads produced using
the previous steps) to be used in the formation of the load on a structure.
The design of complex structures frequently involves joint development with a system integrator and a number of
subcontractors. The development of design loads is typically the task of the system integrator based on an analysis of the
entire vehicle. It is then necessary to communicate the loads on the pieces of the structure to various subcontractors. The
ability to extract the load on a free body is particularly useful in aeroelasticity, where the load can be a combination of
applied, rigid aerodynamic and inertial loadings. The ability to export the statically applied load, or some portion of the
load, is felt to be of benefit when it is desired to apply the same loading to different representations of the same structure.  Table 8-3  Bulk Data Entries Used for Temperature Definition on Elements
Elements Temperature Data Bulk Data Entry
CROD , CONROD ,
CTUBEAverage temperature at ends A and B. TEMPRB
CBAR , CBEAM , CBEND Average temperature and cross-sectional temperature
gradients at ends A and B.TEMPRB
CBEAM3 Temperature field and gradients along the beam TEMPB3
CQUAD4 , CTRIA3 ,
CQUAD8 , CTRIA6Average temperature and gradient in the thickness direction. TEMPP1&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads256
Main Index
The ability to export a statically applied load is enabled by the case control command EXPORTLD  (Case) in the QRG .
T ypically, this is applied at the subcase level, but can be applied above the subcase level as well. The command results in a
unique load vector (qualified by LOADID  and LOADNAME) for each subcase. If a SET is part of the EXPORTLD&lt;br&gt;
command, only the loads on the grids associated with this grid are exported. A BGPDT  (basic grid point data table) is
output with the load vector to identify the degrees of freedom associated with each of the rows in the vector.&lt;br&gt;
The ability to export a free body load is done through the combination of the FBODYLD  (Case) case control command
and the FBODYLD  and FBODYSB  bulk data entries in the QRG . The FBODYLD  case control command is used to point
to the FBODYLD  bulk data (via the NAMEi  on the case control command) that defines the submodel for which the
freebody load will be calculated and stored. The case control command also provides an optional load ID that can be
associated with the load. The FBODYLD  bulk data entry, in turn, points to a FBODYSB  bulk data entry. The FBODYLD&lt;br&gt;
entry provides a label that is intended to identify the loading condition while the FBODYSB  entry has a second label that
is intended to identify the component. Both labels are optional. The FBODYSB  entry identifies the grids and elements
that make up the free body and provides the ability to exclude certain types of grid point forces in creating the free body
load.
The FBODYLD  request produces informational messages from a DBDICT  statement that requests output on the presence
of all FBLPG  and FBLBGPDT  data blocks along with qualifiers as to loadid , namei  (from case control and the
FBODYLD  bulk data entry), submodel name from the FBODYSB  entry and the labels from the two bulk data entries.
The remarks for the EXPORTLD  case control command indicate how the loads created with an EXPORTLD  request can
be imported in a subsequent run using FMS statements such as:
ASSIGN loads1=’run1.MASTER’
DBLOCATE datablk=(EXTLD,EXTBGP) WHERE(LOADNAME=’ALLCASES’),&lt;br&gt;
CONVERT(LOADID=LOADID+1000) LOGICAL=loads1
…
CEND
LOADS=1001 $ Select external load with LOADID=1001, imported from previous
run.
The EXTLD  data block contains the loads and the EXTBGP  contains the grid point information that is used to match up
the imported loads with the grid points. Clearly, it is necessary that the grid IDs have the same meaning in the two runs.
The import of a load created using the FBODYLD  case control command is similar except it is now necessary to rename
the data blocks created in the previous run to match those required for the import of these loads:
ASSIGN loads1=’fbrun1.MASTER’
DBLOCATE datablk=(FBLPG/EXTLD,FBLBGPDT/EXTBGP) WHERE(LOADNAME=’fblcase’),&lt;br&gt;
CONVERT(LOADID=LOADID+1000) LOGICAL=loads1
…
CEND
LOADS=1001 $ Select external load with LOADID=1001, imported from previous
run.
The applied loads are typically excluded when using the FBODYSB  bulk data entry so that only element forces remain at
the grid points.
Import of loads has the following rules&lt;/p&gt;
&lt;p&gt;257 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
If a set of imported loads share a common LOADID  value, then those loads will implicitly be added. The same
holds true for imported loads and bulk data load sets that share a common ID.
To explicitly combine load sets, the load IDs should be made unique. The LOAD  bulk data entry can then be used
to explicitly define the linear combination.
Both standard exported loads ( EXPORTLD ) and free body loads ( FBODYLD ) can be imported and used
together in a single run. It is up to you to keep the load IDs unique between them.
The BGPDT  is used to link the exported loads to the grids points of the model to which they are applied. This
means that the grid IDs for the loaded grids must be the same in the two models.
Using Patran to Apply Loads and Boundary Conditions
The following table outlines the SOL 400 applied conditions that are supported and can be written into the MSC Nastran
SOL 400 input file.
Object Type
Displacement/Velocty/ Acceleration
Nodal
Element Uniform
Element Variable
Force • Nodal
Pressure • Element Uniform
Element Variable
Temperature • Nodal
Element Uniform
Element Variable
Inertial Load • Element Uniform
Initial Displacement • Nodal
Initial Velocity • Nodal
Distributed Load • Element Uniform
Element Variable
CID Distributed Load • Element Uniform
Element Variable
Total Load • Element Uniform
Contact • Element Uniform
Crack (VCCT) • Nodal
Initial Plastic Strain • Element Uniform&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads258
Main Index
Initial Stress • Element Uniform
Initial Temperature • Nodal
The Loads and Boundary Conditions application controls which loads and boundaries and contact information will be
created in the MSC Nastran input file.
The Loads  and Boundary Conditions  application in Patran provides the ability to apply a variety of static and dynamic
loads and boundary conditions including contact surfaces to finite element models. Loads/BCs may be associated with
geometric entities as well as FEM entities. When associated with geometric entities, they can be transferred to finite
elements created on the geometry. Loads and boundary conditions are intended to be created in multiple single purpose
groups referred to as load sets. These sets are grouped into load cases  in the Load Cases  application.
One of the most elegant features in Patran is its ability to create fields that describes the variation of loads and boundary
conditions. The way in which Loads and BCs vary may be defined spatially, by previous analysis results, based on time, or
associated with material properties.
Sets can be visually displayed on the screen by markers which show the location, type, magnitude, and direction of the
applied loads or boundary condition. Only the static portion of a dynamic Loads/BCs set is reflected in the marker display.
Sets can also be displayed as tables.
A powerful capability is the display of any set scalar data directly on the model as a fringe plot. For display purposes, data
are treated as “results,” with full user control over the spectrum, method, shading, etc. Data display is scalar, but the data
can be pressures, vector component magnitudes, and vector resultant magnitudes. Fringe plots can only be displayed on
finite elements. Fringes of a dynamic Loads/BCs set may be displayed at user -specified times.
 &lt;/p&gt;
&lt;p&gt;259 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
Creating Load Cases
The Load Cases  application enables you to combine a large number of individual loads and boundary condition (LBCs)
sets into a single coherent case for application to the model. Each load case you create has a unique user-selected descriptive
name as well as an associated descriptive statement. Load case information is permanently stored in the database (unless
deleted). You can modify it at any time
.
Even if you do not create any load cases, your load and boundary conditions will still be placed into a default current load
case, named “default”. If you create a special load case and make it the current load case, then all subsequent LBCs will be
placed in that load case as long as it is current.
Static Load Cases
Load cases in which none of the constituent loads or boundary conditions sets has a time varying component are called
static load cases. Loads and boundary conditions that will make up a static load case are generated using the Input Data&lt;br&gt;
subform. For static load cases, this subform will vary according to the type of load being created, but its general format
remains constant.&lt;/p&gt;
&lt;p&gt;Time-dependent Load Cases
Load cases in which one or more of the loads and boundary conditions sets has a time varying component are called time-
dependent, or dynamic load cases loads and boundary conditions that will make up a time-dependent load case are also&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads260
Main Index
generated using the Input Data  subform. For time-dependent load cases, this subform incorporates time dependency data
fields.
Displacement LBCs
Boundary conditions can be used to specify the value of the displacements at nodes. To create a boundary condition for
displacement, you need to specify the node number, the degree of freedom(s), and the magnitude of the displacement.
Displacements can be imposed directly on nodes using SPC1  and SPCD  bulk data entries. All non-blank entries will cause
an SPC1  entry to be created. If the specified value is not 0.0, an SCPD  entry will also be created to define the non zero
enforced displacement or rotation.
Zero or nonzero displacements can also be applied across elements in a uniform or variable fashion. The primary use of this
boundary condition is to apply constraints to solid elements.
Patran LBC Application Input Data
Displacement boundary conditions are generated in Patran using the following Object /Type  combinations on the LBC
Application  form.&lt;/p&gt;
&lt;p&gt;261 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
Force LBCs
Concentrated forces and moments can be applied directly to nodes with the ability to define the direction as well as the
magnitude.
Forces and moments are specified with FORCEi  and MOMENTi  bulk data entries, where:
Patran LBC Application Input Data
Forces and moments are generated in Patran using the following Object /Type  combination on the LBC Application  form.Object Type Dimension Bulk Data Entries
Displacement Nodal SPC1
C1, SPCD
D
Element Uniform
Element Variable2-D/3-D SPC1, SPCD
Entry Description
Translations (T1,T2,T3) Defines the enforced translational displacement values. These are in model length units.
Rotations (R1,R2,R3) Defines the enforced rotational displacement values. These are in radians.
Entry Description
FORCE
MOMENTDefines a static concentrated force/moment at a grid point by specifying the magnitude and direction.
FORCE1
MOMENT1Defines a static concentrated force/moment at a grid point where the direction of the force/moment is
defined to be parallel to a vector between two defined grid points.
FORCE2
MOMENT2Defines a static concentrated force/moment at a grid point where the direction of the force/moment is
parallel to the cross product of vectors from G1 to G2 and G3 to G4.
Object Type Dimension Bulk Data Entries
Force Nodal FORCEi,
MOMENTi&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads262
Main Index
Pressure LBCs
Pressure loads can be applied to edges or surfaces of 2-D and 3-D elements. Several bulk data entries are used to apply
pressure loading depending on the element topology.
These pressures are applied to 2-D and 3-D elements only. Pressures for 1-D elements are applied using the Total Load
LBCs  object.
Patran LBC Application Input Data
Pressures are generated in Patran using the following Object/Type  combination on the LBC Application  form.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Uniform Pressure Loads on 2-D ElementsEntry Description
Force (F1,F2,F3) Defines the applied forces in the translation degrees of freedom. This defines the N vector and
the F magnitude on the FORCE  entry.
Moment (M1,M2,M3) Defines the applied moments in the rotational degrees of freedom. This defines the N vector
and the M magnitude on the MOMENT  entry.
Entry Description
PLOAD Defines pressure loads on CQUAD4 , CTRIA3 , CHEXA , CPENTA , and CTETRA . Should not be used
for hyperelastic plane elements CQUAD4 , CQUAD8 , CQUAD , CTRIA3, and CTRIA6  or for
hyperelastic CHEXA , CPENTA , and CTETRA  with midside nodes.
PLOAD2 Defines pressure loads on shell elements, CQUAD4  and CTRIA3 .
PLOAD4 Defines pressure loads on surfaces of CHEXA , CPENTA , CTETRA , CTRIA3 , and CQUAD4  elements.
PLOADX
1Defines pressure loads on axisymmetric elements CQUADX  and CTRIAX .
Object Type Dimension Bulk Data Entries
Pressure Element Uniform 2-D PLOAD4 , PLOADX1 , or
FORCE&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P15</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_015/</guid>
      <description>
        
        
        &lt;p&gt;263 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
2. Uniform Pressure Loads on 3-D Elements
3. Variable Pressure Loads on 2-D ElementsEntry Description
Top Surf Pressure Defines the top surface pressure load on shell elements using a PLOAD4  entry. The negative of
this value defines the P1 through P4 values. These values are all equal for a given element,
producing a uniform pressure field across that face.
Bot Surf Pressure Defines the bottom surface pressure load on shell elements using a PLOAD4  entry. This value
defines the P1 through P4 values.These values are all equal for a given element, producing a
uniform pressure field across that face.
Edge Pressure For Axisymmetric Solid elements ( CTRIAX6 ), defines the P1 through P3 values on the
PLOADX1  entry where THETA on that entry is defined as zero. For other 2-D elements, this
will be interpreted as a load per unit length (i.e., independent of thickness) and converted into
equivalent nodal loads ( FORCE  entries). If a scalar field is referenced, it will be evaluated at the
middle of the application region.
Object Type Dimension Bulk Data Entries
Pressure Element Uniform 3-D PLOAD4
Entry Description
Pressure Defines the face pressure value on solid elements using a PLOAD4  entry. This defines the P1 through P4
values. If a scalar field is referenced, it will be evaluated once at the center of the applied region.
Object Type Dimension Bulk Data Entries
Pressure Element Variable 2-D PLOAD4 , PLOADX1 , FORCE
Entry Description
Top Surf Pressure Defines the top surface pressure load on shell elements using a PLOAD4  entry. The negative of this
value defines the P1 through P4 values. If a scalar field is referenced, it will be evaluated separately
for the P1 through P4 values.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads264
Main Index
4. Variable Pressure Loads on 3-D Elements
Temperature LBCs
T emperatures can be defined directly at nodes or temperature fields can be defined across element surfaces.
T emperatures are specified with TEMP , TEMPPi , or TEMPRB  bulk data entries, where:
Patran LBC Application Input Data
T emperatures are generated in Patran using the following Object/Type  combinations on the LBC Application  form.Bot Surf Pressure Defines the bottom surface pressure load on shell elements using a PLOAD4  entry. This value
defines the P1 through P4 values. If a scalar field is referenced, it will be evaluated separately for the
P1 through P4 values.
Edge Pressure For axisymmetric solid elements ( CTRIAX6 ), defines the P1 through P3 values on the PLOADX1&lt;br&gt;
entry where THETA on that entry is defined as zero. For other 2-D elements, this will be
interpreted as a load per unit length (e.g., independent of thickness) and converted into equivalent
nodal loads ( FORCE  entries). If a scalar field is referenced, it will be evaluated independently at
each node.
Object Type Dimension Bulk Data Entries
Pressure Element Variable 3-D PLOAD4
Entry Description
Pressure Defines the face pressure value on solid elements using a PLOAD4  entry. This defines the P1 through P4
values. If a scalar field is referenced, it will be evaluated separately for each of the P1 through P4 values.
Entry Description
TEMP Defines temperature at grid points.
TEMPP1i Defines temperature field for surface elements.
TEMPRB Defines temperature field for line elements.Entry Description&lt;/p&gt;
&lt;p&gt;265 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Grid Point Temperatures&lt;/li&gt;
&lt;li&gt;Uniform Temperature Fields on 1-D Elements&lt;/li&gt;
&lt;li&gt;Uniform Temperature Fields on 2-D Elements&lt;/li&gt;
&lt;li&gt;Variable Temperature Fields on 1-D ElementsObject Type Dimension Bulk Data Entries
Temperature Nodal 0-D TEMP
Entry Description
Temperature Defines the T fields on the TEMP  entry.
Object Type Dimension Bulk Data Entries
Temperature Element Uniform 1-D TEMPRB
Entry Description
Temperature Defines a uniform temperature field using a TEMPRB  entry. The temperature value is used for both the
TA and TB fields. The T1a, T1b, T2a, and T2b fields are all defined as 0.0.
Object Type Dimension Bulk Data Entries
Temperature Element Uniform 2-D TEMPP1
Entry Description
Temperature Defines a uniform temperature field using a TEMPP1  entry. The temperature value is used for the T
field. The gradient through the thickness is defined to be 0.0.
Object Type Dimension Bulk Data Entries
Temperature Element Variable 1-D TEMPRB&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads266
Main Index
5. Variable Temperature Fields on 2-D Elements
6. Uniform and Variable Temperature Fields on 3-D Elements
Inertial Loads LBCs
Inertial loads can be applied to the entire model using the GRAV  or RFORCE  bulk data entries.Entry Description
Centroid Temp Defines a variable temperature file using a TEMPRB  entry. A field reference will be evaluated at
either end of the element to define the TA and TB fields.
Axis-1 Gradient Defines the temperature gradient in the 1 direction. A field reference will be evaluated at either end
of the element to define the T1a and T1b fields.
Axis-2 Gradient Defines the temperature gradient in the 2 direction. A field reference will be evaluated at either end
of the element to define the T2a and T2b fields.
Object Type Dimension Bulk Data Entries
Temperature Element Variable 2-D TEMPP1
Entry Description
Top Surf Temp Defines the temperature on the top surface of a shell element. The top and bottom values are used to
compute the average and gradient values on the TEMPP1  entry.
Bot Surf Temp Defines the temperature on the bottom surface of a shell element. The top and bottom values are used
to compute the average and gradient values on the TEMPP1  entry.
Object Type Dimension Bulk Data Entries
Temperature Element Uniform
Element Variable3-D TEMP
Entry Description
Temperature Defines the temperature or temperature distribution in the element.&lt;/p&gt;
&lt;p&gt;267 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
The IDRF  field on the RFORCE  entry can be used to allow different portions of the structure to rotate with different
angular velocities or in different directions.
Patran LBC Application Input Data
Inertial loads are generated in Patran using the following Object/Type  combination on the LBC Application  form.
The acceleration and velocity vectors are defined with respect to the input analysis coordinate frame. The origin of the
rotational vectors is the origin of the analysis coordinate frame. In generating the GRAV  and RFORCE  entries, the interface
produces one GRAV  and/or RFORCE  entry image for each Patran load set.
Velocity LBCs
Velocities can be defined for transient analysis using the TLOAD  entry.
:
Patran LBC Application Input Data
Velocities are generated in Patran using the following Object/Type  combination on the LBC Application  form.Entry Description
GRAV Defines acceleration vectors for gravity or other acceleration loading.
RFORCE Defines load due to centrifugal force field.
Object Type Dimension Bulk Data Entries
Inertial Load Element Uniform Entire Model GRAV  or RFORCE
Entry Description
Trans Accel  (A1,A2,A3) Defines the N vector and the G magnitude value on the GRAV entry.
Rot Velocity  (w1,w2,w3) Defines the R vector and the A magnitude value on the RFORCE  entry.
Entry Description
TLOAD
1Defines a time -dependent dynamic load or enforced motion
Object Type Dimension Bulk Data Entries
Velocity Nodal  TLOAD&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads268
Main Index
Acceleration LBCs
Accelerations can be defined for transient response analysis using the TLOAD  entry.
:
Patran LBC Application Input Data
Accelerations are generated in Patran using the following Object/Type  combination on the LBC Application  form.
Distributed Load LBCs
Distributed forces and moments can be applied in a uniform or variable fashion to 1-D and 2-D elements. Several bulk
data entries are used to apply distributed loading depending on the element topology.Entry Description
Trans Veloc  (v1,v2,v3) Defines the velocity values for the translational degrees of freedom.
Rot Veloc  (w1,w2,w3) Defines the velocity values for the rotational degrees of freedom.
Entry Description
TLOAD
1Defines a time -dependent dynamic load or enforced motion
Object Type Dimension Bulk Data Entries
Acceleration Nodal TLOAD
Entry Description
Trans Accel  (A1,A2,A3) Defines the acceleration values for the translational degrees of freedom.
Rot Accel  (a1,a2,a3) Defines the acceleration values for the rotational degrees of freedom.
Entry Description
PLOAD Defines a uniform static pressure load on a triangular or quadrilateral surface comprised of surface
elements and/or the faces of solid elements.
PLOAD1 Defines concentrated, uniformly distributed, or linearly distributed applied loads to the CBAR  or
CBEAM  elements at user -chosen points along the axis. For the CBEND  element, only distributed loads
over an entire length may be defined
PLOAD2 Defines a uniform static pressure load applied to CQUAD4 , CSHEAR , or CTRIA3  2-D elements.&lt;/p&gt;
&lt;p&gt;269 Chapter 8: Load and Constraint Conditions
Export of Static Loads
Main Index
Patran LBC Application Input Data
Distributed loads are generated in Patran using the following Object/Type  combinations on the LBC Application  form.
1.Uniform and Variable Loads on 1-D Elements
Defines distributed force or moment loading along beam elements using MSC Nastran PLOAD1  entries. The
coordinate system in which the load is applied is defined by the beam axis and the Bar Orientation  element
property. The Bar Orientation  must be defined before this Distributed Load  can be created. If the Bar
Orientation  is subsequently changed, the Distributed Load  must be updated manually if necessary.
For the element variable type, a field reference is evaluated at each end of the beam to define a linear load variation.
2.Uniform and Variable Loads on 2-D Elements
Defines a distributed force or moment load along the edges of 2-D elements. The coordinate system for the load is
defined by the surface or element edge and normal. The x direction is along the edge. Positive x is determined by
the element corner node connectivity. See Patran Element Library  (Ch. 15) in the Reference Manual - Part III.  For
example, if the element is a CQUAD4 , with node connectivity of 1, 2, 3, 4. The positive x directions for each edge
would be from nodes 1 to 2, 2 to 3, 3 to 4, and 4 to 1. The z direction is normal to the surface or element. Positive
z is in the direction of the element normal. The y direction is normal to x and z. Positive y is determined by the
cross product of the z and x axes and always points into the element. The MSC Nastran entries generated, depend
on the element type.PLOAD4 Defines a pressure load on a face of a CHEXA , CPENTA , CTETRA , CTRIA3 , CTRIA6 , CTRIAR ,
CQUAD4 , CQUAD8 , or CQUADR  element.
PLOADX1 Defines surface traction to be used with the CQUADX , CTRIAX, and CTRIAX6  axisymmetric element.
Object Type Dimension Bulk Data Entries
Distributed Load Element Uniform
Element Variable1-D PLOAD1
Entry Description
Distributed Load  (f1,f2,f3) Defines the FXE, FYE, and FZE fields on three PLOAD1  entries.
Distributed Moment&lt;br&gt;
(m1,m2,m3)Defines the MXE, MYE, and MZE fields on three PLOAD1  entries.Entry Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Export of Static Loads270
Main Index
For the element variable type, a field reference is evaluated at each end of the beam to define a linear load variation.
Total Load LBCs
The total load capability is not available directly in MSC Nastran, but is a convenient way to have Patran distribute a force
load uniformly over an application area without having to calculate the number of nodes or application area. The total force
load is defined for the application region, but equivalent uniform pressures are written to the bulk data. The equivalent
pressure value is are found by dividing the total load value by the area of the application region.
Patran LBC Application Input Data
Total Loads  are generated in Patran using the following Object/Type  combination on the LBC Application  form .Object Type Dimension Bulk Data Entries
Distributed Load Element Uniform
Element Variable2-D PLOAD , PLOAD2 , PLOAD4 ,
PLOADX1
Entry Description
Edge Distributed Load&lt;br&gt;
(f1,f2,f3)For axisymmetric solid elements ( CTRIAX6 ), the PA, PB, and THETA fields on
the PLOADX1  entry are defined. For other 2-D elements, the input vector is
interpreted as load per unit length and converted into equivalent nodal loads
(FORCE  entries).
Edge Distributed Moment&lt;br&gt;
(m1,m2,m3)For 2-D shell elements, the input vector is interpreted as moment per unit length
and converted into equivalent nodal moments ( MOMENT  entries).
Entry Description
PLOAD4 Defines a pressure load on a face of a CHEXA , CPENTA , CTETRA , CTRIA3 , CTRIA6 , CTRIAR ,
CQUAD4 , CQUAD8 , or CQUADR  element.
PLOADX
1Defines surface traction to be used with the CQUADX , CTRIAX , and CTRIAX6  axisymmetric element.
Note:   Currently only 1-D element types are supported with this Object even though the form allows for other types.&lt;/p&gt;
&lt;p&gt;271 Chapter 8: Load and Constraint Conditions
Initial Conditions
Main Index
Initial Conditions
Initial conditions provides various ways of initializing the state variables throughout the model.
Initial Displacement LBCs
Creates a set of TIC  bulk data entries.
.
Patran LBC Application Input Data
Initial displacements are generated in Patran using the following Object/Type  combination on the LBC Application  form.
Initial Velocity LBCs
Creates a set of TIC bulk data entries.
.Object Type Dimension Bulk Data Entries
Total Load Element Uniform 1-D PLOAD4
Entry Description
Load &lt;!-- raw HTML omitted --&gt; Defines the total load component values to element nodes.
Analysis Coordinate Frame Defines the coordinate frame for the distributed load.
Entry Description
TIC Defines values for the initial conditions of variables used in structural transient analysis. Both displacement and
velocity values may be specified at independent degrees of freedom.
Object Type Bulk Data Entries
Initial Displacement Nodal TIC
Entry Description
Translations (T1,T2,T3) Defines the initial translational displacement values. These are in model length units.
Rotations (R1,R2,R3) Defines the initial rotational displacement values. These are in radians.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Initial Conditions272
Main Index
Patran LBC Application Input Data
Initial velocities are generated in Patran using the following Object/Type  combination on the LBC Application  form.Entry Description
TIC Defines values for the initial conditions of variables used in structural transient analysis. Both displacement and
velocity values may be specified at independent degrees of freedom.
Object Type Bulk Data Entries
Initial Velocity Nodal TIC
Entry Description
Trans Veloc  (v1,v2,v3) Defines the V0 fields for translational degrees of freedom on the TIC entry. A unique TIC
entry will be created for each non-blank entry.
Rot Veloc  (w1,w2,w3) Defines the V0 fields for rotational degrees of freedom on the TIC entry. A unique TIC entry
will be created for each non-blank entry.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 9: Contact
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
9 Contact
Introduction
Contact Methodology
Defining Deformable Contact Bodies
Rigid Contact Bodies
Patran Graphical User Interface for Contact
Movement of Contact Bodies
Contact Body Interaction
Controlling Contact Interactions
Time Step Control
Contact in SOL 101
Linear Contact (LINCNT)
Contact Detection
Separation
Delayed Slide Off
Friction
Dynamic Impact
Accuracy
Thermal Contact
Automatic Contact Generation
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide 274
Main Index
Numerical Procedures
Implementation of Constraints in Node-to-Segment
Segment-to-Segment Contact
Segment-to-Segment Contact Theory
References&lt;/p&gt;
&lt;p&gt;275 Chapter 9: Contact
Introduction
Main Index
Introduction
The simulation of many physical problems requires the ability to model the contact phenomena. This includes analysis of
assembly modeling, interference fits, rubber seals, tires, crash, and manufacturing processes among others. The analysis of
contact behavior is complex because of the requirement to accurately track the motion of multiple geometric bodies, and
the motion due to the interaction of these bodies after contact occurs. This includes representing the friction between
surfaces and heat transfer between the bodies if required. The numerical objective is to detect the motion of the bodies,
apply a constraint to avoid penetration, and apply appropriate boundary conditions to simulate the frictional behavior and
heat transfer. Several procedures have been developed to treat these problems including the use of Perturbed or Augmented
Lagrangian methods, penalty methods, and direct constraints. Furthermore, contact simulation has often required the use
of special contact or gap elements. SOL 400 allows contact analysis to be performed automatically without the use of special
contact elements.
In structural problems, the contact often occurs between deformable bodies, which is called deformable-deformable
contact, and sometimes one of the bodies is significantly stiffer than the deformable bodies of interest and can be modeled
as rigid, which is called rigid-deformable contact. In the case of structural problems the contact characterizes the stresses
and forces transmitted between the contact bodies, and in the case of thermal analysis the contact algorithms characterize
the amount of heat that is transferred between the contact bodies. There is also a class of problems called thermal-structural
problems where both force and heat is transferred between the contact bodies.
Contact problems involve a variety of different geometric and kinematic situations. Some contact problems involve small
relative sliding between the contacting surfaces, while others involve large sliding. Some contact problems involve contact
over large areas, while others involve contact between discrete points. The general contact body approach adopted by SOL
400 to model contact can be used to handle most contact problem definitions.
The contact body approach provides two formulations for modeling the interaction between surfaces of structures. One
formulation is a small-sliding formulation, in which the surfaces can only undergo small sliding relative to each other, but
may undergo arbitrary rotation. An example of this type of application is the classical Hertz contact problem. The second
formulation is a large-sliding formulation, where separation and sliding of large amplitude, and arbitrary rotation of the
surfaces, may arise. An example is the modeling of a rubber tire rolling on the ground.
This chapter describes the contact capabilities in MSC Nastran SOL 400 that may be used in solving nonlinear structural
and thermal analysis problems. First, by describing how we create the contact bodies in a finite element model; then how
we characterize the interaction between the bodies using either a contact table or the contact pair capabilities. Setting up
the details of contact problems involves a significant amount of information and detail, making the use of a graphical user
interface like Patran almost a requirement. After describing the basics required to set up a contact problem, we will look at
how Patran may be used to help set up the analysis model, including how to define the contact bodies as well as how to
input the data needed to characterize the contact interaction capabilities (interference fits, friction, etc.) between the contact
bodies. The latter part of this chapter is used to go through detailed descriptions of the various contact capabilities the may
be included in the simulation in order to provide the most accurate characterization possible. These capabilities include:
touching or glued contact, contact algorithms such as node-to-segment or segment-to-segment, friction, small vs. finite
sliding, over-closures and interference fits, delayed slide-off, topology (such as including beam radius or shell thickness),
near contact heat transfer coefficient, and providing the results of the contact analysis including contact status, shear/normal
forces and stresses. Often it is advantageous to use the contact algorithms to “glue” components together and not let them
separate. One of the most useful capabilities of glued contact is to connect different parts of the structure that are not
allowed to separate, but have non-congruent meshes. This is sometimes referred to as assembly modeling. Immediately&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Methodology276
Main Index
following the Patran contact GUI section in this chapter is a brief demonstration problem illustrating how rigid-deformable
contact can be used to simulate the crushing of a circular pipe section. This problem provides insight as to the types of
problems that can be solved using the MSC Nastran SOL 400 contact capabilities.
Contact Methodology
In MSC Nastran, there are two methods used to implement contact constraints. Historically, the first method is known as
node-to-segment. In which case, a node makes contact with a rigid surface or an edge or face of a deformable body. The
second method is known as segment-to-segment contact. In which case, a fraction of an element edge or face may contact
either a rigid-to-surface or a fraction of an edge or face.
Node-to-Segment (NTS) Contact
In both the two- and three-dimensional contact problems, contact is always detected between nodes on the surface of a
deformable body and the geometrical profile of another surface. There are two modes of the order in which a node checks
contact with other bodies. The default version is the double-sided contact procedure. In the single-sided contact procedure,
the nodes on a lower numbered body can come into contact with equally or higher numbered surfaces. For instance, the
boundary nodes of body number 1 are checked against the surface profiles of bodies 1, 2, 3, &amp;hellip;. The boundary nodes of
body number 2, however, are only checked against surface profiles of bodies 2, 3, &amp;hellip; It is possible, therefore, that due to
surface discretization, a node of body 2 slightly penetrates the surface of body 1.
The double-sided contact option checks possible contact between any two surfaces (surface i is checked for contact with
surface j, and surface j is also checked for contact with surface i, where i, j = 1, 2, 3, &amp;hellip;, total number of surfaces in the
problem).
Limitations of Node-to-Segment Contact
When contact has been detected, the non-penetration constraint is enforced on a grid point basis.  Because of this point
application of constraints, the node-to-segment algorithm does not  generally maintain stress continuity across the contact
interface of deformable contact bodies.
Since the non-penetration constraints are enforced using multi-point constraint equations, there is  a potential dependency
of the solution on the selection of the primary-secondary n odes. The definition of constraints for deformable-to-deformable
contact using the primary/secondary c oncept is defined in Deformable-to-Deformable Contact   In other  words, the
solution depends on which grid points are touching and which grid points correspond to a touched contact segment.
Although there are various options to optimize the multi-point  constraint equations, it is not always possible to achieve the
best results everywhere in the model  and to completely eliminate the dependency on the contact body numbering.
If contact is detected at the top and the bottom face of a shell element, it is not  possible to only use the grid points of the
shell element to apply both multi-point constraint equations.  This implies that there are limited modeling options for
double-sided shell contact. A  similar problem occurs when the edge of a shell element is in contact with the face of another
element. If this happens, then the contact constraints are based on either the shell top or the shell bottom face.
Consequently, the “footprint” of the shell edge is not directly related to the shell  thickness.&lt;/p&gt;
&lt;p&gt;277 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
Segment-to-Segment (STS) Contact
In the segment-to-segment approach, multiple auxiliary contact detection points are placed upon the edge (2-D) or face
(3-D) and contact effectively occurs between these points. A constraint is formed between these points. There is no primary-
secondary a rrangement between the bodies. Because this approach uses more target points, there is better stress continuity.
Furthermore, contact with shell elements exactly treats the geometry of the element. Many of the concepts of contact are
the same when using these different methods, such as contact body definition. While other concepts, such as separation,
are treated differently.
You can select between node-to-segment and segment-to-segment using the METHOD  keyword on the BCPARA  bulk data
entry.
Defining Deformable Contact Bodies
This section describes surface geometry definition, motion definition, and friction description in automatic two- and three-
dimensional contact applications. The basic philosophy behind these applications is the existence of one or more bodies
that might or might not come into contact with one another, or undergo self contact during an analysis. As far as the contact
is concerned, it is the surface associated with the body that plays a role.
There are two types of contact bodies in SOL 400 – deformable and rigid. Deformable bodies are simply a collection of
finite elements as shown below.
A deformable surface is simply defined by the set of elements that constitute the body to which it is associated.
Figure 9-1  Deformable Contact Bodies
This body has three key aspects to it:
1.The elements which make up the body.
2.The nodes on the external surfaces which might contact another body or itself. These nodes are treated as potential
contact nodes.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Deformable Contact Bodies278
Main Index
3.The edges (2-D) or faces (3-D) which describe the outer surface which a node on another body (or the same body)
might contact. These edges/faces are treated as potential contact segments.
Note that a body can be multi-connected (have holes in itself). It is also possible for a body to be composed of both
triangular elements and quadrilateral elements in 2-D or tetrahedral elements and brick elements in 3-D. Beam elements
and shells are also available for contact.
As a first example, consider two plates that have different mesh discretization that are bonded together.
In such a simple model, there are multiple ways to define the contact bodies, including:
Putting elements into groups or sets and associating these elements with a particular contact body.
Its unique property IDs are associated with each plate; then associates each property ID with a contact body.
If unique material IDs are associated with each plate, then associate each material ID with a contact body.
Let the GUI scan the complete model and associate each connected region with a contact body.
The last approach is very powerful when obtaining assembly models directly from CAD systems, where hundreds if not
thousands of parts (bodies) are present. See Automatic Contact Body Pair Creation User Interface .
Each node and element should be in, at most, one body. It is not necessary to identify the nodes on the exterior surfaces as
this is done automatically. The algorithm used is based on the fact that nodes on the boundary are on element edges or faces
that belong to only one element. Each node on the exterior surface is treated as a potential contact node. In many problems,
it is known that certain nodes never come into contact; in such cases, the BCHANGE  bulk data entry can be used to
identify the relevant nodes. As all nodes on free surfaces are considered contact nodes, if there is an error in the mesh
generation such that internal holes or slits exist, undesirable results can occur.
Using this approach and applying a distributed load on the plates results in the following information.&lt;/p&gt;
&lt;p&gt;279 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
MSC Nastran Contact Data Styles
The contact technology has evolved over the last decade based upon increased applications, new capabilities, and more
complex engineering models. In this chapter, the data options used are either given in the older data format, the current
data format, or both. For simple models (for example, only two contact bodies), users often find the old input format easier
to use, even though the new format is more powerful.
MSC Nastran Format – Pre 2013 Release
You would define all facets of the contact body using the BCBODY  bulk data entry. This would include the body identifier,
geometry of rigid bodies, the initial motion, and physical properties such as friction or heat transfer characteristics. For
deformable bodies, the option references:
BSURF  – specify elements in the contact body
BCPROP  – specify elements in the contact body based upon Property ID
Symbol indicates which nodes are in contact Contact Forces
Deformations (Scaled)Contact Stresses&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Deformable Contact Bodies280
Main Index
You would define the contact interaction using BCTABLE  which would define the search order, physical properties, and
numerical behavior such as the contact tolerance and penalty factors.
MSC Nastran Format – Post 2013 Release
You would define a contact body using the BCBODY1  bulk data entry. This can be used to define the body identifier, the
dimension of the body, and the type of body (Deformable, Rigid, Heat transfer only), and points to additional options as
follows:
BSURF  – specify elements in a deformable contact body
BCPROP  – specify elements in a deformable contact body based upon Property ID
BCRGSRF  – specify a collection of geometric surfaces that describe the rigid body
BCBDPRP  – defines physical properties of the body
BSID  – defines geometry of the body
BCRGID  – defines the motion/boundary conditions applied to the rigid surface
The BCRGSRF  option, in turn, references the following options:
BCPATCH  – rigid surface composed of quadrilateral patches
BCBZIER  – rigid surface defines as a Bezier surface
BCNURB2  – 2-D rigid surface defined as NURBS
BCNURB  – 3-D rigid surface defined as NURBS
You would define the contact interaction using the BCTABL1  bulk data entry. This would give the contact table identifier
referenced by the BCONTACT  case control command. Furthermore, it would point to one or more BCONECT  bulk
data entries that defines pairs of bodies that come into contact and points to other options as follows:
BCONPRG  – defines the behavior of the contact interaction, such as the glue conditions
BCONPRP  – defines the physical properties associated with the contact interaction, such as the friction coefficient
and the thermal coefficients
Element Considerations
MSC Nastran allows contact with almost all of the available elements, but the use of certain elements has a consequence on
the analysis procedure. Contact analysis can be performed with all of the structural continuum elements, either lower- or
higher-order. Friction modeling is available in all of these elements. Higher-order isoparametric elements use shape
functions which, when the elements are loaded by a (for example) uniform pressure, lead to equivalent nodal loads that
oscillate between the corner and midside nodes. This has a detrimental effect on determining contact separation.
Since the above mentioned oscillating nodal loads cannot be used for separation, the decision whether or not a node should
separate is based on the contact normal stress rather than the contact normal force.
In many manufacturing and rubber analyses, the lower-order elements behave better than the higher -order elements
because of their ability to represent the large distortion; hence, these lower-order elements are recommended.&lt;/p&gt;
&lt;p&gt;281 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
The constraints imposed on the nodal degrees of freedom are dependent upon the type of element.
1.When a node of a continuum element comes into contact, the translational degrees of freedom are constrained.
2.When a node of a shell element comes into contact, the translational degrees of freedom are constrained and no
constraint is places on the rotational degrees of freedom. The exception to this is when a shell contacts a symmetry
surface. In this case, the rotation about the element edge is also constrained.
Element Dimensionality
In MSC Nastran, a 2-D contact analysis means that plane strain, plane stress or axisymmetric elements are used and rigid
bodies are lines or curves only. Thus the problem itself is truly a 2-D problem in that everything is planar in the XY plane.
A 3-D contact problem can use solids, shells, and even beams. All of these elements are truly 3-D in that the displacement
results can be in any coordinate direction. That is what DIM means in the QRG description of BCBODY1 . All MSC
Nastran cares about is whether the analysis is a 2-D analysis or a 3-D analysis. The analysis DIMensionality needs to be
defined correctly. You cannot mix 2-D and 3-D in the same analysis.
When defining the bodies in Patran, 2-D and 3-D have different meanings. 3-D means a 3-D element (solid). 2-D means
a 2-D element (shell or planar type element). 1-D means a 1-D element (beam or bar). So 1-D/2-D/3-D in Patran when
creating contact bodies is just a way of filtering the type of elements to be selectable when defining the contact bodies. So
if your contact body has solids and shells, you define the solids with the 3-D dimensionality filter, and if they are shells, you
define it with the 2-D dimensionality filter. But the analysis itself is still a 3-D analysis. A 2-D analysis would not have both
solids and shells. A 2-D analysis would only have plane strain, plane stress, or axisymmetric elements.
The same is also true for rigid bodies. For defining them in Patran, you pick the dimensionality 1-D or 2-D depending on
whether it is a line/curve or surface. But the dimensionality of the analysis that is written for the MSC Nastran deck is either
2-D or 3-D. For 2-D, only rigid lines/curves are allowed with plane strain/stress or axisymmetric elements. For 3-D, either
rigid lines/curve and/or surfaces are allowed.
Beam Elements
The node-to-segment procedure has limited capabilities to simulate beam contact. Contact of beams with non-beams is
established at the beam nodes without any allowance made for the beam dimensions. For simulating beam-beam contact,
an equivalent beam radius has to be defined by you, and multi-point constraints across the beam segments are established
based on a proximity check that includes the beam radii.
2-D Beams
All nodes on beams are potential contact nodes. Beam elements can be used in contact in two modes.
1.The 2-D beams can come into contact with rigid bodies composed of curves in the same x-y plane. The normal is
based upon the normal of the rigid surface.
2.The 2-D beams can come into contact with deformable bodies either of continuum elements or other beam
elements. As the beams are in two dimensions, they do not intersect one another.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Deformable Contact Bodies282
Main Index
3-D Beams
Three-dimensional beam elements can be used in contact in three methods.
1.The nodes of the beams can come into contact with rigid bodies composed of surfaces. The normal is based upon
the normal of the rigid surface.
2.The nodes of the beam elements can also come into contact with the faces of 3-D continuum elements or shell
elements. The normal is based upon the normal of the element face.
3.The 3-D beam elements can also come into contact with other beams (beam-to-beam contact).
The first two methods are activated by default if contact bodies consisting of beam elements are defined using the
BCBODY  bulk data entry. The third method must be activated explicitly by additionally switching on the beam-to-beam
contact flag on the BCPARA  bulk data entry.
In the beam-to-beam contact model, a beam element is viewed as a conical surface with a circular cross section. The radius
of the cross-section can vary linearly between the start and end node of a beam element. For each beam element of a contact
body, a contact radius  must be entered via the BCBMRAD  bulk data entry. The contact radius at a node follows from the
average contact radius of the elements sharing that node. Hence, the start and end node of an element may have different
contact radii.
Contact is detected between two beam elements if the associated conical surfaces touch each other; that is, if the distance
between the closest points on the conical surfaces is smaller than the distance below which bodies are considered touching
each other. This is outlined in Figure 9-2, where beam elements and their contact body representation are given. It should
be emphasized that the contacting points are points on the conical surfaces and not nodes of the finite element model.
Figure 9-2  Beam-to-Beam Contact: Finite Element Model (top) and Contact Body Representation (bottom)
If two beam elements are in contact, a multipoint constraint equation (tying) is automatically imposed to ensure that the
conical surfaces will not penetrate. This constraint equation involves the displacements of the begin and end nodes of both
elements. The tied node in that equation is automatically selected, taking into account the location of the contacting points d
d
XY
Z&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P16</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_016/</guid>
      <description>
        
        
        &lt;p&gt;283 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
with respect to the elements, any boundary conditions applied to the nodes and any contact between the nodes and rigid
surfaces or faces of continuum or shell elements.
During the iteration procedure, the contacting points of two beam elements can change if the elements slide with respect
to each other. In addition, the points in contact can move from one element to another. In that case, the nodes involved in
the multipoint constraint equations are automatically updated. During sliding, friction may be taken into account. Since
for beam elements the normal stress in the contact points is not available, only Coulomb friction based on nodal forces
(either the arctangent or the bilinear model) is supported for beam-to-beam contact. The glue model, which imposes that
there is no relative tangential motion, is also available.
A limitation of the beam-to-beam contact model is that a contact body cannot contain branches; that is, every element in
the contact body must have a unique successor and predecessor.
Shell Contact Definition
All nodes on shell elements are potential contact nodes. Shell elements can contact either rigid bodies, continuum elements,
or other shell elements. Shell -shell contact involves a more complex analysis because it is necessary to determine which side
of the shell contact occurs. For STS contact, both sides and the edges are always considered for contact. For the NTS
approach, the following procedure is considered.
By default, the top and bottom face of a shell element (which follow from the mid face by using the shell thickness and the
shell offset) are separately taken into account. This implies that a node may be found to be in contact based on the top or
the bottom face of an element. However, due to the nature of the shell formulation, it is not possible to simultaneously
apply contact conditions using the node-to-segment approach. Touching a shell element may also occur at its top or bottom
face using the segment-to-segment approach.
You have the option to set per pair of contact bodies on the BCTABLE /BCTABL1  bulk data entry as to how the geometry
of the shell elements should be handled. This means both the contacting and the contacted body can be defined and that
the contact description will be based on one of the following options:
both top and bottom (default),
top only (with or without the thickness offset) or
bottom only (with or without the thickness offset).
For glued contact, it is possible to use the top and bottom face, but without the thickness offset.
The thickness offset is one-half the shell thickness plus the user-defined shell offset.
Shell Model Accounting for Shell Thickness&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Deformable Contact Bodies284
Main Index
The beam-to-beam contact model discussed above can also be used to model shell edge-to-edge contact. This requires
switching on the beam-to-beam contact flag on the BCPARA  bulk data entry and, for a shell contact body combination,
the edge-to-edge contact flag on the BCTABLE /BCTABL1  bulk data entry. For edge-to-edge contact, half of the thickness
of the shell is used to set the contact radius.
Surface Control for Shells
The user can control the surface by defining the COPT  flag on the BCBDPRP , BCONPRG , BCTABLE , or BCBODY  bulk
data entry as follows:
The basic format of COPT  is COPT = A + 10 * B + 1000 * C
A: the outside of the solid elements in the body
•= 1: the outside will be in the contact description (Default)
B (flexible bodies): the outside of the shell elements in the body
•= 1: both top and bottom faces are in the contact description, thickness offset is included (Default)
•= 2:only bottom faces are in the contact description, thickness offset is included
•= 3:only bottom faces are in the contact description, shell thickness is ignored
•= 4: only top faces are in the contact description, thickness offset is included
•= 5: only top faces are in the contact description, shell thickness is ignored
•= 6: both top and bottom faces are in the contact description, shell thickness is ignored
Note that if B = 6  for both bodies in a contact combination, the nodes that separate from a body cannot come in
contact again in the current step or in subsequent steps unless a different flag is chosen for one of the bodies.
Note that for segment-to-segment contact, one should only use B = 1  or B = 6 .
B (rigid bodies): the rigid surface (can be ignored in MSC Nastran SOL 400)
•= 1: the rigid surface should be in the contact description (Default)
C (flexible bodies): the edges of the body
•= 1: only the beam/bar edges are included in the contact description (Default)
•= 10: only the free and hard shell edges are included in the contact description
•= 11: both the beam/bar edges and the free and hard shell edges are included in the contact description  C. It has
no effect if beam-to-beam contact is OFF (BEAMB1  on BCPARA ). BCPARA BEAMB  is discussed under beam-
to-beam contact.
•Note for segment-to-segment contact, C is not used.&lt;/p&gt;
&lt;p&gt;285 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
Contact Body Definition for STS
The definition of contact bodies for the segment-to-segment algorithm is identical to that of the node-to-segment
algorithm. This implies that one can define deformable contact bodies consisting of finite elements and rigid bodies
consisting of curves (2-D) or surfaces (3-D). Rigid bodies can be load, velocity, or displacement controlled; load controlled
rigid bodies have one (translation only) or two (translation and rotation) control nodes.
Based on the finite elements assigned to a contact body, the program automatically sets up the outer boundary of the
deformable bodies. This boundary is defined by element edges (2-D) or element faces (3-D). Figure 9-3 shows the basic
concept for 2-D continuum and 2-D shell/beam elements. For 2-D continuum elements, the contact segments coincide
with the element edges. For 2-D shell/beam elements, not only the top and the bottom are separately included in the
contact body description, but also the free ends of the finite element model are converted into contact segments. The same
concept is applied to 3-D continuum elements and 3-D shell elements, where for the shell elements the free edges of the
finite element model are converted into contact segments. You can also decide to ignore the shell thickness, in which case
the top and the bottom segments have the same position but an opposite orientation. The contact segments of the free ends
always include the shell thickness.Patran Menu to Activate/Deactivate Shell Thickness&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Nonlinear User’s Guide&lt;/dt&gt;
&lt;dt&gt;Defining Deformable Contact Bodies286&lt;/dt&gt;
&lt;dt&gt;Main Index&lt;/dt&gt;
&lt;dt&gt;Figure 9-3  2-D Contact Bodies: Continuum Elements (Upper); Shell/beam Elements (Lower)&lt;/dt&gt;
&lt;dt&gt;The SPLINE bulk data entry, as discussed before for node-to-segment contact, is available for segment-to-segment contact.&lt;/dt&gt;
&lt;dt&gt;When this option is selected for a shell element or a 2-D beam element, then the transition from the top and bottom contact&lt;/dt&gt;
&lt;dt&gt;segments to the segment at the free ends is automatically marked to have a normal vector discontinuity.&lt;/dt&gt;
&lt;dt&gt;Finite Sliding for Deformable Contact&lt;/dt&gt;
&lt;dt&gt;In the discussion above, the position of the polyline/polygon points with respect to the element edges/faces is based on the&lt;/dt&gt;
&lt;dt&gt;geometry of the elements at the first time of touching. In case of contact between deformable contact bodies, this implies&lt;/dt&gt;
&lt;dt&gt;that the equations are valid only for simulations where the relative displacements between touching deformable bodies are&lt;/dt&gt;
&lt;dt&gt;small. Since in many contact applications the relative displacements are finite, the default option is to allow for large relative&lt;/dt&gt;
&lt;dt&gt;displacements. If large relative displacements are allowed, the relative displacements of the polyline/polygon points are&lt;/dt&gt;
&lt;dt&gt;monitored and once a threshold value dmax is exceeded, new points will be created. The default threshold value equals five&lt;/dt&gt;
&lt;dt&gt;times the contact tolerance , but it can also be defined via the BCPARA  bulk data entry.&lt;/dt&gt;
&lt;dt&gt;For a 2-D configuration, the update process for large relative displacements is illustrated in Figure 9-4. The initial position&lt;/dt&gt;
&lt;dt&gt;of the polyline points is shown on the left-hand side. The blue and green areas represent the common areas between the&lt;/dt&gt;
&lt;dt&gt;upper and the left-hand and right-hand lower element. A possible relative displacement d  is given in the middle of&lt;/dt&gt;
&lt;dt&gt;Figure 9-4. As long as d &amp;lt; dmax, the contact simulation is based on the initial position of the polyline points. If d ≥ dmax, new&lt;/dt&gt;
&lt;dt&gt;polyline points are created, resulting in a situation as shown on the right-hand side. Redefining polyline/polygon points&lt;/dt&gt;
&lt;dt&gt;will be done during an analysis as often as needed. After having created new polyline/polygon points, important contact&lt;/dt&gt;
&lt;dt&gt;data (like the contact stresses) is mapped from the old on the new polyline/polygon points and used as a starting point to&lt;/dt&gt;
&lt;dt&gt;continue the analysis.: nodal points&lt;/dt&gt;
&lt;dd&gt;auxiliary points
Finite Elements Contact Segments Auxiliary Versus Nodal Points&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;287 Chapter 9: Contact
Defining Deformable Contact Bodies
Main Index
Figure 9-4  Large Relative Displacements: Initial Position (left), Sliding (middle) and New Position (Right)
The METHOD  contact parameter on the BCPARA  bulk data entry allows you to switch on the flag for small relative
displacements; in which case, there is no update of the position of the polyline/polygon points.
Analytical Description of a Deformable Body
The potential segments composed of edges or faces are treated in potentially two ways. The default is that they are
considered as piece-wise linear (PWL). As an alternative, a cubic spline (2-D) or a Coons surface (3-D) can be placed
through them. The BCBODY  or BCBDPRP  bulk data entry is used to activate this procedure. This improves the accuracy
of the calculation of the normal.
This smoothed representation is used to calculate the contact normal and the distance between surfaces. An accurate surface
is especially important when calculating friction. It should be noted that activating this option has a minor influence in the
computational cost because of improved convergence. If higher-order elements are used, it is recommended that mid node
projection be activated ( MIDNOD ).
As an example in the interference problem show below, the two minor rings use a coarser mesh face than the outer ring.
While the segment-to-segment procedure would be more accurate, the figure on the left shows the equivalent stress using
the PWL representation; while the figure on the right, uses the analytical approach. Because a cubic spline is used, the
circular contact surface is represented exactly.d&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Defining Deformable Contact Bodies288
Main Index
 &lt;/p&gt;
&lt;p&gt;289 Chapter 9: Contact
Rigid Contact Bodies
Main Index
Rigid Contact Bodies
A rigid surface does not deform. There are two modes to describe the geometric profile of a rigid surface. In the first, labelled
the PieceWise Linear approach (PWL), the profile is defined by sets of geometrical data which can be comprised of straight
lines, circles and splines, ruled surfaces, surfaces of revolution and patches, etc. These sets have to be given in a proper
sequence around the rigid body they define, even if it is not necessary that the full enclosure be defined.
In the second method, labeled Analytical, the geometric profile is defined by prescribing 2-D NURB curves, 3-D NURB
surfaces, or exact quadratic descriptions. Using this method, the surface is divided into line segments or patches The contact
condition is based on the true surface geometry. This method is more accurate for curved surfaces, and might reduce the
number of iterations, especially if friction is present.
In coupled thermal-stress contact, it is possible to have a surface defined strictly by thermal elements with a rigid body
motion applied to it.
The geometric aspects of contact bodies should be defined with the BCBODY1  bulk data entry. If the body is rigid, the
BCBODY1  bulk data entry references the BCRIGID  bulk data entry to describe the motion of the body. Also, for rigid
body, the geometry is specified using BCRGRF , BCPATCH , BCBZIER , BCNURB2 , or BCNURBS . The physical
parameters associated with a deformable or rigid body are defined in BCBDPRP .
Rigid bodies are composed of curves (2-D) or surfaces (3-D) or meshes with only thermal elements in coupled problems.
The most significant aspect of rigid bodies is that they do not distort. Deformable bodies can contact rigid bodies, but
contact between rigid bodies is not considered.
They can be created either in CAD systems and transferred through Patran or some other GUI into SOL 400, created
within Patran, or created directly through the SOL 400 input. There are several different types of curves and surfaces that
can be entered including:
Within Patran, all contact curves or surfaces are mathematically treated as NURB surfaces. This allows the greatest level of
generality. Within the analysis, these rigid surfaces can be treated in two ways – discrete piecewise linear lines (2-D) or
patches (3-D), or as analytical NURB surfaces. When the discrete approach is used, all geometric primitives are subdivided
into straight segments or flat patches. You have control over the density of these subdivisions to approximate a curved
surface within a desired degree of accuracy. This subdivision is also relevant when determining the corner conditions. The
treatment of the rigid bodies as NURB surfaces is advantageous because it leads to greater accuracy in the representation of
the geometry and a more accurate calculation of the surface normal. Additionally, the variation of the surface normal is
continuous over the body which leads to a better calculation of the friction behavior and a better convergence.
To create a rigid body, you can either read in the curve and surface geometry created from a CAD system, create the
geometry in Patran, or directly enter it into the SOL 400 bulk data. You then use the BCBODY  bulk data entry to select
which geometric entities are to be a part of the rigid body. An important consideration for a rigid body is the definition of
the interior side and the exterior side. For two -dimensional analysis, the interior side is formed by the right-hand rule when
moving along the body.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Contact Bodies290
Main Index
Figure 9-5  Orientation of Rigid Body Segments
For three-dimensional analysis, the interior side is formed by the right-hand rule along a patch. The interior side is
visualized in Patran as the side with markers; the exterior side is visualized in Patran as the side without markers.
It is not necessary for rigid bodies to define the complete body. Only the bounding surface needs to be specified. You should
take care, however, that the deforming body cannot slide out of the boundary curve in 2-D ( Figure 9-6). This means that it
must always be possible to decompose the displacement increment into a component normal and a component tangential
to the rigid surface.
Figure 9-6  Deformable Surface Sliding Out of Rigid Surface
Two-dimensional Rigid Surfaces
In a two-dimensional problem, the rigid surfaces can be represented by a combination of NURB curves.
Note that the normal vector of the geometric entities always points into the rigid-body. The normal vector direction is
determined from the direction of the geometric entity, following a right -handed rule. Care must be taken in entering the
coordinates (x, y) data, in a correct direction, for rigid-surfaces.
Three-dimensional Rigid Surfaces
In a 3-D problem, the rigid surfaces are represented by any of or a combination of the following 3-D surface entities:123
Interior1
432
Interior SideSide
Incorrect Correct&lt;/p&gt;
&lt;p&gt;291 Chapter 9: Contact
Rigid Contact Bodies
Main Index
The variable ITYPE  defines the type of surface entity to be used for a rigid surface. Since most of the three-dimensional
surfaces can be easily and adequately represented by a finite element mesh of 4-node plate (patch) elements, the ITYPE =
7 option is a very convenient way of representing three-dimensional rigid surfaces. Both the connectivities and the
coordinates of the 4 -node patches can be generated using Patran.
For the (PWL) approach, note that all geometrical data in 3-D space is reduced to 4 -node patches. The four nodes will
probably not be on the same plane. The error in the approximation is determined by the number of subdivisions of the
defined surfaces. Note that the normal to a patch is defined by the right -hand rule, based on the sequence in which the four
points are entered.&lt;/p&gt;
&lt;p&gt;Bezier Surface
When the Bezier Surface  option is chosen, a Bezier surface is defined by the coordinates (x, y, z) of NPOINT1 x NPOINT2
control points. NPOINT1 points are entered along the first direction and then repeated NPOINT2 times to fill through
the second direction of the surface. NPOINT1 and NPOINT2 have to be at least equal to 4. Number of subdivisions
(NDIV1, NDIV2) entered has to be equal or greater than NPOINT1 and NPOINT2 for Bezier surface.
(NPOINT1 -1)x(NPOINT2-1) 4-node patches are created by SOL 400 for the definition of a Bezier surface. Figure 9-7
shows a typical Bezier surface. If it can be treated as an analytical surface, an exact conversion to NURBS is performed.Surface Entity Type
Bezier surface
4-node patch
NURB
Cylinder
Sphere
Note:   Patran produces a NURBS description for all 3-D rigid surfaces, even when patches or other geometrical
shapes are specified. If rigid bodies made of patches are desired, then the geometry should be meshed and the
elements specified as the application region.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Contact Bodies292
Main Index
Figure 9-7  Three-dimensional Rigid Bezier Surface
Four-node Patch
When the Four-Node Patches  option is chosen, you enter directly all the 4-node patches that comprise this surface. They
are entered following the same format SOL 400 would use to specify connectivities and coordinates of a mesh of CQUAD4
elements. In this way, a finite element preprocessor can be used to create surfaces. Figure 9-8 shows a typical 4-node patch
surface. It cannot be used as an analytical surface.xyz2NDIV2 = 4NPOINT2 = 4
1
NDIV1 = 4NPOINT1 = 4 r00r30r31r32r33r23r13
r03
r02
r01r12r22
r21
r20
r10r11
1: First direction
2: Second direction
h: Normal direction into the rigid body&lt;/p&gt;
&lt;p&gt;293 Chapter 9: Contact
Rigid Contact Bodies
Main Index
Figure 9-8  Three-dimensional Rigid Surface (4-Node Patch)
Nonuniform Rational Bspline Surface, NURBS
When the NURBS  option is chosen, NURBS are defined by the coordinates (x, y, z) of NPOINT1 xNPOINT2 control
points, NPOINT1 x NPOINT2 homogeneous coordinates and (NPOINT1+NORDER1) + (NPOINT2+NORDER2)
normalized knot vectors. If only the control points are entered, the interpolation scheme is used such that the surface passes
through all of control points. The homogeneous coordinates and knot vectors are calculated by SOL 400. NPOINTS and
NPOINT2 have to be at least equal to 3 for the interpolation scheme. A typical surface described by NURBS is shown in
Figure 9-9.xyz
12
713
8Number of patches = 12
Number of nodes = 20
Nodal coordinates can be entered
using user subroutine DIGEOM

712
1132
8Rigid body
7121
13
2
8
Rigid body
1: First direction
2: Second direction
h: Normal vector (right-hand rule) into the rigid body&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Graphical User Interface for Contact294
Main Index
Figure 9-9  Nonuniform Rational Bspline Surface, NURBS
Patran Graphical User Interface for Contact
Defining Contact Bodies in Patran
The Create&amp;gt;Contact&amp;gt;Element Uniform  combination on the Loads/Boundary Application  form defines slideline,
deformable, and rigid contact bodies. This form is used to define certain data for the MSC Nastran Input entries. Other
data entries are defined under the Analysis Application  when setting up a job for nonlinear static or nonlinear transient
dynamic analysis. A contact table is also supported; by default, all contact bodies initially have the potential to interact with Entry Description
BCBODY defines a flexible or rigid contact body in 2-D or 3-D.
GMNURB defines a 3-D contact region made up of NURBS.
BSURF defines a contact body or surface defined by element IDs.
BCBOX defines a 3-D contact region. All elements within the region define a contact body.
BCPROP defines a 3-D contact region by element properties. All elements with the specified properties define a
contact body.
BCMATL defines a 3-D contact region by element material. All elements with the specified materials define a
contact body.
BCHANGE changes definitions of contact bodies.+5+6+10
+8
+9
+7
+1+3+4
+2
YZ
X&lt;/p&gt;
&lt;p&gt;295 Chapter 9: Contact
Patran Graphical User Interface for Contact
Main Index
all other contact bodies and themselves. This default behavior can be modified under the Contact Table  form, located on
the Solution Parameters  subform in the Analysis Application  when creating a Load Step .
The Application Region  form for contact is used to select the contact bodies whether they be deformable or rigid.
Deformable contact bodies are always defined as a list of elements, the boundary of which defines the contact surface. Rigid
bodies are translated as ruled surfaces (2-D) or straight line segments (1-D) if a mesh or geometry with an associated mesh
is selected. Otherwise, if no mesh is associated with the selected geometry, the contact definition will be written as geometric
NURB surfaces during translation.
Deformable Body
Defining a deformable contact body requires the following data via the Input Properties  subform on the Loads/Boundary
Conditions Application  form.
Description
Friction Coefficient  (MU)Coefficient of static friction for this contact body. For contact between two bodies with
different friction coefficients, the average value is used.
Heat Transfer Coefficient
to EnvironmentHeat transfer coefficient (film) to environment. This is only necessary for coupled analysis.
Environment Sink
TemperatureEnvironment sink temperature. This is only necessary for coupled analysis.
Contact Heat Transfer
CoefficientContact heat transfer coefficient (film). This is only necessary for coupled analysis.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Graphical User Interface for Contact296
Main Index
Rigid Body
Defining a rigid contact body requires the following data via the Input Properties  subform on the Loads/Boundary
Conditions Application  form.  The input data form differs for 1-D and 2-D rigid bodies. One dimensional rigid surfaces
are defined as beam elements, or as curves (which may be meshed with beam elements prior to translation) and used in 2-
D problems. The lines or beams must be in the global X-Y plane. T wo dimensional rigid surfaces must be defined as Quad/4
or T ri/3 elements, or as surfaces (which may be meshed with Quad/4 or T ri/3 elements prior to translation) and are used
in 3-D problems. The elements will be translated as 4-node patches if meshed or as NURB surfaces if not meshed.Boundary By default a deformable contact body boundary is defined by its elements (Discrete).
However, you can use an Analytic surface to represent the deformable body. This
improves the accuracy for deformable-deformable contact analysis by describing the outer
surface of a contact body by a spline (2-D) or Coons surface (3-D) description.
Exclusion Region This is an optional input. The Analytic surface of a deformable body can be described by
a spline (2-D) or Coons surface (3-D) and by default the entire outer surface will be
included unless an Exclusion Region  is selected. For instance, you may not want to
represent locations of a body that never come in contact with the SPLINE option. Select
either Geometry  entities of the contact body that have element associated to them, or
select individual FEM nodes along the outer surface. Care should be take when selecting
Exclusion Regions  that actual outer surface or edge geometry is selected. If nodes are being
selected that describe a 3-D edge of a solid, the nodes must be in order (it is safer to select
a geometric entity in this case as the nodes could get reordered incorrectly).
Input Description
Flip Contact Side Upon defining each rigid body, Patran  displays normal vectors or tic marks. These should
point inward to the rigid body. In other words, the side opposite the side with the vectors
is the side of contact. Generally, the vector points away from the body in which it wants to
contact. If it does not point inward, then use the modify option to turn this toggle ON.
The direction of the inward normal will be reversed.
Symmetry Plane This specifies that the surface or body is a symmetry plane. It is OFF bydefault.
Null Initial Motion This toggle is enabled only for Velocity  and Position  type of Motion Control . If it is ON,
the initial velocity, position, and angular velocity/rotation are set to zero in the
CONTACT  option regardless of their settings here (for increment zero).
Motion Control Motion of rigid bodies can be controlled in a number of different ways: velocity, position
(displacement), or forces/moments.
Velocity  (vector ) For velocity controlled rigid bodies, define the X and Y velocity components for 2-D
problems or X, Y, and Z for 3-D problems.
Angular Velocity&lt;br&gt;
(rad/time )For velocity controlled rigid bodies, if the rigid body rotates, give its angular velocity in
radians per time (seconds usually) about the center of rotation (global Z axis for 2-D
problems) or axis of rotation (for 3 -Dproblems). Description&lt;/p&gt;
&lt;p&gt;297 Chapter 9: Contact
Movement of Contact Bodies
Main Index
Movement of Contact Bodies
The motion of deformable bodies is prescribed using the conventional methods of applying displacements, forces, or
distributed loads to the bodies. Symmetry surfaces are treated as a special type of bodies which have the property of being
frictionless and where the nodes are not allowed to separate.
There are three ways to prescribe the motion of rigid surfaces:
Prescribed velocity
Prescribed position
Prescribed load or displacement of (a) control node(s).
Associated with the rigid body is a point labeled the center of rotation. When the first two methods are chosen, you define
the translational motion of this point, and the angular motion about an axis through this point. The direction of the axis
can be defined for three-dimensional problems. For two-dimensional problems, it is a line normal to the plane. For complex
time-dependent behavior, the MOTION  user subroutine can be used to prescribe the motion as an alternative to the input. Velocity vs Time Field If a rigid body velocity changes with time, its time definition may be defined through a
non-spatial field, which can then be selected via this widget. It will be scaled by the vector
definition of the velocity as defined in the Velocity  widget. The Angular Velocity  will also
be scaled by this time field.
Friction Coefficient  (MU)Coefficient of static friction for this contact body. For contact between two bodies with
different friction coefficients, the average value is used.
Rotation Reference Point This is a point or node that defines the center of rotation of the rigid body. If left blank,
the rotation reference point will default to the origin.
Axis of Rotation For 2-D rigid surfaces in a 3-D problem, aside from the rotation reference point, if you
wish to define rotation, you must also specify the axis in the form of a vector.
First Control Node This is for Force  or SPCD  controlled rigid motion. It is the node to which the force or
SPCD  is applied. A separate LBC must be defined for the force, but the application node
must also be specified here. If both force and moment are specified, they must use different
control nodes even if they are coincident. If only 1 control node is specified, the rigid body
will not be allowed to rotate.
Second Control Node This is for Moment  controlled rigid motion. It is the node to which the moment is applied.
A separate LBC must be defined for the moment, but the application node must also be
specified here. It also acts as the rotation reference point. If both force and moment are
specified, they must use different control nodes even if they are coincident.
Note:   After defining rigid bodies in your model, you can preview the rigid body motion by selecting Preview Rigid
Body Motion&amp;hellip;Input Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Movement of Contact Bodies298
Main Index
The motion during a time increment is considered to be linear. The position is determined by an explicit, forward
integration of the velocities based upon the current time step. A time increment must always be defined even if a static, rate-
independent analysis is performed.
When load controlled (a more accurate name would be “control node” rigid bodies) rigid bodies are used, two additional
nodes, called the control nodes, are associated with each rigid body. In 2-D problems, the first node has two translational
degrees of freedom (corresponding to the global x- and y-direction) and the second node has one rotational degree of
freedom (corresponding to the global z-direction). In 3-D problems, the first node has three translational degrees of
freedom (corresponding to global x-, y-, and z -direction) and the second node has three rotational degrees of freedom
(corresponding to the global x-, y-, and z-direction). In this way, both forces and moments can be applied to a body for the
control nodes. Alternatively, one may prescribe one or more degrees of freedom of the control nodes by using the SPCD&lt;br&gt;
bulk data entries. Generally speaking, load-controlled bodies can be considered as rigid bodies with three (in 2-D) or six
(in 3-D) degrees of freedom. The prescribed position and prescribed velocity methods (see Figure 9-10) have less
computational costs than the prescribed load method (see Figure 9-11), however it is possible to change the loads and
constraints on the control node from one subcase to the next to prescribe more complex motion of the rigid body.
Figure 9-10  Velocity Controlled Rigid Surface
Figure 9-11  Load Controlled Rigid Surface
If the second control node is not specified, the rotation of the body is prescribed to be zero.1
23
12
VCentroid
Extra NodeFxFy
Mz&lt;/p&gt;
&lt;p&gt;299 Chapter 9: Contact
Movement of Contact Bodies
Main Index
Velocity Definition
For velocity control, on BCBODY  or BCRIGID  bulk data entry define:
•CONTROL=0 , velocity controlled rigid surface
•ANGVEL , angular velocity w about the local axis R through the center of rotation CGID , in radians/time
•DCOSi , direction cosines of local axis R
•VELRBi , translational velocity VCGID  of the center of rotation CGID  in direction i
The velocity of point A of the rigid body then calculated as:
VA = VCGID + R × r
Body Movement Definition
The BCMOVE  bulk data entry can be used to control the initial motion of rigid bodies or whether nodes are released from
a rigid body.
This option is used in the Body Approach  step which is created by Patran.
As a demonstration of the movement of a velocity controlled rigid surface, see Cup Forming Simulation  (Ch. 15) in the  MSC
Nastran Demonstration Problem Manual .
As a demonstration of the movement of a position controlled rigid surface, see Closure of a Rubber Seal using Segment-to-
Segment Contact with Friction  (Ch. 44) in the  MSC Nastran Demonstration Problem Manual.
Contact Rigid Body Growth
An additional contact enhancement is the rigid body contact growth. This is particularly important for analysis of
biomedical components like stents. A typical stent application places a stent in a blocked artery and then uses a balloon to
expand the device. The main challenge in simulating stent growth in FEA is by expanding the stent internal surface by
growing the rigid body with time increment. MSC Nastran solves this issue by providing rigid body contact growth.
As a demonstration of the movement of a position controlled rigid surface, see Stent Analysis with Growing Rigid Body  (Ch. 41)
in the MSC Nastran Demonstration Problem Manual.
Initial Conditions
At the beginning of the analysis, bodies should either be separated from one another or in contact. Bodies should not
penetrate one another at the start of the analysis unless the objective is to perform an interference fit calculation. Rigid body
profiles are often complex, making it difficult for you to determine exactly where the first contact is located.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Body Interaction300
Main Index
Unlike other MSC Nastran solution sequences, some calculations take place before a SOL 400 analysis begins. This is
defined as increment zero. During increment zero, if a rigid body has nonzero motion, the initialization procedure brings
it into first contact with a deformable body. No motion or distortion occurs in the deformable bodies during this process.
In a coupled thermal mechanical analysis, no heat transfer occurs during this process. If more than one rigid body exists in
the analysis, each one with a nonzero initial velocity is moved until it comes into contact. Because increment zero is used
to bring the rigid bodies into contact only, you should not prescribe any loads (distributed or point) or prescribed
displacements initially. For multistage contact analysis (often needed to simulate manufacturing processes), the BCMOVE&lt;br&gt;
bulk data entry in conjunction with the BCTABLE  bulk data entry allows you to model contact bodies so that they just
come into contact with the workpiece. This procedure is called a Body Approach  subcase in Patran.
Cautions
In static analysis, it is necessary to artificially connect (for instance, by very low stiffness springs) deformable bodies that
during an analysis might be completely separated from other deformable bodies and have no kinematic boundary
conditions applied.
Contact Body Interaction
In this section, we will look at how to specify the interaction of contact bodies. There are two ways to do this. The simplest
way is to include the BCONTACT=ALLBODY  statement in the case control section. This tells SOL 400 to track the contact
between each contact body and every other contact body in the analysis. User&amp;rsquo;s are often concerned that tracking more
bodies this way will cause a performance degradation, but testing has shown that the penalty is negligible.
When the BCTABLE  or BCTABL1  and BCONECT  bulk data entry is entered, the default of detection for every body is
overridden. Instead, you specify the relationship of detection between bodies for contact. The touching body does not
contact itself unless you request it. Whenever the touched body is a flexible one, by default, the capability of double-sided
contact is applied between the contacting bodies. This can be switched off by selecting single -sided contact or by setting
the searching order in the BCTABLE  or BCONECT  bulk data entry.
For SOL 101 and SOL 400, the form BCONTACT=n  or =ALLBODY  is required with default  BCONTACT=NONE . In SOL 101,
standard subcase rules apply. In SOL 400, standard step rules apply;  thus, BCONTACT  may be specified within each
subcase or step to define which bodies may make  contact during that particular subcase or step. In SOL 400, the presence
in the bulk data  section of contact entries listed below with ID=0 will automatically invoke initial preload contact&lt;br&gt;
conditions such that the contact bodies will just touch each other before the nonlinear simulation begins.
If you have subcases where some have contact and others do not, use the BCONTACT=NONE  and BCONTACT=N  options,
instead of the default BCONTACT=ALLBODY .
When using node-to-segment approach, you have control over the searching order of contact.
Often the nodes on the contacting body are labeled the secondary n odes and the nodes on the face or edge (2-D) of the
contacted body are labeled as the primary n odes. If single-sided contact is used, then the contacting nodes are considered
part of the secondary b ody.
If one knows nothing about the contact bodies or the meshes, it is not possible to determine which body should be the
contacting body and which should be the contacted body and you should let the program determine the order.&lt;/p&gt;
&lt;p&gt;301 Chapter 9: Contact
Contact Body Interaction
Main Index
Given two bodies – one being softer than the other, then choose the softer body to be the contacting body and the stiffer
body to be the contacted body.
Given two bodies – one having a finer mesh and the other having a coarser mesh, then the finer mesh should be the
contacting body.
MSC Nastran has two input mechanisms for defining the contact interaction :
Whichever mechanism is used, the variable ISEARCH  is used to control the search procedure
ISEARCH=0  (default) – Double-sided search
•First, the lower ID body is checked against the higher ID body for contact. If contact is found, contact
constraints are created.
•Next the higher ID body is checked against the lower ID body and additional contact constraints are created
without conflicting with the existing constraints.
ISEARCH=1  – Single-sided search
•Search order is from secondary t o primary
•Secondary a nd primary a re defined in the contact table
ISEARCH=2  – Automatic
•Search order is from the body with smaller minimum element edge size to body with larger minimum element
edge size. The search is single sided. Refer to MSC Nastran Quick Reference Guide  for more details.Note:   The search order is NOT relevant when using the segment-to-segment contact approach.
The concept of PRIMARY and SECNDRY bodies or nodes is also NOT relevant.
BCTABLE all information is entered
BCTABL1, BCONECT,
BCONPRG,
BCONPRPuser defines contact interaction mechanism using BCONPRG  and defines to which bodies
this interaction is applied via BCTABL1  and BCONECT .&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Body Interaction302
Main Index
Example of ISEARCH=0  or ISEARCH=1
Works well for bodies with similar mesh densities
This case study illustrates that this search logic does not work well when bodies with very different mesh densities
are in contact
Deformable-to-Deformable Contact
Contact Constraint
In the case of node-to-segment contact, when a node is detected to be in contact with a segment a MPC is created. Note
that this is similar to an RBE3 constraint in the sense that the nodes on the segment are not constrained to move like a rigid
body. Furthermore, when used in SOL 400 in a large displacement simulation the large rotations are included
Automatic is ISEARCH=2
Single-sided is ISEARC=1
Double-sided is ISEARCH=0&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P17</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_017/</guid>
      <description>
        
        
        &lt;p&gt;303 Chapter 9: Contact
Contact Body Interaction
Main Index
Example of Poor Body Numbering
Secondary h as coarser mesh
Example of Proper Body Numbering
Secondary h as finer mesh
As one can observe, penetration may occur when different mesh density are used. For many problems, one simply does not
know which body has a finer mesh, in which case ISEARCH=2  should be used; in which case, for this example, it will chose
the finer mesh as the contacting body.
For some models, such as the closing of the seal shown below, because of large sliding, the contact may transition over many
mesh dimensions, an additional choice called Optimized contact is possible by setting ISEARCH=0  and ISTYP=2 . SOL&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Body Interaction304
Main Index
400 optimizes the constraints based upon stiffness and mesh densities. This is the recommended method when using node-
to-segment contact.
Example where optimized contact is beneficial
As another example, let us examine contact detection for shell elements and other rules that are used to determine contact
detection order.
Consider two shell bodies that are to come into contact: the upper (body2) and the lower plate (body 1) thicknesses are
0.125 and 0.070, respectively, and the midsurface of the shells are (t1+t2)/2 apart=0.0975.
0.0975
Shell Thickness Display&lt;/p&gt;
&lt;p&gt;305 Chapter 9: Contact
Contact Body Interaction
Main Index
Using ISEARCH =0 , it will search the top surface vs the bottom surface, and then search the bottom search vs the top search
based upon the body numbering scheme. It will not use any knowledge of the mesh density in the evaluation. In this
particular case, it does a poor job. What happens is shown below, the first pass is
In the first pass, the coarse lower body contacts the fine upper body and makes constraint equations. In the second pass,
the fine body attempts to make constraints with the coarse body; but, in fact, it cannot make a constraint with an already
tied node. So it results in a poor contact constraint.
In this case using ISEARCH=1  and changing the order of the contact bodies so the fine mesh is the 1st body results in a
better system.&lt;/p&gt;
&lt;p&gt;0 is a retained node
1 is a tied node&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Body Interaction306
Main Index
This model illustrates an interesting behavior of the Automatic search detection procedure as well. The search order is from
the body with the smaller contact tolerance to the body with the larger contact tolerance. This contact tolerance has two
geometric components for shell elements, namely:
1.The size of the mesh (1/20 element length)
2.the thickness if the shells (1/4 thickness)
So in this model, the lower shell has the smaller dimension based upon the smaller thickness, and non-optimal constraints
would be formed. This could be seen by examining the output
T o overcome this problem, one can indicate that the thickness aspect should be neglected for ISEARCH=2 .
For node-to-segment contact, using BCPARA,0,THKOFF,1  is recommended.
Contact tolerance based upon property (thickness) Contact tolerance based element edge length&lt;/p&gt;
&lt;p&gt;307 Chapter 9: Contact
Contact Body Interaction
Main Index&lt;/p&gt;
&lt;p&gt;Beginning with the 2013 release, an alternative method was introduced for defining contact interaction that utilizes the
BCTABL1 , BCONECT , and BCONPRG b ulk data entries. Utilizing this input style one would have used:
As a demonstration of the use of BCTABLE  to define search order, see Double-sided Contact  (Ch. 16) and Bolted Plates&lt;br&gt;
(Ch. 20) in the MSC Nastran Demonstration Problem Manual .Note:   When using Segment-to-Segment contact, the value of ISEARCH and the ordering of contact bodies is
immaterial.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions308
Main Index
Controlling Contact Interactions
Physically, there are four types of contact deformable-to-deformable, self-contact which is a special case of the previous,
deformable-to-rigid and deformable with symmetry surface which is also a special case. From a user’s perspective, one can
define contact as:
General Contact – two bodies may come into contact and separate at any point in the simulation, and the bodies may slide
alone each other’s surface with or without friction. The fundamental constraint is no relative normal displacement when
bodies are in contact. General contact is available in SOL 101, SOL 400, SOL 600, or SOL 700 only. For SOL 101, contact
is the only source of nonlinearity, no large displacements, large rotations or material nonlinearity is available.
Glued Contact – two bodies may come into contact and separate at any point in the simulation, but when in contact, there
is no relative sliding. The fundamental constraint is no relative normal displacement or tangential displacement when
bodies are in contact. One can consider this equivalent to two surfaces that have infinite friction. Note that the word glued,
only refers to the constraint on the tangential behavior. Bodied that are in glued contact may lose contact if the separation
(force or stress based) separation criteria is exceeded, due to Unglue or Breaking Glue.
Step Glued Contact – available for SOL 400 only. Step Glued contact is activated using a value a negative value of IGLUE
for each contact pair. It is similar to Glued Contact, there are two conditions.
1.The contact status is checked at the beginning of the step, and those nodes or segments that are in contact will
remain in glued contact for the entire step. The constraints will change due to large rotations. Furthermore, if a
large tensile force or stress developed over the interface in the current loadcase, no separation would occur for these
regions which are initially in contact. Performing an Unglue of Breaking glue would also not be enforced during
the step for these regions. This may be successfully used to model the union of dissimilar meshes, where at a later
time one wanted to separate the bodies (e.g., opening of a door).
2.When using Step Glue conventional contact occurs for the nodes/segments of the body which are not in contact at
the beginning of the step. That means when they come into contact, they will glue, but they may separate within
the same step.
Permanently Glued Contact – this is a special case of contact, where the initial configuration is used to determine the
contact constraint, and these contact changes due not change throughout the analysis. Nodes or segments which are not
initially in contact do not come into contact, and in fact may penetrate the model. The constraint is a glue type, meaning
there will be no relative normal or tangential displacement. Permanent glued may be used to connect dissimilar meshes or
for simple assembly modeling when no other contact occurs. The bodies will never separate. Permanent glue should not be
used in models that experience large rotations. It is applicable to SOL 101, 103, 105, 107, 108, 109, 110, 111, 112, SOL
200, and SOL 400. Permanent Glued contact is activated if the BCTABLE  or BCTABL1  that is referenced in the first
Loadcase (SOL 100*) or in the first Step (SOL 200) has a value of IGLUE  greater than zero for all contact body pairs.
If the user requires conventional (general) contact for the complete simulation, but Permanent Glued contact is invoked,
enter bulk data BCPARA,0,NLGLUE,1  to deactivate the Permanent Glue in a subsequent step.
Because glued contact is very useful in assembly modeling problems encountered in engineering practice, several special
cases are considered as well.
Cohesive Contact &amp;ndash; This is a special case of glued contact. In the modern industries, the product structure like airplane,
automobile, and so on, is becoming more and more complicated with many parts. The assembly process may be done
through a variety of processes such as rivets, bolts, spot weld, seam welds, or adhesives. In the numerical simulations of the&lt;/p&gt;
&lt;p&gt;309 Chapter 9: Contact
Controlling Contact Interactions
Main Index
assemblies of many parts into a single structure, it is often too costly to model each one of these discrete connectors, and
the glued contact capability provides an effective and efficient way to simplify and reduce the computation costs. While this
method is easy to use, however, it often results in too stiff of a structure because effectively the connection is rigid. To
alleviate this, a flexible glued contact capability is available. With cohesive glued contact, it is necessary to model the detailed
connectors but provides the stiffness of the connectors in the glued contact.
Moment Carrying Glue – by default, the contact constraint for glued contact with shells includes only translational degrees
of freedom. In other words, the moments were not carried across the contact interface. When a node of a shell or beam
element is glued to a load controlled rigid body or to the face of a shell or solid element, the rotation of the shell or beam
can be suppressed. This allows a true moment carrying glued connection. For the case that a connection is made to the face
of a solid element, the rotations of the touching node are connected to the translations of the nodes of the contacted patch
by a constraint relation based upon the large rotation RBE3 theory. Full moment carrying glue is also supported for the
following contact types: Shell-to-Shell, Shell-to-Solid, Beam -to-Shell, and Beam-to-Solid.  The moment carrying feature is
optional and is activated through the BCTABLE /BCTABL1  bulk data entry.
Moment carrying glue is not supported for the following types of contact:
Beam-to-Beam
Shell Edge-to-Shell Edge (with BEAMB=1  on BCPARA )
Symmetry Contact – deformable contact with a rigid Symmetry surface. In this case, no friction is allowed. Furthermore,
no separation is allowed, and finally, if the rigid surface is contacted by beams or shells, the rotations are automatically
constrained to satisfy the symmetry constraints. You do not need to specify any additional input, other than specifying that
the rigid surface is a SYMM body.
In SOL 400, one can have a multiple contact interaction types in the model meaning general contact, glued contact, step
contact on a contact pair basis. These can change from step to step by activating a new BCTABLE  or BCTABL1 .
In summary, the glue condition between bodies can be defined via BCTABLE  or BCONPRG  through the IGLUE
keyword as follows:
IGLUE keyword
0 – no gluing
1 – Activates the glue option. In the glue option, all degrees-of- freedom of the contact nodes are tied in case of
deformable-deformable contact once the node comes in contact. The relative tangential motion of a contact node
is zero in case of deformable-rigid contact. The node will be projected onto the contact body.
2 – Activates a special glue option to insure that there is no relative tangential and normal displacement when a
node comes into contact. An existing initial gap or overlap between the node and the contacted body will not be
removed, as the node will not be projected onto the contacted body. To maintain an initial gap, ERROR  should be
set to a value slightly larger than the physical gap.
3 – Insures full moment carrying glue when shells contact. The node will be projected onto the contacted body.
4 – Insures full moment carrying glue when shells contact. The node will not be projected onto the contact body
and an existing initial gap or overlap between the node and the contacted body will not be removed, as the node
will not be projected onto the contacted body.
In SOLs 101 and 400, if contact is initially not true set NLGLUE  on BCPARA  to 1.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions310
Main Index
For SOL 400 with a mixture of glued and non-glued bodies, BCPARA,0,NLGLUE,1  must also be used
For an example of Glued contact see MSC Nastran Demonstration Problems , Modal Analysis with Glued Contact  (Ch. 2).Note:   The use of IGLUE=1 or IGLUE=3 can have negative repercussions because of the projecting of nodes onto
the surface. This may result in the loss of the rigid body modes, which effectively grounds the structure. For
large assembly models, it is recommended that either IGLUE=2 or 4 is used, or that IGLUE=1 or 3 be used
in conjunction with Stress Free Initial contact, ICOORD=1.
IGLUE=1 IGLUE=2
IGLUE=3 IGLUE=2
GUI and Resultant Values of IGLUE&lt;/p&gt;
&lt;p&gt;311 Chapter 9: Contact
Controlling Contact Interactions
Main Index
Contact in Perturbation Steps
In a perturbation step (MODES, BUCK, DFREQ, MFREQ, MCEIG), the contact status does not change.
Assembly Modeling/Dissimilar Mesh and Initially Imperfect Geometry
In many analyses, glued contact is desired, but the two bodies are not in perfect contact. This may be due to errors in the
CAD model or a result of the meshing process. It may also be by design, such as in modeling interference fit. These
discrepancies in the representation can have various implications in assembling the model in the results. T o move them into
contact would generate artificial stresses in the model. T o overcome this obstacle, there are two possibilities. The first is to
apply the constraint but not project the surfaces into contact. The second is to activate the STRESS-FREE initial contact
is a good choice, by setting ICOORD=1 . What this does is move the coordinates of the contacting nodes such that they are
on the contacted surface. The coordinate positions will be updated and all displacements, strains, stresses will be relative to
these positions.
If one considers an eigenvalue simulation of the model with PARAM, LGDISP  activated so the calculation captures the
initial stress effects, using this technique will result in the six rigid body modes that one expects. If this is not done, the
imperfection in the mesh would induce a stress, which would influence the rigid body modes.
For Glued contact, the program forms a constraint between the secondary n ode (A) and the primary n odes B,C,D, and E
based upon the isoparametric projection of the node A on the nodes B,C,D,E face.
Default Initial Contact Stress-free Initial Contact,
Coordinate updated to be onsurface&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions312
Main Index
The constraint is:
IGLUE = 1,3  does not include “d” offset in MPC equations
IGLUE = 2,4  includes “d” offset in MPC equations
UNGLUE
With UNGLUE , you can select some nodes of the contact body for regular contact instead of glue contact even if the
contact table ( BCTABLE ) says that they should be glued. Those selected nodes will ignore any glue condition and follow
regular contact rules instead (normal constraint, no tangential constraint).
Breaking Glue
In engineering problems that involve delamination, it is often useful to indicate that two surfaces are glued together, but
may separate if a certain stress level is reached. The simplest is based upon a normal stress (preferred) or a force condition.
For problems like tape peeling, it is useful to include both the normal and shear stress condition. This can be invoked by
JGLUE  on BCTABLE  or BCONPRG :
0 – glued contact nodes will stay in contact. Default.
1 – to invoke the standard separation behavior
2 – breaking glued with a breaking criterion
BKGL , keyword for breaking glued:
BGST , maximum tangential stress (default=0.0)
BGSN , maximum normal stress (default=0.0)
BGM, the first exponent associated with tangential stress (default=2.0)
E(-1,1)
B(-1,-1)D(1,1)
C(1,-1) Primary
SurfaceSecondary Node
E
dA
CDB
DwA141xA– 1hA–DwB141xA+1hA–  DwC141xA+1hA+  DwD+ + =
141xA–1hA+DwEd– +&lt;/p&gt;
&lt;p&gt;313 Chapter 9: Contact
Controlling Contact Interactions
Main Index
BGN, the exponent associated with normal stress (default=2.0)
Defining Contact Control Parameters in Patran
To define the Contact Control Parameters  for an analysis:
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.Click Solution Type&amp;hellip;  and select Solution Parameters&amp;hellip;
3.Select Contact Parameters&amp;hellip;  to bring up the Contact Control Parameters  subform shown below.
Deformable-Deformable Method In Double-Sided  method, for each contact body pair, nodes of both bodies will
be checked for contact. In Single-Sided  method, for each contact body pair,
only nodes of the lower-numbered body will be checked for contact. Results
are dependent upon the order in which contact bodies are defined.
Penetration Check This controls contact penetration checking. sometimes referred to as the
increment splitting option. Available options are:
Per Increment , Per
Iteration  (default),means penetration is checked at the end of a load
increment. t
BGST &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;BGMn
BGSN &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;BGN
1.0 +&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions314
Main Index
Defining a Contact Table in Patran
T o define a contact table:
1.Click on the Analysis Application  button to bring up the Analysis Application  form.
2.Click Subcases&amp;hellip; , select Subcase Parameters&amp;hellip; , and click Contact Table .Suppressed (Fixed or
Adaptive)means that penetration is checked at the end of every
iteration within an increment. If penetration is
detected, increments are split.
Per Increment suppress this feature for Fixed  and Adaptive  load
stepping types.
Reduce Printout of Surface Definition This controls reduction of printout of surface definition.
Note:   Patran will only write out the contact table if something on the contact table form is changed. The
default is to write out BCONTACT=ALLBODY which does not require that the BCTABLE  entry
be written out&lt;/p&gt;
&lt;p&gt;315 Chapter 9: Contact
Controlling Contact Interactions
Main Index
.
Input Description
Contact Detection Default (by body
#)This is the default where contact is checked in the order the bodies
are written to the input deck. In this scenario, the most finely meshed
bodies should be listed first. There will be contact checks first for
nodes of the first body with respect to the second body and then for
nodes of the second body with respect to the first body. If Single
Sided  contact is activated on the Contact Parameters  subform, then
only the first check is done
Automatic Unlike the default, the contact detection is automatically determined
and is not dependent on the order they are listed but determined by
ordering the bodies starting with those having the smallest edge
length. Then there will be only a check on contact for nodes of the
first body with respect to the second body and not the other way
around.
First -&amp;gt;Second Blanks the lower triangular section of the table matrix such that no
input can be accepted. Only the contact bodies from the upper
portion are written, which forces the contact check of the first body
with respect to the second body.
Second-&amp;gt; First Blanks the upper triangular section of the table matrix such that no
input can be accepted. Only the contact bodies from the lower
portion are written. Contact detection is done opposite of First-&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Second .
Double-Sided Writes both upper and lower portions of the table matrix. This
overrules the Single Sided  contact parameter set on the Contact
Parameters  subform.
Touch All Places a T to indicate touching status for all deformable-deformable or rigid-deformable
bodies.
Glue All Places a G to indicate glued status for all deformable-deformable or rigid-deformable
bodies.
Deactivate All Blanks the spreadsheet cells.
Body Type Lists the body type for each body; either deformable or rigid.
Release This cell can be toggled for each body to Y or N (yes or no). If Y, this indicates that the
particular contact body is to be removed from this subcase. The forces associated with this
body can be removed immediately in the first increment or gradually over the entire load
step with the Force Removal  switch described below.
Touching Body
Touched BodyThese are informational or convenience list boxes to allow you to see which bodies an active
cell references and to see what settings are active for Distance Tolerance  and other related
parameters below. You must click on the touched/touching bodies to see what values, if
any, have been set for the pair combination.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions316
Main Index
Contact Pair Interaction
This new capability enhances the MSC Nastran preference for the task of pre- and/or postprocessing contact pairs, which
is a simpler way than the current contact table/multi-body method. Specifically, this capability supports the new MSC
Nastran bulk data entries listed above. All of the options available through the contact table capability, including support
for shell edge contact, unglue, etc., that have been added to MSC Nastran SOL 400 are supported.Distance Tolerance Set the Distance Tolerance  for this pair of contact bodies. You must press the Enter  or
Return  key to accept the data in this data box. A nonspatial field can be referenced that will
write this data in table format, if this parameter varies with time, temperature, or some
other independent variable. This overrides any other settings for Distance Tolerance .
Separation Force Set the Separation Force  for this pair of contact bodies. You must press the Enter  or Return&lt;br&gt;
key to accept the data in this data box. A nonspatial field can be referenced that will write
this data in table format, if this parameter varies with time, temperature, or some other
independent variable. This overrides any other settings for Separation Force .
Friction Coefficient Set the Friction Coefficient  for this pair of contact bodies. You must press the Enter  or
Return  key to accept the data in this data box. A nonspatial field can be referenced that will
write this data in table format, if this parameter varies with time, temperature, or some
other independent variable. This overrides any other settings for Friction Coefficient .
Interference Closure Set the Interference Closure  for this pair of contact bodies. You must press the Enter  or
Return  key to accept the data in this data box. A nonspatial field can be referenced that will
write this data in table format, if this parameter varies with time, temperature, or some
other independent variable. This overrides any other settings for Interference Closure .
Heat Transfer Coefficient Set the Heat Transfer Coefficient  for this pair of contact bodies. You must press the Enter&lt;br&gt;
or Return  key to accept the data in this data box. A nonspatial field can be referenced that
will write this data in table format, if this parameter varies with time, temperature, or some
other independent variable. This overrides any other settings for Heat Transfer
Coefficient . This is only used in coupled analysis.
Retain Gaps/Overlaps This is only applicable for the Glued option. Any initial gap or overlap between the node
and the contacted body will not be removed (otherwise, the node is projected onto the body
which is the default). For deformable-deformable contact only.
Stress-free Initial Contact This is only applicable for initial contact in increment zero, where coordinates of nodes in
contact can be adapted such that they cause stress-free initial contact. This is important if,
due to inaccuracies during mesh generation, there is a small gap/overlap between a node
and the contacted element edge/face. For deformable-deformable contact only.
Delayed Slide Off By default, at sharp corners, a node will slide off a contacted segment as soon as it passes
the corner by a distance greater than the contact error tolerance. This extends this
tangential tolerance. For deformable-deformable contact only.Input Description&lt;/p&gt;
&lt;p&gt;317 Chapter 9: Contact
Controlling Contact Interactions
Main Index
There are now two application areas. The application area may be existing contact bodies, or you may select geometry or
fem as the application area(s), in which case Patran will create contact bodies of those regions.
Contact Pairs – Contact tables work great when there are just a few bodies and all of them are likely to interact, such as in
component design. However, when the number of contact bodies becomes large, as is the case when analyzing a complex
structure like an automobile or aircraft, the contact table used in multi-body contact quickly becomes difficult to manage.
In response to this case, MSC Nastran has created an alternate form of BCTABLE (BCTABL1/BCONECT)  that will allow
contact to be described as contact pairs. Patran has been enhanced to give you the option to describe contact either as multi-
body contact, as is supported now, or as contact pair contact. It is not possible to &amp;ldquo;mix -n- match&amp;rdquo; multi-body with contact
pair contact, due to the formats of the BCTABLE  and new BCTABL1/BCONECT  entries.
Automatic Contact Body Pair Creation User Interface
Automatic Contact Body and Contact Pair Creation
Automatic contact body creation has many options:
Based on Property Sets
Based on Group Membership
Based on Element Topology
Based on Connectivity
Automatic Contact Pair Creation has only one option:
Based on ProximityOption Description
Method: Method to automatically create bodies:
Automatic Contact Body
Creation Based On:
Property Sets
Group
Membership
Element Topology
Based on
ConnectivityThis method creates bodies based on continuous element connectivity of like elements.&lt;br&gt;
&amp;ldquo;Like elements&amp;rdquo; means all solid 3d elements (hex/tet), shell or 2d element (quad/tri), and
bar/beam (1-D) elements.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Controlling Contact Interactions318
Main Index
This is a simple utility to automatically create Contact Bodies and Contact Body Pairs based on some user criterion. The
utility is found under the Tools  pull down menu and is a single utility form with both this automatic Contact Body Pair&lt;br&gt;
creation and automatic Contact Body  creation.
Global Property Editor
In the case where each contact pair was created with its own individual property set, a large number of contact pairs can
still be modified in one step using the global property editor.Option Description
Create Options are Body Pair  or Deformable Bodies . The Deformable Bodies  selection is described
in the next section.
Distance Tolerance : This is the distance between body boundaries, below which two bodies are considered within
distance to create a Body Pair .
All Bodies If this switch is set to All Bodies , then all bodies, both deformable-rigid and deformable-
deformable body pairs will be created.
Deformable Only If this switch is set to Deformable Only, then only deformable-deformable body pairs will be
created.
Create From: The options are to consider bodies in the Entire Model , only those in the Current Viewport ,
or by selecting existing bodies manually. If the Selected Bodies  option is selected, the List
Box icon appears and the user can select this to get a list of bodies. Only those bodies based
on the All Bodies  or Deformable Only  switch setting will be listed in the List Box . A refresh
function is included so the list box contents can be dynamically updated if the user creates
bodies while this form is opened. The list box allows for filtering.
Apply Creates the body pairs and issues the PCL command to do so.
Defaults Resets the form to the defaults.
Cancel Closes the form without creating the body pairs.&lt;/p&gt;
&lt;p&gt;319 Chapter 9: Contact
Controlling Contact Interactions
Main Index
Example: If you created individual contact pairs that reference individual (not shared) properties, but if you want to do a
quick check run by gluing all of the contact connections (e.g., make a copy of the database to preserve the original pairs,
then modify all pairs at once), you can easily change all of the contact pairs to glued contact in one operation by using the
global property editor and changing the &amp;ldquo;Gluing&amp;rdquo; property word of all contact pairs.
Analysis Application – Subcase Create – Contact Table
With two mechanisms to define contact body interaction, and a control to specify which method is to be used is required.
It is assumed that if the user defines contact body pairs, then the user does not wish to use the contact table, so the Solution
Parameters  forms contain a Use Contact Table  button which can be modified via a toggle to enable or disable the use of
the Contact Table  as such:
When the form is originally opened or if being opened and not specifically associated with an existing subcase then Patran
will detect the presence of contact body pair LBCs. If they are found, then the toggle is set to OFF and the Use Contact
Table  button is disabled. If no body pair LBCs are present, then the toggle is ON and the button enabled.
Note that this is only valid if the MSC Nastran version is 2013 or higher. If less than 2013, then the toggle to Use Contact
Table  will not be visible and the Contact Table  must be used. If this is the case, any body pairs in the database are ignored.
Analysis Application – Solution Parameters – Initial Contact Table
The same issue occurs with the Initial Contact . For the case where no body pair LBCs exist, this form&amp;rsquo;s functionality
remains as is and the Use Contact Table  toggle can be disabled or hidden as appropriate. However, for the case where there
are body pair LBCs, then the toggle needs to be enabled/displayed and if Initial Contact  is turned ON, the Initial Contact&lt;br&gt;
button will either bring up the Contact Table  form ( Use Contact Table=OFF ) or a large list-box with a list of load-cases
(Use Contact Table=ON ) from which to select the load case containing the body pair LBCs to use as the initial contact.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Time Step Control320
Main Index
When the job is saved, a database parameter Use Contact Table=YES/NO  is saved.
When initial contact is ON and the user is using body pair LBCs, BCTABL1  with ID 0 is written.
Note that this scenario is only valid if the MSC Nastran version is 2013 or higher. If less than 2013, then the Use Contact
Table  toggle is not visible and the Contact Table  must be used. In this case, body pairs in the database are ignored.
For an example of using BCTABLE  to define contact interaction, see Tube Flaring  (Ch. 14) in the MSC Nastran
Demonstration Problem Manual.
For an example of using BCTABL1  to define contact interaction, see Ball Joint Rubber Boot  (Ch. 13) in the  MSC Nastran
Demonstration Problem Manual.
Time Step Control
The automatic contact procedure is controlled by the NLSTEP  bulk data entry for both dynamic problems and static
analyses. Other procedures are available but NLSTEP  is strongly recommended as the preferred method. The NLSTEP&lt;br&gt;
controls are used to determine the motion of rigid surfaces and to control the splitting of increments if penetration occurs.
Even in a quasi-static analysis, a “time step” is defined to represent the fraction of loading applied in each increment (e.g.,
a “time step” size of 0.01 in a static analysis actually represents 1% increment of the load applied in the current step). Several
procedures can be used to enter this data. Primary control is achieved using the NLSTEP  bulk data entry. It is highly
recommended that at least 100 increments be specified for all contact problems. If the default NLSTEP  values are used,&lt;/p&gt;
&lt;p&gt;321 Chapter 9: Contact
Contact  in SOL 101
Main Index
this produces adaptive load incrementation that adjust the load increment to provide the optimal combination of efficiency
and robustness (i.e., success of getting a correct solution with no user intervention).
The NLSTEP  subcase definition option can be used to define many time steps, each of the same magnitude. This
is referred to as “fixed” time stepping. Automatic cut-back method are available for use with fixed time
incrementation to avoid convergence problems. For fixed time stepping, the NLSTEP  subcase definition option is
used to define a total time period which is then divided into N equal time steps, where N is defined by the user.
The NLSTEP  subcase option can also be used to define a total time period which is divided into variable size time
steps. This is called “adaptive” time stepping and provides the most convenient and robust way to achieve a
converged solution. This option is discussed in Chapter 4: Solution Strategies for Nonlinear Analysis, Adaptive
Load Incrementation in SOL 400 (NLSTEP) .
Contact  in SOL 101
SOL 101 may also be used to preform contact  analysis. You can reduce the computational time by using “ LCPERF ” or
“LCACCU ” keyword on the NLSTEP  bulk data entry. This entry also allows you to customize values of specific control
parameters through the new “ LCNT ” keyword.
Guidelines and Limitations
The performance of LCPERF  selection is expected to improve by two to seven times for most models compared to the
current default settings of contact analysis. However, this enhancement applies to SOL 101 Linear Static Analysis only. For
some contact models, specifying LCPERF  or LCACCU  preference may result in poor convergence. In these cases, you may
increase the number of increments ( NINCC ) to achieve optimal results.
Example ( tpl/3dcnt101/rg_lcdf.dat )
This model consists of a pin as the contact body ID 1 and a clevis as the contact body ID 2. The pin is the primary b ody
and has the SPLINE option on ( BCBODY  “IDSPL ”). The contact table was set up to use single sided contact
(ISEARCH=1 ). Stress free initial contact is enabled.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact  in SOL 101322
Main Index
T o specify the Performance preference, define NLSTEP  case control command and NLSTEP  bulk data entry as follows.
NASTRAN SYSTEM(316)=19
$
SOL 101
CEND
$
TITLE = THIS IS A DEFAULT SUBCASE.
ECHO = NONE
BCONTACT = 0
SUBCASE 1
TITLE=This is a default subcase.
SUBTITLE=Linear_contact
NLSTEP = 1
BCONTACT = 1
SPC = 2
LOAD = 2
DISPLACEMENT(PLOT,SORT1,REAL)=ALL
SPCFORCES(PLOT,SORT1,REAL)=ALL
STRESS(PLOT,SORT1,REAL,VONMISES,BILIN)=ALL
BOUTPUT(PLOT,SORT1,REAL)=ALL
$
BEGIN BULK
$
PARAM   PRTMAXIM YES
NLSTEP,1,,LCPERF
:
Similarly, the Accuracy preference can be specified by replacing the following NLSTEP  bulk data entry
NLSTEP,1,,LCPERF
with&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P18</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_018/</guid>
      <description>
        
        
        &lt;p&gt;323 Chapter 9: Contact
Contact  in SOL 101
Main Index
NLSTEP,1,,LCACCU
The von Mises stress results are shown as follows.
Running on a Linux LX8664 machine, the Performance preference shows 7.3 times improvement in CPU time and 8.2
times improvement in convergence comparing with the baseline model that uses original default values of control
parameters. The Accuracy preference shows 5.5 times improvement in CPU time and 5.5 times improvement in
convergence. The following table lists detail comparisons of these three models.
By selecting LCPERF  or LCACCU , one effectively modifies the convergence control variables as shown in the following table.
Model Parameters\ Simulation Baseline ModelAccuracy
PreferencePerformance
Preference
Results
(comparison to baseline)&amp;ndash; Good
(results match
baseline)Good
(results match
baseline)
CPU time improvement
(baseline CPU / current)1.0 5.5 7.3&lt;/p&gt;
&lt;h1&gt;of iterations 41 7 5&lt;/h1&gt;&lt;p&gt;Improvement in convergence
(baseline iterations / current)1.0 5.9 8.2&lt;/p&gt;
&lt;h1&gt;of bisections / cutbacks 0 0 0&lt;/h1&gt;&lt;p&gt;Nonlinear User’s Guide
Contact  in SOL 101324
Main Index
Limits of Contact  in SOL 101
The terms linear  solution  and contact are almost immediately in conflict. The very nature of  contact problems are that finite
deformations of the nodes must be tracked to  determine if the notes are in contact or not in contact. This deformation is
almost  always large enough to invalidate contact in linear  solutions. The best use of contact  in SOL 101  is to use glued
contact to connect dissimilar meshes, or in cases where the  deflections of the overall structure are negligible and the stress
distribution near the  contact area is not important.
Consider the mounting bracket attached to the flat plate as shown in Figures 9-12 through 9-15. The problem  was solved
in three ways:
1.a linear solution;
2.using contact in SOL 101; and
3.using a full  nonlinear analysis.
Table 9-1 illustrates the significant differences in the  solutions.Max. Displacement (from .sts file) -3.2688E-04 -3.2688E-04 -3.2688E-04
% difference from baseline 0.00% 0.00% 0.00%&lt;/p&gt;
&lt;h1&gt;of increments&lt;/h1&gt;&lt;p&gt;NINCblank
(default:  10)blank
(default:  1)blank
(default:  1)
Convergence criteria
CONVblank
(default:  PV)blank
(default:  UPV)blank
(default:  PV)
Convergence:  Displacement
EPSUblank
(default:  1.0E-2)blank
(default:  1.0E-2)blank
(default:  1.0E-3)
Convergence:  Force
EPSPblank
(default:  1.0E-2)blank
(default:  1.0E-2)blank
(default:  1.0E-3)
Convergence:  Work
EPSWblank
(default:  1.0E-2)blank
(default:  1.0E-2)blank
(default:  1.0E-7)
Max. # of iterations
MAXITERblank
(default:  25)blank
(default:  25)blank
(default:  25)
Limit on divergence condition
MAXDIVblank
(default:  3)blank
(default:  5)blank
(default:  3)Model Parameters\ Simulation Baseline ModelAccuracy
PreferencePerformance
Preference&lt;/p&gt;
&lt;p&gt;325 Chapter 9: Contact
Contact  in SOL 101
Main Index
Figure 9-12  Mounting Bracket
Figure 9-13  Bracket Bonded to Plate using Permanent Glue - Linear Solution
Peak Stress in Bracket Peak Stress in Plate&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact  in SOL 101326
Main Index
Figure 9-14   Contact between Bracket and Plate
Figure 9-15  Incorporating Nonlinear Contact and Nonlinear Displacement
Table 9-1  Summary of Effect of Analysis Assumptions on Results
Analysis Assumption Peak Stress in Bracket Peak Stress in Plate
Linear –  Permanent Glue 60,100 psi 3,430 psi
Linear – Contact 48,000 psi 4,130 psi
Full Nonlinear 20,500 psi 13,800 psi
Peak Stress in Plate Peak Stress in Bracket
Peak Stress in Bracket
Peak Stress in Plate&lt;/p&gt;
&lt;p&gt;327 Chapter 9: Contact
Linear Contact (LINCNT)
Main Index
This leads to the conclusion that neglecting the effects of nonlinearity can lead to significant errors.
Linear Contact (LINCNT)
General Contact builds contact relation based upon configuration of previous iteration, which contradicts the infinitesimal
deformation assumption of linear or quasi-linear analysis. Linear Contact resolves this conflict by building contact relation
always based upon initial geometry, instead of deformed configuration updated through iterations.
User can activate this feature by LINCNT=1 on BCPARA. This is a global control, not a contact pair wise option. It
supports both node-to-segment and segment-to-segment method.
Benefit
Linear Contact (LINCNT) is suitable in small deformation/rotation/sliding analysis.
Better equilibrium can be achieved by getting rid of accumulated errors through iterations.
May accelerate convergence with less iterations.
More clean stress distribution, especially in Inertia Relief.
Example
tpl/lincnt/lincntir1.dat  demonstrates the advantage of Linear Contact (LINCNT) over general contact of Inertia Relief in
SOL 400. Numerical zeroes in SPC Force and total GPFORCE can be achieved.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection328
Main Index
Guidelines and Limitations
LINCNT can be used in SOL 400, SOL 101 and SOL 200 (run analysis only).
Set SYSTEM(786)=1 will turn on Linear Contact, regardless of LINCNT on BCPARA, only in SOL 101.
LINCNT does not support velocity control on RIGID contact body.
Contact Detection
During the incremental procedure, each potential contact node is first checked to see whether it is near a contact segment.
The contact segments are either edges of other 2-D deformable bodies, faces of 3-D deformable bodies, or segments from
rigid bodies. By default, each node could contact any other segment including segments on the body that it belongs to. This
allows a body to contact itself. To simplify the computation, it is possible to use the BCTABLE  bulk data entry to indicate
that a particular body will or will not contact another body. This is often used to indicate that a body will not contact itself.
During the iteration process, the motion of the node is checked to see whether it has penetrated a surface by determining
whether it has crossed a segment.
Because there can be a large number of nodes and segments, efficient algorithms have been developed to expedite this
process. A bounding box algorithm is used so that it is quickly determined whether a node is near a segment. If the node
falls within the bounding box, more sophisticated techniques are used to determine the exact status of the node.
During the contact process, it is unlikely that a node exactly contacts the surface. For this reason, a contact tolerance is
associated with each surface.
The contact distance is used to determine the how geometrically close a node needs to be to a segment. This is called the
contact tolerance or the ERROR  distance. s2s Touching Contactmax SPC FORCE
sum LOAD =1.00E+05max GPFORCE
BALANCE
LINCNT=0 1.21E+02 3.36E+00
LINCNT=1 1.45E-08 2.64E-09
PrimaryBodySecondaryBodyContact
Contact&lt;/p&gt;
&lt;p&gt;329 Chapter 9: Contact
Contact Detection
Main Index
By default, a node slides off the boundary of a deformable body at a sharp corner if the distance is greater than the contact
tolerance, the contact between the node and the contacted body is lost. An example is two cubes which are slightly
misaligned, where 99+% of the surface is in contact, but the node is not in contact. By invoking the delayed sliding off
option, the tangential contact tolerance is increased by a factor of 10. Note this dilemma does not occur with segment-to-
segment contact.
Patran Interface
The contact tolerance can be specified either on a global basis or on a contact pair basis. The GUI interface is shown as
follows:&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection330
Main Index
While the default values may be used successfully for most problems, if one has inside knowledge than it is much better to
utilize this on a contact pair basis. A good compromise is use the defaults based upon each contact pair. It will then use the
smaller value associated with each pair, by activating BCPARA ERRBAS=1 . This is the recommended procedure.
It is very useful to know what the program is using for contact tolerances. This can be obtained by using the case control
command NLOPRM NLDBG=N3DBAS .
When using Contact Table  or Contact Pair , one can obtain additional information regarding the contact tolerance using
the case control command NLOPRM NLDBG=N3DMED .&lt;/p&gt;
&lt;p&gt;331 Chapter 9: Contact
Contact Detection
Main Index
Similar diagnostics can be obtained for the sliding tolerance distance.
Figure 9-16  Contact Tolerance
If a node is within the contact tolerance, it is considered to be in contact with the segment. The contact tolerance is
calculated by the program as the smaller of 5% of the smallest element side or 25% of the smallest (beam or shell) element
thickness. It is also possible for you to define the contact tolerance through the input.
During an increment, if node A moves from A(t) to A(trial )(t + t), where A(trial )(t + t) is beyond the contact tolerance,
the node is considered to have penetrated. In such a case, either the increment is divided into subincrements or the
increment is reduced in size.
Figure 9-17  Trial Displacement with Penetration
2 x Tolerance
A(t)
Atrial (t + Dt)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection332
Main Index
The size of the contact tolerance has a significant impact on the computational costs and the accuracy of the solution. If
the contact tolerance is too small, detection of contact is difficult, leading to higher costs. Also many nodes are more likely
to be considered penetrating leading to reduction of the time step; therefore, increasing the computational costs. If the
contact tolerance is too large, nodes are considered in contact prematurely, resulting in a loss of accuracy. Furthermore,
nodes might “penetrate” the surface by a large amount.
An effective compromise is to bias the tolerance area so that a smaller distance is on the outside surface than on the inside
surface. This is done by entering a bias factor. The bias factor should have a value between 0.0 and 1.0. The default in SOL
400 is 0.9. This results in good accuracy and reasonable computational costs. In analyses involving frictional contact, a bias
(recommended value: 0.95 - 0.99) to the contact core is also found beneficial to facilitate convergence. When using glued
contact, the default value is 0.0.
In some instances, you might wish to influence the decision regarding the deformable segment a node contacts (or does not
contact). This can be done using the EXCLUDE  variable on the BCBODY  bulk data entry.
Figure 9-18  Biased Contact Tolerance
Shell Contact
A node on a shell makes contact when the position of the node plus or minus half the thickness projected with the normal
comes into contact with another segment. In 2-D, this can be shown as:
x1 = A + nt /2
x2 = A - nt /2(1 - Bias)* tolerance
(1 + Bias)* tolerance&lt;/p&gt;
&lt;p&gt;333 Chapter 9: Contact
Contact Detection
Main Index
Figure 9-19  Default Shell Contact
If point x or y falls within the contact tolerance distance of segment S, node A is considered in contact with the segment S.
Here x1 and x2 are the position vectors of a point on the surfaces 1 and 2 on the shell, A is the position vector of a point
(node in a discretized model) on the midsurface of the shell, n is the normal to the midsurface, and t is the shell thickness.
As the shell has finite thickness, the node (depending on the direction of motion) can physically contact either the top
surface, bottom surface, or mathematically contact can be based upon the midsurface. You can control whether detection
occurs with either both surfaces, the top surface, the bottom surface, or the middle surface. In such cases, either two or one
segment will be created at the appropriate physical location. Note that these segments will be dependent, not only on the
motion of the shell, but also the current shell thickness.
S1, S2 are segments associated with shell consisting of node 1 and 2.
Figure 9-20  Selective Shell Contactxx
2x tolerance AS
Shell
Midsurface
t1
2
n
12S1
S2
1n
2S1
S22
1n
1S1
2Include Both Segments Top Segment Only
Bottom Segments Only Ignore Shell Thickness&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection334
Main Index
For PCOMP/G, Z0 is the distance from the reference plane to the bottom surface. The default value of Z0 is -0.5 times
element thickness (t). For contact analysis with PCOMP/G, Z0 can be used to define the offset plane. ZOFFS value in
CQUAD4, CTRIA3, etc., is another option to define the offset in PCOMP/G. The offset using Z0 is explained below with
two cases.
Case 1
With Z0 = -t/2 (default), the offset plane is at a distance, (Z0+t/2) =0, from the reference plane. So, the offset plane and
reference plane coincide. The top and bottom faces are at distance +t/2 and -t/2 from the reference plane, respectively.
Case 2
With Z0 ≠ -t/2, the offset plane is at a distance (Z0+t/2) from the reference plane along with the Z-axis of the element
coordinate system. The top and bottom faces are at distance +t/2 and -t/2 from the offset plane.
Contact Tolerance Distance
In each step, it is checked whether a (new) node is in contact with other surfaces. This is determined by the distance between
the nodes and the surfaces. Since the distance is a calculated number, there are always round-off errors involved. Therefore,
a contact tolerance is provided such that if the distance calculated is below this tolerance, a node is considered in contact.
A too large value means that a high number of body nodes are considered to be in contact with the surface and are
consequently all moved to the surface, which can be unrealistic in some applications. A too small value of this number
means that the applied deformation increment is split into a high number of increments, thus increasing the cost of
computation.
The tolerance must be provided by the analyst or can be calculated by the program. In general, the contact tolerance should
be a small number compared to the geometrical features of the configuration being analyzed. The value calculated by the
program is determined as 1/20 of the smallest element size of all elements in any contact body or 1/4 of the smallest
thickness of all shell or beam elements in any contact body, whichever is the smallest. Note that for a continuum element&lt;/p&gt;
&lt;p&gt;335 Chapter 9: Contact
Contact Detection
Main Index
the element size is defined here as the smallest edge of the surrounding rectangle (2-D) or box (3 -D), set up in the global
coordinate system, while for a shell element it is the smallest element edge and for a beam element it is the element length.
The variable ERROR  on the BCPARA  or BCONPRG  bulk data entry determines the tolerance for contact. A too small
tolerance might provoke too many increment splits. A too coarse tolerance produces unrealistic behavior. If left blank, the
code calculates ERROR  as the smallest nonzero element dimension divided by 20 or the shell thickness divided by 4. If there
are splines in surface definitions, a value should be entered.
Interference Fit
This feature can be used to simulate situations where bodies with overlaps or gaps in the geometry are required to fit
together. Some examples of interference fit usage include spur gears that are mounted tightly on a shaft, couplings, collar
rings, tire mounted on wheel rim, bearing bushings in hubs, valve seats, rubber seals, bushings made of synthetic resin
pressed material, etc.
The interference fit capability is treated in MSC Nastran using the contact algorithm. The penetration associated with
interference fit can be much larger compared to any contact analysis. Ideally, interference fit computations are performed
in a separate load case, which might take more than a one increment. The user can control the number of increments or
time required to accomplish the fit. The user is equipped with many methods which can be adopted depending on the
geometry.
There are four methods available in MSC Nastran for the interference fit option. These are applicable to both Node-to-
Segment Contact (N2S) and Segment-to-Segment Contact (S2S). These methods are as follows:
1.Contact normal
2.Translation
3.Scaling
4.Automatic
1.Contact Normal
This method is generally recommended for situations with small values of interference to be resolved along the
normal direction to the touched interface. The other methods are more suitable when the interference is large.
In this case, the nodes (N2S) or auxiliary points (S2S)of the touching body are projected in a direction normal to
the segments of the touched body. The individual touching entities are positioned at a certain distance (over-closure
or gap) from the touched surface along the normal of the touched surface. The user needs to provide this
interference distance which signifies the maximum overlap or gap between the bodies. This provided value is
specified as a negative value for an overlap and as a positive value for a gap. The detection algorithm works as follows:
(Overlap/Gap + Interference) at a node (N2S) or auxiliary point (S2S) &amp;lt; D (1+B) on the inside or &amp;lt; D (1-B) on the
outside
Where D = regular distance tolerance and B = bias factor.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection336
Main Index
To control the number of increments or time during which the interference fit is achieved, the user can optionally
specify a table in which the magnitude of interference distance is ramped down from the possible maximum value
of interference to zero. Additionally, the user can specify the “project stress-free” option to correct the existing
geometry to make the interference uniform across all the touching nodes. Using this option, interference can be
gradually resolved as shown in Figure 9-21.
Figure 9-21  Gradual Resolution of Interference
Methods 2 to 4 are more general and allow larger amounts of interference (overlap or gap) between the touching and
touched bodies. The general scheme for these methods is to internally compute an initial shift vector between the nodes of
the touching body and the segments of the touched body. This initial vector is also referred to as a “pseudo displacement
vector”. The following points should be noted about the pseudo displacement vector:
The magnitude of the pseudo movement is varied based on a table provided by the user, which is normally a ramp
down table from unity to zero over the loadcase. Note that the projection of the touching entity to a touched
segment is done for each iteration but the position of the touching entity is always based on a scaling of the pseudo
displacement vector computed at the start of the loadcase. Therefore, large rotations of the interfering bodies
should not be permitted during the interference loadcase.
The treatment of the interference across two successive loadcases should be noted. Note that the interference can
be specified for any loadcase, though normally, it is specified at the start of the analysis.
Each interference method provides a different scheme for the computation of this pseudo vector.&lt;/p&gt;
&lt;p&gt;337 Chapter 9: Contact
Contact Detection
Main Index
2.Translation
In this method, for each interfering body pair in the contact table, the user specifies the following:
•Magnitude of the vector
•Direction cosines of the vector
•The coordinate system in which the direction cosines are specified (default is the global Cartesian system)
•The body to which to apply the interference vector and
•A table specifying the variation of the interference vector during the loadcase
The algorithm performs an initial pseudo movement of the interfering body along the direction specified by the
user such that the overclosure is removed. This is followed by a removal of the pseudo movement such that the
interference fit is achieved. This method is especially useful for large initial over-closure between contacting bodies
in a specific direction.
3.Scaling
In this method, for each interfering body pair in the contact table, the user specifies the following:
•Position of the Centroid about which the scaling is to occur
•X, Y and Z Scaling Factors
•The coordinate system in which the scaling should occur (default is the global Cartesian system)
•The body to which to apply the interference vector and
•A table specifying the variation of the interference resolution during the loadcase
The pseudo adjustment is done by scaling one of the bodies such that the overlap is removed. The rest of the
algorithm is similar to that of the “Translation” option.
4.Automatic
In this method, for each interfering body pair in the contact table, the user specifies the following:
•A penetration tolerance
•The body to which to apply the interference vector and
•A table specifying the variation of the interference resolution during the loadcase
The overlap distance vectors are found between the nodes of the overlapping body (specified by the user) into the
other body. The penetration tolerance should be a little more than the highest penetration between contact body
pair. Nodes within this tolerance are considered for the interference calculation. The pseudo displacement vector at
each node is established by taking the perpendicular distance between the node and the closest touched segment.
The rest of the algorithm is similar to that of the “Translation” option. The following additional points should be
noted for the AUTOMATIC method:
•In single sided contact, touching body has to be selected as the interfering body.
•In general, use of analytical boundary description for the touched body is recommended while using this
method.
•For shell contact bodies, user needs to specify the top or bottom surface for detecting contact.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection338
Main Index
Limitations of Interference Fit
Cannot be used for self contact.
Cannot be used with beam-to-beam contact.
In Methods 2 to 4, large rotations should not be present during the interference loadcase.
Interference is not supported for non-mechanical analyses.
Clearance
Note that if a clearance or overlap needs to be maintained for the entire job, then the interference value needs to be
maintained as a constant value in all the loadcases of the job. This method may not perform adequately when the
interference distance is large – in this case, the touching entities may find multiple touched segments within the given
closures distance.
Neighbor Relations
When a node is in contact with a rigid surface, it tends to slide from one segment to another. In 2-D, the segments are
always continuous and so are the segment numbers. Hence, a node in contact with segment n slides to segment n-1 or to
segment n+1. This simplifies the implementation of contact.
Figure 9-22  Neighbor Relationship (2-D)
In 3-D, the segments are often discontinuous. This can be due to the subdivision of matching surfaces or, more likely, the
CAD definition of the under lying surface geometry.n - 1
n n + 1&lt;/p&gt;
&lt;p&gt;339 Chapter 9: Contact
Contact Detection
Main Index
Figure 9-23  Neighbor Relationship (3-D)
Continuous surface geometry is highly advantageous as a node can slide from one segment to the next with no interference
(assuming the corner conditions are satisfied). Discontinuous surface geometry results in additional operations when a node
slides off a patch and cannot find an adjacent segment. Hence, it is advantageous to use geometry clean-up tools to eliminate
small sliver surfaces and make the surfaces both physically continuous and topologically contiguous.
Shell Edge Contact
Shell edges may either come into contact with other shell edges or with either shell faces or solid faces.
As an example, two shell meshes are connected edge-to-edge. The contact bodies are located in the same plane with the
same thickness.  The large plate (yellow), coarse mesh is body 1, the small plate (green), fine mesh is body 2.Nonmatching&lt;br&gt;
Segments
Continuous Surface Segments Discontinuous Surface Geometry
Shell Edge-to-Face&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection340
Main Index
Shell Thickness Display&lt;/p&gt;
&lt;p&gt;341 Chapter 9: Contact
Contact Detection
Main Index
Notice the checking order is flipped so fine mesh will contact coarse mesh.
Options (COPTS/COPTIM)  provides advanced options for shell edge contact.
Turn on moment carrying capability to enable the glued joint to transfer moments .
The resultant MSC Nastran file looks like:&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Detection342
Main Index
Shell Edge-to-Face Contact
MSC Nastran has a rigid element called RSSCON  that was designed for forming a connection between a shell and a solid.
The capabilities available through Contact  are substantially more powerful as they can be used for large displacement/large
rotation problems and may also be used for shell-to-shell connections.
When using this configuration, the contacting body ( secondary)  should be the one containing the shell edge.
T o model these problems, turn on moment carrying glue. When using the node-to-segment approach, turn on Ignore
Thickness . When using segment-to-segment, leave on the thickness.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P19</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_019/</guid>
      <description>
        
        
        &lt;p&gt;343 Chapter 9: Contact
Contact Detection
Main Index
For the case of shell node at t/2 away, no special modeling technique is required. Contact is found between the nodes on
the edge and the fact that it is t/2 off the primary s urface. Recall that shell offsets are also taken into consideration.&lt;/p&gt;
&lt;p&gt;For the case where the mesh is such that one edge is in geometric contact with the midplane of the other face, then one
must ignore the shell thickness. Note, which this is common engineering practice, it is not actually the best practice.&lt;/p&gt;
&lt;p&gt;The challenge with edge to face contact is in the case where the secondary s hell is thick and the elements on the elements
on the primary s urface are smaller than the shell thickness. In this case, the moment carrying connection is not correct using
the node-to-segment technique. The Segment-to-Segment technique must be used.
As an example of this, consider the thick beam (shown as follows) where the left is modeled with tetrahedral elements and
the right with shell elements, where the thickness is the same as the left. Using the node-to segment approach, the
constraints would be between the nodes on the edge of the shell and only the nodes on the faces that it contacts. While with
segment-to-segment contact, the constraint would be between all nodes on the tetrahedral surface and the shell nodes, and
the moment transfer would be correct as illustrated in the following figure.
Because of the restrictions on multipoint constraints and the fact that there is only one node through the thickness using
node-to-segment, contact is not possible with this self-contacting spring shown below. This is achievable using segment-to-
segment contact.
Contact Status using Segment-to-Segment Method&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Separation344
Main Index
Yellow indicating areas of contact using segment-to-segment method.
Separation
After a node comes into contact with a surface, it is possible for it to separate in a subsequent iteration or increment.
Mathematically, a node should separate when the reaction force between the node and surface becomes tensile or positive.
Physically, you could consider that a node should separate when the tensile force or normal stress exceeds the surface
tension. Rather than use an exact mathematical definition, you can enter the force or stress required to cause separation.
Tolerance on Nodal Reaction Force or Nodal Stress Before Separation Occurs
This number should theoretically be zero. However, because a small positive reaction might be due only to errors in
equilibrium, this threshold value avoids unnecessary separations. A too small value of this force results in alternating
separation and contact between the node and the surface. A too large value, of course, results in unrealistic contact behavior
because of artificial sticking.
In many analysis, contact occurs but the contact forces are small; for example, laying a piece of paper on a desk. Because of
the finite element procedure, this could result in numerical chattering. SOL 400 has some additional contact control
parameters that can be used to minimize this problem. When using the NTS method, a separation results in additional
iterations (which leads to higher costs), the appropriate choice of parameters can be very beneficial.
Separation Method  – Indicates the method to control the separation between bodies, in particular if it is force or stress
controlled and whether it is based upon absolute or relative testing. This is the IBSEP  flag on the BCPARA  bulk data entry.
In the case of STS contact, only stress based separation is allowed based upon an absolute stress testing. Hence, it is critical
that if a value of FNTOL  is entered, it refers to a stress value. Simply taking an existing NTS input file and changing to STS
contact without adjusting the separation value if this refers to a force will result in different behavior and potentially a
significant increase in computational cost.
Separation Threshold  – Indicates either the magnitude of the stress or forces or the relative magnitude of the stress or force
to cause separation. The value of FNTOL  can be entered either on the BCPARA  or BCTABLE  bulk data entry and is tied
to the value of IBSEP . For the case of STS contact where an absolute value of stress is required, for metals using 1% of the
yield stress is often appropriate.&lt;/p&gt;
&lt;p&gt;345 Chapter 9: Contact
Separation
Main Index
During each load increment, separations can occur. You can control the maximum number of nodal separations allowed in
each increment to reduce computational costs.
Separation controlled using the BCPARA /IBSEP:
0 – separation if the contact pulling force exceeds FNTOL  (input in BCPARA , BCTABLE , or BCONPRP .
Default: maximum residual force in the complete model).
1 – separation if the contact pulling fake stress (pulling force divided by its nodal area) exceeds FNTOL  (default:
0.1 times of the maximum nominal contact pushing stress of any node of any contact body) .
2 – separation if the contact pulling stress (from extrapolating and averaging integration point values) exceeds
FNTOL  (Default: 0.1 times of the maximum nodal pushing stress of any node of any contact body) .
3 – separation if the contact pulling fake stress exceeds FNTOL  (default=0.1) times the maximum contact stress in
the model.
4 – separation if the contact pulling stress exceeds FNTOL  (default=0.1) times the maximum contact stress in the
model.
For higher-order elements given a stress distribution on a face, the effective force is shown below. This leads to problems
when using a force-based separation criteria. For these elements, a stress-based criteria must be used.
MSC Nastran calculates this value as the maximum residual force in the structure. Note that the maximum residual force
can be specified in the BCPARA  bulk data entry. Default for this value, a 10 percent of the maximum reaction force is used.
Consequently, if locally high reaction forces at a particular point are present, the separation force is large as well. In most
cases, however, the default value is a good measure.
If you indicate that separation is to be based upon stresses, a value of the separation stress should be entered. The default
value is the maximum residual force at a node divided by the contact area of node n.
For NTS contact, a zero value of the absolute separation stress can increase the computational effort considerably, for STS
contact this is not the case.Note:   For quadratic contact, only options 2 or 4 should be used.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Separation346
Main Index
Equilibrium  – When contact occurs, a reaction force associated with the node in contact balances the internal stress of the
elements adjacent to this node. When separation occurs, this reaction force behaves as a residual force (as the force on a free
node should be zero). This requires that the internal stresses in the deformable body be redistributed. Depending on the
magnitude of the force, this might require several iterations.
There are two schemes available for the nodal separation check in node-to-segment contact:
1.Default check : By default, nodes are checked for separation only after satisfying all specified convergence criteria.
For example, suppose the user has flagged residual checking and displacement checking. In that case, nodal
separation is checked only after residuals and displacements have converged.
2.Accelerated check : For the accelerated check, all specified convergence criteria need not be satisfied before checking
for separation. Separation is checked when the maximum residual force drops to less than 10% of the maximum
reaction force in the model. If there is separation, the iteration number is reset to 1 and the increment is continued
with new contact constraints. If there is no separation, iterations are continued till all specified convergence criteria
are satisfied. In general, the accelerated check can reduce the total number of iterations without impacting the
accuracy of the results significantly.
You should note that in static analysis, if a deformable body is constrained only by other bodies (no explicit boundary
conditions) and the body subsequently separates from all other bodies, it would then have rigid body motion. For static
analysis, this would result in a singular or nonpositive definite system. This problem can be avoided by appropriate
boundary conditions.
Release
A special case of separation is the intentional release of all nodes from a rigid body. This is often used in manufacturing
analysis to simulate the removal of the workpiece from the tools. After the release occurs in such an analysis, there might
be a large redistribution of the loads. It is possible to gradually reduce the residual force to zero, which improves the stability,
and reduces the number of iterations required. The BCMOVE  bulk data entry allows the release (separation) of all the
nodes in contact with a particular surface at the beginning of the increment. The rigid body should be moved away using
the BCMOVE  bulk data entry or deactivated using the BCTABLE  entry to ensure that the nodes do not inadvertently
recontact the surface they were released from.
Defining Separation in Patran
On the Contact Control Parameters  subform, select Separation&amp;hellip; . This form controls general contact parameters for
contact separation.&lt;/p&gt;
&lt;p&gt;347 Chapter 9: Contact
Separation
Main Index
As a demonstration of separation based upon forces, see Cup Forming Simulation  in the MSC Nastran Demonstration Problems
Manual - Implicit Nonlinear .
As a demonstration of separation based upon stresses, see Friction Between Belt and Pulley  in the MSC Nastran Demonstration
Problems Manual - Implicit Nonlinear.Maximum Separations Maximum number of separations allowed in each increment. Default is 9999.
Retain Value on NCYCLE Turn ON this button if you do not want to reset NCYCLE  to zero when separation
occurs. This speeds up the solution, but might result in instabilities. You can not set this
and Suppress Bounding Box simultaneously.
Increment Specifies whether chattering is allowed or not.
Chattering Specifies the separation criterion (forces or stresses) and the critical value at which the
separation will take place.
Separation Criterion Specifies in which increment (current or next) the separation is allowed to occur.
Force Value
Stress ValueSpecifies the force or separation for which separation occurs.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Delayed Slide Off348
Main Index
Delayed Slide Off
When using node-to-segment, a node separates if the node goes around a sharp corner . Sliding off a sharp corner may lead
to convergence problems or undesired solutions . Delayed slide off option increases the size of the contact patches at
corners/edges.  As shown in the following figure, the node separates when it reaches a valued  that is equal to the error
tolerance. Using delayed slide off, one defines the value et, and the node will not separate until this value is reached. This
useful to ensure initial contact as typically found in assembly modeling problems.
Friction
Friction is a complex physical phenomena that involves the characteristics of the surface such as surface roughness,
temperature, normal stress, and relative velocity. The actual physics of friction continues to be a topic of research. Hence,
the numerical modeling of the friction has been simplified to the following idealistic models. &lt;/p&gt;
&lt;p&gt;349 Chapter 9: Contact
Friction
Main Index
The most popular friction model is the Adhesive Friction or Coulomb Friction model. This model is used for most
applications with the exception of bulk forming such as forging. The Coulomb model is:
fr ≤ -nt
where
vr is the relative sliding velocity.
The Coulomb model is also often written with respect to forces
ft ≤ -fnt
where
Quite often in contact problems neutral lines develop. This means that along a contact surface, the material flows in one
direction in part of the surface and in the opposite direction in another part of the surface. Such neutral lines are, in general,
not known a priori.
For a given normal stress, the friction stress has a step function behavior based upon the value of vr oru.Friction Type
(FTYPE) Description
0 No friction
6 Bilinear Coulomb
7 Bilinear Shear
n is the normal stress
fr is the tangential (friction) stress
 is the friction coefficient
t is the tangential vector in the direction of the relative velocity
ft is the tangential force
fnis the normal reactiontvr
vr&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Friction350
Main Index
Figure 9-24  Coulomb Friction Model
Bilinear Friction Models
In SOL 101 and SOL 400, bilinear Coulomb (see BCPARA  entry, FTYPE = 6 ) or bilinear shear (see BCPARA  bulk data
entry, FTYPE = 7 ) friction is available. Bilinear shear is usually used for forging processes. Bilinear Coulomb is used for
most friction applications.
Currently, quadratic (8-noded) shell elements are not recommended for use with contact.
Bilinear Coulomb friction is based on relative tangential displacements. The model assumes that the stick and slip
conditions correspond to reversible (elastic) and permanent (plastic) relative displacements. The model defines a slip surface&lt;br&gt;
defined as:
where  is the tangential force and  fn is the normal force.  is the friction coefficient (See BCTABLE  or BCBDPRP  bulk
data entry field FRIC ). Stick is given by .
The rate of relative tangential displacement is split into elastic and plastic contributions according to:
and the rate of change of friction force vector is related to the elastic tangential displacement by:
where the matrix D is given by:vrft or fr
Stick
Slip
 ft=fn–
ft
u·
tu·
te
= u·
tp
+
f·
tDu·e
t =&lt;/p&gt;
&lt;p&gt;351 Chapter 9: Contact
Friction
Main Index
where  is the slip threshold below which sticking is simulated. The algorithm determines  as 0.0025 times the average
edge length of the elements defining the deformable contact bodies.
The physically impossible case where , implies that the plastic or slip contribution must be determined.
The determining relationship is:
The bilinear Coulomb model then assumes a slip flow potential  given by  and further assumes that the
direction of the slip displacement rate is given by the normal to the slip flow potential. Note that this is similar to a
nonassociative rule, as and  are different functions.
The bilinear Coulomb model then defines:
where  is the slip displacement rate. Also, since the friction force must always lie on the slip surface:
Combining the preceding two equations the slip displacement rate is determined as:
The rate of change of friction force vector then becomes:Dfn
&amp;mdash;&amp;mdash;&amp;ndash;0
0fn
&amp;mdash;&amp;mdash;&amp;ndash;=
ft·
Dut·
ut·p
–=
 ft=
u·p
t·
ft&amp;mdash;&amp;mdash;&amp;ndash; =
·
·
ft&amp;mdash;&amp;mdash;T
f·
t0 = =
·
ft&amp;mdash;&amp;mdash;T
Du·
t

ft&amp;mdash;&amp;mdash;T
D
ft&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Friction352
Main Index
The bilinear Coulomb model also uses the check on convergence to determine if convergence is achieved when
where Ft is the current total friction force vector and  is the total friction force vector from the previous iteration.&lt;br&gt;
e is the friction force tolerance, which has a value of 0.05.
The bilinear Coulomb model may not correlate well with experiment if the frictional tractions exceed the flow stress or the
stress of the material. If this occurs, you can modify the frictional stress limit (see BCTABLE  entry field FRLIM ). In the
case of the frictional stress limit  if the surface traction reaches the limit value, the applied friction force is reduced,
so that the maximum shear traction is given by . You may also switch to the bilinear shear friction
model.
The bilinear shear friction model states that the frictional stress is a fraction of the equivalent stress  in the material:
for stick and  for slip
where  is the surface tangent vector.  is the friction coefficient (See BCTABLE  entry field FRIC ). t is computed by:
While numerically there are differences in the implementation of N2S and S2S for modeling friction, the user input
associated with N2S is also used for S2S. The friction types for both methods are:
The coefficient of friction ( FRIC  on the BCTABLE  or BCBDPRP  bulk data entry) has the same meaning.
The distance below which sticking occurs ( RVCNST  entered on the BCPARA  bulk data) is ignored.
The STS procedure allows a non-symmetric formulation to be used, which is activated by setting SEGSYM  to 1 on the
BCPARA  bulk data . While this may reduce the number of iterations, it may increase the amount of memory to store the
global stiffness matrix and for factorization.f·
t DD
ft&amp;mdash;&amp;mdash;&amp;ndash;
ft&amp;mdash;&amp;mdash;T
D

ft&amp;mdash;&amp;mdash;T
D
ft&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –
      
u·
t DD–u·
t = =
FtFtprevious–
Ft&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;e
Ftprevious
tlimit
minntlimit 

t
3&amp;mdash;&amp;mdash;- t
3&amp;mdash;&amp;mdash;- –= t
t 
tminn
3&amp;mdash;&amp;mdash;-  =&lt;/p&gt;
&lt;p&gt;353 Chapter 9: Contact
Friction
Main Index
Friction User Subroutine
Recalling that friction is a complex physical phenomena, due to variations in surface conditions, lubricant distribution, and
lubricant behavior, relative sliding, temperature, geometry, and so on.
The above two friction models may be extend, if necessary, by means of the UFRIC  user subroutine. In such a routine, you
provide the friction coefficient or the friction factor as
x, fn, T, vr,y
or
mmx, fn, T, vry
Friction Parameters
On the Contact Control Parameters  subform, select Friction Parameters&amp;hellip; . x position of the point at which friction is being calculated
fn normal force at the point at which friction is being calculated
T temperature at the point at which friction is being calculated
vrrelative sliding velocity between point at which friction is being calculated and surface
yflow stress of the material
Type Available options for friction Type are: None  (default), Shear  (for metal forming),
Coulomb  (for normal contact – default), Shear for Rolling , Coulomb for Rolling ,
Stick-Slip .
Note: Unless this pulldown is changed from None , no friction will be active.
Method For Coulomb type of friction models, there are two methods for computing friction:
Nodal Stress  (by default), Nodal Forces .&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Friction354
Main Index
For a demonstration of the use of friction, see 3-D Loaded Pin with Friction  (Ch. 4), Bilinear Friction Model: Sliding Wedge  (Ch. 6)
and Friction Between Belt and Pulley  (Ch. 21) in the MSC Nastran Demonstration Problem Manual.Relative Sliding Velocity Critical value for sliding velocity below which surfaces will be simulated as sticking.
Transition Region Slip-to-Stick transition region.
Multiplier to Friction
CoefficientFriction coefficient multiplier.
Friction Force Tolerance Friction Force Tolerance.&lt;/p&gt;
&lt;p&gt;355 Chapter 9: Contact
Dynamic Impact
Main Index
Dynamic Impact
The automatic contact procedure can also be used in dynamic analyses to model impact problems. High frequency
vibration or impact where wave propagation is important should use SOL 700.
The Newmark-beta/General-alpha procedure combined with NLSTEP  have the capability to allow variable time steps and,
when using the user-defined fixed time step procedure, the time step is split by the algorithm to satisfy the contact
conditions.
When a node contacts a rigid surface, it is given the velocity and acceleration of the rigid surface in the normal direction.
The rigid surfaces are treated as if they have infinite mass, hence, infinite momentum.
A dynamic penetration cutback scheme has been implemented. The default iterative penetration scheme that is used for
statics does not work well for dynamics since high-frequency oscillations are excited by this process. Instead, a time step
cutback is triggered when dynamic penetration is detected. The increment is repeated with a smaller time step. This time
step tc is defined by the penetration algorithm as a factor of the original time step to. The scheme is depicted in
Figure 9-25:
Figure 9-25  Cutback scheme implemented for Dynamic Penetration
Multiple penetrations are possible in a single increment. After the penetration cutbacks, time step for the subsequent
increment is restored to the pre-penetration time step. The penetration cutback is indicated in the .f06  file by
*** USER INFORMATION MESSAGE 4550 (nl3con)
*** TIME-STEP REDUCTION IS ACTIVATED BY DYNAMIC  PENETRATION.
The limitations of the dynamic contact enhancements are as follows:
a.The Generalized-alpha scheme with zero spectral radius is a damped operator. The accuracy of the operator is
a function of the time steps used. Large time steps can cause frequency ranges of interest also to be damped out.
A general recommendation would be to use time steps about 2 to 5% of the dominant period of the system. to tc&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Accuracy356
Main Index
b.There is no special code to deal with momentum/energy conservation for impact problems. While the
elimination of high-frequency content through the mechanisms described previously and satisfaction of the
dynamic equilibrium equations given in (1) generally suffices for most contact/impact problems, it may not
suffice for systems where large amounts of energy conversion (kinetic energy to strain energy and vice versa)
occur during the contact process.
In dynamic analysis, the requirement of energy conservation is supplemented with the requirement of momentum
conservation. In addition to the constraints placed upon the displacements, additional constraints are placed on the velocity
and acceleration of the nodal points in contact, except for the Generalized Alpha method. As mentioned in the section
Implementation of Constraints in Node-to-Segment , small gaps or overlaps in the contact area are not instantaneously closed for
these time integration methods, as this may introduce undesired inertia effects. In particular, for contact problems involving
large sliding along curved contact surfaces, not correcting for such gaps or overlaps can result in growing gaps or overlaps.
For this reason, the dynamic contact projection factor (DYNPRFA on BCPARA) has been introduced, representing the
fraction of the gap or overlap to be corrected per iteration. If its value is 0, no correction is applied. If its value is 1, the full
correction is applied, i.e., the gap or overlap is closed instantaneously
As a demonstration of dynamic impact, see Dynamic Impact of a Rigid Sphere on a Woven Fabric  (Ch. 29) in the MSC Nastran
Demonstration Problem Manual .
Accuracy
While both the node-to-segment and segment-to-segment approach can give an accurate solution, the node to segment
technique relies on a discrete numerical implementation while the segment-to-segment approach uses a continuous
approach. In the first example of bolt tightening, the control zone is distributed over a larger and smoother area. As a force
is applied to the bolt, the consequences will be that the contact stresses are lower.
Bolted connection
In the second example, a beam is divided into two regions with different numbers of elements through the thickness. This
demonstrates using contact to connect two dissimilar meshes. One first observes that the displacements are virtually
identical. But when one observes the stresses along the interface, the segment-to-segment provides a continuous
distribution.
Bolted Connection Node-to-Segment Contact Region Segment-to-Segment Contact Region&lt;/p&gt;
&lt;p&gt;357 Chapter 9: Contact
Accuracy
Main Index
Classical bending problem
Displacements agree, note discontinuous mesh – glued connection
The third  problem shows an interference fit between two concentric disks with different mesh discretization. As seen, the
segment-to-segment approach provides a smoother stress distribution.
Node-to-Segment Segment-to-Segment
Node-to-Segment – Discontinuous Stress Segment-to-Segment – Continuous Stress&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Accuracy358
Main Index
Node-to-Segment Segment-to-Segment – Notice Stress Continuity&lt;/p&gt;
&lt;p&gt;359 Chapter 9: Contact
Thermal Contact
Main Index
Thermal Contact
In thermal contact, a distinction is made between hard contact glued, hard contact convective and near contact. Hard
contact glued means that two bodies contact each other mechanically and the temperature fields on both sides of the
interface must be made identical. Hard contact convective means that two bodies contact each other mechanically, but the
heat flow between the two sides of the interface is through some hypothetical medium, so the temperatures on both sides
do not have to be identical. The heat flow through this hypothetical medium is controlled by a one-dimensional linear heat
flow law. Near contact means that two bodies are not in contact mechanically, but are close enough to exchange heat. The
heat flow between the two interfaces is controlled by a linear or nonlinear one-dimensional heat flow law, so it is assumed
that the bodies are already relatively close to each other as compared to their sizes.
Two types of bodies are considered in a thermal contact analysis, meshed bodies, and rigid bodies. Meshed bodies are
defined by finite elements and can conduct heat, so they can have a nonuniform temperature distribution. Meshed bodies
can also exchange heat with an environment in regions that are not contacting other bodies. Various convective heat transfer
laws are possible. Rigid bodies are defined by geometrical entities and have a constant temperature everywhere. Rigid bodies
can have a heat capacity, in which case they can exchange heat with meshed bodies or they have a prescribed temperature,
so they act as a heat source when contacted by meshed bodies.
When a meshed body contacts another meshed body, the grids of the secondary ( or touching) body touch entities of a
primary ( or touched) body. These entities are element edges in two-dimensional analysis, like plane strain or axisymmetric
analysis or they are element faces in three-dimensional analysis. In either case each constraint relation controlling the heat
transfer is between one secondary g rid and a set of primary g rids of the touched entity. When a meshed body contacts a
rigid body the grids of the secondary b ody touch geometric entities of the primary b ody. These geometric entities all have
the same temperature and each constraint relation is between one secondary g rid and the rigid body having the constant
temperature.
Example of Thermal Contact of Blade into Fifteen&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermal Contact360
Main Index
In the next sections, the equations are discussed that describe the different kinds of thermal interactions when meshed
bodies contact other meshed bodies or when they contact rigid bodies.
Mesh-to-Mesh Contact
Mesh-to-Mesh Hard Contact Glued
In this case, a grid is in contact with a face of an element. If the contacting grid temperature is TA and the face grid
temperatures are , the condition is a simple linear MPC:
(9-1)
TA is the dependent grid,  are the independent grids. The weight factors i depend on the location where the TA grid
touches the face and are simply the shape function values to interpolate the temperatures inside the face.  This may be
written as
(9-2)
The MPC equation can alternatively be expressed as:
(9-3)
Mesh-to-Mesh Convective Heat Transfer (Hard or Near Contact)
In this case the heat flow between two bodies is controlled by a one-dimensional heat flow law. The heat leaving body A is:
QA = q =  h  (TA - TB (,)) (9-4)TBi
TATBiTBi
i1=N
= =
TBi
TA
TB100
01NTA
TB1
.
TBNST = =
11–N–TA
TB1
.
TBNHMPCT= T 0=&lt;/p&gt;
&lt;p&gt;361 Chapter 9: Contact
Thermal Contact
Main Index
where is the area contribution for grid A, q t he heat flow per unit area and h is the heat transfer coefficient, which may
be composed of several contributions.  The heat entering body B is QB = -QA. For each grid that is in contact with a primary
face, a conductive heat transfer element matrix gets created of the following form:
, (9-5)
where the element degrees of freedom of vector is:
This can be interpreted as a one dimensional heat link with one grid being grid A and its other grid B being on the touching
element face, so its temperature is computed from the face grid temperatures by the linear MPC equation.
The heat transfer coefficient h can have several contributions, coming from different heat flow types:
(9-6)
(9-7)
(9-8)
(9-9)
(9-10)
Equation (9-6) is just a linear heat flow law with a constant heat transfer coefficient. Equations (9-7), (9-8), and (9-9) represent
nonlinear heat flow laws, where equation (9-8) is a radiation law. Equation (9-10) allows to have a distance dependent heat
flow between the two bodies in case of near contact, where dnear is the near contact distance tolerance. When bodies are
separated by a distance larger than dnear, they are not in contact.
The total flux per unit area is the sum of these contributions:
(9-11)Kcontact= hST 11–
1–1S 
TA
TB1
.
TBN
q1h1= TATB – 
q2h2= TATB – EXPFTATB – 
q3= TA2TB2+ TATB + TATB – 
q4h4=TAEXPFTBEXPF– 
TATB – &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-TATB – 
q5h5A1d
dnear&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- –  h5Bd
dnear&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + = TATB – 
q qi
i1=5
=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermal Contact362
Main Index
For hard convective contact, only the first flux type is used. For near contact, it may be a combination of all five. All relations
are of the form:
q = h (TA ,TB (,))(TA -TB (,)) (9-12)
where the heat transfer coefficient is some nonlinear function of the body temperatures in the contact point. Note that for
the radiative condition (q3) the temperatures should always be absolute temperatures.
Mesh-to-Geometry Contact
Mesh-to-Geometry Hard Contact Glued
A grid of the meshed body is contacting a rigid surface. In this case, the grid temperature is set equal to the rigid geometry
temperature. This can be done in two ways:
as a SPCD condition: TA = TBODY
as a MPC condition: TA - TBODY  = 0
In the latter case, an extra scalar point for the rigid contact body is created, which may obtain either a prescribed
temperature or it may be loaded with an external flux. A simple MPC between this scalar point and each grid that contacts
the rigid body is created. With this extra scalar point, it is possible to associate a total heat capacity CMB (S.I. units: J/K) of
the rigid body, which simply represents a lumped heat capacity contribution to the scalar point.
Mesh-to-Geometry Convective Heat Transfer (Hard or Near Contact)
This situation is similar to the mesh-to-mesh case, but the temperature TB is the everywhere constant temperature of the
rigid geometry, TBODY . The film condition at grid A is:
QA =   h  (TA -TBODY ) (9-13)
Again two ways are distinguished as discussed in Mesh-to-Geometry Hard Contact Glued :
1.The body temperature is applied directly. In this case a concentrated conductivity matrix term:
Kcontact  =   h  TA and a load term Qcontact  =   h  TBODY  for grid A are obtained.
2.An extra scalar point is created. In this case a simple conductivity matrix arises:
(9-14)
This latter relation is similar to the one in Mesh-to-Mesh Convective Heat Transfer (Hard or Near Contact) , but now their is only one
primary d egree of freedom, which is the temperature of the scalar point associated with the rigid body.Kcontact= h11–
1–1and the element dof is: TTA
TBODY=  &lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P2</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_002/</guid>
      <description>
        
        
        &lt;p&gt;3 Chapter 1: Introduction
What’s New in SOL 400 since 2016 Release
Main Index
2018
Nonlinear CFAST/PFAST
External superelement capability
Support for automatic contact generation (ACG)
Contact model check
Output Geometry Adjustment in Initial Stress Free Contact
Output analytical Smooth Surface in Contact
Allow Real Zero BIAS in BCONPRG and BCTABLE
GPFORCE
2017
Solder creep material model
Cohesive contact
Output the resultant contact force and moment for each contact pair
THRU capability for BCTABL1 entry
2016
Support advance elements in Superelements and NLRESTART
Contact in small deformation simulations
Segment-to-segment contact enhancements
Beam contact
Interference fit
Clearance (initial gap)
Contact separation improvement
Support connector elements (CWELD/CFAST/CSEAM) in SOL 400
RC Network heat transfer analysis&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction  to MSC Nastran Implicit Nonlinear (SOL 400)4
Main Index
Introduction  to MSC Nastran Implicit Nonlinear (SOL 400)
This book is one in a series of user’s guides describing the use of MSC Nastran. The first book in the series, Getting Started
with MSC Nastran User’s Guide , is intended for those readers who are unfamiliar with the finite element method (FEM), those
who have never run MSC Nastran, or those who are interested in a general overview of MSC Nastran’s capabilities. It is
assumed that you are familiar with the material in Getting Started with MSC Nastran User’s Guide  and have MSC Nastran
available.
This manual provides a complete background to MSC Nastran Implicit Nonlinear (SOL 400) and describes using SOL
400 within the MSC Nastran environment. The theoretical aspects of nonlinear analysis methods, types, and techniques
are included as well as thorough descriptions for nonlinear material models, properties, and loads and constraints. The goal
is to provide material relevant to this subject in such a manner that this book can be used both as a learning tool and as a
reference text.
Where appropriate, Patran forms and menus are shown so you can easily use SOL 400 from the Patran pre- and
postprocessing software environment.
The contents of this manual as follows:
Introduction  (Ch. 1) discusses the FEM and shows a sample linear and nonlinear analyses. The following seven chapters will
take you through choices and formats needed for building and loading a model.
MSC Nastran Files  (Ch. 2) discusses the input and output files and file management, executive, case control, bulk data and
parameter sections of an MSC Nastran analysis input file through the use of small sample problems.
Nonlinearity and Analysis Types  (Ch. 3) discusses the main purposes of the Solution Methods and Strategies including a brief
overview of the finite element displacement method for solving linear and nonlinear structural problems in statics, a
description of the theory, techniques and algorithms specifically used in SOL 400, and outlines some guidelines for selecting
appropriate analysis methods.
Solution Strategies for Nonlinear Analysis  (Ch. 4) covers the three sources of nonlinearity: material (results from the nonlinear
relationship between stresses and strains), geometric (large deformations change the load path and thus the way the
structure carries the load), and nonlinear boundary conditions (such as contact) and describes the analysis procedures that
have been implemented in SOL 400 to accurately simulate those nonlinear behaviors. The analysis types refer to different
categories of use cases that might be modeled such as static (no changes with time), transient (loading or material response
changes with time), buckling (loading causes a loss of stability), and modal (uses the natural frequencies of the system which
may vary upon changes in loading or material response) simulations.
Computational Methods  (Ch. 5) includes numerical methods and running large models.
Setting Up, Monitoring, and Debugging the Analysis  (Ch. 6) discusses the steps required to prepare the input file for the purpose
of performing a linear or nonlinear analysis, how to submit the job, how to monitor the progress and completion of the
analysis, as well as what steps to take if you do not get the desired results solution.
Results Output from the Analysis  (Ch. 7) provides and overview of the available MSC Nastran output file formats and shows
how to specifying the appropriate output requests in the input file to obtain the desired output.
Load and Constraint Conditions  (Ch. 8) focuses on how to specify the appropriate boundary conditions for your model to
properly constrain, as well as prevent any rigid body motion, of your structure. This chapter also discusses how to load the
structure using various types of load and boundary conditions such as accelerations, pressures, forces and thermal loads.&lt;/p&gt;
&lt;p&gt;5 Chapter 1: Introduction
Hexagon  Products
Main Index
This chapter also covers symmetry and has an expanded description on how to exploit symmetry in a structure to reduce
problem size.
Contact  (Ch. 9) covers the use of 3-D contact to simulate physical reality between model components that come into contact.&lt;br&gt;
It includes standard “touching” contact, “glued” contact (relative motion is prevented), friction, and relative sliding. The
objective of contact modeling is to detect the relative motion of the bodies, apply a constraint to avoid penetration, and
apply appropriate boundary conditions to simulate the contact behavior, which may include frictional behavior and/or heat
transfer. The analysis of contact behavior is complex because of the requirement to accurately track the motion of multiple
geometric bodies, and the motion due to the interaction of these bodies after contact occurs. This includes analysis of
interference fits, rubber seals, tires, crash, and manufacturing processes among others.
Materials  (Ch. 10) begins by discussing SOL 400 support for isotropic, orthotropic and anisotropic linear and composite
materials, and then goes through nonlinear material modeling including nonlinear elastic, elasto-plastic, hypo, hyper and
visco-elastic including rate and temperature dependencies.
Element Library  (Ch. 11) discusses the MSC Nastran element library which consists of numerous elements that can be
categorized as scalar, one dimensional (1-D), two-dimensional (2-D), or three- dimensional (3-D). This includes
deformable elements as well as R-Type Constraint Elements, which are elements that impose fixed constraints between
components of motion at the grid points or scalar points to which they are connected. The last part of the chapter covers
modeling guidelines and techniques such as element choice, density and transition.
Rigid Elements, Connectors, and Multi-Point Constraints  (Ch. 12) discusses Rigid Elements, Connectors and Multi-Point
Constraints. These techniques are used to make special connections between parts of the model that model specific physical
connections such as welds, hinges, or moment-carrying joints.
Advanced Topics  (Ch. 13) discusses restarts, brake squeal analysis, and user defined services and subroutines
Interpreting the Results  (App. A) discusses the MSC Nastran output.
Hexagon  Products
Hexagon AB and/or its subsidiaries  provide an extensive array of software products that make it possible to simulate almost
any engineered component with any level of detail you require. Hexagon  is recognized as a leader in finite element analysis
software with a product list that includes MSC Nastran, Patran, Marc, SimXpert, SimManager and many others. Each of
these codes within themselves are powerful general-purpose analysis codes that can be used to solve structural, heat transfer,
and coupled thermal-structural finite element problems. When paired together and supplemented with special purpose
application modules and interfaces these software products can be tailor made to suit specific industries and engineering
problems unique to those industries.
To keep this user’s guide to a reasonable size, complete descriptions of all the MSC Nastran bulk data entries and Case
Control commands have not been included. A brief description of the input format is given for entries and commands when
it is helpful to understand the material; also in many cases the Patran interface is used to describe the input. You should
consult the MSC Nastran Quick Reference Guide (QRG)  for detailed descriptions of MSC Nastran input formats.
This guide contains many highlighted links (in blue) to other MSC Nastran documents and all the documents were
delivered together as a collection. If you keep the collection together the links between documents will work. T wo
suggestions when working with links are 1) alt &amp;lt;&amp;ndash; returns you back in the window your mouse is in and 2) you can open&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Hexagon  Products6
Main Index
the other “linked to” documents in a new window from an Adobe Reader by deselecting the checkbox Edit &amp;ndash;&amp;gt; Preferences-
&amp;ndash;&amp;gt; Documents&amp;ndash;&amp;gt;Open  cross-document links in the same window and select OK.
MSC Nastran Documentation
MSC Nastran Quick Reference Guide  (QRG)
The QRG contains a complete description of all the input entries for MSC Nastran. Within each section, entries are
organized alphabetically so they are easy to find. Each entry provides a description, formats, examples, details on options,
and general remarks.
You will find the full descriptions for all SOL 400 input entries in the QRG.
MSC Nastran Linear Static Analysis User’s Guide
The MSC Nastran Linear Static Analysis User’s Guide  provides support information on the basic use of MSC Nastran which
can also be applied to SOL 400.
MSC Nastran Dynamic Analysis User’s Guide
The MSC Nastran Dynamic Analysis User’s Guide  provides support information on the basic use of MSC Nastran which can
also be applied to SOL 400.
MSC Nastran Reference Guide
The MSC Nastran Reference Guide provides supporting information that relates to the theory of MSC Nastran inputs,
element libraries, and loads and boundary conditions.
MSC Nastran Demonstration Problems
The MSC Nastran Demonstrations Problems Manual  provides example problem and includes description of the input,
procedures, and results information that relates to the practical use of the MSC Nastran inputs, element libraries, and loads
and boundary conditions.
Below is a complete list of MSC Nastran documents.&lt;/p&gt;
&lt;p&gt;7 Chapter 1: Introduction
List of MSC Nastran Guides
Main Index
List of MSC Nastran Guides
A list of some of the MSC Nastran guides is as follows:
Installation and Release Guides
Installation and Operations Guide
Release Guide
Reference Guides
Quick Reference Guide
DMAP Programmer’s Guide
Reference Guide
Utilities Guide
Getting Started Guide
SOL 400 Getting Started Guide
MSC Nastran Error Messages Guide
Demonstration Guides
Linear Analysis
Implicit Nonlinear (SOL 400)
Explicit Nonlinear (SOL 700)
MSC Nastran Verification Guide
User’s Guides
Automated Component Modal Synthesis (ACMS)
Access Manual
Aeroelastic Analysis
Design Sensitivity and Optimization
DEMATD
Dynamic Analysis
Embedded Fatigue
Embedded Vibration Fatigue
Explicit Nonlinear (SOL 700)
High Performance Computing
Linear Static Analysis
Nonlinear (SOL 400)
Numerical Methods&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
List of MSC Nastran Guides8
Main Index
You may find any of these documents from Hexagon at:
&lt;a href=&#34;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&lt;/a&gt;Rotordynamics
Superelements and Modules
Thermal Analysis
User Defined Services&lt;/p&gt;
&lt;p&gt;9 Chapter 1: Introduction
MSC Nastran Implicit Nonlinear (SOL 400)
Main Index
Patran Documentation
Three key books from the Patran library may be of assistance in running MSC Nastran Nonlinear:
Patran User’s Guide  – this introductory guide gives you the essential information you need to immediately begin
using Patran for MSC Nastran Nonlinear projects. Understanding and using the information in this guide requires
no prior experience with CAE or finite element analysis.
Patran Reference Manual  – a counterpart to the MSC Nastran Reference Guide , this manual provides complete
descriptions of basic functions in Patran, geometry modeling, finite element modeling, material models, element
properties, loads and boundary conditions, analysis, and results.
MSC Nastran Preference Guide  – gives specific information that relates to using Patran with MSC Nastran as the
intended analysis code. All application forms and required input are tailored to MSC Nastran.
SOL 400 Training
Hexagon  provides usage training in SOL 400 using either Patran (NAS400) or SimXpert (SMX400). Contact your local
support organization. This training includes step-by-step usage of the graphical user interfaces (GUI) to drive nonlinear
simulations.
MSC Nastran Implicit Nonlinear (SOL 400)
SOL 400 is a set of application modules in the MSC Nastran system that pairs the full features of MSC Nastran with the
nonlinear capabilities of the Marc solver to analyze a wide variety of structural problems subjected to geometric and material
nonlinearity, and contact. There are two forms of this combination. The first form is used in SOL 400 where the algorithms
of Marc are embedded completely in MSC Nastran to form a completely integrated MSC Nastran solution. This is the
solution MSC recommends as the default solution for solving MSC Nastran nonlinear problems. The second method is
SOL 600 where MSC Nastran preprocesses the data and calls the Marc solver. In SOL 400, all MSC Nastran infrastructure
is available, while in SOL 600 only selected MSC Nastran infrastructure capabilities have been integrated. This is why MSC
recommends that SOL 400 be the default solution method for solving nonlinear problems. An extensive finite element
library for building your simulation model, and a set of solution procedures for the nonlinear analysis, which can handle
very large matrix equations, are available in both solution sequences of MSC Nastran Implicit Nonlinear.
Nonlinear Analysis
Linear analysis assumes a linear relationship between the load applied to a structure and the response of the structure. The
stiffness of a structure in a linear analysis depends on its initially undeformed state. Linear static problems are solved in one
step, by a single decomposition of the stiffness matrix. A number of important assumptions and limitations are inherent in
linear static analysis. Materials behavior is such that the stress is directly proportional to strain (linear) and to loads that do
not take the material beyond its permanent yield point (the material remains elastic). Linear analysis is restricted to small
displacements; otherwise, the stiffness of the structures changes and must be accounted for by regenerating the stiffness
matrix. Lastly, loads are assumed to be applied slowly as to keep the structure in equilibrium.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Capabilities10
Main Index
It becomes necessary to consider nonlinear effects in structures when modeling materials with nonlinear behavior and where
large deformations (rotations and/or strains) occur. In addition, contact problems exhibit nonlinear effects due to changes
in boundary conditions.
In a nonlinear problem, the stiffness of the structure depends on the displacement, and the response is no longer a linear
function of the load applied. As the structure displaces due to loading, the stiffness changes, and as the stiffness changes,
the structure’s response changes. As a result, nonlinear problems require incremental solution schemes that divide the
problem up into steps calculating the displacement, then updating the stiffness. Each step uses the results from the previous
step as a starting point. As a result, the stiffness matrix must be generated and decomposed many times during the analysis
adding time and costs to the analysis.
Nonlinear problems present many challenges. A nonlinear problem does not always have a unique solution. Sometimes, a
nonlinear problem does not have any solution, although the problem can seem to be defined correctly.
Nonlinear analysis requires choosing a solution strategy which includes dividing the loading into logical steps, controlling
the numerical processing, and planning for the possibility of changing the solution strategy during the analysis using
restarts. Which solution method to use depends on the structure itself, the nature of the loading, and the anticipated
nonlinear behavior. In some cases, one method can be advantageous over another; in other cases, the converse might be true.
If a solution is obtainable, there is also the issue of efficiency. Each solution procedure has pros and cons in terms of matrix
operations and storage requirements. In addition, a very important variable regarding overall efficiency is the size of the
problem. The time required to assemble a stiffness matrix, as well as the time required to recover stresses after a solution,
vary roughly linearly with the number of degrees of freedom of the problem. On the other hand, when using a direct solver
the time required to go through the solver varies roughly quadratically with the bandwidth, as well as linearly with the
number of degrees of freedom.
Applications for Nonlinear Analysis
Early development of nonlinear finite element technology was mostly influenced by the nuclear and aerospace industries.
In the nuclear industry, nonlinearity is mainly due to high-temperature behavior of materials. Nonlinearity in the aerospace
industry are mainly geometric in nature and range from simple linear buckling to complicated post-bifurcation behavior.
Nonlinear finite element techniques are now applied to problems as diverse as automotive, biomechanics, civil,
manufacturing, ship building, and many more. MSC Nastran SOL 700 may be used for solving high speed events such as
crash and explosions.
Capabilities
The most important capabilities of SOL 400 are presented in the following list.
1.SOL 400 solves linear and nonlinear (material, contact and/or geometric) static, heat transfer, modal (vibration),
buckling, and transient dynamic structural finite element problems.
2.Eigenvalue solutions are available in SOL 400 for solving linear or nonlinear modal analyses and linear buckling
analysis using either Lanczos or Inverse Power Sweep methods of iteration. Through the use of parameters you can
control the convergence of the eigenvalues, and the modes to retain.
3.MSC Nastran has advanced numerical techniques including parallelization to support very large models.&lt;/p&gt;
&lt;p&gt;11 Chapter 1: Introduction
Capabilities
Main Index
4.SOL 400 supports the following elements types:
•Scalar Elements
•Beams
•Shells
•2-D Plane Strain
•2-D Plane Stress
•Axisymmetric
•3-D Solids
•Lower-order Elements
•Higher-order Elements
5.RBE elements and multi-point constraint equations are supported in SOL 400 to tie specific nodes or degrees of
freedom to each other. Special MPC entities are supported, (e.g. rigid links) which can be used to tie two nodes
together or equate the motion of two degrees of freedom. Both small and large rotations are supported.
6.SOL 400 supports the following loads and boundary conditions:
•Constrained nodal displacements (zero displacements at specified degrees of freedom). Enforced nodal
displacements (nonzero displacements at specified degrees of freedom in the nodal coordinate system). Both
constrained and enforced displacements can be specified as relative or absolute.
•Forces applied to nodes in any coordinate system.
•Follower force distributed loads.
•Temperature applied to nodes. Temperature can be applied as a load in a structural analysis. The reference
temperature is user definable.
•Inertial body forces, acceleration and velocity can be applied in the global coordinate system.
•Contact between two bodies can be defined by selecting the contacting bodies and defining the contact
interaction properties. Gluing and ungluing are provided. Enforced motion or velocity of rigid contacts surfaces
is available.
7.SOL 400 supports both temperature independent and dependent, isotropic, orthotropic, and anisotropic material
properties. They can be defined for elastic, elastic-plastic, hyper-elastic, hypo-elastic, visco-elastic, and creep
constitutive models. In addition, SOL 400 also supports cohesive material, gasket material, and thermo-mechanical
shape memory material. Nonlinear elastic-plastic materials can be defined by specifying piecewise linear stress -strain
curves, which may be temperature and / or rate dependent.
8.Physical properties can be associated with SOL 400 elements such as the cross-sectional properties of the beam
element, the area of the beam and rod elements, the thickness of shell, plane stress, plane strain, and membrane
elements, spring parameters, and point masses among others.
9.Fracture Mechanics capabilities include VCCT crack propagation and cohesive zone interface and closure analysis,
and a large number of failure index criterion for analyzing delamination of composite elements.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Using the Finite Element Method  (FEM)12
Main Index
10. Laminated composite solid and shell elements are supported in SOL 400 through the PCOMP,  PCOMPG , and
PCOMPLS  entries of the materials capability. Each layer has its own material, thickness, and orientation and may
represent linear or nonlinear material behavior. Failure index calculations are also supported. Fast integration
techniques are available with the  PCOMPF  entry. Equivalent material models may be incorporated using PSHELL .
11. Analysis jobs may consist of (possibly) complicated loading histories (such as would occur in a multi-step
manufacturing process). A single SOL 400 analysis (subcase) may consist of multiple steps that specify the loading
sequence.
Using the Finite Element Method  (FEM)
Before discussing the specifics of the FEM using MSC Nastran, it is useful to examine how you might use the FEM to solve
an engineering problem. The discussion in this section is quite general and is not meant to show you the specifics of
generating and running a finite element computer model. Rather, the purpose of this discussion is give you some insight
into how and why you would use the FEM.
The FEM is used in a wide variety of disciplines and engineering applications. One of the most common applications of
the method is to solve structural analysis problems. T raditionally, structural analysis applications are divided into two areas-
static and dynamic analyses. Performing structural analysis using the finite element analysis is no exception. It is not unusual
to find individuals who spend the majority of their time performing static finite element analysis and little or no time
performing dynamic analysis. Likewise, it is common to find individuals who spend the majority of their time performing
dynamic analysis. This guide deals with both static and dynamic analysis.
When performing an analysis using the FEM, the structure is represented as a collection of discrete elements. Think of these
elements as building blocks from which you can construct a model of the actual structure. Using the properties of these
individual building blocks (the elements), the stiffness of the whole structure is approximated. The loads on the structure
are represented as forces acting on the elements or on the boundary of the elements.
T o use the FEM effectively, you must apply your engineering knowledge to the structure being analyzed. Next you must
decide how much detail to put in your model; i.e., the size and number of elements. More detail in the model results in a
more accurate solution but it costs more in terms of computer resources. Even with modern computers with large amounts
of memory and storage space an excessively fine mesh can swamp a computers resources and take too long to run. The goal
is to create an accurate, yet cost-effective model. The better your understanding of the structure, the applied loads, and the
MSC Nastran solution process, the more effective you will be in finding solutions to your problems.
Clevis – Pin – Lug Design
Suppose you have to design a clevis – pin – lug as shown in Figure 1-1.&lt;/p&gt;
&lt;p&gt;13 Chapter 1: Introduction
Clevis – Pin – Lug Design
Main Index
Figure 1-1  Clevis – Pin – Lug Assembly with a Lug Base Load
Before starting a computer model, ask the following questions:
1.What are the load paths for this structure? Knowing the load path for the structure provides insight regarding what
part of the structure needs to be modeled in detail. Furthermore, knowing how the loads are transmitted to the
structure helps you to understand and verify the results.
2.What is your design criteria? You may be concerned with fatigue, in which case the stress or strain is important or
the fit. Another concern may be that of the tube buckling. The answer to these questions dictates how much detail
is needed in your model.
3.If yielding is of concern, where are the higher stresses expected to occur, and what failure criteria should be used?
4.Is the maximum displacement considered small? If the displacement is not small compared to the dimensions of the
structure, it is necessary to perform a large deformation analysis. Planning ahead as to what additional analyses may
be necessary can reduce the time necessary to prepare the input file to a nonlinear analyses are needed.
5.How can the results of the finite element analysis be verified? In other words, what independent checks can be made
to ensure that the answers are reasonable? While estimating stress and strain values can be difficult, summation of
loads should always provide and independent “reality check”.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Clevis – Pin – Lug Design14
Main Index
Required Solution
Returning to the clevis-pin-lug structure, assume that the primary design criteria are to have an adequate margin- of-safety
on yield, or possibly estimate the stresses for the purpose of fatigue life calculation. The load for this structure consists of a
force applied to the lug at the center.
A good first step in any analysis is to identify the output quantities that you are trying to determine. In the example, the
output quantities are the stresses and interaction stresses or forces on each of the components. Using a summation of forces,
it might be possible to estimate whether the normal forces and stresses at the points of contact seem reasonable. Once you
have an estimate, you can identify modeling errors quickly. For many engineering problems, you cannot look in a handbook
for a formula. However, you can always make some simplifying assumptions and obtain a crude estimate. Having a good
estimate, simplifies the model checkout.
This application example evaluates the performance of contact algorithms at curved boundaries between deformable bodies.
A cylindrical pin is located in the cylindrical hole of a lug-clevis assembly. The diameters of the hole and the pin are slightly
different. Point forces are applied to the center of the top surfaces of the lug and the base of the clevis is assumed to be
clamped down. It is assumed that the tangential (frictional) contact forces are negligible; e.g., can be ignored for this
purpose. Due to the symmetry condition, a half model of the assembly would be sufficient for the finite element analysis
if we assumed that the loading was symmetrical, however we will not make that assumption for this model.
The displacement components and contact normal and tangential forces are of interest. One analysis is conducted with
SOL 400 with standard CTETRA  elements. In the current version of SOL 400, the advanced large strain elements are
defined by a PSOLID  entry pointing to an auxiliary PSLDN1  entry.
Now you are ready to generate the finite element model. At this point, you need to decide what kind of elements should
be used and how much detail is needed.
T o model the structure with CTETRA  elements, mesh each of the components using Patran or other meshing program.
Each of the 3 components is represented as a mesh of CTETRA  elements. The CTETRA  elements are connected to their
neighbor elements at points known as grid points. The physical locations of the grid points determine the “quality” of each
of the CTETRA  elements. The “quality” of the mesh will be described in a later chapter. Associated with each set of
CTETRA  elements is a property entry with the material (MAT1)  and element formulation characteristics (PSOLID +
PSLDN1) . The properties represent the physical properties of the elements and must be entered for each set of elements
with distinct characteristics. The material properties, consisting of the modulus of elasticity and Poisson&amp;rsquo;s ratio, are entered
on a MAT1  material entry.
This concept of representing the real world structure with finite elements is generally referred to as meshing. Hence, you
can say that the pin - lug - clevis structure is meshed with CTETRA  elements. For most models, meshing is performed with
the use of a preprocessor such as Patran. The relative number of elements used to represent the structure or part of a
structure is commonly referred to as mesh density. As the mesh density is increased, more elements are needed and the size
of the elements is decreased. The process of increasing the mesh density to improve the accuracy of the results is also referred
to as refining the mesh.&lt;/p&gt;
&lt;p&gt;15 Chapter 1: Introduction
Clevis – Pin – Lug Design
Main Index
FEM Solution
Numerical solutions have been obtained with MSC Nastran solution sequence 400 for the 3-D case. First, the advanced 3-
D elements are used to conduct the analysis with contact and friction. In comparison, the same analysis is also conducted
with the standard 3-D solid elements.
The contact, material/geometry, solution/convergence schemes and other parameters are explained below.
Contact Parameters
The element mesh using the 3-D solid element is shown in Figure 1-1. The contact body named as Pin represents the pin.
The contact bodies named as Clevis  and Lug define those components. A point load (red arrow) is applied at the center
point of top end of the pin. It should be noted that the symmetry has been taken into consideration.
In the input data file, the contact bodies are defined as below:
$ Deform Body Contact LBC set: clevis
BCBODY   1       3D      DEFORM  5       2               -1
ADVANCE         1061
BSURF    5       100001  100002  100003  100004  100005  100006  100007
$ Deform Body Contact LBC set: lug
BCBODY   2       3D      DEFORM  6       2               -1
ADVANCE         1061
BSURF    6       200001  200002  200003  200004  200005  200006  200007
$ Deform Body Contact LBC set: pin
BCBODY   3       3D      DEFORM  7       2               -1
ADVANCE         1061
BSURF    7       300001  300002  300003  300004  300005  300006  300007
The BCBODY  with ID 1 defines the clevis as a three-dimensional deformable body. The BCBODY  with ID 2 defines the
lug, and ID 3 the pin,  also as a three-dimensional deformable bodies.
The BCTABLE  bulk data entries shown below define the touch conditions between the bodies:
BCTABLE  1                       3
SECNDRY 1       0.      0.      0.      0.      0
1       3       0
FBSH   1.+20   .99      0.
PRIMARY 2
SECNDRY 1       0.      0.      0.      0.      0
1       3       0
FBSH   1.+20   .95      0.
PRIMARY 3
SECNDRY 2       0.      0.      0.      0.      0
1       3       0
FBSH   1.+20   .95      0.
PRIMARY 3
As shown above, BCTABLE  with ID 1 is used to define the contact touching conditions for the first step of the analysis.
A similar BCTABLE  with ID 0 is written out by Patran to define the contact touching conditions at the start of the analysis.
Zero (0) identifies the case number. The BCTABLE  entry is mandatory for the contact analysis with SOL 400. Also, the
options ( BCONTACT  with ID 0 and BCPARA  with ID 0) are all applied at the start of the analysis that are required in&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Clevis – Pin – Lug Design16
Main Index
the case of initial stress free contact, if there is rigid body positioning required, or in the case where there is permanent glued
contact specified. For the loading analysis defined as load case 1 under the case control section, the contact touching
conditions are redefined by options of BCTABLE, BCPARA,  and BCONTACT  with ID 1. In this example, the BCPARA&lt;br&gt;
is only defined once because the parameters specified herein are applied through the analysis from the beginning unless
some of these parameters are redefined by BCTABLE  entry with ID 1. It should be mentioned is that the BIAS parameter
is defined as 0.99 (the default value is 0.9).
BCPARA   0       NLGLUE  0    &lt;br&gt;
BIAS   .99   &lt;br&gt;
Material/Geometry Parameters
The both bodies in this analysis are defined as isotropic elastic materials (steel). The Young&amp;rsquo;s modulus and Poisson ratio are
defined as:
MAT1     1      3.+7            .3      .1
As shown above, the material ID is 1.
Case Control Parameters
There is a single loading sequence in the analysis. As shown below with STEP  and SUBCASE  each with ID 1 defines all
necessary conditions applied to the analysis which includes case control commands: TITLE, NLSTEP, BCONTACT,
SPC, LOAD , and requested output information. Particularly, it is necessary to note the  NLSTEP  bulk data entry and the
LGDISP  parameter. For the FE analysis with SOL 400, the advanced 10-node 3-D CTETRA  continuum elements are well
designed for this type of analysis with large strain and large displacement. The LGDISP  parameter indicates that geometric
nonlinearity includes the stiffness of follower forces. The convergence control parameters are defined by the   NLSTEP  bulk
data entries. Here, the full Newton-Raphson method is used. The target number of loading increments is set to 10, although
this only acts to set the initial load increment size since adaptive load incrementation will be used. The maximum iteration
for each increment is set to 10 (default). The default convergence scheme is used and every computed load increment is
output since the field 8th is set to 0 under ADAPT  keyword on NLSTEP.
SOL 400
$ Direct Text Input for Executive Control
CEND
TITLE = MSC Nastran job created on 21-Feb-14 at 15:17:00
$ Direct Text Input for Global Case Control Data
SUBCASE 1
STEP 1
TITLE=This is a default subcase.
ANALYSIS = NLSTATIC
NLSTEP = 1
BCONTACT = ALLBODY
SPC = 2
LOAD = 1
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
NLSTRESS(SORT1)=ALL
BOUTPUT(SORT1,REAL)=ALL&lt;/p&gt;
&lt;p&gt;17 Chapter 1: Introduction
Clevis – Pin – Lug Design
Main Index
$ Direct Text Input for this Subcase
BEGIN BULK
PARAM   PRTMAXIM YES
BCPARA   0       NLGLUE  0
PARAM    LGDISP  1
NLSTEP   1      1.
GENERAL 10      1       10
ADAPT  .01     1.-5    .5       4      1.2      0
6      2.-4
MECH    PV                              PFNT
.2
$ Direct Text Input for Bulk Data
$ Elements and Element Properties for region : solids
PSOLID   1       1       0
PSLDN1   1       1
C10     SOLID   Q
The element type is defined by the PSOLID  and PSLDN1  bulk data options as shown above where ( C10 SOLID Q )
defines the 3-D tet10 continuum solid element with quadratic integration scheme.
Results
Numerical solutions have been done with MSC Nastran SOL 400. As seen in Figure 1-2, a relatively coarse mesh is used for
the lug and clevis and a finer mesh is used for the pin.  Since curvature based meshing is used by default in Patran the mesh
will be finer near the curved parts of the components.
Figure 1-2  Deformed Shape of Coarse CTETRA Element Model&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Clevis – Pin – Lug Design18
Main Index
The overall solution results shown in the above figure represent the von mises stress, which is an appropriate stress measure
(measures how close the material is to yield) for crystaline isotropic materials like metals.
For the comparison, similar plots of the von mises stresses in each component are shown in the following plot. Again, the
element type is defined by PSOLID  including PSLDN1  option which defines large displacement, large strain elements.
Figure 1-3  von Mises Stress Plot of Each Part
One of the primary items of interest in a contact analysis is the contact stresses between the components. No friction was
used is this simulation since very little relative motion is expected and the normal forces would be much larger than any
frictional component of stress. Plots of the contact normal stresses (both contact normal stress and contact normal forces
are available) are shown in the following plots. Mesh density is very important to getting a smooth accurate stress contour
plot. For this problem, the load balancing requirement imposed by the equilibrium requirement requires that the overall
stresses be reasonably accurate, but if the goal of this simulation is to get an accurate stress plot of the contact stresses, a
much finer mesh is recommended.&lt;/p&gt;
&lt;p&gt;19 Chapter 1: Introduction
Clevis – Pin – Lug Design
Main Index
Figure 1-4  Contact Normal Stresses on Contact Surfaces
The resulting contact normal nodal stress plots are shown in Figure 1-4. The peak value in the contact normal stress is found
to be in the neighborhood of 30 KSI which is in the range where local yielding would be of concern for many metals.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
General Analysis Tips20
Main Index
General Analysis Tips
Convergence control: While the nonlinearity is quite mild in this problem, for nonlinear problems it is suggested
to use both displacement and residual convergence check due to the nonlinearity introduced by contact. This is
done by default (with auto-switching) when you use NLSTEP  with the built in defaults. Also, the full Newton-
Raphson iteration scheme is recommended (again, used by default with  NLSTEP ) for all SOL 400 analyses
because the degree of nonlinearity may be significant.
In this example, a node-to-segment contact model, the body surface of the pin should be defined as secondary&lt;br&gt;
nodes for the contact search against the primary c ontact surfaces. Generally speaking, the contact body with finer
mesh should be defined as secondary  contact surface because it is easy to be detected when the secondary nodes
touch the primary s urface. The effect of getting this situation wrong would be that you would see nodal
penetration of nodes from one contact body into the other.  This situation can be prevented by using segment to
segment contact. The contact options available in SOL 400 will be discussed further in Chapter 9: Contact .
When you model a region with a particular element, note that you are approximating the actual stiffness in that region with
the stiffness of the element that you have chosen. These finite elements, which are commonly referred to as simply
“elements,” can be scalar elements or one-dimensional elements (such as the CBAR  element), two-dimensional elements
(such as the CQUAD4  element), or three-dimensional elements. Element technology is discussed in Chapter 11: Element
Library .
It is your responsibility to choose the appropriate element types and number of elements to obtain the best results. If you
use a one-dimensional element to model a two-dimensional plate structure, you can expect poor results. If, on the other
hand, you choose a two-dimensional element type for your plate structure, the approximation will be considerably better.
This choice requires engineering judgment. It is easy to use a graphics preprocessor to generate a good-looking model of
your structure that contains many elements, but the model can be a poor model for the analysis. This problem is further
compounded by the fact that today&amp;rsquo;s postprocessors can take the most meaningless results and present them in a very
convincing manner.  T o gauge the fidelity of the stress distribution, it is often useful to plot the gauss point stresses
extrapolated to the nodes (for the purpose of the fringe plot), but unaveraged so the variations of the stress contributions
from each of the elements connected to the node can be assessed.  The topic of fringe plot value averaging and extrapolation
will be discussed further in Chapter 7: Results Output from the Analysis .
Frequently Asked Questions
This section is intended to answer questions you might have about SOL 400.
General Questions on SOL 400 Analysis
Q1:Is SOL 400 only for nonlinear analysis, or can I also do linear analysis?
SOL 400 can do linear, nonlinear, modal, buckling, and transient structural analysis along with a host of other analysis types
(see ANALYSIS  case control entry documentation in the QRG for a complete list). SOL 400 is designed to be the only
solution sequence you need.
Q2:Will I get the same results from a SOL 400 linear analysis as I do from a SOL 101 analysis?&lt;/p&gt;
&lt;p&gt;21 Chapter 1: Introduction
Frequently Asked Questions
Main Index
SOL 400 has additional capabilities that require controls not available in SOL 101.What this means is that the additional
controls must be set in the same way for a SOL 400 analysis as they are for a SOL 101 analysis. Having said that, in general
SOL 400 control defaults are set in such a way that you should get the same results from a SOL 400 analysis that you do
from a SOL 101 analysis.
Q3:Will I get the same results from a SOL 400 nonlinear analysis as I do from a SOL 106 static or SOL 129 transient
nonlinear analysis?
Again, there are additional capabilities and additional controls in SOL 400 that must be set in the same way as they are for
SOL 106 or 129 in order to get the same results. Also, SOL 400 has a complete set of, large strain elements that make it
unlikely that you will get the same solution unless you are performing a small deformation analysis. However, if you set
your analysis up to use the same elements as the SOL 106 or 129 solution, and you limit the conditions applied to the
model you should get the same results as a SOL 106 or 129 analysis.
Q4:Will I get the same results from a SOL 400 linear, modal, buckling, or nonlinear analysis as I will from a SOL 101,
103, 105, and 106 analysis?
In general, SOL 400 encapsulates those solution sequences and should be able to reproduce their results. Again, getting the
same answers requires equivalence in element types, analysis control settings, and procedures.
Q5:Is it possible to use the same model for linear and nonlinear analysis, if so what is the best way to add the additional
input required for the nonlinear solution to an existing linear model?
Yes, it is absolutely possible to use the same model for linear and nonlinear analysis. SOL 400 has been designed to allow
users to do this very thing. The best way to accomplish this purpose is to take the linear model, read it into a graphical pre-
and post processor like Patran, add the additional model attributes required such as contact, and make sure to specify the
proper nonlinear analysis control parameters and let the graphical pre- postprocessor write out the correct input.&lt;br&gt;
Q6:Is it possible to take an existing MSC Nastran model and convert it into a SOL 400 model?  If so what is the best way
to do this?
Similar to the previous answer, the best way to accomplish this purpose is to take the existing MSC Nastran model, read it
into a graphical pre-and post processor like Patran or SimXpert, add the additional model attributes required such as contact
or nonlinear materials properties, make sure to specify the proper nonlinear analysis control parameters and let the graphical
pre- postprocessor write out the correct input. See Chapter 6: Setting Up, Monitoring, and Debugging the Analysis  for an example of
the process required to convert a SOL 101 model to a SOL 400 model.
Q7:Is it possible to take an existing Abaqus model and convert it into a SOL 400 model? If so what is the best way to do
this? Will I get the same answer?
Beginning with the 2014 release, there is a translator that can be used to convert an Abaqus input file into an MSC Nastran
input file. Prior to that, the best strategy is to read the file into Patran, change the preference to MSC Nastran, and add the
additional data.
Getting the same answer depends on a lot of factors, including the compatibility of the element types selected, the analysis
capabilities and algorithms (such as contact algorithms), and the analysis procedures and controls selected.  In particular,
characterization of contact interactions may affect the results.
Q8:Does Patran support SOL 400?&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Frequently Asked Questions22
Main Index
While Patran does not support 100% of SOL 400 capabilities, it provides fairly complete support of the most commonly
used features of SOL 400 including nonlinear materials, contact, composites, and multi stepping/perturbation analysis.
MSC is continuing to develop Patran to support new SOL 400 capabilities.
Q9:Does SimXpert support SOL 400?
The answer to the previous question also applies to SimXpert.
Q10: If I am new to SOL 400 what&amp;rsquo;s the best way to learn it?
The MSC documentation system has a complete set of solved SOL 400 problems in a document called the MSC Nastran
Demonstration Problems.  The input files from these solved problems are included in the documentation system. Also, Patran
has a set of demo problems that can be found under the “Analysis” menu, under the &amp;ldquo;Run a Demo&amp;rdquo; tab. Once these demos
are run, Patran can be used to interrogate the model and investigate how the models are set up. Finally, the SimCompanion
website has a knowledge base with answers to commonly asked questions, as well as links to the MSC training courses on
SOL 400.
Q11: Where can I find example input files for SOL 400 demo problems?
Example problems can be found in the MSC Nastran Demonstration Problems Manual.  These example problems also include
input files. There is also a whole test suite of example input files in the MSC Nastran test problem library. Also, the &amp;ldquo;Run
a Demo&amp;rdquo; problems in Patran will leave the input files that were used to run the example.
Q12: What kind of results are supported in the op2, xdb, HDF5, and/or dball/master?
While you can request SOL 400 output in any valid MSC Nastran output format, only the MASTER /DBALL  and new OP2
(PARAM,POST,1 )  and HDF5 formats will contain all of the results data blocks of SOL 400. Specifically, the nonlinear
stress/strain and contact results data blocks will be missing if any other format is requested. Thus, MSC strongly
recommends that you use MASTER /DBALL , new OP2, or HDF5 output formats for SOL 400 solutions.
Q13: What do I do if I run the analysis and do not get a solution? What if it does not converge?
The first thing to do is to check the solution files ( *.f06 , *.log , *.f04 ) to look for error messages. Typically there will
be a message telling why the solution did not converge.
There are a couple of answers to this question depending on why the analysis did not get a solution.  Reasons why an analysis
does not result in a solution can be grouped into two categories. The first group relates to having a correctly formatted input
file. These tend to be the most common, and also the easiest to fix. The second group relates to having what might be called
“a well-posed problem”. This means that our problem does not violate any of the laws of physics, and that there actually is
a valid numerical solution to the problem we are trying to solve. A typical example of this type of error would be trying to
come up with a static solution to a problem that is not statically determinate.  There are methods used to determine if a
model is properly constrained, such as running a modal analysis to look for unconstrained rigid body modes.
Q14: How do I know if I NEED to do a nonlinear analysis?
While this is not an exact answer as loading conditions will affect this, in general, if your strains are approaching 5%, or the
deflection of any node in your model approaches 5% of the smallest dimension, you should do a nonlinear analysis.
Q15: How do I know if contact in SOL 101 will give me the right answer, or if I need to do a nonlinear analysis?
The terms linear solution and contact are almost an oxymoron. The very nature of contact problems are that finite
deformation of the nodes must be tracked to determine if the notes are in contact or not in contact. This deformation is&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P20</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_020/</guid>
      <description>
        
        
        &lt;p&gt;363 Chapter 9: Contact
Thermal Contact
Main Index
No Contact
A face of a meshed body not being contacted or only partially being contacted may exchange heat with its environment
according to similar laws as the first four in Mesh-to-Mesh Convective Heat Transfer (Hard or Near Contact) , but the temperature&lt;br&gt;
TB  is replaced by an ambient temperature TAMB, which is the same for all faces of a contact body and TA now represents
the surface temperature. The flux per unit are is:
q =   h  (TA -TAMB) (9-15)
where  is an area contribution factor for the face (0 ≤ ≤). The total contribution is determined by the integration over
the element face (this is similar to an elastic foundation in mechanical terms):
(9-16)
where is the vector of shape functions that interpolate the temperatures inside the element face. From the above
expression, a conductivity matrix contribution and a load vector contribution arise.
The conductivity matrix is:
(9-17)
The load vector is:
(9-18)
Mechanical Coupling
Frictional Heat
The heat generated by sliding friction in the contact interfaces gets evenly distributed over the two bodies that contact each
other and can be expressed as:
, (9-19)
where  is the magnitude of the friction force at grid A and  is the magnitude of the relative velocity between
the two bodies at grid A.  QA can be applied directly as a concentrated heat flux to the contacting grid.  QB is distributed
over the grids of the primary face being contacted:  The scale factor may be used to accommodate
different unit systems in the heat transfer and mechanical analysis or to accommodate a loss to the environment, in which
case not all heat generated is available as a loading heat source.Qfilm h
Aface= TTATAMB– dAHATA QAMB– = 

HA h
Aface= TdA
QAMB hTAMB
Aface= dA
QAQB1
2&amp;mdash;Fw= = rel
Fwrel
QBii = QB&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Contact Model Check364
Main Index
Contact Model Check
In the numerical analysis of a complicated structure with many parts, contact, sometimes, is unavoidable. It becomes very
challenging and tough for users to determine and review if the contact status in the initial stage and during the analysis is
reasonable, even with the help of GUI. Therefore, it is helpful and necessary to provide as more information of the contact
status as possible, then, user may do pre-check for the contact issues, for example, relative distance of the potential contact
nodes and segments as well monitoring if the gap and overlap/penetration are acceptable and reasonable. Also it is helpful
for user to check the geometry adjustment of contact surface triggered by initial stress free is reasonable or not, even if it is
what user expects.
Usage of contact model check
T o apply the capability of Contact Model Check, Case Control Command BCONCHK is needed.
where,
This capability supports Node-to-Segment contact in Nastran 2018.2 version, and Seg-to-Seg contact analysis in Nastran
2019 version.
If no presence of BCONCHK, job won&amp;rsquo;t do contact model check, it conducts normal contact analysis.
Example of contact model check
Here is the example to demonstrate the output of contact model check. Archive cmc28.dat in tpl\conchq is used as example.
The following snapshot in Figure 9-26 is taken from its f06 file, which lists the initial contact status of all the secondary n odes
within the contact tolerance. Positive contact distance means initial gap, and negative one refers to penetration/overlap.STOP job stops after the contact model check and output the contact status in the initial
stage.
RUN job continues to run through after the contact model check and output the contact
status in the initial stage.
STEP job continues to run through with the contact model check and output the contact
status both in the initial stage and during analysis.
PRINT output the contact model check in f06 file in table format
PLOT output the contact model check in h5 and op2BCONCHKPRINTPLOT STOP
RUN
STEP&lt;/h1&gt;&lt;p&gt;365 Chapter 9: Contact
Contact Model Check
Main Index
Figure 9-26  Snapshot of the initial contact status&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Contact Model Check366
Main Index
Figure 9-27 shows the distribution of the contact distance.
Figure 9-27  Distribution of the contact distance
Contact Check is also available during analysis (both node-to-seg and seg-to-seg), see following Figure 9-28.
Figure 9-28  Contact Check, Distance Vector and Contact Stress, Normal Fringe at 100% Load&lt;/p&gt;
&lt;p&gt;367 Chapter 9: Contact
Initial Stress Free in Contact
Main Index
Initial Stress Free in Contact
In contact analysis, the contact pairs may be not perfect to match each other in the initial stage due to mesh discretion or
initial geometry definition, the capability of initial stress free provides users the option to adjust the initial geometry to
achieve the contact at the initial stage.
Before MSC Nastran 2019 version, this geometry adjustment for initial stress free is supported for node-to-segment contact
only. For initial stress free contact analysis, Seg-to-Seg contact does not adjust the geometry to achieve the initial contact,
but instead to use the internal force to reach up the initial stress free.
Since MSC Nastran 2019 version, the original geometry in seg-to-seg contact may be adjusted to achieve the initial contact,
then to implement the Seg-to-Seg initial stress free method.
If preferring to keep the original geometry for initial stress free in Seg-to-Seg contact, system cell (758)=8 may be used to
keep the backward compatible.
If initial stress free is applied and the geometry adjustment is implemented, it may be helpful for users to review if the
geometry adjustment induced by initial stress free request is reasonable. Since MSC Nastran 2019 version, geometry
adjustment may be postprocessed by GUI for both Node-to-Seg and Seg-to-Seg contact analysis.
Here is an examples of Node-to-Seg contact with initial stress free.
Figure 9-29 shows the distribution of the geometry adjustment by initial stress free request on the undeform configuration.
The fringe shows how much distance the secondary n odes of the contact body is moved to achieve the stress free status.
Figure 9-29  Geometry adjustment induced by initial stress free with N2S
With Seg-to-Seg contact, the same geometry adjustment may be implemented for initial stress free.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Initial Stress Free in Contact368
Main Index
The following example demonstrate its application.
Figure 9-30  Contact Check Vector without Initial Stress Free with S2S&lt;/p&gt;
&lt;p&gt;369 Chapter 9: Contact
Automatic Contact Generation
Main Index
Figure 9-31  Geometry Adjustment Vector &amp;amp; Fringe for Initial Stress Free with S2S
Vector plot shows both magnitude and direction of distance between contact pairs. Figure 5 and 6 exemplify that the Initial
Stress Free Adjustment is capable of clear the gap/penetration reported by Contact Check.
Automatic Contact Generation
In the modern industries, the product structure like airplane, automobile, and so on, is becoming more and more
complicated with many parts. It becomes, sometimes, very challenging and tough for users to establish the contact
relationship between contact bodies. It may take much time of engineers to set the contact model for contact analyses.
The Automatic Contact Generation (ACG) capability provides an easy method for users to setup contact or glued contact
data, which is aimed to greatly reduce the users’ work and time for such data preparation with the basic models of grids,
meshes and loading and boundary conditions prepared by any preprocessor. With automatic contact
generation, it is unnecessary for users to set the detailed contact model for contact analysis. It may greatly save the
engineer’s time for model setup. Also it may help the engineers to start contact analysis and guides them to study the setup
of the contact analyses.
The capability includes:
Automatically generate contact bodies.
Automatically establish the contact pairs.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Contact Generation370
Main Index
Providing the option to output the generated contact bodies, contact pairs and contact parameters in a separate
file. The user can modify and reuse it whenever necessary or read the data to a pre/post processor for either model
verification or result evaluation, which is especially useful for complex model.
Generation of Contact Bodies
Based on the grids and elements defined in the input provided by users, ACG automatically searches for the possible contact
bodies according to conditions defined in BCAUTOP . The basic principles are as follows:
1.Only the following types of structure elements and BOLT element are considered for contact body:
CQUAD4, CQUAD8, CQUAD, CQUADX, CQUADR;
CTRIA3, CTRIA6, CTRIAX6, CTRIAX;
CHEXA, CPENTA, CTETRA;
CBEAM, CBAR, CBEAM3, CROD;
CAXISYM
The connection by any other type of element, rigid element or MPC is not considered.
2.Physically independence: if a set of elements do not have the shared girds with any other part of elements in the
model, this set of element is potential body.
3.Element type: within a physically independent part, elements with different dimension, for example, solid element,
shell element, beam element, will form their own contact bodies;
4.Element order: for same dimension element, for example, quadratic element, linear element CTRIA3/CQUAD4
and quadratic element CTRIA6/CQUAD8 will form their own bodies.
If PropSet is used in BCAUTOP , it generates contact body in the similar way of BCPROP in BCBODY1.
Generation of Contact Pairs
With the contact bodies generated, ACG searches for all the contact bodies to determine the potential contact pairs based
on DISTANCE tolerance, which may be defined in BCAUTOP or left blank for default. If the smallest distances between
the two contact bodies is less than DISTANCE tolerance, these two contact bodies is assumed to form a contact pair.
Default value of DISTANCE is 100 times of contact ERROR tolerance. ERROR may be defined in either BCAUTOP or
left blank for default.
For default of ERROR, the code calculates ERROR as the smallest one of the following values:
1.1/20 of the smallest nonzero element dimension (plates or solids) in the contact body;
2.1/4 of the thinnest shell thickness in the contact body.&lt;/p&gt;
&lt;p&gt;371 Chapter 9: Contact
Automatic Contact Generation
Main Index
User Interface
BCONTACT(CASE)
Format:
or AUTO(,ctype)
The case control command BCONTACT=AUTO(,CTYPE) is used to activate ACG capability. CTYPE is to define contact
type, It can be TOUCH(Touching contact, default), PGLUE ( permanently  glued contact), SGLUE(Step glued contact)
or GGLUE(General glued contact). For details, refer to BCONTACT(Case) in Quick Reference Guide. Optionally bulk
data section BCAUTOP is used to specify contact regions and parameters.
BCAUTOP (BULK DATA SECTION)
Specifies parameters for automatic contact generation.
Format:
Example:
The parameters in this entry may be divided into two types – primary parameters and secondary parameters. The primary
parameters are the most important parameters for build of contact bodies, match of contact pairs. The secondary
parameters are helpful for user to provide the more detail and further requirement for contact model establishment and
contact analysis with automatic contact generation. The primary and secondary parameters are listed in the tables as follows.1 2 3 4 5 6 7 8 9 10
BCAUTOP PID Param1 Value1 Param2 Value2 Param3 Value3
Param4 Value4 etc
BCAUTOP CTYPE PGLUE DISTANCE 0.1
Describer Meaning
PID Reserved for future use (integer &amp;gt;=0, default is 0)
Param(i) Name of a parameter. Allowable names are given below(Character)
Value(i) Value of the parameter. Can be Real, Integer or Character.BCONTACT=n
ALLBODY
NONE     
or ALLELE   
SOL 700 only&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Contact Generation372
Main Index
Table 9-2  List of Primary Parameters in BCAUTOP
Parameters ESet, PropSet, SeedESet and SeedGSet of BCAUTOP are used to define contact regions. Only one of them can
be used. The default is ESET . When there is no BCAUTOP or no above parameter is used, all elements in residual structure
in the input file will be used as contact regions. Describer Meaning
CTYPE Characters, can be one of TOUCH(default), PGLUE, SGLUE and GGLUE. If it is specified in
both sides of this entry and case control BCONTACT=AUTO, this will be used.
DISTANCE Distance tolerance. If two contact bodies have distance less than this, the program recognizes a
contact pair for the two bodies.
ESet ID of SET1 to specify element ids consisting contact bodies. If it is not specified, all elements in
the model will be used. Only one of ESET,SeedESet, SeedGSet and PropSet can be specified in
the same entry.
SeedESet ID of SET1 to specify element ids as seeds of contact bodies. The program searches elements as
contact bodies from the seed elements. Only one of ESET,SeedESet, SeedGSet and PropSet can
be specified.
SeedGSet ID of SET1 to specify grids ids as seeds of contact bodies. The program searches elements as
contact bodies from the elements connecting to the seed grid ids. Only one of ESET,SeedESet,
SeedGSet and PropSet can be specified.
PropSet ID of SET1 to specify property ids to construct contact bodies. Only one of ESET,SeedESet,
SeedGSet and PropSet can be specified.
RigidSet ID of SET1 to specify IDs of rigid bodies to be in contact.
List of Secondary Parameters in BCAUTOP
Describer Meaning
BEAMCNT Characters, YES or NO (default). Set the option of considering beam contact or not. If YES,
C in the formula of COPTS/COPTM in BCONPRG will be 10, and BEAMB in BCPARA
will be 1. If EDGECNT is yes also, C will be 11. If NO, above values will be default in
BCONPRG and BCPARA.
DIMENS Characters, 2D or 3D (default), dimension of contact bodies.
EDGECNT Characters, YES or NO (default). Set the option of considering edge contact or not. If YES,
C in the formula of COPTS/COPTM in BCONPRG will be 10, and BEAMB in BCPARA
will be 1. If BEAMCNT is YES also, C will be 11. If NO, above values are default in
BCONPRG and BCPARA.
FTYPE Characters, BLCOUL/BLSHEAR; or Integer, 6 / 7. BLCOUL or 6 is Bilinear Coulomb
friction. BLSHEAR or 7 is Bilinear Shear friction. Default is No Friction.&lt;/p&gt;
&lt;p&gt;373 Chapter 9: Contact
Automatic Contact Generation
Main Index
All the parameters in BCPARA , BCONPRP , BCONPRG  and BCBDPRP  entries may be used in BCAUTOP  directly. For the
detailed list of these parameters, please refer to BCPARA , BCONPRP , BCONPRG  and BCBDPRP .
ACG File Generation
For user’s convenience, ACG capability may generate acg file, which consists of all generated contact bulk data entries, for
example, BCBODY1, BCONECT, BCTABL1, BCONPRG,BCONPRP,  and so on. It can be included in a MSC Nastran input
file for contact analysis.
By default, a job with BCONTACT=AUTO  will automatically implement contact analysis after generation of contact related
entries is finished and the acg file with name &lt;!-- raw HTML omitted --&gt;.acg is prepared.
The acg file name can be changed by FMS ASSIGN  command. For example, below command will generate
another_name.acg  file.
ASSIGN ACG=’another_name.acg’
Examples
Automatic Contact Generation:
Several test models may be found in tpl/bcauto directory. Here is a simple shell and solid mixed model among them
bcauto_sldsh.dat .
Only BCONTACT=AUTO is specified in case control, no other contact related entry is used.FRIC Friction coefficient. If the value is an integer, it represents the ID of a TABLEM1,
TABLEM2 or TABL3D, i.e., a temperature-dependent or multi-dimensional table.
(Real ≥ 0.0 or Integer &amp;gt; 0; Default = 0.0)
IGNTHK Character, YES or NO (default). If YES, ignore thickness of shell, the B in the formula of
COPTS/COPTM in BCONPRG will be set to 6, see remark 2 of BCONPRG. If NO, B
is the default in COPTS/COPTM.
INISTF Character, YES or NO (default). If YES, set the option of initial stress free contact,
ICOORD of BCONPRG will be set to 1.
SelfCont Characters, YES or NO (default). Option of self-contact.List of Secondary Parameters in BCAUTOP
Describer Meaning&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Contact Generation374
Main Index
With the default, the job automatically run through the contact analysis. After running MSC Nastran, bcauto_sldsh.acg is
created, too.
Figure 9-32 shows the results of contact related status: 4 contact bodies, and 3 contact pairs, generated by ACG. Figure 9-33
displays the results of contact force after contact analysis.
Figure 9-32  Generated contact bodies and pairsSOL 400
….
SUBCASE 1
STEP 1
ANALYSIS = NLSTATIC
…
BCONTACT=AUTO
BEGIN BUL K
……
ENDDATA&lt;/p&gt;
&lt;p&gt;375 Chapter 9: Contact
Automatic Contact Generation
Main Index
Figure 9-33  Contact Forces, Normal&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading376
Main Index
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid
Body Loading
In the  Introduction , we looked at the pipe crush problem from the point of view of it representing a typical large deflection,
large strain, material, and contact nonlinear problem. From this point of view we looked at the problem set-up, load
incrementation, and solution. In this chapter we will re-visit the pipe crush problem and briefly review the problem setup,
but here we will more closely examine the contact aspects of the problem.
Problem Statement
A model of a cylindrical pipe is subjected to crushing as rigid bodies above and below the pipe move inward toward each
other. The model is created using 2-D shell elements to model the pipe, and rigid surfaces above and below the pipe. This
exercise illustrates several SOL 400 capabilities including large displacement analysis, contact analysis between rigid and
deformable bodies, and plasticity modeled with an elastic perfectly plastic material model.
Figure 9-34  Contact Body Configuration
The Structure and Its Application
This problem examines a section of steel pipe eight inches in diameter and 24 inches long with a wall thickness of 0.4 inches.
Steel pipes of this size are often used in land-based and offshore oil and gas industries. Individual pipe sections are assembled
with threaded connectors to form large pipeline distribution systems. The pipe sections and their connections must
withstand installation and operational loads. The effects of these loads can be buckling, torque, bending, axial separation,
external pressure, and internal pressure. In addition to environmental loads, surrounding structures undergoing
displacement can introduce contact conditions. Forces from these external structures can also lead to intolerable failure
scenarios.&lt;/p&gt;
&lt;p&gt;377 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
Pipe design typically looks at all foreseeable failure scenarios, and then a design is measured against the failure mode that is
most critical to structural integrity. In most cases, that failure mode is bending combined with axial forces while under
external pressure (if submerged) and internal pressure (fluid flow). However, in this case we examine failure due to external
loading from adjacent structures.
In this problem the pipe section is subjected to offset lateral loading from external structures on the top and bottom. The
problem attempts to quantify whether the movement of these external structures cause  the plastic collapse of the pipe. Initial
contact with the external structures is expected to cause elastic deformation of the steel pipe. Additional incremental
movement potentially subjects the structure to stresses beyond the proportional limit of the material. The yield stress defines
the onset of plastic strains that may initiate the collapse of the structure walls. The resulting deformation data can establish
the conditions for catastrophic collapse of the pipe section and define allowable limits to contact of external structures.
Model Description
The model includes a 3-D representation of the deformable pipe structure and two semi-circular sections of rigid pipes
sections.
Geometry and Contact Regions
The primary structure is a continuous linear section of pipe 24 inches long with a diameter of 8 inches and a homogeneous
wall thickness of 0.4 inches. The pipe surface is void of attachments, holes, bends, or other discontinuities and the internal
volume is empty space. T wo external pipe structures are oriented in a perpendicular direction and lie directly on the top
and underneath the primary pipe. The bottom pipe measures 6 inches in diameter with a length of 10 inches and the top
pipe measures 8 inches in diameter also with a length of 10 inches.
The external pipe structures that lie directly on top and bottom surface of the primary pipe impose no initial displacement
or force, and no conditions are assumed to exist that might cause friction or slippage at the interface. These external
structures move laterally into the pipe section creating a “sandwiching” effect. The pipe movement causes deformations on
both the upper and lower side of the pipe.
Finite Element and Contact Model
Actual sections of oil and gas pipes can extend past 30 feet. Lengths beyond the 24-inch section modeled in this problem
are assumed be irrelevant in the local collapse of the pipe wall. Each end of the pipe model is assigned boundary conditions
to represent the extension of the pipe in both directions. In addition, the pipe wall is sufficiently thin so that it is modeled
with thick shell elements in this problem.
The finite element mesh for the primary pipe structure contains 18 elements around the circumference and 18 elements
along the length for a total of 324 elements. MSC Nastran CQUAD4  elements are selected along with the PSHELL  entry
that accounts for standard membrane, bending and transverse shear behavior. All shell elements are assigned a thickness of
0.4 inches, designated with five layers, and defined to be the steel material.
In defining the contact model, the primary pipe section is modeled as a deformable body and the two external pipe
structures are modeled as rigid bodies. Elements comprising the deformable pipe structure are flagged so that contact by a
rigid body creates forces that are used to calculate the deformation of the pipe. The rigid body structures do not deform&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading378
Main Index
and their movement is described with the BCBODY  option. The geometry profile of the rigid surface is defined using 3-
D NURB surfaces that describe the true surface geometry and most accurately represent the curved surfaces.
Material
The entire pipe section is made of steel and modeled as an elastic-plastic material using the MAT1  and MATEP entries for
large displacement analysis. The linear elastic behavior model is effective up to a yield stress of 36000psi. In this range
imposed stresses induce linear proportional strains. The stress-strain relationship is defined using an elastic modulus of
3.0E+6 and a Poisons ratio of 0.3. Beyond the yield point perfect plasticity causes complete yielding of the material upon
any incremental stress.
Solution Procedure and Controls
A static analysis is performed to determine the pipe deformations that result from contacting rigid bodies. The rigid body
movement and material stiffness specified for this problem require that large displacement effects be included ( PARAM
LGDISP ).
Rigid body movement is spread over multiple load increments to allow for the history-dependent nature of the material
response. Thus, the equilibrium state and material state at the end of the first increment constitutes the beginning state for
the second increment. The automatic load increment option ( NLSTEP ) is used to control the magnitude of the load
increment. The initial time increment is set at  .01 sec. The total load is two inches of imposed rigid body lateral movement
on the top and bottom of the pipe occurring over 1 second.
Within each increment an iterative process obtains an equilibrium state. Iterations are based on the Full Newton-Raphson
method with a desired number of iterations per increment being 3, and a maximum set at 2500. Convergence for each
increment is defined based on relative residual forces of less than 0.1.
Output requests are made for contact and stress-strain components using the STRESS , NLSTRESS , BOUTPUT , and
STRAIN  case control commands. T otal strains tensor, stress tensor, plastic strain tensor, and Cauchy stress tensor are
requested to be included in the MASTER/DBALL  files. Since the BOUTPUT  request is also included all contact information
will also be included with the results output.
Loading and Boundary Conditions
Because only a small section of the pipe is modeled, the ends of the pipe are constrained in all translations. This boundary
condition effectively represents the pipe extending a substantial distance in both directions in which case no translation
movement would occur at this section’s boundary.
T o model the contact the top and bottom rigid surfaces are given displacement vectors of –2 inches., and +2 inches
respectively in the y-direction (lateral) in the first step. This causes the upper structure to be pushed onto the top of the
pipe section and the lower structure to be pushed up into the bottom of the pipe section a distance of 2 inches.&lt;/p&gt;
&lt;p&gt;379 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
Figure 9-35  Problem Geometry
Solving the Problem
The pipe crush example is designed to be constructed and setup using Patran and analyzed using MSC Nastran SOL 400.
The geometry is constructed and then property/load assignments are made in Patran. An MSC Nastran bulk data file
(.bdf ) is exported and then run with MSC Nastran. Results can be accessed in text form ( .f06 ) or from inside Patran
(using MASTER/DBALL ) and processed for viewing the pipe deformations and stresses.
Input Files Required
nug_11m.dat  – MSC Nastran input file containing pipe crush model.
Step-by-step instructions for creating and running the analysis on the pipe crush model can be accessed by linking to the
pipe_crush instructions file below. Once you are done creating the model and running the SOL 400 analysis, proceed by
accessing the results file to generate visual displays of the simulated deformations and stresses.
Highlighted Sections of the MSC Nastran Bulk Data File
The following sections of the MSC Nastran bulk data file highlight the SOL 400 results entries requested and adaptive load
incrementation input from the problem setup described above.
Output Requests
This section of the MSC Nastran .bdf  specifies the type of output requested.
$ NASTRAN input file created by the Patran 2013 64-Bit input file
$ translator on March     14, 2014 at 08:15:56.
$ Direct Text Input for Nastran System Cell Section
NASTRAN SYSTEM(316)=19
$ Replace the 19 in the above line with 7&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading380
Main Index
$ to get a restart DBALL instead of what is currently written
$ Direct Text Input for File Management Section
$ Direct Text Input for Executive Control
$ Complex Eigenvalue Analysis, Direct Formulation, Database
SOL 400
CEND
$ Direct Text Input for Global Case Control Data
TITLE = MSC.Nastran job created on 03-Mar-14 at 16:09:10
SUBCASE 1
STEP 1
SUBTITLE=step1
ANALYSIS = NLSTATIC
NLSTEP = 1
BCONTACT = ALLBODY
SPC = 2
LOAD = 1
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRAIN(SORT1,REAL,VONMISES,STRCUR,BILIN)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
NLSTRESS(SORT1)=ALL
BOUTPUT(SORT1,REAL)=ALL
$ Direct Text Input for this Subcase
BEGIN BULK
$ Direct Text Input for Bulk Data
PARAM   PRTMAXIM YES
BCPARA   0       NLGLUE  0
PARAM    LGDISP  1
NLSTEP   1      1.
GENERAL 10      1       10
ADAPT  .01     1.-5    .5       4      1.2      0
6      2.-4
MECH    PV                              PFNT
.2
$ Elements and Element Properties for region : pipe
PSHELL   1       1      .4       1               1
PSHLN1   1       1       0
C4      DCTN    LDK
$ Pset: &amp;ldquo;pipe&amp;rdquo; will be imported as: &amp;ldquo;pshell.1&amp;rdquo;
CQUAD4   1       1       2       21      20      1
The DISPLACEMENT , SPCFORCES , STRESS , NLSTRESS , and BOUTPUT  case control commands that follow lists
the individual output quantities. If nothing is specified, Patran includes a basic set of default output requests according to
the type of analysis.&lt;/p&gt;
&lt;p&gt;381 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
Material Entries
This section of the MSC Nastran .bdf  describes the material behavior for the pipe. The MAT1  entry defines the elastic
part of the material, and the MATEP entry describes the perfectly plastic behavior.
Contact Bodies
The BCBODY  entry describes the rigid surface as defined by NURBS geometry surfaces. The value of   “analytical form”
is 1 (used with all NURBS rigid geometry). Note the -2 describing the rigid body motion.
Contact BodiesMaterial Entries&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading382
Main Index
Inspecting the Results
Results Files
The.sts  file shown below reports on the status of the run. In this problem, the run completed without errors. Using the
adaptive load incrementation algorithm the solution was obtained with 20 load increments. One increment required 16
iterations to converge.  Also note under the sepa  column, that in eight increments, there was separation that resulted in
further iterations.
information summary of job:  ./pipecrush
version: MSC Nastran 2013.1.0, Built on Nov 18, 2013
date:     Mar 14, 2014; Day Time: 08:25:08
subcase      inc  cycl  sepa cut     cycl   split   separ   cut  rmesh time step&lt;br&gt;
/step #       #     #    #    #        #        #      #      #     #      of       &lt;br&gt;
1          |&amp;ndash;of the inc&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;of the analysis&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|  the inc   &lt;br&gt;
1        0     0    0    0        0       0       0     0     0  0.0000E+00&lt;br&gt;
1        1     5    1    0        5       0       1     0     0  1.0000E-02&lt;br&gt;
1        2     1    0    0        6       0       1     0     0  1.0000E-02&lt;br&gt;
1        3     2    0    0        8       0       1     0     0  1.2000E-02&lt;br&gt;
1        4     1    0    0        9       0       1     0     0  1.4400E-02&lt;br&gt;
1        5     1    0    0       10       0       1     0     0  1.7280E-02&lt;br&gt;
1        6     1    0    0       11       0       1     0     0  2.0736E-02&lt;br&gt;
1        7     2    0    0       13       0       1     0     0  2.4883E-02&lt;br&gt;
1        8     1    0    0       14       0       1     0     0  2.9860E-02&lt;br&gt;
1        9    16    3    0       30       0       4     0     0  3.5832E-02&lt;br&gt;
1       10     3    1    0       33       0       5     0     0  2.9860E-02&lt;br&gt;
1       11     2    1    0       35       0       6     0     0  3.5832E-02&lt;br&gt;
1       12     2    1    0       37       0       7     0     0  4.2998E-02&lt;br&gt;
1       13     3    1    0       40       0       8     0     0  5.1598E-02&lt;br&gt;
1       14     3    0    0       43       0       8     0     0  6.1917E-02&lt;br&gt;
1       15     8    2    0       51       0      10     0     0  7.4301E-02&lt;br&gt;
1       16     4    1    0       55       0      11     0     0  8.9161E-02&lt;br&gt;
1       17     3    1    0       58       0      12     0     0  1.0699E-01&lt;br&gt;
1       18     5    0    0       63       0      12     0     0  1.2839E-01&lt;br&gt;
1       19     5    0    0       68       0      12     0     0  1.2839E-01&lt;br&gt;
1       20     2    0    0       70       0      12     0     0  7.5565E-02&lt;br&gt;
Job ends with exit number :       1
total wall time:         15.00
total cpu  time:         15.15
exit DEFINITION &amp;mdash;&amp;ndash;
= 0  job terminates normally
= 1  job terminates abnormally (check Fatal Error Message in F06)
Adaptive Load Incrementation
The adaptive load incrementation algorithm adjusts the time step size according to the number of iterations required to
achieve convergence on the preceding increment. In this example, the 9th increment required 16 iterations to obtain
convergence. The time step between the 9th and 10th increment was subsequently adjusted downward and convergence
on the 10th increment was reduced to 3 iterations.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P21</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_021/</guid>
      <description>
        
        
        &lt;p&gt;383 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
Results Plots
Figure 9-36 shows the final deformed shape of the pipe section after 1 second of loading. Maximum total strains of 6.0E-2
inches develop in rigid body contact areas. Slightly higher total strains are evident on the lower pipe section in this region
due to the difference in radius of the external rigid body structures.
Plasticity has occurred over most of the model as shown in Figure 9-37. Maximum stresses reaching  4.25E+4 psi occur as
expected in the contact region. Also evident from this figure are high stresses equivalent to those in the contact region
occurring at the constrained boundary condition. This is a consequence of the boundary condition. In a full length pipe
section, we would not expect to see a stress concentrated in this area.
Figure 9-36  Plastic Strains Imposed on the Deformed Shape&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading384
Main Index
Figure 9-37  Deformed Shape and Stress Distribution
Examples
Below is an example for glued contact and contact. Other examples of contact can be found in the MSC User’s Guide.
Example 1: Glued Contact (s103perg.dat)
As an example of permanent glued contact in SOL 103, Figure 9-38 shows a deformable cylinder made up of 10 noded
TETRA  elements and a bracket structure also made up of 10 noded TETRA  elements sitting on top of the cylinder. We
wish to glue the two structures together and do a ground check on the structures before proceeding with further analysis.
The gluing is accomplished with the use of the BCONTACT=1  case control entry as shown in the abbreviated bulk data file.
The BCONTACT=1  case entry points to a BCTABLE  with ID=1 and one value for the NGROUP  field of the BCTABLE  entry
indicating that one pair of structures are to be glued.&lt;/p&gt;
&lt;p&gt;385 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
Figure 9-38  Glued Contact
SOL 103
CEND
TITLE = Gluing with TETRA10 with flat interface
$
echo = sort(except ctetra,grid,bsurf,pload4)
autospc(noprint) = yes
SUBCASE 1
SUBTITLE= Modal analysis
LABEL   = Ground Check for rigid body modes
BCONTACT = 1
METHOD=1
GROUNDCHECK(SET=ALL,DATAREC=YES)=YES
BEGIN BULK
PARAM,WTMASS,.00259
PARAM   PRTMAXIM NO
BCPARA,0,BIAS,0.0
$
$   1  &amp;gt;&amp;lt;   2  &amp;gt;&amp;lt;   3  &amp;gt;&amp;lt;   4  &amp;gt;&amp;lt;   5  &amp;gt;&amp;lt;   6  &amp;gt;&amp;lt;   7  &amp;gt;&amp;lt;   8  &amp;gt;&amp;lt;   9  &amp;gt;&amp;lt;  10  &amp;gt;
EIGRL    1       20
BCTABLE  1                       1
SECNDRY 3       0.0001  0.      0.      0.      1
1             &lt;br&gt;
PRIMARY 2
$ Deform Body Contact LBC set: cylinder
BCBODY   2       3D      DEFORM  2       0
BSURF    2       1       2       3       4       5       6       7
8       9       10      11      12      13      14      15
.
.
.
4960    4961    4962    4963    4964    4965    4966    4967
4968    4969    4970    4971    4972    4973
$ Deform Body Contact LBC set: bracket&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading386
Main Index
BCBODY   3       3D      DEFORM  3       0
BSURF    3       4974    4975    4976    4977    4978    4979    4980
4981    4982    4983    4984    4985    4986    4987    4988
.
.
.
9413    9414    9415    9416    9417    9418    9419    9420
9421    9422    9423    9424    9425    9426    9427    9428
$ Model definition follows:
$
GRID     1              .446672 2.59695 -.063605
GRID     2              .50144  -.5775  -.085552
GRID     3              .323733 2.69367 -.571285
.
.
.
$
PSOLID   1       1       0
$ Pset: “cylinder” will be imported as: “psolid.1”
CTETRA   1       1       617     616     615     614     621     622
623     618     619     620
CTETRA   2       1       613     612     611     610     627     628
629     624     625     626
CTETRA   3       1       617     616     609     608     621     633
634     630     631     632
.
.
.
$ Material Record : al
$   1  &amp;gt;&amp;lt;   2  &amp;gt;&amp;lt;   3  &amp;gt;&amp;lt;   4  &amp;gt;&amp;lt;   5  &amp;gt;&amp;lt;   6  &amp;gt;&amp;lt;   7  &amp;gt;&amp;lt;   8  &amp;gt;&amp;lt;   9  &amp;gt;&amp;lt;  10  &amp;gt;
MAT1     1      1.+7            .33     0.1
$
ENDDATA
The second line of entry on the BCTABLE  shows that the bracket structure is going to be the contact body or the touching
body. This is accomplished by the IDSLA1=3  field entry pointing to a BCBODY  entry with the same BID=3 .
Most importantly in field 8 of the “ SECNDRY ” entry record, a value of 1 for IGLUE  field is set. This entry is what allows
SOL 103 to perform a permanent glued contact.
The continuation entry after the “ SECNDRY ” entry shows a 1 value for ISEARCH . This tell the algorithm to search touching
to touched. The entry “ PRIMARY”  defines the cylinder as the touched body. Its IDMA1=2  field entry points to a
corresponding BCBODY  entry with BID=2  value.
The BCBODY  entries show that both structures are to be considered as deformable and that the 3-D contact algorithm is
to be used. (This is the only algorithm valid in linear analysis.) The BCBODY  entry with field BID=3  has its field 5 BSID
=3 which corresponds to a BSURF  bulk data entry of the same value for BSID . The BSURF  then lists the surface elements
of the bracket that can come into contact.
A similar BSURF  is present for the cylinder.
Note that the bulk data also contains a BCPARA,0  entry. The ID=0 on this entry sets parameter values for the contact prior
to any analysis beginning. If there is a BCONTACT=n  in any case control, MSC Nastran automatically searches for the
existence of a BCPARA,0  entry to initialize the contact algorithm.
The results for the model show that all GROUNDCHECK  requirements PASS  and the first 20 modes are shown as follows:&lt;/p&gt;
&lt;p&gt;387 Chapter 9: Contact
Elastic-Plastic Collapse of a Cylindrical Pipe under  External Rigid Body Loading
Main Index
*** USER INFORMATION MESSAGE 7570 (GPWG1D)
RESULTS OF RIGID BODY CHECKS OF MATRIX KGG      (G-SET)  FOLLOW:
PRINT RESULTS IN ALL SIX DIRECTIONS AGAINST THE LIMIT OF   2.674629E-03
DIRECTION        STRAIN ENERGY        PASS/FAIL
&amp;mdash;&amp;mdash;&amp;mdash;        &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-        &amp;mdash;&amp;mdash;&amp;mdash;
1               1.100904E-07          PASS
2               7.325037E-08          PASS
3               4.130997E-08          PASS
4               5.545296E-07          PASS
5               1.048790E-07          PASS
6               3.550209E-07          PASS
*** USER INFORMATION MESSAGE 7570 (GPWG1D)
RESULTS OF RIGID BODY CHECKS OF MATRIX KAA1     (A-SET)  FOLLOW:
PRINT RESULTS IN ALL SIX DIRECTIONS AGAINST THE LIMIT OF   2.674629E-03
DIRECTION        STRAIN ENERGY        PASS/FAIL
&amp;mdash;&amp;mdash;&amp;mdash;        &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-        &amp;mdash;&amp;mdash;&amp;mdash;
1               1.096489E-07          PASS
2               7.120107E-08          PASS
3               3.338044E-08          PASS
4               5.495763E-07          PASS
5               1.451471E-07          PASS
6               5.887807E-07          PASS&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                          R E A L   E I G E N V A L U E S
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;MODE    EXTRACTION      EIGENVALUE            RADIANS             CYCLES            GENERALIZED         GENERALIZED
NO.       ORDER                                                                       MASS              STIFFNESS
1         1       -3.343832E-05        5.782588E-03        9.203274E-04        1.000000E+00       -3.343832E-05
2         2       -1.705077E-05        4.129258E-03        6.571918E-04        1.000000E+00       -1.705077E-05
3         3       -1.452048E-06        1.205010E-03        1.917832E-04        1.000000E+00       -1.452048E-06
4         4        2.856250E-06        1.690044E-03        2.689789E-04        1.000000E+00        2.856250E-06
5         5        1.440756E-05        3.795729E-03        6.041091E-04        1.000000E+00        1.440756E-05
6         6        2.289412E-05        4.784780E-03        7.615214E-04        1.000000E+00        2.289412E-05
7         7        6.371218E+07        7.981991E+03        1.270373E+03        1.000000E+00        6.371218E+07
8         8        4.260703E+08        2.064147E+04        3.285192E+03        1.000000E+00        4.260703E+08
9         9        1.158678E+09        3.403937E+04        5.417533E+03        1.000000E+00        1.158678E+09
10        10        1.949990E+09        4.415869E+04        7.028074E+03        1.000000E+00        1.949990E+09
11        11        4.246696E+09        6.516668E+04        1.037160E+04        1.000000E+00        4.246696E+09
12        12        4.305021E+09        6.561266E+04        1.044258E+04        1.000000E+00        4.305021E+09
13        13        4.692808E+09        6.850407E+04        1.090276E+04        1.000000E+00        4.692808E+09
14        14        6.424801E+09        8.015486E+04        1.275704E+04        1.000000E+00        6.424801E+09
15        15        7.120649E+09        8.438394E+04        1.343012E+04        1.000000E+00        7.120649E+09
16        16        9.036405E+09        9.506001E+04        1.512927E+04        1.000000E+00        9.036405E+09
17        17        9.057384E+09        9.517029E+04        1.514682E+04        1.000000E+00        9.057384E+09
18        18        9.837994E+09        9.918666E+04        1.578605E+04        1.000000E+00        9.837994E+09
19        19        1.080527E+10        1.039484E+05        1.654390E+04        1.000000E+00        1.080527E+10
20        20        1.156105E+10        1.075223E+05        1.711271E+04        1.000000E+00        1.156105E+10&lt;/p&gt;
&lt;p&gt;1                                        * * * END OF JOB * * *&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Numerical Procedures388
Main Index
Numerical Procedures
Lagrange Multipliers
In performing contact analyses, you are solving a constrained minimization problem where the constraint is the ‘no
penetration’ constraint. The Lagrange multiplier technique is the most elegant procedure to apply mathematical constraints
to a system. Using this procedure, if the constraints are properly written, overclosure or penetration does not occur.
Unfortunately, Lagrange multipliers lead to numerical difficulties with the computational procedure as their inclusion
results in a nonpositive definite mathematical system. This requires additional operations to insure an accurate, stable
solution which leads to high computational costs. Another problem with this method is that there is no mass associated
with the Lagrange multiplier degree of freedom. This results in a global mass matrix which cannot be decomposed. This
precludes the used of Lagrange multiplier techniques in explicit dynamic calculations which are often used in crash
simulations. The Lagrange multiplier technique has often been implemented in contact procedures using special interface
elements such as the SOL 400 gap element. This facilitates the correct numerical procedure, but puts a restriction on the
amount of relative motion that can occur between bodies. The use of interface elements requires an apriori knowledge of
where contact occurs. This is unachievable in many physical problems such as crash analysis or manufacturing simulation.
Penalty Methods
The penalty method or its extension, the Augmented Lagrangian method, is an alternative procedure to numerically
implement the contact constraints. Effectively, the penalty procedure constrains the motion by applying a penalty to the
amount of penetration that occurs. The penalty approach can be considered as analogous to a nonlinear spring between the
two bodies. Using the penalty approach, some penetration occurs with the amount being determined by the penalty
constant or function. The choice of the penalty value can also have a detrimental effect on the numerical stability of the
global solution procedure. The penalty method is relatively easy to implement and has been extensively used in explicit
dynamic analysis although it can result in an overly stiff system for deformable-to-deformable contact since the contact
pressure is assumed to be proportional to the pointwise penetration. The pressure distribution is generally oscillatory.
Hybrid and Mixed Methods
In the hybrid method, the contact element is derived from a complementary energy principle by introducing the continuity
on the contact surface as a constraint and treating the contact forces as additional elements. Mixed methods, based on
perturbed Lagrange formulation, usually consist of pressure distribution interpolation which is an order less than the
displacement field, have also been used to alleviate the difficulties associated with the pure Lagrange method.
Direct Constraints
Another method for the solution of contact problems is the direct constraint method. In this procedure, the motion of the
bodies is tracked, and when contact occurs, direct constraints are placed on the motion using boundary conditions – both
kinematic constraints (MPC and SPC) on transformed degrees of freedom and nodal forces. This procedure can be very
accurate if the program can predict when contact occurs. This is the procedure that is implemented in SOL 400 when using&lt;/p&gt;
&lt;p&gt;389 Chapter 9: Contact
Implementation of Constraints in Node-to-Segment
Main Index
the node-to-segment method. No special interference elements are required in this procedure and complex changing
contact conditions can be simulated since no a priori knowledge of where contact occurs is necessary.
Automatic Penetration Checking Procedure
To detect contact between bodies whose boundaries are moving towards each other, an automatic penetration checking
procedure is available. This procedure significantly increases accuracy and stability for models in which boundary nodes are
displacing significantly. Typical examples include metal forming processes (sheet forming and forging), highly deformable
elastomeric models (rubber boots), and snap-fit problems (inserting a key into a lock).
The automatic penetration checking procedure is automatically activated if the adaptive loading procedure is selected. If
the automatic penetration checking procedure is selected for these two options, a different procedure, as described below,
is used instead.
From a computational perspective, the automatic penetration checking procedure detects penetration each time
displacements are updated.
For implicit analysis, this typically happens after a matrix solution which produces a change in the displacements due to a
change in applied loads and internal forces. The procedure detects nodes traversing a contact boundary due to the change
in displacements. If at least one node penetrates a contact surface, a scale factor is applied to the change in displacements
such that the penetrating nodes are moved back to the contact surface.
The automatic penetration checking procedure can, therefore, be considered to be a type of a line search. The procedure
also looks at the magnitude of the change in displacement of nodes which already are contacting and not necessarily
penetrating. Using stability considerations, the scale factor calculated above may be further modified. In addition, for nodes
on a contact boundary which are not yet contacting, a similar procedure is followed to enhance stability.
Because the procedure can reduce the change in displacements, it may require more iterations to complete an increment. It
is important to ensure that the maximum allowable number of iterations to complete an increment is set to a sufficiently
large value. When the adaptive loading procedure is used, or when the fixed time stepping procedure is used with automatic
restarting, the increment automatically restarts if the maximum allowable number of iterations is exceeded. In the case of
the adaptive loading procedure, the time step is modified.
When dynamics is used, the above procedure is not available. Instead, penetration is checked for when convergence is
achieved, usually after multiple iterations.
Implementation of Constraints in Node-to-Segment
For contact between a deformable body and a rigid surface, the constraint associated with no penetration is implemented
by transforming the degrees of freedom of the contact node and applying a boundary condition to the normal displacement.
This can be considered solving the problem:Notes:  The automatic penetration checking procedure is always used with the NLSTEP  bulk data entry.
The arc length methods are not available for general  contact simulation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Implementation of Constraints in Node-to-Segment390
Main Index
where  represents the nodes in contact which have a local transformation, and b represents the nodes not in contact and,
hence, not transformed. Of the nodes transformed, the displacement in the normal direction is then constrained such that
is equal to the incremental normal displacement of the rigid body at the contact point.
Figure 9-39  Transformed System (2-D)
As a rigid body can be represented as either a piecewise linear or as an analytical (NURB) surface, two procedures are used.
For piecewise linear representations, the normal is constant until node P comes to the corner of two segments as shown in
Figure 9-40. During the iteration process, one of three circumstances occur. If the angle is small (smooth  &amp;lt; &amp;lt;smooth ),
the node P slides to the next segment. In such a case, the normal is updated based upon the new segment. If the angle  is
large (&amp;gt;smooth  or  &amp;lt; smooth ) the node separates from the surface if it is a convex corner, or sticks if it is a concave
corner. The value of smooth is important in controlling the computational costs. A larger value of smooth  reduces the
computational costs, but might lead to inaccuracies. The default values are 8.625° for 2-D and 20° for 3-D.
Figure 9-40  Corner Conditions (2-D)
In 3-D, these corner conditions are more complex. A node (P) on patch A slides freely until it reaches the intersection
between the segments. If it is concave, the node first tries to slide along the line of intersection before moving to segment
B. This is the natural (lower energy state) of motion.
These corner conditions also exist for deformable-to-deformable contact analysis. Because the bodies are continuously
changing in shape, the corner conditions (sharp convex, smooth or sharp concave) are continuously being re-evaluated.KaˆaˆKaˆb
KbaˆKbbuaˆ
ub faˆ
fb=
aˆ
uaˆn
nt
P

Convex Corner Concave CornerP&lt;/p&gt;
&lt;p&gt;391 Chapter 9: Contact
Implementation of Constraints in Node-to-Segment
Main Index
When a rigid body is represented as an analytical surface, the normal is recalculated at each iteration based upon the current
position. This leads to a more accurate solution, but can be more costly because of the NURB evaluation.
Figure 9-41  Corner Conditions (3-D)
When a node of a deformable body contacts a deformable body, a multipoint constraint (MPC) is automatically imposed.
Recalling that the exterior edges (2-D) or faces (3-D) of the other deformable bodies are known, a constraint expression is
formed. For 2-D analysis, the number of retained nodes is three – two from the edge and the contacting node itself. For 3-
D analysis, the number of retained nodes is five – four from the patch and the contacting node itself. The constraint
equation is such that the contacting node should be able to slide on the contacted segment, subject to the current friction
conditions. This leads to a nonhomogeneous, nonlinear constraint equation. In this way, a contacting node is forced to be
on the contacted segment. This might introduce undesired stress changes, since a small gap or overlap between the node
and the contacted segment will be closed. During initial detection of contact (increment 0), the stress-free projection option
avoids those stress changes for deformable contact by adapting the coordinates of the contacting nodes such that they are
positioned on the contacted segment. This stress -free projection can be activated using the BCTABLE  entry. A similar
option exists for glued contact; however, in this case, overlap will not be removed.
During the iteration procedure, a node can slide from one segment to another, changing the retained nodes associated with
the constraint. A recalculation of the bandwidth is automatically made. Because the bandwidth can radically change, the
bandwidth optimization is also automatically performed.
A node is considered sliding off a contacted segment if is passes the end of the segment over a distance more than the contact
tolerance. As mentioned earlier, the node separates from the contacted body if this happens at a convex corner. For
deformable contact, this tangential tolerance at convex corners can be enlarged by using the delayed sliding off option
activated via the BCTABLE  bulk data entry.
Treatment of MPC Equations
The MPC equations that can arise as a result of the contact conditions are imposed with the help of Lagrange multipliers.
This is relatively easy, since the heat transfer MPC equations are all linear of the form:A
B
P
P&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Implementation of Constraints in Node-to-Segment392
Main Index
(9-20)
For each MPC constraint, an additional Lagrange multiplier degrees of freedom is created. The constraint is furthermore
augmented with a penalty term. The system matrix contribution for this constraint becomes:
, (9-21)
where p is the penalty factor used in the constraint.  The associated incremental degrees of freedom are:
,
where  is the Lagrange multiplier degree of freedom.  The residual vector contribution for this constraint becomes:
(9-22)
When a grid touches a rigid body that has no scalar point associated with it, the SPCD-like constraint is simulated by a
simple MPC equation with a non-homogeneous term (Cnon). In this MPC, there are no independent grids.
g = TA - TBODY  = 0 (9-23)
The iteration process repeatedly solves for:
dTA = -g = - (TA- TBODY )= Cnon (9-24)
and  is the trivial unit vector with one component, so computing  and  becomes almost trivial.
Lagrange Multipliers and Solution of Linear Equations
The introduction of Lagrange multipliers may lead to numerical problems with the default MSCLDL sparse equation
solver. If the maximum pivot is a large number, then use PARAM,LMT2MPC,1 . The Pardiso sparse solver is activated
using the sparse solver executive command does not have these numerical problems.gT 11–N–TA
TB1
.
TBNHMPCT= = T 0= .
.
.
KMPCpHMPCHMPCTHMPCT
HMPCT0=
dT
d
RMPCpg+HMPC–
g–=
HMPCKMPCRMPC&lt;/p&gt;
&lt;p&gt;393 Chapter 9: Contact
Segment-to-Segment Contact
Main Index
Segment-to-Segment Contact
Instead of using automatically generated multi-point constraint equations to enforce the contact constraints in a point -wise
manner, the segment-to-segment contact algorithm tries to enforce the contact constraints on the common area of
contacting bodies. The methodology used is that of augmented Lagrangians, which can be seen as a combination of a
penalty method and a Lagrange multiplier method. In contrast to a Lagrange multiplier method, there are no extra degrees
of freedom in the system of equations to be solved, but there may be extra iterations needed to improve the fulfillment of
the contact constraints. An important parameter in the algorithm is the augmented Lagrange penalty factor. Typically, a too
high value of this factor can cause an ill-conditioned stiffness matrix, where a too small value can cause a relatively large
penetration after the first iteration in the Newton-Raphson process and many iterations to remove this penetration. The
default value of the penalty factor is determined by the program, but the BCPARA  and BCTABLE  bulk data entries allow
you to overrule the default value. The default value of the penalty factor En depends on the body stiffness of the two contact
bodies involved and a characteristic length (note that the dimension of the penalty factor is force per cubic length). The
body stiffness is either defined by the average trace of the initial stress-strain law of the elements defining the two contact
bodies or by the average bulk modulus for (nearly) incompressible rubber materials, whichever of the two is the largest. For
continuum elements, the characteristic length is given by one half of the average length of all the edges being part of the
contact boundary. For shell elements, the characteristic length is given by half of the average thickness of all the shell
elements being part of a contact body. When there is contact between a solid and a shell element, then the characteristic
length is defined by the shell element. If there is contact between the deformable bodies k and l, with body stiffnesses Sk
and Sl, and the characteristic length of the model is , then the default value of En is given by:
In case of contact with a rigid body, the default value of En is related to the deformable body k only and is given by:
Since the contact constraints are generally fulfilled in an iterative fashion, a threshold value of the penetration distance is
needed to decide whether or not the augmentation procedure will be invoked. Like the penalty factor discussed above, this
penetration distance beyond which an augmentation is applied has a default value determined by the program. but can also
be user-defined via the BCPARA  and BCBODY  bulk data entries. The default value is based on the characteristic length
according to:
As for the augmentation procedure, the following options are available:
No augmentation. This results in a pure penalty method and is recommended for most analyses, since it gives
reasonably accurate results in a relatively small number of iterations.
Augmentation based on a constant penetration field. This is the recommended augmentation procedure for linear
finite elements.L
En0.5SkSl+
L&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
En1000Sk
L&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
L
aug0.001L =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact394
Main Index
Augmentation based on a (bi-) linear penetration field. This augmentation procedure should be used only for
quadratic finite elements.
It is also possible to let the program decide on the use of a constant or (bi-) linear penetration field, based on the element
types involved (linear or quadratic).
Contact Tolerance Distanc e – The contact tolerance difference ( ERROR  – entered on the BCPARA  or BCTABLE ) behaves
in the same manner for both procedures, but in the case of STS it has two additional consequences:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the Sliding Limit ( SLDLMT ) is not entered on the BCPARA  option, then SLDLMT  will be 5* ERROR  and, for
small values of ERROR , this may unnecessarily result in the message “Recalculating Segments”, thus increasing the
computational costs.
2.If the penetration distance for which Augmentation is triggered is not entered, then this distance is the value of
ERROR/1000 , which will be used for deformable-to-deformable contact (only if the augmentation method is
requested).
Searching Order  – When using the STS contact algorithm, the search order is virtually immaterial, and the value of
ISEARCH  on the BCTABLE  bulk data entry and ISTYP  on the BCBODY  bulk data entry is ignored.
Because the searching order is not used with STS, the value of the Hard-Soft ratio ( HARDS  on the BCTABLE  bulk data
entry) is also ignored.
Large Deformation/Sliding  – Large sliding behavior is treated differently using NTS and STS. The NTS algorithm always
assumes finite sliding.
Numerical Procedures  – The S2S method has a few additional parameters that govern the numerical implementation.
Penalty Factors  – The constraint in the normal direction and the tangential direction (if friction is present) are imposed
using a penalty method or an Augmented Lagrange method. In both cases, penalty factors are required for the normal and
the shear behavior. These values are entered as PENALT  and TPENALT  on the BCPARA  or the BCTABLE  bulk data entry.
It is not necessary to enter these values, though it may be appropriate if the default values lead to unsatisfactory behavior.
In general, a too small value of the normal penalty value will lead to penetration, while a too large value will lead to an
increased number of iterations and possibly a non-converging solution. The default value of the normal penalty is based
upon the material behavior and a characteristic length. For shell contact, the default penalty maybe too large, which results
in an overly stiff response or in poor convergence behavior; in such cases, it is recommended to reduce the magnitude. Note
that the penalty factors have units of FL-3 .
Augmentation  – T o minimize the amount of penetration associated with too low Penalty Factors the Augmentation
procedure may be used. You can control this for deformable-to-deformable contact using the AUGMENT  parameter on the
BCPARA  bulk data entry. Note that for deformable-to- rigid contact augmentation is always included. The values of
AUGMENT  that can be used are&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;395 Chapter 9: Contact
Segment-to-Segment Contact
Main Index
The augmentation is not activated unless the amount of the penetration is greater than AUGDIST  (entered on the BCPARA&lt;br&gt;
or BCTABLE  bulk data entry). The default is the value of the contact tolerance distance divided by 1000. In general, this
is a very small value.
When friction is included in the STS contact algorithm, the Sticking Stiffness is given by TPENALT  on the BCPARA  bulk
data entry. If TPENALT  is not given, PENALT/1000  is used. If PENALT  is also not given, then it will use the default value
of PENALT  (see above) divided by 1000 will be used.
Alternate Defaults  – For some recent problems it has been determined that better default values of the penalty should be
used. There may be activated by using System Cell 664 = 1.
This has the effect of forming a penalty factor based upon contact pairs as opposed to global behavior
When deformable-to-deformable contact occurs use the smallest penalty factor as opposed to the average penalty.
For rubber materials do not incorporate the bulk modulus, if the bulk modulus is very large.
Contact/Separation Output – The contact behavior for the STS procedure is based upon a detection and separation of a
continuous set of polygons on the surface as compared to the NTS procedure which detects nodes to segments. The result
is that the contact status generally appears to be both larger and smoother using the STS method. When considering
separation, iterations may occur when any pair of polygons separate and this separation may cause the convergence criteria
to be not fulfilled. The fact that a polygon point has a pulling force which leads to separation causes a change in the residual
load vector and hence may cause the convergence criteria not to be fulfilled.
Since separation of polygon points will not necessarily cause extra iterations, the number of separations using the STS
procedure is not output to the status file ( jid.sts ).
Compatibility  – The contact capability in MSC Nastran is undergoing active enhancements with each release. Extensive
testing is being performed to ensure both an accurate and computationally efficient solution. The consequences are that
unlike linear elastic analysis, the numerical results may change from release-to-release. System cells may be provided to
obtain backward compatibility, but that is not always achievable.
Both for the node-to-segment as well as the segment-to-segment contact algorithm, an optimization technique has been
introduced, which adjusts the element thickness and offset (if defined) at hard edges in order to get a correct description of
the top and bottom surfaces.Value of Augment Meaning
0 No Augmentation for Deformable-to-deformable
1 Use Constant Lagrange multiplier field for linear elements and Bi-linear Lagrange multiplier for
higher-order elements.
2 Constant Lagrange multiplier field
3 Bi-linear Lagrange multiplier&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory396
Main Index
Segment-to-Segment Contact Theory
For a set of deformable contact bodies, the virtual work equation commonly used as the basis for the derivation of the
standard set of equations to be solved within a nonlinear structural finite element analysis can symbolically be written as:
G(u, u) = 0 (9-25)
where u is the displacement field and u the kinematically admissible variation of this field. Contact conditions can be
incorporated by adjusting this virtual work equation by two surface integrals:
(9-26)
Here is that part of boundary of the bodies being in contact and the subscript n is used to indicate the normal direction
to the contact boundary, where the subscript t indicates the tangential direction. The function gn is called a gap function
and expresses the distance between a point and its closest point projection on the contact boundary. If gn &amp;gt; 0, a point is
outside the contact boundary, if gn = 0, a point is on the contact boundary and if gn &amp;lt; 0, a point would be beyond the
contact boundary, which is physically inadmissible. The Lagrange multiplier n represents the contact normal stress.
Similarly, gt is the tangential gap vector and t is the tangential stress vector.
The tangential or frictional behavior is assumed to be governed by Coulomb’s friction law, which, as already stated before
for node-to-segment contact, can be expressed as:
(9-27)
where is the friction coefficient;  &amp;lt; 0 corresponds to sticking and  = 0 corresponds to slipping.
Since the gap functions gn and gt depend on the geometry of the bodies (defining the normal and tangential vectors) and
the displacement field u, the contact part of equation (9-26) can be expressed as:
(9-28)
Since equation (9-26) has to be valid for all kinematically admissible variations u, the contact contribution to the
equilibrium equation is given by:
(9-29)
The overall solution procedure will be based on an augmented Lagrangian approach. It is assumed that the solution at step&lt;br&gt;
n-1 is known and that the solution at step n has to be determined in an iterative fashion, using a Newton-Raphson process.
Based on the iterative displacement solution obtained at iteration i, the following trial solutions for the Lagrange multipliers
are introduced (note that the superscript n to indicate the step number is omitted to simplify the notation):
; (9-30)GuungntTgtd
+d
+ 0=
tn0 – =
Gcuungn
u&amp;mdash;&amp;mdash;&amp;ndash;ud
tTgt
u&amp;mdash;&amp;mdash;-ud
+ =
FcTngn
u&amp;mdash;&amp;mdash;&amp;ndash;d
tTgt
u&amp;mdash;&amp;mdash;-d
+ =
ntrialpni1–Engni+ = ttrialtti1–Etgti+ =&lt;/p&gt;
&lt;p&gt;397 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
in which pn and tt are fixed estimates of n  and t , En and Et are penalty factors for the contact behavior in the normal and
tangential directions (actually Et is a diagonal matrix with the penalty factor Et on the diagonal) and gn and gt follow from
the global iterative displacement solution. The default values of the penalty factors are derived from the contact body
properties (this will be discussed later on), but can also be user defined.
Looking first at contact in the normal direction, it can easily be seen that if a contact condition is exactly fulfilled, then the
gap function  and . The idea of the augmentation procedure is to better approximate the contact
conditions by adjusting the contact normal stress. The evolution of the contact normal stress during the Newton-Raphson
process is illustrated in Figure 9-42. The first displacement solution is obtained using  (which initially can be zero,
but in an arbitrary increment is given by the value at the end of the previous increment). Given the displacement solution,
the gap function  is calculated and the contact normal stress update is given by . This new contact
normal stress is used in a subsequent iteration. If the augmentation is not performed, then the method reduces to a penalty
method with a constant penalty factor En. As for the contact conditions in the tangential direction, the augmentation
procedure can be applied also if there is sticking contact. Then the sticking conditions (no relative tangential displacements)
will be better approximated by adjusting the tangential stresses (see Figure 9-43).
Figure 9-42  Updating Contact Normal Stress according to the Augmented Lagrange Procedure
Figure 9-43  Updating Contact Friction Stress according to the Augmented Lagrange Procedure (2-D)
Within the Newton-Raphson solution procedure, not only the contact contributions to the global force vector (as given by
equation (9-29)), but also the contributions to the global stiffness matrix are needed:
(9-31)gni0=ntrialpni1–=
pnpn0=
gn1pn1pn0Engn1+ =
gnpn
En atan
gn1gn2pn1pn2exact value of pn
pn0
Kc
u&amp;mdash;&amp;mdash;Fc=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory398
Main Index
Further evaluation of equations (9-29) and (9-31) depends on whether there is sticking or slipping. At the very beginning of
an analysis, an assumption has to be made (typically sticking), but after having determined the trial solutions, it is possible
to check if there will be sticking or slipping:
; : sticking; : slipping (9-32)
and previously made assumptions on the contact state can be adjusted accordingly. Now the states of sticking and slipping
will be discussed separately.
In case of sticking, the predicted solution for the Lagrange multipliers is:
; (9-33)
For the contact contributions to the global stiffness matrix, the second order derivatives of the gap functions with respect
to the displacements are neglected, so that the following terms are needed:
; (9-34)
In case of slipping, the tangential stresses need to be adjusted in order to agree with Coulomb’s friction law:
; (9-35)gttt
Et atan
tt0tt1
gt1gt2n
n–
trialttrialntrial– = trial0 trial0
nnntrial=tnttrial=
n
u&amp;mdash;&amp;mdash;&amp;ndash; Engn
u&amp;mdash;&amp;mdash;&amp;ndash; =t
u&amp;mdash;&amp;mdash;- Etgt
u&amp;mdash;&amp;mdash;- =
nnntrial=tnttrial
ttrial&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ntrial=&lt;/p&gt;
&lt;p&gt;399 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
and the contact contribution to the global stiffness matrix now involves also changes in contact in the normal direction:
;
(9-36)
The first term in the expression for the frictional behavior in equation (9-36) results in a non-symmetric stiffness matrix. If
the assumption is made that the contact normal stress is constant during a Newton-Raphson iteration, then this term
cancels and a symmetric matrix is retained. Using a non-symmetric matrix will significantly increase the memory
requirements. It should be noted that a non-symmetric matrix may only have impact on the convergence behavior; if
convergence will be obtained, the final solution won’t be affected.
In Force Vector and Stiffness Matrix Contribution  below, it is shown how the equation (9-29) is numerically integrated in a 2 -D or
3-D contact analysis.
Contact Detection
As also shown in Figure 9-3, each contact segment will get a number of auxiliary points. These auxiliary points are only used
during the contact detection phase of the analysis and they are defined at fixed positions on the contact segments. Since the
auxiliary points are defined on a per segment basis, there are multiple points with possibly different normal vectors at
adjacent contact segments. Especially at sharp corners, this allows for multi-body contact in such a way that each (part of
a) segment can touch only one other segment.
The actual contact detection phase consists of two passes. During the first pass, there is a check whether an auxiliary point
is sufficiently close to a contact segment and if the corresponding normal vectors are “almost opposite”. Hence, there is a
distance check followed by a direction check (see Figure 9-44). During the distance check, the distance between an auxiliary
point and its closest point projection on a contact segment is calculated and compared with a reference value. This reference
value is determined by the contact tolerance and the bias factor B, where 0 ≤ B &amp;lt; 1. The default contact tolerance is
calculated by the program as the smaller of 5% of the smallest element side or 25% of the  smallest (beam or shell) element
thickness, based on all the elements defined in any contact body. Alternatively, you can define the contact tolerance. The
default bias factor is zero. A nonzero bias factor, entered by you, implies that the outside zone becomes smaller and the
inside zone larger and usually avoids unnecessary iterations following from physically unrealistic contact detection. If the
position of an auxiliary point is xa and that of its closest point projection on a segment S of contact body is xS, then the n
u&amp;mdash;&amp;mdash;&amp;ndash; Engn
u&amp;mdash;&amp;mdash;&amp;ndash; =t
u&amp;mdash;&amp;mdash;-ttrial
ttrial&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ntrial
u&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-ntrial
u&amp;mdash;&amp;mdash;ttrial
ttrial&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= =
ttrial
ttrial&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Engn
u&amp;mdash;&amp;mdash;&amp;ndash;ntrial
ttrial&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Et1t1trial2
ttrial2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; ––t1trialt2trial
ttrial2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
–t1trialt2trial
ttrial2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1t2trial2
ttrial2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –gt
u&amp;mdash;&amp;mdash;-
          &lt;/li&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory400
Main Index
distance check is passed if  when the auxiliary point lies outside the contact body, and if
, when the auxiliary point lies inside the contact body. If the distance check is passed, then the
direction check is performed. This direction check is passed if the angle between the normal vector at the auxiliary point
and the normal vector at the potentially contacted segment is larger than a threshold value , so . The
default value of  is 120°. The angle between the normal vectors is defined according to Figure 9-45. Once both the distance
and the direction check are passed, the corresponding segments are marked as a pair of potentially contacting segments and
for each of these pairs, the projection of one segment on the other is determined. In 2-D, this projection defines a polyline;
in 3-D, it defines a polygon. In Figure 9-46, a 2-D and a 3-D example is given. Each polyline/polygon has a number of
polygon/polygon points, which will serve as the basis for the numerical integration of equation (9-29). It should be noted
that the polyline/polygon points are not the same as the auxiliary points introduced before. The auxiliary points only serve
to find potential contact pairs, the polyline/polygon points characterize the actual contact area between such contact pairs.
Figure 9-44  Contact Detection, Phase 1: Distance And Direction Check
Figure 9-45  Definition of the Angle Between Normal Vectorsxaxs– 1B–
xaxs– 1B+
nans 
na1
na2
nsns1B+
1B–: closest point projection
Distance Check And Direction Check Passed Distance Check Passed, Direction Check Failed
na
nsnans&lt;/p&gt;
&lt;p&gt;401 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
Figure 9-46  Common Areas of Contact Segments: Polylines (Left) And Polygons (Right)
During the second pass of the contact detection phase, for each polyline/polygon point it is checked whether or not the
segments are locally in contact. This check is equivalent to the check which has been described above, so a distance check
followed by a direction check. At the end of this second pass, there is a set of polyline/polygon points being in contact and
representing the contact area.
Force Vector and Stiffness Matrix Contribution
The polyline/polygon points discussed above basically define a local connection between two contact segments. Indicating
such a point by a subscript i, the gap function gni can be evaluated as the normal displacement difference between a point
and its closest point projection on the contacted segment. Similarly, by looking at the tangential displacements, the gap
function gti can be evaluated. The displacement of a point on a contact segment is a function of the displacements and (in
case of shell elements) rotations of the nodes corresponding to that segment. By collecting all the nodal displacement and
rotation degrees of freedom in a vector U, the gap functions can be written as:
; (9-37)
Here, vector Gni and matrix Gti express the dependency of the normal and tangential displacements of a point on a contact
segment on the total set of degrees of freedom. In a similar way,  and  are used for the closest point projection of
this point on the contacted segment. It should be noted that, if applicable, Gni, , Gti and  also include the effect
of the shell thickness and shell offset vectors. Care has been taken to define them in such a way that they are able to represent
rigid body modes of structures being in contact without introducing spurious energies.
Equation (9-37) can be used to numerically evaluate equation (9-29). First, the contribution to the force vector is given by:
(9-38): polyline points
gniGniTG&amp;rsquo;niT– U = gtiGtiTG&amp;rsquo;tiT– U =
G&amp;rsquo;niG&amp;rsquo;ti
G&amp;rsquo;niG&amp;rsquo;ti
gn
u&amp;mdash;&amp;mdash;&amp;ndash;T
nd
gt
u&amp;mdash;&amp;mdash;-T
td
+ GniG&amp;rsquo;ni– niiGtiG&amp;rsquo;ti– tii
i1=N
+
i1=N
=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory402
Main Index
in which N is the total number of polyline/polygon points, ni and ti are the estimated contact normal and tangential
stresses in polyline/polygon point i (see equations (9-33) and (9-35)) and i is the area corresponding to this point. Note
that a possible dependency of Gni, , Gti and  on U has been neglected.
Next, for sticking contact, the contribution to the global stiffness matrix is:
(9-39)
Finally, for slipping contact the contribution is found to be:
(9-40)
The right choice of the penalty factors is important to get accurate results in an acceptable number of iterations. If the
penalty factor for normal contact, En, is too small, then there will be a relatively large amount of penetration, which has to
be removed by the augmentation process outlined above. However, if the penalty factor is small, then the first order
correction process illustrated in Figure 9-43 slowly converges. On the other hand, if the penalty factor is too large, the overall
system of equations may be ill-conditioned and a non-smooth contact stress field may be found.G&amp;rsquo;niG&amp;rsquo;ti
gn
u&amp;mdash;&amp;mdash;&amp;ndash;T
Engn
u&amp;mdash;&amp;mdash;&amp;ndash;gt
u&amp;mdash;&amp;mdash;-T
Etgt
u&amp;mdash;&amp;mdash;-d
+d
GniG&amp;rsquo;ni– EniGniTG&amp;rsquo;niT– i
i1=N
=
GtiG&amp;rsquo;ti– EtiGtiTG&amp;rsquo;tiT– i
i1=N
+
gn
u&amp;mdash;&amp;mdash;&amp;ndash;T
Engn
u&amp;mdash;&amp;mdash;&amp;ndash;gn
u&amp;mdash;&amp;mdash;&amp;ndash;T
EntT
t&amp;mdash;&amp;mdash;&amp;mdash;gt
u&amp;mdash;&amp;mdash;-gt
u&amp;mdash;&amp;mdash;-Tn
t&amp;mdash;&amp;mdash;&amp;mdash;Et1t12
t2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; ––t1t2
t2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
–t1t2
t2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;t22
t2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;gt
u&amp;mdash;&amp;mdash;-d
+d
+d
=
GniG&amp;rsquo;ni– EniGniTG&amp;rsquo;niT– i
i1=N
GniG&amp;rsquo;ni– EnitiT
ti&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;GtiTG&amp;rsquo;tiT– i
i1=N
+ + =
GtiG&amp;rsquo;ti– n
t&amp;mdash;&amp;mdash;&amp;mdash;Et1t1i2
ti2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- ––t1it2i
ti2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
–t1it2i
ti2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1t2i2
ti2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- –GtiTG&amp;rsquo;tiT– i
i1=N
+&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P22</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_022/</guid>
      <description>
        
        
        &lt;p&gt;403 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
The default value of the penalty factor Eni depends on the body stiffness of the two contact bodies involved and a
characteristic length (note that the dimension of the penalty factor is force per cubic length). The body stiffness is either
defined by the average trace of the initial stress-strain law of the elements defining the two contact bodies or by the average
bulk modulus for (nearly) incompressible rubber materials, whichever of the two is the largest. For continuum elements,
the characteristic length is given by one half of the average length of all the edges being part of the contact boundary. For
shell elements, the characteristic length is given by half of the average thickness of all the shell elements being part of a
contact body. When there is contact between a solid and a shell element, then the characteristic length is defined by the
shell element. If polyline/polygon point i defines contact between the deformable bodies k and l, with body stuffiness Sk
and Sl, and the characteristic length of the model is , then the default value of Eni is given by:
(9-41)
In case of contact with a rigid body, the equations shown before can be applied with minor modifications. First, the
displacements  and  of the closest point projection directly follow from the motion of the rigid body. Second,
the issue of an ill-conditioned system does not easily occur and the default penalty factor can be chosen to be larger. Since
there is no body stiffness associated with a rigid body, the default value of Eni  is related to the deformable body only and
given by:
(9-42)
For tangential contact, the default penalty factor Eti is related to the penalty factor Eni according to:
Eti =Eni (9-43)
where  = 1 × 10-3 for deformable contact and  = 1 × 10-6 for rigid contact.
As mentioned before, you can define the penalty factors. This can be done either globally via the BCPARA  bulk data entry
or per body combination via the BCTABLE /BCTABL1  bulk data entry. The penalty factors are by default printed in the
output file.
Iterative Penetration Checking and Contact Stress Update
After each solution in the global Newton-Raphson process, there is a check if the iterative displacement field would cause
penetration of contact bodies. This check involves first the auxiliary points on the contact segments not yet being marked
as contact pairs and next the polyline/polygon points not yet being in contact. The maximum amount of penetration at the
auxiliary and polyline/polygon points is computed and if this penetration is larger than the inside contact tolerance distance
(1+B ), then the entire iterative displacement solution is scaled back to avoid this penetration.L
Eni0.5SkSl+
L&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
G&amp;rsquo;niU G&amp;rsquo;tiU
Eni1000Sk
L&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory404
Main Index
Once the iterative displacement solution U i is known, the gap function can be updated with&lt;br&gt;
and , where the superscript i indicates the iteration number. The update of the contact normal stress
is given by:
(9-44)
Note that the last term in equation (9-44) results from the augmentation procedure.
Since there are in general more polyline/polygon points on a contact segment than there are nodes on such a segment,
enforcing a zero gap function everywhere would in general result in an over-constrained system. To this end, a reduction of
the penetration field has to be applied. The following options are available:
No augmentation. This results in a pure penalty method and is recommended for most analyses, since it gives
reasonably accurate results in a relative small number of iterations.
Augmentation based on a constant penetration field. This is the recommended procedure for linear finite
elements.
Augmentation based on a (bi-)linear penetration field. This procedure should be used only for quadratic finite
elements.
It is also possible to let the program decide which of the augmentation methods should be applied (constant or linear). Then
the choice is made based on the combination of elements corresponding to the contacting segments. It is noted that in case
of contact with a rigid body, the augmentation procedure is always applied.
In case of augmentation based on a constant penetration field, the average gap function per contact segment is determined
and applied to each polyline/polygon point corresponding to that segment.
In case of augmentation based on a (bi-)linear penetration field, a least squares method is used to determine the values of
the gap function in the corner nodes of the segment. Based on the position of a polyline/polygon point on this segment, a
(bi-)linear interpolation between the corner values then gives the local value in the point.
Since an exact fulfillment of a zero gap function is difficult to achieve, a threshold value is needed to determine whether or
not an extra iteration due to the augmentation procedure is needed. This penetration distance beyond which an
augmentation will be applied can be calculated by the program or entered by you. The default penetration distance beyond
which an augmentation will be applied is defined as:
(9-45)
where the characteristic length  is the same as used in equation (9-41). Similar to the penalty factor, you can define the
augmentation distance either globally for the analysis on the BCPARA  bulk data entry or per body pair on the
BCTABLE /BCTABL1  bulk data entry.
If an augmentation procedure is selected and the maximum penetration is beyond aug, then an extra Newton-Raphson
iteration will take place, as long as the maximum number of iterations has not been exceeded. If the maximum number of
iterations has been reached, then the program will continue with the next increment if the usual convergence criteria have gniiGiTG&amp;rsquo;iT–Ui=
gniignii1–gnii+ =
pniipnii1–EnigniiEnignii+ + =
aug0.001L =
L&lt;/p&gt;
&lt;p&gt;405 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
been fulfilled; so the analysis will not stop because of the augmentation procedure. In case of friction with augmentation,
the same logic is applied to the tangential behavior.
Separation
Since in each polyline/polygon point the contact normal stress is calculated, separation will always be based on stresses. By
default, if the contact normal stress is in tension, then the corresponding polyline/polygon point will separate, which
implies that this point will no longer contribute to the global stiffness matrix and force vector.
In order to speed up the separation process on a structural level, there is an extra check performed on a contact segment
basis. If there are points on a segment which separate, then the total contact normal force Fnt due to points on this segment
being in tension (negative) is compared with the total contact normal force Fnc due to points on this segment being in
compression (positive). These forces are obtained by integrating the contact normal pressure over the corresponding contact
area. If , then all the points on this segment will separate. This extra check is only active if the separation
stress is default (zero). As soon as you enter a nonzero separation stress, either globally for the analysis on the BCPARA  bulk
data entry or per body pair on the BCTABLE /BCTABL1  bulk data entry, this extra check is skipped.
Beam Contact
Beam contact can be easily analyzed using the segment-to-segment contact procedure. For the element stiffness and stress
recovery, the beam elements are used as is, but for contact purposes, the beams are exactly represented by internally
expanding them into three-dimensional  patches. The contact forces and constraints are automatically transferred from the
patches to the beam nodes.
For 3-D beam elements, the line representation of the beam contact body is automatically replaced by an expanded
representation of the beam contact body based off the section properties. All shapes of the PBARL and PBEAML  Bulk
Data entries are supported. In addition, PBAR  and PBEAM  are supported and replaced by rectangular or circular shapes
when the resultant beam values are equivalent to the rectangular shape or the circular shapes.
A sample expanded representation of nine beam contact bodies comprising of various beam sections is shown in Figure 9-47.
This expanded form is automatically created internally from the given section and orientation data.Fnc0.75Fnt&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory406
Main Index
Figure 9-47  Expanded Representation of Nine Beam Contact Bodies with Different Beam Sections
The following general points should be kept in mind for the expanded beam bodies:
The expanded beam representation is the only possible scheme available for 3-D beams in segment-segment
contact.
Applications of beam contact in the expanded mode include tube-tube contact (internal contact between beams),
beam-beam contact (external contact between beams), beam contact with solids, beam contact with shells, and
beam contact with rigid bodies. This form of beam contact can be used for statics and dynamics.
The expanded beam representation takes into account the current position of the beam based on nodal
coordinates, the beam cross-sectional properties, the beam orientation, and beam offsets at the nodes (if any).
Geometrically, beam patches are only used for contact detection, separation and penetration. Internal rigid links
are automatically generated from each beam node to the generated beam patch nodes. No additional degrees of
freedom are introduced and the movement of the beam patch nodes is completely based on the translations and
rotations of the parent beam nodes. The contact stiffness and forces are calculated at the patches and transferred to
the original beam nodes using the patch vectors.
BCPFLG is an optional Bulk Data entry to select faces of the cross section for the expanded beams in segment-
segment contact. Without this Bulk Data entry, all sections of beams are considered for the contact. This option
will help reducing the number of contact segments of beams and improve the simulation time performance.
For the contact at the tip of beams in the segment to segment contact, the cap of beams must be set ( IESCAP&lt;br&gt;
option in BCSCAP Bulk Data entry) .&lt;/p&gt;
&lt;p&gt;407 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
The distance tolerance calculation for the expanded beam sections incorporates two schemes. In the first, the
normal evaluation (similar to node-to-segment contact for beam elements) is done. In addition, a second
evaluation based on the detailed section properties is carried out. The minimum of the node-to-segment scheme
and the section property scheme is the final distance tolerance. The section property based distance tolerance
evaluation is based on 0.25*minimum of patch edge length and section thickness. Note that the minimum patch
edge length is relevant for all sections, but the minimum section thickness is only relevant for thin-walled sections
when both outer and inner patches are flagged to be created.
The local direction cosine matrix at each beam node is used to establish the 3-D patch vector directions. The
direction cosine matrix for each beam element comprises of the local Z axis along the beam element and the local
X-Y axes in the cross-sectional plane of the element. At each beam node, the nodal direction cosine matrix is
computed as the average of the matrices of two adjacent beam elements meeting at the node. This average
direction cosine matrix is established only if the angle between the local Z axes of the two elements and the angle
between the local X axes of the two elements is less than a certain value (160°).
Limitations of the expanded beam representation include the following:
•The beam cross-section does not change during the simulation. This means that while the beam patches can
undergo finite translations and rotations, the cross section does not change for large strains as well as contact
interference.
•Multiply connected beams are not possible. The analysis will continue with a warning but the neighbor
determination for each of the beams is based on the assumption of a singly connected beam with one neighbor
each at the start and end nodes of the beam element.
Interference Fit
This feature can be used to simulate situations where bodies with overlaps or gaps in the geometry are required to fit
together. Some examples of interference fit usage include spur gears that are mounted tightly on a shaft, couplings, collar
rings, tire mounted on wheel rim, bearing bushings in hubs, valve seats, rubber seals, bushings made of synthetic resin
pressed material, etc.
The interference fit capability is treated in MSC Nastran using the contact algorithm. The penetration associated with
interference fit can be much larger compared to traditional contact analysis. Ideally, interference fit computations are
performed in a separate load case, which might take more than a one increment. The user can control the number of
increments or time required to accomplish the fit. The user is equipped with many methods which can be adopted
depending on the geometry. There are four methods available in Nastran for the interference fit option. These are applicable
to both Node-to-Segment Contact (N2S) and Segment-to-Segment Contact (S2S). These methods are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Contact normal
2.Translation
3.Scaling
4.Automatic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory408
Main Index&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Contact Normal
This method is generally recommended for situations with small values of interference to be resolved along the normal
direction to the touched interface. The other methods are more suitable when the interference is large. In this case, the
nodes (N2S) or auxiliary points (S2S) of the touching body are projected in a direction normal to the segments of the
touched body. The individual touching entities are positioned at a certain distance (overclosure or gap) from the touched
surface along the normal of the touched surface. The user needs to provide this interference distance (CINTERF option in
BCONPRG card) which signifies the maximum overlap or gap between the bodies. This provided value is specified as a
negative value for an overlap and as a positive value for a gap. The detection algorithm works as follows:
(Overlap/Gap + Interference) at a node (Node to segment contact) or auxiliary point (Segment to segment contact) &amp;lt; D
(1+B) on the inside or &amp;lt; D (1-B) on the outside
where
D = regular distance tolerance and B = bias factor.
T o control the number of increments or time during which the interference fit is achieved, the user can optionally specify
a table in which the magnitude of interference distance is ramped down from the possible maximum value of interference
to zero. Interference can be gradually resolved. Note that if a clearance or overlap needs to be maintained for the entire job,
then the interference value needs to be maintained as a constant value in all the load cases of the job. This method may not
perform adequately when the interference distance is large – in this case, the touching entities may find multiple touched
segments within the given closures distance.
Methods 2 to 4 are more general and allow larger amounts of interference (overlap or gap) between the touching and
touched bodies. The general scheme for these methods is to internally compute an initial shift vector between the nodes of
the touching body and the segments of the touched body. This initial vector is also referred to as a “pseudo displacement
vector”. The following points should be noted about the pseudo displacement vector:
The magnitude of the pseudo movement is varied based on a table provided by the user, which is normally a ramp
down table from unity to zero over the load case. Note that the projection of the touching entity to a touched
segment is done for each iteration but the position of the touching entity is always based on a scaling of the pseudo
displacement vector computed at the start of the load case. Therefore, large rotations of the interfering bodies
should not be permitted during the interference load case.
The treatment of the interference across two successive load cases should be noted. Note that the interference can
be specified for any load case, though normally, it is specified at the start of the analysis (zeroth increment and first
load case). Three situations are possible:
•The interference is specified in the zeroth increment and also in the first load case – this is the recommended
option. During the zeroth increment, the contact between the interfering bodies is established based on the
given data but the interference itself is not resolved. The actual interference is resolved in the first load case.
•The interference is not specified in the zeroth increment but specified in the first load case – this is not
recommended. In this case, it is possible that some contact is detected between the two bodies at increment 0
based on the regular contact algorithm and this may cause a conflict with the “pseudo displacement” contact in
load case 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;409 Chapter 9: Contact
Segment-to-Segment Contact Theory
Main Index
•The interference is specified in the zeroth increment but not specified in the first load case – this is not
recommended. In this case, the contact between the interfering bodies is established at increment 0 and the
computed “pseudo displacement” is immediately reduced to 0.0 at the start of increment 1. This may cause
convergence difficulties. Each interference method provides a different scheme for the computation of this
pseudo vector.
2. Translation
In this method, for each interfering body pair in the contact definition, the user specifies the following:
Magnitude of the vector
Direction cosines of the vector
The coordinate system in which the direction cosines are specified (default is the global Cartesian system)
The body to which to apply the interference vector and
A table specifying the variation of the interference vector during the load case
The algorithm performs an initial pseudo movement of the interfering body along the direction specified by the user such
that the overclosure is removed. This is followed by a removal of the pseudo movement such that the interference fit is
achieved. This method is especially useful for large initial over-closure between contacting bodies in a specific direction.
3. Scaling
In this method, for each interfering body pair in the contact table, the user specifies the following:
Position of the Centroid about which the scaling is to occur
X, Y and Z Scaling Factors
The coordinate system in which the scaling should occur (default is the global Cartesian system)
The body to which to apply the interference vector and
A table specifying the variation of the interference resolution during the load case
The pseudo adjustment is done by scaling one of the bodies such that the overlap is removed. The rest of the algorithm is
similar to that of the “T ranslation” option.
4. Automatic
In this method, for each interfering body pair in the contact table, the user specifies the following:
A penetration tolerance
The body to which to apply the interference vector and
A table specifying the variation of the interference resolution during the load case
The overlap distance vectors are found between the nodes of the overlapping body (specified by the user) into the other
body. The penetration tolerance should be a little more than the highest penetration between contact body pair. Nodes
within this tolerance are considered for the interference calculation. The pseudo displacement vector at each node is
established by taking the perpendicular distance between the node and the closest touched segment. The rest of the
algorithm is similar to that of the “T ranslation” option. The following additional points should be noted for the
AUTOMATIC method:&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Segment-to-Segment Contact Theory410
Main Index
In single sided contact, touching body has to be selected as the interfering body.
In general, use of analytical boundary description for the touched body is recommended while using this method.
For shell contact bodies, user needs to specify the top or bottom surface for detecting contact.
Limitations of Interference Fit
Cannot be used for self contact.
Cannot be used with beam-to-beam contact.
In Methods 2 to 4, large rotations should not be present during the interference load case.
Interference is not supported for non-mechanical analyses.
Initial Gap
This option can be used to define the initial gap or overlap between contacting bodies.
A uniform gap between the contacting bodies can be specified using BCONPRG  Bulk Data entry. The initial gap option
can only be used at the beginning of analysis; hence, it has to be specified in the initial contact definition. Unlike the stress
free projection option, the contacting node coordinates are not modified when using the initial gap option.
Following are the inputs required to define the initial gap for a contact pair.
1.Gap/overlap magnitude (Positive value indicates gap between contact bodies, and negative value indicates
overclosure between contact bodies)
2.Search tolerance
3.Contact body to be adjusted (required for double sided contact)
With the initial gap option, the nodes of the touching body are projected onto the nearest segment of the touched body to
get the projection vectors at the touching nodes. In case of double-sided contact, the user must specify the contact body,
the nodes of which will be projected to obtain the projection vector. Search for the contact is limited to the search tolerance
zone. The projection vector at a touching body node is then modified to accommodate the user-specified gap or overclosure.
During the analysis, the projection vector is continuously updated based on the displacement and the rotation of the
associated node. In case of a gap between the contacting bodies, the nodes are not in contact at the beginning of the analysis.
As the body moves towards each other, contact is detected. In case of an overlap between the contacting bodies, the
interference is resolved in the first increment of the load case.
Following points should be noted to avoid unwanted contact detection:
1.Comparatively finer meshed body should be selected for the initial gap adjustment.
2.Use of analytical boundary description is recommended for the faceted touched segments.
3.In case of penetrating shell bodies, a top or bottom surface should be defined using boundary redefinition option
(COPTS /COPTM ) available in BCONPRG .&lt;/p&gt;
&lt;p&gt;411 Chapter 9: Contact
References
Main Index
References
1.Oden, J. T. and Pires, E. B. “Nonlocal and Nonlinear Friction Laws and Variational Principles for Contact
Problems in Elasticity,” J. of Applied Mechanics, V. 50, 1983.
2.Ju, J. W. and Taylor, R. L. “A perturbed Lagrangian formulation for the finite element solution of nonlinear
frictional contact problems,” J. De Mechanique Theorique et Appliquee, Special issue, Supplement, 7, 1988.
3.Simo, J. C. and Laursen, T. A. “An Augmented Lagranian treatment of contact problems involving friction,”
Computers and Structures, 42, 1002.
4.Peric, D. J. and Owen, D. R. J. “Computational Model for 3D contact problems with friction based on the Penalty
Method,” Int. J. of Meth. Engg., V. 35, 1992.
5.Taylor, R. L., Carpenter, N. J., and Katona, M. G. “Lagrange constraints for transient finite element surface
contact,” Int. J. Num. Meth. Engg., 32, 1991.
6.Wertheimer, T. B. “Numerical Simulation Metal Sheet Forming Processes,” VDI BERICHET, Zurich,
Switzerland, 1991&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
References412
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 10: Materials
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
10 Materials
Material Model Overview
Linear Elastic
Linear Elastic Material Overview
Isotropic Material (MAT1)
Two-Dimensional Anisotropic Material (MAT2)
Axisymmetric Solid Orthotropic Material (MAT3)
Two-Dimensional Orthotropic Material (MAT8)
Three-Dimensional Orthotropic Material (MATORT)
Simplified Nonlinear Orthotropic Material (MATSORT)
Classical Laminate Theory (PSHELL)
Composite Material (PCOMP or PCOMPG)
Nonlinear Material Overview
Nonlinear Elastic
MATS1 Model
Inelastic Behavior
Failure and Damage Models (MATF)
Progressive Composite Failure&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide 414
Main Index
Interlaminar Shear for Thick Shell, Beam, Solid Shell, and 3-D Composite Brick
Elements
Cohesive Zone Modeling (MCOHE)
Creep (MATVP , CREEP)
Gasket (MATG)
Thermo-Mechanical Shape Memory Model (MATSMA)
Mechanical Shape Memory Model (MATSMA)
Material Orientation
Heat Transfer Properties
User Defined Material Subroutines
Experimental Data Fitting
References&lt;/p&gt;
&lt;p&gt;415 Chapter 10: Materials
Material Model Overview
Main Index
Material Model Overview
A wide variety of materials are encountered in structural analysis problems, and for any one of these materials a range of
constitutive models is available to describe the material&amp;rsquo;s behavior. We can broadly classify the materials of interest as those
which exhibit:
elastic behavior – which fully recovers when the load is removed
rate dependent materials – where the behavior is dependent upon the rate of the deformations. This includes
viscoelastic materials like rubber and glass
inelastic materials – which do not recover when loads are removed and demonstrate permanent deformation.
These materials include metals represented by elastic-plastic materials, ice, and material that exhibits damage.
The following sections describe how to model material behavior in SOL 400. Modeling material behavior consists of both
specifying the constitutive models used to describe the material behavior and defining the actual material data necessary to
represent the material. Directional dependency can be included for materials other than isotropic materials. Each section
discusses the constitutive (stress strain) relation, provides graphic representation of the models, and includes
recommendations and cautions concerning the use of the models.
Modeling of nonlinear material behavior is a critical component to obtain the structural response of structures; especially,
when either the loads are large, the temperatures are high, and/or the non-metal material is used. MSC Nastran SOL 400
provides a variety of models and, in some cases, multiple numerical implementation of these models. This latter is due to
the historical incorporation of solution sequences 106 and 129. The newer implementations of material models is based
upon incorporating technology from Marc and is the preferred approach. The newer material formulation also requires the
use of the newer element methodology which is often labeled the “advanced” elements. Aspects of these elements are
described in Chapter 11: Element Library . Hence, to use the advanced material models, it is necessary to supplement the
traditional property entries with new property entries ( PBARN1 , PBEMN1 , PRODN1 , PSHLN1 , PSHLN2 , and
PSLDN1 ). An alternate approach is to use the NLMOPTS bulk data option with the PROPMAP  keyword.
A summary of material models is given in Table 10-1.
Table 10-1  Material Model Summary
Physics Bulk Data ConstraintRequires Advanced
Elements
Isotropic elasticity MAT1
Anisotropic elasticity MAT2 Shells only No
Orthotropic elasticity MAT3 CTRIA6X only No
Orthotropic elasticity MAT8 Shells only No
3-D orthotropic elasticity MATORT Yes
Conventional plasticity (small strain) MATEP or
MATS1No
Plasticity with Chaboche model, Barlat, Viscoplastic,
Power Law, Johnson-Cook, KumarMATEP Yes&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Material Model Overview416
Main Index
Large strain plasticity MATEP Yes
Advanced failure model MATF Yes
Gasket Material MATG Yes
Hyperelastic (Mooney, Ogden, Aruda-Boyce, Gent,
Foam)MATHE Yes
Generalized Mooney MATHP No, but recommended
Shape memory material MATSMA Yes
Small strain nonlinear elasticity MATS1 No
Orthotropic nonlinear elastic MATSOR
TYes
Digimat composite model MATDIGI Yes
Small strain isotropic viscoelastic MATVE Yes
Large strain viscoelastic MATVE Yes
Viscoplastic MATVP‘ Yes
Creep (model) CREEP NLPARM No
Creep MATVP Yes
Cohesive zone model MCOHE YesTable 10-1  Material Model Summary
Physics Bulk Data ConstraintRequires Advanced
Elements&lt;/p&gt;
&lt;p&gt;417 Chapter 10: Materials
Linear Elastic
Main Index
Linear Elastic
SOL 400 is capable of handling problems with any combination of isotropic, orthrotropic, or anisotropic linear elastic
material behavior.
The isotropic linear elastic model is the model most commonly used to represent engineering materials. This model, which
has a linear relationship between stresses and strains, is represented by Hooke’s Law. Figure 10-1 shows that stress is
proportional to strain in a uniaxial tension test. The ratio of stress to strain is the familiar definition of modulus of elasticity
(Young’s modulus) of the material.
E (modulus of elasticity) = (axial stress)/(axial strain) (10-1)
Figure 10-1  Uniaxial Stress-Strain Relation of Linear Elastic Material
Experiments show that axial elongation is always accompanied by lateral contraction of the bar. The ratio for a linear elastic
material is:
 = (lateral contraction)/(axial elongation)
This is known as Poisson’s ratio. Similarly, the shear modulus (modulus of rigidity) is defined as:
G (shear modulus) = (shear stress)/(shear strain) (10-2)
Element Selection for Incompressible Materials
A Poisson’s ratio of 0.5, which would be appropriate for an incompressible material, can be used for the following elements:
plane stress, shell, truss, or beam. A Poisson’s ratio which is close (but not equal) to 0.5 can be used for constant dilation
elements and reduced integration elements in situations which do not include other severe kinematic constraints. Using a
Poisson’s ratio close to 0.5 for all other elements usually leads to behavior that is too stiff. A Poisson’s ratio of 0.5 can also
be used with the updated Lagrangian formulation in the multiplicative decomposition framework using the standard
displacement elements. In these elements, the treatment for incompressibility is transparent.
Stress
StrainE
1&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Linear Elastic Material Overview418
Main Index
Linear Elastic Material Overview
A wide variety of materials are encountered in stress analysis problems, and for any one of these materials a range of
constitutive models are available to describe the material&amp;rsquo;s behavior, including directional dependencies. We can broadly
classify the materials of interest as those which exhibit almost no directional dependence (isotropic materials), versus those
that exhibit three mutually orthogonal planes of symmetry (orthogonal materials), versus those that exhibit different elastic
properties in different directions (anisotropic materials).
Isotropic Material (MAT1)
The isotropic material, defined by the MAT1  entry, is the most commonly used material property. An isotropic material is
defined as a material that has the same material properties in any direction. Furthermore, the isotropic material is fully
described by only two material constants. These two constants may be any combination of E, G, and . You may specify
all three of these constants if desired, but remember, it only takes two of the constants to define the material. When you
enter only two constants, the third is computed from the following relationship:
(10-3)
If you enter all three constants and they do not satisfy this relationship, all three constants are used, but that may not be
your intention. Therefore, a warning message is printed indicating that the isotropic relationship has been violated. It is
recommended that you only input two of the three constants. For line elements, E is the modulus of elasticity, and G is the
shear modulus for torsion and transverse shear if it is present in the element. For plate and solid elements, E, G, and  are
used to develop a material matrix for the element.
The MAT1  entry may also be used to define the mass density, coefficient of thermal expansion, and stress limits. The mass
properties are only required in static analysis when a gravity loading or rotating force is used; however, they are useful for
model checkout with any loading condition (of course, they are very important for dynamic analysis). The format of the
MAT1  bulk data entry in the QRG  is as follows:
MAT1Material Characteristics
Isotropic  (MAT1 ) Isotropic material – No Directional Dependency – most commonly used material
property
Two Dimensional Anisotropic&lt;br&gt;
(MAT2 )General anisotropic two-dimensional material used with plate and shell elements
Axi-symmetric / Solid Orthotropic
(MAT3 )Orthotropic three-dimensional material for use with CTRIAX6 , PSHLN2 , or
PLCOMP
Two Dimensional Orthotropic&lt;br&gt;
(MAT8 )Two-dimensional orthotropic stress-strain used with the plate and shell elements
Three-Dimensional Anisotropic
Material ( MATORT )Orthrotropic material property for the CHEXA , CPENTA , and CTETRA  solid
elements and solid shell and plane strain element
GE
21+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;419 Chapter 10: Materials
Isotropic Material (MAT1)
Main Index
Note that GE shown in field 9 was not described. The GE is a material damping that has no significance for static analysis.
Information regarding material damping can be found in the MSC Nastran Dynamic Analysis User’s Guide .
Patran Materials Application Input Data
To define an isotropic material in Patran:
1.From the Materials Application  form, set the Action &amp;gt; Object &amp;gt; Method  combination to Create &amp;gt; Isotropic &amp;gt;
Manual Input .
2.Click  Input Properties&amp;hellip;
Isotropic linear elastic material models require the following material data via the Input Options  sub form on the Materials
Application  form.
Composite Models in Patran
In Patran, the constitutive model to be used is defined by the Constitutive Model Status . Patran uses all active constitutive
models when the analysis is submitted. Redundant or unneeded constitutive models should be rendered inactive.
Existing constitutive models of an existing material appear in either the active or inactive list box depending on their
active/inactive status. Selection of a model from one list box will add it to the other one. If you do not wish for a constitutive
model to be translated into the MSC Nastran input file, place it in the inactive list box
To view or change the constitutive model status:
1.Click on the Materials Application  icon located on the Main form to bring up the Materials Application  form.1 2 3 4 5 6 7 8 9 10
MAT1 MID E G NU RHO A TREF GE
ST SC SS MCSID
Field Contents
MID Material identification number
E Young’s modulus
G Shear modulus
NU Poisson’s ratio
RHO Mass density
A Thermal expansion coefficient
TREF Reference temperature
ST, SC, SS Stress limits for tension, compression, and shear (It is recommended to use MATF  to define stress
limits and failure critera)
MCSID Material coordinate system identification number&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Two-Dimensional Anisotropic Material (MAT2)420
Main Index
2.Select Change Material Status&amp;hellip;&lt;br&gt;
Two-Dimensional Anisotropic Material (MAT2)
The MAT2  bulk data entry is used to specify a general anisotropic two-dimensional stress-strain relationship of the form
shown in equations (10-4) and (10-8). The MAT2  bulk data entry can only be used with plate and shell elements. The
reference temperature is given by TREF and the thermal expansion coefficients are A1, A2, and A3. The component
directions X and Y refer to the element material coordinate system, which is explicitly defined for each element. The in-
plane stress-strain relationship is described by equation (10-5).
(10-4)
The me superscripts imply this is the elastic-mechanical strain and does not include the thermal or inelastic strains.
For plane stress, this can be expressed as
(10-5)
The format of the MAT2  bulk data entry in the QRG  is as follows:
MAT2
x
y
xyG11G12G13
G12G22G23
G13G23G33       
xme
yme
xyme
&lt;/h1&gt;&lt;p&gt;C1
11221– &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;  E121E10
12E2E20
0 0 11221– G=&lt;/p&gt;
&lt;h1&gt;421 Chapter 10: Materials
Axisymmetric Solid Orthotropic Material (MAT3)
Main Index
When you perform composite analysis using the PCOMP /PCOMPG  entries, MAT2  entries are generated automatically.
The PCOMP /PCOMPG  entry is discussed in MSC Nastran Linear Static Analysis User’s Guide,  Chapter 5 Material
Properties and Composites, The Composite Element (PCOMP or PCOMPG) .
Axisymmetric Solid Orthotropic Material (MAT3 )
The MAT3  entry is used to define an orthotropic three-dimensional relationship in a cross-sectional coordinate system ( x,
, z). You can only use the MAT3  with the axisymmetric CTRIAX6  element. The axisymmetric solid orthotropic material
is defined by equation (10-6).
(10-6)
To preserve symmetry, the following relationships must hold:1 2 3 4 5 6 7 8 9 10
MAT2 MID G11 G12 G13 G22 G23 G33 RHO
A1 A2 A3 TREF GE ST SC SS
MCSID
Field Contents
MID Material identification number
Gij The material property matrix
RHO Mass density
Ai Thermal expansion coefficient vector
TREF Reference temperature
ST, SC, SS Stress limits for tension, compression, and shear (It is recommended to use MATF  to define stress
limits and failure critera)
MCSID Material coordinate system identification number
xme
me
zme
zxme
1
Ex&amp;mdash;&amp;mdash;x–
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;zx–
Ez&amp;mdash;&amp;mdash;&amp;mdash;-0
x–
Ex&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
E&amp;mdash;&amp;mdash;z–
Ez&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;0
xz–
Ex&amp;mdash;&amp;mdash;&amp;mdash;-z–
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
Ez&amp;mdash;&amp;ndash;0
0 0 01
Gzx&amp;mdash;&amp;mdash;&amp;ndash;x

z
zx&lt;/h1&gt;&lt;h1&gt;Nonlinear User’s Guide
Two-Dimensional Orthotropic Material (MAT8)422
Main Index
(10-7)
The format of the MAT3  bulk data entry in the QRG  is as follows:
MAT3
Two-Dimensional Orthotropic Material (MAT8)
The MAT8  bulk data entry is used to define a two-dimensional orthotropic stress-strain relationship as shown in equations
(10-8) and (10-9). The MAT8  bulk data entry can only be used with the plate and shell elements. Equation (10-8) defines the
in-plane stress-strain relationship. The transverse shear stress-transverse shear strain relationship is defined by equation
(10-9).
(10-8)1 2 3 4 5 6 7 8 9 10
MAT3 MID EX ETH EZ NUXTH NUTHZ NUZX RHO
GZX AX ATH AZ TREF GE
Field Contents
MID Material identification number
EX, ETH, EZ Young’s moduli in the x, , and z directions, respectively
NUXTH, NUTHZ, NUZX Poisson’s ratios
RHO Mass density
GZX Shear modulus
AX, ATH, AZ Thermal expansion coefficients
TREF Reference temperature
GE Structural element damping coefficient.x
Ex&amp;mdash;&amp;mdash;&amp;ndash;x
E&amp;mdash;&amp;mdash;&amp;ndash;; xz
Ex&amp;mdash;&amp;mdash;-zx
Ez&amp;mdash;&amp;mdash;-; z
E&amp;mdash;&amp;mdash;&amp;ndash;z
Ez&amp;mdash;&amp;mdash;&amp;ndash; = = =
1me
2me
12me
1
E1&amp;mdash;&amp;mdash;12–
E1&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;0
12–
E1&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
E2&amp;mdash;&amp;mdash;0
0 01
G12&amp;mdash;&amp;mdash;&amp;mdash;1
2
12&lt;/h1&gt;
      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P23</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_023/</guid>
      <description>
        
        
        &lt;h1&gt;423 Chapter 10: Materials
Two-Dimensional Orthotropic Material (MAT8)
Main Index
(10-9)
The format of the MAT8  bulk data entry in the QRG  is as follows:
MAT8
It is recommended to use MATF  to define stress limits and failure criteria.
As an example of the usage of MAT8 , see Laminated Strip under Three -point Bending  (Ch. 7) or Load and Constraint Conditions&lt;br&gt;
(Ch. 8) in the  MSC Nastran Demonstration Problems Manual . 1 2 3 4 5 6 7 8 9 10
MAT8 MID E1 E2 NU12 G12 G1Z G2Z RHO
A1 A2 TREF Xt Xc Yt Yc S
GE F12 STRN
Field Contents
MID Material identification number.
E1 Modulus of elasticity in the longitudinal direction.
E2 Modulus of elasticity in the lateral direction.
NU12 Poisson’s ratio (2/1) for uniaxial loading in 1-direction).
G12 In-plane shear modulus.
G1Z Transverse shear modulus for shear in the 1-Z plane.
G2Z Transverse shear modulus for shear in the 2-Z plane.
RHO Mass density.
Ai Thermal expansion coefficient in the i-direction.
TREF Reference temperature.
Xt, Xc Allowable stresses or strains in tension and compression, respectively, in the longitudinal direction.
Yt, Yc Allowable stresses or strains in tension and compression, respectively, in the lateral direction.
S Allowable stress or strain for in-plane shear.
GE Structural damping coefficient.
F12 Interaction term used in the Tsai-Wu theory.
STRN Request for maximum strain theory.1z
2zG1z0
0G2z1z
2z&lt;/h1&gt;&lt;h1&gt;Nonlinear User’s Guide
Three-Dimensional Orthotropic Material (MATORT)424
Main Index
Three-Dimensional Orthotropic Material (MATORT)
The MATORT  bulk data entry is used to define a general orthotropic material that may be used for all advanced elements.
It is based upon entering the nine elastic constants. This option may also be used to define an anisotropic yield surface. The
three-dimensional orthotropic material is defined by equation (10-10).
(10-10)
The compliance matrix is dependent on the element type an is defined in Table 10-2x
y
z
xy
yz
zx
Gxme
yme
zme
xyme
yzme
zxme

&lt;/h1&gt;&lt;h1&gt;425 Chapter 10: Materials
Three-Dimensional Orthotropic Material (MATORT)
Main Index
Table 10-2  Classes of Stress-Strain Relations
Class 1 NDI = 1,NSHEAR = 0
Beam Elements
{} = [1/Exx] {}
Class 2 NDI = 2,NSHEAR = 0
Axisymmetric Shells
Class 3 NDI = 1,NSHEAR = 1
Beam Elements with transverse shear
Class 4 NDI = 2,NSHEAR = 1
Plane Stress, Plates and Thin Shellsxx
yy 1ExxyxEyy –
xyExx – 1.Eyyxx
yy=
yxxyEyyExx =

 1Exx 0
0 1Gxy
=
xx
yy
xy
 1ExxyxEyy – 0
xyExx – 1Eyy 0
0 0 1Gxyxx
yy
xy&lt;/h1&gt;&lt;p&gt;yxxyEyyExx =&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Three-Dimensional Orthotropic Material (MATORT)426
Main Index
Class 5 NDI = 2,NSHEAR = 1
Thick Axisymmetric Shells
Class 6 NDI = 3,NSHEAR = 1
Plane Strain, Axisymmetric with No Twist, Elements
Class 7 NDI = 2,NSHEAR = 3
Thick Shell, ElementsTable 10-2  Classes of Stress-Strain Relations  (continued)
mm

T 1EmmmE – 0
mEmm – 1E 0
0 0 1Gmmm

T&lt;/h1&gt;&lt;h1&gt;xx
yy
zz
xy 1ExxyxEyy – zxEzz – 0
xyExx – 1EyyzyEzz – 0
xzExx – yzEyy – 1Ezz 0
0 0 0 1Gxyxx
yy
zz
xy&lt;/h1&gt;&lt;h1&gt;yxxyEyyExx = zyyzEzzEyy = xzzxExxEzz =
xx
yy
xy
yz
zx 1ExxyxEyy – 0 0 0
xyExx – 1Eyy 0 0 0
0 0 1Gxy 0 0
0 0 0 1Gyz 0
0 0 0 0 1Gzxxx
yy
xy
yz
zx&lt;/h1&gt;&lt;p&gt;yxxyEyyExx =&lt;/p&gt;
&lt;h1&gt;427 Chapter 10: Materials
Three-Dimensional Orthotropic Material (MATORT)
Main Index
The format of the MATORT  bulk data entry in the QRG  is as follows:
MATORTClass 8 NDI = 3,NSHEAR = 3
Three-Dimensional Brick Elements, Elements
1 2 3 4 5 6 7 8 9 10
MATORT MID E1 E2 E3 NU12 NU23 NU31 RHO
G12 G23 G31 A1 A2 A3 TREF GE
IYLD IHARD SY Sornl Y1 Y2 Y3 N/A
Yshr1 Yshr2 Yshr3 N/A N/A N/A N/A N/A
Field Contents
MID  Identification number of a MATORT  entry. (Integer &amp;gt;0; No Default)
E1 Modulus of elasticity in longitudinal or 1-direction. (Real &amp;gt; 0)
E2 Modulus of elasticity in lateral direction or 2-direction. (Real &amp;gt; 0; no Default; must be entered)
E3 Modulus of elasticity in thickness direction or 3-direction. (Real &amp;gt; 0; no Default; must be entered)
NU12 Poisson’s ratio 2/1 for uniaxial loading in 1-direction. (Real; no Default; must be entered)
NU23 Poisson’s ratio 3/2 for uniaxial loading in 2-direction. (Real; no Default; must be entered)
NU31 Poisson’s ratio 1/3 for uniaxial loading in 3-direction. (Real; Default = NU23)
RHO Mass density. (Real; Default =0.0)
G12 Shear modulus in plane 1-2. (Real &amp;gt; 0; no Default; must be entered)
G23 Shear modulus in plane 2-3. (Real &amp;gt; 0.; no Default; must be entered)
G31 Shear modulus in plane 3-1. (Real &amp;gt; 0; no Default; must be entered)
Ai     Coefficient of thermal expansion in i-direction (Real; Default =0.0).   Table 10-2  Classes of Stress-Strain Relations  (continued)
xx
yy
zz
xy
yz
zx 1ExxyxEyy – zxEzz – 0 0 0
xyExx – 1EyyzyEzz – 0 0 0
xzExx – yzEyy – 1.Ezz 0 0 0
0 0 0 1Gxy 0 0
0 0 0 0 1Gyz 0
0 0 0 0 0 1Gzxxx
yy
zz
xy
yz
zx&lt;/h1&gt;&lt;p&gt;Nonlinear User’s Guide
Simplified Nonlinear Orthotropic Material (MATSORT)428
Main Index
When you use MATORT , it is advisable to define a material coordinate system on the PSOLID  entry (using field 4). For
solid elements, stresses are output in the material coordinate system, which by default, is the basic coordinate system. In
general, for solid elements, it is not easy to determine the orientation of the element coordinate system.
As an example of the usage of MAT8 , see Laminated Strip under Three -point Bending  (Ch. 7) in the MSC Nastran Demonstration
Problems Manual .
Simplified Nonlinear Orthotropic Material (MATSORT)
The nine material constants associated with orthotropic materials may be a function of the strain by using the MATSORT&lt;br&gt;
data bulk entry in conjunction with the MATORT  bulk data entry. Effectively, one is entering a TABL3D  bulk data entry
to define this variation.
Classical Laminate Theory (PSHELL)
The PSHELL  bulk data entry may be used to define the elastic material behavior in a shell, when the material behavior is
known for the generalized behavior. It may be used for defining either isotropic or anisotropic behavior. The effective TREF Reference temperature at which the thermal expansion coefficient is measured. TREF is used only if the
thermal expansion coefficient is temperature-dependent. (Real; Default =0.0)
GE Structural damping coefficient. (Real; Default =0.0).
IYLD Integer pertaining to one of the following yield criterion: (Integer)
-1 = Elastic
1 = von Mises (Default)
7 = Hill (1948) yield
8 = Barlat (1991) yield
IHARD Integer pertaining to one of the following work hardening rules: (Integer)
1 = Isotropic (Default)
2 = Kinematic
3 = Combined Isotropic/Kinematic
SY Equivalent (von Mises) tensile yield stress. (Real &amp;gt; 0.0 or blank; Default = 0.0)
SORNL Not used
Y1 Hill’s yield stress ratio in direction 1. (Real &amp;gt; 0.0 or blank; Default = 0.0)
Y2 Hill’s yield stress ratio in direction 2. (Real &amp;gt; 0.0 or blank; Default = 0.0)
Y3 Hill’s yield stress ratio in direction 3. (Real &amp;gt; 0.0 or blank; Default = 0.0)
Yshr1 Hill’s yield shear stress ratio in direction 1. (Real &amp;gt; 0.0 or blank; Default = 0.0)
Yshr2 Hill’s yield shear stress ratio in direction 2. (Real &amp;gt; 0.0 or blank; Default = 0.0)
Yshr3 Hill’s yield shear stress ratio in direction 3. (Real &amp;gt; 0.0 or blank; Default = 0.0)Field Contents&lt;/p&gt;
&lt;p&gt;429 Chapter 10: Materials
Classical Laminate Theory (PSHELL)
Main Index
material properties are derived from the membrane, bending, and transverse behavior. This method is not recommended
when material nonlinearity is present; use the PCOMP  or PCOMG  bulk data entry. For isotropic materials, use the same
MAT1  bulk data entry identification for MID1  and MID2 , and leave the MID3  and MID4  fields blank. The purpose of this
section is to describe the use of the material fields if your plate structure is not isotropic.
The format of the PSHELL  bulk data entry in the QRG  is as follows:
PSHELL
On the PSHELL  entry, there are four material ID fields available as shown in Table 10-3.
If you wish to include membranes only, use MID1  only. If you wish to include bending only, use MID2  and, optionally,
MID3 . When MID3  is used, thick shell theory (which includes the transverse shear flexibility) is used to develop the element
stiffness matrix. In general, for thin structures, it is advisable to not use MID3 .1 2 3 4 5 6 7 8 9 10
PSHELL PID MID1  T MID2 12I/T3 MID3 TS/T NSM
Z1  Z2 MID4
Field Contents
PID Property identification number.
MIDi Material identification numbers.
T Default membrane thickness for Ti on the connection entry or average thickness if TFLAG = 1 (Field
13 of plate element), then Ti = Ti  T.
121/T3 Bending stiffness parameter.
TS/T Transverse shear thickness divided by the membrane thickness.
NSM Nonstructural mass per unit area.
Z1, Z2 Fiber distances for stress calculations.
Table 10-3  Material Properties on the PSHELL Entry
ID PSHELL Field Purpose
MID1 3 Membrane material property.
MID2 5 Bending material property.
MID3 7 Transverse shear stiffness material property.
MID4 4 (cont.) Material property used to define coupling between the membrane and the bending
deformation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Composite Material (PCOMP or PCOMPG)430
Main Index
The material type used for any of the material fields ( MID1 , MID2 , MID3 , or MID4 ) may be MAT1 , MAT2 , or MAT8 . The
PCOMP /PCOMPG  entry, which is the subject of the next section, provides a convenient way of entering appropriate
material properties for a shell consisting of layers of unidirectional fibers.
The MID4  field on the PSHELL  entry is used to input a coupling relationship between the in-plane forces and bending
moments. This coupling only occurs in shells that are nonsymmetric about the neutral plane or where the neutral plane is
offset from the grid points. Typical applications include reinforced skins and aluminum bonded to fiberglass. The MID4&lt;br&gt;
field should be left blank if the element cross section is symmetric.
Composite Material (PCOMP or PCOMPG)
Composite materials are composed of a mixture of two or more constituents, giving them mechanical and thermal
properties which can be significantly better than those of homogeneous metals, polymers and ceramics.
Laminate composite materials are based on layering homogeneous materials using one of several methods. In order to define
a laminate composite material, you must define the homogeneous materials that form the layers, the thickness of each layer,
and the orientation angle of the layers relative to the standard coordinate axis being used for the model. The orientation is
particularly important for orthotropic and anisotropic materials, whose properties vary in different directions. The material
in each layer may be either linear or nonlinear. Tightly bonded layers (layered materials) are often stacked in the thickness
direction of beam, plate, shell structures, or solids as show in Ap.10: T ypical Ply Orientation through a Shell .
Figure 10-2  Typical Ply Orientation through a Shell
The Composite Element (PCOMP or PCOMPG)
The PCOMP  or PCOMPG  bulk data entries may be used with either conventional elements or advanced elements. When
used with conventional elements, the material properties are pre-integrated through the thickness. When advanced
elements are used, the material behavior is integrated through the thickness. This is the correct method when progressive
failure or other material nonlinearities exist in the model.&lt;/p&gt;
&lt;p&gt;431 Chapter 10: Materials
Composite Material (PCOMP or PCOMPG)
Main Index
Figure 10-3  Integration Points through the Thickness of Beam and Shell Elements
Integration Points through the Thickness of Continuum Elements shows the location of integration points through the
thickness of continuum elements. SOL 400 forms the element stiffness matrix by performing numerical integration based
on the standard isoparametric concept.
Figure 10-4  Integration Points through the Thickness of Continuum Composite Elements
Specifying Composite Material Entries
You specify the material properties and orientation for each of the layers. Additional stress and strain output is generated
for each layer and between the layers.
The format of the PCOMP  bulk data entry in the QRG  is as follows:
PCOMP
1 2 3 4 5 6 7 8 9 10
PCOMP PID Z0 NSM SB FT TREF GE LAM
MID1 T1 THETA1 SOUT1 MID2 T2 THETA2 SOUT2
MID3 T3 THETA3 SOUT3 etc.
Field Contents
PID Property identification number.
Z0 Distance from the reference plane to the bottom surface.*
*
*
*
Beams or Shells with
PCOMP or PCOMPG Options
*
*
*&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Nonlinear User’s Guide
Composite Material (PCOMP or PCOMPG)432
Main Index
An alternative to the PCOMP  entry is the PCOMPG  entry. The PCOMPG  entry includes a global ply ID, so it is easier
to track the output for the same ply across the model. The format for the PCOMPG  bulk data entry in the QRG  is as
follows:
PCOMPGNSM Nonstructural mass per unit area.
SB Allowable shear stress of the bonding material.
FT Failure theory.
TREF Reference temperature.
LAM “Blank”, “SYM”, “MEM”, “BEND” option.
MIDi Material ID of the various plies. The plies are identified by serially numbering them from 1 at the bottom
layer.
Ti Thicknesses of the various plies.
THETAi Orientation angle of the longitudinal direction of each ply with the material axis of the element.
SOUTi Stress or strain output request.
1 2 3 4 5 6 7 8 9 10
PCOMPG PID Z0 NSM SB FT TREF GE LAM
GPLYID1 MID1 T1 THETA1 SOUT1
GPLYID2 MID2 T2 THETA2 SOUT2
Field Contents
PID Property identification number. (0 &amp;lt;Integer &amp;lt;10000000)
Z0 Distance from the reference plane to the bottom surface. (Real; Default =-0.5 times the element thickness.)
NSM Nonstructural mass per unit area. (Real)
SB Allowable shear stress of the bonding material (allowable interlaminar shear stress). Required if FT is also
specified. (Real &amp;gt;0.0)
FT Failure theory. The following theories are allowed (Character or blank. If blank, then no failure calculation
will be performed)
“HILL” for the Hill theory.
“HOFF” for the Hoffman theory.
“TSAI” for the Tsai -Wu theory.
“STRN” for the Maximum Strain theory.
TREF Reference temperature. (Real; Default =0.0)Field Contents&lt;/p&gt;
&lt;p&gt;433 Chapter 10: Materials
Composite Material (PCOMP or PCOMPG)
Main Index
Using the material properties for each of the lamina with conventional shell elements, MSC Nastran calculates the
equivalent PSHELL  and MAT2  entries generated as shown in Figure 10-5. If nonlinear material behavior including
progressive failure occurs, then the advanced elements should be activated using the PSHLN1  bulk data entry.GE Damping coefficient. (Real; Default =0.0)
LAM Laminate Options. (Character or blank, Default =blank).
“Blank” All plies must be specified and all stiffness terms are developed.
“MEM” All plies must be specified, but only membrane terms (MID1 on the derived PSHELL&lt;br&gt;
entry) are computed.
“BEND” All plies must be specified, but only bending terms (MID2 on the derived PSHELL  entry)
are computed.
“SMEAR” All plies must be specified, stacking sequence is ignored MID1=MID2 on the derived
PSHELL  entry and MID3, MID4, TS/T, and 12I/T**3 terms are set to zero).
“SMCORE” All plies must be specified, with the last ply specifying core properties and the previous plies
specifying face sheet properties. The stiffness matrix is computed by placing half the face
sheet thicknesses above the core and the other half below with the result that the laminate
is symmetric about the mid-plane of the core. Stacking sequence is ignored in calculating
the face sheet stiffness.
GPLYIDi User-defined Global (External) Ply ID. The global ply identification number should be unique with respect
to other plies in the entry. The plies are defined in stacking sequence starting with the bottom layer. (Integer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0)
MIDi Material ID of the various plies. The plies are identified by serially numbering them from 1 at the bottom
layer. The MIDs must refer to MAT1 , MAT2 , or MAT8  bulk data entries. (Integer &amp;gt;0 or blank, except
MID1 must be specified.)
Ti Thicknesses of the various plies. (Real or blank, except T1 must be specified.)
THETAi Orientation angle of the longitudinal direction of each ply with the material axis of the element. (If the
material angle on the element connection entry is 0.0, the material axis and side 1 -2 of the element
coincide.) The plies are to be numbered serially starting with 1 at the bottom layer. The bottom layer is
defined as the surface with the largest -Z value in the element coordinate system. (Real; Default =0.0)
SOUTi Stress or strain output request. (Character: “YES” or “NO”; Default =“NO”)Field Contents&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nonlinear User’s Guide
Composite Material (PCOMP or PCOMPG)434
Main Index
Figure 10-5  Equivalent PSHELL and MAT2 Entries Are Generated
The output you may request for a composite analysis includes:
Stresses and strains for the equivalent plate.
Force resultants.
Stresses and/or strains in the individual laminate including approximate interlaminar shear stresses in the bonding
material output.
A failure index table.
If you want stress and/or the failure indices for the composite elements, ELSTRESS  must be requested in the case control
section for the appropriate elements. Also, if you want the failure index table, you must enter the stress limits for each lamina
on the appropriate material entry, the shear stress limit Sb, and the failure theory method FT on the PCOMP/PCOMPG&lt;br&gt;
entries.
As shown in Figure 10-5, each PCOMP /PCOMPG  (together with the material entries for each lamina) is processed to form
an equivalent PSHELL  and four MAT2  entries. To print the equivalent PSHELL  and MAT2  entries  in the output file,
use NASTRAN PRTPCOMP=1  provided that ECHO=NONE  is not set. If you wish to use them for future runs, they may be
punched to an ASCII file. The ID numbers of the MAT2 s are important. The MID1  material has an ID in the range of
100000000 to 199999999. The MID2  material has an ID in the range of 200000000 to 299999999, etc. These ranges are
used to inform MSC Nastran that the material is part of a composite analysis. If you are using the equivalent properties in CQUAD4
MAT2 MAT8 MAT1
EQUIV PSHELL
MID1
MAT2MID2
MAT2MID3
MAT2MID4
MAT2Output if
ECHO = SORT
(the default)PCOMP
or&lt;/p&gt;
&lt;p&gt;435 Chapter 10: Materials
Composite Material (PCOMP or PCOMPG)
Main Index
a future analysis instead of using the PCOMP /PCOMPG  entries and you are entering a thermal coefficient of expansion,
do not change the ID numbers. Also, if you use the equivalent PSHELL  and MAT2 s, you will not be able to obtain the
laminae stress or the failure index table. For the failure index, you have a choice of four failure theories: Hill’s theory,
Hoffman’s theory, Tsai-Wu’s theory, and the maximum strain theory.
As an example of the usage of PCOMP , see Laminated Strip under Three -point Bending  (Ch. 7) in the MSC Nastran
Demonstration Problems Manual.&lt;br&gt;
Creating Composite Materials In Patran
Composites Form for Defining Ply Lay-Ups
The composite forms provide alternate ways of defining the linear elastic properties of materials. All the composite options,
except for Laminated Composite , will always result in a homogeneous elastic material in MSC Nastran.
When the Laminated Composite  option is used to create a material and this material is then referenced in a  Revised or
Standard Laminate Plate  element property region, a PCOMP  entry is created. However, if this material is referenced by a
different type of element property region, for example, Revised or Standard Homogeneous Plate , then the equivalent
homogeneous material properties are used instead of the laminate lay-up data. Only materials created through the
Laminated Composite  option should be referenced by a Revised or Standard Laminate Plate  element property region.
Refer to Composite Materials Construction  in the Patran Reference Manual.
Laminated
This subordinate form appears when the Input Properties  button is selected on the Materials  form, Composite  is the
selected Object , and Laminate  is the selected Method . Use this form to define the laminate lay-up data for a composite
material. If the resulting material is referenced in a Revised or Standard Laminate Plate  element property region, then an
MSC Nastran PCOMP  entry containing the lay-up data is written. If the resulting material is referenced by any other type
of element property region, the equivalent homogeneous properties of the material are used The difference between the
Total  option and the Total -%thicknesses  option is that the former requires that you give actual thickness values of each
ply and the latter requires each ply thickness to be given as a percentage of the total layup thickness. This is the preferred
method when applying the composite material to solid ( CHEXA ) elements or 2-D solid element (axisymmetric, plane
strain).&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Material Overview436
Main Index
Nonlinear Material Overview
A wide variety of materials are encountered in modern structures, and for any one of these materials a range of constitutive
models is available to describe the material’s behavior. We can broadly classify the materials of interest as those which exhibit
almost purely elastic response, possibly with some energy dissipation during rapid loading by viscoelastic response (the
elastomers, such as rubber or solid propellant); materials that yield, and exhibit considerable ductility beyond yield (such
as mild steel and other commonly used metals, ice at low strain rates, and clay); materials that flow by rearrangement of
particles which interact generally through some dominantly frictional mechanism (such as sand); and brittle materials (rock,
concrete, ceramics).&lt;/p&gt;
&lt;p&gt;437 Chapter 10: Materials
Nonlinear Material Overview
Main Index
Material Characteristics Examples Models
Failure Criteria
(MATF )Determines failure initiation and
progressive failure.Aircraft panels Maximum stress
Tasi-Wu
Puck
Failure Criteria
(MATDIGI )Determines failure initiation and
progressive failure.Fiber reinforced plastic Unit cell model
Hyperelastic
(MATHE )Stress function of instantaneous strain.
Nonlinear load-displacement relation.
Unloading path same as loading.Rubber Mooney
Ogden
Arruda-Boyce
Gent
Hypoelastic
(MATUSR )Rate form of stress-strain law Concrete User-defined
Nonlinear Elastic
(MATG )Loading with multiple unloading curves
due to damage.Automotive gaskets Gasket model
Nonlinear Elastic
(MATSORT )Simplified nonlinear orthotropic
elasticityWood Simple
Creep
(MATVP )Strains increasing with time under
constant load. Stresses decreasing with
time under constant deformations.
Creep strains are noninstantaneous.Metals at high temperatures,
polymide films,
semiconductor materials Norton
Maxwell
Elastoplasticity
(MATEP)Yield condition flow rule and hardening
rule necessary to calculate stress, plastic
strain. Permanent deformation
upon unloading.Metals
Soilsvon Mises Isotropic
Hill’s Anisotropic
Viscoelastic
(MATVE )Time dependence of stresses in elastic
material under loads. Full recovery after
unloading.Rubber,
Glass, industrial
plasticsSimo Model
Narayanaswamy
Viscoplastic
(MATVP )Combined plasticity and creep
phenomenonMetals
PowderPower law
Shape Memory
(MATSMA )Thermal - Mechanical Aruchhio’s model
Asaro-Sayeedvafa
model
Cohesive Zone
Method
(MCOHE )Cohesive material model Glue Linear and quadratic&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Material Overview438
Main Index
SOL 400 Material Entries
The following material bulk data entries are available in SOL 400. An overview of each of these options is presented in the
sections of this chapter and detailed in the QRG , Chapter 8: Bulk Data Entries . All standard MSC Nastran materials are
also available in SOL 400.
The following sections describe how to model material behavior in SOL 400. Modeling material behavior consists of both
specifying the constitutive models used to describe the material behavior and defining the actual material data necessary to
represent the material. Directional dependency can be included for materials other than isotropic materials. Data for the
materials can be entered either directly through the input file or by user subroutines, or material models may be defined in
the Patran Materials Application . Each section of this chapter discusses various options for organizing material data for
input. Each section also discusses the constitutive (stress -strain) relation and graphic representation of the models and
includes recommendations and cautions concerning the use of the models.Bulk Data Entry Description
MATDIGI Specifies Digimat material data.
MATEP Specifies elastoplastic material properties.
MATTEP Specifies temperature-dependent elastoplastic material properties.
MATF Specifies failure model properties for linear elastic materials.
MATG Specifies gasket material properties to be used in SOL 400.
MATTG Specifies gasket material property temperature variation to be used in SOL 400.
MATHE Specifies hyperelastic (rubber-like) material properties for nonlinear (large strain and large rotation)
analysis in SOL 400.
MATTHE Specifies temperature-dependent properties of hyperelastic (rubber-like) materials (elastomers) in
SOL 400.
MATORT Specifies elastic orthotropic material properties for 3-D and plane strain behavior for linear and
nonlinear analyses in SOL 400.
MATTORT Specifies temperature-dependent properties of elastic orthotropic materials for linear and nonlinear
analyses used in SOL 400.
MATSMA Specifies shape memory material model
MATVE Specifies isotropic viscoelastic material properties in SOL 400.
MATTVE Specifies temperature-dependent viscoelastic material properties in terms of Thermo -Rheologically
Simple behavior in SOL 400.
MATVP Specifies viscoplastic or creep material properties to be used for quasi-static analysis in SOL 400.
MCOHE Specifies cohesive zone material properties.
MATSUR Specifies material constants for user-defined hypoelastic model.&lt;/p&gt;
&lt;p&gt;439 Chapter 10: Materials
Nonlinear Elastic
Main Index
Nonlinear Elastic
Hypoelastic
The hypoelastic model is able to represent a nonlinear elastic (reversible) material behavior. For this constitutive theory,
SOL 400 assumes that
(10-11)
where L is a function of the mechanical strain and g is a function of the temperature.
The stress and strains are true stresses and logarithmic strains, respectively, when used in conjunction with the updated
Lagrange ( LRGSTRN=1  or 2).
When used in conjunction with the LRGSTRN=0 , equation (10-11) is expressed as
(10-12)
where E, S are the Green-Lagrangian strain and second Piola-Kirchhoff stress, respectively.
This model can be used with any stress element.
The tensors L and g may be defined by the HYPELA2  or UMAT  user subroutine. In order to provide an accurate solution,&lt;br&gt;
L should be a tangent stiffness evaluated at the beginning of the iteration. In addition, the total stress should be defined as
its exact value at the end of the increment. This allows the residual load correction to work effectively.
The material model may be either isotropic or anisotropic. For anisotropic material models, the user defines the behavior
with respect to the preferred direction.
Additional information is available regarding the kinematics of deformation. In particular, the deformation gradient (F),
rotation tensor ( R), and the eigenvalues ( ) and eigenvectors ( N) to form the stretch tensor ( U) are also provided. This
information is available only for the continuum elements namely: plane strain, plane stress, axisymmetric, and three-
dimensional cases.
To activate the HPYPELA2  or UMAT  user subroutine, one also must use MATUDS  and reference the user subroutine via
the CONNECT  file management statements option.
Hyperelastic – Isotropic
Hyperelastic models are specified using either the MATHP  or MATHE  bulk data entries and are used to describe the
behavior of materials that exhibit large strain elastic response, such as rubber, solid propellant, and other elastomeric
materials. These materials are described in terms of a “strain energy potential”, U, which defines the strain energy stored in
the material per unit of volume in the initial configuration as a function of the strain at that point in the material.
Elastomeric materials are elastic in the classical sense. Upon unloading, the stress -strain curve is retraced and there is no
permanent deformation. Elastomeric materials are initially isotropic. Figure 10-6 shows a typical stress-strain curve for an
elastomeric material.·
ijLijkl·
klgij+ =
S·
ijLijklE·
klgij+ =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic440
Main Index
Figure 10-6  A Typical Stress-Strain Curve for an Elastomeric Material
Characteristics of Elastomeric Materials
Most solid rubberlike materials are nearly incompressible: their bulk modulus is several orders of magnitude larger than
their shear modulus. For applications where the material is not highly confined, the assumption that the material is fully
incompressible is usually a good approximation. In cases where the material is highly confined (such as in an O-ring),
modeling the compressibility can be important for obtaining accurate results.
Elastomeric foams on the other hand are elastic but very compressible.
Elastomeric materials available in MSC Nastran are considered to be isotropic in nature with random orientation of the
long chain molecules.
Strain Energy Potential and Representative Models
Calculations of stresses in an elastomeric material requires an existence of a strain energy function which is usually defined
in terms of invariants or stretch ratios.
In the rectangular block in Figure 10-7, 1, 2, and 3 are the principal stretch ratios along the edges of the block defined by
i= (Li+ui)/Li (10-13), Stress
, Strain100%&lt;/p&gt;
&lt;p&gt;441 Chapter 10: Materials
Nonlinear Elastic
Main Index
Figure 10-7  Rectangular Rubber Block
In practice, the material behavior is (approximately) incompressible, leading to the constraint equation
1231
the strain invariants are defined as
(10-14)
Depending on the choice of configurations, for example, reference (at t0) or current ( tn + 1 ), you obtain total or
updated Lagrange formulations for elasticity. The kinematic measures for the two formulations are discussed next.
Total Lagrangian Formulation
The strain measure is the Green-Lagrange strain defined as:
(10-15)
where Cij is the right Cauchy-Green deformation tensor defined as:
Cij = FkiFkj (10-16)
in which  Fkj is the deformation gradient (a two-point tensor) written as:
(10-17)L3
2L2
L2
L11L1Undeformed
Deformed3L3
I1122232+ + =
I2122222323212+ + =
I3122232=
Eij1
2&amp;mdash;Cijij– =
Fkjxk
Xj&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic442
Main Index
The Jacobian J is defined as:
(10-18)
Thus, the invariants can be written as:
(10-19)
in which eijk is the permutation tensor. Also, using spectral decomposition theorem,
(10-20)
in which the stretches  are the eigenvalues of the right Cauchy-Green deformation tensor, Cij and the eigenvectors are
.
Updated Lagrange Formulation
The strain measure is the true or logarithmic measure defined as:
(10-21)
where the left Cauchy-Green or finger tensor bij is defined as:
bij = FikFjk (10-22)
Thus, using the spectral decomposition theorem, the true strains are written as:
(10-23)
where  is the eigenvectors in the current configuration. It is noted that the true strains can also be approximated using
first Padé approximation, which is a rational expansion of the tensor, as:
(10-24)J123det Cij1
2&amp;mdash;
= =
I1Cii=
I2CijCijCii2– 
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
I31
6&amp;mdash; eijkepqrCipCjqCkrdet Cij = =(implied sum on i)
CijA2NiANjA=
A2
NiA
ij1
2&amp;mdash; ln bij=
ij1
2&amp;mdash; AlnniAnjA=
niA
ij2Vijij–Vijij+1–=&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P24</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_024/</guid>
      <description>
        
        
        &lt;p&gt;443 Chapter 10: Materials
Nonlinear Elastic
Main Index
where a polar decomposition of the deformation gradient Fij is done into the left stretch tensor Vij and rotation tensor Rij&lt;br&gt;
as:
Fij = VikRkj
The Jacobian J is defined as:
(10-25)
and the invariants are now defined as:
(10-26)
Strain energy expressed by the invariants described by either equations (10-19) or (10-26) are the same. Also, to account for
the incompressibility condition, in both formulations, the strain energy is split into deviatoric and volumertic parts as:
W = Wdeviatoric  + Wvolumetric (10-27)
Mooney-Rivlin Model
The generalized Mooney-Rivlin model for nearly -incompressible elastomeric materials is written as:
(10-28)
where  and  are the first and second deviatoric invariants.
As an example of the usage of MATHE  for defining a Mooney material, see Ball Joint Rubber Boot  (Ch. 13) in the  MSC
Nastran Demonstration Problems Manual.&lt;br&gt;
Jamus-Green-Simpson Model
A particular form of the generalized Mooney-Rivlin model, namely the third order deformation (tod) model, is
implemented in SOL 400. However, the Ogden formulation (below) is usually better for large strain behavior than even
the fifth order Mooney-Rivlin.
(10-29)J123det bij1
2&amp;mdash;
= =
I1bii=
I21
2&amp;mdash;bijbijbii2–  =
I31
6&amp;mdash; eijkepqrbipbjqbkrdetbij = = and
Wdeviatoricgmr Cmn I13–mI23–n
n1=N

m 1=N
=
I1I2
WdevratorictodC10I13–C01I23–C11I13–I23–C20I13–2
C30I13–3+ + +
+=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic444
Main Index
where is the deviatoric third order deformation form strain energy function,
C10, C01, C11, C20, C30 are material constants obtained from experimental data.
Simpler and popular forms of the above strain energy function are obtained as:
(10-30)
Ogden Model
The form of strain energy for the Ogden model in SOL 400 is,
(10-31)
where  are the deviatoric stretch ratios while Cmn, k , and k are the material constants obtained from
the curve fitting of experimental data.
The Ogden model is usually applied to slightly compressible materials. If no bulk modulus is given, it is taken to be virtually
incompressible. This model is different from the Mooney model in several respects. The Mooney material model is with
respect to the invariants of the right or left Cauchy -Green strain tensor and implicitly assumes that the material is
incompressible. The Ogden formulation is with respect to the eigenvalues of the right or left Cauchy -Green strain, and the
presence of the bulk modulus implies some compressibility. Using a two-term series results in identical behavior as the
Mooney mode if:
1 = 2C10, 1 = 2,  2 = -2 C01 and 2 = -2
As an example of the usage of MATHE  for defining a Ogden material, see Ball Joint Rubber Boot  (Ch. 13) in the MSC Nastran
Demonstration Problems Manual.&lt;br&gt;
Arruda-Boyce Model
In the Arruda-Boyce strain energy model, the underlying molecular structure of elastomer is represented by an eight-chain
model to simulate the non-Gaussian behavior of individual chains in the network. The two parameters, nk and N (n is
the chain density, k is the Botzmann constant,  is the temperature, and N is the number of statistical links of length l in
the chain between chemical crosslinks) representing initial modules and limiting chain extensibility and are related to the
molecular chain orientation thus representing the physics of network deformation.
As evident in most models describing rubber deformation, the strain energy function constructed by fitting experiment data
obtained from one state of deformation to another fails to accurately describe that deformation mode. The Arruda-Boyce Wdeviatorictod
WdeviatoricmrC10I13–C01I23– + = Mooney-RivlinWdeviatoricnhC10I13– =Neo-Hookean
Wdeviatoricogden k
k&amp;mdash;&amp;mdash; 1k2k3k3– + +  
k1=N
=
ikJ k
3&amp;mdash;&amp;ndash;–
ik=&lt;/p&gt;
&lt;p&gt;445 Chapter 10: Materials
Nonlinear Elastic
Main Index
model ameliorates this defect and is unique since the standard tensile test data provides sufficient accuracy for multiple
modes of deformation.
Figure 10-8  Eight Chain Network in Stretched Configuration
The model is constructed using the eight chain network as follows:
Consider a cube of dimension 0 with an unstretched network including eight chains of length , where the
fully extended chain has an approximate length of Nl. A chain vector from the center of the cube to a corner can be
expressed as:
(10-32)
Using geometrical considerations, the chain vector length can be written as:
(10-33)
and
(10-34)
Using statistical mechanics considerations, the work of deformation is proportional to the entropy change on stretching the
chains from the unstretched state and may be written in terms of the chain length as:
(10-35)20
30
10C1
kj
i
r0Nl =
C10
2&amp;mdash;&amp;mdash;1i0
2&amp;mdash;&amp;mdash;2j0
2&amp;mdash;&amp;mdash;3k + + =
rchain1
3&amp;mdash;&amp;mdash;-Nl122232+ + 12=
chainrchain
r0&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
3&amp;mdash;&amp;mdash;-I112= =
W nkNrchain
Nl&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-ln
sinh&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Cˆ– + =&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Nonlinear Elastic446
Main Index
where n is the chain density and  is a constant.  is an inverse Langevin function correctly accounts for the limiting chain
extensibility and is defined as:
(10-36)
where Langevin is defined as:
(10-37)
With equations (10-34) through (10-37), the Arruda-Boyce model can be written
(10-38)
Gent Model
Also, using the notion of limiting chain extensibility, Gent proposed the following constitutive relation:
(10-39)
where
(10-40)
The constant  EIm is independent of molecular length and, hence, of degree of crosslinking. The model is attractive due to
its simplicity, but yet captures the main behavior of a network of extensible molecules over the entire range of possible
strains.
The volumetric part of the strain energy is for all the rubber models in SOL 400 is:
(10-41)
when K is the bulk modulus. It can be noted that the particular form of volumetric strain energy is chosen such that:
SOL 400 will use the three field formulation for rubber materials (Mooney, Gent, Arruda Boyce, and Ogden) if the bulk
modulus is entered as a -1. A series form of the volumetric strain energy U to capture the nonlinear pressure-volumetric
strain relationship is implemented. The volumetric strain energy is expressed as:Cˆ
 L1–rchain
Nl&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-=
1
&amp;mdash;– coth =
WdevArruda-Boycenk1
2&amp;mdash;I13–1
20N&amp;mdash;&amp;mdash;&amp;mdash;-I129–11
1050N2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-I1327– + + =
19
7000N3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-I1481–519
673750N4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-I15243–  + +
WdevGent EIm–
6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-Im
ImI1*–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- log =
I1*I13– =
Wvolumetric9K
2&amp;mdash;&amp;mdash;- J1
3&amp;mdash;
1–
2&lt;/h1&gt;&lt;p&gt;447 Chapter 10: Materials
Nonlinear Elastic
Main Index
(10-42)
where Di (i=1, 5)are material constants obtained from experimental data. If only a single term is used then  K= 2D1.
Foam Model
Sometimes elastomeric materials show large volumetric deformations. For this type of behavior, the models discussed above
are not appropriate. Instead, the foam model expressed by:
(10-43)
should be used. In contrast to the Ogden model, the first part of the foam strain energy function is not purely deviatoric.
The material constants n provide additional flexibility to describe the material behavior also for a large amount of
compressibility.
Updated Lagrange Formulation for Nonlinear Elasticity
The Mooney-Rivlin, Ogden, Arruda-Boyce, Gent and Foam models may be used either in the total Lagrange or updated
Lagrange framework. This is selected using the NLMOPTS LRGSTRN . For plane stress analysis, the total Lagrange
procedure will always be used.
Thermal, as well as viscoelastic, effects can be modeled with the current formulation. While the Mooney model can account
for the temperature dependent material properties, the Ogden model does not support the temperature dependence at this
time.
A consistent linearization has been carried out to obtain the tangent modulus. The current framework with an exact
implementation of the finite strain kinematics along with the split of strain energy to handle compressible and nearly
incompressible response is eminently suitable for implementation of any nonlinear elastic as well as inelastic material
models. In fact, the finite deformation plasticity model based on the multiplicative decomposition, F= FeFFp is
implemented in the same framework.
Experimental Determination of Hyperelastic Material Parameters
In order to determine the material parameters to be used, like Mooney coefficients, Ogden moduli, relaxation times, etc.,
experiments must be carried out. In this section, the laboratory tests of which data can be used to fit the material parameters
will be described. Once the test data is available the Experimental Data Fitting  module in Patran can be used to calculate
appropriate coefficient values.
For a homogeneous material, homogeneous deformation modes suffice to characterize the material constants. SOL 400
accepts test data from the following deformation modes:
Uniaxial tension and compressionU DiJ1–2i
i1=5
=
Wn
n&amp;mdash;&amp;mdash;1n2n3n3– + +  n
n&amp;mdash;&amp;mdash;1Jn–
n1=N
+
n1=N
=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic448
Main Index
Biaxial tension and compression
Planar tension and compression (also known as pure shear)
Simple Shear
Volumetric tension and compression&lt;/p&gt;
&lt;p&gt;449 Chapter 10: Materials
Nonlinear Elastic
Main Index
Figure 10-9  Test Data1
23
1
23
1
23
1
23Uniaxial Test Data
Biaxial Test Data
Planar Test Data
Volumetric Test Data&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic450
Main Index
Uniaxial Test
Probably the most popular test is the uniaxial test (see Figure 10-10). This test can be used in tension as well as in
compression, both for incompressible and (slightly) compressible elastomeric materials. The shape of the specimen used in
compression will usually be less slender than the shape used in tension. Within the region indicated by the dashed line, the
state of deformation will be homogeneous, where the deformation can be described by:
1 1 + e11 23 (10-44)
while the corresponding engineering stresses are given by:
, (10-45)
in which F is the applied force and A0  is the cross sectional area of the undeformed specimen in the  -  plane, within
the region indicated by the dashed line.
Figure 10-10  Uniaxial (Tensile) Test
Necessary input for the curve fitting program in Patran consists of at least engineering strain ( e11 ) versus engineering stress
(11 ) data points. In case of (slightly) compressible materials, information about the volume changes is also needed. This
data can be given either in terms of the area ratio or the volume ratio. The area ratio is defined by the current cross sectional
area A over the original cross sectional area A0. Similarly, the volume ratio is defined by the current volume V over the
undeformed volume V0. Notice that the volume ratio and the area ratio are related by:J
11F
A0&amp;mdash;&amp;mdash; = =22330 = =
E2E3
E1E3E2F F
V
V0&amp;mdash;&amp;mdash; JA
A0&amp;mdash;&amp;mdash;1e11+ = =&lt;/p&gt;
&lt;p&gt;451 Chapter 10: Materials
Nonlinear Elastic
Main Index
If, for a particular elastomeric material, both a tensile and a compression test have been performed, all the data points should
be collected into one data file. The layout of a data file containing uniaxial test data is given in the figure below. The
columns may be separated by either spaces or commas. For (nearly) incompressible material behavior, the third column can
be omitted.
Figure 10-11  Layout of Data File for a Uniaxial Test
Equi-Biaxial Test
The equi-biaxial tensile test outlined in Figure 10-12 can be used to obtain, within the region indicated by the dashed line,
a homogeneous state of deformation defined by:
Figure 10-12  Equi-biaxial (Tensile) Test
12 1 + e11 1 + e223J2 (10-46)e1111AA0 e1111VV0
or
F
FF F
E1E3E2&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic452
Main Index
with corresponding engineering stresses:
, (10-47)
with A0 being the original cross sectional area of the elastomeric sheet in the direction perpendicular to the applied forces,
which is assumed to be the same in the &amp;ndash;plane and the &amp;ndash;plane.
For compressible elastomers, volumetric information is needed. For the equi-biaxial test, this can be given in terms of a
thickness ratio or, similar to the uniaxial test, a volume ratio. The thickness ratio is defined as the current sheet thickness t
over the original sheet thickness t0. The relation between the thickness ratio and the volume ratio is:
(10-48)
The layout of a data file for an equi-biaxial tensile test is given in Figure 10-12.
Planar Shear Test
A state of planar shear, also sometimes called pure shear, can be obtained by clamping and stretching an elastomeric
rectangular sheet of material, as indicated in Figure 10-13.
Figure 10-13  Planar Shear Test
Except for the vicinity of the free edges and the clamps, the state of strain can be found to be substantially uniform,
according to:
1 1 + e11 , 1, (10-49)1122F
A0&amp;mdash;&amp;mdash; = = =330=
E1E3E2E3
V
V0&amp;mdash;&amp;mdash; Jt
t0&amp;mdash;-1e11+2= =
F F
E1E3E2
3J
&amp;mdash;=&lt;/p&gt;
&lt;p&gt;453 Chapter 10: Materials
Nonlinear Elastic
Main Index
where the known stress components are given by:
, 33 (10-50)
in which  A0 is the cross sectional area of the undeformed specimen in the &amp;ndash;plane. Notice that the engineering strain&lt;br&gt;
e22 is zero, but that the corresponding engineering stress 22 depends on the material behavior.
U =TsS (10-51)
(10-52)
Simple Shear Test
A test which, compared to the above mentioned tests, leads to a more complex kinematic description, is the simple shear
test (see Figure 10-14).Upon introducing the shear strain , the coordinates in the deformed configuration are given by:
x1 = X1 + X2 , x2 = X2 , x3 = X3 (10-53)
which yields for the deformation gradient:
(10-54)
Figure 10-14  Simple Shear Test11F
A0&amp;mdash;&amp;mdash; = =
E1E3
TSSU 2SS3––  
I1U
I2U+
   = =
F10
010
001=
2F
E1E3E2  atan&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic454
Main Index
Notice that det(F) = 1, irrespective of the value of , from which it can be concluded that a simple shear test is a constant
volume  test.
Based on equations (10-53) and (10-54) and Figure 10-14, the engineering strain tensor and the right Cauchy-Green strain
tensor can be evaluated as:
(10-55)
(10-56)
According to equation (10-56), the principal stretch ratios follow from the principal values of C and read:
, 3 (10-57)
It can easily be verified that 123, which again shows that the simple shear test is a constant volume test. The relevant
engineering stress is given by:
(10-58)
with  being the cross sectional area of the undeformed specimen in the &amp;ndash;plane.
The layout of a data file containing measurements of a simple shear test is given in Figure 10-15.
Figure 10-15  Layout of Data File for a Simple Shear Teste020
200
0 00=
C10
12+ 0
001=
1212
2&amp;mdash;&amp;ndash;12
4&amp;mdash;&amp;ndash;+ + =
12F
A0&amp;mdash;&amp;mdash;=
A0E1E3
2e12=12&lt;/p&gt;
&lt;p&gt;455 Chapter 10: Materials
Nonlinear Elastic
Main Index
Volumetric Test
Although a uniaxial, equi-biaxial and planar shear test can be used to obtain information about the volumetric behavior,
for compressible materials an additional volumetric test may be preferable. This is especially true for slightly compressible
materials, since volumetric data from other tests other than a volumetric one may easily be inaccurate (because most of the
deformation is deviatoric). T wo commonly used volumetric tests are outlined in Figure 10-16. In Figure 10-16a, a cylindrical
specimen is compressed in a cylindrical hole. This test can be successfully applied for slightly compressible materials. In
Figure 10-16b, a specimen is deformed by compressing the surrounding fluid. This volumetric test can also be used for highly
compressible materials.
Figure 10-16  Volumetric Tests
For a volumetric test, the direct true stress components are assumed to be equal to the hydrostatic pressure  and given by:
(10-59)
in which Ap denotes the area of the piston in the &amp;ndash;plane. The deformation can be expressed in terms of an
engineering strain e and corresponding stretch ratio , which can be determined from the measured volume change
according to:
(10-60)
Based on  according to Figure 10-16b, the engineering stress  follows from:
 T11(10-61)FF
F(a) (b)
E2E3E1
p
T11T22T33F
Ap&amp;mdash;&amp;mdash; = = =
E2E3
e1–V
V0&amp;mdash;&amp;mdash;3 1– J31– = = =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic456
Main Index
Notice that only in the case of Figure 10-16b the engineering strain e and the engineering stress  are equal to the direct
components of the engineering strain and the engineering stress tensor.
The layout of the data file corresponding to a volumetric test is given in Figure 10-17. Notice that because of Figure 10-16b,
the entries of the first and the third column are not independent.
Figure 10-17  Layout of Data File for a Volumetric Test
Relaxation Test
The relaxation test is necessary to obtain the rate response for the viscoelastic material model.
The basic feature of a relaxation test is that the force or stress response to a prescribed fixed displacement or deformation is
measured as a function of time. A relaxation test for a large strain elastomeric material is indicated in Figure 10-18. By
measuring the force needed for a displacement u at different time intervals, the decay of the strain energy as a function of
time can be determined. For linear elastic isotropic material, similar tests can be performed to get information about the
shear modulus and/or the bulk modulus as a function of time. In order to properly measure the instantaneous values,
application of the prescribed displacement should occur sufficiently fast. It should be noted, due to the assumption
introduced in equation (10-84), that for large strain visco-elastic materials the magnitude of (the instantaneous value of) the
strain energy is not important, since every energy term in the Prony series expansion is related to the instantaneous strain
energy using a scalar multiplier. The data does not need to be equispaced in time. Usually, at the beginning of the relaxation
experiment the measurements are done at smaller time intervals than at the end of the experiment.
Figure 10-18  Relaxation Teste VV0
u&lt;/p&gt;
&lt;p&gt;457 Chapter 10: Materials
Nonlinear Elastic
Main Index
If, for linear viscoelastic materials, instead of a relaxation test only a creep test can be performed, the creep data must be
transformed into relaxation data. Converting creep data into relaxation data can be done using a numerical integration
scheme, but is not part of SOL 400.
Hyperelastic Foam Properties
Elastomeric foams are cellular solids that have the following mechanical characteristics:
They can deform elastically up to large strain: up to 90% strain in compression. In most applications, this is the
dominant mode of deformation.
Their porosity permits very large volumetric changes. This is in contrast to solid rubbers, which are approximately
incompressible.
Cellular solids are made up of interconnected networks of solid struts or plates which form the edges and faces of
cells. Foams are made up of polyhedral cells that pack in three dimensions. The foam cells can either be open (e.g.,
sponge) or closed (e.g., flotation foam). Common examples of elastomeric foam materials are cellular polymers
such as cushions, padding, and packaging materials which utilize the excellent energy absorption properties of
foams - for a certain stress level, the energy absorbed by foams is substantially greater than by ordinary stiff elastic
materials.
Figure 10-19 shows a typical compressive stress-strain curve for elastomeric foam.
Figure 10-19  Typical Compressive Stress-Strain Curve
Three stages can be distinguished during compression:
At small strains (&amp;lt; 5%) the foam deforms in a linear elastic manner, due to cell wall bending.
This is followed by a plateau of deformation at almost constant stress, caused by the elastic buckling of the columns or plates
which make up the cell edges or walls. In closed cells, the enclosed gas pressure and membrane stretching increase the level
and slope of the plateau.
Finally, a region of densification occurs, where the cell walls crush together, resulting in a rapid increase of compressive
stress. Ultimate compressive nominal strains of 0.7 to 0.9 are typical.STRAIN  STRESS Densification
Plateau: Elastic buckling&lt;br&gt;
of cell walls&lt;br&gt;
Cell wall bending&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic458
Main Index
The tensile deformation mechanisms for small strains are similar to the compression mechanisms but differ for large strains.
The figure shows a typical tensile stress-strain curve.
Figure 10-20  Typical Tensile Stress-Strain Curve
There are two stages during tension:
At small strains the foam deforms in a linear, elastic manner, due to cell wall bending, similar to that in compression.
The cell walls rotate and align, resulting in rising stiffness. The walls are substantially aligned at a tensile strain of about 1/3.
Further stretching results in increased axial strains in the walls.
At small strains for both compression and tension, the average experimentally observed Poisson&amp;rsquo;s ratio, n, of foams is 1/3.
At larger strains it is commonly observed that Poisson&amp;rsquo;s ratio is effectively zero during compression - the buckling of the cell
walls does not result in any significant lateral deformation. However, during tension, n is nonzero, which is a result of the
alignment and stretching of the cell walls.
The manufacture of foams often results in cells with different principal dimensions. This shape anisotropy results in
different loading responses in different directions. However, the foam model does not take this kind of initial anisotropy
into account.
Determination of Foam Material Parameters
The response of the material is defined by the parameters in the strain energy function, U, so that it is necessary to
determine these parameters to use the foam model. Patran contains a capability for obtaining the , , and  for the
foam model with up to six terms (N=6) directly from test data. It is usually best to obtain data from several experiments
involving different kinds of deformation, over the range of strains of interest in the actual application, and to use all of these
data to determine the parameters.
Since the properties of foam materials can vary significantly from one batch to another, all of the experiments should be
performed on specimens taken from the same batch of material.
Specifying Hyperelastic Material Entries
Nonlinear hyperelastic materials are characterized in MSC Nastran with the following bulk data entries:STRAIN  STRESS
Cell wall bending  Cell wall alignment
iii&lt;/p&gt;
&lt;p&gt;459 Chapter 10: Materials
Nonlinear Elastic
Main Index
.
Viscoelastic
The material models discussed in previous sections are considered to be time independent. However, rubber materials often
show a rate-dependent behavior and can be modeled as viscoelastic  materials. Viscoelasticity can be applied:
To determine the current state of deformation based on the entire time history of loading.
To include temperature dependencies.
To use in conjunction of isotropic, orthotropic, and anisotropic material for small strain problems.
To use in conjunction with rubber or foam material for large strain problems.
Hereditary Integral Model
The stress-strain equations in viscoelasticity are not only dependent on the current stress and strain state (as represented in
the Kelvin model), but also on the entire history of development of these states. This constitutive behavior is most readily
expressed in terms of hereditary or Duhamel integrals. These integrals are formed by considering the stress or strain build-
up at successive times. T wo equivalent integral forms exist: the stress relaxation form and the creep function form. In SOL
400, the stress relaxation form is used.
Small Strain Viscoelasticity
In the stress relaxation form, the constitutive relation can be written as a hereditary integral formulation
(10-62)
The functions Gijkl are called stress relaxation functions. They represent the response to a unit applied strain and have
characteristic relaxation times associated with them. The relaxation functions for materials with a fading memory can be
expressed in terms of Prony or exponential series.
(10-63)Entry Description
MATHP Specifies material properties for use in fully nonlinear (i.e., large strain and large rotation)
hyperelastic analysis of rubber -like materials (elastomers).
MATHE Specifies hyperelastic (rubber-like) material properties for nonlinear (large strain and large
rotation) analysis in Nonlinear Analysis.
ijt Gijklt–dkl
d&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;d
0t
Gijkltkl0 + =
Gijklt GijklGijkln exp tn–
n1=N
+ =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic460
Main Index
in which  is a tensor of amplitudes and n is a positive time constant (relaxation time). In the current
implementation, it is assumed that the time constant is isotropic. In equation (10-63),  represents the long term
modulus of the material.
The short term moduli (describing the instantaneous elastic effect) are then given by
(10-64)
The stress can now be considered as the summation of the stresses in a generalized Maxwell model ( Figure 10-21)
(10-65)
where
(10-66)
(10-67)
Figure 10-21  The Generalized Maxwell or Stress Relaxation Form
For integration of the constitutive equation, the total time interval is subdivided into a number of subintervals  (tm-1, tm)
with time-step h = tm - tm-1. A recursive relation can now be derived expressing the stress increment in terms of the values
of the internal stresses  at the start of the interval. With the assumption that the strain varies linearly during the time
interval h, we obtain the increment stress-strain relation asGijkln
Gijkl
Gijkl0Gijkl0 GijklGijkln
n1=N
+ = =
ijtijtijnt
n1=N
+ =
ijGijklklt =
ijnGijklnexp t–n
 – dkl
d&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;d
0t
=
E11
q1
E0
i = i/EiE22
q2
Eii
qiE
ijn&lt;/p&gt;
&lt;p&gt;461 Chapter 10: Materials
Nonlinear Elastic
Main Index
(10-68)
where
(10-69)
and
(10-70)
In SOL 400, the incremental equation for the total stress is expressed in terms of the short term moduli (See equation
(10-64)).
(10-71)
Note that the set of equations given by equation (10-71) can directly be used for both anisotropic and isotropic materials.
Isotropic Viscoelastic Material
For an isotropic viscoelastic material, SOL 400 assumes that the deviatoric and volumetric behavior are fully uncoupled and
that the behavior can be described by a time dependent shear and bulk modules. The bulk moduli is generally assumed to
be time independent; however, this is an unnecessary restriction of the general theory.
Both the shear and bulk moduli can be expressed in a series
(10-72)
(10-73)
with short term values given by
(10-74)ijtm Gijkl
n
hGijkln
n1=N
+ klnhijntmh–
n1=N
– =
nh 1exphn
– –=
nhnhnh =
ijtm Gijkl01n
h – Gijkln
n1=N
– kltmnhijn
n1=N
– = tmh–
Gt GGn
exptdn–
n1=N
+ =
Kt KKn exptvn–
n1=N
+ =
G0GGn
n1=N
+ =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic462
Main Index
(10-75)
Let the deviatoric and volumetric component matrices dandv be given by
The increment set of equations is then given by
(10-76)
andK0KKn
n1=N
+ =
d43 2–32–3 0 0 0
2–343 2–3 0 0 0
2–32–343 0 0 0
0 0 0 1 0 0
0 0 0 0 1 0
0 0 0 0 0 1=
v111000
111000
111000
000000
000000
000000=
tm G01dnh – Gn
n1=Nd
–
     
dtm =
dnhdntmh–
n1=Nd
vnhvntmh–
n1=Nv
– –K01vnh – Kn
n1=Nv
–
     
vtm&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P25</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_025/</guid>
      <description>
        
        
        &lt;p&gt;463 Chapter 10: Materials
Nonlinear Elastic
Main Index
(10-77)
Note that the deviatoric and volumetric response are fully decoupled.
Note that the algorithm is exact for linear variations of the strain during the increment. The algorithm is implicit; hence,
for each change in time-step, a new assembly of the stiffness matrix is required.
Large Strain Viscoelasticity
For an elastomeric time independent material, the constitutive equation is expressed in terms of an energy function W. For
a large strain viscoelastic material, Simo generalized the small strain viscoelasticity material behavior to a large strain
viscoelastic material. The energy functional then becomes
(10-78)
where Eij are the components of the Green-Lagrange strain tensor,  internal variables and 0 the elastic strain energy
density for instantaneous deformations. In SOL 400, it is assumed that 0 = W , meaning that the energy density for
instantaneous deformations is given by the third order James Green and Simpson form or the Ogden form.
The components of the second Piola-Kirchhoff stress then follow from
(10-79)
The energy function can also be written in terms of the long term moduli resulting in a different set of internal variables
(10-80)
where  is the elastic strain energy for long term deformations. Using this energy definition, the stresses are obtained from
(10-81)dntmdnhGndtmdnhdntmh– – =
vntmvnhKnvtmvnhvntmh– – =
EijQijn0Eij QijnEij
n1=N
– InQijn
n1=N
+ =
Qijn
Sij
Eij&amp;mdash;&amp;mdash;&amp;mdash;-0
Eij&amp;mdash;&amp;mdash;&amp;mdash;- Qijn
n1=N
– = =
Tijn
EijTijnEij TijnEij
n1=N
+ =
SijE
Eij&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; Tijn
n1=N
+ =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic464
Main Index
Observing the similarity with the equations for small strain viscoelasticity the internal variables can be obtained from a
convolution expression
(10-82)
where  are internal stresses obtained from energy functions.
(10-83)
Let the total strain energy be expressed as a Prony series expansion
(10-84)
If, in the energy function, each term in the series expansion has a similar form, equation (10-84) can be rewritten
(10-85)
where n is a scalar multiplier for the energy function based on the short term values.
The stress-strain relation is now given by
(10-86)
(10-87)
(10-88)
Analogue to the derivation for small strain viscoelasticity, a recursive relation can be derived expressing the stress increment
in terms of values of the internal stresses at the start of the increment.
The equations are reformulated in terms of the short time values of the energy functionTijnS·
ijn
0texp t–n – d =
Sijn
Sijnn
Eij&amp;mdash;&amp;mdash;&amp;mdash;- =
nexptn–
n1=N
+ =
n0exptn–
n1=N
+ =
Sijt Sijt Tijn
n1=N
t + =
Sij
Eij&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 1n
n1=N
–
    
0
Eij&amp;mdash;&amp;mdash;&amp;mdash;- = =
TijnnSij0texp t–n – d
0t
=&lt;/p&gt;
&lt;p&gt;465 Chapter 10: Materials
Nonlinear Elastic
Main Index
(10-89)
(10-90)
It is assumed that the viscoelastic behavior in SOL 400 acts only on the deviatoric behavior.
As an example of the usage of MATVE  for defining a Mooney material, see Ball Joint Rubber Boot  (Ch. 13) in the MSC
Nastran Demonstration Problems Manual .
Thermal-Rheologically Simple Materials
The rate processes in many viscoelastic materials is known to be highly sensitive to temperature changes. Such temperature-
dependent properties cannot be neglected in the presence of any appreciable temperature variation. For example, there is a
large class of polymers which are adequately represented by linear viscoelastic laws at uniform temperature. These polymers
exhibit an approximate translational shift of all the characteristic response functions with a change of temperature, along a
logarithmic time axis. This shift occurs without a change of shape. These temperature-sensitive viscoelastic materials are
characterized as Thermo-Rheologically Simple.
A “reduced” or “pseudo” time can be defined for the materials of this type and for a given temperature field. This new
parameter is a function of both time and space variables. The viscoelastic law has the same form as one at constant
temperature in real time. If the shifted time is used, however, the transformed viscoelastic equilibrium and compatibility
equations are not equivalent to the corresponding elastic equations.
In the case where the temperature varies with time, the extended constitutive law implies a nonlinear dependence of the
instantaneous stress state at each material point of the body upon the entire local temperature history. In other words, the
functionals are linear in the strains but nonlinear in the temperature.
The time scale of experimental data is extended for Thermo-Rheologically Simple materials. All characteristic functions of
the material must obey the same property. The shift function is a basic property of the material and must be determined
experimentally. As a consequence of the shifting of the mechanical properties data parallel to the time axis (see Figure 10-22),
the values of the zero and infinite frequency complex moduli do not change due to shifting. Hence, elastic materials with
temperature -dependent characteristics neither belong to nor are consistent with the above hypothesis for the class of
Thermo-Rheologically Simple viscoelastic solids.Sijtm 1 1nh –
n1=N
– n
    
Sij0tmSij0tmh– –  =
nSijntmh–
n1=N
–
SijtmnhnSij0tmSijntmh– – nhSijntmh– – =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic466
Main Index
Figure 10-22  Relaxation Modulus vs. Time at Different Temperatures
Let E (ln t ) be the relaxation modulus as a function of ln t at uniform temperature, T. Then
(10-91)
where  f (T) is measured relative to some arbitrary temperature T. The modulus curve shifts towards shorter times with an
increase of temperature; f (T) is a positive increasing function for T &amp;gt; T0. If  GT(t) denotes the relaxation modulus as a
function of time at uniform temperature T, so that,
GT(t) = ET (ln t) (10-92)
then
(10-93)
The relaxation modulus (and the other characteristic functions) at an arbitrary uniform temperature is thus expressed by
the base temperature behavior related to a new time scale that depends on that temperature.
There is some mapping of the time coordinate for nonuniform, nonconstant temperature, T(x,t), which depends on the
position
For a nonuniform, nonconstant temperature, the shift function is a(T(x,t )) and the rate of change of reduced time can be
written as:
d = aT[T(x,t )]dt
SOL 400 offers two explicit forms for entering the shift function. The first is based on the familiar Williams-Landel-Ferry
(WLF) equation. Rewriting the above expression for reduced time as
(10-94)
then the WLF form state that
(10-95)GTT0
f(T1)
ln tT1T2f(T2)
ETln t ET0ln t+fT *T0T0  =
GTt GT0 =
xttd
TTxt&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
0t
=
a10TT logC1TT0– –
C2TT0– +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; hT – = =&lt;/p&gt;
&lt;p&gt;467 Chapter 10: Materials
Nonlinear Elastic
Main Index
and
(10-96)
Typically, the glassy transition point is taken as the reference temperature in the above relation. The logarithmic shift can
also be expressed in a polynomial expansion about the arbitrary reference point as
(10-97)
Enter the shift function parameters associated with Thermo-Rheologically Simple behavior through the MATTVE  bulk
data entry.
In addition to the Thermo-Rheologically Simple material behavior variations of initial stress-strain moduli , the
temperature of the other mechanical properties (coefficient of thermal expansion, etc.) due to changes in temperature can
be specified via the MATT1  or MATTORT  bulk data entry.
Note, however, that only the instantaneous moduli are entered. Hence, the long term moduli given by
(10-98)
which can easily become negative if the temperature effects are not defined properly.
Narayanaswamy Model
The annealing of flat glass requires that the residual stresses be of an acceptable magnitude, while the specification for optical
glass components usually includes a homogenous refractive index. The design of heat treated processes (for example,
annealing) can be accomplished using the Narayanaswamy model. This allows you to study the time dependence of physical
properties (for example, volumes) of glass subjected to a change in temperature.
The glass transition is a region of temperature in which molecular rearrangements occur on a scale of minutes or hours, so
that the properties of a liquid change at a rate that is easily observed. Below the glass transition temperature Tg, the material
is extremely viscous and a solidus state exists. Above Tg, the equilibrium structure is arrived at easily and the material is in
liquid state. Hence, the glass transition is revealed by a change in the temperature dependence of some property of a liquid
during cooling. If a mechanical stress is applied to a liquid in the transition region, a time -dependent change in dimensions
results due to the phenomenon of visco -elasticity.
If a liquid in the transition region is subjected to a sudden change in temperature, a time -dependent change in volume
occurs as shown in Figure 10-23. The latter process is called structural relaxation. Hence, structural relaxation governs the
time-dependent response of a liquid to a change of temperature.t 10hTtdt
0t
=
log10ATTiTT0–i
i0=m
=
Gijkl0
GijklGijkl0T Gijkln
n1=N
– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic468
Main Index
Figure 10-23  Structural Relaxation Phenomenon
Suppose a glass is equilibrated at temperature T1, and suddenly cooled to T2 at t0. The instantaneous change in volume is
g(T2 - T1), followed by relaxation towards the equilibrium value  V (, T2). The total change in volume due to the
temperature change is 1 (T2 - T1) as shown in Figure 10-23b. The rate of volume change depends on a characteristic time
called the relaxation time.
The slope of dV/dT changes from the high value characteristic of the fluid 1 to the low characteristic of the glass g as
shown in Figure 10-24. The glass transition temperature Tg is a point in the center of the transition region. The
low-temperature slope g represents the change in volume V caused by vibration of the atoms in their potential wells. In
the (glassy) temperature range, the atoms are frozen into a particular configuration. As the temperature T increases, the
atoms acquire enough energy to break bonds and rearrange into new structures. That allows the volume to increase more
rapidly, so 1&amp;gt;g. The difference 1- g represents the structural contribution to the volume.T1
T2
t0T(t)
t
(a) Step Input for Temperature
V(0,T1)
V(,T2)V(0,T2)
t0 tg(T2-T1)
l(T2-T1)
(b) Volume Change as Function of Temperature&lt;/p&gt;
&lt;p&gt;469 Chapter 10: Materials
Nonlinear Elastic
Main Index
Figure 10-24  Property (Volume) – Temperature Plot
When a liquid is cooled and reheated, a hysteresis is observed as shown in Figure 10-25.
Figure 10-25  Volume Change During Cyclic Temperature History
Unfortunately, the notion of a glass transition temperature is insufficient as real glassy materials generally exhibit a
temperature regime, called a transition range, across which their bulk properties gradually change from being solid-like to
liquid -like in nature.
As discussed earlier, properties have a time dependence in the transition range. An explanation for the strong time
dependence lies in that the material resides at a nonequilibrium temperature which lags behind the applied temperature
during the heating-cooling cycle. The nonequilibrium temperature is called the fictive temperature, Tf , as shown in
Figure 10-24. The fictive temperature at  T1 , Tf (T1) is found by extrapolating a line from V(T1) with slope g to intersect
a line extrapolated from V(T0) with slope 1 (see Figure 10-24). For T  ≤ T2 (well below the glass transition), Tf  reaches a
limiting value that is called Tg. If the material were equilibrated at Tf (T1), then instantaneously cooled to T1, it would
change along the line with slope g because no structural rearrangement could occur. Therefore, it would have the same
volume as the continuously cooled sample.
The response of the volume change can be described by:V(T)
V(T1)
T2 TgTf(T1)gl
Solidus
StateLiquid
State
Transition Range
Tf (T1): Fictive TemperatureV(T0)
T0
T1
Tg TV
NonequilibriumEquilibrium&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Elastic470
Main Index
(10-99)
where Tf (t) is the current value of the fictive temperature. The response function, Mv , which dictates the value of the fictive
temperature is assumed to be linear in its argument and governs both the value of the fictive temperature as well as the
material property of interest.
(10-100)
By virtue of its linearity, Boltzmann’s superposition principle can be invoked to calculate the fictive temperature at any time:
(10-101)
The concept of reduced time, (t), is introduced in the spirit of Thermo -Rheologically Simple materials to capture the
disparate nonlinear response curves on a single master curve.
The reduced time used in Marc is given by the following expression:
(10-102)
Here refis the reference relaxation time of the material evaluated at a suitable reference temperature, Tref . The relaxation
time  at the given time and temperature can be represented as:
(10-103)
The parameter x allows you to dictate how much of the fictive temperature participates in the prescription of the relaxation
time, and must, therefore, range between 0 and 1.
H is the activation energy for the particular process and R is the gas constant. A typical response function is:
(10-104)
Multiple structural relaxation times can exist. The response function has, therefore, been implemented as:
For a complete description of the model, it is necessary to prescribe the following:VT2t, VT1,gT2T1–lg–TftT2–  + + =
VtV –
V0V –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- MvtTftT –
T0T –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = =
Tft Tt Mvtt – d
dt&amp;mdash;&amp;mdash;Tt ( )t&amp;rsquo;d
–t
– =
tref
Tt&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-td
–t
=
refH
R&amp;mdash;-1
Tref&amp;mdash;&amp;mdash;&amp;mdash;x
T&amp;mdash;–1x–
Tf&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – –  exp =
Mv
&amp;ndash;–exp =
Mv Wgi
i&amp;mdash;-–exp
i1=n
=&lt;/p&gt;
&lt;p&gt;471 Chapter 10: Materials
Nonlinear Elastic
Main Index
1.The weight (Wg)i for each term in the series (usually ).
2.The reference relaxation times i,ref.
3.The fraction parameter x and the activation energy-gas constant ratio.
4.The solid and liquid coefficients of thermal of expansion, g and 1 through the MATTVE  bulk data entry.
A stable algorithm is employed to calculate the convolution integrals. For improved accuracy it is recommended that the
time steps used during the simulation be sufficiently small.
In Figure 10-26, the volume of cube of material, which is allowed to contract freely and is experiencing a 100 C quench, is
displayed.
Figure 10-26  Volume-Temperature-Time Plot
Specifying Viscoelastic Material Entries
The viscoelastic MATVE  and MATTVE  material entries are provided for cases where dissipative losses caused by “viscous”
(internal friction) effects in materials must be modeled. For time domain analysis, this option is used with an elastic model
to define classical linear, small strain, viscoelastic behavior, or with hyperelastic or foam models to define finite linear, large
deformation, viscoelastic behavior. As described in the previous section, viscoelastic relaxation data can be fit using the
experimental data fitting capability available in Patran.
Entry Description
MATVE Specifies isotropic viscoelastic material properties to be used for quasi-static or dynamic analysis
in SOL 400.
MATTVE Specifies temperature-dependent visco-elastic material properties in terms of Thermo-
Rheologically Simple behavior to be used for quasi-static or transient dynamic analysis in SOL
400. Wgi1
TemperatureVolume
TimeT=100
gT
lT&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MATS1 Model472
Main Index
MATS1 Model
The MATS1  bulk data entry may be used to define elastic-plastic material behavior or a nonlinear elastic model using the
TYPE=NLELAST . When modeling metal materials subjected to high stress, the use of MATEP is recommended and is
discussed in subsequence sections.
The nonlinear elastic capability was developed to predict the multi-axial stress-strain behavior for nonlinear elastic material,
for which only the simple tension stress-strain data is available. The theory and algorithm is adequate to trace the stress-
strain curve accurately for the uniaxial loading cases. However, the theory is not based on the classical theory of finite
elasticity. For large strain, the Mooney, Ogden, Arruda-Boyce, or Gent model should be used. Consequently, some of the
constitutive relations may be violated in the multiaxial stress cases. Nevertheless, this capability can be justified by stating
that the design is not intended for the large-strain deformation.
The current nonlinear elastic capability accommodates bilateral properties (uniaxial tension-compression) accurately for the
uniaxial deformations. This design is considered adquate for the multiaxial deformation if the strain remains in the small
range.
Theoretical Basis
The nonlinear elastic capability in MSC Nastran was designed to satisfy the equivalence of the deformation work per unit
volume in the simple tension to the strain energy per unit volume (conservation of energy), while the work done for
deformation may be defined by a stress-strain curve in simple tension; i.e.,
It is further assumed that the effective strain  may be defined by:
From the total differential of the above equation, we obtain
Substituting the latter in the first equation above, where stresses may be expressed in terms of total strains; i.e.
The tangential matrix for such material may be obtained by differentiating the latter equation; i.e.d&amp;lt;&amp;gt;d=

1
2&amp;mdash;E2 1
2&amp;mdash;&amp;lt;&amp;gt;Ded =
d1
E&amp;mdash;&amp;mdash;&amp;lt;&amp;gt;De =

E&amp;mdash;&amp;mdash;De =
Dne
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
E&amp;mdash;&amp;mdash;De
E&amp;mdash;&amp;mdash;
&amp;mdash;&amp;mdash;
&amp;mdash;–De&amp;lt;&amp;gt;DeT+ = =&lt;/p&gt;
&lt;p&gt;473 Chapter 10: Materials
MATS1 Model
Main Index
Combining Uniaxial Tension and Compression Stress-strain Curves
In addition to the MAT1  bulk data entry, the user specifies the stress-strain behavior through the TABLES1  bulk data
option.
Some materials exhibit appreciably different behavior in compression from that in tension even in the small strain range;
i.e., cast iron shown in Figure 10-27. For uniaxial loading, the magnitude of the strain in that direction becomes the effective
strain; e.g.,
for uniaxial tension in x
for uniaxial compression in x
The full stress -strain curve (- &amp;lt; x &amp;lt; )may be defined in the first and the third quadrant to accommodate different
uniaxial compression data.  If the curve is defined only in the first quadrant, then the curve must start at the origin&lt;br&gt;
(X1 = 0.0, Y = 0.0, ) and the compression properties will be assumed identical to tension properties.
Figure 10-27  Cast Iron Stress-Strain Behavior
In case of this unsymmetric material behavior, we need to be able to distinguish between a state of compression and a state
of tension. There are two known data points for one effective strain , namely the effective stress for uniaxial tension&lt;br&gt;
and the effective stress for uniaxial compression . Some method of interpolation or extrapolation is required to predict
the effective stress for the general stress state using two known data points.x=
x–=
StrainStress
 t
c&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MATS1 Model474
Main Index
The first stress invariant (I1) is adopted to determine if we are in the compression or tension zone
I1 = x + y + z
The instantaneous modulus  is interpolated or extrapolated in the same manner.
Solution Algorithm for Bilateral Stress-strain Relations
The new stress state is proportional in magnitude to the effective stress , which is determined as follows:
1.Compute the effective stress  based on e; i.e.,
for 3-D
for plane stress
for plane strain
2.Compute the first invariant of I = x + y + z:
where z =  for plane stress
3.Determine the ratio (r) by normalizing I1 by , i.e.,
where r signifies the relative distance from the midpoint of  and  at . It would be implausible to process a
large value of r (such is the case with a hydrostatic load). Therefore, r, will be confined to a plausible range,
. The value will be reset to the limit  if r lies outside the range.
4.Look up the user specified stress-strain curve in the TABLES1  bulk data entry and determine  and ; i.e.,
&amp;mdash;&amp;mdash;

e
e De =
1
2&amp;mdash;xy–2yz–2zx–2+ +  3xy2yz2zx2+ +   + =
x2xy–y23xy2+ + =
1
2&amp;mdash;xy–2yz–2zx–2+ +  3xy2+ =
c
rI1
e&amp;mdash;&amp;mdash;=
ct
1r1 – r 1=
tc
t =
c =&lt;/p&gt;
&lt;p&gt;475 Chapter 10: Materials
Inelastic Behavior
Main Index
5.Determine based on , . and r; i.e.,
For the tangent matrix the instantaneous modulus  is determined using the same ratio (r) as follows:
1.Compute the instantaneous slope at  for tension, i.e.,
for
where (xi, yi) is the i-th data point in the TABLES1  bulk data entry
2.Compute the instantaneous slope at  for compression; i.e.,
for
3.Determine  based on ,  and r, i.e.,
Subsequently the values can now be used as in the tension-only algorithm.
Inelastic Behavior
Most materials of engineering interest initially respond elastically. Elastic behavior means that the deformation is fully
recoverable, so that, when the load is removed, the specimen returns to its original shape. If the load exceeds some limit (the
“yield load”), the deformation is no longer fully recoverable. Some parts of the deformation will remain when the load is
removed as, for example, when a paper clip is bent too much, or when a billet of metal is rolled or forged in a manufacturing
process. Plasticity theories model the material’s mechanical response as it undergoes such nonrecoverable deformation in a
ductile fashion. The theories have been developed most intensively for metals, but they are applied to soils, concrete, rock,
and ice. These materials behave in very different ways (for example, even large values of pure hydrostatic pressure cause very
little inelastic deformation in metals, but quite small hydrostatic pressure may cause a significant, non-recoverable volume
change in a soil sample), but the fundamental concepts of plasticity theories are sufficiently general that models based on
these concepts have been successfully developed for a wide range of materials. A number of these plasticity modes are
available in the SOL 400 material library.tc
tc+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;rtc–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + =

&amp;mdash;&amp;mdash;


&amp;mdash;&amp;mdash;
tyi1+yi–
xi1+xi–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = xixi1+
–

&amp;mdash;&amp;mdash;
cyj1+yj–
xj1+xj–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = xixi1+

&amp;mdash;&amp;mdash;
&amp;mdash;&amp;mdash;
t
&amp;mdash;&amp;mdash;
c

&amp;mdash;&amp;mdash;1
2&amp;mdash;
&amp;mdash;&amp;mdash;
t
&amp;mdash;&amp;mdash;
c+r
2&amp;mdash;
&amp;mdash;&amp;mdash;
t
&amp;mdash;&amp;mdash;
c– + =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior476
Main Index
In nonlinear material behavior, the material parameters depend on the state of stress. Up to the proportional limit, i.e., the
point at which linearity in material behavior ceases, the linear elastic formulation for the behavior can be used. Beyond that
point, and especially after the onset of yield, nonlinear formulations are required. In general, two ingredients are required
to ascertain material behavior:
1.an initial yield criterion to determine the state of stress at which yielding is considered to begin
2.mathematical rules to explain the post-yielding behavior
There are two major theories of plastic behavior that address these criterion differently. In the first, called deformation
theory,  the plastic strains are uniquely defined by the state of stress. The second theory, called flow or incremental  theory,
expresses the increments of plastic strain (irrecoverable strains) as functions of the current stress, the strain increments, and
the stress increments. Incremental theory is more general and can be adapted in its particulars to fit a variety of material
behaviors. The plasticity models in SOL 400 are “incremental” theories, in which the mechanical strain rate is decomposed
into an elastic part and a plastic (inelastic) part through various assumed flow rules.
The incremental plasticity models are formulated in terms of:
A yield surface , which generalizes the concept of “yield load” into a test function which can be used to determine
if the material will respond purely elastically at a particular state of stress, temperature, etc.;
A flow  rule that defines the inelastic deformation that must occur if the material point is no longer responding
purely elastically;
and some evolution laws that define the hardening  – the way in which the yield and/or flow definitions change as
inelastic deformation occurs.
The models also need an elasticity definition, to deal with the recoverable part of the strain models divide into those that
are rate-dependent and those that are rate-independent.
SOL 400 includes the following models of inelastic behavior.
Metal Plasticity (von Mises, Hill, or Barlat)
Pressure-Dependent models – models the behavior of granular (soil and rock) materials or polymers, in which the
yield behavior depends on the equivalent pressure stress.
•Linear Mohr-Coulomb
•Parabolic Mohr-Coulomb
Yield Conditions
The yield stress of a material is a measured stress level that separates the elastic and inelastic behavior of the material. The
magnitude of the yield stress is generally obtained from a uniaxial test. However, the stresses in a structure are usually
multiaxial. A measurement of yielding for the multiaxial state of stress is called the yield condition. Depending on how the
multiaxial state of stress is represented, there can be many forms of yield conditions. For example, the yield condition can
be dependent on all stress components, on shear components only, or on hydrostatic stress. A number of yield conditions
are available in SOL 400, and are discussed in this section.&lt;/p&gt;
&lt;p&gt;477 Chapter 10: Materials
Inelastic Behavior
Main Index
Metal Plasticity
The von Mises yield surface is widely used for plasticity in isotropic metals. It is assumed that the yield and plastic flow
describe isotropic metals at low temperatures where creep effects can be ignored. Anisotropic metals and composite
materials, can be treated by extensions of von Mises yield function, as described in  Hill’s yield function.
von Mises Yield functio n
The success of the von Mises criterion is due to the continuous nature of the function that defines this criterion and its
agreement with observed behavior for the commonly encountered ductile materials. The von Mises criterion states that
yield occurs when the effective (or equivalent) stress  equals the yield stress (y) as measured in a uniaxial test.
Figure 10-28 shows the von Mises yield surface in 2 -D and 3-D stress space.
Figure 10-28  von Mises Yield Surface
The yield function ( f) defines the state of stress that separates purely elastic behavior of a material from elastoplastic
behavior. i.e.,
if,
f &amp;lt; 0: Elastic deformation
f = 0: Plastic deformation
For von M ises yield criteria, f is defined as:
where yield stress y is a function of equivalent plastic strain  and
(10-105)
Yield
Surface
Elastic
Region
(b) -PlaneYield
Surface
Elastic
Region
(a) Two-dimensional Stress Space3
2112
fype – =
pe
12–223–232–2+ +  122 =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior478
Main Index
where 1, 2, and 3 are the principal Cauchy stresses.
 can also be expressed in terms of nonprincipal Cauchy stresses.
(10-106)
The yield condition can also be expressed in terms of the deviatoric stresses as:
(10-107)
where  is the deviatoric Cauchy stress expressed as
(10-108)
For isotropic material, the von Mises yield condition is the default condition in SOL 400.
As an example of the usage of MATEP for defining a elastic-plastic material, see Tube Flaring  (Ch. 14) in the MSC Nastran
Demonstration Problems Manual .
Hill’s Yield Function
Hill’s anisotropic model introduces orthotropic plastic material. The plastic anisotropy proposed by Hill introduces six
parameters to the von Mises yield function which can be expressed as
where F , G, H, L, M and N are material parameters and are related to the yield stress ratios by,xy–2yz–2zx–26xy2yz2zx2+ +   + + +  12= 2
3
2&amp;mdash;ijij=
ij
ijij1
3&amp;mdash;kkij– =
f Fyz–2Gzx–2Hxz–22Lyz22Mzx22Nxy2+ + + + + =
F1
2&amp;mdash;1
R222&amp;mdash;&amp;mdash;&amp;ndash;1
R332&amp;mdash;&amp;mdash;&amp;ndash;1
R112&amp;mdash;&amp;mdash;&amp;ndash; – +
   =
G1
2&amp;mdash;1
R332&amp;mdash;&amp;mdash;&amp;ndash;1
R112&amp;mdash;&amp;mdash;&amp;ndash;1
R222&amp;mdash;&amp;mdash;&amp;ndash; – +
   =
H1
2&amp;mdash;1
R112&amp;mdash;&amp;mdash;&amp;ndash;1
R222&amp;mdash;&amp;mdash;&amp;ndash;1
R332&amp;mdash;&amp;mdash;&amp;ndash; – +
   =
L3
2R232&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;M3
2R312&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;N3
2R122&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = = =&lt;/p&gt;
&lt;p&gt;479 Chapter 10: Materials
Inelastic Behavior
Main Index
with
where Y1, Y2, and Y3 are the tensile yield stresses measured in material directions x, y, and z, respectively; T12, T23, and T31
are the shear yield stresses in pure shear; and Ya is the reference yield stress which should be an average yield stress in all
directions.
Note the following points about Hill’s surface:
1.It degenerates into von Mises surface when all three direct yield stresses are equal
(F = G =H ) and (L = M =N).
2.It is invariant with respect to hydrostatic stress, as is von Mises.
In practical applications, however, the initial yield stress cannot be measured in all directions. The plastic anisotropy is
pronounced in the sheet metal due to prior rolling process, for which the plastic anisotropy is customarily characterized by
r-values defined by strain ratio measured in the uniaxial tension, i.e.,
where t and w denote thickness and width, respectively; and  denotes the angle of orientation (usually measured from the
rolling direction).  Assuming that the anisotropy parameters stay constant throughout the deformation, F , G, H, and N can
be determined by r-values from tensile specimen cut at 0, 45 and 90 degrees to the rolling direction as show in Figure 10-29.
Figure 10-29  Axes of AnisotropyR11Y1
Ya&amp;mdash;&amp;mdash;R22Y2
Ya&amp;mdash;&amp;mdash;R33Y3
Ya&amp;mdash;&amp;mdash;= = =
R123T12
Ya&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-R233T23
Ya&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-R313T31
Ya&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = = =
raw
t&amp;mdash;&amp;mdash;lnw0w
lnt0t&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;H 2NF– G– 4H–  sin2 cos2 +
F sin2G cos2 +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = = =
N (Thickness Direction)R (Rolling Direction)
T (Transverse Direction)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior480
Main Index
The orthotropic plasticity parameters should be calculated from the r-values and the initial yield stress either in 0° or 90°
direction ( Y0 or Y90) from the experiment. The yield stress in the thickness direction can be written as
Similarly, yield stresses in shear may be evaluated by
and
in which the transverse direction is assumed isotropic.
Note that the use of the Hill Yield Function with all coefficients set to unity will give results varying from the von Mises
case due to differences in return mapping in both cases. By default, the von Mises case uses the mean normal return scheme
whereas the Hill case uses the multistage radial return scheme.
Barlat’s (1991) Yield Function
Barlat et al. [Ref. 1] proposed a general criterion for planar anisotropy that is particularly suitable for aluminum alloy sheets.
This criterion has been shown to be consistent with polycrystal-based yield surfaces which often exhibit small radii of
curvature near uniaxial and balanced biaxial tension stress states. An advantage of this criterion is that its formulation is
relatively simple as compared with the formulation for polycrystalline modeling and, therefore, it can be easily incorporated
into finite element codes for the analysis of metal forming problems.
For three dimensional deformation, the yield function f is defined as Barlat et al. [Ref. 1]:
(10-109)
where Si= 1,2,3  are principal values of a symmetric matrix Sij defined with respect to the components of the Cauchy stress asH
G&amp;mdash;- r0          H
F&amp;mdash;-r90= =
N
G&amp;mdash;- r451
2&amp;mdash;+1r0
r90&amp;mdash;&amp;mdash;-+
=
YthY0r901r0+
r0r90+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Y90r01r90+
r0r90+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = =
T12Yth1
2r451+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
T23T31Ya
3&amp;mdash;&amp;mdash;- = =
f S1S2–mS2S3–mS3S1–m+ + 2m= =&lt;/p&gt;
&lt;p&gt;481 Chapter 10: Materials
Inelastic Behavior
Main Index
(10-110)
In equation (10-110), the symmetry axes (x, y, z), which represent the mutually orthogonal axes of anisotropy, are aligned
with the initial rolling, transverse, and normal directions of the sheet. During deformation, the anisotropic yield surface
ofeach material element rotates so that the symmetry axes are all in different directions during deformation. Therefore, it
is necessary to trace the rotation of the yield surface during deformation in order to calculate the plastic strain increment
properly. The rotation of the anisotropy axes is carried out based on the polar decomposition method.
The material coefficients, Ci= 1 ~ 6 in equation (10-110) represent anisotropic properties. When Ci= 1 ~ 6 =1, the material is
isotropic and equation (10-109) reduces to the T resca yield condition for m = 1 or , and the von Mises yield criterion for
m = 2 or 4. The exponent “ m” is mainly associated with the crystal structure of the material. A higher “ m” value has the
effect of decreasing the radius of curvature of rounded vertices near the uniaxial and balanced biaxial tension ranges of the
yield surface, in agreement with polycrystal models. Values of m = 8 for FCC materials (like aluminum) and m = 6 for
BCC materials (like steel) are recommended. The yield surface has been proven to be convex for m ≥ 2. Figure 10-30 shows
the yield surfaces obtained from von  Mises, Hill and Barlat yield functions for Aluminum 2008-T4 alloy.
Figure 10-30  Comparison of Yield Surfaces Obtained from von Mises, Hill and Barlat Yield Functions
Utilizing the normality rule, the associated plastic strain increment  is obtained from the yield function f asSC3xxyy– C2zzxx–  –
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; C6xyC5zx
C6xyC1yyzz– C3xxyy–  –
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; C4zy
C5zxC4zyC2zzxx– C2yyzz–  –
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;=
1.5
1.0
0.5
-0.5
-1.00.0
1.5 1.0 0.5 -0.5 -1.0 0.0Mises
Hill
(1948)
Barlat’s 6Dσyy
σxx
σσ
ijp&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior482
Main Index
(10-111)
where d is a scalar fac tor called as plastic multiplier. The calculation of  in equation (10-111) is lengthy but
straightforward. The stress integration to obtain  along with the calculation of  are shown in the works by
Chung and Shah, [Ref. 2], and Yoon et al, [Ref. 3].
In order to obtain four unknown independent coefficients (C1, C2, C3, C6) with the assumption of C4 = C5 = 1 (isotropic
properties for transverse directions), it is necessary to use four stresses from the experimental data 04590b), where
04590 are the tensile yield stresses at 0o, 45o, and 90o from the rolling direction, and b is the balanced biaxial yield
stress measured from bulge test. A detailed procedure to calculate the coefficients of Barlat’s yield function are summarized
in the work of Yoon a t el., [Ref. 4]. The Barlat’s coefficients can be calculated from user inputs for 04590b in Mentat
as shown in figure below. If biaxial data is not available, the program assumes b = 0. Barlat’s yield function can be accessed
through MATEP .dijpdf
ij&amp;mdash;&amp;mdash;&amp;mdash;- =
f
ij&amp;mdash;&amp;mdash;&amp;mdash;-
dijp f
ij&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P26</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_026/</guid>
      <description>
        
        
        &lt;p&gt;483 Chapter 10: Materials
Inelastic Behavior
Main Index
Mohr-Coulomb Material (Hydrostatic Stress Dependence)
SOL 400 includes options for elastic-plastic behavior based on a yield surface that exhibits hydrostatic stress dependence.
Such behavior is observed in a wide class of soil and rock -like materials. These materials are generally classified as Mohr-
Coulomb materials (generalized von Mises materials). Ice is also thought to be a Mohr-Coulomb material. The generalized
Mohr -Coulomb model developed by Drucker and Prager is implemented in SOL 400. There are two types of Mohr-
Coulomb materials: linear and parabolic. Each is discussed on the following pages.
Linear Mohr-Coulomb Material
The deviatoric yield function, as shown in Figure 10-31, is assumed to be a linear function of the hydrostatic stress.
(10-112)
where
J1 = ii (10-113)
(10-114)
The constants  and  can be related to c and by
(10-115)
fJ1J212
3&amp;mdash;&amp;mdash;-– + 0 = =
J21
2&amp;mdash;ijij=

c
31122–   12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-      3
132–12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; ; sin = =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior484
Main Index
where c is the cohesion and  is the angle of friction.
Figure 10-31  Yield Envelope of Plane Strain (Linear Mohr-Coulomb Material)
Parabolic Mohr-Coulomb Material
The hydrostatic dependence is generalized to give a yield envelope which is parabolic in the case of plane strain (see
Figure 10-32).
(10-116)
(10-117)
where c is the cohesion.Yield Envelope
c
R
x + y
2
f 3J23J1+ 12– 0 = =

33c22–  12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = 23c22
3&amp;mdash;&amp;mdash;–=&lt;/p&gt;
&lt;p&gt;485 Chapter 10: Materials
Inelastic Behavior
Main Index
Figure 10-32  Resultant Yield Condition of Plane Strain (Parabolic Mohr -Coulomb Material
Work Hardening Rules
The work-hardening rule defines the way the yield surface changes with plastic straining. A material is said to be “perfectly
plastic” if, upon the stress state touching the yield surface, an infinitesimal increase in stress causes an arbitrarily large plastic
strain. SOL 400 models all materials as work hardening, and treats perfectly plastic materials as a special case. Because the
tangent stiffness method is used, no difficulties arise in setting the work hardening slope equal to zero. Besides perfect
plasticity, three possibilities are provided: isotropic hardening and kinematic hardening.
The isotropic workhardening rule assumes that the center of the yield surface remains stationary in the stress space, but that
the size (radius) of the yield surface expands, due to workhardening. This type of hardening is appropriate when the
straining is the same in all directions.
For many materials, the isotropic workhardening model is inaccurate if unloading occurs (as in cyclic loading problems).
For these problems, the kinematic hardening model represents the material better.c2c
R
x + y
2 
OriginalHardenedIsotropic Hardening Kinematic Hardening&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior486
Main Index
Isotropic Hardening
The isotropic workhardening rule assumes that the center of the yield surface remains stationary in the stress space, but that
the size (radius) of the yield surface expands, due to workhardening. The change of the von Mises yield surface is plotted
in Figure 10-33a.
A review of the load path of a uniaxial test that involves both the loading and unloading of a specimen will assist in
describing the isotropic workhardening rule. The specimen is first loaded from stress free (point 0) to initial yield at point
1, as shown in Figure 10-33b. It is then continuously loaded to point 2. Then, unloading from 2 to 3 following the elastic
slope E (Young’s modulus) and then elastic reloading from 3 to 2 takes place. Finally, the specimen is plastically loaded again
from 2 to 4 and elastically unloaded from 4 to 5. Reverse plastic loading occurs between 5 and 6.
It is obvious that the stress at 1 is equal to the initial yield stress yand stresses at points 2 and 4 are larger than y, due to
workhardening. During unloading, the stress state can remain elastic (for example, point 3), or it can reach a subsequent
(reversed) yield point (for example, point 5). The isotropic workhardening rule states that the reverse yield occurs at current
stress level in the reversed direction.
Fig. 10.33 (b) and (c) sh ow the schematic representations of the initial and subsequent yield surfaces for isotropic
hardening. It sh ows the subsequent yield surface is expanded uniformly in all directions in stress space with respect to the
initial yield surface.
Figure 10-33  Isotropic hardening (a) unia xial stress-strain curve (b) yield surface in principal stress coordinates (c) yield
surface in  plane
Let 4 be the stress level at point 4. Then, the reverse yield can only take place at a stress level of 4 (point 5).
Kinematic Hardening
Under the kinematic hardening rule, the von Mises yield surface does not change in size or shape, but the center of the yield
surface can move in stress space. Figure 10-34 illustrates this condition. Ziegler’s law is used to define the translation of the
yield surface in the stress space.
&lt;/p&gt;
&lt;p&gt;487 Chapter 10: Materials
Inelastic Behavior
Main Index
The loading path of a uniaxial test is shown in Figure 10-34 (a). The specimen is loaded in the following order: from stress
free (point 0) to initial yield (point 1), 2 (loading), 3 (unloading), 2 (reloading), 4 (loading), 5 and 6 (unloading). As in
isotropic hardening, stress at 1 is equal to the initial yield stress y, and stresses at 2 and 4 are higher than y, due to
workhardening. Point 3 is elastic, and reverse yield takes place at point 5. Under the kinematic hardening rule, the reverse
yield occurs at the level of 54  0y, rather than at the stress level of 4. Figure 10-34 (b) and Figure 10-34 (c) show
the schematic representations of the initial and subsequent yield surfaces for kinematic hardening. It shows the yield surface
translates in stress space, rather than expanding.
For many materials, the kinematic hardening model gives a better representation of loading/unloading behavior than the
isotropic hardening model. For cyclic loading, however, the kinematic hardening model can represent neither cyclic
hardening nor cyclic softening.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior488
Main Index
Figure 10-34  Kine matic hardening (a) uniaxial stress-strain curve (b) yield surface in principal stress coordinates (c) yield
surface in  plane
Combined Hardening
In case of combined hardening, materials harden both kinematically and isotropically. The initial hardening is assumed to
be almost entirely isotropic, but after some plastic straining, the elastic range attains an essentially constant value (that is,
pure kinematic hardening). The basic assumption of the combined hardening model is that such behavior is reasonably
approximated by a classical constant kinematic hardening constraint, with the superposition of initial isotropic hardening.
The isotropic hardening rate eventually decays to zero as a function of the equivalent plastic strain. Thus, a constant shift
of the center of the elastic domain, with a growth of elastic domain around this center until pure kinematic hardening is
attained.
Experimental Determination of Workhardening Slope
In a uniaxial test, the workhardening slope is defined as the slope of the stress-plastic strain curve. The workhardening slope
relates the incremental stress to incremental plastic strain in the inelastic region and dictates the conditions of subsequent
yielding. A number of workhardening rules (isotropic, kinematic, and combined) are available in SOL 400. If only a single
workhardening slope is given, this may be defined on the MATEP bulk data entry. Otherwise, use either the TABLES1  or
TABL3D  bulk data entries and enter the equivalent plastic strain, equivalent stress data.
The yield stress and the workhardening data must be compatible with the procedure used in the analysis. For small strain
analyses, the engineering stress and engineering strain are appropriate. If only PARAM,LGDISP  is used, the yield stress
should be entered as the second Piola-Kirchhoff stress, and the workhard data be given with respect to plastic
Green -Lagrange strains. If PARAM,LGDISP,1  or 2 are used, the yield stress must be defined as a true or Cauchy stress
with respect to logarithmic plastic strains.Note:   The data points should be based on a plot of the stress versus plastic strain for a tensile test. The elastic strain
components should not be included.
&lt;/p&gt;
&lt;p&gt;489 Chapter 10: Materials
Inelastic Behavior
Main Index
Flow Rules
Yield stress and workhardening rules are two experimentally related phenomena that characterize plastic material behavior.
The flow rule is also essential in establishing the incremental stress-strain relations for plastic material. The flow rule
describes the differential changes in the plastic strain components dp as a function of the current stress state. So long as a
material point is elastic, Hooke’s law provides a relationship between total stress and strain. After a material becomes plastic,
however, there is no longer a unique relationship between total stress and strain. The problem then is usually solved
incrementally, following the exact loading path.
For points which are plastic, a flow rule is used to relate increments of stress to plastic strain. SOL 400 uses an associated
flow rule, which prescribes that increments of plastic strain are computed as a constant times the gradient of the yield
function.
In other words, considering the yield function as a surface in stress space, the plastic strain increment is a vector in the
direction of the outward normal to the surface at the point where it is touched by the stresses on the loading path.
The equation representing this is:
(10-118)
where dis a constant.&lt;br&gt;
These stress vs. plastic strain equations are analogous to the stress vs. total strain equations of elasticity, where elastic strains
can be computed as the gradient of a strain energy potential function; namely:
(10-119)
Thus, the yield function F plays the role of a plastic potential. If a theory of plasticity uses something other than the yield
function as a plastic potential, a so -called nonassociated flow rule results. Nonassociated flow rules are not available in SOL
400.
The Prandtl-Reuss representation of the flow rule is available in SOL 400. In conjunction with the von Mises yield
function, this can be represented as:
(10-120)
where  and  are equivalent plastic strain increment and equivalent stress, respectively.
The significance of this representation is illustrated in Figure 10-35. This figure illustrates the “stress -space” for the two-
dimensional case. The solid curve gives the yield surface (locus of all stress states causing yield) as defined by the von Mises
criterion.
Equation (10-120) expresses the condition that the direction of inelastic straining is normal to the yield surface. This
condition is called either the normality condition or the associated flow rule.dijpdF
ij&amp;mdash;&amp;mdash;&amp;mdash;- =
dijU
ij&amp;mdash;&amp;mdash;&amp;mdash;- =
dijpdp
ij&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
dp&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior490
Main Index
If the von Mises yield surface is used, then the normal is equal to the deviatoric stress.
Figure 10-35  Yield Surface and Normality Criterion 2-D Stress Space
For the von Mises and modified Hill yield functions programmed in SOL 400, the derivatives in the yield function are
obtained simply by differentiating  with respect to individual components of stress .
The constant in these flow rule equations is evaluated automatically by SOL 400 on the basis of material stability during
plastic flow (i.e., by the requirement that the stress state remain on the yield surface during plastic straining).
Rate Dependent Yield
Strain rate effects cause the structural response of a body to change because they influence the material properties of the
body. These material changes lead to an instantaneous change in the strength of the material. Strain rate effects become
more pronounced for temperatures greater than half the melting temperature ( Tm), but are sometimes present even at room
temperature. The following discussion explains the effect of strain rate on the size of the yield surface.
Using the von Mises yield condition and normality rule, we obtain an expression for the stress rate of the form
For elastic-plastic response
(10-121)d1pd2p dp
Yield Surface2
1
·
ijLijkl·
klrij·· p+ =
LijklCijklCijmn 
mn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 
pq&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Cpqkl   D – =&lt;/p&gt;
&lt;p&gt;491 Chapter 10: Materials
Inelastic Behavior
Main Index
and
(10-122)
where
(10-123)
As strain rates increase, many materials show an increase in yield strength. The model provided in SOL 400 for this purpose
is
where
Yield stress variation with strain rate is given using one of four options:
1.The breakpoints and slopes for a piecewise linear approximation to the yield stress strain rate curve are given. The
strain rate breakpoints should be in ascending order, or
2.The Cowper and Symonds model is used. The yield behavior is assumed to be completely determined by one stress-
strain curve and a scale factor depending on the strain rate.
3.The yield stress may be given as a function of the plastic strain, strain, and/or the temperature using the TABLD3&lt;br&gt;
bulk data entry.
4.The Johnson Cook model .=the uniaxial equivalent plastic strain rate
=the effective yield stress at a nonzero strain rate
=the static yield stress (which may depend on the equivalent plastic strain, pl, via isotropic hardening,
or on the temperature, T.
D(T), p (T) =are material parameters that may be functions of temperature. D and p are defined on the input forms.
This model is effective in both static and dynamic procedures.
Note:   If multiple material models are used, they must all be expressed as piecewise linear or as Cowper and Symonds
model.rijCijmn
mn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2
3&amp;mdash;
·p&amp;mdash;&amp;mdash;&amp;ndash;D =
D4
9&amp;mdash;2
p&amp;mdash;&amp;mdash;&amp;ndash;
ij&amp;mdash;&amp;mdash;&amp;mdash;-Cijkl
kl&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + =
·D
0&amp;mdash;&amp;mdash;1–P
for0 =
·pl

0plT&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior492
Main Index
Perfectly Plastic
A material is said to be “perfectly plastic” if, upon the stress state touching the yield surface, an infinitesimal increase in
stress causes an arbitrarily large plastic strain. The uniaxial stress -strain diagram for an elastic-perfectly plastic material is
shown in Figure 10-36. Some materials, such as mild steel, behave in a manner which is close to perfectly plastic.
.
Figure 10-36  Perfectly Plastic Material Stress-Strain Relationshi p
Johnson-Cook Model
where y is the yield stress,  is the equivalent plastic strain,  is the current equivalent plastic strain rate,  is strain
rate of material characterization and A, B, C, m and n are material parameters. T, Troom, Tmelt are, respectively, the current,
room, and melting temperatures of the material in absolute scale.
The following conditions should be noted for the Johnson-Cook model.
T should be between Troom and Tmelt. If T &amp;lt; Troom, T is set to Troom. IfT &amp;gt; Tmelt, T = Tmelt -0.01 .
  and . If either condition is violated, the middle term in the above expression is set to 1.0.
Time-independent Cyclic Plasticity
The cyclic plasticity model is based on the work of Chaboche [Ref. 5]. The current version of MSC Nastran consists only of
the basic model and plastic-strain-range memorization.
The model combines the isotropic hardening rule, to describe the cyclic hardening ( Figure 10-37a) or softening, and the
nonlinear kinematic hardening to capture the proper characteristic of cyclic plasticity like Bauschinger ( Figure 10-37b),
xxxx
YS
E
1
yABpn+ 1Cp·
·
0&amp;mdash;&amp;ndash;
ln+
   1TTroom–
TmeltTroom–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
   m
–
   =
pp·
·
0
·
00··
0&lt;/p&gt;
&lt;p&gt;493 Chapter 10: Materials
Inelastic Behavior
Main Index
ratchetting ( Figure 10-37c), and mean-stress relaxation ( Figure 10-37d) effect. The influence of the plastic strain range on the
stabilized cyclic response is taken into account by introducing the plastic-strain-range memorization variable ( Figure 10-37e).
Figure 10-37  Typical Behavior of Material that can be Simulated with Cyclic Plasticity Model
The von Mises yield function is now defined as follows:
where , , and
X is the back stress tensor representing the center of the yield surface in stress space.(b) Bauschinger Effect (c) Ratchetting
(d) Mean Stress Relaxation (e) Cyclic Hardening (a) Cyclic Hardening under
Multiple Cyclic Loading
–




–
f Rk+ – =
3SijSij
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
2&amp;mdash;
= sij&amp;rsquo;ij1
3&amp;mdash;ij&amp;rsquo;kk– = &amp;rsquo;X– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior494
Main Index
Isotropic Hardening/Softening
The isotropic hardening/softening determines the size of the elastic region during the plastic loading. In this model, it is
controlled by parameter R and k. The initial conditions of cyclic hardening are given as k = y and R = , while a cyclic
softening is initially described by k = yR0 and R = R0. The evolution equation for the variable R is described as follows:
where b and R are material constants. R represents the limit of the isotropic hardening/softening. In case of hardening,
then .
Nonlinear Kinematic Hardening
The nonlinear kinematic hardening is defined from the linear-Ziegler rule by adding the recall term as shown in the
evolution of the back stress tensor below:
where C and  are two material constants.  stands for linear-kinematic rule.
Plastic-strain-range Memorization
Several experimental observations show that the asymptotic stress value of cyclic hardening can depend on the prior history.
The influence of plastic-strain range on the stabilized cyclic response is evident from the comparison between the different
histories of loading used to obtained the cyclic curve. Therefore, an introduction of new internal variables that memorize
the prior maximum plastic range is introduced by defining a “memory” surface in the plastic strain space as follows:
The evolution of the state variables are as follows
where n and n* are the unit normal to the yield surface f = 0 and to the memory surface F = 0 defined as follows:
and
The coefficient  is introduced in order to induce a progressive memory. For  t hen, the memorization is
instantaneous and stabilization occurs after one cycle. A progressive memory is given by .R·bRR–·=
R R1eb–eps–  =
X· C
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;X–X–·=
F2
3&amp;mdash;ep–– =
·HFnn&lt;em&gt;·=
·321–HFnn&lt;/em&gt;n&lt;em&gt;·=
n2
3&amp;mdash;p
·&amp;mdash;&amp;ndash; = n&lt;/em&gt; 2
3&amp;mdash;p–
&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;495 Chapter 10: Materials
Inelastic Behavior
Main Index
The dependency between cyclic plastic flow and the plastic strain range is introduced by considering an asymptotic isotropic
state as follows:
where QM, Q0 and  are material constants.
Plastic Evolution Process and Elasto-plastic “Classical” Modular Matrix
The plastic evolution process must conform to the consistency condition, . From this condition the plastic “rate”
multiplier can be derived as follows:
(10-124)
where .
Since the process involves nonlinear equation, iteration process using predictor-corrector technique is used. The predictor
is calculated using the “trial” elastic stresses as follows:
B = A + L (10-125)
and then calculate fB based on B and hardening parameter on A. Using the Taylor expansion at B, then
(10-126)
(10-127)
The stress at B can obtained by deducting plastic corrector Lpfrom trial stress.
B = A + L- Lp(10-128)
Thus, the stress increment 
 = L ( - p
(10-129)
fB is calculated based on  and hardening parameters on A. Using Taylor expansion at B, thenRQMQ0QM–e2–+ =
f·0=
· aTL
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aT
X–aTX – bRR– + +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;·=
af
&amp;mdash;&amp;mdash;3
2&amp;mdash;s
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = =
fB
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aTX–aTX – bRR– + +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
BtrialAL+ =
Lddf
d&amp;mdash;&amp;mdash; –  =
Btrial&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Inelastic Behavior496
Main Index
(10-130)
Having the global plasticity iteration converged, then the iteration to satisfy the plastic strain memorization is started. If
both iterations are converged, then the total plasticity iteration is considered completed.
Inserting equation (10-124) into equation (10-129), the elasto-plastic “classical ” tangent modular matrix can be derived as
follows:
So elasto-plastic tangent modular matrix can be expressed as
(10-131)
Geological Materials
Data for geological materials are most commonly available from triaxial compression testing. In such a test, the specimen
is confined by pressure and an additional compression stress is superposed in one direction. Thus, the principal stresses are
all negative, with 0 ≥1 = 2 ≥ 3.fB
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aTX–aTXbRR– + – +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
 LaaTL
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aTX–aTXbRR– + – +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –
    &lt;/h1&gt;&lt;h1&gt;LIaaTL
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aTX–aTXbRR– + – +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –
    
 =
LEPLIaaTL
aTLaC
Rk+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;aTX–aTXbRR– + – +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; –
    &lt;/h1&gt;&lt;p&gt;497 Chapter 10: Materials
Inelastic Behavior
Main Index
Figure 10-38  Triaxial Compression and Tension
The values of the stress invariants in a uniaxial compression experiment are:
p = - {1/3}(1 + 3)
q = 1- 3
r3 = -(1- 3
so that  t = q = 1- 3
The triaxial results may thus be plotted in the t-p plane shown above. Fitting the best straight line through the results then
provides  and d.
Triaxial tension data are also needed to define the bulk modulus K. Under triaxial tension, the specimen is again confined
by pressure, then the pressure in one direction is reduced. In this case, the principal stresses are 1 ≥ 2 3
The stress invariants are now:
p = - {1/3}(1 +3),
q = 1- 3
r3 = (1- 3
so that t = {q/K } = {1/K}(1- 3
K may thus be found by plotting these test results as q versus p and again fitting the best straight line. The triaxial
compression and tension lines must intercept the p-axis at the same point, and the ratio of values of q for triaxial tension
and compression at the same value of p then gives K as shown in Figure 10-39. 123= 123 =3– 1–
1– 3– 2–2–&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior498
Main Index
Figure 10-39  Triaxial Compression and Tension Data
Matching Mohr-Coulomb Parameters
Sometimes, experimental data are not directly available. Instead, you are provided with the friction angle and cohesion
values for the Mohr-Coulomb model. We, therefore, need to calculate values for the parameters of the Drucker -Prager
model to provide a reasonable match to the Mohr -Coulomb parameters.
The Mohr-Coulomb failure model is based on plotting Mohr’s circle for states of stress at failure in the plane of the
maximum and minimum principal stresses. The failure line is the best straight line that touches these Mohr’s circles.
The Mohr-Coulomb model is thus
,
where s = {1/2}(1 - 3
is half of the difference between the maximum and minimum principal stresses (and is, therefore, the maximum shear
stress), and
m = {1/2}(1 + 3
is the average of the maximum and minimum principal stresses.
We see that the Mohr-Coulomb model assumes that failure is independent of the value of the intermediate principal stress.
The Drucker-Prager model does not. The failure of typical geotechnical materials generally includes some small dependence
on the intermediate principal stress.
Matching Triaxial Test Response
One approach to matching Mohr-Coulomb and Drucker-Prager model parameters is to make the two models provide the
same failure definition in triaxial compression and tension. For this purpose, we can rewrite the Mohr-Coulomb model in
terms of principal stresses.q
p  ht hc
dBest fit to triaxial
tension dataBest fit to triaxial
compression data

smc–cos sin + 0=&lt;/p&gt;
&lt;p&gt;499 Chapter 10: Materials
Inelastic Behavior
Main Index
(10-132)
Using the results above (for the stress invariants p, q, and r), in triaxial compression and tension, allows the Drucker-Prager
model to be written for triaxial compression as
(10-133)
and, for triaxial tension, as
(10-134)
We wish to make the equations for triaxial compression and biaxial tension identical to the general Mohr -Coulomb
equation for all values of (1, 3.
Comparing the equations for triaxial compression and triaxial tension requires that:
(10-135)
so that
(10-136)
Comparing the coefficients of (1 + 3in the equation for triaxial compression and that for triaxial tension provides:
(10-137)
and hence, from the derived equation for K:
(10-138)
Finally, comparing the last terms in the general expression for the Mohr-Coulomb model and the equation for triaxial
compression and using the expression for tan provides:
(10-139)13–13+2ccos – sin + 0=
13–tan
21
3&amp;mdash;tan +  &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;13+11
3&amp;mdash;tan –
11
6&amp;mdash;tan +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;c0+ + 0=
13–tan
2
K&amp;mdash;-1
3&amp;mdash;–tan  &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-13+11
3&amp;mdash;tan –
1
K&amp;mdash;-1
6&amp;mdash;–tan&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;c0+ + 0=
11
6&amp;mdash;tan +1
K&amp;mdash;-1
6&amp;mdash;tan – =
K1
11
3&amp;mdash;tan+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
6sin
3sin–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; tan
K3sin–
3sin+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
c0 2ccos
1sin–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Inelastic Behavior500
Main Index
The expression for tan , K, and this last expression, and thus, provide Drucker -Prager parameters that match the Mohr-
Coulomb model in triaxial compression and tension.
The value of K in the Drucker-Prager model is restricted to K ≥ 0.778  for the yield surface to remain convex. Rewriting the
expression for K as:
(10-140)
shows that this implies ≤ . Many real materials have a larger Mohr-Coulomb friction angle than this value. In such
circumstances, one approach is to choose K = 0.778 and then to use the expression for tan  to define  and the expression
for  to define , ignoring the expression for K. This matches the models for triaxial compression only, while providing
the closest approximation that the model can provide to failure being independent of the intermediate principal stress. If&lt;br&gt;
is significantly larger than 22°, this approach may provide a poor Drucker-Prager match of the Mohr-Coulomb
parameters. SOL 400 uses K = 1 by default.
Matching Plane Strain Response
Plane strain problems are often encountered in geotechnical analysis: examples are long tunnels, footings, and
embankments. For this reason, the constitutive model parameters are often matched to provide the same flow and failure
response in plane strain.
The Drucker-Prager flow potential defines the plastic strain increment as:
(10-141)
where  is the equivalent plastic strain increment.
Since we only wish to match the behavior in one plane we can assume K = 1, which implies that t = q. Then:
(10-142)
Writing this expression in terms of principal stresses provides:
(10-143)sin 31K–
1k+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-=
c0c0
dpldpl 1
11
3&amp;mdash;tan –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-tptan – 
    &lt;/h1&gt;&lt;p&gt;dpl
dpldpl 1
11
3&amp;mdash;tan –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
    
qptan–  =
d1pldpl 1
11
3&amp;mdash;tan –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
    1
2q&amp;mdash;&amp;mdash;2123– – 1
3&amp;mdash;tan +  =&lt;/p&gt;
&lt;p&gt;501 Chapter 10: Materials
Inelastic Behavior
Main Index
with similar expressions for  and .
Assume plane strain in the 1-direction. Then, at limit load, we must have . From the above expression, this
provides the constraint:
(10-144)
so that:
(10-145)
Using this constraint, we can rewrite q and p in terms of the principal stresses in the plane of deformation,
(10-146)
and
(10-147)
With these expressions, the Drucker-Prager yield surface can be written in terms of 2 and 3 as
(10-148)
The Mohr-Coulomb yield surface in the (2,3) plane is:
(10-149)
By comparison,
(10-150)
(10-151)
Now consider the two extreme cases of flow definition: associated flow, , and nondilatant flow, when .
Assuming associated flow, the last two equations provide:d2pld3pl
d1pl0=
1
2q&amp;mdash;&amp;mdash;212–3–  1
3&amp;mdash;tan+ 0=
11
2&amp;mdash;23+1
3&amp;mdash;q tan – =
q33
29tan2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-23– =
p1
2&amp;mdash;23+ –tan
239tan2– &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;23– + =
9tan tan–
239tan2– &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;23–1
2&amp;mdash;23+d– tan+ 0=
2–323+2ccos– sin+ 0=
sin39tan2–  tan
9tan tan–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
ccos39tan2– 
9tan tan–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;d =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior502
Main Index
(10-152)
and
(10-153)
while for nondilatant flow they give  and
In either case,  is immediately available as:
(10-154)
The difference between these two approaches increases with the friction angle but, for typical friction angles, the results are
not very different, as illustrated in the table below.
Plane strain matching of Drucker-Prager and Mohr-Coulomb models.
As strain rates increase, many materials show an increase in yield strength. This effect often becomes important when the
strain rates are in the range of -0.1 to 1 per second, and can be very important if the strain rates are in the range of 10 to
100 per second, as commonly occurs in high energy dynamic events or in manufacturing processes.
Temperature-Dependent Behavior
This section discusses the effects of temperature-dependent plasticity on the constitutive relation.Mohr-Coulomb
Friction Angle, F Associated Flow Nondilatant Flow
Drucker-Prager friction angle, b d/c Drucker-Prager friction angle, b d/c
10° 16.7° 1.70 16.7° 1.70
20° 30.2° 1.60 30.6° 1.63
30° 39.8° 1.44 40.9° 1.50
40° 46.2° 1.24 48.1° 1.33
50° 50.5° 1.02 53.0° 1.11tan3sin
11
3&amp;mdash;sin2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
d
c&amp;mdash;3cos
11
3&amp;mdash;sin2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
tan 3sin =d
c&amp;mdash;cos=
c0
c0 1
11
3&amp;mdash;tan –&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;d =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P27</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_027/</guid>
      <description>
        
        
        &lt;p&gt;503 Chapter 10: Materials
Inelastic Behavior
Main Index
The following constitutive relations for thermo-plasticity were developed by Naghdi. T emperature effects are discussed
using the isotropic hardening model and the von Mises yield condition.
The stress rate can be expressed in the form
For elastic-plastic behavior, the moduli  Lijkl are
(10-155)
and for purely elastic response
Lijkl =Cijkl (10-156)
The term that relates the stress increment to the increment of temperature for elastic -plastic behavior is
(10-157)
and for purely elastic response
Hij = Xij - Cijklkl (10-158)
where
(10-159)
and
(10-160)
and  are the coefficients of thermal expansion.
Temperature-Dependent Stress Strain Curves
SOL 400 offers the capability of stress-strain curve dependence as a function of temperature. there are two ways of entering
the temperature dependent data. In the example shown below, you specify these stress strain curves at different
temperatures. In the second method, one directly enters the elastic-plastic data as a function of both the plastic strain and
the temperature through the TABL3D . Linear interpolation between the supplied curves is used to determine the
appropriate curve at the temperature specified for a particular subcase or calculated in a thermal-mechanical analysis.
$  Property 1 : Untitledij·Lijkl··
klhijT·+ =
Lijkl
LijklCijklCijmn 
mn&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 
pq&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Cpqkl   D – =
hijXijCijklkl– Cijkl
kl&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;pqXpq2
3&amp;mdash;
T&amp;mdash;&amp;mdash; –  
  D – =
D4
9&amp;mdash; 2 
p&amp;mdash;&amp;mdash;&amp;ndash;
ij&amp;mdash;&amp;mdash;&amp;mdash;- Cijkl 
kl&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + =
XijCijkl
T&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;kle=
kl&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior504
Main Index
PSHELL         1       1   0.125       1               1              0.
$  Material 1 : AISI 4340 Steel
MATEP, 1,TABLE, 35000., 2,CAUCHY,ISOTROP,ADDMEAN
MAT1           1  2.9E+7            0.327.331E-4  6.6E-6     70.        +MT    1
+MT    1 215000. 240000. 156000.
MAT4           14.861E-4   38.647.331E-4
$      1       2       3       4       5       6       7       8       9
$2345678 2345678 2345678 2345678 2345678 2345678 2345678 2345678 2345678
MATTEP         1                      21                             &lt;br&gt;
MATT1          1                                       7
TABLEM1        7&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    70.0    6.6E-6   1000.  6.5E-6   1200.  6.4E-6  1500.   6.3E-6
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    2000.   6.2E-6    ENDT
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$2345678 2345678 2345678 2345678 2345678 2345678 2345678 2345678 2345678
TABLEST       21&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    70.0        31   1000.      32   1200.      33   1500.      34
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;    2000.       35    ENDT
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TABLES1, 31
, 0., 15000., 1.0, 16000., 10., 25000., 100., 30000.,
,  99999., 40000., ENDT
TABLES1, 32
, 0., 13000., 1.0, 14000., 10., 23000., 100., 28000.,
,  99999., 28000., ENDT
TABLES1, 33
, 0., 11000., 1.0, 12000., 10., 21000., 100., 26000.,
,  99999., 25000., ENDT
TABLES1, 34
, 0.,  9000., 1.0, 10000., 10., 19000., 100., 22000.,
,  99999., 24000., ENDT
TABLES1, 35
, 0.,  5000., 1.0,  7000., 10.,  9000., 100., 13000.,
,  99999., 15000., ENDT
In this input, the stress strain curves are specified by TABLES1  entries. The collection of stress-strain curves to be used is
specified in the TABLEST  entry and the corresponding temperatures at which they apply is specified in the TABLEM1&lt;br&gt;
entry. The TABLEM1  ID is called out in field 7 of the MATT1  entry and the TABLEST  ID is called out in field 5 of the
MATTEP  entry. TABLEST  must list the stress strain TABLES1  IDs in order of increasing temperature and the first ID
must be at the lowest temperature specified anywhere in the analysis. In this example, it is a temperature of 70
corresponding to TEMPERATURE  (init)=10 in the case control. Similarly, the temperatures in the TABLEM1  entry must
be in increasing order. The stress-strain curves should cover the entire range of temperatures for the analysis so that no
extrapolation is needed. The MAT4  bulk data entry is only required in a coupled thermal-mechanical analysis.
Specifying Elastoplastic Material Entries
Each of the elastoplastic models described in this section can be selected with the MATEP bulk data entry.&lt;/p&gt;
&lt;p&gt;505 Chapter 10: Materials
Inelastic Behavior
Main Index
Patran Materials Application Input Data
To define an inelastic material in Patran:
1.From the Materials Application  form, set the Action&amp;gt;Object&amp;gt;Method  combination to Create &amp;gt; Isotropic-or-
Orthotropic-or-Anisotropic &amp;gt; Manual Input .
2.Click Input Properties&amp;hellip; , and select Elastoplastic  from the Constitutive Model  pull-down menu.
The required properties for describing elasticplastic behavior vary based on material type, dimension, type of nonlinear data
input, hardening rule, yield criteria, strain rate method, and thermal dependencies .
Table 10-4 shows the various input options and criteria available to you for defining elastoplastic behavior.Entry Description
MATEP Specifies elasto-plastic material properties to be used for large deformation analysis.
MATTEP Specifies temperature-dependent elasto-plastic material properties to be used for static, quasi-
static, or transient dynamic analysis.
Notes:  Some versions of Patran use the same menus to support both SOL 400 and SOL 600.
Tresca is not supported in SOL 400.
Table 10-4  Elastoplastic Model Summary
Constitutive
Model Nonlinear Data Input Hardening Rule Yield Criteria Strain Rate Method
Plastic Stress/Strain Curve Isotropic
Kinematic
Combinedvon Mises
T resca
Mohr-Coulomb
Drucker-Prager
Parabolic Mohr-CoulombPiecewise Linear
Cowper-Symonds
Hardening Slope Isotropic
Kinematic
Combined
Piecewise
Linearvon Mises
T resca
Mohr-Coulomb
Drucker-Prager
NoneNone
Piecewise Linear
Cowper-Symonds&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Inelastic Behavior506
Main Index
Patran Nonlinear Data Input
The type of nonlinear data input you choose to use to define elastoplastic material behavior determines the input data
required for the Input Properties subform on the Materials Application form.
Stress/Strain Curve – All stress -strain curves are input as piecewise linear. Patran transfers the stress-strain curve
input on the material property field directly to the TABLES1  entry.
The number of linear segments used to define the stress-strain curve may be different from one material to another.
The same strain breakpoints need not be used for all of the different material’s stress -strain curves. It is
recommended to define the stress -strain curves throughout the range of strains which the analysis is likely to
predict. If the analysis predicts a plastic strain greater than the last point defined by you, SOL 400 continues the
analysis after shifting the last strain breakpoint on that curve to match the predicted value, thereby changing
(reducing) the work hardening slope for the last segment of the curve.
Hardening Slope – The hardening slope and the yield point are required with this Nonlinear Data Input  option.
Perfectly Plastic – Perfect plasticity is described by simply specifying the yield point.
T ables 10-5 through 10-7 provide descriptions for the input data for each of the four types of nonlinear input.
Table 10-5  Isotropic - Stress/Strain Curve or Perfectly Plastic: All Yield Functions
Property Name Description
Stress /Strain Curve or Yield
StressDefines the Cauchy stress vs. logarithmic strain (also called equivalent tensile stress
versus total equivalent strain) by reference to a tabular field. The field is selected from
the Field Definition  list. The field is created using the Fields application. For Perfectly
Plastic  models, only a Yield Stress  needs to be entered.
Can also be strain rate dependent if Strain Rate Method  is Piecewise Linear . Accepts
field of yield stress vs. strain  rate.
Coefficient C Visible if Strain Rate Method is Cowper-Symonds.
Inverse Exponent P Visible if Strain Rate Method is Cowper-Symonds.
Alpha When set to Linear Mohr-Coulomb , defines the slope of the yield surface in square
root J2 versus J1 space. This property is required.
Beta When set to Parabolic Mohr-Coulomb , defines the beta parameter in the equation
that defines the parabolic yield surface in square root J2 versus J1 space. This property
is required.
Note: Perfectly Plastic is identical to Stress/Strain except that no hardening rules apply.&lt;/p&gt;
&lt;p&gt;507 Chapter 10: Materials
Failure and Damage Models (MATF)
Main Index
Hardening Slope - Nonlinear Data Input
Failure and Damage Models (MATF)
One of the nonlinear features of a material&amp;rsquo;s behavior is failure. When a certain criterion (failure criterion) is met, the
material fails and no longer sustains its loading and breaks. In a finite-element method, this means that the element, where
the material reaches the failure limit, cannot carry any stresses anymore. The stress tensor is effectively zero. The element is
flagged for failure, and, essentially, is no longer part of the structure.
Failure criteria can be defined for a range of materials and element types. The failure models are referenced from the material
definition entries.
Isotropic/Orthotropic/Anisotropic Failure Models
The available criteria are: maximum stress, maximum strain, Tsai -Wu, Hoffman, Hill, Hashin, Hashin Fabric, Hashin
Tape, Puck, and the UFAIL  user subroutine. During each analysis, up to three failure criteria can be selected; failure indices
and strength ratios are calculated and printed for every integration point. The MATF  bulk data entry is used for the input
of failure criteria data. The MATTF  option may be used to define temperature dependent failure criteria.Table 10-6  Anisotropic/Orthotropic - Stress/Strain Curve or Perfectly Plastic: All Yield Functions
Property Name Description
Stress vs. Strain or Tensile
Yield StressSame as description for Isotropic Elastic-Plastic. If Strain Rate Method  is Piecewise
Linear , accepts field of yield stress vs. strain rate.
Or defines an isotropic yield stress. It is a required property when the Plasticity Type  is
Perfectly Plastic .
Stress 11/22/33 Yield Ratios Defines the ratios of direct yield stresses to the isotropic yield stress in the element’s
coordinate system.
Stress 12/23/31 Yield Ratios Defines the ratios of shear yield stresses to the isotropic shear yield stress (yield divided
by square root three) in the element’s coordinate system.
Note: Perfectly Plastic is identical to Elastic-Plastic except that no hardening rules apply.
Table 10-7  Isotropic/Anisotropic/Orthotropic - Hardening Slope
Property Name Description
Hardening Slope Slope of the stress-strain curve once yielding has started.
Yield Point Defines the stress level at which plastic strain begins to develop.
Internal Friction Angle When yield function is set to Mohr-Coulomb or Drucker-Prager this gives the parameter
describing the effect of hydrostatic pressure on the yield stress.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Failure and Damage Models (MATF)508
Main Index
Progressive failure behavior for various materials can be simulated using the MATF  bulk data entry. Failure occurs when
any one of the specified failure criterion is satisfied; that is, the calculated failure index exceeds 1.0. Upon failure, the elastic
moduli are reduced. This is done differently depending on failure criterion. The behavior up to the failure point is linear
elastic. After failure the behavior is still elastic but with a different stiffness. The option should not be combined with other
material nonlinearities like plasticity.
Maximum Stress Criterion  – six failure indices Fi are calculated as follows:
where the indices (x, y, z) denote material coordinate direction.
V1 Real &amp;gt; 0.0, no Default.
V2 Real &amp;gt; 0.0 or blank; Default V1
V3 Real &amp;gt; 0.0, no Default.F1x
V1&amp;mdash;&amp;mdash; for x0
x–
V2&amp;mdash;&amp;mdash;&amp;mdash; for x0=
F2y
V3&amp;mdash;&amp;mdash; for y0
y–
V4&amp;mdash;&amp;mdash;&amp;mdash; for y0=
F3z
V5&amp;mdash;&amp;mdash; for z0
z–
V6&amp;mdash;&amp;mdash;&amp;ndash; for z0=
F4xy
V7&amp;mdash;&amp;mdash;- =
F5yz
V8&amp;mdash;&amp;mdash;- =
F6zx
V9&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;509 Chapter 10: Materials
Failure and Damage Models (MATF)
Main Index
Maximum Strain Criterion  – six failure indices Fi are calculated as follows:
where the indices (x, y, z) denote material coordinate direction.V4 Real &amp;gt; 0.0 or blank; Default V3
V5 Real &amp;gt; 0.0; no Default
V6 Real &amp;gt; 0.0 or blank; Default V5
V7 Real &amp;gt; 0.0 no Default
V8 Real &amp;gt; 0.0 or blank; Default V7
V9 Real &amp;gt; 0.0 or blank; Default V7
F1x
W1&amp;mdash;&amp;mdash;- for x0
x–
W2&amp;mdash;&amp;mdash;&amp;ndash; for x0=
F2y
W3&amp;mdash;&amp;mdash;- for y0
y–
W4&amp;mdash;&amp;mdash;&amp;ndash; for y0=
F3z
W5&amp;mdash;&amp;mdash;- for z0
z–
W6&amp;mdash;&amp;mdash;&amp;ndash; for z0=
F4xy
W7&amp;mdash;&amp;mdash;- =
F5yz
W8&amp;mdash;&amp;mdash;- =
F6zx
W9&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Failure and Damage Models (MATF)510
Main Index
Hill Failure Criterion  – there is no distinction between tensile and compressive behavior. A single failure index is calculated
as:
where the indices (x, y, z) denote material coordinate direction.
Hoffman Failure Criterion  – introduces distinction between tensile and compressive stresses to generalize the Hill Failure
Criterion. A single failure index, F , is calculated as:W1 Real &amp;gt; 0.0, no Default.
W2 Real &amp;gt; 0.0 or blank; Default W1
W3 Real &amp;gt; 0.0, no Default.
W4 Real &amp;gt; 0.0 or blank; Default W3
W5 Real &amp;gt; 0.0; no Default
W6 Real &amp;gt; 0.0 or blank; Default W5
W7 Real &amp;gt; 0.0 no Default
W8 Real &amp;gt; 0.0 or blank; Default W7
W9 Real &amp;gt; 0.0 or blank; Default W7
V1Real &amp;gt; 0.0, no Default.
V3Real &amp;gt; 0.0, no Default.
V5Real &amp;gt; 0.0; no Default
V7Real &amp;gt; 0.0 no Default
V8Real &amp;gt; 0.0 or blank; Default V7
V9Real &amp;gt; 0.0 or blank; Default V7F[x2
V12&amp;mdash;&amp;mdash; =y2
V32&amp;mdash;&amp;mdash;z2
Z52&amp;mdash;&amp;mdash;1
V12&amp;mdash;&amp;mdash;1
V32&amp;mdash;&amp;mdash;1
V52&amp;mdash;&amp;mdash;– +
   xy1
V12&amp;mdash;&amp;mdash;1
V52&amp;mdash;&amp;mdash;1
V32&amp;mdash;&amp;mdash;– +
   xz– – + +
1
V32&amp;mdash;&amp;mdash;1
V52&amp;mdash;&amp;mdash;1
V12&amp;mdash;&amp;mdash;– +
   yzxy2
V72&amp;mdash;&amp;mdash;-yz2
V82&amp;mdash;&amp;mdash;-zx2
V92&amp;mdash;&amp;mdash;-/Find + + + –&lt;/p&gt;
&lt;p&gt;511 Chapter 10: Materials
Failure and Damage Models (MATF)
Main Index
with
where the indices (x, y, z) denote material coordinate direction.
Tsai-Wu Failure Criterion – is another generalization of the Hill Failure Criterion. A single failure index F is calculated as: V1 Real &amp;gt; 0.0, no Default.
V2 Real &amp;gt; 0.0 or blank; Default V1
V3 Real &amp;gt; 0.0, no Default.
V4 Real &amp;gt; 0.0 or blank; Default V3
V5 Real &amp;gt; 0.0; no Default
V6 Real &amp;gt; 0.0 or blank; Default V5
V7 Real &amp;gt; 0.0 no Default
V8 Real &amp;gt; 0.0 or blank; Default V7
V9 Real &amp;gt; 0.0 or blank; Default V7F Cx =xy–2Cyyz–2Czzx–2 1
V1&amp;mdash;&amp;mdash;1
V2&amp;mdash;&amp;mdash;–x+ + +
1
V3&amp;mdash;&amp;mdash;1
V4&amp;mdash;&amp;mdash;–y1
V5&amp;mdash;&amp;mdash;1
V6&amp;mdash;&amp;mdash;–zxy2
V72&amp;mdash;&amp;mdash;-yz2
V82&amp;mdash;&amp;mdash;-zx2
V92&amp;mdash;&amp;mdash;-/Find + + + + +
Cx1
2&amp;mdash;1
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – +  =
Cy1
2&amp;mdash;1
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – +  =
Cz1
2&amp;mdash;1
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – +  =
F[1
V1&amp;mdash;&amp;mdash;1
V2&amp;mdash;&amp;mdash;–= x1
V3&amp;mdash;&amp;mdash;1
V4&amp;mdash;&amp;mdash;–y1
V5&amp;mdash;&amp;mdash;1
V6&amp;mdash;&amp;mdash;–zx2
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-y2
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-z2
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + + + + +
xy2
V72&amp;mdash;&amp;mdash;-yz2
V72&amp;mdash;&amp;mdash;-zx2
V72&amp;mdash;&amp;mdash;-2V10xy2V11yz2V12xz+ + + + + + /Find&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Failure and Damage Models (MATF)512
Main Index
where the indices (x, y, z) denote material coordinate direction.
The following restrictions apply to V10, V11 and V12:
Hashin Criterion  – four failure indices are calculated:V1 Real &amp;gt; 0.0, no Default.
V2 Real &amp;gt; 0.0 or blank; Default V1
V3 Real &amp;gt; 0.0, no Default.
V4 Real &amp;gt; 0.0 or blank; Default V3
V5 Real &amp;gt; 0.0; no Default
V6 Real &amp;gt; 0.0 or blank; Default V5
V7 Real &amp;gt; 0.0 no Default
V8 Real &amp;gt; 0.0 or blank; Default V7
V9 Real &amp;gt; 0.0 or blank; Default V7
V10 Real; no Default
V11 Real; no Default
V12 Real; no Default
V102 1
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  V112 1
V3V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  V122 1
V1V2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
V5V6&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 
F1x
V1&amp;mdash;&amp;mdash;
21
V102&amp;mdash;&amp;mdash;&amp;ndash;xy2xz2+ + x0
0 x0=
F2x
V2&amp;mdash;&amp;mdash;&amp;ndash;x0
0x0=
F31
V32&amp;mdash;&amp;mdash;yz+2 1
V112&amp;mdash;&amp;mdash;&amp;ndash;yz2yz– 1
V102&amp;mdash;&amp;mdash;&amp;ndash;xy2xz2+  + + yz+ 0
0 yz+ 0=&lt;/p&gt;
&lt;p&gt;513 Chapter 10: Materials
Failure and Damage Models (MATF)
Main Index
where the indices (x, y, z) denote material coordinate direction.
Puck Failure Criterion  – five failure indices are calculated for the plane stress case and four for the general case. The first
two failure indices are related to fiber failure:
For plane stress failure, indices 3, 4, and 5 are related to matrix failure. For other cases, plane stress failure indices 3 and 4
are used for the matrix failure, and  5 is not used and is set to zero. The following material parameters are used:V1 Real &amp;gt; 0.0, no Default.
V2 Real &amp;gt; 0.0 or blank; Default V1
V3 Real &amp;gt; 0.0, no Default.
V4 Real &amp;gt; 0.0 or blank; Default V3.
V10 Real &amp;gt; 0.0 no Default
V11 Real &amp;gt; 0.0 or blank; Default V10
V1 Maximum fiber tensile stress (Real &amp;gt; 0.0; no Default)
V2 Maximum fiber compressive stress (Real &amp;gt; 0.0 or blank; Default V1)
V3 Maximum matrix tensile stress (Real &amp;gt; 0.0; no Default)
V4 Maximum matrix compressive stress (Real &amp;gt; 0.0 or blank; Default V3)
V10 Maximum in-plane shear stress. (Real &amp;gt; 0.0; no Default)
W1 p12c, slope 1 of failure envelope (Real &amp;gt; 0.0; no Default)
W2 p12t, slope 2 of failure envelope (Real &amp;gt; 0.0; Default W1)F41
V4&amp;mdash;&amp;mdash;V4
2V11&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
2
1–
   yz+1
4V112&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;yz+2 1
V112&amp;mdash;&amp;mdash;&amp;ndash;yz2yz– 1
V102&amp;mdash;&amp;mdash;&amp;ndash;xy2xz2+  + + + yz+ 0
0 yz0 +=
F1x
V1&amp;mdash;&amp;mdash;x0
0x0=
F2x
V2&amp;mdash;&amp;mdash;&amp;ndash;x0
0x0=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Failure and Damage Models (MATF)514
Main Index
Hashin-Tape Criterion  – a variant of the Hashin criterion adapted for tape type of materials. Four failure indices are
calculated:W3 p23c, slope 3 of failure envelope (Real &amp;gt; 0.0 or blank; Default; calculated internally; this is recommended for plane
stress)
W4 p23t, slope 4 of failure envelope (Real &amp;gt; 0.0; Default W3, not used for plane stress)
V1 Maximum tape fiber tensile stress (Real &amp;gt; 0.0; no Default)
V2 Maximum tape fiber compressive stress (Real &amp;gt; 0.0 or blank; Default V1)
V3 Maximum tape cross-fiber tensile stress (Real &amp;gt; 0.0; no Default)
V4 Maximum tape cross-fiber compressive stress (Real &amp;gt; 0.0 or blank; Default V3)
V10 Maximum in-plane shear stress. (Real &amp;gt; 0.0; no Default)
V11 Maximum transverse shear stress. (Real &amp;gt; 0.0 or blank; Default V10)
V12 Maximum z-x transverse shear stress. (Real &amp;gt; 0.0 or blank; Default V11)F1x
V1&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;x0
0 x0=
F2x
V2&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;x0
0 x0=
F31
V32&amp;mdash;&amp;mdash;yz+2yz
V112&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2yz
V11&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;yz+ 0
0 yz+ 0=
F4V4
2V11&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
2
1–
   yz+
V4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
4V112&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;yz+2yz
V112&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2yz
V11&amp;mdash;&amp;mdash;&amp;ndash;
2
V5x
V6&amp;mdash;&amp;mdash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;+
xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2yz
V11&amp;mdash;&amp;mdash;&amp;ndash;
2
V5x
V6&amp;mdash;&amp;mdash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;yz+ 0
0 yz+ 0=&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;515 Chapter 10: Materials
Failure and Damage Models (MATF)
Main Index
The Hashin-Fabric criterion is a variant of the Hashin criterion adapted for fabric type of materials. Six failure indices are
calculated:V5 Maximum fiber tensile stress for matrix compression (Real &amp;gt; 0.0 or blank; required if V6=1.0; otherwise, not used)
V6 Contribution factor for V5 (Real 0.0 or 1.0; Default = 0.0)
F1x
V1&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;x0
0 x0=
F2x
V2&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;x0
0 x0=
F3y
V3&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;y0
0 y0=
F4y
V4&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;y0
0 y0=
F5z
V5&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2yz
V11&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;z0
0 z0=
F6z
V6&amp;mdash;&amp;mdash;
2xy
V10&amp;mdash;&amp;mdash;&amp;ndash;
2xz
V12&amp;mdash;&amp;mdash;&amp;ndash;
2yz
V11&amp;mdash;&amp;mdash;&amp;ndash;
2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;z0
0  z0=&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Progressive Composite Failure516
Main Index
A MATTF  entry with the same MID as MATF  may be used to specify the temperature variation of the failure criterion
values.
User Defined Criterion  – can be defined by the UFAIL  user subroutine.
As an example of the usage of MATF , MATUDS , and UFAIL  user subroutine for defining a failure criteria, see User Defined
Service Ease of Use  (Ch. 46) in the MSC Nastran Demonstration Problems Manual .
Progressive Composite Failure
MSC Nastran provides two methods to model the failure of composite materials. The first is based upon Marc technology
which is activated by the MATF  bulk data entry and is discussed here. The second is provided by e-Xstreme and is activated
using MATDIGI . Failure is indicated by the failure criteria described in the previous section. When failure occurs, the
element stiffness is degraded. MSC Nastran offers two different methods for the material degradation as described below.
While MSC Nastran allows up to three failure criteria to be used for failure index calculation, only the first criterion is used
for progressive failure. The material will not heal; the damaged elements keep the degraded properties after unloading.V1 Maximum first fiber tensile stress (Real &amp;gt; 0.0; no Default)
V2 Maximum first fiber compressive stress (Real &amp;gt; 0.0 or blank; Default V1)
V3 Maximum second cross-fiber tensile stress (Real &amp;gt; 0.0; no Default)
V4 Maximum second cross-fiber compressive stress (Real &amp;gt; 0.0 or blank; Default V3)
V5 Maximum thickness tensile stress (Real &amp;gt; 0.0; no Default)
V6 Maximum thickness compressive stress ((Real &amp;gt; 0.0 or blank; Default = V5)
V10 Maximum in-plane shear stress. (Real &amp;gt; 0.0; no Default)
V11 Maximum transverse shear stress. (Real &amp;gt; 0.0 or blank; Default V10)
V12 Maximum z-x transverse shear stress. (Real &amp;gt; 0.0 or blank; Default V11)
Notes:  UFAIL  user subroutine is used along with MATUDS  bulk data entry.
In SOL 400, MATF  is only supported for elements with property extensions.  This implies that  for such
elements, PBAR /PBARL, PBEAM /PBEAML , PCOMP /PCOMPG , PROD , PSHEAR , PSHELL ,
PLPLANE , and PSOLID  should be associated with PBARN1 , PBEMN1 , PSHLN1 , PRODN1 ,
PSHEARN , PSHLN1 , PSHLN2 , and PSLDN1 , respectively.
Stress limits such as ST, SC, SS, Xt, Xc, Yt, Yc in the MAT1 , MAT2 , and MAT8  entries are not used in SOL
400.
Stress and/or strain allowable in all directions should be defined if the default is not appropriate. Be sure not
to set some of these values to low numbers.&lt;/p&gt;
&lt;p&gt;517 Chapter 10: Materials
Progressive Composite Failure
Main Index
Model 1 – Selective Gradual Degradation
This model uses a selective degradation of the moduli depending on failure mode. The moduli are decreased gradually when
failure occurs. Within an increment, it attempts to keep the highest failure index less than or equal to one. Whenever a
failure index F larger than one occurs, stiffness reduction factors ri are calculated based upon the value of the failure indices.
The incremental contribution to the total reduction factor is calculated as
(10-161)
This is done differently for different failure criteria as described below. Six such reduction factors are stored and updated.
They are then used for scaling the respective material modulus according to
(10-162)
(10-163)
(10-164)
(10-165)
(10-166)
(10-167)
The Poisson’s ratios are scaled in the same way as the corresponding shear modulus.
For the maximum stress and maximum strain criteria the reduction factors are calculated separately from each separate
failure index: r1 is calculated from the first failure index as given by equation 10-162 above, r2 is calculated from the second
failure index from equation 10-163 etc. Thus, there is no coupling of the different failure modes for these criteria.
For the failure criteria which only have one failure index: Tsai-Wu, Hoffman and Hill, all six reduction factors are decreased
in the same way, using the smallest of the ri: s.
For the criteria which distinguish between fiber and matrix failure (Hashin, Hashin-tape and Puck), there is a more complex
coupling between the failure modes. There is a default behavior which can be influenced by a number of input parameters.
The default is as follows.
r1 depends on fiber failure (first and second failure index)
 r2 depends on matrix failure (third, fourth and fifth failure index)
r3 behaves the same as r1 (r3= r1)
r4 behaves the same as r2 (r4= r2)
r5 and r6 behave the same as r4 (r5= r6= r4)ri1e1F––  –=
E11newr1E11orig=
E22newr2E22orig=
E33newr3E33orig=
G12newr4G12orig=
G23newr5G23orig=
G31newr6G31orig=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Progressive Composite Failure518
Main Index
In the MATF  option, there are five parameters available for controlling the way the moduli are reduced. With the exception
of a1, they are only used for the Hashin variants and Puck.
a1 – Residual stiffness factor: The stiffness is never reduced to less than this factor. The default is 0.01.
a2 – Matrix compression factor. With this factor, r2 can reduce less due to failure in matrix compression. Experiments show
that certain materials show less degradation of the matrix properties in compression than in tension. See for example [Ref. 6].
For the case that Fmc indicates failure in matrix compression, equation 10-161 is modified into
(10-168)
a2 defaults to 0; so the default is full reduction
a3 – Shear stiffness factor: This factor is used for taking into account the effect that the shear stiffness G12 can reduce less
than the matrix stiffness E2. With Fm indicating a matrix failure we have
(10-169)
The combined effect of  a2 and a3 on the shear stiffness reduction for the case of matrix compression failure is then
a4 – E33 reduction from fiber failure: This factor controls the reduction of E33 due to fiber and matrix failure. The default
is as mentioned above that E33 reduces due to fiber failure. With this factor this can be changed to vary linearly with fiber
and matrix failure. With Ff  indicating a fiber failure and Fm a matrix failure we have
(10-170)
a5 – Shear reduction from fiber failure: With this factor it is possible to control the reduction of the shear stiffness due to
fiber failure. By default it only reduces due to matrix failure. With Ff  and Fm as in the previous we have
(10-171)
The Hashin-fabric failure criterion reduces the first three reduction factors from the respective failure index. The three shear
reduction factors are taken from the worst of the first three factors. The factors a2 through a5 are not used for this criterion.
In addition, it is also possible to use the UPROGFAIL  user subroutine to explicitly define the reduction factors r1 through
r6. The MATUSR  bulk data entry is required to activate the UPROGFAIL  user subroutine.
Model 2 – Selective Immediate Degradation
This model uses selective degradation just as Model 1, but the stiffness is abruptly decreased. As soon as failure is indicated,
the stiffnesses are set to a1 – the residual stiffness factor. The same rules as in Model 1 for how the different factors are
defined depending on the type of failure is applied here.
The different options are flagged through the MATF  bulk data entry.r21a2–1e1Fmc ––  –=
r41a3–1e1Fm––  –=
r41a2–1a3–1e1Fmc ––  –=
r31a4–1e1Ff––  – a41e1Fm––  – =
r41a5–1e1Fm––  – a51e1Ff––  – =&lt;/p&gt;
&lt;p&gt;519 Chapter 10: Materials
Progressive Composite Failure
Main Index
Micro-mechanics Material Models (MATDIGI)
MSC Nastran SOL 400 integrates with e-Xstream Digimat Material Modeling System. This allows the user to give the
material properties on a component basis in a composite material. This is activated through the MATDIGI  bulk data entry.
Interface
Digimat-CAE/MSC Nastran SOL 400 contains the material library containing the Digimat capabilities and the required
interfaces in order to be linked with the MSC Nastran SOL 400 Finite Element (FE) solver. Linking MSC Nastran SOL
400 libraries with Digimat-CAE/MSC Nastran SOL 400 gives the user access to all linear and nonlinear small-strain
material models available in Digimat for FE small-strain analyses, just like any other MSC Nastran SOL 400 material
models. It also enables to take into account fiber orientation computed by an injection molding code. The interface thus
allows to model the impact of the injection process on the structural behavior of composite parts. Note that not all the
available Digimat material models can be used with the Digimat-CAE/MSC Nastran SOL 400 interface.
Input Files Set-up for Coupled Analyses
The objective of this section is to explain how to prepare a Digimat-CAE/MSC Nastran SOL 400 job. Let us consider here
that a Digimat Analysis File ( .daf ) is already available. Let us suppose that the name of this analysis is myAnalysis . The
following steps need to be taken to prepare the Digimat material for a coupled Digimat-CAE/MSC Nastran SOL 400
analysis.
1.Define an analysis in Digimat-CAE.
•Load in Digimat-CAE the .daf file previously defined in Digimat-MF.
•Select the interface code MSC Nastran SOL 400 (see Figure 10-40)
•If necessary, specify the path to the orientation file.
2.Generate the interface file. By running the analysis in Digimat-CAE, the following interface files are  generated:
•myAnalysis.mat  file, the Digimat material file subsequently used for the structural FE analysis; i.e., the main
input file;
•myAnalysis.nas  file, the file containing the information related to the MSC Nastran SOL 400 user  material
definition, subsequently copied in the MSC Nastran input file as well as the meaning of  the state variables that
will be written in the MSC Nastran postprocessing files ( .op2  files).
•myAnalysis.log  file, the file containing the run information including error messages in case of  unsuccessful
run.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Progressive Composite Failure520
Main Index
Figure 10-40  Digimat Menu to Select Interface
3.Define the MSC Natran SOL 400 user material.
In order to specify to MSC Nastran to use Digimat-CAE/MSC Nastran SOL 400 for a given material, you  have to
define a Digimat material in your MSC Nastran .bdf  file by means of command lines similar to the following ones.
Digimat-CAE Coupling to Finite Element Software
To write the Digimat state variables in the .op2  file and to postprocess them in Patran, the output  NLSTRESS&lt;br&gt;
must be requested in the subcase definition. The NLSTRESS  output request must include  an NLOUT  describer,
pointing to an NLOUT  entry defined in the bulk data section. For example,  the subcase definition can be:
SUBCASE 1
SUBTITLE=DigimatAnalysis
STEP 1
ANALYSIS = NLSTAT
SPC = 2001
LOAD = 1
NLSTEP = 10
NLSTRESS(PLOT,NLOUT=1)=ALL&lt;/p&gt;
&lt;p&gt;521 Chapter 10: Materials
Progressive Composite Failure
Main Index
Insert the user material related entries in the Bulk Data section.
MATDIGI 1 1 1.4E-009
UDNAME 1
myAnalysis
The entry MATDIGI  indicates to MSC Nastran that the material behavior will be modeled by a  Digimat
material. The first field after the MATDIGI  keyword contains the material identification  number. The third field
contains the identification for the UDNAME  card. The last field contains the  density of the composite
(automatically computed by Digimat).
Define state variables.
To couple Digimat to MSC Nastran SOL 400, a set of external state variables (ESV) must be  defined in the bulk
data section through the entry UDSESV . The number of ESV depends on the  Digimat material model. The first
state variable corresponds to the temperature, even for a purely  mechanical analysis.
UDSESV 72
$
SV2 HV2 SV3 HV3 SV4 HV4 SV5 HV5
SV6 HV6 SV7 HV7 SV8 HV8 SV9 HV9
SV10 HV10 SV11 HV11 SV12 HV12 SV13 HV13
SV14 HV14 SV15 HV15 SV16 HV16 SV17 HV17
&amp;hellip;
The number 72 indicates that the Digimat material model requires the definition of 72 external  state variables.
The strings HVi correspond to the name of state variables. T o get the physical  meaning of these names, please refer
to the.nas  file previously generated.
The above cited lines are automatically generated by Digimat and inserted in the .nas  file. You can  directly
copy/paste them from the .nas  interface file in the .bdf  file.
4.Ask for Digimat output results.
The external state variables defined in UDSESV  can be output to MSC Nastran .op2 ,.h5, and.f06  files by&lt;br&gt;
means of the NLOUT  entry. This entry referenced in the subcase definition must be declared in the bulk  data
section such as:
NLOUT 1 TOTTEMP
ESV SV2 SV3 SV4 SV5 SV6 SV7
SV8 SV9 SV10 SV11 SV12 SV13
&amp;hellip;
The first field after the NLOUT  keyword must be identical to the one used in the output request NLSTRESS . The
ESV keyword indicates that the external state variables are requested as output. This section is  automatically
generated by Digimat and written in the .nas  file.
The supported MSC Nastran SOL 400 formulations for shell elements are:
CQUAD4
CQUAD8
CTRIA3
The supported MSC Nastran SOL 400 formulations for solid elements are:&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Interlaminar Shear for Thick Shell, Beam, Solid Shell, and 3-D Composite Brick Elements522
Main Index
CPENTA
CHEXA
CTETRA
As an example of the usage of MATDIGI  for defining a composite material, see Interfacing Digimat to Nastran SOL400 and
SOL700 - Example for solid and shell elements  (Ch. 89) in the MSC Nastran Demonstration Problems Manual .
Licensing
The e-Xstream Digimat Material Modeling System model and advanced composites in MSC Nastran require separate
licensing and can be obtained  from your local MSC offices.
Interlaminar Shear for Thick Shell, Beam, Solid Shell, and 3-D
Composite Brick Elements
Another addition made for composite analysis is the calculation of interlaminar shears. These interlaminar shears are
printed in the local coordinate system above and below each layer selected. These values are also available for postprocessing.
The TSHEAR  keyword on the NLMOPTS bulk data entry must be used for activating the parabolic shear
distribution calculations.
In Marc, the distribution of transverse shear strains through the thickness for thick shell and beam elements was assumed
to be constant. From basic strength of materials and the equilibrium of a beam cross section, it is known that the actual
distribution is more parabolic in nature. As an additional option, the formulations for elements 1, 22, 45, 75, 89, 140, 149,
150, and 185 (TSHEAR  will be switched off for elements 185, 149 and 150 when the elements are stacked) have been modified
to include a parabolic distribution of transverse shear strain. The formulation is exact for beam element 45, but is
approximate for the other thick shell elements. Nevertheless, the approximation is expected to give improved results from
the previous constant shear distribution. Furthermore, interlaminar shear stresses for composite beams and shells can now
be easily calculated.
The enhancement for interlaminar shear is deactivated when the solid shell or continuum composite elements are stacked
though the thickness.
The generalized stiffness matrix for the complete section excluding transverse shear terms is given by:
(10-172)
where X, Y, and Z are 3 x 3 matricesF11
F22
F12
M11
M22
M12XY
YZ11
22
12
11
22
12 =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P28</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_028/</guid>
      <description>
        
        
        &lt;p&gt;523 Chapter 10: Materials
Interlaminar Shear for Thick Shell, Beam, Solid Shell, and 3-D Composite Brick Elements
Main Index
A unique X, Y direction in the plane of the section is defined by a rotation around the element normal which maximizes
the value of X11 in the above equation.
We then assume that the stresses in the X and Y direction are uncoupled, this gives:
and (10-173)
If we assume only bending and transverse shear in the section, all section forces are zero and inverting the above equation
gives:
and (10-174)
For a point in the section, we can now define the stresses as:
(10-175)
Since we assumed that all stresses in the X and Y direction are uncoupled, the equilibrium conditions through the thickness
are given by:
and (10-176)
where zy and zx are the transverse shear stresses.
From beam theory, we have:
and (10-177)
where M is the bending moments and V is the shear forces.F=section forces
M=section moments
=strain at mid plane of section
=curvature
1,2 are in-plane directions
Fxx
MxxXxxYxx
YxxZxxxx
xx
 =Fyy
MyyXyyYyy
YyyZyyyy
yy
 =
xx
xxH1x
M2xMxx =yy
yyH1y
M2yMyy =
xxz Ezxxz Ezxxxxz +   EzH1xH2xz + Mxx = = = and
yyz Ezyyz Ezyyyyz +   EzH1yH2yz + Myy = = =
zx
z&amp;mdash;&amp;mdash;&amp;mdash;-xxz
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + 0=zy
z&amp;mdash;&amp;mdash;&amp;mdash;-yyz
y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + 0=
VxMxx
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + 0= VyMyy
y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- + 0=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Cohesive Zone Modeling (MCOHE)524
Main Index
Combining the equations (10-175), (10-176), and (10-177) gives:
and (10-178)
We can integrate this through the thickness giving:
and (10-179)
with the boundary conditions that the shear stresses at the top and the bottom of the shell are zero.
We can now define the transverse shear stiffness by matching the shear strain energy over the section obtained with the
transverse shear stresses given in equation (10-179). This yields the flexibility matrix S:
(10-180)
where G is the transverse shear flexibility of the material through the thickness.
Inversion of the flexibility matrix S gives the transverse shear stiffness of the section.
Interlaminar Stresses for Continuum Composite Elements
For continuum composite elements, the interlaminar shear and normal stresses are calculated by averaging the stresses in
the stacked two layers. The stresses are transformed into a component tangent to the interface and a component normal to
the interface. The two components, considered as shear stress and normal stress, respectively, are printed out in the output
file.
Cohesive Zone Modeling (MCOHE)
MSC Nastran has a library of interface elements, which can be used to simulate the onset and progress of delamination.
These elements are defined with the CIFHEX , CIFPENT , CIFQDX , and CIFQUAD  bulk data entries. The constitutive
behavior of these elements is expressed in terms of tractions versus relative displacements between the top and bottom
edge/surface of the elements (see Figure 10-41).zx
z&amp;mdash;&amp;mdash;&amp;mdash;- EzH1xH2xz + Vx  =zy
z&amp;mdash;&amp;mdash;&amp;mdash;- EzH1yH2yz + Vy  =
zxz EzH1xH2xz + Vxzd
t2–t2
= zyz EzH1yH2yz + Vyzd
t2–y
=
1
2&amp;mdash;VxVySVx
Vy 1
2&amp;mdash;zxzzyz
   GxxzGxyz
GyxzGyyzzxz
zyz  zd
t2–t2
=&lt;/p&gt;
&lt;p&gt;525 Chapter 10: Materials
Cohesive Zone Modeling (MCOHE)
Main Index
Figure 10-41  3-D Linear Interface Element
Considering a 3-D interface element, the relative displacement components are given by one normal and two shear
components, expressed with respect to the local element system:
(10-181)
Based on the relative displacement components, the effective opening displacement is defined as:
(10-182)
Later on, some modifications of this definition will be discussed.
The effective traction t is introduced as a function of the effective opening displacement and is characterized by an initial
reversible response followed by an irreversible response as soon as a critical effective opening displacement vc has been
reached. The irreversible part is characterized by increasing damage ranging from 0 (onset of delamination) to 1 (full
delamination).
Three standard functions are currently available; namely, a bilinear, an exponential, and a linear-exponential function (see
Figure 10-42):
(10-183)24
3
v˜2v˜1
5
678
v˜3top face
bottom face
1
vnu1topu1bottom– =
vsu2topu2bottom– =
vtu3topu3bottom– =
v vn2vs2vt2+ + =
t2Gc
vm&amp;mdash;&amp;mdash;&amp;mdash;-v
vc&amp;mdash;&amp;ndash; =if    0vvc
t2Gc
vm&amp;mdash;&amp;mdash;&amp;mdash;-vmv–
vmv–c&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
=if    vcv vm
t0= if    vvmBilinear&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Cohesive Zone Modeling (MCOHE)526
Main Index
(10-184)
(10-185)
in which Gc is the energy release rate (cohesive energy), vm is the maximum effective opening displacement (which is only
used by the bilinear model), and q is the exponential decay factor (which is only used by the linear-exponential model).
Figure 10-42  Bilinear (left), Exponential (middle), and Linear-exponential (right) Cohesive Material Model
It can easily be verified that the maximum effective traction tc, corresponding to the critical effective opening displacement&lt;br&gt;
vc is given by:
Bilinear (10-186)
Exponential (10-187)
Linear-exponential (10-188)
So if the maximum effective traction is known, the critical or maximum effective opening displacement can be determined
by:tGcv
vc2&amp;mdash;&amp;ndash;ev–vc=Exponential
t2qGc
vcq2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-v
vc&amp;mdash;&amp;ndash; =if    0 v vc
Linear-exponential
t2qGc
vcq2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-eq1vvc–=if    vvc
v vt t
vcvcvmt
vcv
tc2Gc
vm&amp;mdash;&amp;mdash;&amp;mdash;- =
tcGc
evc&amp;mdash;&amp;mdash;&amp;ndash; =
tc2qGc
vcq2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;527 Chapter 10: Materials
Cohesive Zone Modeling (MCOHE)
Main Index
Bilinear (10-189)
Exponential (10-190)
Linear-exponential (10-191)
Note that for the bilinear model, the critical effective opening displacement does neither affect the cohesive energy nor the
maximum effective traction.
Until now, the behavior in the normal and shear direction is treated similarly. However, sometimes the behavior of an
interface material may be different in tension and shear. The first method to include such differences is incorporated by the
shear-normal stress ratio , which defines the ratio of the maximum stress in shear and the maximum stress in tension
[Ref. 6]. This ratio is used to redefine the effective opening displacement according to:
The effect of = 0.5 is depicted in Figure 10-43 for the bilinear model.
Figure 10-43  Response in Tension and Shear for a Shear-normal Stress Ratio = 0.5 (Bilinear Model)
Although the use of the shear-normal stress ratio offers some flexibility, it assumes that the cohesive energy in tension and
shear is the same. If one wants to define a different value of the cohesive energy in shear than in tension, the shear-normal
energy ratio  can be used. In a general state of deformation, when  ≠ 1, the curve defining the effective traction versus
the effective opening displacement is defined as a linear combination of the response in pure tension and pure shear. Using&lt;br&gt;
= 0.5 and = 0.75, Figure 10-44 shows the response in tension and shear for the bilinear model.vm2Gc
tc&amp;mdash;&amp;mdash;&amp;mdash;- =
vcGc
etc&amp;mdash;&amp;mdash;- =
vc2qGc
tcq2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
v vn212vs212vt2+ + =
vt
vcvmvt
vcvmtension
onlyshear
only
GcGc&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Cohesive Zone Modeling (MCOHE)528
Main Index
Figure 10-44  Response in Tension and Shear for a Shear-normal Stress Ratio = 0.5 and a Shear -normal Energy Ratio&lt;br&gt;
= 0.75 (Bilinear Model)
In order to avoid convergence problems in a finite element simulation of delamination, one may activate so-called viscous
energy dissipation. The basic idea of the dissipation model is that when delamination starts, the rate of deformation may
suddenly increase. This increase is used to augment the constitutive behavior with a viscous contribution being equivalent
to this rate of deformation:
(10-192)
in which is the viscous energy factor,  is effective opening displacement rate and  is the reference value of the effective
opening displacement rate. This reference value can either be user-defined or calculated by the program. In the latter case,
the reference value is given by the maximum effective opening displacement rate in any interface element, as long as the
response in all the interface elements is reversible. The viscous energy dissipation model does not directly have a physical
background, but is basically numerical in nature.
In the equations discussed above, no distinction has been made between tensile and compressive loading in the normal
direction. Assuming that in compression the behavior will remain reversible, equation (10-193) will be adapted as:
(10-193)
Since, irrespective of the damage level, the interface elements should be able to sustain ongoing loading in compression (so
that inter-penetration is prohibited), it is possible to make the stiffness in compression a function of the corresponding
(negative) opening displacement. By default, the stiffness in compression is constant and given by the slope of the traction
versus opening displacement curve at the origin. If a non-default value of the stiffening factor in compression F is given,
the stiffness at v = -vc is given by:vt
vcvmvt
vcvmtension
onlyshear
only
0.75GcGc
tvistcv·
v·r&amp;mdash;&amp;mdash;&amp;mdash;- =
v· v·0
v maxvn0  2vs2vt2+ + =
tn
vn&amp;mdash;&amp;mdash;&amp;ndash;
vc–Ftn
vn&amp;mdash;&amp;mdash;&amp;ndash;
0=&lt;/p&gt;
&lt;p&gt;529 Chapter 10: Materials
Creep (MATVP, CREEP)
Main Index
So far, the constitutive behavior has been discussed in terms of an effective traction versus an effective opening
displacement. The traction components  follow from the effective traction according to:
; (10-194)
As an alternative to the above mentioned standard models, the UCOHES  user subroutine can be used to enter a
user-defined material behavior. This can be activated by using the MATUSR  bulk data entry.
There is a corresponding thermal cohesive model to what was discussed above which uses heat transfer cohesive elements.
In this model, the thermal conductivity can be a function of the displacement opening. The thermal gradient through the
thickness is based upon the temperatures along the top and bottom surfaces.
As an example of the usage of MCHOE  for defining a cohesive material, see Composite Fracture and Delamination  (Ch. 19) in
the MSC Nastran Demonstration Problems Manual .
Creep (MATVP, CREEP)
Creep is an important factor in elevated-temperature stress analysis. In SOL 400, creep is represented by a Maxwell model.
Creep is a time-dependent, inelastic behavior, and can occur at any stress level (that is, either below or above the yield stress
of a material). The creep behavior can be characterized as primary, secondary, and tertiary creep, as shown in Figure 10-47.
Engineering analysis is often limited to the primary and secondary creep regions. Tertiary creep ( Figure 10-45) in a uniaxial
specimen is usually associated with geometric instabilities, such as necking. The major difference between the primary and
secondary creep is that the creep strain rate is much larger in the primary creep region than it is in the secondary creep
region. The creep strain rate is the slope of the creep strain-time curve. The creep strain rate is generally dependent on stress,
temperature, and time.
The creep data can be specified in either an exponent form or in a piecewise linear curve.
(10-195)tntv
vn&amp;mdash;&amp;mdash;&amp;ndash; = tst,tv
vst,&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
·c dc
dt&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Creep (MATVP, CREEP)530
Main Index
Figure 10-45  Creep Strain Versus Time (Uniaxial Test at Constant Stress and Temperature)
Forms of Creep Material Law
There are three possible modes of input for creep constitutive data.
1.Express the dependence of equivalent creep strain rate on any independent parameter through a piecewise linear
relationship. The equivalent creep strain rate is then assumed to be a piecewise linear approximation to
(10-196)
where A is a constant;  is equivalent creep strain rate; and , , T, and t are equivalent stress, equivalent creep
strain, temperature and time, respectively. The functions f, g, h, and k are piecewise linear. This representation is
shown in Figure 10-46. (Any of the functions ( f, g, h, or k) can be set to unity by setting the number of piecewise
linear slopes for that relation to zero on the input data.)Note: Primary Creep: Fast decrease in creep strain rate
Secondary Creep: Slow decrease in creep strain rate
Tertiary Creep: Fast increase in creep strain rateSecondary
Creep
Primary
CreepTertiary
CreepCreep Strain
C
Time (t)
·cAfgchTdkt
dt&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
·cc&lt;/p&gt;
&lt;p&gt;531 Chapter 10: Materials
Creep (MATVP, CREEP)
Main Index
Figure 10-46  Piecewise Linear Representation of Creep Data
2.The dependence of equivalent creep strain rate on any independent parameter can be given directly in power law
form by the appropriate exponent. The equivalent creep strain rate is
(10-197)
This is often adequate for engineering metals at constant temperature where Norton’s rule is a good approximation.
(10-198)
3.Isotropic creep behavior is based on a von Mises creep potential described by the equivalent creep law
(10-199)
The material creep behavior is described by
(10-200)
During creep, the creep strain rate usually decreases. This effect is called creep hardening and can be a function of time or
creep strain. The following section discusses the difference between these two types of hardening.Function F (X)
[Such as t ,
g , h (T),
k (t)] 
c
X1F1
X2F2
X3F3
X4F4
S1S2S3
(1) Slope-Break Point Data S1X1 S2X2 S3X3
(2) Function-Variable Data F1X1 F2X2 F3X3 F4X4Variable X (Such as ,c, T, t)
·cAm·cnTpqtq1– =
·cA=n
·
f·cTt  =
·c
ij·c
ij&amp;mdash;&amp;mdash;&amp;mdash;-
=&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Creep (MATVP, CREEP)532
Main Index
Consider a simple power law that illustrates the difference between time and strain-hardening rules for the calculation of
the creep strain rate.
(10-201)
where cis the creep strain,  and n are values obtained from experiments and t is time. The creep rate can be obtained by
taking the derivative c with respect to time&lt;br&gt;
(10-202)
However, t being greater than 0, we can compute the time t as
(10-203)
Substituting equation (10-199) into equation (10-202) we have
(10-204)
Equation (10-203) shows that the creep strain rate is a function of time (time hardening). Equation (10-204) indicates that
the creep strain rate is dependent on the creep strain (strain hardening). The creep strain rates calculated from these two
hardening rules generally are different. The selection of a hardening rule in creep analysis must be based on data obtained
from experimental results. Figures 10-47 and 10-48 show time and strain hardening rules in a variable state of stress. It is
assumed that the stress in a structure varies from 1to2 to 3; depending upon the model chosen, different creep strain
rates are calculated accordingly at points 1, 2, 3, and 4. Obviously, creep strain rates obtained from the time hardening rule
are quite different from those obtained by the strain hardening rule.
Figure 10-47  Time Hardeningctn=
·c dc
dt&amp;mdash;&amp;mdash;&amp;ndash; ntn1–= =
tc
&amp;mdash;&amp;ndash;1n/&lt;/h1&gt;&lt;p&gt;·c
ntn1–n1ncn1–n   = =
c1
01
23
4
t2
3&lt;/p&gt;
&lt;p&gt;533 Chapter 10: Materials
Creep (MATVP, CREEP)
Main Index
Figure 10-48  Strain Hardening
Viscoplasticity (Explicit Formulation)
The creep (Maxwell) model can be modified to include a plastic element (as shown in Figure 10-49). This plastic element is
inactive when the stress ( ) is less than the yield stress ( y) of the material. The modified model is an elasto-viscoplasticity
model and is capable of producing some observed effects of creep and plasticity. In addition, the viscoplastic model can be
used to generate time -independent plasticity solutions when stationary conditions are reached. At the other extreme, the
viscoplastic model can reproduce standard creep phenomena. The model allows the treatment of nonassociated flow rules
and strain softening which present difficulties in conventional (tangent modulus) plasticity analyses.
It is recommended that you use the implicit formulation described in the following paragraphs to model general viscoplastic
materials.c
1
01
23
4
t2
3&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Creep (MATVP, CREEP)534
Main Index
Figure 10-49  Uniaxial Representation of Viscoplastic Material
Creep (Implicit Formulation)
This formulation, as opposed to that described in the previous section, is fully implicit. A fully implicit formulation is
unconditionally stable for any choice of time step size; hence, allowing a larger time step than permissible using the explicit
method. Additionally, this is more accurate than the explicit method. The disadvantage is that each increment may be more
computationally expensive. There are two methods for defining the inelastic strain rate. The creep model definition option
can be used to define a Maxwell creep model. The back stress must be specified through the field reserved for the yield stress
in the MAT1  or other material definitions. There is no creep strain when the stress is less than the back stress. The
equivalent creep strain increment is expressed as
(10-205)
and the inelastic deviatoric strain components are
where  is the deviatoric stress at the end of the increment and y is the back stress. A is a function of temperature, time,
etc. Creep only occurs if  sigma is greater y.
One of three tangent matrices may be formed. The first uses an elastic tangent, which requires more iterations, but can be
computationally efficient because re-assembly might not be required. The second uses an algorithmic tangent that provides
the best behavior for small strain power law creep. The third uses a secant (approximate) tangent that gives the best behavior
for general viscoplastic models.
As an example of the usage of MATVP  for defining the creep behavior, see Creep of a Tube  (Ch. 34) in the MSC Nastran
Demonstration Problems Manual . ee
evp
Plastic Element
Inactive if &amp;lt; ypvp=
·c
Am·c
n
 TP qtq1– =
iji 3
2&amp;mdash;iij
&amp;mdash;&amp;mdash;&amp;ndash; =
ij&lt;/p&gt;
&lt;p&gt;535 Chapter 10: Materials
Creep (MATVP, CREEP)
Main Index
ANAND Solder Creep Model
In the process of IC produce and package, solder is widely used to connect different chips or lines, its creep behavior has
significantly influence of the IC performance and durability. ANAND model is widely accepted in IC industries to describe
the creep behavior of solder materials. Enhanced capability of SOL 400 with ANAND creep model will benefit all current
and potential Nastran users.
The Anand Solder model uses a single scalar internal variable representing deformation resistance (s), which denotes the
averaged isotropic resistance to macroscopic plastic flow offered by the underlying isotropic strengthening mechanisms.
In general, the deformation resistance (s) is consequently proportional to the equivalent stress( ?),   i.e.
(10-206)
where c is a material parameter and constant in the constant strain rate test.
(10-207)
Where
From equation (10-205), one may obtain that the flow equation as,
(10-208)
s is deformation resistance, its evolution is controlled by the following evolution equation as,
(10-209)
with is the inelastic strain rate,
A is the pre-exponential factor,
Q is the activation energy,
m is the strain rate sensitivity,
x is the multiplier of stress,
R is the gas constant, and
T is the absolute temperature, cs;= c1
c1
&amp;mdash;= h1–·
p
A&amp;mdash;&amp;ndash;eQRT
  m
sin
p·
·
p AQ
RT&amp;mdash;&amp;mdash;-–h
s&amp;mdash;sin1m
exp =
sd
td&amp;mdash;&amp;ndash; h0BaB
B&amp;mdash;&amp;mdash;
   pd
td&amp;mdash;&amp;mdash;&amp;ndash; =
B 1S
S&amp;mdash;&amp;ndash;–=&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Creep (MATVP, CREEP)536
Main Index
Where
The constants for the Anand Solder model are determined by a steady state creep test followed by use of a nonlinear fitting
method. For the viscoplastic Anand model, total 9 independent material parameters are needed:
Example
T est cases can be found in archives: &amp;hellip;\tpl\solder&lt;br&gt;
T o activating creep analysis with ANAND creep model, the following  are mandatory:
1.In Bulk Data Card NLMOPTS:  keyword “CREEP” and “LRGSTRN” must be selected with value:
“LRGSTRN” with value 1 for updated Lagrange formulation, Hypo-elasticity and additive plasticity with mean
normal value.
“CREEP” with valc3=1, Implicit Creep on; and valc4=0/1/2, for elastic tangent as default (Blank or 0), 1 for secant
tangent, and 2 for radial setting, respectively.
2.In Bulk Data Card MATEP: keyword “IMPCREEP” is required for ANAND model.
3.In Bulk Data Card NLSTEP: CREEP in “GENERAL” is required for ANAND creep model.
4.In Bulk Data Card MATVP: material of ANAND creep model are defined in MATVP card with keyword
“ANAND” in the 3rd field and following 9 fields.
An example of the mandatory options for using ANAND model is given as follows. MATVP is a secondary material data
that has to refer to a primary material data (MAT1 in this example). h0 is the hardening constant,
is the deformation resistance saturation coefficient,
n is the strain rate sensitivity of saturation, and
a is the strain rate sensitivity of hardeningSSˆ1
A&amp;mdash;pd
td&amp;mdash;&amp;mdash;&amp;ndash;Q
kT&amp;mdash;&amp;mdash;expn&lt;/h1&gt;&lt;p&gt;sˆ
AQmh0sˆnas0,,,,,,,,&lt;/p&gt;
&lt;p&gt;537 Chapter 10: Materials
Creep (MATVP, CREEP)
Main Index
The output of creep strain is dominated by NLSTRESS in Case Control Section.
With NLSTRESS in Case Control, the equivalent creep strain on grid point may be output. T o output the components of
the creep strain, NLOUT should be assigned in NLSTRESS Case Control command and requests Creep output in Bulk
Data Card, for example;
In case control section:
NLSTRESS (NLOUT=num) = ALL
In bulk data section:
NLOUT, num, TOTTEMP, CCRPSTRN
Specifying Creep Material Entries
Each of the creep models described in this section can be selected with the MATVP  bulk data entry. MATVP  is the only
form of creep data material input supported by SOL 400 when the advanced elements are used.
Patran Materials Application Input Data
To define creep behavior in Patran:
1.From the Materials Application  form, set the Action&amp;gt;Object&amp;gt;Method  combination to Create &amp;gt; Isotropic-or-
Orthotropic-or-Anisotropic &amp;gt; Manual Input .
2.Click Input Properties&amp;hellip;, and select Creep  from the Constitutive Model  pull-down menu and MATVP  from the
Creep Data Input  pull-down menu.
Creep material models require the following MATVP  material data via the Input Properties  subform on the Materials
Application  form.Entry Description
MATVP Specifies viscoplastic or creep material properties to be used for quasi-static analysis in SOL 400.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Gasket (MATG)538
Main Index
Gasket (MATG)
Engine gaskets are used to seal the metal parts of the engine to prevent steam or gas from escaping. They are complex (often
multi-layer) components, usually rather thin and typically made of several different materials of varying thickness. The
gaskets are carefully designed to have a specific behavior in the thickness direction. This is to ensure that the joints remain
sealed when the metal parts are loaded by thermal or mechanical loads. The through-thickness behavior, usually expressed
as a relation between the pressure on the gasket and the closure distance of the gasket, is highly nonlinear, often involves Isotropic – Anisotropic – Orthotropic Description
Coefficient Specifies the coefficient, A.
Exponent of Temperature Defines temperature exponent.
Temperature vs. Creep Strain References a material field of temperature vs. value. Overrides
Exponent of Temperature  if present.
Exponent of Stress Defines stress exponent
Creep Strain vs. Stress References a material field of stress vs. value. Overrides Exponent of
Stress  if present.
Exponent of Creep Strain Defines creep strain exponent.
Strain Rate vs. Creep Strain References a material field of strain rate vs. value. Overrides Exponent
of Creep  Strain if present.
Exponent of Time Defines time exponent.
Time vs. Creep Strain References a material field of time vs. value. Overrides Exponent of
Time  if present.
Back Stress Defines the back stress for implicit creep
ANAND The Anand solder material model which consists of a simple set of
constitutive equations for large, isotropic, viscoplastic problems. (if this
is used, next 9 fields for parameters of Material properties must be filled
with value.)
PREXF Pre-exponential factor. A, (s-1)
ACTEN Activation energy. Q
MULST Multiplier of stress.
STNRT Strain rate sensitivity of stress. M
SATCO Deformation resistance saturation coefficient. s,(MPa)
STNSA Strain rate sensitivity of saturation. n
HRCN Hardening constant. h0,(MPa)
STNHR Stain rate sensitivity of hardening. A
DEFRS Initial value of deformation resistance. s0, (MPa)&lt;/p&gt;
&lt;p&gt;539 Chapter 10: Materials
Gasket (MATG)
Main Index
large plastic deformations, and is difficult to capture with a standard material model. The alternative of modeling the gasket
in detail by taking every individual material into account in the finite element model of the engine is not feasible. It requires
a lot of elements which makes the model unacceptably large. Also, determining the material properties of the individual
materials might be cumbersome.
The gasket material model addresses these problems by allowing gaskets to be modeled with only one element through the
thickness, while the experimentally or analytically determined complex pressure -closure relationship in that direction can
be used directly as input for the material model. The material must be used together with 2-D  axisymmetric or 3-D first-
order solid composite element types. In that case, these elements consists of one layer and have only one integration point
in the thickness direction of the element.
Constitutive Model
The behavior in the thickness direction, the transverse shear behavior, and the membrane behavior are fully uncoupled in
the gasket material model. In subsequent sections, these three deformation modes are discussed.
Local Coordinate System
The material model is most conveniently described in terms of a local coordinate system for the integration points of the
element (see Figure 10-50). For three -dimensional elements, the first and second directions of the coordinate system are
tangential to the midsurface of the element at the integration point. The third direction is the thickness direction of the
gasket and is perpendicular to the midsurface. For 2-D elements, the first direction of the coordinate system is the direction
of the midsurface at the integration point, the second direction is the thickness direction of the gasket and is perpendicular
to the midsurface, and the third direction coincides with the global 3-direction.
In a total Lagrange formulation, the orientation of the local coordinate system is determined in the undeformed
configuration and is fixed. In an updated Lagrange formulation, the orientation is determined in the current configuration
and is updated during the analysis.
Figure 10-50  The Location of the Integration Points and the Local Coordinate Systems in 2- and 3 -D Gasket Elements
Thickness Direction – Compression
In the thickness direction, the material exhibits the typical gasket behavior in compression, as depicted in Figure 10-51. After
an initial nonlinear elastic response (section AB), the gasket starts to yield if the pressure p on the gasket exceeds the initial
yield pressure py0. Upon further loading, plastic deformation increases, accompanied by (possibly nonlinear) hardening, 12
Midsurface
Integration Point123
Midsurface Integration Point&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Gasket (MATG)540
Main Index
until the gasket is fully compressed (section BD). Unloading occurs in this stage along nonlinear elastic paths (section FG,
for example). When the gasket is fully compressed, loading and unloading occurs along a new nonlinear elastic path (section
CDE), while retaining the permanent deformation built up during compression. No additional plastic deformation is
developed once the gasket is fully compressed.
Figure 10-51  Pressure-closure Relation of a Gasket
The loading and unloading paths of the gasket are usually established experimentally by compressing the gasket, unloading
it again, and repeating this cycle a number of times for increasing pressures. The resulting pressure-closure data can be used
as input for the material model. You must supply the loading path and may specify up to ten unloading paths. In addition,
the initial yield pressure py0 must be given. The loading path should consist of both the elastic part of the loading path and
the hardening part, if present. If no unloading paths are supplied or if the yield pressure is not reached by the loading path,
the gasket is assumed to be elastic. In that case, loading and unloading occurs along the loading path.
The loading and unloading paths must be defined using the TABLES1  bulk data entries and must relate the pressure on
the gasket to the gasket closure. The unloading paths specify the elastic unloading of the gasket at different amounts of
plastic deformation; the closure at zero pressure is taken as the plastic closure on the unloading path. If unloading occurs
at an amount of plastic deformation for which no path has been specified, the unloading path is constructed automatically
by linear interpolation between the two nearest user supplied paths. The unloading path, supplied by you, with the largest
amount of plastic deformation is taken as the elastic path at full compression of the gasket.
For example, in Figure 10-51, the loading path is given by the sections AB (elastic part) and BD (hardening part) and the
initial yield pressure is the pressure at point B. The (single) unloading path is curve CDE. The latter is also the elastic path py0py1
py
cp0 cp1 cp cy0 cy1 cyAB
CDE
FG
Gasket Closure Distance cGasket Pressureploading path
unloading path&lt;/p&gt;
&lt;p&gt;541 Chapter 10: Materials
Gasket (MATG)
Main Index
at full compression of the gasket. The amount of plastic closure on the unloading path is cp1. The dashed curve FG is the
unloading path at a certain plastic closure cp that is constructed by interpolation from the elastic part of the loading path
(section AB) and the unloading path CD.
The compressive behavior in the thickness direction is implemented by decomposing the gasket closure rate into an elastic
and a plastic part:
(10-210)
Of these two parts, only the elastic part contributes to the pressure. The constitutive equation is given by the following rate
equation:
(10-211)
Here, Dc is the consistent tangent to the pressure-closure curve.
Plastic deformation develops when the pressure p equals the current yield pressure py. The latter is a function of the amount
of plastic deformation developed so far and is given by the hardening part of the loading path (section BD in Figure 10-51).
Initial Gap
The thickness of a gasket can vary considerably throughout the sealing region. Since the gasket is modeled with only one
element through the thickness, this can lead to meshing difficulties at the boundaries between thick regions and thin
regions. The initial gap parameter can be used to solve this. The parameter basically shifts the loading and unloading curves
in the positive closure direction. As long as the closure distance of the gasket elements is smaller than the initial gap, no
pressure is built up in the gasket. The sealing region can thus be modeled as a flat sheet of uniform thickness and the initial
gap parameter can be set for those regions where the gasket is actually thinner than the elements of the finite element mesh
used to model it.
Thickness Direction - Tension
The tensile behavior of the gasket in the thickness direction is linear elastic and is governed by a tensile modulus Dt. The
latter is defined as a pressure per unit closure distance (that is, length).
Transverse Shear and Membrane Behavior
The transverse shear is defined in the 2-3 and 3-1 planes of the local coordinate system (for three-dimensional elements) or
the 1-2 plane (for two-dimensional elements). It is linear elastic and characterized by a transverse shear modulus Gt.
The membrane behavior is defined in the local 1-2 plane (for three-dimensional elements) or the local 3 -1 plane (for two-
dimensional elements) and is linear elastic and isotropic. Young’s modulus Em and Poisson’s ratio vm that govern the
membrane behavior are taken from an existing material that must be defined using the MAT1  bulk data entry. Multiple
gasket material can refer to the same isotropic material for their membrane properties.c· c·ec·p+ =
p· Dcc·eDcc·c·p– = =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Gasket (MATG)542
Main Index
Thermal Expansion
The thermal expansion of the gasket material is isotropic and the thermal expansion coefficient are taken from the isotropic
material that also describes the membrane behavior.
Constitutive Equations
As mentioned above, the behavior in the thickness direction of the gasket is formulated as a relation between the pressure
p on the gasket and the gasket closure distance c. In order to formulate the constitutive equations of the gasket material,
this relation must first be written in terms of stresses and strains. This depends heavily on the stress and strain tensor
employed in the analysis. For small strain analyses, for example, the engineering stress and strain are used. In that case, the
gasket closure rate and the pressure rate are related to the strain rate and the stress rate by
c = -h and p = - (10-212)
in which h is the thickness of the gasket.
The resulting constitutive equation for three-dimensional elements, expressed in the local coordinate system of the
integration, now reads
(10-213)
in which C = hDc. For two-dimensional elements, the equation is given by11
22
33
12
23
31Em
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-mEm
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0 0 00
mEm
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-Em
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0 0 00
0 0 C 0 00
0 0 0Em
21m+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;00
0 0 0 0 Gt0
0 0 0 0 0Gt11
22
3333p–
12
23
31=&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P29</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_029/</guid>
      <description>
        
        
        &lt;p&gt;543 Chapter 10: Materials
Thermo-Mechanical Shape Memory Model (MATSMA)
Main Index
(10-214)
For large deformations in a total Lagrange formulation, in which the Green-Lagrange strains and the second Piola-
Kirchhoff stresses are employed (as well as in an updated Lagrange environment) in which the logarithmic strains and
Cauchy stresses are being used, similar but more complex relations can be derived.
Specifying Gasket Material Entries
The MATG  provides specifically for modeling gasket materials.
As an example of the usage of MATG  for defining gasket material, see Engine Gasket  (Ch. 10) or Model Airplane Engine Analysis&lt;br&gt;
(Ch. 24) in the MSC Nastran Demonstration Problems Manual .
Thermo-Mechanical Shape Memory Model (MATSMA)
NiTi alloys with near-equiatomic composition exhibit a reversible, thermoelastic transformation between a high-
temperature, ordered cubic (B2) austenitic phase and a low-temperature, monoclinic (B19) martensitic phase. The density
change and thus the volumetric are small and on the order of 0.003. The transformation strains are, thus mainly deviatoric,
of the order of 0.07-0.085. However, these small dilational strains do not necessarily lead to a lack of pressure sensitivity in
the phenomenology. The behavior of nitinol is different depending on whether the materials are subjected to hydrostatic
tension or compression.
Typical phenomenology is shown in Figure 10-52 taken from Miyazaki et al. (1981). The curves indicate that upon cooling,
the material transformation from austenite to martensite begins once the Ms temperature is reached. Upon further cooling,
the volume fraction on martensite is a given function of temperature; the volume fraction becomes 100% martensite when
the Mf  temperature is reached. Upon heating, transformation from martensite to austenite begins only after As temperature
is reached. This re-transformation is complete when the Af  temperature is reached. Finally, note that the four Entry Description
MATG Specifies gasket material properties to be used in SOL 400.
MATTG Specifies gasket material property temperature variation to be used in SOL 400.11
22
33
12Em
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0mEm
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0
0 C 0 0
mEm
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0Em
1m2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-0
0 0 0 Gt11
2222p–
33
12=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermo-Mechanical Shape Memory Model (MATSMA)544
Main Index
transformation temperatures are stress dependent. The experimental data indicate the Ms, Mf, As, and Af  may be
approximated from their stress-free values, , , , and  by
,
; and
,
.
where eqis the von Mises equivalent stress. At a sufficiently high temperature, often called the Md temperature,
transformation to martensite does not occur at any level of stress.
The transformation characteristics such as the transformation temperatures depend sensitively on alloy composition and
heat treatment.Ms0Mf0As0Af0
MsMs0eq
Cm&amp;mdash;&amp;mdash;&amp;ndash; + =
MfMf0eq
Cm&amp;mdash;&amp;mdash;&amp;ndash; + =
AsAs0eq
Ca&amp;mdash;&amp;mdash;&amp;ndash; + =
AfAf0eq
Ca&amp;mdash;&amp;mdash;&amp;ndash; + =&lt;/p&gt;
&lt;p&gt;545 Chapter 10: Materials
Thermo-Mechanical Shape Memory Model (MATSMA)
Main Index
Figure 10-52  Austenite to Martensite and Martensite to Austenite Decomposition
Transformation Induced Deformation
For the discussion of the thermo-mechanical response of NiTi, the data of Miyazaki et al. (1981) is shown in Figure 10-53.
Following this thermal history, it is observed that, when unstrained specimens with fully austenitic microstructures are
cooled, the transformation to martensite begins at a temperature of 190K; the transformation is complete at 128K. This
established the so-called martensite start ( ) and martensite finish ( ) temperatures at 190K and 128K, respectively.
With the imposition of an applied uniaxial tensile stress, the low temperature martensite is favored and the  and&lt;br&gt;
temperatures increase. Upon heating a specimen with fully martensitic microstructure, the reverse transformation is
observed to begin at a temperature of 188K and to be complete at 221K. These define the austenite start ( )and austenite
finish ( ) temperatures, respectively. Uniaxial tension tests are carried out in temperature ranges where T &amp;lt; Ms, Ms &amp;lt; T
&amp;lt; Af, and Af  &amp;lt; T &amp;lt; Tc where Tc is defined as the temperature above which the yield strength of the austenitic
phase is lower than the stress required to induce the austenite-to-martensite transformation.077150 200 250 300
Temperature (K)Ms Af200400600Tensile Stress (MPa)Stress = 0Austenite to martensite &amp;amp;
martensite to austentie
decompositionAs Mf
Note:
After partial
transformation,
decomposition
begins at As.
MS Af
50 60 70 80 90 100 0 10 20 30 40
Temperature0.00.10.20.30.40.50.60.70.80.91.0Martensite Volume Fraction
Ms0Mf0
Ms0Mf0
As0
Af0
AfTTc&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermo-Mechanical Shape Memory Model (MATSMA)546
Main Index
Figure 10-53  Thermal History
In the temperature range where T &amp;lt; Mf , the microstructures are all martensitic. The stress versus strain curves display a
smooth parabolic type of behavior which is consistent with deformation caused by the movement of defects such as twin
boundaries and the boundaries between variants. Note that unloading occurs nearly elastically and that the accumulated
deformation, caused by the reorientation of the existing martensite and the transformation of any pre -existing austenite,
remains after the specimen is completely unloaded. Note also that the accumulated deformation is entirely due to oriented
martensite and this would be recoverable upon heating to temperatures above the ( As - Af ) range. This would, then, display
the shape memory effect.
Pseudoelastic behavior is displayed in the temperature range Af &amp;lt; T &amp;lt; Tc. In this range, the initial microstructures are
essentially all austenitic, and stress induced martensite is formed, along with the associated deformation; upon unloading,
however, the martensite is unstable and reverts to austenite thereby undoing the accumulated deformation. Note that, as
expected, the stress levels rise with increasing temperature. In this range, the transformation induced deformation is nearly
all reversible upon unloading.
At temperatures where T &amp;gt; Tc , plastic deformation appears to precede the formation of stress induced martensite. The
unloading part of the stress versus strain behavior displays nonlinearity and the unloading is now associated with permanent
(plastic) deformation. Permanent deformation due to plastic deformation of the austenite is nonrecoverable and if such
deformation is large, shape memory behavior is lost.0 0 0100200300(a) 77K (b) 153K (c) 164K
0 0 0100200300400(d) 224K (e) 232K (f) 241K
200400600(g) 263K (h) 273K (i) 276K
Ms = 190K
AF = 221K
0 2 4 0 2 4 0 2 4
Strain (%)Tensile Stress (MPa)&lt;/p&gt;
&lt;p&gt;547 Chapter 10: Materials
Thermo-Mechanical Shape Memory Model (MATSMA)
Main Index
Constitutive Theory
The model formulated below is based on the kinematics of small strains, although the extension to large strain is
straightforward. Accordingly, the incremental strain, , is simply the sum of the following contributions:
elthplph(10-215)
In equation (10-215), el is the incremental elastic, or lattice, strain rate; th is the incremental thermal strain, pl is the
incremental visco-plastic strain, and ph is the incremental strain associated with thermoelastic phase transformations. The
incremental elastic strain is taken to be simply related to a set of elastic moduli, L, and the incremental Cauchy stress rate,
, as
Lel(10-216)
To calculate the coefficient of thermal expansion of the composite, the rule of mixtures is used as
1-f )Af M.
In the above equations, the superscripts A and M refer to the austenite and martensite values, and f is the volume fraction
of martensite.
Phase Transformation Strains
As noted earlier, the phase transformation induced strains are a result of the formation of oriented, stress induced,
martensite and the reorientation of randomly oriented thermally induced martensite. To account for this, Ph is expressed
as
Ph TRIP TWIN&lt;br&gt;
where
. (10-217)
and
. (10-218)
where f f(+) f(-)  and { } represents McCauley’s bracket where , x ≠ 0 .
In equation (10-217), f(+)  represents the rate at which martensite is formed,  is the magnitude of the deviatoric part
of the transformation, and  is the volumetric part of the transformation strain. The function g(eq) is schematically TRIPf+geqeqT3
2&amp;mdash;&amp;rsquo;
eq&amp;mdash;&amp;mdash;&amp;ndash;f+TIf-Ph+ + =
TWINfgeqeqT3&amp;rsquo;
2eq&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;eqeqeffg–  =
x1
2&amp;mdash;xx+
x&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;=
eqT
T&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermo-Mechanical Shape Memory Model (MATSMA)548
Main Index
depicted in Figure 10-54, and is a measure of the extent to which the martensite transformation strains are aligned with the
deviatoric stress.  eq is the equivalent stress defined as:
where d
is the deviatoric stress.
Figure 10-54  Function g(eq)
The first two terms in equation (10-217) describe the development of transformation induced strains due to the formation
of stress induced (partially oriented) martensite. f (-)  is the change of formation of austenite; for example, the rate at which
the volume fraction of martensite decreases. The last term in equation (10-217), therefore, represents the recovery of the
accumulated phase transformation strain.
Note that there is no dilatational contribution to TWIN since f  is fixed. Note that the twinning strain rate is zero when
eq is less than , or when the magnitude of the stress change is negative ( eq &amp;lt; 0). Hence,  can be considered
as a stress below which no twinning is possible.
The function g represents the extent to which the transformation strains are coaxial with the applied deviatoric stress. This
function can be calibrated with the experimental data. Note for uniaxial stress-strain curves performed below the martensite
finish temperature, the material starts as 100% martensite, and that other than elastic strains, the deformation is dominated
by the “twinning” of the randomly oriented martensite.
A functional form that leads to sufficient fit to most experimental data has been implemented in MSC Nastran.eq3
2&amp;mdash;d : d=
2.0 1.5 1.0 0.5 0.0-1.00.10.30.50.70.91.1g
stress/g0
effgeffg
geq 1 gaeq
g0&amp;mdash;&amp;mdash;&amp;ndash;
gb
gceq
g0&amp;mdash;&amp;mdash;&amp;ndash;
gd
geeq
g0&amp;mdash;&amp;mdash;&amp;ndash;
gf&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;exp–=&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;549 Chapter 10: Materials
Thermo-Mechanical Shape Memory Model (MATSMA)
Main Index
In most cases, the first term is sufficient, and a value of ga &amp;lt; 0 and gb = 2 yields the best results. g0  is a stress level used to
non-dimensionalize the constants, and can be chosen such that g1when the eqg0. In some cases, it is necessary
to include the higher powers of equivalent stress for better experimental fits. In these, cases suggested values for  gd = 2.55
or 2.75 and ge = 3. However, depending on the values of gc and ge, this could lead to maxima or minima values of g in the
range of interest. Note that 0 ≤ g ≤ 1 and it should be a monotonically increasing function (an increase in the stress level
should lead to an increase in the increment of the phase strains). Thus, cut off values of g are provided, such that when g
reaches its maximum value g = gmax at the stress level , it is held constant at the value  gmax. For the proper
selection of g0, see the following section.
Experimental Data Fitting for Thermo-mechanical Shape Memory Alloy
The properties and transformation/retransformation behavior of Nititol depend upon alloy chemistry, microstructure and
the thermal processing applied to the specimens and eventually to the components built from them. Every time any of the
above change, it might be necessary to redo the calibration. Calibration of Nitinol experimental data works best if, in fact,
all specimens can be initially rendered as 100% austenite. The list of properties that require calibration is given as follows:
The “unstressed transformation temperatures”, .
The coefficients CM, and CA that provide the stress dependence of the transformation temperatures.
The elastic constants ( EM, EA, vM and v4).
Coefficients of thermal expansion, M, A.
The calibration of the detwinning function, g(eq) that provides the description of the degree to which martensite
is co-axial with the deviatoric stress state.
The yield stress of the pure martensite and austenite phase (  and ), and their strain hardening properties.
The calibration of the transformation strains,  and .
Transformation Temperatures and Their Stress Dependence ( and CA)
For almost any use of shape memory alloy, it is highly desirable that one knows the T ransformation Temperatures (TTRs)
of the alloy. The TTRs are those temperatures at which the alloy changes from the higher temperature austenite to the lower
temperature martensite or vice versa. There are in common use with NiTi alloys to provide helpful data to product designers
– Constant Load, DSC and Active Af . The detail procedures to obtain TTRs using the above methods are shown in website
(&lt;a href=&#34;https://www.sma-inc.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.sma-inc.com&lt;/a&gt;). It is recommended that combined dilatometry and DSC tests be performed on unstressed specimens
of thermally processed material to establish both the unstressed transformation temperatures and the thermal expansion
coefficients. Those tests would provide a baseline set of values for , and . Note that the TTRs are stress
dependent parameters, but it is difficult, in practice, to prepare totally unstressed samples. In order to determine the TTRs
at zero stress, experimental data must be obtained at two or more stress levels. The particular transformation point of eqmaxgg0=
Ms0Mf0As0Af0,,,
YMYA
eqTvT
Ms0Mf0As0Af0CM,,,,
Ms0Mf0As0,, Af0&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermo-Mechanical Shape Memory Model (MATSMA)550
Main Index
interest can then be extrapolated to zero stress. The estimations of TTRs, CM, and CA are shown in Figure 10-55. The typical
range of TTRs is -200 to 100°C. So, it is difficult to recommend the default values. As references, there are examples for
two different SMA materials below.
SMA 1)
, , , , ,
SMA 2)
, , , , ,
Figure 10-55  Typical Stress vs. Temperature Curve Showing the Stress Dependence of Martensite and Austenite Start and
Finish Temperature
Elastic Constants ( EM, EA, vM and vA)
Literature estimates for the elastic moduli of martensite and austenite are typically in the range of EM = 28000-41000 MPa ,
EA = 60000-83000 MPa , vM = vA = 0.33. However, most experimental data appears to be significantly different than
these. It is, therefore, suggested that estimates of these moduli should be made using actual experimental data for the
materials being calibrated. Initial loading from a state corresponding to 100% austenite produces a linear elastic response
from which EA can be readily estimated as in Figure 10-56. The modulus of martensite ( EM) is also estimated for the
unloading line, again as illustrated in Figure 10-56. In this figure, the loading should be performed to produce 100%
martensite and thus the unloading occurs with the elastic response of martensite.Ms0 : 50C – Mf0 : 100C – As0 : 5CAf0 : 20CCM : 6.0Mpa/CCA : 8.0Mpa/C
Ms0 : 190KMf0 : 128KAs0 : 188KAf0 : 221KCM : 5.33Mpa/KCA : 6.25Mpa/KStress
TemperatureCMCA
Mf0Ms0As0Af0&lt;/p&gt;
&lt;p&gt;551 Chapter 10: Materials
Thermo-Mechanical Shape Memory Model (MATSMA)
Main Index
Figure 10-56  Typical Stress-strain Curves in the Pseudo-elastic Regime, Depicting the Elastic Moduli
Thermal Expansion Coefficients ( M, A)
A recommended method for measuring thermal expansion coefficients is through the use of dilatometry whereby carefully
controlled cycles of temperature can be made. An alternative to this type of precise calibration, is to use literature values
that have been shown to be consistent with values measured on actual specimens.
These values are given as follows (See for example, TiNi Smart Sheet)
M = 6.6× 10-6/C = 3.67× 10-6/F; and
A = 11.0× 10-6/C = 6.11× 10-6/F
Detwinning and the Calibration of the g Function g(eq)
The phenomenology of the NiTi phase transformation is such that the alignment of the martensite varies with the
prevailing deviatoric stress. This intensity is measured via the von Mises equivalent stress, eq. As shown in equations 10-217
and 10-218, the scaling function that provides the description of the degree to which the martensite is aligned is g(eq). The
most direct path to calibrating this g f unction is to fit it to the uniaxial stress vs. strain curve for pure, randomly oriented
martensite conducted at a temperature below the temperature. Such a curve is shown as Figure 10-57. The solid curve
shown in Figure 10-57 is the actual measured record of uniaxial stress vs. total strain for a specimen of 100% martensite tested
at a temperature sufficiently low to ensure it remains 100% martensite. The dot curve is simply a convenient fit to it. The
parameter  is the “equivalent deviatoric transformation strain”. Note that the function g is defined as it relates to the
development of deviatoric strain due to the alignment of martensite variants. As mentioned in the previous section, in
general, the variables ga &amp;lt; 0, gb = 2f = 2.0 , gc ≥ 0, gd = 2.25 and 2.75 , ge ≤ 0 and gf = 3.0  yield a good match to many
experimental results. It is often observed that there exists a threshold equivalent stress level below which detwinning does
not occur; this stress is referred to as . The value of g at this stress is . Note that from equation (10-218), StrainStressTypical pseudoelastic
T = T1°Cresponse
EA
EM
Mf0
eqT
effggeffgffg =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Thermo-Mechanical Shape Memory Model (MATSMA)552
Main Index
twinning strain is zero when . In addition, it is also found, in practice, that the function g tends to approach
unity at a finite equivalent stress level, called . By definition, . Also, ga should be chosen to match the
general shape of the function. Since the ratio  is less than one, the higher powers take effect later, and thus gc can
be added to lower the middle slope of the curve and ge to fix the final slope of the curve. However, depending on the relative
values of ga, gb and gc, this curve might reach a maximum in the range of interest, and therefore, it should be cut-off at its
maximum value gmax. The value of gmax which is reach at a stress value  are also supplied as input.
Usually  is a good approximation. But, the selection of g0 depends on the
experimental measurement.
Figure 10-57  Typical Stress-Strain Curve of 100% Martensite Tested Below Temperature
Others
Yield stresses of the pure martensite and austenite phases for NiTi:  and .
The calibration of the transformation strains for NiTi:
(deviatoric transformation strain): 0.05-0.085
(volumetric transformation strain): 0 – 0.003.
(detwinning stress): 100-150 Mpa
g0eqeffg
0gg0g 1=
eqg0
eqg0maxg=
g02effg10effg =
StrainStressTWINgeqeqT=g0
g0Experimental
Model
Mf0
YMYA
YM70-140 Mpa =
YA195690 Mpa – =
eqT
vT
effg
2effg10effg&lt;/p&gt;
&lt;p&gt;553 Chapter 10: Materials
Mechanical Shape Memory Model (MATSMA)
Main Index
As an example of the usage of MATSMA  for defining the thermal-mechanical model of a shape memory material, see Shape
Memory Analysis of a Stent (Ch. 31) in the MSC Nastran Demonstration Problems Manual .
Mechanical Shape Memory Model (MATSMA)
Shape-memory alloys can undergo reversible changes in the crystallographic symmetry-point-group. Such changes can be
interpreted as martensitic phase transformations, that is, as solid-solid diffusion-less phase transformations between a
crystallographically more-ordered phase (the austenite or parent phase) and a crystallographically less-ordered phase (the
martensite). Typically, the austenite is stable at high temperatures and high values of the stress. For a stress-free state, we
indicate with the temperature above which only the austenite is stable and with the temperature below which only the
martensite is stable.
The phase transformations between austenite and martensite are the key to explain the superelasticity effect. For the simple
case of uniaxial tensile stress, a brief explanation follows ( Figure 10-58). Consider a specimen in the austenitic state and at a
temperature greater than A; accordingly, only the austenite is stable at zero stress. If the specimen is loaded, while keeping
the temperature constant, the material presents a nonlinear behavior (ABC) due to stress-induced conversion of austenite
into martensite. Upon unloading, while again keeping the temperature constant, a reverse transformation from martensite
to austenite occurs (CDA) as a result of the instability of the martensite at zero stress. At the end of the loading/unloading
process, no permanent strains are present and the stress-strain path is a closed hysteresis loop.
Figure 10-58  Superelasticity
At the crystallographic level, if there is no preferred direction for the occurrence of the transformation, the martensite takes
advantage of the existence of different possible habit plates (the contact plane between the austenite and the martensite
during a single-crystal transformation), forming a series of crystallographically equivalent variants. The product phase is
then termed multiple-variant martensite and it is characterized by a twinned structure. However, if there is a preferred
direction for the occurrence of the transformation (often associated with a state of stress), all the martensite crystals trend
to be formed on the most favorable habit plane. The product is then termed single-variant martensite and is characterized
by a detwinned structure. According to the existence of different types of single-variant martensite species, the conversion
of each single-variant martensite into different single variants is possible. Such a process, known as a reorientation process,
can be interpreted as a family of martensite phase transformations and is associated with changes in the parameters
governing the single-variant martensite production (hence, it is often associated to nonproportional change of stress).Note:   The current model uses a nonsymmetric Jacobian matrix. It is recommended that the nonsymmetric solver
be used to improve convergence.
AB
D
C&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Mechanical Shape Memory Model (MATSMA)554
Main Index
In addition to the thermo-mechanical shape memory model, a superelastic shape memory alloy model is also implemented
in MSC Nastran based on the work of Auricchio [Ref. 7] and [Ref. 8]. This work has been enhanced to allow different elastic
properties for the Austenite and Martensite phases.
The superelastic shape memory model has been implemented in MSC Nastran in the framework of multiplicative
decomposition. We assume the deformation gradient, F a s the control variable, and the martensite fraction, S as the only
scalar internal variable. We also introduce a multiplicative decomposition of F in the form:
F = FeFtr
where Fe is the elastic part and Ftr is the phase transition part.
Assuming an isotropic elastic response, the Kirchhoff stress  and the elastic left Cauchy-Green tensor be, defined as: be&lt;/h1&gt;&lt;p&gt;FeFeT, share the same principal directions. Accordingly, the following spectral decompositions can be introduced:
with  the elastic principal stretches and d the deviatoric part, according to the relation:
 = pI +  d(10-219)
where I is the second-order identity tensor, p is the pressure, defined as p = tr()/3, and  tr() is the trace operator. We can
write equation (10-219) with the following component form:
(10-220)
with
p = Ke, .AnAnB
A1=3
=
dAdnAnB
A1=3
=
beAe2nAnB
A1=3
=
Ae
ApAd+=
Ad2GeAe=&lt;/p&gt;
&lt;h1&gt;555 Chapter 10: Materials
Mechanical Shape Memory Model (MATSMA)
Main Index
Phase Transformations and Activation Conditions
We consider two phase transformations: the conversion of austenite into martensite (A  S) and the conversion of
martensite into austenite (S  A). T o model the possible phase-transformation pressure-dependence, we introduce a
Drucker-Prager-type loading function:
(10-221)
where  is a material parameter and  indicates the Euclidean norm, such that:
.
Indicating variants in time with a superposed dot, we assume the following linear forms for the evolution of S:
for (A S) (10-222)
for (S A) (10-223)
where
,
with , , , and  material constants. The scalar quantities HAS and HSA embed the plastic-transformation
activation condition – hence, allowing a choice between equations (10-222) and (10-223) – and they are defined by the
relations:
HAS= 1, if , or . Otherwise, HAS= 0.
HSA= 1, if , or . Otherwise, HSA= 0.
where
, .Fd3p + =
.
dAd2
A1=3
12&lt;/h1&gt;&lt;p&gt;·
S HAS1S–F·
FRfAS–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
·
S HSASF·
FRfSA–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
RfASfAS2
3&amp;mdash;+= RfSAfSA2
3&amp;mdash;+=
sASfASsSAfSA
RsASFRfAS F·0
RfSAFRsSA F·0
RsASsAS2
3&amp;mdash;+= RsSAsSA2
3&amp;mdash;+=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Mechanical Shape Memory Model (MATSMA)556
Main Index
Time-discrete Model
The time-discrete model is obtained by integrating the time-continuous model over the time interval [ tn, t]. In particular,
we use a backward-Euler integration formula for the rate-equations evaluating all the nonrate equations at time t. Written
in residual form and clearing fraction from equations (10-222) and (10-223), the time-discrete evolutionary equations
specialize to:
(10-224)
(10-225)
where
(10-226)
The quantity S in equation (10-226) can be computed expressing F as a function of S and requiring the satisfaction of the
discrete equation relative to the corresponding active phase transition.
The detailed solution algorithm for stress update and consistent tangent modulus are given in the work of Auricchio [Ref. 8].
In the enhanced version of this model, you enter different elastic constants for the two phases. In this case, the effective
elastic moduli are taken as:
E = EA (1-S) + EMS
v = vA (1-S) + vMS
Experimental Data Fitting for Mechanical Shape Memory Alloy
The experiment for mechanical shape memory alloy is quite simple.
1.To determine the transformation stresses ( ):
Uniaxial tension test is performed at the same temperature at which the simulation is desired. Here is one example
set for SMA materials.Initial Stress for Austenite to Martensite
Final Stress for Austenite to Martensite
Initial Stress for Martensite to Austenite
Initial Stress for Martensite to AusteniteRASFRfAS–sHAS1S–FFn– – 0 = =
RSAFRfSA–sHSASFFn– – 0 = =
Std
tnt
SSn,– = =
SASfASSSAfSA, , ,
SAS
fAS
SSA
fSA&lt;/p&gt;
&lt;p&gt;557 Chapter 10: Materials
Mechanical Shape Memory Model (MATSMA)
Main Index
, , ,
2.:It is measured from the difference between the response in tension and compression.
3.L:epsL is a scalar parameter representing the maximum deformation obtainable only by detwinning of the
multiple-variant martensite (or maximum strain obtainable by variant orientation). Classical values for epsL are in
the range 0.005 and 0.10. The default value is 0.07.
Conversion from Thermo-Mechanical to Mechanical SMACase 1) if the behavior in tension and compression are the same, the value is set to 0.
Case 2) if the behavior in tension and compression have a difference as in the classical case of SMA, the value
is usually set to 0.1 if there is no compression data for the phase transformation. One value for the
phase transformation in compression, say  (sigAS_s_compression) is available,  is calculated
as follows:
Note:   The mechanical shape memory model only supports ndi = 3 case (3-D, plane-strain and axisymmetric
elements). It does not support either ndi = 1 or ndi = 2 cases (1-D and plane -stress elements).
Table 10-8  Conversion Table
Thermo-Mechanical SMA Mechanical SMA Enhanced Mechanical SMA
EAE = 0.5 (EA  + EM EA
vAv = 0.5  (vA  + vM vA
EME = 0.5 (EA  + EM EM
vMv = 0.5 (vA  + vM vM
CM CM CM
CA CA CA
T0 T0 T0SAS500Mpa = fAS600Mpa = SAS300Mpa = fSA200Mpa =
sAS–
 sqrt23SAS–SAS– SAS–SAS+   =
eqTLsqrt3
2&amp;mdash;eqT= Lsqrt3
2&amp;mdash;eqT=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Material Orientation558
Main Index
As an example of the usage of MATSMA  for defining the mechanical model of a shape memory material, see Shape Memory
Analysis of a Stent (Ch. 31) in the MSC Nastran Demonstration Problems Manual .
Material Orientation
For many materials (such as composites, wood, and rolled metals), the material properties are both directionally dependent
and nonhomogeneous. A material which is directionally dependent is anisotropic, and a special case of this is orthotropic.
The material behavior is defined through the MAT2 , MAT3 , MAT8 , or MATORT  for structural behavior and MAT5 for
thermal behavior.
The material properties defined are by default given with respect to the element coordinate system. This system is often not
convenient and the definition of the material data is more natural when defined with respect to the material preferred
system. The material coordinate system can be defined in two ways, depending on the element type.
For shell elements, 2-D planar, or axisymmetric ( CTRIA3 , CTRIA6 , CTRIAR , CTRIAX , CTRIAX6 , CQUAD4 ,
CQUAD8 , CQUADR , and CQUADX ), the preferred orientation may be given as an angle with respect to an element
edge.Table 10-9  Prediction from Linear Algebra
The Relationship between Mechanical Model
and Thermo-Mechanical Model
sASToMs0–Cm=
fASToMf0–Cm=
sSAToAs0–Ca=
fSAToAf0–Ca=&lt;/p&gt;
&lt;p&gt;559 Chapter 10: Materials
Material Orientation
Main Index
Figure 10-59  CQUAD4 Element Geometry and Coordinate Systems
Additionally, when these elements are used as composite shells ( PCOMP  or PCOMPG ), then a ply angle may be used for
each laminate through the thickness of the shell to define the orientation.
For the elements mentioned above and all solid elements such as CTETRA , CHEXA , and CPENTA , the preferred material
orientation may be defined by specifying a coordinate system via CORD1R , CORD2R , CORD1C , CORD2C ,
CORD1S , or CORD2S . For shell elements, this coordinate system is projected into the plane of the element as shown in
Figure 10-60.G3
G4
G1 G2THETAyelement
xelement
xmaterialzelement+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =


&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Heat Transfer Properties560
Main Index
Figure 10-60  MCID Coordinate System Definition
Heat Transfer Properties
In heat transfer analysis, use the MAT4  bulk data entry to define isotropic behavior and the MAT5  bulk data entry for
anisotropic behavior to input values of thermal conductivity, specific heat, and mass density. The thermal conductivity is
used in the Fourier law; for isotropic materials:
and for anisotropic materials as:
If the latent heat effect is to be included in the analysis, the value of latent heat and associated solidus and liquid
temperatures must be entered through the MAT4  bulk data entry. Both the thermal conductivity and specific heat can be
dependent on temperatures. The mass density must be constant throughout conventional heat transfer analysis. For
radiation analysis, you must enter the Stefan -Botzmann constant in the SIMGA parameter. The emissivity, which is a
material and surface finish dependent, is entered through the boundary conditions. It may also be temperature dependent.
As an example of the usage of MAT4  for defining the isotropic thermal material properties, see Concentric Spheres
with Radiation  (Ch. 27) in the MSC Nastran Demonstration Problems Manual . G4G3
G1G2z
yxMCID
Coordinate
System
xmaterialymaterial
qiT
xi&amp;mdash;&amp;mdash;- =
qiijT
xj&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;561 Chapter 10: Materials
User Defined Material Subroutines
Main Index
Thermal Strain
In the additive formulation, the increment of the total strain
 = tetmecr
In SOL 400, the thermal strain is based upon the secant approach, such that:
and
if  is a constant, then
The coefficient of thermal expansion may be orthotropic.
In the multiplicative decomposition scheme
F = FFeFp,
the coefficient of thermal expansion is isotropic.
User Defined Material Subroutines
You may customize your material model using the user subroutines given in the table below. These user subroutines are
actived by using the MATUDS  bulk data entry.
Bulk Data
EntryUser
Subroutine User Subroutine Purpose
MATHE uelastomer Define the strain energy function and derivative
MATUSR hypela2 Define the tangent stress-strain law and value of stress
MAT1 crplaw Define the equivalent creep strain rate
MATF ufail Define the failure index
MATF uprogfail Define the stiffness reduction factor for progressive failure
MATORT orient Define the preferred material direction cosine matrix
MATUSR umat Define the tangent stress-strain law and value of stress
MCOHE ucohes Define the material model for delamination of interface elementsth
TrefTTTTref–
th
TiTzT2T2Tref–T1T1Tref– – =
th
T1T2T2T1– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
User Defined Material Subroutines562
Main Index
It is often useful to define state variables that may be used in the user subroutines. The state variables are allocated for each
layer, each integration point, and for all elements. This is done using the UDSESV  bulk data entry.
For most users, one can define the user defined subroutine when executing the NASTRAN  command.
Feature Description
T wo MSC Nastran command line keywords, uds and udssave , are added in this release. These command line keywords
are used to specify user source file and SCA component build location. In user source file, there may be one or more
predefined user subroutines. These predefined user subroutines will be used to define interfaces in user SCA service. The
build location is where the SCA component will be built.
The command line keyword, uds, is used to specify user source file with predefined user subroutines. It is specified at MSC
Nastran job submittal time.
nast20212 myjob.dat uds=mysource.F
The specified source file will be compiled and implemented. Since only one user source file is allowed, the user must put
all the predefined user subroutines and other related subroutines in one source file. The user source file can be in
FORTRAN or C++.
An alternative method is to incorporate the user subroutine into the model input file. The user subroutine section starts
with a BEGIN UDS  and terminates with an ENDDATA  or another BEGIN  statement. The user can put source code in this
section and set uds command line keyword to model . MSC Nastran extracts the source code in this section by the
following command:
nast20212 myjob.dat uds=model
The user service name in CONNECT SERVICE  statement in input file is needed. Only one CONNECT SERVICE  statement
is allowed in this release.
An example of this method is shown as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Connect service SCA.MDSolver.Obj.Uds.Materials, name id material.&lt;/li&gt;
&lt;li&gt;$The material service has implemented UMAT interface.&lt;/li&gt;
&lt;li&gt;connect service material ‘SCA.MDSolver.Obj.Uds.Materials’&lt;/li&gt;
&lt;li&gt;SOL 400&lt;/li&gt;
&lt;li&gt;CEND&lt;/li&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;BEGIN BULK&lt;/li&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;PSOLID,1,1&amp;hellip;,1,&lt;/li&gt;
&lt;li&gt;CHEXA  1  1  17  20  53  31  19  22&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  54  52
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;$Specify UMAT type UDS from material service for the element&lt;/li&gt;
&lt;li&gt;MATUSR,1,&amp;hellip;,3&lt;/li&gt;
&lt;li&gt;MATUDS  1       MATUSR material UMAT&lt;/li&gt;
&lt;li&gt;,REAL,5.e10,2.5e10,&lt;/li&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;GRID   17       -1.  .1  -.1&lt;/li&gt;
&lt;li&gt;GRID   19       -1.  .1  .1&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P3</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_003/</guid>
      <description>
        
        
        &lt;p&gt;23 Chapter 1: Introduction
Frequently Asked Questions
Main Index
almost always large enough to invalidate contact in linear solutions. The best use of contact in SOL 101 is to use it to
connect dissimilar meshes or full assembly modeling where no separation occurs.
Q16: What is the difference between linear buckling analysis and nonlinear buckling analysis?
A linear buckling analysis is based on the un-deformed configuration of the structure. A nonlinear buckling analysis is based
on a deformed shape of the structure. The deformation and stresses make the structure stiffer (if in tension) and cause the
natural frequencies to increase. This is why it is often necessary to do a nonlinear buckling analysis to get accurate mode
shapes and frequencies.
Q17: What is a &amp;ldquo;stress stiffened model &amp;quot; analysis?
Before extracting the eigen-values from the structural system, the model may be pre-loaded prior to the modal extraction.&lt;br&gt;
Initial stress effects are then included in the stiffness which tend to raise the eigenvalues. This effect tends to affect the
eigenvalues more than the eigenvectors (mode shapes).
Q18: Will RBE&amp;rsquo;s rotate with the rest of the model?
If a large displacement, nonlinear analysis is performed, then yes, the RBEs rotates with the model. In a linear analysis, the
displacement and rotation of the nodes is assumed to be infinitesimally small.
Q19: What are Marc elements; also called Advanced nonlinear elements or large strain elements? When would I use them?
How do I activate them? Is there any penalty for always using Marc elements instead of MSC Nastran elements?
Most MSC Nastran elements were originally formulated for linear analysis.  At some point, some of those original elements
were modified for use in nonlinear analysis (SOLs 106 and 129), but certainly not all of them. Rather than develop new
elements and capabilities “from scratch” for SOL 400 MSC Nastran decided to copy the well-proven, robust, mature large
deformation/large strain analysis procedures and element formulations from Marc. Rather than develop new nonlinear
element designations, which would&amp;rsquo;ve made it a lot of work to convert a linear SOL 101 model to a SOL 400 nonlinear
model, MSC Nastran decided to use the same element designations and simply allow you to control the formulation used
through secondary property entries such as  PBEMN1 , PSHLN1, PSHNL2 , and PSLDN1.  While this method gives you
direct control over the element formulation, it should be noted that SOL 400 automatically selects the proper formulation
for the problem. This means that if the problem is a large deformation, large strain problem, SOL 400 automatically uses
the large strain element formulation. Thus, unless you want to directly control the formulation (such as use reduced
integration or some other special formulation),  you are best off allowing MSC Nastran to select the formulation used,
which also means no additional input is required.
Q20: Do shell and beam offsets rotate with the model?
Yes, if MDLPRM,OFFDEF,LROFF  is set in the deck when parameter LGDISP&amp;gt;=0.
Q21: Will CBAR  elements rotate with the model?
Yes, if CBAR  is converted to a CBEAM .
Q22: Will CGAP  elements rotate with the model?
No. Contact bodies should always be used for contact involving large deformations.
Q23: Will CBEAM  pin flags rotate with the model?
No.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Frequently Asked Questions24
Main Index
Q24: What is the difference between the Stress T ensor and the Nonlinear Stress T ensor quantities I see listed in my Patran
results?
There is no difference. The label &amp;ldquo;stress tensor&amp;rdquo; was used for linear analysis, and the label &amp;ldquo;nonlinear stress tensor&amp;rdquo; for
nonlinear analysis. But in fact, they should be same
Q25: Which stress quantity does MSC Nastran use when it looks up the stress/strain curve I provided?
For small strain elements (traditional MSC Nastran elements), engineering stress/strain is used, but for large strain
nonlinear element (new Marc elements), Cauchy stress is used.
Q26: Will the force I apply rotate with the model?
These are referred to as &amp;ldquo;follower forces&amp;rdquo; and they will be included if: 1) a nonlinear analysis procedure is used; 2) a
FORCE1  or FORCE2  entry is used for loading; and 3) and appropriate  PARAM,LGDISP  value is used.  Only “Follower
Forces” applied by FORCE1, FORCE2, MOMENT1, MOMENT2  will rotate with model. Forces applied by RFORCE&lt;br&gt;
will rotate according to the specified angular velocity/acceleration rules.
Q27: What if I don&amp;rsquo;t want the force to rotate with the model?&lt;br&gt;
Short answer: use the static force  FORCE bulk data entry.
Q28: Will the pressure I apply to a surface rotate with the model?
Only “Follower Pressure” applied by  PLOAD, PLOAD2,  and PLOAD4  will rotate with model.  See “follower force” notes
under the PLOAD  and PLOAD4  entries in the QRG for more details.
Q29: Is it possible to create the input such that the pressure I apply to a surface will not rotate with the model?
Yes. With PLOAD4,  if the load direction is given, the pressure applied will be fixed in the given direction and not rotate
with model. See remark 2 of  PLOAD4   in the QRG :
Remark 2.  The continuation entry is optional. If fields 2, 3, 4, and 5 of the continuation entry are blank, the load is
assumed to be a pressure acting normal to the face. If these fields are not blank, the load acts in the direction defined in
these fields. Note that if CID is a curvilinear coordinate system, the direction of loading may vary over the surface of the
element. The load intensity is the load per unit of surface area, not the load per unit of area normal to the direction of
loading.
Q30: If I am familiar with running linear MSC Nastran analyses but have never run a nonlinear SOL 400 analysis, how can
I learn what I need to do differently?
Many important features and concepts in this book are illustrated with examples. As you read this guide, it is highly
recommended that you run the example problems and make variations of these problems. When learning a new MSC
Nastran feature, engineers all too often generate a large problem using several hundred or several thousand degrees of
freedom as a test case. This practice has become the norm in recent years with the advent of graphics preprocessors and
automatic meshing. Rarely is such a large model necessary to learn a new feature; in most cases, it just adds unnecessary
complexity. For this reason most of the examples in this book are small — generally less than 100 degrees of freedom. T o
facilitate the use of these example problems, example problems referenced in this guide are delivered with MSC Nastran
system under the MSC_DOC_DIR/doc/linstat with the extensions of .dat . It is recommended you copy any example
problem to your local directory, so you can see the files created, and you don&amp;rsquo;t inadvertently create files in the delivery
directory.&lt;/p&gt;
&lt;p&gt;25 Chapter 1: Introduction
Frequently Asked Questions
Main Index
Q31: How can I see a plot of load vs deflection for the rigid body that loaded my model?
Only available for “load controlled” rigid bodies, you can plot the results of the control grid of the rigid body.
Q32: How can I monitor the nonlinear solution to see if it is progressing toward convergence?
See Chapter 6: Setting Up, Monitoring, and Debugging the Analysis  for more details, but the short answer is: monitor the
jobname.sts  file with a text editor that automatically updates.  As each load increment converges a new line with relevant
information will appear in the .sts file.
Q33: Is it possible to see the results of any of the intermediate loading steps before the analysis is complete?
Yes. It is possible to have MSC Nastran write out the results of converged increments to intermediate OP2 files.   See the
INTERM  option of the  OUTCTRL  parameter under the NLOPRM  entry in the QRG .
Q34: How can I find out what the normal and frictional forces or stresses are between the contact bodies?
Use the BOUTPUT  case control output request and these values will be in the MASTER /DBALL  or new OP2 files along with
the other output requested.
Q35: Is an RBE “spider” the best way to fix a surface of my structure?
It depends on the constraints on the surface. If all the grids on the surface have the same behavior in some direction, an
RBE is easy to use. It is also easy to &amp;ldquo;glue&amp;rdquo; the area to a rigid surface and use the rigid surface controls. You may also use
SPC/SPC1 .
Q36: What are alternatives to an RBE spider for displacement control of part of my structure?
SPC/SPC1/SPCD/SPCR  may be combined together for any complicated displacement control. As mentioned in the
previous question, “glueing” the area to a rigid surface and using the rigid surface controls is also easy.
Q37: Will I get the same answer if I apply my loads and constraints using a glued-on rigid surface as I would using an RBE
spider or displacement constraint?
Yes, if both loading methods are done correctly you will get the same results.
Q38: How do a simulate a complex sequence of loading, such as the process of an engine head going through the sequence
of bolt tightening, then heating up?
Break the loading up into discrete loadcases. For more information on this process, see Chapter 3: Nonlinearity and Analysis Types&lt;br&gt;
in this manual for more information on this topic.
Q39: How do I know if Patran supports a certain type of modeling process or feature?
The MSC Nastran Preference Guide  for Patran describes all of the entities (including elements, materials, properties, loads
and constraints) that Patran support for use in MSC Nastran SOL 400.
Q40: What is the simplest way to include contact in my model?
If you simply create contact bodies (Patran has a tool under Tools - Modeling that automatically creates contact bodies based
on groups, materials, properties, etc.) and runs a SOL 400 nonlinear analysis, the contact interaction is included by default,
but does not include friction between the components.  T o include friction, you need to specify the friction model and
friction coefficients (you can specify a global model value, a value for each contact body, or for each contact pair — the
most localized value, in the most general to most specific order just provided, will be used)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Frequently Asked Questions26
Main Index
Q41: What Thermal Solutions are supported in SOL 400?
SOL 400 supports steady state and transient thermal analysis procedures ( ANALYSIS = HSTAT  and HTRAN ), updated to
include thermal contact and coupled thermal-structural interaction, plus the Sinda RC network approach. Chapter 3:
Nonlinearity and Analysis Types  has a description of the SOL 400 thermal analysis capabilities, plus a description of the
coupled multi-physics capabilities that are supported.
Q42: How do the RCNS &amp;amp; RCNT “RC Network” analysis options in SOL 400 work?
These “RC” analysis options run a subset of MSC&amp;rsquo;s Sinda Solver. Standalone Sinda is a modern equivalent of traditional
Resistor-Capacitor type solver. Also called Finite Difference Lumped Parameter Network Solver. Simulation can include
various aspects of conduction, convection, radiation and with optional Fortran access predefined or custom loading
function can be specified. Using Patran with Sinda preference, or in this case from MSC Nastran, an RC network is
generated from traditional shaped elements. MSC Nastran implementation does not include the Fortran access nor
standard/custom loading function. Loading must be manually defined but the same effect can be achieved. Additionally,
MSC Nastran implementation does include automated radiation refinement techniques available in Sinda.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 2: MSC Nastran Files
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
2 MSC Nastran Files
Introduction to Organization of MSC Nastran Files
Truss Example
Overview of the MSC Nastran Output Files
SOL 400 Output
Parameter Discussion
The Executive Control Section Overview
The Case Control Section
The Bulk Data Section&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction to Organization of MSC Nastran Files28
Main Index
Introduction to Organization of MSC Nastran Files
This chapter describes the MSC Nastran input file format, nomenclature and organization. There is very little in this
chapter that is unique to SOL 400, but it is included as it provides the information required to run SOL 400. It describes
the executive, case control and bulk data sections and how they must be organized for MSC Nastran to successfully read
and process the input file. Using a graphical pre- and postprocessor like Patran will reduce your need to understand this
information since the GUI will typically write the input file for you in the correct format. If using a GUI, the only time
you may need to understand this information is if you are adding content not supported by the GUI, or if you suspect the
GUI has created input containing errors.
This chapter describes the basic approach to analyzing a structure using MSC Nastran. The example used throughout this
chapter is a simple two-dimensional truss. Although the truss structure is relatively simple compared to the typical structures
analyzed using MSC Nastran, it is a structure that most engineers recognize.
The best way to learn a new feature is by applying it to an example. You are encouraged to copy the files presented in this
guide into your working directories and experiment with them. Do not spend time entering the input files from the listings
shown. For most of the examples in this guide, only a partial listing is provided. The partial listing serves two purposes:
first, it keeps the examples down to a reasonable size; second, it is easier to highlight the important points for that particular
example. The complete input files can be found on the delivery media, in the Install_dir/mscxxxx/linstat  directory.
Overview of the MSC Nastran Input File
T o perform an analysis using MSC Nastran, you must generate an input file describing the structure’s geometry, material
properties, boundary conditions, and loads. In addition to defining the physical structure, the input file also specifies the
type of analysis to be performed and other pertinent information. The input file is an ASCII text file which can be created
using any text editor or one of the many preprocessors that interface with MSC Nastran.
After the generation of the input file is complete, it is submitted for execution as a batch process. Once the input file has
been submitted, you have no additional interaction with MSC Nastran until the job is complete.
The MSC Nastran Input File, often referred to as the Bulk Data File ( .bdf ), (or.dat  in the MSC Nastran manuals), is
made up of three distinct sections:
1.Executive Control – describes the problem or solution type and optional file management.
2.Case Control – defines the load history and output requests.
3.Bulk Data – defines a detailed model, load and constraint description.
Input data is organized in (optional) blocks. Key words identify the data for each optional block. This form of input enables
you to specify only the data for the optional blocks that you need to define your problem. The various blocks of input are
“optional” in the sense that many have built-in default values which can be used in the absence of any explicit input from
you.
A typical input file setup for the MSC Nastran program is shown below.
Executive Control Statements
T erminated by an CEND parameter
Case Control Commands&lt;/p&gt;
&lt;p&gt;29 Chapter 2: MSC Nastran Files
Introduction to Organization of MSC Nastran Files
Main Index
Terminated by the BEGIN BULK  option
Bulk Data Entries
Model data starting with the BEGIN BULK  option and terminated by the ENDDATA  option
Input Conventions
SOL 400 performs all data conversion internally so that the system does not abort because of data errors made by you. The
program reads all input data options alphanumerically and converts them to integer, floating point, or keywords, as
necessary. SOL 400 issues error messages and displays the incorrect option image if it cannot interpret the option data field
according to the specifications given in the manual. When such errors occur, the program attempts to scan the remainder
of the data file and ends the run with a FATAL ERROR  message.
Two input format conventions can be used: fixed and free format. You can mix fixed and free format options within a file.
The syntax rules for fixed fields are as follows:
Give floating point numbers with or without an exponent. If you give an exponent, it must be preceded by the
character E or D and must be right -justified. If data is double precision, a D must be used.
The syntax rules for free fields are as follows. See the Format of Bulk Data Entries  in the QRG  for more details.Bulk Data
Case Control
Executive ControlElement and
Material
Properties,
Fixed Displ,
Load Incrementation,
Applied Loads,
Applied Displacements
Etc.
Title, Job Control,
Solution Sequence,
Etc.MSC Nastran Implicit Nonlinear
Complete Input Deck
Control InformationModel Data - grids,
elements, etc.
Etc.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction to Organization of MSC Nastran Files30
Main Index
Check that each option contains the same number of data items that it would contain under standard fixed format
control. This syntax rule allows you to mix fixed field and free field options in the data file because the number of
options you need to input any data list are the same in both cases.
Separate data items on a option with a comma. The comma can be surrounded by any number of blanks. Within
the data item itself, no embedded blanks can appear.
Give floating point numbers with or without an exponent. If you use an exponent, it must be preceded by the
character E or D and must immediately follow the mantissa (no embedded blanks).
Give keywords exactly as they are written in the manual.
All data can be entered as uppercase or lowercase text.
Small field format is limited to 8 columns per field. Large field is 16 columns.
For most bulk data entries, MSC Nastran does not make the distinction between zero and blank. Thus, if a zero is entered
and the default is some other value, the default is normally used. If you wish to use zero, enter a small number such as 1.0E-
12 instead.
Section Descriptions
The NASTRAN Statement
The NASTRAN  statement is an optional statement used to specify system parameters that control internal solution
processing or provide specific diagnostics. The NASTRAN  statement, if used, must be placed before the Executive Control
Statement. The NASTRAN  statement is useful when you need to specify system-related parameters, such as setting the
BUFFSIZE  for the I/O. For a description of the NASTRAN  statement options, refer to the Executing MSC Nastran  in the
MSC Nastran Quick Reference Guide.
File Management Section
The File Management Section (FMS), if needed, is located before the Executive Control Section. The purpose of the FMS
is to assign files, manipulate the database, and perform restarts. It is commonly used when solving larger problems.
Chapter 14: Restarts  and Chapter 15: Database Management  in the MSC Nastran Linear Statics Analysis User’s Guide
discuss the use of the File Management Section.
Executive  Control
This group of entries provides overall job control for the problem and sets up initial switches to control the flow of the
program through the desired analysis.
The Executive Control Section contains statements that
Select the solution sequence to be run (e.g., statics, normal modes).
Request various diagnostic outputs.
Contain user-written DMAP. DMAP is an advanced topic and beyond the scope of this user’s guide.&lt;/p&gt;
&lt;p&gt;31 Chapter 2: MSC Nastran Files
Introduction to Organization of MSC Nastran Files
Main Index
This set of input must be terminated with an CEND  parameter. See The Executive Control Section Overview  in this chapter for
more details. See Chapter 3: Executive Control Statements, Executive Control Section  in the QRG for  a complete list and
required syntax.
Case Control
This group of options provides the loads and constraints and load incrementation method and controls the program after
the initial elastic analysis. Case Control options also include blocks which allow changes in the initial model specifications.
Case Control options can also specify print-out and postprocessing options. In linear solution sequences, including linear
analyses in SOL 400, each set of load sets must be begin with a SUBCASE  command and be terminated by another
SUBCASE  or a BEGIN BULK  command. If there is only one load case, the SUBCASE  entry is not required. In SOL 400,
the STEP  case control commands are required for the nonlinear and perturbation analyses under each  SUBCASE .  In
addition, the SUBSTEP  case control command is used in SOL 400 for the coupling analyses under each STEP . See The
Case Control Section  in this manual for more discussion. See Chapter 4: Case Control Commands, The Case Control Section&lt;br&gt;
in the QRG  for a complete list of case control options and syntax.
Bulk Data Entries
This set of data options enters the initial loading, geometry, and material data of the model and provides nodal point data,
such as boundary conditions. Bulk data options are also used to govern the convergence control and superelement
capability.This group of options must be terminated with the ENDDATA  option. See The Bulk Data Section  in this manual
for bulk data syntax requirements. See Chapter 8: Bulk Data Entries, The Bulk Data Section  in the MSC Nastran Quick
Reference Guide  for additional details.
SOL 400 Example
The following text illustrates a simple example of a SOL 400 input file. It includes the required Executive Control, Case
Control, and Bulk Data Sections that are required for any MSC Nastran analysis.
See Install.dir/Doc/pdf_nastran/user/implicit_nonlinear_examples/example_input_files
Listing 2-1  Sample Implicit Nonlinear Solution 400 Input
$ NASTRAN input file created by Patran 64-Bit input file
NASTRAN SYSTEM(316)=19
SOL 400
CENDExecutive Control Section&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction to Organization of MSC Nastran Files32
Main Index
$ Direct Text Input for Global Case Control Data
TITLE = MSC.Nastran job
SUBCASE 1
STEP 1
TITLE=This is a default subcase.
ANALYSIS = NLSTATIC
NLSTEP = 1
BCONTACT = ALLBODY
SPC = 2
LOAD = 1
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
NLSTRESS(SORT1)=ALL
BOUTPUT(SORT1,REAL)=ALL
$ Direct Text Input for this Subcase
BEGIN BULK
$ Direct Text Input for Bulk Data
PARAM    POST    1
PARAM   PRTMAXIM YES
PARAM   MRNOECHO 123
BCPARA   0       NLGLUE  1    &lt;br&gt;
PARAM    LGDISP  1
NLSTEP   1      1.
GENERAL 10      1       10
ADAPT  .01     1.-5    .5       4      1.2      0
6      2.-4
MECH    PV                              PFNT
.2
$ Elements and Element Properties for region : solids
PSOLID   1       1       0
PSLDN1   1       1
C8      SOLID   L
$ Pset: &amp;ldquo;solids&amp;rdquo; will be imported as: &amp;ldquo;psolid.1&amp;rdquo;
CHEXA    1       1       1       2       8       7       37      38
44      43
CHEXA    2       1       2       3       9       8       38      39
45      44
Running Existing Nonlinear Models in SOL 400
Some users may have existing models that have been developed and analyzed using MSC Nastran Nonlinear Solution
Sequences 106 or 129 (or others). These models may be run through SOL 400 by changing the SOLUTION  procedure
input to SOL 400 with the proper Analysis , such as NLSTATIC  or NLTRAN , case control command in each
SUBCASE /STEP  as described in the following chapters. It is advantageous to read the model into Patran and change the
Solution Type  on the Analysis  menu. In this case, Patran then modifies the input it writes to match that required by the
specific SOL 400 solution sequence being written out. This method is especially useful to activate advanced nonlinear
capabilities.Case Control Section
Bulk Data Section&lt;/p&gt;
&lt;p&gt;33 Chapter 2: MSC Nastran Files
Truss Example
Main Index
Generating and Editing the Bulk Data File in Patran
Patran offers a MSC Nastran interface that provides a communication link between Patran and MSC Nastran. The interface
is a fully integrated part of the Patran system.
Generating the BDF
Selecting MSC Nastran as the analysis code preference in Patran, activates the customization process. These customizations
ensure that sufficient and appropriate data is generated for the MSC Nastran interface. Specifically, the Patran forms in
these main areas are modified:
Materials
Element Properties
Finite Elements/MPCs and Meshing
Loads and Boundary Conditions
Analysis Forms
Using Patran, you can run a MSC Nastran analysis or you may generate the MSC Nastran Input File to run externally. For
information on generating the MSC Nastran Input file from within Patran, see Chapter 3: Running an Analysis, Analysis
Form  in the Patran Interface to MSC Nastran Preference Guide.
Editing the BDF
Once the bulk data file has been generated, you can edit the file directly from Patran.
1.Click the Analysis Application  button to bring up Analysis Application form.
2.On the Analysis  form, set the Action&amp;gt;Object&amp;gt;Method  combination to Analyze&amp;gt;Existing Deck&amp;gt;Full Run  and click
Edit Input File&amp;hellip;&lt;br&gt;
Patran finds the bulk data file with the current job name and displays the file for editing in a text editing window.
Input File Processing (IPF) Checking
Checking of MSC Nastran bulk data entries are done during IFP . When one of these entries has erroneous data entered,
the IFP will flag the entry and issue a FATAL ERROR . One needs to examine the output ( .fo6 ) to observe the field and
continuation line where the erroneous data occurs.
Truss Example
The purpose of this section is provide an overview of the input; it is not meant to describe all of the options available for
static analysis. The next section provides an overview of the output files. The goal of these two sections is to show how a
typical MSC Nastran input file is used to represent a typical model.
To illustrate the form of input and output files, you can use the simple SOL 101 truss structure shown in Figure 2-1.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Truss Example34
Main Index
Figure 2-1  Truss Example
The truss structure consists of five members, each with a cross-sectional area (A) of 4 in2  and a polar moment of inertia (J)
of 1.27 in4. The material is steel with a Young’s modulus E of 30 x106 psi and a Poisson’s ratio of 0.3. All the connections
between the members are pin joints (i.e., they can transmit forces but not moments). The goal of the analysis is to determine
the displacement of the grid points and the stresses and forces within the members.
The MSC Nastran input file listing for the truss structure is given in Listing 2-2. (See
MSC_DOC_DIR/doc/linstat/truss1.dat.) Although the input file shown represents a fairly simple structure, it is typical of
all MSC Nastran input files. The purpose of the example is not to show how to perform an analysis or discuss the specifics
of the model, such as the grid points or elements. Rather, the purpose is to present the form of the input file itself.
Discussion of the actual commands and entries in the input file begins in Chapter 3: Grid Points, Scalar Points, and
Coordinate Systems  in the MSC Nastran Linear Statics Analysis User’s Guide .4Y
X10 ft
F =1000 lb
50 ft3
42
11
23
5
Elements
Grid points
Pin jointsA 4.0 in2=
E 30.0106 lbin2 =
J 1.27 in4=
 0.3=&lt;/p&gt;
&lt;p&gt;35 Chapter 2: MSC Nastran Files
Truss Example
Main Index
Listing 2-2  Truss Example Input File
As mentioned in the previous sections, this input file consists of five distinct sections: the NASTRAN  statement, the File
Management Section (FMS), the Executive Control Section, the Case Control Section, and the Bulk Data Section. Input $    FILENAME - TRUSS1.DAT
$
ID LINEAR,TRUSS1
SOL 101
TIME 2
CEND
TITLE = LINEAR STATICS USER’S SAMPLE INPUT FILE
SUBTITLE = TRUSS STRUCTURE
LABEL = POINT LOAD AT GRID POINT 4
LOAD = 10
SPC = 11
DISPLACEMENT = ALL
ELFORCE = ALL
ELSTRESS = ALL
BEGIN BULK
$
$ THE GRID POINTS LOCATIONS
$ DESCRIBE THE GEOMETRY
$
GRID    1               0.      0.      0.              3456
GRID    2               0.      120.    0.              3456
GRID    3               600.    120.    0.              3456
GRID    4               600.    0.      0.              3456
$
$ MEMBERS ARE MODELED USING
$ ROD ELEMENTS
$
CROD    1       21      2       3
CROD    2       21      2       4
CROD    3       21      1       3
CROD    4       21      1       4
CROD    5       21      3       4
$
$ PROPERTIES  OF ROD ELEMENTS
$
PROD    21      22      4.      1.27
$
$ MATERIAL PROPERTIES
$
MAT1    22      30.E6           .3
$
$ POINT LOAD
$
FORCE   10      4               1000.   0.      -1.     0.
$
SPC1    11      123456  1       2
$
ENDDATA Executive
Control
Section
Case
Control
Section
Bulk Data
Section&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Truss Example36
Main Index
in the File Management Section and the Executive Control Section is referred to as a statement; input in the Case Control
Section is referred to as a command; and input in the Bulk Data Section is referred to as an entry.
Following are descriptions of these sections.
NASTRAN Statement
The truss example is so simple that a Nastran statement is not required.
File Management Section
Since the truss model shown in Listing 2-2 is small and the desired analysis is not a restart, the use of the FMS is not needed.
Executive Control Section
For the truss example, the Executive Control Section specifies static solution SOL 101. The end of the Executive Section
is denoted by the CEND  statement. The ID statement is an optional statement to help document your input file. If used,
it can be located anywhere in the Executive Control Section.
Case Control Section Overview
Immediately following the  CEND  statement is the Case Control Section.
For the truss example, a title, subtitle, and label are defined. These labels are printed on each page of the .f06 output file.
The LOAD = 10  command instructs MSC Nastran to apply the loading defined by the FORCE  entry with an ID of 10
in the Bulk Data Section. The SPC = 11  command instructs MSC Nastran to apply the constraints defined by the SPC1&lt;br&gt;
entry with an ID of 11 in the Bulk Data Section. Printed displacements for all the grid points and the forces and stresses
within each member are requested with the DISPLACEMENT  (Case) = ALL , FORCE  (Case) = AL L, and STRESS  (Case) =
ALL commands. By default, these output requests are printed to the .f06  output file, which is discussed in Overview of
the MSC Nastran Output Files  in this chapter. The end of the Case Control Section is denoted by the BEGIN BULK&lt;br&gt;
delimiter.
Bulk Data Section Overview
The Bulk Data Section is used to define the analysis via the grid points, elements, constraints, and loads. The start of the
Bulk Data Section is denoted by the  BEGIN BULK  delimiter. The last entry in Bulk Data Section must be an ENDDATA&lt;br&gt;
delimiter. The ENDDATA  delimiter also signifies the end of the MSC Nastran input file. If any of these required delimiters
are not present, a fatal error message results when the job is submitted.
The truss model consists of four grid points that represent the joints of the structure. The locations of the grid points for
this example are given in what is known as the basic coordinate system, which is the default coordinate system in MSC
Nastran. In this example, the grid point 1 is located at the origin. You should note that the dimensions given for the truss
structure in Listing 2-2 are given in feet, but the dimensions used for the grid point locations in the input file are entered in
inches. For consistency, the units for the cross-sectional area, torsional stiffness, and Young’s modulus are also entered in
inches. It is your responsibility to ensure that the units for all of the input are consistent.
Figure 2-2 summarizes the linking between the case control commands and the bulk data entries.&lt;/p&gt;
&lt;p&gt;37 Chapter 2: MSC Nastran Files
Truss Example
Main Index
Figure 2-2  MSC Nastran Input File Structure
Returning to our truss example, the members of the truss are modeled using rod elements. The MSC Nastran notation for
a rod is the CROD  bulk data entry. The “ C” preceding ROD  denotes that the entry is for an “element connection”; i.e., it
connects grid points. This pattern is true for all elements, for example, the bulk data entry notation for a element
connection of a QUAD4  plate element is CQUAD4 . This notation also makes it convenient when trying to find a
description of a particular element in the MSC Nastran Quick Reference Guide  since they are in alphabetical order under the C’s.Grid Entries
Elements “C”
Type Entries
Properties “P”
Type Entries
Material “M”
Type Entries
SPC Entries
LOAD
EntriesSPC
CommandElements use the grid
points for their
geometry.
Element entries
specify property
entries.
Property entries
specify material
entries.
Case Control SectionBulk Data Section
LOAD
Command&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of the MSC Nastran Output Files38
Main Index
All elements in the input file must have a unique ID with respect to all the other elements. The IDs of the CROD  elements
in the truss example are 1, 2, 3, 4, and 5.
Each of the CROD  entries refers to the PROD  entry 21 (Field 3), which is the property definition of the CROD  elements.
The PROD  entry specifies a material ID of 22 (field 3), the cross-sectional area of 4.0 in2, and the torsional stiffness
coefficient of 1.27 in4.  All property entries begin with “P”.
The material ID of 22 refers to a MAT1 entry. The MAT1  entry defines an isotropic material. The MAT1 entry is defined
formally in Material Properties and Composites  (Ch. 5) in the MSC Nastran Linear Statics Analysis User’s Guide ; but for now, it
is sufficient to say that an isotropic material requires only two constants to fully describe the material. In this case the
material property is described as having a Young’s modulus of 30 x 106 psi and a Poisson’s ratio of 0.3. All material entries
start with “ M”.
The FORCE  and SPC entries, as mentioned previously, are included in the analysis because they were called out in the
Case Control Section by their ID number. The FORCE  entry in this example specifies a point load of 1000 pounds acting
at grid point 4 in the -Y direction. The SPC1  entry specifies that all six degrees of freedom are constrained at grid points 1
and2.
If you have not performed an MSC Nastran run before, you are encouraged to copy the truss model truss1.dat  into
your working directory and submit it as an MSC Nastran job. See MSC_DOC_DIR/doc/linstat/truss1.dat .
Overview of the MSC Nastran Output Files
The purpose of this section is to introduce the output file generated by a typical run. If you are new to MSC Nastran, this
section may seem somewhat overwhelming. Like the previous section, however, this section is only meant to provide an
overview. The details are covered in Chapter 7: Results Output from the Analysis .
After an input file is submitted for execution, several output files may be generated. Table 2-1 provides summary descriptions
of all the potential files generated by MSC Nastran (assuming the input file is named run1.dat , see I nstall_dir/mscxxxx
/doc/linstat/run1.dat ). The output files that are generated depend on your input file requests and the command line options
that you specify when the job is submitted. Some of the files shown will not be generated, and some will be generated and
deleted automatically once the job is complete.
r
Table 2-1  Files Resulting from Submitting the Job Named run1.dat
run1.dat The input file describing the model, the type of solution, the output requests, etc.
Generated with a text editor or preprocessor.
run1.f06 The main output file containing the printed output such as displacements, element
forces, stresses, etc.
run1.f04 A history of the assigned files, disk space usage, and modules used during the analysis.
Useful for debugging.
run1.log A summary of the command line options used and the execution links.
run1.DBALL A database containing the input file, assembled matrices, and solutions. Used also for
restarting the run for additional analysis or output.&lt;/p&gt;
&lt;p&gt;39 Chapter 2: MSC Nastran Files
Overview of the MSC Nastran Output Files
Main Index
Print Files
The print file jobname.f06  file contains a complete text output of solution information, including an input summary,
solution diagnostics and results if requested.
Because of the potential size of the print file, certain information is optional. Instead of printing out a complete echo of the
input deck, a summary can be printed. You can select which stresses and strains are included in the output file.
A complete listing of the truss1.f06  output file (minus the page numbers and date) is shown in Figure 2-3. This is one
of the few occasions that an output file is shown in its entirety; only selected portions of the output will be shown in the
remaining examples in this user’s guide. Historically, the .f06  suffix is used because the program is writing this file to
FORTRAN unit 6.
Many of the .f06  output formats are shown in the Appendix A: Sample Output Listings  in the MSC Nastran Linear Statics
Analysis User’s Guide with notes, so it is a good referenced for understanding your output requests.
Analysis Results Files
The analysis results file contains some all of the numerical results computed in the analysis. This file in MSC Nastran is
designated as jobname.op2  or jobname.master/dball . Because SOL 400 only includes the contact and full
nonlinear stress/strain results in the MASTER /DBALL  or OP2 new ( PARAM,POST,1 ), MSC recommends that you use one
of the later two formats for nonlinear analysis. The binary file run1.h5 is the results database in HDF5 format that is
requested using the MDLPRM, HDF5,1 bulk data entry.
If no restarts are planned for the job run1, you can either:
delete run1.DBALL  and can run1.MASTER  to save disk space.
you may specify “scr = yes” on the command line when submitting the input file for execution. The .DBALL&lt;br&gt;
and.MASTER  files are placed on the scratch directory and are automatically deleted upon completion of the run.
The command line options are discussed in Database Management  (Ch. 15) in the MSC Nastran Linear Statics
Analysis User’s Guide .run1.MASTER The file containing the master directory of the files used by the run and the physical
location of the files on the system. This file is also needed for a restart run.
run1.IFPDAT The file containing the bulk data entries for IFP restart processing
run1.plt Contains the plot information requested by the NASTRAN  plotter commands specified
in input file.
run1.pch Contains the punch output as requested in the input file.
run1.op2 Output database used for postprocessing of the results.
run1.h5 Results database in HDF5 format.
run1.sts Contains nonlinear statistics, if contact is utilized.
miscellaneous scratch files Several scratch files are generated during the analysis which MSC Nastran automatically
deletes upon completion of the run.Table 2-1  Files Resulting from Submitting the Job Named run1.dat&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of the MSC Nastran Output Files40
Main Index
If the file truss1.dat  is submitted a second time as a cold start (i.e., no restart commands are used), you might want to
delete the files .DBALL  and.MASTER  before the run is submitted the second time. Also, if a .op2  file already exists for the
run, it too should be deleted prior to resubmitting the run. Without deleting, these files are reused and can increase in size
or have multiple copies created.
Status File
SOL 400 produces a status file jobname.sts  that is very useful for assessing if the analysis has completed successfully,
and, if not, how much of it was completed before the analysis was terminated. This is extremely useful because the most
common problem with obtaining nonlinear solutions is avoiding, detecting, and managing convergence problems.
Message Files
The message files jobname.msg  (if it is run from Patran) contain diagnostic error and warning messages output by SOL
400. The message file is the best way to immediately check an analysis for successful execution if the job is run from Patran.
Otherwise, check JID.f04  and JID.f06 .
SOL 400 has two levels  of messages:
1.Exit number messages;
2.User Fatal Error Message (UFM)
The two MSC Nastran exit messages are as follows:
0 – normal exit
-20 – fatal error
MSC Nastran provides many UFM (user fatal error message).
1.Informative messages.
2.Nonfatal warning message of something that could affect the results.
A complete description of the files used to debug a solution and diagnose problems such as convergence issues is provided
in Chapter 6: Setting Up, Monitoring, and Debugging the Analysis .
Output2 Format
The Patran&amp;rsquo;s MSC Nastran interface supports several different OUTPUT2  file formats. The interface, running on any
platform can read a binary format OUTPUT2  file produced by MSC Nastran running on any of these same platforms. Patran
may be able to read binary format OUTPUT2  files from other platforms if they contain 32 bit, IEEE format entities (either
Big or Little Indian).
For platforms that do not produce OUTPUT2  files in these formats, Patran&amp;rsquo;s MSC Nastran preference can read OUTPUT2&lt;br&gt;
files created with the FORM=FORMATTED  option in MSC Nastran. This option can be selected from the
Analysis/Translation Parameters  form in Patran and directs MSC Nastran to produce an ASCII format OUTPUT2  file that
can be moved between any platforms. The Patran MSC Nastran interface detects this format when the OUTPUT2  file is
opened, automatically converts it to the binary format, and then reads the model and/or results into the Patran database.&lt;/p&gt;
&lt;p&gt;41 Chapter 2: MSC Nastran Files
Overview of the MSC Nastran Output Files
Main Index
Plot and Punch Files
The file run1.plt  is a binary file that contains the plotting information generated by the MSC Nastran plotter. If the
MSC Nastran plotter is not used, run1.plt  is deleted following the completion of the run. Likewise, if punch output is
specified, the file run1.pch  is retained after the run is complete; otherwise, it is deleted once the run is complete.
Truss Example Output
By default, the output file contains an echo (listing) of the input file with the bulk data sorted alphabetically as shown in
Figure 2-3.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of the MSC Nastran Output Files42
Main Index
Figure 2-3  truss1.f06 Output FileN A S T R A N    E X E C U T I V E    C O N T R O L    E C H O&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ID LINEAR,TRUSS1                                                                        
 SOL 101                                                                                 
 TIME 2                                                                                  
 CEND 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C A S E    C O N T R O L    E C H O                                                     &lt;br&gt;
COMMAND                                                                                                         &lt;br&gt;
COUNT                                                                                                           &lt;br&gt;
1      TITLE = LINEAR STATICS USER&amp;rsquo;S GUIDE                                                  &lt;br&gt;
2      SUBTITLE = TRUSS STRUCTURE                                                           &lt;br&gt;
3      LABEL = POINT LOAD AT GRID POINT 4                                                   &lt;br&gt;
4      LOAD = 10                                                                            &lt;br&gt;
5      SPC = 11                                                                             &lt;br&gt;
6      DISPLACEMENT = ALL                                                                   &lt;br&gt;
7      ELFORCE = ALL                                                                        &lt;br&gt;
8      ELSTRESS = ALL                                                                       &lt;br&gt;
9      BEGIN BULK                                                                           &lt;br&gt;
INPUT BULK DATA ENTRY COUNT =      33
S O R T E D   B U L K   D A T A   E C H O                                      &lt;br&gt;
ENTRY                                                                                                           &lt;br&gt;
COUNT        .   1  ..   2  ..   3  ..   4  ..   5  ..   6  ..   7  ..   8  ..   9  ..  10  .                   &lt;br&gt;
1-        CROD    1       21      2       3                                            &lt;br&gt;
2-        CROD    2       21      2       4                                            &lt;br&gt;
3-        CROD    3       21      1       3                                            &lt;br&gt;
4-        CROD    4       21      1       4                                            &lt;br&gt;
5-        CROD    5       21      3       4                                            &lt;br&gt;
6-        FORCE   10      4               1000.   0.      -1.     0.                   &lt;br&gt;
7-        GRID    1               0.      0.      0.              3456                 &lt;br&gt;
8-        GRID    2               0.      120.    0.              3456                 &lt;br&gt;
9-        GRID    3               600.    120.    0.              3456                 &lt;br&gt;
10-        GRID    4               600.    0.      0.              3456                 &lt;br&gt;
11-        MAT1    22      30.E6           .3                                           &lt;br&gt;
12-        PROD    21      22      4.      1.27                                         &lt;br&gt;
13-        SPC1    11      123456  1       2                                            &lt;br&gt;
ENDDATA
TOTAL COUNT=        14
M O D E L   S U M M A R Y
NUMBER OF GRID     POINTS   =        4
NUMBER OF CROD     ELEMENTS =        5
*** USER INFORMATION MESSAGE 7310 (VECPRN)
ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM WILL BE USED AS REFERENCE LOCATION.
RESULTANTS ABOUT ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM IN SUPERELEMENT BASIC SYSTEM COORDINATES.
OLOAD    RESULTANT    &lt;br&gt;
SUBCASE/    LOAD
DAREA ID    TYPE       T1            T2            T3            R1            R2            R3
1     FX    0.000000E+00     &amp;mdash;-          &amp;mdash;-          &amp;mdash;-       0.000000E+00  0.000000E+00                          &lt;br&gt;
FY       &amp;mdash;-      -1.000000E+03     &amp;mdash;-       0.000000E+00     &amp;mdash;-      -6.000000E+05                          &lt;br&gt;
FZ       &amp;mdash;-          &amp;mdash;-       0.000000E+00  0.000000E+00  0.000000E+00     &amp;mdash;-                               &lt;br&gt;
MX       &amp;mdash;-          &amp;mdash;-          &amp;mdash;-       0.000000E+00     &amp;mdash;-          &amp;mdash;-                               &lt;br&gt;
MY       &amp;mdash;-          &amp;mdash;-          &amp;mdash;-          &amp;mdash;-       0.000000E+00     &amp;mdash;-                               &lt;br&gt;
MZ       &amp;mdash;-          &amp;mdash;-          &amp;mdash;-          &amp;mdash;-          &amp;mdash;-       0.000000E+00                          &lt;br&gt;
TOTALS  0.000000E+00 -1.000000E+03  0.000000E+00  0.000000E+00  0.000000E+00 -6.000000E+05&lt;/p&gt;
&lt;p&gt;*** SYSTEM INFORMATION MESSAGE 4159 (DFMSA)
THE DECOMPOSITION OF KLL      YIELDS A MAXIMUM MATRIX-TO-FACTOR-DIAGONAL RATIO OF    1.300101E+02
*** USER INFORMATION MESSAGE 5293 (SSG3A)
FOR DATA BLOCK KLL  &lt;br&gt;
LOAD SEQ. NO.             EPSILON              EXTERNAL WORK      EPSILONS LARGER THAN 0.001 ARE FLAGGED WITH ASTERISKS
1          0.0000000E+00          6.4518387E+01&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                         D I S P L A C E M E N T   V E C T O R

  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
         1      G      0.0            0.0            0.0            0.0            0.0            0.0
         2      G      0.0            0.0            0.0            0.0            0.0            0.0
         3      G      1.247578E-02  -1.285377E-01   0.0            0.0            0.0            0.0
         4      G     -1.252422E-02  -1.290368E-01   0.0            0.0            0.0            0.0
                                       F O R C E S   I N   R O D   E L E M E N T S     ( C R O D )
   ELEMENT           AXIAL                                     ELEMENT           AXIAL
     ID.             FORCE          TORQUE                       ID.             FORCE          TORQUE
         1        2.495156E+03   0.0                                 2        2.554449E+03   0.0
         3       -2.544570E+03   0.0                                 4       -2.504844E+03   0.0
         5        4.990313E+02   0.0
                                 S T R E S S E S   I N   R O D   E L E M E N T S      ( C R O D )
   ELEMENT       AXIAL       SAFETY      TORSIONAL     SAFETY       ELEMENT       AXIAL       SAFETY      TORSIONAL     SAFETY
     ID.        STRESS       MARGIN        STRESS      MARGIN         ID.        STRESS       MARGIN        STRESS      MARGIN
         1    6.237891E+02              0.0                               2    6.386123E+02              0.0           
         3   -6.361426E+02              0.0                               4   -6.262109E+02              0.0           
         5    1.247578E+02              0.0 
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P30</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_030/</guid>
      <description>
        
        
        &lt;p&gt;563 Chapter 10: Materials
Experimental Data Fitting
Main Index&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;BEGIN [BULK] UDS- material&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;Subroutine ext_umat
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;&lt;/li&gt;
&lt;li&gt;ENDDATA
The command line keyword, udssave , is used to specify where the SCA component will be built and whether the built
component will be saved for later use.
nast20212 myjob.dat uds=mysource.F udssave=/home/temp
If udssave  is not given, the MSC Nastran output directory will be used as build location, and the built component will
be deleted after MSC Nastran run. If udssave  is specified, the user component will be saved in specified location and
could be reused later.
To reuse a built user component without building it again, only specify the udssave  in command line.
nast20131 myjob.dat udssave=/home/temp
Limitation and Potential Enhancement
There is only one BEGIN UDS  section and CONNECT SERVICE  statement supported. If there is more than one in the input
file, only the first one is used.
The MSC SDK of the associated MSC Nastran version is required and the &amp;lt;SDK_INSTALL_DIR&amp;gt;/Tools  directory must
be added in the PATH  environment variable.
Advanced users are referred to the MSC Nastran MSC Nastran User Defined Services User’s Guide .
Experimental Data Fitting
This is a very useful tool available under the Tools  pull-down menu from the main Patran form and is available if the
Analysis Preference  is set to MSC Nastran.
The tool is used to curve fit experimentally derived, raw elastomeric
material data and fit a number of material models to the data. The
data can then be saved as constitutive hyperelastic and/or
viscoelastic models for use in an SOL 400 or Marc analysis.
The operation of curve fitting is done in three basic steps
corresponding to the actions in the Action  pull-down menu.
1.Import the Raw Data  – data is read from standard ASCII
files and stored in MSC.Patran  in the form a field (table).
2.Select the Test Data  – the fields from the raw data are
associated to a test type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting564
Main Index
3.Calculate the Properties  – the curve fit is done to the selected test data; coefficients are calculated based on the
selected material model; curve fit is graphically displayed and the properties can be saved as a constitutive model for
a later analysis.
Import Raw Data
Importing the data is done by following these steps:
1.Enter a New Field Name  – this is the name of the raw data table as it will be stored in Patran as a material field.
2.Select the Independent Variable  – this is defaulted to Strain  but could be any of Strain , Time , Frequency ,
Temperature , or Strain Rate .
3.Select File  and press the Apply  button.
The following notes are made:
•You can skip any number of header lines in the raw data file by setting the Header Lines to Skip  widget.
•You may edit the raw data file after selecting it by using the Edit File&amp;hellip;  button. The editor is Notepad on
Windows platforms and vi on Linux platforms unless you change the environment variable P3_EDITOR to
reference a different editor. The editor must be in the user’s path or the entire pathname must be referenced.
•Raw data files may have up to three columns of data. By default, the first column of data is the independent
variable value. The second column is the measured data, and the last column can be the area reduction or
volumetric data. More than three columns is not accepted. If the third column is blank, the material is
considered incompressible.
•The data may be space, tab, or comma delimited.
•If you have cross-sectional area reduction data in the third column, you can give it an optional field name also.
If you do not specify that you have this data and a third column is detected, two fields will still be created and
a _C1 and _C2 will be appended to the given field name.
•If for some reason the independent and dependent columns need to be interchanged, you can turn this toggle
on. Check your imported fields before proceeding to ensure they are correct. This is done in the Fields&lt;br&gt;
application.
•When you press the Apply  button, you will be taken to the second step. If you need to import more than one
file, you will have to reset the Action  pull-down.&lt;/p&gt;
&lt;p&gt;565 Chapter 10: Materials
Experimental Data Fitting
Main Index
Experimental Data Fitting
Import Raw Data Description
New Field The field name under which the raw data will be saved. For an explanation of what the raw data
files should contain, see the description on each mode (Uniaxial, Biaxial, etc.) in the table for
Select Test Data .
Area Data If volumetric data or cross sectional area reduction data is stored in the third column of a raw
data file it will be imported automatically and two field will be created, one with a _C1 and the
other with a _C1 appended to the name. Optionally, you can give it it’s own name by turning
this toggle on.
Area Field Name If the Area Data  toggle is on, you supply the name to the field of volumetric or area data here.
Independent Variable This defines the independent variable. The material field created from reading the raw data will
be tagged with this independent variable. This is simply a label and has no effect on the actual
curve fits.
Header Lines to Skip If any header lines in the data file are to be skipped before the raw data is processed, you can
specify this with this data box.
Select File Select a raw data file. The .dat and .csv file types are filtered by default. csv files are comma
separated and created by Microsoft Excel.
Edit File Once a file has been selected you may edit it with Notepad on Windows and vi on Linux. The
editor can be changed by setting the environment variable P3_EDITOR to the editor or choice.
The editor command must be in the user’s path or the full path must be provided as part of the
P3_EDITOR environment variable.
Apply This command will import the raw data and save it as a field(s) in the name(s) given in New
Field  (and/or Area Field Name ) data boxes. You will also be taken to automatically to the Select
Test Data  action which is the next step. If you need to import multiple raw data files, you will
have to set the Action  back to Import Raw Data .
Cancel Closes the Experimental Data Fitting  tool.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting566
Main Index
Select Test Data
Once the raw test data is imported, you must associate with a
particular test type or mode by following these steps:
1.Put the cursor in the data field of the appropriate type of
test.
2.Select associated field from the Select Test Data  list box
which should have a list of the imported raw data fields.
3.Repeat this for each test you wish to include in the
calculations (curve fit).
The following notes are made:
•Typical stress-strain data for Deformation Mode tests
are referenced in the Primary  column. If you have
volumetric data, these are entered in the Secondary&lt;br&gt;
column databoxes and are optional.
•For Viscoelastic (time relaxation data), you must turn
on the ViscoElastic  toggle. Only viscoelastic curve
fitting will be done in this case. To return to
Deformation Mode , turn this toggle off.
•Damage models are not yet supported.
•When you press the Apply  button, you will be taken to the third step.&lt;/p&gt;
&lt;p&gt;567 Chapter 10: Materials
Experimental Data Fitting
Main Index
Experimental Data Fitting
Select Test Data Description
Uniaxial
Biaxial
Planar Shear
Simple Shear
VolumetricSelect the field of raw test data corresponding to each of these tests if they exist. You need to
supply at least one. The stress-strain data field is referenced in the Primary  column. If you
have volumetric or area data fields, they are referenced in the Secondary  column. If no
Secondary  field is supplied, the material models are assumed incompressible.
For time independent elastomeric materials (uniaxial, biaxial, planar shear, simple shear and
volumetric tests) the data should be as such in the raw data file:
eng. strain_1, eng. stress_1, volumetric data_1
eng. strain_2, eng. stress_2, volumetric data_2
.              .              .
eng. strain_n, eng. stress_n, volumetric data_n
If, for uniaxial, biaxial or planar shear data, the third column is left empty, the material is
assumed to be incompressible.
Viscoelastic Turn this toggle on if you wish to do a data fit on viscoelastic relaxation data.
For visco-elastic material behavior (shear relaxation, bulk relaxation and energy relaxation
tests) the data should be as such in the raw data file:
time_1, value_1 (shear modulus, bulk modulus or strain energy)
time_2, value_2 (shear modulus, bulk modulus or strain energy)
.              .              .
time_n, value_n (shear modulus, bulk modulus or strain energy)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting568
Main Index
Damage Not yet supported. Turn this toggle on if you wish to do a data fit on damage models. For
continuous damage (resulting from a constant strain amplitude test), the data in the raw
input file should be:
cycle_1, str_energy_d_1
cycle_2, str_energy_d_2
.              .
cycle_n, str_energy_d_n
In addition, before fitting the data, the free energy (which is the strain energy density
corresponding to the undamaged state) is required. Notice that the data points should not
include the range of cycles at which damage did not start to evaluate.
For discontinuous damage (resulting from an increasing strain amplitude test):
str_energy_d_1, strain_energy_d_1/str_energy_d_1_undamaged
str_energy_d_2, strain_energy_d_2/str_energy_d_2_undamaged
.              .                 .
str_energy_d_n, strain_energy_d_n/str_energy_d_n_undamaged
Notice that the data points should not include the range of cycles at which damage did not
start to evaluate.
Viscoelastic/Damage In this field, select the Viscoelastic or Damage  raw test data field.
Select Material Test Data From this list box you select the field corresponding to the Deformation Mode  or the
Viscoelastic/Damage  data.
Apply Once the test data is associated to the respective modes, the Apply  button will take you to
the Calculate Properties  action.
Cancel Closes the Experimental Data Fitting  tool.Experimental Data Fitting
Select Test Data Description&lt;/p&gt;
&lt;p&gt;569 Chapter 10: Materials
Experimental Data Fitting
Main Index
Calculate Properties
Once test data has been associated to a test type or mode, the
curve fit is done by following these steps:
1.Select the material Model  you wish to do a curve fit for.
The available models will depend on the test data selected
in the previous step. Hyperelastic models will be available
for deformation mode test data. Viscoelastic models will
be available for relaxation test data.
2.In general, you will leave Use Test Data  to All for
hyperelastic models. If however you only want the curve
fit to use one of the deformation modes, you may set it
here.
3.Press the Compute  button. The coefficient values will be
displayed in the Coefficients  spreadsheet.
4.To visually see the curve fit, press the Plot button.
You may repeat the above four steps for as many material
models as you wish to curve fit.
5.Select an existing material or type in a New Material
Name  and press the Apply  button to save the material
model as either a Hyperelastic or Viscoelastic constitutive
model for use in a subsequent analysis.
The following notes are made:
•The plots are appended to the existing XY Window until you press the Unpost Plot  button. You can turn the
Append function on/off under the Plot Parameters&amp;hellip; form.
•By default, all the deformation modes are plotted along with the raw data even if raw data has not been supplied
for those mode. This is very important. These additional modes are predicted for you. You should always know
your model’s response to each mode of deformation due to the different types of stress states. For example, a
rule of thumb for natural rubber and some other elastomers is that the tensile tension biaxial response should
be about 1.5 to 2.5 times the uniaxial tension response.
•You can turn on/off these additional modes or any of the curves under the Plot Parameters  button as well as
change the appearance of plot. More control and formatting of the plot can be done under the XY Plot&lt;br&gt;
application on the Patran application switch on the main form.
•Viscoelastic constitutive models are useless without a hyperelastic constitutive model also. Be sure your model
has both defined under the same material name if you use viscoelastic properties.
•You may actually change the coefficient values in the Coefficients  spread sheet if you wish to see the effect they
have on the curve fit. Select one of the cells with the coefficient you wish to change, then type in a new
coefficient value in the Coefficient Value  data box and press the Return  or Enter  key. Then press the Plot
button again. If you press the Apply  button, the new values will be saved in the supplied material name.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting570
Main Index
•For viscoelastic relaxation data, the Number of Terms  used in the data fit should, as a rule of thumb, be as many
as there are decades of data.
•A number of optional parameters are available to message the data and control the curve fitting. See the table
below for more detailed descriptions.
The following tables more fully describes each widget in the Experimental Data Fitting  tool:
Calculate Properties Description
Model: Neo-Hookean* This command is used if experimental data must be fitted using the Neo-Hookean strain
energy function W, which is given by:
W = C10*(I1 - 3)
where I1 is the first invariant of the right Cauchy-Green strain tensor and C10 is the
material parameter to be determined. For this model, a volumetric test can not be
supplied. You may enter a bulk modulus. If no bulk modulus is given, nearly
incompressible material behavior is assumed.
Model: Mooney(2)* This command is used if experimental data must be fitted using the two term Mooney-
Rivlin strain energy function W, which is given by:
W = C10*(I1 - 3) + C01*(I2 - 3)
where I1 and I2 are the first and second invariant of the right Cauchy-Green strain tensor
and C10 and C01 are the material parameters to be determined. For this model, a
volumetric test can not be supplied. You may enter a bulk modulus. If no bulk modulus
is given, nearly incompressible material behavior is assumed.
Model: Mooney(3)* This command is used if experimental data must be fitted using the three term Mooney-
Rivlin strain energy function W, which is given by:
W = C10*(I1 - 3) + C01*(I2 - 3) + C11*(I1 - 3)&lt;em&gt;(I2 - 3)
where I1 and I2 are the first and second invariant of the right Cauchy-Green strain tensor
and C10, C01 and C11 are the material parameters to be determined. For this model, a
volumetric test can not be supplied. You may enter a bulk modulus. If no bulk modulus
is given nearly incompressible material behavior is assumed.
Model: Signiorini&lt;/em&gt; This command is used if experimental data must be fitted using the Signiorini strain
energy function W, which is given by:
W = C10*(I1 - 3) + C01*(I2 - 3) + C20*(I1 - 3)^2
where I1 and I2 are the first and second invariant of the right Cauchy-Green strain tensor
and C10, C01 and C20 are the material parameters to be determined. For this model, a
volumetric test can not be supplied. You may enter a bulk modulus. If no bulk modulus
is given, nearly incompressible material behavior is assumed.&lt;/p&gt;
&lt;p&gt;571 Chapter 10: Materials
Experimental Data Fitting
Main Index
Model: 2nd Order
Invariant&lt;em&gt;This command is used if experimental data must be fitted using the second order invariant
strain energy function W, which is given by:
W = C10&lt;/em&gt;(I1 - 3) + C01*(I2 - 3) + C11*(I1 - 3)&lt;em&gt;(I2-3) +
C20&lt;/em&gt;(I1 - 3)^2
where I1 and I2 are the first and second invariant of the right Cauchy-Green strain tensor
and C10, C01, C11 and C20 are the material parameters to be determined. For this
model, a volumetric test can not be supplied. You may enter a bulk modulus. If no bulk
modulus is given, nearly incompressible material behavior is assumed.
Model: 3rd Order Deform* This command is used if experimental data must be fitted using the third order
deformation strain energy function W, which is given by:
W = C10*(I1 - 3) + C01*(I2 - 3)+ C11*(I1 - 3)&lt;em&gt;(I2 - 3) +
C20&lt;/em&gt;(I1 - 3)^2 + C30*(I1 - 3)^3
where I1 and I2 are the first and second invariant of the right Cauchy-Green strain tensor
and C10, C01, C11, C20 and C30 are the material parameters to be determined. For this
model, a volumetric test can not be supplied. You may enter a bulk modulus. If no bulk
modulus is given, nearly incompressible material behavior is assumed.
The data input for all of these options has been consolidated under the Jamus-Green-Simpson option of the Patran
Materials-Input-Data-Hyperelastic form.
Model: Yeoh This command is used if experimental data must be fitted using the Yeoh strain energy
function W, which is given by:
W = C10*(I1 - 3) + C20*(I1 - 3)^2 + C30*(I1 - 3)^3
where I1 is the first invariant of the right Cauchy-Green strain tensor and C10, C20 and
C30 are the material parameters to be determined. For this model, a volumetric test can
not be supplied. You may enter a bulk modulus. If no bulk modulus is given, nearly
incompressible material behavior is assumed.Calculate Properties Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting572
Main Index
Model: Ogden This command is used if experimental data must be fitted using the Ogden strain energy
function W, which is given by:
where lam1, lam2 and lam3 are the principal stretch ratios, J is the determinant of the
deformation gradient, N is the number of terms and mu_n, alpha_n and K are the
material parameters to be determined. The maximum number of terms is 10, but it is
recommended to use no more terms than necessary to get a sufficiently good fit. This
model can be used for incompressible as well as for slightly compressible elastic materials.
Compressibility is included based on a constant bulk modulus. In case of compressibility,
volumetric information is needed, preferably using a volumetric test, but volumetric data
can also be included for uniaxial, biaxial and planar shear tests. In order to perform a
plausible extrapolation for the compressible Ogden model, dilatational information is
needed beyond the data set. This is achieved using linear extrapolation based on the two
start and/or end points of the measured data. This linear extrapolation may restrict the
validity of the response outside the range of the measured data. For dual mode plotting
(except for simple shear), dilatational information is needed for the compressible Ogden
model. For a volumetric test, this readily follows from the strain, but for uniaxial, biaxial
and planar shear tests this must be calculated. This calculation is based on the requirement
that the stress in perpendicular direction must be zero. If the fitted coefficients do not fulfil
this requirement, zero stresses are returned for such a dual mode.Calculate Properties Description
W
n1=N
={(mu_n/alpha_n) * (J^(-alpha_n/3)) *
(lam1^alpha_n + lam2^alpha_n + lam2^alpha_n&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3)} + 4.5 * K * (J^(1/3) - 1)^2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;573 Chapter 10: Materials
Experimental Data Fitting
Main Index
Model: Foam This command is used if experimental data must be fitted using the foam strain energy
function W, which is given by:
where lam1, lam2 and lam3 are the principal stretch ratios, J is the determinant of the
deformation gradient, N is the number of terms and mu_n, alpha_n and beta_n are the
material parameters to be determined. The maximum number of terms is 10, but it is
recommended to use no more terms than necessary to get a sufficiently good fit. This
model should be used for highly compressible elastic materials. Except for the simple shear
test, volumetric information must be available. In order to perform a plausible
extrapolation for the foam model, dilatational information is needed beyond the data set.
This is achieved using linear extrapolation based on the two start and/or end points of the
measured data. This linear extrapolation may restrict the validity of the response outside
the range of the measured data. For dual mode plotting (except for simple shear),
dilatational information is needed for the foam model. For a volumetric test, this readily
follows from the strain, but for uniaxial, biaxial and planar shear tests this must be
calculated. This calculation is based on the requirement that the stress in perpendicular
direction must be zero. If the fitted coefficients do not fulfil this requirement, zero stresses
are returned for such a dual mode.
Model: Arruda-Boyce Elastomer Free Energy Function; Number of coefficients 1
Ref: &amp;ldquo;A Three-Dimensional Constitutive Model For the Large Stretch Behavior of Rubber
Elastic Materials&amp;rdquo; by: Ellen M. Arruda and Mary C. Boyce, J.Mech.Phys.Solids Vol.41,
No.2, pp.389-412
Parameter: N   &amp;ndash; The number of mers in a typical polymer chain - Specified by you.
Coefficient: n,k,T &amp;ndash; Determined by the fitter
n : Number of Polymer chains per unit volume
k : Boltzmann constant
T : Temperature
For this model, the calculation of the bulk modulus is not required. A volumetric test need
not be supplied. Calculate Properties Description
{(mu_n/alpha_n)&lt;em&gt;(lam1^alpha_n +
lam2^alpha_n + lam2^alpha_n - 3)
+(mu_n/beta_n)&lt;/em&gt;(1 - J^beta_n)} W
n1=N
=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting574
Main Index
Model: Gent Elastomer Free Energy Function; Number of coefficients 2
Ref: &amp;ldquo;A new constitutive relation for rubber&amp;rdquo; by: A.N. Gent, Rubber Chemistry and
Technology, Vol.79, pp.59-61, 1996
Coefficient: E, I_m &amp;ndash; Determined by the fitter
E   : small strain tensile modulus
I_m : maximum value for the first
invariant of deformation (I1)
Caution:  This phenomenological model is designed to exhibit finite extensibility of
polymer chains and forces the stresses and tangent to asymptote to infinity as I1 approaches
Im. It is conceivable that during the solution stage, a set of trial displacements is evaluated
such that I1 &amp;gt; Im. In which case, the convergence ratios can be expected to oscillate, or even
worse, the solution may not converge at all. Therefor, if Im &amp;lt; 4, it is recommended that loads
be applied in very small increments.&lt;br&gt;
For this model, the calculation of the bulk modulus is not required and a volumetric test
need not be supplied.
Model: Visco Shear Relax This command is used if experimental shear relaxation data must be fitted using the
following Prony series expansion for the shear modulus G:
where t is the time, N is the number of terms and G_infinity, G_n and tau_n are material
parameters to be determined. The data points provided by you must give the value of the
shear modulus at different time stations, which do not need to be equispaced.Calculate Properties Description
G(t) = G_infinity {G_n*exp(-t/tau_n)} WN

n1==&lt;/p&gt;
&lt;p&gt;575 Chapter 10: Materials
Experimental Data Fitting
Main Index
Model: Visco Bulk Relax This command is used if experimental bulk relaxation data must be fitted using the
following Prony series expansion for the bulk modulus K:
where t is the time, N is the number of terms and K_infinity, K_n and tau_n are material
parameters to be determined. The data points provided by you must give the value of the
bulk modulus at different time stations, which do not need to be equispaced.
Model: Visco Energy Relax This command is used if experimental strain energy relaxation data must be fitted using
the following Prony series expansion for the strain energy W:
where t is the time, N is the number of terms, W0 is the instantaneous strain energy and
W_infinity, delta_n and tau_n are material parameters to be determined. The data points
provided by you must give the value of the strain energy at different time stations, which
do not need to be equispaced.
Model: Cont. Damage Not yet supported.
Model: Disc. Damage Not yet supported.
Compute This command starts the data fitting program with the selected data. After fitting, the
measured and fitted curves can be displayed and the corresponding material model
coefficients and the least squares error are reported. For the Mooney-Rivlin, Ogden,
Foam, Arruda-Boyce and Gent models, the response in the modes for which no data is
measured, is predicted. Notice that if volumetric data is relevant in order to predict a
uniaxial, biaxial or planar shear mode, this is calculated using the constraint of a zero stress
component in a direction perpendicular to the direction of the measured stress
component. If this calculation fails, the predicted mode will contain zero stresses.
If the data set contains a large number of entries, or if the model is highly nonlinear and/or
contains many coefficients, then the fitting procedure may take some time.
Since the curve fitting procedure does not use weighting factors per data point, it might
be useful to have many data points near regions where an accurate response is desired.Calculate Properties Description
K(t) = K_infinity {K_n&lt;em&gt;exp(-t/tau_n)} N

n1=
K(t) = K_infinity {delta_n&lt;/em&gt;W0*exp(-t/tau_n)} N

n1=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting576
Main Index
Coefficient Value This option allows you to manually enter the coefficients of the material model and
updates the response curves. You must select the coefficient to be modified from the
spread sheet and then enter the value by pressing the Return  or Enter  key after putting in
the new coefficient. Notice that, although no fit is performed, at least one set of test data
must be selected. This feature is available for the Mooney-Rivlin, Ogden, Foam, Arruda-
Boyce and Gent material models.
Plot This plots the current curve fit. The raw data and the calculated curve fits for the supplied
experimental data and the other predicted modes are plotted.
Unpost Plot This clears the plot of all curves. By default additional data fit curves are appended the XY
Window.
New Material Name If a new name is supplied here and this material name does not yet exist, it will be created
with the appropriate constitutive models when the Apply  button is pressed.
Select Material If you want the hyperelastic or viscoelastic data to be saved into an existing material set,
select it from this list box.
Apply This command copies the computed material model coefficients into a material model: it
either creates a new one as indicated by the New Material Name  or changes an existing
one as selected from Select Material .
Cancel Closes the Experimental Data Fitting  tool.
Experimental Data Fitting
Optional Parameters Description
Uniaxial Test: A/Ao V/Vo Volumetric data of a uniaxial test can be given as: the ratio of the current cross sectional
area and the original cross sectional area (A/A0) or: the ratio of the current volume and the
original volume (V/V0). By default, the volumetric data is expected to be in terms of A/A0.
If the actual data is in terms of V/V0, use this switch to change the type of input. Not all
material models need this information and therefore these widgets may appear dimmed.
Biaxial Test: t/to V/Vo Volumetric data of an equibiaxial test can be given as: the ratio of the current thickness
and the original thickness (t/t0) or: the ratio of the current volume and the original volume
(V/V0). By default, the volumetric data is expected to be in terms of t/t0. If the actual data
is in terms of V/V0, use this switch to change the type of input. Not all material models
need this information and therefore these widgets may appear dimmed.
Planar Shear t/to V/Vo Volumetric data of a planar shear test can be given as: the ratio of the current thickness
and the original thickness (t/t0) or: the ratio of the current volume and the original volume
(V/V0) If the actual data is in terms of V/V0, use this switch to change the type of input.
Not all material models need this information and therefore these widgets may appear
dimmed.Calculate Properties Description&lt;/p&gt;
&lt;p&gt;577 Chapter 10: Materials
Experimental Data Fitting
Main Index
Mathematical Checks This command activates mathematical checks for Ogden and Foam materials and causes
the data fitter to discard the coefficients when one of the mathematical conditions on them
is not satisfied. These conditions are considered to be very strict and at times no set of
coefficients may be found, or the fit may be very poor.
Positive Coefficients Since curve fitting is a mathematical operation, the fitted material model coefficients may
be physically non-realistic. This command forces the fitting procedure to return
coefficients which are all positive. The quality of the fit may be worse than that without
this restriction. For example Ogden coefficients come in pairs. If each pair of modulus and
exponent have the same sign, stability is guaranteed. If one is positive and the other
negative, the material might be unstable. Thus you must visually determine the stability
range of the model.
Extrapolate For Mooney-Rivlin, Ogden, Foam, Arruda-Boyce and Gent models, this command gives
the possibility to get the response of the material outside the range of measurements. This
might be important if the deformations of the structure to be analyzed exceed those of the
experiments. One needs to set the new left and right bounds up to which the extrapolation
will be performed. Notice that when volumetric information is provided, outside the range
of measurements the volumetric data is calculated based on linear extrapolation using the
two closest measured data points.
Error The least squares error to be minimized during data fitting can be based on absolute or
relative errors:
Err_Abs = sum {[data_measured(i) - data_calculated(i)]^2}
i
Err_Rel = sum {[1 -data_calculated(i)/data_measured(i)]^2}
i
This command can be used to switch between relative (default) and absolute errors.
Error Limit During curve fitting, an optimal set of material coefficients is searched for using the
Downhill Simplex method. If the least squares error corresponding to a set of material
coefficients is larger than the error limit, a new minimum will be searched for, unless the
maximum number of iterations has been reached. This command sets the error limit. If,
upon fitting, the reported error is larger than the error limit, searching for a new minimum
has been terminated due to reaching the maximum number of iterations.
Number of Iterations At times, the data fitter may arrive at coefficients which correspond to a minimum in the
objective function, not fulfilling the least squares error limit. This command defines how
many attempts the program will make to exit the minimum. The maximum number of
iterations is 500.Experimental Data Fitting
Optional Parameters Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Experimental Data Fitting578
Main Index
Convergence Tolerance The data fitter uses the Downhill Simplex method to find a (local) minimum. This
method uses several sets of material coefficients and calculates the corresponding objective
functions. Based on the values of the objective functions, the sets of material coefficients
are modified. This process is terminated when:
2*abs{(fh-fl)/(abs(fh)+abs(fl))} &amp;lt; convergence tolerance
in which fh is the highest and fl is the lowest objective function found so far. The process
is also terminated after 2000 trials if the convergence tolerance has not been reached. This
command sets the convergence tolerance.
Use Fictive Coefficient For Foam models, toggle this value to ON in order to use the fictive Poisson&amp;rsquo;s ratio to
create volumetric information.
Fictive Coefficient Supply the fictive Poisson’s ratio here.
OK Closes the Optional Parameters  form.
Experimental Data Fitting
Plot Parameters Description
Append Curves If this toggle is on, curves keep accumulating on the XY Window. If it is off, the curves are
cleared each time a new data fit is done and plotted.
X-Axis Options
Y-Axis OptionsYou can plot the curves in linear or log scales.
Deformation Modes If any of these toggles is off, that particular deformation mode will be removed from the
XY Window.Experimental Data Fitting
Optional Parameters Description&lt;/p&gt;
&lt;p&gt;579 Chapter 10: Materials
Experimental Data Fitting
Main Index
OK Closes the Plot Parameters  form.
Note: The plotting and deleting of plots in this utility tool is fairly self contained and little, if any, need to use the XY
Plot application is necessary. If however, you find it necessary to use the XY Plot application and post/unpost
curves, the naming convention is as such:
Raw Data Curve Name = R_&amp;ldquo;mode type&amp;rdquo;&lt;em&gt;&amp;ldquo;field id&amp;rdquo;&lt;/em&gt;&amp;ldquo;color&amp;rdquo;&lt;em&gt;&amp;ldquo;marker type
Data Fit Curve Name = &amp;ldquo;model&amp;rdquo;&lt;/em&gt;&amp;ldquo;mode type&amp;rdquo;&lt;em&gt;&amp;ldquo;field id&amp;rdquo;&lt;/em&gt;&amp;ldquo;color&amp;rdquo;_&amp;ldquo;line type
where:
mode type (string) = “U” : Uniaxial
“B” : Biaxial
“P” : Planar Shear
“S” : Simple Shear
“V” : Volumetric
“C” : VisCoelastic
model (string)= “N” : Neo-Hookean
“M2” : Mooney 2
“M3” : Mooney 3
“S” : Signifying
“2O” : Second Order Invariant
“3O” : Third Order Deformation
“Y” : Yeoh
“O#” : Ogden # where # is the number of terms, e.g., O2
“F#” : Foam # where # is the number of terms, e.g., F3
“B” : Boyce
“G” : Gent
“CD” : Continuous damage
“DD” : Discontinuous Damange
“SV” : Shear Relaxation Visco
“BV” : Bulk Relaxation Visco
“EV” : Energy Relaxation ViscoExperimental Data Fitting
Plot Parameters Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
References580
Main Index
References
1.Barlat, F., Lege, D.J. and Brem, J.C., “A six-component yield function for anisotropic metals”, Int. J. Plasticity , 7,
693-712 (1991).
2.Chung, K. and Shah, K., “Finite element simulation of sheet metal forming for planar anisotropic metals”, Int. J.
Plasticity , 8, 453-476 (1992).
3.Yoon, J.W., Yang, D.Y. and Chung, K. and Barlat. F., “A general elasto-plastic finite element formulation based on
incremental deformation theory for planar anisotropy and its application to sheet metal forming”, Int. J. Plasticity ,
15, 35-67 (1999).
4.Yoon, J.W., Barlat, F., Chung, K., Pourboghrat, F. and Yang, D.Y., “Earing predictions based on asymmetric
nonquadratic yield function”, Int. J. Plasticity , 16, 1075-1104 (2000).
5.Chaboche, J. L., “Constitutive Equations for Cyclic Plasticity and Cyclic Viscoplasticity”, International Journal of
Plasticity , Vol. 5, pp. 247-302, 1989
6.Camacho, G.T. and Ortiz, M., “Computational modelling of impact damage in brittle materials”, Int. J. Solids
Struct., Vol. 33, pp 2899-2938, 1996.
7.Auricchio, F. and Taylor, R.L., “Shape-memory alloy: modeling and numerical simulations of the finite-strain
superelastic behavior”, Comput. Methods Appl. Mech. Engrg. , Vol. 143, pp.175-194 (1997).
8.Auricchio, F., “A robust integration-algorithm for a finite-strain shape-memory-alloy superelastic model”, Int. J.
Plasticity , Vol.17, pp.971-990 (2001).&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 11: Element Library
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
11 Element Library
Introduction
Interpolation Functions
Element Integration
Incompressible Behavior
Nonlinear Behavior
User Defined Services/Subroutines
Property Options
Element Classes
Automatic Property Mapping
Patran Interface
Modeling Guidelines
References&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction582
Main Index
Introduction
Clearly the element is the heart and soul of the FEM. The element is used as a mechanism to integrate a quantity over a
volume, a surface, a curve, or a point.  For the simplest simulation, it provides a transfer function (or impedance) between
the degrees of freedom of one grid and the degrees of freedom of another grid. This is a very general definition which may
be applied to any type of physics including structural analysis, thermal analysis, acoustic analysis, and fluid dynamics among
others.  For the case of linear structural analysis, this transfer function is called the stiffness matrix. In most of this chapter,
the focus is on the stiffness matrix evaluation of an element. The element definition is used to obtain other engineering
quantities including the mass matrix and the equivalent nodal load.
The selection of the element type and the design of the finite element mesh are important to obtain an accurate solution.
The design of a finite element mesh is done either fully automatically by a mesh generator available from MSC (Patran,
SimXpert) or another mesh generator available on the market. This chapter does not dwell on what is often called the art
of mesh generation. Rather this chapter focuses on the different classes of elements available in MSC Nastran SOL 400 with
particular focus on performing nonlinear analysis.
In MSC Nastran, there are two aspects of element definition:
1.The definition of the location of the element, by identifying grip points comprising the element. This is often called
the element topology. This is specified in the C* options discussed below
2.The definition of the characteristics of the element. This in general is provided in the Property  options discussed
below.
For nonlinear analysis, the topology of the elements is generally the same for linear analysis (SOL 101) and for nonlinear
analysis (SOL 400), though there are some restrictions as well which are discussed below. Additionally, there are elements
available in the implicit nonlinear procedure that are not available in the linear solution sequences. For a detailed description
of MSC Nastran element technology, see the MSC Nastran Linear Static Analysis User’s Guide,  MSC Nastran Elements&lt;br&gt;
(Ch. 4), MSC Nastran Reference Guide, Structural Elements  (Ch. 3) and QRG, Bulk Data Entries .
The definition of the characteristics of the elements is significantly different between linear and nonlinear analysis. When
performing nonlinear simulations, the technology required to represent the topology and interpolation functions requires
alternative formulations from the classical MSC Nastran elements because of either:
1.Material nonlinear behavior
2.Constraints associated with incompressible or nearly incompressible behavior
3.Large deformation, which results in distortion of the element geometry
Because of these conditions, the Classical MSC Nastran elements have been augmented by the element technology in the
Marc product; these elements are often labeled as Advanced elements. The activation of these element technologies is
performed by an associated Property option. Significant effort was made to maintain compatibility between the different
methods.
Notice MSC products (MSC Nastran, Patran, SimXpert and Marc) are designed to work together, but, on occasion, the
technology used to define this technology is inconsistent. When necessary, both terminologies are used.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P31</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_031/</guid>
      <description>
        
        
        &lt;p&gt;583 Chapter 11: Element Library
Interpolation Functions
Main Index
Interpolation Functions
Associated with an element are interpolation (shape) functions. These functions describe how the fundamental quantities
such as the coordinate position and displacement (for structural analysis) vary over the element. There are four types of
interpolation functions used in MSC Nastran in either the classic elements or the advanced elements including:
Linear share functions
Quadratic
Cubic
Assumed
The first three types of shape functions are described in any finite element textbook (Zienkiewicz, T aylor).  When using the
first three methods, the shape functions used to describe the coordinate position and the displacements, in which case, these
elements are considered to be isoparametric elements. Such elements are guaranteed to be able to exactly represent the rigid
body modes and the homogeneous modes; a necessary condition for convergence to the exact solution as the mesh is
refined. In such case, the element is said to satisfy the patch test.
The assumed strain shape functions are usually considered to be proprietary and have been tuned to give more accurate
results for a large class of engineering problems. In MSC Nastran, these assumed strain elements are used either to improve
the bending behavior or to satisfy incompressibility requirements.
Element Integration
Except for a few exceptions, all element are integrated numerically in MSC Nastran, and the default is to use full
integration. Full integration implies that if the displacement vary over the element consistently with the interpolation
function, then the virtual work expression is integrated exactly.
When evaluating integrals, the functions are evaluated at the integration point. The most common integration point
locations and associated weight functions are called
Gauss Points
Barlow Points
Newton-Coates or Lobatto Points
where the Gauss point method is the most prevalent.
Occasionally, reduced integration elements may be used to benefit the solution. This is because full integration may lead to
overly stiff elements, hence reduced displacement for a given load. Reduced integration elements may also be beneficial
because the reduction of integration points may result in reduced computational costs and reduced memory usage. The use
of reduced integration elements should be used with caution because the virtual work is not integrated exactly, and this
leads to spurious or hourglass modes. This implies that the element may deform into a shape which results in zero strain
energy. An example of such an hourglass mode is shown in the following figure. For many elements, additional terms are
added, called the hourglass stiffness matrix.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Incompressible Behavior584
Main Index
Incompressible Behavior
Many materials, such as rubber, are known to be incompressible. Other materials, such as elastic or elastic-plastic materials,
may behave as nearly incompressible when the inelastic strain (plastic or creep) is large relative to the elastic strain. Such
processes may occur at elevated temperatures or during manufacturing.
Lower-order triangular and tetrahedral elements using conventional shape functions and lower-order quadrilateral/
hexahedral elements using conventional integration schemes give incorrect results for plane strain, axisymmetric, and 3-D
behavior. This is because the incompressibility acts like a constraint, and the element does not have enough degrees of
freedom to have both good shear behavior and satisfy incompressible behavior.
T o overcome this problem for triangular and tetrahedral elements, alternative shape functions may be used. These must be
activated on the Property  options.
T o overcome this problem for quadrilateral and hexahedral elements, a procedure known as Constant Dilatation  of B-bar
is used. This is automatically activated when activating the Large Displacement . For a selection of materials, this capability
is automatically deactivated, including:
Linear elastic with Poisson’s ratio &amp;lt; 0.45
Mohr Coulomb plasticity
Hypoelastic
Mechanical Shape Memory
Nonlinear Behavior
The advanced elements should be activated in a nonlinear simulation when either large displacement occurs in the model,
large strain, and/or material nonlinearity. In an engineering simulation where either certain regions have minimal
deformation or remain linear elastic, the classical elements may be used. One can always use a mixture of classical and
advanced elements.
Higher-order Elements and Large Deformation
Because of large deformation, the finite element mesh becomes distorted. This distortion can be greater for higher -order
elements where even an initial mesh of straight lines becomes curved lines. This may result in the element turning inside-Hourglass Mode&lt;/p&gt;
&lt;p&gt;585 Chapter 11: Element Library
User Defined Services/Subroutines
Main Index
out because the Jacobian evaluated at the integration points becomes negative. This is less likely to occur if reduced
integration is used with higher-order elements. If severe distortions occur, then the lower-order elements should be used.
Higher Order Elements and Contact
Given a uniform load on a higher (quadratic) order element, one would observe that the equivalent nodal loads oscillate in
sign. This was demonstrated in Chapter 8: Load and Constraint Conditions . This oscillation has negative ramifications in contact
simulations because it influences the calculation of the contact forces, which are required for separation in a general contact
simulation. This problem arises when using the Node-to-Segment  procedure. It does not occur when using the Segment-
to-Segment procedure; this is the recommended method when using higher-order elements.
User Defined Services/Subroutines
The user-defined services activated through the MATUDS  bulk data entry are only available through the advanced
elements. When using these user subroutines, it is often necessary to understand the characteristics of the elements being
used. All of these user subroutines are designed to be called for each integration point where they are applied, and material
routines are also called at each layer point as well. In some of these material routines, you must provide a stress strain law;
the size of which is dependent upon the underlying element technology.
This can be summarized as
Property Options
The Property  options are used to specify additional element characteristics, geometric properties, and associate material
properties with the element and, in some cases, the material orientation. Material behavior is discussed in Chapter 10:
Materials .
For conventional MSC Nastran solutions, one uses what are called the Primary Property options.MTYPE UNAMECalled at Integration
Point Called at Layer PointDependent on
Element Class
MATHE uelastomer Yes Yes Yes
MATUSR hypela2 Yes Yes Yes
MAT1 crplaw Yes Yes No
MATF ufail Yes Yes Yes
MATF uprogfail Yes Yes Yes
MATORT orient Yes No No
MATUSR umat Yes Yes Yes
MCOHE ucohes Yes No No&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes586
Main Index
For nonlinear analysis, it is recommended to used the secondary or auxiliary Property options which are discussed here to
activate the advanced elements that fully support geometric and material nonlinearity. This can be done using the
SPROPNAME capability to automatically map the conventional elements to the advanced formulation. See Automatic
Property Mapping  section.
Element Classes
In MSC Nastran, the elements are divided into classes based upon their dimensionality and function. In structural
applications such as automotive body, aerospace, and civil engineering, the use of shells, beams, and rods is prevalent. In
applications such as generators, rockets, and pressure vessels, axisymmetric elements may be used advantageously; while in
automotive engines, housing, etc., 3-D solid elements dominate.
0-D
0-D elements are a single grid; hence, they do not really have a geometry associated with them. Because of this, no numerical
integration is required.
These elements include:
CELAS1 , CELAS2 , CELAS3 , and CELAS4  (if only one grid identified) – provides a stiffness matrix
CBUSH  (if only one grid identified) – provides a stiffness, damping and mass matrix
CDAMP1 , CDAMP2 , CDAMP3 , and CDAMP4  (if only one grid identified) – provides a damping matrix
CMASS1 , CMASS2 , CMASS3 , and CMASS4  (if only one grid identified) – provides a mass matrix
CONM1  and CONM2  – provides a mass/inertia matrix
Note that only CBUSH  allows the ability to change the stiffness due to the deformation, and hence, is more powerful for
nonlinear analysis.
The property options used with these elements are
Element Conventional Property Auxiliary Property for Nonlinear
CELAS1 PELAS Not Applicable
CELAS2 Not Required Not Applicable
CELAS3 PELAS Not Applicable
CELAS4 Not Required Not Applicable
CBUSH PBUSH Not Required
CDAMP1 PDAMP Not Applicable
CDAMP2 Not Required Not Applicable
CDAMP3 PDAMP Not Applicable
CDAMP4 Not Required Not Applicable&lt;/p&gt;
&lt;p&gt;587 Chapter 11: Element Library
Element Classes
Main Index
1-D Elements – Not Numerically Integrated
1-D elements that have two grid (or scalar) points, but have no geometry, do not need to be numerally integrated. They
effectively represent a spring or damper between two points. These elements include:
CELAS1 , CELAS2 , CELAS3 , and CELAS4  – provides a stiffness matrix
CBUSH  – provides a stiffness, damping and mass matrix.
CDAMP1 , CDAMP2 , CDAMP3 , and CDAMP4  – provides a damping matrix.
Note that only CBUSH  allows the ability to change the stiffness due to the deformation and, hence, is more powerful for
nonlinear analysis.
The property options used with these elements are:
1-D Elements that are Numerically Integrated
Physically, these elements represent slender structures, where the behavior may be considered uniaxial and the stresses in
the other directions are negligible.CMASS1 PMASS Not Applicable
CMASS2 Not Required Not Applicable
CMASS3 PMASS Not Applicable
CMASS4 Not Required Not Applicable
CONM1 Not Required Not Applicable
CONM2 Not Required Not Applicable
Element Conventional Property Auxiliary Property for Nonlinear
CELAS1 PELAS Not Applicable
CELAS2 Not Required Not Applicable
CELAS3 PELAS Not Applicable
CELAS4 Not Required Not Applicable
CBUSH PBUSH Not Required
CBUSH1D PBUSH1D If CID=0 this element supports large rotation
CDAMP1 PDAMP Not Applicable
CDAMP2 Not Required Not Applicable
CDAMP3 PDAMP Not Applicable
CDAMP4 Not Required Not ApplicableElement Conventional Property Auxiliary Property for Nonlinear&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes588
Main Index
These elements include:
Degrees of Freedom for Rods
Global displacement degrees of freedom:
1 = u displacement
2 = v displacement
3 = w displacement
Output of Strains
Uniaxial in the truss member.
Output of Stresses
Uniaxial in the truss member.CROD provides a membrane behavior plus twist, but no bending stiffness. The CROD  element is a 2 -node
element with linear interpolation. One needs to only define the rod cross-section area.
CBAR provides membrane, bending and torsion behavior. The CBAR  is a 2-grid element that supports
linear or nonlinear material behavior. The type of numerical integration along the length and the
numerical integration across the cross section is determined on the PBARN1 .
CBEAM provides general beam behavior. The CEAM  is a 2-grid element that will support linear or nonlinear
material behavior. The type of numerical integration along the length and the numerical integration
across the cross section is determined on the PBEMN1 .
CBEAM3 provides general beam behavior. The CEAM3  is a 3-grid element with quadratic interpolation along
the length, but only supports linear elastic material.
CBEND is a tube element that may also be used as a curved element. The CBEND  is a 2-grid element that
only supports linear elastic material.
2
1
Connectivity of Typical 1-D Element&lt;/p&gt;
&lt;p&gt;589 Chapter 11: Element Library
Element Classes
Main Index
Beam Element Considerations
When beam elements are used in an engineering simulation, the following considerations need to be made:
Beam cross-section definition – this is the same for linear solutions and nonlinear solutions.
Beam section orientation – the beam cross section may be either a solid section, an open section, or a hollow closed
section. The definition of the beam section cross section is the same for classical and advanced elements, but the
numerical procedure is different. When using the advanced elements and closed section cross sections, there is an
additional restriction in that the cross section may have only one cavity.
A detailed description of beam cross section and beam orientations is given in the QRG.
Beam cross-section integration – this is substantially different for nonlinear analysis when the additional property
option. In the case of linear elastic material behavior, the cross section of the beam is integrated to obtain the area,
moments of inertia, and the torsional moment. When nonlinear material models are present, the behavior has to
be integrated through the cross section.
Beam offsets – MSC Nastran has two different methods to apply Beam and Shell offsets:
a.Using rigid elements which is the default.
b.Large rotation method activated by the MDLPRM,OFFDEF,LROFF  – this is the recommended approach for a
nonlinear analysis.
Beam pin codes – this is the same for linear and nonlinear solutions.
Degrees of Freedom for Beams
1 = ux = global Cartesian x-direction displacement
2 = uy = global Cartesian y-direction displacement
3 = uz = global Cartesian z-direction displacement
4 = x = rotation about global x-direction
5 = y = rotation about global y-direction
6 = z = rotation about global z-directionAcceptable Cross Section Illegal Cross section for
Nonlinear Material Behavior&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes590
Main Index
Layer Stresses for Fully Nonlinear Solid Section Beam
1 = zz
2 = zx
3 = zy
The Property  options used with these elements are:
These elements cannot be used with the Hill, Barlat, Linear Mohr-Coulomb, Parabolic Mohr-Coulomb, or the IMPLICIT
CREEP  model specified on the MATEP option.
The user can change the Integration along the length when using PBARN1  or PBEMN1 . The choices are:
Linear/cubic means that linear interpolation of the displacement is used along the axis and cubic displacement variation
normal to the beam axis. This results in linear variation of curvature.1-D
ElementNumber
of GridsNumber of
Integration
PointsInterpolation
Scheme BEH INTConventiona
l PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
Strain SectPermits
Nonlinear
MaterialMarc
Element
CROD 2 1 L ROD L PROD PRODN1* Yes/Yes S Yes 9
CBAR 2 3 LC PROD LC PBAR(L) PBARN1 Yes/No S No 52
CBAR 2 3 LC PROD LC PBAR(L) PBARN1 Yes/No N Yes 52
CBAR 2 1 LC PROD LS PBAR(L) PBARN1 Yes/No S No 98
CBAR 2 1 LC PROD LS PBAR(L) PBARN1 Yes/No N Yes 98
CBEAM 2 3 LC BEAM LC PBEAM(L) PBEMN1 Yes/No S No 52
CBEAM 2 3 LC BEAM LC PBEAM(L) PBEMN1 Yes/No N Yes 52
CBEAM 2 1 LC BEAM LS PBEAM(L) PBEMN1 Yes/No S No 98
CBEAM 2 1 LC BEAM LS PBEAM(L) PBEMN1 Yes/No N Yes 98
CBEAM 2 2 LC BEAM LCC PBEAML PBEMN1 Yes/No N Yes 78
CBEAM 2 2 LC BEAM LCO PBEAML PBEMN1 Yes/No N Yes 79&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When a PRODN1 is used with a CROD to permit nonlinear material behavior, the element behavior changes shuch that it no longer supports torsion.
INT Code Integration Type
LC Linear/Cubic
LCC Linear/Cubic Closed Section
LCO Linear/Cubic Open Section
LS Linear-shear&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;591 Chapter 11: Element Library
Element Classes
Main Index
The CBAR , PBAR , and PBARN1  does not support LCO which requires element warping.
The cross-section behavior can either be specified by entering an S or N on the SECT  option, where N means numerically
integrated and S means smeared. When a nonlinear material behavior needs to be captured, you should use the N option.
Large Displacement/Large Strain
These 1-D elements support large displacement and large rotation. The beam elements do not support large strain in the
sense that the cross-section geometry, whether solid section, open section, or closed section, does not change. The CROD&lt;br&gt;
element does support large strain, but it is assumed to be incompressible such that the volume remains constant, hence:
A*L = A0L0/L
The resultant quantities are always given with respect to an element axis attached to the 1-D element. When large
displacement is included, this is co-rotated with the element.
Planar Continuum Elements
This is a group of elements that include plane stress, plane strain, and axisymmetric elements. The advanced elements
include lower-order and higher-order triangular and quadrilateral elements with a variety of integration schemes that have
the following geometry as shown in the following figure. For all these elements, the output is given with respect to the basic
system.
3
1 2 23
6 5
1 43
1 2
3-node triangular element,
1-point integration point6-node element,
3-point integration point&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes592
Main Index
2-D Planar Plane Stress Elements
MSC Nastran has a set of elements that can be used for 2-D plane stress simulations. Plane stress can be characterized by
no variation through the thickness, and zero stress through the thickness. The coordinates must be aligned with one of the
planes of the basic coordinate system. Besides the topology, one needs to define the thickness; the default is 1.0.
These elements are summarized.
Set BEH=PSTRS  on PSHLN24
13
214
13
21 23 4
4-node quadrilateral,
4-point integration point4-node,
1-point integration point
3 4
1 27
8 6
51 3 24 6 57 9 83
44
1 223
17
8 6
5
8-node quadrilateral,
9-point integration point8-node,
4-point integration point&lt;/p&gt;
&lt;p&gt;593 Chapter 11: Element Library
Element Classes
Main Index
Output of Strains
1 = exx
2 = eyy
3= ezz
4 = gxy
Output of Stresses
1 = sxx
2 = syy
3= szz = 0
4 = txy
These elements cannot be used with the IMPLICIT CREEP  model specified on the MATEP option.Plane Stress
ElementNumber
of GridsNumber of
Integration
PointsInterpolatio
n Scheme BEH INTConvention
al PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
Material*Equivalent
Marc
Element
CTRIA3 3 1 L PSTRS L PLPLANE PSHLN2 Yes/Yes Yes 201
CQUAD4 4 4 L PSTRS L PLPLANE PSHLN2 Yes/Yes Yes 3
CQUAD4 4 1 L PSTRS LRIH PLPLANE PSHLN2 Yes/Yes Yes 114
CTRIA6 6 7 Q PSTRS Q PLPLANE PSHLN2 Yes/Yes Yes 124
CQUAD8 8 9 Q PSTRS Q PLPLANE PSHLN2 Yes/Yes Yes 26
CQUAD8 8 4 Q PSTRS QRI PLPLANE PSHLN2 Yes/Yes Yes 53&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With exceptions
INT Code Integration Type
L Linear
LRIH Linear Reduced Integration
Q Quadratic
QRI Quadratic Reduced Integration
LT Linear with Twist&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes594
Main Index
2-D Plane Strain Elements
MSC Nastran has a set of elements that can be used for 2-D plane strain simulations. Plane strain can be characterized by
no variation through the thickness, and zero strain through the thickness. The coordinates must be aligned with one of the
planes of the basic coordinate system. Besides the topology, one needs to define the thickness; the default is 1.0.
These elements are summarized.
Set BEH=PLSTRN  on PSHLN2 .
Output of Strains
1 = exx
2 = eyy
3= ezz = 0
4 = gxy
Output of Stresses
1 = sxx
2 = syy
3= szz
4 = txy Plane Strain
ElementNumber
of GridsNumber of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for NonlinearLarge
Rotation/
Large StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CTRIA3 3 1 L PLSTRN L PLPLANE PSHLN2 Yes/Yes Yes  6
CTRIA3 4 3 L &amp;amp; Cubic
BubbleIPS L PLPLANE PSHLN2 Yes/Yes Yes  155
CQUAD4 4 4 L PLSTRN L PLPLANE PSHLN2 Yes/Yes Yes  11
CQUAD4 4 1 L PLSTRN LRIH PLPLANE PSHLN2 Yes/Yes Yes  115
CTRIA6 6 7 Q PLSTRN Q PLPLANE PSHLN2 Yes/Yes Yes  125
CQUAD8 8 9 Q PLSTRN Q PLPLANE PSHLN2 Yes/Yes Yes  27
CQUAD8 8 4 Q PLSTRN QRI PLPLANE PSHLN2 Yes/Yes Yes  54
Caution:   The conventional CTRIA  element with BEH=PLSTRN is known to give very poor results when used with
incompressible or nearly incompressible behavior (including rubber materials, elastic-plastic or creep), the
BEH=IPS should be used.&lt;/p&gt;
&lt;p&gt;595 Chapter 11: Element Library
Element Classes
Main Index
2-D Axisymmetric Elements
MSC Nastran has a set of elements that can be used for 2-D axisymmetric simulations. Axisymmetric can be characterized
as having no variation in the circumferential direction. The coordinates must be aligned with the basic X-Y system; which
is interpreted as the R-Z system. Nonlinear analysis does not support superposition, so the use of Harmonic (Fourier)
analysis to describe a load variation in the circumferential direction is not supported. Do not use the PAXSYMH  property
option. These elements are summarized.
Set BEH=AXISOLID  on PSHLN2
Output of Strains
1 = err
2 = ezz
3= eqq
4 = grz
Output of Stresses
1 = srr
2 = szz
3 = sqq
4 = trz
To apply a distributed load on this element one needs to apply the pressure using PLOADX1 . Note that the distributed
loads are integrated over one radian. Hence, any point force applied should also be prescribed over one radian.Axisymmetric
ElementNumber
of GridsNumber of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CTRIAX 3 1 L AXISOLID L PLPLANE PSHLN2 Yes/Yes Yes 2
CTRIAX 4 4 L &amp;amp; Cubic
BubbleIAX L PLPLANE PSHLN2 Yes/Yes Yes 156
CQUADX 4 4 L AXISOLID L PLPLANE PSHLN2 Yes/Yes Yes 10
CQUADX 4 1 L AXISOLID LRIH PLPLANE PSHLN2 Yes/Yes Yes 116
CTRIAX 6 7 Q AXISOLID Q PLPLANE PSHLN2 Yes/Yes Yes 126
CQUADX 8 9 Q AXISOLID Q PLPLANE PSHLN2 Yes/Yes Yes 28
CQUADX 8 4 Q AXISOLID QRI PLPLANE PSHLN2 Yes/Yes Yes 55&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes596
Main Index
2-D Axisymmetric Elements with Twist
MSC Nastran has a set of elements that can be used for 2-D axisymmetric simulations with twist. Axisymmetric can be
characterized as having no variation in the circumferential direction; that is, these elements uniformly twist in the
circumferential direction. The coordinates must be aligned with the basic X-Y system; which is interpreted as the R-Z
system. Nonlinear analysis does not support superposition, so the use of Harmonic (Fourier) analysis to describe a load
variation in the circumferential direction is not supported. Do not use the PAXSYMH  property option. These elements
are summarized.
Set BEH=AXISOLID  on PSHLN2 .
Output of Strains
1 = err
2 = ezz
3= eqq
4 = grz
5 = gzq
6 = gqz
Output of Stresses
1 = srr
2 = szz
3 = sqq
4 = trz
5 = tzq
6 = tqz Caution:   The conventional CTRIA  element with BEH=AXISOLID is known to give very poor results when used with
incompressible or nearly incompressible behavior (including rubber materials, elastic-plastic or creep), the
BEH=IAX should be used.
Axisymmetric with Twist
ElementNumber
of GridsNumber
of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CQUADX 4 4 L AXISOLID LT PLPLANE PSHLN2 Yes/Yes Yes 20
CQUADX 8 9 Q AXISOLID QT PLPLANE PSHLN2 Yes/Yes Yes 67&lt;/p&gt;
&lt;p&gt;597 Chapter 11: Element Library
Element Classes
Main Index
Note the displacements for this element are Ur, Uz, and U which represents the angular displacement about the symmetry
axis measured in radians. This is given as the third degree of freedom, and all torques or single points constraints on this
quantity should be treated as the third degree of freedom.
Large Displacement/Large Strain
All of the 2-D plane stress, plane strain, axisymmetric, and axisymmetric with twist support large displacements and large
rotations. For plane stress elements, the thickness of the element is updated due to the in-plane membrane distortion.
The output of the results is always in the basic coordinate system.
Axisymmetric Shell Elements
MSC Nastran does support the use of axisymmetric shell elements that is entered as the CAXISYM  in SOL 400. This
element may be used as either a 2-node linear element or a 3-node quadratic element. It is not available for the classical
linear solution sequences. The CCONEAX  may be used for linear solution sequences, but it should not be used in
nonlinear solution sequences.&lt;br&gt;
To apply a distributed load on this element, one needs to apply the pressure using PLOADX1 . Note that the distributed
loads are integrated over one radian. Hence, any point force applied should also be prescribed over one radian.
Set BEH=AXISOLID  on PSHLN2 .
Output of Strains
1 = s = meridional membrane
2 = q = circumferential membrane
3 = t = transverse shear strain
Output Of Stresses
1 = s = meridional stress
2 = q = circumferential stress
3 = t = transverse shear stress
The degrees of freedom for this element are:  Ur, Uz, UtAxisymmetric Shell
ElementNumber
of
GridsNumber
of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CAXISYM 2 2 L AXISOLID L PLPLANE PAXISYM Yes/Yes Yes 1
CAXISYM 3 1 Q AXISOLID Q  PLPLANE PAXISYM Yes/Yes Yes 89&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes598
Main Index
3-D Membrane, Plate, and Shell Elements
In MSC Nastran terminology, these are considered to be 3-D plane stress type elements. In Patran terminology, because
topologically they are not volumes they are labeled as 2-D elements. In MSC Nastran, the definition of membranes, plates,
and shells are done through the same topological classes. These element satisfy plane-stress conditions as the normal stresses
through the thickness are zero.
These elements exhibit significant differences between the classic and the advanced formulation. MSC Nastran has multiple
flavors of these elements:
Homogeneous linear behavior for combined membrane, bending and transverse shear.
Homogeneous linear behavior for pure membrane or bending or transverse shear.
Non-homogeneous linear behavior for combined membrane, bending and transverse shear.
Homogeneous nonlinear behavior for combined membrane, bending and transverse shear.
Homogeneous nonlinear behavior for membranes.
Layered (composite) behavior where material behavior is linear.
Layered (composite) behavior where material behavior is nonlinear.
Here, the word Homogeneous refers to througn the thickness direction. One can use user subroutines to vary the material
behavior over the surface of a membrane or shell element.
Material Nonlinear Behavior
If nonlinear material occurs in the model, the recommended solution is to use PSHLN1  and when using composites, LAM
on the PCOMP  or PCOMG  should not be set to SMEAR  or SMCORE .
Additionally, the NOCOMPS  parameter should be set to 1 to insure that the ply stresses, strains and failure indices are
calculated and available for output.
The treatment of composites materials and integration through the thickness will be treated in Chapter 10: Materials.
Pure Membrane Behavior
If pure membrane behavior is required than set BEH=MB  on the PSHLN1  option. This results in a membrane element
which utilizes only the translational degrees of freedom. This formulation has no resistance to bending and caution may be
required to insure non-singular behavior. When Large Displacement is set, the differential stiffness matrix is created and
for tension based structures; such as balloons, a stable system will occur.
3-D Membrane Elements
ElementNumber
of GridsNumber of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CTRIA3 3 1 L MB L PSHELL PSHLN1 Yes/Yes Yes 158
CQUAD4 4 4 L MB L PSHELL PSHLN1 Yes/Yes Yes 18&lt;/p&gt;
&lt;p&gt;599 Chapter 11: Element Library
Element Classes
Main Index
Output of Strains
1 = exx
2 = eyy
3= exy
Output of Stresses
1 = sxx
2 = syy
3 = txy
Shells
There are two classes of advanced shell elements in MSC Nastran SOL 400.
The first group (marked LDK) is thin shell elements based upon Kirchhoff theory. The second group (marked L, LRIH,
and QRI) is thick shell elements that support transverse shears based upon Mindlin theory. There are the preferred elements
for composite simulation.CTRIA6 6 7 Q MB Q PSHELL PSHLN1 Yes/Yes Yes 200
CQUAD8 8 9 Q MB Q PSHELL PSHLN1 Yes/Yes Yes 30&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With exceptions
3-D Shell
ElementNumber
of GridsNumber of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
Material*Equivalent
Marc
Element
CTRIA3 3 1 L DCTN LDK PSHELL or
PCOMP or
PCOMPGPSHLN1 Yes/Yes Yes 138
CQUAD4 4 4 L DCT  L PSHELL or
PCOMP or
PCOMPGPSHLN1 Yes/Yes Yes 75
CQUAD4 4 1 L DCT LRIH PSHELL or
PCOMP or
PCOMPGPSHLN1 Yes/Yes Yes 140
CQUAD4 4 4 L DCTN LDK PSHELL or
PCOMP or
PCOMPGPSHLN1 Yes/Yes Yes 139
CQUAD8 8 4 Q DCT QRI PSHELL or
PCOMP or
PCOMPGPSHLN1 Yes/Yes Yes 22&lt;/li&gt;
&lt;li&gt;With exceptions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes600
Main Index
The output of strains and stresses are given with respect to a coordinate system attached to the element. This coordinate
system is updated with the deformation if the LGDISP  parameter is activated.
Output of Strains
1 = xx
2 = yy
3 = zz
4 = xy
5 = yz for thick shell only
6 = zx for thick shell only
Output of Stresses
1 = xx
2 = yy
3 = zz = 0
4 = xy
5 = yz for thick shell only
6 = zx for thick shell only
These elements cannot be used with the IMPLICIT CREEP  model specified on the MATEP option.
Large Displacement/Large Strain
Whether one uses the classical MSC Nastran formulation or the advanced element formulation, these elements support
large displacement and large rotations. When using the advanced element formulation, the membrane strains may become
large, but the curvature strains remain small. The bending versions of these elements always satisfy the Kirchhoff
assumptions that the normal to the shell remains normal and plane through the thickness remains a plane. If either of these
assumptions are violated, one effectively has a three dimensional stress distribution, and one should use solid elements.INT Code Integration Type
LDK Linear Displacement and Rotation, Kirchhoff theory (thin shell)
L Linear Displacement and Rotation
LRIH Linear Displacement and Rotation, Reduced Integration
QRI Quadratic Displacement and Rotation, Reduced Ingetration&lt;/p&gt;
&lt;p&gt;601 Chapter 11: Element Library
Element Classes
Main Index
Shear Panel
MSC Nastran supports a 4-node shear panel element for linear analysis. Here, linear analysis means small deformation and
linear isotropic elastic material.
While SOL 400 has an alternative formulation when PSHEARN  is entered, it provides a membrane formulation to the
element. It is not recommended that one uses the PSHEARN  option in SOL 400.
3-D Solid Shell Element
The solid shell element is an element that may be used for structural problems that transition between shell behavior and
solid behavior. The element appears like a CHEXA element and is input using this option, but it is an oriented element
such that it has very good bending characteristics.
The solid shell element uses different integration schemes in the plane of element and in the thickness direction of element:
In the element plane, it uses a reduced integration scheme with single integration point. An additional
variationally consistent stiffness term is included to eliminate the hourglass modes that are normally associated
with reduced integration.
In the thickness direction, the element is integrated numerically using different number of points through the
element thickness based upon if it is COMPOSITE or NON-COMPOSITE material.
For non-composite material, the numerical integration is done by using Simpson’s rule with n points, the first and
last points are located on the top and bottom surface. The number of the integration points along the thickness
can be controlled by using BULK DATA ENTRY
PARAM, NLAYERS, n.
If it is not specified (i.e., if NLAYERS = 0), in SOL400, the number of layers is set to 5. One integration point is
used per layer (at the center of the layer). For heat transfer/coupled analysis, the default number of layers cannot
exceed is 7.
For composites, the number of layers are specified via the PCOMPLS card. Three integration points are used for
each layer at top, center and bottom of each layer, respectively.  &lt;br&gt;
Figure 11-1 demonstrates the arrangement of the integration schemes for non-composite and composite.
The element relaxes the Kirchhoff shell assumptions that normal remain normal, and it results in a full (6-component) stress
state. The element may be used either as a homogenous material or as a composite (layered) material. It is not necessary to
define the thickness because this is obtained directly from the coordinates.
The element system has a local coordinate system which is updated with large displacements. In versions prior to the MSC
Nastran 2014 release, the results were given with respect to the basic coordinate system. Currently, the results are given with
respect to the local system.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes602
Main Index
Figure 11-1  Connectivity and Integration Points for Composite and Non Composite Materials
Output of Strains
1 = xx
2 = yy
3 = zz
4 = xy
5 = yz
6 = zx
Output of Stresses
1 = xx
2 = yy
3 = zz
4 = xy
5 = yz
6 = zx
For a homogeneous material, use PSLDN1 .
Set BEH=SLCOMP  on PSLDN1
ElementNumber of
GridsIntegration –
INTConventional
PropertyAuxiliary
Property for
NonlinearLarge
Rotation/
Large StrainPermits
Nonlinear
Material
CHEXA 8 ASTN
1 per layer
Assumed StrainPSOLID PSLDN1 Yes /Yes Yesζ
η
ξ
Integration Point1
2345
678
First Layer (5-6-7-8 face)
Last Layer (1-2-3-4 face)Non Composite
Side ViewComposite
Side View
Bending
Strain
Continuousζ
1
2
3
4
521
34
5
67
8
9101112&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P32</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_032/</guid>
      <description>
        
        
        &lt;p&gt;603 Chapter 11: Element Library
Element Classes
Main Index
For a layered composite material, use PCOMPLS . Note in the previous figure that for each layer, there are three layer points,
which allows an accurate calculation of the interlaminar shear.
3-D Volumetric Solid Elements
MSC Nastran has a set of elements that can be used for 3-D volumetric/solid simulations. These simulation are
characterized by having no dominate geometric direction and a complete (6-component) stress state. The advanced
elements include lower- and higher-order tetrahedral, pentahedral, and hexahedral elements with a variety of integration
schemes that have the following geometry.
Output of Strains
1 = xx
2 = yy
3 = zz
4 = xy
5 = yz
6 = zx
Output of Stresses
1 = xx
2 = yy
3 = zz
4 = xy
5 = yz
6 = zx ElementNumber of
GridsIntegration –
INTConventional
PropertyAuxiliary
Property for
NonlinearLarge
Rotation/
Large StrainPermits
Nonlinear
Material
CHEXA 8 ASTN
1 per layer
Assumed StrainPCOMPLS Yes /Yes Yes&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes604
Main Index
34
2134
10
8
79
6
5
21
234
X3
X1X2X44-node tetralhedral element,
1-point integration10-node tetrahedral element integration
4-point integration&lt;/p&gt;
&lt;p&gt;605 Chapter 11: Element Library
Element Classes
Main Index
++
+
+
+4
46
6
55
3
31
1
2+
+2
6-node pentahedral,
6-point integration15-node pentahedral,
21-point integrationG6
G14 G15
G12
G13G4 G5
G11
G2G7G9 G8G3 G10
G1
67
21
243687
5
14
38
5
8-node hexahedral,
8-point integration41
32
156
7
8
8-node hexahedral,
1-point integration&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes606
Main Index
These elements are summarized.
Set BEH=SOLID  on PSLDN1  unless indicated otherwise
3-D Solid
ElementNumber
of
GridsNumber
of
Integration
PointsInterpolation
Scheme BEH INTConventional
PropertyAuxiliary
Property
for
NonlinearLarge
Rotation/
Large
StrainPermits
Nonlinear
MaterialEquivalent
Marc
Element
CTETRA 4 1 L SOLID L PSOLID PSLDN1 Yes/Yes Yes  134
CTETRA 4 4 L &amp;amp; CUBIC ISOL L PSOLID PSLDN1 Yes/Yes MATEP 157
CPENTA 6 6 L SOLID L PSOLID PSLDN1 Yes/Yes Yes  136
CHEXA 8 8 L SOLID L PSOLID PSLDN1 Yes/Yes Yes  7
CHEXA 8 1 L SOLID LRIH PSOLID PSLDN1 Yes/Yes Yes  117
CTETRA 10 9 Q SOLID Q PSOLID PSLDN1 Yes/Yes Yes  127
CTETRA 10 4 Q SOLID LRIH PSOLID PSLDN1 Yes/Yes Yes  184
CPENTA 15 21 Q SOLID Q PSOLID PSLDN1 Yes/Yes Yes  202
CHEXA 20 27 Q SOLID Q PSOLID PSLDN1 Yes/Yes Yes  21
CHEXA 20 8 Q SOLID QRI PSOLID PSLDN1 Yes/Yes Yes  57456
87
2
319
10
111213
14
1516
1718
19
20
20-node hexahedral,
27-point integration20-node hexahedral,
8-point integrationG18
G6
G17
G4 G12
G1G11G8G19G7
G2
G9G5G20
G10
G3G15
G16
G13G14&lt;/p&gt;
&lt;p&gt;607 Chapter 11: Element Library
Element Classes
Main Index
Composite Solid Elements
There are a series of continuum elements that may also be used to model composite materials and are also used for gasket
simulations. These elements are available for plane strain, axisymmetric, and three-dimensional behavior. These elements
are conventional from the degrees of freedom perspective and the interpolation functions. What makes them different from
conventional elements is that in one direction, there are multiple layers that support multiple materials. The advantage of
these elements are that they are relatively easy to use, but it should be recognized that they are not tuned for bending
behavior and multiple elements through the thickness may be required.
To activate the characteristics of these elements for composites, one needs to specify additional Property  data.Caution:   The conventional CTETRA  element with BEH=SOLID is known to give very poor results when used with
incompressible or nearly incompressible behavior (including rubber materials, elastic-plastic or creep), the
BEH=ISO should be used.
ElementNumber
of GridsIntegration
– INT Property for
Nonlinear BEHLarge
Rotation/
Large
StrainPermits
Nonlinear
Material
Plane Strain
CQUAD4 4 L 2 per layer PLCOMP COMPS Yes/Yes Yes
CQUAD8 8 Q 2 per
layerPLCOMP COMPS Yes/Yes Yes
Axisymmetric
CQUADX 4 L 2 per layer PLCOMP AXCOM
PYes/Yes Yes
CQUADX 8 Q 2 per
layerPLCOMP AXCOM
PYes/Yes Yes8-node or 20-node solid continuum composite elements1 237 8
5 6
DIRECT = +3
ply 2ply 3
ply 3Y
DIRECT = +21 237
6
ply 1ply 2ply 37
58
2
ply 1ply 2
ply 138
6 5
1
DIRECT = +1z
x&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes608
Main Index
Gasket Elements
The lower-order continuum composite elements are also used to model gasket materials. When used in this manner, the
number of layers is one and the material is defined through the MATG  option discussed in Chapter 10: Materials. Only
CHEXA8 can be used in SOL 400. I t is not necessary that the elements match the mesh in the surrounding material. One
may utilize the contact capability to overcome the mesh incompatibility.
Interface Elements
There are a series of elements that are used to model the onset and progression of delamination of the bonding materials
using the Cohesive Zone Method. These elements are available for plane strain, axisymmetric, and three-dimensional
behavior. From a meshing perspective, these elements are unique because one can enter a zero thickness. The interface
elements provide two integration schemes. The first uses the conventional Gaussian integration scheme while the other uses
a nodal lumping scheme (Lobatto-Cotes). The latter scheme may be advantageous when the interface material is relatively
stiff compared to the surrounding material.
Note that the orientation of the element dictates the direction of the interface/delamination. It is not necessary that the
elements match the mesh in the surrounding material. One may utilize the contact capability to overcome the mesh
incompatibility. The material properties are defined using the MCOHE  material model which is described in Chapter 10:
Materials, Cohesive Zone Modeling (MCOHE) . Note that delamination simulations are highly nonlinear and one must
exercise caution in applying the boundary conditions.  Hexahedral
CHEXA 8 L 4 per layer PCOMPLS SLCOMP Yes/Yes Yes
CHEXA 20 Q 4 per
layerPCOMPLS SLCOMP Yes/Yes Yes
ElementNumber
of GridsIntegration
– INTConventional
PropertyAuxiliary
Property for
Nonlinear BEHLarge
Rotation/
Large
StrainPermits
Nonlinear
Material
Plane Strain
CQUAD4 4 L 2 per layer PLPLANE PSHNL2 COMPS Yes/No MATG
Axisymmetric
CQUADX 4 L 2 per layer PLPLANE PSHNL2 AXCOMP Yes/No MATG
Hexahedral
CHEXA 8 L 4 per layer PSOLID PSLDN1 SLCOMP Yes/No MATGElementNumber
of GridsIntegration
– INT Property for
Nonlinear BEHLarge
Rotation/
Large
StrainPermits
Nonlinear
Material&lt;/p&gt;
&lt;p&gt;609 Chapter 11: Element Library
Element Classes
Main Index
The element is written with respect to a local coordinate system, relating the relative displacement and the normal and shear
traction. The output is given with respect to the local coordinate system. This system is updated (rotated) when large
displacement is used. The element does not include a mass matrixor a geometric or initial stress stiffness matrix. It also does
not support application of distribute loads.
The higher-order elements are not fully quadratic; they are quadratic in the plane of the interface but linear through the
thickness.
The elements are shown below.
2
143
v˜2v˜1
4-node linear planar interface element4
8157236
˜1

˜2
8-node quadratice planar interface element
2 14 3
Gaussian integration scheme
Nodal lumping scheme2 14 31 2
1 2
Integration point schemes for linear interface element3
6
2 57 4
8
Element mid-line1
1 2 3
Gauss Integration Scheme1 2 3
Newton-Cotes/Lobatto Integration Scheme&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Element Classes610
Main Index
214
3
v˜2v˜1
5
678
v˜3
8-node linear 3-D interface element214
3
v˜2v˜1
5
678
v˜3
91011
12
171819
20
13
141516
20-node quadratic interface element
1
23
4
1
243
Newton-Cotes/Lobatto Integration SchemeGauss Integration SchemeElement Mid-plane8
4
7
3
6
25
1

Integration point schemes for linear 3-D interface element&lt;/p&gt;
&lt;p&gt;611 Chapter 11: Element Library
Element Classes
Main Index
ElementNumber of
Grids Integration – INT Property for
NonlinearLarge
Rotation/
Large StrainPermits
Nonlinear
Material Marc Element
Plane Strain
CIFQUAD 4 2
LPCOHE Yes/No MCHOE 186
CIFQUAD 8 2
Q/LPCOHE Yes/No MCHOE 187
Axisymmetric
CIFQDX 4 2
LPCOHE Yes/No MCHOE 190
CIFQDX 8 2
Q/LPCOHE Yes/No MCHOE 191
Solid
CIFPENT 8 3
LPCOHE Yes/No MCHOE 1921
37
9
1
397
Newton-Cotes/Lobatto Integration SchemeGauss Integration SchemeElement Mid-plane8
4
7
3
6
25
1

2458
6
24
5
68
Integration point schemes for quadratic 3-D interface element&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Property Mapping612
Main Index
Output of Strain
The three strain components are given at the element integration points. They are determined by the relative displacements
between the top and bottom face and are given in the local element system:
1 = utop - ubottom
2 = vtop - vbottom
3 = wtop - wbottom  for 3-D element only
Output of Stress
1 = n
2 = s1
3 = s2 for 3-D element only
Large Displacement/Large Rotation
These elements support large displacements and large rotations. It should be noted that there is no differential (initial) stress
stiffness associated with this element.
Automatic Property Mapping
The “SPROPMAP ” keyword in the NLMOPTS bulk data entry provides a convenient option to automatically flag secondary
properties like PBARN1 , PBEMN1 , PRODN1 , PSHEARN , PSHLN1 , PSHLN2 , and PSLDN1 . Note that these secondary property
entries expose the user to a set of sophisticated 2-D continuum, 3-D beam, shell, and continuum elements in SOL 400.
The rules governing the flagging of the additional properties are many and are a function of the problem dimension,
material type and procedure. All these rules have been incorporated into the automatic flagging option. These are briefly
summarized in the following table:CIFPENT 15 6
Q/LPCOHE Yes/No MCHOE 193
CIFHEX 8 4
LPCOHE No MCHOE 188
CIFHEX 20 8
Q/LPCOHE No MCHOE 189ElementNumber of
Grids Integration – INT Property for
NonlinearLarge
Rotation/
Large StrainPermits
Nonlinear
Material Marc Element&lt;/p&gt;
&lt;p&gt;613 Chapter 11: Element Library
Automatic Property Mapping
Main Index
Secondary
PropertyPrimary
Property Dimension Material NotesUnsupported
Features of
Primary Entry
PBARN1 PBARL 1-D MAT4 Note 4
MATS1 Note 1
MATEP
MATF
MATSMA Note 2
MATVE
MATVP Note 3
PBEMN1 PBEAML 1-D MAT4 Note 4 Tapered Sections
MATS1 Note 1
MATEP
MATF
MATSMA Note 2
MATVE
MATVP Note 3
PRODN1 PROD 1-D MAT4 Note 4 J,C
MATS1 Note 1
MATEP
MATF
MATSMA Note 2
MATVE
MATVP Note 3
PSHEARN PSHEAR 3-D MAT4 Note 4 F1,F2
MAT8
MATS1 Note 1
MATS8 Note 1
MATEP
MATF
MATORT
MATSMA Note 2
MATVE
MATVP Note 3&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Property Mapping614
Main Index
PSHLN1 PSHELL 3-D MAT4 Note 4 TS/T , nondefault Z1
and Z2, 121/T3MAT5 Note 4
MATS1 Note 1
MATS8 Note 1
MATEP
MATF
MATORT
MATSMA Note 2
MATVE
MATVP Note 3
PSHLN1 PCOMP/
PCOMPG3-D MAT4 Note 4 FT, GE, LAM options
other than BLANK
and SYM, SOUTiMAT5 Note 4
MAT8
MATS1 Note 1
MATS2 Note 1
MATS8 Note 1
MATEP
MATF
MATORT
MATSMA Note 2
MATVE
MATVP Note 3Secondary
PropertyPrimary
Property Dimension Material NotesUnsupported
Features of
Primary Entry&lt;/p&gt;
&lt;p&gt;615 Chapter 11: Element Library
Automatic Property Mapping
Main Index
PSHLN2 PLPLANE 2-D MAT4 Note 4
MAT5 Note 4
MATG Note 5
MATS1 Note 1
MATS3 Note 1
MATS8 Note 1
MATEP
MATF
MATORT
MATSMA Note 6
MATVE
MATVP Note 7
PLCOMP PLPLANE 2-D MAT4 Note 4
MAT5 Note 4
MATEP
MATF
MATORT
MATSMA
MATVE
MATVP
PSLDN1 PSOLID 3-D MAT4 Note 4 IN, ISOP , FCTN
MAT5 Note 4
MATS1 Note 1
MATEP
MATF
MATORT
MATSMA
MATVE
MATVPSecondary
PropertyPrimary
Property Dimension Material NotesUnsupported
Features of
Primary Entry&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automatic Property Mapping616
Main Index
The “SPROPMAP ” does not support MATDIGI
Please refer to the Remark 8, related to SPROPMAP , in NLMOPTS  (p.2303) in the . The NLMOPTS entry has more
information on property mapping. Note:   1.Only when NLMOPTS, LRGSTRN, 1 is flagged or HGENPLAS is provided NLSTEP
entry for coupled analysis.
2.For shape memory materials, define through MATSMA only the thermo-mechanical
model is available.
3.For creep, define through MATVP, VALC=0 must be set on NLMOPTS for explicit
formulation.
4.Only when phase changes are flagged.
5.Gasket materials for BEH4=COMPS or AXCOMP,INT4=L.
6.For shape memory materials, define through MATSMA and BEH=PLSTRS only the
thermo-mechanical model is available.
7.For creep, define through MATVP and BEH=PLSTRS VALC=0 must be set on
NLMOPTS for explicit formulation.&lt;/p&gt;
&lt;p&gt;617 Chapter 11: Element Library
Patran Interface
Main Index
Patran Interface
Modeling Guidelines
Finite element modeling in many ways is more like an art than a science since the quality of the results is dependent upon
the quality of your model. One of the more common errors that a beginning finite element analyst makes in modeling is
to simply simulate the geometry rather than to simulate both the geometry and the physical behavior of the real structure.
The following modeling guidelines are provided to put a little more science back into the art of finite element modeling:
Choosing the right element
Mesh density
The above guidelines are by no means complete; however, they do serve as a good starting point. There is no better
substitute for good modeling than experience. It is also good modeling practice to simulate and validate a new capability
or a feature that you have not used before with a small prototype model before applying this feature to your production
model. Model verification techniques are covered in Model Verification  (Ch. 10) in the MSC Nastran Linear Static Analysis
User’s Guide.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Modeling Guidelines618
Main Index
Choosing the Right Element
MSC Nastran contains a large library of structural elements.  In many situations several elements are capable of modeling
the same structural effects.  The criteria for the selection of an element may include its capabilities (for example, whether
it supports anisotropic material properties), its cost (in general, the more degrees of freedom an element has, the more
expensive it is), and/or its accuracy.
In many cases the choice of the best element for a particular application may not be obvious. For example, in the model of
a space frame, you may choose to use CROD  elements if end moments are unimportant or to use CBAR  elements if end
moments are important. You may choose to use CBEAM  elements with warping if the members have open cross sections
and torsional stresses are estimated to be significant. You may even choose to represent the members with built-up
assemblies of plate or solid elements. The choice of which type and number of elements to use depends primarily on your
assessment of the effects that are important to represent in your model and on the cost and accuracy you are willing to
accept.
For modeling solid structures, whether 2-D planar or 3-D, the solid element formulation (fully integrated, assumed strain,
reduced integration, etc.) is critical to getting an accurate answer. Shear locking can make it difficult to get the right answer
in bending dominated problems, which is why MSC Nastran uses assumed strain elements by default. Similarly, when
modeling materials that are incompressible or may behave as incompressible (such as when undergoing extensive plasticity)
using elements properly formulated to handle the special problems of incompressibility (such as Herrmann elements) is
important.
In this context, it is critical that you have a fairly good idea of how the structure will behave prior to generating your finite
element model. The best source of such insight is usually experience with similar structures. In other words, understanding
the load path is crucial in the selection of the appropriate element. In addition, a few hand calculations can usually provide
a rough estimate of stress intensities. Such calculations are always recommended. If you do not have a fairly good idea of
how the structure will behave, you may be misled by incorrect results due to errors or incorrect assumptions in your input
data preparation.
The following guidelines are provided to help you in selecting the “right” element for your task.
General Guidelines
Always experiment with a small test model when using elements that you are not familiar with.  This practice is cheaper
than experimenting with a large production model, and it gives you a better understanding of an element’s capabilities and
limitations prior to applying it to a large production model.
Zero-Dimensional Elements
When you use CELASi  elements to represent concentrated springs between two components of translation, the directions
of the two components must be coaxial. Even small deviations in direction can induce a significant moment to your model
that does not exist in your physical structure. It is recommended that when a CELASi  element is used, the locations of the
two end points be coincident in order to avoid this type of problem. If the two end points are not coincident, you should
consider using a CROD  or CBUSH  element instead.&lt;/p&gt;
&lt;p&gt;619 Chapter 11: Element Library
Modeling Guidelines
Main Index
One-Dimensional Elements
If only an axial and/or torsion load is to be transmitted in an element, then the CROD  is the easiest element to use.
A CBAR  is easier to use than a CBEAM  element. The I1 and/or I2 values can be set to zero.
Use the CBEAM  element instead of the CBAR  element if any of the following features is important:
The cross-sectional properties are tapered.
The neutral axis and shear center do not coincide.
The effect of cross-sectional warping on torsional stiffness is critical.
The difference in the mass center of gravity and the shear center is significant.
The formulation for the CBEAM  element is based on a flexibility approach; the element stiffness matrix is generated by
inverting the flexibility matrix. For this reason, I1 and I2 must not be zero for the CBEAM  element.
CBEAM3  elements favor a structure with initial curvatures and with high order shell elements.
Two-Dimensional Elements
In general, quadrilateral elements ( CQUAD4  and CQUAD8 ) are preferred over the triangular elements ( CTRIA3  and
CTRIA6 ). The CTRIA3  element is a constant strain element. It is excessively stiff, and when used alone, it is generally less
accurate than the CQUAD4  element, particularly for membrane strain. Whenever feasible, the CQUAD4  element should
be used instead of the CTRIA3  element. CTRIA3  should only be used when necessary for geometric or topological reasons,
for example, mesh transition between regions of quadrilateral elements with different meshes or near the polar axis of a
spherical shell.
Avoid using CTRIA3  in locations where the membrane stresses are changing rapidly, for example, in the web of an I -beam.
Since CTRIA3  has constant membrane stresses, a large number of them may be needed to obtain acceptable accuracy. It is
better to use quadrilateral elements or CTRIA6  elements, if possible.
Do not use plate or shell elements ( CQUADi , CTRIAi ) in stiffened shell structures with very thin panels that can buckle.
Shear panels ( CSHEAR ) should be used in this case or in any situation where direct stresses cannot be supported, such as
in a very thin curved panel.
Avoid highly skewed elements (see Figure 11-2).  The angle should be as close to 90° as possible.
Figure 11-2  Highly Skewed Element
For the CTRIA3 element, the skew test is based upon the three vertex angles.
Aspect ratio is defined as l/(length/width). Very high aspect ratio (see Figure 11-3) should also be avoided, although it is
no longer true that accuracy degrades rapidly with aspect ratios as it once did with some of the obsolete elements.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Modeling Guidelines620
Main Index
Figure 11-3  Element with High Aspect Ratio
Warping is a measure of the amount the element deviates from being planar (see Figure 11-4).  Element warping should be
minimized.
Figure 11-4  Highly Warped Element
For the CQUAD8  elements, if midside nodes are present, they should be located within the middle third of the edge. If a
midside node is located at one-fourth the distance of the edge as measured from either corner node on the edge, the internal
strain field becomes singular at the corners of the element. For best results, it is recommended that the midside node be
located as close to the center of the edge as possible.
Figure 11-5  CQUAD8 with Missing Midside Node
For single curved structures (e.g., a cylinder), the CQUAD8 , in general, yields better results than the CQUAD4  element.
For doubly curved structures (e.g., a spherical dome), the CQUAD4  element, in general, performs better than the
CQUAD8  (see [Ref. 1]).
The shell normal (param,snorm,x) should be turned on when using the CQUAD4  or CTRIA3 ,  element. See Shell
Normals  for further details.l

Element Mid-Plane&lt;/p&gt;
&lt;p&gt;621 Chapter 11: Element Library
Modeling Guidelines
Main Index
Shell Normals
By default, the direction of the normal rotation vector for flat plate elements is assumed to be perpendicular to the plane
of each element. If the model is curved, the shell bending and twist moments must change direction at the element
intersection. If transverse shear flexibility is present, the deformations may be too large. (Because elements using low -order
formulations ignore the edge effect, this rarely causes any problems – the default value of 100 on the parameter K6ROT
partially cures the problem.) With the unique normal ( SNORM ) option, the rotational degrees of freedom at each corner of
an element are measured relative to the specified normal vector direction. Thus, all elements connected to a grid point will
use a consistent direction for defining shell bending and twisting moments.
In CQUAD4  and CTRIA3  elements, the stiffness matrices of the elements are modified to eliminate the undesirable small
stiffness in the rotational motions about the shell normal vector. In effect, the transformation replaces the normal moments
with in-plane forces. No changes were made to the basic element stiffness matrix, and therefore flat plate models will not
be affected. The objective of the new transformation was to remove a potential weakness in curved shell models and allow
the automatic constraint process to remove the true singularity in the assembled stiffness matrix.
Shell normals are available for CQUAD4  and CTRIA3  elements. Normals are activated if the actual angle between the local
element normal and the unique grid point normal is less than 20°, the default value for  (see Figure 11-6.) The default for
can be changed by setting PARAM,SNORM , to the desired real value up to 89 degrees. The unique grid point normal
is the average of all local shell element normals at a specific grid point. Generated grid point normals may be overwritten
by user-defined normals.
Figure 11-6  Unique Grid Point Normal
A shell normal defines a unique direction for the rotational degrees of freedom of all adjacent elements.  A shell normal
vector is created by averaging the normal vectors of the attached elements.  If the actual angle is greater than the value
defined on PARAM,SNORM , (default =20.) the edge is assumed to be a corner, and the old method is used. Shell normals
improve the accuracy of the results in curved shells where in-plane shear and twisting moments act together.
If the actual shell normal vector is known, such as in a cylinder or sphere, the automatically calculated values may be
superseded by the actual vectors using the bulk data entry
 
Grid Point
Normal
Shell 1 Normal Shell 2 Normal
Shell 1 Shell 2 &lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Modeling Guidelines622
Main Index
SNORM,GID,CID,V1,V2,V3
where GID is a unique grid point, CID is the coordinate system for defining the shell normal vector and V1, V2, and V3 are
unscaled components of the vector in the coordinate system.
A second parameter, SNORMPRT , controls the print or punch of values of the internal shell normals. The output format
is the same as the SNORM bulk data so that the individual values may be used and modified on a subsequent job.
Remarks and Recommendations
The following remarks are applicable to the shell normal option:
1.The type of structure that exhibits the most change in results is a thick curved shell with large in-plane shear forces
and twisting moments.
2.Most other problems, such as flat plates and curved shells with pressure loads, show changes in results of less than
1%.  More degrees of freedom may be constrained using this improved formulation. This formulation results in
zero in-plane rotational stiffness values.
3.It has been observed from testing that the automatic normal vector calculations produced answers nearly equal to
and as accurate as those using the explicit SNORM  vector input. In other words, the results were insensitive to small
differences in the direction of the vectors. The important fact is that the shell normal vector requires the connected
elements to use a consistent normal direction.
4.The CQUAD8  and CTRIA6  elements are not included in the shell normal processing. If they are modeled
correctly, they do not require shell normal processing. Connecting these elements to the lower-order flat elements
is not recommended.
5.Curved shell elements have no stiffness in the rotational degree of freedom when the formulation is used –
consequently, mechanisms may be introduced. Mechanisms occur when elements, RBEs, or MPCs are connected
to the out-of-plane rotation of the shell grid points. Note that PARAM,AUTOSPC,YES  does not constrain these
mechanisms.
6.In linear solution sequences, the values of “ param,k6rot,100 .” and “param,snorm,20. ” are the default.
7.Transverse shear flexibility ( MID3  on the PSHELL  property entry) should be left on when normals are used.
Three-Dimensional Elements
Although the CHEXA  and CPENTA  elements are designed to behave reasonably well as thin shell elements, it is
recommended that they not be used in this capacity.  The high ratio of extensional stiffness in the direction normal to the
effective transverse shear stiffness can produce significant round-off errors.
As in the case of plate elements, if midside nodes are present for the solid elements, they should be located as close to the
center of the edge as possible. Again, if midside nodes are desired, the general recommendation is to include all of them.
R-Type Elements
A high degree of precision must be maintained when specifying coefficients for MPCs in order to avoid introduction of
unintentional constraints to rigid body motions.  Rigid elements (e.g., RBE2 , RBAR , etc.) should be used whenever
possible because their constraint coefficients are internally calculated to a high precision.  Furthermore, these R-type&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P33</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_033/</guid>
      <description>
        
        
        &lt;p&gt;623 Chapter 11: Element Library
Modeling Guidelines
Main Index
elements require much less user interaction. The weld family of elements offer excellent ways of modeling structural
connections.
Mesh Density
The mesh density in a finite element model is an important topic because of its relationship to accuracy and cost. In many
instances, the minimum number of elements is set by topological considerations; e.g., one element per member in a space
frame or one element per panel in a stiffened shell structure. In the past, when problem size was more severely limited, it
was not uncommon to lump two or more frames or other similar elements in order to reduce the size of the model. With
computers becoming faster and cheaper, the current trend is to represent all major components individually in the finite
element model.
If the minimum topological requirements are easily satisfied, the question remains as to how fine to subdivide the major
components. The question is particularly relevant for elastic continua, such as slabs and unreinforced shells. In general, as
the mesh density increases, you can expect the results to become more accurate. The mesh density required can be a function
of many factors. Among them are the stress gradients, the type of loadings, the boundary conditions, the element types
used, the element shapes, and the degree of accuracy desired.
The grid point spacing should typically be the smallest in regions where stress gradients are expected to be the steepest.
Figure 11-7 shows a typical example of a stress concentration near a circular hole. The model is a circular disk with an inner
radius = a and an outer radius = b. A pressure load  pi is applied to the inner surface. Due to symmetry, only half of the disk
is modeled. In the example, both the radial stress and the circumferential stress decrease as a function of l/r2 from the center
of the hole. The error in the finite element analysis arises from differences between the real stress distribution and the stress
distribution within the finite elements.
In a study of mesh densities, elements and output options, three different mesh densities were used in the example as shown
in Figure 11-7. The first one is a coarse mesh model with the elements evenly distributed. The second model consists of the
same number of elements; however, the mesh is biased toward the center of the hole. The third model consists of a denser
mesh with the elements evenly distributed.  These three models are then analyzed with three different element types –
CQUAD4 , CQUAD8 , and CQUAD4  with the corner stress option. The circumferential stress at the inner radius is always
greater than pi, which is the applied pressure load at the inner radius, and approaches this value as the outer radius becomes
larger. The theoretical circumferential stress is given by the following equation (see [Ref. 2]):
where:
a=inner radius
b=outer radiuspia21b2
r2&amp;mdash;&amp;ndash;+

b2a2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Modeling Guidelines624
Main Index
The stresses are then plotted as a function of the radius in a nondimensional fashion-stress pi/ versus r/a.  The results are
summarized in Table 11-1.
Figure 11-7  Circular Disk with Different Meshesr=radial distance as measured from the center of the disk
pi=pressure applied at the inner radius
Coarse Even Mesh
Fine Even MeshCoarse Biased Mesh
x zy
2a
2bpi
pipi&lt;/p&gt;
&lt;p&gt;625 Chapter 11: Element Library
Modeling Guidelines
Main Index
For this particular case, since the stresses are proportional to 1/r2, you expect the highest stress to occur at the inner radius.
In order to take advantage of this piece of information, the obvious thing to do is to create a finer mesh around the inner
radius. Looking at the results for the first two cases in Table 11-1, it is quite obvious that just by biasing the mesh, the results
are 30% closer to the theoretical solution with the same number of degrees of freedom.
A third case is analyzed with a finer but unbiased mesh. It is interesting to note that for case number 3, even though it has
more degrees of freedom, the result is still not as good as that of case number 2. This poor result is due to the fact that for
the CQUAD4  element, the stresses, by default, are calculated at the center of the element and are assumed to be constant
throughout the element. Looking at Figure 11-7, it is also obvious that the centers of the inner row of elements are actually
further away from the center of the circle for case number 3 as compared to case number 2. The results for case number 3
can, of course, be improved drastically by biasing the mesh.
You can request corner outputs (stress, strain, and force) for CQUAD4  in addition to the center values. Corner results are
extrapolated from the corner displacements and rotations by using a strain rosette analogy with a cubic correction for
bending. The same three models are then rerun with this corner option – their results are summarized in cases 7 through
9. Note that the results can improve substantially for the same number degrees of freedom.
Corner output is selected by using a corner output option with the STRESS , STRAIN , and FORCE  case control
commands.  When one of these options is selected, output is computed at the center and four corners for each CQUAD4&lt;br&gt;
element, in a format similar to that of CQUAD8  elements.
There are four corner output options available: CORNER , CUBIC , SGAGE , and BILIN . The different options provide for
different approaches to the stress calculations. The default option is CORNER , which is equivalent to BILIN .  BILIN  has
been shown to produce better results for a wider range of problems.Table 11-1  Stresses Close to r = a for a Circular Disk
Case
No. Element Typedegrees of
freedom (L-
Set) DescriptionStress
Theoretical
1 CQUAD4 194 Coarse, Even Mesh 0.594
2 CQUAD4 194 Coarse, Biased Mesh 0.881
3 CQUAD4 868 Fine, Even Mesh 0.801
4 CQUAD8 550 Coarse, Even Mesh 0.929
5 CQUAD8 550 Coarse, Biased Mesh 1.041
6 CQUAD8 2538 Fine, Even Mesh 1.015
7 CQUAD4  with Corner Option 194 Coarse, Even Mesh 1.142
8 CQUAD4  with Corner Option 194 Coarse, Biased Mesh 1.047
9 CQUAD4  with Corner Option 868 Fine, Even Mesh 1.127
10 THEORETICAL &amp;ndash; &amp;ndash; 1.000&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
References626
Main Index
T o carry it a step further, the same three models are then rerun with CQUAD8  (cases 4 through 6). In this case, the results
using CQUAD8  are better than those using the CQUAD4 . This result is expected since CQUAD8  contains more degrees
of freedom per element than CQUAD4 .  Looking at column three of Table 11-1, you can see that due to the existence of
midside nodes, the models using CQUAD8  contain several times the number of degrees of freedom as compared to
CQUAD4  for the same number of elements. The results using CQUAD4  can, of course, be improved by increasing the
mesh density to approach that of the CQUAD8  in terms of number of degrees of freedom.
It is important to realize that the stresses are compared at different locations for Cases 1 through 3 versus Cases 4 through
9. This difference occurs because the stresses are available only at the element centers for Cases 1 through 3, but the stresses
are available at the corners as well as the element centers for Cases 4 through 9. When looking at your results using a stress
contour plot, you should be aware of where the stresses are being evaluated.
How fine a mesh you want depends on many factors. Among them is the cost you are willing to pay versus the accuracy
you are receiving. The cost increases with the number of degrees of freedom. The definition of cost has changed with time.
In the past, cost is generally associated with computer time. With both hardware and software becoming faster each day,
cost is probably associated more with the time required for you to debug and interpret your results. In general, the larger
the model is, the more time it takes you to debug and interpret your results. As for acceptable accuracy, proceeding from
case 8 to case 6, the error is reduced from 4.7% to 1.5%; however, the size of the problem is also increased from 194 to
2538 degrees of freedom. In some cases, a 4.7% error may be acceptable. For example, in cases in which you are certain of
the loads to within only a 10% accuracy, a 4.7% error may be acceptable. In other cases, a 1.5% error may not be acceptable.
In general, if you can visualize the form of the solution beforehand, you can then bias the grid point distribution. However,
this type of information is not necessarily available in all cases. If a better assessment of accuracy is required and resources
are available (time and money), you can always establish error bounds for a particular problem by constructing and
analyzing multiple mesh spacings of the same model and observe the convergences. This approach, however, may not be
realistic due to the time constraint.
h-adaptivity
In traditional finite element analysis, as the number of elements increases, the accuracy of the solution improves. The
accuracy of the problem can be measured quantitatively with various entities (such as strain energies, displacements, and
stresses), as well as in various error estimation methods (such as simple mathematical norm or root-mean-square methods).
The goal is to perform an accurate prediction on the behavior of your actual model by using these error analysis methods.
You can modify a series of finite element analyses either manually or automatically by reducing the size and increasing the
number of elements, which is the usual h-adaptivity method. Each element is formulated mathematically with a certain
predetermined order of shape functions. This polynomial order does not change in the h-adaptivity method.
References
1.“A Proposed Standard Set of Problems to Test Finite Element Approach,” MSC/NASTRAN Application Notes,
1984.
2.S. P. Timoshenko and J. N. Goodier, Theory of Elasticity, McGraw-Hill Book Company, Third Edition, 1970.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
12Rigid Elements, Connectors,
and Multi-Point Constraints
Introduction
Kinematic Constraints
MPC Constraint
Automated Bolt Modeling
Support for Bolts
Introduction to R-Type Elements
Rigid Elements
Patran Support
Pin Code for Beam Elements
Constraint Conflict&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction628
Main Index
Introduction
In engineering problems, it is often useful to apply constraints between different parts or regions on along a surface of a
part. These mathematical constraints are sometimes applied to single nodes of the model, called boundary constraints, or
are sometimes used to connect many nodes or points of the model, called multi-point constraints (MPCs). Various types
of connections such as rigid, limited strength cohesion, moment carrying rigid, etc. can be simulated by properly using these
mathematical constraint equations as part of the model. These connections can even be used to simulate manufacturing
processes such as seam welds or spot welds. The vast flexibility that these mathematical constraints afford make them
extremely useful in FEA for everything from weld, bolt, and fastener modeling to glued contact to separating contact.
In this chapter, we describe the various types of multi-point constraints, rigid elements, and fasteners available in MSC
Nastran SOL 400 and the input required to incorporate them into a model.
Kinematic Constraints
SOL 400 allows you to input kinematic constraints through various options that include
MPC Constraints
Rigid Elements Constraint
Bolts
Shell-to-Solid Tying
Support Conditions
Bushings
MSC Nastran RBE2 and RBE3
Beam – Shell Offsets
Pin Code for Beam Elements
MPC Constraint
MSC Nastran contains a generalized MPC (constraint) condition bulk data entry. Any constraint involving linear
dependence of nodal degrees of freedom can be included in the stiffness equations.
A MPC constraint involves one tied node and one or more retained nodes, and a MPC (constraint) condition between the
tied and retained nodes. The degrees of freedom (for example, displacements, temperatures) of the tied node are dependent
on the degrees of freedom of the retained nodes through the MPC condition. In some special MPC conditions, the tied
node can also be a retained node. The MPC condition can be represented by a MPC (constraint) matrix. Note that if the
MPC constraint involves only one retained node, the choice of which node is to be tied to retained is arbitrary.
As a simple example, impose the constraint that the first degree of freedom of node I be equal to that of node J at all times
(see Figure 12-1).&lt;/p&gt;
&lt;p&gt;629 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
MPC Constraint
Main Index
Figure 12-1  Simple Tying Constraint
As a second example, the simulation of a sliding boundary condition requires the input of both the boundary conditions
and the tying constraints (see Figure 12-2).
Figure 12-2  Tying Constraint Illustration (Sliding Boundary Conditions)
The example illustrated in Figure 12-2 enforces rigid sliding on the boundary in the local coordinates defined above.
vi = vj = vk = v1 = 0 (12-1)
ui = uj = uk = u1 (12-2)
The first equation is a set of fixed boundary conditions. The second equation is a constraint equation and can be rewritten
as three constraint equations:
ui = uj (12-3)
uk = uj (12-4)
u1 = uj (12-5)
These equations express all the u displacements in terms of uj. In this example, node j is chosen to be the retained node;
nodes i, k, and l are tied nodes. You can use the MPC option to enter this information.
The MPC option uses the homogeneous linear constraint capability (tying) to input simple constraints of the form
(12-6)2,V
1,UUJUI I
JConstraint Equation:
UI = UJ
Tied node I, retained node J, or
Tied node J, retained node I
Y (v)
X (u)Local axes
X
Y i
j
k
l
Ajj
j0=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MPC Constraint630
Main Index
Hence, one would enter for the first constraint:
SID, I, 1, -1.0, J, J, +1.0
Note that in a nonlinear structural analyses, the constraint equation is written in incremental form so that:
(12-7)
The total or incremental displacement are always with respect to the local coordinate system.
MPC Types
T o create an MPC, first select the type of MPC to be created from the option menu. The MPC types that appear in the
option menu are dependent on the current settings of the Analysis Code  and Analysis Type  preferences. The following table
describes the MPC types which are supported for MSC Nastran.
MPC Type Analysis Type Description
Explicit Structural Creates an explicit MPC between a dependent degree of freedom and one or more
independent degrees of freedom. The dependent term consists of a node ID and a
degree of freedom, while an independent term consists of a coefficient, a node ID,
and a degree of freedom. An unlimited number of independent terms can be
specified, while only one dependent term can be specified. The constant term is not
allowed in MSC Nastran.
RSSCON
Surf-VolStructural Creates an RSSCON type MPC between a dependent node on a linear 2-D plate
element and two independent nodes on a linear 3-D solid element to connect the
plate element to the solid element. One dependent and two independent terms can
be specified. Each term consists of a single node. This option is not recommended for
shell-to-solid element connections; use glued contact.
Rigid (Fixed) Structural Creates a rigid MPC between one independent node and one or more dependent
nodes in which all six structural degrees of freedom are rigidly attached to each other.
An unlimited number of dependent terms can be specified, while only one
independent term can be specified. Each term consists of a single node. There is no
constant term for this MPC type.
RBAR Structural Creates an RBAR  element, which defines a rigid bar between two nodes. Up to two
dependent and two independent terms can be specified. Each term consists of a node
and a list of degrees of freedom. The nodes specified in the two dependent terms must
be the same as the nodes specified in the two independent terms. Any combination
of the degrees of freedom of the two nodes can be specified as independent as long as
the total number of independent degrees of freedom adds up to six. There is no
constant term for this MPC type.Ajj
j0=&lt;/p&gt;
&lt;p&gt;631 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
MPC Constraint
Main Index
RBAR1 Structural This is an alternate (simplified) form for RBAR . Creates an RBAR1  element, which
defines a rigid bar between two nodes, with six degrees of freedom at each end. Each
dependent term consists of a node and a list of degrees of freedom, while the
independent term consists only of a node (with all six degrees of freedom implied).
The constant term is the thermal expansion coefficient, ALPHA.
RBE1 Structural Creates an RBE1  element, which defines a rigid body connected to an arbitrary
number of nodes. An arbitrary number of dependent terms can be specified. Each
term consists of a node and a list of degrees of freedom. Any number of independent
terms can be specified as long as the total number of degrees of freedom specified in
all of the independent terms adds up to six. Since at least one degree of freedom must
be specified for each term there is no way the user can create more that six
independent terms. There is no constant term for this MPC type.
RBE2 Structural Creates an RBE2  element, which defines a rigid body between an arbitrary number of
nodes. Although the user can only specify one dependent term, an arbitrary number
of nodes can be associated to this term. The user is also prompted to associate a list
of degrees of freedom to this term. A single independent term can be specified, which
consists of a single node. There is no constant term for this MPC type.
RBE3 Structural Creates an RBE3  element, which defines the motion of a reference node as the
weighted average of the motions of a set of nodes. An arbitrary number of dependent
terms can be specified, each term consisting of a node and a list of degrees of freedom.
The first dependent term is used to define the reference node. The other dependent
terms define additional node/degrees of freedom, which are added to the m-set. An
arbitrary number of independent terms can also be specified. Each independent term
consists of a constant coefficient (weighting factor), a node, and a list of degrees of
freedom. There is no constant term for this MPC type.
RROD Structural Creates an RROD  element, which defines a pinned rod between two nodes that is
rigid in extension. One dependent term is specified, which consists of a node and a
single translational degree of freedom. One independent term is specified, which
consists of a single node. There is no constant term for this MPC type.MPC Type Analysis Type Description&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MPC Constraint632
Main Index
T ypical applications that use R-type entries are shown in Table 12-1.RTRPLT Structural Creates an RTRPLT  element, which defines a rigid triangular plate between three
nodes. Up to three dependent and three independent terms can be specified. Each
term consists of a node and a list of degrees of freedom. The nodes specified in the
three dependent terms must be the same as the nodes specified in the three
independent terms. Any combination of the degrees of freedom of the three nodes
can be specified as independent as long as the total number of independent degrees
of freedom adds up to six. There is no constant term for this MPC type.
RTRPLT1 Structural Alternative format to define a rigid triangular plate element connecting three grid
points. Creates an RTRPLT1  element, which defines a rigid triangular plate between
three nodes. Each dependent term consists of a node and a list of degrees of freedom,
while the independent term consists only of the node (with all six degrees of freedom
implied). The constant term is the thermal expansion coefficient, ALPHA.
RJOINT Structural Creates an RJOINT  element, which defines a rigid joint element connecting two
coinciding grid points. Each dependent term consists of a node and a list of degrees
of freedom, while the independent term consists only of a node (with all six degrees
of freedom implied). There is no constant term for this MPC type.
Table 12-1  Typical Application for Rigid Element
Application R-Type Entries
Triangular Bell Crank RTRPLT
Rigid Engine Blocks RBE1
Tripod with Hinged Rigid Legs RROD
Rigid Bulkhead RBE2
Evaluation of Resultant Loads RBE2
Connection of a Bar Element to a Shell RBE2  or RBE3
Hinge Between Two Plates RBAR  or RJOINT
Recording Motion in a Nonglobal Direction RBAR
Relative Motion MPC
Incompressible Fluid in an Elastic Container MPC
“Beaming” Loads and Masses RBE3
Change in Mesh Size RSPLINE
Transitions Between Plate and Solid Elements RSSCONMPC Type Analysis Type Description&lt;/p&gt;
&lt;p&gt;633 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
MPC Constraint
Main Index
Degrees of Freedom
Whenever a list of degrees of freedom is expected for an MPC term, a listbox containing the valid degrees of freedom is
displayed on the form.
The following degrees of freedom are supported by the Patran MSC Nastran MPCs for the various analysis types:
Explicit MPCs
This subordinate MPC  form appears when the Define Terms  button is selected on the Finite Elements  form and Explicit  is
the selected type. This form is used to create an MSC Nastran MPC  bulk data entry. The difference in explicit MPC
equations between Patran and MSC Nastran will result in the A1 field of the MSC Nastran entry being set to -1.0 .Degrees of Freedom Analysis Type
UX Structural
UY Structural
UZ Structural
RX Structural
RY Structural
RZ Structural
Note:   Care must be taken to make sure that a degree of freedom that is selected for an MPC actually exists at the
nodes. For example, a node that is attached only to solid structural elements will not have any rotational
degrees of freedom. However, Patran will allow you to select rotational degrees of freedom at this node when
defining an MPC.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
MPC Constraint634
Main Index
MPC Constraints for Mesh Refinement
For adding constraints to non-congruent meshes, the coefficients of the MPCs must be calculated (weighted) proportional
to the ration of the side lengths.   A simple example follows where T is the node whose degrees of freedom are to be calculated
(tied), based on the nodes R whose degrees of freedom are to be retained. For 2-D problems, only degrees of freedom 1 and
2 need to be treated. For 3-D shells, all six degrees of freedom must be handled. If the user wants to constrain node T to
the two R nodes, you would create an MPC  for each degree of freedom that exists.
For  = B = 0.5; SID = 1; T = ID of Tied Node; R = ID of Retained Node. Here is the approximate form of the MPC  bulk
data entry:
MPC, SID, T, 123456, -1.0, R1, 123456, B/(+B ), R2, 123456, /(+B )
123456  if shell ( CQUAD4 ) all six degrees of freedom exist
123       if solid ( CHEXA  or CTETRA ) only translational degrees of freedom exist
12         if 2-D planar element only in-plane degrees of freedom exist
For higher order elements the same method would apply only care must be taken to select the correct nodes to be tied and
retained. Also, the ratios applied to the coefficients are slightly more complex.
Figure 12-3  Mesh Refinement for 4-Node Quad
Figure 12-4  Mesh Refinement for 4-Node Quad
For higher-order elements, the same method would apply only care must be taken to select the correct nodes to be tied and
retained. Also, the ratios applied to the coefficients are slightly more complex.
T – Tied Node
R – Retained NodeR
T
R&lt;/p&gt;
&lt;p&gt;635 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
MPC Constraint
Main Index
Figure 12-5  Mesh Refinement for 8-Node Quad
For solid elements, there are no rotational degrees of freedom, so only the degrees of freedom 1 to 3 need to be tied.
Figure 12-6  Mesh Refinement for 8-Node Brick
For higher-order solid elements, again, care must be taken to select the correct tied (labeled T) vs. retained (labeled R) nodes.
Figure 12-7  Mesh Refinement for 20-Node BrickT – Tied Node
R – Retained NodeT
T
T
TR
R
R
R
T
R
R
R
T
T
T
TR
R
R
R&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automated Bolt Modeling636
Main Index
Automated Bolt Modeling
Bolt preload is a critical design consideration for detailed joint analysis in all industries. One of the critical factors for a
proper joint analysis is to capture the bolt preload effects properly. The bolt spacing, preload, and general joint design will
affect items like gasket pressure, o-ring seal behavior, and gapping analysis for instance.
In the automotive industry, bolt modeling is important in analyses of engine assemblies. Gasket joints, which are used in
such assemblies to prevent steam or gas from escaping, are often fastened by a number of bolts. In a typical loading sequence
of an engine assembly, the bolts are first fastened until a certain pre-tension force is present in the bolts. This can be achieved
by shortening the bolts until the desired force is reached. Next, the bolts are “locked”, that is, the amount of shortening
remains fixed, while the assembly is subject to other (thermo-)mechanical loads. Finally, the bolts are loosened again, either
by decreasing the shortening or by releasing the bolt forces
Although such a pre-stressed state is often simulated using a temperature loading, it is rather difficult to arrive at a desired
net force in the bolt or rivet.  A better way is to use an automated bolt modeling functionality. There are two bolt modeling
techniques available in MSC Nastran:
BOLT: suitable if the finite element mesh of the bolt is already split into two parts across the shaft of the bolt and
the model does not undergo large rotation.
Enhanced Bolt Modeling with BOLT1: an easy-to-use bolt implementation which does not require splitting the
bolt finite element mesh. BOLT1 greatly simplifies the bolt modeling process especially if the model has a large
number of bolts. The BOLT1 technique supports large rotation.
BOLT Implementation
Assuming that the finite element mesh of the bolt has been split up in two disjoint parts along element boundaries across
the shaft of the bolt, the BOLT  bulk data entry imposes the proper multi-point constraints on these parts, such that the bolt
can be pre-stressed, locked, and loosened by applying appropriate boundary conditions to a special “control grid point”
associated with the bolt. Special treatment of the constraints by the contact algorithm ensures that the option can be used
with contact and that the internally generated contact surface will be continuous across the split. Grids touching the bolt
surface can then slide across the split without problems. The automated bolt modeling method is based on a mesh split
principle and a control node. Figure 12-8 demonstrates how the mesh split principle is applied to a typical joint.&lt;/p&gt;
&lt;p&gt;637 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Automated Bolt Modeling
Main Index
Figure 12-8  Example of a Bolted Joint using BOLT using the Mesh Split Principle
The Mesh Split Principle
The key to the new BOLT  formulation is the concept of the control node.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automated Bolt Modeling638
Main Index
Figure 12-9  Control Node and “Top Nodes”/“Bottom Nodes” Definition
You must define the “Top Nodes” ( GT) and the “Bottom Nodes” ( GB) and the control node ( GC).
Bolt MPCs have one tied node and two retained nodes. The tied node and the first retained node are usually nodes on the
boundaries of the respective parts (see Figure 12-10). The second retained node is very often a free node and is usually shared
by all bolt MPCs which connect the parts. This node is also called the control node of the MPC, since it can be used to
apply load or control the size of the gap or overlap between the parts.&lt;/p&gt;
&lt;h1&gt;639 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Automated Bolt Modeling
Main Index
Figure 12-10  Pre-stressing a Structure by Creating an Overlap Between the top and the Bottom Part Using BOLT MPCs
A BOLT MPC imposes the following constraint on the model:
utied = uretained  + ucontrol , (12-8)
in which utied, uretained  and ucontrol  are the displacement and rotation degrees of freedom (if any) of, respectively, the tied
node, the first retained node, and the control node of the tying. It immediately follows from this equation that ucontrol  is
the displacement difference of the tied and the retained node of the tying and is equal to the size of the overlap or gap
between the parts. Hence, by prescribing this displacement using the SPCD  and SPCR  options, gaps or overlaps of a
particular size can be created.
Instead of prescribing the size, gaps or overlaps can also be created by prescribing the total force in the model. This follows
immediately from the fact that the work done by a constraint equation is zero. To demonstrate this, consider the model
displayed in Figure 12-8. The model is split into two disjoint parts: the top part and the bottom part. At the split,
corresponding nodes of the respective parts are connected by BOLT  MPCs, in which the nodes of the bottom part are the
tied nodes and the nodes of the top part are the first retained nodes of the tyings. Both tyings share a common (free) control
node. If u1, bot and u2, bot are the displacements of the bottom nodes and u1, bot and u2, bot are the displacements of the top
nodes, then the two BOLT  MPCs impose the following two constraints on this model:
u1, bot = u1, top + ucontrol , (12-9)
u2, bot = u2, top + ucontrol (12-10)
Introducing the vectors,
and ,
and the constraint matrix
,control node
bottom partBOLT mpc’s
(tied)(first retained)top nodestop part
mesh split
bottom nodes(second retained)
undeformedF1,bot F2,bot
F2,topFcontroltop part
bottom partF1,topu1,top u2,topu2,bot u1,botucontrol
(overlap)  ucontrol
deformed
u u1botu2botu1topu2topT= uˆu1topu2topucontrolT=
TI0I0
0I0I
II00T&lt;/h1&gt;&lt;p&gt;Nonlinear User’s Guide
Automated Bolt Modeling640
Main Index
in which I and 0 are the unit and null matrices, equations (12-9) and (12-10) can be summarized into the matrix equation:
. (12-11)
Let
and
be the force vectors which are work conjugate to the displacements  and , respectively. Then the zero-work principle
states that
. (12-12)
Substitution of equation (12-11) into equation (12-12) and requiring that the result is valid for all , it follows that
, or
, (12-13)
, (12-14)
. (12-15)
Equations (12-13) and (12-14) express the equilibrium of forces across the split, in which  and  can be viewed
as externally applied forces. While equation (12-15) enables BOLT  MPCs to pre-stress a model with a certain total force, it
states that if the constraints described by Equations (12-9) and (12-10) are applied, the force on the control node is the sum
of the forces on the tied nodes of all BOLT  constraints which share that control node. Hence, the total force on the bottom
part of the model is prescribed by applying a force to the control node using the FORCE  option. Obviously (by the
equilibrium equations (12-13) and (12-14)) if no external force is applied to the nodes on the split, the total force on the top
part is equal but opposite is sign to the force on the control node.
The control node of an BOLT  MPC has the same displacement and rotation degrees of freedom as the tied and the first
retained node as given by equation (12-8). This allows creation of overlaps or gaps in any particular direction or combination
of directions. Local coordinate systems can be defined at any of the nodes of an BOLT  MPC using any of the CORDnm  Note:   Both methods to control the size of overlaps or gaps can be combined in one analysis. For example, in the
first part of an analysis, a pre-stress can be defined by prescribing the net force in the structure using the
FORCE  option on the control node of the BOLT  MPCs. Then in the second part, the size of the gap or the
amount of overlap which is the result of this load, can be fixed by suppressing the displacement changes of
the control node using the SPCD  bulk data entry.u Tuˆ=
F F1botF2botF1topF2topT= FˆFˆ
1topFˆ
2topFˆ
controlT=
u uˆ
FTu FˆTuˆ =
uˆ
TTF Fˆ=
F1botF1top+ Fˆ
1top =
F2botF2top+ Fˆ
2top =
F1botF2bot+ Fˆ
control =
Fˆ1topFˆ2top&lt;/p&gt;
&lt;p&gt;641 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Automated Bolt Modeling
Main Index
bulk data entry. Since the constraint equation (12-9) is always applied in the global coordinate system, a local coordinate
system at the control node can be used to pre-stress the model in directions other than the global coordinate directions.
Figure 12-11&lt;br&gt;
Sufficient boundary conditions must be applied on the control node to suppress any rigid body modes (e.g. lateral
constraints must be applied to keep the parts of the bolt from sliding tangentially relative to one another), if the two parts
of the structure are not constrained otherwise. T otal forces on the split are available for postprocessing as reaction forces on
the control node for all suppressed or prescribed displacements and rotations.
BOLT  MPCs can be used in combination with contact; that is, the tied and the first retained node may be nodes on the
boundary of a contact body.
In non-mechanical passes of a coupled analysis, the BOLT  MPC reduces to a regular heat-transfer MPC between the tied
node and the retained node. There is no dependence on the control node in that case. This guarantees continuity of the
primary field variable (for example, temperature) across the split.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Automated Bolt Modeling642
Main Index
As an example of the usage of BOLT  for defining the constrains, see Engine Gasket  (Ch. 10) and Bolted Plates  (Ch. 20) in the
MSC Nastran Demonstration Problems Manual .
Enhanced Bolt Modeling with BOLT1
The enhanced bolt modeling functionality, BOLT1, further simplifies bolt pretension simulation and provides an easy-to-
use interface to bolt modeling along with advanced nonlinear capabilities. As mentioned earlier, the BOLT entry required
the user to split the finite element mesh around a cross-section in the bolt. The user must duplicate the grid points on the
cross-section, split the bolt mesh and enter the list of top and bottom grid points of the bolt cross-section. If the model has
too many bolts, bolt modeling becomes a complicated and tedious task. In addition, the BOLT implementation does not
support large rotation.
Figure 12-12  BOLT1 implementationTable 12-2  BOLT MPC
MPC
NameNumber of
Retained
Nodes Purpose Remarks
BOLT 2 Create gaps or overlaps between two parts of a
model either by prescribing the total force on
the nodes on either side of the gap or overlap
or by prescribing the size of the gap or overlap.The second retained node is the control node
of the MPC. The force on this node is equal
to the total force on the tied nodes of all mpc’s
that share this control node. The
displacement of the node is equal to size of the
gap or overlap between the parts. In
non-mechanical passes, the MPC reduces to a
heat transfer MPC between the tied and the
first retained node.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P34</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_034/</guid>
      <description>
        
        
        &lt;p&gt;643 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Automated Bolt Modeling
Main Index
With BOLT1, the control grid is still used to apply the bolt pre-tension loads or tightening displacements. However, the
user does not need to split the bolt mesh into top and bottom parts and duplicate the grids at the cross-section. The bolt
top and bottom parts share the same cross-section grid points as shown in Figure 12-12. In this implementation, the
connectivity of the bolt cross-section bottom elements is internally modified to include the control grid as an additional
grid point. Bolt cross-section top elements stay the same. Thus, the bolt preload applied at the control grid is applied at one
side of the bolt cross-section resulting in the anticipated overlap effect between the bolt parts without the need for mesh
dis-joining which simplifies the bolt modeling. The BOLT1 implementation uses quaternions and Euler angles to properly
track bolt rotation.
The BOLT1 entry supports 2 input formats: the cross-section method and the simple method.
BOLT1 cross-section input format:
For the cross-section input format of the bolt definition, user has more control on the bolt definition but need to provide
full bolt cross-section information. User must enter the initial direction of the bolt axis, or bolt cross-section normal vector.
User must give the list of grid points defining the bolt cross-section, where pre-tension is applied. User must also specify
the list of elements sharing grid points in the bolt cross-section and lying on the opposite side of the cross-section normal
vector (cross-section bottom elements).
BOLT1 simple input format :
Using the simple input format of the BOLT1 entry, bolt modeling is further simplified by allowing the user to just enter
the list of elements defining the complete bolt and the program would automatically complete the bolt definition. The bolt
axial direction is automatically computed by the program to be along the principal axis of the bolt elements. The bolt cross-
section is also internally selected by the program to pass through the bolt center of mass by default. In addition, the program
will identify the layer of elements on top and bottom of bolt cross-section. In this case, the program will internally perform
the following tasks:
Find the centroid of the bolt.
Calculate the principal moment of inertia of the bolt about the centroid.
Determine the bolt axial direction according to the values of the principal moment of inertia.
Find the lists of the grid points and elements that make the bolt middle cross-section and pass through the
centroid using a plane perpendicular to the axial direction.
To include the pretension effects applied at the control grid, the displacements of the cross-section grids for the bottom
elements will be related to those of the top elements by the displacements of the control grid using the relation:
UB = UT + N * UC
where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UB is the displacement vector of the cross-section bottom elements&lt;/li&gt;
&lt;li&gt;UT is the displacement vector of the cross-section top elements&lt;/li&gt;
&lt;li&gt;UC is the displacement vector of the control grid&lt;/li&gt;
&lt;li&gt;N is the cross-section normal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Support for Bolts644
Main Index
T o implement this relation, the cross-section bottom elements connectivity is modified to include the control grid and the
displacement vector of the bottom elements is expanded to include the control grid degrees of freedom. This amounts to a
transformation for the cross-section bottom elements in the form:
UB = T U^
B
where
U^
B = {UT UC}T
and T is the transformation matrix in the form:
T = [I N]
The stiffness matrix KB and force vector FB for the cross-section bottom elements are transformed using the relation:
K^
B = TT KB T
F^
B = TT FB
Bolts using BOLT1 entries are supposed to be separate entities disjointed from the mesh of the rest of the structure and
connected only through contact, links or RBEs. Sufficient boundary conditions must be applied on the control grid to
suppress any rigid body modes. The BOLT1 functionality is limited to be used with advanced nonlinear elements in SOL
400. The program will attempt to internally map the element properties used by BOLT1 elements to advanced nonlinear
elements if possible. Bolt control grid is a special grid point that has a single degree-of-freedom only aligned along the bolt
axial direction and should not be connected to any element or grid in the model and should not have an associated
displacement coordinate system. Applied loads and displacements should always be along the first degree-of-freedom (T1)
of the control grid.
Support for Bolts
BOLT D ata Entr y
Defines a rigid bolt by a set of MPC constraints.
Format:BOLT Defines the Multi-point Constraints for a Bolt
1 2 3 4 5 6 7 8 9 10
BOLT ID GRIDC
TOP GT1 GT2 GT3 GT4 GT5 GT6 GT7
GT8 GT9 etc.&lt;/p&gt;
&lt;p&gt;645 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Support for Bolts
Main Index
Example:
Remarks:
1.The GRIDS entries of the TOP and BOTTOM keywords are open-ended.
2.GRIDC is the control grid point and usually not connected to any element.
3.(GTi, GBi) are pairs of grid on top and bottom.
4.To each pair of (GTi, GBi) and GRIDC, MPCs are created internally to all 6 DOFs. Since the GBs always belong
to dependent-DOFs, they cannot be applied to any SPC, SPC1, SPCD and SPCR.
5.Same number of grid points in TOP and BOTTOM. They should be coincident but it is not required. Users who
do otherwise do so at their own risk since the current design does not consider the initial offset between them.
6.Bolt loads, including enforced motion, are usually prescribed on GRIDC to represent the pre-tension, overlap or
loading of the bolt. BOLT relative displacements are given in the global coordinate system of the control node.
7.Global Coordinate System may have to be defined at the Control Node if the bolt direction is not a Basic
Coordinate direction and the user wants to apply the loads along the shaft of the bolt.
8.Loads in directions other than the shaft of the bolt direction are possible.
9.The internally written MPC relationship is of the form:BOTTOM GB1 GB2 GB3 GB4 GB5 GB6 GB7
GB8 GB9 etc.
BOLT 100 1025
TOP 101 102 103 104 105
BOTTOM 1 2 3 4 5
Describer Meaning
ID Element ID of the bolt. (Integer; Required )
GRIDC Control GRID ID where forces or displacements are applied. (Integer; Required)
TOP Indicate t he start of the entry that defines all of the grids at the “top” of the bolt
intersection with the structure.
GT1, GT2, etc. Grid IDs of the grid points at the top of the bolt intersection. (Integer; no Default)
BOTTOM Indicate t he start of the entry that defines all of the grids at the “bottom” of the bolt
intersection with the structure .
GB1, GB2, etc. Grid IDs of the grid points at the bottom of the bolt intersection. (Integer; no Default .
Do not enter the ID for GRIDC)
uGBuGT= uGC+&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Support for Bolts646
Main Index
10. In 3D Contact analysis, it replaces GBi (Bottom bolt segment) by GTi (Top bolt segment) on the internally
generated contact surface, which makes contact surface continuous across the mesh split between them.
11. Force output is obtained through Case Control MPCFORCE.
12. The internal MPCs generated by the BOLT entry are valid for small rotations only.
13. The BOLT entry must be defined in the residual structure only.
14. Sufficient boundary conditions must be placed on the BOLT to prevent mechanisms.
15. In contact analysis, care should be taken that the preload displacement does not exceed the local element width.
16. Pretension of a BOLT is a three step process in SOL 400:
SUBCASE 1
17. The BOLT may also be used in SOL101 and SOL103. In this case PARAM, AUTOMSET, YES is recommended.
BOLT1 Data Entry
Defines an easy-to-use pre-tension bolt model that supports nonlinear analysis and large rotation. BOLT1 allows bolt forces
or displacements to be applied at a layer of elements along a cross-section in the bolt, thus modeling the effect of bolt pre-
tension without the need for duplicating grid points or splitting the bolt finite element mesh into top and bottom sections
around the bolt cross-section. The bolt&amp;rsquo;s local coordinate system and axial direction are continuously updated to track bolt
rotation. Used in SOL 400 with advanced nonlinear elements only.STEP 1
LOAD=n Applies a pretension load to the bolt on the control grid.
SPC=m If any required to prevent motion of structure do not include the
control grid.
STEP 2
LOAD=p1 Load entry pointing to a SPCR (relative value of 0.0) and any other
desired type of loading.
SPC=q1 SPC1 includes control grid and any other desired SPC requirements.
STEP 3
LOAD=p2 Load entry pointing to a SPCR and any other additional desired type of
loading.
SPC=q2 SPC1 includes control grid and any other additional desired SPC
requirements.
BOLT1 Bolt Model&lt;/p&gt;
&lt;p&gt;647 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Support for Bolts
Main Index
Format:
Example: Simple Method using FORM = 0
Example: Cross-section method using FORM = 11 2 3 4 5 6 7 8 9 10
BOLT 1 ID GRIDC FORM N1 N2 N3 OFFSET IDTYPE
&amp;ldquo;ELEM&amp;rdquo; E1 E2 E3 E4 E5 E6 E7
E8 E9 etc.
“GRID” G1 G2 G3 G4 G5 G6 G7
G8 G9 etc.
BOLT 1 1 10
ELEM 1 2 3 4 5 6
BOLT 1 2 20 1 0.0 0.0 1.0 SET
ELEM 11
GRID 12
Describer Meaning
ID Unique bolt ID. (Integer; Required )
GRIDC Control grid ID where pre-tension loads or tightening displacements are applied.
(Integer; Required )
FORM Specify input format for bolt definition. ((Integer; Default = 0)
0: Simple method, enter the list of elements making the bolt, no need to enter
bolt axial direction or grid points forming the bolt cross-section.
1: Cross-section method, enter vector defining bolt axis, enter the list of grid
points forming the bolt cross-section and list of elements sharing cross-
section grid points and lying on the opposite side of the normal vector.
Ni Components of a vector defining bolt axis (direction normal to cross-section). (Real;
Required only if FORM = 1)
OFFSET Cross-section offset in axial direction (fraction of bolt length). (Real; Used for FORM=0
only; Default = 0.0)
IDTYPE Method for defining a list of element and grid IDs. (Character; Default = &amp;ldquo;LIST&amp;rdquo; or
blank)
&amp;ldquo;LIST&amp;rdquo;: Enter the character string LIST, or leave blank, to allow entering lists of
element IDs Ei and grid point IDs Gi.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Support for Bolts648
Main Index
Remarks:
1.The bolt control grid point GRIDC is unique to each bolt and should be used only to apply bolt pre-tension forces
or enforced displacements. GRIDC is a special grid point that has a single degree-of-freedom only aligned along the
bolt axial direction and should not be connected to any element or grid in the model. GRIDC should not have an
associated displacement coordinate system CD defined on the GRID entry. Applied loads and displacements should
always be along the first degree-of-freedom (T1) of the control grid. Output for bolt axial force and displacement
are also along the first degree-of-freedom (T1) of the control grid.
2.For the cross-section input format of the bolt definition, FORM=1, user must enter the initial direction of the bolt
axis, or bolt cross-section normal vector, Ni. User must give the list of grid points defining the bolt cross-section,
where pre-tension is applied, using GRID. User must also specify the list of elements sharing grid points in the bolt
cross-section and lying on the opposite side of the cross-section normal vector using ELEM.
3.Using the simple input format of bolt definition, FORM=0, the complete list of bolt elements is specified using
ELEM. The bolt axial direction is automatically computed by the program to be along the principal axis of the bolt
elements. The bolt cross-section is also internally selected by the program to pass by the bolt center of mass by
default. User can move the position of the bolt cross-section along the bolt axis away from the center of mass using
the OFFSET parameter if needed.
4.For FORM=1, the cross-section normal vector cannot be of zero length.&amp;ldquo;SET&amp;rdquo;: Enter the character string SET to allow entering lists of element and grid
points as sets. E1 and G1 refer to SET3 entries with DES = &amp;ldquo;ELEM&amp;rdquo; and
&amp;ldquo;GRID&amp;rdquo;, respectively.
ELEM Enter the character string ELEM to define a list of elements. (Character; Required)
Ei Element IDs (Integer; no Default)
If FORM = 0, list of element IDs of the bolt (must enter at least 2 elements along the
axis of the bolt).
If FORM = 1, list of element IDs sharing grid points in the bolt cross-section and lying
on the opposite side of the cross-section normal vector.
IF IDTYPE = “SET”, E1 is the ID of a SET3 entry with DES = “ELEM” used to define
a list of element IDs other Ei entries will be ignored.
GRID Enter the character string GRID to define a list of grid points. (Character; Required
only if FORM = 1)
Gi Grid IDs for the bolt cross-section. (Integer; Required only if FORM = 1; no Default)
IF IDTYPE = &amp;ldquo;SET&amp;rdquo;, G1 is the ID of a SET3 entry with DES = &amp;ldquo;GRID&amp;rdquo;, other Gi
entries will be ignored.Describer Meaning&lt;/p&gt;
&lt;p&gt;649 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Support for Bolts
Main Index
5.For FORM=0, the number of elements entered must be at least 2 in order to be able to compute the bolt axis. In
addition, bolt elements are not allowed to have a negative Jacobian in this case. The order of element connectivity
must follow element definition rules in order to correctly compute the bolt axis.
6.The method for entering bolt element and grid IDs under ELEM and GRID can be controlled using IDTYPE
either as list of IDs or defining a list on SET3 entries.
7.BOLT1 is supported for advanced nonlinear elements in SOL 400 only. As such, nonlinear property extensions
should be defined for bolt elements. The program will attempt to internally map the element properties used by
BOLT1 elements to advanced nonlinear elements if possible. Alternatively, MDLPPRM,BOLTCNEL,1 can be
used to search for all elements connected to BOLT1 elements and map their element properties. Automatic
mapping is turned off if the user has set NLMOPTS,SPROPMAP,-1 in the Bulk Data section. In this case nonlinear
property extensions must be defined for bolt elements.
8.Current limitations:
•BOLT1 does not support Herrmann elements.
•GPFORCE output for the control grid does not show contributions of cross-section elements.
9.Pretension of a BOLT1 is a three step process in SOL 400:
SUBCASE 1
STEP 1
LOAD=n Applies a pretension load to the bolt on the control grid.
SPC=m If any required to prevent motion of structure do not include the
control grid.
STEP 2
LOAD=p1 Load entry pointing to a SPCR (relative value of 0.0) and any other
desired type of loading.
SPC=q1 SPC1 includes control grid and any other desired SPC requirements.
STEP 3
LOAD=p2 Load entry pointing to a SPCR and any other additional desired type of
loading.
SPC=q2 SPC1 includes control grid and any other additional desired SPC
requirements.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support650
Main Index
Patran Bolt Support
Enhanced Bolt Modeling with BOLT1
MSC Nastran has introduced an updated method of modeling and analyzing bolts and/or bolt-like structures with a new
entry called BOLT1.
In the past, to analyze a bolt and apply a pre-load to the bolt, the bolt must have been modeled using two separate meshes.
These meshes defined the top and bottom portions of the bolt and were connected via special MPCs joined to a control
node that supplied the bolt pre-load. In MSC Nastran, this could be done via explicit MPCs or using the BOLT entry,
which simplified the process a bit, but the mesh still needed to be split manually by the user.
A few releases back, Patran introduced a Bolt Pre-load tool (under the Tool/Modeling/Bolt Pre-load pulldown menu) that
allows the user to easily create the input for an MSC Nastran BOLT entry by automatically:
Determining the bolt axis direction
Splitting the mesh for the user
Creating the control node
Applying the load and constraints to the control node
Writing out the appropriate BOLT entry for each defined bolt
In addition the tool allowed for graphical verification of the mesh split.
In MSC Nastran 2022, a new BOLT1 entry has been introduced that no longer requires the user to split the mesh of the
bolt prior to the analysis. Patran now supports this new BOLT1 entry in two different manners:
1.Using the Bolt Pre-load tool
2.Manually creating a Bolt LBC&lt;/p&gt;
&lt;p&gt;651 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Bolt Pre-load Tool
Two new methods are added to define bolts using the BOLT1 entry.
Simple
Cross-Section
The other methods (Geometric, Vectorial, Elemental, and Manual) support the original BOLT method in MSC Nastran.
The two new methods support the new BOLT1 method and are briefly described below. For full details please see Bolt Pre-
load (Ch. 11) in the Patran Reference Manual .&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support652
Main Index
Simple
This method works in the following manner:
1.Give the Bolt Pre-load definition a name (or use the default supplied)
2.Define the load (set it to Force or Displacement) - this is a scalar value
3.Define an offset of the control node for visualization and placement purposes
4.Select the all the elements that define the bolt
Once the above are supplied, the tool automatically creates the control node, a coordinate system with the x-direction in
the bolt axis direction, a load in the bolt axis direction at the center of the bolt and offset as defined by the input above. On
export of the MSC Nastran input file, the BOLT1 entry is written using the simple option with a FORCE or SPCD placed
on the control node.
Figure 12-13  Simple Pre-load form and bolt model showing LBC markers,
coordinate, and offset load on control node&lt;/p&gt;
&lt;p&gt;653 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Cross-Section
This method works in the same manner as the Simple method with the following exceptions:
1.Optionally define a plane with the normal defining the Bolt Axis at or near the bolt midpoint
2.Select the elements that define the bolt as follows:
•If plane is NOT defined, select all the elements that define the bolt
•If a plane IS defined, select enough elements above and below the plane so as to properly identify the cross
section of the bolt
Once the above are supplied, the tool automatically creates the control node, a coordinate system with the x-direction in
the bolt axis direction (which is defined by the plane if supplied), a load in the bolt axis direction at the center of the bolt
(the cross section) and offset as defined by the input above. On export of the MSC Nastran input file, the BOLT1 entry is
written using the cross-section option with a FORCE or SPCD placed on the control node.
Figure 12-14  Cross-Section Pre-load form and bolt model showing
LBC markers, coordinate, and offset load on control node&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support654
Main Index
Manual Support Using Bolt LBC
The use of the Bolt Pre-load tool automatically creates the following:
a Bolt LBC (Simple or Cross-Section option)
a control node referenced by the Bolt LBC
a coordinate with the x-axis in the bolt axis direction
a load (Force or Displacement LBC) defining the bolt load using only the x-component relative to the defined
coordinate
It is not necessary to use the Bolt Pre-load tool. All of the above can be created manually.
The control node can be created using the Finite Element (Meshing) application (Create | Node). The analysis
coordinate system (ACID) of the node must be the global system.
The coordinate system can be created using the Geometry application. The x-axis should be in the bolt axis
direction.
The load can be created using the LoadsBCs application (Force or Displacement) with only an x-component
defined. If you wish to see the load graphically in the bolt axis direction, it must be associated to a coordinate
system with the x-axis in the bolt axis direction. See limitation below.
Finally a Bolt LBC must be created with either the Simple or the Cross Section option.
•The Simple option requires all elements of the bolt as the application region with the Control Node and Offset
defined as Input Data.
•The Cross-Section option requires two application regions, the first being the element just above the cross-
section, and the second being the nodes defining the cross-section. The node of the cross section must exist in
the selected elements. And the control node and a bolt axis direction (vector) are supplied as the Input Data.&lt;/p&gt;
&lt;p&gt;655 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Benefits
Automatic creation of bolts and bolt pre-loads
No need to split mesh
Multiple bolt creation
The above examples show single bolt pre-load creation. However, if the Multiple Bolts toggle is turned ON,
multiple bolt pre-loads can be done in a single operation.
For both the Simple and Cross-Section methods, simply select a representative selection of elements from each
desired bolt. It is not necessary to select all the elements of any of the bolt, as is the case if this toggle is OFF or no
plane is given to define the bolt axis. The connectivity of the bolts is determined and each disconnected mesh
detected is used to create a bolt pre-load definition. Each is given the same load and offset.
Limitations
Only the Implicit Nonlinear Preference should be used when analyzing bolt. Although the Bolt LBC is available
for creation under the Structural Preference, only SOL 400 supports a BOLT1 entry.
The Simple and Cross-Section methods that support BOLT1 do not constrain the control node in any manner, as
opposed to the other methods that support the BOLT entry. If any lateral or any other displacement constraints
need to be placed on the control node, this must be done manually in the LoadsBCs application by defining a
Displacement constraint directly on the control node.
In MSC Nastran, the BOLT1 load can be a FORCE or an SPCD (enforced displacement).
BOLT1 requires that the load be defined on a control node. The ACID (analysis coordinate system) of the control
node must be set to CID=0. The Bolt Preload tool sets the ACID of the control node to CID=0. It is possible for
the user to manually change the ACID in Patran in which case the ACID is written to the GRID entry - there is no
error check in Patran or the translator for this. The user must know that the control node must be defined with
ACID=0. The Bolt Preload tool, when used, sets this for the user. It is only if the user manually creates a Bolt LBC,
control node, and assigned loads, does he/she need to be cognizant that the control node must be in ACID=0.
BOLT1 also requires that the load be defined as a scalar value by defining only the x-direction - any other
directions are ignored. And the load must be defined in CID=0.
If FORCE, then the vector defined in Patran must have a value in the first component. The FORCE can be
defined in a coordinate system that is representative of the bolt axis direction. On translation, the FORCE is
written with CID=0 regardless of what it is defined as in Patran. The CID in Patran is only for display purposes.
Of course if a input file is read back in, it will have the FORCE defined in CID=0 and the direction may (mostly
likely will not) be displayed in the actual bolt axis direction. This is a limitation and a warning is issued.
If SPCD, then the vector defined in Patran must also have a value in the first component direction. The difference between
FORCE and SPCD is that SPCD (and any displacement constraint) is always defined in the ACID of the control node.
Since the bolt preload tool writes out the control node in ACID=0, if the enforced displacement in Patran is defined in the
bolt axis direction using a coordinate system, then special care is taken in the translator so as NOT to flag the mismatch
between the control node ACID and the Patran displacement CID. Normally if there is a mismatch, a warning message is
issued and the user is required to fix the situation. For BOLT1 control nodes this check is overridden and no conflict
message appears. Again on import, the load direction will have the same limitation as FORCE.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support656
Main Index
Bolt Pre-load
This modeling tool allows you to facilitate the creation of bolt pre-loads and the associated MPCs and/or other LBCs
associated to a bolt definition. This tool can be used for both Marc and MSC Nastran  except as noted.
Regardless of which method is used, the following general operations are done to create each bolt pre-load.
1.For those methods that need two separate meshes, the mesh of the bolt is split at a designated cutting plane. This
cutting plane is either designated by the user or automatically determined by the tool. A coordinate system is created
at the cutting plane surface with the y-axis in the direction of the axial bolt direction. Coincident nodes are created
for element nodes above and below the plane and the element connectivity is regenerated. (If the Manual method
is used, the mesh is assumed to already be split in certain cases as explained later.)
2.For methods using two separate meshes, MPCs are created to connect the two sections above and below the
determined cutting plane. The coincident nodes created in the previous step are tied together via MPCs. Either
Overclosure type or Explicit MPCs are created. Marc analysis and MSC Nastran  SOL 400 typically use Overclosure
types. MSC Nastran  can also use Explicit MPCs.
3.A control node is created at the coordinate system location that defines the cutting plane and it is connected to each
set of node pairs. The control node location can be offset as required for visualization purposes.
4.A designated load (force or displacement) is applied for the pre-load in the local y-direction (axial bolt direction) of
the coordinate system created at the control node location. Lateral displacements of the bolt are also fixed by a
displacement constraint. A couple of methods use the x-axis instead as explained later.
5.Each bolt pre-load is named and stored in the database.
6.Undo, Show and Delete capabilities are available.
Six (6) methods are available to define the bolt pre-loads. Each has specific inputs. All have some common inputs. Each is
explained below:
Note: If an MSC Nastran input file containing a BOLT entry is imported, an Overclosure MPC is created in the
Finite Elements application and a bolt definition consisting of the BOLTs top and bottom nodes, the control
node, and any load and/or constraints associated to the control node with corresponding coordinate system is
also created. This definition then appears in the Bolt Pre-load utility with a name of bolt_&lt;!-- raw HTML omitted --&gt; , where
MPC_id  is the ID of the imported BOLT. If there are ID conflicts on import, any existing, conflicting bolt
definition is deleted if allowed by the user. The imported BOLT definition is always associated to the
Manual creation method.
Note: If the MSC Nastran input file contains a BOLT1 entry, a Bolt LBC is created as either a Simple or Cross-
Section definition. A corresponding bolt definition is also created in the Bolt Pre-load utility with a name of
bolt_ &amp;lt;BOLT1_id &amp;gt;. Please see the section below on limitations.&lt;/p&gt;
&lt;p&gt;657 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Simple Method
This is by far the easiest and most intuitive method to use. A set of elements is selected that defines the bolt. Those elements
and other input is used to write a BOLT1 definition to the MSC.Nastran input file. Only MSC.Nastran is supported with
this method. Based on the geometric dimensions and using Patran’s mass property utility, the most likely axial direction of
the bolt is also determined. The mesh is not split as this is done internally during the MSC.Nastran run, but a representative
split is retained for visualization, if requested in the Show action. If the geometric properties of the selected element set do
not distinctly determine the axial direction of the bolt, the cutting plane may not be determined correctly and a strange cut
may result. At least a two to one axial versus width ratio is recommended. Please note the following:
The application region, that is, the elements selected that define the bolt should:
•Be one contiguous/equivalenced set of elements (1D, 2D, or 3D)
•Have enough elements to clearly define the axial direction
•Only define a single bolt - pre-loads can only be define one at a time - see multiple bolt creation below.
If any of the above are not followed, a strange results may occur. In any case, the selected set of elements is what is used to
define the BOLT1 definition in MSC.Nastran and written.
The Simple method does its best to determine the bolt axis as explained above. If the cut appears to be strange and/or the
applied load (x-direction of created coordinate frame) does not appear to be in the axial bolt direction, then you will likely
have to create your own vector/cutting plane that defines the axial bolt direction. See the Cross-Section based method
below.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support658
Main Index
Simple Method Input Parameters:
The Simple method produces the following as part of the bolt preload definition:
1.A Control Node.
2.A Bolt LBC, with the Simple option set. This can be seen in the LoadsBCs application. The selected elements make
up the Application Region. The Offset and Control Node make up the Input Data.
3.The bolt load (Force or Displacement), with the load in the axial x-direction on the Control Node, This can also
be seen in the LoadsBCs application.
4.A coordinate system at the center of the bolt with the x-axis in the direction of the bolt axis.Parameter Description
Bolt Name Enter a bolt name. The bolt name is incremented with a prefix of bolt_#  if no
specific name is given.
Axial Bolt Load Enter the magnitude of the force or displacement of the bolt load (set the Object&lt;br&gt;
to Force  or Displacement ).
Control Node Offset
Direction Vector
Offset (Fraction of
Bolt Length)This is a direction vector that determines the direction in which the control node
is to be offset from the center of the bolt. This is mainly for visualization
purposes, but does determine where in space the Control Node is placed relative
to the center of the bolt. The magnitude of each component determines the
distance from the center of the bolt. Typically the load should be applied at the
center of the bolt, with this vector controlling the location of the Control node
perpendicular to the bolt axis. If the bolt load needs to be offset in the bolt axis
direction, use the Offset parameter.
The Offset is written to the BOLT1 entry in the OFFSET field as a fraction of
the bolt length. Valid only between 0 and 1.
Target Element Type Set this to 1D, 2D, or 3D for bar elements, shell or 2D elements, or 3D solid
elements, respectively.
Auto Exec If this toggle is ON, the bolt preload definition is created as soon as the list of
element is selected.
Multiple Bolts If this toggle is ON, multiple bolt preload definitions are created based on
connectivity of the selected elements. See Geometric or Vectorial methods.
Beam/2D or 3D
ElementsSelect the actual element set graphically when this data box is active.
Apply Press the Apply button to create the bolt preload definition. If the Auto Execute
toggle is ON, the Apply is automatic after the elements are selected. Use the
Undo function/icon if the bolt definition is not what you expected.&lt;/p&gt;
&lt;p&gt;659 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Cross-Section Method
This method differs from the Simple method in that a specified cutting plane must be defined that defines the bolt axis. A
set of elements is selected that defines the bolt. Those elements and other input is used to write a BOLT1 definition to the
MSC.Nastran input file. Only MSC.Nastran is supported with this method. Using the cutting plane, a set of top and
bottom elements are determined. The mesh is not split as this is done internally during the MSC.Nastran run, but a
representative split is retained for visualization, if requested in the Show action. Please note the following:
The application region, that is, the elements selected that define the bolt should:
•Exist both above and below the cutting plane, otherwise the operation will fail
•Only define a single bolt - pre-loads can only be define one at a time - see multiple bolt creation below.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support660
Main Index
Cross-Section Method Input Parameters:
The Cross-Section method produces the following as part of the bolt preload definition:
1.A Control Node.Parameter Description
Bolt Name Enter a bolt name. The bolt name is incremented with a prefix of bolt_#  if no
specific name is given.
Axial Bolt Load Enter the magnitude of the force or displacement of the bolt load (set the Object&lt;br&gt;
to Force  or Displacement ).
Control Node Offset
Direction Vector
DistanceThis is a direction vector that determines the direction in which the control node
is to be offset from the center of the bolt. This is mainly for visualization
purposes, but does determine where in space the Control Node is placed relative
to the center of the bolt. The magnitude of each component is set using the
Distance parameter. The vector itself only determines direction from the center
of the bolt. Typically the load should be applied at the center of the bolt, with
this vector controlling the location of the Control node perpendicular to the bolt
axis.
Target Element Type Set this to 1D, 2D, or 3D for bar elements, shell or 2D elements, or 3D solid
elements, respectively.
Auto Exec If this toggle is ON, the bolt preload definition is created as soon as the list of
element is selected.
Multiple Bolts If this toggle is ON, multiple bolt preload definitions are created based on
connectivity of the selected elements. See Geometric or Vectorial methods.
[Bolt Axis:] This is a cutting plane that can be defined with any of the valid select mechanism
available. Valid cutting planes can be things like coordinate axes  or two points
creating a vector. The plane must be located where the bolt center is expected to
be. Note that this input is optional. If no bolt axis is given, then the
determination of the bolt axis and cutting plane is done in exactly the same way
as the Geometric method, except that the mesh itself if not split. See the
Geometric method description.
Beam/2D or 3D
ElementsSelect the actual element set graphically when this data box is active. Make sure
that enough elements are selected both above and below the cutting plane. If no
cutting plane (Bolt Axis) is supplied, then you must select the entire set of
elements that defines the bolt.
Apply Press the Apply button to create the bolt preload definition. If the Auto Execute
toggle is ON, the Apply is automatic after the elements are selected. Use the
Undo function/icon if the bolt definition is not what you expected.&lt;/p&gt;
&lt;p&gt;661 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
2.A Bolt LBC, with the Cross-Section option set. This can be seen in the LoadsBCs application. Two application
regions are defined. The first contains the elements below the cutting plane and the second contains the nodes that
define the cutting plane. The Bolt Axis and Control Node make up the Input Data.
3.The bolt load (Force or Displacement), with the load in the axial x-direction on the Control Node, This can also
be seen in the LoadsBCs application.
4.A coordinate system at the center of the bolt with the x-axis in the direction of the bolt axis.
Limitations of Simple and Cross-Section Method
Only the Implicit Nonlinear Preference should be used when analyzing bolt. Although the Bolt LBC is available
for creation under the Structural Preference, only SOL 400 supports a BOLT1 entry.
The Simple and Cross-Section methods that support BOLT1 do not constrain the control node in any manner, as
opposed to the other methods that support the BOLT entry. If any lateral or any other displacement constraints
need to be placed on the control node, this must be done manually in the LoadsBCs application by defining a
Displacement constraint directly on the control node.
In MSC Nastran, the BOLT1 load can be a FORCE or an SPCD (enforced displacement).
BOLT1 requires that the load be defined on a control node. The ACID (analysis coordinate system) of the control
node must be set to CID=0. The Bolt Preload tool sets the ACID of the control node to CID=0. It is possible for
the user to manually change the ACID in Patran in which case the ACID is written to the GRID entry - there is no
error check in Patran or the translator for this. The user must know that the control node must be defined with
ACID=0. The Bolt Preload tool, when used, sets this for the user. It is only if the user manually creates a Bolt LBC,
control node, and assigned loads, does he/she need to be cognizant that the control node must be in ACID=0.
BOLT1 also requires that the load be defined as a scalar value by defining only the x-direction - any other
directions are ignored. And the load must be defined in CID=0.
If FORCE, then the vector defined in Patran must have a value in the first component. The FORCE can be
defined in a coordinate system that is representative of the bolt axis direction. On translation, the FORCE is
written with CID=0 regardless of what it is defined as in Patran. The CID in Patran is only for display purposes.
Of course if a input file is read back in, it will have the FORCE defined in CID=0 and the direction may (mostly
likely will not) be displayed in the actual bolt axis direction. This is a limitation and a warning is issued.
If SPCD, then the vector defined in Patran must also have a value in the first component direction. The difference
between FORCE and SPCD is that SPCD (and any displacement constraint) is always defined in the ACID of the
control node. Since the bolt preload tool writes out the control node in ACID=0, if the enforced displacement in
Patran is defined in the bolt axis direction using a coordinate system, then special care is taken in the translator so
as NOT to flag the mismatch between the control node ACID and the Patran displacement CID. Normally if
there is a mismatch, a warning message is issued and the user is required to fix the situation. For BOLT1 control
nodes this check is overridden and no conflict message appears. Again on import, the load direction will have the
same limitation as FORCE.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support662
Main Index
Geometric based
This is an easy and intuitive method to use for creating bolt preload definitions where the mesh of the bolt needs to be split.
A set of elements is selected that defines the bolt. Based on the geometric dimensions and using Patran’s mass property
utility, the most likely axial direction of the bolt is determined. The mesh is split at the center of the selected element set.
If the geometric properties of the selected element set do not distinctly determine the axial direction of the bolt, the cutting
plane may not be determined correctly and a strange cut may result. At least a two to one axial versus width ratio is
recommended. Please note the following:
The application region, that is, the elements selected that define the bolt should:
•Be one contiguous/equivalenced set of elements
•Have enough elements to clearly define the axial direction
•Only define a single bolt - pre-loads can only be define one at a time - see multiple bolt creation below.
If any of the above are not followed, a strange mesh cut may result.
The Geometric based method does its best to determine the bolt axis as explained above. If the cut appears to be strange
and/or the applied load (y-direction of created coordinate frame) does not appear to be in the axial bolt direction, then you
will likely have to create your own vector that defines the axial bolt direction at the center location of the cutting plane
where you want the mesh split. See the Vector based method below.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P35</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_035/</guid>
      <description>
        
        
        &lt;p&gt;663 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Vector based
This method requires that you define a vector, the base of which determines the location of the cutting plane, which is
normal to the defined vector. The element set selected must have a few layers of element both above and below the base of
the defined vector plane. This method is identical to the Geometric based method except that you supply the vector that
defines the bolt axial axis direction. A coordinate system is created at the base of the vector with the y-direction in the
direction of the defined vector. The control node is located at this point and then offset as requested. It is up to the user to
ensure the direction of the vector is in the axial direction of the bolt. The y-coordinate of the locally created coordinate is
the axial bolt direction.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support664
Main Index
Element based
This method may be more advantageous for certain element types in that you select element faces (3D), element edges
(2D), or an element (1D) where you want the mesh split and the MPCs are automatically created. For 3D elements, this
can be difficult as the graphics screen can get messy trying to select element faces, especially TET elements. For 2D and 1D
elements, this method is easy. The split occurs only for the selected element entities, which may be problematic if you only
select a portion of the cross section. Please note the following for this method:
For 1D, only a single element should be selected. The split occurs at the node farthest from the origin. If multiple
elements are selected, only the first is used. The bolt axis is defined by the direction of the selected element.
For 2D, select element edges of the connected elements through which the mesh should be split. Make sure you
select all element edges that define how the mesh is to be split. Leaving out any edge through the cross section will
result in an incomplete mesh split. It is OK to use a single picking mechanism (and SHIFT key for multiple
selection) or rectangular/polygon picking to select all edges simultaneously. The bolt axis direction is determined
by the node connectivity of the first selected edge, the average location of all nodes of the selected edges, and the
normal of the element of the first selected edge. A vector from the first selected element edge’s node and the
average location is made and the bolt axis is then the cross product of the element normal and this vector. This
determines the bolt axis for any arbitrarily oriented model. If the selected edges are not straight and perpendicular
to the expected bolt axis, the actual bolt axis may not appear as desired. Also selecting different edges as the first
selected edge can change bolt axis orientation. The first selected edge should be as perpendicular to the expected
bolt axis as possible.&lt;/p&gt;
&lt;p&gt;665 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
For 3D, select element faces in the same way as 2D element edges. The same comments apply for 3D element faces
as for 2D element edges. The bolt axis direction is determined by the node connectivity of the first selected face,
the average location of all nodes of the selected faces, and the vectors from the averaged location to the first and
second face nodes. The bolt axis is the cross product of these two vectors. This determines the bolt axis for any
arbitrarily oriented model. If the selected faces are not straight and perpendicular to the expected bolt axis, the
actual bolt axis may not appear as desired. Also selecting different faces as the first selected face can change bolt axis
orientation. The first selected face normal should be as perpendicular to the expected bolt axis as possible.
For 2D and 3D, make sure you select all the element edges or faces, respectively, that define the entire cut through
the bolt or else you will not get a fully disconnected mesh. Internally the operation finds all nodes associated to the
selected edges or faces and then subsequently finds all element associated to those nodes. With the elements
identified and the definition of the cutting plane, the mesh is split by determining which element exist above and
below the plane.For 2D and 3D, make sure you select all the element edges or faces, respectively, that define the
entire cut through the bolt or else you will not get a fully disconnected mesh. Internally the operation finds all
nodes associated to the selected edges or faces and then subsequently finds all element associated to those nodes.
With the elements identified and the definition of the cutting plane, the mesh is split by determining which
element exist above and below the plane.
Edge/Face Selection  on one side (OK)  Edge/Face Selection  on both sides (OK)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support666
Main Index
Manual creation
There are two modes when manually creating the bolt preload definition. The first mode assumes the mesh is already split
and the second assumes that the mesh needs to be split.
Mesh already split. In this mode, you supply a list of top nodes (independent) and a list of bottom nodes
(dependent). The mesh is assumed to be split already. The same number of top nodes and bottom nodes is
required. The operation detects and ensures there is a one-to-one correspondence between the top and bottom
nodes based on a geometric tolerance and aborts if not. By default this tolerance is the global model tolerance as set
under the Preference/Global menu, but can be changed directly on the bolt modeling form. The tolerance check
can also be based on a cube or spherical check. The top nodes must be coincident with the bottom nodes within
this specified tolerance for the operation to be successful. The top nodes and bottom nodes can be in any order,
but there must be the one-to-one correspondence as already mentioned.
Mesh split requested. In this mode, you supply a list of nodes (bottom or dependent) across which the split is to be
made and a list of corresponding elements below the split. The operation then splits the mesh at the nodes of these
element to produce the top (independent) node list. The generated top and supplied bottom nodes then become
part of the bolt MPC definition.
In both cases, the bolt load is defined as a vector relative to a coordinate system. By default this is the y-direction of the
global coordinate system designated as a typical Patran list processor vector string: “&amp;lt;0 10Coord 0&amp;gt;”. It is up to the user
to ensure that the bolt load direction is in the axial direction of the bolt. The magnitude of the load is supplied as part of
the vector components. A local coordinate system is not created in this manual operation and is assumed to already exist.
Any valid Patran list processor vector string can actually be used, but the magnitude of the load can only be controlled using
the vector form: “&lt;!-- raw HTML omitted --&gt;”&lt;/p&gt;
&lt;p&gt;667 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
As with the other methods, the load is placed on the control node. The control node can be supplied directly by the user
using an existing node or, if not supplied, it is created at the center of the mesh split (average location of the top and bottom
nodes of the mesh split). When the control node is automatically created, it can also be offset for visualization purposes
using a vector definition as with the other methods. This vector offset is defined relative to the coordinate system used to
define the bolt axial load.
Input Parameters:
Each input is described in the table below:
Action:&lt;br&gt;
Create   Creates one or more b olt pre-load s.
If you need to modify an existing bolt pre-load, you must first delete it and
then re-create it.
Delete Deletes  one or more e xisting bolt pre-load s.
You can select an existing bolt by name (s) or if you are not sure which one you
want, you can select a control node graphically. The application determines
which bolt pre-load is associated to the selected control node.
Note that only e ntities created by the bolt pre-load are deleted unless those
entities are modified by the user to reference other entities in some way.
Warning messages are issued in those cases and some of the entities such as the
coordinates may not be deleted.&lt;br&gt;
You can elect to delete all entities associated with (that were created by) the bolt
preload operation or you can elect to retain the associated Control Node,
Coordinate System, Multipoint Constraint (MPC), Bolt LBC,  load and
constraints, and/or the mesh split. It may not be possible to delete just one or
two of these entities as they may be associated to other entities. You will be
warned if this is the case.
Show Displays information about one or more b olt pre-loads.
You may select a bolt by name (s), by control node, or show all in the database.
A separate form appears with a spreadsheet showing the different components
of each b olt pre-load. Each cell in the spreadsheet can be selected and the
corresponding entity graphically highlighted, if applicable. Textual
information is also displayed in the text box of the subordinate form .&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support668
Main Index
If you turn ON the Verify Mesh Split  toggle, then when pressing the Apply&lt;br&gt;
button or clicking on a bolt name in the spreadsheet, the selected bolt is color
coded showing the two distinct meshes made by the mesh split operation. This
requires the bolt to have been defined with a set of elements and/or a distinct
mesh split. Please note the following:
This does not work for bolts split using the 1D Elemental method
since the application region is simply a single element.
For properly defined bolts, this results in two distinctly displayed
meshes. If the application region is not discontinuous from the rest of
the model, the operation may not be able to identify distinct meshes.
If two meshes are not identified, check the mesh split carefully.
The current graphic settings of the active viewport are saved and then
restored after the show operation is complete, reset, or the form is
closed. Make sure bolts of interest are posted.
For the Simple and Cross-Section methods, although the mesh is not
split, the operation shows the top and bottom meshes above/below
the cutting plane.
Note the last two columns  of the spread sheet highlight the top and bottom&lt;br&gt;
elements of the bolt  mesh split for verification purposes. For all but the Simple
and Cross-Section methods, th e independent nodes of the bolt overclosure or
explicit MPC should be the top and the dependent should be the bottom. T o
verify this, a positive bolt load should point to the top bolt nodes/elements and
the bottom would be the opposite.
Object When creating a bolt pre-load, the designated load can be either a force or a
prescribed displacement.  Positive loads place the bolt in tension and negative
loads place the bolt in compression.
Method The six (6) m ethods are described above as Simple, Cross-Section, G eometric,
Vector, and Element based  plus a Manual creation.  The first two are only
applicable to MSC.Nastran and write the BOLT1 entry on translation. The
others write the BOLT entry, which is defined as an Overclosure MPC unless
the MPC type is Explicit, in which case an MPC is written instead.
New Bolt Name Enter a bolt pre-load name.  Or use the proposed name, which gets
incremented.&lt;/p&gt;
&lt;p&gt;669 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Axial Bolt Load Enter the magnitude of the bolt pre-load to be applied. This is a force or a
prescribed displacement depending on the set Object . The load is created in
the y-direction in the coordinate system defining the axial bolt axis  (x-direction
for Simple and Cross-Section methods).  A force LBC or a displacement LBC
is created by the same name as the bolt pre-load and can be viewed and/or
modified using the Loads/BCs application. Also the lateral displacements of
the bolt are fixed (except for Simple and Cross-Section methods) b y creating a
displacement constraint, also viewable in the Loads/BCs application, the name
of which is the bolt name with “_LateralDisp” appended.
For the Manual method, the load is specified as a vector component in the
form “&lt;!-- raw HTML omitted --&gt;”. The default is the y-direction of the global
coordinate system: “&amp;lt;0 10Coord 0&amp;gt;”. Other Patran list processor vector
definitions can also be used by using the select mechanism, but you will not
have control over the actual magnitude of the bolt load in these cases. It is up
to the user to ensure that the bolt load for the Manual method is in the axial
direction of the bolt and that the positive direction of the load points toward
the top (independent) nodes of the bolt mesh split.
MPC T ype 1 Select the type of MPC required. You may not be given a choice depending on
the set Analysis Preference  and Analysis Type . Overclosure is the desired
method for both MSC.Marc  and MSC Nastran  SOL 400 . Other MSC
Nastran  solutions need Explicit MPCs defined. For MSC.Marc , Overclosure
creates TYING type 69 and Explicit creates SERVO LINKs. For MSC Nastran&lt;br&gt;
SOL 400 , a BOLT  entry is created when using the O verclosure  MPC type,
otherwise,  Explicit MPCs are u sed.
Control Node Offset
Direction  Vector
MagnitudeA direction vector and magnitude can be supplied to offset the location of the
control node. This is highly recommended for visualization purposes. A vector
is provided, the length of which is the offset from the center of the cutting
plane relative to the created coordinate system defining the axial bolt direction.
You may enter a vector in any way allowable with the select mechanism or you
can manually type between the “&amp;lt; &amp;gt;” brackets a valid three-component
translational vector, e.g., &amp;lt;0, 5, 2&amp;gt;.
By default it is offset by one (1)  unit in the x-direction of the local coordinate
system (y-direction for Simple and Cross-Section methods) d efining the axial
bolt direction. But this may not be adequate depending on model dimensions&lt;br&gt;
and direction of the bolt axis.
Control Node
Select Control NodeFor the Manual method, if the Select Control Node toggle is ON, then you
can select an existing node as the Control Node. It is not possible to offset this
node. The node is directly used as the Control Node.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support670
Main Index
Tolerance T ype
T oleranceFor the Manual method, when checking that top and bottom nodes are
coincident, a tolerance is used. By default this is the global model tolerance as
set in Preferences/Global. You may change this here for the bolt preload
definition operation if necessary. The tolerance can be checked based on a cube
or spherical operation. In other words, the tolerance operation checks to see if
a pair of nodes fits within a tolerance cube or a tolerance sphere.
Auto Execute If this toggle is ON, then the operation of splitting the mesh and creating the
pre-load begins automatically without have to press the Apply button  once the
elements have been graphically selected . For the Simple, Cross-Section,
Vectorial and Geometric methods, this is ON by default. For the Elemental
method, this if OFF be default since the usage requires manually selecting
element edges or faces and can be annoying if the operation occurs without all
the entities properly selected.
You can always press the Undo icon immediately after a creation (or deletion)
to undo the creation (or deletion) operation and start over. The bolt pre-load
is committed to the database and cannot be undone without doing a delete if
you leave the bolt pre-load tool or change the Action on the bolt pre-load tool
or create some other database entity .
Multiple Bolts This toggle exists for the Simple, Cross-Section, Geometric , and Vectorial
methods only. If this toggle is ON, then multiple bolt pre-loads can be created
in a single operation by selecting one or more elements from each of the meshes
defining the bolts. This works by taking the selected elements and identifying
all completely discontinuous (unconnected) meshes associated to the selected
elements. Once the meshes have been identified, a separate bolt is created for
each. All bolts receive the same load and offset vector. If no discontinuous
meshes are identified, then only one bolt is created.
Split Mesh For the Manual method, if the mesh is to be split, turn this toggle ON. You
are then required to supply a list of nodes  along a line or surface of the supplied
list of elements where the mesh split it to be made. The mesh is split along the
line/surface of the supplied nodes and the selected elements define the bottom
side of the bolt. Coincident nodes are created during the mesh split,
correspond to, and are associated with the top elements defining the bolt.
Element /Node  List(s)&lt;/p&gt;
&lt;p&gt;671 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Method :
Simple Select a list of 1D, 2D, or 3D elements that defines the entire bolt geometry.
The axial direction of the bolt should be longer than the lateral directions in
order for the algorithm to determine the proper axial direction of the bolt. The
cutting plane will be created at the center of the bolt as best as possible based
on the element connectivity. The control node offset will be created from the
location of the cutting plane. If the Multiple Bolts toggle is ON, only one or
more elements need to be selected from each location where a bolt pre-load is
to be created, otherwise all the elements making up the bolt must be selected.
With this toggle ON, you can select a single element and all connected
elements will be used as the application region to create just a single bolt pre-
load. Note that the mesh is not actually split with this method as this operation
is done in MSC.Nastran internally using the BOLT1 simple form.
Method :
Cross-Section For this method, select enough 1D, 2D, or 3Delements above and below the
base of the Bolt Axis vector such that a proper cut can be made. T wo or three
layers of elements above and below is usually sufficient. An error may result or
a bad looking cut may be had if not enough element above and below are given.
If the Multiple Bolts toggle is ON, only one or more elements need to be
selected from each location where a bolt pre-load is to be created, otherwise all
the elements above and below the cutting plane must be selected. With this
toggle ON, you can select a single element and all connected elements will be
used as the application region. Note that the mesh is not actually split with this
method as this operation is done in MSC.Nastran internally using the BOLT1
cross-section form where only the cross-section nodes and connected elements
below the cutting plane are supplied.
Method :
Geometric Select a list of elements that sufficiently defines the bolt geometry. The axial
direction of the bolt should be longer than the lateral directions in order for
the algorithm to determine the proper axial direction of the bolt. The cutting
plane will be created at the center of the bolt as best as possible based on the
element connectivity. The control node offset will be created from the location
of the cutting plane.  If the Multiple Bolts toggle is ON, only one or more
elements need to be selected from each location where a bolt pre-load is to be
created, otherwise all the elements making up the bolt must be selected. With
this toggle ON, you can select a single element and all connected elements will
be used as the application region to create just a single bolt pre-load.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support672
Main Index
Method :
Vectorial For this method, select enough elements above and below the base of the Bolt
Axis vector such that a proper cut can be made. T wo or three layers of elements
above and below is usually sufficient. An error may result or a bad looking cut
may be had if not enough element above and below are given.  If the Multiple
Bolts toggle is ON, only one or more elements need to be selected from each
location where a bolt pre-load is to be created, otherwise all the elements above
and below the cutting plane must be selected. With this toggle ON, you can
select a single element and all connected elements will be used as the
application region.
Method :
ManualSplit Mesh OFF: A list of top (independent) nodes and a list of bottom
(dependent) nodes is supplied from which the bolt MPC is created. The two
node lists must have the same number of nodes in them each and each node
pair between the two lists must be coincident with the given Tolerance. The
nodes do not have to be in the same order as the operation will find which
nodes are coincident between each list. The mesh is not split in this case. It is
assumed the mesh is already split. Selecting the top and bottom nodes when
they are coincident can be problematic. See the notes below.
Split Mesh ON: A list of nodes (dependent) and a list of elements below the
mesh split is required. The mesh is then split at the nodes of these given
elements. You must supply all the nodes and element that make up the request
split in order to have the split operation completely separate the top and
bottom of the bolt mesh. The mesh split operation then creates the top
(independent) nodes of the bolt MPC.
Bolt Axis
Method s:
Cross-Section
Vectorial This is a required vector input to define the axial direction of the bolt for the
Cross-Section and V ectorial method s. T ypically you only need to use the select
mechanism to define a vector using two nodes on the outside of the bolt. You
can use any method that the select mechanism allows to define a vector. You
may enter a vector in any way the is allowable with the select mechanism or
you can manually type between the “&amp;lt;&amp;gt;” brackets a valid three-component
translational vector, e.g., &amp;lt;0, 5, 2&amp;gt;. In this method, you can define any
direction to do the cut and apply the pre-load. Care should be taken in that
some strange cuts may results. This is the method to use if you wish to use a
non-axial bolt pre-load.
Note that for the Cross-Section method, this input is optional. If the bolt axis
is not supplied, the determination of the cutting plane is done in the same
manner as the Geometric method, meaning all the elements defining the bolt
must be supplied in order to properly determine the cutting plane.&lt;/p&gt;
&lt;p&gt;673 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
Note: Use the FEM application and do a Verify / Element / Boundary to ensure that the bolt tool properly cut the
bolt into two sections with coincident nodes between or use the Show operation in this tool with Verify
Mesh Split turned ON.
You can use the Undo icon to remove an undesired bolt creation (or deletion) as long as you do it before
leaving the bolt modeling tool or change its Action or create some other database entity that cause a database
commit operation.
When selecting top and bottom nodes that are coincident or when trying to select element faces, the
following procedure is recommended. Turn ON element shrink under Display/Finite Elements. Then select
the element faces directly on the side of the desired element as they are now visible independently from each
element. If trying to select coincident nodes, use the Tools/List/Create to create a list of top nodes associated
to the element faces or edges of interest on one side of the mesh split. And then do the same for the bottom
nodes. With the element shrink ON, it makes it easier to select the element faces on each side of the mesh
split in order to get the associated node list. You then copy the list contents and paste them into the Top or
Bottom Nodes data box.
Positive bolt loads should result in tension in the bolt. Negative bolt loads should result in compression in
the bolt. The direction of the load and whether it results in tension or compression is dependent on the
definition of the top (independent) and bottom (dependent) nodes of the bolt MPC. Positive bolt loads must
point toward the top (independent) nodes of the bolt MPC. For the Manual method it is up to the user to
ensure this. All other methods should orient a positive bolt load toward the top nodes.Target Element Type
Method s:
Simple
Cross-Section
Elemental In this method, you must select the element dimensionality of the bolt: 1D
bars, 2D shells/planar elements, or 3D solids.
1D Element
2D Element Edges
3D Element FacesThe application region defines the actual location where the split is made for
the Elemental method. For 1D beam/bar elements, you select a single element
and the split is made at the node farthest from the origin. For 2D shell or
planar elements, you select element edges that define the cut. For 3D elements,
you select the element faces to define the cut. All the element edges or faces
need to be connected together in order for this method to create a proper cu t.
1 When manually creating MPCs via the Finite Elements  application, various checks are made
to ensure proper MPC creation. These checks are bypassed when using this tool. If you wish to
enable the checks, set the environment variable SKIP_MPC_CHECKS  to NO or OFF or FALSE . Any
other setting of this environment variable turns it ON, if it is set, and the MPC checks are skipped.
You can also use a PCL preference setting command
pref_env_set_logical(“SKIP_MPC_CHECKS”, FALSE)
and place it in the settings.pcl  file or manually issue the command via the command line.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support674
Main Index
Bolt PCL Functions
The following PCL functions are used and issued in the command line (session file) when creating or deleting bolts and
their pre-loads:
bolt_create_ simple(bolt_name,  bolt_load, disp_load, offset, offset_magn, app_region)
bolt_create_ crossect(bolt_name, bolt_load, disp_load, offset, offset_magn, app_region , vector )
bolt_create_geometric(bolt_name, mpc_type, bolt_load, disp_load, offset, offset_magn, app_region)
bolt_create_vectorial(bolt_name, mpc_type, bolt_load, disp_load, offset, offset_magn, app_region,
vector)
bolt_create_elemental(bolt_name, mpc_type, bolt_load, disp_load, offset, offset_magn, elem_dimen,
app_region)
bolt_create_ manual(bolt_name, mpc_type, bolt_load, disp_load, offset, offset_magn, tol_mthd,
tolerance, top_nodes,  bot_node)
or
(bolt_name, mpc_type, bolt_load, disp_load, offset, offset_magn, tol_mthd,
tolerance, node_list, elem_list)
bolt_delete
bolt_delete2(bolt_to_delete, control_node)  or
(bolt_to_delete, control_node, del_CN, del_CID, del_MPC, del_LBCs, del_meshSplit)
Description:
Creates bolt preload using the indicated method (geometric, vectorial, elemental , or manual ) or deletes a
bolt preload definition by indicating either the bolt name or the control node (one or the other, not both).
Input:
STRING bolt_name Name of the bolt to create.
STRING() bolt_to_delete Name of the bolt to delete. It is not necessary to supply the
control_node , if the name is supplied. Enter a blank string (“”)
for the control_node .&lt;/p&gt;
&lt;p&gt;675 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Bolt Support
Main Index
LOGICAL del_CN
del_CID
del_MPC
del_LBCs
del_meshSplitWhen deleting bolt preload definitions, you may specify to delete
the Control Node, associated coordinate frame (CID), multipoint
constraint (MPC), load and constraints (LBCs), and/or
corresponding mesh split. All are deleted by default (TRUE). If some
are to be deleted and other not, the operation may or may not delete
the entities depending on associations with other entities.
STRING control_node Enter the control node in list processor format, e.g: “Node 10”. The
bolt preload associated to this control node is deleted. It is not
necessary to supply the bolt name in this case. Enter a blank string
for bolt_to_delete  when using the control node to delete a bolt
definition, e.g.: “”.
STRING mpc_type T ype of MPC to create: “Overclosure” or “Explicit”
REAL bolt_load Methods: Simple, Cross-Section, Geometric, Vectorial, Elemental
Value of the pre-load to be applied.  This value is the axial bolt load
in the y-direction of the created coordinate system.
STRING bolt_load Method: Manual
Value of the pre-load to be applied  input as a vector string in the
form “&lt;!-- raw HTML omitted --&gt;”. This value is the axial bolt load where
the vector coordinates, v1, v2, v3, are the x, y, and z-components of
the load in the axial bolt direction. They can be defined relative to a
specific, existing coordinate frame also, if desired. The default is
Coord 0, the global coordinate system. It is the user’s responsibility
to ensure that this vector is in the bolt’s axial direction. Any valid
Patran vector definition can also be supplied. However the
magnitude is only controllable when defining as a vector in the
above mentioned format.
LOGICAL disp_load TRUE if load is displacement, otherwise set to FALSE.
STRING offset
offset_magnOffset vector and magnitude, both i nput as a string to display the
pre-load. For example, enter “ 2.0” for the offset_magn  and “&amp;lt;1 0
0&amp;gt;” t o displace or offset the pre-load 2.0 unit s away from center of
the bolt  in the x-axis direction of the locally created coordinate
system for the bolt load.  This is for visualization purposes only and
does not affect actual load application.  The control node is created
at the location defined by this offset and is relative to the local
coordinate system created by this operation. The local y-direction is
the bolt axis.
STRING elem_dim For the elemental method, the dimension of the bolt e lements for
the bolt split. Either “ 1D”, “2D”, or “3D”.
STRING app_region Geometric  or Vectorial Methods: List processor string of elements
making up the bolt, e.g., “Elm 1:#”&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Bolt Support676
Main Index
Element 1D Method: List processor string of a single 1D bar
element where the bolt mesh is to be split, e.g., “Elm 1”
Element 2D Method: List processor string of 2D element edges
where the bolt mesh is to be split, e.g., “Elm 1.1.1 2.1.1 3.1.1”
Element 3D Method: List processor string of 3D element faces, e.g.,
“Elm 1.1 2.1 3.1”
STRING top_nodes
bot_nodesManual Method: List processor string of top nodes and string list of
bottom nodes of the mesh split if the mesh is already split, e.g.,
“Node 1 2 3” and “Node 4 5 6”.
STRING node_list
elem_listManual Method: If the mesh is to be split, then the node_list is a list
of nodes where the mesh is to be split and the elem_list is a list of
elements below the mesh split, e.g., “Node 1 2 3” and “Elm 1 2”.
STRING vector For the Cross-Section and Ve ctorial method, the vector that defines
bolt axis direction in any valid list processor vector definition format,
e.g: “&amp;lt;0.0, 1.0,.0.0&amp;gt;” indicating that the bolt axis is in the y-
direction of the global coordinate system.
Output:
INTEGER &lt;!-- raw HTML omitted --&gt; Non-zero status indicates an error occurred.&lt;/p&gt;
&lt;p&gt;677 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Introduction to R-Type Elements
Main Index
Introduction to R-Type Elements
An R-type element is an element that imposes fixed constraints between components of motion at the grid points or scalar
points to which they are connected. They could also be called constraint elements. Thus, an R-type element is
mathematically equivalent to one or more multipoint constraint equations. Each constraint equation expresses one
dependent degree of freedom as a linear function of the independent degrees of freedom.
The R-type elements are sometimes referred to as rigid elements; however, the name “rigid” is misleading.The R-type
elements that are rigid consist of the RROD , RBAR , RBAR1 , RJOINT , RBE1 , RBE2 , RTRPLT  and RTRPLT1 . The RBE3  and
RSPLINE  are interpolation elements and are not rigid. A brief description of all of the R-type elements is presented in the
next section followed by a detailed description of the RBAR , RBE2 , and RBE3  elements; and a brief discussion of the
RJOINT  element.
Rigid Elements
Description of the R-Type Elements
Each of the R-type elements generates internal MPC equations in MSC Nastran. These equations are generated
automatically; you do not need to specify an MPC request in the case control section. R-type elements are included in your
model if they are included in the bulk data section. Unlike the MPC  entries, an R-type element cannot be changed between
subcases.
When using an R-type element, it is your responsibility to define which degrees of freedom are dependent and which are
independent. The simplest way to describe this is to say that the motion of a dependent degree of freedom is expressed as
a linear combination of one or more of the independent degrees of freedom. All dependent degrees of freedom are placed
in what is referred to as the m-set. The independent degrees of freedom are temporarily placed in the n-set, which is the set
that is not made dependent by MPCs or R-type elements. A constraint equation (an internal MPC equation) is generated
for each dependent degree of freedom. A complete description of MSC Nastran sets is given in the MSC Nastran Linear
Static Analysis User’s Guide , Matrix Operations  (Ch. 12).
Seven R-type elements are described, together with the number of constraint equations generated for each of the elements.
This number is the same as the number of dependent degrees of freedom that you specify for the element.
Table 12-3  R-Type Elements Available in MSC Nastran
Name Descriptionm = No. of Equations of
Constraint Generated
RROD Pin-ended rod which is rigid in extension. m = 1
RBAR Rigid bar with six degrees of freedom at each end. 1 &amp;lt; m &amp;lt; 6
RBAR1 Rigid bar with six degrees of freedom at each end. 1 &amp;lt; m &amp;lt; 6
RJOINT Rigid joint (coincident points) with six degrees of freedom at each end. 1 &amp;lt; m &amp;lt; 6
RTRPLT Rigid triangular plate with six degrees of freedom at each vertex. 1 &amp;lt; m &amp;lt; 12&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements678
Main Index
As an introduction to the R-type elements, consider the RROD  rigid element. For the RROD  element, you specify a single
component of translation at one of its two end points as a dependent degree of freedom. The equivalent component at the
other end is the independent degree of freedom. Consider the example shown in Figure 12-15.
Figure 12-15  An RROD Connection
For this example, a rigid connection is made between the X component of grid point 3 to the X component of grid point
2. When you specify the RROD  bulk data entry in the QRG  as shown, you are placing component 1 of grid point 3 (in the
global system) into the m-set. The remaining five components at grid point 3 and all the components at grid point 2 are RTRPLT1 Rigid triangular plate with six degrees of freedom at each vertex. 1 &amp;lt; m &amp;lt; 12
RBE1 A rigid body connected to an arbitrary number of grid points. The
independent and dependent degrees of freedom can be arbitrarily
selected.m &amp;gt; 1
RBE2 A rigid body connected to an arbitrary number of grid points.  The
independent degrees of freedom are the six components of motion at a
single grid point. The dependent degrees of freedom at the other grid
points all have the same user-selected component numbers.m &amp;gt; 1
RBE3 Defines a constraint relation in which the motion at a “reference” grid
point is the least square weighted average of the motions at other grid
points. The element is useful for “beaming” loads and masses from a
“reference” grid point to a set of grid points.1 &amp;lt; m &amp;lt; 6
RSPLINE Defines a constraint relation whose coefficients are derived from the
deflections and slopes of a flexible tubular beam connected to the
referenced grid points. This element is useful in changing mesh size in
finite element models.m &amp;gt; 1
RSSCON Transitions between plate and solid elements. M &amp;gt; 1Table 12-3  R-Type Elements Available in MSC Nastran  (continued)
Name Descriptionm = No. of Equations of
Constraint Generated
CBAR 1 RROD CBAR 2
1 2 3 4
Bulk Data Entry &amp;ndash; RROD,1, 2, 3,, 1
XY&lt;/p&gt;
&lt;p&gt;679 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
placed in the n-set and, hence, are independent. CBAR 1  is not connected to components Y, Z, Rx, Ry, and Rz of grid point
3 in any manner; therefore, the ends of the bars are free to move in any of these directions.
However, the ends of the two CBAR  elements are rigidly attached in the X-direction. Having the connection only in the X-
direction shows that one degree of freedom is placed in the m-set for each RROD  element.
For the other six R-type elements, several degrees of freedom may be specified as members of the m-set or the n-set. (Again,
the latter designation may be temporary; they may be removed by additional constraints in your model.) For the RTRPLT ,
RBE1 , RROD , and RBE3  elements, any unlisted degrees of freedom at the grid points to which the element is joined are not
connected to the element.  This lack of connection can be regarded as either a sliding release or a rotating joint release, or
both.
Five of the R-type elements ( RBAR , RJOINT , RTRPLT , RBE1 , and RBE2 ) must have exactly six components of motion in
the n-set (i.e., independent degrees of freedom). These six degrees of freedom must be able to represent all of the rigid body
motions of the element.
One word of caution is that the connection of two or more rigid elements to the same grid point should be done carefully
to avoid specifying a degree of freedom as a member of the m-set more than once; otherwise, a fatal message is issued.
RBAR Element
The RBAR  element rigidly connects from one to six dependent degrees of freedom (the m-set) to exactly six independent
degrees of freedom. The six independent degrees of freedom must be capable of describing the rigid body properties of the
element.
The most common approach when using the RBAR  element is to define one end of the RBAR  with all six independent
degrees of freedom with dependent degrees of freedom at the other end; i.e., the RBAR1  format. (However, placing all of
the independent degrees of freedom at one end is not a requirement.) To determine if the choice you make for the
independent degrees of freedom meets the rigid body requirements, ensure that the element passes the following simple test.
The format for the RBAR  bulk data entry is shown in the QRG .
If you constrain all of the degrees of freedom defined as independent on the RBAR  element, is the element prevented from
any possible rigid body motion?
As an example, consider the RBAR  configurations shown in Figure 12-16. For configurations (a) and (c), if the six
independent degrees of freedom are held fixed, the element cannot move as a rigid body in any direction. However, for (b),
if all six of the independent degrees of freedom are held fixed, the element can still rotate about the Y-axis. Configuration
(b) does not pass the rigid body test and does not work as an RBAR  element.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements680
Main Index
Figure 12-16  Defining Independent Degrees of Freedom on the RBAR
MSC Nastran generates internal MPC equations for the R-type elements. As an example of this, consider the model of a
thick plate with bars attached as shown in Figure 12-17. The interface between the bars and the plate is modeled two ways,
first using MPC entries and second using RBAR  elements.
Figure 12-17  Model of a Thick Plate with Bars Attached
Option 1 &amp;ndash; Model the T ransition with MPC Equations
Plate theory states that plane sections remain planar. If this is the case, then grid points 2 and 3 are secondaries  to grid point&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Therefore, you need to write the equations for the in-plane motion of grid points 2 and 3 as a function of grid point 1.
Each RBAR  element creates up to six constraint equations.GA
GA
GAGB
GB
GBIndependent 1 - 6
Independent 1,2,3,4,6
Independent 1,2,3,4,6Independent 2
Independent 3(a)
XZ(b)
(c)Acceptable
Not Acceptable
Acceptable
Y
X2
1&amp;quot; Thick PlateBar
BarQUAD Plate.5
.5Real Structure
31Finite Element Model
Bars&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;681 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
Looking only at the motion in the x-y plane,
The MPC entries for this model are as follows:
MPC
Option 2 - Model the T ransition with RBAR  Entries
The R-type elements are easier to use than the equivalent MPC  entries.
RBAR 99  generates MPC equations for the motion of grid point 2 as a function of grid point 1. Likewise, RBAR 100&lt;br&gt;
generates MPC equations for the motion of grid point 3 as a function of grid point 1. These RBAR s generate the MPC 1 2 3 4 5 6 7 8 9 10
MPC 1 2 1 1. 1 1 -1.
1 6 .5
MPC 1 3 1 1. 1 1 -1.
1 6 -.5
MPC 1 3 6 1. 1 6 -1.
MPC 1 2 6 1. 1 6 -1.
MPC 1 2 2 1. 1 2 -1.
MPC 1 3 2 1. 1 2 -1.
Note:    MPC = 1 must appear in the case control section to use these entries.
1 2 3 4 5 6 7 8 9 10
$RBAR EID GA GB CNA CNB CMA CMB
RBAR 99 1 2123456
RBAR 100 1 3123456u12u11.5u61– =
u13u11.5u61+ =u12displacement in the 1-direction at grid point 2 = 
u63u61=
u62u61=
u22u21=
u23u21=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements682
Main Index
equations for all six degrees of freedom at grid points 2 and 3. If it is desired to have the equations generated only for the
in-plane motion, the field labeled as CMB in the RBAR  entries has the values 126 entered.
A particular area of confusion for the new user is when you need to connect R-type elements together. The important thing
to remember is that you can place a degree of freedom into the m-set only once. Consider the two RBAR  elements shown
in Figure 12-18 that are acting as a single rigid member.
If you choose grid point 1 for RBAR 1  to be independent (1-6), then grid point 2 for RBAR 1  must be dependent (1 -6).
Since grid point 2 is dependent for RBAR 1 , it must be made independent for RBAR 2 . If you made grid point 2 dependent
for RBAR 2  as well as RBAR 1 , a fatal error would result. Since grid point 2 is independent (1-6) for RBAR2, grid point
3 will be dependent (1-6).
If you chose grid point 1 of RBAR 1  to be dependent, then grid point 2 for RBAR 1  would be independent. Grid point 2
of RBAR 2  would be dependent, and grid point 3 of RBAR 2  would be independent.
The RBAR  element is often used to rigidly connect two grid points in your model.
Figure 12-18  Connecting Two RBAR Elements
Both options for connecting the RBAR  elements are shown in Listing 12-1. (See
MSC_DOC_DIR/doc /doc/linstat/rbar1.dat ) For clarity, CBAR 3 , which is connected to grid point 3, is not
shown in Figure 12-18.
Listing 12-1  Connecting RBAR Elements
$
$ FILENAME RBAR1.DAT
$
ID LINEAR,RBAR1
SOL 101
TIME 2
CEND
TITLE = CONNECTING 2 RBARS
DISPLACEMENT = ALL
SUBCASE 1
LOAD = 1
SUBCASE 2
LOAD = 2
BEGIN BULK
$RBAR 1 RBAR 2
Independent 1-6 Dependent 1-6 Independent 1-6 Dependent 1-61 2 2 3
Note:RBAR s 1 and 2 are connected.
They are shown separated for clarity.X2 X2Y2Y2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P36</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_036/</guid>
      <description>
        
        
        &lt;p&gt;683 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
GRID    1               0.      0.      0.          &lt;br&gt;
GRID    2               10.     0.      0.
GRID    3               20.     0.      0.
GRID    4               30.     0.      0.              123456
$
$  OPTION 1
$
RBAR    1       1       2       123456
RBAR    2       2       3       123456
$
$  OPTION 2
$
$RBAR    1       1       2               123456
$RBAR    2       2       3               123456
$
CBAR    3       1       3       4       0.      1.      0.
PBAR    1       1       1.      1.      1.      1.
MAT1    1       20.4            .3
$
$ POINT LOAD
$
FORCE   1       1               1.       1.      0.      0.
FORCE   2       1               1.       0.      1.      0.
$
ENDDATA
As a final example of the RBAR  element, consider the hinge model shown in Figure 12-19.
Figure 12-19  Modeling a Hinge Using an RBARCBAR 1 CBAR 2
Independent 1-6 Dependent 1-51 2 3 4RBARCBAR 2 CBAR 1
1 2,3 4
Free to rotate about
the basic Z-axis.Hinge
Connection
Note: Grid points 2 and 3 are coincident.
They are shown separated for clarity.X2 X3Y2 Y3YB
XB&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements684
Main Index
The simplest way to model the hinge connection with an RBAR  is to use coincident grid points at the center of rotation
(grid points 2 and 3 in this example) and define an RBAR  between the two grid points. This RBAR  has zero length, which
is acceptable for the RBAR . Make all six of the components associated with one grid point independent. Make only a select
number of components of the other grid point dependent, leaving independent the components representing the hinge. A
listing of the input file for this model is shown in Listing 12-2. (See MSC_DOC_DIR/doc/linstat/rbar2.dat ) Note that
the components 1 through 6 of grid point 2 are independent and components 1 through 5 of grid point 3 are dependent.
Component 6 of the grid point 3 is left independent, permitting CBAR 2  to rotate about the Z axis with respect to CBAR 1 .
Listing 12-2  Hinge Joint Using an RBAR
$
$ FILENAME - RBAR2.DAT
$
ID LINEAR,RBAR2
SOL 101
TIME 2
CEND
TITLE = CONNECTING 2 BARS WITH AN RBAR HINGE
DISPLACEMENT = ALL
LOAD = 1
FORCE = ALL
BEGIN BULK
$
GRID    1               0.      0.      0.              123456
GRID    2               10.     0.      0.
GRID    3               10.     0.      0.
GRID    4               20.     0.      0.              123456
$
RBAR    99      2       3       123456                  12345
$
CBAR    1       1       1       2       0.      1.      0.
CBAR    2       1       3       4       0.      1.      0.
PBAR    1       1       .1      .01     .01     .02
MAT1    1       20.+4           .3
$
$ POINT LOAD
$
FORCE   1       2               100.     0.      1.      0.
$
ENDDATA
A word of caution: if you intentionally use coincident grid points (as in this example), you may run the risk of removing
them accidentally if you later use the “equivalence” option available in most preprocessors. Equivalencing grid points causes
all duplicate grid points in your model to be deleted; however, this may not be your intention as illustrated in this example.
The RBE2 Element
The RBE2  provides a very convenient tool for rigidly connecting the same components of several grid points together. You
should note that multiple RBAR s or an RBE1  can be used wherever an RBE2  is used; however, they may not be as
convenient.
The format for the RBE2  bulk data entry is shown in the QRG .&lt;/p&gt;
&lt;p&gt;685 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
When using an RBE2 , you need to specify a single independent grid point (the GN field) in which all six components are
assigned as independent. In the CM field, you can specify the dependent degrees of freedom at grid points GMi in the global
coordinate system. The GMi grid points are the grid points at which the dependent degrees of freedom are assigned.  The
dependent components are the same for all the listed grid points (if this is unacceptable, use the RBAR  elements, multiple
RBE2 s elements, or the RBE1  element).
As an example showing the use of an RBE2  element, consider the tube shown in Figure 12-20. The goal is to maintain a
circular cross section at the end of the tube while applying a torque about the axis of the tube. Furthermore, you allow the
tube to expand in the R direction, but the center of the end of the tube should not move from its original position.
Figure 12-20  Tube with an End Torque Loading
A partial input file for this model is shown in Listing 12-3. (See /doc/linstat/torque.dat) The goal is to have the end of the
tube rotate uniformly while allowing the tube to expand in the R-direction. The simplest way to accomplish this is to define
a local cylindrical coordinate system with the origin located at the center of the free end as shown in Figure 12-20. This
cylindrical coordinate system is then used as the displacement coordinate system (field 7) for all of the grid points located
at the free end. Now when an RBE2  element is connected to these grid points, the dependent degrees of freedom are in the
local coordinate system. By leaving the R-direction independent, the tube is free to expand in the radial direction.
Listing 12-3  Applying a Torque to a Tube Using an RBE2ZFixed
EndT = 1000 N-mm
Tube Dimensions:
Mean Diameter = 30 mm
T = 3 mm
Length = 90 mm
E = 25 x 104 N/mm2
n = 0.3Y
X
R1, q1 = 0q1 = 90°&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements686
Main Index
$
$ FILENAME - TORQUE.DAT
$
ID     LINEAR,TORQUE
SOL    101&lt;br&gt;
TIME   5
CEND
TITLE = TUBE WITH END TORQUE
SET 1 =110, 111, 112, 119, 120, 127, 128,132 &lt;br&gt;
DISP = 1
SPC = 1
LOAD = 1
BEGIN BULK
PARAM   AUTOSPC YES
$
CORD2C  1       0       0.0     0.0     90.     0.0     0.0     91.0
1.0     0.0     91.0
$
$
GRID    101             15.     0.0     0.0
GRID    102             10.6066 10.6066 0.0
GRID    103             7.105-1515.     0.0
GRID    104             15.     0.0     30.
GRID    105             10.6066 10.6066 30.
GRID    106             1.066-1415.     30.
GRID    107             15.     0.0     60.
GRID    108             10.6066 10.6066 60.
GRID    109             1.066-1415.     60.
GRID    110             15.     0.0     90.     1                   &lt;br&gt;
GRID    111             10.6066 10.6066 90.     1 &lt;br&gt;
GRID    112             1.421-1415.     90.     1    &lt;br&gt;
GRID    113             -10.606610.6066 0.0
GRID    114             -15.    7.105-150.0
GRID    115             -10.606610.6066 30.
GRID    116             -15.    1.066-1430.
GRID    117             -10.606610.6066 60.
GRID    118             -15.    1.066-1460.
GRID    119             -10.606610.6066 90.     1
GRID    120             -15.    1.421-1490.     1
GRID    121             -10.6066-10.60660.0
GRID    122             0.0     -15.    0.0
GRID    123             -10.6066-10.606630.
GRID    124             -1.78-14-15.    30.
GRID    125             -10.6066-10.606660.
GRID    126             -3.2-14 -15.    60.
GRID    127             -10.6066-10.606690.     1     &lt;br&gt;
GRID    128             -4.97-14-15.    90.     1
GRID    129             10.6066 -10.60660.0
GRID    130             10.6066 -10.606630.
GRID    131             10.6066 -10.606660.
GRID    132             10.6066 -10.606690.     1
GRID    999             0.0     0.0     90.
$
RBE2    200    999     23456   110     111     112     119     120     +&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  127     128     132     
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$
$QUAD4S REMOVED, SEE THE FILE ON THE DELIVERY MEDIA&lt;/p&gt;
&lt;p&gt;687 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
$
$ THIS SECTION CONTAINS THE LOADS, CONSTRAINTS, AND CONTROL BULK DATA ENTRIES
$
$
MOMENT  1       999     0       1000.   0.0     0.0     1.   &lt;br&gt;
$
SPC1    1       123456  101     102     103     113
SPC1    1       123456  114     121     122     129
SPC1    1       12345   999
$
$
$ THIS SECTION CONTAINS THE PROPERTY AND MATERIAL BULK DATA ENTRIES
$
$
PSHELL  1       1       3.      1                                    &lt;br&gt;
$
MAT1    1       250000.         .3                                   &lt;br&gt;
ENDDATA
Grid point 999 is defined at the center of the free end to serve as the independent point. The , Z, Rr, R, and Rz
components of the grid points on the end of the tube are dependent degrees of freedom. T o ensure that the axis of the tube
remains in the same position, an SPC is applied to all components of grid point 999 except in the Rz direction, which is the
component about which the torque is applied. It is interesting to note that the CD field of grid point 999, the independent
point, is different than that of the CD field of the dependent point, and this is an acceptable modeling technique.
Furthermore, you should always use a rectangular coordinate system in the CD field for any grid point that lies on the polar
axis. In this example, grid point 999 lies on the Z-axis (see Figure 12-20); therefore, it should not use coordinate system 1
for its CD field.
The displacement vector of the end grid points is shown in Figure 12-21. The q direction T2 is the same for each of the end
grid points as desired. The R-direction T1 is small but not exactly zero, indicating that the tube is permitted to expand in
the radial direction.
Figure 12-21  Selected Output for the RBE2 Example
Nonlinear RBE2
The nonlinear relation of an RBE2  can be expressed as follows:
xt = R(r) (xt - xr) (12-16) D I S P L A C E M E N T   V E C T O R
POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
110      G      1.487426E-20   2.526745E-04    .0             .0             .0            1.684497E-05
111      G      8.858868E-20   2.526745E-04    .0             .0             .0            1.684497E-05
112      G     -4.178414E-21   2.526745E-04    .0             .0             .0            1.684497E-05
119      G     -1.985002E-20   2.526745E-04    .0             .0             .0            1.684497E-05
120      G     -4.204334E-20   2.526745E-04    .0             .0             .0            1.684497E-05
127      G      4.297897E-20   2.526745E-04    .0             .0             .0            1.684497E-05
128      G      8.858550E-21   2.526745E-04    .0             .0             .0            1.684497E-05
132      G     -9.068584E-20   2.526745E-04    .0             .0             .0            1.684497E-05&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements688
Main Index
where xt is the coordinate of the tied node, xr is the coordinate of the reference node, and R(r) is the rotation matrix of
the retained node. The linearized relation between the incremental displacement of a tied node to a retained node and its
correction term is expressed as follows:
(12-17)
where the tying matrix S is derived from the linearized rigid body relation. For linear analysis, Cnon is zero. For large
displacement analysis,  may not match the nonlinear constraint exactly. Therefore, an error vector, Cnon, is required
to meet the constraint. It is defined as the difference between the expected coordinates ( xte), using the rigid body kinematics,
and the current coordinates ( xt) of the tied node.
(12-18)
where n is increment number, i is iteration number, and zero is the original value.
When the rotation is finite, then the coordinate system attached to the tied node will be co-rotated according to the rotation
of the retained node. The degrees of freedom of the tied node will be assigned with this co-rotated system. As an illustration,
consider a slider link shown in Figure 12-22. In this case, a local transformation must be defined for the tied node in which
the x-direction is coincident with the line connecting the tied and the retained node. Then, an RBE2  is defined where y-
translational degree of freedom is tied but not the x -translational and any of the rotation degrees of freedom.
.
Figure 12-22  Co-rotated Coordinate System at the Tied Node
As an example of the usage of RBE2  for defining a constraint, see Automated Bolt Modeling  (Ch. 42) in the MSC Nastran
Demonstration Problems Manual .
The RBE3 Element
The RBE3  element is a powerful tool for distributing applied loads and mass in a model. Unlike the RBAR  and RBE2&lt;br&gt;
discussed in the previous sections, the RBE3  does not add additional stiffness to your structure. Forces and moments applied
to reference points are distributed to a set of independent degrees of freedom based on the RBE3  geometry and local weight
factors.utiSuriCnon+ =
Suri
xteni+xrnRrni+xt0xr0– + =
Cnonxteni+xtni+– =
RBE2
RBE2xy
xy
XY
(a) Increment i (b) Increment i + 1&lt;/p&gt;
&lt;p&gt;689 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
The format of the RBE3  bulk data entry is shown in the QRG .
RBE3
The manner in which the forces are distributed is analogous to the classical bolt pattern analysis. Consider the bolt pattern
shown in Figure 12-23 with a force and moment M acting at reference point A. The force and moment can be transferred
directly to the weighted center of gravity location along with the moment produced by the force offset.1 2 3 4 5 6 7 8 9 10
RBE3 EID REFGRID REFC WT1 C1 G1,1 G1,2
G1,3 WT2 C2 G2,1 G2,2 -etc.-WT3  C3
G3,1 G3,2 -etc.-WT4 C4 G4,1 G4,2 -etc.-
“UM” GM1 CM1 GM2 CM2 GM3 CM3
GM4 CM4 GM5 CM5-etc.-
“ALPHA” ALPHA
Field Contents
EID Element identification number.  Unique with respect to all elements. (0 &amp;lt;Integer &amp;lt;100,000,000)
REFGRID Reference grid point identification number.  (Integer &amp;gt; 0)
REFC Component numbers at the reference grid point.  (Any of the integers 1 through 6 with no embedded
blanks.)
WTi Weighting factor for components of motion on the following entry at grid points Gi,j.  (Real)
Ci Component numbers with weighting factor WTi at grid points Gi,j.  (Any of the integers 1 through
6 with no embedded blanks.)
Gi,j Grid points with components Ci that have weighting factor WTi in the averaging equations.  (Integer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0)
“UM” Indicates the start of the degrees of freedom belonging to the dependent degrees of freedom.  The
default action is to assign only the components in REFC  to the dependent degrees of freedom.&lt;br&gt;
(Character)
GMi Identification numbers of grid points with degrees of freedom in the m -set.  (Integer &amp;gt; 0)
CMi Component numbers of GMi to be assigned to the m -set.  (Any of the Integers 1 through 6 with no
embedded blanks.)
“ALPHA” Indicates that the next number is the coefficient of thermal expansion. (Character)
ALPHA Thermal expansion coefficient. (Real &amp;gt; 0.0 or blank)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements690
Main Index
Figure 12-23  RBE3 Equivalent Force and Moment at the Reference Point
The force is distributed to the bolts proportional to the weighting factors. The moment is distributed as forces, which are
proportional to their distance from the center of gravity times their weighting factors, as shown in Figure 12-24. The total
force acting on the bolts is equal to the sum of the two forces. These results apply to both in-plane and out -of-plane
loadings.Reference Point
C.G.
M MAFAe + =FAFA
MA
e
M
Mwhere FiFAi
i&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
=F1
F5F3F2
F4F2r1F1F4
r4F5r5 r2F3
r3where FiMiri
1r122r223r223r325r52+ + + +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
   =&lt;/p&gt;
&lt;p&gt;691 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
where:
Figure 12-24  RBE3 Force Distribution
As an example, consider the cantilever plate modeled with a single CQUAD4  element shown in Figure 12-25. The plate is
subjected to nonuniform pressure represented by a resultant force acting at a distance of 10 mm from the center of gravity
location. The simplest way to apply the pressure is to use an RBE3  element to distribute the resultant load to each of the
four corner points.
Figure 12-25  Using an RBE3 to Represent a Nonuniform Pressure Load
The input file representing this example is shown in Listing 12-4. (See MSC_DOC_DIR/doc/linstat/rbe3.dat ) Grid
point 99 is called the REFGRID  and is the location where the force is applied. This point is connected only to those degrees
of freedom listed on the REFC  field (the T3 component in this example). The default action of this element is to place the
REFC  degrees of freedom in the m-set. The element has provisions to place other degrees of freedom in the m-set instead.
However, this is an advanced feature and is beyond the scope of this user’s guide. The groups of connected grid points begin
in field 5. For this example, the connected grid points are the corner points.
Listing 12-4  Distributing Force with an RBE3Fi=force at degrees of freedom i
i=weighting factor for degrees of freedom i
ri=radius from the weighted center of gravity to point i
50 mm
40 mm
100 mm100 mm4 3
2 1Pressure Resultant = 10 N
Y
X&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements692
Main Index
$
$ FILENAME - RBE3.DAT
$
ID     LINEAR,RBE3
SOL    101&lt;br&gt;
TIME   5
CEND
TITLE = SINGLE ELEMENT WITH RBE3
SPC  = 1
LOAD = 1
OLOAD     = ALL
GPFORCE   = ALL
SPCFORCES = ALL
BEGIN BULK
$
RBE3    10              99      3       1.0     123     1       2
3       4&lt;br&gt;
FORCE   1       99              100.    0.      0.      1.
$
PARAM   POST    0
$
GRID    1               0.      0.      0.
GRID    2               100.    0.      0.
GRID    3               100.    100.    0.
GRID    4               0.      100.    0.
GRID    99              60.     50.     0.
$
PSHELL  1       4       10.     4
$
MAT1    4       4.E6            0.
$
CQUAD4  1       1       1       2       3       4
$
SPC1    1       123456  1       4
ENDDATA
The start of a group is indicated by a real number WTi, which is used as a weighting factor for the grid points in the group.
In this example, a simple distribution based only on the geometry of the RBE3  is desired so that a uniform weight is applied
to all points. The weighting factors are not required to add up to any specific value. For this example, if the WT1 field is 4.0
instead of 1.0, the results will be the same.
The independent degrees of freedom for the group are listed in the Ci field. Note that all three translational degrees of
freedom are listed even though the REFC  field does not include the T1 and T2 direction. All three translational degrees of
freedom in the Ci field are included because the degrees of freedom listed for all points must be adequate to define the rigid
body motion of the RBE3  element even when the element is not intended to carry loads in certain directions. If any
translational degrees of freedom are not included in C1 in this example, a fatal message is issued.
The element described by this RBE3  entry does not transmit forces in the T1 or T2 direction. The two reasons for this are
that the reference grid point is not connected in this direction and all of the connected points are in the same plane. Note
that the rotations are not used for the independent degrees of freedom. In general, it is recommended that only the
translational components be used for the independent degrees of freedom.
A selected portion of the output file produced by this example is shown in Figure 12-26.&lt;/p&gt;
&lt;p&gt;693 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
Figure 12-26  Select Output for the RBE3 Example
The displacement of grid points 1 and 4 is zero due to the SPC applied to these points. The sum of the SPC forces at these
two grid points is equal to the load applied to the reference grid point. The load transmitted to the corner points can be
seen by inspecting the GPFORCE  output. The force applied to the points due to the R-type elements and MPC entries is
not listed specifically in the GPFORCE  output. These forces show up as unbalanced totals (which should typically be equal
to numeric zero). The forces applied to the corner grid points 1 through 4 are -20, -30, -30, and -20 N, respectively.
The most common usage of the RBE3  element is to transfer motion in such a way that all six degrees of freedom of the
reference point are connected. In this case, all six components are placed in the REFC  field, and only components 123 are
placed in the Ci field.
The load distributing capability of the RBE3  element makes it an ideal element to use to apply loads from a coarse model
(or hand calculation) onto a detailed model of a component. For example, the shear distribution on a cross section is a
function of the properties of that section. This shear loading may be applied to a cross section by performing a calculation
of the shear distribution based on unit loading and using an RBE3  element with appropriate weighting factors for each grid
point. In this manner, only one shear distribution need be calculated by hand. Since there are usually multiple loading
conditions to be considered in an analysis, they may be applied by defining different loads to the dependent point on the
RBE3  element.
The most common user error in RBE3  element specification results from placing 4, 5, or 6 in the Ci (independent degrees
of freedom) field in addition to the translation components. The rotations of the dependent point are fully defined by the  D I S P L A C E M E N T   V E C T O R
POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
1      G       .0             .0             .0             .0             .0             .0
2      G       .0             .0            6.000000E-04   1.567011E-20  -9.000000E-06    .0
3      G       .0             .0            6.000000E-04   3.282253E-21  -9.000000E-06    .0
4      G       .0             .0             .0             .0             .0             .0
99      G       .0             .0            3.600000E-04    .0             .0             .0
L O A D   V E C T O R
POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
99      G       .0             .0            1.000000E+02    .0             .0             .0
F O R C E S   O F   S I N G L E - P O I N T   C O N S T R A I N T
POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
1      G       .0             .0           -5.000000E+01   7.275958E-12   3.000000E+03    .0
4      G       .0             .0           -5.000000E+01   7.275958E-12   3.000000E+03    .0
G R I D   P O I N T   F O R C E   B A L A N C E
POINT-ID    ELEMENT-ID     SOURCE             T1             T2             T3             R1             R2             R3
1                  F-OF-SPC        .0             .0           -5.000000E+01   7.275958E-12   3.000000E+03    .0
1             1    QUAD4           .0             .0            3.000000E+01  -3.681428E-12  -3.000000E+03    .0
1                  &lt;em&gt;TOTALS&lt;/em&gt;        .0             .0           -2.000000E+01   3.594530E-12   4.092726E-12    .0
2             1    QUAD4           .0             .0           -3.000000E+01   8.115214E-12   1.315632E-11    .0
2                  &lt;em&gt;TOTALS&lt;/em&gt;        .0             .0           -3.000000E+01   8.115214E-12   1.315632E-11    .0
3             1    QUAD4           .0             .0           -3.000000E+01   7.376250E-12  -6.994877E-12    .0
3                  &lt;em&gt;TOTALS&lt;/em&gt;        .0             .0           -3.000000E+01   7.376250E-12  -6.994877E-12    .0
4                  F-OF-SPC        .0             .0           -5.000000E+01   7.275958E-12   3.000000E+03    .0
4             1    QUAD4           .0             .0            3.000000E+01  -4.079332E-12  -3.000000E+03    .0
4                  &lt;em&gt;TOTALS&lt;/em&gt;        .0             .0           -2.000000E+01   3.196626E-12   4.547474E-13    .0
99                  APP-LOAD        .0             .0            1.000000E+02    .0             .0             .0
99                  &lt;em&gt;TOTALS&lt;/em&gt;        .0             .0            1.000000E+02    .0             .0             .0&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Rigid Elements694
Main Index
translational motion of the independent points. The ability to input 4, 5, or 6 in the Ci field is only for special applications,
such as when all of the connected points are colinear.
Small checkout models are recommended whenever you are specifying elements with nonuniform weight factors,
asymmetric geometry or connected degrees of freedom, or irregular geometry. Using small checkout models is especially
necessary when the reference point is not near the center of the connected points.
The intended use of the RBE3  element is to transmit forces and moments from a reference point to several non-colinear
points. The rotation components 4, 5, and 6 should be placed in the Ci field only for special cases, such as when the
independent points are colinear.
As an example of the usage of RBE3  for defining a constraint, see Large Rotation Analysis of a Riveted Lap Joint  (Ch. 33) in the
MSC Nastran Demonstration Problems Manual .
RJOINT Element
The RJOINT  element defines a mechanical joint. The format for RJOINT  bulk data entry in the QRG  is as follows:
RJOINT
GA is the independent grid point and all six degrees of freedom are independent. GB is the dependent grid point. The length
between points GA and GB must be zero. Because its length is zero, the thermal load effect is not applicable.
If CB=123456  or is left blank, then the GB grid point is constrained to move with the GA grid point, and two the grid points
move as a single point. If any degree of freedom is released on CB, then RJOINT  becomes a mechanical joint. A mechanical
joint is a mechanical system that has two bodies jointed at a point. The two bodies can rotate relatively about one, two, or
three axes of a local coordinate system at that point. For example:
Hinge – A hinge is a mechanical joint that rotates freely about one axis about the local coordinate system. It can be
simulated by RJOINT  with one rotational degree of freedom released; i.e., CB = 12356 , 12346 , or 12345 .
Universal joint – A universal joint is a mechanical joint that rotates freely in two axes. It can be simulated by
RJOINT  with two rotational degrees of freedom released; i.e., CB = 1234 , 1235 , or 1236 .
Spherical joint – A spherical joint is a mechanical joint that rotates freely about all three axes. It can be simulated
by a zero length RJOINT  with all rotational degrees of freedom released; i.e. CB = 123 .1 2 3 4 5 6 7 8 9 10
RJOINT EID GA GB CB
Field Contents
EID Element identification number. (Integer &amp;gt; 0)
GA, GB Grid point identification numbers. (Integer &amp;gt; 0)
CB Component numbers in the global coordinate system at GB. These degrees of freedom are constrained
to move with the same degrees of freedom at GA. (Integers 1 through 6 with no embedded or blank.)&lt;/p&gt;
&lt;p&gt;695 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Rigid Elements
Main Index
Prismatic joint – A prismatic joint is a mechanical system with two blocks that are constrained to have the same
rotations, but translate relative with each other along a local axis. It can be simulated by RJOINT  with one
translational degree of freedom released; i.e., CB = 23456 , 13456 , 12456 .
Cylindrical joint – A cylindrical joint is a mechanical system that allows two grid points to have relative translation
along a moving axis and, at the same, have relative rotation about the same axis. It can be simulated by RJOINT&lt;br&gt;
with one translational degree of freedom and one rotational degree of freedom released; i.e., CB=2356 , 1346 ,
1245 .
Guidelines for the RJOINT  element:
The theory for the RJOINT  is formulated such that a consistent mechanical joint is created even if you request
different global coordinate systems at grid points GA and GB. If different global coordinate systems are used, the
degrees of freedom to be released are determined by the coordinate system at GB.
For linear or nonlinear static analysis, the joints must be constrained by other elements in the structural model.
Otherwise, a singular stiffness matrix may be produced, leading to failure during decomposition.
Methods for Rigid Element Solution
Linear Method
In MSC Nastran, two methods for rigid elements are available – the linear method and the Lagrange method.The linear
method is the default method in MSC Nastran. The linear method uses the linear elimination technique. The rigid
elements are not real elements, they are internally represented by a set of MPC equations. By using these MPC equations,
the dependent degrees of freedom (the m-set) are eliminated from the solution set. The rigid elements linear method has
the following limitations:
Do not compute thermal load.
Do not have a differential stiffness matrix; therefore, the solutions are incorrect for the buckling analysis or other
solution sequences where the differential stiffness matrix is required.
Use the small rotation theory in the geometrical nonlinear analysis so that the solutions are incorrect in this type of
analysis.
Use the elimination method for solution, resulting in very dense stiffness matrices. These dense matrices cannot
take advantages of the sparse matrix algorithm.
Lagrange Method
With the Lagrange method, the rigid elements become “real” finite elements, similar to, for example, a QUAD4  element.
Instead of using MPC equations, the element stiffness matrix is computed for each rigid element. All the limitations for the
linear method are removed; i.e., the rigid elements
Include thermal load effect.
Include the differential stiffness.
Support for both the small rotation and the large rotation. Use the large rotation theory in the geometrical
nonlinear analysis ( PARAM,LGDISP,1 ).&lt;/p&gt;
&lt;h1&gt;Nonlinear User’s Guide
Rigid Elements696
Main Index
Take advantages of the sparse matrix algorithm if the augmented Lagrange multiplier method, defined below, is
used.
For each Lagrange rigid element, a number of Lagrange multiplier degrees of freedom are created internally by MSC
Nastran. For example, one to six Lagrange multiplier degrees of freedom are created for the RBAR  and one Lagrange
multiplier degree of freedom is created for the RROD . For each Lagrange rigid element, the independent degrees of freedom,
the dependent degrees of freedom, and the Lagrange multiplier degrees of freedom are left in the solution set (the l-set).
For the Lagrange Multiplier Method, the solution is obtained with the independent degrees of freedom, the dependent
degrees of freedom, and the Lagrange multipliers degrees of freedom left in the solution set. Thus, the sparse characteristic
of the stiffness matrix is maintained and sparse matrix algorithms can be used.
See Structural Elements  (Ch. 3), Rigid Element Enhancements in the MSC Nastran Reference Guide for a theoretical discussion
of these methods and the use of rigid elements for large rotations.
Method Selection
RIDIG  control case command in the QRG  selects the type of rigid element. It has the following format:
LINEAR  will select the linear rigid elements, LAGR  will select the Lagrange rigid element with the Lagrange multiplier
method, and LGELIM  will select the Lagrange element with the Lagrange elimination method (not used in Statics). If the
RIGID  command does not exist in the user Case Control file, the linear rigid element will be used.
Lagrange Method Bulk Data Entry Differences
The R-type elements; RBAR , RBAR1 , RJOINT , RBE1 , RBE2 , RBE3 , RROD , RTRPLT , and RTRPLT1 ; can be used as either
the linear rigid element or the Lagrange element, as selected by the RIGID  case control command. However, the input rules
are not the same for these two types of rigid elements. The following paragraphs discuss the differences.
Except for the RBE3  and RROD , the major difference in the input format between the linear rigid element and the Lagrange
rigid element is the selection of the independent degrees of freedom. This can be illustrated by the RBAR  bulk data entry:
The independent degrees of freedom are selected by CNA and CNB. For the linear rigid element, the independent degrees of
freedom can be assigned to both CNA and CNB: for example, “ CNA=1236 , CNB=34 ”, as long as the total number equals to
six and they can jointly represent any general rigid body motion. However, for the Lagrange rigid element, all six
independent degrees of freedom must be assigned to a single grid point, i.e., “ CNA=123456 , CNB=blank ”, or
“CNA=blank , CNB=123456 ”. The same rule applies to the RBE1 , RBE2 , and RTRPLT  elements. The RBAR1  and
RTRPLT1  entries make it easier to input the Lagrange rigid elements.
For the RBE3 , the REFC  degrees of freedom can be any combination of integers from 1 through 6 for the linear rigid
element. For the Lagrange rigid element, RFEC  must be 123, 456, or 123456 .RBAR EID GA GB CNA CNB CMA CMB ALPHARIGIDLINEAR
LAGR
LGELIM&lt;/h1&gt;&lt;p&gt;697 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Support
Main Index
For the RROD  element, you must select one dependent degree of freedom by inputting either CMA or CMB for the linear
rigid element. However, for the Lagrange rigid element, you can leave both fields blank and let MSC Nastran select the best
component as the dependent degree of freedom. In fact, this is the recommended method.
For all rigid elements, the ALPHA  field is the thermal coefficient of expansion. For the Lagrange rigid elements, if ALPHA  is
given and the thermal loads are requested by the TEMPERATURE  (INITIAL ) Case Control command and
TEMPERATURE  (LOAD ), the thermal load effect will be computed for the rigid elements. The temperature loads are taken
as the average temperature given by the independent grid point and the dependent grid point. For example, the temperature
load for the RBAR  element is taken as the average temperature of grid points GA and GB. For the linear rigid element, no
temperature effect is computed and the ALPHA  field is ignored.
Patran Support
SOL 400 allows you to input kinematic constraints through various options that include multi-point constraints, boundary
conditions and support conditions.
Multi-Point Constraints
MPC s are special element types which define a rigorous behavior between several specified nodes. The following table lists
the MPC types which are supported for SOL 400.
Specifying Explicit MPCs
Explicit MPCs may be created between a dependent degree of freedom and one or more independent degrees of freedom.
The dependent term consists of a node ID and a degree of freedom, while an independent term consists of a coefficient, a
node ID, and a degree of freedom. An unlimited number of independent terms can be specified, while only one dependent
term can be specified.MPC T ypes
Explicit RBE1
Rigid (Fixed) RBE2
Cyclic Symmetry RBE3
Sliding SurfaceRROD
RJOINT
RSPLINE
RSSCON
RBAR
RBAR1RTRPLT
RTRPLT1
Entry Description
MPC Defines a multipoint constraint equation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Support698
Main Index
Defining Explicit MPCs in Patran
T o define an Explicit MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;Explicit .
3.Click on Define Terms&amp;hellip;  to define the explicit constraints.
Specifying Rigid MPCs
Rigid MPC s may be created between one independent node and one or more dependent nodes in which all six structural
degrees of freedom are rigidly attached to each other. An unlimited number of dependent terms can be specified, while only
one independent term can be specified. Each term consists of a single node. There is no constant term for this MPC  type.
Defining Rigid MPCs in Patran
T o define a Rigid MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.Entry Description
Dependent Terms Dependent terms define the fields for G1 and C1 on the MPC  entry. Only one node and degrees
of freedom combination may be defined for any given explicit MPC. The A1 field on the MPC&lt;br&gt;
entry is automatically set to -1.0.
Independent Terms Independent terms define the Gi, Ci, and Ai fields on the MPC  entry, where i is greater than
one. As many coefficient, node, and degrees of freedom combinations as desired may be defined.
Entry Description
RBE2 Defines a rigid body with independent degrees of freedom that are specified at a single grid point and
with dependent degrees of freedom that are specified at an arbitrary number of grid points.&lt;/p&gt;
&lt;p&gt;699 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Support
Main Index
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;Rigid (Fixed) .
3.Click on Define Terms&amp;hellip;  to define the rigid constraints.
Specifying Sliding Surface MPCs
Describes the boundary conditions of sliding surfaces, such as pipe sleeves. These boundary conditions are written as
explicit MPCs. Be careful, for this option automatically redefines the analysis coordinate references of all affected nodes.
This could erroneously alter the meaning of previously applied load and boundary conditions, as well as element properties.
Defining Sliding Surface MPCs in Patran
To define a Sliding Surface MPC:
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;Sliding Surface .
3.Click on Define Terms&amp;hellip;  to define the sliding surface constraints.Entry Description
Dependent Terms Dependent terms define the GMi fields on the RBE2  entry. As many nodes as desired may be
selected as dependent terms.
Independent Terms Independent terms define the GN field on the RBE2  entry. Only one node may be selected.
Entry Description
Shell Nodes Dependent terms define the ESi fields on the RSSCON  entry. One dependent node must be
selected for every two independent terms.
Solid Nodes Independent terms define the EA and EB field on the RSSCON  entry. Two independent terms
are required.
Entry Description
MPC Defines a multipoint constraint equation.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Support700
Main Index
Specifying RBAR MPCs
Creates a RBAR  element, which defines a rigid bar between two nodes. Up to two dependent and two independent terms
can be specified. Each term consists of a node and a list of degrees of freedom. The nodes specified in the two dependent
terms must be the same as the nodes specified in the two independent terms. Any combination of the degrees of freedom
of the two nodes can be specified as independent as long as the total number of independent degrees of freedom adds up
to six. There is no constant term for this MPC type.
Defining RBAR MPCs in Patran
T o define a RBAR  MPC:
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RBAR .
3.Click on Define Terms.. . to define the RBAR  constraints.Entry Description
Dependent Region Specifies the dependent nodes on the sliding surface. The same number of unique nodes must be
specified in both regions.
Independent Region Specifies the independent nodes on the sliding surface. The same number of unique nodes must
be specified in both regions.
Entry Description
RBAR Defines a rigid bar with six degrees of freedom at each end.&lt;/p&gt;
&lt;p&gt;701 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Support
Main Index
Defining RBE1 MPCs in Patran
To define a RBE1  MPC:
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RBE1 .
Specifying RBE2 MPCs
Creates an RBE2  element, which defines a rigid body between an arbitrary number of nodes. Although you can only specify
one dependent term, an arbitrary number of nodes can be associated to this term. You are also prompted to associate a list
of degrees of freedom to this term. A single independent term can be specified, which consists of a single node. There is no
constant term for this MPC type.
Defining RBE2 MPCs in Patran
To define a RBE2  MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RBE2 .
3.Click on Define Terms&amp;hellip;  to define the RBE2  constraints.Entry Description
Dependent Terms Either one or two nodes may be defined as having dependent terms. The Nodes define the GA
and GB fields on the RBAR  entry. The degrees of freedom define the CMA and CMB fields.
Independent Terms Either one or two nodes may be defined as having independent terms.The Nodes  define the GA
and GB fields on the RBAR  entry.The degrees of freedom define the CNA and CNB fields.
Entry Description
RBE2 Defines a rigid body with independent degrees of freedom that are specified at a single grid point
and with dependent degrees of freedom that are specified at an arbitrary number of grid points.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Patran Support702
Main Index
Specifying RBE3 MPCs
Creates an RBE3  element, which defines the motion of a reference node as the weighted average of the motions of a set of
nodes. An arbitrary number of dependent terms can be specified, each term consisting of a node and a list of degrees of
freedom. The first dependent term is used to define the reference node. The other dependent terms define additional
node/degrees of freedom, which are added to the m-set. An arbitrary number of independent terms can also be specified.
Each independent term consists of a constant coefficient (weighting factor), a node, and a list of degrees of freedom. There
is no constant term for this MPC type.
Defining RBE3 MPCs in Patran
T o define a RBE3  MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RBE3 .
3.Click on Define Terms&amp;hellip;  to define the RBE3  constraints.Entry Description
Dependent Terms Dependent terms define the GMi and CM fields on the RBE2  entry. As many nodes as desired
may be selected as dependent terms.
Independent Terms Independent terms define the GN field on the RBE2  entry. Only one node may be selected.
Entry Description
RBE3 Defines the motion at a reference grid point as the weighted average of the motions at a set of
other grid points.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P37</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_037/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_037/</guid>
      <description>
        
        
        &lt;p&gt;703 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Patran Support
Main Index
Specifying RROD MPCs
Creates an RROD  element, which defines a pinned rod between two nodes that is rigid in extension. One dependent term
is specified, which consists of a node and a single translational degree of freedom. One independent term is specified, which
consists of a single node. There is no constant term for this MPC type.
Defining RROD MPCs in Patran
To define a RROD  MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RROD .
3.Click on Define Terms&amp;hellip;  to define the RROD  constraints.
Specifying RTRPLT MPCs
Creates an RTRPLT  element, which defines a rigid triangular plate between three nodes. Up to three dependent and three
independent terms can be specified. Each term consists of a node and a list of degrees of freedom. The nodes specified in
the three dependent terms must be the same as the nodes specified in the three independent terms. Any combination of the Entry Description
Dependent Terms Dependent terms define the GMi and CMi fields on the RBE3  entry. The first dependent term
will be treated as the reference node, REFGRID and REFC. The rest of the dependent terms
become the GMi and CMi components.
Independent Terms Independent terms define the Gi, j, Ci, and WTi fields on the RBE3  entry.
Entry Description
RROD Defines a pin-ended element that is rigid in translation.
Entry Description
Dependent Terms Dependent terms define the GB and CMB on the RROD  entry. Only one translational degree of
freedom may be referenced for this entry.
Independent Terms Independent terms define the GA field on the RROD  entry. The CMA field is left blank.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Pin Code for Beam Elements704
Main Index
degrees of freedom of the three nodes can be specified as independent as long as the total number of independent degrees
of freedom adds up to six. There is no constant term for this MPC type.
Defining RTRPLT MPCs in Patran
T o define a RTRPLT  MPC :
1.Click on the FE Application  icon located on the Main  form to bring up the Finite Elements Application  form.
2.Set the Action&amp;gt;Object&amp;gt;Method  combination to Create&amp;gt; MPC&amp;gt;RTRPLT .
3.Click on Define Terms&amp;hellip;  to define the RTRPLT  constraints.
Pin Code for Beam Elements
Pin code is used to remove connections between the node and selected degrees of freedom of the beam. It can only be
applied on the nodes at the ends of the beam. It is not allowed to use it for the middle node of 3-noded beams. The degrees
of freedom are defined in the element’s coordinate system, and the pin code is applied at the offset ends of the beam.
The pin code is activated using the PA,PB pin flags on the CBAR  and CBEAM  bulk data entries.
The following example shows the effect of having the axial-displacement and out-of-plane rotation degrees of freedom
flagged.Entry Description
RTRPLT Defines a rigid triangular plate.
Entry Description
Dependent Terms Dependent terms define the GA, GB, GC, CMA, CMB, and CMC fields of the RTRPLT  entry.
Independent Terms The total number of nodes referenced in both the dependent terms and the independent terms
must equal three. There must be exactly six independent degrees of freedom, and they must be
capable of describing rigid body motion. Defines the GA, GB, GC, CNA, CNB, and CNC fields
of the RTRPLT  entry.&lt;/p&gt;
&lt;p&gt;705 Chapter 12: Rigid Elements, Connectors, and Multi-Point Constraints
Constraint Conflict
Main Index
Figure 12-27  Slider Connection using Pin Code
Constraint Conflict
When multiple constraints are associated with a grid, it is possible that the constraints conflict. This may result in either an
overconstrained or a singular system, in which case, the analysis will terminate. The AUTOMSET  parameter automatically
re-writes the constraint equations such that a tied degree of freedom is not used as a retained degree of freedom in another
constraint equation. It also modifies constraint equations where a constrained degree of freedom is used in a prescribed
boundary condition.1102
20
3110
3202
4&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Constraint Conflict706
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 13: Advanced Topics
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear Users Guide
13 Advanced Topics
Superelements and Modal Neutral Files
Fracture Mechanics
Inertia Relief
Large Displacement Grid Point Weight Generation  (GPWG)
BSQUEAL
RESTART
User Defined Services and Subroutines
Multiple Mass Configuration
Guidelines for SOL 129 to SOL 400 Migration&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Superelements and Modal Neutral Files708
Main Index
Superelements and Modal Neutral Files
MSC Nastran SOL 400 allows you to output Adams MNF files.
External Superelements
External superelements are supported.
Fracture Mechanics
The fracture mechanics capabilities in MSC Nastran covers the evaluation of energy release rate and J -integral evaluation.
Linear Fracture Mechanics
Linear fracture mechanics presupposes existence of a crack and examines the conditions under which crack growth occurs.
In particular, it determines the length at which a crack propagates rapidly for specified load and boundary conditions. The
concept of linear fracture mechanics stems from Griffith’s work on purely brittle materials. Griffith stated that, for crack
propagation, the rate of elastic energy release should at least equal the rate of energy needed for creation of a new crack
surface. This concept was extended by Irwin to include limited amounts of ductility. In Irwin’s considerations, the inelastic
deformations are confined to a very small zone near the tip of a crack.
The basic concept presented by Griffith and Irwin is an energy balance between the strain energy in the structure and the
work needed to create a new crack surface. This energy balance can be expressed using the energy release rate G as
G = Gc (13-1)
G is defined as
(13-2)
where  is the strain energy and a is the crack length. G depends on the geometry of the structure and the current loading.
Gc is called the fracture toughness of the material. It is a material property which is determined from experiments. Note
that the energy release rate is not a time derivative but a rate of change in potential energy with crack length. An important
feature of equation (13-1) is that it can be used as a fracture criterion; a crack starts to grow when G reaches the critical value
Gc.
The stress and strain fields near the tip of a crack are singular for a linear elastic material model. The stresses and strains
have the principal form
(13-3)Gd
da&amp;mdash;&amp;mdash;-–=
K
r&amp;mdash;&amp;mdash;f =
K
r&amp;mdash;&amp;mdash;g =&lt;/p&gt;
&lt;p&gt;709 Chapter 13: Advanced Topics
Fracture Mechanics
Main Index
in a polar coordinate system centered at the crack tip. Thus, a linear elastic material is said to have a  singularity near
a crack tip. It is easy to demonstrate that in both Griffith’s and Irwin’s considerations, the elastic energy release rate is
determined by a single parameter: the strength of the singularity in the elastic stress field at the crack tip. This is the so-
called stress intensity  factor, and is usually denoted by capital K. The magnitude of K depends on the crack length, the
distribution and intensity of applied loads, and the geometry of the structure. Crack propagation occurs when any
combination of these factors causes a stress intensity factor K to be equal to or greater than the experimentally determined
material property Kc, which is equivalent to equation (13-1). Hence, the objective of linear fracture mechanics calculations
is to determine the value of K.
There are three possible modes of crack extension in linear elastic fracture mechanics: the opening mode, sliding mode, and
tearing mode (see Figure 13-1).
The opening mode (see Figure 13-1a), Mode I, is characterized by the symmetric separation of the crack surfaces with respect
to the plane, prior to extension (symmetric with respect to the X-Y and X-Z planes).
The sliding mode, Mode II, is characterized by displacements in which the crack surfaces slide over one another
perpendicular to the leading edge of the crack (symmetric with respect to the X -Y plane and skew-symmetric with respect
to the X -Zplane).
The tearing mode, Mode III, finds the crack surfaces sliding with respect to one another parallel to the leading edge (skew-
symmetric with respect to the X-Y and X -Zplanes).1r&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Fracture Mechanics710
Main Index
Figure 13-1  Irwin’s Three Basic Modes of Crack Extension
It is customary to associate a stress intensity factor with each of these mode: KI, KII, and KIII. There is also an associated
fracture toughness associated with each mode: KIc, KIIc, and KIIIc. The most critical mode is usually mode I and in many
cases the other modes are not considered. The connection between the energy release rate and the stress intensity factors is
given by
(13-4)
where
for plane stress (13-5)
and
for plane strain. (13-6)(a) Mode I: Openingx
zy
(b) Mode II: Slidingx
zy
(c) Mode III: Tearingx
zy
GKI2
E&amp;rsquo;&amp;mdash;&amp;mdash;KII2
E&amp;rsquo;&amp;mdash;&amp;mdash;&amp;ndash;1+
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;KIII2+ + =
E&amp;rsquo;E=
E&amp;rsquo;E
12–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;711 Chapter 13: Advanced Topics
Fracture Mechanics
Main Index
SOL 400 uses the so-called J-integral for evaluating the energy release rate, see below. The J-integral is similar to G but is
more general and is also used for nonlinear applications. J is equivalent to G when a linear elastic material model is used.
Nonlinear Fracture Mechanics
Nonlinear fracture mechanics is concerned with determining under which conditions crack propagation (growth) occurs.
In this sense, nonlinear fracture mechanics is similar to linear fracture mechanics. However, there are additional questions
addressed in nonlinear fracture mechanics. Is the crack propagation stable or unstable? If it is stable, at which speed does it
occur? After some propagation, is the crack arrested?
There also exists a singularity at the crack tip in fracture mechanics problems with nonlinear elastic-plastic material
behavior, though the singularity is of a different nature. If one takes an exponential hardening law of the form
(13-7)
it can be shown that the singularities in the strain and the stresses at the crack tip are of the form
(13-8)
If n approaches infinity, the material behavior becomes perfectly plastic and the singularity in the stresses vanishes. The
singularity in the strains, however, takes the form of
 fr-1(13-9)
It has not been possible to establish that the strength of the singularity is the only factor that influences initiation of crack
propagation for nonlinear situations. In fact, it is doubted that initiation of crack propagation is dependent on only a single
factor. The J-integral probably offers the best chance to have a single parameter to relate to the initiation of crack
propagation.
The J-integral was introduced by Rice as a path-independent contour integral for the analysis of cracks. As previously
mentioned, it is equivalent to the energy release rate for a linear elastic material model. It is defined in two dimensions as
(13-10)
where W is the strain energy density, T is the kinetic energy density, ij is the stress tensor and ui is the displacement vector.
The x1 direction is the same as the x direction in the local crack tip system in Figure 13-2. The integration path  is a curve
surrounding the crack tip, see Figure 13-2.The J-integral is independent of the path  as long as it starts and ends at the two
sides of the crack face and no other singularities are present within the path. This is an important feature for the numerical
evaluation since the integral can be evaluated using results away from the crack tip.
0&amp;mdash;&amp;mdash;
0&amp;mdash;&amp;ndash;1n/=
 frnn1+–=
 gr1n1+–=
J W T+n1ijniuj
x1&amp;mdash;&amp;mdash;&amp;ndash; –
   d
=&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Fracture Mechanics712
Main Index
Figure 13-2  Definition of the J-integral
Numerical Evaluation of the Energy Release Rate with the VCCT Method
The VCCT  bulk data entry offers a simpler but more general way for obtaining the energy release rate. The implementation
follows the description in R. Krueger [Ref. 1]. Consider again equation (13-2).
(13-11)
It states that G is the change in potential energy by a change in crack length. Now, consider the simple finite element model
in Figure 13-3. The models A and B are the same, except that in B, the crack has grown by one element edge of length a.
Suppose we do one analysis for each one of the two models. We can now calculate the energy release rate G as:
(13-12)
Figure 13-3  Mesh for Illustrating the CCT Methodni
xy
Gd
da&amp;mdash;&amp;mdash;-–=
GFu
2a&amp;mdash;&amp;mdash;- =
Fa
u
Model A Model B&lt;/p&gt;
&lt;p&gt;713 Chapter 13: Advanced Topics
Fracture Mechanics
Main Index
Here, F is the force (obtained from Model A) that keeps the crack together, and the crack opening, u, is obtained from
Model B. In order to obtain these quantities, we would need to perform two analyses and this method is often referred to
as Crack Closure Technique (CCT). In the virtual crack closure technique, we only do the analysis with a closed crack
(Model A) and use the opening displacement at the closest nodes to the crack tip. Figure 13-4 shows the case of pure mode
I. The other modes are treated similarly and separately. The displacements and reactions are transformed into the local crack
tip system for this evaluation.
Figure 13-4  The VCCT Method
With x. y, and z denoting the coordinate directions in the local crack tip system (see Figure 13-1), we obtain:
(13-13)
and the total energy release rate as:
Gtot = GI + GII + GIII (13-14)
For higher-order elements, we need to include the contributions from the midside nodes (see Figure 13-5).
(13-15)Fa
u
GIFyuy
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = GIIFxux
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = GIIIFzuz
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
GIF1u1F2u2+
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Fracture Mechanics714
Main Index
Figure 13-5  Higher-order Elements
For the case that the midside nodes are not at the middle of the element edges (for example, using the 1/4 point position
for increased accuracy, the displacements for these nodes are interpolated to the appropriate locations.
For 3-D solids, we have a situation as shown in Figure 13-6. The situation is similar to the 2-D case, and the evaluation is
done separately for each node along the crack front. The area is given by the shaded part in Figure 13-6.
For the case of higher-order elements, we obtain the following by using the notation in Figure 13-7.
(13-16)
Figure 13-6  3-D Mesh for VCCTa
u1F1
F2
u2
GF1u1F2u21
2&amp;mdash;F3u3F4u4+  + +
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Crack Front
Fu is Crack Opening
Displacement At Crack Face
a&lt;/p&gt;
&lt;p&gt;715 Chapter 13: Advanced Topics
Fracture Mechanics
Main Index
Figure 13-7  3-D Mesh for VCCT for Higher-order Elements
The above figures show a regular mesh of hexahedral elements. While a mesh designed like this is advantageous for accuracy,
it is not strictly necessary, and it is also possible to use a general tetrahedral mesh. The program will find the appropriate
nodes to use for the forces and crack opening displacement and calculate an area a.
The definition of the data involved in the VCCT calculation is done automatically. The user only specifies the crack tip or
crack front. In order to check what the program finds there is debug option available.
Symmetry is automatically detected and accounted for. The symmetry condition can be enforced by boundary conditions
or by rigid contact.
The mesh in the crack region can contain MPCs or contact. The program automatically detects if the crack tip node is
connected to a node, and the node it is connected to is considered part of the crack tip. The supported connections are
glued contact, MPC , RBE2 , and RROD . For the case that the connection is done node-to-node, it does not matter if the
tied or retained node of the constraint is selected as the crack node. With glued contact, it is not necessary to connect the
parts node-to-node. If the meshes do not match up, the crack will be treated similarly as a case of symmetry. This non-
matching glued case is automatically detected and for this case, it is necessary to select the touching node as the crack tip
node.
The calculation of VCCT is done in the current geometry in case of large deformations. The updated crack coordinate
system is calculated at each increment and the calculations are done in this system. Thus, arbitrary rotations and
deformations are allowed.
Figure 13-8 shows some examples of supported crack configurations. There is a large flexibility in how parts can be tied or
glued together to form a crack.F1
F2F4F3u4u1u3
u2&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Fracture Mechanics716
Main Index
Figure 13-8  Examples of Supported Crack Types
As an example of the usage of VCCT  for determining the stress intensity factor, see Composite Fracture and Delamination&lt;br&gt;
(Ch. 19) in the MSC Nastran Demonstration Problems Manual .
Dynamic Fracture Methodology
In complete similarity with static fracture mechanics concepts, it is assumed that dynamic crack growth processes for linear
materials are governed by the following condition:
(13-17)
where KI(t) is the dynamic stress intensity factor for mode I,  is the crack velocity, and RID is the dynamic crack
propagation toughness, which is assumed to be a material parameter that in general depends on crack velocity ,
temperature T, and specimen thickness B.
The dynamic stress intensity factor depends on crack length ( a), applied loading ( ), time (t), specimen dimensions ( D),
temperature ( T), and initial stress fields ( i) caused by residual stresses or by an initial strain field. The prediction of the
crack propagation history and crack arrest event demands complete knowledge of the RID vs.  relation. The Dynamic
Fracture Methodology procedure consists of the following two phases:
1.Generation phase  – in this phase, a crack arrest experiment is performed yielding a crack propagation-versus-time
curve. In addition, a numerical simulation of the experiment is carried out by using the measured crack propagation
curve. This is used as input for the numerical model. This allows the calculation of dynamic stress intensity factors
as a function of time. Combination of the latter relation with the measured crack propagation curve results in a
curve, which can be considered the dynamic crack propagation toughness-versus-crack velocity relation.Line Crack in Shell Shell Glued to Shell 3-D Solid
Shell Glued to Solid (Line Crack) Shell Glued to Solid (Surface Crack)Crack FrontCrack Tip
KIt RIDa·TB = a·0
a·
a·
T
a·&lt;/p&gt;
&lt;p&gt;717 Chapter 13: Advanced Topics
Inertia Relief
Main Index
2.Application phase  – in order to predict the crack growth and possible crack arrest point in a structural component,
the inverse problem is solved. Now, the actual stress intensity factors are calculated for the structural component,
that is subjected to a particular loading history, by means of a dynamic finite element analysis. These calculated
values are compared to the fracture toughness curve obtained during the generation phase, equation (13-17), and
from this the crack growth is predicted.
Dynamic Crack Propagation
The concepts of fracture mechanics discussed in previous sections have been applied to the prediction of crack initiation,
as well as slow stable crack growth of statically loaded structures and for the prediction of fatigue crack growth in cyclically
loaded structures. In problems where inertial effects cannot be ignored, application of quasi -static fracture mechanics
techniques can lead to erroneous conclusions. The use of dynamic fracture mechanics concepts for these problems is clearly
of necessity. The main emphasis on dynamic fracture mechanics is to predict the initiation of stationary cracks in structures,
which are subjected to impact loading. It also focuses on the conditions for the continuous growth of fast propagating
cracks, and on the conditions under which a crack is arrested.
The problem of predicting the growth rate and the possible crack arrest point is quite complicated. It is often treated by
means of a so-called dynamic fracture methodology, which requires the combined use of experimental measurements and of
detailed finite element analyses. An essential step in this approach is formed by the numerical simulation of propagating
cracks by means of the FEM.
The J-integral as implemented in SOL 400 takes into account the effect of inertial and body forces, thermal and mechanical
loading and initial strains.
Evoking the NLTRAN  and the VCCT  bulk data entry allows for the calculation of dynamic energy release rates for cracked
bodies which are subjected to arbitrary thermal and mechanical loadings including initial stresses.
References
1.Krueger, R., “Virtual Crack Closure Technique: History, Approach and Applications”, Appl. Mech. Rev., Vol.
57:2, pp. 109–143, March 2004.
Inertia Relief
Inertia relief is a technique to simulate self-equilibrating quasi dynamic loading in static analyses.
Introduction to Inertia Relief
Inertia relief is an advanced option in MSC Nastran that allows you to simulate unconstrained structures in a static analysis.
It enables applied static loading to an unconstrained structure and the calculation of deformed shape and internal loads
within the accelerated structure. Inertia relief calculates the rigid body mass x acceleration loads imparted by the applied
loads, and applies them in combination to the flexible body to produce a load-balanced static formulation in the linear
acceleration reference frame. The “steady-state” relative structural displacements and internal loads are calculated&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Inertia Relief718
Main Index
automatically. Typical applications of inertia relief include modeling an aircraft in flight, an automobile on a test track, or
a satellite in space.
Inertia relief is commonly used to measure inertial compliance or dynamic stiffness of an unconstrained component under
attachment loads or under center of gravity unit loads. Inertia relief has the valuable property of providing the static-
dynamic convergence shape and elastic modes solution of a dynamically loaded free-free structure.
Although the internal processing is somewhat complex, the interface to the inertia relief option is quite straightforward. It
is now available in MSC Nastran for SOL400 with nonlinear material and contact analysis but under the restriction of small
displacement/rotations (PARAM,LGDISP=-1).
Usage of Inertia Relief
It is easy and straightforward to apply inertia relief in nonlinear analysis with SOL 400 in MD Nastran.
The Case Control Command, IRLOAD, will activate this capability for SOL 400. It is only available to SOL 400 and will
be ignored in other solution sequences.
Selects nonlinear inertia relief set for SOL 400
Format:
Example:
IRLOAD=QLINEAR
QLINEAR is to activate Inertia Load Calculation with small displacement (Quasi-Linear) in SOL 400. NONE means No
Inertia Relief, which is default.
Guidelines and Limitations
The guidelines and limitations can be considered in the following two groups:
1.From the general view point of Nonlinear Inertia Relief in SOL 400
a.The current implementation is restricted to the requirement of a set of STATIC supports that constrains all six
rigid body motions only. Please note that the constraints must be only removing the rigid body motion, but not
induce any addition deformation and stress. Thus no mechanisms or symmetry boundaries are allowed.
b.This approach is only valid for models whose geometry does not change during loading, such as SOL 400 with
LGDISP = -1 (Default). In nonlinear static analyses (ANALYSIS=NLSTAT), it activates the inertia relief
analysis with small displacement only. When IRLOAD=QLINEAR with large displacement
(PARAM,LGDISP, &amp;gt;0), a fatal error message will be issued.
c.The Inertia Relief analysis does not support superelements. IRLOADQLINEAR
NONE   =&lt;/p&gt;
&lt;p&gt;719 Chapter 13: Advanced Topics
Inertia Relief
Main Index
d.The rigid body mass matrix must be non-singular. This problem will not occur for regular line, surface, or solid
elements with proper mass density but may occur from CONM2 type inputs when not all translational DOF’s
have the corresponding mass.
e.IRLOAD=QLINEAR is a global case control command and activates the inertia load calculations in SOL 400
for all applied static loads and therefore must occur above the STEP level.
f.IRLOAD=QLINEAR is ignored by the perturbation analyses in SOL 400.
g.IRLOAD=NONE (default) deactivates the inertia load calculations.
h.The tradition Parameter, INREL, is ignored in the nonlinear chaining and multi-physics analyses but supported
in the multidiscipline with linear analysis.
2.When Inertia Relief is used with the 3D Contact, the following contact settings are recommended:
a.For general touching contact, linear contact (LINCNT in BCPARA), in which contact constraints are based on
the undeformed geometry, is recommended for the inertia relief analysis.
b.IGLUE=2 (see BCTABLE in QRG) and NLGLUE=1 (see BCPARA in QRG) – general glue contact for Node-
to-Surface contact. These settings are used to avoid the possibility of more than 6 rigid body modes during the
contact analysis. An IGLUE=0 is to be avoided as this has a greater possibility of causing more than 6 rigid body
modes during the contact analysis.
c.JGLUE=1 (see BCTABLE in QRG) – allow separation (optional)
d.IBSEP=2 (see BCPARA in QRG) – if there are high order elements with separation
e.In addition, when running nonlinear inertia relief with Contact, chattering should be avoided if possible. Since
this is usually a modeling issue the following suggestions are also recommended
•Try ICSEP&amp;gt;0 instead of ICSEP=0 (see BCPARA in QRG)
•Adjust BIAS and ERROR (see BCPARA and BCTABLE in QRG)
•Try smaller MAXSEP and NODSEP (see BCPARA in QRG)
Fatal error messages will be issued when
1.IRLOAD=QLINEAR is given for some (but not all) SUBCASE’s.
2.IRLOAD=QLINEAR is used with large displacement (PARAM,LGDISP, &amp;gt;0)
3.IRLOAD is used with superelements.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Inertia Relief720
Main Index
Example of Inertia Relief
The following 2 models are identical except that one has inertia relief (IRLOAD=QLIN), af_ir.dat, and another does not,
af_noir.dat.
Figure 13-9  Inertia Relief test model - airfoil with cutout
ID MSC, af_ir
SOL 400
CEND
ANALYSIS = NLSTAT
IRLOAD=QLINEAR $ this card is removed in af_noir.dat
SPC=20
LOAD = 400
DISP=all
STRESS=all
SPCF=all&lt;/p&gt;
&lt;p&gt;721 Chapter 13: Advanced Topics
Inertia Relief
Main Index
BEGIN BULK
$ Determinate-SPC
SPC1 20 2 1
SPC1 20 23 101
SPC1 20 123 104
The results of DISP , LOAD, SPCF are showed in the following figures. Note that there are 15 orders of magnitude
difference on the spcforces between af_ir and af_noir.
Figure 13-10  Displacements – af_ir vs. af_noir
Figure 13-11  Loads – af_ir vs. af_noir&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Large Displacement Grid Point Weight Generation  (GPWG)722
Main Index
Figure 13-12  SPCF – af_ir vs. af_noir
Large Displacement Grid Point Weight Generation  (GPWG)
The Grid Point Weight Generator (GPWG) provides you information on the mass matrix, including center of gravity
information and principal moments of inertia. The GPWG calculations are triggered by PARAM,GRDPNT,gridid .
Where gridid &amp;gt; -1 ; if gridid = 0 , then the Basic Origin is used. In MSC Nastran  SOL 400, when a geometrically
nonlinear or large displacement analysis is performed, all the weight and balance information is obtained based on the
deformed structural geometry and printed out at user-specified nonlinear output intervals.
Detailed information about the GPWG calculations and printout can be found in  Grid Point Weight Generator  (Ch. 19) in the
MSC Nastran Linear Static Analysis User’s Guide .
BSQUEAL
The BSQUEAL  bulk data entry is available for brake squeal simulation. It is now possible to determine the unstable brake
squeal roots using MSC Nastran’s complex eigenvalue solver and unsymmetric friction stiffness matrices either for an
undeformed structure or after a nonlinear loading. Unstable roots indicate potential brake squeal. They are designated by
positive real roots and negative damping in the .f06  output file.
Brake Squeal Model (nlbsql01.dat)
Figure 13-13 shows a finite element model of a simplified brake assembly. The brake system consists of a disk, two brake pads
and pistons. The pistons are glued to the pads through a general flexible body-to-body contact. The modal brake squeal
analysis is performed in the pre-load state and the job is terminated immediately after the brake squeal analysis. Figure 13-14
shows the first unstable mode of brake squealing.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P38</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_038/</guid>
      <description>
        
        
        &lt;p&gt;723 Chapter 13: Advanced Topics
BSQUEAL
Main Index
Figure 13-13  FE Model of a Simplified Brake Assembly
Input File
ID MSC, NLBSQL01 $
SOL 400
CEND
ECHO=SORT( EXCEPT GRID, CHEXA )
BCONTACT = 0
SUBCASE 1
SUBTITLE=CASE1
STEP 1
LABEL=Nonlinear Static Step, Loading + Contact
NLPARM = 1
BCONTACT = 1
BOUTPUT=ALL
BSQUEAL  = 988
SPC = 2
LOAD = 2
CMETHOD=1
METHOD =2  $ Modal Approach
DISP(PLOT)=ALL
AUTOSPC(NOPRINT)=YES
RESVEC=NO
BEGIN BULK
BCPARA   0       NLGLUE  1
PARAM    LGDISP  1
NLPARM   1                       FNT                     PV      NO
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-0&amp;mdash;-
BCTABLE  1                       4
Disk is in contact with pads
Pads are glued to piston but are
in contact with disk
Pistons are glued to pads&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
BSQUEAL724
Main Index
SECNDRY 9       0.      0.     1.       0.      0       0.
1       2       0
PRIMARY 8
SE CNDRY 10      0.      0.     1.       0.      0       0.
1       2       0
PRIMARY 8
SE CNDRY 11      0.      0.      0.      0.      1       0.
1       2       0
PRIMARY 9
SECNDRY 12      0.      0.      0.      0.      1       0.
1       2       0
PRIMARY 10
EIGC          1     CLAN                                    20
EIGRL   2                       15
$&amp;mdash;&amp;mdash;-2&amp;mdash;&amp;mdash;-3&amp;mdash;&amp;mdash;-4&amp;mdash;&amp;mdash;-5&amp;mdash;&amp;mdash;-6&amp;mdash;&amp;mdash;-7&amp;mdash;&amp;mdash;-8&amp;mdash;&amp;mdash;-9&amp;mdash;&amp;mdash;-0&amp;mdash;-
$       ID      OMETH   AVSTIF  GLUE    ICORD   BSONLY
BSQUEAL 988     0.0     1.e+4                   YES&lt;br&gt;
0.0     0.0     1.0     0.0     0.0     0.0
PSOLID   1       1       0
$ Pset: &amp;ldquo;disk&amp;rdquo; will be imported as: &amp;ldquo;psolid.1&amp;rdquo;
CHEXA    1       1       1       2       9       8       1001    1002
1009    1008
CHEXA    2       1       2       3       10      9       1002    1003
1010    1009
CHEXA    3       1       3       4       11      10      1003    1004
1011    1010
.
.
.
$ Elements and Element Properties for region : pad1
PSOLID   2       2       0
$ Pset: &amp;ldquo;pad1&amp;rdquo; will be imported as: &amp;ldquo;psolid.2&amp;rdquo;
CHEXA    1004    2       2004    2005    2012    2011    3004    3005
3012    3011
CHEXA    1005    2       2005    2006    2013    2012    3005    3006
3013    3012
.
.
.
CHEXA    1030    2       2034    2035    2042    2041    3034    3035
3042    3041
$ Elements and Element Properties for region : pad2
PSOLID   3       2       0
$ Pset: &amp;ldquo;pad2&amp;rdquo; will be imported as: &amp;ldquo;psolid.3&amp;rdquo;
CHEXA    1031    3       4000    4001    4005    4004    4024    4025
4029    4028
CHEXA    1032    3       4001    4002    4006    4005    4025    4026
4030    4029
.
.
.
CHEXA    1045    3       4018    4019    4023    4022    4042    4043
4047    4046
$ Elements and Element Properties for region : piston
PSOLID   4       2       0
$ Pset: &amp;ldquo;piston&amp;rdquo; will be imported as: &amp;ldquo;psolid.4&amp;rdquo;
CHEXA    1046    4       5007    5008    5002    5005    5012    5009
5010    5011&lt;/p&gt;
&lt;p&gt;725 Chapter 13: Advanced Topics
BSQUEAL
Main Index
CHEXA    1047    4       5004    5001    5008    5007    5014    5013
5009    5012
.
.
.
CHEXA    1053    4       10007   10008   10006   10004   10016   10013
10012   10018
MAT1     1      21000.  8076.92 .3      7.8-6
MAT1     2      2000.   769.231 .3      2.3-6
$ Nodes of the Entire Model
GRID     1              40.      0.      0.      1
GRID     2              50.      0.      0.      1
GRID     3              60.      0.      0.      1
.
.
.
GRID     10018          89.08   31.9591 -10.
$ Loads for Load Case : case1
SPCADD   2       1       3       4
LOAD     2      1.      1.       1
LOAD     4      1.0-8   1.       1
$ Contraints in Cylindrical Coord. 1
$ On one edge
$        SID     C       G1      G2 &amp;hellip;&amp;hellip;.
SPC1     1       13      1       8       15      22      29      36
43      50      57      64      71      78      85      92
99      106     113     120     127     134     141     148
155     162     169     176     183     190     197     204
211     218     225     232     239     246
$ Displacement Constraints of Load Set : pad_fixed
SPC1     3       12      3004    3005    3006    3007    3039    3040
3041    3042
$ Displacement Constraints of Load Set : pad_fixed2
SPC1     4       12      4000    THRU    4023
$ Deform Body Contact LBC set: disk
BCBODY   8       3D      DEFORM  8       0
BSURF    8       1       2       3       4       5       6       7
8       9       10      11      12      13      14      15
16      17      18      19      20      21      22      23
.
.     &lt;br&gt;
.
208     209     210     211     212     213     214     215
216
$ Deform Body Contact LBC set: pad1
BCBODY   9       3D      DEFORM  9       0
BSURF    9       1004    1005    1006    1010    1011    1012    1016
1017    1018    1022    1023    1024    1028    1029    1030
$ Deform Body Contact LBC set: pad2
BCBODY   10      3D      DEFORM  10      0
BSURF    10      1031    1032    1033    1034    1035    1036    1037
1038    1039    1040    1041    1042    1043    1044    1045
$ Deform Body Contact LBC set: piston
BCBODY   11      3D      DEFORM  11      0
BSURF    11      1046    1047    1048    1049 &lt;br&gt;
BCBODY   12      3D      DEFORM  12      0
BSURF    12      1050    1051    1052    1053
$ Pressure Loads of Load Set : pressure&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
BSQUEAL726
Main Index
PLOAD4   1       1046   50.                              5009    5011
PLOAD4   1       1047   50.                              5013    5012
PLOAD4   1       1048   50.                              5014    5015
PLOAD4   1       1049   50.                              5012    5017
PLOAD4   1       1050   50.     50.     50.     50.      10008   10003
PLOAD4   1       1051   50.     50.     50.     50.      10005   10009
PLOAD4   1       1052   50.     50.     50.     50.      10001   10008
PLOAD4   1       1053   50.     50.     50.     50.      10007   10006
$ Referenced Coordinate Frames
CORD2C   1               0.      0.      0.      0.      0.     1.
1.       0.      0.
ENDDATA $
C O M P L E X   E I G E N V A L U E   S U M M A R Y
ROOT     EXTRACTION                  EIGENVALUE                     FREQUENCY              DAMPING
NO.        ORDER             (REAL)           (IMAG)                (CYCLES)            COEFFICIENT
1           1          0.0              0.0                   0.0                   0.0
2           2          0.0              5.267539E+01          8.383549E+00          0.0
3           3          0.0              5.758587E+01          9.165074E+00          0.0
4           4          0.0              8.833070E+01          1.405827E+01          0.0
5           5          0.0              1.052037E+02          1.674369E+01          0.0
6           6          0.0              1.070820E+02          1.704263E+01          0.0
7           8         -1.901260E+00     1.953634E+02          3.109305E+01          1.946383E-02
8           7          1.901260E+00     1.953634E+02          3.109305E+01         -1.946383E-02
9          10         -1.548788E+00     3.172325E+02          5.048912E+01          9.764370E-03
10           9          1.548788E+00     3.172325E+02          5.048912E+01         -9.764370E-03
11          15          0.0              3.943055E+02          6.275567E+01          0.0
12          14          0.0              4.006665E+02          6.376806E+01          0.0
13          13          0.0              4.113044E+02          6.546112E+01          0.0
14          12          0.0              4.669658E+02          7.431991E+01          0.0
15          11          0.0              4.695969E+02          7.473867E+01          0.0&lt;/p&gt;
&lt;p&gt;727 Chapter 13: Advanced Topics
RESTART
Main Index
Figure 13-14  First Instable Mode Shape (Frequency=31.1 Hz)
Brake squeal can also be executed in the linear perturbation by using ANALYSIS=MCEIG. As an example of the usage of
BSQUEAL  for calculating the unstable frequencies of a braking system, see Brake Squeal Analysis  (Ch. 26) in the MSC
Nastran Demonstration Problems Manual .
RESTART
The purpose of a nonlinear restart is to allow the user to use the material and geometrical properties of a previously
converged solution as a new starting point to continue the analysis. This is useful when the user want to change the loading
sequence, the solution criteria, or to extend the analysis.
For SOL 400, a user-friendly restart procedure has been implemented. For restarts, the following principles are noted:
The restart must be continued at a previous converged solution point in a nonlinear static analysis or nonlinear
transient analysis by specifying a SUBCASE , STEP , and/or TIME  (LOADFAC ). This is accomplished by using the
NLRESTART  case control command.  Note that restart is not supported in linear analysis or linear perturbation
analysis.
When the cold start is ANALYSIS=NLSTAT , it can be restarted at any user-specified output load increment
(controlled by NOUT  in NLPARM  bulk data entry).&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
RESTART728
Main Index
When the cold start is ANALYSIS=NLTRAN , it must be restarted from a saved or ‘check-pointed’ time step. The
checkpoint times are dependent on DT and NO values on the TESTEPNL  bulk data entry, and PARAM,
NLPACK  of the cold start run. The checkpoint times are integer multiples of (DT x NO) x NLPACK . For
example, if DT=0.001 second, NO=10, and NLPACK=100, the possible ‘times’ that can be used for restart are at
1.0, 2.0, etc. If a requested restart time does not match a checkpoint time, the closest checkpoint time is used . The
same logic can also used in the NLSTEP bulk data entry.
The geometry and the initial material properties of the structural model cannot be modified. This is obvious
because any modification to the geometry or the initial material properties would invalidate the previous analysis
and require the nonlinear solution to start from the very beginning. In such cases, it is simpler to initiate another
cold start.
Please note that when running NLRESTART with Advanced Nonlinear Element, the Data Blocks for Advanced
Nonlinear Element must be saved in the corresponding cold start run with the proper DBSAVE, NLPACK, and
INTOUT.
T o be able to implement NLRESTART with Advanced Nonlinear Elements, the proper DBSAVE, NLPACK, and
INTOUT must be set properly.
DBSAVE in the Case Control Section is used to control saving of datablocks of advanced nonlinear elements for static and
transient nonlinear analysis in SOL 400.
If DBSAVE=0, NLRESTART may start at the end of the loadcase (load step) for advanced nonlinear elements. If
DBSAVE=n (&amp;gt;0), NLRESTART may start at the every INTOUT* n th output point.&lt;br&gt;
For NLTRAN analysis in SOL 400, the output to the file, i.e., NLRESTART usage, is also influenced by the NLPACK
defined in “Param, NLPACK, n”. For example, one NLTRAN analysis has NLSTEP as:
NLSTEP, 900, 0.2
,fixed, 2000, 20
,mech, u
It has total 2000 increments, and is asked output every 20 increments. Therefore, total output is 100 time step. In
NASTRAN, default value of NLPACK is 100, in this model, therefore, NASTRAN will write the results to OP2 after
collecting 100 output, i.e., this model will write results to OP2 only one time. With &amp;ldquo;intermediate output request, you will
have only one OP2 file.
If NLPACK=1, NASTRAN will write results to OP2 for every output request. In this model, NASTRAN will write results
to OP2 for every output request, i.e., writing 100 times in this model. With intermediate output request, you will have 100
OP2 files.
Performing restart is described in the following subsections.-1 No datablocks of advanced nonlinear elements is saved
0 Saving datablocks of advanced nonlinear elements at the end of each loadcase
(default)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 Saving datablocks of advanced nonlinear elements at the every nth output request
of results&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;729 Chapter 13: Advanced Topics
RESTART
Main Index
File Management Commands
For a restart, the data of the cold start must be made available by using the File Management commands. For nonlinear
restart, two commands are needed: ASSIGN  and RESTART . These two commands are existing commands and special
requirements are not needed for SOL 400.
There are many methods to retrieve data for a restart. One method is given in the example below. For other methods, please
refer to the File Management Statements  of the QRG or Solution Sequences  (Ch. 7) in the MSC Nastran Reference Guide .
Case Control Modifications
The presence of a NLRESTART  case control command indicates that the current run is a restart execution. The case
control file contains both subcases and steps, which have been executed in the cold start, and those that are to be executed
in the restart. The first subcase, step, and/or load factor to be executed in the restart is indicated by the options on the
NLRESTART  command. This is shown by the following example:
NLRESTART SUBCASE 1, STEP 2, TIME 0.3
SUBCASE 1
STEP 1
LOAD = 10
STEP 2
LOAD = 20
STEP 3
LOAD = 30
In the above example, the first step through time 0.3 of the second step has been previously executed. The restart execution
begins with time 0.3 of the second step, and continues through the end of the third step. If time 0.3 is not a restart point
saved by NLPACK  on the cold start, SOL 400 will search for the nearest restart point on the data base and use that point to
begin the restart. For restart, the case control file structure for SUBCASE  and STEP  commands must be the same as the
cold start up to the restart point. After the restart point, the user may modify the case control file structure for the
SUBCASE  and STEP  commands. For example, in the above example, steps 1 and 2 must exist in the cold start. However,
step 3 may or may not exist in the cold start.
The following case control commands may be modified in a nonlinear restart:
Boundary conditions such as MPC  and SPC
Nonlinear solution control, NLSTEP , NLPARM , and TSTEPNL
The LOAD  requests
Output request such as DISP  and NLSTRESS
The analysis type, ANALYSIS
Depending on the option selected with the NLRESTART  command, the nonlinear restart may be logically divided into
three types: a case restart, a step restart, or a time restart:
The case restart begins the execution with a SUBCASE . All five types of modification described above are legal for
a case restart.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
RESTART730
Main Index
The step restart begins the execution with a STEP , which may be a new step or a previously executed step.
Although boundary condition and analysis type modifications are allowed, the user has the responsibility to
determine whether they are meaningful. Special attention should be given to the analysis type modification; it may
not be meaningful in many situations and, thus, leads to erroneous results.
The time restart begins execution with a user-specified TIME . For a time restart, the user should not modify the
analysis type, boundary conditions, or load requests. The user needs to exercise discretion when attempting other
types of modification at this level. Also, in order to perform this type of restart, the specified TIME  must be at the
NLPACK  data group boundary. If it is not, SOL 400 searches for the nearest data boundary and uses this
boundary as the restart point.
Bulk Data Modifications
The bulk data file for a nonlinear restart contains only those entries that are to be added to the cold start. The deletion bulk
data entry ‘/’ cannot be used. This is to serve as a reminder that the geometry and the initial properties cannot be modified.
The user may make modifications to the bulk data file by introducing new entries, which may be copies of the original
entries with appropriate changes and new identification numbers. The following list of entries can be added in a restart:
Load entries such as LOAD , FORCE , PLOAD4 , and SPCD .
NLSTEP , NLPARM , and TSTEPNL  entries.
Boundary condition entries such as SPC, SPC1 , and MPC .
As an alternative method using the NLIC  case control command, the following demonstrates an initial analysis with a
SUBCASE  with three steps followed by a restart analysis where the simulation is started after Step 1.
First Part of Restart Example
All the bold-font statements are entries that show the difference between those analyses and how to set the initial condition
for the nonlinear transient analysis after static analysis. Note that the nonlinear transient analysis does not use the final
results of the closest static analysis as the initial condition; instead, it asks the results of the 50% load increment in the first
STEP  to be the initial condition. Also, parameter ICPOT=0 is selected, which will compute the initial acceleration at the
beginning (t=0.0) of the transient analysis when it is not in balance.
ID MSC, EX04 $
SOL 400 $
CEND
TITLE= ELASTIC-PLASTIC STATIC &amp;amp; TRANSIENT RESPONSE,          EX04
SUBTI= INITIAL ACCELERATION COMPUTED - PARAM,ICOPT,0
SET 1 = 1111
SET 2 = 100
DISP = 1
VELO = 1
ACCE = 1
OLOAD = 1
$       STRESS(PLOT) = 2
SUBCASE 1130
step  1
LABEL=UNIAXIAL TENSION (LOADING)&lt;/p&gt;
&lt;p&gt;731 Chapter 13: Advanced Topics
RESTART
Main Index
ANALYSIS=NLSTAT
SPC=100
LOAD=1130
NLPARM = 1
step  2
LABEL=UNIAXIAL TENSION (UNLOADING)
ANALYSIS=NLSTAT
SPC=100
NLPARM = 1
step 10
LABEL=I.C. FROM THE FIRST NLSTAT STEP(50%) - UNBALANCED CASE (NLIC)
ANALYSIS=NLTRAN
NLIC STEP 1 LOADFAC 0.5
SPC=100
DLOAD=2130
TSTEPNL=10
param,icopt,0
BEGIN BULK
PARAm,LGDISP,1
PARAM,W4,1.0
$
NLPARM   1      4                 AUTO                               ALL
1.-6
TSTEPNL 10      2000    0.001           AUTO                         &lt;br&gt;
$
MAT1    1       30.0+6  11.5+6    0.3   7.332-2                  0.01
PSOLID  1       1
$
SPC1    100     123456  1000
SPC1    100     1       1010
SPC1    100     2       1001
SPC1    100     3       1100
GRDSET                                                  456
$
TLOAD1  2130    2130            0       500
TABLED1 500                                                             +TAB1
+TAB1   0.      0.      1.      -1.     1.2     0.      10.     0.      +TAB2
+TAB2   ENDT
$
LOAD    1130    -1.6    2.      121
LOAD    2130    -1.6    1.      121
$
PLOAD4  121     100     36.+3                           1100    1111
PLOAD4  121     100     36.+3                           1000    1011
Second Part of Restart Example
This model is a restart run of  Example four, EX04 . Since there is no structure change in the SUBCASE  1130  and there
is no parameter in NLRESTART  command, this restart job will start from the second SUBCASE . Its purpose is to shows
how the case control commands NLRESTART  and NLIC can work together. All bold-font statements are entries that show
the key case control commands in this example. Note that the nonlinear transient analysis in the second SUBCASE  asks
the final results in the first STEP  of the first SUBCASE  to be the initial condition. Also, parameter ICPOT=1 (the default)
is selected, which will not compute the initial acceleration but loads in the beginning (t=0.0) of the transient analysis, that
assumes the whole model is in equilibrium automatically when initial conditions are applied.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
User Defined Services and Subroutines732
Main Index
ASSIGN  RSFILE=&amp;lsquo;DBSDIR:ex04.MASTER&amp;rsquo; $
RESTART LOGICAL=RSFILE $
$
ID MSC, EX05 $
SOL 400 $
CEND
TITLE= ELASTIC-PLASTIC STATIC &amp;amp; TRANSIENT RESPONSE,          EX05
SUBTI= NO INITIAL ACCELERATION COMPUTED - PARAM,ICOPT1
SET 1 = 1111
SET 2 = 100
DISP = 1
VELO = 1
ACCE = 1
OLOAD = 1
$       STRESS = 2
NLRESTART
SUBCASE 1130
step  1
LABEL=UNIAXIAL TENSION (LOADING)
ANALYSIS=NLSTAT
SPC=100
LOAD=1130
NLPARM = 1
step  2
LABEL=UNIAXIAL TENSION (UNLOADING)
ANALYSIS=NLSTAT
SPC=100
NLPARM = 1
step 10
LABEL=I.C. FROM THE FIRST NLSTAT STEP - UNBALANCED CASE (NLIC)
ANALYSIS=NLTRAN
NLIC STEP 1 LOADFAC 0.5
SPC=100
DLOAD=2130
TSTEPNL=10
param,icopt,0
SUBCASE 1131
LABEL=I.C. FROM THE 1st NLSTAT STEP OF PREVIOUS SUBCASE (NLIC)
ANALYSIS=NLTRAN
NLIC SUBCASE 1130 STEP 1
SPC=100
DLOAD=2130
TSTEPNL=10
param,icopt,1
BEGIN BULK
ENDDATA
User Defined Services and Subroutines
MSC Nastran SOL 400 has a powerful capability to customize the program through User Subroutines. This capability
requires:
1.A few options to indicate that a User Subroutine will be used
2.The user subroutine itself – written in either Fortran or c++&lt;/p&gt;
&lt;p&gt;733 Chapter 13: Advanced Topics
User Defined Services and Subroutines
Main Index
3.Instruction on linking the User Subroutine to MSC Nastran using the User Defined Services, which is part of MSC
Nastran System Component Architecture or SCA.
4.A new entry UDSESV  to allow user to define the number and name of state variables.
5.Utility functions GET_ELEM_PARAM , GET_NODE_PARAM , and GET_GLOBAL_PARAM  can be called to
obtain the information of element and node as well general data in material user subroutines.
6.A new SCA interface SCAIMDSolverRuntimeInfo and its method notify. The notify method in a service will be
called at the beginning of load case, the end of load case, the beginning of increment and the end of increment.
7.A new entry GENUDS  to allow user to define input data for the notify method in SCAMDSolverRuntimeInfo
interface. User can define integer, real and character data in this entry, these data will be passed to the notify method
as arguments when it gets called.
8.The state variables can be output to .f06 ,.op2 ,.h5, and.DBALL  files. DRA access to state variables output is
available for GUI modelers.
The user subroutines are grouped into the following classes:
ClassBulk Data
EntryBulk Data
Entry
ReferencedUser
Subroutine Purpose
Element ELEMUDS PAXISYM
PBAR
PBARL
PBEAM
PBEAML
PCOHE
PCOMP
PCOMPF
PCOMPLS
PLCOMP
PLPLANE
PLSOLID
PROD
PSHEAR
PSHELL
PSOLIDuselem Define stiffness / mass matrix / generalized internal
force
PBUSHT nlrsfd Squeeze film damper – this is provided by Romac&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
User Defined Services and Subroutines734
Main Index
The call lists of these subroutines are defined in the MSC Nastran User Defined Services User’s Guide .
The options ELMUDS , MATUDS , and BCONUDS  allow you to define integer, real, and character data through the bulk
data which is passed into the user subroutines that you are writing.
These options also specify a GROUP ID. This group id is then used to reference the CONNECT SERVICE  statement of
the File Management Section (FMS).  A CONNECT SERVICE  is required for each copy of a user subroutine. For
example, if one had three different material models defined by UMAT , one would have three different CONNECT
SERVICE . It is also possible to have a single UMAT  with conditional logic to control which material is used, in which case
a single CONNECT SERVICE  is required.
This capability to reference multiple copies of the same use allows this capability to be used in a multi-user environment,
but leads to extra complexity. For additional information refer to the MSC Nastran Quick Reference Guide , MSC Nastran
User Defined Services User’s Guide  and the SCA Framework User’s Guide. For simplification the remainder of this section will
be focused on activating a user subroutine for the most common cases, where a single file can contain all the user subroutines
and will be associated with the current simulation.Material Model MATUDS MATHE Uelastomer Define a strain energy function for an elastomer
material
MATUSR Hypela2 Define a nonlinear stress-strain law and stresses
MATUSR umat Define a nonlinear stress-strain law and stresses
MAT1 crplaw Define equivalent creep strain rate
MATF ufail Define material failure criteria
uprogfail Define the reduction of elastic constants due to
failure
MATORT orient Define a local material preferred directions
MCOHE ucohes Define relationship between traction and opening
displacement
Contact BCONUDS BCBODY Motion Control the motion of rigid surfaces
Ufric Define the coefficient of friction
Sepfor Define the force at which bodies separate
Sepstr Define the stress at which bodies will separate
ubrksqueal Defines friction coefficient and effective stiffnessClassBulk Data
EntryBulk Data
Entry
ReferencedUser
Subroutine Purpose&lt;/p&gt;
&lt;p&gt;735 Chapter 13: Advanced Topics
User Defined Services and Subroutines
Main Index
User-defined State Variables
UDSESV
The UDSESV  bulk data entry defines user state variables. These state variables are associated with the integration points
of all elements. When numerically integrated shells or beams are used, then the state variables are associated with each layer
point. Note that the first state variable is temperature. Each state variable has its default name as SVi with the i being the
index number of the state variable. For example, the third state variable has its default name SV3. You can define another
name for state variable using the UDSESV  entry. These state variables will be passed to material UDS as arguments when
the UDS gets called.
One special note is for the first state variable, it is reserved for temperature. The temperature is passed as the first element
of the state variable array in UDS. User defined state variables are available from the second position in the state variable
array.
Format:
Example:
Remarks:
1.This is a global entry that defines user state variables for material user subroutines. The temperature will always be
passed to material use subroutine as the first state variable; its name should not be redefined in this entry.
2.If a state variable is not given a name, SVi will be used as its name. The number i is the index number of the state
variable.
3.For output, either  state variable names given in UDSESV  or  default SVi names can be used in NLOUT  entry in
case control. The state variables names will be used as keywords for output selection.UDSESV NSTATS
SV2SV2_NAME SV3SV3_NAME SV4SV4_NAME SV5SV5_NAME
SV6SV6_NAME .etc.
UDSESV 3
SV2 VAR2 SV3 VAR3
Field Contents
NSTATS The number of user defined state variables. (Integer &amp;gt;= 1)
SVi The default nominal name of state variable (CHARACTER, i &amp;gt;= 1, where i is the index
number of the state variable)
SVi_NAME The state variable name defined by user  (CHARACTER, Default = SVi, where i is the index
number of the state variable)&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
User Defined Services and Subroutines736
Main Index
4.The 1st state variable is always temperature. The remaining user defined state variables are defined and used only
by user, MSC Nastran will not use them.
GENUDS
The GENUDS  bulk data entry is to specify SCA service that implements the SCAIMDSolverRuntimeInfo interface. The
user supplied input data for the notify method is also defined in this entry. When the notify method is called, the input
data will be passed as arguments to this method.
Format:
Example:
Remarks:
1.The SER_ID  is the service identifier of SCA service in the CONNECT SERVICE  statement. The SCA service
should have implemented the RuntimeInfo interface.
2. A CDATAi  entry cannot be the character “INT” , “REAL” , or “CHAR” .GENUDS SRV_ID
“INT” IDATA1 IDATA2 IDATA3 IDATA4 IDATA5 IDATA6 IDATA7
IDATA8 IDATA9 …IDATAn
“REAL” RDATA1 RDATA2 RDATA3 RDATA4 RDATA5 RDATA6 RDATA7
RDATA8 RDATA9 …RDATAn
“CHAR” CDATA1 CDATA2 …CDATAn
GENUDS MY_SRV
INT 1 2 100
Field Contents
SRV_ID The service identifier used in the CONNECT SERVICE  statement. (Character, no default)
“INT” Keyword indicating that the following data is integer. (Character)
IDATAi User supplied integer data. (Integer, no default)
“REAL” Keyword indicating the following data is real. (Character)
RDATAi User supplied real data. (Real, no default)
“CHAR” Keyword indicating the following data is character. (Character)
CDATAi User supplied character data. (Character, no default)&lt;/p&gt;
&lt;p&gt;737 Chapter 13: Advanced Topics
User Defined Services and Subroutines
Main Index
Utility Functions to Access MSC Nastran Data in UDS
Three utility functions GET_ELEM_PARAM , GET_NODE_PARAM , and GET_GLOBAL_PARAM  are provided in
this release. In material UDS, these utility functions can be called to get model data. A keyword and related input arguments
are used to indicate what kind of data to retrieve, the utility functions will returned data in output arguments. Both
FORTRAN and C++ callable functions are provided.
General Parameters
The functions and keywords are used to get model, machine and analysis procedure information, the available keywords in
this category are:
SUBCASE_NUMBER
STEP_NUMBER
INCREMENT_NUMBER
SUB_INCREMENT_NUMBER  (if applicable)
ITERATION_NUMBER
CURRENT_TIME
INCREMENTAL_TIME
TIME_OF_PREVIOUS_STEP
TIME_OF_PREVIOUS_INCREMENT
FRACTIN_OF_STEP_COMPLETED
LARGE_DISP_FLAG
JOB_NAME
JOB_DIRECTORY
WORKING_DIRECTORY
SCRATCH_DIRECTORY
NUM_PROCS
NUM_CPUS
Element Parameters
The functions and keywords are used to get element related data, the available keywords in this category are:
ELEMENT_TYPE
DIRECT_STRESS_QUANTITIES
SHEAR_STRESS_QUANTITIES
NODES_OF_THE_ELEMENT
INTEGRATION_POINTS_OF_THE_ELEMENT
MATERIAL_ID_FOR_THE_ELEMENT&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
User Defined Services and Subroutines738
Main Index
ELEMENT_CLASS
MAJOR_ENGINEERING_STRAIN
MINOR_ENGINEERING_STRAIN
CURRENT_VOLUME
ORIGINAL_VOLUME
TOTAL_TEMPERATURE
INCREMENTAL_TEMPERATURE
EQUIVALENT_VON_MISES_STRESS
EQUIVALENT_STRESS_YIELD_STRESS_RATIO
EQUIVALENT_ELASTIC_STRAIN
EQUIVALENT_CREEP_STRAIN
TOTAL_STRAIN_ENERGY_DENSITY
ELASTIC_STRAIN_ENERGY_DENSITY
PLASTIC_STRAIN_ENERGY_DENSITY
GASKET_PRESSURE
GASKET_CLOSURE
PLASTIC_GASKET_CLOSURE
FAILURE_INDEX
TOTAL_VALUE_OF_FIRST_STATE_VARIABLE
TOTAL_VALUE_OF_SECOND_STATE_VARIABLE
TOTAL_VALUE_OF_THRID_STATE_VARIABLE
VOLUME_FRACTION_OF_MARTENSITE
EQUIVALENT_PHASE_TRANSFORMATION_STRAIN
EQUIVALENT_TWIN_STRAIN
EQUIVALENT_TRIP_STRAIN
COMPONENTS_OF_CAUCHY_STRESS
COMPONENTS_OF_TOTAL_STRAIN
COMPONENTS_OF_ELASTIC_STRAIN
COMPONENTS_OF_PLASTIC_STRAIN
COMPONENTS_OF_CREEP_STRAIN
COMPONENTS_OF_THERMAL_STRAIN
COMPONENTS_OF_STRESS_PREFERRED_SYSTEM
PHASE_TRANSFORMATION_STRAIN_TENSOR
INTERLAMINAR_SHEAR_THICK_ELEMENTS_TXZ
INTERLAMINAR_SHEAR_THICK_ELEMENTS_TYZ&lt;/p&gt;
&lt;p&gt;739 Chapter 13: Advanced Topics
User Defined Services and Subroutines
Main Index
INTERLAMINAR_NORMAL_STRESS
INTERLAMINAR_SHEAR_STRESS
Nodal Parameters
The functions and keywords are used to get nodal data, the available keywords in this category are:
DISPLACEMENT
ROTATION
VELOCITY
ROTATIONAL_VELOCITY
ACCELERATION
ROTATIONAL_ACCELERATION
COORDINATE
Output of State Variables
The user defined state variables can be output in MSC Nastran .f06 ,.op2  ,.h5, and.DBALL  files. The NLOUT  is used
for state variables output selection. In this release, up to 100 state variables are allowed to be selected for output. The DRA
support to access state variable output is available for modelers postprocessing.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Multiple Mass Configuration740
Main Index
Example
T o use UMAT  and UCOHES  material subroutines, user should implement the material SCA interface. For users
convenience, template files have been provided and distributed with MSC Nastran installation. These template files can be
found at:
[$InstallationDir]/[MSC Version]/nast/services/Implementations/Materials/src/
Users can write user code in the ext_umat.F  or ext_ucohes.F  subroutines under the umant  and ucohesive  directories
for special material behavior. The material user services can be built using MSC SDK tools. The SDK is a separate installer
that provides SCA build tools and environment. For information about SCA services and build, please see MSC Nastran
SCA and User Defined Services documents.
For demonstration, model and template files using UMAT  are provided and can be found at:
[$InstallationDir]/[MSC Version]/nast/services/Implementations/Materials/src/umat/
Multiple Mass Configuration
The multiple mass configurations (MMC) capability is described here which provides the user with a convenient method
for constructing and analyzing additional mass cases in MSC Nastran. This can be used, for example, to analyze several
different payloads or fuel loadings in a single run. The mass increments are specified using the MASSID bulk data section.
Mass combinations are then specified using MASSSET bulk data entry. The mass combinations are subcase selectable to
provide an appropriate method similar to selecting SPCs and MPCs boundary conditions in a subcase to conduct the
analysis using appropriate mass. The complete discussion of the MMC capability is provided in the Multiple Mass Configuration&lt;br&gt;
(Ch. 18) in the MSC Nastran Dynamic Analysis User’s Guide .
MMC capability in Sol 400 can be used to conduct various type of linear and nonlinear analysis with user specified mass
cases. Example of Sol 400 analysis using MMC capability are provided in &amp;hellip;\tpl\mmc.
Below we specify some of the common use cases for conducting Sol 400 analysis with MMC capability:
1.Sol 400 linear analysis:
SOL    400
CEND
&amp;hellip;
SUBCASE 1001
LABEL = Linear Static
ANALYSIS = STATIC
LOAD     = 1001
&amp;hellip;
$
SUBCASE 1002
LABEL = Modal Frequency Response using Base Mass
ANALYSIS = MFREQ
DLOAD    = 1002
FREQ     = 1002
METHOD   = 1002
SDAMPING = 2000
&amp;hellip;
$&lt;/p&gt;
&lt;p&gt;741 Chapter 13: Advanced Topics
Multiple Mass Configuration
Main Index
SUBCASE 1004
LABEL = Normal Modes using Base Mass
ANALYSIS = MODES
METHOD   = 1004
BC = 1
&amp;hellip;
$
SUBCASE 2002
LABEL = Modal Frequency Response using Mass Case 11
ANALYSIS = MFREQ
DLOAD    = 1002
FREQ     = 1002
METHOD   = 1002
SDAMPING = 2000
MASSSET  = 101
&amp;hellip;
$
SUBCASE 2004
LABEL = Normal Modes using Mass Case 11
ANALYSIS = MODES
METHOD   = 1004
MASSSET  = 101
BC = 2
&amp;hellip;
$
BEGIN BULK
MASSSET  101     1.0     1.0     0        0.2    211
&amp;hellip;
BEGIN massid = 211
&amp;hellip;
ENDDATA
2.Sol 400 Nonlinear analysis:
SOL    400
CEND
&amp;hellip;
SUBCASE 1130
STEP  1
LABEL = Nonlinear Statics Step (LOADING)
ANALYSIS = NLSTAT
SPC = 100
LOAD = 1130
NLSTEP = 1
STEP 2
LABEL = Nonlinear Statics Step (UNLOADING)
ANALYSIS = NLSTAT
SPC = 100
NLSTEP = 1
STEP 10
LABEL = I.C. from the First NLSTAT Step with BASE Mass
ANALYSIS = NLTRAN
NLIC SUBCASE 1130 STEP 1&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Multiple Mass Configuration742
Main Index
SPC = 100
DLOAD = 2130
NLSTEP =10
SUBCASE 1140
STEP 12
LABEL = I.C. from the First NLSTAT Step with Mass Case 11
ANALYSIS = NLTRAN
NLIC SUBCASE 1130 STEP 1
SPC = 100
DLOAD = 2130
TSTEPNL = 10
MASSSET = 11
&amp;hellip;
BEGIN BULK
MASSSET  11     1.0     1.0     0       1.0     201
&amp;hellip;
BEGIN massid = 201
&amp;hellip;
ENDDATA
Examples of MMC with Sol 400 Nonlinear analysis can be found in &amp;hellip;\tpl\mmc\mmc400t1  and mmc400s1 .
3.Sol 400 Linear perturbation analysis.
SOL    400
CEND
&amp;hellip;
SUBCASE 1001
$
STEP  101
LABEL = Nonlinear Static Step
LOAD = 100
NLPARM = 10
STEP  201
LABEL = Direct Frequency Response Step using Base Mass
ANALYSIS = DFREQ
NLIC STEP 101 LOADFAC 1.0
DLOAD = 200
FREQ = 10
AUTOSPC = YES
STEP 203
LABEL = Modal Frequency Response Step using Base Mass
ANALYSIS = MFREQ
NLIC STEP 101 LOADFAC 1.0
METHOD  = 10
RESVEC  = YES
DLOAD = 200
FREQ = 10
AUTOSPC = YES
STEP  301
LABEL = Direct Frequency Response Step using Mass case 11
ANALYSIS = DFREQ
NLIC STEP 101 LOADFAC 1.0&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P39</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_039/</guid>
      <description>
        
        
        &lt;p&gt;743 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
DLOAD = 200
FREQ = 10
AUTOSPC = YES
MASSSET = 11&lt;br&gt;
STEP 303
LABEL = Modal Frequency Response Step using Mass case 11
ANALYSIS = MFREQ
NLIC STEP 101 LOADFAC 1.0
METHOD  = 10
AUTOSPC = YES
RESVEC  = YES
DLOAD=200
FREQ =10
MASSSET = 11&lt;br&gt;
STEP  401
LABEL = Nonlinear Static Step, NLIC
NLIC STEP 101 LOADFAC 1.0
LOAD = 200
NLPARM = 10
&amp;hellip;
BEGIN BULK
MASSSET  11     1.0     1.0     0       1.0     201
&amp;hellip;
BEGIN massid = 201
&amp;hellip;
ENDDATA
Examples of MMC with Sol 400 Linear perturbation analysis can be found in ..\tpl\mmc\mmc400lp1 .
Guidelines for SOL 129 to SOL 400 Migration
For nonlinear transient dynamic analysis, SOL 400 supports several additional capabilities compared to SOL 129. This
chapter gives some guidelines for users who are interested in migration of their SOL 129 models into SOL 400. As the focus
of migration is to get almost similar results in SOL 129 and SOL 400, these guidelines only cover the capabilities which
are common to both SOL 129 and SOL 400. This chapter covers the following three sections:
1.Step by step instructions for conversion of SOL 129 model into SOL 400
2.Comparison of SOL 129 and SOL 400 results
3.Additional capabilities in SOL 400&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration744
Main Index
Step by step instructions for conversion of SOL 129 model into SOL 400
These steps only discuss the changes required in SOL 129 input file to get a near similar results in SOL 400 model. The
part of input, which are common and treated in a similar manner in both these solutions are not discussed in these steps.
Step # SOL 129 SOL 400
1 SOL 129 SOL 400
2 SUBCASE # STEP # (this should be done for all subcases of SOL 129)
3 RIGID=LINEAR (only option in SOL 129) RIGID=LINEAR should be added in input file if the
model contains rigid elements
4 ANALYSIS = NLTRAN is not required ANALYSIS = NLTRAN should be added in all steps.
5 PARAM, AUTOSPC,YES &amp;amp;
PARAM,AUTOSPCR,YES AUTOSPC(RESIDUAL,SPC)=YES in case control
section
6 No AUTOSPC effect for grids of NLRGAP
elementUse SPCOFF1 command to skip the grids of NLRGAP
from AUTOSPC effect&lt;/p&gt;
&lt;p&gt;745 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
7 a.TSTEP or TSTEPNL cards are
supported. NLSTEP is not
supported.
b.SOL 129 requires smaller time step
with more number of increments. If
SOL 400 with same time step gives
different results, try running the
SOL 129 model with smaller time
step.
c.Only ADAPT method is supported
in TSTEPNL card.
d.PW is the default for CONV, but for
better convergence use UPW
e.SOL 129 default values for U, P &amp;amp; W
•EPSU = 1.0E-2
•EPSP = 1.0E-3
•EPSW = 1.0E-6a.Support NLSTEP in addition to TSTEP or
TSTEPNL. While NLSTEP is preferred for
SOL 400, it is recommended to retain the
TSTEP or TSTEPNL cards of SOL 129 in
absence of any nonlinear features
b.SOL 400 can give results similar to SOL 129
with relatively larger time step.
c.TSTEPNL in SOL 400 supports ADAPT,
AUTO, SEMI, FNT &amp;amp; PFNT, but it is
recommended to use the ADAPT method to
be consistent with SOL 129. (NLSTEP
support only ADAPT, ITER and PFNT
methods).
d.Use the same CONV value used in SOL 129.
It is recommended to use UPW in both
SOL 129 &amp;amp; SOL 400
e.SOL400 default values for U, P &amp;amp; W
•EPSU = 1.0E-2
•EPSP = 1.0E-2
•EPSW = 1.0E-2Step # SOL 129 SOL 400&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration746
Main Index
Comparison of SOL 129 and SOL 400 results
The process of migration of SOL 129 models into SOL 400 is demonstrated with few example problems. The effect of
various parameters which affect the results of SOL 129 and SOL 400 cases are discussed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Transient analysis of cantilever beam
The dynamic response of cantilever beam initially at rest and subjected to constant tip load of 500 pounds is studied with
both SOL 129 and SOL 400. The details of this plane strain model with 40 CQUAD4 elements and 55 grids are shown
in Figure 13-15. The dynamic response is studied for the following NDAMP &amp;amp; NDAMPM values. As discussed earlier, there
is no one to one relation between NDAMP values of SOL 129 and SOL 400 and the following table makes use of 8 The NDAMP values in SOL 129 represents a
numerical damping, while in SOL 400, it
represents ALPHA values in HHT-Alpha or
Generalized Alpha method. There is no one to
one direct relation between NDAMP values in
SOL 129 and SOL 400.  However, Appendix B
gives an approximate conversion equation of
NDAMP values between SOL 129 to SOL 400,
by dropping the acceleration terms from
dynamic equations.
a.SOL 129 uses numerical damping with
NDAMP values in the range of 0.0 to
1.0 for damping scheme
b.The default value of NDAMP is 0.01 in
SOL 129
c.SOL 129 results are more sensitive to
the value of NDAMP.
d.Try skipping this damping scheme with
NDAMP=0.0 to get results consistent
with SOL 400a.SOL 400 uses the following methods for
NDAMP and NDAMPM:
•HHT-Alpha method with NDAMP values in
the range of -0.33 to 0.0
•WBZ-Alpha method with NDAMPM values
in the range of 0.0 to 1.0
•Generalized Alpha method with NDAMP
values in the range of -0.5 to 0.0 and
NDAMPM values in the range of -0.5 to 1.0
b.The default values of NDAMP and
NDAMPM are -0.05 and 0.0 respectively for
SOL 400.
c.SOL 400 results are less sensitive to the values
of NDAMP &amp;amp; NDAMPM
d.Skip the damping scheme with NDAMP=0.0
&amp;amp; NDAMPM=0.0 to get the results
consistent with SOL 129
9 Slideline contact is supported in SOL 129 Slideline contact is not supported in SOL 400. It should
be replaced with more powerful contact capabilities of
SOL 400.
10 SOL 129 support only static load in dynamic
thermal loadSOL 400 support the nonlinear thermal load (time
dependent temperature distribution). To get results
consistent with SOL 129, only static part of dynamic
thermal load should be used in SOL 400 as well.Step # SOL 129 SOL 400&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;747 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
approximate conversion equations from Appendix B for values of NDAMP in SOL 129 and NDAMP/NDAMPM values in
SOL 400, by dropping the acceleration terms from dynamic equation:
Figure 13-15  Model of cantilever beam
The dynamic transient load case time period is set to 3/(325 Hz) in 150 increments to get three cycles of response. For
SOL 129, case-3 corresponds to the default value of NDAMP=0.01 and for SOL400, case-2 corresponds to the default
value of NDAMP=-0.05 &amp;amp; NDAMPM=0.0 in HHT-Alpha method. It is important to note that the valid range of
NDAMP values in the case of SOL 400 is -0.33 to 0.0 in HHT Alpha method. When user retains any positive value of
NDAMP (0.0 to 1.0) from SOL 129 in the migrated SOL400 input, Nastran will internally reset this value to 0.0, which
will ignore the effect of NDAMP in SOL 400.
The effect of damping for cases 1 to 6 for SOL 129, SOL 400 with HHT-Alpha and SOL 400 with Generalized Alpha
methods are shown in Figure 13-16 to Figure 13-18. We can observe that higher value of NDAMP (cases 4, 5 &amp;amp; 6) has
significant effect in altering the results of SOL 129. However, in the case of SOL 400 input, the higher value of NDAMP
and NDAMPM are not showing much changes in results.case #SOL 129
Newmark
BetaSOL 400
HHT-ALPHASOL 400
Generalized Alpha
NDAMP NDAMP NDAMP NDAMPM
1 0 0 -0.5 -0.5
2 0.002267574 -0.05 -0.475 -0.425
3 0.01 -0.111111 -0.444444444 -0.333333333
4 0.0625 -0.333333 -0.333333 0
5 0.1 NA -0.268762352 0.193712943
6 0.25 NA 0 1&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration748
Main Index
The results for cases 1 to 6 from SOL 129 are compared with the results of SOL400 in Figure 13-19 to Figure 13-24. The
results of SOL 129 are close to the results of SOL 400 for lower values of NDAMP (cases 1 to 3), but the results of
SOL 129 show significant difference for higher value of NDAMP (cases 4 to 6).
In general, if the user finds significant difference between the results of SOL 129 and the equivalent SOL 400 models, it is
recommended to skip the NDAMP values in both models (with NDAMP=0.0 as in case-1) to get consistent results in
SOL 129 and SOL 400 models.
Model File Name and Location :
Figure 13-16  Effect NDAMP values in SOL 129 model (Newmark Beta)Model File Name Description Location
s129_mig_01_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_01_400a.dat SOL 400 model with HHT-Alpha method
SOL 400 model with Generalized Alpha method
s129_mig_01_400b.dat&lt;/p&gt;
&lt;p&gt;749 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-17  Effect NDAMP values in SOL 400 model (HHT Alpha method)
Figure 13-18  Effect NDAMP &amp;amp; NDAMPM values in SOL 400 model (Generalized Alpha method)&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration750
Main Index
Figure 13-19  Comparison of results between SOL 129 and SOL 400 for case-1
Figure 13-20  Comparison of results between SOL 129 and SOL 400 for case-2&lt;/p&gt;
&lt;p&gt;751 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-21  Comparison of results between SOL 129 and SOL 400 for case-3
Figure 13-22  Comparison of results between SOL 129 and SOL 400 for case-4&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration752
Main Index
Figure 13-23  Comparison of results between SOL 129 and SOL 400 for case-5
Figure 13-24  Comparison of results between SOL 129 and SOL 400 for case-6&lt;/p&gt;
&lt;p&gt;753 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
2. Rotating load on cantilevered shaft with NLRGAP
The model represents a 40&amp;quot; long cantilevered shaft with 2&amp;quot; diameter. It is modelled with 10 CBAR elements and a 10&amp;quot;
diameter rotating disk at its end is simulated as CONM2. The radial gap and contact stiffness between the shaft and rotor
are simulated with NLRGAP . The details of the model are shown in Figure 13-28.
Figure 13-25  Model details of rotating shaft
The effect of time increment DT in TSTEPNL card and effect of NDAMP values are studied on the SOL 129 and
equivalent SOL 400 models. The time increment value of 5E-4, 5E-5, 5E-6 and 2.5E-6 are considered for both SOL 129
and SOL 400 cases. The values of NDAMP=0.0 and 0.01 (default value) are considered for SOL 129 model. For SOL 400,
the following NDAMP values are considered:
•NDAMP = 0.0 &amp;amp; NDAMPM = 0.0 (Newmark Beta Method)
•NDAMP = -0.111111 &amp;amp; NDAMPM = 0.0 in HHT-Alpha method (approximate equivalent to the default
value of NDAMP=0.01 in SOL 129, as per Appedix-1)
•NDAMP = -0.444444 &amp;amp; NDAMP = -0.333333 in Generalized Alpha method (approximate equivalent to the
default value of NDAMP=0.01 in SOL 129, as per Appedix-1)
The effect of DT and various NDAMP values on SOL 129 and SOL 400 models are shown in Figure 13-26 to Figure 13-30.
Figure 13-26  Effect of DT on SOL 129 model with NDAMP=0.0&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration754
Main Index
Figure 13-27  Effect of DT on SOL 129 model with NDAMP=0.01
Figure 13-28  Effect of DT on SOL 400 model with NDAMP=0.0&lt;/p&gt;
&lt;p&gt;755 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-29  Effect of DT on SOL 400 model with NDAMP=-0.111111 &amp;amp; NDAMPM=0.0
Figure 13-30  Effect of DT on SOL 400 model with NDAMP=-0.444444 &amp;amp; NDAMPM=-0.333333
The following points are observed from these results from SOL 129 and SOL 400 cases:
•In SOL 129, converged results are seen with larger time increment of DT=5E-5 with NDAMP=0.0. With
default NDAMP value of 0.01, smaller time increment of DT=5E-6 is required to get converged results
•SOL 400 is not sensitive for NDAMP and NDAMPM values and converged results are seen with larger time
increment of DT=5E-5 for all three cases of NDAMP/NDAMPM values.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration756
Main Index
Model File Name and Location :
3. Nelson MacVaugh Rotor Model
The Nelson MacVaugh rotor dynamic model is modeled with 1170 CHEXA and 435 CPENTA elements. For the transient
response RGYRO case control command is used to select the UNBALNC bulk data entry. The details of the model are
shown in Figure 13-28.
Figure 13-31  Model details of Nelson MacVaugh Rotor
The model is analyzed for both SOL 129 and equivalent SOL 400 solutions. The X and Y displacement values from
SOL 129 and SOL 400 at node 918 are compared in Figure 13-32 and Figure 13-33 and both solutions are found to give
identical results for this model.Model File Name Description Location
s129_mig_02_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_02_400a.dat SOL 400 model with Newmark Beta method
s129_mig_02_400b.dat SOL 400 model with HHT-Alpha method
s129_mig_02_400c.dat SOL 400 model with Generalized Alpha method&lt;/p&gt;
&lt;p&gt;757 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-32  X- displacement plot at node 918
Figure 13-33  Y- displacement plot at node 918
Reference
H. D. Nelson and J. M. Mc Vaugh, “The dynamics of rotor-bearing systems using finite elements,” Journal of Engineering
for Industry, vol. 98, no. 2, 1976.&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration758
Main Index
Model File Name and Location :
4. Seismic Analysis of Hull Model
This seismic analysis of a hull model is simulated with both SOL 129 and equivalent SOL 400 model. The model uses
CDAMP2 card to add damping to CGAP elements. The details of the model are shown in Figure 13-34.
Figure 13-34  Details of Kesselring FMP2 Hull Model
For the effect of NDAMP , the model is analysed for both default value of NDAMP in addition to the cases with
NDAMP=0.0 for SOL 129 and NDAMP=NDAMPM=0 in SOL 400. The value of X and Y displacement at node 14 are
compared in Figure 13-35 &amp;amp; Figure 13-36 for SOL 129 and SOL 400. The peak displacement values are same in both
SOL 129 and SOL 400, but SOL 129 response has a minor phase lag compared to SOL 400. As in earlier cases, NDAMP
has negligible influence on SOL 400 result, while it has noticeable influence in the case of SOL 129 response.Model File Name Description Location
s129_mig_03_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_03_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;759 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-35  X- displacement plot at node 14
Figure 13-36  Y- displacement plot at node 14
Model File Name and Location :
Model File Name Description Location
s129_mig_04_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_04_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration760
Main Index
5. Plastic beam with step loading
The transient response of a beam subjected to a step loading is solved in both SOL 129 and equivalent SOL 400 models.
The beam is modeled with 120 CQUAD4 shell elements and MATS1 card is used to plastic material properties. The details
of the model are shown in Figure 13-37.
Figure 13-37  Details of plastic beam model
The history plot of plastic strain values at node 10714 are compared for SOL 129 and SOL 400 models in Figure 13-38 and
the results of SOL 129 are found to be closer to the results from SOL 400.
Figure 13-38  Comparison of plastic strain in SOL 129 and SOL 400&lt;/p&gt;
&lt;p&gt;761 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Model File Name and Location :
6. Engine transient response
The transient response of a simple model of commercial engine at 100% power is analysed for SOL 129 and SOL 400
solutions. The model consists of 4000 RPM low rotor and 11000 RPM high rotors. The details of the model are shown in
Figure 13-39.
Figure 13-39  Details of simple engine model
For the effect of NDAMP , the model is analyzed for both default value of NDAMP in addition to the cases with
NDAMP=0.0 for SOL 129 and NDAMP=NDAMPM=0 in SOL 400. The value of Y displacement at node 63221 for both
these cases are compared in Figure 13-40 and Figure 13-43 for SOL129 and SOL400. It is observed that, SOL 129 is showing
slight reduction in displacement results with some phase difference compared to SOL 400 for the case of default value of
NDAMP . This difference disappears for the cases with NDAMP=0.0 for SOL 129 and NDAMP=NDAMPM=0 in
SOL 400.Model File Name Description Location
s129_mig_05_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_05_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration762
Main Index
Figure 13-40  Y-displacement at node 63221 for the cases with default NDAMP
Figure 13-41  Y-displacement at node 63221 for the cases without NDAMP
Model File Name and Location :
Model File Name Description Location
s129_mig_06_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_06_400.dat SOL 400 model&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P4</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_004/</guid>
      <description>
        
        
        &lt;p&gt;43 Chapter 2: MSC Nastran Files
SOL 400 Output
Main Index
After the input file echo, the “ OLOAD RESULTANT ” is printed which shows the resultant of the loads about the origin of
the basic coordinate system in this case. Next is the USER INFORMATION MESSAGE (UIM) 5293  which shows the
epsilon and external work for the run. The epsilon is a measure of the numeric conditioning of the model, while the external
work is the work due to the applied loads. Both of these values are useful for model checkout and are discussed in more
detail in Model Verification  (Ch. 10) in the MSC Nastran Linear Statics Analysis User’s Guide.
In the truss example, output is requested for displacements, element forces, and element stresses. The displacement request
is the only grid point output. Element forces and stresses are element output. The last summary is the maximum of the
applied loads. After the summaries, the displacement for all of the grid points, the element forces, and the element stresses
is printed as requested in the Case Control Section.
For static analysis of the truss model, just one applied load is used. You can, however, specify multiple loading conditions
to be analyzed in a single input file if desired. If you do specify multiple loading conditions, the OLOAD RESULTANT  and
EXTERNAL WORK  are shown for each selected loading conditions. The external work is calculated as . In the case of enforced
displacement, the equivalent load is calculated as the constraint force required to impose the enforced displacement. The
external work print-out in this case is meaningless.
The information in the output file is extremely important for model checkout and debugging. Make a habit of reviewing
these diagnostics for all of your runs. Experiment with the truss1.dat  file; run the input file and view truss1.f06  in
your text editor.
After this overview of the MSC Nastran input and output files, the next three sections contain the Executive Control
Section, Case Control Section, and Bulk Data Section. The File Management Section is discussed in Database Management&lt;br&gt;
(Ch. 15) in the MSC Nastran Linear Statics Analysis User’s Guide.
SOL 400 Output
As a part of the input, you can request which results quantities you want to be written to the output from MSC Nastran,
and also which of the various formats ( MASTER /DBALL , OP2, HDF5 ) of the results files to use. These output requests are
placed in the case control section of the input (see example in boxed lines below). Note that while the DISPLACEMENT ,
SPCFORCES , and STRESS  requests are common with most MSC Nastran solution sequences, the NLSTRESS  and
BOUTPUT  requests are unique to SOL 400 and are required to get the output unique to nonlinear analyses such as failure
indices and contact interaction status, forces and stresses. Control of these options is available through the  Analysis  menu
job setup interface in Patran (see Chapter 8 or the Patran MSC Nastran Preference Guide  for more information on this topic).
SUBCASE 1
STEP 1
TITLE=This is a default subcase.
ANALYSIS = NLSTATIC
NLSTEP = 1
BCONTACT = ALLBODY
SPC = 2
LOAD = 1Note:   The file is 132 columns wide&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
SOL 400 Output44
Main Index
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
NLSTRESS(SORT1)=ALL
BOUTPUT(SORT1,REAL)=ALL
MSC recommends using either the MASTER /DBALL  or “new” OP2 (PARAM,POST,1 ) output file formats for SOL 400
analyses. The advantage of using the MASTER /DBALL  format is that it contains all of the database information from the
MSC Nastran run and so can be used to retrieve the attributes of the model at a later time. The disadvantages to this format
is that it is platform specific (e.g. not portable across platforms) and takes up more disk space. The advantages of the new
OP2 format is that it takes less disk space than the MASTER /DBALL  and has limited cross-platform portability (see Chapter
2: File Management Statements, The File Management Section (FMS)  of the QRG for more details on portability).
Postprocessing with Patran
The Results application in Patran provides the capabilities for creating, modifying, deleting, posting, unposting and
manipulating results visualization plots as well as viewing the finite element model. In addition, results can be derived,
interpolated, extrapolated, transformed, and averaged in a variety of ways, all controllable by you.
Control is provided for manipulating the color/range assignment and other attributes for plot tools, and for controlling and
creating animations of static and transient results.
Results are selected from the database and assigned to plot tools using simple forms. Results transformations are provided
to derive scalars from vectors and tensors as well as to derive vectors from tensors. This allows for a wide variety of
visualization tools to be used with all of the available results.
If the job was created within Patran such that a Patran jobname of the same name as the MSC Nastran jobname exists, you
only need to use the Results tools and Patran will import or attach the jobname.xxx  file without you having to select it.
If you did not create the job in Patran, you can still import the model and results and postprocess.
Results
Like the enormous amount of data needed to define the simulation model to an analysis code, there is a large volume of
data returned from the simulation analysis. And just as it is virtually impossible to construct a model with a text editor alone,
it is equally as difficult to read and interpret the results by hand. Using a postprocessor with a graphical user interface such
as Patran or SimXpert is highly recommended.
The Patran Results  application gives you control of powerful graphical capabilities to display results quantities in a variety
of ways:
Deformed structural plots
Color banded fringe plots
Marker plots (vectors, tensors)
Freebody diagrams
Graph (XY) plots
Animations of most of these plot types.&lt;/p&gt;
&lt;p&gt;45 Chapter 2: MSC Nastran Files
Parameter Discussion
Main Index
The Results  application treats all results quantities in a very flexible and general manner. In addition, for maximum
flexibility results can be:
Sorted
Reported
Filtered
Derived
Deleted
All of these features help give meaningful insight into results interpretation of engineering problems that would otherwise
be difficult at best.
The Results  application is object oriented, providing postprocessing plots which are created, displayed, and manipulated
to obtain rapid insight into the nature of results data. The imaging is intended to provide graphics performance sufficient
for real time manipulation. Performance will vary depending on hardware, but consistency of functionality is maintained
as much as possible across all supported display devices.
Capabilities for interactive results postprocessing also exist. Advanced visualization capabilities allow creation of many plot
types which can be saved, simultaneously plotted, and interactively manipulated with results quantities reported at the click
of the mouse button to better understand mechanical behavior. Once defined, the visualization plots remain in the database
for immediate access and provide the means for results manipulation and review in a consistent and easy to use manner.
For more information, see Chapter 1: Introduction to Results Postprocessing  in the Patran Reference Manual.
Parameter Discussion
Parameters are used throughout MSC Nastran to provide you with controls over many aspects of the solution. They are
powerful tools for setting corporate, section, or user defaults. Each solution sequence is designed with a specific set of default
values and solution paths. In the majority of the cases, the default values have been found well suited for most models. There
are occasions, however, when you may want to deviate from the default values.
There are multiple ways of setting parameters for MSC Nastran. For the NASTRAN Statement they are set by the rc file
and the execution statement. (See Configuring the Runtime Environment  (Ch. A) in the MSC Nastran Installation and Operations
Guide  and Chapter 1: nastran Command and NASTRAN Statement,  in the QRG). For the Case Control and Bulk Data
Section the selection is extensive and controls for a parameter can come from each section. (See Chapter 5: Parameters&lt;br&gt;
(Ch. 6) in the QRG). For the advanced users, there is also the DMAP (Direct Matrix Abstraction Program) module
language. (See the MSC Nastran DMAP Programmer’s Guide )
The majority of the parameters referenced in this guide are case control or bulk data parameters. These will be the ones
controlling default tolerances or controls for the type and amount of output. Depending on the parameter, it can be
specified either as a PARAM bulk data entry and/or a PARAM case control command. (See Chapter 5:Parameters,
Parameter Applicability Tables  in the QRG) The format of each is as follows: PARAM,xname,xvalue  where xname  and
xvalue  are the name and value of the PARAMeter, respectively, such as PARAM,WTMASS,0.00259 , for the terms of the
structural mass matrix to be multiplied by the value of this parameter when they are generated.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
The Executive Control Section Overview46
Main Index
The Executive Control Section Overview
The purpose of the Executive Control Section is to select the solution sequence for the desired analysis, specify the
maximum CPU time allowed for the job, and request various diagnostics. Also, it is the location for alters and user -written
DMAP (i.e., Direct Matrix Abstraction Program, a matrix manipulation language used to modify the normal solution
processing). Most of the commonly used statements are order independent. The statements for which the order is critical
are those used for user DMAP  and alters and the CEND  statement. User DMAP  and alters are advanced topics and are
normally not used for most analyses.
The executive control statements that are commonly used for linear static analysis are described in Table 2-2.
The format of the executive control statements is free-field format between columns 1-72. The statements may begin in
any column (except for comments). The operands — that is, the input data following the name — are separated from the
name using a comma and/or one or more blanks. If more than one operand is needed, they are also separated by a comma
and/or one or more blanks.
Comments may be placed anywhere in the input file and are denoted by placing a $ at the start of the comment. If an input
line is to be a comment only, it must start in column 1. Comments are ignored by MSC Nastran and have no affect on the
results. You should use comments generously; they greatly improve the readability of the input file.
The ID statement can be used to help identify a job; this statement is optional.
The SOL statement specifies the desired solution sequence to be used. T o invoke a particular analysis type, the SOL name
is followed by the ID number or name of the solution sequence. Linear static analysis is the Solution Sequence, SOL 101
or SOL SESTATIC. The Solution Sequences are numbered in the range of 101 through 700. Linear static analysis can also
be selected with the SOL 400 statement and the addition of the Case Control command ANALYSIS=STATICS .
The ECHOON  and ECHOOFF  statements are used to control the printing of the Executive Control Section. Since the
Executive Control Section is generally quite small, it is recommended that it be echoed (the default choice). If the Executive
Control is not printed, readability is hindered, especially if you have to come back to the output file several months after
the original run was made. Since ECHOON  is the default, this statement is not widely used. However, one useful
application for the  ECHOOFF  statement is security. By using ECHOOFF , portions of the Executive Control Section that
you may consider proprietary (such as user-written DMAP ) may be eliminated from the output file. Multiple ECHOON&lt;br&gt;
and ECHOOFF  statements may be used.
The DIAG statement in the QRG  is used to request additional diagnostics or output and/or to modify the solution.
For more details, see Chapter 3: Executive Control Statements, Executive Control Statement Descriptions  in the QRG .Table 2-2  Commonly Used Executive Control Statements
CEND Designates the end of the Executive Control Section.
DIAG Requests diagnostic output or modifies operational parameters.
SOL Requests the solution to be performed.&lt;/p&gt;
&lt;p&gt;47 Chapter 2: MSC Nastran Files
The Case Control Section
Main Index
The Case Control Section
The Case Control Section is used to document the run, make selections from the Bulk Data Section, request output, and
define subcase structure.  Subcase structure provides the means to perform an analysis with different combinations of loads
and boundary conditions within a single run.  To denote a subcase, the SUBCASE  case command is used together with an
ID operand that identifies the subcase number.  Requests may be made above the first subcase or within any of the subcases.&lt;br&gt;
Those requests made above the first subcase are the defaults for all of the subcases.  These defaults apply to all of the subcases
unless they are specifically overridden within the subcase.  If a SUBCASE  command is not present in the Case Control
Section, as is the case for the truss example described in Overview of the MSC Nastran Output Files  in this chapter, a single
subcase with ID 1 is assumed.
Figure 2-4  Truss Example with Two Loading Conditions.
As an example, a second load case is added to the previous truss structure as shown in Figure 2-4. The two separate analyses
are performed during a single run. The first subcase consists of the 1000-pound force acting at grid point 4 in the negative
Y-direction. The second subcase consists of the 2000-pound force acting at grid point 3 in the X-direction. The
displacements are requested for all the grid points for both load cases, but only the element forces are desired for the second
load case.
The Case Control Section up to the Bulk Data Section, meeting these requirements, is shown in Listing 2-3. (See
MSC_DOC_DIR/doc/linstat/truss2.dat. )
Listing 2-3  Truss Input File with Two Loadings
$ Filename - TRUSS2.DAT
$
ID LINEAR,TRUSS2
SOL 101
TIME 2
CEND
TITLE = LINEAR STATICS USER’S GUIDE - TWO SUBCASES
SUBTITLE = TRUSS STRUCTURE4Y
X10 ft
Subcase 1
F =1000 lb 50 ft3
42
11
23
5
Elements
Grid points
Pin jointsA 4.0 in2=
E 30.0106 lbin2 =
J 1.27 in4=
 0.3=Subcase 2
F =2000 lb&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
The Case Control Section48
Main Index
SPC = 11
DISPLACEMENT = ALL
$
SUBCASE 1
LABEL = POINT LOAD AT GRID POINT 4
LOAD = 10
$
SUBCASE 2
LABEL = POINT LOAD AT GRID POINT 3
LOAD = 11
ELFORCE = ALL
$
BEGIN BULK
$ Same as truss1.dat shown earlier
$
The Case Control Section consists of two subcases identified with ID numbers 1 and 2. The choice of the ID numbers is
arbitrary, but they must be strictly in ascending order. For example, if the first subcase is 10, the ID number of the second
subcase can be any integer number greater than 10.
Any title information, output requests, or bulk data selections made prior to the first subcase are the defaults for all the
subcases unless they are overridden by a request within a specific subcase. For the Case Control Section shown in Listing 2-3,
a displacement request is placed above the first subcase but not within either of the two subcases. Therefore, the
displacements are output for all of the grid points for both subcases. Since an element force request appears only in Subcase
2, no element force output is generated for Subcase 1. The element forces are output for all elements for the loading
condition defined in Subcase 2.
It is often desirable to limit the output to a select number of grid points or elements; this is accomplished with the use of
the SET command. The SET case command identifies a group of grid points and/or elements as a specific set ID. For
example, suppose you want to output all of the grid point displacements for Subcase 1 and the grid point displacements for
grid points 3 and 4 for Subcase 2. In addition, you want the element force output for element 3 for Subcase 1 and elements
3 and 4 for Subcase 2. A Case Control Section that meets these requirements is shown in Listing 2-4. (See
MSC_DOC_DIR/doc/linstat/truss3.dat .)
Listing 2-4  Controlling Output with Set Commands.
$
$ FILENAME - TRUSS3.DAT
$
ID LINEAR,TRUSS3
SOL 101
TIME 2
CEND
TITLE = LINEAR STATICS USER’S GUIDE - SET EXAMPLE
SUBTITLE = TRUSS STRUCTURE
LOAD = 10
SPC = 11
DISPLACEMENT = ALL
SET 1  = 3,4
SET 2 = 3
$
SUBCASE 1
LABEL = POINT LOAD AT GRID POINT 4  LOAD = 10
ELFORCE = 2&lt;/p&gt;
&lt;p&gt;49 Chapter 2: MSC Nastran Files
The Case Control Section
Main Index
$
SUBCASE 2
LABEL = POINT LOAD AT GRID POINT 3
LOAD = 11
DISPLACEMENT =1
ELFORCE = 1
BEGIN BULK
The ECHO  case command in the Case Control Section is used to control the printing of the Bulk Data Section. There are
five options for this command:
For example, to echo the bulk data in the unsorted form, you use the following ECHO  command:
ECHO = UNSORT
The output requests, such as DISPLACEMENT , FORCE , STRESS , etc., are needed whenever data recovery quantities
are to be computed, even if they are not printed. Such is the case when you use a postprocessor to view the results.  Typical
output requests are as follows:
The PLOT  option suppresses the printed output, but the data recovery is still performed. This option is useful for large
models where the quantity of printed output would be excessive, but the data recovery is still required for postprocessing.
The PUNCH  option writes the results to an ASCII  file instead of the .f06  file. This option makes it convenient for
exporting the results to other programs.
POST Case Control Command
The POST  command provides some subcase-level control over the amount of output data stored on the postprocessing file.
Finite element analysis of large structural components often have many different loading scenarios in the simulation,
possibly with several thousand different load cases. During this process, recovery and postprocessing of large amounts of
response data usually occurs. Patran or SimX may be used to visualize the results of the simulation using the output files
created by MSC Nastran. These programs typically read the results data from a Fortran file generated by the OUTPUT2&lt;br&gt;
module in MSC Nastran. This file, by default, contains all of the output requested by the case control data recovery requests SORT Prints the Bulk Data Section in sorted form; free field format is converted to small field format and
is sorted alphabetically. This is the default.
UNSORT Prints the Bulk Data Section exactly as it is input.
BOTH Prints the Bulk Data Section in the sorted and unsorted format.
PUNCH Punches the bulk data to an ASCII file.
NONE Suppresses printing of the bulk data.
SET 1 = 5, 6, 7
SET 3 = 1, 5, 9
STRESS = ALL
DISP(PLOT) = 1 $ WHERE 1 IS THE ID OF A SET OF GRID POINTS
ELFORCE(PUNCH) = 3 $ WHERE 3 IS THE ID OF SET OF ELEMENTS&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
The Case Control Section50
Main Index
in each and every subcase. The POST  command can eliminate the output data for a particular subcase from the data file
that is not needed by the postprocessor.
The results output from large simulations can quickly consume enormous amounts of computer disk storage space. Not
only does MSC Nastran store the output for use by the postprocessing program, the postprocessor itself can use large
quantities of disk space when it creates different views of the data for use in a graphical display environment. If the
postprocessor program does not require results from one (or more) subcase(s), both computer time and disk space are
wasted reading and storing the unnecessary data. Use of the POST  command can be used to eliminate the unwanted results
data from the OUTPUT2  file. This can substantially reduce the file processing time and disk space used by the
postprocessor.
Another benefit of the POST command is that it allows MSC  Nastran to write data into output files by specifying their
file names instead of Fortran unit reference numbers. This capability removes the limitation imposed by the  MSC  Nastran
file management system on the number of ASSIGN  statements.you are now able to write solution data into as many output
files, as desired.
The amount of data recovered for each subcase is dependent upon the case control commands. If a request is placed above
all subcases, that request applies to all of the subcases. Data are generated and produced one time for all subcases by
examining the case control requests in each subcase. Each separate type of response is stored in its own data block. For
example, displacement results are computed and stored separately from element stress results. These data blocks include
results for any subcase that contains a data recovery request with a print, plot, or punch destination.
The POST  command provides control over the contents of the output file produced by the MSC Nastran program when
a PARAM,POST  bulk data entry is present in the input. It does not affect the contents of the results data blocks, only the
amount of data that is transferred from those data blocks to the output file. The POST  command is examined for the
output requested in each subcase. Only that output requested by the POST  command is placed on the output file for the
subcase. Note that the data must be made available by the presence of a data recovery command in the subcase. For example,
the POST  command cannot output stress data if no stress data have been requested.
The general format of the POST  command is:
Example
This sample shows the usage of the POST  command to eliminate unwanted output from being placed on the postprocessor
data file generated by MSC  Nastran. The model data is not important for this example. For example, consider the case of
a static simulation performed on a model requiring three load cases. The required output is displacements at three grid
points in the model.  Furthermore, the output for the second load case must also include punched displacement data for
all grid points. Displacement results for subcases 100 and 300 are to be placed on the default OUTPUT2  file for use by
the Patran postprocessor. No output for subcase 200 is required for postprocessing by Patran. The subcase structure might
look something like:
SET 1000  =  10, 11, 12
DISP = 1000
$
POSTTOFILE 12 $ use defaults: PatranPOST TOFILE
TOCASE   furn
filename   ppnameoplist&lt;/p&gt;
&lt;p&gt;51 Chapter 2: MSC Nastran Files
The Bulk Data Section
Main Index
$
SUBCASE 100
LOAD = 100
$
SUBCASE 200
LOAD = 200
DISP(PUNCH) = ALL
POST  NODISP  $  stop any displacement output from going to POST file
$
SUBCASE 300
LOAD = 300
In this example, the presence of the POST  command above all of the subcases indicates that all output requested ( DISP&lt;br&gt;
for SET 1000 is the only output requested and generated) is to be stored on the default OUTPUT2 FORTRAN  unit for
use by Patran. The POST  command in SUBCASE  200 with the NODISP  option prevents the large output produced by
the DISP(PUNCH)=ALL  request in SUBCASE 200 from being placed on the OUTPUT2  file.
A complete description of all of the case control commands is available in the QRG .
The Bulk Data Section
The primary input media is the bulk data, where all details of the input data are specified. Some of the bulk data may not
be used during a program execution if they are not selected in the case control data.
The Bulk Data Section is the primary method of describing the structural model and is usually the majority of the input
file. The order of bulk data entries is not critical. All of the bulk data entries are sorted alphabetically prior to the start of
execution and are printed in the sorted order by default. For very large problems, this sorting process can be CPU intensive.
If you anticipate that the same input file will be submitted several times, it is advantageous to sort the bulk data once and
use the sorted input file. A sorted bulk data file can be generated using the ECHO = PUNCH  command in the Case Control
Section (note: comments in the Bulk Data Section are lost).
Bulk data entries may be entered in three different formats: small field, large field, and free field. For the small field format,
it is convenient to visualize each input line consisting of 80 columns. The 80 columns are divided into 10 fields with each
field being 8 columns wide as shown in Figure 2-5.
Figure 2-5  Small-Field Format
The name of the bulk data entry is entered in field 1 beginning in column 1. Fields 2 through 9 are used for data input.
The only limitation is that the data within these fields must lie completely within the field, have no embedded blanks, and
must be of the proper type. There are three distinct types of input used for bulk data entries: real, integer, and character; in
general, they are not interchangeable. If a particular field requires an integer, such as an ID number on the GRID entry,
entering a real number causes a fatal error.  1 2 3 4 5 6 7 8 9 10
8 8 8 8 8 8 8 8 8 8&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
The Bulk Data Section52
Main Index
Field 10 of the bulk data entry is used for two purposes. If the bulk data entry does not have a continuation line, Field 10
may be used as an optional comment field. If the bulk data entry has a continuation line, field 10 is used for the
continuation identifier. The continuation identifier must be unique with respect to all the other identifiers in your Bulk
Data Section.
Real numbers may be entered in various ways; however, the number must contain a decimal point. For example, the real
number 7.0 may be entered as 7., 7.0, 7.E0, .7E+1, 700.E-2, etc. Integer numbers do not have decimal points. Character
input consists of one to eight alphanumeric characters, the first of which must be alphabetic.
A blank may be used in many of the data fields, in which case the appropriate default is used. The defaults for data fields,
if they are applicable to a particular field, are described in the QRG . There are certain situations that allow either an integer
or a real number in a data field. In these situations, the choice of an integer or a real number in these data fields affects the
problem solution. Fortunately, there are only a few such situations, and they are discussed in the appropriate sections of this
user’s guide.
Consider the definition for grid point 2 of the truss model shown in Figure 2-6. The name of the entry is GRID, which
begins in column 1 of field 1. The grid point ID (2 in this case) must be an integer (no decimal point) greater than 0. Fields
3 and 7 represent coordinate system IDs and also must be integers. Since these fields are blank, the default of 0 is used.
Fields 4, 5, and 6 represent the physical location of the grid point, and they must be entered as real numbers. Optional fields
are field 8, which is used to define permanently constrained degrees of freedom, and field 9, the superelement ID field. If
they are used, only integers are acceptable. Since the GRID entry does not have a continuation line, field 10 may be used
as a comment, if desired.
Figure 2-6  A Bulk Data Example:  the GRID Entry
If a bulk data entry requires more than eight data fields, continuation lines must be used. When a continuation line is used,
field 10 contains the continuation identifier that must be unique with respect to all other continuation identifiers. Column
1 of field 10 is always ignored and is not considered part of the identifier. The small field continuation line is denoted by a
+symbol in column 1 of field 1. The continuation line is matched to its parent entry by the identifier in columns 2 through
8 of Field 1. An example is shown in Figure 2-7.
Figure 2-7  Small-Field Entry with Continuation Lines
The identifiers used in Figure 2-7 are arbitrary. The only restriction is that the alphanumeric character strings used as the
continuation identifiers do not contain the symbols *, =, or $. The + symbol used in column 1 of field 10 is for clarity.1 2 3 4 5 6 7 8 9 10
GRID ID CP X1 X2 X3 CD PS SEID
GRID 2 0.0 120. 0. 2345
1 2 3 4 5 6 7 8 9 10
TYPE +ID1
+ID1 +ID2
+ID2&lt;/p&gt;
&lt;p&gt;53 Chapter 2: MSC Nastran Files
The Bulk Data Section
Main Index
It is often more convenient to let MSC Nastran generate the continuation identifiers automatically. To do this, leave both
field 10 of the parent entry and field 1 of the continuation line blank, and place the continuation line directly following
the parent entry. The blank field indicates that it is a small field continuation of the previous line. The advantage of using
continuation identifiers is that the input file may be unsorted, that is, the continuation lines do not have to follow the parent
line. However, this benefit is generally not worth the inconvenience of using the continuation identifiers.
The most common form of input when generating the bulk data entries manually is the free field format. In the free field
format, commas are used to separate the fields (blank spaces are also acceptable, but not recommended). An entry using the
free-field format is identified by a comma or an equal sign in any of the first eight columns of the entry.  Internally, the free
field format is converted to small field format, so the same rules apply to free field format entries as for the small field format
entries. Integers and character entries must be eight characters or less, and real numbers longer than eight characters are
rounded to eight characters. Free field format entries must start in column 1. If automatic continuation is to be used, the
continuation line starts with a comma in field 1, indicating that the first field is blank. As long as less than 80 columns are
used, the free field format can have more than 8 data fields and connections will be automatic.
You may find it necessary to input integers larger than eight characters or real numbers with more significant digits than
can be placed in an eight-character field. In such cases, a large field format option is available. With large field format, as
shown in Figure 2-8, Fields 2 through 9 are 16 characters in length and generally require two lines instead of one.
Figure 2-8  Large-Field Input Format
The large field format entry is identified by the * symbol after the entry name. The large field format continuation is
denoted by the * symbol in column 1.
It is possible to mix small field and large field format continuations; however, it is generally not recommended because it
becomes difficult to discern the locations of the fields. There is no automatic continuation feature for the large field format.
If the large field format is used, the continuation identifiers must be used.
Figure 2-9 shows a CORD2R  entry using the three different formats. Knowledge of the CORD2R  entry is not necessary for
this example except to note that this entry requires a continuation line. Coordinate systems are discussed in Grid Points, Scalar
Points, and Coordinate Systems, 61 .1a 2 3 4 5 10a
TYPE* *ID1
b 6 7 8 9 10a
*ID1&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
The Bulk Data Section54
Main Index
Figure 2-9  Input Format Example
In the examples shown in Figure 2-9, column 1 of field 10 contains a + symbol for the small-field format and a * symbol for
the large-field format. Since this column is ignored, the choice of the + and the * is arbitrary; however, these choices do
improve readability because they serve as a reminder for the format of the continuation line. This convention is commonly
used in the MSC  Nastran user community.
The majority of bulk data entries are shown in small-field or large-field format throughout this user’s guide whenever
possible. This does not mean that free-field format should not be used; it is just less readable for this guide.Small-Field Format with Continuation Identifier
Small-Field Format without Continuation Identifier
CORD2R,1,0,0.0,0.0,0.0,1.0,0.0,0.0
,1.0,1.0,0.0
Free-Field Format without Continuation Identifier1 2 3 4 5 6 7 8 9 10
CORD2R 1 0 0.0 0.0 0.0 1.0 0.0 0.0 +COR1
+COR1 1.0 1.0 0.0
CORD2R 1 0 0.0 0.0 0.0 1.0 0.0 0.0
1.0 1.0 0.0
CORD2R* 1 0 0.0 0.0 *COR1
*COR1 0.0 1.0 0.0 0.0 *COR2
*COR2 1.0 1.0 0.0 *COR3
*COR3&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 3: Nonlinearity and Analysis Types
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
3Nonlinearity and Analysis
Types
Introduction
Linear Analysis
Nonlinear Analysis
Nonlinear Effects and Formulations
Overview of Analysis Types
Static Analysis
Normal Modes – ANALYSIS = MODES
Eigenvalue Extraction Method
Panel Buckling
Dynamic Analysis of Linear Systems By Modal Methods
Transient Dynamic Analysis
Nonlinear Transient Response Analysis
Creep in SOL 400
Heat Transfer
References&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction56
Main Index
Introduction
The FEM uses different numerical techniques to solve the equations depending on whether the system of equations
describes a linear or nonlinear system. In this chapter, we look at the different types of analysis problems that may be solved,
categorized according to the numerical procedure used to solve the problem. From an engineering point of view, the
numerical method used determines the limits on the behavior of the physical problem under consideration. For example,
a linear static analysis is based on the assumption of a linear force-deformation and stress-strain response of the structure
and material. This restriction is imposed by the solution method chosen. If we find that any of these assumptions are no
longer valid once the load exceeds a certain level, a linear static solution is no longer valid and we must consider nonlinear
numerical methods to obtain a solution that incorporates all of the physics of the problem. While SOL 400 is valid for use
on linear problems, it has been designed to solve nonlinear problems that include large deformation, material, and
contact/boundary nonlinearities. There are many cases where the solution types may be mixed. For example, to get an
accurate representation of mode shapes and natural frequencies of a structure under load, you must first do a nonlinear
static analysis to get the correct stiffness matrix to do the eigenvalue extraction on to provide the natural frequencies and
mode shapes. A similar situation occurs with buckling where the nonlinear effects reduce the actual critical buckling load.
These types of solutions are called perturbation analyses and are covered in the sections titled “Linear Perturbation Analysis”
and “Multi Stepping in SOL 400”. Another important use of multi-step analyses is to control load history. Loads and
constraints are grouped into load cases that are then assigned in sequence to SOL 400 nonlinear steps and subcases. In this
way, the user has control over the loading sequence applied in the analysis. Complex loading histories that simulate
processes such as extrusions and other manufacturing processes can then be simulated.
The goal of this chapter is to inform the user of the various analysis types available using MSC Nastran SOL 400 and
provide the information they would need to formulate the solution to the engineering structural or thermal problems they
need to solve, including the types of analysis controls that might be required. The analysis overview of those procedures is
covered in this chapter and the Patran user interface that would be the recommended way to create the model and set up
the solution procedure is covered in Chapter 6: Setting Up, Monitoring, and Debugging the Analysis .
Linear Analysis
In a linear analysis, we implicitly assume that the deflections and strains are very small and the stresses are smaller than the
material yield stresses. Consequently, there is assumed to be a linear relationship between the applied loads and the response
of the structure. The stiffness can be considered to remain constant (i.e., independent of the displacements and forces) and
the finite element equilibrium equations
P = Ku
are linear where the stiffness matrix K is independent of both u, the generalized displacement vector, and P, the generalized
force vector. This linearity implies that any increase or decrease in the load will produce proportional increase or decrease
in displacements, strains, and stresses. Because of the linear relationship, you only need to calculate the stiffness of the
structure once. From this stiffness representation, you can find the structure’s response to other applied loads by multiplying
the load vectors by the decomposed stiffness matrix. Linear static problems are solved in a single step. In addition, solutions
can be combined using the principle of superposition.
A linear analysis is the simplest and most cost effective type of analysis to perform. Because linear analysis is simple and
inexpensive to perform and often gives satisfactory results, it is the most commonly used structural analysis. Nonlinearities&lt;/p&gt;
&lt;p&gt;57 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Analysis
Main Index
due to material, geometry, or boundary conditions are not included in this type of analysis. The behavior of an isotropic,
linear, elastic material can be defined by two material constants: Young’s modulus, and Poisson’s ratio.
In actuality, linear analysis is merely an approximation to the true behavior of a structure. In some cases the approximation
is very close to the true behavior, in other cases linear analysis may provide highly inaccurate results.
The following is a summary of the main steps in a linear static analysis:
1.Input:  The problem geometry (nodes and elements), physical and material properties, and loads and boundary
conditions are taken from the SOL 400 input file and put into the MSC Nastran database.
2.Element stiffness matrix and force vector calculation: The element stiffness matrices and equivalent nodal forces for
distributed forces are computed. The detailed descriptions in the Chapter 11: Element Library  provide the kinds of
forces that each element can support.
3.Global stiffness matrix and load vector assembly: The global stiffness matrix and the combined nodal force vectors
are assembled. Boundary and constraint conditions are incorporated by modifying the element stiffness matrices
and force vectors.
4.Solution of equations: The nodal displacement vector is computed by solving the system of simultaneous.
5.Strain energy and reaction force calculation: The strain energy and reaction forces (unbalanced grid point forces)
are computed using the displacement vector, the element stiffness matrices and the force vectors.
6.Stresses and strains calculation: The strains and stresses are computed at selected points for each element. See the
Chapter 11: Element Library  for a detailed descriptions of the stress recovery points for the SOL 400 elements.
SOL 400 allows you to perform linear elastic analysis using any element type in the program. Various kinematic constraints
and loadings can be prescribed to the structure being analyzed; the problem can include both isotropic, orthotropic, and
anisotropic elastic materials.
The principle of superposition holds under conditions of linearity.
Linear analysis does not require storing as many quantities as does nonlinear analysis; therefore, it uses the memory more
sparingly.
Nonlinear Analysis
However, we know that in many structures the deflections and the stresses do not change proportionately with the loads.
In these problems the structure’s response depends upon its current state and the equilibrium equations reflect the fact that
the stiffness of the structure is dependent on both u and P.
P = K (P,u)u
As the structure displaces due to loading, the stiffness changes, and as the stiffness changes the structure’s response changes.
As a result, nonlinear problems require incremental solution schemes that divide the problem up into steps calculating the
displacement, then updating the stiffness. Each step uses the results from the previous step as a starting point. As a result
the stiffness matrix must be generated and inverted many times during the analysis adding time and costs to the analysis.
In addition, because the response is not proportional to the loads, each load case must be solved separately and the principle
of superposition is not applicable.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations58
Main Index
Nonlinear Effects and Formulations
There are three sources of nonlinearity in structural analysis: material, geometric, and nonlinear boundary conditions.
Material Nonlinearity
Recall that linear analysis assumes a linear relationship between stress and strain. Material nonlinearity results from the
nonlinear relationship between stresses and strains. In addition, large strain can influence the material behavior.
Considerable progress has been made in attempts to derive the continuum or macroscopic behavior of materials from
microscopic backgrounds, but, up to now, commonly accepted constitutive laws are phenomenological. Difficulty in
obtaining experimental data is usually a stumbling block in accurately simulating material behavior. A plethora of models
exist for more commonly available materials like elastomers and metals. Material models of considerable practical
importance are: composites, viscoplastics, creep, soils, concrete, powder, and foams. Figure 3-1 shows representation of the
elastoplastic, elasto -viscoplasticity, and creep.
Examples of material nonlinearities include metal plasticity, materials such as soils and concrete, or rubbery materials (where
the stress-strain relationship is nonlinear elastic). Various plasticity theories such as von Mises or T resca (for metals), and
Mohr-Coulomb or Drucker-Prager (for frictional materials such as soils or concrete) can be selected by you. Three choices
for the definition of subsequent yield surfaces are available in SOL 400. They are isotropic hardening, kinematic hardening,
or combined isotropic and kinematic hardening. With such generality, most plastic material behavior, with or without the
Bauschinger effect, can be modeled.
Figure 3-1  Material Nonlinearity
Elasto-Plastic Behavior
Elasto-Viscoplastic Behavior
tCreep Behaviorc&lt;/p&gt;
&lt;p&gt;59 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
Geometric Nonlinearity
Geometrically nonlinear problems involve large displacements; “large” means that the displacements invalidate the small
displacement assumptions inherent in the equations of linear analysis. For example, consider a classical thin plate subject
to a lateral load; if the deflection of the plate’s midplane is anything close to the thickness of the plate, then the displacement
is considered large and a linear analysis is not applicable.
Geometric nonlinearity results from the nonlinear relationship between strains and displacements on the one hand and the
nonlinear relation between stresses and forces on the other hand. If the stress measure is conjugate to the strain measure,
both sources of nonlinearity have the same form. This type of nonlinearity is mathematically well defined, but often
difficult to treat numerically. Three important types of geometric nonlinearity occur:
1.Problems where large rotation occur.
2.The analysis of buckling and snap-through problems (see Figure 3-2 and Figure 3-3).
3.Large strain problems such as manufacturing, crash, and impact problems. In such problems, due to large strain
kinematics, the mathematical separation into geometric and material nonlinearity is not unique.
Figure 3-2  Buckling
Figure 3-3  Snap-Through
Nonlinear Boundary Conditions
Boundary conditions and/or loads can also cause nonlinearity. These loads can be conservative, as in the case of a centrifugal
force field (see Figure 3-4); they can also be non conservative, as in the case of a follower force on a cantilever beam (see P
uLinear
Stable
Neutral
UnstableP
Pc
u
P
uP
u&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations60
Main Index
Figure 3-5). Also, such a follower force can be locally non conservative, but represent a conservative loading system when
integrated over the structure. A pressurized cylinder (see Figure 3-6) is an example of this.
Figure 3-4  Centrifugal Load Problem (Conservative)
Figure 3-5  Follower Force Problem (Non conservative)PP&lt;/p&gt;
&lt;p&gt;61 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
Figure 3-6  Pressurized Cylinder (Globally Conservative)
Contact and friction problems lead to nonlinear boundary conditions. This type of nonlinearity manifests itself including
assembly modeling, metal forming, gears, interference of mechanical components, pneumatic tire contact, and crash (see
Figure 3-7). Loads on a structure cause nonlinearity if they vary with the displacements of the structure. If there is a change
in constraints due to contact during loading, the problem may be classified as a boundary nonlinear problem and would
require the use of BCTABLE/ BCTABLE1, BCONECT, BCONPRG, BCONPRP, BCBODY, or BSURF  bulk data
entry options. CGAP  elements would have been used in the traditional nonlinear sequences of SOL 106 or 129; however,
the use of GAP elements is strongly discouraged in SOL 400.
Figure 3-7  Contact and Friction Problem
Geometric Nonlinearities
Geometric nonlinearity leads to two types of phenomena: change in structural behavior and loss of structural stability.
There are two natural classes of large deformation problems: the large displacement, small strain problem and the large
displacement, large strain problem. For the large displacement, small strain problem, changes in the stress-strain law can be
neglected, but the contributions from the nonlinear terms in the strain displacement relations cannot be neglected. For the&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations62
Main Index
large displacement, large strain problem, the constitutive relation must be defined in the correct frame of reference and is
transformed from this frame of reference to the one in which the equilibrium equations are written.
The kinematics of deformation can be described by the following approaches:
Lagrangian Formulation
In the Lagrangian method, the finite element mesh is attached to the material and moves through space along with the
material. In this case, there is no difficulty in establishing stress or strain histories at a particular material point and the
treatment of free surfaces is natural and straightforward.
The Lagrangian approach also naturally describes the deformation of structural elements; that is, shells and beams.
Shortcomings of the Lagrangian method are that flow problems are difficult to model and that the mesh distortion is as
severe as the deformation of the object.
The Lagrangian approach can be classified in two categories: the total Lagrangian method and the updated Lagrangian
method. In the total Lagrangian approach, the equilibrium is expressed with the original undeformed state as the reference;
in the updated Lagrangian approach, the current configuration acts as the reference state. The kinematics of deformation
and the description of motion is given in Table 3-1 and Figure 3-8.
Table 3-1  Kinematics and Stress-Strain Measures in Large Deformation
Configuration Measures Reference (t = 0 or n) Current (t = n + 1)
Coordinates X x
Deformation Tensor C (Right Cauchy-Green) b (Left Cauchy-Green)
Strain Measure E (Green-Lagrange)
F (Deformation Gradient)e (Logarithmic)
Stress Measure S (second Piola-Kirchhoff)
P (first Piola-Kirchhoff) (Cauchy)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P40</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_040/</guid>
      <description>
        
        
        &lt;p&gt;763 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
7. Cantilevered beam under sudden impact
The cantilevered beam subjected to a sudden step loading is solved in both SOL 129 and equivalent SOL 400 models. The
beam is modeled with 80 CHEXA8 shell elements and MATHP card is used to hyper elastic material properties. The details
of the model are shown in Figure 13-42.
Figure 13-42  Cantilever beam under impact load
The displacement response in Y-direction at node 1106 are compared for SOL 129 and SOL 400 models in Figure 13-43
and the results of SOL 129 are found to be closer to the results from SOL 400.
Figure 13-43  Y-displacement at node 1106
Model File Name and Location :
Model File Name Description Location
s129_mig_07_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_07_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration764
Main Index
8. Impact of sphere on a flat surface
The impact of a sector of spherical shell on a flat surface is simulated with 109 CHEXA, 41 CPENTA, 10 CGAP elements
and 334 grids. The model is solved using both SOL 129 and SOL 400. The details of the model are shown in Figure 13-44.
Figure 13-44  Model details of impact of sphere on a flat surface
The Z-displacement results at node 802 from SOL 129 and SOL 400 are compared in Figure 13-45. While the negative Z-
displacement at the 1st increment in SOL 400 appears to be slightly higher compared to SOL 129, the overall trend in the
results are similar in both these solutions.
Figure 13-45  Z-displacement plot at node 802
Model File Name and Location :
Model File Name Description Location
s129_mig_08_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_08_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;765 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
9. Fuse in breakaway engine simulation
The model on fuse in breakaway engine simulation is solved using SOL 129 and equivalent SOL 400 solutions. In this
model, the aft, outward and downward forces are applied at the time of separation to simulate the loss of steady state and
to impose a relative motion between aircraft and engine. PBUSHT card is used for CBUSH elements to define nonlinear
force deflection relation along with a FUSE option. The model consists of 4262 CQUAD4, 326 CTRIA3, 474 CBAR, 734
CROD, 10 CBUSH elements and 3949 grids. The details of the model are shown in Figure 13-46.
Figure 13-46  Model details of breakaway engine simulation
For the effect of NDAMP , the model is analysed for the case of default value of NDAMP in addition to the cases with
NDAMP=0.0 for SOL 129 and SOL 400. The value of Z displacement at node 101149 for both these cases are compared
in Figure 13-47 and Figure 13-48 for SOL 129 and SOL 400. It is observed that, SOL 129 is showing slight reduction in
displacement results with some phase difference compared to SOL 400 for the case of default value of NDAMP . This
difference reduces significantly for the cases with NDAMP=0.0 in SOL 129 and SOL 400.
Figure 13-47  Z-displacement plot for models with default NDAMP&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration766
Main Index
Figure 13-48  Z-displacement plot for models without NDAMP
Model File Name and Location :
10. Rotor dynamic analysis of universal engine model
The rotor dynamic model of single universal engine is analyzed for both SOL 129 and equivalent SOL 400 solutions. The
model consists of 3195 CQUAD4, 106 CTRIA3, 850 CBAR, 5 CROD elements and 3692 grids. The details of the model
are shown in Figure 13-49.
Figure 13-49  Details of universal engine modelModel File Name Description Location
s129_mig_09_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_09_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;767 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
The plots of spring forces for spring element 110031 from SOL 129 and SOL 400 are compared in Figure 13-50. While the
overall trend in both solutions are same, SOL 129 is found to show lot of noise in its response around the time of 1.06 and
in between the time period of 1.32 to 1.4. This local noise in response is not observed in the results of SOL 400. The
element force plot for the element 190103 are compared for SOL 129 and SOL 400 in Figure 13-51. The results from both
solutions are almost similar with a small phase difference.
Figure 13-50  Sprint force plot of universal engine model
Figure 13-51  Element force plot for element 190103
Model File Name and Location :
Model File Name Description Location
s129_mig_10_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_10_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration768
Main Index
11. Transient analysis of model with FUSE option in PBUSHT
The effect of FUSE option in PBUSHT in the transient response of a simple model with CBEAM and PBUSHT elements
is studied with SOL 129 and SOL 400 solutions. The nominal structural damping coefficient GE = 0.02 is used for
CBUSH element in addition to the parameter w4=10.0. The details of the model are shown in Figure 13-52.
Figure 13-52  Details of simple model with CBUSH and FUSE in PBUSHT
T o understand the effect of FUSE options, both SOL 129 and SOL 400 models are analysed with the following two options
1.Model with GE in PBUSH and without FUSE in PBUSHT
2.Model with GE in PBUSH and with FUSE in PBUSHT
3.Model without GE in PBUSH and with FUSE in PBUSHT
The displacement results from SOL 129 and SOL 400 for these options are compared in Figure 13-53 to Figure 13-55. In
absence of GE, SOL 129 and SOL 400 are giving similar results with FUSE option as seen in Figure 13-55. However, in the
presence of GE, the FUSE option is working correctly only in the case of SOL 400 and its effects is not seen in the case of
SOL 129, as seen in Figure 13-54.&lt;/p&gt;
&lt;p&gt;769 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Figure 13-53  Comparison of SOL 129 and SOL 400 results for the case with GE and without FUSE option
Figure 13-54  Comparison of SOL 129 and SOL 400 results for the case with GE and FUSE option&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration770
Main Index
Figure 13-55  Comparison of SOL 129 and SOL 400 results for the case without GE and with FUSE option
Model File Name and Location :
12. Engine Fan Blade Out Simulation
The blade out simulation of aircraft engine model is analyzed using SOL 129 and its equivalent SOL 400 model. The
displacement results from this confidential model are compared in Figure 13-56. The displacement results from SOL400 is
found to be less compared SOL 129. After checking the result files of both these models, the following changes are done
for these models
•AUTOSPC effects are treated differently in SOL 129 and SOL 400. SOL 129 applies AUTOSPC before the
total tangential matrix is assembled. It is executed in the PHASE I of its DMAP solution sequence before any
nonlinear element stiffness is computed. This is not a correct process in SOL 129 since it may constrain any
singularity that will not show after the total tangential matrix is ready. SOL 400 does not support “PARAM,
AUTOSPC, YES” but prefers to use AUTOSPC (RESIDUAL) case control command that will guarantee to
apply AUTOSPC effects after the whole tangential matrix is ready. In this example, a DMAP Alter is applied
to force SOL 400 to do AUTOSPC in the PHASE 1 as in the case of SOL 129 in order to create the same results
as seen in SOL 129 but users should recognize that this is not a correct process to support AUTOSPCModel File Name Description Location
s129_mig_11_129.dat SOL 129 model demo/doc_dev_ug/s129_s400
s129_mig_11_400.dat SOL 400 model&lt;/p&gt;
&lt;p&gt;771 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
•As discussed in step #8 in the table for step by step instructions to convert SOL 129 models into SOL 400, there
is no one to one relation between NDAMP values of SOL 129 and SOL 400. The value NDAMP=0.01 in
SOL 129 model is changed to NDAMP=0.0 in SOL 129, as SOL 400 will use the value of NDAMP=0.0 for
any positive value of NDAMP entries defined in the input.
The results observed from these revised models show good matching of solutions from SOL 129 and SOL 400 as shown
in Figure 13-57.
Figure 13-56  Results for initial Fan blade out models
Figure 13-57  Results for initial and final Fan blade out models&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration772
Main Index
Additional Capabilities in SOL 400
SOL 400 has several additional capabilities compared to SOL 129. These additional capabilities are shown in the following
table:
SOL 400 SOL 129
Matrix update TSTEPNL in SOL 400 supports ADAPT, AUTO, SEMI,
FNT and PFNT.
NLSTEP in SOL 400 supports ADAPT, ITER and PFNT
Update matrix each iteration on both TSTEPNL and
NLSTEP if METHOD=FNT/PFNT;
Update N-R method in TSTEPNL if AUTO. Also support
ADAPT
NLSTEP is recommended method for SOL 400 in the
presence of any nonlinearities. SOL 129 try to avoid updating
matrix. Only supports ADAPT
method
Chain Analysis Multiphysics-chain analysis:
1.Nonlinear static - nonlinear transient (mechanic or
heat)
2.Heat-nonlinear transient
3.Pre-load Perturbation-transient; and so on.Don&amp;rsquo;t support multi-physics
analysis
SUBCASE and
STEP case control
structureAllow flexible loading and solution sequences. Different
nonlinear analysis types can now communicate with each other
in a meaningful physical sequence in a SUBCASE:
1.Subcase: independent task;
2.Step: carry-on load set Subcase in SOL 129 is same as
(2) STEP in SOL 400
NLIC Allow any previous converged nonlinear static solution as the
preload for the first nonlinear transient step.Not Available
BC Change Boundary conditions SPC and MPC can change between load
stepsCan&amp;rsquo;t change BC between
SUBCASES
Direct matrix input Such as K2PP , M2PP , B2PP , TFL,K2GG,M2GG,D2GG can
change between load stepsK2PP , M2PP , B2PP , only
General Contact Contact for deformable and rigid bodies No contact except CGAP&lt;/p&gt;
&lt;p&gt;773 Chapter 13: Advanced Topics
Guidelines for SOL 129 to SOL 400 Migration
Main Index
Nonlinear Rigid
ElementSupported
RIGID=LAGRAN (Default)
Large RotationNot supported
RIGID=LINEAR
Algorithm General alpha (also including Newmark-Beta)
More stable and accurateNewmark-beta
Nonlinear Iteration
AlgorithmsBetter time step size adjustment;
Line search;
Stiffness update;
BisectionTime step size adjustment
Bisection
Temperature Load Support the nonlinear thermal loads (time dependent
temperature) in the transient analysis. T wo new Bulk Data
entries,
TTEMP and TMPSET;
also material temperature dependency Only support static load in
dynamic type thermal load
Automatic time
step adjustmentMore and accuracy time step control methods:
1.frequency based adaptive time step adjustment with
bounds
2.frequency based adaptive time step adjustment without
bounds (RB)
3.iteration based adaptive time step adjustment1.frequency based adaptive
time step adjustment
with bounds
Element Support advanced nonlinear elements No support for NASTRAN
CBUSH element and advanced
nonlinear elements
Material Support more nonlinear material models
Converge Criteria More selection
Output A more flexible output method for the nonlinear transient
analysisSOL 400 SOL 129&lt;/p&gt;
&lt;p&gt;Nonlinear Users Guide
Guidelines for SOL 129 to SOL 400 Migration774
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Appendix A: Interpreting the Results
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
A Interpreting the Results
Results Quantities     776
Grid Point Stresses     788
Shape Function Interpolation      800
Finite Element Equilibrium      807&lt;/p&gt;
&lt;p&gt;776 Nonlinear User’s Guide
Results Quantities
Main Index
Results Quantities
Consistent Units
MSC Nastran is unit independent and any system of units may be used. It is essential, however, that all data input quantities
are specified using a consistent unit system. For example, if N, m, and kg are used, then the model dimensions must be
specified in meters, the elastic modulus in N/m2 and density as kg/m3. With respect to the output of results – if N, m, kg
have been used in the data input, the results will provide stresses in N/m2, forces and reaction in N, displacements in m etc.
Rotations are output in radians. This includes angular velocity and acceleration results.
The units of temperature being used in an analysis are dependent on what is assumed by the input material
properties and loads and constraints.
When choosing a set of units, an appropriate system should be used to avoid problems with numerical round- off.
For instance using the unit of meters to model a component that is only a fraction of a millimeter in overall size
would require that the distance between element nodes would be of the order of 1e-6. Similarly, the use of Mega-
Tonnes would be preferable when analyzing a massive civil engineering structure compared to kg.
Using a dimensionally &amp;ldquo;consistent&amp;rdquo; set of units is essential in dynamic analyses to obtain meaningful results.
For a static analysis without any body force loading (using density), the requirement for consistency is relaxed. In
general, if units are chosen for mass (m), length (l) and time (t), the measure used for force must dimensionally
correspond with F = m a = ml/t/t.
The standard SI unit system is normally recommended; i.e., Newton, Metres, Kilograms. This complies by
definition with the equation F=Ma (N = kg m/s²) and is termed a consistent set of units. If both sides are divided
by 1000, a further set of consistent units becomes apparent as (kN = Tonnes m/s²). Similarly, multiplying both
sides gives (N = T mm/s²).
Any consistent system can be used; for example:
N, Millimetres, Tonnes
KN, Metres, Tonnes
MN, Metres,
kTonnes Dyne,
Gram, Centimetre
Poundal, Pound
Feet
An example of nonstandard sets of units would be (kN, Millimetres, Tonnes), (N, Millimetres, kg).&lt;/p&gt;
&lt;p&gt;777 Appendix A: Interpreting the Results
Results Quantities
Main Index
Deformations
Consider a three dimensional body B in its undeformed and deformed configuration (see Figure 1-1). With respect to a
Cartesian coordinate system , the position vector of a material point in the undeformed configuration is
written as:
(1-1)
In the deformed configuration, the material point has a position vector , given by:
(1-2)
The displacement vector  is defined as the difference between the position vector in the deformed and the undeformed
configuration and reads:
(1-3)
Figure 1-1  Body  in Undeformed and Deformed Configuration
It is assumed that there is always a unique relation between the position vector of a point in the deformed and the position
vector of this point in the undeformed configuration. This can formally be expressed as:E1E2E3 
X X1E1X2E2X3E3+ + =
x
x x1E1x2E2x3E3+ + =
u
u x X– u1E1u2E2u3E3+ + = =
E1
E3E2X
xuBBDeformedUndeformed
dF
ndA
NdA0
d^F
B&lt;/p&gt;
&lt;p&gt;778 Nonlinear User’s Guide
Results Quantities
Main Index
(1-4)
Based on equation (1-4), a fundamental deformation measure can be given, namely the deformation gradient F, which is
defined by:
(1-5)
Substituting equation (1-5) into equation (1-3) shows that the deformation gradient can also be written as a function of the
coordinates in the undeformed configuration and the displacement components:
(1-6)
in which  is the 3x3 unit tensor:
(1-7)
Starting out from the deformation gradient, several well-known symmetric strain tensors can be defined, namely the
engineering strain tensor e, the Green-Lagrange strain tensor E and the right Cauchy-Green strain tensor C:
(1-8)
(1-9)x xX =
Fx1
X1&amp;mdash;&amp;mdash;&amp;mdash;x1
X2&amp;mdash;&amp;mdash;&amp;mdash;x1
X3&amp;mdash;&amp;mdash;&amp;mdash;
x2
X1&amp;mdash;&amp;mdash;&amp;mdash;x2
X2&amp;mdash;&amp;mdash;&amp;mdash;x2
X3&amp;mdash;&amp;mdash;&amp;mdash;
x3
X1&amp;mdash;&amp;mdash;&amp;mdash;x3
X2&amp;mdash;&amp;mdash;&amp;mdash;x3
X3&amp;mdash;&amp;mdash;&amp;mdash;=
F1u1
X1&amp;mdash;&amp;mdash;&amp;mdash; +u1
X2&amp;mdash;&amp;mdash;&amp;mdash;u1
X3&amp;mdash;&amp;mdash;&amp;mdash;
u2
X1&amp;mdash;&amp;mdash;&amp;mdash;1u2
X2&amp;mdash;&amp;mdash;&amp;mdash; +u2
X3&amp;mdash;&amp;mdash;&amp;mdash;
u3
X1&amp;mdash;&amp;mdash;&amp;mdash;u3
X2&amp;mdash;&amp;mdash;&amp;mdash;1u3
X3&amp;mdash;&amp;mdash;&amp;mdash; +Iu1
X1&amp;mdash;&amp;mdash;&amp;mdash;u1
X2&amp;mdash;&amp;mdash;&amp;mdash;u1
X3&amp;mdash;&amp;mdash;&amp;mdash;
u2
X1&amp;mdash;&amp;mdash;&amp;mdash;u2
X2&amp;mdash;&amp;mdash;&amp;mdash;u2
X3&amp;mdash;&amp;mdash;&amp;mdash;
u3
X1&amp;mdash;&amp;mdash;&amp;mdash;u3
X2&amp;mdash;&amp;mdash;&amp;mdash;u3
X3&amp;mdash;&amp;mdash;&amp;mdash;+ = =
I
I100
010
001=
e1
2&amp;mdash;FFT2I– +  =
E1
2&amp;mdash;FTFI– =&lt;/p&gt;
&lt;p&gt;779 Appendix A: Interpreting the Results
Results Quantities
Main Index
C = FTF (1-10)
where FT denotes the transpose of F.
Notice that the Green-Lagrange and the right Cauchy-Green strain tensor are related by:
(1-11)
Example
Suppose that the deformation of a body is described by:
, ,
This deformation can be obtained by first stretching a block of material in the  direction and then rotating it around
the  axis (see Figure 1-2). The deformation gradient can easily be evaluated as:
so that the engineering and the right Cauchy-Green strain tensors are given by:
, E1
2&amp;mdash;CI– =
x14X1cos1
2&amp;mdash;X2sin – = x24X1sin1
2&amp;mdash;X2cos + = x31
2&amp;mdash;X3=
E1
E3
F4cos1
2&amp;mdash;–sin 0
4sin1
2&amp;mdash;cos0
0 01
2&amp;mdash;=
e4cos 1–7
2&amp;mdash;sin 0
7
2&amp;mdash;sin1
2&amp;mdash;1– cos 0
0 01
2&amp;mdash;–= C1600
01
4&amp;mdash;0
001
4&amp;mdash;=&lt;/p&gt;
&lt;p&gt;780 Nonlinear User’s Guide
Results Quantities
Main Index
Figure 1-2  Stretching and Rotating a Body
From these expressions, it can be concluded that the engineering strain tensor only provides a useful deformation measure
if the angle  remains small, so that  and . On the other hand, the components of the right Cauchy-
Green tensor, and by virtue of equation (1-11) also the components of the Green-Lagrange strain tensor, are independent of
the value of the angle .
The deformation gradient can be rewritten as:
in which R is a rotation tensor and U is a symmetric stretch tensor , where the stretch tensor and the right Cauchy-Green strain
tensor are related by:
C = U1/2
It can be proved that in this way any deformation gradient can be uniquely decomposed into a rotation tensor and a stretch
tensor.
If there is no rotation of the material the nonzero components of the right Cauchy-Green strain tensor can be expressed in
terms of the components of the engineering strain tensor as:
, , E1E2E3
L3L2
L1
L1L1+L2L2+
L3L3+
cos 1 sin 0
Fcossin– 0
sincos0
0 0 1400
01
2&amp;mdash;0
001
2&amp;mdash;RU = =
C111e11+= C221e22+= C331e33+=&lt;/p&gt;
&lt;p&gt;781 Appendix A: Interpreting the Results
Results Quantities
Main Index
Instead of 1+e11, 1+e22, and 1+e33, one often uses the principal stretch ratios 1, 2, and 3, respectively.
A geometrical interpretation of the principal stretch ratios can be given by indicating the initial edge lengths as L1, L2, L3
and the changes in edge lengths as L1, L2, L3 (see Figure 1-2). Now the principal stretch ratios can be written as:
, ,
In the example discussed above, the right Cauchy-Green strain tensor only has nonzero terms on its main diagonal,
indicating that the deformation consists of a pure stretch. In a general state of deformation, there will also be nonzero off-
diagonal terms. Then the principal stretch ratios must be determined based on the eigenvalues of the right Cauchy-Green
strain tensor. Denoting these eigenvalues as , , and , the principal stretch ratios are generally given by:
, , (1-12)
It can be concluded that the principal stretch ratios completely define the stretch of a material, but not the rotation .
Another way to characterize the deformation of a material is based on the invariants of the right Cauchy-Green strain tensor.
These invariants are defined as:
I1 = C11 + C22 + C33 (1-13)
(1-14)
(1-15)
Because , , and  are invariants of the right Cauchy-Green strain tensor, their values can also be determined based on
the eigenvalues of the right Cauchy-Green strain tensor. Using equation (1-12), this yields:
(1-16)
(1-17)
(1-18)
It should be noted that incompressibility  of the material can be expressed as:
123 = 1 (1-19)
or:
 (1-20)1L1L1+
L1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = 2L2L2+
L2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = 3L3L3+
L3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
C&#39;11C&#39;22C&#39;33
1C&#39;11= 2C&#39;22= 3C&#39;33=
I2C11C22C22C33C33C11C122C232C312– – – + + =
I3C11C22C332C12C23C31C11C232C22C312C33C122– – – + =
I1122232+ + =
I2122222323212+ + =
I3122232=&lt;/p&gt;
&lt;p&gt;782 Nonlinear User’s Guide
Results Quantities
Main Index
The compressibility can also be expressed in terms of the determinant of the deformation gradient, det(F). Since F = RU,
this can be evaluated as:
(1-21)
so that incompressibility of the material yields:
det(F) = 1 (1-22)
Stresses
Consider the deformed configuration of body B, as indicated in Figure 1-4. On an elemental area dA with unit normal vector
, an elemental force vector  is acting. This force vector is a result of forces being transmitted from one portion of
the body to another. According to the Cauchy stress principle, the stress vector or traction vector  is defined as:
(1-23)
Similar to equation (1-21) to equation (1-23), the components of , , and  are indicated as t1, t2, t3, n1, n2, n3,
dF1, dF2 and dF3. Now the following relation between the components of the stress vector and the components of
the normal vector can be given:
(1-24)
which, by virtue of equation (1-23), can also be written as:
(1-25)
In equations (1-24) and (1-25), T11 to T33 are the components of the true or Cauchy stress tensor T. The components T11, T22
and T33 are called the normal or direct stress components, while the other components are called shear stress components.
The first index of the stress components defines the normal of the plane on which the stress vector acts. The second index
indicates the positive direction of the component (see Figure 1-3). It can be shown that the Cauchy stress tensor is symmetric, detF detRU detRdetU detU detC1
2&amp;mdash;123= = = = =
n dF
t
tdF
dA&amp;mdash;&amp;mdash;&amp;mdash; =
tn dF
dF1
t1
t2
t3T11T12T13
T21T22T23
T31T32T33n1
n2
n3=
dF1
dF2
dF3T11T12T13
T21T22T23
T31T32T33n1
n2
n3dA =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P41</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_041/</guid>
      <description>
        
        
        &lt;p&gt;783 Appendix A: Interpreting the Results
Results Quantities
Main Index
so T12= T21, T13= T31and T23= T32. The physical meaning of the Cauchy stress tensor is that it gives the current force per
unit deformed area .
Another frequently used stress tensor in a large deformation analysis is the second Piola-Kirchhoff stress tensor . In order to
define this tensor, the force vector  is transformed using the inverse of the deformation gradient F:
Figure 1-3  Interpretation of Stress Components
(1-26)
Assuming that the transformed force vector  acts on the elemental area dA0 with unit normal vector  in the
undeformed configuration (see Figure 1-4), the components S11 to S33 of the symmetric second Piola-Kirchhoff stress tensor
S are defined as:
(1-27)dF
T22T23
T21E3
E2E1
dFˆ
1
dFˆ
2
dFˆ
3F1–dF1
dF2
dF3=
d^
FN
dFˆ
1
dFˆ
2
dFˆ
3S11S12S13
S21S22S23
S31S32S33N1
N2
N3dA0=&lt;/p&gt;
&lt;p&gt;784 Nonlinear User’s Guide
Results Quantities
Main Index
The physical meaning of the second Piola-Kirchhoff stress tensor is not so clear. It can be considered to give the transformed
current force per unit undeformed area.
Using the deformation gradient, the Cauchy stress tensor and the second Piola-Kirchhoff stress tensor can be related to
another by:
(1-28)
(1-29)
Notice that for small deformations and small rotations, , so the differences between the Cauchy stress tensor and the
second Piola-Kirchhoff stress tensor vanish. In that case they reduce to the so-called engineering stress tensor , which is
known to give the force per unit undeformed area.
Example
Due to a uniaxial tensile load, the state of deformation of a body is assumed to be given by (see also Figure 1-4):
, ,
Figure 1-4  Uniaxially Loaded Body
The force is assumed to be homogeneously distributed over the cross section A in the - plane. Evaluating equation
(1-25) for the cases that , , and  yields:S detFF1–TF1–T=
T1
detF&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;FSFT=
FI
x14X1= x21
2&amp;mdash;X2–= x31
2&amp;mdash;–X3=
A0
AFFA0
A
E1E2E3
E2E3
n E1= n E2= n E3=&lt;/p&gt;
&lt;p&gt;785 Appendix A: Interpreting the Results
Results Quantities
Main Index
so that the only nonzero component of the Cauchy stress tensor is:
Because:
,
it follows from equation (1-28) that the only nonzero component of the second Piola-Kirchhoff stress tensor is:
Upon rewriting the current cross sectional area A in terms of the original cross-sectional area A0 as , the nonzero
component of the second Piola-Kirchhoff stress tensor can also be written as:F
0
0T11T12T13
T21T22T23
T31T32T331
0
0A =
0
0
0T11T12T13
T21T22T23
T31T32T330
1
0A =
0
0
0T11T12T13
T21T22T23
T31T32T330
0
1A =
T11F
A&amp;mdash;=
F400
01
2&amp;mdash;–0
001
2&amp;mdash;–= detF 1=
S111
16&amp;mdash;&amp;mdash;F
A&amp;mdash; =
A1
4&amp;mdash;A0=
S111
4&amp;mdash;F
A0&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;786 Nonlinear User’s Guide
Results Quantities
Main Index
in which F/A0 is recognized as the engineering stress 11. The differences between the various stress components can be
summarized as:
,
Grid Point Force Balance and Element Strain Energy
Theory
In nonlinear analysis, the strain energy, E, for an element is defined by integrating the specific energy rate, the inner product
of strain rate and stress, over element volume and time
(1-30)
The integration over time leads to the following recursive formula using the trapezoidal rule
(1-31)
The steps n and n + 1 are converged solution steps.
By integrating equation (1-31) over the element volume, we get
(1-32) stress tensor
strain rate
V element volume
t actual time in the load history
n + 1 current load step
n previous load step
E strain energy increment
 strain-incrementT11411= S111
4&amp;mdash;11=
E·TVdd
V
0t
=
·
En1+En=En1++ En=1
2&amp;mdash;n1+Tnn1++ Vd +
En1+En=1
2&amp;mdash;un1+Tfnfn1++  +&lt;/p&gt;
&lt;p&gt;787 Appendix A: Interpreting the Results
Results Quantities
Main Index
For computational convenience, MSC Nastran uses equation (1-32) to calculate the element strain energy. The internal
element forces are readily available in every step because they are needed for the force equilibrium. Note that temperature
effects are included in the internal element forces.
When loads from temperature differences or element deformation are present, the default definition of element strain
energy for linear elements differ from the definition for nonlinear elements. For linear elements, the element strain energy
is defined as
(1-33)
where Pet is the element load vector for temperature loads and element deformation. Equation (1-33) assumes that the
temperatures are constant within a subcase. For nonlinear elements, the definition of equation (1-30) is used. In the case of
linear material and geometry, equation (1-30) becomes
(1-34)
Equation (1-34) assumes that the temperature varies linearly within a subcase. The user may request the definition of
equation (1-34) to be applied to linear elements by adding PARAM,XFLAG,2  to the input file. The default value for XFLAG&lt;br&gt;
is 0, meaning that linear elements will use the definition of equation (1-33).
User Input
The output of grid point force balance and strain energy in nonlinear analysis is requested with the existing GPFORCE&lt;br&gt;
and ESE case control commands, respectively. The case control commands remain unchanged.
Evaluation of Stresses in Finite Elements
In a finite element analysis, the stresses are evaluated at positions in each element called &amp;ldquo;Gauss&amp;rdquo; points. These points are
not located at the element nodes but some distance into the element. These points are used to numerically integrate system
matrices like stiffness, mass, surface and volumetric loads. See any standard finite element text book for details on the exact
positions of these points for each element class. Gauss point values are the most accurate results from a finite element
analysis.  Issues arise when we extrapolate, or extrapolate and average, these values at node points for fringe plots. T o gauge
the fidelity of the stress distribution it is often useful to plot the gauss point stresses extrapolated to the nodes (for the
purpose of the fringe plot), but UNAVERAGED  so the variations of the stress contributions from each of the elements
connected to the node can be assessed.  The topic of fringe plot value averaging and extrapolation will be discussed further.
For general ease of use, however, nodal results are required and in order to obtain them it is necessary to &amp;ldquo;extrapolate&amp;rdquo; the
Gauss point stresses to the nodes. This is performed by using the &amp;ldquo;assumed element displacement (shape) functions&amp;rdquo;. These
shape functions are one of the basic building blocks of the FEM and vary for each element type. In the general case, there
are linear and quadratic shape functions. The former is typically used for corner-noded elements (e.g., 4-node f internal element forces
u displacement increment from n to n + 1
E1
2&amp;mdash;uTKeu = uTPet–
E1
2&amp;mdash;=uTKeu1
2&amp;mdash;–uTPet&lt;/p&gt;
&lt;p&gt;788 Nonlinear User’s Guide
Grid Point Stresses
Main Index
quadrilaterals, 8-node bricks) and are often called &amp;ldquo;linear&amp;rdquo; or &amp;ldquo;lower-order&amp;rdquo; elements. The latter is used for mid-side noded
elements (e.g., 8-node quadrilaterals or 20-node bricks) and often termed &amp;ldquo;quadratic&amp;rdquo; or &amp;ldquo;higher -order&amp;rdquo; elements.
Shear Strains Used in MSC Nastran
MSC Nastran uses full tensor components for the stress matrices when all components are available (e.g. continuum
elements except for the shear strains, where MSC Nastran uses a modified definition of shear strain namely xy = xy + yx,
instead of the actual tensor components xy. Since the strain tensor is symmetric, then xy = xy. This non-tensor form
comes from the equation xy = Gxy where G is the shear modulus of the material. Herein, we shall refer to xy as the shear
angle. Shear angles are used throughout MSC Nastran and are always given in the user subroutines.
Stress and strain measures must be considered when displacements become large, for example strain measures used in:
Large Displacement results in Green Lagrange Strain
Updated Lagrangian results in Logarithmic Strain
No Definition results in Engineering Strain
Grid Point Stresses
When you are working with a structure that is modeled with either plate or solid elements, it is quite common that you
may want to look at either the printed output or contour plots of the element component stresses.  If this is the case, extra
care must be taken on your part to ensure that the component stresses, which you are evaluating, are output in some
consistent manner.
Consider a simple problem as shown in Figure 1-5.  (See MSC_DOC_DIR/doc/linstat/plate3.dat ) This plate, which
is 0.1 inch thick, is subjected to a uniaxial tensile load of 1 lb/in, and the boundary condition is as shown in Figure 1-5.  This
model is represented with a 3 x 3 mesh of CQUAD4  elements.  If the elements are connected in a manner as shown in
Table 1-1, then all the element x values are in the direction of the applied loads.  In this case, x =10 psi for all nine elements.&lt;br&gt;
On the other hand, if you were to change, for instance, the connectivity order for element 5 from grid points 6-7-11-10 to
7-11-10-6, the component stresses  and  would be swapped.  Note that this is the only difference between Table 1-1 and
Table 1-2.  However, if you are not aware of it and you are making a contour plot of x, the results will be quite different for
the two cases.&lt;/p&gt;
&lt;p&gt;789 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
Figure 1-5  Uniaxial Load for a 3 x 3 Mesh
Table 1-1  Element Component Stresses
Table 1-2  Element Component Stresses5 lb
10 lb
10 lb
5 lb
1714 13 15
49
16 5510
612 11816
9
7
28
3
2 3 4
y
xl10 in =
l10 in =
l10 in =
t0.10 in =
CQUAD4,7,1,9,10,14,13
CQUAD4,8,1,10,11,15,14
CQUAD4,9,1,11,12,16,15
$
CQUAD4,1,1,1,2,6,5
CQUAD4,2,1,2,3,7,6
CQUAD4,3,1,3,4,8,7
$x10=
y0=
v10=
x10=
y0=
v10=
x10=
y0=
v10=x10=
y0=
v10=
x10=
y0=
v10=
x10=
y0=
v10=x10=
y0=
v10=
x10=
y0=
v10=
x10=
y0=
v10=CQUAD4,4,1,5,6,10,9
CQUAD4,5,1,6,7,11,10
CQUAD4,6,1,7,8,12,11
$&lt;/p&gt;
&lt;p&gt;790 Nonlinear User’s Guide
Grid Point Stresses
Main Index
T o avoid this type of surprise, it may be easier and probably more meaningful to look at the invariant stress quantities, such
as Hencky-von Mises stresses, rather than the component stresses.  The grid point stress ( GPSTRESS  case control
command) option in MSC Nastran offers you another alternative. The grid point stress option calculates the stresses at the
grid points from the adjoining plate and solid elements in a coordinate system defined by you.
This option enables you to request the output of stresses at grid points in surfaces of two-dimensional plate elements&amp;ndash;
namely, the CQUAD4 , CQUADR , CQUAD8 , CTRIA3 , CTRIAR , and CTRIA6  elements – and in volumes containing
CHEXA , CPENTA , and CTETRA  solid elements.
By default, stresses are output at the center of each of these elements and also at the vertices of the CQUADR , CQUAD4&lt;br&gt;
(with corner option), CQUAD8 , CTRIAR , and CTRIA6  shell elements as well as the CHEXA , CPENTA , and CTETRA&lt;br&gt;
solid elements. This default output is not universally satisfactory because in the case concerning the surfaces of the
CQUAD4  (without corner output request) and/or CTRIA3  elements, you often have a requirement for more accurate
stress values at the grid points. However, the vertex stresses generated for these elements that connect to a common grid
point are often not identical. These deviations are most pronounced with a crude model and converge as the model becomes
more detailed. The option described in this section provides a rational method that yields reasonable and unique stresses at
each vertex grid point in surfaces or volumes defined by you.
Description of the Grid Point Stress Method
A scheme to interpolate and/or extrapolate over a surface or volume from a known set of stresses (the element stresses)
requires that these known stress components be transformed into a consistent coordinate system prior to averaging these
stress values. This coordinate system is defined by you, and it should be generally compatible with the surface of interest in
order to obtain accurate grid point stresses. Generally, such a coordinate system is the natural coordinate system that you
used in the generation of the model of the surface or volume in question or the basic coordinate system. Calculated grid
point stress components are output in this coordinate system, which is called the output coordinate system of the surface CQUAD4,4,1,5,6,10,9
CQUAD4,5,1,7,11,10,6
CQUAD4,6,1,7,8,12,11
$CQUAD4,7,1,9,10,14,13
CQUAD4,8,1,10,11,15,14
CQUAD4,9,1,11,12,16,15
$
CQUAD4,1,1,1,2,6,5
CQUAD4,2,1,2,3,7,6
CQUAD4,3,1,3,4,8,7
$x10=
y0=
v10=
x10=
y0=
v10=
x10=
y0=
v10=x10=
y0=
v10=
x0=
y10=
v10=
x10=
y0=
v10=x10=
y0=
v10=
x10=
y0=
v10=
x10=
y0=
v10=&lt;/p&gt;
&lt;p&gt;791 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
or volume. This coordinate system should not be confused with the output coordinate system (CD field) as defined on the
grid entries.
Each stress component (e.g., x) is treated independently of other stress components in the calculation of average grid point
stress components.  The stress invariants at grid points (i.e., principal stresses, the Hencky-von Mises stress, and the mean
pressure) are evaluated from the average values of the stress components at grid points. The grid point stress components
are output in the output coordinate system of the surface.
Two methods are used to calculate grid point stress components for plate and shell elements-namely, topological and
geometric, with topological as the default method. The topological method involves the averaging of stresses at a grid point
due to the contribution of the elements directly attached to this grid point. This contribution does not include the effect
of the element size. On the other hand, the geometric method accounts for the element size based on the numerical
technique of least squares. If the results are substantially different when using the two different methods, it may be an
indication that your model is not fine enough. In general, if your model is fine enough to capture the stress gradients, the
two methods should yield similar results.
A single, simplified, topological method is used to calculate grid point stress components in volumes containing solid
elements. However, prior to a discussion of these methods, it is necessary to define the four categories into which grid points
are divided.  These defintions are important for CQUAD4  (without corner output option) and CTRIA3  elements since
the stress averaging method used depends on the type of grid point. However, they have very little meaning for CQUAD8 ,
CTRIA6 , and CQUAD4  (with corner output option) since the stress averaging is performed the same way regardless of the
type of grid points for elements with vertex stresses.
Interior grid points
Grid points that are connected only to interior line segments; i.e., line segments that are coincident with the edges
of two or more elements. If the model in Figure 1-5 is used as an example, grid points 6, 7, 10, and 11 are
considered as the interior grid points.
Corner grid points
Grid points that are only connected to a single element.  For example, in the model in Figure 1-5, grid points 1, 4,
13, and 16 are considered as the corner grid points.
Edge grid points
Grid points that are connected to both interior and exterior line segments. An exterior line segment is coincident
with the edge of only one element. For example, in the model in Figure 1-5, grid points 2, 3, 5, 8, 9, 12, 14, and 15
are considered as the edge grid points.
Exception grid points
Grid points at which discontinuities in stress can occur. Exception grid points are discussed later in this chapter.
Stresses at interior, corner, or edge grid points are considered to be continuous between directly connected elements.&lt;br&gt;
Stresses at exception points may be discontinuous between connected elements and, as will be seen, a different grid point
stress may be output for each of the connected elements. Engineering judgment must be exercised in assessing the validity
of grid point stresses at exception points. Note that the classification of the grid point types is performed automatically by
MSC Nastran based on their connectivities.&lt;/p&gt;
&lt;p&gt;792 Nonlinear User’s Guide
Grid Point Stresses
Main Index
Topological Method – Plate Elements and Solid Elements
The topological method for the evaluation of grid point stresses only recognizes the existence of interior, edge, and corner
points; i.e., exception points are not considered as a distinct category of grid points (exception grid points arise as a result
of geometrical rather than topological characteristics). The relations used to compute the average grid point stresses in the
surfaces of the plate elements by the topological method are described in Table 1-3. The relations used to compute the
average grid point stresses in the volumes containing solid elements are described in Table 1-4. The topological method is
the default method.
Table 1-3  Evaluation of the Average Grid Point Stresses for Plate and
Shell Elements by the Topological Method
Type of
Grid Point Average Grid Point Stress Component Remarks
Interior
whereIf CQUAD4  (without corner
output option) and/or
CTRIA3  elements connect to
the same grid point as
CQUAD8  and/or CTRIA6&lt;br&gt;
elements, then only CQUAD8&lt;br&gt;
and/or CTRIA6  elements are
used in the calculation of
average grid point stresses.i1
Ne&amp;mdash;&amp;mdash; ei
i1=Ne
=
i=average stress at interior grid points
Ne=number of directly connected elements
ei=element center stresses if only CQUAD4  and/or CTRIA3&lt;br&gt;
elements are connected; element vertex stresses if
CQUAD8 , CTRIA6 , and/or CQUAD4  (with corner
output option) elements are connected&lt;/p&gt;
&lt;p&gt;793 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
Edge
whereIf an edge point is not
connected to an interior point
by line segments, then Ni = 0.&lt;br&gt;
In this case, the second term in
the relation E is set to zero,
and the factor 2 in the first term
is replaced by 1.
Remarks for interior grid points
also apply.
The second term is not used for
QUAD4  with corner request.Table 1-3  Evaluation of the Average Grid Point Stresses for Plate and
Shell Elements by the Topological Method  (continued)
Type of
Grid Point Average Grid Point Stress Component Remarks
E2
Ne&amp;mdash;&amp;mdash; ei1
Ni&amp;mdash;&amp;ndash; i
i1=Ni
–
i1=Ne
=
E=average stress at edge grid points
Ne=number of directly connected elements
Ni=number of interior points connected to the edge points by line
segment
i=average stress at interior grid points connected to the edge
points by line segments
ei=element center stresses if only CQUAD4  and/or CTRIA3&lt;br&gt;
elements are connected; element vertex stresses if CQUAD8 ,
CTRIA6 , and/or CQUAD4  (with corner output option)
elements are connected&lt;/p&gt;
&lt;p&gt;794 Nonlinear User’s Guide
Grid Point Stresses
Main Index
Corner
(CTRIA3 )Corner points connected to CTRIA3  elements and the other two grid
points, namely, E1 and E1 of the connected CTRIA3 , are edge points.
c = 1 E1E2
whereRemarks for interior grid points
also apply.
Grid points
connected
to
CQUAD8 ,
CTRIA6 ,
and/or
CQUAD4&lt;br&gt;
(with
corner
output
option)whereRemarks for interior grid points
also apply.Table 1-3  Evaluation of the Average Grid Point Stresses for Plate and
Shell Elements by the Topological Method  (continued)
Type of
Grid Point Average Grid Point Stress Component Remarks
(If either E1 or E2 is not an  edge point, then c = 1)c =average stress at corner grid point
1 =CTRIA3  center stress
E1E2 =average stress at edge points E1 and E2
c1
Nc&amp;mdash;&amp;mdash; ri
i1=Nc
=
c=average stress at rth grid points
Nc=number of CQUAD8 , CTRIA6 , and CQUAD4  (with corner
output option) elements connected to the rth grid point
ri=stress at the vertex of the ith element connected to the rth grid
point&lt;/p&gt;
&lt;p&gt;795 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
In the geometric method, grid point stresses for points that connect to CQUAD8 , CTRIA6 , and/or CQUAD4  (with
corner output request) elements use the average of the element corner stresses. If CQUAD4  (without corner output request)
or CTRIA3  elements connect to these points, their influence is not considered. The geometric method for the Corner
(CQUAD4&lt;br&gt;
without
corner
output
option)Corner points connected to CQUAD4  element with the grid point
diagonally opposite the corner point, an interior point, or an edge point.
c = 1D
whereRemarks for interior grid points
also apply.
Table 1-4  Evaluation of the Average Grid Point Stresses for Solid Elements by the Topological Method
Type of Grid
Point Average Grid Point Stress Component Remarks
All
whereMixtures of CHEXA ,
CPENTA , and
CTETRA  elements
may connect to an
interior or edge grid
point.Table 1-3  Evaluation of the Average Grid Point Stresses for Plate and
Shell Elements by the Topological Method  (continued)
Type of
Grid Point Average Grid Point Stress Component Remarks
(If the point diagonally opposite the corner point is not an interior or
edge point, then c = 1)c=average stress at corner grid point
1=CQUAD4  center stress
D=average stress at grid point diagonally opposite corner point
11
Ne&amp;mdash;&amp;mdash; ei
i1=Ne
=
1=average stress at interior or edge grid points
Ne=number of directly connected elements
ei=element vertex stresses&lt;/p&gt;
&lt;p&gt;796 Nonlinear User’s Guide
Grid Point Stresses
Main Index
determination of average grid point stresses that connect only to CQUAD4 /CTRIA3  elements utilizes the numerical
technique of least squares.
Treatment of Exception Points
Exception points are defined as grid points at which stress discontinuities may occur.  Such discontinuities may occur due
to a substantial difference in slope between adjacent elements directly connected to the same line segment or if more than
two elements are directly connected to the same line segment. Figure 1-6 is an example of such a situation.  Grid points 1,
2, 3, 4, and 5 are examples of exception grid points.
Figure 1-6  Adjacent Elements with Different Slopes Connected to the Same Line
Note that this situation is geometric rather than topological in nature and is, therefore, only considered under the geometric
interpolation option.
Since exception points are defined as grid points at which stress discontinuities may exist, it is conceivable that a computed
average grid point stress at an exception point may be different for each of the directly connected elements. However, it is
more common to find that a subset of the elements, which are directly connected to an exception point, forms a subsurface
on which stresses may be considered to be continuous. A unique average grid point stress may then be computed for the
elements of the subsurface. For the problem shown in Figure 1-6, you may consider creating two subsurfaces – one subsurface
consisting of elements within the shaded surface and another subsurface consisting of elements within the unshaded surface.
The calculation of average grid point stresses for a subsurface that contains two or more elements is performed when the
geometric interpolation method is used for edge points. If a subsurface consists of a single element, the calculation of an
average grid point stress is performed in the same manner as utilized in the calculation of average grid point stresses at corner
points. It must be noted, however, that D, E1, and E2 may be interior, exterior, or corner points (see Table 1-4).
As stated previously, each element stress component (independently of all other stress components) is transformed into the
output coordinate system before averaging. It is necessary that this output coordinate system vary slowly over the surface in
order for the interpolated stresses to be accurate. This approach is certainly valid for stress interpolation over elements that
are in a common plane, and it should be adequate for engineering analysis when the difference in slope between adjacent
elements is small. If this slope is not small, it is suggested that you break them into multiple surfaces or volumes. When the Y
XZ1
2
3
4
5&lt;/p&gt;
&lt;p&gt;797 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
elements do vary substantially from a smooth surface, you must utilize engineering judgment relative to the accuracy of the
resultant stress data.
Average grid point stresses are only computed at element vertices. For elements with mid-edge grid points, you can estimate
the stresses at these mid-edge grid points to be the average of the computed stresses at the grid point at the ends of the edge
in question.
Grid Point Stress Interface
A sample of the grid point stress data recovery option is shown in this section.
Case Control Section
The following case control commands are used by the grid point stresses:
In static analysis, place the GPSTRESS  command above the subcase level or in individual subcases. If the GPSTRESS&lt;br&gt;
command is above the subcase level, it is utilized by all subcases and subcoms unless overridden by a GPSTRESS  command
in a subcase or subcom.
Note that if grid point stress data is desired, an ELSTRESS  (or STRESS ) request for all elements in the surfaces or volumes
of interest must be included in the Case Control Section. This request is in addition to the GPSTRESS  request.  Such
requests cause the output of element stress data as well as grid point stress data. If the printed output of element stress data
is not desired, the requests “ELSTRESS(PLOT) = x” or “STRESS(PLOT) = x” may be used. In the model shown in
Figure 1-5, if grid point stresses are requested for grid point 11, then element stresses must be requested for a set that includes
at least elements 5, 6, 8, and 9. Furthermore, the set of elements in the SURFACE  definition must also include elements
5, 6, 8, and 9.  In this example, if one of the elements that is connected to grid point 11 (e.g., element 6) is left out in the
SET definition, then User Warning Message 4621 is issued. The GPSTRESS  values calculated in this case may be
meaningless.
The OUTPUT (POST ) section of the Case Control Section contains specific requests for grid point stress data for the
surfaces or volumes of elements. Any number of element surfaces or volumes may be defined, but only those surfaces or
volumes referenced through the GPSTRESS  command will have grid point stress data generated and output.GPSTRESS Requests grid point stresses output.
STRFIELD Requests grid point stresses for graphical postprocessing and stress discontinuities.
STRESS  or ELSTRESS Requests element stress output.
OUTPUT  (POST ) Delimiter.
SET Defines a set of elements that define a surface or volume.
SURFACE Defines a surface of plate elements referenced by the SET command.
VOLUME Defines a volume of solid elements referenced by the SET command.&lt;/p&gt;
&lt;p&gt;798 Nonlinear User’s Guide
Grid Point Stresses
Main Index
Bulk Data Section
If postprocessing of grid point stress is desired, the parameter PARAM,POST,x  is needed in the Bulk Data Section. There
is no other special requirement.
Again, the model in Figure 1-5 is used for this illustration. In this case, you may want to have two separate surfaces. The first
surface contains elements 1, 2, 4, 5, 7, and 8; the second surface contains all elements. Part of the input file is shown. (See
Install_dir/mscxxxx//doc/linstat/gpstress.dat )
$
$ FILENAME - gpstress.dat
$
STRESS= ALL
SET 10 = 100,200
GPSTRESS = 10
STRFIELD = 10
$
OUTPUT(POST)
SET 1 = 1,2,4,5,7,8
SET 2 = ALL
SURFACE 100 SET 1 NORMAL Z
SURFACE 200 SET 2 NORMAL Z
In the above example, surface 100 contains elements 1, 2, 4, 5, 7, and 8 that were referenced by set 1. Surface 200 contains
all of the elements that were referenced by set 2. The element positive normal is in the direction of the z-axis of the basic
coordinate system. By default, the grid point stresses are transformed to the basic coordinate system. The grid point stresses
are called out by the GPSTRESS  command, which points to set 10, which, in turn, points to surfaces 100 and 200. Element
stresses are requested for all of the elements, which, of course, encompass elements 1, 2, 4, 5, 7, and 8. The STRFIELD&lt;br&gt;
command is required to generate postprocessing data for your graphic package. A partial output of a typical grid point stress
is provided as follows.
Extrapolation/Averaging Tips in Patran
There are five element extrapolation methods and even more averaging domains in Patran.
 Centroid – the average of the integration point values is calculated and placed at the centroid. Then Patran
performs a linear extrapolation of the values from the centroid through the integration point to the nodes. S T R E S S E S   A T   G R I D   P O I N T S   - -     S U R F A C E     100
SURFACE X-AXIS X  NORMAL(Z-AXIS)  Z         REFERENCE COORDINATE SYSTEM FOR SURFACE DEFINITION CID      0
GRID      ELEMENT            STRESSES IN SURFACE SYSTEM           PRINCIPAL STRESSES            MAX           &lt;br&gt;
ID         ID     FIBER   NORMAL-X   NORMAL-Y   SHEAR-XY     ANGLE      MAJOR      MINOR      SHEAR     VON MISES
1         0     Z1     1.000E+01 -2.009E-14 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
Z2     1.000E+01 -2.009E-14 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
MID     1.000E+01 -2.009E-14 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
2         0     Z1     1.000E+01 -8.986E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
Z2     1.000E+01 -8.986E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
MID     1.000E+01 -8.986E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
.                                                  &lt;br&gt;
.
15         0     Z1     1.000E+01 -1.631E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
Z2     1.000E+01 -1.631E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01
MID     1.000E+01 -1.631E-15 -1.093E-07     .0000  1.000E+01  0.000E+00  5.000E+00   1.000E+01&lt;/p&gt;
&lt;p&gt;799 Appendix A: Interpreting the Results
Grid Point Stresses
Main Index
Shape Function – the values at the integration points are extrapolated to the nearest nodes using the element shape
functions. If there are fewer integration points than nodes, Patran averages the values of neighboring integration
points. When combined with the Averaging: None  feature ( Averaging: None  on Results&amp;gt; Create: Fringe&amp;gt; Plot
Options ) to isolate just one element, this enables you to see the extrapolated integration point values produced by
Patran in history plots.
Average – Patran computes the average of all the values at the integration points and assigns an equal value to all
the nodes. No extrapolation is used.
Min – Patran uses the minimum of the integration point values at each node.
Max – Patran uses the maximum of the integration point values at each node.
The accuracy of the extrapolation procedure is dependent on: 1) the presence of a reasonably uniform stress field; 2) a
reasonably regular element shape; and 3) the type of shape function used in the element chosen. For instance, a high stress
gradient across an element would be more likely to extrapolate incorrectly; particularly if a linear shape function element is
being used. Thus, although equilibrium conditions will always be met, the stress distribution can be wholly inaccurate for
an insufficiently refined mesh.
In a typical analysis, each node point will be connected to more than one element and, hence, an averaging process is
required to obtain a single value of stress at this node (simply adding all the component stresses and dividing by the number
of components) – this is the methodology selected on Patran when choosing “Averaging Definition” Domain and Method
on the Results&amp;gt; Create: Fringe&amp;gt; Plot Options  sub-form. Setting &amp;quot; Domain = Individual &amp;quot; will not perform this process.
Figure 1-7  Patran Averaging and Extrapolation Methods are Controlled on the Fringe Plot Options Form
In areas of interest where stresses will be used as input to the design process, a contour plot of averaged nodal stress should
very similar to one using un-averaged nodal results (a smooth transition across element boundaries). This would indicate
that the stress distribution in the structure is being simulated sufficiently accurately. For other sections of the model which
are not of interest, a coarser mesh would normally be used and a comparison in these areas would typically give significantly
different contour plots – the un-averaged contours appearing more like a patchwork quilt. The difference in contour values
at the element boundaries indicating either that the mesh is too coarse or the element type insufficient to simulate the stress
variation adequately.
To turn on/off nodal averaging, select Results&amp;gt; Create: Fringe&amp;gt; Plot Options   &lt;/p&gt;
&lt;p&gt;800 Nonlinear User’s Guide
Shape Function Interpolation
Main Index
By default Patran always displays nodal averaged values, unless the Averaging:None option is used ( Averaging:
None  on Results&amp;gt; Create: Fringe&amp;gt; Plot Options ).
The maximum and minimum values on the legend for a plot are obtained by looping over all the nodes. This
means that values at nodes that do not belong to any element (contact control nodes, for example) do influence the
min/max values.
The maximum and minimum values on the legend for a Contour plot are obtained by looping over all the nodes
of each element. This means that values at nodes that do not belong to any element (contact control nodes, for
example) do not influence the min/max for Contour  plots.
If all values in a Contour  plot are identical (say equal to v), there will only be one.
The fringe range of a contour plot in Patran is dependent on what is currently visible on the screen. This means
that when contouring selected parts of a structure, the elements that are not in one of the posted groups will not
make a contribution to the range calculation process. Depending on the relative size of the stress contributions
from the elements that are missing, the contours around the edge could have will change significantly.
To suppress averaging for specific element combinations, remove the elements from any posted groups. This
means that when contouring selected parts of a structure, the elements that have been removed from the posted
groups will no longer make a contribution to the averaging process. Depending on the relative size of the stress
contributions that are now missing, the contours around the edge could change significantly.
Nodal averaging of element results to the output file is carried out using a weighted averaging scheme based on the
angle spanned at a node of an element. This should not have an effect for a perfectly regular mesh.
The Extrapolation: Centroid  on Results&amp;gt; Create: Fringe&amp;gt; Plot Options  method in Patran (Results) is a further
way to obtain contour plots. Specifying this command sets the results plotting style to element centroid contours.
Gauss Point Results
To obtain Gauss point results in Patran, select  Shape Function  as the extrapolation method and switch off nodal
averaging. When combined with the Averaging:None  feature ( Plot Options&amp;gt;averaging Definition&amp;gt;none ) to
isolate just one element, this enables the extrapolated integration point values to be displayed by Patran.
By default, if the MASTER /DBALL  or.op2  file is attached and a fringe plot is done, the standard shape function
extrapolation to the nodes, then nodal averaging of the values of all elements attached to that node is done by
Patran.
Shape Function Interpolation
Displacement shape or interpolation functions are a central feature of the displacement-based FEM. They primarily
characterise the assumptions regarding the variation of displacements within each element. Because of their relationship
with displacements, the variation of both strains and stresses is also consequently defined.
The basic assumption of the FEM is that the subdivision of a complex physical structure into the assembly of a number of
simple “elements” will approximate the behavior of the structure. Because of this subdivision, each finite element need not
attempt to simulate the complex behavior of the whole structure but, rather, assumes a relatively simple displacement
variation so that the sum of the individual finite element responses approximates the response of the whole structure.&lt;/p&gt;
&lt;p&gt;801 Appendix A: Interpreting the Results
Shape Function Interpolation
Main Index
Shape functions are polynomial expressions. Any order of polynomial can theoretically be used but, in general, linear and
quadratic variations are most common. It is from the order of the shape function polynomial that the terms linear and
quadratic elements originate.
A consequence of these assumed displacement variations enables the FEM to be able to solve the equilibrium equations at
discrete points, thus transforming a continuous “physical” system (having infinite degree of freedom) into something
manageable for numerical procedures.
Typically, MSC Nastran uses Lagrangian shape functions which provide C(0) continuity between elements (primary
variables only, and not their derivatives, are continuous across element boundaries). Shape functions are defined in terms
of the natural coordinate system  for line elements (bars, beams),  f or surface elements (shells, plates, plane
membranes,) and  for volume elements (solids).
For many two-noded line elements a linear variation is assumed as follows :
where N1and N2 are the shape functions at nodes 1 and 2 of the element respectively (the order being dependent on the
element node numbering). Diagrammatically, their variation is as follows :
Linear variations are also used on four-noded surface elements as follows :
Three-noded line elements typically assume a quadratic variation as follows :N11
2&amp;mdash;1– =
N21
2&amp;mdash;1+ =
1
 1–=
Variation of N1 +1=1
 1–=  +1=
Variation of N2
N1
2&amp;mdash;1– =
N21+1– =&lt;/p&gt;
&lt;p&gt;802 Nonlinear User’s Guide
Shape Function Interpolation
Main Index
where N1, N2, and N3 are the shape functions at nodes 1, 2 and 3 of the element respectively. Diagrammatically, their
variation is as follows :
Quadratic variations are also used on eight-noded surface elements. The following diagrams show the variations of the shape
functions at both corner and midside nodes .
Shape functions need to have the following characteristics :
Nijjj  (for i = j)
This means that the value of each shape function evaluated at its nodal position must be unity. For example ,
Nijj (for  i ≠ j)
Requires that the values of each shape function, evaluated at the other nodes must be zero. That is ,N3
2&amp;mdash;1+ =
 1–= 0= +1=1
Variation on N11
Variation on N1 1–= 0= +1=
Variation on N3 1–= 0= +1=1
Midside Nodes Corner Nodes
N1 1–
2&amp;mdash;1– 1 = = =
N2 0=1+1– 1 = =
N3x 1=
2&amp;mdash;1+ 1 = =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P42</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_042/</guid>
      <description>
        
        
        &lt;p&gt;803 Appendix A: Interpreting the Results
Shape Function Interpolation
Main Index
The sum of all the shape functions, evaluated at any point must be unity. That is
Furthermore, to ensure that a finite element convergences to the correct result, certain requirements need to be satisfied by
the shape functions, as follows
The displacement function should be such that it does not permit straining of an element to occur when the nodal
displacements are caused by rigid body displacement. This is self evident, since an unsupported structure in space
will be subject to no restraining forces .
The displacement function should be of such a form that if nodal displacements produce a constant strain
condition, such constant strain will be obtained. This is essential since a significant mesh refinement will cause
near-constant strain conditions to occur in elements and they must be able to handle this condition correctly .
The displacement function should ensure that the strains at the interface between elements are finite (even though
indeterminate). By this, the element boundaries will have no “gaps” appear between them and, hence, will show a
continuous mesh.
The following sections deal with some of the more frequently encountered practical implications that are related to the use
of shape functions.
Implication: The Evaluation of Element Displacements
The isoparametric element formulation assumes that
{u} = [ N]{d}
where {u} are the displacements at any point within an element and  {d} are the displacements at the nodes of an element.
This equation relates the displacements at any point within an element to the nodal displacements according to the element
shape function [N]. Therefore, the displacement at any point in a two-noded line element can be obtained from the
nodal values using the following equationN1 0=
2&amp;mdash;1– 0 = =
N1 1=
2&amp;mdash;1– 0 = =
Ni,
i1=
N1 12=
2&amp;mdash;1–1
8&amp;mdash;– = =
N2 12=1+1–6
8&amp;mdash; = =
N3 12=
2&amp;mdash;1+3
8&amp;mdash; = =&lt;/p&gt;
&lt;p&gt;804 Nonlinear User’s Guide
Shape Function Interpolation
Main Index
If this element is fully fixed at one end (d1 = 0) and sustains a displacement of 2 at the other end (d2 = 2), the displacement
at the centre of this element (x=0) would be given thus
i.e., half the end displacement as expected.
The same can be done with any quantity that varies across an element, for example, coordinates, strain, stress, and thickness.
Implication: Linear vs Quadratic Elements
Consider a 3-noded element that uses a quadratic shape function variation of the form
The quadratic terms in  thus giving a corresponding quadratic variation of displacement over the element. The strain
variation can be defined as
where [B] is that strain-displacement matrix and {d} are the three element axial displacements. It can be seen from the 
terms that the strain is now a linear variation – as will be the stress variation. In a similar manner, for a linear element, the
strain and stress variation will be constant.
This has a direct bearing on the type of element to be chosen for an analysis. For instance, consider a bar element under the
action of a constant uniformly distributed load along the length of the element. The resulting axial force variation will be
theoretically linear as in the topmost picture of the following diagram.u N1d1N2d2+1
2&amp;mdash;1–d11
2&amp;mdash;1+d2+ = =
u01
2&amp;mdash;01
2&amp;mdash;2 + 1 = =
N2–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 12 2+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; – =

xBdd
dx&amp;mdash;&amp;mdash;1
2&amp;mdash; – 2  –1
2&amp;mdash;+ d1
J&amp;mdash;1
2&amp;mdash; – 2  –1
2&amp;mdash;+ d = = =&lt;/p&gt;
&lt;p&gt;805 Appendix A: Interpreting the Results
Shape Function Interpolation
Main Index
If this bar is modeled using linear elements (i.e., linear terms in the shape function), the axial force will be approximated
by a constant, “stepped” response in each element, since the shape function derivatives only contain constant terms. A
quadratic element (i.e., quadratic terms in the shape function) will, however, support a linear response and provide the
correct answer directly, since the shape function derivatives contain linear terms. Thus, the exact solution can be obtained
with a relatively small number of elements (or even with one element only) if the actual strain field can be matched by the
shape functions of the element that is being used. In the above example, the shape function derivative terms did indeed
match the linear strain of the actual analysis.
A frequent observation when inspecting force output at a simply supported section of a structure is to find (unexpectedly)
nonzero values. Depending on the degree of mesh refinement, these values can be significant compared to the peak values.
The reason is directly related to the above discussion. For example, if the force distribution is at least quadratic in form and
linear elements are used (typically supporting a constant force distribution), a stepped response will be seen – hence the
nonzero values – these constant values represent an average of the force distribution and, if summed across the structure
would be found to be equilibrium. The use of quadratic elements will improve the situation, but even these will not be able
to match third order or higher force distributions without a measure of mesh refinement performed.
In spite of this sort of discrepancy, it should be noted that, during the solution stage, the equilibrium equation is used
({f} = [ K]{d})to ensure that the product of the stiffness matrix and the computed displacements exactly balances the
externally applied forces. This means that, unless there are pertinent warnings or errors output during the solution, static
equilibrium will have been fully achieved. Moreover, the derived quantities of strain and stress will also be found to be in
equilibrium – but not necessarily according to an expected distribution as noted in preceding paragraphs.Four Element
MeshTheoretical
Solution
Axial Force
Linear Elements
(constant &amp;lsquo;stepped&amp;rsquo; solution)
One Element
MeshQuadratic Elements
(linear solution)&lt;/p&gt;
&lt;p&gt;806 Nonlinear User’s Guide
Shape Function Interpolation
Main Index
Similar difficulties can be observed when attempting to compare the reactions at a location in a structure with the element
force output at the same location. The explanation in most cases is, again, related to the order of shape function that has
been used to formulate the element.
The remedies are to either increase the number of linear elements used (and reduce the size of the “step change” between
each element) or change to quadratic elements (to more closely match the actual variation).
Apart from the consideration of element selection related to the order of shape function, quadratic elements would be
recommended in the presence of high degrees of plastic strain since they are less susceptible to “locking”. Linear elements,
however, would be recommended when the stress distributions anticipated are constant or linear. Such elements are
computationally cheaper and, in such circumstances, render the use of higher order elements unnecessary.
Implication:  Nodal Temperature Loading With Temperature Dependent Materials
Although the temperature loading is defined at element nodes, it is actually used by MSC Nastran at a Gauss point level.
The nodal temperature loading is interpolated from the nodes to the Gauss points using the element shape functions.
The presence of significant temperature loading distributions over higher order elements can cause negative temperature
loading to be applied at the Gauss points – even though the applied temperature field is entirely positive in magnitude.
Such negative temperatures can be unexpectedly out of the user-specified temperature dependent material property table.
As an example, consider the situation described in the first of the following diagrams. The temperature loading is applied
at the nodes as shown.
As a result of the quadratic displacement assumption used in higher order elements, the interpolation to the Gauss points
yields the variation of temperature across the length of the element as shown.
This variation will ensure that the applied temperature loading is applied correctly to the structure, but for the Gauss points
nearest to the zero temperature specification this may not be so.xxx
x0
0 100100Gauss Points
Nodal
Temperatures
Temperature VariationAcross ElementT = 100 T = 100 T = 020
200100&lt;/p&gt;
&lt;p&gt;807 Appendix A: Interpreting the Results
Finite Element Equilibrium
Main Index
For most cases the negative value is insignificant compared to the temperature loading specified and the variation in the
temperature dependency of the material properties. Mesh refinement in the area of the greatest temperature variations is
the most appropriate remedy.
Implication:  Element Thickness Interpolation
Although the thickness for an element is defined at element nodes, it is actually used by MSC Nastran at a Gauss point
level. The thickness is interpolated from the nodes to the Gauss points using the element shape functions.
For a constant thickness element, the interpolation will always produce the same constant value at the Gauss points. For a
varying thickness over an element, the actual thickness used will not be that specified at the nodes, but rather an interpolated
value. See the top diagram below.
When using the quadratic displacement assumption used in higher order elements, the interpolation to the Gauss points
yields the variation of thickness across the element as shown in the second picture (above). The effect of a significant
variation of thickness over a single element may, thus, cause a zero or negative thickness value at a Gauss point.
The remedy is to check that the thickness variation applied to the specified element is applied correctly. If so, then the mesh
should be refined to reduce the severity of the thickness variation over the element.
Finite Element Equilibrium
In terms of finite element equilibrium, there are two important properties that are always satisfied by the finite element
solution using either a coarse or a fine mesh. T o describe these properties consider the following portion of a mesh under
the application of an arbitrary force, the four elements (1,2,3,4) share the same node (i).xxx
x1
11 0 0100Gauss Points
Nodal
Thicknesses
Thickness Variation Across
Elementt = 100 t = 120
201100&lt;/p&gt;
&lt;p&gt;808 Nonlinear User’s Guide
Finite Element Equilibrium
Main Index
The following diagram, representing an exploded view of these four elements, shows the forces obtained at the nodal
position (i) and those on element (2).
The two properties may now be defined as
Nodal point equilibrium: At any node, the sum of the internal element point forces is in equilibrium with any
external loads that are applied to the node. The internal forces include the effects due to body forces, surface
tractions, initial stresses, concentrated loads, inertia and damping forces, and reactions. Thus, for an externally
non-loaded node in a linear static analysis, such a summation will be zero.
Element equilibrium: Each element is in equilibrium under its internal forces
Nonlinear analyses may produce out-of-balance residual forces at a node, depending on the degree of convergence obtained
during the solution. For a well-converged solution, however, these are insignificant. See nonlinear iterative strategy for more
information.123 4
i
123 4
Element forces
are in equilibriumSum of nodal forces
are in equilibrium
with external forces&lt;/p&gt;
&lt;p&gt;809 Appendix A: Interpreting the Results
Finite Element Equilibrium
Main Index
Although nodal and element equilibrium is achieved as described above, in a general finite element analysis, differential
equilibrium (e.g. stress continuity) is not necessarily achieved at all points of the continuum considered – most notably at
the shared boundaries of elements as discussed below.
In the displacement-based FEM, a C0 continuous approximation for the displacements is assumed within each element.
This means that the displacements at any point in a mesh will be continuous and ensures that no gaps appear between
elements. The element stresses are calculated using derivatives of the displacement, which means that they will not
necessarily be continuous and give rise to inter-element discontinuities or “jumps” in stress between adjacent elements. This
is particularly the case for coarse element meshes. The discontinuities at adjacent element boundaries are reduced with mesh
refinement and the rate at which mesh refinement reduces such discontinuities is determined by the order of the elements
in the mesh – higher order elements converging faster than low order.
For the same reasons that element stresses are not continuous across element boundaries, the element stresses at the surface
of a finite element model are, in general, not in equilibrium with the external applied tractions. Again, this effect is
minimized with mesh refinement.
Experience has shown that the most accurate locations for stress output are the Gauss points. Nodal points, which are the
most accessible, are actually the worst output location for stresses. Reasons have been given above, but include the fact that
shape functions tend to behave badly at element extremities and it is reasonable to expect that the shape function derivatives
(i.e. strains/stresses) sampled in the interior of the element would be more accurate than those sampled at the periphery of
the element.
This evokes the question of how to obtain accurate stress results from a finite element model?
Implication: Smoothed or Unsmoothed Stress Contours
One method for obtaining reasonable nodal stress output is by extrapolating the “exact” stresses at Gauss points to the nodal
positions using the element shape functions. Consider the following diagram, representing the same exploded view of the
four elements shown earlier.
For element 2, the nodal stresses at nodes (1,2,3,4) are obtained by
Defining a fictitious element (shown by the dashed lines) with nodes at the element Gauss points (a,b,c,d)Gauss
Points
 123 4

 b adc
&lt;/p&gt;
&lt;p&gt;810 Nonlinear User’s Guide
Finite Element Equilibrium
Main Index
Extrapolating the Gauss point stresses to the nodal points of the real element (1,2,3,4) using the displacement
shape functions of the fictitious element, i.e.
where N is the number of Gauss points, and subscripts i and I denote nodal and Gauss point values, respectively.
The accuracy of the extrapolation procedure is dependent on both the presence of a reasonably uniform stress field
and the type of shape function used in the element chosen. For instance, a high stress gradient across an element
would be more likely to extrapolate incorrectly, particularly if a linear shape function element is being used.
This procedure is carried out for the other elements and the nodal stresses at the common node (i) are obtained as (i)1,
(i)2, etc. As pointed out above, these stresses are not usually equal and a single “averaged” or “smoothed” nodal stress value
is obtained using
When this procedure is carried out for all nodes in an element assembly, the ensuing averaged stress values provide a
reasonable approximation to a continuous stress field. This is a straightforward and economic solution and works well on
the whole. See later for more details on the circumstances that smoothing should not be used. If smoothed results are not
selected then the extrapolation procedure is still performed, but the averaging process is omitted.
Note that, for shell elements, the local Gauss point stresses and strains are transformed to global stresses and strains before
extrapolation to the nodes. The mean global stresses are then transformed to the local shell system at the nodal point before
evaluation of the nodal stress resultants.
Other methods are available, based on a least squares fit over the integration point stress values of the elements. The least
squares procedure might be applied over the patches of adjacent elements or even globally over a whole mesh. However, if
the domain over which the least squares fit is applied involves many stress points, the solution will be expensive and, in
addition, a large error in one part of the domain may affect rather strongly the least squares prediction in the other parts.
In general, it is recommended to display unsmoothed stress contours at an early point during the processing of results. In
this way, severe stress discontinuities between elements will be apparent and the possible requirement of mesh refinement
and/or the use of higher order elements may be considered.
In areas of interest where the stress results will be used in the design process, smoothed contours would ideally be similar
to unsmoothed contours. The inference from this being that a smooth stress transition across the element boundaries
indicates that the stress distribution in the structure is being simulated sufficiently accurately. For sections of the model that
are not of interest, a coarser mesh would normally be used and such a comparison in these areas would typically give
significantly different contours – smoothed contours appearing more like a patchwork quilt!
The nodal averaging technique is sufficiently robust that such stress values will tend to be pretty much those that would be
obtained at the same location with mesh refinement – as long as the element mesh is reasonably uniform.iNIii,I
II=N
=
ii1i2i3i4+ +
4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;811 Appendix A: Interpreting the Results
Finite Element Equilibrium
Main Index
At all times, it is imperative to remember that the FEM is an approximate numerical technique (albeit a good one) and that
smoothed stress results can give good results but need careful attention.
Implication:  Limitations of the Averaging Scheme
In addition to taking no account of the size of the adjacent elements, the averaging method must not be used:
At mesh locations in which geometric or material properties change
For local or global stress output for shell elements that are nonplanar
Interconnecting BEAM  elements. It is necessary to extract results for longitudinal members and transverse
members separately.
Consider the situation in which Mx results have been selected for display, and both transverse and longitudinal members
are active. The averaged value displayed at the central node number (1) will be comprised of the local Mx values from the xyxyxy

y xzy xz
y xzy xzy xz
y xzx
yz
x
yzx
yz
x
yz
x
yz
x
yz
Longitudinal
MembersTransverse
Members1&lt;/p&gt;
&lt;p&gt;812 Nonlinear User’s Guide
Finite Element Equilibrium
Main Index
two longitudinal and two transverse members that connect to this node. It must be noted that the Mx values are local to
the elements (as shown in the diagram), so that the Mx values for the longitudinal members act at 90° to the Mx results in
the transverse members. This means that the averaged values will be meaningless since the Mx results from the longitudinal
members will be averaged with the Mx values of the transverse members that are acting in a completely different direction.
Continuum and Generalized Stresses
There are two main types of stress output for elements in MSC Nastran:
Continuum Stresses
Also known as “physical stresses” in MSC Nastran, these are named after the stress definitions used in classical continuum
mechanics theory and are defined in the usual manner as force per unit area and are denoted by the following symbol types
x,y,z,xy,yz,zx
x,y,z,xy,yz,zx
Sx,Sy,Sz,Sxy,Syz,Szx
The first subscript for the shear stress component stresses represents the face on which the stress acts, the second is the
normal direction of this face. Hence, the stress xy is acting on the x-face in the global y-direction. The MSC Nastran
definition is given as follows:
Normal Stress values:
xy = x
yy = y
zz = zY
XσY
σX
σYσXσXY
σXYσX, σY   +ve tension
σXY  +ve into XY quadrant
Y
X
ZσXZσYZ
σZσXY
σYZσY
σXZσXY
σXArrows indicate  +ve
stress directions&lt;/p&gt;
&lt;p&gt;813 Appendix A: Interpreting the Results
Finite Element Equilibrium
Main Index
The shear stress in two perpendicular cutting directions at a point have the same value, i.e.
xy = yx
xz = zx
yz = zy
The stress tensor ij comprises the 6 independent stress values from 3 perpendicular cutting planes at a point and
describes the stress behavior completely:  where ij = ji.
Shell Elements
The shell elements also evaluate stresses at a number of points through their thickness. This is carried out in order to obtain
bending and membrane effects as a result of increasing distance from the neutral axis. These through-thickness stress
evaluation points evaluate what are commonly termed “surface”, “layer”, or “fibre” stress results.
Numerical integration through the shell thickness is performed using Simpson&amp;rsquo;s rule for homogeneous shells and the
trapezoidal rule for a composite shell. For non-homogeneous materials, the number of layers is defined through the
PCOMP  or PCOMPG  bulk data entry.
Shell Layer Convention : The layer number convention is such that layer one lies on the side of the positive normal to the
shell, and the last layer is on the side of the negative normal. The normal to the element is based upon both the coordinates
of the nodal positions and upon the connectivity of the element:ijxxxyxz
yxyyyz
zxzyzz= ijji=
XZ
YTop Layer
(layer 1)
Bottom Layer
(layer &amp;ldquo;n&amp;rdquo;)Local
Element Axis&lt;/p&gt;
&lt;p&gt;814 Nonlinear User’s Guide
Finite Element Equilibrium
Main Index
Generalized Stresses
Generalized stresses are also known as “average membrane” stresses and are available for shell elements. They are
dimensionally defined as a stress. They are not to be confused with “stress resultant” output, defined as force or
moment per unit width
Generalized stresses are obtained at each Gauss point by integrating the shell “layer” continuum stresses over the
thickness of the shell. In the same way, generalized strain are their work-conjugate counterparts and examples
include curvature and rotation
The equation given for the generalized stress is:
Gyd
t2–t2
=&lt;/p&gt;
&lt;p&gt;Main Index
Appendix B: Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and
NDAMP/NDAMPM (GEN-ALPHA)&lt;br&gt;
MSC Nastran Nonlinear (SOL 400) User’s Guide MSC Nastran Release Guide
BConversion of NDAMP in SOL 129
(NEWMARK-BETA) to NDAMP
(HHT), and NDAMP/NDAMPM
(GEN-ALPHA)&lt;/p&gt;
&lt;p&gt;816 Nonlinear User’s Guide
Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)
Main Index
Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to
NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)
(2-1)
For Newmark-Beta with default =0.5, and  =0.25, Eq. (1-1) becomes
(2-2)
Introducing numerical damping, Eq. (1-2) leads to
(2-3)
Dropping the acceleration item in Eq. (1-1), by approximation and then comparing Eq. (1-1) and (1-3),
yields
(2-4)
For HHT method,  = 0.5-f ; ; therefore,
(2-5)
(2-6)
where f is NDAMP . The root of Eq. (1-6) may be obtained as
(2-7)
Spectral radius of HHT  is related to NDAMP f as
(2-8)
Then,u·n1+
t&amp;mdash;&amp;mdash;&amp;ndash;un1+ 1
&amp;mdash;–u·n1
2&amp;mdash;&amp;mdash;–u··n+ + =
u·n1+2
t&amp;mdash;&amp;ndash;un1+ u·n– =
u·n1+21–
t&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;un1+ 1–u·n– =

&amp;mdash; 21– =
1f–2
4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
40.5f–
1f–2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 21– =
1–f22f– + 0=
f2– 41– 
21–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
1–
1+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;f=&lt;/p&gt;
&lt;p&gt;817 Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)
Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)
Main Index
(2-9)
For GEN-ALPHA method, numerical damping may be written as
(NDAMP) (2-10)
(NDAMPM) (2-11)
If = 0.01 used in SOL 129, Eq. (1-6) may be rewritten as:
(2-12)
Its solution is f =-0.111, the corresponding spectral radius  is around 0.8. Therefore, the numerical
damping used in SOL 400 will be
f = - 0.444 NDAMP (2-13)
m = - 0.333 NDAMPM (2-14)
Also, if = 0.1 used in SOL 129, the corresponding numerical damping used in SOL 400 will be
f = - 0.26876 NDAMP (2-15)
m = - 0.193713 NDAMPM (2-16)1f+
1f–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
f–
1+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
m12–
1+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
0.99f20.02f0.01 – + 0=&lt;/p&gt;
&lt;p&gt;818 Nonlinear User’s Guide
Conversion of NDAMP in SOL 129 (NEWMARK-BETA) to NDAMP (HHT), and NDAMP/NDAMPM (GEN-ALPHA)
Main Index&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P5</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_005/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_005/</guid>
      <description>
        
        
        &lt;p&gt;63 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
Figure 3-8  Description of Motion
Total Lagrangian Procedure
The total Lagrangian procedure can be used for linear or nonlinear materials, in conjunction with static or dynamic analysis.
Although this formulation is based on the initial element geometry, the incremental stiffness matrices are formed to account
for previously developed stress and changes in geometry.
This method is particularly suitable for the analysis of nonlinear elastic problems (for instance, with the Mooney or Ogden
material model). The total Lagrangian approach is also useful for problems in plasticity and creep, where moderately large
rotations but small strains occur. A case typical in problems of beam or shell bending. However, this is only due to the
approximations involved.
In the total Lagrangian approach, the equilibrium can be expressed by the principle of virtual work as:
(3-1)
Here Sij is the symmetric second Piola-Kirchhoff stress tensor, Eij, is the Green -Lagrange strain,  is the body force in the
reference configuration,  is the traction vector in the reference configuration, and i is the virtual displacements.
Integrations are carried out in the original configuration at t = 0. The strains are decomposed in total strains for equilibrated
configurations and the incremental strains between t = n  and t = n+ 1 as:
(3-2)
while the incremental strains are further decomposed into linear,  and nonlinear,  parts as:Reference
t = 0Current
t = n + 1Previous
t = n
un + 1
Ff
u
Fn
un
Fn+1 = Fn
SijEijVd
V0bi0iV ti0iAd
A0+d
V0=
bi0
ti0
Eijn1+EijnEij+ =
EijEijnl&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations64
Main Index
where El is the linear part of the incremental strain expressed as:
(3-3)
The second term in the bracket in equation (3-3) is the initial displacement effect.  Enl is the nonlinear part of the
incremental strain expressed as:
(3-4)
Linearization of equilibrium of equation (3-1) yields:
(3-5)
where K0 is the small displacement stiffness matrix defined as
K1 is the initial displacement stiffness matrix defined as
in the above equations,  and  are the constant and displacement dependent symmetric shape function gradient
matrices, respectively, and Dmnpq is the material tangent,
and K2 is the initial stress stiffness matrix
in which  Skl  is the second Piola -Kirchhoff stresses and Ni,k is the shape function gradient matrix.
Also, u is the correction displacement vector. F and R are the external and internal forces, respectively.
This Lagrangian formulation can be applied to problems if the undeformed configuration is known so that integrals can be
evaluated, and if the second Piola-Kirchhoff stress is a known function of the strain. The first condition is not usually met EijEijEn
ij+ =
E1
2&amp;mdash;ui
Xj&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;uj
Xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +1
2&amp;mdash;ukn
Xi&amp;mdash;&amp;mdash;&amp;mdash;
uk
Xj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
+ =
En 1
2&amp;mdash;uk
Xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
uk
Xj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
ukn
Xj&amp;mdash;&amp;mdash;&amp;mdash;
uk
Xi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
+ =
K0K1K2+ + u FR– =
K0ijimn0Dmnpqpqj0Vd
V0=
K1ijimnuDmnpqpqjuimnuDmnpqpqj0imnuDmnpqpqju+ +  Vd
V0=
imn0imnu
K2ijNikNjlSklVd
V0=&lt;/p&gt;
&lt;p&gt;65 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
for fluids, because the deformation history is usually unknown. For solids, however, each analysis usually starts in the stress-
free undeformed state, and the integrations can be carried out without any difficulty.
For elastic-plastic and viscoplastic materials, the constitutive equations usually supply an expression for the rate of stress in
terms of deformation rate, stress, deformation, and sometimes other (internal) material parameters. The relevant quantity
for the constitutive equations is the rate of stress at a given material point.
It, therefore, seems most obvious to differentiate the Lagrangian virtual work equation with respect to time. The rate of
virtual work is readily found as
(3-6)
This formulation is adequate for most materials, because the rate of the second Piola -Kirchhoff stress can be written as
(3-7)
For many materials, the stress rate is even a linear function of the strain rate
(3-8)
Equation (3-6) supplies a set of linear relations in terms of the velocity field. The velocity field can be solved noniteratively
and the displacement can be obtained by time integration of the velocities.
The second Piola-Kirchhoff stress for elastic and hyperelastic materials is a function of the Green-Lagrange strain defined
below:
Sij = Sij(Ekl) (3-9)
If the stress is a linear function of the strain (linear elasticity)
Sij = DijklEkl (3-10)
the resulting set of equations is still nonlinear because the strain is a nonlinear function of displacement.
Updated Lagrangian Procedure
The updated Lagrange formulation takes the reference configuration at t = n+ 1. T rue or Cauchy stress and an energetically
conjugate strain measure, namely the true strain, are used in the constitutive relationship.
The updated Lagrangian approach is useful in:
analysis of shell and beam structures in which rotations are large so that the nonlinear terms in the curvature
expressions may no longer be neglected, and
large strain plasticity analysis, for calculations which the plastic deformations cannot be assumed to be
infinitesimal.
contact problems where it is easier to express the constraints with respect to the current state.S·
ijEijSijvk
Xi&amp;mdash;&amp;mdash;&amp;ndash;k
Xj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; + dV
V0b·
iidV t·
iidA
A0+
V0=
S·
ijS·
ijE·
klSmnEpq  =
S·
ijDijklSmnEpqE·
kl=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations66
Main Index
In general, this approach can be used to analyze structures where inelastic behavior (for example, plasticity, viscoplasticity,
or creep) causes the large deformations. The (initial) Lagrangian coordinate frame has little physical significance in these
analyses since the inelastic deformations are, by definition, permanent. For these analyses, the Lagrangian frame of reference
is continuously being redefined.
It is instructive to derive the stiffness matrices for the updated Lagrangian formulation starting from the virtual work
principle in equation (3-9).
Direct linearization of the left-hand side of equation (3-9) yields:
(3-11)
where u and  are actual incremental and virtual displacements respectively, and kj is Cauchy stress tensor.
(3-12)
S denotes the symmetric part of , which represents the gradient operator in the current configuration. Also, in equations
(3-11) and (3-12), three identities are used:
(3-13)
in which Dmnpq represents the material moduli tensor in the reference configuration which is convected to the current
configuration, Lijkl. This yields:
{K1 + K2}u = F - R (3-14)
where K1 is the material stiffness matrix written as
in which imn is the symmetric gradient operator-evaluated in the current configuration and kl is the Cauchy stresses and
K2 is the geometric stiffness matrix written asSijEij dVd
V0ikkjuijvd
Vn1+=
SijEijd Vd
V0sijLijklsuklvd
Vn1+=
ij1
J&amp;mdash;FimSmnFjn=
EijFmismnFnj=
Lijkl1
J&amp;mdash;FimFjnFkpFlqDmnpq=and
K1ijimnLmnpqpqj
Vn1+=&lt;/p&gt;
&lt;p&gt;67 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
while F and R are the external and internal forces, respectively.
Keeping in view that the reference state is the current state, a rate formulation analogous to equation (3-6) can be obtained
by setting:
(3-15)
where F is the deformation tensor, and d is the rate of deformation. Hence,
(3-16)
in which  bi and ti is the body force and surface traction, respectively, in the current configuration
In this equation,  is the T ruesdell rate of Cauchy stress which is essentially a Lie derivative of Cauchy stress obtained as:
(3-17)
The T ruesdell rate of Cauchy stress is materially objective implying that if a rigid rotation is imposed on the material, the
Truesdell rate vanishes, whereas the usual material rate does not vanish. This fact has important consequences in the large
deformation problems where large rotations are involved. The constitutive equations can be formulated in terms of the
Truesdell rate of Cauchy stress as:&lt;/p&gt;
&lt;p&gt;Specifying the Geometric Nonlinearity Formulation in SOL 400
Selection of the geometric nonlinearity formulation in MSC Nastran is made on the NLMOPTS,LRGSTRN  bulk data
entry. If you do not select an option, SOL 400 will select what it thinks to be the best option based on the content of the
model.
Selection of the geometric nonlinearity formulation in MSC Nastran is primarily made through the PARAM,LGDISP,N&lt;br&gt;
option which varies from -1 to 2.
N = -1: no geometric nonlinearity
N = 0: compute differential stiffnessK2ijklNikNjlvd
Vn1+=
Fijij      Eij dij      
Xi&amp;mdash;&amp;mdash;&amp;ndash;
xi&amp;mdash;&amp;mdash;-      Sij ij= = = =
ijdijijvk
xi&amp;mdash;&amp;mdash;&amp;ndash;k
xj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; + dv
Vn1+b·
iidv
Vn1+t·
iida
An1++ =
ij
ijFinJFnk1–klFml1– ·
= Fmj
ijLijk  dk=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations68
Main Index
For advanced nonlinear elements (identified through PSHLN1,PSLDN1,PSHLN2,PBARN1,PBEMN1 ), an optional
control on the specific geometric nonlinear formulation is provided through the NLMOPTS,LRGSTRN,M option, where
M varies from -1 to 2.N = 1: large displacement effects and follower forces
N = 2: large displacement effects, no follower forces
M = -1: turns off large displacement effects for advanced nonlinear elements (supercedes PARAM,LGDISP  setting).
M = 0: defaults to setting PARAM,LGDISP,N .
M = 1: generally sets flags for Updated Lagrange, Additive. Internally switches to Total Lagrange or Updated
Lagrange Multiplicative for specific material/element types (shown in the following table).
M = 2: generally sets flags for Updated Lagrange, Multiplicative. Internally switches to Updated Lagrange, Additive
for specific material/element types (shown in the following table).
Note:   PARAM,LGDISP,0,1,  or 2 automatically turns on NLMOPTS,LRGSTRN,1  for the advanced nonlinear
elements.
Table 3-2  Large Displacement Formulation used in conjunction with PARAM,LGDISP,1 or 2 or NLMOPTS,LRGSTRN,1
Incompressible Solid
Element Displacement Element – not
plane stressDisplacement Element – plane
stress
No Yield Updated Lagrange – FeFpUpdated Lagrange Additive –
FiniteUpdated Lagrange Additive
“ELASTIC” Updated Lagrange – FeTotal Lagrange Total Lagrange
von Mises Yield Updated Lagrange – FeFpUpdated Lagrange Additive –
FiniteUpdated Lagrange Additive –
Finite
Other Yield Criteria Not Available Updated Lagrange Additive –
FiniteUpdated Lagrange Additive –
Finite&lt;/p&gt;
&lt;p&gt;69 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
Material Nonlinearities
In a large strain analysis, it is usually difficult to separate the kinematics from the material description. The following table
lists the characteristics of some common materials.Table 3-3  Large Displacement Formulation used in conjunction with NLMOPTS,LRGSTRN,2
Incompressible Solid
Element Displacement Element – not
plane stressDisplacement Element – plane
stress
No Yield Updated Lagrange – FeFpUpdated Lagrange FeUpdated Lagrange Additive
“ELASTIC” Updated Lagrange – FeUpdated Lagrange – FeTotal Lagrange Additive
von Mises Yield Updated Lagrange – FeFpUpdated Lagrange – FeFpUpdated Lagrange Additive –
Finite
Other Yield Criteria Not Available Updated Lagrange Additive –
FiniteUpdated Lagrange Additive –
Finite
Material Characteristics Examples Models
Composites Anisotropic:
1.layered, dsij = Cijkl dkl
21 constants
2.Fiber reinforced,
one-dimensional strain in fibersAircraft panels,
Tires, biological
materialComposite
continuum elements
Creep Strains increasing with time under
constant load.
Stresses decreasing with time under
constant deformations.
Creep strains are non -instantaneous.Metals at high
temperatures,
polymide filmsNorton
Maxwell
Elastic Stress functions of instantaneous strain
only. Linear load-displacement relation.Small deformation
(below yield) for
most materials:
metals, glass, woodHookes Law
Elastoplasticity Yield condition flow rule and hardening
rule necessary to calculate stress, plastic
strain. Permanent deformation upon
unloading.Metals von Mises Isotropic
Hill’s AnisotropicSE
2&amp;mdash;TtCT1–  =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations70
Main Index
A complete description of the material types mentioned in the table is given in Chapter 10: Materials . However, some
notable characteristics and procedural considerations of some commonly encountered materials behavior are listed next.
Inaccuracies in experimental data, misinterpretation of material model parameters and errors in user-defined material law
are some common sources of error in the analysis from the materials viewpoint. It is useful to check the material behavior
by running a small model with prescribed displacement and load boundary conditions in uniaxial tension and shear (single
element tests are not recommended).
Elastomers
Structures composed of elastomers, such as tires and bushings, are typically subjected to large deformation and large strain.
An elastomer is a polymer, such as rubber, which shows a nonlinear elastic stress-strain behavior. These materials are
characterized by the form of their elastic strain energy function.
For the finite element analysis of elastomers, there are some special considerations that do not apply for linear elastic
analysis. These considerations include:
Mesh Distortion
Incompressible Behavior
Instabilities
Existence of Multiple Solutions
Mesh Distortions
When extremely large deformations occur, the element mesh should be designed so that it can follow these deformations
without complete degeneration of elements. This problem is more prevalent when the updated Lagrange procedure is used.
For problems involving extreme distortions, the Marc global adaptive remeshing capability should be used.
Incompressible Behavior
One of the most frequent causes of problems analyzing elastomers is the incompressible material behavior. Lagrangian
multipliers (pressure variables) are used to apply the incompressibility constraint. The result is that the volume is kept
constant in a generalized sense, over an element.Hyperelastic Stress function of instantaneous strain.
Nonlinear load-displacement relation.
Unloading path same as loading.Tires, Bushings,
SealsMooney
Ogden
Arruda Boyce
Gent
Foam
Hypoelastic Rate form of stress-strain law Concrete NLELAST
Viscoelastic Time dependence of stresses in elastic
material under loads. Full recovery after
unloading.Rubber
GlassSimo Model
NarayanaswamyMaterial Characteristics Examples Models&lt;/p&gt;
&lt;p&gt;71 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
The Lagrange formulation is implemented with appropriate constraint ratios for lower- and higher-order elements in 2-D
and 3-D.
The large strain elasticity formulation may also be used with conventional plane stress, membrane, and shell elements.
Because of the plane stress conditions, the incompressibility constraint are automatically satisfied.
Instabilities
Under some circumstances, materials can become unstable. This instability can be real or can be due to the mathematical
formulation used in the calculations.
Instability can also result from the approximate satisfaction of incompressibility constraints. If the number of constraints is
insufficient, local volume changes can occur. Under some circumstances, these volume changes can be associated with a
decrease in total energy. This type of instability usually occurs only if there is a large tensile hydrostatic stress. Similarly, over
constraints give rise to mesh locking and inordinate increase in total energy under large compressive stresses.
Existence of Multiple Solutions
It is possible that more than one stable solution exists (due to nonlinearity) for a given set of boundary conditions. An
example of such multiple solutions is a hollow hemisphere with zero prescribed loads. T wo equilibrium solutions exist: the
undeformed stress-free state and the inverted self-equilibrating state. An example of these solutions is shown in Figure 3-9
and Figure 3-10. If the equilibrium solution remains stable, no problems should occur; however, if the equilibrium becomes
unstable at some point in the analysis, problems can occur.
Figure 3-9  Rubber Hemispherey
x&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations72
Main Index
Figure 3-10  Inverted Rubber Hemisphere
When incompressible material is being modeled, the basic linearized incremental procedure is used in conjunction with
mixed variational principles similar in form to the Herrmann incompressible elastic formulation. These formulations are
incorporated in plane strain, axisymmetric, and 3-D elements. These mixed elements may be used in combination with
other elements in the library (suitable constraint equations may be necessary) and with each other. Where different materials
are joined, the pressure variable at the corner nodes must be uncoupled to allow for mean pressure discontinuity. MPC’s
must be used to couple the displacements only.
Plasticity
In recent years there has been a tremendous growth in the analysis of metal forming problems by the FEM. Although an
Eularian flow-type approach has been used for steady-state and transient problems, the updated Lagrangian procedure,
pioneered by McMeeking and Rice, is most suitable for analysis of large strain plasticity problems. The main reasons for
this are: (a) its ability to trace free boundaries, and (b) the flexibility of taking elasticity and history effects into account.
Also, residual stresses can be accurately calculated.
The large strain plasticity capability in SOL 400 allows you to analyze problems of large-strain, elastic-plastic material
behavior. These problems can include manufacturing processes such as forging, upsetting, extension or deep drawing,
and/or large deformation of structures that occur during plastic collapse. The analysis involves both material, geometric and
boundary nonlinearities.
In performing finite deformation elastic-plastic analysis, there are some special considerations which do not apply for linear
elastic analysis. These considerations include:
Choice of Finite Element Typesy
x&lt;/p&gt;
&lt;p&gt;73 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
Nearly Incompressible Behavior
Severe Mesh Distortion
Instabilities
Choice of Finite Element Types
Accurate calculation of large strain plasticity problems depends on the selection of adequate finite element types. In addition
to the usual criteria for selection, two aspects need to be given special consideration: the element types selected need to be
insensitive to (strong) distortion; for plane strain, axisymmetric, and 3-D problems, the element mesh must be able to
represent nondilatational (incompressible) deformation modes.
Nearly Incompressible Behavior
Most finite element types tend to lock during fully plastic (incompressible) material behavior. A remedy is to introduce a
modified variational principle which effectively reduces the number of independent dilatational modes (constraints) in the
mesh. This procedure is successful for plasticity problems in the conventional “small” strain formulation. Zienkiewicz
pointed out the positive effect of reduced integration for this type of problem and demonstrates the similarity between
modified variational procedures and reduced integration. We recommend the use of lower-order elements, invoking the
constant dilatation option with certain exceptions such as 4-node tetrahedrals. The lower-order elements, which use
reduced integration and hourglass control, also behave well for nearly incompressible materials.
Severe Mesh Distortion
Because the mesh is attached to the deforming material, severe distortion of the element mesh often occurs, which leads to
a degeneration of the results in many problems. If this occurs, use the Marc global remeshing capability.
Instabilities
Elastic-plastic structures are sometimes unstable due to necking phenomena. Consider a rod of a rigid-plastic
incompressible workhardening material. With  the current true uniaxial strain rate and H the current workhardening, the
rate of true uniaxial stress is equal to
(3-18)
The applied force is equal to F = A, where A is the current area of the rod. The rate of the force is therefore equal to
(3-19)
On the other hand, conservation of volume requires that
(3-20)
Hence, the force rate can be calculated as·
·
·H·=
F·
·AA·+ =
A·
A·&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations74
Main Index
(3-21)
Instability clearly occurs if &amp;gt; H. For applied loads (as opposed to applied boundary conditions), the stiffness matrix
becomes singular (nonpositive definite).
For the large strain plasticity option, the workhardening slope for plasticity is the rate of true (Cauchy) stress versus the true
(logarithmic) plastic strain rate. The workhardening curve must, therefore, be entered as the true stress versus the
logarithmic plastic strain in a uniaxial tension test.
In SOL 400, two formats are provided for data entry:
a.true stress vs. logarithmic plastic strain
b.true stress vs. logarithmic total strain.
Data provided in format b is internally converted to format a by the program.
Creep
Creep is a time-dependent inelastic behavior that can occur at any stress level, either below or above the yield stress of a
material. Creep is an important factor at elevated temperatures. In many cases, creep is also accompanied by plasticity,
which occurs above the yield stress of the material.
Conventional creep behavior is based on a von Mises creep potential with isotropic behavior described by the equivalent
creep law:
The material behavior is therefore described by:
where  is the outward normal to the current von Mises stress surface and  is the equivalent creep strain rate.
There are two numerical procedures used in implementing creep behavior. The default is an explicit procedure in which
the above relationship is implemented in the program by an initial strain technique. In other words, a pseudo-load vector
due to the creep strain increment is added to the right-hand side of the stiffness equation.
where K is the stiffness matrix, and u and P a re incremental displacement and incremental nodal force vectors,
respectively. The integral:F·H–A·=
·cr
fcrTt,,, =
cr·cr
&amp;mdash;&amp;mdash;&amp;ndash;t =

&amp;mdash;&amp;mdash;&amp;ndash; ·cr
KuPT
VDcrdv + =&lt;/p&gt;
&lt;p&gt;75 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Effects and Formulations
Main Index
is the pseudo-load vector due to the creep strain increment in which  is the strain displacement relation and D is the stress-
strain relation. When plasticity is also specified through a suitably defined yield criterion and yield stress in MSC Nastran,
the plasticity is treated implicitly while the creep is treated explicitly.
As an alternative, an implicit creep procedure can be requested. In this case, the inelastic strain rate has an influence on the
stiffness matrix. Using this technique, significantly larger steps in strain space can be used. This option is only to be used
for isotropic materials with the creep strain rate defined by a creep constant.
Viscoelasticity
In certain problems, structural materials exhibit viscoelastic behavior. T wo examples of these problems are quenching of
glass and time-dependent deformation of polymeric materials. The viscoelastic material retains linearity between load and
deformation; however, this linear relationship depends on time. Consequently, the current state of deformation must be
determined from the entire history of loading. Different models consisting of elastic elements (spring) and viscous elements
(dashpot) can be used to simulate the viscoelastic material behavior described in Chapter 10: Materials . Both the equation of
state and the hereditary integral approaches can be used for viscoelastic analysis.
A special class of temperature dependence known as the Thermo-Rheologically Simple behavior (TRS) is also applicable to
a variety of thermal viscoelastic problems. T o model the thermo-rheologically simple material behavior, MATTVE  can be
used to choose the Williams-Landel-Ferry equation or the power series expression or Narayanaswamy model.
In SOL 400, two options are available for small strain viscoelastic analysis. The first option uses the equation of state
approach and represents a Kelvin model. The second option is based on the hereditary integral approach and allows the
selection of a generalized Maxwell model. The thermo-rheologically simple behavior is also available in the second option
for thermal viscoelastic analysis. For additional details, see Viscoelastic  in Chapter 10: Materials .
The Simo model for large strain viscoelasticity can be used in conjunction with the damage and hyperelastic Mooney,
Ogden, Gent, or Arruda Boyce material model. The large strain viscoelastic material behavior can be simulated by
incorporating MATVE .
Viscoplasticity Procedures
There are two procedures in SOL 400 for viscoplastic analysis: explicit and implicit. A brief description of each procedure
follows:
Explicit Method
The elasto-viscoplasticity model in SOL 400 is a modified creep model to which a plastic element is added. The plastic
element is inactive when the stress is less than the yield stress of the material. You can use the elasto-viscoplasticity model
to solve time-dependent plasticity and creep as well as plasticity problems with a nonassociated flow law.
The NLMOPTS,CREEP  entry in SOL 400 has been modified to enable solving problems with viscoplasticity. The method
is modified to allow solving elastic-plastic problems with nonassociated flow rules which result in nonsymmetric stress-
strain relations if the tangent modulus method is used.T
VDcrdv&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Effects and Formulations76
Main Index
NLMOPTS,CREEP  controls allow you to select the procedure used to perform the time integration. If the explicit method
is used, then the time step must be small, but if the material is elastic and small deformation, no reassembly of the stiffness
matrix is required. If the implicit method is chosen, then larger time steps may be used, but reassembly occurs at every
increment.
In thermal creep simulations, it is necessary that the time step be chosen to satisfy accuracy of both the rate independent
thermal stress problem and the rate dependent creep problem. To insure that this occurs, the NLSTEP, GENERAL,
CREEP  bulk data option has been introduced.
The viscoplastic approach converts an iterative elastic-plastic method to one where a fraction of the initial force vector is
applied at each increment with the time step controls. The success of the method depends on the proper use of the
automatic creep time step controls. This means that it is necessary to select an initial time step that will satisfy the tolerances
placed on the allowable stress change.
The initial time step
The allowable stress change is specified in the creep controls. The most highly stressed element usually yields the maximum
strain rate. It is also important to select a total time that gives sufficient number of increments to work off the effects of the
initial force vector. A total time of 30 times the estimated t is usually sufficient.
SOL 400 does not distinguish between viscoplastic and creep strains.
Since the viscoplasticity model in SOL 400 is a modified creep model, you can learn more about the details of viscoplastic
analysis control by reading the discussion later in this chapter, and elsewhere in this manual, on the creep analysis procedure.
Nonlinear Boundary Conditions
There are three types of nonlinear boundary conditions: contact, nonlinear support, and nonlinear loading. The contact
problem is solved using the  BCONTACT  case control specification. Nonlinear support might involve nonlinear springs.
Sometimes nonlinearities due to rigid links that become activated or deactivated during an analysis can be modeled through
adaptive linear constraints.
Discontinuities are inherent in the nature of many of these nonlinearities, making the solution more challenging. Some of
the most severe nonlinearities in mechanics are introduced by nonlinear boundary conditions. It is, therefore, very
important to be aware of potential problem areas and to have a good understanding of the underlying principles. This
awareness and understanding enables you to validate numerical answers and to take alternative approaches if an initial
attempt fails.
Nonlinear Loading
When the structure is deformed, the directions and the areas of the surface loads are changed. For most deformed structures,
such changes are so small that the effect on the equilibrium equation can be ignored. For some structures, such as flexible
shell structure with large pressure loads, the effects on the results can be quite significant so that the surface load effects have
to be included in the finite element equations.
SOL 400 forms both pressure stiffness and pressure terms (follower force) based on current deformed configuration with
MSC Nastran’s PARAM,LGDISP1  option. Point forces may also be updated with deformation.tallowable stress change 0.7
Maximum viscoplastic strain rateYoungs modulus &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;77 Chapter 3: Nonlinearity and Analysis Types
Overview of Analysis Types
Main Index
Overview of Analysis Types
A large class of stress analysis problems can be solved with SOL 400. A fundamental division of stress problems is whether
a static, transient dynamics, or perturbation analysis is to be performed. In a dynamic response, the inertia effects are
important. SOL 400 allows complete flexibility in making this distinction, so that the same analysis may contain several
static, dynamic, and pertubation phases.
An important aspect of the flexibility is the manner in which MSC Nastran SOL 400 allows you to step through the loading
history to be analyzed. This is accomplished by defining the job steps for the analysis.
A basic concept in MSC Nastran SOL 400 is the division of the problem history into job steps. A clear distinction is made
in MSC Nastran SOL 400 between linear analysis and nonlinear analysis procedures. Loading conditions are defined
differently for the two cases, time measures are different, and the results should be interpreted differently. A step is any
convenient phase of the history – a thermal transient, a creep period, a dynamic transient, etc. In its simplest form, a “step”
is just a static analysis of a load change from one magnitude to another. In each “step”, you choose the solution type. This
defines the type of analysis to be performed during the step: dynamic stress analysis, eigenvalue buckling, transient heat
transfer analysis, etc. The procedure choice may be changed from step to step in any meaningful way, so that you have great
flexibility in performing analyses. Since the state of the model (stresses, strains, temperatures, etc.) is updated throughout
all nonlinear analysis steps, the effects of previous history are always included in the response in each new step. Thus, for
example, if natural frequency extraction is performed after a geometrically nonlinear static analysis step, the preload stiffness
will be included. Superposition cannot be applied in nonlinear problems. In general, a different loading sequence
(reordering of the steps) requires a complete new analysis.
In a nonlinear static analysis, you first determine the total value of loading to be applied at a particular stage of the analysis.
This loading value is selected with the  LOAD  case control command specifying a load set ID that exists in the bulk data.
In this case, the step functions as a type of landmark in the loading history. It may be an expected point or a point at which
the nature of the loading changes (for example, first applying an internal pressure loading and then an axial loading on a
cylinder). The steps is a major partition of the loading history. The loading history should be divided into subcases since
this provides you with more control over the solution and restart strategy.
An analysis step during which the response may be nonlinear is called a general analysis step. An analysis step during which
the response may only be linear is called a linear perturbation analysis step. Since MSC Nastran SOL 400 treats such linear
analysis as a linear perturbation about a preloaded, predeformed state, its capability for doing linear analysis is rather more
general than that of a purely linear analysis program.
General Nonlinear Analysis
A general analysis step is one in which nonlinear effects are included (although this is not necessary – it is possible to define
a problem using general analysis procedures so that the response is entirely linear). The starting condition for each general
step is generally the ending condition from the last general step, with the state of the model evolving throughout the history
of general, nonlinear analysis steps as it responds to the history of loading.
In a general, nonlinear analysis step the loads must be defined as total values. MSC Nastran SOL 400 always considers total
time to increase throughout the general, nonlinear analysis. Each step also has its own step time, which begins at zero in
each step. If the analysis procedure for the step has a physical time scale, as in a dynamic analysis, “step time” corresponds
to that physical time. Otherwise, step time is any convenient time scale, typically 0.0-1.0, for the step. The step times of all
general nonlinear analysis steps accumulate into total time.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of Analysis Types78
Main Index
Nonlinear Static – ANALYSIS = NLSTATICS
Nonlinearity may arise from large displacement effects, material nonlinearity and boundary nonlinearity (such as contact
and friction). This behavior requires the solution by a series of increments, with iteration within each increment to obtain
equilibrium. For most cases, the automatic incrementation provided by SOL 400 is preferred, although direct user control
is also provided for those cases where you have experience with a particular problem.
For static analysis, which involves post buckling behavior, where the load-displacement response shows a negative stiffness,
and the structure must release strain energy to remain in equilibrium, an automatic load incrementation procedure must
be used.
For local buckling, a quasi-static damping procedure via the ADAPT  option on the NLSTEP  bulk data entry may be used.
However, this option only works in conjunction with advanced nonlinear elements. For global buckling, an arc length based
procedure via the ARCLN  option on the NLSTEP  bulk date entry may be used. This option only works for non-contact
scenarios.
Nonlinear Transient Dynamic – ANALYSIS = NLTRAN
This solution type is used when the transient dynamic response, which includes inertial effects, is being studied.  When
nonlinear behaviors are included in the problem, the direct integration method,  ANALYSIS = NLTRAN,  must be used.
For most cases, the automatic load incrementation method provided by NLSTEP  is preferred, although direct user control
is also provided for those cases where you have experience with a particular problem. For linear transient dynamic analysis,
the MTRAN  perturbation method as discussed below should be used.
Creep – ANALYSIS = NLSTATICS
This analysis procedure performs a transient, static, stress/displacement analysis. It is especially provided for the analysis of
materials which are described by the MATVP material form. The time integration method is controlled by (and described
under) the NLSTEP  bulk data entry.
Viscoelastic – ANALYSIS = NLSTATICS
This is especially provided for the time domain analysis of materials which are described by the MATVE  material options.
The dissipative part of the material behavior is defined through a Prony series representation of the normalized shear and
bulk relaxation moduli. The time integration method is controlled the same as a creep analysis using (and described under)
the NLSTEP  bulk data entry.
Heat Transfer Procedures – ANALYSIS = HSTAT or HTRAN
Heat transfer problems including conduction, forced convection, and boundary radiation and convection can be solved
with MSC Nastran SOL 400. The problems can be transient or steady-state, linear or nonlinear. The heat transfer elements
allow for heat storage (specific heat) and heat conduction, and also allow for forced convection caused by fluid flowing
through the mesh. Heat interface elements are also provided, to model the heat transfer across the boundary layer between
a solid and a fluid, or between two closely adjacent solids. Shell-type heat transfer elements are included, since so many
structures are of this type. The second order elements usually give more accurate results for the same number of nodes in
the mesh. Analyses that involve both thermal and mechanical solutions are referred to in SOL 400 as multi-physics
solutions.&lt;/p&gt;
&lt;p&gt;79 Chapter 3: Nonlinearity and Analysis Types
Overview of Analysis Types
Main Index
Linear Analysis
Linear analysis is obtained by considering the response in the step as the linear perturbation response about the base state.
The base state is the current state of the model at the end of the last general, nonlinear analysis step prior to the linear
perturbation step. Thus, the concept of linear analysis in MSC Nastran SOL 400 is rather general. A simple example of the
value of this generalization is the natural frequencies of a violin string under increasing tension. In this case, geometrically
nonlinear analysis of the string can be done in several steps, in each of which the tension is increased. At the end of each
such step, the frequencies can be extracted in a linear perturbation analysis step.
Load magnitudes (including the magnitudes of prescribed boundary conditions), during a linear perturbation analysis step,
are defined as the magnitudes of the load perturbations only.
Likewise, the value of any solution variable is output as the perturbation value only – the value of the variable in the base
state is not included.
During a linear perturbation analysis step, the model’s response is defined by its linear elastic stiffness at the base state.
Plasticity and other inelastic effects are ignored. For hyperelastic materials, the tangent elastic moduli in the base state are
used. Contact conditions cannot change during a perturbation analysis – they remain as they are defined in the base state.
Frictional slipping is not allowed during perturbation analyses – all points in contact are assumed to be sticking if friction
is present. If geometric nonlinearity is included in the general, nonlinear analysis upon which the linear perturbation study
is being based, stress stiffening or softening effects and (pressure and other follower force) load stiffness effects are included
in the linear perturbation analysis. In this case, perturbation stresses and strains are defined relative to the base state
configuration. The effects of temperature and field variable perturbations are ignored for materials that are dependent on
temperature and field variables. However, temperature perturbations will produce perturbations of thermal strain. Some
procedures are purely linear perturbation procedures. These are:
Linear Statics – ANALYSIS = STATICS
Bifurcation Buckling – ANALYSIS = BUCK
Natural Frequency – ANALYSIS = MODES
Modal Linear Transient –  ANALYSIS = MTRAN
Modal Complex Eigenvalue – ANALYSIS = MCEIG
Linear perturbation analysis may be performed from time to time during a fully nonlinear analysis. This is done by
continuing the nonlinear response steps between the linear perturbation steps. The linear perturbation response has no
effect as the nonlinear analysis is continued. Generally, dynamic analyses may not be interrupted to perform perturbation
analyses: before performing the perturbation analysis, MSC Nastran SOL 400 requires that the structure be brought into
static equilibrium.
Modal linear transient analysis and linear static analysis are done in the time domain. The step time of linear perturbations
is never accumulated into the total time. For linear static perturbations the step time always begins at zero for each new step.
Linear Perturbation Analysis
In SOL 400, the ANALYSIS  case control command may be used to define a ‘linear’ perturbation analysis STEP .
Pertubation analysis implies a linearized solution about a nonlinear, preloaded state. The preloaded state may be either a
nonlinear static, nonlinear transient analysis, or a thermo-mechanically coupled analysis. When performing a perturbation
analysis in SOL 400 with large displacement activated:&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of Analysis Types80
Main Index
The preload will be performed including large displacements and other material nonlinearities.
The stress obtained will be included in the initial stress stiffness of the perturbation step.
Linear Static – ANALYSIS = STATICS
Static stress analysis is used when inertia effects can be neglected. The problem may still have a real time scale, for example
when the material has a viscoplastic response, such as rate dependent yield. The analysis may be linear or nonlinear.
Linear static analysis involves the specification of load cases and appropriate boundary conditions.T raditionally, linear static
analysis is performed using SOL 101.
Normal Modes – ANALYSIS = MODES
This solution type uses eigenvalue techniques to extract the frequencies of the current system. The stiffness determined at
the end of the previous step is used as the basis for the extraction, so that small vibrations of a preloaded structure or
nonlinearly deformed structure can be modeled.
An example is:
STEP 1
$ LOAD STRUCTURE
LOAD= 100
NLPARM= 100
STEP 2
$ NORMAL MODES
ANALYSIS= MODES
METHOD= 100
DISP= ALL
STEP 3
$ FREQUENCY RESPONSE
ANALYSIS= DFREQ
SET 100= 1 THRU 1000
DISP= 100
STEP 4
$ CONTINUE LOADING STRUCTURE
LOAD= 200
NLPARM= 100
DISP= ALL
STEP 5
$ NORMAL MODES AT THE NEW LOADING
ANALYSIS= MODES
In the previous example, steps 2 and 3 will use the results from step 1, step 4 will continue the loading application, and step
5 will use the results from step 4. For the ‘linear’ analyses, the mass matrix will be based on the undeformed geometry and
the damping matrix will be generated using the deformed geometry. This will allow analyses of ‘large’ displacement results
(PARAM, LGDISP,1 ), in addition to material nonlinear analyses. User input of the ‘stressed’ or deformed geometry.
Modal Linear Transient Dynamic – ANALYSIS = MTRAN
Depending upon the structure and the nature of the loading, two different numerical methods can be used for a transient
response analysis: direct and modal. The direct method ( DTRAN ) performs a numerical integration on the complete
coupled equations of motion. The modal method utilizes the mode shapes of the structure to reduce and uncouple the&lt;/p&gt;
&lt;p&gt;81 Chapter 3: Nonlinearity and Analysis Types
Overview of Analysis Types
Main Index
equations of motion (when modal or no damping is used); the solution is then obtained through the summation of the
individual modal responses. ANALYSIS = MTRAN  (modal transient) is used when the transient dynamic response of a
linear system, which includes inertial effects, is being studied. Since the use of modal transient analysis is covered completely
in the MSC Nastran Dynamic Analysis User’s Guide , it will not be covered in this manual.
Note that Direct Linear T ransient Dynamic method, i.e., ANALYSIS=DTRAN, is not supported in SOL 400.
Direct and Modal Frequency Response – ANALYSIS = DFREQ, MFREQ
Frequency response analysis is a method used to compute structural response to steady-state oscillatory excitation. Examples
of oscillatory excitation include rotating machinery, unbalanced tires, and helicopter blades. In frequency response analysis
the excitation is explicitly defined in the frequency domain. All of the applied forces are known at each forcing frequency.
Forces can be in the form of applied forces and/or enforced motions (displacements, velocities, or accelerations).
Two different numerical methods can be used in frequency response analysis. The direct method ( ANALYSIS = DFREQ)
solves the coupled equations of motion in terms of forcing frequency. The modal method (ANALYSIS = MFREQ)  utilizes
the mode shapes of the structure to reduce and uncouple the equations of motion.
Direct and Modal Complex Eigenvalue – ANALYSIS = DCEIG, MCEIG
Complex eigenvalue analysis is used to compute the damped modes of structures and assess the stability of systems modeled
with transfer functions (including servomechanisms and rotating systems).
Complex eigenvalue analysis solves for the eigenvalues and mode shapes similar to normal modes analysis except that
damping is added and the eigenvalue is now complex. In addition, the mass, damping, and stiffness matrices may be
unsymmetric, and they may contain complex coefficients.
Multi-Stepping in SOL 400
The ANALYSIS  entry is used in solution sequences that are capable of multiple analysis types and selects the actual analysis
to be performed in the  SUBCASE, STEP, or SUBSTEP.  In this section, we will exam the various combinations of step-
types and how they are accomplished.
The solution of any STEP  is a continuation of the solution of the previous STEP  in the same SUBCASE . The solutions
of the  SUBSTEPs  occur simultaneously within a STEP (coupled analysis):
Additionally the following rules should be observed:
All coupled multi-physics steps have to come before the single-physics steps.
Single-physics steps can follow the multi-physics steps.
All linear perturbation steps need to be at the end after definition of all possible coupled multi physics steps and
single-physics steps.
The NLIC  case control command used for Nonlinear Initial Condition should be referenced for further
requirements between the analysis types allowed in SOL 400.
Nonlinear Single Physics: Nonlinear structures or nonlinear heat: For nonlinear structures, a ANALYSIS = NLSTAT  must
come before a  ANALYSIS = NLTRAN . Only Statics to T ransient is allowed for structures. For heat transfer, a nonlinear
steady state heat transfer to a nonlinear transient heat transfer is not allowed.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Overview of Analysis Types82
Main Index
A structural example:
SUBCASE 1
STEP 10
ANALYSIS=NLSTAT
STEP 20
ANALYSIS=NLSTAT
STEP 30
ANALYSIS=NLTRAN
Nonlinear Chained Physics: A nonlinear steady state heat with results used for a nonlinear static structural analysis. Only
a steady state heat to a structural nonlinear statics is allowed.
SUBCASE 1
STEP 10
ANALYSIS=HSTAT
STEP 20
ANALYSIS=NLSTAT
Nonlinear Coupled Physics: This allows for four combinations of STEP/SUBSTEP  within the SUBCASE.
ANALYSIS = HSTAT  for the first SUBSTEP  and ANALYSIS = NLSTAT  for the second SUBSTEP
ANALYSIS = HTRAN  for the first SUBSTEP  and ANALYSIS = NLTRAN  for the second  SUBSTEP
ANALYSIS = HTRAN  for the first SUBSTEP  and ANALYSIS = NLSTAT  for the second SUBSTEP
ANALYSIS = HSTAT  for the first SUBSTEP  and ANALYSIS = NLTRAN  for the second SUBSTEP
A coupled analysis example is:
SUBCASE 100
STEP 10
STRESS= ALL
NLSTRESS=ALL
NLSTEP=84
SUBSTEP 1
ANALYSIS=HSTAT
THERMAL=ALL
FLUX=ALL
SPC=35
LOAD=11
ANALYSIS=NLSTAT
SPC=2
LOAD=110
DISP(PLOT)=1456
STEP 20
ANALYSIS=NLTRAN (single physics rules follow)
Linear Perturbation Analysis: Linear perturbation analysis is run directly after a nonlinear static (ANALYSIS = NLSTAT )
analysis using additional STEP  commands containing ANALYSIS = MODES, DFREQ, MFREQ, MTRAN, DCEIG ,
and MCEIG  entries.
An example is:
SOL 400
CEND
TITLE=MSC Nastran SOL 400, Linear Perturbation Analysis
SUBTI=3D General Contact with Large Displacement Turned on
$&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P6</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_006/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_006/</guid>
      <description>
        
        
        &lt;p&gt;83 Chapter 3: Nonlinearity and Analysis Types
Overview of Analysis Types
Main Index
SUBCASE 1
STEP 1
LABEL=Nonlinear Static Analysis with Contact
ANALYSIS = NLSTATIC
NLPARM = 1
BCONTACT = 1
BOUTPUT=ALL
SPC = 2
LOAD = 3
DISPLACEMENT(SORT1,REAL)=ALL
STEP 2
LABEL=Linear Perturbation, DFREQ
ANALYSIS = DFREQ
DLOAD=200
FREQ =10
AUTOSPC=YES
SPC = 2
DISPLACEMENT = ALL
STEP 3
LABEL=Linear Perturbation, MFREQ
ANALYSIS = MFREQ
NLIC STEP 1 LOADFAC 1.0
METHOD = 30
DLOAD=200
FREQ =10
AUTOSPC=YES
RESVEC =NO
SPC = 2
DISPLACEMENT = ALL
Nonlinear Chained Analysis - with mesh/time change physics: A standard single physics nonlinear steady state  ANALYSIS
= HSTAT  or transient heat transfer ANALYSIS = HTRAN  with either SCRATCH=NO  or SCRATCH=MINI  on the job
submittal. This is followed by a mechanical job submittal with an ASSIGN hrun=&amp;lsquo;name_of_heat_run.MASTER&amp;rsquo;  and
DBLOC DATABLK=(HEATDB) LOGI=hrun  in the File Management Section of the MSC Nastran executive and an
ANALYSIS = NLSTAT  or ANALYSIS = NLTRAN  with a TEMP(LOAD,HSUB,HSTEP,HTIME)  in the subsequent
mechanical job STEP. The subsequent mechanical job can have both a different mesh than the heat job and different time
steps.
An example:
SOL 400 (submitted with SCRATCH=MINI from a bulk file named Course_Mesh_Heat.dat)
CEND
SPC = 1
IC = 10
THERMAL=ALL
SUBCASE 3
STEP 4
ANALYSIS=HSTAT
NLPARM = 1
LOAD = 202
SUBCASE 10 (Note if STEP not provided STEP=1 defaulted)
ANALYSIS=HTRAN
TSTEPNL = 2
DLOAD = 404
BEGIN BULK
SOL 400 (Mechanical run using solution from
Course_Mesh_Heat.dat)&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Static Analysis84
Main Index
ASSIGN hrun= &amp;lsquo;Course_Mesh_Heat.MASTER&amp;rsquo; (the ticks (&amp;rsquo;) are
required)
DBLOC DATABLK=(HEATDB), LOGI=hrun
CEND
TEMPERATURE(INITIAL) = 1
SUBCASE 1
ANALYSIS=NLTRAN
STEP 1
TSTEPNL= 1
SPC = 2
TEMP (LOAD, HSUBC=3) = 3
DISPLACEMENT(SORT1,REAL)=ALL
NLSTRESS = ALL
STRESS = ALL
STEP 2
TSTEPNL= 2
SPC = 2
TEMP (LOAD, HSUBC=10, HTIME=0.80) = 4
DISPLACEMENT(SORT1,REAL)=ALL
NLSTRESS = ALL
STRESS = ALL
SUBCASE 2
ANALYSIS=NLTRAN
STEP 3
TSTEPNL= 3
SPC = 2
TEMP (LOAD, HSUBC=10, HTIME=ALL) = 5
DISPLACEMENT(SORT1,REAL)=ALL
NLSTRESS = ALL
stress = all
BEGIN BULK
Static Analysis
Static stress analysis is used when inertia effects can be neglected. The problem may still have a real time scale, for example
when the material has a viscoplastic response, such as rate dependent yield. The analysis may be linear or nonlinear.
Nonlinearity may arise from large displacement effects, material nonlinearity and boundary nonlinearity (such as contact
and friction).
Linear static analysis involves the specification of load cases and appropriate boundary conditions. Solutions may be
combined in a postprocessing mode.
Nonlinear static analysis requires the solution of nonlinear equilibrium equations, for which the program uses Full Newton-
Raphson or Modified Newton-Raphson. Many problems involve history dependent response, so that the solution is usually
obtained as a series of increments, with iteration within each increment to obtain equilibrium. Increments must sometimes
be kept small (in the sense that rotation and strain increments must be small) to assure correct modeling of history
dependent effects, but most commonly the choice of increment size is a matter of computational efficiency – if the
increments are too large, more iteration will be required. Each solution method has a finite radius of convergence, which
means that too large an increment can prevent any solution from being obtained because the initial state is too far away
from the equilibrium state that is being sought – it is outside the radius of convergence. Thus, there is an algorithmic
restriction on the increment size. For most cases, the automatic incrementation scheme is preferred, because it will select
increment sizes based on these considerations. Direct user control of increment size is also provided because there are cases&lt;/p&gt;
&lt;p&gt;85 Chapter 3: Nonlinearity and Analysis Types
Static Analysis
Main Index
when you have considerable experience with his particular problem and can therefore select a more economic approach. A
complete discussion of the numerical methods used to solver nonlinear static problems is included in this chapter; to get a
converged solution, see Chapter 6: Setting Up, Monitoring, and Debugging the Analysis .
Geometrically nonlinear static problems frequently involve buckling or collapse behavior, where the load-displacement
response shows a negative stiffness, and the structure must release strain energy to remain in equilibrium. Several approaches
are possible in such cases. One is to treat the buckling response dynamically, thus actually modeling the kinetic response
with inertia effects included as the structure snaps. This is easily accomplished by using the restart option to terminate the
static procedure and switch to a dynamic procedure when the static solution goes unstable. In some simple cases,
displacement control can provide a solution, even when the conjugate load (the reaction force) is decreasing as the
displacement increases. More generally, static equilibrium states during the unstable phase of the response can be found by
using the “modified Riks method.” This method is for cases where the loading is proportional – that is, where the load
magnitudes are governed by a single scalar parameter. The method obtains equilibrium solutions by controlling the path
length along the load-displacement curve within each increment (rather than controlling the load or displacement
increment), so that the load magnitude becomes an unknown of the system. The method can provide solutions even in
cases of complex, unstable response. The Riks method cannot be used in contact, heat transfer, coupled, or enforced
motion.
Post-buckling
Geometrically nonlinear static problems frequently involve buckling or collapse behavior, where the load displacement
response shows a negative stiffness, and the structure must release strain energy to remain in equilibrium. Several approaches
are possible in such cases. One is to treat the buckling response dynamically; thus, actually modeling the kinetic response
with inertia effects included as the structure snaps. This is easily accomplished by using a transient dynamic procedure to
include inertial effects when the solution goes unstable. In some simple cases, displacement control can provide a solution,
even when the conjugate load (the reaction force) is decreasing as the displacement increases. More generally, static
equilibrium states during the unstable phase of the response can be found by using an arc length method. This method is
for cases where the loading is proportional – that is, where the load magnitudes are governed by a single scalar parameter.
The method obtains equilibrium solutions by controlling the path length along the load-displacement curve within each
increment (rather than controlling the load or displacement increment), so that the load magnitude becomes an unknown
of the system.
The method can provide solutions even in cases of complex or unstable response.
Creep, Viscoplastic, and Viscoelastic Behavior
Time dependent material response in static analysis may involve creep and swelling (generally occurring over fairly long
time periods), or rate dependent yield (which is often important in fairly rapid processes, such as metal working problems).
For rate dependent yield, the usual static procedure is used and an appropriate time scale must be introduced so that SOL
400will treat the viscoplasticity correctly. The backward difference operator is used to integrate the plastic strains. Creep
problems, as well as hereditary viscoelasticity models, are analyzed by the  CREEP  procedure (which is specified by including
a nonzero time interval on the NLPARM  entry). Nonlinear creep problems are often solved efficiently by forward
difference integration of the inelastic strains (the “initial strain” method), because the numerical stability limit of this
operator is usually sufficiently large to allow the solution to be developed in a small number of time increments. Linear&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Normal Modes – ANALYSIS = MODES86
Main Index
viscoelasticity models are integrated with a simple, implicit, unconditionally stable operator. Automatic time stepping in
such cases is governed by an accuracy tolerance parameter specified by you. This limits the maximum inelastic strain rate
change allowed over an increment.
Normal Modes – ANALYSIS = MODES
MSC Nastran SOL 400 offers several methods for dynamic analysis. Dynamic studies of linear problems are generally
performed by using the eigenmodes of the system as a basis for calculating the response. In such cases, the natural frequency
procedure, ANALYSIS = MODES  must first be used to extract the necessary modes and frequencies. Various response
options are then available: MTRAN  modal time history analysis; MFREQ modal frequency response analysis; and MCEIG&lt;br&gt;
modal complex eigenvalue response spectrum analysis. They are generally simple to use, and the dynamic response analysis
itself is usually not expensive computationally, although the eigenmode extraction can become computationally intensive
if many modes are required for a large model. The eigenvalues can be extracted on a prestressed system with the “stress
stiffening” effect (the initial stress matrix) included: this is necessary in the dynamic study of preloaded systems.
Direct integration of the system must be used when nonlinear dynamic response is being studied. Because all of the
equations of motion of the system must be integrated through time, direct integration methods are generally significantly
more expensive than the modal methods that are usually chosen for linear studies.
For direct integration methods, the nonlinear dynamic equilibrium equations must be solved at each time increment. This
is done iteratively using Newton&amp;rsquo;s method. This nonlinear equation solving process is expensive, and is not completely
reliable, because sometimes the equations are so nonlinear that it is very difficult to obtain a solution. Nonlinearities are
usually more simply accounted for in dynamic situations, because the inertia terms provide mathematical stability to the
system, so that the method is successful in all but a few extreme cases.
Natural Frequency Extraction
The usual first step in performing a dynamic analysis is determining the natural frequencies and mode shapes of the
structure with damping neglected. Eigenvalue analysis is used to determine these basic dynamic characteristics. The results
of an eigenvalue analysis indicate the frequencies and shapes at which a structure naturally tends to vibrate. These results
characterize the basic dynamic behavior of the structure and are an indication of how the structure will respond to dynamic
loading.
The natural frequencies of a structure are the frequencies at which the structure naturally tends to vibrate if it is subjected
to a disturbance. For example, the strings of a piano are each tuned to vibrate at a specific frequency. The deformed shape
of the structure at a specific natural frequency of vibration is termed its normal mode of vibration. Each mode shape is
associated with a specific natural frequency.
In this case, the frequencies of the current system are extracted by eigenvalue techniques. The stiffness determined at the
end of the previous step is used as the basis for the extraction, so that small vibrations of a preloaded structure can be
modeled.
You need to only specify the number of eigenvalues desired; the program will choose a suitable number of vectors for the
iterative process. A shift may be introduced, so that the closest modes to a given frequency may be obtained. The shift also
allows frequencies to be extracted on completely free systems, including the rigid body modes, by shifting away from the
zero frequency point.&lt;/p&gt;
&lt;p&gt;87 Chapter 3: Nonlinearity and Analysis Types
Normal Modes – ANALYSIS = MODES
Main Index
Natural frequencies and mode shapes are functions of the structural properties and boundary conditions. A cantilever beam
has a set of natural frequencies and associated mode shapes ( Figure 3-11). If the structural properties change, the natural
frequencies change, but the mode shapes may not necessarily change. For example, if the elastic modulus of the cantilever
beam is changed, the natural frequencies change but the mode shapes remain the same. If the boundary conditions change,
then the natural frequencies and mode shapes both change. For example, if the cantilever beam is changed so that it is
pinned at both ends, the natural frequencies and mode shapes change.
Figure 3-11  The First Four Mode Shapes of a Cantilever Beam
Modal quantities can be used to identify problem areas by indicating the more highly stressed elements. Elements that are
consistently highly stressed across many or all modes will probably be highly stressed when dynamic loads are applied.
Modal strain energy is a useful quantity in identifying candidate elements for design changes to eliminate problem
frequencies. Elements with large values of strain energy  in a mode indicate the location of large elastic deformation (energy).
These elements are those which most directly affect the deformation in a mode. Therefore, changing the properties of these
elements with large strain energy should have more effect on the natural frequencies and mode shapes than if elements with
low strain energy were changed.xy
z
4xy
z
1
xy
z
2
xy
z
3&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Eigenvalue Extraction Method88
Main Index
SOL 400 contains two methods for eigenvalue extraction and three time integration operators. Nonlinear effects, including
material nonlinearity, geometric nonlinearity, and boundary nonlinearity, can be incorporated.
In addition to distributed mass, you can also attach concentrated masses associated with each degree of freedom of the
system. You can include damping in either the modal superposition or the direct integration methods. You can also include
(nonuniform) displacement and/or velocity as an initial condition, and apply time -dependent forces and/or displacements
as boundary conditions.
Eigenvalue Analysis
SOL 400 uses either the inverse power sweep method or the Lanczos method to extract eigenvalues and eigenvectors. The
inverse power sweep method is typically used for extracting a few modes while the Lanczos method is optimal for a few or
many modes.
In dynamic eigenvalue analysis, we find the solution to an undamped linear dynamics problem:
(K - M)  =  
where K is the stiffness matrix, M is the mass matrix,  are the eigenvalues (frequencies) and  are the eigenvectors. In SOL
400, K is the tangent stiffness matrix, which can include material and geometrically nonlinear contributions. The mass
matrix is formed from both distributed mass and point masses.
Modal Stresses and Reactions
After the modal shapes (and frequencies) are extracted, stresses and reactions at a specified mode may be recovered if desired.
This option can be repeated for any of the extracted modes. The stresses are computed from the modal displacement vector 
; the nodal reactions are calculated from F = K - M .
Free Vibration Analysis
If a structure is not totally constrained in space, it is possible for the structure to displace (move) as a rigid body or as a
partial or complete mechanism. For each possible component of rigid -body motion or mechanism, there exists one natural
frequency which is equal to zero. The zero frequency modes are called rigid -body modes. Rigid -body motion of all or part
of a structure represents the motion of the structure in a stress -free condition. Stress -free, rigid -body modes are useful in
conducting dynamic analyses of unconstrained structures, such as aircraft and satellites. Also, rigid -body modes can be
indicative of modeling errors or an inadequate constraint set.
SOL 400 can perform free vibration analysis ( ANALYSIS = MODES ) to compute the natural frequencies and associated
mode shapes of linear elastic structures. The structure is assumed to be initially unstressed. A real eigenvalue analysis is
performed, which assumes that there is no damping and that the structure is not spinning (i.e., no Coriolis force).
Modal strain energy. The modal strain energies are computed using the mode shape vectors.
Eigenvalue Extraction Method
Three methods can be used for modal linear buckling extraction:&lt;/p&gt;
&lt;p&gt;89 Chapter 3: Nonlinearity and Analysis Types
Eigenvalue Extraction Method
Main Index
Inverse power sweep
Enhanced inverse power sweep
Lanczos
A brief description of each eigenvalue method is presented in the following sections.
Inverse Power Method (INV)
The inverse power method is a tracking method since it attempts to extract the lowest eigenvalue and eigenvector in the
desired range first. Their effects are then “swept” out. The next higher mode is then found, and its effects are “swept” out,
and so on&amp;ndash;hence, the term “tracking,” which means that one root at a time is found. Furthermore, each root is found via
an iterative process. (The classical literature often refers to this method as the “inverse iteration method with sweeping”.)
Unfortunately, depending on your selection of the eigenvalue range, the inverse power method can miss modes, which
makes it unreliable. For this reason, the inverse method is not recommended. The enhanced inverse power method is, in
general, a more reliable tracking method.
Enhanced Inverse Power Method (SINV)
This method is similar to the inverse power method except that it uses Sturm sequence logic to ensure that all modes are
found within the specified eigenvalue range. The Sturm sequence informs you of the number of modes below each trial
eigenvalue. See the MSC Nastran Dynamic Analysis User’s Guide  for further details regarding the Sturm sequence check.
Lanczos Method
The Lanczos method overcomes the limitations and combines the best features of the other methods. It is efficient, and if
an eigenvalue cannot be extracted within the range that you specify, a diagnostic message is issued. This method computes
accurate eigenvalues and eigenvectors. Furthermore, it prints meaningful user diagnostics and supports parallel processing
computers.
Comparison of Methods
The best method for a particular model depends on four factors:
1.The size of the model (the total number of degrees of freedom).
2.The number of eigenvalues desired.
3.The available real memory on your computer.
4.How well you can estimate the range of your eigenvalues.
The enhanced inverse power method ( SINV ) can be a good choice if only a few modes are needed, and you have a
reasonable idea of your eigenvalue range of interest. It is useful for models in which only the lowest few modes are desired.
For medium to large models, the Lanczos method is the recommended method.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Panel Buckling90
Main Index
User Interface
A METHOD  command is required in a subcase of the case control section to select the appropriate eigenvalue extraction
method in the bulk data section. The bulk data entry is different depending on whether you are using the inverse power
(INV ), enhanced inverse power ( SINV ), or Lanczos method. The EIGRL  entry is used for the Lanczos method, and the
EIGB  entry is used for the INV and SINV  methods.
Panel Buckling
This problem illustrates the nonlinear post-buckling analysis of a curved panel. This simulation highlights several SOL 400
capabilities including large displacement, material plasticity, contact between multiple deformable bodies and is included
in this chapter as an example of a perturbation buckling analysis.
The Structure and its Application
Panels constructed from thin sheets reinforced with stiffeners are commonly used in many industries. In order to keep these
panels light, the thin sheet (skin) is often designed to be thin and allowed to buckle elastically at relatively low levels of
compressive loading. Once the skin buckles, the compressive load distribution changes in the panel, and any additional load
is carried mostly by the stiffeners. The final failure load is reached when the overall panel fails due to a combination of
material yielding and instability.
Model Description
The model consists of a stiffened panel approximately 14 x 22 inches. The skin is constructed from aluminum and has a
slight curvature. A longitudinal Z stiffener is attached to the skin by a single row of rivets. The stiffener has a joggle in it,
and a doubler is used to fill the gap between the stiffener and the skin. T wo additional longitudinal doublers are attached
to the outside edges of the skin.&lt;/p&gt;
&lt;p&gt;91 Chapter 3: Nonlinearity and Analysis Types
Panel Buckling
Main Index
This model was originally constructed in metric units and was converted to English units. As a result of the conversion,
some of the dimensions are rounded off.
Geometry and Contact Regions
The skin, stiffener, and doublers are all modeled as shell elements located at the midsurface of these components. The gap
between two components is equal to half the thickness of one component plus half the thickness of another component.
These components are allowed to contact each other.
Finite Element and Contact Model
The skin, stiffener, and doublers are modeled using  CQUAD4  elements. The element properties are defined using
PSHELL  entries.
The rivets are modeled using CBAR  elements. The element property is defined using the PBAR entry.
The three doublers are modeled as three deformable contact bodies. The stiffener lower flange is defined as a deformable
contact body. The skin is in contact with several components. Each contact area within the skin is defined as a deformable
contact body.
An RBE2  rigid body element is used to connect all the nodes on one end of the panel to a single node. This node is used
to apply the panel compressive loading.
Material
The skin and doublers are made of aluminum alloy 2024 which is modeled as an elastic-plastic material using  MAT1  and
MATEP entries. The stiffener is made of aluminum alloy 7349 and is also modeled as an elastic-plastic material using
MAT1 and MATEP entries. The plastic stress-strain relationships are defined by pairs of stress-strain values using
TABLES1  entries.
Loading and Boundary Conditions
All the nodes on one end of the panel are fixed in all six degrees of freedom. At the other end of the panel, an RBE2 rigid
body element connects the nodes to a single node, and an enforced displacement of 0.28” in the longitudinal direction is
applied to this node.
The longitudinal edges of the panel are fixed in the lateral directions but are free to slide in the longitudinal direction.
Solution Procedure and Controls
A nonlinear static analysis is performed to determine the capability of the panel to support a compressive load.
PARAM,LGDISP,1  is specified to activate the large displacement capability.
The NLPARM  entry is used to specify the nonlinear analysis iteration strategy. Forty fixed time increments are specified
for this problem. Output requests are made for stress and strain using the STRESS  and NLSTRESS  entries. These results
are included in the MASTER/DBALL  output file.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Panel Buckling92
Main Index
Solving the Problem
The panel post-buckling problem is designed to be constructed and setup using Patran and analyzed using MSC Nastran
SOL 400. A MSC Nastan  bulk data file ( .bdf ) is exported, and then run with MSC Nastran. Analysis results can be
accessed in text format or viewed from inside Patran.
Input Files Required
stiffened_panel.db  – Patran database containing the panel finite element model.
Recreating the Problem using Patran
Step-by-step instructions for creating and running the analysis on the panel buckling model can be accessed by linking to
the following Panel Buckling Modeling Instructions file. Once you are done creating the model and running the SOL 400
analysis, proceed by accessing the results file to generate visual displays of the analysis results.
Highlighted Sections of the MSC Nastran Exec and Case Sections of Input File
Highlighted Sections of the MSC Nastran Bulk Data Input Section&lt;/p&gt;
&lt;p&gt;93 Chapter 3: Nonlinearity and Analysis Types
Panel Buckling
Main Index&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Panel Buckling94
Main Index
Results Plots
The following plot shows the final deformation of the panel.
The following plot shows a fringe plot of the von Mises stress at full load.
The following plot shows a graph of the total longitudinal reaction force vs. time increments.&lt;/p&gt;
&lt;p&gt;95 Chapter 3: Nonlinearity and Analysis Types
Dynamic Analysis of Linear Systems By Modal Methods
Main Index
Dynamic Analysis of Linear Systems By Modal Methods
MSC Nastran SOL 400 includes modal frequency and modal transient procedures to analyze linear dynamic problems
using modal superposition. All of these procedures are based on using a subset of the eigenmodes of the system, which must
first be extracted by using the ANALYSIS = MODES  procedure. The number of modes extracted must be sufficient to
model the dynamic response of the system adequately: this is a matter of judgment on the part of you.
The model may be pre-loaded prior to the modal extraction: initial stress effects are then included in the stiffness used in
the eigenvalue extraction.
Direct and Modal Frequency Response – ANALYSIS = DFREQ, MFREQ
Frequency response analysis is a method used to compute structural response to steady-state oscillatory excitation. Examples
of oscillatory excitation include rotating machinery, unbalanced tires, and helicopter blades. In frequency response analysis,
the excitation is explicitly defined in the frequency domain. All of the applied forces are known at each forcing frequency.
Forces can be in the form of applied forces and/or enforced motions (displacements, velocities, or accelerations).
Two different numerical methods can be used in frequency response analysis. The direct method ( ANALYSIS = DFREQ)
solves the coupled equations of motion in terms of forcing frequency. The modal method ( ANALYSIS = MFREQ ) utilizes
the mode shapes of the structure to reduce and uncouple the equations of motion (when modal or no damping is used or
no TF, M2PP, B2PP or K2PP  DMIG input is present); the solution for a particular forcing frequency is obtained through
the summation of the individual modal responses. The choice of the method depends on the problem (both methods are
available in SOL 400). The two methods are described in the Direct Frequency Response Analysis and Modal Frequency
Response Analysis sections of the MSC Nastran Dynamics Analysis User&amp;rsquo;s Guide .
This solution type is used when the a frequency response analysis, which includes inertial effects, is being studied. A
complete description of using MSC Nastran for frequency response analysis is provided in the MSC Nastran Dynamics&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Dynamic Analysis of Linear Systems By Modal Methods96
Main Index
User&amp;rsquo;s Guide. The significance of including these solution procedures in SOL 400 is that it allows for &amp;lsquo;Linear&amp;rsquo; perturbation
analysis.
In SOL 400, the  ANALYSIS case control command may be used to define a &amp;rsquo;linear&amp;rsquo; perturbation analysis step or a user
input of the &amp;lsquo;stressed&amp;rsquo; or deformed geometry (normal bulk data input) and &amp;lsquo;unload&amp;rsquo; the structure to determine the
unstressed shape step.
In this procedure, the ANALYSIS  case control command may be used to define a ‘linear’ perturbation STEP  analysis,
separate from the steps used to load the model. Using this procedure, normal modes and frequency response steps with
ANALYSIS = MODES or ANALYSIS = DFREQ  will use the final displacement results and loads from the previous
nonlinear step to generate the stiffness, differential stiffness, and follower force matrices for use in the ‘linear’ response
analyses. Data recovery will be based on the requests above and within the subcase.
One may include a frequency dependent spring in the simulation by incorporating CBUSH, PBUSH, and PBUSH1.  In
such cases, the frequency dependence will be incorporated in the perturbation step. For such models, the DFREQ option
is preferred.
Complex Eigenvalue Analysis – ANALYSIS = DCEIG, MCEIG
Complex eigenvalue analysis is used to compute the damped modes of structures and assess the stability of systems modeled
with transfer functions (including servo-mechanisms and rotating systems).
Complex eigenvalue analysis solves for the eigenvalues and mode shapes based on the following equation in operator
notation:
[ p2M + pB + K ] { u}= 0
where p =  + i
This equation is similar to that for normal modes analysis (see Real Eigenvalue Analysis  (Ch. 3) in the MSC Nastran Dynamic
Analysis User’s Guide ) except that damping is added and the eigenvalue is now complex. In addition, the mass, damping, and
stiffness matrices may be unsymmetric, and they may contain complex coefficients.
Complex eigenvalue analysis is controlled with the EIGC  bulk data entry (similar to the EIGRL or EIGR  bulk data entries
for normal modes analysis). There are three methods of solution: upper Hessenberg, complex Lanczos, and inverse power.
Complex eigenvalue analysis is available as a direct method (SOL 107), in which the equations are of the same size as the
number of physical variables. Complex eigenvalue analysis is also available as a modal method (SOL 110), in which
undamped modes are first computed and then are used to transform the matrices from physical to modal variables.
There are three methods of solution: upper Hessenberg, complex Lanczos, and inverse power. Complex eigenvalue analysis
is available as a direct method (SOL 107, SOL 400 – ANALYSIS = DCEIG ), in which the equations are of the same size
as the number of physical variables. Complex eigenvalue analysis is also available as a modal method (SOL 110, SOL 400
– ANALYSIS = MCEIG ), in which undamped modes are first computed and then are used to transform the matrices from
physical to modal variables.&lt;/p&gt;
&lt;p&gt;97 Chapter 3: Nonlinearity and Analysis Types
Transient Dynamic Analysis
Main Index
Transient Dynamic Analysis
Transient response analysis is the most general method for computing forced dynamic response. The purpose of a transient
response analysis is to compute the behavior of a structure subjected to time-varying excitation. The transient excitation is
explicitly defined in the time domain. All of the forces applied to the structure are known at each instant in time. Forces
can be in the form of applied forces and/or enforced motions.
The important results obtained from a transient analysis are typically displacements, velocities, and accelerations of grid
points, and forces and stresses in elements and at contact interfaces.
Depending upon the structure and the nature of the loading, two different numerical methods can be used for a linear
transient response analysis: direct and modal. The direct method performs a numerical integration on the complete coupled
equations of motion. The modal method utilizes the mode shapes of the structure to reduce and uncouple the equations of
motion (when modal or no damping is used); the solution is then obtained through the summation of the individual modal
responses. The choice of the approach is problem dependent. Only the direct integration method can be used for nonlinear
analysis.
Direct Transient Response
Transient dynamic analysis deals with an initial-boundary value problem. In order to solve the equations of motion of a
structural system, it is important to specify proper initial and boundary conditions. You obtain the solution to the equations
of motion by direct integration (for linear or nonlinear systems). In direct integration, selecting a proper time step is very
important. You can include damping in the system.
The following sections discuss the applicable aspects of transient analysis listed below.
Direct Integration
Time Step Definition
Damping
Initial Conditions
Direct Linear Transient Time Integration
The integration scheme in the direct linear transient solution sequences uses an implicit modified Newmark beta method.
The accuracy of the solution can be very susceptible to the time step ( T) employed in the analysis. The most important
point to note in this case is that the time step selected should be small enough to capture the response.
As a rule, the smaller the time step, the better the answers, but a smaller time step makes the analysis more expensive. One
way to find out if the time step used is satisfactory is to reduce it by 1/5th or 1/10th and repeat the analysis. If the answers
do not change much, it generally means that the time step used earlier was good enough. Otherwise, it means the new time
step is better. This process should be repeated until the answers do not change significantly between runs.
The above process can be quite expensive. One way to select an initial integration time step is to use the general rule of
thumb that the time step employed should be (1/10)th the period corresponding to the highest dominant frequency of the
excitation as well as the response. It may be noted in this regard that, in general, for problems with damping, the excitation
and response will normally have essentially the same dominant frequencies, but for problems without any damping the&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Transient Dynamic Analysis98
Main Index
dominant frequencies of the response may be far removed from those of the excitation because of resonances at higher
frequencies. Thus, for instance, assume that the excitation in a damped problem has three dominant frequencies, one at
500 Hz, another at 600 Hz and yet another at 800 Hz. The highest dominant frequency is 800 Hz. This corresponds to a
period of (1/800) seconds or 0.00125 seconds. So, a time step of (1/10)th of this period, which is 0.000125 seconds, would
be a good initial value.
Dynamic Integration
Direct integration is a numerical method for solving the equations of motion of a dynamic system. It is used for both linear
and nonlinear problems. In nonlinear problems, the nonlinear effects can include geometric, material, and boundary
nonlinearities. For transient analysis, MSC Nastran offers a family of direct integration operators listed below.
Newmark-beta Operator
Generalized-alpha Operator
Direct integration techniques are imprecise; this is true regardless of which technique you use. Each technique exhibits at
least one of the following problems: conditional stability, artificial damping, and phase errors.
Newmark-beta Operator
This operator is probably the most popular direct integration method used in finite element analysis. For linear problems,
it is unconditionally stable and exhibits no numerical damping. The Newmark-beta operator can effectively obtain
solutions for linear and nonlinear problems for a wide range of loadings. The procedure allows for change of time step, so
it can be used in problems where sudden impact makes a reduction of time step desirable. This operator can be used with
adaptive time step control. Although this method is stable for linear problems, instability can develop if nonlinearities occur.
By reducing the time step and/or adding (stiffness) damping, you can overcome these problems.
Generalized-alpha Operator
One of the drawbacks of the existing implicit operators is the inability to easily control the numerical dissipation. While
the Newmark-beta method has no dissipation and works well for regular vibration problems, the Single-Step Houbolt
method has numerical dissipation and works well for implicit dynamic contact problems. A single scheme that easily allows
zero/small dissipation for regular structural dynamic problems and high-frequency numerical dissipation for dynamic
contact problems is desirable. In [Ref. 1], a Generalized-alpha method has been presented as an unconditionally stable,
second-order algorithm that allows user-controllable numerical dissipation. The dissipation is controlled by choosing either
the spectral radius S of the operator or alternatively, two parameters fand m . The choice of the parameters provides a
family of time integration algorithms that encompasses the Newmark-Beta, Single -Step Houbolt, Hilber-Hughes-Taylor
(HHT) [Ref. 2], and Wood-Bossak-Zienkiewicz (WBZ) [Ref. 3] time integration methods as special cases.
Technical Background
Consider the equations of motion of a structural system:
Ma + Cv + Ku = F (3-22)
where M, C, and K are mass, damping, and stiffness matrices, respectively, and a, v, u, and F are acceleration, velocity,
displacement, and force vectors. Various direct integration operators can be used to integrate the equations of motion to&lt;/p&gt;
&lt;p&gt;99 Chapter 3: Nonlinearity and Analysis Types
Transient Dynamic Analysis
Main Index
obtain the dynamic response of the structural system. The technical background of the direct integration operators available
in MSC Nastran is described below.
Newmark-beta Operator
The generalized form of the Newmark-beta operator is
(3-23)
(3-24)
where superscript n denotes a value at the nth time step and  u, v, and a take on their usual meanings.
(3-25)
The particular form of the dynamic equations corresponding to the trapezoidal rule
 = 1/2  ,  = 1/4
results in
(3-26)
where the internal force R is
(3-27)
Equation (3-25) allows implicit solution of the system
un+1 = un + u (3-28)
Notice that the operator matrix includes K, the tangent stiffness matrix. Hence, any nonlinearity results in a reformulation
of the operator matrix. Additionally, if the time step changes, this matrix must be recalculated because the operator matrix
also depends on the time step.
Generalized Alpha Operator
From [Ref. 1], the equilibrium equations for the generalized alpha method can be expressed in the form
(3-29)
where
(3-30)un1+untvn12–t2ant2an1++ + + =
vn1+vn1–tantan1++ + =
1
t2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;M
t&amp;mdash;&amp;mdash;&amp;mdash;CK + +  u Fn1+Rn– Man 1
t&amp;mdash;&amp;mdash;&amp;mdash;vn+  Cvn+ + =
4
t2&amp;mdash;&amp;mdash;&amp;ndash;M2
t&amp;mdash;&amp;ndash;CK + +  u Fn1+Rn– Man4
t&amp;mdash;&amp;ndash;vn+  Cvn+ + =
RTdv
V=
Man1m ++Cvn1f ++Kun1f +++ + Fn1f ++=
un1f ++1f+un1+fun– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Transient Dynamic Analysis100
Main Index
(3-31)
(3-32)
The displacement and velocity updates are identical to those of the Newmark algorithm
(3-33)
where, as shown in [Ref. 1], optimal values of the parameters  and  are related to fand m by
(3-34)
(3-35)
It is seen that the f and m parameters can be used to control the numerical dissipation of the operator. A simpler measure
is the spectral radius S. This is also a measure of the numerical dissipation; a smaller spectral radius value corresponds to
greater numerical dissipation. The spectral radius of the generalized alpha operator can be related to the fand m
parameters as follows
(3-36)
(3-37)
S varies between 0 and 1. Accordingly, the ranges for the fand m  parameters are given by  -0.5 ≤ f≤ 0.0  and
-0.5 ≤ m≤ 1. f = -0.5, m = -0.5 corresponds to a spectral radius of 1.0 and f = 0, m = 1 corresponds to a spectral
radius of 0.0. It can also be noted that the case of S = 1 has no dissipation and corresponds to a mid-increment Newmark-
beta operator.
Time Step Definition
In a transient dynamic analysis, time step parameters are required for integration in time. The NLSTEP  option can be used
for the Newmark -beta, the Single Step Houbolt, and the Generalized Alpha operator to invoke the adaptive time control.
Enter parameters to specify the time step size and period of time for this set of boundary conditions.
When using the Newmark-beta operator, decide which frequencies are important to the response. The time step in this
method should not exceed 10 percent of the period of the highest relevant frequency in the structure. Otherwise, large phase
errors will occur. The phenomenon usually associated with too large a time step is strong oscillatory accelerations. With
even larger time steps, the velocities start oscillating. With still larger steps, the displacement eventually oscillates. In vn1f ++1f+vn1+fvn– =
an1m ++1m+an1+man– =
un1+untvn12–t2ant2an1++ + + =
vn1+vn1–tantan1++ + =
1
4&amp;mdash;1mf– + 2=
1
2&amp;mdash;mf– +=
fS
1S+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –=
m12S–
1S+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;101 Chapter 3: Nonlinearity and Analysis Types
Transient Dynamic Analysis
Main Index
nonlinear problems, instability usually follows oscillation. When using adaptive dynamics, you should prescribe a
maximum time step.
As in the Newmark-beta operator, the time step in Houbolt integration should not exceed 10 percent of the period of the
highest frequency of interest. However, the Houbolt method not only causes phase errors, it also causes strong artificial
damping. Therefore, high frequencies are damped out quickly and no obvious oscillations occur. It is, therefore, completely
up to the engineer to determine whether the time step was adequate.
For the Generalized-alpha operator, depending on the chosen parameters, the integration scheme can vary between the
Newmark-beta operator and the Single-step houbolt operator. For spectral radii &amp;lt; 1, there is artificial damping in the
system. Depending on the type of problem, the Generalized-alpha parameters and the associated time step should be
carefully chosen to reduce phase errors and effects of artificial damping.
In nonlinear problems, the mode shapes and frequencies are strong functions of time because of plasticity and large
displacement effects, so that the above guidelines can be only a coarse approximation. To obtain a more accurate estimate,
repeat the analysis with a significantly different time step (1/5 to 1/10 of the original) and compare responses.
Selecting Time Intergration Operators
The NDAMP  and NDAMPM  parameters are used to define f and m, respectively, which in turn define the dynamic
operator.
Defaults
If no contact is present and no nonlinearities and no damping, by default the HHT procedure is used with f = -0.05 a nd
m = 0.0.
If contact is present or nonlinearities or damping, by default the WBZ procedure is used with f = 0.0 a nd m = 1.0.
Newmark-Beta
The Newmark-beta procedure is default when using the TSTEPNL  bulk data entry. When using the  NLSTEP  bulk data
entry, the Generalized-apha method is the default. The exact Newmark-Beta scheme is not derivable from the Generalized-
alpha Method, but a very close operator can be obtain by using f  = 0 a nd m  = 0 w hich results in the classic
unconditionally stable (for linear systems) of  = 1/4 and  = 1/2,  and equilibrium is satisfied at the end of the increment.
For the mid increment Newmark-beta operator, one defines f = 0.5 a nd m = 0.5;  in which case, the equilibrium is
satisfied at the mid increment.
Single-Step Houbolt
The single-step Houbolt operator may be obtained by choosing f = 0 a nd m = 1 w ith  a nd .
HHT
The HHT scheme is obtained by using 0.33 ≤ f   ≤ 0.0 and m = 0.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Transient Dynamic Analysis102
Main Index
WBZ
The WBA scheme is obtained by using f  = 0 and ≤ m  ≤ 1
Generalized Alpha
The Generalized Alpha scheme is obtained by using 0.5 ≤ f   ≤ 0.0 and 0.5 ≤ m  ≤ 1.0 .
Heat Transfer
Numerical damping may be specified through the value of NDAMP only. NDAMPM  is not used. NDAMP  can be varied
in the range of (-2.414,0.414). At these outer limits, the transient scheme reduces to the Backward-Euler method. Any value
that is outside this range is automatically reset to the closest outer limit. For NDAMP = 0.0,  the transient scheme reduces
to the Crank-Nicholson scheme. The default value of NDAMP is -0.05 .
Thermo-Mechanical Coupled Analysis
If NDAMP  and NDAMPM  are unspecified, then the default that is appropriate for the particular substep is used. For
example, for a coupled transient contact problem, NDAMP = -0.05  during the heat transfer substep and NDAMP = 0.0,
NDAMPM = 1.0  during the mechanical substep. If the values of NDAMP and NDAMPM  are specified by the user in the
bulk data section, then these values would be applicable for both the thermal and mechanical substeps. To make the values
of the NDAMP/NDAMPM physics-dependent, the user can define the values under each substep of the case control
section. For example,
SUBSTEP 1
ANALYSIS=HTRAN
PARAM,NDAMP,-2.414
SUBSTEP 2
ANALYSIS=NLTRAN
PARAM,NDAMP,-0.05
PARAM,NDAMPM,0.0
Damping in Direct Transient Response
The damping matrix [B] is used to represent the energy dissipation characteristics of a structure. In the general case, the
damping matrix is comprised of several matrices where:
[B1] damping elements (CVISC, CDAMPi) + B2GG
[B2] B2PP direct input matrix + transfer functions
G overall structural damping coefficient (PARAM,G)
W3 frequency of interest in radians per unit time (PARAM,W3) for the conversion of overall structural damping
into equivalent viscous dampingB B1B2G
W3&amp;mdash;&amp;mdash;-K1
W4&amp;mdash;&amp;mdash;-GEKE+ + + =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P7</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_007/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_007/</guid>
      <description>
        
        
        &lt;p&gt;103 Chapter 3: Nonlinearity and Analysis Types
Transient Dynamic Analysis
Main Index
Transient response analysis does not permit the use of complex coefficients. Therefore, structural damping is included by
means of equivalent viscous damping. T o appreciate the impact of this on the solution, a relation between structural
damping and equivalent viscous damping must be defined.
The viscous damping force is a damping force that is a function of a damping coefficient b and the velocity. It is an induced
force that is represented in the equation of motion using the [B] matrix and velocity vector.
(3-38)
The structural damping force is a displacement -dependent damping. The structural damping force is a function of a
damping coefficient G and a complex component of the structural stiffness matrix.
(3-39)
Assuming constant amplitude oscillatory response for an SDOF system, the two damping forces are identical if
Gk = b (3-40)
or
(3-41)
Therefore, if structural damping G is to be modeled using equivalent viscous damping b, then the equality equation (3-41)
holds at only one frequency (see Figure 3-12).[K] global stiffness matrix
GE element structural damping coefficient (GE on the MATi entry)
W4 frequency of interest in radians per unit time (PARAM,W4) for conversion of element structural damping
into equivalent viscous damping
[KE] element stiffness matrix
Mu··t Bu·t Kut + + Pt =
Mu··t 1iG+Kut + Pt =
bGk
&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Transient Dynamic Analysis104
Main Index
Figure 3-12  Structural Damping Versus Viscous Damping (Constant Oscillatory Displacement)
T wo parameters are used to convert structural damping to equivalent viscous damping. An overall structural damping
coefficient can be applied to the entire system stiffness matrix using PARAM,W3,r  where r is the circular frequency at
which damping is to be made equivalent. This parameter is used in conjunction with PARAM,G, GFL.  The default value
for W3 is 0.0, which causes the damping related to this source to be ignored in transient analysis.
PARAM,W4,r is an alternate parameter used to convert element structural damping to equivalent viscous damping.
PARAM,W4,r  is used where r is the circular frequency at which damping is to be made equivalent. PARAM,W4 is used
in conjunction with the GE field on the  MATi entry. The default value for W4 is 0.0 which causes the related damping
terms to be ignored in transient analysis.
Units for PARAM,W3  and PARAM,W4  are radians per unit time. The choice of  W3 or W4 is typically the dominant
frequency at which the damping is active. Often, the first natural frequency is chosen, but isolated individual element
damping can occur at different frequencies and can be handled by the appropriate data entries.
Initial Conditions in Direct Transient Response
You may impose initial displacements and/or velocities in direct transient response. The TIC bulk data entry is used to
define initial conditions on the components of grid points. The IC case control command is used to select TIC entries from
the bulk data.
If initial conditions are used, initial conditions should be specified for all degrees of freedom having nonzero values. Initial
conditions for any unspecified degrees of freedom are set to zero.
Initial conditions {u0} and  are used to determine the values of {u-1}, {P0}, and {P-1} used in equation (3-42) to
calculate {u1}.
(3-42)Structural Damping fs = iGku Damping
Force
Equivalent
Viscous
Dampingb Gk3 (or 4)  =
fvbu· ibu = = 3 (or 4)
u·0
u1– u0 u·0t – =&lt;/p&gt;
&lt;p&gt;105 Chapter 3: Nonlinearity and Analysis Types
Nonlinear Transient Response Analysis
Main Index
(3-43)
In the presence of initial conditions, the applied load specified at t = 0 is replaced by
(3-44)
Regardless of the initial conditions specified, the initial acceleration for all points in the structure is assumed to be zero
(constant initial velocity).
Initial conditions should only be specified in the a -set.
Nonlinear Transient Response Analysis
Nonlinear analysis requires iterative solution methods, thereby making it far more computationally intensive than a
corresponding linear analysis. Nonlinear transient response analysis is available in MSC Nastran in SOL 129 and 400,
ANALYSIS = NLTRAN . Nonlinear problems are classified into three broad categories: geometric nonlinearity, material
nonlinearity, and contact.
The primary solution operations are load and time steps, iterations with convergence tests for acceptable equilibrium error,
and stiffness matrix updates. The iterative process is based on the Newton-Raphson method. The tangent matrix updates
are performed automatically to improve the computational efficiency, and may be overridden at your discretion.
The adaptive method is implemented using the two -point recurrence (or one -step) formula as its foundation. The optimum
time step size, which is required for accuracy and efficiency, changes continuously in the transient dynamic environment.
The primary concept of automatic time step adjustment is that the proper size of the time step can be predicted based on
the dominant frequency in the incremental deformation pattern at the previous time step. This concept presents a
deficiency of time lag involved in the prediction process. Furthermore, changes in nonlinearity cannot be predicted from
the deformation pattern at the previous time step.
Nonlinear Transient Response Analysis Interface
User Interface
The nonlinear properties and/or effects are defined by nonlinear material data ( MATS1, MATEP , and TABLES1 ), and
PARAM,LGDISP  for geometric nonlinearity. The transient effects are produced by time -dependent loading functions
(TLOADi, DAREA , etc.), damping (parameters, elements and material data), and mass properties.
The unique data required for SOL 400 is supplied on the NLSTEP ,  an all-encompassing time/load incrementation control
entry for nonlinear analysis. See Chapter 4: Solution Strategies for Nonlinear Analysis : NLSTEP Bulk Data Entry  for a detailed
description of the NLSTEP  entry and using it for nonlinear static and transient analyses.
Case Control
Each subcase and step defines a time interval starting from the last time step of the previous subcase or subcase, subdivided
into smaller time steps using the NLSTEP  entry. The output time is labeled by the cumulative time, including all previous
subcases. The data blocks containing solutions are generated at the end of each subcase for storage in the database for output P1– Ku1– Bu·0 + =
P0 Ku0 Bu·0 + =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Transient Response Analysis106
Main Index
processing and restarts. As such, converged solutions are apt to be saved at many intermediate steps in case of divergence
and more flexible control becomes possible with multiple subcases. Results from converged increments can be output to
*.op2  files using the NLOPRM  case control entry.
The input loading functions may be changed for each subcase or continued by repeating the same DLOAD  request.
However, it is recommended that one use the same TLOAD  bulk data for all the subcases in order to maintain the
continuity between subcases, because  TLOADi  data defines the loading history as a function of cumulative time. Static
loads ( PLOADi, FORCEi, MOMENTi)  may be associated with time -dependent functions by matching the EXCITEID&lt;br&gt;
on the TLOADi  entries. Nonlinear forces as functions of displacements or velocities (NOLINi) may be selected and printed
by the case control commands  NONLINEAR  and NLLOAD,  respectively. Each subcase may have a different time step
size, time interval, and iteration control selected by the NLSTEP request. Case control requests that may not be changed
after the first subcase are SPC, MPC, DMIG , and TF.
Output requests for each subcase are processed independently. Requested output quantities for all the subcases are appended
after the computational process for actual output operation. See Chapter 8 for a discussion on output requests and see the
QRG  for a complete list of output requests.
Initial conditions (displacement or velocity) can be specified by the bulk data input,  TIC , selectable by the case control
command IC. If initial conditions are given, all of the nonlinear element forces and stresses must be computed to satisfy
equilibrium with the prescribed initial displacements. On the other hand, initial conditions can be generated by applying
static analysis for the preload using PARAM,TSTATIC in the first subcase. Then the transient analysis can be performed
in the ensuing subcases. Associated with the adaptive time stepping method, the PARAM,NDAMP  is used to control the
stability in the ADAPT  method. The NDAMP  parameter represents the numerical damping (a recommended value for
usual cases is 0.01), which is often required to improve the stability and convergence in contact problems.
Time Step Definition
In a transient dynamic analysis, time step parameters are required for integration in time. These parameters are specified in
SOL 400 through the NLSTEP  entry. These can be used for the Newmark beta operator to invoke the adaptive time
control. Enter parameters to specify the time step size and period of time for this set of boundary conditions.
When using the Newmark-beta operator, decide which frequencies are important to the response. The time step in this
method should not exceed 10 percent of the period of the highest relevant frequency in the structure. Otherwise, large phase
errors will occur. The phenomenon usually associated with too large a time step is strong oscillatory accelerations. With
even larger time steps, the velocities start oscillating. With still larger steps, the displacement eventually oscillates. In
nonlinear problems, numerical instability usually follows oscillation. When using adaptive dynamics, you should prescribe
a maximum time step.
As in the Newmark-beta operator, the time step in Houbolt integration should not exceed 10 percent of the period of the
highest frequency of interest. However, the Houbolt method not only causes phase errors, it also causes strong artificial
damping. Therefore, high frequencies are damped out quickly and no obvious oscillations occur. It is, therefore, completely
up to the engineer to determine whether the time step was adequate. The damping problem is alleviated to a large extent
with the Single Step Houbolt operator.
In nonlinear problems, the mode shapes and frequencies are strong functions of time because of large displacement effects,
so that the above guidelines can be only a coarse approximation. T o obtain a more accurate estimate, repeat the analysis
with a significantly different time step (1/5 to 1/10 of the original) and compare responses.&lt;/p&gt;
&lt;p&gt;107 Chapter 3: Nonlinearity and Analysis Types
Creep in SOL 400
Main Index
Creep in SOL 400
SOL 400 offers two schemes for modeling creep in conjunction with plasticity. First, creep for SOL 400 can be described
using NLPARM  and the CREEP  entry when using classical MSC Nastran elements. The CREEP entry will also work with
the advanced elements defined through the MATVP  option.
The creep formulations for the CREEP  entry are:
Creep Law Class 1
The first creep law class is expressed as:
(3-45)
Parameters A(), R(), and K() are specified in the following form, as recommended by Oak Ridge National Laboratory:
Type ijk where i, j, and k are digit equal to 1 or 2, according to the desired function in the table above. For example,
TYPE=122  defines A() = ab, R() = cd and K() = eef
Creep Law Class 2
The second creep law class ( TYPE=300 ) is expressed as:
c(,t) = abtd(3-46)
where the values of b and d must be defined as follows:
1.0 &amp;lt; b &amp;lt; 8.0 and 0.2 &amp;lt; d &amp;lt;2.0
The coefficient g should be blank if TYPE=112, 122, 222, or 212  and c, e, f, and g should be blank if TYPE=300.  The
coefficients a through g are dependent on the structural units; caution must be exercised to make these units consistent with
the rest of input data.
Creep Using NLSTEP
The second method for specifying creep time behavior is using the CREEP  option of the NLSTEP  bulk data entry. Creep
will be used in the current load case if the CREEP  value of NLSTEP  is set to 1. Adaptive load stepping based upon creep
can be flagged through CRITTID  parameter. The  NLSTEP  method of creep characterization is available for the enhanced
nonlinear elements only.Parameter Function 1 Digit Function 2 Digit
A() abi=1 aebi=2
R() cdj=1 cdj=2
K() k=1 eefk=2ct A1eRt –– Kt + =
e· fgsinh &lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Heat Transfer108
Main Index
More details are provided in the MATVP  description of the QRG . The options offered by MSC Nastran for modeling creep
are as follows:
Creep data can be entered directly through the MATVP  bulk data entry. The form of the creep is designated with
either POWER  for empirical creep law or TABLE  for a tabular input of creep model parameters.
An automatic time stepping scheme can be used via NLSTEP  to maximize the time step size in the analysis.
Heat Transfer
Heat transfer problems including conduction, forced convection, and boundary radiation and convection can be solved
with MSC Nastran SOL 400. The problems can be transient or steady-state, linear or nonlinear. The heat transfer element
library includes elements that allow for heat storage (specific heat) and heat conduction, and elements that also allow for
forced convection caused by fluid flowing through the mesh. Heat interface elements are also provided, to model the heat
transfer across the boundary layer between a solid and a fluid, or between two closely adjacent solids. Shell-type heat transfer
elements are included, since so many structures are of this type. The second-order elements usually give more accurate
results for the same number of nodes in the mesh.
Figure 3-13   Modes of Heat Transfer
This section discusses pure heat transfer problems, where the temperature field can be found without knowledge of the
stress and deformation of the bodies being studied.
Time integration in transient problems is done with the backward Euler method (the modified Crank-Nicholson operator)
in the pure conduction elements. This method is unconditionally stable for linear problems. The convection/diffusion
elements use the trapezoidal rule for time integration, and include numerical diffusion control (the “upwinding” Petrov-
Galerkin method) and, optionally, numerical dispersion control. The elements with dispersion control offer improved
solution accuracy in cases where the transient response of the fluid is important but, because artificial dispersion control
introduces a stability limit on the size of the time increment, it may be more economical to use the elements without this
feature in transient cases where transient effects in the fluid itself are not a critical part of the solution.
For all transient heat transfer cases, the time increments may be specified by you or selected automatically based on a user
prescribed maximum nodal temperature change in a step. Automatic time incrementation is generally preferred.&lt;/p&gt;
&lt;p&gt;109 Chapter 3: Nonlinearity and Analysis Types
References
Main Index
The system of equations for the convective/diffusive elements is not symmetric, and so the nonsymmetric matrix storage
and solution scheme is automatically invoked when these elements are used. Heat transfer problems are very often solved
to provide temperature fields for subsequent thermal stress analyses. MSC Nastran SOL 400 provides a very simple interface
which uses the temperatures at the nodes from the heat transfer analysis to define the temperature field at different times
in the stress analysis. The interface assumes that corresponding nodes in the stress analysis mesh have the same numbers as
they have in the heat transfer analysis mesh. Nodes may be removed for the stress problem; for example, elements that
represent non-structural parts of the heat transfer mesh (such as insulation or cooling fluid) may be omitted in the stress
analysis. When these temperatures are read into the stress analysis problem, temperatures at nodes that are not in the mesh
are ignored. Heat transfer problems may be nonlinear because the material properties are temperature dependent or because
the boundary conditions are nonlinear. Usually the nonlinearity associated with temperature dependent material properties
is mild, because the properties do not change rapidly with temperature except when latent heat effects are included, in
which case the analysis may be severely nonlinear. Boundary conditions are very often nonlinear: film coefficients may be
functions of surface temperature, or radiation may be occurring. Again, the nonlinearities are often mild and cause little
difficulty. An exception is the “boiling” film condition, in which the film coefficient can change very rapidly because the
fluid adjacent to the surface boils. Generally, such problems are handled effectively by MSC Nastran SOL 400 when they
are modeled as transient problems. For this reason, steady-state cases involving severe nonlinearities are sometimes more
effectively solved as transient cases, obtaining the required steady-state solution as the very long time response and using
the transient simply to stabilize the solution for that long time response. MSC Nastran SOL 400 uses an iterative scheme
to solve nonlinear heat transfer problems. The scheme is basically a Newton method, with some modification to ensure
stability of the iteration process. The iteration is governed by a user set parameter giving the maximum allowable change in
the temperature field from iteration to iteration, hence controlling the error in property or boundary condition evaluation.
Boundary conditions provided for heat transfer analysis include prescribed flux (distributed or concentrated), prescribed
temperature, film, and radiation conditions. Any of these can be specified as a function of time.
References
1.Chung, J. and Hulbert, G.M., “A time integration algorithm for structural dynamics with improved numerical
dissipation: The Generalized- Method”, Journal of Applied Mechanics, Vol. 60, pp. 371 - 375, June 1993.
2.Hilber, H.M., Hughes, T.J.R., and Taylor, R.L., “Improved Numerical Dissipation for Time Integration
Algorithms in Structural Dynamics”, Earthquake Engineering and Structural Dynamics, Vol. 5, pp. 283-292, 1977
3.Wood, W.L., Bossak, M., and Zienkiewicz, O.C., “An Alpha Modification of Newmark’s Method”, International
Journal for Numerical Methods in Engineering, Vol., 15, pp. 1562-1566, 1981.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
References110
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 4: Solution Strategies for Nonlinear Analysis
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
4Solution Strategies for
Nonlinear Analysis
Introduction
Nonlinear Characteristics and General Recommendations
Equations Governing Nonlinear Analysis
Differences Between Linear and Nonlinear Analysis
Load Incrementation and Iteration
Load Increment Size
Convergence Controls
Arc-Length Methods for Post-buckling Analysis
References&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Introduction112
Main Index
Introduction
MSC Nastran SOL 400 provides a comprehensive FE solution for multi-physics problems such as structure analysis,
thermal analysis, as well coupled analysis. Even though it is originally targeted to deal with various nonlinearities as
geometry nonlinearity, material nonlinearity, as well boundary nonlinearity (contact), it is also embedded with the powerful
capabilities of MSC Nastran on linear analyses.
The FEM is a powerful tool for analyzing complex problems in structural and continuum mechanics. The analysis of a
structure using the FEM has four basic steps:
1.Modeling, in which the structure is subdivided into an assemblage of discrete volumes called finite elements, and
properties are assigned to each element.
2.Evaluation of element characteristics, such as stiffness and mass matrices, followed by assembling the element
characteristic matrices to obtain the assembled or “global” matrices characteristic of the entire structure. A similar
process is followed to obtain the total loads, in vector form, applied to the structure.
3.Solution of the system equations for displacements, natural frequencies and mode shapes, or buckling load factors.
4.Calculating other quantities of interest, such as strains, stresses and strain energy.
SOL 400 uses the finite element displacement method, in which a system of equations is solved to obtain the displacements
at all node points of the structure. Comprehensive presentations of the FEM together with numerous applications are
available in textbooks and the research literature.
Solving the equations of finite element analysis involves the manipulation of large matrices of numbers, which is best done
using computers. While modern computers are extremely fast and have vast amounts of memory, the “bottom line” in finite
element analysis is that it is very easy to discretize a structure to the point that it is considered to be a “large” problem.
T ypically, the geometry of the problem will dictate how fine of a mesh is required to get an acceptable solution. While
modern graphical user interfaces (GUI&amp;rsquo;s) such as Patran can provide some guidance and tools for evaluating the mesh
density, in the end it is up to the user to ensure that the problem is adequately discretized. The size of FEA problems is
typically measured by the number of degrees of freedom (or degrees of freedom) in the finite element mesh. For nonlinear
problems, the size is even more important because the methods used to solve these nonlinear equations are usually iterative
in nature, meaning that the system of equations must be solved many, many times to follow the behavior of the structure
as it changes. The changes characterized may be the shape (called large deformation), or the status of the material (metal
materials typically yield when a certain stress level is exceeded), or loading changes (the load orientation may follow the
deformation of the structure, or different parts of the structure may come into contact changing the load path). The purpose
of this chapter is to describe the numerical methods and procedures required to solve the linear and nonlinear equations
used to perform finite element simulations.
We begin this chapter with some general observations and recommendations on how to approach the solution to nonlinear
FEA problems, and then move through the details of how to get an accurate, efficient solution using the algorithms and
methods available in MSC Nastran SOL 400. Along with the efficiency, we discuss the concept of “robustness”, which
means choosing algorithms that will tolerate changes in the problem (sometimes abrupt, such as contact characterizing
impact) with out causing the solution algorithms to fail. A robust numerical method automates changes in the solution
parameters, such as load increment size, as required by the problem yet still provides a reasonably accurate and efficient
solution.&lt;/p&gt;
&lt;p&gt;113 Chapter 4: Solution Strategies for Nonlinear Analysis
Nonlinear Characteristics and General Recommendations
Main Index
The characteristics of the solution methods and strategies in this chapter include: solution iteration methods, transient
analysis effects such as time step selection, and time integration method, arc-length methods for post-buckling, and
convergence measurements and controls. This chapter may be read as a tutorial, but is probably best used as a reference
when considering specific problems encountered while trying to solve a nonlinear finite element problem.
Nonlinear Characteristics and General Recommendations
Modeling for nonlinear analysis is not exempted from the guidelines for good modeling practice pertaining to linear
analysis, which are summarized as follows:
The analyst should have some insight into the behavior of the structure to be modeled; otherwise, a simple model
should be the starting point.
Substructuring should be considered for the modularity of the model and/or synergism between projects and
agencies involved.  The structure represented by a substructure is always linear.
The size of the model should be determined based on the purpose of the analysis, the trade-off between accuracy
and efficiency, and the scheduled deadline.
Prior contemplation of the geometric modeling will increase efficiency in the long run. Factors to be considered
include selection of coordinate systems, symmetric considerations for simplification, and systematic numbering of
nodal points and elements for easy classification of locality.
Discretization should be based on the anticipated stress gradient, i.e., a finer mesh in the area of stress
concentrations.
Element types and the mesh size should be judiciously chosen. For example, avoid highly distorted and/or
stretched elements (with high aspect ratio).
The model should be verified prior to the analysis by some visual means, such as plots and graphic displays.
Nonlinear analysis requires deeper insight into structural behavior. First of all, the type of nonlinearities involved must be
determined. If there is a change in constraints due to contact during loading, the problem may be classified as a boundary
nonlinear problem and would require contact body creation and contact modeling. The material nonlinearity is
characterized by material properties. However, the material nonlinear effects may or may not be significant depending on
the magnitude and duration of the loading, and occasionally on environmental conditions. The anticipated stress level
would be a key to this issue. The geometric nonlinearity is characterized by large rotations which usually cause large
displacements. Intuitively, geometric nonlinear effects should be significant if the deformed shape of the structure appears
distinctive from the original geometry without amplifying the displacements. There is no distinct limit for large
displacements because geometric nonlinear effects are related to the dimensions of the structure and the boundary
conditions. Strain is nondimensional, and a strain greater than 2% indicates a geometrically nonlinear problem.
Differences Between Linear and Nonlinear Analysis
Nonlinear analysis is intrinsically a multi-increment load process where the applied loads and/or   displacements are solved
for, not in a single load increment but in a number of load increments. The   multiple step procedure is necessary for the
FE code to update changing conditions in the model during the analysis. This situation is routinely encountered in
nonlinear analysis because the material properties and/or boundary conditions can change during the analysis (e.g., with&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Differences Between Linear and Nonlinear Analysis114
Main Index
the onset of plasticity (material nonlinearity)), or with the occurrence of contact (boundary conditions nonlinearity). Below
are the steps in a general linear and a nonlinear analysis. The presence of an extra loop of iterations (Newton-Raphson
iterations) is the unique feature of a nonlinear solution procedure.
A. Steps in Linear Analysis:
1.Set up the model (done by user, before the model is submitted) .
•Mesh the part
•Apply Material Properties
•Apply Boundary Conditions
•Submit Job
2.Job Solution (done by FE Code) .
•Assembly of stiffness Matrix
•Solution of stiffness matrix.
•Compute displacements, strains, stresses (and other results)
3.View Results .
Figure 4-1 shows the basic steps that MSC Nastran follows when solving a linear statics analysis.&lt;/p&gt;
&lt;p&gt;115 Chapter 4: Solution Strategies for Nonlinear Analysis
Differences Between Linear and Nonlinear Analysis
Main Index
Figure 4-1  Linear Static Analysis in MSC Nastran
You are guaranteed a solution if the boundary conditions and material properties are set up correctly. The stiffness matrix
is assembled and solved only once in the entire analysis.
B. Steps in Nonlinear Analysis:
1.Set up the model (done by you, before model set-up) .
•Mesh the part .
•Apply Material Properties .
•Apply Boundary Conditions .Calculate element forces and stresses from displacement resultsRepresent continuous structure as a collection of grid points
connected by discrete elements
Formulate element stiffness matrices from element properties,
geometry, and material
Assemble all element stiffness matrices into global stiffness
matrix
Apply boundary conditions to constrain model (i.e., remove
certain degrees of freedom)
Generate load vector (forces, moments, pressure, etc.)
Solve matrix equation  [K]{u} = {p}  for displacements&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Differences Between Linear and Nonlinear Analysis116
Main Index
•Submit Job .
2.Job Solution (done by FE Code):
Newton-Raphson Iteration scheme begins: Apply a portion of the total load to start: (1% in this case):
•Assembly of stiffness Matrix .
•Solution of the Stiffness Matrix.
•Check for convergence (this is an important step which is only seen in nonlinear analysis).
If converged, the solution/structure is in equilibrium. Go to step 3.
If not converged, update information and reassemble, resolve stiffness matrix.
Keep iterating till convergence is achieved.
3.(After convergence) Get displacements, strains, stresses .
4.Apply the next increment of load and go to Step 2. Keep doing this until all the load is applied.
5.View Results .
Load Increments and Iterations
Load Increments
In the loading history, the total change of loading applied during a step can be subdivided into smaller parts to allow the
solution to converge. These subdivisions within a subcase are termed load increments. The recommended procedure for
SOL 400 nonlinear analyses is to use the adaptive load incrementation process which is the default method used when the
job is set up in Patran. In this case, the number of load increments is specified in Patran on the Load Increments subform
and are defined in the bulk data file by the NINC  field on the NLSTEP  entry. Selecting fixed incrementation and specifying
the number of increments divides the total load change applied during the subcase into NINC  equal parts for FIXED  load
incrementation, but only provides the initial load increment size in the case of adaptive load incrementation. The
automated adaptive load incrementation method is strongly recommended over the manual method because it gives the
algorithm the freedom to decrease the load when loading changes occur, such as when bodies come into contact or sudden
discontinuities in the loading history occur. These types of changes often cause convergence problems when fixed stepping
algorithms are used. See the NLSTEP  bulk data entry for more details.
Iterations
In the incremental solution process, the unbalanced forces that occur during a load increment are reintroduced internally
into the solution until the solution has converged. The process of redistributing the unbalanced force within a load
increment is known as an iteration. The iteration is the lowest level of the solution process. Iterations continue within a
load increment until the solution converges or any of the specified convergence parameters are exceeded. A complete
description of the numerical procedure used to solve the nonlinear problem is given in this chapter.&lt;/p&gt;
&lt;p&gt;117 Chapter 4: Solution Strategies for Nonlinear Analysis
Differences Between Linear and Nonlinear Analysis
Main Index
Figure 4-2  MSC Nastran Advanced Nonlinear Flow Diagram
The important point to note is that the total load is applied gradually in steps (or increments) and for each load step, the
solution is arrived at after one or more iterations. If the behavior of the model is generally linear, few iterations are required
to solve that load step. If the model behavior is complex/nonlinear, many iterations might be required. Each iteration
involves an assembly and solution of the stiffness matrix. Hence, nonlinear problems inherently take longer than linear
models (of the same size) to solve. At the end of each iteration, a check is made to see if the solution has converged. If the
convergence check fails, the iteration is repeated with the new information. This process repeats until convergence is No
NoYes
YesEquivalent Nodal
Load Vector
Matrix AssemblyInput Phase:
Read Input Data
Space Allocation
Data Check
Matrix Solution
Stress Recovery
Convergence
Output Phase
Next
Increment
StopIncremental
LoadsTime Step Loop
Iteration Loop&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Differences Between Linear and Nonlinear Analysis118
Main Index
achieved. Following that, the next increment of load is applied. The load increments are applied until the full load of the
model is solved.
T o achieve accurate results, three key points have to be paid attention to:
Iteration method;
Load increment control; and
Convergence criterion.
The three points will be discussed in later sections.
What Triggers a Nonlinear Analysis in SOL 400
As for MSC Nastran, the model is treated as a nonlinear analysis, if it consists of:
Large displacement by LGDISP parameter (for geometric nonlinearity);
Large strain by LRGSTRN (for geometric nonlinearity);
any contact (boundary nonlinearity);
any active nonlinear material input option (material nonlinearity)
linear perturbation (individual or combined nonlinearities)
or any combination thereof.
The model may contain superelements, but only the residual structure (superelement 0) may consist of nonlinear elements,
mixed with any type of linear elements. As aforementioned, other potentially nonlinear elements in the residual structure
become actively nonlinear only if a LGDISP or LRGSTRN is used and/or if they use the nonlinear material data specified
on any one of the entries: MATEP , MATVE, MATVP , MATF ,  MATS1, MATS3, MATS8, MATSORT, MATG, MATHE,
MATHP , MATSMA, and MCOHE, and/or perturbation analyses.
General Recommendations for Nonlinear Analysis
With these points in mind, additional recommendations are imperative for nonlinear analysis:
Identify the type of nonlinearity and localize the nonlinear region for computational efficiency. If unsure, perform
a linear analysis to help understand the problem.
Segregate the linear region by using superelements and/or linear elements if possible. Notice that the potentially
nonlinear elements can be used as linear elements.
The nonlinear region usually requires a finer mesh. Use a finer mesh if severe element distortions or stress
concentrations are anticipated.
The step/subcase structure should be utilized properly to divide the load or time history for conveniences in data
recovery, and database storage control, not to mention changing constraints and loading paths.
The load or time for the subcase with NLSTEP should then be further divided into increments, for the purpose of
convergence control. Automatic adaptive load incrementation, such as is available via NLSTEP, is the
recommended method.
Many options are available in solution methods to be specified on the NLSTEP data entries. The defaults should
typically be used on all options to gain experience before experimenting with other options.&lt;/p&gt;
&lt;p&gt;119 Chapter 4: Solution Strategies for Nonlinear Analysis
Equations Governing Nonlinear Analysis
Main Index
Normal rotation for the “drilling degree of freedom” of shell elements restrained by the default value of 100 on the
K6ROT parameter when the geometric nonlinearity is involved. In rare cases it may be necessary to adjust this
value. This can help with convergence, but may also affect the results.
Understand the basic theory of plasticity, creep, or rubber elasticity before using these capabilities.
The time step size for a transient response analysis should be carefully considered based on the highest natural
frequency of interest because it has significant effects on the efficiency as well as the accuracy of the solution. The
automated procedures used by NLSTEP is adequate for this purpose.
Equations Governing Nonlinear Analysis
Theories in solid mechanics are dictated by three governing relationships:
The state equilibrium that requires
where ij are stress tensor components, bi are body forces, and  xj are space coordinates;
The constitutive relations represented by stress-strain relations, e.g., for linear elasticity,
where kl are strain tensor components and Dijkl are elastic constants;
The compatibility represented by strain-displacement relations, e.g., for a small deformation,
where ui are displacements.
These systems of governing differential equations must be satisfied for every infinitesimal element throughout the domain
of the continuum. The complete set of state variables, namely displacements, may be determined by solving these systems
of equations supplemented by  boundary conditions, and in dynamic situations by initial conditions as well. For the
nonlinear problems, the governing equations should be satisfied throughout the history of load application. The material
nonlinearity is manifested in the constitutive relations. The geometric nonlinearity is pronounced in the strain-
displacement relations, but it also affects the equilibrium equation by changing applied loads. Changes in constraints affect
the boundary conditions, which constitute contact problems.
Most of the known analytical solutions for the solid mechanics problems are based on ideal geometry and linear
approximations. However, the real nature is more complicated and inherently nonlinear. The linear system is a very
particular case of a general problem. Even the nonlinear solutions that we seek deal with only a small subset of special cases
in a general category of nonlinear problems. When the nonlinear system is confronted, no general mathematical solutions
exist and superposition no longer applies. The system may even be non-conservative.ij
xj&amp;mdash;&amp;mdash;&amp;mdash;-bi+ 0=
ijD=ijklkl
ij1
2&amp;mdash;ui
xj&amp;mdash;&amp;mdash;-uj
xi&amp;mdash;&amp;mdash;-+
   =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Equations Governing Nonlinear Analysis120
Main Index
The first phase of the structural analysis is the idealization of a physical system into a simpler and more manageable
engineering problem. The idealization process involves simplifications of the geometry, boundary and joint conditions, and
loading conditions, etc. using engineering intuitions, experimental data, empirical observations, and classical solutions. If
the idealized structural system renders a problem that cannot be resorted to a classical method of analysis, further
idealization is required, namely discretization, for numerical analysis.
For the discrete system, governing differential equations are converted to algebraic equations. The finite element model
represents a structure by an assemblage of finite elements interconnected at nodal points. State variables are the
displacements (displacement method or stiffness approach) of the nodal points which carry fictitious forces representing
distributed stresses actually acting on the element boundaries. The equilibrium requirements are satisfied at nodal points
by the nodal force balance. The material constitutive laws are satisfied at the integration points of the element. The
compatibility is ensured by the displacement continuity between elements.
Finite Element Formulation for Equilibrium Equations
The variational principle renders the system governing equilibrium equations when applied to a functional II, representing
a total potential of a continuum, i.e.,
 = U + W (4-1)
where U is the strain energy of the system and W is the potential energy of the external loads. The equilibrium equations
can be obtained by invoking the principle of virtual work or the  Ritz method, i.e.
 =  0 or (4-2)
which implies that the total potential of the system must be stationary with respect to the state variables (displacement) for
equilibrium to be ensured. The functional II is so called because it involves the integral of implicit functions of the state
variables, {u}.
Considering a three-dimensional continuum for a nonlinear problem, the stationary condition results in
(4-3)
where the dots and denote infinitesimal increments and arbitrary variations, respectively. The left -hand side represents
variations in the strain energy increment and the right-hand side represents variations in the external work which consists
of body forces bi (such as a gravity load), traction forces ti at the boundary surface (such as pressure loads), and concentrated
forces pi. Now it remains to determine admissible functions expressing the arguments of the functional II in terms of state
variables {u}, which are valid throughout the whole region and satisfy the boundary conditions.
The FEM can be characterized by the following features distinguished from the conventional Ritz methods or the matrix
method for frame structures:
The whole region of the system is divided into numerous sub-domains, called finite elements, which have simple
geometrical shapes.
The variational process is limited to each finite element, which aggregates into a whole region when assembled.
u&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 0=
ij·
ijVd
Vbiu·iVd
Vtiu·iSd
Spiu·i
i+ + =&lt;/p&gt;
&lt;p&gt;121 Chapter 4: Solution Strategies for Nonlinear Analysis
Equations Governing Nonlinear Analysis
Main Index
The admissible displacement field within each element, , can be expressed in terms of nodal displacements
using interpolation functions known as shape functions, N, i.e.,
(4-4)
where {u} is a displacement vector consisting of all nodal points of the element.
The strain displacement relations for the element can then be established in terms of nodal displacements using the shape
functions in equation (4-4), i.e.,
(4-5)
where
(4-6)
and the element matrix [B] consists of derivatives of the shape functions, evaluated at the current deformed geometry.
Notice that the geometric linear problem requires that the element matrix be evaluated only at the initial geometry. In SOL
400, when LGDISP  is used in conjunction with the advanced elements, a consistent updated Lagrange technique is used.
MSC Nastran SOL 106 and SOL 129 employ an approximate updated Lagrangian approach for geometric nonlinear
problems, by which linear strains are computed in the updated element coordinate system in order to eliminate the effects
of the rigid body rotation but the equilibrium is established at the final position in the stationary coordinate system. This
method does not require reevaluation of the element matrix [B] (constant in the absence of large strains) while the element
coordinates are reevaluated continuously.
Equilibrium equations for an element may be obtained by reducing equation (4-3) after the substitution of equations (4-4)
and (4-5), based on the small deformation theory. Then the element boundary stresses are statically equivalent to the nodal
forces which balance the applied external loads, i.e.,
(4-7)
with
(4-8)
and
(4-9)
where [Ns] is an appropriate interpolation function for the traction force. equilibrium equation for an incremental load may
be expressed asu˜
u˜ Nu =
· Bu· =
·T·
x·
y·
z·
xy·
yz·
zx   =
FePe=
FeBTVd
V=
PeNTbVd
VNsTtSd
Sp + + =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Equations Governing Nonlinear Analysis122
Main Index
(4-10)
where  should be components of co-rotational stress which is independent rotation.
The element stiffness matrix can be obtained by substituting the constitutive relations into equation (4-10); i.e.,
(4-11)
where
and [D] is a material tangent matrix. The nodal forces of an element can then be expressed as
(4-12)
where the element stiffness is
(4-13)
Notice that this expression represents an element stiffness due to the material stiffness without geometric nonlinear effects.
As will be shown later, an additional stiffness [Kd]due to initial stresses should be included for an incremental process
because the initial stresses exist from the second increment.
The equilibrium must be satisfied in the whole region throughout the complete history of load application. Equilibrium
equations for the global discrete system are obtained when all the elements are assembled, i.e.,
(4-14)
where  over m denotes a summation over all elements. For the incremental process, the equilibrium equation may be
rewritten as
(4-15)
with
(4-16)F· BT·Vd
VP· = =
·
· D· =
Txyzxyyzzx  =
F·eBT·Vd
VKeu· = =
KeBTDBVd
V=
BTVd
V
mPe
m=

BT0–Vd
V
mP =
P Pe
mBT0Vd
V
m– =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P8</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_008/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_008/</guid>
      <description>
        
        
        &lt;p&gt;123 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Incrementation and Iteration
Main Index
where {0} represents an initial stress or the stress state at the preceding load step.
Because of the approximations involved in the interpolation functions, the finite element model provides an approximate
solution even if the equilibrium (equation (4-14)) is satisfied exactly. Consequently, the differential equations of equilibrium
are not satisfied exactly even for linear problems, but the error decreases as the finite element mesh is refined. This
convergence condition is ensured by using conforming elements that satisfy the patch test. With a displacement approach,
the finite element model is generally known to produce a stiffer structure than in reality.
Load Incrementation and Iteration
Nonlinear Solution Procedure
Based on the extensive numerical experiments, an attempt was made to establish a robust, general strategy suitable for most
problems without requiring insight or experience. Variations in combining theories, algorithms, criteria, and parameter
values with numerous test problems resulted in a succinct implementation.
The major feature of the nonlinear analysis is the requirement for the incremental and iterative processes to obtain a
solution. The main issue is how to choose the most efficient method from the options available for the incremental and
iterative processes in the solution of nonlinear equilibrium equations. The increment size for loads or time steps has the
most significant effect on the efficiency and the accuracy of the computation, particularly in the path-dependent problems.
The incremental and iterative processes are complementary to each other because the larger the increment size the more
iterations the solution requires. While an excessively small increment reduces the computing efficiency without any
significant improvement in accuracy, a large increment may deteriorate the efficiency as well as the accuracy; it may even
cause divergence.
It is impossible to optimize the incremental step size in the absence of prior knowledge of the structural response. The
NLSTEP  adaptive load incrementation procedure should be exercised to determine the increment size based on the severity
of the nonlinearity. Needless to say, no incremental load steps are required when the response is linear. In principle, the size
of the load increment (or time increment for creep analysis) should be so chosen to yield a uniform rate of change in strains
or stresses for the material nonlinear problems and a uniform rate of change in displacements for geometric nonlinear
problems. Some adaptive method controls are available via NLSTEP , such as an automatic time step adjustment criteria
and bisection/cut-back of loads upon divergence. The default method is to use the initial load increment value specified on
the NLSTEP  entry, then increase or decrease the size if the number of iterations required to converge varies significantly
from the NDES  value. If substantially more than NDES  iterations are required the time step size is decreased. Conversely, if
substantially more iterations than NDES  are required the time step size will be decreased. The magnitude of increase/decrease
is controlled by the SFACT  value.
The increment size can be varied from step to step by specifying different NLSTEP . It is recommended to define separate
NLSTEP  for every step even if the same values are specified, so that changes can be accommodated in the step level as
needed.&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Incrementation and Iteration124
Main Index
Adaptive Solution Strategies
Nonlinear finite element computations comprise material processes, element force computations, and various global
solution strategies. The computational procedure involves incremental and iterative processes ranging from local
subincrements to global solution processes. Performance of the finite element program can be scrutinized from three
different perspectives: computational efficiency, solution accuracy and effectiveness. All of these attributes of the nonlinear
program can be improved by adaptive algorithms.
There is a broad range of processes for which adaptive algorithms may be adopted in the computational procedure of
nonlinear finite element analysis. The size of the load or time increment has the most profound effect on the efficiency as
well as accuracy. However, it is difficult to determine optimal load or time increment size. The adaptive algorithm alleviates
this difficulty. The most CPU consuming processes in nonlinear analysis are the stiffness matrix update operation and
element force calculation. From the efficiency point of view, the number of stiffness matrix updates and the number of
iterations should be minimized, which may be conflicting requirements.
Adaptive features implemented in MSC Nastran nonlinear capabilities are:
Newton&amp;rsquo;s iteration for static and implicit dynamic analysis
•Adaptive stiffness matrix update strategies
•Selective BFGS updates
•Selective line search processes
•Adaptive bisection and recovery of load increment
 Arc-length methods for static post-buckling and snap-through problems
•Crisfield&amp;rsquo;s arc-length method
•Riks and modified Riks methods
•Adaptive arc-length adjustment
•Selective BFGS Updates
•Adaptive switching algorithm for limiting cases
•Adaptive correction in case of path reversal
Direct time integration for transient response analysis
• Quadratically accurate dynamic operators
• Automatic time step adjustment
Newton&amp;rsquo;s Method of Iteration
The equilibrium equations in the g-set may be written as
{Pg} + {Qg} - {Fg} = {0} (4-17)
where {Pg}, {Qg}, and {Fg} represent vectors of applied loads, constraint forces, and element nodal forces, respectively.
Element nodal forces are nonlinear functions of displacements for nonlinear elements. Since the equilibrium condition is&lt;/p&gt;
&lt;p&gt;125 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Incrementation and Iteration
Main Index
not immediately attained in the presence of nonlinear elements, an iterative scheme such as the Newton-Raphson method
is required. Since the error vanishes at constrained points and the constraint forces vanish at free points, the unbalanced
forces acting at nodal points at any iteration step are conveniently defined as an error vector by
{Ra} = {Pa} - {Fa} (4-18)
Notice that the a-set is equivalent to the 1-set in the nonlinear analysis because the r-set does not exist. The subscript a will
be dropped for simplicity in the following discussion.
Based on Newton&amp;rsquo;s method [equations (4-17) and (4-18)], a linearized system of equations is solved for incremental
displacements by Gaussian elimination in succession. The Jacobian of the error vector emerges as the tangential stiffness
matrix. The equation to solve at the ith iteration is
(4-19)
where
(4-20)
(4-21)
and
(4-22)
The iteration continues until the residual error {R} and the incremental displacements u become negligible, which is
signified by the convergence criteria.
The tangential stiffness consists of the geometric stiffness in addition to the material stiffness, i.e., without regard to the
coordinate transformation,
(4-23)
where Km and Kd refer to the material and the differential stiffnesses, respectively. The material stiffness is given in equation
(4-13) with a material tangential matrix for [D]. The differential stiffness, which is caused by the initial stress, is defined as
follows:
(4-24)
where BN represents the second order effects in the strain-displacement relations, [G] consists of derivatives of shape
functions and [M] is a function of stresses. Notice that the initial displacement stiffness is not included in KT because its
effects are already eliminated in the element formulation.KTui Ri1– =
KTR
u&amp;mdash;&amp;mdash;
uu&amp;rsquo;=–F
u&amp;mdash;&amp;mdash;
uu&amp;rsquo;== =
ui ui ui1– – =
Ri P Fui – =
KT
u&amp;mdash;&amp;mdash;BTVd
VKmKd+ = =
KdBN
u&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;T
Vd
VGTMGVd
V= =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Incrementation and Iteration126
Main Index
Then the residual load error is automatically carried over to the next incremental process. The merit of the Newton-
Raphson method is the quadratic rate of convergence, i.e.,
(4-25)
where u* is a true value of {u}, q is a constant, and  represents a vector norm. From a practical standpoint, however,
determination of the tangential stiffness and its inverse at each iteration entails a considerable amount of computation. As
Figure 4-3 suggests, one may resort to the modified Newton&amp;rsquo;s method which requires the tangential stiffness to be evaluated
just once at the initial position, u0, and used thereafter to solve for ui. However, more iterations are required for a given
accuracy by the modified Newton&amp;rsquo;s method.
Figure 4-3  Newton Methods for Iteration
The Gaussian elimination method is better suited for this approach than the iterative solver method because the
decomposition is performed only once.
Stiffness Update Strategies
Among other features of the solution algorithm, the stiffness matrix update has probably the most profound effect on the
success of the nonlinear solution. In spite of its significance, however, it is very difficult to implement a robust algorithm
for update strategy due to the lack of a priori information regarding the right timing for an update. In this section, stiffness
update strategies are reviewed with respect to the static analysis.u&lt;em&gt;ui1+– qu&lt;/em&gt;ui–2
13
Iteration Count
DeflectionLoad
(a) Newton-Raphson Method
(b) Modified Newton MethodIteration Count
DeflectionLoad
1234567892&lt;/p&gt;
&lt;p&gt;127 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Incrementation and Iteration
Main Index
Variations of the modified Newton&amp;rsquo;s method are adopted in MSC Nastran. A variation of the modified Newton&amp;rsquo;s methods
is to update the stiffness matrix at every few iterations. However, the modified Newton&amp;rsquo;s method could lead to divergence
when the stiffness changes drastically, as demonstrated in Figure 4-4, unless the tangential stiffness is reevaluated at the
critical point. T o this end, an adaptive matrix update method is indispensable. Stiffness update strategies are established to
update the stiffness matrix on an as needed basis such as probable divergence.
Figure 4-4  Hybrid Newton Method based on Stiffness Matrix Update Strategy
Update Principles
Newton&amp;rsquo;s method could be trapped in an infinite loop, oscillating about the local maximum as illustrated in Figure 4-5(a).
This difficulty is overcome during the Newton&amp;rsquo;s iteration by discarding the differential stiffness, [Kd], when the tangential
stiffness is not positive definite as shown in Figure 4-5(b). However, the non-positive definite stiffness matrix will be retained
and used for iteration if the arc-length method is used for the static solution.
From the user’s point of view, the stiffness update process is primarily controlled by the input data in KMETHOD  (PFNT&lt;br&gt;
or ITER ) and KSTEP  (integer) fields of the NLSTEP  bulk data entry.
Note:   Only PFNT should be used if contact is included in the simulation.Path taken with
stiffness matrixupdate
Path taken without
stiffness matrix update
Solution
Initial TangentStarting
PointF
P
u0u*u2 u1u&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Incrementation and Iteration128
Main Index&lt;/p&gt;
&lt;p&gt;Figure 4-5  Iteration Trap Condition
Quasi-Newton Method
The quasi-Newton update method is employed as an option to accelerate the convergence and improve the overall
effectiveness of the modified Newton&amp;rsquo;s iteration. Experience shows that the BFGS method has a significant impact on the
program&amp;rsquo;s performance.5
12
34
Iteration
sequence
DeflectionLoad
P
(a) Iteration stops at 3 with PARAM,TESTNEG = -1 if the stiffness becomes negative.
Iteration will be trapped if continued with TESTNEG = +1 or 0.
DeflectionPLoad
12
3
45Km
Kd omitted for these
wo iterations
(b) Iteration sequence drops the differential stiffness with PARAM,TESTNEG = -2
when the negative diagonal terms appear in the stiffness matrix.&lt;/p&gt;
&lt;p&gt;129 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Incrementation and Iteration
Main Index
Quasi-Newton update methods are considered the most sophisticated methods of the Newton&amp;rsquo;s iterative solution schema
and represent the culmination of extensive algorithm development for Newton&amp;rsquo;s iterative process. They have been
developed for efficient nonlinear iterations by approximating the inverse Hessian matrix in place of the true inverse that is
required in Newton&amp;rsquo;s method. Quasi-Newton methods have been widely and successfully used in nonlinear optimization
applications. One of the quasi-Newton techniques, known as BFGS (Broyden-Fletcher-Goldfarb-Shanno) update, was
introduced into the FEM by Matthies and Strang.
By the BFGS update, the information acquired during the iteration is used to modify the inverse stiffness matrix. This
approximate update to the inverse stiffness matrix results in a secant modulus in the search direction. As these updates
accumulate, the BFGS method renders a stiffness matrix resembling tangential stiffness in the limit. When combined with
the line search, the performance of the BFGS update with respect to effectiveness and efficiency depends largely on the
implementation. It is extremely difficult to tune the tolerances and parameters to the optimal condition, which may be
problem dependent, for the general class of problems.
Evolution of Quasi-Newton Method
The basic concept of quasi-Newton methodology is to construct an approximate inverse Hessian (stiffness) matrix using
information gathered during the descent process. The current approximation is used at the next iteration to define the next
feasible direction in the modified Newton&amp;rsquo;s method. Upon the first iteration, a feasible direction of descent is given by
(4-26)
where {R} represents an error vector to be minimized and K0 is a Hessian matrix. In the absence of line searches or quasi-
Newton updates, the second iteration would lead to the next feasible direction:
(4-27)
with
u1 = u0 + d1(4-28)
Consider a Taylor series expansion of the load error {R} a bout {ui}, expressed as
(4-29)
where
R(u) = P - F (u) (4-30)
with F(u) being the aggregate vector of element nodal forces. Assuming that the load stiffness due to follower forces is
negligible, the stiffness matrix is formed byNote:   The BFGS method cannot be used in a simulation that includes contact.
d1K01–Ru0 =
d2K01–Ru1 =
R RuiKuui– – Oh + =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Incrementation and Iteration130
Main Index
(4-31)
In view of equation (4-29), the data from two points, {ui-1} and {ui}, should provide some information about [IC], because
they should satisfy:
 = K or  = K-1 (4-32)
with
 = ui - ui-1(4-33)
and
 = Ri-1 - Ri(4-34)
It is natural to attempt constructing successive approximations to [K]-1 based on the data obtained during the iterative
procedure.
The earliest quasi-Newton scheme was proposed by Davidon and later elaborated by Fletcher and Powell. By this scheme
which is referred to as the DFP method, the inverse Hessian is updated by adding two symmetric rank one matrices at each
iteration. Therefore, the scheme is a rank two correction procedure, i.e.,
(4-35)
Notice that the formula simply satisfies equation (4-32) while preserving positive definiteness and symmetry of [K]-1.
It is also possible to update approximations to the stiffness matrix itself, rather than its inverse. Recalling the complementary
roles of [K] a nd [K]-1 with respect to the quasi-Newton vectors in equation (4-32), the formula for [K] is found by
interchanging 7 and b, i.e.,
(4-36)
Another way of finding the formula for the inverse stiffness matrix is to invert equation (4-36). This can be done by applying
the general inversion identity known as the Sherman-Morrison formula. The resulting formula is referred to as the Broyden-
Fletcher-Goldfarb-Shanno (BFGS) update for the inverse Hessian, i.e.,
(4-37)
Numerical experiments have indicated that the performance of the BFGS method is superior to that of the DFP method.
An equivalent form of equation (4-37) can be expressed for the jth BFGS update as:KR
u&amp;mdash;&amp;mdash;F
u&amp;mdash;&amp;mdash; = =
Ki1+1–Ki1–T
T&amp;mdash;&amp;mdash;&amp;mdash;Ki1–TKi1–
TKi1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; – + =
Ki1+ KiT
T&amp;mdash;&amp;mdash;&amp;ndash;Ki1–TKi1–
TKi&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – + =
Ki1+1–Ki1–1TKi1–
T&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +
   T
T&amp;mdash;&amp;mdash;&amp;mdash;TKi1–Ki1–T+
T&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- – + =&lt;/p&gt;
&lt;p&gt;131 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Increment Size
Main Index
[Kj]-1 = [Cj]T [Kj-1]-1 [Cj] + zjjj(4-38)
where [
[Cj] = [I] - zjjj(4-39)
and
(4-40)
This is a recurrence formula employed in MSC Nastran, which is applicable to every pair of quasi-Newton (QN) vectors.
Notice that the index j for the BFGS update may be different from the iteration index i. The stiffness matrix (therefore, its
inverse) is assumed to be symmetric and positive definite throughout the derivation.
Criteria for BFGS Update
There are cases where the BFGS update is not appropriate. These cases include the following:
Case 1 . When the solution diverges at the current iteration.
Case 2 . When the BFGS update makes [K]-1 near singular.
Case 3. When the BFGS update makes [K] near singular.
Case 4. When two successive data points involved in QN vector generation are too closely spaced.
Case 5. When the change in [K]-1 due to BFGS update is negligible.
Load Increment Size
Selecting a proper load step (time step) increment is an important aspect of a nonlinear solution scheme. Large steps often
lead to many recycles per increment and, if the step is too large, it can lead to inaccuracies or even nonconvergence. On the
other hand, using too small steps is inefficient.
The NLSTEP bulk data entry provides a unified load stepping scheme that replaces existing options entries such as
NLPARM, TSTEPNL, NLPCI, and NLSTEP.  This option can be used for statics and dynamic analyses, to select fixed
or adaptive time stepping control, and to define the convergence criteria, as well to make other options for mechanical,
thermal and coupled analysis. MSC has made every attempt to make MSC Nastran SOL 400 as robust, efficient, and user
friendly as possible; especially when used with either of the MSC graphical user interfaces (GUI’s) Patran or SimXpert. For
many problems the defaults entered are appropriate to minimize the job setup and obtain accurate results.
The NLSTEP  option has a keyword CTRLDEF that automatically sets up the entries for the time stepping adjustment and
convergence tolerance based upon how nonlinear you believe the problem is. This makes it possible to use smart default
based on users’ judgment of the nonlinearity of the model to be analyzed.zj1
jTj&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Increment Size132
Main Index
Under the keyword CTRLDEF , these three options ( QLINEAR , MILDLY , and SEVERELY ) adjust the parameter to provide
you the desired results. As the names imply, CTRLDEF  should be set to QLINEAR  for linear solutions, MILDLY  for mildly
nonlinear, and SEVERELY  for severely nonlinear behavior.
Fixed Load Incrementation
When a fixed load stepping scheme is used, it is important to select an appropriate load step size that captures the loading
history and allows for convergence within a reasonable number of recycles. For complex load histories, it is often necessary
to break up the analysis into separate load cases with different step sizes. For fixed stepping, there is an option to have the
load step automatically bisect/cut back in case of failure to obtain convergence. When an increment diverges, the
intermediate deformations after each recycle can show large fluctuations and the final cause of program exit can be any of
the following: maximum number of recycles reached, elements going inside out or, in a contact analysis, nodes sliding off
a rigid contact body (see Chapter 6: Setting Up, Monitoring, and Debugging the Analysis  for more on user fatal messages and their
causes). These deformations are normally not visible as post results. If the cutback feature is activated and one of these
failures occurs, the state of the analysis at the end of the previous increment is restored from a copy kept in memory or disk,
and the increment is subdivided into a number of sub-increments. The step size is halved until convergence is obtained or
the user -specified number of cutbacks has been performed. Once a sub-increment is converged, the analysis continues to
complete the rest of the original increment. No results are written to the results file during sub-incrementation. When the
original increment is finished, the calculation continues to the next increment with the original increment count
maintained. These issues are avoided by using the NLSTEP  increment option. The adaptive load incrementation procedure
of NLSTEP , using the MSC Nastran defaults, is the recommended method for load incrementation.
Adaptive Load Incrementation in SOL 400 (NLSTEP)
An NLSTEP  entry can be selected to execute a nonlinear static or nonlinear transient analysis in SOL 400. An NLSTEP&lt;br&gt;
entry is used in lieu of an NLPARM  or TSTEPNL  used in earlier solution sequences (SOL 106 or SOL 129) or both. If a
NLSTEP  is present anywhere in a  STEP , then any NLPARM or TSTEPNL  entries in the  STEP  is ignored. When used
for coupled analysis, the NLSTEP  entry must be above the first SUBSTEP  command. A single NLSTEP  entry is used for
all SUBSTEPs  of the STEP.
NLSTEP Bulk Data Entry
The following section gives a description of the most commonly used parameters of NLSTEP.  A complete description of
all parameters can be found in the QRG under the NLSTEP  entry.
NLSTEP
Describes the control parameters for mechanical, thermal, and coupled analysis in SOL 400 and for contact analysis in SOL
101. Specifies the convergence criteria, step size control and numerical procedure for time/load stepping in SOL 400. For
multi-physics, it controls both structural and thermal analysis. Defines analysis preference and control parameters for
contact analysis in SOL 101. There are three groups of data that can be entered through this option:&lt;/p&gt;
&lt;p&gt;133 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Increment Size
Main Index
1.General data which defined parameters that may be used for a variety of simulations. This data is provided by the
GENERAL  keyword.
2.Selecting the type of procedure used to control the time/load stepping procedure. These  procedures are activated
by the keywords: LCNT , FIXED , ADAPT , or ARCLN  (arc length or continuation method). Only one of the keywords
may be chosen in a loadcase.
3.Data associated with the physics type that are activated by the keywords: MECH , HEAT , COUP , and RCHEAT . One
can enter as many as necessary.
The NLSTEP is selected by the NLSTEP=ID  case control command.
Format: (For SOL 400)
NLSTEP - GENERAL
ID: invoked by NLSTEP  case control command
TOTTIME : total step time to be reached for this step (Default=1.0)
CTRLDEF :  the values QLINEAR , MILDLY , and SEVERELY  are available along with the option of leaving blank.
These values are used to set the convergence defaults.
MAXITER , MINITER : maximum and minimum number of iterations in one increment (Defaults = 10, 1)
MAXBIS : maximum number of bisections (Default=10). When negative and reached without convergence the step
continues with the next increment (be careful)
CREEP : for creep step (1= creep, 0= no creep)1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“GENERAL” MAXITER MINITER MAXBIS CREEP
“FIXED” NINC NO
“ADAPT” DTINITF DTMINF DTMAXF NDESIR SFACT INTOUT NSMAX
IDAMP DAMP CRITTID IPHYS LIMTAR RSMALL RBIG
ADJUST MSTEP RB UTOL
“ARCLN” TYPE DTINITFA MINALR MAXALR SCALEA NDESIRA NSMAXA
“HEAT” CONVH EPSUH EPSPH EPSWH KMETHODH KSTEPH
MAXQNH MAXLSH LSTOLH
“MECH” CONV EPSU EPSP EPSW KMETHOD KSTEP MRCONV
MAXQN MAXLS LSTOL FSTRESS
“COUP” HGENPLAS HGENFRIC
1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“GENERAL” MAXITER MINITER MAXBIS CREEP&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Increment Size134
Main Index
NLSTEP - Fixed
•NINC : number of increments for fixed time stepping (default = 50). The time step will equal TOTTIME/NINC .
NLSTEP - MECH&lt;/p&gt;
&lt;p&gt;CONV : Flags to select convergence criteria. “U”, “P”, “W”,”V”,”N”,”A” and combinations; Default = PV).
•U: for displacement error control
•P: for residual (load) error control
•W: for energy (work) error control
•V: for vector component norm used
•N: for length norm used
•A: for automatic switching of error measure
EPSU , EPSP , EPSW : Error tolerances for displacement ( U), load (P) and work ( W) criteria. (Defaults = 0.1, 0.1,
0.1). The defaults are adjusted based upon the value of CTRLDEF .
KMETHOD : Method for controlling stiffness updates.
•PFNT  is pure full Newton-Raphson iteration method which is the default and strongly recommended.
•ITER  is a quasi-Newton method where the stiffness matrix is updated every KSTEP  iteration. It should not be
used if contact or severe nonlinearities are included in the model.
KSTEP : Number of iterations before the stiffness update; only used for the ITER  method. (Default = 10)
MRCONV : Flag to specify if rotations and moments should be included in the convergence testing when CONV  is set
to UPV or UPN: (Default = 3)
•0: check on forces, moments, displacements and rotations
•1: check on forces, moments and displacements
•2: check on forces, displacements and rotations
•3: check on forces and displacements
MAXQN : Maximum number of quasi-Newton vectors. (Default = MAXITER ). Not used for PFNT .
MAXLS : Maximum number of line searches allowed for each iteration. (Default = 4). Not used for PFNT .
LSTOL : Line Search tolerance. (0.01 &amp;lt; Real &amp;lt; 0.9; Default = 0.5). Not used for PFNT . 1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“FIXED” NINC
1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“MECH” CONV EPSU EPSP EPSW KMETHOD KSTEP MRCONV
MAXQN MAXLS LSTOL FSTRESS&lt;/p&gt;
&lt;p&gt;135 Chapter 4: Solution Strategies for Nonlinear Analysis
Load Increment Size
Main Index
FSTRESS : Fraction of effective stress used to limit the sub increment size in material routines (0.0 &amp;lt; Real &amp;lt; 1.0;
Default = 0.2) For non material enhanced elements only.
NLSTEP - ARCLN
TYPE : Constraint type for Arc Length Method. (Character: “CRIS”, “RIKS”, or “MRIKS”; Default =“CRIS”)
•CIRS  is the Chrisfield method
•RIKS  is the Riks method
•MRIKS  is the modified Riks method (recommended)
DTINITFA : Initial time step defined as a fraction of the load step time ( TOTTIME ). (Default = .01)
MINALR , MAXALR : Minimum, maximum allowable arc-length adjustment ratio between increments. (Default =
0.25, 4.0)
SCALEA : Scale factor (w) for controlling the loading contribution in the arc-length constraint. (Default = 0.0)
 NDESIRA : Desired number of iterations for convergence to be used for the adaptive arc-length adjustment.
(Default = 4)
NSMAXA : Maximum number of increments. (Default = 1000). The job will stop if this limit is reached.
Note that
1.The ARCLN method is supported in permanent glue contact analysis.
2.The ARCLN method is not supported in general contact analysis.
3.The ARCLN method should not be used with SPCD or SPCR.
NLSTEP - ADAPT
DTINITF : Initial time step defined as fraction of total load step time ( TOTTIM ). (Real; Default 0.01). If
DTINITF&amp;gt;=DTMAXF  then, DTINITF  is reset to DTMAXF . If CTRLDEF  is set to QLNEAR , the user should set
DTINITF  equal to TOTTIM .
DTMINF : Minimum time step defined as fraction of total load step time ( TOTTIM ). (Real; Default 1e-5).
DTMAXF : Maximum time step defined as fraction of total load step time ( TOTTIM ). (Real; Default 0.5).1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“GENERAL” MAXITER MINITER MAXBIS CREEP
“ARCLN” TYPE DTINITFA MINALR MAXALR SCALEA NDESIRA NSMAXA
1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“ADAPT” DTINITF DTMINF DTMAXF NDESIR SFACT INTOUT NSMAX
IDAMP DAMP CRITTID IPHYS LIMTAR RSMALL RBIG
ADJUST MSTEP RB UTOL&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Load Increment Size136
Main Index
NDESIR : Desired number of iterations per increment. See Remark 2. (Integer; Default = 4)
SFACT : Factor for increasing time steps due to number of iterations. See Remark 4. (Real; Default =1.2).
INTOUT : Output flag. Integer &amp;gt; -1. (Default =0)
•-1 - Only the last increment of the step will be output.
•0 - Every computed load increment will be output.
•&amp;gt; 0 - The output will be obtained at INTOUT  equally spaced intervals. The time step will be temporarily adjusted
if necessary in order to reach these points in time.
NSMAX : Maximum number of increments in the current load case. (Integer; Default =99999). The job will stop if
this limit is reached.
IDAMP : Flag for activating artificial damping for static analysis.
•Enter 4 for time step control using damping.
•Enter 5 for damping based time step control but no damping added.
•Enter 6 for adding damping when the minimum time step has been reached. Recommended for robust and
stable analysis in a nonlinear analysis with advanced element.
•Enter 0 for not adding damping. (Integer, Default = 0).
DAMP : Damping ratio. (Real; Default =2.e-4).
CRITTID : ID of TABSCTL  Bulk Data entry which defines the user criteria to use. See Remark 5. (Integer; Default
0)
IPHYS : Flag to determine if automatic physical criteria should be added and how analysis should proceed if a user
criterion is not satisfied. (Integer; Default =2)
•2 Do not add automatic physical criteria; stop when any user criterion is not satisfied
•-2 Do not add automatic physical criteria; continue when user criteria are not satisfied
•1 Add automatic physical criteria; stop when any user criterion is not satisfied
•-1 Add automatic physical criteria; continue when any user criterion is not satisfied
LIMTAR : Enter 0 to treat user criteria as limits, 1 to treat user criteria as targets. (Integer; Default =0). Only used
if a user criterion is given through CRITTID . See Remark 5.
RSMALL : Smallest ratio between time step changes due to user criteria. (Real; Default =0.1)
RBIG : Largest ratio between time step changes due to user criteria. (Real; Default =10.0)
ADJUST : Time step skip factor for automatic time step adjustment. Only for dynamics. (Integer; Default = 0).
MSTEP : Number of steps to obtain the dominant period response. (10 &amp;lt; Integer &amp;lt; 200 or = -1; Default = 10).
RB: Define bounds for maintaining the same time step for the stepping function during the adaptive process. (0.1
&amp;lt; Real &amp;lt;1.0; Default = 0.6).
UTOL : Defines tolerance on displacement. (.0001 &amp;lt; Real &amp;lt; 1.0; Default = 1.0)&lt;/p&gt;
&lt;p&gt;137 Chapter 4: Solution Strategies for Nonlinear Analysis
Convergence Controls
Main Index
NLSTEP - HEAT
CONVH : Flags to select convergence criteria. (Character = “U”, “P”, “W”, “V”, “N, “A” or any combination.
(Default UPW)
•U: for displacement error control
•P: for residual (load) error control
•W: for energy (work) error control
•V: for vector component norm used
•N: for length norm used
•A: for automatic switching of error measure
EPSUH : Error tolerance for temperature (U) criterion. (Real; Default =1.0E-2)
EPSPH : Error tolerance for heat flux (P) criterion. (Real; Default =1.0E-2)
EPSWH : Error tolerance for work (W) criterion. (Real; Default =1.0E-2)
KMETHODH : Method for controlling stiffness updates. (Character = “PFNT”, “AUTO” or “ITER”).
Default =“AUTO”.
KSTEPH : Number of iterations before the stiffness update for the ITER  method. (Integer; Default =1).
MAXQNH : Maximum number of quasi-Newton correction vectors to be saved on database. (Integer;
Default =MAXITER ). Not used for PFNT .
MAXLSH : Maximum number of line searches allowed for each iteration. (Integer; Default = 4). Not used for PFNT .
LSTOLH : Line Search tolerance. (0.01 &amp;lt; Real &amp;lt; 0.9; Default = 0.5)
NLSTEP - COUP
HGENPLAS : Conversion factor for heat generated due to plasticity. (Real; Default =0.0)
HGENFRIC : Conversion factor for heat generated due to friction. (Real; Default =0.0)
Convergence Controls
Three methods are available for determining if convergence is obtained on any given iteration: residual force, displacement,
and strain energy. You can select one of these three criteria for convergence or you may specify a combination of residual
and displacement. The AND  combination signals that both residual and displacement must be met, while the OR 1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“HEAT” CONVH EPSUH EPSPH EPSWH KMETHODH KSTEPH
MAXQNH MAXLSH LSTOLH
1 2 3 4 5 6 7 8 9 10
NLSTEP ID TOTTIME CTRLDEF
“COUP” HGENPLAS HGENFRIC&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Convergence Controls138
Main Index
combination specifies that either one can satisfy convergence criteria. If you are using residual there may be cases in which
the force residuals are null in which case is it necessary to switch over to displacement. An Autoswitching option (on by
default) allows for this switching.
The default measure for convergence in SOL 400 is residual which is based on the magnitude of the maximum residual
load compared to the maximum reaction force. This method is appropriate since the residuals measure the out-of-
equilibrium force, which should be minimized. This technique is also appropriate for Newton methods, where zero-load
iterations reduce the residual load. The method has the additional benefit that convergence can be satisfied without
iteration. You have complete control over how convergence is defined through the Iterations Parameters form in Patran or
through the options on the NLSTEP  entry.
The basic procedures are outlined below.
1.RESIDUAL CHECKING
(4-41)
(4-42)
where F is the force vector, and M is the moment vector. TOL1 and TOL2 are control tolerances.  indicates
the component of F with the highest absolute value. Residual checking has one drawback. In some special problems,
such as free thermal expansion, there are no reaction forces. If the value of the residuals and reactions is less than
1.e-6, this test is ignored.
2.DISPLACEMENT CHECKING
(4-43)
(4-44)
where u is the displacement increment vector, u is the displacement iteration vector, is the incremental
rotation vector, and is the rotation iteration vector. With this method, convergence is satisfied if the maximum
displacement of the last iteration is small compared to the actual displacement change of the increment. If the value
of the incremental and iterative displacement is less than 1.e-8, this test is ignored. A disadvantage of this approach
is that it results in at least one iteration, regardless of the accuracy of the solution.Fresidual
Freaction&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;TOL1
Fresidual
Freaction&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;TOL1and Mresidual
Mreaction&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;TOL2
F
u
u&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;TOL1
u
u&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;TOL1and 
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;TOL2&lt;/p&gt;
&lt;p&gt;139 Chapter 4: Solution Strategies for Nonlinear Analysis
Convergence Controls
Main Index
Figure 4-6  Displacement Control
3.STRAIN ENERGY CHECKING
This is similar to displacement testing where a comparison is made between the strain energy of the latest iteration
and the strain energy of the increment. With this method, the entire model is checked.
(4-45)
where Eis the strain energy of the increment and E is the correction to incremental strain energy of the iteration.
These energies are the total energies, integrated over the whole volume. A disadvantage of this approach is that it
results in at least one iteration, regardless of the accuracy of the solution. The advantage of this method is that it
evaluates the global accuracy as opposed to the local accuracy associated with a single node.
Different problems require different schemes to detect the convergence efficiently and accurately. To do this, the following
combinations of residual checking and displacement checking are also available.
4.RESIDUAL OR DISPLACEMENT CHECKING
This procedure does convergence checking on both residuals (Procedure 1) and displacements (Procedure 2).
Convergence is obtained if one converges.
5.RESIDUAL AND DISPLACEMENT CHECKING
This procedure does a convergence check on both residuals and displacements (Procedure 4). Convergence is
achieved if both criteria converge simultaneously.
Auto-Switch
In several types of analyses, maximum reactions or displacements are extremely small (even close to the round-off errors of
computers). In such circumstances, not all types of relative convergence criteria may work properly. For example, in a
problem with stress-free motion, the convergence check based on relative displacement increments works correctly but not
the convergence check based on relative residual or strain energy. In this situation, it is necessary to check the convergence
with absolute values of reactions or strain energy; otherwise, the analysis may terminate prematurely. Similarly, this kind of
situation may happen for problems with spring back and free thermal expansion or constraint thermal expansion. The F
uk10Correction to incremental displacements of i th iteration i
Displacements at increment n un
i
j
j0=i
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;Tolerance
un1+0un1+k1+
E
E&amp;mdash;&amp;mdash;-TOL1&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Convergence Controls140
Main Index
details for the cases where convergence checking with relative values may encounter difficulties are listed in the table below.
The AUTO SWITCH  option is designed to switch to the proper convergence check scheme automatically if any of the
situations mentioned above occur during the analysis. This optional convergence check is activated by adding character “ A”
into the CONV  field of the NLSTEP  entry. This AUTO SWITCH  option allows automatic switching of the convergence check
scheme to check as required on either residuals or displacements if small reactions or displacements are detected, or to use
the absolute strain energy checking if necessary. If AUTO SWITCH  is turned on, it:
1.Switches on the relative residual checking if the relative displacement criterion is used (which fails when the
maximum incremental displacement becomes very small Max._incremental_displacement/Smallest_element size &amp;lt;
1.0e-8 )
2.Switches on the relative displacement checking if the relative residual force (moment) criterion is used (which fails
when the maximum reaction force becomes very small &amp;lt; 1.0e-6 )
3.To switch on the absolute energy checking if the structure is free of stress and deformation ( strain energy density &amp;lt;
1.0e-15 ).
Note that if both residual and incremental displacement criteria are already chosen (like “ UP”), the AUTO SWITCH  feature
will not be activated even if character “ A” is specified. In this case, SOL 400 will ignore it.
.
Specifying Convergence Criteria
Selection of the convergence criteria in MSC Nastran is made through the convergence criteria parameters on the NLSTEP
bulk data entries.
Guidelines and Limitations
The following guidelines for the NLSTEP  should be noted:
1.The default tolerance for mechanical is 10% relative testing on the residual force vector components ( CONV = PV ).
For some applications, it may be beneficial to have more iterations in the solution by checking on the incremental
displacement vector also ( CONV = UPV ). The default iteration scheme followed is Full Newton-Raphson
(KMETHOD = PFNT ). Analysis TypeConvergence Variable
Displacement/
RotationResidual
Force/TorqueStrain Energy
Stress-free motion Yes No No
Springback No Yes No
Free Thermal Expansion Yes No No
Constraint Thermal Expansion No Yes Yes
Yes – relative tolerance testing works.
No – relative tolerance testing does not work.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;141 Chapter 4: Solution Strategies for Nonlinear Analysis&lt;/dt&gt;
&lt;dt&gt;Convergence Controls&lt;/dt&gt;
&lt;dt&gt;Main Index&lt;/dt&gt;
&lt;dt&gt;2.The default tolerance for thermal analysis is 1% relative testing on displacements, residuals and energy ( CONV =&lt;/dt&gt;
&lt;dt&gt;UPW ). The default iteration scheme followed is Modified Newton-Raphson with Automatic Stiffness Update&lt;/dt&gt;
&lt;dt&gt;(KMETHOD = AUTO ).&lt;/dt&gt;
&lt;dt&gt;NLSTEP has the following limitations:&lt;/dt&gt;
&lt;dt&gt;1.NLSTEP  is not supported for the CREEP  material option. It is only supported for elements using MATVP.&lt;/dt&gt;
&lt;dt&gt;CREEP  should still be specified through NLPARM  with DT &amp;gt; 0.0.&lt;/dt&gt;
&lt;dt&gt;2.NLSTEP  with ARCLN  does not support general contact as well SPCD/SPCR.  This is also an existing limitation of&lt;/dt&gt;
&lt;dt&gt;the arc-length scheme specified through NLPCI .&lt;/dt&gt;
&lt;dt&gt;3.Quasi-static damping ( IDAMP ) specified on the ADAPT  keyword of NLSTEP  is only available for enhanced&lt;/dt&gt;
&lt;dt&gt;elements. Automated element defaults automatically map all possible elements to the enhanced ones in conjunction&lt;/dt&gt;
&lt;dt&gt;with IDAMP .&lt;/dt&gt;
&lt;dt&gt;Recycling Criterion&lt;/dt&gt;
&lt;dt&gt;The basic algorithm works with a user input “desired number of recycles”. The time step is increased for the upcoming&lt;/dt&gt;
&lt;dt&gt;increment if the current increment uses fewer recycles than desired. If the number of recycles during an increment exceeds&lt;/dt&gt;
&lt;dt&gt;the desired number, a time step cutback (bisection) is performed and the time step is reduced. If the increment is converging&lt;/dt&gt;
&lt;dt&gt;the time step decrease is postponed until the next increment. Special care is taken for contact when changes in contact&lt;/dt&gt;
&lt;dt&gt;occurs, like new contact, sliding or separation. A distinction is made between Newton-Raphson iterations and Contact-&lt;/dt&gt;
&lt;dt&gt;Induced iterations – only the former is used for controlling the time step changes. Without this, the time step would often&lt;/dt&gt;
&lt;dt&gt;be reduced excessively.&lt;/dt&gt;
&lt;dt&gt;In addition to this algorithm, there is also a scheme based upon artificial damping in a static analysis. Estimations of strain&lt;/dt&gt;
&lt;dt&gt;energy changes are used for applying artificial damping for unstable situations (with sudden reductions of strain energy).&lt;/dt&gt;
&lt;dt&gt;These estimates are also used for modifying the time step.&lt;/dt&gt;
&lt;dt&gt;For adaptive stepping, user-defined criteria for controlling the time step are also available. The user-criteria ID is specified&lt;/dt&gt;
&lt;dt&gt;through the CTITTID  field on the ADAPT  keyword of the NLSTEP  entry and this in turn refers to a TABSCTL  bulk data&lt;/dt&gt;
&lt;dt&gt;entry where the actual criteria as specified. You can set a limit on the incremental displacements, rotations, stresses,&lt;/dt&gt;
&lt;dt&gt;temperature etc. If a criterion would be violated a bisection and time step reduction is done. The user-criteria thus work as&lt;/dt&gt;
&lt;dt&gt;limits. There is also an option to treat the criteria as targets, in which case the time step for the next increment will be&lt;/dt&gt;
&lt;dt&gt;increased in order to reach the specific displacement increment for instance. The time step is never increased during an&lt;/dt&gt;
&lt;dt&gt;increment.&lt;/dt&gt;
&lt;dt&gt;The default recycle based criterion works as follows: You specify a desired number of recycles, NDESIR , default=4. For&lt;/dt&gt;
&lt;dt&gt;problems with severe nonlinearities or for problems with very small convergence tolerances, it may be necessary to increase&lt;/dt&gt;
&lt;dt&gt;this number. This number is used as a target value for the load stepping scheme. If the number of recycles required in the&lt;/dt&gt;
&lt;dt&gt;current increment is less than the desired number, the load step for the next increment is increased. The time step increase&lt;/dt&gt;
&lt;dt&gt;is based on a factor, Su, that you can also specify. Typical values for Su are in the range of 1.2 to 1.5. While the time step&lt;/dt&gt;
&lt;dt&gt;increase is obviously more aggressive with larger scale factors, it should be noted that there may be excessive recycling and&lt;/dt&gt;
&lt;dt&gt;cutbacks if sudden nonlinearities are encountered. In order to avoid this, the following logic is used for higher scale factors&lt;/dt&gt;
&lt;dd&gt;If the actual number of recycles in an increment is greater than 60% of the desired number of recycles (i.e., the current&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1&gt;Nonlinear User’s Guide
Convergence Controls142
Main Index
increment did not converge easily), the increased scale factor for the next increment is limited to 1.25 for scale factor values
between 1.25 and 1.5625, and to 80% of the value for scale factors above 1.5625.
Time Step Cutback Scheme
The load step is never increased during an increment. If the number of recycles needed to obtain convergence exceeds the
desired number, the load step size is scaled back, the recycling cutback number Nr is incremented by 1, and the increment
is performed again with the new load step. The scale-back factor for the Nr th cutback is taken as SNr, where the factor S is
calculated from the expression
(4-46)
where Nrm is the maximum number of recycling related cutbacks for the increment and is calculated from
(4-47)
TS is the time increment before any recycling related cutbacks occur for the increment and Tm is the minimum possible
time step for the increment. Tm is equal to the value set by you ( 10-5 by default) if there is no quasi-static inertial damping
and is equal to 10-3 times the value set by you ( 10-8 by default) if there is quasi-static inertial damping. The scale-back factor
for any cutback is the smaller of (SNr, 1/Su). This scheme guarantees that no matter what the starting time step for an
increment, the minimum time step is reached in a reasonable number of cutbacks if the increment consistently fails to
converge.
Quasi-Static Damping Scheme
For mechanical static analysis, instability often occurs under the conditions with very strong nonlinearities or very low stress
of the whole analyzed model. In order to improve the stability under such circumstances, an artificial damping scheme has
been implemented in SOL 400.
With this feature a damping factor, Fd, is introduced, which at the start of the loadcase, is set to 0. The time step for the
first increment is set equal to the user defined initial time step. During the assembly of the stiffness matrix K and the right-
hand side vector F, the contributions from damping are added to both sides of the equation system as Kdamp and Fdamp,
respectively.
With artificial damping option, the adaptive time stepping scheme is still used to control the time step size, however, the
adjustment will be made based on the damping energy of the system. For the first increment of the loadcase, the calculation
of Fd  and predicted energy is based on the estimated strain energy and damping energy for the loadcase. For the subsequent
increments of the loadcase, Fd and the time step size are modified according to the total strain energy and estimated strain
energy.sTs
Tm&amp;mdash;&amp;mdash;-2NrmNrm1+   &lt;/h1&gt;&lt;p&gt;Nrmlog10105Ts
Tm&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
= Nrmlog10105Ts
Tm&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
=&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P9</title>
      <link>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/nonlinear_sql_400_user_guide/msc_nastran_2024.1_nonlinear_sol_400_user_guide_009/</guid>
      <description>
        
        
        &lt;p&gt;143 Chapter 4: Solution Strategies for Nonlinear Analysis
Convergence Controls
Main Index
Adaptive Time Stepping Control for Creep Analysis
Creep is a time-dependant inelastic behavior that can occur at any stress level, either below or above the yield stress of a
material. In many cases, creep is also accompanied by plasticity, which occurs above the yield stress of the material. Along
with the existing adaptive time stepping scheme, a new option is added to activate the additional time stepping control due
to creep behavior of materials. For the current release, this option only applies to the advanced nonlinear elements, for other
elements, the creep stepping control still uses the existing scheme.
The NLSTEP  bulk data entry has added the parameters for the creep time stepping control in the “GENERAL”  input block
through optional keyword “ CREEP ”.
For a given step t, a solution is obtained and SOL 400 finds the largest values of stress change per stress, / a nd creep
strain change per elastic strain, . It compares these values to the tolerance values,  (stress change tolerance)
and  (strain change tolerance), for this period. The value  is calculated as the larger of and
. If , the solution is continued. Upon the completion of the existing time stepping, the time
stepping will chosen for the next step as , where  is a factor calculated according to the criteria for the
creep analysis. The criteria are the tolerances you entered through the optional word “ CREEP ” of NLADAPT  entry.
When you enter the tolerances and controls, the following conventions apply:
All stress and strain measures in tolerance checks are second invariants of the deviatoric state (that is, equivalent
von Mises uniaxial values).
You can reset all the tolerances and control upon the completion of one load step sequence.
Since the time increment is adjusted to satisfy the tolerances, it is impossible to predetermine the total number of time
increments for a given total creep time.
Exceptions
There are some exceptions to the basic scheme outlined above. If an increment is consistently converging with the current
load step and the number of recycles exceeds the desired number, the number of recycles is allowed to go beyond the desired
number until convergence is achieved or up to the user specified maximum number. The time step is then decreased for
the next increment by . An increment is determined to be converging if the convergence ratio was decreasing in three
previous recycles.
Special rules also apply in a contact analysis. During the recycles, the contact status can keep changing (new nodes come in
contact, nodes slide to new segments, separate etc.). Whenever the contact status changes during an increment, a new set
of contact constraints are incorporated into the equilibrium equations and more recycles are necessary in order to find
equilibrium. These extra recycles, due to contact changes, are not counted when the recycle number is checked against the
desired number for determining if the load step needs to be decreased within the increment. Thus, only true Newton-
Raphson iterations are taken into account. For the load step of the next increment, the accumulated number of recycles
during the previous increment is used. This ensures that the time step is not increased when there are many changes in
contact during the previous increment.crel Ts
Tep T
crel T p1
tnewtold= 
1Su&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis144
Main Index
Defaults
The defaults of the NLSTEP  option are carefully chosen to be adequate in a wide variety of applications. There are cases,
however, when the settings may need to be modified. Assume that the default settings are used, which means that the recycle
based control is active with an initial load of one per cent of the total. If the structure is weakly nonlinear, convergence is
obtained in just a few recycles and the time steps for successive increments get progressively larger. This can lead to problems
if the initially weakly nonlinear structure suddenly exhibits stronger nonlinearities; for instance, occurrence of plasticity or
parts coming into contact. Possible remedies to this problem include:
1.Decrease the time step scale factor to a smaller number so the step size does not grow so rapidly.
2.Use the maximum time step to limit large steps.
3.Decrease the desired and maximum number of recycles to decrease the load step if more recycles are needed.
Another situation is if the structure is highly nonlinear and convergence is slow. In this case, it may be necessary to increase
the desired number and maximum number of recycles. In general, there is a close connection between the convergence
tolerances used and the desired number and maximum number of recycles.
Arc-Length Methods for Post-buckling Analysis
The static nonlinear response of a structure can not be analyzed beyond the critical limit load by the conventional Newton&amp;rsquo;s
method. Although the post-buckling state is not usually allowed in the structural design, the prediction of such response
could be of interest in some cases. In the design process, for instance, it may be desirable to trace the response of the snap-
through or post-buckling behavior. The arc length methods allow solutions in the unstable regime for such class of
problems.
As with most analysis control and load incrementation methods for SOL 400, the control parameters for the arc length
method are contained under the SOL 400 NLSTEP  entry using the ARCLEN  keyword. The ARCLEN  method is not
supported in contact analysis and should not be used in transient dynamic analysis or in conjunction with HEAT or COUP&lt;br&gt;
analysis types.
The ARCLN  entry is applicable to MECH  only and is ignored for creep analysis. The available constraint types are as follows.
TYPE=“CRIS”:
TYPE=“RIKS”:
TYPE=“MRIKS”:UniUnO–
   T
UniUnO–
   w2iO–2 + ln2=
UniUni1––
   T
UniUnO–
   w2i+ 0=&lt;/p&gt;
&lt;p&gt;145 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
where:
The constraint equation has a disparity in the dimension by mixing the displacements with the load factor. The scaling
factor (w) is introduced as user input so that the user can make constraint equation unit-dependent by a proper scaling of
the load factor (). As the value of is increased, the constraint equation is gradually dominated by the load term. In the
limiting case of infinite, the arc-length method is degenerated to the conventional Newton’s method
The MINALR  and MAXALR  fields are used to limit the adjustment of the arc-length from one increment to the next by:
MINALR  &amp;lt; lnew/lold  &amp;lt; MAXALR
The arc length adjustment is based on the convergence rate (i.e., number of iterations required for  convergence) and the
change in stiffness. For constant arc length during analysis, use:
MINALR = MAXALR = 1
The arc-length l for the variable arc-length strategy is adjusted based on the number of iterations that were required for
convergence in the previous increment (Imax) and the number of iterations desired for convergence in the current increment
(NDESIRA) as follows:
lnew= lold(NDESIRA/ Imax)1/2
Basic Theory for Arc Length Method
The concept of the arc length method is to modulate the applied loads in order to produce solutions with displacement
increments of manageable size for a given load step. In order to modulate the applied load, an additional variable (the load
factor) and a constraint equation are introduced. There are various approaches to providing a constraint equation.
Consider a residual load {R}
R(u, ) = P (u, ) - F (u) (4-48)
where F represents the internal forces, and the total external load P is expressed as
P(u, ) = P0 + P (4-49)
where P0 denotes the applied load at the end of the preceding subcase, P represents the load increment in the current
subcase, and  is the load factor varying from 0 to 1 (but not to be limited to this range) within the subcase. Linearizing&lt;br&gt;
{R} about (u, ), equation (4-48) can be expressed as   w =user specified scaling factor (SCALEA)
=load factor
l =the arc-lengthUniUni1––
   T
Uni1–UnO–
   w2ii1–O–  + 0=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis146
Main Index
(4-50)
Based on equations (4-48) and (4-50), the equilibrium condition at uu, dictates that
(4-51)
where  is the follower matrix,  is the stiffness matrix [K], and .
The iteration equation could be derived by rearranging equation (4-51):
(4-52)
where the follower matrix may be omitted. The iterative process can be established by decomposing equation (4-52) into
two parts:
KuRR(u, )and KuPP (4-53)
Then the trial solution is obtained by
ui
= ui-1 + u (4-54)
with
u = uR +uP (4-55)
where  can be obtained from the constraint equation.
Riks&amp;rsquo; Method and Its Variations
The displacement increment is limited by a constraint equation:
(4-56)
where w is a user-specified scaling factor (to be specified in NLPCI ) and l is defined by
(4-57)
if the initial value of  is given. The constraint of equation (4-56) has a disparity in the dimension by mixing the
displacements with the load factor. For this reason, the scaling factor (w) is introduced so that you can scale  to the
appropriate dimension or delete the  term. The default value of w is zero. The iteration follows the path on the plane
normal to the initial tangent as shown in figure. Therefore, the subsequent iterations (i &amp;gt; 1) must satisfyRuu+ + RuR
u&amp;mdash;&amp;mdash;uR
&amp;mdash;&amp;mdash; + + 
RuP
u&amp;mdash;&amp;mdash;uF
u&amp;mdash;&amp;mdash;u –P
&amp;mdash;&amp;mdash; + +
P
u&amp;mdash;&amp;mdash;F
u&amp;mdash;&amp;mdash;P
&amp;mdash;&amp;mdash;P=
KP
u&amp;mdash;&amp;mdash;–u RuP + =
u1Tu1 w12+ l2=
l212uP1
T
uP1
w2+ =&lt;/p&gt;
&lt;p&gt;147 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
(4-58)
Recalling that the first iteration should result in
(4-59)
Equation (4-58) may be reduced to
(4-60)
from which the load factors for the subsequent iterations are determined by
(4-61)
and
i
= i-1 + i(4-62)
Notice that the normal plane does not change during the iteration by Riks&amp;rsquo; method. In addition, {uP} remains constant
if the iteration process is the modified Newton&amp;rsquo;s method.
Alternatively, the normal plane may be updated at every iteration. If the normal plane is to be normal to the cumulative
incremental displacements for the preceding iterations as shown in figure, the orthogonality condition in equation (4-58)
should be modified to:
(4-63)
The increment in the load factor for i &amp;gt; 1  is obtained by solving equation (4-63), i.e.,
(4-64)
This variation of Riks&amp;rsquo; method has an advantage over Crisfield&amp;rsquo;s method as it avoids the solution of a quadratic equation.u1Tuiw21*i+ 0=
u11uP1
 =
uP1
T
ui
RiuPi+
   w2i+ 0=
iuP1
T
i
R –
w2uP1
T
uPi
+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
ui1–u0– Tuiw2i1–0– i+
i ui1–u0– Tui
R
w2i1–0–  ui1–u0– TuPi
+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –=&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis148
Main Index
Crisfield&amp;rsquo;s Method
Instead of iterating on the normal plane, the solution is sought on the surface defined by equation (4-56) with an arc-length
of l as depicted, i.e.,
(4-65)
This constraint can be interpreted as keeping the incremental displacement constant, if w = 0. Substituting equation (4-55)
into the preceding equation, we obtain a quadratic equation in terms of :
(4-66)
where
(4-67)
(4-68)
(4-69)
Since Crisfield&amp;rsquo;s method leads to a quadratic equation, the selection of the proper root of this equation becomes the most
critical process for the success of this method. There are two  roots to equation (4-66),
(4-70)
The root is chosen so that the angle between two vectors ui-1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;u0  and ui&lt;/li&gt;
&lt;li&gt;u0  is less than 90°; i.e.,
(4-71)
(4-72)
There are cases where no roots can be found. Such is the case when the trial solution is far from the true solution and stays
outside the region covered by the arc length. In this case, the trial solution vector is scaled so that the direction vector
intersects with the surface defined by equation (4-65).uiu0–Tuiu0–w2i0–2+ l2=
ai2bic + + 0=
auPi
T
uPi
w2+ =
b 2uPi
T
ui1–u0– uRi+
   2w2i1–0–  + =
c ui1–u0– uRi+
   T
ui1–u0– uRi+
   w2i1–0– 2l2– + =
i b– b24ac–
2a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
cosuiu0–Tui1–u0– 
l2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
11
l2&amp;mdash;&amp;mdash;&amp;ndash;ui1–u0– Tui0  +=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;149 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
The wrong choice of the root could cause an unintentional loading path reversal, by which the solution returns to the
previous state. Such cases can be detected by checking the orthogonality of the incremental displacements of the two
successive solutions. If this case is detected, the root is chosen so that the angle between u1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;u0 and ui&lt;/li&gt;
&lt;li&gt;u0 is an acute angle.
Adaptive Arc Length Method
It would be difficult for a user to estimate a proper arc length for multi-degrees of freedom problems. The initial arc-length
for the Crisfield method can be determined by
(4-73)
with
(4-74)
Notice that NINC  is a user-specified value for the number of increments in the subcase.
The arc length should be continuously updated at every increment using the information gathered during the preceding
increment. One method is to reduce the arc length if it requires an excessive number of iterations to attain a converged
solution, i.e.,
(4-75)
where Id is the desired number of iterations for convergence and Imax is the number of iterations required for convergence
at the preceding step. It is also desirable to decrease the arc length if the stiffness ratio increases; i.e.,
(4-76)
with
(4-77)
where the subscripts (j, j-1, j-2)denote the converged solution steps. In terms of the arc length, the computation is
simplified asl0212uP1
T
uP1
w2+ =
11 1
NINC&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; = =
lnewId
Imax&amp;mdash;&amp;mdash;&amp;mdash;-lold=
lnew1
Kratio&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;lold=
KratioABSKnew
Kold&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; ABSuj1–uj2–– TFjFj1–– 
ujuj1–– TFj1–Fj2–– &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis150
Main Index
(4-78)
The adaptive process should be based on the arc length ratio, i.e.,
(4-79)
Combining two criteria, the new arc length ratio may be adapted to the nonlinearity by
If  then (4-80)
If  then (4-81)
else
ALRATIO = 1 (4-82)
In order to maintain the stability for the adaptive process, ALRATIO  should also be bounded, i.e.,
MINALR &amp;lt; ALRATIO &amp;lt; MAXALR (4-83)
where MINALR  and MAXALR  can be user-specified parameters, defaulted to 0.25 and 4., respectively. If the adjusted
ALRATIO  falls outside the bounds, ALRATIO  should be reset to the limit. Then the arc length can be updated at the
beginning of the next step based on ALRATIO  as follows:
lnew = ALRATIO × lold (4-84)
If the iteration produces i which exceeds the value of  for output points, i should be adjusted to the specified value of
 for the output; i.e.,
(4-85)
and
(4-86)
where * is the specified value for output (end of subcase or intermediate points). In the stiffening case this limit may be
exceeded at the first increment of the subcase. This limiting process may be implemented as follows:
Process equation (4-85) at every iteration withKratioABSnln1–
n1–ln1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
ALRATIOlnew
lold&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Id
Imax&amp;mdash;&amp;mdash;&amp;mdash;-and1
Kratio&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;GT1
   ALRATIO MINId
Imax&amp;mdash;&amp;mdash;&amp;mdash;-1
Kratio&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
   =
Id
Imax&amp;mdash;&amp;mdash;&amp;mdash;-and1
Kratio&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;LT1
   ALRATIO MAXId
Imax&amp;mdash;&amp;mdash;&amp;mdash;-1
Kratio&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
   =
&lt;em&gt;MIN&lt;/em&gt;&lt;em&gt;i1––  =
u&lt;/em&gt;uRi*uPi+ =&lt;/p&gt;
&lt;p&gt;151 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
(4-87)
if INTOUT=ALL , otherwise * = 1. Then if
(4-88)
and ; (4-89)
otherwise, ignore * and u* and proceed to update ui and i.
The arc length should be updated upon convergence whenever this limiting process takes place. Notice that this limiting
process in effect reduces the arc length method to the conventional Newton&amp;rsquo;s iteration.
In the unstable regime where the stiffness is negative, the load factor decreases with a forward step. When this happens, the
sign of 1 should be reversed. This possibility should be examined at the beginning of each increment. The sign can be
determined by the sign of a dot product; i.e.,
if (4-90)
An adaptive bisection algorithm is also incorporated to cope with divergent cases. If the iterative process using the arc length
method tends to diverge, the arc length is bisected. The bisection is combined in concert with the stiffness matrix update
strategy. The bisection procedure will continue until the iterative process is stabilized and a converged solution is found.
However, the number of contiguous bisections is limited by a user-specified parameter, MAXBIS  in the NLPARM  bulk data
entry. The variable arc length at every increment invokes the recovery from the bisection process once the difficulties in
convergence are overcome.
Figure 4-7  Riks Method* 1
NINC&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;=
uiu&lt;em&gt;u0– + l
i&lt;/em&gt;= uiu*=
j1jj1––  –= uj1–uj2–– TuP1
0
u
123&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis152
Main Index
Figure 4-8  Modified Riks Methodu&lt;/p&gt;
&lt;p&gt;153 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
Figure 4-9  Crisfield’s Methods
The solution methods described above involve an iterative process to achieve equilibrium for a fixed increment of load.
None of them have the ability to deal with problems involving snap-through and snap -back behavior except the NLSTEP
(Case)  method with artificial damping. An equilibrium path as shown in  Figure 4-10 displays the features possibly involved.
u
(a) Arc Length in Terms of Combined Variables

u
(b) Arc Length in Terms of Displacements&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis154
Main Index
Figure 4-10  Snap-through Behavior
The issue at hand is the existence of multiple displacement vectors, u, for a given applied force vector, F. This method
provides the means to ensure that the correct displacement vector is found. If you have a load controlled problem, the
solution tends to jump from point 2 to 6 whenever the load increment after 2 is applied. If you have a displacement
controlled problem, the solution tends to jump from 3 to 5 whenever the displacement increment after 3 is applied. Note
that these problems appear essentially in quasi-static analyses. In dynamic analyses, the inertia forces help determine
equilibrium in a snap-through problem.
Thus, in a quasi-static analysis sometimes it is impossible to find a converged solution for a particular load (or displacement
increment):
n+1F - nF = F (4-91)
This is illustrated in  Figure 4-10 where both the phenomenon of snap-through (going from point 2 to 3) and snap-back
(going from point 3 to 4) require a solution procedure which can handle these problems without going back along the same
equilibrium curve.
As shown in  Figure 4-11, assume that the solution is known at point A for load level nF. For arriving at point B on the
equilibrium curve, you either reduce the step size or adapt the load level in the iteration process. To achieve this end, the
equilibrium equations are augmented with a constraint equation expressed typically as the norm of incremental
displacements. Hence, this allows the load level to change from iteration to iteration until equilibrium is found.u5432
6
F
Force
Displacements&lt;/p&gt;
&lt;p&gt;155 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
Figure 4-11  Intersection of Equilibrium Curve with Constraining Surface
The augmented equation, c(u, ), describes the intersection of the equilibrium curve with an auxiliary surface g for a
particular size of the path parameter :
(4-92)
Variations of the parameter  moves the surface whose intersection with the equilibrium curve r g enerates a sequence of
points along the curve. The distance between two intersection points, denoted with  and , denoted by l is the so-called
arc length.
Linearization of equation (4-92) around point A in  Figure 4-11 yields:
(4-93)
where:
(4-94)
(4-95)
(4-96)
(4-97)Displacement (u)Load (F)Arc- Length Procedure
r : Equilibrium Pathg : Constraint Surface
l :  arc length
λn Fλn+1  F
λn+2  F
λn+3  F
AB
ruFRu – 0 = =
cu gu– 0 = =
KP
nTn0u
 r–
r0–=
Kr
u&amp;mdash;&amp;mdash; : Pr
&amp;mdash;&amp;mdash; = =
nTc
u&amp;mdash;&amp;mdash; : n0c
&amp;mdash;&amp;mdash; = =
rFR– =
r0gu– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis156
Main Index
It can be noted that a standard Newton-Raphson solution procedure is obtained if the constraint condition is not imposed.
The use of the constraint equation causes a loss of the banded system of equations which would have been obtained if only
the K matrix was used. Instead of solving the N+1 set of equations iteratively, the block elimination process is applied.
Consider the residual at iteration i to which the fraction of load level i-1 corresponds
(4-98)
The residual for some variation of load level, i, becomes
(4-99)
which can be written as:
(4-100)
where (4-101)
and (4-102)
Notice that  does not depend on the load level. The equation above essentially establishes the influence of a change in
the load level i during one iteration on the change in displacement increment for that iteration. After one iteration is
solved, this equation is used to determine the change in the load level such that the constraint is followed. There are several
arc length methods corresponding to different constraints.
Among them, the most well-known arc length method is one proposed by Crisfield, in which the iterative solution in
displacement space follows a spherical path centered around the beginning of the increment. This requirement is translated
in the formula:
c = l2 = uiui(4-103)
where l is the arc length. The above equation with the help of equations (4-102) and (4-103) is applied as:
(4-104)
The equation above is interpreted with i = 1 and u1in the prediction phase while retaining the full form of equation
(4-104) in the correction phase. T wo solutions for  are available. We choose the one that maintains a positive angle of the
displacement increment from one iteration to the next.rii1–i1–FRiui1– – =
rii1–i+ iFrii1– + =
uii1–i+ uii1–iu&lt;em&gt;i+ =
uii1– Ki1–r =
u&lt;/em&gt;iKi1–F =
u&lt;em&gt;i
u&lt;/em&gt;iTu&lt;em&gt;i i22ui1–uii1– + Tu&lt;/em&gt;i i + +
ui1–uii1– + Tui1–uii1– + l2–   0=&lt;/p&gt;
&lt;p&gt;157 Chapter 4: Solution Strategies for Nonlinear Analysis
Arc-Length Methods for Post-buckling Analysis
Main Index
The two roots of this scalar equation are i and i. T o avoid going back on the original load -deflection curve, the
angle between the incremental displacement vectors, ui-1 and ui (before and after the current iteration, respectively)
should be positive. T wo alternative values of ui (namely, ui and ui corresponding to i and i are obtained
and the cosine of two corresponding angles (  and ) are given by
(4-105)
and (4-106)
Once again, the prediction phase is interpreted with i = 1 and , while equations (4-105) and (4-106) retain
their full form in the correction phase.
As mentioned earlier, the appropriate root, i or i is that which gives a positive  cos . In case both the angles are
positive, the appropriate root is the one closest to the linear solution given as:
(4-107)
Crisfield’s solution procedure, generalized to an automatic load incrementation process, has been implemented in MSC
Nastran Implicit Nonlinear as one of the options using ( NLPCI ). Various components of this process are shown in&lt;br&gt;
Figure 4-12.
Figure 4-12  Crisfield’s Constant Arc Length1cosun1+i1 Tun1+i1–
l&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
2cosun1+i2 Tun1+i1–
l&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
un1+0un=
iui1–ui+ ui1–ui+ l2–
2ui1–ui+ u*i&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
Displacement (u)Load (F)λ1 F
F2 = λ2 Fr1
δu2(λ1) = K2-1(λ1F - r1)B&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Arc-Length Methods for Post-buckling Analysis158
Main Index
The constraints in equations (4-103) and (4-104) are imposed at every iteration. Disadvantage of the quadratic equation
suggested by Crisfield is the introduction of an equation with two roots and thus the need for an extra equation to solve
the system for the calculated roots if two real roots exists. This situation arises when the contribution u1 (or u1) is very
large in comparison to the arc-length. This can be avoided in most cases by setting sufficiently small values of the error
tolerance on the residual force. In case the above situation still persists despite the reduction of error tolerance, SOL 400
has two options to proceed:
1.To attempt to continue the analysis with the load increment used in the initial step of auto increment process.
2.Use the increment resulting from the linear constraint for the load.
BFGS Updates for Arc-length Methods
The BFGS  update is required to make the arc-length methods more effective. It has been proven that the BFGS  update is
effective and efficient for convergence, especially when the stiffness matrix is deficient. The BFGS  updates compensate for
the deficiency and frequently provide converged solutions in difficult problems.
The iteration equation for the arc-length method is shown to be:
(4-108)
where the follower matrix may be omitted. The iterative process can be established by decomposing equation (4-108) into
two parts:
KuR = R (u, ) (4-109)
and
KuP = P (4-110)
Then the trial solution is obtained by
with
uiui+1u (4-111)
with
u = uR uP (4-112)
where u is obtained from the constraint equation.
The residual error, R in equation (4-109), is evaluated at every iteration and equation (4-110) is solved again by Forward-
Backward Substitution (FBS). However, equation (4-110) needs to be solved only once upon stiffness matrix update in the
absence of the BFGS update. T wo different approaches for adopting BFGS  updates can be contemplated. The BFGS&lt;br&gt;
update may be applied to equations (4-109) and (4-110). Then, FBS has to be processed on both equations at every iteration.
It is also possible to adopt the  BFGS update only on equation (4-110), i.e.,KP
u&amp;mdash;&amp;mdash;–u RuP + =&lt;/p&gt;
&lt;p&gt;159 Chapter 4: Solution Strategies for Nonlinear Analysis
References
Main Index
(4-113)
where  implies that the BFGS  update is incorporated into K. The BFGS  does not have to be implemented in equation
(4-110), or uP does not have to be reevaluated unless a new stiffness matrix is formulated. The solution should not be
altered by introducing the BFGS,  but the convergence will be expedited. This is because the effect of uP diminishes as the
solution converges ( u approaches zero).
It is necessary to modify the quasi-Newton vector y for the arc-length method. For a constant external applied load, the
quasi-Newton vector is defined. The applied load varies as a function of the load factor (p) at every iteration in the arc length&lt;br&gt;
methods. The changes in p during the iteration can be accommodated in the quasi-Newton vector () by
(4-114)
where NINC  is the number of increments for the subcase.
Various strategies of the BFGS updates for the arc-length methods are implemented with a control by SYSTEM(145) . The
MSC Nastran definition at the top of the input data may include
NastranSystem (145)  = n$
n = 0 (default) to update uR and uP at every iteration with (*)
n = 1 to update uR only with ()
n = 2 to update uR only with (*)
References
1.Zienkiewicz, O. C. and R. L. Taylor. The Finite Element Method (4th ed.) Vol. 1. Basic Formulation and Linear
Problems (1989),) Vol. 2. Solid and Fluid Mechanics, Dynamics, and Nonlinearity (1991) McGraw-Hill Book
Co., London, U. K.
2.Bathe, K. J. Finite Element Procedures , Prentice-Hall, Englewood Cliffs, NJ, 1995.
3.Hughes, T. J. R. The Finite Element Method–Linear Static and Dynamic Finite Element Analysis, Prentice-Hall,
Englewood Cliffs, NJ. 1987.
4.Ogden, R. W. “Large Deformation Isotropic Elasticity: On The Correlation of Theory and Experiment for
Incompressible Rubberlike Solids,” Proceedings of the Royal Society, Vol. A (326), pp. 565-584, 1972.
5.Cook, R. D., D. S. Malkus, and M. E. Plesha, Concepts and Applications of Finite Element Analysis (3rd ed.), John
Wiley &amp;amp; Sons, New York, NY, 1989.
6.Bathe, K. J. Finite Element Procedures, Prentice Hall, Englewood Cliffs, NJ, 1996.
7.Riks, E. “An incremental approach to the solution of solution and buckling problems”, Int. J. of Solids and
Structures, V. 15, 1979.
8.Riks, E. “Some Computational Aspects of the Stability Analysis of Nonlinear Structures”, Comp. Methods in Appl.
Mech. and Eng., 47, 1984.K˜uRRu =
K˜
 Ri1–1NINCui – Ri– =&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
References160
Main Index
9.Crisfield, M. A. “A fast incremental iterative procedure that handles snapthrough”, Comput. &amp;amp; Structures, V. 13,
1981.
10. Ramm, E. “Strategies for tracing the nonlinear response near limit points,” in K. J. Bathe et al (eds), Europe-US
Workshop on Nonlinear Finite Element Analysis in Structural Mechanics, Ruhr University Bochum, Germany,
Springer-Verlag, Berlin, pp/ 63-89. Berlin, 1985.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 5: Computational Methods
MSC Nastran Nonlinear (SOL 400) User’s Guide Nonlinear User’s Guide
5 Computational Methods
Nonlinear Computational Costs
Solution of Matrix Equations
Computer Hardware&lt;/p&gt;
&lt;p&gt;Nonlinear User’s Guide
Nonlinear Computational Costs162
Main Index
Nonlinear Computational Costs
In nonlinear simulations, there are several sources of increased computational costs. Compared to linear analysis that occurs
in SOL 101, a nonlinear analysis involves an incremental analysis and multiple iterations. When using the full Newton-
Raphson method not only is the stiffness matrix reformulated each increment, it is also decomposed for each iteration.
Hence, significant costs are associate with a nonlinear analysis, and the user should take sufficient care to minimize the
number of increments and the number of iterations.
Large number of increments/iterations may be due to:
Material Nonlinearity
Elastic-plastic  – make sure that the material has sufficient strain hardening to support the load. Note strain softening
materials often require additional iterations. Materials in the elastic plastic range require additional iterations when
temperature increases, and the yield stress is temperature dependent and decreases.
Hyperelastic material  – Often the strain/load levels reached in a simulation are greater than those used to evaluate the
material constants. This can result in an improper representation of the material which results in a large number of
iterations. Make sure the strains calculated are within the range of the experimental test data used for the curve fitting.
Large Deformation
Compressive loads may result in buckling which results in the need for additional increments and iterations. The numerical
problem may occur even before the structure buckles. The reason is that the initial stress is dominated by negative values
that reduces the numerical conditioning of the stiffness matrix. The best method to reduce the number of iterations is to
use NLSTEP  and include damping in the system.
In models involving compression of rubber seals, while classical buckling does not occur, numerical problems may still arise
which results in the need for additional iterations. Because rubber and rubber like materials have small resistance in shear
and are nearly incompressible again the initial stress may dominate (in an unfavorable manner) the conventional structural
stiffness due to the material. The result is an instability; that often leads to penetration and/or large number of iterations.
The initial stress is automatically on when one includes Large Displacements, but one can control the contribution using&lt;br&gt;
the MDLPRM,NLDIFF  parameter.
In such models, it is recommended to use either:
MDLPRM,NLDIFF,3 –include only deviatoric part of stress
MDLPRM,NLDIFF,4 –include only if mean stress is positive (tensile)
MDLPRM,NLDIFF,4–include stress from the beginning of the increment. This is only effective if the last
increment converged to an accurate value of stress.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
