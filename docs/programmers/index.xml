<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOC REPO – Programmer&#39;s Manual</title>
    <link>https://zeyany2.github.io.github.io/docs/programmers/</link>
    <description>Recent content in Programmer&#39;s Manual on DOC REPO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://zeyany2.github.io.github.io/docs/programmers/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Programmer&#39;s Manual P1</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_001/</guid>
      <description>
        
        
        &lt;p&gt;NASA SP-223 (01)
THENASTRAN PROGRAMMER&amp;rsquo;S MANUAL
SEPTEMBER 1972
Scientific andTechnical Information Office 1972
NATIONAL AERONAUTICS AND SPACE ADMINISTRATION
Washington, D.C.
II]]1] i,&lt;/p&gt;
&lt;p&gt;ForsalefromComputer Software Management andInformation Center (COSMIC)
Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50&lt;/p&gt;
&lt;p&gt;PREFACE TOTHENASTRAN PROGRAMMER&amp;rsquo;S MANIIAL
TheProgrammer&amp;rsquo;s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN,
theother three being theTheoretical Manual, theUser&amp;rsquo;s Manual andtheDemonstration Problem
Manual. TheProgrammer&amp;rsquo;s Manual isdivided intoseven major sections: Section l,NASTRAN Program-
ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions;
Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section
6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs.
Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground
material forallsections which follow.
Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata
communication between theprogram&amp;rsquo;s functional modules (amodule isdefined tobeagroup ofsub-
routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe
datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha-
betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections
2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand
noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous
tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven
atthebeginning ofSections 2.4and2.5respectively.
Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and
modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on
entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe
Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2.
Thereader isurged toreadtheintroductory material toSections 3and4before using these
sections.
Section 5treats computer andoperating system dependent matters suchasoperating system
control cards andgeneration oftheabsolute (executable) NASTRAN system.
Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented.
Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN.
Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications
system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners
ofthesystem ofnewmnemonics, acronyms, phrases and&amp;quot;buzz&amp;quot; words. Inorder toaidthereader in
i(811172)&lt;/p&gt;
&lt;p&gt;learning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN
Dictionary, oftheUser&amp;rsquo;s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat
leastthissection oftheUser&amp;rsquo;s Manual forhisday-to-day reference.
ii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS
Section
I.NASTRAN PROGRAMMING FUNDAMENTALSPageNo.
l.l
1.2PROGRAM
1.I.I
l.l.2
NASTRAN
l.2.1
l.2.2
l.2.3OVERVIEW &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. l.l-I
Objectives &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; l.l-I
Program Organization &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. l.l-3
EXECUTIVE SYSTEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.2-1
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-1
Executive Operations During thePreface &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-4
Executive Operations During Problem Solution &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.2-9a
1.3 WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-1
1.3.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-1
1.3.2 Alphanumeric Data &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-2
1.3.3 Word Packing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-2
1.4 SYSTEM BLOCK DATASUBPROGRAM (SEMDBD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.4-1
1.5 THEOPENCORECONCEPT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.5-1
1.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.5-1
1.5.2 Definition ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.5.3 Example ofanApplication ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.6 NASTRAN INPUT/OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.2 UseoftheOperating System Input File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.6-1
1.6.3 UseoftheOperating System Output File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-2
1.6.4 GIN_ &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.6-3
1.7 NASTRAN MATRIX ROUTINES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-I
1.7.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7°l
1.7.2 Matrix Packing andUnpacking &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-1
1.7.3 TheNested Vector SetConcept UsedtoRepresent Components
ofDisplacement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-2
1.7.4 Processing ofMatrices &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-4
1.8 GENERATION OFMATRICES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.8-1
1.8.1 TheECPTDataBlock &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-1
1.8.2 Structural Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-2
iii(8/I/72)&lt;/p&gt;
&lt;p&gt;,Section
1.9
1.I0TABLEOFCONTENTS (Continued)
2.PageNo.
TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.9-I
RESTARTS INNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. I.I0-I
DATABLOCKANDTABLEDESCRIPTIONS
2.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.1-I
2.2DATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.2-I
2.2.1 IndexforDataBlockDescriptions Sorted onDataBlockNames &amp;hellip;&amp;hellip;. 2.2-3
2.2.2 IndexforDataBlockDescriptions Sorted Alphabetically byModule ..2.2-11
2.3DATABLOCKDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-I
2.3.1 DataBlocks Output FromModule IFPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-I
2.3.2 DataBlocks
2.3.3 DataBlocks
2.3.4 DataBlocks
2.3.5 DataBlocks
2.3.6 DataBlocks
2.3.7 DataBlocks
2.3.8 DataBlocks
2.3.9 DataBlocks
2.3.10 DataBlocks
2.3.11 DataBlocks
2.3.12 DataBlocks
2.3.13 DataBlocks
2.3.14 DataBlocks
2.3.15 DataBlocks
2.3.16 DataBlocks
2.3.17 DataBlocks
2.3.18 DataBlocks
2.3.19 DataBlocks
2.3.20 DataBlocks
2.3.21 DataBlocks
2.3.22 DataBlocksOutput FromModule IFP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-5
Output FromModule GPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-31
Output FromModule GP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-36
Output FromModule PLTSET &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-37
Output FromModule PL_T&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-40
Output FromModule GP3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-41
Out)ut FromModule TAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-45
Out)ut FromModule SMAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-56
Out)ut FromModule SMA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-58
Out)ut FromModule GPWG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-59
Out)ut FromModule SMA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-60
Out)ut FromModule GP4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-61
Out)ut FromModule GPSP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-63
Out)ut FromModule MCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-64
Out)ut FromModule MCE2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-65
Out)ut FromModule SCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-67
Out)ut FromModule SMPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-70
OutDut FromModule RBMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-73
Output FromModule RBMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-75
Output FromModule RBMG3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-77
Output FromModule RBMG4 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-78
iv(8/I172)&lt;/p&gt;
&lt;p&gt;Section
2.3.23
2.3.24
2.3.25
2.3.26
2.3.27
2.3.28
2.3.29
2.3.30
2.3.31
2.3.32
2.3.33
2.3.34
2.3.35
2.3.36
2.3.37
2.3.38
2.3.39
2.3.40
2.3.41
2.3.42
2.3.43
2.3.44
2.3.45
2.3.46
2.3.47
2.3.48
2.3.49
2.3.50
2.3.51
2.3.52TABLEOFCONTENTS (Continued)
PageNo.
DataBlocks Output FromModule SSGI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-79
DataBlocks Output FromModule SSG2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-80
DataBlocks Output FromModule SSG3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-81
DataBlocks Output FromModule SSG4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-83
DataBlocks Output FromModule SDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-84
DataBlocks Output FromModule SDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-88
DataBlocks Output FromModule DPD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-114
DataBlocks Output FromModule READ&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-125
DataBlocks Output FromModule DSMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-128
DataBlocks Output FromModule SMP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-129
DataBlocks Output FromModule DSMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-130
DataBlocks Output FromModule PLAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-132
DataBlocks Output FromModule ADD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-137
DataBlocks Output FromModule PLA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-138
DataBlocks Output FromModule PLA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-139
DataBlocks Output FromModule PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-140
DataBlocks Output FromModule CASE&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-141
DataBlocks Output FromModule MTRXIN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-142
DataBlocks Output FromModule GKAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-143
DataBlocks Output FromModule CEAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-146
DataBlocks Output FromModule VDR&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-149
DataBlocks Output FromModule FRRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-158
DataBlocks Output FromModule SDR3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-160
DataBlocks Output FromModule XYTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-175
DataBlocks Output FromModule RANDOM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-179
DataBlocks Output FromModule TRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-181
DataBlocks Output FromModule GKAM&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-183
DataBlocks Output FromModule DDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-184
Element Stress Output DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-185
Element ForceOutput DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-189
v(811172)&lt;/p&gt;
&lt;p&gt;Section
2.4TABLEOFCONTENTS (Continued)
3.2.3.53 DataBlocks Output FromModule DDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
2.3.54 DataBlocks Output FromModule BMG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
2.3.55 DataBlocks Output FromModule PLTTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
EXECUTIVE TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..PageNo.
2.3-192
2.3-194
2.3-194
2.4-I
2.4.1 Executive Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-2
2.4.2 Executive Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-15
2.5MISCELLANEOUS TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.5-I
2.5.1 Miscellaneous Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;.. 2.5-2
2.5,2 Miscellaneous Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2,5-6
SUBROUTINE DESCRIPTIONS
3.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.1-I
3.2ALPHABETICAL INDEXOFENTRYPOINTS FORSUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.2-I
3.3EXECUTIVE SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-I
3.3.1 XSEMI (Executive Sequence Monitor, Preface) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-I
3.43.3.2
3.3.3
3.3.4
3.3.5
3.3.6
3.3.7
3.3.8
3.3.9
3.3.10
3.3.11
3.3.12
3.3.13
3.3.14
3.3.15BTSTRP
SEMINT
GNFIAT
ENDSYS(Bootstrap Generator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-2
(Sequence Monitor Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-3
(Generate FIAT)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-5
(End-of-Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-6
SEARCH (Search, Load,andExecute Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-8
XSEMi(LinkiMainProgram, i=2,3&amp;hellip;.)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-9
XSEMXX (Sequence Monitor -DeckGenerator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-11
GNFIST (Generate FIST) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-12
XEOT(End-of-Tape) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-14
SSWTCH (Sense Switches) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-15
C_NMSG (Console Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-16
TTLPGE (Title PageWriter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-17
SEMTRN (Transliteration) (IBH360-370 only) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-19
RETURN (Return) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-20
3.4-I
3.4-IUTILITY SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
3.4.1 MAPFNS (Machine WordFunctions) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
vi(8/I/72)&lt;/p&gt;
&lt;p&gt;Secti on
3.4.2
3.4.3
3.4.4
3.4.5
3.4.6
3.4.7
3,4.8
3.4.9
3.4.10
3.4.11
3.4.12
3.4.13
3.4.14
3.4.15
3.4.16
3.4.17
3.4.18
3.4.19
3.4.20
3.4.21
3.4.22
3.4.23
3.4.24
3.4.25
3.4.26
3.4.27
3.4.28
3.4.29
3.4.30
3.4.31TABLE OFCONTENTS (Continued)
PageNo.
_PEN (Initiate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-3
WRITE (Write DatainaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-4
CLOSE (Terminate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-5
READ (Read DataFromaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-6
FWDREC (Forward Space OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-8
BCKREC (Backspace OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-9
REWIND (Position FiletotheLoadPoint) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I0
EOF(Write anEnd-of-File) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-II
SKPFIL (Skip Files Forward orBackward) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-12
XGINO (GINO Utility Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-13
GINO (General Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-15
OPNCOR (Transmit Logical Records To/From CoreStorage) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-20
GOPEN (Short FormforSubroutine _PENWithHeader Record
Processing) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-22
FREAD (Short FormforSubroutine READ) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-23
WRTTRL (Write Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-24
FNAME (File Name) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-25
CLSTAB (Close aGINOFileandWrite aNonzero Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-26
XRCARD (Executive Free-Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-27
RCARD (Fixed Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-32
TAPBIT (Tape BitTest) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-35
PEXIT (Problem Exit)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-36
TMTOGO (Time-To-Go) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-37
PAGE (Page Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-38
MESAGE (Message) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-39
MSGWRT (Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-40
USRMSG (User Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-41
MATDUM (Matrix Dump(Print) Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-42
TABPRT (Table Printer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-43
PRELOC (Position DataBlock toRequested Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-44
SORT (Sort aTable) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-46
vii(811172)&lt;/p&gt;
&lt;p&gt;Section
3.4.32
3.4.33
3.4.34
3.4.35
3.4.36
3.4.37
3.4.38
3.4.39
3.4.40
3.4.41
3.4.42
3.4.43
3.4,44
3.4.45
3.4.46
3.4.47
3.4.48
3.4.49
3.4.50
3.4.51
3.4.52
3.4.53
3.4.54
3.4.55
3.4,56
3.4.57
3.4.58
3.4.59
3.4.60GMMATD
Precisi
GMMATS
Precisi
INVERD
INVERS
PREMAT
PRETRD
Double
PRETRS
Single
PRETABTABLEOFCONTENTS (Continued)
PageNo.
(General Matrix Multiply andTranspose -Double
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-49
(General Matrix Multiply andTranspose -Single
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-52
(Double Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-53
(Single Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-54
(Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-55
(Utility forModules WhichUsetheCSTMDataBlock-
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-64
(Utility forModules WhichUsetheCSTMDataBlock -
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-66
(Table Look-Up) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-67
AXIS(DrawanAxisonaPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-70
AXISi(AxisRoutine forPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-72
SKPFRM (SkipaVariable Number ofFrames) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-73
SELCAM (ToInitiate aNewPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-74
IDPL_T (Generate an&amp;quot;ID&amp;quot;Plot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-75
INTGPX (Search aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-76
INTLST (Interpret aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-77
LINE(DrawaLineonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-78
LINEi(DrawaLineonPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-79
PRINT(Print aTitleonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-81
RDM_DX (ReadaFileContaining XRCARD Translations) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-83
SGINO (GI_!OforUnformatted Tapes) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-85
STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot)&amp;hellip;&amp;hellip;. 3.4-87
SYMBOL (TypeaSymbol onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-88
TIPE(TypeaLineofCharacters onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-90
TYPEi (TypeaLineofCharacters onPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-92
TYPFLT (TypeaFloating PointNumber onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-94
TYPINT (TypeanInteger Number onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-96
WPLTI (Write aPlotter Command forPlotter I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-98
WPLT2 (Write aPlotter Command forPlotters 2and8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-100
WPLT3 (Write aPlotter Command forPlotter 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-102
viii(8/I/72)&lt;/p&gt;
&lt;p&gt;SectionTABLE OFCONTENTS (Continued)
3.4.61
3.4.62
3.4.63
3.4.64
3.4.65
3.4.66
3.4.67
3.4.68
3.4.69
3.4.70
3.4.71
3.4.72
3.4.73
3.4.74
3.4.75
3.4.76
3.4.77
3.4.78
3.4.79PageNo.
GINOIO (GINO Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I03
EJECT (Automatic PageEject) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-105
PLAMAT (Material Property Utility forTwo-Dimensional Elements
inPiecewise Linear Analysis) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I06
WPLT4 (Write aPlotter Command forPlotters 4through 7)&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I08
WPLT9 (Write aPlotter Command forPlotter 9)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-II0
WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose
Plotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-III
PLTSET (Plotting Parameter Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I13
DRWCHR (ToDrawaLineofCharacters) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I15
FNDPLT (Determine theInternal Plotter andModel Indices) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-I17
PHDMIA (DMIPunch Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I18
HEAD (Plot Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-120
DELSET (Dummy Element Setup). &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-121
HMAT (Heat Transfer Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-122
(Binary Search) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-123 BISRCH
FORFIL (File Unit) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-126
DADOTB (Double Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-127
DAXB(Double Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-128
SADOTB (Single Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-129
SAXB(Single Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-130
3.5 MATRIX SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-I
BLDPK (Build aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-I
PACK (Pack aColumn ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-5
INTPK (Interpret aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-7
UNPACK (Unpack aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-I0
CALCV
PARTN
SSG2A
SDRIB
UPART3.5.l
3.5.2
3.5.3
3.5.4
3.5.5
3.5.6
3.5.7
3.5.8
3.5.9(Compute aPartitioning Vector) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-12
-MERGE (Partition aMatrix -Merge Matrices Together) &amp;hellip;&amp;hellip;.. 3.5-13
(Driver forPARTN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-16
(Driver forMERGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-17
(Symmetric Partition Driver) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-18
ix(811172)
L&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.PageNo.
3.5.10 ADD(Driver forSADD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-19
3.5.11 SSG2C(Driver forADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-20
3.5.12 MPYAD(Matrix Multiplication Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-22
3.5.13 SSG2B(Driver forMPYAD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-29
3.5.14 SDCOMP (Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-30
3.5.15 DECOMP (Unsymmetric Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-44
3.5.16 CDCBMP (Complex Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-62
3.5.17 FBS(Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-64
3.5.18 SSG3A (Driver forFBS)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-66
3.5.19 GFBS(General Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-67
3.5.20 SOLVER (Simultaneous Equation Solution Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-69
3.5.21 DMPY(Multiply aDiagonal Matrix byanArbitrary Matrix) &amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-71
3.5.22 ELIM(Perform aMatrix Reduction) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-73
3.5.23 FACTOR (Decompose aMatrix IntoTriangular Factors) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-74
3.5.24 TRANPI (Driver forTRNSP) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-75
3.5.25 TRNSP (Matrix Transpose) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-76
3.5.26 SADD(Matrix Addition Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-78
3.5.27 RSPSDC (RealSingle Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-80
3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;. 3.5-82
3.5.29 CXFBS (Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-84
MODULE FUNCTIONAL DESCRIPTIONS
4.1GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-I
4.1.1 UseofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.1-2
4.1.2 Alphabetical IndexofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-7
4.1.3 Alphabetical IndexofEntryPoints inModule Functional
Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.1-8
4.2EXECUTIVE PREFACE MODULE XCSA(EXECUTIVE CONTROL SECTION ANALYSIS) &amp;hellip;&amp;hellip;&amp;hellip; 4.2-I
4.3 EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.3-I
4.4EXECUTIVE PREFACE MODULE XSORT(EXECUTIVE BULKDATACARDSORT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.4-I
4.5EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.5-I
x(811172)&lt;/p&gt;
&lt;p&gt;Section
4.6
4.7
4.8
4.9
4.10
4.11
4.12
4.13
4.14
4.15
4.16
4.17
4.18
4.19
4.20
4.21
4.22
4.23
4.24
4.25
4.26
4.27
4.28
4.29
4.30
4.31
4.32
4.33
4.34
4.35TABLE OFCONTENTS (Continued)
PageNo.
EXECUTIVE PREFACE MODULE IFP3(II4PUT FILEPROCESSOR 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.6-I
EXECUTIVE PREFACE MODULE XGPI(EXECUTIVE GENERAL PROBLEM INITIALIZATION &amp;hellip;.. 4.7-I
EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.8-I
EXECUTIVE MODULE XSFA (EXECUTIVE SEGMENT FILEALLOCATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.9-I
EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.10-1
EXECUTIVE DMAPINSTRUCTION REPT (REPEAT AGROUP OFDMAP INSTRUCTIONS) &amp;hellip;&amp;hellip;. 4.11-1
EXECUTIVE DMAPINSTRUCTION JUMP (UNCONDITIONAL DMAPTRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.12-I
EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.13-I
EXECUTIVE DMAPINSTRUCTION EXIT (TERMINATE DMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.14-I
EXECUTIVE DMAPMODULE SAVE (SAVE VARIABLE PARAMETER VALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.15-I
EXECUTIVE DMAPMODULE PURGE (EXPLICIT DATABLOCK PURGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.16-I
EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.17-I
EXECUTIVE DMAPINSTRUCTION END(ENDOFDMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.18-I
EXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.19-I
EXECUTIVE DMAPMODULE-SETVAL (SETVALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.20-I
FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.21-I
FUNCTIONAL MODULE GP2(GEOMETRY PROCESSOR -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.22-I
FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.23-I
FUNCTIONAL MODULE PLBT (STRUCTURAL PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.24-I
FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.25-I
FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.26-I
FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.27-I
FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.28-I
FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.29-I
FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.30-I
FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.31-I
FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.32-I
FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE l)&amp;hellip;&amp;hellip;.. 4.33-I
FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)&amp;hellip;&amp;hellip;.. 4.34-I
FUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAINT ELIMINATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.35-I
xi(811172)&lt;/p&gt;
&lt;p&gt;Section
4.36
4.37
4.38
4.39
4.40
4.41
4.42
4.43
4.44
4.45
4.46
4.47
4.48
4.49
4.50
4.51
4.52
4.53
4.54
4.55
4.56
4.57
4.58
4.59
4.60
4,61
4.62
4.63
4.64TABLEOFCONTENTS (Continued)
P_Pa_geNo.
FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;. 4.36-I
FUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.37-I
FUNCTIONAL MODULE RBMG2(RIGID BODYMATRIX GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.38-I
FUNCTIONAL MODULE RBMG3(RIGID BODYMATRIX GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.39-I
FUNCTIONAL MODULE RBMG4(RIGID BODYMATRIX GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.40-I
FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.41-I
FUNCTIONAL MODULE SSG2(STATIC SOLUTION GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.42-I
FUNCTIONAL MODULE SSG3(STATIC SOLUTION GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.43-I
FUNCTIONAL MODULE SSG4(STATIC SOLUTION GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.44-I
FUNCTIONAL MODULE SDRI(STRESS DATARECOVERY -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.45-I
FUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.46-I
FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.47-I
FUNCTIONAL MO[ULE READ(REALEIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;. 4.48-I
FUNCTIONAL MODULE DSMGI(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.49-I
FUNCTIONAL MODULE SMP2(STRUCTURAL MATRIX PARTITIONER -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;. 4.50-I
FUNCTIONAL MODULE DSMG2(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.51-I
FUNCTIONAL MODULE PLAI(PIECEWISE LINEAR ANALYSIS -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.52-I
FUNCTIONAL MODULE PLA2(PIECEWISE LINEAR ANALYSIS -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.53-I
FUNCTIONAL MODULE PLA3(PIECEWISE LINEAR ANALYSIS -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.54-I
FUNCTIONAL MODULE PLA4(PIECEW!SE LINEAR ANALYSIS -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.55-I
FUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.56-I
FUNCTIONAL MODULE MTRXIN (MATRIX INPUT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.57-I
FUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.58-I
FUNCTIONAL MODULE CEAD(COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;.. 4.59-I
FUNCTIONAL MODULE VDR(VECTOR DATARECOVERY) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.60-I
FUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) &amp;hellip;&amp;hellip;.. 4.61-I
FUNCTIONAL MODULE SDR3(STRESS DATARECOVERY -PHASE3-S@RTIto
S_RT2PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.62-I
FUNCTIONAL MODULE XYTRAN (XY-OUTPUT DATATRANSLATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.63-I
FUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.64-I
xii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS(Continued)
Section
4.65
4.66
4.67
4.68
4.69
4.70
4.71
4.72
4.73
4.74
4.75
4.76
4.77
4.78
4.79
4.80
4.81
4.82
4.83
4.84
4.85
4.86
4.87Page No.
FUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.65-I
FUNCTIONAL MODULE GKAM (GENERAL KASSEMBLER ,MODAL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.66-I
FUNCTIONAL MODULE DDRI (DYNAMIC DATA RECOVERY -PART l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.67-I
FUNCTIONAL MODULE DDR2 (DYNAMIC DATA RECOVERY -PART 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.68-I
OUTPUT MODULE XYPLOT (X-Y DATA PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.69-I
OUTPUT MODULE BFP(OUTPUT FILE PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.70-I
OUTPUT MODULE MATPRN (GENERAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.71-I
OUTPUT MODULE MATGPR (DISPLACEMENT METHOD MATRIX PRI_ITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.72-I
OUTPUT MODULE MATPRT (MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.73-I
OUTPUT MODULE SEEMAT (PICTORIAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.74-I
OUTPUT MODULE TABPT (TABLE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.75-I
OUTPUT MODULE PRTMSG (MESSAGE WRITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.76-I
OUTPUT MODULE PRTPARM (PARAMETER ANDDMAPMESSAGE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.77-I
MATRIX MODULE ADD(ADDTWOMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.78-I
.MATRIX MODULE MPYAD(MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.79-I
MATRIX MODULE S_LVE (SOLVES THEMATRIX EQUATION [A][X] =[B])&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.80-I
MATRIX MODULE DECAMP (MATRIX DECOMPOSITION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.81-I
MATRIX MODULE FBS(FORWARD -BACKWARD SUBSTITUTION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.82-I
MATRIX MODULE PARTN(PARTITION AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.83-I
MATRIX MODULE MERGE(MERGE MATRICES TOGETHER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.84-I
MATRIX MODULE TRNSP (TRANSPOSE AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.85-I
MATRIX MODULE SMPYAD (STRI?IG MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.86-I
STRUCTURAL ELEMENT DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I
4.87.1 TheR_D,C_IRBD, andTUBEElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-7
4.87.1.1 InputDatafortheR_D,TUBE,CBNR_D Elements &amp;hellip;&amp;hellip;&amp;hellip; 4.87-7
4.87.1.2 Stiffness Matrix Calculation (Subroutine KR_D
andKTUBEofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-8
4.87.1.3 Lumped MassMatrix Calculation (Subroutine MR_D
andMTUBEofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-9
4.87.1.4 Element LoadCalculations (Subroutine EDTLof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-10
4.87.1.5 Element Stress Calculations (Subroutines SR_DI
andSR_D2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-10
xiii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.2
4.87.3TABLEOFCONTENTS (Continued)
PageNo.
4.87.1.6 Differential Stiffness Matrix Calculation (Subroutine
DRODofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-12
4.87.1.7 Piecewise Linear Analysis Calculations (Subroutine
PSRODofModule PLA3andSubroutine PKRODofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-14
4.87.1.8 Coupled MassMatrix Calculation (Subroutine MCRODof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-16a
4.87.1.9 Thermal Analysis Calculations fortheRODElements
(Subroutine KRODofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-16b
TheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.1 InputDatafortheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.2 Stiffness Matrix Calculation (Subroutine KBARof
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-18
4.87.2.3 Lumped MassMatrix Calculation (Subroutine MBARof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-25
4.87.2.4 Element LoadCalculation (Subroutine BARofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-26
4.87.2.5 Element Stress Calculations (Subroutines SBARIand
SBAR2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-27
4.87.2.6 Differential Stiffness Matrix Calculation (Subroutine
DBEAMofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-29
4.87.2.7 Piecewise Linear Analysis Calculations (Subroutine
PSBARofModule PLA3andSubroutine PKBARofModule
PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-32
4.87.2.8 &amp;ldquo;Consistent&amp;rdquo; MassMatrix Calculation (Subroutine
MCBARofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-36
4.87.2.9 Thermal Analysis Calculations fortheBARElement
(Subroutine KBARofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-37
TheSHEAR PanelandTWIST PanelElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-38
InputDataforSHEARandTWISTPanels &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-38
Definition ofElement Geometry &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-39
Coefficient Generation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-41
Stiffness Matrix Formulation foraSHEARPanel
(Subroutine KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-46
TWIST Element Stiffness Matrix Generation (Subroutine
KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-47
MassMatrix Generation (Subroutine MASSTQ ofModule
SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-484.87.3.1
4.87.3.2
4.87.3.3
4.87.3.4
4.87.3.5
4.87.3.6
xiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.4
4.87.5TABLE OFCONTENTS (Continued)
PageNo.
4.87.3.7 SHEAR Element Stress andForce Calculations
(Subroutine SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-50
4.87.3.8 TWIST Element Stress andForce Calculations
(Subroutines SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-52&amp;rsquo;
4.87.3.9 SHEAR Panel Differential Stiffness Calculations
(Subroutine DSHEAR ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-54
TRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.1 Input DatafortheTRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.2 Basic Equations forTRMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-59
4.87.4.3 Stiffness Matrix Calculation forTRMEM (Subroutine
KTRMEM ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-61
4.87.4.4 Mass Matrix Calculation fortheTRMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-62
4.87.4.5 Element LoadCalculations fortheTRMEM Element
(Subroutine TRIMEM ofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.6 Element Stress Calculations fortheTRMEM Element
(Subroutines STRMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.7 Differential Stiffness Matrix Calculations forthe
TRMEM Element (Subroutine DTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip; 4.87-67
4.87.4.8 General Calculations fortheQDMEM bytheQDMEM
Driver Routines (Subroutines KQDMEM ofModule SMAI,
SQDMEI ofModule SDR2, DQDMEM ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-67
4.87.4.9 Stiffness Matrix Calculations fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-70
4.87.4.10 Element Stress Calculations fortheQDMEM (Subroutine
SQDMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-70
4.87.4.11 MassMatrix Generation fortheQDMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-74
4.87.4.12 Thermal LoadComputation fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76
4.87.4.13 Differential Stiffness Computations fortheQDMEM
(Subroutines DQDMEM andDTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip;. 4.87-76
4.87.4.14 Piece_ise Linear Analysis Calculations (Subroutines
PSTRM andPSQDM ofModule PLA3andSubroutines
PKTRM andPKQDM ofModule PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76a
4.87.4.15 Thermal Analysis Calculations fortheMembrane
Elements (Subroutine KTRMEM andKQDMEM ofModule
SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-76d
TheTRBSC, TRPLT andQDPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-78
4.87.5.1 Input DatafortheTRBSC andTRPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-78
4.87.5.2 General Calculation fortheTRBSC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-79
xv(811172)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.87.64.87.5.3
4.87.5.8
4.87.5.9
4.87.5.10
4.87.5.11
4.87.5.12
4.87.5.13
4.87.5.14
TheTRIAl,
4.87.6.1
4.87.6.2
4.87.6.3
4.87.6.4
4.87.6.5
4.87.6.6
4.87.6.7Pa_a_eNo.
Stiffness Matrix Calculations fortheTRBSCElement
(Subroutine KTRBSC ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-84
Stress Calculations fortheTRBSCElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-85
Stiffness Matrix Calculations fortheTRPLTElement
(Subroutine KTRPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-87
Structural Damping Matrices fortheTRPLTElement &amp;hellip;.. 4.87-95
Stress andElement ForceCalculations fortheTRPLT
Element (Subroutines STRPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-95
Stiffness Matrix Calculations fortheQDPLTElement
(Subroutine KQDPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-97
Stress andElement ForceCalculations fortheQDPLT
Element (Subroutines SQDPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-102
Lumped MassMatrix Generation fortheTRBSC, TRPLT,
andQDPLTElements (Subroutine MASSTQ ofModule SMA2).. 4.87-104
Coupled MassMatrix Calculations fortheTRBSCElement
(Subroutine MTRBSC ofModule SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I04a
MassMatrix Calculations fortheTRPLT Element
(Subroutine MTRPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04g
MassMatrix Calculations fortheQDPLTElement
(Subroutine MQDPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04j
Thermal LoadEquations fortheBending Element
(Subroutine TRBSC, TRPLT andQDPLTofModule SSGI) &amp;hellip;.4.87-I04n
TRIA2, QUADIandQUAD2Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-106
InputDatafortheTRIAl, TRIA2, QUADIandQUAD2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-106
Stiffness Matrix Calculations (Subroutine KTRIQD
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-107
Lumped MassMatrix Generation (Subroutine MASSTQ
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Thermal LoadCalculations (Subroutine EDTLofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-108
Element Stress andForceCalculations (Subroutines
STRQDI andSTRQD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Differential Stiffness Matrix Calculations
(Subroutine MTRIQD ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09
Piecewise Linear Analysis Calculations (Subroutines
PSTRII, PSTRI2, PSQADI, andPSQAD2 ofModule PLA3,
andPKTRII, PKTRI2, PKQADI andPKQAD2 ofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09a
xvi(811/72)&lt;/p&gt;
&lt;p&gt;Secti on
4.87.7
4.87.8
4.87.94.87.6.8
4.87.6.9TABLE OFCONTENTS (Continued)
PageNo.
Differential Stiffness Matrix Calculations forthe
TRIAl andTRIA2 Elements (Subroutine DTRIA of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09d
Differential Stiffness Matrix Calculations forthe
QUADI andQUAD2 Elements (Subroutine DQUAD of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09g
4.87.6.10 Differential Stiffness Matrix Calculations forthe
Basic Bending Triangle (Subroutine DTRBSC of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09j
4.87.6.11 Thermal Calculations fortheCombination Elements
(Subroutine KTRIQD ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09p
TheELASi, MASSi andDAMPi Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-II0
4.87.7.1 Input Data fortheELASi, MASSi andDAMPi Elements &amp;hellip;. 4.87-II0
4.87.7.2 ELASi Stiffness Matrix Generation (Subroutine KELAS
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-II0
4.87.7.3 MASSi Mass Matrix Generation (Subroutine MASSD of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.4 DAMPi Damping Matrix Generation (Subroutine MASSD
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.5 ELASi Stress andForce Recovery (Subroutines SELASI
andSELAS2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-III
Concentrated MassElements C_NMI, C_NM2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.1 ECPTEntries fortheC_NMIMassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-113
4.87.8.2 MassMatrix Calculations fortheCONMIElement
(Subroutine MC_NMX ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.3 ECPTEntries fortheCOHM2MassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-114
4.87.8.4 MassMatrix Calculations fortheCONM2Element
(Subroutine MCBNMX ofModule STY2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-114
TheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.1 InputDatafortheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.2 Stiffness Matrix Calculations (Subroutine KCONEof
Module SMAI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.3 MassMatrix Computation (Subroutine MCONEofModule
SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-118
4.87.9.4 Element LoadCalculations (Subroutine CONEofModule
SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-118
4.87.9.5 Element Stress Calculations (Subroutines SCONE1,
SCONE2, SC@NE3 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-123
4.87.9.6 Differential Stiffness Matrix Calculations (Subroutine
DCONEofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-127a
xvii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.10
4.87.11
4.87.12TABLEOFCONTENTS (Continued)
No.
TheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.1 InputDatafortheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.2 General Geometric Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-129
4.87.10.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-130
4.87.10.4 Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-132
4.87.10.5 Stiffness Matrix Generation (Subroutine KTRIRG of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-133
4.87.10.6 MassMatrix Calculations (Subroutine MTRIRG of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-135
4.87.10.7 Thermal LoadCalculations (Subroutine TTRIRG of
Module SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-136
4.87.10.8 Element ForceandStress Calculations (Subroutines
STRIRI andSTRIR2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-136
4.87.10.9 Thermal Analysis Calculations fortheTRIARG and
TRAPRG Elements (Subroutine HRINGofModule SMAI)&amp;hellip;.. 4.87-138a
TheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-139
4.87.11.1 InputDatafortheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-139
4.87.11.2 General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-140
4,87.11.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-142
4.87.11.4 Elastic Constants Matrix Calculation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.5 Stiffness Matrix Generation (Subroutine KTRAPR of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.6 MassMatrix Calculation (Subroutine MTRAPR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-146
4.87.11.7 Thermal LoadCalculations (Subroutine TTRAPR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-147
4.87.11,8 Element ForceandStress Calculations (Subroutines
STRAP1 andSTRAP2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-148
4.87.11.9 Thermal Analysis Calculations fortheTRAPRG Element
(Subroutine HRINGofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-151
TheT_RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-152
4.87.12.1
4,87.12,2
4.87.12.3
4.87.12.4InputDatafortheT@RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-152
General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-153
Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-156
Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-160
xviii (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P10</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_010/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.19.5 MLR(MATRIX)
Description
[M_r]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.19.6 MRR(MATRIX)
Description
[Mrr] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypePartition ofmassmatrix.
=r
=rectangular
=realdouble precision
Partition ofmassmatrix -rset.
=r
=r
=symmetric
=realdouble precision
2.3-74&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.20 Data Blocks Output From Module RBMG2
2.3.20.I LLL(MATRIX)
Description
[Lz_] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.20.2 ULL(.MATRIX)
Description
[u_]-
Matrix Trailer
NoteLower triangular factor ofKLL-_set.&lt;/h1&gt;&lt;p&gt;=lower triangular
=real double precision
Upper triangular factor ofKLL-_set.
Number ofcolumns =
Number ofrows :
Form :upper triangular
Type =real double precision
This matrix isnotastandard upper triangular factor.
subroutine FBS.
2.3.20.3
Description
Matrix TrailerLBLL (MATRIX)
Lower triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =lower triangular
Type =real double precisionItsformat isacceptable only to
2.3-75&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.20.4 UBLL(MATRIX)
Description
[u_]-
Matrix Trailer
NoteUpper triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =uppertriangular
Type =realdouble precision
Thismatrix isnotastandard uppertriangular factor.
subroutine FBS.Itsformat isacceptable onlyto
2.3-76&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.21 Data Blocks Output From Nodule REMG3
2.3.21.I DM(MATRIX)
Description
[D] -Rigid body transformation matrix.
Natrix Trailer
_umber ofcolumns =
Number ofrows =r
Form =rectangular
Type =real double precision
2.3-77&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.22 DataBlocks Output FromModule RBMG4
2.3.22.1 MR(MATRIX)
Description
[mr] -Rigid body mass matrix -rset.
Matrix Trailer
Number ofcolumns :r
Number ofrows :r
Form :symmetric
Type =real double precision
2.3-78&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.23 DataBlocks Output FromModule SSGI.
2.3.23.1 PG(MATRIX)
Description
[Pg] -Static loadvector matrix giving static loads -gset.
Matrix Trailer
Number ofcolumns =number ofsubcases
Number ofrows =g
Form =rectangular
Type =realsingle precision
2,3,23.2 PGI(MATRIX)
Description
i
[Pg] -Static loadvector giving static loads forPiecewise Linear Analysis problem -
gset.
MAtrix Trailer
Number ofcolumns =1
Number ofrows =g
Form =rectangular
Type =realsingleprecision
2.3-79&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.24 DataBlocks Output Fromr_odule SSG2
2.3,24.1
Description
[qr]-
Matrix TrailerQR(MATRIX)
Determinate support forces matrix -rset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.2 P0(F_TRIX)
Description
[Po]
Matrix Trailer=number ofsubcases
:r
:rectangular
=realsingle precision
Partition oftheloadvector matrix giving loadsduetostatic force-oset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.3 PS(MATRIX)
Description
[Ps]
Matrix Trailer:number ofsubcases
:o
=rectangular
:realsingle precision
Partition ofloadvector matrix giving loads insset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.4 PL(MATRIX)
Description
[P_] -
Matrix Trailer=number ofsubcases
:s
=rectangular
=real single precision
Partition oftheloadvector matrix giving static loadson_set.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
:
:rectangular
=realsingle precision
2.3-80&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.25 Data Blocks Output From Module SSG3
2.3.25.1 ULV(MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements _set.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=real double precision
2.3.25.2 U_V (MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements intheoset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases
:o
=rectangular
=real double precision
2.3.25.3 RULV (MATRIX)
Description
[6P_] Residual vector matrix forthe_set.
Matrix Trail er
Number ofcolumns =number ofsubcases
Number ofrows =
Form =rectangular
Type =real single precision
2.3.25.4 RU_V (MATRIX)
Description
{6Po} -Residual vector matrix fortheoset.
Matrix Trailer
Number ofcolumns =number ofsubcases
i_umber ofrows =o
Form =rectangular
Type =real single precision
2.3-81&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.25.5 UBLV(MATRIX)
Description
[u_] -Partition ofthedifferential stiffness displacement vector -&lt;em&gt;set.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form :rectanaular
Type :realdouble precision
2.3.25.6 RUBLV(MATRIX)
Description
[6P&lt;/em&gt;] Differential stiffness residual vector -Lset.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form =rectangular
Type :realsingle precision
2.3-82&lt;/p&gt;
&lt;h1&gt;DATABLOCK DESCRIPTIONS
2.3.26
2.3.26.1
Descri ption
[P_]
Matrix TrailerDataBlocks Output FromModule SSGA.
PLI(MATRIX)
Partition ofloadvector forinertia relief matrix giving loads duetostatic +
inertial forces on_set.
Number ofcolumns
Number ofrows
Form
Type
2.3.26.2 P_I(MATRIX)
Description
[Pio]
Matrix Trailer=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=realsingle precision
Partition ofloadvector forinertia relief matrix giving loads duetoinertial
force +static forces onoset.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
=o
=rectangular
=realsingle precision
2.3-83&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.27 DataBlocks Output FromModule SDRI
2.3.27,1 UGV(MATRIX)
Description
[Ug]-
Matrix TrailerDisplacement vector matrix giving displacements inthegset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.2
Description
[Pg] -
Matrix TrailerPGG(MATRIX)
Static loadvector appended toinclude allboundary conditions -gset.
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases inCASECC
=g
=rectangular
=realsingle precision
2.3.27.3
Description
[qg] -
Matrix TrailerQG(MATRIX)
Single-point constraint forces anddeterminate support forces matrix -qset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectanqular
Type =realsingle precision
2.3.27.4 PHIG(MATRIX)
Description
[@g] -Eigenvector matrix giving eigenvectors (displacements) inthegset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3-84&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.27.5 UBGV (MATRIX)
Description
h
[u_] -Displacement vector matrix fordifferential stiffness giving displacementssinthegset.
Matrix Trailer
Number ofcolumns =number offactors onaDSFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.6
Description
[qbg] _
Matrix TrailerQBG(MATRIX)
Single-point forces ofconstraint matrix fordifferential stiffness -gset.
Number ofcolumns =number offactors onaDSFACT bulkdatacardi|..L_.
mu_r OFrows =g
Form :rectangular
Type :realsingle precision
2.3.27.7 BQG(MATRIX)
Description
[q_] Single-point forces ofconstraint matrix forabucklinq analysis problem -gset.
Matrix Trailer
Number ofcolumns =number ofbuckling modes found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.B DELTAUGV (MATRIX)
Description
{6Ug} -Incremental displacement vector inpiecewise linear analysis -gset.
Matrix Trailer
Number ofcolumns =l
Number ofrows =g
Form =rectangular
Type =realsinqle precision
2.3-85&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.27.9
Description
{6Pg}
Matrix TrailerDELTAPG (MATRIX)
Incremental loadvector inpiecewise linear analysis -gset.
Number ofcolumns =1
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.10 DELTAQG (MATRIX)
Description
{6qg} -Incremental vector ofsinqle-point forces ofconstraint inpiecewise linear
analysis -gset.
Matrix Trailer
Number ofcolumns =1
Number ofrows :g
Form =rectangular
Type =realsingle precision
2.3.27.11 CPHIP (MATRIX)
Description
[@p] -Complex eigenvectors inpset.
Matrix Trailer
&lt;em&gt;lumber ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2.3.27.12 QPC(MATRIX)
Description
[q&lt;/em&gt;] -Complex single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2,3186&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.27.13
Description
Matrix TrailerUPVC (MATRIX)
Frequency response solution vectors -pset.
Number ofcolumns
Number ofrows
Form
Type=theproduct ofthenumber offrequencies andnumber ofloads
=p
=rectangular
=complex single precision
2.3.27.14 UPV(MATRIX)
Description
[Up]Transient solution vectors -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times multiplied by3&amp;quot;
Number ofrows =p
Form =&lt;em&gt;^&lt;/em&gt;&amp;hellip;&amp;hellip;I_.
Type =realsingle precision
*Eachtriple isdisplacement, velocity andacceleration.
2.3.27.15 QP(_TRIX)
Description
[qp]-Transient single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times
Number ofrows =p
Form =rectangular
Type =real single _recision
2.3-87 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28 DataBlocks Output FromModule SDR2.
2.3.28.1 &lt;em&gt;UGVI(TABLE)
Description
Output displacement vector requests (gset,SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
1
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
LabeT
lO&lt;/em&gt;point ID+device code
Point type
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
Notes
I.Records 1and2arerepeated foreachvector tobeoutput
2.Device code=li=
3.Format code:I&lt;/em&gt;:
4.Approach code
5.Pointtype =xyoutput only
print
punch
printandpunch
real
real/imaginary
magnitude/phase
I,3,7,orI0
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.repeat
foreach
point
2.3-88&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.2 _UBGVI (TABLE)
Description
Output displacement vector requests (gset,S_RTI, real)
Table Format
Recor____d Wor___dd Type
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RItem -
Device code+lO&lt;em&gt;aoproach code
l
0
Subcase number
LoadsetID
0
0
0
Format code
Nu_er ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
5.Point type =
Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-89&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.3 &lt;em&gt;UPVI(TABLE)
Description
Output displacement vector requests (pset,S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO*approach code
I&lt;/em&gt;:Displacement1Velocity
illAcceleration
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO*point ID+device code _repeat
Pointtype }foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-90&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.4 _UPVCI (TABLE).
Description
Output displacement vector requests (pset,S_RTI, complex).
Table Format
Record Word Type
0 Header recordItem
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 R
9-14 RDevice code+lO&lt;em&gt;aDproach code
lO01:Displacement
lOlO Velocity
lOll Acceleration
0
Subcase nu_er
Frequency
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type tfor
R(TI), R(T2), R(T3), R(RI) R(R2), R(R3)&lt;em&gt;each
I(TI), I(T2), I(T3), I(RI)&lt;/em&gt; I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!:real==real/imaginary
=magnitude/phase
4.Approach code =5
5.Point type =Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-91&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.5 OPGI(TABLE).
Description
Output loadvector requests (gset,SORT1, real)
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
2
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwordsperentryinnextrecord :8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )ReFeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutDut.
2.Device code
li=xyoutput only= =print
=punch
=printandpunch
3.Format codeI!:real= =real/imaginary
=magnitude/phase
4.Approach code =I,3,7,orI0
5.Pointtype
li=gridpoint= scalar point
extrapoint
modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-92&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.6 _PPI (TABLE).
Description
Output loadvector requests (pset, S{_RTI, real).
Table Format
Record Word Type Item
Header record
l I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
! I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =6
5.Point typeIi=gridpoint= =scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-93&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P100</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_100/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Wheneachofthesegments ofthelinkiscomplete, thestatus ofthelogical variable ofXREF
(see7.2.6) istested. If.TRUE., LKED077 iscalled toformat andprint alisting ofcross
references.
LKED077 begins byallocating theXREFtable (seesection 7.2.2.1.I0) totheworking space
formally occupied bytheRDT,SCT,SDT,RT,GT,andobject deckandtextbuilding storage areas
asthese latter tables andareas arenolonger needed.
Theprincipal input tothecross reference processing istheinformation onSYSUT3 written
byLKED075. Figure 30shows theformat ofSYSUT3. Twotypes ofchains aremaintained. Thefirst
isalistchain inwhich entry-point entries arechained inorder theyappear inthestorage map
(andtheorder inwhich references willbelisted) andthesecond isachain ofallthecalls to
eachentry point.
Names arelocated intheXREFtable inthesamewayastheGTthrough thehashtechnique
(seesection 7.2.2.1.I). (Aninspection oftheentry formats detailed insection 7.2.2.1.I0
indicates thattheinitial hashpointer andhashchain pointer fields areinthesameposition
astheGT.)
UptoIIcalls fromagiven subprogram toagiven entry point arestored inoneXREFentry
since that isthemaximum number ofcalls thatcanbelisted inoneprinter line.
Twolistoptions areprovided inconjunction with thecross reference processing. Both are
controlled byPARAM(7) (seesection 5.6.4.2). Thefirst istoproduce alisting ofallreferences
fromeach subprogram (essentially thecontents oftheLINKTable oftheobject deck). This is
provided because ofadeficiency intheoutput oftheRUNcompiler. Thesecond option istolist
allreferences toLink0entry points forlinks other thanLink O.
7.2.2.8 Final Processing
LKED080 performs final processing. Itiscalled when theENDLINKS card (seesection 5.6.4.12)
isencountered. Ifthestatus of_UTFILE isC,processing isalready complete andLKED080 returns.
Otherwise, theoutput file iswritten. Figure 26shows theformat oftheoutput file.
Thefirst stepistowrite thebootstrap program. This isdone inamanner similar tothat
described insection 7.2.2.7 except thattherequired object decks arecopied fromLINKLIB instead
7.2-73 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
59 17 0
subprogram name address
entry point name address
entry point name address
4m
nameofexternal reference 0
0Location of
referen ce
1 0Location of
reference
0
Location of
Ii 0reference
I
0
subprogram name address
entrypointname addressendofentry
points
endofexternal
_F&amp;mdash;_referenc e
Figure 30. Format ofSYSUT3.
7.2-74 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
ofSYSUT2 (thereason forthisdifference isthatinthelevel1.0version (theinitial version)
ofthelinkage editor thebootstrap deckswerenotnecessarily onSYSUT2). Thereafter, eachof
thelinksiscopied fromSYSUTI totheoutput file. Wheneachlinkiscopied, amessage iswritten
on_UTPUT signifying theevent. Whenalllinkshavebeencopied, a3-word record iswritten with
thecontents ofthefirstwordbeingENDLINKS. Thisisfollowed byanend-of-file.
7.2.2.9 TheBootstrap Program
Asdiscussed briefly insection 7.2.1.4.7, thebootstrap program itself loaded bythestandard
CDCloader. TheCDCloader loadsrelocatable records fromthebeginning ofinformation onafile
untilanullrecord orendoffileisencountered. AftertheCDCloader completes theloading of
thebootstrap program, corewillbeasdiagrammed here.
0
778
1008
FieldLength1008Words
JobData
IXBO_TBDI
labeled
common
XB_T
XI_RTNS
MAPFNS
SCQPEROUTINES
/ /
blank
commonspaceallocated tohold
&amp;ldquo;Supermain&amp;rdquo; =LINK0
Bootstrap routines
Opencore(blank common) used
forworkspace
7.2-75 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
ThebootstrapdriverXB_BTbeginsexecutionandimmediately fetchesthecontrolcardimage
directingthecurrentjobstep.Thiscardandsubsequent controlcardimagesarenormallystored
inlocations708through778ofthejobcontrolblock.
Thecontrolcardshouldbeinoneofthefollowingformats.
(I)Namel.
Inthisformat,NAME1.isthefilenameofthesequential linkageeditoroutput.
Executionofthecontrolcardcausesthebootstrapprogramtobeloaded,anditin
turnwillcopytheentireexecutable filetodiskfileSYSLM_Dindirectaccess
format.Link0willthenbeloadedandtransferofexecutionwillbemadeinto
LinkO.
(2)NameI.CREATE(Name2)
Inthisformat,NAME1isthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillcopyfileNameltoadirectaccess
fileName2anddeclareittobeacommonfile.Link0willthenbeloadedandtransfer
ofexecutionwillbemadeintoLinkO.
(3)NameI.CATL_G(Name2)
InthisformatNamelisthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillonlycopyfileNameltoalocal
directaccessfileName2.
(4)NameI.ATTACH
Inthiscase,Namelisthedirectaccessfilecontaining theexecutable programand
ifitisavailabletothejobcontrolpointeitherlocallyorthroughapermanent
fileattachoracommonfileattach,thebootstrapprogramwillbeloadedbythe
CDCloader.ThebootstrapprograminturnwillloadLink0intocoreandtransfer
ofexecutionwillbemadeintoLinkO.
ThebootstrapprogrambreaksdownthecontrolcardintotwofilenamesNAME1andNAME2
(NAME2maybeblank),and_PTI_Nwillbeeitherblank,CREATE,CATL_G,orATTACH.Havingthis
information, thebootstrapprogramwillthendecidewhetherornotthefileNAME1istobecata-
loguedfordirectaccessonfileNAME2.Ifitdoeshavetobecatalogued, thatprocessisper-
formedimmediately.
7.2-76(6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Onceitisdetermined thatthefileisindirect access format (anATTACH wasmadeoritwas
putindirect access format) forexecution oftheprogram, &amp;quot; &amp;quot; Supermain =LinkO,thealways-core-
resident program segment, isreaddirectly intocore. Atransfer ismadedirectly tolocation
lOl8where ajump totheactual entry point ofsupermain isstored. Thebootstrap program isthen
lostandisunrecoverable. However, itisnotneeded forthecontinuing execution oftheprogram.
Detailed logic ofthecataloguing process ofthefilefordirect access maybefound inthe
logic flowhcart forXB_T, Figure 39.Thebootstrap program iscontained entirely inone
F_RTRAN subroutine which iswell andheavily commented andshould alsobereferenced. Refer also
tosection 7.2.1.4.7.
7.2.2.10 TheSegment Loader
Detailed execution ofthesegment loader XLBADER iscovered bestinthedetailed comments
oftheactual codeandtheflowcharts ofXL_ADER&amp;rsquo;s twoentry points LINKandL_ADER.. (Figures
40and41).
Entry point LINKinthesegment loader utilizes information stored inlocations lOl8, I028,
andI038 (intheLINKO$ table) asfollows.
59 29 0
1018
I028
I038EQBO,BO,L_B ZER_-SEGTAB$ ADD.
LENGTH-MAST MAST-INDX ADD.
LENGTH-SUB SUB-INDX ADD.
59 35 17 0
L_Cistheentry pointofLinkO.
LINK stores thecontents ofword I028intheFETword 8when reading inasubindex fora
link. Thissubindex isreadintothelocation specified bythesubindex address inword I038.
Then LINK stores theaddress ofthesubindex intheFETword8.TheFETisalways stored beginning
inword I048 asallocated bythelinkage editor. Themaster index contains relative track addresses
which point tothebeginning ofparticular logical records onthediskaslisted here.
7.2-77 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
MASTER INDEX(1) =Notused
MASTER INDEX(2) =Subindex forLink0
MASTER INDEX(3) =Subindex forLink1
MASTER INDEX(4) =Subindex forLink2
Thesubindex contains relative trackaddresses which pointtoparticular logical records defining
aparticular link.
SUBINDEX(1) points todirectory of3words containing thelinknumber, thenumber of
segments inthelink,andlongest possible length ofthelinkwhenloaded.
SUBINDEX(2) points toSegment l
SUBINDEX(3) points toSegment 2
L_ADER. istheentrypointwhichiscalled inXL_ADER fromENTAB$ tables tohandle theauto-
matic loading ofsegments asrequired. Eachsegment loaded bythesegment loader results inone
calltothePP(peripheral processor) routine CI_which readsthesegment fromthediskdirectly
intothecoreinwhichthesegment istoreside. (Thisisoftenreferred toasablastreadof
arecord). L_ADER. calls READXforallsegment loads, thusavoiding theuseofthecircular
buffer.
L_ADER. isconcerned withtwotables incore. OneisSEGTAB$ (Figure 28)whichmaybelocated
byfinding itszero-address intheright30bitsofcorelocation 1018.SEGTAB$ contains oneword
foreachsegment possible inalinkandisterminated withafullwordofzerobits. SEGTAB$ is
builtintotherootsegment (segment I)ofeachlink. Link0doesnothaveaSEGTAB$. Each
wordoftheSEGTAB$ hasthefollowing format:
Bits0through II=Number oftheparent segment or0ifthereisnoparent
Bits12through 17=Thenumber oftheregion thesegment isin
Bits18through 35=Theaddress where thesegment loadsat
Bits36through 53=Thelength ofthesegment
Bits54through 57=Unused
Bit58 =lifasegment isabouttobeloaded bythesegment loader. (Ifthis
bitisonforanysegment, L_ADER. orREADXshould beinexecution)
7.2-78 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Bit59 =1ifthesegment iscurrently considered incore andnotoverlayed by
anyother segment whenexitfromtheloader hasbeenmade.
Theother table usedbyLOADER. isENTAB$, atable thatresides inanysegment which has&amp;quot;downward
calls&amp;quot; (calls toalower segment inatree oroutside agiven region). AnENTAB$ table ismade
upofentries which are3words ormore inlength. SeeFigure 29fortheformat ofanentry in
ENTAB$.
Often adownward callpassing toENTAB$ andthentoLOADER. will, ifLBADER. determines the
segment isincorepasscontrol directly totheaddress specified intheENTAB$ entry. Theloader
knows where theENTAB$ entry isbecause attheentry point toLOADER. isstored ajumpbacktothe
address +lofthelastword oftheENTAB$ entry. Thisjumpback isnever usedexcept todeter-
minewhere LOADER. wascalled from. LOADER. never returns. Itonlycalls forward. Theroutine
called byLOADER. always returns directly totheroutine that called LOADER. viatheENTAB$ entry.
Step-by-step logic isdetailed inthelogic flowcharts forLINKandLOADER. (Figures 40and
41),thetwosubroutines ofXLOADER. Segment loads areaccomplished bycalls toutility routine
READX. Thesystems programmer should alsoconsult theheavily commented COMPASS subroutine
XLOADER. This isarelatively small, self-contained routine. Refer alsotosection 7.2.1.4.8.
7.2.3 Flowcharts
Thefollowing pages giveflowcharts foreachofthemajor divisions ofthelinkage editor,
(Figures 31through 38),thebootstrap program (Figure 39)andthesegment loader (Figures 40and
41). Thegeneral flowofthelinkage editor isgiven inFigure 3andreference toitinconnection
with Figures 31through 38maybehelpful. Ifaflowchart symbol (e.g., aprocessing rectangle,
adecision diamond) isidentified byanumber (e.g., 910,921)above andtotheleftofthe
symbol, thenumber istheFORTRAN statement number where theprocessing ortestcanbefound.
Anumber followed bytheletter &amp;ldquo;a&amp;rdquo;(e.g., 330a) inthesame position ontheflowchart implies the
function canbefound intheneighborhood oftheFORTRAN statement numbered bythenumber&amp;ndash;330 in
theexample. Ifaprocessing symbol, arectangular box,oftheflowchart isidentified byasymbol
name above andneartheleft-hand edgeofthebox,theboxrepresents asubroutine callandthe
symbolic nameisthesubroutine name. Theabbreviation &amp;ldquo;nbr&amp;rdquo; stands fortheword &amp;ldquo;number&amp;rdquo;.
7.2-79 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDO00
,LReadPrint, Decode,
andConvert 1stCard
inINPUT
Name
=LINKEDIT
YES
921
Is
Continued
NO910
PrintFatal
ErrorMessage
Read,Print, Decode,
andConvert NextCard_fSTOP
Endof NO
rd?
YES
960
FileSpecs_O_
YES
Allocate Buffers
andIndices and
OpenSYSUTI
_EXITYES
toLKEDOI5PrintFatal
ErrorMessage
Figure 31(a).;_EXIT
toLKEDOI0 STOP
Flowchart forLKEDO00.
7.2-80 (6/I/71)&lt;/p&gt;
&lt;p&gt;P
lr
onDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
XREF
LET928
930.TRUE. ÷XREF
.TRUE. -_LET
N_LIST932
.FALSE. ÷LIST
NmMAP933
.FALSE. ÷MAP
_UTFILEI&amp;rsquo;_921
935
934
Invalid
Keyword950A
91o
SaveValue I
ofPARAMSaveFileName
andStatus
Figure 31(b). Flowchart forLKEDO00.
7.2-81 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDOI0
,lOpenINFILE. Copy
Bootstrap Program
toSYSUTI
ReadDirectory
Record forLink
130
Close INFILE
I.. _,,,3 words
CopySegments
FromINFILE to
SYSUTI
LWrite Index
Record forLinkPrintFatal
ErrorMessage
Figure 32.Flowchart forLKEDOIO.
7.2-82 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LKEDOI 5
Read, Print, and
Convert LIBRARY Card
Check
FormatPrintFatal
ErrorMessBge
Test
_.._sition on
End
&amp;lt;_nuation
NO
210
OpenSYSUT2 inBuffer 2
/_llocate Storage for
Subprogram Nameand
EntryPointTables
Initialize Table
Pointers
OpenaLibrary
inBuffer 3
_230NotEnd
Read,Print, and
Convert NextCard IAdd NameofLibrary to_Library Table (ignore
ifAlready inTable)
Figure 33(a). Flowchart forLKEDOI5.
7.2-83 (6/]/7])&lt;/p&gt;
&lt;p&gt;NASTPJ_N SUPPORT PROGRAMS
Read aDeck From
theLibrary
350
CloseLibrary. Store
Pointer inLibrary
TabletoFirstDeck
inNextLibrary
I,
Move Subprogram Name ]
Table andEntry Point I
Table soThat They Use I
Only Actual Size Required I
IResetTable Pointers
toNewLocationsNO
Trytofind PIDL
TablePrintWarning Message
Ignore Deck
_230
NO
AddNameofSubprogram
toSubprogram Names
Table. Advance Pointer
toNextEntryPrintWarning Message
Ignore Deck
&lt;em&gt;230
YES
.&lt;/em&gt;,&lt;em&gt;J&amp;rsquo;&lt;/em&gt; EXIT
toLKED900
Print Fatal
Message (5)
WriteDeckonSYSUT2
Figure 33(b). Flowchart forLKEDOI5.
7.2-84 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
&lt;em&gt;230
I
Locate ENTRTable i
NO
?
ForEachEntry Point,
Store NameandPointer
inEntry Point Table
NO
30
(EXITtoLKED900
Print Fatal
Error Message (5)&lt;/em&gt;( ABORT
With XDUMP
Figure 33(c). Flowchart forLKEDOI5.
7.2-85 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Initialize For 1st Pass I I Echo Card in DAYFILE
-a End of Print Fatal Error
s/ I Message
Decode and Convert 1&#39;1
Figure 34(a). Flowchart for control statement processing.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
NO BAD
iPrintErrorMessageforREGI_N/_VRProblem
InvalidVerb
INCLUDE
REGIBN
_VERLAY
INSERT
RENAME
ENTRY
END
LINKorENDLINKS  12oo
_1300
_1400 1,3,6
_8A_1500
_1600 2
_1990
4,51910
;IPrintErrorMessage
ForBadFormat
1920
PrintErrorMessage
Forlllegal Verb
1930
I
61PrintErrorMessage
1940 vIForMissing Name
irintErrorMessageForMisplaced Card
010
Figure 34(b). Flowchart forcontrol statement processing.
7.2-87 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
II00
=2
1900
LookUpName
inLibrary Table
PrintErrorMessage
SetN_G_:23÷KERR
I010
Figure34(c). Flowchart forcontrol statement processing.
7.2-88 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LLookUpName
inLibrary Table
&amp;ldquo;&lt;em&gt;1121ToLKED990
Logic Error Abort
LookUpSubprogram
NameinGT
NotinTable
able
&lt;em&gt;n_r&lt;/em&gt;&amp;gt;&lt;/em&gt;&amp;ndash; l.e,s_e
I.reate Entry With
LASS=4or5.Store
_ointer toLibrary in
Field
YES
r
_lOll
Figure 34(d). Flowchart forcontrol statement processing.
7.2-89 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGPJ_MS
1200
?Increment Regionnbr
StoreSegment nbrs inRDT
1960
_PrintErrorMessage
_&amp;hellip;Li_k __ [_kl_legal CardFor
8oo1
SaveCardinWorking
Storage
I
NO
I0
_Exi__JTOLKED900
PrintFatalError
Message (0)
Figure34(e). Flowchart forcontrol statement processing
7.2-90 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Figure 34(f). Flowchart for control statement processing.
7.2-91 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
1400
=1
=2
LK 21
LKEDI50
DelinkEntryFromOld
SegmentandLinkto
CurrentSegmentLookUpINSERTNameinGT
1421A.&lt;em&gt;,,
InTable&lt;/em&gt;._-,,Link0
INotin
Table5÷KERR
_]900
PrintErrorMessage
Create EntryWith
CLASS=7(undef.)
NO
1421
Figure 34(g). Flowchart forcontrol statement processing.
7.2-92 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P101</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_101/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
15O0
=l =2
Increment Count
ofRENAME CardsGetHashnbrForOld
Name; HashIntoRT;
FindEndofHash Chain
6÷KERR
1900H Create NewEntry inRT.Chain Entry to
Previous Entry
IOll
_1800
Figure 34(h). Flowchart forcontrol statement processing.
7.2-93 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
1600
=I =2
&lt;em&gt;°&lt;/em&gt;
StoreENTRYName
I010&amp;lt;EXIT
ToLKED990
LogicErrorAbort
4÷KERR
1900
Figure 34(i). Flowchart forcontrol statement processing.
7.2-94 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
1990
?SetEndofTable for )
Cards ForPass2.
) Complete Allocation of
Working Storage
Create Entry inGT
ForLINKO$
Create Entry inGT
ForSEGTAB$
Read Dictionary For
Link0FromSYSUTI
Create Entry inGT
ForEachItemin
Link0Dictionary
F
SetPASS=2
1002
Figure 34(j). Flowchart forcontrol statement processing.
7.2-95 (6/I/71)&lt;/p&gt;
&lt;p&gt;LKED025
IReopen SYSUT2.
IInitialize toPro-
IcessEachEntryin
ItheSubprogram Names
&amp;mdash;&amp;ndash;ITable(SNT)
LLL&amp;gt;3OlO
GetLibrary Name I
FromLT.GetPointers i
toSNTFromLT I
I
&lt;em&gt;&amp;gt;3015 _
GetNameFromSNT
LookUpSubprogram
Name inGT
[ ICLASS :
3210&lt;/em&gt;
&lt;em&gt;&amp;lt;&lt;/em&gt; [YESNASTRAN SUPPORT PROGRAMS
ReadDeckFromSYSUT2
Reset CLASS tolor2.
Complete LField
3060
Search AllTEXT
Tables inDeck
IfanyTEXTTable
Points toaCommon
BlockintheLCT,Set
HighOrderBitinthe
LCTEntry
3050
GetNext Common Block
NameFromLCT
LKEDIO0
LookUpCommon Block
NameinGT
30501a
Figure 35(a). Flowchart forLKED025.
7.2-96 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
30501a
-1
1,3,4Print Warning Message
2,53055
®
3058
30599
ToLKED990
Logic Error Abort
3054
Reset CLASS to2
3_Bi30583051
SetCLASSandL
FieldsofNewEntry
SetINDEX Field
Figure 35(b). Flowchart forLKED025.
7.2-97 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
30553055
SetMaxL
NO
NOPrintWarning Message
SetINDEXField
LocateENTRTable
3080NOPrintErrorMessage
3210
Figure 35(c). Flowchart forLKED025.
7.2-98 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
3080
3080
PickUpEntryNameFromENTRTable
LKED1O0
LookUpEntry Name
inGT
_r
-l3091
SetCLASS, LandA
Fields ofNewEntry
0,2,3,4,5
3095
!
.ISetAField ofOld
7Entry
30999
_C EXIT )
ToLKED990
Logic Error &amp;lsquo;_bort
j&amp;ndash;x
3_O0 II0
3092&amp;amp;3094
IPrint Error Message.SetNBGBFlag
3205
Reset CLASS to4and
LtoLibrary Pointer
_3210
Figure 35(d). Flowchart forLKED025.
7.2-99 (6/I/71)&lt;/p&gt;
&lt;p&gt;3100
_YES
=Undef. /
,oNASTRAN SUPPORT PROGRAMS
PrintWarning MessageCALLLKED150
ResetCLASS, Land
AFields inEntry
YES
Search TEXTTables
forIDWord
EXIT
PrintWarning
MessageYES
Figure 35(e).CALLLKED990
LogicErrorAbort
Flowchart forLKED025.
7.2-100 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
c
313
Store Number of
Arguments inEach
Entry inCall ChainLI=0
NO
0803120a
lTurnonARGBit.
SetPc=Number
Arguments
Locate LINKTable
N
315 3200
PickUpExternal
Reference
LKEDI75
IfRequested, Rename
External Reference
Figure 35(f). Flowchart forLKED025.
7.2-I01 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDIO0
LookUpExternal
NameinGT
&lt;em&gt;r
-I
3170
3164
IfCallNotinPath,
AddEntrytoCall
Chain
2,53165
IPrintWarning Message I
&amp;lt;EXITToLKED990
LogicErrorAbort3161
Ireate NewEntryWithCLASS=7
,&lt;strong&gt;o_o&lt;/strong&gt;&lt;/em&gt;&amp;rsquo;_i
AddEntrytoCall
Chain
W
3170
Figure35(g). Flowchart forLKED025.
7.2-I02 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600 LINKAGEEDITOR
31620
I Search EPT
NO
NO
IYES
LKEDI50 +
Delink Entry FromOld
Segment andLinkto
Current SegmentLKEDSO0
LookUpSubprogram
NameinGT
[ re te ew n r, n&amp;rsquo; i_ Table WithCLASS=4
200 151
SetINDEX Field inGT.I
SetMaxLength ofText
andDeckTable!
_3210NotinTable
Figure 35(h). Flowchart forLKED025.
7.2-I03(6/I/71)&lt;/p&gt;
&lt;p&gt;3210NASTRANSUPPORTPROGRAMS
of NO
3015
.TRUE. SYSLIB
SE.
NO
Libraries
YES 3010
Undef. S_._
3
Initialize toTrace
EachSegment Chain
intheGTYES
YES
NO
UNPKSYM r_ 3280
Unpack ItemsinGT
Entry
3280PrintWarning Message
&lt;em&gt;298ForEachEntry inChain1
Which Matches anEntry
inLINKLIB, Create aGT&lt;/em&gt;
Entry ofCLASS=4 for |
Subprogram Name |
SetSYSLIB to.TRUE.
3010
Figure 35(i). Flowchart forLKED025.
7.2-I04 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
0,632899
ToLKED990
LogicErrorAbort
4,5_3287
32871
PrintErrorMessage.
SetN_GBFlag
3288
IPrint Error Message.SetN_G_Flag329
Print Error Message
SetNI_G_Flag
3295
Figure 35(j). Flowchart forLKED025.
7.2-I05 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
?
NO
NO_IPrint Error Message.
-[SetNOG_Flag
Print Error Message
SetN_G_Flag
OFF
TurnOff
3295
3 EXIT
OK ToLKED990
LogicErrorAbort_3295
GetEntryinCall
Chain
NO
SetPSYM:0
Figure 35(k). Flowchart forLKED025.
7.2-I06 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LYES
3280NO
3270a_
&lt;em&gt;o
IPrintError Message IEachEntry inChain. F°r
SetN_G_Flag
Initialize toProcess
EachEntry inEach
Segment CallChain
]3306 &amp;ldquo;4
GetSegment Limits
FromRDT
[&lt;/em&gt; 3310
GetSegment Chain
Pointers FromSCTUnpack CallChain
Entry
Delink Entry From
CallChain3320
NO
31
Figure 35(I). Flowchart forLKED025.
7.2-107 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
3320__-._
IPrint Error Message. iSetNBGBFlag
4
SetAField inEntry
&amp;lt;_fCall
YES
3322
YES Chain Now
EmptyNO
3311
NO
Create Entry inGT
ForENTAB$
yEs
3310_3306
Figure 35(m). Flowchart forLKED025.
7.2-108 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED050
1Initialize toProcess
EachSegment Chain
GetSegment Chain
Pointer FromSCT.
SetLENGTH=O
Unpack Entry
ILENGTH=LENGTH+L+I
J
YES
Store LENGTH inSDT
Figdre 36(a). Flowchart forLKED050.Initialize toProcess
EachRegion
4010a
GetSegment Number
Defining Region
FromRDT. REGLEN=O
4012
PARENT=Last Segment
inRegion. LENGTH=O
4014
LENGTH=LENGTH+Length
ofSegment PARENT=
Parent inSDT
SetMaximum Region
Length
7.2-I09 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
NO
12
N_4olOa
Replace Region Lengths
IWithRegion Addresses l
IbyAccumulating Lengths I
1Initialize toProcess
EachRegion
4030a _
GetSegment Numbers
Defining Region From
RDTGetRegion
Address FromRDT
AddLength ofSegment
toCurrent AddressStoreSegment Address
andRegion Number in
SDT
p
o
4o3  4030aInitialize toProcess
EachSegment Chain
[_&amp;gt;&lt;em&gt;o-]&lt;/em&gt;
UNPKSYM _ v4050
IUnpack Entry
$
Figure 36(b). Flowchart forLKED050.
7.2-110 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,6
404440499
ToLKED990
Logic Error Abort
IIStore SubprogramAddress inLField.
TurnonARGBit
4046
Store &amp;ldquo;Entry&amp;rdquo;
Address inAField.
Increment Address
4047
IGetSubprogram Address /viaLField. Additt_
Relative Address, and|
Store inAField |
4,5,7
&lt;em&gt;2&lt;/em&gt; 4042
Figure 36(c). Flowchart forLKED050.
7.2-III(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
NO_N 0
YES
Accumulate andSet
Address ofENTAB$
EntryEXIT
ToLKED990
LogicErrorAbort
4042
LKEDIO0 _NO
I
LookUpEntryinGTI
I
rESPrintErrorMessage.
SetNOGOFlag
_4070
Figure 36(d). Flowchart forLKED050.
7.2-112 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P102</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_102/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
=l
?_
SaveENTRY Address
LI
NO JPrint Error Message.
ISetN_G_Flag
Look UpL_ADER. inGT
NO
,_ExITToLKED990
Logic Error Abort
Generate RJL_ADER.
Instruction
Figure 36(e). Flowchart forLKED050.
7.2-I13 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED075
_ENTER _
I
PrintErrorMessage.
SetNOGBFlag
SetWRIT_UT =.FALSE.
SetWRIT_UT =.TRUE.
4
Build andWrite BLKDATA I
Program andWrite on I
SYSUTI I
LookUpNameofa
Bootstrap Deckin
theSNT5010
NO_IWrite Directory Record
&amp;ldquo;lon SYSUTI
_5020
Figure 37(a). Flowchart forLKED075.
7.2-114 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
?
ReadDeck FromSYSUT2
Write DeckonSYSUTIPrint Fatal Error
Message
UNPKSYM _ v5180
Unpack Entry inGT
&amp;lsquo;r
C/5009a  YESWrite Directory Record
onSYSUTI. Write Dic-
tionary Record on
SYSUTI
Initialize toBuild
TextforSegments
GetSegment Numbers
ForRegion FromRDT
GetSegment Chain
Pointers FromSCT
_50405044
Figure 37(b).ENTAB$ YES
NO
tryin
YESNO
Build SEGTAB$.
Write SEGTAB$
onSYSUTINO
YES
Assemble LINKO$.
Write LINKO$ on
SYSUTI
Print First Entry
5040
Flowchart forLKED075.517O
505O
7.2-I15 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
EXIT &lt;em&gt;&amp;rdquo;&lt;/em&gt;-j-
ToLKED900
LogicErrorAbort&amp;gt;3YES
ReadPIDLTable
ForSubprogram
onSYSUT2
=2
SetLR=1Get
Length FromPIDLNO
GetAddress ofEach
EntryinLCTFromGT
IReadENTRTable For
DeckonSYSUT2
PrintEntries.
IfXREF,Write Entries
onSYSUT3
5100
Figure 37(c). Flowchart forLKED075.5O8O
NoText-Generate
Zeros. PrintStorage
MapLine
_5040
GetLength FromEntry. |
PrintStorage MapLine.|
SetLRDepending on|
Position ofCommon |
BlockinLCT
ZeroText-Building
Area. WriteDump
Control Word
ReadaTableFrom
Deck
NO
516
WriteTextonSYSUTI
7.2-116 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
AnyOther Table
LINK
TEXT
FILLFILLTAB
_I Relocate Text
1
_5103TEXTTAB _YES
Relocate Text
L
5103
REPL _1
lREPLTAB
Figure 37(d).Relocate Text
Flowchart forLKED075.
7.2-I17 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5130
GetExternal Name
LookUpNameinGT
UN
Unpack EntryYES _
r
YES_ &lt;em&gt;5134
GetAddress FromIGTEntry
Figure 37(e).EXIT .&lt;/em&gt;
ToLKED990
LogicErrorAbort5160
I
WriteTextonSYSUTI I
NO
CloseRecord onSYSUT3 1
I
Flowchart forLKED075.5040
7.2-I18 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
5134
Trace CallChain
toFindEntry
NO
ExIT)ToLKED990
Logic Error Abort
NO ISetAddress toABSENT.
GetAddress From
ENTAB$ Entry
Perform Relocation IofAllReferences to
External Symbol
5103
5130
Figure 37(f). Flowchart forLKED075.
7.2-I19 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5170
Build Text For
ENTAB$
IWriteENTAB$ onSYSUTI
CloseRecord For
Segment
NO
5034
NO
5025
XREF? .FALSE _RETURN
CloseRecord onSYSUT3
Rewind SYSUT3
I_EXIT_ToLKED077
Figure 37(g). Flowchart forLKED075.
7.2-120 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED077
Initialize For
Processing
7010
Read Subprogram Name
andAddress
NO
YES_N=a?&lt;em&gt;e&lt;/em&gt;
ReadEntry Point
NameandAddress LookUpEntry NameinTable
?
&amp;lsquo;ReadExternal ReferenceNOICreate Entry. LinktoJ
ListChain
L
LinktoListChain
7020
Figure 37(h).Flowchart forLKED075.
7.2-121 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
}°LookUpNamein
Table
_o
Create Entryin
Table
Create CallEntry
ReadLocation of
External Reference
NO
7O5OireaeNewcanrlPrnne
Figure 37(i).AddCurrent Call
Location toCall
Entry
Flowchart forLKED075.7050
Complete CallEntry.
PrintLine
7010
External Name=
LastWordRead
7.2-122 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7060
?Initialize For2nd
Pass (SORT 2)
ReadLink0Dictionary
FromSYSUTI. ForEach
Entry inLink0Which
isAlsointheTable,
Link theEntry tothe
Call Chain
ofList
7130 _YES
I
IRestore Table PointerUNPKEP
Unpack ListChain
Entry
, yEs
Initialize toTrace
CallChainNO
UNPKXRF _ v7110
1
Unpack CallChain I
Entry
{
Print CallsPrint Entry
Figure 37(j). Flowchart forLKED075.
7.2-123 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED080
YES
Create BLKDATA Program 1
WhoseLength=Length of_
Link0+2008.WriteThisI
Program as1stRecordon
_UTFILE
OpenLINKLIB in
Buffer2RETURN
229
WriteRecordWith
WordENDLINKS. Close
BUTFILE.
ReadaDeckFrom
LINKLIB andLocate
PIDLTable
NO
Write Deckon_UTFILEiCloseLINKLIB
L
Exist ForJ
YES
ReadSubindex For
LinkPoint Index
toSubindex
,LReadDirectory Record
ForLink.WriteDirec-
toryRecord onOUTFILE
CopyEachSegment
FromSYSUTI to
(_UTFILE
Figure 38.Flowchart forLKED080.
7.2-124 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
XBBBT
1PickupControl Card
FromLocations 708-
778andUnpack Each
Character Intoa
Separate Word
FromtheControl Card
Characters Formthe
TwoFileNames NAME1
andNAME2 andtheoptior
Specified
220
YES
_Print Illegal &lt;em&gt;PTI_N ]
sageS
I&lt;/em&gt; STOP _
Figure 39(a). Print Message About lIllegal UseofFile l
.a son
YFS
Open theDirect Access
FileofNameNAME2
DeclareFileNamed
NAME2 tobeaC_MM_N
File
YESRelease itFrom
C_MM_N andEvict
theDiskSpace it
isUsing
420 _r
Determine Amount of
CoreThere isAvail-
able inBlank C_4_N
NO
SetNAME2=&amp;ldquo;SYSLM_D&amp;rdquo; _
Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-125 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
I
OpentheSequential I
FileNAME1WithRewind
I]
I
ReadOneofthe I
Bootstrap Relocatables I
FromFileNAME1 I
LooptoCopyI
Bootstrap
Program_
iriteitSequentiallyonFileNAME2465
&lt;em&gt;ReadLink0Directory iRecord FromFileNAME1
WriteDirectory Record|
asDirect Access Recor&lt;/em&gt;
UsingSub-lndex on|
FileNAME2 |
ReadLink0Dictionary
FromFileNAME1and
Write itOutasDirect-
Access Record 2Using
Sub-lndex onFileNAME2
IReadLink0&amp;quot;Supermain&amp;quot; 1
Directly IntotheCoreI
SpaceitWillOccupy atJ
Z(1)in/XB_TBD/ FromI
FileNAME1
1Writeout&amp;quot;Supermain&amp;quot;
asDirect-Access Recorc
Record Nbr3Using
Subindex onFileNAME2
SetIndexSpecification
inFETtoPointtothe
Master Index
WriteOuttheLink0]
Subindex asDirect-
Access Record 2Using
theMaster Indexon
FileNAME2IRedefine theSpaceOccupied forUseby
theSubandMaster
Indices tobethe
Actual Predefined
SpaceinSupermain
Rebuild theFET
ForDirect-Access
FileNAME2inits
Permanent Location
inSllpPrm_._.n
570 _&amp;quot;
ReadaLink
Directory From
FileNAME1
v700
!
PrintErrorMessage i
About Invalid
J Directory Record
STOP
Figure 39(b). Flowchart forsubroutine XB_Tofthebootstrap program.
7.2-126 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
w
70
Close theSequential
FileNAMEI WithRewindNOi
_IDefine Index inFET
toPoint totheSubindex
J.,r
SettheField Length
inLocations 738and
768
YES
CloseFileNAME2
WithRewind OnlyClose FileNAME2
WithUnload
Execute C_MM_N Macro
onNAME2 toRe-attach
C(_ON FiIe
ReopenFileNAME2Direct-AccessTransfer Control to
Location lOl8inCore
Figure 39(c). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-127 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
WriteOuttheDirector)
Record asDirect-Access
Record 1UsingSub-
IndexonFileNAME2
SetLINKNumber and
NUMSEGS FromDirectory
Record Data
&lt;!-- raw HTML omitted --&gt;NUMSEGS
_Complete
Define IndexinFET
toPointtoMaster
Index
IWrite Sub-lndex For
LinkJustCataloged
asDirect-Access
Record LINKNUM+2
&lt;em&gt;sing Master-lndex)
onFileNAME2
570IReadaSegment FromI
FileNAME1
l
PrintInsufficient L&lt;/em&gt;
_ _- !
WritetheSegment as T
Direct-Access Record (STOP _)I+IUsingtheSub- j
indexonFileNAME2
Figure 37(d). Flowchart forsubroutine XBOOTofthebootstrap program.
7.2-128 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Print Message That
NAME1 MayNotbe
Different FromNAME2
on_PTI_N=&amp;ldquo;ATTACH&amp;rdquo;
Write aMessage
STOP220
or
N/_ME2=&amp;quot; B1ank&amp;quot;
?
YES
750
Insufficiel
cient Core
IOpentheDirect-
Access FileNAMEI
i
&amp;lsquo;Read inSubindex For
LinkO,Which is
Record 2,Using the
Master Index
1Define FETtoPoint
toThisSubindex
JustRead
IReadinLink0Direc-
tory=Record lUsing
theSubindex
iI
SetLink0&amp;quot;Supermain&amp;quot;L
Length
]ReadinSupermain =
Record 3Using the
Sub-lndex
Supermain isRead
Directly Intoits
Permanent Location
inC)re
1I
Redefine FETinits I
Permanent LocationIinSupermain
MoveMaster Index
FromWorking FETto
Permanent Location
lOl8inCore
ransfer Control tOre_cation I018inCo
Figure 39(e). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-129 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINK
1StoreinWord8of
theFETtheMaster
IndexAddress and
Length
Compare theRequested
LinkNumber Withthe
Master IndexLength
toDetermine ifitis
inRange
ICallLINKERR to 1
theLink_ NO.]WriteMessage &amp;ldquo;LINKi
Number inJ &amp;ldquo;|NUMBER ISOUTOFI
&amp;ldquo;&amp;rsquo;,,_ngej,-/ L&amp;hellip;_NGE.&amp;rdquo; _
j&amp;rsquo;&lt;em&gt;Relative Track&lt;/em&gt; YES ReadintheSub-&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
?Check LinkNum}_er in
Directory toVerify
WeHaveCorrect Link
atHand
Check ForSufficient
CoretoLoadLowest
Segment ofLinkNO
NO
Read inRecord 2UsingI
Subindex. This is I
theRootSegment ForI
theLink
ITurn onLeft-Most Bit
inSEGTAB$ Segment l
Word toIndicate
Segment lisinCore
Branch toEntry PointoftheLinkinthe
Rootsegment JustLoaded
(ACTUAL EXIT)ICallLINKERR toWrite I
_lMessage INCORRECT
IDIRECTQRY RECORD FQR
ICallLINKERR toWrit_Message &amp;ldquo;INSUFFICIENT
C_RE F_RLINK&amp;ndash;.&amp;quot;;CSTOP
STOP
Figure 40(b). Flowchart forsubroutine LINKofthesegment loader.
7.2-131(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LOADER.
1Determine Address of
theENTAB$ Entry
WhichCalled L_ADER.
1
ickOffSegment NumberromLastWordof I
NTAB$Entry(Thisis
heSegment inWhichtheI
ntryPointoftheTrue
allResides)
1LookatSEGTAB$ Entry |
ForThisSegment and
NoteifitisLoaded
l(Bit59willbeonif
[Segment isinCore)MovetheActual Jump-
BackInstruction From
theNext-to-Last Word
intheENTAB$ Entry,
totheTrueEntryPoin
Given intheRight18
BitsoftheLastWord
intheENTAB$ Entry.
IIftheNumber ofArgu-
ments asGiven inthe
Right18Bitsofthe
ThirdWordFromthe
Bottom oftheENTAB$
EntryisGreater Than
6,theNumber ofArgu-
mentAddresses Over6
asStored intheTop
oftheENTAB$ Entry
areMovedtotheStor-
ageAreaintheCalled
RoutineNO
Transfer Control tothe_TrueEntry+1asGiven
intheLastWordofthe
&lt;em&gt;,,ENTAB$ EntryISaveBRegistersB1Through B6
ITurnonMARKED-FOR- IL_ADBitForSEGTAB$ I
EntryofSegment in|
TreeIfIN-CORE BitOf&lt;/em&gt;
]PickupParent
Segment Number of
Segment JustMARKED-
IF_R-L_AD
_ _NO
/
PickupWordin I
SEGTAB$ ForThis
Segment
Figure 41(a). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-132 (611171)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P103</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_103/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
SetLoadOrigin
Address ofHighest
Segment tobeLoaded
FromLastSEGTAB$
Entry MARKED-F_R-
L_AD
PickOffRegion Number
ofLastSegment MARKED-
F_R-L_AD inSEGTAB$
Entry
Sweep Through SEGTAB$
Entries andFindFirst
Segment Having Same
Region Number asSeg-
ments MARKED-F_R-L_AD
PickupNextSEGTAB$
Entry inRegion
Restore BRegisters Y_e OutRegion
ADBit
BitonandDoes Se,
HaveanOrigin Lower Than
TreeBeing Loaded
?ReadSegment Into |
CoreandTurnOff
MARKED-F_R-L_AD Bit
andTurnonIN-C_RE
Bit
I
Turn OffIN-C_RE |
BitForSegment
r
Figure 41(b). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-133 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4 Subroutine Descriptions
Thissection contains descriptions forlinkage editor subroutines, whichareclassified in
fourcategories:
I.Majorsubroutines. ThesearecodedinF_RTRAN andarenamedLKEDxxx, where
I00&amp;lt;xxx&amp;lt;299. Ingeneral thesesubroutines operate onthelinkage editor tables in
working storage.
2.Linkage editor utilities. TheseareC_MPASS routines thenamesofwhicharerelated
tothefunction theyperform. Theyareallentry points insubprograms namedLKEDxxx,
where300&amp;lt;xxx&amp;lt;399.Mostoftheseroutines perform tasksdirectly related tothe
linkage editor suchasfieldmanipulation oftableentries.
3.General utilities. TheseareC_MPASS andF_RTRAN routines theprimary functions of
whicharegeneral innature andnotlimited tolinkage editor applications. Nonaming
convention exists forthegeneral utilities. Several oftheseroutines (e.g., XRCARD,
MAPFNS) areusedintheNASTRAN program.
4.Miscellaneous. Thesearewritten primarily inFORTRAN andperform auxiliary tasksfor
thelinkage editor. Thenaming convention isLKEDxxx, where900_xxx_999.Anexample
isLKED990, aroutine which abnormally terminates thelinkage editor intheeventofan
error inthelogic.
Muchofthecommunication amonglinkage editor subroutines isviasevennamedcommon blocks,
LKEDCxx, where Ol_xx_07.Section 7.2.6givesdefinitions oftheprincipal variables inthese
common blocks.
Table 2givesinalphabetical order theentrypoints described insection 7.2.4alongwith
thesubsection numbers where thedescriptions canbefound.
7.2-134 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Table 2.Entry Points Described inSection 7.2.4.
Entry Point Section Number Entry Point
ABSENT. 7.2.4.3.5 REINDX
ANDF 7.2.4.3.21 REPLTAB
CALLCHN 7.2.4.2.8 RSHIFT
CHARTST 7.2.4.2.12 RSHIFTX
COMPARE 7.2.4.3.4 SEGPATH
COMPLF 7.2.4.3.21 STOEXT
CONVERT 7.2.4.2.10 SYMHASH
CORDUMP 7.2.4.3.6 TEXTTAB
C_RWDS 7.2,4.3.24 UNPK
FIELDLN 7.2,4.3.27 UNPKI2
FILLTAB 7.2.4.2.21 UNPK30
GETEXT 7.2.4.2.17 UNPKCAL
HASH 7,2.4,2,30 UNPKEP
LINK20. 7.2.4.3.28 UNPKID
LINKERR 7.2.4.3.29 UNPKMSK
LINKTBI 7.2,4.2.22 UNPKSYM
LINKTB2 7.2,4.2.22 UNPKXRF
LKEDIO0 7.2,4.1.I UNPKXX
LKEDI50 7.2.4,1.2 WRITEX
LKED175 7.2.4.1.3 XBKPREC
LKED200 7.2.4.1.4 XBKREC
LKED201 7.2.4.1.4 XCL_SE
LKED900 7.2.4.4.1 XDUMP
LKED990 7.2.4.4.2 XEOF
LKED995 7.2.4.4.3 XEVICT
LSHIFT 7.2.4.3.21 XFETCH
LWORDS 7.2,4.3.23 XFRDREC
N_W 7.2.4.2.19 XJUMP
ORF 7.2.4.3.21 XOPEN
PACK 7.2.4.2.3 XRCARD
PACK12 7.2.4.2.6 XREAD
PACKCAL 7.2.4.2.16 XREQST
PACKDMP 7.2.4.2.26 XREWIND
PACKSYM 7.2.4.2.2 XSTORE
PACKXRF 7.2.4.2.27 XTRACE
PACKXX 7.2.4.2.14 XWRITE
READX 7.2.4.3.15 ZAPSection Nu_er
7,2.4.3.11
7.2.4,2.23
7.2.4.3.21
7.2.4.2.11
7.2.4.2.9
7.2.4.2.18
7.2.4.2.7
7.2.4.2.20
7.2.4.2.4
7.2.4.2.5
7.2.4.2.24
7.2.4.2.15
7,2.4.2,29
7.2.4.2.25
7.2.4.2.4
7.2.4.2.1
7.2.4.2.28
7.2.4.2.13
7.2.4.3.14
7.2.4.3.19
7.2.4.3.17
7.2.4.3.9
7.2.4.3,3
7.2.4.3.7
7.2.4.3.10
7.2.4.3.22
7.2.4.3.18
7.2.4.3.25
7,2.4.3.8
7.2.4.3.1
7.2.4.3.13
7.2.4.3.20
7.2.4.3.16
7.2.4.3.22
7.2.4.3.2
7.2.4.3.12
7.2.4.3.26
7.2-135 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.1 Major Subroutines
7.2.4.1.1 LKEDIO0
Subprogram name: LKEDIO0
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tolocate anentry intheGeneral Table. Ifnoentry isfound andanoption is
selected, anewentry intheGTiscreated.
Calling Sequence:
CALL LKEDIOO(NAME,POINTER,ZPOINT,SEGNO,STATUS,FLAG)
NAME -(input) symbolic name, left justified, zero filled
POINTER -(output) relative location ofentry iffound orcreated; zero ifnotfound
andnotcreated
ZP_INT -(output) ITABO+POINTER iffoundorcreated; undefined otherwise, where
ITABOisazeropointer totheGT
SEGNO -(input) ifentry isnotfoundandFLAG#0andSEGNO_O,thenewlycreated
entry ischained tothesegment defined bySEGNO.
STATUS -(output) ifentrywasnotfound (whether created ornot),STATUS =-I.
Otherwise, STATUS =CLASS (seesection 7.2.2.1.9) ofentry (0_STATUS _7)
FLAG (input). Ifentry isfound, FLAGisignored. Ifentry isnotfoundand
FLAG:O,return ismadewithPOINTER =0andSTATUS =-I.Otherwise,
(i.e., FLAG_0),anewentry iscreated andPOINTER points toitwhile
STATUS =-Iindicates thiscase.
Method: HASH(section 7.2.4.2.30) iscalled toobtain thehashnumber forNAME. SYMHASH
(section 7.2.4.2.7) iscalled tolocate theentry intheGeneral Table. Iftheentry isin
thetable, thenreturn isgivenwithPOINTER pointing totheentry, ZP@INT =ITABO+P_INTER
andSTATUS :CLASSoftheentry. Iftheentry isnotinthetableandFLAG=O,return is
givenwithP_INTER =0andSTATUS =-I.Otherwise anewentryiscreated intheGT.If
SEGNO_O,thenewentry ischained tothesegment chaindefined bySEGNO. Return isgiven
withPOINTER pointing tothenewentry, ZPOINT =ITABO+POINTER andSTATUS =-I.
7.2-136 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Language: F_RTRAN
7.2.4.l.2 LKEDI50
LKEDI50
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Todelink asymbol entry intheGeneral Table from itsposted segment chain and
linktheentry toanewsegment chain.
Callinq Sequence:
CALLLKEDI50(P_INTER,ZP_INT,SEGNBR)
P_INTER -(input) points toanentry intheGT.
ZP_INT -(input) =TABO+P_INTER, where ITABO isthezeropointer totheGT
SEGNBR &amp;ndash;(input) newsegment number towhich entry isnowtobelinked
Method: Theposted segment number andsegment chain pointers areobtained fromthe3rd
word oftheGTentry byUNPKXX (section 7.2.4.2.13). Thebeginning andending segment
chain pointers areobtained fromtheSCTbyUNPKI2 (section 7.2.4.2.5). Theentry isthen
delinked (removed) fromtheposted segment chain. Segment chain pointers forthenewsegment
(defined bySEGNBR) areobtained fromtheSCTbyUNPKI2. Theentry isnowlinked (added) to
theendofthenewsegment chain. Updated chain pointers forboth theoldandnewsegment
chains arestored intheSCT. Anupdated 3rdword oftheGTentry isstored.
Language: F_RTRAN
7.2.4.1.3 LKED175
Subprogram name: LKEDI75
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: ToPerform therename function (seesection 5.6.4.9)
Calling Sequence:
CALLLKEDI75(NAME,DKNAME,NEWSTAT)
NAME (input/output) nameoftheexternal reference tobetested forrenaming.
therename occurs, NAMEisreplaced bythenewname.If
7.2-137 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DKNAME (input) nameofsubprogram inwhichNAMEisanexternal reference
NEWSTAT -(output) alogical variable setto.TRUE., ifarename occurred; .FALSE.,
otherwise.
Method: NEWSTAT issetto.FALSE.. IftheRename Tableisempty, return isgiven. Other-
wise, HASH(section 7.2.4.2.29) andSYMHASH (section 7.2.4.2.7) arecalled tolocate the
entry intheRename Table. Iftheentryisnotinthetable, return isgiven. Otherwise,
NAMEissettothenewname,NEWSTAT issetto.TRUE., andreturn isgiven.
Lanquage: F_RTRAN
7.2.4.1.4 LKED200
Subproqram name: LKED200
Typeofroutine: Subroutine
Alternate entrypoints: LKED201
Purpose: Todetermine ifacall(external reference) isinthepathofthesubprogram making
thecall. Ifthecallisnotinthepath,anentryisaddedtothecallchainofthecurrent
subprogram andlinked totheENTAB$ chainofthecalling segment. LKED201 performs allthe
logicasLKED200 doesexcept thepathtest.
Callinq Sequence:
LKE02001CALLILKED2011 (TOPTR,TOSEG,FROMSEG)
TOPTR (input) pointer inGTtoentrydefining thesymbol called (external reference).
TOSEG (input) segment number ofexternal reference
FROMSEG -(input) segment number fromwhich calloriginates.
Method: Ifentrycomesthrough acalltoLKED200, thenSEGPATH (section 7.2.4.2.9) iscalled
todetermine ifthecallisinthepath. Ifitis,return isgiven. Otherwise, codecommon
withLKED201 isexecuted. CALLCHN (section 7.2.4.2.8) iscalled todetermine ifanyentry
isalready inthecallchain. Ifso,return isgiven. Ifnot,anentry inthecallchain
iscreated. Theentryislinked totheENTAB$ chainforthesegment defined byFRBMSEG.
Thefields oftheentryarecompleted andreturn isgiven.
Languaqe: FORTRAN
7.2-138 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.2LinkageEditorUtilities
7.2.4.2.1 UNPKSYM
Subproqram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack intoIIwordstheIIfields ofa3-word symbol entryintheGeneral
Table (seesection 7.2.2.1.9)
Callinq Sequence:
CALLUNPKSYM(Z(ZPOINT),ITEMS)
Z(ZP_INT) -(input) address oftheIstwordofthesymbol entry
ITEMS -(output) address ofanarrayofdimension IIwhere thefields oftheentry
willbestored asfollows:
(I)Symbol name
(2)CLASS
(3)P1
(4)INDEX
(5)L
(6)Pc
(7)PN
(8)SEG
(9) A
(lO) PREV
(ll) NEXT
Note: theARGbitisnotunpacked
Method: Fields areextracted using bitmasks constructed bytheMXiinstruction shifts and
logical products.
Language: C_MPASS
7.2-139 (6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.2.2 PACKSYMNASTRAN SUPPORT PROGRAMS
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TostoretheIIfields ofa3-word symbol entryintheGeneral Table froman
ll-word array(seesection 7.2.2.1.9)
Callinq Sequence:
CALLPACKSYM(Z(ZP_INT),ITEMS)
Thearguments aredefined asinUNPKSYM (seesection 7.2.4.2.1)
Method: Eachwordofthe3-word entryisconstructed usingshiftandlogical suminstructions.
Fields arenotexamined formaximum size.
Language: C_MPASS
7.2.4.2.3 PACK
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: PACKMSK
Purpose: Tostoreasingle iteminawordwhichcontains morethanoneitem.
Calling Sequence:
CALLPACK(ENTRY,ITEM,BIT,WIDTH)
CALLPACKMSK(ENTRY,ITEM,BIT,MASK)
ENTRY-(output) address ofwordwhere ITEMistobestored
ITEM (input) itemtobestored
BIT (input) position ofthelow-order bitinthefieldinENTRYwhere ITEMistobe
stored (numbering convention isthatthehighorderbitinawordis59andthe
loworderbitisO.Bitsarenumbered fromlefttoright).
WIDTH -(input) widthofthefieldinbitpositions
MASK-(input) amaskofl-bits intheloworder position oftheword,thenumber of
l-bits isthewidthofthefieldwhere ITEMisstored. Theremainder ofMASK
mustbezero-filled.
7.2-140 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: IFPACK iscalled, amaskof&amp;quot;l&amp;quot;bitsspecified byWIDTH isconstructed inthe
low-order partofaword, with theremainder ofthewordzero-filled. IfPACKMSK iscalled,
thisstepisnotnecessary. Thewordspecified byENTRYiis fetched, shifted according to
BIT,therequested field iscleared using alogical product with thecomplement ofMASK,
ITEMisentered using alogical sum,thewordisshifted toitsoriginal position, andstored
backinmemory.
Language: CI_MPASS
7.2.4.2.4 UNPK
Subprogram name: LKED300
Type ofroutine: Integer function
Alternate entry points: UNPKMSK
Purpose: Toextract asingle itemfrom awordwhich contains more thanoneitem.
Callinq Sequence:
ITEM=UNPK(ENTRY,BIT,WIDTH)
ITEM=UNPKMSK(ENTRY,BIT,MASK)
Where thearguments aredefined asinPACKandPACKMSK (seesection 7.2.4.2.3)
Method: IfUNPKiscalled, amaskof&amp;quot;l&amp;quot;bits specified byWIDTH isconstructed inthelow-
order partoftheword, withtheremainder oftheword zero-filled. IfUNPKMSK iscalled,
thisstepisunnecessary. Thewordspecified byENTRY isfetched, shifted according toBIT
andtheitemisextracted using alogical product. ENTRY remains unchanged inmemory.
Language: C_MPASS
7.2.4.2.5 UNPKi2
Subprogram name: LKED300
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack four15-bit items fromaone-word entry oreight 15-bit items fromatwo-
word entry.
7.2-141(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLUNPKI2(ENTRY,ITEMS,K)
ENTRY-(input) address oftheIstwordofaone-word ortwo-word entry.
ITEMS-(output) address oftheIstwordofa4-word or8-word arraywherethe
unpacked itemswillbestored, right-adjusted, zero-filled
K
Method :
Language:(input) 1or2specifying thenumber ofwords tobeunpacked
Itemsareextracted usinga15-bit mask, logical product and15-bit shiftinstructions.
C_MPASS
7.2.4.2.6 PACK12
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topackfour15-bit items intoaone-word entryoreight 15-bit itemsintoatwo-
wordentry.
Call_____ing Sequence:
CALLPACKI2(ENTRY,ITEMS,K)
where thearguments aredefined asinUNPKI2 (seesection 7.2.4.2.5)
Method: Usingashiftandlogical sum,theitemsarepacked together.
Note: Itemsarenotexamined formaximum size(_15bits)
Lanquaqe: COMPASS
7.2.4.2.7 SYMHASH
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Tolocate asymbol entryinatable
Calling Sequence:
P_INTER =SYMHASH(TABLE,NAME,HASHNBR,STATUS)
7.2-142 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
TABLE -(input) address oftheOthword inthetable (i.e., address ofthe
Istwordminus one)
NAME -(input) symbol tobelocated, left-justified, zerofilled
HASHNBR -(input) hashnumber ofthesymbol
POINTER andSTATUS -(output) ifentry forsymbol isnotintable:
POINTER =0
STATUS points tolastentry insymbol chain.
ifentry isintable:
POINTER points toentry
STATUS =CLASS ofentry
Method: Beginning with theentry towhich HASHNBR points, thesymbol chain issearched for
amatch. Iffound, POINTER andSTATUS aresetasdefined above. Iftheendofchain is
encountered before amatch occurs, P_INTER issettozero andSTATUS issettopoint tothe
lastentry inthesymbol chain.
Language: COMPASS
7.2.4.2.8 CALLCHN
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Totrace thechain ofcalls toasymbol.
Calling Sequence:
POINTER =CALLCHN(TABLE,CALLPTR,FROMSEG,STATUS)
TABLE -(input) address ofOthword intable
CALLPTR -(input) pointer toentry ofsymbol called
FROMSEG -(input) segment number fromwhich calloriginates
POINTER andSTATUS -(output) ifnochain exists:
POINTER =STATUS =0
ifcall isalready inchain:
POINTER =O,STATUS _0
7.2-143 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ifcallisnotinchain:
POINTER points tolastentryincallchain
STATUS _0
Method: Acallchainexists iftheARGbit=0andPc#O.Thissituation istested. If
nottrue,return ismadewithPOINTER =STATUS =O.Acallisdefined tobealready inthe
chainifthesegment number fromwhichthecalloriginates matches theFROMfieldofthecall
entry. Thechainissearched forthiscondition. Iffound, POINTER andSTATUS aresetas
defined above. Otherwise, P_INTER points tothelastentryinthechainandSTATUS isset
tononzero.
Language: C@MPASS
7.2.4.2.9 SEGPATH
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Todetermine ifthesegment called isinthepathofthesegment fromwhich the
callismade.
Calling Sequence:
LVAR=SEGPATH(Z(ISEGDO),TOSEG,FROMSEG)
LVAR -(output) logical variable whichis.TRUE. ifcallisinthepath; .FALSE.
otherwise
Z(ISEGDO) -(input) address oftheOthwordoftheSegment Definition Table
TOSEG -(input) segment number towhichcallismade
FROMSEG -(input) segment number fromwhich callismade
Method: Starting withtheentryintheSDTtowhich FROMSEG points, theparent oftheseg-
mentischecked. Ifitmaches T_SEG, LVARissetto.TRUE. andSEGPATH returns. Ifthe
parent iszero,LVARissetto.FALSE. andreturn isgiven. Otherwise, thesegment to
which theparent points isfetched andthetestsrepeated.
Language: COMPASS
7.2-144 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.2.10 CONVERT
Subproqram name: LKED300
Typeofroutine: Integer Function
Alternate entry Points: None
Purpose: Toconvert asymbol stored ina2-word array of4characters perword, left
justified, blank filled (NASTRAN format) toasingle word, left-justified, zerofilled.
Callinq Sequence:
NEWNAME =CONVERT(OLDNAME)
OLDNAME -(input) 2-word array of4characters perword, leftjustified, blank filled
NEWNAME -(output) oneword, leftjustified, zerofilled
Method: Eachcharacter of_LDNAME istested until ablank character isfound or8characters
havebeenexamined. Character positions starting withtheblank andthose succeeding areset
tozero.
Languaqe: COMPASS
7.2.4.2.11 RSHIFTX
Subprogram name: LKED300
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Toshift acomputer word totheright aspecified number ofbitpositions.
Callin 9Sequence:
SHIFTED =RSHIFTX(NUMBER,N)
SHIFTED -(output) shifted word
NUMBER -(input) computer word tobeshifted
N -(input) number ofbitpositions toshift
Method: Thenumber isassumed tohavethehighorder bitequal tozero (this isnottested).
TheAXiinstruction isused.
Lanquaqe: COMPASS
7.2-145 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.12 CHARTST
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Totestaposition inaXRCARD output buffer (seesection 3.4.19) foraspecific
delimiter.
Callinq Sequence:
LVAR=CHARTST(_UTBUF(K),CHAR)
LVAR -(output) logical variable whichis.TRUE. ifOUTBUF(K) andOUTBUF(K+I)
contain thespecified delimiter; .FALSE. otherwise
_UTBUF(K) -(input) address ofa2-word arrayofcharacters stored 4characters per
word, leftjustified, blankfilled
CHAR (input) address ofacharacter stored inIHformat (i.e., leftjustified,
blankfilled)
Method: Letthecharacter beCandablankbeb.Thenthetwowords at_UTBUF(K) and
_UTBUF(K+I) mustbeCbbbbbbbbb andbbbbbbbbbb. Thewordsaretested forthatcondition.
Ifthecondition issatisfied, LVARissetto.TRUE.. Ifnot,LVARissetto.FALSE..
Language: C_MPASS
7.2.4.2.13 UNPKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack the2ndor3rdwordofasymbol entry intheGeneral Table (seesection
7.2.2.1.9).
Calling Sequence:
CALLUNPKXX(Z(1),ITEMS)
Z(1)-(input) address ofthewordtobeunpacked (2ndor3rdwordofaGTentry)
ITEMS-(output) address ofa4-word arraywhere thefouritemswillbestored.
7.2-146 (6/i171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: Usingappropriate bitmasks, shifts, andlogical products, thefields oftheword
areextracted andstored.
Language: COMPASS
7.2.4.2.14 PACKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topack4itemsintothe2ndor3rdwordofasymbol entryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKXX(Z(I),ITEMS)
wherethearguments aredefined inUNPKXX (seesection 7.2.4.2.13)
Method: Usingappropriate shifts andlogical sums,theitemsarepacked intoasingle word
andstored inthetable. Theitemsarenotchecked forbeingwithin thespecified field
width.
Languaqe: COMPASS
7.2.4.2.15 UNPKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsinthefirsttwowordsofacallentryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLUNPKCAL(Z(1),ITEMS)
Z(1) (input) address ofcallentryinGT
ITEMS-(output) a9-word arraywheretheitemsfromthefirsttwowordsofthecall
entryarestored asfollows:
(I)PREV
(2)NEXT
7.2-147 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
(3)NBRARG
(4)CLASS=6
(5)P1
(6)FR(_M
(7)PFR(_M
(8)PNEXT
(9)PSYM
Method.&amp;quot; Theitemsareextracted usingappropriate bitmasks, shifts, andlogical products.
Lanouaqe: C_MPASS
7.2.4.2.16 PACKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topacktheitemscomprising thefirsttwowordsofacallentry intheGeneral
Table (seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKCAL(Z(1),ITEMS)
wherethearguments aredefined asinUNPKCAL (seesection 7.2.4.2.15)
Method: Theitemsarepacked usingshifts andlogical sums. Fieldwidthsizesarenot
checked.
Language: COMPASS
7.2.4.2.17 GETEXT
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toconvert asingle wordanexternal reference intheLINKTable (seesection
7.2.5) whenitissplitbetween twowords.
7.2-148 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINICAGE EDITOR
Callinq Sequence:_
EXTNAME =GETEXT(Z(J))
EXTNAME -(output) external reference
Z(J) (input) address ofthefirst oftwowords where theexternal reference is
stored intheright half ofZ(J) andtheleft half ofZ(J+l)
Method: Using a30-bit mask, shifts, andlogical products, theexternal reference is
constructed from thetwowords.
Lanquaqe: C_MPASS
7.2.4.2.18 STOEXT
Subproqram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tostore anexternal name intheLINK Table (see section 7.2.5) when thename is
split between twowords. ST_EXT istheinverse ofGETEXT (section 7.2.4.2.17)
Calling Sequence:
CALL ST_EXT(Z(J),EXTNAME)
where thearguments aredefined asinGETEXT
Method: Using masks andshifts, EXTNAME issplit into twohalves andstored intheright
half ofZ(J) andleft half ofZ(J+l).
Lanquaqe: C_MPASS
7.2.4.2.19 N_W
Subprogram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Pur_E]_ose: Toreturn thedate andtime ofday
Callinq Sequence:
CALLN_W(A)
A-(output) address ofatwo-word arraywhere
7.2-149 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
A(1)=timeofday(BCD)
A(2)=date
Method: ThetimeofdayisfoundusingtheSC_PECLOCKmacro, andthedateisfoundusing
theDATEmacro.
Language: C_MPASS
7.2.4.2.20 TE×TTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation oftextwords inaTEXTTable (seesection 7.2.5)
Calling Sequence:
CALLTEXTTAB(Z(L_C),Z(1),N,ADDRESS)
Z(LOC) (output) address where thefirstwordofrelocated textwillbestored
Z(1) (input) address offirstwordofTEXTTable.
N (input) number ofwords inTEXTTable
ADDRESS -(input) relocation address (i.e., address ofsubprogram orcommon block to
whichtextrefers)
Method: Seesection 7.2.5foradescription oftheTEXTTableofasubprogram. Thefirst
wordofaTEXTTableisarelocation indicator word. Itisusedtodetermine whatkindof
relocation applies toeachoftheaddress fields intheremaining wordsoftheTEXTTable.
Lanquaqe: COMPASS
7.2.4.2.21 FILLTAB
Subproqram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation ofaddress specified bytheFILLTable
Callinq Sequence:
CALLFILLTAB(Z(ITEXT),Z(JLCTO),Z(J),N,LR)
7.2-150 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z(ITEXT) -(output) address oftheIstword oftext forthecontrol section currently
being constructed
Z(JLCTO) -(input) address oftheOthword oftheLocal Common Table (LCT) (see section
7.2.5)
Z(J) (input) address oftheIstword oftheFILL Table
N -(input) nun_er ofwords intheFILL Table
LR (input) pointer intheLCTtothecontrol section currently being constructed.
Method: Seesection 7.2.5 foradescription oftheFILL Table ofasubprogram. A30-bit
byte isextracted from theFILL Table. Ifitisacontrol byte, therelocated address is
fetched from theLCT. Ifitisadata byte, thetext word containing thereference tobe
relocated isfetched, therelocation isperformed (upper, middle orlower depending onP),
andtherelocated word isstored back inthetext area. This process isrepeated foreach
30-bit byte until theendofthetable isencountered.
Language: COMPASS
7.2.4.2.22 LINKTBI
Subprogram name: LKED320
Type ofroutine: Function
Alternate entry points: LINKTB2
Purpose: LINKTBI returns anexternal name from theLINK Table (see section 7.2.5), and
LINKTB2 performs relocation ofallreferences totheexternal name.
Calling Sequences:
EXTNAME =LINKTBI(Z(IO),J,SWITCH)
LVAR =LINKTB2(ADDRESS,Z(ITEXT),LBC)
EXTNAME
J
SWITCH
Z(IO)
LVAR-(output) name ofexternal reference
-(input/output) current pointer inLINK Table (starting with l)
-(input) current byte pointer (-=high order, +=loworder)
-(input) address ofOthword inLINK Table
(output) logical variable which if.TRUE. means thenext call must beto
LINKTB2 andif.FALSE. means thenext call must betoLINKTBI. Note:
7.2-151 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINKTBI isalways called firstatthebeginning oftheanalysis oftheLINK
Table.
ADDRESS -(input) address oftheexternal namereturned fromlastLINKTBI call.
Z(ITEXT) -(input/output) address offirstwordoftextbeingconstructed.
L_C (input) relative address intextofexternal reference toberelocated.
Method: Seesection 7.2.5foradescription oftheLINKTableofasubprogram. LINKTBI
extracts thenameoftheexternal reference. Ifthebyteswitch isplus,thenameissplit
between twowords. Theaddresses ofthearguments oftheLINKTBI callaresavedandrestored
atentrytoLINKTB2. Actual relocation ofreferences totheexternal nameareperformed by
thealternate entry. Depending ontherelocation bits,thewordlocated atZ(ITEXT +LOC)is
relocated andreturned tomemory. Thebyteswitch, LINKTablepointer, andlogical variable
aresetandreturn ismade.
Lanquaqe: COMPASS
7.2.4.2.23 REPLTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation specified byaREPLTable (seesection 7.2.5) ofasubprogram
Calling Sequence:
CALLREPLTAB(Z(J),Z(ITEXT),N,LR)
Z(J) -(input) address oftheOthwordoftheREPLTable (i.e., theIDword)
Z(ITEXT) -(input/output) address ofthefirstwordoftextbeingconstructed
N (input) number ofwords inREPLTable
LR (input) pointer inLCTtothecontrol section currently beingconstructed.
Method: Seesection 7.2.5foradescription oftheREPLTableofasubprogram. Dataitems
arebuilt, relocated, andstored inthetextareaasafunction oftheparameter intheREPL
Table.
Lanquaqe: C_MPASS
7.2-152 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P104</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_104/</guid>
      <description>
        
        
        &lt;p&gt;7.2.4.2.24 UNPK30DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry point: None
Purpose: Tounpack two30-bit bytes fromaFILLTable (seesection 7.2.5) orLINKTable
(seesection 7.2.5).
Calling Sequence:
CALLUNPK30(ENTRY,ITEMS)
ENTRY -(input) address ofword inFILLorLINKTable tobeunpacked
ITEMS -(output) an8-word array asfollows:
(I) =high-byte control, 0orl
(2) =high-byte relocation bitsor0if(1)=0
(3) =high-byte RLor0if(1)=0
(4) =high-byte LBCorARif(1)=0
(5)-(8)= same forlowbyte
Method: Theitems areunpacked using shifts andlogical products with appropriate masks.
Language: C_MPASS
7.2.4.2.25 UNPKID
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack atable identification word (seesection 7.2.5)
Calling Sequence:
CALL UNPKID(W_RD,ITEMS)
W_RD -(input) IDword tobeunpacked
ITEMS -(output) a4-word array asfollows:
(I)=CN I(2)=WC Seesection 7.2.5
(3)=LR 1(4)=L
7.2-153 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Method: Theitemsareunpacked usingshifts andlogical products withappropriate masks.
Language: COMPASS
7.2.4.2.26 PACKDMP
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toformat thedumpcontrol wordwhich isstored atthebeginning ofeachcontrol
section.
Calling Sequence:
W_RD=PACKDMP(NAME)
WORD-(output) formatted dumpcontrol word
NAME-(input) control section name, leftjustified, zerofilled
Method: Thedumpcontrol wordisconstructed tolookasfollows:
[370000 _] NAME I
59 4241 0
where
_Iforacommon block
BIT=_0otherwise
Lanquage: CBMPASS
7.2.4.2.27 PACKXRF
Subprogram name: LKED350
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TopacktheitemsoftheXREFentry intotheXREFTable (seesection 7.2.2.1.10).
Calling Sequence:
CALLPACKXRF(Z(ZP_INT),ITEMS)
7.2-154 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Z(ZP_INT)-(output)addressoffirstwordof6-wordXREFentryinXREFTable.
ITEMS (input)a19-wordarraycontaining theitemstobepackedintotheXREF
entryasfollows:
(I) Subprogram name
(2) CLASS =2
(3)P1
(4)0(notused)
(5)N Seesection 7.2.2.1.10
(6)PREV
(7)NEXT
(8)-(18) Ci
(19)0(notused)
Method: Theitemsarepacked usingappropriate shifts andlogical sums.
Language: C_MPASS
7.2.4.2.28 UNPKXRF
Subprogram name: LKED350
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack theitems ofanXREF entry intheXREF Table (see section 7.2.2.1.I0).
Calling Sequence:
CALL UNPKXRF(Z(ZP_INT),ITEMS)
where thearguments aredefined asinPACKXRF (see section 7.2.4.2.27)
Method: Using appropriate masks, shifts, andlogical products each ofthefields in
Z(ZPBINT) isextracted andstored intheITEMS array.
Language: C_MPASS
7.2-155 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.29 UNPKEP
Subprogram name: LKED350
J
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsofanentry-point entryintheXREFTable (seesection
7.2.2.1.10).
Callinq Sequence:
CALLUNPKEP(Z(ZPOINT),ITEMS)
Z(ZPOINT) -(input) address ofthefirstwordofa3-word entry-point entryintheXREF
Table
ITEMS (output) anll-word arraywhere theitemsarestored asfollows:
(I)Entrypointname
(2)CLASS=1
(3)P1
(4)0(notused)
(5)A
(6)0(notused) Seesection 7.2.2.1.10
(7)PN
(8)PCI
(9)PCN
(I0)PREV
(II)NEXT
Method: Usingappropriate masks, shifts, andlogical products, eachofthefields isex-
tracted andstored intheITEMSarray.
Language: C_MPASS
7.2-156 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/_600 LINKAGE EDITOR
7.2.4.2.30 HASH
Subprogram name: HASH
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Tocompute thehashnumber ofasymbolic name
Calling Sequence:
HASHNBR =HASH(NAME,NBRENTR)
HASHNBR -(output) hashnumber ofthesymbolic name
NAME -(input) symbolic name, leftjustified, zerofilled.
NBRENTR -(number ofentries (notwords) intable
Method: Thefollowing equation isevaluated:
HASHNBR =M_D(RSHIFTX(NAME,18),NBRENTR)*3+I
where RSHIFTX isdescribed insection 7.2.4.2.11 andM_Disthestandard M_Dfunction ofthe
F_RTRAN language. Itisassumed thatthenumber ofwords pertable entry isthree.
Language: F_RTRAN
7.2.4.3 General Utilities
7.2.4.3.1 XRCARD
Subprogram name: XRCARD
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tointerpret andconvert free-field card images.
Calling Sequence:
CALLXRCARD(_UTBUF,N,INBUF)
_UTBUF -(output) address ofanyarray where theconverted cardimage isstored
N -(input) number ofwords in_UTBUF
INBUF -(input) address ofan20-word array containing thecardimage.
Method: Seesection 3.4.19.
Languaqe: F_RTRAN
7.2-157(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.2 XTRACE
Subproqram name: XLgADER
Type of routine: Subroutine
A1 ternate entry points: None
Purpose: XTRACE when called gives a traceback from itself to the program which called
XTRACE and from that program to the one calling it and so forth. Note following sample
output.
Call ing Sequence:
CALL XTRACE
Method: From the entry point of XTRACE, XTRACE picks up the address + 1 of where the call
to XTRACE was made from. Stored at the address of that call is the address of that program&amp;rsquo;s
entry point - 1. From there a trace can be made to the next called routine in the same
fashion.
Language :
7.2.4.3.3 XDUMP
Subprogram name : XL0ADER
Type of routine: Subroutine
A1 ternate entry points : None
Purpose: XDUMP is called to dump an area of core storage. XDUMP does not actually perform
the dumping. It uses the utility routine CBRDUMP (section 7.2.4.3.6) to actually format the
dump.
Call ing Sequence:
CALL XDUMP(ADD1 ,ADD2,0P)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
ADDI-Variablecontaining firstaddressdesiredindump
ADD2-Variablecontaining lastaddressdesiredindump(Ifitisgreaterthanfield
length,XDUMPwillusethefieldlength-1asthelastaddressindump.
OP-ilif°nlyan°ctaldumpisdesiredifoctalandBCDaredesired
XDUMPdetermines thenumberofwordstobedumped.Itthensetsupacallto
CORDUMPreceivestheaddressofthearrayandMethod:
CORDUMPwhichperformstheactualdumping,
dumpsitintheprescribed format.
Language: COMPASS
7.2.4.3.4 COMPARE
SubproBram name: XLBADER
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: COMPARE compares twowords ofcore memory andreturns acount (0to60)ofthe
number ofbits that donotmatch inthetwowords.
Calling Sequence:
COUNT =COMPARE(W_RDI,W_RD2)
Method: Anlogical difference isperformed andthenumber ofbits intheresult isreturned.
Language: COMPASS
7.2.4.3.5 ABSENT.
Subprogram name: XLOADER
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Thelinkage editor automatically inserts acall toABSENT. forcalls tounsatisfied
externals. ABSENT. will becalled ifthese unsatisfied externals areever called. Then
ABSENT. will call XTRACE toinform theuser whence theunsatisfied external wascalled.
7.2-159 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLABSENT.
Usually called inassembly language orimplicitly viaaRENAME cardinthelinkage
editor control cardlanguage.
Method: ABSENT. callsXTRACE andthenexecutes areturn jumptoEXITtohaltthejob.
Language: COMPASS
7.2.4.3.6 CORDUMP
Subprogram name: CORDUMP
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: CORDUMP performs theactual dumping ofanareaofcore. Normally CORDUMP iscalled
viathedriver XDUMPsinceaFORTRAN program normally cannot define anyareaofcoredirectly.
Calling Sequence:
CALLCORDUMP (BUF,LBUF,OP,NBUFF)
BUF -Arraytobedumped.
LBUF-Length ofthearrayBUF
_IOforoctaldumponly
OP
foroctalandBCDdump.
NBUFF-Variable containing theaddress ofthelastwordofthesegment loader&amp;rsquo;s buffer.
(NBUFF isusedtoeliminate theformatting of10buffer intocontrol sections)
Method: CORDUMP creates anormal dumpofcorestorage giving absolute addresses andcore
storage fourwordsperline. CORDUMP alsolooksforthe&amp;quot;control section IDword&amp;quot;which
starts eachcommon blockorsubprogram andoutputs relative addresses basedonthisword.
Figure 42givesanexample ofacorestorage dump.
Language :FORTRAN
7.2-160 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
CCCCCC
CCCCCC
CC d * NC5\ C
CCCJ CC-NFl 0
CCOC COCGCO
CCCl-CCCGOO coot COCGOO
ECOC CCCOO0 0000 000000
000.3 000000
CC.C.C C C CGCC
FCOO 0OOC.CC 0000 000000
O00D OOOQCC oooc C&lt;del&gt;CCOC 0000 DOOOOO 0000 000000 0000 000000 0000 000000
OCC.0 C&amp;rsquo;CiCOCC.
CCCC CCCCC.C
OOOD 000000
NCNU
m c .PI moo- -00-
CDOU 0000 f 30-
C3000
CCCC
CDOC 0 0 C 0 0000
0302
C30^
0000 0305 E..UCCC-.N
C C L* CC-
8- CNCOGO
00&lt;/del&gt;0C00
c0uoop?
OOClCOOO
OG00000 0000000 CCCCCCC:
EOCCGOC
OCCOCOO
00000E0
CCOO0&amp;quot;O
OOCOCOO 0000000 0000000
&lt;del&gt;OOCCEC
OCO&lt;/del&gt;OCC
OOOGOGO
OOOUCOO . . *&amp;rsquo; * lTl /i 0-
9 C 9 C
5 a 0
5 0 C
9 0 G
9 9 C
9 9 C 4 0 C
9 9 C 5 9 C
9 9 C
9 0 C
9 5 0
9 9 C
9- 9.2
9 * C
9 9 C 9 9
9 5 0 a
4 9
9 c Od * C 4C
9 C *C
9 0 90
*LC OC
9 C &amp;lsquo;40
911- 10 * C xc
*CC Oc
CC C . C&amp;rsquo;C \ C
C. C:
WC&amp;rsquo; C
YCC xc
OOL YC 1-co Uf
7CC uc
NO0 aC
\CC \C 00 0
70 7 0.3 0 co r
CC +
LC- CC
WCC LL&amp;rsquo;C moo ma
Cc&amp;rsquo; 0 J &amp;lsquo;2 _LC 020 00 I-0 IYO
C-XO -0 ;I-0 ZC
OZO 00
UOO UO
VO 0 4 c 9c
9WO 9C
bU0 90
1WO 90
410 *O 5 c 00
QCC QC
920 00 * Irl 9
9w 9
9 &amp;lsquo;U 9 +a t
9 C 4-4
9VlC *CC
*DO *ro 1ao *co 100 900
930 9-c 9 n
&lt;em&gt;.YO 000
9CC QCC
&lt;del&gt;CC eco
9CO 000
400 OOO *co 90.3 * - OCO
O 0 *a0
9 0 400
5 o ecn
9 C a00
9 ? too
5 0 900
B -. . C 0 0 co
&amp;ndash;C C.z, 0 CO
C CC
-, 2 2
irJ il&amp;rsquo; (rl + %r
4 -JS &amp;rsquo; &amp;quot; 45 - WC
7. - -
0 4; O
C CC
It. I1 I1
IP. c , :- c 0 -
CCC
c3 0 e
::I: .tr ,:a:
-.:\I N ram 6
CC C CC C
03 ?, De 3
nrccc 3
CC CCCC
II I1 I1 I1 II It - -1 -3 -1 -
LUIUI&amp;quot;.WLJ xolaaa
dJCT-&amp;lsquo;S
r-CC c&amp;ndash; cccc- - &amp;ndash; n&amp;rsquo;N&amp;amp; \ c. c 0&amp;rsquo;- =
CCCCCC
11 11 I1 1) I1 11
WY V VlWY &lt;del&gt;zmrms: . a&lt;/del&gt;aua 3 J-d .r n,o .ssc CCCCCC
c20=c3
c=cccT.
CCPCCC
11 II II I1 I1 I1
IJ_LJ_f-l-&lt;/del&gt;
IA WLLIWWrl
rZlctK.23
r P- 5 -.r nilrrre&lt;/em&gt;
&amp;lt;- 7 o==- n 1 h ~-1
C c C..&amp;gt;c;
CCCCCF
I1 &amp;rsquo; I1 11 11 11 I1
(nlnirr vim DTxrs,Jj u=?&amp;lt;.aua&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C d&amp;rsquo;.J r -N h&amp;rsquo; &amp;hellip;&amp;mdash; 0 ?C 0 &amp;ldquo;roc CCCC
I1 11 11 It
J JJ I
IUWY)W
3 ZD n&amp;rsquo;
r -I n
QUY a J QJ 0
LPULTJ, l mm m C CC C
IIUUU C0r)OC
ZCOCC
COO00
UO 0 C 0 0000 * 00 c C
*COO0
80000
80000
*OUOO
*OCOO
*CCCP *oooo * * * *
*,I 4dCO * Lnme -
*OCONN
*OD000
*OClOhO
8CcCCe
*OOUCO * OC000 * OC 0 CO *&amp;ldquo;0000 *oocoo *ooooa * OC COO
*OO?CIO
*occ.c,o
4C&amp;quot;c.OC
. *I JC oc-dW
CC C C C
OCCCD
CCCCC
CCCCC
I1 I1 ,I 11 11
_12-dd
Ul0Jvh.u
XtTXXT
c PC ~m
-.-nCLc
&amp;lsquo;Wr,,-IJ. liJl&amp;rdquo;&amp;lsquo;Lr J
mmmFm
C.. r
11 I, I, I, It
:%:I$: 4.14 414 Q *C c r
*C Ch
*C CC
*CL&amp;lt;
*C Er
*ECC *CL-
*OC9
*CCC
*CCC
4.-rd
*CIC * &amp;rsquo; WC
OF un
8 ns I- R&amp;rsquo;
8NCO
Od CC
*CCC or J-
ORCC * 0 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l C CC *CCCR
0 c C CC * c C oa
O~CCC
*PCCC * c om
*.-CCd
OC CCC
C C CC
XQ n nd
C cmc
V)CIn&amp;rdquo;-C
unmmn .Innrn
cc,nICc,
r C d CC
LLlC CiCC \rFd.- o n. TO 7
?
CCU&amp;rsquo;CC
(LC CCC
VO CC om CO &lt;del&gt;cm cc
CCC.CC
(LOCOW
LO400
ZC C CU CS C CC
v&#39;3rtn.t ^ rJ)
ON cmm
ON nmm * m n, n,r
d O ONO * 0 OJ C o c C.C&lt;/del&gt; J - CU I/ 0 ONC * * *&lt;/li&gt;
&lt;li&gt;ooc-mo
QC CCC
*CCRiO
*OCP,O Itocsu
*GOCO * 0 OW0
Q 0 =NO 0.-CCC
OZCCC *&amp;ndash;*u * C- t CCI * I4 SCU r-?rrzlm
O NCINR
4 N 0 ON * t CC1 b c c oc &lt;em&gt;&amp;rsquo;% c y-? IN C CIU
-&lt;/em&gt;&amp;lt; 1
C C l&amp;hellip;
C CCF 0 0 00
CCCC
C C cr
It 11 I1 I1
J -&amp;rsquo; -I -
u&amp;rsquo; &amp;lsquo;A&amp;rsquo; l&amp;quot; LA x Zl l
I
,c 1. .r &amp;lt;,
I I Td I m ICIC,
.&amp;lt;&amp;ndash;,
la c a. u, -1 *. 1 C- J r.
OC.- 4-8 R&lt;del&gt;PI
CCCCCCC
C3C 50 no
OCC C C. C C
C&lt;/del&gt;CCCCC
I1 Il 11 II I1 II W
J J -&amp;rsquo; _I -&amp;amp; _I _I
WL&amp;rsquo;WLIWAJW zrmzzza&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;3-:4c&lt;em&gt;c
CCCC-..-R1 h.5 cccc or I .r&amp;lt; sa ,rr.m 9&amp;quot; (rm . CiCCT
I, I# It II I1 I1 I1
V~u-(Fu-u-InV srrnma mm 44 4 &amp;lt;&lt;/em&gt;.a*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7.2.4.3.7 XEOFDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: XEOP
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anend-of-file onastorage device (tape ordisk).
Calling Sequence:
CALL XEOF(FET)
FET-Address oftheFET
Method: XE_F executes theSCOPE WRITEF macro viatheSC_PE routine CPCtowrite theend-of-
file.
Language: COMPASS
7.2.4.3.8 XOPEN
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XOPEN generates theFile Environment Table (FET) forafile based ondata inthe
calling sequence.
Callin 9Sequence:
CALLXOPEN(FET,LFET,INDEX,LINDEX,OP)
FET -(output) arraywheretheFETistobebuilt. (First wordofFETshould have
filenameleftadjusted andzerofilled.)
LFET -(input) length ofFETplusthelength ofthecircular buffer
INDEX -Variable arraywhererelative trackaddresses fordirect access records willbe
stored.
LINDEX -Length ofINDEX. (IfO,thennoindexisimplied andfilewillbesequential.)
7.2-163 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0Opentoread/rewind
1Opentoread/no rewind
2Opentowrite/rewind
OP-3Opentowrite/no rewind
4Openfordirect access-alter/rewind (seeSCOPEmanual)
5Openfordirect access-alter/no rewind (seeSCOPEmanual)
-IConstruct FETbutdonotopenfile.
Method: XOPENbuilds theFETasdescribed intheSCOPE3.1reference manual, chapter 3.The
FETlength ismade15words long,andthebalance ofthespacesenttoXOPENandusedasthe
circular buffer. Thecircular buffer isneverusedifonlyREADX(section 7.2.4.3.15) and
WRITEX (section 7.2.4.3.14) aretobeused,andinthatcaseLFETmaybesetto30oncalls
toXOPEN.
Language: C_MPASS
7.2.4.3.9 XCLOSE
Subprogram name: XIORTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XCLOSE closes afile butdoes notreturn ittothesystem.
Calling Sequence:
CALLXCLOSE(FET,OP)
FET-Address oftheFET
liClOse/no rewindOP-Close/rewind
Close/unload
Method: XCLOSE executes theSCOPE CLOSE macro which performs differently onthemany
versions ofSCOPE 3inthefield. Consult with your systems programmer todetermine exact
results foryour installation. Refer also totheSCOPE 3.1reference manual, chapter 3.
Language: COMPASS
7.2-164 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.3.10 XEVICT
Subproqram name:XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: XEVICT releases allspace occupied byafileonthedisk.
ispreserved.
Calling Sequence:
CALLXEVICT(FET)
FET-Address oftheFET
Method: XEVICT executes theSC_PE 3EVICT macro.
LanBua_e: C_MPASSThelogical filename
7.2.4.3.11 REINDX
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: REINDX redefines theindex pointer field fortheFET.
Calling Sequence:
CALLREINDX(FET,INDEX,LINDEX)
FET -Address oftheFET
INDEX -Array where newindex istobedefined
LINDEX -Length ofINDEX
Method: REINDX places theindex address andindex length inword 8oftheFETinthe
following format
59 35 17 0
FET(8) =l [LINDEX [ADD(INDEX) 1
where ADD=address
Language: C_MPASS
7.2-165 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.12 XWRITE
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartwriting, continue writing, orcomplete writing alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXWRITE(FET,RECORD,BUF,LBUF,FLAG)
FET -Arraywhere FETisstored.
RECORD -0ifsequential writing istobeginorcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhenstarting towrite therecord
BUF -Arrayofinformation tobewritten
LBUF -Length ofBUF
FLAG _IOifrecord isnottobecompleted.
(iifrecord istobecompleted withend-of-record mark.
Method: XWRITE stores theaddress ofBUFintheFET.Itthenbegins orcontinues writing
therecord either sequentially using 10WRITE ordirect access using I_RW(bothareSCOPE
utilities). IfFLAGisnonzero, therecord isthencompleted sequentially usingtheSCOPE
WRITER macro. Alldataareprocessed through thecircular buffer.
Language: C_MPASS
7.2.4.3.13 XREAD
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartreading, continue reading, orcomplete reading alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXREAD(FET,REC@RD,BUF,LBUF,FLAG,COUNT)
7.2-166 (611171)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET Array where FETforfile isstored.
RECORD -0ifsequential reading istobegin orcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhen starting toreadtherecord
BUF -Array where data readaretobeplaced
LBUF -Length ofBUF
&lt;em&gt;iOtoreadLBUFwords ortoreadtotheendofrecord, which everoccurs first.FLAG
ifuptoLBUFwords aretoberead andpositioning tonextrecord istooccur.
-2onreturn ifend-of-file wasencountered.
&lt;em&gt;)-Ionreturn ifendofrecord wasnothitandLBUFwords were read.COUNT
I_a&lt;/em&gt;°&lt;/em&gt;_ __&lt;em&gt;ie_o&lt;/em&gt; _____________&lt;em&gt;r_oi_st_r_UrI_p&lt;/em&gt;.°f words thatwere readifanendofrecord
Method: XREAD defines where BUFislocated intheFET. Itthenbegins orcontinues reading
therecord either sequentially using 10READ orrandomly using IORR(both areSCOPE utilites).
IfFLAGisnonzero andtheendofrecord wasnotencountered, arecord isskipped tobypass
anyremaining data. This isaccomplished byusing theSC_PE SKIPF macro.
Language: COMPASS
7.2.4.3.14 WRITEX
Subprogram name: XIORTNS
T_zp_e ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anentire logical record either sequentially orrandomly without using
thecircular buffer.
Calling Sequence:
Identical toXWRITE except FLAGisnotinterpreted (seesection 7.2.4.3.12)
Method: Thepointers FIRST, IN,GUT, andLIMIT aresettoreflect theactual output buffer
BUF,which inturnbecomes thecircular buffer. Adirect callismade tothePProutine CIO.
Language: COMPASS
7.2-167 (6/1/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IWASTPJ_N SUPPORT PROGPJ_MS
7.2.4.3.15 READX
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Pu__ur_Dose: Toreadanentire logical reocrd either sequentially orrandomly without usingthe
circular buffer.
Calling Sequence:
Identical toXREADexcept FLAGisnotinterpreted (seesection 7.2.4.3.13).
Method: Thepointers FIRST, IN,OUT,andLIMITaresettoreflect theactual inputbuffer
BUF,which inturnbecomes thecircular buffer. Adirect callismadetothePProutine C10.
Language: COMPASS
7.2.4.3.16 XREWIND
Subprogram name: XIORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Torewind adiskortapefileandplace itatthebeginning ofinformation.
Calling Sequence:
CALLXREWIND(FET)
FET-Address oftheFET
Method: XREWIND executes theSCOPEREWIND macro.
Language: COMPASS
7.2.4.3.17 XBKREC
Subproqram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: XBKREC backspaces atapeordiskfileonelogical record.
Callinq Sequence:
CALLXBKREC(FET)
7.2-168 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET-Address oftheFET
Method: XBKREC executes theSCBPE BKSPmacro.
Languaqe: C_MPASS
7.2.4.3.18 XFRDREC
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afileforward tothebeginning ofthenextlogical record crossing only
oneend-of-record mark.
Callin 9Sequence:
CALLXFRDREC(FET)
FET-Address oftheFET
Method: XFRDREC executes theSC_PE SKIPF macro.
Language: C_MPASS
7.2.4.3.19 XBKPREC
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afilebackwards onephysical record.
Calling Sequence:
CALLXBKPREC(FET)
FET-Address oftheFET
Method: XBKPREC executes theSC_PE BKSPHRU macro.
Language: C_MPASS
7.2-169 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.20 XREQST
Subproqram name: XI_RTNS
_ypeofroutine: Subroutine
Purpose: Toexecute thestandard SC_PE request macro.
Callinq Sequence:
CALL XREQST(FET,PYQX,DC,DT)
FET -Address oftheFET
PYQX1DC
DTSeeSCBPE 3.1reference manual, section 3.5
Method: XREQST executes theSCOPE REQUEST macro. Thismaybeinstallation dependent.
Lanquaqe; C_MPASS
7.2.4.3.21 ANDF,_RF,C_MPLF, RSHIFT, LSHIFT
Subproqram name: FtAPFNS
Typeofroutines: AllInteger Functions.
Purpose: Toperform alogical and,or,complement, right shift, orleftshift.
Calling Sequence:
RESULT =ANDF(WORDI,WORD2)
RESULT =ORF(W@RDI,WORD2)
RESULT =COMPLF(WBRDI)
RESULT =RSHIFT(WORDI,COUNT)
RESULT =LSHIFT(W_RDI,COUNT)
where WBRDI andWBRD2 arewords being operated onandareunchanged after theexecution.
COUNT isthenumber ofbits W_RDI istobeshifted right orleft.
InRSHIFT andLSHIFT bits shifted outside ofthewordboundary arelostwhile theothers
arezerofilled.
Method: Direct assembly language logical instructions areused.
Lanquage: COMPASS
7.2-170 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.3.22 XFETCH,XSTORE
Subprogram name: MAPFNS
Typeofroutines: Subroutines
Alternate entry points: None
Purpose: Tofetch (store) anarray ofdatafrom (to)anywhere inthejob&amp;rsquo;s core.
Calling Sequence:
CALLXSTORE(BUF,LBUF,LOCADD)
CALLXFETCH(BUF,LBUF,LOCADD)
BUF -Receiving array (XFETCH); transmitting array (XSTORE)
LBUF -Length ofBUF
LOCADD -Variable containing theaddress fromwhich dataisfetched (XFETCH); oraddress
intowhich data isstored (XSTORE)
Method: Adirect moveofdataismade insuchawaythatitdoesnotmatter ifthearray
fromwhich dataaremoved overlaps thearray towhich thedataaremoved.
Language: COMPASS
7.2.4.3.23 LWORDS
Subprogram name: MAPFNS
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine howmanywords ofcorethere arefromtheargument tothefield
length
Callin 9Sequence:
RESULT =LWORDS(ARG)
ARG-Variable fromwhich thenunfoer ofwords tothefield length iscomputed.
Method: Thefield length, stored inlocation 768ofthejob&amp;rsquo;s core, isusedtomake the
computation.
7.2-171(6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.3.24 CBRWDSNASTRANSUPPORTPROGRAMS
Subprogram name: MAPFNS
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine aninclusive distance inwords between twoarguments incore.
Calling Sequence:
RESULT =CORWDS(ARGI,ARG2)
ARGI andARG2arethetwoarguments forwhich theinclusive difference isdesired.
Method: RESULT =Absolute value ofthedifferences between thetwoaddresses plusone.
Language: CBMPASS
7.2.4.3.25 XJUMP
Subproqram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tomakeanabsolute jumptocodeanywhere incore.
Calling Sequence:
CALLXJUMP(L_CAT)
LOCAT =Variable where anabsolute location isstored.
Method: Ajumpisexecuted towhatever address isinthelocation LBCAT.
Lanq_aqe: CBMPASS
7.2.4.3.26 ZAP
Subprogram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tozerocorefromwhatever location isspecified incorelocation lOl8tothefield
length asspecified inlocation 638.
Calling Sequence:
CALLZAP
7.2-172 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P105</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_105/</guid>
      <description>
        
        
        &lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Method:Storezerosinalllocationsdesired.
Language: C_MPASS
7.2.4.3.27 FIELDLN
Subprogram name:MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Pu__ose: Toobtain thefield length ofthejob,ortochange thefield length andtostore
thefield length inlocations 638and768.
Calling Sequence:
CALLFIELDLN(LENGTH)
LENGTH =0iffield length istobereturned inLENGTH.
=Value &amp;gt;Oifthefield length istobechanged. Thefield length ischanged
toLENGTH.
Method: TheSC_PE memory macro (MEM) isexecuted.
Language: CIaMPASS
7.2.4.3.28 LINK20.
Subprogram name:MAPFNS
Type ofroutine: Subroutine
Alternate entry point: None
Purpose: LINK20. makes acalltoLink20.
when called canresult inaswitch toLink20.
Calling Sequence:
CALLLINK20.
Method: AcalltoLink20ismade directly.
Language: C_MPASSThrough theuseofaRENAME, aparticular routine
(e.g., RENAME PEXIT=LINK20.)
7.2.4.3.29 LINKERR
Subprogram name: LINKERR
Type ofroutine: Subroutine
7.2-173 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Purpose: Tooutput message whencalled bysubroutine LINKinXL{&lt;em&gt;ADER.
Calling Sequence:
CALLLINKERR(LINK,ERROR)
LINK-Alinknumber
ERROR-Number ofanerrormessage
Method: Writes theerrormessage specified byERR&lt;/em&gt;]R.
Language: F_RTRAN
7.2.4.4 MISCELLANEOUS
7.2.4.4.1 LKED900
Subprogram name: LKED900
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabnormally terminate execution ofthelinkage editor withanerrormessage in
caseoftableoverflow.
Calling Sequence:
CALLLKED9OO(C_DE)
C_DE-(input) number whichdefines thetypeofoverflow whichhasoccurred.
Method: Afatalerrormessage isprinted andthelinkage editor stops.
Language: F_RTRAN
7.2.4.4.2 LKED990
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabortthelinkage editor intheeventanunexpected condition (logic error) is
encountered.
Calling Sequence:
CALLLKED990
7.2-174 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: LKED990 passes theaddress from which thecall occurs toLKED995 which prints the
fatal message.
Languaqe: C_MPASS
7.2.4.4.3 LKED995
Subprogram name: LKED995
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toabort thelinkage editor abnormally
Callinq Sequence:
CALL LKEDg95(LBC)
L_C-(input) location atwhich logic error wasdetected.
Method: LKED995 prints amessage indicating that alogic error hasbeen detected andthe
location oftheerror. Thecontents ofthelinkage editor tables arethen printed byLKED999.
Finally, amode error isforced sothat, iftheuser hasincluded aDMPcontrol card, a
storage dump will betaken.
Lanquage: F_RTRAN
7.2-175 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.5 Object DeckFormat
Theobject deckofasubprogram asitisoutput fromtheassembler orthecompiler comprises
onelogical record. Eachlogical record ismadeupofanindefinite number oftables. Eachtable
isproceeded byanidentification wordwhichhastheformat:
IcNIwcl,Rl,I59 5347 35 26 17 0
where
CN=codenumber identifying thetypeoftable
WC=Wordcountofthetableexcluding identification word
LR=Codedefining themethod ofrelocation oftherelative address L
L=Relative address, 18bitsdefined differently foreachtypeoftable
7.2.5.1 PIDLTable
TheProgram Identification andLength (PIDL) Tablecontains thesubprogram identification
andnamesofeachofthecommon blocks referenced bythesubprogram.
identification word
CN:348
LR=ignored
L=0
word 1
59name ofsubprogram PLJ
17 0
PL=length ofsubprogram
7.2-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;words 2-WCDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
nameofcommon block BL
59 17 0
where
BL=length ofcommon block
IfWC=l,noreferences tocommon blocks appear inthesubprogram. Thelinkage editor isprepared
toprocess onlyonePIDLtable inanobject deck. Additional PIDLtables areignored with awarn-
ingmessage. Thelistofcommon block names iscalled theLocal Common Table (LCT). Since
relocation ofaddresses relative tocommon blocks isdesignated bypositions intheLCT,theorder
ofcommon block names issignificant.
7.2.5.2 ENTRTable
TheENTRy Point Table (ENTR Table) contains alistofallnamed entry points tothesub-
program andtoassociated common blocks (note: anentry point toacommon block isignored bythe
linkage editor andawarning message isissued). TheENTRTable must immediately follow thePIDL
Table.
identification word
CN=368
LR=ignored
L=ignored
words I-WC
Eachentry intheENTRtable consists oftwowords. Thefirst wordcontains thenameofthe
entry point. Thesecond wordcontains therelative address oftheentry point anditsmethod
ofrelocation.
Istword I entry point name
59 17J0
7.2-177(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
2ndword IRLILOC
59 26 17
RL=codedefining therelocation specified byL_C:
0=absolute (therefore theTableisignored bythelinkage editor)
1=relative tosubprogram origin
3-778=relative tocommon blockM,whereMisinposition RL-2oftheLCT
(ignored bylinkage editor)
LOC=relative address oftheentrypoint
7.2.5.3 TEXTTable
Textanddatatables (TEXTtables) contain datacomprising thesubprogram andinformation
necessary forrelocating thedata. TheTEXTTableconsists ofanorigin forthedata,thedata
itself, andindicators describing relocation (ifany)ofthethreepossible locations inadata
wordwhichmayhaverelative storage addresses.
numbers intheobject deck.
identification word
CN=408
WCsatisfies: 2_WC_208
LRt!_778TEXTTables mayappear inanyorderandany
=absolute (therefore theTableisignored bythelinkage editor)
=relative tosubprogram origin
=relative tocommon blockM,whereMisintheposition LR-2ofLCT(seesection
7.2.5.1)
L=relative address offirstwordofdata
Firstword
Thisrelocation wordconsists ofaseries upto15of4-bitbytesdescribing therelocation
ofeachofthethreepossible address references ina60-bit dataword. Thefirstbyte
(bits56-59) describes therelocation forthedatawordinthesecond wordoftheTEXTTable,
etc.Thenumber ofrelevant bytesanddatawords isdetermined byWC.Relocation isrelative
toprogram origin orthecomplement ofprogram origin (negative relocation). Thevalueand
relocation foreachbytefollows:
7.2-178 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O00x
lOxx
llxx
OlOx
Ollx
IxlO
Ixll
0010
0011norelocation
upperaddress, program relocation
upperaddress, negative relocation
middle address, program relocation
middle address, negative relocation
loweraddress, program relocation
loweraddress, negative relocation
same asIxlO
same asIxll
words2through WC
Datawords arerelocated consecutively relative toL.Alladdresses arerelocated relative
tosubprogram origin, never relative toacommon block. Relocation ofaddresses relative to
common blocks isaccomplished through FILLTables (seesection 7.2.5.4).
7.2.5.4 FILLTable
TheFILL Table contains information torelocate previously defined address fields. References
tocommon blocks arerelocated through this table.
identification word
CN=428
LR=0
L=0
words 1through WC
AllFILLTablewordsarepartitioned intosetsofcontiguous 30-bit bytes. Eachsetis
headed byonecontrol byteandfollowed byanarbitrary number ofdatabytes. Thelast
databytemaybezero. Thecontrol bytecontains information abouteachofthesubsequent
databytesuntilanother control byteisencountered.
control byte
Ioi IARI29 28 8 0
7.2-179 (611171 )&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ARistherelocation codepertaining tothesucceeding databytes. ARmayassume
0=absolute relocation (i.e., norelocation takesplace)
1=program relocation
2=negative relocation
3-778=relative tocommon blockMwhereMisinposition AR-2ofLCT(seesection
7.2.5.1)
databyte
111PJRLJL°c292826 17 0
P=position within wordofaddress
I0=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C.RLhasthesame
rangeasAR(seeabove) except RL_2
LBC=relative address ofthedatawordtobemodified. Thecontents oftheaddress field
position (F)atlocation L_Crelative toRLisaddedtotheorigin asspecified byAR
inthecontrol byte.
7.2.5.5 LINKTable
TheLINKTablespecifies external references within thesubprogram.
external symbol mustappear asanentry intheLINKTable.
identification word
CN=448
LR=ignored
L:0Eachreference toan
7.2-180 (6/1/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
words lthrou9 hWC
Allremaining words arepartitioned intosets, each consisting ofone60-bit nameandaseries
ofcontiguous 30-bit databytes indicating address positions which refer totheexternal
s_nnbol described inthe60-bit name. Itispossible forthe60-bit nametobesplit between
twoco_uter words. Names ofexternal s_nnbols must begin with acharacter forwhich the
display coderepresentation hasthehighorder bitequal tozero.
nameword
59name ofexternal s_nBbol
databyte
I IPIRL I29 28 26 17 0
P=position within theword ofthereference totheexternal s_nnbol
lO=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C
0 =absolute (ignored bylinkage editor)
l =program relocation
3-778 =relative tocommon block M,where Misinposition RL-2oftheLCT.
L_C=relative address oftheword containing theexternal symbol
7.2.5.6 REPLTable
T&amp;rsquo;_eREPLTable provides anefficient means forrepetition ofablock ofdata.
identification word
CN=438
LR=ignored
7.2-181 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
L=ignored
words1through WC
Eachentry inthetableconsists oftwowords intheformat
C B
59 41 0SR S
IDR D
26 ]7
S=initial relative address ofsource data
SR=codefortherelocation oftheaddress specified byS
0=absolute (ignored bylinkage editor)
1=program relocation
3-778=relocation relative tocommon blockM,where Misinposition SR-2ofLCT
(seesection 7.2.5.1)
D=initial relative address ofdestination ofdata
DR=codefortherelocation oftheaddress specified byD;samerangeofvalueasSR
B=sizeofdatablockinwords
C=number oftimesd_tablock istoberepeated;
I=increment tobeaddedtoDbefore eachdatablock isrepeated; first repetition of
blockisatD,second atD+I,etc.
IfC=O,Cisinterpreted as1
IfB=O,Bisinterpreted as1
IfI=O,Iisinterpreted asB
IfD=O,Disinterpreted asS+B
7.2-182 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.6 Principal Linkage Editor Variables
Table 3describes principal linkage editor variables incommon blocks LKEDCxx, where
Ol_xx_07. Thefollowing conventions apply:
I. Inthedescription column, apointer, ifnotdefined further, isassumed topoint to
theIstword rather theOthword ofatable
2. Twenty character symbols inthedefault value column imply octal representation
3. Theletter &amp;ldquo;b&amp;quot;inthedefault value column implies ablank character
4. Tencharacter symbols inthedefault value column imply character string representations.
Note these areleft-adjusted intheword andzero-filled.
5. Integers (less than tendigits) inthedefault value column aredecimal numbers.
6. Ablank inthedefault value column implies theentry hasnodefault value.
7.2-183 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0
0
0
C_
OJ 0
%oO
O
O
-_ O -Q r_ O OOO -Q
°o__oooo O OOO r_
4- O r_ .Q I&amp;mdash; OZ00 .Z_
O -Q r-_ &lt;em&gt;J &lt;em&gt;.D- n
O .&lt;em&gt;D -&lt;/em&gt; &amp;hellip;I mm&lt;/em&gt;&amp;ndash;&lt;/em&gt;_ r_p,,.
D,-.
D&amp;mdash;
r&amp;ndash;.
cO
p,..
D-,-
p,,.O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O _ &lt;em&gt;O O
O O O OO O
O O O OO O
O O O OO O
OOO OOO OOOO
n
to
O
L&lt;/em&gt;
e-
&amp;ldquo;Z
0
c-
O
;5
-&lt;em&gt;-
gI&amp;mdash;
0 0
&amp;ldquo;&lt;em&gt;b
e-o
r,-
f,-&amp;hellip;..1
Z
.&lt;em&gt;1
c-
O
co
&lt;em&gt;.&lt;/em&gt; to _ &lt;em&gt;.-0
4=, to .&lt;/em&gt;.1 z3
f,- OJ 4-.to
CD _ .Z&lt;/em&gt; _ EO
J&lt;/em&gt; .&lt;em&gt;z &lt;em&gt;O _ °&lt;/em&gt;
E &lt;em&gt;-J
.&lt;/em&gt; &lt;em&gt;-
&amp;ldquo;10 &amp;ldquo;0 0
.&lt;/em&gt;- _ ..I-J
tO (J
&amp;ldquo;0 &amp;ldquo;&lt;em&gt;0 &lt;em&gt;&amp;rsquo;-
..c= 0 4J
0 0 .-&lt;/em&gt;
4&lt;/em&gt; 4- &lt;em&gt;- 0
&amp;lsquo;&lt;/em&gt; T-o_to
-0
&lt;em&gt;.; 5,- O&lt;/em&gt;-I&amp;mdash; &lt;em&gt;-&amp;rsquo;:=&lt;/em&gt; O
O O(-J &amp;quot;
&lt;em&gt;J -&lt;/em&gt; _ -I&lt;/em&gt;(/)&lt;/em&gt;•
&lt;em&gt;. &lt;em&gt;J _ .&lt;/em&gt;.&lt;/em&gt; O0J
to
04- 0
0_-
&lt;em&gt;o0
e&amp;ndash;
0 _
_ 0
4-
e- E
•I&lt;/em&gt; to
e.- I_
0_ &lt;em&gt;&amp;rsquo;&lt;/em&gt;
•._ to
4&amp;ndash; _
0&amp;quot;0 tO
Q; S-E &lt;em&gt;-0 r&lt;/em&gt;-_ E(-_ E(-J 0to to
h- l&amp;ndash;
r_&amp;rdquo; p&amp;ndash;
l- X
Z uJ
rO
.&lt;em&gt;0
to _
I&amp;ndash; &lt;em&gt;4-0_J
to
to
r
&lt;em&gt;J
to
r&lt;/em&gt;
O O OO O
O&lt;/em&gt; v&amp;rsquo; _ &amp;lsquo;&lt;/em&gt; &amp;lsquo;_ _._O O O O O Oto
-I-J
0
(lJ
&amp;ldquo;10
Ill
&lt;em&gt;-z (.&lt;em&gt;0 I&amp;mdash; .=&lt;/em&gt; x/
to .-&lt;/em&gt; 0.3 _.l ._I _.I&amp;ndash; &lt;em&gt;.- -t-
oO z ___ Z N &amp;gt;&amp;rsquo;-
r-&lt;/em&gt; (=&amp;lsquo;3 _ _ LO _to
0
,.J
7.2-184 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O0 r&amp;ndash;
O0
O00
0
0
0
0
0
0
0
0
0r_
e_
i I&amp;ndash;
&amp;ldquo;Z
S.
0
0_
lad 0
._
e.- u
.
e-
¢L
e,h
%-
o
c-
o
oe-
uIlJ
I&amp;mdash;
I&amp;ndash;
x
I&amp;ndash;_ 0_
x e-
_ &lt;em&gt;J
o
L 0
,.l.a
-,i (,,-
o
S- e-&lt;/em&gt;
U _
0 r
&amp;ldquo;_ E0
&lt;em&gt;j e&amp;quot;I&amp;rdquo;-
Z
$..
0
&lt;em&gt;I; .-&lt;/em&gt; 4-&amp;gt;.&lt;/em&gt; r_G; .r-)
W- Q; &amp;ldquo;I,&amp;rsquo;- G;I&amp;mdash; e-cO 0
(&amp;rdquo; _ &amp;ldquo;13 0 &amp;ldquo;10 -_ &lt;em&gt;-
_ _ &lt;em&gt;)&lt;/em&gt; _ e=
4a .)a I.. &lt;em&gt;- 0 &amp;ldquo;,&amp;ndash;
03 .,(30
,.&amp;ndash; Zu,l..
,r&lt;/em&gt; 0
I&amp;ndash;
{-
0-&lt;/em&gt;
O_
{,_)e,mooooo__ooF:,oF:,&lt;strong&gt;go_o
3®_oE
•&lt;/strong&gt;&amp;lsquo;o
f,-z
c0
7.2-185 (6/1/71 1&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
111
%&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0
0
np L_
L_O0
r&amp;rsquo;_ .&lt;em&gt;j0 0
0 0
0 0
n&lt;/em&gt; 0
.-J O I.iJ
z z .,-v.
d &lt;em&gt;&lt;em&gt;1
r&lt;/em&gt;
ZU,-
-&lt;/em&gt; O
I&amp;ndash;
E_ .,m &lt;em&gt;,
E0 &amp;ldquo;&amp;rsquo; &amp;lsquo;&amp;rdquo;
O&lt;/em&gt; &lt;em&gt;/ v
(&lt;/em&gt;¢-m &lt;em&gt;-I .JooooS
.-I J .&amp;ndash;I J .&amp;ndash;I JO O O O O O
ILl _ IAJ I.&lt;/em&gt; ILl &amp;ldquo;&amp;rsquo;
J ,.J ,&amp;ndash;I J J JO O O O O O
L_J
v_____v.d .&amp;ndash;I .&amp;ndash;I .&amp;ndash;I &amp;ndash;J J
_
z
,_ -r 0
&lt;em&gt;,0 6,3r,. Z CD 0I&lt;/em&gt; ._1
z I&amp;ndash;
I&amp;ndash; _ O
I&amp;ndash;
_-D J &amp;hellip;.I .J J_3
J O O N
Z Z Z Z Z O&#39;3
7.2-186 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
,3
4&amp;ndash;
r-,
.mc&amp;ndash;
&amp;quot; E
u&amp;rsquo;} (_
G.} .._
m:_ u&amp;rsquo;)
&amp;ldquo;[- __
&lt;em&gt;:&lt;/em&gt; 0
°_
K- &amp;ldquo;0
0 (IJ
•_ Qj
I.&lt;em&gt;.; 0 to
_ ._
e- U e-
I1J
&amp;ldquo;G_ &amp;gt;
&lt;em&gt;- a,I
O _
O
c-
&amp;ldquo;ZU
IlJOOOOOOOOOOOO
OOOOOOOOOOOO
OOOOOOOOOO_O
&lt;em&gt;OO_OOOOOO_O
&lt;em&gt;OZ_O_O_OOZO
DO_O_O_OO&lt;/em&gt;
&lt;em&gt;O_O_O_O&lt;/em&gt;
ZZ&lt;/em&gt;&amp;raquo;ZZ_Z_ZZ0 0000000
0 0000000
0000000
0000_00
0_0_00
0__0
0&lt;/em&gt;_
Z __
&lt;em&gt;Z_0
0
0
0
0
0
0
0
0
.Q 0
r&lt;/em&gt; 0
&lt;em&gt;t&lt;/em&gt; 0
r_ 0
.Q • 0
r_ Ld 0
X__ 0
-C_ r_ 0
r_ I&amp;mdash; 0
0 eO
4J
t-
O
0
l&amp;ndash;
ILl
z
.&lt;em&gt;J
¢-
4&lt;/em&gt;
c-
O
I-
O
z%
&lt;em&gt;..I _
ill r-
E u.&lt;/em&gt;•
.._ -&lt;em&gt;4-&lt;/em&gt;_ O
igo4-
_ t
K- oO a_
.%- K.
l.i_ _ -o O-
D E &lt;em&gt;- 0J
rr&lt;/em&gt; O &lt;em&gt;-
_ O f,..-
m O O
&lt;em&gt;- K. V;.&lt;/em&gt; -QO
K.
0
4-a
v,
•&lt;/em&gt; I&amp;mdash;
%T.
_ t..-
&lt;em&gt;- 4-&lt;/em&gt; O _- &lt;em&gt;C)- c&amp;rdquo;&lt;em&gt;n r-
E&lt;/em&gt;
(I)
.ZD O
I&amp;ndash; CO
00
e- O
O&amp;ndash;&lt;/em&gt; (.-)
_o__h,
(..)r__jeo or)
0 0
,,l l&lt;/em&gt;l
..J ..JOd _- COCO r&amp;ndash; (&lt;em&gt;r)
O O O O O O O
-.I &amp;ldquo;,,I -./ -&lt;/em&gt; -,I &amp;ldquo;./ &amp;ldquo;-,&amp;rdquo;
..J -J &lt;em&gt;-I .-I .-I -J &amp;ndash;I
Q)
&lt;em&gt;a&lt;/em&gt;
cOE
T__tO &amp;ldquo;-/&amp;gt;-
I&amp;mdash; W
,,, I.&lt;/em&gt;
-lJ -1J,, I&amp;ndash; ,-w
z I&amp;ndash; _ l&amp;ndash;
._J _J _&amp;rdquo; _&amp;ndash; Z m,- Z
7.2-187 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
CZJ
O00
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0 0 0
000 0
T.
S-
O
&lt;em&gt;J
.&lt;/em&gt;-
4-
0
C
0
&amp;ldquo;5
U
v &lt;em&gt;!,.,-
Or) r&amp;rsquo;&lt;em&gt;0
&lt;em&gt;zu,-0
I&amp;mdash;
r- 0
0-&lt;/em&gt; _
v0 0 0 0 0 0
___ ___ ___ _ _ L)
&lt;em&gt;-&lt;/em&gt; r_I=&lt;/em&gt; r&lt;/em&gt;_
_/ v v _-/ v v0 0 0 0 0
&lt;em&gt;.&lt;/em&gt; _&lt;em&gt;) &lt;em&gt;&lt;em&gt;) &lt;em&gt;.) &lt;em&gt;.&lt;/em&gt; ___ C&lt;/em&gt;&lt;/em&gt;
v v V &lt;em&gt;/ v v vO&lt;/em&gt; O0 Or)
0 0 0
&lt;em&gt;-) &lt;strong&gt;)
r&lt;/strong&gt; &lt;em&gt;-&lt;/em&gt;
L_L_1,1
x/x/&amp;rdquo;&lt;/em&gt;/
&lt;em&gt;J ..&lt;/em&gt; .&amp;ndash;J
_ &amp;gt;..-
I;= L,&lt;/em&gt;
Z Z Z Z Z ZI&amp;ndash; &lt;em&gt;&amp;rdquo; kS.. Z &amp;quot;
Z Z L,&lt;/em&gt; -r L_I h
X X _ _ _ _ I.&lt;/em&gt;
Z Z Z Z ZZ _.-J &amp;lsquo;&lt;em&gt;C
LL&lt;/em&gt; &lt;em&gt;C
-&lt;/em&gt; _C
7.2-188 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&amp;lsquo;3
Z3
ro
4&amp;ndash;
(I,;
0
CO
c,.,l C)
iv} _ I/)0 0
0 0
0 0
0
0 0
0 0
0
0
0
0
430 (3: _ 0 0 C_ 0 43
430 0 r,. 0 0 0 0 43
0 0 _ 0 0 0 0 ..(3
•.(3 0 _ I_ _ 0 0 0
0 ._ m-., _ I- Im I&amp;ndash; ._
0 0 -I- 0 _ _ _ _ {/} _ Im0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0_J
.J
h
..(3
L
eO
0
&amp;ldquo;0
laJ
GJ
rO
¢.-
-,6e-
T.
%,..
0
I.&amp;ndash;
0
._
S,-
u
o&amp;rsquo;_ .&lt;em&gt;0
QJ
Zu,-
.&lt;/em&gt; 0
I&amp;ndash;
O.&lt;em&gt;C
E_J
Eo
o_0 0 0 0 0 0 0 0 0 0 0 _ 0 0
QJ
E _ _ Od (&amp;ldquo;3 Z I&lt;/em&gt; _
::_ _&amp;ndash;I (_0 &lt;em&gt;- t/&amp;rsquo;) Is&amp;rsquo;) t/&amp;rsquo;; t/} I&amp;ndash;&amp;rdquo; I&amp;mdash; I&lt;/em&gt; _ Ls.J
7.2-189 (611171)&lt;/p&gt;
&lt;p&gt;%&amp;gt;
q-
r=-
¢0
0
0
•_ c&amp;rsquo;-
-_ ¢- .
uJ o &amp;ldquo;_
,_ &lt;em&gt;o
°&lt;em&gt;&lt;em&gt;1 .-&lt;/em&gt; 4-J
_ 0
T- 3= &amp;lsquo;&amp;ndash;
_ &amp;ldquo;&lt;/em&gt; 0
0 e- &lt;em&gt;.
c&amp;rdquo; I 4-&lt;/em&gt;
0 c- e-
5 X&amp;quot;ge.&lt;/em&gt; o &lt;em&gt;.-
&amp;ldquo;EU
G.;&lt;/em&gt; m:l- r&amp;rsquo;-
,.&amp;ndash; Zq&amp;rdquo;-
e&amp;rsquo;_ 0
I&amp;rsquo;&amp;ndash;
c&amp;rdquo; 0
Or&amp;rdquo;- _ v&amp;rsquo;
.._QJ
_-Z _&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N NNASTRAN SUPPORT PROGRAMS
7.2-190 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;j_
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.7 Linkage Editor Output andDiagnostic Messages
Figure 43shows control statements andoutput ofalinkeditofthelinkage editor.
7.2.7.1 Diagnostic Messages
Figures 31through 38showhowdiagnostic (orintermediate) output which maybeobtained from
thelinkage editor. Thisoutput isintended primarily fortestormaintenance ofthelinkage
editor. Theoutput isselected bysetting PARAM(8) toanappropriate value ontheLINKEDIT control
statement (seesection 5.6.4.2). PARAM(8) actssimilarly toasense switch, i.e., eachdefined
bittriggers acertain typeofoutput independently oftheother bitsettings. Thedecimal values
(allpowers oftwo)forPARAM(8) andtheir functions areasfollows:
Value
l
4
8
16
32
64TypeofOutput Obtained
Contents oftheGTafter eachINCLUDE andINSERT
statement
Contents ofeachobject deckasitisprocessed in
LKED025
Alltables after processing eachdeck inLKED025
Text foreachsegment after construction inLKED075
Contents ofalltables after control statement
processing
Contents ofalltables after object deckprocessing
Contents ofalltables after address assignment
processing
Contents ofeachlinkasitiswritten inLKED080 128
These values maybecombined inanydesired manner (e.g., PARAM(8) =52which is4+16+32).
7.2.7.2 LINKLIB Subprograms
Table 4gives alistofsubprograms inLINKLIB.
7.2-191 (6/I/71)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;o
O
iN;
N
W
Z
..J
O
O
&lt;em&gt;4
n¢ r&amp;rsquo;&lt;/em&gt;
X UJ
o &amp;ndash;&lt;/em&gt;
t&amp;ndash;
Q
O UJ ..J
•Z
.J W_
__ &amp;quot; &amp;ldquo;J 11
.J ..l.J 0 ==1_,1
I,-
=.1,.I ..&lt;em&gt;elf.&lt;em&gt;&lt;em&gt;UJU.I
ZNASTRAN SUPPORT PROGRAMS
0 O00c. 0 oO_1&amp;rdquo;¸¸ ,4&amp;rdquo;
I&lt;/em&gt;
o o
o 0
&lt;em&gt;- z _
,. z&lt;/em&gt;&lt;/em&gt;,&lt;/em&gt;,&lt;em&gt;.. __Z u__xu-,.&amp;ldquo;lJ xx
&lt;em&gt;zJO&lt;/em&gt;
O&amp;rsquo;
f,&lt;/em&gt;} J
0 0000 0 O0
0 0000 0 OC,o_0 oo
¢k
I
)-
,o Z
&lt;em&gt;. Lu
t&lt;/em&gt;
0 tu
r_
N
O.
0qc
Z
uJ
0
I,-
I
0 w
u.
tu I _ _ ZO
._ __
&lt;em&gt;OOOC, O O OO
OOOO_O O OO NN,4&amp;rdquo;
,O.O,O
O OOO
O OOO
&lt;em&gt;N&lt;/em&gt; X XX00&lt;/em&gt;$
O &lt;em&gt;O
00&lt;/em&gt;
OOOOO
0000000000000 O0
0000000_ O0
&lt;em&gt;o &lt;em&gt;z _
OOOOO_OOOOOOOOOOCOOOOO
OOOOOOOOOOOOOOOOC&amp;rsquo;OOOOO
O O OOOO_OO O&lt;/em&gt;
O O OOOOOOO O&lt;/em&gt;
OOOOOO_OO 0 0 0 OOOOOOO OO
000000000 0 0 00000000 O0
&lt;em&gt;&lt;em&gt;. __ _
7.2-192 (611171)g
0
U
v
Z
Z
,,w
t&lt;/em&gt;
,r,,.j
0-
..&lt;/em&gt;
0
S-
O
-I_
._
(lJ
En
tO
._-
03
_J
&lt;em&gt;r&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P106</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_106/</guid>
      <description>
        
        
        &lt;p&gt;C_
I-
.¢I
u
C)
.I
O
0__.-
•&amp;hellip;a,.I
zOC
N
4&amp;quot;(5
•N
OI-
N
U
C)
&amp;ndash;I
0
Z
C)
,e[
U
0._ .j
0
I-
.J
Z
t- 0
ZI&amp;ndash;
U
0
0 ..I
a. Z
0
t..
I-
)-,c[
u
I&amp;ndash;
Z
Z 0
U
0
_ Z
O
.J
0
Z
r_DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
0g-400
000-.4
OC*C,
0C&amp;rsquo;O0 OOO OO OO OO
X II III IIIII IIII
O I II &lt;em&gt;&amp;lsquo;0. n, &lt;em&gt;- I II IIIII III
Z&lt;/em&gt; I L&lt;/em&gt;&amp;rsquo;&lt;em&gt;!.) II IXZ&amp;quot; at.&lt;/em&gt;.nuj U I II IIIII III
C:}u__.&lt;em&gt;.-&lt;/em&gt;&amp;rsquo;, _ _ &lt;em&gt;uZ n&amp;quot;euZ&lt;/em&gt;._ I&amp;ndash;r&amp;quot;C:) r_(::9 r-CD F..J F.J r-;.F,_ (DF,.J
._ I&amp;ndash;I &lt;em&gt;rc)&lt;/em&gt; II..&lt;em&gt;..I&lt;/em&gt;.,&lt;em&gt;..&lt;/em&gt;,.&lt;em&gt;&lt;em&gt;E&amp;rsquo;X (D&lt;/em&gt; III IIII IIII
uu&lt;/em&gt; I II II IIIII IIII
I II II IIIII IIII
14.
C_0 0 00 000 ¢&lt;em&gt;0 0 0&lt;/em&gt;-&amp;rsquo; _ 00 00 0 ¢D0
0 000 0 00 00 _ 0&amp;quot;_0 0 ¢D00 _ 00
I&amp;ndash; e _ O. &amp;ndash;I
I ,v. t,u f,,u uJ ,&amp;rsquo;.&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.. r_I&amp;ndash; I&amp;ndash; I.- I&amp;ndash; &lt;em&gt;- I&amp;ndash; C
I&amp;mdash; :a&lt;/em&gt;_ _, )&amp;quot;)&amp;ldquo;Z l&amp;hellip; x ,,n_L I&amp;ndash;I&amp;ndash; _U#&amp;lsquo;I&amp;rdquo;%0
0
c-
..J
5-
&amp;ndash;.s
7.2-193(6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ti_U__0 OU_,-&lt;em&gt;(&lt;em&gt;WDI&lt;/em&gt; 0 &lt;em&gt;D
&lt;em&gt;I 0i&lt;/em&gt; ,-4r&lt;/em&gt;,-I e%lMr&lt;/em&gt; I&amp;rsquo;- ,-i
0
00 t3 O0 _ O.&lt;em&gt;t &amp;ldquo;&lt;em&gt;C&amp;rdquo; 0
0(D (D O&lt;/em&gt; cJC_c_O 0 0
(D0 0 O0 (&lt;/em&gt; OC_O 0 0
iI IIIi!lI iIIII II
I
Z r-&lt;em&gt;C C&lt;/em&gt; z zZ ZZCb_ (:3B-LIL.&lt;em&gt;r_Z Z Z
II I I!II II I IIl II I
,, &amp;lsquo;, , ,,,, ,, , IIl l, ,
C, o o0 O c,o&lt;/em&gt; o0 0* o0 o 0 oo o o ¢
0o 0(J 0 0 o 0 _ o 0 _3, oc_00 00 _D o 0 ,-&lt;em&gt;04&lt;/em&gt;
40
0
0
40
qJ
&lt;em&gt;J
v
03
O&lt;/em&gt;
kL
7.2-194 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
,4.,,-&lt;em&gt;4.
rn_IC
&lt;em&gt;edl,rjO0
CJC-
CJC&amp;rsquo;C.
O.IQ&lt;/em&gt;
N*,wl(&amp;quot;&lt;/em&gt;
,,-,I(Ml_&amp;rsquo;_
0C&amp;rsquo;C_&amp;rsquo;
0000
IW.
0
0
ooo _
Of_C 0 C
¢&amp;rsquo;&lt;em&gt;t&amp;quot;&lt;em&gt;I,.- 4&amp;quot;
tM&lt;/em&gt;-4I&lt;/em&gt; N
,-4tM(M
ooo &lt;em&gt;C&amp;rsquo;C,O C&amp;quot; 0
00C&amp;rsquo; 0 O
,£&amp;rsquo;,,,I-l&lt;/em&gt;&amp;rsquo;_ WD ut_ 4.
,,.,i,,-.*(M N
OOC.J 0 0 0
00C. 00 0
O OOCJ o¢)
oOOC) 00
0000 000
N
0
0
0
4&amp;quot;
0
000000 0
00_00 0 O
OOOOO_ O O O
OOOOOO O0 O
O_OOOO O°O O O
000_00 oOO 0 0
NO° {f_(%1 Nh{elN_&amp;lsquo;1 &lt;em&gt;,4 &lt;em&gt;4 N I-I
I_1twT_O.-II&amp;rsquo;llfr_Irjell e-I,,-iOO..4 C_O&lt;/em&gt;.t F.)C.I i-4° .e40 C&lt;/em&gt;
OC)OC_O0 0 0¢&lt;em&gt;C&lt;/em&gt;¢,.,00 000C&amp;rsquo;&lt;em&gt;O ¢&amp;rsquo;&lt;/em&gt; 000 0
II _ I
II I I_:&amp;rsquo;__-
II I Iu_,Y_
_t.u uu &lt;em&gt;&lt;em&gt;uu&lt;/em&gt;
II I Ix.&lt;em&gt;l&lt;/em&gt;
I II I
II I II !
&lt;em&gt;Z&lt;/em&gt; _ _ Z ZZ __ II
Z_Z Z Z _ ___ ZZ&lt;/em&gt;
XX &lt;em&gt;XX X__X __ II
! I
II
00 _ 0 000 000 0 &lt;em&gt;0
00 0 0 000 000t&lt;/em&gt; &lt;em&gt;00 0o
4-)
£)..
4.-}
0
I,,..-
0
:g
L5
c&lt;/em&gt;
U U
,n
x x X xC_ne,&lt;/em&gt; eJ •
7.2-195 (6/1/71)&lt;/p&gt;
&lt;p&gt;PnSFILo CG6542 OUTPTC OC0037
RDPRU. 006552 &amp;mdash;NONE&amp;mdash;
OAT, 0C6574 OUTPTC 003042 000061 000075
OPEN, 0C,6133 SYSTEM. 09&#39;2464
OUTPTC 090027
srn. 006274 OUTPTC 003074
CETRA C07025 OUTPTC 00J.010
KOOER GO7046 OUTPTC 050004 000045
SEGMENT
w
w
I ;; SEGMENT
cn - SEGMENT
cn \ &amp;rsquo; SEGMENT 2
V
SEGMENT
SEGMENT
SEGMENT LINK 1 RENAME
INCLUDE
l NCLUDE
INCLUDE
OVERLAY
2 INCLllOE
OVERLAY
3 INCLUDE
INCLIJDE
OVERLAY
4 INCLUDE
INCLUDE
OVERLAY
5 INCLUDE
OVERL AY
6 INCLUDE I NCLtJOE
INCLlJOE
REGION
OVERLAY
7 INSERT
ENTRY END L E V E L 2
e 0 C D C 6 6 0 D L I N K A 6 E E D I T 0 R 2Oe4Ls29c 09/17/69
1
SYSTEM = SYSTEM.
CINKEOTI LKEDCOOe LKEDlOOv CKED150v LKED175r LKED2OO )
LINKEOTI LKED900, LKED995r LKED999r LKE0300~ LKE0320 )
LINKEOT( HASH )
A
LINKEDT( LKEDOlO 1
A
LINKEDTI LKEDOl5
LINKEDT( XRCARD )
A
LINKEDT( LKEDO25 I
LINKEDTf LKED964
4
LINKEnT( LKED059 1
A
LINKEOT( LKEOC75 )
LINKEDTI LKED077r LKED350 1
LINKEDT( RECDIJMP )
R
RLANK,.
LKEDOGO
Figure 43(e). Linkage editor output.&lt;/p&gt;
&lt;p&gt;uJDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z C._
&lt;em&gt;x
Z_Z _
&lt;em&gt;0
I
,&lt;/em&gt; Z
o&lt;/em&gt;
N t&amp;rsquo;-
Z
W
&lt;em&gt;J
&amp;ldquo;=&amp;rdquo; 0
0
Z
.=J &lt;em&gt;.
I
,v-
-,&amp;ldquo;I&amp;ndash;
Z
0 tu
u.
_ Z
&lt;em&gt;JN&lt;/em&gt; N_N
OOO OOO
=&lt;/em&gt;=&lt;/em&gt;=_ &lt;em&gt;=&lt;/em&gt;- &lt;em&gt;==__,,4
0
oN N
0 0
0 u.
cz&amp;gt; r,&amp;rdquo;
0 x
,&amp;rsquo;&lt;/em&gt; &lt;em&gt;s
Z
0 O0 O0 00_00
0 _ _ 0 _
0&lt;/em&gt; OC 0 OC_O
000_00000000 0 O0O0 0 0000
_O00000_OC O00 &lt;em&gt;0 O&lt;/em&gt; O (&lt;em&gt;000
O0 O0O0 O0
ZON
Z
O
L0
W
O
,,1-
O
%.3
r.a
O
O
e-
°&lt;/em&gt;
_J
i2
7.2-197 (6/I/71)&lt;/p&gt;
&lt;p&gt;ENTRY-PT
LKF03:?3
LKF0130
PACK
PACKM&amp;rsquo;iK REFERENCES TO EACH ENTRY POINT IN LINK 1 20.41.29. 09/17/69
AOORESS CALL FROM LOCATIPN LOCATION LOCATION LOCATION LOCATION LOCATION LOCATION LnCATION LOCATION LOCATION LOCATION
C15057 LKE0030 061376 001752
LKEDlOO 3C3062 OC0151
LKEO150 03?336 00CQ47 000056 000062 000120
LKE02r9 600076 0CG117 000143
LKEnOlO 003265 020272
LKEnf25 Oi&amp;gt;3712 fin0324 006337 000545 000601 000605 090611 000710 QC0725 001120 001124
f&#39;31165 OU12?O Or1224 031325 031331 OC1511 091536 031hh4 001672 !&amp;lsquo;01677 001703
Figure 43(9). Linkage editor output.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&lt;em&gt;&lt;strong&gt;r&lt;/strong&gt;
&lt;em&gt;,&lt;em&gt;un &lt;em&gt;lr t&amp;rsquo;n ,.4
000 _ ,-I ,.4
C)&lt;/em&gt;..C, 0 0 0
000 0 0 0
t&amp;rsquo;-
g.w
0
C,
0
o
0
00o 000o 0 O0
000 0 O0 0,0
p-
0
0
0
000 0 O0 0
00&lt;/em&gt; 0 O0 0
0_0 0 O0 0,4&amp;quot;
0
0
0
,0
0
0
00
0O0 0 O0 oO 0
&lt;em&gt;00 0&lt;/em&gt; O0 0&lt;/em&gt; 0 _ O&lt;/em&gt; 0
00_ O0 OC&amp;quot; 000 0 0 O0
000 O0 O0 000 0 0 O0 00
0
a_
,i._
&amp;ldquo;0
CL)
CP
e-
-r-
.,..I
e-
G.}
_n
7.2-199(6/I/71)&lt;/p&gt;
&lt;p&gt;PACKXX 015216
IJF+PKCI\I. 015225
PbCKCAL 015240
GFTFXT 015252
S TOF XT 015257
LKF0990 615265
NOW LKEDCOG
TEXTTAB
V &amp;lsquo;, FILLTAR
I N 0 LTNKTRl 0
LINKT92 rn
&amp;lsquo;2r , REPLTAR
2 - llNPK33
IINPKID
PACKDYP 015532
HAFH Of 5540 LKEDOOO
LKEOlCO
LKEn175
LKEDC77
I NPIJTC C15731 LKEDOCC
LKE0315
Figure 43(i ) . Linkage editor output.&lt;/p&gt;
&lt;p&gt;,¢
0
o
0
,,0
o
0
0
u&amp;rsquo;_
0
0DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,
,,0
0
0
0 I&amp;ndash;
c)
C&amp;rdquo;
4-
0
o
0
0
r_
0
o 0
&lt;em&gt;0 o orrt 0
_&lt;em&gt;o&lt;/em&gt; ,&lt;/em&gt;¢-, r_,..&lt;em&gt;,-= 0
0 _ O0 0
0 0 &amp;ldquo;&lt;em&gt;0 0t&lt;/em&gt;
Z
t,,,=
0
0
.,,0
U
C
U
uJt_u
zz
..J.J
ZZ
0(3
Z _ _
Z
Z &amp;ldquo;r
lg &amp;ldquo;,&lt;/em&gt;
Z Z.d
{:3-
0
I-
0
4-_
&amp;ldquo;0
_J
(1}
&lt;em&gt;r&lt;/em&gt;
.&amp;ndash;J
7.2-201 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Table 4(a). List of Subprograms in &amp;lsquo;LINKLIB.
iiECOHD NO, LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CHEATION DATE
OCTAL DECIMAL OCTAL (8)
1 0 1&#39;178 3362 XUOOT 666 1 UNKNOWN
2 0 283 4X32oADER 571 12/1
3 5/70
0 290 442 XIOwTrJS 5116 05/07/70
4 rl 3 0 -36 XEOF 4tj2n &amp;ndash; ilYKNOWN .-
5 0 75 113 DIIMP 6137 LINKNOIN
0 25&#39;1 401 MAPFNS 36 17 6 7 0 671 1237 SYSTEV. 2533
H 0 b84 1254 - &amp;ndash; &amp;ndash; &amp;ndash; - sTO$ 6554 UNKNOWN- .
9 0 90 132 OUTPTC 2273 UNKNOIN
lo -d 15 17 LOCF 600 UNKMOWN -
11 0 2 7 3 3 GLTBA 2246 UNKI&amp;rsquo;JOWN
0 1% 183 267 I0 6603 UNKNOWN
13 0 182 266 TORANDM 667 1 LJNKNOWN
0 191 14 -_ - - -271_&amp;ndash; CPC 6017 urs -
15 0 42 5 3 Xf)lJMP 346.1 UNKNOWN
&lt;em&gt;i)- _ 143 &amp;mdash;- %&lt;del&gt;&amp;ndash;_CUH[)IJMP-A&lt;/del&gt;-~KU&amp;mdash;
17 0 179 263 LINKERR 5332 UNKNOWN
14 Lm1317KOOEH-.*652_UNWYI?J &amp;ndash; -
19 0 549 1127 KRAKEH 7405 UNKNOWN
2 0 &amp;ndash;O14-26 &amp;mdash; - XRCL&amp;mdash; 2040UNK!!!UW N - &amp;ndash;
2 1 0 2 5 31 nC(jOEH 4374 UNKNOWN
22 0 14 -16 UBLE 13h0-&lt;/em&gt;_ UNKNOWN &amp;ndash; - 23 0 8 6 126 SINCOS 6150 UNKNOWN
n 6 1 24 - - 75 UBAIEX 6445 UNKNOWN
2 5 n 4 0 50 IBAIEX 1210 UNKFJOWN
2 6 0 213 - 325 INPUTB 6664 - UNKNOWN &amp;ndash;
27 0 97 141 INPUTC 3116 IJNKNOWN
28 0 7 3 I 11 OUTPTS ?374 , UNKNOWN- &lt;em&gt;- &amp;mdash;A &amp;mdash; - &amp;ndash; .&amp;mdash; -
2 9 0 35 43 PEMAHK 4750 UNKNOWN
0 33 3&#39;3 &amp;mdash;- SECOND 222 0 IJNKNOWN &amp;ndash;
3 1 0 6 7 103 DSQRT 534 UNKNOWN
32 &amp;ndash; - 11 - __ 26 . - -3 ? -&lt;/em&gt; &amp;ndash; - DABS 4357 !!!!&amp;amp;ow! - -_ 3 3 0 5 2 6 4 SORT 2347 UNKNOWN
3 4 0 pp - - &amp;ndash; - - - - - - &amp;ndash; .- 7 1_ . _ &amp;ndash; - 10&amp;rsquo;I &amp;mdash;- J!PuTS__3664 - - L,NI(No WB 3 5 0 6 6 1 rJ2 EXP 5003 UNKIJOWN
36 &amp;ndash; 0 - -. -..- - 55 67 - [)MOD 4530 UNKNOWN
37 0 14 I6 LEGVAH 7325 UNKNOWN
38 0  EL 2Q!!cd&amp;ndash; 3431 &amp;ndash; UNKNOWN -
39 0 9 4 136 TAN 4044 UNKlJOWN
4 0 0 76 -_&lt;strong&gt;&amp;ndash;&lt;/strong&gt;&amp;ndash;~&amp;mdash;- _611&amp;amp;- ALNl oG 6537 UNKNOWN -
4 1 0 121 171 ASINCOS 1047 UNKNOWN
4 2 0 79 117 &amp;ndash; &amp;ndash; AT AN 5326 UNKNOWN .- 43 0 9 6 140 ATAN2 4315 UNKNOWN
4 4 &amp;ndash; - &amp;ndash; &amp;ndash;2(34 43k&amp;amp;CKSP __&lt;em&gt;&lt;em&gt;A205 UNKNOWN 45 0 97 141 MOFFt&amp;rsquo;X 570 UNKNOWN
4 b 0 - - - 96 140 &amp;ndash; BUFFEP&lt;/em&gt;.&amp;ndash; &lt;em&gt;3750&amp;mdash; UNKNOWN &amp;ndash;&lt;/em&gt;&lt;/em&gt;
4 7 (I 4 5 5 5 CARS 2510 UNKNOWN
4 H &amp;ndash; 0 - - 53 65 - CHAXEX 7066 UNKNOWN
49 n h 0 74 CCOS 4042 lJNKNOWN
5 0 0 4 13 6 0 CEXP - &amp;ndash; &amp;ndash; . &amp;ndash; 576 UNKNOWN
5 1 0 45 5 4 CLOG 6455 UNKNOWN&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Table 4(b). List of Subprograms in LINKLIB.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;KEC?HD NOa LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CREATION DATE
OCTAL UECIMAL OCTAL 1B1 - - - &amp;mdash; &amp;ndash; - - -
4 3 1 48 6 0 CSOYT 2672 UNKNOWN
0 - %&amp;ndash;_ &amp;ndash; - -&lt;em&gt;-261-.&amp;mdash;&lt;/em&gt;- 2XDATAN3135 UNKNOWM . &lt;em&gt;-
55 0 90 132 DBADEX 4624 UNKNOWN &amp;ndash; Ll 50 l%L-3 DEXP 3Ki3 - WNUN &amp;ndash;
5 7 0 200 310 OISPLA 1756 UNKNOWN
157 -24- &amp;ndash;&lt;/em&gt;- - n&amp;ndash; -. 235 DLNLOG _ 2776 UNKNOWN
5 9 0 3 1 37 OS I GN 5611 UNKNOWN
0 60 - &lt;em&gt;- - - - - - - - - 154 - . - - - 231 - - - DbIfJCOS&amp;mdash; - 5 324 UNKNQW - - -
6 1 0 16 2 0 DVCHK 26 UNKrJOWN
h 2 n 7 1 5333 - UNKNOWN&lt;/em&gt;- &amp;ndash; - &amp;ndash; &amp;ndash; &amp;ndash; &amp;ndash; - - - - 1.07 &lt;del&gt;NDFJI
b 3 0 36 44 XDINT 4143 UNKNOWN
b 4 0 75 113 I FENDF 4500 UNKNOWN - &amp;mdash; - 64 0 66 102 I OCHEK 4642 UNKNOWN
UNKNOWN &amp;ndash; - __ _ - r)- _ _ - 11- - - _ &amp;ndash;l% -.!S!!Y.EC&amp;ndash; -155 &amp;mdash; &amp;ndash; -
h &amp;lsquo;I 0 34 42 LENGTH 6.31 1 UNKNOWN
&amp;ndash; -.b? &amp;ndash;_ _ _ _ &amp;quot; - - -. 215 - - &lt;em&gt;- &amp;ndash; 330 OUTPTB &amp;ndash; - UNKNOWN - -&lt;/em&gt;
b 9 0 15 17 OVERFL 3300 IJNKNOWN
7 U 0 3 0 36 - &amp;mdash;- - - - - &amp;mdash; - PALISE_- 1666 &lt;em&gt;-VNK&amp;quot;rlOWN&amp;ndash; _
&amp;lsquo;7 1 D 2 1 25 HkNF 6147 UNKNOWN
7 2 - - (1 . - . _ 5_1&lt;/em&gt; ._ _ 6 1 _ hRAIEX-23A AN KNOWN- - -
73 r) 65 in1 HRAUEX 5424 U!JKNOWr\l
7 u - - - - - - - - - - .-&lt;em&gt;-&lt;/em&gt; 0 - &amp;ndash; 76 _ 114 _-&lt;/del&gt;-E~~IY_II?&amp;mdash; &lt;em&gt;-A563- &amp;ndash;LIN_K_N_O_U - ,
75 n 2 6 32 Sl- X TE 2535 UNKNOWN
76 0 - &amp;ndash; &amp;ndash; - - .- . - - -31 - &lt;em&gt;-31__31 ITET -ZL- IJNKIJOWN&lt;/em&gt;&lt;/em&gt;_ &amp;ndash;
7 7 0 69 1 Q4 TAYH 6543 UNKIJOWN
7 8 &amp;ndash; - - &amp;ndash; - &amp;ndash; - 0 &amp;mdash; &amp;ndash; -72 - 110 - &lt;em&gt;- -.-SINH_14h UN-MOk!N -
7 9 0 72 11 0 COSH 1302 UNKNOWN _ - -&lt;/em&gt; E!O _ - 0 &amp;ndash; 28 - - 3 4 . - .3SwTCH&amp;ndash;4fj7&amp;ndash;..&amp;ndash;4MN4W ?I &amp;ndash; -
8 1 0 17 2 1 START 1111 UNKNOWN
&amp;ndash; - 0 82 - &lt;em&gt;- &lt;em&gt;-&lt;/em&gt;. - - _ 3. - &lt;em&gt;- - &amp;ndash; -~&amp;mdash;~~~-43bfi - UNKN_O_W-N &amp;ndash; k 3 0 45 55 WHETEC 5100 UNKNOWN
&amp;mdash;&amp;ndash; - 84 0 8 7 127 !!!!!f_IhlS &amp;ndash;17_1?- -__&amp;ndash;&lt;/em&gt;&lt;/em&gt;__ UNKNOWN
6 5 n 588 Ill4 TNPIITN 2671 UNKlJOvJN &amp;ndash; - 86 n - 351 - -537 _ 2!JTf!m - &lt;em&gt;- 1k2.2 _ &amp;ndash; UNKNOWN 37 - - 0 74 ll? HEADEC 4432 CINKNOWN
8d &amp;ndash; - - - - n 39 47 FTNHIN 4666 IJNKNO\rJN _ -. &amp;mdash;- - - - - - - &amp;mdash;
8.19 0 96 l4n lNlTMS 6535 UNKNOWN
9 0 0 p- - - - - - - - - - 1L!l &amp;ndash;&lt;/em&gt;- - 1 6 6 &amp;ndash;__ _h$AJ-M&amp;gt; - UNKlJOWN 1 - - _ - - - - - -
9 1 r) 2 5 MOYTt 5571 UNKNOWN
92 n - - &amp;mdash;&amp;ndash; &amp;ndash; I%&amp;ndash; - -16. 31 MXTFT &amp;ndash; &amp;ndash; 2304 UNKNOWN - - - -
93 0 3 2 4 n MXGET 5675 UNKNOWN
-24- - - .- 1 _ __19&amp;ndash;. - _&amp;ndash;a &amp;ndash; !!2_c/\LL-..- -1315 U%KM!WN &amp;ndash;
9 5 (I 3 2 4 0 MBPUT 7236 UNKNOWN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;9b - 0 32 f+ 0 &amp;ndash; M&amp;amp;-tUl. -k517_ &amp;ndash; UNKlJoWN-
3 7 (1 3-47 533 C&amp;rsquo;LOT 673Q UNKNOWN
&amp;ndash; 96 &amp;ndash; - - - - - - - 325 lINKNOWN_. 0 _ - - - 5A5 &amp;ndash; _ SY M HOL&amp;ndash; -&lt;em&gt;&lt;em&gt;36_64 . _ - - . &amp;ndash;
9 9 0 184 270 SCALE 702 UMKIJOWN
loo&lt;/em&gt; - I&amp;mdash;- - - _ 0- &lt;em&gt;P 99 353 AX&lt;/em&gt;&amp;amp;- -&lt;em&gt;-&lt;/em&gt;&amp;mdash; i~35.L llNIc_No41N
101 0 167 247 LINE 4511 UNKNOWN
&amp;ndash; 1-0 2 0 i.&amp;lsquo;3_6 354 _ -N!FH3H 4 1 62&amp;ndash; .&lt;/em&gt;_ &amp;mdash; - __-LJW.!!NO w N
lfr.3 17 0 0 0
&amp;ndash; - - - - -. - - &amp;ndash; LE(_kl- .7(jHULJP !-ENji_T)II IS &lt;em&gt;- 4144 33513&amp;mdash; &amp;ndash; -&lt;/em&gt; - - - &amp;ndash;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.8 Recommended Improvements to the Level 2.0 Version
More and more CDC 6000 series installations are installing &amp;ldquo;private&amp;rdquo; disk packs thus providing
a user mountable/demountable direct access storage device. The increasing use of these packs
suggests two areas of improvement in the Level 2.0 version (the current version) of the linkage
editor.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Provide for the case where the individual links which comprise the executable program
reside in more than one direct access file (presumably on different packs). Large programs
such as NASTRAN will not fit on a single disk pack.&lt;/li&gt;
&lt;li&gt;Provide for object deck libraries in direct access format on the packs. Again, for a
large program such as NASTRAN, considerable elapsed time is spent in initial processing in
creating the single direct access file SYSUT2 from each of the sequential libraries.
The first area could be implemented by modifying XBPIPIT and XLPIADER. Perhaps input could be
supplied to XBBPIT which specifies a destination file &amp;lsquo;for the 1 ink. XB0DT could then modify the
master index in LINKO$ with this information. XLOADER could be modified to accept the new format
i in LINKO$.
The second area could be implemented by changing the format of the LIBRARY control statement
to the following:
LIBRARY namel (a), name2(a) . . .
where
a = T or C as in the LINKEDIT statement. Files which are coded C are assumed to be already
in direct access format (probably with a name index). Files coded T are sequential and are con-
verted to direct access formation on SYSUT2 as now. This would imply changes to LKED015, LKED025
and LKED075.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.9 Linkage Editor Glossary
control section Consists ofallinstructions anddatadefined forasubprogram orcommon
block.
delink todelete from
ENTRTable Object decktable containing alistofallnamed entry points andcommon
blocks. Seesection 7.2.5.2
EPT Entry Point Table. Seesection 7.2.2.1.4
FET FileEnvironment Table. SeeSCOPE reference manual.
FILLTable Object decktable containing information torelocate previously defined
GT
ID
LCT
link
link
LINKTable
LKEDO00
LT
nbr
path
PIDLTableaddress fields.
General Table.
IdentificationSeesection 7.2.5.4
Seesection 7.2.2.1.9
Local Common Table, Seesection 7.2.5.1
when usedasaverb, &amp;ldquo;tolink&amp;rdquo; means &amp;ldquo;toaddto.&amp;rdquo;
Collection ofoneormoresegments which co,rise alogical subdivision
oftheprogram. Link0(consisting ofonesegment only) isinmain storage
atalltimes. Itisthefirst linktoreceive control whenexecution of
theprogram isinitiated. Therootsegment ofanyother linkresides in
main storage atalltimes thatthelink isbeing executed. Anoverlay
program must consist ofatleast onelinkother thanLinkO.
Object deck table specifying external references withthesubprogram.
Seesection 7.2.5.5
Mainprogram. SeeFigure 31.
Library Table. Seesection 7.2.2.1.2
abbreviation for&amp;quot;nu_er&amp;rdquo;
Consists ofasegment, Asay,andallsegments inthesameregion between
Aandtherootsegment (first segment). Therootsegment isapartof
every path inevery region. Whenasegment isinmainstorage, allsegments
initspatharealsoinmainstorage.
Program Identification andLength Table. Object deck table containing
thesubprogram identification andnames ofeachofthecommon blocks
referenced bythesubprogram. Seesection 7.2.5.1.
7.2-205 (6/I/71)&lt;/p&gt;
&lt;p&gt;reg.
region
RDT
REPLTable
RT
SCT
SDT
seg.
segment
SNT
TEXTTable
tree
XREFTableNASTRAN SUPPORT PROGRAMS
abbreviation for&amp;quot;region&amp;rdquo;
Contiguous areaofmainstorage within which segments canbeloaded
independently ofpathsinotherregions. Anoverlay program canbe
designed inasingle ormultiple regions.
Region Definition Table. Seesection 7.2.2.1,5.
Object decktablethatprovides foranefficient meansforrepeating a
blockofdata.
Rename Table. Seesection 7.2.2.1.8.
Segment Chains Table. Seesection 7.2.2.1.6.
Segment Definition Table. Seesection 7.2.2.1.7.
abbreviation for&amp;quot;segment.&amp;rdquo;
Smallest functional unit(oneormerecontrol sections) thatcanbeloaded
asonelogical entity during program execution.
Subprogram NamesTable. Seesection 7.2.2.1.3.
Object decktablecontaining instructions anddata. Seesection 7.2.5.3
Thegraphic representation thatshowshowsegments canusemainstorage at
different times. Itdoesnotimplytheorderofexecution.
Seesection 7.2.2.1.10.
7.2-206 (6/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3THESOURCE CONVERSION PROGRAM (SCP)
7.3.1 Purpose oftheSource Conversion Proqram
TheSource Conversion Program (SCP) translates theNASTRAN FORTRAN codethatcompiles onthe
UNIVAC ll08andIBMS/360 toaformacceptable totheNASALangley Research Center (LRC) CDC6000
series RUNcompiler.
TheSCPisprimarily concerned withtwomajor differences between theFORTRAN acceptable to
theLRCRUNcompiler andtheFORTRAN acceptable tothecompilers ofthethree other computers
initially selected forNASTRAN&amp;rsquo;s execution: IBMSystem/360 (BS); UNIVAC ll08 (EXEC 8);andIBM
7094-7044 Direct Couple System (IBSYS). These twodifferences are: a)nonstandard returns from
called subroutines, andb)subroutines withmultiple entry points.
7.3.2 Conversion Performed
Figure lshows asubroutine containing special cases ofthetypes ofFORTRAN statements on
which theSCPoperates. Thissubroutine wasgenerated merely forillustrative purposes; it
clearly violates manyoftheNASTRAN FORTRAN rules setdowninsection 6.2.
Figures 2,3,4,and5showtheFORTRAN statements generated bytheSCPfromthecodeshown
inFigure I.These statements will compile ontheLRCRUNcompiler andwillproduce object code
equivalent tothat produced bytheother compilers.
7.3.2.1 TheNonstandard Return (NSR)
TheNSRaffects three types ofFORTRAN statements: a)theRETURN statement; b)theCALL
statement; andc)theSUBROUTINE orENTRY statement.
l°TheRETURN statement.
SCPInput (e.g., seelines 0033and0015 inFigure l)
RETURN
or
RETURNi
where iisanalphanumeric constant.
7.3-I (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
S&lt;del&gt;HROLTI &lt;del&gt;IE SUE1 (&lt;em&gt;,A# a)
ca&lt;/em&gt;*** &amp;mdash;
C THrS SAMPLE SUBROUTrNE ILLUSTRATES PARTlCCULAR CASES OF ALL THE
C STATEMENT TYPES CONVERTeG-P . - 8885
0004
C -
C 11 MllLTlPCE EhTPIES, 0006
C 2) MULTIPLE ERTKIES WITH &amp;lsquo;.O&lt;/del&gt;-STANCARD RETURNS, &amp;mdash;Q09!2-
C 3) nUPMY ARGUFENT -A- APPtARI!vG Oh POHE THAN CNE ENTRYI 0008
C 41 DI FEWSION STATEMEQTS AI- TFR_AN ALTERNAJE ENTRY,&amp;ndash; _ 0009
C 5) NOh*STANDARU RETURNS AS IN A CALLING PROGRAtlt 001 0 .
C 6) YOhmSTAYDARD R&lt;/del&gt;TURWS A? IN THE CALLED PROGPAM, &amp;mdash; 001 1
C 7) NOhsSTAVDARD RETUR&lt;del&gt;VS 0, LOGICAL IF STATEMEtvTS, 001 2
c***** &amp;ndash;
C SEsohD E&lt;/del&gt;TRY POINT ___&lt;em&gt;4aUl__l
001 8
C**&amp;rdquo;** p&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;.&amp;mdash;. 411l9&lt;/em&gt;- -
FiTRY SOi32 0020
CALI FUNCl(A,P;100) - T&amp;mdash;&amp;ndash; - - -. &amp;ndash; - .- _ _A&amp;rsquo;L&amp;mdash; 303 CALl FUNC~(PIOOF %20(1, 3 0022
2oR CALL FUhJgR($It?O) &amp;ndash; &amp;ndash; &amp;ndash; 0023-
RFTURA 0024
C&lt;em&gt;c**, - - &amp;mdash; &amp;ndash; &amp;ndash; - ___0025
C THIRC ENTRY POllNT
C&lt;/em&gt;***a 0026&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;mdash;- - - &amp;ndash; - - - - - - &amp;ndash; - - - - - &amp;ndash; - - &amp;ndash; 0027
ELTRY SlJR3(A,f?C,DtFI*) 0028
&amp;ndash; lh7F&lt;del&gt;fH He($) .,&amp;hellip;_ ___l_____i-_Y-d&amp;ndash;
IF( LI rFOc i ) CALL &lt;del&gt;bh&lt;/del&gt;2($108,$300&lt;/del&gt;2&lt;del&gt;0&lt;/del&gt;0~~) 0030 - RFTIIRh 1 -0931- -
303 IF( D cfOc 310 ) RkTURN 1 0032&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash; HFTtJHh- . -na33&amp;mdash;
Eh I) 0034
Figure 1. Subroutine acceptable to the UNIVAC 1108, IBM System/360, and IBM 7094-7044
Direct Couple System FORTRANs, but not to the CDC 6000 series FORTRAN.
Figure 2. Driver deck generated for entry SUB1 of the sample subroutine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THE SOURCE CONVERSION PROGRAM (SCP)
Figure 3. Driver deck generated for entry SUB2 of the sample subroutine.
SL.J&lt;del&gt;T&amp;rsquo;OJTI NE SIJB3 (-1 r %,IItF) 8 GETURNS (KETIJRVI 1 SUQ3 1
COU4&lt;del&gt;Y/3YSTEhl /III!Ill(1) SUR3
COYrlOJ/&lt;/del&gt;%ZS&lt;del&gt;JPl/I II&lt;/del&gt;I~IIIIIIIII&lt;/del&gt; SUQ3 3&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;TII11al=LilcT(~)- :J~&amp;#39;\~JNN sus3 5 
1 I I1 IOZ=L~CF(~C)- Ji&amp;#39;\l&amp;#39;\lJNNI\I SURJ 6 
I I I I I OJ=LOCF(UEF )-I&amp;#39;\I J~v&amp;#39;&amp;#39;JN~&amp;#39; SUR3 7 
CALL ~~JHJZZZ(III~III(~~I~)~IIIII~~~II~IIO~II~~I~S~ 8 
LFT&amp;#39;I?YS(~) SUW3 9 
Figure 4. Driver deck generated for entry SUB3 of the sample subroutine. 

MSTRAN SUPPORT PROGRAMS 
c SUBROUTINE SUBI (&amp;#43;;2(*) SUR~ 3 
C&amp;amp;***&amp;#43; SURl 3 
&amp;#39; - r: THtS SAMRLE SU_BRO_U_TSNE rLLUSTRATES PARTICULAR CASES OF ALL THE 5U~1 4 
r: STATEMENS&amp;#34; TYPES CONVERTED BY THE SOURCE CONVERSION PROGRAM. SUP1 5 
8 c - SUP1 6 1 
C 1) MULTIPLE ENTRIES, SUB1 7 
C 2) M~JLTIPLF ENTRIES 4If~ WCNaSTANDARD RETURNS SUPl 8 
C 3) DUMMY ARBUMENr *A&amp;amp; APPEARING ON MORE THAN ;)ME ENTRY,----- SURl 9 
&amp;#39; C 4) DIMENSIOV S~ATE~ENTS bFTEH AN ALTEFtNATE EVTRY, SWl 10 1 
C 5) NO@-STANDARP nfTURNS AS 1Y A CALLING PROGRAM, SUB1 11 I 
C 6) VON-STANDARD sfETUSNS AS IN THF CALLFD PROGRAM. SUP1 13 
C 7) &amp;#43;JON-STANDARD aESURNS ON LOGICAL 1F STATEMFNTS. SURI 13 
I Ca**&amp;#43;a SURl 14 
C f NTRY SUB3( A~BC~IJEF, *) SURl 15 , 
INTEGER bc(3) sun1 16 
IFC A 385) 40,50,5Q SYRI 17 
40 RETURN RETURN1 5URI 18 -- --- -- 
a 50 RETURN RETURN2 SURl 19 
ct**rr sun1 ao 
C SECOND ENTRY POINT ----- ----- 
SUPl 21 
e***&amp;#43;* -- SUP1 23 
ENTRY SUH2ZZZ sun1 23 7 - 
C EVT9Y SUB2 - SUP 24 
CALL FUNCI(A),RE~JRNS(~O@) SUP: F 
100 CALL F~WC~~I~OIRI~~E~U~NS(~-OO~~~~) - - - - .- SUB1 26 
200 CALL FUNC3,aFTLJR%S(100 SURI 27 
RETURN - SUP1 28 
Cut*&amp;#43;* 51191 29 
c THIRD EVTPY P~~NT - -- qUR1 30 
C&amp;#43;**&amp;#43;* SUB1 31 
ENTRY SUB37ZZ -- JURl 33 If (DoEQrl)CACL F~~NC~~~~QCOID)~RETURNS(~OO~~QO) SUB1 33 
RETURN RkTURN1 SUE1 34 - . 
350 IFC3,EQ,2.O)RfTUQY RFTUR~~ sURl 35 
RETURN -- -- -- SJR1 36 
END 3URI 37 
Figure 5. SCP output of the sample subroutine. 

THESOURCE CONVERSION PROGRAM (SCP)
2,
3.SCPOutput (e.g., seeline SUBI 36andSUBI 18inFigure 5)
Ifiisnotpresent intheinput then noconversion takes place.
RETURN RETURNi
where iisanalphanumeric constant identical totheioftheinput.
TheCALL statement having nonstandard return arguments.
SCPInput (e.g., seeline 0022 inFigure l)
CALL s($nl,$n 2..... $nK,al,a 2..... aj)
where sistheSUBROUTINE orENTRY name, theniareFORTRAN statement numbers
associated with nonstandard returns, andtheaiareordinary arguments.
SCPOutput (e.g., seeline SUBI 26inFigure 5)
CALL s(al,a 2..... aj), RETURNS(nl,n 2..... nK)
where s,theai,andtheniareasdefined above. Note the&amp;#34;$&amp;#39;s&amp;#34; have been removed.
TheSUBROUTINE orENTRY statement.
SCPInput (e.g., seeline O001 inFigure l)
SUBROUTINE S(*l,* 2..... *K,al,a2 ..... aj)
or
ENTRY S(*l,* 2..... *K,al,a2 ..... aj)
where sisthesubroutine orentry name, the*iarearguments representing the
nonstandard returns andtheaiareordinary arguments.
SCPOutput
SUBROUTINE s(al,a 2..... aj), RETURNS (RETURNI, RETURN2 ..... RETURNK)
where sandtheaiareasdefined above.
Note: During theoverall conversion process thenonstandard return s(*&amp;#39;s) in
ENTRY statements areremoved bythemultiple-entry processor (see Figure 7)as
described insection 7.3.2.2. This process isperformed first, andthus the
nonstandard return processor encounters only SUBROUTINE statements having
nonstandard returns.
7.3-5 (311171)


NASTRAN SUPPORT PROGRAMS
7.3.2.2 Subroutines Having Multiple Entries
U_,like nonstandard return processing, which isessentially astatement-for-statement con-
version process, subroutines having multiple entries cannot beconverted inastraightforward
wayforcompilation ontheLRCRUNcompiler.
Theproblem ofmultiple-entry subroutines liesintherequirement thateachargument must
continue torepresent thebeginning ofthesameareaincorethatisassigned uponthefirst
entrywhereitappears asanargument untilitreceives another coreassignment atthesameor
another entryinwhich itappears inthesamesubroutine. ThusinFigure I,ifentryweremade
toSUB3(line0028)thedummyarguments A,BC,andDEFwould receive coreassignments. Ifthe
nextentrytothissubroutine weremadeatSUB1(line0001), theargument Awouldreceive anew
coreassignment; however BCandDEFwouldretain theassignments received attheprevious entry,
SUB3.
TheLRCversion andallversions oftheCDC6000series RUNcompiler accept arguments only
ontheSUBROUTINE statement; ENTRYstatements maynothavearguments (1)
Thelistofarguments onanyCALLstatement, whether toaninitial orsecondary entry point,
should agreewiththeargument listoftheSUBROUTINE statement. InCDC6000series FORTRAN, for
eachargument inaCALLlist,anaddress andnotavariable, entire array, orexternal subroutine
ispassed tothecalled subroutine. Thefollowing paragraphs describe thetechnique usedto
convert subroutines having multiple entries.
I.Ifalltheentries ofasubroutine haveprecisely thesamenumber ofarguments,
andthesearguments havethesamenamesandappear inthesameorder, thentheSCP
doesnothing morethanremove theargument listsfromtheENTRYstatements.
(1)Control Data6400/6600 Computer _ystems FORTRAN Reference Manu_l CCDCpub,NO.60174900)
7.3-6 (3/I/71)&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P107</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_107/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
2.Iftheaboveconditionisnotmet,thentheSCPgenerates&amp;quot;drivers&amp;quot;asshownin
Figures2,3,and4.
3.Toinsurethatacoreassignment foranargumentismaintained forfuturecallstoa
subroutine withmultipleentries,allcallstothatsubroutine aretrappedthroughsmall
subroutines called&amp;quot;drivers.&amp;quot; TheSCPgeneratesadriverforeachentrypointina
multiple-entry subroutine. Thedriversubroutine nameisthesameastheentryit
represents. Itsargumentlististhesameastheoriginal,e.g.,seetheentries
inFiguresl,2,3,and4.
4.Thedriver&amp;rsquo;sfunctionistopreservethecoreassignments ofitsargumentsandto
thencalltheentryoriginally intendedwithalistofallpossibleargumentcore
assignments.
5.Theargumentlistoftheconverteddeckiscomprisedoftheset-theoretic union
ofallargumentnamesforallentries(seeFigurel,linesO001and0028,andFigure5,
lineSUBIl).
6.Thedriversdonotpreservetheactualcorelocations, butinsteadpreserve,in
labeledCOMMON,indexesrelativetoafixedlocationincore(/SYSTEM/&amp;ndash;see section
2.4.I.8). SeeforexamplelinesSUB35,SUB36,andSUB37inFigure4.
7.Theentrypointnamesoftheoriginalsubroutine arefilledtosevencharacters
each,using&amp;quot;Z&amp;rsquo;s.&amp;ldquo;Seven-character namesareingeneraluniquesincesixisthe
maximumnumberofcharacters permittedfornamesinNASTRANFORTRAN.TheSCPdoes
notconsiderthepossibility ofamultiple-entry subroutine havingtwoentrynames
(suchasSUBZandSUBZZ)which,whenfilledwithZstosevencharacters, wouldproduce
identicalentrynames.Inthiscase,thecodeproducedbytheSCPwillnotcompile,
anditisuptotheprogrammer usingtheSCPtosolvetheproblem.
8.AtexecutiontimethedriverswillproducecorrectresultsonlywhenCALLsaremade
inasequencethatwouldbevalidusingtheoriginalsubroutine ontheUNIVACll08
andtheIBMS/360.
7.3-7(311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3 Major Divisions intheProgram
Thefollowing discussion isintended fortheusebytheprogramming analyst responsible for
theuseandmaintenance oftheSCP. Refer tothesymbolic FORTRAN code, which isheavily com-
mented, inaddition tothis discussion andtheflowcharts given insection 7.3.5.
7.3.3.1 TheMain Driving Routine CONVSOU
Themain driving routine CONVSOU isasingle subprogram that controls theconversion of
FORTRAN subprograms itfinds ontheinput file.
Itdoes thefollowing:
I.Reads afull subprogram into core.
2.Calls MULTEN, themultiple-entry processor, which will convert thedeck formultiple
entries.
3.Calls REORDR, thedelcarative statement reordering processor, which will rearrange
into correct order anydeclaratives within thesubprogram. REORDR iscalled only if
thesubprogram hasmultiple entries.
4.Calls NSRETN, thenonstandard return processor, which will complete theconversion
bytranslating allnonstandard return statements within thesubprogram.
5.Outputs theconverted deck viaroutine DKOUT.
6.Repeats steps lthrough 5until nomore subprograms remain ontheinput file.
Themain driving routine contains blank COMMON which isloaded below (i.e., atahigher
core location than) allobject code oftheSCP. Itisthus used asopen core. Within themain
driving routine andthethree processors, asubprogram being converted always lies inthis open
core from Z(IDK) toZ(NDK), where
Z=Open core array
IDK=Relative location inZwhere thesubprogram begins.
NDK=Relative location where thesubprogram ends.
7.3-8 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
Eachcardimageofthesubprogram beingconvertedoccupiestwelvewordsofcore,eachword
havingsixleft-adjusted characters. Consequently, theSCPisrecommended foruseonlyona
CDC6000seriescomputeralthoughitistheoretically capableofrunningonanymachinehaving
six-character words(e.g.,UNIVACIf08).Thisisreasonable sincetheSCPisdesignedtooperate
onCDC6000seriesformatfiles.
7.3.3.2TheMultiple-Entry ProcessorMULTEN
Themultiple-entry processorMULTENoperatesontheoriginalcodeonesubprogram atatime.
Itscansthecodeforentrystatements and,iffound,callsutilityroutineNAMARGtoforman
argumentlist.Afterallentrieshavebeenfound,thefollowingtakesplace.
I.Ifonlyaprimaryentrywasfound,noactionistakenandthisprocessorreturns
tothemaindrivingroutine.
2.Theargumentlistsofallentriesarecompared. Iftheyareidentical, thentheonly
actiontakenistoremovetheargumentlistsfromallsecondaryentries.
3.Iftheargumentlistsarenotidentical, utilityroutineDRIVESiscalledtogenerate
andoutputadriverdeckforeachentrypoint.Theentrystatements oftheoriginal
programarethenalteredtoappearascommentstatements, newentriesareinsertedbefore
them,andcontrolisreturnedtothemaindrivingroutine.
MULTENwillinallcasessetaflagifmorethanoneentryisfoundtoindicatethatthe
declarative statementprocessorRE_RDRistobecalled.
7.3.3.3TheDelcarative StatementReordering ProcessorRE_RDR
Thefunctionofthedeclarative statementreordering processorRE_RDRistomoveall
declarative statements tothetopofasubprogram andalsoinsurethattheyareinthefollowing
order(seesection6.2):
I.DBUBLEPRECISION
2.COMPLEX
3.REAL
4.INTEGER
7.3-9 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5.LOGICAL
6.EXTERNAL
7.DIMENSION
8.COMMON
9.EQUIVALENCE
I0.DATA
RE_RDR iscalled forsubprograms withmultiple entries because DIMENSION statements appearing
afterasecondary entrymustbemovedtothetopoftheprogram.
Thisprocessor originally wasastand-alone program, andstillretains DIMENSION statements,
while theothertwoprocessors usetheopencoreconcept.
REORDR usesashuttle-exchange sortconsidering allnondeclarative statements tobestored
last. Comments appearing directly above, orembedded within, adeclarative statement aremoved
alongwiththerespective declarative inthesorting process.
7.3.3.4 TheNonstandard Return Processor NSRETN
Thenonstandard return processor NSRETN analyzes eachstatement ofthesubprogram itreceives
forconversion. Whenitfindsanyofthefollowing statement forms, itwillbranch toasection
ofcodethatwillperform theconversion directly.
I.SUBROUTINE statement having nonstandard returns (*&amp;rsquo;s)initsargument list.
2.RETURNi, whereiisaninteger constant.
3.IF(&amp;hellip;.)RETURNi, asin(2).
4.CALLstatement having nonstandard return FORTRAN statement numbers ($n)inits
argument list.
5.IF(&amp;hellip;.)CALLstatement asin(4).
7.3-I0 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5 Utility Subroutines
Described below are25small utility subroutines usedbytheSCP. Allarewritten in
FORTRAN except WRTEOR, ORF,LSHIFT, RSHIFT, LOCF, andFIELDLN, which arewritten inCOMPASS.
Alloftheexceptions saveWRTEOR arepartoftheMAPFNS routine described insection 5.5.6.1.
7.3.3.5.1 WRTEOR
ACOMPASS assembly language routine tocomplete alogical record ontheconverted deck
output file.
CALLWRTEOR
7.3.3.5.2 CDTYPE
When called byREORDR, this routine will analyze one72-column cardimage andreturn a
value indicating what kindofFORTRAN statement orstatement fragment itis.
CALLCDTYPE(TYPE,BUFF,ADD)
TYPE =Integer returned withoneofthefollowing
-l
-2
0
l
2
3
4
5
6
7
8
9
lO
BUFF =Comment statement
Continuation statement
Undefined statement
DOUBLE PRECISION statement
COMPLEX statement
REALstatement
INTEGER statement
LOGICAL statement
EXTERNAL statement
DIMENSION statement
C0_@4_N statement
EQUIVALENCE statement
DATAstatement
Eleven-word buffer containing cardcolumn characters 7through 72,sixcharacters
toaword
7.3-11 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ADD=BCDwordcontaining columns 1through 6ofthecardimage.
7.3.3.5.3 MOVE
M_VEmovesagroupofcardimages, whencalled byREORDR, toahigher position inthedeck.
Itperforms ashuttle-exchange.
CALLM_VE(POINT,BEGIN,END,CARD,ADD)
PBINT =Integer valuepointing tothelastcardsorted intoplace, afterwhichcards
onthecurrent movewillgo.
BEGIN =Integer cardnumber ofthefirstcardinagroupofcardstobemoved.
END =Integer cardnumber ofthelastcardingrouptobemoved.
CARD =Buffer containing thecardimages forthesubprogram.
ADD =Buffer containing theaddress fieldofeachcardimage.
7.3.3.5.4 TOP
TOP,asmallroutine, determines where thefirstnonentry, noncomment statement ofasub-
program begins.
CALLTOP(POINT,CARD,ADD,TOTAL)
POINT =Integer valueofcardnumber returned.
CARD =Arrayofcardimagestatement fields.
ADD =Arrayofcardimageaddress fields.
TOTAL =Integer valueofthetotalnumber ofcardsinsubprogram.
7.3.3.5.5 MASK2
MASK2unpacks aspecific character fromaspecific wordincore.
CALLMASK2(WORD,CHAR,LETTER)
WORD =Wordofcorewhere thecharacter tobeunpacked resides.
CHAR =Integer countcounting fromleftofcharacter desired.
7.3-12 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
LETTER =Word character isreturned in. Thecharacter isleft-justified andtheword
isfilled with blank characters.
7.3.3.5.6 MASK3
MASK3 unpacks acharacter from aword inastring ofwords andincrements string pointers
appropriately.
CALLMASK3(W_RD,MW_RD,MCHAR,LETTER)
W_RD =Current wordinstring tounpack character from.
MW_RD :Wordcurrently beingoperated on.
MCHAR =Character desired counting fromleftintheword.
LETTER =Wordinwhichcharacter isreturned, left-justified filled withblanks.
MCHAR isincremented byI.Ifitthenexceeds 6,itissetto1andMW_RDisincremented
by1before return ismade.
7.3.3.5.7 MASK7
MASK7 analyzes astatement imagebuffer andreturns then-thnonblank character intheimage;
oriftheimageisexhausted, itreturns ablank.
CALLMASKT(CARD,N,LET,NCARDS)
CARD =Statement imagebuffer
N =Number ofthecharacter desired, N&amp;gt;1
LET =Wordthecharacter isreturned in,left-justified filled withblanks
NCARDS =Number ofcardsinstatement image.
7.3.3.5.8 GETNAME
GETNAME determines thenameappearing ontheentrystatement ofasubprogram.
CALLGETNAME(Z,NAME)
Z=Entrystatement imagebuffer.
NAME:Wordwhere thenameisreturned, left-justified filled withblanks.
7.3-13 (3/I/71)&lt;/p&gt;
&lt;p&gt;ARGBUF(IARG+O)
ARGBUF(IARG+I)
ARGBUF(IARG+2)
ARGBUF(IARG+3)
ARGBUF(IARG+4)NASTRAN SUPPORT PROGRAMS
7.3.3.5.9 NAFtARG
N_ARG operates onanykindofanentry statement (SUBROUTINE orENTRY) andreturns abuffer
ofdata about theentry.
CALLNAMARG(ARGBUF,IARG)
ARGBUF =General buffer where data istobeplaced.
IARG =Nextlocation ofARGBUF which maybefilled.
Onreturn thefollowing values will havebeenplaced inARGBUF.
=Location ofentry
=Entry name
=Number ofnonstandard returns intheentry statement
=Number ofarguments
=BCDnameofthefirst argument
ARGBUF(IARG+3+ARGBUF(IARG+3)) =BCDnameofthelastargument
7.3.3.5.10 PACKCD
PACKCD packs acharacter intotheoutput card image. Itwill generate continuation cards
asneeded.
CALLPACKCD(CHAR,1OPT)
CHAR =Wordwith theleft-justified character tobepacked.
0implies continue thecurrent statement.
1implies startanewstatement.
2implies startthefirststatement atZ(1),theopencorearrayinblankcommon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2implies startanewstatement atZ(IBPT).
7.3-14 (3/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
7.3.3.5.11 INSERT
INSERTinsertsnewentriesintomultiple-entry subroutines ifrequired,andconvertsthe
oldentriesintocommentstatements.
CALLINSERT(IDK,NDK,ARGS,jARGS,ARGBUF,IARG,STARS)
IDK
NDK
ARGS
JARGS
ARGBUF
IARG
STARS=Pointertothefirstwordofthesubprogram inopencore.
=Pointertothelastwordofthesubprogram inopencore.
=Arraycontaining theunionofargumentnames.
=NumberofnamesinARGS.
=Buffer produced byNAMARG containing entry argument data.
=Length ofARGBUF.
=Number ofasterisks tobeplaced onmainentry.
7.3.3.5.12 UNPKZ
UNPKZ unpacks thenextcharacter ofastatement, automatically considering continuation
cards.
CALL UNPKZ
COMM_M/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZW(_RD
ZCHAR
CHAR=Pointer tothefirst word ofastatement.
=Pointer tothetentative lastwordofastatement.
=Pointer totheactual lastwordofastatement.
=Pointer tothecurrent wordofopencorebeing workon.
=Lastcharacter position unpacked, 0&amp;lt;ZCHAR &amp;lt;6.
=Character unpacked.
7.3-15 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.13 PACKZ
PACKZpacksacharacter intoastring.
CALLPACKZ(IBUMP,CH)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZWORD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZWORD
ZCHAR
CHAR
IBUMP
CH
7.3.3.5.14SeeUNPKZ, section 7.3.3.5.12
_0ifpointers arenottobealtered.
0ifautomatic pointers areused.
=Character tobepacked.
PACK1
PACK1packsaspecific character intoaspecific wordofcore.
CALLPACKI(WORD,J,CHAR)
WORD=Wordwherecharacter willbeplaced.
j=Character position, 1to6,counting fromleftwhere thecharacter willbe
placed inW_RD.
CHAR=BCDcharacter left-justified.
7.3.3.5.15 UNPK(function)
UNPKunpacks aspecific character fromaspecific wordofcore.
CHAR=UNPK(W_RD,J)
WORD=Wordofcorewhere character tobeunpacked resides.
J=Character position, 1to6,counting fromleft.
7.3-16 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
CHAR=Characterreturned,left-justified andfilledwithblanks.
7.3.3.5.16 ZW_RD
ZW_RDunpacksthenextonetosixcharacters fromastatement, ignoringblanks,andpacks
themintoasingleword,left-justified andfilledwithblanks.
CALLZW_RD(NAME,JCHARS)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE=
JSTATE=
LASTWD=
SeeUNPKZsection7.3.3.5.12
ZWORD=
ZCHAR=
CHAR=
NAME=Wordwherethecharacters arereturned.
JCHARS=Numberofcharacters desired.
7.3.3.5.17 NAMEZ
NAMEZfillsoutanametosevencharacters with&amp;quot;Z&amp;rsquo;s&amp;quot;ontheright.
CALLNAMEZ(NAME,NEWNAME)
NAME
NEWNAME
7.3.3.5.18=Single word with name init.
=Seven word buffer where theseven characters ofthenewname will be
returned, each left-justified andfilled with blanks.
ZNAME
ZNAME isthesameasNAMEZ (7.3.3.5.17) except thatthenameisfilled with&amp;quot;Z&amp;rsquo;s&amp;rdquo;
left.onthe
7.3-17 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.19 ORF(function)
ORFperforms thelogical sumoftwowords.
RESULT =ORF(W_RDI,WORD2)
7.3.3.5.20 LSHIFT (function)
LSHIFT performs logical shiftofawordn-bits totheleft. High-order bitsshifted out
arelast;vacated low-order bitpositions arezero-filled.
RESULT =LSHIFT(WORD,N)
W(_RD =Wordtobeshifted. (Itsnotaltered)
N =Number ofbitstoshiftleft.
RESULT =Returned valueofshifted word.
7.3.3.5.21 RSHIFT (function)
RSHIFT performs arightshiftwiththedualcharacteristics ofLSHIFT. Seesection
7.3.3.5.20.
7.3.3.5.22 LOCF(function)
LOCFdetermines theabsolute location ofavariable address.
RESULT =LOCF(W_RD)
W@RD =Varaible whose address isdesired.
RESULT =Returned address ofWORD.
7.3.3.5.23 FIELDLN
FIELDLN returns thenumber ofwordsofcoreavailable forcodeanddatastorage.
CALLFIELDLN(L)
L=Number ofwordsofcoreavailable Lmustbesettozerobefore callismadeto
FIELDLN.
7.3-18 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5.24 D_UT
DKOUT outputs theconverted deck.
through 80ofeach card image.
CALL DKOUT(IDK,NDK)
IDK
NDK =Itplaces thename andsequence numbers incolumns 73
=Pointer tothefirst word oftheconverted deck inopen core.
Pointer tothelast word oftheconverted deck inopen core.
7.3.3.5.25 DRIVES
DRIVES generates adriver deck foreach entry point ofthesubprograms that have multiple
entries.
CALL DRIVES(ARGBUF,IARG,ARGS,JARG)
ARGBUF =Buffer ofnames andargument lists foralltheentries asprepared byNAMARG.
Seesection 7.3.3.5.9.
IARG =Length ofARGBUF
ARGS =Buffer where DRIVES will place theunion ofallarguments found inARGBUF.
JARG =Length ofARGS.
7.3.4 UseoftheSCP
TheSCPoperates onaninput file ofsubprograms tobeconverted. This input file need
only consist ofFORTRAN card images inaform capable ofbeing read byCDC6000 series formatted
READ statements. These card images, thus, must beinCDC6000 series display code. Thefile
maybeconstructed such that each deck isalogical record, orthecard images ofalldecks may
becontinuous. TheFORTRAN code oftheroutines tobeconverted areassumed tobe&amp;quot;correct,&amp;quot;
i.e., compilable ontheUNIVAC ll08 ortheIBMS/360.
Toexecute theprogram, compile allroutines oftheSCPplacing theobject decks onsome
file, e.g., SCPR. Then execute theprogram using thecontrol card:
SCPR(OUTFILE,INFILE).
where INFILE isthefile name where thecode tobeconverted istobefound, andOUTFILE iswhere
theoutput code istobeplaced. Theoutput will beoneCDC6000 series logical record peroutput
7.3-19 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
subroutine ordriver deck.
Theprogram should beexecuted withapproximately 130,0008 wordsofcore. Thisamount will
allowthehandling ofthelargest subprogram within NASTRAN. Figure 6showsasample decksetup
foranSCPrun.
7.3.5 SCPFlowcharts
Thissection contains flowcharts fortheroutines comprising theSCP.
andthecorresponding routines are:Thefigure numbers
Figure Number Routine No.ofSheets
7 C_NVS_U 1
8 MULTEN 2
9 NAMARG 1
I0 DRIVES 2
II RE_RDR 3
12 NSRETN 4
7.3-20 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM (SCP)
SUBROUTINE 2(tobeconverted)
&lt;br&gt;
SUBROUTINE 1(tobeconverted_
789
OBJECT DECKS OFSCP
JOB,OI ,I00,I30000.&lt;br&gt;
Figure 6.Sample decksetup foranSCPrun.
7.3-21 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C_NVSOU
_ Enter _
Determine Amount
ofCore Available
IPrint aLinel
Read Card
Images for
OneDeck
From Input File
IMoveDeck IDowntoEnd
ofOpenCore
CalIMULTEN
forMultiple
Entry
Process ing
Call NSRETN
forNonstandard
RETURN ProcessingYes
Yes
CalIDKOUT
toOutput
theConverted
DeckIRewind theConverted
Deck Output
File
fPrint EOFMessage !
ICallREORDRforDeclarative
Statement
Reordering
l
Figure 7.Flowchart forCONVSOU.
7.3-22 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
RemoveENTRYWhich
_isAssumedtobea
&lt;em&gt;.JDummy EntryNeeded
[toCircumvent a
IUNIVAC ll08 Compiler
&lt;em&gt;Bug.MULTEN
Yes
CallNAMARG
toGetthe
NameandList
ofArguments From
theSUBROUTINE
Statement
Search Through
CardImages of
DeckforNext
ENTRYStatement
Yes&lt;/em&gt;
No
&amp;ldquo;SetTypeStatement IReorderin( FlagTrueJ=&lt;/em&gt; Return
w No
(es
i
i
Call NAMARG to 1GetName andList
ofArguments From
theENTRY Statement
I
Figure 8(a). Flowchart forMULTEN.
7.3-23 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Compare theArgument
ListsofAllEntries
intheSubprogram
Ye o
Yes
Add*&amp;lsquo;stothe
SUBROUTINE Statement
Argument Listto
Insure Maximum Count
Remove Argument
ListsFromAllEntries
Except theSUBROUTINE
Statement and
PrintaMessaqe
ToThisEffect
Figure 8(b). Flowchart forMULTEN.
7.3-24 (3/I/71)CallDRIVES
toGenerate Driver
DecksforAllthe
Entries inthe
Subprogram
LCallINSERT to
TurnAllCurrent
Entries IntoComment
Statements and
Insert New
EntryStatements
WithNewNames&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
NAMARG
_ Enter _
Extract Name
FromEntry
Statement and
PutitinBuffer
Extract the
Arguments and
PlaceThemin
theBuffer.
Maintain aCount
ofNonstandard
Returns and
Placeitinthe
Buffer
Figure 9.Flowchart forNAMARG.
7.3-25 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DRIVES
FormaListofthe
(Set-Theoretic) Union
ofArguments FromAll
theArgument Lists
StartDriver Deck
foranEntryby
Forming aSUBROUTINE
Statement Usingthe
Original Nameand
Arguments ofanEntry
I Form C_MM_N/SYSTEM/ i  i ii(1) I
I Form I
_MM_N/ZZ&amp;hellip;namel/IIIIIOI &amp;hellip;..lllllOn
where, n=totalnumber ofarguments I
intheunionlist,andnamel istheI
nameoftheoriginal primary entry I
point
II ormI NNNNNNN=L_CF(IIIIIII(1))-I
lFormastatement foreachargument
ofthefollowing form
IIIIIi-=L_CF(arg)-NNNNNNN
where argistheargument, andi
isitsposition itheunion list
Figure lO(a). Flowchart forDRIVES.
7.3-26 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P108</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_108/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Form
CALLnamei(lllllll(lllllOl),lllllll(lllll02) &amp;hellip;..lllllll(lllllOn))
where, nameiisthenameofentrydriver deckisfor,filled outon
righttosevencharacters withZs,andnisthenumber ofarguments
intheunionlistofallarguments.
Addnonstandard returns toprevious
CALLif*&amp;lsquo;swereinoriginal entry.
Form,
RETURNS(nl,n 2&amp;hellip;..nk)
wheretheniaretheFORTRAN
statement numbers associated
withtheknonstandard returns
Formadditional returns ifnonstandard
returns wereplaced ontheCALLstatement,
RETURN RETURN1
RETURN RETURNk
where, kisnumber ofnonstandard returns
possible.
Call DIq_UTtoOutput the
DriverDeck
YeS&amp;rsquo;No
C Return _
Figure lO(b). Flowchart forDRIVES.
7.3-27 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
REBRDR
(Entry)
PrintMessage [
andDo I
NotOrder I
I (Return
MovetheDeckI
FromOpenCorei
toDimensioned i
Arrays i
I
Initialize TyPEArrayofLength i
TentoZero,Setting TYPE(1)=1200I
I TY
Position Pointers
toLastStatement
ofLastDeclarative
Statement ProcessedYes
Figure ll(a). Flowchart forREORDR.
7.3-28 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
JPosition Pointers toI
Next Card and J
CalICDTYPE I
toDetermine itsTypeI
No
Determine Where
EndofStatement
Lies, That is,How
Many Continuation
Cards andEmbedded
Comments Are
Present
_r
Move This Complete
Statement
Under Last Declarative
Statement Moved
byMoving the
Cards I_anedi ately
Above itDown.
(SHUTTLE-EXCHANGE)
_r
TYPE(This Type): I
TYPE(This Type)-l ]
YesYe:;
r
TYPE(This Type)+l
No
Figure ll(b). Flowchart forRE_RDR.
7.3-29 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
No
IMoveDeckBackIIntoOpenCore
Block
1
Figure ll(c). Flowchart forREORDR.
7.3-30 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Move Card
Intothe
Output Deck
CoreSpace
INo
(Return)NSRETN
,lInitialize Pointers
ForOutput Deck
CoreSpace and
Input DeckCore
Position.
Position to( NextCard
N°_e s
N_Yes
Figure 12(a). Flowchart forNSRETN.
7.3-31 (3/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
es
IN°
YPosition to
Statement Contained
ontheLogical
IF
Figure 12(b). Flowchart forNSRETN.
7.3-32 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
No
COUNT theNumber 1 of*&amp;rsquo;s
1Convert SUBROUTINE
Statement While Moving
ittotheOutput
Deck Core Space.
Figure 12(c). Flowchart forNSRETN.
7.3-33 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
it is Moved to the
Output Deck Core
Convert RETURNi
to RETURN RETURNi
as it is Moved to
Output Deck Core Space.
Figure 12(d). Flowchart for NSRETN.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P11</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_011/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.7 BPPCl(TABLE).
Description
Output loadvector requests (pset,S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
1002
0
Subcase number
Frequency
0
0
LoadsetID
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _reneat
Pointtype _or
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)(each
I(TI), I(T2), I(T3), I(RI), i(R2), l(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeo_tput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=5=real
=real/imaginary
=magnitude/phase
5.Pointtype
Ii=gridpoint=scalar point
= =extrapoint
=modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-94&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.28.8 CQGI(TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Wor_.__dd T_e Item
0 Header record
l I
2 I
3I
4 I
5 I
6 I
7I
8I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+devicecode )reoeat
Point type _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))noint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!=realFormat code = real/imaginary
magnitude/phase
4.Approach code =I,2,3,7,orlO
5.Point typeli=gridpoint==scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-95&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.28.9 _QBGI (TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code +lO&lt;em&gt;aDDroach code
3
0
Subcase number
Load setID
0
0
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=printandpunch
!=real==real/imaginary
=magnitude/phase
4.Approach code=4
5.Pointtype =
li=gridpointscalar point
extrapoint
modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-96&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.10 _BQGI (TABLE).
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
Modenumber
Eigenvalue
O
0
Format code
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}ooint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
li=real==real/imaginary
=magnitude/phase
4.Approach code =8
5.Point type =
Ii:grid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-97&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.11 _QPI(TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code+lO&lt;em&gt;apDroach code
3
0
Subcase number
Time
0
O
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;foreach
R(TI),R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Formatcodeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6=real
=real/imaginary
:magnitude/phase
5.Point typeIi:gridpoint= =scalar point
=extrapoint
=modalpoint
Table Trailer
Words I-6contain nosignificant values.
2.3-98&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.12 _QPCI (TA3LE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, complex).
Tab]e Format
Record Word Type Item
0 Header record
l I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
I0 I
II-50
51-82 B
83-114 B
IIa&amp;ndash;I_fU BDevice code+lO&lt;em&gt;approach code
I003
0
Subcase number
Frequency ormodenumber
Ooreigenvalue (real oart)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Lauel
l I
2 I
3-8 R
9-14 RlO&lt;/em&gt;point ID+device code }reoeat
Point type (for
R(TI), R(T2), R(T3) R(RI), R(R2), R(R3)&lt;em&gt;each
I(Tl), I(T2), I(T3)&lt;/em&gt; I(RI), I(R2), I(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
lixyoutputonly= =print
=punch
=print andpunch
3.Format codeli=real= =real/imaginary
=magnitude/phase
4.Approach code =5,or9
5.Point type
ligrid point= =scalar point
:extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-99(8/1/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.13 _PHIG(TABLE).
Description
Output eigenvector requests (gset, S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
7
0
Subcase number
Mode number
Eigenvalue
O
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code }repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
&lt;em&gt;iotes
I.Records Iand2arerepeated foreachvector tobeoutput.
2.Device code
3&lt;/em&gt;
4.Format codeli=xyoutput only= =print
=punch
=print andhunch
I!:real==real/imaginary
=magnitude/phase
Approach code=2,or8
5.Pointtype =
li=gridpointscalar point
extrapoint
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-100&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.14 _CPHIP (TABLE).
Description
Output eigenvector requests (pset,S_RTI, complex).
Table Format
Record Word
1 I
2 I
3 I
4 I
5 I
6 R
7 R
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
l I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
I007
0
Subcase number
Mode number
Eigenvalue (real part)
Eigenvalue (imaginary part)
0
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type {for
R(TI), R(T2), R(T3),R(RI) R(R2!, R(R3)&lt;em&gt;each
I(TI),I(T2), I(T3), I(RI)&lt;/em&gt; I(R2},l(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= :print
=punch
:print andpunch
li:real= :real/imaginary
=magnitude/phase
4.Approach code:9
5.Point type =Ii gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-101&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.15 OESl(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 R/I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code +lO&lt;em&gt;approach code
5
Element type
Subcase number
Time, Load setID,ormode number
Eigenvalue or0
0
Load setIDor0
Format code
Number ofwordsperentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
{!=real3.Format code = real/imaginary
magnitude/phase
4.Approach code =l,2,3,6,7,orlO
TableTrailer
WordsI-6contain nosignificant values.
2.3-102&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.16 _ESBI (TABLE).
Description
Output ele(,ent stress requests (S_RTI, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-114 B
II5-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
5
Element type
Subcase nu_er
LoadsetID
0
0
Q
FBrmat code
Number ofwords oerentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;elementID+device code
Element stress data
See2.3.51 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
!=real= =real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-I03&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.17 _BESI(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedDevice code+lO&lt;em&gt;approach code
5
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element stress data IforeachSee2.3.51 fordetails element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Devicecode=
3,Format codeli:xyoutput onlyprint
punch
print andpunch
I!=real= =real/imaginary
=magnitude/phase
4.Approach code =8
Table Trailer
Words I-6contain nosignificant values.
2.3-104&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.18 _ESCI(TABLE).
Descri ption
Output element stress requests (SBRTI, complex).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 RII
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
!!5-146 BDevice code+lO&lt;em&gt;approach code
I005
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (real part)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =NV_S
Notdefined
Title
Subtitle
Label
2 l I
2-NWDS MixedlO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
li:realFormat code = real/imaginary
magnitude/phase
4.Approach code =5,or9
Table Trailer
Words I-6contain nosignificant values.
2.3-I05&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.19 _EFI(TABLE).
Description
Output element force requests (SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 :/R
7 I
8 I
9 I
IO I
ll-5O
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase number
Time, loadsetID,ormodenumber
0oreigenvalue
0
LoadsetIDor0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only: =print
=punch
=print andpunch
li=real= =real/imaginary
=magnitude/phase
4.Approach code =l,2,3,6,7,orlO
Table Trailer
Words I-6contain nosignificant values.
2.3-I06&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.20 _EFBI(TA3LE).
Description
Output element force requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Headerrecord
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase nu_er
Load setID
0
0
0
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsreneat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-107&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.21 OBEFI(TABLE).
Description
Output element forcerequests (SORT1, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;annroach code
4
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwordsperentryinnextrecord =N!_DS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element forcedata Iforeach See2.3.52 fordetails element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
{!=real3.Format code= =real/imaginary
=magnitude/phase
4.Approach code=8
TableTrailer
WordsI-6contain nosignificant values.
2.3-108&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOHS
2.3.28.22 BEFCI(TABLE).
Description
Output element forcerequests (S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
1004
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (realDart)
0oreigenvalue (imaginary part)
LoadsetIDor0
Format code
Number ofwords oerentryinnextrecord :N_,tDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsIreoeat
foreach
element
i&amp;rsquo;_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
!:real3.Format code =real/imaginary
magnitude/phase
4.Approach code=5,or9
TableTrailer
Words I-6contain nosignificant values.
2.3-109&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.28.23
Description
NotePUGVl (matrix -seenotebelow)
PUGVl contains thetranslation components ofUGVIrotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words mustbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUGVlexcept word l=O,andword6=0(seesection 2.3.36.1).
2.3-II0&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.24
Description
NotePUBGVI (matrix -seenotebelow)
PUBGVI contains thetranslation components ofUBGV rotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words n_stbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUBGVwithword1=O,andword 6=O.
2.3-III&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.25 PPHIG (matrix -seenote below)
Description
PPHIG contains thetranslation components ofPHIG rotated tothebasic coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=2
Word 3=mode number
Word 4=eigenvalue (X)
Matrix Trailer
Trailer issame asthat forPHIG with word l=O,andword 6=O,(see section 2.3.27.4).
2.3-112&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOiIS
2.3.28.26 PUGV(matrix-seenotebelow)
Description
PUGV contains thetranslation components ofUPV(excluding extra points) rotated tothebasic
coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=3
Word3=0
Word4=time
Matrix Trailer
Trailer issameasthatforUGVwithword1=O,andword6=O,(seesection 2.3.27.1).
2.3-113&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P12</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_012/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29 DataBlocks Output FromModule DPD
2.3.29.1 GPLD(TABLE)
Description
GridPointListDynamics.
Onelogical record whichcontains alistofallgridpoints, scalar points andextrapoints
inthemodelininternal sort.
Table Format
Record Word Type
0
1 1 I
n I
2
TableTrailer
Word1
Word2-6Item
Header record
IDforfirst point
IDfornthpoint
End-of-file
=number ofgridpoints +number ofscalar points +number ofextrapoints.
=zero.
2.3.29.2 SILD (TABLE)
Description
Scalar Index List Dynamics.
Twological records. First logical record contains scalar index values inthep-displace-
ment setforeach point inthedynamics model (internal order). These values aredefined
asfollows:
SILDl =l
(SILD. +6ificorresponds toagrid point
SILDi+ l_SILD I+lificorresponds toascalar oranextra point
Thesecond logical record contains anequivalence between scalar index values inthe
g-displacement setandscalar index values inthep-displacement set.
2.3-114&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
TableFormat
Record
0
l
2
3
Table TrailerWord Type Item
Header record
1 I Scalar indexforfirstpoint
• _ &amp;quot;
n I Scalar indexfornthpoint
I,2 I SILvalue, SILDvalue
2m-l,2m I SlLvalue, SlLDvalue
End-of-file
Word1=degrees offreedom inthep-displacement set(LUSETD).
Word2=number ofextrapoints.
Word3-6=zero.
2.3.29.3 USETD (TABLE)
Description
Displacement setdefinitions table dynamics.
USETD contains onelogical record. Each word corresponds toeach degree offreedom inthe
p-displacement set(ininternal order) andcontains ones inspecified bitpositions indicat-
ingthedisplacementsets towhich thepoint belongs.
Table Format
RecordWord Type Item
Header record
1 L Mask forfirst degree offreedom
n L Mask fornthdegree offreedom
End-of-file
Notes
Bitpositions forthevarious displacement sets aredefined asfollows:
LdIfelnelPlelsb]Sgl _IaIf]nJgIrl°ls]mI
17181920212223242526272829303132
2.3-115&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Table Trailer
Word1=
Word2=
Word3=
Word4=
Word5:
Word6=degrees offreedom inthep-displacement set(LUSETD).
number ofextrapoints.
zero.
logical &amp;ldquo;or&amp;quot;ofallUSETDmasks.
zero.
zero.
2.3.29.4 EED(TABLE)
Description
Eigenvalue Extraction Data.
TheEEDcontains onelogical
EIGP, EIGR).
Table Format
Record Word
0
1
2
3
4
5
Detailed format forEIGBdata:
Word Type
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21record foreacheigenvalue extraction cardtype(EIGB, EIGC,
Eachlogical record contains datafromallcardsofagiventype.
Item
Header record
EIGBdata(ifEIGBcards inbulkdata)
EIGCdata(ifEIGCcards inbulkdata)
EIGPdata(ifEIGPcards inbulkdata)
EIGRdata(ifEIGRcards inbulkdata)
End-of-file
Itern
107,I,0
SetID
Method
F,F1 2
Ne,Nd,Nz
E
Norm
Ifnorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue in
a-set ofnormalization point
Notdefinedrepeated
foreach
EIGBcard
inbulkdata
2.3-I16 (711170)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Detailed format forEIGCcard:
Word Type
I-3 I
4 I
5-6 B
7-8 B
9 I
I0
II R
12-13
14-15 R
16-17 R
18 R
19-20 I
21
14+8k-21 +8k IItem
207,2,0
SetID
Method
Norm
IfNorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue inanalysis
setofnormalization point
Notdefined
E
Notdefined
_a&amp;rsquo;_a }repeated
_b&amp;rsquo;_b Iforeach region
Ne,Nd definition
Notdefined
-l(k=number ofregions)
Detailed format forEIGPcard:
Word Type
1-3 I
5 I
6-7 R
8 IItem
257,4,0
SetID_repeated for
_,m&amp;gt;each EIGPcard
M _inbulkdata
Detailed format forEIGRcard:
Word Type Item
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21307,3,0
SetID
Method
F,FI 2
Ne,Nd,Nz
E
Norm
Ifnom=&amp;ldquo;P_INT&amp;rdquo;, SIkvaluein
a-setofnormalization point
Notdefinedrepeated
foreach
EIGRcard
inbulkdata
Table Trailer
Word l=
bit17=IifEIGBrecord exists
18=lifEIGCrecord exists
19=lifEIGPrecord exists
20=lifEIGRrecord exists
other bits=0
Word 2-6=zero.repeated
foreach
EIGCcard
inbulkdata
2.3-117 (7/1/70)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29.5 EQDYN(TABLE)
Description
Equivalence between external points andscalar indexvalues -dynamics•
EQDYNcontains twological records. Thefirst record contains pairsofexternal point
numbers andscalar indexvalues inthep-displacement setforthepoints inexternal order.
Thesecond record isessentially thesameasthefirstexcept thatthetypeofp_(grid,
scalar, extra) iscoded inthesecond wordofthepair.
TableFormat
Record Word Type
1,2 I
2n-l,2n IItem
Header record
IDforfirstpoint, scalar indexforfirstpoint
IDfornthpoint, scalar indexfornthpoint
3
Note
Type=
TableTrailer
Word1
Word2
Word3-61,2 I
2n-I,2n IIDforfirst point, lO&lt;em&gt;scalar index +type
IDfornthpoint, lO&lt;/em&gt;scalar index +type
End-of-file
I!forgridpointforscalar point
forextrapoint
=number ofgridpoints +number ofscalar points +number ofextrapoints
indynamics model•
=number ofextrapoints•
=zero.
2.3-118&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.29.6 TFP_OL (TABLE).
Descri ption
Transfer Function Pool.
TheTFP_L datablock containsonelogical record foreach transfer function setdefined in
thebulkdataonaTFbulkdata card. Point andcomponent values areconverted torowand
column numbers inthep-displacement set.
Table Format
Record Word T_pe Item
O Header record
l I
2 I
3-5RSetID
65536*column n_er +rownun_er
Coefficientsrepeated foreE;chsetof
non-zero terms
Same format asfirst record
n+l End-of-file
Table Trailer
Word l
Word 2-6=nu_U_er oftransfer function sets.
=zero.
2.3.29.7 DLT(TABLE).
Description
Dynamic LoadsTable.
Theheaderrecord oftheDLTcontains asummary ofalldynamicloadsetsdefined inthe
problem. Thefirst record oftheDLTcontains allDLgAD cards (ifDLCAD cards havebeen input).
Each succeeding record contains alldataforonedynamic loadset.
TableFormat
Record Word Type Item
I-2 B
3 I
4-3+m I
4+m-3+m+n IDatablock name
m=number ofDL_AD setID&amp;rsquo;s
SetID&amp;rsquo;sonDL_AD cards
SetID&amp;rsquo;sonRL_ADI, 2andTL_ADI, 2cards
l
2
3-4I
R
R,ISetID
Scale factor
Scale factor, setID
-!,-lrepeated
foreach
DL_AD
card
2.3-I19 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKA;_DTABLEDESCRIPTIONS
Record Word Type Item
n+2l I
2 I
3-8
9 I
10-12 RDynamic loadcardtype
&lt;em&gt;=0notimedelays
Ip0timedelays
SeeNotes
SILnumber Irepeated foreach
A,&lt;/em&gt;,e_dynamic loadset
End-of-file
Notes
l°IfnoDL_ADcardshavebeeninput, thethirdwordoftheheader record iszeroandthe
DL@ADrecord doesnotexist. Therefore, record 1oftheDLTcorresponds totheload
setdefined inword4oftheheader record.
2.DL_AD-set ID&amp;rsquo;sareinsortbysetID.Inrecord I,setID&amp;rsquo;swithin aDL_ADcardare
insort.
3.Within otherrecords, dataisinsortbySILnumber.
4.Formats bydynamic loadcardtypeareasfollows:
1=RL@ADI
Word _ Item
3 I Table IDforC(f)
4 I Table IDforD(f)
5-8 Notdefined
2=RL@AD2
Word Type Item
3 I Table IDforB(f)
4 I Table IDfor@(f)
5-8 Notdefined
3:TL_ADI
Word Type Item
3 I Table IDforF(t)
4-8 Notdefined
4=TL_AD2
Word Type Item
3-4 R TKI,TK2
5-6 R IVK&amp;rsquo;_K
7-8 R nK&amp;rsquo;_K
TableTrailer
WordI:GIN_filenameofDLT.
Word2-6=undefined.
2.3-120&lt;/p&gt;
&lt;p&gt;DATABLOC/,DESCRIPTIOHS
2.3.29.8 PSDL(TABLE)
Description
PowerSpectral Density List.
Thefirstlogical record ofthePSDLcontains RANDPS data. Subsequent logical records
contain RANDTdata,onesetperlogical record. EachPJ_NDTlogical record contains a
sorted listofunique timelagsdefined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I RANDTsetID
I
2+n I RANDTsetIDn
1 I RANDPS setID
2 I LoadsetID
3 I LoadsetID
4,5 R Complex number
6 I Table ID
i-m R Timelagsrepeated
foreach
RANDPS
cardin
bulkdata
n+l
n+2Sameformat asrecord 2
Databelongs toRANDTsetIDn
End-of-file
Notes
I.
2,RANDPS cardsmustbepresent fordatablocktoexist. Therefore, record onealways
contains RANDPS data.
IfnoRANDTI orRANDT2 cardsarepresent inthebulkdata,theheader record will
contain exactly twowords andrecord twowillbeanend-of-file,
TableTrailer
_number ofRANDTsets,orWord1
65535 ifnoPJ_NDTsetsexist.
Word2-6=zero.
2.3-121&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.9 FRL(TABLE)
Description
Frequency Response List.
TheFRLcontains onelogical record foreachdifferent frequency setdefined inthebulk
data. Eachrecord contains asorted listoftheunique frequencies defined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I SetID
1
2+n I
1 l-m R
n l-k RSetIDn
Frequencies belonainq tosetID
1
Frequencies belonging tosetIDn
n+l End-of-file
TableTrailer
Word1=number offrequency sets.
Word2-6=zero.
2.3.29.10 NLFT(TABLE)
Description
Non-Linear Forcing Table.
Theheader record oftheNLFTcontains asorted listofsetidentification numbers forall
N_LINsetsdefined inthebulkdata. Eachloqical record oftheNLFTcontains alldatafor
asingle set.Pointandcomponent numbers ontheN_LINcardsareconverted toscalar index
values inboththed-ande-displacement sets.
TableFormat
Record Word Type Item
0 1,2 B Datablock name
3 I SetID
1
2+n I SetID
n
2.3-122&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type
I
I
type=1=
type=2=
type=3=
type=4=
type:1:
type:2:
type=3=
type=4=Item
Typeofnonlinear load(l_type=4)
SILvalue ind-set
SILvalue ine-set
Scale factor
SILvalue ind-set
SILvalue ine-set
Table ID(inteqer)
SILvalue ind-set(inteqer)
Scale factor (real)
Scale factor (real)
Notdefined
SILvalue ine-set (inteqer)
Notdefined
Notdefinedrepeated for
eachN_LIN
card inset
Sameformat asrecord I.
Databelongs tosetIDn.
n+l End-of-file
Note
Within each record, thedataissorted onwordZofeach8-word entry intherecord.
Table Trailer
Word l=number ofN_LIN sets.
Word 2-6=zero.
2.3-123&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.11 TRL(TABLE).
Description
Transient Response List.
Theheader record oftheTRLcontains alistofalltransient initial condition set
identifications inthebulkdata. Subsequent logical records contain TICdataforeach
set(onesetperlogical record). IfTSTEPcardsareoresent inthebulkdata,thisdata
follows theTICdata,onelogical record foreachTSTEP set.
TableFormat
Record Word _ Item
0 1,2 B Datablockname
3 I Number ofTICsets
4 I SetID
I
3+n I
4+n I
1 I
2,3 RSetIDn
Degrees offreedom inthed-displacement set
SILvalueind-set _repeated foreachinitial
Uo,V° [condition inset
Sameformat asrecord 1
Databelongs tosetIDn
n+l
n+m1 I TSTEP setID
2 I N_repeated for
3 R Atleach interval 4 I NOinset
Sameformat asrecord n+l
n+m+l End-of-file
Notes
I.
2.
3.Datawithin eachTICrecord issorted onword1ofeach3-word entry.
Ifword3oftheheader record =O,thenthefirstlogical record oftheTRLcontains
TSTEPdata.
IfTSTEPdataisnotpresent inthebulkdata,andend-of-file willfollow thelast
TICrecord.
TableTrailer
Word1=number ofTICsets.
Word2=number ofTSTEP sets.
Word3-6=zero.
2.3-124&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIOAS
3.30 Data Blocks Output Froni idodule READ
Descri rti co
A - r!ml Ei:&lt;del&gt;envalue Tshle
a
Table For&lt;/del&gt;!iat
2ecord :lord Tvne - - I tell:
0 tlcader record
GFP ID record
1 I 2 1
2 I 9
3 I 0
e-9 I ?
19 I 7
11-50 Not defined
51-146 Title, subti tic, and label frolii /QUTnl&amp;rsquo;T/
GFP data record
1 I vo&amp;amp; IJI~&amp;rsquo;&amp;gt;?~ * ? Extraction order
3 l? h - ?i jenvalu?
4 K f =m
5 K w = f/2n
G R Generalized mass
7 R Generalized stiffness&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The seven data words in record 2 repeat for each eigenvalue found in READ.
Table Trailer
Mon-zero trailer
Cescription
[ a ] - Eigenvectors nlatrix giving the eigenvectors (disp1acen:ents) in the a set.
a
Matrix Trai ler
Number of columns = number of eigenvectors found in READ
Number of rows = a
Form = rectangular
TY pe = real single precision&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.30.3 MI(MATRIX)
Descriptior_
[mi]-ModalMassMatrix
MatrixTrailer
Number ofcolumns =numberofeigenvectors foundinREAD
Number ofrows =number ofeiQenvectors foundinREAD
Form =gener_l
Type =realsingle precision
2.3.30.4 _EIGS (TABLE)
Description
RealEigenvalue Summary Table
TableFormat
Record Word Type
Header record
1 I 21
2 I 9
3 I 2
1
4
4 I 0
5 I 0
6 I 0
7 I 0
8 I 0
9 i 0
10 I 0
Words 11-17 depend onthemethod used.Itern
Determinant Method:IfInverse PowerMethod
IfDeterminant Method
ifGivens Method
II I Number
12 I Number
13 I Number
14 I Number
15 I Number
16 I Number
17 I Reason
l
2ofeigenvalues extracted
ofpasses through starting points
ofcriteria changes
ofstarting point moves
oftriangular decompositions
offailures toiterate toaroot
fortermination
-Allrequested roots formed
-Outofregion predictions fromevery
starting point
-Insufficient timetoextract another
root
-Everywhere singular matrix
2.3-126 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Itern
Inverse PowerMethod:
II
12
13
14
15
16
17Number ofeigenvalues extracted
Number ofstarting points used
NumbEr ofstarting points moved
Number oftriangular decompositions
Number ofvector iterations
Dummy
Reasons fortermination
l-2Singularities encountered inarow
2-4Shifts while tracking oneroot
3-Regions completed
4-3*Number ofestimated roots werefound
5-Allroots ofproblem found
6-Number desired roots found
7-&lt;em&gt;outside maximum range
8-Insufficient timetoextract another
root
9-200iterations and1shiftpointmnve
before locating aroot
Givens Method:
II I Number
12 I Number
13 I Number
14. I &amp;hellip;&amp;hellip;..
15 I Dummy
16 I Dummy
i7 I Reason
l
18 R
19 I
20 I
21 I
22-50
51-146 Bofeigenvalues extracted
ofeigenvectors compLeted
offailures toconverge toaneigenvalue
ofc&lt;/em&gt;&amp;hellip;..toconverge toan_go_&amp;quot;&lt;em&gt;÷&lt;/em&gt;
fortermination
-Normal termination
3-Insufficient timetoevaluate eigenvectors
Value ofoff-diagonal element ofmodal massmatrix
having largest magnitude (zero where notapplicable)
Column of18inMI
Rowcf18inMI
Number ofoff-diagonal elements ofmodal mass
matrix thatfailtomeet error criterion
Notused
Title, subtitle, label
Records 2and3exist onlywhentheDeterminant Method isused.
1 I 21
2 I 9
3 I 3
4 I 0
5 I 0
6 Z 0
7 I 0
8 I 0
9 I 0
I0 I 6
11-50 Notused
51-146 B Title, subtitle, label
l I
2 R
3 R
4 R
5 RStarting point ID
&lt;em&gt;,-Starting point
=&lt;/em&gt;- Starting point
f=&lt;em&gt;/2&lt;/em&gt;-Starting point
Determinant at_,Words I-6arerepeated
foreach starting point
2.3-127 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
6Type
RItem
Scalefactor (powerofI0)
ofdeterminant !
End-ef-file
Table Trailer
Nonzero
2.3-127a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.31 DataBlocks Output From&amp;rsquo;_odule DS_GI
2.3.31.1 KDGG{MATRIX)
DescriFtion
Kd
[gg]
Matrix TrailerPartition ofdifferential stiffness matrix -gset.
Number ofcolumns =(!
_lumber ofrows =g
Form =symmetric
Type =realdouble precision
2.3-128&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.32
2.3.32.1
Description
[K_a]
Matrix TrailerData Elocks Output From HoduleSHP2
KDAA (MATRIX)
Partition ofdifferential stiffness matrix -aset.
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =real double precision
2.3-129&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTA[SLEDESCRIPTIONS
2.3.33 DataBlocks Output FromModulc DSHG2
2.3.33.1
Description
[Kb_]
Matrix TrailerKBLL(MATRIX)
Partition ofthestiffness matrix ofthefirstorderannroximation to
larqedisplacements -_set.
Number ofcolumns =
Humber ofrows =
Form =symmetric
Type =realdouble precjsi_on
2.3.33.2 KBFS(MATRIX)
Description
[K_s]-
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
largedisplacements.
Number ofcolumns =s
Number ofrows =f
Form =rectanqular
Type =realdouble precision
2.3.33.3 KBSS(MATRIX)
Description
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
larqedisplacements -sset.
Number ofcolumns =s
Number ofrows =s
Form =symmetric
Type =realdouble precision
2.3-130&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIO;_S
2.3.33.4 PBL(!IATRIX)
Description
I&amp;lt;}-Partition oftheloadvector ofthefirstorderapproximation tothe
largedisplacements -_set.
Matrix Trailer
Number ofcolumns =1
Number ofrows =
Form =rectangular
Type =realsingle precision
2.3.33.5 PBS(MATRIX)
Description
Partition oftheloadvector ofthefirstorderannroximation tothe
largedisplacement problem -sset.
Matrix Trailer
I_umber ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.o YBS(MATRIX)
Description
IY sl-Partition oftheconstrained displacement vector ofthefirstorder
approximation tothelargedisplacement vector -sset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.7 UBO_V (MATRIX)
Description
Io°blPartition ofthedisplacement vector ofthefirstorderapproximation tothe
largedisplacement problem -oset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =o
Form =rectangular
Type =realsingle precision
2.3-131&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO,&lt;em&gt;S
2.3.34
2.3.34.1 KGGXL(MATRIX).
Description
,x&lt;/em&gt;
[,ggJ -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.34.2 ESTL(TABLE).
DescriptionDataBlocks Outout FromModule PLAI.
Stiffness matrix oflinear elements exclusive ofgeneral elements -gset.
=g
=g
=symmetric
=realdouble precision
Element Summary TableforLinear Elements.
TheESTLcontains datacopied fromtheESTdatablock.
theESTLonlyifitisalinear element ofthemodel.
TaLleFormat
Sameformat astheESTdatablockoutput frommodule TAI.
TableTrailer
Word1=number ofelement entries inESTL.
Words 2-6=zero.Anelement&amp;rsquo;s ESTdataresides in
2.3-132&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P13</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_013/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.34.3 ESTNL (TABLE).
Descri ption
Element Summary Table forNon-Linear Elements.
TheESTNL, usedonlyinthePiecewise Linear Analysis Rigid Format, isconstructed fromthe
Element Sun,mary Table (EST). Itcontains onelogical record foreach element typeforwhich at
least oneelement ofthattypeisnon-linear (anelement isdefined tobenon-linear ifits
modulus ofelasticity isdefined asthefirst derivative ofastress-strain tabular function
input onaTABLESI bulkdata card) andforwhich arequest forstress output isfound. Thecon-
struction oftheESTNL isasfollows: theESTdatablock isreadandeachelement istested for
possible non-linearity. Iftheelement isnon-linear andtheuserhasrequested element stress
datatobeoutput, itselement dataiscopied ontotheESTNL datablock andthen initial stress
dataisappended. Theonly elements admissible totheESTNL are: RQD,TUBE, C_NR_D, BAR,TRMEM,
TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
l
2toN+l
i!.(. _._11&#39;4&amp;quot;1&amp;quot; IElement type (integer) }repeated for
Element ESTdata _repeated foreach !each admissible E!..mme._nt stress data_non-!inear element element tyne
Notes
l•
2.Nisthenumber ofwords intheESTdatasection.
Misthenumber ofstress words appended.
Thenumber ofrecords intheESTNL corresponds tothenun_Der ofseparate admissible
element types forwhich atleast oneelement isnon-linear.
Table TraiIer
Word l =total number ofelements intheESTNL.
Words 2-6=zero.
Detailed ESTNL Formats
R_D,C@NR_D:
Word Item
1-17
18
19
20
21ESTdata
E0,previobs strain value onceremoved, initially zero
,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven aMATIcard.
T,thepreviously calculated torsional moment, initially zero
2.3-133&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
Word
1-16
17-20Item
ESTdata
Sameaswor_s18-21fortheR_D.
BAR:
Word
1-42
43
44
45
46
47
48
49
5OItem
ESTdata
Go,previous strain value onceremoved, initially zero
E,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven onaMAT1 card
V1
V2
*Theprevious element forces, initially zeroT
HIa
_&amp;lsquo;I2a
TRMEM:
TRIAl:Word
1-21
22
23
24
25
26
2]7Item
ESTdata
co,previous strain valueonceremoved, initially zero
c,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially the
valueofEgivenonaHAT1card
_X
_yThecurrent membrane stresses, initially zero
°xy
Word
1-27
28-33Item
ESTdata
Sameaswords22-27fortheTRMEM
2.3-134 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
Word
34
35
36
37
38Mx
My
Mxx
Vx
=k
VyItem
Theprevious element forces, initially zero
TRIA2:
Word
1-27
28-32Item
Sameaswords 1-27fortheTRMEM
Sameaswords 34-38 fortheTRIAl
QDHEM:
Word
1-26
27-32Item
ESTdata
Sameaswords 22-27 fortheTRMEM
QUADI:
Word
1-32
33-38
39-43Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
QUAD2:
Word
1-26
27-32
33-37Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
2.3-134a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATA3LOCKDESCRIPTIONS
2.3.34.4 ECPTNL (TABLE).
Description
Element Connection andProperties Table for_Ion-Linear Elements.
TheECPTNL, usedonlyinthePiecewise Linear Analysis RigidFormat, isconstructed fromthe
ECPTdatablock. TheECPTNL contains onelogical record foreachgridpointorscalar pointof
themodel. Eachlogical record contains Element Summary Table (EST)dataplusinitial element
stress dataappended tothisdataforeachnon-linear element connected tothepivot point. (An
element isdefined tobenon-linear ifitsnmdulus ofelasticity isdefined asthefirstderivative
ofastress-strain tabular function inputonaTABLESl card). Theonlyelements admissible tothe
ECPTNL are:R_D,TUBE,C_NR_D, BAR,TRMEM, TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
1 l
2
3toN+2
N+3toN+M+2SILnumber for&amp;quot;Divot&amp;quot; arid
orscalar point(integer)
Element type(integer)}reDeated foreach
Element ESTdata _non-linear element
Element stress data )connected tothepivot
n+l End-of-filereheated
foreachorid
orscalar
nointinthe
model
Notes
I.Nisthenumber ofwordsintheESTdatasection.
Misthenund_er ofstress wordsappended. Thenumber ofstress wordsappended in
generating theECPTNL datablockisnotthesameasingenerating theESTNLdatablock.
2.nisthetotalnumber ofgridandscalar points inthemodel.
3.Ifallelements connected toapivotpointarelinear, thentherecord contains only
oneword,thepivotpointsetnegative.
TableTrailer
Word1=totalnumber ofelement entries intheECPTNL.
Words 2-6=zero.
Detailed ECPTNL Formats
R_D,C_NR_D:
Word
1-20Item
SameasESTNLdata. Noteword21oftheESTNL
isnotpresent intheECPTNL datafortheR_D,C_NR_D.
2.3-135&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
BAR:Word
1-19Item
SameasESTNLdata. Noteword20oftheESTNLisnot
present intheECPTNL datafortheTUBE.
TRMEM:Word
1-45Item
SameasESTNLdata. Notewords 46-50oftheESTNLarenot
present intheECPTNL datafortheBAR.
Word
1-27Item
SameasESTNLdata.
TRIAl:
TRIA2:Word
1-33Item
SameasESTNLdata. Notewords 34-38oftheESTNLarenot
present intheECPTNL datafortheTRIAl.
QDMEM:Word
1-27Item
SameasESTNLdata. Notewords 28-32oftheESTNLarenot
present intheECPTNL datafortheTRIA2.
Word
1-32 SameasESTNLdata.Item
QUADI:
Word
1-38Item
Same asESTNL data. Note words 39-43 oftheESTNL arenot
present intheECPTNL data fortheQUADI.
2.3-136 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
QUAD2:
Word
1-32Item
SameasESTNLdata. Notewords 33-37oftheESTNLarenot
present intheECPTNL datafortheQUAD2.
2.3-136a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.35 DataBlocks Output FromModule ADD
2.3.35.1 KGGSUM (MATRIX)
Description
Sumof[K_g] and[K_].
Usedonly inthePiecewise Linear Analysis Rigid Format andisequivalent to[Kgg].
Matrix Trailer
Number ofcolumns =g
Number ofrows =g
Form =symmetric
_vpe =realdouble precision
2.3.35.2 PG(14ATRIX)
Description
MatrixTrailer
Number ofcolumns
Number ofrows
Form
TypeIncremental loadvector used inPiecewise Linear Analysis.
=l
=g
=rectangular
=realsingle precision
2.3.35.3 KDAAM (MATRIX)
Description
Kdml-Thenegative of[K_a] (seesection 2.3.32).aa-
UsedonlyintheBuckling Analysis Rigid Format.
HatrixTrailer
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =realdouble precision
2.3-137&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.36 DataBlocks Output FromModule PLA2
2.3.36.1 UGVl(MATRIX)
Description
[uldMatrix ofsuccessive sumsofincremental displacement vectors -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.35.2 PGVI(MATRIX)
Description
1
[P_] -Matrix ofsuccessive sumsofincremental loadvectors -aset.
yonlyinthePiecewise Linear Analysis RiqidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precisionUsed
2.3.36.3 QGI(MATRIX)
Description
[qld
Matrix TrailerMatrix ofsuccessive sumsofincremental vectors ofsingle pointconstraint
forces -gset.UsedinthePiecewise Linear Analysis RigidFormat only.
Number ofcolumns =number offactors onaPLFACT bulkdatacard
humber ofrows =q
Form =symmetric
Type =realsinale precision
2.3-138&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.37DataBlocks Output FromModule PLA3.
2.3.37.1 _NLES (TABLE).
Description
Output tablefornonlinear element stresses.
Format
Sameformat as_ESItableoutput frommodule SDR2.
Note
ONLES iswritten insubroutine PLA32 ofmodule PLA3.
TableTrailer
Word 1 =total number ofelement entries inBNLES.
Word 2-6 =zero.
2.3.37.2 ESTNLI (TABLE).
Description
Element summary table fornonlinear elements -updated.
Used only inthePiecewise Linear Analysis Rigid Format, theESTNLI data block isthesame
astheESTNL data block except that theappended stress information isupdated. Seedata block
description forESTNL forfurther details.
Table Format
Same format astheESTNL data block.
Table Trailer
Word l =number ofelement entries inESTNLI.
Word 2-6 =zero.
2.3-139&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO_iS
2.3.38
2.3.38.1
DescriptionDataBlocks Output FromHodule PLA4.
KGGNL(MATRIX).
Stiffness matrix ofnonlinear elements -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =
Number ofrows =
Form =
Type =
2.3.38.2 ECPTNLI (TABLE).
Descriptiong
g
symmetric
realdouble precision
Element Connection andProperties TableforNon-Linear Elements -undated.
UsedonlyinthePiecewise Linear Analysis RigidFormat, theECPTNLI datablockisthe
sameastheECPTNL datablockexcept thattheappended stress information isupdated. See
description forECPTNL forfurther details.
Table Format
Sameformat astheECPTNL datablock.
TableTrailer
Word1:totalnumber ofelement entries inECPTNLI.
Word2-6=zero.
2.3-140&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.39 DataBlocks Output FromModule CASE.
2.3.39.1 CASEXX (TABLE).
Description
CaseControl datatable fordynamics problems.
Table Format
Theformat oftherecords isexactly likeCASECC, (seesection 2.3.1.I) with dynamic
looping records deleted.
Table Trailer
WordI=number ofrecords inC_EXX.
Word2-6:zero.
2.3-141&lt;/p&gt;
&lt;p&gt;DATASLOCKANDTABLEDESCRIPTIONS
2.3.40 DataBlocks Output FromModule MTRXIN
2.3.40.I K2PP(MATRIX)
Description
2
[mpp] -
Matrix Trailer
Plumber ofcolumns
Number ofrows
Form
TypeDirect inputstiffness matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.2 M2PP(MATRIX)
Description
2
[Mpp] -
Matrix TrailerDirect inputmassmatrix -pset.
Number ofcolumns :p
_lumber ofrows =p
Form =square
Type =depends oninput
2.3.40.3 B2PP(MATRIX)
Description
2
[Bpp]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputdamping matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.4
TheMTRXIN module maybeusedviaDMAPtoproduce anydesired psizedmatrix from
DMIGinputdata.
2.3-142 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.41 Data Blocks Output From Module GKAD
2.3.41.1 KDD(MATRIX)
Description
[Kdd] -Dynamic stiffness matrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3.41.2 BDD(MATRIX)
Description
[Bdd] Dynamic damping matrix -dset.
I&amp;rsquo;ldbY&amp;quot;IX IrcII I_I&amp;quot;
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
frequency response/complex eignevalue
=real double precision
transient
2.3.41.3 MDD(MATRIX)
Description
[Mdd] Dynamic massmatrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3-143&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2,3.41.4
Description
[G m]
Matrix TrailerGMD(MATRIX)
Multipoint constraint transformation matrix -dynamics.
Number ofcolumns =d
Number ofro_&amp;rsquo;s =m
Form =rectangular
Type =realdouble precision
2.3.41.5 GOD(MATRIX)
Description
[G_] -
Matrix TrailerOmitted coordinate transformation matrix -dynamics.
Number ofcolumns =d
Number ofrows =o
Form :rectangular
Type =realdouble precision
2.3.41.6 K2DD(MATRIX)
Description
Matrix TrailerDirect inputstiffness matrix -dset.
Number ofcolumns =d
Number ofrows =d
Form :square
Type =complex double precision/real double precision
2.3.41.7 M2DD(MATRIX)
Description
[M_d]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputmassmatrix -dset.
=d
=d
=square
=complex double precision/real double precision
2.3-144 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.41.8
Description
Matrix TrailerB2DD(MATRIX)
Direct input dampinQ matrix -dset.
Number ofcolumns
Diumber ofrows
Form
Type=d
=d
=square
=complex double precision/real double precision&lt;/p&gt;
&lt;p&gt;DATABLOCKAilDTABLE DESCRIPTIO,_S
2.3.42 DataBlocks Output FromModule CEAD
2.3.42.1 PHID(MATRIX)
Description
[_d]-Complex eigenvectors inthedset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =d
Form =rectanqular
Type =complex sinqle precision
2.3.42.2 CLAMA(TABLE)
Description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;, Complex eigenvalue table.
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3-9 I
I0 I
11-50
51-146 BOFPIDrecord
90
1006
0
6
Notdefined
Title, subtitle, andlabelfrom/&lt;em&gt;UTPUT/
1 I
2 I
3 R
4 R
5 R
6 R@FPdatarecord
Modenumber
Extraction order
Realpartofeiqenvalue
Imaqinary partofeinenvalue
IIm(X)I/21[
-2*Re(&lt;/em&gt;)/llm (Z)I
Note: The6datawords arerepeated inrecord 2foreach
eigenvalue foundinCEAD.
End-of-fil e
TableTrailer
Word1=1006
Word2=0
Word3=0
Word4=0
Word5=6
Word6=0
2.3-146&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DATA_LOCKDESCRIPTIOI4S
2.3.42.3 _CEIGS(TABLE).
Description
Complex eigenvalue summary table.
Table Format
Record Word Type Item
0 B Header record
1 I
2 I
3 I
4-10 I
II I
12-180
1009
1ifdeterminant
2ifinverse power
0
Number ofeigenvalues extracted
Depend onthemethod used
Determinant
12 I
13 I
14 I
15 I
16 I
17 I
18 INumber ofpasses through starting points
Number ofcriteria changes
Number ofstarting point moves
Number ofdecompositions
Number offailures toiterate toaroot
Number ofpredictions outside theregion
Reason fortermination
l-allrequested roots found
2-outofregion prediction from every
starting point
3-insufficient time toextract another root
4-everywhere singular matrix
Inverse Power
12-18
19-50
51-146 BIdentical towords 12-18forInverse PowerMethod
section oftheBEIGSdatablockoutput fromthe
READmodule (seesection 2.3.30.4).
Notdefined
Title, subtitle, label
Record 1will berepeated foreach region forInverse Power.
Records 2+3exist only when METHOD =DETM.
1 I 0
2 I 1009
3 I 3
4-9 I 0
I0 I 6
II-50 Notdefined
51-146 B Title, subtitle, label
2.3-147&lt;/p&gt;
&lt;p&gt;DATABLOCKAIIDTASLEDZSCRIPTIO,_S
Record
4
TableTrailer
Non-zero.Word Type. Item
l I
2 R
3 R
4 R
5 R
6 IStartinn pointnumber inregion
Realpartofstartina point
Imaainary partofstartina point
Maqnitude ofstartinn point
Phaseofstartinn point
Scalefactor (power ofI0)ofmaanitude
WordsI-6arerepeated foreachstartina pointineachreaion.
End-of-file
2.3.42.4 PHIH(MATRIX)
Description
[#h] -Complex eigenvectors inthehset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =h
Form =rectangular
Type =complex sinqle precision
2.3-148&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.43 Data Blocks Output From Module VDR
2.3.43.1 _PHID (TABLE)
Description
Output complex eigenvectors requests (solution set, S_RTI, complex).
Table Format
Record Word Type Item
NotesI-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I
2 I
3 I
4 I
5 I
6-7 R
8 I
g I
lO I
11-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 R
9-14 RDevice code +lO&lt;em&gt;approach code
lOl4
0
Subcase number
Mode number
Complex eigenvalue
0
Format code
Nun_er ofwords perentry inrecord 2=14.
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(Tl), I(T2), I(T3), I(Rl), I(R2), I(R3)}Doint
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
3.Format codeI!=xyoutput only==print
=punch
=print andpunch
I!=real ==real/imaginary
=magnitude/phase
4.Approach code =9
5.Point type
6°Ii=grid point==scalar point
=extra point
=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
2.3-149&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536
=remainder fromdivision above
=zero.
2.3.43.2 @UDVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RDevice code+I0&lt;em&gt;approach code
I015 =displacement
1016=velocity
1017=acceleration
0
Subcase number
Frequency
0
0
Dynamic loadsetID
Format code
Number ofwords perentry inrecord 2=14
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code _repeated
Pointtype {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code:
3.Format codeli=xyoutput onlyprint
punch
printandpunch
1=real
2=real/imaginery
3=magnitude/phase
4.Approach code=6
2.3-150 (811/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P14</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_014/</guid>
      <description>
        
        
        &lt;p&gt;DATA BLOCK DESCRIPTIONS
!_otes cont&amp;rsquo;d.
5.Point type
Ii qrid point==scalar point
=extra point
=modal point
6.Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word 3-6 =zero.
2.3.43.3 OUDVl (TABLE)
Description
Output displacement requests (solution set, S_RTI, Feal).
Table Format
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
I15=displacement
16=velocity 17=acceleration
0
Subcase number
Time
0
O
Dynamic load setID
Format code =l
Number ofwords perentry inrecord 2=8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code
Point type
Tl,T2,T3,Rl,R2,R3irepeated
foreach
Point
2.3-151&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code=real
=real/imaginary
=magnitude/phase
4.Approach code =7
5.Pointtype =
li=qridpointscalar point
extrapoint
modal point
6.Components (words 3-8ofevennumbered records) whicharenotinthesolution set
arereplaced byaninteger I.
TableTrailer
Word1=(sumofallwords inevennumbered records)/65536.
Word2=remainder fromdivision above.
Word3-6=zero.
2.3.43.4 @PNLI(TABLE)
Description
Output nonlinear loadrequests (solution set,S_RTI, real)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+I0*approach code
12
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code
Number ofwords perentryinrecord 2:8
Notdefined
Title
Subtitle
Label
2.3-152&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Item+
l I
2 I
3-8 RlO&lt;em&gt;point ID+device code} repeated
Point type Iforeach Tl,T2,T3,Rl,R2,R3 point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
li=xyoutput only==print
=punch
=print andpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code =7
5. Point type
Ii=Qrid point==scalar point
=extra point
=modal point
6.Components (words 3-8ineven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word3-6=zero.
2.3.43.5 _PHIH (TABLE)
Description
Output complex eigenvector requests (solution set, S_RTI, complex).
TableFormat
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I Device code +lO&lt;/em&gt;approach code
2 i lOl4
3 I 0
4 I Subcase number
5 I Mode number
6-7 R Complex eigenval ue
8 I 0
9 I Format code
lO I Number ofwords perentry inrecord 2=14
2.3-153&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Record
Notes
I.Word _ Item
11-50 Notdefined
51-82 B Title
83-114 B Subtitle
115-146 B Label
1 I I0*pointID+device code irepeated
2 I Pointtype _for
3-8 R R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
9-14 R l(ml), I(T2), l(T3), l(ml), l(m2), I(R3)_point
Records 1and2arerepeated foreachvector tobeoutput
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=9
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution set
arereplaced byaninteqer I.
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536.
=remainder fromdivision above.
:zero.
2.3.43.6 @UHVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex).
2.3-154&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Format
Record Word Type Item
I-2
3-5
6
7B Datablock name
I Month, day,year
I Time
I 1
l
2
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146I Device code +lO&lt;em&gt;approach code
lO15 =displacementI 1016 =velocity
lOl7 =acceleration
I 0
I Subcase number
R Frequency
I 0
I 0
I Dynamic load setID
I Format code
I Number ofwords perentry inrecord 2=14
Notdefined
B Title
B Subtitle
B Label
1 I
2 i
3-8 R
9-14 RI0&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.I!=xyoutput onlyprint
punch
print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Point type =
6,I=grid point2=scalar point
3=extra point
4=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l
Word 2=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
Word 3-6 =zero.
2.3-155&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.43.7 _UHVI(TABLE)
Description
Output displacement requests (solution set,S_RTI, real).
Table Format
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
15=displacement16=velocity
17=acceleration
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinrecord 2=8
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code
pointtype
TI,T2,T3,RI,R2,R3Irepeated
foreach
point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =7 Approach code
Ii=gridpoint5.Pointtype = scalar point
extrapoint
modalpoint
6.Components (words 3-8ofevennumbered records) which arenotinthesolution set
arereplaced byaninteger I.
2.3-156&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Trailer
Word l
Word 2
Word 3-6=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
:zero.
2.3-157&lt;/p&gt;
&lt;p&gt;DATA_LOCKAI_DTABLEDESCRIPTIONS
2.3.44
2.3.44.1
Description
Matrix TrailerDataBlocks Output FromModule FRRD
UDVF(ilATRIX)
Displacement vector matrix inafrequency response problem -dset.
,Number ofcolumns
[,_umber ofrows
Form
Type
2.3.44.2 PSF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=d
=rectangular
=complex single precision
Loadvector forfrequency response -sset.
Number ofcolumns
Number ofrows
Form
Type
2.3.44.3 PDF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=s
=rectangular
=complex single precision
Dynamic loadmatrix forfrequency analysis -dset.
Number ofcolumns
_umber ofrows
Form
Type
2.3.44.4 PPF(r,IATRIX)
Description
[Pif)]
,.&amp;rsquo;latrix Trailer=number offrequencies multiplied bythenumber o_loads
=d
=rectangular
=complex sinqle precision
Dynamic loadsforfrequency response -pset.
Number ofcolumns
i&amp;rsquo;_umber ofrows
Form
Type=number offrequencies multiplied bythenumber ofloads
=p
=rectangular
=complex single precision
2.3-158&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Note
Theheader record contains thelistoffrequencies.
2.3.44.5 UHVF(MATRIX)
Description
Matrix TrailerModal frequency response solution vectors -hset.
Number ofcolumns =number offrequencies multiplied bythenumber ofloads
Number ofrows =h
Form =rectangular
Type =complex single precision
2.3-159&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.45 DataBlocks Output FromModule SDR3.
2.3.45.1 @PP2(TABLE)
Description
Output loadvector requests (pset,S_RT2, real).
Table Format
Record Word Type
0
1 1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
2002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Time )repeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
5printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.
2.3-160&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.2 _QP2(TABLE).
Description
Output forces ofsingle-point constraint (pset,S_RT2, real).
Table Format
Record Wor__d Type Item
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2003
0
Subcase nu_er
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=l
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime }repeat
Point type _for each
R(TI),R(T2), R(T3), R(RI),R(R2), R(R3)_timestep
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!:realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype:igrid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-161&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.3 OUPV2(TA3LE).
Description
Outout displacement vector requests (pset,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
2001=Displacement
2010 Velocity
2011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reoeat
Pointtyne &amp;gt;&lt;em&gt;oreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time sten
Notes
I.Records 1and2arereheated foreachvector tobeoutput.
2.Device code
li=xyoutput onlyprint
punch
printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype =I&lt;/em&gt;=gridpoint=scalar point
3=extrapoint4modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-162&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.4 _ES2 (TABLE).
Description
Output element stress requests (S_RT2, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
ID I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;apDroach code
2005
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
O
Dynamic loadsetID
Format code =l
Number ofwords _erentry innextrecord =M&amp;rsquo;JDS
Notdefined
Title
Subtitle
Label
Time _repeat
Element stress data &lt;em&gt;for each
Seesection 2.3.51 fordetails)time step
l_otes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codei&lt;/em&gt;=xyoutput only•print
14=punch=print andpunch
I!=real==real/imaainary
=magnitude/ghase
4.Approach code =6
Table Trailer
Words l-Gcontain nosignificant values.
2.3-163&lt;/p&gt;
&lt;p&gt;DATABLOCKANGTABLEDESCRIPTIONS
2.3.45.5 _EF2(TABLE).
Description
Output element forcerequests (S_RT2, eal).
TableFormat
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
2004
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
Time )reoeat
Element forcedata &lt;em&gt;foreach
Seesection 2.3.52 fordetails}time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
I&lt;/em&gt;=xYoutput only
2.Device code= print
i_punchprintandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
TableTrailer
WordsI-6contain nosignificant values.
2.3-164&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.6 &lt;em&gt;PNL2(TABLE).
Description
Output nonlinear load requests (solution set, S_RT2, real).
Table Format
Record Word Type Item
O Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
i R
2 I
3-8 RDevice code +lO&lt;em&gt;apnroach code
2012
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Ti&lt;/em&gt; _reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))timestep
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6
5.Pointtype=real
=real/imaginary
=magnitude/phase
6.Ii=grid point==scalar point
=extra ooint
=modal point
Components (words 3-8ineven numbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-165&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.7 &lt;em&gt;UDV2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reDeat
Pointtype &amp;gt;foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}timesten
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format code=li=xyoutput onlyprint
punch
printandpunch
!=realreal/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype
6.#&lt;/em&gt;=gridpoint= =scalar point
I_=extra_oint=modalpoint
Components (words 3-8ofevennumbered records) whicharenotinthesolution setare
replaced byinteger I.
TableTrailer
Words I-5contain nosignificant values.
2.3-166&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.8 OUHV2 (TABLE).
Descri ption
Output displacement vector requests (solution set,S_RT2, real).
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code +lO&lt;em&gt;aDDroach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime _reoeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time stem
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3°li=xyoutput only= =print
:ounch
=print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype
_.li=grid point= =scalar point
=extra point
=modal point
Components (words 3-8ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-167&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.9 OPPC2 (TABLE).
Description
Output loadvector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
3002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
0
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency _re_eat
Pointtype _for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3))frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code
li=real= =real/imaginary
=magnitude/phase
4.Approach code =5
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
TableTrailer
WordsI-Gcontain nosignificant values.
2.3-168&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.10 _QPC2 (TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 R
2 I
3-8 R
9-14 RHeader record
Device code+lO&lt;em&gt;approach code
3003
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innext record =14
Notdefined
Title
Subtitle
Label
Frequency _repeat
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), l(Rl), I(R2), l(R3))frenuency
Notes
I.Records land2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
i=real3.Format code= :real/imaginary
=magnitude/phase
4.Approach code:5
li:gridpointscalar point
5.Point type =extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-169&lt;/p&gt;
&lt;p&gt;DATA_LOCKANDTABLEDESCRIPTIONS
2.3.45.11 _UPVC2 (TABLE).
Description
Output displacement vector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDproach code
3001=Displacement
3010 Velocity
3011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
eachfrequency
i_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
O=xyoutput only
2.Device code=1print
4=punch
5printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=5
5.Pointtypel=gridpoint=2scalar point
3=extrapoint
14modal point
TableTrailer
£Jords I-6contain nosignificant values.
2.3-170&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P15</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_015/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.12 _ESC2 (TABLE).
Description
Output element stress requests (S_RT2, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BItem
Header record
Device code+lO&lt;em&gt;approach code
3005
Element type
Subcase number
lO&lt;/em&gt;Element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 i R Frequency
2-NWDS Mixed Element stress data
See2.3.51 fordetailsrepeat
for ach
frequency
Notes
I.Records 1and2arerepeated foreach vector tobeoutout.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =5 Approach code
TableTrailer
Words I-6contain nosignificant values.
2.3-171&lt;/p&gt;
&lt;p&gt;DATA3LOCKANDTABLEDESCRIPTIONS
2.3.45.13 @EFC2(TA3LE).
Description
Output element forcerequests (S_RT2, complex).
Table Format
Record Word _ Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDnroach code
3004
Element type
Subcase number
IO&lt;/em&gt;element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 1 R Frequency
2-NNDS Mixed Element forcedata
See2.3.52 fordetailsrepeat
foreach
frequency
Notes
Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=O=xyoutput only1print
4=punch
5printandpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code=5
TableTrailer
WordsI-6contain nosignificant values.
2.3-172&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.14 &lt;em&gt;UDVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, cowlex).
Table Format
Record Wor___dd Type Item
0 Header record
l l
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146
l
2
3-8
9-14B
B
B
R
I
R
RDevice code+lO&lt;em&gt;approach code
3015=Displacement
3016 Velocity
3017 Acceleration
0
Subcase Number
IO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
Frequency )repeat
Point type (for
R(TI), R(T2),R(T3) R(RI), R(R2)&lt;/em&gt;,R(R3)_each
I(TI), I(T2), I(T3): I(RI),I(R2), l(R3))frequency
ilotes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format code =li:xyoutput onlyprint
punch
print andpunch
I!=real=real/imaoinary
=magnitude/phase
4.Approach code =5
Ii=gridpoint5.Point type =scalar pointextra point
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-173&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.15 OUHVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDDroach code
3015=Disnlacement
3016 Velocity
3017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwordsperentryinnextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
each
frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.
3.0=xyoutput only1print
Device code=4punch
5printandhunch
I!=realFormat code= real/imaginary
magnitude/phase
4.Approach code=5
5.PointtypeI=gridpoint=2scalar point
3=extrapoint4modal point
Components (words 3-14ofevennumbered records) whicharenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-174&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.46DataBlocks Output FromModule XYTRAN.
2.3.46.1 XYPLTT (TABLE).
Description
Output plotrequest datainformfordirect plotting ofS_RT2Transient Response output.
TableFormat
Record Word Type Item
0 Header record
1 1 I-R
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0
II R
12 R
13 R
14 R
15 R
16 R
17 I
18 I
19 I
20 I
21 I
22 I
23 R
24 R
25 I
26 I
27 I
28 I
29 I
30 ISubcase IDorifaRandom Response problem,
theMeanResponse
Framenumber
Curvenumber
Point IDorelement ID
Component number
Vector number (I,2&amp;hellip;.II)
l&amp;ndash;Graph usestophalfofframe
O&amp;ndash;Graph usesfullframe
-l&amp;ndash;Graph useslowerhalfofframe
O&amp;ndash;Axis, tics,labels, values, etc.havebeen
drawnandthiscurve istobescaled and
plotted identically aslastexcept forcurve
symbols.
l&amp;ndash;Axis, tics,labels, scaling, etc.aretobe
performed orcomputed andifword7ofthis
record =0orI,askidtonewframeistobe
made.
Number ofblankframes between frames (frame-
skip)
Notused
XMIN!X[_AN Define exactcorners o_this
YMIN upper, lower, orfullframegraph
YMAX
Actual valueoffirsttic
Actual increment _osucc_ss=w
tics
Integer valuetobeprinted on
firsttic
Maximum number ofdigits in
anyprint-value x-direction
+or-powerforprintvalues tics
Totalnumber ofticstonrint
thisedge
Value printskid0,1,2,3&amp;mdash;
Delta integer printvalueto
successive tics&amp;quot;
Sameas15through 22
Butfory-direction tics
2.3-175&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
31
32
3334
35
36
37
38
39
4041
42
5O
51
243
2B_
283
284
285
286
287
288
289
29O
291
292
293
294
295
296
297
298
299
300B
B
B
B
B
B
I
I
R
R
I
I
I
I
R
R
R
R
R
R
R
R
R
RItem
Topedgetics leachof31-34maybeless
Bottom edgetics[than O&amp;ndash;tics without values
Leftedgetics(equal toO&amp;ndash;noticshere
Rightedgetics)greater O&amp;ndash;tics withvalues
O&amp;ndash;x-direction islinear
Greater thanO&amp;ndash;number o_cycles andx-direction
islogarithmic
O&amp;ndash;y-direction islinear
Greater thanO&amp;ndash;number ofcycles andy-direction
islogarithmic
O&amp;ndash;nox-axis
l&amp;ndash;draw x-axis
x-axis y-intercept
O&amp;ndash;noy-axis
l&amp;ndash;draw y-axis
y-axis x-intercept
Lessthan0&amp;ndash;plotsymbol foreachcurvepoint.
Select symbol corresponding to
curvenumber inword3ofthis
record.
Equalto0&amp;ndash;connect points bylineswhere
points arecontinuous i.e.,(no
integer 1pairs).
Greater than0&amp;ndash;dobothofabove.
Notused
Title (32words)
Subtitle (32words)
Label (32words)
CurveTitle (32words)
x-axis Title (32words)
y-axis Title (32words)
Notused
Pensize
Plotter 1:SC4020, 2:EAI3500
Inches paperx-direction
Inches papery-direction
Camera forSC4020 lessthan0=35mm,0:F80,
Greater 0=Both
Printflag0:no,1=yes
Plotflag0:no,1=plotter,
-I:paper, 2=plotter andpaper
Punchflag0:no,1=yes
x-minofalldata
x-maxofalldata
y-minwithin x-limits ofgraph
x-value atthisy-min
y-maxwithin x-limits ofgraph
x-value atthisy-max
y-minforalldata
x-value atthisy-min
y-maxforalldata
x-value atthisy-max
2.3-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type Item
1 I
2 I
3 R
4 Rl
Always ispresent l
x-value _coordinate pair
y-value #reoeats forallpairs plotted
Notes
I.Records land2repeat foreachcurve plotted.
2.Evennumbered records willcontain integer 1pairs toindicate where curve hasmoved
outside ofgraph limits.
Table Trailer
WordsI-6contain nosignificant values.
2.3-177&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.2 XYPLTFA (TA3LE).
Description
Identical toXYPLTT, forFrequency Response plots (solution set).
2.3.4G.3 XYPLTF (TABLE).
Description
Identical toXYPLTT, forFrequency Response plots.
2.3.46.4 XYPLTR (TABLE).
Description
Identical toXYPLTT, forRandom Response Dlots.
2.3.4G.5 XYPLTTA (TABLE).
Description
Identical toXYPLTT, forTransient Response plots (solution set).
2.3-178&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.47 DataBlocks Output FromModule P_AND_M
2.3.47.1 PSDF(TABLE)
Description
PowerSpectral Density Table.
Table Format
Record Word Type Item
0 Header record
1 I 50
2 I Codefordatatype
DISP=2001
VEL_=2010
ACCE=2011
L_AD=2002
SPCF=2003
ELF_=2004
STRE=2005
3 ! 4001
4 I 0
5 I Pointorelement IDtimesI0
6 I Component ID+2
7 I 0
8 R Meanresponse
9 I 0
I0 I 2
11-50 I 0
51-145 B Title, subtitle, label
2 1 R Frequency
2 R Powerspectral densitv
i_otes
I.Words1and2ofrecord 2arerepeated foreachfrequency.
2.Records 1and2arerepeated foreachpowerspectral density request.
Tablr,Trailer
L!ordsI-5=zero.
,_ord6=number ofrequests.
2.3-179&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.47.2 AUT_(TABLE).
Description
Autocorrelation function table.
TableFormat
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 R
9 I
I0 I
11-50 I
51-146 B5O
Codefordatatype
DISP=2001
VELO=2010
ACCE=2011
LOAD=2002
SPCF=2003
ELFO=2004
STRE=2005
4002
0
Pointorelement IDtimesI0
Component ID+2
0
Meanresponse
0
2
0
Title, subtitle, label
2 1 R
2 RTAU
Autocorrelation function
Notes
I.Words1and2ofrecord 2arerepeated foreachTAU.
2.Records 1and2arerepeated foreachautocorrelation request.
TableTrailer
Words I-5=zero.
Word_=number ofrequests.
2.3-180&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.48 Data Blocks Output From Module TRD.
2.3.48.1 UDVT (MATRIX)
Description
ut[d] -Displacement, velocity, andacceleration vector matrix inatransient analysis
problem -dset.
r_trix Trailer
Number ofcolumns =three times thenumber ofoutput time steps
Number ofrows =d
Form =rectangular
Type =real single precision
2.3.48.2
Description
Matrix TrailerPDT(MATRIX)
Linear dynamic load matrix fortransient analysis -dset.
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type :real single precision
2.3.48.3 PST(MATRIX)
Description
[P_] -Linear load vector fortransient analysis -sset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows :s
Form :rectanqular
Type =realsingle precision
2.3-181&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.48.4 PPT(MATRIX)
Description
[P_] Linear dynamic loadsfortransient analysis -pset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =p
Form =rectangular
Type =realsingle precision
*Note: Theheader record contains thelistofoutput times.
2.3.48.5 PNLD(MATRIX)
Description
[p_] Nonlinear loads intransient problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3.48.6 UHVT(MATRIX)
Description
[u_] Modaltransient solution vectors -hset.
Matrix Trailer
Number ofcolumns =threetimes thenumber ofoutput times
Number ofrows =h
Form =rectangular
Type =realsingle precision
2.3.48.7 PNLH(MATRIX)
Descrigtion
n_
[Ph] Nonlinear loads inmodal transient problem -hset.
Matrix Trailer
Number ofcolumns :number ofoutput times
Number ofrows =h
Form =rectangular
Type =realsinqle precision
2.3-182&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.49
2.3.49.1
Description
[mhh]
Matrix TrailerDataBlocks Output Fromi|odule GKAH
MHH(MATRIX)
Modalmassmatrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.2 BHH(MATRIX)
Description
[bhh]
Matrix TrailerModaldamping matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.3 KHH(MATRIX)
Description
[khh]
Matrix TrailerModalstiffness matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.4 PHIDH(MATRIX)
Description
[_dh]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeTransformation matrix fromdsettomodal coordinates.
=h
=d
=rectanqular
=realsingle precision
2.3-183&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.50DataBlocks Output FromModule DDRI
2.3.50.1 CPHID(MATRIX)
Description
[&lt;em&gt;d]Complex eigenvector matrix transformed frommodaltophysical coordinates.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofeigenvectors
=d
=rectangular
=complex single precision
2.3.50.2 UDVIF(MATRIX)
Description
[u&lt;/em&gt;] Displacement vectors matrix inafrequency response problem -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number offrequencies timesnumber ofloads
=d
=rectangular
=complex single precision
2.3.30.3 UDVIT(MATRIX)
Description
[m_] -Displacement vectors matrix inatransient response problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput timesmultiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-184 (811172)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.51 Element Stress Output DataDescription.
Note particular datablockd_scription (e.g., _ESl, _ESBI) forcontents ofword lforeachelement.
Element
Txpe
lName
CR_D
CBE_M
CTUBE
CSHEAR
CTWIST
CTRIAIRealElement Stresses
Wordor
Component Item
2 Axial
3 Axial Safety Margin *
4 Torsional
5 Torsional Safety Margin*
2 SAI
3 SA2
4 SA3
5 Axial
6 SA-maximum
7 SA-minimum
8 Safety Margin inTension*
9 SBI
lO SB2
II SB3
12 SB-maximum
13 SB-minimum
14 Safety Margin inComp*
SameasCR_D
2 Maximum Shear
3 Average Shear
4 Safety Margin*
2 Maximum
3 Average
4 Safety Margin*
2 Z1=Fibre Distance 1
3 Normal-x atZ1
4 Normal-y atZl
5 Shear-xy atZl
6 O-Shear Angle atZl
7 Major-Principal atZl
8 Minor-Principal atZl
9 Max-Shear atZl
lO Z2=Fibre Distance 2
II Normal-x atZ2
12 Normal-y atZ2
13 Shear-xy atZ2
14 O-Shear Angle atZ2
15 Major-Principal atZ2
16 Minor-Principal atZ2
17 Maximum-Shear atZ2Complex Element Stresses
Wordor Real
Component Item Imag.
2 Axial R
3 Axial I
4 Torsional R
5 Torsional I
Undefi ned
SameasCR_D
2 Maximum Shear R
3 Maximum Shear I
4 Average Shear R
5 Average Shear I
2 Maximum R
3 Maximum I
4 Average R
5 Average I
2 Z1=Fibre Distance 1
3 Normal-x at1R
4 Normal-x at1I
5 Normal-y atlR
6 Normal-y atlI
7 Shear-xy atlR
8 Shear-xy atlI
9 Z2=Fibre Distance 2
lO Normal-x at2R
II Normal-x at2I
12 Normal-y at2R
13 Normal-y at2I
14 Shear-xy at2R
15 Shear-xy at2I
2.3-185&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 CONRAD
II CELASl
12 CELAS2
13 CELAS3
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
2O CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVISC
25 CMASSI
26 CMASS2
27 CMASS3
28 CMASS4
29 C@NMI
30 C_NM2
31 CPL_TELIWordorRealElement Stresses
Component Item NoteCTRIAI
NoteCTRIAI
2 Normal-x
3 Normal-y
4 Shear-xy
5 O-Shear Angle
6 Major-Principal
7 Minor-Principal
8 Maximum Shear
NoteCR_D
2 Stress
2 Stress
2 Stress
Undefined
NoteCTRIAI
NoteCTRMEM
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedComplex Element Stresses
Word or
Component Item
NoteCTRIAI
NoteCTRIAI
2 Normal -x
3 Normal-x
4 Normal -y
5 Normal -y
6 Shear-xy
7 Shear-xy
NoteCR_D
Stress
Stress
Stress
Stress
Stress
Stress
Undefined
Note CTRIAI
Note CTRMEM
Note CTRIAI
Note CTRIAI
Note CTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedReal
Imag.
R
I
R
I
R
I
2.3-186 (8/I/72)&lt;/p&gt;
&lt;p&gt;Element
Type Name
34 CBAR
35 CC_NEAX
36 CTRIARG
37 CTRAPRGDATABLOCK DESCRIPTIONS
I Real Element StressesWordor
Component Item
2 SAI
3 SA2
4 ,SA3
5 SA4
6 Axial
7 SA-maxi mum
8 SA-minimum
9 Safety Margin inTension*
lO SBI
II SB2
12 SB3
13 SB4
14 SB-maximum
15 SB-mi nimum
16 Safety Margin inComp*
2 Harmonic orpoint angle
3 Zl=Fibre Distance l
4 Normal-u atl
5 Normal-v atl
6 Shear-uv atl
7 O-Shear Angle ati
8 Major-Principal atl
9 Minor-Principal atl
lO Maximum Shear atl
II Z2=Fibre Distance 2
12 Normal-u at2
13 Normal-v at2
14 Shear-uv at2
15 O-Shear Angle at2
16 Major-Principal at2
17 Minor-Principal at2
18 Maximum-Shear at2
2 Radial (x)
3 Circum (Theta)
4 Axial (z)
5 Shear (zx)
2 Radial (x) atl
3 Circum (Theta) atl
4 Axial (z) atl
5 Shear (zx) atl
6 Radial (x) at2
7 Circum (Theta) at2
8 Axial (z) at2
9 Shear (zx) at2
lO Radial (x) at3
II Circum (Theta) at3
12 Axial (z) at3
13 Shear (zx) at3
14 Radial (x) at4
15 Circum (Theta) at4
16 Axial (z) at4
17 Shear (zx) at4
18 Radial (x) at5Complex Element Stresses
Wordor Real
Component Item Imag.
2 SAI R
3 SA2 R
4 SA3 R
5 SA4 R
6 Axial R
7 SAI I
8 SA2 I
9 SA3 I
lO SA4 I
II Axial I
12 SBI R
13 SB2 R
14 SB3 R
15 SB4 R
16 SBI I
17 SB2 I
18 SB3 I
19 SB4 I
Undefined
Undefined
Undefined
2.3-187 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
37cont&amp;rsquo;d.
38 CT_RDRG
53-CDUMI
61 thru
CDUM9RealElement Stresses
Wordor
Component Item
19 Circum(Theta) at5
20 Axial (z) at5
21 Shear(zx) at5
2 Mem.-Tagen. at1
3 Mem.-Circum. at1
4 Flex.-Tangen. at1
5 Flex.-Circum. at1
6 Shear-Force at1
7 Mem.-Tangen. at2
8 Mem.-Circum. at2
9 Flex.-Tangen. at2
I0 Flex.-Circum. at2
II Shear-Force at2
12 Mem.-Tangen. at3
13 Mem.-Circum. at3
14 Flex.-Tangen. at3
15 Flex.-Circum. at3
16 Shear-Force at3
2 S1
3 $2
4 S3
5 $4
6 $5
7 $6
8 $7
9 $8
I0 $9Complex Element Stresses
Wordor Real
Component &amp;hellip;&amp;hellip;.. Item&amp;hellip;&amp;hellip;&amp;hellip; Imag. _
Undefined
2 S1 R
3 $2 R
4 $3 R
5 S4 R
6 S5 R
7 $6 R
8 $7 R
9 $8 R
I0 $9 R
II S1 I
12 $2 I
13 $3 I
14 $4 I
15 $5 I
16 $6 I
17 $7 I
18 $8 I
19 $9 I
*Ifnotequaltointeger I.
Note:
Ifoutput ismagnitude/phase themagnitude replaces therealpartandthephase replaces
theimaginary part.
2.3-188 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.52 Element Force Output DataDescription.
Note particular datablock description (e.g., OEFI, OEFBI) forcontents word lforeachelement.
Element
Type Name
l CROD
2 CBEAM
3 CTUBE
4 CSHEAR
5 CTWIST
6 CTRIAI
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 C_NR_D
II CELASI
12 CELAS2
13 CELAS3Real Element Forces
Wordor
Component Item
2 Axial Force
3 Torque
2 Bend-Mom
3 Bend-Morn
4 Bend-Morn
5 Bend-Morn
6 Shear-I
7 Shear-2
8 Axial Force
9 Torque
SameasCR(&lt;em&gt;D
2 Force Pts1,3
3 Force Pts2,4Al
A2
Bl
B2
2 Moment Pts1,3
3 Moment Pts2,4
2 Bend-Mom-x
3 Bend-Mom-y
4 Twist-Moment
5 Shear-x
6 Shear-y
Same asCTRIAI
SameasCTRIAI
Undefined
SameasCR_D
Force
2 Force
2 ForceComplex Element Forces
Wordor Real
Component Item Imaq.
2 Axial Force R
3 Axial Force I
4 Torque R
5 Torque I
Undefined
SameasCROD
2 Force Pts1,3 R
3 Force Pts1,3 I
4 Force Pts&lt;/em&gt;_ R
5 Force Pts2,4 I
2 Moment Pts1,3 R
3 Moment Pts1,3 I
4 Moment Pts2,4 R
5 Moment Pts2,4 I
2 Bend-Mom-x R
3 Bend-Mom-y R
4 Twist-Moment R
5 Shear-x R
6 Shear-y R
7 Bend-Mom-x I
8 Bend-Mom-y I
9 Twist-Moment I
lO Shear-x I
II Shear-y I
SameasCTRIAI
SameasCTRIAI
Undefined
SameasCROD
2 Force R
3 Force I
2 Force R
3 Force I
2 Force R
3 Force I
2.3-189&lt;/p&gt;
&lt;p&gt;Element
Type Name
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
20 CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVlSC
25 CMASSI
26 CFtASS2
27 CFtASS3
28 CFtASS4
29 C_NMI
30 C_NM2
31 CPL_TEL
34 CBARDATABLOCK ANDTABLE DESCRIPTIONS
RealElement Forces
Wordor
Co_iponent Item
2 Force
NoteCTRIAI
Undefined
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom Al
Bend-Mom A2
Bend-Mom Bl
Bend-Mom B2
Shear-l
Shear-2
Axial Force
TorqueComplex Element Forces
IternWordor
Component
Force
Force
Note CTRIAI
Undefined
Note CTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque2
3
2
3
4
5
6
7
8
9
lO
II
12
13
14
15
16
17Al
A2
Bl
B2
Al
A2
Bl
B2Real
Imag.
2.3-190 (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P16</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_016/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
Element
Type Name
35 CC@NEAX
36 CTRIARG
37 CTPJ_PRG
38 CT_RDRG
53-61 CDUMI
thru
CDUM9Wordor
Component
2
3
4
5
6
7
8
9
I0
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
5
6
7
8
9
lORealElement Forces
Item
Harmonic orpoint angle
Bend-Morn u
Bend-Morn v
Twist-Moment
Shear u
Shear v
Radial (x)
Circum (Theta)
Axial (z)
Radial Ix)Circum Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Moment (zx)
Direct Strain
Curvature
x)Radial ITheta) Circum
Axial (z)
Moment (zx)
Direct Strain
Curvature
F/
F2
F3
F4
F5
F6
F7
F8
F9atl
at1
atl
at2
at2
at2
at3
at3
at3
atl
at1
atl
at2
at2
at2
at3
at3
at3
at4
at4
at4
at1
atl
atl
atl
atl
atl
at2
at2
at2
at2
at2
at2
2
3
4
5
6
7
8
9
lO
II
12
13
14Complex Element Forces
Word or
Component Item
Undefined
Undefined
Undefined
Undefined
F1
F2
F3
F4
F5
F6
F7
F8
F9
F1
F2
F3
F4Real
Imag.
2.3-191 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
53-61cont&amp;rsquo;d.RealElement Forces
Wordor
Component ItemWordor
Component
15
16
17
18
19Complex Element Forces
Item
F5
F6
F7
F8
F9Real
Imag.
2.3-191a (811/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.53 Data Blocks Output FromModule DDR2
2.3.53.1 UEVF(MATRIX)
Description
[uf] -Displacements attheextra points forafrequency response problem.e
Matrix Trailer
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =e
Form =rectangular
Type =single precision
2.3.53.2 PAF(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration computations inafrequency response
problem -aset.
Matrix Trailer
Number ofcolumns :number offrequencies timesnumber ofloads
Number ofrows :d
Form :rectangular
Type =single precision
2.3.53.3
Description
[u_a]
Matrix TrailerUDV2F(MATRIX)
Mode accelerated displacement vectors forafrequency response problem.
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =d
Form =rectangular
Type =complex single precision
2.3.53.4 UEVT(MATRIX)
Description
[u_] -Displacement attheextra points foratransient analysis problem.
2.3-192&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =e
Form =rectangular
Type =realsingle precision
2.3.53.5 PAT(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration inatransient analysis problem.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Typenumber ofoutput times multiplied by3
d
rectangular
realsing!p precision
2.3.53.6 UDV2T (MATRIX)
Description
[u_a]-Mode accelerated displacement vectors foratransient analysis problem.
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-193&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.54 DataBlocksOutput fromModule BMG
2.3.54.1 BDP_L (TABLE)
Description
Hydroelastic boundary matrix tables.
fableFormat
SameformatastheMATPBOL datablockDMIGcardimages.
Notes: Thenamesofthematrices areKBFLandABFL
Table Trailer
IFPformat, 6words containing 96pointer bitsforusebysubroutines PRELOC andLOCATE.
2.3.55 DataBlocksOutput fromModule PLTTRAN
2.3.55.1 SIP(TABLE)
Description
SameformatasdatablockSIL.
thenextSILvaluetohaveavalue:
TheSIPdatawillbe:Iffluidpoints arepresent eachfluidpoint, i,willcause
SIL(i+I) =SIL(i) +1
SIP(i+l) =SIP(i) +6
whereiisafluidpoint.
2.3.55.2 BGPDP(TABLE)
Description
Sameformat asdatablockBGPDTexcept fluidpoints havethevalue-2inthefields
corresponding tocoordinate system identification numbers.
2.3-194 (811172)&lt;/p&gt;
&lt;p&gt;2.4EXECUTIVETABLEDESCRIPTIONS
EXECUTIVETABLEDESCRIPTIONS
Thefollowingisanalphabetical indexofExecutivetabledescriptions.
Section Number Executive Table Name Where Stored
2.4.1.5 CEITBL /XCEITB/
2.4.1.4 DPL /XDPL/
2.4.1.2 FIAT /XFIAT/
2.4.1.3 FIST /XFIST/and/XPFIST/
2.4.2.8 IFPXO /IFPXO/
2.4.2.9 IFPXI /IFPXl/
2.4.2.7 LNKSPC /XLKSPC/
2.4.2.2 MPL /XGPI2/
2.4.2.1 _SCAR DataPoolFile
2.4.2.4 PVT /XPVT/
2.4.i.B &amp;hellip;..&amp;quot; /_WT_M/
2.4.1.7 TAPID /STAPID/
2.4.1.6 VPS /XVPS/
2.4.2.6 XALTER Problem Tape
2.4.2.5 XCSA Problem Tape
2.4.1.I XFIAT /XXFIAT/
2.4.1.9 XLINK /XLINK/
2.4.2.3 XPTDIC Problem TapePageNumber
2.4-9
2.4-7
2.4-3
2.4-5
2.4-31
2.4-32
:.4-29
2.4-21
2.4-15
2.4-26
2o4-13
2.4-12
2.4-10
2.4-28
2.4-27
2.4-2
2.4-14
2,4-24
2.4-I (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1 Executive Tables WhicharePermanently CoreResident
2.4.1.1 XFIAT(Permanent FileAllocation Table)
Description
ANASTRAN resident memory tablecontaining thephysical fileidentification forthe
permanent files(P_L, OPTP,etc.).
Created inModule
Thephysical fileidentifications areoutput byGNFIAT (generate FIAT).
TableFormat
Word 1
s
2
s
3
NNOT ITI
USEDi;I_o11_ FILE
NOTI!1FILE
NJT ITI
USED 171_6115 FILE
NOT ITI
USED _71_61IsFILE
Word Item Description
I-N TP
NotesFILETapeFlag(Ibit)-setifphysical file(FILE) isa
magnetic tape.
File ID(15bits) -unique integer identification for
aphysical file.
1• Thenumber ofentries (N)isdictated bytheinteger value inPFIST (seeFIST
Executive TableDescription -2.4.1.3)
2.TheXFIATtableislocated inthenamedcommon block/XXFIAT/.
2.4-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE TAJ3LE DESCRIPTIONS
2.4.1.2 FIAT (File Allocation Table).
Description
ANASTRAN resident memory table containing thedatablock namevs.physical fileID.for
asegment ofDMAPmodules.
Created inModule
Thephysical files available forthesystem/computer confiquration areoutout by_NFIAT
(generate FIAT). Thedatablock names andother datablock information areoutnut byXSFA,
Executive Segment FileAllocator.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
NUFA
MXE
CAE
I.A_&amp;rsquo; ITII
jP_LTUIPI
___3_1_o &lt;em&gt;&amp;rsquo;,&lt;/em&gt;&amp;rsquo;,_&lt;em&gt;&lt;em&gt;FILE
J
DATABLOCK
NAME
DATABLOCK
TRAILER
I! I
&amp;rsquo; :L&lt;/em&gt; m&lt;/em&gt; m _&amp;hellip;&amp;hellip;.FIATHeader
Entry #I(sample)
Entry #2through C/E
2.4-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Wor_d_d Item Description
1 UFA Unique filesavailable -thisinteger indicates thenumber of
unique fileentries intheFIAT.
2 MXE Maximum entries -this integer shows thetotal entry size of
thedimensioned FIAT table; theamount ofmemory reserved
(N)=6xMXE+3.
3 CAE Current active entries -thisinteger designates theportion of
FIATcurrently containing validdata;UFA_CAE_HXE.
Words4through 9describe asample 6-word entry:
4 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
AP Append flag (Ibit) -setifappend issDecified fordata
block inDMAP sequence byaFILE DMAP instruction.
LTU Lasttimeused(14bitinteger) -record number of@SCAR
entry forlastuseofdatablock.
TP Tapeflag(Ibit)-setifphysical file(FILE) isamagnetic
tape.
FILE File ID(15bits) -unique identification foraphysical file.
5,6 NAME Data block name -8characters (4characters/word).
7,8,9 TRAILER Datablocktrailer -storage for6-16bitdatablocktrailer
words.
WordsI0through Ncontain repeated 6-word entries.
Trailer Information
Trailer information foreachdatablock isstored inandreceived fromtheFIATbyWRTTRL
(write trailer) andRDTRL(readtrailer).
Note
TheFIATtableislocated inthenamedcommon block/XFIAT/.
2.4-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.3 FIST (File Status Table)
Description
ANASTRAN resident memory table containing theinternal data block reference (IDBR)
numbers vs.FIATtable pointers foraparticular module; also, thepermanent filereference
names vs.XFIAT table pointers.
Created inModule
Themodule entries aregenerated prior toeachmodule execution bysubroutines GNFIST
(Generate FIST). Thepermanent entries areinitialized atsystem assembly.
Table Format
PFIST I I I
MXE
CAEWord l
2I+2+I
+2
+3
+4
NPermNameI
I
i XFPointl
I
PermName2
IIl XFPointI
IDBRl
0i FPoint
I
sl
IDBR2
I
I
ol
sl FPointIFISTHeader
Sample Permanent Entry
Sample Module Entry
2.4-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word Item Description.
PFIST I Integer number ofpermanent FISTentries.
1 MXE Maximum entries -thisinteger showsthetotalentry sizeofthe
dimensioned FISTtable; theamount ofmemory reserved
(N)=2*MXE+2.
2 CAE Current active entries -thisinteger designates theportion of
FISTcurrently containing validdata;IcCAE_MXE.
Words3and4describe asample 2-word permanent entry:
3 PermName Apermanent filereference name-4characters BCD(e.g., P_L,
OPTP,PLTI,etc.).
4 XFPoint Points totheXFIATposition containing thefileIDforthis
permanent file.
Words21+2+I and+2describe asample 2-word module entry.
+I IDBR Aninternal datablockreference number (GINOfilenumber) -
integer (e.g., 104,206,301,etc.).
+2 FPoint Points totheFIATposition containing thefileIDforthis
module entry.
Notes
I.
2,
3.
°XFIATpointer values contain anSbitequaltoI,while FIATpointer values contain an
SbitequaltoO.
Permanent entries remain static throughout arun, while module entries arechanged by
GNFIST prior toeach module call.
FIATandXFIATposition pointers areindexes intotherespective tables considering
thefirstwordofthetableasposition O.
TheFISTtableislocated inthenamedcommon block /XFIST/.
ThePFISTentry islocated inthenamedcommon block/XPFIST/.
2.4-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.l.4 DPL(Data PoolDictionary)
Description
ANASTRAN resident memory table describing thecurrent contents andstatus oftheDataPool.
Created inModule
DataPool, andtherefore Dictionary entries, arecreated bypooling fromSFA(Segment File
Allocator), housekeeping operations byDPH(Data PoolHousekeeper) andrestart initialization by
GPI(General Problem Initialization), andIFP(Input FileProcessor) whenwriting D_IandDTI
information (seesection 2.3.2).
TableFormat
Word1NFA
MXE
CAE
DATABLOCK
NAME
B
ET rI
Q: SIZE Im I
S!31 17116FILE#
! II
j I
IIDPLHeader
Entry #I(samole)
Entry #2
2.4-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
NoteWord Item
1 NFADescription
Nextfileavallable- thenextDataPoolFilenumber (integer)
available foroutput.
2 MXEMaximum entries -thisinteger showsthetotalentrysizeof
thedimensioned DPLtable; theamount ofmemory reserved
(N):3*MXE+3.
3 CAE Current active entries -thisinteger designates theportion of
theDPLcurrently containing validdata;0&amp;lt;CAE_MXE.
Words4through 6describe asample 3-word entry.
4,5 N_tE Datablock name-8characters (4characters/word).
6 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
SIZESizeofthepooled datablock-number ofwords/lO.
FILE# Thefilenumber (integer) showing therelative position ofthe
datablockfileofthepool.
TheDPLtable islocated inthelabeled common block /XDPL/.
2.4-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.5 CEITBL (Control Entry Information Table)
Description
CEITBL controls theREPTandEXITDI_APmodule execution.
Created InModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
Mt_MN
BL EL !31&amp;hellip;&amp;hellip; &lt;em&gt;1_16 &amp;hellip;.. I
ML CL
3!&amp;hellip;&amp;hellip; 1_716 1.(&amp;quot;
&amp;mdash; LN &amp;mdash;
,otus 1&lt;/em&gt;
1,:_
L Notused
NotusedSample entry forREPTcontrol
(4words)
Sample entry forEXITcontrol
(4words)
Word
l
2
3
4
5,6
7
8
9,10Item
MN
CN
BL
EL
ML
CL
LN
ERN
MC
CCDescription
Maximum nu_er ofwords intable (integer).
Current number ofwords being used (integer).
9SCAR record number where loopbegins (integer).
_SCAR record number where loopends (integer).
Maximum loopcount asspecified inREPT instruction (integer).
Current loopcount, thatis,thenumber oftimes loophasbeen
repeated (integer).
Location namespecified inREPTinstruction (BCD).
EXIT9SCAR record number (integer).
Maximum count specified inEXITinstruction.
Current count ofnumber oftimes EXITinstruction notexecuted.
These twowords arezeroed.
Notes
CEITBL islocated innamed common block /XCEITB/.
2.4-9&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1.6 VPS(Variable Parameter SetTable)
Description
TheVPStablecontains thevaluesofallvariable parameters referenced byDMAPmodules ina
DMAPprogram. Itisthemeansfortransferring variable parameter values fromonemodule to
another.
Created inModule
XGPI.
TableFormat
Word
4
5
6
5+L
Mfi
Word
1
2
3,4
5
6thru5+LMN
CN
Parameter
Name
[AM T L
0 20 1716 1Sample entry
(variable length)
Item
MN
CN
Name
ADescriDtion
Maximum numberofwordsinVPS(integer).
Current number ofwordsbeingused(integer).
BCDnameofvariable parameter.
Assigned flag. A=1indicates valuefromDFtAPinstruction
hasbeenentered inVPS.
Modified flag. M=1indicates parameter wasmodified bybulk
dataPARAMcardonrestart.
Typecodeforparameter (integer).
Length inwordsofitemV(integer).
Valueofparameter.
2.4-10&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Notes
I.
2.Items A,MandT(word 5ofsample entry) areusedonlybytheXGPImodule andare
cleared prior toexiting XGPI.
Type codeandcorresponding word length.
T L
l=integer l
2=real, S.P. l
3=BCD 2
4=real, D.P. 2
5=complex, S.P. 2
6=complex, D.P. 4
3.TheVPStable islocated inthenamed common block /XVPS/.
2.4-11&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEEESCRIPTIONS
2.4.1.7 TAPID(Problem TapeIdentification Table)
Description
TAPIDcontains Problem Tapeidentification information.
Created inModule
XCSA.
Table Format
Word
ID1
__ ID2
31M
i
RD
514 98
Word
1,2
3,4
5
G
Notes
,
2,Item
ID1
ID2
M,D,Y
RDescription
FirstBCDfieldonI[Executive Control card.
Second BCDfieldonIDExecutive Control card.
Thedate-integers -month, day,year.
Reelnumber ofProblem Tape(integer).
TAPIDiswritten onProblem Tapeassingle record field. Itisalways thefirst file
ontheProblem Tape.
OTAPID hassameformat asTAPID. @TAPID istheIDinformation fromanOldProblem Tape
beingusedforrestarting problem.
3.TAPIDand@TAPID arelocated innamedcommon block /STAPID/.
2.4-12&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.1.8SYSTEM(NASTRANSystemParameters).
Description
ANASTRAr! resident memory tablecontaining various machine dependent, operating system and
NASTRA_I parameters. Thelength ofthetable isdefined byoneofthetableitems.
Created in_odule
I,lostitemsareinitialized bytheNASTRAN blockdataprogram, SE_DBD. Several machine
dependent itemsaresetbysubroutine BTSTRP.
TableFormat
Thesequential table description follows:
Word S_bol DescriptionInitially
Setb_
1 SYSBUF
2 &lt;em&gt;UTTAP
3 N@G&lt;/em&gt;
4 INTP
5 &lt;em&gt;PC
6 SPC
7 METHOD
8 LBAD
9 NLPP
i0 MTEMP
II NPAGES
12 NLINES
13 TLINES
14 MXLINS
15 DATE(1)
16 DATE(2)
17 DATE(3)
18 TIMEZ
19 ECH_F
20 PL_TF
21 APPRCH
22 MACH
23 LSYSTM
24 EDTUMF
25 SWITCH
26 CPPGCT
27 MN
28 IC_NFG
29 MAXFIL
30 MAXOPN
31 K_N360
32 TIMEW
33 &lt;em&gt;FPFLGNumber ofwordsina_INBbuffer BTSTRP
F@RTRAN looical unitforoutput BTSTRP
Flag defining status during Preface SEMDBD
FORTRAN logical unit forinput BTSTRP
Multipoint constraint setID SEMDBD
Single-point constraint setID SE_IDBD
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. __.&lt;/em&gt;^&lt;/em&gt; gF_DRD L_valu_ &amp;hellip;..
Firstrecord pointer inCaseControl datablock SEMDBD
Number oflinesperDa_eofprinted output BTSTRP
Material temperature setID SEMDBD
Current pagecount SEMDBD
Number oflinesoncurrent page SEMDBD
Totalnumber oflinesprinted forproblem SEMDBD
Maximum number ofprinted linespermitted SEMDBD
Today&amp;rsquo;s date-integer month 1-12 SEMDBD
Today&amp;rsquo;s date-inteoer day1-31 SEMDBD
Today&amp;rsquo;s date-integer year(XX) SEMDBD
Timeofproblem start-seconds aftermidnite SEMDBD
Bulkdataoutput reouest type SEMDBD
Structural plotrequest flag SEMDBD
Approach typeflag(2=DISDL, 3=DMAP) SEMDBD
Computing machine codenumber (2=360,3:1108,
4=6600) BTSTRP
Length ofthistable SEMDBD
Usermaster fileeditflag SEMDBD
Logical senseswitch bitssetbyaDIA_
Executive Control Deckcard SE_DBD
XCHKmodule pagecount SEMDBD
Usedonlyinaconical shellproblem. Thelower
order16bitscontain N,thenumber of
harmonics; thenexthigher order16bits
contain M,thenumber ofrings. SEMDBD
Machine configuration -subset ofMACHcode
number SEMDBD
Maximum number offiles tobeadded toFIAT SEr_DBD
Maximum number offiles tobeopened simultaneously SEMDBD
Number ofmemory words tobereleased for_S
(360 only) SEMDBD
Initial problem start time (integer seconds after
midnite) SEMDBD
_FPoperate flag-setnonzero whenOFPoperates SEMDBD
2.4-13 (811172)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Word
34
35
3637
3839
4041
42
4344
45
4647
48
495O
5152
53
5455
5657
58
596O
6162
63
6465Symbol
NBRCBU
NBRMST
NBRSUB
KSEMTR
QONBPC
NBPW
NCPW
SYSDAT(1)
SYSDAT(2)
SYSDAT(3)
TAPFLG
ADUMEL(1)
ADUMEL(2)
ADUMEL(3)
ADUMEL(4)
ADUMEL(5)
ADUMEL(6)
ADUMEL(7)
ADUMEL(8)
ADUMEL(9)
IPREC
!THRML
Unused
Unused
Unused
Unused
Unused
Unused
Unused
Unused
UnusedDescription
Length ofFET+circular buffer (CDC6600only)
Length ofmaster index(CDC6600only)
Length ofsubindex (CDC6600only)
InputDataTransliteration Flag(IBI_36_only)
Hydroelastic Problem Flag
Number ofbitspercharacter
Number ofbitsperword
Number ofcharacters perword
System Generation Date-Month
System Generation Date-Dav
System Generation Date-Year
Permanent FileTapeFlag
DummyElement Flag-DUMI
DummyElement Flag-DUM2
DummyElement Flag-DUM3
DummyElement Flag-DUM4
DummyElement Flag-DUM5
DummyElement Flag-DUM6
DummyElement Flag-DUM7
DummyElement Flag-DUM8
DummyElement Flag-DUM9
Precision Flag
HeatTransfer FlagInitially
Setby
SE_IDBD
SEMDBD
SEr_DBD
SEMDBD
SEMDBD
BTSTRP
BTSTRP
BTSTRP
TTLPGE
TTLPGE
TTLPGE
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SE_DBD
SEr_DBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
2.4-13a (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDT_,BLEDESCRIPTIONS
2.4.1.9 XLINK(LinkSpecification Tab]e- Non-resident Edit)
Description
ThisLinkSpecification Table(seealso2.4.2.7) contains anentrycorresponding toeach
DI_Pmodulewithin theMPL(2.4.2.2) table. Theseentries areindexed byMPLposition and
arethusordered thesameastheMPLentries. Eachentrycontains akeyindicating the
linksinwhichthemodule resides.
Created inModule
XLINKdataiscreated fromtheLNKSPC (2.4.2.7) andMPL(2.4.2.2) tablesbytheXGPIBS
subroutine within theXGPI(4.7)module.
TableFormat
Word 1
Word Item
1 LXLINK
2 MAXLNK
3,N KeyLXLINK
MAXLNK
Key
Key
KeyEntry#I(sample)
Entry#2
Entry#3
Description
Length oftable (number ofentries)
Maximum permissable linknumber
Linkresidence keyforthecorresponding MPLentry
Thecontent ofthisKeywordisidentical totheKeywordwithin LNKSPC (2.4.2.7) forthe
machine typecurrently operating. Seesection 2.4.2.7 foranexplanation ofthecontent.
Notes
I.TheXLINK table must contain anentry inthesameorder foreachmodule thatis
intheMPL(2.4.2.2) table.
2.XLINKtableislocated in/XLINK/.
2.4-14&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P17</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_017/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2Executive Tables NotPermanentl_ CoreResident
2.4.2.1 &lt;em&gt;SCAR (Operation Sequence Control Array)
Description
TheOperation Sequence Control Array (&lt;em&gt;SCAR) controls thesequence ofmodules executed and
aidsincommunicating data between modules.
The_SCAR isgenerated fromaDMAPinstruction sequence supplied bytheuserorselected
fromtheRigid Format library. Ingeneral, an_SCAR entry isaDMAPstatement which hasbeen
translated toamore readily usable formforinternal use.
Thefour_SCAR entry format types are:
I.Type lorF(functional) format isusedforallfunctional modules exceot outout
processors.
2.Type 2or&lt;/em&gt;(output) format isusedforoutput processors.
3.Type 3orC(control) format isusedforREPT, JUMP, C_NDandENDDMAPinstructions.
4.Type 4orE(executive) format isusedforSAVE, CHKPNT, PURGE andEQUIV DMAP
instructions.
Created inModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
NRN
MI LTi__7 L&lt;/em&gt;_ _.i
Module
Name
-El DINS31
Formatofthis
section isdependent
onvalueofTEntry Header Section
Entry DataSection
2.4-15&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
1
2
3
4,5
6Item
N
RN
MI
Name
EX
DINDescription
Integer -number ofwords inentry.
Integer -record number ofentryin_SCARtable.
Integer -module indexnumber assigned according tomodule&amp;rsquo;s
position inMPLandusedtoaccess themodule&amp;rsquo;s linkspecifica-
tionsin/XLINK/.
Integer -format typecode(l,2,3,or4)fordatasection
ofentry.
BCD-module nameissameasDMAPinstruction nameexcept when
T=4.
Execute flag. EX=1indicates module istobeexecuted.
Integer -DMAPinstruction number whichgenerated thisentry.
DataSection Format forTypeIorFFormat:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
IO+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
II+NIP&lt;em&gt;3+NOP&lt;/em&gt;3NIP
DATABLOCK
NAME
NTU
i
N_P
DATABLOCK
NAME
___ L1_s_
NS
NP
-C IL
(Notused)Sample entry
Sample entry
Sample entry
(variable length)Input
DataBlock
Subsection
Output
DataBlock
Subsection
Parameter
Subsection
2.4-!6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word
7
8,9
lO
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3,
lO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3 +
_fP&lt;/em&gt;3
lO+NIP&lt;em&gt;3 +
N@P&lt;/em&gt;3
II+NIP&lt;em&gt;3 +
N_P&lt;/em&gt;3Item
NIP
{tAME
AP
LTU
TP
NTU
N_P
NAME
AP,LTU,
TP,NTU
NS
NP
CV
ILDescription
Integer -number ofdatablocks input tomodule asspecified
inMPL.
BCD-nameoffirst input datablock specified inDMAPinstruc-
tionorzero ifnonespecified.
Append flagusedbysubroutine XSFAandsetbyX_SGEN ifAPPEND
isspecified fordatablock inaFILEDMAP instruction.
Integer -lasttimeused. _SCAR record n_ber ofentry a_ter
which datablock willnolonger besaved.
Tapeflagusedbysubroutine XSFAandsetbyX@SGEN iftapeis
specified fordatablock inaFILEDMAPinstruction.
Integer -nexttimeused. _SCAR record number ofentry where
datablock isnextreferenced.
Integer -number ofdata blocks output frommodule asspecified
inMPL.
BCD-nameoffirst output datablock specified inDMAP instruc-
tionorzeroifnonespecified.
Samedescriptions aswordlO.
Integer -number ofscratch datablocks usedbymodule as
specified inMPL.
Integer -number ofparameters usedbymodule asspecified in
MPL.
Constant/variable flag. Flag indicates meaning ofIL.
Integer -VPSindex/length ofconstant. IfCV=0theparameter
isaconstant whose value isstored inthenext ILwords (i.e.,
words 12+NIP&lt;em&gt;3 +NQIP&lt;/em&gt;3 through II+NIP&lt;em&gt;3 +N_P&lt;/em&gt;3 +IL).
IfCV=ltheparameter isavariable whose value isstored in
theVPStable. ILpoints tothevalue inVPS.
2.4-17&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
DataSection Format forType2or0Format:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP*38
9NIP
DATABLOCK
NAME
LTU NTU
I 15
INS
NP
&amp;ndash;31Sample entry
ISampl eentry
I(variable length)InputDataBlock
Subsection
IParameter
Subsection
Type1format description isapplicable totype2format above.
DataSection Format forType3orCFormat:
Word7=NI131RRN1716I11
Word Item Description
N RRN Integer -re-entry record number. Indicates OSCARrecord to
jumptoforJUMP,REPTandC_NDDMAPinstructions. Not
applicable forEXITsoRRN:O.
Integer -indexintoXCEITBL forREPTorEXITDMAPinstruction.
Pointer toparameter valueinXVPStable ifC@NDDMAP
instruction. Notapplicable forJUMPsoI:O.
2.4-18&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLE DESCRIPTIONS
DataSection Formats forType4orEFormats:
Word7
8
9
NNP
IV
IB Sample entryFormat for
SAVEDMAP
instruction
Word
7Item
NP
IV
IBDescription
Integer -number ofparameter values tobesaved (i.e. number
ofentries).
Integer -pointer toparameter value inVPS.
Integer -pointer toparameter value inblank common.
Word 7
8
9
N-l
NNDB
FIRST DATA
BLOCK NAME
LASTDATA
BLOCK NAMEFormat forCHKPNT
DMAP instruction
Word
7
8thru NItem
NDB
NAMESDescription
Integer -number ofdatablocks names inlist.
BCD-listofdatablocks tobecheckpointed.
2.4-19&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE _ESCRIPTIONS
Word7
8
9NDB
DATABLOCK
J _-
NAME
:
IVFormat forPURGE orEQUIV
DMAPinstruction
Word
7
8,9
N
Notes
I.
2.Item
NDB
N_4E
IVDescription
Integer -number ofdata block names infirst qroun.
maybeoneormoregroups.
BCD-name offirst datablock infirst group.
Integer -pointer toparameter value inVPStable.There
_SCAR islocated innamed common block /XGPII/while module XGPI isgenerating it.
After generating _SCAR andprior toexiting XGPIthe_SCAR iswritten ontheDataPool
File. The_SCAR fileheader IDisX_SCAR.
2.4-20&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.2MPL(ModulePropertyList)
Description
TheModule Properties Listcontains information needed bythemodule XGPItocorrectly
generate OSCAR table entries forexecutable DMAPinstructions and/or todetermine whether or
nottheDMAP instructions adhere tothecalling sequence described insection 4,Module
Functional Descriptions.
Created inModule
XGPI(Block DataProgram XMPLBD).
Table Format
There aretwoformats usedintheMPL,oneforDeclarative (FILE, BEGIN, LABEL), Executive
(CHKPNT, EQUIV, PURGE, SAVE) andControl (REPT, JUMP, C_ND, EXIT, END) DMAPmodules andtheother
forfunctional modules. Allentries intheMPLareinteger except formodule names which are
BCDandBCDparameter values.
Format forDeclarative, Executive andControl Modules:
Word
iiN4i2 Module
3 Name
4 F
Word
l
2,3
4Item
N
Name
FDescription
Nu_er ofwords inentry.
NameofDMAPmodule.
_SCAR format typecode
3=Control module (Cformat)
4=Executive module (Eformat)
5=Declarative module (Dformat)
2.4-21&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Format forFunctional Modules:
Word l,
2
3
4
5
6
7
8
NN
Module
Name
F
IP
@P
S
Parameter ListIVariable Length
Word
I-3
4
5 IP
6 @P
7 S
8-NItem
FDescription
Sameasformat forDeclarative, Executive andControl modules.
F:1implies module hasinputandoutputdatablocks
F:2implies module hasnooutput datablocks, e.g.,
_FP,SETVALetc.
Numberofinputdatablocks.
Numberofoutputdatablocks.
Number ofscratch datablocks.
Parameter List (omit ifnoparameters).
Theparameter listforamodule contains thetypesofallparameters residing inblank
common thatarereferenced bythemodule. Theorderoftheparameters intheMPLentrymust
coincide withtheorderoftheparameters inblankcommon. Spacemustbeallowed foradefault
valueiftheparameter typecodeispositive. Thespacefollowing apositive typecodewill
contain thedefault valueifthetypecodeisinteger orBCD,otherwise thespacewillcontain
anindexintoanother tablewhichcontains thedefault value.
TypeCode
1=integer
2:real,singleprecision
3=BCD
4=real,doubleprecision
5=complex, single precision
6=complex, double precisionSpaceNeeded forDefault Values
1word
1word
2words
2words
2words
4words
2.4-22 (12-I-69)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Anexampleofallpossibleentries inaparameter listfollbws. Notethatforeachparameter
onlythefirst index wordwill appear intheXMPLBD Block Datasubprogram.
m
l
-3
-___]I2
_&lt;em&gt;L&lt;/em&gt;
-2
3
ABCD
EFGH
-__3_34
l
&lt;strong&gt;I&lt;/strong&gt;
-45
2
___L2
-__E_s6
3
3
4
4
-6Word
8=Integer typecode.
9=Integer default value.
lO=Integer typecode(nodefault value).
II=Real, S.P.typecode.
12=Index intotable containing arealS.P.default value.
13=Real, S.P.typecode (nodefault value).
14=BCDtypecode.
is{16=BCDdefault value (2words).
17=BCDtypecode (nodefault value).
18=Real, D.P.typecode.
19=_Index intotable containing arealD.P.default value.
20 {Noteindex isinbothwords.
21=Real, D.P.typecode (nodefault value).
22=Complex, S.P.typecode.
23{24=Index intotable containing acomplex S.P.default value.
25=Complex, S.P.typecode(nodefault value).
26=Complex, D.P.typecode.
27{28=Index intotable containing therealpartofthecomplex D.P.default value.
29=_inaex in_ocaole containing theimaginary partofthecomplex D.P.
30tdefault value.
31=Complex, D.P.typecode(nodefault value).
Notes
I.MPLtable islocated innamed common block /XGPI2/.
2.Thedefault value table islocated innamed common block /XGPI2X/.
2.4-23(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.4.2.3 XPTDIC (Problem TapeDictionary)
Description
XPTDIC istheProblem TapeDictionary ofdatablocks checkpointed plusother information
needed torestart aproblem.
Created inModules
XGPI, CHKPNT andXCEI.
Table Format
Record Word
1
2
1
2
1
2
3
4
5
6
7
8
9
K
K+I
K+231
I&amp;quot;AFI1716 !,
S
XVPS &amp;mdash;-
BCDBLANKS
BCDBLANKS
__T31DIN 17116(&lt;em&gt;RN
m DBN &amp;mdash;
-EQTET_R] Rl F [
XVPS
EQ
R F
s13113Ol29 17&lt;/em&gt; 1
End-of-fileFirst entry ina
group isaspecial
entry
Repeat thisentry
foralldatablocks
referenced explicitly
orimplicitly in
CHKPNT instructionThis
group
of
entries
is
repeated
foreach
CHKPNT
module
executed
2.4-24&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Record Word Item
0 1,2 ID
l l PR
NAFDescri ption
Header record containing nameXPTDIC (BCD).
Present reelnumber ofProblem Tape. Reels are
numbered sequentially beginning with ReelI.
Nextavailable filenumber onpresent reel.
Files arenumbered sequentially beginning with
file I.
2 S
2 1,2 XVPSSequence number oflastrestart dictionary card
punched out.
BCDnameXVPS. Thefilecorresponding tothis
entry contains named common blocks /XVPS/and
/XCEITB/.
3 R,F
4,5 (blanks)
6 DIN
9RNReelnumber andfilenumber where thefile
corresponding tothisentry islocated. Forthis
entry thereelnumber mustbeone.
BCDblanks indicate special entry.
DMAP instruction number ofDMAPinstruction
following CHKPNT module (i.e., re-entry point).
&lt;em&gt;SCAR record number ofCHKPNT module being
executed.
/,&lt;/em&gt;
9UUI,
EQ
ET
ER
R,F
K,K+l XVPS
K+2 EQ,ET,
ER,R,Fn_+ k1,,v(RED)ofdatahlockbeing u_ua u,_ name __
checkpointed.
Equivalence flag. EQ=lindicates data block is
equivalenced toanother datablock.
Endoftapeflag. ET=lindicates that data
block issplit across tworeels ofproblem tape.
Endoflogical record flag. ER=lindicates
thatthecomplete logical record waswritten out
prior tochanging reels when ET=I.
Reelnumber andfilenumber where thefile
corresponding tothisentry islocated. For
purged ornot-generated datablocks, R=0and
F=O.
BCDnameXVPS. Thefilecorresnondina tothis
entry contains named common blocks /XVPS/,
/XCEITB/and/SYSTEM/.
Seeword9fordescriptions.
Notes
I.
2.
3.
°Allentries areinteger unless otherwise noted.
TheXPTDIC table isalways thelastfileontheProblem Tape.
XGPIgenerates records O,landthefirst entry ofrecord 2.CHKPNT modules add
entries torecord 3.XCEIdrops entries fromrecord 2whenaREPTDMAPinstruction
transfers control tothetopofaDMAPloon.
XCSAalsocreates aXPTDIC table whenproblem isbeing restarted. This soecial XPTDIC
table iscreated fromtherestart dictionary anditsformat isessentially thesameas
described above except thatthere arenospecial entries.
2.4-25&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.4PVT(Parameter ValueTable)
Description
TheParameter Value Table contains theparameter names andvalues ofallparameters input
bymeans ofthePARAM bulkdatacard.
Created inModule
IFP.
Table Format
Record Word Item
0 1,2 Header record contains namePVT(BCD).
1,2
3
4
3+LNameofparameter (BCD)
Type codeforparameter value
Value ofparameter. Type codes
andcorresponding lengths, L,of
values aregiven intable below.repeat
forall
parameters
onPAP_AM
cards.
Notes
TypeCode Meaning ofCode
Integer
Real, single precision
BCD
Real, double precision
Complex, single precision
Complex, double precisionCorresnonding
Length inWords
l
l
2
2
2
4
I.IFPdoesnotcreate PVTifnoPARAM cards exist intheBulk DataDeck.
2.PVTiswritten ontheProblem Tapeas2ormore records (aheader record andlrecord for
each PARAM card).
3.ThePVTtable islocated innamed common block /XPVT/.
2.4-26&lt;/p&gt;
&lt;p&gt;EXECLFTIVETABLEDESCRIPTIONS
2.4.2.5XCSA(Executive ControlTable)
Description
Executive control table derived from theExecutive Control Deck.
Created inModule
XCSA.
TableFormat
Record Word
0 l
2,3
4,5
6,7
l l
2
3,4
5
6
2 1
N
1
2
3
L
L+I
M
M+IItem
BCDwordXCSA-header ID.
BCDwordS_L_Dictionary ofcontents ofrecords
BCDwordDMAP_tofollow. Doesnotneedtobein
BCDwordMED)thisorder, norisMEDalways present.
Approach code iStart code
Alter parameters S_Lrecord
Solution number _Subset number
nn_kl^ f-_P_A nM_D &lt;em&gt;n_m&lt;/em&gt;
oruser_enerated DMAP
program (18words percard
image). )DMAPrecord
(BCDinformation)
Number ofDMAPinstructions
Number ofwords perISltable entry.
IS1table (Module Execution Decision Table).
Number ofentries inJNMtable.
JNMtable (File NameTable)
Number ofentries inINMtable
INMtable (Card NameTable)
4 End-of-fileMEDrecord
included
only if
aooroach
calls for
aRigid
Format
Notes
I.Datablock XCSA iswritten ontheProblem Tape.
2.Amore detailed description oftables ISl,JNMand INMisgiven intheModule
Functional Description formodule XCSA, section 4.2.
2.4-27&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.6XALTER(Executive AlterTable)
Description
XALTER isgenerated fromtheALTER data intheExecutive Control Deck.
Created inModule
XCSA.
Table Format
Record Word
0 1,2
l 1,2
l
18Item
BCDwordXALTER -header record
Numbers ofDMAPinstructions
tobealtered. (Integers).
Card image (BCD)
N End-of-file
Notes
XALTER datablock iswritten ontheProblem Tape.Zeroormoreofthese
records. Repeat until
next2word record
encountered.Repeat 1or
more times
until E_F
encountered.
2.4-28&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.7LNKSPC(LinkSpecification Table-ResidentBase)
Descri ption
ThisLinkSpecification Table (seealso2.4.1.9) contains anentry foreachexecutable
DMAPmodule available within theNASTRANsystem. Eachentry contains: a)theDMAPmodule
name, b)themodule&amp;rsquo;s subroutine entry point nameandc)akeyindicating thelinks inwhich
themodule resides foreachoffourmachine types.
Created inModule
LNKSPC dataisstored bytheXBSBD Block Datasubprogram inmodule XGPI (4.7).
Table Format
Word l
2
3
4
5
6
7
8
9LLINK
DMAPModule
Name
Entry Point
Name
Key#1
Key#2
Key#3
Key#4Entry #I(Sample)
Word
1
2,3
4,5
6
7
8
9Item
LLINK
DMAPModule Name
Entry Point Name
Key#1
Key#2
Key#3
Key#4Description
Length oftable inwords (excluding word l)
DMAPname-8 characters (4characters/word)
Entry name-8 characters (4characters/word)
Linkresidence keyformachine type#1
Linkresidence keyformachine type#2
Linkresidence keyformachine type#3
Linkresidence keyformachine type#4
2.4-29&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
ThemachinetypecodenumberisthesameasthatdefinedintheMACHwordoftheSYSTEM
(2.4.1.8)table.EachbitwithintheKeywordspecifiesalinknumberthatistocontainthat
module.Bitsarenumberedfromrighttoleft;therightmost(leastsignificant) bitspecifiesthatthemoduleistoresideinlinkl,etc.Forexample,ifaparticular Key
contained26(binaryOllOlO),onlylinks2,4and5wouldcontainthespecifiedmodule.
Notes
I.TheL_!KSPCtablemustcontainanentryforeachexecutable modulethatisinthe
MPL(2.4.2.2)table.
2.TheLNKSPCtableislocatedin/XLKSPC/.
2.4-30&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.8IFPXO(ModifiedRestartTable)
Description
IFPXO records thetypes ofchanges totheinput datawhich weremade during arestart. In
addition, itclassifies each typeofchange astosubstantive (solution affecting) ornonsub-
stantive (output onlyaffecting). Thebasic dataisstored inpacked format, 31bits totheword.
Theuseofthisarray inrestart anditscompanion /IFPXI/isdescribed insection l.lO,
Created inModule(s)
IFPI, XS@RT andIFPandreadbyXGPI.
Table Format
Word Item
l N
2 Il
3 Ll
4 I2
5 L2
6 I3
7 L3
8through 18 IB
19through 29Number ofpairs (I,L) tofollow.
Pointer tofirst word in/IFPXO/that isused
toflagmodified bulkdata.
Nu_er ofwords reserved formodified bulkdata
flags.
Pointer tofirst word in/IFPXO/that isused
toflagmodified CaseControl data.
Number ofwords reserved formodified Case
Control dataflags.
Notused.
Array containing flags which specify what input
hasbeenmodified forrestart (themeaning of
eachbitcanbedetermined from/IFPXI/.(See
section 2.4.2.9).
Array which specifies which bitsintheIBarray
caninitiate amodified restart.
2.4-31 (311171)&lt;/p&gt;
&lt;p&gt;UA[ABLOCKANDTABLEDESCRIPTIONS
2.4.2.9IFPXI(MasterCardNameTable)
Description
IFPXl contains mnemonics forthevarious cardtypes (anddatatypes) which canbesignificant
forrestart. Itisactually akeyintocommon block IFPXO (seesection 2.4.2.8).
array isdescribed insection l.lO.
Created inModule
Modules IFPI, XSORT, IFPandXGPIreadthisarray.
Table Format
Word No. BitNo.
InIFPXl InIFPXO Contents
l 31O
2 l GRID
4 2 GRDSET
6 3 BEAMOR
8 4 SEQGP
l0 5 CORDIR
12 6 CORDIC
14 7 CORDIS
16 8 CORD2R
18 9 CORD2C
20 lO CORD2S
22 II PLOTEL
24 12 SPCI
26 13 SPCADD
28 14 SUPORT
30 15 OMIT
32 16 SPC
34 17 MPC
36 18 FORCETheuseofthis
Output
Only (PMR)
Number of
CardTypes
YesSupported
NO
2.4-32 (3111;I)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
WordNo. BitNo. OutputInIFPXI InIFPXO Contents Only (PMR)
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
9619
20
21
22
23
24
25
26
27
28
29
30
31
32(word 2)
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48M_MENT
FIERCE1
M@MENTI
F_RCE2
M@MENT2
PL_)AD
SL_AD
GRAV
TEMP
GENEL
PROD
PTUBE
PVISC
PBEAM
PTRIAI
PTRIA2
PTRBSC
PTRPLT
PTRMEM
PQUADI
PQUAD2
PQDPLT
PQDMEM
PSHEAR
PTWIST
PMASS
PDAMP
PELAS
C_NR_D
CR_DSupported
No
2.4-33 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
49
5O
51
52
53
54
55
56
57
58
59
60
61
62
63(word 3)
64
65
66
64
68
69
7O
71
72
73
74
75
76
7798
I00
102
104
106
108
II0
112
114
116
118
120
122
124
126
128
130
132
134
136
138
140
142
144
146
148
150
152
154CTUBE
CVISC
CBEAM
CTRIAI
CTRIA2
CTRBSC
CTRPLT
CTRMEM
CQUADI
CQUAD2
CQDPLT
CQDMEM
CSHEAR
CTWIST
CONMI
CONM2
CMASSI
CMASS2
CMASS3
CMASS4
CDAMPI
CDAMP2
CDAMP3
CDAMP4
CELASI
CELAS2
CELAS3
CELAS4
MAT1Supported
No
2,4-34 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P18</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_018/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
156
158
160
162
164
166
168
170
172
174
176
178
18O
182
184
186
188
190
192
194
196
198
200
202
204
206
208
210
212
21478
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94(word 4)
95
96
97
98
99
lO0
lOl
I02
I03
I04
I05
I06
I07MAT2
CTRIARG
CTRAPRG
DEFORM
PARAM
MPCADD
LOAD
EIGR
EIGB
EIGC
REACT
MATSI
MATTI
OMITI
TABLEMI
TABLEM2
TABLEM3
TABLEM4
TABLESI
TEMPD
TABLES2
TABLES3
TABLES4
MATT2
MATS2
CTORDRG
SPOINT
SEQD
SEQDBFEYes
YesSupported
No
No
No
FORCE
FORCE
2.4-35 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
216
218
220
222
224
226
228
230
232
234
236
238
240
242
244
246
248
25O
252
254
256
258
260
262
264
266
268
27O
272
274I08
109
II0
III
112
113
114
115
116
117
118
119
120
121
122
123
124
125(word 5)
126
127
128
129
130
131
132
133
134
135
136
137QDSEP
SPQUADI
SPQUAD2
SPQDMEM
SPQDPLT
ZI
CTRIA3
PTRIA3
SETRBFE
VECDN
VECGP
DMI
DMIG
PTORDRG
MAT3
DLOAD
EPOINT
FREQI
FREQ
N_LINI
NOLIN2
NOLIN3
NOLIN4
RLOADI
RLOAD2
TABLED1
TABLED2
SEQEP
TF
TICSupported
FORCE
FORCE
FORCE
F_RCE
F_RCE
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
2.4-36 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156(word 6)
157
158
159
160
161
162
163
164
165
166
167276
278
280
282
284
286
288
290
292
294
296
298
300
302
304
306
308
310
312
314
316
318
320
322
324
326
328
330
332
334TLBADI
TL_AD2
TABLED3
TABLED4
TSTEP
DSFACT
AXIC
RINGAX
CC_NEAX
PCBNEAX
SPCAX
MPCAX
_MITAX
SUPAX
P_INTAX
SECTAX
PRESAX
TEMPAX
F_RCEAX
M_MAX
EIGP
MASSC
EDFIR
DF_RM
TABDMPI
TABDMP2
TABDMP3
TABDMP4
FREQ2
CQUAD3Supported
F_RCE
FQRCE
F_RCE
2.4-37 {311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
336
338
340
342
344
346
348
35O
352
354
356
358
360
362
364
366
368
37O
372
374
376
378
38O
382
384
386
388
390
392
394168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197PQUAD3
SPQUAD3
SETR
SPTRIAI
SPTRIA2
SPTRMEM
SPTRBSC
SPTRPLT
SECL
SECP
SEPTRIA3
BAROR
CBAR
PBAR
DAREA
DELAY
DPHASE
PLFACT
CGENEL
PGENEL
ELDELE
MATT3
RFORCE
TABRNDI
TABRND2
TABRND3
TABRND4
RANDPS
RANDTI
RANDT2Supported
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
F_RCE
FORCE
FORCE
FORCE
FORCE
F_RCE
2.4-38 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word No. BitNo. Output
InIFPXl InIFPXO Contents Only (PMR)&amp;quot;
396
398
400
402-598
600
602
604
606
608
610
612
614
616
618
620
622
624
626
628
630
632
634
636
638
640
642
644
646
64819B
199
200
201-299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324PLBAD1
PLEAD2
DTI
Notused
C_UPMASS
GRDPNT
WTMASS
IRES
LFREQ
HFREQ
LM_DES
G
W3
W4
M_DACC
MPC$
sPc$
L_AD$
METHODS
DEF(BRM$
TEMPLD$
TEMPMT$
IC$
ACUT$
LB_P$
LB_PI$
DLIBAD$
FREQ$
TF$Yes
Yes
Yes
YesSupported
2.4-39 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
650
652
654
656
658
660
662
664
666
668
670
672
674
676
678
680
682325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
346
341PLOTS Yes
TSTEP$
POUTS Yes
TEMPMX$
DSC_$
K2PP$
M2PP$
B2PP$
CMETH_D$
SDAMP$
INERTIA$
NLFORCE$
XYOUT$ Yes
DELETES
RANDOM$
AXYOUT$ Yes
NOLOOP$
NotUsedSupported
F_RCE
F_RCE
2.4-40 (3/I/71)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5 MISCELLANEOUS TABLE DESCRIPTIONS.
Thefollowing isanalphabetical index ofmiscellaneous table descriptions.
SectionNu_er TableName Where Stored Pa_eNumber
2.5.2.2 BITPi_S /BITP_S/ 2.5-7
2.5.2.4 CHAR94 /CHAR94/ 2.5-l0
2.5.2.7 CHRDRW /CHRDRW/ 2.5-13
2.5.1.6 DESCRP /DESCRP/ 2.5-3
2.5.2.1 GPTAI /GPTAI/ 2.5-6
2.5.1.5 MSGX /MSGX/ 2.5-3
2.5.l.8 NJ_MES /NAMES/ 2.5-4
2.5.l.l _SCENT /&lt;em&gt;SCENT/ 2.5-2
2.5.I.2 i_UTPUT /&lt;/em&gt;,UTPUT/ 2.5-2
2.5.2.3 PLTDAT /PLTDAT/ 2.5-8
&lt;em&gt;.5.i.&lt;/em&gt; &lt;em&gt;TTME /STIME/ 2.5-2
2.5.2.6 SYMBLS /SYMBLS/ 2.5-12
2.5.I.7 TW&lt;/em&gt; /TWO/ 2.5-4
2.5.1.9 TYPE /TYPE/ 2.5-4
2.5.l,4 XMDMSK /XMDMSK/ 2.5-3
2.5.2.5 XXPARM /XXPARM/ 2.5-Il
2.5-1(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1Miscellaneous TablesWhichArePermanently CoreResident.
2.5.1.1 OSCENT (_SCAR Entry)
Description
A200wordstorage arraycontaining the_SCARentry(record) currently beingprocessed.
Created inModule
Theentryisreadfromthe_SCARandstoredinOSCENTbytheXSEMi(section 3,3.7)sub-
routine. Otherexecutive routines thatrequire details ofthecurrent entrywillsearch _SCENT.
TableFormat
TheOSCENTformat isidentical tothe_SCAR(section 2.4.2.1) entryitcurrently contains.
2.5.1.2 _UTPUT (Output headings)
Descri ption
Astorage array containing problem title, subtitle, label andvarious headings required by
thePAGE(section 3.4.24) routine toproperly annotate theNASTRAN output.
Created inModule
Thetitle, subtitle andlabel aretaken fromCase Control Deckcards andstored in_UTPUI
byIFPI (section 4.3). Other heading lines maybestored byoutput modules prior tocalling
PAGE.
TableFormat
_UTPUT contains sufficient space forseven 128character lines. Thefirst three lines con-
tainthetitle, subtitle, andlabel. Thesubsequent three lines contain local headings, andthe
final linecontains theplotter ID.Since 4characters occupy eachcomputer word, theOUTPUT
array requires 224words ofstorage.
2.5.1.3 STIME (Solution Time)
Description
Astorage cellcontaing theuser&amp;rsquo;s estimated solution time.
Created inModule
Theestimated solution timeistaken from aExecutive Control Deckcard andstored into
STIME byXCSA (section 4.2)
Table Format
STIME consists ofasingle cellcontaining theestimated timeininteger seconds.
2.5-2&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIOr_S
2.5.1.4 XMDMSK (Executive Module Decision Mask)
Description
Contains the155bitmaster module execution mask (seesection l.lO) andacellindicating
oheckpoint status.
Created inModule
The155bitmaster module execution mask isgenerated andusedbyXGPI (section 4.7). The
checkpoint status seton(YES) byXCSA (section 4.2)bythepresence ofaCHKPNT =YEScardin
theExecutive Control Deck.
Table Format
The155bitmaskoccupies theloworder _lbits ofthefirst fivewords ofXMDMSK.
sixth word isthecheckpoint status (flag).The
2.5.1.5 MSGX (Message Queue)
Description
Aqueue table tohold fourword NASTRAN information anderror messages between thetime
they aregenerated byamodule andprinted bythemessage writer, MSG_IRT (section 3.4.26).
Created inModule
Messages maybegenerated byanyNASTRAN module through acalltoMESAGE (section 3.4.25).
Table Format
Word l
Word 2
Word 3-6
Word 6-endNun_er ofmessages queued.
Maximum nu_er ofmessages queue canhold
Fourword message entry (typical)
Additional fourword message entries
2.5.1.6 DESCRP (Matrix Description)
Description
Astorage block usedbysubroutine INTPK (section 3.5.3) tobuffer thematrix unpacking
procedure. Thisbuffering reduces thenumber ofI/_accesses totheparticular matrix data
block.
Created inModule
DESCRP isfilled andusedexclusively byINTPK
Table Format
Anarray with thefirst word defining thelength ofthearray.
2.5-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1.7 TWO(Powers ofTwo)
D_escription
A32word array witheachword (starting with linthe32ndword) containing thenextpower
oftwo.
Created inModule
The32integer values aredefined within theNASTRAN system block dataprogram (SEMDBD).
Table Format
Word32-l
Word31-2
Word30-4
Word29-8
etc.
2.5.1.8 NAMES(Symbolic Names)
Description
Aseries ofsymbolic names identified with their NASTRAN numeric equivalents.
forGINOfileoptions, arithmetic types andmatrix forms.Defines values
Created inModule
Thevalues aredefined within theNASTP_N system block data program (SEMDBD).
Table Format
Word SYMBOL VALUE Word SYMBOL VALUE Word SYMBOL VALUE
1 RD :2 7 EOFNRW =3 13 RECT :2
2 RDREW =0 8 RSP =1 14 DIAG :3
3 WRT =3 9 RDP =2 15 UPPER =4
4 WRTREW =l lO CSP =3 16 LOWER =5
5 REW =l II CDP =4 17 SYM =6
6 N_REW =2 12 SQUARE :1 18 R_W :7
19 IDENT =8
2.5.1.9 TYPE (Number Types)
Description
Aseries ofproperties aredefined asafunction ofanumber type. ThetypemaybeReal
Single Precision (RSP-I), RealDouble Precision (RDP-2), Complex Single Precision (CSP-3), or
Complex Double Precision (CDP-4). Theproperties thatmaybereturned include precision (single,
double), number ofwords, andrealorcomplex.
Created inModule
Theproperties aredefined within theNASTRAN system block data program (SEMDBD).
2.5-4&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
TableFormat
Word Property (Values)
l l
2 2
3 l
4 2
5 2
6 4
7 l
8 l
9 2
lO 2Type
Precision (RSP)
Precision IRDP)
Precision (CSP)
Frecision (CDP)Words (RSP)
Words (ROP)
Words ICSP)
Words (CDP)
Real/Complex (RSP)
(RDP)
(CSP)
(CDP)
Example
Assun_ thenu_er ofwordsrequired tocontain aComplex Single Precision (CSP-3) isdesired.
ThethirditemintheWordsarrayisindexed andfoundtocontain a2(words).
2.5-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2 Miscellaneous Tables NotPermanently CoreResident
2.5.2.1 /GPTAI/
Purpose
Todescribe connection andproperty characteristics ofeachelement. /GPTAI/ isusedin
modules GPI,GP2,GP3,TAI,SMAI,SMA2,DSMGI, SDR2,PL_T,andSSGI,andisinitialized bythe
blockdataprogram GPTABD andsubroutine DELSET.
Description
Word Type
1 I
2 I
3 I
4-5 B
6 I
7-8 I
9 I
I0-II I
12 I
13 I
14 I
15 I
16 I
17 I
18 I
19 I
20 I
21 I
22 I
23 I
24 IItem
Number ofentries (i.e., elements) intable
Pointer tofirstwordoflastentry intable
Number ofwords perentryintable
Nameofelement (e.g., R_D)
Internal element identification number
ECTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonECT
EPTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonEPT
Number ofgridpoints perelement
+I:Scalar element withgridpointand
component code
0:Notascalar element
-I:Scalar element withscalar points onl
Number ofwords perentryonEST
Position offirstgridpointinECTentry
Temperature data
Temperature datacount
2Hollerith symbols ifelement isplottable
Number ofwords SDR2passes fromPhase1
element routines toPhase2element routines
Countofwords SDR2outputs forrealstresses
Countofwords SDR2outputs forrealforces
Pointer intoanSDR2D tableforcombining of
realstresses toformcomplex stress outputs
Pointer intoanSDR2D tableforcombining of
realforces toformcomplex forceoutputsrepeated
for
each
element
2.5-6(8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
25
26
27Type
I
I
IItem
SMAI element overlay limb
SMA2 element overlay limb
SMA3 element overlay limb
2.5-6a (8/I/72)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.2 BITP_S.
Purpose
Toprovide pointers intoUSETandUSETD words forinterpreting thenested vector sets inNASTRAN.
Description
Word Item
l UM Bitnumber
2 UO Bitnumber
3 UR Bitnumber
4 USG Bitnumber
5 USB Bitnumber
6 UL Bitnumber
7 UA Bitnumber
8 UF Bitnumber
9 US Bitnumber
lO UN Bitnumber
II UG Bitnumber
12 UE Bitnumber
13 UP Bitnumber
14 UNE Bitnumber
15 UFE Bitnumber
16 UD Bitnumber
Note
Allwords areinteger.
2.5-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.3 PLTDAT
Purpose
Todefine plotter-dependent parameters.
Description
Thistable isdefined inthePL_TBD block datasubprogram. Thetable isdivided intoN+2
2D-word sections, where N=number ofplotters acceptable bytheNASTRAN plotting software.
Sections 3toN+2aretheonlysections initialized, because eachcontains values which aredepen-
dentupontheplotter hardware. Section lcontains values which mayvarywithin thelimits ofthe
hardware, andSection 2issimply aduplicate ofoneofthelastNsections corresponding tothe
plotter ofinterest.
Section 2mustbefilled inbythemodule writer. Theformat ofSections 2toN+2isas
follows:
Word Type Name Description
I-2 R XYMAX Maximum xandycoordinate values acceptable by
theplotter.
3 R CNTSIN Number ofplotter counts/inch onpaper.
4-5 R CNTCHR Number ofplotter counts percharacter inthex
andydirections.
6 R _XLEN Maximum length ofalinesegment.
7 I NPENS Maximum number ofpensorlinedensity available
ontheplotter.
8-9 R _RIGIN Forincremental plotters, thecurrent penposition
relative tothelower leftcorner oftheplot.
Otherwise, thelocation ofthelower leftcorner of
theplotter relative toitstruephysical origin.
I0 I PLTYPE/+l,+2,or+3iftheplotter isamicrofilm, table
&amp;lsquo;_ordrumplotter, respectively, with typing
)capability.
_-l, -2,or-3iftheplotter isamicrofilm, table
#ordrum plotter, respectively, with notyping
_capability (i.e., allcharacters must bedrawn).
II B PLTAPE
IPLTIifaneven parity plottape istobegeneratedforthisplotter.
PLT2ifanoddparity plottape istobegenerated
forthisplo&amp;ndash;tt&amp;rsquo;er.
12 I PBFSIZ Plottape physical record size (number ofcharacters)
13 I E_FIOifanend-of-file istobewritten after everyplot.
lifnoend-of-file istobewritten ontheplot
tape.
14-20 Undefined
2.5-8 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
Sectionlmustalsobefilledinbythemodulewriter.However,unlikeSection2,someof
theparameters mayvaryfromplottoplot,aslongastheyremainwithinthelimitations imposed
bytheplotterhardware. TheformatofSectionlisasfollows.
Word Type Name
I I F_DEL
2 I PL_TER
3-6 R REG
7-8 R AXYMAX
9-I0 R XYEDGE
II I CAMNUM
12-20Description
Plotter model index
Plotter index
Plotter region (Xmin,Ymin&amp;rsquo; Xmax&amp;rsquo; Ymax)inwhich
thecurrent picture isbeing drawn. These values
mustbesomefraction (between 0andl)ofwords
7and8(AXYF4AX).
Sizeofthepaper used(x,y), lesstheborders, in
plotter units.
Sizeoftheborders (x,y) inplotter units.
Current selected camera. Thiswordneednotbe
filled in,because itissetandusedasacon_nuni-
cation between theSELC#J_ andSKPFRM subroutines.
Undefined
usage
Sections land2arenormally setup bytheFNDPLT subroutine, except fortheplotter region
values (REG). These values must besetup bythemodule writer himself. Itisessential thatboth
these sections becorrectly setup, because theyarereferenced bytheentire NASTRAN plotter soft-
ware package.
IfSections land2arecorrectly setup bythemodule writer, heneednotsubsequently worry
about such things ascompensating forpaper margins ordifferent physical plotter origins. He
needonly assume thattheplotter origin islocated atthelower leftcorner ofthepaper where
theleftandbottom borders intersect. TheNASTItAN plotter software will automatically compensate
fortheborders andthephysical origin.
2.5-9 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.4 CHAR94
Purpose
Toprovide atable ofcharacters usedtogenerate plottapes asiftF,ecomputer were always
anIBM7094. Thistable however isindependent oftheactual computer used.
Description
This isa240word table defined inthePLOTBD block datasubprogram. Itisdivided intofour
equal sections of60words each. Eachentry ineach section hasaparallel entry intheother
three sections.
Section Iisastring ofalltheHollerith characters acceptable bytheplotmodules ofthe
form IHx,where xisaHollerith character.
Section IIcontains theinteger equivalents oftheIBM7094internal binary characters inthe
sameorderasSection I.However, neartheendofthissection areintegers representing various
additional characters notinSection I.Theseadditional characters cannotbeexpressed inthe
formIHxandareusedforspecial plotter commands. Eachentryinthistableisaright-adjusted
two-digit integer withleading zeroes.
Section Illcontains theinteger equivalents oftheIBM7094BCDcharacters astheywould
appear onanevenparity tapewritten onanIBM7094, inthesameorder andformasinSection II.
Section IVcontains theinteger equivalents oftheCDCdisplay character codes soastopro-
duceanevenparity BCDplottapeasifwritten onanIBM7094, inthesameorder andformasin
Section II.
Thesequence ofcharacters ineachsection isasfollows:
0l23456789
ABCDEFGHIj
KLMN_PQRST
uvwxYz()+-
*/= ,$&amp;lsquo;b
character 49=endofrecord mark
character 50=endoffilemark
characters 51-53 =special characters.
characters 54-60 =0
Note
InSection I,characters 49-60=O.
usage
Section Iisbasically usedforcalculating anindex intotheother twosections bycomparing
anarbitra_ Hollerith character witheach character inSection Iuntil amatch isfound. Once
thisisdone, theindex isusedtoextract thecorresponding entry fromeither Section IIorIll,
depending onwhether anoddoreven parity plottapeisbeing generated. Ifthecomputer isan
IBM7094, onlySection IIisused, andifthecomputer isaCDC6600andanevenparity plottape
isbeing generated, Section IVisusedinstead ofSection Ill.
2.5-10 (12-I-69)&lt;/p&gt;
&lt;p&gt;M!SCELLANEOUS TABLE DESCRIPTIONS
2.5.2.5 XXPAR_I
Purpose
Todefine theplottapebuffer size, thecamera tobeused, thenun,ber ofblank frames of
filmtobeinserted between plots, theplotter model name, andthepaper size tobeusedontable
&lt;em&gt;ters.
Description
Thistable isdefined asfollows inthePL_TBD block datasubprogram.
Word Type Name
l I BUFSIZ
2 I CAMERA
3 I BFP_a&lt;/em&gt;.IS
4-5 I,orB PLTMDL
8-9 R PAPSiZDescription
Plottapebuffer size
Plotter camera tobeused (appropriate onlyona
microfilm plotter).
Number ofblank frames offilmtobeinserted
between plots (appropriate onlyonamicrofilm
plotter).
Plotter model identification.
,,=&lt;em&gt;+&lt;/em&gt; &amp;ndash;__^&amp;lt;.h+ __hopape_r tnheused (appropri-
ateonlyontable plotters).
usage
Theinitial values ofthese variables areasfollows:
BUFSIZ =must besetbythemodule writer
CAMERA =2(paper output only)
BFRAMS =l
PLTMDL =4020, 0(integer)
PAPSIZ =8.5, ll.O
This table&amp;rsquo;s actual sizeis152words. Theremainder ofthetable isinitialized forthestructur-
alplotter module, PL_T, butmaybeusedbytheprogrammer foranything hedesires inother plot-
tingmodules.
2.5-11(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.6 SYMBLS
Purpose
Toprovide atable ofiFdices into theCHAR94 andCHRDRW tables used totype ordraw pre-
defined plotter symbols.
Description
Thetable isdefined inthePLOTBD block data subprogram. There isroom forupto20indices
foreach plotter. However, thesame number ofindices must bedefined foreach plotter. The
format ofthetable isasfollows:
Word Type
0 I
1-20 I
21-40 I
41-60 IDescription
Number ofsymbols defined foreachplotter (currently =9).
Symbol indices forplotter I.
Symbol indices forplotter 2.
Symbol indices forplotter 3.
There areasmany groups ofsymbol indices asthere areavailable plotters. Thesymbols
defined foreach plotter areasfollows:
Symbol l=x
Symbol 2=*
Symbol 3=+
Symbol 4=-
Symbol 5=.(dot, notaperiod).
Symbol 6=circle
Symbol 7=square
Symbol 8=diamond
Symbol 9=triangle
Should anyofthesesymbols notbeavailable onaplotter, asubstitution ofanother symbol must
bemade.
Usage
ThistableisusedbytheSYMBOL subroutine.
2.5-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.7 CHRDRW
Purpose
Todefine theco_ination oflines needed todrawalphanumeric characters andsymbols.
Descri ption
Thistable isdefinedinthePL_TBD block datasubprogram. Thetable isdivided intotwo
sections. Section Iisalistofindices intoSection If,usedtolocate thedataneeded todraw
characters. Thefirst 48indices inSection Icorrespond tothe48characters listed inSection I
oftheCHAR94 table. Thelast7indices areusedfordrawing thespecial characters listed inthe
SYMBLS table. Ifanindex isnegative, itisanindex intoSection Iinstead ofSection If.This
occurs when aduplicate character exists (e.g., azero, theletter &amp;ldquo;_&amp;quot;,andthesymbol fora
circle).
Section IIofthistable defines the(integer) coordinates ofthestarting andending points
ofthestraight lines tobedrawn inorder todrawacharacter orsymbol. Ingeneral, theneces-
sarystraight lines arecontiguous, sothattheendpoint ofonelineisthestarting point ofthe
next, etc. Insomecases, thisiseither impractical orimpossible (e.g., *,+,=,etc.). In
suchasituation, thestarting point ofaline isnegative, meaning that itisnottobeconnected
totheendpoint ofthepreceding line.
Thecharacters defined inSection IIarebased upon6x6square characters. Thevalues inthis
section aresimply integer coordinates within a6x6square.
Theformat ofthistable isasfollows:
Wor____dd Type Name
0 I LSTCHR
1-60 I CHRIND
61-760 I CHRDescription
Nameofcharacters andsyn_ols referenced in
Section I(=52).
Section I-&amp;ldquo;LSTCHR&amp;rdquo; indices intoSection II.
Section II:(x,y) pairs defining thelineal
representation of6x6square characters.
usage
This table isusedbytheDRWCHR subroutine.
2.5-13 (I2-I-69)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P19</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_019/</guid>
      <description>
        
        
        &lt;p&gt;INTRODUCTION
3.1INTRODUCTION
Section3contains descriptions ofsubroutines notanintegral partofamodule. Those sub-
routines which areanintegral partofamodule arediscussed insection 4,Module Functional
Descriptions. Section 3.2contains analphabetical index ofentry points ofroutines documented
insection 3.Asimilar index ofentry points documented insection 4canbefound insection
4.1.3.
Subroutine descriptions havebeenpartitioned into3classifications: executive, utility and
matrix subroutine descriptions, documented insections 3.3,3.4,and3.5respectively.
Descriptions oftheplotting utility routines (e.g., AXIS, section 3.4.40; AXISi, section
3.4.41) refer toplotters bynumber ortheletter &amp;ldquo;i&amp;rdquo;,andtoplotter models bynumber only. The
correspondence ofthese numbers toplotter hardware isgiven inTable I.Further details canbe
found insection 4oftheUser&amp;rsquo;s Manual.
3.l-I (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Table I.Correspondence Between External andInternal Plotter andModelNamesandNumbers.
where:External External Internal Internal
plotter name modelname plotter number modelnumber
BL
EAI
SC
CALC_MP
DD
NASTRAN
BL
EAI
SCSTE,30 1 1LTE,30
3500,30 2 13500,45 8 1
4020,0 3 1
/765,2O5 5 4
765,210 4 4
765,105 5 5
765,110 4 5
763,205 7 4
763,210 6 4
763,105 7 5
763,110 6 5
565,205 5 2
565,210 4 2
565,105 5 3
565,110 4 3
565,305 5 1
565,310 4 1
563,205 7 2
563,210 6 2
563,105 7 3
563,110 6 3
563,305 7 l
_563,310 6 l
80,B 9 l
M,O I0 +I
T,O II +2
D,O II +3
Pi,l I0 -I
T,l II -2
D,l II -3
=Benson Lehner
=Electronic Associates Inc.
=Stromberg Carlson
3.1-2 (12-I-69)&lt;/p&gt;
&lt;p&gt;INTRODUCTION
TableI.Correspondence Between External andInternal Plotter andModelNamesandNumbers (Cont&amp;rsquo;d),
CALC@MP
DD
NASTRAN=California Computing
=DataDisplay
=NASTRAN General Purpose Plotter
3.1-3 (12-I-69)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
3.2ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS.
SectionNumber
3.5.10
3.4.1
3.4.40
3.4.41
3.4.41
3.4.7
3.3.5
3.4.74
3.5.1
35.1
35.1
33.2
35.5
35.16
35.16
3.4.4
3.4.18
3.4.1
3.5.16
3.3.12
3.4.1
3.4.1
3.5.28
3.5.28
3.5.16
3.5.29
3.5.16
3.4.76
3.4.77Entry Point Subroutine Description
ADD ADD
ANDF MAPFNS
AXIS AXIS
AXIS3 AXISi
AXISIO AXISi
BCKREC BCKREC
BGNSYS ENDSYS
BISRCH BISRCH
BLDPK BLDPK
BLDPKI BLDPK
BLDPKN BLDPK
BTSTRP BTSTRP
CALCV CALCV
CDC@MP CDC_MP
CL_P CDC@MP
CLOSE CLOSE
CLSTAB CLSTAB
COMPLF MAPFNS
COMI2 CDC_MP
CONMSG C_NMSG
CORSZ MAPFNS
CORWDS MAPFNS
CSPL_O CSPSDC
CSPSDC CSPSDC
CTRNSP CDC_MP
CXFBS C×FBS
CXL_P CDC_MP
DAD_TB DAD_TB
DAXB DAXBPageNumber
3.5-19
3.4-I
3.4-70
3.4-72
3.4-72
3.4-9
3.3-6
3.4-123
3.5-I
3.5-I
3.5-I
3.3-2
3.5-12
3.5-62
3.5-63
3.4-5
3.4-26
3.4-I
3.5-63
3.3-16
3.4-I
3.4-I
3.5-82
3.5-82
3.5-63
3.5-84
3.5-63
3.4-126
3.4-127
3.2-I (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.5.15
3,4.72
3.5.15
3.5.15
3.5.21
3.4.68
3.4.62
3.5.22
3.3.5
3,4.9
3.5.23
3.5.17
3.5.17
3.5.17
3.5.12
3.5.15
3.5.15
3.4.17
3.4.69
3.4.75
3.4.15
3.4.6
3.5.15
3.5.19
3.4.12
3.4.61
3.4.32
3.4.33
3.3.4
3.3.9EntryPoint
DEC@MP
DELSET
DDL@@P
DL_@P
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACT@R
FBS
FBSDP
FBSSP
FILSWI
FINDC
FINWRT
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
GENVEC
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTSubroutine Description
DEC@MP
DELSET
DECAMP
DEC@MP
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACTOR
FBS
FBS
FBS
MPYQ
DEC@MP
DECAMP
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
DEC@MP
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTPageNumber
3.5-44
3.4-121
3.5-60
3.5-60
3,5-71
3.4-115
3.4-105
3.5-73
3.3-6
3.4-11
3.5-74
3.5-64
3.5-65
3.5-65
3.5-28
3.5-57
3.5-54
3.4-25
3.4-117
3.4-125
3.4-23
3,4-8
3.5-54
3.5-67
3.4-15
3.4-103
3.4-49
3.4-52
3.3-5
3.3-12
3.2-2(8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description Page Number
3.4.14 GOPEN G_PEN 3.4-22
3.4.71 HEAD HEAD 3.4-120
3.4.73 HMAT HMAT 3.4-122
3.4.44 IDPL_T IDPLBT 3.4-75
3.4.45 INTGPT INTGPX 3.4-76
3.4.45 INTGPX INTGPX 3.4-76
3.4.46 INTLST INTLST 3.4-77
3.5.3 INTPK INTPK 3.5-7
3.5.3 INTPKI INTPK 3.5-7
3.4.34 INVERD INVERD 3.4-53
3.4.35 INVERS INVERS 3.4-54
3.4.47 LINE LINE 3.4-78
3.4.48 LINE1 LINEi 3.4-79
3.4.48 LINE2 LINEi 3.4-79
3.4.48 LINE3 LINEi 3,4-79
3.4.48 LINE4 LINEi 3.4-79
3.4.48 LINE9 LINEi 3.4-79
3.4.48 LINEIO LINEi 3,4-79
3.4.30 LOCATE PREL_C 3.4-44
3.5.14 L_BP SDCBMP 3.5-42
3.4.1 LSHIFT MAPFNS 3.4-I
3.4.36 MAT PREMAT 3.4-55
3.4.28 MATDUM MATDUM 3.4-42
3.5.6 MERGE PARTN-MERGE 3.5-13
3.4.25 MESAGE MESAGE 3.4-39
3.5.9 MPART UPART 3.5-18
3.5.12 MPYAD MPYAD 3.5-22
3.5.12 MPYI MPYQ 3.5-28
3.5.12 MPY2NT MPYQ 3.5-28
3.5.12 MPY2T MPYQ 3.5-28
3.2-3(811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.4.26
3.5.15
3.4.2
3.4.13
3.4.1
3.5.2
3.4.24
3.4.24
3,4.24
3.5.6
3.4.22
3.4.70
3.4.70
3.4.70
3,4.70
3,4.63
3.4,67
3.4.30
3.4,36
3.4.39
3.4.37
3.4.38
3,4.49
3.4.20
3.5.15
3.4.13
3.4.50
3.4.50
3.4.50
3.4.16EntryPoint
MSGWRT
&lt;em&gt;NETW&lt;/em&gt;
_PEN
_PNC_R
_RF
PACK
PAGE
PAGEI
PAGE2
PARTN
PEXIT
PHDMIA
PHDMIB
PHDMIC
PHDMID
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
RC_RE
RDC@R
RDMODE
RDM_DX
RDM_DY
RDTRLSubroutine Description
MSGWRT
DEC@MP
@PEN
@PNC@R
MAPFNS
PACK
PAGE
PAGE
PAGE
PARTN-MERGE
PEXIT
PHDMIA
PHDMIA
PHDMIA
PHDMIA
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
DECAMP
_PNC_R
RDM_DX
RDM_DX
RDM_DX
WRTTRLPageNumber
3.4-40
3.5-54
3.4-3
3.4-20
3.4-I
3.5-5
3.4-38
3.4-38
3.4-38
3.5-13
3.4-36
3.4-118
3.4-118
3,4-118
3.4-118
3.4-106
3.4-113
3.4-44
3.4-55
3.4-67
3.4-64
3.4-66
3.4-81
3.4-32
3.5-58
3.4-20
3.4-83
3.4-83
3.4-83
3.4-24
3.2-4 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEX OFENTRY POINTS FORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description
3.4.50 RDW_RD RDM@DX
3.4.5 READ READ
3.3.15 RETURN RETURN
3.4.8 REWIND REWIND
3.4.1 RSHIFT MAPFNS
3.5.27 RSPL(&lt;em&gt;I RSPSDC
3.5.27 RSPSDC RSPSDC
3.5.6 RULER PARTN -MERGE
3.5.26 SADD SADD
3.4.78 SAD_TB SADOTB
3.4.79 SAXB SAXB
3.4.51 SCL@SE SGIN&lt;/em&gt;
3o5o!4 SDC_MP SDC_MP
3.5.8 SDRIB SDRIB
3.3.6 SEARCH SEARCH
3.4.43 SELCAM SELCAM
3.3.3 SEMINT SEMINT
3.3.14 SEMTRN SEMTRN
3.4.51 SE_F SGIN_
3.4.10 SKPFIL SKPFIL
3.4.42 SKPFRM SKPFRM
3.5.20 S_LVER S_LVER
3.4.51 S_PEN SGIN_
3.4.31 S_RT S_RT
3.5.7 SSG2A SSG2A
3.5.13 SSG2B SSG2B
3.5.11 SSG2C SSG2C
3.5.18 SSG3A SSG3A
3.3.11 SSWTCH SSWTCH
3.4.52 STPL_T STPL_TPageNumber
3.4-83
3.4-6
3.3-20
3.4-I0
3.4-I
3.5-80
3.5-80
3.5-14
3.5-78
3.4-128
3.4-129
3.4-85
3.5-30
3.5-17
3.3-8
3.4-74
3.3-3
3.3-19
3.4-85
3.4-12
3.4-73
3.5-69
3.4-85
3.4-46
3.5-16
3.5-29
3.5-20
3.5-66
3.3-15
3.4-87
3.2-5 (811172)&lt;/p&gt;
&lt;p&gt;Section Number
3.4.51
3.4.53
3.5.15
3.4.39
3.4.29
3.4,21
3.5.15
3.4.54
3.4,23
3.5.24
34.37
35.15
34,38
35.25
33.13
34,55
3.4.55
3.4.55
3.4.55
3.4.55
3.4.56
3.4.57
3.5.4
3.5.9
3.4.27
3,4.58
3.4.59
3.4.60
3.4.64
3.4.65
3.4.66SUBROUTINE DESCRIPTIONS
EntryPoint
SWRITE
SYMBBL
T
TAB
TABPRT
TAPBIT
TFIN
TIPE
TMTOGO
TRANPI
TRANSD
TRANSP
TRANSS
TRNSP
TTLPGE
TYPE1
TYPE2
TYPE3
TYPE9
TYPEIO
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOSubroutine Description
SGINO
SYMBOL
DECAMP
PRETAB
TABPRT
TAPBIT
DECAMP
TIPE
TMT_G@
TRANPI
PRETRD
DEC@MP
PRETRS
TRNSP
TTLPGE
TYPEi
TYPEi
TYPEi
TYPEi
TYPEi
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOPageNumber
3.4-85
3.4-88
3.5-58
3.4-67
3.4-43
3.4-35
3.5-58
3.4-90
3.4-37
3.5-75
3.4-64
3.5-53
3.4-66
3.5-76
3.3-17
3.4-92
3.4-92
3.4-92
3.4-92
3.4-92
3.4-94
3.4-96
3.5-10
3.5-18
3.4-41
3.4-98
3.4-100
3.4-102
3.4-108
3,4-110
3.4-111
3.2-6 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Nu_er Entry Point Subroutine Description PageNu_er
3.4.3 WRITE WRITE 3.4-4
3.4.13 WRTC{&lt;em&gt;R (&lt;em&gt;PNC{&lt;/em&gt; R 3.4-20
3.4.16 WRTTRL WRTTRL 3.4-24
3.3.lO XE_T XE_T 3.3-I4
3.4.Il XGIN{&lt;/em&gt; XGIN_ 3.4-I3
3.5.15 XL(_OP DEC(&lt;em&gt;MP 3.5-60
3.4.l X(&lt;em&gt;RF MAPFNS 3.4-I
3.4.19 XRCARD XRCARD 3.4-27
3.3.8 XSEMXX XSEMXX 3.3-Il
3.3.l XSEMI XSEMI 3.3-I
3.3.7 XSEM2 XSEMi 3.3-9
3.3.7 XSEM3 XSEMi 3.3-9
3.&lt;/em&gt;&lt;/em&gt; X_FM4 XSEMi 33-9 J.l &amp;hellip;. &amp;quot;
3.3.7 XSEM5 XSEMi 3.3-9
3.3.7 XSEM6 XSEMi 3.3-9
3.3.7 XSEM7 XSEMi 3.3-9
3o3.7 XSEM9 XSEMi 3.3-9
3.3.7 XSEMI0 XSEMi 3.3-9
3.3.7 XSEMIl XSEMi 3.3-9
3.3.7 XSEMI2 XSEMi 3.3-9
3.3.7 XSEMI3 XSEMi 3.3-9
3.3.7 XSEMI4 XSEMi 3.3-9
3.5.1 ZBLPKI BLDPK 3.5-I
3.5.3 ZNTPKI INTPK 3.5-7
3.2-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3
3.3.1
3.3.1.1
3.3.1.2EXECUTIVESUBROUTINE DESCRIPTIONS.
XSEMI (Executive Sequence Monitor, Preface).
Entry Point: XSEMI.
Purpose
Toinitiate theexecution oftheNASTRAN Preface.
3.3.1.3 Calling Sequence
CALLXSEMI
3.3.1.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine SEMINT
iscalled toexecute theprogram Preface (i.e. input file processors andDMAP Drogram compiler).
After initiating theproblem, modules arecalled asdirected bythe_SCAR until, amodule is
encountered inthe@SCAR thatdoesnotreside inlinklatwhich time XSEMI calls subroutine
ENDSYS toloadanewl&amp;hellip;.II1_•
3.3.1.5 Design Requirements
XSEMI mustreside inthecore resident portion oflinkI.Linklisnotre-entrant which
means thatoncetheprogram leaves linklitcannever transfer control backtolinkI.Functional
DMAPmodules cannotreside inlinkI.Open coreisusedforaGINBbuffer with named common block
/ESFA/defining thebeginning ofopencore. Seethesecond paragraph ofthedesign requirements
section ofthesubroutine description XSEMi (seesection 3.3.7) fordetails onfiles, datablocks,
andcommon blocks necessary foroperation.
3.3-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.2 BTSTRP (Bootstrap Generator I.
3.3.2.1 EntryPoint: BTSTRP.
3.3.2.2 Purpose
Determines themachine typeandinitializes themachine dependent constants andmasks
within theNASTRAN system blockdataprogram (SEMDBD).
3.3.2.3 Calling Sequence
CALLBTSTRP
3.3.2.4 Method
Themachine type(IBM7094,IBMS/360, Univac 1108,CDC6600)isdetermined byinspection of
themachine binary wordlength andtheknownmethods ofrepresenting negative integers (sign
andmagnitude orones/twos complement) usingthefollowing algorithm:
I.Iftheonescomplement (COMPLF seesection 3.4.1) of-Iisgreater than2,themachine
istheIBM7094. Ifnot,themachine isanIBMS/360, Univac 1108orCDC6600. (i.e., only
thesignandmagnitude representation of-Ionthe7094willyieldalarge (&amp;gt;2)positive
valuewhencomplemented.)
2.Shift(RSHIFT seesection 3.4.1) abinary machine wordofalll&amp;rsquo;stotherightthirty-
twobinary places. Compare theresulting valueto15.Ifthevalueislessthanfifteen,
themachine isthe32bitIBMS/360; equaltofifteen, the36bitUnivac 1108;andgreater
thanfifteen, the60bitCDC6600.
Oncethemachine typeisknown, theproper constants andmasks areselected fromassembled tables.
3.3.2.5 Design Requirements
Thissubroutine mustbemodified ifitistooperate withotherthanthefourmachine types
listed above.
3.3-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPIIONS
3.3.3 SEMINT (Sequence Monitor Initialization).
3.3.3.1 Entry Point: SEMINT.
3.3.3.2 Purpose
Toexecute thePreface ofaNASTRAN problem solution.
3.3.3.3 Calling Sequence
CALL SEMINT
3.3.3.4 Method
Thefirst card OftheNASTRAN data deck isread from thesystem input file anditsimaqe
stored inblank C@MMBN. XRCARD iscalled toconvert thecard. Ifthename ofthecard is
NASTRAN, &lt;em&gt;ecard isechoed andkeywords areidentified andappropriate words of/SYSTEM/are
reset totheinput values. Ifanunidentified keyword isdetected, orthecard hasaformat error,
amessage isprinted andtheN_GOflagisturned on.ThefirstwordofblankC_MM_N issettoc;b-&lt;/em&gt;
ifthecardwasaNASTRAN card,tozerootherwise. ThenGNFIAT iscalled togenerate theinitial
FIAT. XCSAiscalled toreadandprocess theExecutive Control Deck. IFPIiscalled toreadand
process theCaseControl Deck. XSORTiscalled toreadandsorttheBulkDataDeck. Ifbulk
dataispresent, IFPiscalled toprocess it.Iftheproblem isaconical shellproblem, IFP3is
called tofurther process zhebulk data. Ifthecurrent runistoprepare aUser&amp;rsquo;s Master File,
UMFEDT iscalled andcont_i isreturned toXS_RTforeachnewproblem tobewritten ontheUMF.
Otherwise, XGPIiscalled toperform General Problem Initialization andthenreturn ismadeto
XSEMIsignifying completion ofthePreface.
3.3.3.5 Design Requirements
IftheNASTRAN cardispresent, itmustbethefirstcardofthedatadeck.
3.3.3.6 Diagnostic Messages
UNIDENTIFIED NASTRAN KEYW_RD
BUFFSIZE
C_NFIG
MAXFILES
IvIAXOPEN
SYSTEMACCEPTABLE KEYW_RDS F{_LL{_W&amp;ndash;
3.3-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Self-explanatory.
NASTRAN CARDD_ESNOTHAVEC_RRECT F_RMAT.
Typical errors include non-integer values orcontinuation ofthecardfollowinq an=sign.
Seesection 6.3.1forfurther details ontheNASTRAN card.
3.3-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.4 GNFIAT (Generate FIAT).
3.3.4.1 Entry Point: GNFIAT.
3.3.4.2 Purpose
Determines thenumber oflogical files available within thecomputer hardware andsoftware
configuration andplaces anentry foreachintoFIATorXFIAT.
3.3.4.3 Calling Sequence
CALL GNFIAT
GNFIAT mustbecalled onceandonlyonceasthefirst call fromthepreface.
3.3.4.4 Method
Eachcomputer configuration hasitsownindependent subroutine toaccomplish thenecessary
functions ofGNFIAT. Thesubroutine interrogates unitblocks, datadefinition cards, filetables,
etco tod_termine thenumber oflogical files available within theconfiguration. Aseach
logical fileissensed, itisdetermined whether thefilehasbeenassigned toaohysical magnetic
tapeorsomebulk storage device suchasdiskordrum. Eachfilehasalogical nameand/or
number foridentification. These file ID&amp;rsquo;sarestored inFIAT, XFIAT orbothdepending on
several factors. AsthefileIDisstored, aphysical tapeflagissetwhere appropriate. The
factors thatdetermine FIATvs.XFIAT storage areasfollows: l)thefirst PFIST (seesection
2.4foradescription oftheFIST) files sensed arealways entered intoXFIAT, 2)except forthe
first file (always theP_L), allofthefirst PFIST files without tapeflags arealsoentered
intoFIAT, and3)allother files areentered intoFIATonly.
3.3.4.5 Design Requirements
Since GNFIAT routines arecomputer hardware/software dependent, operational requirements
maydiffer atvarious times. Seeappropriate commented assembly listing ifdifficulties or
error codes areencountered.
3.3-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.5 ENDSYS (End-of-Link).
3.3.5,1 EntryPoints: ENDSYS, BGNSYS.
3.3.5.2 Purpose
ForENDSYS, tosavevarious NASTRAN core-resident Executive Tables onascratch fileforuse
incommunicating withthenextlinkrequested.
ForBGNSYS, torestore theNASTRAN Executive Tables savedbyENDSYS andtoposition the
_SCARatthecorrect entrytobeexecuted intheresident link.
3.3.5.3 Calling Sequences
CALLENDSYS(LINK,X,REWFLG)
LINK -BCDnameofthelink. Thenaming convention is:NSOI=linkl,NS02=link2,
etc.
-Dependent onmachine type. FortheIBM7094only,X(6BCDcharacters) specifies
theunitwhere thelinksarestored. Notusedonothermachines.
REWFLG :0indicates LINKisaheadofcurrent link(i.e.wearegoingfromlinkNto
linkN+K,KTM0).IBM7094only;notusedonothermachines.
REWFLG :1indicates LINKisbehind current link(i.e.wearegoingfromlinkNto
linkN+K,K&amp;lt;0).IBM7094only;notusedonothermachines.
CALLBGNSYS.
3.3.5.4 Method
ForENDSYS, asearch ismadeforanempty fileandwhenfound theExecutive Tables are
written (saved) onit.Apointer tothesavefileissavedinblank common orwritten ona
system fileforusebyBGNSYS whenthenewlinkisloaded. Subroutine SEARCH isthencalled to
loadtherequested link.
BGNSYS iscalled afteranewlinkisloaded. Thepointer tothesavefilecontaining the
Executive Tables isobtained fromeither blankcommon orasystem file,andtheExecutive Tables
arereloaded intocore. The@SCARispositioned atthecorrect entrytobeexecuted, anda
RETURN ismadetothecalling routine.
3.3-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.5.5 Design Requirements
Program links areusually considered tobephysically separate Drograms, essentially
independent ofoneanother except forthefact that theoperating system executive (not theNASTRAN
executive) provides ameans bywhich control canbetransferred from onelink toanother when
requested bytheuser. Themeans bywhich theoperating system executive transfers control from
onelink toanother isdependent upon themachine andthesystem being used. Forsome future
machir,es there maybenomeans forbuilding physically separate links sothelinks become
logical subsets ofonehuge program.
Nomatter howthelinks areformed itisnecessary, when transferring from onelink to
another, that allfile assignments bepreserved aswell astheir status (i.e. don&amp;rsquo;t rewind thetapes).
Open core isused forGIN_ buffer area andthebeninning ofopen core isdefined bynamed
common block /ESFA/.
Ifnosave file isavailable orifanyoftheExecutive Tables tobewritten exceeds 900
words, thejobisterminated.
3.3-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.6 SEARCH (Search_ Load,andExecute Link).
3.3.6.1 EntryPoint: SEARCH.
3.3.6.2 Purpose
SEARCH locates (searches for)aparticular linkoftheNASTRAN system ontheLinkStoraQe
File,loadsthelinkintothecomputer memory andtransfers execution control tothelinkentry
point XSEMi, i=2,3,&amp;hellip;.
3.3.6.3 Calling Sequence
CALLSEARCH(LKNAM,LKFIL,REW)
LKNAM=4character symbolic nameoflink,i.e.,NSOI,NS02forlinkI,link2,etc.
LKFIL=symbolic nameoftheLinkStorage File(IBM7094only)
REW=setnon-zero toposition asequential LinkStorage Filetoitsbeginning
(IBM7094only)
3.3.6.4 Method
SEARCH ismachine dependent. Itinterfaces withthemachine operatin_ system toprovide a
multi-link capability. Eachlinkisasomewhat arbitrary parto#thecomplete NASTRAN system.
Thedivision intolinkswasnecessary onlybecause ofthesizelimitation forprogram complexes
imposed bythevarious operating systems. Thelinking technique foreachmachine isdiscussed
insection 5oftheProgrammer&amp;rsquo;s Manual.
3.3.6.5 Design Requirements
OnlytheIBil7094system requires theLinkStorage Filetobenamed (LKFIL) and,since itis
sequential, provides thecapability ofrewinding itfollowing aSEARCH call. Allothersystems
provide random access (disk, drum) LinkStorage Files.
3.3.6.6 Diagnostic Messages
Individual SEARCH subroutines mayabnormally terminate duetohardware malfunction. See
appropriate commented assembly listing ifdifficulties orerror codesareencountered.
3.3-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.7 XSEF!i (Link iMainProgram, i:2_3&amp;hellip;.
3.3.7.1 Entry Point: XSEMi.
3.3.7.2 Purpose
Togetthenextn_)dule tobeexecuted fromthe_SCAR, initialize themodule andcallit
ifitisinlinki,ortransfer tothelinkinwhich module resides ifitisnotinlinki.
3.3.7.3 Calling Sequence
Example: CALL XSEM2, wi_ere XSEM2 istheentry point oflink2
3.3.7.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine BGNSYS
iscalled toreload Executive Tables saved fromtheprevious link.
Thenext_SCAR entry isread intocoreandprocessed. Iftheentry isforafunctional
module, subroutine GNFIST iscalled tolinkfiles with inout, outnut andscratch datablocks
needed bythemodule. Variable parameter values needed bythemodule aretransferred toblank
common from table VPSwhich resides innamed con_non block /XVPS/.Constant values inthe_SCAR
entry parameter section aretransferred toblank common.
Thelinkspecification table innamed common block /XLINK/isexamined toseeifthemodule
resides inthislink. Ifitdoes, themodule iscalled. Upon returning fromthemodule, the
diagnostic message queue ischecked andmessage writer MSGWRT iscalled ifthere aremessages
queued. Begin andendexecution times areprinted outforfunctional modules.
Thenext_SCAR entry isreadandtheprocess isrepeated until amodule isencountered which
does notreside inthislink, atwhich timesubroutine ENL&amp;rsquo;SYS iscalled toinitiate loading ofthe
linkcontaining themodule.
3.3.7.5 Design Requirements
XSEMi mustreside inthecoreresident portion oflinki.L$nk iisre-entrant which means
program control canbetransferred tothislinkasoften asneeded. Onencore isusedfora
GINO buffer with named common block /ESFA/defining thebeainninp o_opencore. An_SCAR entry
cannot begreater than200words.
3.3-9&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Files, datablocks andnamedcommon blocks needed byXSEMiarelisted below, alongwithtype
ofaccess required (i.e.fetchand/or storedata)andreasons foruse.
DataPoolFile-fetch. Contains X_SCAR datablock.
X_SCAR -fetch. Contains _SCARentrytobeprocessed.1•
2.
3.
4.
5.
6.
7.
8.
9.
I0.
3.3.7.6Common /XLINK/ -fetch.
Common /XFIST/ -store.
Common /XPFIST/ -fetch.
Common /_SCENT/ -fetch.
Common /ESFA/ -store.
Common /XVPS/ -fetch.
tobeexecuted.
Common /MSGX/ -fetch.
Common /SEM/-fetch.
Diagnostic MessagesContains linkspecification table.
Initialized priortocallino GNFIST.
Contains parameter needed toinitialize FISTtable.
Contains _SCARentry tobenrocessed.
Defines beginning ofopencoreareausedbyGIN_buffer.
Contains variable parameter values needed toinitialize module
Contains diagnostic message queue,
Contains BCDnamesoflinksNSOI,NS02, &amp;hellip;.
Amessage iswritten ifthemodule tobeexecuted required morefilesthanareavailable.
Thejobisthenterminated.
3.3-10&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P2</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_002/</guid>
      <description>
        
        
        &lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.87.13
4.87.14
4.87.15Page No.
4.87.12.5 Stiffness Matrix Calculations (Subroutine KT_RDR
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-160
4.87.12.6 Mass Matrix Calculations (Subroutine MT_RDR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-165
4.87.12.7 Thermal Load Calculations (Subroutine TT_RDR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-166
4.87.12.8 Element Force andStress Calculations (Subroutines
STORDI andSTORD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-168
TheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
4.87.13.1
4.87.13.2Input Data fortheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
Damping Matrix Calculations (Subroutine BVISC of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-175
4.87.14.1
4.87.14.2
4.87.14.3
4.87.14.4
4.87.14.5
4.87.14.6Integral Calculations fortheTRIARG, TRAPRG Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-177
Integral Calculation forq&amp;gt;0andanyp.(Function
DKINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. ?&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;gt;0andq&amp;lt;-l(Function
DK8g) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;lt;0andq&amp;lt;-l(Function
DKIO0) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-180
Integral Calculations forp&amp;gt;-landq=-l(Function
DKJAB) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-181
Integral Calculations forp&amp;lt;-landq=-l(Function
DK219) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
Integral Calculations forp=-landq=-l(Function
DK211) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
TheFLUID2, FLUID3, FLUID4, AXIF2, AXIF3, AXlF4, andMFREE
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
4.87.15.1
4.87.15.2
4.87.15.3
4.87.15.4
4.87.15.5Input Data fortheFluid Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
Matrix Calculations fortheFLUID2 Element
(Subroutine KFLUD2 ofModule SMAIandSubroutine
MFLUD2 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-183
Matrix Calculations fortheFLUID3 Element
(Subroutine KFLUD3 ofModule SMAIandSubroutine
MFLUD3 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-186
Matrix Generation fortheFLUID4 Element
(Subroutine KFLUD4 inModule SMAIandSubroutine
MFLUD4 inModule SF_2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-188
Matrix Calculations fortheMFREEElement (Subroutine
MFREEinModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-189
xix(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.16
4.87.17TABLEOFCONTENTS (Continued)
PageNo.
4.87.15.6 Stress Calculations fortheAXIFElements,
Phase1&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-189
4.87.15.7 Stress Calculations fortheAXIFElements,
Phase2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
TheSL_T3andSLOT4FluidElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.1 InputDatafortheSL_T3andSL_T4Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.2 General Calculations fortheSLOTElements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-195
4.87.16.3 Stiffness Matrix Generation fortheSL_T3Elements &amp;hellip;.4.87-195
4.87.16.4 MassMatrix Generation fortheSL@T3 Elements &amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.5 Stress Matrix Calculations intheSL_TElements
(Phase I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.6 CSLOTi Element, Phase 2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-198
SolidPolyhedra Elements, TETRA, WEDGE, HEXAI, HEXA2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.1 InputDatafortheSolidPolyhedra Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.2 BasicEquations fortheTETRA Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-200
4.87.17.3 Stiffness Matrix Generations fortheTETRAElement
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.4 MassMatrix Generation fortheTETRA Element
(Subroutine MSOLID ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.5 Thermal LoadGeneration fortheTETRAElement
(Subroutine TETRAofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-201
4.87.17.6 Stress Calculations fortheTETRAElements
(Subroutines SSOLIDI andSSOLID2 ofModule SDR2) &amp;hellip;.. 4.87-202
4.87.17.7 BasicEquations fortheWEDGE, HEXAI, andHEXA2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-203
4.87.17.8 Stiffness Matrix Calculations andGeometry Checks
fortheWEDGE, HEXAI, andHEXA2 Elements (Subroutine
KSOLID ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-204
4.87.17.9 MassMatrix Generation fortheWEDGE, HEXAI, and
HEXA2 Elements (Subroutine MSOLID ofModule SMA2)&amp;hellip;.. 4.87-205
4.87.17.10 Thermal LoadGeneration fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutine S_LID ofModule SSG2)&amp;hellip;&amp;hellip; 4.87-206
4.87.17.11 Stress DataRecovery fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutines SSOLIDI andSS_LID2 of
Module SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-206
4.87.17.12 Thermal Analysis Calculations fortheSolid Elements
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-207
xx(811172)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.88
4.89
4.90
4.91
4.92
4.93
4.94
4.95
4.96
4.97
4.98
4.99
4.100
4.101
4.102
4.103
5.ae_.
4.87.18 TheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.1 InputDatafortheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.2 Stiffness Matrix Calculations (Subroutine HBDY
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-208
4.87.18.3 HBDYElement Thermal Loads(Subroutine HBDYof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-210
DETERMINANT METHOD OFEIGENVALUE EXTRACTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.88-I
EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.89-I
FUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC
PROBLEMS) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.90-I
EXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.91-I
FUNCTIONAL MODULE PLI-TRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.92-I
MATRIX MODULE UPARTN (PARTITIONS AMATRIX BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.93-I
MATRIX MODULE UMERGE (MERGES TWOMATRICES BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.94-I
MATRIX MODULE VEC(CREATES PARTITIONING VECTOR BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.95-I
MATRIX MODULE ADD5(ADDMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.96-I
FUNCTIONAL MODULE INPUT(INPUT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.97-I
FUNCTIONAL MODULE INPUTTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.98-I
FUNCTIONAL MODULE INPUTT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.99-I
FUNCTIONAL MODULE BUTPUTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.100-I
FUNCTIONAL MODULE _UTPUT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.101-I
OUTPUT MODULE _UTPUT3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.102-I
OUTPUT MODULE TABPRT (FORMATTED TABLEPRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.103-I
NASTRAN -OPERATING SYSTEM INTERFACES
5.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.1-I
5.2 NASTRAN OnTheIBM7094/7040(44) DCS(IBSYS) DELETED&amp;hellip;&amp;hellip;&amp;hellip;.. 5.2-I
5.3 NASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
5.3.1
5.3.2
5.3.3
5.3.4
5.3.5Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-I
Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-6
xxi(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
5.4
5.5TABLEOFCONTENTS (Continued)
PageNo.
5.3.6 Physical ItemsandGeneration ofNASTRAN Executable System &amp;hellip;&amp;hellip;. 5.3-13
5.3.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-17
5.3.8 GIN_(Generalized Input/Output Processor forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-20
5.3.9 Special ErrorCodesfromNASTRAN ontheSystem 360&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-22
5.3.10 System 360F_RTRAN Compilers usedforNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-23
5.3.11 IBM360-370 Overlay Charts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-24
NASTRAN ONTHEUNIVAC 1108(EXEC8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-I
5.4.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.3 LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-4
5.4.4 Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-5
5,4.5 Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-7
5.4.6 Description ofNASTRAN Physical ItemsandGeneration ofthe
NASTRAN Executable System &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-10
5.4.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-12
5.4.8 Procedure toCopytheThree System Tapes &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-15
5.4.9 NASTRAN Tapes (Files) Catalogue Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-17
5.4.10 NASTRAN Update Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-19
5.4,11 Regenerate theExecutable Tape &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-20
5.4.12 TheASGCRDS Program File&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-22
5.4.13 TheC_NTRL orC_NTRL42K Program File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-23
5.4.14 Description ofaDemonstration Problem Starter Deck&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-24
5.4.15 TapeandProblem Numbers fortheNASTRAN Demonstration Problem
InputDataTape&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-27
5.4.16 GIN_(Generalized Input/Output forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-28
5.4.17 Matrix Packing Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-32
5.4.18 1108TimeEstimation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.19 Single Precision Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.20 UNIVAC Overlay Diagrams &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-39
NASTRAN ONTHECDC6400/6600 (SCOPE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-I
5.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-I
5.5.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.5-2
xxii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
5.5.3
5.5.4
5.5.5
5.5.6
6.PageNo.
Layout ofCoreStorage &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-6
Physical Deliverables andGeneration ofExecutable System &amp;hellip;&amp;hellip;.. 5.5-9
Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-12
5.6 THECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-I
5.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-I
5.6.2 Preparing forLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-6
5.6.3 Designing anOverlay Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-7
5.6.4 Linkage Editor Control Statements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-12
5.6.5 Examples ofLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-23
5.6.6 Storage Requirements fortheLinkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-29
5.6.7 Link-Edited Linkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-30
MODIFICATIONS ANDADDITIONS TONASTRAN
6.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.l-I
6.2 FBRTRAN IVLANGUAGE RESTRICTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.2-I
6.3 THEEXECUTIVE CONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.3-I
6.3.1 TheNASTRAN Card&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.3-I
6.4 THECASECONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.4-I
6.5 THEBULKDATADECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 65-I
6.6 RIGID FORMATS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.6-I
6.7 FUNCTIONAL MODULES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 67-I
6.8 ADDING ASTRUCTURAL ELEMENT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-I
6.8.1 Introduction totheProblem &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-I
6.8.2 General Guidelines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-16
6.8.3 Specific Checklists &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-27
6.8.4 Updating theNASTRAN Manuals &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-49
6.8.5 Dummy UserElements (DUMI through DUM9) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-54
6.9 PRINTED OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.9-I
6.10 PLOTTER OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-1
6.10.1 Changes tothePlotter Software &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-1
xxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
6.11
6.12
7,6.10.2
6.10.3
6.10.4
6.10.5
6.10.6
ADDITION
6.11.I
6.11.2
6.11.3
6.11.4
6.11.5Pa_eNo.
Changes tothePL_TModule, theStructural Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-3
Changes totheXYPLOT Module, theXYPlotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-4
Changes totheSEEMAT Module, theMatrix Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-4
UseoftheNASTRAN Plotter Software inaNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-6
NASTRAN General Purpose Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-14
OFANEWLINK&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.11-I
Modules toInclude &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.11-I
Addition of_ewModules &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.11-I
Generation ofaNewLinkSpecification TableandaNewLink
Driver &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Subsys theNewLink&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Increasing theLinkLimit &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
6.12,1
6.12.2
6.12.3
6.12.4
6.12.5
NASTRAN SUPPORT
7.1
7.2WRITING ANEWMODULE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Summary ofNASTRAN Coding Conventions andTerminology &amp;hellip;&amp;hellip;&amp;hellip;..
Module Design &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Implementing theNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Coding aModule Subroutine &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Sample Module Coding &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
PROGRAMS
INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
7.2.1
7.2.2
7.2.3
7.2.4
7.2.5
7.2.6
7.2.7
7.2.8
7.2.96.11-2
6.11-4
6.11-4
6.12-I
6.12-I
6.12-3
6.12-7
6.12-8
6.12-12
7.1-I
7.2-I
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-2
Discussion oftheMajor Divisions oftheLinkage Editor/Loader ..7.2-14
Flowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-79
Subroutine Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-134
Object DeckFormat &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-176
Principal Linkage Editor Variable &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-183
Linkage Editor Output andDiagnostic Messages &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-191
Recommended Improvements totheLevel2.0Version &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-204
Linkage Editor Glossary &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-205
xxiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
7.3TABLE OFCONTErJTS (Continued)
Page No.
THESOURCE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
7.3.1
7.3.2
7.3.3
7.3.4
7.3.5Purpose oftheSource Conversion Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
Conversion Performed &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-I
MajorDivisions intheProgram &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-8
UseoftheSCP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-19
SCPFlowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-20
xxv(8/I/72)&lt;/p&gt;
&lt;p&gt;MostRecent
811172
*i 811172
*ii 811172
*iii BII172
*iv 811172
*v 8/1/72
*vi 8/1/72
*vii 8/1/72
*viii 811172
*ix 811172
*x 8/I/72
*xi 8/I/72
*xii 8/I/72
*xiii BII/72
*xiv 8/3/72
*xv 8/1/72
*xvi 811172
*xvii 8/I/72
*xviii B/1/72
*xix B/I/72
*xx 811/72
*xxi 8/I/72
*xxii 8/l/72
*xxiii 8/I/72
*xxiv Bl1172
*xxv B11172
*xxvi 8/I/72
*xxvii 8/I/72
*xxviii 8/I/72
*xxix 811/72
&lt;em&gt;XXX
l.I-I
l.I-2
1.I-3
1.I-4
I.2-I
l.2-2 8/I/72&lt;/em&gt;l.2-3
1.2-4
1.2-5
I.2-6
1.2-7 8/1/72
*I.2-8 811172
*l•2-9 8/l/72
**l.9-9a
1.2-10 8/I/72
*I.2-11
l.2-12 ll/I/70
1.2-13 II/1/701.2-14
l.3-I
I.3-2
1.3-3
1.4-I
I.5-I
I.5-2 12/I/69
1.6-I
1.6-2
1.6-3
l.6-4PAGEsTATUS LOG
MostRecent
12/1/69
811172
811172
12/I/69
811172
1111170
1111170
1111/70
1111170
8/1/72
8/1/72
8/1/72
1111170
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72_ e P,__ °MostRecent
*2.3-28a
*2.3-29
-2.3-29a
**2.3-29b
*2.3-30
2.3-31
2.3-32
2.3-33
2.3-34
2.3-35
2.3-36
2.3-37
2.3-38
2.3-39
2.3-40
,2.3-41
2.3-42
2.3-43
*2.3-44
2.3-45
*2.3-46
**2.3-46a
2.3-47
2.3-48
*2.3-49
*2.3-49a
**2.3-49b
*,2.3-49c
2.3-50
2.3-51
*2.3-52
2.3-53
2.3-54
2.3-55
2.3-56
2.3-57
2.3-58
2.3-59
2.3-60
2.3-61
2.3-62
2.3-63
2.3-64
2.3-65
2.3-66
2.3-67
2.3-68
2.3-69
2.3-70
2.3-71
2.3-72
2.3-73
2.3-74
2.3-75
2.3-76
2.3-77
2.3-78
2.3-79
2.3-80811172
8/1/72
811172
8/1/72
811172
1111170
8/1/72
811172
1211169
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
1211169
3/1/71
xxvi(8/1/72)
f&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
2.3-81
2.3-82
2.3-83
2.3-84
2.3-85
2.3-86
*2.3-87
2.3-88
2.3-89
2.3-90
2.3-91
2.3-92
2.3-93
2.3-94
2.3-95
2.3-96
2.3-97
2.3-98
*2.3-99
2.3-I00
2.3-I01
2.3-I02
2.3-I03
2.3-104
2.3-I05
2.3-I06
2.3-I07
2.3-I08
2.3-I09
2.3-II0
2.3-II
2.3-12
2.3-13
2.3-14
2.3-15
2.3-16
2.3-17
2.3- 18
2.3-I19
2.3-120
2.3-121
2.3-122
2.3-123
2.3-124
&amp;ldquo;2.3-125
&amp;ldquo;2.3-126
&amp;ldquo;2.3-127
2.3-I27a
2.3-128
2.3-129
2.3-130
2.3-131
2.3-132
2.3-133
2.3-134
2.3-134a
2.3-135
2.3-136
2.3-136aMostRecent
DateChanged
811172
811172
7/I/70
7/I/70
12/I/69
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
2.3-137
2.3-138
2.3-139
2.3-140
2.3-141
&amp;ldquo;2.3-142
2.3-143
*2.3-I 44
*2.3-I 45
2.3-146
2.3-147
2.3-148
2.3-149
*2.3-I 50
2.3-151
2.3-152
2.3-153
2.3-154
2.3-155
2.3-156
2.3-157
2.3-158
2.3-159
2.3-160
2.3-161
2.3-162
2.3-163
2.3-164
2.3-165
2.3-166
2.3-167
2.3-168
2.3-169
2.3-170
2.3-171
2.3-172
2.3-173
2.3-I74
2.3-175
2.3-176
2.3-177
2.3-178
2.3-179
2.3-180
2.3-181
2.3-182
2.3-183
&amp;ldquo;2.3-184
2.3-185
*2.3-I 86
&amp;ldquo;2.3-187
*2.3-I 88
2.3-189
&amp;ldquo;2.3-190
&amp;ldquo;2.3-191
*&amp;lsquo;2.3-191a
2.3-192
2.3-193
&amp;ldquo;2.3-194Most Recent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72Pae_.
2.4-I
2.4-2
2.4-3
2.4-4
2.4-5
2.4-6
2.4-7
2.4-8
2.4-9
2.4-I0
2.4-II
2.4-12
&amp;ldquo;2.4-13
&amp;ldquo;2.4-13a
2.4-14
2.4-15
2.4-16
2.4-17
2.4-18
2.4-19
2.4-20
2.4-21
2.4-22
2.4-23
2.4-24
2.4-25
2.4-26
2.4-27
2.4-28
2.4-29
2.4-30
2.4-31
2.4-32
2.4-33
2.4-34
2.4-35
2.4-36
2.4-37
2.4-38
2.4-39
2.4-40
2.5-I
2.5-2
2.5-3
2.5-4
2.5-5
*2.5-6
**2.5-6a
2.5-7
2.5-8
2.5-9
2.5-I0
2.5-II
2.5-12
2.5-13
3.l-I
3.1-2
3.1-3Most Recent
DateChanged
311171
8/I/72
8/I/72
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
311171
311171
311171
311171
311171
1211169
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
xxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
&amp;ldquo;3.2-I
*3.2-2
*3.2-3
*3.2-4
*3.2-5
*3.2-6
**3.2-7
3.3-I
3.3-2
3.3-3
3.3-4
3.3-5
3,3-6
3.3-7
3.3-8
3.3-9
3.3-10
3.3-11
3.3-12
3.3-13
3.3-14
&amp;ldquo;3.3-15
&amp;ldquo;3.3-15a
3.3-16
&amp;ldquo;3.3-17
*&amp;lsquo;3.3-18
*&amp;lsquo;3.3-19
**3.3-20
3.4-I
3.4-2
3.4-3
3.4-4
3.4-5
3.4-6
3.4-7
3.4-8
3.4-9
3.4-10
3.4-11
3.4-12
3.4-13
3.4-14
3.4-15
3.4-16
3.4-17
&amp;ldquo;3.4-18
3.4-19
3.4-20
3.4-21
3.4-22
3.4-23
*3.4-24
3.4-25
3.4-26
3.4-27
*3.4-28
3.4-29
3.4-30
3.4-31
3.4-32MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72PaseNo
3.4-33
3.4-34
3.4-35
*3.4-36
3.4-37
3.4-38
3.4-39
3.4-4O
3.4-41
3.4-42
3.4-43
3.4-44
3.4-45
3.4-46
3.4-47
3.4-48
3.4-49
3.4-50
3.4-51
3.4-52
3.4-53
3.4-54
3.4-55
3.4-56
3.4-57
3.4-58
3.4-59
3.4-60
3.4-61
3.4-62
3.4-63
3.4-63a
*3.4-64
*3.4-65
3.4-66
3.4-67
3.4-68
3.4-69
3.4-70
3.4-71
3.4-72
3.4-72a
3.4-73
3.4-73a
3.4-74
3.4-74a
3.4-75
3.4-75a
3.4-76
3.4-77
3.4-78
3.4-78a
3.4-79
3.4-80
3.4-81
3.4-82
3.4-83
3.4-84
3.4-85
3.4-86MostRecent
DateChan_ed
3/I/71
8/I/72
12/I/69
12/I/69
3/I/71
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
3.4-87
3.4-87a
3.4-88
3._-89
3.4-90
3.4-91
3.4-92
3.4-93
3.4-94
3.4-95
3.4-96
3.4-97
3.4-98
3.4-99
3.4-100
3.4-101
3.4-102
3.4-103
3.4-104
3.4-105
3.4-106
3.4-107
3.4-108
3.4-109
3.4-110
3.4-111
&amp;ldquo;3.4-112
3.4-113
3.4-114
3.4-115
3.4-116
3.4-117
*&amp;lsquo;3.4-118
*&amp;lsquo;3.4-119
**3.4-120
*&amp;lsquo;3.4-121
*&amp;lsquo;3.4-122
*&amp;lsquo;3.4-123
*&amp;lsquo;3.4-124
*&amp;lsquo;3.4-125
*&amp;lsquo;3.4-126
*&amp;lsquo;3.4-127
*&amp;lsquo;3.4-128
*&amp;lsquo;3.4-129
**3.4-I 30
&amp;ldquo;3.5-I
3.5-2
3.5-3
*3.5-4
3.5-5
3.5-6
*3.5-7
*3.5-8
*3.5-9
3.5-10
3.5-11
3.5-12
3.5-13
3.5-14
3.5-15MostRecent
DateChansed
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
7/I/70
7/I/70
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxviii&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
Pae_.
3.5-16
3.5-17
3.5-18
3.5-19
3.5-20
3.5-21
3.5-22
*3.5-23
3.5-24
3.5-25
*3.5-26
*3.5-27
*3.5-28
**3.5-28a
3.5-29
3.5-30
3.5-31
3.5-32
3.5-33
3.5-34
3.5-35
3.5-36
3.5-37
3.5-38
3.5-39
3.5-40
3.5-41
3.5-42
*3.5-43
*3.5-44
3.5-45
3.5-46
3.5-47
3.5-48
3.5-49
3.5-50
3.5-51
3.5-52
3.5-53
3.5-54
3.5-55
3.5-56
3.5-57
3.5-58
3.5-59
3.5-60
3.5-61
3.5-62
*3.5-63
3.5-64
*3,5-65
**3.5-65a
3.5-66
3.5-67
3.5-68
3.5-69
3.5-70
3.5-71
3.5-72MostRecent
DateChanged
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
12/I/69
8/I/72
8/I/72
8/I/72PageNo.
3.5-73
3.5-74
3.5-75
3.5-76
3.5-77
3.5-78
3.5-79
**3.5-80
**3.5-81
**3.5-82
**3.5-83
**3.5-84
**3.5-85
*4.I-I
4.1-2
4.1-3
4.1-4
4.1-5
4.1-6
*4.I-7
**4.1-7a
*4.1-8
*4.I-9
&amp;ldquo;4.1-10
*4.1-I1
&amp;ldquo;4.1-12
&amp;ldquo;4.1-13
&amp;ldquo;4.1-14
&amp;ldquo;4.1-15
*4.1-16
&amp;ldquo;4.1-17
*4.I-I8
*4.1-19
*4.1-20
*4.1-21
**4.1-22
**4.1-23
4.2-I
*4.2-2
4.2-3
4.2-4
4.2-5
4.2-6
4.3-I
4.3-2
4.3-3
4.3-4
4.3-5
4.3-6
4.3-7
4.3-8
4.3-9
4.3-10
&amp;ldquo;4.3-11
&amp;ldquo;4.3-12
4.4-I
4.4-2
4.4-3
4.4-4
4.4-5MostRecent
DateChanged
12/I/69
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
811/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
8/I/72
8/I/72PageNo.
4.4-6
4.4-7
4.4-8
4.4-9
4.4-10
4.4-11
&amp;ldquo;4.5-I
*4.5-2
4.5-3
4.5-4
*4.5-5
*4.5-6
*4.5-7
*4.5-8
*4.5-9
&amp;ldquo;4.5-10
*4.5-I1
&amp;ldquo;4.5-12
&amp;ldquo;4.5-13
**4.5-13a
&amp;ldquo;4.5-14
&amp;ldquo;4.5-15
&amp;ldquo;4.5-16
&amp;ldquo;4.5-17
&amp;ldquo;4.5-18
&amp;ldquo;4.5-19
**4.5-20
4.6-I
4.6-2
4.6-3
4.6-4
4.6-5
4.6-6
4.6-7
4.6-8
4.6-9
4.6-10
4.6-11
4.6-12
4.6-13
4.6-14
4.6-15
4.7-I
4.7-2
4.7-3
4.7-4
4.7-5
*4.7-6
**4.7-6a
4.7-7
4.7-8
4.7-9
4.7-10
4.8-I
4.8-2
4.9-I
*4.9-2
4.9-3
4.9-4Most
DateRecent
Changed
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxix(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.9-5
4.9-6
4.9-7
4.9-8
4.9-9
4.9-10
4.10-I
4.10-2
4.10-3
4.10-4
4,11-I
4.11-2
4.11-3
4.12-I
4.13-I
4.13-2
4.14-I
4.14-2
4.15-I
4.16-I
4.16-2
4,16-3
4.16-4
4.17-I
4.17-2
4.17-3
4.17-4
4.17-5
4.17-6
4.18-I
4.19-I
4.19-2
4.20-I
4.21-I
4.21-2
4.21-3
4.21-4
4.21-5
4.21-6
&amp;ldquo;4.21-7
4.21-8
4.21-9
4.22-I
4.22-2
*4.22-3
4.23-I
4.23-2
*4.23-3
*4.23-4
*4.23-5
4.24-I
4.24-2
4.24-3
4.24-4
4.24-5
4.24-6
4.24-7
4.24-8
4.24-9MostRecent
DateChanged
8/I/72
11/I/70
8/]/72
1211169
811/72
811/72
811/72
12/I/69
12/I/69
3/I/71
3/I/71Pae_.
4.24-10
4.24-I1
4.24-12
*4.24-I 2a
4.24-13
&amp;ldquo;4.24-14
4.24-15
4.24-16
4,24-17
4.24-18
4.25-I
4.25-2
4.25-3
4.25-4
4.25-5
4.25-6
4.25-7
4.25-8
4.25-8a
4.25-9
4.25-10
4.26-I
4.26-2
4.26-3
4.26-4
4.26-5
4.26-6
4.26-7
4.26-8
4.26-9
4.26-10
4.26-I1
4.26-12
4.26-13
4.26-14
*4.26-15
4.26-16
4.26-17
4.26-18
4.27-I
4.27-2
4.27-3
4.27-4
4.27-5
*4.27-6
4.27-7
*4.27-8
4.27-9
4.27-10
4.27-11
4.27-12
&amp;ldquo;4.27-13
4.27-14
4.27-15
4.27-16
4.27-17
4.27-18
4.27-19
4.27-20MostRecent
DateChanged
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
9/I/70
9/I/70
1111170
911170
1111170
1111170
811172
811172
311171
811172
811172PageNo.
&amp;ldquo;4.27-21
**4.27-21a
**4.27-21 b
*4.27-22
4.27-23
4.27-24
4.27-25
*4.27-26
*4.27-27
4.28-I
4.28-2
4.28-3
4.28-3a
4.28-4
4.28-5
4,28-6
4.28-7
4.28-8
&amp;ldquo;4.28-8a
&amp;ldquo;4.28-8b
4.28-9
&amp;ldquo;4.29-I
*4.29-2
*4.29-3
*4.29-4
*4.29-5
4.29-6
4.29-7
4.30-I
4.30-2
4.30-3
4.30-4
4.30-5
4.30-6
4.30-7
4.30-8
&amp;ldquo;4.31-I
*4.31-2
*4.31-3
&amp;ldquo;4.31-4
*4.31-5
**4.31-6
4.32-I
4.32-2
4.32-3
4.32-4
4.33-I
4.33-2
4.33-3
4.34-I
4.34-2
4.35-I
4,35-2
4.35-3
*4.36-I
*4.36-2
*4.36-3
4.37-I
4.37-2MostRecent
DateChanged
811172
811/72
8/I/72
811172
711170
811172
811/72
311171
311171
311171
311171
1211169
8/Ir72
8/I172
7/I170
8/Ir72
8/Ir72
8/I_72
8/I172
8/I172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/I/72
8/I/72
8/I/72
xxx(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo_.
4.38-I
4.38-2
&amp;ldquo;4.39-I
4.39-2
4.40-I
4.40-2
4.41-I
4.41-2
4.41-3
&amp;ldquo;4.41-4
4.41-5
4.41-6
&amp;ldquo;4.41-7
4.41-8
4.41-9
4.41-lO
4.41-ll
*4.41-12
&amp;ldquo;4.41-13
**4.41 -l3a
4.41-14
4.41-15
4.41-16
4,41-17
4.41-18
4.41-19
4.41-20
4.41-21
4.41-22
4.41-23
4.41-24
4.41-25
4.41-26
4.41-27
&amp;ldquo;4.41-28
*&amp;lsquo;4.41-28a
**4.41-28b
**4.41-28c
*4.41 -29
4.41-30
4.42-I
4.42-2
4.42-3
4.42-4
4.43-1
4.43-2
4.43-3
4.44-1
4.44-2
4.45-I
4.45-2
4.45-3
4.45-4
4.45-5
4.45-6
4.46-I
4.46-2
4.46-3
4.46-4
4.46-5MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
12/I/69
7/I/70
911/70
8/I/72
8/I/72
8/I/72
7/1/70
3/1/71
3/1/71
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
7/1/70
3/1/71Page No.
4.46-6
4.46-7
4.46-8
4.46-9
4.46-10
4.46-I 1
4.46-12
4.46-13
4.46-14
4.46-15
4.46-16
4.46-17
4.46-18
*4.46-19
*&amp;lsquo;4.46-19a
**4.46-I 9b
*4.46-20
4.47-I
4.47-2
4.47-3
4.47-4
4.47-5
4.47-6
4.47-7
4.47-8
*4.48-I
*4.48- 2
4.48-3
4.48-4
*4.48-5
4.48-6
4.48-7
4.48-8
4.48-9
4.48-I0
4.48-II
*4.48-12
4.48-13
4.48-14
4.48-15
4.48-16
4.48-17
4.48-18
4.48-19
4.48-19a
4.48-19b
4.48-19c
4.48-19d
4.48-19e
4.48-19f
4.48-19g
4.48-20
4.48-21
4.48-22
4.48-23
4.48-24
4.48-25
*4.48- 26
4.48-27Most Recent
DateChanged
811172
811172
8/I/72
811172
1211/69
811172
811/72
12/I/69
8/I/72
3/I/71
7/I/70
8/I/72
12/I/69
12/I/69
12/I/69
1211/69
12/I/69
1211169
12/I/69
3/I/71
12/I/69
8/I/72PBe_.
4.49-I
4.49-2
&amp;ldquo;4.49-3
4.49-4
4.49-5
*4.49-6
*4.49-7
**4.49- 7a
4.49-8
4.49-9
4.50-I
4.50-2
4.51-I
4.51-2
4.51-3
4.51-4
&amp;ldquo;4.52-I
*4.52-2
*4.52-3
*4.52-4
4.53-I
4.53-2
4.54-I
*4.54-2
4.54-3
4.54-4
4.54-5
4.54-6
4.54-7
4.54-8
4.55-I
4.55-2
4.55-3
4.55-4
4.55-5
4.55-6
4.55-7
4.55-8
4.55-9
4.56-I
4.56-2
4.56-3
4.57-I
4.57-2
4.57-3
4.57-4
4.58-I
4.58-2
4.58-3
4.58-4
4.58-5
4.58-6
4.58-7
4.59-I
*4.59-2
4.59-3
4.59-4
4.59-5
4.59-6MostRecent
DateChanged
12/I169
811172
1211169
811172
811172
811172
711170
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
3/I/71
8/I/72
xxxi(811172)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
Pa_ag_eNo.
4.59-7
4.59-8
4.59-9
4.59-10
*4.59-I 1
4.59-12
4.59-13
&amp;ldquo;4.59-14
*&amp;lsquo;4.59-15
4.60-I
4.60-2
4,60-3
4.60-4
4.60-5
4.60-6
4.60-7
*4.61-I
&amp;ldquo;4.61-2
*4.61-3
**4.61-3a
4.61-4
&amp;ldquo;4.61-5
4.61-6
4.61-7
4.61-8
4.62-I
4.62-2
4.62-3
4.62-4
4.62-5
4.62-6
4.62-7
4.62-8
*4.62-9
4.63-I
4.63-2
4.63-3
4.63-4
4.63-5
4.63-6
4.63-7
4.63-8
4,64-I
4.64-2
4.64-3
4.64-4
4.64-5
*4.64-6
*4.64-7
4.64-8
4.64-9
4.64-10
4.65-I
4.65-2
4.65-3
4.65-4
4.65-5
4.65-6
4,65-7
*4.65-8MostRecent
DateChanged
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72PageNo.
4.65-9
4.65-10
&amp;ldquo;4.65-11
4.65-12
4.65-13
4.65-14
4.65-15
4.65-16
4.65-17
&amp;ldquo;4.65-18
&amp;ldquo;4.65-19
4.65-20
4.65-21
4.65-22
4.66-I
4.66-2
4.66-3
4.66-4
4.66-5
4.67-I
4.68-I
4.68-2
4.68-3
4.68-4
4.68-5
4.69-I
4.69-2
4.69-3
4.69-4
4.70-I
4,70-2
4.70-3
4.70-4
4.70-5
4.70-6
4.70-7
4.71-I
4.72-I
4.72-2
4.72-3
4.73-I
4.73-2
4.73-3
4.73-4
4.74-I
4.74-2
474-3
*z.74-4
**z.74-4a
474-5
475-I
476-I
476-2
476-3
477-I
477-2
477-3
*z.78-I
*z.78-2
.79-IMostRecent
DateChanged
1211169
12/I/69
8/I172
711170
711170
7/I170
3/I171
8/I/72
8/I/72
7/I/70
7/I/70
7/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72PageNo.
4.79-2
4.79-3
4.80-I
4.80-2
4.81-I
4.81-2
4.82-I
4.82-2
&amp;ldquo;4.83-I
4.83-2
*4.83-3
**4.83-4
&amp;ldquo;4.84-I
*4.84-2
4,85-I
4.86-I
4.86-2
&amp;ldquo;4.87-I
*4.87-2
*4.87-3
*4.87-4
*4.87-5
*4.87-6
4.87-7
4.87-8
4.87-9
4.87-10
4.87-11
4.87-12
&amp;ldquo;4.87-13
4.87-14
4.87-15
4.87-16
4.87-16a
*&amp;lsquo;4.87-16b
4.87-17
4.87-18
4.87-19
4.87-20
4.87-21
4.87-22
4.87-23
4.87-24
4.87-25
4.87-25a
*4.87-26
4.87-27
4.87-28
4.87-28a
4.87-29
4.87-30
4.87-31
4.87-32
4.87-33
4.87-34
4.87-35
4.87-36
*4.87-37
3.87-38
4.87-39MostRecent
DateChanged
811/72
311/71
811172
811172
8/I172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
11/I/70
3/I/71
3/I/71
8/I/72
3/I/71
12/I/69
8/I/72
3/I/71
3/I/71
9/I/70
9/I/70
8/I/72
911170
11/1/70
9/I/70
3/I/71
3/I/71
8/I/72
xxxii (8/I/72)&lt;/p&gt;
&lt;p&gt;4.87-40
4.87-41
4.87-42
4.87-43
4.87-44
4.87-45
4.87-46
4.87-47
4.87-48
4.87-49
4.87-50
4.87-51
4.87-52
4.87-53
4.87-54
4.87- 55
4.87-56
4.87-57
4.87-58
4.87-59
4.87-60
4.87-61
4.87-6 2
*4.87-63
*4.87-64
4.87-65
*4.87-66
**4.87-66a
*4.87-67
4.87-68
4.87-69
4.87-70
4.87-71
4.87-72
4.87-73
4.87-74
4.87-75
4.87-76
4.87-76a
4.87-76b
4.87-76c
*4.87-76d
&lt;strong&gt;4.87-76e
4.87-77
4.87-78
4.87-79
4.87-80
4.87-81
4.87-82
*4.87 -83
4.87-84
4.87-85
4.87-86
4.87-86a
4.87- 87
4.87-88
4.87-89
4.87-90
4.87-91MostRecent
DateChanged
311171
3/1/71
3/1/71
811/72
8/I/72
II11170
811172
811172
811172
12/]/69
12/I/69
12/I/69
8/1/72
811/72
8/I/72
9/I/70
9/I/70
9/1/70PAGESTATUS LOG
MostRecent
Most Recent
4.87-119 12/I/69
*4.87-92 8/I/72 4.87-120
4.87-9 3 4.87-I 21
4.87-94 4.87-I 22
4.87-95 12/1/69
*4.87-96 8/I/72 4.87-123
4.87-97 9/I/70 -4.87-124 8/I/72
4.87-97a 9/I/70 ,4.87-125 8/1/72
*4.87-98 8/I/72 ,4.87-126 8/I/72&lt;/strong&gt;4.87-126a 8/I172
4.87-99 4.87-127
4.87-I00 4.87-127a 12/I/69
4.87-I01 4.87-127b 12/I/69
4.87-102 12/I/69
4.87-I03 ll/I/70 4.87-127c
4.87-I04 ll/I/70 4.87-127d 12/I/69
4.87-I04a 12/I169 4.87-127e 12/I/69
4.87-104b 12/I/69 4.87-127f 12/I/69
4.87-104c 12/I/69 4.87-128
4.87-104d 12/I/69 4.87-129
4.87-104e 12/I/69 4.87-130
4.87-104f 12/I/69 4.87-131
4.87-I04g 12/I/69 a.87-132
4.87-I04h 1211/69 4.87-133
4.87-I04i 12/I/69 4.87-134
4.87-I04j 12/I/69 4.87-135
4.87-I04k 12/I/69 -4.87-136 8/I/72
4.87-I04_ 12/I/69 4.87-137
4.87-I04m 12/I/69 4.87-138
4.87-I04n 11/I/70 *-4.87-138a 8/I/72
4.87-104o 1111/70 4.87-139
,4.87-105 8/I/72 4.87-140 3/I/714.87-141 3/I/71
4.87-106 4.87-142 3/I/71
4.87-107 3/I/71
4.87-108 9/I/70 4.87-143
,4.87-109 8/1172 4.87-144
,4.87-I09a 8/I/72 4.87-145
4.87-I09b 12/I/69 4.87-146
4.87-I09c 12/I/69 4.87-147
.4.87-I09d 8/I/72 4.87-148
*-4.87-I09e 8/I/72 4.87-149
*-4.87-I09f 8/I/72 4.87-150
*-4.87-I09g 8/I/72 -4.87-151 8/I/724.87-152
*,4.87-I09h 811/72 4.87-153
*&amp;lsquo;4.87-I09i 811/72
*&amp;lsquo;4.87-I09j 8/I/72 4.87-1544.87-155
*-4.87-I09k 8/I/72 4.87-156
*-4.87-I09_ 8/I/72
*-4.87-I09m 8/I/72 4.87-157
**4.87-I09n 8/I/72 4.87-1584.87-159
.-4.87-109o 8/I/72 4.87-160
.,4.87-I09p 8/I/72 4.87-161
4.87-110
-4.87-111 8/I/72 4.87-1624.87-163
4.87-112 4.87-164
4.87-11 3 4.87-165
4.87-114 4.87-166
4.87-115 4.87-167
4.87-116 4.87-168
4.87-117
,4.87-118 8/I/72 4.87-169
xxxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.87-170
4.87-171
4.87-172
4.87-173
4.87-174
4.87-175
4.87-176
4.87-177
4.87-178
4.87-I 79
4.87-180
4.87-181
4.87-182
&amp;ldquo;4.87-183
4.87-184
4.87-185
4.87-186
4.87-187
4,87-188
&amp;ldquo;4.87-189
*&amp;lsquo;4.87-190
*&amp;lsquo;4.87-191
*&amp;lsquo;4.87-192
*&amp;lsquo;4.87-193
*&amp;lsquo;4.87-194
*&amp;lsquo;4.87-195
*&amp;lsquo;4.87-196
*&amp;lsquo;4.87-197
*&amp;lsquo;4.87-198
*&amp;lsquo;4.87-199
**4.87-200
*&amp;lsquo;4.87-201
**4.87-202
**4.87-203
**4.87-204
**4.87-205
**4.87-206
**4.87-207
**4.87-208
**4,87-209
*&amp;lsquo;4.87-210
4.88-I
4.88-2
4.88-3
4.88-4
4.88-5
4.88-6
4.88-7
4.88-8
4.88-9
4.88-10
4.89-I
4.89-2
4.89-3
4.89-4
4.89-5
4.89-6
4.89-7
4.89-8
4.89-9MostRecent
DateChanged
811172
11/I170
11/I170
11/I/70
11/I/70
11/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
1111170
1111170
1111170
1111170
11/1170
1111170
11/I170
1111170
1I11170PageNo.
4.89-10
4.89-I1
4.89-12
4.89-13
4.89-14
4.89-15
4.89-16
4.89-17
&amp;ldquo;4.90-I
*4.90-2
*4.90-3
*4.90-4
*4.90-5
*4.90-6
*4.90-7
**4.90-8
&amp;ldquo;4.91-I
&amp;ldquo;4.91-2
*&amp;lsquo;4.91-3
*&amp;lsquo;4.91-4
*&amp;lsquo;4.91-5
*&amp;lsquo;4.91-6
*&amp;lsquo;4.91-7
&amp;ldquo;4.92-I
*4.92-2
*&amp;lsquo;4.93-I
**4.93-2
*&amp;lsquo;4.94-I
**4.94-2
*&amp;lsquo;4.95-I
**4.95-2
*&amp;lsquo;4.96-I
**4.96-2
*&amp;lsquo;4.97-I
**4.97-2
*&amp;lsquo;4.98-I
**4.98-2
**4.98-3
*&amp;lsquo;4.99-I
**4.99-2
**4.99-3
*&amp;lsquo;4.100-I
*&amp;lsquo;4.100-2
*&amp;lsquo;4.100-3
*&amp;lsquo;4.101-I
*&amp;lsquo;4.101-2
*&amp;lsquo;4.101-3
*&amp;lsquo;4.102-I
*&amp;lsquo;4.102-2
*&amp;lsquo;4.103-I
*&amp;lsquo;4.103-2
5.1-I
&amp;ldquo;5.2-I
&amp;ldquo;5.3-I
*5,3-2
*5.3-3
*5.3-4
*5.3-5
*5.3-6
&lt;em&gt;5.3-7MostRecent
DateChanged
1111170
1111170
1111170
1111170
1111170
11/I/70
1111170
1111170
811r72
8/Ir72
8/I172
811172
811172
811r72
811172
811172
811172
811172
811r72
811172
811t72
811172
8/1172
8/1172
8/I172
8/I172
8/I172
8/I172
8/IZ72
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
DELETED
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72&lt;/em&gt;5
*5
*5
*5
**5
**5
**5
*&amp;lsquo;5
**5PageNo.
*53-8
*53-9
3-10
3-11
3-12
3-13
3-14
3-15
3-16
3-17
3-18
**53-19
**53-20
*&amp;lsquo;5.3-21
**5.3-22
**5.3-23
**5.3-24
**5.3-25
**5.3-26
**5.3-27
**5.3-28
**5.3-29
**5.3-30
*&amp;lsquo;5.3-31
**5.3-32
**5.3-33
**5.3-34
**5.3-35
**5.3-36
**5.3-37
**5.3-38
**5.3-39
**5.3-40
*&amp;lsquo;5.3-41
**5.3-42
**5.3-43
**5.3-44
**5.3-45
**5.3-46
**5.3-47
**5.3-48
**5.3-49
**5,3-50
**53-51
**53-52
**53-53
**53-54
*54-I
*54-2
*54-3
*5.4-4
*5.4-5
*5,4-6
*5.4-7
*5.4-8
*5.4-9
&amp;ldquo;5,4-10
&amp;ldquo;5.4-11
&amp;ldquo;5.4-12
&amp;ldquo;5.4-13MostRecent
DateChan_ed
811172
811172
811172
8/1172
8/1172
8/1172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/It72
8/Ir72
8/I_72
8/1172
8/1172
8/I172
8/I172
8/1172
8/1172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxiv (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
&amp;ldquo;5.4-14
&amp;ldquo;5.4-15
&amp;ldquo;5.4-16
&amp;ldquo;5.4-17
&amp;ldquo;5.4-18
&amp;ldquo;5.4-19
*5.4-20
&amp;ldquo;5.4-21
*5.4-22
*5.4-23
*5.4-24
*5.4-25
*5.4-26
*5.4-27
*5.4-28
*5.4-29
*5.4-30
*5.4-31
*5.4-32
*5.4-33
*5.4-34
*5.4-35
*5.4-36
*5,4-37
*5.4-38
*5.4-39
**5.4-40
*&amp;lsquo;5.4-41
**5.4-42
**5&amp;rsquo;.4-43
*&amp;lsquo;5.4-44
**5.4-45
**5.4-46
**5.4-47
**5.4-48
**5.4-49
**5.4-50
*&amp;lsquo;5.4-51
**5.4-52
**5.4-53
**5.4-54
**5.4-55
**5.4-56
**5.4-57
**5.4-58
**5.4-59
**5.4-60
*&amp;lsquo;5.4-61
**5.4-62
**5.4-63
**5.4-64
**5.4-65
**5.4-66
**5.4-67
**5.4-68
**5.4-69
**5.4-70
*&amp;lsquo;5.4-71
**5.4-72
**5.4-73MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72PageNo.
**5.4-74
**5.4-75
**5.4-76
**5.4-77
&amp;ldquo;5.5-I
*5.5-2
*5.5-3
5.5-4
5.5-5
*5.5-6
*5.5-7
*5.5-8
*5.5-9
&amp;ldquo;5.5-10
&amp;ldquo;5.5-11
&amp;ldquo;5.5-12
&amp;ldquo;5.5-13
*&amp;lsquo;5.5-14
*&amp;lsquo;5.5-15
**5.5-16
*&amp;lsquo;5.5-17
*&amp;lsquo;5.5-18
*&amp;lsquo;5.5-19
**5.5-20
**5.5-21
_&amp;lsquo;5.5-22
**5.5-23
**5.5-24
**5.5-25
**5.5-26
**5.5-27
**5.5-28
**5.5-29
**5.5-30
*&amp;lsquo;5.5-31
**5.5-32
**5.5-33
**5.5-34
**5.5-35
**5.5-36
**5.5-37
**5.5-38
**5.5-39
**5.5-40
*.5.5-41
**5.5-42
**5.5-43
**5.5-44
**5.5-45
**5.5-46
**5.5-47
**5.5-48
5.6-I
5.6-2
5.6-3
5.6-4
5.6-5
5.6-6
5.6-7
5.6-8MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
8/I_72
8/Ir72
8/Iq2
8/1172
8/I172
8/I172
8/I172
8/1172
8/Ir72
8/Ir72
8/Ir72
8/1172
8/I/72
8/I172
8/1172
8/1172
8/Iq2
8/1172
8/Ir72
8/Ir72
8/1172
8/Ir72
8/Ir72
8/Ir72
8/I172
8/Ir72
8/I/72
8/1172
8/I&#39;72
8/I172
8/Ir72
8/Ir72
8/1172
8/I_72
8/1172
8/1172
8/1172
8/Ir72
8/Iq2
8/Ir72
8/Iq2
8/I_72
8/I172
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
5.6-9
5.6-10
5.6-11
5.6-12
5.6-13
5.6-14
&amp;ldquo;5.6-15
&amp;ldquo;5.6-16
5;6-17
5.6-18
5.6-19
5.6-20
5.6-21
5.6-22
*5.6-23
*5.6-24
*5.6-25
*5.6-26
*5.6-27
*&amp;lsquo;5.6-27a
*5.6-28
5.6-29
&amp;ldquo;5.6-30
*&amp;lsquo;5.6-30a
5.6-31
6I-I
*62-I
*62-2
*62-3
*63-I
*63-2
**63-3
64-I
6.5-1
6.5-2
*6.6-I
6.6-2
6.7-I
6.7-2
&amp;ldquo;6.8-I
*6.8-2
*6.8-3
*6.8-4
*68-5
*68-6
*68-7
*68-8
*68-9
*68-10
&amp;ldquo;6.8-11
*68-12
*68-13
*68-14
*68-15
*68-16
*68-17
*68-18
*68-19
*68-20
*68-21MostRecent
DateChanged
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
311171
311171
811172
811172
811172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/1/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxv(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
*6.8-22
*6.8-23
*6.8-24
*6.8-25
*6.8-26
*6.8-27
*6.8-28
*6.8-29
*6.8-30
&amp;ldquo;6.8-31
*6.8-32
*6.8-33
*6.8-34
*6.8-35
*6.8-36
*6.8-37
*6.8-38
*6.8-39
*6.8-40
&amp;ldquo;6.8-41
*6.8-42
*6.8-43
*6.8-44
*6.8-45
*6.8-46
*6.8-47
*6.8-48
*6.8-49
*6.8-50
*6.8-51
*6.8-52
*6.8-53
*6.8-54
*6.8-55
6.9-I
6.9-2
6I0-I
610-2
610-3
610-4
610-5
610-6
610-7
6.10-8
6.10-9
6.10-10
6.10-11
6.10-12
6.10-13
6.10-14
6.10-15
&amp;ldquo;6.10-16
6.10-17
6.10-18
6.11-I
6.11-2
6.11-3
6.11-4MostRecent
DateChanged
811172
811172
811172
811172
811172
811172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
3/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69PageNo.
*&amp;lsquo;6.12-I
**6.12-2
**6.12-3
**6.12-4
**6.12-5
**6.12-6
**6.12-7
**6.12- 8
**6.12-9
*&amp;lsquo;6.12-10
*&amp;lsquo;6.12-11
*&amp;lsquo;6.12-12
*&amp;lsquo;6.12-13
**6.12-14
**6.12-15
*&amp;lsquo;6.12-16
*&amp;lsquo;6.12-17
*&amp;lsquo;6.12-18
7.1-I
7.1-2
7.2-I
7.2-2
7.2-3
7.2-4
7.2-4a
7.2-5
7.2-6
7.2-7
7.2-8
72-9
72-9a
72-10
72-11
72-12
72-12a
72-I2b
72-13
7.2-14
7.2-14a
7.2-15
7.2-16
7.2-17
7.2-18
7.2-19
7.2-20
7.2-21
7.2-22
7.2-23
7.2-24
7.2-25
7.2-26
7.2-27
7.2-28
7.2-28a
7.2-29
7.2-30
7.2-31
7.2-32MostRecent
DateChanged
811172
811172
811172
8/I172
8/It72
8/Ir72
8/Ir72
8/I172
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
3/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71No.
7.2-33
7.2-34
7.2-35
7.2-36
7.2-37
7.2-38
7,2-39
7.2-40
7.2-41
7.2-42
7.2-43
7.2-44
7.2-45
7.2-46
7.2-47
7.2-48
7.2-49
7.2-50
7.2-51
7.2-52
7.2-53
7.2-54
7.2-55
7.2-56
7.2-57
7.2-58
7.2-59
7.2-60
7.2-61
7.2-62
7.2-63
7.2-64
7.2-65
7.2-66
7.2-67
7.2-68
7.2-69
7.2-70
7.2-71
7.2-72
7.2-73
7.2-74
7.2-75
7.2-76
7.2-77
7.2-78
7.2-79
7.2-80
72-81
72-82
72-83
72-84
72-85
72-86
72-87
7.2-88
7.2-89
7.2-90MostRecent
DateChanged
6/I/71
6/1171
611/71
611171
611/71
6/I/71
611171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
xxxvi (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
7.2-91
7.2-92
7.2-93
7.2-94
7.2-95
7.2-96
7.2-97
7.2-98
7.2-99
7.2-I00
7.2-I01
7.2-102
7.2-I03
7.2-I04
7.2-I05
7.2-I06
7.2-I07
7.2-I08
7.2-109
7.2-II0
7.2-III
7.2-I12
7.2-I13
7.2-I14
7.2-I15
7.2-I16
7.2-I17
7.2-I18
7.2-I19
7.2-120
7.2-121
7.2-122
7.2-123
7.2-124
7.2-125
7.2-126
7.2-127
7.2-128
7.2-129
7.2-I30
7.2-131
7.2-132
7.2-133
7.2-134
7.2-135
7.2-136
7.2-137
7.2-138
7.2-139
7.2-140
7.2-141
7.2-142
7.2-143
7.2-144
7.2-145
7.2-146
7.2-147
7.2-148
7.2-149Most Recent
DateChanged
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
6/1171
611171
611171
6/I171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71PageNo.
7.2-150
7.2-151
7.2-152
7.2-153
7.2-154
7.2-155
7.2-156
7.2-157
7.2-158
7.2-159
7.2-160
7.2-161
7.2-162
7.2-163
7.2-164
7.2-165
7.2-166
7.2-167
7.2-168
7.2-169
7.2-170
7.2-171
7.2-172
7.2-173
7.2-174
7.2-175
7.2-176
7.2-177
7.2-178
7.2-179
7.2-180
7.2-181
7.2-182
7.2-183
7.2-184
7.2-185
7.2-186
7.2-187
7.2-188
7.2-189
7.2-190
7.2-191
7.2-192
7.2-193
7.2-194
7.2-195
7.2-196
7.2-197
7.2-198
7.2-199
7.2-200
7.2-201
72-202
72-203
72-204
72-205
72-206
73-I
73-2Most Recent
Date Changed
611171
611171
611171
6/I171
6/I171
611/71
611/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/I171
6/I171
6/I_71
3/I/71
3/I/71PageNo.
7.3-3
73-4
73-5
73-6
73-7
73-8
73-9
73-10
73-11
73-12
73-13
73-14
73-15
73-16
73-17
73-18
73-19
73-20
73-21
73-22
73-23
73-24
73-25
73-26
73-27
73-28
73-29
73-30
73-31
73-32
73-33
73-34Most Recent
DateChanged
311171
311171
311171
3/I171
3/I171
3/I/71
3/I/71
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
xxxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PROGRAMOVERVIEW
I.IPROGRAM OVERVIEW
l.l.l Objectives
TheNASTRAN program hasbeendesigned according totwoclasses ofcriteria. Thefirst class
relates tofunctional requirements forthesolution ofanextremely widerange oflarge andcom-
plexproblems instructural analysis with highaccuracy andcomputational efficiency. These cri-
teria areachieved bydeveloping andincorporating themost advanced mathematical models andcom-
putational algorithms thathavebeenproven inpractice. Inparticular, theyareachieved by
providing suchfeatures asthebandwidth-with-active-column technique inmatrix decomposition;
packing routines totakemaximum advantage ofmatrix sparsity soastoconserve input/output time;
highly stable andefficient algorithms forthesolution ofproblems ineigenvalue analysis and
transient response; andanelegant approach tomodeling theeffects ofcontrol systems andother
nonstructural components.
Thesecond class ofcriteria relates totheoperational andorganizational aspects ofthe
program. These aspects aresomewhat divorced fromstructural analysis itself; yettheyareof
equal importance indetermining theusefulness andquality oftheprogram. Chief among these
criteria are:
I.Simplicity ofproblem input deckpreparation.
2.Minimization ofchances forhuman error inproblem preparation.
3.Minimization ofneedformanual intervention during program execution.
4.Ease ofprogram modification andextension tonewfunctional capability.
5.Ease ofprogram extension tonewcomputer configurations andoperating systems, and
generality inability tooperate efficiently under awidesetofconfiguration capabilities.
6.Capability forstepbystep problem solution, without penalty ofrepeated problem setup.
7.Capability forproblem restart following unplanned interruptions orproblem preparation
error.
8.Minimization ofsystem overhead, inthethree vital areas:
a.Diversion ofcorestorage fromfunctional useinproblem solution.
l.l-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P20</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_020/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3.8 XSEIIXX (Sequence Monitor -Deck Generator).
3.3.8.1 Entry Point: XSEMXX.
3.3.8.2 Purpose
Toprovide amodel from which allother XSEMi (i=link number) subroutines except XSEMI
canbemade.
Seesection 6.11, which discusses howtogenerate alink driver subroutine.
3.3-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.9 GNFIST (Generate FIST)
3.3.9.1 EntryPoint: GNFIST.
3.3.9.2 Purpose
Tosetuptheproper linkage between datablocks andthefilestheyreside oninpreparation
forexecuting thefunctional module requiring thedatablocks.
3.3.9.3 Calling Sequence
CALLGNFIST(DDN,FISTNM,M_DN_)
DBN -Datablock name(TwowordBCDarray-8characters total)
FISTNM -Datablock identification (GIN_filenumber) usedbyfunctional module
(integer).
M_DN_ &lt;em&gt;SCARrecord number offunctional module tobeexecuted (integer). M_DN&lt;/em&gt;
indicates tothecalling routine whataction wastakenbyGNFIST.
M_DNO&amp;gt;O,datablockassigned afileoritwaspurged.
M_DN_=O,fatalerrordetected.
M_DN_-O,datablocknotassigned afile,GNFIST called Executive Segment
FileAllocator (XSFA)
3.3.9.4 Method
Ifthedatablockispurged, GNFIST returns tothecalling routine withMODNO&amp;gt;O.A
datablockispurged ifitisaninputwhich hasnotbeengenerated oritsstatus ispurged or
DBN=O.
Ifaninputdatablockresides ontheDataPoolFileandneedstobeunpooled, GNFIST calls
thefileallocator (XSFA) tounpoGl allinputs tothemodule which reside ontheDataPoolFile
thatneedtobeunpooled. GI_FIST thenreturns tothecalling routine withM_DN_&amp;lt;O.Theother
condition underwhichXSFAiscalled isifafilehasnotbeenallocated toanon-purged output
datablockorscratch datablockneeded bythemodule.
Afileisallocated toadatablockwhenthedatablock nameappears intheFIATtable,
located innamedcommon block/XFIAT/, asunpurged. Input, output andscratch datablocks which
havebeenassigned toafileandarerequired bythefunctional module, havetheirFISTNM&amp;rsquo;s entered
3.3-12&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
intheFISTtable which islocated innamed common block /XFIST/.FISTentries arelinked to
theDBN&amp;rsquo;s intheFIATtable which inturn links thedatablock toafile. Thiscompletes the
linking offunctional module datablocks totheir files.
Output datablocks cannot reside ontheDataPoolFile, soGNFIST checks forthisandif
found, theDBNandallDBN&amp;rsquo;s equivalenced toitaredeleted fromtheDPLtable located innamed
common /XDPL/.
3.3.9.5 Design Requirements
GNFIST resides inthecore resident portion ofalink. Itdoesnotuseonencoreandthe
onlyrestriction isthattheFISTtable belarge enough toholdallFISTNM&amp;rsquo;s foramodule.
Thenamed common blocks needed byGNFIST arelisted below, along with typeofaccess
required (i.e. fetch and/or store data) andreasons foruse.
I.C_MM_N/XFIST/ -Store.
Usedtostore FISTNM&amp;rsquo;s andlinkFISTNM&amp;rsquo;s with their corresponding DBN&amp;rsquo;s inFIAT.
2.C_MM_N/XFIAT/ -Fetch andstore.
Usedtodetermine status ofDBN&amp;rsquo;s. TheFIATtable isaltered ifunpooling ofinput
datablocks isnecessary.
3.C_MM_N/XDPL/ -Fetch andstore.
Used todetermine status ofinput DBN&amp;rsquo;s andisaltered ifoutnut DBN&amp;rsquo;s appear init.
4.C_MM_N/_SCENT/ -Fetch.
Contains BSCAR entry forfunctional module tobeexecuted. Usedtoalter FIATwhen
input DBN&amp;rsquo;s needtobeunpooled.
3.3.9.6 Diagnostic Messages
GNFIST detects overflow inFISTtable andsends message toterminate job.
3.3-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.10 XEOT (End-of-Tape).
3.3.10.1 Entry Point: XE_T.
3.3.10.2 Purpose
Toprepare andsend tothecomputer operator, messages instructing himwhat todowhen
end-of-tape hasbeen encountered ontheOldProblem Tape (_PTP) ortheNewProblem Tape (NPTP).
3.3.10.3 Calling Sequence
CALL XE_T(ID,_REEL,NREEL,BUF)
ID-BCDnameNPTPor_PTP
_REEL-Number ofreeltobedismounted -integer.
NREEL-Number ofnewreeltobemounted -integer.
BUF-GIN_buffer usedbyNPTPorOPTP.
3.3.10.4 Method
Acheck ismadetoseeiftapehasmulti-reel capability. Ifnot,afatalmessage isissued
andjobisterminated. Theoperator messages aregenerated andissued andtheoldreelisre-
woundandunloaded. Acheck ismadetoseeifcorrect newreelhasbeenmounted andthena
return ismadetocallinp program.
3.3.10.5 Design Requirements
XE_Tmustbeaccessible toroutines XGPIandXCHK.
3.3.10.6 Diagnostic Messages
Amessage isissued iftapedoesnothavemulti-reel capability.
3.3-14&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.11 SSWTCH (Sense Switches)
3.3.11.I Entry Point: SSWTCH.
3.3.11.2 Purpose
Toindicate tothecalling routine whether ornotaspecified sense switch isset.
3.3.11.3 Calling Sequence
CALL SSWTCH(SS,F)
SS-Sense switch number -integer, l&amp;lt;SS&amp;lt;31.
F-Flag indicating status ofSS
F=0ifSSnoton
F=lifSSison
3.3.11.4 Method
Named common block /SYSTEM/contains theword which contains thesense switch settings.
Bitloftheword corresponds tosense switch l,bit2corresponds tosense switch 2,etc. If
thebitcorresponding toSSisonthen F=l,ifnotthen F=O.
Note that sense switches aresetbytheuser viatheDIAG card intheExecutive Control Deck
andnotthrough physical sense switches setbythecomputer operator.
Thefollowing sense switches arecurrently inuse:
Switch
l Dump core when subroutine DUMP orPDUIIP iscalled. This
will cause acore dump onanynonpreface fatal error.
2 Print theFIAT after each call toXSFA.
3 Print theData Pool Dictionary after each call toXSFA.
4 Print the_SCAR attheendofXGPI.
5 Type amessaQe tosignify thebeginning ofeach module
ontheoperator&amp;rsquo;s console.
Type amessage tosignify theending ofeach r_odule on
theoperator&amp;rsquo;s console.
Print eigenvalue extraction diagnostics forreal inverse
power andreal andcomplex determinant methods.
3.3-15 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
Switch
8
9
I0
II
12
13
14
15
16
17
i8
19
20
21
22
23-26
27
28
29
30
31Printmatrix trailers asthematrices aregenerated.
Notused.
Usealternate nonlinear loading inTRD.(Replace
{Nn+I}by_{Nn+1+Nn+Nn_l})
Printallactive rowandcolumn possibilities forthe
decomposition algorithm.
Printeigenvalue extraction diagnostics forcomplex
inverse power.
Printopencorelength.
PrinttheRigidFormat (!_ASTRAN SOURCE PROGRAM COHPILATION)
forallnon-Restart runs.
TraceGIN99PEN/CL9SE operations onCDC6000series.
Tracerealinverse powereigenvalue extraction operations.
PunchtheDMAPsequence thatiscompiled.
NoLused.
PrintdataforMPYADmethod selection.
Generate de-bug printout (ForNASTRAN programmers who
include CALLBUGintheirsubroutines).
PrintGP4setdefinition.
PrintGP4degree offreedom definition.
Notused.
InputFileProcessor (IFP)tabledump.
Punchoutthelinkspecification table-deckXBSBD.
Process linkspecification tableupdate deck.
Punchoutalters toXSEMidecks.
Printlinkspecification table.
Forafurther explanation ofswitches 28-31seeSection 6.11intheProgran_er&amp;rsquo;s Manual.
3.3.11.5 Design Requirements
SSWTQI resides inthecoreresident portion ofalink.
3.3-15a (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.12 C_NMSG (Console Message Writer).
3.3.12.1 EntryPoint: C_NMSG
3.3.12.2 Purpose
Writes thecurrent timeandaNASTRAN system message ontothesystem output device and
(ifthecomputer configuration permits) ontotheon-line operator&amp;rsquo;s console device.
3.3.12.3 Calling Sequence
CALLC_NMSG(MSG,CNT,YN)
MSG-Array namecontaining message.
CNT-Number of4-character words inmessage (integer).
YN-1=yes,0=no.Printon-line device ifyesandavailable.
3.3.12.4 Method
Acomputer real-time and/or jobclock isinterrogated. Thenumber ofmessage words
indicated issenttothesystem output device (usually printer) alongwiththeclockreading(s).
Ifthecomputer configuration permits andtheyes/no switch issetyes,thesameclock reading(s)
andmessage issenttotheoperator&amp;rsquo;s console device (usually typewriter).
3.3.12.5 Design Requirements
Onlytheleft-most fourcharacters fromeachcomputer wordareextracted andsenttothe
output device(s).
3.3-16&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.13 TTLPGE (Title PageWriter).
3.3.13.l Entry Point: TTLPGE
3.3.13.2 Purpose
Toprint onthesystem output filetitle pageinformation asfollows:
•theNASTRAN symbol
•themachine typeandmodel
•thesystem generation date
•thelevel identification
•major level nun_er (corresponds tothebasic archive Source Library)
•minor level nunl)er (corresponds totheobject library foramachine type)
•local level nunV_er
•variations ofalocal level
•theRigid Format series identification, including modifications, ifany
3.3.13.3 Calling Sequence
CALLTTLPGE (K)
3.3.13.4 Method
TTLPGE iscalled asthefirst executable statement inthePreface driver SEMINT following
transliteration (IBM360,370only) andreading oftheNASTRAN card(ifany).
Thevariable Kisstored asalocal variable insubroutine SEMINT andmaybesetatexecution
timebytheuserontheNASTRAN datacardby
NASTRAN TITLE_PT =k
where thedefault value forkis1asdefined byaDATAstatement insubroutine SEMINT. The
action taken byTTLPGE depends ontheinteger option parameter K(whose value isk)asshown
below.
k TTLPGE action
&amp;lt;0
=0
l
2
3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3Print one(I)copyofanabbreviated title page
Supress anytitle pageprintout
Print one(1)copy ofthefulltitle page
Print two(2)copies ofthefulltitle page
Print asingle copyofalocally annotated title page
Supress anytitle pageprintout
3.3-17(8/1/72)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Whenever changes areincorporated intoNASTRAN, theTTLPGE routine should beupdated to
reflect thesechanges. Thisisparticularly important whenofficial updates aremadesinceruns
mayonlybeidentifiable bytheinformation contained inthisprintout. Thebasic identification
ofagivenversion ofNASTRAN iscalled theLevelnumber, acodeoftheform
i.j.k
where iisthecurrent major levelnumber, jistheminorlevelnumber andkislocallevel
number.
Themajor levelcorresponds toacomplete recompilation oftheentire system oneachmachine
fromasingle archive source library maintained forallmachines. Itisthrough thismechanism
thatthemachine-independent nature oftheNASTRAN codeisguaranteed. Majorlevels ofNASTRAN
willprobably onlybeissued atintervals ofonceayearorlonger duetotheexpense involved.
Minorlevels correspond tochanges thataremadeononegiventypeofmachine, saythe
CDC6000machines. These changes arereflected intheobject library forthegivenmachine
class, andmaybereflected inthesource byeither alters tothebasicsource library orbyan
updated source library. Minorlevels willprobably beissued every fewmonths foreachmachine
classasalters tothebasicorprevious source library.
Locallevels arereserved forlocally madechanges andprovides amechanism forthelocal
NASTRAN system programmer tokeeptrackofseveral versions ofNASTRAN thatmayexistathis
installation. Thiswouldprobably consist ofadigitoradigit andatypedletter (e.g., Level
15.I.2A).
TheRigid Format series isdesignated byaletter. Minormodifications willbeidentified
byadigit (e.g., RigidFormat Series M.2). Itisanticipated thatnewseries ofRigidFormats
willonlybeavailable concurrently withmajor levels oftheprogram.
3.3-18 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTIrIE DESCRIPTIONS
3.3.14SEr_TR_I (Transliterator) (IBM36_-370 only)
3.3.14.1 EntryPoint: SE_TRN
3.3.14.2 Purpose
Toreadthesystem inputstream andconvert EBCDIC characters toBCD.
3.3.14.3 Calling Sequence
CALLSEr._RN (KIN,K_UT)
3.3.14.4 Method
AnI/_activity isdoneusingF_RTRAN. Oneeighty (80)column cardimageatatimeisread
fromF_RTRAN unitKIN,transliterated, andwritten outonF_RTRAN unitK_UT. F_RTRAN unitK_UT
isrewound before writing andbefore returning. F_RTRAN unitKINisnotrewound before reading and
isnotmanipulated further onceanend-of-file condition isdetected. AnyEBCDIC characters other
thanthestandard NASTRAN setdefined onpage2.1-2 (6/I/72) oftheUser&amp;rsquo;s Manual aretransliterated
totheblankcharacter. BCDpunched characters aretransliterated intothemselves. Thus,forthe
standard character set,either BCD,EBCDIC ormixedBCDandEBCDIC maybeusedontheIBM360-370
computer systems. Itshould beemphasized thatdeckscontaining EBCDIC characters willnotrunon
theother NASTRAN computers.
3.3.14.5 Design Requirements
TheF_RTRAN unit KBUT must bedefined intheJCLandsufficient space must beallocated tohold
thetransliterated input stream. Theactual unit numbers used aredefined bythecalling program
(SEMINT) andarecurrently settoKIN=5andK_UT =I.Ifthe2314 disk facility isused forKBUT,
thespace canbeestimated by
No.CardsNo.Tracks =91
iffull track blocking isused. This isaccomplished byspecifying theDCBas
DCB =(RECFM=FB, LRECL=80, BLKSIZE=7280)
Thetransliteration iseffected byusing thecharacter read inasanindex into a256byte
table containing thedesired BCDrepresentations. Inthis way, nolook-up expense isinvolved.
3.3-1g (8/I/72)&lt;/p&gt;
&lt;p&gt;3.3.15 RETURN (Return)
3.3.15.1 EntryPoint: RETURN
3.3.15.2 Purpose:SUBROUTINE DESCRIPTIONS
Toallowinclusion ofcallstonon-existing decks.
required tousethiscapability.
3.3.15.3 Calling Sequence
CALLRETURN
3.3.15.4 Method
Theonlyexecutable statement isaRETURN tothecalling program.
3.3.15.5 Design Requirements
RETURN should belocated inLINK0orintherootsegment.
3.3.15.6 Diagnostic Messages
None.Linkage Editor datachanges are
3.3-20 (8/I172)&lt;/p&gt;
&lt;p&gt;3.4
3.4.I
3.4.1.I
3.4.1.2UTILITY SUBROUTINE DESCRIPTIONS
UTILITY SUBROUTINE DESCRIPTIONS.
MAPFNS (Machine Word Functlons).
Entry Points: LSHIFT, RSHIFT, ANDF, _RF, X_RF, C_MPLF, C_RSZ, C_RWDS.
Purpose
Toperform basic computer wordmanipulations bystandard binary digit (bit) operations.
Themanipulations areperformed over thecomplete memory wordlength fortheparticular hardware.
Also, todetermine thesizeofopencore (C_RSZ) andtheabsolute difference between locations in
core (C_R_DS).
3.4.1.3 Calling Sequence
Allmachine word functions areexecuted asF_RTRAN integer function subroutines with
integer arguments.
3.4.1.4 Method
Themethod employed within eachfunction wiiibedescribed following theseparate _unction
examples.
3.4.1.5 Entries
K:LSHIFT (I,N)
Theentire bitstructure ofwordIisshifted leftNplacesandtheresulting wordreplaces
wordK.WordIisunchanged. High-order bitsshifted outarelost.Zerosaresupplied to
vacated low-order positions. Theshiftislogical; nospecial provision ismadeforthesign
position.
K=RSNIFT (I,N)
Theentire bitstructure ofword Iisshifted right Nplaces andtheresulting word reolaces
word K.Word Iisunchanged. Low-order bitsshifted outarelost. Zeros aresupplied to
vacated high-order positions. Theshift islogical; nosnecial orovisionismade forthesign
position.
K=ANDF (I,J)
Alogical product ofthebitswithin wordIandwordJisformed andstored intoword K.
Words IandJareunchanged.
3.4-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
K=_RF(I,J)
Alogical sumofthebits within word Iandword Jisformed andstored into word K.
Words IandJareunchanged.
K=X_RF (I,J)
Themodulo-two sum(exclusive or)ofthebits within word Iandword Jisformed and
stored into word K.Words IandJareunchanged.
K=COMPLF (1)
Theones complement ofthebits within word Iisformed andstored into word K.Word I
isunchanged.
K:C_RSZ (l,J)
Thesizeofopencoreiscomputed andstored inlocation Kthrough thisfunction. Location
Iisnormally theaddress ofalabeled common celldefining thebeginning ofaparticular open
corearea. Location Jisnormally theaddress ofblankcommon (usually thought tobetheendof
aparticular opencorearea). Oncomputer memory configurations whereblankcommon doesnot
define theendofopencore, C_RSZignores location Jandsubstitutes acorrect endvalue. The
arguments IandJmaybeinterchanged without affecting results.
K=C_RWDS (l,J)
Theabsolute difference plus1between theaddresses oflocations IandJiscomnuted and
stored intowordK.Words IandJareunchanged.
3.4.1.6 Design Requirements
I_APFNS iswritten inassembly language.
3.4-2&lt;/p&gt;
&lt;p&gt;3.4.2
3.4.2.1
3.4.2.2UTILITY SUBROUTINE DESCRIPTIONS
_PEN (Initiate Activit XonaFile).
Entry Point: BPEN.
Purpose
Toinitiate activity ontherequested file.
3.4.2.3 Calling Sequence
CALL_PEN($n,NAME,BUFF,&lt;em&gt;P)
n-F_RTRAN statement
intheFIST(i.e.thedata
NAME-GIN_filename
BUFF-Anarraywhose
will beused byGIN&lt;/em&gt; while
D,open file toI.open file to
_P=_i_open file to
t3•open file to
3.4.2.4 Methodnumber defining thereturn tobetaken intheevent NAME isnot
block ispurged).
ofthedata block which istoberead orwritten(see section 1.6.4.1).
dimension equals thecontents ofthefirst word of/SYSTFM/which
thefile isoben.
read with rewind
write with rewind
read without rewind
write without rewind
_PENstores parameters in/GIN_X/ andthencallsXGINBwhichsearches theFISTforaname
matchandpicksupfromtheFIATtheunittowhichthedatablockisassigned. Theposition of
thebuffer isdetermined relative to/XNSTRN/.
ThisindexissavedintheBUFADD arrayin/GIN_X/. BUFADD issearched todetermine ifany
other buffer overlaps thebuffer currently assigned. GINOiscalled toinitiate activity forthe
file.
3.4.2.5 Design Requirements
Theaddress ofthebuffer assigned mustbegreater thantheaddress of/XNSTRN/.
3.4.2.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued by_PEN:
3006
3012
3O4O
3.4-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.3 WRITE (Write DatainaLogical Record).
3.4.3.1 EntryPoint: WRITE.
3.4.3.2 Purpose
Towrite alogical record, orportion ofalogical record, ontherequested file.
3.4.3.3 Calling Sequence
CALLWRITE(NAME,BL_CK,N,E_R)
NAME-GINBfilenameofthedatablockwhich istobewritten (seesection 1.6.4.1).
BL_CK- Anarrayofdimension _Ncontaining thedatawords tobewritten.
N-Thenumber ofwordstobewritten -integer -input.
O,theNwordstobewritten bythiscalldonotendthelogical record, i.e.
_subsequent WRITEcallswillprovide additional datatobewritten inthe
E_R=_Icurrent logical record.
\I,theNwordstobewritten bythiscallendthelogical record.
3.4.3.4 Method
_JRITE stores parameters in/GIN_X/ andthencalls XGIN_which inturncalls GINOtonerform
theactual processina ofthecall.
3.4-4&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.4 CLOSE (Terminate Activity onaFile).
3.4.4.1 Entry Point: CLOSE.
3.4.4.2 Purpose
Toterminate activity ontherequested file.
3.4.4.3 Calling Sequence
CALLCL_SE(NAME,&lt;em&gt;P)
NAME-GIN_filenameofthedatablock tobeclosed (seesection 1.6.4.1).
l,iffilewasopened towrite, write end-of-file andrewind.
Iffilewasopened toread, rewind only.
2,close fileatcurrent file position (noend-of-file, norewind).
&lt;em&gt;P
3,iffilewasopened towrite, write end-of-file andposition fileinfront of
end-of-file mark.
\ Iffilewasopened toread, sameas_P=2.
Iftherequested fileisnotintheFISTorisnotcurrently open, anormal return isgiven
andnooperation takes place.
Ifthefilewasopened foroutput andthelastlogical record hasnotbeenwritten, itis
written prior tohonoring the_Prequest.
Thebuffer assigned when thefilewasopened isreleased andisavailable totheuseron
return.
3.4.4.4 Method
CLOSE stores parameters in/GIN_X/andthencalls XGIN&lt;/em&gt;. IfXGIN&lt;/em&gt; returns indicating the
file isnotintheFISTornotopen, animmediate return isgiven totheuser. Otherwise XGIN_
calls GIN_ toprocess thecall.
3.4-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.5 READ (Read Data From aLogical Record).
3.4.5.1 Entry Point: READ.
3.4.5.2 Purpose
Toread thecontents ofalogical record, orportion ofalooical record, from therequested
file.
3.4.5.3 Calling
CALLREAD($n_
n_Sequence
,$n2,NAME,BLBCK,N,EBR,M)
F_RTRAN statement number defining thereturn tobetaken intheevent anend-of-
file isencountered bythis READ operation.
n2 F_RTRAN statement number defining thereturn tobetaken attheendoftheREAD
operation whenever theend-of-logical-record isencountered prior totransmittinq
therequested number ofdata words.
NAME -GIN_ file name ofthedata block which istoberead (see section 1.6.4.1).
BL_CK-Anarrayofdimension _N,wherethewordsreadwillbestored.
N&amp;gt;O:Thenumber ofwords tobereadandstored atBL@CK -integer -input.
N-_N(O:Thenumber ofwords tobeskipped, i.e.,readbutnotstored at_L_CK.
!
_Integer -inout.
O,subsequent callstoREADforthecurrent logical record areexDected.
EOR _I,thecurrent callisthelastcallforthecurrent logical record. Thefile
l
_willbepositioned tothebeginning ofthenextloqical record before returning.
M -Ifreturn ton2isgiven, thenumber ofwords actually readisstored inM.
Innoothercasearethecontents ofMchanged.
_Jhenever return ton2isgiven, thefileispositioned tothebeginning ofthenextlogical
record regardless ofthesetting ofE_R.
Areturn ton_ispossible onlywhenacalltoREADisgivenwhenthefileispositioned at
thebeginning ofalogical record.
3.4-6&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.5.4 Method
READstores parameters in/GIN@X/andthencalls XGIN_ which inturncalls GIN@ toperform
theactual processing ofthecall.
3.4-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.6 F_JDREC IForward SpaceOneLogical Record).
3.4.6.1 EntryPoint: FWDREC.
3.4.6.2 Purpose
Toposition therequested fileforward onelogical record.
3.4.6.3 Calling Sequence
CALLFWDREC($n,NAME)
n-F_RTRAN statement number defining thereturn tobetakenintheeventanend-of-file
isencountered.
NAME-GIN_filenameofdatablocktobepositioned forward (seesection 1.6.4.1).
Thiscallwillalways position thefiletothebeginning ofthenextlogical record unless
anend-of-file isencountered.
3.4.6.4 Method
FWDREC stores parameters in/GINBX/ andthencalls XGIN_which inturncallsGIN_toprocess
thecall.
3.4-8&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.7 BCKREC (Backspace OneLogical Record).
3.4.7.1 Entry Point: BCKREC.
3.4.7.2 Purpose
Toposition therequested file backward onelogical record.
3.4.7.3 Calling Sequence
CALLBCKREC (NAME)
NAME-GIN_filenameofdatablock tobepositioned backward (seesection 1.6.4.1).
Ifthefileispositioned inthemiddle ofalogical record, thefileisrepositioned to
thebeginning ofthatrecord. Otherwise, thefileispositioned tothebeginning oftheprevious
logical record.
Ifthefileispositioned atthebeginning offile, nooperation occurs andanormal return
isgiven.
3.4.7.4 Method
BCKREC stores parameters in/GIN_X/andthencalls XGINB which inturncalls _I_to
process thecall.
3.4-9&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P21</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_021/</guid>
      <description>
        
        
        &lt;p&gt;3.4.8SUBROUTINE DESCRIPTIONS
REWIND (Position File totheLoadPoint).
3.4.8.1 Entry Point: REWIND
3.4.8.2 Purpose
Torewind therequested file.
3.4.8.3 Calling Sequence
CALL REWIND(NAME)
NAME-GIN_ filenameofthedatablock toberewound (seesection 1.6.4.1).
Rewind given foranoutput filehastheeffect oferasing anydatawhich hasbeenwritten
onthefile.
3.4.8.4 Method
REWIND stores parameters in/GIN_X/andthencalls XGIN_ which inturncalls GIN_ to
process thecall.
3.4-I0&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.9E_F(Write anEnd-of-File).
3.4.9.1 Entry Point: E_F.
3.4.9.2 Purpose
Towrite anend-of-file ontherequested file.
3.4.9.3 Calling Sequence
CALLE_F(NAME)
NAME-GIN_file nameofdatablock onwhich end-of-file istobewritten(see section 1.6.4.1.)
Thefilemustbeopentowrite atthetimeofthiscal&amp;rsquo;l.
3.4.9.4 Method
E_Fstores parameters in/GINBX/andthencalls XGIN_ which inturncalls GIN_toprocess
thecall.
3.4-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.10 SKPFIL (SkipFilesForward orBackward).
3.4.10.1 EntryPoint: SKPFIL.
3.4.10.2 Purpose
Toposition therequested fileforward orbackward astated number offiles.
3.4.13.3 Calling Sequence
CALLSKPFIL(NAME,N)
NAME-GINOfilenameofthedatablocktoberepositioned (seesection 1.6.4.1).
N-Thenumber offilestobeskipped. N&amp;gt;0meansforward skiD, N_0means
backward skip, N=0meansnooperation -inteaer -innut.
Notes:
I.Following aforward skip,thefileispositioned atthebeqinning ofthefirst
logical record (i.e.immediately aftertheend-of-file mark).
2.Following abackward skip,thefileispositioned immediately infrontofthe
end-of-file mark(oratthebeginning-of-unit).
3.Request toskipbackward fromthebeginning-of-unit isignored andthefile
remains positioned atthebeginning-of-unit.
4.SKPFIL backward onafileopened towrite hastheeffect of&amp;quot;erasing&amp;quot; file(s)
written.
3.4.13.4 Method
SKPFIL stores parameters in/GIN_X/ andcallsXGINOwhich inturncallsGIN_tonrocess the
call.
3.4-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.11 XGINIB (GIN_ Utility Routine).
3.4.11.1 Entry Point: XGIN(B.
3.4.11.2 Purpose
Toconvert theGINBfilenametoaunitnumber, retrieve thebuffer assigned tothefile
andcallGIN_.
3.4.11.3 Calling Sequence
CALLXGIN_($nI,$n2,A,M)
C_MM_N/GIN_X/LGIN0X,FILEX,E_R,&lt;em&gt;P,ENTRY,LSTNAM,N,NAME,NTAPE,XYZ(2),UNITAB(75),BUFADD(75)
l,callfromsubroutine &lt;em&gt;PEN
E&lt;/em&gt;;TRY =
NAME -
FILEX -
LSTI_M -
NTAPE =
nl2,callfromsubroutine WRITE
3,callfromsubroutine READ
4,callfromsubroutine CLOSE
S,callfromsubroutine BCKREC
6,callfromsubroutine FWDREC
7,callfromsubroutine SKPFIL
8,callfromsubroutine E_F
n2integer -inout
9,callfromsubroutine REWIND
GIN_file nameofdatablock forwhich activity isrequested -integer -input.
Unit number towhich NAMEisassigned -integer -output.
Onentry toXGIN&lt;/em&gt;, GIN_namefromprevious call. OnexitfromXGINB,
LSTNAM =NAME-integer -input andoutput.
O,filedoes notreside ontapeinteger outDut.
l,fileresides ontape
ifENTRY =lor4,F_RTRAN statement number defining return intheeventN_MEisnotinFIST.
ifENTRY =3or6,F_RTRAN statement number defining return intheevent anend-of-file isencountered.
IfENTRY =3,F_RTRAN statement number defining end-of-logical-record prior to
completion ofrequested read.
3.4-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
A IfENTRY =2or3,Aistheuser block (from/to) which data words arewritten/read.
M IfENTRY =3andreturn ton2isgiven, M=number ofwords read -integer -output.
3.4.11.4 Method
TheFIST issearched foraname match. Iffound, thepointer toFIAT isused tonickunthe
unit number andtape flag. Ifnotfound, anon-standard return isgiven (ENTRY =lor4)ora
fatal message isgenerated. Theaddress ofthebuffer assigned tothefile isnicked uDandGINB
iscalled toexecute therequested operation.
3.4.11.5 Design Requirements
XGINO isdesigned asanintegral part oftheGIN_ collection ofroutines foruseonly by
_PEN, READ,WRITE, etc.
TheBUFADD tablemustbeinitialized tozeropriortothefirstcallinaNASTRAN execution.
3.4.11.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued byXGINO:
3010
3021
3.4-14&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12 GIN_ (General Input/Output Routine).
3.4.12.1 Entry Point: GIN_.
3.4.12.2 Purpose
Toprovide general purpose Input/Output services tohigher level routines (READ, WRITE, etc.)
inthet_STRANprogram.
3.4.12.3 Calling Sequence
CALLGIN_($nI,$n2,BUFF,A,M)
c_MM_N/GIN_/LGIN_x,FILEx,E_R,_P,ENTRY,LSTNAM,N,NAME,NTAPE,xYZ(2),UNITAB(75),BUFADD(75)
I,
2,
3,
4,
ENTRY =5,
6,
7,
8,
9,
FILEX -Unit
EOR
BP
BUFF
nl
n2
A
M_PENOperation
WRITE Operation
READOperation
CLBSE Operation
BCKREC Operation
FWNRFC _nprm_inn&amp;hellip;&amp;hellip;&amp;hellip; r&amp;hellip;&amp;hellip;..
SKPFIL Operation
E_FOperation
REWIND OperationInput, integer
nu_er offile-integer- input.
-End-of-record flag (seeREAD, WRITE) -integer -input.
-Operation code (see_PEN, CLOSE) -integer -input.
-Number ofwords towrite/read ornumber offiles toskip (seeWRITE, READ,
SKPFIL) -integer -input.
-Address ofbuffer assigned toFILEX.
-F@RTRAN statement number defining return intheevent anend-of-file isencoun-
tered (READ and_DREC operations only).
-F_RTRAN statement number defining return intheevent anend-of-record isencoun-
tered prior totransmitting therequested number ofwords (READ operations only).
-Userblock (seeWRITE, READ).
-Number ofwords actually readifend-of-record encountered andreturn ton2is
given (seeREAD) -integer -outDut.
3.4-15&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.12.4 Method
GIN_blocks alllogical records intofixedlength physical records (blocks) forwriting
andreading. Adescription oftheGIN_buffer follows:
.=j _-
4-
q-Buffer Control Word(BCW)=&amp;lsquo;READ&amp;rsquo; or&amp;rsquo;WRIT&amp;rsquo;
Current Buffer Pointer (CBP)
Current Logical Record Pointer (CLR)
Current BlockNumber (NBL@CK)
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
u
0
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
Pointer tolastlogical record (LLR)Loaical
recordLogical record
and
control words
Control word=4&lt;em&gt;K+2&amp;quot;F2+F1where
F1=1indicates continued record
F2=0indicates lastsegment ofcontinued record
ifF1=O,K=number of_1ords inlogical record
ifF2=I,K=65536&lt;/em&gt;(Block No.)+CLRofIstsegment oflogical record
Processing ofeachoperation takesplaceasfollows:
I._PEN. Ifarewind isrequested, thefileisrewound andthefirstthreewords ofthe
buffer areinitialized followed byareturn. Otherwise, thecurrent fileposition isretrieved
fromUNITAB. Ifthefileislogically between blocks, action occurs asabove. Otherwise, the
nextblockisreadandthepointer tothecurrent logical record isrestored. Iftheblockread
isnottheexpected block, arecovery attempt ismade.
3.4-16&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
2.WRITE. Forthefirst call towrite inalogical record, NBL_CK andCLRaresaved in
UNITAB. Userdataistransferred tothebuffer. Ifthebuffer isfilled, acontrol word indicat-
ingcontinuation isplaced, theblock iswritten andthelogical record iscontinued inthenext
block. After datatransfer tothebuffer, E_Ristested. Ifon,acontrol word isnlaced in
thebuffer andpointers aremoved tothebeginning ofanewlogical record.
3.READ. Ifthebuffer isempty, thenextblock onthefile isread. Ifpositioned atthe
beginning ofalogical record, atestforlogical end-of-file ismade. Ifon,return tonlis
given. Otherwise data istransferred fromthebuffer totheuserarea. Ifthelogical end-of-
record isencountered before therequested number ofwords havebeentransmitted, Missetwith
thenumber ofwords read, andreturn ton2isgiven. Ifthelogical record iscontinued tothe
nextblock, thenextblock isread. After thetransfer ofdata iscomplete, E_Ristested. If
on,pointers aremoved tothebeginning ofthenextlogical record.
4.CLOSE. Ifthefilewasopened toread, &lt;em&gt;Pistested. If_P=l,thefileisrewound.
IfOP#l,thefileisbackspaced oneblock unless thefile islogically between blocks. In
either case, thelogical position ofthefile (NBL_CK andCLR)issaved inUNITAB, BCWissetto
zeroand return ismade. Ifthefilewasopened towrite andCBP#CLR,control words forthe
last logical record arestored inthebuffer. If_P=lor3,alogical end-of-file isplaced.
Thecurrent block iswritten onthefile. If_P=I,thefileisrewound, otherwise thefile is
backspaced oneblock. Thelogical position ofthefile issaved inUNITAB, BCWissettozero
andreturn ismade.
5.BCKREC. Ifthebuffer incoreisempty, thefileisbackspaced oneblock, theblock is
readandLLRisusedtosetthepointers tothelastlogical record intheblock. Ifthefile is
logically positioned inthemiddle ofalogical record, pointers arereset tothebeginning ofa
logical record. Ifthefileispositioned atthebeginning ofalogical record, pointers are
reset tothebeginning oftheprevious logical record.
6.FWDREC. NissettozeroandE_Rtolandthecode intheREAD portion ofGIN&lt;/em&gt; isused
toposition thefileatthebeginning ofthenextlogical record.
3.4-17&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
7.SKPFIL. Ifaforward skipisrequested, logical records areskipped untilaloaical
end-of-file isencountered. Thisisrepeated untilthenumber ofrequested fileshasbeen
skipped.
Ifabackward skipisrequested, thecodeintheBCKREC portion ofGIN_isusedtoposition
backwards onelogical record. Atestforloadpointismade. Ifyes,return ismade. Otherwise,
alogical end-of-file testismade. Ifno,theBCKREC isrepeated. Ifyes,atestfornumber
ofrequested filesismade. Ifyes,return isgiven. Otherwise, theprocess isrepeated.
8.E_F.Ifthefilewasnotopened towrite, anerrormessage isgenerated. IfCBP_CLR,
control wordsareplaced to&amp;quot;close&amp;quot; thelastlogical record. Alogical end-of-file isplaced in
thebuffer. Return ismade.
9.REWIND. Thefileisrewound, pointers areresetandreturn isgiven.
3.4.i2.5 Design Requirements
I.GIN_isdesigned asanintegral partoftheGINOcollection ofroutines andistobe
called onlybyXGIN@.
2.SinceGIN@&amp;ldquo;remembers&amp;rdquo; theposition offileswhentheyareclosed, anyactivity ona
fileoutside ofGINOwilllikely befatal.
3.Because ofthepacking usedinthecontrol word, thefollowing maximums apply:
Max.number ofblocks written ononefile=2k-1where k=number ofbitsin
thecomputer word-18.
Max.buffer size=65535words.
4.Theactual contents oftheGINObuffer aremachine dependent. SeeSection 5fordetails.
3.4.12.6 Diagnostic Messages
Thefollowing system fatalmessages maybeissued byGINB:
3009
3029
3048
3049
3.4-18 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12.7 Information Message
GIN_RECOVERY ATTEMPT _NDATABL_CK EXPECTED BL_CKNB.=
N_o=
Thismessage isissuedpriortoMessage 3049.GIN_attempts toreposition thefile.
Iftheattempt fails,Message 3049isissued, otherwise theproblem proceeds.ACTUAL BL_CK
3.4-19&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.13
3.4.13.1
3.4.13.2OPNCOR(Transmit Logical Records To/From Core Storage).
Entry Points: OPNCOR,WRTCOR, RDCOR.
Purpose
Tosimulate theGINO WRITE andREAD calls providing thecapabilit_ towrite logical records
ofdata incore storage andread logical records from core storage.
3.4.13.3 Calling Sequence
CALLOPNC_R(BLOCK)
BLOCK-Anarraywhose dimension issufficient toholdalogical record tobewritten
orread.
CALLHRTCOR(BLOCK,A,N,EOR)
BLOCK- Thearraywhere thelogical record istobewritten.
A-Anarraycontaining thedatawords tobewritten.
N-Thenumber ofdatawords tobewritten fromA.
IiO,additional datawillbewritten inthelogical record viasubsequentEOR-callstoWRTCOR.
O,thecurrent callisthatlastcallforthecurrent logical record.
CALLRDCOR($n_,$n2,BLOCK,A,N,EOR,M)
n_-FORTRAN statement number defining thereturn takenintheeventanend-of-file
isencountered. Thisreturn isno__.t_tpossible fromRDCORbutisprovided inthe
calling sequence forcompatibility withREAD.
n2 FORTP_AN statement number defining thereturn taken intheeventthatthe
number ofwords requested tobereadisnotavailable intherecord. Inthis
case,Mwordsarereadandtransmitted andthevalueMisreturned totheuser.
BLOCK- Thearraywherethelogical record isstored.
A-Anarraywhere therequested datawords fromtherecord willbestored.
N-Thenumber ofdatawordstoberead.
3.4-20&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
__=O,moredataistobereadfromtherecord viasubsequent calls toRDC_R.E{_R
O,thecurrent call isthelastcall forthecurrent logical record. Any
remaining words inthelogical record aretobeskipped.
M -Thenumber ofwords actually readintheevent return ton2istaken.
Thenun_er ofwords available atBL_CK mustbeequal to(orgreater than) thenumber of
words inthelogical record ]_lustwo.
_PNC_R initializes awordpointer stored atBL_CK(1) tolandhasnoother function. The
usermaydesire toperform thisfunction himself with thestatement BL_CK(1) =I.Thisfunction
mustbeaccomplished prior tothefirst call toWRTC[_R orRDC_R foreach logical record.
3.4.13.4 Method
_PNC_R. BL_CK(1) issettooneandreturn ismade.
WRTC{&lt;em&gt;R. Thecurrent pointer stored atBL_CK(1) ispicked up. Nwords aretransmitted from
AtoBLOCK beginning atthecurrent pointer plusone. IfE_R=O,thenewpointer isstored and
return made. Otherwise, anend-of-record flagisstored &lt;em&gt;f_BL_CK following the&lt;/em&gt;&amp;rsquo;&lt;/em&gt;*,__ord
written. Thepointer (pointing totheflag) isstored andreturn made.
RDC{_R. Thecurrent pointer ispicked upfromBL_CK(1). Words aretransmitted fromBLiBCK
beginning atthecurrent pointer plusonetoAuntil (1)theend-of-record flagisencountered
inwhich case theactual nund_er ofwords transmitted isstored inMandRETURN 2isgiven, or(2)
Nwords havebeentransmitted. IfE_R=O,thenewpointer isstored andreturn ismade. If
E_R#O,BL_CK issearched until theflagisfound, thepointer (pointing immediately prior
totheflag) issaved andreturn ismade.
3.4.13.5 Design Requirements
Theflag value mustbeunique. Itsvalue =(-16777215) must notbeoneofthedatawords
written.
3.4-21&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.14
3.4.14.1 EntryPoint: G_PEN.
3.4.14.2 PurposeG_PEN (Short Form forSubroutine &lt;em&gt;PEN With Header Record Processing&lt;/em&gt;.
Toprovide ashort form (without thenon-standard return ofsubroutine _PEN)for opening a
GINO file, andtowrite atwo-word header record ifthedata block isopened asoutput with
rewind ortoskip theheader record ifthedata block isopened asinput with rewind.
3.4.14.3 Calling Sequence
CALLG_PEN(FILE,BUFFER,_PT)
where:
FILE =GINOfilename(seesection 1.6.4.1).
BUFFER =GINBbuffer location.
_PT =anyoftheopenoptions permitted bysubroutine _PEN(seesection 3.4.2).
3.4.14.4 Method
Openthefile(subroutine @PEN). If@PT=inputwithrewind (0),skipthefirstrecord of
thedatablock. If@PT=output withrewind (I),writethetwowordBCDnameofthedatablock
asreturned bysubroutine FNAME.
3.4.14.5 Design Requirements
Thedatablockmustexist(mustnotbepurged). If_PT=innutwithrewind (0),thefirst
record ofthedatablockmustbeatleasttwowordslong. Subroutines used: _PEN,READ,WRITE,
FNAME, MESAGE.
3.4.14.6 Diagnostic Messages
Ifthedatablockispurged orifanend-of-file orend-of-record condition isencountered
whenreading thedatablock, subroutine MESAGE willbecalled withinternal messaae numbers I,2,
or3,respectively (external message numbers are3001,3002and3003).
3.4-22&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.15
3.4.15.1 EntryPoint: FREAD.
3.4.15.2 PurposeFREAD (Short FormforSubroutine READ).
Toprovide ashort form (without thenon-standard returns ofsubroutine READ) ofreading a
GIN_file.
3.4.15.3 Calling Sequence
CALLFREAD(FILE,BL_CK,N,EBR)
where:
FILE=GINBfilename (seesection 1.6.4.1).
BL_CK= array intowhich Nitems aretoberead.
N=number ofitems toberead.
EOR=anyendofrecord option permittedbysubroutine READ(seesection 3.4.5).
3.4.15.4 Method
Read theNitems from FILEintoBL_CK. Ifsubroutine READreturns anend-of-file or
end-of-record condition, subroutine MESAGE iscalled with afatal error condition.
3.4.15.5 Design Requirements
Inaddition tothose imposed byREAD, there mustbeNitems remaining intherecord tobe
read. Subroutines used: READ, MESAGE.
3.4.15.6 Diagnostic Messages
Subroutine MESAGE maybecalled with internal message number 2or3(external message
numbers 3002,3003).
3.4-23&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.16 WRTTRL IWrite Trailer).
3.4.16.1 Entry Points: WRTTRL, RDTRL.
3.4.16.2 Purpose
WRTTRL will pack sixwords oftrailer information into three words andstore them intheFIAT.
RDTRL will retrieve andunpack thetrailer information.
3.4.1G.3 Calling Sequence
CALL WRTTRL(FILBLK)
FILBLK(1) -GINO file name (see section 1.6.4.1).
FILBLK(2-7) -Trailer information tobestored.
CALL RDTRL(FILBLK)
FILBLK(1) -GINO file name.
FILBLK(2-7) -Storage space fortrailer information.
3.4.16.4 Method
Theindex into theFIAT forthespecified file islocated intheFIST. Thethree packed
words arestored inorretrieved from theFIAT. Theinformation isalso stored forallfiles
equivalenced totheGIN_ file name. ForRDTRL, ifthefile ispurged, FILBLK(1) isset
negative. Ifthefile isamatrix, word 7isconverted toadensity (lO000 =I00% dense).
Matrix trailers canbedisplayed asthey arewritten byactivating DIAG 8.
3.4.16.5 Design Requirements
Each word oftrailer information isassumed tobeapositive integer less than 216-I.
Trailers maynotbewritten onGINO files I01-199.
3.4.16.6 Diagnostic Messages
Ifthefile didnotexist intheFIST when WRTTRL wascalled, fatal error 3011 occurs.
3.4-24 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTII_E DESCRIPTIONS
3.4.17 FI&amp;amp;&lt;em&gt;J_E (File Name).
3.4.17.1 Entry Point: FNAME.
3.4.17.2 Purpose
Given aGINBfilename, FNAME returns thetwoBCDwords which describe thedatablock.
3.4.17.3 Calling Sequence
CALLFNAME(FILE,NAME)
FILE-GINBfilename (seesecticn 1.6.4.1).
NAME(2) -Storage forthetwoBCDwords.
3.4.17.4 Method
TheGINBfile nameisfirst located intheFIST. Theindex intheFISTisusedtofind
theBCDdescriptors intheFIAT. Ifthefiledoesnotexist intheFIST, &amp;lsquo;&lt;/em&gt;(I_NE)_&amp;rsquo; isreturned
asthetwowords, ^indicating aBCDblank.
3.4-25&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.18
3.4.18.1 EntryPoint:CLSTAB.
3.4.18.2 PurposeCLSTAB (Close aGIN_FileandWrite aNon-zero Trailer).
Toclose aGINBfileandgenerate atable trailer bycallinn WRTTRL.
3.4.18.3 Calling Sequence
CALLCLSTAB(FILE,_PT)
where:
3.4.18.4
CALLCL_SE(FILE,OPT)
Generate thetablecontrol block, ITABCB:
ITABCB(1) =FILE
ITABCB(7) =1
D_I01=2,6
I0ITABCB(1) :0
CALL_4RTTRL (ITABC3).
3.4.18.5 Design Requirements
Sameasthoseforsubroutines CLOSEandWRTTRL.FILE=GIN_filenumber -integer -input.
OPT=anyclose option permitted bysubroutineCL_SE (seesection 3.4.4) -integer -input.
Method
Subroutines used: CLOSE, WRTTRL.
3.4-26&lt;/p&gt;
&lt;p&gt;3.4.19UTILITY SUBROUTINE DESCRIPTIONS
XRCARD(Executive Free-FieldCardData ConversionRoutine)
3.4.19.1Entry Point: XRCARD.
3.4.19.2Purpose
Tointerpret NASTRAN free-field cardinput dataasfollows:
I.Identify BCDalpha andnumeric datafields astheyareconverted andplaced in
theuser&amp;rsquo;s buffer;
2.Flagandoutput special datafield delimiters;
3.Convert BCDnumeric fields tobinary integer orbinary floating point;
4.Indicate when thedataextends beyond one72column card.
3.4.19.3Calling Sequence
&amp;ldquo;&amp;ldquo;&amp;ldquo;XRCARD_U,BU,,L,IN ) &lt;em&gt;L&lt;/em&gt; rl_T=BUF
Where:
@UTBUF
L
INBUF=Thebufferwhich istocontain theconverted cardimage.
=Thelength of_UTBUF available toXRCARD.
=Thebuffer containing thecardimage tobeconverted.
3.4.19.4Method
XRCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer wordstructures, andavariety ofdifferences inhollerith
handling imposed bydifferingFgRTRAN compilers.
XRCARD analyzes thetwenty hollerith words input through INBUF asfollows:
Data Field Delimiters
TypeA:
Thefollowing syn_ois signify theendofanalpha field ornumeric field onthecard. As
these syni_ols areencountered, theywillbeflagged andplaced intheoutputbuffer toaidthe
user inidentifying thedata.
(LEFTPAREN
/SLASH
=EQUAL
3.4-27&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
TypeB:
Thefollowing symbols areidentical tothoselisted aboveexcept thatthesymbol isnot
flagged orplaced intheoutput buffer:
,COMHA
)RIGHTPAREN
Whensuccessive typeAortyneBdelimiters areencountered, anullfieldindication (twoBCD
blankwords) isoutput. Anullfieldisgenerated foreachsuccessive delimiter. Anullfield
isalsogenerated whenatypeAortypeBdelimiter isfollowed bya$indicating theendofdata
condition.
TypeC:
Thefollowing symbol isidentical toU1eCOMrIAexcept thatnonullfieldindication isoutput
whentheyareencountered insuccession.
ABLAIIK
EndofDataIndication
Therearethreemeansbywhich end-of-data maybespecified onthecard:
-Thelastdatafieldendsincolumn 72,orisfollowed byblanks outthrough
column 72;
-$isencountered, afterwhichconments maybeincluded outtocolumn 80;or
-Continuation cardsending in(,/,=or,willresult inacontinuation flag
(0modeword).
Format ofOutput Data
Amodeword,N,isplaced intheoutput buffer todistinguish between BCDdataand
numeric data.
Numeric ModeWord: Anewmodewordisoutput eachtimeanumeric fieldisconverted
andoutput. (Allnumeric modewordsarenegative).
I/=-Iinteger data(Idataword)
=-2floating pointsinnle precision (Idataword)
=-4floating pointdouble precision (2datawords)
Nindicates thetypeofnumeric dataandwhere tolookforthenextmodeword.
3.4-28 (8/1/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
Aloha Mode Word: When processing alpha data, only onemode word isoutput forsuccessive
alpha fields, i.e., analpha mode word will never follow another aloha mode word.
N=Thenumber ofsuccessive alpha fields encountered onthecard. Each alnha #ield
consists oftwo4-character computer words (left adiusted). Thus Ncanbeused
tocompute thelocation ofthenext mode word.
Thetype Adelimiters areoutput asalpha data andare&amp;rsquo;covered&amp;rsquo; bythealoha mode &lt;em&gt;ord.
Since data output inthealpha mode must consists oftwowords atype Adelimiter will appear as:
Word l=Delimiter flag, allbits oftheword areon.
Word 2=BCDdelimiter, left adjusted, followed byBCDblanks.
End-of-Data: Theend-of-data flag isplaced last intheoutput buffer andappears inplace
ofanexpected mode word. There aretwoend-of-data flags:
-Aword with allbits off, indicating that more data istofollow onacontinuation card.
-Aword with allbits onexcept forthesign, indicating that nomore data isto_ollow
forthis card type.
Sample Input Card
CARDAA=I,B=I.O,ABC/CDEFGH GOOD DATA
OOOO0000
IZ34S57L
111111
22222222
3333333
4444444
55555555
6_665G_6
77777777
)&lt;em&gt;S;888
&lt;em&gt;99;9_S
tZ_a:j_OOg0000 OOC000;;;00000000 O00000DOOOC_OOOOOCOOO_OG
9lg_ii_13141Slii/I@&lt;em&gt;5_2!;Z23_425___Z__31_33__33S373&lt;/em&gt;&lt;/em&gt;;J_142434445_4?+&lt;/em&gt;&amp;rsquo;&lt;em&gt;&lt;em&gt;&lt;em&gt;152_3____l&lt;/em&gt;:&lt;/em&gt;?£3&lt;/em&gt;
111111111111111111111i 111111111111111111111111
2222222222 222222222
333&amp;quot;33333333333
444444444444444 44444
5555555555555555 55_5
666B_666B668BBBGS &lt;em&gt;6
777777777777777771 77
B8888BBBBBB8882222222222222222
3333333 33333333
44444444444444
5555553555555555
B6_BB666_BB666
777177777771777
&lt;em&gt;888888888BBBBB82222222222222222
3333333333323133
4444444444444444
5555555555555_55
6B6GBBB6GBBBB_8
7777777777777777
BBBB889888B88888
£,999S99999.m99999_3&lt;/em&gt;$9999999999999S99,&lt;em&gt;3999993999993998
3)&lt;em&gt;11121314151_I)1[,1@,)&lt;/em&gt;,Z]2223_4_526Y.7Z5.+3CJl&lt;/em&gt;.23)34J5&lt;/em&gt;&lt;/em&gt;:+Z]3540414)i}14(,:464l4B4D5_S&amp;rsquo;&lt;em&gt;.&lt;/em&gt;%54-&amp;ldquo;5_&amp;rsquo;&lt;em&gt;57&lt;/em&gt;-JF,&lt;em&gt;6_O00D;D;O_ODO0000000
1111111111i111i1111
2222222222222222222
3333333333333333333
4444444444444_44444
55555555S5555555555
86_6666666BB6B_6G&lt;/em&gt;
1771711111177711771
8888888888BB_B_B_
9999999999_9_S?_9
3.4-29&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P22</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_022/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
Resulting OutputBuffer forIBM7094orUnivac 1108
BCDFieldI
BCDFieldI
Output Delimiter I
Output Delimiter I
NOTE: FortheIBMS/360 the
output buffer shownherelooks
thesameexcept thattheright
twoblanks shownintheBCD
fields heredonotexist. For
theCDC6600therearean
additional fourtrailing blanks
ineachwordofaBCDfieldthan
shownhere.+(alpha mode word) 3
CARD_A
a_AAAA
AAAAAA
A A A AA A
alIbitson
=AAAAA
-(numeric modeword) 1
integer 1
+(alpha modeword) 2
BAAAAA
AAAA_
allbitson
=AA AAA
-(&lt;em&gt;umeric modeword)2
single-precision 1.0
+(alpha modeword) 5
ABCAA
A A A AA A
allbits on
/A A A A /&lt;/em&gt;,
CDEFAA
GHAAA
G__DAA
A A A A A A
DATA/_A
A AA A A A
allbits onsign bitoff
AIndicates blank.Number ofsuccessive alphafields
(including TypeAdelimiters)
Endofdataforthiscard
3.4-30&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.19.5 Design Requirements
Analpha field must beeight characters orless. Longalpha fields willbetruncated to
eight characters.
Alldatamustbeplaced incardcolumns 1-72.
Adatafield maynotbesplit between twocards.
Thespecification ofallnumeric datafields must conform toF_RTRAN IVstandards.
Ifanerror condition isencountered, e.g., databad,XRCARD willwrite amessage, turnon
theN_G_flag in/SYSTEM/,setthefirst wordof@UTBUF =O,andmake anormal return tothe
calling program.
3.4-31&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2_
3.4.20.1 Entry Point: RCARD.
3.4.20.2 PurposeRCARD(Fixed FieldCardDataConversion Routine).
Tointerpret NASTRAN fixed-field (bulkdata)cardinputasfollows:
-Identify BCDalphaandnumeric datafields astheyareconverted andplaced
intheusersbuffer; and
-Convert BCDnumeric fields tobinary integer orbinary floating point.
3.4.2g.3 Calling Sequence
CALLRCARD(_UTBUF,FR_BF,NFLAG,INBUF)
Where:
_UTBUF
FRMTBF
NFLAG
INBUF=Thebuffer which istocontain theconverted card image.
=Abuffer which contains identification flags fortheconverted data in_UTBUF.
=Contains number ofwords returned in_UTBUF.
=Thebuffer containing thecard image tobeconverted.
Definition ofData Identification Flaas Placed inFRMTBF
0=output forablank data field.
l=output foraninteger field.
2=output forafloating ooint field.
3=output foraBCDfield.
4=output foradouble precision floating point field.
-l=error.
3.4.20.4 Method
RCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer word structures, andavariety ofdifferences inHollerith
handling imposed bydiffering F_RTRAN compilers.
Twenty 4-Hollerith wordsarereceived byRCARDonanyparticular calltoRCARD. RCARDfirst
determines fromfield1(words 1and2)ifthedatacardisacontinuation card,andwhether the
3.4-32&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
fields aresingle (2words each)ordouble (4wordseach)inlength. Fields 2through 9(for
single fieldcards) or2through 5(fordouble fieldcards) arethenconsidered oneatatime.
Noconsideration ismadeforthelastfieldofanycard(words 19and20).
3.4.20.5 Design Requirements
I.AllBCDfields mustbeginwithanalphabetic character.
2.AllBCDfields aredefined tobeeightcharacters inlength. Nameswithlessthaneinht
characters willbefilled withBCDblanks.
3.Whenplaced intheuseroutput buffer, eachBCDfieldwillbedivided intotwofour-
character words (leftadjusted) andstored intwosuccessive locations oftheoutput bu#fer.
Theremainder ofthewordsisfilled withBCDblanks.
4.Special characters arenottobeusedaspartofaBCDfieldexcept for*and+infield
1(column I)whichindicate adouble fieldorsingle field (respectively) continuation card.
5.Thedatafields willbestored successively intheusersoutput buffer astheyare
encountered inscanning thecardimagefromlefttoright. Thenumber ofoutput coreloca-
tionsrequired perfield typevaries:
a.Integer field=1coreword(right adjusted).
b.BCDfield=2corewords.
c.Realsingle precision =1coreword,
d.Realdouble precision =2corewords.
e.Blankfield=1coreword(integer 0).
6.Thecardtypefield (field I)ofacontinuation cardwillnotbepassed alonntotheuser.
Twozerowordswillreplace theIDfieldintheoutput buffer. Thustheusercaneasily dis-
tinguish thedifference between acontinuation cardandanewcardtype.
7.Acheck forbulk data card types SEQGP andSEQEP ismade byRCARD. Fields 3,5,7,and9oi
these card types areprocessed byaspecial conversion.
Theinput within these special fields will besimilar totheDewey decimal notation and
consists ofamultiple digit integer anduptothree single digit sub-integers; e.g., (354.1.2)
and(267.5). Thespecial fields will beconverted toasingle integer bydropping anydecimal
points andappending anumber ofzeros equal tothree minus thenumber ofdecimal points in
theoriginal number; e.g., (354120) and(267500).
3.4-33 (311171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
8.RCARDdoesnotknowthelength oftheusersoutput buffer, therefore, nocheck ismade
forexceeding thelength ofthebuffer. However, thenumber ofdatawords placed inthe
output buffer willbespecified inNFLAG.
9.Field I0willnotbepassed alongtotheuser.
3.4.20.6 Diagnostic Messages
Fields appearing tobeincorrect toRCARDwillcauseadiagnostic tobewritten onthe
system output filefollowed byacardformat heading, acardimageecho,andanunderlining of
thefieldinquestion. Also,the/SYSTEM/ N_G_flagisset.TRUE., azeroisplaced intheoutput
buffer forthefield, anda-Iisplaced intheformat buffer forthefield. RCARDwil3print
diagnostics forallfields appearing incorrect andmakeanormal return.
3.4-34&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.21 TAPBIT (Tape BitTest).
3.4.21.I Entry Point: TAPBIT.
3.4.21.2 Purpose
Toexamine thetapebitforapermanent GIN_filetodetermine theexistence ofaphysical
tapeforthatfile.
3.4.21.3 Calling Sequence
IF(TAPBIT(FILE)) GOT_&amp;hellip;
FILE istheGIN@filename (oneof&amp;rsquo;P_L&amp;rsquo;, &amp;lsquo;BPTP, &amp;lsquo;NPTP&amp;rsquo;, &amp;lsquo;UMF&amp;rsquo;,&amp;lsquo;NUMF&amp;rsquo;, &amp;lsquo;PLTI&amp;rsquo;,
&amp;lsquo;PLT2&amp;rsquo;, &amp;lsquo;INPT&amp;rsquo;).
3.4.21.4 Method
Thepermanent FISTissearched andthetapebitinthecorresponding FIATentry is
examined. Ifthebitison(indicating thepresence ofaphysical tape), TAPBIT will beset
.TRUE.. Otherwise itwillbeset.FALSE..
3.4.21.5 Design Requirements
ThetypeofTAPBIT must bedeclared L_GICAL.
3.4.21.6 Diagnostic Messages
Afatal calltoMESAGE occurs ifaGIN@filenameotherthanthose listed isused.
3.4-35&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.22 PEXIT (Problem Exit).
3.4.22.1 EntryPoint: PEXIT.
3,4.22.2 Purpose
Toterminate theprogram.
3.4.22.3 Calling Sequence
CALLPEXIT.
3.4.22.4 Method
Thediagnostic message queue ischecked andifnotemptythemessage writer MSGWRT is
called. Ifthecheckpoint flagissetacardispunched indicating theendoftherestart
checkpoint dictionary. Thesystem output buffers areflushed andthentheiobisterminated.
3.4.22.5 Design Requirements
PEXITmusthaveaccess totheF_RTRAN 1/9routines.
PEXITshould notbecalled bymodule writers. Termination should beviaacallto
MESAGE (i.e., CALLMESAGE(-61,O, NAME)).
3.4-36 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.23 TMT_G_ (Time-To-Go).
3.4.23.1 EntryPoint: TMT_G_.
3.4.23.2 Purpose
Computes therunning timeremaining forthisNASTRAN problem.
3.4.23.3 Calling Sequence
CALLTMT_G_ (TIME)
TIME=Remaining timeininteger seconds.
3.4.23.4 Method
During NASTRAN problem initialization, onesystem cell issettotheproblem starting time
(PSTART) while another issettothemaximum running time (I_TIME) contained ontheExecutive
Control DeckTIMEcard. TIME-T_-G_ isthenfound byreading theclock (N_W) andsolving the
following:
TIME-T_-G_ =MXTIME -(N@W-PSTART).
TheCPUclock isutilized onallmachines except theiBM7094where noneisavailable.
3.4-37&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.24PAGE (Page Headinq).
3.4.24.1 Entry Points: PAGE, PAGEI, PAGE2
3.4.24.2 Purpose
Toprovide astandard pageheading forNASTRAN output.
3.4.24.3 Calling Sequence
CALLPAGE
CALLPAGEI
CALLPAGE2(N)
C_I_MON/SYSTEM/XXX,_TPE,SPACE(6),IPAGE,LINE,ITLINE,MAXLIN,DATE(3)
OTPE -Systemoutput unit-inteqer.
IPAGE-Current pagenumber-increased by1oneachcalltoPAGE.
LINE -Numberofdatalinesonprevious page-LINEissettozerobyPAGE.
ITLINE-Totalnumberoflinesofprintout inrun-ITLINE =ITLINE+LINE.
MAXLIN -Maximum numberofdatalinesallowed -ifITLINE&amp;gt;MAXLIN, PEXITwillbecalled.
DATE(3)- Today&amp;rsquo;s date: month,day,year-integer.
N -Numberoflinestobewritten -integer -input.
C_MM_N/_UTPUT/TITLE(32),SUBTIT(32),LABEL(32),NEADI(32),HEAD2(32),HEAD3(32)
3.4.24.4 Method
PAGEwrites astandard 6lineheading fromTITLE, SUBTIT, LABEL, HEAD1, HEAD2, HEAD3.
PAGE1writes onlythefirst3linesofastandard header.
PAGE2restores thepageifNlineswillnotfitonthecurrent page.
3.4.24.5 Design Requirements
ITLINEmustbelessthanMAXLIN. PAGEmusthaveaccess totheF_RTRAN I/_routines.
3.4-38&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.25 MESAGE (Message).
3.4.25.1 EntryPoint: MESAGE.
3.4.25.2 Purpose
Toqueue nonfatal messages during theexecution ofamodule; andforfatal messages give
coredump (CALL PDUMP), print themessage queue (CALL MSGWRT), andcallPEXIT.
3.4.25.3 Calling Sequence
CALLMESAGE(N_,PARM,N_E)
Where
N_=Internal message nun_er. N_positive defines themessage asnonfatal;
N_negative defines themessage asfatal.
PARM=Parameter used intheprinted message (usually theGIN_filenumber)
NAME(2) =Twowords usedintheprinted message (usually twoBCDwords containing the
nameofthesubroutine calling MESAGE).
3.4.25.4 Method
Non-fatal messages arequeued incommon block /MSGX/until themaximum number isreached.
Allnon-fatal messages after thisarelost. Whenafatal message isencountered, itisqueued
andappropriate action taken toterminate therun.
3.4.25.5 Design Requirements
Thesizeofcommon block /MSGX/limits thenumber ofmessages stored.
3.4-39 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2G MSGVIRT (Message Writer).
3.4.26.1 Entry Point: MSGiVRT.
3.4.26.2 Purpose
Toprint NASTRAN error messages onthesystem output file.
3.4.26.3 Calling Sequence
CALL MSG_RT
COHMON/MSGX/N,M,MSG(4,10)
where:
N-isthetotalnumber ofmessages tobeprinted.
M-maximum number ofmessages thatcanbequeued bysubroutine MESAGE inthearrayMSG.
MSG-arraywheremessage parameters arequeued.
MSG(I,I) -theinternal message number oftheIthmessage.
MSG(2,1) -ifIMSG(I,I)I _30,MSG(2,1) isaGIN_filenumber.
IfIMSG(I,I)I =30,thenMSG(2,1) isaninternal message number and
USRMSG iscalled.
MSG(3,1), MSG(4,1) =parameters fortheIthmessage.
3.4.26.4 Method
Theinternal message number, M(I,I), ifnotequalto30inabsolute value, isusedbyMSGWRT to
printouttheerrormessage alongwithexternal message number, which is3000plustheinternal
message number. Iftheinternal message number, M(I,I), is30,subroutine USRMSG iscalled.
3.4.26.5 Design Requirements
External message numbers output byMSGtVRT atpresent are3001through 3057.
MSGWRT iscalled onlybyNESAGE.
3.4-40 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIOI_S
3.4.27 USRMSG (User Message Writer).
3.4.27.1 Entry Point: USRMSG.
3.4.27.2 Purpose
Toprint mostNASTP,ANusererror messsges onthesystem output file.
3.4.27.3 Calling Sequence
CALLUSRMSG(I)
C_MM_N/MSGX/N,M,,MSG(4,10)
where:
I -Pointer intotheMSGarray.
N -NotusedinUSRMSG.
M -NotusedinUSRMSG.
MSG(!,!) -If!MSG(I,I)! =30,MSGNRT will callUSRMSG.
MSG(2,I) -UsedbyUSRMSG astheinternal message number.
MSG(3,I), MSG(4,I) -Parameters fortheIthmessage.
3.4.27.4 Method
USRMSG willprint appropriate error message along withexternal message number, which is
2000plus internal message nu_er.
3.4.27.5 Design Requirements
External message numbers output byUSRMSG atp,-esent are: 2001&amp;ndash;2140.
USRMSG iscalled onlybyMSGWRT.
3.4-41 (3/I/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.28MATDUM (Matrix Dump (Print) Routine).
3.4.28.1 Entry Point: MATDUM.
3.4.28.2 Purpose
Toprint ageneral NASTRAN matrix.
3.4.28.3 Calling Sequence
CALLMATDUM(FILEA)
FILEA -Seven-word array (matrix control block)- integer
Word
1
2
3
4
5
6
7
3.4.28.4 MethodGIN_name
Number ofcolumns
Numberofrows
Formofmatrix
Typeofmatrix
Maximum number ofnon-zero termsinanycolumn
Undefined
Thenon-zero terms ofeachcolumn areunpacked andprinted.
Ifthematrix control block doesnotcontain legal values thetable printer (seesection
3.4.29) iscalled.
3.4.28.5 Design Requirements
Open coreat/TABPRX/.
MATDUM mustholdthenon-zero bandofthematrix inthis area.
Subroutine TABPRT andtheFORTRAN I/_routines must beavailable toMATDUM.
3.4-42&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.29TABPRT (Table Printer).
3.4.29.1 Entry Point: TABPRT.
3.4.29.2 Purpose
Toprint anyNASTRAN DataBlock (especially tables).
3.4.29.3 Calling Sequence
CALLTABPRT(FILEN)
FILEN -GIN_ nameofdatablock -integer -input.
3.4.29.4 Method
Eachword isread, identified astotype&amp;ndash;integer, BCD,orrealnumber andprinted lO
characters perword, lOnumbers perline. Notethattheidentification method varies from
machine tomachine andisnotI00%certain, i.e., certain words maybemisidentified.
3.4.29.5 Design Requirements
Opencoreat/TABPRX/.
Double precision numbers will notbecorrectly interpreted ontheUnivac llO8.
3.4-43&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.30
3.4.30.I Entry Points: PREL_C, LBCATE.
3.4.30.2 PurposePREL(_C (Position DataBlocktoRequested Record).
Toprovide aconvenient means oflocating data records indata blocks output bythe
Input File Processor (IFP).
3.4.30.3 Calling Sequence
CALLPREL_C($n,BUFF,NAME)
n-F_RTRAN statement number defining return takenintheevent NAMEisnotinthe
FIST(i.e., datablock ispurged).
BUFF-Anarraywhosedimension equals thecontents ofthefirstwordof/SYSTEM/
plusone.UsedasaGIN_buffer byPREL_C andL_CATE.
NAME-GIN_filenameofdatablocktoberead(integer).
CALLL_CATE($n,BUFF,ID,IDX)
n-F_RTRAN statement number defining return takenintheeventthattherequested
record (defined byID)isnotpresent inthedatablock.
BUFF-ThesameBUFFassigned whenPRELOC wascalled.
ID-Theaddress ofatwo-word array. Thefirstwordistheinteger record identifi-
cation andthesecond wordisthebitposition inthetrailer forthedatablock
wherethepresence orabsence oftherecord isdefined.
IDX-Thecontents ofthethirdwordoftherecord foundwillbestored inIDX
(internal cardnumber generated byIFP).
Ifthedatablockisnotpurged, PREL_C willopenthefileandskiptheheader record.
2.Iftherequested record isnotpresent (asdetermined bytheappropriate trailer bit),no
I/_activity willoccur. Otherwise, LOCATE willposition thefiletoreadthefirstdataentryof
therequested record (i.e., afterthe3-word header fortherecord). See2.3.2forformat of
records andtrailer.Notes:
I.
3.4-44&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.Iftheuserdoesnotreadalldatainarecord andhewishes touseLOCATE tofind
another record, heshould useFWDREC toskiptheremainder ofthecurrent record prior tocalling
L_CATE.
4.Foroptimum efficiency inprocessing adatablock, theusershould callL_CATE in
theorder inwhich therecords appear onthedatablock, i.e.NASTRAN collating order.
3.4.30.4 Method
PRELOC stores NAME inBUFF(1) andthencalls _PEN using BUFF(2) asthebuffer address. If
thedatablock ispurged, thenon-standard return isqiven totheuser. Otherwise, FWDREC is
called toskiptheheader record andreturn ismadetotheuser. L@CATE calls RDTRL toreadthe
datablock trailer. Thebitposition identified byID(2) istested using ANDF. Ifzero, the
non-standard return isgiven. Otherwise, three words fromthefile areread. Ifthefirst word
equals ID(1), IDXissettothethird wordandreturn ismade. Otherwise, thefirst word issaved
andtheremainder oftherecord isskipped. Thefirst three words ofeachsuccessive record are
readandthetestforiietch onfirst wordismadeuntil (!)anend-of-file occurs inwhich case
thefileisrewound, theheader record skipped andtheprocess iscontinued, (2)amatch isfound
inwhich case IDXissetandreturn isgiven or(3)amatch with thefirst record readisfound
inwhich case therecord isskipped, awarning message isqueued andthenon-standard return is
given.
3.4.30.5 Diagnostic Messages
Thefollowing messages maybeissued byPREL_C:
2072
3002
3003
3.4-45&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.31 S_RTISortaTable).
3.4.31.1 EntryPoint: S_RT.
3.4.31.2 Purpose
Tosortacorecontained table, ortosortalogical record fromaspecified inputfile,
onaspecified keyword ineachentry.
3.4.31.3 Calling Sequences
Tosortacorecontained table:
CALLS_RT(O,O,NWDS,KEYWD,TA3LE,NTABLE)
NWDS
KEYWD
TABLE
NTABLE -Total
NWDS).
Tosortalogical record:
C_MM_N/SETUP/NFILE(6),BUF
CALLS_RT(INPFL,&lt;em&gt;UTFL,NWDS,KEYWD,BL_CK,NBL_CK)
NFILE -ThefirstthreewordsmustbesetbytheuserpriortoCALLS@RTwiththe
GINBfilenamesofthreescratch files forusebyS_RT. Uponreturn to
theuser,NFILE(6) willcontain theGIN_filenameofthefilecontaining
thesorted record.
BUF IfINPFL=BUTFL, thenBUFpoints toanareainBL@CKwhere aGINObuffer
isavailable forS_RT,i.e.,BL_CK(BUF) isthebuffer address.
Restriction: BUF&amp;gt;NBL_CK.
INPFL -GINOfilenameofdatablockcontaining theloaical record tohesorted.
&lt;em&gt;UTFL -GINOfilenameofdatablockwhere thesorted record istobewritten.
IfOUTFL=O,thesorted record willremain onNFILE(6).-Thenumber ofwords ineachentryofthetable. Restriction: NWDS&lt;/em&gt; 20.
-Theword positior&lt;/em&gt; within each entry onwhich thesort istotake nlace.
-Address where thetable isstored.
number ofwords inthetable (NTABLE must beanintegral multiple of
3.4-46&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
NWDS
KEYWD
BL_CK-Thenumber ofwords ineachentry oftherecord. Restriction: NWDS_20.
-Defined asabove.
-AnareaincoretobeusedbyS_RTtoperform thesortphase.
NBL_CK -Thenumber ofcomputer words available atBL_CK.
Notes:
I.INPFL mustbeopened andpositioned tothelogical record bytheuserprior to
entry toS_RT. Thefile isnotclosed byS_RT.
2.If_UTFL &lt;em&gt;O,thisfilemustbeopened andpositioned bytheuser prior toentry to
S_RT. Thefile isnotclosed byS_RT.
3.IfINPFL =&lt;em&gt;UTFL, thefileisclosed bySBRT, opened towrite withrewind, and
thesorted logical record iswritten asthefirst logical record onthefile. Thefileis
no___t_tclosed byS_RT.
A NPTI&lt;/em&gt;(A&lt;/em&gt; _cmlwmyc rlnc_H wifh rpwinH
3.4.31.4
I.Method
CpRESpRT. Themethod usedisashuttle exchange orbubble sortwhich isoptimum for
datawhichisnearly insort. Themethod isasfollows:
a.Thekeywordsoftwosuccessive entries arecompared. Ifcurrently insort,the
process isrepeated. Ifnot,
b.Asearch toward thebeginning ofthetableismadetodetermine theposition ofthe
out-of-sort entry.
c.Fromthisposition, thetableisshifted oneentryandtheout-of-sort entryis
inserted atitsproper position.
d.Ifthelastpairofentries havenotbeenanalyzed, theprocess returns tostep(a).
Otherwise thesortiscomplete.
2.FILES_RT. OneGIN_buffer isallocated attheendofBLBCKandascratch fileis
opened towrite. Asmanyentries ascanbeheldintheremaining coreinBL_CKarereadand
sorted usingthealgorithm above. Thesorted dataiswritten asalogical recordonthescratch
file. Thisprocess isrepeated untilalldataintheinputrecord hasbeenreadandthesorted
3.4-47&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
strings written onthescratch file. Ifonlyonesuchsortwasrequired, thesortiscomplete
except forcopying ontoOUTFL ifrequested. Otherwise, anoptimum distribution ofsorted recores
ontwoscratch filesiscomputed usingaFibonacci sequence. Thesorted strings areredistributed
between twoscratch filesandthemergephaseisentered. Thetwoscratch filesarereadone
entryatatime,merged, andnewsorted entries written onathirdscratch file. Notethat,usina
theFibonacci sequence, oneofthefilescontaining sorted strings willhaveagreater number of
strings (records) thantheother. Oneachpassinthemergenhase, themeraeoccurs untilthe
filewithfewerstrings isexhausted. Atthispoint, themerged filebecomes thefilewiththe
larger number ofsorted strings, theprevious larger filebecomes thefilewiththefewerstrinns,
andtheprevious filewithfewerstrings (which wasexhausted) becomes thefileontowhich the
merged strings arewritten. Theprocess continues untilthesortiscomplete. Theresulting
sorted record iscopied onto_UTFL ifrequested.
3.4.31.5 Design Requirements
Thenumber ofwords perentrymaynotexceed 20.(Achange inthedimension ofthelocal
variable TEMPmaybemadetorelaxthisrestriction.)
Theamount ofcoreavailable atBL_CKmustbeatleastoneGIN_buffer Dlus2&lt;em&gt;NWDS during
thecoresortphaseandthreeGIN_buffers plus2&lt;/em&gt;NWDS durin_ themerge nhase.
Thecoretableorlogical record tobesorted mustcontain anintegral number ofentries.
3.4.31.6 Diagnostic Messages
Thefollowing messages maybeissued byS_RT:
3001
3002
3008
3.4-48&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.32 &lt;em&gt;MMATD (General Matrix Multiply andTranspose -Double Precision).
3.4.32.1 Entry Point: GMMATD.
3.4.32.2 Purpose
Toperform anyoneofthefollowing matrix operations:
[A][B]:[C] (1)
[A]T[B]=[C] (2)
[A][B]T=[C] (3)
[A]T[B]T=[C] (4)
[A][B]+[D]:[C] (5)
[A]T[B]+[D]=[C] (6)
[A][B]T+[D]=[C] (7)
[A]T[B]T+ [D]=[C] (8)
where [A],[B],[C],and [D]arerealdouble precision matrices Tk&lt;/em&gt;&amp;hellip;..*&lt;em&gt;&amp;quot; •,,,,&lt;/em&gt;,uu_,neIsusedfor
small in-core matrices, innon-NASTRAN packed format, insuchnmdules asSMAI, SMA2, SMA3and
DSMGI.
3.4.32.3 Calling Sequence
CALLGMMATD(A,IR_WA,IC_LA,MTA,B,IR_WB,IC_LB,MTB,C)
A-Arealdouble precision matrix ofIR_WA rowsandIC_LA columns stored inthe
singly dimensioned double precision variable A.
N.B. Amust bestored byrows. Forexample, if
1.0 4.0
[A]:2.0 5.0,
.0 6.
then thematrix mustbestored intheF_RTRAN double precision array Aasfollows:
A(1) =l.O
A(2) =4.0
A(3) =2.0
A(4) =5.0
A(5) =3.0
3.4-49&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P23</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_023/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
A(6)=6.0
(Aisinputonly).
IROWA-number orrowsof[A]-input.
IC_LA-number ofcolumns of[A]-input.
MTA-Flagusedtodetermine if[A]istobetransposed andtodetermine iftheoutput
matrix, [C],istobezeroed out;thatis,todetermine ifamatrix product only,oftheform
[A][B]=[C],willbeperformed orifaproduct and(ineffect) asum,oftheform
[A][B]+[D]=[C],willbeperformed.
I.IfMTA=O,then[A]isnottransposed andhenceeither Equation (I)or(3)will
beperformed, depending uponMTB.
IfMTA=+Ithen[A]istransposed andhenceeither Equation (2)or(4)willbe
performed, depending uponMTB.
MTAisinputonly.
2.IfMTAislessthanzero,[C]isnotzeroed out.Hencetheroutine, inthis
case,computes
[a][B]+[D]=[C]ifMTA=-2andMTB=O.
[a][B]T+[D]=[C]ifMTA=-2andMTB:I.
[A]T[E]+[D]=[C]ifMTA=-IandMTB=Oo
[a]T[L]T+[D]=[C]ifMTA:-IandMTB=I.
(seeMTBdefinition below)
whereDisarealdouble precision matrix ofIR_WArowsandIC_LBcolumns if
MTA=-2andDisIC_LAxIC_LBifMTA=-!.Dmustbestored row-wise atthe
location ofCbythecalling program.
B-realdouble precision matrix, stored row-wise.
IR_WB-thenumber orrowsof[B]-input.
IC_LB-thenumber ofcolumns of[B]-input.
MIB-Transpose flagfor[B].IfMTB=O,[B]isnottransposed.
transposed.Seecomments forAabove -input.
IfMTB=I,[B]is
NotethatMTAandMTBareindependent andthatonlyMTAcontrols whether ornot
3.4-50 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
[C]willbezeroed out. MTBisinput only.
C-realdouble precision matrix. Input (ifMTA&amp;lt;O)andoutput.
Examples ontheuseoftheroutine:
I. If[A]is3x3and[B]is3xland[C]=[A][B]isdesired then:
CALLGI_TD(A,3,3,0,B,3,1,O,C). [C]is3xl.
2. If[A]isnxland[B]isnxlandthedotproduct isdesired ([A]T[B])then:
CALLG_4ATD(A,N,I,I,B,N,I,O,C). [C]isIxl,ascalar.
3.Compute [C]=([X][y])T where [X]is5x4and[Y]is4x7:
CALLGMMATD(Y,4,7,I,X,5,4,I,C). Cis7x5.
4.Compute D:[A][B]T+[C]where [A],[B]and[C]are3x3:
DOiOI=l,9
inniT)=r(_)
CALLG_TD(A,3,3,-2,B,3,3,I,D).
3.4.32.4 Method
Thefirst phase ofthesubroutine setsupinteger looplimits which arefunctions ofthetwo
transpose flags. IfMTAisnotlessthanzero, theCarray iszeroed out. Then theclassical
mathematical definitions oftheabove matrix products arecarried out.
3.4.32.5 Design Requirements
Theorders ofthe[A]andthe[B]matrices incombination withthetranspose flags mustdefine
aconformable matrix product.
3.4.32.6 Diagnostic Messages
Thesubroutine examines thetranpose flags incombination withtheorders ofthematrices to
make surethat aconformable matrix productisdefined bythis input data. This testclearly is
made forpurposes ofcalling routine checkout only. Notests aremade, norcantheybemade, to
insure thatthecalling routine hasprovided sufficient storage forarrays. Ifaconformable
matrix product isnotdefined bytheinput arguments, fatal error message 2021isprinted.
3.4-51 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.33
3.4.33.1
3.4.33.2 Purpose
Toperform any
where [A],[B],[D]
in-core matrices in
routine PREMAT.GMMATS (General Matrix Multiply andTranspose -Sinqle Precision).
EntryPoint: GMMATS.
oneofthefollowing matrix operations:
[a][B]:[C] (I)
[A]T[B]=[C] (2)
[a][B]T:[C] ($)
[A]T[B]T=[C] (4)
[A][B]+[D]:[C] (5)
[a]T[B]+[D]=[C] (6)
[A][B]T+[O]=[C] (7)
[a]T[B]T+[D]=[C] (8)
and[C]arerealsingle precision matrices. Thisroutine isusedforsmall
non-NASTP_AN packed format insuchmodules asSDR2andPLA3andintheutility
3.4.33.3 Calling Sequence
CALLGMMATS(A,IR@WA,IC_LA,MTA,B,IR@WB,ICOLB,MTB,C)
Thisroutine isexactly thesameassubroutine GMMATD except thatGMMATD operates onreal
double precision matrices, whileGMMATS operates onrealsingle precision matrices. Seesub-
routine description forGI,_ATD (seesection 3.4.32) fordetails onsubroutine arguments, method,
design requirements anddiagnostic messages.
3.4-52&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.34
3.4.34.1 EntryPoint:
3.4.34.2 PurposeINVERD (Double Precision InCore Inverse Routine).
INVERD.
Tocompute theinverse ofareal double precision matrix [A]andonoption tosolve the
matrix equation [A][X]=[B]. This routine isused toinvert small in-core double precision
matrices innon-NASTRAN packed format andisused asautility routine insuch mndules asSMAI,
SMA3andDS_IGI.
3.4.34.3 Calling Sequence
CALLINVERD (NDIM,A,N,B,M,DETERM,ISING,INDEX)
NDIM -Theactual rowdimension ofthedoubly subscripted arrays AandBinthe
calling program -integer -input.
A -Thesquare matrix tobeinverted. [A]-Iuponreturn fromINVERD isstored at
A.Double precision -inputandoutput
N -Theorderofthematrix beinginverted (thesizeoftheupperlefthandcorner
actually beinginverted). N(NDIM-integer -input.
B -Thecolumn(s) ofconstants intheaboveequation. If[A]istobeinverted,
then Bisadummy argument. Thesolution matrix [X]isreturned atB.Double
precision -input andoutput.
-Thenumber ofcolumns ofconstants. IfM_O,[A]-liscomputed -integer - M
input.
DETERM -Thedeterminant of[A].
ISING -Singularity indicator.
INDEXDouble precision -output.
If[A]isnon-singular, ISlNGissettoI;if[A]is
singular, ISINGissetto2-integer -output.
Doubly subscripted arrayofrowdimension Nandcolumn dimension 3usedforthe
rowandcolumn interchanges -integer -internal working storage.
3.4.34.4 Method
Theclassical Gauss-Jordan method with full rowandcolumn interchanges isused.
arithmetic operations aredouble precision.All
3.4-53&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.35
3.4.35.1
3.4.35.2INVERS (Single Precision InCore Inverse Routine).
Entry Point: INVERS.
Purpose
Tocompute theinverse ofarealsingle precision matrix [A]andonoption tosolvethe
matrix equation [A][X]=[B].Thisroutine isusedtoinvert smallin-core single precision
matrices innon-NASTRAN packed format andisusedasautility routine insuchmodules asSDR2.
3.4.35.3 Calling Sequence
CALLINVERS (NDIM,A,N,B,M,DETERM, ISlNG,INDEX)
Thisroutine isexactly thesameassubroutine INVERD except thatINVERD operates onreal
double precision matrices, while INVERS operates onrealsingle precision matrices. Allarith-
meticoperations aresingle precision. DETERM isrealsingle precision. Seesubroutine descrip-
tionforINVERD (seesection 3.4.34) fordetails onsubroutine arguments andmethod.
3.4-54&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.36
3.4.36.1
3.4.36.2PREt4AT (14aterial Property Utility).
Entry Points: PRE_,IAT, I_AT.
Purpose
Toprovide autility routine forobtaininn material properties usedbystructural element
subroutines. Thefirst entry point, PRESET, iscalled oncebyamodule forinitialization purposes,
andthen14ATcanbecalled bytkemodule&amp;rsquo;s element subroutines repeatedly tofetch required
material properties.
3.4.36.3 Calling Sequence
CALLPREMAT (Z,ZZ,BFR,NIMAT,N_AT,MPTF,DITF)
Z -Integer array ofopencoregiven tothesubroutine tostore thematerial proper-
tiesandthedirect input tables -input andoutput.
ZZ Sa_address asZ.Usedasrealinthisroutine -input andoutput.
BFR -AGINObuffer (plus oneceil) usedbysubroutine PRELOC asabuffer -input only.
NIMAT -Thelength ofopencore, theZarray, given toPREMAT andMAT-integer -
input only.
N2MAT -Thelength ofopencoreusedbyPREMAT andMAT-integer -output only.
MPTF -GINBfile number oftheMaterial Properties Table (ilPT) datablock -input only.
DITF -GINOfilenumber oftheDirect Input Tables data block. IfDITFisnegative,
theroutine assumes thatthecalling module isaPiecewise Linear Analysis
module which implies material properties cannot betemperature dependent and
thatMATSI cards aretoberead.
PREMAT usesthelOthwordof/SYSTEM/which isthetemperature setidentification number for
material properties chosen bytheuser inhisCaseControl Deck. PREMAT alsouses/NA_ES/for
various GIN_options.
3.4-55&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
CALL MAT(ELE;41D)
ELZMID -Integer element identification number; usedonlyfordiagnostic messages
(seebelow) -inputandoutput.
C@HMON/HATIN/_TID,INFLAG,TEMP,PLAARG,SINTH,C_STH
MATID -Material property identification number -integer -input.
INFLAG -Integer inputflagwhichdetermines which setsofinputdatacards, MAT1,MAT2,
orMAT3,theroutine willsearch inordertofindrIATID. AlsoINFLAG deter-
minesinwhatformat theoutput &lt;em&gt;illbeplaced intheMAT_UT common block.
Currently INFLAG mayassume thevalues 1through 7defined asfollows:
INFLAG =1&amp;ndash;Thematerial properties corresnonding totheMATIDareoutnut in
&amp;ldquo;MAT1&amp;rdquo; orisotropic material format (see/F!AT_UT/ below). Onedimensional
elements suchasR@D,BAR,SHEARetc.require isotropic materials. Ifthe
MATIDisnotfoundamongalltheMAT1material cardsreadbyPREMAT, afatal
erroroccurs.
INFLAG =2&amp;ndash;IfINFLAG =2,thematerial properties corresponding tothe
MATID areoutput in&amp;quot;MAT2&amp;quot; oranisotropic material format. Two-dimensional
elements suchasTRMEM, TRIAl, QDPLT, QUADIetc.mayuseisotropic or
anisotropic materials. First, theroutine willtrytofindtheMATIDamong
theMAT1cards. Ifitisfoundamong theMAT1cards, thevariables E(modulus
ofelasticity), v(Poisson&amp;rsquo;s ratio) andG(shear modulus) areusedtoconstruct
the3x3symmetric matrix [Gelneeded bytwo-dimensional elements, andthe
matrix isstored in/MATOUT/:
[GelT&lt;/em&gt; vE 0 1-v2
_E E
l-v21-v20
0 0 G
3.4-56&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
IftheMATIDisnotfoundamongtheMAT1cards, the_AT2cardsaresearched.
IftheMATIDisnotfoundamongtheMAT2cardsafatalerroroccurs. Ifitis
found, [Gm],the3x3symmetric matrix inputontheMAT2card,istransformed
bythematrix equation [Ge]=[u]T[Gm ][U]and{_}:[V]{_m},where{&lt;em&gt;m}is
thetemperature expansion coefficient vector innutonaMAT2card.[U]and[V]
arefunctions ofsin8andcose(seeSINTHandC_STHbelow).
[u]
OSO sin2o cosOsin07J in2O cos2O -cosesine
2cososino 2cosOsinO (cos2O-sin2O
Iv]cos2e sin2e -cosesine
sin2e cos2e cosesine
2cosOsine -2cosesine (cos20-sin2e)
INFLAG=3&amp;ndash;IfINFLAG=3,itimplies theinverse ofthesymmetric 2x2
transverse shearmatrix Jwillbestored inlocations 16,17and18of
/MATeUT/. Therearetwocases: (I)thecurrent MATIDisnotequaltothe
mostrecent MATID,MATIDe, and(2)thecurrent MATIDisequaltothemost
recent MATID.
I.Ifthecurrent MATIDisnotequaltothemostrecentmaterial identi#i •
cation number (MATIDe), theMAT1cardsaresearched. IftheMATIDis
foundamongtheMAT1cards,thenlocations 16,17and18of/MATOUT/ are
settoG,0.0andGrespectively, whereGistheshearmodulus. Ifthe
MATIDisnotfoundamongtheMAT1cards, theMAT2cardsaresearched.
IftheMATIDisnotfoundamongtheMAT2cards, afatalerroroccurs. If
itisfoundamongtheMAT2cards, locations 16,17and18aresettozero.
2.Thecurrent MATIDisequaltothemostrecent MATID. IfINFLG&lt;/em&gt;, the
mostrecent INFLAG isnot2,thisisthesameascase(I).Ifitis2,
then(a)iftheMATIDwasfoundonaMAT1card,locations 16,17and18
3.4-57 (3/I/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
aresettoG,0.0andGrespectively; or(b)iftheMATIDwasfoundona
MAT2card,locations 16,17and18aresetto0.0.
INFLAG =4&amp;ndash;IfINFLAG is4,thisimplies thatonlythedensity ofthe
material, RH_,willbereturned in/MAT_UT/ andthisinthefirstlocation.
TheMATIDcanbeeither onaMAT1orMAT2card. IftheMATIDcannot be_ound
amongallMAT1andMAT2cards, afatalerroroccurs.
INFLAG =5&amp;ndash;INFLAG =5isreserved foruseonlybymodule PLAI. Thisoption
determines iftheMATIDissuchthatE,themodulus ofelasticity, isdefined
asstress dependent byMATSlandTABLESl cards. Ifitisstress dependent,
INDSTR, equivalenced tothefirstwordof/MAT_UT/, issetto+I.Ifnotstress
dependent, INDSTR issettoO.OnlyMAT1cardsareadmissible forINFLAG =5.
INFLAG =6&amp;ndash;INFLAG =6isreserved forusebymodules PLA3andPLA4. The
fourth wordof/MATIN/, PLAARG (seebelow), isstrain andisusedastheinde-
pendent variable inatablelook-up forstress, which isstored inthefirst
wordof/MAT_UT/. OnlyMAT1cardsaresearched tomatch theinputMATID.
INFLAG =7&amp;ndash;INFLAG 7implies thatthematerial properties corresponding to
theMATIDwillbeoutput inMAT3ororthotropic material format. Currently
onlytheaxisymmetric elements TRIARG, TRAPRG andTORDRG usethisoption. If
ther_TIDisfoundintheMAT1set,thedataarestored inMAT3format. Ifnot
foundintheMAT1set,theMAT3setissearched. Ifnotfoundhere,afatal
errorexists.
INFLAG =8&amp;ndash;INFLAG =8isusedonlybytwo-dimensional element subroutines
inmodules PLA3andPLA4. Thefourth wordof/MATIN/, PLAARG (seebelow), is
stress (&lt;em&gt;)andisusedastheordinate inaninverse interpolation tablelook-
uptoobtain theabscissa which isstrain (&lt;/em&gt;).
Ifeither: a)theordinate isintherangeofthepiecewise linear function
defined bythetableonaTABLES1 bulkdatacard, orb)theordinate is
greater thanthemaximum (which isalsothelast)ordinate inthetablebut
theslopeofthelinesegment joining thelasttwopoints ofthetableis
nonzero, thenthesecond wordof/MAT_UT/ issettozeroandtheabscissa,
3.4-58 (311171)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
obtained byinverse linear interpolation orextrapolation, isstored inthe
first word of/MAT_UT/.Ifeither: a)theordinate islessthantheminimum
(which isalsothefirst) ordinate i_thetable, orb)theordinate is
greater thanthemaximum ordinate inthetable andtheslope oftheline
segment joining thelasttwopoints ofthetable iszero, thentheinteger
&amp;ldquo;l&amp;quot;isstored inthesecond wordof/MAT_UT/(andthefirst word of/MAT_UT/
issettozero). OnlyMATI cards aresearched tomatch theinput MATID.
TEMP -Average element temperature. Usedastheindependent variable inatable look-
upwhen itisdetermined thatamaterial property istemperature dependent.
Notusedwhen INFLAG =5or6.
PLAARG -Element strain. Usedastheindependent variable inatable look-up whenE,
themodulus ofelasticity, isdefined asthefirst derivative ofastrain-stress
curve. Used onlyinthePiecewise Linear Analysis Rigid Format andonlyby
modules PLA3andPLA4.
SINTH -Sineofthematerial property orientation angle. Used onlywhen INFLAG =2
andtheMATID isfound among theMAT2cards. Usedtoconstruct the[U]matrix
referenced above.
C_STH -Cosine ofthematerial property orientation angle. Thecomments onSINTH,
above, alsoapply here.
C_MM_N/MAT_UT/ -(Output Common Block). Length 20words. Depending upon thevalues ofINFLAG,
theoutput common block isdefined variously asfollows:
3.4-59 (311171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
I.FIAT1Fomlat (INFLAG :I)
21Word
l E
2 G
3
4 p
5
6 TO
7 ge
8 at
9 oc
I0 as
ll-20
_T2Format (INFLAG =2)
Word Symbol
l Gil
2 Gl2
3 Gl3
4 G22
5 G231
6 G33
7 RH_Y
8 ALPHI
9 ALPH2
lO ALPHI2
II TOY
12 GEY
13 SIGTY
14 SIGCY
15 SIGSY
16-20Definition
Young&amp;rsquo;s modulus (modulus ofelasticity)
Shear Modulus
Poisson&amp;rsquo;s ratio
Density
Thermal expansion coefficient
Thermal expansion reference temperature
Structural element damping coefficient
Stress limit fortension
Stress limit forcompression
Stress limit forshear
Undefined
Definition
The3x3symmetric material
property matYix
Density
Thermal expansion coefficient vector
Thermal expansion reference temperature
Structural element damping coefficient
Stress limit fortension
Stress limit forcompression
Stress limit forshear
Undefined
3.4-60 (3/I/71)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.Transverse Shear Inverse Matrix (INFLAG =3)
Word
1-15
16
17
18
19-20S__ Definition
Jll
Jl2
J22
4.RH@Only Format (INFLAG =4)
Word S_jnnbol
1 RHO
2-20
5.PLAIUseOnl_ (INFLAG =5)
6tWord Symbol
1INDSTR
2-20
Stress Functional Value (INFLAG =6)
Word Sy_ol
l PLAANS
2-20Unchanged
The2x2symmetric inverse ofthe
transverse shear matrix
Undefined
Definition
Density
Undefined
Definition
Stress dependent flag
Undefined
Definition
Value ofstress (_)asafunction of
(strain)
Undefined
3.4-61 (3/I/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
7.MAT3Format(INFLAG =7)
Word Symbol
1 EX3
2 EY3
3 EZ3
4 NUXY3
5 NUYZ3i
6 NUZX3
7 RH_3
8 GXY3
9 GYZ3
I0 GZX3
II AX3
12 AY3
13 AZ3
14 TREF3
15 GE3
16-20
8,Definition
Young&amp;rsquo;s Moduli x,yandz
directions
Poisson&amp;rsquo;s ratios. Coupled strain
ratios inthexy,yz,andzx
directions
Density
Shear moduli
Thermal expansion coefficients
Thermal expansion reference temperature
Structural element damping coefficient
Undefined
Strain Functional Value (INFLAG :8)
Word Symbol
1 PLANS
2 ICELL2Definition
Value ofstrain (_)asaninverse
function ofstress (0)
I_0iftheinput stress isintherange ofthefunction
liftheinput stress isoutside
therange ofthefunction
3-20 Undefined
3.4.36.4 Method
I.PREMAT: AlltheNLATI, _T2andMAT3cards arereadfrom theMPTdata block intoopen
coresothateachcardisassigned l+3*Nwords ofcorewhere N,afunction ofthecardtype, is
thenumber ofmaterial property data items onthatcard type. Thefirst word isthematerial iden-
3.4-62 (311171)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
tification numberandeachmaterialpropertyisallocated3words:thefirsttheinputmaterial
property;thesecondatable(function) numberwhichgivesthismaterialpropertyasafunctionof
temperature; thethirdatablenu_erwhichgivesthismaterialpropertyasafunctionofstress.
Initiallywords2and3aresettozero.AlthoughthethirdwordiscurrentlyusedonlyforMATI
cardsandforE,themodulusofelasticity, onthatcard,futuredevelopment maymakeuseofa
moregeneralapplication ofstressdependentmaterialproperties. Iftherearenotemperature
dependentmaterialproperties foranon-Piecewise LinearAnalysisproblem,PREMATiswrappedup
andaRETURNtothecallingroutineisexecuted.
Foranon-Piecewise LinearAnalysisproblemforwhichatemperature setformaterialproper-
tieswasselectedintheuser&amp;rsquo;sCaseControlDeck,allMAI-FI,MATT2andMATT3cardsarereadinto
opencorefromtheMPTdatablock.ForaPiecewiseLinearAnalysisproblemMATSIcardsareread
intoopencorefromtheHPT.Asorted list, withduplicates discarded, ofthetable numbers refer-
enced onthese cards isconstructed inopencore. Thistable nun_er listisconstructed sothat
every referenced tablehaseleven locations allocated toit.These e]even ]ocations areusedasa
dictionary forthetables. Thecontents are: thetable number (word l);thetable type1,2,3, or
4(word 2);pointers tothefirst andlastentries inthetable (words 3and4);parameters from
theTABLE card (words 5through ll). TheDITdatablock isthenread. Foreachtable read, itis
determined byscanning thetable number listwhether ornotthetable isrequired forproblem
solution. Ifitisrequired, thetable isreadintoopencoreandthedictionary entry forthe
table iscompleted. Forarequired table which isatype4(polynomial) table, thefunctional
values ofthepolynomial attheendpoints oftheinterval ofthereal lineoverwhich the
polynomial isdefinedarecalculated byan&amp;quot;internal subroutine&amp;rdquo; andstored inthetable
dictionary. Ifthetable isnotrequired, itisreaduntil anend-of-table indicator issensed.
This process continues until alltables ofthesetTABLEMI, TABLEM2, TABLEM3 andTABLEM4 orof
thesetTABLESI, areexhausted. Whenallreferenced tables havebeenread intocore, PREMAT is
wrapped upandareturn isgenerated.
2.MAT: Thebasic logic oftheMATroutine isstraightforward. Eight types oftable look-
ups, described above forINFLAG =l,2,3,4,5,6,7and8aresupported. Acomputed-go-to on
INFLAG isexecuted andeach option iscarried outasdescribed above. &amp;ldquo;Internal subroutines&amp;rdquo;
which areentered viaF_RTRAN ASSIGN andG_T@statements andreturn totheir correct &amp;ldquo;calling&amp;rdquo;
locations viaASSIGNED G_T_&amp;lsquo;sareusedliberally byMAT. Itshould benoted thateach timeMAT
3.4-63 (3/1/71)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
iscalled, MATID, INFLAG andother applicable input items, aresaved. Onthenextcallifthe
input isidentical with theinput oftheprevious call, nothing isstored in/MAT_UT/.Hence,
thecalling routine should use/MAT_UT/asa&amp;quot;read-only dataset&amp;quot;.
3.4.36.5 Design Requirements
Subroutine GMMATS istheonly non-root segment subroutine usedbythisroutine. There areno
other special requirements.
3.4.36.6 Diagnostic Messages
Thefollowing messages canbeoutput viaPREMAT and/or MAT: 3008, 2017, 2018, 201g, 2041,
2042, 2103, 2112, 2113, 2114, 2115, 2116, and2117.
3.4-63a (3/1/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.37
3.4.37.1 EntryPoints: PRETRD, TP_ANSD
3.4.37.2 PurposePRETRD (Utility forModules WhichUsetheCSTMDataBlock-Double Precision Version).
Autility routine formodules which usetheCSTM(Coordinate System Transformation _atrices)
datablock, TRANSD generates arealdouble precision 3x3direction cosine matrix whichmansa
vector fromalocalcoordinate system tobasiccoordinates. PRETRD setsUDeventual callsto
TP_ANSD. Foramodule touseTRANSD acalltoPRETRD ismadeonceandonlyonce.
3.4.37.3 Calling Sequence
CALLPRETRD(CSTM,NCSTM)
CSTM=arrayofcoordinate system transformation matrices (seedatablockdescrintion
forCSTM,section 2.3)-mixed -input.
NCSTM=length oftheCSTMarray. NCSTM=14*the number ofcoordinate systems inthe
CSTMdatablock-integer -input.
CALLTRANSD(ECPT,TA)
ECPT=arrayoflength 4.Thefirstwordisaninteaer coordinate system identification
number andthenext3wordsarethecomponents ofavector inbasiccoordinates -
inputonly.
TA =realdouble precision 3x3direction cosine matrix whichmapsavector _romthe
localcoordinate system designated byECPT(1) tobasiccoordinates -output.
3.4.37.4 Method
TheCSTMarrayissearched tofindacoordinate system transformation identification number
thatmatches ECPT(1). Ifthecoordinate system isrectangular, the3x3matrix, callitT,which
isinwords6through 14oftheCSTMblocks, isstored inTAandaRETURN isgenerated. Ifthe
coordinate system isbasic, theidentity matrix isreturned. Ifthecoordinate system isspherical
orcylindrical, the[T]matrix defines therectangular system fromwhich theangles aredefined.
Inthesecasescalculate:
X
y=[T]T E-V
z
where Eistheinputvector stured atECPT(2) aridVisthetransl_tion offset vector inbasic&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
coordinates found intheCSTMblock inwords 3,4and5;and
r=V_z+ y2
Ifthecoordinate system iscylindrical define:
x/r -y/r !IITs1= L_/r x/ro
Ifthecoordinate system isspherical define:
Then [TA]
3.4.37.5=&lt;em&gt;/x2+y2+Z2&amp;rsquo;
FXI% X__{Z &lt;em&gt;yl_r&lt;/em&gt;
[T&lt;/em&gt;] =Jy/;L y._&lt;em&gt;zr&lt;/em&gt; x/rI
Lz/&lt;em&gt;-r_o.oJ
=[T][T&lt;/em&gt;] iscomputed andthesubroutine returns tothecalling program.
Design Requirements
Theroutine isdesigned sothatamodule which usestheCSTMdata block canhaveautility
routine tofetch acoordinate system transformation matrix. Typically, amodule driver will
attempt toopenthefilewhich contains theCSDIdatablock. Ifthedatablock isnotPurged,
themodule willreadtheentire datablock intoopencore, close thefileandcallPRETRD to
transmit theaddress ofthearray andthelength ofthearray. Once thisinitialization call
hasbeenmade, TRANSD maybecalled inthemodule asmanytimes asnecessary. Theroutine does
notperform anyI/_operations. Theroutine assumes theformat oftheCSTMdatablock, asoutlined
intheDataBlock Description fortheCST)I (section 2.3oftheProgrammer&amp;rsquo;s Manual) iscorrect, and
nonumerical checks aremade.
3.4.37.6 Diagnostic messages
Ifthecoordinate system identification number transmitted viaECPT(1) cannotbefound in
theCSTM array userfatal message 2025occurs. Theusershould check coordinate system numbers
onGRIDbulk datacards against those defined onC_RDIC, C_RDIR, etc., bulkdatacards toinsure
thatthere arenoundefined coordinate systems.
3.4-65 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.38
3.4.38.1
3.4.38.2PRETRS IUtility forModules Which UsetheCSTMDataBlock -Single Precision Version).
Entry Points: PRETRS, TRANSS.
Purpose
Autility routine formodules which usetheCSTM (Coordinate System Transformation Matrices)
data block, TRANSS generates arealsingle precision 3x3direction cosine matrix which mapsa
vector fromalocal coordinate system tobasic coordinates. PRETRS setsupeventual calls to
TP_ANSS. Foramodule touseTRANSS acalltoPRETRS ismade onceandonly once.
3.4.38.3 Calling Sequence
CALLPRETRS(CSTM,NCSTM)
CALLT_NSS(ECPT,TA)
This routine isexactly thesameassubroutine PRETRD (seesection 3.4.37) andTRANSD
except thatTRANSD, anentry point, returns arealdouble precision matrix TAandusesdouble
precision arithmetic, while TRANSS returns arealsinqle precision matrix TAandusessinnle
precision arithmetic. Seesubroutine description forPRETRD fordetails onsubroutine arguments,
method, design requirements anddiagnostic messaoes.
3.4-66&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.39PRETAB (Table Look-Up).
3.4.39.1 Entry Points: PRETAB, TAB.
3.4.39.2 Purpose
Toreadtables (functions) fromthedatablock DIT,Direct Input Tables, intocoreandto
setuptable dictionaries which aresubsequently usedwhenthecalling routine requests a
functional value fromatable viaacalltotheentry point TAB. Theroutine isdesigned so
that PRETAB iscalled onceandonlyoncebyamodule andsothatTABmaybecalled many times as
atable look-up routine.
3.4.39.3 Calling Sequence
CALLPRETAB(DITF,Z,IZ,BUF,LCRGVN,LCUSED,TABN_L,LIST)
DITF -GINBfile number oftheDirect Input Tables data block -integer -input.
Z -Array ofcoregiven tothesubroutine asworking storage -real-input and
output.
!Z -Sameaddress asZ.Usedasinteger inthisroutine.
BUF -AGINBbuffer (plus onecell) usedbysubroutine PREL_C -input.
LCRGVN -Thelength ofZarray, given toPRETAB andTAB-integer -input.
LCUSED -Thenumber ofcells ofcoreusedbyPRETAB -integer -output.
TABN_L -Listoftable numbers thatthecalling routine will bereferencing viaTAB
calls. TABN_L(1) =Nisthenumber oftables tobereferenced. TABN_L(2),
&amp;hellip;. TABN_L(N +l)contain thetable numbers. Note that0isanadmissible
table number. Table 0defines afunction which isidentically zerofor
allvalues oftheindependent variable -integer -input.
LIST -Array ofcontrol words forsubroutine L_CATE andtable types. LIST(1) =M
isthenumber oftriples which follow inthelist. Thefirst twowords of
eachtriple arethesubroutine L_CATE control words fortheparticular table
being referenced andthethird word isthetable type: l,2,3or4-integer -
input.
3.4-67&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
CALLTAB(TABID,X,Y)
TABIL-Tablenumber-integer-input.
X-AbscissafortablenumberTABIDatwhichthefunctional valueisdesired-real-
input.
Y-Functional value(ordinate) ofabscissaXfortablenumberTABID-real-output.
3.4.39.4 Method
PRETAB:ForeachtableintheTABNOLlistanIIwordtabledictionary entryisdefinedin
opencore.ThefirstwordineachentryisthetablenumberobtainedfromtheTABNOLlist.Then
theDITdatablockisread.ForeachentryoftheDIT,itisdetermined whetherornotthistable
numberisintheTABN_Llist.Ifitisnot,thenthetableisreadseriallyuntilanend-of-table
indicatorissensed.IfitisatablecalledforintheTABN_Llist,theprogramsetswords2and
3ofthetabledictionary, thetabletype(1,2,3or4)andthepointertotheIstentryinthe
tablerespectively. Thetableisthenreadintocore,andthe4thwordofthetabledictionary,
thepointertothelastentryinthetable,isset.Words5throughIIofthedictionary, the
tableparameters, areset.Ifthetabletypeis4,indicating apolynomial, thefunctional values
ofthepolynomial attheendpointsoftheintervalofthereallineoverwhichthepolynomial is
definedarecalculated. AfterthetablesforanentryintheLISTarrayhavebeenexhausted, a
checkismadetodetermineifalltablesintheTABN_Llisthavebeenfound(aftereachtableis
foundthetablenumberissetnegative). Ifalltableshavebeenfound,thetablenumbersin
TABN_Laresettotheiroriginalpositivestatusandtheroutineiswrappedup.Ifalltables
havenotbeenfound,thenextclassoftablecards,definedbythenexttripleintheLISTarray,
arelocatedintheDITdatablockandtheprocessisrepeated.
TAB:lhetabledictionary issearcheduntilamatchisfoundwiththeinputargumentTABID.
Thetabletype(l,2,3or4)isdetermined, the(functional) argumentiscomputedaftera4-way
branchontabletype,andatransferismadetoeitherthe&amp;quot;internalsubroutire&amp;quot; whichperforms
linearinterpolation&amp;ndash;if thetabletypeisl,2or3&amp;ndash;orthe&amp;quot;internalsubroutine&amp;quot; whichperforms
polynomial evaluation&amp;ndash;if thetabletypeis4.
3.4-68&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P24</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_024/</guid>
      <description>
        
        
        &lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.39.5 Design Requirements
DITmust notbepurged. Enough opencoremustbemadeavailable toconstruct thetable
dictionaries andtocontain allreferenced tables incore. Alltable numbers mustbeunique.
Alltable numbers input viatheTABNBL array mustbefound intheDITdata block. Atable
number referenced bytheTABID argument ofTABmusthavebeenreferenced previously intheTABN_L
array.
3.4.39.6 Diagnostic Messages
Thefollowing diagnostic messages mayappear:
3008
2088
2089
2090
3.4-69&lt;/p&gt;
&lt;p&gt;3.4.40 AXISIDrawanAxisonaPlot).
3.4.40.1 EntryPoint: AXIS.
3.4.40.2 PurposeSUBROUTINE DESCRIPTIONS
Todrawanxoryaxisonaplotter.
3.4.40.3 Calling Sequence
CALLAXIS(XI,YI,X2,Y2,PEN,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
where:
XI,YL:starting pointoftheaxisline-real-input.
X2,Y2=terminal pointoftheaxisline-real-input.
PEN=pennumber orlinedensity tobeused(itsmeaning depends ontheplotter)
-integer -input.
-!toinitiate thelinemode._PT =+toterminate aseries ofplotoommands. -integer -input
todrawanaxis.
/PLTDAT/
M_DEL =plotter modelnumber -integer -input.
PL_TER =plotter number (i)-integer -input.
NPENS :largest number ofpensormaximum density forplotter i-integer -input.
3.4.40.4 Method
Thissubroutine callsLINEorAXISi, depending onwhether theplotter hasavailable asingle
command usedfordrawing anaxis. Atthiswriting, onlyplotter 3hasaspecial axiscommand.
If_PT_O,allotherarguments areignored, andLINEorAXISi iscalled. Otherwise,
alternate pennumber (PENX) iscalculated modulo NPENSandisusedasthepennumber passed to
3.4-70 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
LINEorAXISi, asfollows:
PENX=PEN-NPENS *((PEN-I)/NPENS)
3.4.40.5 Design Requirements
Generally, AXISorLINE should becalled with_PT=-lbefore axesaregenerated, even though
itisnotnecessary tospecifically putallplotters inthelinemode (e.g., plotter 3).Once
thisisdone, itneed notberepeated unless theplotter hasbeen putintosomeother mode (e.g.,
thetyping mode).
Subroutines used: LINE, AXISi.
3.4-71 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.41AXlSi (Axis Routine forPlotter i).
3.4.41.I Entry Point: AXISi.
3.4.41.2 Purpose
Tosetupaplot command todrawanxoryaxisonplotter i.
3.4.41.3 Calling Sequence
CALLAXISi(XI,YI,X2,Y2,PEN,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
Xl,Yl =starting point oftheaxis line-real-input.
X2,Y2 =terminal point oftheaxisline-real-input.
PEN =pennumber orlinedensity tobeused (meaning depends onplotter)- integer -
input.
-itoinitiate thelinemode_PT =+,toterminate aseries ofplotcommands -integer -input.
otodrawanaxis
/PLTDAT/
XYMIN -minimum xandyvalues oftheregion permitted onplotter i-real-input.
XYMAX =maximum xandyvalues oftheregion permitted onplotter i-real -input.
ORIGIN =location ofthelower leftcorner oftheplotter relative toitstruephysical
origin -real-input.
3.4.41.4 Method
Taking intoaccount thetrueorigin oftheplotter, theplot command isgenerated.
3.4-72 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.41.5 DesignRequirements
Subroutine used:WPLTi.
3.4-72a(12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.42SKPFRM (Skip aVariable Number ofFrames).
3.4.42.1 Entry Point: SKPFRM.
3.4.42.2 Purpose
Tcskipavariable number offrames, ifappropriate totheplotter.
3.4.42.3 Calling Sequence
CALLSKPFRM (BFRAMS)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
BFRAMS =number offrames tobeskipped -integer -input.
/PLTDAT/
M_DEL =plotter model number -integer -input.
PL_TER =plotter number -integer -input.
REG =plotregion parameters -real-input.
AXYMAX =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-input.
EDGE =sizeoftheborders (x,y) inplotter units -real-input.
CAMERA =currently active camera -integer -input.
_RIGIN =location (x,y) ofthelower leftcorner oftheplotter relative toitstrue
physical origin -real-input.
3.4.42.4 Method
Forplotters 3and9,thespecified number offrames (BFRAMS) areskipped. Forplotters 4
to7,theremainder ofthecurrent plot isskipped, andanother halfplot isalsoskipped. For
plotters l,2and4,nothing isdoneduetotheabsence ofanyautomatic method ofskipping blank
paper.
3.4-73 (12-1-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.42.5 Design Requirements
Subroutines used: LINE, WPLTi.
3.4-73a (12-I-69)&lt;/p&gt;
&lt;p&gt;3.4.43
3.4.43.1
3.4.43.2SUBROUTINE DESCRIPTIONS
SELCAM IToInitiate aNewPlot).
Entry Point: SELCAM.
Purpose
Toselect acamera and/or togenerate asetup record foranewplot.
3.4.43.3 Calling Sequence
CALLSELCAM (CAMERA,PLTNUM,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
CAMERA =camera number tobeselected (ifappropriate) -integer -input.
PLTNUM =plotnumber -integer -input.
OPT_0=ifthecamera istobeselected when appropriate, andnothing istobedone
when notappropriate -integer -input.
/PLTDAT/
M_DEL
PL_TER
XYMAX
EDGE
CAMNUM
_RIGIN
3.4.43.4 Method=plotter model number -integer -input.
=plotter number -integer -input.
=sizeofthepaper (x,y) used, lesstheborders, inplotter units -real
-input.
=sizeoftheborders (x,y) inplotter units -real-input.
=lastselected camera -integer -output.
=location (x,y) ofthelower leftcorner oftheplotter relative toitstrue
physical origin -real-input andoutput.
If_PT#0andacamera isnotappropriate totheplotter, nothing isdonebythissubroutine.
3.4-74 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Otherwise, whatisdoneisdependentupontheplotterhardwarerequirements.
Forplottersl,2and8,theplotterisstoppedwiththeplotnumberdisplayedintheconsole
lights.Forplotters2and9thespecifiedcameraisselected. Andforplotters4to7,ablock
addressrecordwithth_plotnumberisgenerated.
3.4.43.5 DesignRequirements
Subroutines used:WPLTi,LINE.
3.4-74a(12-I-69)&lt;/p&gt;
&lt;p&gt;3.4.44UTILITY SUBROUTINE DESCRIPTIONS
IDPL_T (Generate an&amp;quot;ID&amp;quot;Plot).
3.4.44.1 EntryPoint: IDPL_T.
3.4.44.2 Purpose
Toidentify theownerofalltheplotsbyprinting theinformation contained onthePL_TID
cardintheuser&amp;rsquo;s CaseControl Deckpriortogenerating thefirstplot.
3.4.44.3 Calling Sequence
CALLIDPL_T (IDX)
C_MM_N/OUTPUT/SKIP(32,6),ID(32)
C_MMON/PLTDAT/ -seePLTDATMiscellaneous Tabledescription, section 2.5.
where:
IDX:i0ifaplotidwasnotgenerated
(1ifaplotidwasgenerated
/_UTPUT/-integer -output.
ID=usersupplied PL_TID, intheCaseControl Deck -BCD-input.
/PLTDAT/
XYMIN
XYMAX
AXYMAX
EDGE=Iplot region parameters -real-input.
=sizeofthepaper (x,y) used, lesstheborders, inplotter units -real
-input.
=sizeoftheborders (x,y) inplotter units -real-input.
number ofcounts perprinted character inthexandydirections respectively
real-input.CNTX,CNTY=
PLTYPE :plotter type-integer -input.
3.4-75 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.44.4 Method
IfthereisnoPL_TID(ID=blanks),IDXissettozeroandnoidentification isgenerated.
Otherwise, IDXissettooneandanidentification isgenerated. Thecurrent region parameters
aresaved (they will berestored attheendofthesubroutine)andaresettoinclude theentire
paper area. Theidentification generated varies, depending upontheplotter type.
Iftheplotterisamicrofilm plotter (IPLTYPEI =l),anentire frame isgenerated asidenti-
fication. Thetopandbotto_ oftheframe areaseriesofclosely spaced horizontal lines. The
PLgTID isthenprinted three times inthecenter oftheframe.
Iftheplotterisadrumortable plotter(IPLTYPEI fl),theidentification isprinted once
attheverybottom ofthepaperwithin thebottom border.
After theidentification isgenerated, thePLgTID issettoblanks. This insures thatthe
identification will begenerated prior tothefirst plotonly.
3.4.44.5DesignRequirements
Subroutines used: AXIS, PRINT.
3.4-75a (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.45
3.4.45.1
3.4.45.2INTGPX ISearch aListof19te_ers ).
Entry Points: INTGPX, INTGPT.
Purpose
GivenalistofNintegers, tofindtheindexofthelistitemequaltoITEM(primarily used
tosearch alistofexternal gridpointid&amp;rsquo;s).
3.4.45.3 Calling Sequence
CALLINTGPX(LIST,N)
K=INTGPT (ITEM)
where:
LIST=listofNintegers, inarbitrary order-input.
N:number ofentries inLIST-integer -input.
ITEM:integer forwhichamatchistobefoundinLIST-input.
3.4.45.4 Method
Search LISTusingalinearsearch untilamatchforITEMisfound. Thentheresult (INTGPT)
issetequaltotheindexofLISTwherethematchoccurs. Ifnomatchisfound, theresult is
set=O.
3.4.45.5 Design Requirements
INTGPXmustbecalledbefore INTGPT isused.AslongasLISTdoesnotchange location and
thevalueofNdoesnotchange, INTGPXneednotbecalledagain.
3.4-76 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.46INTLST (Interpret aListofIntegers).
3.4.46.1 Entry Point: INTLST.
3.4.46.2 Purpose
Tointerpret alistofintegers and/or pairs ofintegers separated bythewordT_orTHRU.
3.4.46.3 Calling Sequence
CALL INTLST(LIST,N,SIGN,NI,N2)
where:
LIST-thelisttobeinterpreted -integer -input.
N-index location ofthenextlistitem(s) tobeinterpreted -integer -input.
SIGN-sign(_l)oftheinterpreted integer orthefirst ofapairofintegers -
output.
Ni-absolute value uftheinterpreted integer orthefirst ofapairofintegers -
output.
N2 -absolute value ofthesecond irlteger ofpairofintegers (=Nlifnotapair) -
output.
3.4.46.4 Method
SIGN =+_lifLIST(N) ispositive ornegative.
Nl=absolute value ofLIST(N).
IfLIST(N+I) _T_orTHRU, thenN2=NlandNisincremented byI.
IfLIST(N+I) =TOorTHRU, thenN2=absolute value ofLIST(N+2) andNisincremented
by3.
3.4.46.5 Design Requirements
Initially, Nmust besettotheindex ofthefirst integer orinteger pairtobeinterpreted
inLIST. Ifthelistisconsecutive, Nneednotsubsequently bealtered until anewlististo
beinterpreted. Itisadvisable thatthevalue following thelastiteminLISTbeset=0to
avoid thechance thatitmayequal T_orTHRU.
3.4-77 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.47 LINE(DrawaLineonaPlotter).
3.4.47.1 EntryPoint: LINE.
3.4.47.2 Purpose
Todrawalineonaplotter.
3.4.47.3 Calling Sequence
CALLLINE(X1 ,YI,X2,Y2,PEN,_PT)
C{&lt;em&gt;MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
where:
XI,YI=starting pointoftheline-real-input.
X2,Y2=terminal pointoftheline-real-input.
PEN:pennumber orlinedensity tobeused-integer -input.
I&lt;/em&gt;!tOinitiate thelinemode&amp;quot;_PT = toterminate aseries ofplotcommands, integer -input.
todrawaline.
/PLTDAT/
M_DEL =plotter model number -integer -input.
PL_TER =plotter number (i)-integer -input.
REG =xandyvalues defining theregion inwhich thelineistobedrawn -real-
input.
NPENS =maximum number ofpensorlinedensity possible forplotter i-integer -input.
3.4.47.4 Method
Ifthelinetobedrawnisen%irely outside thespecified region, thesubroutine immediately
returns without drawing anything. Ifonlypartofthelineisoutside theregion, onlythat
portion ofthelinewithin theregionisdrawn. Theactual pennumberorlinedensity usedwill
bemodulo themaximum number ofpensorlinedensity asfollows:
PENX=2EN-NPENS* ((PEN-I)/NPENS)
ThenLINEiiscalled.
3.4-78 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.47.5 DesignRequirements
Generally, LINEshouldbecalledwith_PT=-lbeforeanylinesaredrawn,eventhoughitis
notnecessarytospecifically putallplottersinthelinemode(e.g.,plotter3).Oncethisis
done,itneednotberepeatedunlesstheplotterhasbeenputintosomeothermode(e.g.,the
typingmode).If_PT_O,allotherargumentsareignored.Subroutine used:LINEi.
3.4-78a(12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.48LINEi (Draw aLineonPlotter i).
3.4.48.1 Entry Point: LINEi.
3.4.48.2 Purpose
Todraw alineonplotter i.
3.4.48.3Calling Sequence
CALLLINEi(XI,YI,X2,Y2,PEN,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description section2.5.
where:
XI,Yl =starting point oftheline-real-input.
X2,Y2 =terminal point oftheline-real-input.
PEN =pennumber orlinedensity tobeused-integer -input.
(-Itoinitiate thelinemode.l
_PT =I+ltoterminate aseries ofplotcommands. -integer -input.
Cotodrawaline.
/PLTDAT/
M_DEL =plotter model number -integer -input.
PL_TER =plotter number -integer -input.
MAXLEN =maximum length ofalinesegment -real-input.
_RIGIN =xandyvalues ofthecurrent position ofthepen(applicable onlytoincre-
mental plotters) -real-input andoutput.
3.4.48.4 14ethod
If_FT_O,allother arguments areignored. If_PT=-landifapplicable forplotter i,a
flag issetsothatwhenLINEi issubsequently called with_PT=O,theplotter will beputinto
thelinemode before drawing therequested line. If_PT=+landifapplicable forplotter i,the
penisraised. Then, nomatter which plotter isbeing usedthecurrent sequence ofplotter
commands isterminated. If_PT=O,thelineisdrawn asaseries oflinesegments, each of
maximum length MAXLEN.
3.4-79 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.48.6 DesignRequirements
Subroutines used:WPLTi.
3.4-80 (12-I-69)&lt;/p&gt;
&lt;p&gt;3.4.49
3.4.49.1
3.4.49.2UTILITY SUBROUTINE DESCRIPTIONS
PRINT (Print aTitle onaPlotter).
Entry Point: PRINT.
Purpose
Totypeatitle onaplotter horizontally orvertically.
3.4.49.3 Calling Sequence
CALLPRINT (X,Y,XYD,CHR,N,(&lt;em&gt;PT)
C_MM{&lt;em&gt;N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
X,Y-starting orending point ofthetitle tobetyped (always left-to-right or
top-to-bottom) -real-input.
XYD&lt;/em&gt;&lt;/em&gt;+&lt;em&gt;l ifX=starting orending point ofthetitle -integer -input.
(+2ifYstarting orending point ofthetitle integer input.
CHR-title tobetyped (four characters/word -leftadjusted followed byblanks) -
BCD-input.
N-number ofwords inthetitle -integer -input.
I&lt;/em&gt;!tOinitiate thetyping mode&amp;quot;(_PT-toterminate aseries ofplotcommands. -integer -input.
totypeatitle.
/PLTDATI
CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input.
3.4.49.4 Method
If_PT_O,allother arguments areignored andTIPE iscalled. Otherwise, eachcharacter
inthetitle (CHR) isseparated andputintoanother array (C). This isdoneforeach 20words
ofthetitle (80characters), andTIPE isthencalled totypethese characters.
3.4.49.5 Design Requirements
Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be
3.4-81 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
called with_PT=-Ibefore anytyping isattempted, eventhough itisnotnecessary tospecifi-
callyputallplotters inthetyping mode(e.g., plotter 3).Oncethisisdone,itneednotbe
repeated unless theplotter hasbeenputintosomeothermode(e.g., thelinemode).
Subroutines used: TIPE.
3.4-82 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.50
3.4.50.I
3.4.50.2RDM_DX (Read aFileContaining XRCARD Translations).
Entry Points: RDM_DX, RDM_DY, RDM_DE, RDW_RD.
Purpose
Tc_readfromafileorstorage arecord containing thesubroutine XRCARD interpretation of
freefield datacards (e.g., thePCDBdatablock).
3.4.50.3 Calling Sequence
CALL RD_DX(FILE,14_DE_W_RD)
CALL RDr4_DY(A,M@DE,W_RD)
CALL RDM_DE($nI,$n2,$n3)
CALL RDW_RD
where:
FILE=G!N_file namewhich istoberead-integer -input.
M_DE=storage location intowhich theXRCARD mode value istoberead-integer -output.
W_RD =2locations intowhich XRCARD carditems aretoberead-integer -output.
A =array which istcbe&amp;quot;read&amp;quot; (instead ofFILE) -integer -input.
nl=theF_RTRAN statement number defining thereturn atwhich numeric dataare
interpreted (M_DE &amp;lt;0).
n2=theF_RTRAN statement number defining thereturn atwhich alphabetic dataare
interpreted (0&amp;lt;M_DE &amp;lt;l,O00,O00).
n3=theF_RTRAN statement nu_er defining thereturn when theendofalogical card
isencountered (M_DE &amp;gt;l,O00,O00).
3.4.50.4 Method
RDMODX andRDM_DY areinitialization calls forthefileandcoreoriented options respectively.
ForRDMQDE:
I.AnXRCARD mode value isread intoM_DE. IfM_DE =O,theendofaphysical card
hasbeenencountered, butnottheendofalogical card. Inthiscase, therecord ister-
minated (ifFILE isbeing read). Thenthefirst wordofthenextrecord orlocation isread
intoM_DE.
3.4-83 (l2-I-69)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P25</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_025/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
2.IfM_DE&amp;lt;O,thenextwordisreadintoW_RD(1). IfM_DE=-4,another wordis
readintoW_RD(2).
3.If0&amp;lt;M_DE&amp;lt;1,000,000, BCDinformation follows aspairsof4-character words. The
firsttwoofthesewords arereadintoNEXT(1) andNEXT(2). IfNEXT(1) isablankorNEXT(2)
isadelimiter, thevalueofM_DEisdecremented byone,andifMODEisstillgreater than
zero,thenexttwowords arereadintoNEXT(1) andNEXT(2). Thiscontinues untileither
M_DE:O,orNEXT(1) isnotablankandNEXT(2) isnotadelimiter. IfMODEdoesbecome
zero,step1isthenre-executed.
4.IfM_DE&amp;gt;1,000,000, theendofalogical cardhasbeenencountered. IfFILEis
beingread,thecurrent record isterminated.
ForRDW_RD:
I.ThetwowordsnowinNEXT(1) andNEXT(2) arestored inW_RD(1) andW_RD(2).
2.M_DEisdecremented byone. IfMODEisstillgerater thanzero,thenexttwo
wordsarereadintoNEXT(1) andNEXT(2). IfNEXT(1) isablank orNEXT(2) isadelimiter,
thisstepisrepeated untileither M_DE=O,orNEXT(1) isnotablankandNEXT(2) isnota
delimiter.
3.4.50.5 Design Requirements
RDM_DX orRDM_DY mustbecalled before RDM_DE andRDW_RD. AslongasFILEdoesnotchange
invalue, andM_DE,W_RD,andAdonotchange locations, RDM_DX andRDM_DY neednotbecalled
again. IfRDM_DX iscalled, FILEmustbeopened andproperly positioned bythecalling program.
Inaddition, RDM_DE andRDWORD cannot becalled whenFILEisclosed. Ifanend-of-file or-record
condition isencountered, afatalerroroccurs (seesubroutine FREAD).
3.4-84 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.51 SGIN_ (GIN_ forUnformatted Tapes).
3.4.51.I Entry Points: S_PEN, SWRITE, SEOF, SCL_SE.
3.4.51.2 Purpose
Towrite unformatted BCDandbinary tapes todrive NASTRAN plotters.
3.4.51.3 Calling Sequences
CALLS_PEN($n,PLTTP,BUFFER,LBUFF)
n &amp;ndash;FORTRAN statement number defining thereturn ifPLl-[P isnotavailable
forwriting.
PLTTP -GIN_filenameoftheplottape. This mayhavetwovalues: PLTI-BCDplot
tape; PLT2-binary plot tape-BCD-input.
BUFFER -Array inwhich theplotdatatransmitted during SWRITE calls arestored.
LBUFF -Length ofthebuffer array -integer -input.
CALL SWRITE(PLTTP,DATA,LDATA,I_PT)
PLTTP -GIN_filenameoftheplottape-BCD-input.
DATA -Array ofplotdata (lcharacter/word, right justified, leading zeros).
LDATA -Length oftheDATAarray inwords -integer -input.
O,potentially moredata tobetransmitted inthisrecord. )I_PT - iinteger -input. l,endofrecord with thisdatatransmission.
CALLSE_F(PLTTP)
PLTTP -GIN_file nameoftheplottapeonwhich aphysical E_Fwillbewritten.
CALL SCL_SE(PLTTP)
PLTTP -GIN_filenameoftheplottape.
3.4.51.4 Method
SGIN_ stores data inBUFFER until I_PT=lorBUFFER isfilled. Itthentransmits thedata
toaphysical tapewithout anycontrol words. Thedataaretransmitted toSGIN_ lcharacter (right
3.4-85 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
justified, leading zeros) perword. SGIN_packsthesecharacters intofullwords. SGIN_isin
F_RTRAN onallmachines. OntheIBM7094itinterfaces withGIN_;theUnivac i108version uses
NTRAN; theIBMS/360usesF_RTRAN I/9;andtheCDC6600useXI_RTNS. Seesection 5fordetails.
3.4.51.5 DesignRequirements
OnlyoneofPLTIorPLT2maybeopenatonetime.
SOPENmustbecalled beforeSWRITE, SE_F,orSCL_SE.
PLTIorPLT2mustbephysical tapesiftheyarewritten on.
3.4-86 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.52STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot).
3.4.52.1 Entry Point: STPL_T.
3.4.52.2 Purpose
Toinitiate anewplotorterminate thecurrent plot.
3.4.52.3 Calling Sequence
CALLSTPL_T(PLTNUM)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
C_MM_N/XXPARM/ -seeXXPARM Miscellaneous Table description, section 2.5.
where:
jifnonnegative, theplotnumberPLTNUM
ifnegative, terminate thecurrent plot
/PLTDAT/
M_DEL =
PL@TER =
REG =
XYMAX =
PLTYPE =
PLTAPE =
E(_F :
/XXPARM/
CAMERA =
BFRAMS =I-integer -input.
plotter model index -integer -input.
plotter number -integer -input.
plot region parameters -real-input.
size ofthepaper (x,y) used, lesstheborders, inplotter units -real-input.
plotter type-integer -input.
plottape-BCD-input.
0ifanend-of-file mark istobewritten ontheplot
tapeafter eachplot
-integer -input.
lifnoend-of-file mark istobewritten ontheplot
tapeafter eachplot
camera number (ifapplicable) tobeused-integer -input.
number ofblank frames between plots -integer -input.
3.4-87 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.52.4 Method
3.4.52.5
Subroutines usedinclude:A.IfPLTNUMisnonnegative:
I.Selectthespecifiedcameraorcreateasetuprecordappropriate totheplotter
(CALLSELCAM).
2.Skiptoanewframe(ifapplicable) andcreatetheowneridentification. Ifthe
owneridentification isgeneratedbysubroutine IDPL_T,re-execute steplandskiptoa
newframe.
3.Ifappropriate tothisplotter,insertthedesirednumberofblankframesonfilm
only.Ifthecameraspecifiediscamera2(paperonly),noblankframesareinserted.
4.Iftheplotnumberisnonzero,typethisnumberintheupperleftandrightcorners
ofthepicture.
B.IfPLTNUMisnegative:
i.TenJ_inatethe&amp;hellip;&amp;hellip;&amp;hellip;._^_reco_A _,_tape
2.Closethecurrentplottapefile(CALLSCL_SE).
3.Ifeachplotistobeseparatedbyanend-of-file mark(EOF=O),writeanend-of-
fileontheplottape(CALLSE@F).
DesignRequirements
IDPL_T,SELCAM,SKPFRM,TYPINT,SCL_SE,SE@F.
3.4-87a(12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.53 SYMB@L (TypeaSymbol onaPlotter I.
3.4.53.1 EntryPoint: SYMBOL.
3.4.53.2 Purpose
Totypeasymbol onaplotter.
3.4.53.3 Calling Sequence
CALLSYMB_L(X,Y,SYM,OPT)
C@MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
C_MM_N/SYMBLS/ -seeSYMBLS Miscellaneous Tabledescription, section 2.5.
where:
X,Y-pointatwhich thesymbol istobetyped-real-input.
SYM-twoconsecutive storage locations eachcontaining anindexintotheSYMBLS
table-integer -input.
I-!t°initiate thetyping m°de&amp;quot; 1OPT-+toterminate aseries ofplotcommands. -integer -input.
totypethesymbol.
/PLTDAT/
MODEL -plotter model number -integer -input.
PLOTER -plotter number (i)-integer -input.
/SYMBLS/
NSYM-number ofsymbols defined intheSYMBLS table-integer -input.
SYMBL(20,i) -character indices defining thesymbols ofplotter i-integer -input.
3.4.53.4 Method
IfOPT_O,allotherarguments areignored andTYPEi orDRWCHR iscalled. Otherwise, an
alternate symbol index(SYMX) iscalculated modulo NSYMforeachindexinSYMandisusedasthe
actual symbol index, asfollows:
3.4-88 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIOr!S
SYMX :SYMj-NSYM*((SYMj_I)/NSYM) ,j:l,2.
ThenTYPEi orDR_CHR iscalled foreachsymbol.
Thereason forSYMbeing twoindices istoenable theusertocreate anyadditional symbol
bycombining anytwoofthevalid symbols intheSYMBLS table. Note: anyoftheindices inSYM
may=O.Thiswould imply thatanews_n_bol isnotbeing created.
3.4.53.5 Design Requirements
Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMB@L) should be
called with _PT#-lbefore anytyping isattempted, eventhough itisnotnecessary toputall
plotters inthetyping mode (e.g., plotter 3).Once thisisdone, itneednotberepeated unless
theplotter hasbeenputintosomeother mode (e.g., thelinemode).
Subroutines used: TYPEi, DRWCHR.
3.4-89 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.54
3.4.54.1
3.4.54._TIPE (Type aLine ofCharacters onaPlotter).
Entry Point: TIPE.
Purpose
Totype aline ofcharacters onaplotter horizontally orvertically.
3.4.54.3 Calling Sequences
CALLTIPE(X,Y,XYD,CHR,N,(_PT)
COMMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
COMMON/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5.
where:
X,Y-starting orending pointofthelinetobetyped(always left-to-right ortop-to-
bottom) -real-input.
I++__&lt;em&gt;12if X=starting orending pointoftheline.1XYD- -integer- input.
ifYstarting orending pointoftheline.
CHR-lineofcharacters tobetyped (onecharacter/word -leftadjusted followed by
blanks) -BCD-iF.put.
N number ofcharacters tobetyped-integer -input.
I&lt;/em&gt;!toinitiate typing mode. &amp;ldquo;IOPT-toterminate aseries ofplotcommands. -integer -input.
totypealineofcharacters.
/PLTDAT/
MODEL -plotter model number- integer -input.
PLOTER -plotter number (i)-integer -input.
CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input.
/CHAR94/
CHAR -Section IoftheCHAR94 table-BCD-input.
3.4-90 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.54.4 Method
If_PTIO,allother argunmnts areignored andTYPEi orDRWCHR iscalled. Otherwise, for
eachcharacter tobetyped, anindex intotheCHARcharacter setisfound. This isdone80
characters atatim_. Ifacharacter cannot belocated, itistreated asablank. Foreachset
of80character indices setup,TYPEi orDRWCHR iscalled.
3.4.54.5 Design Requirenmnts
Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be
called with_PT#-lbefore anytyping isattempted, eventhough itisnotnecessary toputall
plotters inthetyping mode (e.g., plotter 3).Oncethis isdone, itneednotberepeated unless
theplotter hasbeenputintosome other mode(e.g., thelinemode).
Subroutines used: TYPEi, DRWCHR.
3.4-91 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.55
3.4.55.1
3.4.55.2TYPEi IType aLineofCharacters onPlotter i).
Entry Point: TYPEi.
Purpose
Totypealineofcharacters onplotter ihoriziontally orvertically.
3.4.55.3 Calling Sequence
CALLTYPEi (X,Y,XYD,CHR,N,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
C_MM_N/CHARg4/ -seeCHAR94 Miscellaneous Table description, section 2.5.
where:
X,Y=starting orending point ofthelinetobetyped (always right-to-left ortop-to
bottom) -real-input.
i+__12ifx:starting orending pointoftheline.1XYD= -integer -input.
ifystarting orending pointoftheline.
CHR=indices ofthelineofcharacters tobetyped(seedescription forTIPE:section
3.4.54) -integer- input.
N=numberofcharacters tobetyped-integer -input.
ltoinitiate thetyping mode.
_PT:_1toterminate aseries ofplotconT_ands -integer -input.
0totypealineofcharacters.
/PLTDAT/
X_MIN =minimum xandyvalues oftheregion inwhich thelineistobetyped -real
input.
XYMAX :maximum xandyvalues oftheregion inwhich thelineistobetyped -real-
input.
CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input.
3.4-92 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
/CHAR94/
CHRC_D =Section If,III,orIVoftheCHAR94 table -integer -input.
3.4.55.4 Method
If_PT#O,allother arguments areignored. If_PT=-landifapplicable forplotter i,a
FlagissetsothatwhenTYPEi issubsequently called with _PT=O,theplotter willbeputinto
thetyping modebefore typing thefirst character. If_PT=+l,thecurrent sequence ofplotter
commands isterminated.
Define:
LSTCHR =lastlegitmate character index forplotter i.
NCHR =nu_er ofcharacter indices which must bechanged forplotter i.
CHAR =NCHRpairs ofcharacter indices. Thefirst index ofeach pairistheindex
which mustbechanged, andthesecond index isthereplacement index.
IfN&amp;lt;O,itisassumed thatonecharacter istobetyped.
Each character index inCHRischecked against LSTCHR.
ablank isinserted atthecorresponding point ontheplot.
need befrom CHARandthecharacter istyped.
Nocharacters will betyped outside theregion asdefined byXYMIN andXYMAX.Iftheindex isgreater thanLSTCHR,
Otherwise, indices arealtered if
3.4.55.5 Design Requirements
Subroutines used: WPLTi.
3.4-93 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.56TYPFLT (Type aFloating Point Number onaPlotter).
3.4.56.1 Entry Point: TYPFLT.
3.4.56.2 Purpose
Totypeafloating point number onaplotter, horizontally orvertically.
3.4.56.3 Calling Sequence
CALLTYPFLT (X,Y,XYD,V,FIELD,OPT)
COMM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
X,Y
XYD
V
FIELD
_PT
/PLTDAT/
MODEL-point atwhich thenumber istobetyped (always left-to-right ortop-to-bottom)
-real-input.
+lifX=starting orending point ofthetyped number. I_integer input.
+_2ifYstarting orending point ofthetyped number.
-number tobetyped -real-input.
-field width ofthetyped number. IfFIELD &amp;gt;O,thenumber will becentered at
(X,Y). IfFIELD &amp;lt;O,thenumber willbetyped starting orending at(X,Y). If
IXYDI =lor2,thenumber will betyped horizontally or_ertically
respectively- integer- input.
I+!t°initiate thetyping m°cle&amp;rsquo; 1-toterminate aseries ofplotcommands. -integer -input.
totypethenumber.
3.4.56.4-plotter model number -integer -input.
PLOTER -plotter number (i)-integer -input.
CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input.
Method
IfOPT_O,allother arguments areignored andTYPEi orDRWCHR iscalled. Otherwise, the
3.4-94 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
number ofsignificant digits (NSIG) tobetyped isdetermined.
IfV_0, thetyped nun_er willbeunsigned. IfFIELD &amp;gt;4,thenumber ofsignificant digits
typed willbeatleast =FIELD -4.IfFIELD _4,NSIG=FIELD -I.
IfV&amp;lt;O,thetyped nu_er willbesigned. IfFIELD &amp;gt;5,thenun_Der ofsignificant digits
typed will beatleast FIELD -5.IfFIELD _5,NSIG=FIELD -2.
Thenumber (V)ismultiplied bysomepower oftensuch thattheproduct isbetween lO7and
lO8.Itcanthenbeexpressed asan8-significant digit integer. Ifthenumber issuchthatNSIG
digits cannot betyped without anexponent, astandard formisused: -X.XXXX &amp;hellip;_XX. Otherwise
thedecimal point isadjusted andtheexponent willnotbeprinted.
3.4.56.5 Design Requirements
Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be
called with _PT=-lbefore anytyping isattempted, even though itisnotnecessary toputallthe
plotters inthetyping mode (e.g., plotter _I._Oncethisisdone, itneednotberepeated unless
theplotter hasbeen putintosomeother mode (e.g., thelinemode).
Subroutines used: TYPEi, DRWCHR.
3.4.56.6 Diagnostic Messages
IfNSIG significant digits cannot possibly betyped inthefield width (FIELD) specified,
theentire field will befilled withasterisks (**&amp;hellip;*).
3.4-95 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.57
3.4.57.1
3.4.57.2TYPINT (Txpe anInteger Number onaPlotter_.
Entry Point: TYPINT.
Purpose
Totypeaninteger number onaplotter, horizontally orvertically.
3.4.57.3 Calling Sequence
CALLTYPINT (X,Y,XYD,NUM,FIELD,OPT)
C@MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
X,Y
XYD
NUM
FIELD
&lt;em&gt;PT-point atwhich thenumber istobetyped (always left-to-right ortop-to-bottom)
-real-input.
(+lifX=starting orending point ofthetyped number.)
&amp;ldquo;i&lt;/em&gt;-2 i-integer -input. ifYstarting orending point ofthetyped number.
-number tobetyped -integer -input.
+lifthetyped number istobecentered at(X,Y). IfIXYDI =lor2,thenumber
will betyped horizontally orvertically, respectively.
-lorO,thenumber willbetyped starting orending at(X,Y). IfFIELD =-l,
FIELD will besettothenumber ofdigits typed bythesubroutine; inthis
case, FIELD must beasymbol inthecallstatement. -integer -input and
output.
{+!toinitiate thetyping mode. 1-toterminate aseries ofplotcommands. -integer -input.
totypethenumber.
/PLTDAT/
MQDEL -plotter model number -integer -input.
PLQTER -plotter number (i)-integer -input.
CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input.
3.4-96 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.57.4 I_ethod
If_PT_O,allotherarguments areignored andTYPEi orDRWCHR iscalled. Otherwise, each
digit ofthenumber isseparated andusedascharacter indices fortheTYPEi orDRWCHR subroutines.
Inaddition, ifFIELD &amp;lt;O,FIELD isset=thenumber ofdigits printed.
3.4.57.5 Design Requirements
Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMB@L) should be
called withOPT=-lbefore anytyping isattempted, eventhough itisnotnecessary to
specifically putallplotters inthetyping mode (e.g., plotter 3).Oncethisisdone, itneed
notberepeated unless theplotter hasbeen putintosomeother mode (e.g., thelinemode).
Subroutines used: TYPEi, DRWCHR.
3.4-97 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.58 WPLTI (Write aPlotter Command forPlotter I).
3.4.58.1 Entry Point: WPLTI.
3.4.58.2 Purpose
Towrite aplotter command forplotter I.
3.4.58.3 Calling Sequence
CALLWPLTI (A,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
C_MMON/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5.
where:
A(1)-x-coordinate (integer).
A(2)-y-coordinate (integer).
A(3)-annotation character index(a).
A(4)-control character index(ci).
A(5)-control character index(c2).
A(6)-control character index(c3).
O,ifAisaplotcommand_PT- (
I,ifaseries ofplotcommands istobeterminated
/PLTDAT/integer -input.
EDGE-size ofthexandyborders ofthepaper-real-input.
PL_T-GINOfilenameoftheplottapetobewritten -BCD-input.
/CHAR94/
CHAR(60,3) -sections II,III,andIVoftheCHAR94 character table-integer -input.
3.4.58.4 Method
Ifcomputer 1(IBM7094)isthecomputer beingused, section IIoftheCHAR94 tableisused
asthecharacters written ontheplottape;ifcomputer 4(CDC6600) section IVisused; ifany
3.4-98 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
other computer, section IIIisused.
Thelower leftcorner ofthepaper isassumed tobeat(0,0). Taking intoaccount thexand
yborders, thetruexandycoordinates arecalculated. These coordinates arethenseparated into
fourinteger digits. Theplotcommand isthensetupandwritten asfollows:
rbx4x3x2XlbbY4Y3Y2YlbClC2bbc3babbbbb
preceeded by35blanks. Theresulting plotcommand is60characters long.
r=record mark (character 49intheCHAR94 table)
b=blank (character 48intheCHAR94 table)
xi=x-coordinate digit
Yi=y-coordinate digit
ci=control character
a=annotation character.
3.4.58.5 Design Requirements
Subroutine used: SWRITE.
3.4-99 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.59 WPLT2 (Write aPlotter Command forPlotters 2and8)
3.4.59.1 Entry Point: WPLT2.
3.4.59.2 Purpose
Towrite aplot command forplotters 2and8.
3.4.59.3 Calling Sequence
CALLWPLT2 (A,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
C_MM_N/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5.
where:
A(1)=x-coordinate (integer).
A(2)=y-coordinate (integer).
A(3)=annotation character index (a).
A(4)=control character index(ci).
A(5)=control character index(c2).
A(6)=control character index (c3).
0,ifA=plotcommand 1_PT= -integer -input.
I,ifaseries ofplotcommands istobeterminated
/PLTDAT/
AXYMAX -sizeofthepaper (inplotter units) beingused, lesstheborder -real-input.
PL_T -GINOfilenameoftheplottapetobewritten -BCD-input.
/CHAR94/
CHAR(60,3) -sections II,IIIandIVoftheCHAR94 table-integer -input.
3.4.59.4 Method
Ifcomputer 1(IBM7094)isthecomputer beingused, section IIoftheCHAR94 tableisused
forthecharacters written ontheplottape;ifcomputer 4(CDC6600), section IVisused;ifany
3.4-I00 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
other computer, section IIIisused.
Assuming thetrue physical origin oftheplotter tobeatthecenter ofthepaper, thetrue
xandycoordinates arecalculated. These coordinates arethenseparated intofourinteger digits.
Aplotcommand isthen setupandwritten asfollows:
XSxX4X3X2XlYSyY4Y3Y2Ylbbbbbbbbclc2ac 3
preceeded by96blanks.
X
Y
sx
Sy
xi
Yi
b
ci
aTheresulting plotcommand is120characters long.
=character X(character 34intheCHAR94 table)
=character Y(character 35intheCHAR94 table)
=+or-character depending uponthesignofthex-coordinate.
=+or-character depending uponthesignofthey-coordinate.
=x-coordinate digit.
=y-coordinate digit.
=blank (character 48intheCH.AR94 table).
=control character.
=annotation character.
3.4.59.5 Design Requirements
Subroutine used: SWRITE.
3.4-101 (12-1-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.60 WPLT3 IWrite aPlotter Command forPlotter 3).
3.4.60.1 EntryPoint: WPLT3.
3.4.60.2 Purpose
Towriteaplotcommand forplotter 3.
3.4.60.3 Calling Sequence
CALLWPLT3 (A,_PT)
C@MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
where:
A(1)andA(2)=36bitplotcommand setupbyAXIS3, LINE3, orTYPE3, as218-bit words
(right justified, leading zeros) -input.
0,ifA=plotcommand 1_PT= -integer -input.
I,ifaseries ofplotcommands istobeterminated
/PLTDAT/
PL_T -GINOfilenameoftheplottapetobewritten -BCD-input.
MAXCHR -plottapebuffer size(number ofcharacters) -integer -input.
3.4.60.4 Method
Eachplotter command is36bitslong(6six-bit characters). Sixofthe36bitsinA(1)and
A(2)arewritten ontheplottapeuntilall36bitshavebeenwritten. Inaddition, thenumber
ofsix-bit characters written inarecord iscalculated. WhenWPLT3 iscalled withOPT=I,a
checkismadetodetermine ifthenumber of6bitcharacters written inthecurrent record is
aninteger multiple ofthenumber ofcharacters perwordonthecomputer. Ifsuchisnotthecase,
anadditional 36bitcommand iswritten asmanytimesasnecessary untilthiscondition does
existbefore terminating theplottaperecord. Thecommand usedwilldonothing toaffect the
generated plot.
3.4.60.5 Design Requirements
Subroutine used: SWRITE.
3.4-I02 (12-I-69)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P26</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_026/</guid>
      <description>
        
        
        &lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.61 GIN_IO (GINO Input/Output Routine).
3.4.61.I Entry Point: GIN_IO.
3.4.61.2 Purpose
GINOIO executes thephysical input/output operations forsubroutine GINO.
3.4.61.3 Calling Sequence
CALLGINOI_($n,OPC_DE,BUFF)
C_MM_N/GIN0X/LGIN_,FILEX,E_R_P,ENTRY,LSTNAM,N_NAME_NTAPE,XYZ(2),UNITAB(75),BUFADD(75),
NBUFF3,ERR_R,NOSECT.
n-F_RTRAN statement numberdefining return intheeventofanI/&lt;em&gt;error.
l,Rewind
2,Writeoneblock
OPC_DE -3,Readoneblock input -integer.
4,Backspace oneblock
5,Forward space oneblock
BUFF -Address oftheblock tobereadorwritten.
FILEX -Unitnumber offile-integer -input.
NBUFF3 -Length ofblock tobereadorwritten -integer -input.
7,Abnormal completion ofI/0operationERROR -8,Physical end-of-file encountered integer -output.
9,Datatransmission error
NOSECT -Number ofsectors perblock onFASTRAND drum (Univac If08only) -integer -input.
3.4.61.4 Method
Themachine cell in/SYSTEM/istested. FortheIBM7094orIBMS/360 computers, FORTRAN REWIND,
WRITE, READ andBACKSPACE operations areused. FortheUnivac ll08, theNTRAN routine isused.
3.4.61.5 Design Requirements
GINOI&lt;/em&gt; isdesigned asanintegral partoftheGIN_collection ofroutines andistobe
called only byGINO.
3.4-I03&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Sinceallinput/output operations byGINOaremadebyGINOI_, acharlge tointerface witha
newordifferent operating system caneasily bemadebymodifying GiNOIO.
3.4-I04&lt;/p&gt;
&lt;p&gt;3.4.62
3.4.62.1
3.4.62.2UTILITY SUBROUTINE DESCRIPTIONS
EJECT(Automatic PageEject)
EntryPoint: EJECT
Purpose
Automatic linecounting forprinted output andnewpageinitiation whenpagesarefilled.
3.4.62.3 Calling Sequence
K=EJECT(LINES)
C_P_40N /SYSTEM/ -seeSYSTEM tabledescription, section 2.4.1.8.
where:
LINES-Number oflinestobeprinted.
/SYSTEM/
_AXL!N -Maximum number oflinespermitted perpage.
LINCNT -Number oflinesthusfarprinted onthispage.
3.4.62.4 Method
Ifthenumber oflinesalready printed onthispage(LINCNT) addedtothenumber oflines
abouttobeprinted (LINES) would begreater thanthenumber oflinespermitted perpage
(MAXLINI, anewpageisstarted (CALLPAGE1), thecurrent linecounter issettothenumber
oflinestobeprinted (LINCNT =LINES), andtheresult ofthisfunction issetto1(EJECT =I).
Ifthenumber oflinesabouttobeprinted (LINES) willfitonthispage(LINCNT +LINES&amp;lt;
MAXLIN), theresult ofthisfunction issetto0(EJECT :0).
3.4.62.5 Design Requirements
Ifitisdesired toforceanewpagetobestarted, simply setLINCNT =MAXLIN before
calling thisfunction.
3.4-I05&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.63 PLAMAT (Material Property Utillty forTwo-Dimensional Elements inPiecewise Linear
Analysis).
3.4.63.1 EntryPoint: PLAMAT.
3.4.63.2 Purpose
Toperform thefollowing matrix operation:
[C] =[A]T[B][A] ,
where [A]isequalto[U](seethesubroutine descriptior_ forPREMAT andMAT,section 3.4.36.3,
foradefinition of[U]withINFLAG =2),and[B]isequaltoapreviously calculated material
properties matrix which isincommon block/PLAGP/. Theresult [C],whichissymmetric, isstored
incommon block/MATOUT/.
3.4.63.3 Calling Sequence
CALLPLAMAT
COMMON/PLAGP/GP(9),MIDGP,ELID
COMM_N/MATIN/MATID,INFLAG,ELTEMP,PLAARG,SINTH,C_STH
C_MMON/MATOUT/GII,GI2,GI3,G22,G23,G33,DUMMY(14)
where:
/PLAGP/
GP(9)
MIDGP
ELID
/MATIN/
MATID
INFLAG1=3x3material properties matrix calculated inaPLAelement driver -real-input.
=thematerial identification number associated withGP-integer -input.
=theelement identification number associated withGP-integer -input.
=theincoming material identification number -integer -input.
notused byPLAMAT.
3.4-106 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
SINTH
C@STH
/HAT@UT/
Sameas/MAT(_UT/with INFLAG =2asdescribed insection 3.4.36.3
sixcells areused.=Sineofthematerial property orientation angle -real-input.
=Cosine ofthematerial property orientation angle -real-input.
except onlythefirst
3.4.63.4 Method
Thisroutine checks toseeiftheincoming material identification number (HATID) isequal to
thematerial identification number (MIDGP) which wasusedtocalculate thematerial properties
matrix stored in/PLAGP/.Iftheyarenotequal, thisroutine calls HATwith INFLAG =2and
returns tothecalling program. Thiswill onlyhappen incombination elements (TRIAl, TRIA2,
QUADI, QUAD2) where there isadifferent material identification number usedforthemembrane and
plate properties. Iftheyareequal, thenthematrix operation described above isperformed.
3.4-I07 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.64 WPLT4 (Write aPlotter Command forPlotters 4Through 7).
3.4.64.1 EntryPoint: WPLT4.
3.4.64.2 Purpose
Towriteplotcommands forplotters 4through 7.
3.4.64.3 Calling Sequence
CALLWPLT4 (A,&lt;em&gt;PT)
C_MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
where:
A(1):
A(Z-N):&lt;br&gt;
command type(0=control, 2=line,4=position) #&lt;/em&gt;
additional datausedtogenerate theplotcommands (contents and
length, N,varywithcommand type)
_PT=IO&amp;rsquo;ifaplotcommand istobegenerated
(I,ifthecurrent command buffer istobeterminated )
/PLTDAT/
PLTMDL =plotter modelnumber -integer -input.
PLOTER =plotter number -integer -input.
PL_T =GINOfilenameoftheplottapetobewritten -BCD-input.
3.4.64.4 _4ethodinteger,
input.
integer, input.
Theresulting plotcommand varies inlength, depending bothonthecommand typeandtheamount
ofnecessary drummovement. IfA(1)=0(control command), A(2)=number ofcontrol characters
intheresulting command (onecharacter expressed asarightadjusted integer ineachwordofthe
Aarray, starting inA(3)).
IfA(1)=2or4(lineorpositioning command), theresulting plotcommand willbeginwiththe
characters necessary tolowerorraisethepen,respectively, unless thepenisalready downorup,
respectively. A(2)andA(3)contain thenumber ofXandYhalfsteps necessary todrawtheline
3.4-I08(7/I/70)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
(with thependown orup),while A(4)andA(5)contain pointers totwocharacter strings needed to
drawtheentire lineexcept forthefinal halfstep. A(6) andA(7)contain thepointers needed to
drawthelasthalfstepofthelineonly. Thepointers inA(4-7)willcause drummovements as
follows:
l=+Y 9=+Y/2 17=+X/2, +Y
2=+X,+Y lO=+X/2, +Y/2 18=-X,+Y/2
3=+X II=+X/2 19=+X,-Y/2
4=+X,-Y 12=+X/2, -Y/2 20=+X/2, -Y
5=-Y 13=-Y/2 21=-X/2, -Y
6=-X,-Y 14=-X/2, -Y/2 22=-X,-Y/2
7=-X 15=-X/2 23=-X,+Y/2
8=-X,+Y 16=-X/2, +Y/2 24=-X/2o +Y
Thenumber ofcharacters inastring isafunction oftheinternal plotter model number, PLTMDL.
IfPLT,_IDL =I,eachstring isthree characters; iFPL_4DL _2or4,each string istwocharacters;
andifPLTMDL =3or5,eachstring isonlyonecharacter.
Asrequired, thissubroutine will automatically initiate each plottaperecord with the
necessary &amp;ldquo;conditioning, synchronizing, andstart plot&amp;rdquo; characters, andterminate eachplottape
record with tilenecessary &amp;ldquo;stop plot&amp;rdquo; characters.
3.4.64.5 Design Requirements
Theonly incremental drummovements available fortheCALCOMP drum plotter indicated as
PLTMDL =larethefirst eight (8)aslisted above. Therefore, whenA(1)=2or4,thevalues in
A(4-7)must belessthannine (g).
Subroutine used: SWRITE.
3.4-I09 (711170)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.65 WPLT9 IWrite aPlotter Command forPlotter 9).
3.4.65.1 EntryPoint: WPLTg.
3.4.65.2 Purpose
Towriteaplotcommand forplotter 9.
3.4.65.3 Calling Sequence
CALLWPLT9 (A,OPT)
C_MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5.
OPTwhere:
A
/PLTDAT/=lO-character plotcommand (Icharacter perword,rightjustified, leading
integer -input.zeros) -integer- input.
=_0ifA=plotcommand
ifaseries ofplotcommands istobeterminated
PL_T=GIN_filenameoftheplottapetobewritten -BCD-input.
3.4.65.4 Method
If_PT=O,theI0characters arewritten ontheplottapewithout anychanges.
twocharacters areappended tothecurrent record:
628(EXITcode)and618(NOPcode).
3.4.65.5 Design RequirementsIf@PT=I,
Subroutine used: SWRITE.
3.4-110 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.66 WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose Plotter).
3.4.66.1 Entry Point: WPLTIO.
3.4.66.2 Purpose
Towrite theplotter comands fortheNASTRAN general purpose plotter.
3.4.66.3 Calling Sequence
CALL WPLTIO (A,_PT)
C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
A(1)=pletmodeindex
A(2) =control index
_uj=X1^=_vv,_lna_e
-integer -input.
A(4)=Yl=y-coordinate
A(5) =x2=x-coordinate
A(6) =Y2=y-coordinate
{iifA=pl°tc°mmand _integer input.OPT = - -
ifaseries ofplotcommands istobeterminated
/PLTDAT/
EDGE =sizeoftheborders (x,y) inplotter units -real-input.
PL_T =GIN_filenameoftheplottapetobewritten -BCD-input.
MAXCHR =plottapebuffer size (number ofcharacters) -integer -input.
3.4.66.4 Method
Each plotcommand written iscomposed of30six-bit unsigned integers. Theplotmode index,
%(I), andthecontrol index, A(2), arethefirst twointegers. Thenext20integers represent
thevalues inA(3-6). Eachvalue isrepresented byfive6-bit integers, each integer being a
decimal digit ofthedecimal representation ofthevalue asfollows:
3.4-111 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
d4d3d2dld 0
where theoriginal integer valueisgivenby
do.lO0+dl.lOl +d2.102 +d3.103+d4.104
Thisrepresentation isusedsoastomakeiteasytorecover theoriginal integer values onany
binary computer. Thelast8characters arealways zeros.
Theendresult isaplotcommand ofthefollowing format:
MCP4P3P2PIPoQ4Q3Q2QIQoR4R3R2RIRoS4S3S2SlSo00000000
where:
M
C
Pi=plotmodeindex
=control index
=decimal digitoftheIstinteger value
Qi=decimal digit ofthe2ndinteger value
Ri=decimal digit ofthe3rdinteger value
Si=decimal digit ofthe4thinteger value
0=zero
WhenWPLTIO iscalled with_PT=I,thecurrent plottaperecord isfilled withasmanydummy
plotcommands asisnecessary togenerate afixedlength record. Thedummy plotcommand ismade
of30zeros. ThisisdonesothattheplottapecanbereadinF_RTRAN without having toworry
aboutvariable length records aslongastheplottapebuffer size(MAXCHR) isaninteger multiple
ofthenumber ofcharacters perwordonthecomputer onwhich theplottapeisbeingread(see
section 6.10.6 forfurther details).
3.4.66.5 Design Requirements
Subroutine used: SWRITE.
3.4-112 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.67
3.4.67.1
3.4.67.2PLTSET (PlottinB Parameter Initialization).
Entry Point: PLTSET.
Purpose
Given theinternal plotter andmodel numbers, toinitialize the/XXPARM/and/PLTDAT/tables
asneeded bytheNASTRAN plotter software package.
3.4.67.3 Calling Sequence
CALLPLTSET
C@MMON/XXPARM/ -seeXXPARM Miscellaneous Table description, section 2.5.
C_4MON/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
where:
/XXPARM/
PBUFSZ =plottapebuffer size (number ofwords) -integer -output.
PAPSIZ =sizeofthepaper tobeused(inches) -real-input.
/PLTDAT/
M_DEL =internal plotter model number -integer -input.
PL_TER =internal plotter number -integer -input.
REG =plotting region parameters -real-output.
AXYMAX =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-output.
XYEDGE =sizeoftheborders (x,y) inplotter units -real-output.
XYMAX =maximum useable xandycoordinate values ontheplotter -real-output.
CNTSIN =number ofplotter counts perinchofpaper -real-output.
CNTCHR =number ofplotter counts percharacter inthexandydirections -real-output.
PLTYPE =plotter type-integer -output.
PBFSIZ =plottape buffer size (number ofcharacters) -integer -output.
3.4-113 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.67.4 Method
Usingtheinternal plotter (PL_TER) andmodel (M_DEL) numbers, theinitialization needed to
properly usetheNASTRAN plotting software isperformed asfollows:
I.Section 2of/PLTDAT/, ofwhichXYI_X, CNTSIN, CNTCHR, PLTYPE andPBFSIZ areapart,is
settoaduplicate ofsection PLOTER+2.
2.PBUFSZ of/XXPARM/ isthensettoPBFSlZ/CHRWRD whereCHRWRD =number ofcharacters per
wordonthesubject computer.
3.AXYMAX andXYEDGE arecalculated basedupontheplotter typeand/or papersize. Ifthe
plotter isatableplotter (PLTYPE =+2or-2),theborders aresetupasI/2inchborders.
Iftheplotter isnotatableplotter andhasnotyping capability (PLTYPE =-Ior-3),
theborders aresetupashalfthehorizontal andvertical character sizes (CNTCHR/2).
Otherwise, theborders aresettozero.
4.Theplotting region isthensetto(O,O,AXYMAX(1),AXYFt_X(2)). Thisregion canbesub-
sequently altered bythemodule writer.
3.4-114 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.68 DRWCHR (ToDrawaLineofCharacters).
3.4.68.1 Entry Point: DRWCHR.
3.4.68.2 Purpose
Todrawalineofcharacters onaplotter, horizontally orvertically.
3.4.68.3 Calling Sequence
CALL DRWCHR (X,Y,XYD,CHR,NN,(_PT)
C(_I(_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5.
C(_MM(_N/CHRDRW/ -seeCHRDRW Miscellaneous Table description, section 2.5.
where:
X,Y=starting orending coordinate ofthelineofcharacters tobedrawn (always left-to-
right ortop-to-bottom) -real-input.
(+&lt;em&gt;lifX=starting orending point oftheline&lt;/em&gt;
XYD=I+2 I-integer- input._ifYstarting orending point oftheline
CHR=indices ofthelineofcharacters tobedrawn (seesubroutine TiPE) -integer -
input.
NN=nu_er ofthecharacters tobedrawn -integer -input.
-!toinitiate thelinemode.(_PT=+toterminate aseries ofplotcommands. -integer -input.
todrawalineofcharacters.
/PLTDAT/
REG =plotregion parameters -real-input.
XYI.V_X =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-input.
E[&amp;lsquo;GE =sizeoftheborder (x,y) inplotter units -real-input.
CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input.
/CHRDRW/
LSTIND =index ofthelastcharacter which canbedrawn -integer -input.
3.4-I15 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
CHRIND=indices intoXYCHRusedtolocatethedataneeded todrawcharacters -integer
-input.
XYCHR:lineswhichmustbedrawntoproduce alphanumeric characters -integer -input.
3.4.68.4 Method
If_PT=O,allotherarguments areignored andLINEiscalled. Otherwise, thecharacters
aredrawn. Thewidthandheight ofeachcharacter position areassumed tobeinteger multiples
of8and16,respectively. Thesizeofthedrawncharacter willbethisinteger multiple of6.
Theremaining spaceineachcharacter position isusedasthehorizontal andvertical spacing.
Nocharacter willbedrawnoutside theregionspecified inREG.
3.4.68.5 DesignRequirements
Subroutine used: LINE.
3.4-I16 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.69FNDPLT (Determine theInternal Plotter andModel Indices).
3.4.69.1 Entry Point: FNDPLT.
3.4.69.2 Purpose
Given theexternal name andmodel ofaplotter, todetermine thecorresponding internal
plotter andmodel numbers usedbytheNASTRAN plotting software package.
3.4.69.3 Calling Sequence
CALLFNDPLT (PL@TER,M_DEL,PLTNAM,PM@DEL)
where:
PL_TER =internal plotter number -integer -output.
M_DEL =internal model number -integer -output.
PLTN/_,I(2) =external plotter name-BCD-input.
PM_DEL(2) =external model name-integer orBCD-input andoutput.
3.4.69.4 Method
PLTNAM andPM_DEL arecompared withaninternal table ofplotter names andmodels. Whena
match isfound, PL_TER andM_DEL aresettothecorresponding internal plotter andmodel numbers.
Ifamatch isfound onlyfortheplotter name (PLTNAM), themodel nameforthefirst model appro-
priate tothematched model namewillbeusedtodetermine PL_TER andM_DEL, andthemodel name
usedwill bestored inPM_DEL. Ifnomatch isfound, PL_TER andM_DEL willbesettozero. See
section 3.1forfurther details.
3.4-I17(12-I-69)&lt;/p&gt;
&lt;p&gt;3.4.70 PHDMIA (DMIpunchroutine)
3.4.70.1 EntryPoints:
3.4.70.2 PurposeSUBROUTINE DESCRIPTIONS
PHDMIA, PHDMIB, PHDMIC, PHDMID
Writes DMIbulkdatacardimages onaF_RTRAN unitforsmallrealmatrices.
3.4.70.3 Calling Sequence
CALLPHDMIA -Initializes matrix
CALLPHDMIB Initializes eachnon-null column
CALLPHDMIC Collect eachnon-zero termofcolumn
CALLPHDMID Wrapupcolumn
C_MMON /PHDMIX /N(2),C,IFO,TIN,TOUT,IR,IC,N_,KPP,NLP,ERN_,IC_L,IRO,XX
Communication areaasfollows:
N-Alphanumeric nameofmatrix, 2A4.
C-Alphanumeric string forcontinuation chaining, A3.
IF_-1forasquare, non-symmetric matrix;
2forarectangular matrix;
6forasymmetric matrix.
TIN-1(input toIFPwillbesingle precision).
T_UT -1ifIFPistogenerate single-precision terms.
2ifIFPistogenerate double-precision terms.
IR-
IC-
N_-Number ofrowsinmatrix, Integer &amp;gt;O.
Number ofcolumns inmatrix, Integer &amp;gt;O.
F_RTRAN printer output unitnumber (ifN__O,noprinting willbedone;
ifN_&amp;gt;O,thecardimages willbelisted onFORTRAN unitNOaswellas
&amp;ldquo;punched&amp;rdquo;).
I,single-field DMIcardimages willbegenerated;
2,double-field DMIcardimages willbegenerated.
Number ofdatalinesperpage.
O,noerrors weredetected;
I,morethan9999cardimages forasingle matrix wererequested.
Current column number.
Current rownumber.
Current valueofmatrix termasasingle-precision floating pointnumber.KPP
NLP
ERNO
(output)
IC@L
IR_
XX
3.4-118 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.70.4 Method
Tousethisroutine,carryoutthestepsbelowafterloadingthecommonblock.
I.Foreachmatrix,CALLPHDMIA.Alldataitemsin/PHDMIX/ mustbeloaded except
ERN_(output), IC_L,IR_andXX.
2.Foreachnon-null column, dothefollowing:
a.LoadIC_L,IR_andXXwithdatacorresponding tothefirst non-zero term
inthecolumn.
b.CALLPHDMIB
c.Foranyother non-zero termsinthecolumn, loadIR_andXXand
d.CALLPHDMIC
e.Afterallnon-zero termshavebeenprocessed, CALLPHDMID towrapupthe
column.
Matrices willbepunched onsingle-field DMIcardsusingaF8.1format fortheelement
values ifKPP=I;double-field cardswi!!bepunched usinga!PE!6.8 fieldifKPP=2.
3.4.70.5 Design Requirements
APUNCHfileisassumed toexistonFBRTRAN unit7.
3.4.70.6 Diagnostic Messages
None.
3.4-119 (BII172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.71 HEAD(PlotHeading)
3.4.71.1 EntryPoint: HEAD
3.4.71.2 Purpose
Creates heading blocks forplotframes.
3.4.71.3 Calling Sequence
CALLHEAD(T,N,L,V)
TType-1
2
3=STATIC
=MODAL
=TRANSIENT
NDeformation Number (0=undeformed shape)
L-LoadCaseIdentification Number
V-Valueofeigenvalue ortime.
3.4.71.4 Method
TheTITLE, SUBTITLE andLABELarepicked upfrom/_UTPUT/ andplotted inthelowerlefthand
corner oftheplotframe, followed bytheplotidentification line.
3.4.71.5 Design Requirements
Theplotter software package mustbeavailable tothisroutine.
3.4.71.6 Diagnostic Messages
None.
3.4-120 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.72 DELSET (Dummy Element Setup)
3.4.72.1 Entry Point: DELSET
3.4.72.2 Purpose
Modifies /GPTAI/toaccommodate anydummy elements present.
3.4.72.3 Calling Sequence
CALL DELSET
3.4.72.4 T_ethod
TheADUMi bulk data card information ispicked upfrom the46ththru 54thwords of/SYSTEM/
where itwasplaced byIFS5P. Thedesired entries in/GPTAI/aregenerated andinserted into the
53rdthru 61stpositions asrequired.
3.4.72.5 Design Requirements
Allmodules using /GPTAI/should call this routine toinsure that thedummy elements are
properly recognized.
3.4.72.6 Diagnostic Messages
None.
3.4-121 (8/I/72)&lt;/p&gt;
&lt;p&gt;3.4.73
3.4.73.1
3.4.73.2SUBROUTINE DESCRIPTIONS
HMAT(HeatTransfer Material Property Utility)
EntryPoint: HMAT
Purpose
Toobtain material property dataforHeatTransfer element routines.
3.4.73.3 Calling Sequence
CALLHMAT(ID,Z)
ID-=O,setupcallmadebySMAIA;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O,element identification number oncallsmadebyelement routines.
Z-Working core.
3.4.73.4 Method
I.Initialization call(ID=O)
ReadintocoreallMAT4andMAT5cardsandcheckforanyduplicate identification
numbers.
2.Element Routine calls (ID&amp;gt;O)
Ifprevious callhadthesamerequest data,return tothecalling routine.
Otherwise, lookupthedesired material dataincore,extract thedesired
information, andreturn tothecalling routine.
3.4.73.5 Design Requirements
Working coremustbesufficient toholdalloftheMAT4andMAT5data. Utility routines
PREL_C andBISRCH areused.
3.4.73.6 Diagnostic Messages
Messages 3002,3008, 2157,3062and2156maybeissued.
3.4-122 (8/I/72)&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P27</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_027/</guid>
      <description>
        
        
        &lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.74BISRCH (Binary Search)
3.4.74.1 EntryPoint: BISRCH
3.4.74.2 Purpose
Toperform abinary search onalistofsorted data.
3.4.74.3 Calling Sequence
CALLBISRCH ($nID,BUF,L,KN,JP)
n-F_RTRAN statement nun_ber defining thereturn tobetakenintheevent
amatchisnotfound.
ID-Wordtomatchwithfirstwordofentry.
BUF-Arraytobesearched.
LLength ofeachentryofarray.
KN Number ofentries inBUF.
JP Pointer returned tocalling program. This pointer gives LheFirst
word ofthematching entry inthearray.
3.4-123 (811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.74.4 Method
Astandard binary search algorithm isusedasshownbelow:
KHI=K
JP=j
RETURN 1&amp;lt;0IJJ=L-IKLO=I
KHI=KN
J=K*L-JJ
t
ijp=jRETURN&amp;gt;0
KLB=K
&amp;lt;0 &amp;gt;0
N_ YES I,_
K=KHI
3.4-124 (8/I/72)&lt;/p&gt;
&lt;p&gt;3.4.74.5
None.
3.4.74.6
None.Design Requirements
Diagnostic MessagesUTILITY SUBROUTINE DESCRIPTIONS
3.4-125 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.75 F_RFIL (File Unit)
3.4.75.1 Entry Point: FORFIL
3.4.75.2 Purpose
Toextract thelogical unit towhich agiven GIN@ file name belongs.
3.4.75.3 Calling Sequence
INTEGER F_RFIL
NUNIT =FORFIL(NAME)
NAME GINO file name
3.4.75.4 Method
F_RFIL searches theFIST fortheGIN0 file name. When amatch isfound, theinternal unit
number iseither /XXFIAT/or/XFIAT/andisextracted andreturned through thefunction name
asininteger.
3.4.75.5
None.
3.4.75.6Design Requirements
Diagnostic Messages
Message 2179 maybeissued intheevent that therequested GINB file name cannot be
found.
3.4-126 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.76 DAD_TB (Double Precision Vector DotProduct)
3.4.76.1 Entry Point: DAD_TB
3.4.76.2 Purpose
Tocompute thescalar inner product oftwovectors indouble precision.
3.4.76.3 Calling Sequence
D_UBLE PRECISION DAD_TB, A(3),B(3),C
C=DAD_TB(A,B)
3.4.76.4 Method
C =
3.4.76.5
None.
3.4.76.6
None.3
AiBi
2=I
Design Requirements
Diagnostic Messages
3.4-127 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.77 DAXB(Double Precision Vector CrossProduct)
3.4.77.1 EntryPoint: DAXB
3.4.77.2 Purpose
Tocompute thevector product oftwovectors indouble precision.
3.4.77.3 Calling Sequence
DOUBLE PRECISION A(3),B(3),C(3)
CALLDAXB(A,B,C)
3.4.77.4 Method
D:
3.4.77.5 Design Requirements
mayoverlay AorBincore.
3.4.77.6 Diagnostic Messages
None.
3.4-128 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.78 SAD_TB (Single Precision VectorDotProduct)
3.4.78.1 Entry Point: SAD_TB
3.4.78.2 Purpose
Tocompute thescalar inner product oftwovectors insingle precision.
3.4.78.3 Calling Sequence
DIMENSION A(3),B(3)
C=SADOTB (A,B)
3.4.78.4
C =Method
3
AiBi
i=l
Design Requirements
Diagnostic Messages
3.4-129 (8/I/72)&lt;/p&gt;
&lt;p&gt;3.4.79
3.4.79.1
3.4.79.2UTILITY SUBROUTINE DESCRIPTIONS
SAXB(Single Precision Vector CrossProduct)
EntryPoint: SAXB
Purpose
Tocompute thevector product oftwovectors insingle precision.
3.4.79.3 Calling Sequence
DIMENSION A(3),B(3),C(3)
CALLSAXB(A,B,C)
3.4.79.4 Method
3.4.79.5 Design Requirements
mayoverlap AorBincore.
3.4.79.6 Diagnostic Messages
None.
3.4-130 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5
3.5.1
3.5.1.I
3.5.1.2MATRIX SUBROUTINE DESCRIPTIONS.
BLDPK (Build aPacked Column ofaMatrix).
Entry Points: BLDPK, BLDPKI, ZBLPKI, BLDPKN.
Purpose
Towrite acolumn ofamatrix inNASTRAN packed format.
3.5.1.3 Calling Sequence
Ifseveral different matrices aretobepacked concurrently, themulti-column version is
used:
CALLBLDPK(TYPIN,TYP_UT,NAME,BL_CK,_PT,I)
CALLBLDPKI(A,I,NAME,BL@CK,@PT)
CALLBLDPKN(NAME,BL_CK,_PT,MCB)
where:
BLDPK isaninitialization callandismadeonce foreachcolumn tobepacked.
BLDPKI isthecallmadetosupply asingle element ofthecolumn tobepacked.
BLDPKN isacall toterminate processing ofthecolumn.
TYPIN -Arithmetic typeoftheelements tobepacked (l=realsingle precision, 2=real
double precision, 3=complex single precision, 4=complex double precision)- integer -input.
TYP_UT -Arithmetic typeoftheelements inthepacked column -integer -input.
_PT=&amp;lsquo;WRITE&amp;rsquo;: GIN_file nameofdatablock where packed column willbewritten.NAME
(_PT &amp;lsquo;WRTC_R&amp;rsquo;: Anarray incorewhere packed column willbewritten.
BL_CK -Anarray ofdimension &lt;em&gt;20forusebyBLDPK andBLDPKI.
{&amp;lsquo;WRITE&amp;rsquo;: Thepacked column willbewritten byGIN&lt;/em&gt;. IinDut_PT-
&amp;lsquo;WRTC_R&amp;rsquo;: Thepackedcolumn willbewritten incore. Subroutine name
A-Anarrayofdimension I,2or4(depending onTYPIN) wheretheelement tobepacked is
stored -real-input.
I-Rowposition ofelement tobepacked-integer -input.
MCB-Anarrayofdimension 7wherethetrailer information aboutthematrix isaccumulated.
Ifonlyonematrix isbeingpacked, thesinglecolumn version shouldbeusedasitismore
efficient.
C_MM(_N/ZBLPKX/A(4),I
3.5-1(8/1/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
CALLBLDPK(TYPIN,TYPOUT,NAME,O, OPT,O)
CALLZBLPKI
CALLBLDPKN(NAME,O,BPT,MCB)
where:
BLDPKanditsarguments areasdefined above.
ZBLPKI isthecallmadetoprovide anelement ofthecolumn tobepacked. Theelement (A),
anditsrowposition (I),arestored in/ZBLPKX/ bytheuserpriortoeachCALLZBLPKI.
BLDPKN anditsparameters aredefined asabove.
Note:
BLDPKN accumulates thefollowing twowords ofMCB:
MCB(2) =column number
MCB(6) =number ofwords inthedensest column
Inthemulti-column version, BL@CK must bedifferent foreach matrix being packed.
3.5.1.4 Method
Format ofapacked column (one logical record):
Rowposition offirst non-zero element
Type ofelements =TYPOUT
Notused .Column header
Notused
Notused
First non-zero element
Rowposition ofsecond non-zero element
orsecond non-zero element
Last non-zero element
16777215 (integer) =24&amp;quot;I&amp;quot;bitsColumnbody
IColumn trailer
3.5-2&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
Example:
Assume acolu_m ofarealsingle precision 19xNmatrix istobepacked inrealsingle
precision form:
RowPosition Value Packed Format
l 0.0 4
2 0.0 l
3 0.0 Notused
4 l.0 Notused
5 2.0 Notused
6 0.0 l.0
7 3.0 2.0
8 4.0 7
9 5.0 3.0
lO 6.0 4.0
II 7.0 5.0
12 8.0 6.0
13 0.0 7.0
14 0.0 8.0
15 0.0 16777215
16 0.0
17 0.0
18 0.0
19 0.0
Foreachofthe16possible combinations ofTYPINandTYPBI_, BLDPKsetsswitches forthe
typeofconversion tobeusedinpacking. Forthemulti-column version, theseswitches and
otherpointers aresavedinBL_CK. BLDPKI restores theswitches andpointers andmovesthe
element anditsrowposition to/ZBLPKX/ thenenters codecommonwithZBLPKI. Iftheelement
iszero,animmediate return isgiven. Iftheelement isthefirstnon-zero element forthe
column, the5-word header iswritten followed bytheelement. Otherwise, therowposition of
thecurrent element iscompared totherowposition ofthelastelement. Ifthedifference is
unequal toone,thecurrent rowposition iswritten. Ineither case,thenon-zero element is
written andreturn ismade.
3.5-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.1.5 Design Requirements
Letljandlj+1betherowspositions oftwoelements supplied insuccessive callsto
BLDPKI orZBLPKI. Thenlj+1&amp;gt;liforalliofacolumn.
IfBPT:&amp;lsquo;WRTCOR&amp;rsquo;, thentheblockNAMEmustbeinitialized priortoeachcalltoBLDPK
(see_PNC_R).
Ifthesingle column version isused,subroutine PACKmaynotbecalled between callsto
BLDPKandBLDPKN.
MCB(2), MCB(6) andMCB(7) mustbesettozerobytheuserpriortothefirstcallof
BLDPKN foramatrix.
Theexactformat ofapacked column ismachine dependent. SeeSection 5fordetails.
3.5-4 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.2
3.5.2.1 Entry Point: PACK.
3.5.2.2 PurposePACK (Pack aColumn ofaMatrix).
Topackandwrite acolumn ofamatrix.
3.5.2.3 Calling Sequence
C_N/PACKX/TYPIN,TYP_UT,I,N,INCR
CALLPACK(A,NAME,_PT,MCB)
A -Anarray where theelements ofthecolumn arestored inunpacked form.
(_PT =&amp;lsquo;WRITE&amp;rsquo;, GIN_nameofthe packed datablock where the column will be
NAME -jwritten.
&lt;em&gt;PT =&amp;lsquo;WRTC_R&amp;rsquo;, anarray incorewhere thepacked column will bestored.
IWRITE: Packed c°lumnwill bewritten byGIN&lt;/em&gt;- }InputOPT tWRTC_R: Packed column willbestored incoreatNAME. Subroutine name
MCB -Anarray ofdimension =7where thematrix trailer information willbe
accumulated.
TYPIN -Arithmetic typeoftheelements ofthecolumn stored atA(l=realsingle
precision, 2=realdouble precision, 3=complex single precision, 4=com-
plexdouble precision).
TYP_UT -Arithmetic typeinwhich theelements aretobeinpacked form. Sameconven-
tion asTYPIN.
I Rowposition oftheelement stored atA(1).
N -Rowposition ofthelastelement inthecolumn stored atA.
INCR -Spacing oftheelements incolumn stored atAinunits ofelements, e.g., if
realdouble precision elements arestored consecutively, INCR=I.
3.5.2.4 Method
BLDPK iscalled toinitiate activity forthecolumn. Foreach element inthecolumn, ZBLPKI
iscalled toperform packing andwriting. BLDPKN iscalled toterminate activity forthecolumn
andupdate thematrix trailer.
3.5-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.2.5 DesignRequirements
Seesubroutine description forBLDPK, section 3.5.1.
3.5-6&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.3 IHTPK (Interpret aPacked Column ofaIIatrix).
3.5.3.1 Entry Points: INTPK, INTPKI, ZNTPKI.
3.5.3.2 Purpose
Toread andinterpret acolumn ofamatrix inNASTRAN packed format.
3.5.3.3 Calling Sequence
Ifseveral different matrices aretoberead andinterpreted concurrently, themulti-column
version isused.
CALL INTPK($n,NAME,BLOCK,OPT,TYP_UT,I)
CALL INTPKI(A,I,NAME,BLBCK,_PT,EOL)
where I_PK istheinitialization call andismade once foreach column toberead and
interpreted.
INTPKI isthecall made toread successive non-zero elements ofthecolumn. Each call to
INTPKI returns onenon-zero element.
n-FORTRAN statement number defining return tobetaken intheevent thecolumn isnull.
&lt;em&gt;PT =&amp;lsquo;READ&amp;rsquo;, GINO file name ofdata block where thematrix isstored.NAME
tOPT &amp;lsquo;RDC_R&amp;rsquo;, asarray ofcore storage where thematrix isstored.
BL_CK -Anarray ofdimension &lt;em&gt;20forusebyINTPK andINTPKI.
OPT I&amp;rsquo;READ&amp;rsquo; -Thec°lumn will beread byGIN&lt;/em&gt;&amp;quot; }Input,&lt;/em&gt;&amp;lsquo;RDC_R&amp;rsquo; -Thecolumn will beread from core storage. Subroutine name
TYP_UT -Arithmetic type into which theelements aretobeunpacked (+_l=real single
precision, +&amp;ndash;2=real double precision, +_3=complex single precision, +_4=complex
double precision). IfTYP_UT &amp;lt;O,thesign ofeach non-zero element istobe
changed -integer -input.
A-Anarray ofdimension l,2or4,depending onTYP_UT, where thenon-zero element istobe
stored -real -output.
I-Rowposition ofthenon-zero element -integer -output.
EOL=lindicates last non-zero element inthecolumn wasread onthecurrent call to
INTPKI, =0otherwise -integer- output.
3.5-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Ifonlyonematrix istobereadandinterpreted, thesingle-column version should beused
asitismoreefficient.
C_MM_N/ZNTPKX/A(4),I,E_L,E_R
CALLINTPK($n,NAME,O,OPT,TYP_UT,O)
CALLZNTPKI
where INTPKanditsarguments aredefined asabove.
Z[ITPKI isthecallmadetoreadsuccessive non-zero elements ofthecolumn. Oneelement (A),
itsrowposition (I),end-of-column indicator (E_L), andend-of-record indicator (E@R)arestored
in/ZNTPKX/ foreachcalltoZNTPKI.
E_Lisdefined asabove.
EOR=1indicates theend-of-record hasbeenreadbyZNTPKI, =0otherwise (ZNTPKI buffers
aheadsothatE_Rwillusually beonebefore EOLisone.E_Risalways onewhenE_L=I).
3.5.3.4 Method
INTPKreadsthelineheader forthecolumn. If@PTexitsviaRETURN 2,anullcolumn exists
andRETURN 1ismadetotheuser. Otherwise, foreachofthe32combinations ofTYP_UT andthe
typeoftheelements inthecclumn, aswitch forpickup andconversion oftheelements isset.
Forthemulti-column version, thisswitch andotherpointers arestored inBL_CK. Forthesingle
column version, onebuffer isread. INTPKI restores theswitch andpointers andthenenters code
common withZNTPKI. Atestismadetodetermine ifareadisnecessary (thisisalmost always
required inthemulti-column version sinceonlyoneelement atatimeisread). Thenon-zero
element ispicked up,converted ifnecessary, andstored in/ZNTPKX/. Itsrowposition isstored
in/ZNTPKX/. Thenextwordinthecolumn isnowtested (areadbeing givenfirstifnecessary).
Ifthe(integer) absolute valueofthisnumber islessthan16777215, thenumber istherow
position ofthenextnon-zero element. If=16777215, itisthetrailer wordandthelastnon-zero
element hasbeenread. InthiscaseE_LissettoI.If&amp;gt;16777215, thenumber isarealnumber
andtherowposition ofthenextnon-zero element equals thecurrent rowposition plusone.For
themulti-column version, A,IandE_Laremoved from/ZNTPKX/ totheuser,andtheparameters are
savedinBL@CK.
3.5-8 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.3.5 Design Requirements
I.If_PT=RDC_R, thecalling module mustinitialize NAME nrior toeachcalltoINTPK see
&lt;em&gt;PNC_R (section 3.4.13).
2.Ifthesingle column version isused, subroutine UNPACK must notbecalled during
interpretation ofacolumn, i.e., subsequent toacalltoINTPK andprior toareturn fromZNTPKI
with EOL=I.
3.Theformat offloating point words oncomputers which execute thisprogram must besuch
thatanynon-zero floating point word islarger inabsolute value thantheinteger 16777215.
4.When using thesingle column version, iftheuserdoes notcomplete interpretation of
thecolumn, hemust insure thattheremainder ofthecolumn isskipped. Thismaybeaccomplished
by
IF(E_R.E&lt;/em&gt;.O) CALLFWDREC($n,NAME).
3.5.3.6 Diagnostic Messages
Thefollowing messages maybeissuedbyINTPK:
3002
3003
3.5-9 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.4 UNPACK (Unpack aPacked Column ofaMatrix).
3.5.4.1 EntryPoint: UNPACK.
3.5.4.2 Purpose
Toreadandunpack acolumn ofamatrix stored inNASTRAN packed format.
3.5.4.3 Calling Sequence
CALLUNPACK($n,NAME,A,_PT)
C_N_I_N/UNPAKX/TYP@UT,I,N,INCR
n F_RTRAN statement number defining return tobetakenifthecolumn isnull.
&lt;em&gt;PT=&amp;lsquo;READ&amp;rsquo;, GIN_nameofdatablockcontaining thecolumn tobeunnacked.NAMEI
t@PT &amp;lsquo;RDC@R&amp;rsquo;, anarraywherethepacked column isstored.
IREAD&amp;rsquo;-c°lumn willbereadbyGIN&lt;/em&gt;&amp;quot; }@PT = Subroutine name
RDC@R&amp;rsquo; -column willbereadfromcoreatNAME.
A Anarraywhere theunpacked column willbestored.
TYP@UT -Arithmetic typeinwhich theelements aretobestored atA(I=realsingle
precision, 2=realdouble precision, 3=complex single precision, 4=complex
double precision). TYP_UT _0meansthateachoftheelements willbestored
withachange ofsign.
I -Rowposition oftheelement tobestored atA(1).
N -Rowposition ofthelastelement tobestored atA.
INCR -Spacing oftheelements tobestored atAinunitsofelements, i.e.,if
complex single precision elements aretobestored atA(1),A(5),A(7),etc.,
INCR=2.
Notes:
I.Zerosarestored forzeroelements.
2.IfI(0orN_O,thecolumn isunpacked fromthefirst non-zero element throuqh
thelastnon-zero element andIandNaresettotheserowpositions.
3.Ifreturn tostatement nisgiven, zerosareno__ttstored atA.
3.5-10&lt;/p&gt;
&lt;p&gt;n
r,_TRIX SUBROUTINE DESCRIPTIONS
3.5.4.4 Method
Activity forthecolumn isinitiated byacalltoINTPK. Anon-standard return from INTPK
results inanimmediate RETURN ltotheuser. ZNTPKI iscalled toobtain thefirst non-zero
element. Ifitsrowposition islessthanI,ZNTPKI isrepeatedly called until arowposition mI
orend-of-column isfound. Iftherowposition ofthefirst non-zero element isgreater than I,
zeros arestored forthemissing elements. Eachnon-zero element whose rowDosition islessthan
orequal toNisstored andzeros arestored formissina elements. Non-zero elements whose row
positions aregreater thanNareskipped until theend-of-column isreached.
3.5.4.5 Design Requirements
Seesubroutine INTPK (seesection 3.5.3).
3.5.4.6 Diagnostic Messages
Inacoding sense messages 3002and3003arepossible. However, theyviolate thedesign of
GINBor_PNC_R andtherefcre,if obtained, should indicate anobscure program design error or
machine error.
3.5-11&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.5 CALCV (Compute aPartitioning Vector).
3.5.5.1 EntryPoint: CALCV.
3.5.5.2 Purpose
Tobuildapartitioning vector ofzeros, onesandtwostobeusedbysubrGutines MERGE
andPARTN.
3.5.5.3 Calling Sequence
CALLCALCV(FILEP,SETI,SUBO,SUBI,C@RE)
FILEP-GIN_filenumber ofpartitioning vector -integer -input.
SET1-Bitposition ofmajorset-integer -input.
SUBO-Bitposition ofzerosubset -integer -input.
SUB1-Bitposition ofonesubset -integer -input.
C@RE-Opencore.
C_MM_N/PATX/LCORE,NSUBO,NSUBI,NSUB2,FUSET
LC@RE-Length ofopencore-integer -input.
NSUBO-Number ofrowsinzerosubset -integer -output.
NSUBI-Number ofrowsinonesubset -integer -output.
NSUB2-Number ofrowsintwosubset (notinoneorzerosubset) -integer -output.
FUSET-FilenameofUSET-integer -input.
3.5.5.4 Method
Eachelement ofUSETisexamined andclassified. Ifitbelongs toSET1itisfurther
classified intoSUBO,SU31,andSUB2.
Avector isconstructed whichhaszeros, onesandtwosinorderaselements ofUSETareso
classified.
3.5.5.5 Design Requirements
LC@REmustbe_twicelength ofGIN_buffer.
3.5.5.6 Diagnostic Messages
System messages ifUSETorFILEParenotcorrect GIN_files.
3.5-12&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P28</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_028/</guid>
      <description>
        
        
        &lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.6PARTN-MERGE (Partition aMatrix -MergeMatricies Together).
3.5.6.1 EntryPoint: PARTN, F,_RGE. PARTNandMERGE aretwodistinct routines butareso
closely related thattheyaredescribed together here.
3.5.6.2 Purpose
PARTNwillbreakupamatrix intofoursubmatrices.
MERGE istheinverse ofPARTN inthatgiventhefourbuildina blocks AII,&amp;hellip;,A22 MERGE
willreconstruct [A].
3.5.6.3 Calling Sequence
CALLPARTN (RP,CP,Z)
CALLMERGE (RP,CP,Z)
RP-Matrix control blockoftherowpartitioning vector -integer -input.
CP-Matrix control blockofthecolumn partitioning vector -integer -input.
Z-Arrayofopencore.
IfRP(1)_O,orCP(1)_O,thecorelocations fromRP(8)orCP(8)willcontain this
vector inpacked form.
IfRP(1)=CP(I) &amp;lt;0thearrays RPandCPcoincide incore.
C_MM_N/PARMEG/MCBA(7),MCBAII(7),MCBA21(7),MCBAI2(7),MCBA22(7),LC_RE,RULE
MCBA -Matrix control blockfor[A]-input.
MCBAII -Matrix control blockfor[All]-input.
MCBA21 -Matrix control blockfor[A21]-input.
MCBAI2 -Matrix control blockfor[AI2]-input.
MCBA22 -Matrix control blockfor[A22]-input.
Ifanysubmatrix isnotdesired ordoesnotexistsetMCBAij(1) =O.
LC_RE -Length ofZarray -integer -input.
RULE -Ruletobeapplied totherowandcolumn partitioning vectors -integer -input.
3,5-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.6.4Method
Eachelementof[A]isassignedtotheappropriate submatrixbythefollowingschemes.
RULE&amp;gt;0N:IRULEI
aij_[All]ifRP(1)=CP(J)=N
aijE[A21]ifRP(1)=N,CP(J)PN
aijc[AI2]ifRP(1)_N,CP(J)=N
aijc[A22]ifRP(1)_N,CP(J)&lt;em&gt;N
RULE_0N=IRULEI
aij&lt;/em&gt;[All]ifRP(1)mN,CP(J)&lt;em&gt;N
aij&lt;/em&gt;[A21]ifRP(1)_N,CP(J)_N
aijE[AI2]ifRP(1)_N,CP(J)&lt;em&gt;N
aij&lt;/em&gt;[A22]ifRP(1)_N,CP(J)&amp;lt;N
Subroutine RULER(RULE,IP,ZCONT,@NCNT,LIST,NR_WP,BUFF,I_PT) iscalledtwicetoaccomnlish
thisassignment where
RULE-Ruletcbcapplied
IP-EitherRPorCP
ZC_NT-Numberofelements(roworcolumn)assignedtotheoneclass.
_NCNT-Numberefelements(roworcolumn)assignedtothetwoclass.
Forexample,ifRULERisanalyzingRPandRP(1)=NthiselementofRPissaidtobelongto
the1classinthatitwillgoeitherto[All]or[A21].
LISTAlistofzerosandones.Zero,iftheelementbelongstotheoneclass.
One,iftheelementbelongstothetwoclass.
NR_WP-NumberofrowsinIP
BUFFOneGIN_bufferspace
I@PTIfI_PT=I,LISTwillbestored1numberperword.IfI_PT=O,LISTwillbe
packed32bits/word.
Non-zero_lementsareread,classified andoutput.
3.5-14&lt;/p&gt;
&lt;p&gt;I_TRIX SUBROUTINE DESCRIPTIONS
3.5.6.5 Design Requirements
Opencoremustcontain nGIN_buffers +lcolumn (single precision) of[A]andlrow/32 of
[A],where n=thenumber ofsubmatrices present plusone.
3.5.6.6 Diagnostic Messages
Ifinsufficient coreisavailable asdescribed above, fatal message 3008isgiven.
3.5-15&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.7 SSG2A(Driver forPARTN).
3.5.7.1 EntryPoint: SSG2A.
3.3.7.2 Purpose
Topartition avector intotwosubsets (i.e., tobeadriver forPARTN).
3.5.7.3 Calling Sequence
CALLSSG2A(VECT@R,PARTI,PART2,PVECT)
VECTOR -GI_filenumber ofvector tobepartitioned -integer -input.
PART1 -GIN_filenumber ofmajorpartition -integer -input.
PART2 -GIN_filenumber ofminorpartition -integer -input.
PVECT -GIN_filenumber ofpartitioning vector -inteaer -input.
C_MM_/PATX/XX X,NR_I, NR_!_2
Number ofrowsinPART1-integer -input.
Number ofrowsinPART2-integer -input.NR@WI
,&lt;em&gt;RG)W2
3.5.7.4 Method
3.5.7.5ThePARTNcommon blockisfilled.
Basedonthetrailer ofVECTOR andI;ROWI, NR_VI2:
{VECTOR} &amp;ndash;&amp;gt;#PARTI&lt;/em&gt;{
Design Requirements
Opencoreisneeded at/SSGA2/.
3.5-16&lt;/p&gt;
&lt;p&gt;3.5.8
3.5.8.1
3.5.8.2SDRIB IDriver forMERGE).
Entry Point: SDRIB
Purpose
Todrive MERGE forming VECTORMATRIX SUBROUTINE DESCRIPTIONS
PART1 1I&amp;quot;ECT_RI =IPART2 ,
3.5.8.3 Calling Sequence
CALLSDRIB(FVECT,PARTI,PART2,VECT_R,MAJ_R,SUBO,SUBI,USET,I_PT,IYS)
PVECT -GINBnameofpartition vector -integer -input.
PARTI -GINBnameofvector which corresponds toSUBOset-integer -input.
PART2 -GINB nameofvector which corresponds toSUBIset-integer -input
VECTOR -GIN_nameofmerged vector -integer -input.
MAJOR -Bitposition ofsetofVECT@R -integer -input.
SUBO -Bitposition ofsetofPARTI -integer -input.
SUBI -Bitposition ofsetofPART2 -integer -input.
USET GINBnameofUSET-integer -input.
I@PT &amp;lsquo;0&amp;rsquo;These areusedinamodule specific callto
handle theYSdatablock inaspecial manner.
IYS -&amp;lsquo;O&amp;rsquo;
3.5.8.4 Method
CALCV iscalled toobtain partitioning vector.
PARMEG common block isfilled.
MERGE iscalled.
3.5.8.5 Design Requirements
Open coreat/SDRBI/.
3.5-17&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.9 UPART ISymmetric Partition Driver).
3.5.9.1 EntryPoints: UPART, MPART
3.5.9.2 Purpose
Tocompute apartitioning vector andthenperform aseries ofsymmetric partitions. A
symmetric partition issuchthattherowpartitioning vector equals thecolumn partitioning vector.
Forexampl e: FKff Kfs_
[Knn] =_sfKss]
3.5.9.3 Calling Sequence
CALLUPART(USET,SCRI ,MAJ_R,SUBO,SUBI)
USET GINBFilenumber ofUSET-integer -input.
SCRI Scratch fileonwhichthepartitioning vector willbewritten -integer -input.
MAJOR -Bitposition within aUSETwordofthesuperset(e.g., nsetintheabove
example) -integer -input.
SUBO-Bitposition ofthefirstsubset (e.g., fsetintheaboveexample) -integer -
input.
SUB1-Bitposition ofthesecond subset (e.g., ssetintheaboveexample) -integer -
input.
CALLMPART(KNN,KFF,KSF,KFS,KSS)
KNN-GINOnameofthematrix topartitioned -inteQer -input.
KFF,KSF,KFS,KSS -GIN_namesofthepartition outputs. Azerowillcausetherespective
matrix nottobewritten.
3.5.9.4 Method
AcalltoUPARTcauses CALCVtocompute apartitioning vector.
MPARTdrives PARTNandiscalled repeatedly topartition several matrices (i.e.KNN,MNN,
BNN,K4NN) inasimilar symmetric manner usingthesamepartitioning vector.
3.5.9.5 Design Requirements
Opencoreat/UPARTX/.
3.5-18&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.10 ADD(Driver forSADD)
3.5.10.I Entry Point: ADD.
3.5.10.2 Purpose
Todrive SADDtocompute [X]=&lt;em&gt;[A]+8[B]oronoption [X]=&lt;/em&gt;[A].
3.5.10.3 Calling Sequence
CALLADD(Z)
Z&amp;ndash;Array ofcore
C_N/ADDX/MCBA(7),MCBB(7),MCBC(7),TYPA,ALPHA(4),LC_RE,TYPB,BETA(4)
MCBA-Matrix Control Block for[A]-input.
MCBB-Matrix Control Block for[B]-input.
MCBC-Matrix Control Block for[X]-input.
TYPA-Type ofAlpha -integer -input.
|-rea|single precision
2-realdouble precision
3-complex single precision
4-complex double precision
ALPHA -_-input -typedepends onTYPA.
LC_RE -Length ofZarray.
TYPB -Type ofBETA -integer -input.
BETA -B-input -typedepends onTYPB.
3.5.10.4 Method
ADDrearranges andmoves /ADDX/to/SADDX/,andcalls SADD
tocompute [X]inabove equation.
3.5.10.5 Design Requirements
Matrix addroutine ADDisreplaced bySADD. Therevised ADDroutine iskept
inthesystem toaccommodate theexisting calls totheADDroutine.
However, allfuture calls tomatrix addition should bemadedirectly toSADD.
3.5-19 (611171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.11
3.5.11 .I
3.5.11.2SSG2C IDriver forADD).
EntryPoint: SSG2C.
Purpose
TodriveADDtocompute [C]=&lt;em&gt;[A]+B[B].
3.5.11.3 Calling Sequence
CALLSSG2C (FILEA,FILEB,FILEC,I_P,BLOCK)
FILEA-GIN_filenumber of[A]-integer -input.
FILEB-GIN_filenumber of[B]-integer -input.
FILEC-GIN_filenumber of[C]-integer -input.
I_P-Option flag-integer -input.
IFI_P&amp;lt;0thefirstcolumn of[A]willbeaddedtoeachcolumn of[B]to
give[C].
BLOCK -ll-word arraycontaining coefficients -input.
Word Type Meanin&lt;/em&gt;
1 Integer Typeof
2 Real
3
4
5
6 Notused
7 Integer TypeofB
8 Real
9 B
I0
II
3.5-20&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.11.4 Method
Thetrailers ofFILEA andFILEB andBL_CK areusedtofilltheADDXcommon block.
ThetypeofFILEC istheminimum typecompatible with _[A]andBIB].
3.5.11.5 Design Requirements
Opencoreat/SSGC2/.
3.5-21&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.12
3.5.12.1 EntryPoint: MPYAD.
3.5.12.2 Purpose
Toevaluate thematrix equation
D=&lt;em&gt;[A][B]&lt;/em&gt;[C]
3.5.12.3 Calling Sequence
CALLMPYAD(Z,Z,Z)MPYAD (Matrix Multiplication Routine).
orD=&lt;em&gt;[A]T[B]&lt;/em&gt;[C].
C_MMON/MPYADX/A(7),B(7),C(7),D(7),NZ,T,SIGNAB,SIGNC,PREC,SCR
Z-Anareaofworking storage.
NZ-Thenumber ofcomputer wordsatZ.
A,B,C-Matrix control blocks forthematrices A,B,C.
IfC(1)=O,Cisnotused,i.e.[D]=&lt;em&gt;[A][B]or&lt;/em&gt;[AT][B].
D-Matrix control blockfortheproduct matrix.
D(1)mustcontain theGIN_filenamepriortoentry.
D(5)mustcontain thearithmetic typeoftheelements ofD.MPYADwillaccumulate
D(2),D(6)andsetD(7)=O.
T_=O,&lt;em&gt;[A][B]&lt;/em&gt;[C]iscomputed.
O,+[A]T[B]_[C]iscomputed. J
=I+l,compute +[A][B]or+[A]T[B]SlGNAB
,compute -[A][B]or-[A]T[B]
_+I,use+CSIGNC
t-l,use-C
Note: IfC(1):O,SIGNCisignored.
PREC
SCR#,perform arithmetic insingle precision
,perform arithmetic indouble precision
:GIN_filenameofascratch fileforusebyMPYAD.
3.5-22&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.12.4Method
I.GeneralComments. Twoalternative methodsofperforming thematrixmultiplication are
availableinMPYAD.MethodOneholdsasmanyunpackedcolumnsoftheBandDmatricesascore
storagewillallow.TheAmatrixisreadinterpretively byINTPK.Foreachnon-zeroelementin
A,allcombinatorial termsforcolumnsofBcurrentlyincorearecomputedandaccumulated inthe
storageforD.Atthecompletion ofonepassoftheAmatrix,thematrixproductiscompleteto
theextentofthenumberofcolumnsofBcurrentlyincore.(IftheCmatrixispresent,columns
areinitiallyunpackedintothestorageforD.)TheprocessisrepeateduntiltheBmatrixis
exhausted. OneGINObufferonlyisrequiredforMethodOne.ThenumberofpassesoftheA
matrixforMethodOneequalsthenumberofcolumnsofBdividedbythenumberofcolumnsofBand
Dwhichcanbeheldincoreatonetime.InMethodTwoeitheroneelementofB(T=O)orone
columnofBinunpackedform(T=I)isheldincoreatonetime,andeitheronecolumnofDin
unpackedform(T=O)oroneelementofD(T=I).Theremainingstorageisallocatedtostorage
ofcolumnsofAinpackedfor,-&lt;em&gt;(i.e.,nonzero&lt;/em&gt;^&lt;em&gt;ms&lt;/em&gt;:,andr_p_s_+&lt;em&gt;onsv.&lt;/em&gt;._nly)v&amp;hellip;FOr&amp;hellip;..allthecolumns
ofAinstorageatonetimetheBandEmatricesarepassed,columnbycolumn,formingpartial
answersoneachpass.TheEmatrixisinitiallytheCmatrix(ifpresent)andthereafter isthe
partialproductmatrixfromthepreviouspass.ThreeGINObuffersarerequiredforMethodTwo.
ItmaybeseenthattheAmatrixispassedonceandthenumberofpassesoftheBandEmatrices
equalsthenumberofcolumnsofAdividedbynumberofcolumnsofAthatmaybeheldincoreat
onetime.
2.Initialization Phase.Thearithmetic typeoftheelementsofDisdetermined asa
functionofthetypesofA,BandCandtheprecisionrequestedbytheuser.Variouspointers
forbothMethodsOneandTwoarecomputed. Adetermination ofsufficient corestorageismade
(oneunpackedcolumnofBplusoneunpackedcolumnofDplusoneGINBbuffer).Theexecution
timesforMethodsOneandTwoareestimated. Themethodgivingtheminimumexecutiontimeis
selectedforuse.
3.5-23 (811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.Method One.Theallocation ofcorestorage forMethod Oneisshownbelow:
JZBorJZDB&amp;mdash;&amp;mdash;,-
NZZ
NZ1 dll
d21
d12
d22
d.2
dlr
d2r
d&amp;quot;
nr
bll
b21
bml
b12
b22
bm2
blr
b2r
b&amp;rsquo;
mr
GINBbufferIstcolumn ofD(NDwords)
2ndcolumn ofD
&amp;lsquo;rthcolumn ofD
Istcolumn ofB(NRwords)
2ndcolumn ofB
rthcolumn ofB
3.5-24&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
Columns ofBandCarereadandunpacked byUNPACK. INTPK iscalled toinitiate reading and
interpreting the_thcolumn ofA(_=linitially). Foreach non-zero terminA,ai_oraci
depending onT,thefollowing arithmetic computations aremade:
T=O:dij :ai_b_j+dij
T_O:d_j=a_ibij+d_j
where jrunsacross thecolumns ofBandDcurrently incore. Attheconclusion ofapassofthe
Amatrix, thecolumns ofDincore arepacked andwritten byPACK. Themrocess isremeated until
themultiplication iscomplete.
4.Method Two. Theallocation ofcorestorage forMethod Twoisshown onthenextpage.
3.5-25&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
AC_RE
FIRSTL
BUF3
BUF2
BUFID-
p.
L
v
v
NZ&amp;mdash;&amp;ndash;_Storage foronecolumn of
DorB
No.n.z.termslRow pos.of
instring iIstn.z.termI
Non-zero terms
i
No.n.z.termsiRow pos.of
instring iIstn.z,term
I
Non-zero terms
No.strings inIstcol.ofA
Pointer toIstcol.ofA
GIN_buffer
GINBbuffer
GINObufferINDorNB
Firststring
Laststring
Column definition
words-backward
stored
DMatrix
A&amp;amp;BMatrices
CMatrix
3.5-26 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
Tobegin each passofMethod Two, asmanycolumns ofAthatcanbeheldincorearereadusing
INTPK andstored incore instrings. Eachstring consists ofastring definition word followed by
consecutive terms ofacolumn such thatnotwoconsecutive terms arezero. Foreachcolumn there
exists apairofcolumn definition words &amp;ndash;onepoints tothefirst string inthecolumn andthe
other defines thenumber ofstrings inthecolumn. Thenumber ofpasses isdetermined bythesize
anddensity oftheAmatrix.
Thefollowing operations areperformed forthenontranspose case:
I.UNPACK iscalled tounpack thenextcolumn ofCintotheDmatrix area.
2.INTPK iscalled toreadthenon-zero terms ofthecorresponding column ofB.
3.MPY2NT iscalled toperform theoperation dik=aijbjk+Cik.Eachnon-zero element
ofB(bjk) will confine withallnon-zero elements inthejthcolumn ofAandaddtothe
corresponding elements inthekthcolumn ofDincore.
4.Whenallcolumns ofAincorearecomplete, thecolumn ofDispacked andwritten by
PACK.
5.Whenallcolumns ofBandCarecomplete, atestforcompletion ofthemultiplication
ismade.
6.Ifincomplete, theCandDfiles areswitched andtheprocess described above is
repeated.
Thefollowing operations areperformed forthetranspose case:
I.UNPACK iscalled tounpack thenextcolumn ofBintocore.
2.INTPK iscalled toreadthenon-zero terms forthecorresponding column ofC.
3.BLDPK iscalled toinitiate thepacking ofacolumn ofD.
4.MPY2T iscalled toperform theoperation dik=_aijbjk
core.+Cikforeach rowofAin
5.Th?elements ofDarepacked using ZBLPKI.
6.Whenallcolumns ofBandCarecomplete, atestforcompletion ofthemultiplication
ismade.
7.Ifincomplete, theCapdDfiles areswitched andtheprocess described above isre-
peated.
3.5-27 (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
If,aftercompletion ofMethod Two,therehasbeenanevennumber ofpasses oftheBmatrix,
FILSWI iscalled toswitch theDmatrix fromascratch filetoitsassigned unit.
3.5.12.5 Auxiliary Subroutine MPYQ
l•
2.EntryPoints: MPYI,MPY2NT, MPY2T.
Purpose: MPYQiscalled onceperexecution ofMPYAD. Itperforms general
initialization foreachoftheotherentrypoints.
MPYI,MPY2NT, andMPY2Tperform theinnerloopsforMethod One,Method Two
(non-transpose), andMethod Two(transpose) respectively. Forefficiency these
routines arewritten inassembly language foreachofthemachines.
3.5.12.6 Auxiliary Subroutine FILSWI
I•
2.EntryPoint: FILSWI
Purpose: Auxiliary subroutine toswitch unitreference numbers in/XFIAT/ inthe
eventthattheproduct matrix inMethod Twoendsuponascratch file(evennumber
ofpasses ofBmatrix).
3.5.12.7 Design Requirements
Corestorage mustbesufficient toholdoneunpacked column ofBplusoneunpacked column of
DplusoneGIN_buffer.
Thematrices tobemultiplied (andadded) musthavecompatible dimensions. MPYADdoesnot
checkthis.
3.5.12.8 Information Messages
CONMSG iscalled atentryandatexitfromMPYAD. Consequently, thelinexxxxxMPYADwill
appear twiceforeachcalltoMPYAD(where xxxxx=timeinseconds). Thedifference isthe
execution timeforMPYAD.
MPYADmethod selection dataisprinted undercontrol ofDIAG19.
2102LEFT-HAND MATRIX ROWP_SITION OUT_FRANGE -IGNORED.
AtermintheAmatrix whoserowposition islarger thanthestated dimension wasdetected
andignored.
3.5-28 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.12.9 Diagnostic Messages
Thefollowing messages maybeissued byMPYAD:
3001
3002
3008
3.5-28a (8/I/72)&lt;/p&gt;
&lt;p&gt;3.5.13
3.3.13.1
3.5.13.2
orI,&lt;em&gt;TRIX SUBROUTINE DESCRIPTIONS
SSG2B (Driver forMPYAD).
Entry Point: SSGZB.
Purpose
Todrive MPYAD tocompute
[D]=L[A][B]L[C]
[D]=&lt;/em&gt;[A]T[B]_[C]
3.5.13.3 Calling Sequence
CALLSSG2B(FILEA,FILEB,FILEC,FILED,T,PREC,ISIGN,SCRI)
FILEA -GINBnameof[A]-integer -input.
FILEB -GIN_nameof[B]-integer -input.
FILEC -GINBnameof[C]-integer -input.
FILED -GINB nameof[D]-integer -input.
T -Transpose flag-integer -input.
T-Oimplies use[A]
T=limplies use[A]T
PREC -Precision ofcomputation -integer -input, l=realsingle precision,
2=realdouble precision, 3=complex single precision, 4=complex double
precision.
ISIGN -Signofproducts -integer -input.
Isign [AB]=sign (ISIGN)
ISIGN =_1:&amp;gt;(sign [C] sign(ISIGN)
IISIGNi _l=&amp;gt;+ [AB]-[C]
IISIGNI&amp;lt;1=&amp;gt;-[AB]+[C]
SCRI-GIN_scratch file-integer -input.
3.5.13.4 Method
SSG2Bfills/MPYADX/ andcallsMPYADtocompute [D]inaboveequation.
3.5.13.5 Design Requirements
Opencoreat/SSGB2/.
3.5-29&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.14 SDC_rlP (Symmetric Decomposition).
3.5.14.1 EntryPoint: SDCOMP.
3.5.14.2 Purpose
Todecompose arealsymmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa
unitlowertriangular matrix and[D]adiagonal matrix stored inplaceoftheunitelements on
thediagonal of[L].Onoption, theCholesky decomposition [A]=[C][C]Tisdoneforareal,
positive definite matrix, withonlythelowertriangle [C]bein9output.
thedeterminant of[A].
3.5.14.3 Callin? Sequence
CALLSDC_MP($n_,Z,Z,Z)
COMM_N/SFACT/A(7),L(I),C(7),SCRI,SCR2,NZ,DET,P_WER,CNLSKY
A(7) Matrix control blockfor[A].
L(7) Matrix control blockfor[L].
C(7) -Matrix control block for[L]Tor[C].
SCRI,SCR2-Twoscratch files.
NZ
DETSDC_MP willalsocompute
-Thenumber ofcomputer wordsatZ.
-Double precision cellwhere thescaled valueofthedeterminant of[A]will
bestored.
P_VER -Scalefactor tobeapplied toDET(Determinant =DET*IO**P_!,fER).
CHLSKY -WhenCHLSKY =I,form[C]
Anareaofworking storage.
Statement number towhichcontrol istransferred ifthedecomposition fails.Z
nl
3.5.14.4 Method
I.&lt;em&gt;lathematical Considerations. Anynon-singular realsymmetric matrix [A]canbeuniquely
decomposed intothefactors [A]=[L][D][L]T.Theelemer:ts of[D]and[L]aregivenby:
i-I
di=aii-r.&lt;/em&gt;&amp;lsquo;ikdk
k=l
3.5-30&lt;/p&gt;
&lt;p&gt;_TRIX SUBROUTINE DESCRIPTIONS
j-l
Cij=[aij-kZ=lLikdk&amp;quot;tjk]/dj
2.General Comments. Interpretation oftheabove equations identifies that element _ijis
composed ofproducts oftheelements intheithrowof[L]times the_lements inthejthrowof
[L]times thediagonal elements of[D](Figure l). Also, element Cijaffects only theelements in
theithrowortheithcolumn of[L], (Figure 2).
Theabove considerations indicate themeans ofoptimizing thedecomposition process toher-
form only thenecessary operations andtokeep elements incore only aslong asneeded. Asan
example, if[A]wasstrictly banded, with abandwidth ofB,then theinner product calculation of
Cijextends only totheband asallother terms arezero (Figure 3). Also inthis example, all
terms of[L]incolumn 5affect only theelements inside thetriangle. Assoon asthese terms
arecomputed, column 5need notbeheld incore. Theoptimum algorithm forbanded matrices would
betohold thetriangular portion oftheband incore, compute terms corresponding tothefirst
column, output thefirst column, andmove thetriangular area down theband (Figure 4).
Inpractice, however, structural matrices arenotstrictly banded, butsemi-banded with c
fewscattered terms existing outside theband. Thebasic algorithm remains thesame excent that
theterms outside theband (active elements) must behandled inananalogous manner tothose
inside theband (band elements). This creates arectangular storage area forthe_ctive rows
(rows of[L]which co_tain atleast oneactive element) plus asecond traingular area forterms
arising outofinteractions between active rows. Thestorage requirements areshown inFigure 5.
Given amatrix [A], SDCOMP will determine theoptimum combination ofB(bandwidth), and
C(number ofactive rows) byestimating thetime required todecompose [A]forallcombinations
ofBandCandchoosing thepair corresponding totheminimum time.
Figures 6,7,and8show howstorage isallocated tovarious operations.
3.5-31&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P29</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_029/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
lOI
,..,..,&amp;hellip;&amp;hellip;.
___ 0:::::::::::::::::::::::::::::::::::::::::::::::::::::::::&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
0,_ I_
&lt;br&gt;
&lt;br&gt;
Figure I.Computation ofelement &lt;em&gt;ij:
,&lt;em&gt;o.o:[a_o.&lt;/em&gt;-&amp;lsquo;IO.&lt;/em&gt; &lt;em&gt;&amp;lsquo;0,&lt;/em&gt;-&amp;rsquo;&lt;em&gt;o,&lt;/em&gt;.&lt;em&gt;&amp;hellip;.&amp;rsquo;,o.&lt;/em&gt;°,&amp;rsquo;&lt;em&gt;,,J/&lt;/em&gt;
F
&lt;br&gt;
&amp;quot;:&amp;rsquo;:&amp;rsquo;.&amp;rsquo;.&amp;rsquo;.&amp;rsquo;;&amp;quot;:&amp;rsquo;::&amp;rsquo;&amp;quot;: i:i:!iiii:i[iii!i!iiiili!i_ili!:!
_i,i.%
li:i:li:i:i
Figure 2.Affect ofelement _ijo
3.5-32&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
I0)iii)iii)i_iiiiii!)iiiiiiiiiii)i)liiiii)iii_)i!iiiii
)i)iii!iiii)iiii!iiiiil)iiiiiiiiiiilili!iiiil)lliii!!)ii
&amp;lsquo;,&amp;rsquo;,&amp;rsquo;,Jiiii&amp;rsquo;&lt;em&gt;ii&amp;rsquo;&lt;/em&gt;:&amp;rsquo;,&amp;rsquo;,i&amp;rsquo;,&amp;rsquo;,&amp;rsquo;,&amp;rsquo;,iii{&lt;em&gt;&amp;rsquo;,i&amp;rsquo;,ii!i&amp;rsquo;&lt;/em&gt;&amp;rsquo;,&lt;em&gt;!&lt;/em&gt;,&amp;rsquo;,&amp;rsquo;&lt;em&gt;i&amp;rsquo;&lt;/em&gt;!&amp;rsquo;_! &amp;lsquo;&lt;em&gt;iii!&amp;rsquo;,ii&amp;rsquo;:l
ii!&lt;/em&gt;!i!&lt;em&gt;i&amp;rsquo;,ii&amp;rsquo;,&amp;rsquo;,ii&amp;rsquo;,i&amp;rsquo;,lii&amp;rsquo;,&amp;rsquo;,&amp;rsquo;,&amp;rsquo;,i)ii&lt;/em&gt;&amp;rsquo;&lt;em&gt;iii&amp;rsquo;?&lt;em&gt;ii&lt;/em&gt;
i_i::iiiiiilii&amp;rsquo;,iiiili!&lt;em&gt;i&amp;rsquo;,&amp;rsquo;,ii&amp;rsquo;,!!&amp;rsquo;,li&amp;rsquo;,&amp;rsquo;,.&amp;rsquo;,&amp;hellip;J&lt;/em&gt;&amp;hellip;. _
iliiiiiii!liliiii!iiiliiii_ilililliiii| i,#&lt;/em&gt;
Figure 3.Computation ofelement &lt;em&gt;ij(banded matrix):
&lt;em&gt;o,&lt;/em&gt;:[°&lt;em&gt;o.o-&lt;/em&gt;,o.&lt;/em&gt;.&lt;em&gt;o.q/&lt;/em&gt;
B
!i!iiiii!ili_ii!iiiiii!iiiiiiiii!ii!iiiiii)
_ii)i)iiiii&amp;rsquo;i!iiiiiililiiiiii!!
ii!&amp;rsquo;,iiiii_i
Figure 4.Corestorage require_nts forabandedr_atrix.
3.5-33&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
,,,,&lt;em&gt;,&lt;/em&gt;,,,,,&lt;em&gt;,&lt;/em&gt;,&lt;em&gt;,&lt;/em&gt;,&lt;em&gt;iiiiiiii!ii_iiiiiiiiii_iiiiiiiiii
•:&amp;rsquo;:&amp;rsquo;:&amp;rsquo;:&amp;rsquo;:&lt;/em&gt;&amp;rsquo;&lt;em&gt;&amp;rsquo;&lt;/em&gt;&amp;rsquo;&lt;em&gt;!i :::::::i:i:!
ooooo_i_i|&lt;em&gt;i_i_i_i_I_i_i_i_i_i_i1_i&lt;/em&gt;.&lt;/em&gt;
i_i!i_!!iii!i!i!!:i_i!ii_!ii!ii_!ii!&lt;em&gt;ii_I_ii_i!iii!i:i!i_iii:iiIi!ii&lt;/em&gt;!ii_!iiiiii_!_!_iii!!_i!&lt;em&gt;ii!&lt;em&gt;ii!&lt;/em&gt;
Figure 5.Corestorage requirements foramatrix v,it,&lt;/em&gt;,active rows.
3.5-34&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
IStorage forthepartially computed elements of[L]thatarewithin theband.
IIStorage foracompleted column of[L].
IIIStorage forthenextcolumn of[A]tobereadin.
IVStorage forthepartially computed elements of[L]thatareoutside theband.
VStorage forintermediate results computed frominteractions between activerows.
&lt;em&gt;&amp;ndash;12
B
II
i
r-123II!Z&amp;quot;,,
,llr!!&lt;br&gt;
B-1I
I
I SPILL C
rI&lt;br&gt;
;If&lt;br&gt;
½14SP-&lt;/em&gt; &lt;em&gt;14
A&lt;/em&gt;__&amp;lsquo;V
C
V&amp;ndash;
,qmB
IIV
I
I
B+IpLU_I;IS
-t
L
v I&amp;mdash;c&amp;mdash;-I
Figure 6.Definition ofstorage areas.
3.5-35&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Biiiiiii!iii_}
i:i:!:!
ii!!i!iiiiiiii
i_!&lt;em&gt;}iiiiiiii
!iiiiiiiiiiiii&lt;/em&gt;:::::::i!iiiii
:!i?}ii!i!!i!i
::::::::}:i:i:}
::::;::
iiiiiii
X0
X_iiiiiii_iiiiii!l_
iiiiiiiliiiiiiiil__&amp;rsquo;&lt;em&gt;&amp;rsquo;&lt;/em&gt;&amp;hellip;&amp;hellip;.!ii:!:!
iiii!iii_i_i_ii_iiiiiiii_
,,-&amp;lt;
00X
000
X0:::::::
:::::::
}}!_ii:i:i:i
/
D
0
0
0.:.:.:. &amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;:.:.: ,&amp;hellip;&amp;hellip;
•:.:.: &amp;gt;:.:.:
[IJ
V &amp;ndash;°&amp;rsquo;
00
00
00!&lt;em&gt;!&lt;/em&gt;!!i::&lt;em&gt;::i::ii_il
i&lt;/em&gt;#i;i_iil}ili_i)
:,:.&amp;raquo;: &amp;gt;:.x.
&amp;hellip;.. .&amp;gt;:.&amp;gt;:
i!i_iiiiii::::::::
:::::::::&amp;hellip;&amp;hellip;..
000
000
oioo
I
11i!i!iiiii!!iii!i!i!!iiiiiiii:.:.:.:.: :.:.:.:.:..:.:.:.:.
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; ,:.:.:.:.
::::::::: :::::::::: :.:.:.:.:
o}&lt;em&gt;}iiii_i;i::;:;::;:
000
000.:.:.:.:.:, .:.:.:.:
:.:.:.:.:. :.:.:.:.
:::::::::::i:i:i:i.;.:.&amp;gt;:.: &amp;hellip;&amp;hellip;..
:i:i:!:i:i:!:!:!:!
&amp;hellip;..
&amp;hellip;&amp;hellip;•i!iiiiiiii!iiiiiiii|&lt;/em&gt;
}:!:!:!:::!}:!:}:1::!:1i1::::: :.:.:.:.:.
;:;:::::::: ::::::::::!:::: :::::::::: ::::::::: ::::::::::
::::.i,i.11i}iii
&amp;hellip;&amp;hellip;.iliii?ili&amp;rsquo;,ii&amp;rsquo;,iili&amp;rsquo;i&amp;rsquo;i&amp;rsquo;i&amp;rsquo;i________ :}:i:i:i:ii_i!ili_i_!ililiiiiii_
!!i!i!i!i!
ili_iiiiili_i_ili_iiI_i_i_i_iiiiliiiiiiiiiiiliiiiiiiiiifiiiiiit_
Figure 7,Location ofstorage areaswithin thematrix,
3.5-36&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
11
I3
14
15
12
NZIll
IV
II
UNUSED CORE
I/OBUFFERS
Figure 8.Location ofstorage areas within core.
3.5-37&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
(1)
(2)
(3)
(4)
(5)ENTER
Initialize
Parameters
IMakeI/0Passon[A]
toGenerate theBvs.C
Vector andCopy[A]
ontoanAlternate File
Obtain theOptimum
BandC.Compute R
Allocate Core
IFilltheInitial Tri-
angle (AreaI).Usea
Scratch FileforColumns
ifR&amp;gt;B-1
J
YES
ReadBandPortion
oftheNextColumn
of[A]intoAreaIllProcess the
FinalTriangle(ll)
NO
Generate theCHOLESKY
Matrix [C] (13)
Figure 9.(a) SDCO_iP prograr, lflow(12)
REWRITE [L]
3.5-38&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
C=O? YES C=O?
(6) Active Row
YES
AddColumn of
Interaction Elements
(Area V)into Area IV
IMerce Active Row
(Area IV)into
Area III
I
Reduce theSize of |
theInteraction
TriangleRead Active Element
Portion oftheNext
Column of[A]
NOC7)
IAddElement into IExisting Row(Area IV)
Create NewRow
inArea IV
lExpand Interaction
Triangle forNewRow
Figure 9.(b) SDC_iIP program flow
3.5-39&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
(8)
(9)YMovetheFirstColumn of
AreaIintoAreaIIand
Divide bytheDiagonal
I
MoveFirstColumn of J
Active Elements (AreaIV)
IintoAreaII
Compute Interactions
Between Active Elements
andAddthem into
Area V
AddContributions oftheJ
Current Pivitol Column J
into Area I,Moving itUp
asYouProceed
AddTermstotheActive
Rows(AreaIV)and
MoveItUp
(I0)Write OutCompleted
Column of[L](Area II)
BumpColumn Counter
Figure 9.(c) SDCOilP program flow
3.5-40&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.Program Flow. Theflowchart inFigure 9gives thelogical flowofSDC_MP. Thefollowing
arecomments expanding oncertain areas oftheflowchart:
(1)Allocate buffers, initialize determinant,andwrite header records.
(2)Avector isgenerated containing thenu_er ofactive rowsforvarying bandwidths.
Thematrix [A]iscopied ontoanalternate fileforuseduring thedecomposition.
(3)Theestimated timefordecomposition iscomputed foreachcombination ofBandC.
TheBandCcorresponding totheminimum timeispicked. R,thenumber ofcolumns
which canbeheldincore, isalsoco_uted atthistime.
(4)Pointers tothevarious areas ofcoreshown inFigure 6arecomputed asafunction
ofB,CandR.
(5)Thebanded portion ofthefirst B-lcolumns of[A]arereadintoArea I.IfR_B-l,
columns arewritten onascratch file.
(6)Asthedecomposition proceeds, active rowsgradually merge intotheband. This
means acolumn fromArea Vwillmerge intoAreaIVandarowfromArea IVwill
merge intoArea III. When thisoccurs, thecurrent nu_er ofactive rowsdecreases
byoneandthesizeoftheinteraction triangle isreduced.
(7)Asactive elements corresponding tothenextcolumn of[A]arereadin,theyare
either added toanalready existing active row,oranewactive rowmust becreated.
Whenever anewrowiscreated, indices arestored identifying therow,theactive
element isstored inArea IV,andtheinteraction triangle isexpanded toaccomodate
theadded row.
(8) Asacolumn emerges fromthetriangle inArea I,itisacompleted column of[L].
(9) Before thecolumn canbeoutput, allterms involving thiscolumn mustbecomputed
andstored. These intermediate terms arestored ineither Areas I,IV,orV,denend-
ingwhere theelements arelocated.
(lO) Acolumn of[L]canbeoutput. Allareas oftemporary storage havebeenupdated.
Areas I,IV,andIllhaveallmoved overonecolumn relative totheir previous
position inthematrix.
3.5-41&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
(ll)Whenallcolumnsof[A]havebeenreadin,allactiverowshavemergedandonlyArea
Iexists.Thisfinaltriangleisprocessedtocompletethecomputation of[L].If
spillexists,asmorecoreismadeavailablebycolumnsof[L]beingoutput,addi-
tionalcolumnsofthespillfilearereadin.
(12)Thefilecontaining [L]isnowcomplete. Anadditional fileiscreatedwiththe
columnsof[L]writteninthereverseorder.Thisgeneratesapseudoupnertri-
angularmatrixthatisusedbyFBSforthesolutionofasetofequations.
(13)IfCHLSKYwasset,[L]isread,thediagonaltermpickedup,eachcolumnis
multiplied bythesquarerootofthediagonal,andtheresulting[C]matrixis
output.
AuxiliarySubroutines
Subroutine Name:L_P
Purpose:Tocomputetheinnerarithmetic loopofSDCOMP.
3.5.14.6 DesignRequirements
Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomnosition is
donewithoutpivoting.
Corestoragerequirements deDendontheparameters BandC.ForagivenBandC,AreasII,
Ill,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GINBbuffers.3.5.14.5
Filescontaining [L]and[L]T
standard NASTRAN format.
3.5.14.7
l•should beusedasinput only toFBSastheyarenotin
Information Messages
C@NMSG iscalledatentryandexitfromSDCBMP. Theline
xxxxSDC_MP
willappear twiceperdecomposition. Theexecution timeofSDC_MPwillbethedifference inthe
times(wherexxxxx=timeinseconds).
3.5-42&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
2.Message3023givesthevaluesoftheparameters, B,C,andRchosenforthedecomposition.
3.Message3027givestheestimatedtimeinsecondstodothedecomposition.
4.Message3024indicatesthatamatrixhasscatteredtermswayoffthediagonal(i.e.,a
largebandwidth). Insteadofsearchingallcombinations ofBandC,thesearchisstarted
atthemaximumbandwidth.
3.5.14.8 Diagnostic Messages
I.IfSDC_MPwasunabletofindacombination ofBandCwhichwouldmeetcorerestrictions,
fatalmessage3008occurs.
2.Inacodingsense,message3025ispossible. However,itviolatesthedesignofSDC_MP
andtherefore, ifobtained,shouldindicateanobscureprogramdesignerror,ormachineerror.
3.Message3026indicatesthatsufficient spacewasnotreservedforthegeneration ofthe
Bvs.Cvector.SDC_MPshouldberecompiled toincreaseBMAXandCMAX.
3.5-43(8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.15 DECAMP (Unsymmetric Matrix Decomposition)
3.5.15.1 EntryPoint: DECAMP
3.5.15.2 Purpose
Todecompose arealsquare matrix [A]intotheform
[a]=[L][U]
(where [L]isaunitlowertriangular matrix, and[U]isanuppertrianaular matrix), using
partial pivoting within thelowerband.
3.5.15.3 Calling Sequence
CALLDECAMP ($n,X,X,X)
C_MM_N /DC_MPX/ A(I),L(7),U(I),SCR(3),DET,P_WER,NX,MINDIA,B,BBAR,C,CBAR,R
n
X
A
L,U
SCR(3) -
DET -
P_WER -
NX
MINDIA -Statement number towhichcontrol istransferred if[A]issingular.
Anareaofcoreavailable toDECAMP.
Matrix control blockfortheinputmatrix [A](ifA(1)&amp;lt;O,avoid
re-writing [U]inreverse order).
Matrix control blocks fortheoutput matrices [L]and[U].
GINOfilenamesforthreescratch files-integer.
Double precision cellwhere thescaled value ofthedeterminant of[A]
willbestored.
B,BAR, 1C,CBAR,
R(i)
Scalefactor tobeapplied toDET(det([A]) =DET*IO**P@WER).
Number ofcomputer wordsavailable atX.
Double precision wordwhere thevalueoftheminimum diagonal of[U]is
stored.
Integer values describing theupper andlowersemi-bandwidths, number ofactive
rowsandcolumns andnumber ofcolumns of[L]heldincore,usedtodecompose
[A]. (IfB,BBAR=O,GENVEC iscalled tocompute theparameters before de-
composing [A].IfB,BBAR#O,thegivenparameters areusedfordecomposition).
3.5-44 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.15.4 Method
l.Mathematical Considerations: Byexpanding Equation l,introducing element notation,
andforming themultiplication, wecansolve fortheelements of[L]and[U]. These
equations aregiven by:
j-l
&lt;em&gt;ij=[ai.i-k_l_ikUkj]/uij&amp;rsquo; i&amp;gt;j (2)
i-l
uij=aij-Z_ikUkj ,i&amp;lt;j (3)k=l
2.General Comments: Theimplementation oftheabov&lt;/em&gt; ecuations isaccomplished with
several constraints inmind. Thedecomposition proce Jreisoptimized suchthatthe
minimum number ofoperations isperformed, with theminimum amount ofcoreused. To
accomplish this, theelements oftheinput matrix [A]areseparated intotwogroups:
terms inside theband (band elements), andterms outside theband (active elements).
Also, pivoting isusedonlywithin thelower bandtoavoid unnecessarily filling the
matrix with non-zero terms.
Since, inpractice, structural matrices tendtobesemi-banded withscattered terms
existing outside theband, thisdivision ofthematrix should optimize thedecomposition
process. Several parameters aregenerated todescribe thisdivision. Bisdefined as
theupper bandwidth, nasthelower bandwidth, Cisdefined asthenumber ofactive
columns, andCasthenumber ofactive rows, where anactive column isdefined asacolumn con-
taining oneormoreactive elements above thediagonal, andanactive rowcontains oneormore
active elements below thediagonal. Corresponding tothese parameters, several storage areas
aredefined tohold thevarious parts ofthematrix. Thedescription andlocation ofthese
areas aregiven inFigures l,2and3.Aflowchart forDECAMP isgiven inFigure 4.
Thestorage areas in
IStorage for
IIStorage for
IIIStorage for
IVStorage for
VStorage for
VIStorage for
VIIStorage forFigures I,2,and3aredefined asfollows:
thecompleted columns of[L]still required forcomputation.
thecurrent column being computed.
active column elements.
active rowelements.
elements created byinteractions between active rowandcolumn elements.
indexes identifying active columns.
indexes identifying activ) rows.
3.5-45&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
lISP
11
lI
+1
R
\II
IPAK
V13SP&amp;mdash;-
-_+1
22-ff+B
C _J,I,I
IIIIIIII
i
IVl VII
C/2 C/2
Figure I.Definition ofstorage areas forDECO;IP.
3.5-46&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
B
&lt;em&gt;iilili&lt;/em&gt;-i_iiiiiiii
,-°°.°.,
,&amp;rsquo;.:.:.:
,.-.-.:.i::iii::ooo
iiii!iii&amp;ndash;iiiooo
ii_iiiiiiiiiii::i_iiiiiooo
ii:i-i_iiiiilii!iiiiiiii..-..:i,: ooo
&lt;em&gt;iii!iiii&lt;/em&gt;:&lt;strong&gt;:&lt;em&gt;:::.:.:.&lt;em&gt;iiiiii::&lt;em&gt;i-iii:joo
!iiiiiii-ii!i!i*!:i:&lt;/em&gt;.o:.:..,!i!iiiiiii_iiiiiiiiiiio
!iii!!ii_iiilii!ili_ili:,iiiiiii::i-&lt;em&gt;i!iiiiiii-!&lt;em&gt;i!•:-:-:..;-:.;&amp;lt; r.:.&amp;rsquo;.&amp;rsquo;,
ll;i;i:i&lt;/em&gt;-:i:!&lt;/em&gt;.i.i!iil:i?iiiliii_iiii:::&lt;/em&gt;::::?&lt;/em&gt;:&lt;em&gt;:&lt;/em&gt;
li!!::ii_!&lt;em&gt;iill_iii-::i_i::ii::i.&lt;em&gt;ii_i&lt;/em&gt;
i&lt;/em&gt;!&lt;em&gt;iii-&lt;em&gt;iil_i!iiiii
I&amp;ndash;&lt;em&gt;i_C.:;;
\X
0 II 0
00 I 0X
000&lt;/em&gt; 00
.::..:::::&lt;/em&gt;::-&amp;rsquo;:::-&amp;rsquo;n_00 010
i::&amp;rsquo;:&amp;quot;::;:::::.&amp;rsquo;.,i&amp;rsquo;.&amp;quot;..&amp;quot;&lt;em&gt;oooolo
,..&lt;/em&gt;.:.&lt;/em&gt;-,,&amp;mdash;.;::i:::i:-ii!ii-,!!.:.-&amp;quot;_ioo_o!o
®iii&amp;quot;i_ii_i oooo
&lt;em&gt;&amp;rsquo;-&amp;rsquo;.&amp;rsquo;-&amp;rsquo;-&amp;hellip;..,::-::-&lt;/em&gt;{&lt;em&gt;i:&amp;rsquo;:&lt;/em&gt; 00
&amp;hellip;&amp;hellip;i_iiooo
;&lt;/strong&gt;:-&amp;rsquo;&lt;em&gt;:::&lt;/em&gt;:&lt;em&gt;:!Ii-&lt;em&gt;i::iiiii::&lt;em&gt;ii&lt;/em&gt;!iioo &amp;hellip;..:.,, ;&lt;/em&gt;-:-&lt;/em&gt;:.:&lt;em&gt;-&amp;rsquo;&lt;/em&gt;&amp;hellip;..
&lt;em&gt;i :o°o&amp;rsquo;;&amp;lsquo;I ,-°-°-°-,
&amp;lsquo;&lt;em&gt;o &lt;em&gt;i&amp;quot;:&amp;rsquo;:&amp;rsquo;:&amp;rsquo;__ili:i:i:i:i!;&lt;/em&gt;.i&lt;/em&gt;!:.:.:.:,:!::::::&lt;em&gt;i&lt;/em&gt;!.!!iiii::xoooooooo_i_i&lt;/em&gt;&amp;hellip;Jl
xooooooooFi!::iii_iiiiiiK&amp;rsquo;;i_.&amp;ndash;:&lt;em&gt;&amp;rsquo;,-&lt;/em&gt;.__&amp;quot;-&amp;rsquo;.&amp;mdash;&amp;ndash;.&amp;rsquo;:&amp;quot;,.-&amp;hellip;..&lt;em&gt;&amp;hellip;&amp;hellip;&lt;/em&gt;.:-.:.&amp;rsquo;
xooooooooo:i!!iiiii_ii!i_iiiiii_iiIII
Figure 2.Location ofstorage areas within thematrix
3.5-47 (311171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
12
13
14
15
16SP
17SP
NZII
III
IV
Vl
Vll
UNUSED CORE
I/0BUFFERS
Figure 3.Allocation ofcore forDECAMP
3.5-48&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
(1)
(3)
(4)
(B)ENTER
Initlallze IParameters
. YES
@NO
PicktheOptimum
B,B,C,C,R (GENVEC)
Initialize Pointers
toVariousCore
Areas
Transpose the
Active Column
Terms (TRANSP)(2)
Solve aMatrixof
Order1or2
(&lt;em&gt;NETW&lt;/em&gt;)RETURi_
YES
(6)
Generate Active Columns I
Corresponding toActive l.__
Elements intheFirst |
B+1Rowsof[A] |
Figure 4.(a)DECgMP programflow
3.5-49&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
(7)
(8)
(9)
(I0)
(ll)ES
Read Band Portion of
Ainto Area Ill
Read Active Row
Termsinto Area IV
NO
AddActive Column
(Area III) into Area I!
AcldInteraction Terms
(Area V)toArea IV.
!
Operate ontheCurrent )
IColumn of[A]by All
lPrevious Columns of[L]
Compute theElements
forActive Rows(22)
Finish OutputingColumns of[L],
Re-write [U]
(FINWRT)RETURN
(12)
ISearch theLower Band of1
_Area IIfortheMaximun _ &lt;em&gt;a&lt;/em&gt;
&amp;ldquo;IElementandInterchange iIRowstoMove ittothe I
JDlagor_1 .
Figure4.(b) DECAMP Program flow
3.5-50&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
(13)]
(14)
(15)
(16)
(17)
(18)?Interchange Active
Column Elements and
AddinTerms from
LastColumn of[L]
Output Column of[U]
PlusActive Column
Terms
Compute Active Row-
ColumnInteraction
Elements
MoveElements in
Area IllOneRowUp
Output Column of[L]
&amp;lsquo;4ove Elements ofArea
Over OneColumn. Add
Lower BandofArea II
toArea IMove Elements of
Area IVOverOne
Column
ReadNextRowof
Active Column
Elements(19)
(2o)
ZeroArea II
Merge Interaction
Elements intoAreaIII
ifNecessary(21)
Figure 4.(c) DECAMP program flow
3.5-51&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P3</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_003/</guid>
      <description>
        
        
        &lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
b.Diversion ofauxiliary storage unitsfromfunctional tosystem usage.
c.System housekeeping timeforperforming executive functions thatdonotdirectly
further problem solution.
These criteria areachieved inNASTRAN through modular separation offunctional capabilities,
organized underanefficient, problem-independent Executive System.
Thisapproach isabsolutely essential foranycomplex multi-operation, multi-file application
program suchasNASTRAN. Toseethis,onemustexamine theimplications ofmodularity inprogram
organization.
Anyapplication computer program provides aselection ofcomputational sequences. These are
controlled bytheuserthrough externally provided options andparameter values. Sincenouser
willwishtoobserve theresult ofeachcalculation, theseoptions alsoprovide fortheselection
ofthedatatobeoutput.
Inaddition toexternally setoptions, internal switches whose setting depend upontests
performed during thecalculations willcontrol thecomputation sequences. There is,therefore,
anatural separation ofcomputations intofunctional blocks. Theprincipal blocks arecalled
functional modules; modules themselves ofcourse may,andusually must,befurther organized ona
sub-modular basis.
Despite thisseparation, however, itisclearthatmodules cannot becompletely independent,
sincetheyarealldirected toward solution ofthesamegeneral problem. Inparticular, they
mustintercommunicate dataamongthemselves. Theprincipal problem inorganizing anyapplication
program, largeorsmall, isdesigning thedatainterfaces between modules.
Forsmallprograms, thestandard techniques aretocommunicate dataviasubroutine calling
sequences andcommon dataregions incore. Forprograms thathandle larger amounts ofdata,
auxiliary storage isused;however, strict specifications ofthedevice_ usedandofthedata
record formats areusually imposed.
Thepenalty paidisthatof&amp;quot;sideeffects&amp;quot;. Achange inaminor subroutine initiates a
modification ofthedatainterfaces thatpropagates through theentire program. Whentheprogram
issmall, theseeffects maynotbeserious. Foracomplex program likeNASTRAN, however, they
would bedisastrous.
1,I-2&lt;/p&gt;
&lt;p&gt;PROGRAM OVERVIEW
Thisproblem hasbeensolved inNASTRAN byaseparation ofsystem functions, performed by
anExecutive System, fromproblem solution functions, accomplished bymodules separated strictly
along functional lines. Eachmodule isindependent ofallother modules inthesense that
modification ofamodule, oraddition ofanewmodule, will notingeneral require modification
ofother modules. Evenso,programming constraints onmodule development doexist butareminor.
Theessential restrictions are:
I.Modules mayinterface with other modules onlythrough auxiliary storage files, asopposed
topassing information between eachother while incore.
2.Since theavailability andallocation ofauxiliary files formodule execution interact
with theexecution ofother modules, nomodule canspecify orallocate files foritsinput or
output data. Allauxiliary storage allocation isreserved asanExecutive function.
3.Modules operate asindependent subprograms, andmaynotcall, orbecalled by,other
modules. Theymaybeentered onlyfromtheExecutive System.
4.Modules mayinterface with theExecutive System through aparameter table thatis
maintained bytheExecutive System. User-specified options andparameters arecommunicated
tomodules inthisway. Themajor lineofcommunication isone-way, fromusertoExecutive
routine tomodule. However, inaddition, anappreciable twowaycommunication, frommodule
back toexecutive routine (andtherefore toother modules) ispermitted viatheparameter table.
5.Intra-module parameter communication isformat-free inthesense thateachmodule
defines andorders itsownlocal parameter setinternally. Thuseachmodule is
independent ofcommon dataformatting byanyother module.
Noother constraints, except those imposed bytheresident compilers andoperating systems,
arerequired forfunctional modules.
l.l.2 ProBram Organization
Because oftheverylarge size oftheNASTRAN program (more than750decks and300individual
overlay segments), execution asonephysical program wasnotpossible. However, tomeet the
stated design objectives, itwasrequired thatNASTRA_ appear totheresident operating system as
oneprogram.
1.1-3&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
Aprogram structure evolved which isbasically computer independent, although thewayin
which thecodestructure issupported varies across thecomputers.
TheNASTRAN program isdivided intoaseries oflogical pieces called links. Eachlinkcon-
tainsitsownrootsegment (thesetofsubprograms which isalways coreresident forthatlink)
anditsowncomplete overlay structure. Eachlinkiscapable ofperforming apredefined subset
ofNASTRAN operations. Communication between linksoccurs through computer files. Control ofthe
sequence ofexecution ofthelinksisperformed entirely bytheNASTRAN program andrequires no
operator intervention. Asaresult ofthisapproach, aNASTRAN program execution appears tothe
resident operating system asanormal batchjobtobeprocessed inthebatchstream. Detailed
descriptions ofthewayinwhichthelinkstructure isimplemented oneachcomputer aregiven
insection 5.
1.I-4&lt;/p&gt;
&lt;p&gt;NASTRAN EXECUTIVE SYSTEM
1.2NASTRAN EXECUTIVE SYSTEM
1.2.1Introduction
Theessential functions oftheExecutive System are:
I.Establish andcontrol thesequence ofmodule executions according tooptions specified
bytheuser.
2.Establish, protect, andcommunicate values ofparameters foreach module.
3.Allocate system files toalldatablocks (adatablock designates asetofdata, matrix
ortable, occupying afile) generated during program execution. Afile is&amp;quot;allocated&amp;quot; toa
datablock, andadatablock is&amp;quot;assigned&amp;quot; toafile. Thegeneral datablock I/&lt;em&gt;routine
(GIN&lt;/em&gt;) andthedatacardconversion routines (XRCARD andRCARD) areconsidered Input/Output
utilities andarediscussed separately insection 1.6.
4.Maintain afullrestart capability forrestoring aprogram execution after either a
scheduled orunscheduled interruption.
TheExecutive System isopen-ended inthesense thatitcanaccommodate anessentially
unlimited number cffunctional modules, files, andparameters. Modification oftheExecutive
System necessary forchange, addition, orextension offunctional modules isrestricted to
changes inentries incontrol tables stored within theExecutive routines.
Program execution isdivided intotwophases: l)thePreface, inwhich modules XCSA, IFPI,
XS_RT, IFPandXGPIareexecuted to:a)process theNASTRAN input datadeckandb)perform
general problem initialization; and2)theprogram body itself, inwhich thesequence ofprogram
operations iscontrolled bytheOperation Sequence Control Array (_SCAR) Executive table, which
wasdeveloped intheXGPImodule ofthePreface. Adiagram ofasample NASTRAN input data deck
isshown inFigure I.Note thataNASTRAN input datadeckconsists of3separate decks: l)the
Executive Control Deck, 2)theCaseControl Deckand3)theBulk DataDeck. Adetailed descrip-
tionofthecontents oftheNASTRAN datadeckisgiven insection 2oftheUser&amp;rsquo;s Manual. The
flowofoperations during thePreface ispresented inFigure 2.Thenumbers intheblocks in
Figure 2refer tosection numbers where more detailed explanations ofthesubroutines andmodules
canbefound.
1.2-I&lt;/p&gt;
&lt;p&gt;NASTRANPROGRAMMING FUNDAMENTALS
&lt;em&gt;&amp;rsquo;&lt;/em&gt;&amp;rsquo; IENDDATA
&lt;em&gt;C&lt;/em&gt;.o&amp;quot;_ IDISPL=ALL
,.jx) iOUTPUT&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;IL(&lt;em&gt;AD=2
•__\ ISPC:5&amp;rsquo;
___ ITITLE =SAMPLE PR_IBLEM
&lt;em&gt;o&lt;/em&gt;&amp;quot;&lt;/em&gt; ICEND
&lt;em&gt;J%&lt;/em&gt; ISeLl,O
&lt;em&gt;x&lt;/em&gt; IAPPDISPLACEMENTITIME 40
ICHKPNT =YES
IDJBBOOO,ABC&amp;lt;
&lt;br&gt;
\
Figure I.Sample NASTRAN input datadeck.
l.2-2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NASTRANEXECUTIVESYSTEM
CENTRY)
1
IGenerate theInitial FileAllocation I Tables (GNFIAT-3.3L.4)
IReadandAnalyze theExecutive Control Deck(XCSA-4.2)
Ip_cesst_ICaseC°nt_1_c_I_Pl-,.3_
ISorttheBulkDataDeck I (&lt;a href=&#34;mailto:XS@RT-4.4&#34; &gt;XS@RT-4.4&lt;/a&gt;)
Conical ShellProcess theBulkDataDeck
(IFP-4.5)
_ H_droelastic
No
Further Process DataSDecific tothe Hydroelastic Problem (IFP4-4.89) or
Acoustic Problem (IFP5-4.90)Further Process DataSpecific to
theConical Shell Problem (IFP3-4.6)
Perform General Problem
Initialization (XGPI-4.7)
Figure 2.Flowofoperationsduring thePerface.
1.2-3 (8/I/72)&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
1.2.2 Executive Operations During thePreface
Thesequence ofPreface operations showninFigure 2iscontrolled bytheSequence Monitor
Initialization subroutine, SEMINT (seesection 3.3.3). Eachroutine called bySEMINT isdis-
cussed inthefollowing sections. Thenumbers inthesection headings refertosection numbers
wheremoredetailed information onthesubroutine ormodule canbefound.
1.2.2.1 Generation oftheInitial FileAllocation Tables (GNFIAT section 3.3.4)
Twofileallocation tables aremaintained bytheNASTRAN Executive System. Onetable, FIAT,
(seesection 2.4)defines thefilestowhichdatablocks generated during solution oftheproblem
willbeallocated. Thesecond table, XFIAT, (seesection 2.4)includes filestowhichpermanent
Executive datablocks, suchastheNewProblem Tape,theOldProblem Tape,plottapes, andthe
User&amp;rsquo;s Master Fileareassigned.
TheNewProblem Tapewillcontain thosedatablocks generated during thesolution thatare
necessary forrestarting theproblem atanypoint. TheOldProblem Tapecontains thedatablocks
savedfromsomeprevious execution thatmayservetobypass stepsinthesolution ofthenew
problem. TheUser&amp;rsquo;s Master Fileisapermanent collection ofuseful information, suchasmaterial
properties, thatmaybeusedtogenerate inputdata.
Thegeneration oftheXFIATandFIATtables isacomputer dependent operation sincedirect
interface withtheoperating system ofthecomputer mustbemade. TheGNFIAT routine, which
accomplishes thisfunction, interrogates filetables inthenucleus oftheoperating system.
Fileswhich areavailable forusebytheNASTRAN program arereserved, andtheunitnumbers for
thesefilesarestored intheNASTRAN fileallocation tables. Anindication ofwhich unitsare
physical tapes isalsostored. Ifthenumber offilesavailable isinsufficient torunthepro-
blem,anerrormessage isgenerated, andtherunisaborted.
1.2.2.2 Analysis oftheExecutive Control Deck(XCSASection 4.2)
TheExecutive Control Deckisprocessed andanalyzed bytheXCSAExecutive Preface module.
TheExecutive Control Deckincludes cardswhich describe thenature andtypeofsolution tobe
performed. Thisincludes anidentification oftheproblem, anestimated timeforsolution ofthe
problem, theapproach, aselection oftheRigid Format tobeexecuted oranalternative sequence
ofNASTRAN operations (DMAP) tocontrol thesolution, arestart deckfromaprevious runifthe
1.2-4&lt;/p&gt;
&lt;p&gt;NASTRAN EXECUTIVE SYSTEM
solution istoberestarted, anindication ofanydiagnostic printout tobemade, aspecification
ofwhether theproblem istobecheckpointed ornot,and, ifaRigid Format isselected, any
desired alterations tothatformat. Section 2oftheUser&amp;rsquo;s Manual should beconsulted forthe
formats of,andrestrictions on,eachofthecards intheExecutive Control Deck. Theapproach
(APP) card, andthesolution (S_L) card, which selects aparticular solution (Rigid Format) tobe
executed, areworthy ofspecial note. However, firstsome introductory definitions arerequired.
Thesequence ofoperations tobeexecuted during theprogram body iswritten inadatablock
oriented language called DMAP, anacronym for&amp;quot;Direct Matrix Abstraction Program&amp;quot;. ADMAP instruc-
tionisastatement intheDMAPlanguage, aDMAPsequence isasetofDMAPinstructions, andaDMAP
loopisaDMAPsequence toberepeated. ADMAPmodule isonewhich is&amp;quot;called&amp;quot; bymeans ofa
DMAPinstruction.
ARigid Format consists of: a)afixed pre-stored DMAP sequence andb)itsassociated
restart tables. ARigid Format performs aspecific (structural) problem solution. Section 3of
theUser&amp;rsquo;s Manual presents theDMAPsequence andtheassociated restart tables foreachRigid
Format.
TheAPPcardoftheExecutive Control Deckdefines theproblem solution approach. TheAPP
cardisrequired, andthere aretwooptions ontheAPPcard: DISPLACEMENT orDMAP. TheS@Lcard
hastheform
S_L n,m
where n=Rigid Format number, andm=asubset oftheRigid Format. TheS_Lcardisrequired if
theDISPLACEMENT option ischosen ontheAPPcard. TheS_Lcardmustnotbepresent inthedeck
iftheDMAP option ischosen.
Inaddition tousing theRigid Formats provided automatically byNASTRAN, theusermaywish
either toexecute aseries ofmodules inamanner different fromthatprovided bytheRigid
Format, ortoperform aseries ofmatrix operations which arenotcontained inanyexisting Rigid
Format. Ifthemodifications toanexisting Rigid Format areminor, theALTER feature described
inSection 2oftheUser&amp;rsquo;s Manual maybeemployed. Otherwise, auser-written Direct Matrix
Abstraction Program (D_P) should beused, inwhich casethecard
APPD_JAP
mustbeused. Chapter 5oftheUser&amp;rsquo;s Manual discusses DMAP.
1.2-5&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
Eachofthecardscomprising theExecutive Control DeckisreadviaXRCARD (3.4.19) and
analyzed. Depending onthecard,information iseither stored invarious Executive tables main-
tained incorestorage orwritten intheExecutive Control Table (2.4.2.5) ontheNewProblem
Tapeforfurther processing during thegeneral problem initialization phase (XGPI-4.7) ofthe
Preface. Figure 3presents theformat oftheProblem Tape. Theformats oftheNewandtheOld
Problem Tapesareidentical; onlychronology defines theirseparate functions.
1.2.2.3 Processing oftheCaseControl Deck(IFPISection 4.3)
TheCaseControl Deckincludes thefollowing classes ofcards: selection ofspecific sets
ofdatafromtheBulkDataDeck,selection ofprinted orpunched output, definition ofsubcases,
definition ofstructural plotstobemade,anddefinition ofXYplotstobemade. Section 2of
theUser&amp;rsquo;s Manual discusses indetail allcardsoftheCaseControl Deck.
ThisdeckisreadviaXRCARD (3.4.19) andprocessed. Information defining setselection,
output selection andsubcase definition iswritten intotheCaseControl datablock, CASECC.
Information defining plotrequests iswritten inthePlotControl (PCDB) andXYControl (XYCDB)
datablocks.
Iftheproblem isarestart, acomparison withtheCaseControl Deckfromtheprevious run
ismade. Differences arenoted inanExecutive restart table, which isusedinthegeneral pro-
bleminitialization phase(XGPI-4.7) ofthePreface.
1.2.2.4 Sorting oftheBulkDataDeck(XS_RT Section 4.4)
Thefunction oftheXS_RTroutine istoprepare afileontheNewProblem Tape(seesection
1.2.2.1) whichcontains thesorted BulkDataDeck(bulkdata). Operation oftheroutine is
influenced bythetypeofrun. Iftherunisacoldstart, thebulk&amp;rsquo;data isreadfromthesystem
inputfile(e.g.cardreader) ortheUser&amp;rsquo;s Master File,sorted, andwritten ontheNewProblem
Tape. Iftherunisanunmodified restart, (restarts arediscussed insection I.I0), thebulk
dataiscopied fromtheOldProblem Tape(seesection 1.2.2.1) totheNewProblem Tape. Ifthe
runisamodified restart, thebulkdataisreadfromtheOldProblem Tape,andcardsaredeleted
and/or addedinaccordance withcardsinthesystem inputstream. Themodified bulkdatais
sorted andwritten ontheNewProblem Tape. Additionally, anychanges inthedataarenoted in
theExecutive restart table.
Aprinted listoftheunsorted bulkdataisgiven ifrequested byanECHOcardintheCase
Control Deck. Similarly, thesorted bulkdataisechoed onrequest.
1.2-6&lt;/p&gt;
&lt;p&gt;NASTRAN EXECUTIVE SYSTEM
Allfiles begin with an
eight character (2word)
BCDheader record.
PROBLEM IDFILE
(always present)
ALTER FILE
(only ifALTER
cards arepresent)
EXECUTIVE C_NTROL TABLE FILE
(always present)
CASEC_NTR_L FILE
(always present)
BULKDATACARD FILE
(always present)
PARAMETER VALUE FILE
(only ifPARAM cards
arepresent) [CHECKPBINT FILES {(only ifCHKPi4T or
RESTART cardispresent)
{PROB. TAPEDICT. FILE
(only ifCHECKPOINT
FILES arepresent)B
M_NTH -Is___l&amp;ndash; DAY__&amp;ndash;L YEAR
REEL#
_ XALTER (header) _AA
_ XCSA (header) _
BULKDATA (header) &amp;ndash;
XPTDIC (header) &lt;em&gt;^A first andsecond fields from IDcard (BCD)
-&lt;/em&gt;&amp;mdash;problem date
_reel sequence no.
(seesection 2.4.2.6)
Note: ^denotes BCDblank
(seesection 2.4.2.5)
(seesection 2.3.1.I)
_bulk datacard images
(seesection 2.4.2.4)
_all checkpointed datablocks
separated byE_F&amp;rsquo;s
_always thelastfile
(seesection 2.4.2.3)
Figure 3.Problem tape format (same format for;_ewProblem Tape andOldProblem Tape).
1.2-7&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
Sincethecollating sequence ofalphanumeric characters varies fromcomputer tocomputer, the
sortroutine converts allcharacters toaninternal codepriortosorting. Following thesort,
thecharacters arereconverted. Inthisway,thecollating sequence iscomputer independent.
Thealgorithm usedbythesortroutine isbiased toward thecasewhere thedatainsort
ornearly insort. Consequently, BulkDataDeckswhicharenearly insortwillbeprocessed
efficiently bytheroutine.
1.2.2.5 Processing oftheBulkDataDeck(IFPSection 4.5)
Thesorted BulkDataDeckisreadcard-by-card fromtheNewProblem TapebytheInputFile
Processor (IFP)andconverted tointernal binary formbyRCARD(3.4.20). Eachofthecardsis
checked forcorrectness offormat. Ifanydataerrors aredetected, amessage iswritten, anda
switch issettoterminate therunattheconclusion ofthePreface. Section 2oftheUser&amp;rsquo;s
Manual presents adetailed description ofallcardsoftheBulkDataDeck.
Processing ofeachbulkdatacarddepends onthetypeofcard. Allbulkdatacardsofthe
sametypearewritten intothelogical record towhich thecardtypehasbeenassigned. These
records areorganized intodatablocks classified according togeneral categories ofuseand
written onprescribed preallocated files.
1.2.2.6 Processing ofConical ShellData(IFP3Section 4.6)
Iftheproblem isaconical shellproblem, further processing ofthebulkdataspecific to
theconical shellproblem isaccomplished. Thenature ofthisprocessing istoconvert datafor
theconical shellmodel intoformats ofaconventional statics problem. Theresult isthatthe
conical shellproblem canbedescribed inaformat convenient totheanalyst a_dprocessed by
NASTRAN inaformat convenient totheprogram.
1.2.2.7 Processing ofHydroelastic Data(IFP4Section 4.89)
Ifhydroelastic analysis dataexists, thisdatamustbeconverted tothedatablockformats
andmerged withexisting dataoutput fromIFP.Thismodule creates gridpoint, scalar point,
element connection, andconstraint dataaswellasproducing asection intheMATP_L datablock.
1.2-8(8/I/72)&lt;/p&gt;
&lt;p&gt;NASTRAN EXECUTIVE SYSTEM
1.2.2.8 Processing ofAcoustic Data(IFP5 Section 4.91)
Ifacoustic analysis dataexists, theIFP5module generates andmerges gridpoints, scalar
elements, andplotting elements with theexisting datablocks.
1.2.2.9 General Problem Initialization (XGPI Section 4.7)
TheExecutive General Problem Initialization (XGPI) module istheheart ofthePreface. Its
principal function istogenerate theOperation Sequence Control Array (_SCAR-2.4.2.1), which
defines theproblem solution sequence. TheBSCAR consists ofasequence ofentries, with each
entry containing alloftheinformation needed toexecute onestepoftheproblem solution. The
_SCAR isgenerated from information supplied bytheuserthrough hisentries intheExecutive
Control Deck. Thisinformation issupplied bytheS_Lcard, which points toaRigid Format, or
byausersupplied DMAPsequence.
Theinitial sequence ofinstructions waswritten intheExecutive Control Table (2.4.2.5)
ontheNewProblem TapebytheXCSAPreface module. This table isreadtoinitiate assembly of
theBSCAR.
Iftheproblem isarestart, therestart dictionary (contained intheExecutive Control
Table) andtheExecutive restart table areanalyzed todetermine which datablocks areneeded to
restart thesolution andwhich operations inthe_SCAR needtobeexecuted tocomplete the
solution. Entries intheBSCAR foroperations notrequired forthecurrent solution areflagged
fornooperation.
Toaidinefficient assignment ofdatablocks tofiles, twoattributes arecomputed and
included with eachdatablock ineachentry oftheBSCAR. These attributes are: a)theBSCAR
sequence nun_er when thedatablock isnextused(NTU) andb)the_SCAR sequence nu_er when the
datablock islastused(LTU). Details ofthefileallocation arediscussed insection 1.2.3.3.
Whengeneration ofthe_SCAR iscomplete, itiswritten ontheDataPoolFile(P_L). If
theproblem isrestart, datablocks needed forthecurrent solution arecopied fromtheOld
Problem Tape totheData PoolFile.
1.2-9 (811172)&lt;/p&gt;
&lt;p&gt;NASTRAN EXECUTIVE SYSTEM
1.2.3 Executive Operations Durin9Problem Solution
1.2.3.1 Sequence Monitor (XSEMi Section 3.3.7)
WhenthePreface hasbeencompleted, solution oftheproblem isinitiated. Thissolution
iscontrolled bythesequence monitor. Figure 4showstheflowforthesequence monitor. Note
thatthereareicopies ofXSEMiwithin NASTRAN, onecontrolling eachlink&amp;rsquo;s operation. Section
1.1.2defined thenecessity forthesedivisions.
Thesequence monitor readsanentryfromthe_SCAR (2.4.2.1) which defines onestepinthe
problem solution intermsof:theoperation tobeperformed, datablocks required forinput,
datablocks tobeoutput, scratch filesrequired andparameters used. TheFileStatus Table
(FIST-2.4.1.3), which relates theinternal datablockreference numbers (seeSection 1.6.4) to
thefileposition intheFileAllocation Table (FIAT-2.4°1.2), iscreated bytheFISTgenerator,
subroutine GNFIST. Whenthestatus tableiscomplete, XSEMimoves theparameters required for
theoperation intoblank common andcallstherequested module (ifwithin thecurrent link)to
begintheoperation. Iftherequested module isnotwithin thecurrent link,ENDSYS (seeSection
3.3.5) iscalled andtheSequence Monitor within thenewlinkisexecuted.
Withtheexception ofXSFA,thesevenroutines described inthefollowing subsections are
Executive modules called directly byXSEMitoperform theirspecified functions.
1.2-9a (8/I/72)&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
_d ENTER
ICallSEMINT (Preface Only)
_&lt;em&gt;ReadnextI&lt;/em&gt;&amp;ldquo;OSCARentry
_;o
_Y_s
Generate FIST for
Input, _utput,
Scratch DataBlocks
MoveParameters IfromVPS
toBlankCommon
No
ICallmodule ICallEXECRoutine
(XCEI, CHKPNT, PURGE
EQUIV, SAVE)
Call 1ENDSYS
CallMessage 1Writer
MSGWRT
Figure 4.Flowdiagram forthesequence monitor, XSEMi.
1.2-I0&lt;/p&gt;
&lt;p&gt;NASTRANEXECUTIVESYSTEM
1.2.3.2 FIST Generator (GNFIST Section 3.3.9)
TheFISTgenerator, subroutine GNFIST, creates theFileStatus Table(FIST), whichcontains
thelinkage between theinternal datablockreference numbers andtheactual system fileslisted
intheFileAllocation Table (FIAT). Eachinput, output andscratch datablockrequired bythe
forthcoming module isassigned aninternal reference number iffoundtobeactive inFIAT. A
datablockfoundtobeinactive, thatispurged ornotgenerated, willnotbeassigned areference
number. Thismissing reference number willcausetheaccessing module tobesignaled regarding
theinactive status. If,during thegeneration oftheFIST,adatablock isnotfoundinthe
FIAT,active orinactive, theExecutive Segment FileAllocator (XSFA) module iscalled byGNFIST
tomakeafileavailable tothesubject datablock.
1.2.3.3 Segment FileAllocator (XSFASection 4.9)
TheExecutive Segment File Allocator (XSFA) module, which iscalled exclusively byGNFIST,
istheadministrative manager ofdata blocks forNASTRAN. Since, ingeneral, thenumber ofdata
blocks required forsolution ofaproblem farexceeds thenumber offiles available, assignment
ofdata blocks tofiles isacritical operation forefficient execution ofNASTRAN.
TheExecutive Segment File Allocator module iscalled whenever adata block isrequired for
execution ofanoperation butisnotcurrently assigned toafile (i.e., does notappear inthe
FIAT). When theSegment File Allocator iscalled, itattempts toallocate notjust forthedata
block initiating thecall, butforasmuch oftheremaining problem solution aspossible. This
allocation depends onthetype ofproblem, thenumber offiles available, andtherange ofuseof
theremaining data blocks.
1.2-11 (8/I/72)&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
TheSegment FileAllocator readsentries fromthe_SCARfromthepointofcurrent operation
totheendoftheproblem solution. TheFIATtableentries arecreated inwhichattributes of
thedatablocks, including theirnextuse(NTU)andlastuse(LTU), arestored. Datablocks which
arecurrently assigned tofilesbutarenolonger required forproblem solution arereleased.
Incertain cases, whentherangeofuseofadatablockislarge, itmaynotbepossible to
allocate afiletothedatablockthroughout itsrangeofuse.Inthiscase,pooling ofthe
datablockisrequired sothatthefiletowhichthedatablockwasassigned maybefreedfor
another allocation. Thenexttimeused(NTU)attribute foradatablockisusedtoefficiently
pooldatablocks. Ingeneral, thedatablockwhosenextuseisthefurthest fromthecurrent
pointispooled, thatis,copied ontotheDataPoolFile(P_L). Theformat oftheDataPool
Fileisshown inFigure 5.
Oneadditional checkismadewithregard topooling. Theoperation oftheSegment File
Allocator itself islessexpensive thanapooling operation. Therefore, pooling occurs only
whenthemodule forwhichtheallocation wasrequired cannot beallocated without pooling.
_hentheSegment FileAllocator iscomplete, anewFileAllocation Table (FIAT) hasbeen
generated. Thistableisuseduntilthesolution againreaches apointwhereadatablockis
required toexecute anoperation butisnotassigned toafile.
1.2.3.4 Interpretation ofExecutive Control Entries (XCEISections 4.11,4.12,4.13,4.14)
Executive control entries include theDMAPinstructions: REPT,JUMP,C_NDandEXIT.
Executive control entries inthe_SCARareprocessed bytheExecutive Control EntryInterpretor
(XCEI). Whensuchanentry isencountered inthe_SCAR, theControl Entry Interpretor iscalled
byXSEMi. Iftheoperation isajump,cor,ditional jumporrepeat, the_SCARisrepositioned
accordingly. Iftheoperation isanexit,theNASTRAN termination routine PEXIT(3.4.22) is
called.
1.2.3.5 Checkpointing DataBlocks (CHKPNT Section 4.10)
Thecheckpoint module (DNLAPname: CHKPI_T; entry pointname: XCHK) copies specified data
blocks required fcrproblem restart ontotheNewProblem Tapeandmakes appropriate entries
intherestart dictionary. Thisdictionary isalsopunched ontocardsaseachnewentry ismade.
Thus,intheeventofanyunscheduled problem interruption, arestart fromthelastcheckpoint
1.2-12 (lllll70)&lt;/p&gt;
&lt;p&gt;NASTRA;_ EXECUTIVE SYSTEM
Allfiles begin with an
eight character (2word)
BCDheader record.
_SCAR FILE I(always present) FF
&amp;ndash; XIBSCAR^^ (header) -&lt;em&gt;data blocks fromDMI&amp;rsquo;sandDTI&amp;rsquo;s
(ifpresent) separated byE_F&amp;rsquo;s
i4ote: ^denotes BCDblank
(seesection 2.4.2.1)
-&lt;/em&gt;-data blocks pooled byXSFA
(ifnecessary) separated by
E_F&amp;rsquo;s
Figure 5.Format oftheDataPool File.
1.2-13&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
canbemadeusingtheProblem Tapeandtherestart dictionary fromtheinterrupted run.
1.2.3.6 Purging aData Block (PURGE Section 4.16)
Thepurge routine (DMAP name: PURGE; entry point name: XPURGE) flags datablocks sothat
theywill notbeassigned tophysical files. Thisspecial status provides ameans forlogically
suppressing asegment ofprocessing steps requiring thedatablock. Thus, ifthefunction ofa
module istomultiply twomatrices andaddathird matrix totheproduct, theaddition stepmight
bedeleted bypurging thedatablock corresponding tothethird matrix.
1.2.3.7 Equivalencing Data Blocks (EQUIV Section 4.17)
Theequivalence routine (DFtAP name: EQUIV; entry point name: XEQUIV) attaches oneormore
equivalent datablock names toanexisting datablock. Thisspecial status provides ameans of
logically removing amodule function bymaking adatablock input tothemodule equivalent toa
datablock output fromthemodule. Thus anentire module could beskipped, andaninput data
block &amp;ldquo;copied&amp;rdquo; toanoutput datablock without physically moving thedatafromonefiletoanother.
1.2.3.8 Saving Parameters (SAVE Section 4.15)
Thesaveroutine (DMAP name: SAVE; entry point name: XSAVE) provides aprotection feature
fortheparameters communicated between, andusedby,thefunctional modules. Allvariable para-
meters arestored within theVPSExecutive table (seesection 2.4). Prior toeachmodule&amp;rsquo;s
operation, thesubset ofparameters required bythemodule ismoved toblank common. Themodule
mayuseormodify thissubset ofparameters asdesired. When themodule terminates operation,
onlythose parameters within thesubset designated tobesaved arerestored totheExecutive
table.
l.2-14 (ll/I/70)&lt;/p&gt;
&lt;p&gt;WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS
1.3WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS
1.3.1 Introduction
Although NASTRAN isaF@RTFCAN oriented system, considerable effort wasrequired todevelop
programming andwordhandling techniques applicable tofourseparate computer configurations.
llnese computers exhibit wide differences intheir binary wordsizes andinteger representation
method. Thecurrent computer configurations considered andtheir significant differences follow:
I.Computer -IBM7094/7040 DCS
WordSize-36Bits
Character Capacity -6bits/character and6characters/word
Integer Representation -SignandMagnitude
2.Computer -IBMSystem/360 series
WordSize -32Bits
Character Capacity -8bits/character and4characters/word (character zbyte)
Integer Representation -Twoscomplement fornegative integers
3.Computer -UNIVAC If08
WordSize -36Bits
Character Capacity -6bits/character and6characters/word
Integer Representation -Onescomplement fornegative integers
4.Computer -CDC6600
Word Size-60Bits
Character Capacity -6bits/character andlOcharacters/word.
Integer Representation -Ones complement fornegative integers
Various Executive routines (e.g., XSORT (4.4), XRCARD (3.4.19)) thatdealdirectly with
character strings fromtheinput stream require somemethod ofobtaining theabove computer
dependent information. SJithin theNASTRAN Preface, subroutine BTSTRP (3.3.2) solves analgorithm
thatdetermines which ofthefourcomputers iscurrently operating. This algorithm functions by
inspecting theword length (bymeans ofshifting andtesting) andbychecking thenegative integer
representation method. Asaresult ofthese tests, aword (MACH) withi_ theSYSTEM Executive
table (seesection 2.4) issettoindicate thecomputer type. Since datawithin BTSTRP defines
thenumber ofbits-per-word (NBPW), thenun_er cfcharacters-per-word (NCPW), andthenun_er of
1.3-I&lt;/p&gt;
&lt;p&gt;NASTRAN PROGP_AMMING FUNDAMENTALS
bits-per-character (NBPC) foreachcomputer type,thecorrect values fortheseparameters arealso
stored intotheSYSTEM table. Thistableresides within theNASTRAN rootsegment andisthus
accessable toanymodule orsubroutine.
1.3.2 AIphanumeric _ata
Datastored within acomputer asbinary-coded-decimal (BCD)characters mustberepresented
bytheproper hardware defined bitcodes. These character codes (andinthecaseoftheIBM
System/360, thenumber ofbitsrepresenting thecode)varyamongtheNASTRAN computer types.
Although thenumber ofcharacters-per-word couldhavebeenobtained fromtheSYSTEM table,
various datablocks andbuffers within NASTRAN required firmentrysizes, regardless ofcomputer
type,tofacilitate indexing. Forthesereasons, theminimum number efcharacters-per-word (4)
amongthefourcomputer typeswaschosen asaprogram design standard. Computer typeswitha
wordcapacity ofgreater thanfourcharacters willhavetheunused lowordercharacter positions
filled withBCDblanks.
1.3.3 l_ordPacking
Standard F_RTP_AN compilers donotprovide thecapability forstoring orretrieving datathat
occupies lessthanafullcomputer word. Through theMachine WordFunctions (MAPFNS, 3.4.1)
routine somelimited wordpacking (nottobeconfused withmatrix packing) isperformed within
theExecutive System andafewutility subroutines. Packing provides anefficient useofmemory
spaceattheexpense oftheadditic.nal operating timeneeded tocombine orseparate theelements
ofthepacked words. TheMachine WordFunction _RFisgenerally usedforcombining elements,
whileANDFwithasuitable maskisusedforseparating them.
1.3.3.1 Examples ofMachine WordFunctions (MAPFNS) Usage
Assume threelO-bit itemsofdataoccupy theloworderI0bitsofthreeseparate 30-bit
computer words (A,B,andC).Topackthesethreeitems intoasingle 30-bit word(X),perform
thefollowing stepsusingtheindividual functions available within F_PFNS:
a)Leftshift(LSHIFT) wordA,twenty bits
b)Leftshift(LSHIFT) wordB,tenbits
c)Logically add(_RF)words AandB;store intoX
1.3-2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P30</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_030/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
3.Program Flow: Theflow chart inFigure 4gives thelogical program flow ofDECOMP.
Thefollowing comments expand oncertain portions oftheflow chart:
(1) Allocate buffers, initialize thedeterminant, andwrite header records.
(2) Iftheorder of[A]islor2,subroutine &lt;em&gt;NETW&lt;/em&gt; iscalled tohandle the
decomposition.
(3) IfBandBareinput aszero, GENVEC iscalled topick theoptimum parameters
fordecon_position.
(4) Thepointers into thevarious areas ofcore shown inFigure larecomputed.
(5) Ifthere exist active elements intheupper triangle, TRANSP iscalled to
transpose these elements.
(6) Active columns areinitialized forallcolumns having anactive element
within thefirst B+lrows of[A].
(7) Theband portion ofthenext column of[A]isread into Area II.
(8) Anyactive elements occurring below thediagonal inthecurrent column are
added into existing active rows, ornewactive rows arecreated.
(9) When anactive column merges into theband, acolumn from Area IIIisadded
into corresponding positions inArea II,andacolumn ofinteraction elements
inArea Visadded totheactive rowterms inArea IV.
(lO) Thecurrent column of[A]inArea IIisoperated onbythecolumns of[L]
stored inArea I.
(ll) Terms corresponding toactive rows notyetmerged into theband areadded into
Area II.
(12) Thelower band portion ofArea IIissearched forthemaximum element. Rows
areinterchanged tobring ittothediagonal position, andtheinterchange
index isstored inArea I.
(13) Active columns elements areinterchanged corresponding totheinterchange
within theband. Ifacolumn of[L]isabout tobeoutput (i.e., B+
columns of[L]arestored inArea I_terms arising from that column areadded
into theactive columns.
3.5-52&lt;/p&gt;
&lt;p&gt;_TRIX SUBROUTINE DESCRIPTIONS
3.5.15.5(14)Thecolumn of[U]fromArea IIplusarowofactive column terms inArea III
areoutput.
(15)Ifactive rowsandcolumns exist, terms arising fromtheir interaction are
computed andadded intoArea V.
(16)Elements intheactive columns aremoved uponerowposition inArea Illto
replace theoutput elements, andmake roomforanewrow.
(17) Thefirst column of[L]inArea Iiswritten outifArea Iisfull. The
active rowelements belonging tothatcolumn arealso output.
(18) Thecolumns of[L]inAreaIaremoved overonecolumn andthelower band
portion ofArea IIisstored inArea I.
(19) Active rowsinArea IVaremoved over onecolumn.
(20) Thenextrowofactive elements intheupper triangle of[A]isread.
Elements areadded toexisting active columns, ornewcolumns arecreated.
(21) Whenpossible, arowofinteraction elements inArea Vismerged intothe
bottom rowofactive columnelements (Area III).
(22) After processing allcolumns of[A],FINWRT iscalled tocomplete the
outputting of[L]andtore-write [U].
Auxiliary Subroutine TRANSP
I.Entry Point: TRANSP
2.Purpose: Todoanin-core transpose oftheactive elements occurring outside theband
andintheupper halfofthematrix (i.e., transpose allelements aijsuchthatj-i&amp;gt;_B).
3.Calling Sequence: CALLTRANSP (X,X,NX,A,B,SCRFIL)
X
NX
A
B
SCRFIL -Anareaofcoreavailable toTRANSP.
Number ofwords available atX.
GIN_filecontaining theinput matrix [A]-integer.
Upper bandwidth ofmatrix [A].
GIN%filewhere transposed elements arestored.
3.5-53&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
4,
theuppertriangle arestored incore,alongwiththeirrowandcolumn position.
isthensearched andelements output intransposed order.Method: Theinputmatrix [A]isread,andallelements occurring outside thebandin
Thislist
3.5.15.6 Auxiliary Routine &lt;em&gt;NETW&lt;/em&gt;
EntryPoints: @NETW_,FINWRT
Purpose: @NETW@ isaseparate routine whose soleresponsibility istosolvematricesI°
2.
oforderoneortwo.
FINWRT isasection ofcodeseparated fromDECAMP duetocompiler overflow. Its
function istofinish outputting theremaining columns of[L]andtore-write thecolumns
of[u].
Auxiliary Subroutine GENVEC
EntryPoint: GENVEC
Purpose: Topicktheoptimum B,B,C,C,andRforagivenmatrix [A].
Calling Sequence: CALLGENVEC ($nI,BUF,A,NX,X,N,B,BBAR,C,CBAR,R,IENTRY)
Statement towhich control istransferred ifanullcolumn isdiscovered
in[A].
-Location ofaGINBbuffer.
-GIN_filecontaining theinputmatrix [A].
-Anareaofcoreavailable toGENVEC.
-Number ofwordsofcoreavailable atX.
Theorderofthematrix [A].
lnteger output parameters giving theoptimum values fortheupperandlower
-_bandwidths, thenumber ofactive rowsandcolumns, andthenumber ofcolumns
I
_of[L]heldincore.
I_1implies DECAMP called GENVEC. -2implies CDC_MP called GENVEC
Thefollowing logicflowgivesthemeans bywhich theoptimum bandwidths are3.5.15.7
I.
2.
3.
nI
BUF
A
X
NX
N
B,BBAR,
C,CBAR,
R
IENTRY
4.Method:
chosen.
3.5-54&lt;/p&gt;
&lt;p&gt;I.tATRIX SUBROUTINE DESCRIPTIONS
A.Locate extreme non-zero terms
I.Initialize active column list tozero. Thelength ofthelist isequal tothe
maximum value oftheupper bandwidth (B)that isofinterest.
_lO5
(BmaxNMB,ortheorder oftheproblem, whichever isless, where Nistheorder of
thematrix andMBisthearithmetic time in_seconds forperforming onemultiply and
oneadd.
2.Initialize thecolumn list tozero. Thelength ofthelist istheorder of
theproblem.
3.Locate thenon-zero elements inthenext column ofthematrix.
4.Insert thecolumn number ofallnon-zero elements inthecorrect rowoosition
ofthecolumn number list with thefollowing constraints:
a.Consider only elements inthelower triangle.
b.Donotinsert column numbers inrowpositions already occupied.
5.Insert therownumber ofthenon-zero element located inthelowest numbered
rowinto thecolumn position oftherownumber list forthecurrent column under
consideration.
6.Return tostep 4until allcolumns ofthematrix have been processed.
B.Determine active columns
I.Zero counter E
SetCounter FtoN-l
SetCounter GtoN-l
SetCounter Hto2
2.Beginning with thelast entry intherownumber list, subtract thecurrent
value ofcounter H,andtest foranegative sign. Ifnegative, increment counter
Ebyone.
3.Thecurrent value ofcounter Eisthenumber ofactive columns when theupper
bandwidth isequal tothecurrent value ofcounter F.Compare counter Ewith the
existing entry intheactive column list forthebandwidth indicated bycounter F.
Update theactive column list ifcounter Eisgreater than theexisting entry.
4.Decrement counter Fbyone. Return tostep 2unless counter Fiszero.
3.5-55&lt;/p&gt;
&lt;p&gt;C.
D°SUBROUTINE DESCRIPTIONS
3.
4.
5.
6.
7.
8.5.Decrement counter Gbyone. Increment counter Hbyone.Setcounter Ftothe
valueofcounter G.Zerocounter E.Return tostep2unless counter Giszero.
6.Thefinalactive column listcontains themaximum number ofactive columns for
bandwidths ofunitythrough themaximum upperbandwidth investigated.
7.Prepare reduced active column listbyextracting pairs-minimum Band
associated Cforunique values ofC.
Determine active rowsforgivenBand
I.Extract pairs (rownumber, L,andcolumn number, K)fromthecolumn number
listforwhich
L-K&amp;gt;_
2.Consider anewlistofpairsconsisting ofKandL+B.Foreachpair
(K,L+B)determine thenumber ofremaining pairs(Ki,(L+B)i)forwhich
Ki&amp;lt;L+Band(L+B)i&amp;gt;__K
3.Themaximum number ofpairssatisfying therelation instep2foranysingle
pairisCforthegivenBandB.
Select B,B,Cand_forMinimum Decomposition Time
I.Select thenextvalueofBandassociated Cfromthereduced active column
list(begin withmaximum Bofinterest).
2.Assume B=&lt;em&gt;andC=C.
Calculate RandTwithpreliminary timing equations.
Savetheminimum Tandtheassociated BandC.
Return tostep1unless allentries inreduced active column listhavebeenused.
Ifthematrix isunsymmetric useBandCfromstep4andset&lt;/em&gt;=B.
Determine CforagivenBandB.
Calculate RandTwiththepreliminary timing equations.
9.Compare withtheprevious minimum T.
3.5-56&lt;/p&gt;
&lt;p&gt;3.5.15.9
I.
2.
3.
4.MATRIX SUBROUTINE DESCRIPTIONS
lO.IfthenewTexceeds theprevious minimum bymorethan20%orB=maximum B
ofinterest goto12.
II.Savetheminimum Talong withassociated B,&lt;em&gt;,Cand&lt;/em&gt;.Increment &lt;em&gt;by2%of
theBassociated withminimum Tandgoto7.
12.Return toB=B.
13.Decrement Bby2%oftheBassociated withminimum Tanddetermine the
associated C.
14.Calculate RandTwiththepreliminary timing equations.
15.Compare withtheprevious minimum Twhile decrementing &lt;em&gt;.
16.IfthenewTexceeds theprevious minimum bymorethan20%orB=2goto18.
17.Savetheminimum Talong withassociated B,B,Cand_andgoto13.
18.Savevalues ofB,B,Cand_associated withtheminimum value ofTfrom
upsearch anddownsearch onB:foruseindecomposition.
Auxiliary Function FINDC
Entry Point: FINDC
Purpose: Tofindthenumber ofactive rows(&lt;/em&gt;)foragiven Band&lt;/em&gt;.
Calling Sequence: CALLFINDC (B,BBAR,N,X,Y,CBAR)
B
BBAR -
N
X
Y
CBAR -
Method:Upper bandwidth -integer.
Lower bandwidth -integer.
Order oftheproblem.
Column number list.
Scratch vector.
Thenumber ofactive rows, C.
SeestepCintheGENVECmethod.
3.5-57&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.15.10 Auxiliary Routine TIMEEQ
I.EntryPoints: T,TFIN,RC_RE
2.Purpose: Tocompute thepreliminary andfinaltiming equations fordecomposition,
andtocompute thecoreallocation function.
3.Calling Sequences: CALLT(B,BBAR,C,CBAR,R,IENTRY,N,TIM)
CALLTFIN(B,BBAR,C,CBAR,R,IENTRY,N,TIMEX)
CALLRC@RE (B,BBAR,C,CBAR,N,IENTRY,NX,R)
B,BBAR Upperandlowerbandwidths, number ofactive rowsandcolumns.
C,CBAR, -
I__implies entrywasfromDECAMP. IENTRY -implies entrywasfromCDC_MP.
N Theorderoftheproblem.
TIM Floating pointvalueforthepreliminary time.
TIMEX Floating pointvalueforthefinal timing equation.
NX Number ofcorewordsavailable toDECAMP orCDC_MP.
R Thenumber ofcolumns of[L]thatcanbeheldincore(output byRC_RE,
inputtoTandTFIN).
4.Method: Thefollowing equations areevaluated togive&amp;rsquo;the desired output.
A.CoreFunction
R=(NX-((B+B+I)+2&lt;em&gt;IENTRY&lt;/em&gt;MINO(N,B +B+B)+
2&lt;em&gt;IENTRY&lt;/em&gt;C*(B +2)+2&lt;em&gt;C&lt;/em&gt;IENTRY*(MINO(B +B,N)+I)+
2&lt;em&gt;IENTRY&lt;/em&gt;C&lt;em&gt;C +C+C&lt;/em&gt;IENTRY +C)-6&lt;em&gt;SYSBUF)/(2&lt;/em&gt;IENTRY*B)
B.Preliminary Timing Equation
TIM-N[MBBR+Mc(BC+BC+BC+2CC)+IB(B+B-R-I)]
106
where
MB=Arithmetic timein_seconds foroneterminside theband.
Mc=Arithmetic timein_seconds foronetermintheactive rowor
active column.(4)
(5)
3.5-58 (12-I-69)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
whereI=I/&lt;em&gt;timein_seconds foroneterm.
C.Final Timing Equations
TIMEX isafunction ofTl,T2,T3andT4asdefined below(P=matrix
packing timein_seconds foroneterm),
Tlisgiven by:
Tl=K1[MBBR +IB(B+B-R)+P(B+2&lt;/em&gt;)] , (6)
whereKl=I_-B-2_&amp;lsquo;ifN-B-2_&amp;gt;0,ifN B2_&amp;lt;0 .
T2isgiven by:
K2
t2=&lt;em&gt;-[BK2MB+(K3-R)(I-MB)&lt;/em&gt;+2PB+PK2] ,(7)
(8)
ifN_B+2B;otherwise,K2=K3=B+ (9)
andK2=N-B , (I0)
whereK3
T3isgiven by:
T3Ii+BifN_B +BifN&amp;lt;B+B
:_-M8+ I+P_K 5(ll)
(12)
DK4=B+B-R,ifB-R&amp;lt;_0,ifB R&amp;gt;O(13)
3.5-59&lt;/p&gt;
&lt;p&gt;3.5.15.11and
ifN&amp;gt;B+2B.
and
l°
2.
inDECAMP.Otherwise,
T4isgivenby:
Finally,SUBROUTINE DESCRIPTIONS
T =
4K5=B+{B ,
Ii-R,ifN-R&amp;lt;BK4=
,IfN R&amp;gt;B
K5:N
(N-B)[Mc(BC +BC+BC+C_)+P(C+&lt;em&gt;)].
TIMEX =(T1+T2+T3+T4)I0-6
whereTIMEX isthetotalestimated timefordecomposition.
Auxiliary Subroutine DL&lt;/em&gt;@P
EntryPoints: DL@OP,DDL@@P,XL@_P
Purpose: Toimprove efficiency ofF_RTRAN generated codeforseveral loops
3.5.15.12 Design Requirements
Corestorage requirements depend ontheparameters B,B,CandC.(14)
(15)
(16)
(17)
(18)
Areas II,III,IV,andV
mustreside incoreatalltimes, alongwithaminimum oftwocolumns ofAreaI,andfiveGINO
buffers. GENVEC isdesigned topickthecombination ofB,B,C,and_suchthatthenroblem
willallocate ifatallpossible.
Thefilecontaining [U]isnotinstandard format, astheactive column termsarestored
outofplace. Forthis reason [L]and[U]should beused asinput only toGFBS oranassociated
routine.
3.5-60&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.15.13 Information Messages
I.C_NMSG iscalled atentry andexitfromDECOMP., Theline
XXXXDECOMP
willappear twice perdecomposition. Theactual execution timeofDECQMP will bethe
difference inthetimes (where XXXX=timeinseconds).
2.3023 B=XXX C=XXX R=XXX
3028 BBAR=XXX CBAR=XXX R=XXX
These messages givetheparameters chosen forthedecomposition.
3.3027DECQMP_SITIQN TIME ESTIMATE =XXX
Gives theestimated timeforthedecomposition inseconds.
3.5.15.14 Diagnostic Messages
Fatal error massages 3008and3025mayoccur.
3.5-61&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.16 CDC_MP (Complex Matrix Decomposition)
3.5.16.i EntryPoint: CDC_MP
3.5.16.2 Purpose
Todecompose acomplex square matrix [A]intotheform[A]=[L][U] where[L]isa
unitlowertriangular matrix and[U]isanuppertriangular matrix.
3.5.16.3 Calling Sequence
CALLCDCOMP ($nI,X,X,X)
C_MM_N /CDCMPX/ A(I),L(7),U(I),SCR(3),DET(2),P@WER,NX,MINDIA,B,BBAR,C,CBAR,R
n1
X
A
L,U
SCR(3)
BET(2)
P_WER -
NX
MINDIA -
B,BBAR,
C,CBAR, -
RLocation incalling program wherecontrol istransferred if[A]issinqular.
Anareaofworking storage.
Inputmatrix control blockfor[A].
Output matrix control blocks for[L]and[U].
Threescratch filesavailable foruse.
Twodouble precision wordswhere therealandimaginary values ofthe
determinant arestored.
Scalefactor tobeapplied tothedeterminant (det([A])=DET*IO**P_WER).
Number ofcomputer wordsatX.
Double precision wordwherethemodulus oftheminimum diagonal element
of[U]isstored.
lfB:BBAR=O,compute andstoreB,BBAR,C,CBAR,R before decomposing [A].IfBorBBAR#O,usepreviously stored values ofB,BBAR,C,CBAR andRfor
decomposing.
3.5-62&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.16.4 Method
CDCOMPissimplyacopyofDECOMPwiththearithmetic statements replacedbycomplex
arithmetic. Pointerstostorageareasweremodifiedtoaccommodate theextrawordsneeded.
3.5.16.5 AuxiliarySubroutine CTRNSP
Purpose:ComplexversionofTRANSP(seeSection3.5.15.5).
3.5.16.6 AuxiliarySubroutine COM12
Purpose:ComplexversionofBNETW_(seeSection3.5.15.6)
3.5.16.7 AuxiliaryRoutineCLOOP
Innerlooproutine.
3.5.16.8 AuxiliaryRoutineCXLOOP
Innerlooproutine.
3.5.16.9 DesignRequirements
Seesubroutine descriptions forDECAMP,Section3.5.15.
3.5.16.10 Diagnostic Messages
Seesubroutine descriptions forDECOMP,Section3.5.15.
3.5-63 (811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.17
3.5.17.1 EntryPoint: FBS.
3.5.17.2 PurposeFBS(Forward -Backward Substitution).
Giventhedecomposition ofarealsymmetric matrix [A]=[L][D][L]TFBSwillperform the
forward-backward passnecessary tosolvethesystem oflinear equations [A][X]=[B].
3.5.17.3 Calling Sequence
CALLFBS(Z,Z)
C(_MMON/FBSX/L(7) ,U(7),B(7),X(7),NZ,PREC,SIGN
L,U Matrix control blocks fortheloweranduppertriangular factors output #rom
SDC(_MP.
B,X-Matrix control blocks forthematrices [B]and[X].
NZ-Number ofcomputer wordsatZ.
_I,perform arithmetic insingle precision.PREC
2,perform arithmetic indouble precision
s° ve=,solve [A][X] -[B].
Z -Anarea ofworking storage.
3.5.17.4 Method
Mathematical Considerations. Given theunit upper andlower triangular matrices [L]and
[L]T,with thediagonal matrix [D]stored over their diagonals, FBSsolves thetwosystems of
equations given by
[L][Y]=+[B]
and
[L]T[X]:[D]-I[Y]
3.5-64&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
Elements [Y]and[X]aregiven by
i-I
Yij =bij-kZ=l£ikYkj
n
xij=Yij/di -kZ=i+l£ki xij
Program Flow. Overall program flowisidentical tothatofGFBS (seeSection 3.5.19). The
onlydifference inthetworoutines isthatFBSusesthedecomposed matrices output fromSDC_MP,
while GFBSusesthose output byDECAMP. Likewise, thecomputed equations differ slightly.
3.5.17.5 Auxiliary Subroutine FBSDP
l°
2.
3.
4°
3.5.17.6
I.
2.
3.
.Entry Point: FBSDP
Purpose: Inner looproutine fordouble precision forward andbackward substitution.
Calling Sequence: CALLFBSDP (X,Y,N,M)
D_UBLE PRECISION X(1),Y(1),A
COMM_N /ZNTPKX/A
X-Input vector/output vector
Y-Input vector
N-Looplimit
M SkipIndex
Method: Xi=Xi-AYi,i=I(M)N
AuxiliarySubroutine FBSSP
Entry Point: FBSSP
Purpose: Inner looproutine forsingle precision forward andbackward substitution.
Calling Sequence: CALLFBSSP (X,Y,N,M)
DIMENSION X(1),Y(1)
COMM_N IZNTPKXIA
X Input vector/output vector
Y Input vector
N Looplimit
M SkipIndex
Method:
xi=Xi-AYi, i=l(&amp;lsquo;1)N
3.5-65 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.17.7 Design Requirements
Onecolumn of[B]andoneGIN_ buffer must fitincore.
3.5.17.8 Diagnostic Messages
SeeGFBS (Section 3.5.19).
3.5-65a (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.18SSG3A IDriver forFBS).
3.5.18.1 EntryPoint: SSG3A.
3.5.18.2 Purpose
Tosolve[A][X]=[B]using [A]=[L][L]T.Onoption tocompute theresidual matrix
[RES]=[A][X]-[B].
3.5.18.3 Calling Sequence
CALLSSG3A(FILEA,FILEL,FILELT,FILEB,FILEX,SCRI,SCR2,1RES,FILER)
FILEA -GIN_filenameof[A]-integer -input.
FILEL -GIN_filenameof[L]-integer -input.
FILELT -GIN_filenameof[L]T-integer -input.
FILEB GIN_filenameof[B]-integer -input.
FILEX GIN_filenameofIX]-integer -input.
SCRI GINBnameofscratch file-integer -input.
SCR2 GIN_nameofscratch file-integer -input.
IRES -Option forresidual vector -integer -input. IRES=0suppresses calculation
ofresidual vector.
FILER -GIN_filenameofresidual vector -integer -input.
3.5.18.4 Method
/FBSX/ issettocompute [A][X]=[B].
SSG2Biscalled tocompute [RES]:[A][X]-[B](seesection 3.5.17.3).
Foreachcolumn of[X],{Xi},ciiscomputed.
_i={xi}T{RESi}/{Bi}T{xi }
3.5.18.5 Design Requirements
Opencoreat/SSGA3/.
3.5-66&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.19
3.5.19.1 Entry Point: GFBS.
3.5.19.2 PurposeGFBS (General Fo_vard -Backward Substitution).
Given thedecomposition ofageneral square matrix [A]=[L][U],GFBSwillsolve thesystem
ofequations [A]IX]=[L][U]IX]=&lt;em&gt;[B]
3.5.19.3 Calling Sequence
CALLGFBS (Z,Z)
COMMON/GFBSX/L(7),U(7),B(7),X(7),NZ,PREC,ISIGN
L,U,B,X -Matrix control blocks forthematrices [L],[U],[B],and[X].
X(5)
NZ
PREC
ISIGN
Z
3.5.19.4Method-Desired output typefor[X].
-Number ofcomputer words available atZ.
O,usesingle precision arithmeticJ
&lt;em&gt;2,usedouble precision arithmetic
&lt;em&gt;{I&lt;/em&gt;:solve [A]IX]=+&lt;/em&gt;[B].,solve [A][X]:-[B].
-Anareaofworking storage.
I.Mathematical Considerations. Given [L],[U](nbynlower andupper triangular
matrices) and&lt;a href=&#34;anbymmatrix&#34; &gt;B&lt;/a&gt; GFBSsolves thetwosystems ofequations
ELIEY]=&lt;/em&gt;[B]
and
[U]IX]=[Y]
3.5-67&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Elements of[Y]and[X]aregiven by
i-I
= _hikYkj (I)Yij bij k=l
n
xij=[Yij -Z (2) b=i+l uikXkj]/uii
2.Initialization Phase. Thetype ofarithmetic tobeperformed iscomputed asafunction
ofthetype of[L], [B], andtheprecision requested bythecalling routine. Corresponding
transfer vectors aresetuptotransfer control totheproper arithmetic computation. Core
storage isfilled with asmany columns of[B]aspossible.
3.Forward Pass. Theintermediate values of[Y]arecomputed directly over thecolumns of
[B]currently incore. This isaforward pass on[L]since itisread sequentially forward.
Interpretation ofEquation lshows that Yljiscomplete after thefirst column of[L]hasbeen
read, Y2jafter column 2,etc. Elements of[L]areread oneatatime viaINTPK andthe
appropriate term subtracted off.
4.Backward Pass. Elements of[X]arecomputed byprocessing [U]inthereverse order.
Reading thelast column of[U]completes Xn,j,then-lcolumn of[U]gives Xn_l, j,etc. Inorder
tofacilitate tilereading ef[U], itwaswritten inthereverse order byDECAMP, allowing a
forward pass tobemade inactuality.
5.Output Phase. Thefinished columns of[X]arepacked andoutput viaPACK. Ifmore
columns of[B]still exist, core isonce again filled with vectors of[B]andtheprocess
repeated until allcolumns of[X]have been computed.
3.5.19.5 Design Requirements
Atleast onecolumn of[B]must beunpacked incore, along with oneGINB buffer.
3.5.19.6 Diagnostic Messages
Ifinsufficient core isavailable forGFBS, fatal message 3008 occurs.
Ifadiagonal term does notexist foracolumn of[U], fatal message 3005 occurs. This is
noramlly detected inDECAMP implying care wasnottaken inprocessing singular matrices inthe
calling routine calling DECOMP.
3.5-68&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTICNS
3.5.20
3.5.20.1
3.5.20.2S_LVER (Simultaneous Equation Solution Routine).
Entry Point: S_LVER.
Purpose
Toperform thefollowing three functions:
I.Solve [A][X]=-[B]forXwhere Aisarealsymmetric matrix which hasbeen
decomposed bySDC_MP.
2.Evaluate thematrix equation [E]=[D]+[B]T[X]
3.Onoption, compute
c:E]&lt;em&gt;L[&lt;em&gt;LL
]tED]II
3.5.20.3 Calling Sequence
CALLS_LVER(L,U,X,B,D,E,EPS,FLAG,SCR)
where:
L,UaretheGINBfilenames ofthedatablocks containinq thelower andumDer trianaular
factors ofA,respectively.
XistheGIN_filenameofthedatablock where thesolution matrix willbewritten.
BistheGINBfilenameofthedatablock containing theright handmatrix in[A][X]=-[B]
D,EaretheGIN(&lt;/em&gt; filenames ofthedatablocks inEquation (2)above.
EPSistherealsingle precision result ofthedivision inEquation (3).
SCRistheGINBfilenameofascratch fileforusebyS(&lt;/em&gt;.LVER.
FLAG_ O,compute _fromEquation (3)above andstore inEPS
O,donotcompute E
/S(_LVRX/isopencoreforS_LVER
Note:
I.
2.Lmustbeoutput fromsubroutine SDC_MP.
IfD=A,thenEistheerror residual matrix.
3.5-69&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.20.4 Method
/FBSX/ isinitialized andFBSiscalled tosolve[A][X]=-[B].
/MPYADX/ isinitialized andMPYAD iscalled tocompute [E]=[D]+[B]T[A].FLAGis
tested. IfFLAG=O,return ismade. Otherwise, INTPKiscalled tounpack andinterpret each
non-zero termofE.Thecumulative sumoftheabsolute valueofallnon-zero termsofEis
formed indouble precision. Thisoperation isthenperformed onD.Finally Eisthedivision
ofthesetwoquantities andisstored inEPSinsinQle precision.
3.5.20.5 Design Requirements
/S_LVRX/ mustbeinserted attheendoftheoverlay segment containing S@LVFR.
3.5.20.6 Diagnostic Messages
Thefollowing system fatalmessage maybeissued byS_LVER:
3001
3.5-70&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P31</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_031/</guid>
      <description>
        
        
        &lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.21
3.5.21 .I
3.5.21.2DMPY {Multipl XaDiagonal Matrix bXanArbitrary Hatrix).
Entry Point: DMPY.
Purpose
Topreorpostmultiply anabritrary matrix [B]byadiagonal matrix, i.e.[C]=[D][B] or
[C]=[B][D].
3.5.21.3 Calling Sequence
CALLDMPY(Z,Z)
C_I_ON/DMPYX/D(7),B(7),C(7),NZ,FLAG,SIGN
Z-Anareaofworking storage.
)&lt;em&gt;-Thenumber ofcomputer words atZ.
D-Matrix control block forthediagonal matrix.
B-Matrix control block forthegeneral matrix.
C-Matrix control block fortheproduct matrix.
C(1)mustcontain theGIN&lt;/em&gt; filenameprior toentry.
C(5)mustcontain thearithmetic typeoftheelements ofC.
DMPYwillaccumulate C(2)andC(6)andsetC(7)=O.
C(3)andC(4)maybesetbytheuserbefore orafter thecall.
_=O,pre-multiply BbyD.FLAGm
O,post-multiply BbyD.
_+l,formpositive product.SIGN
t-l,formnegative product.
3.5.21.4 Method
Thetype ofarithmetic isdetermined (real orcomplex). Theelements ofthediagonal
matrix, D,areunpacked atZ.INTPK isused toreadandinterpret thenon-zero elements ofB,
column bycolumn. Thefollowing equations areused:
Pre-multiplication: cij=dibij
Post-multiplication: cij=bijdj
3.5-71&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.21.5 Design Requirements
Double precision arithmetic isusedthroughout.
Theamount ofcoreatZmustbesufficient toholdtheunpacked diagonal termsofDand
twoGIN_buffers.
Thedimensions ofDandBmustbecompatible although thisisnotchecked.
3.5.21.6 Diagnostic Messages
Thefollowing system fatalmessages maybeissued byDMPY:
3001
3002
3.5-72&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.22
3.5.22.1 Entry Point: ELIM.
3.5.22.2 PurposeELIM (Perform aMatrix Reduction).
Toperform amatrix reduction onthestructural model bycomputing thematrix equation:
[Kii] =[-Kii]+[_i]T[Gj] +[Gj]T[Kji ]+[Gj]T[_Kjj] [Gj]
3.5.22.3 Calling Sequence
CALLELIM(KIIB,KJIB,KJJB,GJ,KII,SCRI,SCR2,SCR3)
where KIIB, KJIB, KJJB, GJandKIIaretheGINBfile names ofeachofthematrices inthe
above equation. SCRI, SCR2andSCR3areGINOfilenames ofthree scratch files usedbyELIM.
OpencoreforELIMisdefined by/ELIMX/.
3.5.22.4 Method
FIIMcomputes theabove matrix eq,,ation bythree successive calls toMPYAD: These areas
follows:
[SCRI] =[_j] [Gj]+g[ji]
[SCR2] =[_i]T[Gj]+[_i]
=[Gj]T[SCRI] + [Kii] [SCR2]
3.5.22.5 Design Requirements
/ELIMX/mustbeincluded attheendofthesegment inwhich ELIMresides.
3.5-73&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.23
3.5.23.1
3.5.23.2FACTOR (Decompose aMatrix IntoTrianqular Factors).
EntryPoint: FACTOR.
Purpose
Todecompose asymmetric matrix intoitstwotriangular factors.
3.5.23.3 Calling Sequence
CALLFACTOR (A,L,U,SCRI,SCR2)
whereA,L,UaretheGINOfilenamesofthedatablocks forthesymmetric matrix tobe
decomposed, itslowertriangular factor anditsuppertriangular factor, respectively. IfUis
negative, FACTOR willdecompose thesymmetric matrix [A]onfileAsuchthat
[A]=[C][C]T,
where theCholesky decomposition isused. [C]willbewritten onUasalowertriangular matrix.
Lwillcontain thelowertriangular factor ofastandard non-Cholesky decomposition. SCRIand
SCR2areGIN_filenamesoftwoscratch filesforusebyFACTOR. Thecommon block/FACTRX/ is
opencoreforFACTOR.
3.5.23.4 Method
FACTOR initializes /SFACT/ andcallsSDC_MP toaccomplish thedecomposition.
3.5.23.5 Design Requirements
/FACTRX/ mustbeincluded attheendofthesegment which contains FACTOR.
3.5.23.6 Diagnostic Messages
Thefollowing system fatalmessage maybeissued byFACTOR:
3005
3.5-74 (12-I-69)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
3.5.24 TRANPI (Driver forTRNSP).
3.5.24.1 Entry Point: TRANPI.
3.5.24.2 Purpose
Todrive TRNSP tocompute [B]=[A]T.
3.5.24.3 Calling Sequence
CALLTRANPI(FILEA,FILAT,NSCRTH,SCRI,SCR2,SCR3,SCR4,SCR5,SCR6,SCR7,SCRS).
FILEA -GIN_nameof[A]-integer -inDut.
FILAT -GIN_nameof[A]Tinteger -input.
NSCRTH- Number ofscratch files -integer -input.
SCRI, &amp;hellip;,SCR8-GIN_names ofscratch files -integer -inoJt.
3.5.24.4 Method
/TRNSPX/i__tha_d onthetrailer ofF!LEA=
3.5.24.5 Design Requirements
Open coreat/DTRANX/.
3.5-75&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.25 TRNSP (flatrix Transpose).
3.5.25.1 EntryPoint: TRNSP.
3.5.25.2 Purpose
Tocompute [A]Tgiven[A].
3.5.25.3 Calling Sequence
CALLTRNSP(Z)
Z-Arrayofcore.
C_MM@N/TRNSPX/MCBA(7),MCBAT(7),LC_RE,NSCRTH,SCR(8)
MCBA -Matrix control blockfor[A]-input.
MC3AT Matrix control blockfor[A]T-input.
LC_RE -Length ofZarray-integer -input.
NSCRTH -Number ofscratch filesavailable -integer -innut.
SCR -ListofGIN_namesofscratch files-integer -input.
3.5.25.4 Method
Threemethods arepossible:1_-NSCRTH _-8.
Method 1-In-core matrices.
Ifthefullmatrix canbeheldincore, [A]isunpacked intocore,andpacked
outonto[A]T.
Method 2-Simple sub-matrices.
Thematrix [A]isbroken uponecolumn atatimeintosubmatrices. Thesubmatrices
arewritten onscratch files, readinandtransposed oneatatime. Thebreak-un of
[A]canbepictured asfollows:
[A]:SCRATCH 1
SCRATCH 2
SCRATCH 3
etc.
3.5-76&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
Ifinsufficient scratch files areavailable tohold[A],multiple passes mayben;ade
Method 3-Multiple passes onsubmatrices.
Ifmultiple passes on[A]arenecessary inMethod 2,itmaybemoreefficient to
create larger submatrices andpasseachsubmatrix several times rather thanseveral
passes on[A]. Thebreak-up of[A]canbepictured asfollows:
[A]=C_RE L@ADl
__C_RE £eAD_2
CeRELBAD3u
I&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C_RA!C ]_
i&amp;hellip;&amp;hellip;.
ISCRATCH 2
C_REL_AD4
etc.
TRNSP will choose between themethods tominimize running time.
3.5.25.5 Design Requirements
rlethods 2and3require atleast onescratch file.
Neither [A]nor[A]Tmaybepurged.
Oneunpacked column of[A]andNSCRTH+I GIN_buffers mustfitintocore.
3.5.25.6 Diagnostic Hessages
Amessage indicating insufficient coreisproduced ifthethird oftheabove requirements
isnotsatisfied. Either reduce thenumber ofscratch files orincrease theopencore
available toTRNSP.
3.5-77&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.26 SADD(Matrix Addition Routine)
3.5.26.1 EntryPoint: SADD
3.5.26.2 Purpose
Tocompute [X]=&lt;em&gt;[A] +B[B]+y[C]+6[D]+&lt;/em&gt;[E]
3.5.26.3 Calling Sequence
CALLSADD (Z,Z)
Z&amp;ndash;Array ofcore
COMMON/SADDX/NOMAT,LCORE,MCBA(7),TYPA,ALPHA(4),MCBB(7),TYPB,
BETA(n),MCBC(7),TYPC,GAMMA(4),MCBD(7),TYPD,DELTA(4),
MCBE(7),FYPE,EPSLN(5),MC(7)
NOMAT -Number ofmatrices tobeadded -integer -input.
LCORE -Length ofZarray -integer -input.
MCBA -Matrix Control Block for[A]-input
TYPA -TypeofALPHA -integer -input
l-realsingle precision
2-realdouble precision
3-complex single precision
4-complex double precision
ALPHA -_-input -typedepends onTYPA
MCBB -Matrix Control Block for[B]-input
TYPB -Type ofBETA -integer -input
BETA -B-input -typedepends onTYPB
MCBC -Matrix Control Block for[C]-input
TYPC -TypeofGAMMA -integer -input
GAMMA -y-input -typedepends onTYPC
MCBD -Matrix Control Block for[D]-input
TYPD -TypeofDELTA -integer -input
DELTA -6-input -typedepends onTYPD
3.5-78 (611/71)&lt;/p&gt;
&lt;p&gt;MATRIX SUBROUTINE DESCRIPTIONS
MCBE -Matrix Control Block for[E]-input
TYPE -Type ofEPSLN -integer -input
EPSLN -c-input -type depends onTYPE
MC -Matrix Control Block for[X]-input
3.5.26.4Method
Thetype ofarithmetic isdetermined tobethemaximum type of[A], [B], [C],
[D], [E], &lt;em&gt;,B,y,6,e.
Initially acolumn of[X]iszeroed out. Each nonzero element of[A]isobtained
byZNTPKI, multiplied by&lt;/em&gt;,andadded into acorresponding position of[X]. After
processing acomplete column of[A], columns from matrices [B], [C], etc., aretreated
inasimilar manner. When thecontribution from thelast matrix hasbeen added in,
acomplete column of[X]isoutput viaPACK. This procedure isrepeated until all
columns ofIX]areoutput.
3.5.26.5 Design Requirements
Zmust besufficient tohold oneunpacked column of[X]plus nGIN_ buffers
(where n=N_MAT+I).
3.5-79 (6/I171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.27
3.5.27.1RSPSDC (RealSingle Precision Symmetric Decomposition)
EntryPoint: RSPSDC
3.5.27.2 Purpose
Todecompose arealsymmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa
unitlowertriangular matrix and[D]isadiagonal matrix stored inplaceoftheunitelements on
thediagonal of[L].Onoption, theCholesky decomposition [A]=[C][C]Tisdoneforareal,
positive definite matrix, withonlythelowertriangle [C]beingoutput. RSPSDC willalsocompute
thedeterminant of[A].
3.5.27.3 Calling Sequence
CALLRSPSDC ($nI,Z,Z,Z)
C_MM_N/SFACT/A(7),L(7),C(7),SCRI,SCR2,NZ,DET,P_WER,CHLSKY
A(7) Matrix control blockfor[A].
L(7) Matrix control blockfor[L].
C(7) Matrix control blockfor[L]Tor[C].
SCRI,SCR2 Twoscratch files.
NZ Thenumber ofcomputer wordsatZ.
DET Double precision cellwhere thescaled value ofthedeterminant of[A]will
bestored.
P_WER-Scalefactor tobeapplied toDET(Determinant =DET*IO**POWER).
CHLSKY -WhenCHLSKY =I,form[C]
Z Anareaofworking storage.
nz Statement number towhichcontrol istransferred ifthedecomposition fails.
3.5.27.4 Method
Themethod usedbyRSPSDC isidentical tothatusedbySDC_MP (Section 3.5.14) except that
allcomputations aredoneinsingle precision.
3.5.27.5 Auxiliary Subroutines
Subroutine Name: RSPL_
Purpose: Tocompute theinnerarithmetic loopofRSPSDC.
3.5-80 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.27.6 DesignRequirements
Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomposition is
donewithoutpivoting.
Corestoragerequirements dependontheparameters BandC.ForagivenBandC,AreasII,
III,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GIN_buffers.
Filescontaining [L]and[L]TshouldbeusedasinputonlytoFBSastheyarenotinstandard
NASTRANformat.
Information Messages
C_NMSGiscalledatentryandexitfromRSPSDC.Theline
xxxxRSPSDC
willappeartwiceperdecomposition. TheexecutiontimeofRSPSDCwillbethedifference in
thetimes(wherexxxxx=timeinseconds).
2.Message3023givesthevaluesoftheparameters, B,C,andRchosenforthedecomposition.
3.Message3027givestheestimatedtimeinsecondstodothedecomposition.
4.Message3024indicatesthatamatrixhasscatteredtermswayoffthediagonal(i.e.,a
largebandwidth). Insteadofsearchingallcombinations ofBandC,thesearchisstarted
atthemaxi_lumbandwidth.
3.5.27.8 Diagnostic Messages
I.IfRSPSDCwasunabietofindacombination ofBandCwhichwouldmeetcorerestrictions,
fatalmessage3008occurs.
2.Inacodingsense,message3025ispossible. However,itviolatesthedesignofRSPSDC
andtherefore, ifobtained,shouldindicateanobscureprogramdesignerror,ormachine
error.
3.Message3026indicatesthatsufficient spacewasnotreservedforthegeneration ofthe
Bvs.Cvector.RSPSDCshouldberecompiled toincreaseBMAXandCMAX.
3.5-81(8/i/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition)
3.5.28.1 EntryPoint: CSPSDC
3.5.28.2 Purpose
Todecompose acomplex symmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa
unitlowertriangular matrix and[D]adiagonal matrix stored inplaceoftheunitelements on
thediagonal of[L].CSPSDC willalsocompute thedeterminant of[A].
3.5.28.3 Calling Sequence:
CALLCSPSDC
CALLSDC@MP($nl,Z,Z,Z)
C_MM_N/SDCCSP/A(7),L(7),C(7),SCRI,SCR2,NZ,DET,POWER,CHLSKY
A(7) Matrix control blockfor[A].
L(7) Matrix control blockfor[L].
C(7) Matrix control blockfor[L]Tor[C].
SCRI,SCR2-Twoscratch files.
NZ Thenumber ofcomputer wordsatZ.
DET Double precision cellwhere thescaled valueofthedeterminant of[A]will
bestored.
POWER Scalefactor tobeapplied toDET(Determinant =DET*IO**P_WER).
CHLSKY WhenCHLSKY =I,form[C]
Z Anareaofworking storage.
nl Statement number towhichcontrol istransferred ifthedecomposition fails.
3.5.28.4 Method
Themethod usedbyCSPSDC isidentical tothatusedbyRSPSDC (Section 3.5.27).
3.5.28.5 Auxiliary Subroutines
Subroutine Name: CSPL_O
Purpose: Tocompute theinnerarithmetic loopofCSPSDC.
3.5-82 (811172)&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
3.5.28.6 DesignRequirements
Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomposition is
donewithoutpivoting.
Corestoragerequirements dependontheparameters BandC.ForagivenBandC,AreasII,
III,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GIN_
buffers.
Filescontaining [L]and[L]TshouldbeusedasinputonlytoCXFBSastheyarenotin
standardNASTRANformat.
Information Messages
C_NMSG iscalled atentry andexit from CSPSDC. Theline
xxxx CSPSDC
will appear twice perdecomposition. Theexecution time ofCSPSDC will bethedifference
inthetimes (where xxxxx =time inseconds).
2.Message 3023 gives thevalues oftheparameters, B,C,andRchosen forthedecomposi-
tion.
3.Message 3027 gives theestimated time inseconds todothedecomposition.
4.Message 3024 indicates that amatrix hasscattered terms wayoffthediagonal (i.e., a
large bandwidth). Instead ofsearching allcombinations ofBandC,thesearch isstarted
atthemaximum bandwidth.
3.5.28.8 Diagnostic Messages
I.IfCSPSDC wasunable tofindacombination ofBandCwhichwouldmeetcorerestrictions,
fatalmessage 3008occurs.
2.Inacoding sense, message 3025ispossible. However, itviolates thedesign ofCSPSDC
andtherefore, ifobtained, should indicate anobscure program design error, ormachine error.
3.Message 3026indicates thatsufficient spacewasnotreserved forthegeneration ofthe
Bvs.Cvector. CSPSDC should berecompiled toincrease BMAX andCMAX.
3.5-83 (811/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.5.29 CXFBS (Forward -Backward Substitution).
3.5.29.1 EntryPoint: CXFBS
3.5.29.2 Purpose
Giventhedecomposition ofacomplex symmetric matrix [A]=[L][D][L]TCXFBSwillperform
thefom_ard-backward passnecessary tosolvethesystem oflinear equations [A][X]=[B].
3.5.29.3 Calling Sequence
CALLCXFBS
C_MM_N/FBSXCX/L(7),U(7),B(7),X(7),NZ,PREC,SIGN
L,U Matrix control blocks fortheloweranduppertriangular factors output from
SDCOMP.
B,X Matrix control blocks forthematrices [B]and[X].
NZ Number ofcomputer words atZ.
PREC-I,solve [A]IX]=[B].
2,perform arithmetic indouble precision.
SIGN-+I,solve[A]IX]=[B].
-l,solve[&lt;em&gt;]Iv]:-[&lt;/em&gt;],
Anareaofworking storage.
3.5.29.4 Method
Mathematical considerations. Giventheunitupperandlowertriangular matrices [L]and
[L]T,withthediagonal matrix [D]stored overtheir diagonals, CXFBS solves thetwosystems of
equations givenby
and[L][Y]:+[B]
[L]T[X]=[D]-I[Y]
Elements of[Y]and[X]aregivenby
Yij=i-I
bij-__kiYkjk=l
3.5-84 (8/I/72)&lt;/p&gt;
&lt;p&gt;MATRIXSUBROUTINE DESCRIPTIONS
n
xij=Yij/di-k=i+lZ_kix..lj
ProgramFlow.OverallprogramflowisidenticaltothatofGFBS(seeSection3.5.19).The
onlydifference inthetworoutinesisthatCXFBSusesthedecomposed matricesoutputfrom
SCDC_MP,whileGFBSusesthoseoutputbyCDC_MP.Likewise,thecomputedequationsdifferslightly.
3.5.29.5 DesignRequirements
Onecolumnof[B]andoneGIN_buffermustfitincore.
3.5.29.6 Diagnostic Messages
SeeGFBS(Section3.5.19).
3.5-85(811172)&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
4.1 GENERAL COMMENTS ANDINDEXES
TheI_ASTRAN modules (amodule isalogical group ofsubroutines) documented inthis
section havebeenclassified into7categories: l)Executive Preface modules, 2)Executive
modules, 3)Executive DMAPinstructions, 4)Executive DMAPmodules, 5)functional modules,
6)output modules, and7)matrix modules.
Executive Preface modules arethose which areexecuted prior totheexecution ofthe
first module inaD_Psequence. Theyconsist of:
which processes theNASTRAN Executive Control Deck;
which processes theNASTRAN CaseControl Deck; 3)l)XCSA (Executive Control Section Analysis),
2)IFPI(Input FileProcessor, Partl),
XS_RT (Executive BulkDataCardSort),
which sorts theNASTRAN Bulk DataDeck; 4)IFP(Input FileProcessor), which processes the
sorted BulkDataDeck; 5)IFP3, IFP4andIFP5(Input FileProcessor 3,4and5),which process
bulkdatacards unique toanaxisymmetric conical shell, hydroelastic, oracoustic problem;
6)XGPI (Executive General Problem Initialization), theheart ofthePreface, which a)translates
(compiles) aDMAPsequence intoaninternal form, theBSCAR, -seeSection 2.4.2.1, andb)for
problem restarts, initializes datablocks andlabeled common blocks; and7)UMFEDIT (User Master
FileEditor), which creates andmanipulates UserMaster Files.
Theonlymodule classified asanExecutivemodule, perse,isXSFA (Executive Segment
FileAllocator), which isthe&amp;quot;administrative manager&amp;quot; offiles forNASTRAN.
Executive DMAPinstructions documented inthissection areREPT, JUMP, C_ND, EXITand
END.TheDMAPinstructions BEGIN, LABEL andFILEarenotallocated aseparate section, and
therefore brief explanations follow.
I.TheBEGIN DMAPinstruction isadeclarative DMAPinstruction which denotesthe
beginning ofaDMAPsequence. Itisanalogous toacomputer operating system control
card which calls acompiler ofthesystem.
2.TheFILEDMAPinstruction isadeclarative DMAPinstruction which alters thenormal
attributes ofadatablock inan_SCAR entry (seeanexplanation oftheattributes
AP,LTU, TP,NTUofadatablock intheDataSection Format forfunctional modules
section inthedescription ofthe_SCAR, section 2.4.2.1). These attributes ofadata
block areusedbytheExecutive Segment FileAllocator (XSFA) module inperforming its
task.
4.l-I (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
3.TheLABELDMAPinstruction isusedtolabelalocation inaDMAPsequence so
thatthelocation maybereferenced bytheDMAPinstructions JUMP,CONDandREPT.
Amoredetailed description ofthesethreeExecutive DMAPinstructions canbefound
insection 5oftheUser&amp;rsquo;s Manual.
Executive DMAPmodules consist ofCHKFNT, SAVE,PURGE, EQUIV, PARAMandSETVAL. In
addition tothedescriptions inthissection, thereader isreferred tosection 5ofthe
User&amp;rsquo;s Manual, wherefurther explanations oftheusesofEQUIV, PURGEandCHKPNT canbe
found.
Functional modules comprise thebulkofthedescriptions inthissection. Functional
modules perform theactu_l structural problem solution. Ther_aaer isreferred tosection 5
oftheUser&amp;rsquo;s Manual fora)general co_nents onDMAPrulesandb)thesyntactical rulesof
theDMAPcalling sequences referring tofunctional modules.
Output modules arethosewhoseentire output isdirected a)tothesystem output
fileand/or b)toatapewhichwilldriveaplotting device.
Matrix modules arethosewhich, although nodifferent operationally fromfunctional
modules, aremostlikely tobeusedbytheprogram userwhowishes totakeadvantage ofthe
Direct Matrix Abstraction capabilities ofNASTRAN; therefore, theyareseparately categorized.
4.1.1 UseofModule Functional Descriptions
Eachmodule documented bymeansofaHodule Functional Description (MFD)hasbeen
assigned aninteger i,anditsMFDisdocumented insection 4.i.Forfunctional modules,
aconsistent numbering scheme hasbeenfollowed, wherever possible, intheMFD&amp;rsquo;s. Fora
functional module whoseassigned integer isi,then,
4.i Title
4.i.I EntryPoint
4.i.2 Purpose
4.i.3 DMAPCalling Sequence
4.i.4 InputDataBlocks
4.i.5 Output DataBlocks
4.i.6 Parameters
4.1-2&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
4.i.7 Method
4.i.8 Subroutines
4.i.9 Design Requirements
4.i.lO Diagnostic Messages
comprises thisnumbering scheme. Thetitle: a)classifies themodule intooneoftheseven
categories defined inthefirst paragraph ofsection 4.1; b)defines themodule name, which,
ifitisaDMAPmodule (onewhich iscalled byaDMAP instruction), isthenamebywhich it
mustbecalled intheDMAPcalling sequence; andc)defines, parenthetically, thephrase
fromwhich thenamewasderived. Comments ontheremaining sections follow.
I.Entry Point
Thissection defines theentry point ofthemodule. Amodule&amp;rsquo;s entry point usually
agrees with themodule name, butthere areexceptions. Forexample, theREAD(Real
Eigenvalue Analysis Displacement) module hastheentry point REIG (theentry point READ
isasubroutine intheGIN_ collection ofroutines).
2.Purpose
Abrief description ofthepurpose ofthemodule isgiven. Thecasual orfirst-time
reader willperhaps gonofurther thanreadthepurpose.
3.DMAPCalling Sequence
TheDMAPcalling sequence asitappears inaRigid Format isgiven (seesection 3of
theUser&amp;rsquo;s Manual foradetailed description oftheRigid Formats inNASTRAN).
DMAP calling sequences forExecutive DMAPinstructions andforExecutive DMAPmodules follow
nofixed format. Refer totheindividual Module Functional Descriptions fordetails ontheir
DMAP calling sequences. Functional modules, which arealways &amp;ldquo;called&amp;rdquo; viaaDMAPcalling
sequence, dohaveafixed format. Consider thefollowing DMAPcalling sequence forfunctional
module SMA2, which generates themassmatrix, [Mgg], andthedamping matrix, [Bgg]:
Sr_2 CSTM,MPT,ECPT,GPCT,DIT/MGG,BGG/V,Y,WTIvLASS =I.O/V,N,N_MGG/V,N,NOBGG/V,Y,
C_UPBAR =-I$
SMA2 isthemodule name. Thenameofamodule mustbegin with analphabetic character
4.1-3(311170)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
followed byuptosevenadditional alphanumeric characters. Following thenameisablank
field. Following thisblankfieldisthelist{CSTM,MPT,ECPT,GPCT,DIT} ofdatablocks input
tothemodule. Thelististerminated byaslash (/).Eachiteminthislistisseparated
byacomma. Notethatthenumber ofcommas forthislistisonelessthanthenumber ofinput
datablocks. Thesecond slashterminates thelist{MGG,BGG} ofdatablocks output fromthe
module. Therulefornaming inputandoutput datablocks isthesameasformodule names.
Eachsubsequent slashterminates aparameter field. Eachparameter fieldcontains threeparts
separated bycommas. Thefirstpartiseither theletter &amp;ldquo;V&amp;quot;ortheletter &amp;ldquo;C&amp;rdquo;,defining the
parameter asavariable orasaconstant respectively. Thesecond partiseither theletter
&amp;ldquo;Y&amp;quot;ortheletter &amp;ldquo;N&amp;rdquo;.&amp;ldquo;Y&amp;quot;implies &amp;ldquo;yes&amp;quot;thevalueoftheparameter maybespecified ona
PAP_AMbulkdatacard,and&amp;quot;N&amp;quot;implies &amp;ldquo;no&amp;quot;thevalueoftheparameter maynotbespecified ona
PAP_AMbulkdatacard. Thethirdpartmaybeeither: (a)thenameoftheparameter, (b)the
valueoftheparameter, or(c)thenameandthevalueoftheparameter. Avariable parameter
musthaveaname,henceavariable parameter maynotbespecified onlybyitsvalue. Therule
governing thenamesofparameters isthesameasthatformodule names. Thevalueofa
parameter maybecomplex double precision, complex single precision, double precision, real,
integer orBCD.Intheexample given, thenameofthefirstparameter isWT_SS, andits
initial value (which canbeoverridden byavalueonaPARAMcardbecause of&amp;quot;Y&amp;quot;priortothe
name)is1.0.Notethattheslashterminating thelastparameter fieldisomitted. Although
onecanterminate thelastparameter fieldwithaslash, thisfinalslashisusually omitted.
Adollar sign, &amp;ldquo;$&amp;quot;,terminates aDMAPstatement.
4.InputDataBlocks
Ashortdescription ofeachofthemodule&amp;rsquo;s inputdatablocks isgivenalongwith
notesexplaining whatthemodule&amp;rsquo;s design requires about thestatus (purged ornot
purged) ofthedatablocks. Detailed aatablockdescriptions arefound insection 2
oftheProgrammer&amp;rsquo;s Manual.
5.Output DataBlocks
Ashortdescription ofeachofthemodule&amp;rsquo;s output datablocks andanexplanation of
theaction takenwhenanoutput datablockhasbeenpre-purged aregiveninthis
section. Anoutput datablock issaidtobepre-purged ifthedatablockhasbeen
4.1-4&lt;/p&gt;
&lt;p&gt;GENEP4_L COMMENTS A_DINDEXES
explicitly purged inaprevious PURGE DMAPinstruction, orifthedatablock doesnot
appear intheDMAPcalling sequence forthemodule.
6.Parameters
Theorder ofDMAPparameters inaDMAPcalling sequence isthesameastheorder ofthe
F_RTRAN variables corresponding totheparameters inblank common atmodule execution time.
Eachvariable DI_Pparameter isdefined aswhether a)itisinput data into, oroutput
datafrom, themodule, orboth (e.g., aDMAPloopcounter which isincremented within the
module); b)thetypeoftheparameter: integer, real, double precision, complex single
precision, complex double precision, orBCD; andc)thedefault value oftheparameter
asdefined either i)intheModule Properties List (MPL) Executive table, ii)bymeans
ofaPARAM orSETVAL DMAPinstruction, oriii)bymeans oftheDMAPstatement itself. An
example ofthethird typeofdefault value is
M_DULEA A,B,C/D,E/V,N,UVW/V,Y,XYZ=-I $.
Theparameter XYZissetto-lbytheabove statement. Forfurther information onDMAP
parameters seeparagraph 3above, section 2.4.2.2 intheProgrammer&amp;rsquo;s Manual andsection
5oftheUser&amp;rsquo;s Manual.
7.Method
Adiscussion ofthemethod usedbythemodule writer toachieve thepurpose ofthe
module isgiven inthissection.
8.Subroutines
Thesubroutines which comprise themodule aredescribed inthissection. However,
notallsubroutines capable ofbeing called byamodule arelisted here. Utility
routines andmatrix routines thatareintherootsegment arenotlisted inthis
section. These inlcude: MAPFNS, alltheGIN_routines (&lt;em&gt;PEN, WRITE, CLOSE, READ, FWDREC,
BCKREC, REWIND, E_F,SKPFIL, XGIN&lt;/em&gt;, GIN_, &lt;em&gt;PNC_R), FREAD, G_PEN, WRTTRL, FNAME, CLSTAB,
PREL_C, PEXIT, TMT_G&lt;/em&gt;, MESAGE, andthematrix packing andunpacking routines (BLDPK, PACK,
INTPK, UNPACK). Descriptions forthese routines arefound insection 3.
4.1-5&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P32</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_032/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
9.Design Requirements
Design requirements peculiar tothemodule arepresented.
I0.Diagnostic Messages
Diagnostic messages unique tothemodule aregiveninthissection. Adetailed list
ofNASTRAN diagnostic messages canbefoundinsection 6oftheUser&amp;rsquo;s Manual.
4.1-6&lt;/p&gt;
&lt;p&gt;GENERALCOMMENTSANDINDEXES
4,1.2AIphabetical IndexofModule Functional Descriptions
Section Number Module Name Section Number
4.78 ADD ***
4.96 ADD5
4.72
*** BEGIN 4.71
4.90 BMG 4.73
4.33
4.56 CASE 4.34
4.59 CEAD 4.84
4.10 CHKPNT **
4.13 C_ND **
** DDR 4.79
4.67 DDRI 4.57
4.68 DDR2
4.81 DECAMP 4.70
4.47 DPD **
4.49 DSMGI 4.100
4.51 DSMG2 4.101
** DUMM_DI 4.102
** DUMMOD2 **
** DUMM_D3
4.83
452
453
454
455
424
423
4.92
4.76
4,77
4.16
4.64
4.37
4.38
4.39
4.40
4.48
4.11
4.15
4.35
4.45
4.46
4.62
4.74
4.204.18 END
4.!7 EQUIV
4.14 EXIT
4.82 FBS
*** FILE
4.61 FRRD
4.58 GKAD
4.66 GKAM
4.32 GPSP
4.29 GPWG
4.21 GPI
4.22 GP2
4.25 GP3
4.31 GP4
4.5 IFP*
4.3 IFPI*
4.6 IFP3*
4.89 IFP4*
4,91 IFP5*
4.97 INPUT
4.98 INPUTTI
4.99 INPUTT2
** INPUTT3
** INPUTT4
4.12 JUMPModule Name
LABEL
MATGPR
MATPRN
MATPRT
MCEI
MCE2
MERGE
M_DA
M_DB
M_DC
MPYAD
MTRXlN
BFP
BUTPUT
_UTPUTI
BUTPUT2
_UTPUT3
BUTPUT4
PARAM
PARTN
PARTVEC
PLAI
PLA2
PLA3
PLA4
PL_T
PLTSET
PLTTRAN
PRTMSG
PRTPARM
PURGE
RANDOM
RBMGI
RBMG2
RBMG3
RBMG4
READ
REPT
SAVE
SCEI
SDRI
SDR2
SDR3
SEEMAT
SETVAL
*Executive System Internal Module
**DummyModule
***Executive System Instruction (NoModule Functional Description)
4.1-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
AIphabetical IndexofModule Functional Descriptions (Continued)
Section Number _1odule Name Section Number Modul eName
4.27 SMAI 4.94 UMERGE
4.28 SMA2 4.8 UMFEDIT*
4.30 SMA3 4.93 UPARTN
4.86 SMPYAD
4.36 SMPI 4.60 VDR
4.50 SMP2 4.95 VEC
4.80 S_LVE
4.41 SSGI 4.2 XCSA*
4.42 SSG2 4.7 XGPI*
4.43 SSG3 4.9 XSFA*
4.44 SSG4 4.4 XSBRT*
4.69 XYPL_T
4.103 TABPRT ** XYPRNPLT
4.75 TABPT 4.63 XYTRAN
4.26 TAI
4.65 TRD
4.85 TRNSP
*Executive System Internal Module
**DummyModule
***Executive System Instruction (NoModule Functional Description)
4.1-7a (811172)&lt;/p&gt;
&lt;p&gt;MODHLE FLIHCTIO_AL DESCRIDTIQrlS
4.1.3 Alnhabetical IndexofEntryPoints int_odule Functional Bescrimtions
Nameslisted underentrypointwhichendinthecharacters &amp;ldquo;BD&amp;quot;areblock
Section Number EntryPoint ;1odule Hame
4.46.8
4.46.8
4.46.8
4.46.8
4.46.8
4.48.8.25
4.41.11.37
4.41.II.22
4,46.8
4.90.1
4.90.8
428.8.16
456.1
459.8.14
459.8.15
459.8.19
459.8.9
4.59,8.20
4.59,8,18
4,59.1
4.59.8.1
4.59.8.8
4.59.8.2
4.59.8.3
4.59,8.4
4.59.8.5
4.59.8.10
4.59.8.6
4.598.7
4.238.3
4.468
4.4111.7
4.238.2
4.4111.34
4.4.5.7datasuborograms.
PaaeNumber
AI SDR2 4.46-7
A,I SDR2 4.46-7
AK SDR2 4.46-7
At4 SDR2 4.46-7
AMATRX SDR2 4,46-7
ARRM READ 4.48-18
BAR SSCl 4,41-27
BASGLB SSGI 4.41-22
BINT S_R2 4.46-7
BM_ B_!C 4.90-1
BMGT_JS B!&lt;em&gt;G 4.90-7
BVISC SMA2 4.28-8
CASE CASE 4.56-I
CDETF! CE#D 4.59-12
CDETr_2 CEAD 4.59-12
CDETM3 CEAD 4.59-14
CDIFBS CEAD 4.59-8
CDIVID CE_D 4.59-14
CDTFBS CEAD 4.59-14
CEAD CEAD 4.59-I
CEADI&lt;/em&gt; CE#D 4.59-3
CINFBS CEAD 4.59-8
CINVPR CEAD 4.59-3
CINVPI CEAD 4.59-4
CINVP2 CEAP 4.59-4
CINVP3 CEAD 4.59-6
CMTIMH CEAD 4.59-9
CN@Rr&amp;rsquo;! CEAD 4.59-7
CN_R_I CE&amp;amp;D 4.59-7
CNSTRC PLTSET 4.23-3
C_EF SDR2 4.46-7
C_BIH SSGI 4.41-17
C_HECT PLTSET 4.23-3
C_NE SSCl 4.41-26
CRDFLC XS_RT 4.4-5
4.1-8(8/I/72)&lt;/p&gt;
&lt;p&gt;GENEP_LCO_MENTSANDINDEXES
Section Number EntryPoint &lt;em&gt;bdule &lt;em&gt;lame PaQe_umber
4.41.11.19 CRBSS SSCl 4.41-21
4.59.8.17 CSnRT CEAD 4.59-13
4.59,8.12 CSUB CEAD 4.59-10
4.59.8.16 CSUMM CEAD 4.59-13
4.59.8.11 CXTRNY CEAD 4.59-9
4.78.1 DADD ADD 4.78-I
4.96.1 DADD5 ADD5 4.96-I
4.49.8.6 DBAR DSM_I 4.49-6
4.49.8.10 DC_NE DSr_G1 4.49-7
4.81.1 DDC_m DECO!&lt;em&gt;P 4.81-1
4.67.1 DDRI DDRI 4.67-I
4.68.1 DDR2 DDR2 4.68-I
4.68.8.1 DDRIA DDR2 4.68-4
4.68.8.2 DDRIB DDR2 4.68-5
4.27.8.5 DETCK SMAI 4.27-9
4.48.8.24 DETDET READ 4.48-17
4.4&lt;/em&gt;.&lt;/em&gt;.Z8 LqE_FBS READ 4.48-i9
4,48.8.15 DET&lt;/em&gt; READ 4.48-13
4.48.8.16 DETMI READ 4.48-15
4.48.8.17 DETM2 READ 4.48-l6
4.48.8.18 DETM3 READ 4.48-16
4.48.8.19 DETer4 READ 4.48-16
4.48.8.20 DETM5 READ 4.48-16
4.48.8.21 DETM6 READ 4.48-16
4.82.1 DFBS FBS 4.82-I
4.41.11.9 DIRECT SSGI 4.41-18
4.27.8.27 DKEF SMAI 4.27-16
4,27.8.22 DKI S_!AI 4.27-13
4.27.8.25 DKINT SMAI 4.27-14
4.27.8.26 DKJ SMAI 4.27-15
4.27.8.31 DKJAB S_IAI 4.27-17
4.27.8.23 DKK SMAI 4.27-14
4.27.8.24 DKM SMAI 4.27-14
4.27.8.29 DKIO0 SMAI 4.27-16
4.27.8.33 DK211 SMAI 4.27-18
4.27.8.32 DK219 SMAI 4.27-18
4.27.8.28 DK89 SMAI 4.27-16
4.27.8.38 DMATRX SMAI 4.27-21
4.28.8 DMEF SrIA2 4.28-3
4.1-9 (811172)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Section Number EntryPoint Module Name PaqeNumber
4.28.8 DMI SMA2 4.28-3
4.28.8 DMINT SMA2 4.28-3
4.28.8 DMJ St&amp;quot;A2 4.28-3
4.28.8 DMJAB SMA2 4.28-3
4.28.8 DMK SMA2 4.28-3
4.28.8 DMM SMA2 4.28-3
4.79.1 DMPYAD MPYAD 4.79-I
4.28.8 DMIO0 SMA2 4.28-3
4.28.8 DM211 SMA2 4.28-3
4.28.8 DM219 SMA2 4.28-3
4.28.8 DM89 SMA2 4.28-3
4.47.1 DPD DPD 4.47-I
4.47.8.1 DPDAA DPD 4.47-7
4.47.9.2 DPDCBD DPD 4.47-8
4.47.7.1 DPDI DPD 4.47-3
4.47.7.1 DPD2 DPD 4.47-3
4.47.7.1 DPD3 DPD 4.47-3
4.47.7.1 DPD4 DPD 4.47-3
4.47.7.1 DPD5 DPD 4.47-3
4.24.1 DPL_T PL@T 4.24-I
4.23.1 DPLTST PLTSET 4.23-I
4.49.8.9 DnDHE_ DS_Cl 4.49-7
4.49.8.12 DOUAD DS,GI 4.49-7a
4.24.8.6 DRAW PL@T 4.24-7
4.49.8.5 DR_D DSMGI 4.49-6
4.49.8.7 DSHEAR DSMnl 4.49-6
4.49.1 DSMGI DSMGI 4.49-I
4.51.1 DS_C2 DSMG2 4.51-I
4.49.8.1 DSI DS_IGI 4.49-5
4.49.8.2 DSIA DS_IGI 4.49-5
4.49.8.4 DSIABD DSMCl 4.49-6
4.49.8.3 DSIB DS_I 4.49-5
4.85.1 DTRANP TRNSP 4.85-I
4.49.8.13 DTRBSC DS_GI 4.49-7a
4.49.8.11 DTRIA DSMGI 4.49-7
4.49.8.8 DTRMEM DSMql 4.49-7
4.94.1 DUMERQ UMERGE 4.94-I
4.93.1 DUPART IIP_RTN 4.93-I
4.24.9.11 DVECTR PL_T 4.24-10
4.1-I0 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERALCOMMENTSANDINDEXES
Section _lumber EntryPoint Module Name PageNumber
4.27.8.35
4.27.8,36
4.27.8.37
4.48.8.23
4.41.11.4
4.24.8.16
4.48.8.36
4.41.11.2
4.4.5.8
4.41.11.33
4.41.11.26
4.48.8.22
4.41.11.28
4.41.11.39
4.41.11.38
4.46.8
4.48.8.3/
4.24.8.2
4.46.8
4.41.11.18
4.24.8.12
4.41.11.21
4.73.8.4
4.65.8.5
4.658.11
4.41II.II
4.611
4.618.1
4.618.2
4.618.3
4.61.8.4
4.61.8.5
4.61.8.6
4.46.8
4.46.8
4.46.8
4.46.8
4.46.8
4.46.8
4.41.II.51D4K SMAI
D5K SMAI
D6K SMAI
EADD READ
EDTL SSGI
ELELBL PLOT
EMPC_R READ
EXTERN SSGI
EXTINT XSORT
FCURL SSGI
FDCSTM SSGI
FDVECT READ
FEDT SSGI
FEDTED SSGI
FEDTST SSGI
FFIO0 SDR2
FiLC_R RLAD
FIND PLOT
FJAB SDR2
FNDPNT SSGI
FNDSET PL_T
FNDSIL SSGI
FORMAT MATPRT
F_RHI TRD
F_RH2 TRD
FP_NT SSGI
FRRD FRRD
FRRDIA FRRD
FRRDIB FRRD
FRRDIC FRRD
FRRDID FRRD
FRRDIE FRRD
FRRDIF FRRD
F4 SDR2
F5 SDR2
F6 SDR2
F6211 SDR2
F6219 SDR2
F89 SDR2
GBTRAN SSGI4.27-19
4.27-20
4.27-20
4.48-17
4.41-16
4.24-12a
4.48-19c
4.41-14
4.4-5
4.41-26
4.41-23
4.48-17
4.41-24
4.41-28
4.41-28
4.46-7
4.48-i9d
4.24-4
4.46-7
4.41-21
4.24-10
4.41-22
4.73-4
4.65-14
4.65-17
4.41-19
4.61-I
4.61-5
4.61-6
4.61-6
4.61-6
4.61-7
4.61-7
4.46-7
4.46-7
4.46-7
4.46-7
4.46-7
4.46-7
4.41-28c
4.1-11 (8/1/72)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
SectionMumber EntryPoint Module Name PageNumber
4.24.8.4 GETDEF PL@T 4.24-6
4.58.1 GKAD GKAD 4.58-I
4.58.8.1 GKADIA _KAD 4.58-6
4.58.8.2 GKADIB RKAD 4.58-6
4.58,8.3 CKADIC GKAD 4.58-7
4.58.8.4 GKADID _KAD 4.58-7
4.66.1 _KAM &lt;em&gt;KAM 4.66-I
4.66.8.2 GKAMI&amp;amp; &lt;em&gt;KAM 4.66-4
4.66.8.1 GKAMIB GKA!&lt;/em&gt; 4.66-3
4.41.II.23 GLBBAS SSnl 4.41-22
4.32.1 GPSP G_SP 4.32-I
4.24.8.10 GPTLBL PLAT 4.24-9
4.24.8.9 GPTSYM PL_T 4.24-9
4.29.1 GPWG GPWQ 4.29-I
4.29.8.1 GPWClA GPW&lt;/em&gt; 4.29-5
4.29.8.2 GPW_IB _PWq 4.29-5
4.29.8.3 GPWGIC _PWG 4.29-6
4.21.I GPI GPI 4.21-I
4.22.1 _P2 GP2 4.22-I
4.25.1 GP3 GP3 4.25-2
4.25.8.3 _P3A &lt;em&gt;P3 4.25-4
4.25.8.4 CP3B mP3 4.25-7
4.25.8.2 GP3C GP3 4.25-2
4.25.8.5 GP3D rP3 4.25-9
4.31.I GP4 cD4 4.31-I
4.31.8.1 GP4PRT cP4 4.31-5
4.41.11.16 GRAV SSCl 4.41-20
4.41.11.5 GRAVLI SSCl 4.41-16
4.41.11.6 GRAVL2 SSCl 4.41-16
4.41.11.29 GRAVL3 SS_I 4.41-24
4.41.11.40 HBDY SSGI 4.41-28
4.27.8.45 HHBDY SHAI 4.27-21a
4.27.8.46 HRING SteAl 4.27-21b
4.46.8 IFAC SDR2 4.46-7
4.5.1 IFP IFP 4.5-I
4.5.7.9 IFPDC&lt;/em&gt; IFP 4.5-7
4.3.1 IFPI IFPl 4.3-I
4.3.7.1 IFPIB IFPI 4.3-2
4.3.7.2 IFPIC IFPI 4.3-3
4.1-12 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERALCOM!4ENTSANDINDEXES
Section Number EntryPoint Module Name PageNumber
4.3.7.3 IFPID IFPI
4.3.7.4 IFPIE IFPI
4.3.7.5 IFPIF IFPI
4.3.7.6 IFPIG IFPI
4.3.7.8 IFPIXY IFPI
4.6.1 IFP3 IFP3
4.6.8.1 IFP3B IFP3
4.89.1 IFP4 IFP4
4.89.8.1 IFP4A IFP4
4.89.8.2 IFP4B IFP4
4.89.8.3 IFP4C IFP4
4.89.8.4 IFP4E IFP4
4.89.8.5 IFP4F IFP4
4.89.8.6 IFP4C IFP4
4.91,1 IFP5 IFP
4.91.8 IFP5A IFP
4.5.7.8 IFSlP IFP
4.5.7.8 IFS2P IFP
4.5.7.8 IFS3P IFP
4.5.7.8 IFS4P IFP
4.5.7.8 IFS5P IFP
4.5.7.1 IFXlBD IFP
4.5.7.2 IFX2BD IFP
4.5.7.3 IFX3BD IFP
4.5.7.4 IFX4BD IFP
4.5.7.5 IFX5BD IFP
4.5.7.6 IFX6BD IFP
4.5.7.7 IFX7BD IFP
4.4.5.3 INITCO XSORT
4.65.8.3 INITL TRD
4.98.1 IN_TTI INPUTTI
4.99.1 INPTT2 INPUTT2
4.97.1 INPUT INPUT
4.4.5.9 INTEXT XSBRT
4.65.8.8 INTFBS TRD
4.73.8.1 INTPRT MATPRT
4.24.8.7 INTVEC PL_T
4.48.8.40 INVERT READ
4.48.8.14 INVFBS READ4.3-_
4.3-4
4.3-4
4.3-5
4.3-6
4.6-I
4.6-15
4.89-I
4.89-15
4.89-15
4.89-16
4.89-16
4.89-17
4.89-17
4.91-2
4.91-7
4.5-6
4.5-6
4.5-6
4.5-6
4.5-6
4.5-5
4.5-5
4.5-5
45-6
4.5-6
4.5-6
4.5-6
4.4-4
4.65-13
4.98-I
4.99-2
4.97-I
4.4-5
4.65-15
4.73-I
4.24-8
4.48-19e
4.48-12
4.1-13 (8/I/72)&lt;/p&gt;
&lt;p&gt;HODULE FUNCTIONAL DESCRIPTIONS
Section Number .Entry Point Hodule Name PageNumber
4.48.8.14 INVFSP READ
4.48.8.6 INVPWR READ
4.48.8.7 INVPI READ
4.48.8.8 INVP2 READ
4.48.8.9 INVP3 READ
4.48,8.41 INVTR READ
4.4.5.11 ISFT XS@RT
4.97.8 IUNI@N INPUT
4.27.8.7 KBAR SMAI
4.27.8,18 KC@NE SMAI
4.27.8.18 KC_NEX SMAI
4.27,8.16 KELAS SMAI
4.27.8.30 KFAC SMAI
4.27.8.39 KFLUD2 SMAI
4.27.8.40 KFLUD3 SMAI
4.27.8.41 KFLUD4 SMAI
4.27.8.9 KPANEL SMAI
4.27.8.47 KPLTST SMAI
4.27.8.11 KNDMEM SMAI
4.27,8.14 KQDPLT SMAI
4.27.8.6 KR_D SHAI
4,27.8.42 KSL_T SHAI
4.27.8.44 KS_LID SMAI
4.27.8.43 KTETRA SMAI
4.27,8.21 KTORDR SMAI
4.27.8.20 KTRAPR SMAI
4.27.8,12 KTRBSC SMAI
4.27.8.15 KTRIQD SMAI
4.27.8.19 KTRIRG SMAI
4.27.8.10 KTRMEM SMAI
4.27.8.13 KTRPLT SMAI
4.27.8.8 KTUBE SMAI
4.2.5.2 LDi XCSA
4.41.11.8 L_ADX SSGI
4.46.8.36 MAGPHA SDR2
4.74.8.1 MAP SEEMAT
4.74.8,1 MAPSET SEErIAT
4.28.8,12 MASSD SMA2
4.28.8.7 MASSTQ SMA24.48-12
4.48-8
4.48-8
4.48-9
4.48-9
4.48-19f
4.4-6
4.97-2
4.27-10
4.27-13
4.27-13
4.27-12
4.27-17
4.27-21
4.27-21
4.27-21
4.27-10
4.27-21b
4.27-11
4.27-12
4.27-10
4.27-21a
4.27-21a
4.27-21a
4.27-13
4.27-13
4.27-11
4.27-12
4.27-13
4.27-11
4.27-11
4.27-10
4.2-2
4.41-17
4.46-19
4.74-4
4.74-4
4.28-7
4.28-5
4.1-14 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERAL COM_*IENTS ANDINDEXES
Section Number Entry Point Module Name PageNumber
4.72.1 MATGPR MAT_PR 4.72-I
4.71.1 MATPRN MATPRN 4.71-I
4.73.8.2 MATPRT MATPRT 4.73-2
4.65.8.6 MATVEC TRD 4.65-14
4.28.8.8 ,%_AR SMA2 4.28-6
4.28.8.9 MCBAR SMA2 4.28-6
4.33.1 MCEI MCEI 4.33-I
4.33.8.1 MCEIA MCEI 4.33-2
4.33.8.2 MCEIB MCEI 4.33-2
4.33.7 MCEIC MCEI 4.33-2
4.33.8.3 MCEID MCEI 4.33-2
4.34.1 MCE2 MCE2 4.34-I
4.28.8.11 MCBNE SMA2 4.28-6
4.28.8.10 MC_NtIX S_A2 4.28-6
4.28.8.18 MCRBD SMA2 4.28-8
4.84.1 MERGEI MER_E 4.84-I
4.28.8 MFAC SMA2 4.28-3
4.28.8.23 MFLUD2 SMA2 4.28-8a
4.28.8.24 MFLUD3 SMA2 4.28-8b
4.28.8.25 MFLUD4 SMA2 4.28-8b
4.28.8.26 MFREE SMA2 4.28-8b
4.24.8.13 MINMAX PL_T 4.24-II
4.7.5.11 MPLPRT X_Pl 4.7-6
4.41.II.24 MPYL SSGI 4.41-23
4.41.II.25 MPYLT SSnl 4.41-23
4.28.8.21 _DPLT SMA2 4.28-8a
4.28.8.5 MR_D S_A2 4.28-5
4.28.8.27 MSLBT SMA2 4.28-8b
4.28.8.28 MS,LID SMA2 4.28-8b
4.48.8.11 MTIMSU READ 4.48-10
4.28.8.15 MT_RDR SMA2 4.28-7
4.28.8.14 MTRAPR S_A2 4.28-7
4.28.8.19 _RBSC SMA2 4.28-8
4.28.8.22 _RIQD SMA2 4.28-8a
4.28.8.13 &lt;em&gt;,TTRIR&lt;/em&gt; SMA2 4.28-7
4.28.8.20 MTRPLT SMA2 4.28-8a
4.57.1 MTRXIN T-_RXIN 4.57-I
4.28.8.6 MTUBE S_A2 4.28-5
4.41.11.20 N_RM SSGI 4.41-21
4.1-15 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Section &lt;em&gt;lumber EntryPoint I&amp;rsquo;odule&lt;/em&gt;!ame
4.48.8.10 N@RMI READ
4.70.1 _FP @Fp
4.70.8.1 _FPPUN _]FP
4.70.8.2 OFPI _FP
4.70.8.3 &lt;em&gt;FPI&lt;/em&gt; @_FP
4.70.8.4 _FPIBD _FP
4.70.8.5 _FP2BD _FP
4.70.8.6 _]FP3BD @FP
4.70.8.7 _FP4BD OFP
4.70.8.8 _FP5BD _FP
4.48.8.5 _,RTCK READ
4.59.8.13 &lt;em&gt;RTH&lt;/em&gt; CEAD
4.7.5.10 _SCDMP XGPI
4.100.1 @UTPTI _UTPUTI
4.lOl.l _UTPT2 _]UTPUT2
4.I02.l BUTPT3 _UTPUT3
4.24.8. l PARAM PLAT
4.83.l PARTNI PARTN
4.83.8. l PARTN2 PARTN
4.83.8.2 PARTN3 PARTN
4.41.ll.17 PERMUT SSGI
4.24.8.14 PERPEC PLAT
4.102.8.1 PHDMIA OUTPUT3
4.55.8.5 PKBAR PLA4
4.55.8.10 PKQADI PLA4
4.55.8.11 PKnAD2 PLA4
4.55.8.7 PKQDM PLA4
4.55.8.18 PK(IDMS PLA4
4.55.8.13 PKODMI PLA4
4.55.8.22 PKO,DPL PLA4
4.55.8.4 PKR@D PLA4
4.55.8.14 PKTQI PLA4
4.55.8.16 PKTQ2 PLA4
4.55.8.20 PKTRBS PLA4
4.55.8.8 PKTRI1 PLA4
4,55.8.9 PKTR12 PLA4
4.55.8.6 PKTRM PLA4
4.55.8.17 PKTRMS PLA4
4.55.8.12 PKTRMI PLA4PageNumber
4.48-I0
4.70-I
4.70-2
4.70-3
4.70-3
4.70-3
4.70-3
470-3
470-3
470-3
448-7
459-I0
47-6
4lO0-1
4lOl-I
4.102-I
4.24-4
4.83-I
4.83-4
4.83-4
4.41-20
4.24-II
4.102-2
4.55-4
4.55-5
4.55-5
4.55-5
4.55-7
4.55-6
4.55-8
4.55-4
4.55-6
4.55-7
4.55-8
4.55-5
4.55-5
4.55-4
4.55-7
4.55-6
4.1-16 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
Section Number EntryPoint Module Name PageNumber
4.55.8.21 PKTRPL PLA4 4.55-8
4.55.8.19 PKTROD PLA4 4.55-7
4.55.8.15 PKTRn2 PLA4 4.55-6
4.52.1 PLAI PLAI 4.52-I
4.53.1 PLA2 PLA2 4.53-I
4.54.1 PLA3 PLA3 4.54-I
4.54.8.1 PLA31 PLA3 4.54-3
4.54.8.2 PLA32 PLA3 4.54-3
4.55.1 PLA4 PLA4 4.55-I
4.55.8.3 PLA4B PLA4 4.55-4
4.55.8.1 PLA41 PLA4 4.55-3
4.55.8.2 PLA42 PLA4 4.55-3
4.41.II.13 PLBAD SSGI 4.41-9
4.24.8.3 PL_T PLBT 4.24-5
4.24.8.5 PLT_PR PLBT 4.24-6
4.92.1 PLTTRA PLTTRAN 4.92-I
4.41.II.15 PRESAX SSGI 4.41-20
4.24.8.15 PROCES PL_T 4.24-12
4.73.1 PRTINT MATPR_ 4.73-I
4.73.8.2 PRT_T MATPRT 4.73-2
4.76.1 PRTMSG PRTMSG 4.76-I
4.77.1 PRTPRM PRTPARM 4.77-I
4.73.8.3 PRTVEC MATPRT 4.73-3
4.54.8.4 PSBAR PLA3 4.54-4
4.54.8.9 PSnADI PLA3 4.54-5
4.54.8.10 PSQAD2 PLA3 4.54-5
4.54.8.6 PSnDM PLA3 4.54-4
4,54.8.12 PSQDMI PLA3 4.54-6
4.54.8.16 PSQPLI PLA3 4.54-7
4.54.8.3 PSROD PLA3 4.54-3
4.54.8.15 PSTPLI PLA3 4.54-6
4.54.8.13 PSTQI PLA3 4.54-6
4.54.8.18 PST02 PLA3 4.54-7
4.54.8.14 PSTRBI PLA3 4.54-6
4.54.8.7 PSTRII PLA3 4.54-5
4.54.8.8 PSTRI2 PLA3 4.54-5
4.54.8.5 PSTRM PLA3 4.54-4
4.54.8.11 PSTRMI PLA3 4.54-5
4.54.8,17 PSTRQ2 PLA3 4.54-7
4.1-17 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Section Number EntryPoint Module Name PageNumber
4.41.11.35 QDMEM SSGI 4.41-27
4.41.11.42 QDPLT SSGI 4.41-28a
4,41.11.41 QHBDY SS_I 4.41-28
4.19.1 QPARAM PARAM 4.19-I
4.48.8.38 QRITER READ 4.48-19d
4.64.1 RANDOM RANDOM 4.64-I
4.64.8.4 RAND1 RANDOM 4.64-6
4.64.8.5 RAND2 RANDOM 4.64-6
4.64.8.5 RAND2A RANDOM 4.64-6
4.64.8.6 RAND3 RANDBM 4.64-7
4.64.8.7 RAND4 RANDOM 4.64-7
4.64.8.2 RAND5 RANDBM 4.64-6
4.64.8.8 RAND6 RANDOM 4.64-7
4.54.8.1 RAND7 RANDOM 4.64-5
4.64.8.3 RAND8 RANDOM 4.64-4
4.37.1 RBMGI RBMGI 4.37-I
4.38.1 RBMG2 RBMG2 4.38-I
4.39.1 RBMG3 RBMG3 4.39-I
4.40.1 RBMG4 RBMG4 4.40-I
4.48.8.1 READ1 READ 4.48-4
4.48.8.2 READ2 READ 4.48-5
4.48.8.3 READ3 READ 4.48-6
4.48.8.4 READ4 READ 4.48-7
4.48.8.2 READ5 READ 4.48-5
4.48.8.42 READ6 READ 4.48.19f
4.48.1 REIG READ 4,48-I
4.41.11.14 RFORCE SSGI 4.41-19
4.41.11.43 ROD SSGI 4.41-28a
4.27.8.34 ROMBDK SMAI 4.27-19
4.46.8 ROMBER SDR2 4.46-7
4.48.8.35 RBTATE READ 4.48-19c
4.48.8.34 ROTAX READ 4.48.19c
4.4.5.2 RPAGE XS_RT 4.4-3
4,46.8.37 SAXIFI SDR2 4.46-19
4.46.8.38 SAXlF2 SDR2 4.46-19
4.46.8.15 SBARI SDR2 4.46-12
4.46.8.32 SBAR2 SDR2 4.46-18
4.46.8.27 SBSPL2 SDR2 4.46-16
4.31.8.2 SCALEX GP4 4.31-6
4.1-18 (811172)&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
Section Number Entry Point Module Name PageNumber
4.35.1 SCEI SCEI 4.35-I
4.46.8.16 SC_WEI SDR2 4.46-12
4.46.8.30 SC_NE2 SDR2 4.46-17
4.46.8.31 SC_NE3 SDR2 4.46-18
4.46.8.43 SDRETD SDR2 4.46-19b
4.45.1 SDRI SDRI 4.45-I
4.45.8.1 SDRIA SDRI 4.45-5
4.45.8.2 SDRIC SDRI 4.45-5
4.45.8.3 SDRID SDRI 4.45-5
4.46.1 SDR2 SDR2 4.46-I
4.46.8.2 SDR2A SDR2 4.46-8
4.46.8.1 SDR2AA SDR2 4.46-8
4.46.8.3 SDR2B SDR2 4.46-9
4.46.8.20 SDR2C SDR2 4.46-13
4.46.8.21 SDR2D SDR2 4.46-14
4.46.8.22 SDR2E SDR2 4.46-15
4.62.1 SDR3 SDR3 4.62-I
4.62.8.1 SDR3A SDR3 4.62-9
4.74.1 SEE_T SEEMAT 4.74-I
4.46.8.13 SELASI SDR2 4.46-12
4.46.8.26 SELAS2 SDR2 4.46-16
4.23.8.1 SETINP PLTSET 4.23-3
4.20.I SETVAL SETVAL 4.20-I
4.24.8.8 SHAPE PLBT 4.24-8
4.48.8.32 SIC_X READ 4.48-19b
4.48.8.33 SINCAS READ 4.48-19b
4.41.II.12 SLBAD SSGI 4.41-19
4.27.8.1 SMAI SMAI 4.27-8
4.27.8.2 SMAIA SMAI 4.27-8
4.27.8.3 SMAIB SMAI 4.27-9
4.27.8.4 SMAIBD SMAI 4.27-9
4.28.1 SMA2 SMA2 4.28-I
4.28.8.2 SMA2A SMA2 4.28-4
4.28.8.3 SMA2B S_2 4.28-4
4.28.8.4 SMA2BD SMA2 4.28-4
4.30.I SMA3 SMA3 4.30-I
4.30.8.1 SMA3A SMA3 4.30-5
4.30.8.2 SMA3B SMA3 4.30-5
4.30.8.4 SMA3BD SMA3 4.30-6
4.1-19 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Section Number EntryPoint Module Name PageNumber
4.30.8.3
4.48.8.30
4.86.1
4.36.1
4.50.1
4.41.11.44
4.80.1
4.46.8.7
4.46.8.25
4.468.12
4.468.10
4.468.27
4.468.4
4.468.23
4.4111.50
4.4111.49
4.411
4.41II.I
4.421
4.428.1
4.43.1
4.44.1
4.46.8.39
4.46.8.40
4,46.8.41
4.46.8.42
4.65.8.7
4.46.8.19
4.46.8.35
4.46.8.28
4.46.8.18
4.46.8.34
4.46.8.8
4.46.8.17
4.46.8.33
4.46.8.11
4.46,8.9
4.46.8.14
4.46.8.29SMA3C SMA3
SMLEIG READ
SMPYAD SMPYAD
Sr4PI SMPI
SMP2 SMP2
S@LID SSGI
S_LVE S_LVE
SPANLI SDR2
SPANL2 SOR2
SNDMEI SDR2
SQDPLI SDR2
SQRTM READ
SR@DI SDR2
SR_D2 SDR2
SSGETD SSGI
SSGKHI SSGI
SS_I SSGI
SSGIA SSGI
SSG2 SSG2
SS62BI SSG2
SSG3 SSG3
SSG4 SSG4
SSL@TI SDR2
SSL_T2 SDR2
SS@LDI SDR2
SS_LD2 SDR2
STEP TRD
ST@ROI SDR2
ST@RD2 SDR2
STQME2 SDR2
STRAP1 SDR2
STRAP2 SDR2
STRBSI SnR2
STRIRI SDR2
STR!R2 SDR2
STRMEI SDR2
STRPLI SDR2
STRnDI SDR2
STRnD2 SDR24.30-6
4.48-19a
4.86-I
4.36-I
4.50-I
4.41-28a
4.80-I
4.46-10
4.46-16
4.46-11
4.46-11
4,48-19
4.46-10
4.46-16
4.41-28c
4,41-28c
4.41-I
4.41-14
4.42-I
4.42-4
4.43-I
4.44-I
4.46-19a
4.46-19a
4.46-19a
4.46-19b
4.65-15
4.46-13
4.46-19
4.46-17
4.46-13
4.46-18
4.46-10
4.46-13
4.46-18
4.46-11
4.46-11
4.46-12
4.46-17
4.1-20 (8/I/72)&lt;/p&gt;
&lt;p&gt;GENERALCOMMENTSANDINDEXES
Section Number EntryPoint Module Name PageNumber
4.46.8.6 STUBEI SDR2
4.48.8.13 SUB READ
4.48.8.26 SUMM READ
4.3.7.7 SWSRT IFPI
4.103.1 TABFMT TABPRT
4.75.1 TABPT TABPT
4.26.1 TAI TAI
4.26.8.2 TAIA TAI
4.26.8.3 TAIB TAI
4.26.8.4 TAIC TAI
4.26.8.5 TAICA TAI
4.26.8.6 TAIF TAI
4.26.8.7 TAIG TAI
4.41.11.3 TEMPL SSGI
4.41.11.45 TETRA SS_I
4.41.11,10 TP_NT SSGI
4.41.11.46 TRBSC SSGI
4.65.1 TRD TRD
4.65.8.! TRDIA TRD
4.65.8.2 TRDIB TRD
4.65.8.4 TRDIC TRD
4.65.8.9 TRDID TRD
4.65.8.10 TRDIE TRD
4.48.8.31 TRIDI READ
4.41.11.36 TRIMEM SSGI
4.41.11.47 TRIQD SSGI
4.85.1 TRNSP TRNSP
4.41.11.48 TRPLT SSGI
4.41.11.32 TT_RDR SSGI
4.41.11.31 TTRAPR SSCl
4.41.11.30 TTRIR_ SSGI
4.8.1 UMFEDT UMFEDIT
4.8.6 UMFZBD UMFEDIT
4.48.8.29 VALVEC READ
4.60.8.1 VDR VDR
4.60.8.2 VDRA VDR
4.60.8.3 VDRB VDR
4.60.9.2 VDRBD VDR
4,95.1 VEC VEC4.46-I0
4.48-11
4.48-18
4.3-6
4.103-I
4.75-I
4.26-I
4.26-14
4.26-14
4.26-14
4.26-15
4.26-15
4.26-15
4.41-15
4.41-28a
4.41-18
4.4i-28b
4.65-I
4.65-12
4.65-12
4.65-13
4.65-16
4.65-16
4.48-19a
4.41-27
4.41-28b
4.85-I
4.41-28b
4.41-26
4.41-25
4.41-25
4.8-I
4.8-I
4.48-19
4.60-5
4.60-5
4.60-6
4.60-7
4.95-I
4.1-21 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Section Number
4,73.8,3
4,48,8.39
4,76,8,2
4,24,8.17
4.4,5,5
4,7,62
4,11,I
4,11.6
4.12,1
4.13.1
4,14.1
4,18.1
4,10,1
4,9,5.2
4,2,1
4,9.5,4
4,17.1
4..4.5.4
4,4.5,10
4,9.5,7
4,7,5.9
4,7.5,8
4.7.1
4,7,6,2
4,7.5.2
4,7,5,1
4,7,5,1
4,7,5,5
4,7,5,4
4,7,6,2
4,7,5.5
4.7,5,3
4.7,5.6
4.9,5.6
4,9,5,5
4,4,5,6
4,9,5,3
4,16.1
4,4,5.1EntryPoint
VECPRT
WILVEC
WRTMSG
WRTPRT
XBCDBI
XBSBD
XCEI
XCEI
XCEI
XCEI
XCEI
XCEI
XCHK
XCLEAN
XCSA
XDPH
XEQUIV
XFADJ
XFADJI
XFILPS
XFLDEF
XFLORD
XGPI
XGPIBD
XGPIBS
XGPIDG
XGPIMW
XIPFL
XLNKHD
XMPLBD
XOPFL
X_SGEN
XPARAM
XPLEQK
XPOLCK
XPRETY
XPUNP
XPURGE
XRECPSModule Name
MATPRT
READ
PRTMSG
PLOT
XS_RT
XGPI
REPT
REPT
JUMP
COND
EXIT
END
XCHK
XSFA
XCSA
XSFA
EQUIV
XSBRT
XS_RT
XSFA
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XGPI
XSFA
XSFA
XS_RT
XSFA
XPURGE
XSORTPageNumber
4,73-3
4.48-19e
4.76-2
4,24-12a
4,4-4
4.7-7
4.11-I
4.11-2
4,12-I
4,13-I
4.14-I
4,18-I
4.10-I
4.9-4
4.2-I
4,9-6
4.17-I
4.4-4
4.4-5
4.9-7
4,7-5
4,7-5
4.7-I
4,7-7
4,7-3
4.7-3
4,7-3
4,7-4
4.7-4
4,7-7
4,7-4
4,7-3
4.7-4
4.9-6
4,9-6
4,4-4
4.9-5
4.16-I
4.4-3
4,1-22 (8/I172)&lt;/p&gt;
&lt;p&gt;GENERAL COMMENTS ANDINDEXES
Section Number Entry Point Module Name PageNumber
4.2.5.1 XRGDFM XCSA 4.2-I
4.15.1 XSAVE XSAVE 4.15-I
4.2.5.4 XSBSET XCSA 4.2-2
4.7.5.7 XSCNDM XGPI 4.7-4
4.9.1 XSFA XSFA 4.9-I
4.4.1 XS_RT XS_RT 4.4-I
4.9.5.1 XS_SGN XSFA 4.9-3
4.48.8.12 XTRNSY READ 4.48-II
4.63.8.7 XYCHAR XYTRAN 4.63-8
4.63.8.1 XYDUMP XYTRAN 4.63-5
4.63.8.2 XYFIND XYTRAN 4.63-5
4.63.8.8 XYGRAF XYTRAN 4.63-8
4.63.8.4 XYL_G XYTRAN 4.63-6
4.63.8.3 XYBUT XYTRAN 4.63-6
4.69.1 XYPLBT XYPLBT 4.69-I
4.63.8.6 XYPRPL XYTRAN 4.63-7
4.63.8.5 XYTICS XYTRAN 4.63-7
4.63.1 XYTRAN XYTRAN 4.63-I
4.1-23 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXCSA(EXECUTIVE CONTROLSECTIONANALYSIS)
4.2
4.2.1
4.2.2EXECUTIVE PREFACE MODULE XCSA (EXECUTIVE CONTROL SECTION ANALYSIS)
Entry Point: XCSA
Purpose
Toprocess theNASTRAN Executive Control Deck.
4.2.3 Calling Sequence
CALLXCSA. XCSAiscalled onlybysubroutine SEMINT.
4.2.4 Method
Thecards oftheExecutive Control Deckarereadandprocessed withchecks being made for
illegal formats, duplication anderrors peculiar totheparticular cardbeing processed. When
allofthecontrol cards havebeenprocessed (i.e., CENDcontrol card found), theExecutive
Control Table (XCSA) iswritten ontheProblem TaPe andXCSAreturns tothecallinq routine.
4.2.5 Subroutines
4.2.5.1 Subroutine Name: XRGDFM
I.Entry Point: XRGDFM
2.Purpose: Toselect a.rigid format based ontheSBLcardintheExecutive Control Deck.
3.Calling Sequence: CALLXRGDFM (NEWS_L,BLDS_L,IAPP)
NEWS_L -Two-word array containing solution andsubset numbers taken fromS0L
control card.
_LDS_L Two-word array containing solution andsubset numbers taken fromthe
OldProblem Tapeiftheproblem isarestart. Ifnotarestart, BLDS_L =O.
IAPP -Approach code(l=F_RCE, 2=DISPL, 3=DM/_P) taken fromtheAPPcard
intheExecutive Control Deck.
4.Method: Iftheproblem isbeing restarted, acheck ismade forasolution (Rieid
Format) change. Ifthesolution hasbeenchanged, abitissetintable MEDMSK in
named comon block /XMDMSK/.
4.2-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P33</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_033/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Acheckismadeforalegalsolution number, and,ifacceptable, abranch ismadeonthe
solution number, andsubroutine LDi(i=solution number) iscalled tocreate theDMAPandMED
records fortheXCSAtable. XRGDFM thenreturns tothecalling routine XCSA.
4.2.5.2
1•
2.Subroutine Name: LDi,where i=solution number, i=01,02&amp;hellip;.. 12.
EntryPoints: LDi
Purpose: Towrite theDMAPsequence andMEDrecords oftheXCSAExecutive Tablefor
solution (Rigid Format) i(seeXCSAExecutive Control Tabledescription, Section 2.4.2.5).
3.Calling Sequence: CALLLDi(SUBSET)
SUBSET -Solution subset number fromtheSOLcontrol card.
4.Method: Thepacked DMAPprogram isgenerated, andthensubroutine XSBSET iscalled to
select theproper solution subset fortheDMAPprogram byaltering theIS1array. Upon
return fromXSBSET thearrays IS1,JNMandINM(see4.2.6.2 below) arewritten ontheNew
Problem Tapetocomplete theMEDrecord forExecutive TableXCSA. LDithenreturns to
calling routine.
4.2.5.3 Subroutine Name: XSBSET
I.EntryPoint: XSBSET
2.Purpose: Toeliminate DMAPinstructions notbelonging tothespecified subset by
altering theISlarray.
4.2-2 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULE XCSA(EXECUTIVECONTROL SECTION ANALYSIS)
3D
NSS
SUBSET
ISl
NDI
NWPI
4.Method:Calling Sequence: CALLXSBSET (IDI,NSS,SUBSET,ISI,NDI,NWPI)
IDl Table containing DMAPinstruction numbers ofthose instructions that are
notpartofthespecified subset.
-Number ofsubsets intable IDl.
-Subset tobeselected fromtable IDl.
-Module execution decision table.
-Number ofDMAP instructions inDMAPprogram.
-Number ofwords perISlentry.
Table IDlissearched andtheproper subset isselected. EachDMAPinstruction
hasacorresponding entry intable ISl. IftheISlentry foraninstruction iszero, then
theinstruction iseliminated fromtheDMAPproqram. Therefore zeroino theISlentries of
those instructions specified intable IDlyields theproper subset. XSBSET thenreturns to
thecalling routine.
4.2.6 Design Requirements
4.2.6.1 UseofOpen Core
Open coreisusedforGIN_buffers, forgenerating theXPTDIC Executive Table (seesection
2.4) onrestarts, andforstoring user generated DMAPprograms. Named conunon block /XCSABF/
defines thebeginning ofopencoreformodule XCSA. Since XPTDIC isnotstored permanently in
open coreandbecause theuseofopencore tostore aDMAPprogram andacall toLDiare
mutually exclusive, theLDisubroutines canbeorigined foroverlaypurposes atthesamelocation
as/XCSABF/.
4.2.6.2 Restart Tables Initialized intheRoutines
Thefollowing tables areinitialized bytheLDi(i=solution number) subroutine orits
associated Block Dataprogram andareusedtoaidmodule XGPI inrestarting aproblem which uses
Rigid Format i.
I.ISl-Module Execution Decision Table: Thistable whenusedinconjunction withtable
MEDMSK innamed common block /XMDMSK/willprovide module XGPIwiththeinformation needed
todecide whether ornottosettheexecute flag inan_SCAR entry. EachDMAPinstruction
4.2-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
inaRigid Format hasacorresponding entryinIS1.AnentryinIS1canbeonetofive
words inlength, andonlybits1through 31areusedtoformatruthtable. Notethatif
anIS1entryiszero,thecorresponding DMAPinstruction isunconditionally excluded from
theRigidFormat DMAPprogram beingcompiled bymodule XGPI.
2.JNM-FileNameRestart Table: TheJNMtableprovides module XGPIwiththecapability
ofregenerating datablocks whicharemissing intherestart dictionary andwhichare
needed torestart theproblem. Notethattherestart mustbeamodified restart. Ifa
datablockismissing, theJNMtablewillindicate whichbittosetintableMEDMSK. MEDMSK
isthenusedwithIS1todetermine which DMAPmodules mustbere-executed inorderto
correctly regenerate themissing datablock.
Sample JNMEntry:
Word1
2
3DataBlock
Name(BCD)
BN(integer)
BNisthebitnumber ofthebitwhich istobesetintableMEDMSK toregenerate the
specified datablock. Theusable bits(bits1-31)ofMEDMSK arenumbered sequentially
starting frombit31ofthefirstword. MEDMSK isfivewords long,
Example:
BN=
MEDMSK
WordI, &amp;ldquo;&amp;ndash;m 31, 32, &amp;hellip;m62, 63, &amp;hellip;,93 m9t+i&amp;hellip;,12W m125,&amp;hellip;,155.
1 2 3 4 5
3.INM-CardNameRestart Table: Whentheproblem isbeinnrestarted andinputdata
(BulkDataand/or CaseControl Data)hasbeenmodified, table INMtellsmodule XGPI
whether ornotthemodifications affect thecompilation oftheDMAPprogram associated
withtheRigidFormat. TableMJCDinnamedcommon block /IFPXI/ andtableMJMSK innamed
common block/IFPXO/ indicate whichcardshavebeenmodified. IfINMhasanentryfora
modified card,theINMentrywillindicate whichbittosetintableMEDMSK. MEDMSK is
thenusedwithIS1todetermine which DMAPmodules mustbere-executed.
4.2-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE XCSA (EXECUTIVE CONTROL SECTION ANALYSIS)
Sample INMEntry:
Word
BNisthenumber ofthebitwhich istobesetintable MEDMSK iftheassociated cardname
hasbeenmodified. Seesample JNMentry forfurther description ofBN.
4.IDl-Subset Table: DMAPinstructions inaDMAP program arenumbered sequentially
starting with &amp;ldquo;BEGIN&amp;rdquo; asinstruction number I.Table IDlcontains theinstruction numbers
ofthose instructions thatarenottobeincluded inasubset.
Sample IDlEntry:
Word
l+NlNI(in*en:r_
Ij(integer)
IkNlwordsRepeatforallsubsets
N1=number ofinstructions todelete insubset I.(N1_0).
lj-Ik=DMAP instruction numbers ofinstructions tobedeleted.
4.2-5&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.2.7Diagnostic Messages
Every effort ismadetogetthrough module XCSAsothatthemodules IFPIandIFPcanprocess
theCaseControl DeckandtheBulkDataDeck. XCSAsetstheN_G_flag innamed common block
/SYSTEM/according totheseverity oftheerrors found.
NOG_=0-noerrors found.
l-jobwillterminate after module XGPI.
2-jobwill terminate after IFPmodules.
3-jobterminates inXCSA.
Seediagnostic message section ofUser&amp;rsquo;s Manual (section 6.2)foradetailed discussion of
XCSAerror messages. XCSAmessages include numbers 501thru526.
4.2-6&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULE IFPI(INPUT FILEPROCESSOR,PART l)
4.3EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl)
4.3.1 Entry Point: IFPI
4.3.2 Purpose
Toprocess theCase Control Deck.Seesection 2.3oftheUser&amp;rsquo;s Manual foradiscussion
oftheCaseControl Deck.
4.3.3 Calling Sequence
CALLIFPI. IFPI, aPreface module, iscalled onlybysubroutineSEMINT.
4.3.4 Input Data
Theinput dataconsists oftheCaseControl DeckandtheCASECCdatablock from theOld
Problem Tapeiftheproblem isarestart.
4.3.5 Output DataBlocks
CASECC -CaseControlDataTable.
PCDB -PlotControl DataTable (forthestructure plotter).
XYCDB -XYoutput Control DataBlock.
Notes:
I.CASECC will always exist.
2.PCDBwillexist onlyifastructure plotter package isincluded intheCase
Control Deck.
3.XYCDB will exist onlyifaXY_UT plotter package isincluded intheCase
Control Deck.
4.3.6 Method
TheCaseControl Cards arereadandstored onascratch fileforlater use. Thetitle
cards areabstracted toformpageheadings. Title cardabstraction isstopped byaSYM,SUBCASE,
SYMC@M orREPCASE card. IFPIisstopped byaBEGIN BULK card.
4.3-1&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.3.7
4.3.7.1Theconstruction ofCASECC isasfollows:
I.Thescratch tapeisreadonecardatatime,andsubroutine XRCARD iscalled to
translate thecard.
2.Thefirstfourcharacters beginning withanon-blank areidentified inakeyword
table, andcardtypedependent routines areexecuted. (SeeCaseControl DeckinUser&amp;rsquo;s
Manual).
3.When&amp;quot;SUBCASE&amp;rdquo; typecardsareencountered, aCASECC record iswritten out.
4.Ifthecard_UTPUT (PL_T) isencountered,XRCARD images ofsucceeding cardsarewritten
onP2DB.
5.Ifthecard_UTPUT (XY_UT) isencountered,IFPIXY processes thesucceeding cards into
theXYCDB.
Themodule conclusion isasfollows:
I.AcopyofCASECC isplaced ontheNPTPforuseinrestart.
2.Ifthisrunisarestart, IFPIBiscalled toanalyze CASECC changes andsetmodify flags
forlateruseinExecutive Preface module XGPI(seesection 4.7).
Subroutines
Subroutine Name: IFPIB
I.EntryPoint: IFPIB
2.Purpose: Tosetmodify flagsforuseinmodified restart.
3.Calling Sequence: CALLIFPIB(ICASE,@PTP,CASECC,IBUFI,IBUF2,LENCC)
ICASE Atwo-dimensional array (LENCC,2) forstorage ofbothcopies ofCASECC -
OPTP
CASECC
IBU I IBUF2J
LENCCarray-input.
GIN_filenameoftheOldProblem Tape-BCD-input.
GINOfilenameofCASECC -BCD-input.
GINObuffer pointers -integer -input.
Rowdimension ofICASE-integer -input.
4.3-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl)
NW_RDS
4.Method:C_M_NIIFPXOISPACE(3),NW_RDS
Pointer into/IFPXO/suchthatIFPImodify flags areinSPACE(NW_RDS).
CASECC andthecopyofCASECC onthe_PTParecompared according tothefollowing
scheme. Thelocal array IW_RD classifies eachword inCASECC into0andI.0words: If
theCASECC word isnon-zero andIBITisnon-zero inthisposition, theIBITbitisturned on
in/IFPXO/.lword: IftheCASECC word isdifferent fromthe_PTPword andIBITis
non-zero inthisposition, theIBITisturned onin/IFPXO/.
IFPIB alsodetermines theloopnature oftheproblem. Thelooping rules areas
follows:
a.Thecurrent problem will loopunder thefollowing conditions: SPCsetchanges;
MPCsetchanges; direct input matrix changes; transfer function setchanges; tran-
sient loadchanges; frequency setchanges; differential stiffness coefficient set
isgreater thanzero; andPiecewise Linear coefficient setisgreater thanzero.
Ifanyoftheabove conditions aremet.LB_P$ isturned onin/IFPXO/.
b.Theoldproblem might havebeenalooping problem iftheabove conditions were
present inthe_PTP CASECC. Iftheoldproblem wasalooping problem asdetermined
in(a)andthenu_er ofrecords inCASECC changes, L_PI_ Isset(this should
force there-execution oftheentire loop).
c.Iftheproblem isnotalooping problem, N_L_P$ isset.
4.3.7.2 Subroutine Name: IFPIC
I.
2.
3.
ISUB
181
C_RE
SCRIEntry Point: IFPIC
Purpose: Toconstruct setlists fropSETcards.
Calling Sequence: CALLIFPIC (ISUB,181,CORE,SCRl,NWPC,ICC,NZ,THRU,NSET)
-l-master set. 2-setbelongs toasubcase -integer -input.
-Pointer tostorage forsetincore-integer -input/output.
-Opencorearray.
-GIN_ filenumber ofscratch filecontaining cardimages -integer -input.
4.3-3 (311171)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.3.7.3NWPC
ICC
NZ
THRU
NSET
4.3.7.4
I.
2.
3.
4.3.7.5Numberofwordspercard-integer-input.
CurrentlinecountofCaseControlcardecho-integer-input/output.
Lengthofopencore-integer-input/output.
BCDvalue&amp;quot;THRU&amp;quot;-BCD-input.
Numberofsetsfoundtocurrentset-integer-input.
Subroutine Name:IFPID
I.EntryPoint:IFPID
2.Purpose:Towriteuserdiagnostic messagesfromIFPI.
3.CallingSequence: CALLIFPID(MSGN)
MSGNUsermessagenumber-integer-input.
Subroutine Name:IFPIE
EntryPoint:IFPIE
Purpose:TowriteoutCASECCandupdatesets.
CallingSequence: CALLIFPIE(CASE,ISUBC,SYMSEQ,NWDSC,181)
CASEArraycontaining CaseControlrecordtobewrittenout(CASE(LENCC,2)),
ISUBCFivewordBCDarraycontaining currentsubcasenumber-BCD-output.
SYMSEQ-Symmetrycoefficient array-real-input.
NWDSCPointertobeginningofsetlists-integer-input/output.
181Pointertoendofsetlist-integer-output.
Subroutine Name:IFPIF
I.EntryPoint:IFPIF
2.Purpose:Tofindthefirstfourcharacters beginningwithanon-blankononeinput
card.
4.3-4&lt;/p&gt;
&lt;p&gt;3.
Sn
IW@RD
IS
IBEN
II
IFPIX
IFPIA
4.3.7.6
I.
2.
3.
ITYPE
CASE
ISUBI
IFPIXEXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl)
Calling Sequence: CALLIFPIF ($n,IWgRD,IS,IBEN,II)
-FCRTPJ_N statement nu_er which definesthereturn tobetaken iftheentire
cardisblank.
-First fourcharacters beginning with anon-blank, leftjustified -BCD-output.
-Nu_er ofbits/character ti_s (nu_er ofcharacters/word-l) -integer -input.
-Maskusedtodetermine ifcharacter isblank &amp;lsquo;bOO0&amp;rsquo; -input.
-Pointer toword inwhich IWCRD begins -integer -output.
Cg_N/IFPIX/CgRE(20)
-20-word array holding card image -BCD-input.
C¢V_W_M/IFPIA/
-See/IFPIA/description under Design Requirements (section 4.3.8).
Subroutine Name: IFPIG
Entry Point: IFPIG
Purpose: Tofind anequal signandcopytheremainder ofthedataintoaspecified arrays
Calling Sequence: CALLIFPIG (ITYPE,CASE,ISUBI)
-Indicates area
Io
2.
3.
4.
5.
6.
7.
8.
-integer -input.inwhich tostore data.
TITLE
SUBTITLE
LABEL
HEADI
HEAD2
HEAD3
PL_TID
First 32words ofCASEof/¢UTPUT/
-Casecontrol array (132,2) unless ITYPE =8,when itmaybeonly32word array.
Subcase nu_er -lor2ofCASEarray.
CCHMCN/IFPIX/CCRE(20)
-20-word array holding cardimage.
4.3-5&lt;/p&gt;
&lt;p&gt;_UTPUT -
IFPIAMODULE FUNCTIONAL DESCRIPTIONS
C_MM_N/_UTPUTI
Output common block -holdsBCDtitles forNASTRAN pages.
COMMON/I FPIA/
See/IFPIA/ description underDesign Requirements (section 4.3.8).
4.3.7.7 Subroutine Name: SWSRT
I.EntryPoint: SWSRT
2.Purpose: Tochecksetlistsforduplicates andoverlapping intervals.
sortslistsintoincreasing order.
3.Calling Sequence: CALLSWSRT(LIST,IST_R,NLIST)
LIST Arrayofsetmembers.
IST_R Scratch spaceoflength NLIST.
NLIST Number ofmembers inLIST.
4.3.7.8 Subroutine Name: IFPIXY
I.EntryPoint: IFPIXY
2.Purpose: Toconstruct theXYCDBdatablock.
3.Calling Sequence: CALLIFPIXY (FLAG)
FLAG-O,firstentryforinitialization; I,dataentry; -I,lastentry.
to1onreturn fromthefirstentry-integer -input/output.
CARD -
CARD1 -SWSRTalso
FLAGisset
COMMON/IFPIX/CARD(20), CARD1(20)
Contains carddataasreadfromtheinputfile.
Contains XRCARD translatioq ofCARDunless CARD(1) contains &amp;lsquo;XTIT&amp;rsquo;, &amp;lsquo;YTIT&amp;rsquo;,
&amp;lsquo;TCUR&amp;rsquo;, &amp;lsquo;YTTI&amp;rsquo; or&amp;rsquo;YBTI&amp;rsquo; InthiscaseCARD1 (20)contains BCDdataoccurring
aftertheequalsign.
4.3.8 Design Requirements
I.Onescratch file.
2.Opencoreat/IFPIX/.
4.3-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl)
C@MM_N/I FPIX/
Card
Image
XRCARD
translation
ofinput card20words
setlists
currently
active
2GINBbuffers
3.Common block IFPIA.
Name Length
NAME 2
SUBC 1
SET 1
SYMS 1
TSTE 1
LABE 1
SUBT 1
SCRI 1
CASECC 1
BLANK 1Meanin_
Nameofdatablock forerror
messages.
Subcase keyword
Setkeyword
Symmetry sequence keyword
Timestepcardselection keyword
Label keyword
Subtitle keyword
GINBfilenumber ofscratch file
GINBfilenameofCASECC
Blank wordInitialized to
CASE
CC
SUBC
SETb
SYMS
TSTE
LABE
SUBT
301
CASE
bbbb
4.3-7&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Name
CARD
CeUN
T
BEGI
TITL
CASEN
SPCF
VEL_
ACCE
ELF_
STRE
DISP
&lt;em&gt;UTP
SYM
FREQ
DLBA
TEMP
DEFO
TIME
SPC
MAXL
IC
METH
LOAD
MPC
STIF
ALL
THRU
SORT
UNS_Length
l
1
1
IIMeanin&lt;/em&gt;
Heading wordcard CARD
Heading word COUN
COUNT T
Beginbulkkeyword BEGI
Titlekeyword TITL
CaseControl pageheading CaseControl
Deckecho
Forces ofconstraint keyword SPCF
Velocity keyword VEL_
Acceleration keyword ACCE
Element forces keyword ELF_
Element stress keyword STRE
Displacement keyword DISP
_utput keyword &lt;em&gt;UTP
Symmetry subcase keyword SYM
Frequency setkeyword FREQ
Dynamic loading keyword DL_A
Temperature field keyword TEMP
Deformation setkeyword DEF&lt;/em&gt;
Time keyword TIME
Single-point constraint setkeyword SPC
Maximum number ofoutput lines keyword MAXL
Initial condition setselection id IC
Realeigenvalue orbuckling method METH
selection keyword
Load setselection keyword LOAD
Multipoint setselection keyword MPCb
Stiffness thermal field keyword STIF
ALLkeyword ALLb
THRU keyword THRU
Sorted echokeyword S_RT
Unsorted echokeyword UNSOInitialized to
4.3-8&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEIFPI(INPUTFILEPROCESSOR, PARTl)
Nanle
ECH_
PL_T
M_DE
PUNC
PRIN
NWPC
NCPW
B_TH
N_NE
PCDB
NAME
VECT
SYMC
EQUAL1
NM_DES
IB_B
IEND
ISYMCM
L_ADN
I_UT2
ICC
NSET
NSYM
IN_M_R
NPTP
&lt;em&gt;PTP
D_L
ZZZZBBLength
l
l
l
l
l
l
l
l
l
l
2Meanino
Bulkdataechokeyword
Plotkeyword
Modes keyword
Punch keyword
Print keyword
Number ofwords percard
Number ofcharacters perword (NASTRAN)
Echo-sorted andunsorted
None keyword
Plotcontrol dataGIN_filename
GINBerror message forPCDBfile
Alternate displacement keyword
Symcom keyword
Equal signleftadjusted
Value ofmodes card
Structure plotflag
O,notcurrently instructure
plotmode
l,instructure plotmode
Sy_om flag
Current Subcase IDnumber
Printed cardcount
Number ofcurrent setlists
Number of&amp;rsquo;SYM&amp;rsquo; subcases
FlagtoturnoffTitle cardsearch
GIN_file nameoftheNewProblem Tape
GIN_file nameoftheOldProblem Tape
Dollar sign
Hollerith zerosInitiated to
ECH&lt;/em&gt;
PL_T
M_DE
PUNC
PRIN
20
4
B_TH
N@NE
PCDB
PCDB
bbbb
VECT
SYMC
=bbb
l
0
0
0
1
O
1
0
1
0
NPTP
_PTP
$bbbb
O000bb
4.3-9&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Name
ISTR
ISU3
K2PP
B2PP
M2PP
DSC_
REPC
LENCC
LINE
OM
TFL
DEFA
ELST
MAT
@FRE
IMAG
PHAS
REAL
CMET
SDAM
INER
ADIS
AVEL
AACC
N_NL
C_NF
XYPL
PLC_Length
1
1
1
1
1Mean_
Storage flagforIFPIGtitles
Subcase ormaster CASECC pointer
Keywords fordirect inputmatrix selectionInitiated to
1
1
K2PP
B2PP
M2PP
DSCO Keywordfordifferential stiffness set
selection
Keywordforrepeat subcase subcase REPC
Length ofCaseControl Record 166
KeywordforLINE/page count LINE
Wordtodistinguish between SUBC_H OMbb
SUBCASE
Key TFL
Key DEFA
Key ELST
Key MATE
Key _FRE
Key IMAG
Key PHAS
Key REAL
Key
Key
use
Key
selection
Keywordforsolution setdisplacement SDIS
selection
Keywordforsolution setvelocity selection SVEL
Keywordforsolution setacceleration SACC
selection
Keywordfornon-linear loadsetselection N_NL
Notused
KeywordforXYPL_T packet delimiter XYPL
KeywordforPiecewise Linear setselection PLC@wordfortransfer function setselection
wordfordefault specification
wordforelement stress setselection
wordforthermal material setselection
wordforoutput frequency setselection
wordforreal/imaginary printout
wordformagnitude/phase printout
wordforrealorreal/imaginary printout
wordforcomplex eigenvalue setselection CMET
wordforStructural Damping Table for SDAM
inmodalformulation
wordforInertia Relief Element set INER
4.3-10&lt;/p&gt;
&lt;p&gt;Name
AXIS
NLL_
DELE
XYCB
ONEB
HARM
SINE
COSl
FLUID
SUBS
AVEC
F_RC
RAND
XYOU
&lt;em&gt;LBA
PLTI
PLT2
XTIT
YTIT
TCUR
YTTI
YBTI
IBEN
EQUAL
PRES
TEMP
4.EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI)
ken&lt;/em&gt;
1MeaninE
Keywordforselection ofAxis
symmetric boundary condition
&lt;em&gt;ywordfornon-linear output
setselection
Keywordforelement deletion
setselection
GIN_filenameofXYcontrol datablock
BCDone
Keywordforharmonic output control
Keywordforsineboundary conditions
Keywordforcosine boundary conditions
Keywordforfluidboundary conditions
KeywordforSUBSEQ
Keywordforsolution setvector output
Notused
Keywordforrandom setselection
KeywordforXYPLOT packet delimiter
Keywordforoutput loadsetselection
GINOfilenameofBCDnlottape
GIN_filenameofbinary plottape
Keywords forXYoutput titles
Rightshifted blank&amp;rsquo;O00b&amp;rsquo;
Rightshifted equal &amp;lsquo;000=&amp;rsquo;
Alternate displacement keyword
Alternate displacement keywordInitiated to
AXIS
NLLO
DELE
XYCB
Ibbb
HARM
SINE
C_Sl
FLUI
SUBS
SVEC
RAND
XY@LI
OLOA
PLTI
PLT2
XTIT
YTIT
TCUR
YTTI
YBTI
PRES
TEMP
Interface with/SYSTEM/ (SeeSection 2.4).
IFPIcansetthefollowing cellsofSYSTEM:
a.NOG&lt;/em&gt;-(NOGOflag). Ifafatalerrorisdetected.
b.NLPP-(Number oflinesperpage). IfaLINEcardissupplied bytheuser.
c.STFTEM -(Material Temperature SetID).IfaTEMP(_TE) cardissupplied.
4.3-II (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
d.ECHB-(Echoflag). IfanECH_request ismade.
5.Interface with/_UTPUT/.
IFPIsupplies theproblem title, subtitle, andlabelaswellasthePlotID.
4.3.9 Diagnostic Messages
IFPImakeseveryattempt toprocess theentire CaseControl Decksothatthecomplete Preface
willrun.Henceallfatalmessages onlycausetheN_GOflagtoturnon.
IFPIcauses messages 601-699. Fortheexactnature ofthesemessages, refertotheDiagnostic
Message section oftheUser&amp;rsquo;s Manual.
4.3-12 (811172)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACEMODULE XSgRT (EXECUTIVEBULKDATACARDS_RT)
4.4 EXECUTIVE PREFACE ,MODULE XS_RT (EXECUTIVE BULKDATACARDS_RT)
4.4.1 Entry Point: XS_RT
4.4.2 Purpose
Thefunction ofXSBRT istoprepare afileontheNewProblem Tapecontaining thesorted
bulkdata. Theoperation ofXS_RT isinfluenced bythetypeofrun. Ifacoldstart, thebulk
data isreadfromthesystem input stream (ortheUser&amp;rsquo;s Master File), sorted andwritten onthe
NewProblem Tape. Ifanunmodified restart, thebulk dataiscopied fromtheOldProblem Tape
ontotheNewProblem Tape. Ifamodified restart, thebulkdata isreadfromtheOldProblem
Tape, andcards aredeleted and/or added inaccordance with cards inthesystem input stream.
Additionally, flags aresetwithin restart tables foreachcardtypechanged inanyway. Again,
thesorted bulkdata iswritten ontotheNewProblem Tape. Aprint oftheunsorted and/or sorted
bulkdata ismadeonrequest. XS_RT processes alldatacards between theBEGIN BULKandENDDATA
cards intheinput stream. Bothcards must bepresent toproperly bracket theNASTRAN Bulk
DataDeck.
4.4.3 Callin 9Sequence
CALLXS_RT. XS_RT, aPreface module, iscalled onlybythePreface driver, SEMINT.
4.4.4 Method
Iftheinput istobefromaUserMaster File, XS_RT begins bypositioning thefiletothe
beginning oftheproper subset ofbulkdatacards. INITC_ isthencalled toinitialize machine
dependent masks andconstants. Theopencorebelow XS_RT (/ES_RT/) isdivided into5GIN_buffers
andaworkbuffer. Thiswork buffer willcontain eachdatacardandachaining pointer to
indicate itssorted position. Thatis,thecards willbeplaced intotheworkbuffer inthe
sameorder asread, buttheir sorted order willbeshown byachaining wordwith eachcard
pointing totheposition ofthenextcardinalphanumeric sort. Ifthework buffer isunable
toholdallofthebulkdata cards, eachsubset thatfills thebuffer isunchained andwritten
insorted order ontoascratch file. Thiswriting ontoascratch filefrees theworkbuffer for
another subset ofdatacards.
4.4-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Threescratch filesmaybecome involved insorting alargenumber ofbulkdatacards.
Afterthefirsttwoscratches arefilled withsorted subsets, theyaremerged, while main-
taining thesorted order, ontoathirdscratch. Fromthispoint_ aftereachnewsubset is
written ontoascratch, itismerged withthescratch containing allprevious subsets. As
anexample, assume threescratches arenamedA,B,andC.Scratch Aiswritten withthefirst
subset ofdatafromafilled workbuffer. Scratch Biswritten withthesecond subset.
Scratch AandBarethenmerged toformscratch C.Thisfreesscratch AandB.Scratch Ais
thenwritten withthethirdsubset ofdata. AandCaremerged toformanewB.Aisthen
written withthefourth subset. AandBaremerged toformanewC.Thisprocess continues
untilallbulkdatahasbeensorted. Following thefinalmerge, oneofthescratch files
willcontain allofthesorted bulkdatacards.
Asthesortandmergeoperations arebeingperformed, anycontinuation cardsordelete
cardsencountered arewritten ontoseparate holding files. Afteralldatacardsintheinput
stream havebeenprocessed, eachoftheseholding filesisprocessed. Thedelete cardvalues
areplaced inascending orderandanyoverlaps orredundancies areremoved. Thecontinuation
cardsarechecked forduplication andanin-core dictionary oftheirconnection words isformed.
XS_RTmaynowmakeapassthrough thescratch filecontaining allofthesorted bulkdata
cardswithin theinputstream. During thispass,theUserMaster File(UMF)ortheOld
Problem Tape(_PTP) datacardsaremerged withthosefromtheinputstream. BoththeUMFand
OPTPdatacardswereproperly sorted during theirpreparation. Asthismergeprogresses, any
datacardsdesignated forremoval bydelete control cardsarediscarded. IftheNASTRAN run
forwhichXSORTisoperating isarestart, alldatacardswithin theinputstream plusany
deleted fromthe_PTPwillcausedatacardtypeflagstobesetwithin restart tables. This
entire passisnotperformed iftherundoesnotrequire either aUMForOPTP.
Nowafinalpassoftheresulting sorLed dataismadetointroduce anycontinuation cards
andwrite thecompleted BulkDataDeckontotheNewProblem Tape. Thecontinuation cardsare
connected tothesorted datacardsbymatching connection words. Continuation cardscaninno
wayaffect thesorted order. Ifaprintoftileresulting sorted deckisrequested, itis
performed during thispass.
During anysortcollation thedatacardsareordered bycomparing half-fields fromleft
toright. Eachbulkdatacardmaycontain uptoten,eightcolumn (character) fields.
4.4-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE XS_RT (EXECUTIVE BULKDATACARDSgRT)
Because ofcomputer wordsizeconstraints, eachdatacardisstored intotwenty memory words, four
characters (half acardfield) perword. Sorting proceeds bycomparing thefirst words (4charac-
ters) fromeachcard. Ifanorder cannot beestablished, i.e,, thewords areequal, thesecond
words fromeach cardarecompared, andsoon,until anorder isestablished ortotal duplication
isdetermined. Eachfield (8characters) isleft(BCD) orright (integer) justified prior
tosorting toeliminate leading ortrailing blanks. Thecharacters within thefirst field
ofeachcardareconverted toaspecial internal character setprior tocomparing toeliminate
machine dependent collation sequences which might order thesamecards differentlyondifferent
machines. This internal setforces thecollation order tobeascending fromblank through
allnumbers thenallletters. Aflowchart isgiven inFigure I.
4.4.5 Subroutines
Inthefollowing, notethatXRECPS, RPAGE, INITCg, XFADJ, XBCDBI, XPRETY, CRDFLG, EXTINT,
andINTEXT aresecondary entry points inXRECPS.
4.4.5.1 Subroutine Nane: XRECPS
I.Entry Point: XRECPS
2.Purpose: Positions thecontinuation cardfiletotheproper record (card image) as
determined from thein-core continuation carddictionary.
3.Calling Sequence: CALLXRECPS (NEW, @LD)
Where: NEW=thefileposition being requested
9LD=thefileposition lastrequested.
Both arguments areinteger record numbers.
4.4.5.2 Subroutine Name: RPAGE
I.
2.
with thesystem subroutine PAGE.
3.Calling Sequence: CALL RPAGE (NLINE)
Where: NLINE =integer number oflines being output.Entry Point: RPAGE
Purpose: Counts output print lines forXSgRT, andperforms thenecessary interface
IfNLINE _lO0apageeject is
4.4-3&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P34</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_034/</guid>
      <description>
        
        
        &lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.4.5.3
I.
2.
3.
4.4.5.4forcedandthelinecountissettoNLINE-lO0.
Subroutine Name:INITC_
EntryPoint:INITC@
Purpose:Initializes machinedependentmasksandconstantswithinXSORT.
CallingSequeL_ce: CALLINITC_
Subroutine Name:XFADJ
I.EntryPoint:XFADJ
2.Purpose:Adjustsfourcharacterfields,leftorright,twoorfourfieldsat
atime.Ifthefieldscontainonlyintegers,theshiftisright,otherwisetheshift
willbeleft.Thisroutinedetermines onlythedirectionofshiftrequired. Actual
shiftingisperformedbyXFADJI.
3.CallingSequence: CALLXFADJ(BUF,SD,K)
Where:BUF=fieldarraytobeshifted
SD=IO&amp;rsquo;shift twofields atatime
I1,shift four fields atatime
&lt;em&gt;0,returned ifright shift wasdone.K
,returned ifleftshift wasdone.
4.4.5.5 Subroutine Name: XBCDBI
I.Entry Point: XBCDBI
2.Purpose: Converts two,fourcharacter BCDinteger fields (right adjusted intheleft
mostfour characters ofthecomputer word) intoasingle binary integer (right adjusted
inthesecond ofthetwoinput words).
3.Calling Sequence: CALLXBCDBI (BUF)
Where: BUF:two&lt;/em&gt;!ord array tobeconverted.
4.4.5.6 Subroutine Name: XPRETY
I.Entry Point: XPRETY
4.4-4&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULE XSgRT (EXECUTIVE BULKDATACARDS_RT)
4.4.5.72.Purpose: &amp;ldquo;Pretties-up&amp;rdquo; printed output byleftadjusting allfields toeliminate any
leading zeros introduced wheninteger fields areright adjusted.
3.Calling Sequence: CALLXPRETY (BUF)
Where: BUF=cardimage array.
Subroutine Name: CRDFLG
I.Entry Point: CRDFLG
2.Purpose: Setsthecardtypeflags within therestart tables.
3.Calling Sequence: CALLCRDFLG (CARD)
Where: CARD =first oftwowordcardtypefield.
Subroutine Name: EXTINT
I.Entry Point: EXTINT
2.Purpose: Converts cardtypefield fromthemachine dependent character codeto
aninternal machine independent code.
3.Calling Sequence: CALLEXTINT (CTYBF)
Where: CTYBF =first oftwoword cardtypefield.
Subroutine Name: INTEXT
I.Entry Point: INTEXT
2.Purpose: Converts thecardtypefield from aninternal machine independent codeto
themachine dependentcharacter code.
3.Ca_ling Sequence: CALL INTEXT (CTYBF)
Where: CTYBF =first oftwowordcardtypefield.
Subroutine Name: XFADJI
I.Entry Point: XFADJI
2.Purpose: Adjust fourcharacter fields leftorright, twoorfourfields atatime.
This routine performs actual shifting withthedirection ofshift controlled through the4.4.5.8
4.4.5.9
4.4.5.10
4.4-5&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
callingsequence. (NoteentrypointXFADJ).
3.CallingSequence: CALLXFADJI(BUF,SHIFT,SD)
Where: BUF=FieldArraytobeshifted.
SHIFT=Function LSHIFT orRSHIFT.
SD=IO,shift twofields atatime.
b,shift fourfields atatime.
4.4.5.11 Function lqame: ISFT
I.Entry Point: ISFT
2.Purpose: Performs special shifting functions forsubroutine XFAJI.
3.Calling Sequence: CALLISFT
RESULT =ISFT(BUF,SFTCNT,J)
where: BUF=Word tobeshifted.
SFTCi_T =Bitstobeshifted.
J=Shift diFection control; 3=right, 4=left.
Design Requirements
I.Data cards operated uponbyXSORT mustconform totheNASTRAN format forbulk
datacards (ten, eight character fields percard). Seesection 2oftheUser&amp;rsquo;s Manual
fordetails.
2.Datacards must contain onlyvalid BCDkeypunch codes orblanks. Non-standard
multi-punched code (e.g., some IBMEBCDIC) will cause unpredictable results.
3.XS_RT requires sufficient opencore tocontain fiveGIN_buffers andawork buffer
foratleast tendatacards. (Each datacard requires twenty-one core locations). Sort
efficieF:cy increases inproportion tothesizeofthework buffer.
4.Thecontinuation carddictionary mustfitintothecorework buffer during thefinal
pass. Eachcontinuation cardrequires twodictionary locations.
5.XS_RT logic isbiased toward input thatisalready sorted. That is,theprogram
willoperate atamuch greater speed ifverifying asort rather thanproducing asort.4.4.6
4.4-6&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXS_RT(EXECUTIVE BULKDATACARDS_RT)
4.4.7Diagnostic Messages
XS_RT canproduce twocatagories ofdiagnostic messages. Thefirst aretermed USER
messages anddealwith bulkdatacarderrors. Thesecond aretermed SYSTEM messages which
aregenerally fatal innature andindicate serious I/_malfunctions.
XS_RT message numbers includes 201through 216. Allmessages arelisted andexplained in
section 6oftheUser&amp;rsquo;s Manual.
4.4-7&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
XS RTENTER
No
I Position UMF toproper file
-i
CallINITCB
toinitialize
constants &amp;amp;
masks
Initialize work buffer
with low&amp;amp;highlimit
Readcard Ifrominput
No
Print card
IWrite cardoncontin, file
Write cardondelete fileYesAdjust char. toleft
toeachfield
Is
card
ENDDATA
?
Is
carda
continuation
?
Is
card a
comment
?
Is
Figure l.(a) Flowchart formodule XSBRT.
4.4-8&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXSgRT(EXECUTIVEBULKDATACARDS¢RT)
Between
veto
Inextfield
Duplicate card J
I
ISorted position found -setchaining pointer
No
Unchain sorted work buffer
andwrite onascratchNo
Merge twoscratches &amp;amp;
for_, a3rdscratch
Process delete cardfile -sort
&amp;amp;eliminate redundancy re-write
ontofile
JMerge(_)Old Prob. Tape orUMFwithfinal merged scratch from
input. Remove anycards deletedSet-up next
scratch for
nextunload
Figure l.(b) Flovchart formodule XS9RT.
4.4-9&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Copysortedcardwithout
continuation ontonew
problemtapeFormcontinuation card
dictionary incore
Scansortedcardfileproduced
fromthelastmerge(_)or merge
(_ifUMForrestart
No
No
Collate cont.cardwithsorted
card. Writebothontonew
problem tapelCopysorted card
fileontonew
problem tape
No
Print card(s)
RETURN
Figure l.(c) Flowchart formodule XS_RT.
4.4-I0&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXS(aRT(EXECUTIVEBULKDATACARDSi_RT)
more
cards
insortedYes
Any
unused No
continuations
?
Message
Figure l.(d) Flowchart formodule XSgRT.
4.4-II&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR)
4.5EXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR)
4.5.1Entry Point: IFP
4.5.2 Purpose
Toprocess theBulkData Decksorted byExecutive Preface module, XSORT. Thistask is
accomplished asfollows: l)thesorted BulkDataDeckisreadfromtheNewProblem Taoe (NPTP)
card-by-card; 2)thecontents ofeachfield ofeachcardarevalidated (seesection 2.4ofthe
User&amp;rsquo;s Manual fordetailed descriptions ofeachbulkdatacard); 3)card images ormodified
card images arewritten ondatablocks ortheNPTPortheDataPoolFile (seesection 2.3.2 of
theProgrammer&amp;rsquo;s Manual fordetails ontheformats ofthese datablocks).
4.5.3 Callin 9Sequence
CALL IFP. IFP,anExecutivePreface module, iscalled onlybythePreface driver,
subroutine SEMINT.
4.5.4 In_
Theinput toIFPconsists oftheBulkDataDecksorted byExecutive Preface module XSgRT.
4.5.5
Theoutput ofIFPconsists of:I)datablocks usedinRigid Formats; 2)theAXICdata
block, which isprocessed byExecutive Preface Modules IFP3, IFP4andIFP5andispresent onlyif
theNASTRAN runisaconical shell (aunique structural elemtn) problem, ahydroelastic problem,
oranacoustic cavity problem; 3)thePVTExecutive table, which contains thenames andvalues of
allDMAPparameters input bymeans ofthePARAM bulkdatacard, andwhich iswritten ontheNew
Problem Tape tobeprocessed byExecutive Preface module XGPI; and4)DMI&amp;rsquo;s (Direct Matrix Inputs)
andDIT&amp;rsquo;s (Direct Table Inputs), eachofwhich iswritten ontheDataPoolFileasadatablock
andisindistinguishable fromanymatrix datablock ortable datablock pooled bytheExecutive
Segment FileAllocator (XSFA) module.
4.5-I (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.5.5.1 Output DataBlocks UsedinRigidFormats
GEOMI
GERM2
GERM3
GERM4
EPT
MPT
DIT
EDT
DYNAMICS
MATP_L
Note:-Gridpoint, coordinate system, andsequence data.
Element connection data.
Static loadsandtemperature data.
Displacement setdefinitions data.
Element Property Table.
Material Property Table.
Direct InputTables.
Element Deformation Table.
Collection ofbulkdatacardsforadynamics problem.
Datablockcontaining matrices inputonDMIGbulkdatacards.
Donotconfuse theDTI(Direct TableInput) bulkdatacardandtheDIT(Direct
InputTable) datablock.
4.5.6 Method
4.5.6.1 General Comments
Thebulkdatacardsprocessed byIFPareclassified intofivecategories. Listed belowis
abriefexplanation ofeachwithafewexamples.
I.Closed EndCards (Fixed Length Card)
CardssuchasCQUAD2 andPRODgothrough allthestandard bulkdatacardchecks (see4.5.6.2)
before beingprocessed bythecarddependent subroutines within IFP,(IFSiP, i=I,2,3,4,
5).Theseclosed endcardsareoutput tooneofthestandard GINBfiles.
2.OpenEndedCards (Variable Length Cards)
IncardssuchasSPClandPLFACT, sincethelength andtherefore theformats arenot
known, thebulkdatachecks usingthedatainitialized intheblockdatasubprograms
mustbemadeinthecarddependent subroutines. Also,since thelength isnotknown, a
flagisplaced attheendoftheinformation forthatcardbefore beingwritten onthe
fileinorderthatroutines reading anopenendedcardwillbesignaled astoanend-of-
cardcondition.
4.5-2 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR)
3.GRDSET andBAR_R Cards
Special cards suchasGRDSET andBAR_R arenotoutput toaGIN_datablock, butarestored
inlocal variables, andprovide default values fortheGRIDandCBARcards.
4.DMIandDTICards
DMIandDTIcards areunique inthemanner inwhich theyareusedbytheuserandorocessed
byIFP. TheDMIcardenables theusertodefine matrix datablocks directly, while the
DTIcardgives theuserthecapability toinput hisowntable datablocks directly. The
usermustwrite aDMAP sequence orusetheALTER feature -seesection 2.2oftheUser&amp;rsquo;s
Manual -intheExecutive Control Decktoalter theRigid Format chosen inorder touse
BothDMIandDTIcards
4.5.6.2theDMIorDTIfeature since heisdefining hisowndatablocks.
arewritten directly ontotheDataPoolFile.
5.PARAM Cards
PARAM bulkdatacards arestored inopencorebyIFPuntil theentire BulkData Deckhas
beenprocessed. PARAM cards arethenwritten asthePVT(Parameter Value Table) onthe
NPTPforsubsequent processing bytheExecutive Preface module XGPI.
CardProcessing
I.IFPsearches theNPTPfortheBulkDataDeckandextracts itin20word (onephysical
card) segments. Eachcardispassed tosubroutine RCARD, which takes theBCDcard images
andconverts thefields thereon tovalues, andidentifies thevalues astotype: blank
data field, integer datafield, realsingle precision datafield, BCDdatafield, real
double precision data field oradatafield which isinerror.
IFPalways hastwophysical bulkdatacards ininternal storage areas: the&amp;quot;current&amp;quot;
cardandthe&amp;quot;next&amp;quot; card. Misthelocal F_RTRAN array where thevalues ofthecurrent
bulk datacardarelocated, andMlthelocal F_RTP4_N array where thevalues ofthenext
cardarelocated. After thecurrent cardisprocessed, thedatainMlaretransferred into
M,andnewcardvalues forMlareinput fromtheNPTP. Whenthevalues fromMlaretrans-
ferred toM,thefirst twowords (thecardmnemonic) arestripped off. Ml(3) isstored in
M(1), Ml(4) isstored inM(2),and soon.
4.5-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
2./IFPXl/ isreferenced toverify theadmissibility ofthename(mnemonic) ofthe
particular cardtakenfromtheNPTP.
3.Theapproach acceptability flagischecked. Thisflagisdefined asfollows:
0 =
1=
2=OKforanyapproach;
Notusedbydisplacement approach;
lllegal fordisplacement approach.
Theapproach flag(DISPL, DMAP)isfoundin/SYSTEM/.
4.Theproper output filesareestablished. SeeTable1orTable 2fortheoutnut file
onwhich thevarious bulkdatacardswillreside.
5.Uniqueness flags, which reside inC_MM_N/IFPX5/, aredefined foreachcard
typeasfollows:
0-Nocheck ismade;
1-Acheckismade;
2-Aspecial check ismade.
Forexample, onthebulkdatacardC_NR_D, field2istheEID,anditmustbeunique with
respect toallother C_NR_D EID&amp;rsquo;s.
6.Thenextphysical cardisreadfromtheNPTP. Thiswillbethenextcardtobeprocessed.
7.Acheck fortoomanycontinuation cardsismade. Thischeck ismadeonfixedlength
cardsonly.
8.Acheck ismadefortheminimum andmaximum number ofwords foralogical bulkdatacard.
9.Acheckfortheproper typesofvalues forthefields onacardismadebyreferencing
/IFPXT/, whichcontains format codesforeachcardtypeasfollows:
0:Blank
1:Integer
2:Real
3=BCD
4=Double Precision
5=Anything.
4.5-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR)
When RCARD passes format values toIFP,aformat codeof0willoverride thischeck. Inthe
carddependent codecheck (step lO),thevalue will belooked attoseeifitisinerror.
lO.Anauxiliary subroutine IFSiP, i=l,2,3,4,5,iscalled toexecute carddependent code.
If.Iftheinput cardpasses thetests inthecarddependentcode, thedata arewritten on
theappropriate GIN9output file.
4.5.6.3 Module Conclusion
Whenthesorted BulkDataDeckhasbeenexhausted, thefollowing steps arecarried out.
I.Theappropriate trailer codes arewritten foreachdatablock. Forlistings of
trailer information reference section 2.3.2.
2.ThePVTiswritten onthe_PTP.
3.Restart flags aresetin/IFPXO/.
4.5.7 Subroutines
IFPusestheutility routine RCARD describedinsection 3.4.20.
4.5.7.1 Block DataSubprogram: IFXIBD
Purpose: Toinitialize /IFPXI/,which isusedbyIFPtovalidate card names. Allbulk
data card names must appear inthistable.
4.5.7.2 Block DataSubprogram: IFX2BD
Purpose: Toinitialize /IFPX2/.This table contains twowords perentry (twowords per
card type): thefirst gives theGIN9output filenun_)er, andthesecond gives theapproach
acceptability flag.
4.5.7.3 Block DataSubprogram: IFX3BD
Purpose: Toinitialize /IFPX3/.Thistable contains twowords perentry (twowords per
cardtype): thefirst word isusedastheConical Shell Problem flag, andthesecond word is
used internally tostore thenu_er ofwords tobeoutput totheGIN9output file.
4.5-5(RII172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.5.7.4 BlockDataSubprogram: IFX4BD
Purpose: Toinitialize /IFPX4/. Thistablecontains twowords perentry(twowords per
cardtype): thefirstistheminimum number ofwordsallowable, thesecond isthemaximum
number ofwordsallowable. Thefirstwordofanentrybeingnegative implies thecardisopen
ended.
4.5.7.5 BlockDataSubprogram: IFX5BD
Purpose: Toinitialize /IFPX5/. Thistablecontains twowords perentry (twowords per
cardtype): thefirstisapointer into/IFPX7/, thesecond isthefield2uniqueness checkflag.
4,5.7.6 BlockDataSubprogram: IFX6BD
Purpose: Toinitialize /IFPX6/. Thistablecontains twowords perentry (twowords per
cardtype): thefirstisheader word1(cardtype), thesecond isheader word2(trailer bit
position) ofthethreewordheader information ofeachlogical record, whichcorresponds toall
thedataofparticular bulkdatacardtype. Seesection 2.3.2fordetails.
4.5.7.7 BlockDataSubprogram: IFX7BD
Purpose: Toinitialize /IFPX7/. Eachentrycontains theadmissible sequence offormat
codesforthatcardtype(seestep9insection 4.5.6.2 above).
4.5.7.8 Subroutine Name: IFSiP, i=I,2,3,4,5
I.EntryPoint: IFSiP, i=I,2,3,4,5
2.Purpose: Thesearethefoursubroutines thatthemodule driver IFPcallstoexecute
carddependent code.
3.Calling Sequence: CALLIFSiP($nl,$n2,$n3)
nIFORTRAN statement number defining thereturn taken intheeventofaformat
n2
n3ordataerror.
FORTRAN statement number defining thereturn takenwhenlocalvariables are
settoprovide default values forappropriate cards.
FORTRAN statement number defining thereturn takenintheeventofadataerror.
4.5-6 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR)
4.5.7.9 Subroutine Name: IFPDC_
I.Entry Point: IFPDC_
2.Purpose: L_GICAL FUNCTION IFPDC_ decodes packed component codeandreturns .FALSE. if
noerrors aredetected and.TRUE. ifanyerrors aredetected. Thedecoded results arestored
inlabeled common block /IFPDTA/.Thissubroutine isalsousedbythePreface Module IFP3.
4.5.8 Design Requirements
Open coreisdefined in/IFPXX/.Opencoreisusedtostore allPARAM cards until theBulk
DataDeckhasbeenexhausted, atwhich timethePARAM cards arewritten ontheNPTPasthePVT
Executive table.
IFPhasacompilation-dependent overlay structure asshown inthesketch below.
IFSIP
IFS2PIFP
RCARD
Block Data
Routines
IFS3Pi
IFS4P
IFS5P
/IFPXX/OpenCore
Theopencore (common block /IFPXX/mustbelocated below thelongest oftheIFSiP segments.
This isautomatically doneontheUnivac ll08butmustbedonebytheprogrammer ontheother
machines.
4.5.9 Diagnostic Messages
Ifafatal error isdetected during anyphase oftheprocessing ofmodule IFP,theN_G_flag
will beset,andtheerror message willbeprinted out. IFPwillcontinue processing data cards
until allareprocessed.
4.5-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Tablel(a).BulkDataCardsProcessedbyIFPSortedbyInternalCardNumber.
Thefollowinglistgivesanexplanation ofthecolumnheadingsonthefollowingpagesof
TableI.
A=InternalIFPBulkDataCardNumber
B=BulkDataCardName (anasterisk following anameimplies thecardisnotavailable)
C=Internal IFPGIN_Output FileNun_er
D=DataBlock Name
E=Approach Acceptance Indicator
-2=Illegal fortheForce Approach
-l=NotUsedbytheForce Approach
0=OKforanyApproach
l=NotUsedbytheDisplacement Approach
2=Illegal fortheDisplacement Approach
F=Minimum Number ofWords Allowed PerLogical Card (Fnegative implies anopenended card)
G=Maximum Number ofWords Allowed PerLogical Card
H=Format Check Pointer IntoIFX7BD
I=Field 2Uniqueness Check Flag
0=NoCheck isMade
l=Check isMade
2=Special
J=Subroutine L_CATE CodeforCard onOutput DataBlock
K=Trailer BitPosition
L=Pointer toSecondary (Card Dependent) Code
Sl=Subroutine IFSIP
$2=Subroutine IFS2P
$3=Subroutine IFS3P
$4=Subroutine IFS4P
$5=Subroutine IFS5P
M=FBRTRAN Statement Number intheCardDependent Subroutines
N=Conical Shell Problem Flag
-l=Illegal forShell Mode
4.5-8 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR)
Tablel(b). BulkDataCards ProcessedbyIFPSorted byInternal CardNumber.
0=OKforShell Mode
l=PutsCard IntoDifferent DataBlock
0=Users MapforDataBlocks IFX2BD,&amp;hellip;,IFX6BD
Values forI=1,2or3
J=1,2or3
H=A,B,C,D orE
K=1,2,3,4,5 or6
I=IsDataStatement intheBlock DataProgram
J=TheGroup ofAThrough EContinuation CardBlocks Within theIthDataStatement
H=Alphabetic Character inCol6(Continuation Column) intheJthGroup
K=ThePairNumber onLineHWhere theActual Data islocated.
4.5-9 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
1
2
3
4
5
6
7
8
9
I0
II
12
13
14
15
16
17
18
19
2O
21
22
23
24
25
26
27
28
29
3O
31
32
33
34
35
36
37
38
39
4O
41
42
43
44
45
46
47
48
49
5O
51
52
53
54
55
56
57
58Tablel(c). BulkDataCardsProcessed byIFPSorted
CD EFGHIJ
GRID 1GEOMI 0412 114501
GRDSET 1GEOMI 0412132 0
ADUMI 1GERM1 0885370 0
SEQGP 1GERM1 -I483705301
CORDIR 1GEOMI 0483701801
CORDIC 1GEOMI 0483701701
CORDIS 1GEBMI 0483701901
C_RD2R 1GEOMI 012164512101
CORD2C 1GERM1 012164512001
CORD2S lGERM1 012164512201
PL_TEL 8GE@M2 04850505201
SPCI I0GE@M4 -2-49-I05481
SPCADD I0GERM4 -248-I15491
SUPORT I0GEOM4 -2483705601
OMIT I0GEOM4 -2483705001
SPC I0GERM4 -248I0105501
MPC I0GEOM4 -248-I04901
FORCE 9GERM3 081210904201
M_MENT 9GERM3 081210904801
FORCE1 9GERM3 081212104001
MOMENT1 9GERM3 081212104601
F_RCE2 9GE@M3 081213304101
M_MENT2 9GERM3 081213304701
PLOAD 9GERM3 081214505101
SLOAD 9GEOM3 -24815705401
GRAV 9GE@M3 081216514401
TEMP 9GEOM3 04815705701
GENEL 8GEOM2 -2-49-I14301
PROD 2EPT 04121651902
PTUBE 2EPT 041217711602
PVISC 2EPT -24818901802
ADUM2 1GEOMI 0885370 I0
PTRIAI 2EPT 041622111202
PTRIA2 2EPT 04823701302
PTRBSC 2EPT 041225711102
PTRPLT 2EPT 041225711502
PTRMEM 2EPT 04823701402
PQUADI 2EPT 04162211702
PQUAD2 2EPT 0482370802
PQDPLT 2EPT 04122570602
PQDMEM 2EPT 0482370502
PSHEAR 2EPT 04823701002
PTWIST 2EPT 04823701702
PMASS 2EPT -2482690402
PDAMP 2EPT -2482690402
PELAS 2EPT -2484970302
C_NROD 8GEOM2 081227711601
CR_D 8GEOM2 0483703001
CTUBE 8GEOM2 0483703701
CVISC 8GEOM2 -2483703901
ADUM3 1GEOMI 0885370 I0
CTRIAI 8GEOM2 081231313301
CTRIA2 8GEOM2 081231313401
CTRBSC 8GEOM2 081231313201
CTRPLT 8GEOM2 081231313601
CTRMEM 8GERM2 081231313501
CQUADI 8GEOM2 081232512801
CQUAD2 8GERM2 081232512901byInternal CardNumber.
KL MN
45$3I00-I
0$3200-I
0S5I00 0
53S1 40-I
18S1500-I
17S1600-I
19S1700-I
21S1800-I
20S1900-I
22S1I000 -I
52S1IIII -I
58$33980 -I
59$34020 1
56S11400 -I
50S11400 -I
55Sl1600 -I
49$31700 -I
42S11800 1
48S11800 1
40S12000 -I
46S12000 -I
41S12200 -I
47S12200 -I
51S12400 -I
54S12500 -I
44Sl2600 1
57S12500 -I
43$32800 -I
9S12900 -I
16S12920 -I
18S1310-I
0$5200 0
12S12980 -I
13S13000 -I
IIS13020 -I
15S13020 -I
14S13000 -I
7S12980 -I
8S13000 -I
6S13020 -I
5S13000 -I
I0S13000 -I
17S13000 -I
4Sl3200 -I
2S13200 -I
3S13240 -I
16S13260 -I
30S13281 -I
37S13282 -I
39S13283 -I
0$5300 0
33S13360 -I
34S13360 -I
32S13360 -I
36S13360 -I
35S13360 -I
28Sl3460 -I
29S13460 -IIJHK
IIAI
IIA2
IIA3
IIA4
IIA5
IIA6
lIB1
lIB2
lIB3
lIB4
lIB5
lIB6
IICI
IIC2
IIC3
IIC4
IIC5
IIC6
lID1
lID2
lID3
lID4
lID5
lID6
lIE1
lIE2
lIE3
lIE4
lIE5
lIE6
12AI
12A2
12A3
12A4
12A5
12A6
12BI
12B2
12B3
12B4
12B5
12B6
12CI
12C2
12C3
12C4
12C5
12C6
12DI
12D2
12D3
12D4
12D5
12D6
12El
12E2
12E3
12E4
4.5-10 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULEIFP(INPUTFILEPROCESSOR)
Tablel(d)
AB C
59
60
61
62
63
64
65
66
67
68
69
7O
71
72
73
74
75
76
77
78
79
8O
81
82
83
84
85
86
87
88
89
9O
91
92
93
94
95
96
97
98
99
I00
I01
102
103
I04
I05
106
107
I08
109
II0
III
112
113
114
115
116CQDPLT 8
CQDMEM 8
CSHEAR 8
CTWIST 8
CONMI 8
C_NM2 8
CMASSI 8
CMASS2 8
CMASS3 8
CMASS4 8
CDAMPI 8
CDAMP2 8
CDAMP3 8
CDAMP4 8
CELASI 8
CELAS2 8
CELAS3 8
CELAS4 8
MATI 3
MAT2 3
CTRIARG 8
CTRAPRG 8
DEFBRM 4
PARAM 6
MPCADD lO
LOAD 9
EIGR 7
EIGB 7
EIGC 7
ADUM4 1
1
3
3
I0
5
5
5
5
5
9
1
1
1
3
1
8
8
1
8
8
8
8
8
8
8
8
8
2MATS1
MATT1
BMITI
TABLEMI
TABLEM2
TABLEM3
TABLEM4
TABLESI
TEMPD
ADUM5
ADUM6
ADUM7
MATT2
ADUM8
CTORDRG
SP_INT
ADUM9
CDUMI
CDUM2
CDUM3
CDUM4
CDUM5
CDUM6
CDUM7
CDUM8
CDUM9
PDUMI•BulkDataCardsProcessed byIFP
D EFGHISorted byInternal CodeNumber.
J KL M N
GEOM2 081232512701 27S13460 -I
GERM2 08123251260126Sl3460 -I
GERM2 08123371310131S13540-I
GEOM2 081233713801 38S13540-I
GERM2 082834911401 14S13580-I
GERM2 082037711501 15S13600-I
GEOM2 -24123371I001 I0S13620-I
GERM2 -24123971II01 IISl3623-I
GERM2 -248370120112S13674-I
GERM2 -24840901301 13S13697-I
GERM2 -241233712012S13620 -I
GERM2 -24123971301 3S13623 -I
GERM2 -2483704014S13675 -I
GEOM2 -24840905015S13698 -I
GERM2 -24123371601 6S13620 -I
GERM2 -24124171701 7S13800 -I
GERM2 -2483708018S13676-I
GERM2 -24840909019S13699-I
MPT 042042911031S13860 0
MPT 082044912032S13880 0
GEOM2 -281273811708 17$4790-I
GERM2 -281273711808 18$4800-I
EDT -2481570104 1Sl2500 -I
PVT 0-516-I200S33960 0
GERM4 -248-I14891 60$34020 1
GERM3 048-I14551 61S34060 1
DYNAMICS -214184691307 3$28500
DYNAMICS -214184691I071$28500
DYNAMICS -2-4I0-I12072$28700
GEOMI 0885370 00$54000
GEOMI 088-I2 00$28900
MPT -241654515035$4900-I
MPT 041654517037$4900 0
GEOM4 -2-49-I0495163$33981-I
DIT 0-416-I1105 1$2930 0
DIT 0-416-I1205 2S2930 0
DIT 0-416-I1305 3$2930 0
DIT 0-416-I1405 4S2960 0
DIT -2-416-I1310531$2930-I
GEBM3 04122690564165$4980 1
GERM1 08853703200S55000
GEOMI 0885370 00$5600 0
GERM1 0885370 00S5700 0
MPT 041652518038S41020-I
GEOMI 0885370 00S5800 0
GERM2 -241275011908 19$41040 -I
GEBM2 -2-4979405551 49S41050 -I
GEOMI 088537000$5900 0
GERM2 082492516108 61$5I000 0
GEOM2 082492516208 62$5II00 0
GEOM2 082492516308 63$51200 0
GERM2 08249251640864$51300 0
GEBM2 08249251650865$51400 0
GEOM2 08249251660866$51500 0
GEOM2 08249251670867$51600 0
GEOM2 08249251680868$51700 0
GERM2 08249251690869$51800 0
EPT 04249251610261$51900 0IJHK
12E5
12E6
13AI
13A2
13A3
13A4
13A5
13A6
13BI
13B2
13B3
13B4
13B5
13B6
13CI
13C2
13C3
13C4
13C5
13C6
13DI
13D2
13D3
13D4
13D5
13D6
13El
i3E2
13E3
13E4
13E5
13E6
21AI
21A2
21A3
21A4
21A5
21A6
21BI
21B2
21B3
21B4
21B5
21B6
21CI
21C2
21C3
21C4
21C5
21C6
21DI
21D2
21D3
21D4
21D5
21D6
21El
21E2
4.5-11(8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174Table1(e).BulkDataCardsProcessed byIFPSorted byInternal CardNumber.
D EFGHIJKLM N
PDUM2 2EPT 0424925 16202 62$52000 0
PDUM3 2EPT 0424925 16302 63$52100 0
DMI 12P_OL 0-416-I0 00$21190 0
DMIG 14MATP_BL -2-412-I0114 1$21200 0
PTORDRG 2EPT -24823702102 21S13000 -I
MAT3 3MPT -2420449 11403 14,$41220 -I
DLOAD 7DYNAMICS -248-I1575$34060 0
EP_INT 7DYNAMICS -2-497940707 7$41050 0
FREQI 7DYNAMICS -24870501007 I0S11250 0
FREQ 7DYNAMICS -248-I11307 13$31260 0
NOLINI 7DYNAMICS -281272503107 31S11270 0
N@LIN2 7DYNAMICS -281272503207 32S11280 0
NOLle3 7DYNAMICS -281272503307 33S11290 0
N@LIN4 7DYNAMICS -281272503407 34S11290 0
RLOADI 7DYNAMICS -28833715107 51$31310 0
RLOAD2 7DYNAMICS -28833715207 52$31310 0
TABLED1 5DIT -2-416-I11105 II$2930 0
TABLED2 5DIT -2-416-I11205 12$2930 0
SEQEP 7DYNAMICS -I483705707 57S1 40-I
TF 7DYNAMICS -2812-I06207 62S11360 0
TIC 7DYNAMICS -241271306607 66S11370 0
TL_ADI 7DYNAMICS -28868117107 71$31380 0
TL_AD2 7DYNAMICS 081668917207 72$31390 0
TABLED3 5DIT 0-416-I11305 13$2930 0
TABLED4 5DIT 0-416-I11405 14$2960 0
TSTEP 7DYNAMICS 048-I18307 83S11420 0
DSFACT 3MPT 048-I153I0$31430 0
AXlC 15AXIC -248930515 5$31440 0
RINGAX 15AXIC -241224515615 56$31450 0
CC@NEAX 15AXIC -24864512315 23$31460 0
PC@NEAX 2EPT -2428653115219$31470 0
SPCAX 15AXlC -241248506215 62$31480 0
MPCAX 15AXIC -248-I04015 40$31490 0
OMITAX 15AXIC -24833704315 43$31500 0
SUPAX 15AXlC -24833706415 64$31500 0
POINTAX 15AXIC -24851714915 49$31520 0
SECTAX 15AXIC -241217716015 60$31530 0
PRESAX 15AXlC -24126105215 52$31540 0
TEMPAX 15AXIC -24823706815 68$31550 0
FBRCEAX 15AXlC -2-41310902115 21$31560 0
M_MAX 15AXIC -2-41310903815 38$31560 0
EIGP 7DYNAMICS -2485610257 4S11580 0
PDUM4 2EPT 0424925 16402 64$52200 0
PDUM5 2EPT 0424925 16502 65$52300 0
PDUM6 2EPT 0424925 16602 66$52400 0
TABDMPI 5DIT -2-416-I11521$2930 0
PDUM7 2EPT 0424925 16702 67$52500 0
PDUM8 2EPT 0424925 16802 68$52600 0
PDUM9 2EPT 0424925 16902 69$52700 0
FREQ2 7DYNAMICS -24870501107 IIS11660 0
UISET I0GEOM4 088370II041$52800 0
U2SET I0GEOM4 088370210 2$52900 0
U3SET I0GEOM4 088370310 3S53000 0
U4SET I0GEOM4 088370410 4$53100 0
U5SET I0GEOM4 088370500 5$53200 0
U6SET I0GE@M4 088370610 6$53300 0
U7SET I0GERM4 088370710 7$53400 0
U8SET I0GEBM4 088370810 8$53500 0IJHK
21E3
21E4
21E5
21E6
22AI
22A2
22A3
22A4
22A5
22A6
22BI
22B2
22B3
22B4
22B5
22B6
22CI
22C2
22C3
22C4
22C5
22C6
22DI
22D2
22D3
22D4
22D5
22D6
22EI
22E2
22E3
22E4
22E5
22E6
23AI
23A2
23A3
23A4
23A5
23A6
23BI
23B2
23B3
23B4
23B5
23B6
23CI
23C2
23C3
23C4
23C5
23C6
23DI
23D2
23D3
23D4
23D5
23D6
4.5-12 (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P35</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_035/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR)
Table l(f). BulkDataCards Processed byIFPSorted byInternal CardNumber.
A B C D EF GH IJ KL M N
175U9SET lOGERM4 0 88370910 9$53600 0
176UISETI lOGERM4 0-4 9-l0lifO II$53700 0
177U2SETI lOGERM4 0-4 9-I01210 12$53800 0
178U3SETI lOGERM4 0-4 9-l01310 13$5 3900 0
179BAR_R 8GERM2 0412 252 00Sl lO0 -l
180CBAR 8GERM2 0820 73l2408 24Sl 200 -l
181PBAR 2EPT 0424621 l 5220Sl 300 -l
182DAREA 7DYNAMICS -2 48lOl 0 27 17$3 1820 0
183DELAY 7DYNAMICS -2 48lOl 0 3718$3 1820 0
184DPHASE 7DYNAMICS -2 48lOl 0 7719$3 1820 0
185PLFACT 3MPT -2 48-llll03 II$3 1420 -l
186U4SETI lOGERM4 0-4 9-l01410 14$5 4000 0
187U5SETI lOGERM4 0-4 9-l01510 15$54100 0
188U6SETI lOGERM4 0-4 9-l01610 lO$54200 0
189MATT3 3MPT -2 416525 l1503 15$41020 -l
190RF_RCE 9GERM3 -2 812I09 05509 55Sl1900 l
191TABRNDI 5DIT -2-4 16 -l l 5525$2 930 0
192U7SETI lOGERM4 0-4 9 -l01710 17$54300 0
193U8SETI lOGERM4 0-4 9 -l01810 18$54400 0
194U9SETI lOGERM4 -0-4 9-I01910 19$54500 0
195RANDPS 7DYNAMICS -2 412782 02107 21$4 1950 -l
196RANDTI 7DYNAMICS -2 48752 02207 22$4 1960 -l
197I_ANDT2* 7DYNAMICS -2-4 8-ll2307 23$9 -l
198PL_ADI* 9GERM3 -2 00 006909 69 $9 -l
199PLEAD2 9GERM3 -2-4 9774 06802 68 $41990 -l
200DTI 12PB_L 0-4 16 -l0 O0$22000 0
201TEMPPI 9GERM3 -2-4!0 -l08109 81$42100 -l
202TEMPP2 9GEBM3 -2-4lO -I08209 82$42200 -l
203TEMPP3 9GERM3 -2°4lO -l08309 83$4 2300 -l
204TEMPRB 9GEBM3 -2-4lO -l08409 84$4 2400 -l
205GRIDB 15AXIC -2 812 ll8115 61$4 3100 -l
206 FSLIST 15AXIC -2-4lO -l08215 82$4 3200 -l
207 RINGFL 15AXIC -2 48497 l8315 83$4 3300 -l
208 PRESPT 15AXIC -2 48834 08415 84$4 3400 -l
209 CFLUID2 15AXIC -2 88845 l8515 85 $43500 -l
210CFLUID3 15AXIC -2 88853 l8615 86$4 3600 -l
211 CFLUID4 15AXIC -2 88861 l8715 87 $43700 -l
212 AXIF 15AXIC -2-8lO -I08815 88$43800 -l
213 BDYLIST 15AXIC -2-4lO -l08915 89$43900 -l
214 FREEPT 15AXIC -2 48834 09015 90$44000 -l
215ASET lOGERM4 -2 48 3705561 76Sl 1400 -l
216ASETI lOGERM4 -2-4 9 -l05571 77$33981 -l
217CTETRA 8GERM2 -2 88337 l5508 55$44100 -l
218 CWEDGE 8GERM2 -2 88525 l5608 56$44200 -l
219CHEXAI 8GERM2 -21616531 l5708 57$44300 -l
220 CHEXA2 8GERM2 -21616531 l5808 58$4 4400 -l
221 DMIAX 14MATP_L -2-4 9-l0 214 2$44500 -l
222 FLSYM 15AXIC -2 4lO826 09115 91 $44600 -l
223 AXSLBT 15AXIC -2 88869 lIll5 IISl4100 0
224 CAXIF2 8GERM2 -2 88877 l2108 21Sl4200 0
225 CAXIF3 8GERM2 -2 88877 l2208 22Sl4300 O
226 CAXIF4 8GERM2 -2 88877 l2308 23Sl4400 0
227 CSL_T3 8GERM2 -2 88877 l4408 44Sl 4500 0
228 CSL_T4 8GERM2 -2 816877 l4508 45Sl 4600 0
229 GRIDF 15AXIC -2 48885 l1215 12Sl 4700 0
230 GRIDS 15AXIC -2 48893 l1315 13Sl 4800 0
231 SLBDY 15AXIC -2-4 8 -l01415 14Sl4900 0
232 CHBDY 8GERM2 099901 l4208 42 Sl5000 -lIJHK
23EI
23E2
23E3
23E4
23E5
23E6
31Al
31A2
31A3
31A4
31A5
31A6
31Bl
31B2
31B3
31B4
31B5
31B6
31Cl
31C2
31C3
31C4
31C5
31C6
31Dl
31D2
31D3
31D4
31D5
31D6
31El
31E2
31E3
31E4
31E5
31E6
32AI
32A2
32A3
32A4
32A5
32A6
32BI
32B2
32B3
32B4
32B5
32B6
32CI
32C2
32C3
32C4
32C5
32C6
32DI
32D2
32D3
32D4
4.5-13 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Tablel(g).BulkDataCardsProcessed byIFPSortedbyInternal CardNumber.
AB CD EFGHIJKLMN
233QHBDY
234MAT4
235MAT5
236SAME
237SAME1
238INPUT
239BUTPUT9GERM3 0999010430943S15100 -I
3MPT 04831712103 21S13900 -I
3MPT 0888212203 22Sl4000 -I
IIGERM5 -2-49-I0III0 II$5 5-I
IIGERM5 -2-89-I01210 12$5 5-I
IIGERM5 01717909 01310 13$5 5-I
IIGERM5 01717909 01410 14$5 5-lIJHK
32D5
32D6
32EI
32E2
32E3
32E4
32E5
4.5-13a (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Table2(a). BulkDataCardsProcessed byIFPSorted Alphabetically byCardName.
Thefollowing listgivesanexplanation ofthecolumn headings onthefollowing pagesof
Table 2.
A=Internal IFPBulkDataCardNumber
B=BulkDataCardName(anasterisk following anameimplies thecardisnotavailable)
C:Internal IFPGIN_Output FileNumber
D=DataBlockName
E:Approach Acceptance Indicator
-2:lllegal fortheForceApproach
-I=NotUsedbytheForceApproach
0=OKforanyApproach
1=NotUsedbytheDisplacement Approach
2=lllegal fortheDisplacement Approach
F=Minimum Number ofWordsAllowed PerLogical Card(Fnegative implies anopenended card)
G=Maximum Number ofWordsAllowed PerLogical Card
H=Format CheckPointer IntoIFX7BD
I:Field2Uniqueness Check Flag
0=NoCheckisMade
1=CheckisMade
2=Special
J=Subroutine L_CATE CodeforCardonOutput DataBlock
K=Trailer BitPosition
L=Pointer toSecondary (CardDependent) Code
S1=Subroutine IFSIP
$2:Subroutine IFS2P
$3=Subroutine IFS3P
S4=Subroutine IFS4P
$5=Subroutine IFS5P
M:F_RTRAN Statement Number intheCardDependent Subroutines
N=Conical ShellProblem Flag
-I=lllegal forShellMode
4.5-14 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACEMODULE IFP(INPUT FILEPROCESSOR)
Table 2(b). BulkDataCards Processed byIFPSorted Alphabetically byCardName.
0=OKforShell Mode
l=PutsCard IntoDifferent DataBlock
0=Users MapforDataBlocks IFX2BD &amp;hellip;..IFX6BD
Values forI=1,2or3
J=1,2or3
H=A,B,C,D orE
K=1,2,3,4,5 or6
I=IsDataStatement intheBlock DataProgram
J=TheGroup ofAThrough EContinuation CardBlocks Within theIthDataStatement
H=Alphabetic Character inCol6(Continuation Column) intheJthGroup
K=ThePairNu_er onLineHWhere theActual Data islocated.
4.5-15 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Table 2(c). BulkDataCardsProcessed byIFPSorted Alphabetically byCard
AB CD
89 1GERM1
3ADUMI 1GERM1
32ADUM2 1GERM1
51ADUM3 1GERM1
88ADUM4 1GEBMI
99ADUM5 1GEBMI
I00ADUM6 1GEBMI
I01ADUM7 1GERM1
103ADUM8 1GERM1
106ADUM9 1GERM1
215ASET I0GERM4
216ASETI I0GERM4
144AXIC 15AXIC
212AXlF 15AXIC
223AXSL_T 15AXIC
179BAR_R 8GERM2
213BDYLIST 15AXlC
224CAXlF2 8GERM2
225CAXIF3 8GERM2
226CAXlF4 8GEBM2
180CBAR 8GEBM2
146CC_NEAX 15AXIC
69CDAMPI 8GEBM2
70CDAMP2 8GEBM2
71CDAMP3 8GERM2
72CDAMP4 8GEBM2
107CDUMI 8GERM2
108CDUM2 8GEBM2
109CDUM3 8GERM2
II0CDUM4 8GERM2
IIICDUM5 8GERM2
112CDUM6 8GERM2
113CDUM7 8GERM2
114CDUM8 8GERM2
115CDUM9 8GERM2
73CELASI 8GERM2
74CELAS2 8GEBM2
75CELAS3 8GERM2
76CELAS4 8GERM2
209CFLUID2 15AXlC
210CFLUID3 15AXIC
211CFLUID4 15AXlC
232CHBDY 8GEBM2
219CHEXAI 8GERM2
220CHEXA2 8GERM2
65CMASSI 8GEBM2
66CMASS2 8GERM2
67CMASS3 8GERM2
68CMASS4 8GERM2
63C_NMI 8GEBM2
64CBNM2 8GERM2
47C_NR_D 8GERM2
6CBRDIC 1GERM1
5C_RDIR 1GERM1
7CBRDIS 1GERM1
9C_RD2C 1GERM1
8CBRD2R 1GERM1
I0C_RD2S 1GERM1EFGHIJKL MN
088-I2 00$2890
0885370 00$5I00
0885370I00$5200
0885370I00$5300
0885370 00$5400
0885370320 0$5500
0885370 00$5600
0885370 00$5700
0885370 00$5800
0885370 00$5900
-2483705561 76S11400
-2-49-I05571 77$33981
-248930515 5$31440
-2-8I0-I08815 88$43800
-288869 11115 IIS14100
0412252 00S1 I00
-2-4I0-I08915 89$43900
-288877 12108 21Sl4200
-288877 12208 22S14300
-288877 12308 23S14400
08207312408 24S1200
-248645 12315 23$31460
-24123371201 2S13620
-24123971301 3S13623
-248370401 4S13675
-2484090501 5S13698
082492516108 61$5I000
082492516208 62$5II00
082492516308 63S51200
082492516408 64$51300
082492516508 65$51400
082492516608 66$51500
082492516708 67$51600
082492516808 68$51700
082492516908 69$51800
-24123371601 6S13620
-2412417 1701 7S13800
-248370801 8S13676
-2484090901 9S13699
-288845 18515 85$43500
-288853 18615 86$43600
-288861 18715 87$43700
099901 14208 42Sl5000
-2161653115708 57$44300
-2161653115808 58$44400
-24123371I001 I0S13620
-24123971II01 IIS13623
-2483701201 12S13674
-24840901301 13S13697
082834911401 14S13580
082037711501 15S13600
081227711601 16S13260
048370i701 17S1600
0483701801 18S1500
0483701901 19S1700
012164512001 20S1900
012164512101 21S1800
012164512201 22S1I000Name.
IJHK
0 13E5
0 IIA3
0 12A2
0 12D3
0 13E4
0 21B3
0 21B4
0 21B5
0 21CI
0 21C4
-I 32A5
-I 32A6
022D6
-I 32A2
032CI
-I 23E5
-I 32A3
032C2
032C3
032C4
-I 23E6
022E2
-I 13B3
-I 13B4
-I 13B5
-I 13B6
0 21C5
0 21C6
021DI
021D2
021D3
021D4
021D5
0 21D6
0 21El
-I 13CI
-I 13C2
-I 13C3
-I 13C4
-I 31E5
-I 31E6
-I 32AI
-I 32D4
-I 32B3
-I 32B4
-I 13A5
-I 13A6
-I 13BI
-I 13B2
-I 13A3
-113A4
-I 12C5
-I IIA6
-I IIA5
-I lIB1
-I lIB3
-I lIB2
-I lIB4
4.5-16 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULEIFP(INPUTFILEPROCESSOR)
Table2(d). BulkDataCardsProcessed byIFPSortedAlphabetically byCardName.
AB CD EFGHIJKLMN
60CQDMEM 8GEOM2 08123251260126S13460-I
59CQDPLT 8GEOM2 08123251270127Sl3460-I
57CQUADI 8GEOM2 08123251280128S13460 -I
58CQUAD2 8GEOM2 081232512901 29S13460-I
48CROD 8GEOM2 0483703001 30S13281-I
61CSHEAR 8GEOM2 081233713101 31S13540-I
227CSL_T3 8GEOM2 -2888771440844S14500 0
228CSLOT4 8GEOM2 -28168771450845S14600 0
217CTETRA 8GEOM2 -2883371550855$44100 -I
104CTORDRG 8GEOM2 -24127501190819$41040 -I
80CTRAPRG 8GEOM2 -28127371180818S4800-I
54CTRBSC 8GEOM2 08123131320132S13360 -I
52CTRIAI 8GEOM2 08123131330133S13360 -I
53CTRIA2 8GEOM2 08123131340134Sl3360 -I
79CTRIARG 8GEOM2 -28127381170817$4790-I
56CTRMEM 8GEOM2 08123131350135S13360 -I
55CTRPLT 8GEOM2 08123131360136Sl3360 -I
49CTUBE 8GEOM2 0483703701 37S13282 -I
62CTWIST 8GEOM2 08123371380138S13540 -I
50CVlSC 8GEOM2 -2483703901 39Sl3283-I
218CWEDGE 8GEOM2 -2885251560856$44200 -I
182DAREA 7DYNAMICS -248I0102717$31820 0
81DEFORM 4EDT -24815701041S12500 -I
183DELAY 7DYNAMICS -248I0103718S31820 0
123DLOAD 7DYNAMICS -248-I1575$34060 0
I19DMI 12POOL 0-416-I000$21190 0
221DMIAX 14MATPOOL -2-49-I02142$44500 -i
120DMIG 14MATPOOL -2-412-I0114 1$21200 0
184DPHASE 7DYNAMICS -248I0107719$31820 0
143DSFACT 3MPT 048-I153I0S31430 0
200DTI 12POOL 0-416-I000$22000 0
86EIGB 7DYNAMICS -2141846911071$28500
87EIGC 7DYNAMICS -2-4I0-I12072$28700
158EIGP 7DYNAMICS -24856102574S11580 0
85EIGR 7DYNAMICS -2141846913073$2850 0
124EP_INT 7DYNAMICS -2-4979407077$41050 0
222FLSYM 15AXlC -24I08260911591$44600 -I
18F_RCE 9GEOM3 08121090420142S11800 1
20F_RCEI 9GERM3 08121210400140Sl2000 -I
22F_RCE2 9GEOM3 08121330410141S12200-I
156FORCEAX 15AXIC -2-41310902115 21$31560 0
214FREEPT 15AXlC -2488340901590$44000 -I
126FREQ 7DYNAMICS -248-I1130713$31260 0
125FREQI 7DYNAMICS -24870501007I0Sl1250 0
166FREQ2 7DYNAMICS -24870501107IIS11660 0
206FSLIST 15AXIC -2-4I0-I08215 82$43200 -I
28GENEL 8GEOM2 -2-49-I14301 43$32800 -I
26GRAV 9GEOM3 08121651440144Sl2600 1
2GRDSET 1GEOMI 041213200$3200-I
1GRID 1GEOMI 041211450145$3I00-I
205GRIDB 15AXlC -281211811581$43100 -I
229GRIDF 15AXlC -2488851121512S14700 0
230GRIDS 15AXIC -2488931131513Sl4800 0
238INPUT IIGEOM5 017179090131013$5 5-I
84LOAD 9GEOM3 048-I1455161$34060 1
77MAT1 3MPT 042042911031Sl3860 0
78MAT2 3MPT 082044912032S13880 0
122MAT3 3MPT -24204491140314$41220-I0
IJHK
12E6
12E5
12E3
12E4
12C6
13A1
32C5
32C6
32BI
21C2
13D2
12D6
12D4
12D5
13Dl
12E2
12El
12Dl
13A2
12D2
32B2
31A2
13D3
31A3
22A3
21E5
32B5
21E6
31A4
22D5
31D2
13E2
13E3
23B2
13El
22A4
32B6
lIC6
liD2
liD4
23A6
32A4
22A6
22A5
23C4
31E2
liE4
liE2
lIA2
lIAl
31El
32DI
32D2
32E4
13D6
13C5
13C6
22A2
4.5-17 (811/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Table2(e). BulkDataCards
B CD E
234MAT4 3
235MAT5 3
90MATS1 3
91MATT1 3
102MATT2 3
189MATT3 3
157M_MAX 15
19M_MENT 9
21M_MENTI 9
23M_MENT2 9
17MPC I0
83MPCADD I0
149MPCAX 15
127N_LINI 7
128N_LIN2 7
129N_LIN3 7
130N_LIN4 7
15_MIT I0
92_MITI I0
150_MITAX 15
239_UTPUT II
82PARAM 6
181PBAR 2
147PC_NEAX 2
45PDAMP 2
116PDUMI 2
117PDUM2 2
118PDUM3 2
159PDUM4 2
160PDUM5 2
161PDUM6 2
163PDUM7 2
164PDUM8 2
165PDUM9 2
46PELAS 2
185PLFACT 3
24PLBAD 9
198PLEAD1* 9
199PLEAD2 9
IIPL_TEL 8
44PMASS 2
152PBINTAX 15
41PQDMEM 2
40PQDPLT 2
38PQUADI 2
39PQUAD2 2
154PRESAX 15
208PRESPT 15
29PROD 2
42PSHEAR 2
121PT_RDRG 2
35PTRBSC 2
33PTRIAI 2
34PTRIA2 2
37PTRMEM 2
36PTRPLT 2
30PTUBE 2
43PTWIST 2Processed byIFPSorted Alphabetically byCardName.
FGH
MPT 048317
MPT 08882
MPT -2416545
MPT 0416545
MPT 0416525
MPT -2416525
AXIC -2-413109
GE@M3 0812109
GE@M3 0812121
GE@M3 0812133
GE@M4 -248-I
GE@M4 -248-I
AXlC -248-I
DYNAMICS -2812725
DYNAMICS -2812725
DYNAMICS -2812725
DYNAMICS -2812725
GEBM4 -24837
GE@M4 -2-49-I
AXlC -248337
GERM5 01717909
PVT 0-516-I
EPT 0424621
EPT -2428653
EPT -248269
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT 0424925
EPT -248497
MPT -248-I
GERM3 0812145
GERM3 -2000
GERM3 -2-49774
GEBM2 048505
EPT -248269
AXIC -248517
EPT 048237
EPT 0412257
EPT 0416221
EPT 048237
AXlC -241261
AXlC -248834
EPT 0412165
EPT 048237
EPT -248237
EPT 0412257
EPT 0416221
EPT 048237
EPT 048237
EPT 0412257
EPT 0412177
EPT 048237IJKLMN
12103 21S13900 -I
12203 22S14000 -I
1503 5$4900 -I
1703 7$4900 0
1803 8$41020 -I
11503 15$41020 -I
03815 38$31560 0
04801 48S11800 1
04601 46S12000 -I
04701 47S12200 -I
04901 49S31700 -I
14891 60$34020 1
04015 40$31490 0
03107 31S11270 0
03207 32S11280 0
03307 33S11290 0
03407 34S11290 0
05001 50S11400 -I
04951 63$33981 -I
04315 43$31500 0
01410 14S5 5-I
2 00$33960 0
15220S1300-I
115219$31470 0
0402 2S13200 -I
16102 61$51900 0
16202 62$52000 0
16302 63$52100 0
16402 64$52200 0
16502 65$52300 0
16602 66$52400 0
16702 67$52500 0
16802 6E$52600 0
16902 69$52700 0
0302 3S13240 -I
11103 II$31420 -I
05101 51S12400 -I
06909 69$9 -I
06802 68$41990 -I
05201 52S1IIII -I
0402 4S13200 -I
14915 49S31520 0
0502 5S13000 -I
0602 6S13020 -I
1702 7S12980 -I
0802 8S13000 -I
05215 52$31540 0
08415 84$43400 -I
1902 9S12900 -I
01002 I0S13000 -I
02102 21S13000 -I
11102 IIS13020 -I
11202 12Sl2980 -I
01302 13S13000 -I
01402 14S13000 -I
11502 15S13020 -I
11602 16S12920 -I
01702 17S13000 -IIJHK
32D6
32EI
13E6
21AI
21B6
31B3
23BI
lID1
lID3
lID5
IIC5
13D5
22E5
22BI
22B2
22B3
22B4
IIC3
21A2
22E6
32E5
13D4
31AI
22E3
12C3
21E2
21E3
21E4
23B3
23B4
23B5
23CI
23C2
23C3
12C4
31A5
IID6
31C6
31DI
lIB5
12C2
23A2
12B5
12B4
12B2
12B3
23A4
31E4
lIE5
12B6
22AI
12A5
12A3
12A4
12BI
12A6
lIE6
12CI
4.5-18 (8/I172)&lt;/p&gt;
&lt;p&gt;Table2(f)
A B
31PVISC
233QHBDY
195RANDPS
196RANDTI
197RANDT2*
145RINGAX
207 RINGFL
190RF_RCE
131RL_ADI
132RL_AD2
236SAME
237SAMEI
153SECTAX
135SEQEP
4SEQGP
231SLBDY
25SL_AD
16SPC
12SPCI
13SPCADD
148SPCAX
I05SPmINT
151SUPAX
14SUPmRT
162TABDMPI
133TABLEDI
134TABLED2
140TABLED3
141TABLED4
93TABLEMI
94TABLEM2
95TABLEM3
96TABLEM4
97TABLES1
191TABRNDI
27TEMP
155TEMPAX
98TEMPD
201TEMPPI
202TEMPP2
203TEMPP3
204TEMPRB
136TF
137TIC
138TLBADI
139TL_AD2
142TSTEP
167UISET
176UISETI
168U2SET
177U2SETI
169U3SET
178U3SETI
170U4SET
186U4SETI
171U5SET
187U5SETI
172U6SETC
2
9
7
7
7
15
15
9
7
7
II
11
15
7
1
15
9
I0
I0
I0
15
8
15
10
5
5
5
5
5
5
5
5
5
5
5
9
15
9
9
9
9
9
7
7
7
7
7
I0
lO
lO
lO
lO
lO
lO
lO
lO
lO
lOEXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR)
BulkDataCards Processed byIFPSorted Alphabetically byCardName.
D E FG H IJ KL M N
IJHK
EPT -2 48189 01802 18Sl 310 -I 12AI
GERM3 099901 04309 43Sl 5100 -l 32D5
DYNAMICS -2 412782 02107 21$4 1950 -l 31C3
DYNAMICS -2 48752 02207 22$4 1960 -l 31C4
DYNAMICS -2-4 8-l l2307 23$9 -l 31C5
AXlC -2 412245 l5615 56$3 1450 0 22EI
AXIC -2 48497 l8315 83 $43300 -l 31E3
GERM3 -2 812I09 05509 55Sl 1900 l 31B4
DYNAMICS -2 88337 l5107 51$31310 0 22B5
DYNAMICS -2 88337 l5207 52$31310 0 22B6
GERM5 -2-4 9-l0lifo II$5 5-l 32E2
GERM5 -2-8 9-l01210 12$5 5-l 32E3
AXIC -2 412177 l6015 60 $315300 23A3
DYNAMICS -l 483705707 57Sl 40-l 22C3
GE_MI -l 483705301 53Sl 40-I lIA4
AXIC -2-4 8-l01415 14Sl4900 0 32D3
GERM3 -2 48157 05401 54S12500 -I 11EI
GERM4 -2 48lOl 05501 55Sl1600 -l llC4
GERM4 -2-4 9-l05481 58$33980 -l liB6
GERM4 -2 48-ll5491 59$34020 l lICl
AXIC -2 412485 06215 62 $31480 0 22E4
GERM2 -2-4 9794 05551 49$4I050 -l 21C3
AXIC -2 48337 06415 64$31500 0 23AI
GERM4 -2 483705601 56Sl1400 -l lIC2
DIT -2-416 -ll 1521$2 930 0 23B6
DIT -2-416 -llll05 II$2 930 0 22CI
DIT -2-416 -ii1205 12$2 930 0 22C2
DIT 0-416 -ll1305 13$2 930 0 22D2
DIT 0-416 -ll1405 14$2 960 0 22D3
DIT 0-416 -l lI05 l$2 930 0 21A3
DIT 0-4 16 -ll205 2$2 930 0 21A4
DIT 0-416 -ll305 3$2 930 0 21A5
DIT 0-416 -l l405 4$2 960 0 21A6
DIT -2-416 -ll3105 31$2 930 -l 21Bl
DIT -2-416 -l l 5525$2 930 0 31B5
GERM3 048157 05701 57Sl2500 -l liE3
AXIC -2 48237 06815 68$3 1550 0 23A5
GERM3 0412269 05641 65$4 980 l 21B2
GERM3 -2-4 lO -l08109 81$42100 -l 31D3
GERM3 -2-4 lO -l08209 82$4 2200 -l 31D4
GERM3 -2-4 lO -l08309 83$4 2300 -l 31D5
GERM3 -2 -4lO -l08409 84$4 2400 -l 31D6
DYNAMICS -2 812 -l06207 62Sl 1360 0 22C4
DYNAMICS -2 412713 06607 66Sl 1370 0 22C5
DYNAMICS -2 88681 17107 71S3 1380 0 22C6
DYNAMICS 0816689 l7207 72$31390 0 22DI
DYNAMICS 04 8-ll8307 83Sl1420 0 22D4
GEI_M4 0 88370 llO 41$5 2800 0 23C5
GERM4 0-4 9-l0lllO II$53700 0 23E2
GERM4 0 88370 210 2$52900 0 23C6
GERM4 0-4 9-l01210 12$53800 0 23E3
GERM4 088370 310 3$53000 0 23DI
GERM4 0-4 9-l01310 13$53900 0 23E4
GERM4 0 88370 410 4$53100 0 23D2
GERM4 0-4 9-l01410 14$54000 0 31A6
GERM4 088370 500 5$53200 0 23D3
GERM4 0-4 9-I01510 15$54100 0 31Bl
GERM4 088370610 6$53300 0 23D4
4.5-19 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Table2(g).BulkDataCardsProcessed byIFPSortedAlphabetically byCardNal_e.
A B
188U6SETI
173U7SET
192U7SETI
174U8SET
193U8SETI
175U9SET
194U9SETICD EFGHIJKLM N
I0GERM4 0-49
I0GERM4 088
I0GERM4 0-49
I0GERM4 088
I0GERM4 0-49
I0GERM4 088
I0GERM4 -0-49-I01610 I0$54200 0
3707107$53400 0
-I01710 17$54300 0
3708108$53500 0
-I01810 18$54400 0
3709109$53600 0
-I01910 19$54500 0IJHK
31B2
23D5
31B6
23D6
31CI
23EI
31C2
4.5-20 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP3 (INPUT FILE PROCESSOR 3)
4.6 EXECUTIVE PREFACE MODULE IFP3 (INPUT FILE PROCESSOR 3)
4.6.1 Entry Point: IFP3
4.6.2 Purpose
I.Tointerpret Bulk Data cards unique toanaxisymmetric conical shell problem.
2.Togenerate anddistribute todata blocks GEOMI, GEOM2, GEOM3, andGEOM4 data cards
forallharmonics specified intheproblem.
3.Toconvert thefollowing input Bulk Gata cards tothefollowinq output Bulk Data cards.
Ipput Bulk Data Input Output Bulk Data OUtDUt
Card Type Data Block Card Type Data Block
AXIC AXIC None
CCONEAX AXIC CCBNE GERM2
FORCEAX AXIC FORCE GEBM3
F_RCE AXIC FORCE GERM3
GRAV AXIC GRAV GEOM3
L_AD AXIC L_AD GERM3
M_MAX AXIC M_MENT GEOM3
MOMENT AXlC MOMENT GERM3
MPCADD AXlC MPCADD GEOM4
MPCAX AXIC MPC GEOM4
_MITAX AXlC _MIT GEBM4
POINTAX AXlC MPC GEOM4
GRID GEBMI
PRESAX AXIC FRESAX GEOM3
RINGAX AXIC S_S _E_M4
GRID GERM1
SECTAX AXIC MPC GERM4
GRID GEOMI
SEQGP AXIC SEQGP GE_MI
SPCADD AXIC SPCADD GEOM4
SPCAX AXlC SPC GERM4
SUPAX AXIC SUP_RT GEOM4
TEMPAX AXIC TEMP GEOM3
TEMPD AXIC TEMPD GERM3
4.6-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.6.3 Callin_ Sequence
CALL IFP3. IFP3, aPreface module, iscalled only from thePreface driver SEMINT.
4.6.4 Input Data Blocks
AXIC Bulk Data Deck cards asoutput from IFP.
4.6.5 Output Data Blocks
GERM1
GEOM2
GERM3
GEOM4-Grid Point Data.
-Element Connection Data.
-Loading Data.
-Constraint Data.
4.6.6 Parameters
Notapplicable toIFP3.
4.6.7 Method
Inthefollowing a&amp;quot;card&amp;quot; isdefined asthetype ofcard image output byIFP, i.e., with
themneumonic stripped offandacard image, insome cases amodified card image, written on
theoutput data block.
4.6.7.1 Initialization andOverall Method
IFP3 first determines theamount ofcore available, andthen allocates three buffers for
theSCRATCH, AXIC, andGEOM data blocks. TheAXIC data block isopened forinput using PREL_C.
Atthis point the21types ofinput Bulk Data cards arefound, onetype atatime, ontheAXlC
data block, using theL_CATE routine. Thecards ofeach type areconverted andoutput toa
GErM data block.
Tofacilitate theoperation, allBulk Data cards causing output toaparticular GErM
data block arehandled together. Thus theprocessing issuch that allcards affecting GERM2
arefirst converted, andfollowing these allthose forGEOM3, then GERM4, andfinally GE_MI.
Thesuperscripts sandcinthefollowing refer tothesine andcosine sets respectively.
4.6-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACEMODULE IFP3(INPUTFILEPROCESSOR 3)
4.6.7.2 Conversion ofInput BulkDataCards toOutput BulkData Cards forGEgM2.
I.AXIC card
-Input Card-
AXICHa__
-Output Card-
(None)
TheAXICcardsupplies Harmwhich isusedtocompute thenumber ofharmonics, N.
N=Harm+l
2.CCgNEAX card(i)
where-Input Card-
CC_NEAXJEL-iD_ JJProp-IDJ RingAID IRingB IDJ
-NOutput Cards-
CC{_NERJEL-IDnJPr°p-IDIRingA IDnJRing BIDRJ
EL-IDn =EL-ID xI000+n, (2)
RingAIDn=RingAID+lO00000 xn,(3)
RingBIDn=RingBID+lO00000 xn, (4)
forn=l,2,&amp;hellip;,N.
4.6-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4,6.7.3
l°Conversion ofInputBulkDataCardstoOutput Cards forGERM3.
F@RCEcardandMOMENT card
Thesetwocardsareoutput toGEBM3asinputfromAXlC.
2.F_RCEAX cardandM_MAX card
where-Input Cards-
FORCEAXl SetIDIRing IDIHarm IDIFactor 1
M_MAXl SetIDIRingIDIHarm IDIFact°r I
-Output Cards-
F(&lt;em&gt;RCEI SetID[Ring IDHI 01Factor 1
M(&lt;em&gt;MENTISet IDIRing IDHI 01Fact°r IFr_IFzl
MrM_LMzI
&lt;em&gt;rtF__zl
MrLI0IMzl
RingIDH=RingID+(HarmID+I)xI000000 (5)
IfF_RCEcardsandF_RCEAX cardsbothexist, thentheresulting output cardsoftheF@RCEand
F_RCEAX cardsaremerged insortonSetID&amp;rsquo;s. Thisapplies toM_MENT andM@MAXcardsalso.
3.GRAVcard,L@ADcard,andTEMPDcard
Thesethreecardsareoutput toGEOM3astheyareinputfromAXIC.
4.PRESAX card
-Input Card-
PRESAX SetIDIValue IRingA ID[Ring BID&lt;/em&gt;@I-&lt;/em&gt; @2&lt;/em&gt;
4.6-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3)
where-NOutput Cards-
PRESAXnl SetID[Value ]RiRgAIDnlRiRgBIDRI _IJ@2JnI
RingAIDn=RingAID+lO00000 xn
RingBIDn=RingBID +lO00000 xn
forn=l,2,&amp;hellip;,N.
5.TEMPAX card
TEMPAX
ISet ID[RingID!-Input Card-
_I[TiI¢2lT2]_31T31
-Nx2Output Cards -
IDn+ Ts
IDn+1Tn
where
Ring IDn+l=RingID+lO00000 x(n+l)
SetIDs =SetID+lO0000000
SetIDc =SetID+200000000
forn=O,l,&amp;hellip;.N-l.
TsandTcarecomputed asfollows. AllTEMPAX cards having thesameSetIDandn n
Ring IDaregathered together. Theangles @iandtemperatures Tiarearrayed intoatwo-(6)
(7)
(8)
(9)
(lO)
4.6-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
dimensional matrix.
¢iT1
@2T2
@k Tk
wherekisthetotalnumber ofunique @&amp;rsquo;s,andthe@&amp;lsquo;sareconverted toradians.
Thematrix issortedonthe@column, andduplicate angles areremoved.
Forn=O,wehave
k
TCo-4_Ii-£-I(Ti+Ti+l)(¢i+I- ¢i)&amp;rsquo;(11)
and
S=O.To(12)
Forn&amp;gt;0
Tc1k 1 I(Tiqbi+l &amp;ldquo;Ti+l@i)(sin -sin
-Z(qbi+1-@i){ n n@i+ln@i)n_i=1
Ti+l&amp;quot;Ti 12(cosn¢i+1-cosn@i+n¢i+1sinn@i+1-n@isinn@i)
n(13)
and
k 1 J(Tiqbi+l -Ti+lq_i)
TSn-&lt;em&gt;Ii:l&lt;/em&gt;(&lt;em&gt;i+l-q_l)&lt;/em&gt; n (-cosn@i+1+cosn@i)
Ti+1-Ti }+ 2(sinn@i+1-sinn¢i-n@i+lcosn@i+l+n@icosn@i)n(14)
4.6-6&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEIFP3(INPUTFILEPROCESSOR3)
where
andCk+l=¢I+2_ (15)
Tk+l=Tl. (16)
4.6-7&lt;/p&gt;
&lt;p&gt;4.6.7.4
I•
whereMODULE FUNCTIONAL DESCRIPTIONS
Conversion ofInputBulkDataCardstoOutput CardsforGE@M4
SPCADD card
-Input Card-
SPCADD L_ S1I &amp;ldquo;&amp;rsquo;&amp;rdquo; I$9
-2Output Cards-
SPCADDSl SetIDSIS1[ &amp;hellip;
SPCADDC ISetIDClS11 &amp;ldquo;&amp;rsquo;&amp;ldquo;I-_ flOPen-ended
SetIDs=SetID+I00000000 ,
SetIDc=SetID+200000000 •
Thefollowing 4mandatory SPCADD cardsarealsocreated andputoutonGEBM4reaardless
ofwhether thereareorarenotSPCADD cardsoresent.
SPCADD[IO0000101 _
_c_ool_ooooo_o_1_o_1-_I
_c_ool_ooooooooiio_t_I
&lt;em&gt;c_ooI_ooooooooi&lt;/em&gt;°_iI-_I
2.MPCADD card
Alloperations performed fortheSPCADD cardareperformed fortheMPCADD card.(17)
(28)
4.6-8&lt;/p&gt;
&lt;p&gt;3.SPCAXcard
where
and
where
4.MPCAXcardEXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3)
-Input Card-
SPCAXISet IDIRing ID(Harm IDIComp IValue- I
-3Output Cards-
SPCADDISet IDslset IDIlOlI-l1
SPCADDC_et IDcIset IDIi02I-lI
SetIDs=SetID+lO0000000 ,
SetIDc=SetID+200000000 ;
RingIDHICompIValuel
Ring IDH=Ring ID+(Harm ID+l)xlO00000.
-Input Card-
MPCAX SetIDRingIDHarm ICompIDValue &amp;hellip; -l -l -l -lIII_IIIIIII&amp;rdquo;&amp;rdquo;&amp;rsquo;_Rep_e ats
-3OutputCards-
MPCADDs_etIDISetIDII01I-II
MPCADD etIDsetID102 -i
SetIDs=SetID+lO0000000,
SetIDc=SetID+200000000.
4.6-9(19)
(2O)
(2])
Open
Ended
(22)
(23)&lt;/p&gt;
&lt;p&gt;andMODULE FUNCTIONAL DESCRIPTIONS
MPCISetIOlRingIDHC°mPlValue &amp;ldquo;&amp;rsquo;&amp;rdquo; l-&amp;rsquo;[-il&amp;rsquo;l__-
Foreach3-word group output,
RingIDH:RingID+(Harm ID+1)x1000000. (24)
5.POINTAX card(also processed inGERM1 section)
-Input Card-
POINTAXI IDIRingIDI_I
-12Output Cards-
&lt;em&gt;;I_o_I_oI_I-&lt;/em&gt;.o]
-con_-&lt;em&gt;nl_Icoe&lt;/em&gt;.nI
-cont- IDnIiIC°ef&amp;rsquo;n
-cont- -II-II-I
.&lt;em&gt;c__o_l&amp;rsquo;°I_I-&lt;/em&gt;.°
-cont- IDnIiICoef.n
-cont- IDnIiIC°ef&amp;rsquo;n
-cont-] -Il-II-IN3-word groups
(n:ltoN)
N3-word qrnuDs
(n=ltoN)sset
i=lto6
cset
i:lto6
4.6-10&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACEMODULE IFP3(INPUT FILEPROCESSOR3)
where theCoef.nabove aredefined by:
i cset-Coef, n sset-Coef,n
I(ur)
2(u¢)
3(ut)
4(Or)
5(e_)
6(ez)cos(n¢)
sin(n¢)
cos(n¢)
sin(n¢)
cos(n¢)
sin(n@)sin(n¢)
-cos(he),
sin(n¢)=+l,n=O
-cos (n¢),=+I,n=0
sin(n¢)
-cos (n¢), =+l,n=0
and
IDn=Ring ID+(nxlO00000). (25)
6.SECTAX card (also processed inGECMI section)
-input Card-
-6Output Cards-
,,c;[,o_I_o,I-_.ol
-cont-i,o.[iICoef.n[
ID__o.=&lt;em&gt;I.I&amp;rsquo;]c&lt;/em&gt;,.nf
-cont- !&amp;lsquo;1]-_I-_IN3-wordqrouos
(n=ltoN)sset
i=lto3
4.6-II&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P36</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_036/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
where theCoef.n_c_I_o_i,oj_i_oI
ID iCoef-cont-I n1 I.nl
-cont-
-cont- I
abovearedefined by:IDnIiJCoef.nIN3.word groups
(n=ltoN)cset
i=lto3
and
7°i cset-Coef, n sset-Coef, n
BMITAX card(sin(n@2) -sin(n@l))n
orR(_2-01)forn=O
__(cos(n_2) -cos(n_l))n
or0forn=O
E(sin(n@2) &lt;em&gt;sin(n@l) )n
orR(&lt;em&gt;2_l)forn=O&lt;/em&gt;&lt;/em&gt;(cos(n@2) -cos(n@l))n
or0forn=O
R(s sin(n_l)) in(n¢ 2)-
orR(_2-_l)forn=O
__(cos(n@2) -cos(n,l))n
orO,forn=O
ID=RingID+(nxI000000)n(26)
-Input Card-
(_MITA RingID IHarm IDIComb
-Output card-
__n_I0_ICom_I
RingIDH=RingID+(HarmID+I)xI000000. (27)
4.6-12&lt;/p&gt;
&lt;p&gt;8°
9°EXECUTIVE PREFACE MODULE IFP3 (INPUT FILEPROCESSOR 3)
SUPAX card
where-Input Card-
SUPAXIRiR_ IDIHarm IDIComp.l
-Output Card-
SUPORT _
Ring IDH=RingID+(Harm ID+I)xI000000.
RINGAX card(also processed inGE_MI section)
-Input Card-
RINC_X_iRg ID[RIZIComp1
-2xNOutputCards-
forn=l,2&amp;hellip;.. N;and
whereRingID_=RingID+I000000 xn,
sPccI102Fing IDC1246I01
RingID_=RingID+I000000 xn,
forn=l,2,&amp;hellip;,N.(28)
(29)
(3O)
4.6-13&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.6.7.5 Conversion ofInputBulkDataCardstoOutput CardsforGERM1.
I.P(&lt;em&gt;INTAX card(alsoprocessed inGERM4section)
-Input Card-
POINTAX _
-Output Card-
°&lt;/em&gt;°1_°I°1_I°°iL°°[°I01oI
2.SECTAX card(alsoprocessed inGERM4section)
-Input Card-
SECTAX _
-Output Card-
3.RINGAX card(alsoprocessed inGERM4section)
-Input Card-
RINC_AX_
-NOutput Cards-
GR_DIRingIDI 0lRIZ 100 I01COmb1 01
/
where
forn=I,2&amp;hellip;.. N.RingIDn=RingID+I000000 xn, (31)
4.6-14&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3)
4.6.7.6 Order ofOutput forGenerated Card Images
IFP3hastheresponsibility tooutput cards inthesortorder outout byIFP.
IFP3tosimultaneously process somecards.
4.6.8 SubroutinesThis causes
4.6.8.1 Subroutine Name: IFP3B
I.Entry Point: IFP3B
2.Purpose: Toprocess thecards causing output tobecreated forGEQM4 andGE_MI.
3.Calling Sequence: CALL IFP3B
Design Requirements
Thedesign requirements are:
I.Toproduce cardimages equivalent tothose outoutbyIFP.
2.Tooutput those images onGEQMI, GEQM2, GERM3, GEQM4 intheproper sortandorder.
Thefollowing CQ_N blocks arerequired fordatainterface between subroutines IFP3and4.6.9
IFP3B.
1.CgV_ICN/IFP3LV/
ThisCg_N blockcontains localvariables common between IFP3
andIFP3Bonly.
2oCgHH_N/IFP3BD/
ThisCg_Fi_Nblockcontains constants commonbetween IFP3and
IFP3Bandisinitialized intheBlockDatasubprogram AXICBD.
3.CCMI_N/IFP3ZZ/
ThisCg_N blockdefines thebeginning ofopen-core.
4.6.10 Diagnostic Messages
IFP3error messages arealluser-oriented. They pertain toBulkDatacarderrors forthe
axisymmetric conical shell problem, andareoutput insummary formbyIFP3onthesystem output
file.
4.6-15&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION)
4.7EXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION).
4.7.1EntryPoint:XGPI
4.7.2Pur__
Totranslate(compile)aDMAPprogramintoaninternalform(the{_SCAR)forusebythe
NASTRANExecutiveSystem,and,ifrestarting theproblem,toinitialize datablocks andnamed
common blocks forproper restart oftheproblem. Seesection 2forformat ofthe_SCAR.
4.7.3 Calling Sequence
CALLXGPI. XGPIiscalled onlybysubroutine SEMINT, thePreface driver.
4.7.4 Method
XGPIcalls XGPIBS toinitialize dataforthemodule andtoinitialize theLink
Specification table innamed common block /XLINK/.Upon return fromXGPIBS, XGPIloads theXCSA
Executive Table intocorefromtheProblem Tape. Ifrestarting theproblem, XGPImodifies
table MEDMSK innamed common block /XI4DMSK/ifnecessary. Seediscussion oftheINMtable
inthedescription fortheXCSAmodule, insection 4.2.6.2.
XGPI calls X_SGEN toexecute phase lofthebMAPprogram compilation. X_SGEN processes
theDMAP instructions andgenerates theskeleton oftheOperation Sequence Control Array (&lt;em&gt;SCAR).
Seesection 2.4.2.1 fordetails ontheformat ofthe_SCAR.
XGPIcalls XFL_RD toexecute phase 2ofthecompilation. XFL_RD fills inthe_SCAR
entries with theinformation needed forallocating files (bySFA)whenDMAPmodules are
executed. Ifrestarting aproblem, XFL_RD determines which datablocks areneeded fromtheOld
Problem Tape torestart theproble&lt;/em&gt;: and,whennecessary, turns onexecute flags forDMAP
modules toregenerate missing datablocks.
Atthispoint, XGPIterminates thejobifanyerrors were found incompilation; ifnot,
XGPIwrites the_SCAR ontotheDataPoolFile. Iftheproblem isarestart, XGPIcopies the
datablocks specified byXFL_RD fromtheOldProblem TapeontotheD_taPoolFileand
initializes various named common blocks.
4.7-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
XGPIcalls_SCDMP toprintthe_SCARifrequested bytheuserviatheDIAGcardinthe
Executive Control Deckandtoposition theDataPoolFileatthefirst_SCARentryinpreparation
forexecuting DMAPmodules. Ifcheckpointing isrequested bytheuser,theProblem Tape
Dictionary isinitialized andwritten ontheProblem Tape. XGPIthenreturns tothecalling
routine SEMINT.
4.7.5 Subroutines
Thefollowing labeled common blocks areusedtocommunicate dataandconstants amongthe
complex ofXGPIsubroutines.
I.C_MMON/XGPIC/ -Contains 30individual cellscontaining various flags, integer andBCD
constants, andmachine dependent data. Alsoanadditional 40cellarraycontains aseries
ofrequired masks.
2.C_MM_N/XGPID/ -Contains restart typecodesandapproach typecodesplusmasksandflags
required inOSCARgeneration.
3.COMM_N/XGPII/ -Defines thebeginning ofopencorefortheXGPImodule andcontains the
&lt;em&gt;SCAR asitisgenerated.
4.C_MM_N/XGPI2/ -Contains theMPLtable(seesectio&lt;/em&gt; 2.4.2.2).
5.C_MM_N/XGPI2X/ -Contains thedefault parameters required bytheMPLtable.
6.C_MMON/XGPI3/ -Contains thePVTtable (seesection 2.4.2.4) priortoitbeingwritten
ontheProblem Tape.
7.C_MM_N/XGPI4/ -Contains individual DMAPcardsastheyareoutput fromXRCARD plusthe
various flagsandpointers required toprocess eachDMAPinstruction.
8.C_MM_N/XGPI5/ -Contains solution, solution subset, approach andstartcodesalongwith
datapertaining toDMAPALTER numbers.
9.C_MM_N/XGPI6/ -Contains various pointers intotheModule Execution Decision Table,
MED(seesection I.I0).
I0.C_MM_N/XGPIT/ -Contains datapertaining totheIFILETable (seesection 4.7.6.3).
4.7-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE XGPI (EXECUTIVEGENERAL PROBLEM INITIALIZATION)
II.C_MM_N/XGPI8/ -Contains pointers intotheICPDPL Table (seesection 4.7.6.3).
Further details regarding these common blocks maybeobtained fromthesource listings for
XGPIBD andXGPIBS.
4.7.5.1 XGPIDG
4.7.5.2I.Entry Points: XGPIDG, XGPIMW.
2.Purposes: ForXGPIDG, towrite allfatal andnon-fatal diagnostic messages for
module XGPI. ForXGPIMW, towrite allnon-diagnostic messages formodule XGPI.
3.Calling Sequences:
ForXGPIDG:
CALLXGPIDG (NC_DE,I,J,K)
NC@DE -Message code nun_er
I,J,K -Integer values determined byNCgDE.
ForXGPIMW:
CALLXGPIMW (MSGN@,I,J,A)
MSGN_ -Message codenun_er
I,J,A -Integer values determined byMSGN_
XGPIBS
I.Entry Point: XGPIBS.
2.Purpose: Toinitialize module dataandtheLinkSpecification table inname,
cormnon block /XLINK/(seesection 2.4).
3.Calling Sequence:
CALLXGPIBS
4.7.5.3 XgSGEN
I.Entry Point: X_SGEN.
4.7-3&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.7.5.42.Purpose: Toexecute phase 1ofthecompilation bytranslating theDMAPprogram
intoaskeleton Operation Sequence Control Array (_SCAR).
3.Calling Sequence:
CALLXOSGEN
XLNKHD
I.Entry Point: XLNKHD.
2.Purpose: Togenerate theheader section ofan_SCAR entry andforproblem re-
starts, todetermine whether ornottosetthe_SCAR entry execute flag.
3.Calling Sequence:
CALLXLNKHD
4.7.5.5 XIPFL
4.7.5.6I.EntryPoints: XIPFL, X_PFL.
2.Purpose: ForXlPFL, togenerate theinputdatablocksection ofan0SCARentry.
ForX_PFL, togenerate theoutputdatablocksection ofanOSCARentry.
3.Calling Sequences:
CALLXlPFL
CALLXOPFL
XPARAM
I.Entry Point: XPARAM.
2.Purpose: Togenerate theparameter section ofan_SCAR entry.
3.Calling Sequence:
CALLXPARAM
4.7.5.7 XSCNDM
I.EntryPoint: XSCNDM.
2.Purpose: ToscanallDMAPinstructions andreturn tothec_lling program each
iteminaninstruction alongwithitsidentification (i.e.,delimiter, BCDname,
4.7-4&lt;/p&gt;
&lt;p&gt;4.7.5.8
4.7.5.9EXECUTIVE PREFACE MODULE XGPI (EXECUTIVE GENERAL PROBLEM INITIALIZATION)
value orendofinstruction) asitisrequested.
3.Calling Sequence:
CALLXSCNDM
XFL_RD
I.Entry Point: XFL_RD.
2.Purpose: Tocompute theLTU(Last TimeUsed) andNTU(Next TimeUsed) values
fortheinput andoutput sections of_SCAR entries, andforproblem restarts, to
determine whicK datablocks areneeded fromtheOldProblem Tape torestart the
problem.
3.Calling Sequence:
CALLXFL_RD
XFLDEF
I.Entry Point: XFLDEF.
2.Purpose: Tosearch theOldProblem Tape restart dictionary forarequested data
block nameandflagnameiffound; andifnotfound, andifrestart ismodified andthe
calling routine requests it,toattempt toregenerate thedatablock byturning onthe
proper _SCAR execute flags.
3.Calling Sequence:
CALLXFLDEF (NAMI, NAM2, N@FIND)
NAMI,NAM2 Datablock name (8characters, 4characters/word).
N_FIND -Forinput, N_FIND&amp;lt; 0indicates thatthecalling routine wants
thedatablock regenerated ifitisnotinrestart dictionary.
N_FINDmO indicates noregeneration isdesired. Foroutput,
N_FIND indicates tothecalling routine whatXFLDEF did.
N_FIND &amp;lt;O,thedatablock wasregenerated. N_FIND =O,the
datablock wasintherestart dictionary andwasflagged for
useinrestarting theproblem. N_FIND &amp;gt;O,thedatablock
wasnotfound andwasnotregenerated.
4.7-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.7.5.10 BSCDMP
I.EntryPoint: OSCDMP.
2.Purpose: ToprinttheOSCARonthesystem output fileifrequested byuser,and
toposition theDataPoolFileatthefirstOSCARentry.
3.Calling Sequence:
CALL_SCDMP (FILP_S)
FILPOS -Thenumber offilemarkstoskipoverinordertobepositioned at
beginning oftheOSCAR.
4.7.5.11 MPLPRT
I.EntryPoint: MPLPRT
2.Purpose: Toprintthecontents oftheModule Properties List(MPL)asdefined
bytheBlockDataProgram XMPLBD. Thisprintout, which occurs whenever aDIAG31
cardexists intheExecutive Control Deck,isformatted foreasyreadability by
programmers andusersalike.
3.Calling Sequence:
CALLMPLPRT
4.7.6 Design Requirements
4.7.6.1 OpenCoreLayout
The_SCARarrayinnamedcommon block/XGPII/ defines thefirstlocation inopencore.
Allotherarrays tobeputinopencoreareequivalenced toOSCARandareoffset fromOSCAR(1)
byanamount determined atexecution time. Thisdynamic allocation ofarrays inopencore
optimizes thespaceavailable onagivenmachine, whichmeans thatanyrestrictions ondata
(except thosenotedbelow) areduetothemachine&amp;rsquo;s coresizeandnottheprogram.
4.7-6 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Thediagrams below show theorder inwhich tables reside inopen coreduring phase land
phase 2ofthecompilation.
Phase l
_SCAR
DMPCRD
LBLTBL
MED
FNM
IBUFRPhase 2
_SCAR
PTDIC
ICPDPL
MED
FNM
IBUFR
Inphase lthefinal sizes ofthearrays _SCAR andLBLTBL arenotknown until theDMAP
program hasbeen completely scanned byX@SGEN. These twoarrays request space asneeded
until itrunsout. Atthistimetheuserisinformed thattheDMAPshould beshortened or
corestorage should beincreased.
4.7-6a (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION)
4.7.6.2DataNecessaryForOperation
TheProblemTapeprovidesExecutiveTables×CSA,XALTER,PVT,andforrestarts,XPTDIC
(seesection2.4fordetails). Datainnamedcommonblocksisinitialized bytheBLOCKDATA
routinesXMPLBD,XGPIBDandXBSBDorcommonblockdataisinitialized byroutineXGPIBS.
4.7.6.3TableFormats
I._SCAR:Locatedinnamedcommonblock/XGPII/.Seesection 2.4.2.1 forformat.
2.MED,CNM, FNM: Equivaienced tothe_SCAR table. SeeISl,INMandJNMtable
descriptions inXCSAModule Functional Description (4.2.6.2).
3.PTDIC, ICPDPL: Equivalenced to_SCAR array.
Sample entry:
Word l
2
3r
IR I_i30129 28 _7
Word
1,2Item
DBN
R,F
EQ
ETDescription
Datablock name (BCD) ofthedatablock fromtherestart
dictionary. Note, adatablock nameappears onlyoncein
thetable except fortable VPSwhere itappears twice.
Reelnun_er andfilenumber where thedatablock islast
located onOldProblem Tape. ForXVPSthere isanentry
(thefirst inPTDIC) which indicates where thefirst XVPS
datablock islocated ontheOldProblem Tape. Forpurged
ornot-generated datablocks, R=0andF=O.
Equivalence flag. EQ=0indicates thedatablock is
equivalenced toanother datablock.
Endoftapeflag. ET=lindicates thatthedatablock is
split across tworeels oftheOldProblem Tape.
4.7-7&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Word Item Description
ER Endoflogical record flag. ER=1indicates thatthe
complete logical record waswritten outprior tochanging
reels whenET=I.
RU Reuse flag. RU=lindicates thatthisdatablock istobe
usedtorestart theproblem.
Table ICPDPL contains allentries fromPTDIC which hadtheRUflagset.
4.MPL: TheMPLislocated innamed common block /XGPI2/.Seesection 2.4.2.2 fordetails
5.I_RDNL: Equivalenced toMPL,theI_RDNL table isusedinphase 2whentheMPLisno
IORDNL intheorder thattheyare longer needed. Datablock names areentered into
output fromfunctional modules andIFP.
Sample entry:
Word
Word Item
1,2 DBN
3 LSTUSE
6.PVT:TP
LTU
AP1&amp;mdash; DBN &amp;mdash;
2
3| I_LSTUS E4l TTU- &amp;hellip;&amp;hellip;.
3130 1
Description
Datablock name (BCD)
Pointer toinput oroutput section entry
ofafunctional module _SCAR entry where thedata
block waslastreferenced. LSTUSE isusedtofill in
NTU&amp;rsquo;s (Next TimeUsed) in_SCAR entries.
Tapeflag. TP=lifthedatablock wasdeclared TAPE
inaFILEDMAP instruction.
Lasttimeused. Record number of_SCAR entry beyond which
thedatablock neednotbesaved forinput.
Append flag. AP=lifthedatablock wasdeclared
APPEND inaFILEDMAPinstruction.
Located innamed common block /XGPI3/.
4.7-8&lt;/p&gt;
&lt;p&gt;EXECUTIVEPREFACEMODULE XGPI (EXECUTIVEGENERAL PROBLEMINITIALIZATION}
Sampleentry:
CN
PVTFile seesection 2.4.2.4 fordetails.
MN-Maximum numberofwords inPVT(integer).
CN-Current number ofwords being used(integer).
7.IFILE: Located innamed common block /XGPI7/.Thepurpose ofIFILE istosave
information fromFILEDMAPinstructions.
W°rd lIii_32 &lt;em&gt;-rpIDBNTpI &amp;ndash;iil
Word Item Description
1,2 DBN D_tablock name(BCD)
3 SV SAVEflag
TP TAPE flag
AP APPEND flag
4.7.6.4 Restrictions onData
There areonly three fixed length tables which might beoverflowed byexcess userdata.
These tables arePVT, IFILE andI_RDNL.
4.7.7 Diagnostic Messages
Every effort ismade todetect syntactical andlogical errors intheDMAPprogram, and,for
restarts, tomakesurethattheproblem isbeing restarted correctly. Alltables arechecked
foroverflow.
TheN_G_flaginnamed common block /SYSTEM/issetaccording totheseverity ofthe
errors found. N_G&lt;/em&gt; =lindicates compilation istobediscontinued after phase 2.N_G_=2
4.7-9&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
indicates aserious errorandcauses XGPItoterminate theprogram immediately.
SeetheDiagnostic Message section oftheUser&amp;rsquo;s Manual (section 6.2)foradetailed dis-
cussion ofXGPIdiagnostic messages, XGPImessages include numbers 1thru53.
4.7-I0&lt;/p&gt;
&lt;p&gt;EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR)
4.8 EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR)
4.8.1 Entry Point: UMFEDT
4.8.2 Purpose
Tocreate andmanipulate UserMaster Files.
4.8.3 Callin 9Sequence
CALLUMFEDT. UMFEDT iscalled onlybySEMIte, thePreface Driver.
4.8.4 Method
UMFEDIT functions asapost-processor toExecutive Module XSBRT. Itsprimary taskisto
generate aUserMaster Filebyrepeatedly transferring sorted bulkdatadecks generated byXS_RT
fromtheNewProblem Tape (NPTP) totheNewUserMaster File (NUMF) based oncontrol cards read
fromtheSystem Input File. Seesection 2oftheUser&amp;rsquo;s .Manual foradescription ofthese
control cards andhowtheycontrol thecontents oftheNUMF.
inaddition tocreating aUserMaster File, UMFEDIT isused tolistand/or punch BulkData
Decks fromanexisting UserMaster File (UMF). Control cards readfromtheSystem Input File
alsocontrol thisprocess.
4.8.5 Subroutines
TheUMFEDIT module hasnoauxiliary subroutines butusesXRCARD (seesection 3.4fora
description).
4.8.6 Design Requirements
I.Open coreisdefined at/UMFXXX/andisutilized asfollows:
C_E,&lt;em&gt;N/UMFXXX/
;GIN&lt;/em&gt; Buffer forUMF
GIN_Buffer forUMF
GINBBuffer forNPTP
! Unused coreF
4.8-I&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
2.TheBlockDatasubprogram UMFZBDfills/UMFZZZ/.
3.UMFEDIT operates onlyinthePreface environment. TheBulkDataDeckmusthavebeen
processed byXS_RT andaccepted bytheInput FileProcessor (IFP).
4.8.7 Diagnostic Messages
BadBulk DataDecks (indicated byABORT =.TRUE.) will notbeaccepted byUMFEDIT for
inclusion ontheNUMF. Subsequent BulkDataDecks will beincluded, however, ifacceptable.
Other errors detected inUMFEDIT will result inappropriate diagnostic messages being
written ontheSystem Output Fileandtermination viaPEXIT. These messages are: 1703through
1716, 1718, 1719, 1721, 1722, 1723, and1725through 1737.
4.8-2&lt;/p&gt;
&lt;p&gt;EXECUTIVEMODULEXSFA(EXECUTIVE SEGMENTFILEALLOCATOR)
4.9EXECUTIVEMODULEXSFA(EXECUTIVE SEGMENTFILEALLOCATOR)
4.9.1Entry Point: XSFA
4.9.2 Pur_ur_ep__sg_
TheSegment FileAllocator (SFA)manages thedatablock tophysical file relationships
throughout aNASTRAN problem. Since, ingeneral, thenumber ofdatablocks required for
problem solution farexceeds thenumber ofphysical files available, allocation offiles to
datablocks isdonedynamically asthemodule sequence proceeds. TheSFAwillallocate
forward forasmanymodules aspossible. Agroup ofmodules allocated byoneoperation of
theSFAistermed asegment.
4.9.3 Callin 9Sequence
CALLXSFA
_SCP_S -(@SCP@S)
Wheninput toXSFA, thisinteger argument isthecurrent position (record
number) within the_SCAR. Uponreturn fromXSFA, (1)ifallocation was
successful, WSCP_S isthe_SCAR position oftheendofthesegment asdefined
above; (2)ifallocation wasunsuccessful, theinput argument issetnegative.
4.9.4 Method
SFAiscalled byGNFIST (seesection 3.3.9 foradescription ofGNFIST) when GNFIST fails
tofind thenecessary datablock names intheFIATtable toconstruct acomplete FISTtable
forthenextoperating module (seesection 2.4fordescriptions oftheFISTandFIAT).
TheFIST table mustcontain anentry foreachinput, output, andscratch datablock required by
themodule. SFAoperates byprocessing the_SCAR fromitspresent position (_ext module tobe
operated) through allremaining modules. Onlyfunctional module andoutput processor
_SCAR entries flagged forexecution areprocessed. The_SCAR isreadandprocessed byan
internal subroutine named XS_SGN (Serial _SCAR Sequence Generator) andtheS_Stable is
formed. Fromthistable allallocation isperformed. Following XS_SGN, another internal
subroutine named XCLEAN operates. XCLEAN actsto&amp;quot;clean up&amp;quot;theFIATandDPLtables prior
tothebasic allocation procedure. Thisclean-up involves deleting datablock names not
needed forsubsequent modules, removing equivalence flaas ifonemember ofanequivalent
4.9-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
pair isdeleted, andclosing upgaps intheFIAT caused bydeletions. Following operation of
XCLEAN, basic allocation begins. Allocation isaccomplished during twopasses through theS_S
table.
Pass onefirst checks toseeifeach data block from theS_Sisalready intheFIAT. Ifso,
itisconsidered allocated; otherwise thepossibility ofdata block stacking isinvestigated.
Stacking isdefined asassigning twoormore data blocks tothesame physical file bycon-
sidering their usespan. Thevarious usespan attributes available are: First-Time-Used (FTU),
Next-Time-Used (NTU), andLast-Time-Used (LTU). Data block Amayuse(bestacked on)thesame
file asdata block Bifthefirst use(FTU) ofdata block Bissubsequent tothelast use(LTU)
ofdata block A.Thus many data blocks maybeallocated tousethesame physical file iftheir
usespans donotoverlap. INPUTS maynotbestacked. Following pass one, ifanydata blocks
within S_Sremain un-allocated, passtwoisbegun.
Pass twofirst checks forfiles within theFIAT currently notassigned toanydata block.
These files areconsidered empty andareassigned totheun-allocated data blocks. Once the
empty files areexhausted acheck ismade todetermine ifthenext module tobeoperated has
allitsdata blocks allocated tofiles. Ifthenext module (attheleast) isallocated,
basic allocation iscompleted. Ifthenext module hasnotbeen completely allocated, the
second part ofpass twowill force pooling ofsufficient data blocks toprovide thenecessary
empty files forallocation oftheremaining data blocks needed forthenext module. Pooling
isaccomplished byflagging thedata blocks forcopying onto aseparate file called the
DataPoolFile. TheDataPoolFilewilltherefore contain manydifferent datablocks where
allotherfilescontain onlyonedatablockatatilne. Datablocks arechosen forpooling
bychecking thenext-time-used (NTU)attribute. Thedatablockwithtilegreatest NTUwill
bepooled first. Datablocks pooled areconsidered un-allocated; whentheyaresubsequently
re-allocated totheirownfile,theywillbeflagged forunpooling.
Following basicallocation, subroutine XPUNP (Pool-Unpool) isoperated. Alldatablocks
flagged forpooling arecopied tothePoolFilefollowed byalldatablocks flagged forunpooling
beingcopied fromtheDataPoolFile. Lastly subroutine XDPH(DataPoolHousekeeper) operates
toclean-up andifnecessary re-copy theDataPoolFile. SFAthenreturns control toGNFIST
withthecalling argument setnegative ifitwasun-able toallocate thenextmodule. Figure ]
illustrates thefunctional flow.
4.9-2 (811172)&lt;/p&gt;
&lt;p&gt;EXECUTIVE MODULE XSFA(EXECUTIVE SEGMENT FILEALLOCATOR)
4.9.5 Subroutines
XSFAperforms basic allocation anditsentry point, purpose andcalling sequence aregiven
above. Below, itshould benoted thatXPLEQK andXFILPS aresecondary entry points inXP_LCK.
4.9.5.1 Subroutine Name: XSBSGN (Serial _SCAR Sequence Generator)
I.Entry Point: XS_SC_N
2.Purpose: XS_SGN reads the_SCAR andcreates theSOS(Serial _SCAR Sequence) andMD
(Module Descriptor) tables. TheS_Stable contains thedatablock names andvarious
attributes, while theMDtable contains the_SCAR sequence numbers andthenumber of
input, output, andscratch datablocks required byeachmodule.
S_STable MDTable
#Entries
DataBlock
Name
ArAb:&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.LIP&amp;rsquo;,LTUt,NTU
S_31 I.301_16_IS
AL=
AP=
LTU=
T=
NTU=Entry
Allocation Flag,setonbySFA
whendatablock isallocated.
Append Flag, setonbymodule
XGPI ifdatablock istobe
added to.
Last-Time-Used, created by
XGPIasadatablock attribute.
TapeRequest Flag, setbyXGPI
toindicate aphysical tapefile
isrequested fordatablock.
Next-Time-Used, created byXS_SGN
asadatablock attribute.#Entries
BSCAR Sequence #&amp;quot;
#Inputs
#Outputs
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
#Scratches
#=Fullword integer
values foritemsEntry
4.9-3&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P37</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_037/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_037/</guid>
      <description>
        
        
        &lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Note:ItemscreatedorsetbyXGPIarepassedvia_SCAR.
Thesetablesarecontainedwithinthe/XSFAI/common block.
3.Calling Sequence: CALLXSBSGN
4.9.5.2 Subroutine Name: XCLEAN (FIAT andDPLClean-up)
I.Entry Point: XCLEAN
2.Purpose: XCLEAN deletes datablock names fromtheFIATandDPLwhen theyareno
longer needed (their LTUhasbeen reached). Following these deletions, equivalenced
datablocks flags within FIATarechecked forcontinuing validity. If,forexample,
onemember ofanequivalenced pairhasbeendeleted, theequivalence flagonthe
remaining member isremoved. Finally, empty spaces within FIATareremoved byclosinn
upthetable. XCLEAN alsoregenerates andstores various parameters intotheextended
FIATtable. Since thistable isnon-resident andexists onlyduring SFAoperation,
values suchasNTUandtheon/off switches mustberestored.
Word
lWord
1
4
5
6
ItemExtended FIAT
l
01 ITiII
_131 17116_1_15
-N=Pool
+N=Unpool FlagNTU
._i
-IYesCurrent Module0No
-lYes Current Segment0No
Allocation Type
(Unused)
DescriptionSample entry
(oneforeachFIATentry)
On/off switch, datablock isturned offfollowing stacking
toprevent double stacking.
Tape request flag, copied fromS_Swhen allocated.
_lext-Time-Used; copied fromS_Swhen allocated, regenerated
byXCLEAN fordatablocks remaining fromprevious allocation.
4.9-4&lt;/p&gt;
&lt;p&gt;EXECUTIVEMODULEXSFA(EXECUTIVE SEGMENT FILEALLOCATOR)
Word Item
-N
+NDescription
Flags XPUNP topooldatablock, N=number ofequivalent
names fordatablock (Equals lifdatablock notequivalenced).
Flags XPUNP tounpool datablock, N=DataPoolFile number
ofdatablock.
Flagsetyesifdatablock alloc)ted formodule currently
being allocated -cleared between module allocations.
Flagsetyesifdatablock allocated formodule within current
segment -i.e., alldatablocks allocated during oneSFA
operation.
Allocation type-l=
2=
3 _
5=
z
6 Unuseddatablock match, namealready inFIAT
datablock stacking, nameonfilewith
another
empty fileusedfordatablock
datablock usingfilefreed byPooling
another datablock
sameas5except pooleddatablock is
equivalenced
This table iscontained within the/XSFAI/common block.
4.9.5.3 Subroutine Name: XPUNP (Pool-Unpool)
I.Entry Point: XPUNP
2.Purpose: XPUNP checks thePoolandUnpool flags within theextended FIATandperforms
theI/_operations necessary tocopydatablocks fromtheir separate files totheDataPool
Fileandvice-versa. Datablock trailers arecopied fromtheFIATontotheDataPoolFile
asanadditional record during pooling andarerenlaced fromthisrecord during unnooling.
Allrequested pooling operations areperformed priortoanyunDoolinQ o_erations. Asdata
blocks areadded totheDataPoolFile, appropriate entries areadded totheDataPool
Dictionary (DPL). Theextended FIAT(4.9.5.2) iscontained within the/XSFAI/common block.
3.Calling Sequence: CALLXPUNP
4.9-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.9.5.4 Subroutine Name: XDPH(DataPoolHousekeeper)
I.EntryPoint: XDPH
2.Purpose: XDPHscanstheDataPoolDictionary (DPL)todetermine thenumber andsizeof
thedatablocks ontheDataPoolFilewhichhavebeenflagged asnolonger needed. Ifa
sufficient quantity ofdataisflagged, acomplete housekeeping operation isperformed.
Thiscomplete process involves re-copying theDataPoolFileontoascratch filewhile
skipping thosedatablocks flagged forremoval. Following there-copy, thescratch file
becomes thenewDataPoolFileandtheoldDataPoolFileisreleased asascratch file.
XDPHwillalsoperform apartial housekeeping ifa(several) flagged datablock(s) appears
asthelastdatablockontheDataPoolFile. Forthispartial operation onlytheDPL
entries aremodified torelease thepoolspace, nore-copy isnecessary.
3.Calling Sequence: CALLXDPH
4.9.5.5 Subroutine Name: XPOLCK (DataPoolDictionary Check)
I.EntryPoint: XPOLCK
2.Purpose: XP_LCK scanstheDataPoolDictionary foraparticular datablockname. If
found, theposition within thedictionary andtheDataPoolfilenumber arereturned to
thecalling program.
3.Calling Sequence:
where:
DBNI,DBN2-
FNCALLXP@LCK (DBNI,DBN2,FN,L)
Request datablockname(8characters), 4characters ineachword,
leftjustified andfilled withblanks (ifnecessary).
O,ifdatablocknotontheDataPoolFile.N,ifdatablockontheDataPoolFile; N=DataPoolFilenumber.
Position ofdatablockentrywithin thedictionary ifdatablockfound.
4.9.5.6 Subroutine Name: XPLEQK (DataPoolEquivalence Check)
I.EntryPoint: XPLEQK
4.9-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE MODULE XSFA (EXECUTIVESEGMENTFILEALLOCATOR)
2.Purpose: XPLEQK scans theDataPoolDictionary foranyequivalence tothecalled data
block name. Iffound, acopyoftheequivalent names ismoved from theDataPool
Dictionary totheFIAT.
3.Calling Sequence: CALLXPLEQK (P_gLX,FIATX)
where:
P_LX -Position ofdatablock entry within thedictionary(seeargument Lwithin
XP_LCK).
FIATX -Position ofsamedatablock entry within theFIAT.
4.9.5.7 Subroutine Name: XFILPS (Data PoolFilePositioner)
I.Entry Point: XFILPS
2.Purpose: XFILPS positions theDataPoolFiletothebeginning ofarequested data
block. (TheData PoolFile isamulti-file file).
3.Calling Sequence: CALLXFILPS (FNEW)
where:
FNEW -Thefilecount oftherequested position. Thecurrent oroldfile_osition
isstored inthe/XSFAI/common block.
4.9.6 Design Requirements
I.Opencore isused onlyforGIN9buffers (2maximum). Theopencoreorigin is
co_,_n block /ESFA/located following allSFAsubroutines.
2.SFAcommunicates data internal tothemodule subroutines viacom_n block /XSFAI/.
TheS_S,MDandextended FIATtables reside in/XSFAI/.
3.The9SCAR mustbeattheentry where allocation istobegin. Following allocation,
that initial 9SCAR position isrestored.
4.BLOCK DATA subprogram defines thelengths oftables in/XSFAI/.
4.9-7&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.9.7Diagnostic Messages
Special DMAProuting maycause thewarning 3022message tobeprinted bySFA.
Following output ofthismessage, SFAflags thedatablock asallocated (although itwill
notappear intheFIAT) andcontinues. Since SFAcannot predict conditional DMAProuting, the
data block inquestion maynotberequired andtheproblem will proceed satisfactorily. Ifthe
datablock isrequired, theproblem willterminate intherequesting module. Under these circum-
stances theDMAProuting should bestudied.
Allother error messages generated bySFAarefatal innature andindicate serious I/O
malfunctions orexecutive table overflow. Seesection 6ofUser&amp;rsquo;s Manual forlistinq and
explanation ofthese messages. XSFAmessages include numbers lOOlthrough I004, lOllthrough
lOl4, 1021, 1031through I035, 1041, andlOS1.
4.9-8&lt;/p&gt;
&lt;p&gt;EXECUTIVEMODULEXSFA(EXECUTIVESEGMENTFILEALLOCATOR)
XSFA(E.TER)
Next
Module
Next
DataBlock
Next
DataBlocLlCallXSBSGN
Call
XCLEAN _
I
LISetalloc range to
vIfirst/next module
i Passl
&lt;em&gt;Pick-up first/next data] block within module
Yes
°I
No
Pass2
Pick-up first/next
&amp;ldquo;Idatablock within moduleI
Figure l.(a) Flowchart formodule XSFA.I
Stack datablock I&lt;/em&gt;
onthesamefileF-&amp;rdquo;
I
Setdatablock I_.
asallocatedp
4.9-9&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
No
IUse empty Ifile for
data blockFindthedatablock
withthelargest
NTUnotrequired
inthismodule
Yes
Setthepooling flag
forthis data block
Usethisnowemptyfile
fornewdatablock
3
ISetnewdatablockasallocatedYes
No
YesSetARG.NEG.indicating
alloc, incomp.
Yes&lt;!-- raw HTML omitted --&gt;XPUNP
XDPH
_ RETURN _
Figure l.(b) Flowchart formodule XSFA.
4.9-10&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT)
4.10 EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT)
4.10.1 Entry Point: XCHK
4.10.2 Pur__
Tosave, ontheProblem Tape, specified datablocks along withother datanecessary
forrestarting aproblem.
4.10.3 DMAPCalling Sequence
CHKPNT DBI,DB2 &amp;hellip;..DBN$
where DBI,DB2&amp;hellip;..DBN(N_l)aredatablocks tobecopied onto theProblem Tape for
useinrestarting aproblem.
4.10.4 Method
TheProblem TapeDictionary (XPTDIC), seesection 2.4.2.3, isbrought intocorefromthe
Problem Tape, andthedatablock listintheCHKPNT _SCAR entry isscanned. Datablocks thathave
beengenerated areentered intothelocal D!CTtable (seediscussion below) along with alldata
blocks equivalenced tothem. Datablocks thatarepurged, orhavenotyetbeengenerated,
areentered inthelocal PURGE table. Thedatablocks areassigned filenumbers andare
placed intheFDICT table. Datablocks arethencopied onto theProblem Tapeaccording to
their file number unless thedatablock isequivalenced andisalready intheProblem Tape
Dictionary. Core resident datanecessary forrestart isalsowritten ontheProblem Tape as
theVPSExecutive Table. Entries fromFDICT andPURGE areentered intotheProblem Tape
Dictionary, andthenewcheckpoint entries arepunched forusersubmittal intheExecutive
Control Deck uponproblem restart. Theupdated Problem Tape Dictionary iswritten back onthe
Problem Tape, andtheProblem Tape ispositioned tothebeginning ofthelastfile (i.e., XPTDIC)
inpreparation forthenextexecution oftheCHKPNT module.
4.10.5 Subroutine
Module XCHKhasnoauxiliary subroutines.
4.10-1&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.10.6 Design Requirements
4.10.6.1 OpenCoreLayout
Namedcommon block/ESFA/ defines thestartoftheopencorearea. Theuseofopencore
isoptimized byorigining arrays GBUF,PTDICandI_BUFat/ESFA/ andcomputing theiroffset
fromtheoriginatexecution time.Thediagram belowshowshowthearrays areplaced inopen
core.
PTDIC(PTDT_P)
I_BUF(1OPNT)
GBUF(FPNT)
GBUF(DPPNT)
GBUF(NPTPNT)COMM_N /ESFA/
Problem TapeDictionary
Utility buffer
DataBlockGIN_buffer
DataPoolFileGIN_buffer
Problem TapeGIN_buffer
4.10.6.2 DataNecessary forOperation
Thedatablocks, named common blocks andfiles needed bytheCHKPNT module arelisted
below, along withtypeofaccess required (i.e. fetch and/or store data) andreasons foruse.
I.DataPoolFile-fetch datablocks tobecopied onto theProblem Tape.
2.Problem Tape-fetch andstore datablocks.
3.Executive Table XPTDIC -fetch andstore. Used togenerate newcheckpoint entries
which arethenadded toXPTDIC.
4.Common /XFIST/-store temporary entry inFISTforcopying datablocks.
5.Common/_SCENT/ -fetcb. CHKPNT_SCARentryresides here.
6.Common/XCEITB/,/XVPS/ and/SYSTEM/ -fetch. Contains datatobewritten inVPS
Executive Table.
7.Common/XFIAT/ andCommon/XDPL/ -fetch. Contains datablocknamesofdatablocks
tobecopied.
8.Common/_UTPUT/ -store. Prints outpageheading forCheckpoint Dictionary printout.
9.Common /STAPID/ -fetchandstore. UsedtowriteProblem TapeIDfileonnewreelof
oftheProblem Tapewhenanendofreelisencountered.
4.10-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMX)DULE CHKPNT (CHECKPOINT)
4.10.6.3 Formats ofLocal Arrays
I.DICTtable
Thepurpose oftheDICTtable istoholdpreliminary datatobeused ingenerating the
FDICT table.
Sample DICTentry:
Word Item
1,2 DBNWord l
2
3
_J31|30129 171G
Description
BCDname (8characters, 2words) ofthedatablock whose status is
generated andistobecheckpointed.
3 EQ Equivalence flag. EQ=lindicates alldatablocks equivalenced to
tKisdatablock alsoreside inDICT table.
FA Filenumber assigned flag. FA=lindicates thatanFDICT entry has
beengenerated forthisDBNandthatafile number ofwhere thedatablock
will reside ontheProblem Tapehasbeenassigned.
DP Datapoolflag. DP=lindicates thatthedatablock isontheDataPool
File.
FP Varies according toDPflag. ForDP=l,FPisnotused. ForDP=O,
FPisapointer totheFIATentry containing DBNorequivalenced DBN.
ID Varies according toDPflag. ForDP=l,IDisthefilenumber where
thedatablock resides ontheData PoolFile. ForDP=O,IDisthefile
(unit) identifier. FortheIBM7094, IDistheunitcontrol block pointer
forthefile. Formachines using theFBRTRAN GINB, IDistheFBRTRAN
logical unitnun#_er assigned tothefile.
2.FDICT table
Thepurpose oftheFDICT table istoholdfinal data tobeused ingenerating XPTDIC entries
fordatablocks whose status isgenerated.
4.10-3&lt;/p&gt;
&lt;p&gt;Sample FDICT entry:
WordMODULE FUNCTIONAL DESCRIPTIONS
&amp;ndash; DBN &amp;hellip;..I
Word Item
1,2 DBN
EQ
ET
ER
3 R,FDescription
BCDnameofdatablock.
Equivalence flag. EQ=lindicates alldatablocks equivalenced to
thisdatablock alsoreside intheFDICT table.
End-of-tape flag. ET=lindicates thatthedatablock issplit
across tworeels ofProblem Tape.
End-of-logical-record flag. ER=lindicates thatthecomplete
logical record waswritten outprior tochanging reels when ET=I.
Reel number andfile number where thedatablock will bewritten on
theProblem Tape.
4.10.6.4 Restrictions
XPTDIC cannot bewritten across tworeels ofProblem Tape (i.e. afatal error occurs if
anend-of-tape isencountered while writing XPTDIC).
4.10.7 Diagnostic Messages
SeeDiagnostic Message section ofUser&amp;rsquo;s Manual (section 6.2) foradetailed discussion of
CHKPNT module diagnostic messages. XCHKmessages include numbers llOlthrough If09.
4.10-4&lt;/p&gt;
&lt;p&gt;EXECUTIVEDMAPINSTRUCTION REPT(REPEATAGROUPOFDMAPINSTRUCTIONS)
4.11EXECUTIVEDMAPINSTRUCTION REPT(REPEATAGROUPOFDMAPINSTRUCTIONS)
4.11.1Entry Point: XCEI
TheXCEImodule executes theDMAP control instructions: REPT, EXIT, C_NDandJUMP.
4.11.2 Purpose
Torepeat agroup ofDMAPinstructions aspecified number oftimes.
4.11.3 DMAPCallin 9Sequence
REPT n,c$
where:
I.nisaBCDnameappearing inaLABEL instruction which specifies thelocation ofthe
beginning ofthegroup ofDMAPinstructions toberepeated.
2.cisaninteger constant which specifies thenumber oftimes torepeat the
instructi ons.
4.!1.4
BEGIN $
LABEL Ll$
M(_DULEI A/B/V,Y,PI $
M_DULE&amp;rsquo;N B/C/V,Y,PN $
REPT LI,3$
END$
4.11-1&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
TheDMAPinstructions fromMODULE1 toM_DULEN willberepeated 3times. NotethatREPT
isplaced attheendofthegroupofinstructions toberepeated.
4.11.5 Method
Executive TableCEITBL innamedcommon block/XCEITB/ (seesection 2.4forformat) is
searched fortheREPTentryandtheentry isupdated afterdetermining whether ornottorepeat
theloopagain. Iftheloopisnottoberepeated, areturn ismadetothecalling routine. If
arepeat oftheloopistobeexecuted, theProblem TapeDictionary (XPTDIC) isreadintocore
fromtheProblem Tape,anddictionary entries created inside thelooparedeleted. Theupdated
XPTDIC iswritten backontheProblem Tape. Datablocks thatarereferenced onlyinside theloop
andwhichhavenotbeendeclared savedinaFILEDMAPinstruction havetheirstatus changed to
not-generated (i.e.datablocktrailers within FIATarecleared andifthedatablocknameappears
intheDPLitisremoved). The_SCARontheDataPoolTapeispositioned tothetopofloopand
areturn ismadetothecalling routine.
4.11.6 Subroutine
4.11.6.1 Subroutine Name: XCEI.
I.EntryPoint: XCEI
2.Purpose: Toexecute DMAPControl modules REPT,JUMP,C_ND,andEXITasdescribed
intherespective Executive DMAPModule Descriptions inthissection andinsections 4.12,
4.13and4.14.
3.Calling Sequence:
CALLXCEI
4.11.7 Design Requrements
4.11.7.1 OpenCoreLayout
NamedcomRon block/ESFA/ defines thestartoftheopencorearea.
diagram showsthelayout.
COMMON/ESFA/
DataPoolFileGIN_buffer area.
Problem TapeGIN_buffer area.
Problem TapeDictionary (XPTDIC).Thefollowing
4.11-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPINSTRUCTION REPT(REPEAT AGROUP OFDMAP INSTRUCTIONS)
4.11.7.2 DataNecessary ForOperation
Thetables, named common blocks andfiles needed bythecontrol modules arelisted
below, along withtypeofaccess required (i.e. fetch and/or store data) andreasons foruse.
I.DataPoolFile-XCEImust re-position theBSCAR tothecorrect entry when a
transfer istobeexecuted.
2.Problem Tape-fetch andstore theProblem TapeDictionary when looping.
3.DataBlock XPTDIC -fetch andstore. TheProblem TapeDictionary mustbeupdated
when looping.
4.C_MI_N /XVPS/-fetch.
/XVPS/contains theC_NDinstruction parameter value.
5.C_V_N /XCEITB/-fetch andstore.
/XCEITB/contains control parameters forREPTandEXIT instructions.
6.C_Vt4_N /_SCENT/-fetch.
/_SCENT/contains theControl Module _SCAR entry.
7.C_4_N /XFIAT/-fetch andstore.
Mustbeupdated when looping.
8.C_V_N /XDPL/-fetch andstore.
Mustbeupdated when looping.
4.11-3&lt;/p&gt;
&lt;p&gt;EXECUTIVEDMAPINSTRUCTION JUMP(UNCONDITIONAL DMAPTRANSFER)
4.12EXECUTIVEDMAPINSTRUCTION JUMP(UNCONDITIONAL DMAPTRANSFER)
4.12.1Entry Point: XCEI
4.12.2 Pur__
Toalter thenormal order ofexecution ofDMAPmodules byunconditionally transferring
program control toaspecified location intheDMAP program.
Thenormal order ofexecution ofDMAPmodules isthesequential order ofoccurrence of
themodules asDMAPinstructions intheD_Pprogram.
4.12.3 DMAPCalling Sequence
JUMP n$
where nisaBCDnameappearing onaLABEL instruction which specifies where control istobe
transferred.
4.12.4 Method
Ifcontrol isbeing transferred toaprevious DMAPmodule inthe_SCAR (i.e., looping),
theProblem TapeDictionary isreadintocorefromtheProblem Tapeanddictionary entries
created inside thelooparedeleted. Theupdated Problem TapeDictionary iswritten backouton
theProblem Tape. Datablocks that arereferenced only inside theloopandwhich have not
beendeclared saved inaFILEDMAP instruction have their status changed tonot-generated.
The_SCAR ispositioned tothespecified location. Table CEITBL innamed common block /XCEITB/
issearched forREPTentries andtheloopcount iszeroed ifthejump istransferring control
from inside thelooptooutside theloop. Areturn isthenmadetothecalling program.
Ifcontrol isbeing transferred toasubsequent DMAPmodule inthe_SCAR, theBSCAR is
positioned tothespecified location andareturn ismade tothecalling program.
Seedescription oftheExecutive DMAPinstruction REPT (seesection 4.11) forfurther details.
4.12-I&lt;/p&gt;
&lt;p&gt;4.13
4.13.1
4.13.2EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER)
EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER)
Entry Point: XCEI
Toalter thenormal order ofexecution ofDMAPmodules byconditionally transferring
program control toaspecified location intheDMAP program.
4.13.3 DMAPCallin 9Sequence
C_ND n,V$
where:
I.nisaBCDnameappearing onaLABEL instruction which sDecifies where control istobe
transferred.
2.VisaBCDnameofavariable parameter whose value indicates whether ornottoexecute
thetransfer. IfV&amp;lt;O,thetransfer isexecuted.
4.13.4
BEGIN $
C_ND LI,K$
M_DULEI A/B/V,Y,PI $
LABEL Ll$
M@DULEN X/Y/$
END$
IfK_O,M_DULEI isexecuted.
executed.IfK&amp;lt;0control istransferred toL1andM_DULEN is
4.13-I&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.13.5Method
TheparametervaluefortheC_NDinstruction isexamined. Ifthevalueisgreater
thanorequaltozero,areturnismadetothecallingroutine.Ifthevalueislessthan
zero,theCONDinstruction isexecutedexactlyliketheJUMPinstruction. Seedescription
oftheExecutiveDMAPinstruction JUMP(section4.12)forfurtherdetails.
4.13-2&lt;/p&gt;
&lt;p&gt;EXECUTIVEDMAPINSTRUCTION EXIT(TERMINATE DMAPPROGRAM)
4.14EXECUTIVEDMAPINSTRUCTION EXIT(TERMINATE DMAPPROGRAM)
4.14.1Entry Point: XCEI
4.14.2Purpose
Toterminate aNASTRAN job.
4.14.3 DMAPCalling Sequence
EXIT c$
where cisaninteger constant which specifies thenumber oftimes theinstruction isto
beignored before terminating theprogram. Ifc=0thecalling sequence maybeshortened
toEXIT$.
4.14.4
BEGIN $
LABEL Ll$
M_DULEI A/B/V,Y,PI $
EXIT3$
REPT LI,3$
END$
TheEXIT instruction will beexecuted thethird timetheloopisrepeated (i.e., the
instructions within theloopwill beexecuted fourtimes).
4.14-I&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.14.5Method
Adetermination ismadewhetherornottoterminatethejobbyexaminingtheloopcountcf
theEXITentryinnamedcommonblock/XCEITB/.Ifthejobistobeterminated, routine PEXIT
iscalled; ifnot,theloopcount intheEXIT entry isincremented, andareturn ismadetothe
calling program.
Seedescription oftheExecutive DMAPinstruction REPT(section 4.11) forfurther details.
4.14-2&lt;/p&gt;
&lt;p&gt;EXECUTIVEDMAPMODULESAVE(SAVEVARIABLEPARAMETERVALUES)
4.15EXECUTIVEDMAPMODULESAVE(SAVEVARIABLEPARAMETERVALUES)
4.15.1Entry Point: XSAVE
4.15.2
Tospecify whichvariable parameter valuesaretobesavedfromthepreceding functional
module forusebysubsequent modules.
4.15.3 DMAP Calling Sequence
SAVE VI,V2 &amp;hellip;..VN$
where VI,V2 &amp;hellip;..VN(N_l)aretheBCDnames ofsomeorallofthevariable parameters which
appear intheimmediately preceding functional module DMAPinstruction. ASAVEDMAPinstruction
mustimediately follow thefunctional module instruction wherein theparameters being saved
aregenerated.
4.15.4 Method
Thespecified parameter values aretransferred fromblank common totheVPSExecutive
Table located innamed common block /XVPS/.Seedescription ofthe_SCAR insection 2.4.2.1
fortheformat ofaSAVE_SCAR entry.
4.15.5 Subroutine
TheXSAVE module hasnoauxiliary subroutines
4.15.6 Design Requirements
SAVE mustaccess blank common andnamed common blocks /XVPS/and/_SCENT/.
4.15-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P38</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_038/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVEDMAPMODULEPURGE(EXPLICITDATABLOCKPURGE)
4.16EXECUTIVEDMAPMODULEPURGE(EXPLICITDATABLOCKPURGE)
4.16.1Entry Point: XPURGE
4.16.2 Pur__
Toflagadatablock sothatitwill notbeallocated toaphysical file andsothat
modules attempting toaccess itwill besignaled.
4.16.3 DMAPCalling Sequence
PURGE DBNIA,DBN2A,D3N3A/PARMA/DBNIB,DBN2B/PARMB $
Note: Thenumber ofdatablock names (DBNi_) prior toeachparameter (PARMa) andthe
number ofsetsofdata block names andparameters inaparticular calling
sequence isvariable.
4.16.4 Input DataBlocks
DBNIA,DBN2A, etc. -Anydatablock names appearing within theDMAPsequence.
4.16.5 Output DataBlocks
(None specified orpermitted)
4.16.6 Parameters
PARMA, etc.-Onerequired foreachdatablock nameorsetofnames.
4.16.7 Method
4.16.7.1 Summary
Thedatablocks (within theDMAP calling sequence) arepurged ifthevalue oftheasso-
ciated parameter is&amp;lt;O.Ifthedatablocks arealready purged andtheparameter value is&amp;gt;O,m
thepurged datablocks areunpurged sothattheymaybesubsequently reallocated. Ifthedata
blocks arenotpurged andiftheparameter value is_0, noaction istaken.
4.16-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.16.7.2 Functional Flow
PURGEoperates bymodifying entries within theFIAT(FileAllocation Table) andDPL
(DataPoolDictionary). TheFIATcontains anuppersection (unique part)andalowersection
(tailpart). Bothpartscontain entries structured asdescribed intheExecutive Table
description fortheFIAT,section 2.4.1.2. Thelength oftheunique partisdefined bytheunique
filesavailable countintheFIATheader. Thetailpartisdefined astheremainder ofthe
FIAT. Theunique partcontains oneentryforeachunique (separate) fileavailable forallo-
cation, andthefileID&amp;rsquo;swithin theseentries arenotmodified through aNASTRAN run.The
tailpartcontains entries forstacked files (seedescription forExecutive ModuleXSFA, section 4.9).
purged files, andmembers ofequivalenced sets. Anentrywithin theFIATispurged byflagging
(setting allbitson)itsfileID.Therefore, ifadatablockwithin theunique partisto
bepurged, itsnameismoved tothetail. Adatablockentrywithin DPLispurged byremoving
itsentryfromtheDPL.Adatablockwhich isalready purged isunpurged byremoving theflagged
entryfromtheFIATsothatitmaybesubsequently allocated toaphysical file. Figure 1
illustrates thelogicflow.
4.16.8 Design Requirements
I.Noopencoreisrequired bythismodule.
2.The_SCARrecord containing theDMAPpurgerequest mustreside inthelabeled
common block/_SCENT/.
3.Thevalidity ofalldatablock namesandcontrolling parameters ischecked during
NASTRAN initialization bymodule XGPI.
4.16.9 Diagnostic Messaqes
PURGEmayproduce thefollowing System Fatalmessages:
1201,FIAT_VERFL_W
1202,DPL_VERFLOW
Bothofthesemessages indicate thattheassembled sizeoftheparticular tablehas
beenexceeded. Although itisunlikely thateither message willoccur, astudy ofthe
erroneous problem&amp;rsquo;s operation alongwithdiaqnostic prints oftheFIATandDPL,obtained
viatheDIAGExecutive Control card(seeUser&amp;rsquo;s Manual, section 2),should indicate some
4.16-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE PURGE(EXPLICIT DATABLOCKPURGE)
corrective action. Possible corrective actions include: increasing thebasic table size
through re-assembly; providing more physical files totheNASTRAN system; andaltering the
DMAPoperations.
4.16-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
PURGE
!
Pick-up datablockI
namefrompurge
entryin_SCAR
ISearch totalFIATfordata
block name
No
Unique
Yes
Setpurge
flagon
[RnemOv_rdOat_hbel _LIClear datablock Inamefrom unique
partofFIAT
w __ v
I Unpurge(Remove data block
namefromFIAT)
YesYes
,No
Create a
purged entry
forthedata
block inthe
FIATtail
Goback toENTER
Figure loFlowchart formodule PURGE.
4.16-4&lt;/p&gt;
&lt;p&gt;4.17EXECUTIVE DMAPMODULE EQUIV (DATABLOCK NAMEEQUIVALENCE)
EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE)
I
4.17.1 Entry Point: XEQUIV
4.17.2 Purpose
Toattach oneormoreequivalent (alias)datablock namestoanexisting datablock sothat
module accesses todatabyequivalenced names willbeidentical.
4.17.3 DMAPCalling Sequence
EQUIV DBNIA,DBN2A,DBN3A/PARMA/DBNIB,DBN2B/PARMB $
Not___e: Thenumber ofdatablock names (DBNi_) prior toeachparameter (PARMa) andthe
number ofsetsofdatablock names andparameters inaparticular calling sequenceare
variable.
4.17.4 Input DataBlocks
DBNIA,DBN2A, etc.-Anydatablock names appearing within theDMAPsequence. TheIst
datablock nameineachseries (DBNIA andDBNIB) isprimary andthe2nd,etc.datablock
names become equivalent totheprimary.
4.17.5 Output DataBlocks
(None specified orpermitted)
4.17.6 Parameters
PARMA, etc. -Onerequired foreachsetofdatablock names.
4.17.7 Method
4.17.7.1 Summary
Thedata block names aremadeequivalent ifthevalue oftheassociated parameter is&amp;lt;O.
Ifasetofdata blocks isalready equivalenced andtheparameter value is_O,theequivalence
isbroken andthedatablock names again become unique. Ifthedatablocks arenotequivalenced
andiftheparameter value is_O,noaction istaken.
4.17-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.17.7.2 Functional Flow
EQUIVoperates bymodifying entries within theFIAT(FileAllocation Table) andDPL(Data
PoolDictionary). TheFIATcontains anuppersection (unique part)andalowersection (tail
part). Bothpartscontain entries structured asdescribed intheExecutive Tabledescription
fortheFIAT,section 2.4.Thelength oftheunique partisdefined bytheunique files
available countintheFIATheader. Thetailpartisdefined astheremainder oftheFIAT.
Theunique partcontains oneentryforeachunique (separate) fileavailable forallocation
andthefileID&amp;rsquo;swithin theseentries arenotmodified through aNASTRAN run.Thetailpart
contains entries forstacked files (seedescription forExecutive TableXSFA), purged filesand
members ofequivalenced sets. Entries within theFIATandDPLaremadeequivalent bysetting
theirEQUIVflags(signbitwithin anentry) andmaking theirfileID&amp;rsquo;sidentical. Sinceadata
blockwithin theunique partoftheFIATmusthaveaunique fileID,onlyonemember ofanequiva-
lencesetmayreside within theunique section, allothers willbeplaced intheFIATtail. Thus,
ift_oGatablocks occupying unique physical filesareequivalenced, onewillbemovedtothe
FIATtail. Datablocks previously equivalenced areunequivalenced (broken) byremoving the
EQUIVflagsandthesecondary entries. Whentwoormoredatablocks areequivalenced, thefirst
datablockofthesetisconsidered theprimary datablock. Allothers areconsidered secondary.
Thefilecontaining theprimary datablockislogically attached toalldatablocks intheset:
primary andsecondary. Dataonfilesattached tosecondary datablocks priortoequivalencin_
islostuponequivalence. Iftheprimary datablockispurged, thesecondary(s) willbepurged.
Figure 1illustrates thelogicflow.
4.17.8 Design Requirements
I.Noopencoreisrequired bythemodule.
2.TheOSCARrecord containing theDMAPEQUIVrequest mustreside inthelabeled
common block/_SCENT/.
3.Thevalidity ofalldatablocknamesandcontrolling parameters ischecked during
NASTRAN initialization byXGPI.
4.XEQUIV isanentrypointinXPURGE.
4.17-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE)
4.17.9 Diagnostic Messages
EQUIVmayproduce thefollowing System FatalMessages:
1201FIAT_VERFL@W
1202DPLQrVERFL_
Bothofthesemessages indicate thattheassembled sizeoftheparticular tablehasbeen
exceeded. Although itisunlikely thateithermessage willoccur,astudyoftheerroneous
problem&amp;rsquo;s operation alongwithdiagnostic printsoftheFIATandDPLobtained, viatheDIAG
Executive Control card(seeUser&amp;rsquo;sManual, section 2),should indicate somecorrective action.
Possible corrective actions include: increasing thebasictablesizethrough re-assembly;
providing morephysical files totheNASTRAN system; andaltering theDMAPoperations.
4.17-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
ENTER _EQUIV
Pick-Up Data Block
Name from EQUIV
Entry inOSCAR
Search Total FIAT
forData Block Name
Was
Block Name
inFIAT?No
lOCk Primar
ondary
PrimarySecondary
No Prim, &amp;lsquo;y
Data B1ock
Yes
SetLogic to
PURGE forAll
Data Blocks
inthis SetParameter
Value _O?
No
ockPrimary
orSecon-
Name
ntheDPL
Yes
SetPrimary
Data E!lock
EQUIV Flag
inDPLPrimary
JataBlock ir
No
Figure 1.(a)Flowchart forEQUIVmodule
4.17-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE)
PISetPrimaryDataBlock EQUIV Flag
inFIAT
&amp;lsquo;r
&lt;em&gt;lock Namein&lt;/em&gt;
Block EQUIV Flag
I inDPL
L
No
Clear Stacked
DataBlock Names
fromFIAT_No &lt;em&gt;F-&lt;/em&gt;
Unequivalence
(Clear Secondary
DataBlock from
FIAT)
No
ClearfromDataDPLBlock)
I
D Figure I.(b)Flowchart forEQUIV module
4.17-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
IClearDataBlockINamefromUnique
PartofFIAT
AddSecondary
DataBlockEntry
inFIATTailiEquivalence ITail Secondary DataI
BlocktoPrimaryJ
_n Block
DPLNo
&amp;lt;_BIockName
Yesilo _IRemove Secondary IDataBlock NameI
Primary &amp;amp;
Secondary Data
BlockinDPLOccu
SameFile?Yes
No
Clear Secondary
Data Block Name
from DPLes
IAddSecondary
IDataBolOD_kLName
Figure I.(c)Flowchart forEQUIV module
4.17-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAP INSTRUCTION END(ENDOFDMAPPROGRAM)
4.18 EXECUTIVE DMAP INSTRUCTION END(ENDOFDMAPPROGRAM)
4.18.1 Entry Point: XCEI
TheXCEImodule executes theDMAPcontrol instructions: REPT, EXIT, COND, andJUMP.
4.18.2 Pur_se
Todenote theendofaDMAPprogram. ThisDMAP instruction performs afunction
similar toanENDstatement inaFORTRAN compilation, i.e., tosignal theendofthe
source program.
4.18.3 DMAPCallinq Sequence
END $
Note: AnENDDMAPinstruction isoperationally equivalent toanEXIT0$orEXIT$
DMAPinstruction.
4.18.4 Method
TheENDinstruction istranslated during aDMAPprogram compilation inmodule XGPI
intoanEXIT $instruction. (seesection 4.14).
4.18-1&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR)
4.19 EXECUTIVE DMAPMODULE PARAM (PARAI_TER PROCESSOR)
4.19.1 Entry Point: QPAF_M
4.19.2 _
Toperform specified arithmetic andlogical operationsonD_Pparameters.
4.19.3 DMAPCalling Sequence
PARAM //C,N,_P/V,N,_UT/V,N,INI/V,N,IN2 $
where thefollowing operations (_P)areavailable:
AND
_RCUT
-l
+l
+l
+l
-l
-I
-I
+lIN1
&amp;lt;0
&amp;lt;0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0
0
&amp;lt;0
&amp;lt;0
0
20IN2
&amp;lt;0
0
&amp;lt;0
20
&amp;lt;0
&amp;ndash;&amp;gt;0
&amp;lt;0
-&amp;gt;0
ADD INI+IN2
SUB INI-IN2
iMPY INI*IN2
DIV
N¢T
IKPL
NgP&amp;lt;0
&amp;lt;0
-0
_0iINI/IN2
-INl
-I
+I
-I
-!
_UT&amp;lt;0
0
0
_&amp;gt;CInteger Arithmeti c
4.19-I&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Notes:
I.
2.
4.19.4*not used.
PARAM does itsovenSAVE; therefore, aDMAP SAVE instruction isnotneeded
following themodule.
3.PARAM hasnoinput oroutput data blocks.
Examples
1.PARAM //C,N,NOP/V,N,PI=5
andsavesitintheVPS.$-this example sets thevalue ofparameter P1to5
2.PARAM //C,N,NOT/V,N,XYZ/V,N,NOXYZ $thisexample changes thesenseof
parameter N_XYZwhich maybeuseful fortheCONDorEQUIVinstructions. Alternatively,
XY2couldhavebeensetinthefollowing way:
PARAM //C,N,MPY/V,N,XYZ/V,N,NOXYZ/C,N,-I $
4.19.5 Method
QPARAM performs theindicated parameter operation andstores theresult intheVPS
(/XVPS/).
4.19.6 Diagnostic Messages
_PERATION C_DE N_TDEFINED F_RMODULE PARAM, EXECUTION TERMINATED.
Thelisted operation codewasnotrecognized byPARAM.
4.19-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE DMAPMODULE SETVAL (SETVALUES)
4.20 EXECUTIVE DMAPMODULE SETVAL (SETVALUES)
4.20.I Entry Point: SETVAL
4.20.2 Purpose
Toset{)MAPparameters equaltootherDMAPparameters ortoconstants.
4.20.3 DMAPCallin9Sequence
SETVAL //V,N,XI/V,N,YI/V,N,X2/V,N,Y2/V,N,X3/V,N,Y3/V,N,X4/V,N,Y4/V,N,X5/V,N,Y5 $
4.20.4 InputDataBlocks
None.
4.20.5 OutPut DataBlocks
None.
4.20.6 Parameters
X|,X2,X3,X4,X5-Output-integers-no default values.
Yl,Y2,Y3,Y4,Y5-Input-integers-default values =-l.
4.20.7 Method
Thismodule does nothing except setXl=YI,X2=Y2,X3=Y3,X4=Y4,andX5=Y5.
Onlytwoparameters needbespecified inthecalling sequence (XlandYl).
4.20.8 Subroutines
SETVAL hasnoauxiliary subroutines.
4.20.9 Design Requirements
SETVAL should reside intherootsegment inalllinks.
4.20.I0 Diagnostic Messages
None.
4.20-I&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGPI(GEOMETRYPROCESSOR-PHASEl)
4.21FUNCTIONAL MODULEGPI(GEOMETRYPROCESSOR-PHASEI)
4.21.1Entry Point:
4.21.2 PurposeGPI.
GPIperforms basic geometry processing forthemodel. Alistofallgridandscalar points
isassembled andplaced ininternal order. Coordinate system transformation matrices arecomputed,
andallgridpoints aretransformed tothebasic coordinate system.
4.21.3 D_PCallinq Sequence
GPI GEgMI,GEOM2/GPL,EQEXIN,GPDT,CSTM,BGPDT,SIL/V,N,LUSET/V,N,NgCSTM/V,N,N_GPDT $
4.21.4 Input DataBlocks
GEgMI -Gridpoint, coordinate system, sequence data.
GEOM2 -Element connection data.
4.21.5 Output DataBlocks
GPL -GridPoint List.
EQEXIN -Equivalence between external gridorscalar numbers andinternal numbers.
GPDT -GridPoint Definition Table.
CSTM -Coordinate System Transformation Matrices.
BGPDT -Basic GridPoint Definition Table.
SIL -Scalar Index List.
Note: Nooutput datablock maybepurged.
4o21.6 Parameters
LUSET -Output, integer, nodefault. Total degrees offreedom inthegdisplacement set.
NgCSTM -Output, integer, nodefault. Number ofcoordinate systems defined intheBulkData
Deck, -lifnocoordinate systems defined.
NOGPDT -Output, integer, nodefault. -lifnoaridorscalar Doints defined inBulk Data
Deck, +lotherwise.
4.21-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.21.7 Method
4.21.7.1 Construction oftheGPLandFirst Logical Record oftheEQEXIN.
TheSPOINT cards andthescalar element cards (CELASi, CDAMPi, CMASSi, i=1,2,3,4) are
read from GEOM2, andalist ismade ofallreferenced scalar points. TheGRID cards areread from
GEOMI, andamerged list ofallgrid andscalar points isconstructed andwritten onSCRI, a
scratch file. Thelist isexpanded topairs ofnumbers. Thefirst number istheidentification
number, ID,thesecond istheresequenced number which isgiven ontheSEQGP cards orislO00*ID
ifnotgiven onSEQGP cards. Thepaired list issorted bySORT onthesequence numbers. The
resulting setoffirst numbers iswritten asthefirst logical record intheGPL(Grid Point List).
These arethepoint identification numbers inorder oftheir sequence numbers. Thesequenced
paired list iswritten asthesecond logical record oftheGPLdata block. Thesecond numbers in
thesequenced paired list arereplaced bytheindices l,2,3,&amp;hellip;, accordinq toposition. The
list issorted again, this time using thefirst number ofeach pair (the identification number).
Theresulting paired list isthefirst logical record oftheEQEXIN data block which isused to
convert external numbers, given bythefirst number ofapair, totheinternal grid point indices,
given bythesecond number inthepair.
4.21.7.2 Formats ofGPDT, BGPDT andCSTM.
Thegeometry data blocks aretheGPDT, theBGPDT andtheCSTM. Their formats, although
described insection 2.3.3, arerepeated here since thefollowing terms will bereferenced inthe
discussion below ontheconstruction oftheCSTM.
GPDT -There isoneentry foreach grid orscalar point. Theorder oftheentries
isbytheinternal (sequenced) order. Each entry contains:
I.Internal sequence number.
2.Locating coordinate system ID.
3.x,y,z forarectangular system.
4.r,8,z foracylindrical system.
5.p,8,_ foraspherical system.
6.Global coordinate local coordinate system ID.
7.Permanent single-point constraint coordinate (l=x,2=y,etc.).
4.21-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)
Forscalar points, word 2=-landwords 3through 7arezero. Thedataisessentially
aduplicate oftheGRIDbulkdatacardexcept thattheidentification number isrenlaced by
theinternal sequence number.
BGPDT -Contains oneentry foreachgridorscalar point. Thecontents are:
I.Local coordinate system IDforglobal coordinate definition.
2.xi)Locations ofpoint
3.Yilinbasic coordinate
4.zisystem.
CSTM- TheCSTMcontains oneentry foreachlocal coordinate system. Theorder isby
coordinate system identification numbers. Eachentry contains 14words:
Word Item
l N-thecoordinate system ID.
2
3-5
6-14
4.21.7.3TypeN-thecoordinate system type(rectangular, cylindrical or
spherical}.
{RoN} -thelocation ofthesystem origin inbasic coordinates.
[ToN]-thethree-by-three matrix defining theorientation ofthe
coordinate system principal axes.
Construction oftheGPDT.
TheGPDTdatablock isformed incoresized groups. Thegridandscalar dataarereadone
entry atatimefromSCRI. EQEXIN (incore) issearched tofindtheinternal nu_er, andthegrid
dataarestored (ifpossible) intheinternal position allocated incore. Ifcorewill nothold
theGPDT, thedataarewritten onSCR2, andS_RTiscalled tosort andwrite thedataontheGPDT.
4.21.7.4 Construction oftheCSTM.
Sixteen words arealloted foreachlocal coordinate system, andfivewords arealloted for
eachreferenced grid point. TheC_RDij dataisread fromGE_MI andstored incore. External
point ID&amp;rsquo;sonC_RDij cards arereplaced withinternal numbers. AC_RDIj cardreferences three
grid points. Itmaybeconverted toaCSTMentry ifthese gridpoints have their locations
reduced tobasic coordinates. AC@RD2j cardreferences another local coordinate system. Itmay
4.21-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
beconverted toaCSTMentryifthatreferenced system hasbeenreduced toaCSTMentry. The
basic logicistomakerepeated passes overthecoordinate system data,eachtimereducing oneor
morecoordinate systems and,whenpossible, converting referenced gridpoints tobasicsystem
location.
AC_RDIj cardimagereferences threegridpoints -a,bandc.Ifthelocations ofthese
points inbasiccoordinates arethevectors {Ra},{Rb},{Rc},thesolution forcoordinate system
Nis
{RoN}={Ra}, (I)
{Vk}={Rb}&lt;em&gt;{Ra}, (2)
{Vi}={Rc}&lt;/em&gt;{Ra}, (3)
{Vk}
{k}:T&amp;rsquo;_ (unit&amp;quot;z&amp;quot;vector), (4)
{k}x{Vi}
{Jl= (unit&amp;quot;y&amp;quot;vector), (5)
l{k}x{Vi}l
{i}={j}x{k}(unit&amp;quot;x&amp;quot;vector). (6)
Pointaistheorigin, pointbliesonthez(orpolar) axis, pointcliesinthex-zplane
(e=0or@=0).Thethree-by-three matrix [TN]isdefined as:
m
i
[TN]:2
13Jlkl
J2 k2
J3k3
N,typeN,{RoN}and[TN]formtheCSTMentryforthecoordinate system.(7)
4.21-4&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGPI(GEOF_TRYPROCESSOR-PHASEl)
AGRiDpoint(j)referenced tocoordinate system(N)maybereducedtobasiccoordinates
(Xo&amp;rsquo;Yo&amp;quot;Zo)bytheequations:
I.IftypeN=Rectangular (R), Xj,YjandZjaregiven by
Ix°ll::IYo={RoN} +[TN] &amp;quot; (8)
Zo (zj)
2.IftypeN=Cylindrical (C), r,eandZaregiven by
Xj=rcose, (9)
Yj=rsine, (lO)
z.=z. (11)3
Xo&amp;rsquo;YoandZoarecalculated asinEquation 8.
3.IftypeN=Spherical (S),p,Band¢aregivenby
Xj=psinBcos$, (12)
Yj:psin8sin$, (13)
Zj:pcosB. (14)
Xo&amp;rsquo;YoandZoarecalculated asabove.
Whenthebasic location ofagridpointhasbeencalculated, theentryinthelistischanged such
thatthereference coordinate system (entry No.2)iszeroandthethreevalues areXo,Yo&amp;rsquo;Zo&amp;quot;
4.21-5&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
TheC_RD2jcardimagereferences anothercoordinate systemanddefinesthreepointsinthe
referenced system:a,bandc.IfsystemnumberNisdefinedbysystemnumberM,thesolutionis
I.IftypeM=rectangular, thenumbersdefiningthethreebointsarethevectors:
{a},{b},and{c},
2.IftypeM=cylindrical, thenumbersarer,8andz.Theequationstoconvertthese
torectangular vectorsare
a2
a3Iracos8a1rasin0a
Za:{a}. (15)
The{b}and{c}vectors arecalculated similarly.
3.IftypeM=spherical, thenumbers givenforthepoints arep,8,andqb.
lal! laPsin_c°sq_Ia2=apsinesin ={a}
a3 apcos
andsimilarly forpoints bandc.
4.Thedefinition ofthenewsystem isthatpointaistheorigin, pointblieson
thez(orpolar) axisandpointcliesinthex-z(ore=O)plane.
theCSTMdataare
{RoN} ={RoM}+[TON]{a}.Wecalcul ate
(16)
Insystem Mthevectors defining theaxesofsystem Nare
{Vk}={b}-{a};Theequations for
{k}{vk}
:_ ,(&amp;ldquo;z&amp;quot;unitvector);
{Vi}={c}-{a};(17)
(18)
(19)
(20)
4.21-6&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P39</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_039/</guid>
      <description>
        
        
        &lt;p&gt;FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)
{j}{k}x{Vi}
l{k}x{Vi}I&amp;rsquo;(&amp;ldquo;Y&amp;quot;unitvector);(21)
{i}={j}x{k},(&amp;ldquo;X&amp;quot;unitvector).
Theorientation oftheaxes isdefined bythematrix
JlkI[TON] =[TOM] i2 J2 k2&amp;rdquo;
J3 k(22)
(23)
5.OneachpassoftheC_RDij dataatleast onenewsystem mustbeconverted. After
eachpassthereferenced GRIDdataischecked andconverted. Theresulting C_RDij data
will betheCSTMdatablock witheachentry reduced from16to14words.
4.21.7.5 Construction oftheBGPDT, theSILandtheSecond Logical Record ofthe_QEXIN.
TheBGPDT andtheSILdatablocks areformed simultaneously. TheSILdatablock issimely
alistofthefirst scalar index foreachgridorscalar Doint. Agrid point hassixscalar
indices (ordegrees offreedom), andascalar point hasonescalar index. Every degree offreedom
intheproblem hasascalar index, butsince thesixdegrees offreedom foragridpoint arecon-
secutive, onlythefirst oneislisted.
TheGPDTdataarereadapoint atatime. Thebasic location coordinates ofthepoint are
formed using Equation 8through Equation 14andthese dataarewritten ontheBGPDT file. TheSIL
value forthenextpoint iscalculated byincrementing thelastvalue bysix(grid point) orby
one(scalar point).
Atest ismadeonthevalue ofthedisplacement coordinate system (field 6)intheGPDTdata.
Ifthisvalue istheinteger, -l,thepoint isaspecial RINGFL, GRIDF, orGRIDS fluid point. It
isgiven onescalar index, thedisplacement coordinate system isbasic (0),anditslocation
coordinates intheBGPDT datablock arecalculated likeanormal gridpoint.
Finally thesecond logical record ofEQEXIN iswritten. Thisrecord contains pairs ofex-
ternal numbers, lO*scalar index +typewhere type=lforagrid point, 2forascalar point.
4.21-7 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.21.8 Subroutines
GPIhasnoauxiliary subroutines.
4.21.9 Design Requirements
4.21.9.1 Allocation ofCoreStorage
During theassembly oftheGPL,spacefor2*(number ofgridpoints plusnumber ofscalar
points) plustwoGINObuffers isrequired. During theassembly oftheCSTM,corestorage is
allocated asfollows:
ICSDT
ILIST
BUFIC_MM_N/GPAI/Z(1)
External pointnumber
Internal number
Coordinate system ID
li=rectangularCoordinate system type =cylindrical
=spherical
Coordinate system definition =C_RD2j
Reference coordinate system ID
IIgllg2 la3
b1
c2
c3
Internal grid number
Defining coordinate system ID
GIN_bufferTwowords perentry
oneentrypergridor
scalar point
Sixteen words perentry
oneentry percoordinate
system
Five words perentry
oneentry foreach grid
point referenced ona
C_RDIi card.
4.21-8 (lllll70)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR-PHASE l)
Total storage requirements during thisphase, therefore, equals 2*(number ofgrid+number
ofscalar points) +16*(number ofcoordinate systems) +5*(number ofgridpoints referenced on
C_RDIj cards) +oneGIN_buffer.
4.21.9.2 Environment
OpencoreforGPIisdefinedby/GPAI/.Thetable /GPTAI/mustbeincorewhenGPIis
executed. GPIusestwoscratch files.
4.21.I0 Diagnostic Messages
Thefollowing diagnostic messages maybeissued byGPI:
2001, 2002, 2003, 2004, 2005, 2006, 2012
4.21-9&lt;/p&gt;
&lt;p&gt;4.22FUNCTIONAL MODULEGP2(GEOMETRYPROCESSOR-PHASE2)
FUNCTIONAL MODULE GP2(GEOMETRYPROCESSOR-PHASE 2)
4.22.1 Entry Point: GP2
4.22.2
GP2processes element connection dataandconverts external point numbers tointernal
numbers.
4.22.3 DMAPCalling Sequence
GP2GEgM2,EQEXIN/ECT $
4.22.4 Input DataBlocks
GERM2 -Element connection data.
EQEXIN -Equivalence between external gridorscalarnumbers andinternal numbers.
Rote: EQEXIN maynotbepurged.
4.22.5 Output DataBlocks
ECT-Element Connection Table.
Note: ECTmaynotbepurged.
4.22.6 Parameters
None
4.22.7 Method
Thefirst datarecord ofEQEXIN (containing pairsofexternal point identification and
internal index) isread intocore. GEt,M2 isopened, andtheheader record isskipped. TheECT
isopened, andtheheader record iswritten. Thefollowing process isrepeated foreach logical
record inGEgM2.
I.The3-word header isread. Ifanend-of-tile isencountered, sten (4)isexecuted. Other-
wise, /GPTAI/(seedescription insection 2.5)issearched foramatch. Iffound, step (2)
isexecuted. Ifnotfound, aninternal table, CARDS, which defines additional cards Drocessed
4.22-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
byGP2(e.g. GENEL) issearched. Ifamatch isfound, step (3)isexecuted. Otherwise,
therecord isskipped, andstep (1)isrepeated.
2.The3-word header from GEOM2 iswritten ontheECT. Parameters defining theelement are
fetched from /GPTAI/.Ifthenumber ofwords perelement isless than 5,thesort flag in
theGERM2 trainer isfetched. Each element card ofthecurrent type onGERM2 isread.
Each external grid identification isconverted toaninternal index byperforming abinary
search intheEQEXIN table. Ifthepoint isnotinthetable, anerror message isqueued
andtheNOGO flag isturned on. Ifthedata isnottobesorted, theelement iswritten
directly ontheECT. Otherwise itissaved incore (orwritten onascratch file ifcore is
full). When allelements ofagiven type have been processed, thesort flag isagain tested.
Ifoff, theECTrecord isclosed andreturn tostep (1)ismade. Otherwise, thedata are
sorted bySORT andtheECTrecord isthen written.
3.ForGENEL, SEQBFE andQDSEP data (the latter twoareForce Method only), each entry is
read, allexternal point identifications areconverted tointernal indices asin(2)andthe
entry iswritten ontheECT. When thelogical record onGERM2 isexhausted, theECTrecord
isclosed andreturn tostep (1)ismade.
4.TheECTtrailer iswritten, andallfiles areclosed. IftheNOG_ flag wasturned on,
PEXIT iscalled. Otherwise, anormal exit ismade.
4.22.8 Subroutines
Themodule GP2consists ofonesubroutine, GP2.
4.22.9 Design Requirements
4.22.9.1 Allocation ofCore Storage
GP2requires space for2*(number ofgrid points +number ofscalar points) +three GINO
buffers.
4.22.9.2 Environment
Open core isdefined by/GPA2/.Thetable /GPTAI/must beincore when _P2isexecuted.
GP2uses uptofour scratch files.
4.22-2&lt;/p&gt;
&lt;p&gt;FUNCTIOIIAL MODULE GP2(GEOMETRYPROCESSOR -PHASE 2)
4.22.10 Diagnostic Messaqes
Thefollowing diagnostic messages maybeissued byGP2:
2007, 2059, 2060, 206l, 2138.
4.22-3 (8/I/72)&lt;/p&gt;
&lt;p&gt;4.23FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR)
FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR)
4.23.1 Entry Point: DPLTST
4.23.2
Togenerate thestructural element setstobeusedbythestructural plotter
(functional module PL_T).
4.23.3 DMAP Calling Sequence
PLTSET PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/V,N,NGP/V, N,NPSET
4.23.4 Input DataBlocks
PCDB
EQEXIN
ECT
Note:
4.23.5
PLTSETX -
PLTPAR -
GPSETS
ELSETS
Note:
4.23.6 Parameters
NGP -
NPSET &amp;ndash;PlotControl DataBlock forthestructure plotter.
Equivalence between external gridorscalar numbers andinternal numbers.
Element Connection Table.
IfPCDBispurged, nothing isdoneinthismodule. However, ifPCDBisnotpurged,
neither EQEXIN norECTmaybepurged.
Output DataBlocks
User error messages related tothedefinition ofelement plotsetsforthe
structure plotter.
Plotparameters andplotcontrol table.
-Gridpoint setsrelated totheelement plotsets.
Element plotsetconnection tables.
Noneofthese datablocks maybepre-purged unless PCDBisalsopurged.
Output-integer-no default. Total number ofgridpoints.
Output-integer-default value =-l.Number ofelement plotsets (setto-lif
none).
4.23-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.23.7 Method
Eachlogical cardintheplotcontrol datablock (PCDB) isread. Ifthefirstentry ona
cardisnot&amp;quot;SET&amp;rdquo;, thecardisassumed tobeaplotparameter orcontrol cardmeaningful only
tothePLOTmodule. Inthiscase,thelogical cardiscopied ontothePLTPAR datablock.
Ifthefirstentryonacardis&amp;quot;SET&amp;quot;, itisassumed tobeadefinition ofanewelement
plotset.Aseachentryonthecardisread,itisdecided whether alistofelements (bytype,
rangeorexplicit id&amp;rsquo;s)oralistofgridpoints (byrangeorexplicit id)isbeing included or
excluded. Eachelement typewhichisspecified isinserted intoatable(TYP,I00words long).
Ifarangeofelements oranexplicit element idisspecified, itisinserted intothebeginning
ofopencore(theELarray). Andfinally, ifarangeofgridpoints oranexplicit gridpointid
isspecified, itisinserted intotheendofopencore(theGParray). Whenasethasbeen
completely specified, itiswritten outontoascratch file(MSET) inthefollowing format:
Word 1
Word2toNEL+I
Word 1
Word2toNTYP+I
Word 1
Word2toNPT+I=NEL(number ofentries intheELarray).
=theentries intheELarray.
=NTYP(number ofentries intheTYParray).
=theentries intheTYParray.
=NPT(number ofentries intheGParray).
=theentries intheGParray.
After alltheSETcardshavebeenprocessed, subroutine C_MECT iscalled tosetupa
shortened element connection table(ECTX). Foreachelement type,thetableisasfollows:
foreachelement I
ofthistypeWord1
Word2
Word3
Word4,
etc.=twocharacter BCDelement typesymbol (leftjustified)
=number ofgridpoints perelement.
=element id.
:internal gridpointnumbers ofthegridpoints connected
bythiselebient
4.23-2 (12-I-69)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPLTSET(PLOTSETDEFINITIO_ PROCESSOR)
Thistable,inconjunction withMSET,isusedbysubroutine CNSTRCtocreatetheGPSETSand
ELSETSdatablocks.TheELSETSdatablockissimplyaduplicateofECTXforeachplotset,except
thatonlythoseelementswhichareinthesetareincluded. TheGPSETSdatablockforeachplot
setissimplyalistofindicesintothesubsetofgridpointswhichpertaintothisset.
4.23.8Subroutines
Utility routines CLSTAB, FREAD, G_PEN, INTGPX, INTGPT, INTLST, RDMODX, RDMODE andRDWORD are
usedbyPLTSET. SeeSection 3.4fortheirdescriptions.
4.23.8.1 Subroutine Name: SETINP
l•
2.
3.
COFV40N/GPTAI/NTYPES ,LAST,INCR,ELEM(1)EntryPoint: SETINP
Purpose: Tocreate theplotparameter andcontrol datablock (PLTPAR) andinterpret
theplotsetdefinition cardsfromthePlotControl DataBlock(PCDB).
Calling Sequence: CALLSETINP
(NoteSection 2.5.2.1)
4.23.8.2 Subroutine Name: COMECT
I.
2.
3.Calling Sequence: CALLC_MECT
COMMON/GPTAI/NTYPES,LAST,INCR,ELEM(1)
4.23.8.3 Subroutine Name: CNSTRCEntryPoint: COMECT
Purpose: Tocreate ashortened formoftheElement Connection Table (ECT).
(NoteSection 2.5.2.1)
l•
2.
3.
C{_MMON/GPTAI /NTYPES ,LAST,INCR,ELEM(1)EntryPoint: CNSTRC
Purpose: Toconstruct theelement andgridpointplotsetdatablocks (ELSETS,GPSETS).
Calling Sequence: CALLCNSTRC (GP,ELE,BUF,FtAX)
(NoteSection 2.5.2.1)
4.23-3 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Where:
GP
ELF=
BUF=
MAX=NGPlocationsusedtosetupthegridpointindexlistforthegrid
pointsetdatablock(GPSETS),
MAXlocationsusedtosetuptheelementsetdatablock(ELSETS).
Locationof3GIN_buffers.
AmountofcoreavailablefortheFLEarray(opencore).
4.23.9Design Requirements
OpenCoreDesign (Common BlockXXPSET)
I.Subroutine SETINP
EL(1)
EL(NEL)
GP(NPT)
GP(1)
xc(1)C_MM_N/XXPSET/
Element id&amp;rsquo;sandranges
Gridpoint id&amp;rsquo;sandranges
5GINObuffers
I
2.Subroutine CNSTRC
Forthissubroutine, opencoreispartitioned bythecalling program asfollows:
GP(1)
GP(NG)
ELE(1)
ELE(MAX)
BUF(1)Gridpointindextable
Plotsetelement id&amp;rsquo;s
3GIN_buffers
4.23-4 (811172)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPLTSET(PLOTSETDEFINITION PROCESSOR)
4.23.10 Diagnostic Message s
Afatalmessage occurs inSETINP ifasetspecification issolargethatopencoreisfilled
(i.e., arrayELmeetsarrayGP).Allotherdiagnostics arenon-fatal andarewritten onthe
PLTSETX datablockforprinting bythePRTMSG module.
4.23-5 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE PLOT (STRUCTURAL PLOTTER)
4.24FUNCTIONAL MODULE PL_T(STRUCTURAL PLOTTER)
4.24.lEntryPoint: DPLOT
4.24.2
Todrawstructural shapes onavariety ofdifferent plotters.
4.24.3 DMAPCallin 9Sequence
PLCT PLTPAR,GPSETS,ELS_TS,CASECC,BGPDT,EQEXIN,SIL,PLTDSPI,PLTDSP2/PLCTX/V,N,NGP/
V,N,LSIL/V,N,NPSET/V,N,PLTFLG/V,N,PLTNUM $
4.24.4 Input DataBlocks
PLTPAR
GPSETS
ELSETS
CASECC
BGPDT
EQEXIN
SIL
PLTDSPI
PLTDSP2
Notes:-Plotparameters andplotcontrol table.
-Gridpoint setsrelated totheelement plotsets.
-Element plotsetconnection tables.
-CaseControl DataTable.
-Basic GridPoint DefinitionTable.
-Equivalence between external gridorscalar numbers andinternal numbers.
-Scalar Index List.
-Translational displacements (statics).
-Translational displacements(dynamics).
I.OnlySIL,PLTDSPI, andPLTDSP2 maybepurged. Ifthis isthecase, only undeformed
shapes maybedrawn.
2.Ifeither PLTSDPI orPLTDSP2 ispurged, thattypeofdeformed shape will notbe
drawn.
3.Ifeither PLTDSPI orPLTDSP2 isnotpurged, SILmaynotbepurged.
4.24.5 Output DataBlocks
PLOTX Usermessages.
Note: PLOTX maynotbepurged.
4.24-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.24.6 Parameters
NGP
LSIL
NPSET
PLTFLG
PLTNUMInteger-input-no default value. Number ofgrid points.
Integer-input-no default value. Lastscalar index value.
Integer-input-no default value. Number ofelement plotsets.
Integer-input/output-default value =I.Displacement plotflag.
=lifundeformed shapes havenotyetbeendrawn.
=-lifundeformed shapes havebeendrawn.
Integer-input/output-default value =O.Plotnumber.
4.24.7 Method
Subroutine PARAM reads eachcard intheplotparameter andcontrol table (PLTPAR). If
thefirst entry onacardisnot&amp;rsquo;FIND&amp;rsquo; or&amp;rsquo;PL_T&amp;rsquo;, itisassumed tobeaplotparameter
cardtobeprocessed within PARAM (e.g., PR_JECTION, PLOTTER, etc.). Within PARAM, animplied
&amp;lsquo;FIND&amp;rsquo; cardisinitially setuptoautomatically findanorigin, vantage point, andscale. In
addition thissameimplied &amp;ldquo;FIND&amp;rdquo; cardissetupeachtimeanewprojection isdefined asa
&amp;lsquo;PL_TTER&amp;rsquo; cardisencountered. Atthesame time, theviewangles arere-initialized totheir
default values, theregions pertaining toeachorigin arereset tofullpictures, andallpre-
viously defined origins arenullified.
When a&amp;rsquo;FIND&amp;rsquo; cardisencountered, subroutine FINDiscalled both tointerpret thecard
andactuponitsrequests. Andfinally, whena&amp;rsquo;PL_T&amp;rsquo; card isencountered, subroutine PL_T
iscalled both tointerpret thecardandtoactuponitsrequests. However, inthiscase, if
theimplied &amp;lsquo;FIND&amp;rsquo; card setupbysubroutine PARAM still exists (i.e., ifnoorigin, scale,
orvantage point hasbeendefined) theFINDsubroutine iscalled tosatisfy these needs before
subroutine PLOTiscalled.
Insubroutine FIND, after theinterpretation ofthe&amp;rsquo;FIND&amp;rsquo; card iscompleted, acoordinate
system rotation matrix iscalculated relative tothecurrent viewangles, andthen thevantage
point, scale factors, andtheorigin requested arecalculated asneeded.
Insubroutine PL_T, after theinterpretation ofthe&amp;rsquo;PLOT&amp;rsquo; card iscompleted, alistof
messages totheplotter operator isgenerated. Thenallplots requested ontheplotcard are
generated bycalling subroutine DRAWforeach plotrequest.
4.24-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPL_T(STRUCTURAL PLOTTER)
Subroutine DRAWgeneratesoneplot.Itsetsuptheregionoftheplot, rotates thegrid
points based uponthecurrent viewing angles, applies thelatest scale factor tothestructural
coordinates, andtranslates these coordinates totheorigin specified forthisplot. Italso
controls thevarious aspects ofaplotasspecified onthe&amp;rsquo;PL_T&amp;rsquo; card, e.g., drawing ashape,
labeling gridpoints, etc., forbothundeformed anddeformedstructures (superimposition if
called for).
4.24-3 (12-I-6g)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.24.8 Subroutines
Thefollowing utility routines arecalled byPLOT: CLSTAB,FREAD,GOPEN,(INTGPX,INTGPT),
INTLST,(RDM_DX,RDMODY,RDM_DE,RDWORD). Seethesubroutine descriptions insection 3.The
subroutines FNDSET, MINMAX, PERPEC andPROCES aresupport subroutines usedbymore than
oneofthefollowing subroutines.
4.24.8.1 Subroutine Name: PARAM
I.Entry Point: PARAM
2.Purpose: Tointerpret theplot parameter cards andtodetect the&amp;rsquo;FIND&amp;rsquo; and&amp;rsquo;PL_T&amp;rsquo;
plotcontrol cards. Inaddition, itserves asadriver forsubroutine FINDandPLOT.
3.Calling Sequence: CALLPARAM (SETID,X)
C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5).
Where:
SETID =variousplotsetid&amp;rsquo;screated inthePLTSET module. (Record lofGPSETS).
X =Open core.
4.Method: Allplotparameters areinserted intheXXPARM table. Anyparameter which
isnotrecognizable causes amessage tobecreated tothiseffect, andtheparameter
isthenignored.
5.Additional Subroutines Required: FIND,PLOT
4.24.8.2 Subroutine Name: FIND
I.Entry Point: FIND
2.Purpose: Tointerpret a&amp;rsquo;FIND&amp;rsquo; cardandtocalculate theparameters requested on
thecard.
3.Calling Sequence: CALL FIND(MODE,SETID,X)
C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5).
Where:
MODE =Current value oftheXRCARD mode value asreada_dmodified bysubroutine
4.24-4&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPL_T(STRUCTURALPLOTTER)
RDM@DX.
SETID =Various plotsetid&amp;rsquo;screated inthePLTSET module (record lofGPSETS).
X =Opencore.
4.Method: After interpreting the&amp;rsquo;FIND&amp;rsquo; card, thecoordinate system rotation matrix
iscalculated (based uponthecurrent viewangles), thevantage point, scale factor, and
desired originarecalculated.
5.Additional Subroutines Required: FNDSET,MINtIAX,PR_CES,PERPEC.
4.24.8.3Subroutine Name: PL_T
I.Entry Point: PL_T
2.Purpose: Tointerpret the&amp;rsquo;PL_T&amp;rsquo; card, andproduce alltheplots requested onthecard
byacting asadriver tosubroutineDRAW.
3.Calling Sequence: CALLPL_T (M_DE,SETID,X)
C_MMON/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
C_I.IM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5).
Where:
M_DE =Current value oftheXRCARD modevalue asreadandmodified bysubroutine
RDM_DX.
SEIID :Various plotsetid&amp;rsquo;screated inthePLTSET module (record lofGPSETS).
X -Opencore.
4.Method: After interpreting thedefom}ed structure plotrequests (there maybemany
onone&amp;rsquo;PL_T&amp;rsquo; card), therestofthe&amp;rsquo;PLgT&amp;rsquo; cardisread intomemory. Foreachdeformed
structure request, theappropriate displacement datablock (PLTDSPI orPLTDSP2) is
searched foramatching subcase id. Ifoneisfound, (this search doesnotoccur ifonly
theundeformed requests arebeing serviced), thentherestoftheplotcardisinterpreted
forthevarious plotting options. Subroutine DRAWisthen called toservice these
options andtodraw thecorresponding picture foreachplotelement setlisted onthe
&amp;lsquo;PL_T&amp;rsquo; card.
5.Additional Subroutines Required: HEAD,FNDSET,GETDEF,ORAW.
4.24-5
IIIIIII&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.24.8.4 Subroutine Name: GETDEF
I.Entry Point: GETDEF
2.Purpose: Toreadthetranslational components ofasetofdisplacements (inthebasic
coordinate system).
3.Calling Sequence: CALLGETDEF (DFRM,GPT,D)
C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
where:
DFRM =Displacement datablock toberead (pre-positioned atthesetofdisplacements
toberead).
GPT =Listofgrid point indices defining asubset ofgridpoints.
D =Array intowhich thedisplacement components aretoberead(3pergrid
point -X,Y,Z).
4.Method: Thescalar index list(SILdatablock) isused todetermine atwhich grid
point aparticular displacement component isspecified. While reading thecomponents,
amaximum absolute component (MAXDEF) isdetermined.
4.24.8.5 Subroutine Name: PLT_PR
I.Entry Point: PLTOPR
2.Purpose: Togenerate printed output tobeusedbytheplotter operator insetting
uptheplotting equipment, andtogenerate output informing theuseroftheplotting
parameters usedtogenerate theplots.
3.Calling Sequence: CALLPLTOPR
C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5).
C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
4.Method: Alloutput iswritten onthePLOTX datablock forsubsequent processing by
thePRTMSG module. Theresulting output canbeusedbytheusertoalter certain
plotparameters onasubsequent run,ifhedesires, inorder toslightly alter theplots
produced,
4.24-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPL_T(STRUCTURALPLOTTER)
4.24.8.6 Subroutine Name: DRAW
I.:Entry Point: DRAW
2.Purpose: Toservice themany possible plotting options andgenerate thecorresponding
picture.
3.Calling Sequence: CALLDRAW (GPLST,X,U,S,DEF_PJ4,STERE_)
C(_MMON/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5).
C{_MM{_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2).
C{_MM(_N/RSTXXX/ -SeeRSTXXX table description below (section 4.24.9.2).
C(_MM(&lt;em&gt;N/DRWDAT/ -SeeDRWDAT table description below (section 4.24.9.2).
:List ofindices (oneforeachstructural gridpoint) intothesubset ofgrid
points which pertain totheelement setappropriate tothisplot.
X :Coordinates ofthegridpoints inthiselement set(3pergridpoint -r,s,t).
U =Defor_tion components foreachgridpoint inthiselement set(3pergrid
point -x,y,z).
S =Location intowhich thesandtdeformed structure grid point coordinates are
tobeplaced.
DEF_RM{&lt;/em&gt; 0ifanundeformed structure plot isrequested.lifadeformed structure plotisrequested.
_=0iftheleftimage ofastereo plotistobegenerated.STERE@
liftheright image ofastereo plotistobegenerated.
4.Method: Initially, thegridpoints arerotated based uponthecurrent viewing angles,
translated totheselected plotorigin, andconverted toplotter units using thecurrent
scale factor, andthedeformation components arereduced tothespecified maximum deformation
value. Then theundeformed structural plotisgenerated.
Next, thedeformed structural shape (ifrequested) isdrawn. Thenthedeformation vectors
(asrequested) aredrawn.where:
GPLST
4.24-7 (12-I-69)
Im&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.24.8.75.Additional Subroutines Required:
Subroutine Name: INTVECMINMAX,PR_CES,PERPEC,INTVEC,SHAPE,GPTSYM,GPTLBL,DVECTR,
ELELBL
I.EntryPoint: INTVEC
2.Purpose: Tointerpret theusersupplied deformation vector plotrequest.
3.Calling Sequence: CALLINTVEC(VECTOR)
where:
VECTOR=BCDcharacters specified inthedeformation vector request (any
combination uptofourletters ofthecharacters R,X,Y,Z,N).
InputandOutput. Oninput,VECTOR isinteger (=0)orBCD.On
output, VECTOR ininteger (=0,if=0uponinput).
4.Method: Theresult isstored intoVECTOR, asfollows:
0
X=2
1
Y=2
2
Z=2
3
R=2(ifVECTOR =&amp;lsquo;R&amp;rsquo;only,itistreated asif
VFCTOR =RXYZ).
-VECTOR (thenegative ofthesumoftheother
characters)N=
4.24.8.8 Subroutine Name:SHAPE
I.EntryPoint: SHAPE
2.Purpose: Todrawastructural shape.
3.Calling Sequence: CALLSHAPE(GPLST,X,U,PEN,DEF_RM)
where:
GPLST=Listofindices intothesubsetofgridpointspertaining totheshape
tobedrawn.
=Corresponding gridpointcoordinates oftheundeformed structure (3per
gridpoint-r,s,t).
4.24-8 (3/I171)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPLIBT(STRUCTURALPLOTTER)
U
PEN =
DEFi_RMI=Corresponding gridpoint coordinates ofthedeformed structure (2pergrid
point -s,t).
Pennumber orlinedensity tobeusedtodrawtheshape.
0iftheundeformed shape istobedrawn.
lifthedeformed shape istobedrawn.
4.Method: Thestructuralshapetobedrawn isdefined asacompact element connection
table ontheELSETS datablock (assumed openandpositioned atthecorrect element set).
Aseach element isread, itisdrawn, taking intoaccount whether theelement isoneor
twodimensional.
4.24.8.9 Subroutine Name: GPTSYM
II
2.
3.
Where:
GPLST
XEntry Point: GPTSYM
Purpose: Totypeaspecial symbol ateachofasubset ofgridpoints.
Calling Sequence; CALLGPTSYM (GPLST,X,U,SYM,DEF_M)
U
SYM =Listofindices defining thesubset ofgridpoints.
Corresponding grid point coordinates oftheundeformed structure (3per
gridpoint -x,s,t).
Corresponding gridpoint coordinates ofthedeformed structure (2per
gridpoint -s,t).
Twoindices tobeusedtoconstruct thespecial symbol.
0iftheundeformed gridpoints aretobeused.
lifthedeformed gridpoints aretobeused.
4.24.8.10 Subroutine Name: GPTLBL
I.Entry Point: GPTLBL
2.Purpose: Totypetheexternal gridpoint idofeach ofasubset ofgridpoints.
3.Calling Sequence: CALLGPTLBL (GPLST,X,U,DEFtRM)
CgMM_N/PLTDAT/ -SeethePLTDAT miscellaneous table description(section 2.5).
4.24-9 (3/1/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P4</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_004/</guid>
      <description>
        
        
        &lt;p&gt;WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS
d)Logically add(_RF) words XandC;store intoX.
Assume two8-bit items ofdataarepacked intotheleftandright halves ofa16-bit word (X).
Tounpack these twoitems intotheloworder 8bitsoftwoseparate 16-bit words (AandB),per-
formthefollowing steps using theindividual functions available within MAPFNS:
a)Create )(ASK containing 8loworder bitsequal tolandthe8highorder bits equal to0
b)Right shift (RSHIFT) word X,eight bits; store intoA
c)Logically multiply (ANDF) word XbyMASK; store intoB.
Inthepreceding example, thewordXremains unchanged since thefunctions return the
requested modified result inacomputer register.
1.3-3&lt;/p&gt;
&lt;p&gt;SYSTEM BLOCKDATASUBPROGRAM (SEMDBD)
1.4SYSTEM BLOCKDATASUBPROGRAM (SEMDBD)
NASTRAN contains amaster block dataprogram (SEMDBD) which isresponsible fordefining and
initializing (root segment) common blocks. Thecommon blocks referenced inSEMDBD areeither
Executive common blocks (XFIAT, XXFIAT, XFIST, etc.) which require initial values, orgeneral
information common blocks (SYSTEM, NAMES, TYPE, etc.) which arereferenced bymanymodules. The
source listing forSEMDBD identifies thecommon blocks, anditdocuments thedatawhich are
initialized, viacomments. Inaadition, theExecutive common blocks aredocumented insection 2.4
andthenon-Executive common blocks insection 2.5. Certain parameters inthese common blocks
contain machine dependent values suchasword size, number ofBCDcharacters perword, etc.
These values aresetbysubroutine BTSTRP (section 3.3.2) byidentifying themachine onwhich
theNASTRAN program iscurrently operating andsetting thevalues accordingly.
1.4-I&lt;/p&gt;
&lt;p&gt;THEOPENCORECONCEPT
1.5THEOPENCORECONCEPT
1.5.1Introduction
Thedesign philosophy oftheNASTRAN system dictated acompletely openended design whenever
possible. NASTRAN wastohave theflexibility tooperate onasecond generation machine with a
32Kcore (theIBM7094/7040 DC$)aswellasthelargest oftheIBMS/360 series ofcomputers, and
takecomplete advantage oftheadditional corestorage without major program changes. Theuseof
afixed dimension forlarge arrays wasoutlawed since thisautomatically restricted thesize of
aproblem that could besolved. Instead, modules were tobeprogrammed toallocate space as
required andtousespill logic totransfer datatoscratch files ifcomplete coreallocation was
in,possible. Inthismanner, aproblem might cause spill logic tobeusedonacomputer with
limited core storage, butnotonacomputer withalarger corestorage capacity.
1.5.2 Definition ofOpenCore
Thedefinition ofopen coreis:acontiguous block ofworking storage defined byalabeled
common block whose length isavariable determined bytheNASTRAN Executive function C_RSZ. The
implementation ofthisdefinition bythemodule writer consists oftheorigining ofalabeled
common block attheendofhisoverlay segment. Thislabeled common block contains adimensioned
variable oflength I.C_RSZ returns thenumber ofwords ofcoreavailable between hisopencore
origin andtheendofcore. Themodule writer cannowwrite hisprogram asifhehaddimensioned
hisarray bythatnun_ber. Inactuality, heisextending beyond theareareserved forthearray
intoanarea reserved forthejobbutnotcurrently usedbythesegment. Whenimplementing this
concept, caremust betaken toassure thatthesystem does notusethisarea.
1.5.3 Example ofanApplication ofOpenCore
Figure ldemonstrates theuseofopencorebytwosubroutines, AandB.Bysomemeans,
which aremachine dependent andarediscussed insection 5,anendpoint isestablished foropen
core. Thelength ofopencoreisthenthedifference between thisendpoint andthelabeled
common block. Intheexample shown, subroutine Awillhavemoreopencoreavailable toitthan
Bdoes.
l.5-I&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
I0SUBROUTINE A
C@MM_N//XX
COMMON/AX/Z(1)
INTEGER C_RSZ
NZ=C_RSZ(Z(I),XX)
D_I01:I,NZ
Z(I):I
RETURN
ENDSUBROUTINE B
CBMM_N//XX
C_MMON /BX/Z(1)
INTEGER C_RSZ
NZ:CORSZ(Z(1),XX)
D@I0I=I,NZ
lOz(1):I
RETURN
END
OpencoreforSUB.A
L
Blank common
establishes theendof
opencoreforsome
machines (seesection 5).
Figure I.SUB.A
/AX/
//ixSUB.B
/BX/
1_End ofopen core
available forthis
job.
Aexample oftheuseofopencore.OpencoreforSUB.B
1.5-2&lt;/p&gt;
&lt;p&gt;NASTRANINPUT/OUTPUT
1.6 NASTRAN INPUT/OUTPUT
1.6.1 Introduction
Theparticular (IBM7094, IBMS/360, Univac ll08, CDC6600) operating system input andout-
putfiles provide therequired dataconnection between NASTRAN, theinput data decks andthe
printed output. Utility subroutines XRCARD (section 3.4.19) andRCARD (section 3.4.20) convert
special NASTRAN input cardformats tostandard F_RTRAN datawords easily handled byallNASTRAN
input processors. Printed output isgenerated through F_RTRAN formatted write statements. All
internal datablock input/output ishandled byGIN_, thesystem ofNASTRAN general purpose input/
output routines. GIN_provides therequired manipulation totailor thevariable length logical
data records needed bymost NASTRAN modules tofixed length records available onalldirect access
massstorage hardware.
1.6.2 UseoftheOperatin 9System Input File
Thesystem input fileisreadonlybythefollowing routines within theNASTRAN Preface:
I.SEMINT (seesection 3.3.3) reads thefirst cardandprocesses itusing utility
XRCARD ifitistheNASTRAN card (seesection 6.3.1).
2.TheExecutive Control Deckcontaining free-field cards isreadandprocessed byXCSA
(section 4.2)using theXRCARD utility.
3.TheCaseControl Deckcontaining free-field cards isreadandprocessed byIFPI
(section 4.3)using theXRCARD utility.
4.TheBulkDataDeck containing fixed-field cards isreadbyXS_RT (section 4.4). This
data issubsequently processed byIFP(section 4.5)using theRCARD utility.
These cardconversion utilities (XRCARD andRCARD) provide respectively allthefree-field
andfixed-field datacardprocessing required byNASTRAN.
1.6.2.1 UseoftheSubroutine XRCARD (SeeSection 3.4.19)
XRCARD interprets NASTRAN free-field datacards andprocesses thefields intoasequential
buffer thatcanbeeasily handled bysubsequent modules. Free-field data consist ofseries of
dataitems separated bysuitable delimiters andpunched innon-specific cardcolumns. Data
items mayinclude alphanumeric, integer, andvarious types ofrealvariables. Field delimiters
1.6-I (12-I-69)&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
mayinclude thecomma, slash, parenthesis, andblanks. Fordetails regarding dataanddelimiter
usageandtheformat ofthesequential output buffer, seetheXRCARD subroutine description in
section 3.4.19.
1.6.2.2 UseoftheSubroutine RCARD(SeeSection 3.4.20)
RCARDinterprets NASTRAN fixed-field datacardsandprocesses thefields intoasequential
buffer thatcanbeeasily handled bysubsequent modules. Fixed-field dataconsist ofdataitems
punched within specific cardfields. Eacheighty-column cardisdivi_ed intoaneight-column
IDfield (forthecardmnemonic) followed byeither eighteight-column datafields orfour
sixteen-column datafields. Aspecial character (asterisk orplus)within theIDfielddetermines
whenthecardistobeinterpreted ascontaining sixteen-column fields. Thelasteightcolumns
ofthecardareforcontinuation mnemonics usedbyXSORTandarenotprocessed byRCARD. The
dataitemwithin theIDfieldmustbealphanumeric. Thedataitemswithin allotherfields may
include alphanumeric, integer, andvarious typesofrealvariables. ForVetails regarding data
andtheformat ofthesequential output buffer, seetheRCARDsubroutine description in
section 3.4.20.
1.6.3 UseoftheOperatin_ Syster_ Output File
Although NASTRAN printed output isformed andplaced ontothesystem output filethrough
useofstandard FORTRAN formatted writestatements, twobasic NASTRAN design concepts prohibit
everyoperating module fromgenerating printed output. Firstly, sincetheFORTRAN I/0package for
output generation occupies asizable blockofcomputer memory, thispackage isgenerally positioned
byloader directives within specific output oriented segments, rather thanwithin therootsegment
oftheoverlay, toreduce thetotalmemory requirement. Secondly, because manyfunctional modules
generate thesameorsimilar diagnostic andinformation messages, aNASTRAN message writer (MSGWRT)
wasdeveloped tocentralize message textandthusprevent duplications within manyseparate modules.
Forthereasons previously discussed, NASTRAN output generation isrestricted toaspecific
classofmodules whichcanreside within anoutput oriented segment below thelinkrootsegment.
Thesesegments willcontain theoutput producing modules suchastheOutput FilePrc_cessor (OFP-
section 4.70), theMessage Writer (MSGWRI -section 3.4.26), andthevarious tableandmatrix
printers (TABPT -section 3.4.29, MATPRT -section 4.71, etc.)alongwiththeoutput titling
(PAGE-section 3.4.24) andnecessary FORTRAN I/0packages.
1.6-2&lt;/p&gt;
&lt;p&gt;NASTRAN INPUT/OUTPUT
1.6.4 GIN_
GIN@ isacollection ofsubroutines which provide forallinput andoutput operations within
NASTRAN except reading datafromtheresident system input fileandwriting dataontheresident
system output andpunch files. These latter operations areaccomplished through F_RTRAN formatted
read/write statements. NASTRAN programs perform input/output operations bymaking thefollowing
calls toGIN_entry points:
I.@PEN (seesection 3.4.2)
OPENinitiates activity forafile (unless thedatablock assigned tothefileispurged, in
which caseanalternate return isgiven). Aworking storage area (GIN@ buffer), foruseby
GIN@, isassigned (allocated) bythecalling program thusproviding optimum allocation of
storage bythecalling program. Thisworking storage areaisreserved forusebyGIN_ until
activity onthefileisterminated byacalltoCLOSE (seeparagraph 4below). Oneachof
theNASTRAN computers, theworking storage areaallocated bythecalling program isseparate
fromtheactual physical I/_buffer.
2.WRITE (seesection 3.4.3)
WRITE writes aspecified (bythecalling program) number ofwords onafile. Theblock of
words tobewritten maycomprise anentire logical record orportion ofalogical record.
3.READ (seesection 3.4.5)
READreturns tothecalling program aspecified (bythecalling program) number ofwords from
thelogical record atwhich thefileiscurrently positioned. READmaybeusedtotrans-
mitanentire logical record orportion ofalogical record.
4.CLOSE (seesection 3.4.4)
CLOSE terminates activity forafile. Theworking storage areaassigned at_PEN isreleased.
Thefile isrepositioned totheloadpoint ifrequested.
5. REWIND (seesection 3.4.8)
REWIND repositions therequested filetctheloadpoint. Thefilemustbe&amp;quot;open&amp;quot;, i.e.a
REWIND operation isrequested subsequent toacallto@PENandprior toacalltoCLOSE.
6. FWDREC (seesection 3.4.6)
FWDREC repositions therequested fileonelogical record forward.
1.6-3&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
7.BCKREC (seesection 3.4.7)
BCKREC repositions therequested fileonelogical record backwards.
8.SKPFIL (seesection 3.4.10)
SKPFIL repositions therequested fileforward orbackward Nlogical fileswhereNisspecified
bythecalling program.
9.E_F(seesection 3.4.9)
E_Fwrites alogical end-of-file ontherequested file.
ThebasicunitofI/0inNASTRAN isalogical record. Thelength ofalogical record is
completely variable andmayrangefromonewordtoanarbitrarily largenumber ofwords. For
NASTRAN matrix datablocks, theconvention wasadopted thateachcolumn ofthematrix would com-
priseonelogical record. ForNASTRAN datablocks containing tables, norigidconvention exists.
Typically eachlogical record contains onetableofaspecific type.
Tilelogical record concept provides greatest easeinprcgramming. However, since these
records mustbestored onaphysical device suchasadrum,diskortape,thecharacteristics ofthe
device mustbetakenintoconsideration. ThebulkofNASTRAN dataisstored ondrumsordisks.
Forboththesedevices thecommon unitoforganization isatrack, whichstores afixednumber
ofwords. Thus,thereisaconflict between thevariable length GIN_records andthefixed
length tracks.
Thisconflict isresolved byblocking. G!N@actsastheinterface between tiledevice and
theNASTRAI_ program. Usingthistechnique, theprogram itself neednotbeconcerned withdevice
considerations (which wouldcreate machine dependent code). GIN_hasbeenparameterized sothat
different devices maybeeasily accommodated.
Basically, blocking provides forthereading andwriting offixed-length blocks. Thelength
ofablockisafunction ofthedevice. Itmaybeonetrack, one-half trackorotherintegral
division ofatrack(Lutnevermorethanonetrack). Because oftherelatively largetimeto
access agivenposition onatrack (duetotherotational speed ofthedevice and/or mechanical
movement oftheheadtothetrack), ablocksizeequal toonefulltrackisthemostdesirable.
However, limitations intheamount ofstorage available toholdtheblocks incoreisasecond
consideration.
1.6-4&lt;/p&gt;
&lt;p&gt;NASTRAN INPUT/OUTPUT
Sincelogical recordlengths arevariable butthelengthofrecords physically reador
written isfixed, logicmustbeprovided toaccommodate thissituation. Thislogicisprovided
intheGIN_routine, whichallows forthefollowing cases:
I.Multiple logical records perblock
2.Multiple blocks perlogical record
Themethod bywhichphysical inputandoutput ofblocks isaccomplished byGIN_ismachine
dependent. OntheIBM7094,I_EXisused.OntheIBMS/360, F_RTRAN binary read/write statements
areused.OntheUnivac 1108,NTRANisused.OntheCDC6600,SC_PEmacros areused.These
implementation differences aretransparent totheNASTRAN applications programmer (functional
module writer). Thesystems programmer whoisinterested inimplementation details onthevarious
machines isreferred tosection 5.
1.6.4.1 GIN_FileNames
Thenamesoffilesinputasarguments totheGIN_routines listedabovemaybealphabetic
(BCD,oftheform4HXXXX )orinteger.
AGIN_filenameisBCDifthefilecontains permanent Executive tables ordatablocks. A
listofthesefilesforaparticular NASTRAN runresides inthepermanent portion oftheFIST
Executive table. Thefollowing listpresents allcurrent Executive fileswiththeirBCDfile
names:
File BCDFileName
Data PoolFile Pe_L
NewProblem Tape NPTP
OldProblem Tape _PTP
BCDPlotTape PLTI
Binary PlotTape PLT2
User&amp;rsquo;s Master File UMF
NewUser&amp;rsquo;s Master File NUMF
User Input File INPT.
1.6-5&lt;/p&gt;
&lt;p&gt;NASTRANPROGRAMMING FUNDAMENTALS
Functional modules should notaccess thesE: permanent Executive files. Functional modules
access thefiles onwhich their input, output andscratch datablocks reside byinternal integer
GIN_ filenames. Prior tocalling afunctional module, thelinkdriver routine, XSEMi, calls
subroutine GNFIST (GNFIST iscalled exclusively byXSEMi) togenerate theFISTExecutive table.
Foreachinput, output orscratch datablock required foroperation ofamodule (this information
being contained inthe_SCAR entry), GNFIS1 searches theFIATtofindthedatablock. Ifthedata
block isintheFIATandafilehasbeenassigned toit,aninternal GIN_ filenumber denoting the
datablock andapointer (index) totheentry intheFIAT isplaced intheFIST. Thefollowing
convention isusedforinternal GIN_filenumbers: input datablocks &amp;ndash;lO0+position inthe
_SCAR entry; output datablocks &amp;ndash;200+position inthe_SCAR entry; scratch datablocks &amp;ndash;301
through 300+nwhere n=number ofscratch datablocks asdefined intheMPL. (Theposition in
the_SCAR entry istheposition intheDMAP instruction). Ifthedatablock isintheFIATandis
purged, noentry isplaced intheFIST. Forexample, consider thefollowing DMAPcalling sequence
forfunctional module XYZ:
XYZ A,B,C/D,E,F,G/V,N,PARMI/V,N,PARM2 $
Thedatablocks inputtothemodule areA,BandC;thedatablocks output fromtilemodule are
D,E,FandG;themodule&amp;rsquo;s parameters arePARMIandPARM2. Notethatinternal scratch filesare
notmentioned intheDMAPcalling sequence. Thenumber ofscratch filesforamodule isdefined
intheModule Property List(MPL)Executive table(seesection 2.4)andiscommunicated tothe
Executive SystemviatheOSCAR. Details onthesyntactical rulesofDMAParegiveninsection 5of
theUser&amp;rsquo;sManual.
InordertoreadtheinputdatablockB,theGINOfilenumber internal toXYZis102;in
ordertowritedatablockD,theGINOfilenumber is201.Thethirdof,say,fivescratch data
blocks isreferenced byXYZthrough theGINOfilenumber 303.
l.6-6&lt;/p&gt;
&lt;p&gt;NASTRANMATRIXROUTINES
1.7NASTRANt.&lt;em&gt;TRIXROUTINES
1.7.1 Introduction
Therequirement thatNASTRAN handle large structural analysis problems implies thatNASTRAN
should beabletomanipulate andstore large matrices efficiently andeffectively. Ingeneral,
thematrices generated inthedisplacement approach tendtobesparse (i.e., thenumber ofnon-
zero terms inanycolumn ofamatrix issmall compared totheorder ofthematrix). TheNASTRAN
matrix routines, ADD,MPYAD, DECAMP, etc., which aredescribed insection 3.5,areoptimized as
much aspossible totakeadvantage ofmatrix sparsity andthuseliminate many unnecessary operation
onzeroelements. Inorder toaidinthese operations andtomakeeffective useofauxiliary
storage, apacking scheme wasdevised tostore onlythenon-zero terms inacolumn.
1.7.2 Matrix Packin&lt;/em&gt; andUnpacking
Theneedforamatrix packing routine canbeseenbycomputing theauxiliary storage required
toholdalO,O00 order n_trixwhich isI%dense (i.e., theaverage nunlber ofnon-zero terms in
acolumn isI00). With nopacking technique, lO8words ofstorage arerequired toholdthe
matrix. Using theNASTRAN packing routines, amaximum of2xlO6words ofstorage arerequired
iftheterms arescattered, andlO6words arerequired iftheterms occur inaband.
Thesubroutines BLDPK, INTPK, PACK, andUNPACK, along with their additional entry points,
provide thematrix packing/unpacking capability ofNASTRAi_. Theusershould refer tothedes-
criptions ofthese subroutines insections 3.5.1 through 3.5.4 foradetailed description ofthe
packing logic.
14atrices arestored bycolumns, andsubroutines PACK/UIIPACK provide theability topack/
unpack acomplete column. Thecapability isalsoprovided topack/unpack acolumn fromthefirst
non-zero element tothelast.
Anadded feature ofthepacking routines isthatsubroutines BLDPK andINTPK provide the
capability ofpacking/unpacking oneelement atatime. ByuseofINTPK, amatrix canberead
element-by-element, suchthatanentire matrix canbeprocessed without anyappreciable core
storage requirements. Likewise, byusing BLDPK, amatrix canbebuilt oneelement atatime. This
isanextremely important feature toroutines thatmust process matrices whenstorage islimited.
1.7-I (12-I-69)&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
1.7.3 TheNested Vector SetConcept UsedtoRepresent Components ofDisplacement
Inconstructing thematrices usedintheDisplacement Approach, eachrowand/or column ofa
matrix isassociated closely withagridpoint, ascalar pointoranextrapoint. Everygridpoint
has6degrees offreedom associated withit,andhence6rowsand/or columns ofthematrix. Scalar
andextrapoints onlyhaveonedegree offreedom. Ateachpoint(grid, scalar, extra) thesedegrees
offreedom canbefurther classified intosubsets, depending ontheconstraints orhandling
required forparticular degrees offreedom. (Forexample inatwo-dimensional problem all&amp;quot;z&amp;quot;
degrees offreedom areconstrained andhencebelongs tothes(single-point constraint) set).
Eachdegree offreedom canbeconsidered asa&amp;quot;point&amp;quot;, andtheentire model isthecollection of
theseone-dimensional points.
Nearly allofthematrix operations indisplacement analysis areconcerned withpartitioning,
merging, andtransforming matrix arrays fromonesubset ofdisplacement components toanother.
Allthecomponents ofdisplacement ofagiventype(suchasallpoints constrained bysingle-point
constraints) formavector setthatisdistinguished byasubscript fromothersets. Agiven
component ofdisplacement canbelor_g toseveral vector sets. Themutually exclusive vector sets,
thesumofwhose members arethesetofallphysical components ofdisplacements, areasfollows:
u_umpoints eliminated bymultipoint constraints,
uspoints eliminated bysingle-point constraints,
uopoints omitted bystructural matrix partitior;ing,
urpoints towhich determinate reactions areapplied instatic analysis,
theremaining structural points usedinstatic analysis (points leftover),
Ueextradegrees offreedom intFoduced indynamic analysis todescribe control systems etc.
Thevector setsobtained bycombining twoormoreoftheabovesetsare(+signindicates
theunionoftwosets):
ua=ur+uL,thesetusedinrealeigenvalue analysis,
ud=ua+Ue,thesetusedindynamic analysis bythedirect method,
uf=ua+uo,unconstrained (free) structural points,
un=uf+us,allstructural points notconstrained bymultipoint constraints,
Ug=un+um,allstructural (rgz_i_d)points including scalar points,
1.7-2&lt;/p&gt;
&lt;p&gt;NASTRAN MATRIX ROUTINES
Up=Ug+ue,allphysical points.
Indynamic analysis, additional vector setsareobtained byamodal transformation derived
fromrealeigenvalue analysis ofthesetua.These are:
_origid body (zero frequency) modal coordinates,
_ffinite frequency modal coordinates,
_i:_o+_f&amp;rsquo;thesetofallmodal coordinates.
Onevector setisdefined thatcombines physical andmodal coordinates. Thatsetis
Uh=&lt;em&gt;i+Ue&amp;rsquo;thesetusedindynamic analysis bythemodal method.
Thenesting ofvector setsisdepicted bythefollowing diagram:
u
s
uo
ur
u&lt;/em&gt; ud
ue
_o
Ci
_fua
uhuf
Un IUgUp
Thedatablock USET (USETD indynamics) iscentral tothissetclassification. Eachword of
USET corresponds toadegree offreedom intheproblem. Eachsetisassigned abitintheword.
Ifadegree offreedom belongs toagiven set,thecorresponding bitison.Every degree offree-
domcanthenbeclassified byanalysis ofUSET. Thecommon block /BITP_S/relates thesetstobit
numbers.
1.7-3&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
Twotypesofoperations occurrepeatedly.
Examples are:
andThefirstisthepartitioning orsortoperation.
Unl(1)
.
JKnn]=_jI_iKssj (2)
Thesecond istherecombining (ormerge) operation:
Theseoperations canbecompletely described bya&amp;quot;partitioning&amp;quot; vector whose length corresponds
totilelength ofthemajorset(theUgsetinEQuation I)andwhoseelements arezerosorones
depending onwhether adegree offreedom belongs totheupper(theunsetinEquation I)subset
orthelower(theumsetinEquation I)subset. Suchapartitioning vector canbeconstructed
bysubroutine CALCV, whichisdescribed insection 3.5.5. Thisoperation isdescribed throughout
thedocumentation bythenotation USET(UG,UN,UM) where UG(Ug)isthemajorset,UN(un)is
thezeroset,andUM(um)istheoneset.Thepartitioning vector generated bysubroutine CALCV
isinputtothematrix routine PARTN (section 3.5.6) toperform operations similar tothosein
Equations 1and2andisinputtothematrix routine MERGE (section 3.5.6) toperform operations
similar tothatinEquation 3.
1.7.4 Processing ofMatrices
Matrices inNASTRAN canbedivided intwogeneral types: coreheldmatrices suchasthe
;x6&amp;rsquo;sgenerated bytheelement routines anddatablock heldmatrices suchasthoseoutput by
functional modules. Therearemanyroutines toassist theprogrammer intheprocessing ofboth
typesofmatrices. Incore matrices canbeprocessed byGMMATD (Section 3.4.32), GMMATS (Section
3.4.33), INVERD (Section 3.4.34) andINVERS (Section 3.4.35). Datablockheldmatrices canbe
processed atseveral levels. Themostgeneral isthrough thematrix packing andunpacking
1.7-4(8/I/72)&lt;/p&gt;
&lt;p&gt;NASTRANMATRIXROUTINES
routines(BLDPK,PACK,INTPKandUNPACK).Thenextlevelofgenerality isprovidedbythematrix
subroutines suchasADD,PARTN,MERGE,TRNSP,MPYAD,SDC_MP,DECAMP,CDC_MP,FBS,GFBS,andINVTR.
Thefunctionsprovidedbytheseroutinescanalsobeactivatedbyasimplesubroutine callthrough
suchroutinesasSSG2A,SDRIB,SSG2C,SSG2B,SSG3A,S_LVER,FACTORandTRANPI.Thisthirdformis
byfarthemostconvenient anderrorfreemethodforthenoviceNASTRANapplications programmer.
1.7-5(8/I/72)&lt;/p&gt;
&lt;p&gt;GENERATION OFMATRICES
1.8GENERATION OFMATRICES
TheStructural Matrix Assembler (SMA) modules generate thestiffness, structural damping,
massanddamping matrices forthestructural model. SMAIgenerates thestiffness matrix exclusive
Kxandthestructural damping matrix, [K_g]; SMA2generates themass ofgeneral elements, [gg],
matrix, [Mgg], andthedamping matrix, [Bgg]; andSMA3generates thefinal stiffness matrix,
[Kgg], bygenerating amatrix foreachgeneral element inthemodel, andsuccessively adding
these matrices toFKx1Other matrix generation modules are: l)DS_IGI which generates thegg-.
Kddifferential stiffness matrix, [gg],foruseintheStatic Analysis with Differential Stiffness
Rigid Format andintheBuckling Analysis Rigid Format; 2)PLAI, which generates thestiffness
KLmatrix forlinear elements, [gg],foruseinthePiecewise Linear Analysis Rigid Format; 3)
rKn_lPLA4, which generates thestiffness matrix fornonlinear elements, LggJ,foruseinthePiecewise
Linear Analysis Rigid Format; 4)MTRXIN, which provides atwo-fold capability: a)toprovide
fordirect input matrices suchascontrol systems inthedynamics Rigid Formats, andb)toprovide
theDMAPuseracapability ofconverting matrices inputonDM!GbulkdatacardstoNASTR_N
matrix format; and5)theIFPmodulewhichprovides theuserthecapability ofconverting
matrices inputonDMIbulkdatacardstoNASTRAN matrix format. Detailed information oneach
ofthesemodules canbefoundinsection 4,Module Functional Descriptions. Thecentral role
thattheECPTdatablockplaysintheformation ofthestructural matrices generated inmodules
SIIAI,SMA2,DSHGI,PLA!andPLA4isexplained inthefollowing subsections.
1.8.1 TheECPTDataBlock
NASTRAN embodies alumped element approach, i.e., thedistributed physical properties ofa
structure arerepresented byamodel consisting ofafinite number ofidealized substructures
orelements thatareinterconnected atafinite number ofpoints. Anelement will affect terms
inthematrices only inrowsandcolumns related toitsinterconnected points. Hence each
column ofthese matrices maybeformed using onlyelements connected tothegridorscalar point
associated with thatcolumn.
TheTable Assembler (TAI) module constructs theElement Connection andProperties Table
(ECPT) data block foruseinthegeneration ofthese structural matrices. Eachrecord ofthe
ECPT corresponds toagridpoint orascalar point ofthemodel, and,conversely, every grid
point orscalar point ofthemodel corresponds toarecord oftheECPT. Thepoint towhich a
1.8-I&lt;/p&gt;
&lt;p&gt;NASTRAN PROGRAMMING FUNDAMENTALS
record oftheECPTcorresponds iscalled thepivotpointoftherecord. Eachrecord contains the
connection andproperties dataforallelements connected tothepivotpoint. Hencedataforan
element willappear ntimes, wherenisthenumber ofpoints defining theelement.
1.8.2 Structural Elements
Thebasisforthestructural matrices inNASTRAN arethefinit_ structural andscalar elements.
Eachelement generates matrix termsconnecting andconnected tothegridandscalar points given
onitsinputconnection card(e.g., CR_D). Astructural element generates 6by6matrix parti-
tionsrelated tothesixdegrees offreedom ofeachconnecting gridpoint. Ascalar element
generates onetermforeachconnection.
Thestiffness matrix, [K],forastructural element consists ofa6by6partition foreach
combination oftheconnected gridpoints. Forexample, aBARorR_Delement isconnected totwo
gridpoints, &amp;ldquo;a&amp;quot;and&amp;quot;b&amp;rdquo;.Thestiffness matrix partitions are:[Kaa], [Kab], [Kba]and[Kbb].
Atriangular element (e.g., TRMEM) isconnected tothreepoints. Itwillgenerate ninepartitions:
[Kaa], [Kab], [Kac], [Kba], [Kbb], [Kbc], [Kca], [Kcb]and[Kcc].
Although theactual equations fortheelement stiffness, massanddamping matrices are
different foreachelement, thesolutions follow adefinite pattern. Theelement connection,
orientation andproperty dataaregivenintheECPTdatablock. Thecoordinate system datafor
orienting theglobal coordinates ateachgridpointaregivenintheCSTMdatablock. The
material properties aregivenintheMPTandDITdatablocks. Autility routine, PRETRD, is
available tofetchcoordinate system data,andautility routine, PREMAT, isavailable tofetch
material properties.
I.Anelement coordinate system iscalculated usingthelocations ofthegridpoints.
Usingthesedataamatrix, [E],isformed, which transforms displacements fromelement
coordinates tobasiccoordinates.
2.Thestiffness matrix maybeformed inelement coordinates usingmanymethods. Forthe
simple elements (e.g., R_D)thetermsaredirect functions ofthegeometry, properties and
material coefficients oftheelement. Forsomeelements thematrix isfirstformulated in
termsofgeneralized coordinates, {q},usually thecoefficients ofapowerseries. In
general coordinates, thematrix is[Kq]. Transformation matrices, [Hi],aregenerated to
1.8-2&lt;/p&gt;
&lt;p&gt;GENERATION OFMATRICES
transform thedisplacements atthegridpoints inelement coordinates {u},tothegeneral
coordinates {q}.
3.Theglobal coordinate system orientation matrix, [T],foreachgridpoint iscalculated.
4.Thestiffness matrix partition forthecolumns related topoint jandtherowsrelated to
point iis[Kij]. Ingeneral itisformed bytheequation
[Kij] =[Ti]T[E][Hi]T[Kq][Hj][E]T[Tj]. (I)
Inorder togenerate aparticular partition, [Kij], itisoften necessary togenerate [K].
Onlythose partitions [Kij], where iisthepivot point andj=1,2&amp;hellip;..n(nbeing thenumber of
gridpoints associated with theelement), areuseful forthecurrent ECPT record being processed.
Theunused partitions arerecalculated andusedwhenj_iappears asapivot point inasub-
sequent ECPTrecord. Analternate procedure formatrix generation, which isnotused, would be
tocalculate alloftheelementmatrices onceandstore themonanauxiliary fileforfuture use
,.,h&amp;hellip;.. _ _-alternate procedure isi_ssefficient forlarge problems, where efficiency
really counts, because therecalculation timeislessthanthetimerequired torecover element
matrices fromtheauxiliary file.
1.8-3&lt;/p&gt;
&lt;p&gt;TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES
1.9TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES
Certainrestrictions areplaceduponthefunctional modulewriterwithregardtorun
termination anderrordiagnostics. Thisisnecessaryinordertocompletecertainfunctions
uponterminating andtomaintainuniformity withregardtodiagnostic messages.
Afunctional modulewriterisrequiredtoutilizeamessagewriter(MSGWRT,section3.4.26)
toprintallofhismessages. Inthismannersimilarmessage formats donothavetobedunlicated
ineachmodule. Also, inorder toavoid placing theI/0conversion routines andthelengthy
format statements intherootsegment, themessage writer isrestricted toitsownoverlay segment,
Communication between themodule andthemessage writer isviaaqueued message concept.
Subroutine MESAGE (section 3.4.25) iscalled tostore themessage parameters. Inthecaseofa
fatal message, adumpistaken ifaDIAGlcardispresent intheExecutive Control Deck, and
PEXIT (section 3.4.22) iscalled. Fornon-fatal messages, themessage isqueued andcontrol
given back totheuser. Themessage queue isprinted after eachmodule isexecuted.
,,,u_uer foranyroutine toterminate thecurrent execution, acalltoPEXIT mustbemade.
PEXIT handles allthefunctionsmecessary towrapuptherun: flushing output buffers, printing
queued messages, andpunching thelastcardofthecheckpoint dictionary.
1.9-I&lt;/p&gt;
&lt;p&gt;P_STARTS INNASTRAN
I.I0RESTARTS INNASTRAN
NASTRAN isdesigned torunlargeproblems withlongrunning times. Evenwiththebestof
computer systems, ahardware, operator, orsystem failure isnotuncommon forlongrunning jobs.
Atthesametime,thelargevolumes ofdataandthecomplexity ofthestructures thatcanbe
modeled andanalyzed usingNASTRAN makeithighly likely thatuserinputdataerrors willoccur.
Manyoftheseerrors areofasubtle type,meaning thattheycannot beimmediately detected in
theNASTRAN Preface bythemodules whichprocess thedatadecks. Todealwiththeseproblems, and
tosavemachine timeonrunswhichabortbecause ofdataorsystem errors, NASTRAN hasasophisti-
catedcheckpoint andrestart capability (seesection 3oftheUser&amp;rsquo;s Manual foradiscussion of
restarts fromtheuserpointofview). Theoverall design philosophy forrestart istwofold. A
restart selectively executes onlythemodules necessary toaccomplish auser-input datachange.
Theuserisabletochange anypartofhisproblem including structural modelchanges, additional
cases, ormoreoutput requests. Atthesametimerestarts areautomatic asfarasuserinterference
isconcerned. Theuserneedonlycheckpoint (seesection 1.2.3.5) hisoriginal runandsubmit
changes totheoriginal runonsubsequent runs. Theuserdoesnothavetoanalyze theeffect of
hischanges. Inaddition theselective nature ofrestart allows theprogram toproceed with
implicit errors (errors present inthedatabutnotyetidentified) untilnofurther validprogress
canbemade. Theworkaccomplished tothispointisnotlost,butrather onlythetableormatrix
datablockinerrormustbecorrected toallowtheprogram toproceed. Mucherrorchecking canbe
deferred until theactual module usingthedataisincontrol. Theremainder ofthissection will
explain theprogram mechanics bywhichrestart isaccomplished.
InNASTRAN therearefourgeneral typesofrestarts. Unmodified Restart (UMR), Psuedo Modified
Restart (PMR), Modified Restart (MR),andRigidFormat Switch (RFS). NotethatintheUser&amp;rsquo;s Manual
UMR&amp;rsquo;s andPMR&amp;rsquo;saredescribed together asUnmodifed Restarts. These classifications arefordes-
criptive andinternal purposes. Theuserneednotknowanything aboutwhich typeiswhich. The
basic characteristics ofeachtypewillbedescribed below. AnUnmodified Restart results whenthe
usersimply resubmits aproblem withnodatachanges. Itisusedtocontinue asolution fromthe
pointofinterruption. Presumably theproblem aborted previously duetotimeexpiring, machine
error, system error, etc.Therestart dictionary (created while checkpointing) isprocessed, and
thesolution isstarted againatthelastre-entry point (after thelastsuccessful checkpoint).
APsuedo Modified Restart occurs whentheuserrequests additional output fromtheprogram which
simply requires there-execution ofanoutput module suchastheStructure Plotter, theGridPoint
1.10-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P40</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_040/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Where:
GPLST
X=Listofindices defining thesubset ofgridpoints.
:Corresponding gridpointcoordinates oftheundeformed structure (3per
gridpoint-r,s,t).
U =Corresponding gridpointcoordinates ofthedeformed structure (2per
gridpoint-s,t).
I0iftheundeformed gridpoints aretobeused.DEFORM =
1ifthedeformed gridpoints aretobeused.
4.Method: Theinternal andexternal idofeachstructural gridpointisreadfromthe
EQEXlN datablock. Ifthegridpointispartofthespecified subset, thentheexternal
idisprinted totheimmediate rightofthegridpoint.
4.24.8.11 Subroutine Name: DVECTR
I.EntryPoint: DVECTR
2.Purpose: Todrawdeformation vectors.
3.Calling Sequence: CALLDVECTR (GPT,X,U_PEN)
Where:
GPT
PEN=Listofindices defining thesubset ofgridpoints atwhichvectors areto
bedrawn.
=Corresponding gridpoint coordinates oftheundeformed structure (3per
gridpoint-x,s,t).
=Corresponding gridpointcoordinates ofthedeformed structure (2per
gridpoint-s,t).
:Pennumber orlinedensity tobeusedtodrawthevectors.
4.24.8.12 Subroutine Name: FNDSET
I.EntryPoint: FNDSET
2.Purpose: Tofindthesubset ofgridpoints pertaining toasetofelements, andtoread
thecorresponding gridpointcoordinates fromtheBGPDT datablock.
3.Calling Sequence: CALLFNDSET (SET,GPID,X)
4.24-10 (3/I/71)&lt;/p&gt;
&lt;p&gt;Where:
SET
GPIDFUNCTIONAL MODULE PL_T (STRUCTURAL PLOTTER)
=Element plotsetindex.
=Array intowhich thelistofindices defining thesubset ofgrid points
istoberead.
X=Array intowhich thecorresponding coordinates aretoberead (3pergrid
point -x,y,z).
4.Method: IfSET=O,thegridpoint setindex datablock (GPSETS) isassumed positioned
atthecorrect record. Otherwise, GPSETS isfirst positioned correctly (record SET+I).
Theindices arethenreadintoGPID, andthecorresponding coordinates arereadfrom
BGPDT intoX.
4.24.8.13 Subroutine Name: MINMAX
I.Entry Point: MINMAX
2.Purpose: Toinitialize theminimum andmaximum gridpoint coordinates toavery
large andsmall nun_er, respectively.
3.Calling Sequence: CALLMINMAX
C_MM_N/RSTXXX/ -SeetheRSTXXX table description below (section 4.24.9.2).
4.24.8.14 Subroutine Name: PERPEC
I.Entry Point: PERPEC
2.Purpose: Tocalculate thevantage point and/or translate thegridpoint coordinates
tothevantage point.
3.CallingSequence: CALLPERPEC (X,STERE_)
CCMM¢N/XXPARM/ -SeeXXPARM table description(section 4.24.9.2).
CCMMCN/RSTXXX/ -SeetheRSTXXX table description (section 4.24.9.2).
where:
X
STERE_ =Setofgridpoint coordinates tobetranslated (3pergridpoint -r,s,t)
Iiifthecoordinates oftheleftimage forstereo aretobecalculated.ifthecoordinates oftheright image forstereo aretobecalculated.
4.24-II (3/I/71)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.Method: Afterthevantage pointiscalculated (ifrequired), eachgridpointis
translated. Intheprocess, unless theprojection isstereo, theminimum andmaximum
sandtcoordinates arecalculated. Finally, thedifferences between theseminima and
maxima, andtheiraverages, arecalculated.
4.24.8.15 Subroutine Name: PRICES
I.EntryPoint: PRICES
2.Purpose: Toexchange coordinate axes(asrequested) androtate thegridpointcoordi-
natesbaseduponthecurrent viewangles.
3.Calling Sequence: CALLPROCES (X)
C_MM_N/XXPARM/ -SeetheXXPARM tabledescription below (section 4.24.9.2).
C_MH_N/RSTXXX/ -SeetheRSTXXX tabledescription below(section 4.24.9.2).
where:
X=Gridpointcoordinates (3pergridpoint-x,y,z).
4.Method: Inaddition toitsprimary purpose, thissubroutine calculates theminimum and
maximum rotated gridpointcoordinates, andthedifferences andaverages oftheseminima and
maxima.
4.24.8.16 Subroutine Name: ELELBL
I.EntryPoint: ELELBL
2.Purpose: Totypetheelement identification number ofeachelement inasubset of
elements.
3.Calling Sequence: CALLELELBL (GPLST,X,U,DEF_RM)
C_MM_N/CHAR94/ -SeetheCHAR94 miscellaneous tabledescription (section 2.5).
C_MMON/PLTDAT/ -SeethePLTDAT miscellaneous tabledescription (section 2.5).
where:
GPLST =Listofindices defining thesetofgridpoints associated withtheelements
tobelabeled.
4.24-12 (311171)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
=Corresponding grid point coordinates oftheundeformed structure.
=Corresponding grid point coordinates ofthedeformed structure.
_0iftheundeformed gridpoints aretobeusedDEF@RM
hifthedeformed gridpoints aretobeused
4.Method: Thecompact element connection table (ELSETS) isread. Aseachelement idis
read, itistyped atthecenter oftheelement. Thetwocharacter symbolic name ofthe
element type isappended totheelement ID.
4.24.8.17 Subroutine Name:WRTPRT
I.Entry Point: WRTPRT
2.Purpose: Towrite messages onadatablock forsubsequent processing byWRTMSG.
Calling Sequence: CALLWRTPRT (G,L,F,N)
G
L=
F=
N=GIN_filename
Listvector oflength L(1) incells L(2)-L(L(1)+I)
Format vector
Length offormat vector,
4.24-12a (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPLgT(STRUCTURAL PLOTTER)
4.24.9Design Requirements
4.24.9.1 OpenCoreDesign (Common Block XXPL_T)
NPSET :Number ofelement plotsets.
NGP =Total number ofgridpoints.
NGPSET =Number ofgridpoints inanelement.Define
IoSubroutine DPL@T partitions opencoreforsubroutine PARAM asfollows:
C_4_N/XXPL_T/
x(o)
X(NPSET)
X(BUF)Elementplotsetid&amp;rsquo;s
Open Core
3GIN_buffers
2.Subroutine FINDpartitions opencoreforsubroutines FNDSET, PERPEC, andPR¢CES as
follows:
x(o)
X(NGP)
X(NGP+3&lt;em&gt;NGPSET)
X(NGP+4&lt;/em&gt;NGPSET)GPLST(NGP)
Gridpoint indices intoasubset
ofgridpoints
X(3,NGPSET)
Coordinates ofthegridpoints
inthesubset
XR(NGPSET)
&amp;rsquo;s&amp;rsquo;gridpoint coordinates for
theright image ofastereo pair.
Restofopencore
4.24-13&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
3.Subroutine PL@Tpartitions opencoreforsubroutines FNDSET,GETDEF,
andDRAWasfollows:
DEFLST(O)
DEFLST(NDEF)
DEFLST(NDEF+N)
DEFLST(NDEF+N+NGP)
DEFLST(NDEF+N+NGP+3&lt;em&gt;NGPSET)
DEFLST(NDEF+N+NGP+4&lt;/em&gt;NGPSET)
DEFLST(NDEF+N+NGP+7&lt;em&gt;NGPSET)
DEFLST(NDEF+N+NGP+9&lt;/em&gt;NGPSET)
DEFLST(BI)DEFLST(NDEF)
Listofspecified deformation
subcases
PLTCRD(N)
Restofthe&amp;rsquo;PLOT&amp;rsquo; card
GPLST(NGP)
Gridpoint indices intoasubset
ofgridpoints
X(3,NGPSET)
Coordinates ofthegridpoints
inthesubset
XR(NGPSET)
&amp;rsquo;s&amp;rsquo;gridpoint coordinates for
theright image ofastereo
pair
U(3,NGPSET)
Coordinates ofthedeformed grid
points inthesubset
S(2,NGPSET)
&amp;rsquo;s&amp;rsquo;and&amp;rsquo;t&amp;rsquo;coordinates ofthe
deformed gridpoints
Restofopencore
PL_TTER Buffers
5GIN_Buffers
4.24-14 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONALMODULE PLFF(STRUCTURAL PLOTTER)
4.24.9.2
Io
SET
LABEL
gRIGIN
PEN
SHAPE
SYMBOL
SYM
VECTgRBlock Data Interface
C_MM_N/DRWDAT/ SET,LABEL,_RIGIN,PEN,SHAPE,SYMB_L(2),SYM(6),VECT_R
-Element plotsetindex.
-Gridpoint label option.
-Origin index.
-Pennumber ordensityvalue.
Integer
-Structural shape drawing option.
-Grid point symbol indices.
-Symmetry options.
-Deformation vector options.
2.Cg_gN/RSTXXX/ CSTM(3,3),MIN(3),MAX(3),D(3),AVER(3)
CSTM -3x3coordinate system rotation matrix.
MIN -Minimum rotated gridpoint coordinates.
MAX -Maximum rotated gridpoint coordinates, Real
D -Differences between theminima andmaxima.
AVER -Averages oftheminima andmaxima.
3.C¢_PICN/XXPARM/ PBUFSZ,CAMERA,BFRAMS,PLTMDL(2),TAPDEN,
NPENS,PAPSIZ(Z),PAPTYP(2),PENSIZ(8),PENCLR(8,2),&amp;ldquo;SRIP(1)&amp;rdquo;,
SCALE,_BJM_D,FSCALE,MAXDEF,DEFMAX,
AXIS(3),DAXIS(3),VANGLE(3),BETA_S,BETAP,&amp;ldquo;SKIP(4)&amp;rdquo;,
FVP,RO,SOL,SOR,TO,DO,DO2,DO3,PRJECT,SOS
FgRG,gRG,NgRG,gRIGIN(II),EDGE(II,4),XY(II,3)
Inthefollowing descriptions, thevalue(s) inparentheses totheright ofthevariable name,
thedefault value, andtheletter inparenthesestotheright oftheexplanation
pertain tothetypeofthevariable (Iimplies integer andRimplies real).
PBUFSZ(O) =Plottapebuffer size (1)
4.24-15 (12-I-69)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Plotter Data
CAMERA(2)
BFRAMS(1)
PLTMDL(4020,O)
TAPDEN(O)
PenandPaperData
NPENS(8)
PAPSIZ(8.5,11.)
PAPTYP(VELLUMbb)
PENSIZi(1)
PENCLRi,I(BLAC) &amp;amp;PENCLRi,2(Kbbb)
Scalin9Data
SCALE
@BJM_D(I.)
FSCALE(1)
MAXDEF(O.)
DEFMAX
Viewin9 Data
AXlS (1,2,3)
DAXIS(I,2,3)
VANGLE(O.,-I.IO I0,34.27)
BETA_S(23.17)
BETAPCo.):Plotter camera number (1).
=Number ofblank frames between plots (I).
=Plotter model (BCDorIorR).
=Plottapedensity (I).
:Maximum number ofpens (I).
=Paper sizeininches (R).
=Paper type (BCD).
=Pensizes (I).
=Pencolors (BCD).
=Object-to-plotter ormodel-to-plotter
(stereo only) scale factor (R).
=Object-to-model scale factor (R-stereo only).
:Findscale factors option (1).
:Forced value ofthelargest deformation
component (R).
=Actual largest deformation component (R).
:Undeformed structure axisorientation (I).
=Deformed structure axisorientation (I).
=Viewangles (R-alpha,beta,gamma).
=Orthographic andstereo default value forthe
&amp;ldquo;beta&amp;rdquo; viewangle(R).
=Perspective default valueforthe&amp;quot;beta&amp;quot; view
angle(R).
4.24-16 (12-I-69)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEPL@T(STRUCTURAL PLOTTER)
Projection Data
FVP(1)
RO
SOL
SOL,SOR
TO
DO
D02(l.)
D03(2.)
PRJECT(1)
SOS(2.756)
Origin Data
F_RG(1)
_RG(O)
N_RG(IO)
@RIGIN
EDGEi,I(O.) &amp;amp;EDGEi,2(O.)
EDGEi,3(I.) lEDGEi,4(I.)
XYi,l
XYi,3
XYi,l&amp;amp;XYi,2=Findvantage point option (1).
=&amp;ldquo;r&amp;quot;component ofthevantage point (R).
=&amp;ldquo;s&amp;quot;component oftheperspective vantage
point (R).
=&amp;ldquo;s&amp;quot;components ofthestereovantage point (R).
=&amp;ldquo;t&amp;quot;component ofthevantage point (R).
=Projection plane separation value (R).
=Perspective default projection plane separation
value (R).
=Stereo default projection plane separation
value (R).
=Projection type (I,l=orthographic, 2=per-
spective, 3=stereo).
=Ocular separation value (R).
=Findoriginpoint option(1).
=Number ofactive origins(1).
=Maximum nun_er ofactive origins (1).
=Active origin id&amp;rsquo;s (1).
:Lower leftcorner oftheregion specified
fortheithorigin(R).
=Upper right corner oftheregion specified
fortheithorigin(R).
:xcomponent oftheithorigin (R).
=ycomponent oftheithorigin(R).
:leftandright xcomponents oftheithorigin
forstereo projection (R).
4.24.9.3 Common Storage Requirements
I.IXXPLCT/
2.IPLTDAT/
3.IXXPARMI
4.IRSTXXX/
5.IDRWDAT/Opencore.
-Plotter data (seemiscellaneous table description -section 2.5).
-Plotting parameters.
-Plotco-ordinate system calculations.
-Drawing data.
4.24-17&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.24.10 Diagnostic Messages
Anon-fatal message, number 3008,CALLMESAGE (8,x,x), willbegenerated bysubroutine PL_Tif
notenough coreisavailable forthegridpointdataneeded foraspecific element plotset.If
thisoccurs, thissetwillnotbeusedtogenerate aplot.
Allotherdiagnostics arenon-fatal andarewritten ontothePLOTXmessage datablock
forprinting bythePRTMSGmodule. Thesemessages areallquiteself-explanatory and
straightforward, anddonothaveanyexternal message numbers.
4.24-18
_ r&lt;/p&gt;
&lt;p&gt;4.25
4.25.1
4.25.2FUNCTIC_AL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)
FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)
Entry Point: GP3
Purpose
GP3processes static loads andtemperature data.Static loaddataarecollected byload
set,andexternal numbers areconverted tointernal numbers. Similarly, temperature dataare
collected bytemperature setandexternal numbers areconverted tointernal numbers.
4.25.3 DMAPCallin9 Sequence
GP3 GE_M3,EQEXIN,GE_M2/SLT,GPTT/V,N,N_L_AD/V,N,N_GRAV/V,N,N_TEMP $
4.25.4 Input DataBlocks
GERM3
EQEXIN
GE@M2
Note:Static loads andtemperature data.
Equivalence between external grid andscalar numbers andinternal numbers.
Element connection data.
EQEXIN maynotbepurged.
4.25.5 OutputDataBlocks
SLT -Static Loads Table.
GPTT -GridPoint Temperature Table.
4.25.6 Parameters
N_L_AD -
N_GRAV
N_TEMPOutput-integer-no default.
+lotherwise.
Output-integer-no default. -lifnoGRAV cards intheBulkDataDeck,
+lotherwise.
Output-integer-no default.-lifnoTEMP orTEMPO cards inBulkDataDeck
(orifGPTT ispurged), +lotherwise.-lifnostatic loads (i.e. SLTisnotcreated),
4.25-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.25.7 Method
Subroutine GP3isthecontrol program forthemodule. Itexecutes eachofthemajor
subroutines ofGP3(GP3C, GP3A,GP3B)depending onthestatus ofthedatablocks. Aflow
chartforGP3isincluded inFigure I.
4.25.8 Subroutines
4.25.8.1 Subroutine Name: GP3
I.Entry Point: GP3
2.Purpose: Module control program.
3.Calling Sequence: CALL GP3
4.25.8.2 Subroutine: GP3C
I.EntryPoint: GP3C
2.Purpose: Toconvert PLEAD2 datatoPLEADformat, merge PLEAD2 datawithPL@AD
data(ifpresent) andwrite theresulting dataonSCR2,ascratch file.
3.Calling Sequence: CALLGP3C
4.Method: PLEAD2 cardsarereadintocorefromGEOM3. Sixwordsareusedforeach
entry. Thefirstword(setidentification) issetnegative andthesixthwordof
eachentry issettozero. GERM2isopened andtheheader record isskipped. The
following stepsoccurforeachrecord onGE_H2.
I.The3-word header isread. /GPTAI/ (seesection 2.5)issearched foramatch. If
nomatchisfound, therecord isskipped andtheprocess isrepeated. Ifanend-of-
fileisencountered, step(3)isexecuted. Ifamatch isfound, atestonelement
typeismade. Ifaone-dimensional element, therecord isskipped andtheprocess
repeated. Otherwise, step(2)isexecuted.
2.Anentryofthecurrent element typeisread. Alinear search through thePLOAD2
dataincoreismadetofindamatch onelement identification (3rdwordofeach
PLOAD2 entry). Ifnomatchisfound, thenextentry isread. Foreachmatchwhich
isfound, thegrididentification numbers which connect theelement arestored
4.25-2&lt;/p&gt;
&lt;p&gt;DFUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)
inthecorresponding PLOAD2 entry andthefirst word ofthePLOAD2 entry isset
positive. Whenalldataforthecurrent element typehasbeenread, areturn to
step(1)ismade.
3.Apassthrough eachentry inthePLOAD2 dataismade. Foreachentry forwhich
thefirst word isnegative, anerror n_ssageisqueued andtheNOG_flagturned on.
Uponcon_letion ofthepass, PEXIT iscalled iftheNOGO flagwasturned on.
Otherwise step (4)isexecuted.
4.LOCATE iscalled toposition GEOM2 toPLOAD data. Ifnoneexists, step(5)is
executed. Otherwise, thePLOAD dataisreadintocorefollowing thePLOAD2 data.
Thecombined listissorted bySORTonsetidentification nu_er.
5.Thedataincoreiswritten asonelogical record onSCR2. Areturn toGP3isgiven.
Allocation ofcorestorage inGP3C isasfollows:
NPLD2
BUFIBefore conversion
PLOAD2 setID
Scale factor
Element ID
0
Sameformat asIst
entry
GINBbufferC[_MMI_N/GP3COR/Z( l)
l
Sixwords
per
p
PLOAD2
card
ILast NPLD2PLOAD2
entry
BUFIAfter conversion
+PLOAD2 orPLOAD set!D
Scale factor
Gridpoint ID1
Grid point ID2
Gridpoint ID3
Grid point ID4orO
Sameformat asIstentry
GINObuffer;ixwords
)erentry
4.25-3&lt;/p&gt;
&lt;p&gt;4.25.8.3
I.
2.
3.
4.
NTYPES
Note:MODULE FUNCTIONAL DESCRIPTIONS
Subroutine: GP3A
Entry Point: GP3A
Purpose: Toassemble toStatic Loads Table (SLT).
Calling Sequence: CALLGP3A
Method: GP3Aassembles theSLTbymaking twopasses ontheloadcards (FORCEi, M_MENTi,
etc). Onthefirst passeachofthecards isreadfromGERM3, (orSCR2forPLBAD
data), unique setidentifications areextracted andsaved incore, allexternal
point identifcations areconverted tointernal indices byperforming abinary search
intheEQEXIN table, thedataarewritten onSCRI, andpointer tables areaccumulated.
These tables areasfollows:
STATUS
Pointer inLISTtable tofirst entry ofcardtype
Pointer inLISTtable tolastentry ofcard type2words/entry
L_stEntrylentry per
cardtype
entry =(-l,-l)ifcardtypenotpresent
4.25-4&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)
NEQX
ILIST
NLIST
ISET
BUF2
BUFIC_IM_N/GP3CgR/Z(1)
External point ID
Internal index
LoadsetID
Pointer todata inset
No.ofdatawords inset
SetID2
SetIDl
GINObuffer
GINObuffer2words/entry
3words/entry
ILastentryintable
ilword/entryEQEXIN Table
(lentry per
point inmodel)
LISTTable
(lentry perset
t)ercardtype)
SetLIST
(lentry perset
percardtype)
Note:
SetIDsarestored backward incore.
ISET-I torecord entry, etc.ISETpoints tofirst entry,
4.25-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Attheendofthefirstpass,theLISTtableismoved tothebeginning ofopencore.
Thesetlistissorted, andduplicate setidentifications arediscarded. Theresulting
listisstored immediately following theLISTtable. Ifalldatafortheloadcards
willfitintheremaining core,thisdataisreadfromSCRI.
ILIST=I
NLIST
ISET
ITABL=NSET
BUFIfollows:
COMM_NIGP3C_RIZ(I )
SetID
Pointer todata inset
No.ofdata words inset
SetID1
SetID
n
Loaddata
GINO buffer3words/entry
ILastentry
Iword/entry
}Last entryCore storage isas
LIST Table
SetLIST
4.25-6&lt;/p&gt;
&lt;p&gt;4.25.8.4
I.
2.
o
4.FUNCTIONAL MODULE GP3(GEOMETRYPROCESSOR-PHASE 3)
TheSETlistiswritten intheheader record ontheSLT. Foreach setIDinthe
SETlist, theLISTtable issearchedforamatch. When found, thepointer
tothedataisfetched. Thedataaresorted ontheapplied point (except GRAVand
PLEAD data) andthedatawritten ontheSLT.Asaresult, eachlogical record of
theSLTcontains alldataforoneset. Finally, ifcombination loadcards are
present, theyarecopied fromGEgM3 tothelastrecord oftheSLT.
Ifcorewill nothold theentire loaddata, thelogic issimilar toabove except
thatSCRI ispassed onceforeachsetandonlyuatabelonging toasingle card
typewithin asetarereadintocore.
Subroutine Name: GP3B
Entry Point: GP3B
Purpose: Toassemble thegridpoint related temperature dataandstore ontheSCRATCHI
file.
Calling Sequence: CALLGP3B
Method: EQEXIN isread intocore. Alistofdefault temperatures (TEMPD cards
ifpresent) isreadfromGEgM3. Thetemperature data(TEMP cards) arereadto
determinethenumber oftemperature sets, thesetidentifications andthenumber
ofentries ineach temperature set. Foreachtemperature set,athree-word entry
iswritten intheheader record oftheSCRATCHI:
Word l=SetID
Word 2=default temperature (real) or-l(integer)
Word3=record number inSCRATCHI oftemperature dataforthesetorzeroifonly
default temperature isdefined.
GE(IM3 isbackspaced onelogical record. Thetemperature dataarere-read. Vhenall
temperature dataforasethavebeenreadintocore, thedataaresorted onpoint identi-
fication andwritten asonelogical record onSCRATCHI. Thisprocess isrepeated for
each temperature set.
Allocation ofcorestorage forGP3Cisasfollows:
4.25-7 (9/I/70)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
ITEMPD
ITABL+I
Nl
BUF2
BUFIC_MMONIGP3C_RIZ(1)
External point ID
Internal index
Temperature SetID
Default Temperature
Number ofdata words insetl
Point ID
Temperature
GINO buffer
GINBbufferi2words/entry
&amp;ndash;I 2words/entry
I1word/entry
2words/entryEQEXIN Table
(lentry Der
point inmodel)
Default temperature
1entryperset
Definition ofdata
intemperature sets
Temperature data
foroneset
4.25-8&lt;/p&gt;
&lt;p&gt;4.25.8.5
I.
2.
.
4.MODULE FUNCTIONAL DESCRIPTIONS
Subroutine Name: GP3D
Entry Point: GP3D
Purpose: Toprocess TEMPPI, TEMPP2, TEMPP3, andTEMPRB dataandassemble theelement
temperature table referred toastheGPTT.
Calling Sequence: CALLGP3D
Method: TEMPPI, TEMPP2, TEMPP3, andTEMPRB carddataarereadfromGERM3, converted for
GP3D&amp;rsquo;s useandwritten onSCRATCH2. Thegridpoint temperature dataheader isthenread
fromSCRATCHI (ascreated inGP3B). Asimilar header record isthenconstructed from
theunion ofthegridpoint temperature setdataandtheelement temperature setdata.
Thisiswritten onGPTT. Foreachtemperature set,forwhich there isother thana
default temperature available, arecord isthenwritten ontheGPTTcontaining specific
element temperature databyelement typeandelement identification. Allocation of
corestorage forGP3Disasfollows:
Element temperature setlist
data (2words/entry)
Gridpoint temperature set
listdata (3words/entry)
Gridpoint dataforcurrent
temperature set(2words/entry)
TEMPPI, TEMPP2, TEMPP3 datafor
current temperature set
(7/words/entry)
TEMPRB dataforcurrent setID
(15words/entry)
:unused
GIN_buffer
GIN_bufferZ(1)
Z(NL!ST)
Z(IGPTT)
Z(NGPTT)
Z(IGPT)
Z(NGPT)
Z(IETI)
Z(NETI)
Z(IET2)
Z(NET2)
Z(BUF2)
Z(BUFI)
4.25-8a (9/I/70)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGP3(GEOMETRYPROCESSOR-PHASE3)
4.25.9Design Requirements
4.25.9.1 Allocation ofCore Storage
Thecorestorage mapspresented inthemethod sections ofGP3A, GP3BandGP3C provide
detailed storage requirements. Asummary ispresented here.
GP3C: Maximum requirement =6*(number ofPLEAD2 +number ofPLEAD cards) +one
GIN_buffer.
GP3A: LetNPTS=number ofgrid+number ofscalar points andNSETS =(number ofload
sets) &lt;em&gt;(number ofcardtypes perloadset)andSYSBUF =oneGIN_buffer.
Thenmaximum storage requirement equals MAX((2&lt;/em&gt;NPTS+4&lt;em&gt;NSETS+2&lt;/em&gt;SYSBUF), (4*NSETS +MAX
(number ofwords foronesetofonecardtype) +SYSBUF))o
GP3B: Seestorage map.
4.25.9.2 Environment
I.Block Data
Theblock dataprogram GP3BD initializes /GP3C_M/withGIN_filenames, datadefining
theloadcards andother miscellaneous data. Itmustberesident incorewhen GP3is
executed.
2.General
/GPTAI/isusedbyGP3Candmust becoreresident when GP3isexecuted. Opencore is
defined by/GP3C_R/.Thenormal overlay istoinclude GP3BD, GP3,GP3C, GP3A, GP3B in
onesegment. GP3usestwoscratch files.
4.25.10 Diagnostic Messages
Thefollowing messages maybeissued byGP3:
2008, 2009, 2015, 3008, 4010, 4011, 4012. SeeSection 6oftheUser&amp;rsquo;s Manual fordetails.
4.25-9 (IIII170)
I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P41</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_041/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
GP3
_ENTER
RDTRL)FReadTrailer]zLon_E_M3/&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;_Yes
Build PLEAD
DataonSCR2RDTRL
Purged?
No
k_AD2 Cards
_nGERM2?
\ Yes
&lt;br&gt;
&lt;br&gt;
GP3C
[Assemble SLT]\ _
onGPTT &lt;br&gt;
_RDTRL &amp;gt;Read Trailer]
JLonSLT
/
Yes
Norprocess TEI_P/LandTEM_DData]
/
GP3B &lt;em&gt;pr°cessTEMtPI&#39;2&#39;3]4JlandTE&lt;/em&gt;,PPB Data
andAssemble
GP3D &amp;gt;/LGPTT &amp;rsquo;
Figure I.Flowchart formodule GP3
4.25-I0 (911170)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE TAI(TABLEASSEMBLER)
4.26 FUNCTIONAL MODULE TAI(TABLE ASSEMBLER)
4.26.1 EntrXPoint: TAI
4.26.2
TAIprocesseselement connection data,elementproperty dataandgeometry.Thesedataare
merged intwodifferent sorts forefficiency inlater processing. TheElement Sumary Table
contains, foreachelement, connection, property andgeometry data.TheElementConnection
andProperties Table contains, foreachgridorscalar point inthemodel, connection, property
andgeometry dataforallelements connected tothepoint. Elementtemperature dataarealso
included forbothdatablocks where applicable. Additionally, general elements areprocessed
andtheGEI(General Element Input) datablock isassembled.
4.26.3 DMAPCallin) Sequence
TAI, ECT,EFT,BGPDT,SIL,GPTT,CSTM/EST,GEI,ECPT,GPCT/V,N,LUSET/V,N,NSIL/V,N,N_SIMP
/C,N,O/V,N,N_GENL/V,N,GENEL $
4.26.4 Input DataBlocks
ECT -Element Connection Table.
EPT -Element Properties Table.
BGPDT -Basic GridPoint Definition Table.
SIL -Scalar Index List.
GPTT -GridPoint Temperature Table.
CSTM °Coordinate System Transformation Matrices.
Note: TheECT,BGPDT andSILdatablocks maynotbepurged.
4.26.5 Output DataBlocks
EST -Element Summary Table.
GEI -General Element Input.
ECPT -Element Connection andProperties Table.
GPCT -GridPoint Connection Table.
Not____e: Nooutput datablock maybepurged.
4.26-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.26.6 Parameters
LUSET
NSIL
N_SIMPInput-integer-no default.
Output-integer-no default.
inthemodel.
NOGENL -
GENEL -
4.26.7 MethodDegrees offreedom intheg-displacement set.
Number ofgridpoints plusnumber ofscalar points
Output-integer-no default. Number ofelements inthemodel (exclusive of
general elements) or-Iifnoelements.
Output-integer-no default. Number ofgeneral elements inthemodelor-I
ifnogeneral elements.
Output-integer-no default. GENEL=-NOGENL.
4.26.7.1 General Comments
Thepurpose oftheTableAssembler Module istocombine alloftheelement dataina
convenient formforthegeneration ofthestructural matrices (ECPT) andforthecalculation ofthe
element stresses andforces (EST), Thecomplete description ofanelement requires: (I)the
locations oftheconnected gridpoints, (2)necessary orientation dataandendconditions,
(3)element properties, (4)amaterial reference, (5)transformations fromthebasicsystem
totheglobal coordinate system and(6)element temperature. Scalar elements require no
geometric ormaterial data. General elements mayrequire geometric data.
Fourdatablocks areformed inthismodule. TheECPTdatablockisusedinstructural
matrix generation. Itcontains allelement dataforeachgridpointorscalar pointinthe
orderofthesequenced gridpointnumbers (internal gridpoint indices). TheESTdatablock
contains element dataingroups ofelement typeandwithsequential element I.D.numbers
within eachgroup. Itisusedtocalculate element stresses andforces inaconvenient order
foroutput. TheGEldatablockcentains ti_egeneral element flexibility andsupport matrices.
TheGPCTdatablockisusedtoallocate storage inthestructural matrix assemblers.
Thereason forassembling theECPTandESTtables rather thangenerating functions such
aselement stiffness matrices andstress functions istheexpected sizeoftheproblems. The
computing timeusedtorecalculate certain dataisexpected tobecompensated forbythetime
savings thatresult fromsorting andmerging smaller tables.
4.26-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE TAI(TABLE ASSEMBLER)
Subroutine TAIisthemaincontrol program forthemodule. Itexecutes eachofthe
major routines oftheTable Assembler (TAIA toassemble theEST,TAIB toassemble theECPT
andGPCT, andTAICtoassemble theGEl)depending onthestatus ofthedatablocks anddata
fortheproblem. Aflowchart ofTAIisincluded asFigure I.
4.26.7.2 TAIA
Assembly oftheElement Summary Table isperformed intwosteps. Forthefirst step,
theEPTisreadintocoreoneproperty typeatatime. TheECTisreadoneelement atatime.
Foreachelement thereferenced property dataarefound byperforming abinary search inthe
EPTincore. TheECTandEPTdataarewritten onSCRI, ascratch file, oneelement atatime.
onelogical record perelement type.
Toinitiate thesecond step, theBGPDT andSILdatablocks arereadintocore. Ifa
temperature setisselected, theappropriate temperature datafromtheGPTTarereadintocore.
Data fromSCRIarereadoneelement atatime. Internal indices forthegridpoints areused
aspointers intotheBGPDT andSILtables. Thetemperature oftheelement isextracted from the
GPTT,data block. Eachtemperature isfound byperforming abinary search intheGPTTwiththe
element identification number. Iftheentry isnotfound intheGPTT, thedefault temperature for
thesetissubstituted. Theinternal indices arenowreplaced with corresponding scalar index
values. Alinecomprising ECT,EPT,BGPDT andGPTTdatafortheelement iswritten ontheEST.
Each logical record oftheESTcomprises alldataofoneelement type.
4.26-3 (llll/70)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
Allocation ofcorestorageduringthesecondstepisasfollows:
C_MM_N/TAAI/Z(1)
L_CBGP=I Coordinate system ID
NBGP
NBGP+I
ITMP
BUF2
BUFfx
Y
z
SILl
SIL2
Element typeandN
Element ID
Temperature data
GINBbuffer
GINBbuffer4words/entry
}1word/entry
IN+Iwords/entryBGPDT table
oneentry perpoint
inproblem
SILtable
oneentry perpoint
inproblem
GPTTtable
oneentry per
defined element
4.26.7.3 TAIB
TheECPTdata block isassembled inTAIB. Eachlogical record intheECPT corresnonds toa
gridorscalar point inthemodel. Foreachpoint, thedata fareachelement connected tothe
point arelisted. Thedataforeach element areidentical totheESTdata. Each setofelement
datawill belisted intheECPT&amp;quot;n&amp;quot;times, where &amp;ldquo;n&amp;quot;isthenumber ofgridpoints connected bythe
element. Asample oftheECPTisgiven inTable I.Thelogical phases oftheoperation areas
follows:
Alistisformed incore giving therelative locations oftheelements intheECTdata
intheorder which theywillbeplaced intheECPTdatablock. Storage isallocated by
4.26-4 (ll/I/70)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULETAI(TABLE ASSEMBLER)
forming theGPC(Grid Point Counter) andthenreplacing theGPCbyarunning sumof
elements connected topoints. Asample is:
IMplied GPC GPCS
GridPoint Nun_er of SumofPrevious
internal index Connected Elements Elements
(1) 5 0
(2) 3 5
(3) 1 8
(4) 2 9
(5) 6 ll
17
TheGPCisformed asfollows. Anareaofcoreequal tothenumber ofgridandscalar
points ofthemodel issettozero. TheECTisreadoneelement atatime. Thestorage
location corresponding totheinternal index ofeach referenced grid point isincremented by
one. Wheneach element intheECThasbeenprocessed, arunning sumofthecoretable is
formed.
Thecontents ofeachword intheGPCnowprovide apointer tothefirst storage location
where asecond pointer totheelement datawillbestored. Since thetotal nun_er ofconnected
elements mayexceed available corestorage, spill logic isprovided. Abandofentries inthe
GPCisdetermined. TheECTisreadoneelement atatime. Theposition ofeachelement of
agiven element typeisdetermined bysumming thenun_er ofwords foreachentry forthe
element (i.e. ifm=number ofwords perECTentry, thentheposition oftheelement inthe
ECTrecord =(i-l)*m where i=entry number intheECTrecord). Foreachpoint referenced by
theelement (which isinthebandcurrently being processed), thecontents oftheassociated
position intheGPCisfetched. Theelement position anditstype arestored attheindicated
locations.
Thelocation intheGPCisincremented byone.WhenapassoftheECTiscomplete, the
skeleton ECPT iswritten, onelogical record perpoint intheband ofthecurrent pass. Each
4.26-5&lt;/p&gt;
&lt;h1&gt;MODULEFLINCTIONAL DESCRIPTIONS
logicalrecordconsistsofpairsof(-l,elementpointer).
numberofelementsconnectedtothepoint.Example:
C_MMON/TAA2/Z(1)
1
IECPTO
/
codeforelement
type (l=BAR)6
)I23
I
r/&amp;ndash;1i 0I
15l 36
I/8o3I
I
1I 16
1I 0
IThenumber ofpairs equals the
GPC
Storage forthe
3element pointers
connected togridpoint l
Stcrage forthe
2element pointers
connected togridpoint 2
)osition ofelement inECTrecord
Skeleton ECPTdataiswritten onascratch file:
-l
I
11 0
I
-l
15, 36
I
-l
I
3t 80
I
-I
I1= 16&lt;/h1&gt;&lt;p&gt;-I
I1_ 0
ILogical record l
(allelements connected
togridpoint l)
Logical record 2
(data forgridp:)int 2)
4.26-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL _DULETAI(TABLEASSEMBLER)
WhenallentriesoftheGPChavebeenprocessed, theskeletonECPTiscomplete.
Anareaofcoreequaltotwowordsperelementtypeissettozero.TheECTisreadintocore
following theabove table until either theECTisexhausted orcoreisfilled. Apointer to
thebeginning ofdataforeachelement type isstored inthetable. Theskeleton ECPTis
nowreadonepairofwords atatime. Ifthedatatowhich theelement pointer points are
currently incore, theyarewritten outonasecond scratch file. Thefirst word oftheentry
contains thenumber ofwords intheECTdata. Ifthedataarenotincore, thepair (-l,
element pointer) iswritten onthesecond scratch file. This process isrepeated until the
skeleton hasbeenexhausted. IfalltheECTisincore, thenewskeleton ECPTiscomplete.
Otherwise, thefiles foroldandnewskeleton ECPTareswitched, andtheprocess continues by
reading moreoftheECTdataintocore. Storage allocation atthispoint follows:
N21CCMM_N/TAA2/Z(1)
Pointer toECTdataforIstelement type _2
J SumofECTwords readonprevious passes
ECTdataforIstelement type
ECTdatafor2ndelement typewords/entry oneentry
per
element
type
4.26-7&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
TheremainderoftheECPTassemblyisverysimilartotheESTconstruction. The
principaldifference isthattheentireEPTisheldincore.Apointertablesimilartothe
ECTtableisformed(twoentriesperelementtype).TheEPTisreadintocore,andthefirst
positionofeachEPTtypeisstoredinthetablealongwiththenumberofEPTentriesofthat
type.IftheBGPDT,SILandGPTTcanbeheldincorewiththeEPT,theECPTisassembled
inonepass.Otherwise, twopassesaremade.TheskeletonECPTisreadoneentryatatime.
Foreachelement,thepropertydataareattachedbyperforming abinarysearchintheassociated
propertytableincore.Ifonepass,theBGPDT,SILandGPTTdataareattachedasinTAIA.
OtherisetheECTandEPTdataarewrittenonascratchfile,andasecondpassismadetoattach
theBGPDT,SILandGPTTdata.Table1containssampleECPTcontents.
DuringthefinalpassoftheECPTassembly,theGPCTisconstructed. TheGPCTis
comprisedofonelogicalrecordperpoint(sameasECPT).Eachlogicalrecordconsistsofthe
pivotpointandallotherpointsconnectedtothepivotbymeansofelementconnections.
4.26-8&lt;/p&gt;
&lt;p&gt;FUNCTIONALMODULE TAI(TABLE ASSEMBLER)
Table I.Sample ECPTDataContents.
Reference Grid Point First Scalar Index
(Pivot Point)
IstElement Type
Connected Grid Point First Scalar Indices
(From ECTandSIL)
Anisotropic Angle(From ECT)
Material Number (From EPT)235
9(Triangular membrane)
625
235
535
0.0
IstElement Properties (From EPT)
Location andOrientation DataforGrid
Points
(From BGPDT)
E!e__nt Temperature (FromGPTT)
2ndElement Type0.5
0.0
l.O
5,I0.0, I00.0,0.05,If.O, lO0.O, 0.0
O,235.0, 50.0, 25.0
15.5
34(Bar)
etc.
LastElement Type (forpoint235) l(Rod)
EndofLogical Record (newgridpoint)
Reference GridPoint First Scalar Index
(Pivot Point)etc.
etc.241
4.26-9&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.26.7.3TAIC
TheGeneralElementflexibility andsupportmatricesareassembledinTALC.Thedata,
givenintheECTdatablock,consistofthefollowingsectionsforeachGeneralElement:
I.Alistoftheindependent degreesoffreedom,ui,intermsofgridpointsand
components and/orscalarpoints.
2.Alistofsupporting degreesoffreedom,ud,givenbygridandscalarpoints
(Maybenull).
3.Aflexibility matrix[Z]withrowsandcolumnscorresponding tothelistofgiven
uipoints.
4.Asupportmatrix[S]withrov,scorresponding totheuipointsandcolumns
corresponding totheudpoints.(Maybenull).
ThetasksofTAICareto(1)convertthelistsofuiandudtoscalarindicesandsort
thembyincreasing scalarindex,(2)rearrangethematricestocorrespond tothesortedlists
ofuianduddegreesoffreedom,and(3)onuseroptioncalculatethesupportmatrixfromgrid
pointgeometry.
Thesetasksareaccomplished asfollows:
I.Foreachsetofcoordinates (uiandud)oflengthn,a4xntableisformedwhere
thefourentriescorresponding toeachdegreeoffreedomare:
a)Thepositionasgiven(l,2,3&amp;hellip;n)
b)Theinternalposition(zeroinitially)
c)ThegridorscalarpointI.D.(Internalindex)
d)Thegridpointcomponent(l=x,2=y,etc)
2.Thelistissorted onthethird andfourth position. Ifapoint I.D.inthethird
position isduplicated, theduplicates aresorted onthecomponents inthefourth
position. Thelistnowcorresponds tothedesired order ofircreasing scalar indices.
3.TheSILdatablock isread, andeachofthepoints inthelist isconverted toits
SILvalue. (Theposition ofaSILnumber isitsinternal point index.) TheSIL
value andthecomponent cidetermine thescalar index, Ni,ofadegree offreedom by:
4.26-I0&lt;/p&gt;
&lt;p&gt;FUNCTIONAL HODULETA](TABLEASSEMBLER)
Ni=SIL+(ci-l) {l)
forgridpoints and
forscalar points.
.
5.
6.Ni=SIL (2)
Thelistofscalar indices iswritten ontheGEIdatablock file.
Inordertorearrange thematrices tocorrespond totheproper sequence ofdegrees
offreedom theabove listismodified asfollows:
a)Theinternal position nu_er isplaced inthesecond position ofeachentry in
thelist. Thefirst entry usesl,thesecond, 2,etc.
b)Thelistissorted again toreturn theoriginal orderasgiven ontheinput card
images. Thefirst position ofeachentry supplies thisorder. Theinternal
position ofaterminamatrix isnowgiven bythesecondnumbers ineachentry.
Steps (1)through (4)arerepeated forboththeuiandudsets.
The[Z]and[S]matrices arerearranged according tothesorted lists ofdegrees
offreedom. Therowandcolumn numbers areconverted bythealgorithm:
a)ForatermofZij,where iandjaretherowandcolumn asgiven bythematrix
order,theposition ioftheuiirternal number listgives 4,thenew
column nu_er.
b)ForatermofSij,where iandjaretheexternal rowandcolumn numbers, the
rownumber iisconverted using theuilist. Thecolumn number jusesthe
udlist.
Ifamatrix issmall enough tofitincore, thenewrowandcolumn numbers
areusedtoplace theterminitscorrect position incore. Ifthematrix
will belarger thancore, thenewrowandcolumn indices andtheterm itself
arewritten onascratch file. Whenallterms areprocessed, thefileis
sorted toformasequenced matrix. Theterms ofthematrix arewritten on
theGElfileinfullmatrix form.
4.26-II&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.26.7.4 TAICA
The[S]matrix must begenerated fftheuser inputs alist ofsixudpoints anddoes
notsupply anIS]matrix. This isaccomplished insubroutine TAICA asfollows:
TheBGPDT andCSTM data areread into core. (SIL isalready incore).
Asixbysixmatrix [Do] isformed, where each rowcorresponds toaudscalar index (j).
IDol isasixbysixmatrix which transforms thethree translations andthree rotations
inthebasic coordinate system tothesixrigid body uddegrees offreedom:
lu ,}=foolxo
Yo
zo
0x
0z
basic(3)
Thesteps forgeneration ofeach rowof[D]areasfollows:
I.Xj,Yj,ZjtheBGPDT location vector forthegrid point containing scalar point jis
found.
2.[Tj] the3x3global-to-basic transformation matrix forthegrid point containing j
isfetched using subroutine MAT.
3.Ifscalar jisatranslation, define:
[Ej]II 0 0 0 Zj -YjiI0 1 0 -Zj 0 Xj
0 0 l Yj -Xj 0(4)
Thecolumn of[Tj] corresponding tothedegree offreedom jisdefined asthe
rowvectorIVj} T.Therowvector of[Do]corresponding topoint jis:
4.26-I?&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE TAI(TABLE ASSEMBLER)
{Doj}T:{Vj}T[Ej]. (5)
4.Ifscalar jisarotation, thecolumn of[Tj]corresponding tothedegree of
freedom jisdefined astherowvector {Vj}T.Therowvector of[Do]corresponding to
point jis:
{Doj}T T}. (6) ={00O:Vj
When all6rows[DO]havebeengenerated, thematrix isinverted:
[Hdo]:[Do]&amp;rsquo;l . (7)
[Hdo]transforms theuddisplacements torigid bodymotions about thebasic
coordinate system, i.e.:
IXoYo
Zo
I8x°Byo
8zo=[Hdo]{ud} (8)
basic
Ifthematrix isill-conditioned, afatal error exists.
The[S]matrix maynowbecalculated arowatatime. Thelistofuipoints, (si), is
readoneatatime, andthe[S]matrix isformed arowatatime. Calleach row{Si}T.
Thesteps forgeneration ofeach rowareasfollows:
I.Using thebasic coordinates Xi,Yi&amp;rsquo;Ziforthegridpoint corresponding toscalar si,
theglobal-to-basic transformation matrix ITi]isfetched.
2.Thecolumn ofITi]corresponding tothescalar coordinate ofuiisdefined astherow
vector {Vi}T.
4.26-13&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
3.Ifuiisatranslation, weform
II000Zi[E] = O 10-Zi0
00 lYi-Xi
and
4.Ifuiisarotation:
&lt;em&gt;s&lt;/em&gt;=iooo:vTl[,o_]
4.26.8 Subroutines
4.26.8.1 Subroutine Name: TAI
I.Entry Point: TAI
2.Purpose: Module driver.
3.Calling Sequence: CALLTAI
4.26.8.2 Subroutine Name: TAIA
I.Entry Point: TAIA
2.Purpose: Toassemble theEST.
3.Calling Sequence: CALLTAIA
4.26.8.3 Subroutine Name: TAIB
I.Entry Point: TAIB
2.Purpose: Toassemble theECPTandGPCT.
3.Calling Sequence: CALLTAIB
4.26.8.4 Subroutine Name: TAIC
I.Entry Point: TAICvi1Xi
0(9)
(lO)
(ll)
4.26-14&lt;/p&gt;
&lt;p&gt;2.
3.
4.26.8.5
I.
2.
3.
4.26.9
2.26.9.1
TAIA.
TAIB.FUNCTIONAL MODULE TAI(TABLE ASSEMBLER)
Purpose: Toassemble theGEI.
Calling Sequence: CALL TAIC
Subroutine Name: TAICA
Entry Point: TAICA
Purpose: Tocalculate thegeneral element support matrix [S].
Calling Sequence: CALL TAICA
Design Requirements
Allocation ofCore Storage
Step (1): Maximum core storage equals allproperty data foroneelement type
plus three GINB buffers.
Step (2): Maximum core storage equals 5*(number ofgrid andscalar points in
model) plus 2*(number ofgrid point temperatures inselected set) plus twoGIN_
buffers.
Theinitial steps ofTAIB areopen ended. Thefinal assembly oftheECPT requires
that allEPTdata beheld incore atonetime. Atanother time thesame storage
requirement asTAIA exists plus additional storage tohold alist ofthemaximum
number ofpoints connected toanyonepoint bymeans ofelement connections.
4.26-15 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
TAIC.Themaximum storage requirement equals 5*(number ofgridandscalar points
inthemodel) plustheCSTMtableplus4*(number ofui+number ofudpoints)
plusthreeGINQbuffers.
4.26.9.2 Environment
TAIisdesigned toalloweachofthemajor phases ofthemodule tobeinaseparate
overlay segment. Opencoreforeachisdefined asfollows:
TAIA: /TAAI/
TAIB: /TAA2/
TAIC: /TACl/
GIN_filenamesandDMAPparameters arecommunicated through blankC_MM@N. Noblock
dataprogram isused. Communication between TAICandTAICAoccurs through /TAICAX/ and/TACI/.
4.26.10 Diagnostic Messages
Thefollowing messages maybeissued byTAI:
2010,2011,2013,2014,2015,2044,2045,2063,2082
4.26-16&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE TAI(TABLE ASSEMBLER)
TAI
ENTER
+
Initialize IGINgFile
Names
+
&lt;!-- raw HTML omitted --&gt;-IReadTrailerqLonGCPT ]
+
SetforFlag I Approach
&amp;lt;RD_TRL &amp;gt;&amp;rdquo;_-Read Trailer7
-L oRECT __
+
Setflag Iforgeneral
elements
Approach
FlagForce
Displacement
TAIA _{ AssembleEsT ]
Assemble ] TAIB ECPT,GPCT
General
&amp;lt;&lt;em&gt;lement
_n
TAIC&lt;/em&gt;=[Assemble ] GEl
Figure l(a).SetF1ag
forEach
Super
Element
Type
Test
forAny
Super
Elements
Absent
TAIA
Test
General
Element
Flag
TAIC
Flowchart formodule TAIPresent _&amp;gt;
Assemble 1 EST
Off
Assemble ] GEl
4.26-17&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
FAssembleEsT ]
_Initial
I TAIA &amp;gt;&amp;quot;
.[Assemble]
&amp;ldquo;&amp;ldquo;LECPT ]
TAIB &amp;gt;&amp;rdquo;
FAssemble
\C.-_Portion ofSEST]
TAID /
J
_Absent
_o-_tanerj
IPresent FAssemble
,,&lt;em&gt;PortionofSEST]
TAID 1 Absent
FAssemble
Iwresen&lt;/em&gt; |Portion
,v ,-&amp;ldquo;LofSEST
Absent
TPresent FAssemble]
_Portion |
,&amp;lsquo;L0f SEST]
TAIF 1
I_FAssemble 7
&amp;lt; TAIG _LFinalEST]
Figure l(b). Flowchart formodule TAI
4.26-18&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SI_I (STRUCTURAL MATRIX ASSEMBLER -PHASE I)
4.27
4.27.1
4.27.2FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)
Entry Point: SMAI
Purpose
•KxTogeneratethestiffnessmatrix exclusive ofgeneral elements [gg], thestructural
damping matrix,[K_gl, andtheGridPoint Singularity Table, GPST.
4.27.3 DMAPCalling Sequence
SMAI CSTM,MPT,ECPT,GPCT,DIT/KGGX,K4GG,GPST/V,N,NOGENEL/V,N,NOK4GG $
4.27.4 Input DataBlocks
CSTM
MPT
ECPT
GPCT
UII
4.27.5Notes:
KGGX
K4GG
GPST
Notes:-Coordinate System Transformation Matrices.
-Material Properties Table.
-Element Connection andProperties Table.
-GridPoint Connection Table.
-Direct Input Tables.
I.TheCSTMmaybepurged.
2.TheECPTandtheGPCTcannot bepurged, orelse afatal error willoccur.
3.Ifsomeelement references amaterial property, theMPTcannot bepurged.
4.Ifsomematerial property istemperature dependent, DITcannot bepurged.
Output DataBlocks
-Partition ofstiffness matrix exclusive ofgeneral elements -gset.
-Partitionofstructural damping matrix -gset.
-GridPoint Singularity Table.
I.Neither KGGXorGPSTmaybepre-purged.
2.IfK4GG ispre-purged, K4GGwillnotbegenerated.
3.IfN_GENL &amp;gt;0(seebelow) theGPSTwill notbegenerated.
4.27.6 Parameters
NOGENL Input-integer-no default value, i_OGENL isthenumber ofgeneral
4.27-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P42</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_042/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
elements inthemodel, IfN_GENL &amp;gt;0thenGPSTwillnotbegenerated.
N_K4GG -Output-integer-no default value. IfK4GGhasbeenpre-purged oristhe
zeromatrix, N_K4GG issetequal to-I.Otherwise NOK4GG isset=+I.
4.27.7 Method
Matrix generation modules suchasSMAI,SI.&lt;em&gt;2,DSMGIandPLA4allusetheECPT(or a
variation thereof inthecaseofPLA4)anditscompanion datablock, theGPCT,asthebasic
datablocks forgeneration ofstiffness andstructural damping matrices (SMAI), massand
viscous damping matrices (SMA2), thedifferential stiffness matrix (DSMGI), andthenon-
linear stiffness matrix (PLA4). Thecentral roleoftheECPTdatablockinthesemodules
isdiscussed insection 1.8.
Subroutine SMAIisthemodule driver. Itstasksare:tosetupGIN_buffers andmatrix
control blocks fortheoutput matrices; todetermine iftheCSTMdatablockexists, and,
ifitdoes,toreaditintoopencoreandcalltheinitialization routine PRETRD; tocall
thematerial properties initialization routine PREMAT, where material property cardsand
tables arereadintoopencore;toopenandposition allfilessothatinputdatablocks
arereadytobereadandoutput datablocks arereadytobewritten; tocallsubroutine SMAIA,
themodule &amp;ldquo;workhorse&amp;rdquo;, whichwillcreate theoutput datablocks. Uponreturn fromSMAIA,
filesareclosed andtrailers arewritten. Subroutine descriptions forPRETRD andPREHAT
canbefoundinsection 3.4.37 and3.4.36 respectively.
Subroutine SMAIAconsists entirely ofaloopinwhich, during eachpassoftheloop,a
record oftheGPCTandarecord oftheECPTareprocessed inacomplementary manner. Each
passthrough thisprincipal loopcreates either oneorsixrows(orcolumns since[K_g].and
[K_g]aresymmetric ofthestiffness matrix, KGGX,(andthestructural damping matrix, K4GG,
ifcalled forintheDMAPcalling sequence). Onerowwillbegenerated ifthepivotpoint,
thefirstwordofboththeGPCTrecord andtheECPTrecord, isascalar point; sixrowswill
begenerated ifthepivotpointisagridpoint. Thelatter caseholdsinthemajority of
cases. Theloopisterminated whenanend-of-file issensed onthefilecontaining theGPCT.
Theloon, h_oin_k&lt;/em&gt;&amp;hellip;.hy&amp;mdash;-&amp;rsquo;&amp;rsquo;.&amp;rsquo;&amp;rsquo;&amp;quot;&lt;em&gt;&lt;em&gt;t*:m&lt;/em&gt;+&lt;/em&gt; to&amp;hellip;.,:au theFirst twowords ofthecurrent GPCT record.
Ifthesecond non-standard return from subroutine READ occurs, itimplies thecurrent pivot
point hasnoelements connected toitsothat oneorsixnull rows must beoutput forthe
4.27-2&lt;/p&gt;
&lt;p&gt;FUNCTION#_ MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I)
matrices. This non-standard return, itshould benoted, doesnotoccur inthemajority ofcases.
Anor_l return fromREADimplies anormal paththrough theprincipal loop. Theremainder ofthe
GPCTrecord isreadintocore, andapointer table isconstructed. Thispointer table relates
thescalar index numbers oftheGPCTrecord, which arethecolumn indices ofthe(possible) non-
zeroterms ofthegenerated matrices, tolocations incore inwhich thecorrespondinq submatrices
will reside. Thepointer table isdefined recursively asfollows:
Pl=l (I)
Pi=Pi-l+q&amp;rsquo;i&amp;gt;l (2)
where qis6ifthepoint (i-l) isagridpoint andqislifthepoint (i-l) isascalar point.
Itisthendetermined ifallthesubmatrices corresponding tothecurrent pivot point
canbeheld inopencore. Iftheycan, there isnoproblem. Iftheycannot, spill logic
isprovided only ifthestructural damping matrix isnotcalled for. Rather thancompute all
submatrices, store themonascratch file, retrieve themwhen computations havebeencompleted
andsortthem, thefollowing approach wasadopted. Itisdetermined what themaximum number
ofrowsthatcanbeheldincoreis:3,2orI.Theelement submatrices arecomputed in
their respective routines (i.e. KR_D, KBAR) andpassed tothe&amp;quot;insertion&amp;quot; subroutine, SMAIB,
which &amp;ldquo;inserts&amp;rdquo; intothecorrect opencorepositions only those rowswhich canbecontained.
When theECPTrecord isexhausted, thelinkvector, LINK, (seediscussion below ofthe
LINKvariable in/SMAICL/)issearched todetermine ifanystructural element entries inthe
ECPTwere skipped because thecorresponding element subroutine didnotreside inthelink
(element subroutine overlay segment) currently incore. Ifthere didexist suchanelement,
theECPT fileisbackspaced andtheECPTrecord isreprocessed suchthatallelement sub-
matrices notcomputed ontheprevious pass(es) oftheECPT record will becomputed. If
(orwhen) theLINKarray isidentically zero, signifying thatallelement submatrices
corresponding tothecurrent passoftheECPTrecord havebeen computed, theDETCK subroutine
iscalled iftheinput parameter N_GENL _0. DETCK generates theGPSTbyexamining the
&amp;ldquo;translational&amp;rdquo; and&amp;quot;rotational&amp;quot; diagonal 3X3submatrices ofthe6rowsoftheKGGXmatrix
currently incore. Ifthetotal number ofrowstobecomputed (6orl)forthecurrent ECPT
record isnotincoreduetospill problems, DETCK stores those elements ofthe3X3sub-
4.27-3&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
matricescurrentlyincoreinlocalvariablesandthenDrocessestheentire3x3submatrices on
thelastpassoftheECPTrecord(seedefinitions ofthevariablesLR_WICandNR_WSCin/SMAICL/
below).
After DETCK returns, thenumber ofrows incorearepacked ontotheKGGX(and, ifcalled
for,theK4GG) datablock(s) using thestandard matrix packing routines BLDPK, ZBLPKI and
BLDPKN. Ifthelastrowincore isnotequal tothetotal number ofrowstobecomputed,
theECPTfileisbackspaced andtherecord isprocessed again, thistimethenextsetof
3,2orlrowsbeing output. Ifthelastrowincoreisequal tothetotal number of
rowstobecomputed, theprocessing oftheECPTrecord iscomplete andatransfer ismade
tothetopofthe&amp;quot;GPCT andECPTprocessing&amp;quot; looptoprocess thenextrecord oftheGPCTand
ECPT. Theloopterminates when anend-of-file isencountered while attempting toreadthe
GPCT. Upon looptermination, SMAIA returns toSMAI.
Itshould benoted thatthemostdifficult logic oftheroutine involves theLINK
vector andthespill logic. Theprogrammer isadvised thattheLINKvector logic will notbe
usedonanyoftilecurrent hardware/software configurations because l)theroutine residing
insegment (link) 2,KCONE, cannot beused inconjunction with anyother structural element
routine and2)theaxisymmetrical element routines KTRIRG, KTRAPR andKT_RDR cannot (from a
mathematical modeling point ofview) beused inconjunction with anyother structural element
routines. Thespill logic isveryseldom entered since forthemajority ofcases thegeometry
ofthemathematical model issuchthatthenumber ofwords inanyGPCT record -andhence the
number of(potentially) non-zero columns inanysixrowsofthematrix -isgenerally quite
small. Ahighupper limit forthenumber ofwords inanyGPCT record would be40.
4.27-4&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESI_l(STRUCTURAL HATRIXASSEMBLER -PHASE I)
4.27.7.1 Determining GridPoint Singularities inSubroutine DETCK
Letthepivot point beagridpoint with scalar index pinthefollowing discussion.
Let[Q]bethe&amp;quot;translational&amp;quot; or&amp;quot;rotational&amp;quot; 3x3symmetric submatrix along thediagonal
ofthestiffness matrix, [K_g],_ i.e., therowsandcolumns ofthe&amp;quot;translational&amp;quot; [Q]matrix
would correspond toscalar index numbers p,p+l,andp+2;andtherowsandcolumns ofthe
&amp;ldquo;rotational&amp;rdquo; [Q]matrix would correspond toscalar index numbers p+3, D+4,andp+5.
Thefollowing steps comprise thealgorithm fordetermining thepresence orabsence of
gridpoint singularities. Thediscussion assumes [Q]isthe&amp;quot;translational&amp;quot; 3x3matrix butthe
samealgorithm holds forthe&amp;quot;rotational&amp;quot; [Q].
I.Thematrix [Q]isscaled bythemagnitude ofthelargest term, Qmax:
[B]:_ (3)
Qmax&amp;quot;
ifthelargest term isnon-positive, thesingularity isoforder 3,andthescalar index
numbers p,p+landp+2arewritten ontheGPST.
2.Thevector magnitudes of3xlcolumns (rows) arecalculated:
i,_B 2 2 2 bz= +B+B, (4)
11 12 13
,,%_B2 B2B2= + + , (5)b2 21 22 23
J 2 2 2b3=+B+B• (6)
31 32 33
3.Foreachbi=O,thesingularity order counter IgRDER isincreased byone.
4.Iftwobiarezero, theorder ofthesingularity istwo,andthescalar index numbers
jandkcorresponding tothese tworowsof[B]arewritten ontheGPST.
4.27-5&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
5.Ifonebiiszero,andiistherowsuchthatbi=O,define jandkastheother rows
of[B]andcalculate:
Bjj Bik_ m:det
L_k,i BkkJ(7)
R=&lt;em&gt;iB_j+B_j)(B;k +B_k) (8)
If&lt;/em&gt;&amp;lt;lO-2,theorder ofthesingularity is2andtheGPSTcontains thepaired scalar
index values fori,j,kintheorder (1)(i,j) ifBkk&amp;gt;0or(2)(i,k) ifBjj&amp;gt;O.
m
If_lO-2,theorder ofthesingularity isoneandonlytheSILvalue foriiswritten
ontheGPST.
6.Ifallb.&amp;gt;O,wecalculate1
D=det[B] (9)
IfD&amp;gt;.5xlO-2x(blb2b3), there arenosingularities, andDETCK returns if[Q]isthe
&amp;ldquo;rotational&amp;rdquo; matrix. If[Q]isthe&amp;quot;translational&amp;quot; matrix, the&amp;quot;rotational&amp;quot; [Q]is
input tothealgorithm.
7.IfD&amp;lt;.5xlO&amp;quot;2x(blb2b3), oneormore singularities exist. Thefollowing terms are
calculated:
22B2_mt=det , (I0)
32B3_
llB11m2=det , (II)
&lt;em&gt;31 B3
11BI&lt;/em&gt;]
m3:det_21 B2d, (12)
4.27-6 (8/I/72)
j&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMAI(STRUCTURAL MATRIX ASSEMBLER -PHASE l)
RI=&lt;em&gt;(B&lt;/em&gt; +Bz)(B2+B2),2 23 32 33(13)
r2=V(B_+B2)(B_ +&lt;em&gt;2), 1 13 31 33(14)
R,:V(B ,
8.Determine i,j,ksuchthat:+B2)(B&lt;/em&gt;,+B &lt;em&gt;). 12 22(15)
mim.mk
(16)
mi
9.If&lt;/em&gt;&amp;lt; 10-2,thesingularity isoforder 2.Redefine i,j,ksuchthatBii&amp;lt;Bjj&amp;lt;Bkk-
i
TheSILvalues forthepaired indexes (j,k), (i,k) and(i,j) arewritten onGPSTonly ifthe
corresponding Bisgreater thanzero. Forinstance ifBkkiszero, theSILpair(i,j) isnot
written ontheGPST.
mi
lO.If_IO -2,(seestep8)thesingularity isoforder I.TheSILvalues arewritten
i
ontheGPST intheorder
miisince &lt;em&gt;&amp;ndash;&amp;gt; 10-2, (17)
mj
jif&lt;/em&gt;&amp;gt;I0&amp;quot;2 , (18)
mk&amp;gt;
kif_k I0-2 (Ig)
4.27-7(3/I/71)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.27.8 Subroutines
Theutility routines PRETRD andPREMAT (orHMAT)arecalled inSMAIforinitialization
purposes sothatthestructural element subroutines cancalltheentrypoints TRANSD ofPRETRD and
MATofPREMAT (orHMAT)tofetchCoordinate System Transformation Matrices (CSTM) dataandmaterial
properties datarespectively. GMMATD isusedbyelement routines asageneral matrix multiply
routine, andINVERD isusedforinversion ofsmallin-core (order usually &amp;lt;12)matrices. It
should benotedthatallmatrices referenced inthestructural element subroutines arestored by_
rowsandaredouble precision. Seethesubroutine descriptions fortheseroutines inSection 3.
Theprincipal meansofcommunicating anelement entryoftheECPTtoanelement stiffness
matrix generation routine isthrough /SMAIET/. Thisfactisnotexplicitly stated ineachofthe
descriptions oftheelement routines (e.g.KR_D)givenbelow. Sincemuchofthemathematics needed
forgenerating: (I)element stiffness matrices (module SMAI); (2)element massanddamping
matrices (module SMA2); (3)element contributions toloadvectors (module SSGI); (4)element stress
(andforce) datarecovery (module SDR2); (5)element differential stiffness matrices (module
DSMGI); (6)element stress (andforce) datarecovery fornon-linear elements inaPiecewise Linear
Analysis RigidFormat problem (module PLA3); and(7)element stiffness matrices fornon-linear
elements inaPiecewise Linear Analysis problem (module PLA4), issimilar orevenidentical,
detailed mathematical algorithms aregrouped byelement inSection 4.87.
Itshould benotedthatroutines DKI,DKK,DKM,DKINT,DKJ,DKEF,DK89,DKIOO,KFAC,DKJAB,DK219,
DK211,R_MBDK,D4K,D5K,D6K andDMATRX areusedonly(directly orindirectly) bytheaxisymmetric
shellelement routines KTRIRG, KTRAPR andKT_RDR.
4.27.8.1 Subroutine Name: SMAI
I.EntryPoint: SMAI
2.Purpose: Seediscussion above.
3.Calling Sequence: CALLSMAI
4.27.8.2 Subroutine Name: SMAIA
I.EntryPoint: SMAIA
4.27-8 (811/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I)
2.
3.
4.27.8.3Purpose: Seediscussionabove.
Calling Sequence: CALLSMAIA
Subroutine Name: SMAIB
I.Entry Pointt SMAIB
2.Purpose:This routine, called bythemodule&amp;rsquo;s element stiffness matrix generation
routines suchasKR@D, KBAR, etc., addsadouble precision 6x6orlxlmatrix, [Ke], to
Kx 4the&amp;quot;submatrix&amp;quot; of[gg]or[Kgg] corresponding tothecurrent pivot point.
3.Calling Sequence: CALLSMAIB (KE,J,II,IFILE,DAMPC)
KE Row-stored double precision 6x6orlxlmatrix tobeadded tothe
submatrix incore -double precision -input.
Kx K4J Thecolumn index ofthe[gg]or[gg]matrix which corresponds tothe
first column ofthe[Ke]matrix -integer -input.
II -IfIIisO,the[Ke]matrix is6x6.IfIIisgreater thanzero, itis
rx rv4l
therowindex oftheLKgg] orL&amp;quot;ggJ matrix corresponding tothelxl
matrix [Ke]tobeadded -integer -input.
IFILE -GIN_file number ofthematrix incorebeing added to-KGGXorK4GG-
integer -input.
K4DAMPC -If[Ke]is6x6andthe[gg]matrix iscalled for,theinput matrix [Ke]is
DAMPC before being added tothesubmatrix of[K;g] in multiplied by core.
Block DataProgram Name: SMAIBD
Entry Point: SMAIBD
Purpose: Block dataprogram which setsGIN_file numbers, I/_parameters, andSMAI4.27.8.4
I.
2.
overlay parameters.
3.Calling Sequence: None
4.27.8.5 Subroutine Name: DETCK
I.Entry Point: DETCK
4.27-9&lt;/p&gt;
&lt;p&gt;4.27.8.6
I.
2.
3.
4.27.8.7
I.
2.
3.
4.27.8.8
I.
2.
3.
4.27.8.9
I.
2.
3.MODULE FUNCTIONAL DESCRIPTIONS
2.Purpose: This routine generates theGrid Point Singularity Table byexamining the
3x3&amp;quot;translational&amp;quot; and&amp;quot;rotational&amp;quot; diagonal submatrices oftheKGGXmatrix. This
routine iscalled after thesubmatrix foreachpivot point hasbeencompleted.
3.Calling Sequence: CALLDETCK (JARG)
IfJARG=O,thepivot point haselements connected toit.
IfJARG=-l,thepivot point isascalar point andnoelements are
JARG - connected toit.
IfJARG =l,thepivot point isagridpoint andnoelements areconnected
toit.
Subroutine Name: KR_D
Entry Point: KROD
Purpose: Togenerate theelement stiffness matrix foraR_Delement.
Calling Sequence: CALLKR_O
Subroutine Name: KBAR&amp;quot;
Entry Point: KBAR
Purpose: Togenerate theelement stiffness matrix foraBARelement.
Calling Sequence: CALLKBAR
Subroutine Name: KTUBE
Entry Point: KTUBE
Purpose: Togenerate theelement stiffness matrix foraTUBE element.
Calling Sequence: CALL KTUBE
Subroutine Name: KPANEL
Entry Point: KPANEL
Purpose: Togenerate theelement stiffness matrix foraSHEAR orTWIST panel element.
Calling Sequence: CALLKPANEL (IARG)
4.27-I0&lt;/p&gt;
&lt;p&gt;4.27.8.10
I.
2.
3.
4.27.8.11FUNCTIONAL MBDULESHAI(STRUCTURAL HATRIXASSEMBLER -PHASE I)
_IARG =4calls forgeneration ofthematrix forashear panel;IARG
tIARG 5implies atwist panel.
Subroutine Name: KTRMEM
Entry Point: KTRMEM
Purpose: Togenerate theelement stiffness matrix foraTRMEM element.
Calling Sequence: CALL KTRMEM (1)
I=_0-Docomplete triangular membrane.
l-Return 3transformed 3x3matrices onlyforpivot point.
KTRMEM iscalled byKQDMEM.
Subroutine Name: KQDMEM
I.Entry Point: KQDMEM
2.Purpose: Togenerate theelement stiffness matrix foraQDMEM element.
3,Calling Sequence: CALLKQDMEM
Subroutine Name: KTRBSC
I.Entry Point: KTRBSC
2.Purpose: Togenerate theelement stiffness matrix forabasic bending triangle
element.
3.Calling Sequence: CALLKTRBSC (1)
0-Docomplete element computation forbasic bending triangle
I=l-Formonlythe[KU]9x9matrix.
2-Formonlythe[KU]9x9matrix butsavethe[H]&amp;ldquo;land[S]matrices.4.27.8.12
4.27.8.13IfI=l,
Subroutine Name: KTRPLT
I.Entry Point: KTRPLT
2.Purpose: Togenerate theelement stiffness matrix foratriangular plate element.
3.Calling Sequence: CALL KTRPLT
4.27-II&lt;/p&gt;
&lt;p&gt;4.27.8.14
4.27.8.15MODULE FUNCTIONAL DESCRIPTIONS
Subroutine Name: KQDPLT
I.EntryPoint: KQDPLT
2.Purpose: Togenerate theelement stiffness matrix foraquadrilateral plateelement.
3.Calling Sequence: CALLKQDPLT
Subroutine Name: KTRIQD
I.EntryPoint: KTRIQD
2.Purpose: Togenerate theelement stiffness matrix foranyofthefollowing elements:
TRIAl,TRIA2,QUADI,QUAD2.
3.Calling Sequence: CALLKTRIQD (IARG)
I!-TRIAlelement&amp;quot;TRIA2element.
IARG=
QUADIelement.
4QUAD2element.
4.27.8.16 Subroutine Name: KELAS
I.EntryPoint: KELAS
2.Purpose: Togenerate stiffness matrix contributions fromtheELASI,ELAS2,ELAS3 and
ELAS4elements andstructural damping matrix contributions fromtheELASI,ELAS2 and
ELAS3elements.
3.Calling Sequence: CALLKELAS (IARG)
IARG Indicates thetype ofelement being processed. Itcantake onthevalues
1,2,3 and4denoting theELASI,ELAS2,ELAS3 andELAS4 elements respectively.
Integer-input.
4.27.8.17 Subroutine Name: KBEAM
I.Entry Point: KBEAM
2.Purpose: Togenerate theelement stiffness matrix foraBEAM element.
3.Calling Sequence: CALL KBEAM
4.27-12&lt;/p&gt;
&lt;p&gt;4.27.8.18
4.27.8.19FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I)
Subroutine Names: KC(_NE, KC(_NEX
I.Entry Point: KC_NE, KC_NEX
2.Purpose: Togenerate theelement stiffness matrix foraconical shell problem.
3.Calling Sequence: CALL KC_NE andCALLKC(_NEX
Subroutine Name: KTRIRG
I.Entry Point: KTRIRG
2.Purpose: Tocalculate anelement stiffness matrix foratriangular cross-section
ring, TRIARG, element.
3.Calling Sequence:
4.27.8.20 Subroutine Name: KTRAPRCALL KTRIRG
I.Entry Point: KTRAPR
2.Purpose: Tocalculate anelement stiffness matrix foratrapezodial cross-section
ring, TRAPRG, element.
3.Calling Sequence:
4.27.8.21 Subroutine Name: KT_RDRCALLKTRAPR
I.Entry Point: KT_RDR
2.Purpose: Tocalculate anelement stiffness matrix foratoroidal thinshell ring,
T_RDRG,element.
3.Calling Sequence: CALLKT_RDR
Function Name: DKI
I.Entry Point: DKI
2.Purpose: Toevaluate integrals indouble precisionforthetriangular and
trapezoidal cross-section rings insubroutines KTRIRG andKTRAPR.
3.Calling Sequence: DP=DKI(I,J,K,L,M,N,IP,IQ,R,Z)4.27.8.22
4.27-13 (8/I/72)&lt;/p&gt;
&lt;p&gt;4.27.8.23
I.
2.
3.
4.27.8.24
I.
2.
3.
4.27.8.25
l.
2.MODULE FUNCTIONAL DESCRIPTIONS
I,J Thesubscripts ofRdefining twolines onthelimit ofintegration,
integer-input.
K,L Thesubscripts ofR,Zdefining another lineonthelimit ofintegration,
integer-input.
M,N -Thesubscripts ofR,Zdefining thefourth lineonthelimit of
integration, integer-input.
IP,IQ -Integers thatdefine thepower oftherandzvariables respectively,
-input.
R,Z -Vectors oftherandzcoordinates ofallpoints usedtodescribe the
areaofintegration, double precision -input.
Function Name: DKK
Entry Point: DKK
Purpose: Tocalculate theslope ofalinegiven twopoints infunction DKI.
Calling Sequence: DP=DKK(I,J,R,Z)
I,j -Thesubscripts ofR,Zdefining thetwopoints.
R,Z -Vectors oftherandzcoordinates.
Function Name: DKM
Entry Point: DKM
Purpose: Tocalculate they-intercept ofalinegiven twopoints infunction DKI.
Calling Sequence: DP=DKM(I,J,R,Z)
I,J Thesubscripts ofR,Zdefining thetwopoints.
R,Z Vectors oftherandzcoordinates.
Function Name: DKINT
Entry Point: DKINT
Purpose: Toevaluate thefollowing function intheFORTRAN function routine DKI:
4.27-14&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEl)
where1w
fI(A,B) =&lt;em&gt;Z
t=OC_EF•At•Bw-t•AJ (20)
andCgEFs=Hl w-s+l fort#0 s
1 fort=0(21)
AJ=R(J) (w+v-t+l) -R(I) (w+v-t+l)
w+v-t+l
In[&lt;/em&gt;&amp;ndash;&lt;em&gt;]for(w+v-t+l) p0
for(w+v-t+l) =0.(22)
3e Calling Sequence:
I,j
A,B
V,W
R,ZDP=DKINT (I,J,A,B,V,W,R,Z)
Thesubscripts ofR,Z.
Thearguments ofthefunction finEquation20.
Integer paran_ters ofthefunction.
-Vectors oftherandzcoordinates.
4.27.8.26 Function Name: DKJ
Io
2.Entry Point: DKJ
Purpose: Toevaluate thefollowing function infunction DKINT.
DKJ=R(J)(SiII R}II(s+l S
R(J)
{In[&lt;/em&gt;]fors+lp0
fors+l=0.(23)
3.Calling Sequence: DP=DKJ(I,J,R,S)
I,J Thesubscripts ofR
4.27-15&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
R
S-Vector ofthercoordinates.
-Integer parameters ofthefunction,
4.27.8.27 Function Name: DKEF
Io
2.EntryPoint: DKEF
Purpose: Toevaluate thefollowing function infunction DKINT.
3.Calling Sequence:DKEF=I_=_I
DP=DKEF(T,W)w-s+l
fort#0s
fort=O.
T,W-Integer parameters ofthefunction.(24)
4.27.8.28 Function Name: DK89
I.Entry Point: DK89
2.Purpose: Toevaluate thefollowing function infunction DKI.
M
DK89(I,A,B) -l ZM!(-A)s•d
_s=O
where(2s)
d =(A+B.R(1)(M+I-N-S)
(M-S)! S!(M+I-N&amp;rsquo;S)
In(_A +B.R(1) )
(M+I-N)! (N-l).for(M+I-N-S) #0
for(M+I-N-S) =0(26)
3.Calling Sequence:
I
A,B
M,N
RDP=DK89(I,A,B,M,N,R)
Thesubscript ofR.
Thearguments ofthefunction.
Integer parameters ofthefunction.
Vector nfthercoordinates
4.27.8.29 Function Name: DKIO0
I.Entry Point: DKIO0
4.27-16&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMAI (STRUCTURALMATRIX ASSEMBLER -PHASEl)
2.Purpose:
whereToevaluate thefollowing function insubroutine DKI.
-IM+N-2
DKIOO(I,A,B) :&amp;ndash;_ &lt;em&gt;.(M+N-2)!-d ,
A&lt;/em&gt;,-,,,,-, js=O(27)
(A+B.R(1))(M-I-S).(_B) S
(M+N-2-S)! S!(M-I-S)&amp;lsquo;R(1) (M-I-S)
IA+BR(1)
(-B)M-I&amp;rsquo;In(J R(I) J)
(M-I)!(N-I)!for(M-I-S) &lt;em&gt;0
for(M-I-S) =0•(28)
.Calling Sequence:
I
A,B
M,N
RDP=DKIO0 (I,A,B,M,N,R)
Thesubscript ofR.
lhearguments ofthefunction.
Integer parameters ofthefunction.
Vector ofthercoordinates.
4.27.8.30 Function Name: KFAC
I.
2.
3.
4.27.8.31Entry Point: KFAC
Purpose: Toevaluate thefactorial function infunctions DKSgandDKIO0.
Calling Sequence: K=KFAC (N)
N -Theinteger argument ofthefunction.
IfN&amp;lt;2,thefunctional value issettoI.
Function Name: DKJAB
I.Entry Point: DKJAB
2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKIusing the
function evaluated inF_RTRAN function DK89.
DKJAB(I,A,B) -R(1)MIg(IA+B&amp;rsquo;R(I)I )-&lt;/em&gt;•DK89(I,A,B)M (29)
4.27-17&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
3.Calling Sequence:
I
A,B
M,N
RDP=DKJAB(I,A,B,M,N,R)
Thesubscript ofR.
Thearguments ofthefunction.
Integer parameters ofthefunction.
Vector ofthercoordinates.
4.27.8.32 Function Name: DK219
I.EntryPoint: DK219
2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKIusingthe
function evaluated inFORTRAN function DKIO0.
DK219(I,A,B) :-In(IA+B&amp;rsquo;R(1)I)
M.R(1)M(3O)
+_&amp;ldquo;DKIO0(I,A,B)
3.Calling Sequence:
I
A,B
M,N
RDP=DK219(I,A,B,M,N,R)
Thesubscript ofR.
Thearguments ofthefunction.
Integer parameters ofthefunction.
Vector ofthercoordinates.
4.27.8.33 Function Name: DK211
I.EntryPoint: DK211
2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKI.
DK21I(I,A,B)I0
_-[In(12-B.R(1)I)] 2
[InIAI]&amp;rsquo;[InlR(1)l] -t_l
_In(IB.R(1) I)]2+oo
_&amp;lsquo;2AtforB.R(1) =A
forB.R(1)#A, [B.R(1)]2=A 2
for[B&amp;rsquo;R(1)] 2&amp;lt;A2
for[B.R(I)] 2&amp;gt;A2(31)
4.27-18&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)
3.
4.27.8.34Calling Sequence: DP=DK211 (I,A,B,R)
I -Thesubscript ofR.
A,B -Thearguments ofthefunction.
R -Vector ofthercoordinates.
Subroutine Name:R_MBDK
I.Entry Point: R_MBDK
2.Purpose: Toevaluate integrals indouble precision forthetoroidal thinshell
ringinsubroutine KT@RDR.
3.Calling Sequence: CALLR@MBOK (A,B,N@SIG,PRECIS,NUM,ITD@NE,FINTG,K_DE,FUNCT,X)
N@SIG -
PRECIS -
NUM
ITD_NE -
FINTG -
K_DE -
FUNCT -
XLower andupper limit ofintegration respectively.
Number ofcorrect significant digits desired.
Actual number ofsignificant digits attained.
Maximum number ofhalvings oftheinterval [A,B] tobemade.
Actual number ofhalvings oftheinterval [A,B].
Resultant value ofintegral.
Print control (notused).
Function subprogram usedtoevaluate theintegral.
Vector ofparameters usedbyfunction subprogram.
4.27.8.35 Function Name: D4K
I.Entry Point: D4K
2.Purpose: Toevaluate thefollowing function tobeintegrated bysubroutine R_MBDK.
3.D4K= CJ.sin2@
R_-Rp.sin _)+Rp-sin _1&amp;quot;cos ¢+Rp.COS _-sin@
Calling Sequence: DP=D4K(X)
X -Vector offunction parameters.
x(1)-
X(2) -Rp
X(3) -Rl(32)
4.27-19&lt;/p&gt;
&lt;p&gt;4.27.8.36MODULE FUNCTIONAL DESCRIPTIONS
X(4) -cos_i
X(5) -sin_I
X(6) -J+l
Function Name: D5K
I.Entry Point: D5K
2.Purpose: Toevaluate thefollowing function tobeintegrated bysubroutine ROMBDK.
3.
4.27.8.37
I.
2.
3.D5K = @J.2&amp;quot;sin@&amp;lsquo;cos_
R_-Rp-sina_ +Rp.sina_ cos_+Rp.COS_t.sin_
DP=D5K(X)
Vector offunction parameters.
Rp
Rl
COS &lt;em&gt;I
sin_i
J+lCalling Sequence:
X
X(1) -
X(2) -
X(3)
x(4)
x(5)
x(6)
Function Name: D6K(33)
Entry Point:
Purpose:
Calling Sequence:
X
X(1) -
X(2) -
X(3) -
X(4) -D6K
Toevaluate thefollowing function tobeintegrated bysubroutine ROMBDK.
D6K = @Jc°sZ@ (34)
Ri-Rp.sinal +Rp.sin_1.cos&lt;/em&gt; +Rp.COS_1&amp;quot;Sl_
DR=D6K(X)
Vector offunction parameters.
Rp
R1
COS_z
4.27-20&lt;/p&gt;
&lt;p&gt;FUNCTIONAL )IODULE SMAI(STRUCTURAL MATRIX ASSEHBLER -PHASE I)
X(5) -sin_
X(6) -J+I
4.27.8.38 Subroutine Name: DMATRX
I.Entry Point: DMATRX
2.Purpose: Toform theelement stiffness matrix infield coordinates forthetoroidal
thinshell ringinsubroutine KT@RDR.
3.Calling Sequence: CALLDMATRX (D,V,C,CA,CA2,VA,DM,DB,YI)
D
V,C,CA,
CA2,VA,
DM,DB
YI
4.27.8.39-Resultant stiffness matrix.
Terms used intheevaluation ofthestiffness matrix.
-Array ofintegral values.
Subroutine Name: KFLUD2
I.
3.
4.27.8.40Entry Point: KFLUD2
Purpose: Toformtheelement psuedo stiffness matrix fortheFLU!D2 andAX!F2 elements°
Calling Sequence: CALL KFLUD2
Subroutine Name: KFLUD3
I.
2.
3.
4.27.8.41Entry Point: KFLUD3
Purpose: Toformtheelement psuedo stiffness matrix fortheFLUID3 andAXIF3 elements.
Calling Sequence: CALL KFLUD3
Subroutine Name: KFLUD4
I.Entry Point: KFLUD4
2.Purpose: Toformtheelement psuedo stiffness matrix fortheFLUID4 andAXIF4 elements.
3.Calling Sequence: CALLKFLUD4
4.27-21 (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P43</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_043/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_043/</guid>
      <description>
        
        
        &lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.27.8.42 Subroutine Name:KSL_T
I.EntryPoint:KSL_T
2.Purpose:ToformtheelementpsuedostiffnessmatrixfortheSL_T3andSL_T4elements.
3.CallingSequence: CALLKSL_T(IARG)
IARG=0=SLBT3 elements
l=SL_T4 elements
4.27.8.43 Subroutine Name: KTETRA
I.Entry Point: KTETRA
2.Purpose: Tocalculate andinsert element stiffness matrices fortheTETRA (solid
tetrahedron) element. Itisalsousedforthesubelements oftheWEDGE, HEXAI, and
HEXA2 elements.
3.Calling sequence: CALL KTETP_A (I_PT), where:
IfI_PT=O,thestiffness isdivided by2.
IfI_PT=I,thestiffness isunmodified.
IfI_PT_ lO0,theelement istested forgeometric consistency.
4.27.8.44 Subroutine Name: KSBLID
I.Entry Point: KSBLID
2.Purpose: Toperform, ontheWEDGE, HEXAI, andHEXA2 elements, thefollowing tasks:
a) Check geometric consistency.
b) Rearrange theECPTdata intotheTETRA format foreach subelement andcallthe
KTETRJ_ subroutine.
3.Calling sequence: CALLKSBLID (ITYPE), where
ITYPE =limplies aWEDGE element (three tetrahedra).
ITYPE =2implies aHEXAI ele_nt (five tetrahedra).
ITYPE =3implies aHEXA2 element (tentetrahedra).
4.27.8.45 Subroutine Name: HHBDY
I.Entry Point: HHBDY
4.27-21a (8/I/72)&lt;/p&gt;
&lt;p&gt;2,
,
4.27.8.46
I.
2.FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)
Purpose: Tocalculate thermal convection matrix terms fortheboundary heat transfer
elements (HBDY).
Calling sequence: CALLHHBDY.
Subroutine Name: HRING
Entry Point: HRING
Purpose: Tocalculate thermal conductivity matrix terms fortheTRIARG andTRAPRG
elements.
Calling Sequence: CALLHRING(ITYPE), where
ITYPE =3implies aTRIARG element.
ITYPE =4implies aTRAPRG element.
KPLTST3.
4.27.8.47 Subroutine Name:
I.Entry Point: KPLTST
2.Purpose: Toexamine theplanarity ofquadrilateral elements.
3.Calling Sequence: CALLKPLTST (GI,G2,G3,G4) where
Gi=GridPoint coordinate vectors
4.27.9 Design Requirements
4.27.9.1 Open CoreDesign
Theopen corecommon block formodule SMAIisdefined bythefollowing F_RTRAN statements:
I. D_UBLE PRECISIBN DZ(1)
2. INTEGER IZ(1)
3. CBMM_N /SMAIX/Z(2)
4. EQUIVALENCE (Z(1),IZ(1),DZ(1)).
Theopen corelayout isgiven inFigure I.
4.27-21b (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
I.D_UBLEPRECISION DZ(1)
2.INTEGER IZ(1)
3.COMM@N/SMAIX/Z(1)
4.EQUIVALENCE (Z(1),IZ(1),DZ(1)).
Theopencorelayout isgiven inFigure I.
ICSTM
IMATI
IGPCT
IP_INT
16X6K
IGGPST
IGGPCT
IGECPT
IG4GG
IGKGGC_MM_N ISMAIX/
CSTMData
MPTandDIT
tobereadinto
corebyMATor
HMAT
GPCTData
Pointer table defined
iFEquations land2
Submatrices forKGGX
andK4GGforthecurrent
pivot point.
GINObuffer forGPST
GIN_buffer forGPCT
GIN_buffer forECPT
GIN_buffer forK4GG
GIN_buffer forKGGX
Figure I.Opencorelayout formodule SMAI.
4.27-22 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEI)
Thedefinition ofthevariables isasfollows:
ICSTM -Thezeropointer totheCSTMportion ofopen core; defined tobezero.
IMATI
IGPCT -
IP_INT -
I6X6K -
16X64 -Thezero pointer totheMPTandDITdata readintocorebysubroutine PREMAT;
defined tobeICSTM +NCSTM, where NCSTM isthelength oftheCSTMportion
ofopencore.
Thezeropointer totheGPCTportion ofopencore; defined tobeIMATI +MATCR,
MATCR being thelength ofopencoreusedbysubroutine PREMAT.
Thezeropointer tothepointer table inopencore. Thepointer table isused
asadictionary torelate theGPCTtothesubmatrices incore; defined tobe
IGPCT +NGPCT, NGPCT being thelength oftheGPCT.
Thezeropointer tothesubmatrices ofKGGX; I6X6K =(IP_INT +NP_INT -l)/
2+2where NP_INT =NGPCT isthelength ofthepointer table. Theextra
arithmetic todefine I6X6K isnecessary because thesubmatrices aredouble
precision nun_)ers. While theabove indices aresingle precision indices,
I6X6K isadouble precision index.
Thezeropointer tobesubmatrices ofK4GG; I6X64 =16X6K +N6X6K, where
N6X6K isthenun_er ofdouble precision numbers inthesubmatrices ofKGGX.
I6X64 isadouble precision index.
Thepointers fortheGIN_buffers, IGGPST, IGGPCT, IGECPT, IG4GG andIGKGG are,
unlike theabove, &amp;lsquo;one&amp;rsquo; pointers. Itshould benoted thatthelengths NCSTM andMATCR are
constant throughout themodule operation, while thelength oftheGPCTdatawillva_vfrompivot
point topivot point astheECPTandGPCTdatablocks areprocessed serially. (Hence itis
probable thatforapivot point with arelatively small nun_er ofelements connected toitthe
entire submatrix maybeheld incore, while spill logic will beentered onlywhen apivot point
hasagreat manyelements connected toit.)
4.27.9.2 Block DataSubprogram
Theblock dataprogram SMAIBD setsGIN_filenumbers, I/&lt;em&gt;parameters andSMAIoverlay
parameters incommon blocks /SMAII&lt;/em&gt;/and/SMAICL/.
4.27.9.3 Common Storage Requirements
Blank common isusedonly forDMAPparameters. Thefollowing common blocks areused
throughout themodule: /SMAII_/,/SMAIBK/,/SMAICL/,/SMAIET/and/SMAIDP/.Theyaregiven
indetail heresince other matrix assembler modules suchasSMA2andDSMGI aredesigned similarly.
Allcommon block variables areinteger except (1)DODET in/SMAICL/which isalogical variable;
(2)thearray in/SMAIET/which isamixed (integer andreal) array; and(3)thedouble
precision array in/SMAIDP/.
4.27-23&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
I.
parameters.
WordNumberTheSMAII_ common block is36words inlength andisusedforSFtAI input/output
Variable
l IFCSTM
2 IFMPT
3 IFDIT
4 IDUMI
5 IFECPT
6 IGECPT
7 IFGPCT
8 IGGPCT
9-I0 IFGEI,IGGEI
II IFKGG
12 IGKGG
13 IF4GG
14 IG4GG
15 IFGPST
16 IGGPST
17 INRW
18 OUTRW
19 CLSNRW
20 CLSRW
21 NEOR
22 E_R
23-29 MCBKGG
30-36 MCB4GG
2.
parameters.Definition
GIN_filenumber fortheCSTMdatablock.
GIN_filenumber fortheMPTdatablock.
GIN_ filenumber fortheDITdata block.
Undefined.
GIN_filenumber fortheECPTdatablock.
GIN_buffer pointer fortheECPT.
GIN_filenumber fortheGPCTdatablock.
GIN_buffer pointer fortheGPCT.
Undefined.
GIN_filenumber fortheKGGXdatablock.
GIN_buffer pointer forKGGX.
GIN_file number fortheK4GGdatablock.
GIN_buffer pointer forK4GG.
GINO filenumber fortheGPSTdatablock.
GINO buffer pointer fortheGPST.
Input with rewind option forsubroutine _PEN.
Output with rewind option forsubroutine OPEN.
Close without rewind option forsubroutine CLOSE.
Close with rewind option forsubroutine CLOSE.
Noend-of-record indicator forsubroutine READ.
End-of-record indicator forsubroutine READ.
Matrix control block fortheKGGXmatrix.
Matrix control block fortheK4GGmatrix.
TheSNtAIBK common block islOwords inlength andisused forSMAIopen corebookkeeping
Itcontains zero pointers andlengths forthevarious sub-arrays inopen core.
4.27-24&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESMAI(STRUCTURAL. MATRIXASSEMBLER-PHASEI)
WordNumber Variable Definition
1 ICSTM Zero pointer totheCSTMsub-array inopen core. For
example thefirst location ofthissub-array isreferenced
asIZ(ICSTM +l).
2 NCSTM Length oftheCSTMsub-array inopencore.
3 IGPCT Zeropointer totheGPCTsub-array inopencore.
4 NGPCT Length oftheGPCTsub-array.
5 IP_INT Zero pointer totheP_INT sub-array inopencore.
6 NP_INT Length oftheP_INT sub-array.
7 I6X6K Zeropointer tothe6x6submatrices ofKGBX.
8 N6X6K Number ofwords allocated tothe6x6submatrices ofKGGX.
9 16X64 Zero pointer tothe6x6submatrices ofK4GG.
I0 N6X64 Undefined.
3.TheSMAICL common block is133words inlength andisusedformodule control parameters.
WordNumber Variable Definition
1 I_PT4 Indicator usedbyelement routines denoting whether ornot
theK4GGmatrix willbegenerated. I_PT4 =O,implies no
generation; I_PT4 =limplies generation.
2 K4GGSW Indicator setto-Iinitially. IfI_PT4 =I,thenelement
routines willsetK4GGSW =l,when anon-zero element
structural damping matrix isgenerated.
3 NPVT Thescalar index which isthepivot point. This isthefirst
word ofevery record oftheECPTdatablock.
4 LEFT Thenumber ofwords ofopencoreremaining after allsub-
arrays inopencorehavebeenallocated.
5 FR_WIC Thefirst rowofthesubmatrices incore. Ifallsixrows
ofthematrices tobegenerated cannot beheldincore, spill
logic isinitiated, and3,2orlrowsofthesubmatrices are
generated during eachpassoftheECPT record forthepivot
point which causes thespill. FR_WIC cantakeonthevalues
1,2,3,4,5 or6.
6 LR_WIC Thelastrowofthesubmatrices incore. LR_WIC isdefined as
FR_WIC +NR_WSC -l,where NR_WSC isthenumber ofrowsincore.
Ifthere arenospill problems, thenLR_WIC =6ifthepivot
point isagridpoint, andLR_WIC =lifthepivot point isa
gridpoint.
7 NR_WSC Thenumber ofrowsofthesubmatrices currently incore.
8 TNR_WS Total number ofrowsofthesubmatrices tobegenerated.
TNR_WS =6ifthepivot point isagridpoint andTNR_WS =l
ifthepivot point isascalar point. Thisdefinition holds
whether ornottheK4GGmatrix istobegenerated. (In
actuality, iftheK4GGisgenerated thetotal number ofrows
4.27-25 (711170)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
WordNumber
I0
11-20
21
22Variable
Jt,IAX
NLINKS
LINK
N_G_
IDETCKDefinition
generated foranyECPTrecord is12or2).
Thenumber ofcolumns ofKGGX(andK4GG)tobegenerated with
thecurrent ECPTrecord.
Thenumber ofmachine links(overlay segments) necessary to
contain themodule&amp;rsquo;s element routines. Currently NLINKS is
defined tobe3.Thisvariable isusedinconjunction with
theLINKarraydefined below. Formachines withlarge
memories, itisdesirable tohaveallelement routines in
onelink,forwheninanyECPTrecord thereareelements which
reside indifferent links, overlay overhead canbeverycostly
(particularly onsecond generation computing systems).
Before thecurrent ECPTrecord isreadforthefirsttime,the
LINKarrayissetto-IforLINK(1), I=I,&amp;hellip;NLINKS. When
thefirstelement isreadfromtheECPT,theproper element
routine iscalled, thereby loading thelinkinwhich that
element routine resides. Thevariable LINCOR, thelinkincore,
isdefined asLINC_R =IBVRLY(ITYPE), where ITYPEistheele-
ment&amp;rsquo;s internal number, e.g., R_D=I,BEAM=2,etc. Forthe
nextelement readfromtheECPT,itisdetermined inwhatlink
itresides. Ifitresides inthelinkwhici_ isincore,the
element routine iscalled. Iftheroutine doesnotreside in
thelinkcurrently incore,itisdetermined whether (a)the
linkhasalready beenprocessed or(b)thelinkhasnotbeen
processed inwhich casea&amp;quot;to-be-processed-later&amp;quot; flagisset.
Forcase(a)LINK(ITEMP) isI;forcase(b)LINK(ITEMP) is
set=O,where ITEMP=I_VRLY(ITYPE). Whenanend-of-record
issensed fortheECPT,LINK(LINCOR) issetto1andLINK
arrayissearched forzeros. Iftherearenozeros, theprocess-
ingoftheECPTrecord iscomplete. Iftherearezeros, that
is,linkstobeprocessed, thefilecorresponding totheECPT
isbackspaced andprocessing oftherecord isrepeated.
Flagusedtoindicate ifauserfatalerrormessage occurred
intheprocessing ofanyelement. NOGO=1indicates anerror.
Execution istermination uponcompletion oftheprocessing of
theGPCT. N_G_=0indicates noerror. Continue execution.
Usedasafirstpassindicator intheDETCKsubroutine. There
willbemultiple passes through theDETCK routine, foreach
ECPTrecord, onlyiftherearespillproblems, i.e.,thetotal
number ofrowstobegenerated fortheECPTrecord willnotfit
incore.
4.27-26 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEI)
23 D_DET Logical variable which iftrueimplies theDETCKroutine will
becalled andiffalsewillnotbecalled. Iftheinputpara-
meter, N_GENL, isgreater thanzero, implying general elements
exist, thenD_DETissetfalse. Otherwise D_DETistrue.
4.Thecommon blockSI._IET isI00words inlength andisusedasthemeans ofcommunicating
theelement datafromtheECPTdatablocktotheelement subroutines.
5.Thecommon blockSMAIDP defines anarrayof300double precision words. Thisblock is
usedas&amp;quot;scratch&amp;quot; storage byelement routines. Thosevariables which inmostF_RTRAN
programs wouldbelocalsubroutine variables aredefined in/SMAIDP/ bythemodule&amp;rsquo;s element
routines inordertopreserve corestorage andhenceincrease opencore.
4.27.9.4 Arithmetic Considerations
Allfloating pointarithmetic operations arecarried outindouble precision.
and[K_g]
4.27.10aredouble precision matrices.Kx
Both[gg]
Diagnostic Messages
Themodule hasavariety of&amp;quot;fail-safe&amp;quot; error checks. Ifanyofthese checks fails, it
implies anobscure program design error oracomputer operating system/hardware failure.
Diagnostic messages 2022, 2023, 2034 areofthis type.
User fatal error messages 2025, 2026, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040,
5001, 5002, 5003, and5004 occur when oneofthestructural element routines encounters some user
data which makes generation ofanelement matrix impossible. Examples would include auser defin-
ingaRODorBARelement ofzero length; auser defining thefour points ofaSHEAR panel element
notintheproper cyclical order; auser defining TRPLT data sothat amatrix inaalgorithm is
singular; etc. Itshould benoted thefirst time this type ofuser data isencountered afatal
error occurs, that isthemodule does notcontinue toprocess data foruncovering anymore errors.
Detailed descriptions ofthese error messages canbefound inSection 6oftheUser&amp;rsquo;s
Manual.
4.27-27 (8/I/72)&lt;/p&gt;
&lt;p&gt;4.28
4.28.1
4.28.2FUNCTIONALMODULE SMA2 (STRUCTURALHATRIXASSEMBLER -PHASE2)
FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)
Entry Point: SMA2
Togeneratethemassmatrix [Mgg] andthedampingmatrix [Bgg].
4.28.3 DMAPCalling Sequence
SMA2 CSTM,MPT,ECPT,GPCT,DIT/MGG,BGG/V,Y,WTMASS=I.O/V,N,N_MGG/V,N,N_BGG/V,Y,
4.28.4
CSTM -
MPT -
ECPT -
GPCT
DIT -
Notes:
I.
2.
3.
4.
4.28.5
MGG-
BGG -
Notes:
I.
.C_UPMASS/V,Y,CPBAR/V,Y,CPR_D/V,Y,CPQUADI/V,Y,CPQUAD2/V,Y,CPTRIAI/V,Y,CPTRIA2/
V,Y,CPTUBE/V,Y,CPQDPLT/V,Y,CPTRPLT/V,Y,CPTRBSC/ $
Input DataBlocks
Coordinate System Transformation Matrices.
Material Properties Table.
Element Connection andProperties Table.
Grid Point Connection Table.
Direct Input Tables.
TheCSTMmaybepurged.
Ifson_element references amaterial property, theMPTcannot bepurged.
Neither theECPTnortheGPCTmaybepurged.
Ifsomematerial property istemperature dependent, DITcannot bepurged.
Output DataBlocks
Partition ofmassmatrix -gset.
Partition ofdamping matrix -gset.
MGGcannot bepre-purged.
BGGcanbepre-purged.
4.28-I (3/I/71)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.28.6 Parameters
WTMASS -Input-real-default value(inDMAPcalling sequence) =1.0.WTMASS isthescalar
valuebywhichthegenerated massmatrix willbemultiplied before thecolumns
N_MGG
NOBGGarepacked onto theoutput file.
-Output-integer-no default value.
mass matrix isthezero matrix.
-8utput-integer-no default value.WTMASS istheratioofmasstoweight.
NOMGGissetequalto-Iifthegenerated
Otherwise itisset=+I.
IftheBGGmatrix iseither pre-purged oris
generated asthezeromatrix, N_BGGisset=-I.Otherwise itisset=+I.
COUPMASS -Input-integer-default value=-I.IfCOUPFtASS =-I,&amp;ldquo;consistent&amp;rdquo; massmatrices for
allelements willnotbegenerated; ifCOUPMASS&amp;gt;O, &amp;ldquo;consistent&amp;rdquo; massmatrices
forallelements willbegenerated. IfCOUPMASS =0&amp;quot;consistent&amp;quot; massmatrices
willbegenerated forelement typesdepending onthevalues ofCPBAR, CPROD, CPQUADI,
CPQUAD2, CPTRIAI, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, andCPTRBSC.
CPBAR, CPROD, CPQUADI, CPQUAD2, CPTRIAI, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT andCPTRBSC -Input-
integer-default value=-I.
Theseparameters choose between &amp;ldquo;consistent&amp;rdquo; massandnorma_ massalgorithms fortheirres-
pective element typesasgivenbelow.
Parameter Element Ty]__es-
CPBAR BAR
CPROD ROD,CONROD
CPQUADI QUADI
CPQUAO2 QUAD2
CPTRIAI TRIAl
CPTRIA2 TRIA2
CPTUBE TUBE
CPQDPLT QDPLT
CPTRPLT TRPLT
CTRBSC TRBSC
These parameters function inconjunction with COUPMASS andhave noeffect ifCOUPMASS _O.
IfCOUPMASS =0anegative value forthese parameters will cause the&amp;quot;normal&amp;quot; mass matrix tobe
generated. Avalue equal toorgreater than zero will cause the&amp;quot;consistent&amp;quot; mass matrices tobe
generated forallelement types controlled bythis parameter.
4.28-2 (3/I/71)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)
4.28.7 Method
S)tA2isstructuredsimilarly tomodule SMAI. Aseparatemodule waswritten togenerate
themassanddamping matrices inorder tomaximize theamount ofopencorespace available
forelement matrices during matrix generation. This corespace wasespecially critical on
thedevelopment computer, theIBM7094-7040 DCS. Since SMA2 issosimilar toSMAI, the
details ofthesimilarities willnotberepeated here; teedifferences willbepointed out.
Thereader isreferred totheModule Functional Description (MFD) forSMAI (section 4.27).
When allrows (or,inthecaseofspill, thenumber ofrowsincore) foreachpivot
point havebeencomputed, eachmatrix element of[Mgg] ismultiplied byWT_SS before being
packed onto theoutput data block MGG.
4.28.8 Subroutines
SMA2, likeSMA!, usestheutility routines PRETRD, PREMAT andGMMATD.
Theprincipal means ofcommunicating anelement entry oftheECPTtoanelement mass or
damping matrix generation routine isthrough /SI_2ET/.This factisnotexplicitly stated in
eachofthedescriptions oftheelement routines (e.g., MR_D) given below.
Thefollowing listgives acorrespondence between SMAI andSMA2routines thatareusedonly
(directly orindirectly) bytheaxisymmletric shell element routines IRIARG andTRAPRG. All
oftheSMA2 routines arethesame astheir SMAIcounterparts except forname. Thereason for
duplicating these routines with different names wastomaximize opencoreforelement matrices
inSMAIandSMA2, which both reside inthesameNASTRAN link. Fordetails oneachofthe
routines, seethecorresponding SMAIcounterpart (section 4.27.8).
S_&amp;lsquo;AI SMA2
DKI DMI
DKK DMK
DKM DMM
DKINT DMINT
DKJ DMJ
DKEF DMEF
4.28-3 (.3/I/71)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)
SMAI SMA2
DK89 DM89
DKIO0 DMIO0
KFAC MFAC
DKJAB DMJAB
DK219 DM219
DK211 DM211
4.2B-3a (311171)&lt;/p&gt;
&lt;p&gt;4.28.8.1
I.
2.MODULEFUNCTIONAL DESCRIPTIONS
Subroutine Name:SMA2
EntryPoint:SMA2
Purpose:ThemoduledriverwhichparallelsSMAI.
methodsectionoftheMFDforSMAI(section4.27.7).
3.CallingSequence: CALLSMA2
4.28.8.2 Subroutine Name: SMA2A
I.EntryPoint: SMA2A
2.Purpose: Togenerate [Mgg]and[Bgg].
forSMAI fordetails onSMAIA (section 4.27.8).
3.Calling Sequence: CALLSMA2A.
4.28.8.3Forfurther details seethe
This routine parallels SMAIA. SeetheMFD
Subroutine Name: SMA2B
I.Entry Point: SMA2B
2.Purpose: Toaddadouble precision 6by6or1by1matrix [Ke]tothe&amp;quot;submatrix&amp;quot; of
[Mgg] or[Bgg] corresponding tothecurrent pivot point.
3.Calling Sequence: CALLSMA2B (KE,J,II,IFILE,DUMDP).
KE,J,II areasdefined forsubroutine SMAIB (seesection 4.27.8).
IFILE -GIN_filenumber ofthematrix incorebeing added to[Mgg] or[Bgg]-integer-input.
DUMDP -Adummy double precision argument added sothatthecalling sequence to
SMA2B would conform tothatofSMAIB.
4.28.8.4 Block DataProgram Name: SMA2BD.
I.PuYpose: TosetGIN@filenumbers, I/&lt;em&gt;parameters andSMA2 overlay parameters in
/SMA21&lt;/em&gt;/and/SMA2CL/.
4.28-4&lt;/p&gt;
&lt;p&gt;FUNCTIONP_L MODULESMA2(STRUCTURAL MATRIXASSEMBLER-PHASE2)
4.28.8.5Subroutine Name:MP,_D
I.EntryPoint:MR_D
2.Purpose:TogeneratetheelementmassmatrixforaR_Delement.
3.Calling Sequence: CALLMR_D.
4.28.8.6 Subroutine Name: _gUBE
I.Entry Point: MTUBE
2.Purpose: Togeneratetheelement massmatrix foraTUBE element.
3.Calling Sequence: CALLMTUBE
4.28.8.7 Subroutine Name: MASSTQ
I.EntryPoint: MASSTQ
2.Purpose: Togenerate anelement massmatrix foranyofthetwo-dimensional
structural elements listed under theCalling Sequence.
3.Calling Sequence: CALLMASSTQ(IARG)
IARG=4=TRMEM
1:QDNEH
3=TRBSC
3:TRPLT
7=QDPLT
5=TRIAl
4=TRIA2
2=QUADI
l=QUAD2
6=SHEAR
6=TWIST
4.28-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.28.8.8 Subroutine Name: MBAR
I.Entry Point: MBAE
2,Purpose: Togenerate the&amp;quot;diagonal&amp;quot; (uncoupled) element massmatrix foraBAR
element.
3.Calling Sequence: CALLMBAR
4.28.8.9 Subroutine Name: MC_AR
I.EntryPoint: MCBAR
2.Purpose: Togenerate the&amp;quot;consistent&amp;quot; (coupled) element ma_sn_atrix foraBAR
element.
3.Calling Sequence: CALLMCBAR
4.28.8,10 Subroutine Name: MC@NMX
I.Entry Point: MC_NMX
2.Purpose: Togenerate anelement massmatrix foreither ofthetwoconcentrated-
mass-elements listed underCalling Sequence.
3.Calling Sequence: CALLMCOrlMX(IARG)
IARG-11CONMI
{2=C_NI12
4.28.8.11 Subroutine Name: MC_NE
I.EntryPoint: MC_NE
2.Purpose: Togenerate anelement massmatrix fortheaxisymmetric conical shell
element (C_NE).
3.Calling Sequence: CALLMC_NE
4.28-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)
4.28.8.12 Subroutine Nan:e: MASSD
I.Entry Point: 14ASSD
2.Purpose: Togenerate lbylelement massmatrices forscalar elements MASSi, i=1,2,3,4;
andlbylelement damping matrices forscalar damping elements DAMPi, i=1,2,3,4.
3.Calling Sequence: CALL_SSD(1)
l-Generate element massmatrix forat._SSl element,
2-Generate element mass matrix foraMASS2 element,
3-Generate element massmatrix foraF_SS3 element,
4-Generate element massmatrix foraI4ASS4 element,
I-,
5-Generate element damping matrix foraDAMPI element,
6-Generate element damping matrix foraD_P2 element,
7-Generate element damping matrix foraDAMP3 element,
8-Generate element damping matrix foraDAMP4 element.
4.28.8.13 Subroutine Name: MTRIRG
I.Entry Point: I-_RIRG
2.Purpose: Togenerate anelement massmatrix foratriangular cross-section ring,
TRIARG, element.
3.Calling Sequence: MTRIRG.
4.28.8.14 Subroutine Name: MTRAPR
I.Entry Point: MTRAPR
2.Purpose: Togenerate anelement massmatrix foratrapezoidal cross-section ring,
TRAPRG, element.
3.Calling Sequence: CALLMTRAPR.
4.28.8.15 Subroutine Name: MT_RDR
I.Entry Point: MT_RDR
4.28-7&lt;/p&gt;
&lt;p&gt;2.Purpose:
element,
3.CallingSequence:
4.28.8.16 Subroutine Name:MODULEFUNCTIONAL DESCRIPTIONS
Togenerateanelementmassmatrixforatoroidalthinshellring,T_RDRG,
CALLMT_RDR.
BVISC
I,EntryPoint:BVISC
2.Purpose:TogenerateanelementdampingmatrixforaVISCelement.
3.CallingSequence: CallBVISC
4.28.8.17 Subroutine Name:MBEAM
I.EntryPoint: MBEAM
2.Purpose: Togenerate anelement massmatrix foraBEAMelement.
3.Calling Sequence: CALLMBEAM
4.28.8.18 Subroutine Name:MCR_D
I.Entry Point: MCR_D
2.Purpose: Togenerate the&amp;quot;consistent&amp;quot; (coupled) element massmatrix foranyofthe
elements listed under calling sequence,
3.Calling Sequence: CALLMCR_D (IARG)
IARG:l-R@D
1-C_NR_D
3-TUBE
4.28.8.19 Subroutine Name: MTRBSC
I.Entry Point: MTRBSC
2.Purpose: Togenerate the&amp;quot;consistent&amp;quot; (coupled) element massmatrix forabasic bending
triangle element.
3oCalling Sequence: CALLMTRBSC
4.28-8 (12-I-69)&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
4.28.8.20Subroutine Name: MTRPLT
I.Entry Point: MTRPLT
2.Purpose: Togenerate the&amp;quot;consistent&amp;quot; (coupled) element massmatrix foratriangular
plate element.
3.Calling Sequence: CALLMTRPLT
4.28.8.21 Subroutine Name: MQDPLT
I.Entry Point: MQDPLT
2.Purpcse: Togenerate the&amp;quot;consistent&amp;quot; (coupled) element massmatrix foraquadrilateral
plate elerent.
3.Calling Sequence: CALLMQDPLT
4.28.8.22 Subroutine Name: MTRIQD
I.Entry Point: MTRIQD
2.Purpose: Togenerate the&amp;quot;consistent&amp;quot; (coupled) elenent foranyofthefollowing
elements: T_IAI, TRIA2, QUADI, QUAD2.
3.Calling Sequence: CALLMTRIQD (IARG)
l-TRIAl element.
2-TKIA2 element.
IARG=
3-QU_I element.
4-QUAD2 element.
4.28.8.23 Subroutine Name: MFLUD2
I.Entry Point: MFLUD2
2.Purpose: Togenerate thepsuedo massmatrix terms fortheFLUID2 andAXIF2 elements.
3.Calling Sequence: CALLMFLUD2
4.28-8a (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA2(STRUCTURAL MATRIX ASSEMBLER -PHASE2)
4.28.8.24
I.
2.
3.
4.28.8.25 Subroutine Name:
I.
2.
3.
4.28.8.26 Subroutine Name: MFREE
I.EntryPoint: MFREE
l•
2.
3.Subroutine Name: MFLUD3
EntryPoint: MFLUD3
Purpose: Togenerate thepsuedo massmatrix termsfortheFLUID3 andAXIF3elements.
Calling Sequence: CALLMFLUD3
MFLUD4
EntryPoint: MFLUD4
Purpose: Togenerate thepsuedo massmatrix termsfortheFLUID4 andAXIF4elements.
Calling Sequence: CALLMFLUD4
2.Purpose: Togenerate thepsuedo massmatrix termsforthefreesurface element.
element isinternally generated inIFP4fromFSLIST data.
3.Calling Sequence: CALLMFREE
4.28.8.27 Subroutine Name: MSLOT
EntryPoint: MSL_T
Purpose: Togenerate psuedo massmatrix termsfortheSL_T3andSLOT4elements.
4.28.8.28
I.
2.
3.Calling Sequence: CALLMSL_T(IARG)
0=SLOT3IARG
1:SL_T4
Subroutine Name: MSOLID
EntryPoint: MS,LIDThis
Purpose: Togenerate themassmatrix termsforthethree-dimensional solidelements.
Calling Sequence: CALLMSOLID(1)
IElement
1 TETRA
2 WEDGE
3 HEXAI
4 HEXA2
4.28-8b (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)
4.28.9 Design Requirements
4.28.9.1 Open CoreDesign
Theopencoredesign forSMA2 isthesameasthatinSMAIwith theexception that/SMA2X/
defines thebeginning ofopen coreandonlyfourbuffers areneeded, oneeachforMGG,BGG,
ECPTandGPCT.
4.28.9.2 Common Stcrage Requirements
Thecommon storage requirements forSMA2aresimilar tothose inSMAll Thecommon blocks
/SMA2I_/,/SMA2BK/,/SMA2CL/,/SMA2ET/and/Sr_2DP/ofSMA2correspond to/SF_II_/,/SMAIBK/,
/SMAICL/,/SMAIET/and/SMAIDP/ofSMAI. SeetheMFDforSMAI (seesection 4.27.9). The
following differences areworthy ofnote.
I.In/SMA21@/,words 15and16areundefined andwords 23through 36define matrix
control blocks forMGGandBGG.
2./SMA2CL/isonly 131words inlength, thelasttwowords of/SMAICL/being reserved
forvariables unique toSMAI.
4.28.9.3 Arithmetic Considerations
Floating point arithmetic operations arecarried outindouble precision.
and[Bgg] arerealsymmetric double precision matrices.
4.28.10 DiaBnostic MessaBesBoth[Mgg]
Seethediagnostic message section intheMFDforSMAI (section 4.27.10).
4.28-9 (711170)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P44</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_044/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_044/</guid>
      <description>
        
        
        &lt;p&gt;4.29
4.29.1
4.29.2FUNCTION_ MODULEGPWG(GRIDPOINTWEIGHTGENERATOR)
FUNCTIONAL MODULEGPWG(GRIDPOINTWEIGHTGENERATOR)
Entry Point: GPWG
Purpose
Tocon_Dutethecenter ofmassofthestructurerelative toagiven point andfindthe
principal inertias about thecenter ofgravity.
4.29.3 DMAPCalling Sequence
GPWG BGPDT,CSTM,EQEXIN,MGG/_GPWG/V,Y,GRDPNT/V,Y,WTMASS
4.29.4 Input DataBlocks
BGPDT
CSTM
EQEXIN
MGG
Notes:-Basic GridPoint Definition Table.
-Coordinate System Transfor_tion Matrices.
-Equivalance between external gridorscalar numbers andinternal nu_ers.
-Partition ofmassmatrix -gset.
I.BGPDT,EQEXIN andMGGcannot bepurged.
2.CSTMmustbepresent ifsome gridpoint ofthemodel isnotinbasic
coordinates.
4.29.5 Output DataBlocks
_GPWG -GridPoint Weight Generator Output Table.
Notes: This datablock cannot bepurged.
4.29.6 Parameters
GRDPNT
WTMASS-Input-integer-default =-l.GRDPNT selects thegridpoint about which the
inertias willbecalculated. IfGRDPN1 isnottheexternal IDofageometric
gridpoint, thebasic originisused.
-Input-real-default =l.O. WTMASS gives theratio ofmasstoweight forthe
structure. Alloutput quantities areinweight units.
4.29-I (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.29.7 Method
TheGridPointWeight Generator module calculates themasses, centers ofgravity, and
inertias ofthegeneral mathematical modelofthestructure. Thedataareextracted fromthe[Mgg]
matrix byusingarigidbodytransformation calculation. Thetransformation isdefined bythe
global coordinate displacements resulting fromunittranslations androtations ofthewholebody
aboutareference point.
Because ofthescalar masseffects, thetotalmassmayhavedirectional properties, andthe
center ofgravity maynotbeaunique location. Thiseffect isshown intheoutput bygiving for
eachofthethreemasses itsowndirection andcenter ofgravity. Theinertia termsarecalculated
byusingthedirectional masseffects. Theaxesaboutwhichtheinertia termsarecalculated may
notintersect. However, theseaxesarethosewhichprovide uncoupled rotation andtranslation
effects. Thisisthesignificance oftheterm&amp;quot;center ofgravity&amp;quot;. Ifthestructural modelhas
beenconstructed usingonlyrealmasses, thethreemasses printed outwillbeequal, thecenter of
gravity willbeunique, andtheaxesoftheinertia termswillintersect atthecenter ofgravity.
Theactual computation proceeds in4parts.
I.Computation ofthe[D]Tmatrix takesplaceinsubroutine GPWGIA. Sixvectors areformed
whichwilldescribe thesixmotions aboutthereference point. Thematrix [D]formed from
thevectors whichdescribe rigidbodydisplacements inglobal coordinates intermsofthesix
unitdisplacements androtations inbasic coordinates atthereference point:
(Ug}=[D](Uo}(reference point). (I)
Themethod ofgeneration isasfollows:
EQEXlN isplaced incoreandsearched forGRDPNT toobtain itsinternal sequence number. If
thevalueoftheparameter GRDPNT isnottheIDnumber ofaphysical gridpoint, thebasic
origin isused. Assuming GRDPNT isaphysical gridpoint, BGPDT isreadtoobtain {Ro]forthe
reference point. TheBGPDTfileisthenrewound. CSTM(ifpresent) isplaced incoreand
readied forusebysubroutine PRETRS. Eachgridpoint intheBGPDT isconsidered inorder.
Ifitisascalar point, zeroisstored ineachofthesixcolumns of[D]T.
Ifitisagridpoint,
{ri}:{Ri}-{Ro}: , (2)
4.29-2 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR)
iscomputed where {Ri}isthebasic coordinate location oftheithgridpoint given inthe
BGPDT table and{Ro}isthelocation ofthereference point.
Thetransformation matrix tothegridpoint,
i0r3 -i21[Tr]:-r30 l &amp;rsquo;
r2-rI(3)
isformed. Subroutine TRANSS calculates the3x3transformation matrix [Ti]fromglobal
coordinates tobasic coordinates forthegridpoint. Thematrix
piT:TiTTr1[d]:F&amp;rsquo;-
L0:Ti(4)
Therowsof[d]formthecolumns of[D]T.Thematrix [D]Tisgenerated a iscomputed.
column atatimeandispacked outontoascratch file.
2.Ifallpoints were scalar points, GPWGreturns; otherwise subroutine TRANPI is
called toform[D]from[D]T,
3.[Mo]iscomputed bytwocallstosubroutine SSG2B,
[Mo] :[D]T[Mgg] [D]. (5)
4.Output quantities arecomputed asfollows:
Moisunpacked, output andpartitioned asfollows:
: tr]
(Thematrix issymmetric, wherethesuperscripts tandrrefertotranslation androtation
respectively.)
Acheckismadeforinconsistent scalar masses. Let
andt2 (7)6=&lt;em&gt;/Z(Mij )
:&lt;/em&gt; i_j. (8)
4.29-3 (8/I172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
If_&amp;gt;10-3,thecoordinates should berotated. Otherwise [S]=[I]. Ifrotation
isnecessary, theeigenvectors of[&lt;em&gt;t], {el} ,{e2} ,and{e3},aredetermined bythe
Jacobi technique. Define
[S]:[{eI},{e2} ,{e3}].(g)
The[S]matrix isoutput. [Mt], [Mr]and[Mtr]arecomputed asfollows:
[Mt]=[s]T[&lt;em&gt;t][S], (IO)
[Mtr]:[s]T[&lt;em&gt;tr][S], (II)
[Mr]:[s]T[&lt;/em&gt;-r][S]. (12)
Thefollowing terms, defined intheprincipal axissystem {el}, {e2}, and{e3}, arecalculated
andoutput: Themass terms are:
:&lt;/em&gt; (13) MxMI&amp;rsquo;
My M2&amp;rsquo; (14)
=MzM3&amp;rsquo; (15)
the&amp;quot;centers ofgravity&amp;quot; are:
tr
MII
Xx:&lt;/em&gt;&amp;lsquo;Yx-
tr
M23
Xy-My&amp;rsquo;Yy-
tr
-M32
Xz-M&amp;rsquo;Yz-ztr tr
-M13 M12
&amp;ldquo;x&amp;rsquo;zx: (161
tr tr
M22 -M21
My&amp;rsquo;Zy=My&amp;rsquo; (17)
tr tr
M31 M33
Mz,Zz=Mz (18)
andtheinertias are:
r 2_Mzy2 Ill=Mll-MyZy z&amp;rsquo;(19)
r
Il2=121=-Ml2-MzXzYz&amp;rsquo;(20)
= = r XyZ.y, Il3 131 -Ml3-My
=r x2_Mx2 122 M22 &amp;ldquo;Mzz Zx&amp;rsquo;(21)
(22)
4.29-4 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGPWG(GRIDPOINTWEIGHTGENERATOR)
==r-MxYxZx&amp;rsquo; I32 123 -M23
133=M_3 MxYx2-MyXy2.(23)
(24)
These terms formthesymmetric matrix [I].
Forprinciple inertias eigenvalues andeigenvectors arefound suchthat:
°°1FIlPl IP20 =[Q]T[I][Q]. (25)
[Q]contains thenormalized eigenvectors (thedirections oftheprincipal inertias), and
theIPiterms aretheeigenvalues. Thematrices [S]and[Q]areactually coordinate
rotation matrices andshowthedirections oftheprincipal masses andinertias.
4.29.8 Subroutines
Utility Subroutines PRETRS,TRANSS,TRANPI,SSG2B andGMMATS areused. Seesubroutine
descriptions, section 3.
4.29.8.1 Subroutine Name: GPWGIA
I.Entry Point: GPWGIA
2.Purpose: Toformthe[D]Tmatrix.
3.Calling Sequence: CALLGPWGIA(P_INT,BGPDT,CSTM,EQEXIN,DT,N_G_)
P_INT
BGPDT
CSTM
EQEXIN
DT
N_G_-External gridpoint idofreference point -integer -input.
-GIN_ filenumber of_GPWG -integer -input.
-GIN_filenumber ofCSTM-integer -input.
-GIN_file number ofEQEXIN -integer -input.
-GIN_file nu_er offileonwhich [D]Twill bewritten -integer -input.
oFlagforallscalar problem- integer -output. N_G_ =0implies all
scalars.
4.29.8.2 Subroutine Name: GPWGIB
I.Entry Point: GPWGIB
4.29-5 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
2.Purpose: Toformoutput quantities asgiveninparagraph 4ofsection 4.29.7.
3.Calling Sequence: CALLGPWGIB (M_,&lt;em&gt;GPWG,WTMASS,IP)
M&lt;/em&gt;
@GPWG
WTMASS
IP-GIN_filenumber of[Mo]matrix -integer- input.
-GIN_filenumber of_GPWG-integer -input.
-Masstoweight ratioparameter -real-input.
-External gridpointidofreference point(=0ifbasicorigin wasused)
-integer -input.
4.29.8.3 Subroutine Name: GPWGIC
I.
2.
method.EntryPoint: GPWGIC
Purpose: Tocompute eigenvectors andvalues ofa3by3matrix bytheclassical Jacobi
3.Calling Sequence: CALLGPWGIC (B,E,EV,IFLAG)
B -3by3inputmatrix -real-input.
E 3by3matrix ofeigenvectors -real-output.
EV 3eigenvalues -real-output.
IFLAG Errortermination flag-integer -output.
notconwrge.
4.29.9 Design Requirements
GPWGrequires fourscratch files. OpencoreforGPWGIA isdefined at/GPWGAI/.
coreforGPWGIB isdefined at/GPWGBI/.
Thelayout ofopencoreisasfollows:
C_MM_N /GPWBGI/
)
I1BGPDTentry
CSTMDataBlock16words perentry
GIN_bufferCSTMIfIFLAG&amp;gt;O,GPWGIC could
Open
4.29-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR)
C_N IGPWGAI/
INo]
_GPWG36words for6by6matrix
GIN_buffer
4.29.10 Diagnostic Messages
Thefollowing fatal error messages mayoccur: 3007, 3008.
4.29-7&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)
4.30 FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)
4.30.I Entry Point: SMA3
4.30.2 Pur__
Togenerate thefinal stiffness matrix, [Kgg], bygenerating amatrix oforder gforeach
x
general element inthemodel, andsuccessively adding this matrix to[Kgg], thestiffness matrix
exclusive ofgeneral elements.
4.30.3 DMAP Calling Sequence
SMA3 GEI,KGGX/KGG/V,N,LUSET/V,N,N_GENL/V,N,NOSIMP $
4.30.4 Input Data Blocks
-General Element Input.
-Partition ofstiffness matrix exclusive ofgeneral elements -gset.GEl
KGGX
Note:
I.
2.
elements (i.e., there arenosimple elements).
4.30.5 O__utput Data Blocks
KGG -Partition ofstiffness matrix -gset.
inthemodel, including general elements.
Not___e_e: KGGmaynotbepre-purged.
4.30.6 Parameters
LUSET
NBGENLGEIcannot bepre-purged.
KGGX maybepre-purged. This implies that themodel consists entirely ofgeneral
Contains contributions from allelements
Input-integer-no default value. LUSET isthetotal number ofdegrees of
Kxfreedom inthegdisplacement set. Itistheorder ofthe[gg]and[Kgg]
matrices.
Input-integer-no default value. NBGENL isthenumber ofgeneral elements in
theGEldatablock.
4.30-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
NOSIMP -
4.30.7 Method
4.30.7.1Kx
Input-integer-no default value. IfNOSIMP &amp;lt;O,[gg]doesnotexist, i.e.,all
elements ofthemodelaregeneral elements. IfNOSIMP zO,[K_g]_doesexist.
Mathematical Considerations
Twomatrices canbeusedtoformastiffness matrix foreachgeneral element intheGEl
datablock: aflexibility influence coefficient matrix, [Z],andarigidbodymatrix, [S].
Theformer mustbepresent andmustbenon-singular; thelatter mayormaynotbepresent.
Thesetofdegrees offreedom (scalar indexnumbers) usedby[Z]isdesignated the&amp;quot;ui&amp;quot;set;
thesetofdegrees offreedom usedby[S]isdesignated the&amp;quot;Ud&amp;quot;set.Callthelength ofthe
uisetm,andcallthelength oftheudsetn.[Z]ismbym,and[S]ismbyn.
Foreachgeneral element inthemodel, thestiffness matrix corresponding tothegeneral
element, [Kge], ismadeupoffourpartitions iftheudsetexists. Theyare:
[Kii] :[Z]-I,
[Kid] :[Z]-I[s] ,
[Kdi] =[s]T[z] -I=
[Kdd] =[s]T[z]-I[s]T
[Kid] ,(1)
Thefourmatrices mustbemerged suchthatI):
[Kge]:
K.:Kdl,dd]
and
coordinates inorderofascending scalar indexnumbers.
Iftheudsetdoesnotexist, then
INge]:[Kii]=2)therowsandcolumns of[Kge]mustcorrespond toamerged listofbothuiandud
[z]-I(2)
(3)
(4)
(5)
(6)
4.30-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)
4.30.7.2 Initialization
TheGEIdatablock isopened, andtheheader record isskipped. Itisdetermined whether
thenumber ofgeneral elements, f,isevenorodd. Thisisdonetoinsure thattheresult of
thefinal matrix addition,
where[Kgg] =[Krs]+[Kgef] , (7)
f-l
[Krs]=[K_g] +T[Kgei] , (8)i=l
and[Kgef] isthefinal general element matrix, willbewritten ontheoutput datablock, KGG.
KxIf[gg]doesnotexist, andthere isonlyonegeneral element, thentheGINOfilenumber
(201) fortheKGGdatablock isstored inIFA,thevariable which contains theGIN(_filenumber of
thefileonto which thecurrent [Kge]matrix willbepacked.
Theprincipal logic ofthemodule driver, S,MA3, iscarried outinaloop inwhich, during
eachpass oftheloop, a[Kge]matrix isgenerated andadded, using subroutine SSG2C, tothe
running summatrix, [Krs].
4.30.7.3 Generation andAddition ofaGeneral Element Matrix
Thesteps involved intheprincipal loopoftheprogram areasfollows:
I.Theloopcounter isincremented.
2.Thefirst three words ofthenextlogical record arereadfromGEl: theelement id;
thelength oftheuiset,m;andthelength oftheudset,n.
3.Thematrix control blocks forthescratch files IFBandIFCareinterchanged
provided that:
a.this isnotthefirst passthrough theloop;
b.thisisnotthesecond passthrough theloopandthenumber ofgeneral element
isodda__n_dthere areonlygeneral elements inthemodel;
and
c.this isnotthesecond timethrough theloopand[K_g] exists.
4.30-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.Itisdetermined whether theorders ofthe[Z]and[S]matrices aresuchthatthe
in-core matrix routines GMMATD andINVERD canbeused. Thisisaccomplished asfollows.
Define
p=2(m+n+m2+n2+2mn), (9)
q=2(m+n+m2)+3m, (I0)
and
r=max(p,q) . (II)
pisthenumber ofcomputer wordsneeded tostore: I)theuiandudsetsintwo
different sorts; 2)thedouble precision mbym[Z]matrix; 3)thedouble precision
nbyn[s]T[z]&amp;lsquo;I[s] matrix; and4)thedouble precision mbyn[S]matrix andthedouble
precision mbyn[Z]&amp;lsquo;I[s] matrix.
qisthenumber ofcomputer words needed tostore: I)theuiandudintwodifferent
sorts; 2)thedouble precision mbym[Z]matrix; and3)3mcellsofscratch storage
tobeusedbysubroutine INVERD.
Ifrislessthantheavailable amount ofcore,thein-core routine, SMA3A, isGalled
tocompute [Kge]. Otherwise: I)SMA3Bgenerates [Z]and-[s]T; 2)FACTOR decomposes
[Z]intoitstriangular factors; 3)SSG3Acomputes [Z]-I; 4)SSG2Bcomputes -[s]T[z];
5)TRANPI transposes -[s]T; 6)SSG2Bcomputes -[Z][s]T; 7)SSG2Bcomputes [s]T[z]-I[s];
and8)SMA3Cbuilds thefinal [Kge]matrix oforder gbyg.
5.Thematrix [Kge]having beengenerated asinstep4,SSG2Ciscalled toadd[Kge]to
[Krs].
4.30.8 Subroutines
Utility routines GMMATD, INVERD, FACTOR, SSG3A, SSG2B, TRANPI andSSG2C areusedinthis
module.
4.30-4&lt;/p&gt;
&lt;p&gt;4,3O.8.1
l.
4.30.8.2
I.
2.
3,FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)
Subroutine Name:SMA3A
2.
routines GMMATD andINVERD.
3.Calling Sequence: CALLSMA3A (MCBA)
COMMON /GENELY/-seedescription below (section 4.30.9.2).
MCBA-
4.Method:Entry Point: Sr,_3A
Purpose: Tobuild agbyggeneral element matrix, [Kge], using thein-core matrix
Thematrix control block corresponding to[Kge]. Wordlisinput; words
2through 7areoutput.
Theuisetandtheudset(ifpresent) ofscalar index numbers arereadinto
core, andalistLisformed oflength m+n,suchthatL(k) =_implies thecthentry
ofthestring: {Uil,Ui2 ,&amp;hellip;.Uim,Udl,Ud2 &amp;hellip;..Udn} isthekthsmallest. Them2single
precision elements of[Z]arereadandstored atdouble precision locations. [Z]-lis
computed using INVERD. [S],ifpresent, isreadandstored atdouble precision locations.
GMMATD iscalled twice tocompute [Z]-I[s] and[s]T[z]-I[s]. Theelements of[Kge], as
defined inEquation 5,areoutput totheGINOfilecorresponding toMCBA(1) with non-zero
terms intherowandcolumn positions specified bytheuiandudsets.
determines thesequence ofelements tobeoutput foranyonecolumn.
Subroutine Name: SMA3B
Entry Point: SMA3B
Purpose: Tocreate [Z]and[S]fromtheGEIdata.
Calling Sequence: CALLSMA3B (IFLAG)
C_MM_N /GENELY/-seedescription below (section 4.30.9.2).
IFLAG -IIFLAG =-Iimplies [S]doesnotexist. 1IFLAG limplies [S]exists. -integer -output.
4.ThelistL
Method: TheGEIdatablock isreadfortherownumbers andnon-zero terms of[Z].
These areoutput instandard NASTRAN matrix format bysubroutine BLDPK. IS]Tisgenerated
inasimilar manner. (-[S]Tiscreated rather than[S]forcomputational ease insubse-
quent calculations -seeparagraph 4insection 4.30.7.3 above).
4.30-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.30.8.3 Subroutine Name: SMA3C
I.EntryPoint: SMA3C
2.Purpose: Tocreate the[Kge]matrix from[Z]-I,
3.Calling Sequence: CALLSMA3C (IFLAG, KE)-[z]&amp;ldquo;l[s],.[s]TEz] -Iand[s]T[z]-I[s].
C@MM_N /GENELY/ -seedescription below (section 4.30.9.2).
COMMON //LUSET sizeofproblem.
IFLAGisasdescribed inSMA3B. Hereitimplies [Kge]=[Z]-I.
KE-Matrix control blockfor[Kge]-integer -input/output.
4.Method: Amatrix ofgsizeiscreated from[Z]-I, [Z]-I[s], -[s]T[z] and[s]T[z]-I[s]
withthenon-zero termsintherowandcolumn positions specified bytheuiandudlists.
Thismatrix canbeaddedtotheexisting [Krs]toreflect thestiffness termsofthis
general element.
4.30.8.4 BlockDataSubprogram: SMA3BD
Purpose: Toinitialize theGINOfilenumbers andGINOoptions indicators in/GENELY/,
whichisdiscussed below.
4.30.9 Design Requirements
4.30.9.1 OpenCoreDesign
Theopencorecommon blockforthemodule driver SMA3andsubroutine SMA3A isdefined by
thefollowing F_RTRAN statements:
I.D@UBLE PRECISI@N DQ(1)
2.INTEGER IQ(1)
3.DIMENSION Q(1)
4.C_MMON /GENELX/ Q
5.EQUIVALENCE (IQ(1),DQ(1),Q(1))
SMA3usesopencoreonlyforoneGIN_buffer, which isreserved fortheGEldatablockwhile
SMA3A, SMA3B, orSMA3Cisexecuting, andwhichisreserved forusebySSG2Cwhenthisroutine
adds[Kge]to[Krs]attheendoftheprincipal loopinthedriver.
4.30-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)
SMA3A usesloworder opencore asoutlined inparagraph 4insection 4.30.7 above.
Theopencore forsubroutine SMA3B isdefined at/SMAB3/andisusedfortwoGIN_buffers
inhighorder opencore.
Theopencore forsubroutine SMA3C isdefined at/SMAC3/andisusedfor: l)theuiandud
setsinloworder opencoreand2)sixGIN_buffers inhighorder opencore.
4.30.9.2 Common Storage Requirements
Thecommon block /GENELY/isused for: l)GIN2filenumbers; 2)GIN_option indicators;
3)matrix control blocks; and4)zeropointers tosub-arrays in/GENELX/when SMA3A executes.
Itisdefined asfollows:
COMMON /GENELY/IFGEI,IFKGGX ,IF{_UT,IFA,IFB,IFC,IFD,IFE,IFF,INRI.4,_UTRW,CLSRW,CLSNRW, E_R,
NE_R,MCBA(7),MCBB(7),MCBC(7),MCBE(7),MCBF(7),MCBKGG(7)&lt;em&gt;IUI_IUD,IZI,IS,IZIS,ISTZIS,IBUFF3(3),
LEFT
Variabl e Definition
IFGEI,IFKGGX,IF_UT GIN&lt;/em&gt; filenumbers forthetwoinput datablocks
andtheoutput datablock respectively.
IFA GIN_filenumber forthecurrent [Kgelbeing
computed.
IFB,IFC GIN_filenumbers for[Krs]and[Krs]+[Kgel
matrices. Theyare&amp;quot;flip-flopped&amp;rdquo; suchthat
IFC=IF_UT forthefinal matrix addition.
IFD,IFE,IFF GIN_file numbers forscratch files which are
used insubroutine SMA3C.
INRW,_UTRW,CLSRW,CLSNRW,E_R,NE_R GIN0option indicators asdefined insection
4.27.9.3.
MCBA,MCBB,&amp;hellip;,MCBF,MCBKGG Matrix control blocks forthematrices corres-
ponding toIFA,IFB,&amp;hellip;,IFF,andIFKGXX.
IUI,IUD,IZI,IS,IZIS,ISTZIS Zero pointers tothesub-arrays in/GENELX/
corresponding to:I)u_set;2)uAset;3)[Z]-&amp;rsquo;;
4)IS]; 5)[z]-l[s] and6)[s]T[z]-I[s]. Note
thatIZI,IZIS, ISTZIS arezeropointers into
doubleprecision arrays.
IBUFF3(3) Three wordbuffer which contains thegeneral
element id,mandn.
LEFT Thenumber ofcomputer words currently remaining
in/GENELX/.
4.30-7&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.30.9.3 Arithmetic Considerations
Allfloating pointarithmetic operations arecarried outindouble precision.
4.30,10 Diagnostic Messages
InSMA3A, system fatalerror2028canoccur. Seesection 6oftheUser&amp;rsquo;sManual fordetails.
4.30-8&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)
4.31 FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)
4.31.I Entry Point: GP4
4.31.2 Purpose
GP4assembles thevarious displacement sets andbuilds thedisplacement setdefinition
table (USET). Additionally, forstatics problems, GP4analyzes subcases based onsingle-point
andmultipoint constraint sets, andsetparameters tocontrol execution oftheRigid Format.
4.31.3
GP4
4.31.4
CASECC
GEOM4
EQEXIN
SIL
GPDT
Note:
4.31.5
RG
YS
USET
XX
Note:DMAPCallin9Sequence
CASECC,GEBM4,EQEXIN,SIL,GPDT /RG,YS,USET,XX /V,N,LUSET /V,N,MPCFI /V,N,MPCF2 /
V,N,SINGLE /V,N,_MIT /V,N,REACT /V,N,NSKIP /V,N,REPEAT /V,N,N_SET /V,N,N_L /
V,N,NBA /C,N,SSID $
InputDataBlocks
CaseControl DataTable.
-Displacement setdefinitions.
-Equivalence between external gridorscalar andinternal numbers.
-Scalar IndexList.
-GridPointDefinition Table.
OnlyGEBM4maybepurged.
Output Data Blocks
-Multipoint constraint equations matrix.
-Constrained displacement vector(s) set.
-Displacement setdefinition table.
-Reserved forfuture use.
YSmaybepurged.
4.31.6 Parameters
LUSET -Input-integer-no default.
MPCFI -Output-integer-no default.
constraints, -lotherwise.Degrees offreedom intheg-displacen_nt set.
+lifthecurrent subcase contains multipoint
4.31-I (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
MPCF2
SINGLE
_MIT
REACT
NSKIP
REPEAT -
NOSET -
N_L
NBA
SSID -
4.31.7 MethodOutput; integer, nodefault. +Iifthecurrent subcase contains adifferent
multipoint constraint setfromthelastsubcase, -Iifnonewmultipoint constraint
setornomultipoint constraints inthecurrent subcase.
-Output, integer, nodefault.
constraints, -Iotherwise.
-Output, integer, nod_fault.
-Iotherwise.
-Output, integer, nodefault.+Iifthecurrent subcase contains single-point
+Iifthemodel contains omitted coordinates,
+Iifthemodelcontains supports, -Iotherwise.
Inputandoutput, integer, deault =O.Number ofrecords toskiptoreachthe
firstrecord intheCaseControl DataBlock forthenextsubcase. (NSKIP =0for
thefirstsubcase).
Output, integer, nodefault.
problem, +Iotherwise.
Output, integer, nodefault. -IifMPCFI=-IandSINGLE :-IandOMIT:-Iand
REACT=-I,+Iotherwise.
Output, integer, default =+I.-Iifalldegrees offreedom inthemodel belong
todependent displacement sets(i.e., nodegree offreedom belongs toan
independent set),+Iotherwise.
Output, integer, default =+I.-IifMPCFI=-IandSINGLE =-Iand_MIT=-I,
+Iotherwise.
Input, integer, default =O.Reserved forfuture use.-Iifthecurrent subcase isthelastsubcase inthe
CASECC isreadforeachsubcase. Parameters aresettocontrol thereturn pointforthenext
subcase. Theuser-requested constraint setnumbers areextracted andsaved forcontrol ofthe
following steps.
Themulti-point constraint cards (MPC)eachdefine arowofaconstraint matrix equation:
[Rm]{um}+[Rn]{un}:0 (I)
4.31-2 (811/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGP4(GEOMETRYPROCESSOR-PHASE4)
For&amp;rsquo;eachrequestedMPCset,theMPCcardimagesarereadfromGEBM4,andthegridpointsand
theirscalarcoordinates (orscalarpoints)areconvertedtothescalardegreeoffreedomnumbers.
TheEQEXINandSILdatablocksareplacedincore,thepoint&amp;quot;id&amp;quot;numberisfoundasthefirst
entryofapairinthefirstrecordofEQEXIN,thecorresponding numberinthesecondentryofthe
pairistheinternalgridpointindex.TheithpositionoftheSlLcontainsthevalueofthe
scalardegreeoffreedomnumberforthefirstdegreeoffreedomofpointi.TheSILvalue,SILu,
forthecomponentc,(c=1,2&amp;hellip;..6)ofagridpointpisfoundbytheequation:
SIL :SIL +(c-I) (2)
u p
TheSILofapoint isthescalar index ofitsfirst degree offreedom. Thepoint &amp;ldquo;id&amp;rsquo;s&amp;rdquo; and
components given ontheMPCcards areconverted toscalar index numbers, asorted list isformed
oftheumscalar indices, (see definition below ofthesets defined inUSET), andthedata are
written onSCRI, ascratch file. Each term intheequation ispaired with apacked word giving
itsequation number anditsSILvalue. Theequation data arenowsorted togroup thedata byeach
scalar index number inorder ofincreasing dependent umpoint number. This essentially creates a
Fq
column stored matrix LRg_. Each rowinthematrix corresponds toaumpoint. Each column corre-
sponds toaunique scalar index (Ugpoint).
TheSUP_RT (Ur), ASET (ua)andOMIT (uo)card images areread from GERM4. Thegrid andcom-
ponent numbers aresorted andwritten onSCRI. TheGPDT isread, andalist isformed ofthe
permanent single-point constraints (Usg) which were identified ontheGRID bulk data cards. This
list iswritten onSCRI.
TheSPCADD, SPCI andSPCbulk data card images identify thesets ofsingle-point constraints
used asboundary points (Usb) andinclude anypossible constrained displacement values (Ys). The
user-requested setofSPCcards areextracted from theCASECC data block andtheSPCADD cards.
Therequested SPCandSPCI card images areread, thegrid andcomponent &amp;ldquo;id&amp;rdquo; numbers areconverted
toscalar indices, andapaired list ofscalar indices andtheir corresponding displacement values
iswritten onSCRI. Thenon-zero Ysvalues formed intheprevious step form apacked vector with
indices given bytheir position inthelist. This istheYSdata block, avector packed relative
totheusset.
TheUSET data block contains onecoded word foreach scalar degree offreedom intheentire
structure. Theword iscoded toidentify thesetorsets ofcoordinates towhich thescalar
4.31-3 (Bl1172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
degree offreedom belongs (seeSection 2.3.13). Anareaofcoreissetequal tozero,andthe
listsofum,uo,uranduspoints arereadfromSCRI. Thescalar indexofacoordinate corre-
sponds toaposition incore. Thewordinthatposition ismodified toidentify tilesettowhich
thatscalar indexbelongs. Withtheurn,Uo,uranduspoints known, theUg,un,uf,uaandu_
points maybeidentified. The&amp;quot;nesting&amp;rdquo; ofthesesetsfollows thescheme:
U
m
u
S
uo
un
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.1
u_ IuaUg
USETiswritten asonelogical record ontheUSETdatablock.
Thefinaloperation istoprocess eachdegree offreedom inUSETtoinsure thatthedisplace-
mentsetdefinitions areconsistent andassign anyotherwise undefined degrees offreedom inUSET.
Thegoverning rule(asmaybenotedinthenesting scheme) isthateachdegree offreedom may
belong toatmostonedependent subset. Ifanyinconsistent definitions arefound, theyare
written onSCRI. Wheneachpointhasbeenanalyzed, EQEXIN andSILarereadintocore. Then
SCRIisread,and,foreachentry, anerrormessage isqueued. MESAGE isthencalled toabnormally
terminate GP4.
Unassigned degrees offreedom areassigned according tothefollowing:
I.IfanyASET(orASETI) cardsarepresent, undefined degrees offreedom willbe
placed intheuoset.
2.if_MIT(or_MITI) cardsarepresent, undefined degrees offreedom willbeplaced inthe
uaset.Thesedegrees offreedom mayalsoberedundantly specified onASET(orASETI)
cardsifdesired. Inthiscaseallnon-uosetdegrees offreedom mustbespecified since
rulelapplies.
3.Ifneither ASET(orASETI) nor_MIT(or_MITI) cards arepresent, allfreedegrees of
freedom willbeassigned totheuaset.
4.31-4 (8/1/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEGP4(GEOMETRYPROCESSOR-PHASE4)
4.31.7.1 Definitions oftheSetsDefinedinUSET
UgAllstructural degreesoffreedomdefinedbygridandscalarpoints.
umDependentcoordinates usedinthemultipoint constraint equations. Definedas
thefirstdegreeoffreedomofanMPCcard.
un-Allstructural degreesoffreedomexceptum.
us-Allfixedpoints.TheUsgpointsaredefinedbytheGRIDcardsandhaveadisplace-
mentofzero.TheUsbpointsaredefinedbytheSPCcardsandmayhaveaconstrained
displacement.
uf-Alldegreesoffreedominthestructureexceptumandus.
uo-Theseare&amp;quot;omittedcoordinates&amp;rdquo; definedby_MITandBMITIcards.Instatics,the
structural matrixispartitioned, andthesedegreesoffreedomaresolvedseparately.
Indynamics,thedisplacements ofthesepointsareapproximated bytheirstatic
displacements undermassloads.
ua-Thesearetheunconstrained degreesoffreedomofthesystem.Theyincluderigid
bodymodesindynamics.
ur-Thesearefictitious supportsdefinedbytheSUP_RTcards.Indynamicsandinertia
relieftheelasticdisplacements aremeasuredrelativetothesepoints.
u_-Thissetincludesalldegreesoffreedomnotdefinedbytheum,us,uoandurpoints.
Thestiffnessmatrixdefinedbythesepointsisusedforthesolutionofdisplacements
versusloads.
4.31.8Subroutines
Themodule GP4consists ofamainsubroutine, GP4,andanauxiliary subroutine, GP4PRT.
4.31.8.1 Subroutine Name: GP4PRT
l•
2.EntryPoint: GP4PRT
Purpose:
a.Prints, atuserrequest viaDIAG21,alistofdegrees offreedom. Foreach
degree offreedom, anindication ismadeidentifying thesetstowhichitbelongs.
b.Prints, atuserrequest viaDIAG22,thecontents ofselected displacement sets.
Foreachset,alistofalldegrees offreedom belonging tothesetisgiven.
4.31-5 (8/I172)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P45</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_045/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_045/</guid>
      <description>
        
        
        &lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
3,
4.Calling Sequence: CALLGP4PRT (BUF)
Method: TheDIAGflagsaretested andlocalvariables set.TableEQE×IN isthenread
intoopencoreandsorted. IfDIAG21ison,tableUSET(already inopencore)is
examined andtheexternal degree offreedom isextracted fromEQEXIN andprinted along
withthesetindications. IfDIAG22ison,transpose process takesplace.
4.31.8.2 Subroutine Name: SCALEX
I.EntryPoint: SCALEX
2.Purpose: Decodes packed component codes.
3.Calling Sequence: CALLSCALEX (I,C,L)
I=Valuetobedecoded
C=Ifnon-positive, return afterloading IintoL(1).
L=Arrayintowhich thedecoded values areplaced.
4.31.9 Design Requirements
Themaximum storage requirement forGP4isonewordperdegree offreedom (i.e., LUSET=6*
(number ofgridpoints) +number ofscalar points) plusoneGIN_buffer. Itsopencoreisdefined
by/GP4C_R/. Twoscratch filesareusedbyGP4.
4.31.10 Diagnostic Messages
Thefollowing messages maybeissued byGP4:
2045,2048,2049,2050,2051,2052,2053,2101,3008,3001,3002,2110
4.31-6 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR)
4.32
4.32.1
4.32.2FUNCTIONAL MODULEGPSP(GRIDP_INTSINGULARITY PRBCESS_R).
EntryPoint: GPSP,
TheGPSTdatablock contains data onpossible stiffness matrix singularities. These singu-
larities mayberemoved through theapplication ofsingle ormultipoint constraints. TheGPSP
module checks eachsingularity against thelistofconstraints, andifthesingularity isnot
removed, writes dataforwarning theuser.
4.32.3 DMAPCallin 9Sequence
GPSP GPL,GPST,USET,SIL/_GPST $
4.32.4 Input DataBlocks
GPL-GridPoint List.
GPST-GridPoint Singularity Table.
USET -Displacement setdefinitions table.
SIL -Scalar Index List.
Note: Noinput datablock canbepurged.
4.32.5 Output DataBlocks
OGPST -Unremoved Grid Point Singularities. This datablock willbeprocessed bythe_FP
(Output File Processor) module.
4.32.6 Parameters
None.
4.32.7 Method
USET isreadintocore. TheUSETdatablock contains oneword foreachdegree offreedom in
thestructural model. Thisword identifies thedisplacement coordinate setstowhich thecoordi-
natebelongs. Eachentry intheGPSTdatablock contains theorder ofthesingularity andthe
scalar index numbers ofthedegrees offreedom involved. Thelogic ofthealgorithm depends on
theorder ofthesingularity. Foreachtypethelogic is:
I.Iforder =l,thecontents oftheGPSTdata are:
a._RDER :1
4.32-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
b.Number ofwordsfollowing
c.NI
d.
N21maynotappear
e.N3)
NI,N2andN3arethescalar indices ofthedegrees offreedom whichwillremove the
singularity ifconstrained. Ifthesingularity isnotremoved, the_GPSTdataisoutput.
2.Iforder=2:
a.CRDER =2
b.Number ofwords following
c.N11
d.N21
e.N1z
f.N2z
maynotappear
g.N13
h.Nz3
Eachpairofindices identifies twodegrees offreedom whichcausethesingularity. If
bothindices foranypairbelong totheUSET(UMorUS),thesingularity isremoved. If
onlyoneofthedegrees offreedom inapairisconstrained byausorumcoordinate, the
singularity order isnow_RDER=I.Thenumbers listed arenotunique, andmorethanone
oftheNijindices maybelong totheusorumsets. Keeping thesamesequence, the
unconstrained scalar indices ineachpartially constrained pairislisted inthe_GPST in
theformforORDER=I.
3.Iforder=3:
a.&lt;em&gt;RDER=3
b.Number ofwords following
c.NI
d.N2
e.N&lt;/em&gt;
Allthreeindices (NI,N2,andN3)mustbelong totheusorumsetstoremove the
4.32-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR)
singularity. Ifoneortwoofthecoordinates areconstrained, theorder istwoorone,and
theremaining scalar indices orindex islisted inthe_GPST.
Ifanysingularities areunremoved, amessage isgiven tothiseffect. AlsotheSIL
values must beconverted toexternal gridpoint-component notation foruser readability.
Thefirst timeanunremoved singularity isdetected, SILisreadintocorebeneath USET, and
GPLisplaced beneath SIL. EachSILvalue islooked upinSILforapointer intoGPLtothe
external gridpoint ID.Scalar points aredifferentiated fromgrid points. Data is
output tothe_GPST intheorder: gridpoint ID,type, singularity order andcomponents.
Whenallentries intheGPSThavebeenprocessed, theroutine returns.
4.32.8 Subroutines
None.
4.32.9 Design Requirements
Opencoreisdefined at/GPSPA/.
C_I_N /GPSPS/
USET
SIL
GPL
_GPSP
Buffer
GPSP
Buffer
Scratch
Buffer-
_SET,GPL,SIL}
}
}LUSET (Length ofUSET)
LSIL+I (Length ofSIL+I)
Last cellhasLUSET stored
LGPL (Length ofGPL)
GIN_buffer
GIN_buffer
GIN_buffer
4.32.9.1 Allocation ofCore Storage
Ifnosingularities exist, USET plustwoGIN_buffers mustbeheld incore.
exist, USET, SIL, 6PLplus three GIN_buffers mustbeheldincore.Ifsingularities
4.32-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.32.10 Diagnostic Messages
Thefollowing diagnostic messages mayoccur: 3007 (iftheGPSTdoesnotcontain legal SIL
numbers, indicating aprogramming error); 3008 (ifthecorestorage requirements given insection
4.32.9.1 arenotmet).
4.32-4&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEMCEI(HULTIPOINTCONSTRAINTELIMINATOR -PHASE l)
4.33 FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAII_T ELIMINATOR -PHASE l)
4.33.1 Entry Point: MCEI
4.33.2 Purpose
MCEIpartitions [Rg]into[Rm]and[Rn]andthen solves thematrix equation [Rm][Gm]
-[Rn] for[Gm].
4.33.3 DMAPCallin 9Sequence
MCEI USET,RG/GM $
4.33.4 Input DataBlocks
-Displacement setdefinitions table.
-Multipoint constraint equations matrix.
Neither USETnorRGmaybepurged.USET
RG
Note:
4.33.5 Output DataBlocks
GM
Note:
4.33.EMultipoint constraint transformation matrix -mset.
GMmaynotbepurged.
Parameters
None
4.33.7 Method
[Rg] isamatrix with eachrowdefining aconstraint equation. Therowscalar indices
correspond totheumsetofcoordinates andthecolumn indices correspond totheUgset. Thefirst
operationofMCEI istopartition [Rg]into[Rm]and[Rn]. MCEIA performs thisoperation by
initializing /PARMEG/andcalling PARTN (seesection 3.5.6 forPARTN details).
Thesecond operation ofMCEIistosolve thematrix equation
[Rm][Gm]=-JRn] (I)
4.33-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
for[Gin]. If[Rm]isdiagonal, tileoperation isstraightforward, InthiscaseMCEIDis
called. Theterms-riiarestored incore,the[Rn]matrix isreadinterpretively by
INTPK, andthetermsof[Gm]areFormed fromtheequation
r..
gij r.II
where thetermsinthenumerator belong to[Rn]andthoseinthedenominator belong to[Rm].
[Rm]isnotdiagonal, Equation 1issolved bydecomposition andforward-backward substitution.
Inthiscase,MCEIBiscalled. MCEIBperforms anunsymmetric decompositiun of[Rm]by
initializing /DC_MPX/ andcalling DECOMP. MCEICisthencalled byMCEI. MCEIC performs a
forward-backward substitution tosolvefor[Gm]byinitializing /GFBSX/ andcalling GFBS.
Seesection 3.5.15 and3.5.19 forfurther details onDECOMP andGFBS,respectively.
4.33.8 Subroutines
4.33.8.1 Subroutine Name: MCEIA
I.EntryPoint: MCEIA
2.Purpose: Topartition [Rg]into[Rm]and[Rn].
3.Calling Sequence: CALLMCEIA
4.33.8.2 Subroutine Name: MCEIB
I.EntryPoint: MCEIB
2.Purpose: Todecompose [Rm]intoloweranduppertriangular factors.
3.Calling Sequence: CALLNCEIB
4.33.8.3 Subroutine Name: MCEID
I.EntryPoint: MCEID
2.Purpose: Tosolvethematrix equation [Rm][Gm]
diagonal.=[Rn]for[Gin]where [Rm]is
3.Calling Sequence: CALLMCEID
4.33.9 Design Requirements
4.33-2(2)
If&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULEMCEI(MULTIPOINT CONSTRAINT ELIMINATOR -PHASEI)
4.33.9.1 Allocation ofCoreStorage
Themaximum corestorage requirement inthemodule isonedouble precision vector in
theumdisplacement setplusthree GINObuffers.
4.33.9.2 Environment
Communication ofGIN_filenames toeach ofthephases ofMCEIoccurs through blank
C_,I_N. Thefourphases aredesigned sothateachmaybeinaseparate overlay segment.
coreforeachofthephases isasfollows:
MCEIA: /MCEAI/
MCEIB: /MCEBI/
MCEIC: /MCECI/
MCEID: /MCEDI/.
4.33.10 Diagnostic Messages
Thefollowing messages maybeissued byMCEI:
3005, 3016Open
4.33-3&lt;/p&gt;
&lt;p&gt;4.34
4.34.1
4.34.2FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)
FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)
Entry Point: MCE2
Purpose
MCE2 partitions thestiffness matrix [Kgg] into[Knn],[Kmn]and[Kmm]andthen performs
thematrix reduction [Knn]=[_nn]+[GmIT[Kmn]+[_mnIT[Gm]+[Gm]T [_mm][Gm]
Similar partitions andreductions areperformed on[Mgg], [Bgg] and[K_g] ifthese matrices
arenotpurged.
4.34.3 D[CAPCalling Sequence
MCE2USET,GM,KGG,MGG,BGG,K4GG/KNN,MNN,BNN,K4NN $
4.34.4 Input DataBlocks
USET
GM
KGG
MGG
BGG
K4GG
Note:-Displacement setdefinitions table.
-Multipoint constraint transformation matrix -mset.
-Partition ofstiffness matrix -gset.
-Partition ofmassmatrix -gset.
-Partition ofdamping matrix -gset.
-Partition ofstructural damping matrix -gset.
MGG,BGGandK4GGmaybepurged.
4.34.5 Output DataBlocks
KNN
MNN
BNN
K4NN
Note:-Partition ofstiffness matrix -nset.
-Partition ofmassmatrix -nset.
-Partition ofdamping matrix -nset.
-Partition ofstructural damping matrix -nset.
MNN,BNNorK4NNmaybepurged onlyifMGG,BGGorK4GGispurged.
4.34.6 Parameters
None
4.34-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.34.7 Method
Using subroutine UPART togenerate rowandcolumn partitioning vectors andsubroutine
MPART toperform theactual partitioning, [Kgg] ispartitioned asfollows:
l_
FnniKnm1
_&amp;mdash;,&amp;mdash;-. (I)Lmn,Kmm]
Subroutine ELIMiscalled toperform thefollowing matrix reduction:
[Knn]=[Knn]+[Gm]T[_mn]+[Kmn]T[Gm]+[Gm]T[_m][Gm]. (2)
,K4Foreachofthedatablocks corresponding tothematrices [Mgg], [Bgg][gg]whichisnot
purged, theabovepartitioning andmatrix reductions areperformed.
4.34.8 Subroutines
Calls aremade tothefollowing matrix utility routines:
UPART seesection 3.5.9 fordetails
MPART seesection 3.5.9 fordetails
ELIM seesection 3.5.22 fordetails
4.34.9 Design Requirements
4.34.9.1 Allocation ofCoreStorage
Themaximum storage requirement forMCE2 isfour times thenumber ofdegrees offreedom
intheundisplacement setplusoneGIN@buffer.
4.34.9.2 Environment
ThemoduleMCE2consists ofonesubroutine, MCE2. Callsaremadetothematrix utility
routines asindicated above. Sixscratch filesareused.
4.34-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAI:_T ELIMINATOR)
4.35FUNCTIONAL MODULE SCEI
4.35.1 Entry Point: SCEI
4.35.2 Pu___ose(SINGLE-POINT CONSTRAINT ELIMINATOR)
4.35.5Toreduce thensetmatrices tofsetmatrices byremoving thesingle-point constraints.
4.35.3 DMAPCallinq Sequence
SCEI USET,KNN,MNN,BNN,K4NN/KFF,KFS,KSS,MFF,BFF,K4FF/ $
4.35.4 Input DataBlocks
USET -Displacement setdefinitions table.
KNN -Partition ofstiffness matrix -nset.
MNN -Partition ofmassmatrix -nset.
BNN -Partition ofdamping matrix -nset.
K4NN -Partition ofthestructural damping matrix -nset.
Notes: I.USETcannot bepurged.
2.KNN,MNN,BNN andK4NNcanbepurged.
3.Atleast onedegree offreedom must belong tothefandssets.
Output DataBlocks
KFF -Partition ofstiffness matrix after single-point constraints havebeen
removed -fset.
KFS -Partition ofstiffness matrix after single-point constraints havebeen
removed.
KSS -Partition ofstiffness matrix after single-point constraints havebeen
removed -sset.
MFF -Partition ofmassmatrix after single-point constraints havebeenremoved -
sset.
BFF -Partition ofdamping matrix after single-point constraints havebeenremoved -
fset.
K4FF -Partition ofstructural damping matrix withsingle-point constraints removed -
fset.
4.35-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.35.6 Parameters
None
4.35.7 Method
Thematrices arepartitioned using USET(UN,UF,US) asfollows (see section 1.7fordetails):
I. If[Knn] exists:
[Knn] &amp;ldquo;-_&amp;gt; _&lt;em&gt;Kff !Kf_s&lt;/em&gt;] (I) &amp;mdash;i- °
LKsfiKss]
The[Kff], [Kfs]and[Kss]partitions aregenerated andsaved.
2.If[Mnn]exists:
3.If[Bnn] exists:
K44.If[nn]exists::Mfs
[Mnn] :&amp;gt; LMsfff&amp;rdquo; !Mss&amp;quot;(2)
[Bnn] :&amp;gt; -B&amp;mdash;,-B-
Esf;ss(3)
K4 _iK4s
Inn] =&amp;gt; L&amp;quot;t,,
4
Forthe[Mnn], [Bnn] and[Knn] matrices, only the&amp;quot;ff&amp;quot; partition isgenerated andsaved.
Onecall toUPART followed by4calls toMPART accomplishes theabove tasks.
4.35-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SCE] ($1NGLE-POINTCONSTRAINT ELIMINATOR)
4.35.8 Subroutines
UPART andMPART arecalled. Seesubroutine description insection 3.5._
4.35.9 Design Requirements
Onescratch fileisnecessary.
4.35-3&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEl)
4.36 FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIQ_IER -PHASE])
4.36.1 EntryPoint: SMPI
Purpose 4.36.2
SMPI partitions [Kff] into [Kaa], and[Koa]and[Koo]. Thematrix equations [Koo] [Go] :-[Koa]
issolved for[Go]. [Kff] isthen reduced bythematrix equation [Kaa] =[Kaa]+[Koa]T[Go].
If[Mff] isnotpurged, itisreduced bytheequation [Maa] =[Maa]+[Go]T[Moa] +[Moa]T[GO]
+[Go]T [Moo][Go]. Similarly, [Bff] and[K_f] arereduced.
4.36.3 DMAPCalling Sequence
SMPI
4.36.4
USET
KFF
MFF
BFF
K4FF
Note:
4.36.5
G_
KAA -
K00 -
L@O -
u_o -
MAA -
M_ -
M_A -
BAA -
K4AA -USET,KFF,MFF,BFF,K4FF/GO,KAA,KBO,LOO,UO_,MAA,MOO,MOA,BAA,K4AA $
Input Data Blocks
-Displacement setdefinitions table.
-Partition ofstiffness matrix -fset.
-Partition ofmass matrix -fset.
-Partition ofdamping matrix -fset.
-Partition ofstructural damping matrix -fset.
MFF, BFForK4FF maybepurged.
Output Data Blocks
Structural matrix partitioning transformation matrix.
Partition ofstiffness matrix -aset.
Partition ofstiffness matrix -oset.
Lower triangular factor ofKOOB -oset.
Upper triangular factor ofKO_B -oset.
Partition ofmass matrix -aset.
Partition ofmass matrix -aset.
Partition ofmass matrix.
Partition ofdamping matrix -aset.
Partition ofstructural damping matrix -aset.
4.36-I (8/I/72)&lt;/p&gt;
&lt;p&gt;Note:MODULE FUNCTIO_IAL DESCRIPTIONS
4.36.6I.U_@andL_arenotstandard formmatrices. Theirformat iscomnatible onlyfor
inputtosubroutine FBS.
2.HAA,rl_,H_A,BAAorK4AAmaybepurged onlyifMFF,BFForK4FFarepurged.
Parameters
None.
4.36.7 Hethod
Usingsubroutine UPARTtogenerate rowandcolumn partitioning vectors andsubroutine MPART
toperform theactual partitioning, [Kff]ispartitioned asfollows:
KaaIKao
[Kff]_&amp;gt; &lt;em&gt;&amp;ndash; (I)
IKooj LK°aI
Subroutine FACTOR iscalled todecompose [Koo]intotriangular factors. Subroutine S_LVER
iscalled toperforn&lt;/em&gt; afo_ard-backward substitution solving for[Go]inthematrix equation
[Koo][Go]=-[Koa] ,
andcomputing [Kaa]fromtheequation
[Kaa] =[Kaa]+[Koa][GO]•
Foreachofthedatablocks [Mff], [Bff], [K_f]which isnotpurged, theabove
partitioning operation isperformed andthematrix reductions:
[Maa] =[Maa]+[Go]T[Moa]+[MooIT[GO]+[Go]T[[Ioo][Go],
[Baa] =[Baa]+[GoIT[Boa]+[Boa]T[GO]+[Go]T[Boo][Go],
[K4aa]=[_4aa]+[Go]T[K4oa]+4T [K4oo] [Koa] [GO]+[Go]T [Go],(2)
(3)
(4)
(5)
(6)
areperformed bysubroutine ELIM.
4.36-2 (8/I/72)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL &lt;em&gt;.YJDULES&lt;/em&gt;.IPI(STRUCTURAL MATRIXPARTITIONER -PHASEI)
4.36.8Subroutines
Callsaremadetothefollowing matrix utility routines:
UPART Seesubroutine descriptions -Section 3.5.9fordetails
MPART Seesubroutine descriptions -Section 3.5.9fordetails
FACTOR Seesubroutine descriptions -Section 3.5.23 fordetails
S_LVER Seesubroutine descriptions -Section 3.5.20 fordetails
ELIM Seesubroutine descriptions -Section 3.5.22 fordetails
4.36.9 Design Requirements
4.36.9.1 Allocation ofCoreStorage
Themaximum storage requirement forSMPIisfourtimesthenumber ofdegrees offreedom in
theuadisplacement setplusoneGlrIObuffer.
4.36.9.2 Environment
Themodule SMPIconsists ofonesubroutine, SMPI. Callsaremadetothematrix utility
routines indicated above. Sixscratch filesareused.
Thematrix multiply-add routine isusedbyELIMtoperform thematrix reductions described
byequations 3,4,5and6.Forequations 4,5and6,thereduction isdoneinthreephases as
shownbelowforthemassmatrix.
[A]=[Moo][Go]+[Moa] (7)
[B]=[Moa]T[Go]+[Maa] (8)
[Maa] =[Go]T[A]+[B] (9)
4.36-3 (811172)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASE l)
4.37 FUNCTIONAL MODULE RBMGI (RIGID BODYF_TRIX GENERATOR -PHASE l)
4.37.1 Entr_ Point: RBMGI
4.37.2
RBMGI partitions [Kaa] into[K_], [K_r] and[Krr]. If[Maa] isnotpurged, itis
partitioned similarly.
4.37.3 DMAPCallin_ Sequence
RBMGI USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $
4.37.4 Input DataBlocks
USET -Displacement setdefinitions table.
KAA -Partition ofstiffness matrix -aset.
Fb_A -Partition ofmass matrix -aset.
Note: USETmaynotbepurged.
4.37.5 Output DataBlocks
KLL Partition ofstiffness matrix -_set.
KLR Partition ofstiffness matrix.
KRR Partition ofstiffness matrix -rset.
MLL -Partition ofmassmatrix -_set.
MLR -Partition ofmassmatrix.
MRR -Partition ofmassmatrix -rset.
Note: Output datablocks maybepurged onlyifthecorresponding input datablock is
purged.
4.37.6 Parameters
None
4.37.7 Method
Using subroutine UPART togenerate rowandcolumn partitioning vectors andsubroutine
4.37-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
MPARTtoperform theactualpartitioning, [Kaa]ispartitioned asfollows:
&lt;a href=&#34;1&#34; &gt;!&lt;em&gt;7 [Kaa]:&amp;gt; -&amp;lsquo;K &amp;lsquo;Kr&lt;/em&gt;&amp;lsquo;rr&lt;/a&gt;
Similarly, if[Maa]isnotpurged, itispartitioned,
4.37.8 Subroutines
RBMGIcallsthefollowing matrix utility routines:
UPART_ seesection 3.5.9fordetails.
MPART
4.37.9 Design Requirements
4.37.9.1 Allocation ofCoreStorage
Storage requirements forRBMGIareminimal sincenounpacked vectors areheldincore.
4.37.9.2 Environment
Themodule RBMGIconsists ofonesubroutine, RBMGI. Callsaremadetothematrix
utility routines indicated above. Onescratch fileisused.
4.37-2&lt;/p&gt;
&lt;p&gt;4.38
4.38.1FUNCTIONAL MODULE RBMG2 (RIGID BODYMATRIX GENERATOR -PHASE 2)
FUNCTIONAL MODULE RBMG2 (RIGID BODYMATRIX GENERATOR -PHASE 2)
Entry Point: RBMG2
4.38.2 Purpose
LLL -
ULL -
NotesRBMG2 decomposes[K_£] intoitstriangular factors [L_£] and[U£&lt;em&gt;].
4.38.3 DMAPCallin 9Sequence
RBMG2 KLL/LLL,ULL/V,N,P_WER/V,N,DET $
4.38.4 Input DataBlocks
KLL-Partition ofstiffness matrix -Zset.
Note: KLLmaynotbepurged.
4.38.5 Output DataBlocks
Lower triangular factor ofKLL-£set.
Upper triangular factor ofKLL-£set.
I.LLLandULLmaynotbepurged.
2.ULLisnotastandard upper triangular matrix.
forinput tosubroutine FBS.
4.38.6 Parameters
4.38.7 MethodOutput-integer-default =I.
Output-real-default =l.O.
det[Kz&lt;/em&gt;] =DET*IO P_WERItsformatiscompatible only
Power ofI0inthedeterminant ofKLL.
Magnitude ofdeterminant ofKLL,i.e.,
4.38-IRBMG2 calls thematrix utility routine FACTOR (seesection 3.5.23 forFACTOR details).RBMG2 calls subroutine FACTOR toperform thedecomposition of[K££] into[L_] and[Ucz].
4.38.8 Subroutines&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.38.9 Design ReRuirements
Forallocation ofcorestorage, seesubroutine SDC_MP (section 3.5.14).
consists ofonesubroutine, RBMG2. Three scratch files areused.Themodule RBMG2
4.38.10 Diagnostic Messages
Message number 3005maybeissued byRBMGI.
4.38-2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P46</title>
      <link>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_046/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeyany2.github.io.github.io/docs/programmers/programmers_manual_046/</guid>
      <description>
        
        
        &lt;p&gt;FUNCTIONAL MODULE RBMG3 (RIGID BODYMATRIX GENERATOR -PHASE3)
4.39 FUNCTIONAL MODULE RBMG3 (RIGID BODYMATRIX GENERATOR -PHASE3)
4.39.1 EntryPoint: RBMG3
4.39.2 Purpose
RBMG3solves fortherigidbodytransformation matrix [D]fromtheequation
[K_][D]:-[K_r]
Therigidbodyerrorratio, c,iscomputed from
E:II[Krr] +[Kcr]T [D]II
ll[Krr]II
Note: Theabsolute value IIIIisthesquare rootofthesumofthe
squares _,,,&lt;em&gt;1_k&lt;/em&gt;-is&amp;quot;notadeterminant).
4.39.3 DM_PCal!in9Sequence
RBMG3 LLL,ULL,KLR,KRR/DM $
4.39.4 InputDataBlocks
LLL-Lowertriangular factor ofKLL-_set.
ULL-Uppertriangular factor ofKLL-_set.
KLR-Partition ofstiffness matrix.
KRR-Partition ofstiffness matrix -rset.
Note: Inputdatablocks maynotbepurged.
4.39.5 Output DataBlocks
DM-Rigidbodytransformation matrix.
Note: TheDMdatablockcorresponds tothematrix [D]andmaynotbepurged.
4.39.6 Parameters
None.(I)
(2)
4.39-I (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.39.7 Method
Subroutine S_LVER iscalled toperform theoperations inEquation land2.
4.39.8 Subroutines
RBMG3 calls thematrix utility routine S_LVER andhasnoauxiliary subroutines. Seesection
3.5.20 forS_LVER details.
4.39.9 Design Requirements
Forallocation ofcorestorage, seesubroutines FBS(section 3.5.17) andMPYAD (section 3.5.12).
Twoscratch files areused.
4.39-2&lt;/p&gt;
&lt;p&gt;4.40
4.40.1
4.40.2FUNCTIONAL MODULERBMG4(RIGIDBODYMATRIXGENERATOR-PHASE4)
FUNCTIONAL MODULERBHG4(RIGIDBODYMATRIXGENERATOR-PHASE4)
Entry Point: RBMG4
RBMG4 computes therigid bodymassmatrix [mr]from thematrix equation
[mr] =[Mrr]+[D]T[M_r]+[Mcr]T [D]+[D]T[M_] [D].
4.40.3 DMAP Callin_ Sequence
RBMG4 DM,MLL,MLR,MRR/MR $
4.40.4 Input DataBlocks
DM-Rigid bodytransformation matrix.
MLL -Partition ofmassmatrix -&lt;em&gt;set.
MLR -Partition ofmassmatrix.
t_n
,4&lt;/em&gt; -Partition of_ssmatrix -rset.
Notes:
I.
2.
MR4.40.5
4.40.6Noinput datablock maybepurged.
TheDMdatablock corresponds tothematrix [D]inEquation I.
Output DataBlocks
Rigid bodymassmatrix -rset.
Parameters
_one
4.40.7 Method
Subroutine ELIIIiscalled tocompute [mr]asinEquation l(seesection 3.5.22 forELIM
details).(1)
4.40-I&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.40.8 Subroutines
RBMG4consists ofonesubroutine, RBMG4.
Matrix utility routine ELIM(section 3.5.22) iscalled byRBMG4.
4.40.9 Design Requirements
Forallocation ofcorestorage, seesubroutine MPYAD(section 3.5.12). Threescratch files
areused.
4.40-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASE l)
4.41 FUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l)
4.41.I Entry Point: SSGI
4.41.2
Tocompute thestatic loads, thermal loads, andenforced deformation loads selected bythe
user.
4.41.3 DMAPCallin 9Sequence
SSGI SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT,EDT,MGG,CASECC,DIT/PG/V,N,LUSET/V,N,NSKIP
4.41.4 Input DataBlocks
SLT -Static Loads Table.
BGPDT -Basic GridPoint Definition Table.
CSTM -Coordinate System Transformation Matrices.
SIL -Scalar Index List.
EST -Element Summary Table.
MPT -Material Property Table.
GPTT -GridPoint Temperature Table.
EDT -Element Deformation Table.
MGG -Partition ofmass matrix -gset.
CASECC -
DIT
Notes:
I.CaseControl DataTable.
Direct Input Tables.
SLT,BGPDT, SILcannot bepurged ifexternal static loads orLOADcards areselected
inCASECC.
2.CSTMcannot bepurged ifanygridpoint orload references acoordinate system other
thanbasic.
3.EST,MPTcannot bepurged ifthermal orelement deformation loads areselected.
4.GPTT cannot bepurged ifthermal loads areapplied.
5.EDTcannot bepurged ifelement deformation loads areselected.
4.41-I&lt;/p&gt;
&lt;p&gt;MODULEFUNCTIONAL DESCRIPTIONS
6.MGGcannotbepurgedifGRAVITYorRF_RCEloadsareapplied.
7.CASECCcannotbepurged.
8.DITcannotbepurgediftemperature dependentmaterialsareloaded.
4.41.5Output DataBlocks
PG-Static loadvector matrix giving static loads -gset.
Note: PGcannever bepurged.
4.41.6 Parameters
LUSET
NSKIP
4.41.7Input-integer-no default. LUSET defines length ofPG.
Input-integer-no default. Onestatic load isbuilt foreachCASECC record
starting with NSKIP +laslongastheboundary conditions areconstant.
Overview oftheMethod UsedinSSGI
Thepurpose ofthefirst phase ofstatic solution calculation (module SSGI) isthegeneration
oftheloadvectors onthewhole structure. Thestructure maybeloaded inthree different ways:
I.Simple applied loads andmoments maybegiven togridandscalar points. Pressure
loads maybeapplied toanareadefined bythree orfourgrid points. Centrifugal force
fields mayalsobedefined.
2.Thermal andenforced deformation loads aregenerated byusing thestructural element
characteristics. Theloads ontheconnected grid points areequivalent tofixing the
displacements andreplacing theelement bytheload itwould apply tothepoints.
3.Gravity loads aredependent onthemass characteristics ofthestructure. Agravity
loadisproduced bygenerating avector ofaccelerations onallgridpoints inthestructure
andpre-multiplying thevector bythestructural massmatrix.
Thedetails onloadvector generation forthese three different types ofloading aregiven in
sections 4.41.8, 4.41.9 and4.41.I0 below. Thefunction ofmodule SSGIistoread thecasecontrol
dataandextract thenecessary loadsetdata, calculate loadvectors foreach requested loadset,
andcombi;_e these setstoproduce theloads requested forallsubcases using thesameboundary.
condition.
4.41-2&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESSGI(STATICSOLUTIONGENERATOR-PHASEl)
4.41.7.] ModuleInitialization
Commonblock/L_ADX/,which contains GIN_filenumbers forinput datafiles andposition
pointers, isinitialized.
Alistofallexternal loadsetsisextracted fromtheSLT. (This must belessthanlOl.)
CASECC isskipped forward NSKIP records (incaseseveral boundary conditions arebeing solved in
onerun). Foreach succeeding record which isnotaneigenvalue record, notasymmetry record,
notadifferential stiffness record, andforwhich theboundary conditions arethose forthe
current loop (SPCandMPCsets), alistismadeofeachthermal orenforced deformationload. The
external loads selected aremarked intheabove list. Ifaselected external loadisnotinthe
above list, theL_AD cards arereadinandtheir component id&amp;rsquo;ssearched. AL_AD cardmaycause
additional members tobeselected. Acomposite listiscreated which contains:
External loadid°s
selected onesmarked &amp;lt;lO0
Thermal loadid&amp;rsquo;s&amp;lt;lO0
Enforced deformation load id&amp;rsquo;s&amp;lt;lO0&amp;lt;lO0
Ifthere isnorecord which allows construction ofaload, SSGIaborts. Ifaselected external
loadiddoes notexist either asaL_ADcardorsimple loadset,SSGIaborts. (Subroutine SSGIA).
4.41.7.2 Individual LoadVector Generation
Eachrequested setofloads isusedtogenerate a{P_}loadvector. Thevectorsaregenerated
oneatatimeincoreandwritten onthePGtemporary file, ascratch file. Files PGtemporary,
SLT, BGPDT, CSTMandSILareopened. Thevector generation depends onthetypeofloadandtype
ofinput data. Details aregiven insections 4.41.8, 4.41.9 and4.41.I0 below.
4.41-3&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.41.7.3 Subcase Load Vector Generation
Each simple load set, j,produces a{P_} load vector, andeach subcase maybeacombination
ofvarious simple load sets. Aseach load setvector isformed, itiswritten onPGtemporary.
When allsets have been generated, theCASECC data block andtheL_AD card images areread again.
Atable isformed foreach subcase consisting oftherequired setnumber andthescale factor for
each setifgiven onaL_AD card. Thefile containing theload vectors forthesets isread for
each subcase, c,andadded toa{P_} load vector. The{P_} load vectors arepacked andwritten
asthePGdata block instandard NASTRAN matrix form.
4.41.8 Direct Applied Loads
Direct loads areapplied tothestructural model bymeans ofF_RCE, F_RCEI, F_RCE2, GRAV,
MOMENT, MOMENTI, MOMENT2, PLOAD, PLEAD2, RFORCE, andSL_AD Bulk Data Cards andthePRESAX card
which isused fortheaxisymmetric conical shell problem only.
4.41.8.1 F_RCEandM_MENT CardProcessing
Thedata described byaF_RCE orMBMENT data card aregiven asfollows:
N=Grid point index;P
Nc=Coordinate system number;
S=Scalar factor; and
TheBGPDT data forthepoint aredetermined.
equals Nc,thevector isIAII{p}=A2•
A3
Iftheglobal coordinate number, Ng,(1)
forthepoint
{Pg}=S{P}, (2)
where therowindex isdetermined from SIL. IfNg_Nc,[Tg] and[Tc]arecalculated using the
location coordinates andthetwolocal coordinate systems (subroutines GLBBAS andBASGLB). The
4.41-4 (811172)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l)
loadinglobal coordinates is:
=S[Tg]T[Tc] {P}. (3) {Pg}
IfaF_RCE card isused, theloads areadded tothefirst three positions forthegridpoint in
theloadvector. IfaMgMENT card isused, theloads areadded tothelastthree positions.
(Subroutine DIRECT).
4.41.8.2 F_RCEI andM_MENTI CardProcessing
Thedatadescribed byF_RCEI orM_MENTI cardaregiven asfollows:
Np=Application point number;
S=Loadmagnitude;
NI,N2=Gridpoint numbers describing thevector direction oftheload.
Thebasic coordinates ofthepoints Nl,N2andNparefound intheBGPDT.
PER,&lt;em&gt;T andFNDPNT). If{R&lt;/em&gt;}and{R2}arethevectors corresponding toNl
direction is:(Subroutines
andN2,theload
{R2}-{RI}
{d}=I{R2}&lt;em&gt;{R&lt;/em&gt;}I. (4)
Thecoordinate transformation [Tg]forpoint Npiscalculated (Subroutine BASGLB).Theload
vector inglobal coordinates is:
{Pg}:S[Tg]T{d} (5)
IfaF_RCE1 cardwasusedthevaluesareaddedtothefirstthreecoordinates, starting withthe
SILnumber, intheloadvector. IfaM_MENT1 cardwasused,thevalues areaddedtothelast
three(subroutine TP_NT).
4.41.8.3 F_RCE2andM_MENT2 CardProcessing
ThedataonaF_RCE2 orM_MENT2 cardareasfollows:
N=Application pointnumber;P
S=Loadmagnitude;
4.41-5&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
NI,N2,N3,N 4aresuchthatthedirection oftheforce is
determined byEquation 6below.
Thealgorithm issimilar totheonefortheF_RCEI andMOMENT1 caseexcept thatfourbasic
coordinate system vectors, {RI},{R2},{R3},{R,},areformed forthefourpoints and:
{d}=({R2}-{RI})x({R,}-{R3})
I({R2} {R_})x({R4}-{R_})J &amp;lsquo;(6)
(Subroutine FP_NT).
4.41.8.4 PLEADandPLEAD2 CardProcessing
Thedatacontents foraPLOADcardare(aPLOAD2 cardistransformed intoaPLEADcardby
GP3):
p:Pressure value;
NI,N2,N3,N 4Points describing areaover
whichpressure loadisacting.
(N4isoptional.)
Foreachofthefourpoints, Ni,thebasiccoordinate system vector, {Ri},isformed.
IfN4=O,theloadoneachpointis:
P[({RI}{R2})x({R3}-{R2})] {F}:-(7)
Theloadvector inglobal coordinates foreachpointis:
{Pgi}=[Ti]T{F} .
IfN4#O,thequadrilateral issubdivided intofourtriangles asshown.(8)
.-I-
4.41-6&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l)
PT
changed eachtimethetriangle calculation isdone.
4.41.8.5 SL_AD CardProcessing
Thedata contents foraSL_AD cardare:
Np=Scalar point idand
S=Loadonpoint,
Thescalar index iscomputed bysubroutine FNDSIL, andSisadded in.
4.4].8.6 RF_RCE Card Processing
Thedatacontents foranRFBRCE cardare:Foreachtriangle {Pgi}iscalculated forthethree connected points using apressure value
=I/2p.Theequations arethesameastheprevious caseexcept thatthepoints areinter-
(Subroutine PLEAD.)
(Subroutine SL@AD.)
Np
Nc
A=Index ofgridpoint through which
rotation vector passes;
=Coordinate system number defining
therotation vector;
=Factor forvector;
Rx,Ry,R zarecomponents ofrotation vector incps.
Thefollowing sequence ofoperations comprises RF_RCE cardprocessing which iscarried out
insubroutine RFBRCE.
I.Thelocal tobasic coordinate transformation matrix, [Tc],forthereference coordinate
system Ncisextracted fromtheCSTMdatablock.
2.Therotation vector inbasic coordinates, andinradians persecond, is:
{mb}=2_A ITc]&lt;em&gt;Rx&lt;/em&gt;
3.Define thebasic location vector ofthereference point Np
{ra}{0}.(g)
as{ra}. IfNp=O,set
4,41-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.Extract thebasiccoordinate system vector {ri}foreachpointfromBGPDT.
5.Using {ri}andthelocalcoordinate system referenced bythepoint, calculate the
global-to-basic transformation matrix [Ti].
6.Forthesixcolumns ofthemassmatrix [Mgg]corresponding tothegridpointi,the6x6
matrix partition onthediagonal isextracted. Define thisas[Mi].
7.Partition the6x6matrix into3x3matrices
FMi:Mi7
L_t__L_.t.r_I
[Mi]&amp;ndash;&amp;gt; IMP&amp;quot;iM_I&amp;rsquo; (I0)Lrt, r_]
andtransform therotational velocity vector toglobal coordinates
{_g}=[TilT{_b}. (II)
8.Calculate theforces andmoments onthegridpointbytheequations:
xMi{F}=-{&lt;em&gt;g}x[M&lt;/em&gt;][Ti]T({wb }x[{ri}-{ra}]) -{Wg} [tr]{_g} (12)
{M}=-{&lt;em&gt;g}x[Mr&lt;/em&gt;][TiIT({_b}x[{ri}-{ra}]) -{&lt;em&gt;g}x[M&lt;/em&gt;]{_n} (13)
9.Theloadvector partition inglobal coordinates is:
4.41.8.7 PRESAX CardProcessing
Thedatacontents foraPRESAX card(which applies onlytopressure loading ofan
AXISYMMETRIC shell) are:
p &amp;ndash;
Na=
Nb=
_i=
qb2=
n=Pressure;
Indexvalueofharmonic RingA;
Indexvalueofharmonic RingB;
(degrees);
(degrees);
Harmonic number ofharmonic being added.
4.41-8 (12-I-69)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l)
Thealgorithm given inthefollowing steps isperformed insubroutine PRESAX.
I.Czand¢2areconverted toradians.
2.BGPDT dataareextracted forbothRINGA andRINGB, giving {r}and{z}.
3.Thecalculations forharmonic nare:
=J(rb-ra)2 +(Zb-Za)2 ,(15)
rb-rasin_-,(16)
cosZb-Za(17)
Forthecosine case, ifn=O,wecalculate:
P_o =P_ + (&lt;em&gt;2-&lt;em&gt;I)cos&lt;/em&gt;,(lB)
;r.r.&lt;br&gt;
Pizo=-P&lt;/em&gt; 131-]&amp;ndash;+6&amp;ndash;J-)(qb2 -qbl)sin_.(]g)
Ifn&amp;gt;O
rn -_ + (sin(n(h2) -sin(nq_1)) cos_b,(20)
zr_
pi:&lt;em&gt;p&lt;/em&gt;(__L _JJ)(sin(nqb2) sin(n@])) sinin n\o+u/ - &amp;ldquo;(2l)
4.41-9 (7/l/70)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Forthesinecase, ifn&amp;gt;O,
Pirn:p_&amp;lt;&lt;em&gt;&lt;strong&gt;i+&lt;/strong&gt;&lt;/em&gt;&amp;gt;n
pi:p_&amp;lt;&lt;em&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/em&gt;,i&amp;gt; zn n +(COSin@2)-cos(n@l))cos_,
(cos(n@2)-cos(n@1))sin_.
4.Theabove equations aresolved fori=a,i=bandi=b,_=a.
tothecorresponding gridpoint location inthePGloadvector
i
Pr
0i
Pz
0
0
O
(Subroutine PRESAX).
4.41.8.8 GRAVCardProcessingTheloads areadded
EachGRAVinput carddescribes auniform acceleration field withthefollowing parameters:
N=Coordinate system ID;
G=Scale factor;
{V}=Vector ofloadincoordinate
system N.
Thegravi+y vector inbasic coordinates is:
{gb}=G[TON]{V}.(22)
(23)
where [TON] isthe3x3orientation matrix ofcoordinate system N.
MPYL). This vector {gb}issaved forlater processing.
&amp;rsquo;thenumber ofgravity loads listed.(24)
(25)
(Subroutines GRAV,FDCSTM,
Subroutine EXTERN thenreturns, noting
4.41-I0&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULESSGI(STATICSOLUTIONGENERATOR-PHASEI)
4.41.9Thermal andEnforced Deformation Loads
Thethermal andenforced deformation loads arecalculated using thestiffness properties of
thestructural elements. TheEDTdataforeachloadsetandtheMPT, DITandSILdatablocks are
placed incore. TheESTdatablock andtheGPTTdatafortheselected setarereadoneelement at
atime. Theloads produced bythatelement areplaced inthePGload vector. Theactual algo-
rithms forgenerating element loads aregiven inSection 4.87.
4.41.I0 Gravity Loads
Acceleration vectors arecomputed foreachgravity loadbytwomeans, oneforanaxisvmmetric
shell problem, theother fornon-shell problems.
4.41.I0.I Gravity Loads foranAxisymmetric Shell Problem
m(number ofrings) andn(number ofharmonics) areextracted fromthe/SYSTEM/common block.
Thefirst mpoints intheBGPDT define the&amp;quot;zero&amp;rdquo; harmonic. Thesecond mentries define the&amp;quot;one&amp;quot;
harmonic etc. Theacceleration vectors arecalculated bytheformulae:
ax 2 g=+g;+gz&amp;rsquo; (26)
gxy=g_+ gy2, (27)
gz
cosOg g, (28)
a
sin0=_xyg g, (29)
sinCg=gy9
gxy (30)
gx
cos_g- (31)gxy
4.41-II (9/I170)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
Thevectors {a}forharmonics n=0andn=1aredefined forloadsetcosine by:
andforloadsetsineby:{a_}gcos9g (allrings),
{a_}=gsinegcos@g
(allrings)(32)
(33)
1
1
0
{a_}:gsin@gsin,g
0
Thesevectors areusedasinthenormal case. Theyaremerged into{ag}which inturnispre-
multiplied by[Mgg]togivethe{Pg}vector (subroutine GRAVL3).
4.41.10.2 Gravity LoadsforNon-Shell Problems
Theacceleration vector mustbetransferred totheglobal coordinate system ateachgrid
pointandexpanded toavector acting ontheUgcoordinates. Foreachgridpoint (i)theBGPDT
dataisread,andusingtheCSTMdata,a3x3basic toglobal transformation matrix [Ti]is
formed. Theacceleration atthepointiinbasiccoordinates is:
{a_} =[Ti]{gb}, (35)
where {gb}isthegravity vector saved inEquation 25. Thevector {a_} isplaced inthetotal
acceleration vector inpositions SILi, SILi+l ,andSILi+2. Novalues arecalculated forscalar
points orrotation coordinates (Subroutine GRAVLI).
When all{ag} vectors have been calculated forthewhole structure, they arepre-multiplied
bythestructural mass matrix toproduce aload vector:
{Pg}=[Mgg]{ag}, (36)
4.41-12 (8/I/72)(34)&lt;/p&gt;
&lt;p&gt;FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI)
(subroutine SSG2B).
Thegravity vectors areappended totheother load vectors, andscalar points arezeroes in
case interaction occurred. Gravity loads onscalar points arenotsupported.
4.41.I0.3 Direct-Applied Thermal Loads
Direct loads areapplied totheheat transfer model bymeans oftheQHBDY data cards. These
cards contain thefollowing data:
S_xmbol
FLAG,
Qo&amp;rsquo;
Af,
G1,G2,G3,G4
Theword&amp;quot;FLAG&amp;quot; indicates thetypeofload,&amp;ldquo;P_INT,&amp;rdquo; &amp;ldquo;LINE,&amp;rdquo; &amp;ldquo;REV,&amp;rdquo; &amp;ldquo;AREA3,&amp;rdquo; or&amp;quot;AREA4,&amp;quot; and
thenumber ofgridpoints defined byGI,G2,etc.Theloadsareformed intoavector {P]witha
length equal tothenumber ofpoints. Thevalues of{P}are:
{P}=AQo{V}.
Thevalues forAand{V}aregiveninthefollowing table:Description
Identified type ofload
Flux density
Area factor
Internal grid point numbers
FLAGNumber ofgrid-
points atwhich
load vector is
applied{v}
1 -Af {1}
2 -A__(length)2 I_l
2 __(length) 12Xl +x21
3 (x1+2x2,&amp;rsquo;
makeintooverlapping triangles, as
4 inFLAG=4(divide loadsbytwo)
4.41-13 (811172)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
where thevalues xi,Yi&amp;quot;ziaretheBGPDT values forpoint iand:
_ _2I/2(length) =[(x2Xl)2+(Y2-Yl)2+(z2 Zl)]
(area) :½Ir12xr131
where rlj=yjYl J=2,3
zjzl
Theloadistobeinserted intoallthree translational degrees offreedom atthegridpoints.
Thescalar indices maybefound intheSILtable.
4.41-13a (8/I/72)&lt;/p&gt;
&lt;p&gt;MODULE FUNCTIONAL DESCRIPTIONS
4.41.11
4.41.II.ISubroutines
Subroutine Name: SSGIA.
I.EntryPoint: SSGIA.
2.Purpose: Tobuildalistofexternal loads, thermal loadsandenforced deformation loads
selected bytheuserinCASECC.
3.Calling Sequence: CALLSSGIA(NI,ILIST,NEDT,NTEMP,NCENT,CASECC,IHARM)
N1 -Number ofexternal loadspresent -integer -output.
ILIST -ListofloadID&amp;rsquo;swithselected loadID&amp;rsquo;ssetnegative -integer -output.
NEDT -Number ofenforced deformation loads-integer -output.
NTEMP -Number ofthermal loads-integer -output.
NCENT -Notused(settozero)-integer -output.
CASECC -GINOnumber ofCaseControl DataBlock-integer -input.
IHARM -Boundary conditions foraxisymmetric shellproblem.
1=sine, 2=cosine -integer -output.
C_MM_N//XX,L_ADNN
L_ADNN -Number ofrecords inCASECC toskipbefore beginning tobuild loads-integer -
input.
C@MMON/L_ADX/
L_ADX -Seedescription of/L_ADX/ conTnon blockbelow (section 4.41.11.8).
4.41.11.2 Subroutine Name: EXTERN.
I.EntryPoint: EXTERN
2.Purpose: Tocompute user-selected external loads.
4.41-14&lt;/p&gt;
&lt;p&gt;FUNCTIONAL t4ODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l)
3.Calling Sequence: CALL EXTERN (NLIST,NGRAV,GVECT,ILIST,PG,NI,IHARM)
NLIST -Number ofloadid&amp;rsquo;sinILIST array -integer -input.
NGRAV -Number ofgravity loads selected -integer -output.
GVECT -Array ofgravity vectors, 3numbers pervector -real-output.
ILIST -Listofallloadid&amp;rsquo;s-integer -input.
PG -Matrix control block forfileonwhich external loads willbewritten -integer -
input/output.
Nl -Number ofexternal load id&amp;rsquo;s-integer -input.
IHARM -Boundary condition foraxisymmetric shell problem
l=sine, 2=cosine.
C_I_M_NIILUSET
LUSET -Length ofPG-integer -input.
C_N_IgN/L_ADX/ -See/L_ADX/descripticn insection 4.41,II.8.
4.41.ll.3
I.
2.
3.Subroutine Name: TEMPL.
Entry Point: TEMPL
Purpose: Tocompute thermal loads foreach element.
Calling Sequence: CALLTEMPL (NTEMP,ILIST (Nl+l),PG(1))
NTEMP -Number ofthermal loads -integer -input.
ILIST(NI+I) -Beginning ofthermal loadlist-integer -input.
PG -Matrix control block forload file-integer -input/outDut.
C_M_N/L_ADX/- See/L_ADX/description insection 4.41.II.8.
C_MMgN//LUSET
LUSETLength ofPG-integer -input.
4.41-15&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
