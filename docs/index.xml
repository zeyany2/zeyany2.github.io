<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOC REPO â€“ Documentation</title>
    <link>//uildDrafts:1313/docs/</link>
    <description>Recent content in Documentation on DOC REPO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="//uildDrafts:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>A Summary</title>
      <link>//uildDrafts:1313/docs/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/summary/</guid>
      <description>
        
        
        &lt;p&gt;This documents of Nastran 95 include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//uildDrafts:1313/pdfs/NASTRAN_Programmers_Manual.pdf&#34; &gt;NASTRAN Programmers Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;//uildDrafts:1313/pdfs/NASTRAN_Users_Manual_2.pdf&#34; &gt;NASTRAN Users Manual 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python scripts to convert the manuals into markdown files can be found in the following zip file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//uildDrafts:1313/zips/pdfs_processing_scripts.zip&#34; &gt;pdfs_processing_scripts.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_index/</guid>
      <description>
        
        
        &lt;p&gt;NASA SP-223 (01)
THENASTRAN PROGRAMMER&amp;rsquo;S MANUAL
SEPTEMBER 1972
Scientific andTechnical Information Office 1972
NATIONAL AERONAUTICS AND SPACE ADMINISTRATION
Washington, D.C.
II]]1] i,&lt;/p&gt;
&lt;p&gt;ForsalefromComputer Software Management andInformation Center (COSMIC)
Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50&lt;/p&gt;
&lt;p&gt;PREFACE TOTHENASTRAN PROGRAMMER&amp;rsquo;S MANIIAL
TheProgrammer&amp;rsquo;s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN,
theother three being theTheoretical Manual, theUser&amp;rsquo;s Manual andtheDemonstration Problem
Manual. TheProgrammer&amp;rsquo;s Manual isdivided intoseven major sections: Section l,NASTRAN Program-
ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions;
Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section
6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs.
Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground
material forallsections which follow.
Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata
communication between theprogram&amp;rsquo;s functional modules (amodule isdefined tobeagroup ofsub-
routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe
datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha-
betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections
2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand
noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous
tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven
atthebeginning ofSections 2.4and2.5respectively.
Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and
modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on
entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe
Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2.
Thereader isurged toreadtheintroductory material toSections 3and4before using these
sections.
Section 5treats computer andoperating system dependent matters suchasoperating system
control cards andgeneration oftheabsolute (executable) NASTRAN system.
Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented.
Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN.
Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications
system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners
ofthesystem ofnewmnemonics, acronyms, phrases and&amp;quot;buzz&amp;quot; words. Inorder toaidthereader in
i(811172)&lt;/p&gt;
&lt;p&gt;learning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN
Dictionary, oftheUser&amp;rsquo;s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat
leastthissection oftheUser&amp;rsquo;s Manual forhisday-to-day reference.
ii(8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P1</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_001/</guid>
      <description>
        
        
        &lt;p&gt;NASA SP-223 (01)
THENASTRAN PROGRAMMER&amp;rsquo;S MANUAL
SEPTEMBER 1972
Scientific andTechnical Information Office 1972
NATIONAL AERONAUTICS AND SPACE ADMINISTRATION
Washington, D.C.
II]]1] i,&lt;/p&gt;
&lt;p&gt;ForsalefromComputer Software Management andInformation Center (COSMIC)
Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50&lt;/p&gt;
&lt;p&gt;PREFACE TOTHENASTRAN PROGRAMMER&amp;rsquo;S MANIIAL
TheProgrammer&amp;rsquo;s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN,
theother three being theTheoretical Manual, theUser&amp;rsquo;s Manual andtheDemonstration Problem
Manual. TheProgrammer&amp;rsquo;s Manual isdivided intoseven major sections: Section l,NASTRAN Program-
ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions;
Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section
6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs.
Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground
material forallsections which follow.
Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata
communication between theprogram&amp;rsquo;s functional modules (amodule isdefined tobeagroup ofsub-
routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe
datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha-
betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections
2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand
noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous
tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven
atthebeginning ofSections 2.4and2.5respectively.
Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and
modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on
entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe
Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2.
Thereader isurged toreadtheintroductory material toSections 3and4before using these
sections.
Section 5treats computer andoperating system dependent matters suchasoperating system
control cards andgeneration oftheabsolute (executable) NASTRAN system.
Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented.
Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN.
Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications
system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners
ofthesystem ofnewmnemonics, acronyms, phrases and&amp;quot;buzz&amp;quot; words. Inorder toaidthereader in
i(811172)&lt;/p&gt;
&lt;p&gt;learning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN
Dictionary, oftheUser&amp;rsquo;s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat
leastthissection oftheUser&amp;rsquo;s Manual forhisday-to-day reference.
ii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS
Section
I.NASTRAN PROGRAMMING FUNDAMENTALSPageNo.
l.l
1.2PROGRAM
1.I.I
l.l.2
NASTRAN
l.2.1
l.2.2
l.2.3OVERVIEW &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. l.l-I
Objectives &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; l.l-I
Program Organization &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. l.l-3
EXECUTIVE SYSTEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.2-1
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-1
Executive Operations During thePreface &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-4
Executive Operations During Problem Solution &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.2-9a
1.3 WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-1
1.3.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-1
1.3.2 Alphanumeric Data &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-2
1.3.3 Word Packing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-2
1.4 SYSTEM BLOCK DATASUBPROGRAM (SEMDBD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.4-1
1.5 THEOPENCORECONCEPT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.5-1
1.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.5-1
1.5.2 Definition ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.5.3 Example ofanApplication ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.6 NASTRAN INPUT/OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.2 UseoftheOperating System Input File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.6-1
1.6.3 UseoftheOperating System Output File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-2
1.6.4 GIN_ &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.6-3
1.7 NASTRAN MATRIX ROUTINES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-I
1.7.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7Â°l
1.7.2 Matrix Packing andUnpacking &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-1
1.7.3 TheNested Vector SetConcept UsedtoRepresent Components
ofDisplacement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-2
1.7.4 Processing ofMatrices &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-4
1.8 GENERATION OFMATRICES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.8-1
1.8.1 TheECPTDataBlock &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-1
1.8.2 Structural Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-2
iii(8/I/72)&lt;/p&gt;
&lt;p&gt;,Section
1.9
1.I0TABLEOFCONTENTS (Continued)
2.PageNo.
TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.9-I
RESTARTS INNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. I.I0-I
DATABLOCKANDTABLEDESCRIPTIONS
2.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.1-I
2.2DATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.2-I
2.2.1 IndexforDataBlockDescriptions Sorted onDataBlockNames &amp;hellip;&amp;hellip;. 2.2-3
2.2.2 IndexforDataBlockDescriptions Sorted Alphabetically byModule ..2.2-11
2.3DATABLOCKDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-I
2.3.1 DataBlocks Output FromModule IFPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-I
2.3.2 DataBlocks
2.3.3 DataBlocks
2.3.4 DataBlocks
2.3.5 DataBlocks
2.3.6 DataBlocks
2.3.7 DataBlocks
2.3.8 DataBlocks
2.3.9 DataBlocks
2.3.10 DataBlocks
2.3.11 DataBlocks
2.3.12 DataBlocks
2.3.13 DataBlocks
2.3.14 DataBlocks
2.3.15 DataBlocks
2.3.16 DataBlocks
2.3.17 DataBlocks
2.3.18 DataBlocks
2.3.19 DataBlocks
2.3.20 DataBlocks
2.3.21 DataBlocks
2.3.22 DataBlocksOutput FromModule IFP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-5
Output FromModule GPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-31
Output FromModule GP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-36
Output FromModule PLTSET &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-37
Output FromModule PL_T&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-40
Output FromModule GP3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-41
Out)ut FromModule TAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-45
Out)ut FromModule SMAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-56
Out)ut FromModule SMA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-58
Out)ut FromModule GPWG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-59
Out)ut FromModule SMA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-60
Out)ut FromModule GP4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-61
Out)ut FromModule GPSP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-63
Out)ut FromModule MCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-64
Out)ut FromModule MCE2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-65
Out)ut FromModule SCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-67
Out)ut FromModule SMPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-70
OutDut FromModule RBMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-73
Output FromModule RBMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-75
Output FromModule RBMG3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-77
Output FromModule RBMG4 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-78
iv(8/I172)&lt;/p&gt;
&lt;p&gt;Section
2.3.23
2.3.24
2.3.25
2.3.26
2.3.27
2.3.28
2.3.29
2.3.30
2.3.31
2.3.32
2.3.33
2.3.34
2.3.35
2.3.36
2.3.37
2.3.38
2.3.39
2.3.40
2.3.41
2.3.42
2.3.43
2.3.44
2.3.45
2.3.46
2.3.47
2.3.48
2.3.49
2.3.50
2.3.51
2.3.52TABLEOFCONTENTS (Continued)
PageNo.
DataBlocks Output FromModule SSGI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-79
DataBlocks Output FromModule SSG2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-80
DataBlocks Output FromModule SSG3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-81
DataBlocks Output FromModule SSG4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-83
DataBlocks Output FromModule SDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-84
DataBlocks Output FromModule SDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-88
DataBlocks Output FromModule DPD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-114
DataBlocks Output FromModule READ&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-125
DataBlocks Output FromModule DSMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-128
DataBlocks Output FromModule SMP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-129
DataBlocks Output FromModule DSMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-130
DataBlocks Output FromModule PLAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-132
DataBlocks Output FromModule ADD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-137
DataBlocks Output FromModule PLA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-138
DataBlocks Output FromModule PLA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-139
DataBlocks Output FromModule PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-140
DataBlocks Output FromModule CASE&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-141
DataBlocks Output FromModule MTRXIN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-142
DataBlocks Output FromModule GKAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-143
DataBlocks Output FromModule CEAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-146
DataBlocks Output FromModule VDR&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-149
DataBlocks Output FromModule FRRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-158
DataBlocks Output FromModule SDR3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-160
DataBlocks Output FromModule XYTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-175
DataBlocks Output FromModule RANDOM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-179
DataBlocks Output FromModule TRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-181
DataBlocks Output FromModule GKAM&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-183
DataBlocks Output FromModule DDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-184
Element Stress Output DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-185
Element ForceOutput DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-189
v(811172)&lt;/p&gt;
&lt;p&gt;Section
2.4TABLEOFCONTENTS (Continued)
3.2.3.53 DataBlocks Output FromModule DDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
2.3.54 DataBlocks Output FromModule BMG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
2.3.55 DataBlocks Output FromModule PLTTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
EXECUTIVE TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..PageNo.
2.3-192
2.3-194
2.3-194
2.4-I
2.4.1 Executive Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-2
2.4.2 Executive Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-15
2.5MISCELLANEOUS TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.5-I
2.5.1 Miscellaneous Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;.. 2.5-2
2.5,2 Miscellaneous Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2,5-6
SUBROUTINE DESCRIPTIONS
3.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.1-I
3.2ALPHABETICAL INDEXOFENTRYPOINTS FORSUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.2-I
3.3EXECUTIVE SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-I
3.3.1 XSEMI (Executive Sequence Monitor, Preface) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-I
3.43.3.2
3.3.3
3.3.4
3.3.5
3.3.6
3.3.7
3.3.8
3.3.9
3.3.10
3.3.11
3.3.12
3.3.13
3.3.14
3.3.15BTSTRP
SEMINT
GNFIAT
ENDSYS(Bootstrap Generator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-2
(Sequence Monitor Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-3
(Generate FIAT)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-5
(End-of-Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-6
SEARCH (Search, Load,andExecute Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-8
XSEMi(LinkiMainProgram, i=2,3&amp;hellip;.)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-9
XSEMXX (Sequence Monitor -DeckGenerator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-11
GNFIST (Generate FIST) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-12
XEOT(End-of-Tape) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-14
SSWTCH (Sense Switches) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-15
C_NMSG (Console Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-16
TTLPGE (Title PageWriter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-17
SEMTRN (Transliteration) (IBH360-370 only) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-19
RETURN (Return) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-20
3.4-I
3.4-IUTILITY SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
3.4.1 MAPFNS (Machine WordFunctions) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
vi(8/I/72)&lt;/p&gt;
&lt;p&gt;Secti on
3.4.2
3.4.3
3.4.4
3.4.5
3.4.6
3.4.7
3,4.8
3.4.9
3.4.10
3.4.11
3.4.12
3.4.13
3.4.14
3.4.15
3.4.16
3.4.17
3.4.18
3.4.19
3.4.20
3.4.21
3.4.22
3.4.23
3.4.24
3.4.25
3.4.26
3.4.27
3.4.28
3.4.29
3.4.30
3.4.31TABLE OFCONTENTS (Continued)
PageNo.
_PEN (Initiate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-3
WRITE (Write DatainaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-4
CLOSE (Terminate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-5
READ (Read DataFromaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-6
FWDREC (Forward Space OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-8
BCKREC (Backspace OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-9
REWIND (Position FiletotheLoadPoint) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I0
EOF(Write anEnd-of-File) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-II
SKPFIL (Skip Files Forward orBackward) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-12
XGINO (GINO Utility Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-13
GINO (General Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-15
OPNCOR (Transmit Logical Records To/From CoreStorage) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-20
GOPEN (Short FormforSubroutine _PENWithHeader Record
Processing) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-22
FREAD (Short FormforSubroutine READ) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-23
WRTTRL (Write Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-24
FNAME (File Name) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-25
CLSTAB (Close aGINOFileandWrite aNonzero Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-26
XRCARD (Executive Free-Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-27
RCARD (Fixed Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-32
TAPBIT (Tape BitTest) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-35
PEXIT (Problem Exit)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-36
TMTOGO (Time-To-Go) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-37
PAGE (Page Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-38
MESAGE (Message) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-39
MSGWRT (Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-40
USRMSG (User Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-41
MATDUM (Matrix Dump(Print) Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-42
TABPRT (Table Printer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-43
PRELOC (Position DataBlock toRequested Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-44
SORT (Sort aTable) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-46
vii(811172)&lt;/p&gt;
&lt;p&gt;Section
3.4.32
3.4.33
3.4.34
3.4.35
3.4.36
3.4.37
3.4.38
3.4.39
3.4.40
3.4.41
3.4.42
3.4.43
3.4,44
3.4.45
3.4.46
3.4.47
3.4.48
3.4.49
3.4.50
3.4.51
3.4.52
3.4.53
3.4.54
3.4.55
3.4,56
3.4.57
3.4.58
3.4.59
3.4.60GMMATD
Precisi
GMMATS
Precisi
INVERD
INVERS
PREMAT
PRETRD
Double
PRETRS
Single
PRETABTABLEOFCONTENTS (Continued)
PageNo.
(General Matrix Multiply andTranspose -Double
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-49
(General Matrix Multiply andTranspose -Single
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-52
(Double Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-53
(Single Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-54
(Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-55
(Utility forModules WhichUsetheCSTMDataBlock-
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-64
(Utility forModules WhichUsetheCSTMDataBlock -
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-66
(Table Look-Up) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-67
AXIS(DrawanAxisonaPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-70
AXISi(AxisRoutine forPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-72
SKPFRM (SkipaVariable Number ofFrames) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-73
SELCAM (ToInitiate aNewPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-74
IDPL_T (Generate an&amp;quot;ID&amp;quot;Plot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-75
INTGPX (Search aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-76
INTLST (Interpret aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-77
LINE(DrawaLineonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-78
LINEi(DrawaLineonPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-79
PRINT(Print aTitleonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-81
RDM_DX (ReadaFileContaining XRCARD Translations) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-83
SGINO (GI_!OforUnformatted Tapes) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-85
STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot)&amp;hellip;&amp;hellip;. 3.4-87
SYMBOL (TypeaSymbol onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-88
TIPE(TypeaLineofCharacters onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-90
TYPEi (TypeaLineofCharacters onPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-92
TYPFLT (TypeaFloating PointNumber onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-94
TYPINT (TypeanInteger Number onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-96
WPLTI (Write aPlotter Command forPlotter I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-98
WPLT2 (Write aPlotter Command forPlotters 2and8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-100
WPLT3 (Write aPlotter Command forPlotter 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-102
viii(8/I/72)&lt;/p&gt;
&lt;p&gt;SectionTABLE OFCONTENTS (Continued)
3.4.61
3.4.62
3.4.63
3.4.64
3.4.65
3.4.66
3.4.67
3.4.68
3.4.69
3.4.70
3.4.71
3.4.72
3.4.73
3.4.74
3.4.75
3.4.76
3.4.77
3.4.78
3.4.79PageNo.
GINOIO (GINO Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I03
EJECT (Automatic PageEject) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-105
PLAMAT (Material Property Utility forTwo-Dimensional Elements
inPiecewise Linear Analysis) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I06
WPLT4 (Write aPlotter Command forPlotters 4through 7)&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I08
WPLT9 (Write aPlotter Command forPlotter 9)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-II0
WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose
Plotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-III
PLTSET (Plotting Parameter Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I13
DRWCHR (ToDrawaLineofCharacters) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I15
FNDPLT (Determine theInternal Plotter andModel Indices) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-I17
PHDMIA (DMIPunch Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I18
HEAD (Plot Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-120
DELSET (Dummy Element Setup). &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-121
HMAT (Heat Transfer Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-122
(Binary Search) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-123 BISRCH
FORFIL (File Unit) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-126
DADOTB (Double Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-127
DAXB(Double Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-128
SADOTB (Single Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-129
SAXB(Single Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-130
3.5 MATRIX SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-I
BLDPK (Build aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-I
PACK (Pack aColumn ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-5
INTPK (Interpret aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-7
UNPACK (Unpack aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-I0
CALCV
PARTN
SSG2A
SDRIB
UPART3.5.l
3.5.2
3.5.3
3.5.4
3.5.5
3.5.6
3.5.7
3.5.8
3.5.9(Compute aPartitioning Vector) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-12
-MERGE (Partition aMatrix -Merge Matrices Together) &amp;hellip;&amp;hellip;.. 3.5-13
(Driver forPARTN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-16
(Driver forMERGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-17
(Symmetric Partition Driver) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-18
ix(811172)
L&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.PageNo.
3.5.10 ADD(Driver forSADD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-19
3.5.11 SSG2C(Driver forADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-20
3.5.12 MPYAD(Matrix Multiplication Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-22
3.5.13 SSG2B(Driver forMPYAD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-29
3.5.14 SDCOMP (Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-30
3.5.15 DECOMP (Unsymmetric Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-44
3.5.16 CDCBMP (Complex Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-62
3.5.17 FBS(Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-64
3.5.18 SSG3A (Driver forFBS)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-66
3.5.19 GFBS(General Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-67
3.5.20 SOLVER (Simultaneous Equation Solution Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-69
3.5.21 DMPY(Multiply aDiagonal Matrix byanArbitrary Matrix) &amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-71
3.5.22 ELIM(Perform aMatrix Reduction) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-73
3.5.23 FACTOR (Decompose aMatrix IntoTriangular Factors) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-74
3.5.24 TRANPI (Driver forTRNSP) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-75
3.5.25 TRNSP (Matrix Transpose) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-76
3.5.26 SADD(Matrix Addition Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-78
3.5.27 RSPSDC (RealSingle Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-80
3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;. 3.5-82
3.5.29 CXFBS (Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-84
MODULE FUNCTIONAL DESCRIPTIONS
4.1GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-I
4.1.1 UseofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.1-2
4.1.2 Alphabetical IndexofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-7
4.1.3 Alphabetical IndexofEntryPoints inModule Functional
Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.1-8
4.2EXECUTIVE PREFACE MODULE XCSA(EXECUTIVE CONTROL SECTION ANALYSIS) &amp;hellip;&amp;hellip;&amp;hellip; 4.2-I
4.3 EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.3-I
4.4EXECUTIVE PREFACE MODULE XSORT(EXECUTIVE BULKDATACARDSORT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.4-I
4.5EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.5-I
x(811172)&lt;/p&gt;
&lt;p&gt;Section
4.6
4.7
4.8
4.9
4.10
4.11
4.12
4.13
4.14
4.15
4.16
4.17
4.18
4.19
4.20
4.21
4.22
4.23
4.24
4.25
4.26
4.27
4.28
4.29
4.30
4.31
4.32
4.33
4.34
4.35TABLE OFCONTENTS (Continued)
PageNo.
EXECUTIVE PREFACE MODULE IFP3(II4PUT FILEPROCESSOR 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.6-I
EXECUTIVE PREFACE MODULE XGPI(EXECUTIVE GENERAL PROBLEM INITIALIZATION &amp;hellip;.. 4.7-I
EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.8-I
EXECUTIVE MODULE XSFA (EXECUTIVE SEGMENT FILEALLOCATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.9-I
EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.10-1
EXECUTIVE DMAPINSTRUCTION REPT (REPEAT AGROUP OFDMAP INSTRUCTIONS) &amp;hellip;&amp;hellip;. 4.11-1
EXECUTIVE DMAPINSTRUCTION JUMP (UNCONDITIONAL DMAPTRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.12-I
EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.13-I
EXECUTIVE DMAPINSTRUCTION EXIT (TERMINATE DMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.14-I
EXECUTIVE DMAPMODULE SAVE (SAVE VARIABLE PARAMETER VALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.15-I
EXECUTIVE DMAPMODULE PURGE (EXPLICIT DATABLOCK PURGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.16-I
EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.17-I
EXECUTIVE DMAPINSTRUCTION END(ENDOFDMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.18-I
EXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.19-I
EXECUTIVE DMAPMODULE-SETVAL (SETVALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.20-I
FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.21-I
FUNCTIONAL MODULE GP2(GEOMETRY PROCESSOR -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.22-I
FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.23-I
FUNCTIONAL MODULE PLBT (STRUCTURAL PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.24-I
FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.25-I
FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.26-I
FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.27-I
FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.28-I
FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.29-I
FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.30-I
FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.31-I
FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.32-I
FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE l)&amp;hellip;&amp;hellip;.. 4.33-I
FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)&amp;hellip;&amp;hellip;.. 4.34-I
FUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAINT ELIMINATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.35-I
xi(811172)&lt;/p&gt;
&lt;p&gt;Section
4.36
4.37
4.38
4.39
4.40
4.41
4.42
4.43
4.44
4.45
4.46
4.47
4.48
4.49
4.50
4.51
4.52
4.53
4.54
4.55
4.56
4.57
4.58
4.59
4.60
4,61
4.62
4.63
4.64TABLEOFCONTENTS (Continued)
P_Pa_geNo.
FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;. 4.36-I
FUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.37-I
FUNCTIONAL MODULE RBMG2(RIGID BODYMATRIX GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.38-I
FUNCTIONAL MODULE RBMG3(RIGID BODYMATRIX GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.39-I
FUNCTIONAL MODULE RBMG4(RIGID BODYMATRIX GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.40-I
FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.41-I
FUNCTIONAL MODULE SSG2(STATIC SOLUTION GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.42-I
FUNCTIONAL MODULE SSG3(STATIC SOLUTION GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.43-I
FUNCTIONAL MODULE SSG4(STATIC SOLUTION GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.44-I
FUNCTIONAL MODULE SDRI(STRESS DATARECOVERY -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.45-I
FUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.46-I
FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.47-I
FUNCTIONAL MO[ULE READ(REALEIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;. 4.48-I
FUNCTIONAL MODULE DSMGI(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.49-I
FUNCTIONAL MODULE SMP2(STRUCTURAL MATRIX PARTITIONER -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;. 4.50-I
FUNCTIONAL MODULE DSMG2(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.51-I
FUNCTIONAL MODULE PLAI(PIECEWISE LINEAR ANALYSIS -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.52-I
FUNCTIONAL MODULE PLA2(PIECEWISE LINEAR ANALYSIS -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.53-I
FUNCTIONAL MODULE PLA3(PIECEWISE LINEAR ANALYSIS -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.54-I
FUNCTIONAL MODULE PLA4(PIECEW!SE LINEAR ANALYSIS -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.55-I
FUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.56-I
FUNCTIONAL MODULE MTRXIN (MATRIX INPUT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.57-I
FUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.58-I
FUNCTIONAL MODULE CEAD(COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;.. 4.59-I
FUNCTIONAL MODULE VDR(VECTOR DATARECOVERY) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.60-I
FUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) &amp;hellip;&amp;hellip;.. 4.61-I
FUNCTIONAL MODULE SDR3(STRESS DATARECOVERY -PHASE3-S@RTIto
S_RT2PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.62-I
FUNCTIONAL MODULE XYTRAN (XY-OUTPUT DATATRANSLATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.63-I
FUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.64-I
xii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS(Continued)
Section
4.65
4.66
4.67
4.68
4.69
4.70
4.71
4.72
4.73
4.74
4.75
4.76
4.77
4.78
4.79
4.80
4.81
4.82
4.83
4.84
4.85
4.86
4.87Page No.
FUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.65-I
FUNCTIONAL MODULE GKAM (GENERAL KASSEMBLER ,MODAL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.66-I
FUNCTIONAL MODULE DDRI (DYNAMIC DATA RECOVERY -PART l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.67-I
FUNCTIONAL MODULE DDR2 (DYNAMIC DATA RECOVERY -PART 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.68-I
OUTPUT MODULE XYPLOT (X-Y DATA PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.69-I
OUTPUT MODULE BFP(OUTPUT FILE PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.70-I
OUTPUT MODULE MATPRN (GENERAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.71-I
OUTPUT MODULE MATGPR (DISPLACEMENT METHOD MATRIX PRI_ITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.72-I
OUTPUT MODULE MATPRT (MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.73-I
OUTPUT MODULE SEEMAT (PICTORIAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.74-I
OUTPUT MODULE TABPT (TABLE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.75-I
OUTPUT MODULE PRTMSG (MESSAGE WRITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.76-I
OUTPUT MODULE PRTPARM (PARAMETER ANDDMAPMESSAGE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.77-I
MATRIX MODULE ADD(ADDTWOMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.78-I
.MATRIX MODULE MPYAD(MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.79-I
MATRIX MODULE S_LVE (SOLVES THEMATRIX EQUATION [A][X] =[B])&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.80-I
MATRIX MODULE DECAMP (MATRIX DECOMPOSITION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.81-I
MATRIX MODULE FBS(FORWARD -BACKWARD SUBSTITUTION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.82-I
MATRIX MODULE PARTN(PARTITION AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.83-I
MATRIX MODULE MERGE(MERGE MATRICES TOGETHER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.84-I
MATRIX MODULE TRNSP (TRANSPOSE AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.85-I
MATRIX MODULE SMPYAD (STRI?IG MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.86-I
STRUCTURAL ELEMENT DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I
4.87.1 TheR_D,C_IRBD, andTUBEElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-7
4.87.1.1 InputDatafortheR_D,TUBE,CBNR_D Elements &amp;hellip;&amp;hellip;&amp;hellip; 4.87-7
4.87.1.2 Stiffness Matrix Calculation (Subroutine KR_D
andKTUBEofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-8
4.87.1.3 Lumped MassMatrix Calculation (Subroutine MR_D
andMTUBEofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-9
4.87.1.4 Element LoadCalculations (Subroutine EDTLof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-10
4.87.1.5 Element Stress Calculations (Subroutines SR_DI
andSR_D2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-10
xiii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.2
4.87.3TABLEOFCONTENTS (Continued)
PageNo.
4.87.1.6 Differential Stiffness Matrix Calculation (Subroutine
DRODofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-12
4.87.1.7 Piecewise Linear Analysis Calculations (Subroutine
PSRODofModule PLA3andSubroutine PKRODofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-14
4.87.1.8 Coupled MassMatrix Calculation (Subroutine MCRODof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-16a
4.87.1.9 Thermal Analysis Calculations fortheRODElements
(Subroutine KRODofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-16b
TheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.1 InputDatafortheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.2 Stiffness Matrix Calculation (Subroutine KBARof
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-18
4.87.2.3 Lumped MassMatrix Calculation (Subroutine MBARof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-25
4.87.2.4 Element LoadCalculation (Subroutine BARofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-26
4.87.2.5 Element Stress Calculations (Subroutines SBARIand
SBAR2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-27
4.87.2.6 Differential Stiffness Matrix Calculation (Subroutine
DBEAMofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-29
4.87.2.7 Piecewise Linear Analysis Calculations (Subroutine
PSBARofModule PLA3andSubroutine PKBARofModule
PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-32
4.87.2.8 &amp;ldquo;Consistent&amp;rdquo; MassMatrix Calculation (Subroutine
MCBARofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-36
4.87.2.9 Thermal Analysis Calculations fortheBARElement
(Subroutine KBARofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-37
TheSHEAR PanelandTWIST PanelElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-38
InputDataforSHEARandTWISTPanels &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-38
Definition ofElement Geometry &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-39
Coefficient Generation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-41
Stiffness Matrix Formulation foraSHEARPanel
(Subroutine KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-46
TWIST Element Stiffness Matrix Generation (Subroutine
KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-47
MassMatrix Generation (Subroutine MASSTQ ofModule
SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-484.87.3.1
4.87.3.2
4.87.3.3
4.87.3.4
4.87.3.5
4.87.3.6
xiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.4
4.87.5TABLE OFCONTENTS (Continued)
PageNo.
4.87.3.7 SHEAR Element Stress andForce Calculations
(Subroutine SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-50
4.87.3.8 TWIST Element Stress andForce Calculations
(Subroutines SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-52&amp;rsquo;
4.87.3.9 SHEAR Panel Differential Stiffness Calculations
(Subroutine DSHEAR ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-54
TRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.1 Input DatafortheTRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.2 Basic Equations forTRMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-59
4.87.4.3 Stiffness Matrix Calculation forTRMEM (Subroutine
KTRMEM ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-61
4.87.4.4 Mass Matrix Calculation fortheTRMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-62
4.87.4.5 Element LoadCalculations fortheTRMEM Element
(Subroutine TRIMEM ofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.6 Element Stress Calculations fortheTRMEM Element
(Subroutines STRMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.7 Differential Stiffness Matrix Calculations forthe
TRMEM Element (Subroutine DTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip; 4.87-67
4.87.4.8 General Calculations fortheQDMEM bytheQDMEM
Driver Routines (Subroutines KQDMEM ofModule SMAI,
SQDMEI ofModule SDR2, DQDMEM ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-67
4.87.4.9 Stiffness Matrix Calculations fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-70
4.87.4.10 Element Stress Calculations fortheQDMEM (Subroutine
SQDMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-70
4.87.4.11 MassMatrix Generation fortheQDMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-74
4.87.4.12 Thermal LoadComputation fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76
4.87.4.13 Differential Stiffness Computations fortheQDMEM
(Subroutines DQDMEM andDTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip;. 4.87-76
4.87.4.14 Piece_ise Linear Analysis Calculations (Subroutines
PSTRM andPSQDM ofModule PLA3andSubroutines
PKTRM andPKQDM ofModule PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76a
4.87.4.15 Thermal Analysis Calculations fortheMembrane
Elements (Subroutine KTRMEM andKQDMEM ofModule
SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-76d
TheTRBSC, TRPLT andQDPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-78
4.87.5.1 Input DatafortheTRBSC andTRPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-78
4.87.5.2 General Calculation fortheTRBSC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-79
xv(811172)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.87.64.87.5.3
4.87.5.8
4.87.5.9
4.87.5.10
4.87.5.11
4.87.5.12
4.87.5.13
4.87.5.14
TheTRIAl,
4.87.6.1
4.87.6.2
4.87.6.3
4.87.6.4
4.87.6.5
4.87.6.6
4.87.6.7Pa_a_eNo.
Stiffness Matrix Calculations fortheTRBSCElement
(Subroutine KTRBSC ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-84
Stress Calculations fortheTRBSCElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-85
Stiffness Matrix Calculations fortheTRPLTElement
(Subroutine KTRPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-87
Structural Damping Matrices fortheTRPLTElement &amp;hellip;.. 4.87-95
Stress andElement ForceCalculations fortheTRPLT
Element (Subroutines STRPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-95
Stiffness Matrix Calculations fortheQDPLTElement
(Subroutine KQDPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-97
Stress andElement ForceCalculations fortheQDPLT
Element (Subroutines SQDPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-102
Lumped MassMatrix Generation fortheTRBSC, TRPLT,
andQDPLTElements (Subroutine MASSTQ ofModule SMA2).. 4.87-104
Coupled MassMatrix Calculations fortheTRBSCElement
(Subroutine MTRBSC ofModule SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I04a
MassMatrix Calculations fortheTRPLT Element
(Subroutine MTRPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04g
MassMatrix Calculations fortheQDPLTElement
(Subroutine MQDPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04j
Thermal LoadEquations fortheBending Element
(Subroutine TRBSC, TRPLT andQDPLTofModule SSGI) &amp;hellip;.4.87-I04n
TRIA2, QUADIandQUAD2Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-106
InputDatafortheTRIAl, TRIA2, QUADIandQUAD2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-106
Stiffness Matrix Calculations (Subroutine KTRIQD
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-107
Lumped MassMatrix Generation (Subroutine MASSTQ
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Thermal LoadCalculations (Subroutine EDTLofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-108
Element Stress andForceCalculations (Subroutines
STRQDI andSTRQD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Differential Stiffness Matrix Calculations
(Subroutine MTRIQD ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09
Piecewise Linear Analysis Calculations (Subroutines
PSTRII, PSTRI2, PSQADI, andPSQAD2 ofModule PLA3,
andPKTRII, PKTRI2, PKQADI andPKQAD2 ofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09a
xvi(811/72)&lt;/p&gt;
&lt;p&gt;Secti on
4.87.7
4.87.8
4.87.94.87.6.8
4.87.6.9TABLE OFCONTENTS (Continued)
PageNo.
Differential Stiffness Matrix Calculations forthe
TRIAl andTRIA2 Elements (Subroutine DTRIA of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09d
Differential Stiffness Matrix Calculations forthe
QUADI andQUAD2 Elements (Subroutine DQUAD of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09g
4.87.6.10 Differential Stiffness Matrix Calculations forthe
Basic Bending Triangle (Subroutine DTRBSC of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09j
4.87.6.11 Thermal Calculations fortheCombination Elements
(Subroutine KTRIQD ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09p
TheELASi, MASSi andDAMPi Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-II0
4.87.7.1 Input Data fortheELASi, MASSi andDAMPi Elements &amp;hellip;. 4.87-II0
4.87.7.2 ELASi Stiffness Matrix Generation (Subroutine KELAS
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-II0
4.87.7.3 MASSi Mass Matrix Generation (Subroutine MASSD of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.4 DAMPi Damping Matrix Generation (Subroutine MASSD
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.5 ELASi Stress andForce Recovery (Subroutines SELASI
andSELAS2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-III
Concentrated MassElements C_NMI, C_NM2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.1 ECPTEntries fortheC_NMIMassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-113
4.87.8.2 MassMatrix Calculations fortheCONMIElement
(Subroutine MC_NMX ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.3 ECPTEntries fortheCOHM2MassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-114
4.87.8.4 MassMatrix Calculations fortheCONM2Element
(Subroutine MCBNMX ofModule STY2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-114
TheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.1 InputDatafortheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.2 Stiffness Matrix Calculations (Subroutine KCONEof
Module SMAI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.3 MassMatrix Computation (Subroutine MCONEofModule
SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-118
4.87.9.4 Element LoadCalculations (Subroutine CONEofModule
SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-118
4.87.9.5 Element Stress Calculations (Subroutines SCONE1,
SCONE2, SC@NE3 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-123
4.87.9.6 Differential Stiffness Matrix Calculations (Subroutine
DCONEofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-127a
xvii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.10
4.87.11
4.87.12TABLEOFCONTENTS (Continued)
No.
TheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.1 InputDatafortheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.2 General Geometric Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-129
4.87.10.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-130
4.87.10.4 Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-132
4.87.10.5 Stiffness Matrix Generation (Subroutine KTRIRG of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-133
4.87.10.6 MassMatrix Calculations (Subroutine MTRIRG of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-135
4.87.10.7 Thermal LoadCalculations (Subroutine TTRIRG of
Module SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-136
4.87.10.8 Element ForceandStress Calculations (Subroutines
STRIRI andSTRIR2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-136
4.87.10.9 Thermal Analysis Calculations fortheTRIARG and
TRAPRG Elements (Subroutine HRINGofModule SMAI)&amp;hellip;.. 4.87-138a
TheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-139
4.87.11.1 InputDatafortheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-139
4.87.11.2 General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-140
4,87.11.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-142
4.87.11.4 Elastic Constants Matrix Calculation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.5 Stiffness Matrix Generation (Subroutine KTRAPR of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.6 MassMatrix Calculation (Subroutine MTRAPR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-146
4.87.11.7 Thermal LoadCalculations (Subroutine TTRAPR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-147
4.87.11,8 Element ForceandStress Calculations (Subroutines
STRAP1 andSTRAP2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-148
4.87.11.9 Thermal Analysis Calculations fortheTRAPRG Element
(Subroutine HRINGofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-151
TheT_RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-152
4.87.12.1
4,87.12,2
4.87.12.3
4.87.12.4InputDatafortheT@RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-152
General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-153
Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-156
Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-160
xviii (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P1</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_001/</guid>
      <description>
        
        
        &lt;p&gt;NASA SP-223 (01)
THENASTRAN PROGRAMMER&amp;rsquo;S MANUAL
SEPTEMBER 1972
Scientific andTechnical Information Office 1972
NATIONAL AERONAUTICS AND SPACE ADMINISTRATION
Washington, D.C.
II]]1] i,&lt;/p&gt;
&lt;p&gt;ForsalefromComputer Software Management andInformation Center (COSMIC)
Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50&lt;/p&gt;
&lt;p&gt;PREFACE TOTHENASTRAN PROGRAMMER&amp;rsquo;S MANIIAL
TheProgrammer&amp;rsquo;s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN,
theother three being theTheoretical Manual, theUser&amp;rsquo;s Manual andtheDemonstration Problem
Manual. TheProgrammer&amp;rsquo;s Manual isdivided intoseven major sections: Section l,NASTRAN Program-
ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions;
Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section
6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs.
Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground
material forallsections which follow.
Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata
communication between theprogram&amp;rsquo;s functional modules (amodule isdefined tobeagroup ofsub-
routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe
datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha-
betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections
2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand
noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous
tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven
atthebeginning ofSections 2.4and2.5respectively.
Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and
modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on
entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe
Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2.
Thereader isurged toreadtheintroductory material toSections 3and4before using these
sections.
Section 5treats computer andoperating system dependent matters suchasoperating system
control cards andgeneration oftheabsolute (executable) NASTRAN system.
Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented.
Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN.
Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications
system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners
ofthesystem ofnewmnemonics, acronyms, phrases and&amp;quot;buzz&amp;quot; words. Inorder toaidthereader in
i(811172)&lt;/p&gt;
&lt;p&gt;learning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN
Dictionary, oftheUser&amp;rsquo;s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat
leastthissection oftheUser&amp;rsquo;s Manual forhisday-to-day reference.
ii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS
Section
I.NASTRAN PROGRAMMING FUNDAMENTALSPageNo.
l.l
1.2PROGRAM
1.I.I
l.l.2
NASTRAN
l.2.1
l.2.2
l.2.3OVERVIEW &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. l.l-I
Objectives &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; l.l-I
Program Organization &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. l.l-3
EXECUTIVE SYSTEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.2-1
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-1
Executive Operations During thePreface &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.2-4
Executive Operations During Problem Solution &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.2-9a
1.3 WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-1
1.3.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-1
1.3.2 Alphanumeric Data &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.3-2
1.3.3 Word Packing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.3-2
1.4 SYSTEM BLOCK DATASUBPROGRAM (SEMDBD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.4-1
1.5 THEOPENCORECONCEPT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.5-1
1.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.5-1
1.5.2 Definition ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.5.3 Example ofanApplication ofOpenCore &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.5-1
1.6 NASTRAN INPUT/OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-1
1.6.2 UseoftheOperating System Input File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.6-1
1.6.3 UseoftheOperating System Output File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.6-2
1.6.4 GIN_ &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.6-3
1.7 NASTRAN MATRIX ROUTINES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-I
1.7.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7Â°l
1.7.2 Matrix Packing andUnpacking &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-1
1.7.3 TheNested Vector SetConcept UsedtoRepresent Components
ofDisplacement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 1.7-2
1.7.4 Processing ofMatrices &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.7-4
1.8 GENERATION OFMATRICES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.8-1
1.8.1 TheECPTDataBlock &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-1
1.8.2 Structural Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 1.8-2
iii(8/I/72)&lt;/p&gt;
&lt;p&gt;,Section
1.9
1.I0TABLEOFCONTENTS (Continued)
2.PageNo.
TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 1.9-I
RESTARTS INNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. I.I0-I
DATABLOCKANDTABLEDESCRIPTIONS
2.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.1-I
2.2DATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.2-I
2.2.1 IndexforDataBlockDescriptions Sorted onDataBlockNames &amp;hellip;&amp;hellip;. 2.2-3
2.2.2 IndexforDataBlockDescriptions Sorted Alphabetically byModule ..2.2-11
2.3DATABLOCKDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-I
2.3.1 DataBlocks Output FromModule IFPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-I
2.3.2 DataBlocks
2.3.3 DataBlocks
2.3.4 DataBlocks
2.3.5 DataBlocks
2.3.6 DataBlocks
2.3.7 DataBlocks
2.3.8 DataBlocks
2.3.9 DataBlocks
2.3.10 DataBlocks
2.3.11 DataBlocks
2.3.12 DataBlocks
2.3.13 DataBlocks
2.3.14 DataBlocks
2.3.15 DataBlocks
2.3.16 DataBlocks
2.3.17 DataBlocks
2.3.18 DataBlocks
2.3.19 DataBlocks
2.3.20 DataBlocks
2.3.21 DataBlocks
2.3.22 DataBlocksOutput FromModule IFP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-5
Output FromModule GPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-31
Output FromModule GP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-36
Output FromModule PLTSET &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-37
Output FromModule PL_T&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-40
Output FromModule GP3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-41
Out)ut FromModule TAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-45
Out)ut FromModule SMAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-56
Out)ut FromModule SMA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-58
Out)ut FromModule GPWG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-59
Out)ut FromModule SMA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-60
Out)ut FromModule GP4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-61
Out)ut FromModule GPSP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-63
Out)ut FromModule MCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-64
Out)ut FromModule MCE2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-65
Out)ut FromModule SCEI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-67
Out)ut FromModule SMPI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-70
OutDut FromModule RBMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-73
Output FromModule RBMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-75
Output FromModule RBMG3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-77
Output FromModule RBMG4 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-78
iv(8/I172)&lt;/p&gt;
&lt;p&gt;Section
2.3.23
2.3.24
2.3.25
2.3.26
2.3.27
2.3.28
2.3.29
2.3.30
2.3.31
2.3.32
2.3.33
2.3.34
2.3.35
2.3.36
2.3.37
2.3.38
2.3.39
2.3.40
2.3.41
2.3.42
2.3.43
2.3.44
2.3.45
2.3.46
2.3.47
2.3.48
2.3.49
2.3.50
2.3.51
2.3.52TABLEOFCONTENTS (Continued)
PageNo.
DataBlocks Output FromModule SSGI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-79
DataBlocks Output FromModule SSG2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-80
DataBlocks Output FromModule SSG3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-81
DataBlocks Output FromModule SSG4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-83
DataBlocks Output FromModule SDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-84
DataBlocks Output FromModule SDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-88
DataBlocks Output FromModule DPD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-114
DataBlocks Output FromModule READ&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-125
DataBlocks Output FromModule DSMGI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-128
DataBlocks Output FromModule SMP2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-129
DataBlocks Output FromModule DSMG2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.3-130
DataBlocks Output FromModule PLAI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-132
DataBlocks Output FromModule ADD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-137
DataBlocks Output FromModule PLA2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-138
DataBlocks Output FromModule PLA3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-139
DataBlocks Output FromModule PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-140
DataBlocks Output FromModule CASE&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-141
DataBlocks Output FromModule MTRXIN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-142
DataBlocks Output FromModule GKAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-143
DataBlocks Output FromModule CEAD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-146
DataBlocks Output FromModule VDR&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-149
DataBlocks Output FromModule FRRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-158
DataBlocks Output FromModule SDR3&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-160
DataBlocks Output FromModule XYTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-175
DataBlocks Output FromModule RANDOM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-179
DataBlocks Output FromModule TRD&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-181
DataBlocks Output FromModule GKAM&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-183
DataBlocks Output FromModule DDRI&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-184
Element Stress Output DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2.3-185
Element ForceOutput DataDescription &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.3-189
v(811172)&lt;/p&gt;
&lt;p&gt;Section
2.4TABLEOFCONTENTS (Continued)
3.2.3.53 DataBlocks Output FromModule DDR2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
2.3.54 DataBlocks Output FromModule BMG&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
2.3.55 DataBlocks Output FromModule PLTTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
EXECUTIVE TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..PageNo.
2.3-192
2.3-194
2.3-194
2.4-I
2.4.1 Executive Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-2
2.4.2 Executive Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 2.4-15
2.5MISCELLANEOUS TABLEDESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 2.5-I
2.5.1 Miscellaneous Tables WhicharePermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;.. 2.5-2
2.5,2 Miscellaneous Tables NotPermanently CoreResident &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 2,5-6
SUBROUTINE DESCRIPTIONS
3.1INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.1-I
3.2ALPHABETICAL INDEXOFENTRYPOINTS FORSUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.2-I
3.3EXECUTIVE SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-I
3.3.1 XSEMI (Executive Sequence Monitor, Preface) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-I
3.43.3.2
3.3.3
3.3.4
3.3.5
3.3.6
3.3.7
3.3.8
3.3.9
3.3.10
3.3.11
3.3.12
3.3.13
3.3.14
3.3.15BTSTRP
SEMINT
GNFIAT
ENDSYS(Bootstrap Generator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-2
(Sequence Monitor Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-3
(Generate FIAT)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-5
(End-of-Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-6
SEARCH (Search, Load,andExecute Link) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-8
XSEMi(LinkiMainProgram, i=2,3&amp;hellip;.)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-9
XSEMXX (Sequence Monitor -DeckGenerator) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-11
GNFIST (Generate FIST) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-12
XEOT(End-of-Tape) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-14
SSWTCH (Sense Switches) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-15
C_NMSG (Console Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-16
TTLPGE (Title PageWriter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.3-17
SEMTRN (Transliteration) (IBH360-370 only) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.3-19
RETURN (Return) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.3-20
3.4-I
3.4-IUTILITY SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
3.4.1 MAPFNS (Machine WordFunctions) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
vi(8/I/72)&lt;/p&gt;
&lt;p&gt;Secti on
3.4.2
3.4.3
3.4.4
3.4.5
3.4.6
3.4.7
3,4.8
3.4.9
3.4.10
3.4.11
3.4.12
3.4.13
3.4.14
3.4.15
3.4.16
3.4.17
3.4.18
3.4.19
3.4.20
3.4.21
3.4.22
3.4.23
3.4.24
3.4.25
3.4.26
3.4.27
3.4.28
3.4.29
3.4.30
3.4.31TABLE OFCONTENTS (Continued)
PageNo.
_PEN (Initiate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-3
WRITE (Write DatainaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-4
CLOSE (Terminate Activity onaFile) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-5
READ (Read DataFromaLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-6
FWDREC (Forward Space OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-8
BCKREC (Backspace OneLogical Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-9
REWIND (Position FiletotheLoadPoint) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I0
EOF(Write anEnd-of-File) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-II
SKPFIL (Skip Files Forward orBackward) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-12
XGINO (GINO Utility Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-13
GINO (General Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-15
OPNCOR (Transmit Logical Records To/From CoreStorage) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-20
GOPEN (Short FormforSubroutine _PENWithHeader Record
Processing) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-22
FREAD (Short FormforSubroutine READ) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-23
WRTTRL (Write Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-24
FNAME (File Name) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-25
CLSTAB (Close aGINOFileandWrite aNonzero Trailer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-26
XRCARD (Executive Free-Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-27
RCARD (Fixed Field CardDataConversion Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-32
TAPBIT (Tape BitTest) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-35
PEXIT (Problem Exit)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-36
TMTOGO (Time-To-Go) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-37
PAGE (Page Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-38
MESAGE (Message) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-39
MSGWRT (Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-40
USRMSG (User Message Writer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-41
MATDUM (Matrix Dump(Print) Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-42
TABPRT (Table Printer) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-43
PRELOC (Position DataBlock toRequested Record) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-44
SORT (Sort aTable) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-46
vii(811172)&lt;/p&gt;
&lt;p&gt;Section
3.4.32
3.4.33
3.4.34
3.4.35
3.4.36
3.4.37
3.4.38
3.4.39
3.4.40
3.4.41
3.4.42
3.4.43
3.4,44
3.4.45
3.4.46
3.4.47
3.4.48
3.4.49
3.4.50
3.4.51
3.4.52
3.4.53
3.4.54
3.4.55
3.4,56
3.4.57
3.4.58
3.4.59
3.4.60GMMATD
Precisi
GMMATS
Precisi
INVERD
INVERS
PREMAT
PRETRD
Double
PRETRS
Single
PRETABTABLEOFCONTENTS (Continued)
PageNo.
(General Matrix Multiply andTranspose -Double
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-49
(General Matrix Multiply andTranspose -Single
on)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-52
(Double Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-53
(Single Precision InCoreInverse Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-54
(Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-55
(Utility forModules WhichUsetheCSTMDataBlock-
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-64
(Utility forModules WhichUsetheCSTMDataBlock -
Precision Version) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-66
(Table Look-Up) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-67
AXIS(DrawanAxisonaPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-70
AXISi(AxisRoutine forPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-72
SKPFRM (SkipaVariable Number ofFrames) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-73
SELCAM (ToInitiate aNewPlot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-74
IDPL_T (Generate an&amp;quot;ID&amp;quot;Plot) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-75
INTGPX (Search aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-76
INTLST (Interpret aListofIntegers) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-77
LINE(DrawaLineonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-78
LINEi(DrawaLineonPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-79
PRINT(Print aTitleonaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-81
RDM_DX (ReadaFileContaining XRCARD Translations) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-83
SGINO (GI_!OforUnformatted Tapes) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-85
STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot)&amp;hellip;&amp;hellip;. 3.4-87
SYMBOL (TypeaSymbol onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-88
TIPE(TypeaLineofCharacters onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-90
TYPEi (TypeaLineofCharacters onPlotter i)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-92
TYPFLT (TypeaFloating PointNumber onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-94
TYPINT (TypeanInteger Number onaPlotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-96
WPLTI (Write aPlotter Command forPlotter I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-98
WPLT2 (Write aPlotter Command forPlotters 2and8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-100
WPLT3 (Write aPlotter Command forPlotter 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-102
viii(8/I/72)&lt;/p&gt;
&lt;p&gt;SectionTABLE OFCONTENTS (Continued)
3.4.61
3.4.62
3.4.63
3.4.64
3.4.65
3.4.66
3.4.67
3.4.68
3.4.69
3.4.70
3.4.71
3.4.72
3.4.73
3.4.74
3.4.75
3.4.76
3.4.77
3.4.78
3.4.79PageNo.
GINOIO (GINO Input/Output Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I03
EJECT (Automatic PageEject) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-105
PLAMAT (Material Property Utility forTwo-Dimensional Elements
inPiecewise Linear Analysis) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I06
WPLT4 (Write aPlotter Command forPlotters 4through 7)&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I08
WPLT9 (Write aPlotter Command forPlotter 9)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-II0
WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose
Plotter) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-III
PLTSET (Plotting Parameter Initialization) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I13
DRWCHR (ToDrawaLineofCharacters) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-I15
FNDPLT (Determine theInternal Plotter andModel Indices) &amp;hellip;&amp;hellip;&amp;hellip;. 3.4-I17
PHDMIA (DMIPunch Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-I18
HEAD (Plot Heading) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-120
DELSET (Dummy Element Setup). &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-121
HMAT (Heat Transfer Material Property Utility) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-122
(Binary Search) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.4-123 BISRCH
FORFIL (File Unit) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.4-126
DADOTB (Double Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-127
DAXB(Double Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-128
SADOTB (Single Precision Vector DotProduct) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-129
SAXB(Single Precision Vector Cross Product) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.4-130
3.5 MATRIX SUBROUTINE DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-I
BLDPK (Build aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-I
PACK (Pack aColumn ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-5
INTPK (Interpret aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-7
UNPACK (Unpack aPacked Column ofaMatrix) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-I0
CALCV
PARTN
SSG2A
SDRIB
UPART3.5.l
3.5.2
3.5.3
3.5.4
3.5.5
3.5.6
3.5.7
3.5.8
3.5.9(Compute aPartitioning Vector) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-12
-MERGE (Partition aMatrix -Merge Matrices Together) &amp;hellip;&amp;hellip;.. 3.5-13
(Driver forPARTN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-16
(Driver forMERGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-17
(Symmetric Partition Driver) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-18
ix(811172)
L&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.PageNo.
3.5.10 ADD(Driver forSADD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-19
3.5.11 SSG2C(Driver forADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-20
3.5.12 MPYAD(Matrix Multiplication Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-22
3.5.13 SSG2B(Driver forMPYAD) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-29
3.5.14 SDCOMP (Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-30
3.5.15 DECOMP (Unsymmetric Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-44
3.5.16 CDCBMP (Complex Matrix Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-62
3.5.17 FBS(Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-64
3.5.18 SSG3A (Driver forFBS)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-66
3.5.19 GFBS(General Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-67
3.5.20 SOLVER (Simultaneous Equation Solution Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-69
3.5.21 DMPY(Multiply aDiagonal Matrix byanArbitrary Matrix) &amp;hellip;&amp;hellip;&amp;hellip;.. 3.5-71
3.5.22 ELIM(Perform aMatrix Reduction) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-73
3.5.23 FACTOR (Decompose aMatrix IntoTriangular Factors) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-74
3.5.24 TRANPI (Driver forTRNSP) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 3.5-75
3.5.25 TRNSP (Matrix Transpose) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-76
3.5.26 SADD(Matrix Addition Routine) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-78
3.5.27 RSPSDC (RealSingle Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-80
3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition) &amp;hellip;&amp;hellip;&amp;hellip;. 3.5-82
3.5.29 CXFBS (Forward -Backward Substitution) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 3.5-84
MODULE FUNCTIONAL DESCRIPTIONS
4.1GENERAL COMMENTS ANDINDEXES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-I
4.1.1 UseofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.1-2
4.1.2 Alphabetical IndexofModule Functional Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.1-7
4.1.3 Alphabetical IndexofEntryPoints inModule Functional
Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.1-8
4.2EXECUTIVE PREFACE MODULE XCSA(EXECUTIVE CONTROL SECTION ANALYSIS) &amp;hellip;&amp;hellip;&amp;hellip; 4.2-I
4.3 EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.3-I
4.4EXECUTIVE PREFACE MODULE XSORT(EXECUTIVE BULKDATACARDSORT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.4-I
4.5EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.5-I
x(811172)&lt;/p&gt;
&lt;p&gt;Section
4.6
4.7
4.8
4.9
4.10
4.11
4.12
4.13
4.14
4.15
4.16
4.17
4.18
4.19
4.20
4.21
4.22
4.23
4.24
4.25
4.26
4.27
4.28
4.29
4.30
4.31
4.32
4.33
4.34
4.35TABLE OFCONTENTS (Continued)
PageNo.
EXECUTIVE PREFACE MODULE IFP3(II4PUT FILEPROCESSOR 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.6-I
EXECUTIVE PREFACE MODULE XGPI(EXECUTIVE GENERAL PROBLEM INITIALIZATION &amp;hellip;.. 4.7-I
EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.8-I
EXECUTIVE MODULE XSFA (EXECUTIVE SEGMENT FILEALLOCATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.9-I
EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.10-1
EXECUTIVE DMAPINSTRUCTION REPT (REPEAT AGROUP OFDMAP INSTRUCTIONS) &amp;hellip;&amp;hellip;. 4.11-1
EXECUTIVE DMAPINSTRUCTION JUMP (UNCONDITIONAL DMAPTRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.12-I
EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.13-I
EXECUTIVE DMAPINSTRUCTION EXIT (TERMINATE DMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.14-I
EXECUTIVE DMAPMODULE SAVE (SAVE VARIABLE PARAMETER VALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.15-I
EXECUTIVE DMAPMODULE PURGE (EXPLICIT DATABLOCK PURGE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.16-I
EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.17-I
EXECUTIVE DMAPINSTRUCTION END(ENDOFDMAPPROGRAM) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.18-I
EXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.19-I
EXECUTIVE DMAPMODULE-SETVAL (SETVALUES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.20-I
FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.21-I
FUNCTIONAL MODULE GP2(GEOMETRY PROCESSOR -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.22-I
FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.23-I
FUNCTIONAL MODULE PLBT (STRUCTURAL PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.24-I
FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.25-I
FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.26-I
FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.27-I
FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.28-I
FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.29-I
FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.30-I
FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.31-I
FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.32-I
FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE l)&amp;hellip;&amp;hellip;.. 4.33-I
FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)&amp;hellip;&amp;hellip;.. 4.34-I
FUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAINT ELIMINATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.35-I
xi(811172)&lt;/p&gt;
&lt;p&gt;Section
4.36
4.37
4.38
4.39
4.40
4.41
4.42
4.43
4.44
4.45
4.46
4.47
4.48
4.49
4.50
4.51
4.52
4.53
4.54
4.55
4.56
4.57
4.58
4.59
4.60
4,61
4.62
4.63
4.64TABLEOFCONTENTS (Continued)
P_Pa_geNo.
FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;. 4.36-I
FUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.37-I
FUNCTIONAL MODULE RBMG2(RIGID BODYMATRIX GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.38-I
FUNCTIONAL MODULE RBMG3(RIGID BODYMATRIX GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.39-I
FUNCTIONAL MODULE RBMG4(RIGID BODYMATRIX GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;.. 4.40-I
FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.41-I
FUNCTIONAL MODULE SSG2(STATIC SOLUTION GENERATOR -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.42-I
FUNCTIONAL MODULE SSG3(STATIC SOLUTION GENERATOR -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.43-I
FUNCTIONAL MODULE SSG4(STATIC SOLUTION GENERATOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.44-I
FUNCTIONAL MODULE SDRI(STRESS DATARECOVERY -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.45-I
FUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.46-I
FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.47-I
FUNCTIONAL MO[ULE READ(REALEIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;. 4.48-I
FUNCTIONAL MODULE DSMGI(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.49-I
FUNCTIONAL MODULE SMP2(STRUCTURAL MATRIX PARTITIONER -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;. 4.50-I
FUNCTIONAL MODULE DSMG2(DIFFERENTIAL STIFFNESS MATRIX GENERATOR -
PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.51-I
FUNCTIONAL MODULE PLAI(PIECEWISE LINEAR ANALYSIS -PHASEI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.52-I
FUNCTIONAL MODULE PLA2(PIECEWISE LINEAR ANALYSIS -PHASE2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.53-I
FUNCTIONAL MODULE PLA3(PIECEWISE LINEAR ANALYSIS -PHASE3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.54-I
FUNCTIONAL MODULE PLA4(PIECEW!SE LINEAR ANALYSIS -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.55-I
FUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.56-I
FUNCTIONAL MODULE MTRXIN (MATRIX INPUT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.57-I
FUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.58-I
FUNCTIONAL MODULE CEAD(COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;.. 4.59-I
FUNCTIONAL MODULE VDR(VECTOR DATARECOVERY) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.60-I
FUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) &amp;hellip;&amp;hellip;.. 4.61-I
FUNCTIONAL MODULE SDR3(STRESS DATARECOVERY -PHASE3-S@RTIto
S_RT2PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.62-I
FUNCTIONAL MODULE XYTRAN (XY-OUTPUT DATATRANSLATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.63-I
FUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.64-I
xii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS(Continued)
Section
4.65
4.66
4.67
4.68
4.69
4.70
4.71
4.72
4.73
4.74
4.75
4.76
4.77
4.78
4.79
4.80
4.81
4.82
4.83
4.84
4.85
4.86
4.87Page No.
FUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.65-I
FUNCTIONAL MODULE GKAM (GENERAL KASSEMBLER ,MODAL) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.66-I
FUNCTIONAL MODULE DDRI (DYNAMIC DATA RECOVERY -PART l)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.67-I
FUNCTIONAL MODULE DDR2 (DYNAMIC DATA RECOVERY -PART 2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.68-I
OUTPUT MODULE XYPLOT (X-Y DATA PLOTTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.69-I
OUTPUT MODULE BFP(OUTPUT FILE PROCESSOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.70-I
OUTPUT MODULE MATPRN (GENERAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.71-I
OUTPUT MODULE MATGPR (DISPLACEMENT METHOD MATRIX PRI_ITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.72-I
OUTPUT MODULE MATPRT (MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.73-I
OUTPUT MODULE SEEMAT (PICTORIAL MATRIX PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.74-I
OUTPUT MODULE TABPT (TABLE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.75-I
OUTPUT MODULE PRTMSG (MESSAGE WRITER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.76-I
OUTPUT MODULE PRTPARM (PARAMETER ANDDMAPMESSAGE PRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.77-I
MATRIX MODULE ADD(ADDTWOMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.78-I
.MATRIX MODULE MPYAD(MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.79-I
MATRIX MODULE S_LVE (SOLVES THEMATRIX EQUATION [A][X] =[B])&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.80-I
MATRIX MODULE DECAMP (MATRIX DECOMPOSITION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.81-I
MATRIX MODULE FBS(FORWARD -BACKWARD SUBSTITUTION) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.82-I
MATRIX MODULE PARTN(PARTITION AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.83-I
MATRIX MODULE MERGE(MERGE MATRICES TOGETHER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.84-I
MATRIX MODULE TRNSP (TRANSPOSE AMATRIX) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.85-I
MATRIX MODULE SMPYAD (STRI?IG MULTIPLY ADD)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.86-I
STRUCTURAL ELEMENT DESCRIPTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I
4.87.1 TheR_D,C_IRBD, andTUBEElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-7
4.87.1.1 InputDatafortheR_D,TUBE,CBNR_D Elements &amp;hellip;&amp;hellip;&amp;hellip; 4.87-7
4.87.1.2 Stiffness Matrix Calculation (Subroutine KR_D
andKTUBEofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-8
4.87.1.3 Lumped MassMatrix Calculation (Subroutine MR_D
andMTUBEofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-9
4.87.1.4 Element LoadCalculations (Subroutine EDTLof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-10
4.87.1.5 Element Stress Calculations (Subroutines SR_DI
andSR_D2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-10
xiii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.2
4.87.3TABLEOFCONTENTS (Continued)
PageNo.
4.87.1.6 Differential Stiffness Matrix Calculation (Subroutine
DRODofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-12
4.87.1.7 Piecewise Linear Analysis Calculations (Subroutine
PSRODofModule PLA3andSubroutine PKRODofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-14
4.87.1.8 Coupled MassMatrix Calculation (Subroutine MCRODof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-16a
4.87.1.9 Thermal Analysis Calculations fortheRODElements
(Subroutine KRODofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-16b
TheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.1 InputDatafortheBARElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-17
4.87.2.2 Stiffness Matrix Calculation (Subroutine KBARof
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-18
4.87.2.3 Lumped MassMatrix Calculation (Subroutine MBARof
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-25
4.87.2.4 Element LoadCalculation (Subroutine BARofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-26
4.87.2.5 Element Stress Calculations (Subroutines SBARIand
SBAR2ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-27
4.87.2.6 Differential Stiffness Matrix Calculation (Subroutine
DBEAMofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-29
4.87.2.7 Piecewise Linear Analysis Calculations (Subroutine
PSBARofModule PLA3andSubroutine PKBARofModule
PLA4&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-32
4.87.2.8 &amp;ldquo;Consistent&amp;rdquo; MassMatrix Calculation (Subroutine
MCBARofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-36
4.87.2.9 Thermal Analysis Calculations fortheBARElement
(Subroutine KBARofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-37
TheSHEAR PanelandTWIST PanelElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-38
InputDataforSHEARandTWISTPanels &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-38
Definition ofElement Geometry &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-39
Coefficient Generation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-41
Stiffness Matrix Formulation foraSHEARPanel
(Subroutine KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-46
TWIST Element Stiffness Matrix Generation (Subroutine
KPANEL ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-47
MassMatrix Generation (Subroutine MASSTQ ofModule
SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-484.87.3.1
4.87.3.2
4.87.3.3
4.87.3.4
4.87.3.5
4.87.3.6
xiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.4
4.87.5TABLE OFCONTENTS (Continued)
PageNo.
4.87.3.7 SHEAR Element Stress andForce Calculations
(Subroutine SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-50
4.87.3.8 TWIST Element Stress andForce Calculations
(Subroutines SPANLI andSPANL2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-52&amp;rsquo;
4.87.3.9 SHEAR Panel Differential Stiffness Calculations
(Subroutine DSHEAR ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-54
TRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.1 Input DatafortheTRMEM andQDMEM Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-58
4.87.4.2 Basic Equations forTRMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-59
4.87.4.3 Stiffness Matrix Calculation forTRMEM (Subroutine
KTRMEM ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-61
4.87.4.4 Mass Matrix Calculation fortheTRMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-62
4.87.4.5 Element LoadCalculations fortheTRMEM Element
(Subroutine TRIMEM ofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.6 Element Stress Calculations fortheTRMEM Element
(Subroutines STRMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;.. 4.87-63
4.87.4.7 Differential Stiffness Matrix Calculations forthe
TRMEM Element (Subroutine DTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip; 4.87-67
4.87.4.8 General Calculations fortheQDMEM bytheQDMEM
Driver Routines (Subroutines KQDMEM ofModule SMAI,
SQDMEI ofModule SDR2, DQDMEM ofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip; 4.87-67
4.87.4.9 Stiffness Matrix Calculations fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-70
4.87.4.10 Element Stress Calculations fortheQDMEM (Subroutine
SQDMEI andSTQME2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-70
4.87.4.11 MassMatrix Generation fortheQDMEM Element
(Subroutine MASSTQ ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-74
4.87.4.12 Thermal LoadComputation fortheQDMEM &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76
4.87.4.13 Differential Stiffness Computations fortheQDMEM
(Subroutines DQDMEM andDTRMEM ofModule DSMGI) &amp;hellip;&amp;hellip;. 4.87-76
4.87.4.14 Piece_ise Linear Analysis Calculations (Subroutines
PSTRM andPSQDM ofModule PLA3andSubroutines
PKTRM andPKQDM ofModule PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-76a
4.87.4.15 Thermal Analysis Calculations fortheMembrane
Elements (Subroutine KTRMEM andKQDMEM ofModule
SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-76d
TheTRBSC, TRPLT andQDPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-78
4.87.5.1 Input DatafortheTRBSC andTRPLT Elements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-78
4.87.5.2 General Calculation fortheTRBSC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-79
xv(811172)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
4.87.64.87.5.3
4.87.5.8
4.87.5.9
4.87.5.10
4.87.5.11
4.87.5.12
4.87.5.13
4.87.5.14
TheTRIAl,
4.87.6.1
4.87.6.2
4.87.6.3
4.87.6.4
4.87.6.5
4.87.6.6
4.87.6.7Pa_a_eNo.
Stiffness Matrix Calculations fortheTRBSCElement
(Subroutine KTRBSC ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-84
Stress Calculations fortheTRBSCElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-85
Stiffness Matrix Calculations fortheTRPLTElement
(Subroutine KTRPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-87
Structural Damping Matrices fortheTRPLTElement &amp;hellip;.. 4.87-95
Stress andElement ForceCalculations fortheTRPLT
Element (Subroutines STRPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-95
Stiffness Matrix Calculations fortheQDPLTElement
(Subroutine KQDPLT ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-97
Stress andElement ForceCalculations fortheQDPLT
Element (Subroutines SQDPLI andSBSPL2 ofModule
SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-102
Lumped MassMatrix Generation fortheTRBSC, TRPLT,
andQDPLTElements (Subroutine MASSTQ ofModule SMA2).. 4.87-104
Coupled MassMatrix Calculations fortheTRBSCElement
(Subroutine MTRBSC ofModule SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-I04a
MassMatrix Calculations fortheTRPLT Element
(Subroutine MTRPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04g
MassMatrix Calculations fortheQDPLTElement
(Subroutine MQDPLT ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I04j
Thermal LoadEquations fortheBending Element
(Subroutine TRBSC, TRPLT andQDPLTofModule SSGI) &amp;hellip;.4.87-I04n
TRIA2, QUADIandQUAD2Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-106
InputDatafortheTRIAl, TRIA2, QUADIandQUAD2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-106
Stiffness Matrix Calculations (Subroutine KTRIQD
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-107
Lumped MassMatrix Generation (Subroutine MASSTQ
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Thermal LoadCalculations (Subroutine EDTLofModule
SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-108
Element Stress andForceCalculations (Subroutines
STRQDI andSTRQD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-108
Differential Stiffness Matrix Calculations
(Subroutine MTRIQD ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09
Piecewise Linear Analysis Calculations (Subroutines
PSTRII, PSTRI2, PSQADI, andPSQAD2 ofModule PLA3,
andPKTRII, PKTRI2, PKQADI andPKQAD2 ofModule
PLA4) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09a
xvi(811/72)&lt;/p&gt;
&lt;p&gt;Secti on
4.87.7
4.87.8
4.87.94.87.6.8
4.87.6.9TABLE OFCONTENTS (Continued)
PageNo.
Differential Stiffness Matrix Calculations forthe
TRIAl andTRIA2 Elements (Subroutine DTRIA of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09d
Differential Stiffness Matrix Calculations forthe
QUADI andQUAD2 Elements (Subroutine DQUAD of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09g
4.87.6.10 Differential Stiffness Matrix Calculations forthe
Basic Bending Triangle (Subroutine DTRBSC of
Module DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-I09j
4.87.6.11 Thermal Calculations fortheCombination Elements
(Subroutine KTRIQD ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-I09p
TheELASi, MASSi andDAMPi Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-II0
4.87.7.1 Input Data fortheELASi, MASSi andDAMPi Elements &amp;hellip;. 4.87-II0
4.87.7.2 ELASi Stiffness Matrix Generation (Subroutine KELAS
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-II0
4.87.7.3 MASSi Mass Matrix Generation (Subroutine MASSD of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.4 DAMPi Damping Matrix Generation (Subroutine MASSD
ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-III
4.87.7.5 ELASi Stress andForce Recovery (Subroutines SELASI
andSELAS2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-III
Concentrated MassElements C_NMI, C_NM2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.1 ECPTEntries fortheC_NMIMassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-113
4.87.8.2 MassMatrix Calculations fortheCONMIElement
(Subroutine MC_NMX ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-113
4.87.8.3 ECPTEntries fortheCOHM2MassElement &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-114
4.87.8.4 MassMatrix Calculations fortheCONM2Element
(Subroutine MCBNMX ofModule STY2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-114
TheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.1 InputDatafortheCONEAX Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.2 Stiffness Matrix Calculations (Subroutine KCONEof
Module SMAI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-117
4.87.9.3 MassMatrix Computation (Subroutine MCONEofModule
SMA2)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-118
4.87.9.4 Element LoadCalculations (Subroutine CONEofModule
SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-118
4.87.9.5 Element Stress Calculations (Subroutines SCONE1,
SCONE2, SC@NE3 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-123
4.87.9.6 Differential Stiffness Matrix Calculations (Subroutine
DCONEofModule DSMGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-127a
xvii (8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.10
4.87.11
4.87.12TABLEOFCONTENTS (Continued)
No.
TheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.1 InputDatafortheTRIARG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-128
4.87.10.2 General Geometric Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-129
4.87.10.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-130
4.87.10.4 Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-132
4.87.10.5 Stiffness Matrix Generation (Subroutine KTRIRG of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-133
4.87.10.6 MassMatrix Calculations (Subroutine MTRIRG of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-135
4.87.10.7 Thermal LoadCalculations (Subroutine TTRIRG of
Module SSGI)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-136
4.87.10.8 Element ForceandStress Calculations (Subroutines
STRIRI andSTRIR2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-136
4.87.10.9 Thermal Analysis Calculations fortheTRIARG and
TRAPRG Elements (Subroutine HRINGofModule SMAI)&amp;hellip;.. 4.87-138a
TheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-139
4.87.11.1 InputDatafortheTRAPRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-139
4.87.11.2 General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-140
4,87.11.3 Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-142
4.87.11.4 Elastic Constants Matrix Calculation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.5 Stiffness Matrix Generation (Subroutine KTRAPR of
Module SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-144
4.87.11.6 MassMatrix Calculation (Subroutine MTRAPR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-146
4.87.11.7 Thermal LoadCalculations (Subroutine TTRAPR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-147
4.87.11,8 Element ForceandStress Calculations (Subroutines
STRAP1 andSTRAP2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-148
4.87.11.9 Thermal Analysis Calculations fortheTRAPRG Element
(Subroutine HRINGofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-151
TheT_RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-152
4.87.12.1
4,87.12,2
4.87.12.3
4.87.12.4InputDatafortheT@RDRG Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-152
General Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-153
Integral Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4,87-156
Elastic Constants Matrix Calculations &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-160
xviii (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P10</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_010/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.19.5 MLR(MATRIX)
Description
[M_r]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.19.6 MRR(MATRIX)
Description
[Mrr] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypePartition ofmassmatrix.
=r
=rectangular
=realdouble precision
Partition ofmassmatrix -rset.
=r
=r
=symmetric
=realdouble precision
2.3-74&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.20 Data Blocks Output From Module RBMG2
2.3.20.I LLL(MATRIX)
Description
[Lz_] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.20.2 ULL(.MATRIX)
Description
[u_]-
Matrix Trailer
NoteLower triangular factor ofKLL-_set.&lt;/h1&gt;&lt;p&gt;=lower triangular
=real double precision
Upper triangular factor ofKLL-_set.
Number ofcolumns =
Number ofrows :
Form :upper triangular
Type =real double precision
This matrix isnotastandard upper triangular factor.
subroutine FBS.
2.3.20.3
Description
Matrix TrailerLBLL (MATRIX)
Lower triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =lower triangular
Type =real double precisionItsformat isacceptable only to
2.3-75&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.20.4 UBLL(MATRIX)
Description
[u_]-
Matrix Trailer
NoteUpper triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =uppertriangular
Type =realdouble precision
Thismatrix isnotastandard uppertriangular factor.
subroutine FBS.Itsformat isacceptable onlyto
2.3-76&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.21 Data Blocks Output From Nodule REMG3
2.3.21.I DM(MATRIX)
Description
[D] -Rigid body transformation matrix.
Natrix Trailer
_umber ofcolumns =
Number ofrows =r
Form =rectangular
Type =real double precision
2.3-77&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.22 DataBlocks Output FromModule RBMG4
2.3.22.1 MR(MATRIX)
Description
[mr] -Rigid body mass matrix -rset.
Matrix Trailer
Number ofcolumns :r
Number ofrows :r
Form :symmetric
Type =real double precision
2.3-78&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.23 DataBlocks Output FromModule SSGI.
2.3.23.1 PG(MATRIX)
Description
[Pg] -Static loadvector matrix giving static loads -gset.
Matrix Trailer
Number ofcolumns =number ofsubcases
Number ofrows =g
Form =rectangular
Type =realsingle precision
2,3,23.2 PGI(MATRIX)
Description
i
[Pg] -Static loadvector giving static loads forPiecewise Linear Analysis problem -
gset.
MAtrix Trailer
Number ofcolumns =1
Number ofrows =g
Form =rectangular
Type =realsingleprecision
2.3-79&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.24 DataBlocks Output Fromr_odule SSG2
2.3,24.1
Description
[qr]-
Matrix TrailerQR(MATRIX)
Determinate support forces matrix -rset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.2 P0(F_TRIX)
Description
[Po]
Matrix Trailer=number ofsubcases
:r
:rectangular
=realsingle precision
Partition oftheloadvector matrix giving loadsduetostatic force-oset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.3 PS(MATRIX)
Description
[Ps]
Matrix Trailer:number ofsubcases
:o
=rectangular
:realsingle precision
Partition ofloadvector matrix giving loads insset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.4 PL(MATRIX)
Description
[P_] -
Matrix Trailer=number ofsubcases
:s
=rectangular
=real single precision
Partition oftheloadvector matrix giving static loadson_set.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
:
:rectangular
=realsingle precision
2.3-80&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.25 Data Blocks Output From Module SSG3
2.3.25.1 ULV(MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements _set.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=real double precision
2.3.25.2 U_V (MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements intheoset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases
:o
=rectangular
=real double precision
2.3.25.3 RULV (MATRIX)
Description
[6P_] Residual vector matrix forthe_set.
Matrix Trail er
Number ofcolumns =number ofsubcases
Number ofrows =
Form =rectangular
Type =real single precision
2.3.25.4 RU_V (MATRIX)
Description
{6Po} -Residual vector matrix fortheoset.
Matrix Trailer
Number ofcolumns =number ofsubcases
i_umber ofrows =o
Form =rectangular
Type =real single precision
2.3-81&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.25.5 UBLV(MATRIX)
Description
[u_] -Partition ofthedifferential stiffness displacement vector -&lt;em&gt;set.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form :rectanaular
Type :realdouble precision
2.3.25.6 RUBLV(MATRIX)
Description
[6P&lt;/em&gt;] Differential stiffness residual vector -Lset.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form =rectangular
Type :realsingle precision
2.3-82&lt;/p&gt;
&lt;h1&gt;DATABLOCK DESCRIPTIONS
2.3.26
2.3.26.1
Descri ption
[P_]
Matrix TrailerDataBlocks Output FromModule SSGA.
PLI(MATRIX)
Partition ofloadvector forinertia relief matrix giving loads duetostatic +
inertial forces on_set.
Number ofcolumns
Number ofrows
Form
Type
2.3.26.2 P_I(MATRIX)
Description
[Pio]
Matrix Trailer=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=realsingle precision
Partition ofloadvector forinertia relief matrix giving loads duetoinertial
force +static forces onoset.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
=o
=rectangular
=realsingle precision
2.3-83&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.27 DataBlocks Output FromModule SDRI
2.3.27,1 UGV(MATRIX)
Description
[Ug]-
Matrix TrailerDisplacement vector matrix giving displacements inthegset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.2
Description
[Pg] -
Matrix TrailerPGG(MATRIX)
Static loadvector appended toinclude allboundary conditions -gset.
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases inCASECC
=g
=rectangular
=realsingle precision
2.3.27.3
Description
[qg] -
Matrix TrailerQG(MATRIX)
Single-point constraint forces anddeterminate support forces matrix -qset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectanqular
Type =realsingle precision
2.3.27.4 PHIG(MATRIX)
Description
[@g] -Eigenvector matrix giving eigenvectors (displacements) inthegset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3-84&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.27.5 UBGV (MATRIX)
Description
h
[u_] -Displacement vector matrix fordifferential stiffness giving displacementssinthegset.
Matrix Trailer
Number ofcolumns =number offactors onaDSFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.6
Description
[qbg] _
Matrix TrailerQBG(MATRIX)
Single-point forces ofconstraint matrix fordifferential stiffness -gset.
Number ofcolumns =number offactors onaDSFACT bulkdatacardi|..L_.
mu_r OFrows =g
Form :rectangular
Type :realsingle precision
2.3.27.7 BQG(MATRIX)
Description
[q_] Single-point forces ofconstraint matrix forabucklinq analysis problem -gset.
Matrix Trailer
Number ofcolumns =number ofbuckling modes found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.B DELTAUGV (MATRIX)
Description
{6Ug} -Incremental displacement vector inpiecewise linear analysis -gset.
Matrix Trailer
Number ofcolumns =l
Number ofrows =g
Form =rectangular
Type =realsinqle precision
2.3-85&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.27.9
Description
{6Pg}
Matrix TrailerDELTAPG (MATRIX)
Incremental loadvector inpiecewise linear analysis -gset.
Number ofcolumns =1
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.10 DELTAQG (MATRIX)
Description
{6qg} -Incremental vector ofsinqle-point forces ofconstraint inpiecewise linear
analysis -gset.
Matrix Trailer
Number ofcolumns =1
Number ofrows :g
Form =rectangular
Type =realsingle precision
2.3.27.11 CPHIP (MATRIX)
Description
[@p] -Complex eigenvectors inpset.
Matrix Trailer
&lt;em&gt;lumber ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2.3.27.12 QPC(MATRIX)
Description
[q&lt;/em&gt;] -Complex single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2,3186&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.27.13
Description
Matrix TrailerUPVC (MATRIX)
Frequency response solution vectors -pset.
Number ofcolumns
Number ofrows
Form
Type=theproduct ofthenumber offrequencies andnumber ofloads
=p
=rectangular
=complex single precision
2.3.27.14 UPV(MATRIX)
Description
[Up]Transient solution vectors -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times multiplied by3&amp;quot;
Number ofrows =p
Form =&lt;em&gt;^&lt;/em&gt;&amp;hellip;&amp;hellip;I_.
Type =realsingle precision
*Eachtriple isdisplacement, velocity andacceleration.
2.3.27.15 QP(_TRIX)
Description
[qp]-Transient single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times
Number ofrows =p
Form =rectangular
Type =real single _recision
2.3-87 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28 DataBlocks Output FromModule SDR2.
2.3.28.1 &lt;em&gt;UGVI(TABLE)
Description
Output displacement vector requests (gset,SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
1
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
LabeT
lO&lt;/em&gt;point ID+device code
Point type
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
Notes
I.Records 1and2arerepeated foreachvector tobeoutput
2.Device code=li=
3.Format code:I&lt;/em&gt;:
4.Approach code
5.Pointtype =xyoutput only
print
punch
printandpunch
real
real/imaginary
magnitude/phase
I,3,7,orI0
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.repeat
foreach
point
2.3-88&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.2 _UBGVI (TABLE)
Description
Output displacement vector requests (gset,S_RTI, real)
Table Format
Recor____d Wor___dd Type
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RItem -
Device code+lO&lt;em&gt;aoproach code
l
0
Subcase number
LoadsetID
0
0
0
Format code
Nu_er ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
5.Point type =
Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-89&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.3 &lt;em&gt;UPVI(TABLE)
Description
Output displacement vector requests (pset,S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO*approach code
I&lt;/em&gt;:Displacement1Velocity
illAcceleration
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO*point ID+device code _repeat
Pointtype }foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-90&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.4 _UPVCI (TABLE).
Description
Output displacement vector requests (pset,S_RTI, complex).
Table Format
Record Word Type
0 Header recordItem
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 R
9-14 RDevice code+lO&lt;em&gt;aDproach code
lO01:Displacement
lOlO Velocity
lOll Acceleration
0
Subcase nu_er
Frequency
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type tfor
R(TI), R(T2), R(T3), R(RI) R(R2), R(R3)&lt;em&gt;each
I(TI), I(T2), I(T3), I(RI)&lt;/em&gt; I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!:real==real/imaginary
=magnitude/phase
4.Approach code =5
5.Point type =Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-91&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.5 OPGI(TABLE).
Description
Output loadvector requests (gset,SORT1, real)
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
2
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwordsperentryinnextrecord :8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )ReFeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutDut.
2.Device code
li=xyoutput only= =print
=punch
=printandpunch
3.Format codeI!:real= =real/imaginary
=magnitude/phase
4.Approach code =I,3,7,orI0
5.Pointtype
li=gridpoint= scalar point
extrapoint
modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-92&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.6 _PPI (TABLE).
Description
Output loadvector requests (pset, S{_RTI, real).
Table Format
Record Word Type Item
Header record
l I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
! I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =6
5.Point typeIi=gridpoint= =scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-93&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P10</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_010/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.19.5 MLR(MATRIX)
Description
[M_r]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.19.6 MRR(MATRIX)
Description
[Mrr] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypePartition ofmassmatrix.
=r
=rectangular
=realdouble precision
Partition ofmassmatrix -rset.
=r
=r
=symmetric
=realdouble precision
2.3-74&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.20 Data Blocks Output From Module RBMG2
2.3.20.I LLL(MATRIX)
Description
[Lz_] -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.20.2 ULL(.MATRIX)
Description
[u_]-
Matrix Trailer
NoteLower triangular factor ofKLL-_set.&lt;/h1&gt;&lt;p&gt;=lower triangular
=real double precision
Upper triangular factor ofKLL-_set.
Number ofcolumns =
Number ofrows :
Form :upper triangular
Type =real double precision
This matrix isnotastandard upper triangular factor.
subroutine FBS.
2.3.20.3
Description
Matrix TrailerLBLL (MATRIX)
Lower triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =lower triangular
Type =real double precisionItsformat isacceptable only to
2.3-75&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.20.4 UBLL(MATRIX)
Description
[u_]-
Matrix Trailer
NoteUpper triangular factor ofKBLL -_set.
Number ofcolumns =
Number ofrows =
Form =uppertriangular
Type =realdouble precision
Thismatrix isnotastandard uppertriangular factor.
subroutine FBS.Itsformat isacceptable onlyto
2.3-76&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.21 Data Blocks Output From Nodule REMG3
2.3.21.I DM(MATRIX)
Description
[D] -Rigid body transformation matrix.
Natrix Trailer
_umber ofcolumns =
Number ofrows =r
Form =rectangular
Type =real double precision
2.3-77&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.22 DataBlocks Output FromModule RBMG4
2.3.22.1 MR(MATRIX)
Description
[mr] -Rigid body mass matrix -rset.
Matrix Trailer
Number ofcolumns :r
Number ofrows :r
Form :symmetric
Type =real double precision
2.3-78&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.23 DataBlocks Output FromModule SSGI.
2.3.23.1 PG(MATRIX)
Description
[Pg] -Static loadvector matrix giving static loads -gset.
Matrix Trailer
Number ofcolumns =number ofsubcases
Number ofrows =g
Form =rectangular
Type =realsingle precision
2,3,23.2 PGI(MATRIX)
Description
i
[Pg] -Static loadvector giving static loads forPiecewise Linear Analysis problem -
gset.
MAtrix Trailer
Number ofcolumns =1
Number ofrows =g
Form =rectangular
Type =realsingleprecision
2.3-79&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.24 DataBlocks Output Fromr_odule SSG2
2.3,24.1
Description
[qr]-
Matrix TrailerQR(MATRIX)
Determinate support forces matrix -rset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.2 P0(F_TRIX)
Description
[Po]
Matrix Trailer=number ofsubcases
:r
:rectangular
=realsingle precision
Partition oftheloadvector matrix giving loadsduetostatic force-oset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.3 PS(MATRIX)
Description
[Ps]
Matrix Trailer:number ofsubcases
:o
=rectangular
:realsingle precision
Partition ofloadvector matrix giving loads insset.
Number ofcolumns
Number ofrows
Form
Type
2.3.24.4 PL(MATRIX)
Description
[P_] -
Matrix Trailer=number ofsubcases
:s
=rectangular
=real single precision
Partition oftheloadvector matrix giving static loadson_set.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
:
:rectangular
=realsingle precision
2.3-80&lt;/p&gt;
&lt;h1&gt;DATA BLOCK DESCRIPTIONS
2.3.25 Data Blocks Output From Module SSG3
2.3.25.1 ULV(MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements _set.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=real double precision
2.3.25.2 U_V (MATRIX)
Description
[u_] Partition ofthedisplacement vector matrix giving displacements intheoset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases
:o
=rectangular
=real double precision
2.3.25.3 RULV (MATRIX)
Description
[6P_] Residual vector matrix forthe_set.
Matrix Trail er
Number ofcolumns =number ofsubcases
Number ofrows =
Form =rectangular
Type =real single precision
2.3.25.4 RU_V (MATRIX)
Description
{6Po} -Residual vector matrix fortheoset.
Matrix Trailer
Number ofcolumns =number ofsubcases
i_umber ofrows =o
Form =rectangular
Type =real single precision
2.3-81&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.25.5 UBLV(MATRIX)
Description
[u_] -Partition ofthedifferential stiffness displacement vector -&lt;em&gt;set.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form :rectanaular
Type :realdouble precision
2.3.25.6 RUBLV(MATRIX)
Description
[6P&lt;/em&gt;] Differential stiffness residual vector -Lset.
Matrix Trailer
Number ofcolumns :1
Number ofrows :
Form =rectangular
Type :realsingle precision
2.3-82&lt;/p&gt;
&lt;h1&gt;DATABLOCK DESCRIPTIONS
2.3.26
2.3.26.1
Descri ption
[P_]
Matrix TrailerDataBlocks Output FromModule SSGA.
PLI(MATRIX)
Partition ofloadvector forinertia relief matrix giving loads duetostatic +
inertial forces on_set.
Number ofcolumns
Number ofrows
Form
Type
2.3.26.2 P_I(MATRIX)
Description
[Pio]
Matrix Trailer=number ofsubcases&lt;/h1&gt;&lt;p&gt;=rectangular
=realsingle precision
Partition ofloadvector forinertia relief matrix giving loads duetoinertial
force +static forces onoset.
Number ofcolumns
Number ofrows
Form
Type:number ofsubcases
=o
=rectangular
=realsingle precision
2.3-83&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.27 DataBlocks Output FromModule SDRI
2.3.27,1 UGV(MATRIX)
Description
[Ug]-
Matrix TrailerDisplacement vector matrix giving displacements inthegset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.2
Description
[Pg] -
Matrix TrailerPGG(MATRIX)
Static loadvector appended toinclude allboundary conditions -gset.
Number ofcolumns
Number ofrows
Form
Type=number ofsubcases inCASECC
=g
=rectangular
=realsingle precision
2.3.27.3
Description
[qg] -
Matrix TrailerQG(MATRIX)
Single-point constraint forces anddeterminate support forces matrix -qset.
Number ofcolumns =number ofsubcases inCASECC
Number ofrows =g
Form :rectanqular
Type =realsingle precision
2.3.27.4 PHIG(MATRIX)
Description
[@g] -Eigenvector matrix giving eigenvectors (displacements) inthegset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3-84&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.27.5 UBGV (MATRIX)
Description
h
[u_] -Displacement vector matrix fordifferential stiffness giving displacementssinthegset.
Matrix Trailer
Number ofcolumns =number offactors onaDSFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.6
Description
[qbg] _
Matrix TrailerQBG(MATRIX)
Single-point forces ofconstraint matrix fordifferential stiffness -gset.
Number ofcolumns =number offactors onaDSFACT bulkdatacardi|..L_.
mu_r OFrows =g
Form :rectangular
Type :realsingle precision
2.3.27.7 BQG(MATRIX)
Description
[q_] Single-point forces ofconstraint matrix forabucklinq analysis problem -gset.
Matrix Trailer
Number ofcolumns =number ofbuckling modes found inREAD
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.27.B DELTAUGV (MATRIX)
Description
{6Ug} -Incremental displacement vector inpiecewise linear analysis -gset.
Matrix Trailer
Number ofcolumns =l
Number ofrows =g
Form =rectangular
Type =realsinqle precision
2.3-85&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.27.9
Description
{6Pg}
Matrix TrailerDELTAPG (MATRIX)
Incremental loadvector inpiecewise linear analysis -gset.
Number ofcolumns =1
Number ofrows =g
Form :rectangular
Type =realsingle precision
2.3.27.10 DELTAQG (MATRIX)
Description
{6qg} -Incremental vector ofsinqle-point forces ofconstraint inpiecewise linear
analysis -gset.
Matrix Trailer
Number ofcolumns =1
Number ofrows :g
Form =rectangular
Type =realsingle precision
2.3.27.11 CPHIP (MATRIX)
Description
[@p] -Complex eigenvectors inpset.
Matrix Trailer
&lt;em&gt;lumber ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2.3.27.12 QPC(MATRIX)
Description
[q&lt;/em&gt;] -Complex single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =p
Form =rectangular
Type =complex single precision
2,3186&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.27.13
Description
Matrix TrailerUPVC (MATRIX)
Frequency response solution vectors -pset.
Number ofcolumns
Number ofrows
Form
Type=theproduct ofthenumber offrequencies andnumber ofloads
=p
=rectangular
=complex single precision
2.3.27.14 UPV(MATRIX)
Description
[Up]Transient solution vectors -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times multiplied by3&amp;quot;
Number ofrows =p
Form =&lt;em&gt;^&lt;/em&gt;&amp;hellip;&amp;hellip;I_.
Type =realsingle precision
*Eachtriple isdisplacement, velocity andacceleration.
2.3.27.15 QP(_TRIX)
Description
[qp]-Transient single-point forces ofconstraint -pset.
Matrix Trailer
Number ofcolumns =thenumber ofoutput times
Number ofrows =p
Form =rectangular
Type =real single _recision
2.3-87 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28 DataBlocks Output FromModule SDR2.
2.3.28.1 &lt;em&gt;UGVI(TABLE)
Description
Output displacement vector requests (gset,SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
1
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
LabeT
lO&lt;/em&gt;point ID+device code
Point type
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
Notes
I.Records 1and2arerepeated foreachvector tobeoutput
2.Device code=li=
3.Format code:I&lt;/em&gt;:
4.Approach code
5.Pointtype =xyoutput only
print
punch
printandpunch
real
real/imaginary
magnitude/phase
I,3,7,orI0
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.repeat
foreach
point
2.3-88&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.2 _UBGVI (TABLE)
Description
Output displacement vector requests (gset,S_RTI, real)
Table Format
Recor____d Wor___dd Type
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RItem -
Device code+lO&lt;em&gt;aoproach code
l
0
Subcase number
LoadsetID
0
0
0
Format code
Nu_er ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
5.Point type =
Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-89&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.3 &lt;em&gt;UPVI(TABLE)
Description
Output displacement vector requests (pset,S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO*approach code
I&lt;/em&gt;:Displacement1Velocity
illAcceleration
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO*point ID+device code _repeat
Pointtype }foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-90&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.4 _UPVCI (TABLE).
Description
Output displacement vector requests (pset,S_RTI, complex).
Table Format
Record Word Type
0 Header recordItem
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 R
9-14 RDevice code+lO&lt;em&gt;aDproach code
lO01:Displacement
lOlO Velocity
lOll Acceleration
0
Subcase nu_er
Frequency
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type tfor
R(TI), R(T2), R(T3), R(RI) R(R2), R(R3)&lt;em&gt;each
I(TI), I(T2), I(T3), I(RI)&lt;/em&gt; I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
I!:real==real/imaginary
=magnitude/phase
4.Approach code =5
5.Point type =Ii=gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-91&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.5 OPGI(TABLE).
Description
Output loadvector requests (gset,SORT1, real)
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code+lO&lt;em&gt;approach code
2
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwordsperentryinnextrecord :8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )ReFeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutDut.
2.Device code
li=xyoutput only= =print
=punch
=printandpunch
3.Format codeI!:real= =real/imaginary
=magnitude/phase
4.Approach code =I,3,7,orI0
5.Pointtype
li=gridpoint= scalar point
extrapoint
modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-92&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.6 _PPI (TABLE).
Description
Output loadvector requests (pset, S{_RTI, real).
Table Format
Record Word Type Item
Header record
l I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2
0
Subcase number
Time
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
! I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= =print
=punch
=print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =6
5.Point typeIi=gridpoint= =scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-93&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P100</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_100/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Wheneachofthesegments ofthelinkiscomplete, thestatus ofthelogical variable ofXREF
(see7.2.6) istested. If.TRUE., LKED077 iscalled toformat andprint alisting ofcross
references.
LKED077 begins byallocating theXREFtable (seesection 7.2.2.1.I0) totheworking space
formally occupied bytheRDT,SCT,SDT,RT,GT,andobject deckandtextbuilding storage areas
asthese latter tables andareas arenolonger needed.
Theprincipal input tothecross reference processing istheinformation onSYSUT3 written
byLKED075. Figure 30shows theformat ofSYSUT3. Twotypes ofchains aremaintained. Thefirst
isalistchain inwhich entry-point entries arechained inorder theyappear inthestorage map
(andtheorder inwhich references willbelisted) andthesecond isachain ofallthecalls to
eachentry point.
Names arelocated intheXREFtable inthesamewayastheGTthrough thehashtechnique
(seesection 7.2.2.1.I). (Aninspection oftheentry formats detailed insection 7.2.2.1.I0
indicates thattheinitial hashpointer andhashchain pointer fields areinthesameposition
astheGT.)
UptoIIcalls fromagiven subprogram toagiven entry point arestored inoneXREFentry
since that isthemaximum number ofcalls thatcanbelisted inoneprinter line.
Twolistoptions areprovided inconjunction with thecross reference processing. Both are
controlled byPARAM(7) (seesection 5.6.4.2). Thefirst istoproduce alisting ofallreferences
fromeach subprogram (essentially thecontents oftheLINKTable oftheobject deck). This is
provided because ofadeficiency intheoutput oftheRUNcompiler. Thesecond option istolist
allreferences toLink0entry points forlinks other thanLink O.
7.2.2.8 Final Processing
LKED080 performs final processing. Itiscalled when theENDLINKS card (seesection 5.6.4.12)
isencountered. Ifthestatus of_UTFILE isC,processing isalready complete andLKED080 returns.
Otherwise, theoutput file iswritten. Figure 26shows theformat oftheoutput file.
Thefirst stepistowrite thebootstrap program. This isdone inamanner similar tothat
described insection 7.2.2.7 except thattherequired object decks arecopied fromLINKLIB instead
7.2-73 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
59 17 0
subprogram name address
entry point name address
entry point name address
4m
nameofexternal reference 0
0Location of
referen ce
1 0Location of
reference
0
Location of
Ii 0reference
I
0
subprogram name address
entrypointname addressendofentry
points
endofexternal
_F&amp;mdash;_referenc e
Figure 30. Format ofSYSUT3.
7.2-74 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
ofSYSUT2 (thereason forthisdifference isthatinthelevel1.0version (theinitial version)
ofthelinkage editor thebootstrap deckswerenotnecessarily onSYSUT2). Thereafter, eachof
thelinksiscopied fromSYSUTI totheoutput file. Wheneachlinkiscopied, amessage iswritten
on_UTPUT signifying theevent. Whenalllinkshavebeencopied, a3-word record iswritten with
thecontents ofthefirstwordbeingENDLINKS. Thisisfollowed byanend-of-file.
7.2.2.9 TheBootstrap Program
Asdiscussed briefly insection 7.2.1.4.7, thebootstrap program itself loaded bythestandard
CDCloader. TheCDCloader loadsrelocatable records fromthebeginning ofinformation onafile
untilanullrecord orendoffileisencountered. AftertheCDCloader completes theloading of
thebootstrap program, corewillbeasdiagrammed here.
0
778
1008
FieldLength1008Words
JobData
IXBO_TBDI
labeled
common
XB_T
XI_RTNS
MAPFNS
SCQPEROUTINES
/ /
blank
commonspaceallocated tohold
&amp;ldquo;Supermain&amp;rdquo; =LINK0
Bootstrap routines
Opencore(blank common) used
forworkspace
7.2-75 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
ThebootstrapdriverXB_BTbeginsexecutionandimmediately fetchesthecontrolcardimage
directingthecurrentjobstep.Thiscardandsubsequent controlcardimagesarenormallystored
inlocations708through778ofthejobcontrolblock.
Thecontrolcardshouldbeinoneofthefollowingformats.
(I)Namel.
Inthisformat,NAME1.isthefilenameofthesequential linkageeditoroutput.
Executionofthecontrolcardcausesthebootstrapprogramtobeloaded,anditin
turnwillcopytheentireexecutable filetodiskfileSYSLM_Dindirectaccess
format.Link0willthenbeloadedandtransferofexecutionwillbemadeinto
LinkO.
(2)NameI.CREATE(Name2)
Inthisformat,NAME1isthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillcopyfileNameltoadirectaccess
fileName2anddeclareittobeacommonfile.Link0willthenbeloadedandtransfer
ofexecutionwillbemadeintoLinkO.
(3)NameI.CATL_G(Name2)
InthisformatNamelisthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillonlycopyfileNameltoalocal
directaccessfileName2.
(4)NameI.ATTACH
Inthiscase,Namelisthedirectaccessfilecontaining theexecutable programand
ifitisavailabletothejobcontrolpointeitherlocallyorthroughapermanent
fileattachoracommonfileattach,thebootstrapprogramwillbeloadedbythe
CDCloader.ThebootstrapprograminturnwillloadLink0intocoreandtransfer
ofexecutionwillbemadeintoLinkO.
ThebootstrapprogrambreaksdownthecontrolcardintotwofilenamesNAME1andNAME2
(NAME2maybeblank),and_PTI_Nwillbeeitherblank,CREATE,CATL_G,orATTACH.Havingthis
information, thebootstrapprogramwillthendecidewhetherornotthefileNAME1istobecata-
loguedfordirectaccessonfileNAME2.Ifitdoeshavetobecatalogued, thatprocessisper-
formedimmediately.
7.2-76(6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Onceitisdetermined thatthefileisindirect access format (anATTACH wasmadeoritwas
putindirect access format) forexecution oftheprogram, &amp;quot; &amp;quot; Supermain =LinkO,thealways-core-
resident program segment, isreaddirectly intocore. Atransfer ismadedirectly tolocation
lOl8where ajump totheactual entry point ofsupermain isstored. Thebootstrap program isthen
lostandisunrecoverable. However, itisnotneeded forthecontinuing execution oftheprogram.
Detailed logic ofthecataloguing process ofthefilefordirect access maybefound inthe
logic flowhcart forXB_T, Figure 39.Thebootstrap program iscontained entirely inone
F_RTRAN subroutine which iswell andheavily commented andshould alsobereferenced. Refer also
tosection 7.2.1.4.7.
7.2.2.10 TheSegment Loader
Detailed execution ofthesegment loader XLBADER iscovered bestinthedetailed comments
oftheactual codeandtheflowcharts ofXL_ADER&amp;rsquo;s twoentry points LINKandL_ADER.. (Figures
40and41).
Entry point LINKinthesegment loader utilizes information stored inlocations lOl8, I028,
andI038 (intheLINKO$ table) asfollows.
59 29 0
1018
I028
I038EQBO,BO,L_B ZER_-SEGTAB$ ADD.
LENGTH-MAST MAST-INDX ADD.
LENGTH-SUB SUB-INDX ADD.
59 35 17 0
L_Cistheentry pointofLinkO.
LINK stores thecontents ofword I028intheFETword 8when reading inasubindex fora
link. Thissubindex isreadintothelocation specified bythesubindex address inword I038.
Then LINK stores theaddress ofthesubindex intheFETword8.TheFETisalways stored beginning
inword I048 asallocated bythelinkage editor. Themaster index contains relative track addresses
which point tothebeginning ofparticular logical records onthediskaslisted here.
7.2-77 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
MASTER INDEX(1) =Notused
MASTER INDEX(2) =Subindex forLink0
MASTER INDEX(3) =Subindex forLink1
MASTER INDEX(4) =Subindex forLink2
Thesubindex contains relative trackaddresses which pointtoparticular logical records defining
aparticular link.
SUBINDEX(1) points todirectory of3words containing thelinknumber, thenumber of
segments inthelink,andlongest possible length ofthelinkwhenloaded.
SUBINDEX(2) points toSegment l
SUBINDEX(3) points toSegment 2
L_ADER. istheentrypointwhichiscalled inXL_ADER fromENTAB$ tables tohandle theauto-
matic loading ofsegments asrequired. Eachsegment loaded bythesegment loader results inone
calltothePP(peripheral processor) routine CI_which readsthesegment fromthediskdirectly
intothecoreinwhichthesegment istoreside. (Thisisoftenreferred toasablastreadof
arecord). L_ADER. calls READXforallsegment loads, thusavoiding theuseofthecircular
buffer.
L_ADER. isconcerned withtwotables incore. OneisSEGTAB$ (Figure 28)whichmaybelocated
byfinding itszero-address intheright30bitsofcorelocation 1018.SEGTAB$ contains oneword
foreachsegment possible inalinkandisterminated withafullwordofzerobits. SEGTAB$ is
builtintotherootsegment (segment I)ofeachlink. Link0doesnothaveaSEGTAB$. Each
wordoftheSEGTAB$ hasthefollowing format:
Bits0through II=Number oftheparent segment or0ifthereisnoparent
Bits12through 17=Thenumber oftheregion thesegment isin
Bits18through 35=Theaddress where thesegment loadsat
Bits36through 53=Thelength ofthesegment
Bits54through 57=Unused
Bit58 =lifasegment isabouttobeloaded bythesegment loader. (Ifthis
bitisonforanysegment, L_ADER. orREADXshould beinexecution)
7.2-78 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Bit59 =1ifthesegment iscurrently considered incore andnotoverlayed by
anyother segment whenexitfromtheloader hasbeenmade.
Theother table usedbyLOADER. isENTAB$, atable thatresides inanysegment which has&amp;quot;downward
calls&amp;quot; (calls toalower segment inatree oroutside agiven region). AnENTAB$ table ismade
upofentries which are3words ormore inlength. SeeFigure 29fortheformat ofanentry in
ENTAB$.
Often adownward callpassing toENTAB$ andthentoLOADER. will, ifLBADER. determines the
segment isincorepasscontrol directly totheaddress specified intheENTAB$ entry. Theloader
knows where theENTAB$ entry isbecause attheentry point toLOADER. isstored ajumpbacktothe
address +lofthelastword oftheENTAB$ entry. Thisjumpback isnever usedexcept todeter-
minewhere LOADER. wascalled from. LOADER. never returns. Itonlycalls forward. Theroutine
called byLOADER. always returns directly totheroutine that called LOADER. viatheENTAB$ entry.
Step-by-step logic isdetailed inthelogic flowcharts forLINKandLOADER. (Figures 40and
41),thetwosubroutines ofXLOADER. Segment loads areaccomplished bycalls toutility routine
READX. Thesystems programmer should alsoconsult theheavily commented COMPASS subroutine
XLOADER. This isarelatively small, self-contained routine. Refer alsotosection 7.2.1.4.8.
7.2.3 Flowcharts
Thefollowing pages giveflowcharts foreachofthemajor divisions ofthelinkage editor,
(Figures 31through 38),thebootstrap program (Figure 39)andthesegment loader (Figures 40and
41). Thegeneral flowofthelinkage editor isgiven inFigure 3andreference toitinconnection
with Figures 31through 38maybehelpful. Ifaflowchart symbol (e.g., aprocessing rectangle,
adecision diamond) isidentified byanumber (e.g., 910,921)above andtotheleftofthe
symbol, thenumber istheFORTRAN statement number where theprocessing ortestcanbefound.
Anumber followed bytheletter &amp;ldquo;a&amp;rdquo;(e.g., 330a) inthesame position ontheflowchart implies the
function canbefound intheneighborhood oftheFORTRAN statement numbered bythenumber&amp;ndash;330 in
theexample. Ifaprocessing symbol, arectangular box,oftheflowchart isidentified byasymbol
name above andneartheleft-hand edgeofthebox,theboxrepresents asubroutine callandthe
symbolic nameisthesubroutine name. Theabbreviation &amp;ldquo;nbr&amp;rdquo; stands fortheword &amp;ldquo;number&amp;rdquo;.
7.2-79 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDO00
,LReadPrint, Decode,
andConvert 1stCard
inINPUT
Name
=LINKEDIT
YES
921
Is
Continued
NO910
PrintFatal
ErrorMessage
Read,Print, Decode,
andConvert NextCard_fSTOP
Endof NO
rd?
YES
960
FileSpecs_O_
YES
Allocate Buffers
andIndices and
OpenSYSUTI
_EXITYES
toLKEDOI5PrintFatal
ErrorMessage
Figure 31(a).;_EXIT
toLKEDOI0 STOP
Flowchart forLKEDO00.
7.2-80 (6/I/71)&lt;/p&gt;
&lt;p&gt;P
lr
onDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
XREF
LET928
930.TRUE. Ã·XREF
.TRUE. -_LET
N_LIST932
.FALSE. Ã·LIST
NmMAP933
.FALSE. Ã·MAP
_UTFILEI&amp;rsquo;_921
935
934
Invalid
Keyword950A
91o
SaveValue I
ofPARAMSaveFileName
andStatus
Figure 31(b). Flowchart forLKEDO00.
7.2-81 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDOI0
,lOpenINFILE. Copy
Bootstrap Program
toSYSUTI
ReadDirectory
Record forLink
130
Close INFILE
I.. _,,,3 words
CopySegments
FromINFILE to
SYSUTI
LWrite Index
Record forLinkPrintFatal
ErrorMessage
Figure 32.Flowchart forLKEDOIO.
7.2-82 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LKEDOI 5
Read, Print, and
Convert LIBRARY Card
Check
FormatPrintFatal
ErrorMessBge
Test
_.._sition on
End
&amp;lt;_nuation
NO
210
OpenSYSUT2 inBuffer 2
/_llocate Storage for
Subprogram Nameand
EntryPointTables
Initialize Table
Pointers
OpenaLibrary
inBuffer 3
_230NotEnd
Read,Print, and
Convert NextCard IAdd NameofLibrary to_Library Table (ignore
ifAlready inTable)
Figure 33(a). Flowchart forLKEDOI5.
7.2-83 (6/]/7])&lt;/p&gt;
&lt;p&gt;NASTPJ_N SUPPORT PROGRAMS
Read aDeck From
theLibrary
350
CloseLibrary. Store
Pointer inLibrary
TabletoFirstDeck
inNextLibrary
I,
Move Subprogram Name ]
Table andEntry Point I
Table soThat They Use I
Only Actual Size Required I
IResetTable Pointers
toNewLocationsNO
Trytofind PIDL
TablePrintWarning Message
Ignore Deck
_230
NO
AddNameofSubprogram
toSubprogram Names
Table. Advance Pointer
toNextEntryPrintWarning Message
Ignore Deck
&lt;em&gt;230
YES
.&lt;/em&gt;,&lt;em&gt;J&amp;rsquo;&lt;/em&gt; EXIT
toLKED900
Print Fatal
Message (5)
WriteDeckonSYSUT2
Figure 33(b). Flowchart forLKEDOI5.
7.2-84 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
&lt;em&gt;230
I
Locate ENTRTable i
NO
?
ForEachEntry Point,
Store NameandPointer
inEntry Point Table
NO
30
(EXITtoLKED900
Print Fatal
Error Message (5)&lt;/em&gt;( ABORT
With XDUMP
Figure 33(c). Flowchart forLKEDOI5.
7.2-85 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Initialize For 1st Pass I I Echo Card in DAYFILE
-a End of Print Fatal Error
s/ I Message
Decode and Convert 1&#39;1
Figure 34(a). Flowchart for control statement processing.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
NO BAD
iPrintErrorMessageforREGI_N/_VRProblem
InvalidVerb
INCLUDE
REGIBN
_VERLAY
INSERT
RENAME
ENTRY
END
LINKorENDLINKS  12oo
_1300
_1400 1,3,6
_8A_1500
_1600 2
_1990
4,51910
;IPrintErrorMessage
ForBadFormat
1920
PrintErrorMessage
Forlllegal Verb
1930
I
61PrintErrorMessage
1940 vIForMissing Name
irintErrorMessageForMisplaced Card
010
Figure 34(b). Flowchart forcontrol statement processing.
7.2-87 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
II00
=2
1900
LookUpName
inLibrary Table
PrintErrorMessage
SetN_G_:23Ã·KERR
I010
Figure34(c). Flowchart forcontrol statement processing.
7.2-88 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LLookUpName
inLibrary Table
&amp;ldquo;&lt;em&gt;1121ToLKED990
Logic Error Abort
LookUpSubprogram
NameinGT
NotinTable
able
&lt;em&gt;n_r&lt;/em&gt;&amp;gt;&lt;/em&gt;&amp;ndash; l.e,s_e
I.reate Entry With
LASS=4or5.Store
_ointer toLibrary in
Field
YES
r
_lOll
Figure 34(d). Flowchart forcontrol statement processing.
7.2-89 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGPJ_MS
1200
?Increment Regionnbr
StoreSegment nbrs inRDT
1960
_PrintErrorMessage
_&amp;hellip;Li_k __ [_kl_legal CardFor
8oo1
SaveCardinWorking
Storage
I
NO
I0
_Exi__JTOLKED900
PrintFatalError
Message (0)
Figure34(e). Flowchart forcontrol statement processing
7.2-90 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Figure 34(f). Flowchart for control statement processing.
7.2-91 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
1400
=1
=2
LK 21
LKEDI50
DelinkEntryFromOld
SegmentandLinkto
CurrentSegmentLookUpINSERTNameinGT
1421A.&lt;em&gt;,,
InTable&lt;/em&gt;._-,,Link0
INotin
Table5Ã·KERR
_]900
PrintErrorMessage
Create EntryWith
CLASS=7(undef.)
NO
1421
Figure 34(g). Flowchart forcontrol statement processing.
7.2-92 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P100</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_100/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Wheneachofthesegments ofthelinkiscomplete, thestatus ofthelogical variable ofXREF
(see7.2.6) istested. If.TRUE., LKED077 iscalled toformat andprint alisting ofcross
references.
LKED077 begins byallocating theXREFtable (seesection 7.2.2.1.I0) totheworking space
formally occupied bytheRDT,SCT,SDT,RT,GT,andobject deckandtextbuilding storage areas
asthese latter tables andareas arenolonger needed.
Theprincipal input tothecross reference processing istheinformation onSYSUT3 written
byLKED075. Figure 30shows theformat ofSYSUT3. Twotypes ofchains aremaintained. Thefirst
isalistchain inwhich entry-point entries arechained inorder theyappear inthestorage map
(andtheorder inwhich references willbelisted) andthesecond isachain ofallthecalls to
eachentry point.
Names arelocated intheXREFtable inthesamewayastheGTthrough thehashtechnique
(seesection 7.2.2.1.I). (Aninspection oftheentry formats detailed insection 7.2.2.1.I0
indicates thattheinitial hashpointer andhashchain pointer fields areinthesameposition
astheGT.)
UptoIIcalls fromagiven subprogram toagiven entry point arestored inoneXREFentry
since that isthemaximum number ofcalls thatcanbelisted inoneprinter line.
Twolistoptions areprovided inconjunction with thecross reference processing. Both are
controlled byPARAM(7) (seesection 5.6.4.2). Thefirst istoproduce alisting ofallreferences
fromeach subprogram (essentially thecontents oftheLINKTable oftheobject deck). This is
provided because ofadeficiency intheoutput oftheRUNcompiler. Thesecond option istolist
allreferences toLink0entry points forlinks other thanLink O.
7.2.2.8 Final Processing
LKED080 performs final processing. Itiscalled when theENDLINKS card (seesection 5.6.4.12)
isencountered. Ifthestatus of_UTFILE isC,processing isalready complete andLKED080 returns.
Otherwise, theoutput file iswritten. Figure 26shows theformat oftheoutput file.
Thefirst stepistowrite thebootstrap program. This isdone inamanner similar tothat
described insection 7.2.2.7 except thattherequired object decks arecopied fromLINKLIB instead
7.2-73 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
59 17 0
subprogram name address
entry point name address
entry point name address
4m
nameofexternal reference 0
0Location of
referen ce
1 0Location of
reference
0
Location of
Ii 0reference
I
0
subprogram name address
entrypointname addressendofentry
points
endofexternal
_F&amp;mdash;_referenc e
Figure 30. Format ofSYSUT3.
7.2-74 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
ofSYSUT2 (thereason forthisdifference isthatinthelevel1.0version (theinitial version)
ofthelinkage editor thebootstrap deckswerenotnecessarily onSYSUT2). Thereafter, eachof
thelinksiscopied fromSYSUTI totheoutput file. Wheneachlinkiscopied, amessage iswritten
on_UTPUT signifying theevent. Whenalllinkshavebeencopied, a3-word record iswritten with
thecontents ofthefirstwordbeingENDLINKS. Thisisfollowed byanend-of-file.
7.2.2.9 TheBootstrap Program
Asdiscussed briefly insection 7.2.1.4.7, thebootstrap program itself loaded bythestandard
CDCloader. TheCDCloader loadsrelocatable records fromthebeginning ofinformation onafile
untilanullrecord orendoffileisencountered. AftertheCDCloader completes theloading of
thebootstrap program, corewillbeasdiagrammed here.
0
778
1008
FieldLength1008Words
JobData
IXBO_TBDI
labeled
common
XB_T
XI_RTNS
MAPFNS
SCQPEROUTINES
/ /
blank
commonspaceallocated tohold
&amp;ldquo;Supermain&amp;rdquo; =LINK0
Bootstrap routines
Opencore(blank common) used
forworkspace
7.2-75 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
ThebootstrapdriverXB_BTbeginsexecutionandimmediately fetchesthecontrolcardimage
directingthecurrentjobstep.Thiscardandsubsequent controlcardimagesarenormallystored
inlocations708through778ofthejobcontrolblock.
Thecontrolcardshouldbeinoneofthefollowingformats.
(I)Namel.
Inthisformat,NAME1.isthefilenameofthesequential linkageeditoroutput.
Executionofthecontrolcardcausesthebootstrapprogramtobeloaded,anditin
turnwillcopytheentireexecutable filetodiskfileSYSLM_Dindirectaccess
format.Link0willthenbeloadedandtransferofexecutionwillbemadeinto
LinkO.
(2)NameI.CREATE(Name2)
Inthisformat,NAME1isthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillcopyfileNameltoadirectaccess
fileName2anddeclareittobeacommonfile.Link0willthenbeloadedandtransfer
ofexecutionwillbemadeintoLinkO.
(3)NameI.CATL_G(Name2)
InthisformatNamelisthefilenameofthesequential linkageeditoroutput.
Howeverinthiscase,thebootstrapprogramwillonlycopyfileNameltoalocal
directaccessfileName2.
(4)NameI.ATTACH
Inthiscase,Namelisthedirectaccessfilecontaining theexecutable programand
ifitisavailabletothejobcontrolpointeitherlocallyorthroughapermanent
fileattachoracommonfileattach,thebootstrapprogramwillbeloadedbythe
CDCloader.ThebootstrapprograminturnwillloadLink0intocoreandtransfer
ofexecutionwillbemadeintoLinkO.
ThebootstrapprogrambreaksdownthecontrolcardintotwofilenamesNAME1andNAME2
(NAME2maybeblank),and_PTI_Nwillbeeitherblank,CREATE,CATL_G,orATTACH.Havingthis
information, thebootstrapprogramwillthendecidewhetherornotthefileNAME1istobecata-
loguedfordirectaccessonfileNAME2.Ifitdoeshavetobecatalogued, thatprocessisper-
formedimmediately.
7.2-76(6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Onceitisdetermined thatthefileisindirect access format (anATTACH wasmadeoritwas
putindirect access format) forexecution oftheprogram, &amp;quot; &amp;quot; Supermain =LinkO,thealways-core-
resident program segment, isreaddirectly intocore. Atransfer ismadedirectly tolocation
lOl8where ajump totheactual entry point ofsupermain isstored. Thebootstrap program isthen
lostandisunrecoverable. However, itisnotneeded forthecontinuing execution oftheprogram.
Detailed logic ofthecataloguing process ofthefilefordirect access maybefound inthe
logic flowhcart forXB_T, Figure 39.Thebootstrap program iscontained entirely inone
F_RTRAN subroutine which iswell andheavily commented andshould alsobereferenced. Refer also
tosection 7.2.1.4.7.
7.2.2.10 TheSegment Loader
Detailed execution ofthesegment loader XLBADER iscovered bestinthedetailed comments
oftheactual codeandtheflowcharts ofXL_ADER&amp;rsquo;s twoentry points LINKandL_ADER.. (Figures
40and41).
Entry point LINKinthesegment loader utilizes information stored inlocations lOl8, I028,
andI038 (intheLINKO$ table) asfollows.
59 29 0
1018
I028
I038EQBO,BO,L_B ZER_-SEGTAB$ ADD.
LENGTH-MAST MAST-INDX ADD.
LENGTH-SUB SUB-INDX ADD.
59 35 17 0
L_Cistheentry pointofLinkO.
LINK stores thecontents ofword I028intheFETword 8when reading inasubindex fora
link. Thissubindex isreadintothelocation specified bythesubindex address inword I038.
Then LINK stores theaddress ofthesubindex intheFETword8.TheFETisalways stored beginning
inword I048 asallocated bythelinkage editor. Themaster index contains relative track addresses
which point tothebeginning ofparticular logical records onthediskaslisted here.
7.2-77 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
MASTER INDEX(1) =Notused
MASTER INDEX(2) =Subindex forLink0
MASTER INDEX(3) =Subindex forLink1
MASTER INDEX(4) =Subindex forLink2
Thesubindex contains relative trackaddresses which pointtoparticular logical records defining
aparticular link.
SUBINDEX(1) points todirectory of3words containing thelinknumber, thenumber of
segments inthelink,andlongest possible length ofthelinkwhenloaded.
SUBINDEX(2) points toSegment l
SUBINDEX(3) points toSegment 2
L_ADER. istheentrypointwhichiscalled inXL_ADER fromENTAB$ tables tohandle theauto-
matic loading ofsegments asrequired. Eachsegment loaded bythesegment loader results inone
calltothePP(peripheral processor) routine CI_which readsthesegment fromthediskdirectly
intothecoreinwhichthesegment istoreside. (Thisisoftenreferred toasablastreadof
arecord). L_ADER. calls READXforallsegment loads, thusavoiding theuseofthecircular
buffer.
L_ADER. isconcerned withtwotables incore. OneisSEGTAB$ (Figure 28)whichmaybelocated
byfinding itszero-address intheright30bitsofcorelocation 1018.SEGTAB$ contains oneword
foreachsegment possible inalinkandisterminated withafullwordofzerobits. SEGTAB$ is
builtintotherootsegment (segment I)ofeachlink. Link0doesnothaveaSEGTAB$. Each
wordoftheSEGTAB$ hasthefollowing format:
Bits0through II=Number oftheparent segment or0ifthereisnoparent
Bits12through 17=Thenumber oftheregion thesegment isin
Bits18through 35=Theaddress where thesegment loadsat
Bits36through 53=Thelength ofthesegment
Bits54through 57=Unused
Bit58 =lifasegment isabouttobeloaded bythesegment loader. (Ifthis
bitisonforanysegment, L_ADER. orREADXshould beinexecution)
7.2-78 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Bit59 =1ifthesegment iscurrently considered incore andnotoverlayed by
anyother segment whenexitfromtheloader hasbeenmade.
Theother table usedbyLOADER. isENTAB$, atable thatresides inanysegment which has&amp;quot;downward
calls&amp;quot; (calls toalower segment inatree oroutside agiven region). AnENTAB$ table ismade
upofentries which are3words ormore inlength. SeeFigure 29fortheformat ofanentry in
ENTAB$.
Often adownward callpassing toENTAB$ andthentoLOADER. will, ifLBADER. determines the
segment isincorepasscontrol directly totheaddress specified intheENTAB$ entry. Theloader
knows where theENTAB$ entry isbecause attheentry point toLOADER. isstored ajumpbacktothe
address +lofthelastword oftheENTAB$ entry. Thisjumpback isnever usedexcept todeter-
minewhere LOADER. wascalled from. LOADER. never returns. Itonlycalls forward. Theroutine
called byLOADER. always returns directly totheroutine that called LOADER. viatheENTAB$ entry.
Step-by-step logic isdetailed inthelogic flowcharts forLINKandLOADER. (Figures 40and
41),thetwosubroutines ofXLOADER. Segment loads areaccomplished bycalls toutility routine
READX. Thesystems programmer should alsoconsult theheavily commented COMPASS subroutine
XLOADER. This isarelatively small, self-contained routine. Refer alsotosection 7.2.1.4.8.
7.2.3 Flowcharts
Thefollowing pages giveflowcharts foreachofthemajor divisions ofthelinkage editor,
(Figures 31through 38),thebootstrap program (Figure 39)andthesegment loader (Figures 40and
41). Thegeneral flowofthelinkage editor isgiven inFigure 3andreference toitinconnection
with Figures 31through 38maybehelpful. Ifaflowchart symbol (e.g., aprocessing rectangle,
adecision diamond) isidentified byanumber (e.g., 910,921)above andtotheleftofthe
symbol, thenumber istheFORTRAN statement number where theprocessing ortestcanbefound.
Anumber followed bytheletter &amp;ldquo;a&amp;rdquo;(e.g., 330a) inthesame position ontheflowchart implies the
function canbefound intheneighborhood oftheFORTRAN statement numbered bythenumber&amp;ndash;330 in
theexample. Ifaprocessing symbol, arectangular box,oftheflowchart isidentified byasymbol
name above andneartheleft-hand edgeofthebox,theboxrepresents asubroutine callandthe
symbolic nameisthesubroutine name. Theabbreviation &amp;ldquo;nbr&amp;rdquo; stands fortheword &amp;ldquo;number&amp;rdquo;.
7.2-79 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDO00
,LReadPrint, Decode,
andConvert 1stCard
inINPUT
Name
=LINKEDIT
YES
921
Is
Continued
NO910
PrintFatal
ErrorMessage
Read,Print, Decode,
andConvert NextCard_fSTOP
Endof NO
rd?
YES
960
FileSpecs_O_
YES
Allocate Buffers
andIndices and
OpenSYSUTI
_EXITYES
toLKEDOI5PrintFatal
ErrorMessage
Figure 31(a).;_EXIT
toLKEDOI0 STOP
Flowchart forLKEDO00.
7.2-80 (6/I/71)&lt;/p&gt;
&lt;p&gt;P
lr
onDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
XREF
LET928
930.TRUE. Ã·XREF
.TRUE. -_LET
N_LIST932
.FALSE. Ã·LIST
NmMAP933
.FALSE. Ã·MAP
_UTFILEI&amp;rsquo;_921
935
934
Invalid
Keyword950A
91o
SaveValue I
ofPARAMSaveFileName
andStatus
Figure 31(b). Flowchart forLKEDO00.
7.2-81 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDOI0
,lOpenINFILE. Copy
Bootstrap Program
toSYSUTI
ReadDirectory
Record forLink
130
Close INFILE
I.. _,,,3 words
CopySegments
FromINFILE to
SYSUTI
LWrite Index
Record forLinkPrintFatal
ErrorMessage
Figure 32.Flowchart forLKEDOIO.
7.2-82 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LKEDOI 5
Read, Print, and
Convert LIBRARY Card
Check
FormatPrintFatal
ErrorMessBge
Test
_.._sition on
End
&amp;lt;_nuation
NO
210
OpenSYSUT2 inBuffer 2
/_llocate Storage for
Subprogram Nameand
EntryPointTables
Initialize Table
Pointers
OpenaLibrary
inBuffer 3
_230NotEnd
Read,Print, and
Convert NextCard IAdd NameofLibrary to_Library Table (ignore
ifAlready inTable)
Figure 33(a). Flowchart forLKEDOI5.
7.2-83 (6/]/7])&lt;/p&gt;
&lt;p&gt;NASTPJ_N SUPPORT PROGRAMS
Read aDeck From
theLibrary
350
CloseLibrary. Store
Pointer inLibrary
TabletoFirstDeck
inNextLibrary
I,
Move Subprogram Name ]
Table andEntry Point I
Table soThat They Use I
Only Actual Size Required I
IResetTable Pointers
toNewLocationsNO
Trytofind PIDL
TablePrintWarning Message
Ignore Deck
_230
NO
AddNameofSubprogram
toSubprogram Names
Table. Advance Pointer
toNextEntryPrintWarning Message
Ignore Deck
&lt;em&gt;230
YES
.&lt;/em&gt;,&lt;em&gt;J&amp;rsquo;&lt;/em&gt; EXIT
toLKED900
Print Fatal
Message (5)
WriteDeckonSYSUT2
Figure 33(b). Flowchart forLKEDOI5.
7.2-84 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
&lt;em&gt;230
I
Locate ENTRTable i
NO
?
ForEachEntry Point,
Store NameandPointer
inEntry Point Table
NO
30
(EXITtoLKED900
Print Fatal
Error Message (5)&lt;/em&gt;( ABORT
With XDUMP
Figure 33(c). Flowchart forLKEDOI5.
7.2-85 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Initialize For 1st Pass I I Echo Card in DAYFILE
-a End of Print Fatal Error
s/ I Message
Decode and Convert 1&#39;1
Figure 34(a). Flowchart for control statement processing.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
NO BAD
iPrintErrorMessageforREGI_N/_VRProblem
InvalidVerb
INCLUDE
REGIBN
_VERLAY
INSERT
RENAME
ENTRY
END
LINKorENDLINKS  12oo
_1300
_1400 1,3,6
_8A_1500
_1600 2
_1990
4,51910
;IPrintErrorMessage
ForBadFormat
1920
PrintErrorMessage
Forlllegal Verb
1930
I
61PrintErrorMessage
1940 vIForMissing Name
irintErrorMessageForMisplaced Card
010
Figure 34(b). Flowchart forcontrol statement processing.
7.2-87 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
II00
=2
1900
LookUpName
inLibrary Table
PrintErrorMessage
SetN_G_:23Ã·KERR
I010
Figure34(c). Flowchart forcontrol statement processing.
7.2-88 (6/I/71)&lt;/p&gt;
&lt;p&gt;DDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LLookUpName
inLibrary Table
&amp;ldquo;&lt;em&gt;1121ToLKED990
Logic Error Abort
LookUpSubprogram
NameinGT
NotinTable
able
&lt;em&gt;n_r&lt;/em&gt;&amp;gt;&lt;/em&gt;&amp;ndash; l.e,s_e
I.reate Entry With
LASS=4or5.Store
_ointer toLibrary in
Field
YES
r
_lOll
Figure 34(d). Flowchart forcontrol statement processing.
7.2-89 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGPJ_MS
1200
?Increment Regionnbr
StoreSegment nbrs inRDT
1960
_PrintErrorMessage
_&amp;hellip;Li_k __ [_kl_legal CardFor
8oo1
SaveCardinWorking
Storage
I
NO
I0
_Exi__JTOLKED900
PrintFatalError
Message (0)
Figure34(e). Flowchart forcontrol statement processing
7.2-90 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Figure 34(f). Flowchart for control statement processing.
7.2-91 (6/1/71)&lt;/p&gt;
&lt;p&gt;NASTRANSUPPORTPROGRAMS
1400
=1
=2
LK 21
LKEDI50
DelinkEntryFromOld
SegmentandLinkto
CurrentSegmentLookUpINSERTNameinGT
1421A.&lt;em&gt;,,
InTable&lt;/em&gt;._-,,Link0
INotin
Table5Ã·KERR
_]900
PrintErrorMessage
Create EntryWith
CLASS=7(undef.)
NO
1421
Figure 34(g). Flowchart forcontrol statement processing.
7.2-92 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P101</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_101/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
15O0
=l =2
Increment Count
ofRENAME CardsGetHashnbrForOld
Name; HashIntoRT;
FindEndofHash Chain
6Ã·KERR
1900H Create NewEntry inRT.Chain Entry to
Previous Entry
IOll
_1800
Figure 34(h). Flowchart forcontrol statement processing.
7.2-93 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
1600
=I =2
&lt;em&gt;Â°&lt;/em&gt;
StoreENTRYName
I010&amp;lt;EXIT
ToLKED990
LogicErrorAbort
4Ã·KERR
1900
Figure 34(i). Flowchart forcontrol statement processing.
7.2-94 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
1990
?SetEndofTable for )
Cards ForPass2.
) Complete Allocation of
Working Storage
Create Entry inGT
ForLINKO$
Create Entry inGT
ForSEGTAB$
Read Dictionary For
Link0FromSYSUTI
Create Entry inGT
ForEachItemin
Link0Dictionary
F
SetPASS=2
1002
Figure 34(j). Flowchart forcontrol statement processing.
7.2-95 (6/I/71)&lt;/p&gt;
&lt;p&gt;LKED025
IReopen SYSUT2.
IInitialize toPro-
IcessEachEntryin
ItheSubprogram Names
&amp;mdash;&amp;ndash;ITable(SNT)
LLL&amp;gt;3OlO
GetLibrary Name I
FromLT.GetPointers i
toSNTFromLT I
I
&lt;em&gt;&amp;gt;3015 _
GetNameFromSNT
LookUpSubprogram
Name inGT
[ ICLASS :
3210&lt;/em&gt;
&lt;em&gt;&amp;lt;&lt;/em&gt; [YESNASTRAN SUPPORT PROGRAMS
ReadDeckFromSYSUT2
Reset CLASS tolor2.
Complete LField
3060
Search AllTEXT
Tables inDeck
IfanyTEXTTable
Points toaCommon
BlockintheLCT,Set
HighOrderBitinthe
LCTEntry
3050
GetNext Common Block
NameFromLCT
LKEDIO0
LookUpCommon Block
NameinGT
30501a
Figure 35(a). Flowchart forLKED025.
7.2-96 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
30501a
-1
1,3,4Print Warning Message
2,53055
Â®
3058
30599
ToLKED990
Logic Error Abort
3054
Reset CLASS to2
3_Bi30583051
SetCLASSandL
FieldsofNewEntry
SetINDEX Field
Figure 35(b). Flowchart forLKED025.
7.2-97 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
30553055
SetMaxL
NO
NOPrintWarning Message
SetINDEXField
LocateENTRTable
3080NOPrintErrorMessage
3210
Figure 35(c). Flowchart forLKED025.
7.2-98 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
3080
3080
PickUpEntryNameFromENTRTable
LKED1O0
LookUpEntry Name
inGT
_r
-l3091
SetCLASS, LandA
Fields ofNewEntry
0,2,3,4,5
3095
!
.ISetAField ofOld
7Entry
30999
_C EXIT )
ToLKED990
Logic Error &amp;lsquo;_bort
j&amp;ndash;x
3_O0 II0
3092&amp;amp;3094
IPrint Error Message.SetNBGBFlag
3205
Reset CLASS to4and
LtoLibrary Pointer
_3210
Figure 35(d). Flowchart forLKED025.
7.2-99 (6/I/71)&lt;/p&gt;
&lt;p&gt;3100
_YES
=Undef. /
,oNASTRAN SUPPORT PROGRAMS
PrintWarning MessageCALLLKED150
ResetCLASS, Land
AFields inEntry
YES
Search TEXTTables
forIDWord
EXIT
PrintWarning
MessageYES
Figure 35(e).CALLLKED990
LogicErrorAbort
Flowchart forLKED025.
7.2-100 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
c
313
Store Number of
Arguments inEach
Entry inCall ChainLI=0
NO
0803120a
lTurnonARGBit.
SetPc=Number
Arguments
Locate LINKTable
N
315 3200
PickUpExternal
Reference
LKEDI75
IfRequested, Rename
External Reference
Figure 35(f). Flowchart forLKED025.
7.2-I01 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDIO0
LookUpExternal
NameinGT
&lt;em&gt;r
-I
3170
3164
IfCallNotinPath,
AddEntrytoCall
Chain
2,53165
IPrintWarning Message I
&amp;lt;EXITToLKED990
LogicErrorAbort3161
Ireate NewEntryWithCLASS=7
,&lt;strong&gt;o_o&lt;/strong&gt;&lt;/em&gt;&amp;rsquo;_i
AddEntrytoCall
Chain
W
3170
Figure35(g). Flowchart forLKED025.
7.2-I02 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600 LINKAGEEDITOR
31620
I Search EPT
NO
NO
IYES
LKEDI50 +
Delink Entry FromOld
Segment andLinkto
Current SegmentLKEDSO0
LookUpSubprogram
NameinGT
[ re te ew n r, n&amp;rsquo; i_ Table WithCLASS=4
200 151
SetINDEX Field inGT.I
SetMaxLength ofText
andDeckTable!
_3210NotinTable
Figure 35(h). Flowchart forLKED025.
7.2-I03(6/I/71)&lt;/p&gt;
&lt;p&gt;3210NASTRANSUPPORTPROGRAMS
of NO
3015
.TRUE. SYSLIB
SE.
NO
Libraries
YES 3010
Undef. S_._
3
Initialize toTrace
EachSegment Chain
intheGTYES
YES
NO
UNPKSYM r_ 3280
Unpack ItemsinGT
Entry
3280PrintWarning Message
&lt;em&gt;298ForEachEntry inChain1
Which Matches anEntry
inLINKLIB, Create aGT&lt;/em&gt;
Entry ofCLASS=4 for |
Subprogram Name |
SetSYSLIB to.TRUE.
3010
Figure 35(i). Flowchart forLKED025.
7.2-I04 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
0,632899
ToLKED990
LogicErrorAbort
4,5_3287
32871
PrintErrorMessage.
SetN_GBFlag
3288
IPrint Error Message.SetN_G_Flag329
Print Error Message
SetNI_G_Flag
3295
Figure 35(j). Flowchart forLKED025.
7.2-I05 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
?
NO
NO_IPrint Error Message.
-[SetNOG_Flag
Print Error Message
SetN_G_Flag
OFF
TurnOff
3295
3 EXIT
OK ToLKED990
LogicErrorAbort_3295
GetEntryinCall
Chain
NO
SetPSYM:0
Figure 35(k). Flowchart forLKED025.
7.2-I06 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LYES
3280NO
3270a_
&lt;em&gt;o
IPrintError Message IEachEntry inChain. FÂ°r
SetN_G_Flag
Initialize toProcess
EachEntry inEach
Segment CallChain
]3306 &amp;ldquo;4
GetSegment Limits
FromRDT
[&lt;/em&gt; 3310
GetSegment Chain
Pointers FromSCTUnpack CallChain
Entry
Delink Entry From
CallChain3320
NO
31
Figure 35(I). Flowchart forLKED025.
7.2-107 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
3320__-._
IPrint Error Message. iSetNBGBFlag
4
SetAField inEntry
&amp;lt;_fCall
YES
3322
YES Chain Now
EmptyNO
3311
NO
Create Entry inGT
ForENTAB$
yEs
3310_3306
Figure 35(m). Flowchart forLKED025.
7.2-108 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED050
1Initialize toProcess
EachSegment Chain
GetSegment Chain
Pointer FromSCT.
SetLENGTH=O
Unpack Entry
ILENGTH=LENGTH+L+I
J
YES
Store LENGTH inSDT
Figdre 36(a). Flowchart forLKED050.Initialize toProcess
EachRegion
4010a
GetSegment Number
Defining Region
FromRDT. REGLEN=O
4012
PARENT=Last Segment
inRegion. LENGTH=O
4014
LENGTH=LENGTH+Length
ofSegment PARENT=
Parent inSDT
SetMaximum Region
Length
7.2-I09 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
NO
12
N_4olOa
Replace Region Lengths
IWithRegion Addresses l
IbyAccumulating Lengths I
1Initialize toProcess
EachRegion
4030a _
GetSegment Numbers
Defining Region From
RDTGetRegion
Address FromRDT
AddLength ofSegment
toCurrent AddressStoreSegment Address
andRegion Number in
SDT
p
o
4o3  4030aInitialize toProcess
EachSegment Chain
[_&amp;gt;&lt;em&gt;o-]&lt;/em&gt;
UNPKSYM _ v4050
IUnpack Entry
$
Figure 36(b). Flowchart forLKED050.
7.2-110 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,6
404440499
ToLKED990
Logic Error Abort
IIStore SubprogramAddress inLField.
TurnonARGBit
4046
Store &amp;ldquo;Entry&amp;rdquo;
Address inAField.
Increment Address
4047
IGetSubprogram Address /viaLField. Additt_
Relative Address, and|
Store inAField |
4,5,7
&lt;em&gt;2&lt;/em&gt; 4042
Figure 36(c). Flowchart forLKED050.
7.2-III(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
NO_N 0
YES
Accumulate andSet
Address ofENTAB$
EntryEXIT
ToLKED990
LogicErrorAbort
4042
LKEDIO0 _NO
I
LookUpEntryinGTI
I
rESPrintErrorMessage.
SetNOGOFlag
_4070
Figure 36(d). Flowchart forLKED050.
7.2-112 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P101</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_101/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
15O0
=l =2
Increment Count
ofRENAME CardsGetHashnbrForOld
Name; HashIntoRT;
FindEndofHash Chain
6Ã·KERR
1900H Create NewEntry inRT.Chain Entry to
Previous Entry
IOll
_1800
Figure 34(h). Flowchart forcontrol statement processing.
7.2-93 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
1600
=I =2
&lt;em&gt;Â°&lt;/em&gt;
StoreENTRYName
I010&amp;lt;EXIT
ToLKED990
LogicErrorAbort
4Ã·KERR
1900
Figure 34(i). Flowchart forcontrol statement processing.
7.2-94 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
1990
?SetEndofTable for )
Cards ForPass2.
) Complete Allocation of
Working Storage
Create Entry inGT
ForLINKO$
Create Entry inGT
ForSEGTAB$
Read Dictionary For
Link0FromSYSUTI
Create Entry inGT
ForEachItemin
Link0Dictionary
F
SetPASS=2
1002
Figure 34(j). Flowchart forcontrol statement processing.
7.2-95 (6/I/71)&lt;/p&gt;
&lt;p&gt;LKED025
IReopen SYSUT2.
IInitialize toPro-
IcessEachEntryin
ItheSubprogram Names
&amp;mdash;&amp;ndash;ITable(SNT)
LLL&amp;gt;3OlO
GetLibrary Name I
FromLT.GetPointers i
toSNTFromLT I
I
&lt;em&gt;&amp;gt;3015 _
GetNameFromSNT
LookUpSubprogram
Name inGT
[ ICLASS :
3210&lt;/em&gt;
&lt;em&gt;&amp;lt;&lt;/em&gt; [YESNASTRAN SUPPORT PROGRAMS
ReadDeckFromSYSUT2
Reset CLASS tolor2.
Complete LField
3060
Search AllTEXT
Tables inDeck
IfanyTEXTTable
Points toaCommon
BlockintheLCT,Set
HighOrderBitinthe
LCTEntry
3050
GetNext Common Block
NameFromLCT
LKEDIO0
LookUpCommon Block
NameinGT
30501a
Figure 35(a). Flowchart forLKED025.
7.2-96 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
30501a
-1
1,3,4Print Warning Message
2,53055
Â®
3058
30599
ToLKED990
Logic Error Abort
3054
Reset CLASS to2
3_Bi30583051
SetCLASSandL
FieldsofNewEntry
SetINDEX Field
Figure 35(b). Flowchart forLKED025.
7.2-97 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
30553055
SetMaxL
NO
NOPrintWarning Message
SetINDEXField
LocateENTRTable
3080NOPrintErrorMessage
3210
Figure 35(c). Flowchart forLKED025.
7.2-98 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
3080
3080
PickUpEntryNameFromENTRTable
LKED1O0
LookUpEntry Name
inGT
_r
-l3091
SetCLASS, LandA
Fields ofNewEntry
0,2,3,4,5
3095
!
.ISetAField ofOld
7Entry
30999
_C EXIT )
ToLKED990
Logic Error &amp;lsquo;_bort
j&amp;ndash;x
3_O0 II0
3092&amp;amp;3094
IPrint Error Message.SetNBGBFlag
3205
Reset CLASS to4and
LtoLibrary Pointer
_3210
Figure 35(d). Flowchart forLKED025.
7.2-99 (6/I/71)&lt;/p&gt;
&lt;p&gt;3100
_YES
=Undef. /
,oNASTRAN SUPPORT PROGRAMS
PrintWarning MessageCALLLKED150
ResetCLASS, Land
AFields inEntry
YES
Search TEXTTables
forIDWord
EXIT
PrintWarning
MessageYES
Figure 35(e).CALLLKED990
LogicErrorAbort
Flowchart forLKED025.
7.2-100 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
c
313
Store Number of
Arguments inEach
Entry inCall ChainLI=0
NO
0803120a
lTurnonARGBit.
SetPc=Number
Arguments
Locate LINKTable
N
315 3200
PickUpExternal
Reference
LKEDI75
IfRequested, Rename
External Reference
Figure 35(f). Flowchart forLKED025.
7.2-I01 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKEDIO0
LookUpExternal
NameinGT
&lt;em&gt;r
-I
3170
3164
IfCallNotinPath,
AddEntrytoCall
Chain
2,53165
IPrintWarning Message I
&amp;lt;EXITToLKED990
LogicErrorAbort3161
Ireate NewEntryWithCLASS=7
,&lt;strong&gt;o_o&lt;/strong&gt;&lt;/em&gt;&amp;rsquo;_i
AddEntrytoCall
Chain
W
3170
Figure35(g). Flowchart forLKED025.
7.2-I02 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600 LINKAGEEDITOR
31620
I Search EPT
NO
NO
IYES
LKEDI50 +
Delink Entry FromOld
Segment andLinkto
Current SegmentLKEDSO0
LookUpSubprogram
NameinGT
[ re te ew n r, n&amp;rsquo; i_ Table WithCLASS=4
200 151
SetINDEX Field inGT.I
SetMaxLength ofText
andDeckTable!
_3210NotinTable
Figure 35(h). Flowchart forLKED025.
7.2-I03(6/I/71)&lt;/p&gt;
&lt;p&gt;3210NASTRANSUPPORTPROGRAMS
of NO
3015
.TRUE. SYSLIB
SE.
NO
Libraries
YES 3010
Undef. S_._
3
Initialize toTrace
EachSegment Chain
intheGTYES
YES
NO
UNPKSYM r_ 3280
Unpack ItemsinGT
Entry
3280PrintWarning Message
&lt;em&gt;298ForEachEntry inChain1
Which Matches anEntry
inLINKLIB, Create aGT&lt;/em&gt;
Entry ofCLASS=4 for |
Subprogram Name |
SetSYSLIB to.TRUE.
3010
Figure 35(i). Flowchart forLKED025.
7.2-I04 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
0,632899
ToLKED990
LogicErrorAbort
4,5_3287
32871
PrintErrorMessage.
SetN_GBFlag
3288
IPrint Error Message.SetN_G_Flag329
Print Error Message
SetNI_G_Flag
3295
Figure 35(j). Flowchart forLKED025.
7.2-I05 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
?
NO
NO_IPrint Error Message.
-[SetNOG_Flag
Print Error Message
SetN_G_Flag
OFF
TurnOff
3295
3 EXIT
OK ToLKED990
LogicErrorAbort_3295
GetEntryinCall
Chain
NO
SetPSYM:0
Figure 35(k). Flowchart forLKED025.
7.2-I06 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
LYES
3280NO
3270a_
&lt;em&gt;o
IPrintError Message IEachEntry inChain. FÂ°r
SetN_G_Flag
Initialize toProcess
EachEntry inEach
Segment CallChain
]3306 &amp;ldquo;4
GetSegment Limits
FromRDT
[&lt;/em&gt; 3310
GetSegment Chain
Pointers FromSCTUnpack CallChain
Entry
Delink Entry From
CallChain3320
NO
31
Figure 35(I). Flowchart forLKED025.
7.2-107 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
3320__-._
IPrint Error Message. iSetNBGBFlag
4
SetAField inEntry
&amp;lt;_fCall
YES
3322
YES Chain Now
EmptyNO
3311
NO
Create Entry inGT
ForENTAB$
yEs
3310_3306
Figure 35(m). Flowchart forLKED025.
7.2-108 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED050
1Initialize toProcess
EachSegment Chain
GetSegment Chain
Pointer FromSCT.
SetLENGTH=O
Unpack Entry
ILENGTH=LENGTH+L+I
J
YES
Store LENGTH inSDT
Figdre 36(a). Flowchart forLKED050.Initialize toProcess
EachRegion
4010a
GetSegment Number
Defining Region
FromRDT. REGLEN=O
4012
PARENT=Last Segment
inRegion. LENGTH=O
4014
LENGTH=LENGTH+Length
ofSegment PARENT=
Parent inSDT
SetMaximum Region
Length
7.2-I09 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
NO
12
N_4olOa
Replace Region Lengths
IWithRegion Addresses l
IbyAccumulating Lengths I
1Initialize toProcess
EachRegion
4030a _
GetSegment Numbers
Defining Region From
RDTGetRegion
Address FromRDT
AddLength ofSegment
toCurrent AddressStoreSegment Address
andRegion Number in
SDT
p
o
4o3  4030aInitialize toProcess
EachSegment Chain
[_&amp;gt;&lt;em&gt;o-]&lt;/em&gt;
UNPKSYM _ v4050
IUnpack Entry
$
Figure 36(b). Flowchart forLKED050.
7.2-110 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,6
404440499
ToLKED990
Logic Error Abort
IIStore SubprogramAddress inLField.
TurnonARGBit
4046
Store &amp;ldquo;Entry&amp;rdquo;
Address inAField.
Increment Address
4047
IGetSubprogram Address /viaLField. Additt_
Relative Address, and|
Store inAField |
4,5,7
&lt;em&gt;2&lt;/em&gt; 4042
Figure 36(c). Flowchart forLKED050.
7.2-III(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
YES
NO_N 0
YES
Accumulate andSet
Address ofENTAB$
EntryEXIT
ToLKED990
LogicErrorAbort
4042
LKEDIO0 _NO
I
LookUpEntryinGTI
I
rESPrintErrorMessage.
SetNOGOFlag
_4070
Figure 36(d). Flowchart forLKED050.
7.2-112 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P102</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_102/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
=l
?_
SaveENTRY Address
LI
NO JPrint Error Message.
ISetN_G_Flag
Look UpL_ADER. inGT
NO
,_ExITToLKED990
Logic Error Abort
Generate RJL_ADER.
Instruction
Figure 36(e). Flowchart forLKED050.
7.2-I13 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED075
_ENTER _
I
PrintErrorMessage.
SetNOGBFlag
SetWRIT_UT =.FALSE.
SetWRIT_UT =.TRUE.
4
Build andWrite BLKDATA I
Program andWrite on I
SYSUTI I
LookUpNameofa
Bootstrap Deckin
theSNT5010
NO_IWrite Directory Record
&amp;ldquo;lon SYSUTI
_5020
Figure 37(a). Flowchart forLKED075.
7.2-114 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
?
ReadDeck FromSYSUT2
Write DeckonSYSUTIPrint Fatal Error
Message
UNPKSYM _ v5180
Unpack Entry inGT
&amp;lsquo;r
C/5009a  YESWrite Directory Record
onSYSUTI. Write Dic-
tionary Record on
SYSUTI
Initialize toBuild
TextforSegments
GetSegment Numbers
ForRegion FromRDT
GetSegment Chain
Pointers FromSCT
_50405044
Figure 37(b).ENTAB$ YES
NO
tryin
YESNO
Build SEGTAB$.
Write SEGTAB$
onSYSUTINO
YES
Assemble LINKO$.
Write LINKO$ on
SYSUTI
Print First Entry
5040
Flowchart forLKED075.517O
505O
7.2-I15 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
EXIT &lt;em&gt;&amp;rdquo;&lt;/em&gt;-j-
ToLKED900
LogicErrorAbort&amp;gt;3YES
ReadPIDLTable
ForSubprogram
onSYSUT2
=2
SetLR=1Get
Length FromPIDLNO
GetAddress ofEach
EntryinLCTFromGT
IReadENTRTable For
DeckonSYSUT2
PrintEntries.
IfXREF,Write Entries
onSYSUT3
5100
Figure 37(c). Flowchart forLKED075.5O8O
NoText-Generate
Zeros. PrintStorage
MapLine
_5040
GetLength FromEntry. |
PrintStorage MapLine.|
SetLRDepending on|
Position ofCommon |
BlockinLCT
ZeroText-Building
Area. WriteDump
Control Word
ReadaTableFrom
Deck
NO
516
WriteTextonSYSUTI
7.2-116 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
AnyOther Table
LINK
TEXT
FILLFILLTAB
_I Relocate Text
1
_5103TEXTTAB _YES
Relocate Text
L
5103
REPL _1
lREPLTAB
Figure 37(d).Relocate Text
Flowchart forLKED075.
7.2-I17 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5130
GetExternal Name
LookUpNameinGT
UN
Unpack EntryYES _
r
YES_ &lt;em&gt;5134
GetAddress FromIGTEntry
Figure 37(e).EXIT .&lt;/em&gt;
ToLKED990
LogicErrorAbort5160
I
WriteTextonSYSUTI I
NO
CloseRecord onSYSUT3 1
I
Flowchart forLKED075.5040
7.2-I18 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
5134
Trace CallChain
toFindEntry
NO
ExIT)ToLKED990
Logic Error Abort
NO ISetAddress toABSENT.
GetAddress From
ENTAB$ Entry
Perform Relocation IofAllReferences to
External Symbol
5103
5130
Figure 37(f). Flowchart forLKED075.
7.2-I19 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5170
Build Text For
ENTAB$
IWriteENTAB$ onSYSUTI
CloseRecord For
Segment
NO
5034
NO
5025
XREF? .FALSE _RETURN
CloseRecord onSYSUT3
Rewind SYSUT3
I_EXIT_ToLKED077
Figure 37(g). Flowchart forLKED075.
7.2-120 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED077
Initialize For
Processing
7010
Read Subprogram Name
andAddress
NO
YES_N=a?&lt;em&gt;e&lt;/em&gt;
ReadEntry Point
NameandAddress LookUpEntry NameinTable
?
&amp;lsquo;ReadExternal ReferenceNOICreate Entry. LinktoJ
ListChain
L
LinktoListChain
7020
Figure 37(h).Flowchart forLKED075.
7.2-121 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
}Â°LookUpNamein
Table
_o
Create Entryin
Table
Create CallEntry
ReadLocation of
External Reference
NO
7O5OireaeNewcanrlPrnne
Figure 37(i).AddCurrent Call
Location toCall
Entry
Flowchart forLKED075.7050
Complete CallEntry.
PrintLine
7010
External Name=
LastWordRead
7.2-122 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7060
?Initialize For2nd
Pass (SORT 2)
ReadLink0Dictionary
FromSYSUTI. ForEach
Entry inLink0Which
isAlsointheTable,
Link theEntry tothe
Call Chain
ofList
7130 _YES
I
IRestore Table PointerUNPKEP
Unpack ListChain
Entry
, yEs
Initialize toTrace
CallChainNO
UNPKXRF _ v7110
1
Unpack CallChain I
Entry
{
Print CallsPrint Entry
Figure 37(j). Flowchart forLKED075.
7.2-123 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED080
YES
Create BLKDATA Program 1
WhoseLength=Length of_
Link0+2008.WriteThisI
Program as1stRecordon
_UTFILE
OpenLINKLIB in
Buffer2RETURN
229
WriteRecordWith
WordENDLINKS. Close
BUTFILE.
ReadaDeckFrom
LINKLIB andLocate
PIDLTable
NO
Write Deckon_UTFILEiCloseLINKLIB
L
Exist ForJ
YES
ReadSubindex For
LinkPoint Index
toSubindex
,LReadDirectory Record
ForLink.WriteDirec-
toryRecord onOUTFILE
CopyEachSegment
FromSYSUTI to
(_UTFILE
Figure 38.Flowchart forLKED080.
7.2-124 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
XBBBT
1PickupControl Card
FromLocations 708-
778andUnpack Each
Character Intoa
Separate Word
FromtheControl Card
Characters Formthe
TwoFileNames NAME1
andNAME2 andtheoptior
Specified
220
YES
_Print Illegal &lt;em&gt;PTI_N ]
sageS
I&lt;/em&gt; STOP _
Figure 39(a). Print Message About lIllegal UseofFile l
.a son
YFS
Open theDirect Access
FileofNameNAME2
DeclareFileNamed
NAME2 tobeaC_MM_N
File
YESRelease itFrom
C_MM_N andEvict
theDiskSpace it
isUsing
420 _r
Determine Amount of
CoreThere isAvail-
able inBlank C_4_N
NO
SetNAME2=&amp;ldquo;SYSLM_D&amp;rdquo; _
Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-125 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
I
OpentheSequential I
FileNAME1WithRewind
I]
I
ReadOneofthe I
Bootstrap Relocatables I
FromFileNAME1 I
LooptoCopyI
Bootstrap
Program_
iriteitSequentiallyonFileNAME2465
&lt;em&gt;ReadLink0Directory iRecord FromFileNAME1
WriteDirectory Record|
asDirect Access Recor&lt;/em&gt;
UsingSub-lndex on|
FileNAME2 |
ReadLink0Dictionary
FromFileNAME1and
Write itOutasDirect-
Access Record 2Using
Sub-lndex onFileNAME2
IReadLink0&amp;quot;Supermain&amp;quot; 1
Directly IntotheCoreI
SpaceitWillOccupy atJ
Z(1)in/XB_TBD/ FromI
FileNAME1
1Writeout&amp;quot;Supermain&amp;quot;
asDirect-Access Recorc
Record Nbr3Using
Subindex onFileNAME2
SetIndexSpecification
inFETtoPointtothe
Master Index
WriteOuttheLink0]
Subindex asDirect-
Access Record 2Using
theMaster Indexon
FileNAME2IRedefine theSpaceOccupied forUseby
theSubandMaster
Indices tobethe
Actual Predefined
SpaceinSupermain
Rebuild theFET
ForDirect-Access
FileNAME2inits
Permanent Location
inSllpPrm_._.n
570 _&amp;quot;
ReadaLink
Directory From
FileNAME1
v700
!
PrintErrorMessage i
About Invalid
J Directory Record
STOP
Figure 39(b). Flowchart forsubroutine XB_Tofthebootstrap program.
7.2-126 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
w
70
Close theSequential
FileNAMEI WithRewindNOi
_IDefine Index inFET
toPoint totheSubindex
J.,r
SettheField Length
inLocations 738and
768
YES
CloseFileNAME2
WithRewind OnlyClose FileNAME2
WithUnload
Execute C_MM_N Macro
onNAME2 toRe-attach
C(_ON FiIe
ReopenFileNAME2Direct-AccessTransfer Control to
Location lOl8inCore
Figure 39(c). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-127 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
WriteOuttheDirector)
Record asDirect-Access
Record 1UsingSub-
IndexonFileNAME2
SetLINKNumber and
NUMSEGS FromDirectory
Record Data
&lt;!-- raw HTML omitted --&gt;NUMSEGS
_Complete
Define IndexinFET
toPointtoMaster
Index
IWrite Sub-lndex For
LinkJustCataloged
asDirect-Access
Record LINKNUM+2
&lt;em&gt;sing Master-lndex)
onFileNAME2
570IReadaSegment FromI
FileNAME1
l
PrintInsufficient L&lt;/em&gt;
_ _- !
WritetheSegment as T
Direct-Access Record (STOP _)I+IUsingtheSub- j
indexonFileNAME2
Figure 37(d). Flowchart forsubroutine XBOOTofthebootstrap program.
7.2-128 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Print Message That
NAME1 MayNotbe
Different FromNAME2
on_PTI_N=&amp;ldquo;ATTACH&amp;rdquo;
Write aMessage
STOP220
or
N/_ME2=&amp;quot; B1ank&amp;quot;
?
YES
750
Insufficiel
cient Core
IOpentheDirect-
Access FileNAMEI
i
&amp;lsquo;Read inSubindex For
LinkO,Which is
Record 2,Using the
Master Index
1Define FETtoPoint
toThisSubindex
JustRead
IReadinLink0Direc-
tory=Record lUsing
theSubindex
iI
SetLink0&amp;quot;Supermain&amp;quot;L
Length
]ReadinSupermain =
Record 3Using the
Sub-lndex
Supermain isRead
Directly Intoits
Permanent Location
inC)re
1I
Redefine FETinits I
Permanent LocationIinSupermain
MoveMaster Index
FromWorking FETto
Permanent Location
lOl8inCore
ransfer Control tOre_cation I018inCo
Figure 39(e). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-129 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINK
1StoreinWord8of
theFETtheMaster
IndexAddress and
Length
Compare theRequested
LinkNumber Withthe
Master IndexLength
toDetermine ifitis
inRange
ICallLINKERR to 1
theLink_ NO.]WriteMessage &amp;ldquo;LINKi
Number inJ &amp;ldquo;|NUMBER ISOUTOFI
&amp;ldquo;&amp;rsquo;,,_ngej,-/ L&amp;hellip;_NGE.&amp;rdquo; _
j&amp;rsquo;&lt;em&gt;Relative Track&lt;/em&gt; YES ReadintheSub-&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
?Check LinkNum}_er in
Directory toVerify
WeHaveCorrect Link
atHand
Check ForSufficient
CoretoLoadLowest
Segment ofLinkNO
NO
Read inRecord 2UsingI
Subindex. This is I
theRootSegment ForI
theLink
ITurn onLeft-Most Bit
inSEGTAB$ Segment l
Word toIndicate
Segment lisinCore
Branch toEntry PointoftheLinkinthe
Rootsegment JustLoaded
(ACTUAL EXIT)ICallLINKERR toWrite I
_lMessage INCORRECT
IDIRECTQRY RECORD FQR
ICallLINKERR toWrit_Message &amp;ldquo;INSUFFICIENT
C_RE F_RLINK&amp;ndash;.&amp;quot;;CSTOP
STOP
Figure 40(b). Flowchart forsubroutine LINKofthesegment loader.
7.2-131(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LOADER.
1Determine Address of
theENTAB$ Entry
WhichCalled L_ADER.
1
ickOffSegment NumberromLastWordof I
NTAB$Entry(Thisis
heSegment inWhichtheI
ntryPointoftheTrue
allResides)
1LookatSEGTAB$ Entry |
ForThisSegment and
NoteifitisLoaded
l(Bit59willbeonif
[Segment isinCore)MovetheActual Jump-
BackInstruction From
theNext-to-Last Word
intheENTAB$ Entry,
totheTrueEntryPoin
Given intheRight18
BitsoftheLastWord
intheENTAB$ Entry.
IIftheNumber ofArgu-
ments asGiven inthe
Right18Bitsofthe
ThirdWordFromthe
Bottom oftheENTAB$
EntryisGreater Than
6,theNumber ofArgu-
mentAddresses Over6
asStored intheTop
oftheENTAB$ Entry
areMovedtotheStor-
ageAreaintheCalled
RoutineNO
Transfer Control tothe_TrueEntry+1asGiven
intheLastWordofthe
&lt;em&gt;,,ENTAB$ EntryISaveBRegistersB1Through B6
ITurnonMARKED-FOR- IL_ADBitForSEGTAB$ I
EntryofSegment in|
TreeIfIN-CORE BitOf&lt;/em&gt;
]PickupParent
Segment Number of
Segment JustMARKED-
IF_R-L_AD
_ _NO
/
PickupWordin I
SEGTAB$ ForThis
Segment
Figure 41(a). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-132 (611171)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P102</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_102/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
=l
?_
SaveENTRY Address
LI
NO JPrint Error Message.
ISetN_G_Flag
Look UpL_ADER. inGT
NO
,_ExITToLKED990
Logic Error Abort
Generate RJL_ADER.
Instruction
Figure 36(e). Flowchart forLKED050.
7.2-I13 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED075
_ENTER _
I
PrintErrorMessage.
SetNOGBFlag
SetWRIT_UT =.FALSE.
SetWRIT_UT =.TRUE.
4
Build andWrite BLKDATA I
Program andWrite on I
SYSUTI I
LookUpNameofa
Bootstrap Deckin
theSNT5010
NO_IWrite Directory Record
&amp;ldquo;lon SYSUTI
_5020
Figure 37(a). Flowchart forLKED075.
7.2-114 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
?
ReadDeck FromSYSUT2
Write DeckonSYSUTIPrint Fatal Error
Message
UNPKSYM _ v5180
Unpack Entry inGT
&amp;lsquo;r
C/5009a  YESWrite Directory Record
onSYSUTI. Write Dic-
tionary Record on
SYSUTI
Initialize toBuild
TextforSegments
GetSegment Numbers
ForRegion FromRDT
GetSegment Chain
Pointers FromSCT
_50405044
Figure 37(b).ENTAB$ YES
NO
tryin
YESNO
Build SEGTAB$.
Write SEGTAB$
onSYSUTINO
YES
Assemble LINKO$.
Write LINKO$ on
SYSUTI
Print First Entry
5040
Flowchart forLKED075.517O
505O
7.2-I15 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
EXIT &lt;em&gt;&amp;rdquo;&lt;/em&gt;-j-
ToLKED900
LogicErrorAbort&amp;gt;3YES
ReadPIDLTable
ForSubprogram
onSYSUT2
=2
SetLR=1Get
Length FromPIDLNO
GetAddress ofEach
EntryinLCTFromGT
IReadENTRTable For
DeckonSYSUT2
PrintEntries.
IfXREF,Write Entries
onSYSUT3
5100
Figure 37(c). Flowchart forLKED075.5O8O
NoText-Generate
Zeros. PrintStorage
MapLine
_5040
GetLength FromEntry. |
PrintStorage MapLine.|
SetLRDepending on|
Position ofCommon |
BlockinLCT
ZeroText-Building
Area. WriteDump
Control Word
ReadaTableFrom
Deck
NO
516
WriteTextonSYSUTI
7.2-116 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
AnyOther Table
LINK
TEXT
FILLFILLTAB
_I Relocate Text
1
_5103TEXTTAB _YES
Relocate Text
L
5103
REPL _1
lREPLTAB
Figure 37(d).Relocate Text
Flowchart forLKED075.
7.2-I17 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5130
GetExternal Name
LookUpNameinGT
UN
Unpack EntryYES _
r
YES_ &lt;em&gt;5134
GetAddress FromIGTEntry
Figure 37(e).EXIT .&lt;/em&gt;
ToLKED990
LogicErrorAbort5160
I
WriteTextonSYSUTI I
NO
CloseRecord onSYSUT3 1
I
Flowchart forLKED075.5040
7.2-I18 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
5134
Trace CallChain
toFindEntry
NO
ExIT)ToLKED990
Logic Error Abort
NO ISetAddress toABSENT.
GetAddress From
ENTAB$ Entry
Perform Relocation IofAllReferences to
External Symbol
5103
5130
Figure 37(f). Flowchart forLKED075.
7.2-I19 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5170
Build Text For
ENTAB$
IWriteENTAB$ onSYSUTI
CloseRecord For
Segment
NO
5034
NO
5025
XREF? .FALSE _RETURN
CloseRecord onSYSUT3
Rewind SYSUT3
I_EXIT_ToLKED077
Figure 37(g). Flowchart forLKED075.
7.2-120 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
LKED077
Initialize For
Processing
7010
Read Subprogram Name
andAddress
NO
YES_N=a?&lt;em&gt;e&lt;/em&gt;
ReadEntry Point
NameandAddress LookUpEntry NameinTable
?
&amp;lsquo;ReadExternal ReferenceNOICreate Entry. LinktoJ
ListChain
L
LinktoListChain
7020
Figure 37(h).Flowchart forLKED075.
7.2-121 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
}Â°LookUpNamein
Table
_o
Create Entryin
Table
Create CallEntry
ReadLocation of
External Reference
NO
7O5OireaeNewcanrlPrnne
Figure 37(i).AddCurrent Call
Location toCall
Entry
Flowchart forLKED075.7050
Complete CallEntry.
PrintLine
7010
External Name=
LastWordRead
7.2-122 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7060
?Initialize For2nd
Pass (SORT 2)
ReadLink0Dictionary
FromSYSUTI. ForEach
Entry inLink0Which
isAlsointheTable,
Link theEntry tothe
Call Chain
ofList
7130 _YES
I
IRestore Table PointerUNPKEP
Unpack ListChain
Entry
, yEs
Initialize toTrace
CallChainNO
UNPKXRF _ v7110
1
Unpack CallChain I
Entry
{
Print CallsPrint Entry
Figure 37(j). Flowchart forLKED075.
7.2-123 (6/I171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LKED080
YES
Create BLKDATA Program 1
WhoseLength=Length of_
Link0+2008.WriteThisI
Program as1stRecordon
_UTFILE
OpenLINKLIB in
Buffer2RETURN
229
WriteRecordWith
WordENDLINKS. Close
BUTFILE.
ReadaDeckFrom
LINKLIB andLocate
PIDLTable
NO
Write Deckon_UTFILEiCloseLINKLIB
L
Exist ForJ
YES
ReadSubindex For
LinkPoint Index
toSubindex
,LReadDirectory Record
ForLink.WriteDirec-
toryRecord onOUTFILE
CopyEachSegment
FromSYSUTI to
(_UTFILE
Figure 38.Flowchart forLKED080.
7.2-124 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
XBBBT
1PickupControl Card
FromLocations 708-
778andUnpack Each
Character Intoa
Separate Word
FromtheControl Card
Characters Formthe
TwoFileNames NAME1
andNAME2 andtheoptior
Specified
220
YES
_Print Illegal &lt;em&gt;PTI_N ]
sageS
I&lt;/em&gt; STOP _
Figure 39(a). Print Message About lIllegal UseofFile l
.a son
YFS
Open theDirect Access
FileofNameNAME2
DeclareFileNamed
NAME2 tobeaC_MM_N
File
YESRelease itFrom
C_MM_N andEvict
theDiskSpace it
isUsing
420 _r
Determine Amount of
CoreThere isAvail-
able inBlank C_4_N
NO
SetNAME2=&amp;ldquo;SYSLM_D&amp;rdquo; _
Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-125 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
I
OpentheSequential I
FileNAME1WithRewind
I]
I
ReadOneofthe I
Bootstrap Relocatables I
FromFileNAME1 I
LooptoCopyI
Bootstrap
Program_
iriteitSequentiallyonFileNAME2465
&lt;em&gt;ReadLink0Directory iRecord FromFileNAME1
WriteDirectory Record|
asDirect Access Recor&lt;/em&gt;
UsingSub-lndex on|
FileNAME2 |
ReadLink0Dictionary
FromFileNAME1and
Write itOutasDirect-
Access Record 2Using
Sub-lndex onFileNAME2
IReadLink0&amp;quot;Supermain&amp;quot; 1
Directly IntotheCoreI
SpaceitWillOccupy atJ
Z(1)in/XB_TBD/ FromI
FileNAME1
1Writeout&amp;quot;Supermain&amp;quot;
asDirect-Access Recorc
Record Nbr3Using
Subindex onFileNAME2
SetIndexSpecification
inFETtoPointtothe
Master Index
WriteOuttheLink0]
Subindex asDirect-
Access Record 2Using
theMaster Indexon
FileNAME2IRedefine theSpaceOccupied forUseby
theSubandMaster
Indices tobethe
Actual Predefined
SpaceinSupermain
Rebuild theFET
ForDirect-Access
FileNAME2inits
Permanent Location
inSllpPrm_._.n
570 _&amp;quot;
ReadaLink
Directory From
FileNAME1
v700
!
PrintErrorMessage i
About Invalid
J Directory Record
STOP
Figure 39(b). Flowchart forsubroutine XB_Tofthebootstrap program.
7.2-126 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
w
70
Close theSequential
FileNAMEI WithRewindNOi
_IDefine Index inFET
toPoint totheSubindex
J.,r
SettheField Length
inLocations 738and
768
YES
CloseFileNAME2
WithRewind OnlyClose FileNAME2
WithUnload
Execute C_MM_N Macro
onNAME2 toRe-attach
C(_ON FiIe
ReopenFileNAME2Direct-AccessTransfer Control to
Location lOl8inCore
Figure 39(c). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-127 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
WriteOuttheDirector)
Record asDirect-Access
Record 1UsingSub-
IndexonFileNAME2
SetLINKNumber and
NUMSEGS FromDirectory
Record Data
&lt;!-- raw HTML omitted --&gt;NUMSEGS
_Complete
Define IndexinFET
toPointtoMaster
Index
IWrite Sub-lndex For
LinkJustCataloged
asDirect-Access
Record LINKNUM+2
&lt;em&gt;sing Master-lndex)
onFileNAME2
570IReadaSegment FromI
FileNAME1
l
PrintInsufficient L&lt;/em&gt;
_ _- !
WritetheSegment as T
Direct-Access Record (STOP _)I+IUsingtheSub- j
indexonFileNAME2
Figure 37(d). Flowchart forsubroutine XBOOTofthebootstrap program.
7.2-128 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Print Message That
NAME1 MayNotbe
Different FromNAME2
on_PTI_N=&amp;ldquo;ATTACH&amp;rdquo;
Write aMessage
STOP220
or
N/_ME2=&amp;quot; B1ank&amp;quot;
?
YES
750
Insufficiel
cient Core
IOpentheDirect-
Access FileNAMEI
i
&amp;lsquo;Read inSubindex For
LinkO,Which is
Record 2,Using the
Master Index
1Define FETtoPoint
toThisSubindex
JustRead
IReadinLink0Direc-
tory=Record lUsing
theSubindex
iI
SetLink0&amp;quot;Supermain&amp;quot;L
Length
]ReadinSupermain =
Record 3Using the
Sub-lndex
Supermain isRead
Directly Intoits
Permanent Location
inC)re
1I
Redefine FETinits I
Permanent LocationIinSupermain
MoveMaster Index
FromWorking FETto
Permanent Location
lOl8inCore
ransfer Control tOre_cation I018inCo
Figure 39(e). Flowchart forsubroutine XB_T ofthebootstrap program.
7.2-129 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINK
1StoreinWord8of
theFETtheMaster
IndexAddress and
Length
Compare theRequested
LinkNumber Withthe
Master IndexLength
toDetermine ifitis
inRange
ICallLINKERR to 1
theLink_ NO.]WriteMessage &amp;ldquo;LINKi
Number inJ &amp;ldquo;|NUMBER ISOUTOFI
&amp;ldquo;&amp;rsquo;,,_ngej,-/ L&amp;hellip;_NGE.&amp;rdquo; _
j&amp;rsquo;&lt;em&gt;Relative Track&lt;/em&gt; YES ReadintheSub-&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
?Check LinkNum}_er in
Directory toVerify
WeHaveCorrect Link
atHand
Check ForSufficient
CoretoLoadLowest
Segment ofLinkNO
NO
Read inRecord 2UsingI
Subindex. This is I
theRootSegment ForI
theLink
ITurn onLeft-Most Bit
inSEGTAB$ Segment l
Word toIndicate
Segment lisinCore
Branch toEntry PointoftheLinkinthe
Rootsegment JustLoaded
(ACTUAL EXIT)ICallLINKERR toWrite I
_lMessage INCORRECT
IDIRECTQRY RECORD FQR
ICallLINKERR toWrit_Message &amp;ldquo;INSUFFICIENT
C_RE F_RLINK&amp;ndash;.&amp;quot;;CSTOP
STOP
Figure 40(b). Flowchart forsubroutine LINKofthesegment loader.
7.2-131(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LOADER.
1Determine Address of
theENTAB$ Entry
WhichCalled L_ADER.
1
ickOffSegment NumberromLastWordof I
NTAB$Entry(Thisis
heSegment inWhichtheI
ntryPointoftheTrue
allResides)
1LookatSEGTAB$ Entry |
ForThisSegment and
NoteifitisLoaded
l(Bit59willbeonif
[Segment isinCore)MovetheActual Jump-
BackInstruction From
theNext-to-Last Word
intheENTAB$ Entry,
totheTrueEntryPoin
Given intheRight18
BitsoftheLastWord
intheENTAB$ Entry.
IIftheNumber ofArgu-
ments asGiven inthe
Right18Bitsofthe
ThirdWordFromthe
Bottom oftheENTAB$
EntryisGreater Than
6,theNumber ofArgu-
mentAddresses Over6
asStored intheTop
oftheENTAB$ Entry
areMovedtotheStor-
ageAreaintheCalled
RoutineNO
Transfer Control tothe_TrueEntry+1asGiven
intheLastWordofthe
&lt;em&gt;,,ENTAB$ EntryISaveBRegistersB1Through B6
ITurnonMARKED-FOR- IL_ADBitForSEGTAB$ I
EntryofSegment in|
TreeIfIN-CORE BitOf&lt;/em&gt;
]PickupParent
Segment Number of
Segment JustMARKED-
IF_R-L_AD
_ _NO
/
PickupWordin I
SEGTAB$ ForThis
Segment
Figure 41(a). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-132 (611171)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P103</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_103/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
SetLoadOrigin
Address ofHighest
Segment tobeLoaded
FromLastSEGTAB$
Entry MARKED-F_R-
L_AD
PickOffRegion Number
ofLastSegment MARKED-
F_R-L_AD inSEGTAB$
Entry
Sweep Through SEGTAB$
Entries andFindFirst
Segment Having Same
Region Number asSeg-
ments MARKED-F_R-L_AD
PickupNextSEGTAB$
Entry inRegion
Restore BRegisters Y_e OutRegion
ADBit
BitonandDoes Se,
HaveanOrigin Lower Than
TreeBeing Loaded
?ReadSegment Into |
CoreandTurnOff
MARKED-F_R-L_AD Bit
andTurnonIN-C_RE
Bit
I
Turn OffIN-C_RE |
BitForSegment
r
Figure 41(b). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-133 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4 Subroutine Descriptions
Thissection contains descriptions forlinkage editor subroutines, whichareclassified in
fourcategories:
I.Majorsubroutines. ThesearecodedinF_RTRAN andarenamedLKEDxxx, where
I00&amp;lt;xxx&amp;lt;299. Ingeneral thesesubroutines operate onthelinkage editor tables in
working storage.
2.Linkage editor utilities. TheseareC_MPASS routines thenamesofwhicharerelated
tothefunction theyperform. Theyareallentry points insubprograms namedLKEDxxx,
where300&amp;lt;xxx&amp;lt;399.Mostoftheseroutines perform tasksdirectly related tothe
linkage editor suchasfieldmanipulation oftableentries.
3.General utilities. TheseareC_MPASS andF_RTRAN routines theprimary functions of
whicharegeneral innature andnotlimited tolinkage editor applications. Nonaming
convention exists forthegeneral utilities. Several oftheseroutines (e.g., XRCARD,
MAPFNS) areusedintheNASTRAN program.
4.Miscellaneous. Thesearewritten primarily inFORTRAN andperform auxiliary tasksfor
thelinkage editor. Thenaming convention isLKEDxxx, where900_xxx_999.Anexample
isLKED990, aroutine which abnormally terminates thelinkage editor intheeventofan
error inthelogic.
Muchofthecommunication amonglinkage editor subroutines isviasevennamedcommon blocks,
LKEDCxx, where Ol_xx_07.Section 7.2.6givesdefinitions oftheprincipal variables inthese
common blocks.
Table 2givesinalphabetical order theentrypoints described insection 7.2.4alongwith
thesubsection numbers where thedescriptions canbefound.
7.2-134 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Table 2.Entry Points Described inSection 7.2.4.
Entry Point Section Number Entry Point
ABSENT. 7.2.4.3.5 REINDX
ANDF 7.2.4.3.21 REPLTAB
CALLCHN 7.2.4.2.8 RSHIFT
CHARTST 7.2.4.2.12 RSHIFTX
COMPARE 7.2.4.3.4 SEGPATH
COMPLF 7.2.4.3.21 STOEXT
CONVERT 7.2.4.2.10 SYMHASH
CORDUMP 7.2.4.3.6 TEXTTAB
C_RWDS 7.2,4.3.24 UNPK
FIELDLN 7.2,4.3.27 UNPKI2
FILLTAB 7.2.4.2.21 UNPK30
GETEXT 7.2.4.2.17 UNPKCAL
HASH 7,2.4,2,30 UNPKEP
LINK20. 7.2.4.3.28 UNPKID
LINKERR 7.2.4.3.29 UNPKMSK
LINKTBI 7.2,4.2.22 UNPKSYM
LINKTB2 7.2,4.2.22 UNPKXRF
LKEDIO0 7.2,4.1.I UNPKXX
LKEDI50 7.2.4,1.2 WRITEX
LKED175 7.2.4.1.3 XBKPREC
LKED200 7.2.4.1.4 XBKREC
LKED201 7.2.4.1.4 XCL_SE
LKED900 7.2.4.4.1 XDUMP
LKED990 7.2.4.4.2 XEOF
LKED995 7.2.4.4.3 XEVICT
LSHIFT 7.2.4.3.21 XFETCH
LWORDS 7.2,4.3.23 XFRDREC
N_W 7.2.4.2.19 XJUMP
ORF 7.2.4.3.21 XOPEN
PACK 7.2.4.2.3 XRCARD
PACK12 7.2.4.2.6 XREAD
PACKCAL 7.2.4.2.16 XREQST
PACKDMP 7.2.4.2.26 XREWIND
PACKSYM 7.2.4.2.2 XSTORE
PACKXRF 7.2.4.2.27 XTRACE
PACKXX 7.2.4.2.14 XWRITE
READX 7.2.4.3.15 ZAPSection Nu_er
7,2.4.3.11
7.2.4,2.23
7.2.4.3.21
7.2.4.2.11
7.2.4.2.9
7.2.4.2.18
7.2.4.2.7
7.2.4.2.20
7.2.4.2.4
7.2.4.2.5
7.2.4.2.24
7.2.4.2.15
7,2.4.2,29
7.2.4.2.25
7.2.4.2.4
7.2.4.2.1
7.2.4.2.28
7.2.4.2.13
7.2.4.3.14
7.2.4.3.19
7.2.4.3.17
7.2.4.3.9
7.2.4.3,3
7.2.4.3.7
7.2.4.3.10
7.2.4.3.22
7.2.4.3.18
7.2.4.3.25
7,2.4.3.8
7.2.4.3.1
7.2.4.3.13
7.2.4.3.20
7.2.4.3.16
7.2.4.3.22
7.2.4.3.2
7.2.4.3.12
7.2.4.3.26
7.2-135 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.1 Major Subroutines
7.2.4.1.1 LKEDIO0
Subprogram name: LKEDIO0
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tolocate anentry intheGeneral Table. Ifnoentry isfound andanoption is
selected, anewentry intheGTiscreated.
Calling Sequence:
CALL LKEDIOO(NAME,POINTER,ZPOINT,SEGNO,STATUS,FLAG)
NAME -(input) symbolic name, left justified, zero filled
POINTER -(output) relative location ofentry iffound orcreated; zero ifnotfound
andnotcreated
ZP_INT -(output) ITABO+POINTER iffoundorcreated; undefined otherwise, where
ITABOisazeropointer totheGT
SEGNO -(input) ifentry isnotfoundandFLAG#0andSEGNO_O,thenewlycreated
entry ischained tothesegment defined bySEGNO.
STATUS -(output) ifentrywasnotfound (whether created ornot),STATUS =-I.
Otherwise, STATUS =CLASS (seesection 7.2.2.1.9) ofentry (0_STATUS _7)
FLAG (input). Ifentry isfound, FLAGisignored. Ifentry isnotfoundand
FLAG:O,return ismadewithPOINTER =0andSTATUS =-I.Otherwise,
(i.e., FLAG_0),anewentry iscreated andPOINTER points toitwhile
STATUS =-Iindicates thiscase.
Method: HASH(section 7.2.4.2.30) iscalled toobtain thehashnumber forNAME. SYMHASH
(section 7.2.4.2.7) iscalled tolocate theentry intheGeneral Table. Iftheentry isin
thetable, thenreturn isgivenwithPOINTER pointing totheentry, ZP@INT =ITABO+P_INTER
andSTATUS :CLASSoftheentry. Iftheentry isnotinthetableandFLAG=O,return is
givenwithP_INTER =0andSTATUS =-I.Otherwise anewentryiscreated intheGT.If
SEGNO_O,thenewentry ischained tothesegment chaindefined bySEGNO. Return isgiven
withPOINTER pointing tothenewentry, ZPOINT =ITABO+POINTER andSTATUS =-I.
7.2-136 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Language: F_RTRAN
7.2.4.l.2 LKEDI50
LKEDI50
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Todelink asymbol entry intheGeneral Table from itsposted segment chain and
linktheentry toanewsegment chain.
Callinq Sequence:
CALLLKEDI50(P_INTER,ZP_INT,SEGNBR)
P_INTER -(input) points toanentry intheGT.
ZP_INT -(input) =TABO+P_INTER, where ITABO isthezeropointer totheGT
SEGNBR &amp;ndash;(input) newsegment number towhich entry isnowtobelinked
Method: Theposted segment number andsegment chain pointers areobtained fromthe3rd
word oftheGTentry byUNPKXX (section 7.2.4.2.13). Thebeginning andending segment
chain pointers areobtained fromtheSCTbyUNPKI2 (section 7.2.4.2.5). Theentry isthen
delinked (removed) fromtheposted segment chain. Segment chain pointers forthenewsegment
(defined bySEGNBR) areobtained fromtheSCTbyUNPKI2. Theentry isnowlinked (added) to
theendofthenewsegment chain. Updated chain pointers forboth theoldandnewsegment
chains arestored intheSCT. Anupdated 3rdword oftheGTentry isstored.
Language: F_RTRAN
7.2.4.1.3 LKED175
Subprogram name: LKEDI75
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: ToPerform therename function (seesection 5.6.4.9)
Calling Sequence:
CALLLKEDI75(NAME,DKNAME,NEWSTAT)
NAME (input/output) nameoftheexternal reference tobetested forrenaming.
therename occurs, NAMEisreplaced bythenewname.If
7.2-137 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DKNAME (input) nameofsubprogram inwhichNAMEisanexternal reference
NEWSTAT -(output) alogical variable setto.TRUE., ifarename occurred; .FALSE.,
otherwise.
Method: NEWSTAT issetto.FALSE.. IftheRename Tableisempty, return isgiven. Other-
wise, HASH(section 7.2.4.2.29) andSYMHASH (section 7.2.4.2.7) arecalled tolocate the
entry intheRename Table. Iftheentryisnotinthetable, return isgiven. Otherwise,
NAMEissettothenewname,NEWSTAT issetto.TRUE., andreturn isgiven.
Lanquage: F_RTRAN
7.2.4.1.4 LKED200
Subproqram name: LKED200
Typeofroutine: Subroutine
Alternate entrypoints: LKED201
Purpose: Todetermine ifacall(external reference) isinthepathofthesubprogram making
thecall. Ifthecallisnotinthepath,anentryisaddedtothecallchainofthecurrent
subprogram andlinked totheENTAB$ chainofthecalling segment. LKED201 performs allthe
logicasLKED200 doesexcept thepathtest.
Callinq Sequence:
LKE02001CALLILKED2011 (TOPTR,TOSEG,FROMSEG)
TOPTR (input) pointer inGTtoentrydefining thesymbol called (external reference).
TOSEG (input) segment number ofexternal reference
FROMSEG -(input) segment number fromwhich calloriginates.
Method: Ifentrycomesthrough acalltoLKED200, thenSEGPATH (section 7.2.4.2.9) iscalled
todetermine ifthecallisinthepath. Ifitis,return isgiven. Otherwise, codecommon
withLKED201 isexecuted. CALLCHN (section 7.2.4.2.8) iscalled todetermine ifanyentry
isalready inthecallchain. Ifso,return isgiven. Ifnot,anentry inthecallchain
iscreated. Theentryislinked totheENTAB$ chainforthesegment defined byFRBMSEG.
Thefields oftheentryarecompleted andreturn isgiven.
Languaqe: FORTRAN
7.2-138 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.2LinkageEditorUtilities
7.2.4.2.1 UNPKSYM
Subproqram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack intoIIwordstheIIfields ofa3-word symbol entryintheGeneral
Table (seesection 7.2.2.1.9)
Callinq Sequence:
CALLUNPKSYM(Z(ZPOINT),ITEMS)
Z(ZP_INT) -(input) address oftheIstwordofthesymbol entry
ITEMS -(output) address ofanarrayofdimension IIwhere thefields oftheentry
willbestored asfollows:
(I)Symbol name
(2)CLASS
(3)P1
(4)INDEX
(5)L
(6)Pc
(7)PN
(8)SEG
(9) A
(lO) PREV
(ll) NEXT
Note: theARGbitisnotunpacked
Method: Fields areextracted using bitmasks constructed bytheMXiinstruction shifts and
logical products.
Language: C_MPASS
7.2-139 (6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.2.2 PACKSYMNASTRAN SUPPORT PROGRAMS
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TostoretheIIfields ofa3-word symbol entryintheGeneral Table froman
ll-word array(seesection 7.2.2.1.9)
Callinq Sequence:
CALLPACKSYM(Z(ZP_INT),ITEMS)
Thearguments aredefined asinUNPKSYM (seesection 7.2.4.2.1)
Method: Eachwordofthe3-word entryisconstructed usingshiftandlogical suminstructions.
Fields arenotexamined formaximum size.
Language: C_MPASS
7.2.4.2.3 PACK
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: PACKMSK
Purpose: Tostoreasingle iteminawordwhichcontains morethanoneitem.
Calling Sequence:
CALLPACK(ENTRY,ITEM,BIT,WIDTH)
CALLPACKMSK(ENTRY,ITEM,BIT,MASK)
ENTRY-(output) address ofwordwhere ITEMistobestored
ITEM (input) itemtobestored
BIT (input) position ofthelow-order bitinthefieldinENTRYwhere ITEMistobe
stored (numbering convention isthatthehighorderbitinawordis59andthe
loworderbitisO.Bitsarenumbered fromlefttoright).
WIDTH -(input) widthofthefieldinbitpositions
MASK-(input) amaskofl-bits intheloworder position oftheword,thenumber of
l-bits isthewidthofthefieldwhere ITEMisstored. Theremainder ofMASK
mustbezero-filled.
7.2-140 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: IFPACK iscalled, amaskof&amp;quot;l&amp;quot;bitsspecified byWIDTH isconstructed inthe
low-order partofaword, with theremainder ofthewordzero-filled. IfPACKMSK iscalled,
thisstepisnotnecessary. Thewordspecified byENTRYiis fetched, shifted according to
BIT,therequested field iscleared using alogical product with thecomplement ofMASK,
ITEMisentered using alogical sum,thewordisshifted toitsoriginal position, andstored
backinmemory.
Language: CI_MPASS
7.2.4.2.4 UNPK
Subprogram name: LKED300
Type ofroutine: Integer function
Alternate entry points: UNPKMSK
Purpose: Toextract asingle itemfrom awordwhich contains more thanoneitem.
Callinq Sequence:
ITEM=UNPK(ENTRY,BIT,WIDTH)
ITEM=UNPKMSK(ENTRY,BIT,MASK)
Where thearguments aredefined asinPACKandPACKMSK (seesection 7.2.4.2.3)
Method: IfUNPKiscalled, amaskof&amp;quot;l&amp;quot;bits specified byWIDTH isconstructed inthelow-
order partoftheword, withtheremainder oftheword zero-filled. IfUNPKMSK iscalled,
thisstepisunnecessary. Thewordspecified byENTRY isfetched, shifted according toBIT
andtheitemisextracted using alogical product. ENTRY remains unchanged inmemory.
Language: C_MPASS
7.2.4.2.5 UNPKi2
Subprogram name: LKED300
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack four15-bit items fromaone-word entry oreight 15-bit items fromatwo-
word entry.
7.2-141(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLUNPKI2(ENTRY,ITEMS,K)
ENTRY-(input) address oftheIstwordofaone-word ortwo-word entry.
ITEMS-(output) address oftheIstwordofa4-word or8-word arraywherethe
unpacked itemswillbestored, right-adjusted, zero-filled
K
Method :
Language:(input) 1or2specifying thenumber ofwords tobeunpacked
Itemsareextracted usinga15-bit mask, logical product and15-bit shiftinstructions.
C_MPASS
7.2.4.2.6 PACK12
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topackfour15-bit items intoaone-word entryoreight 15-bit itemsintoatwo-
wordentry.
Call_____ing Sequence:
CALLPACKI2(ENTRY,ITEMS,K)
where thearguments aredefined asinUNPKI2 (seesection 7.2.4.2.5)
Method: Usingashiftandlogical sum,theitemsarepacked together.
Note: Itemsarenotexamined formaximum size(_15bits)
Lanquaqe: COMPASS
7.2.4.2.7 SYMHASH
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Tolocate asymbol entryinatable
Calling Sequence:
P_INTER =SYMHASH(TABLE,NAME,HASHNBR,STATUS)
7.2-142 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
TABLE -(input) address oftheOthword inthetable (i.e., address ofthe
Istwordminus one)
NAME -(input) symbol tobelocated, left-justified, zerofilled
HASHNBR -(input) hashnumber ofthesymbol
POINTER andSTATUS -(output) ifentry forsymbol isnotintable:
POINTER =0
STATUS points tolastentry insymbol chain.
ifentry isintable:
POINTER points toentry
STATUS =CLASS ofentry
Method: Beginning with theentry towhich HASHNBR points, thesymbol chain issearched for
amatch. Iffound, POINTER andSTATUS aresetasdefined above. Iftheendofchain is
encountered before amatch occurs, P_INTER issettozero andSTATUS issettopoint tothe
lastentry inthesymbol chain.
Language: COMPASS
7.2.4.2.8 CALLCHN
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Totrace thechain ofcalls toasymbol.
Calling Sequence:
POINTER =CALLCHN(TABLE,CALLPTR,FROMSEG,STATUS)
TABLE -(input) address ofOthword intable
CALLPTR -(input) pointer toentry ofsymbol called
FROMSEG -(input) segment number fromwhich calloriginates
POINTER andSTATUS -(output) ifnochain exists:
POINTER =STATUS =0
ifcall isalready inchain:
POINTER =O,STATUS _0
7.2-143 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ifcallisnotinchain:
POINTER points tolastentryincallchain
STATUS _0
Method: Acallchainexists iftheARGbit=0andPc#O.Thissituation istested. If
nottrue,return ismadewithPOINTER =STATUS =O.Acallisdefined tobealready inthe
chainifthesegment number fromwhichthecalloriginates matches theFROMfieldofthecall
entry. Thechainissearched forthiscondition. Iffound, POINTER andSTATUS aresetas
defined above. Otherwise, P_INTER points tothelastentryinthechainandSTATUS isset
tononzero.
Language: C@MPASS
7.2.4.2.9 SEGPATH
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Todetermine ifthesegment called isinthepathofthesegment fromwhich the
callismade.
Calling Sequence:
LVAR=SEGPATH(Z(ISEGDO),TOSEG,FROMSEG)
LVAR -(output) logical variable whichis.TRUE. ifcallisinthepath; .FALSE.
otherwise
Z(ISEGDO) -(input) address oftheOthwordoftheSegment Definition Table
TOSEG -(input) segment number towhichcallismade
FROMSEG -(input) segment number fromwhich callismade
Method: Starting withtheentryintheSDTtowhich FROMSEG points, theparent oftheseg-
mentischecked. Ifitmaches T_SEG, LVARissetto.TRUE. andSEGPATH returns. Ifthe
parent iszero,LVARissetto.FALSE. andreturn isgiven. Otherwise, thesegment to
which theparent points isfetched andthetestsrepeated.
Language: COMPASS
7.2-144 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.2.10 CONVERT
Subproqram name: LKED300
Typeofroutine: Integer Function
Alternate entry Points: None
Purpose: Toconvert asymbol stored ina2-word array of4characters perword, left
justified, blank filled (NASTRAN format) toasingle word, left-justified, zerofilled.
Callinq Sequence:
NEWNAME =CONVERT(OLDNAME)
OLDNAME -(input) 2-word array of4characters perword, leftjustified, blank filled
NEWNAME -(output) oneword, leftjustified, zerofilled
Method: Eachcharacter of_LDNAME istested until ablank character isfound or8characters
havebeenexamined. Character positions starting withtheblank andthose succeeding areset
tozero.
Languaqe: COMPASS
7.2.4.2.11 RSHIFTX
Subprogram name: LKED300
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Toshift acomputer word totheright aspecified number ofbitpositions.
Callin 9Sequence:
SHIFTED =RSHIFTX(NUMBER,N)
SHIFTED -(output) shifted word
NUMBER -(input) computer word tobeshifted
N -(input) number ofbitpositions toshift
Method: Thenumber isassumed tohavethehighorder bitequal tozero (this isnottested).
TheAXiinstruction isused.
Lanquaqe: COMPASS
7.2-145 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.12 CHARTST
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Totestaposition inaXRCARD output buffer (seesection 3.4.19) foraspecific
delimiter.
Callinq Sequence:
LVAR=CHARTST(_UTBUF(K),CHAR)
LVAR -(output) logical variable whichis.TRUE. ifOUTBUF(K) andOUTBUF(K+I)
contain thespecified delimiter; .FALSE. otherwise
_UTBUF(K) -(input) address ofa2-word arrayofcharacters stored 4characters per
word, leftjustified, blankfilled
CHAR (input) address ofacharacter stored inIHformat (i.e., leftjustified,
blankfilled)
Method: Letthecharacter beCandablankbeb.Thenthetwowords at_UTBUF(K) and
_UTBUF(K+I) mustbeCbbbbbbbbb andbbbbbbbbbb. Thewordsaretested forthatcondition.
Ifthecondition issatisfied, LVARissetto.TRUE.. Ifnot,LVARissetto.FALSE..
Language: C_MPASS
7.2.4.2.13 UNPKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack the2ndor3rdwordofasymbol entry intheGeneral Table (seesection
7.2.2.1.9).
Calling Sequence:
CALLUNPKXX(Z(1),ITEMS)
Z(1)-(input) address ofthewordtobeunpacked (2ndor3rdwordofaGTentry)
ITEMS-(output) address ofa4-word arraywhere thefouritemswillbestored.
7.2-146 (6/i171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: Usingappropriate bitmasks, shifts, andlogical products, thefields oftheword
areextracted andstored.
Language: COMPASS
7.2.4.2.14 PACKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topack4itemsintothe2ndor3rdwordofasymbol entryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKXX(Z(I),ITEMS)
wherethearguments aredefined inUNPKXX (seesection 7.2.4.2.13)
Method: Usingappropriate shifts andlogical sums,theitemsarepacked intoasingle word
andstored inthetable. Theitemsarenotchecked forbeingwithin thespecified field
width.
Languaqe: COMPASS
7.2.4.2.15 UNPKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsinthefirsttwowordsofacallentryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLUNPKCAL(Z(1),ITEMS)
Z(1) (input) address ofcallentryinGT
ITEMS-(output) a9-word arraywheretheitemsfromthefirsttwowordsofthecall
entryarestored asfollows:
(I)PREV
(2)NEXT
7.2-147 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
(3)NBRARG
(4)CLASS=6
(5)P1
(6)FR(_M
(7)PFR(_M
(8)PNEXT
(9)PSYM
Method.&amp;quot; Theitemsareextracted usingappropriate bitmasks, shifts, andlogical products.
Lanouaqe: C_MPASS
7.2.4.2.16 PACKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topacktheitemscomprising thefirsttwowordsofacallentry intheGeneral
Table (seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKCAL(Z(1),ITEMS)
wherethearguments aredefined asinUNPKCAL (seesection 7.2.4.2.15)
Method: Theitemsarepacked usingshifts andlogical sums. Fieldwidthsizesarenot
checked.
Language: COMPASS
7.2.4.2.17 GETEXT
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toconvert asingle wordanexternal reference intheLINKTable (seesection
7.2.5) whenitissplitbetween twowords.
7.2-148 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINICAGE EDITOR
Callinq Sequence:_
EXTNAME =GETEXT(Z(J))
EXTNAME -(output) external reference
Z(J) (input) address ofthefirst oftwowords where theexternal reference is
stored intheright half ofZ(J) andtheleft half ofZ(J+l)
Method: Using a30-bit mask, shifts, andlogical products, theexternal reference is
constructed from thetwowords.
Lanquaqe: C_MPASS
7.2.4.2.18 STOEXT
Subproqram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tostore anexternal name intheLINK Table (see section 7.2.5) when thename is
split between twowords. ST_EXT istheinverse ofGETEXT (section 7.2.4.2.17)
Calling Sequence:
CALL ST_EXT(Z(J),EXTNAME)
where thearguments aredefined asinGETEXT
Method: Using masks andshifts, EXTNAME issplit into twohalves andstored intheright
half ofZ(J) andleft half ofZ(J+l).
Lanquaqe: C_MPASS
7.2.4.2.19 N_W
Subprogram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Pur_E]_ose: Toreturn thedate andtime ofday
Callinq Sequence:
CALLN_W(A)
A-(output) address ofatwo-word arraywhere
7.2-149 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
A(1)=timeofday(BCD)
A(2)=date
Method: ThetimeofdayisfoundusingtheSC_PECLOCKmacro, andthedateisfoundusing
theDATEmacro.
Language: C_MPASS
7.2.4.2.20 TEÃ—TTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation oftextwords inaTEXTTable (seesection 7.2.5)
Calling Sequence:
CALLTEXTTAB(Z(L_C),Z(1),N,ADDRESS)
Z(LOC) (output) address where thefirstwordofrelocated textwillbestored
Z(1) (input) address offirstwordofTEXTTable.
N (input) number ofwords inTEXTTable
ADDRESS -(input) relocation address (i.e., address ofsubprogram orcommon block to
whichtextrefers)
Method: Seesection 7.2.5foradescription oftheTEXTTableofasubprogram. Thefirst
wordofaTEXTTableisarelocation indicator word. Itisusedtodetermine whatkindof
relocation applies toeachoftheaddress fields intheremaining wordsoftheTEXTTable.
Lanquaqe: COMPASS
7.2.4.2.21 FILLTAB
Subproqram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation ofaddress specified bytheFILLTable
Callinq Sequence:
CALLFILLTAB(Z(ITEXT),Z(JLCTO),Z(J),N,LR)
7.2-150 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z(ITEXT) -(output) address oftheIstword oftext forthecontrol section currently
being constructed
Z(JLCTO) -(input) address oftheOthword oftheLocal Common Table (LCT) (see section
7.2.5)
Z(J) (input) address oftheIstword oftheFILL Table
N -(input) nun_er ofwords intheFILL Table
LR (input) pointer intheLCTtothecontrol section currently being constructed.
Method: Seesection 7.2.5 foradescription oftheFILL Table ofasubprogram. A30-bit
byte isextracted from theFILL Table. Ifitisacontrol byte, therelocated address is
fetched from theLCT. Ifitisadata byte, thetext word containing thereference tobe
relocated isfetched, therelocation isperformed (upper, middle orlower depending onP),
andtherelocated word isstored back inthetext area. This process isrepeated foreach
30-bit byte until theendofthetable isencountered.
Language: COMPASS
7.2.4.2.22 LINKTBI
Subprogram name: LKED320
Type ofroutine: Function
Alternate entry points: LINKTB2
Purpose: LINKTBI returns anexternal name from theLINK Table (see section 7.2.5), and
LINKTB2 performs relocation ofallreferences totheexternal name.
Calling Sequences:
EXTNAME =LINKTBI(Z(IO),J,SWITCH)
LVAR =LINKTB2(ADDRESS,Z(ITEXT),LBC)
EXTNAME
J
SWITCH
Z(IO)
LVAR-(output) name ofexternal reference
-(input/output) current pointer inLINK Table (starting with l)
-(input) current byte pointer (-=high order, +=loworder)
-(input) address ofOthword inLINK Table
(output) logical variable which if.TRUE. means thenext call must beto
LINKTB2 andif.FALSE. means thenext call must betoLINKTBI. Note:
7.2-151 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINKTBI isalways called firstatthebeginning oftheanalysis oftheLINK
Table.
ADDRESS -(input) address oftheexternal namereturned fromlastLINKTBI call.
Z(ITEXT) -(input/output) address offirstwordoftextbeingconstructed.
L_C (input) relative address intextofexternal reference toberelocated.
Method: Seesection 7.2.5foradescription oftheLINKTableofasubprogram. LINKTBI
extracts thenameoftheexternal reference. Ifthebyteswitch isplus,thenameissplit
between twowords. Theaddresses ofthearguments oftheLINKTBI callaresavedandrestored
atentrytoLINKTB2. Actual relocation ofreferences totheexternal nameareperformed by
thealternate entry. Depending ontherelocation bits,thewordlocated atZ(ITEXT +LOC)is
relocated andreturned tomemory. Thebyteswitch, LINKTablepointer, andlogical variable
aresetandreturn ismade.
Lanquaqe: COMPASS
7.2.4.2.23 REPLTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation specified byaREPLTable (seesection 7.2.5) ofasubprogram
Calling Sequence:
CALLREPLTAB(Z(J),Z(ITEXT),N,LR)
Z(J) -(input) address oftheOthwordoftheREPLTable (i.e., theIDword)
Z(ITEXT) -(input/output) address ofthefirstwordoftextbeingconstructed
N (input) number ofwords inREPLTable
LR (input) pointer inLCTtothecontrol section currently beingconstructed.
Method: Seesection 7.2.5foradescription oftheREPLTableofasubprogram. Dataitems
arebuilt, relocated, andstored inthetextareaasafunction oftheparameter intheREPL
Table.
Lanquaqe: C_MPASS
7.2-152 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P103</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_103/</guid>
      <description>
        
        
        &lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
SetLoadOrigin
Address ofHighest
Segment tobeLoaded
FromLastSEGTAB$
Entry MARKED-F_R-
L_AD
PickOffRegion Number
ofLastSegment MARKED-
F_R-L_AD inSEGTAB$
Entry
Sweep Through SEGTAB$
Entries andFindFirst
Segment Having Same
Region Number asSeg-
ments MARKED-F_R-L_AD
PickupNextSEGTAB$
Entry inRegion
Restore BRegisters Y_e OutRegion
ADBit
BitonandDoes Se,
HaveanOrigin Lower Than
TreeBeing Loaded
?ReadSegment Into |
CoreandTurnOff
MARKED-F_R-L_AD Bit
andTurnonIN-C_RE
Bit
I
Turn OffIN-C_RE |
BitForSegment
r
Figure 41(b). Flowchart forsubroutine L_ADER. ofthesegment loader.
7.2-133 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4 Subroutine Descriptions
Thissection contains descriptions forlinkage editor subroutines, whichareclassified in
fourcategories:
I.Majorsubroutines. ThesearecodedinF_RTRAN andarenamedLKEDxxx, where
I00&amp;lt;xxx&amp;lt;299. Ingeneral thesesubroutines operate onthelinkage editor tables in
working storage.
2.Linkage editor utilities. TheseareC_MPASS routines thenamesofwhicharerelated
tothefunction theyperform. Theyareallentry points insubprograms namedLKEDxxx,
where300&amp;lt;xxx&amp;lt;399.Mostoftheseroutines perform tasksdirectly related tothe
linkage editor suchasfieldmanipulation oftableentries.
3.General utilities. TheseareC_MPASS andF_RTRAN routines theprimary functions of
whicharegeneral innature andnotlimited tolinkage editor applications. Nonaming
convention exists forthegeneral utilities. Several oftheseroutines (e.g., XRCARD,
MAPFNS) areusedintheNASTRAN program.
4.Miscellaneous. Thesearewritten primarily inFORTRAN andperform auxiliary tasksfor
thelinkage editor. Thenaming convention isLKEDxxx, where900_xxx_999.Anexample
isLKED990, aroutine which abnormally terminates thelinkage editor intheeventofan
error inthelogic.
Muchofthecommunication amonglinkage editor subroutines isviasevennamedcommon blocks,
LKEDCxx, where Ol_xx_07.Section 7.2.6givesdefinitions oftheprincipal variables inthese
common blocks.
Table 2givesinalphabetical order theentrypoints described insection 7.2.4alongwith
thesubsection numbers where thedescriptions canbefound.
7.2-134 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Table 2.Entry Points Described inSection 7.2.4.
Entry Point Section Number Entry Point
ABSENT. 7.2.4.3.5 REINDX
ANDF 7.2.4.3.21 REPLTAB
CALLCHN 7.2.4.2.8 RSHIFT
CHARTST 7.2.4.2.12 RSHIFTX
COMPARE 7.2.4.3.4 SEGPATH
COMPLF 7.2.4.3.21 STOEXT
CONVERT 7.2.4.2.10 SYMHASH
CORDUMP 7.2.4.3.6 TEXTTAB
C_RWDS 7.2,4.3.24 UNPK
FIELDLN 7.2,4.3.27 UNPKI2
FILLTAB 7.2.4.2.21 UNPK30
GETEXT 7.2.4.2.17 UNPKCAL
HASH 7,2.4,2,30 UNPKEP
LINK20. 7.2.4.3.28 UNPKID
LINKERR 7.2.4.3.29 UNPKMSK
LINKTBI 7.2,4.2.22 UNPKSYM
LINKTB2 7.2,4.2.22 UNPKXRF
LKEDIO0 7.2,4.1.I UNPKXX
LKEDI50 7.2.4,1.2 WRITEX
LKED175 7.2.4.1.3 XBKPREC
LKED200 7.2.4.1.4 XBKREC
LKED201 7.2.4.1.4 XCL_SE
LKED900 7.2.4.4.1 XDUMP
LKED990 7.2.4.4.2 XEOF
LKED995 7.2.4.4.3 XEVICT
LSHIFT 7.2.4.3.21 XFETCH
LWORDS 7.2,4.3.23 XFRDREC
N_W 7.2.4.2.19 XJUMP
ORF 7.2.4.3.21 XOPEN
PACK 7.2.4.2.3 XRCARD
PACK12 7.2.4.2.6 XREAD
PACKCAL 7.2.4.2.16 XREQST
PACKDMP 7.2.4.2.26 XREWIND
PACKSYM 7.2.4.2.2 XSTORE
PACKXRF 7.2.4.2.27 XTRACE
PACKXX 7.2.4.2.14 XWRITE
READX 7.2.4.3.15 ZAPSection Nu_er
7,2.4.3.11
7.2.4,2.23
7.2.4.3.21
7.2.4.2.11
7.2.4.2.9
7.2.4.2.18
7.2.4.2.7
7.2.4.2.20
7.2.4.2.4
7.2.4.2.5
7.2.4.2.24
7.2.4.2.15
7,2.4.2,29
7.2.4.2.25
7.2.4.2.4
7.2.4.2.1
7.2.4.2.28
7.2.4.2.13
7.2.4.3.14
7.2.4.3.19
7.2.4.3.17
7.2.4.3.9
7.2.4.3,3
7.2.4.3.7
7.2.4.3.10
7.2.4.3.22
7.2.4.3.18
7.2.4.3.25
7,2.4.3.8
7.2.4.3.1
7.2.4.3.13
7.2.4.3.20
7.2.4.3.16
7.2.4.3.22
7.2.4.3.2
7.2.4.3.12
7.2.4.3.26
7.2-135 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.1 Major Subroutines
7.2.4.1.1 LKEDIO0
Subprogram name: LKEDIO0
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tolocate anentry intheGeneral Table. Ifnoentry isfound andanoption is
selected, anewentry intheGTiscreated.
Calling Sequence:
CALL LKEDIOO(NAME,POINTER,ZPOINT,SEGNO,STATUS,FLAG)
NAME -(input) symbolic name, left justified, zero filled
POINTER -(output) relative location ofentry iffound orcreated; zero ifnotfound
andnotcreated
ZP_INT -(output) ITABO+POINTER iffoundorcreated; undefined otherwise, where
ITABOisazeropointer totheGT
SEGNO -(input) ifentry isnotfoundandFLAG#0andSEGNO_O,thenewlycreated
entry ischained tothesegment defined bySEGNO.
STATUS -(output) ifentrywasnotfound (whether created ornot),STATUS =-I.
Otherwise, STATUS =CLASS (seesection 7.2.2.1.9) ofentry (0_STATUS _7)
FLAG (input). Ifentry isfound, FLAGisignored. Ifentry isnotfoundand
FLAG:O,return ismadewithPOINTER =0andSTATUS =-I.Otherwise,
(i.e., FLAG_0),anewentry iscreated andPOINTER points toitwhile
STATUS =-Iindicates thiscase.
Method: HASH(section 7.2.4.2.30) iscalled toobtain thehashnumber forNAME. SYMHASH
(section 7.2.4.2.7) iscalled tolocate theentry intheGeneral Table. Iftheentry isin
thetable, thenreturn isgivenwithPOINTER pointing totheentry, ZP@INT =ITABO+P_INTER
andSTATUS :CLASSoftheentry. Iftheentry isnotinthetableandFLAG=O,return is
givenwithP_INTER =0andSTATUS =-I.Otherwise anewentryiscreated intheGT.If
SEGNO_O,thenewentry ischained tothesegment chaindefined bySEGNO. Return isgiven
withPOINTER pointing tothenewentry, ZPOINT =ITABO+POINTER andSTATUS =-I.
7.2-136 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Language: F_RTRAN
7.2.4.l.2 LKEDI50
LKEDI50
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Todelink asymbol entry intheGeneral Table from itsposted segment chain and
linktheentry toanewsegment chain.
Callinq Sequence:
CALLLKEDI50(P_INTER,ZP_INT,SEGNBR)
P_INTER -(input) points toanentry intheGT.
ZP_INT -(input) =TABO+P_INTER, where ITABO isthezeropointer totheGT
SEGNBR &amp;ndash;(input) newsegment number towhich entry isnowtobelinked
Method: Theposted segment number andsegment chain pointers areobtained fromthe3rd
word oftheGTentry byUNPKXX (section 7.2.4.2.13). Thebeginning andending segment
chain pointers areobtained fromtheSCTbyUNPKI2 (section 7.2.4.2.5). Theentry isthen
delinked (removed) fromtheposted segment chain. Segment chain pointers forthenewsegment
(defined bySEGNBR) areobtained fromtheSCTbyUNPKI2. Theentry isnowlinked (added) to
theendofthenewsegment chain. Updated chain pointers forboth theoldandnewsegment
chains arestored intheSCT. Anupdated 3rdword oftheGTentry isstored.
Language: F_RTRAN
7.2.4.1.3 LKED175
Subprogram name: LKEDI75
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: ToPerform therename function (seesection 5.6.4.9)
Calling Sequence:
CALLLKEDI75(NAME,DKNAME,NEWSTAT)
NAME (input/output) nameoftheexternal reference tobetested forrenaming.
therename occurs, NAMEisreplaced bythenewname.If
7.2-137 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DKNAME (input) nameofsubprogram inwhichNAMEisanexternal reference
NEWSTAT -(output) alogical variable setto.TRUE., ifarename occurred; .FALSE.,
otherwise.
Method: NEWSTAT issetto.FALSE.. IftheRename Tableisempty, return isgiven. Other-
wise, HASH(section 7.2.4.2.29) andSYMHASH (section 7.2.4.2.7) arecalled tolocate the
entry intheRename Table. Iftheentryisnotinthetable, return isgiven. Otherwise,
NAMEissettothenewname,NEWSTAT issetto.TRUE., andreturn isgiven.
Lanquage: F_RTRAN
7.2.4.1.4 LKED200
Subproqram name: LKED200
Typeofroutine: Subroutine
Alternate entrypoints: LKED201
Purpose: Todetermine ifacall(external reference) isinthepathofthesubprogram making
thecall. Ifthecallisnotinthepath,anentryisaddedtothecallchainofthecurrent
subprogram andlinked totheENTAB$ chainofthecalling segment. LKED201 performs allthe
logicasLKED200 doesexcept thepathtest.
Callinq Sequence:
LKE02001CALLILKED2011 (TOPTR,TOSEG,FROMSEG)
TOPTR (input) pointer inGTtoentrydefining thesymbol called (external reference).
TOSEG (input) segment number ofexternal reference
FROMSEG -(input) segment number fromwhich calloriginates.
Method: Ifentrycomesthrough acalltoLKED200, thenSEGPATH (section 7.2.4.2.9) iscalled
todetermine ifthecallisinthepath. Ifitis,return isgiven. Otherwise, codecommon
withLKED201 isexecuted. CALLCHN (section 7.2.4.2.8) iscalled todetermine ifanyentry
isalready inthecallchain. Ifso,return isgiven. Ifnot,anentry inthecallchain
iscreated. Theentryislinked totheENTAB$ chainforthesegment defined byFRBMSEG.
Thefields oftheentryarecompleted andreturn isgiven.
Languaqe: FORTRAN
7.2-138 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.2LinkageEditorUtilities
7.2.4.2.1 UNPKSYM
Subproqram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack intoIIwordstheIIfields ofa3-word symbol entryintheGeneral
Table (seesection 7.2.2.1.9)
Callinq Sequence:
CALLUNPKSYM(Z(ZPOINT),ITEMS)
Z(ZP_INT) -(input) address oftheIstwordofthesymbol entry
ITEMS -(output) address ofanarrayofdimension IIwhere thefields oftheentry
willbestored asfollows:
(I)Symbol name
(2)CLASS
(3)P1
(4)INDEX
(5)L
(6)Pc
(7)PN
(8)SEG
(9) A
(lO) PREV
(ll) NEXT
Note: theARGbitisnotunpacked
Method: Fields areextracted using bitmasks constructed bytheMXiinstruction shifts and
logical products.
Language: C_MPASS
7.2-139 (6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.2.2 PACKSYMNASTRAN SUPPORT PROGRAMS
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TostoretheIIfields ofa3-word symbol entryintheGeneral Table froman
ll-word array(seesection 7.2.2.1.9)
Callinq Sequence:
CALLPACKSYM(Z(ZP_INT),ITEMS)
Thearguments aredefined asinUNPKSYM (seesection 7.2.4.2.1)
Method: Eachwordofthe3-word entryisconstructed usingshiftandlogical suminstructions.
Fields arenotexamined formaximum size.
Language: C_MPASS
7.2.4.2.3 PACK
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: PACKMSK
Purpose: Tostoreasingle iteminawordwhichcontains morethanoneitem.
Calling Sequence:
CALLPACK(ENTRY,ITEM,BIT,WIDTH)
CALLPACKMSK(ENTRY,ITEM,BIT,MASK)
ENTRY-(output) address ofwordwhere ITEMistobestored
ITEM (input) itemtobestored
BIT (input) position ofthelow-order bitinthefieldinENTRYwhere ITEMistobe
stored (numbering convention isthatthehighorderbitinawordis59andthe
loworderbitisO.Bitsarenumbered fromlefttoright).
WIDTH -(input) widthofthefieldinbitpositions
MASK-(input) amaskofl-bits intheloworder position oftheword,thenumber of
l-bits isthewidthofthefieldwhere ITEMisstored. Theremainder ofMASK
mustbezero-filled.
7.2-140 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: IFPACK iscalled, amaskof&amp;quot;l&amp;quot;bitsspecified byWIDTH isconstructed inthe
low-order partofaword, with theremainder ofthewordzero-filled. IfPACKMSK iscalled,
thisstepisnotnecessary. Thewordspecified byENTRYiis fetched, shifted according to
BIT,therequested field iscleared using alogical product with thecomplement ofMASK,
ITEMisentered using alogical sum,thewordisshifted toitsoriginal position, andstored
backinmemory.
Language: CI_MPASS
7.2.4.2.4 UNPK
Subprogram name: LKED300
Type ofroutine: Integer function
Alternate entry points: UNPKMSK
Purpose: Toextract asingle itemfrom awordwhich contains more thanoneitem.
Callinq Sequence:
ITEM=UNPK(ENTRY,BIT,WIDTH)
ITEM=UNPKMSK(ENTRY,BIT,MASK)
Where thearguments aredefined asinPACKandPACKMSK (seesection 7.2.4.2.3)
Method: IfUNPKiscalled, amaskof&amp;quot;l&amp;quot;bits specified byWIDTH isconstructed inthelow-
order partoftheword, withtheremainder oftheword zero-filled. IfUNPKMSK iscalled,
thisstepisunnecessary. Thewordspecified byENTRY isfetched, shifted according toBIT
andtheitemisextracted using alogical product. ENTRY remains unchanged inmemory.
Language: C_MPASS
7.2.4.2.5 UNPKi2
Subprogram name: LKED300
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack four15-bit items fromaone-word entry oreight 15-bit items fromatwo-
word entry.
7.2-141(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLUNPKI2(ENTRY,ITEMS,K)
ENTRY-(input) address oftheIstwordofaone-word ortwo-word entry.
ITEMS-(output) address oftheIstwordofa4-word or8-word arraywherethe
unpacked itemswillbestored, right-adjusted, zero-filled
K
Method :
Language:(input) 1or2specifying thenumber ofwords tobeunpacked
Itemsareextracted usinga15-bit mask, logical product and15-bit shiftinstructions.
C_MPASS
7.2.4.2.6 PACK12
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topackfour15-bit items intoaone-word entryoreight 15-bit itemsintoatwo-
wordentry.
Call_____ing Sequence:
CALLPACKI2(ENTRY,ITEMS,K)
where thearguments aredefined asinUNPKI2 (seesection 7.2.4.2.5)
Method: Usingashiftandlogical sum,theitemsarepacked together.
Note: Itemsarenotexamined formaximum size(_15bits)
Lanquaqe: COMPASS
7.2.4.2.7 SYMHASH
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Tolocate asymbol entryinatable
Calling Sequence:
P_INTER =SYMHASH(TABLE,NAME,HASHNBR,STATUS)
7.2-142 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
TABLE -(input) address oftheOthword inthetable (i.e., address ofthe
Istwordminus one)
NAME -(input) symbol tobelocated, left-justified, zerofilled
HASHNBR -(input) hashnumber ofthesymbol
POINTER andSTATUS -(output) ifentry forsymbol isnotintable:
POINTER =0
STATUS points tolastentry insymbol chain.
ifentry isintable:
POINTER points toentry
STATUS =CLASS ofentry
Method: Beginning with theentry towhich HASHNBR points, thesymbol chain issearched for
amatch. Iffound, POINTER andSTATUS aresetasdefined above. Iftheendofchain is
encountered before amatch occurs, P_INTER issettozero andSTATUS issettopoint tothe
lastentry inthesymbol chain.
Language: COMPASS
7.2.4.2.8 CALLCHN
Subprogram name: LKED300
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Totrace thechain ofcalls toasymbol.
Calling Sequence:
POINTER =CALLCHN(TABLE,CALLPTR,FROMSEG,STATUS)
TABLE -(input) address ofOthword intable
CALLPTR -(input) pointer toentry ofsymbol called
FROMSEG -(input) segment number fromwhich calloriginates
POINTER andSTATUS -(output) ifnochain exists:
POINTER =STATUS =0
ifcall isalready inchain:
POINTER =O,STATUS _0
7.2-143 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ifcallisnotinchain:
POINTER points tolastentryincallchain
STATUS _0
Method: Acallchainexists iftheARGbit=0andPc#O.Thissituation istested. If
nottrue,return ismadewithPOINTER =STATUS =O.Acallisdefined tobealready inthe
chainifthesegment number fromwhichthecalloriginates matches theFROMfieldofthecall
entry. Thechainissearched forthiscondition. Iffound, POINTER andSTATUS aresetas
defined above. Otherwise, P_INTER points tothelastentryinthechainandSTATUS isset
tononzero.
Language: C@MPASS
7.2.4.2.9 SEGPATH
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Todetermine ifthesegment called isinthepathofthesegment fromwhich the
callismade.
Calling Sequence:
LVAR=SEGPATH(Z(ISEGDO),TOSEG,FROMSEG)
LVAR -(output) logical variable whichis.TRUE. ifcallisinthepath; .FALSE.
otherwise
Z(ISEGDO) -(input) address oftheOthwordoftheSegment Definition Table
TOSEG -(input) segment number towhichcallismade
FROMSEG -(input) segment number fromwhich callismade
Method: Starting withtheentryintheSDTtowhich FROMSEG points, theparent oftheseg-
mentischecked. Ifitmaches T_SEG, LVARissetto.TRUE. andSEGPATH returns. Ifthe
parent iszero,LVARissetto.FALSE. andreturn isgiven. Otherwise, thesegment to
which theparent points isfetched andthetestsrepeated.
Language: COMPASS
7.2-144 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.2.10 CONVERT
Subproqram name: LKED300
Typeofroutine: Integer Function
Alternate entry Points: None
Purpose: Toconvert asymbol stored ina2-word array of4characters perword, left
justified, blank filled (NASTRAN format) toasingle word, left-justified, zerofilled.
Callinq Sequence:
NEWNAME =CONVERT(OLDNAME)
OLDNAME -(input) 2-word array of4characters perword, leftjustified, blank filled
NEWNAME -(output) oneword, leftjustified, zerofilled
Method: Eachcharacter of_LDNAME istested until ablank character isfound or8characters
havebeenexamined. Character positions starting withtheblank andthose succeeding areset
tozero.
Languaqe: COMPASS
7.2.4.2.11 RSHIFTX
Subprogram name: LKED300
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Toshift acomputer word totheright aspecified number ofbitpositions.
Callin 9Sequence:
SHIFTED =RSHIFTX(NUMBER,N)
SHIFTED -(output) shifted word
NUMBER -(input) computer word tobeshifted
N -(input) number ofbitpositions toshift
Method: Thenumber isassumed tohavethehighorder bitequal tozero (this isnottested).
TheAXiinstruction isused.
Lanquaqe: COMPASS
7.2-145 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.12 CHARTST
Subprogram name: LKED300
Typeofroutine: Logical Function
Alternate entrypoints: None
Purpose: Totestaposition inaXRCARD output buffer (seesection 3.4.19) foraspecific
delimiter.
Callinq Sequence:
LVAR=CHARTST(_UTBUF(K),CHAR)
LVAR -(output) logical variable whichis.TRUE. ifOUTBUF(K) andOUTBUF(K+I)
contain thespecified delimiter; .FALSE. otherwise
_UTBUF(K) -(input) address ofa2-word arrayofcharacters stored 4characters per
word, leftjustified, blankfilled
CHAR (input) address ofacharacter stored inIHformat (i.e., leftjustified,
blankfilled)
Method: Letthecharacter beCandablankbeb.Thenthetwowords at_UTBUF(K) and
_UTBUF(K+I) mustbeCbbbbbbbbb andbbbbbbbbbb. Thewordsaretested forthatcondition.
Ifthecondition issatisfied, LVARissetto.TRUE.. Ifnot,LVARissetto.FALSE..
Language: C_MPASS
7.2.4.2.13 UNPKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack the2ndor3rdwordofasymbol entry intheGeneral Table (seesection
7.2.2.1.9).
Calling Sequence:
CALLUNPKXX(Z(1),ITEMS)
Z(1)-(input) address ofthewordtobeunpacked (2ndor3rdwordofaGTentry)
ITEMS-(output) address ofa4-word arraywhere thefouritemswillbestored.
7.2-146 (6/i171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: Usingappropriate bitmasks, shifts, andlogical products, thefields oftheword
areextracted andstored.
Language: COMPASS
7.2.4.2.14 PACKXX
Subprogram name: LKED300
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topack4itemsintothe2ndor3rdwordofasymbol entryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKXX(Z(I),ITEMS)
wherethearguments aredefined inUNPKXX (seesection 7.2.4.2.13)
Method: Usingappropriate shifts andlogical sums,theitemsarepacked intoasingle word
andstored inthetable. Theitemsarenotchecked forbeingwithin thespecified field
width.
Languaqe: COMPASS
7.2.4.2.15 UNPKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsinthefirsttwowordsofacallentryintheGeneral Table
(seesection 7.2.2.1.9)
Calling Sequence:
CALLUNPKCAL(Z(1),ITEMS)
Z(1) (input) address ofcallentryinGT
ITEMS-(output) a9-word arraywheretheitemsfromthefirsttwowordsofthecall
entryarestored asfollows:
(I)PREV
(2)NEXT
7.2-147 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
(3)NBRARG
(4)CLASS=6
(5)P1
(6)FR(_M
(7)PFR(_M
(8)PNEXT
(9)PSYM
Method.&amp;quot; Theitemsareextracted usingappropriate bitmasks, shifts, andlogical products.
Lanouaqe: C_MPASS
7.2.4.2.16 PACKCAL
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Topacktheitemscomprising thefirsttwowordsofacallentry intheGeneral
Table (seesection 7.2.2.1.9)
Calling Sequence:
CALLPACKCAL(Z(1),ITEMS)
wherethearguments aredefined asinUNPKCAL (seesection 7.2.4.2.15)
Method: Theitemsarepacked usingshifts andlogical sums. Fieldwidthsizesarenot
checked.
Language: COMPASS
7.2.4.2.17 GETEXT
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toconvert asingle wordanexternal reference intheLINKTable (seesection
7.2.5) whenitissplitbetween twowords.
7.2-148 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINICAGE EDITOR
Callinq Sequence:_
EXTNAME =GETEXT(Z(J))
EXTNAME -(output) external reference
Z(J) (input) address ofthefirst oftwowords where theexternal reference is
stored intheright half ofZ(J) andtheleft half ofZ(J+l)
Method: Using a30-bit mask, shifts, andlogical products, theexternal reference is
constructed from thetwowords.
Lanquaqe: C_MPASS
7.2.4.2.18 STOEXT
Subproqram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tostore anexternal name intheLINK Table (see section 7.2.5) when thename is
split between twowords. ST_EXT istheinverse ofGETEXT (section 7.2.4.2.17)
Calling Sequence:
CALL ST_EXT(Z(J),EXTNAME)
where thearguments aredefined asinGETEXT
Method: Using masks andshifts, EXTNAME issplit into twohalves andstored intheright
half ofZ(J) andleft half ofZ(J+l).
Lanquaqe: C_MPASS
7.2.4.2.19 N_W
Subprogram name: LKED320
Type ofroutine: Subroutine
Alternate entry points: None
Pur_E]_ose: Toreturn thedate andtime ofday
Callinq Sequence:
CALLN_W(A)
A-(output) address ofatwo-word arraywhere
7.2-149 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
A(1)=timeofday(BCD)
A(2)=date
Method: ThetimeofdayisfoundusingtheSC_PECLOCKmacro, andthedateisfoundusing
theDATEmacro.
Language: C_MPASS
7.2.4.2.20 TEÃ—TTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation oftextwords inaTEXTTable (seesection 7.2.5)
Calling Sequence:
CALLTEXTTAB(Z(L_C),Z(1),N,ADDRESS)
Z(LOC) (output) address where thefirstwordofrelocated textwillbestored
Z(1) (input) address offirstwordofTEXTTable.
N (input) number ofwords inTEXTTable
ADDRESS -(input) relocation address (i.e., address ofsubprogram orcommon block to
whichtextrefers)
Method: Seesection 7.2.5foradescription oftheTEXTTableofasubprogram. Thefirst
wordofaTEXTTableisarelocation indicator word. Itisusedtodetermine whatkindof
relocation applies toeachoftheaddress fields intheremaining wordsoftheTEXTTable.
Lanquaqe: COMPASS
7.2.4.2.21 FILLTAB
Subproqram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation ofaddress specified bytheFILLTable
Callinq Sequence:
CALLFILLTAB(Z(ITEXT),Z(JLCTO),Z(J),N,LR)
7.2-150 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z(ITEXT) -(output) address oftheIstword oftext forthecontrol section currently
being constructed
Z(JLCTO) -(input) address oftheOthword oftheLocal Common Table (LCT) (see section
7.2.5)
Z(J) (input) address oftheIstword oftheFILL Table
N -(input) nun_er ofwords intheFILL Table
LR (input) pointer intheLCTtothecontrol section currently being constructed.
Method: Seesection 7.2.5 foradescription oftheFILL Table ofasubprogram. A30-bit
byte isextracted from theFILL Table. Ifitisacontrol byte, therelocated address is
fetched from theLCT. Ifitisadata byte, thetext word containing thereference tobe
relocated isfetched, therelocation isperformed (upper, middle orlower depending onP),
andtherelocated word isstored back inthetext area. This process isrepeated foreach
30-bit byte until theendofthetable isencountered.
Language: COMPASS
7.2.4.2.22 LINKTBI
Subprogram name: LKED320
Type ofroutine: Function
Alternate entry points: LINKTB2
Purpose: LINKTBI returns anexternal name from theLINK Table (see section 7.2.5), and
LINKTB2 performs relocation ofallreferences totheexternal name.
Calling Sequences:
EXTNAME =LINKTBI(Z(IO),J,SWITCH)
LVAR =LINKTB2(ADDRESS,Z(ITEXT),LBC)
EXTNAME
J
SWITCH
Z(IO)
LVAR-(output) name ofexternal reference
-(input/output) current pointer inLINK Table (starting with l)
-(input) current byte pointer (-=high order, +=loworder)
-(input) address ofOthword inLINK Table
(output) logical variable which if.TRUE. means thenext call must beto
LINKTB2 andif.FALSE. means thenext call must betoLINKTBI. Note:
7.2-151 (611/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
LINKTBI isalways called firstatthebeginning oftheanalysis oftheLINK
Table.
ADDRESS -(input) address oftheexternal namereturned fromlastLINKTBI call.
Z(ITEXT) -(input/output) address offirstwordoftextbeingconstructed.
L_C (input) relative address intextofexternal reference toberelocated.
Method: Seesection 7.2.5foradescription oftheLINKTableofasubprogram. LINKTBI
extracts thenameoftheexternal reference. Ifthebyteswitch isplus,thenameissplit
between twowords. Theaddresses ofthearguments oftheLINKTBI callaresavedandrestored
atentrytoLINKTB2. Actual relocation ofreferences totheexternal nameareperformed by
thealternate entry. Depending ontherelocation bits,thewordlocated atZ(ITEXT +LOC)is
relocated andreturned tomemory. Thebyteswitch, LINKTablepointer, andlogical variable
aresetandreturn ismade.
Lanquaqe: COMPASS
7.2.4.2.23 REPLTAB
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toperform relocation specified byaREPLTable (seesection 7.2.5) ofasubprogram
Calling Sequence:
CALLREPLTAB(Z(J),Z(ITEXT),N,LR)
Z(J) -(input) address oftheOthwordoftheREPLTable (i.e., theIDword)
Z(ITEXT) -(input/output) address ofthefirstwordoftextbeingconstructed
N (input) number ofwords inREPLTable
LR (input) pointer inLCTtothecontrol section currently beingconstructed.
Method: Seesection 7.2.5foradescription oftheREPLTableofasubprogram. Dataitems
arebuilt, relocated, andstored inthetextareaasafunction oftheparameter intheREPL
Table.
Lanquaqe: C_MPASS
7.2-152 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P104</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_104/</guid>
      <description>
        
        
        &lt;p&gt;7.2.4.2.24 UNPK30DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry point: None
Purpose: Tounpack two30-bit bytes fromaFILLTable (seesection 7.2.5) orLINKTable
(seesection 7.2.5).
Calling Sequence:
CALLUNPK30(ENTRY,ITEMS)
ENTRY -(input) address ofword inFILLorLINKTable tobeunpacked
ITEMS -(output) an8-word array asfollows:
(I) =high-byte control, 0orl
(2) =high-byte relocation bitsor0if(1)=0
(3) =high-byte RLor0if(1)=0
(4) =high-byte LBCorARif(1)=0
(5)-(8)= same forlowbyte
Method: Theitems areunpacked using shifts andlogical products with appropriate masks.
Language: C_MPASS
7.2.4.2.25 UNPKID
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack atable identification word (seesection 7.2.5)
Calling Sequence:
CALL UNPKID(W_RD,ITEMS)
W_RD -(input) IDword tobeunpacked
ITEMS -(output) a4-word array asfollows:
(I)=CN I(2)=WC Seesection 7.2.5
(3)=LR 1(4)=L
7.2-153 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Method: Theitemsareunpacked usingshifts andlogical products withappropriate masks.
Language: COMPASS
7.2.4.2.26 PACKDMP
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toformat thedumpcontrol wordwhich isstored atthebeginning ofeachcontrol
section.
Calling Sequence:
W_RD=PACKDMP(NAME)
WORD-(output) formatted dumpcontrol word
NAME-(input) control section name, leftjustified, zerofilled
Method: Thedumpcontrol wordisconstructed tolookasfollows:
[370000 _] NAME I
59 4241 0
where
_Iforacommon block
BIT=_0otherwise
Lanquage: CBMPASS
7.2.4.2.27 PACKXRF
Subprogram name: LKED350
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TopacktheitemsoftheXREFentry intotheXREFTable (seesection 7.2.2.1.10).
Calling Sequence:
CALLPACKXRF(Z(ZP_INT),ITEMS)
7.2-154 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Z(ZP_INT)-(output)addressoffirstwordof6-wordXREFentryinXREFTable.
ITEMS (input)a19-wordarraycontaining theitemstobepackedintotheXREF
entryasfollows:
(I) Subprogram name
(2) CLASS =2
(3)P1
(4)0(notused)
(5)N Seesection 7.2.2.1.10
(6)PREV
(7)NEXT
(8)-(18) Ci
(19)0(notused)
Method: Theitemsarepacked usingappropriate shifts andlogical sums.
Language: C_MPASS
7.2.4.2.28 UNPKXRF
Subprogram name: LKED350
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack theitems ofanXREF entry intheXREF Table (see section 7.2.2.1.I0).
Calling Sequence:
CALL UNPKXRF(Z(ZP_INT),ITEMS)
where thearguments aredefined asinPACKXRF (see section 7.2.4.2.27)
Method: Using appropriate masks, shifts, andlogical products each ofthefields in
Z(ZPBINT) isextracted andstored intheITEMS array.
Language: C_MPASS
7.2-155 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.29 UNPKEP
Subprogram name: LKED350
J
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsofanentry-point entryintheXREFTable (seesection
7.2.2.1.10).
Callinq Sequence:
CALLUNPKEP(Z(ZPOINT),ITEMS)
Z(ZPOINT) -(input) address ofthefirstwordofa3-word entry-point entryintheXREF
Table
ITEMS (output) anll-word arraywhere theitemsarestored asfollows:
(I)Entrypointname
(2)CLASS=1
(3)P1
(4)0(notused)
(5)A
(6)0(notused) Seesection 7.2.2.1.10
(7)PN
(8)PCI
(9)PCN
(I0)PREV
(II)NEXT
Method: Usingappropriate masks, shifts, andlogical products, eachofthefields isex-
tracted andstored intheITEMSarray.
Language: C_MPASS
7.2-156 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/_600 LINKAGE EDITOR
7.2.4.2.30 HASH
Subprogram name: HASH
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Tocompute thehashnumber ofasymbolic name
Calling Sequence:
HASHNBR =HASH(NAME,NBRENTR)
HASHNBR -(output) hashnumber ofthesymbolic name
NAME -(input) symbolic name, leftjustified, zerofilled.
NBRENTR -(number ofentries (notwords) intable
Method: Thefollowing equation isevaluated:
HASHNBR =M_D(RSHIFTX(NAME,18),NBRENTR)*3+I
where RSHIFTX isdescribed insection 7.2.4.2.11 andM_Disthestandard M_Dfunction ofthe
F_RTRAN language. Itisassumed thatthenumber ofwords pertable entry isthree.
Language: F_RTRAN
7.2.4.3 General Utilities
7.2.4.3.1 XRCARD
Subprogram name: XRCARD
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tointerpret andconvert free-field card images.
Calling Sequence:
CALLXRCARD(_UTBUF,N,INBUF)
_UTBUF -(output) address ofanyarray where theconverted cardimage isstored
N -(input) number ofwords in_UTBUF
INBUF -(input) address ofan20-word array containing thecardimage.
Method: Seesection 3.4.19.
Languaqe: F_RTRAN
7.2-157(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.2 XTRACE
Subproqram name: XLgADER
Type of routine: Subroutine
A1 ternate entry points: None
Purpose: XTRACE when called gives a traceback from itself to the program which called
XTRACE and from that program to the one calling it and so forth. Note following sample
output.
Call ing Sequence:
CALL XTRACE
Method: From the entry point of XTRACE, XTRACE picks up the address + 1 of where the call
to XTRACE was made from. Stored at the address of that call is the address of that program&amp;rsquo;s
entry point - 1. From there a trace can be made to the next called routine in the same
fashion.
Language :
7.2.4.3.3 XDUMP
Subprogram name : XL0ADER
Type of routine: Subroutine
A1 ternate entry points : None
Purpose: XDUMP is called to dump an area of core storage. XDUMP does not actually perform
the dumping. It uses the utility routine CBRDUMP (section 7.2.4.3.6) to actually format the
dump.
Call ing Sequence:
CALL XDUMP(ADD1 ,ADD2,0P)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
ADDI-Variablecontaining firstaddressdesiredindump
ADD2-Variablecontaining lastaddressdesiredindump(Ifitisgreaterthanfield
length,XDUMPwillusethefieldlength-1asthelastaddressindump.
OP-ilifÂ°nlyanÂ°ctaldumpisdesiredifoctalandBCDaredesired
XDUMPdetermines thenumberofwordstobedumped.Itthensetsupacallto
CORDUMPreceivestheaddressofthearrayandMethod:
CORDUMPwhichperformstheactualdumping,
dumpsitintheprescribed format.
Language: COMPASS
7.2.4.3.4 COMPARE
SubproBram name: XLBADER
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: COMPARE compares twowords ofcore memory andreturns acount (0to60)ofthe
number ofbits that donotmatch inthetwowords.
Calling Sequence:
COUNT =COMPARE(W_RDI,W_RD2)
Method: Anlogical difference isperformed andthenumber ofbits intheresult isreturned.
Language: COMPASS
7.2.4.3.5 ABSENT.
Subprogram name: XLOADER
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Thelinkage editor automatically inserts acall toABSENT. forcalls tounsatisfied
externals. ABSENT. will becalled ifthese unsatisfied externals areever called. Then
ABSENT. will call XTRACE toinform theuser whence theunsatisfied external wascalled.
7.2-159 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLABSENT.
Usually called inassembly language orimplicitly viaaRENAME cardinthelinkage
editor control cardlanguage.
Method: ABSENT. callsXTRACE andthenexecutes areturn jumptoEXITtohaltthejob.
Language: COMPASS
7.2.4.3.6 CORDUMP
Subprogram name: CORDUMP
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: CORDUMP performs theactual dumping ofanareaofcore. Normally CORDUMP iscalled
viathedriver XDUMPsinceaFORTRAN program normally cannot define anyareaofcoredirectly.
Calling Sequence:
CALLCORDUMP (BUF,LBUF,OP,NBUFF)
BUF -Arraytobedumped.
LBUF-Length ofthearrayBUF
_IOforoctaldumponly
OP
foroctalandBCDdump.
NBUFF-Variable containing theaddress ofthelastwordofthesegment loader&amp;rsquo;s buffer.
(NBUFF isusedtoeliminate theformatting of10buffer intocontrol sections)
Method: CORDUMP creates anormal dumpofcorestorage giving absolute addresses andcore
storage fourwordsperline. CORDUMP alsolooksforthe&amp;quot;control section IDword&amp;quot;which
starts eachcommon blockorsubprogram andoutputs relative addresses basedonthisword.
Figure 42givesanexample ofacorestorage dump.
Language :FORTRAN
7.2-160 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
CCCCCC
CCCCCC
CC d * NC5\ C
CCCJ CC-NFl 0
CCOC COCGCO
CCCl-CCCGOO coot COCGOO
ECOC CCCOO0 0000 000000
000.3 000000
CC.C.C C C CGCC
FCOO 0OOC.CC 0000 000000
O00D OOOQCC oooc C&lt;del&gt;CCOC 0000 DOOOOO 0000 000000 0000 000000 0000 000000
OCC.0 C&amp;rsquo;CiCOCC.
CCCC CCCCC.C
OOOD 000000
NCNU
m c .PI moo- -00-
CDOU 0000 f 30-
C3000
CCCC
CDOC 0 0 C 0 0000
0302
C30^
0000 0305 E..UCCC-.N
C C L* CC-
8- CNCOGO
00&lt;/del&gt;0C00
c0uoop?
OOClCOOO
OG00000 0000000 CCCCCCC:
EOCCGOC
OCCOCOO
00000E0
CCOO0&amp;quot;O
OOCOCOO 0000000 0000000
&lt;del&gt;OOCCEC
OCO&lt;/del&gt;OCC
OOOGOGO
OOOUCOO . . *&amp;rsquo; * lTl /i 0-
9 C 9 C
5 a 0
5 0 C
9 0 G
9 9 C
9 9 C 4 0 C
9 9 C 5 9 C
9 9 C
9 0 C
9 5 0
9 9 C
9- 9.2
9 * C
9 9 C 9 9
9 5 0 a
4 9
9 c Od * C 4C
9 C *C
9 0 90
*LC OC
9 C &amp;lsquo;40
911- 10 * C xc
*CC Oc
CC C . C&amp;rsquo;C \ C
C. C:
WC&amp;rsquo; C
YCC xc
OOL YC 1-co Uf
7CC uc
NO0 aC
\CC \C 00 0
70 7 0.3 0 co r
CC +
LC- CC
WCC LL&amp;rsquo;C moo ma
Cc&amp;rsquo; 0 J &amp;lsquo;2 _LC 020 00 I-0 IYO
C-XO -0 ;I-0 ZC
OZO 00
UOO UO
VO 0 4 c 9c
9WO 9C
bU0 90
1WO 90
410 *O 5 c 00
QCC QC
920 00 * Irl 9
9w 9
9 &amp;lsquo;U 9 +a t
9 C 4-4
9VlC *CC
*DO *ro 1ao *co 100 900
930 9-c 9 n
&lt;em&gt;.YO 000
9CC QCC
&lt;del&gt;CC eco
9CO 000
400 OOO *co 90.3 * - OCO
O 0 *a0
9 0 400
5 o ecn
9 C a00
9 ? too
5 0 900
B -. . C 0 0 co
&amp;ndash;C C.z, 0 CO
C CC
-, 2 2
irJ il&amp;rsquo; (rl + %r
4 -JS &amp;rsquo; &amp;quot; 45 - WC
7. - -
0 4; O
C CC
It. I1 I1
IP. c , :- c 0 -
CCC
c3 0 e
::I: .tr ,:a:
-.:\I N ram 6
CC C CC C
03 ?, De 3
nrccc 3
CC CCCC
II I1 I1 I1 II It - -1 -3 -1 -
LUIUI&amp;quot;.WLJ xolaaa
dJCT-&amp;lsquo;S
r-CC c&amp;ndash; cccc- - &amp;ndash; n&amp;rsquo;N&amp;amp; \ c. c 0&amp;rsquo;- =
CCCCCC
11 11 I1 1) I1 11
WY V VlWY &lt;del&gt;zmrms: . a&lt;/del&gt;aua 3 J-d .r n,o .ssc CCCCCC
c20=c3
c=cccT.
CCPCCC
11 II II I1 I1 I1
IJ_LJ_f-l-&lt;/del&gt;
IA WLLIWWrl
rZlctK.23
r P- 5 -.r nilrrre&lt;/em&gt;
&amp;lt;- 7 o==- n 1 h ~-1
C c C..&amp;gt;c;
CCCCCF
I1 &amp;rsquo; I1 11 11 11 I1
(nlnirr vim DTxrs,Jj u=?&amp;lt;.aua&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C d&amp;rsquo;.J r -N h&amp;rsquo; &amp;hellip;&amp;mdash; 0 ?C 0 &amp;ldquo;roc CCCC
I1 11 11 It
J JJ I
IUWY)W
3 ZD n&amp;rsquo;
r -I n
QUY a J QJ 0
LPULTJ, l mm m C CC C
IIUUU C0r)OC
ZCOCC
COO00
UO 0 C 0 0000 * 00 c C
*COO0
80000
80000
*OUOO
*OCOO
*CCCP *oooo * * * *
*,I 4dCO * Lnme -
*OCONN
*OD000
*OClOhO
8CcCCe
*OOUCO * OC000 * OC 0 CO *&amp;ldquo;0000 *oocoo *ooooa * OC COO
*OO?CIO
*occ.c,o
4C&amp;quot;c.OC
. *I JC oc-dW
CC C C C
OCCCD
CCCCC
CCCCC
I1 I1 ,I 11 11
_12-dd
Ul0Jvh.u
XtTXXT
c PC ~m
-.-nCLc
&amp;lsquo;Wr,,-IJ. liJl&amp;rdquo;&amp;lsquo;Lr J
mmmFm
C.. r
11 I, I, I, It
:%:I$: 4.14 414 Q *C c r
*C Ch
*C CC
*CL&amp;lt;
*C Er
*ECC *CL-
*OC9
*CCC
*CCC
4.-rd
*CIC * &amp;rsquo; WC
OF un
8 ns I- R&amp;rsquo;
8NCO
Od CC
*CCC or J-
ORCC * 0 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l C CC *CCCR
0 c C CC * c C oa
O~CCC
*PCCC * c om
*.-CCd
OC CCC
C C CC
XQ n nd
C cmc
V)CIn&amp;rdquo;-C
unmmn .Innrn
cc,nICc,
r C d CC
LLlC CiCC \rFd.- o n. TO 7
?
CCU&amp;rsquo;CC
(LC CCC
VO CC om CO &lt;del&gt;cm cc
CCC.CC
(LOCOW
LO400
ZC C CU CS C CC
v&#39;3rtn.t ^ rJ)
ON cmm
ON nmm * m n, n,r
d O ONO * 0 OJ C o c C.C&lt;/del&gt; J - CU I/ 0 ONC * * *&lt;/li&gt;
&lt;li&gt;ooc-mo
QC CCC
*CCRiO
*OCP,O Itocsu
*GOCO * 0 OW0
Q 0 =NO 0.-CCC
OZCCC *&amp;ndash;*u * C- t CCI * I4 SCU r-?rrzlm
O NCINR
4 N 0 ON * t CC1 b c c oc &lt;em&gt;&amp;rsquo;% c y-? IN C CIU
-&lt;/em&gt;&amp;lt; 1
C C l&amp;hellip;
C CCF 0 0 00
CCCC
C C cr
It 11 I1 I1
J -&amp;rsquo; -I -
u&amp;rsquo; &amp;lsquo;A&amp;rsquo; l&amp;quot; LA x Zl l
I
,c 1. .r &amp;lt;,
I I Td I m ICIC,
.&amp;lt;&amp;ndash;,
la c a. u, -1 *. 1 C- J r.
OC.- 4-8 R&lt;del&gt;PI
CCCCCCC
C3C 50 no
OCC C C. C C
C&lt;/del&gt;CCCCC
I1 Il 11 II I1 II W
J J -&amp;rsquo; _I -&amp;amp; _I _I
WL&amp;rsquo;WLIWAJW zrmzzza&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;3-:4c&lt;em&gt;c
CCCC-..-R1 h.5 cccc or I .r&amp;lt; sa ,rr.m 9&amp;quot; (rm . CiCCT
I, I# It II I1 I1 I1
V~u-(Fu-u-InV srrnma mm 44 4 &amp;lt;&lt;/em&gt;.a*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7.2.4.3.7 XEOFDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: XEOP
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anend-of-file onastorage device (tape ordisk).
Calling Sequence:
CALL XEOF(FET)
FET-Address oftheFET
Method: XE_F executes theSCOPE WRITEF macro viatheSC_PE routine CPCtowrite theend-of-
file.
Language: COMPASS
7.2.4.3.8 XOPEN
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XOPEN generates theFile Environment Table (FET) forafile based ondata inthe
calling sequence.
Callin 9Sequence:
CALLXOPEN(FET,LFET,INDEX,LINDEX,OP)
FET -(output) arraywheretheFETistobebuilt. (First wordofFETshould have
filenameleftadjusted andzerofilled.)
LFET -(input) length ofFETplusthelength ofthecircular buffer
INDEX -Variable arraywhererelative trackaddresses fordirect access records willbe
stored.
LINDEX -Length ofINDEX. (IfO,thennoindexisimplied andfilewillbesequential.)
7.2-163 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0Opentoread/rewind
1Opentoread/no rewind
2Opentowrite/rewind
OP-3Opentowrite/no rewind
4Openfordirect access-alter/rewind (seeSCOPEmanual)
5Openfordirect access-alter/no rewind (seeSCOPEmanual)
-IConstruct FETbutdonotopenfile.
Method: XOPENbuilds theFETasdescribed intheSCOPE3.1reference manual, chapter 3.The
FETlength ismade15words long,andthebalance ofthespacesenttoXOPENandusedasthe
circular buffer. Thecircular buffer isneverusedifonlyREADX(section 7.2.4.3.15) and
WRITEX (section 7.2.4.3.14) aretobeused,andinthatcaseLFETmaybesetto30oncalls
toXOPEN.
Language: C_MPASS
7.2.4.3.9 XCLOSE
Subprogram name: XIORTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XCLOSE closes afile butdoes notreturn ittothesystem.
Calling Sequence:
CALLXCLOSE(FET,OP)
FET-Address oftheFET
liClOse/no rewindOP-Close/rewind
Close/unload
Method: XCLOSE executes theSCOPE CLOSE macro which performs differently onthemany
versions ofSCOPE 3inthefield. Consult with your systems programmer todetermine exact
results foryour installation. Refer also totheSCOPE 3.1reference manual, chapter 3.
Language: COMPASS
7.2-164 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.3.10 XEVICT
Subproqram name:XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: XEVICT releases allspace occupied byafileonthedisk.
ispreserved.
Calling Sequence:
CALLXEVICT(FET)
FET-Address oftheFET
Method: XEVICT executes theSC_PE 3EVICT macro.
LanBua_e: C_MPASSThelogical filename
7.2.4.3.11 REINDX
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: REINDX redefines theindex pointer field fortheFET.
Calling Sequence:
CALLREINDX(FET,INDEX,LINDEX)
FET -Address oftheFET
INDEX -Array where newindex istobedefined
LINDEX -Length ofINDEX
Method: REINDX places theindex address andindex length inword 8oftheFETinthe
following format
59 35 17 0
FET(8) =l [LINDEX [ADD(INDEX) 1
where ADD=address
Language: C_MPASS
7.2-165 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.12 XWRITE
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartwriting, continue writing, orcomplete writing alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXWRITE(FET,RECORD,BUF,LBUF,FLAG)
FET -Arraywhere FETisstored.
RECORD -0ifsequential writing istobeginorcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhenstarting towrite therecord
BUF -Arrayofinformation tobewritten
LBUF -Length ofBUF
FLAG _IOifrecord isnottobecompleted.
(iifrecord istobecompleted withend-of-record mark.
Method: XWRITE stores theaddress ofBUFintheFET.Itthenbegins orcontinues writing
therecord either sequentially using 10WRITE ordirect access using I_RW(bothareSCOPE
utilities). IfFLAGisnonzero, therecord isthencompleted sequentially usingtheSCOPE
WRITER macro. Alldataareprocessed through thecircular buffer.
Language: C_MPASS
7.2.4.3.13 XREAD
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartreading, continue reading, orcomplete reading alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXREAD(FET,REC@RD,BUF,LBUF,FLAG,COUNT)
7.2-166 (611171)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET Array where FETforfile isstored.
RECORD -0ifsequential reading istobegin orcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhen starting toreadtherecord
BUF -Array where data readaretobeplaced
LBUF -Length ofBUF
&lt;em&gt;iOtoreadLBUFwords ortoreadtotheendofrecord, which everoccurs first.FLAG
ifuptoLBUFwords aretoberead andpositioning tonextrecord istooccur.
-2onreturn ifend-of-file wasencountered.
&lt;em&gt;)-Ionreturn ifendofrecord wasnothitandLBUFwords were read.COUNT
I_a&lt;/em&gt;Â°&lt;/em&gt;_ __&lt;em&gt;ie_o&lt;/em&gt; _____________&lt;em&gt;r_oi_st_r_UrI_p&lt;/em&gt;.Â°f words thatwere readifanendofrecord
Method: XREAD defines where BUFislocated intheFET. Itthenbegins orcontinues reading
therecord either sequentially using 10READ orrandomly using IORR(both areSCOPE utilites).
IfFLAGisnonzero andtheendofrecord wasnotencountered, arecord isskipped tobypass
anyremaining data. This isaccomplished byusing theSC_PE SKIPF macro.
Language: COMPASS
7.2.4.3.14 WRITEX
Subprogram name: XIORTNS
T_zp_e ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anentire logical record either sequentially orrandomly without using
thecircular buffer.
Calling Sequence:
Identical toXWRITE except FLAGisnotinterpreted (seesection 7.2.4.3.12)
Method: Thepointers FIRST, IN,GUT, andLIMIT aresettoreflect theactual output buffer
BUF,which inturnbecomes thecircular buffer. Adirect callismade tothePProutine CIO.
Language: COMPASS
7.2-167 (6/1/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IWASTPJ_N SUPPORT PROGPJ_MS
7.2.4.3.15 READX
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Pu__ur_Dose: Toreadanentire logical reocrd either sequentially orrandomly without usingthe
circular buffer.
Calling Sequence:
Identical toXREADexcept FLAGisnotinterpreted (seesection 7.2.4.3.13).
Method: Thepointers FIRST, IN,OUT,andLIMITaresettoreflect theactual inputbuffer
BUF,which inturnbecomes thecircular buffer. Adirect callismadetothePProutine C10.
Language: COMPASS
7.2.4.3.16 XREWIND
Subprogram name: XIORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Torewind adiskortapefileandplace itatthebeginning ofinformation.
Calling Sequence:
CALLXREWIND(FET)
FET-Address oftheFET
Method: XREWIND executes theSCOPEREWIND macro.
Language: COMPASS
7.2.4.3.17 XBKREC
Subproqram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: XBKREC backspaces atapeordiskfileonelogical record.
Callinq Sequence:
CALLXBKREC(FET)
7.2-168 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET-Address oftheFET
Method: XBKREC executes theSCBPE BKSPmacro.
Languaqe: C_MPASS
7.2.4.3.18 XFRDREC
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afileforward tothebeginning ofthenextlogical record crossing only
oneend-of-record mark.
Callin 9Sequence:
CALLXFRDREC(FET)
FET-Address oftheFET
Method: XFRDREC executes theSC_PE SKIPF macro.
Language: C_MPASS
7.2.4.3.19 XBKPREC
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afilebackwards onephysical record.
Calling Sequence:
CALLXBKPREC(FET)
FET-Address oftheFET
Method: XBKPREC executes theSC_PE BKSPHRU macro.
Language: C_MPASS
7.2-169 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.20 XREQST
Subproqram name: XI_RTNS
_ypeofroutine: Subroutine
Purpose: Toexecute thestandard SC_PE request macro.
Callinq Sequence:
CALL XREQST(FET,PYQX,DC,DT)
FET -Address oftheFET
PYQX1DC
DTSeeSCBPE 3.1reference manual, section 3.5
Method: XREQST executes theSCOPE REQUEST macro. Thismaybeinstallation dependent.
Lanquaqe; C_MPASS
7.2.4.3.21 ANDF,_RF,C_MPLF, RSHIFT, LSHIFT
Subproqram name: FtAPFNS
Typeofroutines: AllInteger Functions.
Purpose: Toperform alogical and,or,complement, right shift, orleftshift.
Calling Sequence:
RESULT =ANDF(WORDI,WORD2)
RESULT =ORF(W@RDI,WORD2)
RESULT =COMPLF(WBRDI)
RESULT =RSHIFT(WORDI,COUNT)
RESULT =LSHIFT(W_RDI,COUNT)
where WBRDI andWBRD2 arewords being operated onandareunchanged after theexecution.
COUNT isthenumber ofbits W_RDI istobeshifted right orleft.
InRSHIFT andLSHIFT bits shifted outside ofthewordboundary arelostwhile theothers
arezerofilled.
Method: Direct assembly language logical instructions areused.
Lanquage: COMPASS
7.2-170 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.3.22 XFETCH,XSTORE
Subprogram name: MAPFNS
Typeofroutines: Subroutines
Alternate entry points: None
Purpose: Tofetch (store) anarray ofdatafrom (to)anywhere inthejob&amp;rsquo;s core.
Calling Sequence:
CALLXSTORE(BUF,LBUF,LOCADD)
CALLXFETCH(BUF,LBUF,LOCADD)
BUF -Receiving array (XFETCH); transmitting array (XSTORE)
LBUF -Length ofBUF
LOCADD -Variable containing theaddress fromwhich dataisfetched (XFETCH); oraddress
intowhich data isstored (XSTORE)
Method: Adirect moveofdataismade insuchawaythatitdoesnotmatter ifthearray
fromwhich dataaremoved overlaps thearray towhich thedataaremoved.
Language: COMPASS
7.2.4.3.23 LWORDS
Subprogram name: MAPFNS
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine howmanywords ofcorethere arefromtheargument tothefield
length
Callin 9Sequence:
RESULT =LWORDS(ARG)
ARG-Variable fromwhich thenunfoer ofwords tothefield length iscomputed.
Method: Thefield length, stored inlocation 768ofthejob&amp;rsquo;s core, isusedtomake the
computation.
7.2-171(6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.3.24 CBRWDSNASTRANSUPPORTPROGRAMS
Subprogram name: MAPFNS
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine aninclusive distance inwords between twoarguments incore.
Calling Sequence:
RESULT =CORWDS(ARGI,ARG2)
ARGI andARG2arethetwoarguments forwhich theinclusive difference isdesired.
Method: RESULT =Absolute value ofthedifferences between thetwoaddresses plusone.
Language: CBMPASS
7.2.4.3.25 XJUMP
Subproqram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tomakeanabsolute jumptocodeanywhere incore.
Calling Sequence:
CALLXJUMP(L_CAT)
LOCAT =Variable where anabsolute location isstored.
Method: Ajumpisexecuted towhatever address isinthelocation LBCAT.
Lanq_aqe: CBMPASS
7.2.4.3.26 ZAP
Subprogram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tozerocorefromwhatever location isspecified incorelocation lOl8tothefield
length asspecified inlocation 638.
Calling Sequence:
CALLZAP
7.2-172 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P104</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_104/</guid>
      <description>
        
        
        &lt;p&gt;7.2.4.2.24 UNPK30DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry point: None
Purpose: Tounpack two30-bit bytes fromaFILLTable (seesection 7.2.5) orLINKTable
(seesection 7.2.5).
Calling Sequence:
CALLUNPK30(ENTRY,ITEMS)
ENTRY -(input) address ofword inFILLorLINKTable tobeunpacked
ITEMS -(output) an8-word array asfollows:
(I) =high-byte control, 0orl
(2) =high-byte relocation bitsor0if(1)=0
(3) =high-byte RLor0if(1)=0
(4) =high-byte LBCorARif(1)=0
(5)-(8)= same forlowbyte
Method: Theitems areunpacked using shifts andlogical products with appropriate masks.
Language: C_MPASS
7.2.4.2.25 UNPKID
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack atable identification word (seesection 7.2.5)
Calling Sequence:
CALL UNPKID(W_RD,ITEMS)
W_RD -(input) IDword tobeunpacked
ITEMS -(output) a4-word array asfollows:
(I)=CN I(2)=WC Seesection 7.2.5
(3)=LR 1(4)=L
7.2-153 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Method: Theitemsareunpacked usingshifts andlogical products withappropriate masks.
Language: COMPASS
7.2.4.2.26 PACKDMP
Subprogram name: LKED320
Typeofroutine: Integer Function
Alternate entrypoints: None
Purpose: Toformat thedumpcontrol wordwhich isstored atthebeginning ofeachcontrol
section.
Calling Sequence:
W_RD=PACKDMP(NAME)
WORD-(output) formatted dumpcontrol word
NAME-(input) control section name, leftjustified, zerofilled
Method: Thedumpcontrol wordisconstructed tolookasfollows:
[370000 _] NAME I
59 4241 0
where
_Iforacommon block
BIT=_0otherwise
Lanquage: CBMPASS
7.2.4.2.27 PACKXRF
Subprogram name: LKED350
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: TopacktheitemsoftheXREFentry intotheXREFTable (seesection 7.2.2.1.10).
Calling Sequence:
CALLPACKXRF(Z(ZP_INT),ITEMS)
7.2-154 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Z(ZP_INT)-(output)addressoffirstwordof6-wordXREFentryinXREFTable.
ITEMS (input)a19-wordarraycontaining theitemstobepackedintotheXREF
entryasfollows:
(I) Subprogram name
(2) CLASS =2
(3)P1
(4)0(notused)
(5)N Seesection 7.2.2.1.10
(6)PREV
(7)NEXT
(8)-(18) Ci
(19)0(notused)
Method: Theitemsarepacked usingappropriate shifts andlogical sums.
Language: C_MPASS
7.2.4.2.28 UNPKXRF
Subprogram name: LKED350
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tounpack theitems ofanXREF entry intheXREF Table (see section 7.2.2.1.I0).
Calling Sequence:
CALL UNPKXRF(Z(ZP_INT),ITEMS)
where thearguments aredefined asinPACKXRF (see section 7.2.4.2.27)
Method: Using appropriate masks, shifts, andlogical products each ofthefields in
Z(ZPBINT) isextracted andstored intheITEMS array.
Language: C_MPASS
7.2-155 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.2.29 UNPKEP
Subprogram name: LKED350
J
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tounpack theitemsofanentry-point entryintheXREFTable (seesection
7.2.2.1.10).
Callinq Sequence:
CALLUNPKEP(Z(ZPOINT),ITEMS)
Z(ZPOINT) -(input) address ofthefirstwordofa3-word entry-point entryintheXREF
Table
ITEMS (output) anll-word arraywhere theitemsarestored asfollows:
(I)Entrypointname
(2)CLASS=1
(3)P1
(4)0(notused)
(5)A
(6)0(notused) Seesection 7.2.2.1.10
(7)PN
(8)PCI
(9)PCN
(I0)PREV
(II)NEXT
Method: Usingappropriate masks, shifts, andlogical products, eachofthefields isex-
tracted andstored intheITEMSarray.
Language: C_MPASS
7.2-156 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/_600 LINKAGE EDITOR
7.2.4.2.30 HASH
Subprogram name: HASH
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Tocompute thehashnumber ofasymbolic name
Calling Sequence:
HASHNBR =HASH(NAME,NBRENTR)
HASHNBR -(output) hashnumber ofthesymbolic name
NAME -(input) symbolic name, leftjustified, zerofilled.
NBRENTR -(number ofentries (notwords) intable
Method: Thefollowing equation isevaluated:
HASHNBR =M_D(RSHIFTX(NAME,18),NBRENTR)*3+I
where RSHIFTX isdescribed insection 7.2.4.2.11 andM_Disthestandard M_Dfunction ofthe
F_RTRAN language. Itisassumed thatthenumber ofwords pertable entry isthree.
Language: F_RTRAN
7.2.4.3 General Utilities
7.2.4.3.1 XRCARD
Subprogram name: XRCARD
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Tointerpret andconvert free-field card images.
Calling Sequence:
CALLXRCARD(_UTBUF,N,INBUF)
_UTBUF -(output) address ofanyarray where theconverted cardimage isstored
N -(input) number ofwords in_UTBUF
INBUF -(input) address ofan20-word array containing thecardimage.
Method: Seesection 3.4.19.
Languaqe: F_RTRAN
7.2-157(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.2 XTRACE
Subproqram name: XLgADER
Type of routine: Subroutine
A1 ternate entry points: None
Purpose: XTRACE when called gives a traceback from itself to the program which called
XTRACE and from that program to the one calling it and so forth. Note following sample
output.
Call ing Sequence:
CALL XTRACE
Method: From the entry point of XTRACE, XTRACE picks up the address + 1 of where the call
to XTRACE was made from. Stored at the address of that call is the address of that program&amp;rsquo;s
entry point - 1. From there a trace can be made to the next called routine in the same
fashion.
Language :
7.2.4.3.3 XDUMP
Subprogram name : XL0ADER
Type of routine: Subroutine
A1 ternate entry points : None
Purpose: XDUMP is called to dump an area of core storage. XDUMP does not actually perform
the dumping. It uses the utility routine CBRDUMP (section 7.2.4.3.6) to actually format the
dump.
Call ing Sequence:
CALL XDUMP(ADD1 ,ADD2,0P)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
ADDI-Variablecontaining firstaddressdesiredindump
ADD2-Variablecontaining lastaddressdesiredindump(Ifitisgreaterthanfield
length,XDUMPwillusethefieldlength-1asthelastaddressindump.
OP-ilifÂ°nlyanÂ°ctaldumpisdesiredifoctalandBCDaredesired
XDUMPdetermines thenumberofwordstobedumped.Itthensetsupacallto
CORDUMPreceivestheaddressofthearrayandMethod:
CORDUMPwhichperformstheactualdumping,
dumpsitintheprescribed format.
Language: COMPASS
7.2.4.3.4 COMPARE
SubproBram name: XLBADER
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: COMPARE compares twowords ofcore memory andreturns acount (0to60)ofthe
number ofbits that donotmatch inthetwowords.
Calling Sequence:
COUNT =COMPARE(W_RDI,W_RD2)
Method: Anlogical difference isperformed andthenumber ofbits intheresult isreturned.
Language: COMPASS
7.2.4.3.5 ABSENT.
Subprogram name: XLOADER
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Thelinkage editor automatically inserts acall toABSENT. forcalls tounsatisfied
externals. ABSENT. will becalled ifthese unsatisfied externals areever called. Then
ABSENT. will call XTRACE toinform theuser whence theunsatisfied external wascalled.
7.2-159 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Calling Sequence:
CALLABSENT.
Usually called inassembly language orimplicitly viaaRENAME cardinthelinkage
editor control cardlanguage.
Method: ABSENT. callsXTRACE andthenexecutes areturn jumptoEXITtohaltthejob.
Language: COMPASS
7.2.4.3.6 CORDUMP
Subprogram name: CORDUMP
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: CORDUMP performs theactual dumping ofanareaofcore. Normally CORDUMP iscalled
viathedriver XDUMPsinceaFORTRAN program normally cannot define anyareaofcoredirectly.
Calling Sequence:
CALLCORDUMP (BUF,LBUF,OP,NBUFF)
BUF -Arraytobedumped.
LBUF-Length ofthearrayBUF
_IOforoctaldumponly
OP
foroctalandBCDdump.
NBUFF-Variable containing theaddress ofthelastwordofthesegment loader&amp;rsquo;s buffer.
(NBUFF isusedtoeliminate theformatting of10buffer intocontrol sections)
Method: CORDUMP creates anormal dumpofcorestorage giving absolute addresses andcore
storage fourwordsperline. CORDUMP alsolooksforthe&amp;quot;control section IDword&amp;quot;which
starts eachcommon blockorsubprogram andoutputs relative addresses basedonthisword.
Figure 42givesanexample ofacorestorage dump.
Language :FORTRAN
7.2-160 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
CCCCCC
CCCCCC
CC d * NC5\ C
CCCJ CC-NFl 0
CCOC COCGCO
CCCl-CCCGOO coot COCGOO
ECOC CCCOO0 0000 000000
000.3 000000
CC.C.C C C CGCC
FCOO 0OOC.CC 0000 000000
O00D OOOQCC oooc C&lt;del&gt;CCOC 0000 DOOOOO 0000 000000 0000 000000 0000 000000
OCC.0 C&amp;rsquo;CiCOCC.
CCCC CCCCC.C
OOOD 000000
NCNU
m c .PI moo- -00-
CDOU 0000 f 30-
C3000
CCCC
CDOC 0 0 C 0 0000
0302
C30^
0000 0305 E..UCCC-.N
C C L* CC-
8- CNCOGO
00&lt;/del&gt;0C00
c0uoop?
OOClCOOO
OG00000 0000000 CCCCCCC:
EOCCGOC
OCCOCOO
00000E0
CCOO0&amp;quot;O
OOCOCOO 0000000 0000000
&lt;del&gt;OOCCEC
OCO&lt;/del&gt;OCC
OOOGOGO
OOOUCOO . . *&amp;rsquo; * lTl /i 0-
9 C 9 C
5 a 0
5 0 C
9 0 G
9 9 C
9 9 C 4 0 C
9 9 C 5 9 C
9 9 C
9 0 C
9 5 0
9 9 C
9- 9.2
9 * C
9 9 C 9 9
9 5 0 a
4 9
9 c Od * C 4C
9 C *C
9 0 90
*LC OC
9 C &amp;lsquo;40
911- 10 * C xc
*CC Oc
CC C . C&amp;rsquo;C \ C
C. C:
WC&amp;rsquo; C
YCC xc
OOL YC 1-co Uf
7CC uc
NO0 aC
\CC \C 00 0
70 7 0.3 0 co r
CC +
LC- CC
WCC LL&amp;rsquo;C moo ma
Cc&amp;rsquo; 0 J &amp;lsquo;2 _LC 020 00 I-0 IYO
C-XO -0 ;I-0 ZC
OZO 00
UOO UO
VO 0 4 c 9c
9WO 9C
bU0 90
1WO 90
410 *O 5 c 00
QCC QC
920 00 * Irl 9
9w 9
9 &amp;lsquo;U 9 +a t
9 C 4-4
9VlC *CC
*DO *ro 1ao *co 100 900
930 9-c 9 n
&lt;em&gt;.YO 000
9CC QCC
&lt;del&gt;CC eco
9CO 000
400 OOO *co 90.3 * - OCO
O 0 *a0
9 0 400
5 o ecn
9 C a00
9 ? too
5 0 900
B -. . C 0 0 co
&amp;ndash;C C.z, 0 CO
C CC
-, 2 2
irJ il&amp;rsquo; (rl + %r
4 -JS &amp;rsquo; &amp;quot; 45 - WC
7. - -
0 4; O
C CC
It. I1 I1
IP. c , :- c 0 -
CCC
c3 0 e
::I: .tr ,:a:
-.:\I N ram 6
CC C CC C
03 ?, De 3
nrccc 3
CC CCCC
II I1 I1 I1 II It - -1 -3 -1 -
LUIUI&amp;quot;.WLJ xolaaa
dJCT-&amp;lsquo;S
r-CC c&amp;ndash; cccc- - &amp;ndash; n&amp;rsquo;N&amp;amp; \ c. c 0&amp;rsquo;- =
CCCCCC
11 11 I1 1) I1 11
WY V VlWY &lt;del&gt;zmrms: . a&lt;/del&gt;aua 3 J-d .r n,o .ssc CCCCCC
c20=c3
c=cccT.
CCPCCC
11 II II I1 I1 I1
IJ_LJ_f-l-&lt;/del&gt;
IA WLLIWWrl
rZlctK.23
r P- 5 -.r nilrrre&lt;/em&gt;
&amp;lt;- 7 o==- n 1 h ~-1
C c C..&amp;gt;c;
CCCCCF
I1 &amp;rsquo; I1 11 11 11 I1
(nlnirr vim DTxrs,Jj u=?&amp;lt;.aua&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C d&amp;rsquo;.J r -N h&amp;rsquo; &amp;hellip;&amp;mdash; 0 ?C 0 &amp;ldquo;roc CCCC
I1 11 11 It
J JJ I
IUWY)W
3 ZD n&amp;rsquo;
r -I n
QUY a J QJ 0
LPULTJ, l mm m C CC C
IIUUU C0r)OC
ZCOCC
COO00
UO 0 C 0 0000 * 00 c C
*COO0
80000
80000
*OUOO
*OCOO
*CCCP *oooo * * * *
*,I 4dCO * Lnme -
*OCONN
*OD000
*OClOhO
8CcCCe
*OOUCO * OC000 * OC 0 CO *&amp;ldquo;0000 *oocoo *ooooa * OC COO
*OO?CIO
*occ.c,o
4C&amp;quot;c.OC
. *I JC oc-dW
CC C C C
OCCCD
CCCCC
CCCCC
I1 I1 ,I 11 11
_12-dd
Ul0Jvh.u
XtTXXT
c PC ~m
-.-nCLc
&amp;lsquo;Wr,,-IJ. liJl&amp;rdquo;&amp;lsquo;Lr J
mmmFm
C.. r
11 I, I, I, It
:%:I$: 4.14 414 Q *C c r
*C Ch
*C CC
*CL&amp;lt;
*C Er
*ECC *CL-
*OC9
*CCC
*CCC
4.-rd
*CIC * &amp;rsquo; WC
OF un
8 ns I- R&amp;rsquo;
8NCO
Od CC
*CCC or J-
ORCC * 0 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l C CC *CCCR
0 c C CC * c C oa
O~CCC
*PCCC * c om
*.-CCd
OC CCC
C C CC
XQ n nd
C cmc
V)CIn&amp;rdquo;-C
unmmn .Innrn
cc,nICc,
r C d CC
LLlC CiCC \rFd.- o n. TO 7
?
CCU&amp;rsquo;CC
(LC CCC
VO CC om CO &lt;del&gt;cm cc
CCC.CC
(LOCOW
LO400
ZC C CU CS C CC
v&#39;3rtn.t ^ rJ)
ON cmm
ON nmm * m n, n,r
d O ONO * 0 OJ C o c C.C&lt;/del&gt; J - CU I/ 0 ONC * * *&lt;/li&gt;
&lt;li&gt;ooc-mo
QC CCC
*CCRiO
*OCP,O Itocsu
*GOCO * 0 OW0
Q 0 =NO 0.-CCC
OZCCC *&amp;ndash;*u * C- t CCI * I4 SCU r-?rrzlm
O NCINR
4 N 0 ON * t CC1 b c c oc &lt;em&gt;&amp;rsquo;% c y-? IN C CIU
-&lt;/em&gt;&amp;lt; 1
C C l&amp;hellip;
C CCF 0 0 00
CCCC
C C cr
It 11 I1 I1
J -&amp;rsquo; -I -
u&amp;rsquo; &amp;lsquo;A&amp;rsquo; l&amp;quot; LA x Zl l
I
,c 1. .r &amp;lt;,
I I Td I m ICIC,
.&amp;lt;&amp;ndash;,
la c a. u, -1 *. 1 C- J r.
OC.- 4-8 R&lt;del&gt;PI
CCCCCCC
C3C 50 no
OCC C C. C C
C&lt;/del&gt;CCCCC
I1 Il 11 II I1 II W
J J -&amp;rsquo; _I -&amp;amp; _I _I
WL&amp;rsquo;WLIWAJW zrmzzza&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;3-:4c&lt;em&gt;c
CCCC-..-R1 h.5 cccc or I .r&amp;lt; sa ,rr.m 9&amp;quot; (rm . CiCCT
I, I# It II I1 I1 I1
V~u-(Fu-u-InV srrnma mm 44 4 &amp;lt;&lt;/em&gt;.a*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7.2.4.3.7 XEOFDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Subprogram name: XEOP
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anend-of-file onastorage device (tape ordisk).
Calling Sequence:
CALL XEOF(FET)
FET-Address oftheFET
Method: XE_F executes theSCOPE WRITEF macro viatheSC_PE routine CPCtowrite theend-of-
file.
Language: COMPASS
7.2.4.3.8 XOPEN
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XOPEN generates theFile Environment Table (FET) forafile based ondata inthe
calling sequence.
Callin 9Sequence:
CALLXOPEN(FET,LFET,INDEX,LINDEX,OP)
FET -(output) arraywheretheFETistobebuilt. (First wordofFETshould have
filenameleftadjusted andzerofilled.)
LFET -(input) length ofFETplusthelength ofthecircular buffer
INDEX -Variable arraywhererelative trackaddresses fordirect access records willbe
stored.
LINDEX -Length ofINDEX. (IfO,thennoindexisimplied andfilewillbesequential.)
7.2-163 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0Opentoread/rewind
1Opentoread/no rewind
2Opentowrite/rewind
OP-3Opentowrite/no rewind
4Openfordirect access-alter/rewind (seeSCOPEmanual)
5Openfordirect access-alter/no rewind (seeSCOPEmanual)
-IConstruct FETbutdonotopenfile.
Method: XOPENbuilds theFETasdescribed intheSCOPE3.1reference manual, chapter 3.The
FETlength ismade15words long,andthebalance ofthespacesenttoXOPENandusedasthe
circular buffer. Thecircular buffer isneverusedifonlyREADX(section 7.2.4.3.15) and
WRITEX (section 7.2.4.3.14) aretobeused,andinthatcaseLFETmaybesetto30oncalls
toXOPEN.
Language: C_MPASS
7.2.4.3.9 XCLOSE
Subprogram name: XIORTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: XCLOSE closes afile butdoes notreturn ittothesystem.
Calling Sequence:
CALLXCLOSE(FET,OP)
FET-Address oftheFET
liClOse/no rewindOP-Close/rewind
Close/unload
Method: XCLOSE executes theSCOPE CLOSE macro which performs differently onthemany
versions ofSCOPE 3inthefield. Consult with your systems programmer todetermine exact
results foryour installation. Refer also totheSCOPE 3.1reference manual, chapter 3.
Language: COMPASS
7.2-164 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.4.3.10 XEVICT
Subproqram name:XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: XEVICT releases allspace occupied byafileonthedisk.
ispreserved.
Calling Sequence:
CALLXEVICT(FET)
FET-Address oftheFET
Method: XEVICT executes theSC_PE 3EVICT macro.
LanBua_e: C_MPASSThelogical filename
7.2.4.3.11 REINDX
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: REINDX redefines theindex pointer field fortheFET.
Calling Sequence:
CALLREINDX(FET,INDEX,LINDEX)
FET -Address oftheFET
INDEX -Array where newindex istobedefined
LINDEX -Length ofINDEX
Method: REINDX places theindex address andindex length inword 8oftheFETinthe
following format
59 35 17 0
FET(8) =l [LINDEX [ADD(INDEX) 1
where ADD=address
Language: C_MPASS
7.2-165 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.12 XWRITE
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartwriting, continue writing, orcomplete writing alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXWRITE(FET,RECORD,BUF,LBUF,FLAG)
FET -Arraywhere FETisstored.
RECORD -0ifsequential writing istobeginorcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhenstarting towrite therecord
BUF -Arrayofinformation tobewritten
LBUF -Length ofBUF
FLAG _IOifrecord isnottobecompleted.
(iifrecord istobecompleted withend-of-record mark.
Method: XWRITE stores theaddress ofBUFintheFET.Itthenbegins orcontinues writing
therecord either sequentially using 10WRITE ordirect access using I_RW(bothareSCOPE
utilities). IfFLAGisnonzero, therecord isthencompleted sequentially usingtheSCOPE
WRITER macro. Alldataareprocessed through thecircular buffer.
Language: C_MPASS
7.2.4.3.13 XREAD
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Tostartreading, continue reading, orcomplete reading alogical record ontape
ordiskeither sequentially orrandomly.
Calling Sequence:
CALLXREAD(FET,REC@RD,BUF,LBUF,FLAG,COUNT)
7.2-166 (611171)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET Array where FETforfile isstored.
RECORD -0ifsequential reading istobegin orcontinue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0implies RECORD istherecord number ofadirect-access record.
Usedonlywhen starting toreadtherecord
BUF -Array where data readaretobeplaced
LBUF -Length ofBUF
&lt;em&gt;iOtoreadLBUFwords ortoreadtotheendofrecord, which everoccurs first.FLAG
ifuptoLBUFwords aretoberead andpositioning tonextrecord istooccur.
-2onreturn ifend-of-file wasencountered.
&lt;em&gt;)-Ionreturn ifendofrecord wasnothitandLBUFwords were read.COUNT
I_a&lt;/em&gt;Â°&lt;/em&gt;_ __&lt;em&gt;ie_o&lt;/em&gt; _____________&lt;em&gt;r_oi_st_r_UrI_p&lt;/em&gt;.Â°f words thatwere readifanendofrecord
Method: XREAD defines where BUFislocated intheFET. Itthenbegins orcontinues reading
therecord either sequentially using 10READ orrandomly using IORR(both areSCOPE utilites).
IfFLAGisnonzero andtheendofrecord wasnotencountered, arecord isskipped tobypass
anyremaining data. This isaccomplished byusing theSC_PE SKIPF macro.
Language: COMPASS
7.2.4.3.14 WRITEX
Subprogram name: XIORTNS
T_zp_e ofroutine: Subroutine
Alternate entry points: None
Purpose: Towrite anentire logical record either sequentially orrandomly without using
thecircular buffer.
Calling Sequence:
Identical toXWRITE except FLAGisnotinterpreted (seesection 7.2.4.3.12)
Method: Thepointers FIRST, IN,GUT, andLIMIT aresettoreflect theactual output buffer
BUF,which inturnbecomes thecircular buffer. Adirect callismade tothePProutine CIO.
Language: COMPASS
7.2-167 (6/1/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IWASTPJ_N SUPPORT PROGPJ_MS
7.2.4.3.15 READX
Subprogram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Pu__ur_Dose: Toreadanentire logical reocrd either sequentially orrandomly without usingthe
circular buffer.
Calling Sequence:
Identical toXREADexcept FLAGisnotinterpreted (seesection 7.2.4.3.13).
Method: Thepointers FIRST, IN,OUT,andLIMITaresettoreflect theactual inputbuffer
BUF,which inturnbecomes thecircular buffer. Adirect callismadetothePProutine C10.
Language: COMPASS
7.2.4.3.16 XREWIND
Subprogram name: XIORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Torewind adiskortapefileandplace itatthebeginning ofinformation.
Calling Sequence:
CALLXREWIND(FET)
FET-Address oftheFET
Method: XREWIND executes theSCOPEREWIND macro.
Language: COMPASS
7.2.4.3.17 XBKREC
Subproqram name: XlORTNS
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: XBKREC backspaces atapeordiskfileonelogical record.
Callinq Sequence:
CALLXBKREC(FET)
7.2-168 (611/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
FET-Address oftheFET
Method: XBKREC executes theSCBPE BKSPmacro.
Languaqe: C_MPASS
7.2.4.3.18 XFRDREC
Subprogram name: XI_RTNS
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afileforward tothebeginning ofthenextlogical record crossing only
oneend-of-record mark.
Callin 9Sequence:
CALLXFRDREC(FET)
FET-Address oftheFET
Method: XFRDREC executes theSC_PE SKIPF macro.
Language: C_MPASS
7.2.4.3.19 XBKPREC
Subprogram name: XI_RTNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Toposition afilebackwards onephysical record.
Calling Sequence:
CALLXBKPREC(FET)
FET-Address oftheFET
Method: XBKPREC executes theSC_PE BKSPHRU macro.
Language: C_MPASS
7.2-169 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.4.3.20 XREQST
Subproqram name: XI_RTNS
_ypeofroutine: Subroutine
Purpose: Toexecute thestandard SC_PE request macro.
Callinq Sequence:
CALL XREQST(FET,PYQX,DC,DT)
FET -Address oftheFET
PYQX1DC
DTSeeSCBPE 3.1reference manual, section 3.5
Method: XREQST executes theSCOPE REQUEST macro. Thismaybeinstallation dependent.
Lanquaqe; C_MPASS
7.2.4.3.21 ANDF,_RF,C_MPLF, RSHIFT, LSHIFT
Subproqram name: FtAPFNS
Typeofroutines: AllInteger Functions.
Purpose: Toperform alogical and,or,complement, right shift, orleftshift.
Calling Sequence:
RESULT =ANDF(WORDI,WORD2)
RESULT =ORF(W@RDI,WORD2)
RESULT =COMPLF(WBRDI)
RESULT =RSHIFT(WORDI,COUNT)
RESULT =LSHIFT(W_RDI,COUNT)
where WBRDI andWBRD2 arewords being operated onandareunchanged after theexecution.
COUNT isthenumber ofbits W_RDI istobeshifted right orleft.
InRSHIFT andLSHIFT bits shifted outside ofthewordboundary arelostwhile theothers
arezerofilled.
Method: Direct assembly language logical instructions areused.
Lanquage: COMPASS
7.2-170 (611171)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
7.2.4.3.22 XFETCH,XSTORE
Subprogram name: MAPFNS
Typeofroutines: Subroutines
Alternate entry points: None
Purpose: Tofetch (store) anarray ofdatafrom (to)anywhere inthejob&amp;rsquo;s core.
Calling Sequence:
CALLXSTORE(BUF,LBUF,LOCADD)
CALLXFETCH(BUF,LBUF,LOCADD)
BUF -Receiving array (XFETCH); transmitting array (XSTORE)
LBUF -Length ofBUF
LOCADD -Variable containing theaddress fromwhich dataisfetched (XFETCH); oraddress
intowhich data isstored (XSTORE)
Method: Adirect moveofdataismade insuchawaythatitdoesnotmatter ifthearray
fromwhich dataaremoved overlaps thearray towhich thedataaremoved.
Language: COMPASS
7.2.4.3.23 LWORDS
Subprogram name: MAPFNS
Type ofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine howmanywords ofcorethere arefromtheargument tothefield
length
Callin 9Sequence:
RESULT =LWORDS(ARG)
ARG-Variable fromwhich thenunfoer ofwords tothefield length iscomputed.
Method: Thefield length, stored inlocation 768ofthejob&amp;rsquo;s core, isusedtomake the
computation.
7.2-171(6/I/71)&lt;/p&gt;
&lt;p&gt;7.2.4.3.24 CBRWDSNASTRANSUPPORTPROGRAMS
Subprogram name: MAPFNS
Typeofroutine: Integer Function
Alternate entry points: None
Purpose: Todetermine aninclusive distance inwords between twoarguments incore.
Calling Sequence:
RESULT =CORWDS(ARGI,ARG2)
ARGI andARG2arethetwoarguments forwhich theinclusive difference isdesired.
Method: RESULT =Absolute value ofthedifferences between thetwoaddresses plusone.
Language: CBMPASS
7.2.4.3.25 XJUMP
Subproqram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tomakeanabsolute jumptocodeanywhere incore.
Calling Sequence:
CALLXJUMP(L_CAT)
LOCAT =Variable where anabsolute location isstored.
Method: Ajumpisexecuted towhatever address isinthelocation LBCAT.
Lanq_aqe: CBMPASS
7.2.4.3.26 ZAP
Subprogram name: MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Purpose: Tozerocorefromwhatever location isspecified incorelocation lOl8tothefield
length asspecified inlocation 638.
Calling Sequence:
CALLZAP
7.2-172 (6/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P105</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_105/</guid>
      <description>
        
        
        &lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Method:Storezerosinalllocationsdesired.
Language: C_MPASS
7.2.4.3.27 FIELDLN
Subprogram name:MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Pu__ose: Toobtain thefield length ofthejob,ortochange thefield length andtostore
thefield length inlocations 638and768.
Calling Sequence:
CALLFIELDLN(LENGTH)
LENGTH =0iffield length istobereturned inLENGTH.
=Value &amp;gt;Oifthefield length istobechanged. Thefield length ischanged
toLENGTH.
Method: TheSC_PE memory macro (MEM) isexecuted.
Language: CIaMPASS
7.2.4.3.28 LINK20.
Subprogram name:MAPFNS
Type ofroutine: Subroutine
Alternate entry point: None
Purpose: LINK20. makes acalltoLink20.
when called canresult inaswitch toLink20.
Calling Sequence:
CALLLINK20.
Method: AcalltoLink20ismade directly.
Language: C_MPASSThrough theuseofaRENAME, aparticular routine
(e.g., RENAME PEXIT=LINK20.)
7.2.4.3.29 LINKERR
Subprogram name: LINKERR
Type ofroutine: Subroutine
7.2-173 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Purpose: Tooutput message whencalled bysubroutine LINKinXL{&lt;em&gt;ADER.
Calling Sequence:
CALLLINKERR(LINK,ERROR)
LINK-Alinknumber
ERROR-Number ofanerrormessage
Method: Writes theerrormessage specified byERR&lt;/em&gt;]R.
Language: F_RTRAN
7.2.4.4 MISCELLANEOUS
7.2.4.4.1 LKED900
Subprogram name: LKED900
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabnormally terminate execution ofthelinkage editor withanerrormessage in
caseoftableoverflow.
Calling Sequence:
CALLLKED9OO(C_DE)
C_DE-(input) number whichdefines thetypeofoverflow whichhasoccurred.
Method: Afatalerrormessage isprinted andthelinkage editor stops.
Language: F_RTRAN
7.2.4.4.2 LKED990
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabortthelinkage editor intheeventanunexpected condition (logic error) is
encountered.
Calling Sequence:
CALLLKED990
7.2-174 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: LKED990 passes theaddress from which thecall occurs toLKED995 which prints the
fatal message.
Languaqe: C_MPASS
7.2.4.4.3 LKED995
Subprogram name: LKED995
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toabort thelinkage editor abnormally
Callinq Sequence:
CALL LKEDg95(LBC)
L_C-(input) location atwhich logic error wasdetected.
Method: LKED995 prints amessage indicating that alogic error hasbeen detected andthe
location oftheerror. Thecontents ofthelinkage editor tables arethen printed byLKED999.
Finally, amode error isforced sothat, iftheuser hasincluded aDMPcontrol card, a
storage dump will betaken.
Lanquage: F_RTRAN
7.2-175 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.5 Object DeckFormat
Theobject deckofasubprogram asitisoutput fromtheassembler orthecompiler comprises
onelogical record. Eachlogical record ismadeupofanindefinite number oftables. Eachtable
isproceeded byanidentification wordwhichhastheformat:
IcNIwcl,Rl,I59 5347 35 26 17 0
where
CN=codenumber identifying thetypeoftable
WC=Wordcountofthetableexcluding identification word
LR=Codedefining themethod ofrelocation oftherelative address L
L=Relative address, 18bitsdefined differently foreachtypeoftable
7.2.5.1 PIDLTable
TheProgram Identification andLength (PIDL) Tablecontains thesubprogram identification
andnamesofeachofthecommon blocks referenced bythesubprogram.
identification word
CN:348
LR=ignored
L=0
word 1
59name ofsubprogram PLJ
17 0
PL=length ofsubprogram
7.2-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;words 2-WCDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
nameofcommon block BL
59 17 0
where
BL=length ofcommon block
IfWC=l,noreferences tocommon blocks appear inthesubprogram. Thelinkage editor isprepared
toprocess onlyonePIDLtable inanobject deck. Additional PIDLtables areignored with awarn-
ingmessage. Thelistofcommon block names iscalled theLocal Common Table (LCT). Since
relocation ofaddresses relative tocommon blocks isdesignated bypositions intheLCT,theorder
ofcommon block names issignificant.
7.2.5.2 ENTRTable
TheENTRy Point Table (ENTR Table) contains alistofallnamed entry points tothesub-
program andtoassociated common blocks (note: anentry point toacommon block isignored bythe
linkage editor andawarning message isissued). TheENTRTable must immediately follow thePIDL
Table.
identification word
CN=368
LR=ignored
L=ignored
words I-WC
Eachentry intheENTRtable consists oftwowords. Thefirst wordcontains thenameofthe
entry point. Thesecond wordcontains therelative address oftheentry point anditsmethod
ofrelocation.
Istword I entry point name
59 17J0
7.2-177(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
2ndword IRLILOC
59 26 17
RL=codedefining therelocation specified byL_C:
0=absolute (therefore theTableisignored bythelinkage editor)
1=relative tosubprogram origin
3-778=relative tocommon blockM,whereMisinposition RL-2oftheLCT
(ignored bylinkage editor)
LOC=relative address oftheentrypoint
7.2.5.3 TEXTTable
Textanddatatables (TEXTtables) contain datacomprising thesubprogram andinformation
necessary forrelocating thedata. TheTEXTTableconsists ofanorigin forthedata,thedata
itself, andindicators describing relocation (ifany)ofthethreepossible locations inadata
wordwhichmayhaverelative storage addresses.
numbers intheobject deck.
identification word
CN=408
WCsatisfies: 2_WC_208
LRt!_778TEXTTables mayappear inanyorderandany
=absolute (therefore theTableisignored bythelinkage editor)
=relative tosubprogram origin
=relative tocommon blockM,whereMisintheposition LR-2ofLCT(seesection
7.2.5.1)
L=relative address offirstwordofdata
Firstword
Thisrelocation wordconsists ofaseries upto15of4-bitbytesdescribing therelocation
ofeachofthethreepossible address references ina60-bit dataword. Thefirstbyte
(bits56-59) describes therelocation forthedatawordinthesecond wordoftheTEXTTable,
etc.Thenumber ofrelevant bytesanddatawords isdetermined byWC.Relocation isrelative
toprogram origin orthecomplement ofprogram origin (negative relocation). Thevalueand
relocation foreachbytefollows:
7.2-178 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O00x
lOxx
llxx
OlOx
Ollx
IxlO
Ixll
0010
0011norelocation
upperaddress, program relocation
upperaddress, negative relocation
middle address, program relocation
middle address, negative relocation
loweraddress, program relocation
loweraddress, negative relocation
same asIxlO
same asIxll
words2through WC
Datawords arerelocated consecutively relative toL.Alladdresses arerelocated relative
tosubprogram origin, never relative toacommon block. Relocation ofaddresses relative to
common blocks isaccomplished through FILLTables (seesection 7.2.5.4).
7.2.5.4 FILLTable
TheFILL Table contains information torelocate previously defined address fields. References
tocommon blocks arerelocated through this table.
identification word
CN=428
LR=0
L=0
words 1through WC
AllFILLTablewordsarepartitioned intosetsofcontiguous 30-bit bytes. Eachsetis
headed byonecontrol byteandfollowed byanarbitrary number ofdatabytes. Thelast
databytemaybezero. Thecontrol bytecontains information abouteachofthesubsequent
databytesuntilanother control byteisencountered.
control byte
Ioi IARI29 28 8 0
7.2-179 (611171 )&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ARistherelocation codepertaining tothesucceeding databytes. ARmayassume
0=absolute relocation (i.e., norelocation takesplace)
1=program relocation
2=negative relocation
3-778=relative tocommon blockMwhereMisinposition AR-2ofLCT(seesection
7.2.5.1)
databyte
111PJRLJLÂ°c292826 17 0
P=position within wordofaddress
I0=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C.RLhasthesame
rangeasAR(seeabove) except RL_2
LBC=relative address ofthedatawordtobemodified. Thecontents oftheaddress field
position (F)atlocation L_Crelative toRLisaddedtotheorigin asspecified byAR
inthecontrol byte.
7.2.5.5 LINKTable
TheLINKTablespecifies external references within thesubprogram.
external symbol mustappear asanentry intheLINKTable.
identification word
CN=448
LR=ignored
L:0Eachreference toan
7.2-180 (6/1/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
words lthrou9 hWC
Allremaining words arepartitioned intosets, each consisting ofone60-bit nameandaseries
ofcontiguous 30-bit databytes indicating address positions which refer totheexternal
s_nnbol described inthe60-bit name. Itispossible forthe60-bit nametobesplit between
twoco_uter words. Names ofexternal s_nnbols must begin with acharacter forwhich the
display coderepresentation hasthehighorder bitequal tozero.
nameword
59name ofexternal s_nBbol
databyte
I IPIRL I29 28 26 17 0
P=position within theword ofthereference totheexternal s_nnbol
lO=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C
0 =absolute (ignored bylinkage editor)
l =program relocation
3-778 =relative tocommon block M,where Misinposition RL-2oftheLCT.
L_C=relative address oftheword containing theexternal symbol
7.2.5.6 REPLTable
T&amp;rsquo;_eREPLTable provides anefficient means forrepetition ofablock ofdata.
identification word
CN=438
LR=ignored
7.2-181 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
L=ignored
words1through WC
Eachentry inthetableconsists oftwowords intheformat
C B
59 41 0SR S
IDR D
26 ]7
S=initial relative address ofsource data
SR=codefortherelocation oftheaddress specified byS
0=absolute (ignored bylinkage editor)
1=program relocation
3-778=relocation relative tocommon blockM,where Misinposition SR-2ofLCT
(seesection 7.2.5.1)
D=initial relative address ofdestination ofdata
DR=codefortherelocation oftheaddress specified byD;samerangeofvalueasSR
B=sizeofdatablockinwords
C=number oftimesd_tablock istoberepeated;
I=increment tobeaddedtoDbefore eachdatablock isrepeated; first repetition of
blockisatD,second atD+I,etc.
IfC=O,Cisinterpreted as1
IfB=O,Bisinterpreted as1
IfI=O,Iisinterpreted asB
IfD=O,Disinterpreted asS+B
7.2-182 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.6 Principal Linkage Editor Variables
Table 3describes principal linkage editor variables incommon blocks LKEDCxx, where
Ol_xx_07. Thefollowing conventions apply:
I. Inthedescription column, apointer, ifnotdefined further, isassumed topoint to
theIstword rather theOthword ofatable
2. Twenty character symbols inthedefault value column imply octal representation
3. Theletter &amp;ldquo;b&amp;quot;inthedefault value column implies ablank character
4. Tencharacter symbols inthedefault value column imply character string representations.
Note these areleft-adjusted intheword andzero-filled.
5. Integers (less than tendigits) inthedefault value column aredecimal numbers.
6. Ablank inthedefault value column implies theentry hasnodefault value.
7.2-183 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0
0
0
C_
OJ 0
%oO
O
O
-_ O -Q r_ O OOO -Q
Â°o__oooo O OOO r_
4- O r_ .Q I&amp;mdash; OZ00 .Z_
O -Q r-_ &lt;em&gt;J &lt;em&gt;.D- n
O .&lt;em&gt;D -&lt;/em&gt; &amp;hellip;I mm&lt;/em&gt;&amp;ndash;&lt;/em&gt;_ r_p,,.
D,-.
D&amp;mdash;
r&amp;ndash;.
cO
p,..
D-,-
p,,.O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O _ &lt;em&gt;O O
O O O OO O
O O O OO O
O O O OO O
OOO OOO OOOO
n
to
O
L&lt;/em&gt;
e-
&amp;ldquo;Z
0
c-
O
;5
-&lt;em&gt;-
gI&amp;mdash;
0 0
&amp;ldquo;&lt;em&gt;b
e-o
r,-
f,-&amp;hellip;..1
Z
.&lt;em&gt;1
c-
O
co
&lt;em&gt;.&lt;/em&gt; to _ &lt;em&gt;.-0
4=, to .&lt;/em&gt;.1 z3
f,- OJ 4-.to
CD _ .Z&lt;/em&gt; _ EO
J&lt;/em&gt; .&lt;em&gt;z &lt;em&gt;O _ Â°&lt;/em&gt;
E &lt;em&gt;-J
.&lt;/em&gt; &lt;em&gt;-
&amp;ldquo;10 &amp;ldquo;0 0
.&lt;/em&gt;- _ ..I-J
tO (J
&amp;ldquo;0 &amp;ldquo;&lt;em&gt;0 &lt;em&gt;&amp;rsquo;-
..c= 0 4J
0 0 .-&lt;/em&gt;
4&lt;/em&gt; 4- &lt;em&gt;- 0
&amp;lsquo;&lt;/em&gt; T-o_to
-0
&lt;em&gt;.; 5,- O&lt;/em&gt;-I&amp;mdash; &lt;em&gt;-&amp;rsquo;:=&lt;/em&gt; O
O O(-J &amp;quot;
&lt;em&gt;J -&lt;/em&gt; _ -I&lt;/em&gt;(/)&lt;/em&gt;â€¢
&lt;em&gt;. &lt;em&gt;J _ .&lt;/em&gt;.&lt;/em&gt; O0J
to
04- 0
0_-
&lt;em&gt;o0
e&amp;ndash;
0 _
_ 0
4-
e- E
â€¢I&lt;/em&gt; to
e.- I_
0_ &lt;em&gt;&amp;rsquo;&lt;/em&gt;
â€¢._ to
4&amp;ndash; _
0&amp;quot;0 tO
Q; S-E &lt;em&gt;-0 r&lt;/em&gt;-_ E(-_ E(-J 0to to
h- l&amp;ndash;
r_&amp;rdquo; p&amp;ndash;
l- X
Z uJ
rO
.&lt;em&gt;0
to _
I&amp;ndash; &lt;em&gt;4-0_J
to
to
r
&lt;em&gt;J
to
r&lt;/em&gt;
O O OO O
O&lt;/em&gt; v&amp;rsquo; _ &amp;lsquo;&lt;/em&gt; &amp;lsquo;_ _._O O O O O Oto
-I-J
0
(lJ
&amp;ldquo;10
Ill
&lt;em&gt;-z (.&lt;em&gt;0 I&amp;mdash; .=&lt;/em&gt; x/
to .-&lt;/em&gt; 0.3 _.l ._I _.I&amp;ndash; &lt;em&gt;.- -t-
oO z ___ Z N &amp;gt;&amp;rsquo;-
r-&lt;/em&gt; (=&amp;lsquo;3 _ _ LO _to
0
,.J
7.2-184 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O0 r&amp;ndash;
O0
O00
0
0
0
0
0
0
0
0
0r_
e_
i I&amp;ndash;
&amp;ldquo;Z
S.
0
0_
lad 0
._
e.- u
.
e-
Â¢L
e,h
%-
o
c-
o
oe-
uIlJ
I&amp;mdash;
I&amp;ndash;
x
I&amp;ndash;_ 0_
x e-
_ &lt;em&gt;J
o
L 0
,.l.a
-,i (,,-
o
S- e-&lt;/em&gt;
U _
0 r
&amp;ldquo;_ E0
&lt;em&gt;j e&amp;quot;I&amp;rdquo;-
Z
$..
0
&lt;em&gt;I; .-&lt;/em&gt; 4-&amp;gt;.&lt;/em&gt; r_G; .r-)
W- Q; &amp;ldquo;I,&amp;rsquo;- G;I&amp;mdash; e-cO 0
(&amp;rdquo; _ &amp;ldquo;13 0 &amp;ldquo;10 -_ &lt;em&gt;-
_ _ &lt;em&gt;)&lt;/em&gt; _ e=
4a .)a I.. &lt;em&gt;- 0 &amp;ldquo;,&amp;ndash;
03 .,(30
,.&amp;ndash; Zu,l..
,r&lt;/em&gt; 0
I&amp;ndash;
{-
0-&lt;/em&gt;
O_
{,_)e,mooooo__ooF:,oF:,&lt;strong&gt;go_o
3Â®_oE
â€¢&lt;/strong&gt;&amp;lsquo;o
f,-z
c0
7.2-185 (6/1/71 1&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
111
%&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0
0
np L_
L_O0
r&amp;rsquo;_ .&lt;em&gt;j0 0
0 0
0 0
n&lt;/em&gt; 0
.-J O I.iJ
z z .,-v.
d &lt;em&gt;&lt;em&gt;1
r&lt;/em&gt;
ZU,-
-&lt;/em&gt; O
I&amp;ndash;
E_ .,m &lt;em&gt;,
E0 &amp;ldquo;&amp;rsquo; &amp;lsquo;&amp;rdquo;
O&lt;/em&gt; &lt;em&gt;/ v
(&lt;/em&gt;Â¢-m &lt;em&gt;-I .JooooS
.-I J .&amp;ndash;I J .&amp;ndash;I JO O O O O O
ILl _ IAJ I.&lt;/em&gt; ILl &amp;ldquo;&amp;rsquo;
J ,.J ,&amp;ndash;I J J JO O O O O O
L_J
v_____v.d .&amp;ndash;I .&amp;ndash;I .&amp;ndash;I &amp;ndash;J J
_
z
,_ -r 0
&lt;em&gt;,0 6,3r,. Z CD 0I&lt;/em&gt; ._1
z I&amp;ndash;
I&amp;ndash; _ O
I&amp;ndash;
_-D J &amp;hellip;.I .J J_3
J O O N
Z Z Z Z Z O&#39;3
7.2-186 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
,3
4&amp;ndash;
r-,
.mc&amp;ndash;
&amp;quot; E
u&amp;rsquo;} (_
G.} .._
m:_ u&amp;rsquo;)
&amp;ldquo;[- __
&lt;em&gt;:&lt;/em&gt; 0
Â°_
K- &amp;ldquo;0
0 (IJ
â€¢_ Qj
I.&lt;em&gt;.; 0 to
_ ._
e- U e-
I1J
&amp;ldquo;G_ &amp;gt;
&lt;em&gt;- a,I
O _
O
c-
&amp;ldquo;ZU
IlJOOOOOOOOOOOO
OOOOOOOOOOOO
OOOOOOOOOO_O
&lt;em&gt;OO_OOOOOO_O
&lt;em&gt;OZ_O_O_OOZO
DO_O_O_OO&lt;/em&gt;
&lt;em&gt;O_O_O_O&lt;/em&gt;
ZZ&lt;/em&gt;&amp;raquo;ZZ_Z_ZZ0 0000000
0 0000000
0000000
0000_00
0_0_00
0__0
0&lt;/em&gt;_
Z __
&lt;em&gt;Z_0
0
0
0
0
0
0
0
0
.Q 0
r&lt;/em&gt; 0
&lt;em&gt;t&lt;/em&gt; 0
r_ 0
.Q â€¢ 0
r_ Ld 0
X__ 0
-C_ r_ 0
r_ I&amp;mdash; 0
0 eO
4J
t-
O
0
l&amp;ndash;
ILl
z
.&lt;em&gt;J
Â¢-
4&lt;/em&gt;
c-
O
I-
O
z%
&lt;em&gt;..I _
ill r-
E u.&lt;/em&gt;â€¢
.._ -&lt;em&gt;4-&lt;/em&gt;_ O
igo4-
_ t
K- oO a_
.%- K.
l.i_ _ -o O-
D E &lt;em&gt;- 0J
rr&lt;/em&gt; O &lt;em&gt;-
_ O f,..-
m O O
&lt;em&gt;- K. V;.&lt;/em&gt; -QO
K.
0
4-a
v,
â€¢&lt;/em&gt; I&amp;mdash;
%T.
_ t..-
&lt;em&gt;- 4-&lt;/em&gt; O _- &lt;em&gt;C)- c&amp;rdquo;&lt;em&gt;n r-
E&lt;/em&gt;
(I)
.ZD O
I&amp;ndash; CO
00
e- O
O&amp;ndash;&lt;/em&gt; (.-)
_o__h,
(..)r__jeo or)
0 0
,,l l&lt;/em&gt;l
..J ..JOd _- COCO r&amp;ndash; (&lt;em&gt;r)
O O O O O O O
-.I &amp;ldquo;,,I -./ -&lt;/em&gt; -,I &amp;ldquo;./ &amp;ldquo;-,&amp;rdquo;
..J -J &lt;em&gt;-I .-I .-I -J &amp;ndash;I
Q)
&lt;em&gt;a&lt;/em&gt;
cOE
T__tO &amp;ldquo;-/&amp;gt;-
I&amp;mdash; W
,,, I.&lt;/em&gt;
-lJ -1J,, I&amp;ndash; ,-w
z I&amp;ndash; _ l&amp;ndash;
._J _J _&amp;rdquo; _&amp;ndash; Z m,- Z
7.2-187 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
CZJ
O00
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0 0 0
000 0
T.
S-
O
&lt;em&gt;J
.&lt;/em&gt;-
4-
0
C
0
&amp;ldquo;5
U
v &lt;em&gt;!,.,-
Or) r&amp;rsquo;&lt;em&gt;0
&lt;em&gt;zu,-0
I&amp;mdash;
r- 0
0-&lt;/em&gt; _
v0 0 0 0 0 0
___ ___ ___ _ _ L)
&lt;em&gt;-&lt;/em&gt; r_I=&lt;/em&gt; r&lt;/em&gt;_
_/ v v _-/ v v0 0 0 0 0
&lt;em&gt;.&lt;/em&gt; _&lt;em&gt;) &lt;em&gt;&lt;em&gt;) &lt;em&gt;.) &lt;em&gt;.&lt;/em&gt; ___ C&lt;/em&gt;&lt;/em&gt;
v v V &lt;em&gt;/ v v vO&lt;/em&gt; O0 Or)
0 0 0
&lt;em&gt;-) &lt;strong&gt;)
r&lt;/strong&gt; &lt;em&gt;-&lt;/em&gt;
L_L_1,1
x/x/&amp;rdquo;&lt;/em&gt;/
&lt;em&gt;J ..&lt;/em&gt; .&amp;ndash;J
_ &amp;gt;..-
I;= L,&lt;/em&gt;
Z Z Z Z Z ZI&amp;ndash; &lt;em&gt;&amp;rdquo; kS.. Z &amp;quot;
Z Z L,&lt;/em&gt; -r L_I h
X X _ _ _ _ I.&lt;/em&gt;
Z Z Z Z ZZ _.-J &amp;lsquo;&lt;em&gt;C
LL&lt;/em&gt; &lt;em&gt;C
-&lt;/em&gt; _C
7.2-188 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&amp;lsquo;3
Z3
ro
4&amp;ndash;
(I,;
0
CO
c,.,l C)
iv} _ I/)0 0
0 0
0 0
0
0 0
0 0
0
0
0
0
430 (3: _ 0 0 C_ 0 43
430 0 r,. 0 0 0 0 43
0 0 _ 0 0 0 0 ..(3
â€¢.(3 0 _ I_ _ 0 0 0
0 ._ m-., _ I- Im I&amp;ndash; ._
0 0 -I- 0 _ _ _ _ {/} _ Im0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0_J
.J
h
..(3
L
eO
0
&amp;ldquo;0
laJ
GJ
rO
Â¢.-
-,6e-
T.
%,..
0
I.&amp;ndash;
0
._
S,-
u
o&amp;rsquo;_ .&lt;em&gt;0
QJ
Zu,-
.&lt;/em&gt; 0
I&amp;ndash;
O.&lt;em&gt;C
E_J
Eo
o_0 0 0 0 0 0 0 0 0 0 0 _ 0 0
QJ
E _ _ Od (&amp;ldquo;3 Z I&lt;/em&gt; _
::_ _&amp;ndash;I (_0 &lt;em&gt;- t/&amp;rsquo;) Is&amp;rsquo;) t/&amp;rsquo;; t/} I&amp;ndash;&amp;rdquo; I&amp;mdash; I&lt;/em&gt; _ Ls.J
7.2-189 (611171)&lt;/p&gt;
&lt;p&gt;%&amp;gt;
q-
r=-
Â¢0
0
0
â€¢_ c&amp;rsquo;-
-_ Â¢- .
uJ o &amp;ldquo;_
,_ &lt;em&gt;o
Â°&lt;em&gt;&lt;em&gt;1 .-&lt;/em&gt; 4-J
_ 0
T- 3= &amp;lsquo;&amp;ndash;
_ &amp;ldquo;&lt;/em&gt; 0
0 e- &lt;em&gt;.
c&amp;rdquo; I 4-&lt;/em&gt;
0 c- e-
5 X&amp;quot;ge.&lt;/em&gt; o &lt;em&gt;.-
&amp;ldquo;EU
G.;&lt;/em&gt; m:l- r&amp;rsquo;-
,.&amp;ndash; Zq&amp;rdquo;-
e&amp;rsquo;_ 0
I&amp;rsquo;&amp;ndash;
c&amp;rdquo; 0
Or&amp;rdquo;- _ v&amp;rsquo;
.._QJ
_-Z _&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N NNASTRAN SUPPORT PROGRAMS
7.2-190 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;j_
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.7 Linkage Editor Output andDiagnostic Messages
Figure 43shows control statements andoutput ofalinkeditofthelinkage editor.
7.2.7.1 Diagnostic Messages
Figures 31through 38showhowdiagnostic (orintermediate) output which maybeobtained from
thelinkage editor. Thisoutput isintended primarily fortestormaintenance ofthelinkage
editor. Theoutput isselected bysetting PARAM(8) toanappropriate value ontheLINKEDIT control
statement (seesection 5.6.4.2). PARAM(8) actssimilarly toasense switch, i.e., eachdefined
bittriggers acertain typeofoutput independently oftheother bitsettings. Thedecimal values
(allpowers oftwo)forPARAM(8) andtheir functions areasfollows:
Value
l
4
8
16
32
64TypeofOutput Obtained
Contents oftheGTafter eachINCLUDE andINSERT
statement
Contents ofeachobject deckasitisprocessed in
LKED025
Alltables after processing eachdeck inLKED025
Text foreachsegment after construction inLKED075
Contents ofalltables after control statement
processing
Contents ofalltables after object deckprocessing
Contents ofalltables after address assignment
processing
Contents ofeachlinkasitiswritten inLKED080 128
These values maybecombined inanydesired manner (e.g., PARAM(8) =52which is4+16+32).
7.2.7.2 LINKLIB Subprograms
Table 4gives alistofsubprograms inLINKLIB.
7.2-191 (6/I/71)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;o
O
iN;
N
W
Z
..J
O
O
&lt;em&gt;4
nÂ¢ r&amp;rsquo;&lt;/em&gt;
X UJ
o &amp;ndash;&lt;/em&gt;
t&amp;ndash;
Q
O UJ ..J
â€¢Z
.J W_
__ &amp;quot; &amp;ldquo;J 11
.J ..l.J 0 ==1_,1
I,-
=.1,.I ..&lt;em&gt;elf.&lt;em&gt;&lt;em&gt;UJU.I
ZNASTRAN SUPPORT PROGRAMS
0 O00c. 0 oO_1&amp;rdquo;Â¸Â¸ ,4&amp;rdquo;
I&lt;/em&gt;
o o
o 0
&lt;em&gt;- z _
,. z&lt;/em&gt;&lt;/em&gt;,&lt;/em&gt;,&lt;em&gt;.. __Z u__xu-,.&amp;ldquo;lJ xx
&lt;em&gt;zJO&lt;/em&gt;
O&amp;rsquo;
f,&lt;/em&gt;} J
0 0000 0 O0
0 0000 0 OC,o_0 oo
Â¢k
I
)-
,o Z
&lt;em&gt;. Lu
t&lt;/em&gt;
0 tu
r_
N
O.
0qc
Z
uJ
0
I,-
I
0 w
u.
tu I _ _ ZO
._ __
&lt;em&gt;OOOC, O O OO
OOOO_O O OO NN,4&amp;rdquo;
,O.O,O
O OOO
O OOO
&lt;em&gt;N&lt;/em&gt; X XX00&lt;/em&gt;$
O &lt;em&gt;O
00&lt;/em&gt;
OOOOO
0000000000000 O0
0000000_ O0
&lt;em&gt;o &lt;em&gt;z _
OOOOO_OOOOOOOOOOCOOOOO
OOOOOOOOOOOOOOOOC&amp;rsquo;OOOOO
O O OOOO_OO O&lt;/em&gt;
O O OOOOOOO O&lt;/em&gt;
OOOOOO_OO 0 0 0 OOOOOOO OO
000000000 0 0 00000000 O0
&lt;em&gt;&lt;em&gt;. __ _
7.2-192 (611171)g
0
U
v
Z
Z
,,w
t&lt;/em&gt;
,r,,.j
0-
..&lt;/em&gt;
0
S-
O
-I_
._
(lJ
En
tO
._-
03
_J
&lt;em&gt;r&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P105</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_105/</guid>
      <description>
        
        
        &lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
Method:Storezerosinalllocationsdesired.
Language: C_MPASS
7.2.4.3.27 FIELDLN
Subprogram name:MAPFNS
Typeofroutine: Subroutine
Alternate entry points: None
Pu__ose: Toobtain thefield length ofthejob,ortochange thefield length andtostore
thefield length inlocations 638and768.
Calling Sequence:
CALLFIELDLN(LENGTH)
LENGTH =0iffield length istobereturned inLENGTH.
=Value &amp;gt;Oifthefield length istobechanged. Thefield length ischanged
toLENGTH.
Method: TheSC_PE memory macro (MEM) isexecuted.
Language: CIaMPASS
7.2.4.3.28 LINK20.
Subprogram name:MAPFNS
Type ofroutine: Subroutine
Alternate entry point: None
Purpose: LINK20. makes acalltoLink20.
when called canresult inaswitch toLink20.
Calling Sequence:
CALLLINK20.
Method: AcalltoLink20ismade directly.
Language: C_MPASSThrough theuseofaRENAME, aparticular routine
(e.g., RENAME PEXIT=LINK20.)
7.2.4.3.29 LINKERR
Subprogram name: LINKERR
Type ofroutine: Subroutine
7.2-173 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Purpose: Tooutput message whencalled bysubroutine LINKinXL{&lt;em&gt;ADER.
Calling Sequence:
CALLLINKERR(LINK,ERROR)
LINK-Alinknumber
ERROR-Number ofanerrormessage
Method: Writes theerrormessage specified byERR&lt;/em&gt;]R.
Language: F_RTRAN
7.2.4.4 MISCELLANEOUS
7.2.4.4.1 LKED900
Subprogram name: LKED900
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabnormally terminate execution ofthelinkage editor withanerrormessage in
caseoftableoverflow.
Calling Sequence:
CALLLKED9OO(C_DE)
C_DE-(input) number whichdefines thetypeofoverflow whichhasoccurred.
Method: Afatalerrormessage isprinted andthelinkage editor stops.
Language: F_RTRAN
7.2.4.4.2 LKED990
Subprogram name: LKED320
Typeofroutine: Subroutine
Alternate entrypoints: None
Purpose: Toabortthelinkage editor intheeventanunexpected condition (logic error) is
encountered.
Calling Sequence:
CALLLKED990
7.2-174 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Method: LKED990 passes theaddress from which thecall occurs toLKED995 which prints the
fatal message.
Languaqe: C_MPASS
7.2.4.4.3 LKED995
Subprogram name: LKED995
Type ofroutine: Subroutine
Alternate entry points: None
Purpose: Toabort thelinkage editor abnormally
Callinq Sequence:
CALL LKEDg95(LBC)
L_C-(input) location atwhich logic error wasdetected.
Method: LKED995 prints amessage indicating that alogic error hasbeen detected andthe
location oftheerror. Thecontents ofthelinkage editor tables arethen printed byLKED999.
Finally, amode error isforced sothat, iftheuser hasincluded aDMPcontrol card, a
storage dump will betaken.
Lanquage: F_RTRAN
7.2-175 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.5 Object DeckFormat
Theobject deckofasubprogram asitisoutput fromtheassembler orthecompiler comprises
onelogical record. Eachlogical record ismadeupofanindefinite number oftables. Eachtable
isproceeded byanidentification wordwhichhastheformat:
IcNIwcl,Rl,I59 5347 35 26 17 0
where
CN=codenumber identifying thetypeoftable
WC=Wordcountofthetableexcluding identification word
LR=Codedefining themethod ofrelocation oftherelative address L
L=Relative address, 18bitsdefined differently foreachtypeoftable
7.2.5.1 PIDLTable
TheProgram Identification andLength (PIDL) Tablecontains thesubprogram identification
andnamesofeachofthecommon blocks referenced bythesubprogram.
identification word
CN:348
LR=ignored
L=0
word 1
59name ofsubprogram PLJ
17 0
PL=length ofsubprogram
7.2-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;words 2-WCDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
nameofcommon block BL
59 17 0
where
BL=length ofcommon block
IfWC=l,noreferences tocommon blocks appear inthesubprogram. Thelinkage editor isprepared
toprocess onlyonePIDLtable inanobject deck. Additional PIDLtables areignored with awarn-
ingmessage. Thelistofcommon block names iscalled theLocal Common Table (LCT). Since
relocation ofaddresses relative tocommon blocks isdesignated bypositions intheLCT,theorder
ofcommon block names issignificant.
7.2.5.2 ENTRTable
TheENTRy Point Table (ENTR Table) contains alistofallnamed entry points tothesub-
program andtoassociated common blocks (note: anentry point toacommon block isignored bythe
linkage editor andawarning message isissued). TheENTRTable must immediately follow thePIDL
Table.
identification word
CN=368
LR=ignored
L=ignored
words I-WC
Eachentry intheENTRtable consists oftwowords. Thefirst wordcontains thenameofthe
entry point. Thesecond wordcontains therelative address oftheentry point anditsmethod
ofrelocation.
Istword I entry point name
59 17J0
7.2-177(6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
2ndword IRLILOC
59 26 17
RL=codedefining therelocation specified byL_C:
0=absolute (therefore theTableisignored bythelinkage editor)
1=relative tosubprogram origin
3-778=relative tocommon blockM,whereMisinposition RL-2oftheLCT
(ignored bylinkage editor)
LOC=relative address oftheentrypoint
7.2.5.3 TEXTTable
Textanddatatables (TEXTtables) contain datacomprising thesubprogram andinformation
necessary forrelocating thedata. TheTEXTTableconsists ofanorigin forthedata,thedata
itself, andindicators describing relocation (ifany)ofthethreepossible locations inadata
wordwhichmayhaverelative storage addresses.
numbers intheobject deck.
identification word
CN=408
WCsatisfies: 2_WC_208
LRt!_778TEXTTables mayappear inanyorderandany
=absolute (therefore theTableisignored bythelinkage editor)
=relative tosubprogram origin
=relative tocommon blockM,whereMisintheposition LR-2ofLCT(seesection
7.2.5.1)
L=relative address offirstwordofdata
Firstword
Thisrelocation wordconsists ofaseries upto15of4-bitbytesdescribing therelocation
ofeachofthethreepossible address references ina60-bit dataword. Thefirstbyte
(bits56-59) describes therelocation forthedatawordinthesecond wordoftheTEXTTable,
etc.Thenumber ofrelevant bytesanddatawords isdetermined byWC.Relocation isrelative
toprogram origin orthecomplement ofprogram origin (negative relocation). Thevalueand
relocation foreachbytefollows:
7.2-178 (6/I171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O00x
lOxx
llxx
OlOx
Ollx
IxlO
Ixll
0010
0011norelocation
upperaddress, program relocation
upperaddress, negative relocation
middle address, program relocation
middle address, negative relocation
loweraddress, program relocation
loweraddress, negative relocation
same asIxlO
same asIxll
words2through WC
Datawords arerelocated consecutively relative toL.Alladdresses arerelocated relative
tosubprogram origin, never relative toacommon block. Relocation ofaddresses relative to
common blocks isaccomplished through FILLTables (seesection 7.2.5.4).
7.2.5.4 FILLTable
TheFILL Table contains information torelocate previously defined address fields. References
tocommon blocks arerelocated through this table.
identification word
CN=428
LR=0
L=0
words 1through WC
AllFILLTablewordsarepartitioned intosetsofcontiguous 30-bit bytes. Eachsetis
headed byonecontrol byteandfollowed byanarbitrary number ofdatabytes. Thelast
databytemaybezero. Thecontrol bytecontains information abouteachofthesubsequent
databytesuntilanother control byteisencountered.
control byte
Ioi IARI29 28 8 0
7.2-179 (611171 )&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ARistherelocation codepertaining tothesucceeding databytes. ARmayassume
0=absolute relocation (i.e., norelocation takesplace)
1=program relocation
2=negative relocation
3-778=relative tocommon blockMwhereMisinposition AR-2ofLCT(seesection
7.2.5.1)
databyte
111PJRLJLÂ°c292826 17 0
P=position within wordofaddress
I0=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C.RLhasthesame
rangeasAR(seeabove) except RL_2
LBC=relative address ofthedatawordtobemodified. Thecontents oftheaddress field
position (F)atlocation L_Crelative toRLisaddedtotheorigin asspecified byAR
inthecontrol byte.
7.2.5.5 LINKTable
TheLINKTablespecifies external references within thesubprogram.
external symbol mustappear asanentry intheLINKTable.
identification word
CN=448
LR=ignored
L:0Eachreference toan
7.2-180 (6/1/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
words lthrou9 hWC
Allremaining words arepartitioned intosets, each consisting ofone60-bit nameandaseries
ofcontiguous 30-bit databytes indicating address positions which refer totheexternal
s_nnbol described inthe60-bit name. Itispossible forthe60-bit nametobesplit between
twoco_uter words. Names ofexternal s_nnbols must begin with acharacter forwhich the
display coderepresentation hasthehighorder bitequal tozero.
nameword
59name ofexternal s_nBbol
databyte
I IPIRL I29 28 26 17 0
P=position within theword ofthereference totheexternal s_nnbol
lO=upper
Ol=middle
O0=lower
RL=codepertaining totherelocation oftheaddress specified byL_C
0 =absolute (ignored bylinkage editor)
l =program relocation
3-778 =relative tocommon block M,where Misinposition RL-2oftheLCT.
L_C=relative address oftheword containing theexternal symbol
7.2.5.6 REPLTable
T&amp;rsquo;_eREPLTable provides anefficient means forrepetition ofablock ofdata.
identification word
CN=438
LR=ignored
7.2-181 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
L=ignored
words1through WC
Eachentry inthetableconsists oftwowords intheformat
C B
59 41 0SR S
IDR D
26 ]7
S=initial relative address ofsource data
SR=codefortherelocation oftheaddress specified byS
0=absolute (ignored bylinkage editor)
1=program relocation
3-778=relocation relative tocommon blockM,where Misinposition SR-2ofLCT
(seesection 7.2.5.1)
D=initial relative address ofdestination ofdata
DR=codefortherelocation oftheaddress specified byD;samerangeofvalueasSR
B=sizeofdatablockinwords
C=number oftimesd_tablock istoberepeated;
I=increment tobeaddedtoDbefore eachdatablock isrepeated; first repetition of
blockisatD,second atD+I,etc.
IfC=O,Cisinterpreted as1
IfB=O,Bisinterpreted as1
IfI=O,Iisinterpreted asB
IfD=O,Disinterpreted asS+B
7.2-182 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.6 Principal Linkage Editor Variables
Table 3describes principal linkage editor variables incommon blocks LKEDCxx, where
Ol_xx_07. Thefollowing conventions apply:
I. Inthedescription column, apointer, ifnotdefined further, isassumed topoint to
theIstword rather theOthword ofatable
2. Twenty character symbols inthedefault value column imply octal representation
3. Theletter &amp;ldquo;b&amp;quot;inthedefault value column implies ablank character
4. Tencharacter symbols inthedefault value column imply character string representations.
Note these areleft-adjusted intheword andzero-filled.
5. Integers (less than tendigits) inthedefault value column aredecimal numbers.
6. Ablank inthedefault value column implies theentry hasnodefault value.
7.2-183 (611171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
0
0
0
C_
OJ 0
%oO
O
O
-_ O -Q r_ O OOO -Q
Â°o__oooo O OOO r_
4- O r_ .Q I&amp;mdash; OZ00 .Z_
O -Q r-_ &lt;em&gt;J &lt;em&gt;.D- n
O .&lt;em&gt;D -&lt;/em&gt; &amp;hellip;I mm&lt;/em&gt;&amp;ndash;&lt;/em&gt;_ r_p,,.
D,-.
D&amp;mdash;
r&amp;ndash;.
cO
p,..
D-,-
p,,.O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O O OO O
O O _ &lt;em&gt;O O
O O O OO O
O O O OO O
O O O OO O
OOO OOO OOOO
n
to
O
L&lt;/em&gt;
e-
&amp;ldquo;Z
0
c-
O
;5
-&lt;em&gt;-
gI&amp;mdash;
0 0
&amp;ldquo;&lt;em&gt;b
e-o
r,-
f,-&amp;hellip;..1
Z
.&lt;em&gt;1
c-
O
co
&lt;em&gt;.&lt;/em&gt; to _ &lt;em&gt;.-0
4=, to .&lt;/em&gt;.1 z3
f,- OJ 4-.to
CD _ .Z&lt;/em&gt; _ EO
J&lt;/em&gt; .&lt;em&gt;z &lt;em&gt;O _ Â°&lt;/em&gt;
E &lt;em&gt;-J
.&lt;/em&gt; &lt;em&gt;-
&amp;ldquo;10 &amp;ldquo;0 0
.&lt;/em&gt;- _ ..I-J
tO (J
&amp;ldquo;0 &amp;ldquo;&lt;em&gt;0 &lt;em&gt;&amp;rsquo;-
..c= 0 4J
0 0 .-&lt;/em&gt;
4&lt;/em&gt; 4- &lt;em&gt;- 0
&amp;lsquo;&lt;/em&gt; T-o_to
-0
&lt;em&gt;.; 5,- O&lt;/em&gt;-I&amp;mdash; &lt;em&gt;-&amp;rsquo;:=&lt;/em&gt; O
O O(-J &amp;quot;
&lt;em&gt;J -&lt;/em&gt; _ -I&lt;/em&gt;(/)&lt;/em&gt;â€¢
&lt;em&gt;. &lt;em&gt;J _ .&lt;/em&gt;.&lt;/em&gt; O0J
to
04- 0
0_-
&lt;em&gt;o0
e&amp;ndash;
0 _
_ 0
4-
e- E
â€¢I&lt;/em&gt; to
e.- I_
0_ &lt;em&gt;&amp;rsquo;&lt;/em&gt;
â€¢._ to
4&amp;ndash; _
0&amp;quot;0 tO
Q; S-E &lt;em&gt;-0 r&lt;/em&gt;-_ E(-_ E(-J 0to to
h- l&amp;ndash;
r_&amp;rdquo; p&amp;ndash;
l- X
Z uJ
rO
.&lt;em&gt;0
to _
I&amp;ndash; &lt;em&gt;4-0_J
to
to
r
&lt;em&gt;J
to
r&lt;/em&gt;
O O OO O
O&lt;/em&gt; v&amp;rsquo; _ &amp;lsquo;&lt;/em&gt; &amp;lsquo;_ _._O O O O O Oto
-I-J
0
(lJ
&amp;ldquo;10
Ill
&lt;em&gt;-z (.&lt;em&gt;0 I&amp;mdash; .=&lt;/em&gt; x/
to .-&lt;/em&gt; 0.3 _.l ._I _.I&amp;ndash; &lt;em&gt;.- -t-
oO z ___ Z N &amp;gt;&amp;rsquo;-
r-&lt;/em&gt; (=&amp;lsquo;3 _ _ LO _to
0
,.J
7.2-184 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
O0 r&amp;ndash;
O0
O00
0
0
0
0
0
0
0
0
0r_
e_
i I&amp;ndash;
&amp;ldquo;Z
S.
0
0_
lad 0
._
e.- u
.
e-
Â¢L
e,h
%-
o
c-
o
oe-
uIlJ
I&amp;mdash;
I&amp;ndash;
x
I&amp;ndash;_ 0_
x e-
_ &lt;em&gt;J
o
L 0
,.l.a
-,i (,,-
o
S- e-&lt;/em&gt;
U _
0 r
&amp;ldquo;_ E0
&lt;em&gt;j e&amp;quot;I&amp;rdquo;-
Z
$..
0
&lt;em&gt;I; .-&lt;/em&gt; 4-&amp;gt;.&lt;/em&gt; r_G; .r-)
W- Q; &amp;ldquo;I,&amp;rsquo;- G;I&amp;mdash; e-cO 0
(&amp;rdquo; _ &amp;ldquo;13 0 &amp;ldquo;10 -_ &lt;em&gt;-
_ _ &lt;em&gt;)&lt;/em&gt; _ e=
4a .)a I.. &lt;em&gt;- 0 &amp;ldquo;,&amp;ndash;
03 .,(30
,.&amp;ndash; Zu,l..
,r&lt;/em&gt; 0
I&amp;ndash;
{-
0-&lt;/em&gt;
O_
{,_)e,mooooo__ooF:,oF:,&lt;strong&gt;go_o
3Â®_oE
â€¢&lt;/strong&gt;&amp;lsquo;o
f,-z
c0
7.2-185 (6/1/71 1&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
111
%&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0
0
np L_
L_O0
r&amp;rsquo;_ .&lt;em&gt;j0 0
0 0
0 0
n&lt;/em&gt; 0
.-J O I.iJ
z z .,-v.
d &lt;em&gt;&lt;em&gt;1
r&lt;/em&gt;
ZU,-
-&lt;/em&gt; O
I&amp;ndash;
E_ .,m &lt;em&gt;,
E0 &amp;ldquo;&amp;rsquo; &amp;lsquo;&amp;rdquo;
O&lt;/em&gt; &lt;em&gt;/ v
(&lt;/em&gt;Â¢-m &lt;em&gt;-I .JooooS
.-I J .&amp;ndash;I J .&amp;ndash;I JO O O O O O
ILl _ IAJ I.&lt;/em&gt; ILl &amp;ldquo;&amp;rsquo;
J ,.J ,&amp;ndash;I J J JO O O O O O
L_J
v_____v.d .&amp;ndash;I .&amp;ndash;I .&amp;ndash;I &amp;ndash;J J
_
z
,_ -r 0
&lt;em&gt;,0 6,3r,. Z CD 0I&lt;/em&gt; ._1
z I&amp;ndash;
I&amp;ndash; _ O
I&amp;ndash;
_-D J &amp;hellip;.I .J J_3
J O O N
Z Z Z Z Z O&#39;3
7.2-186 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
,3
4&amp;ndash;
r-,
.mc&amp;ndash;
&amp;quot; E
u&amp;rsquo;} (_
G.} .._
m:_ u&amp;rsquo;)
&amp;ldquo;[- __
&lt;em&gt;:&lt;/em&gt; 0
Â°_
K- &amp;ldquo;0
0 (IJ
â€¢_ Qj
I.&lt;em&gt;.; 0 to
_ ._
e- U e-
I1J
&amp;ldquo;G_ &amp;gt;
&lt;em&gt;- a,I
O _
O
c-
&amp;ldquo;ZU
IlJOOOOOOOOOOOO
OOOOOOOOOOOO
OOOOOOOOOO_O
&lt;em&gt;OO_OOOOOO_O
&lt;em&gt;OZ_O_O_OOZO
DO_O_O_OO&lt;/em&gt;
&lt;em&gt;O_O_O_O&lt;/em&gt;
ZZ&lt;/em&gt;&amp;raquo;ZZ_Z_ZZ0 0000000
0 0000000
0000000
0000_00
0_0_00
0__0
0&lt;/em&gt;_
Z __
&lt;em&gt;Z_0
0
0
0
0
0
0
0
0
.Q 0
r&lt;/em&gt; 0
&lt;em&gt;t&lt;/em&gt; 0
r_ 0
.Q â€¢ 0
r_ Ld 0
X__ 0
-C_ r_ 0
r_ I&amp;mdash; 0
0 eO
4J
t-
O
0
l&amp;ndash;
ILl
z
.&lt;em&gt;J
Â¢-
4&lt;/em&gt;
c-
O
I-
O
z%
&lt;em&gt;..I _
ill r-
E u.&lt;/em&gt;â€¢
.._ -&lt;em&gt;4-&lt;/em&gt;_ O
igo4-
_ t
K- oO a_
.%- K.
l.i_ _ -o O-
D E &lt;em&gt;- 0J
rr&lt;/em&gt; O &lt;em&gt;-
_ O f,..-
m O O
&lt;em&gt;- K. V;.&lt;/em&gt; -QO
K.
0
4-a
v,
â€¢&lt;/em&gt; I&amp;mdash;
%T.
_ t..-
&lt;em&gt;- 4-&lt;/em&gt; O _- &lt;em&gt;C)- c&amp;rdquo;&lt;em&gt;n r-
E&lt;/em&gt;
(I)
.ZD O
I&amp;ndash; CO
00
e- O
O&amp;ndash;&lt;/em&gt; (.-)
_o__h,
(..)r__jeo or)
0 0
,,l l&lt;/em&gt;l
..J ..JOd _- COCO r&amp;ndash; (&lt;em&gt;r)
O O O O O O O
-.I &amp;ldquo;,,I -./ -&lt;/em&gt; -,I &amp;ldquo;./ &amp;ldquo;-,&amp;rdquo;
..J -J &lt;em&gt;-I .-I .-I -J &amp;ndash;I
Q)
&lt;em&gt;a&lt;/em&gt;
cOE
T__tO &amp;ldquo;-/&amp;gt;-
I&amp;mdash; W
,,, I.&lt;/em&gt;
-lJ -1J,, I&amp;ndash; ,-w
z I&amp;ndash; _ l&amp;ndash;
._J _J _&amp;rdquo; _&amp;ndash; Z m,- Z
7.2-187 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
CZJ
O00
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
00
0 0 0
000 0
T.
S-
O
&lt;em&gt;J
.&lt;/em&gt;-
4-
0
C
0
&amp;ldquo;5
U
v &lt;em&gt;!,.,-
Or) r&amp;rsquo;&lt;em&gt;0
&lt;em&gt;zu,-0
I&amp;mdash;
r- 0
0-&lt;/em&gt; _
v0 0 0 0 0 0
___ ___ ___ _ _ L)
&lt;em&gt;-&lt;/em&gt; r_I=&lt;/em&gt; r&lt;/em&gt;_
_/ v v _-/ v v0 0 0 0 0
&lt;em&gt;.&lt;/em&gt; _&lt;em&gt;) &lt;em&gt;&lt;em&gt;) &lt;em&gt;.) &lt;em&gt;.&lt;/em&gt; ___ C&lt;/em&gt;&lt;/em&gt;
v v V &lt;em&gt;/ v v vO&lt;/em&gt; O0 Or)
0 0 0
&lt;em&gt;-) &lt;strong&gt;)
r&lt;/strong&gt; &lt;em&gt;-&lt;/em&gt;
L_L_1,1
x/x/&amp;rdquo;&lt;/em&gt;/
&lt;em&gt;J ..&lt;/em&gt; .&amp;ndash;J
_ &amp;gt;..-
I;= L,&lt;/em&gt;
Z Z Z Z Z ZI&amp;ndash; &lt;em&gt;&amp;rdquo; kS.. Z &amp;quot;
Z Z L,&lt;/em&gt; -r L_I h
X X _ _ _ _ I.&lt;/em&gt;
Z Z Z Z ZZ _.-J &amp;lsquo;&lt;em&gt;C
LL&lt;/em&gt; &lt;em&gt;C
-&lt;/em&gt; _C
7.2-188 (6/I/71)&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&amp;lsquo;3
Z3
ro
4&amp;ndash;
(I,;
0
CO
c,.,l C)
iv} _ I/)0 0
0 0
0 0
0
0 0
0 0
0
0
0
0
430 (3: _ 0 0 C_ 0 43
430 0 r,. 0 0 0 0 43
0 0 _ 0 0 0 0 ..(3
â€¢.(3 0 _ I_ _ 0 0 0
0 ._ m-., _ I- Im I&amp;ndash; ._
0 0 -I- 0 _ _ _ _ {/} _ Im0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0_J
.J
h
..(3
L
eO
0
&amp;ldquo;0
laJ
GJ
rO
Â¢.-
-,6e-
T.
%,..
0
I.&amp;ndash;
0
._
S,-
u
o&amp;rsquo;_ .&lt;em&gt;0
QJ
Zu,-
.&lt;/em&gt; 0
I&amp;ndash;
O.&lt;em&gt;C
E_J
Eo
o_0 0 0 0 0 0 0 0 0 0 0 _ 0 0
QJ
E _ _ Od (&amp;ldquo;3 Z I&lt;/em&gt; _
::_ _&amp;ndash;I (_0 &lt;em&gt;- t/&amp;rsquo;) Is&amp;rsquo;) t/&amp;rsquo;; t/} I&amp;ndash;&amp;rdquo; I&amp;mdash; I&lt;/em&gt; _ Ls.J
7.2-189 (611171)&lt;/p&gt;
&lt;p&gt;%&amp;gt;
q-
r=-
Â¢0
0
0
â€¢_ c&amp;rsquo;-
-_ Â¢- .
uJ o &amp;ldquo;_
,_ &lt;em&gt;o
Â°&lt;em&gt;&lt;em&gt;1 .-&lt;/em&gt; 4-J
_ 0
T- 3= &amp;lsquo;&amp;ndash;
_ &amp;ldquo;&lt;/em&gt; 0
0 e- &lt;em&gt;.
c&amp;rdquo; I 4-&lt;/em&gt;
0 c- e-
5 X&amp;quot;ge.&lt;/em&gt; o &lt;em&gt;.-
&amp;ldquo;EU
G.;&lt;/em&gt; m:l- r&amp;rsquo;-
,.&amp;ndash; Zq&amp;rdquo;-
e&amp;rsquo;_ 0
I&amp;rsquo;&amp;ndash;
c&amp;rdquo; 0
Or&amp;rdquo;- _ v&amp;rsquo;
.._QJ
_-Z _&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N NNASTRAN SUPPORT PROGRAMS
7.2-190 (6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;j_
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.7 Linkage Editor Output andDiagnostic Messages
Figure 43shows control statements andoutput ofalinkeditofthelinkage editor.
7.2.7.1 Diagnostic Messages
Figures 31through 38showhowdiagnostic (orintermediate) output which maybeobtained from
thelinkage editor. Thisoutput isintended primarily fortestormaintenance ofthelinkage
editor. Theoutput isselected bysetting PARAM(8) toanappropriate value ontheLINKEDIT control
statement (seesection 5.6.4.2). PARAM(8) actssimilarly toasense switch, i.e., eachdefined
bittriggers acertain typeofoutput independently oftheother bitsettings. Thedecimal values
(allpowers oftwo)forPARAM(8) andtheir functions areasfollows:
Value
l
4
8
16
32
64TypeofOutput Obtained
Contents oftheGTafter eachINCLUDE andINSERT
statement
Contents ofeachobject deckasitisprocessed in
LKED025
Alltables after processing eachdeck inLKED025
Text foreachsegment after construction inLKED075
Contents ofalltables after control statement
processing
Contents ofalltables after object deckprocessing
Contents ofalltables after address assignment
processing
Contents ofeachlinkasitiswritten inLKED080 128
These values maybecombined inanydesired manner (e.g., PARAM(8) =52which is4+16+32).
7.2.7.2 LINKLIB Subprograms
Table 4gives alistofsubprograms inLINKLIB.
7.2-191 (6/I/71)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;o
O
iN;
N
W
Z
..J
O
O
&lt;em&gt;4
nÂ¢ r&amp;rsquo;&lt;/em&gt;
X UJ
o &amp;ndash;&lt;/em&gt;
t&amp;ndash;
Q
O UJ ..J
â€¢Z
.J W_
__ &amp;quot; &amp;ldquo;J 11
.J ..l.J 0 ==1_,1
I,-
=.1,.I ..&lt;em&gt;elf.&lt;em&gt;&lt;em&gt;UJU.I
ZNASTRAN SUPPORT PROGRAMS
0 O00c. 0 oO_1&amp;rdquo;Â¸Â¸ ,4&amp;rdquo;
I&lt;/em&gt;
o o
o 0
&lt;em&gt;- z _
,. z&lt;/em&gt;&lt;/em&gt;,&lt;/em&gt;,&lt;em&gt;.. __Z u__xu-,.&amp;ldquo;lJ xx
&lt;em&gt;zJO&lt;/em&gt;
O&amp;rsquo;
f,&lt;/em&gt;} J
0 0000 0 O0
0 0000 0 OC,o_0 oo
Â¢k
I
)-
,o Z
&lt;em&gt;. Lu
t&lt;/em&gt;
0 tu
r_
N
O.
0qc
Z
uJ
0
I,-
I
0 w
u.
tu I _ _ ZO
._ __
&lt;em&gt;OOOC, O O OO
OOOO_O O OO NN,4&amp;rdquo;
,O.O,O
O OOO
O OOO
&lt;em&gt;N&lt;/em&gt; X XX00&lt;/em&gt;$
O &lt;em&gt;O
00&lt;/em&gt;
OOOOO
0000000000000 O0
0000000_ O0
&lt;em&gt;o &lt;em&gt;z _
OOOOO_OOOOOOOOOOCOOOOO
OOOOOOOOOOOOOOOOC&amp;rsquo;OOOOO
O O OOOO_OO O&lt;/em&gt;
O O OOOOOOO O&lt;/em&gt;
OOOOOO_OO 0 0 0 OOOOOOO OO
000000000 0 0 00000000 O0
&lt;em&gt;&lt;em&gt;. __ _
7.2-192 (611171)g
0
U
v
Z
Z
,,w
t&lt;/em&gt;
,r,,.j
0-
..&lt;/em&gt;
0
S-
O
-I_
._
(lJ
En
tO
._-
03
_J
&lt;em&gt;r&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P106</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_106/</guid>
      <description>
        
        
        &lt;p&gt;C_
I-
.Â¢I
u
C)
.I
O
0__.-
â€¢&amp;hellip;a,.I
zOC
N
4&amp;quot;(5
â€¢N
OI-
N
U
C)
&amp;ndash;I
0
Z
C)
,e[
U
0._ .j
0
I-
.J
Z
t- 0
ZI&amp;ndash;
U
0
0 ..I
a. Z
0
t..
I-
)-,c[
u
I&amp;ndash;
Z
Z 0
U
0
_ Z
O
.J
0
Z
r_DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
0g-400
000-.4
OC*C,
0C&amp;rsquo;O0 OOO OO OO OO
X II III IIIII IIII
O I II &lt;em&gt;&amp;lsquo;0. n, &lt;em&gt;- I II IIIII III
Z&lt;/em&gt; I L&lt;/em&gt;&amp;rsquo;&lt;em&gt;!.) II IXZ&amp;quot; at.&lt;/em&gt;.nuj U I II IIIII III
C:}u__.&lt;em&gt;.-&lt;/em&gt;&amp;rsquo;, _ _ &lt;em&gt;uZ n&amp;quot;euZ&lt;/em&gt;._ I&amp;ndash;r&amp;quot;C:) r_(::9 r-CD F..J F.J r-;.F,_ (DF,.J
._ I&amp;ndash;I &lt;em&gt;rc)&lt;/em&gt; II..&lt;em&gt;..I&lt;/em&gt;.,&lt;em&gt;..&lt;/em&gt;,.&lt;em&gt;&lt;em&gt;E&amp;rsquo;X (D&lt;/em&gt; III IIII IIII
uu&lt;/em&gt; I II II IIIII IIII
I II II IIIII IIII
14.
C_0 0 00 000 Â¢&lt;em&gt;0 0 0&lt;/em&gt;-&amp;rsquo; _ 00 00 0 Â¢D0
0 000 0 00 00 _ 0&amp;quot;_0 0 Â¢D00 _ 00
I&amp;ndash; e _ O. &amp;ndash;I
I ,v. t,u f,,u uJ ,&amp;rsquo;.&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.. r_I&amp;ndash; I&amp;ndash; I.- I&amp;ndash; &lt;em&gt;- I&amp;ndash; C
I&amp;mdash; :a&lt;/em&gt;_ _, )&amp;quot;)&amp;ldquo;Z l&amp;hellip; x ,,n_L I&amp;ndash;I&amp;ndash; _U#&amp;lsquo;I&amp;rdquo;%0
0
c-
..J
5-
&amp;ndash;.s
7.2-193(6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ti_U__0 OU_,-&lt;em&gt;(&lt;em&gt;WDI&lt;/em&gt; 0 &lt;em&gt;D
&lt;em&gt;I 0i&lt;/em&gt; ,-4r&lt;/em&gt;,-I e%lMr&lt;/em&gt; I&amp;rsquo;- ,-i
0
00 t3 O0 _ O.&lt;em&gt;t &amp;ldquo;&lt;em&gt;C&amp;rdquo; 0
0(D (D O&lt;/em&gt; cJC_c_O 0 0
(D0 0 O0 (&lt;/em&gt; OC_O 0 0
iI IIIi!lI iIIII II
I
Z r-&lt;em&gt;C C&lt;/em&gt; z zZ ZZCb_ (:3B-LIL.&lt;em&gt;r_Z Z Z
II I I!II II I IIl II I
,, &amp;lsquo;, , ,,,, ,, , IIl l, ,
C, o o0 O c,o&lt;/em&gt; o0 0* o0 o 0 oo o o Â¢
0o 0(J 0 0 o 0 _ o 0 _3, oc_00 00 _D o 0 ,-&lt;em&gt;04&lt;/em&gt;
40
0
0
40
qJ
&lt;em&gt;J
v
03
O&lt;/em&gt;
kL
7.2-194 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
,4.,,-&lt;em&gt;4.
rn_IC
&lt;em&gt;edl,rjO0
CJC-
CJC&amp;rsquo;C.
O.IQ&lt;/em&gt;
N*,wl(&amp;quot;&lt;/em&gt;
,,-,I(Ml_&amp;rsquo;_
0C&amp;rsquo;C_&amp;rsquo;
0000
IW.
0
0
ooo _
Of_C 0 C
Â¢&amp;rsquo;&lt;em&gt;t&amp;quot;&lt;em&gt;I,.- 4&amp;quot;
tM&lt;/em&gt;-4I&lt;/em&gt; N
,-4tM(M
ooo &lt;em&gt;C&amp;rsquo;C,O C&amp;quot; 0
00C&amp;rsquo; 0 O
,Â£&amp;rsquo;,,,I-l&lt;/em&gt;&amp;rsquo;_ WD ut_ 4.
,,.,i,,-.*(M N
OOC.J 0 0 0
00C. 00 0
O OOCJ oÂ¢)
oOOC) 00
0000 000
N
0
0
0
4&amp;quot;
0
000000 0
00_00 0 O
OOOOO_ O O O
OOOOOO O0 O
O_OOOO OÂ°O O O
000_00 oOO 0 0
NOÂ° {f_(%1 Nh{elN_&amp;lsquo;1 &lt;em&gt;,4 &lt;em&gt;4 N I-I
I_1twT_O.-II&amp;rsquo;llfr_Irjell e-I,,-iOO..4 C_O&lt;/em&gt;.t F.)C.I i-4Â° .e40 C&lt;/em&gt;
OC)OC_O0 0 0Â¢&lt;em&gt;C&lt;/em&gt;Â¢,.,00 000C&amp;rsquo;&lt;em&gt;O Â¢&amp;rsquo;&lt;/em&gt; 000 0
II _ I
II I I_:&amp;rsquo;__-
II I Iu_,Y_
_t.u uu &lt;em&gt;&lt;em&gt;uu&lt;/em&gt;
II I Ix.&lt;em&gt;l&lt;/em&gt;
I II I
II I II !
&lt;em&gt;Z&lt;/em&gt; _ _ Z ZZ __ II
Z_Z Z Z _ ___ ZZ&lt;/em&gt;
XX &lt;em&gt;XX X__X __ II
! I
II
00 _ 0 000 000 0 &lt;em&gt;0
00 0 0 000 000t&lt;/em&gt; &lt;em&gt;00 0o
4-)
Â£)..
4.-}
0
I,,..-
0
:g
L5
c&lt;/em&gt;
U U
,n
x x X xC_ne,&lt;/em&gt; eJ â€¢
7.2-195 (6/1/71)&lt;/p&gt;
&lt;p&gt;PnSFILo CG6542 OUTPTC OC0037
RDPRU. 006552 &amp;mdash;NONE&amp;mdash;
OAT, 0C6574 OUTPTC 003042 000061 000075
OPEN, 0C,6133 SYSTEM. 09&#39;2464
OUTPTC 090027
srn. 006274 OUTPTC 003074
CETRA C07025 OUTPTC 00J.010
KOOER GO7046 OUTPTC 050004 000045
SEGMENT
w
w
I ;; SEGMENT
cn - SEGMENT
cn \ &amp;rsquo; SEGMENT 2
V
SEGMENT
SEGMENT
SEGMENT LINK 1 RENAME
INCLUDE
l NCLUDE
INCLUDE
OVERLAY
2 INCLllOE
OVERLAY
3 INCLUDE
INCLIJDE
OVERLAY
4 INCLUDE
INCLUDE
OVERLAY
5 INCLUDE
OVERL AY
6 INCLUDE I NCLtJOE
INCLlJOE
REGION
OVERLAY
7 INSERT
ENTRY END L E V E L 2
e 0 C D C 6 6 0 D L I N K A 6 E E D I T 0 R 2Oe4Ls29c 09/17/69
1
SYSTEM = SYSTEM.
CINKEOTI LKEDCOOe LKEDlOOv CKED150v LKED175r LKED2OO )
LINKEOTI LKED900, LKED995r LKED999r LKE0300~ LKE0320 )
LINKEOT( HASH )
A
LINKEDT( LKEDOlO 1
A
LINKEDTI LKEDOl5
LINKEDT( XRCARD )
A
LINKEDT( LKEDO25 I
LINKEDTf LKED964
4
LINKEnT( LKED059 1
A
LINKEOT( LKEOC75 )
LINKEDTI LKED077r LKED350 1
LINKEDT( RECDIJMP )
R
RLANK,.
LKEDOGO
Figure 43(e). Linkage editor output.&lt;/p&gt;
&lt;p&gt;uJDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z C._
&lt;em&gt;x
Z_Z _
&lt;em&gt;0
I
,&lt;/em&gt; Z
o&lt;/em&gt;
N t&amp;rsquo;-
Z
W
&lt;em&gt;J
&amp;ldquo;=&amp;rdquo; 0
0
Z
.=J &lt;em&gt;.
I
,v-
-,&amp;ldquo;I&amp;ndash;
Z
0 tu
u.
_ Z
&lt;em&gt;JN&lt;/em&gt; N_N
OOO OOO
=&lt;/em&gt;=&lt;/em&gt;=_ &lt;em&gt;=&lt;/em&gt;- &lt;em&gt;==__,,4
0
oN N
0 0
0 u.
cz&amp;gt; r,&amp;rdquo;
0 x
,&amp;rsquo;&lt;/em&gt; &lt;em&gt;s
Z
0 O0 O0 00_00
0 _ _ 0 _
0&lt;/em&gt; OC 0 OC_O
000_00000000 0 O0O0 0 0000
_O00000_OC O00 &lt;em&gt;0 O&lt;/em&gt; O (&lt;em&gt;000
O0 O0O0 O0
ZON
Z
O
L0
W
O
,,1-
O
%.3
r.a
O
O
e-
Â°&lt;/em&gt;
_J
i2
7.2-197 (6/I/71)&lt;/p&gt;
&lt;p&gt;ENTRY-PT
LKF03:?3
LKF0130
PACK
PACKM&amp;rsquo;iK REFERENCES TO EACH ENTRY POINT IN LINK 1 20.41.29. 09/17/69
AOORESS CALL FROM LOCATIPN LOCATION LOCATION LOCATION LOCATION LOCATION LOCATION LnCATION LOCATION LOCATION LOCATION
C15057 LKE0030 061376 001752
LKEDlOO 3C3062 OC0151
LKEO150 03?336 00CQ47 000056 000062 000120
LKE02r9 600076 0CG117 000143
LKEnOlO 003265 020272
LKEnf25 Oi&amp;gt;3712 fin0324 006337 000545 000601 000605 090611 000710 QC0725 001120 001124
f&#39;31165 OU12?O Or1224 031325 031331 OC1511 091536 031hh4 001672 !&amp;lsquo;01677 001703
Figure 43(9). Linkage editor output.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&lt;em&gt;&lt;strong&gt;r&lt;/strong&gt;
&lt;em&gt;,&lt;em&gt;un &lt;em&gt;lr t&amp;rsquo;n ,.4
000 _ ,-I ,.4
C)&lt;/em&gt;..C, 0 0 0
000 0 0 0
t&amp;rsquo;-
g.w
0
C,
0
o
0
00o 000o 0 O0
000 0 O0 0,0
p-
0
0
0
000 0 O0 0
00&lt;/em&gt; 0 O0 0
0_0 0 O0 0,4&amp;quot;
0
0
0
,0
0
0
00
0O0 0 O0 oO 0
&lt;em&gt;00 0&lt;/em&gt; O0 0&lt;/em&gt; 0 _ O&lt;/em&gt; 0
00_ O0 OC&amp;quot; 000 0 0 O0
000 O0 O0 000 0 0 O0 00
0
a_
,i._
&amp;ldquo;0
CL)
CP
e-
-r-
.,..I
e-
G.}
_n
7.2-199(6/I/71)&lt;/p&gt;
&lt;p&gt;PACKXX 015216
IJF+PKCI\I. 015225
PbCKCAL 015240
GFTFXT 015252
S TOF XT 015257
LKF0990 615265
NOW LKEDCOG
TEXTTAB
V &amp;lsquo;, FILLTAR
I N 0 LTNKTRl 0
LINKT92 rn
&amp;lsquo;2r , REPLTAR
2 - llNPK33
IINPKID
PACKDYP 015532
HAFH Of 5540 LKEDOOO
LKEOlCO
LKEn175
LKEDC77
I NPIJTC C15731 LKEDOCC
LKE0315
Figure 43(i ) . Linkage editor output.&lt;/p&gt;
&lt;p&gt;,Â¢
0
o
0
,,0
o
0
0
u&amp;rsquo;_
0
0DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,
,,0
0
0
0 I&amp;ndash;
c)
C&amp;rdquo;
4-
0
o
0
0
r_
0
o 0
&lt;em&gt;0 o orrt 0
_&lt;em&gt;o&lt;/em&gt; ,&lt;/em&gt;Â¢-, r_,..&lt;em&gt;,-= 0
0 _ O0 0
0 0 &amp;ldquo;&lt;em&gt;0 0t&lt;/em&gt;
Z
t,,,=
0
0
.,,0
U
C
U
uJt_u
zz
..J.J
ZZ
0(3
Z _ _
Z
Z &amp;ldquo;r
lg &amp;ldquo;,&lt;/em&gt;
Z Z.d
{:3-
0
I-
0
4-_
&amp;ldquo;0
_J
(1}
&lt;em&gt;r&lt;/em&gt;
.&amp;ndash;J
7.2-201 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Table 4(a). List of Subprograms in &amp;lsquo;LINKLIB.
iiECOHD NO, LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CHEATION DATE
OCTAL DECIMAL OCTAL (8)
1 0 1&#39;178 3362 XUOOT 666 1 UNKNOWN
2 0 283 4X32oADER 571 12/1
3 5/70
0 290 442 XIOwTrJS 5116 05/07/70
4 rl 3 0 -36 XEOF 4tj2n &amp;ndash; ilYKNOWN .-
5 0 75 113 DIIMP 6137 LINKNOIN
0 25&#39;1 401 MAPFNS 36 17 6 7 0 671 1237 SYSTEV. 2533
H 0 b84 1254 - &amp;ndash; &amp;ndash; &amp;ndash; - sTO$ 6554 UNKNOWN- .
9 0 90 132 OUTPTC 2273 UNKNOIN
lo -d 15 17 LOCF 600 UNKMOWN -
11 0 2 7 3 3 GLTBA 2246 UNKI&amp;rsquo;JOWN
0 1% 183 267 I0 6603 UNKNOWN
13 0 182 266 TORANDM 667 1 LJNKNOWN
0 191 14 -_ - - -271_&amp;ndash; CPC 6017 urs -
15 0 42 5 3 Xf)lJMP 346.1 UNKNOWN
&lt;em&gt;i)- _ 143 &amp;mdash;- %&lt;del&gt;&amp;ndash;_CUH[)IJMP-A&lt;/del&gt;-~KU&amp;mdash;
17 0 179 263 LINKERR 5332 UNKNOWN
14 Lm1317KOOEH-.*652_UNWYI?J &amp;ndash; -
19 0 549 1127 KRAKEH 7405 UNKNOWN
2 0 &amp;ndash;O14-26 &amp;mdash; - XRCL&amp;mdash; 2040UNK!!!UW N - &amp;ndash;
2 1 0 2 5 31 nC(jOEH 4374 UNKNOWN
22 0 14 -16 UBLE 13h0-&lt;/em&gt;_ UNKNOWN &amp;ndash; - 23 0 8 6 126 SINCOS 6150 UNKNOWN
n 6 1 24 - - 75 UBAIEX 6445 UNKNOWN
2 5 n 4 0 50 IBAIEX 1210 UNKFJOWN
2 6 0 213 - 325 INPUTB 6664 - UNKNOWN &amp;ndash;
27 0 97 141 INPUTC 3116 IJNKNOWN
28 0 7 3 I 11 OUTPTS ?374 , UNKNOWN- &lt;em&gt;- &amp;mdash;A &amp;mdash; - &amp;ndash; .&amp;mdash; -
2 9 0 35 43 PEMAHK 4750 UNKNOWN
0 33 3&#39;3 &amp;mdash;- SECOND 222 0 IJNKNOWN &amp;ndash;
3 1 0 6 7 103 DSQRT 534 UNKNOWN
32 &amp;ndash; - 11 - __ 26 . - -3 ? -&lt;/em&gt; &amp;ndash; - DABS 4357 !!!!&amp;amp;ow! - -_ 3 3 0 5 2 6 4 SORT 2347 UNKNOWN
3 4 0 pp - - &amp;ndash; - - - - - - &amp;ndash; .- 7 1_ . _ &amp;ndash; - 10&amp;rsquo;I &amp;mdash;- J!PuTS__3664 - - L,NI(No WB 3 5 0 6 6 1 rJ2 EXP 5003 UNKIJOWN
36 &amp;ndash; 0 - -. -..- - 55 67 - [)MOD 4530 UNKNOWN
37 0 14 I6 LEGVAH 7325 UNKNOWN
38 0  EL 2Q!!cd&amp;ndash; 3431 &amp;ndash; UNKNOWN -
39 0 9 4 136 TAN 4044 UNKlJOWN
4 0 0 76 -_&lt;strong&gt;&amp;ndash;&lt;/strong&gt;&amp;ndash;~&amp;mdash;- _611&amp;amp;- ALNl oG 6537 UNKNOWN -
4 1 0 121 171 ASINCOS 1047 UNKNOWN
4 2 0 79 117 &amp;ndash; &amp;ndash; AT AN 5326 UNKNOWN .- 43 0 9 6 140 ATAN2 4315 UNKNOWN
4 4 &amp;ndash; - &amp;ndash; &amp;ndash;2(34 43k&amp;amp;CKSP __&lt;em&gt;&lt;em&gt;A205 UNKNOWN 45 0 97 141 MOFFt&amp;rsquo;X 570 UNKNOWN
4 b 0 - - - 96 140 &amp;ndash; BUFFEP&lt;/em&gt;.&amp;ndash; &lt;em&gt;3750&amp;mdash; UNKNOWN &amp;ndash;&lt;/em&gt;&lt;/em&gt;
4 7 (I 4 5 5 5 CARS 2510 UNKNOWN
4 H &amp;ndash; 0 - - 53 65 - CHAXEX 7066 UNKNOWN
49 n h 0 74 CCOS 4042 lJNKNOWN
5 0 0 4 13 6 0 CEXP - &amp;ndash; &amp;ndash; . &amp;ndash; 576 UNKNOWN
5 1 0 45 5 4 CLOG 6455 UNKNOWN&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Table 4(b). List of Subprograms in LINKLIB.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;KEC?HD NOa LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CREATION DATE
OCTAL UECIMAL OCTAL 1B1 - - - &amp;mdash; &amp;ndash; - - -
4 3 1 48 6 0 CSOYT 2672 UNKNOWN
0 - %&amp;ndash;_ &amp;ndash; - -&lt;em&gt;-261-.&amp;mdash;&lt;/em&gt;- 2XDATAN3135 UNKNOWM . &lt;em&gt;-
55 0 90 132 DBADEX 4624 UNKNOWN &amp;ndash; Ll 50 l%L-3 DEXP 3Ki3 - WNUN &amp;ndash;
5 7 0 200 310 OISPLA 1756 UNKNOWN
157 -24- &amp;ndash;&lt;/em&gt;- - n&amp;ndash; -. 235 DLNLOG _ 2776 UNKNOWN
5 9 0 3 1 37 OS I GN 5611 UNKNOWN
0 60 - &lt;em&gt;- - - - - - - - - 154 - . - - - 231 - - - DbIfJCOS&amp;mdash; - 5 324 UNKNQW - - -
6 1 0 16 2 0 DVCHK 26 UNKrJOWN
h 2 n 7 1 5333 - UNKNOWN&lt;/em&gt;- &amp;ndash; - &amp;ndash; &amp;ndash; &amp;ndash; &amp;ndash; - - - - 1.07 &lt;del&gt;NDFJI
b 3 0 36 44 XDINT 4143 UNKNOWN
b 4 0 75 113 I FENDF 4500 UNKNOWN - &amp;mdash; - 64 0 66 102 I OCHEK 4642 UNKNOWN
UNKNOWN &amp;ndash; - __ _ - r)- _ _ - 11- - - _ &amp;ndash;l% -.!S!!Y.EC&amp;ndash; -155 &amp;mdash; &amp;ndash; -
h &amp;lsquo;I 0 34 42 LENGTH 6.31 1 UNKNOWN
&amp;ndash; -.b? &amp;ndash;_ _ _ _ &amp;quot; - - -. 215 - - &lt;em&gt;- &amp;ndash; 330 OUTPTB &amp;ndash; - UNKNOWN - -&lt;/em&gt;
b 9 0 15 17 OVERFL 3300 IJNKNOWN
7 U 0 3 0 36 - &amp;mdash;- - - - - &amp;mdash; - PALISE_- 1666 &lt;em&gt;-VNK&amp;quot;rlOWN&amp;ndash; _
&amp;lsquo;7 1 D 2 1 25 HkNF 6147 UNKNOWN
7 2 - - (1 . - . _ 5_1&lt;/em&gt; ._ _ 6 1 _ hRAIEX-23A AN KNOWN- - -
73 r) 65 in1 HRAUEX 5424 U!JKNOWr\l
7 u - - - - - - - - - - .-&lt;em&gt;-&lt;/em&gt; 0 - &amp;ndash; 76 _ 114 _-&lt;/del&gt;-E~~IY_II?&amp;mdash; &lt;em&gt;-A563- &amp;ndash;LIN_K_N_O_U - ,
75 n 2 6 32 Sl- X TE 2535 UNKNOWN
76 0 - &amp;ndash; &amp;ndash; - - .- . - - -31 - &lt;em&gt;-31__31 ITET -ZL- IJNKIJOWN&lt;/em&gt;&lt;/em&gt;_ &amp;ndash;
7 7 0 69 1 Q4 TAYH 6543 UNKIJOWN
7 8 &amp;ndash; - - &amp;ndash; - &amp;ndash; - 0 &amp;mdash; &amp;ndash; -72 - 110 - &lt;em&gt;- -.-SINH_14h UN-MOk!N -
7 9 0 72 11 0 COSH 1302 UNKNOWN _ - -&lt;/em&gt; E!O _ - 0 &amp;ndash; 28 - - 3 4 . - .3SwTCH&amp;ndash;4fj7&amp;ndash;..&amp;ndash;4MN4W ?I &amp;ndash; -
8 1 0 17 2 1 START 1111 UNKNOWN
&amp;ndash; - 0 82 - &lt;em&gt;- &lt;em&gt;-&lt;/em&gt;. - - _ 3. - &lt;em&gt;- - &amp;ndash; -~&amp;mdash;~~~-43bfi - UNKN_O_W-N &amp;ndash; k 3 0 45 55 WHETEC 5100 UNKNOWN
&amp;mdash;&amp;ndash; - 84 0 8 7 127 !!!!!f_IhlS &amp;ndash;17_1?- -__&amp;ndash;&lt;/em&gt;&lt;/em&gt;__ UNKNOWN
6 5 n 588 Ill4 TNPIITN 2671 UNKlJOvJN &amp;ndash; - 86 n - 351 - -537 _ 2!JTf!m - &lt;em&gt;- 1k2.2 _ &amp;ndash; UNKNOWN 37 - - 0 74 ll? HEADEC 4432 CINKNOWN
8d &amp;ndash; - - - - n 39 47 FTNHIN 4666 IJNKNO\rJN _ -. &amp;mdash;- - - - - - - &amp;mdash;
8.19 0 96 l4n lNlTMS 6535 UNKNOWN
9 0 0 p- - - - - - - - - - 1L!l &amp;ndash;&lt;/em&gt;- - 1 6 6 &amp;ndash;__ _h$AJ-M&amp;gt; - UNKlJOWN 1 - - _ - - - - - -
9 1 r) 2 5 MOYTt 5571 UNKNOWN
92 n - - &amp;mdash;&amp;ndash; &amp;ndash; I%&amp;ndash; - -16. 31 MXTFT &amp;ndash; &amp;ndash; 2304 UNKNOWN - - - -
93 0 3 2 4 n MXGET 5675 UNKNOWN
-24- - - .- 1 _ __19&amp;ndash;. - _&amp;ndash;a &amp;ndash; !!2_c/\LL-..- -1315 U%KM!WN &amp;ndash;
9 5 (I 3 2 4 0 MBPUT 7236 UNKNOWN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;9b - 0 32 f+ 0 &amp;ndash; M&amp;amp;-tUl. -k517_ &amp;ndash; UNKlJoWN-
3 7 (1 3-47 533 C&amp;rsquo;LOT 673Q UNKNOWN
&amp;ndash; 96 &amp;ndash; - - - - - - - 325 lINKNOWN_. 0 _ - - - 5A5 &amp;ndash; _ SY M HOL&amp;ndash; -&lt;em&gt;&lt;em&gt;36_64 . _ - - . &amp;ndash;
9 9 0 184 270 SCALE 702 UMKIJOWN
loo&lt;/em&gt; - I&amp;mdash;- - - _ 0- &lt;em&gt;P 99 353 AX&lt;/em&gt;&amp;amp;- -&lt;em&gt;-&lt;/em&gt;&amp;mdash; i~35.L llNIc_No41N
101 0 167 247 LINE 4511 UNKNOWN
&amp;ndash; 1-0 2 0 i.&amp;lsquo;3_6 354 _ -N!FH3H 4 1 62&amp;ndash; .&lt;/em&gt;_ &amp;mdash; - __-LJW.!!NO w N
lfr.3 17 0 0 0
&amp;ndash; - - - - -. - - &amp;ndash; LE(_kl- .7(jHULJP !-ENji_T)II IS &lt;em&gt;- 4144 33513&amp;mdash; &amp;ndash; -&lt;/em&gt; - - - &amp;ndash;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.8 Recommended Improvements to the Level 2.0 Version
More and more CDC 6000 series installations are installing &amp;ldquo;private&amp;rdquo; disk packs thus providing
a user mountable/demountable direct access storage device. The increasing use of these packs
suggests two areas of improvement in the Level 2.0 version (the current version) of the linkage
editor.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Provide for the case where the individual links which comprise the executable program
reside in more than one direct access file (presumably on different packs). Large programs
such as NASTRAN will not fit on a single disk pack.&lt;/li&gt;
&lt;li&gt;Provide for object deck libraries in direct access format on the packs. Again, for a
large program such as NASTRAN, considerable elapsed time is spent in initial processing in
creating the single direct access file SYSUT2 from each of the sequential libraries.
The first area could be implemented by modifying XBPIPIT and XLPIADER. Perhaps input could be
supplied to XBBPIT which specifies a destination file &amp;lsquo;for the 1 ink. XB0DT could then modify the
master index in LINKO$ with this information. XLOADER could be modified to accept the new format
i in LINKO$.
The second area could be implemented by changing the format of the LIBRARY control statement
to the following:
LIBRARY namel (a), name2(a) . . .
where
a = T or C as in the LINKEDIT statement. Files which are coded C are assumed to be already
in direct access format (probably with a name index). Files coded T are sequential and are con-
verted to direct access formation on SYSUT2 as now. This would imply changes to LKED015, LKED025
and LKED075.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.9 Linkage Editor Glossary
control section Consists ofallinstructions anddatadefined forasubprogram orcommon
block.
delink todelete from
ENTRTable Object decktable containing alistofallnamed entry points andcommon
blocks. Seesection 7.2.5.2
EPT Entry Point Table. Seesection 7.2.2.1.4
FET FileEnvironment Table. SeeSCOPE reference manual.
FILLTable Object decktable containing information torelocate previously defined
GT
ID
LCT
link
link
LINKTable
LKEDO00
LT
nbr
path
PIDLTableaddress fields.
General Table.
IdentificationSeesection 7.2.5.4
Seesection 7.2.2.1.9
Local Common Table, Seesection 7.2.5.1
when usedasaverb, &amp;ldquo;tolink&amp;rdquo; means &amp;ldquo;toaddto.&amp;rdquo;
Collection ofoneormoresegments which co,rise alogical subdivision
oftheprogram. Link0(consisting ofonesegment only) isinmain storage
atalltimes. Itisthefirst linktoreceive control whenexecution of
theprogram isinitiated. Therootsegment ofanyother linkresides in
main storage atalltimes thatthelink isbeing executed. Anoverlay
program must consist ofatleast onelinkother thanLinkO.
Object deck table specifying external references withthesubprogram.
Seesection 7.2.5.5
Mainprogram. SeeFigure 31.
Library Table. Seesection 7.2.2.1.2
abbreviation for&amp;quot;nu_er&amp;rdquo;
Consists ofasegment, Asay,andallsegments inthesameregion between
Aandtherootsegment (first segment). Therootsegment isapartof
every path inevery region. Whenasegment isinmainstorage, allsegments
initspatharealsoinmainstorage.
Program Identification andLength Table. Object deck table containing
thesubprogram identification andnames ofeachofthecommon blocks
referenced bythesubprogram. Seesection 7.2.5.1.
7.2-205 (6/I/71)&lt;/p&gt;
&lt;p&gt;reg.
region
RDT
REPLTable
RT
SCT
SDT
seg.
segment
SNT
TEXTTable
tree
XREFTableNASTRAN SUPPORT PROGRAMS
abbreviation for&amp;quot;region&amp;rdquo;
Contiguous areaofmainstorage within which segments canbeloaded
independently ofpathsinotherregions. Anoverlay program canbe
designed inasingle ormultiple regions.
Region Definition Table. Seesection 7.2.2.1,5.
Object decktablethatprovides foranefficient meansforrepeating a
blockofdata.
Rename Table. Seesection 7.2.2.1.8.
Segment Chains Table. Seesection 7.2.2.1.6.
Segment Definition Table. Seesection 7.2.2.1.7.
abbreviation for&amp;quot;segment.&amp;rdquo;
Smallest functional unit(oneormerecontrol sections) thatcanbeloaded
asonelogical entity during program execution.
Subprogram NamesTable. Seesection 7.2.2.1.3.
Object decktablecontaining instructions anddata. Seesection 7.2.5.3
Thegraphic representation thatshowshowsegments canusemainstorage at
different times. Itdoesnotimplytheorderofexecution.
Seesection 7.2.2.1.10.
7.2-206 (6/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3THESOURCE CONVERSION PROGRAM (SCP)
7.3.1 Purpose oftheSource Conversion Proqram
TheSource Conversion Program (SCP) translates theNASTRAN FORTRAN codethatcompiles onthe
UNIVAC ll08andIBMS/360 toaformacceptable totheNASALangley Research Center (LRC) CDC6000
series RUNcompiler.
TheSCPisprimarily concerned withtwomajor differences between theFORTRAN acceptable to
theLRCRUNcompiler andtheFORTRAN acceptable tothecompilers ofthethree other computers
initially selected forNASTRAN&amp;rsquo;s execution: IBMSystem/360 (BS); UNIVAC ll08 (EXEC 8);andIBM
7094-7044 Direct Couple System (IBSYS). These twodifferences are: a)nonstandard returns from
called subroutines, andb)subroutines withmultiple entry points.
7.3.2 Conversion Performed
Figure lshows asubroutine containing special cases ofthetypes ofFORTRAN statements on
which theSCPoperates. Thissubroutine wasgenerated merely forillustrative purposes; it
clearly violates manyoftheNASTRAN FORTRAN rules setdowninsection 6.2.
Figures 2,3,4,and5showtheFORTRAN statements generated bytheSCPfromthecodeshown
inFigure I.These statements will compile ontheLRCRUNcompiler andwillproduce object code
equivalent tothat produced bytheother compilers.
7.3.2.1 TheNonstandard Return (NSR)
TheNSRaffects three types ofFORTRAN statements: a)theRETURN statement; b)theCALL
statement; andc)theSUBROUTINE orENTRY statement.
lÂ°TheRETURN statement.
SCPInput (e.g., seelines 0033and0015 inFigure l)
RETURN
or
RETURNi
where iisanalphanumeric constant.
7.3-I (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
S&lt;del&gt;HROLTI &lt;del&gt;IE SUE1 (&lt;em&gt;,A# a)
ca&lt;/em&gt;*** &amp;mdash;
C THrS SAMPLE SUBROUTrNE ILLUSTRATES PARTlCCULAR CASES OF ALL THE
C STATEMENT TYPES CONVERTeG-P . - 8885
0004
C -
C 11 MllLTlPCE EhTPIES, 0006
C 2) MULTIPLE ERTKIES WITH &amp;lsquo;.O&lt;/del&gt;-STANCARD RETURNS, &amp;mdash;Q09!2-
C 3) nUPMY ARGUFENT -A- APPtARI!vG Oh POHE THAN CNE ENTRYI 0008
C 41 DI FEWSION STATEMEQTS AI- TFR_AN ALTERNAJE ENTRY,&amp;ndash; _ 0009
C 5) NOh*STANDARU RETURNS AS IN A CALLING PROGRAtlt 001 0 .
C 6) YOhmSTAYDARD R&lt;/del&gt;TURWS A? IN THE CALLED PROGPAM, &amp;mdash; 001 1
C 7) NOhsSTAVDARD RETUR&lt;del&gt;VS 0, LOGICAL IF STATEMEtvTS, 001 2
c***** &amp;ndash;
C SEsohD E&lt;/del&gt;TRY POINT ___&lt;em&gt;4aUl__l
001 8
C**&amp;rdquo;** p&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;.&amp;mdash;. 411l9&lt;/em&gt;- -
FiTRY SOi32 0020
CALI FUNCl(A,P;100) - T&amp;mdash;&amp;ndash; - - -. &amp;ndash; - .- _ _A&amp;rsquo;L&amp;mdash; 303 CALl FUNC~(PIOOF %20(1, 3 0022
2oR CALL FUhJgR($It?O) &amp;ndash; &amp;ndash; &amp;ndash; 0023-
RFTURA 0024
C&lt;em&gt;c**, - - &amp;mdash; &amp;ndash; &amp;ndash; - ___0025
C THIRC ENTRY POllNT
C&lt;/em&gt;***a 0026&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;mdash;- - - &amp;ndash; - - - - - - &amp;ndash; - - - - - &amp;ndash; - - &amp;ndash; 0027
ELTRY SlJR3(A,f?C,DtFI*) 0028
&amp;ndash; lh7F&lt;del&gt;fH He($) .,&amp;hellip;_ ___l_____i-_Y-d&amp;ndash;
IF( LI rFOc i ) CALL &lt;del&gt;bh&lt;/del&gt;2($108,$300&lt;/del&gt;2&lt;del&gt;0&lt;/del&gt;0~~) 0030 - RFTIIRh 1 -0931- -
303 IF( D cfOc 310 ) RkTURN 1 0032&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash; HFTtJHh- . -na33&amp;mdash;
Eh I) 0034
Figure 1. Subroutine acceptable to the UNIVAC 1108, IBM System/360, and IBM 7094-7044
Direct Couple System FORTRANs, but not to the CDC 6000 series FORTRAN.
Figure 2. Driver deck generated for entry SUB1 of the sample subroutine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THE SOURCE CONVERSION PROGRAM (SCP)
Figure 3. Driver deck generated for entry SUB2 of the sample subroutine.
SL.J&lt;del&gt;T&amp;rsquo;OJTI NE SIJB3 (-1 r %,IItF) 8 GETURNS (KETIJRVI 1 SUQ3 1
COU4&lt;del&gt;Y/3YSTEhl /III!Ill(1) SUR3
COYrlOJ/&lt;/del&gt;%ZS&lt;del&gt;JPl/I II&lt;/del&gt;I~IIIIIIIII&lt;/del&gt; SUQ3 3&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;TII11al=LilcT(~)- :J~&amp;#39;\~JNN sus3 5 
1 I I1 IOZ=L~CF(~C)- Ji&amp;#39;\l&amp;#39;\lJNNI\I SURJ 6 
I I I I I OJ=LOCF(UEF )-I&amp;#39;\I J~v&amp;#39;&amp;#39;JN~&amp;#39; SUR3 7 
CALL ~~JHJZZZ(III~III(~~I~)~IIIII~~~II~IIO~II~~I~S~ 8 
LFT&amp;#39;I?YS(~) SUW3 9 
Figure 4. Driver deck generated for entry SUB3 of the sample subroutine. 

MSTRAN SUPPORT PROGRAMS 
c SUBROUTINE SUBI (&amp;#43;;2(*) SUR~ 3 
C&amp;amp;***&amp;#43; SURl 3 
&amp;#39; - r: THtS SAMRLE SU_BRO_U_TSNE rLLUSTRATES PARTICULAR CASES OF ALL THE 5U~1 4 
r: STATEMENS&amp;#34; TYPES CONVERTED BY THE SOURCE CONVERSION PROGRAM. SUP1 5 
8 c - SUP1 6 1 
C 1) MULTIPLE ENTRIES, SUB1 7 
C 2) M~JLTIPLF ENTRIES 4If~ WCNaSTANDARD RETURNS SUPl 8 
C 3) DUMMY ARBUMENr *A&amp;amp; APPEARING ON MORE THAN ;)ME ENTRY,----- SURl 9 
&amp;#39; C 4) DIMENSIOV S~ATE~ENTS bFTEH AN ALTEFtNATE EVTRY, SWl 10 1 
C 5) NO@-STANDARP nfTURNS AS 1Y A CALLING PROGRAM, SUB1 11 I 
C 6) VON-STANDARD sfETUSNS AS IN THF CALLFD PROGRAM. SUP1 13 
C 7) &amp;#43;JON-STANDARD aESURNS ON LOGICAL 1F STATEMFNTS. SURI 13 
I Ca**&amp;#43;a SURl 14 
C f NTRY SUB3( A~BC~IJEF, *) SURl 15 , 
INTEGER bc(3) sun1 16 
IFC A 385) 40,50,5Q SYRI 17 
40 RETURN RETURN1 5URI 18 -- --- -- 
a 50 RETURN RETURN2 SURl 19 
ct**rr sun1 ao 
C SECOND ENTRY POINT ----- ----- 
SUPl 21 
e***&amp;#43;* -- SUP1 23 
ENTRY SUH2ZZZ sun1 23 7 - 
C EVT9Y SUB2 - SUP 24 
CALL FUNCI(A),RE~JRNS(~O@) SUP: F 
100 CALL F~WC~~I~OIRI~~E~U~NS(~-OO~~~~) - - - - .- SUB1 26 
200 CALL FUNC3,aFTLJR%S(100 SURI 27 
RETURN - SUP1 28 
Cut*&amp;#43;* 51191 29 
c THIRD EVTPY P~~NT - -- qUR1 30 
C&amp;#43;**&amp;#43;* SUB1 31 
ENTRY SUB37ZZ -- JURl 33 If (DoEQrl)CACL F~~NC~~~~QCOID)~RETURNS(~OO~~QO) SUB1 33 
RETURN RkTURN1 SUE1 34 - . 
350 IFC3,EQ,2.O)RfTUQY RFTUR~~ sURl 35 
RETURN -- -- -- SJR1 36 
END 3URI 37 
Figure 5. SCP output of the sample subroutine. 

THESOURCE CONVERSION PROGRAM (SCP)
2,
3.SCPOutput (e.g., seeline SUBI 36andSUBI 18inFigure 5)
Ifiisnotpresent intheinput then noconversion takes place.
RETURN RETURNi
where iisanalphanumeric constant identical totheioftheinput.
TheCALL statement having nonstandard return arguments.
SCPInput (e.g., seeline 0022 inFigure l)
CALL s($nl,$n 2..... $nK,al,a 2..... aj)
where sistheSUBROUTINE orENTRY name, theniareFORTRAN statement numbers
associated with nonstandard returns, andtheaiareordinary arguments.
SCPOutput (e.g., seeline SUBI 26inFigure 5)
CALL s(al,a 2..... aj), RETURNS(nl,n 2..... nK)
where s,theai,andtheniareasdefined above. Note the&amp;#34;$&amp;#39;s&amp;#34; have been removed.
TheSUBROUTINE orENTRY statement.
SCPInput (e.g., seeline O001 inFigure l)
SUBROUTINE S(*l,* 2..... *K,al,a2 ..... aj)
or
ENTRY S(*l,* 2..... *K,al,a2 ..... aj)
where sisthesubroutine orentry name, the*iarearguments representing the
nonstandard returns andtheaiareordinary arguments.
SCPOutput
SUBROUTINE s(al,a 2..... aj), RETURNS (RETURNI, RETURN2 ..... RETURNK)
where sandtheaiareasdefined above.
Note: During theoverall conversion process thenonstandard return s(*&amp;#39;s) in
ENTRY statements areremoved bythemultiple-entry processor (see Figure 7)as
described insection 7.3.2.2. This process isperformed first, andthus the
nonstandard return processor encounters only SUBROUTINE statements having
nonstandard returns.
7.3-5 (311171)


NASTRAN SUPPORT PROGRAMS
7.3.2.2 Subroutines Having Multiple Entries
U_,like nonstandard return processing, which isessentially astatement-for-statement con-
version process, subroutines having multiple entries cannot beconverted inastraightforward
wayforcompilation ontheLRCRUNcompiler.
Theproblem ofmultiple-entry subroutines liesintherequirement thateachargument must
continue torepresent thebeginning ofthesameareaincorethatisassigned uponthefirst
entrywhereitappears asanargument untilitreceives another coreassignment atthesameor
another entryinwhich itappears inthesamesubroutine. ThusinFigure I,ifentryweremade
toSUB3(line0028)thedummyarguments A,BC,andDEFwould receive coreassignments. Ifthe
nextentrytothissubroutine weremadeatSUB1(line0001), theargument Awouldreceive anew
coreassignment; however BCandDEFwouldretain theassignments received attheprevious entry,
SUB3.
TheLRCversion andallversions oftheCDC6000series RUNcompiler accept arguments only
ontheSUBROUTINE statement; ENTRYstatements maynothavearguments (1)
Thelistofarguments onanyCALLstatement, whether toaninitial orsecondary entry point,
should agreewiththeargument listoftheSUBROUTINE statement. InCDC6000series FORTRAN, for
eachargument inaCALLlist,anaddress andnotavariable, entire array, orexternal subroutine
ispassed tothecalled subroutine. Thefollowing paragraphs describe thetechnique usedto
convert subroutines having multiple entries.
I.Ifalltheentries ofasubroutine haveprecisely thesamenumber ofarguments,
andthesearguments havethesamenamesandappear inthesameorder, thentheSCP
doesnothing morethanremove theargument listsfromtheENTRYstatements.
(1)Control Data6400/6600 Computer _ystems FORTRAN Reference Manu_l CCDCpub,NO.60174900)
7.3-6 (3/I/71)&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P106</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_106/</guid>
      <description>
        
        
        &lt;p&gt;C_
I-
.Â¢I
u
C)
.I
O
0__.-
â€¢&amp;hellip;a,.I
zOC
N
4&amp;quot;(5
â€¢N
OI-
N
U
C)
&amp;ndash;I
0
Z
C)
,e[
U
0._ .j
0
I-
.J
Z
t- 0
ZI&amp;ndash;
U
0
0 ..I
a. Z
0
t..
I-
)-,c[
u
I&amp;ndash;
Z
Z 0
U
0
_ Z
O
.J
0
Z
r_DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
NO
0g-400
000-.4
OC*C,
0C&amp;rsquo;O0 OOO OO OO OO
X II III IIIII IIII
O I II &lt;em&gt;&amp;lsquo;0. n, &lt;em&gt;- I II IIIII III
Z&lt;/em&gt; I L&lt;/em&gt;&amp;rsquo;&lt;em&gt;!.) II IXZ&amp;quot; at.&lt;/em&gt;.nuj U I II IIIII III
C:}u__.&lt;em&gt;.-&lt;/em&gt;&amp;rsquo;, _ _ &lt;em&gt;uZ n&amp;quot;euZ&lt;/em&gt;._ I&amp;ndash;r&amp;quot;C:) r_(::9 r-CD F..J F.J r-;.F,_ (DF,.J
._ I&amp;ndash;I &lt;em&gt;rc)&lt;/em&gt; II..&lt;em&gt;..I&lt;/em&gt;.,&lt;em&gt;..&lt;/em&gt;,.&lt;em&gt;&lt;em&gt;E&amp;rsquo;X (D&lt;/em&gt; III IIII IIII
uu&lt;/em&gt; I II II IIIII IIII
I II II IIIII IIII
14.
C_0 0 00 000 Â¢&lt;em&gt;0 0 0&lt;/em&gt;-&amp;rsquo; _ 00 00 0 Â¢D0
0 000 0 00 00 _ 0&amp;quot;_0 0 Â¢D00 _ 00
I&amp;ndash; e _ O. &amp;ndash;I
I ,v. t,u f,,u uJ ,&amp;rsquo;.&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.. r_I&amp;ndash; I&amp;ndash; I.- I&amp;ndash; &lt;em&gt;- I&amp;ndash; C
I&amp;mdash; :a&lt;/em&gt;_ _, )&amp;quot;)&amp;ldquo;Z l&amp;hellip; x ,,n_L I&amp;ndash;I&amp;ndash; _U#&amp;lsquo;I&amp;rdquo;%0
0
c-
..J
5-
&amp;ndash;.s
7.2-193(6/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ti_U__0 OU_,-&lt;em&gt;(&lt;em&gt;WDI&lt;/em&gt; 0 &lt;em&gt;D
&lt;em&gt;I 0i&lt;/em&gt; ,-4r&lt;/em&gt;,-I e%lMr&lt;/em&gt; I&amp;rsquo;- ,-i
0
00 t3 O0 _ O.&lt;em&gt;t &amp;ldquo;&lt;em&gt;C&amp;rdquo; 0
0(D (D O&lt;/em&gt; cJC_c_O 0 0
(D0 0 O0 (&lt;/em&gt; OC_O 0 0
iI IIIi!lI iIIII II
I
Z r-&lt;em&gt;C C&lt;/em&gt; z zZ ZZCb_ (:3B-LIL.&lt;em&gt;r_Z Z Z
II I I!II II I IIl II I
,, &amp;lsquo;, , ,,,, ,, , IIl l, ,
C, o o0 O c,o&lt;/em&gt; o0 0* o0 o 0 oo o o Â¢
0o 0(J 0 0 o 0 _ o 0 _3, oc_00 00 _D o 0 ,-&lt;em&gt;04&lt;/em&gt;
40
0
0
40
qJ
&lt;em&gt;J
v
03
O&lt;/em&gt;
kL
7.2-194 (611171)&lt;/p&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
,4.,,-&lt;em&gt;4.
rn_IC
&lt;em&gt;edl,rjO0
CJC-
CJC&amp;rsquo;C.
O.IQ&lt;/em&gt;
N*,wl(&amp;quot;&lt;/em&gt;
,,-,I(Ml_&amp;rsquo;_
0C&amp;rsquo;C_&amp;rsquo;
0000
IW.
0
0
ooo _
Of_C 0 C
Â¢&amp;rsquo;&lt;em&gt;t&amp;quot;&lt;em&gt;I,.- 4&amp;quot;
tM&lt;/em&gt;-4I&lt;/em&gt; N
,-4tM(M
ooo &lt;em&gt;C&amp;rsquo;C,O C&amp;quot; 0
00C&amp;rsquo; 0 O
,Â£&amp;rsquo;,,,I-l&lt;/em&gt;&amp;rsquo;_ WD ut_ 4.
,,.,i,,-.*(M N
OOC.J 0 0 0
00C. 00 0
O OOCJ oÂ¢)
oOOC) 00
0000 000
N
0
0
0
4&amp;quot;
0
000000 0
00_00 0 O
OOOOO_ O O O
OOOOOO O0 O
O_OOOO OÂ°O O O
000_00 oOO 0 0
NOÂ° {f_(%1 Nh{elN_&amp;lsquo;1 &lt;em&gt;,4 &lt;em&gt;4 N I-I
I_1twT_O.-II&amp;rsquo;llfr_Irjell e-I,,-iOO..4 C_O&lt;/em&gt;.t F.)C.I i-4Â° .e40 C&lt;/em&gt;
OC)OC_O0 0 0Â¢&lt;em&gt;C&lt;/em&gt;Â¢,.,00 000C&amp;rsquo;&lt;em&gt;O Â¢&amp;rsquo;&lt;/em&gt; 000 0
II _ I
II I I_:&amp;rsquo;__-
II I Iu_,Y_
_t.u uu &lt;em&gt;&lt;em&gt;uu&lt;/em&gt;
II I Ix.&lt;em&gt;l&lt;/em&gt;
I II I
II I II !
&lt;em&gt;Z&lt;/em&gt; _ _ Z ZZ __ II
Z_Z Z Z _ ___ ZZ&lt;/em&gt;
XX &lt;em&gt;XX X__X __ II
! I
II
00 _ 0 000 000 0 &lt;em&gt;0
00 0 0 000 000t&lt;/em&gt; &lt;em&gt;00 0o
4-)
Â£)..
4.-}
0
I,,..-
0
:g
L5
c&lt;/em&gt;
U U
,n
x x X xC_ne,&lt;/em&gt; eJ â€¢
7.2-195 (6/1/71)&lt;/p&gt;
&lt;p&gt;PnSFILo CG6542 OUTPTC OC0037
RDPRU. 006552 &amp;mdash;NONE&amp;mdash;
OAT, 0C6574 OUTPTC 003042 000061 000075
OPEN, 0C,6133 SYSTEM. 09&#39;2464
OUTPTC 090027
srn. 006274 OUTPTC 003074
CETRA C07025 OUTPTC 00J.010
KOOER GO7046 OUTPTC 050004 000045
SEGMENT
w
w
I ;; SEGMENT
cn - SEGMENT
cn \ &amp;rsquo; SEGMENT 2
V
SEGMENT
SEGMENT
SEGMENT LINK 1 RENAME
INCLUDE
l NCLUDE
INCLUDE
OVERLAY
2 INCLllOE
OVERLAY
3 INCLUDE
INCLIJDE
OVERLAY
4 INCLUDE
INCLUDE
OVERLAY
5 INCLUDE
OVERL AY
6 INCLUDE I NCLtJOE
INCLlJOE
REGION
OVERLAY
7 INSERT
ENTRY END L E V E L 2
e 0 C D C 6 6 0 D L I N K A 6 E E D I T 0 R 2Oe4Ls29c 09/17/69
1
SYSTEM = SYSTEM.
CINKEOTI LKEDCOOe LKEDlOOv CKED150v LKED175r LKED2OO )
LINKEOTI LKED900, LKED995r LKED999r LKE0300~ LKE0320 )
LINKEOT( HASH )
A
LINKEDT( LKEDOlO 1
A
LINKEDTI LKEDOl5
LINKEDT( XRCARD )
A
LINKEDT( LKEDO25 I
LINKEDTf LKED964
4
LINKEnT( LKED059 1
A
LINKEOT( LKEOC75 )
LINKEDTI LKED077r LKED350 1
LINKEDT( RECDIJMP )
R
RLANK,.
LKEDOGO
Figure 43(e). Linkage editor output.&lt;/p&gt;
&lt;p&gt;uJDESIGN OFTHECDC6400/6600 LINKAGE EDITOR
Z C._
&lt;em&gt;x
Z_Z _
&lt;em&gt;0
I
,&lt;/em&gt; Z
o&lt;/em&gt;
N t&amp;rsquo;-
Z
W
&lt;em&gt;J
&amp;ldquo;=&amp;rdquo; 0
0
Z
.=J &lt;em&gt;.
I
,v-
-,&amp;ldquo;I&amp;ndash;
Z
0 tu
u.
_ Z
&lt;em&gt;JN&lt;/em&gt; N_N
OOO OOO
=&lt;/em&gt;=&lt;/em&gt;=_ &lt;em&gt;=&lt;/em&gt;- &lt;em&gt;==__,,4
0
oN N
0 0
0 u.
cz&amp;gt; r,&amp;rdquo;
0 x
,&amp;rsquo;&lt;/em&gt; &lt;em&gt;s
Z
0 O0 O0 00_00
0 _ _ 0 _
0&lt;/em&gt; OC 0 OC_O
000_00000000 0 O0O0 0 0000
_O00000_OC O00 &lt;em&gt;0 O&lt;/em&gt; O (&lt;em&gt;000
O0 O0O0 O0
ZON
Z
O
L0
W
O
,,1-
O
%.3
r.a
O
O
e-
Â°&lt;/em&gt;
_J
i2
7.2-197 (6/I/71)&lt;/p&gt;
&lt;p&gt;ENTRY-PT
LKF03:?3
LKF0130
PACK
PACKM&amp;rsquo;iK REFERENCES TO EACH ENTRY POINT IN LINK 1 20.41.29. 09/17/69
AOORESS CALL FROM LOCATIPN LOCATION LOCATION LOCATION LOCATION LOCATION LOCATION LnCATION LOCATION LOCATION LOCATION
C15057 LKE0030 061376 001752
LKEDlOO 3C3062 OC0151
LKEO150 03?336 00CQ47 000056 000062 000120
LKE02r9 600076 0CG117 000143
LKEnOlO 003265 020272
LKEnf25 Oi&amp;gt;3712 fin0324 006337 000545 000601 000605 090611 000710 QC0725 001120 001124
f&#39;31165 OU12?O Or1224 031325 031331 OC1511 091536 031hh4 001672 !&amp;lsquo;01677 001703
Figure 43(9). Linkage editor output.&lt;/p&gt;
&lt;p&gt;DESIGNOFTHECDC6400/6600LINKAGEEDITOR
&lt;em&gt;&lt;strong&gt;r&lt;/strong&gt;
&lt;em&gt;,&lt;em&gt;un &lt;em&gt;lr t&amp;rsquo;n ,.4
000 _ ,-I ,.4
C)&lt;/em&gt;..C, 0 0 0
000 0 0 0
t&amp;rsquo;-
g.w
0
C,
0
o
0
00o 000o 0 O0
000 0 O0 0,0
p-
0
0
0
000 0 O0 0
00&lt;/em&gt; 0 O0 0
0_0 0 O0 0,4&amp;quot;
0
0
0
,0
0
0
00
0O0 0 O0 oO 0
&lt;em&gt;00 0&lt;/em&gt; O0 0&lt;/em&gt; 0 _ O&lt;/em&gt; 0
00_ O0 OC&amp;quot; 000 0 0 O0
000 O0 O0 000 0 0 O0 00
0
a_
,i._
&amp;ldquo;0
CL)
CP
e-
-r-
.,..I
e-
G.}
_n
7.2-199(6/I/71)&lt;/p&gt;
&lt;p&gt;PACKXX 015216
IJF+PKCI\I. 015225
PbCKCAL 015240
GFTFXT 015252
S TOF XT 015257
LKF0990 615265
NOW LKEDCOG
TEXTTAB
V &amp;lsquo;, FILLTAR
I N 0 LTNKTRl 0
LINKT92 rn
&amp;lsquo;2r , REPLTAR
2 - llNPK33
IINPKID
PACKDYP 015532
HAFH Of 5540 LKEDOOO
LKEOlCO
LKEn175
LKEDC77
I NPIJTC C15731 LKEDOCC
LKE0315
Figure 43(i ) . Linkage editor output.&lt;/p&gt;
&lt;p&gt;,Â¢
0
o
0
,,0
o
0
0
u&amp;rsquo;_
0
0DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
0,
,,0
0
0
0 I&amp;ndash;
c)
C&amp;rdquo;
4-
0
o
0
0
r_
0
o 0
&lt;em&gt;0 o orrt 0
_&lt;em&gt;o&lt;/em&gt; ,&lt;/em&gt;Â¢-, r_,..&lt;em&gt;,-= 0
0 _ O0 0
0 0 &amp;ldquo;&lt;em&gt;0 0t&lt;/em&gt;
Z
t,,,=
0
0
.,,0
U
C
U
uJt_u
zz
..J.J
ZZ
0(3
Z _ _
Z
Z &amp;ldquo;r
lg &amp;ldquo;,&lt;/em&gt;
Z Z.d
{:3-
0
I-
0
4-_
&amp;ldquo;0
_J
(1}
&lt;em&gt;r&lt;/em&gt;
.&amp;ndash;J
7.2-201 (6/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Table 4(a). List of Subprograms in &amp;lsquo;LINKLIB.
iiECOHD NO, LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CHEATION DATE
OCTAL DECIMAL OCTAL (8)
1 0 1&#39;178 3362 XUOOT 666 1 UNKNOWN
2 0 283 4X32oADER 571 12/1
3 5/70
0 290 442 XIOwTrJS 5116 05/07/70
4 rl 3 0 -36 XEOF 4tj2n &amp;ndash; ilYKNOWN .-
5 0 75 113 DIIMP 6137 LINKNOIN
0 25&#39;1 401 MAPFNS 36 17 6 7 0 671 1237 SYSTEV. 2533
H 0 b84 1254 - &amp;ndash; &amp;ndash; &amp;ndash; - sTO$ 6554 UNKNOWN- .
9 0 90 132 OUTPTC 2273 UNKNOIN
lo -d 15 17 LOCF 600 UNKMOWN -
11 0 2 7 3 3 GLTBA 2246 UNKI&amp;rsquo;JOWN
0 1% 183 267 I0 6603 UNKNOWN
13 0 182 266 TORANDM 667 1 LJNKNOWN
0 191 14 -_ - - -271_&amp;ndash; CPC 6017 urs -
15 0 42 5 3 Xf)lJMP 346.1 UNKNOWN
&lt;em&gt;i)- _ 143 &amp;mdash;- %&lt;del&gt;&amp;ndash;_CUH[)IJMP-A&lt;/del&gt;-~KU&amp;mdash;
17 0 179 263 LINKERR 5332 UNKNOWN
14 Lm1317KOOEH-.*652_UNWYI?J &amp;ndash; -
19 0 549 1127 KRAKEH 7405 UNKNOWN
2 0 &amp;ndash;O14-26 &amp;mdash; - XRCL&amp;mdash; 2040UNK!!!UW N - &amp;ndash;
2 1 0 2 5 31 nC(jOEH 4374 UNKNOWN
22 0 14 -16 UBLE 13h0-&lt;/em&gt;_ UNKNOWN &amp;ndash; - 23 0 8 6 126 SINCOS 6150 UNKNOWN
n 6 1 24 - - 75 UBAIEX 6445 UNKNOWN
2 5 n 4 0 50 IBAIEX 1210 UNKFJOWN
2 6 0 213 - 325 INPUTB 6664 - UNKNOWN &amp;ndash;
27 0 97 141 INPUTC 3116 IJNKNOWN
28 0 7 3 I 11 OUTPTS ?374 , UNKNOWN- &lt;em&gt;- &amp;mdash;A &amp;mdash; - &amp;ndash; .&amp;mdash; -
2 9 0 35 43 PEMAHK 4750 UNKNOWN
0 33 3&#39;3 &amp;mdash;- SECOND 222 0 IJNKNOWN &amp;ndash;
3 1 0 6 7 103 DSQRT 534 UNKNOWN
32 &amp;ndash; - 11 - __ 26 . - -3 ? -&lt;/em&gt; &amp;ndash; - DABS 4357 !!!!&amp;amp;ow! - -_ 3 3 0 5 2 6 4 SORT 2347 UNKNOWN
3 4 0 pp - - &amp;ndash; - - - - - - &amp;ndash; .- 7 1_ . _ &amp;ndash; - 10&amp;rsquo;I &amp;mdash;- J!PuTS__3664 - - L,NI(No WB 3 5 0 6 6 1 rJ2 EXP 5003 UNKIJOWN
36 &amp;ndash; 0 - -. -..- - 55 67 - [)MOD 4530 UNKNOWN
37 0 14 I6 LEGVAH 7325 UNKNOWN
38 0  EL 2Q!!cd&amp;ndash; 3431 &amp;ndash; UNKNOWN -
39 0 9 4 136 TAN 4044 UNKlJOWN
4 0 0 76 -_&lt;strong&gt;&amp;ndash;&lt;/strong&gt;&amp;ndash;~&amp;mdash;- _611&amp;amp;- ALNl oG 6537 UNKNOWN -
4 1 0 121 171 ASINCOS 1047 UNKNOWN
4 2 0 79 117 &amp;ndash; &amp;ndash; AT AN 5326 UNKNOWN .- 43 0 9 6 140 ATAN2 4315 UNKNOWN
4 4 &amp;ndash; - &amp;ndash; &amp;ndash;2(34 43k&amp;amp;CKSP __&lt;em&gt;&lt;em&gt;A205 UNKNOWN 45 0 97 141 MOFFt&amp;rsquo;X 570 UNKNOWN
4 b 0 - - - 96 140 &amp;ndash; BUFFEP&lt;/em&gt;.&amp;ndash; &lt;em&gt;3750&amp;mdash; UNKNOWN &amp;ndash;&lt;/em&gt;&lt;/em&gt;
4 7 (I 4 5 5 5 CARS 2510 UNKNOWN
4 H &amp;ndash; 0 - - 53 65 - CHAXEX 7066 UNKNOWN
49 n h 0 74 CCOS 4042 lJNKNOWN
5 0 0 4 13 6 0 CEXP - &amp;ndash; &amp;ndash; . &amp;ndash; 576 UNKNOWN
5 1 0 45 5 4 CLOG 6455 UNKNOWN&lt;/p&gt;
&lt;p&gt;DESIGN OF THE CDC 6400/6600 LINKAGE EDITOR
Table 4(b). List of Subprograms in LINKLIB.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;KEC?HD NOa LEVEL NO* LENGTH PACKAGE CHKSUM &amp;mdash;&amp;mdash; CREATION DATE
OCTAL UECIMAL OCTAL 1B1 - - - &amp;mdash; &amp;ndash; - - -
4 3 1 48 6 0 CSOYT 2672 UNKNOWN
0 - %&amp;ndash;_ &amp;ndash; - -&lt;em&gt;-261-.&amp;mdash;&lt;/em&gt;- 2XDATAN3135 UNKNOWM . &lt;em&gt;-
55 0 90 132 DBADEX 4624 UNKNOWN &amp;ndash; Ll 50 l%L-3 DEXP 3Ki3 - WNUN &amp;ndash;
5 7 0 200 310 OISPLA 1756 UNKNOWN
157 -24- &amp;ndash;&lt;/em&gt;- - n&amp;ndash; -. 235 DLNLOG _ 2776 UNKNOWN
5 9 0 3 1 37 OS I GN 5611 UNKNOWN
0 60 - &lt;em&gt;- - - - - - - - - 154 - . - - - 231 - - - DbIfJCOS&amp;mdash; - 5 324 UNKNQW - - -
6 1 0 16 2 0 DVCHK 26 UNKrJOWN
h 2 n 7 1 5333 - UNKNOWN&lt;/em&gt;- &amp;ndash; - &amp;ndash; &amp;ndash; &amp;ndash; &amp;ndash; - - - - 1.07 &lt;del&gt;NDFJI
b 3 0 36 44 XDINT 4143 UNKNOWN
b 4 0 75 113 I FENDF 4500 UNKNOWN - &amp;mdash; - 64 0 66 102 I OCHEK 4642 UNKNOWN
UNKNOWN &amp;ndash; - __ _ - r)- _ _ - 11- - - _ &amp;ndash;l% -.!S!!Y.EC&amp;ndash; -155 &amp;mdash; &amp;ndash; -
h &amp;lsquo;I 0 34 42 LENGTH 6.31 1 UNKNOWN
&amp;ndash; -.b? &amp;ndash;_ _ _ _ &amp;quot; - - -. 215 - - &lt;em&gt;- &amp;ndash; 330 OUTPTB &amp;ndash; - UNKNOWN - -&lt;/em&gt;
b 9 0 15 17 OVERFL 3300 IJNKNOWN
7 U 0 3 0 36 - &amp;mdash;- - - - - &amp;mdash; - PALISE_- 1666 &lt;em&gt;-VNK&amp;quot;rlOWN&amp;ndash; _
&amp;lsquo;7 1 D 2 1 25 HkNF 6147 UNKNOWN
7 2 - - (1 . - . _ 5_1&lt;/em&gt; ._ _ 6 1 _ hRAIEX-23A AN KNOWN- - -
73 r) 65 in1 HRAUEX 5424 U!JKNOWr\l
7 u - - - - - - - - - - .-&lt;em&gt;-&lt;/em&gt; 0 - &amp;ndash; 76 _ 114 _-&lt;/del&gt;-E~~IY_II?&amp;mdash; &lt;em&gt;-A563- &amp;ndash;LIN_K_N_O_U - ,
75 n 2 6 32 Sl- X TE 2535 UNKNOWN
76 0 - &amp;ndash; &amp;ndash; - - .- . - - -31 - &lt;em&gt;-31__31 ITET -ZL- IJNKIJOWN&lt;/em&gt;&lt;/em&gt;_ &amp;ndash;
7 7 0 69 1 Q4 TAYH 6543 UNKIJOWN
7 8 &amp;ndash; - - &amp;ndash; - &amp;ndash; - 0 &amp;mdash; &amp;ndash; -72 - 110 - &lt;em&gt;- -.-SINH_14h UN-MOk!N -
7 9 0 72 11 0 COSH 1302 UNKNOWN _ - -&lt;/em&gt; E!O _ - 0 &amp;ndash; 28 - - 3 4 . - .3SwTCH&amp;ndash;4fj7&amp;ndash;..&amp;ndash;4MN4W ?I &amp;ndash; -
8 1 0 17 2 1 START 1111 UNKNOWN
&amp;ndash; - 0 82 - &lt;em&gt;- &lt;em&gt;-&lt;/em&gt;. - - _ 3. - &lt;em&gt;- - &amp;ndash; -~&amp;mdash;~~~-43bfi - UNKN_O_W-N &amp;ndash; k 3 0 45 55 WHETEC 5100 UNKNOWN
&amp;mdash;&amp;ndash; - 84 0 8 7 127 !!!!!f_IhlS &amp;ndash;17_1?- -__&amp;ndash;&lt;/em&gt;&lt;/em&gt;__ UNKNOWN
6 5 n 588 Ill4 TNPIITN 2671 UNKlJOvJN &amp;ndash; - 86 n - 351 - -537 _ 2!JTf!m - &lt;em&gt;- 1k2.2 _ &amp;ndash; UNKNOWN 37 - - 0 74 ll? HEADEC 4432 CINKNOWN
8d &amp;ndash; - - - - n 39 47 FTNHIN 4666 IJNKNO\rJN _ -. &amp;mdash;- - - - - - - &amp;mdash;
8.19 0 96 l4n lNlTMS 6535 UNKNOWN
9 0 0 p- - - - - - - - - - 1L!l &amp;ndash;&lt;/em&gt;- - 1 6 6 &amp;ndash;__ _h$AJ-M&amp;gt; - UNKlJOWN 1 - - _ - - - - - -
9 1 r) 2 5 MOYTt 5571 UNKNOWN
92 n - - &amp;mdash;&amp;ndash; &amp;ndash; I%&amp;ndash; - -16. 31 MXTFT &amp;ndash; &amp;ndash; 2304 UNKNOWN - - - -
93 0 3 2 4 n MXGET 5675 UNKNOWN
-24- - - .- 1 _ __19&amp;ndash;. - _&amp;ndash;a &amp;ndash; !!2_c/\LL-..- -1315 U%KM!WN &amp;ndash;
9 5 (I 3 2 4 0 MBPUT 7236 UNKNOWN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;9b - 0 32 f+ 0 &amp;ndash; M&amp;amp;-tUl. -k517_ &amp;ndash; UNKlJoWN-
3 7 (1 3-47 533 C&amp;rsquo;LOT 673Q UNKNOWN
&amp;ndash; 96 &amp;ndash; - - - - - - - 325 lINKNOWN_. 0 _ - - - 5A5 &amp;ndash; _ SY M HOL&amp;ndash; -&lt;em&gt;&lt;em&gt;36_64 . _ - - . &amp;ndash;
9 9 0 184 270 SCALE 702 UMKIJOWN
loo&lt;/em&gt; - I&amp;mdash;- - - _ 0- &lt;em&gt;P 99 353 AX&lt;/em&gt;&amp;amp;- -&lt;em&gt;-&lt;/em&gt;&amp;mdash; i~35.L llNIc_No41N
101 0 167 247 LINE 4511 UNKNOWN
&amp;ndash; 1-0 2 0 i.&amp;lsquo;3_6 354 _ -N!FH3H 4 1 62&amp;ndash; .&lt;/em&gt;_ &amp;mdash; - __-LJW.!!NO w N
lfr.3 17 0 0 0
&amp;ndash; - - - - -. - - &amp;ndash; LE(_kl- .7(jHULJP !-ENji_T)II IS &lt;em&gt;- 4144 33513&amp;mdash; &amp;ndash; -&lt;/em&gt; - - - &amp;ndash;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.2.8 Recommended Improvements to the Level 2.0 Version
More and more CDC 6000 series installations are installing &amp;ldquo;private&amp;rdquo; disk packs thus providing
a user mountable/demountable direct access storage device. The increasing use of these packs
suggests two areas of improvement in the Level 2.0 version (the current version) of the linkage
editor.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Provide for the case where the individual links which comprise the executable program
reside in more than one direct access file (presumably on different packs). Large programs
such as NASTRAN will not fit on a single disk pack.&lt;/li&gt;
&lt;li&gt;Provide for object deck libraries in direct access format on the packs. Again, for a
large program such as NASTRAN, considerable elapsed time is spent in initial processing in
creating the single direct access file SYSUT2 from each of the sequential libraries.
The first area could be implemented by modifying XBPIPIT and XLPIADER. Perhaps input could be
supplied to XBBPIT which specifies a destination file &amp;lsquo;for the 1 ink. XB0DT could then modify the
master index in LINKO$ with this information. XLOADER could be modified to accept the new format
i in LINKO$.
The second area could be implemented by changing the format of the LIBRARY control statement
to the following:
LIBRARY namel (a), name2(a) . . .
where
a = T or C as in the LINKEDIT statement. Files which are coded C are assumed to be already
in direct access format (probably with a name index). Files coded T are sequential and are con-
verted to direct access formation on SYSUT2 as now. This would imply changes to LKED015, LKED025
and LKED075.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DESIGN OFTHECDC6400/6600 LINKAGE EDITOR
7.2.9 Linkage Editor Glossary
control section Consists ofallinstructions anddatadefined forasubprogram orcommon
block.
delink todelete from
ENTRTable Object decktable containing alistofallnamed entry points andcommon
blocks. Seesection 7.2.5.2
EPT Entry Point Table. Seesection 7.2.2.1.4
FET FileEnvironment Table. SeeSCOPE reference manual.
FILLTable Object decktable containing information torelocate previously defined
GT
ID
LCT
link
link
LINKTable
LKEDO00
LT
nbr
path
PIDLTableaddress fields.
General Table.
IdentificationSeesection 7.2.5.4
Seesection 7.2.2.1.9
Local Common Table, Seesection 7.2.5.1
when usedasaverb, &amp;ldquo;tolink&amp;rdquo; means &amp;ldquo;toaddto.&amp;rdquo;
Collection ofoneormoresegments which co,rise alogical subdivision
oftheprogram. Link0(consisting ofonesegment only) isinmain storage
atalltimes. Itisthefirst linktoreceive control whenexecution of
theprogram isinitiated. Therootsegment ofanyother linkresides in
main storage atalltimes thatthelink isbeing executed. Anoverlay
program must consist ofatleast onelinkother thanLinkO.
Object deck table specifying external references withthesubprogram.
Seesection 7.2.5.5
Mainprogram. SeeFigure 31.
Library Table. Seesection 7.2.2.1.2
abbreviation for&amp;quot;nu_er&amp;rdquo;
Consists ofasegment, Asay,andallsegments inthesameregion between
Aandtherootsegment (first segment). Therootsegment isapartof
every path inevery region. Whenasegment isinmainstorage, allsegments
initspatharealsoinmainstorage.
Program Identification andLength Table. Object deck table containing
thesubprogram identification andnames ofeachofthecommon blocks
referenced bythesubprogram. Seesection 7.2.5.1.
7.2-205 (6/I/71)&lt;/p&gt;
&lt;p&gt;reg.
region
RDT
REPLTable
RT
SCT
SDT
seg.
segment
SNT
TEXTTable
tree
XREFTableNASTRAN SUPPORT PROGRAMS
abbreviation for&amp;quot;region&amp;rdquo;
Contiguous areaofmainstorage within which segments canbeloaded
independently ofpathsinotherregions. Anoverlay program canbe
designed inasingle ormultiple regions.
Region Definition Table. Seesection 7.2.2.1,5.
Object decktablethatprovides foranefficient meansforrepeating a
blockofdata.
Rename Table. Seesection 7.2.2.1.8.
Segment Chains Table. Seesection 7.2.2.1.6.
Segment Definition Table. Seesection 7.2.2.1.7.
abbreviation for&amp;quot;segment.&amp;rdquo;
Smallest functional unit(oneormerecontrol sections) thatcanbeloaded
asonelogical entity during program execution.
Subprogram NamesTable. Seesection 7.2.2.1.3.
Object decktablecontaining instructions anddata. Seesection 7.2.5.3
Thegraphic representation thatshowshowsegments canusemainstorage at
different times. Itdoesnotimplytheorderofexecution.
Seesection 7.2.2.1.10.
7.2-206 (6/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3THESOURCE CONVERSION PROGRAM (SCP)
7.3.1 Purpose oftheSource Conversion Proqram
TheSource Conversion Program (SCP) translates theNASTRAN FORTRAN codethatcompiles onthe
UNIVAC ll08andIBMS/360 toaformacceptable totheNASALangley Research Center (LRC) CDC6000
series RUNcompiler.
TheSCPisprimarily concerned withtwomajor differences between theFORTRAN acceptable to
theLRCRUNcompiler andtheFORTRAN acceptable tothecompilers ofthethree other computers
initially selected forNASTRAN&amp;rsquo;s execution: IBMSystem/360 (BS); UNIVAC ll08 (EXEC 8);andIBM
7094-7044 Direct Couple System (IBSYS). These twodifferences are: a)nonstandard returns from
called subroutines, andb)subroutines withmultiple entry points.
7.3.2 Conversion Performed
Figure lshows asubroutine containing special cases ofthetypes ofFORTRAN statements on
which theSCPoperates. Thissubroutine wasgenerated merely forillustrative purposes; it
clearly violates manyoftheNASTRAN FORTRAN rules setdowninsection 6.2.
Figures 2,3,4,and5showtheFORTRAN statements generated bytheSCPfromthecodeshown
inFigure I.These statements will compile ontheLRCRUNcompiler andwillproduce object code
equivalent tothat produced bytheother compilers.
7.3.2.1 TheNonstandard Return (NSR)
TheNSRaffects three types ofFORTRAN statements: a)theRETURN statement; b)theCALL
statement; andc)theSUBROUTINE orENTRY statement.
lÂ°TheRETURN statement.
SCPInput (e.g., seelines 0033and0015 inFigure l)
RETURN
or
RETURNi
where iisanalphanumeric constant.
7.3-I (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
S&lt;del&gt;HROLTI &lt;del&gt;IE SUE1 (&lt;em&gt;,A# a)
ca&lt;/em&gt;*** &amp;mdash;
C THrS SAMPLE SUBROUTrNE ILLUSTRATES PARTlCCULAR CASES OF ALL THE
C STATEMENT TYPES CONVERTeG-P . - 8885
0004
C -
C 11 MllLTlPCE EhTPIES, 0006
C 2) MULTIPLE ERTKIES WITH &amp;lsquo;.O&lt;/del&gt;-STANCARD RETURNS, &amp;mdash;Q09!2-
C 3) nUPMY ARGUFENT -A- APPtARI!vG Oh POHE THAN CNE ENTRYI 0008
C 41 DI FEWSION STATEMEQTS AI- TFR_AN ALTERNAJE ENTRY,&amp;ndash; _ 0009
C 5) NOh*STANDARU RETURNS AS IN A CALLING PROGRAtlt 001 0 .
C 6) YOhmSTAYDARD R&lt;/del&gt;TURWS A? IN THE CALLED PROGPAM, &amp;mdash; 001 1
C 7) NOhsSTAVDARD RETUR&lt;del&gt;VS 0, LOGICAL IF STATEMEtvTS, 001 2
c***** &amp;ndash;
C SEsohD E&lt;/del&gt;TRY POINT ___&lt;em&gt;4aUl__l
001 8
C**&amp;rdquo;** p&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;.&amp;mdash;. 411l9&lt;/em&gt;- -
FiTRY SOi32 0020
CALI FUNCl(A,P;100) - T&amp;mdash;&amp;ndash; - - -. &amp;ndash; - .- _ _A&amp;rsquo;L&amp;mdash; 303 CALl FUNC~(PIOOF %20(1, 3 0022
2oR CALL FUhJgR($It?O) &amp;ndash; &amp;ndash; &amp;ndash; 0023-
RFTURA 0024
C&lt;em&gt;c**, - - &amp;mdash; &amp;ndash; &amp;ndash; - ___0025
C THIRC ENTRY POllNT
C&lt;/em&gt;***a 0026&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;mdash;- - - &amp;ndash; - - - - - - &amp;ndash; - - - - - &amp;ndash; - - &amp;ndash; 0027
ELTRY SlJR3(A,f?C,DtFI*) 0028
&amp;ndash; lh7F&lt;del&gt;fH He($) .,&amp;hellip;_ ___l_____i-_Y-d&amp;ndash;
IF( LI rFOc i ) CALL &lt;del&gt;bh&lt;/del&gt;2($108,$300&lt;/del&gt;2&lt;del&gt;0&lt;/del&gt;0~~) 0030 - RFTIIRh 1 -0931- -
303 IF( D cfOc 310 ) RkTURN 1 0032&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash; HFTtJHh- . -na33&amp;mdash;
Eh I) 0034
Figure 1. Subroutine acceptable to the UNIVAC 1108, IBM System/360, and IBM 7094-7044
Direct Couple System FORTRANs, but not to the CDC 6000 series FORTRAN.
Figure 2. Driver deck generated for entry SUB1 of the sample subroutine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THE SOURCE CONVERSION PROGRAM (SCP)
Figure 3. Driver deck generated for entry SUB2 of the sample subroutine.
SL.J&lt;del&gt;T&amp;rsquo;OJTI NE SIJB3 (-1 r %,IItF) 8 GETURNS (KETIJRVI 1 SUQ3 1
COU4&lt;del&gt;Y/3YSTEhl /III!Ill(1) SUR3
COYrlOJ/&lt;/del&gt;%ZS&lt;del&gt;JPl/I II&lt;/del&gt;I~IIIIIIIII&lt;/del&gt; SUQ3 3&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;TII11al=LilcT(~)- :J~&amp;#39;\~JNN sus3 5 
1 I I1 IOZ=L~CF(~C)- Ji&amp;#39;\l&amp;#39;\lJNNI\I SURJ 6 
I I I I I OJ=LOCF(UEF )-I&amp;#39;\I J~v&amp;#39;&amp;#39;JN~&amp;#39; SUR3 7 
CALL ~~JHJZZZ(III~III(~~I~)~IIIII~~~II~IIO~II~~I~S~ 8 
LFT&amp;#39;I?YS(~) SUW3 9 
Figure 4. Driver deck generated for entry SUB3 of the sample subroutine. 

MSTRAN SUPPORT PROGRAMS 
c SUBROUTINE SUBI (&amp;#43;;2(*) SUR~ 3 
C&amp;amp;***&amp;#43; SURl 3 
&amp;#39; - r: THtS SAMRLE SU_BRO_U_TSNE rLLUSTRATES PARTICULAR CASES OF ALL THE 5U~1 4 
r: STATEMENS&amp;#34; TYPES CONVERTED BY THE SOURCE CONVERSION PROGRAM. SUP1 5 
8 c - SUP1 6 1 
C 1) MULTIPLE ENTRIES, SUB1 7 
C 2) M~JLTIPLF ENTRIES 4If~ WCNaSTANDARD RETURNS SUPl 8 
C 3) DUMMY ARBUMENr *A&amp;amp; APPEARING ON MORE THAN ;)ME ENTRY,----- SURl 9 
&amp;#39; C 4) DIMENSIOV S~ATE~ENTS bFTEH AN ALTEFtNATE EVTRY, SWl 10 1 
C 5) NO@-STANDARP nfTURNS AS 1Y A CALLING PROGRAM, SUB1 11 I 
C 6) VON-STANDARD sfETUSNS AS IN THF CALLFD PROGRAM. SUP1 13 
C 7) &amp;#43;JON-STANDARD aESURNS ON LOGICAL 1F STATEMFNTS. SURI 13 
I Ca**&amp;#43;a SURl 14 
C f NTRY SUB3( A~BC~IJEF, *) SURl 15 , 
INTEGER bc(3) sun1 16 
IFC A 385) 40,50,5Q SYRI 17 
40 RETURN RETURN1 5URI 18 -- --- -- 
a 50 RETURN RETURN2 SURl 19 
ct**rr sun1 ao 
C SECOND ENTRY POINT ----- ----- 
SUPl 21 
e***&amp;#43;* -- SUP1 23 
ENTRY SUH2ZZZ sun1 23 7 - 
C EVT9Y SUB2 - SUP 24 
CALL FUNCI(A),RE~JRNS(~O@) SUP: F 
100 CALL F~WC~~I~OIRI~~E~U~NS(~-OO~~~~) - - - - .- SUB1 26 
200 CALL FUNC3,aFTLJR%S(100 SURI 27 
RETURN - SUP1 28 
Cut*&amp;#43;* 51191 29 
c THIRD EVTPY P~~NT - -- qUR1 30 
C&amp;#43;**&amp;#43;* SUB1 31 
ENTRY SUB37ZZ -- JURl 33 If (DoEQrl)CACL F~~NC~~~~QCOID)~RETURNS(~OO~~QO) SUB1 33 
RETURN RkTURN1 SUE1 34 - . 
350 IFC3,EQ,2.O)RfTUQY RFTUR~~ sURl 35 
RETURN -- -- -- SJR1 36 
END 3URI 37 
Figure 5. SCP output of the sample subroutine. 

THESOURCE CONVERSION PROGRAM (SCP)
2,
3.SCPOutput (e.g., seeline SUBI 36andSUBI 18inFigure 5)
Ifiisnotpresent intheinput then noconversion takes place.
RETURN RETURNi
where iisanalphanumeric constant identical totheioftheinput.
TheCALL statement having nonstandard return arguments.
SCPInput (e.g., seeline 0022 inFigure l)
CALL s($nl,$n 2..... $nK,al,a 2..... aj)
where sistheSUBROUTINE orENTRY name, theniareFORTRAN statement numbers
associated with nonstandard returns, andtheaiareordinary arguments.
SCPOutput (e.g., seeline SUBI 26inFigure 5)
CALL s(al,a 2..... aj), RETURNS(nl,n 2..... nK)
where s,theai,andtheniareasdefined above. Note the&amp;#34;$&amp;#39;s&amp;#34; have been removed.
TheSUBROUTINE orENTRY statement.
SCPInput (e.g., seeline O001 inFigure l)
SUBROUTINE S(*l,* 2..... *K,al,a2 ..... aj)
or
ENTRY S(*l,* 2..... *K,al,a2 ..... aj)
where sisthesubroutine orentry name, the*iarearguments representing the
nonstandard returns andtheaiareordinary arguments.
SCPOutput
SUBROUTINE s(al,a 2..... aj), RETURNS (RETURNI, RETURN2 ..... RETURNK)
where sandtheaiareasdefined above.
Note: During theoverall conversion process thenonstandard return s(*&amp;#39;s) in
ENTRY statements areremoved bythemultiple-entry processor (see Figure 7)as
described insection 7.3.2.2. This process isperformed first, andthus the
nonstandard return processor encounters only SUBROUTINE statements having
nonstandard returns.
7.3-5 (311171)


NASTRAN SUPPORT PROGRAMS
7.3.2.2 Subroutines Having Multiple Entries
U_,like nonstandard return processing, which isessentially astatement-for-statement con-
version process, subroutines having multiple entries cannot beconverted inastraightforward
wayforcompilation ontheLRCRUNcompiler.
Theproblem ofmultiple-entry subroutines liesintherequirement thateachargument must
continue torepresent thebeginning ofthesameareaincorethatisassigned uponthefirst
entrywhereitappears asanargument untilitreceives another coreassignment atthesameor
another entryinwhich itappears inthesamesubroutine. ThusinFigure I,ifentryweremade
toSUB3(line0028)thedummyarguments A,BC,andDEFwould receive coreassignments. Ifthe
nextentrytothissubroutine weremadeatSUB1(line0001), theargument Awouldreceive anew
coreassignment; however BCandDEFwouldretain theassignments received attheprevious entry,
SUB3.
TheLRCversion andallversions oftheCDC6000series RUNcompiler accept arguments only
ontheSUBROUTINE statement; ENTRYstatements maynothavearguments (1)
Thelistofarguments onanyCALLstatement, whether toaninitial orsecondary entry point,
should agreewiththeargument listoftheSUBROUTINE statement. InCDC6000series FORTRAN, for
eachargument inaCALLlist,anaddress andnotavariable, entire array, orexternal subroutine
ispassed tothecalled subroutine. Thefollowing paragraphs describe thetechnique usedto
convert subroutines having multiple entries.
I.Ifalltheentries ofasubroutine haveprecisely thesamenumber ofarguments,
andthesearguments havethesamenamesandappear inthesameorder, thentheSCP
doesnothing morethanremove theargument listsfromtheENTRYstatements.
(1)Control Data6400/6600 Computer _ystems FORTRAN Reference Manu_l CCDCpub,NO.60174900)
7.3-6 (3/I/71)&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P107</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_107/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
2.Iftheaboveconditionisnotmet,thentheSCPgenerates&amp;quot;drivers&amp;quot;asshownin
Figures2,3,and4.
3.Toinsurethatacoreassignment foranargumentismaintained forfuturecallstoa
subroutine withmultipleentries,allcallstothatsubroutine aretrappedthroughsmall
subroutines called&amp;quot;drivers.&amp;quot; TheSCPgeneratesadriverforeachentrypointina
multiple-entry subroutine. Thedriversubroutine nameisthesameastheentryit
represents. Itsargumentlististhesameastheoriginal,e.g.,seetheentries
inFiguresl,2,3,and4.
4.Thedriver&amp;rsquo;sfunctionistopreservethecoreassignments ofitsargumentsandto
thencalltheentryoriginally intendedwithalistofallpossibleargumentcore
assignments.
5.Theargumentlistoftheconverteddeckiscomprisedoftheset-theoretic union
ofallargumentnamesforallentries(seeFigurel,linesO001and0028,andFigure5,
lineSUBIl).
6.Thedriversdonotpreservetheactualcorelocations, butinsteadpreserve,in
labeledCOMMON,indexesrelativetoafixedlocationincore(/SYSTEM/&amp;ndash;see section
2.4.I.8). SeeforexamplelinesSUB35,SUB36,andSUB37inFigure4.
7.Theentrypointnamesoftheoriginalsubroutine arefilledtosevencharacters
each,using&amp;quot;Z&amp;rsquo;s.&amp;ldquo;Seven-character namesareingeneraluniquesincesixisthe
maximumnumberofcharacters permittedfornamesinNASTRANFORTRAN.TheSCPdoes
notconsiderthepossibility ofamultiple-entry subroutine havingtwoentrynames
(suchasSUBZandSUBZZ)which,whenfilledwithZstosevencharacters, wouldproduce
identicalentrynames.Inthiscase,thecodeproducedbytheSCPwillnotcompile,
anditisuptotheprogrammer usingtheSCPtosolvetheproblem.
8.AtexecutiontimethedriverswillproducecorrectresultsonlywhenCALLsaremade
inasequencethatwouldbevalidusingtheoriginalsubroutine ontheUNIVACll08
andtheIBMS/360.
7.3-7(311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3 Major Divisions intheProgram
Thefollowing discussion isintended fortheusebytheprogramming analyst responsible for
theuseandmaintenance oftheSCP. Refer tothesymbolic FORTRAN code, which isheavily com-
mented, inaddition tothis discussion andtheflowcharts given insection 7.3.5.
7.3.3.1 TheMain Driving Routine CONVSOU
Themain driving routine CONVSOU isasingle subprogram that controls theconversion of
FORTRAN subprograms itfinds ontheinput file.
Itdoes thefollowing:
I.Reads afull subprogram into core.
2.Calls MULTEN, themultiple-entry processor, which will convert thedeck formultiple
entries.
3.Calls REORDR, thedelcarative statement reordering processor, which will rearrange
into correct order anydeclaratives within thesubprogram. REORDR iscalled only if
thesubprogram hasmultiple entries.
4.Calls NSRETN, thenonstandard return processor, which will complete theconversion
bytranslating allnonstandard return statements within thesubprogram.
5.Outputs theconverted deck viaroutine DKOUT.
6.Repeats steps lthrough 5until nomore subprograms remain ontheinput file.
Themain driving routine contains blank COMMON which isloaded below (i.e., atahigher
core location than) allobject code oftheSCP. Itisthus used asopen core. Within themain
driving routine andthethree processors, asubprogram being converted always lies inthis open
core from Z(IDK) toZ(NDK), where
Z=Open core array
IDK=Relative location inZwhere thesubprogram begins.
NDK=Relative location where thesubprogram ends.
7.3-8 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
Eachcardimageofthesubprogram beingconvertedoccupiestwelvewordsofcore,eachword
havingsixleft-adjusted characters. Consequently, theSCPisrecommended foruseonlyona
CDC6000seriescomputeralthoughitistheoretically capableofrunningonanymachinehaving
six-character words(e.g.,UNIVACIf08).Thisisreasonable sincetheSCPisdesignedtooperate
onCDC6000seriesformatfiles.
7.3.3.2TheMultiple-Entry ProcessorMULTEN
Themultiple-entry processorMULTENoperatesontheoriginalcodeonesubprogram atatime.
Itscansthecodeforentrystatements and,iffound,callsutilityroutineNAMARGtoforman
argumentlist.Afterallentrieshavebeenfound,thefollowingtakesplace.
I.Ifonlyaprimaryentrywasfound,noactionistakenandthisprocessorreturns
tothemaindrivingroutine.
2.Theargumentlistsofallentriesarecompared. Iftheyareidentical, thentheonly
actiontakenistoremovetheargumentlistsfromallsecondaryentries.
3.Iftheargumentlistsarenotidentical, utilityroutineDRIVESiscalledtogenerate
andoutputadriverdeckforeachentrypoint.Theentrystatements oftheoriginal
programarethenalteredtoappearascommentstatements, newentriesareinsertedbefore
them,andcontrolisreturnedtothemaindrivingroutine.
MULTENwillinallcasessetaflagifmorethanoneentryisfoundtoindicatethatthe
declarative statementprocessorRE_RDRistobecalled.
7.3.3.3TheDelcarative StatementReordering ProcessorRE_RDR
Thefunctionofthedeclarative statementreordering processorRE_RDRistomoveall
declarative statements tothetopofasubprogram andalsoinsurethattheyareinthefollowing
order(seesection6.2):
I.DBUBLEPRECISION
2.COMPLEX
3.REAL
4.INTEGER
7.3-9 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5.LOGICAL
6.EXTERNAL
7.DIMENSION
8.COMMON
9.EQUIVALENCE
I0.DATA
RE_RDR iscalled forsubprograms withmultiple entries because DIMENSION statements appearing
afterasecondary entrymustbemovedtothetopoftheprogram.
Thisprocessor originally wasastand-alone program, andstillretains DIMENSION statements,
while theothertwoprocessors usetheopencoreconcept.
REORDR usesashuttle-exchange sortconsidering allnondeclarative statements tobestored
last. Comments appearing directly above, orembedded within, adeclarative statement aremoved
alongwiththerespective declarative inthesorting process.
7.3.3.4 TheNonstandard Return Processor NSRETN
Thenonstandard return processor NSRETN analyzes eachstatement ofthesubprogram itreceives
forconversion. Whenitfindsanyofthefollowing statement forms, itwillbranch toasection
ofcodethatwillperform theconversion directly.
I.SUBROUTINE statement having nonstandard returns (*&amp;rsquo;s)initsargument list.
2.RETURNi, whereiisaninteger constant.
3.IF(&amp;hellip;.)RETURNi, asin(2).
4.CALLstatement having nonstandard return FORTRAN statement numbers ($n)inits
argument list.
5.IF(&amp;hellip;.)CALLstatement asin(4).
7.3-I0 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5 Utility Subroutines
Described below are25small utility subroutines usedbytheSCP. Allarewritten in
FORTRAN except WRTEOR, ORF,LSHIFT, RSHIFT, LOCF, andFIELDLN, which arewritten inCOMPASS.
Alloftheexceptions saveWRTEOR arepartoftheMAPFNS routine described insection 5.5.6.1.
7.3.3.5.1 WRTEOR
ACOMPASS assembly language routine tocomplete alogical record ontheconverted deck
output file.
CALLWRTEOR
7.3.3.5.2 CDTYPE
When called byREORDR, this routine will analyze one72-column cardimage andreturn a
value indicating what kindofFORTRAN statement orstatement fragment itis.
CALLCDTYPE(TYPE,BUFF,ADD)
TYPE =Integer returned withoneofthefollowing
-l
-2
0
l
2
3
4
5
6
7
8
9
lO
BUFF =Comment statement
Continuation statement
Undefined statement
DOUBLE PRECISION statement
COMPLEX statement
REALstatement
INTEGER statement
LOGICAL statement
EXTERNAL statement
DIMENSION statement
C0_@4_N statement
EQUIVALENCE statement
DATAstatement
Eleven-word buffer containing cardcolumn characters 7through 72,sixcharacters
toaword
7.3-11 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ADD=BCDwordcontaining columns 1through 6ofthecardimage.
7.3.3.5.3 MOVE
M_VEmovesagroupofcardimages, whencalled byREORDR, toahigher position inthedeck.
Itperforms ashuttle-exchange.
CALLM_VE(POINT,BEGIN,END,CARD,ADD)
PBINT =Integer valuepointing tothelastcardsorted intoplace, afterwhichcards
onthecurrent movewillgo.
BEGIN =Integer cardnumber ofthefirstcardinagroupofcardstobemoved.
END =Integer cardnumber ofthelastcardingrouptobemoved.
CARD =Buffer containing thecardimages forthesubprogram.
ADD =Buffer containing theaddress fieldofeachcardimage.
7.3.3.5.4 TOP
TOP,asmallroutine, determines where thefirstnonentry, noncomment statement ofasub-
program begins.
CALLTOP(POINT,CARD,ADD,TOTAL)
POINT =Integer valueofcardnumber returned.
CARD =Arrayofcardimagestatement fields.
ADD =Arrayofcardimageaddress fields.
TOTAL =Integer valueofthetotalnumber ofcardsinsubprogram.
7.3.3.5.5 MASK2
MASK2unpacks aspecific character fromaspecific wordincore.
CALLMASK2(WORD,CHAR,LETTER)
WORD =Wordofcorewhere thecharacter tobeunpacked resides.
CHAR =Integer countcounting fromleftofcharacter desired.
7.3-12 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
LETTER =Word character isreturned in. Thecharacter isleft-justified andtheword
isfilled with blank characters.
7.3.3.5.6 MASK3
MASK3 unpacks acharacter from aword inastring ofwords andincrements string pointers
appropriately.
CALLMASK3(W_RD,MW_RD,MCHAR,LETTER)
W_RD =Current wordinstring tounpack character from.
MW_RD :Wordcurrently beingoperated on.
MCHAR =Character desired counting fromleftintheword.
LETTER =Wordinwhichcharacter isreturned, left-justified filled withblanks.
MCHAR isincremented byI.Ifitthenexceeds 6,itissetto1andMW_RDisincremented
by1before return ismade.
7.3.3.5.7 MASK7
MASK7 analyzes astatement imagebuffer andreturns then-thnonblank character intheimage;
oriftheimageisexhausted, itreturns ablank.
CALLMASKT(CARD,N,LET,NCARDS)
CARD =Statement imagebuffer
N =Number ofthecharacter desired, N&amp;gt;1
LET =Wordthecharacter isreturned in,left-justified filled withblanks
NCARDS =Number ofcardsinstatement image.
7.3.3.5.8 GETNAME
GETNAME determines thenameappearing ontheentrystatement ofasubprogram.
CALLGETNAME(Z,NAME)
Z=Entrystatement imagebuffer.
NAME:Wordwhere thenameisreturned, left-justified filled withblanks.
7.3-13 (3/I/71)&lt;/p&gt;
&lt;p&gt;ARGBUF(IARG+O)
ARGBUF(IARG+I)
ARGBUF(IARG+2)
ARGBUF(IARG+3)
ARGBUF(IARG+4)NASTRAN SUPPORT PROGRAMS
7.3.3.5.9 NAFtARG
N_ARG operates onanykindofanentry statement (SUBROUTINE orENTRY) andreturns abuffer
ofdata about theentry.
CALLNAMARG(ARGBUF,IARG)
ARGBUF =General buffer where data istobeplaced.
IARG =Nextlocation ofARGBUF which maybefilled.
Onreturn thefollowing values will havebeenplaced inARGBUF.
=Location ofentry
=Entry name
=Number ofnonstandard returns intheentry statement
=Number ofarguments
=BCDnameofthefirst argument
ARGBUF(IARG+3+ARGBUF(IARG+3)) =BCDnameofthelastargument
7.3.3.5.10 PACKCD
PACKCD packs acharacter intotheoutput card image. Itwill generate continuation cards
asneeded.
CALLPACKCD(CHAR,1OPT)
CHAR =Wordwith theleft-justified character tobepacked.
0implies continue thecurrent statement.
1implies startanewstatement.
2implies startthefirststatement atZ(1),theopencorearrayinblankcommon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2implies startanewstatement atZ(IBPT).
7.3-14 (3/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
7.3.3.5.11 INSERT
INSERTinsertsnewentriesintomultiple-entry subroutines ifrequired,andconvertsthe
oldentriesintocommentstatements.
CALLINSERT(IDK,NDK,ARGS,jARGS,ARGBUF,IARG,STARS)
IDK
NDK
ARGS
JARGS
ARGBUF
IARG
STARS=Pointertothefirstwordofthesubprogram inopencore.
=Pointertothelastwordofthesubprogram inopencore.
=Arraycontaining theunionofargumentnames.
=NumberofnamesinARGS.
=Buffer produced byNAMARG containing entry argument data.
=Length ofARGBUF.
=Number ofasterisks tobeplaced onmainentry.
7.3.3.5.12 UNPKZ
UNPKZ unpacks thenextcharacter ofastatement, automatically considering continuation
cards.
CALL UNPKZ
COMM_M/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZW(_RD
ZCHAR
CHAR=Pointer tothefirst word ofastatement.
=Pointer tothetentative lastwordofastatement.
=Pointer totheactual lastwordofastatement.
=Pointer tothecurrent wordofopencorebeing workon.
=Lastcharacter position unpacked, 0&amp;lt;ZCHAR &amp;lt;6.
=Character unpacked.
7.3-15 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.13 PACKZ
PACKZpacksacharacter intoastring.
CALLPACKZ(IBUMP,CH)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZWORD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZWORD
ZCHAR
CHAR
IBUMP
CH
7.3.3.5.14SeeUNPKZ, section 7.3.3.5.12
_0ifpointers arenottobealtered.
0ifautomatic pointers areused.
=Character tobepacked.
PACK1
PACK1packsaspecific character intoaspecific wordofcore.
CALLPACKI(WORD,J,CHAR)
WORD=Wordwherecharacter willbeplaced.
j=Character position, 1to6,counting fromleftwhere thecharacter willbe
placed inW_RD.
CHAR=BCDcharacter left-justified.
7.3.3.5.15 UNPK(function)
UNPKunpacks aspecific character fromaspecific wordofcore.
CHAR=UNPK(W_RD,J)
WORD=Wordofcorewhere character tobeunpacked resides.
J=Character position, 1to6,counting fromleft.
7.3-16 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
CHAR=Characterreturned,left-justified andfilledwithblanks.
7.3.3.5.16 ZW_RD
ZW_RDunpacksthenextonetosixcharacters fromastatement, ignoringblanks,andpacks
themintoasingleword,left-justified andfilledwithblanks.
CALLZW_RD(NAME,JCHARS)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE=
JSTATE=
LASTWD=
SeeUNPKZsection7.3.3.5.12
ZWORD=
ZCHAR=
CHAR=
NAME=Wordwherethecharacters arereturned.
JCHARS=Numberofcharacters desired.
7.3.3.5.17 NAMEZ
NAMEZfillsoutanametosevencharacters with&amp;quot;Z&amp;rsquo;s&amp;quot;ontheright.
CALLNAMEZ(NAME,NEWNAME)
NAME
NEWNAME
7.3.3.5.18=Single word with name init.
=Seven word buffer where theseven characters ofthenewname will be
returned, each left-justified andfilled with blanks.
ZNAME
ZNAME isthesameasNAMEZ (7.3.3.5.17) except thatthenameisfilled with&amp;quot;Z&amp;rsquo;s&amp;rdquo;
left.onthe
7.3-17 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.19 ORF(function)
ORFperforms thelogical sumoftwowords.
RESULT =ORF(W_RDI,WORD2)
7.3.3.5.20 LSHIFT (function)
LSHIFT performs logical shiftofawordn-bits totheleft. High-order bitsshifted out
arelast;vacated low-order bitpositions arezero-filled.
RESULT =LSHIFT(WORD,N)
W(_RD =Wordtobeshifted. (Itsnotaltered)
N =Number ofbitstoshiftleft.
RESULT =Returned valueofshifted word.
7.3.3.5.21 RSHIFT (function)
RSHIFT performs arightshiftwiththedualcharacteristics ofLSHIFT. Seesection
7.3.3.5.20.
7.3.3.5.22 LOCF(function)
LOCFdetermines theabsolute location ofavariable address.
RESULT =LOCF(W_RD)
W@RD =Varaible whose address isdesired.
RESULT =Returned address ofWORD.
7.3.3.5.23 FIELDLN
FIELDLN returns thenumber ofwordsofcoreavailable forcodeanddatastorage.
CALLFIELDLN(L)
L=Number ofwordsofcoreavailable Lmustbesettozerobefore callismadeto
FIELDLN.
7.3-18 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5.24 D_UT
DKOUT outputs theconverted deck.
through 80ofeach card image.
CALL DKOUT(IDK,NDK)
IDK
NDK =Itplaces thename andsequence numbers incolumns 73
=Pointer tothefirst word oftheconverted deck inopen core.
Pointer tothelast word oftheconverted deck inopen core.
7.3.3.5.25 DRIVES
DRIVES generates adriver deck foreach entry point ofthesubprograms that have multiple
entries.
CALL DRIVES(ARGBUF,IARG,ARGS,JARG)
ARGBUF =Buffer ofnames andargument lists foralltheentries asprepared byNAMARG.
Seesection 7.3.3.5.9.
IARG =Length ofARGBUF
ARGS =Buffer where DRIVES will place theunion ofallarguments found inARGBUF.
JARG =Length ofARGS.
7.3.4 UseoftheSCP
TheSCPoperates onaninput file ofsubprograms tobeconverted. This input file need
only consist ofFORTRAN card images inaform capable ofbeing read byCDC6000 series formatted
READ statements. These card images, thus, must beinCDC6000 series display code. Thefile
maybeconstructed such that each deck isalogical record, orthecard images ofalldecks may
becontinuous. TheFORTRAN code oftheroutines tobeconverted areassumed tobe&amp;quot;correct,&amp;quot;
i.e., compilable ontheUNIVAC ll08 ortheIBMS/360.
Toexecute theprogram, compile allroutines oftheSCPplacing theobject decks onsome
file, e.g., SCPR. Then execute theprogram using thecontrol card:
SCPR(OUTFILE,INFILE).
where INFILE isthefile name where thecode tobeconverted istobefound, andOUTFILE iswhere
theoutput code istobeplaced. Theoutput will beoneCDC6000 series logical record peroutput
7.3-19 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
subroutine ordriver deck.
Theprogram should beexecuted withapproximately 130,0008 wordsofcore. Thisamount will
allowthehandling ofthelargest subprogram within NASTRAN. Figure 6showsasample decksetup
foranSCPrun.
7.3.5 SCPFlowcharts
Thissection contains flowcharts fortheroutines comprising theSCP.
andthecorresponding routines are:Thefigure numbers
Figure Number Routine No.ofSheets
7 C_NVS_U 1
8 MULTEN 2
9 NAMARG 1
I0 DRIVES 2
II RE_RDR 3
12 NSRETN 4
7.3-20 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM (SCP)
SUBROUTINE 2(tobeconverted)
&lt;br&gt;
SUBROUTINE 1(tobeconverted_
789
OBJECT DECKS OFSCP
JOB,OI ,I00,I30000.&lt;br&gt;
Figure 6.Sample decksetup foranSCPrun.
7.3-21 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C_NVSOU
_ Enter _
Determine Amount
ofCore Available
IPrint aLinel
Read Card
Images for
OneDeck
From Input File
IMoveDeck IDowntoEnd
ofOpenCore
CalIMULTEN
forMultiple
Entry
Process ing
Call NSRETN
forNonstandard
RETURN ProcessingYes
Yes
CalIDKOUT
toOutput
theConverted
DeckIRewind theConverted
Deck Output
File
fPrint EOFMessage !
ICallREORDRforDeclarative
Statement
Reordering
l
Figure 7.Flowchart forCONVSOU.
7.3-22 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
RemoveENTRYWhich
_isAssumedtobea
&lt;em&gt;.JDummy EntryNeeded
[toCircumvent a
IUNIVAC ll08 Compiler
&lt;em&gt;Bug.MULTEN
Yes
CallNAMARG
toGetthe
NameandList
ofArguments From
theSUBROUTINE
Statement
Search Through
CardImages of
DeckforNext
ENTRYStatement
Yes&lt;/em&gt;
No
&amp;ldquo;SetTypeStatement IReorderin( FlagTrueJ=&lt;/em&gt; Return
w No
(es
i
i
Call NAMARG to 1GetName andList
ofArguments From
theENTRY Statement
I
Figure 8(a). Flowchart forMULTEN.
7.3-23 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Compare theArgument
ListsofAllEntries
intheSubprogram
Ye o
Yes
Add*&amp;lsquo;stothe
SUBROUTINE Statement
Argument Listto
Insure Maximum Count
Remove Argument
ListsFromAllEntries
Except theSUBROUTINE
Statement and
PrintaMessaqe
ToThisEffect
Figure 8(b). Flowchart forMULTEN.
7.3-24 (3/I/71)CallDRIVES
toGenerate Driver
DecksforAllthe
Entries inthe
Subprogram
LCallINSERT to
TurnAllCurrent
Entries IntoComment
Statements and
Insert New
EntryStatements
WithNewNames&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
NAMARG
_ Enter _
Extract Name
FromEntry
Statement and
PutitinBuffer
Extract the
Arguments and
PlaceThemin
theBuffer.
Maintain aCount
ofNonstandard
Returns and
Placeitinthe
Buffer
Figure 9.Flowchart forNAMARG.
7.3-25 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DRIVES
FormaListofthe
(Set-Theoretic) Union
ofArguments FromAll
theArgument Lists
StartDriver Deck
foranEntryby
Forming aSUBROUTINE
Statement Usingthe
Original Nameand
Arguments ofanEntry
I Form C_MM_N/SYSTEM/ i  i ii(1) I
I Form I
_MM_N/ZZ&amp;hellip;namel/IIIIIOI &amp;hellip;..lllllOn
where, n=totalnumber ofarguments I
intheunionlist,andnamel istheI
nameoftheoriginal primary entry I
point
II ormI NNNNNNN=L_CF(IIIIIII(1))-I
lFormastatement foreachargument
ofthefollowing form
IIIIIi-=L_CF(arg)-NNNNNNN
where argistheargument, andi
isitsposition itheunion list
Figure lO(a). Flowchart forDRIVES.
7.3-26 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P107</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_107/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
2.Iftheaboveconditionisnotmet,thentheSCPgenerates&amp;quot;drivers&amp;quot;asshownin
Figures2,3,and4.
3.Toinsurethatacoreassignment foranargumentismaintained forfuturecallstoa
subroutine withmultipleentries,allcallstothatsubroutine aretrappedthroughsmall
subroutines called&amp;quot;drivers.&amp;quot; TheSCPgeneratesadriverforeachentrypointina
multiple-entry subroutine. Thedriversubroutine nameisthesameastheentryit
represents. Itsargumentlististhesameastheoriginal,e.g.,seetheentries
inFiguresl,2,3,and4.
4.Thedriver&amp;rsquo;sfunctionistopreservethecoreassignments ofitsargumentsandto
thencalltheentryoriginally intendedwithalistofallpossibleargumentcore
assignments.
5.Theargumentlistoftheconverteddeckiscomprisedoftheset-theoretic union
ofallargumentnamesforallentries(seeFigurel,linesO001and0028,andFigure5,
lineSUBIl).
6.Thedriversdonotpreservetheactualcorelocations, butinsteadpreserve,in
labeledCOMMON,indexesrelativetoafixedlocationincore(/SYSTEM/&amp;ndash;see section
2.4.I.8). SeeforexamplelinesSUB35,SUB36,andSUB37inFigure4.
7.Theentrypointnamesoftheoriginalsubroutine arefilledtosevencharacters
each,using&amp;quot;Z&amp;rsquo;s.&amp;ldquo;Seven-character namesareingeneraluniquesincesixisthe
maximumnumberofcharacters permittedfornamesinNASTRANFORTRAN.TheSCPdoes
notconsiderthepossibility ofamultiple-entry subroutine havingtwoentrynames
(suchasSUBZandSUBZZ)which,whenfilledwithZstosevencharacters, wouldproduce
identicalentrynames.Inthiscase,thecodeproducedbytheSCPwillnotcompile,
anditisuptotheprogrammer usingtheSCPtosolvetheproblem.
8.AtexecutiontimethedriverswillproducecorrectresultsonlywhenCALLsaremade
inasequencethatwouldbevalidusingtheoriginalsubroutine ontheUNIVACll08
andtheIBMS/360.
7.3-7(311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3 Major Divisions intheProgram
Thefollowing discussion isintended fortheusebytheprogramming analyst responsible for
theuseandmaintenance oftheSCP. Refer tothesymbolic FORTRAN code, which isheavily com-
mented, inaddition tothis discussion andtheflowcharts given insection 7.3.5.
7.3.3.1 TheMain Driving Routine CONVSOU
Themain driving routine CONVSOU isasingle subprogram that controls theconversion of
FORTRAN subprograms itfinds ontheinput file.
Itdoes thefollowing:
I.Reads afull subprogram into core.
2.Calls MULTEN, themultiple-entry processor, which will convert thedeck formultiple
entries.
3.Calls REORDR, thedelcarative statement reordering processor, which will rearrange
into correct order anydeclaratives within thesubprogram. REORDR iscalled only if
thesubprogram hasmultiple entries.
4.Calls NSRETN, thenonstandard return processor, which will complete theconversion
bytranslating allnonstandard return statements within thesubprogram.
5.Outputs theconverted deck viaroutine DKOUT.
6.Repeats steps lthrough 5until nomore subprograms remain ontheinput file.
Themain driving routine contains blank COMMON which isloaded below (i.e., atahigher
core location than) allobject code oftheSCP. Itisthus used asopen core. Within themain
driving routine andthethree processors, asubprogram being converted always lies inthis open
core from Z(IDK) toZ(NDK), where
Z=Open core array
IDK=Relative location inZwhere thesubprogram begins.
NDK=Relative location where thesubprogram ends.
7.3-8 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
Eachcardimageofthesubprogram beingconvertedoccupiestwelvewordsofcore,eachword
havingsixleft-adjusted characters. Consequently, theSCPisrecommended foruseonlyona
CDC6000seriescomputeralthoughitistheoretically capableofrunningonanymachinehaving
six-character words(e.g.,UNIVACIf08).Thisisreasonable sincetheSCPisdesignedtooperate
onCDC6000seriesformatfiles.
7.3.3.2TheMultiple-Entry ProcessorMULTEN
Themultiple-entry processorMULTENoperatesontheoriginalcodeonesubprogram atatime.
Itscansthecodeforentrystatements and,iffound,callsutilityroutineNAMARGtoforman
argumentlist.Afterallentrieshavebeenfound,thefollowingtakesplace.
I.Ifonlyaprimaryentrywasfound,noactionistakenandthisprocessorreturns
tothemaindrivingroutine.
2.Theargumentlistsofallentriesarecompared. Iftheyareidentical, thentheonly
actiontakenistoremovetheargumentlistsfromallsecondaryentries.
3.Iftheargumentlistsarenotidentical, utilityroutineDRIVESiscalledtogenerate
andoutputadriverdeckforeachentrypoint.Theentrystatements oftheoriginal
programarethenalteredtoappearascommentstatements, newentriesareinsertedbefore
them,andcontrolisreturnedtothemaindrivingroutine.
MULTENwillinallcasessetaflagifmorethanoneentryisfoundtoindicatethatthe
declarative statementprocessorRE_RDRistobecalled.
7.3.3.3TheDelcarative StatementReordering ProcessorRE_RDR
Thefunctionofthedeclarative statementreordering processorRE_RDRistomoveall
declarative statements tothetopofasubprogram andalsoinsurethattheyareinthefollowing
order(seesection6.2):
I.DBUBLEPRECISION
2.COMPLEX
3.REAL
4.INTEGER
7.3-9 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
5.LOGICAL
6.EXTERNAL
7.DIMENSION
8.COMMON
9.EQUIVALENCE
I0.DATA
RE_RDR iscalled forsubprograms withmultiple entries because DIMENSION statements appearing
afterasecondary entrymustbemovedtothetopoftheprogram.
Thisprocessor originally wasastand-alone program, andstillretains DIMENSION statements,
while theothertwoprocessors usetheopencoreconcept.
REORDR usesashuttle-exchange sortconsidering allnondeclarative statements tobestored
last. Comments appearing directly above, orembedded within, adeclarative statement aremoved
alongwiththerespective declarative inthesorting process.
7.3.3.4 TheNonstandard Return Processor NSRETN
Thenonstandard return processor NSRETN analyzes eachstatement ofthesubprogram itreceives
forconversion. Whenitfindsanyofthefollowing statement forms, itwillbranch toasection
ofcodethatwillperform theconversion directly.
I.SUBROUTINE statement having nonstandard returns (*&amp;rsquo;s)initsargument list.
2.RETURNi, whereiisaninteger constant.
3.IF(&amp;hellip;.)RETURNi, asin(2).
4.CALLstatement having nonstandard return FORTRAN statement numbers ($n)inits
argument list.
5.IF(&amp;hellip;.)CALLstatement asin(4).
7.3-I0 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5 Utility Subroutines
Described below are25small utility subroutines usedbytheSCP. Allarewritten in
FORTRAN except WRTEOR, ORF,LSHIFT, RSHIFT, LOCF, andFIELDLN, which arewritten inCOMPASS.
Alloftheexceptions saveWRTEOR arepartoftheMAPFNS routine described insection 5.5.6.1.
7.3.3.5.1 WRTEOR
ACOMPASS assembly language routine tocomplete alogical record ontheconverted deck
output file.
CALLWRTEOR
7.3.3.5.2 CDTYPE
When called byREORDR, this routine will analyze one72-column cardimage andreturn a
value indicating what kindofFORTRAN statement orstatement fragment itis.
CALLCDTYPE(TYPE,BUFF,ADD)
TYPE =Integer returned withoneofthefollowing
-l
-2
0
l
2
3
4
5
6
7
8
9
lO
BUFF =Comment statement
Continuation statement
Undefined statement
DOUBLE PRECISION statement
COMPLEX statement
REALstatement
INTEGER statement
LOGICAL statement
EXTERNAL statement
DIMENSION statement
C0_@4_N statement
EQUIVALENCE statement
DATAstatement
Eleven-word buffer containing cardcolumn characters 7through 72,sixcharacters
toaword
7.3-11 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
ADD=BCDwordcontaining columns 1through 6ofthecardimage.
7.3.3.5.3 MOVE
M_VEmovesagroupofcardimages, whencalled byREORDR, toahigher position inthedeck.
Itperforms ashuttle-exchange.
CALLM_VE(POINT,BEGIN,END,CARD,ADD)
PBINT =Integer valuepointing tothelastcardsorted intoplace, afterwhichcards
onthecurrent movewillgo.
BEGIN =Integer cardnumber ofthefirstcardinagroupofcardstobemoved.
END =Integer cardnumber ofthelastcardingrouptobemoved.
CARD =Buffer containing thecardimages forthesubprogram.
ADD =Buffer containing theaddress fieldofeachcardimage.
7.3.3.5.4 TOP
TOP,asmallroutine, determines where thefirstnonentry, noncomment statement ofasub-
program begins.
CALLTOP(POINT,CARD,ADD,TOTAL)
POINT =Integer valueofcardnumber returned.
CARD =Arrayofcardimagestatement fields.
ADD =Arrayofcardimageaddress fields.
TOTAL =Integer valueofthetotalnumber ofcardsinsubprogram.
7.3.3.5.5 MASK2
MASK2unpacks aspecific character fromaspecific wordincore.
CALLMASK2(WORD,CHAR,LETTER)
WORD =Wordofcorewhere thecharacter tobeunpacked resides.
CHAR =Integer countcounting fromleftofcharacter desired.
7.3-12 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
LETTER =Word character isreturned in. Thecharacter isleft-justified andtheword
isfilled with blank characters.
7.3.3.5.6 MASK3
MASK3 unpacks acharacter from aword inastring ofwords andincrements string pointers
appropriately.
CALLMASK3(W_RD,MW_RD,MCHAR,LETTER)
W_RD =Current wordinstring tounpack character from.
MW_RD :Wordcurrently beingoperated on.
MCHAR =Character desired counting fromleftintheword.
LETTER =Wordinwhichcharacter isreturned, left-justified filled withblanks.
MCHAR isincremented byI.Ifitthenexceeds 6,itissetto1andMW_RDisincremented
by1before return ismade.
7.3.3.5.7 MASK7
MASK7 analyzes astatement imagebuffer andreturns then-thnonblank character intheimage;
oriftheimageisexhausted, itreturns ablank.
CALLMASKT(CARD,N,LET,NCARDS)
CARD =Statement imagebuffer
N =Number ofthecharacter desired, N&amp;gt;1
LET =Wordthecharacter isreturned in,left-justified filled withblanks
NCARDS =Number ofcardsinstatement image.
7.3.3.5.8 GETNAME
GETNAME determines thenameappearing ontheentrystatement ofasubprogram.
CALLGETNAME(Z,NAME)
Z=Entrystatement imagebuffer.
NAME:Wordwhere thenameisreturned, left-justified filled withblanks.
7.3-13 (3/I/71)&lt;/p&gt;
&lt;p&gt;ARGBUF(IARG+O)
ARGBUF(IARG+I)
ARGBUF(IARG+2)
ARGBUF(IARG+3)
ARGBUF(IARG+4)NASTRAN SUPPORT PROGRAMS
7.3.3.5.9 NAFtARG
N_ARG operates onanykindofanentry statement (SUBROUTINE orENTRY) andreturns abuffer
ofdata about theentry.
CALLNAMARG(ARGBUF,IARG)
ARGBUF =General buffer where data istobeplaced.
IARG =Nextlocation ofARGBUF which maybefilled.
Onreturn thefollowing values will havebeenplaced inARGBUF.
=Location ofentry
=Entry name
=Number ofnonstandard returns intheentry statement
=Number ofarguments
=BCDnameofthefirst argument
ARGBUF(IARG+3+ARGBUF(IARG+3)) =BCDnameofthelastargument
7.3.3.5.10 PACKCD
PACKCD packs acharacter intotheoutput card image. Itwill generate continuation cards
asneeded.
CALLPACKCD(CHAR,1OPT)
CHAR =Wordwith theleft-justified character tobepacked.
0implies continue thecurrent statement.
1implies startanewstatement.
2implies startthefirststatement atZ(1),theopencorearrayinblankcommon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2implies startanewstatement atZ(IBPT).
7.3-14 (3/I/71)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
7.3.3.5.11 INSERT
INSERTinsertsnewentriesintomultiple-entry subroutines ifrequired,andconvertsthe
oldentriesintocommentstatements.
CALLINSERT(IDK,NDK,ARGS,jARGS,ARGBUF,IARG,STARS)
IDK
NDK
ARGS
JARGS
ARGBUF
IARG
STARS=Pointertothefirstwordofthesubprogram inopencore.
=Pointertothelastwordofthesubprogram inopencore.
=Arraycontaining theunionofargumentnames.
=NumberofnamesinARGS.
=Buffer produced byNAMARG containing entry argument data.
=Length ofARGBUF.
=Number ofasterisks tobeplaced onmainentry.
7.3.3.5.12 UNPKZ
UNPKZ unpacks thenextcharacter ofastatement, automatically considering continuation
cards.
CALL UNPKZ
COMM_M/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZW(_RD
ZCHAR
CHAR=Pointer tothefirst word ofastatement.
=Pointer tothetentative lastwordofastatement.
=Pointer totheactual lastwordofastatement.
=Pointer tothecurrent wordofopencorebeing workon.
=Lastcharacter position unpacked, 0&amp;lt;ZCHAR &amp;lt;6.
=Character unpacked.
7.3-15 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.13 PACKZ
PACKZpacksacharacter intoastring.
CALLPACKZ(IBUMP,CH)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZWORD,ZCHAR,CHAR
ISTATE
JSTATE
LASTWD
ZWORD
ZCHAR
CHAR
IBUMP
CH
7.3.3.5.14SeeUNPKZ, section 7.3.3.5.12
_0ifpointers arenottobealtered.
0ifautomatic pointers areused.
=Character tobepacked.
PACK1
PACK1packsaspecific character intoaspecific wordofcore.
CALLPACKI(WORD,J,CHAR)
WORD=Wordwherecharacter willbeplaced.
j=Character position, 1to6,counting fromleftwhere thecharacter willbe
placed inW_RD.
CHAR=BCDcharacter left-justified.
7.3.3.5.15 UNPK(function)
UNPKunpacks aspecific character fromaspecific wordofcore.
CHAR=UNPK(W_RD,J)
WORD=Wordofcorewhere character tobeunpacked resides.
J=Character position, 1to6,counting fromleft.
7.3-16 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
CHAR=Characterreturned,left-justified andfilledwithblanks.
7.3.3.5.16 ZW_RD
ZW_RDunpacksthenextonetosixcharacters fromastatement, ignoringblanks,andpacks
themintoasingleword,left-justified andfilledwithblanks.
CALLZW_RD(NAME,JCHARS)
C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR
ISTATE=
JSTATE=
LASTWD=
SeeUNPKZsection7.3.3.5.12
ZWORD=
ZCHAR=
CHAR=
NAME=Wordwherethecharacters arereturned.
JCHARS=Numberofcharacters desired.
7.3.3.5.17 NAMEZ
NAMEZfillsoutanametosevencharacters with&amp;quot;Z&amp;rsquo;s&amp;quot;ontheright.
CALLNAMEZ(NAME,NEWNAME)
NAME
NEWNAME
7.3.3.5.18=Single word with name init.
=Seven word buffer where theseven characters ofthenewname will be
returned, each left-justified andfilled with blanks.
ZNAME
ZNAME isthesameasNAMEZ (7.3.3.5.17) except thatthenameisfilled with&amp;quot;Z&amp;rsquo;s&amp;rdquo;
left.onthe
7.3-17 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
7.3.3.5.19 ORF(function)
ORFperforms thelogical sumoftwowords.
RESULT =ORF(W_RDI,WORD2)
7.3.3.5.20 LSHIFT (function)
LSHIFT performs logical shiftofawordn-bits totheleft. High-order bitsshifted out
arelast;vacated low-order bitpositions arezero-filled.
RESULT =LSHIFT(WORD,N)
W(_RD =Wordtobeshifted. (Itsnotaltered)
N =Number ofbitstoshiftleft.
RESULT =Returned valueofshifted word.
7.3.3.5.21 RSHIFT (function)
RSHIFT performs arightshiftwiththedualcharacteristics ofLSHIFT. Seesection
7.3.3.5.20.
7.3.3.5.22 LOCF(function)
LOCFdetermines theabsolute location ofavariable address.
RESULT =LOCF(W_RD)
W@RD =Varaible whose address isdesired.
RESULT =Returned address ofWORD.
7.3.3.5.23 FIELDLN
FIELDLN returns thenumber ofwordsofcoreavailable forcodeanddatastorage.
CALLFIELDLN(L)
L=Number ofwordsofcoreavailable Lmustbesettozerobefore callismadeto
FIELDLN.
7.3-18 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
7.3.3.5.24 D_UT
DKOUT outputs theconverted deck.
through 80ofeach card image.
CALL DKOUT(IDK,NDK)
IDK
NDK =Itplaces thename andsequence numbers incolumns 73
=Pointer tothefirst word oftheconverted deck inopen core.
Pointer tothelast word oftheconverted deck inopen core.
7.3.3.5.25 DRIVES
DRIVES generates adriver deck foreach entry point ofthesubprograms that have multiple
entries.
CALL DRIVES(ARGBUF,IARG,ARGS,JARG)
ARGBUF =Buffer ofnames andargument lists foralltheentries asprepared byNAMARG.
Seesection 7.3.3.5.9.
IARG =Length ofARGBUF
ARGS =Buffer where DRIVES will place theunion ofallarguments found inARGBUF.
JARG =Length ofARGS.
7.3.4 UseoftheSCP
TheSCPoperates onaninput file ofsubprograms tobeconverted. This input file need
only consist ofFORTRAN card images inaform capable ofbeing read byCDC6000 series formatted
READ statements. These card images, thus, must beinCDC6000 series display code. Thefile
maybeconstructed such that each deck isalogical record, orthecard images ofalldecks may
becontinuous. TheFORTRAN code oftheroutines tobeconverted areassumed tobe&amp;quot;correct,&amp;quot;
i.e., compilable ontheUNIVAC ll08 ortheIBMS/360.
Toexecute theprogram, compile allroutines oftheSCPplacing theobject decks onsome
file, e.g., SCPR. Then execute theprogram using thecontrol card:
SCPR(OUTFILE,INFILE).
where INFILE isthefile name where thecode tobeconverted istobefound, andOUTFILE iswhere
theoutput code istobeplaced. Theoutput will beoneCDC6000 series logical record peroutput
7.3-19 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
subroutine ordriver deck.
Theprogram should beexecuted withapproximately 130,0008 wordsofcore. Thisamount will
allowthehandling ofthelargest subprogram within NASTRAN. Figure 6showsasample decksetup
foranSCPrun.
7.3.5 SCPFlowcharts
Thissection contains flowcharts fortheroutines comprising theSCP.
andthecorresponding routines are:Thefigure numbers
Figure Number Routine No.ofSheets
7 C_NVS_U 1
8 MULTEN 2
9 NAMARG 1
I0 DRIVES 2
II RE_RDR 3
12 NSRETN 4
7.3-20 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM (SCP)
SUBROUTINE 2(tobeconverted)
&lt;br&gt;
SUBROUTINE 1(tobeconverted_
789
OBJECT DECKS OFSCP
JOB,OI ,I00,I30000.&lt;br&gt;
Figure 6.Sample decksetup foranSCPrun.
7.3-21 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
C_NVSOU
_ Enter _
Determine Amount
ofCore Available
IPrint aLinel
Read Card
Images for
OneDeck
From Input File
IMoveDeck IDowntoEnd
ofOpenCore
CalIMULTEN
forMultiple
Entry
Process ing
Call NSRETN
forNonstandard
RETURN ProcessingYes
Yes
CalIDKOUT
toOutput
theConverted
DeckIRewind theConverted
Deck Output
File
fPrint EOFMessage !
ICallREORDRforDeclarative
Statement
Reordering
l
Figure 7.Flowchart forCONVSOU.
7.3-22 (311171)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
RemoveENTRYWhich
_isAssumedtobea
&lt;em&gt;.JDummy EntryNeeded
[toCircumvent a
IUNIVAC ll08 Compiler
&lt;em&gt;Bug.MULTEN
Yes
CallNAMARG
toGetthe
NameandList
ofArguments From
theSUBROUTINE
Statement
Search Through
CardImages of
DeckforNext
ENTRYStatement
Yes&lt;/em&gt;
No
&amp;ldquo;SetTypeStatement IReorderin( FlagTrueJ=&lt;/em&gt; Return
w No
(es
i
i
Call NAMARG to 1GetName andList
ofArguments From
theENTRY Statement
I
Figure 8(a). Flowchart forMULTEN.
7.3-23 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
Compare theArgument
ListsofAllEntries
intheSubprogram
Ye o
Yes
Add*&amp;lsquo;stothe
SUBROUTINE Statement
Argument Listto
Insure Maximum Count
Remove Argument
ListsFromAllEntries
Except theSUBROUTINE
Statement and
PrintaMessaqe
ToThisEffect
Figure 8(b). Flowchart forMULTEN.
7.3-24 (3/I/71)CallDRIVES
toGenerate Driver
DecksforAllthe
Entries inthe
Subprogram
LCallINSERT to
TurnAllCurrent
Entries IntoComment
Statements and
Insert New
EntryStatements
WithNewNames&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
NAMARG
_ Enter _
Extract Name
FromEntry
Statement and
PutitinBuffer
Extract the
Arguments and
PlaceThemin
theBuffer.
Maintain aCount
ofNonstandard
Returns and
Placeitinthe
Buffer
Figure 9.Flowchart forNAMARG.
7.3-25 (311171)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
DRIVES
FormaListofthe
(Set-Theoretic) Union
ofArguments FromAll
theArgument Lists
StartDriver Deck
foranEntryby
Forming aSUBROUTINE
Statement Usingthe
Original Nameand
Arguments ofanEntry
I Form C_MM_N/SYSTEM/ i  i ii(1) I
I Form I
_MM_N/ZZ&amp;hellip;namel/IIIIIOI &amp;hellip;..lllllOn
where, n=totalnumber ofarguments I
intheunionlist,andnamel istheI
nameoftheoriginal primary entry I
point
II ormI NNNNNNN=L_CF(IIIIIII(1))-I
lFormastatement foreachargument
ofthefollowing form
IIIIIi-=L_CF(arg)-NNNNNNN
where argistheargument, andi
isitsposition itheunion list
Figure lO(a). Flowchart forDRIVES.
7.3-26 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P108</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_108/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Form
CALLnamei(lllllll(lllllOl),lllllll(lllll02) &amp;hellip;..lllllll(lllllOn))
where, nameiisthenameofentrydriver deckisfor,filled outon
righttosevencharacters withZs,andnisthenumber ofarguments
intheunionlistofallarguments.
Addnonstandard returns toprevious
CALLif*&amp;lsquo;swereinoriginal entry.
Form,
RETURNS(nl,n 2&amp;hellip;..nk)
wheretheniaretheFORTRAN
statement numbers associated
withtheknonstandard returns
Formadditional returns ifnonstandard
returns wereplaced ontheCALLstatement,
RETURN RETURN1
RETURN RETURNk
where, kisnumber ofnonstandard returns
possible.
Call DIq_UTtoOutput the
DriverDeck
YeS&amp;rsquo;No
C Return _
Figure lO(b). Flowchart forDRIVES.
7.3-27 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
REBRDR
(Entry)
PrintMessage [
andDo I
NotOrder I
I (Return
MovetheDeckI
FromOpenCorei
toDimensioned i
Arrays i
I
Initialize TyPEArrayofLength i
TentoZero,Setting TYPE(1)=1200I
I TY
Position Pointers
toLastStatement
ofLastDeclarative
Statement ProcessedYes
Figure ll(a). Flowchart forREORDR.
7.3-28 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
JPosition Pointers toI
Next Card and J
CalICDTYPE I
toDetermine itsTypeI
No
Determine Where
EndofStatement
Lies, That is,How
Many Continuation
Cards andEmbedded
Comments Are
Present
_r
Move This Complete
Statement
Under Last Declarative
Statement Moved
byMoving the
Cards I_anedi ately
Above itDown.
(SHUTTLE-EXCHANGE)
_r
TYPE(This Type): I
TYPE(This Type)-l ]
YesYe:;
r
TYPE(This Type)+l
No
Figure ll(b). Flowchart forRE_RDR.
7.3-29 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
No
IMoveDeckBackIIntoOpenCore
Block
1
Figure ll(c). Flowchart forREORDR.
7.3-30 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Move Card
Intothe
Output Deck
CoreSpace
INo
(Return)NSRETN
,lInitialize Pointers
ForOutput Deck
CoreSpace and
Input DeckCore
Position.
Position to( NextCard
NÂ°_e s
N_Yes
Figure 12(a). Flowchart forNSRETN.
7.3-31 (3/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
es
INÂ°
YPosition to
Statement Contained
ontheLogical
IF
Figure 12(b). Flowchart forNSRETN.
7.3-32 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
No
COUNT theNumber 1 of*&amp;rsquo;s
1Convert SUBROUTINE
Statement While Moving
ittotheOutput
Deck Core Space.
Figure 12(c). Flowchart forNSRETN.
7.3-33 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
it is Moved to the
Output Deck Core
Convert RETURNi
to RETURN RETURNi
as it is Moved to
Output Deck Core Space.
Figure 12(d). Flowchart for NSRETN.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P108</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_108/</guid>
      <description>
        
        
        &lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Form
CALLnamei(lllllll(lllllOl),lllllll(lllll02) &amp;hellip;..lllllll(lllllOn))
where, nameiisthenameofentrydriver deckisfor,filled outon
righttosevencharacters withZs,andnisthenumber ofarguments
intheunionlistofallarguments.
Addnonstandard returns toprevious
CALLif*&amp;lsquo;swereinoriginal entry.
Form,
RETURNS(nl,n 2&amp;hellip;..nk)
wheretheniaretheFORTRAN
statement numbers associated
withtheknonstandard returns
Formadditional returns ifnonstandard
returns wereplaced ontheCALLstatement,
RETURN RETURN1
RETURN RETURNk
where, kisnumber ofnonstandard returns
possible.
Call DIq_UTtoOutput the
DriverDeck
YeS&amp;rsquo;No
C Return _
Figure lO(b). Flowchart forDRIVES.
7.3-27 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
REBRDR
(Entry)
PrintMessage [
andDo I
NotOrder I
I (Return
MovetheDeckI
FromOpenCorei
toDimensioned i
Arrays i
I
Initialize TyPEArrayofLength i
TentoZero,Setting TYPE(1)=1200I
I TY
Position Pointers
toLastStatement
ofLastDeclarative
Statement ProcessedYes
Figure ll(a). Flowchart forREORDR.
7.3-28 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
JPosition Pointers toI
Next Card and J
CalICDTYPE I
toDetermine itsTypeI
No
Determine Where
EndofStatement
Lies, That is,How
Many Continuation
Cards andEmbedded
Comments Are
Present
_r
Move This Complete
Statement
Under Last Declarative
Statement Moved
byMoving the
Cards I_anedi ately
Above itDown.
(SHUTTLE-EXCHANGE)
_r
TYPE(This Type): I
TYPE(This Type)-l ]
YesYe:;
r
TYPE(This Type)+l
No
Figure ll(b). Flowchart forRE_RDR.
7.3-29 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
No
IMoveDeckBackIIntoOpenCore
Block
1
Figure ll(c). Flowchart forREORDR.
7.3-30 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCE CONVERSION PROGRAM (SCP)
Move Card
Intothe
Output Deck
CoreSpace
INo
(Return)NSRETN
,lInitialize Pointers
ForOutput Deck
CoreSpace and
Input DeckCore
Position.
Position to( NextCard
NÂ°_e s
N_Yes
Figure 12(a). Flowchart forNSRETN.
7.3-31 (3/1/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
es
INÂ°
YPosition to
Statement Contained
ontheLogical
IF
Figure 12(b). Flowchart forNSRETN.
7.3-32 (3/I/71)&lt;/p&gt;
&lt;p&gt;THESOURCECONVERSION PROGRAM(SCP)
No
COUNT theNumber 1 of*&amp;rsquo;s
1Convert SUBROUTINE
Statement While Moving
ittotheOutput
Deck Core Space.
Figure 12(c). Flowchart forNSRETN.
7.3-33 (3/I/71)&lt;/p&gt;
&lt;p&gt;NASTRAN SUPPORT PROGRAMS
it is Moved to the
Output Deck Core
Convert RETURNi
to RETURN RETURNi
as it is Moved to
Output Deck Core Space.
Figure 12(d). Flowchart for NSRETN.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P11</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_011/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.7 BPPCl(TABLE).
Description
Output loadvector requests (pset,S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
1002
0
Subcase number
Frequency
0
0
LoadsetID
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _reneat
Pointtype _or
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)(each
I(TI), I(T2), I(T3), I(RI), i(R2), l(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeo_tput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=5=real
=real/imaginary
=magnitude/phase
5.Pointtype
Ii=gridpoint=scalar point
= =extrapoint
=modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-94&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.28.8 CQGI(TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Wor_.__dd T_e Item
0 Header record
l I
2 I
3I
4 I
5 I
6 I
7I
8I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+devicecode )reoeat
Point type _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))noint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!=realFormat code = real/imaginary
magnitude/phase
4.Approach code =I,2,3,7,orlO
5.Point typeli=gridpoint==scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-95&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.28.9 _QBGI (TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code +lO&lt;em&gt;aDDroach code
3
0
Subcase number
Load setID
0
0
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=printandpunch
!=real==real/imaginary
=magnitude/phase
4.Approach code=4
5.Pointtype =
li=gridpointscalar point
extrapoint
modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-96&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.10 _BQGI (TABLE).
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
Modenumber
Eigenvalue
O
0
Format code
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}ooint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
li=real==real/imaginary
=magnitude/phase
4.Approach code =8
5.Point type =
Ii:grid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-97&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.11 _QPI(TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code+lO&lt;em&gt;apDroach code
3
0
Subcase number
Time
0
O
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;foreach
R(TI),R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Formatcodeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6=real
=real/imaginary
:magnitude/phase
5.Point typeIi:gridpoint= =scalar point
=extrapoint
=modalpoint
Table Trailer
Words I-6contain nosignificant values.
2.3-98&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.12 _QPCI (TA3LE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, complex).
Tab]e Format
Record Word Type Item
0 Header record
l I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
I0 I
II-50
51-82 B
83-114 B
IIa&amp;ndash;I_fU BDevice code+lO&lt;em&gt;approach code
I003
0
Subcase number
Frequency ormodenumber
Ooreigenvalue (real oart)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Lauel
l I
2 I
3-8 R
9-14 RlO&lt;/em&gt;point ID+device code }reoeat
Point type (for
R(TI), R(T2), R(T3) R(RI), R(R2), R(R3)&lt;em&gt;each
I(Tl), I(T2), I(T3)&lt;/em&gt; I(RI), I(R2), I(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
lixyoutputonly= =print
=punch
=print andpunch
3.Format codeli=real= =real/imaginary
=magnitude/phase
4.Approach code =5,or9
5.Point type
ligrid point= =scalar point
:extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-99(8/1/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.13 _PHIG(TABLE).
Description
Output eigenvector requests (gset, S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
7
0
Subcase number
Mode number
Eigenvalue
O
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code }repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
&lt;em&gt;iotes
I.Records Iand2arerepeated foreachvector tobeoutput.
2.Device code
3&lt;/em&gt;
4.Format codeli=xyoutput only= =print
=punch
=print andhunch
I!:real==real/imaginary
=magnitude/phase
Approach code=2,or8
5.Pointtype =
li=gridpointscalar point
extrapoint
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-100&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.14 _CPHIP (TABLE).
Description
Output eigenvector requests (pset,S_RTI, complex).
Table Format
Record Word
1 I
2 I
3 I
4 I
5 I
6 R
7 R
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
l I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
I007
0
Subcase number
Mode number
Eigenvalue (real part)
Eigenvalue (imaginary part)
0
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type {for
R(TI), R(T2), R(T3),R(RI) R(R2!, R(R3)&lt;em&gt;each
I(TI),I(T2), I(T3), I(RI)&lt;/em&gt; I(R2},l(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= :print
=punch
:print andpunch
li:real= :real/imaginary
=magnitude/phase
4.Approach code:9
5.Point type =Ii gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-101&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.15 OESl(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 R/I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code +lO&lt;em&gt;approach code
5
Element type
Subcase number
Time, Load setID,ormode number
Eigenvalue or0
0
Load setIDor0
Format code
Number ofwordsperentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
{!=real3.Format code = real/imaginary
magnitude/phase
4.Approach code =l,2,3,6,7,orlO
TableTrailer
WordsI-6contain nosignificant values.
2.3-102&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.16 _ESBI (TABLE).
Description
Output ele(,ent stress requests (S_RTI, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-114 B
II5-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
5
Element type
Subcase nu_er
LoadsetID
0
0
Q
FBrmat code
Number ofwords oerentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;elementID+device code
Element stress data
See2.3.51 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
!=real= =real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-I03&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.17 _BESI(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedDevice code+lO&lt;em&gt;approach code
5
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element stress data IforeachSee2.3.51 fordetails element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Devicecode=
3,Format codeli:xyoutput onlyprint
punch
print andpunch
I!=real= =real/imaginary
=magnitude/phase
4.Approach code =8
Table Trailer
Words I-6contain nosignificant values.
2.3-104&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.18 _ESCI(TABLE).
Descri ption
Output element stress requests (SBRTI, complex).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 RII
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
!!5-146 BDevice code+lO&lt;em&gt;approach code
I005
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (real part)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =NV_S
Notdefined
Title
Subtitle
Label
2 l I
2-NWDS MixedlO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
li:realFormat code = real/imaginary
magnitude/phase
4.Approach code =5,or9
Table Trailer
Words I-6contain nosignificant values.
2.3-I05&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.19 _EFI(TABLE).
Description
Output element force requests (SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 :/R
7 I
8 I
9 I
IO I
ll-5O
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase number
Time, loadsetID,ormodenumber
0oreigenvalue
0
LoadsetIDor0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only: =print
=punch
=print andpunch
li=real= =real/imaginary
=magnitude/phase
4.Approach code =l,2,3,6,7,orlO
Table Trailer
Words I-6contain nosignificant values.
2.3-I06&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.20 _EFBI(TA3LE).
Description
Output element force requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Headerrecord
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase nu_er
Load setID
0
0
0
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsreneat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-107&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.21 OBEFI(TABLE).
Description
Output element forcerequests (SORT1, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;annroach code
4
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwordsperentryinnextrecord =N!_DS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element forcedata Iforeach See2.3.52 fordetails element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
{!=real3.Format code= =real/imaginary
=magnitude/phase
4.Approach code=8
TableTrailer
WordsI-6contain nosignificant values.
2.3-108&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOHS
2.3.28.22 BEFCI(TABLE).
Description
Output element forcerequests (S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
1004
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (realDart)
0oreigenvalue (imaginary part)
LoadsetIDor0
Format code
Number ofwords oerentryinnextrecord :N_,tDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsIreoeat
foreach
element
i&amp;rsquo;_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
!:real3.Format code =real/imaginary
magnitude/phase
4.Approach code=5,or9
TableTrailer
Words I-6contain nosignificant values.
2.3-109&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.28.23
Description
NotePUGVl (matrix -seenotebelow)
PUGVl contains thetranslation components ofUGVIrotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words mustbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUGVlexcept word l=O,andword6=0(seesection 2.3.36.1).
2.3-II0&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.24
Description
NotePUBGVI (matrix -seenotebelow)
PUBGVI contains thetranslation components ofUBGV rotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words n_stbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUBGVwithword1=O,andword 6=O.
2.3-III&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.25 PPHIG (matrix -seenote below)
Description
PPHIG contains thetranslation components ofPHIG rotated tothebasic coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=2
Word 3=mode number
Word 4=eigenvalue (X)
Matrix Trailer
Trailer issame asthat forPHIG with word l=O,andword 6=O,(see section 2.3.27.4).
2.3-112&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOiIS
2.3.28.26 PUGV(matrix-seenotebelow)
Description
PUGV contains thetranslation components ofUPV(excluding extra points) rotated tothebasic
coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=3
Word3=0
Word4=time
Matrix Trailer
Trailer issameasthatforUGVwithword1=O,andword6=O,(seesection 2.3.27.1).
2.3-113&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P11</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_011/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.7 BPPCl(TABLE).
Description
Output loadvector requests (pset,S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
1002
0
Subcase number
Frequency
0
0
LoadsetID
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _reneat
Pointtype _or
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)(each
I(TI), I(T2), I(T3), I(RI), i(R2), l(R3))point
Notes
I.Records 1and2arerepeated foreachvector tobeo_tput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
printandpunch
4.Approach code=5=real
=real/imaginary
=magnitude/phase
5.Pointtype
Ii=gridpoint=scalar point
= =extrapoint
=modalpoint
TableTrailer
Words I-6contain nosignificant values.
2.3-94&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.28.8 CQGI(TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Wor_.__dd T_e Item
0 Header record
l I
2 I
3I
4 I
5 I
6 I
7I
8I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 RDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
LoadsetID
0
0
0
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+devicecode )reoeat
Point type _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))noint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!=realFormat code = real/imaginary
magnitude/phase
4.Approach code =I,2,3,7,orlO
5.Point typeli=gridpoint==scalar point
=extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-95&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.28.9 _QBGI (TABLE)
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code +lO&lt;em&gt;aDDroach code
3
0
Subcase number
Load setID
0
0
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=printandpunch
!=real==real/imaginary
=magnitude/phase
4.Approach code=4
5.Pointtype =
li=gridpointscalar point
extrapoint
modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-96&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.10 _BQGI (TABLE).
Description
Output forces ofsingle-point constraint requests (gset,S_RTI, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
3
0
Subcase number
Modenumber
Eigenvalue
O
0
Format code
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 I
2 I
3-8 RlO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}ooint
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
li=real==real/imaginary
=magnitude/phase
4.Approach code =8
5.Point type =
Ii:grid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-97&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.11 _QPI(TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, real).
Table Format
Record Word Type Item
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RHeader record
Device code+lO&lt;em&gt;apDroach code
3
0
Subcase number
Time
0
O
LoadsetID
Format code
Number ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type &amp;gt;foreach
R(TI),R(T2), R(T3), R(RI), R(R2), R(R3)_point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Formatcodeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6=real
=real/imaginary
:magnitude/phase
5.Point typeIi:gridpoint= =scalar point
=extrapoint
=modalpoint
Table Trailer
Words I-6contain nosignificant values.
2.3-98&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.12 _QPCI (TA3LE).
Description
Output forces ofsingle-point constraint requests (pset,S_RTI, complex).
Tab]e Format
Record Word Type Item
0 Header record
l I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
I0 I
II-50
51-82 B
83-114 B
IIa&amp;ndash;I_fU BDevice code+lO&lt;em&gt;approach code
I003
0
Subcase number
Frequency ormodenumber
Ooreigenvalue (real oart)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Lauel
l I
2 I
3-8 R
9-14 RlO&lt;/em&gt;point ID+device code }reoeat
Point type (for
R(TI), R(T2), R(T3) R(RI), R(R2), R(R3)&lt;em&gt;each
I(Tl), I(T2), I(T3)&lt;/em&gt; I(RI), I(R2), I(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
lixyoutputonly= =print
=punch
=print andpunch
3.Format codeli=real= =real/imaginary
=magnitude/phase
4.Approach code =5,or9
5.Point type
ligrid point= =scalar point
:extra point
=modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-99(8/1/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.13 _PHIG(TABLE).
Description
Output eigenvector requests (gset, S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
7
0
Subcase number
Mode number
Eigenvalue
O
0
Format code
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code }repeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point
&lt;em&gt;iotes
I.Records Iand2arerepeated foreachvector tobeoutput.
2.Device code
3&lt;/em&gt;
4.Format codeli=xyoutput only= =print
=punch
=print andhunch
I!:real==real/imaginary
=magnitude/phase
Approach code=2,or8
5.Pointtype =
li=gridpointscalar point
extrapoint
modal point
TableTrailer
Words I-6contain nosignificant values.
2.3-100&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.14 _CPHIP (TABLE).
Description
Output eigenvector requests (pset,S_RTI, complex).
Table Format
Record Word
1 I
2 I
3 I
4 I
5 I
6 R
7 R
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
l I
2 I
3-8 R
9-14 RItem
Header record
Device code+lO&lt;em&gt;approach code
I007
0
Subcase number
Mode number
Eigenvalue (real part)
Eigenvalue (imaginary part)
0
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code )repeat
Point type {for
R(TI), R(T2), R(T3),R(RI) R(R2!, R(R3)&lt;em&gt;each
I(TI),I(T2), I(T3), I(RI)&lt;/em&gt; I(R2},l(R3)}point
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only= :print
=punch
:print andpunch
li:real= :real/imaginary
=magnitude/phase
4.Approach code:9
5.Point type =Ii gridpointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-101&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.15 OESl(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 R/I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code +lO&lt;em&gt;approach code
5
Element type
Subcase number
Time, Load setID,ormode number
Eigenvalue or0
0
Load setIDor0
Format code
Number ofwordsperentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
{!=real3.Format code = real/imaginary
magnitude/phase
4.Approach code =l,2,3,6,7,orlO
TableTrailer
WordsI-6contain nosignificant values.
2.3-102&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.28.16 _ESBI (TABLE).
Description
Output ele(,ent stress requests (S_RTI, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-114 B
II5-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
5
Element type
Subcase nu_er
LoadsetID
0
0
Q
FBrmat code
Number ofwords oerentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;elementID+device code
Element stress data
See2.3.51 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codeli=xyoutput only= =print
=punch
=print andpunch
!=real= =real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-I03&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.17 _BESI(TABLE).
Description
Output element stress requests (S_RTI, real).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedDevice code+lO&lt;em&gt;approach code
5
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element stress data IforeachSee2.3.51 fordetails element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Devicecode=
3,Format codeli:xyoutput onlyprint
punch
print andpunch
I!=real= =real/imaginary
=magnitude/phase
4.Approach code =8
Table Trailer
Words I-6contain nosignificant values.
2.3-104&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.18 _ESCI(TABLE).
Descri ption
Output element stress requests (SBRTI, complex).
Table Format
Record Word Type
Header recordItem
l I
2 I
3 I
4 I
5 RII
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
!!5-146 BDevice code+lO&lt;em&gt;approach code
I005
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (real part)
0oreigenvalue (imaginary part)
LoadsetID
Format code
Number ofwords perentry innextrecord =NV_S
Notdefined
Title
Subtitle
Label
2 l I
2-NWDS MixedlO&lt;/em&gt;element ID+device code
Element stress data
See2.3.51 fordetailsreoeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
li:realFormat code = real/imaginary
magnitude/phase
4.Approach code =5,or9
Table Trailer
Words I-6contain nosignificant values.
2.3-I05&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.19 _EFI(TABLE).
Description
Output element force requests (SBRTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I/R
6 :/R
7 I
8 I
9 I
IO I
ll-5O
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase number
Time, loadsetID,ormodenumber
0oreigenvalue
0
LoadsetIDor0
Format code
Number ofwords perentry innext record =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsrepeat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code
3.Format codelixyoutput only: =print
=punch
=print andpunch
li=real= =real/imaginary
=magnitude/phase
4.Approach code =l,2,3,6,7,orlO
Table Trailer
Words I-6contain nosignificant values.
2.3-I06&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.20 _EFBI(TA3LE).
Description
Output element force requests (S_RTI, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l I
2-NWDS MixedItem
Headerrecord
Device code+lO&lt;em&gt;approach code
4
Element type
Subcase nu_er
Load setID
0
0
0
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsreneat
foreach
element
Notes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
I!=real==real/imaginary
=magnitude/phase
4.Approach code =4
Table Trailer
Words I-6contain nosignificant values.
2.3-107&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.28.21 OBEFI(TABLE).
Description
Output element forcerequests (SORT1, real).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 R
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;annroach code
4
Element type
Subcase number
Modenumber
Eigenvalue
0
0
Format code
Number ofwordsperentryinnextrecord =N!_DS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code }repeat
Element forcedata Iforeach See2.3.52 fordetails element
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
{!=real3.Format code= =real/imaginary
=magnitude/phase
4.Approach code=8
TableTrailer
WordsI-6contain nosignificant values.
2.3-108&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOHS
2.3.28.22 BEFCI(TABLE).
Description
Output element forcerequests (S_RTI, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 R/I
6 I/R
7 I/R
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
2 1 I
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
1004
Element type
Subcase number
Frequency ormodenu_er
0oreigenvalue (realDart)
0oreigenvalue (imaginary part)
LoadsetIDor0
Format code
Number ofwords oerentryinnextrecord :N_,tDS
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;element ID+device code
Element force data
See2.3.52 fordetailsIreoeat
foreach
element
i&amp;rsquo;_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code= punch
printandpunch
!:real3.Format code =real/imaginary
magnitude/phase
4.Approach code=5,or9
TableTrailer
Words I-6contain nosignificant values.
2.3-109&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.28.23
Description
NotePUGVl (matrix -seenotebelow)
PUGVl contains thetranslation components ofUGVIrotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words mustbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUGVlexcept word l=O,andword6=0(seesection 2.3.36.1).
2.3-II0&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.28.24
Description
NotePUBGVI (matrix -seenotebelow)
PUBGVI contains thetranslation components ofUBGV rotated tothebasic coordinate system.
Thefirst fourwords ofeachlogical record (column) contain identification dataforthe
column. These words n_stbereadprior tocalling theappropriate unpacking routine.
Wordl=subcase number
Word2=l
Word3=static loadsetID
Word4=0
Matrix Trailer
Trailer issameasthatforUBGVwithword1=O,andword 6=O.
2.3-III&lt;/p&gt;
&lt;p&gt;DATA BLOCK ANDTABLE DESCRIPTIONS
2.3.28.25 PPHIG (matrix -seenote below)
Description
PPHIG contains thetranslation components ofPHIG rotated tothebasic coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=2
Word 3=mode number
Word 4=eigenvalue (X)
Matrix Trailer
Trailer issame asthat forPHIG with word l=O,andword 6=O,(see section 2.3.27.4).
2.3-112&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIOiIS
2.3.28.26 PUGV(matrix-seenotebelow)
Description
PUGV contains thetranslation components ofUPV(excluding extra points) rotated tothebasic
coordinate system.
Note
Thefirst four words ofeach logical record (column) contain identification data forthe
column. These words must beread prior tocalling theappropriate unpacking routine.
Word l=subcase number
Word 2=3
Word3=0
Word4=time
Matrix Trailer
Trailer issameasthatforUGVwithword1=O,andword6=O,(seesection 2.3.27.1).
2.3-113&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P12</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_012/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29 DataBlocks Output FromModule DPD
2.3.29.1 GPLD(TABLE)
Description
GridPointListDynamics.
Onelogical record whichcontains alistofallgridpoints, scalar points andextrapoints
inthemodelininternal sort.
Table Format
Record Word Type
0
1 1 I
n I
2
TableTrailer
Word1
Word2-6Item
Header record
IDforfirst point
IDfornthpoint
End-of-file
=number ofgridpoints +number ofscalar points +number ofextrapoints.
=zero.
2.3.29.2 SILD (TABLE)
Description
Scalar Index List Dynamics.
Twological records. First logical record contains scalar index values inthep-displace-
ment setforeach point inthedynamics model (internal order). These values aredefined
asfollows:
SILDl =l
(SILD. +6ificorresponds toagrid point
SILDi+ l_SILD I+lificorresponds toascalar oranextra point
Thesecond logical record contains anequivalence between scalar index values inthe
g-displacement setandscalar index values inthep-displacement set.
2.3-114&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
TableFormat
Record
0
l
2
3
Table TrailerWord Type Item
Header record
1 I Scalar indexforfirstpoint
â€¢ _ &amp;quot;
n I Scalar indexfornthpoint
I,2 I SILvalue, SILDvalue
2m-l,2m I SlLvalue, SlLDvalue
End-of-file
Word1=degrees offreedom inthep-displacement set(LUSETD).
Word2=number ofextrapoints.
Word3-6=zero.
2.3.29.3 USETD (TABLE)
Description
Displacement setdefinitions table dynamics.
USETD contains onelogical record. Each word corresponds toeach degree offreedom inthe
p-displacement set(ininternal order) andcontains ones inspecified bitpositions indicat-
ingthedisplacementsets towhich thepoint belongs.
Table Format
RecordWord Type Item
Header record
1 L Mask forfirst degree offreedom
n L Mask fornthdegree offreedom
End-of-file
Notes
Bitpositions forthevarious displacement sets aredefined asfollows:
LdIfelnelPlelsb]Sgl _IaIf]nJgIrlÂ°ls]mI
17181920212223242526272829303132
2.3-115&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Table Trailer
Word1=
Word2=
Word3=
Word4=
Word5:
Word6=degrees offreedom inthep-displacement set(LUSETD).
number ofextrapoints.
zero.
logical &amp;ldquo;or&amp;quot;ofallUSETDmasks.
zero.
zero.
2.3.29.4 EED(TABLE)
Description
Eigenvalue Extraction Data.
TheEEDcontains onelogical
EIGP, EIGR).
Table Format
Record Word
0
1
2
3
4
5
Detailed format forEIGBdata:
Word Type
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21record foreacheigenvalue extraction cardtype(EIGB, EIGC,
Eachlogical record contains datafromallcardsofagiventype.
Item
Header record
EIGBdata(ifEIGBcards inbulkdata)
EIGCdata(ifEIGCcards inbulkdata)
EIGPdata(ifEIGPcards inbulkdata)
EIGRdata(ifEIGRcards inbulkdata)
End-of-file
Itern
107,I,0
SetID
Method
F,F1 2
Ne,Nd,Nz
E
Norm
Ifnorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue in
a-set ofnormalization point
Notdefinedrepeated
foreach
EIGBcard
inbulkdata
2.3-I16 (711170)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Detailed format forEIGCcard:
Word Type
I-3 I
4 I
5-6 B
7-8 B
9 I
I0
II R
12-13
14-15 R
16-17 R
18 R
19-20 I
21
14+8k-21 +8k IItem
207,2,0
SetID
Method
Norm
IfNorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue inanalysis
setofnormalization point
Notdefined
E
Notdefined
_a&amp;rsquo;_a }repeated
_b&amp;rsquo;_b Iforeach region
Ne,Nd definition
Notdefined
-l(k=number ofregions)
Detailed format forEIGPcard:
Word Type
1-3 I
5 I
6-7 R
8 IItem
257,4,0
SetID_repeated for
_,m&amp;gt;each EIGPcard
M _inbulkdata
Detailed format forEIGRcard:
Word Type Item
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21307,3,0
SetID
Method
F,FI 2
Ne,Nd,Nz
E
Norm
Ifnom=&amp;ldquo;P_INT&amp;rdquo;, SIkvaluein
a-setofnormalization point
Notdefinedrepeated
foreach
EIGRcard
inbulkdata
Table Trailer
Word l=
bit17=IifEIGBrecord exists
18=lifEIGCrecord exists
19=lifEIGPrecord exists
20=lifEIGRrecord exists
other bits=0
Word 2-6=zero.repeated
foreach
EIGCcard
inbulkdata
2.3-117 (7/1/70)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29.5 EQDYN(TABLE)
Description
Equivalence between external points andscalar indexvalues -dynamicsâ€¢
EQDYNcontains twological records. Thefirst record contains pairsofexternal point
numbers andscalar indexvalues inthep-displacement setforthepoints inexternal order.
Thesecond record isessentially thesameasthefirstexcept thatthetypeofp_(grid,
scalar, extra) iscoded inthesecond wordofthepair.
TableFormat
Record Word Type
1,2 I
2n-l,2n IItem
Header record
IDforfirstpoint, scalar indexforfirstpoint
IDfornthpoint, scalar indexfornthpoint
3
Note
Type=
TableTrailer
Word1
Word2
Word3-61,2 I
2n-I,2n IIDforfirst point, lO&lt;em&gt;scalar index +type
IDfornthpoint, lO&lt;/em&gt;scalar index +type
End-of-file
I!forgridpointforscalar point
forextrapoint
=number ofgridpoints +number ofscalar points +number ofextrapoints
indynamics modelâ€¢
=number ofextrapointsâ€¢
=zero.
2.3-118&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.29.6 TFP_OL (TABLE).
Descri ption
Transfer Function Pool.
TheTFP_L datablock containsonelogical record foreach transfer function setdefined in
thebulkdataonaTFbulkdata card. Point andcomponent values areconverted torowand
column numbers inthep-displacement set.
Table Format
Record Word T_pe Item
O Header record
l I
2 I
3-5RSetID
65536*column n_er +rownun_er
Coefficientsrepeated foreE;chsetof
non-zero terms
Same format asfirst record
n+l End-of-file
Table Trailer
Word l
Word 2-6=nu_U_er oftransfer function sets.
=zero.
2.3.29.7 DLT(TABLE).
Description
Dynamic LoadsTable.
Theheaderrecord oftheDLTcontains asummary ofalldynamicloadsetsdefined inthe
problem. Thefirst record oftheDLTcontains allDLgAD cards (ifDLCAD cards havebeen input).
Each succeeding record contains alldataforonedynamic loadset.
TableFormat
Record Word Type Item
I-2 B
3 I
4-3+m I
4+m-3+m+n IDatablock name
m=number ofDL_AD setID&amp;rsquo;s
SetID&amp;rsquo;sonDL_AD cards
SetID&amp;rsquo;sonRL_ADI, 2andTL_ADI, 2cards
l
2
3-4I
R
R,ISetID
Scale factor
Scale factor, setID
-!,-lrepeated
foreach
DL_AD
card
2.3-I19 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKA;_DTABLEDESCRIPTIONS
Record Word Type Item
n+2l I
2 I
3-8
9 I
10-12 RDynamic loadcardtype
&lt;em&gt;=0notimedelays
Ip0timedelays
SeeNotes
SILnumber Irepeated foreach
A,&lt;/em&gt;,e_dynamic loadset
End-of-file
Notes
lÂ°IfnoDL_ADcardshavebeeninput, thethirdwordoftheheader record iszeroandthe
DL@ADrecord doesnotexist. Therefore, record 1oftheDLTcorresponds totheload
setdefined inword4oftheheader record.
2.DL_AD-set ID&amp;rsquo;sareinsortbysetID.Inrecord I,setID&amp;rsquo;swithin aDL_ADcardare
insort.
3.Within otherrecords, dataisinsortbySILnumber.
4.Formats bydynamic loadcardtypeareasfollows:
1=RL@ADI
Word _ Item
3 I Table IDforC(f)
4 I Table IDforD(f)
5-8 Notdefined
2=RL@AD2
Word Type Item
3 I Table IDforB(f)
4 I Table IDfor@(f)
5-8 Notdefined
3:TL_ADI
Word Type Item
3 I Table IDforF(t)
4-8 Notdefined
4=TL_AD2
Word Type Item
3-4 R TKI,TK2
5-6 R IVK&amp;rsquo;_K
7-8 R nK&amp;rsquo;_K
TableTrailer
WordI:GIN_filenameofDLT.
Word2-6=undefined.
2.3-120&lt;/p&gt;
&lt;p&gt;DATABLOC/,DESCRIPTIOHS
2.3.29.8 PSDL(TABLE)
Description
PowerSpectral Density List.
Thefirstlogical record ofthePSDLcontains RANDPS data. Subsequent logical records
contain RANDTdata,onesetperlogical record. EachPJ_NDTlogical record contains a
sorted listofunique timelagsdefined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I RANDTsetID
I
2+n I RANDTsetIDn
1 I RANDPS setID
2 I LoadsetID
3 I LoadsetID
4,5 R Complex number
6 I Table ID
i-m R Timelagsrepeated
foreach
RANDPS
cardin
bulkdata
n+l
n+2Sameformat asrecord 2
Databelongs toRANDTsetIDn
End-of-file
Notes
I.
2,RANDPS cardsmustbepresent fordatablocktoexist. Therefore, record onealways
contains RANDPS data.
IfnoRANDTI orRANDT2 cardsarepresent inthebulkdata,theheader record will
contain exactly twowords andrecord twowillbeanend-of-file,
TableTrailer
_number ofRANDTsets,orWord1
65535 ifnoPJ_NDTsetsexist.
Word2-6=zero.
2.3-121&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.9 FRL(TABLE)
Description
Frequency Response List.
TheFRLcontains onelogical record foreachdifferent frequency setdefined inthebulk
data. Eachrecord contains asorted listoftheunique frequencies defined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I SetID
1
2+n I
1 l-m R
n l-k RSetIDn
Frequencies belonainq tosetID
1
Frequencies belonging tosetIDn
n+l End-of-file
TableTrailer
Word1=number offrequency sets.
Word2-6=zero.
2.3.29.10 NLFT(TABLE)
Description
Non-Linear Forcing Table.
Theheader record oftheNLFTcontains asorted listofsetidentification numbers forall
N_LINsetsdefined inthebulkdata. Eachloqical record oftheNLFTcontains alldatafor
asingle set.Pointandcomponent numbers ontheN_LINcardsareconverted toscalar index
values inboththed-ande-displacement sets.
TableFormat
Record Word Type Item
0 1,2 B Datablock name
3 I SetID
1
2+n I SetID
n
2.3-122&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type
I
I
type=1=
type=2=
type=3=
type=4=
type:1:
type:2:
type=3=
type=4=Item
Typeofnonlinear load(l_type=4)
SILvalue ind-set
SILvalue ine-set
Scale factor
SILvalue ind-set
SILvalue ine-set
Table ID(inteqer)
SILvalue ind-set(inteqer)
Scale factor (real)
Scale factor (real)
Notdefined
SILvalue ine-set (inteqer)
Notdefined
Notdefinedrepeated for
eachN_LIN
card inset
Sameformat asrecord I.
Databelongs tosetIDn.
n+l End-of-file
Note
Within each record, thedataissorted onwordZofeach8-word entry intherecord.
Table Trailer
Word l=number ofN_LIN sets.
Word 2-6=zero.
2.3-123&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.11 TRL(TABLE).
Description
Transient Response List.
Theheader record oftheTRLcontains alistofalltransient initial condition set
identifications inthebulkdata. Subsequent logical records contain TICdataforeach
set(onesetperlogical record). IfTSTEPcardsareoresent inthebulkdata,thisdata
follows theTICdata,onelogical record foreachTSTEP set.
TableFormat
Record Word _ Item
0 1,2 B Datablockname
3 I Number ofTICsets
4 I SetID
I
3+n I
4+n I
1 I
2,3 RSetIDn
Degrees offreedom inthed-displacement set
SILvalueind-set _repeated foreachinitial
Uo,VÂ° [condition inset
Sameformat asrecord 1
Databelongs tosetIDn
n+l
n+m1 I TSTEP setID
2 I N_repeated for
3 R Atleach interval 4 I NOinset
Sameformat asrecord n+l
n+m+l End-of-file
Notes
I.
2.
3.Datawithin eachTICrecord issorted onword1ofeach3-word entry.
Ifword3oftheheader record =O,thenthefirstlogical record oftheTRLcontains
TSTEPdata.
IfTSTEPdataisnotpresent inthebulkdata,andend-of-file willfollow thelast
TICrecord.
TableTrailer
Word1=number ofTICsets.
Word2=number ofTSTEP sets.
Word3-6=zero.
2.3-124&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIOAS
3.30 Data Blocks Output Froni idodule READ
Descri rti co
A - r!ml Ei:&lt;del&gt;envalue Tshle
a
Table For&lt;/del&gt;!iat
2ecord :lord Tvne - - I tell:
0 tlcader record
GFP ID record
1 I 2 1
2 I 9
3 I 0
e-9 I ?
19 I 7
11-50 Not defined
51-146 Title, subti tic, and label frolii /QUTnl&amp;rsquo;T/
GFP data record
1 I vo&amp;amp; IJI~&amp;rsquo;&amp;gt;?~ * ? Extraction order
3 l? h - ?i jenvalu?
4 K f =m
5 K w = f/2n
G R Generalized mass
7 R Generalized stiffness&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The seven data words in record 2 repeat for each eigenvalue found in READ.
Table Trailer
Mon-zero trailer
Cescription
[ a ] - Eigenvectors nlatrix giving the eigenvectors (disp1acen:ents) in the a set.
a
Matrix Trai ler
Number of columns = number of eigenvectors found in READ
Number of rows = a
Form = rectangular
TY pe = real single precision&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.30.3 MI(MATRIX)
Descriptior_
[mi]-ModalMassMatrix
MatrixTrailer
Number ofcolumns =numberofeigenvectors foundinREAD
Number ofrows =number ofeiQenvectors foundinREAD
Form =gener_l
Type =realsingle precision
2.3.30.4 _EIGS (TABLE)
Description
RealEigenvalue Summary Table
TableFormat
Record Word Type
Header record
1 I 21
2 I 9
3 I 2
1
4
4 I 0
5 I 0
6 I 0
7 I 0
8 I 0
9 i 0
10 I 0
Words 11-17 depend onthemethod used.Itern
Determinant Method:IfInverse PowerMethod
IfDeterminant Method
ifGivens Method
II I Number
12 I Number
13 I Number
14 I Number
15 I Number
16 I Number
17 I Reason
l
2ofeigenvalues extracted
ofpasses through starting points
ofcriteria changes
ofstarting point moves
oftriangular decompositions
offailures toiterate toaroot
fortermination
-Allrequested roots formed
-Outofregion predictions fromevery
starting point
-Insufficient timetoextract another
root
-Everywhere singular matrix
2.3-126 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Itern
Inverse PowerMethod:
II
12
13
14
15
16
17Number ofeigenvalues extracted
Number ofstarting points used
NumbEr ofstarting points moved
Number oftriangular decompositions
Number ofvector iterations
Dummy
Reasons fortermination
l-2Singularities encountered inarow
2-4Shifts while tracking oneroot
3-Regions completed
4-3*Number ofestimated roots werefound
5-Allroots ofproblem found
6-Number desired roots found
7-&lt;em&gt;outside maximum range
8-Insufficient timetoextract another
root
9-200iterations and1shiftpointmnve
before locating aroot
Givens Method:
II I Number
12 I Number
13 I Number
14. I &amp;hellip;&amp;hellip;..
15 I Dummy
16 I Dummy
i7 I Reason
l
18 R
19 I
20 I
21 I
22-50
51-146 Bofeigenvalues extracted
ofeigenvectors compLeted
offailures toconverge toaneigenvalue
ofc&lt;/em&gt;&amp;hellip;..toconverge toan_go_&amp;quot;&lt;em&gt;Ã·&lt;/em&gt;
fortermination
-Normal termination
3-Insufficient timetoevaluate eigenvectors
Value ofoff-diagonal element ofmodal massmatrix
having largest magnitude (zero where notapplicable)
Column of18inMI
Rowcf18inMI
Number ofoff-diagonal elements ofmodal mass
matrix thatfailtomeet error criterion
Notused
Title, subtitle, label
Records 2and3exist onlywhentheDeterminant Method isused.
1 I 21
2 I 9
3 I 3
4 I 0
5 I 0
6 Z 0
7 I 0
8 I 0
9 I 0
I0 I 6
11-50 Notused
51-146 B Title, subtitle, label
l I
2 R
3 R
4 R
5 RStarting point ID
&lt;em&gt;,-Starting point
=&lt;/em&gt;- Starting point
f=&lt;em&gt;/2&lt;/em&gt;-Starting point
Determinant at_,Words I-6arerepeated
foreach starting point
2.3-127 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
6Type
RItem
Scalefactor (powerofI0)
ofdeterminant !
End-ef-file
Table Trailer
Nonzero
2.3-127a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.31 DataBlocks Output From&amp;rsquo;_odule DS_GI
2.3.31.1 KDGG{MATRIX)
DescriFtion
Kd
[gg]
Matrix TrailerPartition ofdifferential stiffness matrix -gset.
Number ofcolumns =(!
_lumber ofrows =g
Form =symmetric
Type =realdouble precision
2.3-128&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.32
2.3.32.1
Description
[K_a]
Matrix TrailerData Elocks Output From HoduleSHP2
KDAA (MATRIX)
Partition ofdifferential stiffness matrix -aset.
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =real double precision
2.3-129&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTA[SLEDESCRIPTIONS
2.3.33 DataBlocks Output FromModulc DSHG2
2.3.33.1
Description
[Kb_]
Matrix TrailerKBLL(MATRIX)
Partition ofthestiffness matrix ofthefirstorderannroximation to
larqedisplacements -_set.
Number ofcolumns =
Humber ofrows =
Form =symmetric
Type =realdouble precjsi_on
2.3.33.2 KBFS(MATRIX)
Description
[K_s]-
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
largedisplacements.
Number ofcolumns =s
Number ofrows =f
Form =rectanqular
Type =realdouble precision
2.3.33.3 KBSS(MATRIX)
Description
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
larqedisplacements -sset.
Number ofcolumns =s
Number ofrows =s
Form =symmetric
Type =realdouble precision
2.3-130&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIO;_S
2.3.33.4 PBL(!IATRIX)
Description
I&amp;lt;}-Partition oftheloadvector ofthefirstorderapproximation tothe
largedisplacements -_set.
Matrix Trailer
Number ofcolumns =1
Number ofrows =
Form =rectangular
Type =realsingle precision
2.3.33.5 PBS(MATRIX)
Description
Partition oftheloadvector ofthefirstorderannroximation tothe
largedisplacement problem -sset.
Matrix Trailer
I_umber ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.o YBS(MATRIX)
Description
IY sl-Partition oftheconstrained displacement vector ofthefirstorder
approximation tothelargedisplacement vector -sset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.7 UBO_V (MATRIX)
Description
IoÂ°blPartition ofthedisplacement vector ofthefirstorderapproximation tothe
largedisplacement problem -oset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =o
Form =rectangular
Type =realsingle precision
2.3-131&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO,&lt;em&gt;S
2.3.34
2.3.34.1 KGGXL(MATRIX).
Description
,x&lt;/em&gt;
[,ggJ -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.34.2 ESTL(TABLE).
DescriptionDataBlocks Outout FromModule PLAI.
Stiffness matrix oflinear elements exclusive ofgeneral elements -gset.
=g
=g
=symmetric
=realdouble precision
Element Summary TableforLinear Elements.
TheESTLcontains datacopied fromtheESTdatablock.
theESTLonlyifitisalinear element ofthemodel.
TaLleFormat
Sameformat astheESTdatablockoutput frommodule TAI.
TableTrailer
Word1=number ofelement entries inESTL.
Words 2-6=zero.Anelement&amp;rsquo;s ESTdataresides in
2.3-132&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P12</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_012/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29 DataBlocks Output FromModule DPD
2.3.29.1 GPLD(TABLE)
Description
GridPointListDynamics.
Onelogical record whichcontains alistofallgridpoints, scalar points andextrapoints
inthemodelininternal sort.
Table Format
Record Word Type
0
1 1 I
n I
2
TableTrailer
Word1
Word2-6Item
Header record
IDforfirst point
IDfornthpoint
End-of-file
=number ofgridpoints +number ofscalar points +number ofextrapoints.
=zero.
2.3.29.2 SILD (TABLE)
Description
Scalar Index List Dynamics.
Twological records. First logical record contains scalar index values inthep-displace-
ment setforeach point inthedynamics model (internal order). These values aredefined
asfollows:
SILDl =l
(SILD. +6ificorresponds toagrid point
SILDi+ l_SILD I+lificorresponds toascalar oranextra point
Thesecond logical record contains anequivalence between scalar index values inthe
g-displacement setandscalar index values inthep-displacement set.
2.3-114&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
TableFormat
Record
0
l
2
3
Table TrailerWord Type Item
Header record
1 I Scalar indexforfirstpoint
â€¢ _ &amp;quot;
n I Scalar indexfornthpoint
I,2 I SILvalue, SILDvalue
2m-l,2m I SlLvalue, SlLDvalue
End-of-file
Word1=degrees offreedom inthep-displacement set(LUSETD).
Word2=number ofextrapoints.
Word3-6=zero.
2.3.29.3 USETD (TABLE)
Description
Displacement setdefinitions table dynamics.
USETD contains onelogical record. Each word corresponds toeach degree offreedom inthe
p-displacement set(ininternal order) andcontains ones inspecified bitpositions indicat-
ingthedisplacementsets towhich thepoint belongs.
Table Format
RecordWord Type Item
Header record
1 L Mask forfirst degree offreedom
n L Mask fornthdegree offreedom
End-of-file
Notes
Bitpositions forthevarious displacement sets aredefined asfollows:
LdIfelnelPlelsb]Sgl _IaIf]nJgIrlÂ°ls]mI
17181920212223242526272829303132
2.3-115&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Table Trailer
Word1=
Word2=
Word3=
Word4=
Word5:
Word6=degrees offreedom inthep-displacement set(LUSETD).
number ofextrapoints.
zero.
logical &amp;ldquo;or&amp;quot;ofallUSETDmasks.
zero.
zero.
2.3.29.4 EED(TABLE)
Description
Eigenvalue Extraction Data.
TheEEDcontains onelogical
EIGP, EIGR).
Table Format
Record Word
0
1
2
3
4
5
Detailed format forEIGBdata:
Word Type
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21record foreacheigenvalue extraction cardtype(EIGB, EIGC,
Eachlogical record contains datafromallcardsofagiventype.
Item
Header record
EIGBdata(ifEIGBcards inbulkdata)
EIGCdata(ifEIGCcards inbulkdata)
EIGPdata(ifEIGPcards inbulkdata)
EIGRdata(ifEIGRcards inbulkdata)
End-of-file
Itern
107,I,0
SetID
Method
F,F1 2
Ne,Nd,Nz
E
Norm
Ifnorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue in
a-set ofnormalization point
Notdefinedrepeated
foreach
EIGBcard
inbulkdata
2.3-I16 (711170)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Detailed format forEIGCcard:
Word Type
I-3 I
4 I
5-6 B
7-8 B
9 I
I0
II R
12-13
14-15 R
16-17 R
18 R
19-20 I
21
14+8k-21 +8k IItem
207,2,0
SetID
Method
Norm
IfNorm=&amp;ldquo;P_INT&amp;rdquo;, SILvalue inanalysis
setofnormalization point
Notdefined
E
Notdefined
_a&amp;rsquo;_a }repeated
_b&amp;rsquo;_b Iforeach region
Ne,Nd definition
Notdefined
-l(k=number ofregions)
Detailed format forEIGPcard:
Word Type
1-3 I
5 I
6-7 R
8 IItem
257,4,0
SetID_repeated for
_,m&amp;gt;each EIGPcard
M _inbulkdata
Detailed format forEIGRcard:
Word Type Item
I-3 I
4 I
5-6 B
7-8 R
9-11 I
12 R
13-14 B
15 I
16-21307,3,0
SetID
Method
F,FI 2
Ne,Nd,Nz
E
Norm
Ifnom=&amp;ldquo;P_INT&amp;rdquo;, SIkvaluein
a-setofnormalization point
Notdefinedrepeated
foreach
EIGRcard
inbulkdata
Table Trailer
Word l=
bit17=IifEIGBrecord exists
18=lifEIGCrecord exists
19=lifEIGPrecord exists
20=lifEIGRrecord exists
other bits=0
Word 2-6=zero.repeated
foreach
EIGCcard
inbulkdata
2.3-117 (7/1/70)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.29.5 EQDYN(TABLE)
Description
Equivalence between external points andscalar indexvalues -dynamicsâ€¢
EQDYNcontains twological records. Thefirst record contains pairsofexternal point
numbers andscalar indexvalues inthep-displacement setforthepoints inexternal order.
Thesecond record isessentially thesameasthefirstexcept thatthetypeofp_(grid,
scalar, extra) iscoded inthesecond wordofthepair.
TableFormat
Record Word Type
1,2 I
2n-l,2n IItem
Header record
IDforfirstpoint, scalar indexforfirstpoint
IDfornthpoint, scalar indexfornthpoint
3
Note
Type=
TableTrailer
Word1
Word2
Word3-61,2 I
2n-I,2n IIDforfirst point, lO&lt;em&gt;scalar index +type
IDfornthpoint, lO&lt;/em&gt;scalar index +type
End-of-file
I!forgridpointforscalar point
forextrapoint
=number ofgridpoints +number ofscalar points +number ofextrapoints
indynamics modelâ€¢
=number ofextrapointsâ€¢
=zero.
2.3-118&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.29.6 TFP_OL (TABLE).
Descri ption
Transfer Function Pool.
TheTFP_L datablock containsonelogical record foreach transfer function setdefined in
thebulkdataonaTFbulkdata card. Point andcomponent values areconverted torowand
column numbers inthep-displacement set.
Table Format
Record Word T_pe Item
O Header record
l I
2 I
3-5RSetID
65536*column n_er +rownun_er
Coefficientsrepeated foreE;chsetof
non-zero terms
Same format asfirst record
n+l End-of-file
Table Trailer
Word l
Word 2-6=nu_U_er oftransfer function sets.
=zero.
2.3.29.7 DLT(TABLE).
Description
Dynamic LoadsTable.
Theheaderrecord oftheDLTcontains asummary ofalldynamicloadsetsdefined inthe
problem. Thefirst record oftheDLTcontains allDLgAD cards (ifDLCAD cards havebeen input).
Each succeeding record contains alldataforonedynamic loadset.
TableFormat
Record Word Type Item
I-2 B
3 I
4-3+m I
4+m-3+m+n IDatablock name
m=number ofDL_AD setID&amp;rsquo;s
SetID&amp;rsquo;sonDL_AD cards
SetID&amp;rsquo;sonRL_ADI, 2andTL_ADI, 2cards
l
2
3-4I
R
R,ISetID
Scale factor
Scale factor, setID
-!,-lrepeated
foreach
DL_AD
card
2.3-I19 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKA;_DTABLEDESCRIPTIONS
Record Word Type Item
n+2l I
2 I
3-8
9 I
10-12 RDynamic loadcardtype
&lt;em&gt;=0notimedelays
Ip0timedelays
SeeNotes
SILnumber Irepeated foreach
A,&lt;/em&gt;,e_dynamic loadset
End-of-file
Notes
lÂ°IfnoDL_ADcardshavebeeninput, thethirdwordoftheheader record iszeroandthe
DL@ADrecord doesnotexist. Therefore, record 1oftheDLTcorresponds totheload
setdefined inword4oftheheader record.
2.DL_AD-set ID&amp;rsquo;sareinsortbysetID.Inrecord I,setID&amp;rsquo;swithin aDL_ADcardare
insort.
3.Within otherrecords, dataisinsortbySILnumber.
4.Formats bydynamic loadcardtypeareasfollows:
1=RL@ADI
Word _ Item
3 I Table IDforC(f)
4 I Table IDforD(f)
5-8 Notdefined
2=RL@AD2
Word Type Item
3 I Table IDforB(f)
4 I Table IDfor@(f)
5-8 Notdefined
3:TL_ADI
Word Type Item
3 I Table IDforF(t)
4-8 Notdefined
4=TL_AD2
Word Type Item
3-4 R TKI,TK2
5-6 R IVK&amp;rsquo;_K
7-8 R nK&amp;rsquo;_K
TableTrailer
WordI:GIN_filenameofDLT.
Word2-6=undefined.
2.3-120&lt;/p&gt;
&lt;p&gt;DATABLOC/,DESCRIPTIOHS
2.3.29.8 PSDL(TABLE)
Description
PowerSpectral Density List.
Thefirstlogical record ofthePSDLcontains RANDPS data. Subsequent logical records
contain RANDTdata,onesetperlogical record. EachPJ_NDTlogical record contains a
sorted listofunique timelagsdefined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I RANDTsetID
I
2+n I RANDTsetIDn
1 I RANDPS setID
2 I LoadsetID
3 I LoadsetID
4,5 R Complex number
6 I Table ID
i-m R Timelagsrepeated
foreach
RANDPS
cardin
bulkdata
n+l
n+2Sameformat asrecord 2
Databelongs toRANDTsetIDn
End-of-file
Notes
I.
2,RANDPS cardsmustbepresent fordatablocktoexist. Therefore, record onealways
contains RANDPS data.
IfnoRANDTI orRANDT2 cardsarepresent inthebulkdata,theheader record will
contain exactly twowords andrecord twowillbeanend-of-file,
TableTrailer
_number ofRANDTsets,orWord1
65535 ifnoPJ_NDTsetsexist.
Word2-6=zero.
2.3-121&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.9 FRL(TABLE)
Description
Frequency Response List.
TheFRLcontains onelogical record foreachdifferent frequency setdefined inthebulk
data. Eachrecord contains asorted listoftheunique frequencies defined intheset.
Table Format
Record Word Type Item
0 1,2 B Datablockname
3 I SetID
1
2+n I
1 l-m R
n l-k RSetIDn
Frequencies belonainq tosetID
1
Frequencies belonging tosetIDn
n+l End-of-file
TableTrailer
Word1=number offrequency sets.
Word2-6=zero.
2.3.29.10 NLFT(TABLE)
Description
Non-Linear Forcing Table.
Theheader record oftheNLFTcontains asorted listofsetidentification numbers forall
N_LINsetsdefined inthebulkdata. Eachloqical record oftheNLFTcontains alldatafor
asingle set.Pointandcomponent numbers ontheN_LINcardsareconverted toscalar index
values inboththed-ande-displacement sets.
TableFormat
Record Word Type Item
0 1,2 B Datablock name
3 I SetID
1
2+n I SetID
n
2.3-122&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type
I
I
type=1=
type=2=
type=3=
type=4=
type:1:
type:2:
type=3=
type=4=Item
Typeofnonlinear load(l_type=4)
SILvalue ind-set
SILvalue ine-set
Scale factor
SILvalue ind-set
SILvalue ine-set
Table ID(inteqer)
SILvalue ind-set(inteqer)
Scale factor (real)
Scale factor (real)
Notdefined
SILvalue ine-set (inteqer)
Notdefined
Notdefinedrepeated for
eachN_LIN
card inset
Sameformat asrecord I.
Databelongs tosetIDn.
n+l End-of-file
Note
Within each record, thedataissorted onwordZofeach8-word entry intherecord.
Table Trailer
Word l=number ofN_LIN sets.
Word 2-6=zero.
2.3-123&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.29.11 TRL(TABLE).
Description
Transient Response List.
Theheader record oftheTRLcontains alistofalltransient initial condition set
identifications inthebulkdata. Subsequent logical records contain TICdataforeach
set(onesetperlogical record). IfTSTEPcardsareoresent inthebulkdata,thisdata
follows theTICdata,onelogical record foreachTSTEP set.
TableFormat
Record Word _ Item
0 1,2 B Datablockname
3 I Number ofTICsets
4 I SetID
I
3+n I
4+n I
1 I
2,3 RSetIDn
Degrees offreedom inthed-displacement set
SILvalueind-set _repeated foreachinitial
Uo,VÂ° [condition inset
Sameformat asrecord 1
Databelongs tosetIDn
n+l
n+m1 I TSTEP setID
2 I N_repeated for
3 R Atleach interval 4 I NOinset
Sameformat asrecord n+l
n+m+l End-of-file
Notes
I.
2.
3.Datawithin eachTICrecord issorted onword1ofeach3-word entry.
Ifword3oftheheader record =O,thenthefirstlogical record oftheTRLcontains
TSTEPdata.
IfTSTEPdataisnotpresent inthebulkdata,andend-of-file willfollow thelast
TICrecord.
TableTrailer
Word1=number ofTICsets.
Word2=number ofTSTEP sets.
Word3-6=zero.
2.3-124&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIOAS
3.30 Data Blocks Output Froni idodule READ
Descri rti co
A - r!ml Ei:&lt;del&gt;envalue Tshle
a
Table For&lt;/del&gt;!iat
2ecord :lord Tvne - - I tell:
0 tlcader record
GFP ID record
1 I 2 1
2 I 9
3 I 0
e-9 I ?
19 I 7
11-50 Not defined
51-146 Title, subti tic, and label frolii /QUTnl&amp;rsquo;T/
GFP data record
1 I vo&amp;amp; IJI~&amp;rsquo;&amp;gt;?~ * ? Extraction order
3 l? h - ?i jenvalu?
4 K f =m
5 K w = f/2n
G R Generalized mass
7 R Generalized stiffness&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The seven data words in record 2 repeat for each eigenvalue found in READ.
Table Trailer
Mon-zero trailer
Cescription
[ a ] - Eigenvectors nlatrix giving the eigenvectors (disp1acen:ents) in the a set.
a
Matrix Trai ler
Number of columns = number of eigenvectors found in READ
Number of rows = a
Form = rectangular
TY pe = real single precision&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.30.3 MI(MATRIX)
Descriptior_
[mi]-ModalMassMatrix
MatrixTrailer
Number ofcolumns =numberofeigenvectors foundinREAD
Number ofrows =number ofeiQenvectors foundinREAD
Form =gener_l
Type =realsingle precision
2.3.30.4 _EIGS (TABLE)
Description
RealEigenvalue Summary Table
TableFormat
Record Word Type
Header record
1 I 21
2 I 9
3 I 2
1
4
4 I 0
5 I 0
6 I 0
7 I 0
8 I 0
9 i 0
10 I 0
Words 11-17 depend onthemethod used.Itern
Determinant Method:IfInverse PowerMethod
IfDeterminant Method
ifGivens Method
II I Number
12 I Number
13 I Number
14 I Number
15 I Number
16 I Number
17 I Reason
l
2ofeigenvalues extracted
ofpasses through starting points
ofcriteria changes
ofstarting point moves
oftriangular decompositions
offailures toiterate toaroot
fortermination
-Allrequested roots formed
-Outofregion predictions fromevery
starting point
-Insufficient timetoextract another
root
-Everywhere singular matrix
2.3-126 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Itern
Inverse PowerMethod:
II
12
13
14
15
16
17Number ofeigenvalues extracted
Number ofstarting points used
NumbEr ofstarting points moved
Number oftriangular decompositions
Number ofvector iterations
Dummy
Reasons fortermination
l-2Singularities encountered inarow
2-4Shifts while tracking oneroot
3-Regions completed
4-3*Number ofestimated roots werefound
5-Allroots ofproblem found
6-Number desired roots found
7-&lt;em&gt;outside maximum range
8-Insufficient timetoextract another
root
9-200iterations and1shiftpointmnve
before locating aroot
Givens Method:
II I Number
12 I Number
13 I Number
14. I &amp;hellip;&amp;hellip;..
15 I Dummy
16 I Dummy
i7 I Reason
l
18 R
19 I
20 I
21 I
22-50
51-146 Bofeigenvalues extracted
ofeigenvectors compLeted
offailures toconverge toaneigenvalue
ofc&lt;/em&gt;&amp;hellip;..toconverge toan_go_&amp;quot;&lt;em&gt;Ã·&lt;/em&gt;
fortermination
-Normal termination
3-Insufficient timetoevaluate eigenvectors
Value ofoff-diagonal element ofmodal massmatrix
having largest magnitude (zero where notapplicable)
Column of18inMI
Rowcf18inMI
Number ofoff-diagonal elements ofmodal mass
matrix thatfailtomeet error criterion
Notused
Title, subtitle, label
Records 2and3exist onlywhentheDeterminant Method isused.
1 I 21
2 I 9
3 I 3
4 I 0
5 I 0
6 Z 0
7 I 0
8 I 0
9 I 0
I0 I 6
11-50 Notused
51-146 B Title, subtitle, label
l I
2 R
3 R
4 R
5 RStarting point ID
&lt;em&gt;,-Starting point
=&lt;/em&gt;- Starting point
f=&lt;em&gt;/2&lt;/em&gt;-Starting point
Determinant at_,Words I-6arerepeated
foreach starting point
2.3-127 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
6Type
RItem
Scalefactor (powerofI0)
ofdeterminant !
End-ef-file
Table Trailer
Nonzero
2.3-127a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.31 DataBlocks Output From&amp;rsquo;_odule DS_GI
2.3.31.1 KDGG{MATRIX)
DescriFtion
Kd
[gg]
Matrix TrailerPartition ofdifferential stiffness matrix -gset.
Number ofcolumns =(!
_lumber ofrows =g
Form =symmetric
Type =realdouble precision
2.3-128&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.32
2.3.32.1
Description
[K_a]
Matrix TrailerData Elocks Output From HoduleSHP2
KDAA (MATRIX)
Partition ofdifferential stiffness matrix -aset.
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =real double precision
2.3-129&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTA[SLEDESCRIPTIONS
2.3.33 DataBlocks Output FromModulc DSHG2
2.3.33.1
Description
[Kb_]
Matrix TrailerKBLL(MATRIX)
Partition ofthestiffness matrix ofthefirstorderannroximation to
larqedisplacements -_set.
Number ofcolumns =
Humber ofrows =
Form =symmetric
Type =realdouble precjsi_on
2.3.33.2 KBFS(MATRIX)
Description
[K_s]-
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
largedisplacements.
Number ofcolumns =s
Number ofrows =f
Form =rectanqular
Type =realdouble precision
2.3.33.3 KBSS(MATRIX)
Description
Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to
larqedisplacements -sset.
Number ofcolumns =s
Number ofrows =s
Form =symmetric
Type =realdouble precision
2.3-130&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIO;_S
2.3.33.4 PBL(!IATRIX)
Description
I&amp;lt;}-Partition oftheloadvector ofthefirstorderapproximation tothe
largedisplacements -_set.
Matrix Trailer
Number ofcolumns =1
Number ofrows =
Form =rectangular
Type =realsingle precision
2.3.33.5 PBS(MATRIX)
Description
Partition oftheloadvector ofthefirstorderannroximation tothe
largedisplacement problem -sset.
Matrix Trailer
I_umber ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.o YBS(MATRIX)
Description
IY sl-Partition oftheconstrained displacement vector ofthefirstorder
approximation tothelargedisplacement vector -sset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =s
Form =rectangular
Type =realsingle precision
2.3.33.7 UBO_V (MATRIX)
Description
IoÂ°blPartition ofthedisplacement vector ofthefirstorderapproximation tothe
largedisplacement problem -oset.
Matrix Trailer
Number ofcolumns =1
Number ofrows =o
Form =rectangular
Type =realsingle precision
2.3-131&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO,&lt;em&gt;S
2.3.34
2.3.34.1 KGGXL(MATRIX).
Description
,x&lt;/em&gt;
[,ggJ -
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type
2.3.34.2 ESTL(TABLE).
DescriptionDataBlocks Outout FromModule PLAI.
Stiffness matrix oflinear elements exclusive ofgeneral elements -gset.
=g
=g
=symmetric
=realdouble precision
Element Summary TableforLinear Elements.
TheESTLcontains datacopied fromtheESTdatablock.
theESTLonlyifitisalinear element ofthemodel.
TaLleFormat
Sameformat astheESTdatablockoutput frommodule TAI.
TableTrailer
Word1=number ofelement entries inESTL.
Words 2-6=zero.Anelement&amp;rsquo;s ESTdataresides in
2.3-132&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P13</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_013/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.34.3 ESTNL (TABLE).
Descri ption
Element Summary Table forNon-Linear Elements.
TheESTNL, usedonlyinthePiecewise Linear Analysis Rigid Format, isconstructed fromthe
Element Sun,mary Table (EST). Itcontains onelogical record foreach element typeforwhich at
least oneelement ofthattypeisnon-linear (anelement isdefined tobenon-linear ifits
modulus ofelasticity isdefined asthefirst derivative ofastress-strain tabular function
input onaTABLESI bulkdata card) andforwhich arequest forstress output isfound. Thecon-
struction oftheESTNL isasfollows: theESTdatablock isreadandeachelement istested for
possible non-linearity. Iftheelement isnon-linear andtheuserhasrequested element stress
datatobeoutput, itselement dataiscopied ontotheESTNL datablock andthen initial stress
dataisappended. Theonly elements admissible totheESTNL are: RQD,TUBE, C_NR_D, BAR,TRMEM,
TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
l
2toN+l
i!.(. _._11&#39;4&amp;quot;1&amp;quot; IElement type (integer) }repeated for
Element ESTdata _repeated foreach !each admissible E!..mme._nt stress data_non-!inear element element tyne
Notes
lâ€¢
2.Nisthenumber ofwords intheESTdatasection.
Misthenumber ofstress words appended.
Thenumber ofrecords intheESTNL corresponds tothenun_Der ofseparate admissible
element types forwhich atleast oneelement isnon-linear.
Table TraiIer
Word l =total number ofelements intheESTNL.
Words 2-6=zero.
Detailed ESTNL Formats
R_D,C@NR_D:
Word Item
1-17
18
19
20
21ESTdata
E0,previobs strain value onceremoved, initially zero
,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven aMATIcard.
T,thepreviously calculated torsional moment, initially zero
2.3-133&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
Word
1-16
17-20Item
ESTdata
Sameaswor_s18-21fortheR_D.
BAR:
Word
1-42
43
44
45
46
47
48
49
5OItem
ESTdata
Go,previous strain value onceremoved, initially zero
E,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven onaMAT1 card
V1
V2
*Theprevious element forces, initially zeroT
HIa
_&amp;lsquo;I2a
TRMEM:
TRIAl:Word
1-21
22
23
24
25
26
2]7Item
ESTdata
co,previous strain valueonceremoved, initially zero
c,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially the
valueofEgivenonaHAT1card
_X
_yThecurrent membrane stresses, initially zero
Â°xy
Word
1-27
28-33Item
ESTdata
Sameaswords22-27fortheTRMEM
2.3-134 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
Word
34
35
36
37
38Mx
My
Mxx
Vx
=k
VyItem
Theprevious element forces, initially zero
TRIA2:
Word
1-27
28-32Item
Sameaswords 1-27fortheTRMEM
Sameaswords 34-38 fortheTRIAl
QDHEM:
Word
1-26
27-32Item
ESTdata
Sameaswords 22-27 fortheTRMEM
QUADI:
Word
1-32
33-38
39-43Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
QUAD2:
Word
1-26
27-32
33-37Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
2.3-134a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATA3LOCKDESCRIPTIONS
2.3.34.4 ECPTNL (TABLE).
Description
Element Connection andProperties Table for_Ion-Linear Elements.
TheECPTNL, usedonlyinthePiecewise Linear Analysis RigidFormat, isconstructed fromthe
ECPTdatablock. TheECPTNL contains onelogical record foreachgridpointorscalar pointof
themodel. Eachlogical record contains Element Summary Table (EST)dataplusinitial element
stress dataappended tothisdataforeachnon-linear element connected tothepivot point. (An
element isdefined tobenon-linear ifitsnmdulus ofelasticity isdefined asthefirstderivative
ofastress-strain tabular function inputonaTABLESl card). Theonlyelements admissible tothe
ECPTNL are:R_D,TUBE,C_NR_D, BAR,TRMEM, TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
1 l
2
3toN+2
N+3toN+M+2SILnumber for&amp;quot;Divot&amp;quot; arid
orscalar point(integer)
Element type(integer)}reDeated foreach
Element ESTdata _non-linear element
Element stress data )connected tothepivot
n+l End-of-filereheated
foreachorid
orscalar
nointinthe
model
Notes
I.Nisthenumber ofwordsintheESTdatasection.
Misthenund_er ofstress wordsappended. Thenumber ofstress wordsappended in
generating theECPTNL datablockisnotthesameasingenerating theESTNLdatablock.
2.nisthetotalnumber ofgridandscalar points inthemodel.
3.Ifallelements connected toapivotpointarelinear, thentherecord contains only
oneword,thepivotpointsetnegative.
TableTrailer
Word1=totalnumber ofelement entries intheECPTNL.
Words 2-6=zero.
Detailed ECPTNL Formats
R_D,C_NR_D:
Word
1-20Item
SameasESTNLdata. Noteword21oftheESTNL
isnotpresent intheECPTNL datafortheR_D,C_NR_D.
2.3-135&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
BAR:Word
1-19Item
SameasESTNLdata. Noteword20oftheESTNLisnot
present intheECPTNL datafortheTUBE.
TRMEM:Word
1-45Item
SameasESTNLdata. Notewords 46-50oftheESTNLarenot
present intheECPTNL datafortheBAR.
Word
1-27Item
SameasESTNLdata.
TRIAl:
TRIA2:Word
1-33Item
SameasESTNLdata. Notewords 34-38oftheESTNLarenot
present intheECPTNL datafortheTRIAl.
QDMEM:Word
1-27Item
SameasESTNLdata. Notewords 28-32oftheESTNLarenot
present intheECPTNL datafortheTRIA2.
Word
1-32 SameasESTNLdata.Item
QUADI:
Word
1-38Item
Same asESTNL data. Note words 39-43 oftheESTNL arenot
present intheECPTNL data fortheQUADI.
2.3-136 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
QUAD2:
Word
1-32Item
SameasESTNLdata. Notewords 33-37oftheESTNLarenot
present intheECPTNL datafortheQUAD2.
2.3-136a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.35 DataBlocks Output FromModule ADD
2.3.35.1 KGGSUM (MATRIX)
Description
Sumof[K_g] and[K_].
Usedonly inthePiecewise Linear Analysis Rigid Format andisequivalent to[Kgg].
Matrix Trailer
Number ofcolumns =g
Number ofrows =g
Form =symmetric
_vpe =realdouble precision
2.3.35.2 PG(14ATRIX)
Description
MatrixTrailer
Number ofcolumns
Number ofrows
Form
TypeIncremental loadvector used inPiecewise Linear Analysis.
=l
=g
=rectangular
=realsingle precision
2.3.35.3 KDAAM (MATRIX)
Description
Kdml-Thenegative of[K_a] (seesection 2.3.32).aa-
UsedonlyintheBuckling Analysis Rigid Format.
HatrixTrailer
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =realdouble precision
2.3-137&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.36 DataBlocks Output FromModule PLA2
2.3.36.1 UGVl(MATRIX)
Description
[uldMatrix ofsuccessive sumsofincremental displacement vectors -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.35.2 PGVI(MATRIX)
Description
1
[P_] -Matrix ofsuccessive sumsofincremental loadvectors -aset.
yonlyinthePiecewise Linear Analysis RiqidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precisionUsed
2.3.36.3 QGI(MATRIX)
Description
[qld
Matrix TrailerMatrix ofsuccessive sumsofincremental vectors ofsingle pointconstraint
forces -gset.UsedinthePiecewise Linear Analysis RigidFormat only.
Number ofcolumns =number offactors onaPLFACT bulkdatacard
humber ofrows =q
Form =symmetric
Type =realsinale precision
2.3-138&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.37DataBlocks Output FromModule PLA3.
2.3.37.1 _NLES (TABLE).
Description
Output tablefornonlinear element stresses.
Format
Sameformat as_ESItableoutput frommodule SDR2.
Note
ONLES iswritten insubroutine PLA32 ofmodule PLA3.
TableTrailer
Word 1 =total number ofelement entries inBNLES.
Word 2-6 =zero.
2.3.37.2 ESTNLI (TABLE).
Description
Element summary table fornonlinear elements -updated.
Used only inthePiecewise Linear Analysis Rigid Format, theESTNLI data block isthesame
astheESTNL data block except that theappended stress information isupdated. Seedata block
description forESTNL forfurther details.
Table Format
Same format astheESTNL data block.
Table Trailer
Word l =number ofelement entries inESTNLI.
Word 2-6 =zero.
2.3-139&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO_iS
2.3.38
2.3.38.1
DescriptionDataBlocks Output FromHodule PLA4.
KGGNL(MATRIX).
Stiffness matrix ofnonlinear elements -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =
Number ofrows =
Form =
Type =
2.3.38.2 ECPTNLI (TABLE).
Descriptiong
g
symmetric
realdouble precision
Element Connection andProperties TableforNon-Linear Elements -undated.
UsedonlyinthePiecewise Linear Analysis RigidFormat, theECPTNLI datablockisthe
sameastheECPTNL datablockexcept thattheappended stress information isupdated. See
description forECPTNL forfurther details.
Table Format
Sameformat astheECPTNL datablock.
TableTrailer
Word1:totalnumber ofelement entries inECPTNLI.
Word2-6=zero.
2.3-140&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.39 DataBlocks Output FromModule CASE.
2.3.39.1 CASEXX (TABLE).
Description
CaseControl datatable fordynamics problems.
Table Format
Theformat oftherecords isexactly likeCASECC, (seesection 2.3.1.I) with dynamic
looping records deleted.
Table Trailer
WordI=number ofrecords inC_EXX.
Word2-6:zero.
2.3-141&lt;/p&gt;
&lt;p&gt;DATASLOCKANDTABLEDESCRIPTIONS
2.3.40 DataBlocks Output FromModule MTRXIN
2.3.40.I K2PP(MATRIX)
Description
2
[mpp] -
Matrix Trailer
Plumber ofcolumns
Number ofrows
Form
TypeDirect inputstiffness matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.2 M2PP(MATRIX)
Description
2
[Mpp] -
Matrix TrailerDirect inputmassmatrix -pset.
Number ofcolumns :p
_lumber ofrows =p
Form =square
Type =depends oninput
2.3.40.3 B2PP(MATRIX)
Description
2
[Bpp]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputdamping matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.4
TheMTRXIN module maybeusedviaDMAPtoproduce anydesired psizedmatrix from
DMIGinputdata.
2.3-142 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.41 Data Blocks Output From Module GKAD
2.3.41.1 KDD(MATRIX)
Description
[Kdd] -Dynamic stiffness matrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3.41.2 BDD(MATRIX)
Description
[Bdd] Dynamic damping matrix -dset.
I&amp;rsquo;ldbY&amp;quot;IX IrcII I_I&amp;quot;
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
frequency response/complex eignevalue
=real double precision
transient
2.3.41.3 MDD(MATRIX)
Description
[Mdd] Dynamic massmatrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3-143&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2,3.41.4
Description
[G m]
Matrix TrailerGMD(MATRIX)
Multipoint constraint transformation matrix -dynamics.
Number ofcolumns =d
Number ofro_&amp;rsquo;s =m
Form =rectangular
Type =realdouble precision
2.3.41.5 GOD(MATRIX)
Description
[G_] -
Matrix TrailerOmitted coordinate transformation matrix -dynamics.
Number ofcolumns =d
Number ofrows =o
Form :rectangular
Type =realdouble precision
2.3.41.6 K2DD(MATRIX)
Description
Matrix TrailerDirect inputstiffness matrix -dset.
Number ofcolumns =d
Number ofrows =d
Form :square
Type =complex double precision/real double precision
2.3.41.7 M2DD(MATRIX)
Description
[M_d]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputmassmatrix -dset.
=d
=d
=square
=complex double precision/real double precision
2.3-144 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.41.8
Description
Matrix TrailerB2DD(MATRIX)
Direct input dampinQ matrix -dset.
Number ofcolumns
Diumber ofrows
Form
Type=d
=d
=square
=complex double precision/real double precision&lt;/p&gt;
&lt;p&gt;DATABLOCKAilDTABLE DESCRIPTIO,_S
2.3.42 DataBlocks Output FromModule CEAD
2.3.42.1 PHID(MATRIX)
Description
[_d]-Complex eigenvectors inthedset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =d
Form =rectanqular
Type =complex sinqle precision
2.3.42.2 CLAMA(TABLE)
Description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;, Complex eigenvalue table.
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3-9 I
I0 I
11-50
51-146 BOFPIDrecord
90
1006
0
6
Notdefined
Title, subtitle, andlabelfrom/&lt;em&gt;UTPUT/
1 I
2 I
3 R
4 R
5 R
6 R@FPdatarecord
Modenumber
Extraction order
Realpartofeiqenvalue
Imaqinary partofeinenvalue
IIm(X)I/21[
-2*Re(&lt;/em&gt;)/llm (Z)I
Note: The6datawords arerepeated inrecord 2foreach
eigenvalue foundinCEAD.
End-of-fil e
TableTrailer
Word1=1006
Word2=0
Word3=0
Word4=0
Word5=6
Word6=0
2.3-146&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DATA_LOCKDESCRIPTIOI4S
2.3.42.3 _CEIGS(TABLE).
Description
Complex eigenvalue summary table.
Table Format
Record Word Type Item
0 B Header record
1 I
2 I
3 I
4-10 I
II I
12-180
1009
1ifdeterminant
2ifinverse power
0
Number ofeigenvalues extracted
Depend onthemethod used
Determinant
12 I
13 I
14 I
15 I
16 I
17 I
18 INumber ofpasses through starting points
Number ofcriteria changes
Number ofstarting point moves
Number ofdecompositions
Number offailures toiterate toaroot
Number ofpredictions outside theregion
Reason fortermination
l-allrequested roots found
2-outofregion prediction from every
starting point
3-insufficient time toextract another root
4-everywhere singular matrix
Inverse Power
12-18
19-50
51-146 BIdentical towords 12-18forInverse PowerMethod
section oftheBEIGSdatablockoutput fromthe
READmodule (seesection 2.3.30.4).
Notdefined
Title, subtitle, label
Record 1will berepeated foreach region forInverse Power.
Records 2+3exist only when METHOD =DETM.
1 I 0
2 I 1009
3 I 3
4-9 I 0
I0 I 6
II-50 Notdefined
51-146 B Title, subtitle, label
2.3-147&lt;/p&gt;
&lt;p&gt;DATABLOCKAIIDTASLEDZSCRIPTIO,_S
Record
4
TableTrailer
Non-zero.Word Type. Item
l I
2 R
3 R
4 R
5 R
6 IStartinn pointnumber inregion
Realpartofstartina point
Imaainary partofstartina point
Maqnitude ofstartinn point
Phaseofstartinn point
Scalefactor (power ofI0)ofmaanitude
WordsI-6arerepeated foreachstartina pointineachreaion.
End-of-file
2.3.42.4 PHIH(MATRIX)
Description
[#h] -Complex eigenvectors inthehset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =h
Form =rectangular
Type =complex sinqle precision
2.3-148&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.43 Data Blocks Output From Module VDR
2.3.43.1 _PHID (TABLE)
Description
Output complex eigenvectors requests (solution set, S_RTI, complex).
Table Format
Record Word Type Item
NotesI-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I
2 I
3 I
4 I
5 I
6-7 R
8 I
g I
lO I
11-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 R
9-14 RDevice code +lO&lt;em&gt;approach code
lOl4
0
Subcase number
Mode number
Complex eigenvalue
0
Format code
Nun_er ofwords perentry inrecord 2=14.
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(Tl), I(T2), I(T3), I(Rl), I(R2), I(R3)}Doint
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
3.Format codeI!=xyoutput only==print
=punch
=print andpunch
I!=real ==real/imaginary
=magnitude/phase
4.Approach code =9
5.Point type
6Â°Ii=grid point==scalar point
=extra point
=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
2.3-149&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536
=remainder fromdivision above
=zero.
2.3.43.2 @UDVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RDevice code+I0&lt;em&gt;approach code
I015 =displacement
1016=velocity
1017=acceleration
0
Subcase number
Frequency
0
0
Dynamic loadsetID
Format code
Number ofwords perentry inrecord 2=14
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code _repeated
Pointtype {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code:
3.Format codeli=xyoutput onlyprint
punch
printandpunch
1=real
2=real/imaginery
3=magnitude/phase
4.Approach code=6
2.3-150 (811/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P13</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_013/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.34.3 ESTNL (TABLE).
Descri ption
Element Summary Table forNon-Linear Elements.
TheESTNL, usedonlyinthePiecewise Linear Analysis Rigid Format, isconstructed fromthe
Element Sun,mary Table (EST). Itcontains onelogical record foreach element typeforwhich at
least oneelement ofthattypeisnon-linear (anelement isdefined tobenon-linear ifits
modulus ofelasticity isdefined asthefirst derivative ofastress-strain tabular function
input onaTABLESI bulkdata card) andforwhich arequest forstress output isfound. Thecon-
struction oftheESTNL isasfollows: theESTdatablock isreadandeachelement istested for
possible non-linearity. Iftheelement isnon-linear andtheuserhasrequested element stress
datatobeoutput, itselement dataiscopied ontotheESTNL datablock andthen initial stress
dataisappended. Theonly elements admissible totheESTNL are: RQD,TUBE, C_NR_D, BAR,TRMEM,
TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
l
2toN+l
i!.(. _._11&#39;4&amp;quot;1&amp;quot; IElement type (integer) }repeated for
Element ESTdata _repeated foreach !each admissible E!..mme._nt stress data_non-!inear element element tyne
Notes
lâ€¢
2.Nisthenumber ofwords intheESTdatasection.
Misthenumber ofstress words appended.
Thenumber ofrecords intheESTNL corresponds tothenun_Der ofseparate admissible
element types forwhich atleast oneelement isnon-linear.
Table TraiIer
Word l =total number ofelements intheESTNL.
Words 2-6=zero.
Detailed ESTNL Formats
R_D,C@NR_D:
Word Item
1-17
18
19
20
21ESTdata
E0,previobs strain value onceremoved, initially zero
,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven aMATIcard.
T,thepreviously calculated torsional moment, initially zero
2.3-133&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
Word
1-16
17-20Item
ESTdata
Sameaswor_s18-21fortheR_D.
BAR:
Word
1-42
43
44
45
46
47
48
49
5OItem
ESTdata
Go,previous strain value onceremoved, initially zero
E,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially
thevalue ofEgiven onaMAT1 card
V1
V2
*Theprevious element forces, initially zeroT
HIa
_&amp;lsquo;I2a
TRMEM:
TRIAl:Word
1-21
22
23
24
25
26
2]7Item
ESTdata
co,previous strain valueonceremoved, initially zero
c,previous strain value, initially zero
E,thepreviously calculated modulus ofelasticity, initially the
valueofEgivenonaHAT1card
_X
_yThecurrent membrane stresses, initially zero
Â°xy
Word
1-27
28-33Item
ESTdata
Sameaswords22-27fortheTRMEM
2.3-134 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
Word
34
35
36
37
38Mx
My
Mxx
Vx
=k
VyItem
Theprevious element forces, initially zero
TRIA2:
Word
1-27
28-32Item
Sameaswords 1-27fortheTRMEM
Sameaswords 34-38 fortheTRIAl
QDHEM:
Word
1-26
27-32Item
ESTdata
Sameaswords 22-27 fortheTRMEM
QUADI:
Word
1-32
33-38
39-43Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
QUAD2:
Word
1-26
27-32
33-37Item
ESTdata
Sameaswords22-27fortheTRMEM
Sameaswords34-38fortheTRIAl
2.3-134a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATA3LOCKDESCRIPTIONS
2.3.34.4 ECPTNL (TABLE).
Description
Element Connection andProperties Table for_Ion-Linear Elements.
TheECPTNL, usedonlyinthePiecewise Linear Analysis RigidFormat, isconstructed fromthe
ECPTdatablock. TheECPTNL contains onelogical record foreachgridpointorscalar pointof
themodel. Eachlogical record contains Element Summary Table (EST)dataplusinitial element
stress dataappended tothisdataforeachnon-linear element connected tothepivot point. (An
element isdefined tobenon-linear ifitsnmdulus ofelasticity isdefined asthefirstderivative
ofastress-strain tabular function inputonaTABLESl card). Theonlyelements admissible tothe
ECPTNL are:R_D,TUBE,C_NR_D, BAR,TRMEM, TRIAl, TRIA2, QDMEM, QUADI, QUAD2.
Table Format
Record Word Item
0 Header record
1 l
2
3toN+2
N+3toN+M+2SILnumber for&amp;quot;Divot&amp;quot; arid
orscalar point(integer)
Element type(integer)}reDeated foreach
Element ESTdata _non-linear element
Element stress data )connected tothepivot
n+l End-of-filereheated
foreachorid
orscalar
nointinthe
model
Notes
I.Nisthenumber ofwordsintheESTdatasection.
Misthenund_er ofstress wordsappended. Thenumber ofstress wordsappended in
generating theECPTNL datablockisnotthesameasingenerating theESTNLdatablock.
2.nisthetotalnumber ofgridandscalar points inthemodel.
3.Ifallelements connected toapivotpointarelinear, thentherecord contains only
oneword,thepivotpointsetnegative.
TableTrailer
Word1=totalnumber ofelement entries intheECPTNL.
Words 2-6=zero.
Detailed ECPTNL Formats
R_D,C_NR_D:
Word
1-20Item
SameasESTNLdata. Noteword21oftheESTNL
isnotpresent intheECPTNL datafortheR_D,C_NR_D.
2.3-135&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TUBE:
BAR:Word
1-19Item
SameasESTNLdata. Noteword20oftheESTNLisnot
present intheECPTNL datafortheTUBE.
TRMEM:Word
1-45Item
SameasESTNLdata. Notewords 46-50oftheESTNLarenot
present intheECPTNL datafortheBAR.
Word
1-27Item
SameasESTNLdata.
TRIAl:
TRIA2:Word
1-33Item
SameasESTNLdata. Notewords 34-38oftheESTNLarenot
present intheECPTNL datafortheTRIAl.
QDMEM:Word
1-27Item
SameasESTNLdata. Notewords 28-32oftheESTNLarenot
present intheECPTNL datafortheTRIA2.
Word
1-32 SameasESTNLdata.Item
QUADI:
Word
1-38Item
Same asESTNL data. Note words 39-43 oftheESTNL arenot
present intheECPTNL data fortheQUADI.
2.3-136 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
QUAD2:
Word
1-32Item
SameasESTNLdata. Notewords 33-37oftheESTNLarenot
present intheECPTNL datafortheQUAD2.
2.3-136a (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.35 DataBlocks Output FromModule ADD
2.3.35.1 KGGSUM (MATRIX)
Description
Sumof[K_g] and[K_].
Usedonly inthePiecewise Linear Analysis Rigid Format andisequivalent to[Kgg].
Matrix Trailer
Number ofcolumns =g
Number ofrows =g
Form =symmetric
_vpe =realdouble precision
2.3.35.2 PG(14ATRIX)
Description
MatrixTrailer
Number ofcolumns
Number ofrows
Form
TypeIncremental loadvector used inPiecewise Linear Analysis.
=l
=g
=rectangular
=realsingle precision
2.3.35.3 KDAAM (MATRIX)
Description
Kdml-Thenegative of[K_a] (seesection 2.3.32).aa-
UsedonlyintheBuckling Analysis Rigid Format.
HatrixTrailer
Number ofcolumns =a
Number ofrows =a
Form =symmetric
Type =realdouble precision
2.3-137&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.36 DataBlocks Output FromModule PLA2
2.3.36.1 UGVl(MATRIX)
Description
[uldMatrix ofsuccessive sumsofincremental displacement vectors -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precision
2.3.35.2 PGVI(MATRIX)
Description
1
[P_] -Matrix ofsuccessive sumsofincremental loadvectors -aset.
yonlyinthePiecewise Linear Analysis RiqidFormat.
Matrix Trailer
Number ofcolumns =number offactors onaPLFACT bulkdatacard
Number ofrows =g
Form =rectangular
Type =realsingle precisionUsed
2.3.36.3 QGI(MATRIX)
Description
[qld
Matrix TrailerMatrix ofsuccessive sumsofincremental vectors ofsingle pointconstraint
forces -gset.UsedinthePiecewise Linear Analysis RigidFormat only.
Number ofcolumns =number offactors onaPLFACT bulkdatacard
humber ofrows =q
Form =symmetric
Type =realsinale precision
2.3-138&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.37DataBlocks Output FromModule PLA3.
2.3.37.1 _NLES (TABLE).
Description
Output tablefornonlinear element stresses.
Format
Sameformat as_ESItableoutput frommodule SDR2.
Note
ONLES iswritten insubroutine PLA32 ofmodule PLA3.
TableTrailer
Word 1 =total number ofelement entries inBNLES.
Word 2-6 =zero.
2.3.37.2 ESTNLI (TABLE).
Description
Element summary table fornonlinear elements -updated.
Used only inthePiecewise Linear Analysis Rigid Format, theESTNLI data block isthesame
astheESTNL data block except that theappended stress information isupdated. Seedata block
description forESTNL forfurther details.
Table Format
Same format astheESTNL data block.
Table Trailer
Word l =number ofelement entries inESTNLI.
Word 2-6 =zero.
2.3-139&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIO_iS
2.3.38
2.3.38.1
DescriptionDataBlocks Output FromHodule PLA4.
KGGNL(MATRIX).
Stiffness matrix ofnonlinear elements -gset.
UsedonlyinthePiecewise Linear Analysis RigidFormat.
Matrix Trailer
Number ofcolumns =
Number ofrows =
Form =
Type =
2.3.38.2 ECPTNLI (TABLE).
Descriptiong
g
symmetric
realdouble precision
Element Connection andProperties TableforNon-Linear Elements -undated.
UsedonlyinthePiecewise Linear Analysis RigidFormat, theECPTNLI datablockisthe
sameastheECPTNL datablockexcept thattheappended stress information isupdated. See
description forECPTNL forfurther details.
Table Format
Sameformat astheECPTNL datablock.
TableTrailer
Word1:totalnumber ofelement entries inECPTNLI.
Word2-6=zero.
2.3-140&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.39 DataBlocks Output FromModule CASE.
2.3.39.1 CASEXX (TABLE).
Description
CaseControl datatable fordynamics problems.
Table Format
Theformat oftherecords isexactly likeCASECC, (seesection 2.3.1.I) with dynamic
looping records deleted.
Table Trailer
WordI=number ofrecords inC_EXX.
Word2-6:zero.
2.3-141&lt;/p&gt;
&lt;p&gt;DATASLOCKANDTABLEDESCRIPTIONS
2.3.40 DataBlocks Output FromModule MTRXIN
2.3.40.I K2PP(MATRIX)
Description
2
[mpp] -
Matrix Trailer
Plumber ofcolumns
Number ofrows
Form
TypeDirect inputstiffness matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.2 M2PP(MATRIX)
Description
2
[Mpp] -
Matrix TrailerDirect inputmassmatrix -pset.
Number ofcolumns :p
_lumber ofrows =p
Form =square
Type =depends oninput
2.3.40.3 B2PP(MATRIX)
Description
2
[Bpp]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputdamping matrix -pset.
=p
=p
=square
=depends oninput
2.3.40.4
TheMTRXIN module maybeusedviaDMAPtoproduce anydesired psizedmatrix from
DMIGinputdata.
2.3-142 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.41 Data Blocks Output From Module GKAD
2.3.41.1 KDD(MATRIX)
Description
[Kdd] -Dynamic stiffness matrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3.41.2 BDD(MATRIX)
Description
[Bdd] Dynamic damping matrix -dset.
I&amp;rsquo;ldbY&amp;quot;IX IrcII I_I&amp;quot;
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
frequency response/complex eignevalue
=real double precision
transient
2.3.41.3 MDD(MATRIX)
Description
[Mdd] Dynamic massmatrix -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=d
=d
=square
=complex double precision
-frequency response/complex eigenvalue
=real double precision
-transient
2.3-143&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2,3.41.4
Description
[G m]
Matrix TrailerGMD(MATRIX)
Multipoint constraint transformation matrix -dynamics.
Number ofcolumns =d
Number ofro_&amp;rsquo;s =m
Form =rectangular
Type =realdouble precision
2.3.41.5 GOD(MATRIX)
Description
[G_] -
Matrix TrailerOmitted coordinate transformation matrix -dynamics.
Number ofcolumns =d
Number ofrows =o
Form :rectangular
Type =realdouble precision
2.3.41.6 K2DD(MATRIX)
Description
Matrix TrailerDirect inputstiffness matrix -dset.
Number ofcolumns =d
Number ofrows =d
Form :square
Type =complex double precision/real double precision
2.3.41.7 M2DD(MATRIX)
Description
[M_d]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeDirect inputmassmatrix -dset.
=d
=d
=square
=complex double precision/real double precision
2.3-144 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.41.8
Description
Matrix TrailerB2DD(MATRIX)
Direct input dampinQ matrix -dset.
Number ofcolumns
Diumber ofrows
Form
Type=d
=d
=square
=complex double precision/real double precision&lt;/p&gt;
&lt;p&gt;DATABLOCKAilDTABLE DESCRIPTIO,_S
2.3.42 DataBlocks Output FromModule CEAD
2.3.42.1 PHID(MATRIX)
Description
[_d]-Complex eigenvectors inthedset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues foundinCEAD
Number ofrows =d
Form =rectanqular
Type =complex sinqle precision
2.3.42.2 CLAMA(TABLE)
Description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;, Complex eigenvalue table.
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3-9 I
I0 I
11-50
51-146 BOFPIDrecord
90
1006
0
6
Notdefined
Title, subtitle, andlabelfrom/&lt;em&gt;UTPUT/
1 I
2 I
3 R
4 R
5 R
6 R@FPdatarecord
Modenumber
Extraction order
Realpartofeiqenvalue
Imaqinary partofeinenvalue
IIm(X)I/21[
-2*Re(&lt;/em&gt;)/llm (Z)I
Note: The6datawords arerepeated inrecord 2foreach
eigenvalue foundinCEAD.
End-of-fil e
TableTrailer
Word1=1006
Word2=0
Word3=0
Word4=0
Word5=6
Word6=0
2.3-146&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DATA_LOCKDESCRIPTIOI4S
2.3.42.3 _CEIGS(TABLE).
Description
Complex eigenvalue summary table.
Table Format
Record Word Type Item
0 B Header record
1 I
2 I
3 I
4-10 I
II I
12-180
1009
1ifdeterminant
2ifinverse power
0
Number ofeigenvalues extracted
Depend onthemethod used
Determinant
12 I
13 I
14 I
15 I
16 I
17 I
18 INumber ofpasses through starting points
Number ofcriteria changes
Number ofstarting point moves
Number ofdecompositions
Number offailures toiterate toaroot
Number ofpredictions outside theregion
Reason fortermination
l-allrequested roots found
2-outofregion prediction from every
starting point
3-insufficient time toextract another root
4-everywhere singular matrix
Inverse Power
12-18
19-50
51-146 BIdentical towords 12-18forInverse PowerMethod
section oftheBEIGSdatablockoutput fromthe
READmodule (seesection 2.3.30.4).
Notdefined
Title, subtitle, label
Record 1will berepeated foreach region forInverse Power.
Records 2+3exist only when METHOD =DETM.
1 I 0
2 I 1009
3 I 3
4-9 I 0
I0 I 6
II-50 Notdefined
51-146 B Title, subtitle, label
2.3-147&lt;/p&gt;
&lt;p&gt;DATABLOCKAIIDTASLEDZSCRIPTIO,_S
Record
4
TableTrailer
Non-zero.Word Type. Item
l I
2 R
3 R
4 R
5 R
6 IStartinn pointnumber inregion
Realpartofstartina point
Imaainary partofstartina point
Maqnitude ofstartinn point
Phaseofstartinn point
Scalefactor (power ofI0)ofmaanitude
WordsI-6arerepeated foreachstartina pointineachreaion.
End-of-file
2.3.42.4 PHIH(MATRIX)
Description
[#h] -Complex eigenvectors inthehset.
Matrix Trailer
Number ofcolumns =number ofeigenvalues found inCEAD
Number ofrows =h
Form =rectangular
Type =complex sinqle precision
2.3-148&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.43 Data Blocks Output From Module VDR
2.3.43.1 _PHID (TABLE)
Description
Output complex eigenvectors requests (solution set, S_RTI, complex).
Table Format
Record Word Type Item
NotesI-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I
2 I
3 I
4 I
5 I
6-7 R
8 I
g I
lO I
11-50
51-82 B
83-I14 B
I15-146 B
l I
2 I
3-8 R
9-14 RDevice code +lO&lt;em&gt;approach code
lOl4
0
Subcase number
Mode number
Complex eigenvalue
0
Format code
Nun_er ofwords perentry inrecord 2=14.
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(Tl), I(T2), I(T3), I(Rl), I(R2), I(R3)}Doint
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
3.Format codeI!=xyoutput only==print
=punch
=print andpunch
I!=real ==real/imaginary
=magnitude/phase
4.Approach code =9
5.Point type
6Â°Ii=grid point==scalar point
=extra point
=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
2.3-149&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536
=remainder fromdivision above
=zero.
2.3.43.2 @UDVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 R
9-14 RDevice code+I0&lt;em&gt;approach code
I015 =displacement
1016=velocity
1017=acceleration
0
Subcase number
Frequency
0
0
Dynamic loadsetID
Format code
Number ofwords perentry inrecord 2=14
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code _repeated
Pointtype {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)}point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code:
3.Format codeli=xyoutput onlyprint
punch
printandpunch
1=real
2=real/imaginery
3=magnitude/phase
4.Approach code=6
2.3-150 (811/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P14</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_014/</guid>
      <description>
        
        
        &lt;p&gt;DATA BLOCK DESCRIPTIONS
!_otes cont&amp;rsquo;d.
5.Point type
Ii qrid point==scalar point
=extra point
=modal point
6.Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word 3-6 =zero.
2.3.43.3 OUDVl (TABLE)
Description
Output displacement requests (solution set, S_RTI, Feal).
Table Format
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
I15=displacement
16=velocity 17=acceleration
0
Subcase number
Time
0
O
Dynamic load setID
Format code =l
Number ofwords perentry inrecord 2=8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code
Point type
Tl,T2,T3,Rl,R2,R3irepeated
foreach
Point
2.3-151&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code=real
=real/imaginary
=magnitude/phase
4.Approach code =7
5.Pointtype =
li=qridpointscalar point
extrapoint
modal point
6.Components (words 3-8ofevennumbered records) whicharenotinthesolution set
arereplaced byaninteger I.
TableTrailer
Word1=(sumofallwords inevennumbered records)/65536.
Word2=remainder fromdivision above.
Word3-6=zero.
2.3.43.4 @PNLI(TABLE)
Description
Output nonlinear loadrequests (solution set,S_RTI, real)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+I0*approach code
12
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code
Number ofwords perentryinrecord 2:8
Notdefined
Title
Subtitle
Label
2.3-152&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Item+
l I
2 I
3-8 RlO&lt;em&gt;point ID+device code} repeated
Point type Iforeach Tl,T2,T3,Rl,R2,R3 point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
li=xyoutput only==print
=punch
=print andpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code =7
5. Point type
Ii=Qrid point==scalar point
=extra point
=modal point
6.Components (words 3-8ineven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word3-6=zero.
2.3.43.5 _PHIH (TABLE)
Description
Output complex eigenvector requests (solution set, S_RTI, complex).
TableFormat
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I Device code +lO&lt;/em&gt;approach code
2 i lOl4
3 I 0
4 I Subcase number
5 I Mode number
6-7 R Complex eigenval ue
8 I 0
9 I Format code
lO I Number ofwords perentry inrecord 2=14
2.3-153&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Record
Notes
I.Word _ Item
11-50 Notdefined
51-82 B Title
83-114 B Subtitle
115-146 B Label
1 I I0*pointID+device code irepeated
2 I Pointtype _for
3-8 R R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
9-14 R l(ml), I(T2), l(T3), l(ml), l(m2), I(R3)_point
Records 1and2arerepeated foreachvector tobeoutput
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=9
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution set
arereplaced byaninteqer I.
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536.
=remainder fromdivision above.
:zero.
2.3.43.6 @UHVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex).
2.3-154&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Format
Record Word Type Item
I-2
3-5
6
7B Datablock name
I Month, day,year
I Time
I 1
l
2
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146I Device code +lO&lt;em&gt;approach code
lO15 =displacementI 1016 =velocity
lOl7 =acceleration
I 0
I Subcase number
R Frequency
I 0
I 0
I Dynamic load setID
I Format code
I Number ofwords perentry inrecord 2=14
Notdefined
B Title
B Subtitle
B Label
1 I
2 i
3-8 R
9-14 RI0&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.I!=xyoutput onlyprint
punch
print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Point type =
6,I=grid point2=scalar point
3=extra point
4=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l
Word 2=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
Word 3-6 =zero.
2.3-155&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.43.7 _UHVI(TABLE)
Description
Output displacement requests (solution set,S_RTI, real).
Table Format
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
15=displacement16=velocity
17=acceleration
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinrecord 2=8
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code
pointtype
TI,T2,T3,RI,R2,R3Irepeated
foreach
point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =7 Approach code
Ii=gridpoint5.Pointtype = scalar point
extrapoint
modalpoint
6.Components (words 3-8ofevennumbered records) which arenotinthesolution set
arereplaced byaninteger I.
2.3-156&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Trailer
Word l
Word 2
Word 3-6=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
:zero.
2.3-157&lt;/p&gt;
&lt;p&gt;DATA_LOCKAI_DTABLEDESCRIPTIONS
2.3.44
2.3.44.1
Description
Matrix TrailerDataBlocks Output FromModule FRRD
UDVF(ilATRIX)
Displacement vector matrix inafrequency response problem -dset.
,Number ofcolumns
[,_umber ofrows
Form
Type
2.3.44.2 PSF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=d
=rectangular
=complex single precision
Loadvector forfrequency response -sset.
Number ofcolumns
Number ofrows
Form
Type
2.3.44.3 PDF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=s
=rectangular
=complex single precision
Dynamic loadmatrix forfrequency analysis -dset.
Number ofcolumns
_umber ofrows
Form
Type
2.3.44.4 PPF(r,IATRIX)
Description
[Pif)]
,.&amp;rsquo;latrix Trailer=number offrequencies multiplied bythenumber o_loads
=d
=rectangular
=complex sinqle precision
Dynamic loadsforfrequency response -pset.
Number ofcolumns
i&amp;rsquo;_umber ofrows
Form
Type=number offrequencies multiplied bythenumber ofloads
=p
=rectangular
=complex single precision
2.3-158&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Note
Theheader record contains thelistoffrequencies.
2.3.44.5 UHVF(MATRIX)
Description
Matrix TrailerModal frequency response solution vectors -hset.
Number ofcolumns =number offrequencies multiplied bythenumber ofloads
Number ofrows =h
Form =rectangular
Type =complex single precision
2.3-159&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.45 DataBlocks Output FromModule SDR3.
2.3.45.1 @PP2(TABLE)
Description
Output loadvector requests (pset,S_RT2, real).
Table Format
Record Word Type
0
1 1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
2002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Time )repeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
5printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.
2.3-160&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.2 _QP2(TABLE).
Description
Output forces ofsingle-point constraint (pset,S_RT2, real).
Table Format
Record Wor__d Type Item
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2003
0
Subcase nu_er
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=l
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime }repeat
Point type _for each
R(TI),R(T2), R(T3), R(RI),R(R2), R(R3)_timestep
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!:realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype:igrid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-161&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.3 OUPV2(TA3LE).
Description
Outout displacement vector requests (pset,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
2001=Displacement
2010 Velocity
2011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reoeat
Pointtyne &amp;gt;&lt;em&gt;oreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time sten
Notes
I.Records 1and2arereheated foreachvector tobeoutput.
2.Device code
li=xyoutput onlyprint
punch
printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype =I&lt;/em&gt;=gridpoint=scalar point
3=extrapoint4modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-162&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.4 _ES2 (TABLE).
Description
Output element stress requests (S_RT2, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
ID I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;apDroach code
2005
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
O
Dynamic loadsetID
Format code =l
Number ofwords _erentry innextrecord =M&amp;rsquo;JDS
Notdefined
Title
Subtitle
Label
Time _repeat
Element stress data &lt;em&gt;for each
Seesection 2.3.51 fordetails)time step
l_otes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codei&lt;/em&gt;=xyoutput onlyâ€¢print
14=punch=print andpunch
I!=real==real/imaainary
=magnitude/ghase
4.Approach code =6
Table Trailer
Words l-Gcontain nosignificant values.
2.3-163&lt;/p&gt;
&lt;p&gt;DATABLOCKANGTABLEDESCRIPTIONS
2.3.45.5 _EF2(TABLE).
Description
Output element forcerequests (S_RT2, eal).
TableFormat
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
2004
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
Time )reoeat
Element forcedata &lt;em&gt;foreach
Seesection 2.3.52 fordetails}time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
I&lt;/em&gt;=xYoutput only
2.Device code= print
i_punchprintandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
TableTrailer
WordsI-6contain nosignificant values.
2.3-164&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.6 &lt;em&gt;PNL2(TABLE).
Description
Output nonlinear load requests (solution set, S_RT2, real).
Table Format
Record Word Type Item
O Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
i R
2 I
3-8 RDevice code +lO&lt;em&gt;apnroach code
2012
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Ti&lt;/em&gt; _reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))timestep
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6
5.Pointtype=real
=real/imaginary
=magnitude/phase
6.Ii=grid point==scalar point
=extra ooint
=modal point
Components (words 3-8ineven numbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-165&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.7 &lt;em&gt;UDV2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reDeat
Pointtype &amp;gt;foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}timesten
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format code=li=xyoutput onlyprint
punch
printandpunch
!=realreal/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype
6.#&lt;/em&gt;=gridpoint= =scalar point
I_=extra_oint=modalpoint
Components (words 3-8ofevennumbered records) whicharenotinthesolution setare
replaced byinteger I.
TableTrailer
Words I-5contain nosignificant values.
2.3-166&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.8 OUHV2 (TABLE).
Descri ption
Output displacement vector requests (solution set,S_RT2, real).
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code +lO&lt;em&gt;aDDroach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime _reoeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time stem
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3Â°li=xyoutput only= =print
:ounch
=print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype
_.li=grid point= =scalar point
=extra point
=modal point
Components (words 3-8ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-167&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.9 OPPC2 (TABLE).
Description
Output loadvector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
3002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
0
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency _re_eat
Pointtype _for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3))frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code
li=real= =real/imaginary
=magnitude/phase
4.Approach code =5
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
TableTrailer
WordsI-Gcontain nosignificant values.
2.3-168&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.10 _QPC2 (TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 R
2 I
3-8 R
9-14 RHeader record
Device code+lO&lt;em&gt;approach code
3003
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innext record =14
Notdefined
Title
Subtitle
Label
Frequency _repeat
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), l(Rl), I(R2), l(R3))frenuency
Notes
I.Records land2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
i=real3.Format code= :real/imaginary
=magnitude/phase
4.Approach code:5
li:gridpointscalar point
5.Point type =extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-169&lt;/p&gt;
&lt;p&gt;DATA_LOCKANDTABLEDESCRIPTIONS
2.3.45.11 _UPVC2 (TABLE).
Description
Output displacement vector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDproach code
3001=Displacement
3010 Velocity
3011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
eachfrequency
i_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
O=xyoutput only
2.Device code=1print
4=punch
5printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=5
5.Pointtypel=gridpoint=2scalar point
3=extrapoint
14modal point
TableTrailer
Â£Jords I-6contain nosignificant values.
2.3-170&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P14</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_014/</guid>
      <description>
        
        
        &lt;p&gt;DATA BLOCK DESCRIPTIONS
!_otes cont&amp;rsquo;d.
5.Point type
Ii qrid point==scalar point
=extra point
=modal point
6.Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word 3-6 =zero.
2.3.43.3 OUDVl (TABLE)
Description
Output displacement requests (solution set, S_RTI, Feal).
Table Format
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
I15=displacement
16=velocity 17=acceleration
0
Subcase number
Time
0
O
Dynamic load setID
Format code =l
Number ofwords perentry inrecord 2=8
Notdefined
Title
Subtitle
Label
lO&lt;/em&gt;point ID+device code
Point type
Tl,T2,T3,Rl,R2,R3irepeated
foreach
Point
2.3-151&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code=real
=real/imaginary
=magnitude/phase
4.Approach code =7
5.Pointtype =
li=qridpointscalar point
extrapoint
modal point
6.Components (words 3-8ofevennumbered records) whicharenotinthesolution set
arereplaced byaninteger I.
TableTrailer
Word1=(sumofallwords inevennumbered records)/65536.
Word2=remainder fromdivision above.
Word3-6=zero.
2.3.43.4 @PNLI(TABLE)
Description
Output nonlinear loadrequests (solution set,S_RTI, real)
TableFormat
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+I0*approach code
12
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code
Number ofwords perentryinrecord 2:8
Notdefined
Title
Subtitle
Label
2.3-152&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word Type Item+
l I
2 I
3-8 RlO&lt;em&gt;point ID+device code} repeated
Point type Iforeach Tl,T2,T3,Rl,R2,R3 point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code
li=xyoutput only==print
=punch
=print andpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code =7
5. Point type
Ii=Qrid point==scalar point
=extra point
=modal point
6.Components (words 3-8ineven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l =(sum ofallwords ineven numbered records)/65536.
Word 2 =remainder from division above.
Word3-6=zero.
2.3.43.5 _PHIH (TABLE)
Description
Output complex eigenvector requests (solution set, S_RTI, complex).
TableFormat
Record Word Type Item
I-2 B Data block name
3-5 I Month, day, year
6 I Time
7 I l
l I Device code +lO&lt;/em&gt;approach code
2 i lOl4
3 I 0
4 I Subcase number
5 I Mode number
6-7 R Complex eigenval ue
8 I 0
9 I Format code
lO I Number ofwords perentry inrecord 2=14
2.3-153&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Record
Notes
I.Word _ Item
11-50 Notdefined
51-82 B Title
83-114 B Subtitle
115-146 B Label
1 I I0*pointID+device code irepeated
2 I Pointtype _for
3-8 R R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
9-14 R l(ml), I(T2), l(T3), l(ml), l(m2), I(R3)_point
Records 1and2arerepeated foreachvector tobeoutput
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=9
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution set
arereplaced byaninteqer I.
TableTrailer
Word1
Word2
Word3-6=(sumofallwords inevennumbered records)/65536.
=remainder fromdivision above.
:zero.
2.3.43.6 @UHVCl (TABLE)
Description
Output displacement requests (solution set,S_RTI, complex).
2.3-154&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Format
Record Word Type Item
I-2
3-5
6
7B Datablock name
I Month, day,year
I Time
I 1
l
2
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146I Device code +lO&lt;em&gt;approach code
lO15 =displacementI 1016 =velocity
lOl7 =acceleration
I 0
I Subcase number
R Frequency
I 0
I 0
I Dynamic load setID
I Format code
I Number ofwords perentry inrecord 2=14
Notdefined
B Title
B Subtitle
B Label
1 I
2 i
3-8 R
9-14 RI0&lt;/em&gt;point ID+device code _repeated
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)_point
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.I!=xyoutput onlyprint
punch
print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Point type =
6,I=grid point2=scalar point
3=extra point
4=modal point
Components (words 3-14 ofeven numbered records) which arenotinthesolution set
arereplaced byaninteger I.
Table Trailer
Word l
Word 2=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
Word 3-6 =zero.
2.3-155&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.43.7 _UHVI(TABLE)
Description
Output displacement requests (solution set,S_RTI, real).
Table Format
Record Word _ Item
I-2 B Datablockname
3-5 I Month, day,year
6 I Time
7 I 1
1 I
2 I
3 I
4 I
5 R
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
1 I
2 I
3-8 RDevice code+I0&lt;em&gt;approach code
15=displacement16=velocity
17=acceleration
0
Subcase number
Time
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinrecord 2=8
Notdefined
Title
Subtitle
Label
I0&lt;/em&gt;point ID+device code
pointtype
TI,T2,T3,RI,R2,R3Irepeated
foreach
point
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
li=xyoutput only2.Device code= print
punch
printandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =7 Approach code
Ii=gridpoint5.Pointtype = scalar point
extrapoint
modalpoint
6.Components (words 3-8ofevennumbered records) which arenotinthesolution set
arereplaced byaninteger I.
2.3-156&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
Table Trailer
Word l
Word 2
Word 3-6=(sum ofallwords ineven numbered records)/65536.
=remainder from division above.
:zero.
2.3-157&lt;/p&gt;
&lt;p&gt;DATA_LOCKAI_DTABLEDESCRIPTIONS
2.3.44
2.3.44.1
Description
Matrix TrailerDataBlocks Output FromModule FRRD
UDVF(ilATRIX)
Displacement vector matrix inafrequency response problem -dset.
,Number ofcolumns
[,_umber ofrows
Form
Type
2.3.44.2 PSF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=d
=rectangular
=complex single precision
Loadvector forfrequency response -sset.
Number ofcolumns
Number ofrows
Form
Type
2.3.44.3 PDF(MATRIX)
Description
Matrix Trailer=number offrequencies multiplied bythenumber ofloads
=s
=rectangular
=complex single precision
Dynamic loadmatrix forfrequency analysis -dset.
Number ofcolumns
_umber ofrows
Form
Type
2.3.44.4 PPF(r,IATRIX)
Description
[Pif)]
,.&amp;rsquo;latrix Trailer=number offrequencies multiplied bythenumber o_loads
=d
=rectangular
=complex sinqle precision
Dynamic loadsforfrequency response -pset.
Number ofcolumns
i&amp;rsquo;_umber ofrows
Form
Type=number offrequencies multiplied bythenumber ofloads
=p
=rectangular
=complex single precision
2.3-158&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Note
Theheader record contains thelistoffrequencies.
2.3.44.5 UHVF(MATRIX)
Description
Matrix TrailerModal frequency response solution vectors -hset.
Number ofcolumns =number offrequencies multiplied bythenumber ofloads
Number ofrows =h
Form =rectangular
Type =complex single precision
2.3-159&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
2.3.45 DataBlocks Output FromModule SDR3.
2.3.45.1 @PP2(TABLE)
Description
Output loadvector requests (pset,S_RT2, real).
Table Format
Record Word Type
0
1 1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2 I
3-8 RItem
Header record
Device code +lO&lt;em&gt;approach code
2002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Time )repeat
Pointtype _foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format codeli=xyoutput onlyprint
punch
5printandpunch
4.Approach code=6=real
=real/imaginary
=magnitude/phase
5.Pointtype =
Ii=grid pointscalar point
extra point
modal point
TableTrailer
WordsI-6contain nosignificant values.
2.3-160&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.2 _QP2(TABLE).
Description
Output forces ofsingle-point constraint (pset,S_RT2, real).
Table Format
Record Wor__d Type Item
0 Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 BDevice code+lO&lt;em&gt;approach code
2003
0
Subcase nu_er
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=l
Nu_er ofwords perentry innextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime }repeat
Point type _for each
R(TI),R(T2), R(T3), R(RI),R(R2), R(R3)_timestep
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3.li=xyoutput only= =print
=punch
=print andpunch
I!:realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype:igrid pointscalar point
extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-161&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.3 OUPV2(TA3LE).
Description
Outout displacement vector requests (pset,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
2001=Displacement
2010 Velocity
2011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reoeat
Pointtyne &amp;gt;&lt;em&gt;oreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time sten
Notes
I.Records 1and2arereheated foreachvector tobeoutput.
2.Device code
li=xyoutput onlyprint
punch
printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype =I&lt;/em&gt;=gridpoint=scalar point
3=extrapoint4modalpoint
TableTrailer
WordsI-6contain nosignificant values.
2.3-162&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.4 _ES2 (TABLE).
Description
Output element stress requests (S_RT2, real).
Table Format
Record Word Type
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
ID I
ll-50
51-82 B
83-I14 B
I15-146 B
2 l R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;apDroach code
2005
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
O
Dynamic loadsetID
Format code =l
Number ofwords _erentry innextrecord =M&amp;rsquo;JDS
Notdefined
Title
Subtitle
Label
Time _repeat
Element stress data &lt;em&gt;for each
Seesection 2.3.51 fordetails)time step
l_otes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format codei&lt;/em&gt;=xyoutput onlyâ€¢print
14=punch=print andpunch
I!=real==real/imaainary
=magnitude/ghase
4.Approach code =6
Table Trailer
Words l-Gcontain nosignificant values.
2.3-163&lt;/p&gt;
&lt;p&gt;DATABLOCKANGTABLEDESCRIPTIONS
2.3.45.5 _EF2(TABLE).
Description
Output element forcerequests (S_RT2, eal).
TableFormat
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 B
2 1 R
2-NWDS MixedItem
Header record
Device code+lO&lt;em&gt;approach code
2004
Element type
Subcase number
lO&lt;/em&gt;element ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
Time )reoeat
Element forcedata &lt;em&gt;foreach
Seesection 2.3.52 fordetails}time step
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
I&lt;/em&gt;=xYoutput only
2.Device code= print
i_punchprintandpunch
!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=6
TableTrailer
WordsI-6contain nosignificant values.
2.3-164&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.6 &lt;em&gt;PNL2(TABLE).
Description
Output nonlinear load requests (solution set, S_RT2, real).
Table Format
Record Word Type Item
O Header record
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
i R
2 I
3-8 RDevice code +lO&lt;em&gt;apnroach code
2012
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic load setID
Format code =l
Number ofwords perentry innext record =8
Notdefined
Title
Subtitle
Label
Ti&lt;/em&gt; _reDeat
Point type _for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))timestep
Notes
I.Records land2arerepeated foreach vector tobeoutput.
2.Device code =
3.Format codeli=xyoutput onlyprint
punch
print andpunch
4.Approach code =6
5.Pointtype=real
=real/imaginary
=magnitude/phase
6.Ii=grid point==scalar point
=extra ooint
=modal point
Components (words 3-8ineven numbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-165&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.7 &lt;em&gt;UDV2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, real).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;approach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime )reDeat
Pointtype &amp;gt;foreach
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}timesten
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
3.Format code=li=xyoutput onlyprint
punch
printandpunch
!=realreal/imaginary
magnitude/phase
4.Approach code=6
5.Pointtype
6.#&lt;/em&gt;=gridpoint= =scalar point
I_=extra_oint=modalpoint
Components (words 3-8ofevennumbered records) whicharenotinthesolution setare
replaced byinteger I.
TableTrailer
Words I-5contain nosignificant values.
2.3-166&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.45.8 OUHV2 (TABLE).
Descri ption
Output displacement vector requests (solution set,S_RT2, real).
TableFormat
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code +lO&lt;em&gt;aDDroach code
2015=Displacement
2016 Velocity
2017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code=1
Number ofwordsperentryinnextrecord =8
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 RTime _reoeat
Point type &amp;gt;for each
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time stem
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code
3Â°li=xyoutput only= =print
:ounch
=print andpunch
I!=realFormat code =real/imaginary
magnitude/phase
4.Approach code =6
5.Pointtype
_.li=grid point= =scalar point
=extra point
=modal point
Components (words 3-8ofeven numbered records) which arenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-167&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.9 OPPC2 (TABLE).
Description
Output loadvector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-145 BDevice code+lO&lt;em&gt;approach code
3002
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
0
Format code
Number ofwordsperentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency _re_eat
Pointtype _for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), I(RI), I(R2), l(R3))frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=
li=xyoutput onlyprint
punch
printandpunch
3.Format code
li=real= =real/imaginary
=magnitude/phase
4.Approach code =5
li=gridpoint5.Pointtype = scalar point
extrapoint
modal point
TableTrailer
WordsI-Gcontain nosignificant values.
2.3-168&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.10 _QPC2 (TABLE).
Description
Output forces ofsingle-point constraint requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
l I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
lO I
ll-50
51-82 B
83-I14 B
I15-146 B
1 R
2 I
3-8 R
9-14 RHeader record
Device code+lO&lt;em&gt;approach code
3003
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innext record =14
Notdefined
Title
Subtitle
Label
Frequency _repeat
Point type {for
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each
I(TI), I(T2), I(T3), l(Rl), I(R2), l(R3))frenuency
Notes
I.Records land2arerepeated foreachvector tobeoutput.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
i=real3.Format code= :real/imaginary
=magnitude/phase
4.Approach code:5
li:gridpointscalar point
5.Point type =extra point
modal point
Table Trailer
Words I-6contain nosignificant values.
2.3-169&lt;/p&gt;
&lt;p&gt;DATA_LOCKANDTABLEDESCRIPTIONS
2.3.45.11 _UPVC2 (TABLE).
Description
Output displacement vector requests (pset,S_RT2, complex).
Table Format
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDproach code
3001=Displacement
3010 Velocity
3011 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
eachfrequency
i_otes
I.Records 1and2arerepeated foreachvector tobeoutput.
O=xyoutput only
2.Device code=1print
4=punch
5printandpunch
I!=real3.Format code= real/imaginary
magnitude/phase
4.Approach code=5
5.Pointtypel=gridpoint=2scalar point
3=extrapoint
14modal point
TableTrailer
Â£Jords I-6contain nosignificant values.
2.3-170&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P15</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_015/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.12 _ESC2 (TABLE).
Description
Output element stress requests (S_RT2, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BItem
Header record
Device code+lO&lt;em&gt;approach code
3005
Element type
Subcase number
lO&lt;/em&gt;Element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 i R Frequency
2-NWDS Mixed Element stress data
See2.3.51 fordetailsrepeat
for ach
frequency
Notes
I.Records 1and2arerepeated foreach vector tobeoutout.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =5 Approach code
TableTrailer
Words I-6contain nosignificant values.
2.3-171&lt;/p&gt;
&lt;p&gt;DATA3LOCKANDTABLEDESCRIPTIONS
2.3.45.13 @EFC2(TA3LE).
Description
Output element forcerequests (S_RT2, complex).
Table Format
Record Word _ Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDnroach code
3004
Element type
Subcase number
IO&lt;/em&gt;element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 1 R Frequency
2-NNDS Mixed Element forcedata
See2.3.52 fordetailsrepeat
foreach
frequency
Notes
Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=O=xyoutput only1print
4=punch
5printandpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code=5
TableTrailer
WordsI-6contain nosignificant values.
2.3-172&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.14 &lt;em&gt;UDVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, cowlex).
Table Format
Record Wor___dd Type Item
0 Header record
l l
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146
l
2
3-8
9-14B
B
B
R
I
R
RDevice code+lO&lt;em&gt;approach code
3015=Displacement
3016 Velocity
3017 Acceleration
0
Subcase Number
IO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
Frequency )repeat
Point type (for
R(TI), R(T2),R(T3) R(RI), R(R2)&lt;/em&gt;,R(R3)_each
I(TI), I(T2), I(T3): I(RI),I(R2), l(R3))frequency
ilotes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format code =li:xyoutput onlyprint
punch
print andpunch
I!=real=real/imaoinary
=magnitude/phase
4.Approach code =5
Ii=gridpoint5.Point type =scalar pointextra point
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-173&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.15 OUHVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDDroach code
3015=Disnlacement
3016 Velocity
3017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwordsperentryinnextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
each
frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.
3.0=xyoutput only1print
Device code=4punch
5printandhunch
I!=realFormat code= real/imaginary
magnitude/phase
4.Approach code=5
5.PointtypeI=gridpoint=2scalar point
3=extrapoint4modal point
Components (words 3-14ofevennumbered records) whicharenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-174&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.46DataBlocks Output FromModule XYTRAN.
2.3.46.1 XYPLTT (TABLE).
Description
Output plotrequest datainformfordirect plotting ofS_RT2Transient Response output.
TableFormat
Record Word Type Item
0 Header record
1 1 I-R
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0
II R
12 R
13 R
14 R
15 R
16 R
17 I
18 I
19 I
20 I
21 I
22 I
23 R
24 R
25 I
26 I
27 I
28 I
29 I
30 ISubcase IDorifaRandom Response problem,
theMeanResponse
Framenumber
Curvenumber
Point IDorelement ID
Component number
Vector number (I,2&amp;hellip;.II)
l&amp;ndash;Graph usestophalfofframe
O&amp;ndash;Graph usesfullframe
-l&amp;ndash;Graph useslowerhalfofframe
O&amp;ndash;Axis, tics,labels, values, etc.havebeen
drawnandthiscurve istobescaled and
plotted identically aslastexcept forcurve
symbols.
l&amp;ndash;Axis, tics,labels, scaling, etc.aretobe
performed orcomputed andifword7ofthis
record =0orI,askidtonewframeistobe
made.
Number ofblankframes between frames (frame-
skip)
Notused
XMIN!X[_AN Define exactcorners o_this
YMIN upper, lower, orfullframegraph
YMAX
Actual valueoffirsttic
Actual increment _osucc_ss=w
tics
Integer valuetobeprinted on
firsttic
Maximum number ofdigits in
anyprint-value x-direction
+or-powerforprintvalues tics
Totalnumber ofticstonrint
thisedge
Value printskid0,1,2,3&amp;mdash;
Delta integer printvalueto
successive tics&amp;quot;
Sameas15through 22
Butfory-direction tics
2.3-175&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
31
32
3334
35
36
37
38
39
4041
42
5O
51
243
2B_
283
284
285
286
287
288
289
29O
291
292
293
294
295
296
297
298
299
300B
B
B
B
B
B
I
I
R
R
I
I
I
I
R
R
R
R
R
R
R
R
R
RItem
Topedgetics leachof31-34maybeless
Bottom edgetics[than O&amp;ndash;tics without values
Leftedgetics(equal toO&amp;ndash;noticshere
Rightedgetics)greater O&amp;ndash;tics withvalues
O&amp;ndash;x-direction islinear
Greater thanO&amp;ndash;number o_cycles andx-direction
islogarithmic
O&amp;ndash;y-direction islinear
Greater thanO&amp;ndash;number ofcycles andy-direction
islogarithmic
O&amp;ndash;nox-axis
l&amp;ndash;draw x-axis
x-axis y-intercept
O&amp;ndash;noy-axis
l&amp;ndash;draw y-axis
y-axis x-intercept
Lessthan0&amp;ndash;plotsymbol foreachcurvepoint.
Select symbol corresponding to
curvenumber inword3ofthis
record.
Equalto0&amp;ndash;connect points bylineswhere
points arecontinuous i.e.,(no
integer 1pairs).
Greater than0&amp;ndash;dobothofabove.
Notused
Title (32words)
Subtitle (32words)
Label (32words)
CurveTitle (32words)
x-axis Title (32words)
y-axis Title (32words)
Notused
Pensize
Plotter 1:SC4020, 2:EAI3500
Inches paperx-direction
Inches papery-direction
Camera forSC4020 lessthan0=35mm,0:F80,
Greater 0=Both
Printflag0:no,1=yes
Plotflag0:no,1=plotter,
-I:paper, 2=plotter andpaper
Punchflag0:no,1=yes
x-minofalldata
x-maxofalldata
y-minwithin x-limits ofgraph
x-value atthisy-min
y-maxwithin x-limits ofgraph
x-value atthisy-max
y-minforalldata
x-value atthisy-min
y-maxforalldata
x-value atthisy-max
2.3-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type Item
1 I
2 I
3 R
4 Rl
Always ispresent l
x-value _coordinate pair
y-value #reoeats forallpairs plotted
Notes
I.Records land2repeat foreachcurve plotted.
2.Evennumbered records willcontain integer 1pairs toindicate where curve hasmoved
outside ofgraph limits.
Table Trailer
WordsI-6contain nosignificant values.
2.3-177&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.2 XYPLTFA (TA3LE).
Description
Identical toXYPLTT, forFrequency Response plots (solution set).
2.3.4G.3 XYPLTF (TABLE).
Description
Identical toXYPLTT, forFrequency Response plots.
2.3.46.4 XYPLTR (TABLE).
Description
Identical toXYPLTT, forRandom Response Dlots.
2.3.4G.5 XYPLTTA (TABLE).
Description
Identical toXYPLTT, forTransient Response plots (solution set).
2.3-178&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.47 DataBlocks Output FromModule P_AND_M
2.3.47.1 PSDF(TABLE)
Description
PowerSpectral Density Table.
Table Format
Record Word Type Item
0 Header record
1 I 50
2 I Codefordatatype
DISP=2001
VEL_=2010
ACCE=2011
L_AD=2002
SPCF=2003
ELF_=2004
STRE=2005
3 ! 4001
4 I 0
5 I Pointorelement IDtimesI0
6 I Component ID+2
7 I 0
8 R Meanresponse
9 I 0
I0 I 2
11-50 I 0
51-145 B Title, subtitle, label
2 1 R Frequency
2 R Powerspectral densitv
i_otes
I.Words1and2ofrecord 2arerepeated foreachfrequency.
2.Records 1and2arerepeated foreachpowerspectral density request.
Tablr,Trailer
L!ordsI-5=zero.
,_ord6=number ofrequests.
2.3-179&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.47.2 AUT_(TABLE).
Description
Autocorrelation function table.
TableFormat
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 R
9 I
I0 I
11-50 I
51-146 B5O
Codefordatatype
DISP=2001
VELO=2010
ACCE=2011
LOAD=2002
SPCF=2003
ELFO=2004
STRE=2005
4002
0
Pointorelement IDtimesI0
Component ID+2
0
Meanresponse
0
2
0
Title, subtitle, label
2 1 R
2 RTAU
Autocorrelation function
Notes
I.Words1and2ofrecord 2arerepeated foreachTAU.
2.Records 1and2arerepeated foreachautocorrelation request.
TableTrailer
Words I-5=zero.
Word_=number ofrequests.
2.3-180&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.48 Data Blocks Output From Module TRD.
2.3.48.1 UDVT (MATRIX)
Description
ut[d] -Displacement, velocity, andacceleration vector matrix inatransient analysis
problem -dset.
r_trix Trailer
Number ofcolumns =three times thenumber ofoutput time steps
Number ofrows =d
Form =rectangular
Type =real single precision
2.3.48.2
Description
Matrix TrailerPDT(MATRIX)
Linear dynamic load matrix fortransient analysis -dset.
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type :real single precision
2.3.48.3 PST(MATRIX)
Description
[P_] -Linear load vector fortransient analysis -sset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows :s
Form :rectanqular
Type =realsingle precision
2.3-181&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.48.4 PPT(MATRIX)
Description
[P_] Linear dynamic loadsfortransient analysis -pset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =p
Form =rectangular
Type =realsingle precision
*Note: Theheader record contains thelistofoutput times.
2.3.48.5 PNLD(MATRIX)
Description
[p_] Nonlinear loads intransient problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3.48.6 UHVT(MATRIX)
Description
[u_] Modaltransient solution vectors -hset.
Matrix Trailer
Number ofcolumns =threetimes thenumber ofoutput times
Number ofrows =h
Form =rectangular
Type =realsingle precision
2.3.48.7 PNLH(MATRIX)
Descrigtion
n_
[Ph] Nonlinear loads inmodal transient problem -hset.
Matrix Trailer
Number ofcolumns :number ofoutput times
Number ofrows =h
Form =rectangular
Type =realsinqle precision
2.3-182&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.49
2.3.49.1
Description
[mhh]
Matrix TrailerDataBlocks Output Fromi|odule GKAH
MHH(MATRIX)
Modalmassmatrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.2 BHH(MATRIX)
Description
[bhh]
Matrix TrailerModaldamping matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.3 KHH(MATRIX)
Description
[khh]
Matrix TrailerModalstiffness matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.4 PHIDH(MATRIX)
Description
[_dh]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeTransformation matrix fromdsettomodal coordinates.
=h
=d
=rectanqular
=realsingle precision
2.3-183&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.50DataBlocks Output FromModule DDRI
2.3.50.1 CPHID(MATRIX)
Description
[&lt;em&gt;d]Complex eigenvector matrix transformed frommodaltophysical coordinates.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofeigenvectors
=d
=rectangular
=complex single precision
2.3.50.2 UDVIF(MATRIX)
Description
[u&lt;/em&gt;] Displacement vectors matrix inafrequency response problem -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number offrequencies timesnumber ofloads
=d
=rectangular
=complex single precision
2.3.30.3 UDVIT(MATRIX)
Description
[m_] -Displacement vectors matrix inatransient response problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput timesmultiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-184 (811172)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.51 Element Stress Output DataDescription.
Note particular datablockd_scription (e.g., _ESl, _ESBI) forcontents ofword lforeachelement.
Element
Txpe
lName
CR_D
CBE_M
CTUBE
CSHEAR
CTWIST
CTRIAIRealElement Stresses
Wordor
Component Item
2 Axial
3 Axial Safety Margin *
4 Torsional
5 Torsional Safety Margin*
2 SAI
3 SA2
4 SA3
5 Axial
6 SA-maximum
7 SA-minimum
8 Safety Margin inTension*
9 SBI
lO SB2
II SB3
12 SB-maximum
13 SB-minimum
14 Safety Margin inComp*
SameasCR_D
2 Maximum Shear
3 Average Shear
4 Safety Margin*
2 Maximum
3 Average
4 Safety Margin*
2 Z1=Fibre Distance 1
3 Normal-x atZ1
4 Normal-y atZl
5 Shear-xy atZl
6 O-Shear Angle atZl
7 Major-Principal atZl
8 Minor-Principal atZl
9 Max-Shear atZl
lO Z2=Fibre Distance 2
II Normal-x atZ2
12 Normal-y atZ2
13 Shear-xy atZ2
14 O-Shear Angle atZ2
15 Major-Principal atZ2
16 Minor-Principal atZ2
17 Maximum-Shear atZ2Complex Element Stresses
Wordor Real
Component Item Imag.
2 Axial R
3 Axial I
4 Torsional R
5 Torsional I
Undefi ned
SameasCR_D
2 Maximum Shear R
3 Maximum Shear I
4 Average Shear R
5 Average Shear I
2 Maximum R
3 Maximum I
4 Average R
5 Average I
2 Z1=Fibre Distance 1
3 Normal-x at1R
4 Normal-x at1I
5 Normal-y atlR
6 Normal-y atlI
7 Shear-xy atlR
8 Shear-xy atlI
9 Z2=Fibre Distance 2
lO Normal-x at2R
II Normal-x at2I
12 Normal-y at2R
13 Normal-y at2I
14 Shear-xy at2R
15 Shear-xy at2I
2.3-185&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 CONRAD
II CELASl
12 CELAS2
13 CELAS3
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
2O CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVISC
25 CMASSI
26 CMASS2
27 CMASS3
28 CMASS4
29 C@NMI
30 C_NM2
31 CPL_TELIWordorRealElement Stresses
Component Item NoteCTRIAI
NoteCTRIAI
2 Normal-x
3 Normal-y
4 Shear-xy
5 O-Shear Angle
6 Major-Principal
7 Minor-Principal
8 Maximum Shear
NoteCR_D
2 Stress
2 Stress
2 Stress
Undefined
NoteCTRIAI
NoteCTRMEM
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedComplex Element Stresses
Word or
Component Item
NoteCTRIAI
NoteCTRIAI
2 Normal -x
3 Normal-x
4 Normal -y
5 Normal -y
6 Shear-xy
7 Shear-xy
NoteCR_D
Stress
Stress
Stress
Stress
Stress
Stress
Undefined
Note CTRIAI
Note CTRMEM
Note CTRIAI
Note CTRIAI
Note CTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedReal
Imag.
R
I
R
I
R
I
2.3-186 (8/I/72)&lt;/p&gt;
&lt;p&gt;Element
Type Name
34 CBAR
35 CC_NEAX
36 CTRIARG
37 CTRAPRGDATABLOCK DESCRIPTIONS
I Real Element StressesWordor
Component Item
2 SAI
3 SA2
4 ,SA3
5 SA4
6 Axial
7 SA-maxi mum
8 SA-minimum
9 Safety Margin inTension*
lO SBI
II SB2
12 SB3
13 SB4
14 SB-maximum
15 SB-mi nimum
16 Safety Margin inComp*
2 Harmonic orpoint angle
3 Zl=Fibre Distance l
4 Normal-u atl
5 Normal-v atl
6 Shear-uv atl
7 O-Shear Angle ati
8 Major-Principal atl
9 Minor-Principal atl
lO Maximum Shear atl
II Z2=Fibre Distance 2
12 Normal-u at2
13 Normal-v at2
14 Shear-uv at2
15 O-Shear Angle at2
16 Major-Principal at2
17 Minor-Principal at2
18 Maximum-Shear at2
2 Radial (x)
3 Circum (Theta)
4 Axial (z)
5 Shear (zx)
2 Radial (x) atl
3 Circum (Theta) atl
4 Axial (z) atl
5 Shear (zx) atl
6 Radial (x) at2
7 Circum (Theta) at2
8 Axial (z) at2
9 Shear (zx) at2
lO Radial (x) at3
II Circum (Theta) at3
12 Axial (z) at3
13 Shear (zx) at3
14 Radial (x) at4
15 Circum (Theta) at4
16 Axial (z) at4
17 Shear (zx) at4
18 Radial (x) at5Complex Element Stresses
Wordor Real
Component Item Imag.
2 SAI R
3 SA2 R
4 SA3 R
5 SA4 R
6 Axial R
7 SAI I
8 SA2 I
9 SA3 I
lO SA4 I
II Axial I
12 SBI R
13 SB2 R
14 SB3 R
15 SB4 R
16 SBI I
17 SB2 I
18 SB3 I
19 SB4 I
Undefined
Undefined
Undefined
2.3-187 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
37cont&amp;rsquo;d.
38 CT_RDRG
53-CDUMI
61 thru
CDUM9RealElement Stresses
Wordor
Component Item
19 Circum(Theta) at5
20 Axial (z) at5
21 Shear(zx) at5
2 Mem.-Tagen. at1
3 Mem.-Circum. at1
4 Flex.-Tangen. at1
5 Flex.-Circum. at1
6 Shear-Force at1
7 Mem.-Tangen. at2
8 Mem.-Circum. at2
9 Flex.-Tangen. at2
I0 Flex.-Circum. at2
II Shear-Force at2
12 Mem.-Tangen. at3
13 Mem.-Circum. at3
14 Flex.-Tangen. at3
15 Flex.-Circum. at3
16 Shear-Force at3
2 S1
3 $2
4 S3
5 $4
6 $5
7 $6
8 $7
9 $8
I0 $9Complex Element Stresses
Wordor Real
Component &amp;hellip;&amp;hellip;.. Item&amp;hellip;&amp;hellip;&amp;hellip; Imag. _
Undefined
2 S1 R
3 $2 R
4 $3 R
5 S4 R
6 S5 R
7 $6 R
8 $7 R
9 $8 R
I0 $9 R
II S1 I
12 $2 I
13 $3 I
14 $4 I
15 $5 I
16 $6 I
17 $7 I
18 $8 I
19 $9 I
*Ifnotequaltointeger I.
Note:
Ifoutput ismagnitude/phase themagnitude replaces therealpartandthephase replaces
theimaginary part.
2.3-188 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.52 Element Force Output DataDescription.
Note particular datablock description (e.g., OEFI, OEFBI) forcontents word lforeachelement.
Element
Type Name
l CROD
2 CBEAM
3 CTUBE
4 CSHEAR
5 CTWIST
6 CTRIAI
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 C_NR_D
II CELASI
12 CELAS2
13 CELAS3Real Element Forces
Wordor
Component Item
2 Axial Force
3 Torque
2 Bend-Mom
3 Bend-Morn
4 Bend-Morn
5 Bend-Morn
6 Shear-I
7 Shear-2
8 Axial Force
9 Torque
SameasCR(&lt;em&gt;D
2 Force Pts1,3
3 Force Pts2,4Al
A2
Bl
B2
2 Moment Pts1,3
3 Moment Pts2,4
2 Bend-Mom-x
3 Bend-Mom-y
4 Twist-Moment
5 Shear-x
6 Shear-y
Same asCTRIAI
SameasCTRIAI
Undefined
SameasCR_D
Force
2 Force
2 ForceComplex Element Forces
Wordor Real
Component Item Imaq.
2 Axial Force R
3 Axial Force I
4 Torque R
5 Torque I
Undefined
SameasCROD
2 Force Pts1,3 R
3 Force Pts1,3 I
4 Force Pts&lt;/em&gt;_ R
5 Force Pts2,4 I
2 Moment Pts1,3 R
3 Moment Pts1,3 I
4 Moment Pts2,4 R
5 Moment Pts2,4 I
2 Bend-Mom-x R
3 Bend-Mom-y R
4 Twist-Moment R
5 Shear-x R
6 Shear-y R
7 Bend-Mom-x I
8 Bend-Mom-y I
9 Twist-Moment I
lO Shear-x I
II Shear-y I
SameasCTRIAI
SameasCTRIAI
Undefined
SameasCROD
2 Force R
3 Force I
2 Force R
3 Force I
2 Force R
3 Force I
2.3-189&lt;/p&gt;
&lt;p&gt;Element
Type Name
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
20 CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVlSC
25 CMASSI
26 CFtASS2
27 CFtASS3
28 CFtASS4
29 C_NMI
30 C_NM2
31 CPL_TEL
34 CBARDATABLOCK ANDTABLE DESCRIPTIONS
RealElement Forces
Wordor
Co_iponent Item
2 Force
NoteCTRIAI
Undefined
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom Al
Bend-Mom A2
Bend-Mom Bl
Bend-Mom B2
Shear-l
Shear-2
Axial Force
TorqueComplex Element Forces
IternWordor
Component
Force
Force
Note CTRIAI
Undefined
Note CTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque2
3
2
3
4
5
6
7
8
9
lO
II
12
13
14
15
16
17Al
A2
Bl
B2
Al
A2
Bl
B2Real
Imag.
2.3-190 (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P15</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_015/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.45.12 _ESC2 (TABLE).
Description
Output element stress requests (S_RT2, complex).
Table Format
Record Word Type
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BItem
Header record
Device code+lO&lt;em&gt;approach code
3005
Element type
Subcase number
lO&lt;/em&gt;Element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 i R Frequency
2-NWDS Mixed Element stress data
See2.3.51 fordetailsrepeat
for ach
frequency
Notes
I.Records 1and2arerepeated foreach vector tobeoutout.
li=xyoutput onlyprint
2.Device code =punch
print andpunch
!=real3.Format code= real/imaginary
magnitude/phase
4. =5 Approach code
TableTrailer
Words I-6contain nosignificant values.
2.3-171&lt;/p&gt;
&lt;p&gt;DATA3LOCKANDTABLEDESCRIPTIONS
2.3.45.13 @EFC2(TA3LE).
Description
Output element forcerequests (S_RT2, complex).
Table Format
Record Word _ Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDnroach code
3004
Element type
Subcase number
IO&lt;/em&gt;element ID+device code
0
0
LoadsetID
Format code
Number ofwords perentry innextrecord =NWDS
Notdefined
Title
Subtitle
Label
2 1 R Frequency
2-NNDS Mixed Element forcedata
See2.3.52 fordetailsrepeat
foreach
frequency
Notes
Records 1and2arerepeated foreachvector tobeoutput.
2.Device code=O=xyoutput only1print
4=punch
5printandpunch
3.Format codeI!=real= =real/imaginary
=magnitude/phase
4.Approach code=5
TableTrailer
WordsI-6contain nosignificant values.
2.3-172&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.45.14 &lt;em&gt;UDVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, cowlex).
Table Format
Record Wor___dd Type Item
0 Header record
l l
3
4
5
6
7
8
9
lO
ll-50
51-82
83-I14
I15-146
l
2
3-8
9-14B
B
B
R
I
R
RDevice code+lO&lt;em&gt;approach code
3015=Displacement
3016 Velocity
3017 Acceleration
0
Subcase Number
IO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwords perentry innextrecord =14
Notdefined
Title
Subtitle
Label
Frequency )repeat
Point type (for
R(TI), R(T2),R(T3) R(RI), R(R2)&lt;/em&gt;,R(R3)_each
I(TI), I(T2), I(T3): I(RI),I(R2), l(R3))frequency
ilotes
I.Records land2arerepeated foreachvector tobeoutput.
2.Device code =
3.Format code =li:xyoutput onlyprint
punch
print andpunch
I!=real=real/imaoinary
=magnitude/phase
4.Approach code =5
Ii=gridpoint5.Point type =scalar pointextra point
modal point
6.Components (words 3-14ofevennumbered records) which arenotinthesolution setare
replaced byinteger I.
Table Trailer
Words I-6contain nosignificant values.
2.3-173&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.15 OUHVC2 (TABLE).
Description
Output displacement vector requests (solution set,S_RT2, complex).
Table Format
Record Word Type Item
0 Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0 I
11-50
51-82 B
83-114 B
115-146 BDevice code+lO&lt;em&gt;aDDroach code
3015=Disnlacement
3016 Velocity
3017 Acceleration
0
Subcase number
lO&lt;/em&gt;point ID+device code
0
0
Dynamic loadsetID
Format code
Number ofwordsperentryinnextrecord =14
Notdefined
Title
Subtitle
Label
1 R
2 I
3-8 R
9-14 RFrequency
Pointtype
R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)
I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat
for
each
frequency
Notes
I.Records 1and2arerepeated foreachvector tobeoutput.
2.
3.0=xyoutput only1print
Device code=4punch
5printandhunch
I!=realFormat code= real/imaginary
magnitude/phase
4.Approach code=5
5.PointtypeI=gridpoint=2scalar point
3=extrapoint4modal point
Components (words 3-14ofevennumbered records) whicharenotinthesolution setare
replaced byaninteger I.
TableTrailer
Words I-6contain nosignificant values.
2.3-174&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.46DataBlocks Output FromModule XYTRAN.
2.3.46.1 XYPLTT (TABLE).
Description
Output plotrequest datainformfordirect plotting ofS_RT2Transient Response output.
TableFormat
Record Word Type Item
0 Header record
1 1 I-R
2 I
3 I
4 I
5 I
6 I
7 I
8 I
9 I
I0
II R
12 R
13 R
14 R
15 R
16 R
17 I
18 I
19 I
20 I
21 I
22 I
23 R
24 R
25 I
26 I
27 I
28 I
29 I
30 ISubcase IDorifaRandom Response problem,
theMeanResponse
Framenumber
Curvenumber
Point IDorelement ID
Component number
Vector number (I,2&amp;hellip;.II)
l&amp;ndash;Graph usestophalfofframe
O&amp;ndash;Graph usesfullframe
-l&amp;ndash;Graph useslowerhalfofframe
O&amp;ndash;Axis, tics,labels, values, etc.havebeen
drawnandthiscurve istobescaled and
plotted identically aslastexcept forcurve
symbols.
l&amp;ndash;Axis, tics,labels, scaling, etc.aretobe
performed orcomputed andifword7ofthis
record =0orI,askidtonewframeistobe
made.
Number ofblankframes between frames (frame-
skip)
Notused
XMIN!X[_AN Define exactcorners o_this
YMIN upper, lower, orfullframegraph
YMAX
Actual valueoffirsttic
Actual increment _osucc_ss=w
tics
Integer valuetobeprinted on
firsttic
Maximum number ofdigits in
anyprint-value x-direction
+or-powerforprintvalues tics
Totalnumber ofticstonrint
thisedge
Value printskid0,1,2,3&amp;mdash;
Delta integer printvalueto
successive tics&amp;quot;
Sameas15through 22
Butfory-direction tics
2.3-175&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Record Word
31
32
3334
35
36
37
38
39
4041
42
5O
51
243
2B_
283
284
285
286
287
288
289
29O
291
292
293
294
295
296
297
298
299
300B
B
B
B
B
B
I
I
R
R
I
I
I
I
R
R
R
R
R
R
R
R
R
RItem
Topedgetics leachof31-34maybeless
Bottom edgetics[than O&amp;ndash;tics without values
Leftedgetics(equal toO&amp;ndash;noticshere
Rightedgetics)greater O&amp;ndash;tics withvalues
O&amp;ndash;x-direction islinear
Greater thanO&amp;ndash;number o_cycles andx-direction
islogarithmic
O&amp;ndash;y-direction islinear
Greater thanO&amp;ndash;number ofcycles andy-direction
islogarithmic
O&amp;ndash;nox-axis
l&amp;ndash;draw x-axis
x-axis y-intercept
O&amp;ndash;noy-axis
l&amp;ndash;draw y-axis
y-axis x-intercept
Lessthan0&amp;ndash;plotsymbol foreachcurvepoint.
Select symbol corresponding to
curvenumber inword3ofthis
record.
Equalto0&amp;ndash;connect points bylineswhere
points arecontinuous i.e.,(no
integer 1pairs).
Greater than0&amp;ndash;dobothofabove.
Notused
Title (32words)
Subtitle (32words)
Label (32words)
CurveTitle (32words)
x-axis Title (32words)
y-axis Title (32words)
Notused
Pensize
Plotter 1:SC4020, 2:EAI3500
Inches paperx-direction
Inches papery-direction
Camera forSC4020 lessthan0=35mm,0:F80,
Greater 0=Both
Printflag0:no,1=yes
Plotflag0:no,1=plotter,
-I:paper, 2=plotter andpaper
Punchflag0:no,1=yes
x-minofalldata
x-maxofalldata
y-minwithin x-limits ofgraph
x-value atthisy-min
y-maxwithin x-limits ofgraph
x-value atthisy-max
y-minforalldata
x-value atthisy-min
y-maxforalldata
x-value atthisy-max
2.3-176 (6/I/71)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
Record Word Type Item
1 I
2 I
3 R
4 Rl
Always ispresent l
x-value _coordinate pair
y-value #reoeats forallpairs plotted
Notes
I.Records land2repeat foreachcurve plotted.
2.Evennumbered records willcontain integer 1pairs toindicate where curve hasmoved
outside ofgraph limits.
Table Trailer
WordsI-6contain nosignificant values.
2.3-177&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.45.2 XYPLTFA (TA3LE).
Description
Identical toXYPLTT, forFrequency Response plots (solution set).
2.3.4G.3 XYPLTF (TABLE).
Description
Identical toXYPLTT, forFrequency Response plots.
2.3.46.4 XYPLTR (TABLE).
Description
Identical toXYPLTT, forRandom Response Dlots.
2.3.4G.5 XYPLTTA (TABLE).
Description
Identical toXYPLTT, forTransient Response plots (solution set).
2.3-178&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.47 DataBlocks Output FromModule P_AND_M
2.3.47.1 PSDF(TABLE)
Description
PowerSpectral Density Table.
Table Format
Record Word Type Item
0 Header record
1 I 50
2 I Codefordatatype
DISP=2001
VEL_=2010
ACCE=2011
L_AD=2002
SPCF=2003
ELF_=2004
STRE=2005
3 ! 4001
4 I 0
5 I Pointorelement IDtimesI0
6 I Component ID+2
7 I 0
8 R Meanresponse
9 I 0
I0 I 2
11-50 I 0
51-145 B Title, subtitle, label
2 1 R Frequency
2 R Powerspectral densitv
i_otes
I.Words1and2ofrecord 2arerepeated foreachfrequency.
2.Records 1and2arerepeated foreachpowerspectral density request.
Tablr,Trailer
L!ordsI-5=zero.
,_ord6=number ofrequests.
2.3-179&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.47.2 AUT_(TABLE).
Description
Autocorrelation function table.
TableFormat
Record Word Type Item
Header record
1 I
2 I
3 I
4 I
5 I
6 I
7 I
8 R
9 I
I0 I
11-50 I
51-146 B5O
Codefordatatype
DISP=2001
VELO=2010
ACCE=2011
LOAD=2002
SPCF=2003
ELFO=2004
STRE=2005
4002
0
Pointorelement IDtimesI0
Component ID+2
0
Meanresponse
0
2
0
Title, subtitle, label
2 1 R
2 RTAU
Autocorrelation function
Notes
I.Words1and2ofrecord 2arerepeated foreachTAU.
2.Records 1and2arerepeated foreachautocorrelation request.
TableTrailer
Words I-5=zero.
Word_=number ofrequests.
2.3-180&lt;/p&gt;
&lt;p&gt;DATA BLOCK DESCRIPTIONS
2.3.48 Data Blocks Output From Module TRD.
2.3.48.1 UDVT (MATRIX)
Description
ut[d] -Displacement, velocity, andacceleration vector matrix inatransient analysis
problem -dset.
r_trix Trailer
Number ofcolumns =three times thenumber ofoutput time steps
Number ofrows =d
Form =rectangular
Type =real single precision
2.3.48.2
Description
Matrix TrailerPDT(MATRIX)
Linear dynamic load matrix fortransient analysis -dset.
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type :real single precision
2.3.48.3 PST(MATRIX)
Description
[P_] -Linear load vector fortransient analysis -sset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows :s
Form :rectanqular
Type =realsingle precision
2.3-181&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.48.4 PPT(MATRIX)
Description
[P_] Linear dynamic loadsfortransient analysis -pset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =p
Form =rectangular
Type =realsingle precision
*Note: Theheader record contains thelistofoutput times.
2.3.48.5 PNLD(MATRIX)
Description
[p_] Nonlinear loads intransient problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput times
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3.48.6 UHVT(MATRIX)
Description
[u_] Modaltransient solution vectors -hset.
Matrix Trailer
Number ofcolumns =threetimes thenumber ofoutput times
Number ofrows =h
Form =rectangular
Type =realsingle precision
2.3.48.7 PNLH(MATRIX)
Descrigtion
n_
[Ph] Nonlinear loads inmodal transient problem -hset.
Matrix Trailer
Number ofcolumns :number ofoutput times
Number ofrows =h
Form =rectangular
Type =realsinqle precision
2.3-182&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
2.3.49
2.3.49.1
Description
[mhh]
Matrix TrailerDataBlocks Output Fromi|odule GKAH
MHH(MATRIX)
Modalmassmatrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.2 BHH(MATRIX)
Description
[bhh]
Matrix TrailerModaldamping matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.3 KHH(MATRIX)
Description
[khh]
Matrix TrailerModalstiffness matrix -hset.
Number ofcolumns =h
Number ofrows =h
Form =symmetric
Type =realdouble precision
2.3.49.4 PHIDH(MATRIX)
Description
[_dh]
Matrix Trailer
Number ofcolumns
Number ofrows
Form
TypeTransformation matrix fromdsettomodal coordinates.
=h
=d
=rectanqular
=realsingle precision
2.3-183&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.50DataBlocks Output FromModule DDRI
2.3.50.1 CPHID(MATRIX)
Description
[&lt;em&gt;d]Complex eigenvector matrix transformed frommodaltophysical coordinates.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number ofeigenvectors
=d
=rectangular
=complex single precision
2.3.50.2 UDVIF(MATRIX)
Description
[u&lt;/em&gt;] Displacement vectors matrix inafrequency response problem -dset.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Type=number offrequencies timesnumber ofloads
=d
=rectangular
=complex single precision
2.3.30.3 UDVIT(MATRIX)
Description
[m_] -Displacement vectors matrix inatransient response problem -dset.
Matrix Trailer
Number ofcolumns =number ofoutput timesmultiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-184 (811172)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.51 Element Stress Output DataDescription.
Note particular datablockd_scription (e.g., _ESl, _ESBI) forcontents ofword lforeachelement.
Element
Txpe
lName
CR_D
CBE_M
CTUBE
CSHEAR
CTWIST
CTRIAIRealElement Stresses
Wordor
Component Item
2 Axial
3 Axial Safety Margin *
4 Torsional
5 Torsional Safety Margin*
2 SAI
3 SA2
4 SA3
5 Axial
6 SA-maximum
7 SA-minimum
8 Safety Margin inTension*
9 SBI
lO SB2
II SB3
12 SB-maximum
13 SB-minimum
14 Safety Margin inComp*
SameasCR_D
2 Maximum Shear
3 Average Shear
4 Safety Margin*
2 Maximum
3 Average
4 Safety Margin*
2 Z1=Fibre Distance 1
3 Normal-x atZ1
4 Normal-y atZl
5 Shear-xy atZl
6 O-Shear Angle atZl
7 Major-Principal atZl
8 Minor-Principal atZl
9 Max-Shear atZl
lO Z2=Fibre Distance 2
II Normal-x atZ2
12 Normal-y atZ2
13 Shear-xy atZ2
14 O-Shear Angle atZ2
15 Major-Principal atZ2
16 Minor-Principal atZ2
17 Maximum-Shear atZ2Complex Element Stresses
Wordor Real
Component Item Imag.
2 Axial R
3 Axial I
4 Torsional R
5 Torsional I
Undefi ned
SameasCR_D
2 Maximum Shear R
3 Maximum Shear I
4 Average Shear R
5 Average Shear I
2 Maximum R
3 Maximum I
4 Average R
5 Average I
2 Z1=Fibre Distance 1
3 Normal-x at1R
4 Normal-x at1I
5 Normal-y atlR
6 Normal-y atlI
7 Shear-xy atlR
8 Shear-xy atlI
9 Z2=Fibre Distance 2
lO Normal-x at2R
II Normal-x at2I
12 Normal-y at2R
13 Normal-y at2I
14 Shear-xy at2R
15 Shear-xy at2I
2.3-185&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 CONRAD
II CELASl
12 CELAS2
13 CELAS3
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
2O CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVISC
25 CMASSI
26 CMASS2
27 CMASS3
28 CMASS4
29 C@NMI
30 C_NM2
31 CPL_TELIWordorRealElement Stresses
Component Item NoteCTRIAI
NoteCTRIAI
2 Normal-x
3 Normal-y
4 Shear-xy
5 O-Shear Angle
6 Major-Principal
7 Minor-Principal
8 Maximum Shear
NoteCR_D
2 Stress
2 Stress
2 Stress
Undefined
NoteCTRIAI
NoteCTRMEM
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedComplex Element Stresses
Word or
Component Item
NoteCTRIAI
NoteCTRIAI
2 Normal -x
3 Normal-x
4 Normal -y
5 Normal -y
6 Shear-xy
7 Shear-xy
NoteCR_D
Stress
Stress
Stress
Stress
Stress
Stress
Undefined
Note CTRIAI
Note CTRMEM
Note CTRIAI
Note CTRIAI
Note CTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
UndefinedReal
Imag.
R
I
R
I
R
I
2.3-186 (8/I/72)&lt;/p&gt;
&lt;p&gt;Element
Type Name
34 CBAR
35 CC_NEAX
36 CTRIARG
37 CTRAPRGDATABLOCK DESCRIPTIONS
I Real Element StressesWordor
Component Item
2 SAI
3 SA2
4 ,SA3
5 SA4
6 Axial
7 SA-maxi mum
8 SA-minimum
9 Safety Margin inTension*
lO SBI
II SB2
12 SB3
13 SB4
14 SB-maximum
15 SB-mi nimum
16 Safety Margin inComp*
2 Harmonic orpoint angle
3 Zl=Fibre Distance l
4 Normal-u atl
5 Normal-v atl
6 Shear-uv atl
7 O-Shear Angle ati
8 Major-Principal atl
9 Minor-Principal atl
lO Maximum Shear atl
II Z2=Fibre Distance 2
12 Normal-u at2
13 Normal-v at2
14 Shear-uv at2
15 O-Shear Angle at2
16 Major-Principal at2
17 Minor-Principal at2
18 Maximum-Shear at2
2 Radial (x)
3 Circum (Theta)
4 Axial (z)
5 Shear (zx)
2 Radial (x) atl
3 Circum (Theta) atl
4 Axial (z) atl
5 Shear (zx) atl
6 Radial (x) at2
7 Circum (Theta) at2
8 Axial (z) at2
9 Shear (zx) at2
lO Radial (x) at3
II Circum (Theta) at3
12 Axial (z) at3
13 Shear (zx) at3
14 Radial (x) at4
15 Circum (Theta) at4
16 Axial (z) at4
17 Shear (zx) at4
18 Radial (x) at5Complex Element Stresses
Wordor Real
Component Item Imag.
2 SAI R
3 SA2 R
4 SA3 R
5 SA4 R
6 Axial R
7 SAI I
8 SA2 I
9 SA3 I
lO SA4 I
II Axial I
12 SBI R
13 SB2 R
14 SB3 R
15 SB4 R
16 SBI I
17 SB2 I
18 SB3 I
19 SB4 I
Undefined
Undefined
Undefined
2.3-187 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
37cont&amp;rsquo;d.
38 CT_RDRG
53-CDUMI
61 thru
CDUM9RealElement Stresses
Wordor
Component Item
19 Circum(Theta) at5
20 Axial (z) at5
21 Shear(zx) at5
2 Mem.-Tagen. at1
3 Mem.-Circum. at1
4 Flex.-Tangen. at1
5 Flex.-Circum. at1
6 Shear-Force at1
7 Mem.-Tangen. at2
8 Mem.-Circum. at2
9 Flex.-Tangen. at2
I0 Flex.-Circum. at2
II Shear-Force at2
12 Mem.-Tangen. at3
13 Mem.-Circum. at3
14 Flex.-Tangen. at3
15 Flex.-Circum. at3
16 Shear-Force at3
2 S1
3 $2
4 S3
5 $4
6 $5
7 $6
8 $7
9 $8
I0 $9Complex Element Stresses
Wordor Real
Component &amp;hellip;&amp;hellip;.. Item&amp;hellip;&amp;hellip;&amp;hellip; Imag. _
Undefined
2 S1 R
3 $2 R
4 $3 R
5 S4 R
6 S5 R
7 $6 R
8 $7 R
9 $8 R
I0 $9 R
II S1 I
12 $2 I
13 $3 I
14 $4 I
15 $5 I
16 $6 I
17 $7 I
18 $8 I
19 $9 I
*Ifnotequaltointeger I.
Note:
Ifoutput ismagnitude/phase themagnitude replaces therealpartandthephase replaces
theimaginary part.
2.3-188 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK DESCRIPTIONS
2.3.52 Element Force Output DataDescription.
Note particular datablock description (e.g., OEFI, OEFBI) forcontents word lforeachelement.
Element
Type Name
l CROD
2 CBEAM
3 CTUBE
4 CSHEAR
5 CTWIST
6 CTRIAI
7 CTRBSC
8 CTRPLT
9 CTRMEM
I0 C_NR_D
II CELASI
12 CELAS2
13 CELAS3Real Element Forces
Wordor
Component Item
2 Axial Force
3 Torque
2 Bend-Mom
3 Bend-Morn
4 Bend-Morn
5 Bend-Morn
6 Shear-I
7 Shear-2
8 Axial Force
9 Torque
SameasCR(&lt;em&gt;D
2 Force Pts1,3
3 Force Pts2,4Al
A2
Bl
B2
2 Moment Pts1,3
3 Moment Pts2,4
2 Bend-Mom-x
3 Bend-Mom-y
4 Twist-Moment
5 Shear-x
6 Shear-y
Same asCTRIAI
SameasCTRIAI
Undefined
SameasCR_D
Force
2 Force
2 ForceComplex Element Forces
Wordor Real
Component Item Imaq.
2 Axial Force R
3 Axial Force I
4 Torque R
5 Torque I
Undefined
SameasCROD
2 Force Pts1,3 R
3 Force Pts1,3 I
4 Force Pts&lt;/em&gt;_ R
5 Force Pts2,4 I
2 Moment Pts1,3 R
3 Moment Pts1,3 I
4 Moment Pts2,4 R
5 Moment Pts2,4 I
2 Bend-Mom-x R
3 Bend-Mom-y R
4 Twist-Moment R
5 Shear-x R
6 Shear-y R
7 Bend-Mom-x I
8 Bend-Mom-y I
9 Twist-Moment I
lO Shear-x I
II Shear-y I
SameasCTRIAI
SameasCTRIAI
Undefined
SameasCROD
2 Force R
3 Force I
2 Force R
3 Force I
2 Force R
3 Force I
2.3-189&lt;/p&gt;
&lt;p&gt;Element
Type Name
14 CELAS4
15 CQDPLT
16 CQDMEM
17 CTRIA2
18 CQUAD2
19 CQUADI
20 CDAMPI
21 CDAMP2
22 CDAMP3
23 CDAMP4
24 CVlSC
25 CMASSI
26 CFtASS2
27 CFtASS3
28 CFtASS4
29 C_NMI
30 C_NM2
31 CPL_TEL
34 CBARDATABLOCK ANDTABLE DESCRIPTIONS
RealElement Forces
Wordor
Co_iponent Item
2 Force
NoteCTRIAI
Undefined
NoteCTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom Al
Bend-Mom A2
Bend-Mom Bl
Bend-Mom B2
Shear-l
Shear-2
Axial Force
TorqueComplex Element Forces
IternWordor
Component
Force
Force
Note CTRIAI
Undefined
Note CTRIAI
NoteCTRIAI
NoteCTRIAI
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Undefined
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque
Bend-Mom
Bend-Mom
Bend-Mom
Bend-Mom
Shear-l
Shear-2
Axial Force
Torque2
3
2
3
4
5
6
7
8
9
lO
II
12
13
14
15
16
17Al
A2
Bl
B2
Al
A2
Bl
B2Real
Imag.
2.3-190 (8/I/72)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P16</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_016/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
Element
Type Name
35 CC@NEAX
36 CTRIARG
37 CTPJ_PRG
38 CT_RDRG
53-61 CDUMI
thru
CDUM9Wordor
Component
2
3
4
5
6
7
8
9
I0
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
5
6
7
8
9
lORealElement Forces
Item
Harmonic orpoint angle
Bend-Morn u
Bend-Morn v
Twist-Moment
Shear u
Shear v
Radial (x)
Circum (Theta)
Axial (z)
Radial Ix)Circum Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Moment (zx)
Direct Strain
Curvature
x)Radial ITheta) Circum
Axial (z)
Moment (zx)
Direct Strain
Curvature
F/
F2
F3
F4
F5
F6
F7
F8
F9atl
at1
atl
at2
at2
at2
at3
at3
at3
atl
at1
atl
at2
at2
at2
at3
at3
at3
at4
at4
at4
at1
atl
atl
atl
atl
atl
at2
at2
at2
at2
at2
at2
2
3
4
5
6
7
8
9
lO
II
12
13
14Complex Element Forces
Word or
Component Item
Undefined
Undefined
Undefined
Undefined
F1
F2
F3
F4
F5
F6
F7
F8
F9
F1
F2
F3
F4Real
Imag.
2.3-191 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
53-61cont&amp;rsquo;d.RealElement Forces
Wordor
Component ItemWordor
Component
15
16
17
18
19Complex Element Forces
Item
F5
F6
F7
F8
F9Real
Imag.
2.3-191a (811/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.53 Data Blocks Output FromModule DDR2
2.3.53.1 UEVF(MATRIX)
Description
[uf] -Displacements attheextra points forafrequency response problem.e
Matrix Trailer
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =e
Form =rectangular
Type =single precision
2.3.53.2 PAF(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration computations inafrequency response
problem -aset.
Matrix Trailer
Number ofcolumns :number offrequencies timesnumber ofloads
Number ofrows :d
Form :rectangular
Type =single precision
2.3.53.3
Description
[u_a]
Matrix TrailerUDV2F(MATRIX)
Mode accelerated displacement vectors forafrequency response problem.
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =d
Form =rectangular
Type =complex single precision
2.3.53.4 UEVT(MATRIX)
Description
[u_] -Displacement attheextra points foratransient analysis problem.
2.3-192&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =e
Form =rectangular
Type =realsingle precision
2.3.53.5 PAT(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration inatransient analysis problem.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Typenumber ofoutput times multiplied by3
d
rectangular
realsing!p precision
2.3.53.6 UDV2T (MATRIX)
Description
[u_a]-Mode accelerated displacement vectors foratransient analysis problem.
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-193&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.54 DataBlocksOutput fromModule BMG
2.3.54.1 BDP_L (TABLE)
Description
Hydroelastic boundary matrix tables.
fableFormat
SameformatastheMATPBOL datablockDMIGcardimages.
Notes: Thenamesofthematrices areKBFLandABFL
Table Trailer
IFPformat, 6words containing 96pointer bitsforusebysubroutines PRELOC andLOCATE.
2.3.55 DataBlocksOutput fromModule PLTTRAN
2.3.55.1 SIP(TABLE)
Description
SameformatasdatablockSIL.
thenextSILvaluetohaveavalue:
TheSIPdatawillbe:Iffluidpoints arepresent eachfluidpoint, i,willcause
SIL(i+I) =SIL(i) +1
SIP(i+l) =SIP(i) +6
whereiisafluidpoint.
2.3.55.2 BGPDP(TABLE)
Description
Sameformat asdatablockBGPDTexcept fluidpoints havethevalue-2inthefields
corresponding tocoordinate system identification numbers.
2.3-194 (811172)&lt;/p&gt;
&lt;p&gt;2.4EXECUTIVETABLEDESCRIPTIONS
EXECUTIVETABLEDESCRIPTIONS
Thefollowingisanalphabetical indexofExecutivetabledescriptions.
Section Number Executive Table Name Where Stored
2.4.1.5 CEITBL /XCEITB/
2.4.1.4 DPL /XDPL/
2.4.1.2 FIAT /XFIAT/
2.4.1.3 FIST /XFIST/and/XPFIST/
2.4.2.8 IFPXO /IFPXO/
2.4.2.9 IFPXI /IFPXl/
2.4.2.7 LNKSPC /XLKSPC/
2.4.2.2 MPL /XGPI2/
2.4.2.1 _SCAR DataPoolFile
2.4.2.4 PVT /XPVT/
2.4.i.B &amp;hellip;..&amp;quot; /_WT_M/
2.4.1.7 TAPID /STAPID/
2.4.1.6 VPS /XVPS/
2.4.2.6 XALTER Problem Tape
2.4.2.5 XCSA Problem Tape
2.4.1.I XFIAT /XXFIAT/
2.4.1.9 XLINK /XLINK/
2.4.2.3 XPTDIC Problem TapePageNumber
2.4-9
2.4-7
2.4-3
2.4-5
2.4-31
2.4-32
:.4-29
2.4-21
2.4-15
2.4-26
2o4-13
2.4-12
2.4-10
2.4-28
2.4-27
2.4-2
2.4-14
2,4-24
2.4-I (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1 Executive Tables WhicharePermanently CoreResident
2.4.1.1 XFIAT(Permanent FileAllocation Table)
Description
ANASTRAN resident memory tablecontaining thephysical fileidentification forthe
permanent files(P_L, OPTP,etc.).
Created inModule
Thephysical fileidentifications areoutput byGNFIAT (generate FIAT).
TableFormat
Word 1
s
2
s
3
NNOT ITI
USEDi;I_o11_ FILE
NOTI!1FILE
NJT ITI
USED 171_6115 FILE
NOT ITI
USED _71_61IsFILE
Word Item Description
I-N TP
NotesFILETapeFlag(Ibit)-setifphysical file(FILE) isa
magnetic tape.
File ID(15bits) -unique integer identification for
aphysical file.
1â€¢ Thenumber ofentries (N)isdictated bytheinteger value inPFIST (seeFIST
Executive TableDescription -2.4.1.3)
2.TheXFIATtableislocated inthenamedcommon block/XXFIAT/.
2.4-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE TAJ3LE DESCRIPTIONS
2.4.1.2 FIAT (File Allocation Table).
Description
ANASTRAN resident memory table containing thedatablock namevs.physical fileID.for
asegment ofDMAPmodules.
Created inModule
Thephysical files available forthesystem/computer confiquration areoutout by_NFIAT
(generate FIAT). Thedatablock names andother datablock information areoutnut byXSFA,
Executive Segment FileAllocator.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
NUFA
MXE
CAE
I.A_&amp;rsquo; ITII
jP_LTUIPI
___3_1_o &lt;em&gt;&amp;rsquo;,&lt;/em&gt;&amp;rsquo;,_&lt;em&gt;&lt;em&gt;FILE
J
DATABLOCK
NAME
DATABLOCK
TRAILER
I! I
&amp;rsquo; :L&lt;/em&gt; m&lt;/em&gt; m _&amp;hellip;&amp;hellip;.FIATHeader
Entry #I(sample)
Entry #2through C/E
2.4-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Wor_d_d Item Description
1 UFA Unique filesavailable -thisinteger indicates thenumber of
unique fileentries intheFIAT.
2 MXE Maximum entries -this integer shows thetotal entry size of
thedimensioned FIAT table; theamount ofmemory reserved
(N)=6xMXE+3.
3 CAE Current active entries -thisinteger designates theportion of
FIATcurrently containing validdata;UFA_CAE_HXE.
Words4through 9describe asample 6-word entry:
4 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
AP Append flag (Ibit) -setifappend issDecified fordata
block inDMAP sequence byaFILE DMAP instruction.
LTU Lasttimeused(14bitinteger) -record number of@SCAR
entry forlastuseofdatablock.
TP Tapeflag(Ibit)-setifphysical file(FILE) isamagnetic
tape.
FILE File ID(15bits) -unique identification foraphysical file.
5,6 NAME Data block name -8characters (4characters/word).
7,8,9 TRAILER Datablocktrailer -storage for6-16bitdatablocktrailer
words.
WordsI0through Ncontain repeated 6-word entries.
Trailer Information
Trailer information foreachdatablock isstored inandreceived fromtheFIATbyWRTTRL
(write trailer) andRDTRL(readtrailer).
Note
TheFIATtableislocated inthenamedcommon block/XFIAT/.
2.4-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.3 FIST (File Status Table)
Description
ANASTRAN resident memory table containing theinternal data block reference (IDBR)
numbers vs.FIATtable pointers foraparticular module; also, thepermanent filereference
names vs.XFIAT table pointers.
Created inModule
Themodule entries aregenerated prior toeachmodule execution bysubroutines GNFIST
(Generate FIST). Thepermanent entries areinitialized atsystem assembly.
Table Format
PFIST I I I
MXE
CAEWord l
2I+2+I
+2
+3
+4
NPermNameI
I
i XFPointl
I
PermName2
IIl XFPointI
IDBRl
0i FPoint
I
sl
IDBR2
I
I
ol
sl FPointIFISTHeader
Sample Permanent Entry
Sample Module Entry
2.4-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word Item Description.
PFIST I Integer number ofpermanent FISTentries.
1 MXE Maximum entries -thisinteger showsthetotalentry sizeofthe
dimensioned FISTtable; theamount ofmemory reserved
(N)=2*MXE+2.
2 CAE Current active entries -thisinteger designates theportion of
FISTcurrently containing validdata;IcCAE_MXE.
Words3and4describe asample 2-word permanent entry:
3 PermName Apermanent filereference name-4characters BCD(e.g., P_L,
OPTP,PLTI,etc.).
4 XFPoint Points totheXFIATposition containing thefileIDforthis
permanent file.
Words21+2+I and+2describe asample 2-word module entry.
+I IDBR Aninternal datablockreference number (GINOfilenumber) -
integer (e.g., 104,206,301,etc.).
+2 FPoint Points totheFIATposition containing thefileIDforthis
module entry.
Notes
I.
2,
3.
Â°XFIATpointer values contain anSbitequaltoI,while FIATpointer values contain an
SbitequaltoO.
Permanent entries remain static throughout arun, while module entries arechanged by
GNFIST prior toeach module call.
FIATandXFIATposition pointers areindexes intotherespective tables considering
thefirstwordofthetableasposition O.
TheFISTtableislocated inthenamedcommon block /XFIST/.
ThePFISTentry islocated inthenamedcommon block/XPFIST/.
2.4-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.l.4 DPL(Data PoolDictionary)
Description
ANASTRAN resident memory table describing thecurrent contents andstatus oftheDataPool.
Created inModule
DataPool, andtherefore Dictionary entries, arecreated bypooling fromSFA(Segment File
Allocator), housekeeping operations byDPH(Data PoolHousekeeper) andrestart initialization by
GPI(General Problem Initialization), andIFP(Input FileProcessor) whenwriting D_IandDTI
information (seesection 2.3.2).
TableFormat
Word1NFA
MXE
CAE
DATABLOCK
NAME
B
ET rI
Q: SIZE Im I
S!31 17116FILE#
! II
j I
IIDPLHeader
Entry #I(samole)
Entry #2
2.4-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
NoteWord Item
1 NFADescription
Nextfileavallable- thenextDataPoolFilenumber (integer)
available foroutput.
2 MXEMaximum entries -thisinteger showsthetotalentrysizeof
thedimensioned DPLtable; theamount ofmemory reserved
(N):3*MXE+3.
3 CAE Current active entries -thisinteger designates theportion of
theDPLcurrently containing validdata;0&amp;lt;CAE_MXE.
Words4through 6describe asample 3-word entry.
4,5 N_tE Datablock name-8characters (4characters/word).
6 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
SIZESizeofthepooled datablock-number ofwords/lO.
FILE# Thefilenumber (integer) showing therelative position ofthe
datablockfileofthepool.
TheDPLtable islocated inthelabeled common block /XDPL/.
2.4-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.5 CEITBL (Control Entry Information Table)
Description
CEITBL controls theREPTandEXITDI_APmodule execution.
Created InModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
Mt_MN
BL EL !31&amp;hellip;&amp;hellip; &lt;em&gt;1_16 &amp;hellip;.. I
ML CL
3!&amp;hellip;&amp;hellip; 1_716 1.(&amp;quot;
&amp;mdash; LN &amp;mdash;
,otus 1&lt;/em&gt;
1,:_
L Notused
NotusedSample entry forREPTcontrol
(4words)
Sample entry forEXITcontrol
(4words)
Word
l
2
3
4
5,6
7
8
9,10Item
MN
CN
BL
EL
ML
CL
LN
ERN
MC
CCDescription
Maximum nu_er ofwords intable (integer).
Current number ofwords being used (integer).
9SCAR record number where loopbegins (integer).
_SCAR record number where loopends (integer).
Maximum loopcount asspecified inREPT instruction (integer).
Current loopcount, thatis,thenumber oftimes loophasbeen
repeated (integer).
Location namespecified inREPTinstruction (BCD).
EXIT9SCAR record number (integer).
Maximum count specified inEXITinstruction.
Current count ofnumber oftimes EXITinstruction notexecuted.
These twowords arezeroed.
Notes
CEITBL islocated innamed common block /XCEITB/.
2.4-9&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1.6 VPS(Variable Parameter SetTable)
Description
TheVPStablecontains thevaluesofallvariable parameters referenced byDMAPmodules ina
DMAPprogram. Itisthemeansfortransferring variable parameter values fromonemodule to
another.
Created inModule
XGPI.
TableFormat
Word
4
5
6
5+L
Mfi
Word
1
2
3,4
5
6thru5+LMN
CN
Parameter
Name
[AM T L
0 20 1716 1Sample entry
(variable length)
Item
MN
CN
Name
ADescriDtion
Maximum numberofwordsinVPS(integer).
Current number ofwordsbeingused(integer).
BCDnameofvariable parameter.
Assigned flag. A=1indicates valuefromDFtAPinstruction
hasbeenentered inVPS.
Modified flag. M=1indicates parameter wasmodified bybulk
dataPARAMcardonrestart.
Typecodeforparameter (integer).
Length inwordsofitemV(integer).
Valueofparameter.
2.4-10&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Notes
I.
2.Items A,MandT(word 5ofsample entry) areusedonlybytheXGPImodule andare
cleared prior toexiting XGPI.
Type codeandcorresponding word length.
T L
l=integer l
2=real, S.P. l
3=BCD 2
4=real, D.P. 2
5=complex, S.P. 2
6=complex, D.P. 4
3.TheVPStable islocated inthenamed common block /XVPS/.
2.4-11&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEEESCRIPTIONS
2.4.1.7 TAPID(Problem TapeIdentification Table)
Description
TAPIDcontains Problem Tapeidentification information.
Created inModule
XCSA.
Table Format
Word
ID1
__ ID2
31M
i
RD
514 98
Word
1,2
3,4
5
G
Notes
,
2,Item
ID1
ID2
M,D,Y
RDescription
FirstBCDfieldonI[Executive Control card.
Second BCDfieldonIDExecutive Control card.
Thedate-integers -month, day,year.
Reelnumber ofProblem Tape(integer).
TAPIDiswritten onProblem Tapeassingle record field. Itisalways thefirst file
ontheProblem Tape.
OTAPID hassameformat asTAPID. @TAPID istheIDinformation fromanOldProblem Tape
beingusedforrestarting problem.
3.TAPIDand@TAPID arelocated innamedcommon block /STAPID/.
2.4-12&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.1.8SYSTEM(NASTRANSystemParameters).
Description
ANASTRAr! resident memory tablecontaining various machine dependent, operating system and
NASTRA_I parameters. Thelength ofthetable isdefined byoneofthetableitems.
Created in_odule
I,lostitemsareinitialized bytheNASTRAN blockdataprogram, SE_DBD. Several machine
dependent itemsaresetbysubroutine BTSTRP.
TableFormat
Thesequential table description follows:
Word S_bol DescriptionInitially
Setb_
1 SYSBUF
2 &lt;em&gt;UTTAP
3 N@G&lt;/em&gt;
4 INTP
5 &lt;em&gt;PC
6 SPC
7 METHOD
8 LBAD
9 NLPP
i0 MTEMP
II NPAGES
12 NLINES
13 TLINES
14 MXLINS
15 DATE(1)
16 DATE(2)
17 DATE(3)
18 TIMEZ
19 ECH_F
20 PL_TF
21 APPRCH
22 MACH
23 LSYSTM
24 EDTUMF
25 SWITCH
26 CPPGCT
27 MN
28 IC_NFG
29 MAXFIL
30 MAXOPN
31 K_N360
32 TIMEW
33 &lt;em&gt;FPFLGNumber ofwordsina_INBbuffer BTSTRP
F@RTRAN looical unitforoutput BTSTRP
Flag defining status during Preface SEMDBD
FORTRAN logical unit forinput BTSTRP
Multipoint constraint setID SEMDBD
Single-point constraint setID SE_IDBD
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. __.&lt;/em&gt;^&lt;/em&gt; gF_DRD L_valu_ &amp;hellip;..
Firstrecord pointer inCaseControl datablock SEMDBD
Number oflinesperDa_eofprinted output BTSTRP
Material temperature setID SEMDBD
Current pagecount SEMDBD
Number oflinesoncurrent page SEMDBD
Totalnumber oflinesprinted forproblem SEMDBD
Maximum number ofprinted linespermitted SEMDBD
Today&amp;rsquo;s date-integer month 1-12 SEMDBD
Today&amp;rsquo;s date-inteoer day1-31 SEMDBD
Today&amp;rsquo;s date-integer year(XX) SEMDBD
Timeofproblem start-seconds aftermidnite SEMDBD
Bulkdataoutput reouest type SEMDBD
Structural plotrequest flag SEMDBD
Approach typeflag(2=DISDL, 3=DMAP) SEMDBD
Computing machine codenumber (2=360,3:1108,
4=6600) BTSTRP
Length ofthistable SEMDBD
Usermaster fileeditflag SEMDBD
Logical senseswitch bitssetbyaDIA_
Executive Control Deckcard SE_DBD
XCHKmodule pagecount SEMDBD
Usedonlyinaconical shellproblem. Thelower
order16bitscontain N,thenumber of
harmonics; thenexthigher order16bits
contain M,thenumber ofrings. SEMDBD
Machine configuration -subset ofMACHcode
number SEMDBD
Maximum number offiles tobeadded toFIAT SEr_DBD
Maximum number offiles tobeopened simultaneously SEMDBD
Number ofmemory words tobereleased for_S
(360 only) SEMDBD
Initial problem start time (integer seconds after
midnite) SEMDBD
_FPoperate flag-setnonzero whenOFPoperates SEMDBD
2.4-13 (811172)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Word
34
35
3637
3839
4041
42
4344
45
4647
48
495O
5152
53
5455
5657
58
596O
6162
63
6465Symbol
NBRCBU
NBRMST
NBRSUB
KSEMTR
QONBPC
NBPW
NCPW
SYSDAT(1)
SYSDAT(2)
SYSDAT(3)
TAPFLG
ADUMEL(1)
ADUMEL(2)
ADUMEL(3)
ADUMEL(4)
ADUMEL(5)
ADUMEL(6)
ADUMEL(7)
ADUMEL(8)
ADUMEL(9)
IPREC
!THRML
Unused
Unused
Unused
Unused
Unused
Unused
Unused
Unused
UnusedDescription
Length ofFET+circular buffer (CDC6600only)
Length ofmaster index(CDC6600only)
Length ofsubindex (CDC6600only)
InputDataTransliteration Flag(IBI_36_only)
Hydroelastic Problem Flag
Number ofbitspercharacter
Number ofbitsperword
Number ofcharacters perword
System Generation Date-Month
System Generation Date-Dav
System Generation Date-Year
Permanent FileTapeFlag
DummyElement Flag-DUMI
DummyElement Flag-DUM2
DummyElement Flag-DUM3
DummyElement Flag-DUM4
DummyElement Flag-DUM5
DummyElement Flag-DUM6
DummyElement Flag-DUM7
DummyElement Flag-DUM8
DummyElement Flag-DUM9
Precision Flag
HeatTransfer FlagInitially
Setby
SE_IDBD
SEMDBD
SEr_DBD
SEMDBD
SEMDBD
BTSTRP
BTSTRP
BTSTRP
TTLPGE
TTLPGE
TTLPGE
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SE_DBD
SEr_DBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
2.4-13a (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDT_,BLEDESCRIPTIONS
2.4.1.9 XLINK(LinkSpecification Tab]e- Non-resident Edit)
Description
ThisLinkSpecification Table(seealso2.4.2.7) contains anentrycorresponding toeach
DI_Pmodulewithin theMPL(2.4.2.2) table. Theseentries areindexed byMPLposition and
arethusordered thesameastheMPLentries. Eachentrycontains akeyindicating the
linksinwhichthemodule resides.
Created inModule
XLINKdataiscreated fromtheLNKSPC (2.4.2.7) andMPL(2.4.2.2) tablesbytheXGPIBS
subroutine within theXGPI(4.7)module.
TableFormat
Word 1
Word Item
1 LXLINK
2 MAXLNK
3,N KeyLXLINK
MAXLNK
Key
Key
KeyEntry#I(sample)
Entry#2
Entry#3
Description
Length oftable (number ofentries)
Maximum permissable linknumber
Linkresidence keyforthecorresponding MPLentry
Thecontent ofthisKeywordisidentical totheKeywordwithin LNKSPC (2.4.2.7) forthe
machine typecurrently operating. Seesection 2.4.2.7 foranexplanation ofthecontent.
Notes
I.TheXLINK table must contain anentry inthesameorder foreachmodule thatis
intheMPL(2.4.2.2) table.
2.XLINKtableislocated in/XLINK/.
2.4-14&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P16</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_016/</guid>
      <description>
        
        
        &lt;p&gt;DATABLOCKDESCRIPTIONS
Element
Type Name
35 CC@NEAX
36 CTRIARG
37 CTPJ_PRG
38 CT_RDRG
53-61 CDUMI
thru
CDUM9Wordor
Component
2
3
4
5
6
7
8
9
I0
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
S
6
7
8
9
I0
II
12
13
2
3
4
5
6
7
8
9
lORealElement Forces
Item
Harmonic orpoint angle
Bend-Morn u
Bend-Morn v
Twist-Moment
Shear u
Shear v
Radial (x)
Circum (Theta)
Axial (z)
Radial Ix)Circum Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Radial (x)
Circum (Theta)
Axial (z)
Moment (zx)
Direct Strain
Curvature
x)Radial ITheta) Circum
Axial (z)
Moment (zx)
Direct Strain
Curvature
F/
F2
F3
F4
F5
F6
F7
F8
F9atl
at1
atl
at2
at2
at2
at3
at3
at3
atl
at1
atl
at2
at2
at2
at3
at3
at3
at4
at4
at4
at1
atl
atl
atl
atl
atl
at2
at2
at2
at2
at2
at2
2
3
4
5
6
7
8
9
lO
II
12
13
14Complex Element Forces
Word or
Component Item
Undefined
Undefined
Undefined
Undefined
F1
F2
F3
F4
F5
F6
F7
F8
F9
F1
F2
F3
F4Real
Imag.
2.3-191 (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Element
Type Name
53-61cont&amp;rsquo;d.RealElement Forces
Wordor
Component ItemWordor
Component
15
16
17
18
19Complex Element Forces
Item
F5
F6
F7
F8
F9Real
Imag.
2.3-191a (811/72)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.3.53 Data Blocks Output FromModule DDR2
2.3.53.1 UEVF(MATRIX)
Description
[uf] -Displacements attheextra points forafrequency response problem.e
Matrix Trailer
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =e
Form =rectangular
Type =single precision
2.3.53.2 PAF(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration computations inafrequency response
problem -aset.
Matrix Trailer
Number ofcolumns :number offrequencies timesnumber ofloads
Number ofrows :d
Form :rectangular
Type =single precision
2.3.53.3
Description
[u_a]
Matrix TrailerUDV2F(MATRIX)
Mode accelerated displacement vectors forafrequency response problem.
Number ofcolumns =number offrequencies times number ofloads
Number ofrows =d
Form =rectangular
Type =complex single precision
2.3.53.4 UEVT(MATRIX)
Description
[u_] -Displacement attheextra points foratransient analysis problem.
2.3-192&lt;/p&gt;
&lt;p&gt;DATABLOCKDESCRIPTIONS
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =e
Form =rectangular
Type =realsingle precision
2.3.53.5 PAT(MATRIX)
Description
[P_] -Equivalent loadvector formodeacceleration inatransient analysis problem.
Matrix Trailer
Number ofcolumns
Number ofrows
Form
Typenumber ofoutput times multiplied by3
d
rectangular
realsing!p precision
2.3.53.6 UDV2T (MATRIX)
Description
[u_a]-Mode accelerated displacement vectors foratransient analysis problem.
Matrix Trailer
Number ofcolumns =number ofoutput times multiplied by3
Number ofrows =d
Form =rectangular
Type =realsingle precision
2.3-193&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.3.54 DataBlocksOutput fromModule BMG
2.3.54.1 BDP_L (TABLE)
Description
Hydroelastic boundary matrix tables.
fableFormat
SameformatastheMATPBOL datablockDMIGcardimages.
Notes: Thenamesofthematrices areKBFLandABFL
Table Trailer
IFPformat, 6words containing 96pointer bitsforusebysubroutines PRELOC andLOCATE.
2.3.55 DataBlocksOutput fromModule PLTTRAN
2.3.55.1 SIP(TABLE)
Description
SameformatasdatablockSIL.
thenextSILvaluetohaveavalue:
TheSIPdatawillbe:Iffluidpoints arepresent eachfluidpoint, i,willcause
SIL(i+I) =SIL(i) +1
SIP(i+l) =SIP(i) +6
whereiisafluidpoint.
2.3.55.2 BGPDP(TABLE)
Description
Sameformat asdatablockBGPDTexcept fluidpoints havethevalue-2inthefields
corresponding tocoordinate system identification numbers.
2.3-194 (811172)&lt;/p&gt;
&lt;p&gt;2.4EXECUTIVETABLEDESCRIPTIONS
EXECUTIVETABLEDESCRIPTIONS
Thefollowingisanalphabetical indexofExecutivetabledescriptions.
Section Number Executive Table Name Where Stored
2.4.1.5 CEITBL /XCEITB/
2.4.1.4 DPL /XDPL/
2.4.1.2 FIAT /XFIAT/
2.4.1.3 FIST /XFIST/and/XPFIST/
2.4.2.8 IFPXO /IFPXO/
2.4.2.9 IFPXI /IFPXl/
2.4.2.7 LNKSPC /XLKSPC/
2.4.2.2 MPL /XGPI2/
2.4.2.1 _SCAR DataPoolFile
2.4.2.4 PVT /XPVT/
2.4.i.B &amp;hellip;..&amp;quot; /_WT_M/
2.4.1.7 TAPID /STAPID/
2.4.1.6 VPS /XVPS/
2.4.2.6 XALTER Problem Tape
2.4.2.5 XCSA Problem Tape
2.4.1.I XFIAT /XXFIAT/
2.4.1.9 XLINK /XLINK/
2.4.2.3 XPTDIC Problem TapePageNumber
2.4-9
2.4-7
2.4-3
2.4-5
2.4-31
2.4-32
:.4-29
2.4-21
2.4-15
2.4-26
2o4-13
2.4-12
2.4-10
2.4-28
2.4-27
2.4-2
2.4-14
2,4-24
2.4-I (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1 Executive Tables WhicharePermanently CoreResident
2.4.1.1 XFIAT(Permanent FileAllocation Table)
Description
ANASTRAN resident memory tablecontaining thephysical fileidentification forthe
permanent files(P_L, OPTP,etc.).
Created inModule
Thephysical fileidentifications areoutput byGNFIAT (generate FIAT).
TableFormat
Word 1
s
2
s
3
NNOT ITI
USEDi;I_o11_ FILE
NOTI!1FILE
NJT ITI
USED 171_6115 FILE
NOT ITI
USED _71_61IsFILE
Word Item Description
I-N TP
NotesFILETapeFlag(Ibit)-setifphysical file(FILE) isa
magnetic tape.
File ID(15bits) -unique integer identification for
aphysical file.
1â€¢ Thenumber ofentries (N)isdictated bytheinteger value inPFIST (seeFIST
Executive TableDescription -2.4.1.3)
2.TheXFIATtableislocated inthenamedcommon block/XXFIAT/.
2.4-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE TAJ3LE DESCRIPTIONS
2.4.1.2 FIAT (File Allocation Table).
Description
ANASTRAN resident memory table containing thedatablock namevs.physical fileID.for
asegment ofDMAPmodules.
Created inModule
Thephysical files available forthesystem/computer confiquration areoutout by_NFIAT
(generate FIAT). Thedatablock names andother datablock information areoutnut byXSFA,
Executive Segment FileAllocator.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
NUFA
MXE
CAE
I.A_&amp;rsquo; ITII
jP_LTUIPI
___3_1_o &lt;em&gt;&amp;rsquo;,&lt;/em&gt;&amp;rsquo;,_&lt;em&gt;&lt;em&gt;FILE
J
DATABLOCK
NAME
DATABLOCK
TRAILER
I! I
&amp;rsquo; :L&lt;/em&gt; m&lt;/em&gt; m _&amp;hellip;&amp;hellip;.FIATHeader
Entry #I(sample)
Entry #2through C/E
2.4-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Wor_d_d Item Description
1 UFA Unique filesavailable -thisinteger indicates thenumber of
unique fileentries intheFIAT.
2 MXE Maximum entries -this integer shows thetotal entry size of
thedimensioned FIAT table; theamount ofmemory reserved
(N)=6xMXE+3.
3 CAE Current active entries -thisinteger designates theportion of
FIATcurrently containing validdata;UFA_CAE_HXE.
Words4through 9describe asample 6-word entry:
4 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
AP Append flag (Ibit) -setifappend issDecified fordata
block inDMAP sequence byaFILE DMAP instruction.
LTU Lasttimeused(14bitinteger) -record number of@SCAR
entry forlastuseofdatablock.
TP Tapeflag(Ibit)-setifphysical file(FILE) isamagnetic
tape.
FILE File ID(15bits) -unique identification foraphysical file.
5,6 NAME Data block name -8characters (4characters/word).
7,8,9 TRAILER Datablocktrailer -storage for6-16bitdatablocktrailer
words.
WordsI0through Ncontain repeated 6-word entries.
Trailer Information
Trailer information foreachdatablock isstored inandreceived fromtheFIATbyWRTTRL
(write trailer) andRDTRL(readtrailer).
Note
TheFIATtableislocated inthenamedcommon block/XFIAT/.
2.4-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.3 FIST (File Status Table)
Description
ANASTRAN resident memory table containing theinternal data block reference (IDBR)
numbers vs.FIATtable pointers foraparticular module; also, thepermanent filereference
names vs.XFIAT table pointers.
Created inModule
Themodule entries aregenerated prior toeachmodule execution bysubroutines GNFIST
(Generate FIST). Thepermanent entries areinitialized atsystem assembly.
Table Format
PFIST I I I
MXE
CAEWord l
2I+2+I
+2
+3
+4
NPermNameI
I
i XFPointl
I
PermName2
IIl XFPointI
IDBRl
0i FPoint
I
sl
IDBR2
I
I
ol
sl FPointIFISTHeader
Sample Permanent Entry
Sample Module Entry
2.4-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word Item Description.
PFIST I Integer number ofpermanent FISTentries.
1 MXE Maximum entries -thisinteger showsthetotalentry sizeofthe
dimensioned FISTtable; theamount ofmemory reserved
(N)=2*MXE+2.
2 CAE Current active entries -thisinteger designates theportion of
FISTcurrently containing validdata;IcCAE_MXE.
Words3and4describe asample 2-word permanent entry:
3 PermName Apermanent filereference name-4characters BCD(e.g., P_L,
OPTP,PLTI,etc.).
4 XFPoint Points totheXFIATposition containing thefileIDforthis
permanent file.
Words21+2+I and+2describe asample 2-word module entry.
+I IDBR Aninternal datablockreference number (GINOfilenumber) -
integer (e.g., 104,206,301,etc.).
+2 FPoint Points totheFIATposition containing thefileIDforthis
module entry.
Notes
I.
2,
3.
Â°XFIATpointer values contain anSbitequaltoI,while FIATpointer values contain an
SbitequaltoO.
Permanent entries remain static throughout arun, while module entries arechanged by
GNFIST prior toeach module call.
FIATandXFIATposition pointers areindexes intotherespective tables considering
thefirstwordofthetableasposition O.
TheFISTtableislocated inthenamedcommon block /XFIST/.
ThePFISTentry islocated inthenamedcommon block/XPFIST/.
2.4-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.l.4 DPL(Data PoolDictionary)
Description
ANASTRAN resident memory table describing thecurrent contents andstatus oftheDataPool.
Created inModule
DataPool, andtherefore Dictionary entries, arecreated bypooling fromSFA(Segment File
Allocator), housekeeping operations byDPH(Data PoolHousekeeper) andrestart initialization by
GPI(General Problem Initialization), andIFP(Input FileProcessor) whenwriting D_IandDTI
information (seesection 2.3.2).
TableFormat
Word1NFA
MXE
CAE
DATABLOCK
NAME
B
ET rI
Q: SIZE Im I
S!31 17116FILE#
! II
j I
IIDPLHeader
Entry #I(samole)
Entry #2
2.4-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
NoteWord Item
1 NFADescription
Nextfileavallable- thenextDataPoolFilenumber (integer)
available foroutput.
2 MXEMaximum entries -thisinteger showsthetotalentrysizeof
thedimensioned DPLtable; theamount ofmemory reserved
(N):3*MXE+3.
3 CAE Current active entries -thisinteger designates theportion of
theDPLcurrently containing validdata;0&amp;lt;CAE_MXE.
Words4through 6describe asample 3-word entry.
4,5 N_tE Datablock name-8characters (4characters/word).
6 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced.
1bit,fileequivalenced.
SIZESizeofthepooled datablock-number ofwords/lO.
FILE# Thefilenumber (integer) showing therelative position ofthe
datablockfileofthepool.
TheDPLtable islocated inthelabeled common block /XDPL/.
2.4-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
2.4.1.5 CEITBL (Control Entry Information Table)
Description
CEITBL controls theREPTandEXITDI_APmodule execution.
Created InModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
8
9
lO
Mt_MN
BL EL !31&amp;hellip;&amp;hellip; &lt;em&gt;1_16 &amp;hellip;.. I
ML CL
3!&amp;hellip;&amp;hellip; 1_716 1.(&amp;quot;
&amp;mdash; LN &amp;mdash;
,otus 1&lt;/em&gt;
1,:_
L Notused
NotusedSample entry forREPTcontrol
(4words)
Sample entry forEXITcontrol
(4words)
Word
l
2
3
4
5,6
7
8
9,10Item
MN
CN
BL
EL
ML
CL
LN
ERN
MC
CCDescription
Maximum nu_er ofwords intable (integer).
Current number ofwords being used (integer).
9SCAR record number where loopbegins (integer).
_SCAR record number where loopends (integer).
Maximum loopcount asspecified inREPT instruction (integer).
Current loopcount, thatis,thenumber oftimes loophasbeen
repeated (integer).
Location namespecified inREPTinstruction (BCD).
EXIT9SCAR record number (integer).
Maximum count specified inEXITinstruction.
Current count ofnumber oftimes EXITinstruction notexecuted.
These twowords arezeroed.
Notes
CEITBL islocated innamed common block /XCEITB/.
2.4-9&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.1.6 VPS(Variable Parameter SetTable)
Description
TheVPStablecontains thevaluesofallvariable parameters referenced byDMAPmodules ina
DMAPprogram. Itisthemeansfortransferring variable parameter values fromonemodule to
another.
Created inModule
XGPI.
TableFormat
Word
4
5
6
5+L
Mfi
Word
1
2
3,4
5
6thru5+LMN
CN
Parameter
Name
[AM T L
0 20 1716 1Sample entry
(variable length)
Item
MN
CN
Name
ADescriDtion
Maximum numberofwordsinVPS(integer).
Current number ofwordsbeingused(integer).
BCDnameofvariable parameter.
Assigned flag. A=1indicates valuefromDFtAPinstruction
hasbeenentered inVPS.
Modified flag. M=1indicates parameter wasmodified bybulk
dataPARAMcardonrestart.
Typecodeforparameter (integer).
Length inwordsofitemV(integer).
Valueofparameter.
2.4-10&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Notes
I.
2.Items A,MandT(word 5ofsample entry) areusedonlybytheXGPImodule andare
cleared prior toexiting XGPI.
Type codeandcorresponding word length.
T L
l=integer l
2=real, S.P. l
3=BCD 2
4=real, D.P. 2
5=complex, S.P. 2
6=complex, D.P. 4
3.TheVPStable islocated inthenamed common block /XVPS/.
2.4-11&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEEESCRIPTIONS
2.4.1.7 TAPID(Problem TapeIdentification Table)
Description
TAPIDcontains Problem Tapeidentification information.
Created inModule
XCSA.
Table Format
Word
ID1
__ ID2
31M
i
RD
514 98
Word
1,2
3,4
5
G
Notes
,
2,Item
ID1
ID2
M,D,Y
RDescription
FirstBCDfieldonI[Executive Control card.
Second BCDfieldonIDExecutive Control card.
Thedate-integers -month, day,year.
Reelnumber ofProblem Tape(integer).
TAPIDiswritten onProblem Tapeassingle record field. Itisalways thefirst file
ontheProblem Tape.
OTAPID hassameformat asTAPID. @TAPID istheIDinformation fromanOldProblem Tape
beingusedforrestarting problem.
3.TAPIDand@TAPID arelocated innamedcommon block /STAPID/.
2.4-12&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.1.8SYSTEM(NASTRANSystemParameters).
Description
ANASTRAr! resident memory tablecontaining various machine dependent, operating system and
NASTRA_I parameters. Thelength ofthetable isdefined byoneofthetableitems.
Created in_odule
I,lostitemsareinitialized bytheNASTRAN blockdataprogram, SE_DBD. Several machine
dependent itemsaresetbysubroutine BTSTRP.
TableFormat
Thesequential table description follows:
Word S_bol DescriptionInitially
Setb_
1 SYSBUF
2 &lt;em&gt;UTTAP
3 N@G&lt;/em&gt;
4 INTP
5 &lt;em&gt;PC
6 SPC
7 METHOD
8 LBAD
9 NLPP
i0 MTEMP
II NPAGES
12 NLINES
13 TLINES
14 MXLINS
15 DATE(1)
16 DATE(2)
17 DATE(3)
18 TIMEZ
19 ECH_F
20 PL_TF
21 APPRCH
22 MACH
23 LSYSTM
24 EDTUMF
25 SWITCH
26 CPPGCT
27 MN
28 IC_NFG
29 MAXFIL
30 MAXOPN
31 K_N360
32 TIMEW
33 &lt;em&gt;FPFLGNumber ofwordsina_INBbuffer BTSTRP
F@RTRAN looical unitforoutput BTSTRP
Flag defining status during Preface SEMDBD
FORTRAN logical unit forinput BTSTRP
Multipoint constraint setID SEMDBD
Single-point constraint setID SE_IDBD
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. __.&lt;/em&gt;^&lt;/em&gt; gF_DRD L_valu_ &amp;hellip;..
Firstrecord pointer inCaseControl datablock SEMDBD
Number oflinesperDa_eofprinted output BTSTRP
Material temperature setID SEMDBD
Current pagecount SEMDBD
Number oflinesoncurrent page SEMDBD
Totalnumber oflinesprinted forproblem SEMDBD
Maximum number ofprinted linespermitted SEMDBD
Today&amp;rsquo;s date-integer month 1-12 SEMDBD
Today&amp;rsquo;s date-inteoer day1-31 SEMDBD
Today&amp;rsquo;s date-integer year(XX) SEMDBD
Timeofproblem start-seconds aftermidnite SEMDBD
Bulkdataoutput reouest type SEMDBD
Structural plotrequest flag SEMDBD
Approach typeflag(2=DISDL, 3=DMAP) SEMDBD
Computing machine codenumber (2=360,3:1108,
4=6600) BTSTRP
Length ofthistable SEMDBD
Usermaster fileeditflag SEMDBD
Logical senseswitch bitssetbyaDIA_
Executive Control Deckcard SE_DBD
XCHKmodule pagecount SEMDBD
Usedonlyinaconical shellproblem. Thelower
order16bitscontain N,thenumber of
harmonics; thenexthigher order16bits
contain M,thenumber ofrings. SEMDBD
Machine configuration -subset ofMACHcode
number SEMDBD
Maximum number offiles tobeadded toFIAT SEr_DBD
Maximum number offiles tobeopened simultaneously SEMDBD
Number ofmemory words tobereleased for_S
(360 only) SEMDBD
Initial problem start time (integer seconds after
midnite) SEMDBD
_FPoperate flag-setnonzero whenOFPoperates SEMDBD
2.4-13 (811172)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Word
34
35
3637
3839
4041
42
4344
45
4647
48
495O
5152
53
5455
5657
58
596O
6162
63
6465Symbol
NBRCBU
NBRMST
NBRSUB
KSEMTR
QONBPC
NBPW
NCPW
SYSDAT(1)
SYSDAT(2)
SYSDAT(3)
TAPFLG
ADUMEL(1)
ADUMEL(2)
ADUMEL(3)
ADUMEL(4)
ADUMEL(5)
ADUMEL(6)
ADUMEL(7)
ADUMEL(8)
ADUMEL(9)
IPREC
!THRML
Unused
Unused
Unused
Unused
Unused
Unused
Unused
Unused
UnusedDescription
Length ofFET+circular buffer (CDC6600only)
Length ofmaster index(CDC6600only)
Length ofsubindex (CDC6600only)
InputDataTransliteration Flag(IBI_36_only)
Hydroelastic Problem Flag
Number ofbitspercharacter
Number ofbitsperword
Number ofcharacters perword
System Generation Date-Month
System Generation Date-Dav
System Generation Date-Year
Permanent FileTapeFlag
DummyElement Flag-DUMI
DummyElement Flag-DUM2
DummyElement Flag-DUM3
DummyElement Flag-DUM4
DummyElement Flag-DUM5
DummyElement Flag-DUM6
DummyElement Flag-DUM7
DummyElement Flag-DUM8
DummyElement Flag-DUM9
Precision Flag
HeatTransfer FlagInitially
Setby
SE_IDBD
SEMDBD
SEr_DBD
SEMDBD
SEMDBD
BTSTRP
BTSTRP
BTSTRP
TTLPGE
TTLPGE
TTLPGE
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
SE_DBD
SEr_DBD
SEMDBD
SEMDBD
SEMDBD
SEMDBD
2.4-13a (8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDT_,BLEDESCRIPTIONS
2.4.1.9 XLINK(LinkSpecification Tab]e- Non-resident Edit)
Description
ThisLinkSpecification Table(seealso2.4.2.7) contains anentrycorresponding toeach
DI_Pmodulewithin theMPL(2.4.2.2) table. Theseentries areindexed byMPLposition and
arethusordered thesameastheMPLentries. Eachentrycontains akeyindicating the
linksinwhichthemodule resides.
Created inModule
XLINKdataiscreated fromtheLNKSPC (2.4.2.7) andMPL(2.4.2.2) tablesbytheXGPIBS
subroutine within theXGPI(4.7)module.
TableFormat
Word 1
Word Item
1 LXLINK
2 MAXLNK
3,N KeyLXLINK
MAXLNK
Key
Key
KeyEntry#I(sample)
Entry#2
Entry#3
Description
Length oftable (number ofentries)
Maximum permissable linknumber
Linkresidence keyforthecorresponding MPLentry
Thecontent ofthisKeywordisidentical totheKeywordwithin LNKSPC (2.4.2.7) forthe
machine typecurrently operating. Seesection 2.4.2.7 foranexplanation ofthecontent.
Notes
I.TheXLINK table must contain anentry inthesameorder foreachmodule thatis
intheMPL(2.4.2.2) table.
2.XLINKtableislocated in/XLINK/.
2.4-14&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P17</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_017/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2Executive Tables NotPermanentl_ CoreResident
2.4.2.1 &lt;em&gt;SCAR (Operation Sequence Control Array)
Description
TheOperation Sequence Control Array (&lt;em&gt;SCAR) controls thesequence ofmodules executed and
aidsincommunicating data between modules.
The_SCAR isgenerated fromaDMAPinstruction sequence supplied bytheuserorselected
fromtheRigid Format library. Ingeneral, an_SCAR entry isaDMAPstatement which hasbeen
translated toamore readily usable formforinternal use.
Thefour_SCAR entry format types are:
I.Type lorF(functional) format isusedforallfunctional modules exceot outout
processors.
2.Type 2or&lt;/em&gt;(output) format isusedforoutput processors.
3.Type 3orC(control) format isusedforREPT, JUMP, C_NDandENDDMAPinstructions.
4.Type 4orE(executive) format isusedforSAVE, CHKPNT, PURGE andEQUIV DMAP
instructions.
Created inModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
NRN
MI LTi__7 L&lt;/em&gt;_ _.i
Module
Name
-El DINS31
Formatofthis
section isdependent
onvalueofTEntry Header Section
Entry DataSection
2.4-15&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
1
2
3
4,5
6Item
N
RN
MI
Name
EX
DINDescription
Integer -number ofwords inentry.
Integer -record number ofentryin_SCARtable.
Integer -module indexnumber assigned according tomodule&amp;rsquo;s
position inMPLandusedtoaccess themodule&amp;rsquo;s linkspecifica-
tionsin/XLINK/.
Integer -format typecode(l,2,3,or4)fordatasection
ofentry.
BCD-module nameissameasDMAPinstruction nameexcept when
T=4.
Execute flag. EX=1indicates module istobeexecuted.
Integer -DMAPinstruction number whichgenerated thisentry.
DataSection Format forTypeIorFFormat:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
IO+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
II+NIP&lt;em&gt;3+NOP&lt;/em&gt;3NIP
DATABLOCK
NAME
NTU
i
N_P
DATABLOCK
NAME
___ L1_s_
NS
NP
-C IL
(Notused)Sample entry
Sample entry
Sample entry
(variable length)Input
DataBlock
Subsection
Output
DataBlock
Subsection
Parameter
Subsection
2.4-!6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word
7
8,9
lO
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3,
lO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3 +
_fP&lt;/em&gt;3
lO+NIP&lt;em&gt;3 +
N@P&lt;/em&gt;3
II+NIP&lt;em&gt;3 +
N_P&lt;/em&gt;3Item
NIP
{tAME
AP
LTU
TP
NTU
N_P
NAME
AP,LTU,
TP,NTU
NS
NP
CV
ILDescription
Integer -number ofdatablocks input tomodule asspecified
inMPL.
BCD-nameoffirst input datablock specified inDMAPinstruc-
tionorzero ifnonespecified.
Append flagusedbysubroutine XSFAandsetbyX_SGEN ifAPPEND
isspecified fordatablock inaFILEDMAP instruction.
Integer -lasttimeused. _SCAR record n_ber ofentry a_ter
which datablock willnolonger besaved.
Tapeflagusedbysubroutine XSFAandsetbyX@SGEN iftapeis
specified fordatablock inaFILEDMAPinstruction.
Integer -nexttimeused. _SCAR record number ofentry where
datablock isnextreferenced.
Integer -number ofdata blocks output frommodule asspecified
inMPL.
BCD-nameoffirst output datablock specified inDMAP instruc-
tionorzeroifnonespecified.
Samedescriptions aswordlO.
Integer -number ofscratch datablocks usedbymodule as
specified inMPL.
Integer -number ofparameters usedbymodule asspecified in
MPL.
Constant/variable flag. Flag indicates meaning ofIL.
Integer -VPSindex/length ofconstant. IfCV=0theparameter
isaconstant whose value isstored inthenext ILwords (i.e.,
words 12+NIP&lt;em&gt;3 +NQIP&lt;/em&gt;3 through II+NIP&lt;em&gt;3 +N_P&lt;/em&gt;3 +IL).
IfCV=ltheparameter isavariable whose value isstored in
theVPStable. ILpoints tothevalue inVPS.
2.4-17&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
DataSection Format forType2or0Format:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP*38
9NIP
DATABLOCK
NAME
LTU NTU
I 15
INS
NP
&amp;ndash;31Sample entry
ISampl eentry
I(variable length)InputDataBlock
Subsection
IParameter
Subsection
Type1format description isapplicable totype2format above.
DataSection Format forType3orCFormat:
Word7=NI131RRN1716I11
Word Item Description
N RRN Integer -re-entry record number. Indicates OSCARrecord to
jumptoforJUMP,REPTandC_NDDMAPinstructions. Not
applicable forEXITsoRRN:O.
Integer -indexintoXCEITBL forREPTorEXITDMAPinstruction.
Pointer toparameter valueinXVPStable ifC@NDDMAP
instruction. Notapplicable forJUMPsoI:O.
2.4-18&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLE DESCRIPTIONS
DataSection Formats forType4orEFormats:
Word7
8
9
NNP
IV
IB Sample entryFormat for
SAVEDMAP
instruction
Word
7Item
NP
IV
IBDescription
Integer -number ofparameter values tobesaved (i.e. number
ofentries).
Integer -pointer toparameter value inVPS.
Integer -pointer toparameter value inblank common.
Word 7
8
9
N-l
NNDB
FIRST DATA
BLOCK NAME
LASTDATA
BLOCK NAMEFormat forCHKPNT
DMAP instruction
Word
7
8thru NItem
NDB
NAMESDescription
Integer -number ofdatablocks names inlist.
BCD-listofdatablocks tobecheckpointed.
2.4-19&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE _ESCRIPTIONS
Word7
8
9NDB
DATABLOCK
J _-
NAME
:
IVFormat forPURGE orEQUIV
DMAPinstruction
Word
7
8,9
N
Notes
I.
2.Item
NDB
N_4E
IVDescription
Integer -number ofdata block names infirst qroun.
maybeoneormoregroups.
BCD-name offirst datablock infirst group.
Integer -pointer toparameter value inVPStable.There
_SCAR islocated innamed common block /XGPII/while module XGPI isgenerating it.
After generating _SCAR andprior toexiting XGPIthe_SCAR iswritten ontheDataPool
File. The_SCAR fileheader IDisX_SCAR.
2.4-20&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.2MPL(ModulePropertyList)
Description
TheModule Properties Listcontains information needed bythemodule XGPItocorrectly
generate OSCAR table entries forexecutable DMAPinstructions and/or todetermine whether or
nottheDMAP instructions adhere tothecalling sequence described insection 4,Module
Functional Descriptions.
Created inModule
XGPI(Block DataProgram XMPLBD).
Table Format
There aretwoformats usedintheMPL,oneforDeclarative (FILE, BEGIN, LABEL), Executive
(CHKPNT, EQUIV, PURGE, SAVE) andControl (REPT, JUMP, C_ND, EXIT, END) DMAPmodules andtheother
forfunctional modules. Allentries intheMPLareinteger except formodule names which are
BCDandBCDparameter values.
Format forDeclarative, Executive andControl Modules:
Word
iiN4i2 Module
3 Name
4 F
Word
l
2,3
4Item
N
Name
FDescription
Nu_er ofwords inentry.
NameofDMAPmodule.
_SCAR format typecode
3=Control module (Cformat)
4=Executive module (Eformat)
5=Declarative module (Dformat)
2.4-21&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Format forFunctional Modules:
Word l,
2
3
4
5
6
7
8
NN
Module
Name
F
IP
@P
S
Parameter ListIVariable Length
Word
I-3
4
5 IP
6 @P
7 S
8-NItem
FDescription
Sameasformat forDeclarative, Executive andControl modules.
F:1implies module hasinputandoutputdatablocks
F:2implies module hasnooutput datablocks, e.g.,
_FP,SETVALetc.
Numberofinputdatablocks.
Numberofoutputdatablocks.
Number ofscratch datablocks.
Parameter List (omit ifnoparameters).
Theparameter listforamodule contains thetypesofallparameters residing inblank
common thatarereferenced bythemodule. Theorderoftheparameters intheMPLentrymust
coincide withtheorderoftheparameters inblankcommon. Spacemustbeallowed foradefault
valueiftheparameter typecodeispositive. Thespacefollowing apositive typecodewill
contain thedefault valueifthetypecodeisinteger orBCD,otherwise thespacewillcontain
anindexintoanother tablewhichcontains thedefault value.
TypeCode
1=integer
2:real,singleprecision
3=BCD
4=real,doubleprecision
5=complex, single precision
6=complex, double precisionSpaceNeeded forDefault Values
1word
1word
2words
2words
2words
4words
2.4-22 (12-I-69)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Anexampleofallpossibleentries inaparameter listfollbws. Notethatforeachparameter
onlythefirst index wordwill appear intheXMPLBD Block Datasubprogram.
m
l
-3
-___]I2
_&lt;em&gt;L&lt;/em&gt;
-2
3
ABCD
EFGH
-__3_34
l
&lt;strong&gt;I&lt;/strong&gt;
-45
2
___L2
-__E_s6
3
3
4
4
-6Word
8=Integer typecode.
9=Integer default value.
lO=Integer typecode(nodefault value).
II=Real, S.P.typecode.
12=Index intotable containing arealS.P.default value.
13=Real, S.P.typecode (nodefault value).
14=BCDtypecode.
is{16=BCDdefault value (2words).
17=BCDtypecode (nodefault value).
18=Real, D.P.typecode.
19=_Index intotable containing arealD.P.default value.
20 {Noteindex isinbothwords.
21=Real, D.P.typecode (nodefault value).
22=Complex, S.P.typecode.
23{24=Index intotable containing acomplex S.P.default value.
25=Complex, S.P.typecode(nodefault value).
26=Complex, D.P.typecode.
27{28=Index intotable containing therealpartofthecomplex D.P.default value.
29=_inaex in_ocaole containing theimaginary partofthecomplex D.P.
30tdefault value.
31=Complex, D.P.typecode(nodefault value).
Notes
I.MPLtable islocated innamed common block /XGPI2/.
2.Thedefault value table islocated innamed common block /XGPI2X/.
2.4-23(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.4.2.3 XPTDIC (Problem TapeDictionary)
Description
XPTDIC istheProblem TapeDictionary ofdatablocks checkpointed plusother information
needed torestart aproblem.
Created inModules
XGPI, CHKPNT andXCEI.
Table Format
Record Word
1
2
1
2
1
2
3
4
5
6
7
8
9
K
K+I
K+231
I&amp;quot;AFI1716 !,
S
XVPS &amp;mdash;-
BCDBLANKS
BCDBLANKS
__T31DIN 17116(&lt;em&gt;RN
m DBN &amp;mdash;
-EQTET_R] Rl F [
XVPS
EQ
R F
s13113Ol29 17&lt;/em&gt; 1
End-of-fileFirst entry ina
group isaspecial
entry
Repeat thisentry
foralldatablocks
referenced explicitly
orimplicitly in
CHKPNT instructionThis
group
of
entries
is
repeated
foreach
CHKPNT
module
executed
2.4-24&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Record Word Item
0 1,2 ID
l l PR
NAFDescri ption
Header record containing nameXPTDIC (BCD).
Present reelnumber ofProblem Tape. Reels are
numbered sequentially beginning with ReelI.
Nextavailable filenumber onpresent reel.
Files arenumbered sequentially beginning with
file I.
2 S
2 1,2 XVPSSequence number oflastrestart dictionary card
punched out.
BCDnameXVPS. Thefilecorresponding tothis
entry contains named common blocks /XVPS/and
/XCEITB/.
3 R,F
4,5 (blanks)
6 DIN
9RNReelnumber andfilenumber where thefile
corresponding tothisentry islocated. Forthis
entry thereelnumber mustbeone.
BCDblanks indicate special entry.
DMAP instruction number ofDMAPinstruction
following CHKPNT module (i.e., re-entry point).
&lt;em&gt;SCAR record number ofCHKPNT module being
executed.
/,&lt;/em&gt;
9UUI,
EQ
ET
ER
R,F
K,K+l XVPS
K+2 EQ,ET,
ER,R,Fn_+ k1,,v(RED)ofdatahlockbeing u_ua u,_ name __
checkpointed.
Equivalence flag. EQ=lindicates data block is
equivalenced toanother datablock.
Endoftapeflag. ET=lindicates that data
block issplit across tworeels ofproblem tape.
Endoflogical record flag. ER=lindicates
thatthecomplete logical record waswritten out
prior tochanging reels when ET=I.
Reelnumber andfilenumber where thefile
corresponding tothisentry islocated. For
purged ornot-generated datablocks, R=0and
F=O.
BCDnameXVPS. Thefilecorresnondina tothis
entry contains named common blocks /XVPS/,
/XCEITB/and/SYSTEM/.
Seeword9fordescriptions.
Notes
I.
2.
3.
Â°Allentries areinteger unless otherwise noted.
TheXPTDIC table isalways thelastfileontheProblem Tape.
XGPIgenerates records O,landthefirst entry ofrecord 2.CHKPNT modules add
entries torecord 3.XCEIdrops entries fromrecord 2whenaREPTDMAPinstruction
transfers control tothetopofaDMAPloon.
XCSAalsocreates aXPTDIC table whenproblem isbeing restarted. This soecial XPTDIC
table iscreated fromtherestart dictionary anditsformat isessentially thesameas
described above except thatthere arenospecial entries.
2.4-25&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.4PVT(Parameter ValueTable)
Description
TheParameter Value Table contains theparameter names andvalues ofallparameters input
bymeans ofthePARAM bulkdatacard.
Created inModule
IFP.
Table Format
Record Word Item
0 1,2 Header record contains namePVT(BCD).
1,2
3
4
3+LNameofparameter (BCD)
Type codeforparameter value
Value ofparameter. Type codes
andcorresponding lengths, L,of
values aregiven intable below.repeat
forall
parameters
onPAP_AM
cards.
Notes
TypeCode Meaning ofCode
Integer
Real, single precision
BCD
Real, double precision
Complex, single precision
Complex, double precisionCorresnonding
Length inWords
l
l
2
2
2
4
I.IFPdoesnotcreate PVTifnoPARAM cards exist intheBulk DataDeck.
2.PVTiswritten ontheProblem Tapeas2ormore records (aheader record andlrecord for
each PARAM card).
3.ThePVTtable islocated innamed common block /XPVT/.
2.4-26&lt;/p&gt;
&lt;p&gt;EXECLFTIVETABLEDESCRIPTIONS
2.4.2.5XCSA(Executive ControlTable)
Description
Executive control table derived from theExecutive Control Deck.
Created inModule
XCSA.
TableFormat
Record Word
0 l
2,3
4,5
6,7
l l
2
3,4
5
6
2 1
N
1
2
3
L
L+I
M
M+IItem
BCDwordXCSA-header ID.
BCDwordS_L_Dictionary ofcontents ofrecords
BCDwordDMAP_tofollow. Doesnotneedtobein
BCDwordMED)thisorder, norisMEDalways present.
Approach code iStart code
Alter parameters S_Lrecord
Solution number _Subset number
nn_kl^ f-_P_A nM_D &lt;em&gt;n_m&lt;/em&gt;
oruser_enerated DMAP
program (18words percard
image). )DMAPrecord
(BCDinformation)
Number ofDMAPinstructions
Number ofwords perISltable entry.
IS1table (Module Execution Decision Table).
Number ofentries inJNMtable.
JNMtable (File NameTable)
Number ofentries inINMtable
INMtable (Card NameTable)
4 End-of-fileMEDrecord
included
only if
aooroach
calls for
aRigid
Format
Notes
I.Datablock XCSA iswritten ontheProblem Tape.
2.Amore detailed description oftables ISl,JNMand INMisgiven intheModule
Functional Description formodule XCSA, section 4.2.
2.4-27&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.6XALTER(Executive AlterTable)
Description
XALTER isgenerated fromtheALTER data intheExecutive Control Deck.
Created inModule
XCSA.
Table Format
Record Word
0 1,2
l 1,2
l
18Item
BCDwordXALTER -header record
Numbers ofDMAPinstructions
tobealtered. (Integers).
Card image (BCD)
N End-of-file
Notes
XALTER datablock iswritten ontheProblem Tape.Zeroormoreofthese
records. Repeat until
next2word record
encountered.Repeat 1or
more times
until E_F
encountered.
2.4-28&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.7LNKSPC(LinkSpecification Table-ResidentBase)
Descri ption
ThisLinkSpecification Table (seealso2.4.1.9) contains anentry foreachexecutable
DMAPmodule available within theNASTRANsystem. Eachentry contains: a)theDMAPmodule
name, b)themodule&amp;rsquo;s subroutine entry point nameandc)akeyindicating thelinks inwhich
themodule resides foreachoffourmachine types.
Created inModule
LNKSPC dataisstored bytheXBSBD Block Datasubprogram inmodule XGPI (4.7).
Table Format
Word l
2
3
4
5
6
7
8
9LLINK
DMAPModule
Name
Entry Point
Name
Key#1
Key#2
Key#3
Key#4Entry #I(Sample)
Word
1
2,3
4,5
6
7
8
9Item
LLINK
DMAPModule Name
Entry Point Name
Key#1
Key#2
Key#3
Key#4Description
Length oftable inwords (excluding word l)
DMAPname-8 characters (4characters/word)
Entry name-8 characters (4characters/word)
Linkresidence keyformachine type#1
Linkresidence keyformachine type#2
Linkresidence keyformachine type#3
Linkresidence keyformachine type#4
2.4-29&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
ThemachinetypecodenumberisthesameasthatdefinedintheMACHwordoftheSYSTEM
(2.4.1.8)table.EachbitwithintheKeywordspecifiesalinknumberthatistocontainthat
module.Bitsarenumberedfromrighttoleft;therightmost(leastsignificant) bitspecifiesthatthemoduleistoresideinlinkl,etc.Forexample,ifaparticular Key
contained26(binaryOllOlO),onlylinks2,4and5wouldcontainthespecifiedmodule.
Notes
I.TheL_!KSPCtablemustcontainanentryforeachexecutable modulethatisinthe
MPL(2.4.2.2)table.
2.TheLNKSPCtableislocatedin/XLKSPC/.
2.4-30&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.8IFPXO(ModifiedRestartTable)
Description
IFPXO records thetypes ofchanges totheinput datawhich weremade during arestart. In
addition, itclassifies each typeofchange astosubstantive (solution affecting) ornonsub-
stantive (output onlyaffecting). Thebasic dataisstored inpacked format, 31bits totheword.
Theuseofthisarray inrestart anditscompanion /IFPXI/isdescribed insection l.lO,
Created inModule(s)
IFPI, XS@RT andIFPandreadbyXGPI.
Table Format
Word Item
l N
2 Il
3 Ll
4 I2
5 L2
6 I3
7 L3
8through 18 IB
19through 29Number ofpairs (I,L) tofollow.
Pointer tofirst word in/IFPXO/that isused
toflagmodified bulkdata.
Nu_er ofwords reserved formodified bulkdata
flags.
Pointer tofirst word in/IFPXO/that isused
toflagmodified CaseControl data.
Number ofwords reserved formodified Case
Control dataflags.
Notused.
Array containing flags which specify what input
hasbeenmodified forrestart (themeaning of
eachbitcanbedetermined from/IFPXI/.(See
section 2.4.2.9).
Array which specifies which bitsintheIBarray
caninitiate amodified restart.
2.4-31 (311171)&lt;/p&gt;
&lt;p&gt;UA[ABLOCKANDTABLEDESCRIPTIONS
2.4.2.9IFPXI(MasterCardNameTable)
Description
IFPXl contains mnemonics forthevarious cardtypes (anddatatypes) which canbesignificant
forrestart. Itisactually akeyintocommon block IFPXO (seesection 2.4.2.8).
array isdescribed insection l.lO.
Created inModule
Modules IFPI, XSORT, IFPandXGPIreadthisarray.
Table Format
Word No. BitNo.
InIFPXl InIFPXO Contents
l 31O
2 l GRID
4 2 GRDSET
6 3 BEAMOR
8 4 SEQGP
l0 5 CORDIR
12 6 CORDIC
14 7 CORDIS
16 8 CORD2R
18 9 CORD2C
20 lO CORD2S
22 II PLOTEL
24 12 SPCI
26 13 SPCADD
28 14 SUPORT
30 15 OMIT
32 16 SPC
34 17 MPC
36 18 FORCETheuseofthis
Output
Only (PMR)
Number of
CardTypes
YesSupported
NO
2.4-32 (3111;I)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
WordNo. BitNo. OutputInIFPXI InIFPXO Contents Only (PMR)
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
9619
20
21
22
23
24
25
26
27
28
29
30
31
32(word 2)
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48M_MENT
FIERCE1
M@MENTI
F_RCE2
M@MENT2
PL_)AD
SL_AD
GRAV
TEMP
GENEL
PROD
PTUBE
PVISC
PBEAM
PTRIAI
PTRIA2
PTRBSC
PTRPLT
PTRMEM
PQUADI
PQUAD2
PQDPLT
PQDMEM
PSHEAR
PTWIST
PMASS
PDAMP
PELAS
C_NR_D
CR_DSupported
No
2.4-33 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
49
5O
51
52
53
54
55
56
57
58
59
60
61
62
63(word 3)
64
65
66
64
68
69
7O
71
72
73
74
75
76
7798
I00
102
104
106
108
II0
112
114
116
118
120
122
124
126
128
130
132
134
136
138
140
142
144
146
148
150
152
154CTUBE
CVISC
CBEAM
CTRIAI
CTRIA2
CTRBSC
CTRPLT
CTRMEM
CQUADI
CQUAD2
CQDPLT
CQDMEM
CSHEAR
CTWIST
CONMI
CONM2
CMASSI
CMASS2
CMASS3
CMASS4
CDAMPI
CDAMP2
CDAMP3
CDAMP4
CELASI
CELAS2
CELAS3
CELAS4
MAT1Supported
No
2,4-34 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P17</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_017/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2Executive Tables NotPermanentl_ CoreResident
2.4.2.1 &lt;em&gt;SCAR (Operation Sequence Control Array)
Description
TheOperation Sequence Control Array (&lt;em&gt;SCAR) controls thesequence ofmodules executed and
aidsincommunicating data between modules.
The_SCAR isgenerated fromaDMAPinstruction sequence supplied bytheuserorselected
fromtheRigid Format library. Ingeneral, an_SCAR entry isaDMAPstatement which hasbeen
translated toamore readily usable formforinternal use.
Thefour_SCAR entry format types are:
I.Type lorF(functional) format isusedforallfunctional modules exceot outout
processors.
2.Type 2or&lt;/em&gt;(output) format isusedforoutput processors.
3.Type 3orC(control) format isusedforREPT, JUMP, C_NDandENDDMAPinstructions.
4.Type 4orE(executive) format isusedforSAVE, CHKPNT, PURGE andEQUIV DMAP
instructions.
Created inModule
XGPI.
Table Format
Word l
2
3
4
5
6
7
NRN
MI LTi__7 L&lt;/em&gt;_ _.i
Module
Name
-El DINS31
Formatofthis
section isdependent
onvalueofTEntry Header Section
Entry DataSection
2.4-15&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
1
2
3
4,5
6Item
N
RN
MI
Name
EX
DINDescription
Integer -number ofwords inentry.
Integer -record number ofentryin_SCARtable.
Integer -module indexnumber assigned according tomodule&amp;rsquo;s
position inMPLandusedtoaccess themodule&amp;rsquo;s linkspecifica-
tionsin/XLINK/.
Integer -format typecode(l,2,3,or4)fordatasection
ofentry.
BCD-module nameissameasDMAPinstruction nameexcept when
T=4.
Execute flag. EX=1indicates module istobeexecuted.
Integer -DMAPinstruction number whichgenerated thisentry.
DataSection Format forTypeIorFFormat:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
IO+NIP&lt;em&gt;3+NOP&lt;/em&gt;3
II+NIP&lt;em&gt;3+NOP&lt;/em&gt;3NIP
DATABLOCK
NAME
NTU
i
N_P
DATABLOCK
NAME
___ L1_s_
NS
NP
-C IL
(Notused)Sample entry
Sample entry
Sample entry
(variable length)Input
DataBlock
Subsection
Output
DataBlock
Subsection
Parameter
Subsection
2.4-!6&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word
7
8,9
lO
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3,
lO+NIP&lt;em&gt;3
II+NIP&lt;/em&gt;3
9+NIP&lt;em&gt;3 +
_fP&lt;/em&gt;3
lO+NIP&lt;em&gt;3 +
N@P&lt;/em&gt;3
II+NIP&lt;em&gt;3 +
N_P&lt;/em&gt;3Item
NIP
{tAME
AP
LTU
TP
NTU
N_P
NAME
AP,LTU,
TP,NTU
NS
NP
CV
ILDescription
Integer -number ofdatablocks input tomodule asspecified
inMPL.
BCD-nameoffirst input datablock specified inDMAPinstruc-
tionorzero ifnonespecified.
Append flagusedbysubroutine XSFAandsetbyX_SGEN ifAPPEND
isspecified fordatablock inaFILEDMAP instruction.
Integer -lasttimeused. _SCAR record n_ber ofentry a_ter
which datablock willnolonger besaved.
Tapeflagusedbysubroutine XSFAandsetbyX@SGEN iftapeis
specified fordatablock inaFILEDMAPinstruction.
Integer -nexttimeused. _SCAR record number ofentry where
datablock isnextreferenced.
Integer -number ofdata blocks output frommodule asspecified
inMPL.
BCD-nameoffirst output datablock specified inDMAP instruc-
tionorzeroifnonespecified.
Samedescriptions aswordlO.
Integer -number ofscratch datablocks usedbymodule as
specified inMPL.
Integer -number ofparameters usedbymodule asspecified in
MPL.
Constant/variable flag. Flag indicates meaning ofIL.
Integer -VPSindex/length ofconstant. IfCV=0theparameter
isaconstant whose value isstored inthenext ILwords (i.e.,
words 12+NIP&lt;em&gt;3 +NQIP&lt;/em&gt;3 through II+NIP&lt;em&gt;3 +N_P&lt;/em&gt;3 +IL).
IfCV=ltheparameter isavariable whose value isstored in
theVPStable. ILpoints tothevalue inVPS.
2.4-17&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
DataSection Format forType2or0Format:
Word
I0
8+NIP&lt;em&gt;3
9+NIP&lt;/em&gt;3
IO+NIP*38
9NIP
DATABLOCK
NAME
LTU NTU
I 15
INS
NP
&amp;ndash;31Sample entry
ISampl eentry
I(variable length)InputDataBlock
Subsection
IParameter
Subsection
Type1format description isapplicable totype2format above.
DataSection Format forType3orCFormat:
Word7=NI131RRN1716I11
Word Item Description
N RRN Integer -re-entry record number. Indicates OSCARrecord to
jumptoforJUMP,REPTandC_NDDMAPinstructions. Not
applicable forEXITsoRRN:O.
Integer -indexintoXCEITBL forREPTorEXITDMAPinstruction.
Pointer toparameter valueinXVPStable ifC@NDDMAP
instruction. Notapplicable forJUMPsoI:O.
2.4-18&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLE DESCRIPTIONS
DataSection Formats forType4orEFormats:
Word7
8
9
NNP
IV
IB Sample entryFormat for
SAVEDMAP
instruction
Word
7Item
NP
IV
IBDescription
Integer -number ofparameter values tobesaved (i.e. number
ofentries).
Integer -pointer toparameter value inVPS.
Integer -pointer toparameter value inblank common.
Word 7
8
9
N-l
NNDB
FIRST DATA
BLOCK NAME
LASTDATA
BLOCK NAMEFormat forCHKPNT
DMAP instruction
Word
7
8thru NItem
NDB
NAMESDescription
Integer -number ofdatablocks names inlist.
BCD-listofdatablocks tobecheckpointed.
2.4-19&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE _ESCRIPTIONS
Word7
8
9NDB
DATABLOCK
J _-
NAME
:
IVFormat forPURGE orEQUIV
DMAPinstruction
Word
7
8,9
N
Notes
I.
2.Item
NDB
N_4E
IVDescription
Integer -number ofdata block names infirst qroun.
maybeoneormoregroups.
BCD-name offirst datablock infirst group.
Integer -pointer toparameter value inVPStable.There
_SCAR islocated innamed common block /XGPII/while module XGPI isgenerating it.
After generating _SCAR andprior toexiting XGPIthe_SCAR iswritten ontheDataPool
File. The_SCAR fileheader IDisX_SCAR.
2.4-20&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.2MPL(ModulePropertyList)
Description
TheModule Properties Listcontains information needed bythemodule XGPItocorrectly
generate OSCAR table entries forexecutable DMAPinstructions and/or todetermine whether or
nottheDMAP instructions adhere tothecalling sequence described insection 4,Module
Functional Descriptions.
Created inModule
XGPI(Block DataProgram XMPLBD).
Table Format
There aretwoformats usedintheMPL,oneforDeclarative (FILE, BEGIN, LABEL), Executive
(CHKPNT, EQUIV, PURGE, SAVE) andControl (REPT, JUMP, C_ND, EXIT, END) DMAPmodules andtheother
forfunctional modules. Allentries intheMPLareinteger except formodule names which are
BCDandBCDparameter values.
Format forDeclarative, Executive andControl Modules:
Word
iiN4i2 Module
3 Name
4 F
Word
l
2,3
4Item
N
Name
FDescription
Nu_er ofwords inentry.
NameofDMAPmodule.
_SCAR format typecode
3=Control module (Cformat)
4=Executive module (Eformat)
5=Declarative module (Dformat)
2.4-21&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Format forFunctional Modules:
Word l,
2
3
4
5
6
7
8
NN
Module
Name
F
IP
@P
S
Parameter ListIVariable Length
Word
I-3
4
5 IP
6 @P
7 S
8-NItem
FDescription
Sameasformat forDeclarative, Executive andControl modules.
F:1implies module hasinputandoutputdatablocks
F:2implies module hasnooutput datablocks, e.g.,
_FP,SETVALetc.
Numberofinputdatablocks.
Numberofoutputdatablocks.
Number ofscratch datablocks.
Parameter List (omit ifnoparameters).
Theparameter listforamodule contains thetypesofallparameters residing inblank
common thatarereferenced bythemodule. Theorderoftheparameters intheMPLentrymust
coincide withtheorderoftheparameters inblankcommon. Spacemustbeallowed foradefault
valueiftheparameter typecodeispositive. Thespacefollowing apositive typecodewill
contain thedefault valueifthetypecodeisinteger orBCD,otherwise thespacewillcontain
anindexintoanother tablewhichcontains thedefault value.
TypeCode
1=integer
2:real,singleprecision
3=BCD
4=real,doubleprecision
5=complex, single precision
6=complex, double precisionSpaceNeeded forDefault Values
1word
1word
2words
2words
2words
4words
2.4-22 (12-I-69)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Anexampleofallpossibleentries inaparameter listfollbws. Notethatforeachparameter
onlythefirst index wordwill appear intheXMPLBD Block Datasubprogram.
m
l
-3
-___]I2
_&lt;em&gt;L&lt;/em&gt;
-2
3
ABCD
EFGH
-__3_34
l
&lt;strong&gt;I&lt;/strong&gt;
-45
2
___L2
-__E_s6
3
3
4
4
-6Word
8=Integer typecode.
9=Integer default value.
lO=Integer typecode(nodefault value).
II=Real, S.P.typecode.
12=Index intotable containing arealS.P.default value.
13=Real, S.P.typecode (nodefault value).
14=BCDtypecode.
is{16=BCDdefault value (2words).
17=BCDtypecode (nodefault value).
18=Real, D.P.typecode.
19=_Index intotable containing arealD.P.default value.
20 {Noteindex isinbothwords.
21=Real, D.P.typecode (nodefault value).
22=Complex, S.P.typecode.
23{24=Index intotable containing acomplex S.P.default value.
25=Complex, S.P.typecode(nodefault value).
26=Complex, D.P.typecode.
27{28=Index intotable containing therealpartofthecomplex D.P.default value.
29=_inaex in_ocaole containing theimaginary partofthecomplex D.P.
30tdefault value.
31=Complex, D.P.typecode(nodefault value).
Notes
I.MPLtable islocated innamed common block /XGPI2/.
2.Thedefault value table islocated innamed common block /XGPI2X/.
2.4-23(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCK ANDTABLE DESCRIPTIONS
2.4.2.3 XPTDIC (Problem TapeDictionary)
Description
XPTDIC istheProblem TapeDictionary ofdatablocks checkpointed plusother information
needed torestart aproblem.
Created inModules
XGPI, CHKPNT andXCEI.
Table Format
Record Word
1
2
1
2
1
2
3
4
5
6
7
8
9
K
K+I
K+231
I&amp;quot;AFI1716 !,
S
XVPS &amp;mdash;-
BCDBLANKS
BCDBLANKS
__T31DIN 17116(&lt;em&gt;RN
m DBN &amp;mdash;
-EQTET_R] Rl F [
XVPS
EQ
R F
s13113Ol29 17&lt;/em&gt; 1
End-of-fileFirst entry ina
group isaspecial
entry
Repeat thisentry
foralldatablocks
referenced explicitly
orimplicitly in
CHKPNT instructionThis
group
of
entries
is
repeated
foreach
CHKPNT
module
executed
2.4-24&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
Record Word Item
0 1,2 ID
l l PR
NAFDescri ption
Header record containing nameXPTDIC (BCD).
Present reelnumber ofProblem Tape. Reels are
numbered sequentially beginning with ReelI.
Nextavailable filenumber onpresent reel.
Files arenumbered sequentially beginning with
file I.
2 S
2 1,2 XVPSSequence number oflastrestart dictionary card
punched out.
BCDnameXVPS. Thefilecorresponding tothis
entry contains named common blocks /XVPS/and
/XCEITB/.
3 R,F
4,5 (blanks)
6 DIN
9RNReelnumber andfilenumber where thefile
corresponding tothisentry islocated. Forthis
entry thereelnumber mustbeone.
BCDblanks indicate special entry.
DMAP instruction number ofDMAPinstruction
following CHKPNT module (i.e., re-entry point).
&lt;em&gt;SCAR record number ofCHKPNT module being
executed.
/,&lt;/em&gt;
9UUI,
EQ
ET
ER
R,F
K,K+l XVPS
K+2 EQ,ET,
ER,R,Fn_+ k1,,v(RED)ofdatahlockbeing u_ua u,_ name __
checkpointed.
Equivalence flag. EQ=lindicates data block is
equivalenced toanother datablock.
Endoftapeflag. ET=lindicates that data
block issplit across tworeels ofproblem tape.
Endoflogical record flag. ER=lindicates
thatthecomplete logical record waswritten out
prior tochanging reels when ET=I.
Reelnumber andfilenumber where thefile
corresponding tothisentry islocated. For
purged ornot-generated datablocks, R=0and
F=O.
BCDnameXVPS. Thefilecorresnondina tothis
entry contains named common blocks /XVPS/,
/XCEITB/and/SYSTEM/.
Seeword9fordescriptions.
Notes
I.
2.
3.
Â°Allentries areinteger unless otherwise noted.
TheXPTDIC table isalways thelastfileontheProblem Tape.
XGPIgenerates records O,landthefirst entry ofrecord 2.CHKPNT modules add
entries torecord 3.XCEIdrops entries fromrecord 2whenaREPTDMAPinstruction
transfers control tothetopofaDMAPloon.
XCSAalsocreates aXPTDIC table whenproblem isbeing restarted. This soecial XPTDIC
table iscreated fromtherestart dictionary anditsformat isessentially thesameas
described above except thatthere arenospecial entries.
2.4-25&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.4PVT(Parameter ValueTable)
Description
TheParameter Value Table contains theparameter names andvalues ofallparameters input
bymeans ofthePARAM bulkdatacard.
Created inModule
IFP.
Table Format
Record Word Item
0 1,2 Header record contains namePVT(BCD).
1,2
3
4
3+LNameofparameter (BCD)
Type codeforparameter value
Value ofparameter. Type codes
andcorresponding lengths, L,of
values aregiven intable below.repeat
forall
parameters
onPAP_AM
cards.
Notes
TypeCode Meaning ofCode
Integer
Real, single precision
BCD
Real, double precision
Complex, single precision
Complex, double precisionCorresnonding
Length inWords
l
l
2
2
2
4
I.IFPdoesnotcreate PVTifnoPARAM cards exist intheBulk DataDeck.
2.PVTiswritten ontheProblem Tapeas2ormore records (aheader record andlrecord for
each PARAM card).
3.ThePVTtable islocated innamed common block /XPVT/.
2.4-26&lt;/p&gt;
&lt;p&gt;EXECLFTIVETABLEDESCRIPTIONS
2.4.2.5XCSA(Executive ControlTable)
Description
Executive control table derived from theExecutive Control Deck.
Created inModule
XCSA.
TableFormat
Record Word
0 l
2,3
4,5
6,7
l l
2
3,4
5
6
2 1
N
1
2
3
L
L+I
M
M+IItem
BCDwordXCSA-header ID.
BCDwordS_L_Dictionary ofcontents ofrecords
BCDwordDMAP_tofollow. Doesnotneedtobein
BCDwordMED)thisorder, norisMEDalways present.
Approach code iStart code
Alter parameters S_Lrecord
Solution number _Subset number
nn_kl^ f-_P_A nM_D &lt;em&gt;n_m&lt;/em&gt;
oruser_enerated DMAP
program (18words percard
image). )DMAPrecord
(BCDinformation)
Number ofDMAPinstructions
Number ofwords perISltable entry.
IS1table (Module Execution Decision Table).
Number ofentries inJNMtable.
JNMtable (File NameTable)
Number ofentries inINMtable
INMtable (Card NameTable)
4 End-of-fileMEDrecord
included
only if
aooroach
calls for
aRigid
Format
Notes
I.Datablock XCSA iswritten ontheProblem Tape.
2.Amore detailed description oftables ISl,JNMand INMisgiven intheModule
Functional Description formodule XCSA, section 4.2.
2.4-27&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.4.2.6XALTER(Executive AlterTable)
Description
XALTER isgenerated fromtheALTER data intheExecutive Control Deck.
Created inModule
XCSA.
Table Format
Record Word
0 1,2
l 1,2
l
18Item
BCDwordXALTER -header record
Numbers ofDMAPinstructions
tobealtered. (Integers).
Card image (BCD)
N End-of-file
Notes
XALTER datablock iswritten ontheProblem Tape.Zeroormoreofthese
records. Repeat until
next2word record
encountered.Repeat 1or
more times
until E_F
encountered.
2.4-28&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.7LNKSPC(LinkSpecification Table-ResidentBase)
Descri ption
ThisLinkSpecification Table (seealso2.4.1.9) contains anentry foreachexecutable
DMAPmodule available within theNASTRANsystem. Eachentry contains: a)theDMAPmodule
name, b)themodule&amp;rsquo;s subroutine entry point nameandc)akeyindicating thelinks inwhich
themodule resides foreachoffourmachine types.
Created inModule
LNKSPC dataisstored bytheXBSBD Block Datasubprogram inmodule XGPI (4.7).
Table Format
Word l
2
3
4
5
6
7
8
9LLINK
DMAPModule
Name
Entry Point
Name
Key#1
Key#2
Key#3
Key#4Entry #I(Sample)
Word
1
2,3
4,5
6
7
8
9Item
LLINK
DMAPModule Name
Entry Point Name
Key#1
Key#2
Key#3
Key#4Description
Length oftable inwords (excluding word l)
DMAPname-8 characters (4characters/word)
Entry name-8 characters (4characters/word)
Linkresidence keyformachine type#1
Linkresidence keyformachine type#2
Linkresidence keyformachine type#3
Linkresidence keyformachine type#4
2.4-29&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
ThemachinetypecodenumberisthesameasthatdefinedintheMACHwordoftheSYSTEM
(2.4.1.8)table.EachbitwithintheKeywordspecifiesalinknumberthatistocontainthat
module.Bitsarenumberedfromrighttoleft;therightmost(leastsignificant) bitspecifiesthatthemoduleistoresideinlinkl,etc.Forexample,ifaparticular Key
contained26(binaryOllOlO),onlylinks2,4and5wouldcontainthespecifiedmodule.
Notes
I.TheL_!KSPCtablemustcontainanentryforeachexecutable modulethatisinthe
MPL(2.4.2.2)table.
2.TheLNKSPCtableislocatedin/XLKSPC/.
2.4-30&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
2.4.2.8IFPXO(ModifiedRestartTable)
Description
IFPXO records thetypes ofchanges totheinput datawhich weremade during arestart. In
addition, itclassifies each typeofchange astosubstantive (solution affecting) ornonsub-
stantive (output onlyaffecting). Thebasic dataisstored inpacked format, 31bits totheword.
Theuseofthisarray inrestart anditscompanion /IFPXI/isdescribed insection l.lO,
Created inModule(s)
IFPI, XS@RT andIFPandreadbyXGPI.
Table Format
Word Item
l N
2 Il
3 Ll
4 I2
5 L2
6 I3
7 L3
8through 18 IB
19through 29Number ofpairs (I,L) tofollow.
Pointer tofirst word in/IFPXO/that isused
toflagmodified bulkdata.
Nu_er ofwords reserved formodified bulkdata
flags.
Pointer tofirst word in/IFPXO/that isused
toflagmodified CaseControl data.
Number ofwords reserved formodified Case
Control dataflags.
Notused.
Array containing flags which specify what input
hasbeenmodified forrestart (themeaning of
eachbitcanbedetermined from/IFPXI/.(See
section 2.4.2.9).
Array which specifies which bitsintheIBarray
caninitiate amodified restart.
2.4-31 (311171)&lt;/p&gt;
&lt;p&gt;UA[ABLOCKANDTABLEDESCRIPTIONS
2.4.2.9IFPXI(MasterCardNameTable)
Description
IFPXl contains mnemonics forthevarious cardtypes (anddatatypes) which canbesignificant
forrestart. Itisactually akeyintocommon block IFPXO (seesection 2.4.2.8).
array isdescribed insection l.lO.
Created inModule
Modules IFPI, XSORT, IFPandXGPIreadthisarray.
Table Format
Word No. BitNo.
InIFPXl InIFPXO Contents
l 31O
2 l GRID
4 2 GRDSET
6 3 BEAMOR
8 4 SEQGP
l0 5 CORDIR
12 6 CORDIC
14 7 CORDIS
16 8 CORD2R
18 9 CORD2C
20 lO CORD2S
22 II PLOTEL
24 12 SPCI
26 13 SPCADD
28 14 SUPORT
30 15 OMIT
32 16 SPC
34 17 MPC
36 18 FORCETheuseofthis
Output
Only (PMR)
Number of
CardTypes
YesSupported
NO
2.4-32 (3111;I)&lt;/p&gt;
&lt;p&gt;EXECUTIVETABLEDESCRIPTIONS
WordNo. BitNo. OutputInIFPXI InIFPXO Contents Only (PMR)
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
9619
20
21
22
23
24
25
26
27
28
29
30
31
32(word 2)
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48M_MENT
FIERCE1
M@MENTI
F_RCE2
M@MENT2
PL_)AD
SL_AD
GRAV
TEMP
GENEL
PROD
PTUBE
PVISC
PBEAM
PTRIAI
PTRIA2
PTRBSC
PTRPLT
PTRMEM
PQUADI
PQUAD2
PQDPLT
PQDMEM
PSHEAR
PTWIST
PMASS
PDAMP
PELAS
C_NR_D
CR_DSupported
No
2.4-33 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
49
5O
51
52
53
54
55
56
57
58
59
60
61
62
63(word 3)
64
65
66
64
68
69
7O
71
72
73
74
75
76
7798
I00
102
104
106
108
II0
112
114
116
118
120
122
124
126
128
130
132
134
136
138
140
142
144
146
148
150
152
154CTUBE
CVISC
CBEAM
CTRIAI
CTRIA2
CTRBSC
CTRPLT
CTRMEM
CQUADI
CQUAD2
CQDPLT
CQDMEM
CSHEAR
CTWIST
CONMI
CONM2
CMASSI
CMASS2
CMASS3
CMASS4
CDAMPI
CDAMP2
CDAMP3
CDAMP4
CELASI
CELAS2
CELAS3
CELAS4
MAT1Supported
No
2,4-34 (3/I/71)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P18</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_018/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
156
158
160
162
164
166
168
170
172
174
176
178
18O
182
184
186
188
190
192
194
196
198
200
202
204
206
208
210
212
21478
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94(word 4)
95
96
97
98
99
lO0
lOl
I02
I03
I04
I05
I06
I07MAT2
CTRIARG
CTRAPRG
DEFORM
PARAM
MPCADD
LOAD
EIGR
EIGB
EIGC
REACT
MATSI
MATTI
OMITI
TABLEMI
TABLEM2
TABLEM3
TABLEM4
TABLESI
TEMPD
TABLES2
TABLES3
TABLES4
MATT2
MATS2
CTORDRG
SPOINT
SEQD
SEQDBFEYes
YesSupported
No
No
No
FORCE
FORCE
2.4-35 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
216
218
220
222
224
226
228
230
232
234
236
238
240
242
244
246
248
25O
252
254
256
258
260
262
264
266
268
27O
272
274I08
109
II0
III
112
113
114
115
116
117
118
119
120
121
122
123
124
125(word 5)
126
127
128
129
130
131
132
133
134
135
136
137QDSEP
SPQUADI
SPQUAD2
SPQDMEM
SPQDPLT
ZI
CTRIA3
PTRIA3
SETRBFE
VECDN
VECGP
DMI
DMIG
PTORDRG
MAT3
DLOAD
EPOINT
FREQI
FREQ
N_LINI
NOLIN2
NOLIN3
NOLIN4
RLOADI
RLOAD2
TABLED1
TABLED2
SEQEP
TF
TICSupported
FORCE
FORCE
FORCE
F_RCE
F_RCE
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
2.4-36 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156(word 6)
157
158
159
160
161
162
163
164
165
166
167276
278
280
282
284
286
288
290
292
294
296
298
300
302
304
306
308
310
312
314
316
318
320
322
324
326
328
330
332
334TLBADI
TL_AD2
TABLED3
TABLED4
TSTEP
DSFACT
AXIC
RINGAX
CC_NEAX
PCBNEAX
SPCAX
MPCAX
_MITAX
SUPAX
P_INTAX
SECTAX
PRESAX
TEMPAX
F_RCEAX
M_MAX
EIGP
MASSC
EDFIR
DF_RM
TABDMPI
TABDMP2
TABDMP3
TABDMP4
FREQ2
CQUAD3Supported
F_RCE
FQRCE
F_RCE
2.4-37 {311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
336
338
340
342
344
346
348
35O
352
354
356
358
360
362
364
366
368
37O
372
374
376
378
38O
382
384
386
388
390
392
394168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197PQUAD3
SPQUAD3
SETR
SPTRIAI
SPTRIA2
SPTRMEM
SPTRBSC
SPTRPLT
SECL
SECP
SEPTRIA3
BAROR
CBAR
PBAR
DAREA
DELAY
DPHASE
PLFACT
CGENEL
PGENEL
ELDELE
MATT3
RFORCE
TABRNDI
TABRND2
TABRND3
TABRND4
RANDPS
RANDTI
RANDT2Supported
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
F_RCE
FORCE
FORCE
FORCE
FORCE
F_RCE
2.4-38 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word No. BitNo. Output
InIFPXl InIFPXO Contents Only (PMR)&amp;quot;
396
398
400
402-598
600
602
604
606
608
610
612
614
616
618
620
622
624
626
628
630
632
634
636
638
640
642
644
646
64819B
199
200
201-299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324PLBAD1
PLEAD2
DTI
Notused
C_UPMASS
GRDPNT
WTMASS
IRES
LFREQ
HFREQ
LM_DES
G
W3
W4
M_DACC
MPC$
sPc$
L_AD$
METHODS
DEF(BRM$
TEMPLD$
TEMPMT$
IC$
ACUT$
LB_P$
LB_PI$
DLIBAD$
FREQ$
TF$Yes
Yes
Yes
YesSupported
2.4-39 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
650
652
654
656
658
660
662
664
666
668
670
672
674
676
678
680
682325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
346
341PLOTS Yes
TSTEP$
POUTS Yes
TEMPMX$
DSC_$
K2PP$
M2PP$
B2PP$
CMETH_D$
SDAMP$
INERTIA$
NLFORCE$
XYOUT$ Yes
DELETES
RANDOM$
AXYOUT$ Yes
NOLOOP$
NotUsedSupported
F_RCE
F_RCE
2.4-40 (3/I/71)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5 MISCELLANEOUS TABLE DESCRIPTIONS.
Thefollowing isanalphabetical index ofmiscellaneous table descriptions.
SectionNu_er TableName Where Stored Pa_eNumber
2.5.2.2 BITPi_S /BITP_S/ 2.5-7
2.5.2.4 CHAR94 /CHAR94/ 2.5-l0
2.5.2.7 CHRDRW /CHRDRW/ 2.5-13
2.5.1.6 DESCRP /DESCRP/ 2.5-3
2.5.2.1 GPTAI /GPTAI/ 2.5-6
2.5.1.5 MSGX /MSGX/ 2.5-3
2.5.l.8 NJ_MES /NAMES/ 2.5-4
2.5.l.l _SCENT /&lt;em&gt;SCENT/ 2.5-2
2.5.I.2 i_UTPUT /&lt;/em&gt;,UTPUT/ 2.5-2
2.5.2.3 PLTDAT /PLTDAT/ 2.5-8
&lt;em&gt;.5.i.&lt;/em&gt; &lt;em&gt;TTME /STIME/ 2.5-2
2.5.2.6 SYMBLS /SYMBLS/ 2.5-12
2.5.I.7 TW&lt;/em&gt; /TWO/ 2.5-4
2.5.1.9 TYPE /TYPE/ 2.5-4
2.5.l,4 XMDMSK /XMDMSK/ 2.5-3
2.5.2.5 XXPARM /XXPARM/ 2.5-Il
2.5-1(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1Miscellaneous TablesWhichArePermanently CoreResident.
2.5.1.1 OSCENT (_SCAR Entry)
Description
A200wordstorage arraycontaining the_SCARentry(record) currently beingprocessed.
Created inModule
Theentryisreadfromthe_SCARandstoredinOSCENTbytheXSEMi(section 3,3.7)sub-
routine. Otherexecutive routines thatrequire details ofthecurrent entrywillsearch _SCENT.
TableFormat
TheOSCENTformat isidentical tothe_SCAR(section 2.4.2.1) entryitcurrently contains.
2.5.1.2 _UTPUT (Output headings)
Descri ption
Astorage array containing problem title, subtitle, label andvarious headings required by
thePAGE(section 3.4.24) routine toproperly annotate theNASTRAN output.
Created inModule
Thetitle, subtitle andlabel aretaken fromCase Control Deckcards andstored in_UTPUI
byIFPI (section 4.3). Other heading lines maybestored byoutput modules prior tocalling
PAGE.
TableFormat
_UTPUT contains sufficient space forseven 128character lines. Thefirst three lines con-
tainthetitle, subtitle, andlabel. Thesubsequent three lines contain local headings, andthe
final linecontains theplotter ID.Since 4characters occupy eachcomputer word, theOUTPUT
array requires 224words ofstorage.
2.5.1.3 STIME (Solution Time)
Description
Astorage cellcontaing theuser&amp;rsquo;s estimated solution time.
Created inModule
Theestimated solution timeistaken from aExecutive Control Deckcard andstored into
STIME byXCSA (section 4.2)
Table Format
STIME consists ofasingle cellcontaining theestimated timeininteger seconds.
2.5-2&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIOr_S
2.5.1.4 XMDMSK (Executive Module Decision Mask)
Description
Contains the155bitmaster module execution mask (seesection l.lO) andacellindicating
oheckpoint status.
Created inModule
The155bitmaster module execution mask isgenerated andusedbyXGPI (section 4.7). The
checkpoint status seton(YES) byXCSA (section 4.2)bythepresence ofaCHKPNT =YEScardin
theExecutive Control Deck.
Table Format
The155bitmaskoccupies theloworder _lbits ofthefirst fivewords ofXMDMSK.
sixth word isthecheckpoint status (flag).The
2.5.1.5 MSGX (Message Queue)
Description
Aqueue table tohold fourword NASTRAN information anderror messages between thetime
they aregenerated byamodule andprinted bythemessage writer, MSG_IRT (section 3.4.26).
Created inModule
Messages maybegenerated byanyNASTRAN module through acalltoMESAGE (section 3.4.25).
Table Format
Word l
Word 2
Word 3-6
Word 6-endNun_er ofmessages queued.
Maximum nu_er ofmessages queue canhold
Fourword message entry (typical)
Additional fourword message entries
2.5.1.6 DESCRP (Matrix Description)
Description
Astorage block usedbysubroutine INTPK (section 3.5.3) tobuffer thematrix unpacking
procedure. Thisbuffering reduces thenumber ofI/_accesses totheparticular matrix data
block.
Created inModule
DESCRP isfilled andusedexclusively byINTPK
Table Format
Anarray with thefirst word defining thelength ofthearray.
2.5-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1.7 TWO(Powers ofTwo)
D_escription
A32word array witheachword (starting with linthe32ndword) containing thenextpower
oftwo.
Created inModule
The32integer values aredefined within theNASTRAN system block dataprogram (SEMDBD).
Table Format
Word32-l
Word31-2
Word30-4
Word29-8
etc.
2.5.1.8 NAMES(Symbolic Names)
Description
Aseries ofsymbolic names identified with their NASTRAN numeric equivalents.
forGINOfileoptions, arithmetic types andmatrix forms.Defines values
Created inModule
Thevalues aredefined within theNASTP_N system block data program (SEMDBD).
Table Format
Word SYMBOL VALUE Word SYMBOL VALUE Word SYMBOL VALUE
1 RD :2 7 EOFNRW =3 13 RECT :2
2 RDREW =0 8 RSP =1 14 DIAG :3
3 WRT =3 9 RDP =2 15 UPPER =4
4 WRTREW =l lO CSP =3 16 LOWER =5
5 REW =l II CDP =4 17 SYM =6
6 N_REW =2 12 SQUARE :1 18 R_W :7
19 IDENT =8
2.5.1.9 TYPE (Number Types)
Description
Aseries ofproperties aredefined asafunction ofanumber type. ThetypemaybeReal
Single Precision (RSP-I), RealDouble Precision (RDP-2), Complex Single Precision (CSP-3), or
Complex Double Precision (CDP-4). Theproperties thatmaybereturned include precision (single,
double), number ofwords, andrealorcomplex.
Created inModule
Theproperties aredefined within theNASTRAN system block data program (SEMDBD).
2.5-4&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
TableFormat
Word Property (Values)
l l
2 2
3 l
4 2
5 2
6 4
7 l
8 l
9 2
lO 2Type
Precision (RSP)
Precision IRDP)
Precision (CSP)
Frecision (CDP)Words (RSP)
Words (ROP)
Words ICSP)
Words (CDP)
Real/Complex (RSP)
(RDP)
(CSP)
(CDP)
Example
Assun_ thenu_er ofwordsrequired tocontain aComplex Single Precision (CSP-3) isdesired.
ThethirditemintheWordsarrayisindexed andfoundtocontain a2(words).
2.5-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2 Miscellaneous Tables NotPermanently CoreResident
2.5.2.1 /GPTAI/
Purpose
Todescribe connection andproperty characteristics ofeachelement. /GPTAI/ isusedin
modules GPI,GP2,GP3,TAI,SMAI,SMA2,DSMGI, SDR2,PL_T,andSSGI,andisinitialized bythe
blockdataprogram GPTABD andsubroutine DELSET.
Description
Word Type
1 I
2 I
3 I
4-5 B
6 I
7-8 I
9 I
I0-II I
12 I
13 I
14 I
15 I
16 I
17 I
18 I
19 I
20 I
21 I
22 I
23 I
24 IItem
Number ofentries (i.e., elements) intable
Pointer tofirstwordoflastentry intable
Number ofwords perentryintable
Nameofelement (e.g., R_D)
Internal element identification number
ECTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonECT
EPTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonEPT
Number ofgridpoints perelement
+I:Scalar element withgridpointand
component code
0:Notascalar element
-I:Scalar element withscalar points onl
Number ofwords perentryonEST
Position offirstgridpointinECTentry
Temperature data
Temperature datacount
2Hollerith symbols ifelement isplottable
Number ofwords SDR2passes fromPhase1
element routines toPhase2element routines
Countofwords SDR2outputs forrealstresses
Countofwords SDR2outputs forrealforces
Pointer intoanSDR2D tableforcombining of
realstresses toformcomplex stress outputs
Pointer intoanSDR2D tableforcombining of
realforces toformcomplex forceoutputsrepeated
for
each
element
2.5-6(8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
25
26
27Type
I
I
IItem
SMAI element overlay limb
SMA2 element overlay limb
SMA3 element overlay limb
2.5-6a (8/I/72)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.2 BITP_S.
Purpose
Toprovide pointers intoUSETandUSETD words forinterpreting thenested vector sets inNASTRAN.
Description
Word Item
l UM Bitnumber
2 UO Bitnumber
3 UR Bitnumber
4 USG Bitnumber
5 USB Bitnumber
6 UL Bitnumber
7 UA Bitnumber
8 UF Bitnumber
9 US Bitnumber
lO UN Bitnumber
II UG Bitnumber
12 UE Bitnumber
13 UP Bitnumber
14 UNE Bitnumber
15 UFE Bitnumber
16 UD Bitnumber
Note
Allwords areinteger.
2.5-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.3 PLTDAT
Purpose
Todefine plotter-dependent parameters.
Description
Thistable isdefined inthePL_TBD block datasubprogram. Thetable isdivided intoN+2
2D-word sections, where N=number ofplotters acceptable bytheNASTRAN plotting software.
Sections 3toN+2aretheonlysections initialized, because eachcontains values which aredepen-
dentupontheplotter hardware. Section lcontains values which mayvarywithin thelimits ofthe
hardware, andSection 2issimply aduplicate ofoneofthelastNsections corresponding tothe
plotter ofinterest.
Section 2mustbefilled inbythemodule writer. Theformat ofSections 2toN+2isas
follows:
Word Type Name Description
I-2 R XYMAX Maximum xandycoordinate values acceptable by
theplotter.
3 R CNTSIN Number ofplotter counts/inch onpaper.
4-5 R CNTCHR Number ofplotter counts percharacter inthex
andydirections.
6 R _XLEN Maximum length ofalinesegment.
7 I NPENS Maximum number ofpensorlinedensity available
ontheplotter.
8-9 R _RIGIN Forincremental plotters, thecurrent penposition
relative tothelower leftcorner oftheplot.
Otherwise, thelocation ofthelower leftcorner of
theplotter relative toitstruephysical origin.
I0 I PLTYPE/+l,+2,or+3iftheplotter isamicrofilm, table
&amp;lsquo;_ordrumplotter, respectively, with typing
)capability.
_-l, -2,or-3iftheplotter isamicrofilm, table
#ordrum plotter, respectively, with notyping
_capability (i.e., allcharacters must bedrawn).
II B PLTAPE
IPLTIifaneven parity plottape istobegeneratedforthisplotter.
PLT2ifanoddparity plottape istobegenerated
forthisplo&amp;ndash;tt&amp;rsquo;er.
12 I PBFSIZ Plottape physical record size (number ofcharacters)
13 I E_FIOifanend-of-file istobewritten after everyplot.
lifnoend-of-file istobewritten ontheplot
tape.
14-20 Undefined
2.5-8 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
Sectionlmustalsobefilledinbythemodulewriter.However,unlikeSection2,someof
theparameters mayvaryfromplottoplot,aslongastheyremainwithinthelimitations imposed
bytheplotterhardware. TheformatofSectionlisasfollows.
Word Type Name
I I F_DEL
2 I PL_TER
3-6 R REG
7-8 R AXYMAX
9-I0 R XYEDGE
II I CAMNUM
12-20Description
Plotter model index
Plotter index
Plotter region (Xmin,Ymin&amp;rsquo; Xmax&amp;rsquo; Ymax)inwhich
thecurrent picture isbeing drawn. These values
mustbesomefraction (between 0andl)ofwords
7and8(AXYF4AX).
Sizeofthepaper used(x,y), lesstheborders, in
plotter units.
Sizeoftheborders (x,y) inplotter units.
Current selected camera. Thiswordneednotbe
filled in,because itissetandusedasacon_nuni-
cation between theSELC#J_ andSKPFRM subroutines.
Undefined
usage
Sections land2arenormally setup bytheFNDPLT subroutine, except fortheplotter region
values (REG). These values must besetup bythemodule writer himself. Itisessential thatboth
these sections becorrectly setup, because theyarereferenced bytheentire NASTRAN plotter soft-
ware package.
IfSections land2arecorrectly setup bythemodule writer, heneednotsubsequently worry
about such things ascompensating forpaper margins ordifferent physical plotter origins. He
needonly assume thattheplotter origin islocated atthelower leftcorner ofthepaper where
theleftandbottom borders intersect. TheNASTItAN plotter software will automatically compensate
fortheborders andthephysical origin.
2.5-9 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.4 CHAR94
Purpose
Toprovide atable ofcharacters usedtogenerate plottapes asiftF,ecomputer were always
anIBM7094. Thistable however isindependent oftheactual computer used.
Description
This isa240word table defined inthePLOTBD block datasubprogram. Itisdivided intofour
equal sections of60words each. Eachentry ineach section hasaparallel entry intheother
three sections.
Section Iisastring ofalltheHollerith characters acceptable bytheplotmodules ofthe
form IHx,where xisaHollerith character.
Section IIcontains theinteger equivalents oftheIBM7094internal binary characters inthe
sameorderasSection I.However, neartheendofthissection areintegers representing various
additional characters notinSection I.Theseadditional characters cannotbeexpressed inthe
formIHxandareusedforspecial plotter commands. Eachentryinthistableisaright-adjusted
two-digit integer withleading zeroes.
Section Illcontains theinteger equivalents oftheIBM7094BCDcharacters astheywould
appear onanevenparity tapewritten onanIBM7094, inthesameorder andformasinSection II.
Section IVcontains theinteger equivalents oftheCDCdisplay character codes soastopro-
duceanevenparity BCDplottapeasifwritten onanIBM7094, inthesameorder andformasin
Section II.
Thesequence ofcharacters ineachsection isasfollows:
0l23456789
ABCDEFGHIj
KLMN_PQRST
uvwxYz()+-
*/= ,$&amp;lsquo;b
character 49=endofrecord mark
character 50=endoffilemark
characters 51-53 =special characters.
characters 54-60 =0
Note
InSection I,characters 49-60=O.
usage
Section Iisbasically usedforcalculating anindex intotheother twosections bycomparing
anarbitra_ Hollerith character witheach character inSection Iuntil amatch isfound. Once
thisisdone, theindex isusedtoextract thecorresponding entry fromeither Section IIorIll,
depending onwhether anoddoreven parity plottapeisbeing generated. Ifthecomputer isan
IBM7094, onlySection IIisused, andifthecomputer isaCDC6600andanevenparity plottape
isbeing generated, Section IVisusedinstead ofSection Ill.
2.5-10 (12-I-69)&lt;/p&gt;
&lt;p&gt;M!SCELLANEOUS TABLE DESCRIPTIONS
2.5.2.5 XXPAR_I
Purpose
Todefine theplottapebuffer size, thecamera tobeused, thenun,ber ofblank frames of
filmtobeinserted between plots, theplotter model name, andthepaper size tobeusedontable
&lt;em&gt;ters.
Description
Thistable isdefined asfollows inthePL_TBD block datasubprogram.
Word Type Name
l I BUFSIZ
2 I CAMERA
3 I BFP_a&lt;/em&gt;.IS
4-5 I,orB PLTMDL
8-9 R PAPSiZDescription
Plottapebuffer size
Plotter camera tobeused (appropriate onlyona
microfilm plotter).
Number ofblank frames offilmtobeinserted
between plots (appropriate onlyonamicrofilm
plotter).
Plotter model identification.
,,=&lt;em&gt;+&lt;/em&gt; &amp;ndash;__^&amp;lt;.h+ __hopape_r tnheused (appropri-
ateonlyontable plotters).
usage
Theinitial values ofthese variables areasfollows:
BUFSIZ =must besetbythemodule writer
CAMERA =2(paper output only)
BFRAMS =l
PLTMDL =4020, 0(integer)
PAPSIZ =8.5, ll.O
This table&amp;rsquo;s actual sizeis152words. Theremainder ofthetable isinitialized forthestructur-
alplotter module, PL_T, butmaybeusedbytheprogrammer foranything hedesires inother plot-
tingmodules.
2.5-11(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.6 SYMBLS
Purpose
Toprovide atable ofiFdices into theCHAR94 andCHRDRW tables used totype ordraw pre-
defined plotter symbols.
Description
Thetable isdefined inthePLOTBD block data subprogram. There isroom forupto20indices
foreach plotter. However, thesame number ofindices must bedefined foreach plotter. The
format ofthetable isasfollows:
Word Type
0 I
1-20 I
21-40 I
41-60 IDescription
Number ofsymbols defined foreachplotter (currently =9).
Symbol indices forplotter I.
Symbol indices forplotter 2.
Symbol indices forplotter 3.
There areasmany groups ofsymbol indices asthere areavailable plotters. Thesymbols
defined foreach plotter areasfollows:
Symbol l=x
Symbol 2=*
Symbol 3=+
Symbol 4=-
Symbol 5=.(dot, notaperiod).
Symbol 6=circle
Symbol 7=square
Symbol 8=diamond
Symbol 9=triangle
Should anyofthesesymbols notbeavailable onaplotter, asubstitution ofanother symbol must
bemade.
Usage
ThistableisusedbytheSYMBOL subroutine.
2.5-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.7 CHRDRW
Purpose
Todefine theco_ination oflines needed todrawalphanumeric characters andsymbols.
Descri ption
Thistable isdefinedinthePL_TBD block datasubprogram. Thetable isdivided intotwo
sections. Section Iisalistofindices intoSection If,usedtolocate thedataneeded todraw
characters. Thefirst 48indices inSection Icorrespond tothe48characters listed inSection I
oftheCHAR94 table. Thelast7indices areusedfordrawing thespecial characters listed inthe
SYMBLS table. Ifanindex isnegative, itisanindex intoSection Iinstead ofSection If.This
occurs when aduplicate character exists (e.g., azero, theletter &amp;ldquo;_&amp;quot;,andthesymbol fora
circle).
Section IIofthistable defines the(integer) coordinates ofthestarting andending points
ofthestraight lines tobedrawn inorder todrawacharacter orsymbol. Ingeneral, theneces-
sarystraight lines arecontiguous, sothattheendpoint ofonelineisthestarting point ofthe
next, etc. Insomecases, thisiseither impractical orimpossible (e.g., *,+,=,etc.). In
suchasituation, thestarting point ofaline isnegative, meaning that itisnottobeconnected
totheendpoint ofthepreceding line.
Thecharacters defined inSection IIarebased upon6x6square characters. Thevalues inthis
section aresimply integer coordinates within a6x6square.
Theformat ofthistable isasfollows:
Wor____dd Type Name
0 I LSTCHR
1-60 I CHRIND
61-760 I CHRDescription
Nameofcharacters andsyn_ols referenced in
Section I(=52).
Section I-&amp;ldquo;LSTCHR&amp;rdquo; indices intoSection II.
Section II:(x,y) pairs defining thelineal
representation of6x6square characters.
usage
This table isusedbytheDRWCHR subroutine.
2.5-13 (I2-I-69)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P18</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_018/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
156
158
160
162
164
166
168
170
172
174
176
178
18O
182
184
186
188
190
192
194
196
198
200
202
204
206
208
210
212
21478
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94(word 4)
95
96
97
98
99
lO0
lOl
I02
I03
I04
I05
I06
I07MAT2
CTRIARG
CTRAPRG
DEFORM
PARAM
MPCADD
LOAD
EIGR
EIGB
EIGC
REACT
MATSI
MATTI
OMITI
TABLEMI
TABLEM2
TABLEM3
TABLEM4
TABLESI
TEMPD
TABLES2
TABLES3
TABLES4
MATT2
MATS2
CTORDRG
SPOINT
SEQD
SEQDBFEYes
YesSupported
No
No
No
FORCE
FORCE
2.4-35 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only(PMR)
216
218
220
222
224
226
228
230
232
234
236
238
240
242
244
246
248
25O
252
254
256
258
260
262
264
266
268
27O
272
274I08
109
II0
III
112
113
114
115
116
117
118
119
120
121
122
123
124
125(word 5)
126
127
128
129
130
131
132
133
134
135
136
137QDSEP
SPQUADI
SPQUAD2
SPQDMEM
SPQDPLT
ZI
CTRIA3
PTRIA3
SETRBFE
VECDN
VECGP
DMI
DMIG
PTORDRG
MAT3
DLOAD
EPOINT
FREQI
FREQ
N_LINI
NOLIN2
NOLIN3
NOLIN4
RLOADI
RLOAD2
TABLED1
TABLED2
SEQEP
TF
TICSupported
FORCE
FORCE
FORCE
F_RCE
F_RCE
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
2.4-36 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXI InIFPXO Contents Only (PMR)
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156(word 6)
157
158
159
160
161
162
163
164
165
166
167276
278
280
282
284
286
288
290
292
294
296
298
300
302
304
306
308
310
312
314
316
318
320
322
324
326
328
330
332
334TLBADI
TL_AD2
TABLED3
TABLED4
TSTEP
DSFACT
AXIC
RINGAX
CC_NEAX
PCBNEAX
SPCAX
MPCAX
_MITAX
SUPAX
P_INTAX
SECTAX
PRESAX
TEMPAX
F_RCEAX
M_MAX
EIGP
MASSC
EDFIR
DF_RM
TABDMPI
TABDMP2
TABDMP3
TABDMP4
FREQ2
CQUAD3Supported
F_RCE
FQRCE
F_RCE
2.4-37 {311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
336
338
340
342
344
346
348
35O
352
354
356
358
360
362
364
366
368
37O
372
374
376
378
38O
382
384
386
388
390
392
394168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197PQUAD3
SPQUAD3
SETR
SPTRIAI
SPTRIA2
SPTRMEM
SPTRBSC
SPTRPLT
SECL
SECP
SEPTRIA3
BAROR
CBAR
PBAR
DAREA
DELAY
DPHASE
PLFACT
CGENEL
PGENEL
ELDELE
MATT3
RFORCE
TABRNDI
TABRND2
TABRND3
TABRND4
RANDPS
RANDTI
RANDT2Supported
F_RCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
FORCE
F_RCE
FORCE
FORCE
FORCE
FORCE
F_RCE
2.4-38 (3/I/71)&lt;/p&gt;
&lt;p&gt;EXECUTIVE TABLE DESCRIPTIONS
Word No. BitNo. Output
InIFPXl InIFPXO Contents Only (PMR)&amp;quot;
396
398
400
402-598
600
602
604
606
608
610
612
614
616
618
620
622
624
626
628
630
632
634
636
638
640
642
644
646
64819B
199
200
201-299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324PLBAD1
PLEAD2
DTI
Notused
C_UPMASS
GRDPNT
WTMASS
IRES
LFREQ
HFREQ
LM_DES
G
W3
W4
M_DACC
MPC$
sPc$
L_AD$
METHODS
DEF(BRM$
TEMPLD$
TEMPMT$
IC$
ACUT$
LB_P$
LB_PI$
DLIBAD$
FREQ$
TF$Yes
Yes
Yes
YesSupported
2.4-39 (311171)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLE DESCRIPTIONS
WordNo. BitNo. Output
InIFPXl InIFPXO Contents Only(PMR)
650
652
654
656
658
660
662
664
666
668
670
672
674
676
678
680
682325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
346
341PLOTS Yes
TSTEP$
POUTS Yes
TEMPMX$
DSC_$
K2PP$
M2PP$
B2PP$
CMETH_D$
SDAMP$
INERTIA$
NLFORCE$
XYOUT$ Yes
DELETES
RANDOM$
AXYOUT$ Yes
NOLOOP$
NotUsedSupported
F_RCE
F_RCE
2.4-40 (3/I/71)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5 MISCELLANEOUS TABLE DESCRIPTIONS.
Thefollowing isanalphabetical index ofmiscellaneous table descriptions.
SectionNu_er TableName Where Stored Pa_eNumber
2.5.2.2 BITPi_S /BITP_S/ 2.5-7
2.5.2.4 CHAR94 /CHAR94/ 2.5-l0
2.5.2.7 CHRDRW /CHRDRW/ 2.5-13
2.5.1.6 DESCRP /DESCRP/ 2.5-3
2.5.2.1 GPTAI /GPTAI/ 2.5-6
2.5.1.5 MSGX /MSGX/ 2.5-3
2.5.l.8 NJ_MES /NAMES/ 2.5-4
2.5.l.l _SCENT /&lt;em&gt;SCENT/ 2.5-2
2.5.I.2 i_UTPUT /&lt;/em&gt;,UTPUT/ 2.5-2
2.5.2.3 PLTDAT /PLTDAT/ 2.5-8
&lt;em&gt;.5.i.&lt;/em&gt; &lt;em&gt;TTME /STIME/ 2.5-2
2.5.2.6 SYMBLS /SYMBLS/ 2.5-12
2.5.I.7 TW&lt;/em&gt; /TWO/ 2.5-4
2.5.1.9 TYPE /TYPE/ 2.5-4
2.5.l,4 XMDMSK /XMDMSK/ 2.5-3
2.5.2.5 XXPARM /XXPARM/ 2.5-Il
2.5-1(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1Miscellaneous TablesWhichArePermanently CoreResident.
2.5.1.1 OSCENT (_SCAR Entry)
Description
A200wordstorage arraycontaining the_SCARentry(record) currently beingprocessed.
Created inModule
Theentryisreadfromthe_SCARandstoredinOSCENTbytheXSEMi(section 3,3.7)sub-
routine. Otherexecutive routines thatrequire details ofthecurrent entrywillsearch _SCENT.
TableFormat
TheOSCENTformat isidentical tothe_SCAR(section 2.4.2.1) entryitcurrently contains.
2.5.1.2 _UTPUT (Output headings)
Descri ption
Astorage array containing problem title, subtitle, label andvarious headings required by
thePAGE(section 3.4.24) routine toproperly annotate theNASTRAN output.
Created inModule
Thetitle, subtitle andlabel aretaken fromCase Control Deckcards andstored in_UTPUI
byIFPI (section 4.3). Other heading lines maybestored byoutput modules prior tocalling
PAGE.
TableFormat
_UTPUT contains sufficient space forseven 128character lines. Thefirst three lines con-
tainthetitle, subtitle, andlabel. Thesubsequent three lines contain local headings, andthe
final linecontains theplotter ID.Since 4characters occupy eachcomputer word, theOUTPUT
array requires 224words ofstorage.
2.5.1.3 STIME (Solution Time)
Description
Astorage cellcontaing theuser&amp;rsquo;s estimated solution time.
Created inModule
Theestimated solution timeistaken from aExecutive Control Deckcard andstored into
STIME byXCSA (section 4.2)
Table Format
STIME consists ofasingle cellcontaining theestimated timeininteger seconds.
2.5-2&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIOr_S
2.5.1.4 XMDMSK (Executive Module Decision Mask)
Description
Contains the155bitmaster module execution mask (seesection l.lO) andacellindicating
oheckpoint status.
Created inModule
The155bitmaster module execution mask isgenerated andusedbyXGPI (section 4.7). The
checkpoint status seton(YES) byXCSA (section 4.2)bythepresence ofaCHKPNT =YEScardin
theExecutive Control Deck.
Table Format
The155bitmaskoccupies theloworder _lbits ofthefirst fivewords ofXMDMSK.
sixth word isthecheckpoint status (flag).The
2.5.1.5 MSGX (Message Queue)
Description
Aqueue table tohold fourword NASTRAN information anderror messages between thetime
they aregenerated byamodule andprinted bythemessage writer, MSG_IRT (section 3.4.26).
Created inModule
Messages maybegenerated byanyNASTRAN module through acalltoMESAGE (section 3.4.25).
Table Format
Word l
Word 2
Word 3-6
Word 6-endNun_er ofmessages queued.
Maximum nu_er ofmessages queue canhold
Fourword message entry (typical)
Additional fourword message entries
2.5.1.6 DESCRP (Matrix Description)
Description
Astorage block usedbysubroutine INTPK (section 3.5.3) tobuffer thematrix unpacking
procedure. Thisbuffering reduces thenumber ofI/_accesses totheparticular matrix data
block.
Created inModule
DESCRP isfilled andusedexclusively byINTPK
Table Format
Anarray with thefirst word defining thelength ofthearray.
2.5-3&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.1.7 TWO(Powers ofTwo)
D_escription
A32word array witheachword (starting with linthe32ndword) containing thenextpower
oftwo.
Created inModule
The32integer values aredefined within theNASTRAN system block dataprogram (SEMDBD).
Table Format
Word32-l
Word31-2
Word30-4
Word29-8
etc.
2.5.1.8 NAMES(Symbolic Names)
Description
Aseries ofsymbolic names identified with their NASTRAN numeric equivalents.
forGINOfileoptions, arithmetic types andmatrix forms.Defines values
Created inModule
Thevalues aredefined within theNASTP_N system block data program (SEMDBD).
Table Format
Word SYMBOL VALUE Word SYMBOL VALUE Word SYMBOL VALUE
1 RD :2 7 EOFNRW =3 13 RECT :2
2 RDREW =0 8 RSP =1 14 DIAG :3
3 WRT =3 9 RDP =2 15 UPPER =4
4 WRTREW =l lO CSP =3 16 LOWER =5
5 REW =l II CDP =4 17 SYM =6
6 N_REW =2 12 SQUARE :1 18 R_W :7
19 IDENT =8
2.5.1.9 TYPE (Number Types)
Description
Aseries ofproperties aredefined asafunction ofanumber type. ThetypemaybeReal
Single Precision (RSP-I), RealDouble Precision (RDP-2), Complex Single Precision (CSP-3), or
Complex Double Precision (CDP-4). Theproperties thatmaybereturned include precision (single,
double), number ofwords, andrealorcomplex.
Created inModule
Theproperties aredefined within theNASTRAN system block data program (SEMDBD).
2.5-4&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
TableFormat
Word Property (Values)
l l
2 2
3 l
4 2
5 2
6 4
7 l
8 l
9 2
lO 2Type
Precision (RSP)
Precision IRDP)
Precision (CSP)
Frecision (CDP)Words (RSP)
Words (ROP)
Words ICSP)
Words (CDP)
Real/Complex (RSP)
(RDP)
(CSP)
(CDP)
Example
Assun_ thenu_er ofwordsrequired tocontain aComplex Single Precision (CSP-3) isdesired.
ThethirditemintheWordsarrayisindexed andfoundtocontain a2(words).
2.5-5&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2 Miscellaneous Tables NotPermanently CoreResident
2.5.2.1 /GPTAI/
Purpose
Todescribe connection andproperty characteristics ofeachelement. /GPTAI/ isusedin
modules GPI,GP2,GP3,TAI,SMAI,SMA2,DSMGI, SDR2,PL_T,andSSGI,andisinitialized bythe
blockdataprogram GPTABD andsubroutine DELSET.
Description
Word Type
1 I
2 I
3 I
4-5 B
6 I
7-8 I
9 I
I0-II I
12 I
13 I
14 I
15 I
16 I
17 I
18 I
19 I
20 I
21 I
22 I
23 I
24 IItem
Number ofentries (i.e., elements) intable
Pointer tofirstwordoflastentry intable
Number ofwords perentryintable
Nameofelement (e.g., R_D)
Internal element identification number
ECTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonECT
EPTrecord IDandtrailer bitforLOCATE
Number ofwords perentryonEPT
Number ofgridpoints perelement
+I:Scalar element withgridpointand
component code
0:Notascalar element
-I:Scalar element withscalar points onl
Number ofwords perentryonEST
Position offirstgridpointinECTentry
Temperature data
Temperature datacount
2Hollerith symbols ifelement isplottable
Number ofwords SDR2passes fromPhase1
element routines toPhase2element routines
Countofwords SDR2outputs forrealstresses
Countofwords SDR2outputs forrealforces
Pointer intoanSDR2D tableforcombining of
realstresses toformcomplex stress outputs
Pointer intoanSDR2D tableforcombining of
realforces toformcomplex forceoutputsrepeated
for
each
element
2.5-6(8/I/72)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
Word
25
26
27Type
I
I
IItem
SMAI element overlay limb
SMA2 element overlay limb
SMA3 element overlay limb
2.5-6a (8/I/72)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.2 BITP_S.
Purpose
Toprovide pointers intoUSETandUSETD words forinterpreting thenested vector sets inNASTRAN.
Description
Word Item
l UM Bitnumber
2 UO Bitnumber
3 UR Bitnumber
4 USG Bitnumber
5 USB Bitnumber
6 UL Bitnumber
7 UA Bitnumber
8 UF Bitnumber
9 US Bitnumber
lO UN Bitnumber
II UG Bitnumber
12 UE Bitnumber
13 UP Bitnumber
14 UNE Bitnumber
15 UFE Bitnumber
16 UD Bitnumber
Note
Allwords areinteger.
2.5-7&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.3 PLTDAT
Purpose
Todefine plotter-dependent parameters.
Description
Thistable isdefined inthePL_TBD block datasubprogram. Thetable isdivided intoN+2
2D-word sections, where N=number ofplotters acceptable bytheNASTRAN plotting software.
Sections 3toN+2aretheonlysections initialized, because eachcontains values which aredepen-
dentupontheplotter hardware. Section lcontains values which mayvarywithin thelimits ofthe
hardware, andSection 2issimply aduplicate ofoneofthelastNsections corresponding tothe
plotter ofinterest.
Section 2mustbefilled inbythemodule writer. Theformat ofSections 2toN+2isas
follows:
Word Type Name Description
I-2 R XYMAX Maximum xandycoordinate values acceptable by
theplotter.
3 R CNTSIN Number ofplotter counts/inch onpaper.
4-5 R CNTCHR Number ofplotter counts percharacter inthex
andydirections.
6 R _XLEN Maximum length ofalinesegment.
7 I NPENS Maximum number ofpensorlinedensity available
ontheplotter.
8-9 R _RIGIN Forincremental plotters, thecurrent penposition
relative tothelower leftcorner oftheplot.
Otherwise, thelocation ofthelower leftcorner of
theplotter relative toitstruephysical origin.
I0 I PLTYPE/+l,+2,or+3iftheplotter isamicrofilm, table
&amp;lsquo;_ordrumplotter, respectively, with typing
)capability.
_-l, -2,or-3iftheplotter isamicrofilm, table
#ordrum plotter, respectively, with notyping
_capability (i.e., allcharacters must bedrawn).
II B PLTAPE
IPLTIifaneven parity plottape istobegeneratedforthisplotter.
PLT2ifanoddparity plottape istobegenerated
forthisplo&amp;ndash;tt&amp;rsquo;er.
12 I PBFSIZ Plottape physical record size (number ofcharacters)
13 I E_FIOifanend-of-file istobewritten after everyplot.
lifnoend-of-file istobewritten ontheplot
tape.
14-20 Undefined
2.5-8 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLEDESCRIPTIONS
Sectionlmustalsobefilledinbythemodulewriter.However,unlikeSection2,someof
theparameters mayvaryfromplottoplot,aslongastheyremainwithinthelimitations imposed
bytheplotterhardware. TheformatofSectionlisasfollows.
Word Type Name
I I F_DEL
2 I PL_TER
3-6 R REG
7-8 R AXYMAX
9-I0 R XYEDGE
II I CAMNUM
12-20Description
Plotter model index
Plotter index
Plotter region (Xmin,Ymin&amp;rsquo; Xmax&amp;rsquo; Ymax)inwhich
thecurrent picture isbeing drawn. These values
mustbesomefraction (between 0andl)ofwords
7and8(AXYF4AX).
Sizeofthepaper used(x,y), lesstheborders, in
plotter units.
Sizeoftheborders (x,y) inplotter units.
Current selected camera. Thiswordneednotbe
filled in,because itissetandusedasacon_nuni-
cation between theSELC#J_ andSKPFRM subroutines.
Undefined
usage
Sections land2arenormally setup bytheFNDPLT subroutine, except fortheplotter region
values (REG). These values must besetup bythemodule writer himself. Itisessential thatboth
these sections becorrectly setup, because theyarereferenced bytheentire NASTRAN plotter soft-
ware package.
IfSections land2arecorrectly setup bythemodule writer, heneednotsubsequently worry
about such things ascompensating forpaper margins ordifferent physical plotter origins. He
needonly assume thattheplotter origin islocated atthelower leftcorner ofthepaper where
theleftandbottom borders intersect. TheNASTItAN plotter software will automatically compensate
fortheborders andthephysical origin.
2.5-9 (12-I-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.4 CHAR94
Purpose
Toprovide atable ofcharacters usedtogenerate plottapes asiftF,ecomputer were always
anIBM7094. Thistable however isindependent oftheactual computer used.
Description
This isa240word table defined inthePLOTBD block datasubprogram. Itisdivided intofour
equal sections of60words each. Eachentry ineach section hasaparallel entry intheother
three sections.
Section Iisastring ofalltheHollerith characters acceptable bytheplotmodules ofthe
form IHx,where xisaHollerith character.
Section IIcontains theinteger equivalents oftheIBM7094internal binary characters inthe
sameorderasSection I.However, neartheendofthissection areintegers representing various
additional characters notinSection I.Theseadditional characters cannotbeexpressed inthe
formIHxandareusedforspecial plotter commands. Eachentryinthistableisaright-adjusted
two-digit integer withleading zeroes.
Section Illcontains theinteger equivalents oftheIBM7094BCDcharacters astheywould
appear onanevenparity tapewritten onanIBM7094, inthesameorder andformasinSection II.
Section IVcontains theinteger equivalents oftheCDCdisplay character codes soastopro-
duceanevenparity BCDplottapeasifwritten onanIBM7094, inthesameorder andformasin
Section II.
Thesequence ofcharacters ineachsection isasfollows:
0l23456789
ABCDEFGHIj
KLMN_PQRST
uvwxYz()+-
*/= ,$&amp;lsquo;b
character 49=endofrecord mark
character 50=endoffilemark
characters 51-53 =special characters.
characters 54-60 =0
Note
InSection I,characters 49-60=O.
usage
Section Iisbasically usedforcalculating anindex intotheother twosections bycomparing
anarbitra_ Hollerith character witheach character inSection Iuntil amatch isfound. Once
thisisdone, theindex isusedtoextract thecorresponding entry fromeither Section IIorIll,
depending onwhether anoddoreven parity plottapeisbeing generated. Ifthecomputer isan
IBM7094, onlySection IIisused, andifthecomputer isaCDC6600andanevenparity plottape
isbeing generated, Section IVisusedinstead ofSection Ill.
2.5-10 (12-I-69)&lt;/p&gt;
&lt;p&gt;M!SCELLANEOUS TABLE DESCRIPTIONS
2.5.2.5 XXPAR_I
Purpose
Todefine theplottapebuffer size, thecamera tobeused, thenun,ber ofblank frames of
filmtobeinserted between plots, theplotter model name, andthepaper size tobeusedontable
&lt;em&gt;ters.
Description
Thistable isdefined asfollows inthePL_TBD block datasubprogram.
Word Type Name
l I BUFSIZ
2 I CAMERA
3 I BFP_a&lt;/em&gt;.IS
4-5 I,orB PLTMDL
8-9 R PAPSiZDescription
Plottapebuffer size
Plotter camera tobeused (appropriate onlyona
microfilm plotter).
Number ofblank frames offilmtobeinserted
between plots (appropriate onlyonamicrofilm
plotter).
Plotter model identification.
,,=&lt;em&gt;+&lt;/em&gt; &amp;ndash;__^&amp;lt;.h+ __hopape_r tnheused (appropri-
ateonlyontable plotters).
usage
Theinitial values ofthese variables areasfollows:
BUFSIZ =must besetbythemodule writer
CAMERA =2(paper output only)
BFRAMS =l
PLTMDL =4020, 0(integer)
PAPSIZ =8.5, ll.O
This table&amp;rsquo;s actual sizeis152words. Theremainder ofthetable isinitialized forthestructur-
alplotter module, PL_T, butmaybeusedbytheprogrammer foranything hedesires inother plot-
tingmodules.
2.5-11(12-1-69)&lt;/p&gt;
&lt;p&gt;DATABLOCKANDTABLEDESCRIPTIONS
2.5.2.6 SYMBLS
Purpose
Toprovide atable ofiFdices into theCHAR94 andCHRDRW tables used totype ordraw pre-
defined plotter symbols.
Description
Thetable isdefined inthePLOTBD block data subprogram. There isroom forupto20indices
foreach plotter. However, thesame number ofindices must bedefined foreach plotter. The
format ofthetable isasfollows:
Word Type
0 I
1-20 I
21-40 I
41-60 IDescription
Number ofsymbols defined foreachplotter (currently =9).
Symbol indices forplotter I.
Symbol indices forplotter 2.
Symbol indices forplotter 3.
There areasmany groups ofsymbol indices asthere areavailable plotters. Thesymbols
defined foreach plotter areasfollows:
Symbol l=x
Symbol 2=*
Symbol 3=+
Symbol 4=-
Symbol 5=.(dot, notaperiod).
Symbol 6=circle
Symbol 7=square
Symbol 8=diamond
Symbol 9=triangle
Should anyofthesesymbols notbeavailable onaplotter, asubstitution ofanother symbol must
bemade.
Usage
ThistableisusedbytheSYMBOL subroutine.
2.5-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;MISCELLANEOUS TABLE DESCRIPTIONS
2.5.2.7 CHRDRW
Purpose
Todefine theco_ination oflines needed todrawalphanumeric characters andsymbols.
Descri ption
Thistable isdefinedinthePL_TBD block datasubprogram. Thetable isdivided intotwo
sections. Section Iisalistofindices intoSection If,usedtolocate thedataneeded todraw
characters. Thefirst 48indices inSection Icorrespond tothe48characters listed inSection I
oftheCHAR94 table. Thelast7indices areusedfordrawing thespecial characters listed inthe
SYMBLS table. Ifanindex isnegative, itisanindex intoSection Iinstead ofSection If.This
occurs when aduplicate character exists (e.g., azero, theletter &amp;ldquo;_&amp;quot;,andthesymbol fora
circle).
Section IIofthistable defines the(integer) coordinates ofthestarting andending points
ofthestraight lines tobedrawn inorder todrawacharacter orsymbol. Ingeneral, theneces-
sarystraight lines arecontiguous, sothattheendpoint ofonelineisthestarting point ofthe
next, etc. Insomecases, thisiseither impractical orimpossible (e.g., *,+,=,etc.). In
suchasituation, thestarting point ofaline isnegative, meaning that itisnottobeconnected
totheendpoint ofthepreceding line.
Thecharacters defined inSection IIarebased upon6x6square characters. Thevalues inthis
section aresimply integer coordinates within a6x6square.
Theformat ofthistable isasfollows:
Wor____dd Type Name
0 I LSTCHR
1-60 I CHRIND
61-760 I CHRDescription
Nameofcharacters andsyn_ols referenced in
Section I(=52).
Section I-&amp;ldquo;LSTCHR&amp;rdquo; indices intoSection II.
Section II:(x,y) pairs defining thelineal
representation of6x6square characters.
usage
This table isusedbytheDRWCHR subroutine.
2.5-13 (I2-I-69)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P19</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_019/</guid>
      <description>
        
        
        &lt;p&gt;INTRODUCTION
3.1INTRODUCTION
Section3contains descriptions ofsubroutines notanintegral partofamodule. Those sub-
routines which areanintegral partofamodule arediscussed insection 4,Module Functional
Descriptions. Section 3.2contains analphabetical index ofentry points ofroutines documented
insection 3.Asimilar index ofentry points documented insection 4canbefound insection
4.1.3.
Subroutine descriptions havebeenpartitioned into3classifications: executive, utility and
matrix subroutine descriptions, documented insections 3.3,3.4,and3.5respectively.
Descriptions oftheplotting utility routines (e.g., AXIS, section 3.4.40; AXISi, section
3.4.41) refer toplotters bynumber ortheletter &amp;ldquo;i&amp;rdquo;,andtoplotter models bynumber only. The
correspondence ofthese numbers toplotter hardware isgiven inTable I.Further details canbe
found insection 4oftheUser&amp;rsquo;s Manual.
3.l-I (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Table I.Correspondence Between External andInternal Plotter andModelNamesandNumbers.
where:External External Internal Internal
plotter name modelname plotter number modelnumber
BL
EAI
SC
CALC_MP
DD
NASTRAN
BL
EAI
SCSTE,30 1 1LTE,30
3500,30 2 13500,45 8 1
4020,0 3 1
/765,2O5 5 4
765,210 4 4
765,105 5 5
765,110 4 5
763,205 7 4
763,210 6 4
763,105 7 5
763,110 6 5
565,205 5 2
565,210 4 2
565,105 5 3
565,110 4 3
565,305 5 1
565,310 4 1
563,205 7 2
563,210 6 2
563,105 7 3
563,110 6 3
563,305 7 l
_563,310 6 l
80,B 9 l
M,O I0 +I
T,O II +2
D,O II +3
Pi,l I0 -I
T,l II -2
D,l II -3
=Benson Lehner
=Electronic Associates Inc.
=Stromberg Carlson
3.1-2 (12-I-69)&lt;/p&gt;
&lt;p&gt;INTRODUCTION
TableI.Correspondence Between External andInternal Plotter andModelNamesandNumbers (Cont&amp;rsquo;d),
CALC@MP
DD
NASTRAN=California Computing
=DataDisplay
=NASTRAN General Purpose Plotter
3.1-3 (12-I-69)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
3.2ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS.
SectionNumber
3.5.10
3.4.1
3.4.40
3.4.41
3.4.41
3.4.7
3.3.5
3.4.74
3.5.1
35.1
35.1
33.2
35.5
35.16
35.16
3.4.4
3.4.18
3.4.1
3.5.16
3.3.12
3.4.1
3.4.1
3.5.28
3.5.28
3.5.16
3.5.29
3.5.16
3.4.76
3.4.77Entry Point Subroutine Description
ADD ADD
ANDF MAPFNS
AXIS AXIS
AXIS3 AXISi
AXISIO AXISi
BCKREC BCKREC
BGNSYS ENDSYS
BISRCH BISRCH
BLDPK BLDPK
BLDPKI BLDPK
BLDPKN BLDPK
BTSTRP BTSTRP
CALCV CALCV
CDC@MP CDC_MP
CL_P CDC@MP
CLOSE CLOSE
CLSTAB CLSTAB
COMPLF MAPFNS
COMI2 CDC_MP
CONMSG C_NMSG
CORSZ MAPFNS
CORWDS MAPFNS
CSPL_O CSPSDC
CSPSDC CSPSDC
CTRNSP CDC_MP
CXFBS CÃ—FBS
CXL_P CDC_MP
DAD_TB DAD_TB
DAXB DAXBPageNumber
3.5-19
3.4-I
3.4-70
3.4-72
3.4-72
3.4-9
3.3-6
3.4-123
3.5-I
3.5-I
3.5-I
3.3-2
3.5-12
3.5-62
3.5-63
3.4-5
3.4-26
3.4-I
3.5-63
3.3-16
3.4-I
3.4-I
3.5-82
3.5-82
3.5-63
3.5-84
3.5-63
3.4-126
3.4-127
3.2-I (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.5.15
3,4.72
3.5.15
3.5.15
3.5.21
3.4.68
3.4.62
3.5.22
3.3.5
3,4.9
3.5.23
3.5.17
3.5.17
3.5.17
3.5.12
3.5.15
3.5.15
3.4.17
3.4.69
3.4.75
3.4.15
3.4.6
3.5.15
3.5.19
3.4.12
3.4.61
3.4.32
3.4.33
3.3.4
3.3.9EntryPoint
DEC@MP
DELSET
DDL@@P
DL_@P
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACT@R
FBS
FBSDP
FBSSP
FILSWI
FINDC
FINWRT
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
GENVEC
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTSubroutine Description
DEC@MP
DELSET
DECAMP
DEC@MP
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACTOR
FBS
FBS
FBS
MPYQ
DEC@MP
DECAMP
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
DEC@MP
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTPageNumber
3.5-44
3.4-121
3.5-60
3.5-60
3,5-71
3.4-115
3.4-105
3.5-73
3.3-6
3.4-11
3.5-74
3.5-64
3.5-65
3.5-65
3.5-28
3.5-57
3.5-54
3.4-25
3.4-117
3.4-125
3.4-23
3,4-8
3.5-54
3.5-67
3.4-15
3.4-103
3.4-49
3.4-52
3.3-5
3.3-12
3.2-2(8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description Page Number
3.4.14 GOPEN G_PEN 3.4-22
3.4.71 HEAD HEAD 3.4-120
3.4.73 HMAT HMAT 3.4-122
3.4.44 IDPL_T IDPLBT 3.4-75
3.4.45 INTGPT INTGPX 3.4-76
3.4.45 INTGPX INTGPX 3.4-76
3.4.46 INTLST INTLST 3.4-77
3.5.3 INTPK INTPK 3.5-7
3.5.3 INTPKI INTPK 3.5-7
3.4.34 INVERD INVERD 3.4-53
3.4.35 INVERS INVERS 3.4-54
3.4.47 LINE LINE 3.4-78
3.4.48 LINE1 LINEi 3.4-79
3.4.48 LINE2 LINEi 3.4-79
3.4.48 LINE3 LINEi 3,4-79
3.4.48 LINE4 LINEi 3.4-79
3.4.48 LINE9 LINEi 3.4-79
3.4.48 LINEIO LINEi 3,4-79
3.4.30 LOCATE PREL_C 3.4-44
3.5.14 L_BP SDCBMP 3.5-42
3.4.1 LSHIFT MAPFNS 3.4-I
3.4.36 MAT PREMAT 3.4-55
3.4.28 MATDUM MATDUM 3.4-42
3.5.6 MERGE PARTN-MERGE 3.5-13
3.4.25 MESAGE MESAGE 3.4-39
3.5.9 MPART UPART 3.5-18
3.5.12 MPYAD MPYAD 3.5-22
3.5.12 MPYI MPYQ 3.5-28
3.5.12 MPY2NT MPYQ 3.5-28
3.5.12 MPY2T MPYQ 3.5-28
3.2-3(811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.4.26
3.5.15
3.4.2
3.4.13
3.4.1
3.5.2
3.4.24
3.4.24
3,4.24
3.5.6
3.4.22
3.4.70
3.4.70
3.4.70
3,4.70
3,4.63
3.4,67
3.4.30
3.4,36
3.4.39
3.4.37
3.4.38
3,4.49
3.4.20
3.5.15
3.4.13
3.4.50
3.4.50
3.4.50
3.4.16EntryPoint
MSGWRT
&lt;em&gt;NETW&lt;/em&gt;
_PEN
_PNC_R
_RF
PACK
PAGE
PAGEI
PAGE2
PARTN
PEXIT
PHDMIA
PHDMIB
PHDMIC
PHDMID
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
RC_RE
RDC@R
RDMODE
RDM_DX
RDM_DY
RDTRLSubroutine Description
MSGWRT
DEC@MP
@PEN
@PNC@R
MAPFNS
PACK
PAGE
PAGE
PAGE
PARTN-MERGE
PEXIT
PHDMIA
PHDMIA
PHDMIA
PHDMIA
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
DECAMP
_PNC_R
RDM_DX
RDM_DX
RDM_DX
WRTTRLPageNumber
3.4-40
3.5-54
3.4-3
3.4-20
3.4-I
3.5-5
3.4-38
3.4-38
3.4-38
3.5-13
3.4-36
3.4-118
3.4-118
3,4-118
3.4-118
3.4-106
3.4-113
3.4-44
3.4-55
3.4-67
3.4-64
3.4-66
3.4-81
3.4-32
3.5-58
3.4-20
3.4-83
3.4-83
3.4-83
3.4-24
3.2-4 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEX OFENTRY POINTS FORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description
3.4.50 RDW_RD RDM@DX
3.4.5 READ READ
3.3.15 RETURN RETURN
3.4.8 REWIND REWIND
3.4.1 RSHIFT MAPFNS
3.5.27 RSPL(&lt;em&gt;I RSPSDC
3.5.27 RSPSDC RSPSDC
3.5.6 RULER PARTN -MERGE
3.5.26 SADD SADD
3.4.78 SAD_TB SADOTB
3.4.79 SAXB SAXB
3.4.51 SCL@SE SGIN&lt;/em&gt;
3o5o!4 SDC_MP SDC_MP
3.5.8 SDRIB SDRIB
3.3.6 SEARCH SEARCH
3.4.43 SELCAM SELCAM
3.3.3 SEMINT SEMINT
3.3.14 SEMTRN SEMTRN
3.4.51 SE_F SGIN_
3.4.10 SKPFIL SKPFIL
3.4.42 SKPFRM SKPFRM
3.5.20 S_LVER S_LVER
3.4.51 S_PEN SGIN_
3.4.31 S_RT S_RT
3.5.7 SSG2A SSG2A
3.5.13 SSG2B SSG2B
3.5.11 SSG2C SSG2C
3.5.18 SSG3A SSG3A
3.3.11 SSWTCH SSWTCH
3.4.52 STPL_T STPL_TPageNumber
3.4-83
3.4-6
3.3-20
3.4-I0
3.4-I
3.5-80
3.5-80
3.5-14
3.5-78
3.4-128
3.4-129
3.4-85
3.5-30
3.5-17
3.3-8
3.4-74
3.3-3
3.3-19
3.4-85
3.4-12
3.4-73
3.5-69
3.4-85
3.4-46
3.5-16
3.5-29
3.5-20
3.5-66
3.3-15
3.4-87
3.2-5 (811172)&lt;/p&gt;
&lt;p&gt;Section Number
3.4.51
3.4.53
3.5.15
3.4.39
3.4.29
3.4,21
3.5.15
3.4.54
3.4,23
3.5.24
34.37
35.15
34,38
35.25
33.13
34,55
3.4.55
3.4.55
3.4.55
3.4.55
3.4.56
3.4.57
3.5.4
3.5.9
3.4.27
3,4.58
3.4.59
3.4.60
3.4.64
3.4.65
3.4.66SUBROUTINE DESCRIPTIONS
EntryPoint
SWRITE
SYMBBL
T
TAB
TABPRT
TAPBIT
TFIN
TIPE
TMTOGO
TRANPI
TRANSD
TRANSP
TRANSS
TRNSP
TTLPGE
TYPE1
TYPE2
TYPE3
TYPE9
TYPEIO
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOSubroutine Description
SGINO
SYMBOL
DECAMP
PRETAB
TABPRT
TAPBIT
DECAMP
TIPE
TMT_G@
TRANPI
PRETRD
DEC@MP
PRETRS
TRNSP
TTLPGE
TYPEi
TYPEi
TYPEi
TYPEi
TYPEi
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOPageNumber
3.4-85
3.4-88
3.5-58
3.4-67
3.4-43
3.4-35
3.5-58
3.4-90
3.4-37
3.5-75
3.4-64
3.5-53
3.4-66
3.5-76
3.3-17
3.4-92
3.4-92
3.4-92
3.4-92
3.4-92
3.4-94
3.4-96
3.5-10
3.5-18
3.4-41
3.4-98
3.4-100
3.4-102
3.4-108
3,4-110
3.4-111
3.2-6 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Nu_er Entry Point Subroutine Description PageNu_er
3.4.3 WRITE WRITE 3.4-4
3.4.13 WRTC{&lt;em&gt;R (&lt;em&gt;PNC{&lt;/em&gt; R 3.4-20
3.4.16 WRTTRL WRTTRL 3.4-24
3.3.lO XE_T XE_T 3.3-I4
3.4.Il XGIN{&lt;/em&gt; XGIN_ 3.4-I3
3.5.15 XL(_OP DEC(&lt;em&gt;MP 3.5-60
3.4.l X(&lt;em&gt;RF MAPFNS 3.4-I
3.4.19 XRCARD XRCARD 3.4-27
3.3.8 XSEMXX XSEMXX 3.3-Il
3.3.l XSEMI XSEMI 3.3-I
3.3.7 XSEM2 XSEMi 3.3-9
3.3.7 XSEM3 XSEMi 3.3-9
3.&lt;/em&gt;&lt;/em&gt; X_FM4 XSEMi 33-9 J.l &amp;hellip;. &amp;quot;
3.3.7 XSEM5 XSEMi 3.3-9
3.3.7 XSEM6 XSEMi 3.3-9
3.3.7 XSEM7 XSEMi 3.3-9
3o3.7 XSEM9 XSEMi 3.3-9
3.3.7 XSEMI0 XSEMi 3.3-9
3.3.7 XSEMIl XSEMi 3.3-9
3.3.7 XSEMI2 XSEMi 3.3-9
3.3.7 XSEMI3 XSEMi 3.3-9
3.3.7 XSEMI4 XSEMi 3.3-9
3.5.1 ZBLPKI BLDPK 3.5-I
3.5.3 ZNTPKI INTPK 3.5-7
3.2-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3
3.3.1
3.3.1.1
3.3.1.2EXECUTIVESUBROUTINE DESCRIPTIONS.
XSEMI (Executive Sequence Monitor, Preface).
Entry Point: XSEMI.
Purpose
Toinitiate theexecution oftheNASTRAN Preface.
3.3.1.3 Calling Sequence
CALLXSEMI
3.3.1.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine SEMINT
iscalled toexecute theprogram Preface (i.e. input file processors andDMAP Drogram compiler).
After initiating theproblem, modules arecalled asdirected bythe_SCAR until, amodule is
encountered inthe@SCAR thatdoesnotreside inlinklatwhich time XSEMI calls subroutine
ENDSYS toloadanewl&amp;hellip;.II1_â€¢
3.3.1.5 Design Requirements
XSEMI mustreside inthecore resident portion oflinkI.Linklisnotre-entrant which
means thatoncetheprogram leaves linklitcannever transfer control backtolinkI.Functional
DMAPmodules cannotreside inlinkI.Open coreisusedforaGINBbuffer with named common block
/ESFA/defining thebeginning ofopencore. Seethesecond paragraph ofthedesign requirements
section ofthesubroutine description XSEMi (seesection 3.3.7) fordetails onfiles, datablocks,
andcommon blocks necessary foroperation.
3.3-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.2 BTSTRP (Bootstrap Generator I.
3.3.2.1 EntryPoint: BTSTRP.
3.3.2.2 Purpose
Determines themachine typeandinitializes themachine dependent constants andmasks
within theNASTRAN system blockdataprogram (SEMDBD).
3.3.2.3 Calling Sequence
CALLBTSTRP
3.3.2.4 Method
Themachine type(IBM7094,IBMS/360, Univac 1108,CDC6600)isdetermined byinspection of
themachine binary wordlength andtheknownmethods ofrepresenting negative integers (sign
andmagnitude orones/twos complement) usingthefollowing algorithm:
I.Iftheonescomplement (COMPLF seesection 3.4.1) of-Iisgreater than2,themachine
istheIBM7094. Ifnot,themachine isanIBMS/360, Univac 1108orCDC6600. (i.e., only
thesignandmagnitude representation of-Ionthe7094willyieldalarge (&amp;gt;2)positive
valuewhencomplemented.)
2.Shift(RSHIFT seesection 3.4.1) abinary machine wordofalll&amp;rsquo;stotherightthirty-
twobinary places. Compare theresulting valueto15.Ifthevalueislessthanfifteen,
themachine isthe32bitIBMS/360; equaltofifteen, the36bitUnivac 1108;andgreater
thanfifteen, the60bitCDC6600.
Oncethemachine typeisknown, theproper constants andmasks areselected fromassembled tables.
3.3.2.5 Design Requirements
Thissubroutine mustbemodified ifitistooperate withotherthanthefourmachine types
listed above.
3.3-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPIIONS
3.3.3 SEMINT (Sequence Monitor Initialization).
3.3.3.1 Entry Point: SEMINT.
3.3.3.2 Purpose
Toexecute thePreface ofaNASTRAN problem solution.
3.3.3.3 Calling Sequence
CALL SEMINT
3.3.3.4 Method
Thefirst card OftheNASTRAN data deck isread from thesystem input file anditsimaqe
stored inblank C@MMBN. XRCARD iscalled toconvert thecard. Ifthename ofthecard is
NASTRAN, &lt;em&gt;ecard isechoed andkeywords areidentified andappropriate words of/SYSTEM/are
reset totheinput values. Ifanunidentified keyword isdetected, orthecard hasaformat error,
amessage isprinted andtheN_GOflagisturned on.ThefirstwordofblankC_MM_N issettoc;b-&lt;/em&gt;
ifthecardwasaNASTRAN card,tozerootherwise. ThenGNFIAT iscalled togenerate theinitial
FIAT. XCSAiscalled toreadandprocess theExecutive Control Deck. IFPIiscalled toreadand
process theCaseControl Deck. XSORTiscalled toreadandsorttheBulkDataDeck. Ifbulk
dataispresent, IFPiscalled toprocess it.Iftheproblem isaconical shellproblem, IFP3is
called tofurther process zhebulk data. Ifthecurrent runistoprepare aUser&amp;rsquo;s Master File,
UMFEDT iscalled andcont_i isreturned toXS_RTforeachnewproblem tobewritten ontheUMF.
Otherwise, XGPIiscalled toperform General Problem Initialization andthenreturn ismadeto
XSEMIsignifying completion ofthePreface.
3.3.3.5 Design Requirements
IftheNASTRAN cardispresent, itmustbethefirstcardofthedatadeck.
3.3.3.6 Diagnostic Messages
UNIDENTIFIED NASTRAN KEYW_RD
BUFFSIZE
C_NFIG
MAXFILES
IvIAXOPEN
SYSTEMACCEPTABLE KEYW_RDS F{_LL{_W&amp;ndash;
3.3-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Self-explanatory.
NASTRAN CARDD_ESNOTHAVEC_RRECT F_RMAT.
Typical errors include non-integer values orcontinuation ofthecardfollowinq an=sign.
Seesection 6.3.1forfurther details ontheNASTRAN card.
3.3-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.4 GNFIAT (Generate FIAT).
3.3.4.1 Entry Point: GNFIAT.
3.3.4.2 Purpose
Determines thenumber oflogical files available within thecomputer hardware andsoftware
configuration andplaces anentry foreachintoFIATorXFIAT.
3.3.4.3 Calling Sequence
CALL GNFIAT
GNFIAT mustbecalled onceandonlyonceasthefirst call fromthepreface.
3.3.4.4 Method
Eachcomputer configuration hasitsownindependent subroutine toaccomplish thenecessary
functions ofGNFIAT. Thesubroutine interrogates unitblocks, datadefinition cards, filetables,
etco tod_termine thenumber oflogical files available within theconfiguration. Aseach
logical fileissensed, itisdetermined whether thefilehasbeenassigned toaohysical magnetic
tapeorsomebulk storage device suchasdiskordrum. Eachfilehasalogical nameand/or
number foridentification. These file ID&amp;rsquo;sarestored inFIAT, XFIAT orbothdepending on
several factors. AsthefileIDisstored, aphysical tapeflagissetwhere appropriate. The
factors thatdetermine FIATvs.XFIAT storage areasfollows: l)thefirst PFIST (seesection
2.4foradescription oftheFIST) files sensed arealways entered intoXFIAT, 2)except forthe
first file (always theP_L), allofthefirst PFIST files without tapeflags arealsoentered
intoFIAT, and3)allother files areentered intoFIATonly.
3.3.4.5 Design Requirements
Since GNFIAT routines arecomputer hardware/software dependent, operational requirements
maydiffer atvarious times. Seeappropriate commented assembly listing ifdifficulties or
error codes areencountered.
3.3-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.5 ENDSYS (End-of-Link).
3.3.5,1 EntryPoints: ENDSYS, BGNSYS.
3.3.5.2 Purpose
ForENDSYS, tosavevarious NASTRAN core-resident Executive Tables onascratch fileforuse
incommunicating withthenextlinkrequested.
ForBGNSYS, torestore theNASTRAN Executive Tables savedbyENDSYS andtoposition the
_SCARatthecorrect entrytobeexecuted intheresident link.
3.3.5.3 Calling Sequences
CALLENDSYS(LINK,X,REWFLG)
LINK -BCDnameofthelink. Thenaming convention is:NSOI=linkl,NS02=link2,
etc.
-Dependent onmachine type. FortheIBM7094only,X(6BCDcharacters) specifies
theunitwhere thelinksarestored. Notusedonothermachines.
REWFLG :0indicates LINKisaheadofcurrent link(i.e.wearegoingfromlinkNto
linkN+K,KTM0).IBM7094only;notusedonothermachines.
REWFLG :1indicates LINKisbehind current link(i.e.wearegoingfromlinkNto
linkN+K,K&amp;lt;0).IBM7094only;notusedonothermachines.
CALLBGNSYS.
3.3.5.4 Method
ForENDSYS, asearch ismadeforanempty fileandwhenfound theExecutive Tables are
written (saved) onit.Apointer tothesavefileissavedinblank common orwritten ona
system fileforusebyBGNSYS whenthenewlinkisloaded. Subroutine SEARCH isthencalled to
loadtherequested link.
BGNSYS iscalled afteranewlinkisloaded. Thepointer tothesavefilecontaining the
Executive Tables isobtained fromeither blankcommon orasystem file,andtheExecutive Tables
arereloaded intocore. The@SCARispositioned atthecorrect entrytobeexecuted, anda
RETURN ismadetothecalling routine.
3.3-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.5.5 Design Requirements
Program links areusually considered tobephysically separate Drograms, essentially
independent ofoneanother except forthefact that theoperating system executive (not theNASTRAN
executive) provides ameans bywhich control canbetransferred from onelink toanother when
requested bytheuser. Themeans bywhich theoperating system executive transfers control from
onelink toanother isdependent upon themachine andthesystem being used. Forsome future
machir,es there maybenomeans forbuilding physically separate links sothelinks become
logical subsets ofonehuge program.
Nomatter howthelinks areformed itisnecessary, when transferring from onelink to
another, that allfile assignments bepreserved aswell astheir status (i.e. don&amp;rsquo;t rewind thetapes).
Open core isused forGIN_ buffer area andthebeninning ofopen core isdefined bynamed
common block /ESFA/.
Ifnosave file isavailable orifanyoftheExecutive Tables tobewritten exceeds 900
words, thejobisterminated.
3.3-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.6 SEARCH (Search_ Load,andExecute Link).
3.3.6.1 EntryPoint: SEARCH.
3.3.6.2 Purpose
SEARCH locates (searches for)aparticular linkoftheNASTRAN system ontheLinkStoraQe
File,loadsthelinkintothecomputer memory andtransfers execution control tothelinkentry
point XSEMi, i=2,3,&amp;hellip;.
3.3.6.3 Calling Sequence
CALLSEARCH(LKNAM,LKFIL,REW)
LKNAM=4character symbolic nameoflink,i.e.,NSOI,NS02forlinkI,link2,etc.
LKFIL=symbolic nameoftheLinkStorage File(IBM7094only)
REW=setnon-zero toposition asequential LinkStorage Filetoitsbeginning
(IBM7094only)
3.3.6.4 Method
SEARCH ismachine dependent. Itinterfaces withthemachine operatin_ system toprovide a
multi-link capability. Eachlinkisasomewhat arbitrary parto#thecomplete NASTRAN system.
Thedivision intolinkswasnecessary onlybecause ofthesizelimitation forprogram complexes
imposed bythevarious operating systems. Thelinking technique foreachmachine isdiscussed
insection 5oftheProgrammer&amp;rsquo;s Manual.
3.3.6.5 Design Requirements
OnlytheIBil7094system requires theLinkStorage Filetobenamed (LKFIL) and,since itis
sequential, provides thecapability ofrewinding itfollowing aSEARCH call. Allothersystems
provide random access (disk, drum) LinkStorage Files.
3.3.6.6 Diagnostic Messages
Individual SEARCH subroutines mayabnormally terminate duetohardware malfunction. See
appropriate commented assembly listing ifdifficulties orerror codesareencountered.
3.3-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.7 XSEF!i (Link iMainProgram, i:2_3&amp;hellip;.
3.3.7.1 Entry Point: XSEMi.
3.3.7.2 Purpose
Togetthenextn_)dule tobeexecuted fromthe_SCAR, initialize themodule andcallit
ifitisinlinki,ortransfer tothelinkinwhich module resides ifitisnotinlinki.
3.3.7.3 Calling Sequence
Example: CALL XSEM2, wi_ere XSEM2 istheentry point oflink2
3.3.7.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine BGNSYS
iscalled toreload Executive Tables saved fromtheprevious link.
Thenext_SCAR entry isread intocoreandprocessed. Iftheentry isforafunctional
module, subroutine GNFIST iscalled tolinkfiles with inout, outnut andscratch datablocks
needed bythemodule. Variable parameter values needed bythemodule aretransferred toblank
common from table VPSwhich resides innamed con_non block /XVPS/.Constant values inthe_SCAR
entry parameter section aretransferred toblank common.
Thelinkspecification table innamed common block /XLINK/isexamined toseeifthemodule
resides inthislink. Ifitdoes, themodule iscalled. Upon returning fromthemodule, the
diagnostic message queue ischecked andmessage writer MSGWRT iscalled ifthere aremessages
queued. Begin andendexecution times areprinted outforfunctional modules.
Thenext_SCAR entry isreadandtheprocess isrepeated until amodule isencountered which
does notreside inthislink, atwhich timesubroutine ENL&amp;rsquo;SYS iscalled toinitiate loading ofthe
linkcontaining themodule.
3.3.7.5 Design Requirements
XSEMi mustreside inthecoreresident portion oflinki.L$nk iisre-entrant which means
program control canbetransferred tothislinkasoften asneeded. Onencore isusedfora
GINO buffer with named common block /ESFA/defining thebeainninp o_opencore. An_SCAR entry
cannot begreater than200words.
3.3-9&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Files, datablocks andnamedcommon blocks needed byXSEMiarelisted below, alongwithtype
ofaccess required (i.e.fetchand/or storedata)andreasons foruse.
DataPoolFile-fetch. Contains X_SCAR datablock.
X_SCAR -fetch. Contains _SCARentrytobeprocessed.1â€¢
2.
3.
4.
5.
6.
7.
8.
9.
I0.
3.3.7.6Common /XLINK/ -fetch.
Common /XFIST/ -store.
Common /XPFIST/ -fetch.
Common /_SCENT/ -fetch.
Common /ESFA/ -store.
Common /XVPS/ -fetch.
tobeexecuted.
Common /MSGX/ -fetch.
Common /SEM/-fetch.
Diagnostic MessagesContains linkspecification table.
Initialized priortocallino GNFIST.
Contains parameter needed toinitialize FISTtable.
Contains _SCARentry tobenrocessed.
Defines beginning ofopencoreareausedbyGIN_buffer.
Contains variable parameter values needed toinitialize module
Contains diagnostic message queue,
Contains BCDnamesoflinksNSOI,NS02, &amp;hellip;.
Amessage iswritten ifthemodule tobeexecuted required morefilesthanareavailable.
Thejobisthenterminated.
3.3-10&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P19</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_019/</guid>
      <description>
        
        
        &lt;p&gt;INTRODUCTION
3.1INTRODUCTION
Section3contains descriptions ofsubroutines notanintegral partofamodule. Those sub-
routines which areanintegral partofamodule arediscussed insection 4,Module Functional
Descriptions. Section 3.2contains analphabetical index ofentry points ofroutines documented
insection 3.Asimilar index ofentry points documented insection 4canbefound insection
4.1.3.
Subroutine descriptions havebeenpartitioned into3classifications: executive, utility and
matrix subroutine descriptions, documented insections 3.3,3.4,and3.5respectively.
Descriptions oftheplotting utility routines (e.g., AXIS, section 3.4.40; AXISi, section
3.4.41) refer toplotters bynumber ortheletter &amp;ldquo;i&amp;rdquo;,andtoplotter models bynumber only. The
correspondence ofthese numbers toplotter hardware isgiven inTable I.Further details canbe
found insection 4oftheUser&amp;rsquo;s Manual.
3.l-I (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Table I.Correspondence Between External andInternal Plotter andModelNamesandNumbers.
where:External External Internal Internal
plotter name modelname plotter number modelnumber
BL
EAI
SC
CALC_MP
DD
NASTRAN
BL
EAI
SCSTE,30 1 1LTE,30
3500,30 2 13500,45 8 1
4020,0 3 1
/765,2O5 5 4
765,210 4 4
765,105 5 5
765,110 4 5
763,205 7 4
763,210 6 4
763,105 7 5
763,110 6 5
565,205 5 2
565,210 4 2
565,105 5 3
565,110 4 3
565,305 5 1
565,310 4 1
563,205 7 2
563,210 6 2
563,105 7 3
563,110 6 3
563,305 7 l
_563,310 6 l
80,B 9 l
M,O I0 +I
T,O II +2
D,O II +3
Pi,l I0 -I
T,l II -2
D,l II -3
=Benson Lehner
=Electronic Associates Inc.
=Stromberg Carlson
3.1-2 (12-I-69)&lt;/p&gt;
&lt;p&gt;INTRODUCTION
TableI.Correspondence Between External andInternal Plotter andModelNamesandNumbers (Cont&amp;rsquo;d),
CALC@MP
DD
NASTRAN=California Computing
=DataDisplay
=NASTRAN General Purpose Plotter
3.1-3 (12-I-69)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
3.2ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS.
SectionNumber
3.5.10
3.4.1
3.4.40
3.4.41
3.4.41
3.4.7
3.3.5
3.4.74
3.5.1
35.1
35.1
33.2
35.5
35.16
35.16
3.4.4
3.4.18
3.4.1
3.5.16
3.3.12
3.4.1
3.4.1
3.5.28
3.5.28
3.5.16
3.5.29
3.5.16
3.4.76
3.4.77Entry Point Subroutine Description
ADD ADD
ANDF MAPFNS
AXIS AXIS
AXIS3 AXISi
AXISIO AXISi
BCKREC BCKREC
BGNSYS ENDSYS
BISRCH BISRCH
BLDPK BLDPK
BLDPKI BLDPK
BLDPKN BLDPK
BTSTRP BTSTRP
CALCV CALCV
CDC@MP CDC_MP
CL_P CDC@MP
CLOSE CLOSE
CLSTAB CLSTAB
COMPLF MAPFNS
COMI2 CDC_MP
CONMSG C_NMSG
CORSZ MAPFNS
CORWDS MAPFNS
CSPL_O CSPSDC
CSPSDC CSPSDC
CTRNSP CDC_MP
CXFBS CÃ—FBS
CXL_P CDC_MP
DAD_TB DAD_TB
DAXB DAXBPageNumber
3.5-19
3.4-I
3.4-70
3.4-72
3.4-72
3.4-9
3.3-6
3.4-123
3.5-I
3.5-I
3.5-I
3.3-2
3.5-12
3.5-62
3.5-63
3.4-5
3.4-26
3.4-I
3.5-63
3.3-16
3.4-I
3.4-I
3.5-82
3.5-82
3.5-63
3.5-84
3.5-63
3.4-126
3.4-127
3.2-I (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.5.15
3,4.72
3.5.15
3.5.15
3.5.21
3.4.68
3.4.62
3.5.22
3.3.5
3,4.9
3.5.23
3.5.17
3.5.17
3.5.17
3.5.12
3.5.15
3.5.15
3.4.17
3.4.69
3.4.75
3.4.15
3.4.6
3.5.15
3.5.19
3.4.12
3.4.61
3.4.32
3.4.33
3.3.4
3.3.9EntryPoint
DEC@MP
DELSET
DDL@@P
DL_@P
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACT@R
FBS
FBSDP
FBSSP
FILSWI
FINDC
FINWRT
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
GENVEC
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTSubroutine Description
DEC@MP
DELSET
DECAMP
DEC@MP
DMPY
DRWCHR
EJECT
ELIM
ENDSYS
E@F
FACTOR
FBS
FBS
FBS
MPYQ
DEC@MP
DECAMP
FNAME
FNDPLT
F@RFIL
FREAD
FWDREC
DEC@MP
GFBS
GIN@
GIN@I@
GMMATD
GMMATS
GNFIAT
GNFISTPageNumber
3.5-44
3.4-121
3.5-60
3.5-60
3,5-71
3.4-115
3.4-105
3.5-73
3.3-6
3.4-11
3.5-74
3.5-64
3.5-65
3.5-65
3.5-28
3.5-57
3.5-54
3.4-25
3.4-117
3.4-125
3.4-23
3,4-8
3.5-54
3.5-67
3.4-15
3.4-103
3.4-49
3.4-52
3.3-5
3.3-12
3.2-2(8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description Page Number
3.4.14 GOPEN G_PEN 3.4-22
3.4.71 HEAD HEAD 3.4-120
3.4.73 HMAT HMAT 3.4-122
3.4.44 IDPL_T IDPLBT 3.4-75
3.4.45 INTGPT INTGPX 3.4-76
3.4.45 INTGPX INTGPX 3.4-76
3.4.46 INTLST INTLST 3.4-77
3.5.3 INTPK INTPK 3.5-7
3.5.3 INTPKI INTPK 3.5-7
3.4.34 INVERD INVERD 3.4-53
3.4.35 INVERS INVERS 3.4-54
3.4.47 LINE LINE 3.4-78
3.4.48 LINE1 LINEi 3.4-79
3.4.48 LINE2 LINEi 3.4-79
3.4.48 LINE3 LINEi 3,4-79
3.4.48 LINE4 LINEi 3.4-79
3.4.48 LINE9 LINEi 3.4-79
3.4.48 LINEIO LINEi 3,4-79
3.4.30 LOCATE PREL_C 3.4-44
3.5.14 L_BP SDCBMP 3.5-42
3.4.1 LSHIFT MAPFNS 3.4-I
3.4.36 MAT PREMAT 3.4-55
3.4.28 MATDUM MATDUM 3.4-42
3.5.6 MERGE PARTN-MERGE 3.5-13
3.4.25 MESAGE MESAGE 3.4-39
3.5.9 MPART UPART 3.5-18
3.5.12 MPYAD MPYAD 3.5-22
3.5.12 MPYI MPYQ 3.5-28
3.5.12 MPY2NT MPYQ 3.5-28
3.5.12 MPY2T MPYQ 3.5-28
3.2-3(811172)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Section Number
3.4.26
3.5.15
3.4.2
3.4.13
3.4.1
3.5.2
3.4.24
3.4.24
3,4.24
3.5.6
3.4.22
3.4.70
3.4.70
3.4.70
3,4.70
3,4.63
3.4,67
3.4.30
3.4,36
3.4.39
3.4.37
3.4.38
3,4.49
3.4.20
3.5.15
3.4.13
3.4.50
3.4.50
3.4.50
3.4.16EntryPoint
MSGWRT
&lt;em&gt;NETW&lt;/em&gt;
_PEN
_PNC_R
_RF
PACK
PAGE
PAGEI
PAGE2
PARTN
PEXIT
PHDMIA
PHDMIB
PHDMIC
PHDMID
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
RC_RE
RDC@R
RDMODE
RDM_DX
RDM_DY
RDTRLSubroutine Description
MSGWRT
DEC@MP
@PEN
@PNC@R
MAPFNS
PACK
PAGE
PAGE
PAGE
PARTN-MERGE
PEXIT
PHDMIA
PHDMIA
PHDMIA
PHDMIA
PLAMAT
PLTSET
PREL_C
PREMAT
PRETAB
PRETRD
PRETRS
PRINT
RCARD
DECAMP
_PNC_R
RDM_DX
RDM_DX
RDM_DX
WRTTRLPageNumber
3.4-40
3.5-54
3.4-3
3.4-20
3.4-I
3.5-5
3.4-38
3.4-38
3.4-38
3.5-13
3.4-36
3.4-118
3.4-118
3,4-118
3.4-118
3.4-106
3.4-113
3.4-44
3.4-55
3.4-67
3.4-64
3.4-66
3.4-81
3.4-32
3.5-58
3.4-20
3.4-83
3.4-83
3.4-83
3.4-24
3.2-4 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEX OFENTRY POINTS FORSUBROUTINE DESCRIPTIONS
Section Number Entry Point Subroutine Description
3.4.50 RDW_RD RDM@DX
3.4.5 READ READ
3.3.15 RETURN RETURN
3.4.8 REWIND REWIND
3.4.1 RSHIFT MAPFNS
3.5.27 RSPL(&lt;em&gt;I RSPSDC
3.5.27 RSPSDC RSPSDC
3.5.6 RULER PARTN -MERGE
3.5.26 SADD SADD
3.4.78 SAD_TB SADOTB
3.4.79 SAXB SAXB
3.4.51 SCL@SE SGIN&lt;/em&gt;
3o5o!4 SDC_MP SDC_MP
3.5.8 SDRIB SDRIB
3.3.6 SEARCH SEARCH
3.4.43 SELCAM SELCAM
3.3.3 SEMINT SEMINT
3.3.14 SEMTRN SEMTRN
3.4.51 SE_F SGIN_
3.4.10 SKPFIL SKPFIL
3.4.42 SKPFRM SKPFRM
3.5.20 S_LVER S_LVER
3.4.51 S_PEN SGIN_
3.4.31 S_RT S_RT
3.5.7 SSG2A SSG2A
3.5.13 SSG2B SSG2B
3.5.11 SSG2C SSG2C
3.5.18 SSG3A SSG3A
3.3.11 SSWTCH SSWTCH
3.4.52 STPL_T STPL_TPageNumber
3.4-83
3.4-6
3.3-20
3.4-I0
3.4-I
3.5-80
3.5-80
3.5-14
3.5-78
3.4-128
3.4-129
3.4-85
3.5-30
3.5-17
3.3-8
3.4-74
3.3-3
3.3-19
3.4-85
3.4-12
3.4-73
3.5-69
3.4-85
3.4-46
3.5-16
3.5-29
3.5-20
3.5-66
3.3-15
3.4-87
3.2-5 (811172)&lt;/p&gt;
&lt;p&gt;Section Number
3.4.51
3.4.53
3.5.15
3.4.39
3.4.29
3.4,21
3.5.15
3.4.54
3.4,23
3.5.24
34.37
35.15
34,38
35.25
33.13
34,55
3.4.55
3.4.55
3.4.55
3.4.55
3.4.56
3.4.57
3.5.4
3.5.9
3.4.27
3,4.58
3.4.59
3.4.60
3.4.64
3.4.65
3.4.66SUBROUTINE DESCRIPTIONS
EntryPoint
SWRITE
SYMBBL
T
TAB
TABPRT
TAPBIT
TFIN
TIPE
TMTOGO
TRANPI
TRANSD
TRANSP
TRANSS
TRNSP
TTLPGE
TYPE1
TYPE2
TYPE3
TYPE9
TYPEIO
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOSubroutine Description
SGINO
SYMBOL
DECAMP
PRETAB
TABPRT
TAPBIT
DECAMP
TIPE
TMT_G@
TRANPI
PRETRD
DEC@MP
PRETRS
TRNSP
TTLPGE
TYPEi
TYPEi
TYPEi
TYPEi
TYPEi
TYPFLT
TYPINT
UNPACK
UPART
USRMSG
WPLTI
WPLT2
WPLT3
WPLT4
WPLT9
WPLTIOPageNumber
3.4-85
3.4-88
3.5-58
3.4-67
3.4-43
3.4-35
3.5-58
3.4-90
3.4-37
3.5-75
3.4-64
3.5-53
3.4-66
3.5-76
3.3-17
3.4-92
3.4-92
3.4-92
3.4-92
3.4-92
3.4-94
3.4-96
3.5-10
3.5-18
3.4-41
3.4-98
3.4-100
3.4-102
3.4-108
3,4-110
3.4-111
3.2-6 (8/I/72)&lt;/p&gt;
&lt;p&gt;ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS
Section Nu_er Entry Point Subroutine Description PageNu_er
3.4.3 WRITE WRITE 3.4-4
3.4.13 WRTC{&lt;em&gt;R (&lt;em&gt;PNC{&lt;/em&gt; R 3.4-20
3.4.16 WRTTRL WRTTRL 3.4-24
3.3.lO XE_T XE_T 3.3-I4
3.4.Il XGIN{&lt;/em&gt; XGIN_ 3.4-I3
3.5.15 XL(_OP DEC(&lt;em&gt;MP 3.5-60
3.4.l X(&lt;em&gt;RF MAPFNS 3.4-I
3.4.19 XRCARD XRCARD 3.4-27
3.3.8 XSEMXX XSEMXX 3.3-Il
3.3.l XSEMI XSEMI 3.3-I
3.3.7 XSEM2 XSEMi 3.3-9
3.3.7 XSEM3 XSEMi 3.3-9
3.&lt;/em&gt;&lt;/em&gt; X_FM4 XSEMi 33-9 J.l &amp;hellip;. &amp;quot;
3.3.7 XSEM5 XSEMi 3.3-9
3.3.7 XSEM6 XSEMi 3.3-9
3.3.7 XSEM7 XSEMi 3.3-9
3o3.7 XSEM9 XSEMi 3.3-9
3.3.7 XSEMI0 XSEMi 3.3-9
3.3.7 XSEMIl XSEMi 3.3-9
3.3.7 XSEMI2 XSEMi 3.3-9
3.3.7 XSEMI3 XSEMi 3.3-9
3.3.7 XSEMI4 XSEMi 3.3-9
3.5.1 ZBLPKI BLDPK 3.5-I
3.5.3 ZNTPKI INTPK 3.5-7
3.2-7 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3
3.3.1
3.3.1.1
3.3.1.2EXECUTIVESUBROUTINE DESCRIPTIONS.
XSEMI (Executive Sequence Monitor, Preface).
Entry Point: XSEMI.
Purpose
Toinitiate theexecution oftheNASTRAN Preface.
3.3.1.3 Calling Sequence
CALLXSEMI
3.3.1.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine SEMINT
iscalled toexecute theprogram Preface (i.e. input file processors andDMAP Drogram compiler).
After initiating theproblem, modules arecalled asdirected bythe_SCAR until, amodule is
encountered inthe@SCAR thatdoesnotreside inlinklatwhich time XSEMI calls subroutine
ENDSYS toloadanewl&amp;hellip;.II1_â€¢
3.3.1.5 Design Requirements
XSEMI mustreside inthecore resident portion oflinkI.Linklisnotre-entrant which
means thatoncetheprogram leaves linklitcannever transfer control backtolinkI.Functional
DMAPmodules cannotreside inlinkI.Open coreisusedforaGINBbuffer with named common block
/ESFA/defining thebeginning ofopencore. Seethesecond paragraph ofthedesign requirements
section ofthesubroutine description XSEMi (seesection 3.3.7) fordetails onfiles, datablocks,
andcommon blocks necessary foroperation.
3.3-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.2 BTSTRP (Bootstrap Generator I.
3.3.2.1 EntryPoint: BTSTRP.
3.3.2.2 Purpose
Determines themachine typeandinitializes themachine dependent constants andmasks
within theNASTRAN system blockdataprogram (SEMDBD).
3.3.2.3 Calling Sequence
CALLBTSTRP
3.3.2.4 Method
Themachine type(IBM7094,IBMS/360, Univac 1108,CDC6600)isdetermined byinspection of
themachine binary wordlength andtheknownmethods ofrepresenting negative integers (sign
andmagnitude orones/twos complement) usingthefollowing algorithm:
I.Iftheonescomplement (COMPLF seesection 3.4.1) of-Iisgreater than2,themachine
istheIBM7094. Ifnot,themachine isanIBMS/360, Univac 1108orCDC6600. (i.e., only
thesignandmagnitude representation of-Ionthe7094willyieldalarge (&amp;gt;2)positive
valuewhencomplemented.)
2.Shift(RSHIFT seesection 3.4.1) abinary machine wordofalll&amp;rsquo;stotherightthirty-
twobinary places. Compare theresulting valueto15.Ifthevalueislessthanfifteen,
themachine isthe32bitIBMS/360; equaltofifteen, the36bitUnivac 1108;andgreater
thanfifteen, the60bitCDC6600.
Oncethemachine typeisknown, theproper constants andmasks areselected fromassembled tables.
3.3.2.5 Design Requirements
Thissubroutine mustbemodified ifitistooperate withotherthanthefourmachine types
listed above.
3.3-2&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPIIONS
3.3.3 SEMINT (Sequence Monitor Initialization).
3.3.3.1 Entry Point: SEMINT.
3.3.3.2 Purpose
Toexecute thePreface ofaNASTRAN problem solution.
3.3.3.3 Calling Sequence
CALL SEMINT
3.3.3.4 Method
Thefirst card OftheNASTRAN data deck isread from thesystem input file anditsimaqe
stored inblank C@MMBN. XRCARD iscalled toconvert thecard. Ifthename ofthecard is
NASTRAN, &lt;em&gt;ecard isechoed andkeywords areidentified andappropriate words of/SYSTEM/are
reset totheinput values. Ifanunidentified keyword isdetected, orthecard hasaformat error,
amessage isprinted andtheN_GOflagisturned on.ThefirstwordofblankC_MM_N issettoc;b-&lt;/em&gt;
ifthecardwasaNASTRAN card,tozerootherwise. ThenGNFIAT iscalled togenerate theinitial
FIAT. XCSAiscalled toreadandprocess theExecutive Control Deck. IFPIiscalled toreadand
process theCaseControl Deck. XSORTiscalled toreadandsorttheBulkDataDeck. Ifbulk
dataispresent, IFPiscalled toprocess it.Iftheproblem isaconical shellproblem, IFP3is
called tofurther process zhebulk data. Ifthecurrent runistoprepare aUser&amp;rsquo;s Master File,
UMFEDT iscalled andcont_i isreturned toXS_RTforeachnewproblem tobewritten ontheUMF.
Otherwise, XGPIiscalled toperform General Problem Initialization andthenreturn ismadeto
XSEMIsignifying completion ofthePreface.
3.3.3.5 Design Requirements
IftheNASTRAN cardispresent, itmustbethefirstcardofthedatadeck.
3.3.3.6 Diagnostic Messages
UNIDENTIFIED NASTRAN KEYW_RD
BUFFSIZE
C_NFIG
MAXFILES
IvIAXOPEN
SYSTEMACCEPTABLE KEYW_RDS F{_LL{_W&amp;ndash;
3.3-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Self-explanatory.
NASTRAN CARDD_ESNOTHAVEC_RRECT F_RMAT.
Typical errors include non-integer values orcontinuation ofthecardfollowinq an=sign.
Seesection 6.3.1forfurther details ontheNASTRAN card.
3.3-4&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.4 GNFIAT (Generate FIAT).
3.3.4.1 Entry Point: GNFIAT.
3.3.4.2 Purpose
Determines thenumber oflogical files available within thecomputer hardware andsoftware
configuration andplaces anentry foreachintoFIATorXFIAT.
3.3.4.3 Calling Sequence
CALL GNFIAT
GNFIAT mustbecalled onceandonlyonceasthefirst call fromthepreface.
3.3.4.4 Method
Eachcomputer configuration hasitsownindependent subroutine toaccomplish thenecessary
functions ofGNFIAT. Thesubroutine interrogates unitblocks, datadefinition cards, filetables,
etco tod_termine thenumber oflogical files available within theconfiguration. Aseach
logical fileissensed, itisdetermined whether thefilehasbeenassigned toaohysical magnetic
tapeorsomebulk storage device suchasdiskordrum. Eachfilehasalogical nameand/or
number foridentification. These file ID&amp;rsquo;sarestored inFIAT, XFIAT orbothdepending on
several factors. AsthefileIDisstored, aphysical tapeflagissetwhere appropriate. The
factors thatdetermine FIATvs.XFIAT storage areasfollows: l)thefirst PFIST (seesection
2.4foradescription oftheFIST) files sensed arealways entered intoXFIAT, 2)except forthe
first file (always theP_L), allofthefirst PFIST files without tapeflags arealsoentered
intoFIAT, and3)allother files areentered intoFIATonly.
3.3.4.5 Design Requirements
Since GNFIAT routines arecomputer hardware/software dependent, operational requirements
maydiffer atvarious times. Seeappropriate commented assembly listing ifdifficulties or
error codes areencountered.
3.3-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.5 ENDSYS (End-of-Link).
3.3.5,1 EntryPoints: ENDSYS, BGNSYS.
3.3.5.2 Purpose
ForENDSYS, tosavevarious NASTRAN core-resident Executive Tables onascratch fileforuse
incommunicating withthenextlinkrequested.
ForBGNSYS, torestore theNASTRAN Executive Tables savedbyENDSYS andtoposition the
_SCARatthecorrect entrytobeexecuted intheresident link.
3.3.5.3 Calling Sequences
CALLENDSYS(LINK,X,REWFLG)
LINK -BCDnameofthelink. Thenaming convention is:NSOI=linkl,NS02=link2,
etc.
-Dependent onmachine type. FortheIBM7094only,X(6BCDcharacters) specifies
theunitwhere thelinksarestored. Notusedonothermachines.
REWFLG :0indicates LINKisaheadofcurrent link(i.e.wearegoingfromlinkNto
linkN+K,KTM0).IBM7094only;notusedonothermachines.
REWFLG :1indicates LINKisbehind current link(i.e.wearegoingfromlinkNto
linkN+K,K&amp;lt;0).IBM7094only;notusedonothermachines.
CALLBGNSYS.
3.3.5.4 Method
ForENDSYS, asearch ismadeforanempty fileandwhenfound theExecutive Tables are
written (saved) onit.Apointer tothesavefileissavedinblank common orwritten ona
system fileforusebyBGNSYS whenthenewlinkisloaded. Subroutine SEARCH isthencalled to
loadtherequested link.
BGNSYS iscalled afteranewlinkisloaded. Thepointer tothesavefilecontaining the
Executive Tables isobtained fromeither blankcommon orasystem file,andtheExecutive Tables
arereloaded intocore. The@SCARispositioned atthecorrect entrytobeexecuted, anda
RETURN ismadetothecalling routine.
3.3-6&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.5.5 Design Requirements
Program links areusually considered tobephysically separate Drograms, essentially
independent ofoneanother except forthefact that theoperating system executive (not theNASTRAN
executive) provides ameans bywhich control canbetransferred from onelink toanother when
requested bytheuser. Themeans bywhich theoperating system executive transfers control from
onelink toanother isdependent upon themachine andthesystem being used. Forsome future
machir,es there maybenomeans forbuilding physically separate links sothelinks become
logical subsets ofonehuge program.
Nomatter howthelinks areformed itisnecessary, when transferring from onelink to
another, that allfile assignments bepreserved aswell astheir status (i.e. don&amp;rsquo;t rewind thetapes).
Open core isused forGIN_ buffer area andthebeninning ofopen core isdefined bynamed
common block /ESFA/.
Ifnosave file isavailable orifanyoftheExecutive Tables tobewritten exceeds 900
words, thejobisterminated.
3.3-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.6 SEARCH (Search_ Load,andExecute Link).
3.3.6.1 EntryPoint: SEARCH.
3.3.6.2 Purpose
SEARCH locates (searches for)aparticular linkoftheNASTRAN system ontheLinkStoraQe
File,loadsthelinkintothecomputer memory andtransfers execution control tothelinkentry
point XSEMi, i=2,3,&amp;hellip;.
3.3.6.3 Calling Sequence
CALLSEARCH(LKNAM,LKFIL,REW)
LKNAM=4character symbolic nameoflink,i.e.,NSOI,NS02forlinkI,link2,etc.
LKFIL=symbolic nameoftheLinkStorage File(IBM7094only)
REW=setnon-zero toposition asequential LinkStorage Filetoitsbeginning
(IBM7094only)
3.3.6.4 Method
SEARCH ismachine dependent. Itinterfaces withthemachine operatin_ system toprovide a
multi-link capability. Eachlinkisasomewhat arbitrary parto#thecomplete NASTRAN system.
Thedivision intolinkswasnecessary onlybecause ofthesizelimitation forprogram complexes
imposed bythevarious operating systems. Thelinking technique foreachmachine isdiscussed
insection 5oftheProgrammer&amp;rsquo;s Manual.
3.3.6.5 Design Requirements
OnlytheIBil7094system requires theLinkStorage Filetobenamed (LKFIL) and,since itis
sequential, provides thecapability ofrewinding itfollowing aSEARCH call. Allothersystems
provide random access (disk, drum) LinkStorage Files.
3.3.6.6 Diagnostic Messages
Individual SEARCH subroutines mayabnormally terminate duetohardware malfunction. See
appropriate commented assembly listing ifdifficulties orerror codesareencountered.
3.3-8&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.7 XSEF!i (Link iMainProgram, i:2_3&amp;hellip;.
3.3.7.1 Entry Point: XSEMi.
3.3.7.2 Purpose
Togetthenextn_)dule tobeexecuted fromthe_SCAR, initialize themodule andcallit
ifitisinlinki,ortransfer tothelinkinwhich module resides ifitisnotinlinki.
3.3.7.3 Calling Sequence
Example: CALL XSEM2, wi_ere XSEM2 istheentry point oflink2
3.3.7.4 Method
Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine BGNSYS
iscalled toreload Executive Tables saved fromtheprevious link.
Thenext_SCAR entry isread intocoreandprocessed. Iftheentry isforafunctional
module, subroutine GNFIST iscalled tolinkfiles with inout, outnut andscratch datablocks
needed bythemodule. Variable parameter values needed bythemodule aretransferred toblank
common from table VPSwhich resides innamed con_non block /XVPS/.Constant values inthe_SCAR
entry parameter section aretransferred toblank common.
Thelinkspecification table innamed common block /XLINK/isexamined toseeifthemodule
resides inthislink. Ifitdoes, themodule iscalled. Upon returning fromthemodule, the
diagnostic message queue ischecked andmessage writer MSGWRT iscalled ifthere aremessages
queued. Begin andendexecution times areprinted outforfunctional modules.
Thenext_SCAR entry isreadandtheprocess isrepeated until amodule isencountered which
does notreside inthislink, atwhich timesubroutine ENL&amp;rsquo;SYS iscalled toinitiate loading ofthe
linkcontaining themodule.
3.3.7.5 Design Requirements
XSEMi mustreside inthecoreresident portion oflinki.L$nk iisre-entrant which means
program control canbetransferred tothislinkasoften asneeded. Onencore isusedfora
GINO buffer with named common block /ESFA/defining thebeainninp o_opencore. An_SCAR entry
cannot begreater than200words.
3.3-9&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Files, datablocks andnamedcommon blocks needed byXSEMiarelisted below, alongwithtype
ofaccess required (i.e.fetchand/or storedata)andreasons foruse.
DataPoolFile-fetch. Contains X_SCAR datablock.
X_SCAR -fetch. Contains _SCARentrytobeprocessed.1â€¢
2.
3.
4.
5.
6.
7.
8.
9.
I0.
3.3.7.6Common /XLINK/ -fetch.
Common /XFIST/ -store.
Common /XPFIST/ -fetch.
Common /_SCENT/ -fetch.
Common /ESFA/ -store.
Common /XVPS/ -fetch.
tobeexecuted.
Common /MSGX/ -fetch.
Common /SEM/-fetch.
Diagnostic MessagesContains linkspecification table.
Initialized priortocallino GNFIST.
Contains parameter needed toinitialize FISTtable.
Contains _SCARentry tobenrocessed.
Defines beginning ofopencoreareausedbyGIN_buffer.
Contains variable parameter values needed toinitialize module
Contains diagnostic message queue,
Contains BCDnamesoflinksNSOI,NS02, &amp;hellip;.
Amessage iswritten ifthemodule tobeexecuted required morefilesthanareavailable.
Thejobisthenterminated.
3.3-10&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P2</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_002/</guid>
      <description>
        
        
        &lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.87.13
4.87.14
4.87.15Page No.
4.87.12.5 Stiffness Matrix Calculations (Subroutine KT_RDR
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-160
4.87.12.6 Mass Matrix Calculations (Subroutine MT_RDR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-165
4.87.12.7 Thermal Load Calculations (Subroutine TT_RDR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-166
4.87.12.8 Element Force andStress Calculations (Subroutines
STORDI andSTORD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-168
TheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
4.87.13.1
4.87.13.2Input Data fortheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
Damping Matrix Calculations (Subroutine BVISC of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-175
4.87.14.1
4.87.14.2
4.87.14.3
4.87.14.4
4.87.14.5
4.87.14.6Integral Calculations fortheTRIARG, TRAPRG Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-177
Integral Calculation forq&amp;gt;0andanyp.(Function
DKINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. ?&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;gt;0andq&amp;lt;-l(Function
DK8g) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;lt;0andq&amp;lt;-l(Function
DKIO0) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-180
Integral Calculations forp&amp;gt;-landq=-l(Function
DKJAB) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-181
Integral Calculations forp&amp;lt;-landq=-l(Function
DK219) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
Integral Calculations forp=-landq=-l(Function
DK211) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
TheFLUID2, FLUID3, FLUID4, AXIF2, AXIF3, AXlF4, andMFREE
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
4.87.15.1
4.87.15.2
4.87.15.3
4.87.15.4
4.87.15.5Input Data fortheFluid Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
Matrix Calculations fortheFLUID2 Element
(Subroutine KFLUD2 ofModule SMAIandSubroutine
MFLUD2 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-183
Matrix Calculations fortheFLUID3 Element
(Subroutine KFLUD3 ofModule SMAIandSubroutine
MFLUD3 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-186
Matrix Generation fortheFLUID4 Element
(Subroutine KFLUD4 inModule SMAIandSubroutine
MFLUD4 inModule SF_2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-188
Matrix Calculations fortheMFREEElement (Subroutine
MFREEinModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-189
xix(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.16
4.87.17TABLEOFCONTENTS (Continued)
PageNo.
4.87.15.6 Stress Calculations fortheAXIFElements,
Phase1&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-189
4.87.15.7 Stress Calculations fortheAXIFElements,
Phase2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
TheSL_T3andSLOT4FluidElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.1 InputDatafortheSL_T3andSL_T4Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.2 General Calculations fortheSLOTElements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-195
4.87.16.3 Stiffness Matrix Generation fortheSL_T3Elements &amp;hellip;.4.87-195
4.87.16.4 MassMatrix Generation fortheSL@T3 Elements &amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.5 Stress Matrix Calculations intheSL_TElements
(Phase I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.6 CSLOTi Element, Phase 2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-198
SolidPolyhedra Elements, TETRA, WEDGE, HEXAI, HEXA2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.1 InputDatafortheSolidPolyhedra Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.2 BasicEquations fortheTETRA Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-200
4.87.17.3 Stiffness Matrix Generations fortheTETRAElement
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.4 MassMatrix Generation fortheTETRA Element
(Subroutine MSOLID ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.5 Thermal LoadGeneration fortheTETRAElement
(Subroutine TETRAofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-201
4.87.17.6 Stress Calculations fortheTETRAElements
(Subroutines SSOLIDI andSSOLID2 ofModule SDR2) &amp;hellip;.. 4.87-202
4.87.17.7 BasicEquations fortheWEDGE, HEXAI, andHEXA2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-203
4.87.17.8 Stiffness Matrix Calculations andGeometry Checks
fortheWEDGE, HEXAI, andHEXA2 Elements (Subroutine
KSOLID ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-204
4.87.17.9 MassMatrix Generation fortheWEDGE, HEXAI, and
HEXA2 Elements (Subroutine MSOLID ofModule SMA2)&amp;hellip;.. 4.87-205
4.87.17.10 Thermal LoadGeneration fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutine S_LID ofModule SSG2)&amp;hellip;&amp;hellip; 4.87-206
4.87.17.11 Stress DataRecovery fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutines SSOLIDI andSS_LID2 of
Module SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-206
4.87.17.12 Thermal Analysis Calculations fortheSolid Elements
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-207
xx(811172)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.88
4.89
4.90
4.91
4.92
4.93
4.94
4.95
4.96
4.97
4.98
4.99
4.100
4.101
4.102
4.103
5.ae_.
4.87.18 TheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.1 InputDatafortheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.2 Stiffness Matrix Calculations (Subroutine HBDY
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-208
4.87.18.3 HBDYElement Thermal Loads(Subroutine HBDYof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-210
DETERMINANT METHOD OFEIGENVALUE EXTRACTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.88-I
EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.89-I
FUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC
PROBLEMS) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.90-I
EXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.91-I
FUNCTIONAL MODULE PLI-TRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.92-I
MATRIX MODULE UPARTN (PARTITIONS AMATRIX BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.93-I
MATRIX MODULE UMERGE (MERGES TWOMATRICES BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.94-I
MATRIX MODULE VEC(CREATES PARTITIONING VECTOR BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.95-I
MATRIX MODULE ADD5(ADDMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.96-I
FUNCTIONAL MODULE INPUT(INPUT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.97-I
FUNCTIONAL MODULE INPUTTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.98-I
FUNCTIONAL MODULE INPUTT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.99-I
FUNCTIONAL MODULE BUTPUTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.100-I
FUNCTIONAL MODULE _UTPUT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.101-I
OUTPUT MODULE _UTPUT3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.102-I
OUTPUT MODULE TABPRT (FORMATTED TABLEPRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.103-I
NASTRAN -OPERATING SYSTEM INTERFACES
5.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.1-I
5.2 NASTRAN OnTheIBM7094/7040(44) DCS(IBSYS) DELETED&amp;hellip;&amp;hellip;&amp;hellip;.. 5.2-I
5.3 NASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
5.3.1
5.3.2
5.3.3
5.3.4
5.3.5Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-I
Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-6
xxi(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
5.4
5.5TABLEOFCONTENTS (Continued)
PageNo.
5.3.6 Physical ItemsandGeneration ofNASTRAN Executable System &amp;hellip;&amp;hellip;. 5.3-13
5.3.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-17
5.3.8 GIN_(Generalized Input/Output Processor forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-20
5.3.9 Special ErrorCodesfromNASTRAN ontheSystem 360&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-22
5.3.10 System 360F_RTRAN Compilers usedforNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-23
5.3.11 IBM360-370 Overlay Charts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-24
NASTRAN ONTHEUNIVAC 1108(EXEC8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-I
5.4.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.3 LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-4
5.4.4 Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-5
5,4.5 Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-7
5.4.6 Description ofNASTRAN Physical ItemsandGeneration ofthe
NASTRAN Executable System &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-10
5.4.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-12
5.4.8 Procedure toCopytheThree System Tapes &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-15
5.4.9 NASTRAN Tapes (Files) Catalogue Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-17
5.4.10 NASTRAN Update Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-19
5.4,11 Regenerate theExecutable Tape &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-20
5.4.12 TheASGCRDS Program File&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-22
5.4.13 TheC_NTRL orC_NTRL42K Program File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-23
5.4.14 Description ofaDemonstration Problem Starter Deck&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-24
5.4.15 TapeandProblem Numbers fortheNASTRAN Demonstration Problem
InputDataTape&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-27
5.4.16 GIN_(Generalized Input/Output forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-28
5.4.17 Matrix Packing Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-32
5.4.18 1108TimeEstimation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.19 Single Precision Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.20 UNIVAC Overlay Diagrams &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-39
NASTRAN ONTHECDC6400/6600 (SCOPE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-I
5.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-I
5.5.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.5-2
xxii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
5.5.3
5.5.4
5.5.5
5.5.6
6.PageNo.
Layout ofCoreStorage &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-6
Physical Deliverables andGeneration ofExecutable System &amp;hellip;&amp;hellip;.. 5.5-9
Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-12
5.6 THECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-I
5.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-I
5.6.2 Preparing forLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-6
5.6.3 Designing anOverlay Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-7
5.6.4 Linkage Editor Control Statements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-12
5.6.5 Examples ofLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-23
5.6.6 Storage Requirements fortheLinkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-29
5.6.7 Link-Edited Linkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-30
MODIFICATIONS ANDADDITIONS TONASTRAN
6.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.l-I
6.2 FBRTRAN IVLANGUAGE RESTRICTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.2-I
6.3 THEEXECUTIVE CONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.3-I
6.3.1 TheNASTRAN Card&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.3-I
6.4 THECASECONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.4-I
6.5 THEBULKDATADECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 65-I
6.6 RIGID FORMATS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.6-I
6.7 FUNCTIONAL MODULES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 67-I
6.8 ADDING ASTRUCTURAL ELEMENT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-I
6.8.1 Introduction totheProblem &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-I
6.8.2 General Guidelines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-16
6.8.3 Specific Checklists &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-27
6.8.4 Updating theNASTRAN Manuals &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-49
6.8.5 Dummy UserElements (DUMI through DUM9) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-54
6.9 PRINTED OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.9-I
6.10 PLOTTER OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-1
6.10.1 Changes tothePlotter Software &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-1
xxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
6.11
6.12
7,6.10.2
6.10.3
6.10.4
6.10.5
6.10.6
ADDITION
6.11.I
6.11.2
6.11.3
6.11.4
6.11.5Pa_eNo.
Changes tothePL_TModule, theStructural Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-3
Changes totheXYPLOT Module, theXYPlotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-4
Changes totheSEEMAT Module, theMatrix Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-4
UseoftheNASTRAN Plotter Software inaNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-6
NASTRAN General Purpose Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-14
OFANEWLINK&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.11-I
Modules toInclude &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.11-I
Addition of_ewModules &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.11-I
Generation ofaNewLinkSpecification TableandaNewLink
Driver &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Subsys theNewLink&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Increasing theLinkLimit &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
6.12,1
6.12.2
6.12.3
6.12.4
6.12.5
NASTRAN SUPPORT
7.1
7.2WRITING ANEWMODULE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Summary ofNASTRAN Coding Conventions andTerminology &amp;hellip;&amp;hellip;&amp;hellip;..
Module Design &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Implementing theNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Coding aModule Subroutine &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Sample Module Coding &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
PROGRAMS
INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
7.2.1
7.2.2
7.2.3
7.2.4
7.2.5
7.2.6
7.2.7
7.2.8
7.2.96.11-2
6.11-4
6.11-4
6.12-I
6.12-I
6.12-3
6.12-7
6.12-8
6.12-12
7.1-I
7.2-I
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-2
Discussion oftheMajor Divisions oftheLinkage Editor/Loader ..7.2-14
Flowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-79
Subroutine Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-134
Object DeckFormat &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-176
Principal Linkage Editor Variable &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-183
Linkage Editor Output andDiagnostic Messages &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-191
Recommended Improvements totheLevel2.0Version &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-204
Linkage Editor Glossary &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-205
xxiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
7.3TABLE OFCONTErJTS (Continued)
Page No.
THESOURCE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
7.3.1
7.3.2
7.3.3
7.3.4
7.3.5Purpose oftheSource Conversion Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
Conversion Performed &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-I
MajorDivisions intheProgram &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-8
UseoftheSCP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-19
SCPFlowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-20
xxv(8/I/72)&lt;/p&gt;
&lt;p&gt;MostRecent
811172
*i 811172
*ii 811172
*iii BII172
*iv 811172
*v 8/1/72
*vi 8/1/72
*vii 8/1/72
*viii 811172
*ix 811172
*x 8/I/72
*xi 8/I/72
*xii 8/I/72
*xiii BII/72
*xiv 8/3/72
*xv 8/1/72
*xvi 811172
*xvii 8/I/72
*xviii B/1/72
*xix B/I/72
*xx 811/72
*xxi 8/I/72
*xxii 8/l/72
*xxiii 8/I/72
*xxiv Bl1172
*xxv B11172
*xxvi 8/I/72
*xxvii 8/I/72
*xxviii 8/I/72
*xxix 811/72
&lt;em&gt;XXX
l.I-I
l.I-2
1.I-3
1.I-4
I.2-I
l.2-2 8/I/72&lt;/em&gt;l.2-3
1.2-4
1.2-5
I.2-6
1.2-7 8/1/72
*I.2-8 811172
*lâ€¢2-9 8/l/72
**l.9-9a
1.2-10 8/I/72
*I.2-11
l.2-12 ll/I/70
1.2-13 II/1/701.2-14
l.3-I
I.3-2
1.3-3
1.4-I
I.5-I
I.5-2 12/I/69
1.6-I
1.6-2
1.6-3
l.6-4PAGEsTATUS LOG
MostRecent
12/1/69
811172
811172
12/I/69
811172
1111170
1111170
1111/70
1111170
8/1/72
8/1/72
8/1/72
1111170
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72_ e P,__ Â°MostRecent
*2.3-28a
*2.3-29
-2.3-29a
**2.3-29b
*2.3-30
2.3-31
2.3-32
2.3-33
2.3-34
2.3-35
2.3-36
2.3-37
2.3-38
2.3-39
2.3-40
,2.3-41
2.3-42
2.3-43
*2.3-44
2.3-45
*2.3-46
**2.3-46a
2.3-47
2.3-48
*2.3-49
*2.3-49a
**2.3-49b
*,2.3-49c
2.3-50
2.3-51
*2.3-52
2.3-53
2.3-54
2.3-55
2.3-56
2.3-57
2.3-58
2.3-59
2.3-60
2.3-61
2.3-62
2.3-63
2.3-64
2.3-65
2.3-66
2.3-67
2.3-68
2.3-69
2.3-70
2.3-71
2.3-72
2.3-73
2.3-74
2.3-75
2.3-76
2.3-77
2.3-78
2.3-79
2.3-80811172
8/1/72
811172
8/1/72
811172
1111170
8/1/72
811172
1211169
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
1211169
3/1/71
xxvi(8/1/72)
f&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
2.3-81
2.3-82
2.3-83
2.3-84
2.3-85
2.3-86
*2.3-87
2.3-88
2.3-89
2.3-90
2.3-91
2.3-92
2.3-93
2.3-94
2.3-95
2.3-96
2.3-97
2.3-98
*2.3-99
2.3-I00
2.3-I01
2.3-I02
2.3-I03
2.3-104
2.3-I05
2.3-I06
2.3-I07
2.3-I08
2.3-I09
2.3-II0
2.3-II
2.3-12
2.3-13
2.3-14
2.3-15
2.3-16
2.3-17
2.3- 18
2.3-I19
2.3-120
2.3-121
2.3-122
2.3-123
2.3-124
&amp;ldquo;2.3-125
&amp;ldquo;2.3-126
&amp;ldquo;2.3-127
2.3-I27a
2.3-128
2.3-129
2.3-130
2.3-131
2.3-132
2.3-133
2.3-134
2.3-134a
2.3-135
2.3-136
2.3-136aMostRecent
DateChanged
811172
811172
7/I/70
7/I/70
12/I/69
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
2.3-137
2.3-138
2.3-139
2.3-140
2.3-141
&amp;ldquo;2.3-142
2.3-143
*2.3-I 44
*2.3-I 45
2.3-146
2.3-147
2.3-148
2.3-149
*2.3-I 50
2.3-151
2.3-152
2.3-153
2.3-154
2.3-155
2.3-156
2.3-157
2.3-158
2.3-159
2.3-160
2.3-161
2.3-162
2.3-163
2.3-164
2.3-165
2.3-166
2.3-167
2.3-168
2.3-169
2.3-170
2.3-171
2.3-172
2.3-173
2.3-I74
2.3-175
2.3-176
2.3-177
2.3-178
2.3-179
2.3-180
2.3-181
2.3-182
2.3-183
&amp;ldquo;2.3-184
2.3-185
*2.3-I 86
&amp;ldquo;2.3-187
*2.3-I 88
2.3-189
&amp;ldquo;2.3-190
&amp;ldquo;2.3-191
*&amp;lsquo;2.3-191a
2.3-192
2.3-193
&amp;ldquo;2.3-194Most Recent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72Pae_.
2.4-I
2.4-2
2.4-3
2.4-4
2.4-5
2.4-6
2.4-7
2.4-8
2.4-9
2.4-I0
2.4-II
2.4-12
&amp;ldquo;2.4-13
&amp;ldquo;2.4-13a
2.4-14
2.4-15
2.4-16
2.4-17
2.4-18
2.4-19
2.4-20
2.4-21
2.4-22
2.4-23
2.4-24
2.4-25
2.4-26
2.4-27
2.4-28
2.4-29
2.4-30
2.4-31
2.4-32
2.4-33
2.4-34
2.4-35
2.4-36
2.4-37
2.4-38
2.4-39
2.4-40
2.5-I
2.5-2
2.5-3
2.5-4
2.5-5
*2.5-6
**2.5-6a
2.5-7
2.5-8
2.5-9
2.5-I0
2.5-II
2.5-12
2.5-13
3.l-I
3.1-2
3.1-3Most Recent
DateChanged
311171
8/I/72
8/I/72
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
311171
311171
311171
311171
311171
1211169
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
xxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
&amp;ldquo;3.2-I
*3.2-2
*3.2-3
*3.2-4
*3.2-5
*3.2-6
**3.2-7
3.3-I
3.3-2
3.3-3
3.3-4
3.3-5
3,3-6
3.3-7
3.3-8
3.3-9
3.3-10
3.3-11
3.3-12
3.3-13
3.3-14
&amp;ldquo;3.3-15
&amp;ldquo;3.3-15a
3.3-16
&amp;ldquo;3.3-17
*&amp;lsquo;3.3-18
*&amp;lsquo;3.3-19
**3.3-20
3.4-I
3.4-2
3.4-3
3.4-4
3.4-5
3.4-6
3.4-7
3.4-8
3.4-9
3.4-10
3.4-11
3.4-12
3.4-13
3.4-14
3.4-15
3.4-16
3.4-17
&amp;ldquo;3.4-18
3.4-19
3.4-20
3.4-21
3.4-22
3.4-23
*3.4-24
3.4-25
3.4-26
3.4-27
*3.4-28
3.4-29
3.4-30
3.4-31
3.4-32MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72PaseNo
3.4-33
3.4-34
3.4-35
*3.4-36
3.4-37
3.4-38
3.4-39
3.4-4O
3.4-41
3.4-42
3.4-43
3.4-44
3.4-45
3.4-46
3.4-47
3.4-48
3.4-49
3.4-50
3.4-51
3.4-52
3.4-53
3.4-54
3.4-55
3.4-56
3.4-57
3.4-58
3.4-59
3.4-60
3.4-61
3.4-62
3.4-63
3.4-63a
*3.4-64
*3.4-65
3.4-66
3.4-67
3.4-68
3.4-69
3.4-70
3.4-71
3.4-72
3.4-72a
3.4-73
3.4-73a
3.4-74
3.4-74a
3.4-75
3.4-75a
3.4-76
3.4-77
3.4-78
3.4-78a
3.4-79
3.4-80
3.4-81
3.4-82
3.4-83
3.4-84
3.4-85
3.4-86MostRecent
DateChan_ed
3/I/71
8/I/72
12/I/69
12/I/69
3/I/71
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
3.4-87
3.4-87a
3.4-88
3._-89
3.4-90
3.4-91
3.4-92
3.4-93
3.4-94
3.4-95
3.4-96
3.4-97
3.4-98
3.4-99
3.4-100
3.4-101
3.4-102
3.4-103
3.4-104
3.4-105
3.4-106
3.4-107
3.4-108
3.4-109
3.4-110
3.4-111
&amp;ldquo;3.4-112
3.4-113
3.4-114
3.4-115
3.4-116
3.4-117
*&amp;lsquo;3.4-118
*&amp;lsquo;3.4-119
**3.4-120
*&amp;lsquo;3.4-121
*&amp;lsquo;3.4-122
*&amp;lsquo;3.4-123
*&amp;lsquo;3.4-124
*&amp;lsquo;3.4-125
*&amp;lsquo;3.4-126
*&amp;lsquo;3.4-127
*&amp;lsquo;3.4-128
*&amp;lsquo;3.4-129
**3.4-I 30
&amp;ldquo;3.5-I
3.5-2
3.5-3
*3.5-4
3.5-5
3.5-6
*3.5-7
*3.5-8
*3.5-9
3.5-10
3.5-11
3.5-12
3.5-13
3.5-14
3.5-15MostRecent
DateChansed
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
7/I/70
7/I/70
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxviii&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
Pae_.
3.5-16
3.5-17
3.5-18
3.5-19
3.5-20
3.5-21
3.5-22
*3.5-23
3.5-24
3.5-25
*3.5-26
*3.5-27
*3.5-28
**3.5-28a
3.5-29
3.5-30
3.5-31
3.5-32
3.5-33
3.5-34
3.5-35
3.5-36
3.5-37
3.5-38
3.5-39
3.5-40
3.5-41
3.5-42
*3.5-43
*3.5-44
3.5-45
3.5-46
3.5-47
3.5-48
3.5-49
3.5-50
3.5-51
3.5-52
3.5-53
3.5-54
3.5-55
3.5-56
3.5-57
3.5-58
3.5-59
3.5-60
3.5-61
3.5-62
*3.5-63
3.5-64
*3,5-65
**3.5-65a
3.5-66
3.5-67
3.5-68
3.5-69
3.5-70
3.5-71
3.5-72MostRecent
DateChanged
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
12/I/69
8/I/72
8/I/72
8/I/72PageNo.
3.5-73
3.5-74
3.5-75
3.5-76
3.5-77
3.5-78
3.5-79
**3.5-80
**3.5-81
**3.5-82
**3.5-83
**3.5-84
**3.5-85
*4.I-I
4.1-2
4.1-3
4.1-4
4.1-5
4.1-6
*4.I-7
**4.1-7a
*4.1-8
*4.I-9
&amp;ldquo;4.1-10
*4.1-I1
&amp;ldquo;4.1-12
&amp;ldquo;4.1-13
&amp;ldquo;4.1-14
&amp;ldquo;4.1-15
*4.1-16
&amp;ldquo;4.1-17
*4.I-I8
*4.1-19
*4.1-20
*4.1-21
**4.1-22
**4.1-23
4.2-I
*4.2-2
4.2-3
4.2-4
4.2-5
4.2-6
4.3-I
4.3-2
4.3-3
4.3-4
4.3-5
4.3-6
4.3-7
4.3-8
4.3-9
4.3-10
&amp;ldquo;4.3-11
&amp;ldquo;4.3-12
4.4-I
4.4-2
4.4-3
4.4-4
4.4-5MostRecent
DateChanged
12/I/69
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
811/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
8/I/72
8/I/72PageNo.
4.4-6
4.4-7
4.4-8
4.4-9
4.4-10
4.4-11
&amp;ldquo;4.5-I
*4.5-2
4.5-3
4.5-4
*4.5-5
*4.5-6
*4.5-7
*4.5-8
*4.5-9
&amp;ldquo;4.5-10
*4.5-I1
&amp;ldquo;4.5-12
&amp;ldquo;4.5-13
**4.5-13a
&amp;ldquo;4.5-14
&amp;ldquo;4.5-15
&amp;ldquo;4.5-16
&amp;ldquo;4.5-17
&amp;ldquo;4.5-18
&amp;ldquo;4.5-19
**4.5-20
4.6-I
4.6-2
4.6-3
4.6-4
4.6-5
4.6-6
4.6-7
4.6-8
4.6-9
4.6-10
4.6-11
4.6-12
4.6-13
4.6-14
4.6-15
4.7-I
4.7-2
4.7-3
4.7-4
4.7-5
*4.7-6
**4.7-6a
4.7-7
4.7-8
4.7-9
4.7-10
4.8-I
4.8-2
4.9-I
*4.9-2
4.9-3
4.9-4Most
DateRecent
Changed
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxix(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.9-5
4.9-6
4.9-7
4.9-8
4.9-9
4.9-10
4.10-I
4.10-2
4.10-3
4.10-4
4,11-I
4.11-2
4.11-3
4.12-I
4.13-I
4.13-2
4.14-I
4.14-2
4.15-I
4.16-I
4.16-2
4,16-3
4.16-4
4.17-I
4.17-2
4.17-3
4.17-4
4.17-5
4.17-6
4.18-I
4.19-I
4.19-2
4.20-I
4.21-I
4.21-2
4.21-3
4.21-4
4.21-5
4.21-6
&amp;ldquo;4.21-7
4.21-8
4.21-9
4.22-I
4.22-2
*4.22-3
4.23-I
4.23-2
*4.23-3
*4.23-4
*4.23-5
4.24-I
4.24-2
4.24-3
4.24-4
4.24-5
4.24-6
4.24-7
4.24-8
4.24-9MostRecent
DateChanged
8/I/72
11/I/70
8/]/72
1211169
811/72
811/72
811/72
12/I/69
12/I/69
3/I/71
3/I/71Pae_.
4.24-10
4.24-I1
4.24-12
*4.24-I 2a
4.24-13
&amp;ldquo;4.24-14
4.24-15
4.24-16
4,24-17
4.24-18
4.25-I
4.25-2
4.25-3
4.25-4
4.25-5
4.25-6
4.25-7
4.25-8
4.25-8a
4.25-9
4.25-10
4.26-I
4.26-2
4.26-3
4.26-4
4.26-5
4.26-6
4.26-7
4.26-8
4.26-9
4.26-10
4.26-I1
4.26-12
4.26-13
4.26-14
*4.26-15
4.26-16
4.26-17
4.26-18
4.27-I
4.27-2
4.27-3
4.27-4
4.27-5
*4.27-6
4.27-7
*4.27-8
4.27-9
4.27-10
4.27-11
4.27-12
&amp;ldquo;4.27-13
4.27-14
4.27-15
4.27-16
4.27-17
4.27-18
4.27-19
4.27-20MostRecent
DateChanged
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
9/I/70
9/I/70
1111170
911170
1111170
1111170
811172
811172
311171
811172
811172PageNo.
&amp;ldquo;4.27-21
**4.27-21a
**4.27-21 b
*4.27-22
4.27-23
4.27-24
4.27-25
*4.27-26
*4.27-27
4.28-I
4.28-2
4.28-3
4.28-3a
4.28-4
4.28-5
4,28-6
4.28-7
4.28-8
&amp;ldquo;4.28-8a
&amp;ldquo;4.28-8b
4.28-9
&amp;ldquo;4.29-I
*4.29-2
*4.29-3
*4.29-4
*4.29-5
4.29-6
4.29-7
4.30-I
4.30-2
4.30-3
4.30-4
4.30-5
4.30-6
4.30-7
4.30-8
&amp;ldquo;4.31-I
*4.31-2
*4.31-3
&amp;ldquo;4.31-4
*4.31-5
**4.31-6
4.32-I
4.32-2
4.32-3
4.32-4
4.33-I
4.33-2
4.33-3
4.34-I
4.34-2
4.35-I
4,35-2
4.35-3
*4.36-I
*4.36-2
*4.36-3
4.37-I
4.37-2MostRecent
DateChanged
811172
811/72
8/I/72
811172
711170
811172
811/72
311171
311171
311171
311171
1211169
8/Ir72
8/I172
7/I170
8/Ir72
8/Ir72
8/I_72
8/I172
8/I172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/I/72
8/I/72
8/I/72
xxx(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo_.
4.38-I
4.38-2
&amp;ldquo;4.39-I
4.39-2
4.40-I
4.40-2
4.41-I
4.41-2
4.41-3
&amp;ldquo;4.41-4
4.41-5
4.41-6
&amp;ldquo;4.41-7
4.41-8
4.41-9
4.41-lO
4.41-ll
*4.41-12
&amp;ldquo;4.41-13
**4.41 -l3a
4.41-14
4.41-15
4.41-16
4,41-17
4.41-18
4.41-19
4.41-20
4.41-21
4.41-22
4.41-23
4.41-24
4.41-25
4.41-26
4.41-27
&amp;ldquo;4.41-28
*&amp;lsquo;4.41-28a
**4.41-28b
**4.41-28c
*4.41 -29
4.41-30
4.42-I
4.42-2
4.42-3
4.42-4
4.43-1
4.43-2
4.43-3
4.44-1
4.44-2
4.45-I
4.45-2
4.45-3
4.45-4
4.45-5
4.45-6
4.46-I
4.46-2
4.46-3
4.46-4
4.46-5MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
12/I/69
7/I/70
911/70
8/I/72
8/I/72
8/I/72
7/1/70
3/1/71
3/1/71
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
7/1/70
3/1/71Page No.
4.46-6
4.46-7
4.46-8
4.46-9
4.46-10
4.46-I 1
4.46-12
4.46-13
4.46-14
4.46-15
4.46-16
4.46-17
4.46-18
*4.46-19
*&amp;lsquo;4.46-19a
**4.46-I 9b
*4.46-20
4.47-I
4.47-2
4.47-3
4.47-4
4.47-5
4.47-6
4.47-7
4.47-8
*4.48-I
*4.48- 2
4.48-3
4.48-4
*4.48-5
4.48-6
4.48-7
4.48-8
4.48-9
4.48-I0
4.48-II
*4.48-12
4.48-13
4.48-14
4.48-15
4.48-16
4.48-17
4.48-18
4.48-19
4.48-19a
4.48-19b
4.48-19c
4.48-19d
4.48-19e
4.48-19f
4.48-19g
4.48-20
4.48-21
4.48-22
4.48-23
4.48-24
4.48-25
*4.48- 26
4.48-27Most Recent
DateChanged
811172
811172
8/I/72
811172
1211/69
811172
811/72
12/I/69
8/I/72
3/I/71
7/I/70
8/I/72
12/I/69
12/I/69
12/I/69
1211/69
12/I/69
1211169
12/I/69
3/I/71
12/I/69
8/I/72PBe_.
4.49-I
4.49-2
&amp;ldquo;4.49-3
4.49-4
4.49-5
*4.49-6
*4.49-7
**4.49- 7a
4.49-8
4.49-9
4.50-I
4.50-2
4.51-I
4.51-2
4.51-3
4.51-4
&amp;ldquo;4.52-I
*4.52-2
*4.52-3
*4.52-4
4.53-I
4.53-2
4.54-I
*4.54-2
4.54-3
4.54-4
4.54-5
4.54-6
4.54-7
4.54-8
4.55-I
4.55-2
4.55-3
4.55-4
4.55-5
4.55-6
4.55-7
4.55-8
4.55-9
4.56-I
4.56-2
4.56-3
4.57-I
4.57-2
4.57-3
4.57-4
4.58-I
4.58-2
4.58-3
4.58-4
4.58-5
4.58-6
4.58-7
4.59-I
*4.59-2
4.59-3
4.59-4
4.59-5
4.59-6MostRecent
DateChanged
12/I169
811172
1211169
811172
811172
811172
711170
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
3/I/71
8/I/72
xxxi(811172)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
Pa_ag_eNo.
4.59-7
4.59-8
4.59-9
4.59-10
*4.59-I 1
4.59-12
4.59-13
&amp;ldquo;4.59-14
*&amp;lsquo;4.59-15
4.60-I
4.60-2
4,60-3
4.60-4
4.60-5
4.60-6
4.60-7
*4.61-I
&amp;ldquo;4.61-2
*4.61-3
**4.61-3a
4.61-4
&amp;ldquo;4.61-5
4.61-6
4.61-7
4.61-8
4.62-I
4.62-2
4.62-3
4.62-4
4.62-5
4.62-6
4.62-7
4.62-8
*4.62-9
4.63-I
4.63-2
4.63-3
4.63-4
4.63-5
4.63-6
4.63-7
4.63-8
4,64-I
4.64-2
4.64-3
4.64-4
4.64-5
*4.64-6
*4.64-7
4.64-8
4.64-9
4.64-10
4.65-I
4.65-2
4.65-3
4.65-4
4.65-5
4.65-6
4,65-7
*4.65-8MostRecent
DateChanged
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72PageNo.
4.65-9
4.65-10
&amp;ldquo;4.65-11
4.65-12
4.65-13
4.65-14
4.65-15
4.65-16
4.65-17
&amp;ldquo;4.65-18
&amp;ldquo;4.65-19
4.65-20
4.65-21
4.65-22
4.66-I
4.66-2
4.66-3
4.66-4
4.66-5
4.67-I
4.68-I
4.68-2
4.68-3
4.68-4
4.68-5
4.69-I
4.69-2
4.69-3
4.69-4
4.70-I
4,70-2
4.70-3
4.70-4
4.70-5
4.70-6
4.70-7
4.71-I
4.72-I
4.72-2
4.72-3
4.73-I
4.73-2
4.73-3
4.73-4
4.74-I
4.74-2
474-3
*z.74-4
**z.74-4a
474-5
475-I
476-I
476-2
476-3
477-I
477-2
477-3
*z.78-I
*z.78-2
.79-IMostRecent
DateChanged
1211169
12/I/69
8/I172
711170
711170
7/I170
3/I171
8/I/72
8/I/72
7/I/70
7/I/70
7/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72PageNo.
4.79-2
4.79-3
4.80-I
4.80-2
4.81-I
4.81-2
4.82-I
4.82-2
&amp;ldquo;4.83-I
4.83-2
*4.83-3
**4.83-4
&amp;ldquo;4.84-I
*4.84-2
4,85-I
4.86-I
4.86-2
&amp;ldquo;4.87-I
*4.87-2
*4.87-3
*4.87-4
*4.87-5
*4.87-6
4.87-7
4.87-8
4.87-9
4.87-10
4.87-11
4.87-12
&amp;ldquo;4.87-13
4.87-14
4.87-15
4.87-16
4.87-16a
*&amp;lsquo;4.87-16b
4.87-17
4.87-18
4.87-19
4.87-20
4.87-21
4.87-22
4.87-23
4.87-24
4.87-25
4.87-25a
*4.87-26
4.87-27
4.87-28
4.87-28a
4.87-29
4.87-30
4.87-31
4.87-32
4.87-33
4.87-34
4.87-35
4.87-36
*4.87-37
3.87-38
4.87-39MostRecent
DateChanged
811/72
311/71
811172
811172
8/I172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
11/I/70
3/I/71
3/I/71
8/I/72
3/I/71
12/I/69
8/I/72
3/I/71
3/I/71
9/I/70
9/I/70
8/I/72
911170
11/1/70
9/I/70
3/I/71
3/I/71
8/I/72
xxxii (8/I/72)&lt;/p&gt;
&lt;p&gt;4.87-40
4.87-41
4.87-42
4.87-43
4.87-44
4.87-45
4.87-46
4.87-47
4.87-48
4.87-49
4.87-50
4.87-51
4.87-52
4.87-53
4.87-54
4.87- 55
4.87-56
4.87-57
4.87-58
4.87-59
4.87-60
4.87-61
4.87-6 2
*4.87-63
*4.87-64
4.87-65
*4.87-66
**4.87-66a
*4.87-67
4.87-68
4.87-69
4.87-70
4.87-71
4.87-72
4.87-73
4.87-74
4.87-75
4.87-76
4.87-76a
4.87-76b
4.87-76c
*4.87-76d
&lt;strong&gt;4.87-76e
4.87-77
4.87-78
4.87-79
4.87-80
4.87-81
4.87-82
*4.87 -83
4.87-84
4.87-85
4.87-86
4.87-86a
4.87- 87
4.87-88
4.87-89
4.87-90
4.87-91MostRecent
DateChanged
311171
3/1/71
3/1/71
811/72
8/I/72
II11170
811172
811172
811172
12/]/69
12/I/69
12/I/69
8/1/72
811/72
8/I/72
9/I/70
9/I/70
9/1/70PAGESTATUS LOG
MostRecent
Most Recent
4.87-119 12/I/69
*4.87-92 8/I/72 4.87-120
4.87-9 3 4.87-I 21
4.87-94 4.87-I 22
4.87-95 12/1/69
*4.87-96 8/I/72 4.87-123
4.87-97 9/I/70 -4.87-124 8/I/72
4.87-97a 9/I/70 ,4.87-125 8/1/72
*4.87-98 8/I/72 ,4.87-126 8/I/72&lt;/strong&gt;4.87-126a 8/I172
4.87-99 4.87-127
4.87-I00 4.87-127a 12/I/69
4.87-I01 4.87-127b 12/I/69
4.87-102 12/I/69
4.87-I03 ll/I/70 4.87-127c
4.87-I04 ll/I/70 4.87-127d 12/I/69
4.87-I04a 12/I169 4.87-127e 12/I/69
4.87-104b 12/I/69 4.87-127f 12/I/69
4.87-104c 12/I/69 4.87-128
4.87-104d 12/I/69 4.87-129
4.87-104e 12/I/69 4.87-130
4.87-104f 12/I/69 4.87-131
4.87-I04g 12/I/69 a.87-132
4.87-I04h 1211/69 4.87-133
4.87-I04i 12/I/69 4.87-134
4.87-I04j 12/I/69 4.87-135
4.87-I04k 12/I/69 -4.87-136 8/I/72
4.87-I04_ 12/I/69 4.87-137
4.87-I04m 12/I/69 4.87-138
4.87-I04n 11/I/70 *-4.87-138a 8/I/72
4.87-104o 1111/70 4.87-139
,4.87-105 8/I/72 4.87-140 3/I/714.87-141 3/I/71
4.87-106 4.87-142 3/I/71
4.87-107 3/I/71
4.87-108 9/I/70 4.87-143
,4.87-109 8/1172 4.87-144
,4.87-I09a 8/I/72 4.87-145
4.87-I09b 12/I/69 4.87-146
4.87-I09c 12/I/69 4.87-147
.4.87-I09d 8/I/72 4.87-148
*-4.87-I09e 8/I/72 4.87-149
*-4.87-I09f 8/I/72 4.87-150
*-4.87-I09g 8/I/72 -4.87-151 8/I/724.87-152
*,4.87-I09h 811/72 4.87-153
*&amp;lsquo;4.87-I09i 811/72
*&amp;lsquo;4.87-I09j 8/I/72 4.87-1544.87-155
*-4.87-I09k 8/I/72 4.87-156
*-4.87-I09_ 8/I/72
*-4.87-I09m 8/I/72 4.87-157
**4.87-I09n 8/I/72 4.87-1584.87-159
.-4.87-109o 8/I/72 4.87-160
.,4.87-I09p 8/I/72 4.87-161
4.87-110
-4.87-111 8/I/72 4.87-1624.87-163
4.87-112 4.87-164
4.87-11 3 4.87-165
4.87-114 4.87-166
4.87-115 4.87-167
4.87-116 4.87-168
4.87-117
,4.87-118 8/I/72 4.87-169
xxxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.87-170
4.87-171
4.87-172
4.87-173
4.87-174
4.87-175
4.87-176
4.87-177
4.87-178
4.87-I 79
4.87-180
4.87-181
4.87-182
&amp;ldquo;4.87-183
4.87-184
4.87-185
4.87-186
4.87-187
4,87-188
&amp;ldquo;4.87-189
*&amp;lsquo;4.87-190
*&amp;lsquo;4.87-191
*&amp;lsquo;4.87-192
*&amp;lsquo;4.87-193
*&amp;lsquo;4.87-194
*&amp;lsquo;4.87-195
*&amp;lsquo;4.87-196
*&amp;lsquo;4.87-197
*&amp;lsquo;4.87-198
*&amp;lsquo;4.87-199
**4.87-200
*&amp;lsquo;4.87-201
**4.87-202
**4.87-203
**4.87-204
**4.87-205
**4.87-206
**4.87-207
**4.87-208
**4,87-209
*&amp;lsquo;4.87-210
4.88-I
4.88-2
4.88-3
4.88-4
4.88-5
4.88-6
4.88-7
4.88-8
4.88-9
4.88-10
4.89-I
4.89-2
4.89-3
4.89-4
4.89-5
4.89-6
4.89-7
4.89-8
4.89-9MostRecent
DateChanged
811172
11/I170
11/I170
11/I/70
11/I/70
11/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
1111170
1111170
1111170
1111170
11/1170
1111170
11/I170
1111170
1I11170PageNo.
4.89-10
4.89-I1
4.89-12
4.89-13
4.89-14
4.89-15
4.89-16
4.89-17
&amp;ldquo;4.90-I
*4.90-2
*4.90-3
*4.90-4
*4.90-5
*4.90-6
*4.90-7
**4.90-8
&amp;ldquo;4.91-I
&amp;ldquo;4.91-2
*&amp;lsquo;4.91-3
*&amp;lsquo;4.91-4
*&amp;lsquo;4.91-5
*&amp;lsquo;4.91-6
*&amp;lsquo;4.91-7
&amp;ldquo;4.92-I
*4.92-2
*&amp;lsquo;4.93-I
**4.93-2
*&amp;lsquo;4.94-I
**4.94-2
*&amp;lsquo;4.95-I
**4.95-2
*&amp;lsquo;4.96-I
**4.96-2
*&amp;lsquo;4.97-I
**4.97-2
*&amp;lsquo;4.98-I
**4.98-2
**4.98-3
*&amp;lsquo;4.99-I
**4.99-2
**4.99-3
*&amp;lsquo;4.100-I
*&amp;lsquo;4.100-2
*&amp;lsquo;4.100-3
*&amp;lsquo;4.101-I
*&amp;lsquo;4.101-2
*&amp;lsquo;4.101-3
*&amp;lsquo;4.102-I
*&amp;lsquo;4.102-2
*&amp;lsquo;4.103-I
*&amp;lsquo;4.103-2
5.1-I
&amp;ldquo;5.2-I
&amp;ldquo;5.3-I
*5,3-2
*5.3-3
*5.3-4
*5.3-5
*5.3-6
&lt;em&gt;5.3-7MostRecent
DateChanged
1111170
1111170
1111170
1111170
1111170
11/I/70
1111170
1111170
811r72
8/Ir72
8/I172
811172
811172
811r72
811172
811172
811172
811172
811r72
811172
811t72
811172
8/1172
8/1172
8/I172
8/I172
8/I172
8/I172
8/IZ72
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
DELETED
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72&lt;/em&gt;5
*5
*5
*5
**5
**5
**5
*&amp;lsquo;5
**5PageNo.
*53-8
*53-9
3-10
3-11
3-12
3-13
3-14
3-15
3-16
3-17
3-18
**53-19
**53-20
*&amp;lsquo;5.3-21
**5.3-22
**5.3-23
**5.3-24
**5.3-25
**5.3-26
**5.3-27
**5.3-28
**5.3-29
**5.3-30
*&amp;lsquo;5.3-31
**5.3-32
**5.3-33
**5.3-34
**5.3-35
**5.3-36
**5.3-37
**5.3-38
**5.3-39
**5.3-40
*&amp;lsquo;5.3-41
**5.3-42
**5.3-43
**5.3-44
**5.3-45
**5.3-46
**5.3-47
**5.3-48
**5.3-49
**5,3-50
**53-51
**53-52
**53-53
**53-54
*54-I
*54-2
*54-3
*5.4-4
*5.4-5
*5,4-6
*5.4-7
*5.4-8
*5.4-9
&amp;ldquo;5,4-10
&amp;ldquo;5.4-11
&amp;ldquo;5.4-12
&amp;ldquo;5.4-13MostRecent
DateChan_ed
811172
811172
811172
8/1172
8/1172
8/1172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/It72
8/Ir72
8/I_72
8/1172
8/1172
8/I172
8/I172
8/1172
8/1172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxiv (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
&amp;ldquo;5.4-14
&amp;ldquo;5.4-15
&amp;ldquo;5.4-16
&amp;ldquo;5.4-17
&amp;ldquo;5.4-18
&amp;ldquo;5.4-19
*5.4-20
&amp;ldquo;5.4-21
*5.4-22
*5.4-23
*5.4-24
*5.4-25
*5.4-26
*5.4-27
*5.4-28
*5.4-29
*5.4-30
*5.4-31
*5.4-32
*5.4-33
*5.4-34
*5.4-35
*5.4-36
*5,4-37
*5.4-38
*5.4-39
**5.4-40
*&amp;lsquo;5.4-41
**5.4-42
**5&amp;rsquo;.4-43
*&amp;lsquo;5.4-44
**5.4-45
**5.4-46
**5.4-47
**5.4-48
**5.4-49
**5.4-50
*&amp;lsquo;5.4-51
**5.4-52
**5.4-53
**5.4-54
**5.4-55
**5.4-56
**5.4-57
**5.4-58
**5.4-59
**5.4-60
*&amp;lsquo;5.4-61
**5.4-62
**5.4-63
**5.4-64
**5.4-65
**5.4-66
**5.4-67
**5.4-68
**5.4-69
**5.4-70
*&amp;lsquo;5.4-71
**5.4-72
**5.4-73MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72PageNo.
**5.4-74
**5.4-75
**5.4-76
**5.4-77
&amp;ldquo;5.5-I
*5.5-2
*5.5-3
5.5-4
5.5-5
*5.5-6
*5.5-7
*5.5-8
*5.5-9
&amp;ldquo;5.5-10
&amp;ldquo;5.5-11
&amp;ldquo;5.5-12
&amp;ldquo;5.5-13
*&amp;lsquo;5.5-14
*&amp;lsquo;5.5-15
**5.5-16
*&amp;lsquo;5.5-17
*&amp;lsquo;5.5-18
*&amp;lsquo;5.5-19
**5.5-20
**5.5-21
_&amp;lsquo;5.5-22
**5.5-23
**5.5-24
**5.5-25
**5.5-26
**5.5-27
**5.5-28
**5.5-29
**5.5-30
*&amp;lsquo;5.5-31
**5.5-32
**5.5-33
**5.5-34
**5.5-35
**5.5-36
**5.5-37
**5.5-38
**5.5-39
**5.5-40
*.5.5-41
**5.5-42
**5.5-43
**5.5-44
**5.5-45
**5.5-46
**5.5-47
**5.5-48
5.6-I
5.6-2
5.6-3
5.6-4
5.6-5
5.6-6
5.6-7
5.6-8MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
8/I_72
8/Ir72
8/Iq2
8/1172
8/I172
8/I172
8/I172
8/1172
8/Ir72
8/Ir72
8/Ir72
8/1172
8/I/72
8/I172
8/1172
8/1172
8/Iq2
8/1172
8/Ir72
8/Ir72
8/1172
8/Ir72
8/Ir72
8/Ir72
8/I172
8/Ir72
8/I/72
8/1172
8/I&#39;72
8/I172
8/Ir72
8/Ir72
8/1172
8/I_72
8/1172
8/1172
8/1172
8/Ir72
8/Iq2
8/Ir72
8/Iq2
8/I_72
8/I172
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
5.6-9
5.6-10
5.6-11
5.6-12
5.6-13
5.6-14
&amp;ldquo;5.6-15
&amp;ldquo;5.6-16
5;6-17
5.6-18
5.6-19
5.6-20
5.6-21
5.6-22
*5.6-23
*5.6-24
*5.6-25
*5.6-26
*5.6-27
*&amp;lsquo;5.6-27a
*5.6-28
5.6-29
&amp;ldquo;5.6-30
*&amp;lsquo;5.6-30a
5.6-31
6I-I
*62-I
*62-2
*62-3
*63-I
*63-2
**63-3
64-I
6.5-1
6.5-2
*6.6-I
6.6-2
6.7-I
6.7-2
&amp;ldquo;6.8-I
*6.8-2
*6.8-3
*6.8-4
*68-5
*68-6
*68-7
*68-8
*68-9
*68-10
&amp;ldquo;6.8-11
*68-12
*68-13
*68-14
*68-15
*68-16
*68-17
*68-18
*68-19
*68-20
*68-21MostRecent
DateChanged
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
311171
311171
811172
811172
811172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/1/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxv(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
*6.8-22
*6.8-23
*6.8-24
*6.8-25
*6.8-26
*6.8-27
*6.8-28
*6.8-29
*6.8-30
&amp;ldquo;6.8-31
*6.8-32
*6.8-33
*6.8-34
*6.8-35
*6.8-36
*6.8-37
*6.8-38
*6.8-39
*6.8-40
&amp;ldquo;6.8-41
*6.8-42
*6.8-43
*6.8-44
*6.8-45
*6.8-46
*6.8-47
*6.8-48
*6.8-49
*6.8-50
*6.8-51
*6.8-52
*6.8-53
*6.8-54
*6.8-55
6.9-I
6.9-2
6I0-I
610-2
610-3
610-4
610-5
610-6
610-7
6.10-8
6.10-9
6.10-10
6.10-11
6.10-12
6.10-13
6.10-14
6.10-15
&amp;ldquo;6.10-16
6.10-17
6.10-18
6.11-I
6.11-2
6.11-3
6.11-4MostRecent
DateChanged
811172
811172
811172
811172
811172
811172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
3/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69PageNo.
*&amp;lsquo;6.12-I
**6.12-2
**6.12-3
**6.12-4
**6.12-5
**6.12-6
**6.12-7
**6.12- 8
**6.12-9
*&amp;lsquo;6.12-10
*&amp;lsquo;6.12-11
*&amp;lsquo;6.12-12
*&amp;lsquo;6.12-13
**6.12-14
**6.12-15
*&amp;lsquo;6.12-16
*&amp;lsquo;6.12-17
*&amp;lsquo;6.12-18
7.1-I
7.1-2
7.2-I
7.2-2
7.2-3
7.2-4
7.2-4a
7.2-5
7.2-6
7.2-7
7.2-8
72-9
72-9a
72-10
72-11
72-12
72-12a
72-I2b
72-13
7.2-14
7.2-14a
7.2-15
7.2-16
7.2-17
7.2-18
7.2-19
7.2-20
7.2-21
7.2-22
7.2-23
7.2-24
7.2-25
7.2-26
7.2-27
7.2-28
7.2-28a
7.2-29
7.2-30
7.2-31
7.2-32MostRecent
DateChanged
811172
811172
811172
8/I172
8/It72
8/Ir72
8/Ir72
8/I172
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
3/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71No.
7.2-33
7.2-34
7.2-35
7.2-36
7.2-37
7.2-38
7,2-39
7.2-40
7.2-41
7.2-42
7.2-43
7.2-44
7.2-45
7.2-46
7.2-47
7.2-48
7.2-49
7.2-50
7.2-51
7.2-52
7.2-53
7.2-54
7.2-55
7.2-56
7.2-57
7.2-58
7.2-59
7.2-60
7.2-61
7.2-62
7.2-63
7.2-64
7.2-65
7.2-66
7.2-67
7.2-68
7.2-69
7.2-70
7.2-71
7.2-72
7.2-73
7.2-74
7.2-75
7.2-76
7.2-77
7.2-78
7.2-79
7.2-80
72-81
72-82
72-83
72-84
72-85
72-86
72-87
7.2-88
7.2-89
7.2-90MostRecent
DateChanged
6/I/71
6/1171
611/71
611171
611/71
6/I/71
611171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
xxxvi (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
7.2-91
7.2-92
7.2-93
7.2-94
7.2-95
7.2-96
7.2-97
7.2-98
7.2-99
7.2-I00
7.2-I01
7.2-102
7.2-I03
7.2-I04
7.2-I05
7.2-I06
7.2-I07
7.2-I08
7.2-109
7.2-II0
7.2-III
7.2-I12
7.2-I13
7.2-I14
7.2-I15
7.2-I16
7.2-I17
7.2-I18
7.2-I19
7.2-120
7.2-121
7.2-122
7.2-123
7.2-124
7.2-125
7.2-126
7.2-127
7.2-128
7.2-129
7.2-I30
7.2-131
7.2-132
7.2-133
7.2-134
7.2-135
7.2-136
7.2-137
7.2-138
7.2-139
7.2-140
7.2-141
7.2-142
7.2-143
7.2-144
7.2-145
7.2-146
7.2-147
7.2-148
7.2-149Most Recent
DateChanged
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
6/1171
611171
611171
6/I171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71PageNo.
7.2-150
7.2-151
7.2-152
7.2-153
7.2-154
7.2-155
7.2-156
7.2-157
7.2-158
7.2-159
7.2-160
7.2-161
7.2-162
7.2-163
7.2-164
7.2-165
7.2-166
7.2-167
7.2-168
7.2-169
7.2-170
7.2-171
7.2-172
7.2-173
7.2-174
7.2-175
7.2-176
7.2-177
7.2-178
7.2-179
7.2-180
7.2-181
7.2-182
7.2-183
7.2-184
7.2-185
7.2-186
7.2-187
7.2-188
7.2-189
7.2-190
7.2-191
7.2-192
7.2-193
7.2-194
7.2-195
7.2-196
7.2-197
7.2-198
7.2-199
7.2-200
7.2-201
72-202
72-203
72-204
72-205
72-206
73-I
73-2Most Recent
Date Changed
611171
611171
611171
6/I171
6/I171
611/71
611/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/I171
6/I171
6/I_71
3/I/71
3/I/71PageNo.
7.3-3
73-4
73-5
73-6
73-7
73-8
73-9
73-10
73-11
73-12
73-13
73-14
73-15
73-16
73-17
73-18
73-19
73-20
73-21
73-22
73-23
73-24
73-25
73-26
73-27
73-28
73-29
73-30
73-31
73-32
73-33
73-34Most Recent
DateChanged
311171
311171
311171
3/I171
3/I171
3/I/71
3/I/71
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
xxxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PROGRAMOVERVIEW
I.IPROGRAM OVERVIEW
l.l.l Objectives
TheNASTRAN program hasbeendesigned according totwoclasses ofcriteria. Thefirst class
relates tofunctional requirements forthesolution ofanextremely widerange oflarge andcom-
plexproblems instructural analysis with highaccuracy andcomputational efficiency. These cri-
teria areachieved bydeveloping andincorporating themost advanced mathematical models andcom-
putational algorithms thathavebeenproven inpractice. Inparticular, theyareachieved by
providing suchfeatures asthebandwidth-with-active-column technique inmatrix decomposition;
packing routines totakemaximum advantage ofmatrix sparsity soastoconserve input/output time;
highly stable andefficient algorithms forthesolution ofproblems ineigenvalue analysis and
transient response; andanelegant approach tomodeling theeffects ofcontrol systems andother
nonstructural components.
Thesecond class ofcriteria relates totheoperational andorganizational aspects ofthe
program. These aspects aresomewhat divorced fromstructural analysis itself; yettheyareof
equal importance indetermining theusefulness andquality oftheprogram. Chief among these
criteria are:
I.Simplicity ofproblem input deckpreparation.
2.Minimization ofchances forhuman error inproblem preparation.
3.Minimization ofneedformanual intervention during program execution.
4.Ease ofprogram modification andextension tonewfunctional capability.
5.Ease ofprogram extension tonewcomputer configurations andoperating systems, and
generality inability tooperate efficiently under awidesetofconfiguration capabilities.
6.Capability forstepbystep problem solution, without penalty ofrepeated problem setup.
7.Capability forproblem restart following unplanned interruptions orproblem preparation
error.
8.Minimization ofsystem overhead, inthethree vital areas:
a.Diversion ofcorestorage fromfunctional useinproblem solution.
l.l-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P2</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_002/</guid>
      <description>
        
        
        &lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.87.13
4.87.14
4.87.15Page No.
4.87.12.5 Stiffness Matrix Calculations (Subroutine KT_RDR
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-160
4.87.12.6 Mass Matrix Calculations (Subroutine MT_RDR of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-165
4.87.12.7 Thermal Load Calculations (Subroutine TT_RDR of
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-166
4.87.12.8 Element Force andStress Calculations (Subroutines
STORDI andSTORD2 ofModule SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-168
TheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
4.87.13.1
4.87.13.2Input Data fortheVISC Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-175
Damping Matrix Calculations (Subroutine BVISC of
Module SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-175
4.87.14.1
4.87.14.2
4.87.14.3
4.87.14.4
4.87.14.5
4.87.14.6Integral Calculations fortheTRIARG, TRAPRG Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-177
Integral Calculation forq&amp;gt;0andanyp.(Function
DKINT) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. ?&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;gt;0andq&amp;lt;-l(Function
DK8g) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; _&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-179
Integral Calculation forp&amp;lt;0andq&amp;lt;-l(Function
DKIO0) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-180
Integral Calculations forp&amp;gt;-landq=-l(Function
DKJAB) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-181
Integral Calculations forp&amp;lt;-landq=-l(Function
DK219) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
Integral Calculations forp=-landq=-l(Function
DK211) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-182
TheFLUID2, FLUID3, FLUID4, AXIF2, AXIF3, AXlF4, andMFREE
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
4.87.15.1
4.87.15.2
4.87.15.3
4.87.15.4
4.87.15.5Input Data fortheFluid Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-183
Matrix Calculations fortheFLUID2 Element
(Subroutine KFLUD2 ofModule SMAIandSubroutine
MFLUD2 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-183
Matrix Calculations fortheFLUID3 Element
(Subroutine KFLUD3 ofModule SMAIandSubroutine
MFLUD3 ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-186
Matrix Generation fortheFLUID4 Element
(Subroutine KFLUD4 inModule SMAIandSubroutine
MFLUD4 inModule SF_2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-188
Matrix Calculations fortheMFREEElement (Subroutine
MFREEinModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-189
xix(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
4.87.16
4.87.17TABLEOFCONTENTS (Continued)
PageNo.
4.87.15.6 Stress Calculations fortheAXIFElements,
Phase1&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-189
4.87.15.7 Stress Calculations fortheAXIFElements,
Phase2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
TheSL_T3andSLOT4FluidElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.1 InputDatafortheSL_T3andSL_T4Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-194
4.87.16.2 General Calculations fortheSLOTElements &amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-195
4.87.16.3 Stiffness Matrix Generation fortheSL_T3Elements &amp;hellip;.4.87-195
4.87.16.4 MassMatrix Generation fortheSL@T3 Elements &amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.5 Stress Matrix Calculations intheSL_TElements
(Phase I)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-196
4.87.16.6 CSLOTi Element, Phase 2&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-198
SolidPolyhedra Elements, TETRA, WEDGE, HEXAI, HEXA2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.1 InputDatafortheSolidPolyhedra Elements &amp;hellip;&amp;hellip;&amp;hellip;. 4.87-199
4.87.17.2 BasicEquations fortheTETRA Element &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-200
4.87.17.3 Stiffness Matrix Generations fortheTETRAElement
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.4 MassMatrix Generation fortheTETRA Element
(Subroutine MSOLID ofModule SMA2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-201
4.87.17.5 Thermal LoadGeneration fortheTETRAElement
(Subroutine TETRAofModule SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-201
4.87.17.6 Stress Calculations fortheTETRAElements
(Subroutines SSOLIDI andSSOLID2 ofModule SDR2) &amp;hellip;.. 4.87-202
4.87.17.7 BasicEquations fortheWEDGE, HEXAI, andHEXA2
Elements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-203
4.87.17.8 Stiffness Matrix Calculations andGeometry Checks
fortheWEDGE, HEXAI, andHEXA2 Elements (Subroutine
KSOLID ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-204
4.87.17.9 MassMatrix Generation fortheWEDGE, HEXAI, and
HEXA2 Elements (Subroutine MSOLID ofModule SMA2)&amp;hellip;.. 4.87-205
4.87.17.10 Thermal LoadGeneration fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutine S_LID ofModule SSG2)&amp;hellip;&amp;hellip; 4.87-206
4.87.17.11 Stress DataRecovery fortheWEDGE, HEXAI, and
IIEXA2 Elements (Subroutines SSOLIDI andSS_LID2 of
Module SDR2) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-206
4.87.17.12 Thermal Analysis Calculations fortheSolid Elements
(Subroutine KTETRA ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-207
xx(811172)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
4.88
4.89
4.90
4.91
4.92
4.93
4.94
4.95
4.96
4.97
4.98
4.99
4.100
4.101
4.102
4.103
5.ae_.
4.87.18 TheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.1 InputDatafortheHBDYElements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.87-208
4.87.18.2 Stiffness Matrix Calculations (Subroutine HBDY
ofModule SMAI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.87-208
4.87.18.3 HBDYElement Thermal Loads(Subroutine HBDYof
Module SSGI) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.87-210
DETERMINANT METHOD OFEIGENVALUE EXTRACTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.88-I
EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.89-I
FUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC
PROBLEMS) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.90-I
EXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.91-I
FUNCTIONAL MODULE PLI-TRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.92-I
MATRIX MODULE UPARTN (PARTITIONS AMATRIX BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.93-I
MATRIX MODULE UMERGE (MERGES TWOMATRICES BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.94-I
MATRIX MODULE VEC(CREATES PARTITIONING VECTOR BASEDONUSET) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.95-I
MATRIX MODULE ADD5(ADDMATRICES) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.96-I
FUNCTIONAL MODULE INPUT(INPUT GENERATOR) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 4.97-I
FUNCTIONAL MODULE INPUTTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.98-I
FUNCTIONAL MODULE INPUTT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.99-I
FUNCTIONAL MODULE BUTPUTI &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.100-I
FUNCTIONAL MODULE _UTPUT2 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.101-I
OUTPUT MODULE _UTPUT3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 4.102-I
OUTPUT MODULE TABPRT (FORMATTED TABLEPRINTER) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 4.103-I
NASTRAN -OPERATING SYSTEM INTERFACES
5.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.1-I
5.2 NASTRAN OnTheIBM7094/7040(44) DCS(IBSYS) DELETED&amp;hellip;&amp;hellip;&amp;hellip;.. 5.2-I
5.3 NASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
5.3.1
5.3.2
5.3.3
5.3.4
5.3.5Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-I
Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.3-I
LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-6
xxi(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
5.4
5.5TABLEOFCONTENTS (Continued)
PageNo.
5.3.6 Physical ItemsandGeneration ofNASTRAN Executable System &amp;hellip;&amp;hellip;. 5.3-13
5.3.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-17
5.3.8 GIN_(Generalized Input/Output Processor forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-20
5.3.9 Special ErrorCodesfromNASTRAN ontheSystem 360&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-22
5.3.10 System 360F_RTRAN Compilers usedforNASTRAN &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.3-23
5.3.11 IBM360-370 Overlay Charts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.3-24
NASTRAN ONTHEUNIVAC 1108(EXEC8)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-I
5.4.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-I
5.4.3 LinkSwitching &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-4
5.4.4 Overlay Considerations andImplementation ofOpenCore&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-5
5,4.5 Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-7
5.4.6 Description ofNASTRAN Physical ItemsandGeneration ofthe
NASTRAN Executable System &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-10
5.4.7 Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-12
5.4.8 Procedure toCopytheThree System Tapes &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-15
5.4.9 NASTRAN Tapes (Files) Catalogue Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-17
5.4.10 NASTRAN Update Procedure &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-19
5.4,11 Regenerate theExecutable Tape &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-20
5.4.12 TheASGCRDS Program File&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-22
5.4.13 TheC_NTRL orC_NTRL42K Program File &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-23
5.4.14 Description ofaDemonstration Problem Starter Deck&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-24
5.4.15 TapeandProblem Numbers fortheNASTRAN Demonstration Problem
InputDataTape&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.4-27
5.4.16 GIN_(Generalized Input/Output forNASTRAN) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.4-28
5.4.17 Matrix Packing Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-32
5.4.18 1108TimeEstimation &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.19 Single Precision Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-38
5.4.20 UNIVAC Overlay Diagrams &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.4-39
NASTRAN ONTHECDC6400/6600 (SCOPE 3)&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-I
5.5.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-I
5.5.2 Input/Output &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.5-2
xxii(8/I/72)&lt;/p&gt;
&lt;p&gt;TABLE OFCONTENTS (Continued)
Section
5.5.3
5.5.4
5.5.5
5.5.6
6.PageNo.
Layout ofCoreStorage &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.5-4
Execution DeckSetup &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-6
Physical Deliverables andGeneration ofExecutable System &amp;hellip;&amp;hellip;.. 5.5-9
Machine Dependent Routines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.5-12
5.6 THECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-I
5.6.1 Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-I
5.6.2 Preparing forLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-6
5.6.3 Designing anOverlay Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-7
5.6.4 Linkage Editor Control Statements &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 5.6-12
5.6.5 Examples ofLinkage Editor Processing &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-23
5.6.6 Storage Requirements fortheLinkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 5.6-29
5.6.7 Link-Edited Linkage Editor &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 5.6-30
MODIFICATIONS ANDADDITIONS TONASTRAN
6.1 INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.l-I
6.2 FBRTRAN IVLANGUAGE RESTRICTIONS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.2-I
6.3 THEEXECUTIVE CONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.3-I
6.3.1 TheNASTRAN Card&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.3-I
6.4 THECASECONTROL DECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.4-I
6.5 THEBULKDATADECK &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 65-I
6.6 RIGID FORMATS &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.6-I
6.7 FUNCTIONAL MODULES &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 67-I
6.8 ADDING ASTRUCTURAL ELEMENT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-I
6.8.1 Introduction totheProblem &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-I
6.8.2 General Guidelines &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 68-16
6.8.3 Specific Checklists &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-27
6.8.4 Updating theNASTRAN Manuals &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.8-49
6.8.5 Dummy UserElements (DUMI through DUM9) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.8-54
6.9 PRINTED OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.9-I
6.10 PLOTTER OUTPUT &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-1
6.10.1 Changes tothePlotter Software &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-1
xxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;TABLEOFCONTENTS (Continued)
Section
6.11
6.12
7,6.10.2
6.10.3
6.10.4
6.10.5
6.10.6
ADDITION
6.11.I
6.11.2
6.11.3
6.11.4
6.11.5Pa_eNo.
Changes tothePL_TModule, theStructural Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-3
Changes totheXYPLOT Module, theXYPlotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.10-4
Changes totheSEEMAT Module, theMatrix Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-4
UseoftheNASTRAN Plotter Software inaNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.10-6
NASTRAN General Purpose Plotter &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.10-14
OFANEWLINK&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 6.11-I
Modules toInclude &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 6.11-I
Addition of_ewModules &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 6.11-I
Generation ofaNewLinkSpecification TableandaNewLink
Driver &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Subsys theNewLink&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Increasing theLinkLimit &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
6.12,1
6.12.2
6.12.3
6.12.4
6.12.5
NASTRAN SUPPORT
7.1
7.2WRITING ANEWMODULE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Summary ofNASTRAN Coding Conventions andTerminology &amp;hellip;&amp;hellip;&amp;hellip;..
Module Design &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
Implementing theNewModule &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Coding aModule Subroutine &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
Sample Module Coding &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
PROGRAMS
INTRODUCTION &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
DESIGN OFTHECDC6400/6600 LINKAGE EDITOR &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
7.2.1
7.2.2
7.2.3
7.2.4
7.2.5
7.2.6
7.2.7
7.2.8
7.2.96.11-2
6.11-4
6.11-4
6.12-I
6.12-I
6.12-3
6.12-7
6.12-8
6.12-12
7.1-I
7.2-I
Introduction &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-2
Discussion oftheMajor Divisions oftheLinkage Editor/Loader ..7.2-14
Flowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-79
Subroutine Descriptions &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-134
Object DeckFormat &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-176
Principal Linkage Editor Variable &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-183
Linkage Editor Output andDiagnostic Messages &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.2-191
Recommended Improvements totheLevel2.0Version &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.2-204
Linkage Editor Glossary &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 7.2-205
xxiv(8/I/72)&lt;/p&gt;
&lt;p&gt;Section
7.3TABLE OFCONTErJTS (Continued)
Page No.
THESOURCE &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
7.3.1
7.3.2
7.3.3
7.3.4
7.3.5Purpose oftheSource Conversion Program &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-I
Conversion Performed &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-I
MajorDivisions intheProgram &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. 7.3-8
UseoftheSCP&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-19
SCPFlowcharts &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; 7.3-20
xxv(8/I/72)&lt;/p&gt;
&lt;p&gt;MostRecent
811172
*i 811172
*ii 811172
*iii BII172
*iv 811172
*v 8/1/72
*vi 8/1/72
*vii 8/1/72
*viii 811172
*ix 811172
*x 8/I/72
*xi 8/I/72
*xii 8/I/72
*xiii BII/72
*xiv 8/3/72
*xv 8/1/72
*xvi 811172
*xvii 8/I/72
*xviii B/1/72
*xix B/I/72
*xx 811/72
*xxi 8/I/72
*xxii 8/l/72
*xxiii 8/I/72
*xxiv Bl1172
*xxv B11172
*xxvi 8/I/72
*xxvii 8/I/72
*xxviii 8/I/72
*xxix 811/72
&lt;em&gt;XXX
l.I-I
l.I-2
1.I-3
1.I-4
I.2-I
l.2-2 8/I/72&lt;/em&gt;l.2-3
1.2-4
1.2-5
I.2-6
1.2-7 8/1/72
*I.2-8 811172
*lâ€¢2-9 8/l/72
**l.9-9a
1.2-10 8/I/72
*I.2-11
l.2-12 ll/I/70
1.2-13 II/1/701.2-14
l.3-I
I.3-2
1.3-3
1.4-I
I.5-I
I.5-2 12/I/69
1.6-I
1.6-2
1.6-3
l.6-4PAGEsTATUS LOG
MostRecent
12/1/69
811172
811172
12/I/69
811172
1111170
1111170
1111/70
1111170
8/1/72
8/1/72
8/1/72
1111170
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
8/1/72_ e P,__ Â°MostRecent
*2.3-28a
*2.3-29
-2.3-29a
**2.3-29b
*2.3-30
2.3-31
2.3-32
2.3-33
2.3-34
2.3-35
2.3-36
2.3-37
2.3-38
2.3-39
2.3-40
,2.3-41
2.3-42
2.3-43
*2.3-44
2.3-45
*2.3-46
**2.3-46a
2.3-47
2.3-48
*2.3-49
*2.3-49a
**2.3-49b
*,2.3-49c
2.3-50
2.3-51
*2.3-52
2.3-53
2.3-54
2.3-55
2.3-56
2.3-57
2.3-58
2.3-59
2.3-60
2.3-61
2.3-62
2.3-63
2.3-64
2.3-65
2.3-66
2.3-67
2.3-68
2.3-69
2.3-70
2.3-71
2.3-72
2.3-73
2.3-74
2.3-75
2.3-76
2.3-77
2.3-78
2.3-79
2.3-80811172
8/1/72
811172
8/1/72
811172
1111170
8/1/72
811172
1211169
8/1/72
8/1/72
8/1/72
8/1/72
811172
8/1/72
8/1/72
1211169
3/1/71
xxvi(8/1/72)
f&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
2.3-81
2.3-82
2.3-83
2.3-84
2.3-85
2.3-86
*2.3-87
2.3-88
2.3-89
2.3-90
2.3-91
2.3-92
2.3-93
2.3-94
2.3-95
2.3-96
2.3-97
2.3-98
*2.3-99
2.3-I00
2.3-I01
2.3-I02
2.3-I03
2.3-104
2.3-I05
2.3-I06
2.3-I07
2.3-I08
2.3-I09
2.3-II0
2.3-II
2.3-12
2.3-13
2.3-14
2.3-15
2.3-16
2.3-17
2.3- 18
2.3-I19
2.3-120
2.3-121
2.3-122
2.3-123
2.3-124
&amp;ldquo;2.3-125
&amp;ldquo;2.3-126
&amp;ldquo;2.3-127
2.3-I27a
2.3-128
2.3-129
2.3-130
2.3-131
2.3-132
2.3-133
2.3-134
2.3-134a
2.3-135
2.3-136
2.3-136aMostRecent
DateChanged
811172
811172
7/I/70
7/I/70
12/I/69
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
2.3-137
2.3-138
2.3-139
2.3-140
2.3-141
&amp;ldquo;2.3-142
2.3-143
*2.3-I 44
*2.3-I 45
2.3-146
2.3-147
2.3-148
2.3-149
*2.3-I 50
2.3-151
2.3-152
2.3-153
2.3-154
2.3-155
2.3-156
2.3-157
2.3-158
2.3-159
2.3-160
2.3-161
2.3-162
2.3-163
2.3-164
2.3-165
2.3-166
2.3-167
2.3-168
2.3-169
2.3-170
2.3-171
2.3-172
2.3-173
2.3-I74
2.3-175
2.3-176
2.3-177
2.3-178
2.3-179
2.3-180
2.3-181
2.3-182
2.3-183
&amp;ldquo;2.3-184
2.3-185
*2.3-I 86
&amp;ldquo;2.3-187
*2.3-I 88
2.3-189
&amp;ldquo;2.3-190
&amp;ldquo;2.3-191
*&amp;lsquo;2.3-191a
2.3-192
2.3-193
&amp;ldquo;2.3-194Most Recent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72Pae_.
2.4-I
2.4-2
2.4-3
2.4-4
2.4-5
2.4-6
2.4-7
2.4-8
2.4-9
2.4-I0
2.4-II
2.4-12
&amp;ldquo;2.4-13
&amp;ldquo;2.4-13a
2.4-14
2.4-15
2.4-16
2.4-17
2.4-18
2.4-19
2.4-20
2.4-21
2.4-22
2.4-23
2.4-24
2.4-25
2.4-26
2.4-27
2.4-28
2.4-29
2.4-30
2.4-31
2.4-32
2.4-33
2.4-34
2.4-35
2.4-36
2.4-37
2.4-38
2.4-39
2.4-40
2.5-I
2.5-2
2.5-3
2.5-4
2.5-5
*2.5-6
**2.5-6a
2.5-7
2.5-8
2.5-9
2.5-I0
2.5-II
2.5-12
2.5-13
3.l-I
3.1-2
3.1-3Most Recent
DateChanged
311171
8/I/72
8/I/72
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
311171
311171
311171
311171
311171
1211169
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
xxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
&amp;ldquo;3.2-I
*3.2-2
*3.2-3
*3.2-4
*3.2-5
*3.2-6
**3.2-7
3.3-I
3.3-2
3.3-3
3.3-4
3.3-5
3,3-6
3.3-7
3.3-8
3.3-9
3.3-10
3.3-11
3.3-12
3.3-13
3.3-14
&amp;ldquo;3.3-15
&amp;ldquo;3.3-15a
3.3-16
&amp;ldquo;3.3-17
*&amp;lsquo;3.3-18
*&amp;lsquo;3.3-19
**3.3-20
3.4-I
3.4-2
3.4-3
3.4-4
3.4-5
3.4-6
3.4-7
3.4-8
3.4-9
3.4-10
3.4-11
3.4-12
3.4-13
3.4-14
3.4-15
3.4-16
3.4-17
&amp;ldquo;3.4-18
3.4-19
3.4-20
3.4-21
3.4-22
3.4-23
*3.4-24
3.4-25
3.4-26
3.4-27
*3.4-28
3.4-29
3.4-30
3.4-31
3.4-32MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72PaseNo
3.4-33
3.4-34
3.4-35
*3.4-36
3.4-37
3.4-38
3.4-39
3.4-4O
3.4-41
3.4-42
3.4-43
3.4-44
3.4-45
3.4-46
3.4-47
3.4-48
3.4-49
3.4-50
3.4-51
3.4-52
3.4-53
3.4-54
3.4-55
3.4-56
3.4-57
3.4-58
3.4-59
3.4-60
3.4-61
3.4-62
3.4-63
3.4-63a
*3.4-64
*3.4-65
3.4-66
3.4-67
3.4-68
3.4-69
3.4-70
3.4-71
3.4-72
3.4-72a
3.4-73
3.4-73a
3.4-74
3.4-74a
3.4-75
3.4-75a
3.4-76
3.4-77
3.4-78
3.4-78a
3.4-79
3.4-80
3.4-81
3.4-82
3.4-83
3.4-84
3.4-85
3.4-86MostRecent
DateChan_ed
3/I/71
8/I/72
12/I/69
12/I/69
3/I/71
12/I/69
12/I/69
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
3.4-87
3.4-87a
3.4-88
3._-89
3.4-90
3.4-91
3.4-92
3.4-93
3.4-94
3.4-95
3.4-96
3.4-97
3.4-98
3.4-99
3.4-100
3.4-101
3.4-102
3.4-103
3.4-104
3.4-105
3.4-106
3.4-107
3.4-108
3.4-109
3.4-110
3.4-111
&amp;ldquo;3.4-112
3.4-113
3.4-114
3.4-115
3.4-116
3.4-117
*&amp;lsquo;3.4-118
*&amp;lsquo;3.4-119
**3.4-120
*&amp;lsquo;3.4-121
*&amp;lsquo;3.4-122
*&amp;lsquo;3.4-123
*&amp;lsquo;3.4-124
*&amp;lsquo;3.4-125
*&amp;lsquo;3.4-126
*&amp;lsquo;3.4-127
*&amp;lsquo;3.4-128
*&amp;lsquo;3.4-129
**3.4-I 30
&amp;ldquo;3.5-I
3.5-2
3.5-3
*3.5-4
3.5-5
3.5-6
*3.5-7
*3.5-8
*3.5-9
3.5-10
3.5-11
3.5-12
3.5-13
3.5-14
3.5-15MostRecent
DateChansed
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
7/I/70
7/I/70
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxviii&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
Pae_.
3.5-16
3.5-17
3.5-18
3.5-19
3.5-20
3.5-21
3.5-22
*3.5-23
3.5-24
3.5-25
*3.5-26
*3.5-27
*3.5-28
**3.5-28a
3.5-29
3.5-30
3.5-31
3.5-32
3.5-33
3.5-34
3.5-35
3.5-36
3.5-37
3.5-38
3.5-39
3.5-40
3.5-41
3.5-42
*3.5-43
*3.5-44
3.5-45
3.5-46
3.5-47
3.5-48
3.5-49
3.5-50
3.5-51
3.5-52
3.5-53
3.5-54
3.5-55
3.5-56
3.5-57
3.5-58
3.5-59
3.5-60
3.5-61
3.5-62
*3.5-63
3.5-64
*3,5-65
**3.5-65a
3.5-66
3.5-67
3.5-68
3.5-69
3.5-70
3.5-71
3.5-72MostRecent
DateChanged
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
12/I/69
8/I/72
8/I/72
8/I/72PageNo.
3.5-73
3.5-74
3.5-75
3.5-76
3.5-77
3.5-78
3.5-79
**3.5-80
**3.5-81
**3.5-82
**3.5-83
**3.5-84
**3.5-85
*4.I-I
4.1-2
4.1-3
4.1-4
4.1-5
4.1-6
*4.I-7
**4.1-7a
*4.1-8
*4.I-9
&amp;ldquo;4.1-10
*4.1-I1
&amp;ldquo;4.1-12
&amp;ldquo;4.1-13
&amp;ldquo;4.1-14
&amp;ldquo;4.1-15
*4.1-16
&amp;ldquo;4.1-17
*4.I-I8
*4.1-19
*4.1-20
*4.1-21
**4.1-22
**4.1-23
4.2-I
*4.2-2
4.2-3
4.2-4
4.2-5
4.2-6
4.3-I
4.3-2
4.3-3
4.3-4
4.3-5
4.3-6
4.3-7
4.3-8
4.3-9
4.3-10
&amp;ldquo;4.3-11
&amp;ldquo;4.3-12
4.4-I
4.4-2
4.4-3
4.4-4
4.4-5MostRecent
DateChanged
12/I/69
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
811/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
8/I/72
8/I/72PageNo.
4.4-6
4.4-7
4.4-8
4.4-9
4.4-10
4.4-11
&amp;ldquo;4.5-I
*4.5-2
4.5-3
4.5-4
*4.5-5
*4.5-6
*4.5-7
*4.5-8
*4.5-9
&amp;ldquo;4.5-10
*4.5-I1
&amp;ldquo;4.5-12
&amp;ldquo;4.5-13
**4.5-13a
&amp;ldquo;4.5-14
&amp;ldquo;4.5-15
&amp;ldquo;4.5-16
&amp;ldquo;4.5-17
&amp;ldquo;4.5-18
&amp;ldquo;4.5-19
**4.5-20
4.6-I
4.6-2
4.6-3
4.6-4
4.6-5
4.6-6
4.6-7
4.6-8
4.6-9
4.6-10
4.6-11
4.6-12
4.6-13
4.6-14
4.6-15
4.7-I
4.7-2
4.7-3
4.7-4
4.7-5
*4.7-6
**4.7-6a
4.7-7
4.7-8
4.7-9
4.7-10
4.8-I
4.8-2
4.9-I
*4.9-2
4.9-3
4.9-4Most
DateRecent
Changed
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxix(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.9-5
4.9-6
4.9-7
4.9-8
4.9-9
4.9-10
4.10-I
4.10-2
4.10-3
4.10-4
4,11-I
4.11-2
4.11-3
4.12-I
4.13-I
4.13-2
4.14-I
4.14-2
4.15-I
4.16-I
4.16-2
4,16-3
4.16-4
4.17-I
4.17-2
4.17-3
4.17-4
4.17-5
4.17-6
4.18-I
4.19-I
4.19-2
4.20-I
4.21-I
4.21-2
4.21-3
4.21-4
4.21-5
4.21-6
&amp;ldquo;4.21-7
4.21-8
4.21-9
4.22-I
4.22-2
*4.22-3
4.23-I
4.23-2
*4.23-3
*4.23-4
*4.23-5
4.24-I
4.24-2
4.24-3
4.24-4
4.24-5
4.24-6
4.24-7
4.24-8
4.24-9MostRecent
DateChanged
8/I/72
11/I/70
8/]/72
1211169
811/72
811/72
811/72
12/I/69
12/I/69
3/I/71
3/I/71Pae_.
4.24-10
4.24-I1
4.24-12
*4.24-I 2a
4.24-13
&amp;ldquo;4.24-14
4.24-15
4.24-16
4,24-17
4.24-18
4.25-I
4.25-2
4.25-3
4.25-4
4.25-5
4.25-6
4.25-7
4.25-8
4.25-8a
4.25-9
4.25-10
4.26-I
4.26-2
4.26-3
4.26-4
4.26-5
4.26-6
4.26-7
4.26-8
4.26-9
4.26-10
4.26-I1
4.26-12
4.26-13
4.26-14
*4.26-15
4.26-16
4.26-17
4.26-18
4.27-I
4.27-2
4.27-3
4.27-4
4.27-5
*4.27-6
4.27-7
*4.27-8
4.27-9
4.27-10
4.27-11
4.27-12
&amp;ldquo;4.27-13
4.27-14
4.27-15
4.27-16
4.27-17
4.27-18
4.27-19
4.27-20MostRecent
DateChanged
3/I/71
3/I/71
3/I/71
8/I/72
8/I/72
12/I/69
12/I/69
9/I/70
9/I/70
1111170
911170
1111170
1111170
811172
811172
311171
811172
811172PageNo.
&amp;ldquo;4.27-21
**4.27-21a
**4.27-21 b
*4.27-22
4.27-23
4.27-24
4.27-25
*4.27-26
*4.27-27
4.28-I
4.28-2
4.28-3
4.28-3a
4.28-4
4.28-5
4,28-6
4.28-7
4.28-8
&amp;ldquo;4.28-8a
&amp;ldquo;4.28-8b
4.28-9
&amp;ldquo;4.29-I
*4.29-2
*4.29-3
*4.29-4
*4.29-5
4.29-6
4.29-7
4.30-I
4.30-2
4.30-3
4.30-4
4.30-5
4.30-6
4.30-7
4.30-8
&amp;ldquo;4.31-I
*4.31-2
*4.31-3
&amp;ldquo;4.31-4
*4.31-5
**4.31-6
4.32-I
4.32-2
4.32-3
4.32-4
4.33-I
4.33-2
4.33-3
4.34-I
4.34-2
4.35-I
4,35-2
4.35-3
*4.36-I
*4.36-2
*4.36-3
4.37-I
4.37-2MostRecent
DateChanged
811172
811/72
8/I/72
811172
711170
811172
811/72
311171
311171
311171
311171
1211169
8/Ir72
8/I172
7/I170
8/Ir72
8/Ir72
8/I_72
8/I172
8/I172
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
8/I/72
8/I/72
8/I/72
xxx(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo_.
4.38-I
4.38-2
&amp;ldquo;4.39-I
4.39-2
4.40-I
4.40-2
4.41-I
4.41-2
4.41-3
&amp;ldquo;4.41-4
4.41-5
4.41-6
&amp;ldquo;4.41-7
4.41-8
4.41-9
4.41-lO
4.41-ll
*4.41-12
&amp;ldquo;4.41-13
**4.41 -l3a
4.41-14
4.41-15
4.41-16
4,41-17
4.41-18
4.41-19
4.41-20
4.41-21
4.41-22
4.41-23
4.41-24
4.41-25
4.41-26
4.41-27
&amp;ldquo;4.41-28
*&amp;lsquo;4.41-28a
**4.41-28b
**4.41-28c
*4.41 -29
4.41-30
4.42-I
4.42-2
4.42-3
4.42-4
4.43-1
4.43-2
4.43-3
4.44-1
4.44-2
4.45-I
4.45-2
4.45-3
4.45-4
4.45-5
4.45-6
4.46-I
4.46-2
4.46-3
4.46-4
4.46-5MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
12/I/69
7/I/70
911/70
8/I/72
8/I/72
8/I/72
7/1/70
3/1/71
3/1/71
8/1/72
8/1/72
8/1/72
8/1/72
8/1/72
7/1/70
3/1/71Page No.
4.46-6
4.46-7
4.46-8
4.46-9
4.46-10
4.46-I 1
4.46-12
4.46-13
4.46-14
4.46-15
4.46-16
4.46-17
4.46-18
*4.46-19
*&amp;lsquo;4.46-19a
**4.46-I 9b
*4.46-20
4.47-I
4.47-2
4.47-3
4.47-4
4.47-5
4.47-6
4.47-7
4.47-8
*4.48-I
*4.48- 2
4.48-3
4.48-4
*4.48-5
4.48-6
4.48-7
4.48-8
4.48-9
4.48-I0
4.48-II
*4.48-12
4.48-13
4.48-14
4.48-15
4.48-16
4.48-17
4.48-18
4.48-19
4.48-19a
4.48-19b
4.48-19c
4.48-19d
4.48-19e
4.48-19f
4.48-19g
4.48-20
4.48-21
4.48-22
4.48-23
4.48-24
4.48-25
*4.48- 26
4.48-27Most Recent
DateChanged
811172
811172
8/I/72
811172
1211/69
811172
811/72
12/I/69
8/I/72
3/I/71
7/I/70
8/I/72
12/I/69
12/I/69
12/I/69
1211/69
12/I/69
1211169
12/I/69
3/I/71
12/I/69
8/I/72PBe_.
4.49-I
4.49-2
&amp;ldquo;4.49-3
4.49-4
4.49-5
*4.49-6
*4.49-7
**4.49- 7a
4.49-8
4.49-9
4.50-I
4.50-2
4.51-I
4.51-2
4.51-3
4.51-4
&amp;ldquo;4.52-I
*4.52-2
*4.52-3
*4.52-4
4.53-I
4.53-2
4.54-I
*4.54-2
4.54-3
4.54-4
4.54-5
4.54-6
4.54-7
4.54-8
4.55-I
4.55-2
4.55-3
4.55-4
4.55-5
4.55-6
4.55-7
4.55-8
4.55-9
4.56-I
4.56-2
4.56-3
4.57-I
4.57-2
4.57-3
4.57-4
4.58-I
4.58-2
4.58-3
4.58-4
4.58-5
4.58-6
4.58-7
4.59-I
*4.59-2
4.59-3
4.59-4
4.59-5
4.59-6MostRecent
DateChanged
12/I169
811172
1211169
811172
811172
811172
711170
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
3/I/71
8/I/72
xxxi(811172)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
Pa_ag_eNo.
4.59-7
4.59-8
4.59-9
4.59-10
*4.59-I 1
4.59-12
4.59-13
&amp;ldquo;4.59-14
*&amp;lsquo;4.59-15
4.60-I
4.60-2
4,60-3
4.60-4
4.60-5
4.60-6
4.60-7
*4.61-I
&amp;ldquo;4.61-2
*4.61-3
**4.61-3a
4.61-4
&amp;ldquo;4.61-5
4.61-6
4.61-7
4.61-8
4.62-I
4.62-2
4.62-3
4.62-4
4.62-5
4.62-6
4.62-7
4.62-8
*4.62-9
4.63-I
4.63-2
4.63-3
4.63-4
4.63-5
4.63-6
4.63-7
4.63-8
4,64-I
4.64-2
4.64-3
4.64-4
4.64-5
*4.64-6
*4.64-7
4.64-8
4.64-9
4.64-10
4.65-I
4.65-2
4.65-3
4.65-4
4.65-5
4.65-6
4,65-7
*4.65-8MostRecent
DateChanged
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
6/I/71
6/I/71
6/I/71
8/I/72
8/I/72
8/I/72PageNo.
4.65-9
4.65-10
&amp;ldquo;4.65-11
4.65-12
4.65-13
4.65-14
4.65-15
4.65-16
4.65-17
&amp;ldquo;4.65-18
&amp;ldquo;4.65-19
4.65-20
4.65-21
4.65-22
4.66-I
4.66-2
4.66-3
4.66-4
4.66-5
4.67-I
4.68-I
4.68-2
4.68-3
4.68-4
4.68-5
4.69-I
4.69-2
4.69-3
4.69-4
4.70-I
4,70-2
4.70-3
4.70-4
4.70-5
4.70-6
4.70-7
4.71-I
4.72-I
4.72-2
4.72-3
4.73-I
4.73-2
4.73-3
4.73-4
4.74-I
4.74-2
474-3
*z.74-4
**z.74-4a
474-5
475-I
476-I
476-2
476-3
477-I
477-2
477-3
*z.78-I
*z.78-2
.79-IMostRecent
DateChanged
1211169
12/I/69
8/I172
711170
711170
7/I170
3/I171
8/I/72
8/I/72
7/I/70
7/I/70
7/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72PageNo.
4.79-2
4.79-3
4.80-I
4.80-2
4.81-I
4.81-2
4.82-I
4.82-2
&amp;ldquo;4.83-I
4.83-2
*4.83-3
**4.83-4
&amp;ldquo;4.84-I
*4.84-2
4,85-I
4.86-I
4.86-2
&amp;ldquo;4.87-I
*4.87-2
*4.87-3
*4.87-4
*4.87-5
*4.87-6
4.87-7
4.87-8
4.87-9
4.87-10
4.87-11
4.87-12
&amp;ldquo;4.87-13
4.87-14
4.87-15
4.87-16
4.87-16a
*&amp;lsquo;4.87-16b
4.87-17
4.87-18
4.87-19
4.87-20
4.87-21
4.87-22
4.87-23
4.87-24
4.87-25
4.87-25a
*4.87-26
4.87-27
4.87-28
4.87-28a
4.87-29
4.87-30
4.87-31
4.87-32
4.87-33
4.87-34
4.87-35
4.87-36
*4.87-37
3.87-38
4.87-39MostRecent
DateChanged
811/72
311/71
811172
811172
8/I172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
11/I/70
3/I/71
3/I/71
8/I/72
3/I/71
12/I/69
8/I/72
3/I/71
3/I/71
9/I/70
9/I/70
8/I/72
911170
11/1/70
9/I/70
3/I/71
3/I/71
8/I/72
xxxii (8/I/72)&lt;/p&gt;
&lt;p&gt;4.87-40
4.87-41
4.87-42
4.87-43
4.87-44
4.87-45
4.87-46
4.87-47
4.87-48
4.87-49
4.87-50
4.87-51
4.87-52
4.87-53
4.87-54
4.87- 55
4.87-56
4.87-57
4.87-58
4.87-59
4.87-60
4.87-61
4.87-6 2
*4.87-63
*4.87-64
4.87-65
*4.87-66
**4.87-66a
*4.87-67
4.87-68
4.87-69
4.87-70
4.87-71
4.87-72
4.87-73
4.87-74
4.87-75
4.87-76
4.87-76a
4.87-76b
4.87-76c
*4.87-76d
&lt;strong&gt;4.87-76e
4.87-77
4.87-78
4.87-79
4.87-80
4.87-81
4.87-82
*4.87 -83
4.87-84
4.87-85
4.87-86
4.87-86a
4.87- 87
4.87-88
4.87-89
4.87-90
4.87-91MostRecent
DateChanged
311171
3/1/71
3/1/71
811/72
8/I/72
II11170
811172
811172
811172
12/]/69
12/I/69
12/I/69
8/1/72
811/72
8/I/72
9/I/70
9/I/70
9/1/70PAGESTATUS LOG
MostRecent
Most Recent
4.87-119 12/I/69
*4.87-92 8/I/72 4.87-120
4.87-9 3 4.87-I 21
4.87-94 4.87-I 22
4.87-95 12/1/69
*4.87-96 8/I/72 4.87-123
4.87-97 9/I/70 -4.87-124 8/I/72
4.87-97a 9/I/70 ,4.87-125 8/1/72
*4.87-98 8/I/72 ,4.87-126 8/I/72&lt;/strong&gt;4.87-126a 8/I172
4.87-99 4.87-127
4.87-I00 4.87-127a 12/I/69
4.87-I01 4.87-127b 12/I/69
4.87-102 12/I/69
4.87-I03 ll/I/70 4.87-127c
4.87-I04 ll/I/70 4.87-127d 12/I/69
4.87-I04a 12/I169 4.87-127e 12/I/69
4.87-104b 12/I/69 4.87-127f 12/I/69
4.87-104c 12/I/69 4.87-128
4.87-104d 12/I/69 4.87-129
4.87-104e 12/I/69 4.87-130
4.87-104f 12/I/69 4.87-131
4.87-I04g 12/I/69 a.87-132
4.87-I04h 1211/69 4.87-133
4.87-I04i 12/I/69 4.87-134
4.87-I04j 12/I/69 4.87-135
4.87-I04k 12/I/69 -4.87-136 8/I/72
4.87-I04_ 12/I/69 4.87-137
4.87-I04m 12/I/69 4.87-138
4.87-I04n 11/I/70 *-4.87-138a 8/I/72
4.87-104o 1111/70 4.87-139
,4.87-105 8/I/72 4.87-140 3/I/714.87-141 3/I/71
4.87-106 4.87-142 3/I/71
4.87-107 3/I/71
4.87-108 9/I/70 4.87-143
,4.87-109 8/1172 4.87-144
,4.87-I09a 8/I/72 4.87-145
4.87-I09b 12/I/69 4.87-146
4.87-I09c 12/I/69 4.87-147
.4.87-I09d 8/I/72 4.87-148
*-4.87-I09e 8/I/72 4.87-149
*-4.87-I09f 8/I/72 4.87-150
*-4.87-I09g 8/I/72 -4.87-151 8/I/724.87-152
*,4.87-I09h 811/72 4.87-153
*&amp;lsquo;4.87-I09i 811/72
*&amp;lsquo;4.87-I09j 8/I/72 4.87-1544.87-155
*-4.87-I09k 8/I/72 4.87-156
*-4.87-I09_ 8/I/72
*-4.87-I09m 8/I/72 4.87-157
**4.87-I09n 8/I/72 4.87-1584.87-159
.-4.87-109o 8/I/72 4.87-160
.,4.87-I09p 8/I/72 4.87-161
4.87-110
-4.87-111 8/I/72 4.87-1624.87-163
4.87-112 4.87-164
4.87-11 3 4.87-165
4.87-114 4.87-166
4.87-115 4.87-167
4.87-116 4.87-168
4.87-117
,4.87-118 8/I/72 4.87-169
xxxiii (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
4.87-170
4.87-171
4.87-172
4.87-173
4.87-174
4.87-175
4.87-176
4.87-177
4.87-178
4.87-I 79
4.87-180
4.87-181
4.87-182
&amp;ldquo;4.87-183
4.87-184
4.87-185
4.87-186
4.87-187
4,87-188
&amp;ldquo;4.87-189
*&amp;lsquo;4.87-190
*&amp;lsquo;4.87-191
*&amp;lsquo;4.87-192
*&amp;lsquo;4.87-193
*&amp;lsquo;4.87-194
*&amp;lsquo;4.87-195
*&amp;lsquo;4.87-196
*&amp;lsquo;4.87-197
*&amp;lsquo;4.87-198
*&amp;lsquo;4.87-199
**4.87-200
*&amp;lsquo;4.87-201
**4.87-202
**4.87-203
**4.87-204
**4.87-205
**4.87-206
**4.87-207
**4.87-208
**4,87-209
*&amp;lsquo;4.87-210
4.88-I
4.88-2
4.88-3
4.88-4
4.88-5
4.88-6
4.88-7
4.88-8
4.88-9
4.88-10
4.89-I
4.89-2
4.89-3
4.89-4
4.89-5
4.89-6
4.89-7
4.89-8
4.89-9MostRecent
DateChanged
811172
11/I170
11/I170
11/I/70
11/I/70
11/I/70
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
1111170
1111170
1111170
1111170
11/1170
1111170
11/I170
1111170
1I11170PageNo.
4.89-10
4.89-I1
4.89-12
4.89-13
4.89-14
4.89-15
4.89-16
4.89-17
&amp;ldquo;4.90-I
*4.90-2
*4.90-3
*4.90-4
*4.90-5
*4.90-6
*4.90-7
**4.90-8
&amp;ldquo;4.91-I
&amp;ldquo;4.91-2
*&amp;lsquo;4.91-3
*&amp;lsquo;4.91-4
*&amp;lsquo;4.91-5
*&amp;lsquo;4.91-6
*&amp;lsquo;4.91-7
&amp;ldquo;4.92-I
*4.92-2
*&amp;lsquo;4.93-I
**4.93-2
*&amp;lsquo;4.94-I
**4.94-2
*&amp;lsquo;4.95-I
**4.95-2
*&amp;lsquo;4.96-I
**4.96-2
*&amp;lsquo;4.97-I
**4.97-2
*&amp;lsquo;4.98-I
**4.98-2
**4.98-3
*&amp;lsquo;4.99-I
**4.99-2
**4.99-3
*&amp;lsquo;4.100-I
*&amp;lsquo;4.100-2
*&amp;lsquo;4.100-3
*&amp;lsquo;4.101-I
*&amp;lsquo;4.101-2
*&amp;lsquo;4.101-3
*&amp;lsquo;4.102-I
*&amp;lsquo;4.102-2
*&amp;lsquo;4.103-I
*&amp;lsquo;4.103-2
5.1-I
&amp;ldquo;5.2-I
&amp;ldquo;5.3-I
*5,3-2
*5.3-3
*5.3-4
*5.3-5
*5.3-6
&lt;em&gt;5.3-7MostRecent
DateChanged
1111170
1111170
1111170
1111170
1111170
11/I/70
1111170
1111170
811r72
8/Ir72
8/I172
811172
811172
811r72
811172
811172
811172
811172
811r72
811172
811t72
811172
8/1172
8/1172
8/I172
8/I172
8/I172
8/I172
8/IZ72
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
DELETED
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72&lt;/em&gt;5
*5
*5
*5
**5
**5
**5
*&amp;lsquo;5
**5PageNo.
*53-8
*53-9
3-10
3-11
3-12
3-13
3-14
3-15
3-16
3-17
3-18
**53-19
**53-20
*&amp;lsquo;5.3-21
**5.3-22
**5.3-23
**5.3-24
**5.3-25
**5.3-26
**5.3-27
**5.3-28
**5.3-29
**5.3-30
*&amp;lsquo;5.3-31
**5.3-32
**5.3-33
**5.3-34
**5.3-35
**5.3-36
**5.3-37
**5.3-38
**5.3-39
**5.3-40
*&amp;lsquo;5.3-41
**5.3-42
**5.3-43
**5.3-44
**5.3-45
**5.3-46
**5.3-47
**5.3-48
**5.3-49
**5,3-50
**53-51
**53-52
**53-53
**53-54
*54-I
*54-2
*54-3
*5.4-4
*5.4-5
*5,4-6
*5.4-7
*5.4-8
*5.4-9
&amp;ldquo;5,4-10
&amp;ldquo;5.4-11
&amp;ldquo;5.4-12
&amp;ldquo;5.4-13MostRecent
DateChan_ed
811172
811172
811172
8/1172
8/1172
8/1172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/It72
8/Ir72
8/I_72
8/1172
8/1172
8/I172
8/I172
8/1172
8/1172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxiv (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
&amp;ldquo;5.4-14
&amp;ldquo;5.4-15
&amp;ldquo;5.4-16
&amp;ldquo;5.4-17
&amp;ldquo;5.4-18
&amp;ldquo;5.4-19
*5.4-20
&amp;ldquo;5.4-21
*5.4-22
*5.4-23
*5.4-24
*5.4-25
*5.4-26
*5.4-27
*5.4-28
*5.4-29
*5.4-30
*5.4-31
*5.4-32
*5.4-33
*5.4-34
*5.4-35
*5.4-36
*5,4-37
*5.4-38
*5.4-39
**5.4-40
*&amp;lsquo;5.4-41
**5.4-42
**5&amp;rsquo;.4-43
*&amp;lsquo;5.4-44
**5.4-45
**5.4-46
**5.4-47
**5.4-48
**5.4-49
**5.4-50
*&amp;lsquo;5.4-51
**5.4-52
**5.4-53
**5.4-54
**5.4-55
**5.4-56
**5.4-57
**5.4-58
**5.4-59
**5.4-60
*&amp;lsquo;5.4-61
**5.4-62
**5.4-63
**5.4-64
**5.4-65
**5.4-66
**5.4-67
**5.4-68
**5.4-69
**5.4-70
*&amp;lsquo;5.4-71
**5.4-72
**5.4-73MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72PageNo.
**5.4-74
**5.4-75
**5.4-76
**5.4-77
&amp;ldquo;5.5-I
*5.5-2
*5.5-3
5.5-4
5.5-5
*5.5-6
*5.5-7
*5.5-8
*5.5-9
&amp;ldquo;5.5-10
&amp;ldquo;5.5-11
&amp;ldquo;5.5-12
&amp;ldquo;5.5-13
*&amp;lsquo;5.5-14
*&amp;lsquo;5.5-15
**5.5-16
*&amp;lsquo;5.5-17
*&amp;lsquo;5.5-18
*&amp;lsquo;5.5-19
**5.5-20
**5.5-21
_&amp;lsquo;5.5-22
**5.5-23
**5.5-24
**5.5-25
**5.5-26
**5.5-27
**5.5-28
**5.5-29
**5.5-30
*&amp;lsquo;5.5-31
**5.5-32
**5.5-33
**5.5-34
**5.5-35
**5.5-36
**5.5-37
**5.5-38
**5.5-39
**5.5-40
*.5.5-41
**5.5-42
**5.5-43
**5.5-44
**5.5-45
**5.5-46
**5.5-47
**5.5-48
5.6-I
5.6-2
5.6-3
5.6-4
5.6-5
5.6-6
5.6-7
5.6-8MostRecent
DateChanged
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
8/I_72
8/Ir72
8/Iq2
8/1172
8/I172
8/I172
8/I172
8/1172
8/Ir72
8/Ir72
8/Ir72
8/1172
8/I/72
8/I172
8/1172
8/1172
8/Iq2
8/1172
8/Ir72
8/Ir72
8/1172
8/Ir72
8/Ir72
8/Ir72
8/I172
8/Ir72
8/I/72
8/1172
8/I&#39;72
8/I172
8/Ir72
8/Ir72
8/1172
8/I_72
8/1172
8/1172
8/1172
8/Ir72
8/Iq2
8/Ir72
8/Iq2
8/I_72
8/I172
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69PageNo.
5.6-9
5.6-10
5.6-11
5.6-12
5.6-13
5.6-14
&amp;ldquo;5.6-15
&amp;ldquo;5.6-16
5;6-17
5.6-18
5.6-19
5.6-20
5.6-21
5.6-22
*5.6-23
*5.6-24
*5.6-25
*5.6-26
*5.6-27
*&amp;lsquo;5.6-27a
*5.6-28
5.6-29
&amp;ldquo;5.6-30
*&amp;lsquo;5.6-30a
5.6-31
6I-I
*62-I
*62-2
*62-3
*63-I
*63-2
**63-3
64-I
6.5-1
6.5-2
*6.6-I
6.6-2
6.7-I
6.7-2
&amp;ldquo;6.8-I
*6.8-2
*6.8-3
*6.8-4
*68-5
*68-6
*68-7
*68-8
*68-9
*68-10
&amp;ldquo;6.8-11
*68-12
*68-13
*68-14
*68-15
*68-16
*68-17
*68-18
*68-19
*68-20
*68-21MostRecent
DateChanged
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
12/I/69
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
311171
311171
811172
811172
811172
811/72
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/1/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
xxxv(8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUS LOG
PageNo.
*6.8-22
*6.8-23
*6.8-24
*6.8-25
*6.8-26
*6.8-27
*6.8-28
*6.8-29
*6.8-30
&amp;ldquo;6.8-31
*6.8-32
*6.8-33
*6.8-34
*6.8-35
*6.8-36
*6.8-37
*6.8-38
*6.8-39
*6.8-40
&amp;ldquo;6.8-41
*6.8-42
*6.8-43
*6.8-44
*6.8-45
*6.8-46
*6.8-47
*6.8-48
*6.8-49
*6.8-50
*6.8-51
*6.8-52
*6.8-53
*6.8-54
*6.8-55
6.9-I
6.9-2
6I0-I
610-2
610-3
610-4
610-5
610-6
610-7
6.10-8
6.10-9
6.10-10
6.10-11
6.10-12
6.10-13
6.10-14
6.10-15
&amp;ldquo;6.10-16
6.10-17
6.10-18
6.11-I
6.11-2
6.11-3
6.11-4MostRecent
DateChanged
811172
811172
811172
811172
811172
811172
811172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
12/I/69
12/I/69
12/I/69
3/I/70
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
12/I/69
8/I/72
12/I/69
12/I/69PageNo.
*&amp;lsquo;6.12-I
**6.12-2
**6.12-3
**6.12-4
**6.12-5
**6.12-6
**6.12-7
**6.12- 8
**6.12-9
*&amp;lsquo;6.12-10
*&amp;lsquo;6.12-11
*&amp;lsquo;6.12-12
*&amp;lsquo;6.12-13
**6.12-14
**6.12-15
*&amp;lsquo;6.12-16
*&amp;lsquo;6.12-17
*&amp;lsquo;6.12-18
7.1-I
7.1-2
7.2-I
7.2-2
7.2-3
7.2-4
7.2-4a
7.2-5
7.2-6
7.2-7
7.2-8
72-9
72-9a
72-10
72-11
72-12
72-12a
72-I2b
72-13
7.2-14
7.2-14a
7.2-15
7.2-16
7.2-17
7.2-18
7.2-19
7.2-20
7.2-21
7.2-22
7.2-23
7.2-24
7.2-25
7.2-26
7.2-27
7.2-28
7.2-28a
7.2-29
7.2-30
7.2-31
7.2-32MostRecent
DateChanged
811172
811172
811172
8/I172
8/It72
8/Ir72
8/Ir72
8/I172
8/I172
8/I172
8/I172
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
8/I/72
3/I/71
3/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71No.
7.2-33
7.2-34
7.2-35
7.2-36
7.2-37
7.2-38
7,2-39
7.2-40
7.2-41
7.2-42
7.2-43
7.2-44
7.2-45
7.2-46
7.2-47
7.2-48
7.2-49
7.2-50
7.2-51
7.2-52
7.2-53
7.2-54
7.2-55
7.2-56
7.2-57
7.2-58
7.2-59
7.2-60
7.2-61
7.2-62
7.2-63
7.2-64
7.2-65
7.2-66
7.2-67
7.2-68
7.2-69
7.2-70
7.2-71
7.2-72
7.2-73
7.2-74
7.2-75
7.2-76
7.2-77
7.2-78
7.2-79
7.2-80
72-81
72-82
72-83
72-84
72-85
72-86
72-87
7.2-88
7.2-89
7.2-90MostRecent
DateChanged
6/I/71
6/1171
611/71
611171
611/71
6/I/71
611171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
xxxvi (8/I/72)&lt;/p&gt;
&lt;p&gt;PAGESTATUSLOG
PageNo.
7.2-91
7.2-92
7.2-93
7.2-94
7.2-95
7.2-96
7.2-97
7.2-98
7.2-99
7.2-I00
7.2-I01
7.2-102
7.2-I03
7.2-I04
7.2-I05
7.2-I06
7.2-I07
7.2-I08
7.2-109
7.2-II0
7.2-III
7.2-I12
7.2-I13
7.2-I14
7.2-I15
7.2-I16
7.2-I17
7.2-I18
7.2-I19
7.2-120
7.2-121
7.2-122
7.2-123
7.2-124
7.2-125
7.2-126
7.2-127
7.2-128
7.2-129
7.2-I30
7.2-131
7.2-132
7.2-133
7.2-134
7.2-135
7.2-136
7.2-137
7.2-138
7.2-139
7.2-140
7.2-141
7.2-142
7.2-143
7.2-144
7.2-145
7.2-146
7.2-147
7.2-148
7.2-149Most Recent
DateChanged
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
611171
6/1171
611171
611171
6/I171
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71PageNo.
7.2-150
7.2-151
7.2-152
7.2-153
7.2-154
7.2-155
7.2-156
7.2-157
7.2-158
7.2-159
7.2-160
7.2-161
7.2-162
7.2-163
7.2-164
7.2-165
7.2-166
7.2-167
7.2-168
7.2-169
7.2-170
7.2-171
7.2-172
7.2-173
7.2-174
7.2-175
7.2-176
7.2-177
7.2-178
7.2-179
7.2-180
7.2-181
7.2-182
7.2-183
7.2-184
7.2-185
7.2-186
7.2-187
7.2-188
7.2-189
7.2-190
7.2-191
7.2-192
7.2-193
7.2-194
7.2-195
7.2-196
7.2-197
7.2-198
7.2-199
7.2-200
7.2-201
72-202
72-203
72-204
72-205
72-206
73-I
73-2Most Recent
Date Changed
611171
611171
611171
6/I171
6/I171
611/71
611/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/I/71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/Ir71
6/I171
6/I171
6/I_71
3/I/71
3/I/71PageNo.
7.3-3
73-4
73-5
73-6
73-7
73-8
73-9
73-10
73-11
73-12
73-13
73-14
73-15
73-16
73-17
73-18
73-19
73-20
73-21
73-22
73-23
73-24
73-25
73-26
73-27
73-28
73-29
73-30
73-31
73-32
73-33
73-34Most Recent
DateChanged
311171
311171
311171
3/I171
3/I171
3/I/71
3/I/71
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
311171
xxxvii (8/I/72)&lt;/p&gt;
&lt;p&gt;PROGRAMOVERVIEW
I.IPROGRAM OVERVIEW
l.l.l Objectives
TheNASTRAN program hasbeendesigned according totwoclasses ofcriteria. Thefirst class
relates tofunctional requirements forthesolution ofanextremely widerange oflarge andcom-
plexproblems instructural analysis with highaccuracy andcomputational efficiency. These cri-
teria areachieved bydeveloping andincorporating themost advanced mathematical models andcom-
putational algorithms thathavebeenproven inpractice. Inparticular, theyareachieved by
providing suchfeatures asthebandwidth-with-active-column technique inmatrix decomposition;
packing routines totakemaximum advantage ofmatrix sparsity soastoconserve input/output time;
highly stable andefficient algorithms forthesolution ofproblems ineigenvalue analysis and
transient response; andanelegant approach tomodeling theeffects ofcontrol systems andother
nonstructural components.
Thesecond class ofcriteria relates totheoperational andorganizational aspects ofthe
program. These aspects aresomewhat divorced fromstructural analysis itself; yettheyareof
equal importance indetermining theusefulness andquality oftheprogram. Chief among these
criteria are:
I.Simplicity ofproblem input deckpreparation.
2.Minimization ofchances forhuman error inproblem preparation.
3.Minimization ofneedformanual intervention during program execution.
4.Ease ofprogram modification andextension tonewfunctional capability.
5.Ease ofprogram extension tonewcomputer configurations andoperating systems, and
generality inability tooperate efficiently under awidesetofconfiguration capabilities.
6.Capability forstepbystep problem solution, without penalty ofrepeated problem setup.
7.Capability forproblem restart following unplanned interruptions orproblem preparation
error.
8.Minimization ofsystem overhead, inthethree vital areas:
a.Diversion ofcorestorage fromfunctional useinproblem solution.
l.l-I&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P20</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_020/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3.8 XSEIIXX (Sequence Monitor -Deck Generator).
3.3.8.1 Entry Point: XSEMXX.
3.3.8.2 Purpose
Toprovide amodel from which allother XSEMi (i=link number) subroutines except XSEMI
canbemade.
Seesection 6.11, which discusses howtogenerate alink driver subroutine.
3.3-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.9 GNFIST (Generate FIST)
3.3.9.1 EntryPoint: GNFIST.
3.3.9.2 Purpose
Tosetuptheproper linkage between datablocks andthefilestheyreside oninpreparation
forexecuting thefunctional module requiring thedatablocks.
3.3.9.3 Calling Sequence
CALLGNFIST(DDN,FISTNM,M_DN_)
DBN -Datablock name(TwowordBCDarray-8characters total)
FISTNM -Datablock identification (GIN_filenumber) usedbyfunctional module
(integer).
M_DN_ &lt;em&gt;SCARrecord number offunctional module tobeexecuted (integer). M_DN&lt;/em&gt;
indicates tothecalling routine whataction wastakenbyGNFIST.
M_DNO&amp;gt;O,datablockassigned afileoritwaspurged.
M_DN_=O,fatalerrordetected.
M_DN_-O,datablocknotassigned afile,GNFIST called Executive Segment
FileAllocator (XSFA)
3.3.9.4 Method
Ifthedatablockispurged, GNFIST returns tothecalling routine withMODNO&amp;gt;O.A
datablockispurged ifitisaninputwhich hasnotbeengenerated oritsstatus ispurged or
DBN=O.
Ifaninputdatablockresides ontheDataPoolFileandneedstobeunpooled, GNFIST calls
thefileallocator (XSFA) tounpoGl allinputs tothemodule which reside ontheDataPoolFile
thatneedtobeunpooled. GI_FIST thenreturns tothecalling routine withM_DN_&amp;lt;O.Theother
condition underwhichXSFAiscalled isifafilehasnotbeenallocated toanon-purged output
datablockorscratch datablockneeded bythemodule.
Afileisallocated toadatablockwhenthedatablock nameappears intheFIATtable,
located innamedcommon block/XFIAT/, asunpurged. Input, output andscratch datablocks which
havebeenassigned toafileandarerequired bythefunctional module, havetheirFISTNM&amp;rsquo;s entered
3.3-12&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
intheFISTtable which islocated innamed common block /XFIST/.FISTentries arelinked to
theDBN&amp;rsquo;s intheFIATtable which inturn links thedatablock toafile. Thiscompletes the
linking offunctional module datablocks totheir files.
Output datablocks cannot reside ontheDataPoolFile, soGNFIST checks forthisandif
found, theDBNandallDBN&amp;rsquo;s equivalenced toitaredeleted fromtheDPLtable located innamed
common /XDPL/.
3.3.9.5 Design Requirements
GNFIST resides inthecore resident portion ofalink. Itdoesnotuseonencoreandthe
onlyrestriction isthattheFISTtable belarge enough toholdallFISTNM&amp;rsquo;s foramodule.
Thenamed common blocks needed byGNFIST arelisted below, along with typeofaccess
required (i.e. fetch and/or store data) andreasons foruse.
I.C_MM_N/XFIST/ -Store.
Usedtostore FISTNM&amp;rsquo;s andlinkFISTNM&amp;rsquo;s with their corresponding DBN&amp;rsquo;s inFIAT.
2.C_MM_N/XFIAT/ -Fetch andstore.
Usedtodetermine status ofDBN&amp;rsquo;s. TheFIATtable isaltered ifunpooling ofinput
datablocks isnecessary.
3.C_MM_N/XDPL/ -Fetch andstore.
Used todetermine status ofinput DBN&amp;rsquo;s andisaltered ifoutnut DBN&amp;rsquo;s appear init.
4.C_MM_N/_SCENT/ -Fetch.
Contains BSCAR entry forfunctional module tobeexecuted. Usedtoalter FIATwhen
input DBN&amp;rsquo;s needtobeunpooled.
3.3.9.6 Diagnostic Messages
GNFIST detects overflow inFISTtable andsends message toterminate job.
3.3-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.10 XEOT (End-of-Tape).
3.3.10.1 Entry Point: XE_T.
3.3.10.2 Purpose
Toprepare andsend tothecomputer operator, messages instructing himwhat todowhen
end-of-tape hasbeen encountered ontheOldProblem Tape (_PTP) ortheNewProblem Tape (NPTP).
3.3.10.3 Calling Sequence
CALL XE_T(ID,_REEL,NREEL,BUF)
ID-BCDnameNPTPor_PTP
_REEL-Number ofreeltobedismounted -integer.
NREEL-Number ofnewreeltobemounted -integer.
BUF-GIN_buffer usedbyNPTPorOPTP.
3.3.10.4 Method
Acheck ismadetoseeiftapehasmulti-reel capability. Ifnot,afatalmessage isissued
andjobisterminated. Theoperator messages aregenerated andissued andtheoldreelisre-
woundandunloaded. Acheck ismadetoseeifcorrect newreelhasbeenmounted andthena
return ismadetocallinp program.
3.3.10.5 Design Requirements
XE_Tmustbeaccessible toroutines XGPIandXCHK.
3.3.10.6 Diagnostic Messages
Amessage isissued iftapedoesnothavemulti-reel capability.
3.3-14&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.11 SSWTCH (Sense Switches)
3.3.11.I Entry Point: SSWTCH.
3.3.11.2 Purpose
Toindicate tothecalling routine whether ornotaspecified sense switch isset.
3.3.11.3 Calling Sequence
CALL SSWTCH(SS,F)
SS-Sense switch number -integer, l&amp;lt;SS&amp;lt;31.
F-Flag indicating status ofSS
F=0ifSSnoton
F=lifSSison
3.3.11.4 Method
Named common block /SYSTEM/contains theword which contains thesense switch settings.
Bitloftheword corresponds tosense switch l,bit2corresponds tosense switch 2,etc. If
thebitcorresponding toSSisonthen F=l,ifnotthen F=O.
Note that sense switches aresetbytheuser viatheDIAG card intheExecutive Control Deck
andnotthrough physical sense switches setbythecomputer operator.
Thefollowing sense switches arecurrently inuse:
Switch
l Dump core when subroutine DUMP orPDUIIP iscalled. This
will cause acore dump onanynonpreface fatal error.
2 Print theFIAT after each call toXSFA.
3 Print theData Pool Dictionary after each call toXSFA.
4 Print the_SCAR attheendofXGPI.
5 Type amessaQe tosignify thebeginning ofeach module
ontheoperator&amp;rsquo;s console.
Type amessage tosignify theending ofeach r_odule on
theoperator&amp;rsquo;s console.
Print eigenvalue extraction diagnostics forreal inverse
power andreal andcomplex determinant methods.
3.3-15 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
Switch
8
9
I0
II
12
13
14
15
16
17
i8
19
20
21
22
23-26
27
28
29
30
31Printmatrix trailers asthematrices aregenerated.
Notused.
Usealternate nonlinear loading inTRD.(Replace
{Nn+I}by_{Nn+1+Nn+Nn_l})
Printallactive rowandcolumn possibilities forthe
decomposition algorithm.
Printeigenvalue extraction diagnostics forcomplex
inverse power.
Printopencorelength.
PrinttheRigidFormat (!_ASTRAN SOURCE PROGRAM COHPILATION)
forallnon-Restart runs.
TraceGIN99PEN/CL9SE operations onCDC6000series.
Tracerealinverse powereigenvalue extraction operations.
PunchtheDMAPsequence thatiscompiled.
NoLused.
PrintdataforMPYADmethod selection.
Generate de-bug printout (ForNASTRAN programmers who
include CALLBUGintheirsubroutines).
PrintGP4setdefinition.
PrintGP4degree offreedom definition.
Notused.
InputFileProcessor (IFP)tabledump.
Punchoutthelinkspecification table-deckXBSBD.
Process linkspecification tableupdate deck.
Punchoutalters toXSEMidecks.
Printlinkspecification table.
Forafurther explanation ofswitches 28-31seeSection 6.11intheProgran_er&amp;rsquo;s Manual.
3.3.11.5 Design Requirements
SSWTQI resides inthecoreresident portion ofalink.
3.3-15a (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.12 C_NMSG (Console Message Writer).
3.3.12.1 EntryPoint: C_NMSG
3.3.12.2 Purpose
Writes thecurrent timeandaNASTRAN system message ontothesystem output device and
(ifthecomputer configuration permits) ontotheon-line operator&amp;rsquo;s console device.
3.3.12.3 Calling Sequence
CALLC_NMSG(MSG,CNT,YN)
MSG-Array namecontaining message.
CNT-Number of4-character words inmessage (integer).
YN-1=yes,0=no.Printon-line device ifyesandavailable.
3.3.12.4 Method
Acomputer real-time and/or jobclock isinterrogated. Thenumber ofmessage words
indicated issenttothesystem output device (usually printer) alongwiththeclockreading(s).
Ifthecomputer configuration permits andtheyes/no switch issetyes,thesameclock reading(s)
andmessage issenttotheoperator&amp;rsquo;s console device (usually typewriter).
3.3.12.5 Design Requirements
Onlytheleft-most fourcharacters fromeachcomputer wordareextracted andsenttothe
output device(s).
3.3-16&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.13 TTLPGE (Title PageWriter).
3.3.13.l Entry Point: TTLPGE
3.3.13.2 Purpose
Toprint onthesystem output filetitle pageinformation asfollows:
â€¢theNASTRAN symbol
â€¢themachine typeandmodel
â€¢thesystem generation date
â€¢thelevel identification
â€¢major level nun_er (corresponds tothebasic archive Source Library)
â€¢minor level nunl)er (corresponds totheobject library foramachine type)
â€¢local level nunV_er
â€¢variations ofalocal level
â€¢theRigid Format series identification, including modifications, ifany
3.3.13.3 Calling Sequence
CALLTTLPGE (K)
3.3.13.4 Method
TTLPGE iscalled asthefirst executable statement inthePreface driver SEMINT following
transliteration (IBM360,370only) andreading oftheNASTRAN card(ifany).
Thevariable Kisstored asalocal variable insubroutine SEMINT andmaybesetatexecution
timebytheuserontheNASTRAN datacardby
NASTRAN TITLE_PT =k
where thedefault value forkis1asdefined byaDATAstatement insubroutine SEMINT. The
action taken byTTLPGE depends ontheinteger option parameter K(whose value isk)asshown
below.
k TTLPGE action
&amp;lt;0
=0
l
2
3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3Print one(I)copyofanabbreviated title page
Supress anytitle pageprintout
Print one(1)copy ofthefulltitle page
Print two(2)copies ofthefulltitle page
Print asingle copyofalocally annotated title page
Supress anytitle pageprintout
3.3-17(8/1/72)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Whenever changes areincorporated intoNASTRAN, theTTLPGE routine should beupdated to
reflect thesechanges. Thisisparticularly important whenofficial updates aremadesinceruns
mayonlybeidentifiable bytheinformation contained inthisprintout. Thebasic identification
ofagivenversion ofNASTRAN iscalled theLevelnumber, acodeoftheform
i.j.k
where iisthecurrent major levelnumber, jistheminorlevelnumber andkislocallevel
number.
Themajor levelcorresponds toacomplete recompilation oftheentire system oneachmachine
fromasingle archive source library maintained forallmachines. Itisthrough thismechanism
thatthemachine-independent nature oftheNASTRAN codeisguaranteed. Majorlevels ofNASTRAN
willprobably onlybeissued atintervals ofonceayearorlonger duetotheexpense involved.
Minorlevels correspond tochanges thataremadeononegiventypeofmachine, saythe
CDC6000machines. These changes arereflected intheobject library forthegivenmachine
class, andmaybereflected inthesource byeither alters tothebasicsource library orbyan
updated source library. Minorlevels willprobably beissued every fewmonths foreachmachine
classasalters tothebasicorprevious source library.
Locallevels arereserved forlocally madechanges andprovides amechanism forthelocal
NASTRAN system programmer tokeeptrackofseveral versions ofNASTRAN thatmayexistathis
installation. Thiswouldprobably consist ofadigitoradigit andatypedletter (e.g., Level
15.I.2A).
TheRigid Format series isdesignated byaletter. Minormodifications willbeidentified
byadigit (e.g., RigidFormat Series M.2). Itisanticipated thatnewseries ofRigidFormats
willonlybeavailable concurrently withmajor levels oftheprogram.
3.3-18 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTIrIE DESCRIPTIONS
3.3.14SEr_TR_I (Transliterator) (IBM36_-370 only)
3.3.14.1 EntryPoint: SE_TRN
3.3.14.2 Purpose
Toreadthesystem inputstream andconvert EBCDIC characters toBCD.
3.3.14.3 Calling Sequence
CALLSEr._RN (KIN,K_UT)
3.3.14.4 Method
AnI/_activity isdoneusingF_RTRAN. Oneeighty (80)column cardimageatatimeisread
fromF_RTRAN unitKIN,transliterated, andwritten outonF_RTRAN unitK_UT. F_RTRAN unitK_UT
isrewound before writing andbefore returning. F_RTRAN unitKINisnotrewound before reading and
isnotmanipulated further onceanend-of-file condition isdetected. AnyEBCDIC characters other
thanthestandard NASTRAN setdefined onpage2.1-2 (6/I/72) oftheUser&amp;rsquo;s Manual aretransliterated
totheblankcharacter. BCDpunched characters aretransliterated intothemselves. Thus,forthe
standard character set,either BCD,EBCDIC ormixedBCDandEBCDIC maybeusedontheIBM360-370
computer systems. Itshould beemphasized thatdeckscontaining EBCDIC characters willnotrunon
theother NASTRAN computers.
3.3.14.5 Design Requirements
TheF_RTRAN unit KBUT must bedefined intheJCLandsufficient space must beallocated tohold
thetransliterated input stream. Theactual unit numbers used aredefined bythecalling program
(SEMINT) andarecurrently settoKIN=5andK_UT =I.Ifthe2314 disk facility isused forKBUT,
thespace canbeestimated by
No.CardsNo.Tracks =91
iffull track blocking isused. This isaccomplished byspecifying theDCBas
DCB =(RECFM=FB, LRECL=80, BLKSIZE=7280)
Thetransliteration iseffected byusing thecharacter read inasanindex into a256byte
table containing thedesired BCDrepresentations. Inthis way, nolook-up expense isinvolved.
3.3-1g (8/I/72)&lt;/p&gt;
&lt;p&gt;3.3.15 RETURN (Return)
3.3.15.1 EntryPoint: RETURN
3.3.15.2 Purpose:SUBROUTINE DESCRIPTIONS
Toallowinclusion ofcallstonon-existing decks.
required tousethiscapability.
3.3.15.3 Calling Sequence
CALLRETURN
3.3.15.4 Method
Theonlyexecutable statement isaRETURN tothecalling program.
3.3.15.5 Design Requirements
RETURN should belocated inLINK0orintherootsegment.
3.3.15.6 Diagnostic Messages
None.Linkage Editor datachanges are
3.3-20 (8/I172)&lt;/p&gt;
&lt;p&gt;3.4
3.4.I
3.4.1.I
3.4.1.2UTILITY SUBROUTINE DESCRIPTIONS
UTILITY SUBROUTINE DESCRIPTIONS.
MAPFNS (Machine Word Functlons).
Entry Points: LSHIFT, RSHIFT, ANDF, _RF, X_RF, C_MPLF, C_RSZ, C_RWDS.
Purpose
Toperform basic computer wordmanipulations bystandard binary digit (bit) operations.
Themanipulations areperformed over thecomplete memory wordlength fortheparticular hardware.
Also, todetermine thesizeofopencore (C_RSZ) andtheabsolute difference between locations in
core (C_R_DS).
3.4.1.3 Calling Sequence
Allmachine word functions areexecuted asF_RTRAN integer function subroutines with
integer arguments.
3.4.1.4 Method
Themethod employed within eachfunction wiiibedescribed following theseparate _unction
examples.
3.4.1.5 Entries
K:LSHIFT (I,N)
Theentire bitstructure ofwordIisshifted leftNplacesandtheresulting wordreplaces
wordK.WordIisunchanged. High-order bitsshifted outarelost.Zerosaresupplied to
vacated low-order positions. Theshiftislogical; nospecial provision ismadeforthesign
position.
K=RSNIFT (I,N)
Theentire bitstructure ofword Iisshifted right Nplaces andtheresulting word reolaces
word K.Word Iisunchanged. Low-order bitsshifted outarelost. Zeros aresupplied to
vacated high-order positions. Theshift islogical; nosnecial orovisionismade forthesign
position.
K=ANDF (I,J)
Alogical product ofthebitswithin wordIandwordJisformed andstored intoword K.
Words IandJareunchanged.
3.4-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
K=_RF(I,J)
Alogical sumofthebits within word Iandword Jisformed andstored into word K.
Words IandJareunchanged.
K=X_RF (I,J)
Themodulo-two sum(exclusive or)ofthebits within word Iandword Jisformed and
stored into word K.Words IandJareunchanged.
K=COMPLF (1)
Theones complement ofthebits within word Iisformed andstored into word K.Word I
isunchanged.
K:C_RSZ (l,J)
Thesizeofopencoreiscomputed andstored inlocation Kthrough thisfunction. Location
Iisnormally theaddress ofalabeled common celldefining thebeginning ofaparticular open
corearea. Location Jisnormally theaddress ofblankcommon (usually thought tobetheendof
aparticular opencorearea). Oncomputer memory configurations whereblankcommon doesnot
define theendofopencore, C_RSZignores location Jandsubstitutes acorrect endvalue. The
arguments IandJmaybeinterchanged without affecting results.
K=C_RWDS (l,J)
Theabsolute difference plus1between theaddresses oflocations IandJiscomnuted and
stored intowordK.Words IandJareunchanged.
3.4.1.6 Design Requirements
I_APFNS iswritten inassembly language.
3.4-2&lt;/p&gt;
&lt;p&gt;3.4.2
3.4.2.1
3.4.2.2UTILITY SUBROUTINE DESCRIPTIONS
_PEN (Initiate Activit XonaFile).
Entry Point: BPEN.
Purpose
Toinitiate activity ontherequested file.
3.4.2.3 Calling Sequence
CALL_PEN($n,NAME,BUFF,&lt;em&gt;P)
n-F_RTRAN statement
intheFIST(i.e.thedata
NAME-GIN_filename
BUFF-Anarraywhose
will beused byGIN&lt;/em&gt; while
D,open file toI.open file to
_P=_i_open file to
t3â€¢open file to
3.4.2.4 Methodnumber defining thereturn tobetaken intheevent NAME isnot
block ispurged).
ofthedata block which istoberead orwritten(see section 1.6.4.1).
dimension equals thecontents ofthefirst word of/SYSTFM/which
thefile isoben.
read with rewind
write with rewind
read without rewind
write without rewind
_PENstores parameters in/GIN_X/ andthencallsXGINBwhichsearches theFISTforaname
matchandpicksupfromtheFIATtheunittowhichthedatablockisassigned. Theposition of
thebuffer isdetermined relative to/XNSTRN/.
ThisindexissavedintheBUFADD arrayin/GIN_X/. BUFADD issearched todetermine ifany
other buffer overlaps thebuffer currently assigned. GINOiscalled toinitiate activity forthe
file.
3.4.2.5 Design Requirements
Theaddress ofthebuffer assigned mustbegreater thantheaddress of/XNSTRN/.
3.4.2.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued by_PEN:
3006
3012
3O4O
3.4-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.3 WRITE (Write DatainaLogical Record).
3.4.3.1 EntryPoint: WRITE.
3.4.3.2 Purpose
Towrite alogical record, orportion ofalogical record, ontherequested file.
3.4.3.3 Calling Sequence
CALLWRITE(NAME,BL_CK,N,E_R)
NAME-GINBfilenameofthedatablockwhich istobewritten (seesection 1.6.4.1).
BL_CK- Anarrayofdimension _Ncontaining thedatawords tobewritten.
N-Thenumber ofwordstobewritten -integer -input.
O,theNwordstobewritten bythiscalldonotendthelogical record, i.e.
_subsequent WRITEcallswillprovide additional datatobewritten inthe
E_R=_Icurrent logical record.
\I,theNwordstobewritten bythiscallendthelogical record.
3.4.3.4 Method
_JRITE stores parameters in/GIN_X/ andthencalls XGIN_which inturncalls GINOtonerform
theactual processina ofthecall.
3.4-4&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.4 CLOSE (Terminate Activity onaFile).
3.4.4.1 Entry Point: CLOSE.
3.4.4.2 Purpose
Toterminate activity ontherequested file.
3.4.4.3 Calling Sequence
CALLCL_SE(NAME,&lt;em&gt;P)
NAME-GIN_filenameofthedatablock tobeclosed (seesection 1.6.4.1).
l,iffilewasopened towrite, write end-of-file andrewind.
Iffilewasopened toread, rewind only.
2,close fileatcurrent file position (noend-of-file, norewind).
&lt;em&gt;P
3,iffilewasopened towrite, write end-of-file andposition fileinfront of
end-of-file mark.
\ Iffilewasopened toread, sameas_P=2.
Iftherequested fileisnotintheFISTorisnotcurrently open, anormal return isgiven
andnooperation takes place.
Ifthefilewasopened foroutput andthelastlogical record hasnotbeenwritten, itis
written prior tohonoring the_Prequest.
Thebuffer assigned when thefilewasopened isreleased andisavailable totheuseron
return.
3.4.4.4 Method
CLOSE stores parameters in/GIN_X/andthencalls XGIN&lt;/em&gt;. IfXGIN&lt;/em&gt; returns indicating the
file isnotintheFISTornotopen, animmediate return isgiven totheuser. Otherwise XGIN_
calls GIN_ toprocess thecall.
3.4-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.5 READ (Read Data From aLogical Record).
3.4.5.1 Entry Point: READ.
3.4.5.2 Purpose
Toread thecontents ofalogical record, orportion ofalooical record, from therequested
file.
3.4.5.3 Calling
CALLREAD($n_
n_Sequence
,$n2,NAME,BLBCK,N,EBR,M)
F_RTRAN statement number defining thereturn tobetaken intheevent anend-of-
file isencountered bythis READ operation.
n2 F_RTRAN statement number defining thereturn tobetaken attheendoftheREAD
operation whenever theend-of-logical-record isencountered prior totransmittinq
therequested number ofdata words.
NAME -GIN_ file name ofthedata block which istoberead (see section 1.6.4.1).
BL_CK-Anarrayofdimension _N,wherethewordsreadwillbestored.
N&amp;gt;O:Thenumber ofwords tobereadandstored atBL@CK -integer -input.
N-_N(O:Thenumber ofwords tobeskipped, i.e.,readbutnotstored at_L_CK.
!
_Integer -inout.
O,subsequent callstoREADforthecurrent logical record areexDected.
EOR _I,thecurrent callisthelastcallforthecurrent logical record. Thefile
l
_willbepositioned tothebeginning ofthenextloqical record before returning.
M -Ifreturn ton2isgiven, thenumber ofwords actually readisstored inM.
Innoothercasearethecontents ofMchanged.
_Jhenever return ton2isgiven, thefileispositioned tothebeginning ofthenextlogical
record regardless ofthesetting ofE_R.
Areturn ton_ispossible onlywhenacalltoREADisgivenwhenthefileispositioned at
thebeginning ofalogical record.
3.4-6&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.5.4 Method
READstores parameters in/GIN@X/andthencalls XGIN_ which inturncalls GIN@ toperform
theactual processing ofthecall.
3.4-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.6 F_JDREC IForward SpaceOneLogical Record).
3.4.6.1 EntryPoint: FWDREC.
3.4.6.2 Purpose
Toposition therequested fileforward onelogical record.
3.4.6.3 Calling Sequence
CALLFWDREC($n,NAME)
n-F_RTRAN statement number defining thereturn tobetakenintheeventanend-of-file
isencountered.
NAME-GIN_filenameofdatablocktobepositioned forward (seesection 1.6.4.1).
Thiscallwillalways position thefiletothebeginning ofthenextlogical record unless
anend-of-file isencountered.
3.4.6.4 Method
FWDREC stores parameters in/GINBX/ andthencalls XGIN_which inturncallsGIN_toprocess
thecall.
3.4-8&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.7 BCKREC (Backspace OneLogical Record).
3.4.7.1 Entry Point: BCKREC.
3.4.7.2 Purpose
Toposition therequested file backward onelogical record.
3.4.7.3 Calling Sequence
CALLBCKREC (NAME)
NAME-GIN_filenameofdatablock tobepositioned backward (seesection 1.6.4.1).
Ifthefileispositioned inthemiddle ofalogical record, thefileisrepositioned to
thebeginning ofthatrecord. Otherwise, thefileispositioned tothebeginning oftheprevious
logical record.
Ifthefileispositioned atthebeginning offile, nooperation occurs andanormal return
isgiven.
3.4.7.4 Method
BCKREC stores parameters in/GIN_X/andthencalls XGINB which inturncalls _I_to
process thecall.
3.4-9&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P20</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_020/</guid>
      <description>
        
        
        &lt;p&gt;EXECUTIVESUBROUTINE DESCRIPTIONS
3.3.8 XSEIIXX (Sequence Monitor -Deck Generator).
3.3.8.1 Entry Point: XSEMXX.
3.3.8.2 Purpose
Toprovide amodel from which allother XSEMi (i=link number) subroutines except XSEMI
canbemade.
Seesection 6.11, which discusses howtogenerate alink driver subroutine.
3.3-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.9 GNFIST (Generate FIST)
3.3.9.1 EntryPoint: GNFIST.
3.3.9.2 Purpose
Tosetuptheproper linkage between datablocks andthefilestheyreside oninpreparation
forexecuting thefunctional module requiring thedatablocks.
3.3.9.3 Calling Sequence
CALLGNFIST(DDN,FISTNM,M_DN_)
DBN -Datablock name(TwowordBCDarray-8characters total)
FISTNM -Datablock identification (GIN_filenumber) usedbyfunctional module
(integer).
M_DN_ &lt;em&gt;SCARrecord number offunctional module tobeexecuted (integer). M_DN&lt;/em&gt;
indicates tothecalling routine whataction wastakenbyGNFIST.
M_DNO&amp;gt;O,datablockassigned afileoritwaspurged.
M_DN_=O,fatalerrordetected.
M_DN_-O,datablocknotassigned afile,GNFIST called Executive Segment
FileAllocator (XSFA)
3.3.9.4 Method
Ifthedatablockispurged, GNFIST returns tothecalling routine withMODNO&amp;gt;O.A
datablockispurged ifitisaninputwhich hasnotbeengenerated oritsstatus ispurged or
DBN=O.
Ifaninputdatablockresides ontheDataPoolFileandneedstobeunpooled, GNFIST calls
thefileallocator (XSFA) tounpoGl allinputs tothemodule which reside ontheDataPoolFile
thatneedtobeunpooled. GI_FIST thenreturns tothecalling routine withM_DN_&amp;lt;O.Theother
condition underwhichXSFAiscalled isifafilehasnotbeenallocated toanon-purged output
datablockorscratch datablockneeded bythemodule.
Afileisallocated toadatablockwhenthedatablock nameappears intheFIATtable,
located innamedcommon block/XFIAT/, asunpurged. Input, output andscratch datablocks which
havebeenassigned toafileandarerequired bythefunctional module, havetheirFISTNM&amp;rsquo;s entered
3.3-12&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
intheFISTtable which islocated innamed common block /XFIST/.FISTentries arelinked to
theDBN&amp;rsquo;s intheFIATtable which inturn links thedatablock toafile. Thiscompletes the
linking offunctional module datablocks totheir files.
Output datablocks cannot reside ontheDataPoolFile, soGNFIST checks forthisandif
found, theDBNandallDBN&amp;rsquo;s equivalenced toitaredeleted fromtheDPLtable located innamed
common /XDPL/.
3.3.9.5 Design Requirements
GNFIST resides inthecore resident portion ofalink. Itdoesnotuseonencoreandthe
onlyrestriction isthattheFISTtable belarge enough toholdallFISTNM&amp;rsquo;s foramodule.
Thenamed common blocks needed byGNFIST arelisted below, along with typeofaccess
required (i.e. fetch and/or store data) andreasons foruse.
I.C_MM_N/XFIST/ -Store.
Usedtostore FISTNM&amp;rsquo;s andlinkFISTNM&amp;rsquo;s with their corresponding DBN&amp;rsquo;s inFIAT.
2.C_MM_N/XFIAT/ -Fetch andstore.
Usedtodetermine status ofDBN&amp;rsquo;s. TheFIATtable isaltered ifunpooling ofinput
datablocks isnecessary.
3.C_MM_N/XDPL/ -Fetch andstore.
Used todetermine status ofinput DBN&amp;rsquo;s andisaltered ifoutnut DBN&amp;rsquo;s appear init.
4.C_MM_N/_SCENT/ -Fetch.
Contains BSCAR entry forfunctional module tobeexecuted. Usedtoalter FIATwhen
input DBN&amp;rsquo;s needtobeunpooled.
3.3.9.6 Diagnostic Messages
GNFIST detects overflow inFISTtable andsends message toterminate job.
3.3-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.10 XEOT (End-of-Tape).
3.3.10.1 Entry Point: XE_T.
3.3.10.2 Purpose
Toprepare andsend tothecomputer operator, messages instructing himwhat todowhen
end-of-tape hasbeen encountered ontheOldProblem Tape (_PTP) ortheNewProblem Tape (NPTP).
3.3.10.3 Calling Sequence
CALL XE_T(ID,_REEL,NREEL,BUF)
ID-BCDnameNPTPor_PTP
_REEL-Number ofreeltobedismounted -integer.
NREEL-Number ofnewreeltobemounted -integer.
BUF-GIN_buffer usedbyNPTPorOPTP.
3.3.10.4 Method
Acheck ismadetoseeiftapehasmulti-reel capability. Ifnot,afatalmessage isissued
andjobisterminated. Theoperator messages aregenerated andissued andtheoldreelisre-
woundandunloaded. Acheck ismadetoseeifcorrect newreelhasbeenmounted andthena
return ismadetocallinp program.
3.3.10.5 Design Requirements
XE_Tmustbeaccessible toroutines XGPIandXCHK.
3.3.10.6 Diagnostic Messages
Amessage isissued iftapedoesnothavemulti-reel capability.
3.3-14&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.11 SSWTCH (Sense Switches)
3.3.11.I Entry Point: SSWTCH.
3.3.11.2 Purpose
Toindicate tothecalling routine whether ornotaspecified sense switch isset.
3.3.11.3 Calling Sequence
CALL SSWTCH(SS,F)
SS-Sense switch number -integer, l&amp;lt;SS&amp;lt;31.
F-Flag indicating status ofSS
F=0ifSSnoton
F=lifSSison
3.3.11.4 Method
Named common block /SYSTEM/contains theword which contains thesense switch settings.
Bitloftheword corresponds tosense switch l,bit2corresponds tosense switch 2,etc. If
thebitcorresponding toSSisonthen F=l,ifnotthen F=O.
Note that sense switches aresetbytheuser viatheDIAG card intheExecutive Control Deck
andnotthrough physical sense switches setbythecomputer operator.
Thefollowing sense switches arecurrently inuse:
Switch
l Dump core when subroutine DUMP orPDUIIP iscalled. This
will cause acore dump onanynonpreface fatal error.
2 Print theFIAT after each call toXSFA.
3 Print theData Pool Dictionary after each call toXSFA.
4 Print the_SCAR attheendofXGPI.
5 Type amessaQe tosignify thebeginning ofeach module
ontheoperator&amp;rsquo;s console.
Type amessage tosignify theending ofeach r_odule on
theoperator&amp;rsquo;s console.
Print eigenvalue extraction diagnostics forreal inverse
power andreal andcomplex determinant methods.
3.3-15 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
Switch
8
9
I0
II
12
13
14
15
16
17
i8
19
20
21
22
23-26
27
28
29
30
31Printmatrix trailers asthematrices aregenerated.
Notused.
Usealternate nonlinear loading inTRD.(Replace
{Nn+I}by_{Nn+1+Nn+Nn_l})
Printallactive rowandcolumn possibilities forthe
decomposition algorithm.
Printeigenvalue extraction diagnostics forcomplex
inverse power.
Printopencorelength.
PrinttheRigidFormat (!_ASTRAN SOURCE PROGRAM COHPILATION)
forallnon-Restart runs.
TraceGIN99PEN/CL9SE operations onCDC6000series.
Tracerealinverse powereigenvalue extraction operations.
PunchtheDMAPsequence thatiscompiled.
NoLused.
PrintdataforMPYADmethod selection.
Generate de-bug printout (ForNASTRAN programmers who
include CALLBUGintheirsubroutines).
PrintGP4setdefinition.
PrintGP4degree offreedom definition.
Notused.
InputFileProcessor (IFP)tabledump.
Punchoutthelinkspecification table-deckXBSBD.
Process linkspecification tableupdate deck.
Punchoutalters toXSEMidecks.
Printlinkspecification table.
Forafurther explanation ofswitches 28-31seeSection 6.11intheProgran_er&amp;rsquo;s Manual.
3.3.11.5 Design Requirements
SSWTQI resides inthecoreresident portion ofalink.
3.3-15a (8/I/72)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.3.12 C_NMSG (Console Message Writer).
3.3.12.1 EntryPoint: C_NMSG
3.3.12.2 Purpose
Writes thecurrent timeandaNASTRAN system message ontothesystem output device and
(ifthecomputer configuration permits) ontotheon-line operator&amp;rsquo;s console device.
3.3.12.3 Calling Sequence
CALLC_NMSG(MSG,CNT,YN)
MSG-Array namecontaining message.
CNT-Number of4-character words inmessage (integer).
YN-1=yes,0=no.Printon-line device ifyesandavailable.
3.3.12.4 Method
Acomputer real-time and/or jobclock isinterrogated. Thenumber ofmessage words
indicated issenttothesystem output device (usually printer) alongwiththeclockreading(s).
Ifthecomputer configuration permits andtheyes/no switch issetyes,thesameclock reading(s)
andmessage issenttotheoperator&amp;rsquo;s console device (usually typewriter).
3.3.12.5 Design Requirements
Onlytheleft-most fourcharacters fromeachcomputer wordareextracted andsenttothe
output device(s).
3.3-16&lt;/p&gt;
&lt;p&gt;EXECUTIVE SUBROUTINE DESCRIPTIONS
3.3.13 TTLPGE (Title PageWriter).
3.3.13.l Entry Point: TTLPGE
3.3.13.2 Purpose
Toprint onthesystem output filetitle pageinformation asfollows:
â€¢theNASTRAN symbol
â€¢themachine typeandmodel
â€¢thesystem generation date
â€¢thelevel identification
â€¢major level nun_er (corresponds tothebasic archive Source Library)
â€¢minor level nunl)er (corresponds totheobject library foramachine type)
â€¢local level nunV_er
â€¢variations ofalocal level
â€¢theRigid Format series identification, including modifications, ifany
3.3.13.3 Calling Sequence
CALLTTLPGE (K)
3.3.13.4 Method
TTLPGE iscalled asthefirst executable statement inthePreface driver SEMINT following
transliteration (IBM360,370only) andreading oftheNASTRAN card(ifany).
Thevariable Kisstored asalocal variable insubroutine SEMINT andmaybesetatexecution
timebytheuserontheNASTRAN datacardby
NASTRAN TITLE_PT =k
where thedefault value forkis1asdefined byaDATAstatement insubroutine SEMINT. The
action taken byTTLPGE depends ontheinteger option parameter K(whose value isk)asshown
below.
k TTLPGE action
&amp;lt;0
=0
l
2
3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3Print one(I)copyofanabbreviated title page
Supress anytitle pageprintout
Print one(1)copy ofthefulltitle page
Print two(2)copies ofthefulltitle page
Print asingle copyofalocally annotated title page
Supress anytitle pageprintout
3.3-17(8/1/72)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
Whenever changes areincorporated intoNASTRAN, theTTLPGE routine should beupdated to
reflect thesechanges. Thisisparticularly important whenofficial updates aremadesinceruns
mayonlybeidentifiable bytheinformation contained inthisprintout. Thebasic identification
ofagivenversion ofNASTRAN iscalled theLevelnumber, acodeoftheform
i.j.k
where iisthecurrent major levelnumber, jistheminorlevelnumber andkislocallevel
number.
Themajor levelcorresponds toacomplete recompilation oftheentire system oneachmachine
fromasingle archive source library maintained forallmachines. Itisthrough thismechanism
thatthemachine-independent nature oftheNASTRAN codeisguaranteed. Majorlevels ofNASTRAN
willprobably onlybeissued atintervals ofonceayearorlonger duetotheexpense involved.
Minorlevels correspond tochanges thataremadeononegiventypeofmachine, saythe
CDC6000machines. These changes arereflected intheobject library forthegivenmachine
class, andmaybereflected inthesource byeither alters tothebasicsource library orbyan
updated source library. Minorlevels willprobably beissued every fewmonths foreachmachine
classasalters tothebasicorprevious source library.
Locallevels arereserved forlocally madechanges andprovides amechanism forthelocal
NASTRAN system programmer tokeeptrackofseveral versions ofNASTRAN thatmayexistathis
installation. Thiswouldprobably consist ofadigitoradigit andatypedletter (e.g., Level
15.I.2A).
TheRigid Format series isdesignated byaletter. Minormodifications willbeidentified
byadigit (e.g., RigidFormat Series M.2). Itisanticipated thatnewseries ofRigidFormats
willonlybeavailable concurrently withmajor levels oftheprogram.
3.3-18 (8/I/72)&lt;/p&gt;
&lt;p&gt;EXECUTIVESUBROUTIrIE DESCRIPTIONS
3.3.14SEr_TR_I (Transliterator) (IBM36_-370 only)
3.3.14.1 EntryPoint: SE_TRN
3.3.14.2 Purpose
Toreadthesystem inputstream andconvert EBCDIC characters toBCD.
3.3.14.3 Calling Sequence
CALLSEr._RN (KIN,K_UT)
3.3.14.4 Method
AnI/_activity isdoneusingF_RTRAN. Oneeighty (80)column cardimageatatimeisread
fromF_RTRAN unitKIN,transliterated, andwritten outonF_RTRAN unitK_UT. F_RTRAN unitK_UT
isrewound before writing andbefore returning. F_RTRAN unitKINisnotrewound before reading and
isnotmanipulated further onceanend-of-file condition isdetected. AnyEBCDIC characters other
thanthestandard NASTRAN setdefined onpage2.1-2 (6/I/72) oftheUser&amp;rsquo;s Manual aretransliterated
totheblankcharacter. BCDpunched characters aretransliterated intothemselves. Thus,forthe
standard character set,either BCD,EBCDIC ormixedBCDandEBCDIC maybeusedontheIBM360-370
computer systems. Itshould beemphasized thatdeckscontaining EBCDIC characters willnotrunon
theother NASTRAN computers.
3.3.14.5 Design Requirements
TheF_RTRAN unit KBUT must bedefined intheJCLandsufficient space must beallocated tohold
thetransliterated input stream. Theactual unit numbers used aredefined bythecalling program
(SEMINT) andarecurrently settoKIN=5andK_UT =I.Ifthe2314 disk facility isused forKBUT,
thespace canbeestimated by
No.CardsNo.Tracks =91
iffull track blocking isused. This isaccomplished byspecifying theDCBas
DCB =(RECFM=FB, LRECL=80, BLKSIZE=7280)
Thetransliteration iseffected byusing thecharacter read inasanindex into a256byte
table containing thedesired BCDrepresentations. Inthis way, nolook-up expense isinvolved.
3.3-1g (8/I/72)&lt;/p&gt;
&lt;p&gt;3.3.15 RETURN (Return)
3.3.15.1 EntryPoint: RETURN
3.3.15.2 Purpose:SUBROUTINE DESCRIPTIONS
Toallowinclusion ofcallstonon-existing decks.
required tousethiscapability.
3.3.15.3 Calling Sequence
CALLRETURN
3.3.15.4 Method
Theonlyexecutable statement isaRETURN tothecalling program.
3.3.15.5 Design Requirements
RETURN should belocated inLINK0orintherootsegment.
3.3.15.6 Diagnostic Messages
None.Linkage Editor datachanges are
3.3-20 (8/I172)&lt;/p&gt;
&lt;p&gt;3.4
3.4.I
3.4.1.I
3.4.1.2UTILITY SUBROUTINE DESCRIPTIONS
UTILITY SUBROUTINE DESCRIPTIONS.
MAPFNS (Machine Word Functlons).
Entry Points: LSHIFT, RSHIFT, ANDF, _RF, X_RF, C_MPLF, C_RSZ, C_RWDS.
Purpose
Toperform basic computer wordmanipulations bystandard binary digit (bit) operations.
Themanipulations areperformed over thecomplete memory wordlength fortheparticular hardware.
Also, todetermine thesizeofopencore (C_RSZ) andtheabsolute difference between locations in
core (C_R_DS).
3.4.1.3 Calling Sequence
Allmachine word functions areexecuted asF_RTRAN integer function subroutines with
integer arguments.
3.4.1.4 Method
Themethod employed within eachfunction wiiibedescribed following theseparate _unction
examples.
3.4.1.5 Entries
K:LSHIFT (I,N)
Theentire bitstructure ofwordIisshifted leftNplacesandtheresulting wordreplaces
wordK.WordIisunchanged. High-order bitsshifted outarelost.Zerosaresupplied to
vacated low-order positions. Theshiftislogical; nospecial provision ismadeforthesign
position.
K=RSNIFT (I,N)
Theentire bitstructure ofword Iisshifted right Nplaces andtheresulting word reolaces
word K.Word Iisunchanged. Low-order bitsshifted outarelost. Zeros aresupplied to
vacated high-order positions. Theshift islogical; nosnecial orovisionismade forthesign
position.
K=ANDF (I,J)
Alogical product ofthebitswithin wordIandwordJisformed andstored intoword K.
Words IandJareunchanged.
3.4-1&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
K=_RF(I,J)
Alogical sumofthebits within word Iandword Jisformed andstored into word K.
Words IandJareunchanged.
K=X_RF (I,J)
Themodulo-two sum(exclusive or)ofthebits within word Iandword Jisformed and
stored into word K.Words IandJareunchanged.
K=COMPLF (1)
Theones complement ofthebits within word Iisformed andstored into word K.Word I
isunchanged.
K:C_RSZ (l,J)
Thesizeofopencoreiscomputed andstored inlocation Kthrough thisfunction. Location
Iisnormally theaddress ofalabeled common celldefining thebeginning ofaparticular open
corearea. Location Jisnormally theaddress ofblankcommon (usually thought tobetheendof
aparticular opencorearea). Oncomputer memory configurations whereblankcommon doesnot
define theendofopencore, C_RSZignores location Jandsubstitutes acorrect endvalue. The
arguments IandJmaybeinterchanged without affecting results.
K=C_RWDS (l,J)
Theabsolute difference plus1between theaddresses oflocations IandJiscomnuted and
stored intowordK.Words IandJareunchanged.
3.4.1.6 Design Requirements
I_APFNS iswritten inassembly language.
3.4-2&lt;/p&gt;
&lt;p&gt;3.4.2
3.4.2.1
3.4.2.2UTILITY SUBROUTINE DESCRIPTIONS
_PEN (Initiate Activit XonaFile).
Entry Point: BPEN.
Purpose
Toinitiate activity ontherequested file.
3.4.2.3 Calling Sequence
CALL_PEN($n,NAME,BUFF,&lt;em&gt;P)
n-F_RTRAN statement
intheFIST(i.e.thedata
NAME-GIN_filename
BUFF-Anarraywhose
will beused byGIN&lt;/em&gt; while
D,open file toI.open file to
_P=_i_open file to
t3â€¢open file to
3.4.2.4 Methodnumber defining thereturn tobetaken intheevent NAME isnot
block ispurged).
ofthedata block which istoberead orwritten(see section 1.6.4.1).
dimension equals thecontents ofthefirst word of/SYSTFM/which
thefile isoben.
read with rewind
write with rewind
read without rewind
write without rewind
_PENstores parameters in/GIN_X/ andthencallsXGINBwhichsearches theFISTforaname
matchandpicksupfromtheFIATtheunittowhichthedatablockisassigned. Theposition of
thebuffer isdetermined relative to/XNSTRN/.
ThisindexissavedintheBUFADD arrayin/GIN_X/. BUFADD issearched todetermine ifany
other buffer overlaps thebuffer currently assigned. GINOiscalled toinitiate activity forthe
file.
3.4.2.5 Design Requirements
Theaddress ofthebuffer assigned mustbegreater thantheaddress of/XNSTRN/.
3.4.2.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued by_PEN:
3006
3012
3O4O
3.4-3&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.3 WRITE (Write DatainaLogical Record).
3.4.3.1 EntryPoint: WRITE.
3.4.3.2 Purpose
Towrite alogical record, orportion ofalogical record, ontherequested file.
3.4.3.3 Calling Sequence
CALLWRITE(NAME,BL_CK,N,E_R)
NAME-GINBfilenameofthedatablockwhich istobewritten (seesection 1.6.4.1).
BL_CK- Anarrayofdimension _Ncontaining thedatawords tobewritten.
N-Thenumber ofwordstobewritten -integer -input.
O,theNwordstobewritten bythiscalldonotendthelogical record, i.e.
_subsequent WRITEcallswillprovide additional datatobewritten inthe
E_R=_Icurrent logical record.
\I,theNwordstobewritten bythiscallendthelogical record.
3.4.3.4 Method
_JRITE stores parameters in/GIN_X/ andthencalls XGIN_which inturncalls GINOtonerform
theactual processina ofthecall.
3.4-4&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.4 CLOSE (Terminate Activity onaFile).
3.4.4.1 Entry Point: CLOSE.
3.4.4.2 Purpose
Toterminate activity ontherequested file.
3.4.4.3 Calling Sequence
CALLCL_SE(NAME,&lt;em&gt;P)
NAME-GIN_filenameofthedatablock tobeclosed (seesection 1.6.4.1).
l,iffilewasopened towrite, write end-of-file andrewind.
Iffilewasopened toread, rewind only.
2,close fileatcurrent file position (noend-of-file, norewind).
&lt;em&gt;P
3,iffilewasopened towrite, write end-of-file andposition fileinfront of
end-of-file mark.
\ Iffilewasopened toread, sameas_P=2.
Iftherequested fileisnotintheFISTorisnotcurrently open, anormal return isgiven
andnooperation takes place.
Ifthefilewasopened foroutput andthelastlogical record hasnotbeenwritten, itis
written prior tohonoring the_Prequest.
Thebuffer assigned when thefilewasopened isreleased andisavailable totheuseron
return.
3.4.4.4 Method
CLOSE stores parameters in/GIN_X/andthencalls XGIN&lt;/em&gt;. IfXGIN&lt;/em&gt; returns indicating the
file isnotintheFISTornotopen, animmediate return isgiven totheuser. Otherwise XGIN_
calls GIN_ toprocess thecall.
3.4-5&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.5 READ (Read Data From aLogical Record).
3.4.5.1 Entry Point: READ.
3.4.5.2 Purpose
Toread thecontents ofalogical record, orportion ofalooical record, from therequested
file.
3.4.5.3 Calling
CALLREAD($n_
n_Sequence
,$n2,NAME,BLBCK,N,EBR,M)
F_RTRAN statement number defining thereturn tobetaken intheevent anend-of-
file isencountered bythis READ operation.
n2 F_RTRAN statement number defining thereturn tobetaken attheendoftheREAD
operation whenever theend-of-logical-record isencountered prior totransmittinq
therequested number ofdata words.
NAME -GIN_ file name ofthedata block which istoberead (see section 1.6.4.1).
BL_CK-Anarrayofdimension _N,wherethewordsreadwillbestored.
N&amp;gt;O:Thenumber ofwords tobereadandstored atBL@CK -integer -input.
N-_N(O:Thenumber ofwords tobeskipped, i.e.,readbutnotstored at_L_CK.
!
_Integer -inout.
O,subsequent callstoREADforthecurrent logical record areexDected.
EOR _I,thecurrent callisthelastcallforthecurrent logical record. Thefile
l
_willbepositioned tothebeginning ofthenextloqical record before returning.
M -Ifreturn ton2isgiven, thenumber ofwords actually readisstored inM.
Innoothercasearethecontents ofMchanged.
_Jhenever return ton2isgiven, thefileispositioned tothebeginning ofthenextlogical
record regardless ofthesetting ofE_R.
Areturn ton_ispossible onlywhenacalltoREADisgivenwhenthefileispositioned at
thebeginning ofalogical record.
3.4-6&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.5.4 Method
READstores parameters in/GIN@X/andthencalls XGIN_ which inturncalls GIN@ toperform
theactual processing ofthecall.
3.4-7&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.6 F_JDREC IForward SpaceOneLogical Record).
3.4.6.1 EntryPoint: FWDREC.
3.4.6.2 Purpose
Toposition therequested fileforward onelogical record.
3.4.6.3 Calling Sequence
CALLFWDREC($n,NAME)
n-F_RTRAN statement number defining thereturn tobetakenintheeventanend-of-file
isencountered.
NAME-GIN_filenameofdatablocktobepositioned forward (seesection 1.6.4.1).
Thiscallwillalways position thefiletothebeginning ofthenextlogical record unless
anend-of-file isencountered.
3.4.6.4 Method
FWDREC stores parameters in/GINBX/ andthencalls XGIN_which inturncallsGIN_toprocess
thecall.
3.4-8&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.7 BCKREC (Backspace OneLogical Record).
3.4.7.1 Entry Point: BCKREC.
3.4.7.2 Purpose
Toposition therequested file backward onelogical record.
3.4.7.3 Calling Sequence
CALLBCKREC (NAME)
NAME-GIN_filenameofdatablock tobepositioned backward (seesection 1.6.4.1).
Ifthefileispositioned inthemiddle ofalogical record, thefileisrepositioned to
thebeginning ofthatrecord. Otherwise, thefileispositioned tothebeginning oftheprevious
logical record.
Ifthefileispositioned atthebeginning offile, nooperation occurs andanormal return
isgiven.
3.4.7.4 Method
BCKREC stores parameters in/GIN_X/andthencalls XGINB which inturncalls _I_to
process thecall.
3.4-9&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P21</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_021/</guid>
      <description>
        
        
        &lt;p&gt;3.4.8SUBROUTINE DESCRIPTIONS
REWIND (Position File totheLoadPoint).
3.4.8.1 Entry Point: REWIND
3.4.8.2 Purpose
Torewind therequested file.
3.4.8.3 Calling Sequence
CALL REWIND(NAME)
NAME-GIN_ filenameofthedatablock toberewound (seesection 1.6.4.1).
Rewind given foranoutput filehastheeffect oferasing anydatawhich hasbeenwritten
onthefile.
3.4.8.4 Method
REWIND stores parameters in/GIN_X/andthencalls XGIN_ which inturncalls GIN_ to
process thecall.
3.4-I0&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.9E_F(Write anEnd-of-File).
3.4.9.1 Entry Point: E_F.
3.4.9.2 Purpose
Towrite anend-of-file ontherequested file.
3.4.9.3 Calling Sequence
CALLE_F(NAME)
NAME-GIN_file nameofdatablock onwhich end-of-file istobewritten(see section 1.6.4.1.)
Thefilemustbeopentowrite atthetimeofthiscal&amp;rsquo;l.
3.4.9.4 Method
E_Fstores parameters in/GINBX/andthencalls XGIN_ which inturncalls GIN_toprocess
thecall.
3.4-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.10 SKPFIL (SkipFilesForward orBackward).
3.4.10.1 EntryPoint: SKPFIL.
3.4.10.2 Purpose
Toposition therequested fileforward orbackward astated number offiles.
3.4.13.3 Calling Sequence
CALLSKPFIL(NAME,N)
NAME-GINOfilenameofthedatablocktoberepositioned (seesection 1.6.4.1).
N-Thenumber offilestobeskipped. N&amp;gt;0meansforward skiD, N_0means
backward skip, N=0meansnooperation -inteaer -innut.
Notes:
I.Following aforward skip,thefileispositioned atthebeqinning ofthefirst
logical record (i.e.immediately aftertheend-of-file mark).
2.Following abackward skip,thefileispositioned immediately infrontofthe
end-of-file mark(oratthebeginning-of-unit).
3.Request toskipbackward fromthebeginning-of-unit isignored andthefile
remains positioned atthebeginning-of-unit.
4.SKPFIL backward onafileopened towrite hastheeffect of&amp;quot;erasing&amp;quot; file(s)
written.
3.4.13.4 Method
SKPFIL stores parameters in/GIN_X/ andcallsXGINOwhich inturncallsGIN_tonrocess the
call.
3.4-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.11 XGINIB (GIN_ Utility Routine).
3.4.11.1 Entry Point: XGIN(B.
3.4.11.2 Purpose
Toconvert theGINBfilenametoaunitnumber, retrieve thebuffer assigned tothefile
andcallGIN_.
3.4.11.3 Calling Sequence
CALLXGIN_($nI,$n2,A,M)
C_MM_N/GIN_X/LGIN0X,FILEX,E_R,&lt;em&gt;P,ENTRY,LSTNAM,N,NAME,NTAPE,XYZ(2),UNITAB(75),BUFADD(75)
l,callfromsubroutine &lt;em&gt;PEN
E&lt;/em&gt;;TRY =
NAME -
FILEX -
LSTI_M -
NTAPE =
nl2,callfromsubroutine WRITE
3,callfromsubroutine READ
4,callfromsubroutine CLOSE
S,callfromsubroutine BCKREC
6,callfromsubroutine FWDREC
7,callfromsubroutine SKPFIL
8,callfromsubroutine E_F
n2integer -inout
9,callfromsubroutine REWIND
GIN_file nameofdatablock forwhich activity isrequested -integer -input.
Unit number towhich NAMEisassigned -integer -output.
Onentry toXGIN&lt;/em&gt;, GIN_namefromprevious call. OnexitfromXGINB,
LSTNAM =NAME-integer -input andoutput.
O,filedoes notreside ontapeinteger outDut.
l,fileresides ontape
ifENTRY =lor4,F_RTRAN statement number defining return intheeventN_MEisnotinFIST.
ifENTRY =3or6,F_RTRAN statement number defining return intheevent anend-of-file isencountered.
IfENTRY =3,F_RTRAN statement number defining end-of-logical-record prior to
completion ofrequested read.
3.4-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
A IfENTRY =2or3,Aistheuser block (from/to) which data words arewritten/read.
M IfENTRY =3andreturn ton2isgiven, M=number ofwords read -integer -output.
3.4.11.4 Method
TheFIST issearched foraname match. Iffound, thepointer toFIAT isused tonickunthe
unit number andtape flag. Ifnotfound, anon-standard return isgiven (ENTRY =lor4)ora
fatal message isgenerated. Theaddress ofthebuffer assigned tothefile isnicked uDandGINB
iscalled toexecute therequested operation.
3.4.11.5 Design Requirements
XGINO isdesigned asanintegral part oftheGIN_ collection ofroutines foruseonly by
_PEN, READ,WRITE, etc.
TheBUFADD tablemustbeinitialized tozeropriortothefirstcallinaNASTRAN execution.
3.4.11.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued byXGINO:
3010
3021
3.4-14&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12 GIN_ (General Input/Output Routine).
3.4.12.1 Entry Point: GIN_.
3.4.12.2 Purpose
Toprovide general purpose Input/Output services tohigher level routines (READ, WRITE, etc.)
inthet_STRANprogram.
3.4.12.3 Calling Sequence
CALLGIN_($nI,$n2,BUFF,A,M)
c_MM_N/GIN_/LGIN_x,FILEx,E_R,_P,ENTRY,LSTNAM,N,NAME,NTAPE,xYZ(2),UNITAB(75),BUFADD(75)
I,
2,
3,
4,
ENTRY =5,
6,
7,
8,
9,
FILEX -Unit
EOR
BP
BUFF
nl
n2
A
M_PENOperation
WRITE Operation
READOperation
CLBSE Operation
BCKREC Operation
FWNRFC _nprm_inn&amp;hellip;&amp;hellip;&amp;hellip; r&amp;hellip;&amp;hellip;..
SKPFIL Operation
E_FOperation
REWIND OperationInput, integer
nu_er offile-integer- input.
-End-of-record flag (seeREAD, WRITE) -integer -input.
-Operation code (see_PEN, CLOSE) -integer -input.
-Number ofwords towrite/read ornumber offiles toskip (seeWRITE, READ,
SKPFIL) -integer -input.
-Address ofbuffer assigned toFILEX.
-F@RTRAN statement number defining return intheevent anend-of-file isencoun-
tered (READ and_DREC operations only).
-F_RTRAN statement number defining return intheevent anend-of-record isencoun-
tered prior totransmitting therequested number ofwords (READ operations only).
-Userblock (seeWRITE, READ).
-Number ofwords actually readifend-of-record encountered andreturn ton2is
given (seeREAD) -integer -outDut.
3.4-15&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.12.4 Method
GIN_blocks alllogical records intofixedlength physical records (blocks) forwriting
andreading. Adescription oftheGIN_buffer follows:
.=j _-
4-
q-Buffer Control Word(BCW)=&amp;lsquo;READ&amp;rsquo; or&amp;rsquo;WRIT&amp;rsquo;
Current Buffer Pointer (CBP)
Current Logical Record Pointer (CLR)
Current BlockNumber (NBL@CK)
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
u
0
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
Pointer tolastlogical record (LLR)Loaical
recordLogical record
and
control words
Control word=4&lt;em&gt;K+2&amp;quot;F2+F1where
F1=1indicates continued record
F2=0indicates lastsegment ofcontinued record
ifF1=O,K=number of_1ords inlogical record
ifF2=I,K=65536&lt;/em&gt;(Block No.)+CLRofIstsegment oflogical record
Processing ofeachoperation takesplaceasfollows:
I._PEN. Ifarewind isrequested, thefileisrewound andthefirstthreewords ofthe
buffer areinitialized followed byareturn. Otherwise, thecurrent fileposition isretrieved
fromUNITAB. Ifthefileislogically between blocks, action occurs asabove. Otherwise, the
nextblockisreadandthepointer tothecurrent logical record isrestored. Iftheblockread
isnottheexpected block, arecovery attempt ismade.
3.4-16&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
2.WRITE. Forthefirst call towrite inalogical record, NBL_CK andCLRaresaved in
UNITAB. Userdataistransferred tothebuffer. Ifthebuffer isfilled, acontrol word indicat-
ingcontinuation isplaced, theblock iswritten andthelogical record iscontinued inthenext
block. After datatransfer tothebuffer, E_Ristested. Ifon,acontrol word isnlaced in
thebuffer andpointers aremoved tothebeginning ofanewlogical record.
3.READ. Ifthebuffer isempty, thenextblock onthefile isread. Ifpositioned atthe
beginning ofalogical record, atestforlogical end-of-file ismade. Ifon,return tonlis
given. Otherwise data istransferred fromthebuffer totheuserarea. Ifthelogical end-of-
record isencountered before therequested number ofwords havebeentransmitted, Missetwith
thenumber ofwords read, andreturn ton2isgiven. Ifthelogical record iscontinued tothe
nextblock, thenextblock isread. After thetransfer ofdata iscomplete, E_Ristested. If
on,pointers aremoved tothebeginning ofthenextlogical record.
4.CLOSE. Ifthefilewasopened toread, &lt;em&gt;Pistested. If_P=l,thefileisrewound.
IfOP#l,thefileisbackspaced oneblock unless thefile islogically between blocks. In
either case, thelogical position ofthefile (NBL_CK andCLR)issaved inUNITAB, BCWissetto
zeroand return ismade. Ifthefilewasopened towrite andCBP#CLR,control words forthe
last logical record arestored inthebuffer. If_P=lor3,alogical end-of-file isplaced.
Thecurrent block iswritten onthefile. If_P=I,thefileisrewound, otherwise thefile is
backspaced oneblock. Thelogical position ofthefile issaved inUNITAB, BCWissettozero
andreturn ismade.
5.BCKREC. Ifthebuffer incoreisempty, thefileisbackspaced oneblock, theblock is
readandLLRisusedtosetthepointers tothelastlogical record intheblock. Ifthefile is
logically positioned inthemiddle ofalogical record, pointers arereset tothebeginning ofa
logical record. Ifthefileispositioned atthebeginning ofalogical record, pointers are
reset tothebeginning oftheprevious logical record.
6.FWDREC. NissettozeroandE_Rtolandthecode intheREAD portion ofGIN&lt;/em&gt; isused
toposition thefileatthebeginning ofthenextlogical record.
3.4-17&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
7.SKPFIL. Ifaforward skipisrequested, logical records areskipped untilaloaical
end-of-file isencountered. Thisisrepeated untilthenumber ofrequested fileshasbeen
skipped.
Ifabackward skipisrequested, thecodeintheBCKREC portion ofGIN_isusedtoposition
backwards onelogical record. Atestforloadpointismade. Ifyes,return ismade. Otherwise,
alogical end-of-file testismade. Ifno,theBCKREC isrepeated. Ifyes,atestfornumber
ofrequested filesismade. Ifyes,return isgiven. Otherwise, theprocess isrepeated.
8.E_F.Ifthefilewasnotopened towrite, anerrormessage isgenerated. IfCBP_CLR,
control wordsareplaced to&amp;quot;close&amp;quot; thelastlogical record. Alogical end-of-file isplaced in
thebuffer. Return ismade.
9.REWIND. Thefileisrewound, pointers areresetandreturn isgiven.
3.4.i2.5 Design Requirements
I.GIN_isdesigned asanintegral partoftheGINOcollection ofroutines andistobe
called onlybyXGIN@.
2.SinceGIN@&amp;ldquo;remembers&amp;rdquo; theposition offileswhentheyareclosed, anyactivity ona
fileoutside ofGINOwilllikely befatal.
3.Because ofthepacking usedinthecontrol word, thefollowing maximums apply:
Max.number ofblocks written ononefile=2k-1where k=number ofbitsin
thecomputer word-18.
Max.buffer size=65535words.
4.Theactual contents oftheGINObuffer aremachine dependent. SeeSection 5fordetails.
3.4.12.6 Diagnostic Messages
Thefollowing system fatalmessages maybeissued byGINB:
3009
3029
3048
3049
3.4-18 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12.7 Information Message
GIN_RECOVERY ATTEMPT _NDATABL_CK EXPECTED BL_CKNB.=
N_o=
Thismessage isissuedpriortoMessage 3049.GIN_attempts toreposition thefile.
Iftheattempt fails,Message 3049isissued, otherwise theproblem proceeds.ACTUAL BL_CK
3.4-19&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.13
3.4.13.1
3.4.13.2OPNCOR(Transmit Logical Records To/From Core Storage).
Entry Points: OPNCOR,WRTCOR, RDCOR.
Purpose
Tosimulate theGINO WRITE andREAD calls providing thecapabilit_ towrite logical records
ofdata incore storage andread logical records from core storage.
3.4.13.3 Calling Sequence
CALLOPNC_R(BLOCK)
BLOCK-Anarraywhose dimension issufficient toholdalogical record tobewritten
orread.
CALLHRTCOR(BLOCK,A,N,EOR)
BLOCK- Thearraywhere thelogical record istobewritten.
A-Anarraycontaining thedatawords tobewritten.
N-Thenumber ofdatawords tobewritten fromA.
IiO,additional datawillbewritten inthelogical record viasubsequentEOR-callstoWRTCOR.
O,thecurrent callisthatlastcallforthecurrent logical record.
CALLRDCOR($n_,$n2,BLOCK,A,N,EOR,M)
n_-FORTRAN statement number defining thereturn takenintheeventanend-of-file
isencountered. Thisreturn isno__.t_tpossible fromRDCORbutisprovided inthe
calling sequence forcompatibility withREAD.
n2 FORTP_AN statement number defining thereturn taken intheeventthatthe
number ofwords requested tobereadisnotavailable intherecord. Inthis
case,Mwordsarereadandtransmitted andthevalueMisreturned totheuser.
BLOCK- Thearraywherethelogical record isstored.
A-Anarraywhere therequested datawords fromtherecord willbestored.
N-Thenumber ofdatawordstoberead.
3.4-20&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
__=O,moredataistobereadfromtherecord viasubsequent calls toRDC_R.E{_R
O,thecurrent call isthelastcall forthecurrent logical record. Any
remaining words inthelogical record aretobeskipped.
M -Thenumber ofwords actually readintheevent return ton2istaken.
Thenun_er ofwords available atBL_CK mustbeequal to(orgreater than) thenumber of
words inthelogical record ]_lustwo.
_PNC_R initializes awordpointer stored atBL_CK(1) tolandhasnoother function. The
usermaydesire toperform thisfunction himself with thestatement BL_CK(1) =I.Thisfunction
mustbeaccomplished prior tothefirst call toWRTC[_R orRDC_R foreach logical record.
3.4.13.4 Method
_PNC_R. BL_CK(1) issettooneandreturn ismade.
WRTC{&lt;em&gt;R. Thecurrent pointer stored atBL_CK(1) ispicked up. Nwords aretransmitted from
AtoBLOCK beginning atthecurrent pointer plusone. IfE_R=O,thenewpointer isstored and
return made. Otherwise, anend-of-record flagisstored &lt;em&gt;f_BL_CK following the&lt;/em&gt;&amp;rsquo;&lt;/em&gt;*,__ord
written. Thepointer (pointing totheflag) isstored andreturn made.
RDC{_R. Thecurrent pointer ispicked upfromBL_CK(1). Words aretransmitted fromBLiBCK
beginning atthecurrent pointer plusonetoAuntil (1)theend-of-record flagisencountered
inwhich case theactual nund_er ofwords transmitted isstored inMandRETURN 2isgiven, or(2)
Nwords havebeentransmitted. IfE_R=O,thenewpointer isstored andreturn ismade. If
E_R#O,BL_CK issearched until theflagisfound, thepointer (pointing immediately prior
totheflag) issaved andreturn ismade.
3.4.13.5 Design Requirements
Theflag value mustbeunique. Itsvalue =(-16777215) must notbeoneofthedatawords
written.
3.4-21&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.14
3.4.14.1 EntryPoint: G_PEN.
3.4.14.2 PurposeG_PEN (Short Form forSubroutine &lt;em&gt;PEN With Header Record Processing&lt;/em&gt;.
Toprovide ashort form (without thenon-standard return ofsubroutine _PEN)for opening a
GINO file, andtowrite atwo-word header record ifthedata block isopened asoutput with
rewind ortoskip theheader record ifthedata block isopened asinput with rewind.
3.4.14.3 Calling Sequence
CALLG_PEN(FILE,BUFFER,_PT)
where:
FILE =GINOfilename(seesection 1.6.4.1).
BUFFER =GINBbuffer location.
_PT =anyoftheopenoptions permitted bysubroutine _PEN(seesection 3.4.2).
3.4.14.4 Method
Openthefile(subroutine @PEN). If@PT=inputwithrewind (0),skipthefirstrecord of
thedatablock. If@PT=output withrewind (I),writethetwowordBCDnameofthedatablock
asreturned bysubroutine FNAME.
3.4.14.5 Design Requirements
Thedatablockmustexist(mustnotbepurged). If_PT=innutwithrewind (0),thefirst
record ofthedatablockmustbeatleasttwowordslong. Subroutines used: _PEN,READ,WRITE,
FNAME, MESAGE.
3.4.14.6 Diagnostic Messages
Ifthedatablockispurged orifanend-of-file orend-of-record condition isencountered
whenreading thedatablock, subroutine MESAGE willbecalled withinternal messaae numbers I,2,
or3,respectively (external message numbers are3001,3002and3003).
3.4-22&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.15
3.4.15.1 EntryPoint: FREAD.
3.4.15.2 PurposeFREAD (Short FormforSubroutine READ).
Toprovide ashort form (without thenon-standard returns ofsubroutine READ) ofreading a
GIN_file.
3.4.15.3 Calling Sequence
CALLFREAD(FILE,BL_CK,N,EBR)
where:
FILE=GINBfilename (seesection 1.6.4.1).
BL_CK= array intowhich Nitems aretoberead.
N=number ofitems toberead.
EOR=anyendofrecord option permittedbysubroutine READ(seesection 3.4.5).
3.4.15.4 Method
Read theNitems from FILEintoBL_CK. Ifsubroutine READreturns anend-of-file or
end-of-record condition, subroutine MESAGE iscalled with afatal error condition.
3.4.15.5 Design Requirements
Inaddition tothose imposed byREAD, there mustbeNitems remaining intherecord tobe
read. Subroutines used: READ, MESAGE.
3.4.15.6 Diagnostic Messages
Subroutine MESAGE maybecalled with internal message number 2or3(external message
numbers 3002,3003).
3.4-23&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.16 WRTTRL IWrite Trailer).
3.4.16.1 Entry Points: WRTTRL, RDTRL.
3.4.16.2 Purpose
WRTTRL will pack sixwords oftrailer information into three words andstore them intheFIAT.
RDTRL will retrieve andunpack thetrailer information.
3.4.1G.3 Calling Sequence
CALL WRTTRL(FILBLK)
FILBLK(1) -GINO file name (see section 1.6.4.1).
FILBLK(2-7) -Trailer information tobestored.
CALL RDTRL(FILBLK)
FILBLK(1) -GINO file name.
FILBLK(2-7) -Storage space fortrailer information.
3.4.16.4 Method
Theindex into theFIAT forthespecified file islocated intheFIST. Thethree packed
words arestored inorretrieved from theFIAT. Theinformation isalso stored forallfiles
equivalenced totheGIN_ file name. ForRDTRL, ifthefile ispurged, FILBLK(1) isset
negative. Ifthefile isamatrix, word 7isconverted toadensity (lO000 =I00% dense).
Matrix trailers canbedisplayed asthey arewritten byactivating DIAG 8.
3.4.16.5 Design Requirements
Each word oftrailer information isassumed tobeapositive integer less than 216-I.
Trailers maynotbewritten onGINO files I01-199.
3.4.16.6 Diagnostic Messages
Ifthefile didnotexist intheFIST when WRTTRL wascalled, fatal error 3011 occurs.
3.4-24 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTII_E DESCRIPTIONS
3.4.17 FI&amp;amp;&lt;em&gt;J_E (File Name).
3.4.17.1 Entry Point: FNAME.
3.4.17.2 Purpose
Given aGINBfilename, FNAME returns thetwoBCDwords which describe thedatablock.
3.4.17.3 Calling Sequence
CALLFNAME(FILE,NAME)
FILE-GINBfilename (seesecticn 1.6.4.1).
NAME(2) -Storage forthetwoBCDwords.
3.4.17.4 Method
TheGINBfile nameisfirst located intheFIST. Theindex intheFISTisusedtofind
theBCDdescriptors intheFIAT. Ifthefiledoesnotexist intheFIST, &amp;lsquo;&lt;/em&gt;(I_NE)_&amp;rsquo; isreturned
asthetwowords, ^indicating aBCDblank.
3.4-25&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.18
3.4.18.1 EntryPoint:CLSTAB.
3.4.18.2 PurposeCLSTAB (Close aGIN_FileandWrite aNon-zero Trailer).
Toclose aGINBfileandgenerate atable trailer bycallinn WRTTRL.
3.4.18.3 Calling Sequence
CALLCLSTAB(FILE,_PT)
where:
3.4.18.4
CALLCL_SE(FILE,OPT)
Generate thetablecontrol block, ITABCB:
ITABCB(1) =FILE
ITABCB(7) =1
D_I01=2,6
I0ITABCB(1) :0
CALL_4RTTRL (ITABC3).
3.4.18.5 Design Requirements
Sameasthoseforsubroutines CLOSEandWRTTRL.FILE=GIN_filenumber -integer -input.
OPT=anyclose option permitted bysubroutineCL_SE (seesection 3.4.4) -integer -input.
Method
Subroutines used: CLOSE, WRTTRL.
3.4-26&lt;/p&gt;
&lt;p&gt;3.4.19UTILITY SUBROUTINE DESCRIPTIONS
XRCARD(Executive Free-FieldCardData ConversionRoutine)
3.4.19.1Entry Point: XRCARD.
3.4.19.2Purpose
Tointerpret NASTRAN free-field cardinput dataasfollows:
I.Identify BCDalpha andnumeric datafields astheyareconverted andplaced in
theuser&amp;rsquo;s buffer;
2.Flagandoutput special datafield delimiters;
3.Convert BCDnumeric fields tobinary integer orbinary floating point;
4.Indicate when thedataextends beyond one72column card.
3.4.19.3Calling Sequence
&amp;ldquo;&amp;ldquo;&amp;ldquo;XRCARD_U,BU,,L,IN ) &lt;em&gt;L&lt;/em&gt; rl_T=BUF
Where:
@UTBUF
L
INBUF=Thebufferwhich istocontain theconverted cardimage.
=Thelength of_UTBUF available toXRCARD.
=Thebuffer containing thecardimage tobeconverted.
3.4.19.4Method
XRCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer wordstructures, andavariety ofdifferences inhollerith
handling imposed bydifferingFgRTRAN compilers.
XRCARD analyzes thetwenty hollerith words input through INBUF asfollows:
Data Field Delimiters
TypeA:
Thefollowing syn_ois signify theendofanalpha field ornumeric field onthecard. As
these syni_ols areencountered, theywillbeflagged andplaced intheoutputbuffer toaidthe
user inidentifying thedata.
(LEFTPAREN
/SLASH
=EQUAL
3.4-27&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
TypeB:
Thefollowing symbols areidentical tothoselisted aboveexcept thatthesymbol isnot
flagged orplaced intheoutput buffer:
,COMHA
)RIGHTPAREN
Whensuccessive typeAortyneBdelimiters areencountered, anullfieldindication (twoBCD
blankwords) isoutput. Anullfieldisgenerated foreachsuccessive delimiter. Anullfield
isalsogenerated whenatypeAortypeBdelimiter isfollowed bya$indicating theendofdata
condition.
TypeC:
Thefollowing symbol isidentical toU1eCOMrIAexcept thatnonullfieldindication isoutput
whentheyareencountered insuccession.
ABLAIIK
EndofDataIndication
Therearethreemeansbywhich end-of-data maybespecified onthecard:
-Thelastdatafieldendsincolumn 72,orisfollowed byblanks outthrough
column 72;
-$isencountered, afterwhichconments maybeincluded outtocolumn 80;or
-Continuation cardsending in(,/,=or,willresult inacontinuation flag
(0modeword).
Format ofOutput Data
Amodeword,N,isplaced intheoutput buffer todistinguish between BCDdataand
numeric data.
Numeric ModeWord: Anewmodewordisoutput eachtimeanumeric fieldisconverted
andoutput. (Allnumeric modewordsarenegative).
I/=-Iinteger data(Idataword)
=-2floating pointsinnle precision (Idataword)
=-4floating pointdouble precision (2datawords)
Nindicates thetypeofnumeric dataandwhere tolookforthenextmodeword.
3.4-28 (8/1/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
Aloha Mode Word: When processing alpha data, only onemode word isoutput forsuccessive
alpha fields, i.e., analpha mode word will never follow another aloha mode word.
N=Thenumber ofsuccessive alpha fields encountered onthecard. Each alnha #ield
consists oftwo4-character computer words (left adiusted). Thus Ncanbeused
tocompute thelocation ofthenext mode word.
Thetype Adelimiters areoutput asalpha data andare&amp;rsquo;covered&amp;rsquo; bythealoha mode &lt;em&gt;ord.
Since data output inthealpha mode must consists oftwowords atype Adelimiter will appear as:
Word l=Delimiter flag, allbits oftheword areon.
Word 2=BCDdelimiter, left adjusted, followed byBCDblanks.
End-of-Data: Theend-of-data flag isplaced last intheoutput buffer andappears inplace
ofanexpected mode word. There aretwoend-of-data flags:
-Aword with allbits off, indicating that more data istofollow onacontinuation card.
-Aword with allbits onexcept forthesign, indicating that nomore data isto_ollow
forthis card type.
Sample Input Card
CARDAA=I,B=I.O,ABC/CDEFGH GOOD DATA
OOOO0000
IZ34S57L
111111
22222222
3333333
4444444
55555555
6_665G_6
77777777
)&lt;em&gt;S;888
&lt;em&gt;99;9_S
tZ_a:j_OOg0000 OOC000;;;00000000 O00000DOOOC_OOOOOCOOO_OG
9lg_ii_13141Slii/I@&lt;em&gt;5_2!;Z23_425___Z__31_33__33S373&lt;/em&gt;&lt;/em&gt;;J_142434445_4?+&lt;/em&gt;&amp;rsquo;&lt;em&gt;&lt;em&gt;&lt;em&gt;152_3____l&lt;/em&gt;:&lt;/em&gt;?Â£3&lt;/em&gt;
111111111111111111111i 111111111111111111111111
2222222222 222222222
333&amp;quot;33333333333
444444444444444 44444
5555555555555555 55_5
666B_666B668BBBGS &lt;em&gt;6
777777777777777771 77
B8888BBBBBB8882222222222222222
3333333 33333333
44444444444444
5555553555555555
B6_BB666_BB666
777177777771777
&lt;em&gt;888888888BBBBB82222222222222222
3333333333323133
4444444444444444
5555555555555_55
6B6GBBB6GBBBB_8
7777777777777777
BBBB889888B88888
Â£,999S99999.m99999_3&lt;/em&gt;$9999999999999S99,&lt;em&gt;3999993999993998
3)&lt;em&gt;11121314151_I)1[,1@,)&lt;/em&gt;,Z]2223_4_526Y.7Z5.+3CJl&lt;/em&gt;.23)34J5&lt;/em&gt;&lt;/em&gt;:+Z]3540414)i}14(,:464l4B4D5_S&amp;rsquo;&lt;em&gt;.&lt;/em&gt;%54-&amp;ldquo;5_&amp;rsquo;&lt;em&gt;57&lt;/em&gt;-JF,&lt;em&gt;6_O00D;D;O_ODO0000000
1111111111i111i1111
2222222222222222222
3333333333333333333
4444444444444_44444
55555555S5555555555
86_6666666BB6B_6G&lt;/em&gt;
1771711111177711771
8888888888BB_B_B_
9999999999_9_S?_9
3.4-29&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P21</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_021/</guid>
      <description>
        
        
        &lt;p&gt;3.4.8SUBROUTINE DESCRIPTIONS
REWIND (Position File totheLoadPoint).
3.4.8.1 Entry Point: REWIND
3.4.8.2 Purpose
Torewind therequested file.
3.4.8.3 Calling Sequence
CALL REWIND(NAME)
NAME-GIN_ filenameofthedatablock toberewound (seesection 1.6.4.1).
Rewind given foranoutput filehastheeffect oferasing anydatawhich hasbeenwritten
onthefile.
3.4.8.4 Method
REWIND stores parameters in/GIN_X/andthencalls XGIN_ which inturncalls GIN_ to
process thecall.
3.4-I0&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.9E_F(Write anEnd-of-File).
3.4.9.1 Entry Point: E_F.
3.4.9.2 Purpose
Towrite anend-of-file ontherequested file.
3.4.9.3 Calling Sequence
CALLE_F(NAME)
NAME-GIN_file nameofdatablock onwhich end-of-file istobewritten(see section 1.6.4.1.)
Thefilemustbeopentowrite atthetimeofthiscal&amp;rsquo;l.
3.4.9.4 Method
E_Fstores parameters in/GINBX/andthencalls XGIN_ which inturncalls GIN_toprocess
thecall.
3.4-II&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.10 SKPFIL (SkipFilesForward orBackward).
3.4.10.1 EntryPoint: SKPFIL.
3.4.10.2 Purpose
Toposition therequested fileforward orbackward astated number offiles.
3.4.13.3 Calling Sequence
CALLSKPFIL(NAME,N)
NAME-GINOfilenameofthedatablocktoberepositioned (seesection 1.6.4.1).
N-Thenumber offilestobeskipped. N&amp;gt;0meansforward skiD, N_0means
backward skip, N=0meansnooperation -inteaer -innut.
Notes:
I.Following aforward skip,thefileispositioned atthebeqinning ofthefirst
logical record (i.e.immediately aftertheend-of-file mark).
2.Following abackward skip,thefileispositioned immediately infrontofthe
end-of-file mark(oratthebeginning-of-unit).
3.Request toskipbackward fromthebeginning-of-unit isignored andthefile
remains positioned atthebeginning-of-unit.
4.SKPFIL backward onafileopened towrite hastheeffect of&amp;quot;erasing&amp;quot; file(s)
written.
3.4.13.4 Method
SKPFIL stores parameters in/GIN_X/ andcallsXGINOwhich inturncallsGIN_tonrocess the
call.
3.4-12 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.11 XGINIB (GIN_ Utility Routine).
3.4.11.1 Entry Point: XGIN(B.
3.4.11.2 Purpose
Toconvert theGINBfilenametoaunitnumber, retrieve thebuffer assigned tothefile
andcallGIN_.
3.4.11.3 Calling Sequence
CALLXGIN_($nI,$n2,A,M)
C_MM_N/GIN_X/LGIN0X,FILEX,E_R,&lt;em&gt;P,ENTRY,LSTNAM,N,NAME,NTAPE,XYZ(2),UNITAB(75),BUFADD(75)
l,callfromsubroutine &lt;em&gt;PEN
E&lt;/em&gt;;TRY =
NAME -
FILEX -
LSTI_M -
NTAPE =
nl2,callfromsubroutine WRITE
3,callfromsubroutine READ
4,callfromsubroutine CLOSE
S,callfromsubroutine BCKREC
6,callfromsubroutine FWDREC
7,callfromsubroutine SKPFIL
8,callfromsubroutine E_F
n2integer -inout
9,callfromsubroutine REWIND
GIN_file nameofdatablock forwhich activity isrequested -integer -input.
Unit number towhich NAMEisassigned -integer -output.
Onentry toXGIN&lt;/em&gt;, GIN_namefromprevious call. OnexitfromXGINB,
LSTNAM =NAME-integer -input andoutput.
O,filedoes notreside ontapeinteger outDut.
l,fileresides ontape
ifENTRY =lor4,F_RTRAN statement number defining return intheeventN_MEisnotinFIST.
ifENTRY =3or6,F_RTRAN statement number defining return intheevent anend-of-file isencountered.
IfENTRY =3,F_RTRAN statement number defining end-of-logical-record prior to
completion ofrequested read.
3.4-13&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
A IfENTRY =2or3,Aistheuser block (from/to) which data words arewritten/read.
M IfENTRY =3andreturn ton2isgiven, M=number ofwords read -integer -output.
3.4.11.4 Method
TheFIST issearched foraname match. Iffound, thepointer toFIAT isused tonickunthe
unit number andtape flag. Ifnotfound, anon-standard return isgiven (ENTRY =lor4)ora
fatal message isgenerated. Theaddress ofthebuffer assigned tothefile isnicked uDandGINB
iscalled toexecute therequested operation.
3.4.11.5 Design Requirements
XGINO isdesigned asanintegral part oftheGIN_ collection ofroutines foruseonly by
_PEN, READ,WRITE, etc.
TheBUFADD tablemustbeinitialized tozeropriortothefirstcallinaNASTRAN execution.
3.4.11.6 Diagnostic Messages
Thefollowing system fatalerrors maybeissued byXGINO:
3010
3021
3.4-14&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12 GIN_ (General Input/Output Routine).
3.4.12.1 Entry Point: GIN_.
3.4.12.2 Purpose
Toprovide general purpose Input/Output services tohigher level routines (READ, WRITE, etc.)
inthet_STRANprogram.
3.4.12.3 Calling Sequence
CALLGIN_($nI,$n2,BUFF,A,M)
c_MM_N/GIN_/LGIN_x,FILEx,E_R,_P,ENTRY,LSTNAM,N,NAME,NTAPE,xYZ(2),UNITAB(75),BUFADD(75)
I,
2,
3,
4,
ENTRY =5,
6,
7,
8,
9,
FILEX -Unit
EOR
BP
BUFF
nl
n2
A
M_PENOperation
WRITE Operation
READOperation
CLBSE Operation
BCKREC Operation
FWNRFC _nprm_inn&amp;hellip;&amp;hellip;&amp;hellip; r&amp;hellip;&amp;hellip;..
SKPFIL Operation
E_FOperation
REWIND OperationInput, integer
nu_er offile-integer- input.
-End-of-record flag (seeREAD, WRITE) -integer -input.
-Operation code (see_PEN, CLOSE) -integer -input.
-Number ofwords towrite/read ornumber offiles toskip (seeWRITE, READ,
SKPFIL) -integer -input.
-Address ofbuffer assigned toFILEX.
-F@RTRAN statement number defining return intheevent anend-of-file isencoun-
tered (READ and_DREC operations only).
-F_RTRAN statement number defining return intheevent anend-of-record isencoun-
tered prior totransmitting therequested number ofwords (READ operations only).
-Userblock (seeWRITE, READ).
-Number ofwords actually readifend-of-record encountered andreturn ton2is
given (seeREAD) -integer -outDut.
3.4-15&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.12.4 Method
GIN_blocks alllogical records intofixedlength physical records (blocks) forwriting
andreading. Adescription oftheGIN_buffer follows:
.=j _-
4-
q-Buffer Control Word(BCW)=&amp;lsquo;READ&amp;rsquo; or&amp;rsquo;WRIT&amp;rsquo;
Current Buffer Pointer (CBP)
Current Logical Record Pointer (CLR)
Current BlockNumber (NBL@CK)
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
u
0
Number ofdatawords inlogical record orrecord segment
DataWords
Control Word
Pointer tolastlogical record (LLR)Loaical
recordLogical record
and
control words
Control word=4&lt;em&gt;K+2&amp;quot;F2+F1where
F1=1indicates continued record
F2=0indicates lastsegment ofcontinued record
ifF1=O,K=number of_1ords inlogical record
ifF2=I,K=65536&lt;/em&gt;(Block No.)+CLRofIstsegment oflogical record
Processing ofeachoperation takesplaceasfollows:
I._PEN. Ifarewind isrequested, thefileisrewound andthefirstthreewords ofthe
buffer areinitialized followed byareturn. Otherwise, thecurrent fileposition isretrieved
fromUNITAB. Ifthefileislogically between blocks, action occurs asabove. Otherwise, the
nextblockisreadandthepointer tothecurrent logical record isrestored. Iftheblockread
isnottheexpected block, arecovery attempt ismade.
3.4-16&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
2.WRITE. Forthefirst call towrite inalogical record, NBL_CK andCLRaresaved in
UNITAB. Userdataistransferred tothebuffer. Ifthebuffer isfilled, acontrol word indicat-
ingcontinuation isplaced, theblock iswritten andthelogical record iscontinued inthenext
block. After datatransfer tothebuffer, E_Ristested. Ifon,acontrol word isnlaced in
thebuffer andpointers aremoved tothebeginning ofanewlogical record.
3.READ. Ifthebuffer isempty, thenextblock onthefile isread. Ifpositioned atthe
beginning ofalogical record, atestforlogical end-of-file ismade. Ifon,return tonlis
given. Otherwise data istransferred fromthebuffer totheuserarea. Ifthelogical end-of-
record isencountered before therequested number ofwords havebeentransmitted, Missetwith
thenumber ofwords read, andreturn ton2isgiven. Ifthelogical record iscontinued tothe
nextblock, thenextblock isread. After thetransfer ofdata iscomplete, E_Ristested. If
on,pointers aremoved tothebeginning ofthenextlogical record.
4.CLOSE. Ifthefilewasopened toread, &lt;em&gt;Pistested. If_P=l,thefileisrewound.
IfOP#l,thefileisbackspaced oneblock unless thefile islogically between blocks. In
either case, thelogical position ofthefile (NBL_CK andCLR)issaved inUNITAB, BCWissetto
zeroand return ismade. Ifthefilewasopened towrite andCBP#CLR,control words forthe
last logical record arestored inthebuffer. If_P=lor3,alogical end-of-file isplaced.
Thecurrent block iswritten onthefile. If_P=I,thefileisrewound, otherwise thefile is
backspaced oneblock. Thelogical position ofthefile issaved inUNITAB, BCWissettozero
andreturn ismade.
5.BCKREC. Ifthebuffer incoreisempty, thefileisbackspaced oneblock, theblock is
readandLLRisusedtosetthepointers tothelastlogical record intheblock. Ifthefile is
logically positioned inthemiddle ofalogical record, pointers arereset tothebeginning ofa
logical record. Ifthefileispositioned atthebeginning ofalogical record, pointers are
reset tothebeginning oftheprevious logical record.
6.FWDREC. NissettozeroandE_Rtolandthecode intheREAD portion ofGIN&lt;/em&gt; isused
toposition thefileatthebeginning ofthenextlogical record.
3.4-17&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
7.SKPFIL. Ifaforward skipisrequested, logical records areskipped untilaloaical
end-of-file isencountered. Thisisrepeated untilthenumber ofrequested fileshasbeen
skipped.
Ifabackward skipisrequested, thecodeintheBCKREC portion ofGIN_isusedtoposition
backwards onelogical record. Atestforloadpointismade. Ifyes,return ismade. Otherwise,
alogical end-of-file testismade. Ifno,theBCKREC isrepeated. Ifyes,atestfornumber
ofrequested filesismade. Ifyes,return isgiven. Otherwise, theprocess isrepeated.
8.E_F.Ifthefilewasnotopened towrite, anerrormessage isgenerated. IfCBP_CLR,
control wordsareplaced to&amp;quot;close&amp;quot; thelastlogical record. Alogical end-of-file isplaced in
thebuffer. Return ismade.
9.REWIND. Thefileisrewound, pointers areresetandreturn isgiven.
3.4.i2.5 Design Requirements
I.GIN_isdesigned asanintegral partoftheGINOcollection ofroutines andistobe
called onlybyXGIN@.
2.SinceGIN@&amp;ldquo;remembers&amp;rdquo; theposition offileswhentheyareclosed, anyactivity ona
fileoutside ofGINOwilllikely befatal.
3.Because ofthepacking usedinthecontrol word, thefollowing maximums apply:
Max.number ofblocks written ononefile=2k-1where k=number ofbitsin
thecomputer word-18.
Max.buffer size=65535words.
4.Theactual contents oftheGINObuffer aremachine dependent. SeeSection 5fordetails.
3.4.12.6 Diagnostic Messages
Thefollowing system fatalmessages maybeissued byGINB:
3009
3029
3048
3049
3.4-18 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.12.7 Information Message
GIN_RECOVERY ATTEMPT _NDATABL_CK EXPECTED BL_CKNB.=
N_o=
Thismessage isissuedpriortoMessage 3049.GIN_attempts toreposition thefile.
Iftheattempt fails,Message 3049isissued, otherwise theproblem proceeds.ACTUAL BL_CK
3.4-19&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.13
3.4.13.1
3.4.13.2OPNCOR(Transmit Logical Records To/From Core Storage).
Entry Points: OPNCOR,WRTCOR, RDCOR.
Purpose
Tosimulate theGINO WRITE andREAD calls providing thecapabilit_ towrite logical records
ofdata incore storage andread logical records from core storage.
3.4.13.3 Calling Sequence
CALLOPNC_R(BLOCK)
BLOCK-Anarraywhose dimension issufficient toholdalogical record tobewritten
orread.
CALLHRTCOR(BLOCK,A,N,EOR)
BLOCK- Thearraywhere thelogical record istobewritten.
A-Anarraycontaining thedatawords tobewritten.
N-Thenumber ofdatawords tobewritten fromA.
IiO,additional datawillbewritten inthelogical record viasubsequentEOR-callstoWRTCOR.
O,thecurrent callisthatlastcallforthecurrent logical record.
CALLRDCOR($n_,$n2,BLOCK,A,N,EOR,M)
n_-FORTRAN statement number defining thereturn takenintheeventanend-of-file
isencountered. Thisreturn isno__.t_tpossible fromRDCORbutisprovided inthe
calling sequence forcompatibility withREAD.
n2 FORTP_AN statement number defining thereturn taken intheeventthatthe
number ofwords requested tobereadisnotavailable intherecord. Inthis
case,Mwordsarereadandtransmitted andthevalueMisreturned totheuser.
BLOCK- Thearraywherethelogical record isstored.
A-Anarraywhere therequested datawords fromtherecord willbestored.
N-Thenumber ofdatawordstoberead.
3.4-20&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
__=O,moredataistobereadfromtherecord viasubsequent calls toRDC_R.E{_R
O,thecurrent call isthelastcall forthecurrent logical record. Any
remaining words inthelogical record aretobeskipped.
M -Thenumber ofwords actually readintheevent return ton2istaken.
Thenun_er ofwords available atBL_CK mustbeequal to(orgreater than) thenumber of
words inthelogical record ]_lustwo.
_PNC_R initializes awordpointer stored atBL_CK(1) tolandhasnoother function. The
usermaydesire toperform thisfunction himself with thestatement BL_CK(1) =I.Thisfunction
mustbeaccomplished prior tothefirst call toWRTC[_R orRDC_R foreach logical record.
3.4.13.4 Method
_PNC_R. BL_CK(1) issettooneandreturn ismade.
WRTC{&lt;em&gt;R. Thecurrent pointer stored atBL_CK(1) ispicked up. Nwords aretransmitted from
AtoBLOCK beginning atthecurrent pointer plusone. IfE_R=O,thenewpointer isstored and
return made. Otherwise, anend-of-record flagisstored &lt;em&gt;f_BL_CK following the&lt;/em&gt;&amp;rsquo;&lt;/em&gt;*,__ord
written. Thepointer (pointing totheflag) isstored andreturn made.
RDC{_R. Thecurrent pointer ispicked upfromBL_CK(1). Words aretransmitted fromBLiBCK
beginning atthecurrent pointer plusonetoAuntil (1)theend-of-record flagisencountered
inwhich case theactual nund_er ofwords transmitted isstored inMandRETURN 2isgiven, or(2)
Nwords havebeentransmitted. IfE_R=O,thenewpointer isstored andreturn ismade. If
E_R#O,BL_CK issearched until theflagisfound, thepointer (pointing immediately prior
totheflag) issaved andreturn ismade.
3.4.13.5 Design Requirements
Theflag value mustbeunique. Itsvalue =(-16777215) must notbeoneofthedatawords
written.
3.4-21&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.14
3.4.14.1 EntryPoint: G_PEN.
3.4.14.2 PurposeG_PEN (Short Form forSubroutine &lt;em&gt;PEN With Header Record Processing&lt;/em&gt;.
Toprovide ashort form (without thenon-standard return ofsubroutine _PEN)for opening a
GINO file, andtowrite atwo-word header record ifthedata block isopened asoutput with
rewind ortoskip theheader record ifthedata block isopened asinput with rewind.
3.4.14.3 Calling Sequence
CALLG_PEN(FILE,BUFFER,_PT)
where:
FILE =GINOfilename(seesection 1.6.4.1).
BUFFER =GINBbuffer location.
_PT =anyoftheopenoptions permitted bysubroutine _PEN(seesection 3.4.2).
3.4.14.4 Method
Openthefile(subroutine @PEN). If@PT=inputwithrewind (0),skipthefirstrecord of
thedatablock. If@PT=output withrewind (I),writethetwowordBCDnameofthedatablock
asreturned bysubroutine FNAME.
3.4.14.5 Design Requirements
Thedatablockmustexist(mustnotbepurged). If_PT=innutwithrewind (0),thefirst
record ofthedatablockmustbeatleasttwowordslong. Subroutines used: _PEN,READ,WRITE,
FNAME, MESAGE.
3.4.14.6 Diagnostic Messages
Ifthedatablockispurged orifanend-of-file orend-of-record condition isencountered
whenreading thedatablock, subroutine MESAGE willbecalled withinternal messaae numbers I,2,
or3,respectively (external message numbers are3001,3002and3003).
3.4-22&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.15
3.4.15.1 EntryPoint: FREAD.
3.4.15.2 PurposeFREAD (Short FormforSubroutine READ).
Toprovide ashort form (without thenon-standard returns ofsubroutine READ) ofreading a
GIN_file.
3.4.15.3 Calling Sequence
CALLFREAD(FILE,BL_CK,N,EBR)
where:
FILE=GINBfilename (seesection 1.6.4.1).
BL_CK= array intowhich Nitems aretoberead.
N=number ofitems toberead.
EOR=anyendofrecord option permittedbysubroutine READ(seesection 3.4.5).
3.4.15.4 Method
Read theNitems from FILEintoBL_CK. Ifsubroutine READreturns anend-of-file or
end-of-record condition, subroutine MESAGE iscalled with afatal error condition.
3.4.15.5 Design Requirements
Inaddition tothose imposed byREAD, there mustbeNitems remaining intherecord tobe
read. Subroutines used: READ, MESAGE.
3.4.15.6 Diagnostic Messages
Subroutine MESAGE maybecalled with internal message number 2or3(external message
numbers 3002,3003).
3.4-23&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.16 WRTTRL IWrite Trailer).
3.4.16.1 Entry Points: WRTTRL, RDTRL.
3.4.16.2 Purpose
WRTTRL will pack sixwords oftrailer information into three words andstore them intheFIAT.
RDTRL will retrieve andunpack thetrailer information.
3.4.1G.3 Calling Sequence
CALL WRTTRL(FILBLK)
FILBLK(1) -GINO file name (see section 1.6.4.1).
FILBLK(2-7) -Trailer information tobestored.
CALL RDTRL(FILBLK)
FILBLK(1) -GINO file name.
FILBLK(2-7) -Storage space fortrailer information.
3.4.16.4 Method
Theindex into theFIAT forthespecified file islocated intheFIST. Thethree packed
words arestored inorretrieved from theFIAT. Theinformation isalso stored forallfiles
equivalenced totheGIN_ file name. ForRDTRL, ifthefile ispurged, FILBLK(1) isset
negative. Ifthefile isamatrix, word 7isconverted toadensity (lO000 =I00% dense).
Matrix trailers canbedisplayed asthey arewritten byactivating DIAG 8.
3.4.16.5 Design Requirements
Each word oftrailer information isassumed tobeapositive integer less than 216-I.
Trailers maynotbewritten onGINO files I01-199.
3.4.16.6 Diagnostic Messages
Ifthefile didnotexist intheFIST when WRTTRL wascalled, fatal error 3011 occurs.
3.4-24 (811172)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTII_E DESCRIPTIONS
3.4.17 FI&amp;amp;&lt;em&gt;J_E (File Name).
3.4.17.1 Entry Point: FNAME.
3.4.17.2 Purpose
Given aGINBfilename, FNAME returns thetwoBCDwords which describe thedatablock.
3.4.17.3 Calling Sequence
CALLFNAME(FILE,NAME)
FILE-GINBfilename (seesecticn 1.6.4.1).
NAME(2) -Storage forthetwoBCDwords.
3.4.17.4 Method
TheGINBfile nameisfirst located intheFIST. Theindex intheFISTisusedtofind
theBCDdescriptors intheFIAT. Ifthefiledoesnotexist intheFIST, &amp;lsquo;&lt;/em&gt;(I_NE)_&amp;rsquo; isreturned
asthetwowords, ^indicating aBCDblank.
3.4-25&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.18
3.4.18.1 EntryPoint:CLSTAB.
3.4.18.2 PurposeCLSTAB (Close aGIN_FileandWrite aNon-zero Trailer).
Toclose aGINBfileandgenerate atable trailer bycallinn WRTTRL.
3.4.18.3 Calling Sequence
CALLCLSTAB(FILE,_PT)
where:
3.4.18.4
CALLCL_SE(FILE,OPT)
Generate thetablecontrol block, ITABCB:
ITABCB(1) =FILE
ITABCB(7) =1
D_I01=2,6
I0ITABCB(1) :0
CALL_4RTTRL (ITABC3).
3.4.18.5 Design Requirements
Sameasthoseforsubroutines CLOSEandWRTTRL.FILE=GIN_filenumber -integer -input.
OPT=anyclose option permitted bysubroutineCL_SE (seesection 3.4.4) -integer -input.
Method
Subroutines used: CLOSE, WRTTRL.
3.4-26&lt;/p&gt;
&lt;p&gt;3.4.19UTILITY SUBROUTINE DESCRIPTIONS
XRCARD(Executive Free-FieldCardData ConversionRoutine)
3.4.19.1Entry Point: XRCARD.
3.4.19.2Purpose
Tointerpret NASTRAN free-field cardinput dataasfollows:
I.Identify BCDalpha andnumeric datafields astheyareconverted andplaced in
theuser&amp;rsquo;s buffer;
2.Flagandoutput special datafield delimiters;
3.Convert BCDnumeric fields tobinary integer orbinary floating point;
4.Indicate when thedataextends beyond one72column card.
3.4.19.3Calling Sequence
&amp;ldquo;&amp;ldquo;&amp;ldquo;XRCARD_U,BU,,L,IN ) &lt;em&gt;L&lt;/em&gt; rl_T=BUF
Where:
@UTBUF
L
INBUF=Thebufferwhich istocontain theconverted cardimage.
=Thelength of_UTBUF available toXRCARD.
=Thebuffer containing thecardimage tobeconverted.
3.4.19.4Method
XRCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer wordstructures, andavariety ofdifferences inhollerith
handling imposed bydifferingFgRTRAN compilers.
XRCARD analyzes thetwenty hollerith words input through INBUF asfollows:
Data Field Delimiters
TypeA:
Thefollowing syn_ois signify theendofanalpha field ornumeric field onthecard. As
these syni_ols areencountered, theywillbeflagged andplaced intheoutputbuffer toaidthe
user inidentifying thedata.
(LEFTPAREN
/SLASH
=EQUAL
3.4-27&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
TypeB:
Thefollowing symbols areidentical tothoselisted aboveexcept thatthesymbol isnot
flagged orplaced intheoutput buffer:
,COMHA
)RIGHTPAREN
Whensuccessive typeAortyneBdelimiters areencountered, anullfieldindication (twoBCD
blankwords) isoutput. Anullfieldisgenerated foreachsuccessive delimiter. Anullfield
isalsogenerated whenatypeAortypeBdelimiter isfollowed bya$indicating theendofdata
condition.
TypeC:
Thefollowing symbol isidentical toU1eCOMrIAexcept thatnonullfieldindication isoutput
whentheyareencountered insuccession.
ABLAIIK
EndofDataIndication
Therearethreemeansbywhich end-of-data maybespecified onthecard:
-Thelastdatafieldendsincolumn 72,orisfollowed byblanks outthrough
column 72;
-$isencountered, afterwhichconments maybeincluded outtocolumn 80;or
-Continuation cardsending in(,/,=or,willresult inacontinuation flag
(0modeword).
Format ofOutput Data
Amodeword,N,isplaced intheoutput buffer todistinguish between BCDdataand
numeric data.
Numeric ModeWord: Anewmodewordisoutput eachtimeanumeric fieldisconverted
andoutput. (Allnumeric modewordsarenegative).
I/=-Iinteger data(Idataword)
=-2floating pointsinnle precision (Idataword)
=-4floating pointdouble precision (2datawords)
Nindicates thetypeofnumeric dataandwhere tolookforthenextmodeword.
3.4-28 (8/1/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
Aloha Mode Word: When processing alpha data, only onemode word isoutput forsuccessive
alpha fields, i.e., analpha mode word will never follow another aloha mode word.
N=Thenumber ofsuccessive alpha fields encountered onthecard. Each alnha #ield
consists oftwo4-character computer words (left adiusted). Thus Ncanbeused
tocompute thelocation ofthenext mode word.
Thetype Adelimiters areoutput asalpha data andare&amp;rsquo;covered&amp;rsquo; bythealoha mode &lt;em&gt;ord.
Since data output inthealpha mode must consists oftwowords atype Adelimiter will appear as:
Word l=Delimiter flag, allbits oftheword areon.
Word 2=BCDdelimiter, left adjusted, followed byBCDblanks.
End-of-Data: Theend-of-data flag isplaced last intheoutput buffer andappears inplace
ofanexpected mode word. There aretwoend-of-data flags:
-Aword with allbits off, indicating that more data istofollow onacontinuation card.
-Aword with allbits onexcept forthesign, indicating that nomore data isto_ollow
forthis card type.
Sample Input Card
CARDAA=I,B=I.O,ABC/CDEFGH GOOD DATA
OOOO0000
IZ34S57L
111111
22222222
3333333
4444444
55555555
6_665G_6
77777777
)&lt;em&gt;S;888
&lt;em&gt;99;9_S
tZ_a:j_OOg0000 OOC000;;;00000000 O00000DOOOC_OOOOOCOOO_OG
9lg_ii_13141Slii/I@&lt;em&gt;5_2!;Z23_425___Z__31_33__33S373&lt;/em&gt;&lt;/em&gt;;J_142434445_4?+&lt;/em&gt;&amp;rsquo;&lt;em&gt;&lt;em&gt;&lt;em&gt;152_3____l&lt;/em&gt;:&lt;/em&gt;?Â£3&lt;/em&gt;
111111111111111111111i 111111111111111111111111
2222222222 222222222
333&amp;quot;33333333333
444444444444444 44444
5555555555555555 55_5
666B_666B668BBBGS &lt;em&gt;6
777777777777777771 77
B8888BBBBBB8882222222222222222
3333333 33333333
44444444444444
5555553555555555
B6_BB666_BB666
777177777771777
&lt;em&gt;888888888BBBBB82222222222222222
3333333333323133
4444444444444444
5555555555555_55
6B6GBBB6GBBBB_8
7777777777777777
BBBB889888B88888
Â£,999S99999.m99999_3&lt;/em&gt;$9999999999999S99,&lt;em&gt;3999993999993998
3)&lt;em&gt;11121314151_I)1[,1@,)&lt;/em&gt;,Z]2223_4_526Y.7Z5.+3CJl&lt;/em&gt;.23)34J5&lt;/em&gt;&lt;/em&gt;:+Z]3540414)i}14(,:464l4B4D5_S&amp;rsquo;&lt;em&gt;.&lt;/em&gt;%54-&amp;ldquo;5_&amp;rsquo;&lt;em&gt;57&lt;/em&gt;-JF,&lt;em&gt;6_O00D;D;O_ODO0000000
1111111111i111i1111
2222222222222222222
3333333333333333333
4444444444444_44444
55555555S5555555555
86_6666666BB6B_6G&lt;/em&gt;
1771711111177711771
8888888888BB_B_B_
9999999999_9_S?_9
3.4-29&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P22</title>
      <link>//uildDrafts:1313/docs/programmers/programmers_manual_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/programmers/programmers_manual_022/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
Resulting OutputBuffer forIBM7094orUnivac 1108
BCDFieldI
BCDFieldI
Output Delimiter I
Output Delimiter I
NOTE: FortheIBMS/360 the
output buffer shownherelooks
thesameexcept thattheright
twoblanks shownintheBCD
fields heredonotexist. For
theCDC6600therearean
additional fourtrailing blanks
ineachwordofaBCDfieldthan
shownhere.+(alpha mode word) 3
CARD_A
a_AAAA
AAAAAA
A A A AA A
alIbitson
=AAAAA
-(numeric modeword) 1
integer 1
+(alpha modeword) 2
BAAAAA
AAAA_
allbitson
=AA AAA
-(&lt;em&gt;umeric modeword)2
single-precision 1.0
+(alpha modeword) 5
ABCAA
A A A AA A
allbits on
/A A A A /&lt;/em&gt;,
CDEFAA
GHAAA
G__DAA
A A A A A A
DATA/_A
A AA A A A
allbits onsign bitoff
AIndicates blank.Number ofsuccessive alphafields
(including TypeAdelimiters)
Endofdataforthiscard
3.4-30&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.19.5 Design Requirements
Analpha field must beeight characters orless. Longalpha fields willbetruncated to
eight characters.
Alldatamustbeplaced incardcolumns 1-72.
Adatafield maynotbesplit between twocards.
Thespecification ofallnumeric datafields must conform toF_RTRAN IVstandards.
Ifanerror condition isencountered, e.g., databad,XRCARD willwrite amessage, turnon
theN_G_flag in/SYSTEM/,setthefirst wordof@UTBUF =O,andmake anormal return tothe
calling program.
3.4-31&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2_
3.4.20.1 Entry Point: RCARD.
3.4.20.2 PurposeRCARD(Fixed FieldCardDataConversion Routine).
Tointerpret NASTRAN fixed-field (bulkdata)cardinputasfollows:
-Identify BCDalphaandnumeric datafields astheyareconverted andplaced
intheusersbuffer; and
-Convert BCDnumeric fields tobinary integer orbinary floating point.
3.4.2g.3 Calling Sequence
CALLRCARD(_UTBUF,FR_BF,NFLAG,INBUF)
Where:
_UTBUF
FRMTBF
NFLAG
INBUF=Thebuffer which istocontain theconverted card image.
=Abuffer which contains identification flags fortheconverted data in_UTBUF.
=Contains number ofwords returned in_UTBUF.
=Thebuffer containing thecard image tobeconverted.
Definition ofData Identification Flaas Placed inFRMTBF
0=output forablank data field.
l=output foraninteger field.
2=output forafloating ooint field.
3=output foraBCDfield.
4=output foradouble precision floating point field.
-l=error.
3.4.20.4 Method
RCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer word structures, andavariety ofdifferences inHollerith
handling imposed bydiffering F_RTRAN compilers.
Twenty 4-Hollerith wordsarereceived byRCARDonanyparticular calltoRCARD. RCARDfirst
determines fromfield1(words 1and2)ifthedatacardisacontinuation card,andwhether the
3.4-32&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
fields aresingle (2words each)ordouble (4wordseach)inlength. Fields 2through 9(for
single fieldcards) or2through 5(fordouble fieldcards) arethenconsidered oneatatime.
Noconsideration ismadeforthelastfieldofanycard(words 19and20).
3.4.20.5 Design Requirements
I.AllBCDfields mustbeginwithanalphabetic character.
2.AllBCDfields aredefined tobeeightcharacters inlength. Nameswithlessthaneinht
characters willbefilled withBCDblanks.
3.Whenplaced intheuseroutput buffer, eachBCDfieldwillbedivided intotwofour-
character words (leftadjusted) andstored intwosuccessive locations oftheoutput bu#fer.
Theremainder ofthewordsisfilled withBCDblanks.
4.Special characters arenottobeusedaspartofaBCDfieldexcept for*and+infield
1(column I)whichindicate adouble fieldorsingle field (respectively) continuation card.
5.Thedatafields willbestored successively intheusersoutput buffer astheyare
encountered inscanning thecardimagefromlefttoright. Thenumber ofoutput coreloca-
tionsrequired perfield typevaries:
a.Integer field=1coreword(right adjusted).
b.BCDfield=2corewords.
c.Realsingle precision =1coreword,
d.Realdouble precision =2corewords.
e.Blankfield=1coreword(integer 0).
6.Thecardtypefield (field I)ofacontinuation cardwillnotbepassed alonntotheuser.
Twozerowordswillreplace theIDfieldintheoutput buffer. Thustheusercaneasily dis-
tinguish thedifference between acontinuation cardandanewcardtype.
7.Acheck forbulk data card types SEQGP andSEQEP ismade byRCARD. Fields 3,5,7,and9oi
these card types areprocessed byaspecial conversion.
Theinput within these special fields will besimilar totheDewey decimal notation and
consists ofamultiple digit integer anduptothree single digit sub-integers; e.g., (354.1.2)
and(267.5). Thespecial fields will beconverted toasingle integer bydropping anydecimal
points andappending anumber ofzeros equal tothree minus thenumber ofdecimal points in
theoriginal number; e.g., (354120) and(267500).
3.4-33 (311171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
8.RCARDdoesnotknowthelength oftheusersoutput buffer, therefore, nocheck ismade
forexceeding thelength ofthebuffer. However, thenumber ofdatawords placed inthe
output buffer willbespecified inNFLAG.
9.Field I0willnotbepassed alongtotheuser.
3.4.20.6 Diagnostic Messages
Fields appearing tobeincorrect toRCARDwillcauseadiagnostic tobewritten onthe
system output filefollowed byacardformat heading, acardimageecho,andanunderlining of
thefieldinquestion. Also,the/SYSTEM/ N_G_flagisset.TRUE., azeroisplaced intheoutput
buffer forthefield, anda-Iisplaced intheformat buffer forthefield. RCARDwil3print
diagnostics forallfields appearing incorrect andmakeanormal return.
3.4-34&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.21 TAPBIT (Tape BitTest).
3.4.21.I Entry Point: TAPBIT.
3.4.21.2 Purpose
Toexamine thetapebitforapermanent GIN_filetodetermine theexistence ofaphysical
tapeforthatfile.
3.4.21.3 Calling Sequence
IF(TAPBIT(FILE)) GOT_&amp;hellip;
FILE istheGIN@filename (oneof&amp;rsquo;P_L&amp;rsquo;, &amp;lsquo;BPTP, &amp;lsquo;NPTP&amp;rsquo;, &amp;lsquo;UMF&amp;rsquo;,&amp;lsquo;NUMF&amp;rsquo;, &amp;lsquo;PLTI&amp;rsquo;,
&amp;lsquo;PLT2&amp;rsquo;, &amp;lsquo;INPT&amp;rsquo;).
3.4.21.4 Method
Thepermanent FISTissearched andthetapebitinthecorresponding FIATentry is
examined. Ifthebitison(indicating thepresence ofaphysical tape), TAPBIT will beset
.TRUE.. Otherwise itwillbeset.FALSE..
3.4.21.5 Design Requirements
ThetypeofTAPBIT must bedeclared L_GICAL.
3.4.21.6 Diagnostic Messages
Afatal calltoMESAGE occurs ifaGIN@filenameotherthanthose listed isused.
3.4-35&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.22 PEXIT (Problem Exit).
3.4.22.1 EntryPoint: PEXIT.
3,4.22.2 Purpose
Toterminate theprogram.
3.4.22.3 Calling Sequence
CALLPEXIT.
3.4.22.4 Method
Thediagnostic message queue ischecked andifnotemptythemessage writer MSGWRT is
called. Ifthecheckpoint flagissetacardispunched indicating theendoftherestart
checkpoint dictionary. Thesystem output buffers areflushed andthentheiobisterminated.
3.4.22.5 Design Requirements
PEXITmusthaveaccess totheF_RTRAN 1/9routines.
PEXITshould notbecalled bymodule writers. Termination should beviaacallto
MESAGE (i.e., CALLMESAGE(-61,O, NAME)).
3.4-36 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.23 TMT_G_ (Time-To-Go).
3.4.23.1 EntryPoint: TMT_G_.
3.4.23.2 Purpose
Computes therunning timeremaining forthisNASTRAN problem.
3.4.23.3 Calling Sequence
CALLTMT_G_ (TIME)
TIME=Remaining timeininteger seconds.
3.4.23.4 Method
During NASTRAN problem initialization, onesystem cell issettotheproblem starting time
(PSTART) while another issettothemaximum running time (I_TIME) contained ontheExecutive
Control DeckTIMEcard. TIME-T_-G_ isthenfound byreading theclock (N_W) andsolving the
following:
TIME-T_-G_ =MXTIME -(N@W-PSTART).
TheCPUclock isutilized onallmachines except theiBM7094where noneisavailable.
3.4-37&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.24PAGE (Page Headinq).
3.4.24.1 Entry Points: PAGE, PAGEI, PAGE2
3.4.24.2 Purpose
Toprovide astandard pageheading forNASTRAN output.
3.4.24.3 Calling Sequence
CALLPAGE
CALLPAGEI
CALLPAGE2(N)
C_I_MON/SYSTEM/XXX,_TPE,SPACE(6),IPAGE,LINE,ITLINE,MAXLIN,DATE(3)
OTPE -Systemoutput unit-inteqer.
IPAGE-Current pagenumber-increased by1oneachcalltoPAGE.
LINE -Numberofdatalinesonprevious page-LINEissettozerobyPAGE.
ITLINE-Totalnumberoflinesofprintout inrun-ITLINE =ITLINE+LINE.
MAXLIN -Maximum numberofdatalinesallowed -ifITLINE&amp;gt;MAXLIN, PEXITwillbecalled.
DATE(3)- Today&amp;rsquo;s date: month,day,year-integer.
N -Numberoflinestobewritten -integer -input.
C_MM_N/_UTPUT/TITLE(32),SUBTIT(32),LABEL(32),NEADI(32),HEAD2(32),HEAD3(32)
3.4.24.4 Method
PAGEwrites astandard 6lineheading fromTITLE, SUBTIT, LABEL, HEAD1, HEAD2, HEAD3.
PAGE1writes onlythefirst3linesofastandard header.
PAGE2restores thepageifNlineswillnotfitonthecurrent page.
3.4.24.5 Design Requirements
ITLINEmustbelessthanMAXLIN. PAGEmusthaveaccess totheF_RTRAN I/_routines.
3.4-38&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.25 MESAGE (Message).
3.4.25.1 EntryPoint: MESAGE.
3.4.25.2 Purpose
Toqueue nonfatal messages during theexecution ofamodule; andforfatal messages give
coredump (CALL PDUMP), print themessage queue (CALL MSGWRT), andcallPEXIT.
3.4.25.3 Calling Sequence
CALLMESAGE(N_,PARM,N_E)
Where
N_=Internal message nun_er. N_positive defines themessage asnonfatal;
N_negative defines themessage asfatal.
PARM=Parameter used intheprinted message (usually theGIN_filenumber)
NAME(2) =Twowords usedintheprinted message (usually twoBCDwords containing the
nameofthesubroutine calling MESAGE).
3.4.25.4 Method
Non-fatal messages arequeued incommon block /MSGX/until themaximum number isreached.
Allnon-fatal messages after thisarelost. Whenafatal message isencountered, itisqueued
andappropriate action taken toterminate therun.
3.4.25.5 Design Requirements
Thesizeofcommon block /MSGX/limits thenumber ofmessages stored.
3.4-39 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2G MSGVIRT (Message Writer).
3.4.26.1 Entry Point: MSGiVRT.
3.4.26.2 Purpose
Toprint NASTRAN error messages onthesystem output file.
3.4.26.3 Calling Sequence
CALL MSG_RT
COHMON/MSGX/N,M,MSG(4,10)
where:
N-isthetotalnumber ofmessages tobeprinted.
M-maximum number ofmessages thatcanbequeued bysubroutine MESAGE inthearrayMSG.
MSG-arraywheremessage parameters arequeued.
MSG(I,I) -theinternal message number oftheIthmessage.
MSG(2,1) -ifIMSG(I,I)I _30,MSG(2,1) isaGIN_filenumber.
IfIMSG(I,I)I =30,thenMSG(2,1) isaninternal message number and
USRMSG iscalled.
MSG(3,1), MSG(4,1) =parameters fortheIthmessage.
3.4.26.4 Method
Theinternal message number, M(I,I), ifnotequalto30inabsolute value, isusedbyMSGWRT to
printouttheerrormessage alongwithexternal message number, which is3000plustheinternal
message number. Iftheinternal message number, M(I,I), is30,subroutine USRMSG iscalled.
3.4.26.5 Design Requirements
External message numbers output byMSGtVRT atpresent are3001through 3057.
MSGWRT iscalled onlybyNESAGE.
3.4-40 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIOI_S
3.4.27 USRMSG (User Message Writer).
3.4.27.1 Entry Point: USRMSG.
3.4.27.2 Purpose
Toprint mostNASTP,ANusererror messsges onthesystem output file.
3.4.27.3 Calling Sequence
CALLUSRMSG(I)
C_MM_N/MSGX/N,M,,MSG(4,10)
where:
I -Pointer intotheMSGarray.
N -NotusedinUSRMSG.
M -NotusedinUSRMSG.
MSG(!,!) -If!MSG(I,I)! =30,MSGNRT will callUSRMSG.
MSG(2,I) -UsedbyUSRMSG astheinternal message number.
MSG(3,I), MSG(4,I) -Parameters fortheIthmessage.
3.4.27.4 Method
USRMSG willprint appropriate error message along withexternal message number, which is
2000plus internal message nu_er.
3.4.27.5 Design Requirements
External message numbers output byUSRMSG atp,-esent are: 2001&amp;ndash;2140.
USRMSG iscalled onlybyMSGWRT.
3.4-41 (3/I/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.28MATDUM (Matrix Dump (Print) Routine).
3.4.28.1 Entry Point: MATDUM.
3.4.28.2 Purpose
Toprint ageneral NASTRAN matrix.
3.4.28.3 Calling Sequence
CALLMATDUM(FILEA)
FILEA -Seven-word array (matrix control block)- integer
Word
1
2
3
4
5
6
7
3.4.28.4 MethodGIN_name
Number ofcolumns
Numberofrows
Formofmatrix
Typeofmatrix
Maximum number ofnon-zero termsinanycolumn
Undefined
Thenon-zero terms ofeachcolumn areunpacked andprinted.
Ifthematrix control block doesnotcontain legal values thetable printer (seesection
3.4.29) iscalled.
3.4.28.5 Design Requirements
Open coreat/TABPRX/.
MATDUM mustholdthenon-zero bandofthematrix inthis area.
Subroutine TABPRT andtheFORTRAN I/_routines must beavailable toMATDUM.
3.4-42&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.29TABPRT (Table Printer).
3.4.29.1 Entry Point: TABPRT.
3.4.29.2 Purpose
Toprint anyNASTRAN DataBlock (especially tables).
3.4.29.3 Calling Sequence
CALLTABPRT(FILEN)
FILEN -GIN_ nameofdatablock -integer -input.
3.4.29.4 Method
Eachword isread, identified astotype&amp;ndash;integer, BCD,orrealnumber andprinted lO
characters perword, lOnumbers perline. Notethattheidentification method varies from
machine tomachine andisnotI00%certain, i.e., certain words maybemisidentified.
3.4.29.5 Design Requirements
Opencoreat/TABPRX/.
Double precision numbers will notbecorrectly interpreted ontheUnivac llO8.
3.4-43&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.30
3.4.30.I Entry Points: PREL_C, LBCATE.
3.4.30.2 PurposePREL(_C (Position DataBlocktoRequested Record).
Toprovide aconvenient means oflocating data records indata blocks output bythe
Input File Processor (IFP).
3.4.30.3 Calling Sequence
CALLPREL_C($n,BUFF,NAME)
n-F_RTRAN statement number defining return takenintheevent NAMEisnotinthe
FIST(i.e., datablock ispurged).
BUFF-Anarraywhosedimension equals thecontents ofthefirstwordof/SYSTEM/
plusone.UsedasaGIN_buffer byPREL_C andL_CATE.
NAME-GIN_filenameofdatablocktoberead(integer).
CALLL_CATE($n,BUFF,ID,IDX)
n-F_RTRAN statement number defining return takenintheeventthattherequested
record (defined byID)isnotpresent inthedatablock.
BUFF-ThesameBUFFassigned whenPRELOC wascalled.
ID-Theaddress ofatwo-word array. Thefirstwordistheinteger record identifi-
cation andthesecond wordisthebitposition inthetrailer forthedatablock
wherethepresence orabsence oftherecord isdefined.
IDX-Thecontents ofthethirdwordoftherecord foundwillbestored inIDX
(internal cardnumber generated byIFP).
Ifthedatablockisnotpurged, PREL_C willopenthefileandskiptheheader record.
2.Iftherequested record isnotpresent (asdetermined bytheappropriate trailer bit),no
I/_activity willoccur. Otherwise, LOCATE willposition thefiletoreadthefirstdataentryof
therequested record (i.e., afterthe3-word header fortherecord). See2.3.2forformat of
records andtrailer.Notes:
I.
3.4-44&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.Iftheuserdoesnotreadalldatainarecord andhewishes touseLOCATE tofind
another record, heshould useFWDREC toskiptheremainder ofthecurrent record prior tocalling
L_CATE.
4.Foroptimum efficiency inprocessing adatablock, theusershould callL_CATE in
theorder inwhich therecords appear onthedatablock, i.e.NASTRAN collating order.
3.4.30.4 Method
PRELOC stores NAME inBUFF(1) andthencalls _PEN using BUFF(2) asthebuffer address. If
thedatablock ispurged, thenon-standard return isqiven totheuser. Otherwise, FWDREC is
called toskiptheheader record andreturn ismadetotheuser. L@CATE calls RDTRL toreadthe
datablock trailer. Thebitposition identified byID(2) istested using ANDF. Ifzero, the
non-standard return isgiven. Otherwise, three words fromthefile areread. Ifthefirst word
equals ID(1), IDXissettothethird wordandreturn ismade. Otherwise, thefirst word issaved
andtheremainder oftherecord isskipped. Thefirst three words ofeachsuccessive record are
readandthetestforiietch onfirst wordismadeuntil (!)anend-of-file occurs inwhich case
thefileisrewound, theheader record skipped andtheprocess iscontinued, (2)amatch isfound
inwhich case IDXissetandreturn isgiven or(3)amatch with thefirst record readisfound
inwhich case therecord isskipped, awarning message isqueued andthenon-standard return is
given.
3.4.30.5 Diagnostic Messages
Thefollowing messages maybeissued byPREL_C:
2072
3002
3003
3.4-45&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.31 S_RTISortaTable).
3.4.31.1 EntryPoint: S_RT.
3.4.31.2 Purpose
Tosortacorecontained table, ortosortalogical record fromaspecified inputfile,
onaspecified keyword ineachentry.
3.4.31.3 Calling Sequences
Tosortacorecontained table:
CALLS_RT(O,O,NWDS,KEYWD,TA3LE,NTABLE)
NWDS
KEYWD
TABLE
NTABLE -Total
NWDS).
Tosortalogical record:
C_MM_N/SETUP/NFILE(6),BUF
CALLS_RT(INPFL,&lt;em&gt;UTFL,NWDS,KEYWD,BL_CK,NBL_CK)
NFILE -ThefirstthreewordsmustbesetbytheuserpriortoCALLS@RTwiththe
GINBfilenamesofthreescratch files forusebyS_RT. Uponreturn to
theuser,NFILE(6) willcontain theGIN_filenameofthefilecontaining
thesorted record.
BUF IfINPFL=BUTFL, thenBUFpoints toanareainBL@CKwhere aGINObuffer
isavailable forS_RT,i.e.,BL_CK(BUF) isthebuffer address.
Restriction: BUF&amp;gt;NBL_CK.
INPFL -GINOfilenameofdatablockcontaining theloaical record tohesorted.
&lt;em&gt;UTFL -GINOfilenameofdatablockwhere thesorted record istobewritten.
IfOUTFL=O,thesorted record willremain onNFILE(6).-Thenumber ofwords ineachentryofthetable. Restriction: NWDS&lt;/em&gt; 20.
-Theword positior&lt;/em&gt; within each entry onwhich thesort istotake nlace.
-Address where thetable isstored.
number ofwords inthetable (NTABLE must beanintegral multiple of
3.4-46&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
NWDS
KEYWD
BL_CK-Thenumber ofwords ineachentry oftherecord. Restriction: NWDS_20.
-Defined asabove.
-AnareaincoretobeusedbyS_RTtoperform thesortphase.
NBL_CK -Thenumber ofcomputer words available atBL_CK.
Notes:
I.INPFL mustbeopened andpositioned tothelogical record bytheuserprior to
entry toS_RT. Thefile isnotclosed byS_RT.
2.If_UTFL &lt;em&gt;O,thisfilemustbeopened andpositioned bytheuser prior toentry to
S_RT. Thefile isnotclosed byS_RT.
3.IfINPFL =&lt;em&gt;UTFL, thefileisclosed bySBRT, opened towrite withrewind, and
thesorted logical record iswritten asthefirst logical record onthefile. Thefileis
no___t_tclosed byS_RT.
A NPTI&lt;/em&gt;(A&lt;/em&gt; _cmlwmyc rlnc_H wifh rpwinH
3.4.31.4
I.Method
CpRESpRT. Themethod usedisashuttle exchange orbubble sortwhich isoptimum for
datawhichisnearly insort. Themethod isasfollows:
a.Thekeywordsoftwosuccessive entries arecompared. Ifcurrently insort,the
process isrepeated. Ifnot,
b.Asearch toward thebeginning ofthetableismadetodetermine theposition ofthe
out-of-sort entry.
c.Fromthisposition, thetableisshifted oneentryandtheout-of-sort entryis
inserted atitsproper position.
d.Ifthelastpairofentries havenotbeenanalyzed, theprocess returns tostep(a).
Otherwise thesortiscomplete.
2.FILES_RT. OneGIN_buffer isallocated attheendofBLBCKandascratch fileis
opened towrite. Asmanyentries ascanbeheldintheremaining coreinBL_CKarereadand
sorted usingthealgorithm above. Thesorted dataiswritten asalogical recordonthescratch
file. Thisprocess isrepeated untilalldataintheinputrecord hasbeenreadandthesorted
3.4-47&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
strings written onthescratch file. Ifonlyonesuchsortwasrequired, thesortiscomplete
except forcopying ontoOUTFL ifrequested. Otherwise, anoptimum distribution ofsorted recores
ontwoscratch filesiscomputed usingaFibonacci sequence. Thesorted strings areredistributed
between twoscratch filesandthemergephaseisentered. Thetwoscratch filesarereadone
entryatatime,merged, andnewsorted entries written onathirdscratch file. Notethat,usina
theFibonacci sequence, oneofthefilescontaining sorted strings willhaveagreater number of
strings (records) thantheother. Oneachpassinthemergenhase, themeraeoccurs untilthe
filewithfewerstrings isexhausted. Atthispoint, themerged filebecomes thefilewiththe
larger number ofsorted strings, theprevious larger filebecomes thefilewiththefewerstrinns,
andtheprevious filewithfewerstrings (which wasexhausted) becomes thefileontowhich the
merged strings arewritten. Theprocess continues untilthesortiscomplete. Theresulting
sorted record iscopied onto_UTFL ifrequested.
3.4.31.5 Design Requirements
Thenumber ofwords perentrymaynotexceed 20.(Achange inthedimension ofthelocal
variable TEMPmaybemadetorelaxthisrestriction.)
Theamount ofcoreavailable atBL_CKmustbeatleastoneGIN_buffer Dlus2&lt;em&gt;NWDS during
thecoresortphaseandthreeGIN_buffers plus2&lt;/em&gt;NWDS durin_ themerge nhase.
Thecoretableorlogical record tobesorted mustcontain anintegral number ofentries.
3.4.31.6 Diagnostic Messages
Thefollowing messages maybeissued byS_RT:
3001
3002
3008
3.4-48&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.32 &lt;em&gt;MMATD (General Matrix Multiply andTranspose -Double Precision).
3.4.32.1 Entry Point: GMMATD.
3.4.32.2 Purpose
Toperform anyoneofthefollowing matrix operations:
[A][B]:[C] (1)
[A]T[B]=[C] (2)
[A][B]T=[C] (3)
[A]T[B]T=[C] (4)
[A][B]+[D]:[C] (5)
[A]T[B]+[D]=[C] (6)
[A][B]T+[D]=[C] (7)
[A]T[B]T+ [D]=[C] (8)
where [A],[B],[C],and [D]arerealdouble precision matrices Tk&lt;/em&gt;&amp;hellip;..*&lt;em&gt;&amp;quot; â€¢,,,,&lt;/em&gt;,uu_,neIsusedfor
small in-core matrices, innon-NASTRAN packed format, insuchnmdules asSMAI, SMA2, SMA3and
DSMGI.
3.4.32.3 Calling Sequence
CALLGMMATD(A,IR_WA,IC_LA,MTA,B,IR_WB,IC_LB,MTB,C)
A-Arealdouble precision matrix ofIR_WA rowsandIC_LA columns stored inthe
singly dimensioned double precision variable A.
N.B. Amust bestored byrows. Forexample, if
1.0 4.0
[A]:2.0 5.0,
.0 6.
then thematrix mustbestored intheF_RTRAN double precision array Aasfollows:
A(1) =l.O
A(2) =4.0
A(3) =2.0
A(4) =5.0
A(5) =3.0
3.4-49&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Programmer&#39;s Manual P22</title>
      <link>//uildDrafts:1313/docs/test/programmers_manual_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/test/programmers_manual_022/</guid>
      <description>
        
        
        &lt;p&gt;SUBROUTINE DESCRIPTIONS
Resulting OutputBuffer forIBM7094orUnivac 1108
BCDFieldI
BCDFieldI
Output Delimiter I
Output Delimiter I
NOTE: FortheIBMS/360 the
output buffer shownherelooks
thesameexcept thattheright
twoblanks shownintheBCD
fields heredonotexist. For
theCDC6600therearean
additional fourtrailing blanks
ineachwordofaBCDfieldthan
shownhere.+(alpha mode word) 3
CARD_A
a_AAAA
AAAAAA
A A A AA A
alIbitson
=AAAAA
-(numeric modeword) 1
integer 1
+(alpha modeword) 2
BAAAAA
AAAA_
allbitson
=AA AAA
-(&lt;em&gt;umeric modeword)2
single-precision 1.0
+(alpha modeword) 5
ABCAA
A A A AA A
allbits on
/A A A A /&lt;/em&gt;,
CDEFAA
GHAAA
G__DAA
A A A A A A
DATA/_A
A AA A A A
allbits onsign bitoff
AIndicates blank.Number ofsuccessive alphafields
(including TypeAdelimiters)
Endofdataforthiscard
3.4-30&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.19.5 Design Requirements
Analpha field must beeight characters orless. Longalpha fields willbetruncated to
eight characters.
Alldatamustbeplaced incardcolumns 1-72.
Adatafield maynotbesplit between twocards.
Thespecification ofallnumeric datafields must conform toF_RTRAN IVstandards.
Ifanerror condition isencountered, e.g., databad,XRCARD willwrite amessage, turnon
theN_G_flag in/SYSTEM/,setthefirst wordof@UTBUF =O,andmake anormal return tothe
calling program.
3.4-31&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2_
3.4.20.1 Entry Point: RCARD.
3.4.20.2 PurposeRCARD(Fixed FieldCardDataConversion Routine).
Tointerpret NASTRAN fixed-field (bulkdata)cardinputasfollows:
-Identify BCDalphaandnumeric datafields astheyareconverted andplaced
intheusersbuffer; and
-Convert BCDnumeric fields tobinary integer orbinary floating point.
3.4.2g.3 Calling Sequence
CALLRCARD(_UTBUF,FR_BF,NFLAG,INBUF)
Where:
_UTBUF
FRMTBF
NFLAG
INBUF=Thebuffer which istocontain theconverted card image.
=Abuffer which contains identification flags fortheconverted data in_UTBUF.
=Contains number ofwords returned in_UTBUF.
=Thebuffer containing thecard image tobeconverted.
Definition ofData Identification Flaas Placed inFRMTBF
0=output forablank data field.
l=output foraninteger field.
2=output forafloating ooint field.
3=output foraBCDfield.
4=output foradouble precision floating point field.
-l=error.
3.4.20.4 Method
RCARD&amp;rsquo;s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing
machines having avariety ofcomputer word structures, andavariety ofdifferences inHollerith
handling imposed bydiffering F_RTRAN compilers.
Twenty 4-Hollerith wordsarereceived byRCARDonanyparticular calltoRCARD. RCARDfirst
determines fromfield1(words 1and2)ifthedatacardisacontinuation card,andwhether the
3.4-32&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
fields aresingle (2words each)ordouble (4wordseach)inlength. Fields 2through 9(for
single fieldcards) or2through 5(fordouble fieldcards) arethenconsidered oneatatime.
Noconsideration ismadeforthelastfieldofanycard(words 19and20).
3.4.20.5 Design Requirements
I.AllBCDfields mustbeginwithanalphabetic character.
2.AllBCDfields aredefined tobeeightcharacters inlength. Nameswithlessthaneinht
characters willbefilled withBCDblanks.
3.Whenplaced intheuseroutput buffer, eachBCDfieldwillbedivided intotwofour-
character words (leftadjusted) andstored intwosuccessive locations oftheoutput bu#fer.
Theremainder ofthewordsisfilled withBCDblanks.
4.Special characters arenottobeusedaspartofaBCDfieldexcept for*and+infield
1(column I)whichindicate adouble fieldorsingle field (respectively) continuation card.
5.Thedatafields willbestored successively intheusersoutput buffer astheyare
encountered inscanning thecardimagefromlefttoright. Thenumber ofoutput coreloca-
tionsrequired perfield typevaries:
a.Integer field=1coreword(right adjusted).
b.BCDfield=2corewords.
c.Realsingle precision =1coreword,
d.Realdouble precision =2corewords.
e.Blankfield=1coreword(integer 0).
6.Thecardtypefield (field I)ofacontinuation cardwillnotbepassed alonntotheuser.
Twozerowordswillreplace theIDfieldintheoutput buffer. Thustheusercaneasily dis-
tinguish thedifference between acontinuation cardandanewcardtype.
7.Acheck forbulk data card types SEQGP andSEQEP ismade byRCARD. Fields 3,5,7,and9oi
these card types areprocessed byaspecial conversion.
Theinput within these special fields will besimilar totheDewey decimal notation and
consists ofamultiple digit integer anduptothree single digit sub-integers; e.g., (354.1.2)
and(267.5). Thespecial fields will beconverted toasingle integer bydropping anydecimal
points andappending anumber ofzeros equal tothree minus thenumber ofdecimal points in
theoriginal number; e.g., (354120) and(267500).
3.4-33 (311171)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
8.RCARDdoesnotknowthelength oftheusersoutput buffer, therefore, nocheck ismade
forexceeding thelength ofthebuffer. However, thenumber ofdatawords placed inthe
output buffer willbespecified inNFLAG.
9.Field I0willnotbepassed alongtotheuser.
3.4.20.6 Diagnostic Messages
Fields appearing tobeincorrect toRCARDwillcauseadiagnostic tobewritten onthe
system output filefollowed byacardformat heading, acardimageecho,andanunderlining of
thefieldinquestion. Also,the/SYSTEM/ N_G_flagisset.TRUE., azeroisplaced intheoutput
buffer forthefield, anda-Iisplaced intheformat buffer forthefield. RCARDwil3print
diagnostics forallfields appearing incorrect andmakeanormal return.
3.4-34&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.21 TAPBIT (Tape BitTest).
3.4.21.I Entry Point: TAPBIT.
3.4.21.2 Purpose
Toexamine thetapebitforapermanent GIN_filetodetermine theexistence ofaphysical
tapeforthatfile.
3.4.21.3 Calling Sequence
IF(TAPBIT(FILE)) GOT_&amp;hellip;
FILE istheGIN@filename (oneof&amp;rsquo;P_L&amp;rsquo;, &amp;lsquo;BPTP, &amp;lsquo;NPTP&amp;rsquo;, &amp;lsquo;UMF&amp;rsquo;,&amp;lsquo;NUMF&amp;rsquo;, &amp;lsquo;PLTI&amp;rsquo;,
&amp;lsquo;PLT2&amp;rsquo;, &amp;lsquo;INPT&amp;rsquo;).
3.4.21.4 Method
Thepermanent FISTissearched andthetapebitinthecorresponding FIATentry is
examined. Ifthebitison(indicating thepresence ofaphysical tape), TAPBIT will beset
.TRUE.. Otherwise itwillbeset.FALSE..
3.4.21.5 Design Requirements
ThetypeofTAPBIT must bedeclared L_GICAL.
3.4.21.6 Diagnostic Messages
Afatal calltoMESAGE occurs ifaGIN@filenameotherthanthose listed isused.
3.4-35&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.22 PEXIT (Problem Exit).
3.4.22.1 EntryPoint: PEXIT.
3,4.22.2 Purpose
Toterminate theprogram.
3.4.22.3 Calling Sequence
CALLPEXIT.
3.4.22.4 Method
Thediagnostic message queue ischecked andifnotemptythemessage writer MSGWRT is
called. Ifthecheckpoint flagissetacardispunched indicating theendoftherestart
checkpoint dictionary. Thesystem output buffers areflushed andthentheiobisterminated.
3.4.22.5 Design Requirements
PEXITmusthaveaccess totheF_RTRAN 1/9routines.
PEXITshould notbecalled bymodule writers. Termination should beviaacallto
MESAGE (i.e., CALLMESAGE(-61,O, NAME)).
3.4-36 (8/I/72)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.23 TMT_G_ (Time-To-Go).
3.4.23.1 EntryPoint: TMT_G_.
3.4.23.2 Purpose
Computes therunning timeremaining forthisNASTRAN problem.
3.4.23.3 Calling Sequence
CALLTMT_G_ (TIME)
TIME=Remaining timeininteger seconds.
3.4.23.4 Method
During NASTRAN problem initialization, onesystem cell issettotheproblem starting time
(PSTART) while another issettothemaximum running time (I_TIME) contained ontheExecutive
Control DeckTIMEcard. TIME-T_-G_ isthenfound byreading theclock (N_W) andsolving the
following:
TIME-T_-G_ =MXTIME -(N@W-PSTART).
TheCPUclock isutilized onallmachines except theiBM7094where noneisavailable.
3.4-37&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.24PAGE (Page Headinq).
3.4.24.1 Entry Points: PAGE, PAGEI, PAGE2
3.4.24.2 Purpose
Toprovide astandard pageheading forNASTRAN output.
3.4.24.3 Calling Sequence
CALLPAGE
CALLPAGEI
CALLPAGE2(N)
C_I_MON/SYSTEM/XXX,_TPE,SPACE(6),IPAGE,LINE,ITLINE,MAXLIN,DATE(3)
OTPE -Systemoutput unit-inteqer.
IPAGE-Current pagenumber-increased by1oneachcalltoPAGE.
LINE -Numberofdatalinesonprevious page-LINEissettozerobyPAGE.
ITLINE-Totalnumberoflinesofprintout inrun-ITLINE =ITLINE+LINE.
MAXLIN -Maximum numberofdatalinesallowed -ifITLINE&amp;gt;MAXLIN, PEXITwillbecalled.
DATE(3)- Today&amp;rsquo;s date: month,day,year-integer.
N -Numberoflinestobewritten -integer -input.
C_MM_N/_UTPUT/TITLE(32),SUBTIT(32),LABEL(32),NEADI(32),HEAD2(32),HEAD3(32)
3.4.24.4 Method
PAGEwrites astandard 6lineheading fromTITLE, SUBTIT, LABEL, HEAD1, HEAD2, HEAD3.
PAGE1writes onlythefirst3linesofastandard header.
PAGE2restores thepageifNlineswillnotfitonthecurrent page.
3.4.24.5 Design Requirements
ITLINEmustbelessthanMAXLIN. PAGEmusthaveaccess totheF_RTRAN I/_routines.
3.4-38&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.25 MESAGE (Message).
3.4.25.1 EntryPoint: MESAGE.
3.4.25.2 Purpose
Toqueue nonfatal messages during theexecution ofamodule; andforfatal messages give
coredump (CALL PDUMP), print themessage queue (CALL MSGWRT), andcallPEXIT.
3.4.25.3 Calling Sequence
CALLMESAGE(N_,PARM,N_E)
Where
N_=Internal message nun_er. N_positive defines themessage asnonfatal;
N_negative defines themessage asfatal.
PARM=Parameter used intheprinted message (usually theGIN_filenumber)
NAME(2) =Twowords usedintheprinted message (usually twoBCDwords containing the
nameofthesubroutine calling MESAGE).
3.4.25.4 Method
Non-fatal messages arequeued incommon block /MSGX/until themaximum number isreached.
Allnon-fatal messages after thisarelost. Whenafatal message isencountered, itisqueued
andappropriate action taken toterminate therun.
3.4.25.5 Design Requirements
Thesizeofcommon block /MSGX/limits thenumber ofmessages stored.
3.4-39 (12-I-69)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.2G MSGVIRT (Message Writer).
3.4.26.1 Entry Point: MSGiVRT.
3.4.26.2 Purpose
Toprint NASTRAN error messages onthesystem output file.
3.4.26.3 Calling Sequence
CALL MSG_RT
COHMON/MSGX/N,M,MSG(4,10)
where:
N-isthetotalnumber ofmessages tobeprinted.
M-maximum number ofmessages thatcanbequeued bysubroutine MESAGE inthearrayMSG.
MSG-arraywheremessage parameters arequeued.
MSG(I,I) -theinternal message number oftheIthmessage.
MSG(2,1) -ifIMSG(I,I)I _30,MSG(2,1) isaGIN_filenumber.
IfIMSG(I,I)I =30,thenMSG(2,1) isaninternal message number and
USRMSG iscalled.
MSG(3,1), MSG(4,1) =parameters fortheIthmessage.
3.4.26.4 Method
Theinternal message number, M(I,I), ifnotequalto30inabsolute value, isusedbyMSGWRT to
printouttheerrormessage alongwithexternal message number, which is3000plustheinternal
message number. Iftheinternal message number, M(I,I), is30,subroutine USRMSG iscalled.
3.4.26.5 Design Requirements
External message numbers output byMSGtVRT atpresent are3001through 3057.
MSGWRT iscalled onlybyNESAGE.
3.4-40 (12-I-69)&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIOI_S
3.4.27 USRMSG (User Message Writer).
3.4.27.1 Entry Point: USRMSG.
3.4.27.2 Purpose
Toprint mostNASTP,ANusererror messsges onthesystem output file.
3.4.27.3 Calling Sequence
CALLUSRMSG(I)
C_MM_N/MSGX/N,M,,MSG(4,10)
where:
I -Pointer intotheMSGarray.
N -NotusedinUSRMSG.
M -NotusedinUSRMSG.
MSG(!,!) -If!MSG(I,I)! =30,MSGNRT will callUSRMSG.
MSG(2,I) -UsedbyUSRMSG astheinternal message number.
MSG(3,I), MSG(4,I) -Parameters fortheIthmessage.
3.4.27.4 Method
USRMSG willprint appropriate error message along withexternal message number, which is
2000plus internal message nu_er.
3.4.27.5 Design Requirements
External message numbers output byUSRMSG atp,-esent are: 2001&amp;ndash;2140.
USRMSG iscalled onlybyMSGWRT.
3.4-41 (3/I/71)&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.28MATDUM (Matrix Dump (Print) Routine).
3.4.28.1 Entry Point: MATDUM.
3.4.28.2 Purpose
Toprint ageneral NASTRAN matrix.
3.4.28.3 Calling Sequence
CALLMATDUM(FILEA)
FILEA -Seven-word array (matrix control block)- integer
Word
1
2
3
4
5
6
7
3.4.28.4 MethodGIN_name
Number ofcolumns
Numberofrows
Formofmatrix
Typeofmatrix
Maximum number ofnon-zero termsinanycolumn
Undefined
Thenon-zero terms ofeachcolumn areunpacked andprinted.
Ifthematrix control block doesnotcontain legal values thetable printer (seesection
3.4.29) iscalled.
3.4.28.5 Design Requirements
Open coreat/TABPRX/.
MATDUM mustholdthenon-zero bandofthematrix inthis area.
Subroutine TABPRT andtheFORTRAN I/_routines must beavailable toMATDUM.
3.4-42&lt;/p&gt;
&lt;p&gt;UTILITYSUBROUTINE DESCRIPTIONS
3.4.29TABPRT (Table Printer).
3.4.29.1 Entry Point: TABPRT.
3.4.29.2 Purpose
Toprint anyNASTRAN DataBlock (especially tables).
3.4.29.3 Calling Sequence
CALLTABPRT(FILEN)
FILEN -GIN_ nameofdatablock -integer -input.
3.4.29.4 Method
Eachword isread, identified astotype&amp;ndash;integer, BCD,orrealnumber andprinted lO
characters perword, lOnumbers perline. Notethattheidentification method varies from
machine tomachine andisnotI00%certain, i.e., certain words maybemisidentified.
3.4.29.5 Design Requirements
Opencoreat/TABPRX/.
Double precision numbers will notbecorrectly interpreted ontheUnivac llO8.
3.4-43&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.30
3.4.30.I Entry Points: PREL_C, LBCATE.
3.4.30.2 PurposePREL(_C (Position DataBlocktoRequested Record).
Toprovide aconvenient means oflocating data records indata blocks output bythe
Input File Processor (IFP).
3.4.30.3 Calling Sequence
CALLPREL_C($n,BUFF,NAME)
n-F_RTRAN statement number defining return takenintheevent NAMEisnotinthe
FIST(i.e., datablock ispurged).
BUFF-Anarraywhosedimension equals thecontents ofthefirstwordof/SYSTEM/
plusone.UsedasaGIN_buffer byPREL_C andL_CATE.
NAME-GIN_filenameofdatablocktoberead(integer).
CALLL_CATE($n,BUFF,ID,IDX)
n-F_RTRAN statement number defining return takenintheeventthattherequested
record (defined byID)isnotpresent inthedatablock.
BUFF-ThesameBUFFassigned whenPRELOC wascalled.
ID-Theaddress ofatwo-word array. Thefirstwordistheinteger record identifi-
cation andthesecond wordisthebitposition inthetrailer forthedatablock
wherethepresence orabsence oftherecord isdefined.
IDX-Thecontents ofthethirdwordoftherecord foundwillbestored inIDX
(internal cardnumber generated byIFP).
Ifthedatablockisnotpurged, PREL_C willopenthefileandskiptheheader record.
2.Iftherequested record isnotpresent (asdetermined bytheappropriate trailer bit),no
I/_activity willoccur. Otherwise, LOCATE willposition thefiletoreadthefirstdataentryof
therequested record (i.e., afterthe3-word header fortherecord). See2.3.2forformat of
records andtrailer.Notes:
I.
3.4-44&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.Iftheuserdoesnotreadalldatainarecord andhewishes touseLOCATE tofind
another record, heshould useFWDREC toskiptheremainder ofthecurrent record prior tocalling
L_CATE.
4.Foroptimum efficiency inprocessing adatablock, theusershould callL_CATE in
theorder inwhich therecords appear onthedatablock, i.e.NASTRAN collating order.
3.4.30.4 Method
PRELOC stores NAME inBUFF(1) andthencalls _PEN using BUFF(2) asthebuffer address. If
thedatablock ispurged, thenon-standard return isqiven totheuser. Otherwise, FWDREC is
called toskiptheheader record andreturn ismadetotheuser. L@CATE calls RDTRL toreadthe
datablock trailer. Thebitposition identified byID(2) istested using ANDF. Ifzero, the
non-standard return isgiven. Otherwise, three words fromthefile areread. Ifthefirst word
equals ID(1), IDXissettothethird wordandreturn ismade. Otherwise, thefirst word issaved
andtheremainder oftherecord isskipped. Thefirst three words ofeachsuccessive record are
readandthetestforiietch onfirst wordismadeuntil (!)anend-of-file occurs inwhich case
thefileisrewound, theheader record skipped andtheprocess iscontinued, (2)amatch isfound
inwhich case IDXissetandreturn isgiven or(3)amatch with thefirst record readisfound
inwhich case therecord isskipped, awarning message isqueued andthenon-standard return is
given.
3.4.30.5 Diagnostic Messages
Thefollowing messages maybeissued byPREL_C:
2072
3002
3003
3.4-45&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
3.4.31 S_RTISortaTable).
3.4.31.1 EntryPoint: S_RT.
3.4.31.2 Purpose
Tosortacorecontained table, ortosortalogical record fromaspecified inputfile,
onaspecified keyword ineachentry.
3.4.31.3 Calling Sequences
Tosortacorecontained table:
CALLS_RT(O,O,NWDS,KEYWD,TA3LE,NTABLE)
NWDS
KEYWD
TABLE
NTABLE -Total
NWDS).
Tosortalogical record:
C_MM_N/SETUP/NFILE(6),BUF
CALLS_RT(INPFL,&lt;em&gt;UTFL,NWDS,KEYWD,BL_CK,NBL_CK)
NFILE -ThefirstthreewordsmustbesetbytheuserpriortoCALLS@RTwiththe
GINBfilenamesofthreescratch files forusebyS_RT. Uponreturn to
theuser,NFILE(6) willcontain theGIN_filenameofthefilecontaining
thesorted record.
BUF IfINPFL=BUTFL, thenBUFpoints toanareainBL@CKwhere aGINObuffer
isavailable forS_RT,i.e.,BL_CK(BUF) isthebuffer address.
Restriction: BUF&amp;gt;NBL_CK.
INPFL -GINOfilenameofdatablockcontaining theloaical record tohesorted.
&lt;em&gt;UTFL -GINOfilenameofdatablockwhere thesorted record istobewritten.
IfOUTFL=O,thesorted record willremain onNFILE(6).-Thenumber ofwords ineachentryofthetable. Restriction: NWDS&lt;/em&gt; 20.
-Theword positior&lt;/em&gt; within each entry onwhich thesort istotake nlace.
-Address where thetable isstored.
number ofwords inthetable (NTABLE must beanintegral multiple of
3.4-46&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
NWDS
KEYWD
BL_CK-Thenumber ofwords ineachentry oftherecord. Restriction: NWDS_20.
-Defined asabove.
-AnareaincoretobeusedbyS_RTtoperform thesortphase.
NBL_CK -Thenumber ofcomputer words available atBL_CK.
Notes:
I.INPFL mustbeopened andpositioned tothelogical record bytheuserprior to
entry toS_RT. Thefile isnotclosed byS_RT.
2.If_UTFL &lt;em&gt;O,thisfilemustbeopened andpositioned bytheuser prior toentry to
S_RT. Thefile isnotclosed byS_RT.
3.IfINPFL =&lt;em&gt;UTFL, thefileisclosed bySBRT, opened towrite withrewind, and
thesorted logical record iswritten asthefirst logical record onthefile. Thefileis
no___t_tclosed byS_RT.
A NPTI&lt;/em&gt;(A&lt;/em&gt; _cmlwmyc rlnc_H wifh rpwinH
3.4.31.4
I.Method
CpRESpRT. Themethod usedisashuttle exchange orbubble sortwhich isoptimum for
datawhichisnearly insort. Themethod isasfollows:
a.Thekeywordsoftwosuccessive entries arecompared. Ifcurrently insort,the
process isrepeated. Ifnot,
b.Asearch toward thebeginning ofthetableismadetodetermine theposition ofthe
out-of-sort entry.
c.Fromthisposition, thetableisshifted oneentryandtheout-of-sort entryis
inserted atitsproper position.
d.Ifthelastpairofentries havenotbeenanalyzed, theprocess returns tostep(a).
Otherwise thesortiscomplete.
2.FILES_RT. OneGIN_buffer isallocated attheendofBLBCKandascratch fileis
opened towrite. Asmanyentries ascanbeheldintheremaining coreinBL_CKarereadand
sorted usingthealgorithm above. Thesorted dataiswritten asalogical recordonthescratch
file. Thisprocess isrepeated untilalldataintheinputrecord hasbeenreadandthesorted
3.4-47&lt;/p&gt;
&lt;p&gt;SUBROUTINE DESCRIPTIONS
strings written onthescratch file. Ifonlyonesuchsortwasrequired, thesortiscomplete
except forcopying ontoOUTFL ifrequested. Otherwise, anoptimum distribution ofsorted recores
ontwoscratch filesiscomputed usingaFibonacci sequence. Thesorted strings areredistributed
between twoscratch filesandthemergephaseisentered. Thetwoscratch filesarereadone
entryatatime,merged, andnewsorted entries written onathirdscratch file. Notethat,usina
theFibonacci sequence, oneofthefilescontaining sorted strings willhaveagreater number of
strings (records) thantheother. Oneachpassinthemergenhase, themeraeoccurs untilthe
filewithfewerstrings isexhausted. Atthispoint, themerged filebecomes thefilewiththe
larger number ofsorted strings, theprevious larger filebecomes thefilewiththefewerstrinns,
andtheprevious filewithfewerstrings (which wasexhausted) becomes thefileontowhich the
merged strings arewritten. Theprocess continues untilthesortiscomplete. Theresulting
sorted record iscopied onto_UTFL ifrequested.
3.4.31.5 Design Requirements
Thenumber ofwords perentrymaynotexceed 20.(Achange inthedimension ofthelocal
variable TEMPmaybemadetorelaxthisrestriction.)
Theamount ofcoreavailable atBL_CKmustbeatleastoneGIN_buffer Dlus2&lt;em&gt;NWDS during
thecoresortphaseandthreeGIN_buffers plus2&lt;/em&gt;NWDS durin_ themerge nhase.
Thecoretableorlogical record tobesorted mustcontain anintegral number ofentries.
3.4.31.6 Diagnostic Messages
Thefollowing messages maybeissued byS_RT:
3001
3002
3008
3.4-48&lt;/p&gt;
&lt;p&gt;UTILITY SUBROUTINE DESCRIPTIONS
3.4.32 &lt;em&gt;MMATD (General Matrix Multiply andTranspose -Double Precision).
3.4.32.1 Entry Point: GMMATD.
3.4.32.2 Purpose
Toperform anyoneofthefollowing matrix operations:
[A][B]:[C] (1)
[A]T[B]=[C] (2)
[A][B]T=[C] (3)
[A]T[B]T=[C] (4)
[A][B]+[D]:[C] (5)
[A]T[B]+[D]=[C] (6)
[A][B]T+[D]=[C] (7)
[A]T[B]T+ [D]=[C] (8)
where [A],[B],[C],and [D]arerealdouble precision matrices Tk&lt;/em&gt;&amp;hellip;..*&lt;em&gt;&amp;quot; â€¢,,,,&lt;/em&gt;,uu_,neIsusedfor
small in-core matrices, innon-NASTRAN packed format, insuchnmdules asSMAI, SMA2, SMA3and
DSMGI.
3.4.32.3 Calling Sequence
CALLGMMATD(A,IR_WA,IC_LA,MTA,B,IR_WB,IC_LB,MTB,C)
A-Arealdouble precision matrix ofIR_WA rowsandIC_LA columns stored inthe
singly dimensioned double precision variable A.
N.B. Amust bestored byrows. Forexample, if
1.0 4.0
[A]:2.0 5.0,
.0 6.
then thematrix mustbestored intheF_RTRAN double precision array Aasfollows:
A(1) =l.O
A(2) =4.0
A(3) =2.0
A(4) =5.0
A(5) =3.0
3.4-49&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
