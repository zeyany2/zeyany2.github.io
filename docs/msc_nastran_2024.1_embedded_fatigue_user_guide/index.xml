<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOC REPO – MSC Nastran manuals</title>
    <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/</link>
    <description>Recent content in MSC Nastran manuals on DOC REPO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>User&#39;s Manual P1</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_001/</guid>
      <description>
        
        
        &lt;p&gt;MSC Nastran 202 4.1
Embedded Fatigue User’s GuideMSC Nastran Embedded Fatigue User’s Guide&lt;/p&gt;
&lt;p&gt;Worldwide Web
&lt;a href=&#34;https://www.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.hexagon.com&lt;/a&gt;
Support
&lt;a href=&#34;https://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com&lt;/a&gt;
Disclaimer
Hexagon reserves the right to make changes in specifications and other information contained in this document without prior notice.
The concepts, methods, and examples presented in this text are for illustrative and educational purposes only, and are not intended
to be exhaustive or to apply to any particular engineering problem or design. Hexagon assumes no liability or responsibility to any
person or company for direct or indirect damages resulting from the use of any information contained herein.
User Documentation: Copyright 2024 Hexagon AB and/or its subsidiaries. All Rights Reserved.
This notice shall be marked on any reproduction of this documentation, in whole or in part. Any reproduction or distribution of this
document, in whole or in part, without the prior written consent of Hexagon is prohibited.
This software may contain certain third-party software that is protected by copyright and licensed from Hexagon suppliers. Additional
terms and conditions and/or notices may apply for certain third party software. Such additional third party software terms and
conditions and/or notices may be set forth in documentation and/or at third-party software information  (or successor website designated
by Hexagon from time to time).
PCGLSS 8.0, Copyright © 1992-2016, Computational Applications and System Integration Inc. All rights reserved. PCGLSS 8.0 is
licensed from Computational Applications and System Integration Inc.
The Hexagon logo, Hexagon, MSC Software logo, MSC, Dytran, Marc, MSC Nastran, Patran, e -Xstream, Digimat, and Simulating
Reality are trademarks or registered trademarks of Hexagon AB and/or its subsidiaries in the United States and/or other countries.
NASTRAN is a registered trademark of NASA. FLEXlm and FlexNet Publisher are trademarks or registered trademarks of Flexera
Software. All other trademarks are the property of their respective owners.
Use, duplicate, or disclosure by the U.S. Government is subjected to restrictions as set forth in FAR 12.212 (Commercial Computer
Software) and DFARS 227.7202 (Commercial Computer Software and Commercial Computer Software Documentation), as
applicable.
U.S. Patent 9,361,413
May 16, 2024
NA:V202 4.1:Z:Z:Z:DC-FATIGUE-PDFCorporate Office
Hexagon Manufacturing Intelligence, Inc. UK
78 Portsmouth Road Cedar House
Cobham, Surrey KT11 1HY
Telephone: (+44) 02070686555&lt;/p&gt;
&lt;p&gt;Documentation Feedback
At Hexagon Manufacturing Intelligence, we strive to produce the highest quality documentation and
welcome your feedback. If you have comments or suggestions about our documentation, write to us .
Please include the following information with your feedback:
Document name
Release/Version number
Chapter/Section name
Topic title (for Online Help)
Brief description of the content (for example, incomplete/incorrect information, grammatical
errors, information that requires clarification or more details and so on).
Your suggestions for correcting/improving documentation
Note:   The above mentioned e-mail address is only for providing documentation specific
feedback. If you have any technical problems, issues, or queries, please contact Technical
Support .&lt;/p&gt;
&lt;p&gt;C o n t e n t s
MSC Nastran Embedded Fatigue User’s Guide
Contents
Main Index
Contents
Preface
About this Book  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
List of MSC Nastran Guides . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
Accessing MSC Nastran Manuals  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
Training and Internet Resources . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  10
Technical Support  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  11
1 Fundamentals of Fatigue Analysis
What is Fatigue . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  2
Five Box Trick of Fatigue Analysis  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  3
Life P rediction Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
Finite El ement Analysis Methods  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
Design Phi losophies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
Life Estimation Process . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
When to Use Which Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
2 Introduction to User Interface
Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  10
FATIGUE Case Control  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  14
Fatigue Element Definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  20
Fatigue Parameters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  40
Fatigue Loading  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  51
Analysis Model Units  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  62
Fatigue Optimization  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  63
Tips for Enhancing Pe rformance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  71&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide2
Main Index
3 A Simple S-N Analysis
Problem Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  76
Fatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  77
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  88
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  94
CAEfatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  103
4 Rainflow Cycle Counting
Proble m Descrip tion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  114
Fatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  115
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  124
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  125
5 A Simple e-N Analysis
Pro blem Desc ription  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  132
Fatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  133
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  151
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  151
6 Multiple Loading
Pro blem D escription  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  158
Fatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  160
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  166
7 A Simple Duty Cycle
Pro blem Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  174
Fatigue Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  177
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  186
8 Modal Transient Analysis
Pro blem Description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  194
Quasi-static Method  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  195&lt;/p&gt;
&lt;p&gt;3 Contents
Main Index
Modal Transient Method  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  199
Modal Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  204
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  210
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  211
9 Design Optimization
Pro blem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  224
Fatigue Setup  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  234
10 Spot Welds
Pro blem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  240
Fatigue Setup  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  245
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  254
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  255
11 Seam Welds
Pro blem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  266
Fatigue Setup  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  276
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  280
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  281
12 A Multiaxial Assessment
Problem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  288
Fatigue Setup  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  298
Concluding Remarks  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  306
Patran Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  307
A Restart s
Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  316
Automatic Restarts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  316
Special Manual Restarts  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  318&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide4
M ain Index
B Superelement s
Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  320
List Superelements  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  322Part Superelements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  323
C Utilities
Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  328Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  328Descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  329Batch Operation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  334
User Environment (MENM) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  334
Material  Management (PFMAT) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  340
Advanced Loading Utilities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   388
Advanced Fatigue Utilities. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  565Graphics Display Utilities. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  717File Conversion Utilities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  763
Glossary
References&lt;/p&gt;
&lt;p&gt;Main Index
Preface
Preface
About this Book     6
List of MSC Nastran Guides     7
Accessing MSC Nastran Manuals     8
Training and Internet Resources      10
Technical Support     11&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
About this Book6
M ain Index
About this Book
The MSC Nastran Embedded Fatigue User’s Guide is a guide to the proper use of MSC Nastran for solving
various fatigue analysis problems in the time domain. This guide serves as both an introduction to fatigue
analysis for the new user and a reference for the experienced user. The major emphasis focuses on understanding the physical processes in fatigue and properly applying MSC Nastran to model the fatigue processes while restricting mathematical derivations to a minimum.
The purpose of this manual is to provide you with typical example problems to demonstrate usage of the
program. Each example is designed to show certain aspects and help to convey various principles of time domain fatigue life estimation. There is also a companion User’s Guide for frequency domain fatigue life estimation. (Please see the
MSC Nastran Embedded Vibration Fatigue User’s Guide .) The intent is to get you up to
speed as quickly as possible without a steep learning curve or hours sifting through a thick manual.
The basic time domain based fatigue analysis capabilities available in MSC Nastran are described in this
guide. These common fatigue analysis capabilities include stress-life (S-N), sometimes referred to as total life ,
and strain-life ( -N), more commonly know as crack initiation , and how to apply these using statics, normal
modes and, modal transient response analyses. These capabilities are described and illustrative examples are presented. Theory used in fatigue analysis is presented only as it pertains to the proper understanding of the use of each capability.
Prerequisites
To effectively use this guide, it is important for you to be familiar with MSC Nastran’s static and/or dynamic analysis capabilities and the principles of static and/or dynamic analysis. Basic finite element modeling and analysis techniques are covered only as they pertain to MSC Nastran fatigue analysis. For more information on static and dynamic analysis and modeling, refer to the
MSC Nastran Linear Static Analysis User’s Guide , the MSC
Nastran Dynamic Analysis User’s Guide , and to the Getting Started with MSC Nastran User’s Guide . For fatigue analysis
in the frequency domain (sometimes called vibration fatigue or spectral fatigue), please see MSC Nastran
Embedded Vibration Fatigue User’s Guide .
Assumptions
This guide makes certain assumptions of the reader. The basic assumptions made are, a good knowledge of basic computer skills and terminology, and a working knowledge of finite element analysis using MSC Nastran. This manual does not deal with creation of finite element models or any aspects of actual finite element analyses except where necessary to achieve proper fatigue life estimations.
This manual assumes that the user has little or no experience with fatigue analysis in general and therefore
makes every effort to explain principles of fatigue life estimation from example to example. It is not meant to be an exhaustive course on fatigue analysis however. For this we refer you to the many references sited in the
References .
This guide contains many highlighted links (text in blue) to other MSC Nastran documents. All the documents are delivered together as a collection. The links between the documents will work, if you keep the collection together.&lt;/p&gt;
&lt;p&gt;7 CHAPTER
Preface
M ain Index
Organization of the Guide
All chapters starting with Chapter 3, serve as tutorials to learn the basics of time domain fatigue analysis using
MSC Nastran. Please see the MSC Nastran Embedded Vibration Fatigue User’s Guide  for frequency based fatigue
analysis tutorials.
First read this chapter in its entirety and then familiarize yourself with the Nastran case control and bulk data
input in the next chapter, after which it is highly suggested that you start at the first example and work your way sequentially. Each exercise introduces concepts that build on each other from exercise to exercise.
This manual contains many highlighted links (in blue) to other MSC Nastran documents and all the
documents are delivered together as a documentation set. If you keep the documentation set together the links between documents will work.
Two ways of working with links are as follows:
Click on the link to open another document. Use alt(alt + backspace) to return to the original
document.
If you know to which document the hyperlink is referring to, open that document in Adobe Reader.
Perform the following steps:
a. Choose Edit Preferences  Documents
b. Uncheck the Open cross-document links in same window option
c. Select OK
This guide incorporates all capabilities related to fatigue analysis into one place except the description of each
release’s capabilities in the Release Guides and quick and direct access to fatigue related case control and bulk data in the
MSC Nastran Quick Reference Guide  (QRG).
List of MSC Nastran Guides
A list of some of the MSC Nastran guides is as follows:Note:  Throughout this manual terms in blue italics  mean there is a definition provided in the Glossary .
Installation and Release Guides
Installation and Operations Guide
Release Guide
Reference Guides
Quick Reference Guide
DMAP Programmer’s Guide
Reference Guide
Utilities Guide
Getting Started Guide&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Accessing MSC Nastran Manuals8
Main Index
You may find any of these documents from Hexagon at:
&lt;a href=&#34;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page&lt;/a&gt;
Accessing MSC Nastran Manuals
This section describes how to access the MSC Nastran documentation outside of Hexagon. MSC Nastran
documentation is available through PDF  files. The PDF files can be obtained from the following sources:
MSC Nastran documentation installer
SimCompanion
Combined documentationSOL 400 Getting Started Guide
MSC Nastran Error Messages Guide
Demonstration Guides
Linear Analysis
Implicit Nonlinear (SOL 400)
Explicit Nonlinear (SOL 700)
MSC Nastran Verification Guide
User’s Guides
Automated Component Modal Synthesis (ACMS)
Access Manual
Aeroelastic Analysis
Design Sensitivity and Optimization
DEMATD
Dynamic Analysis
Embedded Fatigue
Embedded Vibration Fatigue
Explicit Nonlinear (SOL 700)
High Performance Computing
Linear Static Analysis
Nonlinear (SOL 400)
Numerical Methods
Rotordynamics
Superelements and Modules
Thermal Analysis
User Defined Services&lt;/p&gt;
&lt;p&gt;9 CHAPTER
Preface
Main Index
The PDF documentation files are appropriate for viewing and printing with Adobe Acrobat Reader  (version
5.0 or higher), which is available for most Windows and Linux systems. These files are identified by a .pdf
suffix in their file names .
Downloading the PDF Documentation Files
You can download the PDF documentation from SimCompanion ( &lt;a href=&#34;http://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://simcompanion.hexagon.com&lt;/a&gt; ).
Navigating the PDF Files
For the purpose of easier online document navigation, the PDF files contain hyperlinks in the table of&lt;br&gt;
contents and index. In addition, links to other guides, hyperlinks to all cross-references to chapters, sections,&lt;br&gt;
figures, tables, bibliography, and index entries have been applied.
Printing the PDF Files
Adobe Acrobat PDF files are provided for printing all or part of the manuals. You can select the paper size to
which you are printing in Adobe Acrobat Reader by doing the following:
1.Click File.
2.Select the Print &amp;hellip;. option. The Print  dialog box is displayed.
3.Select Page Setup &amp;hellip;.
4.Choose the required paper size in the Page Setup  menu.
The PDF files are recommended when printing long sections  since the printout will have a higher quality.
If the page is too large to fit  on your paper size, you can reduce it by doing the following:
1.Select the  File -&amp;gt; Print .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Training and Internet Resources10
Main Index
2.Under Page Scaling, choose the Shrink to Printable Area option.
Training and Internet Resources
Hexagon corporate site has the information on the latest events, products and services for the
CAD/CAE/CAM marketplace.
&lt;a href=&#34;http://simcompanion.hexagon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://simcompanion.hexagon.com&lt;/a&gt;&lt;br&gt;
The SimCompanion link above gives you access to the wealth of resources for Hexagon products. Here you
will find product and support contact information, product documentations, knowledge base articles,
product error list, knowledge base articles and SimAcademy Webinars. It is a searchable database which allows
you to find articles relevant to your inquiry. Valid MSC customer entitlement and login is required to access
the database and documents. It is a single sign-on that gives you access to product documentation for
complete list of products from Hexagon, allows you to manage your support cases, and participate in our
discussion forums.
Design and Engineering e-Learning
The MSC-T raining link above will point you to schedule and description of MSC Seminars. Following
courses are recommended for beginning Nastran users.
NAS120 - Linear Static Analysis using MSC Nastran and Patran
This seminar introduces basic finite element analysis techniques for linear static, normal modes, and buckling
analysis of structures using MSC Nastran and Patran. MSC Nastran data structure, the element library,
modeling practices, model validation, and guidelines for efficient solutions are discussed and illustrated with
examples and workshops. Patran will be an integral part of the examples and workshops and will be used to&lt;/p&gt;
&lt;p&gt;11 CHAPTER
Preface
Main Index
generate and verify illustrative MSC Nastran models, manage analysis submission requests, and visualize
results. This seminar provides the foundation required for intermediate and advanced MSC Nastran
applications.
Technical Support
If you encounter difficulties while using MSC Nastran, first please refer to the section(s) of the manual&lt;br&gt;
containing information on the commands you are trying to use or the type of problem you are trying  to solve.
Visit SimCompanion
The product documentation is available in SimCompanion  (&lt;a href=&#34;http://simcompanion.hexagon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://simcompanion.hexagon&lt;/a&gt;. com). The
SimCompanion gives you access to a wealth of resources for Hexagon products. You will find various
information such as:
Product documentations
Knowledge base articles
Product error lists (fixed and known issues for each release)
SimAcademy webinars
Product and support contact information
SimCompanion is a searchable database which allows you to find articles relevant to your inquiry. Valid MSC
customer entitlement and login is required to access the database and documents. It is a single sign-on that
gives you access to product documentation for complete list of products from Hexagon, allows you to
manage your support cases, and participate in our discussion forums.
Help Us Help You
Clients frequently call up the support engineers at Hexagon with enquiry regarding models that do not run
correctly. Our  technical support staff can help you much more efficiently and effectively if you are working
with a small model, since  debugging a small model is much easier, and the turnaround time to rerun a
(hopefully) corrected test model is minutes  rather than hours.
For information on the latest events, products and services for all products, visit www. hexagon. com.
For technical support phone numbers and contact information, please visit:
&lt;a href=&#34;https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Technical Support12
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 1: Fundamentals of Fatigue Analysis
1 Fundamentals of Fatigue
Analysis
What is Fatigue
Five Box Trick of Fatigue Analysis
Life Prediction Methods
Finite Element Analysis Methods
Design Philosophies
Life Estimation Process
When to Use Which Method&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
What is Fatigue2
Main Index
What is Fatigue
Very often the terms fatigue , fracture , and durability  are used  interchangeably. However, each of them convey
a specific meaning.
Fatigue : This is a failure under a repeated or otherwise varying load which never reaches a level
sufficient to cause  failure in a single application. It can also be thought of as the initiation and
growth of a crack, or growth from a pre-existing defect,  until it reaches a critical size, such as
separation into two or more parts.
Fatigue analysis itself usually refers to one of two methodologies: either the  Stress-Life (S-N)  or S-N
method, commonly referred to as Total Life  since it makes no distinction between initiating or
growing a crack, or the Local Strain  or Strain-Life (e-N)  method, commonly referred to as the
Crack Initiation  method which concerns itself only with the initiation of a crack.
Fracture : A fracture is the growth or propagation of a crack once it has been initiated. Fracture also
denotes sudden  breakage of a component or structure in two. However for the purposes of this
manual it refers to the life  prediction method of crack growth as implemented using Linear Elastic
Fracture Mechanics ( LEFM ).
MSC  Nastran fatigue analysis concerns itself only with the prior two types of fatigue analysis and is
not applicable for crack growth or propagation. For this capability refer to MSC Nastran’s  cohesive
zone modeling and/or virtual crack closure technique (VCCT) or MSC Fatigue, which uses a LEFM&lt;br&gt;
method for crack growth prediction.
Durability: It is the conglomeration of all aspects that effect the life of a product and usually
concerns itself  with much more than just fatigue and fracture, but also loading conditions,
environmental concerns,  material characterizations, and testing simulations to name a few. A true
product durability program in  an organization that takes all of these aspects and more into
consideration .
Note:   Fatigue cracks initiate and grow as a result of cyclic plastic deformation. Without plasticity there
can be no fatigue failure. All attempts are made in this guide to explain how plasticity is taken
into account when determining fatigue life from linear elastic finite element analysis.&lt;/p&gt;
&lt;p&gt;3 CHAPTER 1
Fundamentals of Fatigue Analysis
Main Index
Five Box Trick of Fatigue Analysis
These fatigue analysis example exercises are constructed around the concept of the fatigue “five-box trick.”
The illustration below depicts this well. For any life analysis whether it be fatigue or fracture there are always
three inputs. The first three boxes are the inputs; box four is the analysis; and box five contains the results.
1.Cyclic Mat erial Information : Materials behave differently when they are subject to cyclic  as opposed
to monotonic  loading. Monotonic Properties  are the result of material tests where the load is steadily
increased until the test coupon breaks. Cyclic Properties  are obtained from material tests where the
loading is reversed and cycled until failure at various load levels. These parameters differ depending
on the fatigue analysis type involved.
2.Service Loadi ng Information : The proper specification of the variation of the loading is extremely
important to achieve an accurate fatigue life prediction. The loading can be defined in various
manners. Whether it be time based, frequency based, or in the form of some sort of spectra depends
on the fatigue analysis type to be used. When working with finite element models the loading can be
force, pressure, temperature, displacement, or a number of other types. Loading in the test world
usually refers to the acquisition of a response measurement, usually from a strain gauge.
3.Geometry Information : Geometry has different meanings depending on whether you are working
from a finite element model or from a test specimen. In the testing world, the geometry input is the
Kt (stress concentration factor) since the point of failure is usually away from the actual point of
measurement. Therefore a geometry Stress Concentration Factor, Kt, is defined to relate the
measured response to that at the failure location. You can think of this as a fudge factor. The
corresponding role of finite elements is to produce fields of Kt over the entire model, with the
additional complication that these local stress concentration factors are in the form of stress tensors.
4.Analysis : The correctness and accuracy of each of the above inputs is important in that any error in
any of these will be magnified through the fatigue analysis procedure, the fourth box, since this
process is logarithmic. A ten percent error in loading magnitude could result in a 100% error in the
predicted fatigue life. In a conventional finite element based fatigue analysis, the 4th box often
contains both the stress prediction and fatigue life calculation.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Life Prediction Methods4
Main Index
5.Results : The fifth box is the postprocessing or results evaluation. This can take on the form of color
contours on a finite element model or a tabular listing but also quite often leads back into the three
inputs to see what effect variations of these inputs will have on the life prediction. This is referred to
as a sensitivity or a “what if” study. This is extremely useful at times when you are not quite sure about
the accuracy of one of the inputs. This then leads to design optimization using fatigue life as a design
constraint or possibly even as a design objective.
Life P rediction Methods
There are three main life prediction methods as already mentioned earlier. These are Total Life , Crack
Initiation , and  Crack Growth (Propagation) . T otal life is aptly named in that only the total life of the
component is of concern and not when a crack will initiate or how quickly it will grow.
The three methods are related to each other by the fact that the total number of cycles to failure, Nf, equals
the number of cycles to initiate a crack, Ni, plus the number of cycles to propagate that crack, Np. The three
methods have grown out of different needs over the decades using different techniques and having different
degrees of accuracy. So in theory this equation is true, but in practice when applying the three methods to
the same problem, rarely, if ever does it add up.
In reality however, rarely are all three methods used on the same problem, mainly because different industries
adopt different analysis methods depending on the driving design philosophy. See Design Philosophies, 5 .
Finite El ement Analysis Methods
In order to do life predictions, MSC Nastran embedded fatigue analysis supports use of stress-life and strain-
life methods using the stress/strain response results from different finite element (FE) analysi s techniques.
The table below summarizes which FE analysis types are applicable to which life prediction methods in this
release of the software.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P10</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_010/</guid>
      <description>
        
        
        &lt;p&gt;165 CHAPTER 6
Multiple Loading
Main Index
Fatigue Equivalent Units
Each repeat of the combined load history is equal to 1000 flights. This is defined on the FTGSEQ  entry using
the UNITS flag. Fatigue lives are reported back in both Repeats  of the combined time history and Flights .
Fatigue Results
Run the mountingLUG_v1.dat  or mountingLUG_v2.dat file using a supported version of MSC
Nastran (201 6). Then inspect the mountingLUG.f06  file. Results show a fatigue life of approximately
106.4 or around 2.5 million Flights . The design life of the part is 30,000 Flights .
Factor of Safety Analysis
If you do a factor of safety analysis by including the following in the input deck (see
mountingLUG_v3.dat) ,
FTGPARM 44      SN      1.0
STRESS  ABSMAXPRGOODMAN         NOD A
CERTNTY 96.0
FOS     LIFE    30000.0 1.0     20.0
this calculation indicates that a factor of 2.2 would have to be applied to the loads to cause failure according
to the design criterion. However, a factor of 2.2 puts the largest cycle apparently above the UTS of the
material. This is a shortcoming of the S-N method, due to the fact that it does not model yielding and load
redistribution at all. If we wanted to design this component so that it only just survived the design life, we
would need to use the local strain or -N (strain-life or crack initiation) approach, which is more appropriate
for low-cycle fatigue problems.Caution:   In order to properly do linear superposition, it is important that all the time variations used
in the same analysis have the same sample rate (same number of total points). A fatal error
will occur otherwise.
EVENT ID  ALL EVENTS  FATIGUE ID      44
F A T I G U E   R E S P O N S E   I N   Q U A D 8   E L E M E N T S               OPTION =NOD A
ELEMENT    GRID LAYER      LIFE    LOG-LIFE       LIFE    LOG-LIFE     DAMAGE       LOG       MAXIMUM      MINIMUM      SAFETY
ID        ID         (       REPEATS      ) (FLIGHTS             )                DAMAGE     STRESS       STRESS      FACTOR
165     1062  Z1    0.2650E+04     3.423   0.2650E+07     6.423   0.3774E-03    -3.423   0.4400E+03   0.8350E-01       &lt;br&gt;
1120  Z1    0.2387E+04     3.378   0.2387E+07     6.378   0.4189E-03    -3.378   0.4502E+03   0.1658E+01       &lt;br&gt;
1117  Z1    0.1070E+05     4.029   0.1070E+08     7.029   0.9349E-04    -4.029   0.3413E+03   0.1838E+01       &lt;br&gt;
1059  Z1    0.1109E+05     4.045   0.1109E+08     7.045   0.9020E-04    -4.045   0.3384E+03   0.1127E+01       &lt;br&gt;
166     1120  Z1    0.2375E+04     3.376   0.2375E+07     6.376   0.4211E-03    -3.376   0.4506E+03   0.1640E+01       &lt;br&gt;
1178  Z1    0.2657E+04     3.424   0.2657E+07     6.424   0.3763E-03    -3.424   0.4403E+03   0.2563E+01       &lt;br&gt;
1175  Z1    0.1283E+05     4.108   0.1283E+08     7.108   0.7792E-04    -4.108   0.3283E+03   0.1743E+01       &lt;br&gt;
1117  Z1    0.1070E+05     4.029   0.1070E+08     7.029   0.9342E-04    -4.030   0.3412E+03   0.1844E+01&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup166
Main Index
Stress Offsets
It is also possible to explore offsetting the load by imposing a residual stress or an offset stress state. By using
the STATIC  flag in the TYPE field of the FTGLOAD  entry a subcase’s stress state can be used as a constant offset
with no cyclic time variation. In this example, one of the subcases or an additional subcase could simulate the
mounting lug subject to a constant acceleration, thus offsetting the stress states of the other subcases during
the superposition process.&lt;br&gt;
This is explained in the following example— if the last subcase of our example were this offset stress state (see
mountingLUG_v4.dat ). The cyclic load is associated with this subcase (TID field is left blank and
TYPE= STATIC ).
FTGSEQ  44
33      1.0
UNITS   1000.0  Flights
FTGEVNT 33      101     103     105     107
FTGLOAD 101     111     1       0.924   1.0     0.0     DB
FTGLOAD 103     113     3       1.023   1.0     0.0     DB
FTGLOAD 105     115     5       1.121   1.0     0.0     DB
FTGLOAD 107     117     7       1.218   1.0     0.0     DB
FTGLOAD 108             8       1.0     1.0     0.0     STATIC
UDNAME  111
./xpos.dac
UDNAME  113
./ypos.dac
UDNAME  115
./xneg.dac
UDNAME  117
./yneg.dac
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
1.Start Patran and open a new Patran database and name it mountingLUG .                                                                                            EVENT ID  ALL EVENTS  FATIGUE ID      44
F A T I G U E   R E S P O N S E   I N   Q U A D 8   E L E M E N T S               OPTION =NOD A
ELEMENT    GRID LAYER      LIFE    LOG-LIFE       LIFE    LOG-LIFE     DAMAGE       LOG       MAXIMUM      MINIMUM      SAFETY
ID        ID         (       REPEATS      ) (FLIGHTS             )                DAMAGE     STRESS       STRESS      FACTOR
165     1062  Z1    0.3005E+02     1.478   0.3005E+05     4.478   0.3328E-01    -1.478   0.1000E+04   0.1898E+00   0.2273E+01
1120  Z1    0.2994E+02     1.476   0.2994E+05     4.476   0.3340E-01    -1.476   0.9999E+03   0.3683E+01   0.2221E+01
1117  Z1    0.2980E+02     1.474   0.2980E+05     4.474   0.3356E-01    -1.474   0.1001E+04   0.5391E+01   0.2933E+01
1059  Z1    0.2989E+02     1.476   0.2989E+05     4.476   0.3345E-01    -1.476   0.1001E+04   0.3334E+01   0.2959E+01
166     1120  Z1    0.2973E+02     1.473   0.2973E+05     4.473   0.3364E-01    -1.473   0.1001E+04   0.3644E+01   0.2221E+01
1178  Z1    0.2994E+02     1.476   0.2994E+05     4.476   0.3340E-01    -1.476   0.9991E+03   0.5815E+01   0.2269E+01
1175  Z1    0.2989E+02     1.476   0.2989E+05     4.476   0.3346E-01    -1.475   0.9997E+03   0.5307E+01   0.3045E+01
1117  Z1    0.2983E+02     1.475   0.2983E+05     4.475   0.3353E-01    -1.475   0.1001E+04   0.5408E+01   0.2933E+01&lt;/p&gt;
&lt;p&gt;167 CHAPTER 6
Multiple Loading
Main Index
2.Use the Analysis  application to import the first input deck associated with this example:
mountingLUG_v1.dat  (Action =Read Input File).
3.Ensure Analysis Preference  is set to MSC.Nastran.
Step 2: Check the Model
1.Go to the Loads/BCs  application. Plot the LBC markers ( Action : Plot Markers).
2.Make sure the Current Load Case is the imported load case ( LOAD_CASE.n.SCn ), where n
represents the load case number (1-8).
3.Select all the LBCs and click Apply .
4.Repeat this for the other Load Cases so you can see how the loading is defined around the inside of
the mounting lug.
5.Go to the Materials  application. Set the Action  to Modify and select the only available material. Note
the values in the Linear Elastic constitutive model. If there is no current Stress-Life (SN) constitutive
model, create one. If there is, verify the following parameters, which are written to the MATFTG  entry:
6.Go to the Element Properties  application. Set the Action  to Modify .
7.Select the only property defined.
Note the properties defined here. All fatigue element properties are defined here. Make sure the
following are set below. Any property not mentioned should be left blank. Values for the fatigue
properties, are placed on the PFTG entry. All other pertinent properties are part of the PSHELL entry
and related elements for this model.Parameter Value
Constitutive Model: Stress-Life (SN)
Options: Standard Parameters
Group: None
Type: None
Ultimate Tensile Strength 986.0
Yield Stress 925.0
Stress Range Intercept 1.188e4
1st Strength Exponent -0.2588
T ransition Point 1.0e7
2nd Strength Exponent 0.0
Standard Error of Log(N) 0.05
Parameter Value
[Layer] Worst
[Surface Finish] None&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup168
Main Index
Step 3: Check the Fatigue Parameters
1.Go to the Analysis  application ( Action : Analyze ). Since we read the existing job
mountingLUG_v1.dat , a job by the name of mountingLUG_v1  has been created.
2.Click on it to restore all its settings.
3.Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form.
4.Check the Fatigue Parameters&amp;hellip;&lt;br&gt;
a.Open this form and ensure the following parameters are set, which are written to the FTGPARM&lt;br&gt;
entry.
b.If a parameter is not mentioned below, use the default value or leave it blank.
c.Click OK.
5.In order to post-process the fatigue results in Patran, make sure that the results are written to the
MASTER/DBALL  files. To do this, open the Solution Parameters&amp;hellip; form in the Results Output
Format&amp;hellip; form. Turn on the MASTER/DBALL  option.
Step 4: Check the Output Requests
1.In the Analysis  application, click on the Subcases&amp;hellip;  form.
Our subcase is called LOAD_CASE.n.SCn , where n is the subcase number.
Click on LOAD_CASE.1.SC1  from the Available Subcases  list box to access all its settings. Then
open the Output Requests&amp;hellip;  form. It is best to set this form to the advanced setting ( Form Type: ).
2.If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an -N  material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed. At this point, nothing further is need to be defined on this form unless
you want to limit the elements included in the analysis in which cas you would select items from the
two top list boxes on the right side of the form in advanced mode.Parameter Value
General Parameters:
Stress Units: MPa
Stress Combination: Abs. Max. Principal
Results Location: Nodal Averaged
Certainty of Survival (%): 96
Stress-Life (S-N):
Run SN Analysis ON
Mean Stress Correction: Goodman&lt;/p&gt;
&lt;p&gt;169 CHAPTER 6
Multiple Loading
Main Index
Fatigue life output requests are subcase independent unlike most standard output requests such as
stress and displacement. If you are using multiple subcases, the first subcase selected (see the next step)
must have the Fatigue Life  output request in it. Thus, it is not necessary in this example to open each
subcase and ensure that FATIGUE is set as an output request.
3.After inspecting this form and adding the fatigue output request, close the form and click Apply  on
the Subcases&amp;hellip;  form to store the changes to this subcase.
Step 5: Check the Cyclic Load Definition
1.In the Analysis  application, open the Subcase Select&amp;hellip;  form. All eight (8) of our subcases should
present in the bottom list box.
2.Open the Define Fatigue Load Sequences&amp;hellip;  form.
a.Ensure that the loading associations are set up properly.
b.For the loading in this example, we want to associate four of the subcases to external DAC files
as shown here. Change the Max # of Static Load Cases to 4 and press the Enter  or Return  key.
This places four rows in the spreadsheet.
The xpos.dac, ypos.dac, xneg.dac , and yneg.dac files should be located in your
working directory.
3.Click on the cell under the Subcase  column in the spreadsheet and then select the subcase from the
bottom list box. The next cell should become selected or active.
4. Fill out the spreadsheet as shown here if not already filled out.
5.Click on the cell under the Subcase  column in the spreadsheet and then select the subcase from the
bottom list box. The next cell should become selected or active.
6.Click on the cell under the Time History column, if necessary, and select the Time History
(.dac) file from the appropriate list box. The cell just needs to be selected and active to make
selection.
Enter the Load Magnitude and press the Enter  or Return  key to accept the value into the selected
cell. Leave the Scale Factor  and Offset  with default values.
7.On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined.
8.To create these from scratch, remove all the existing load sequences using the right mouse button by
click on Load Sequences and select Remove All Sequences . Then, follow these instructions:
a.Use the right mouse button to click on the Load Sequences  and Add a New Sequence. Subcase Time HistoryLoad
Magnitude Scale Factor Offset
LOAD_CASE.1.SC1 xpos.dac 0.924 1.0 0.0
LOAD_CASE.3.SC3 ypos.dac 1.023 1.0 0.0
LOAD_CASE.5.SC5 xneg.dac 1.121 1.0 0.0
LOAD_CASE.7.SC7 yneg.dac 1.218 1.0 0.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup170
Main Index
b.Right-click on the new sequence and Add Event .
c.Select only one event from the list box that appears.
d.Click Apply .
The load sequence is now defined. However, you want the fatigue life to be reported back as Cycles
and not Repeats  of the time history. Each Repeat  is equivalent to 1000  Flights .
9.To report fatigue life back as Cycles and not Repeats  of the time history, do the following:
a.Right mouse click on the load sequence you created.
b.Select Edit Sequence&amp;hellip; . In the subordinate form that appears, change Repeats  to 1000 Flights .
c.Click Apply .
Make sure the 1000  is place in the data box next to data box you changed Repeats  to Flights .
You can view the time history by using the Time History Manager  button. This launches a utility to
view and manage these DAC files. To use this utility, the DAC file must first be loaded into its
database. Then you can graphically view it. The operation of this utility is easy and intuitive. Patran
operation will be suspended until you exit from the utility.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD /UDNAME  entries. You can close the Load
Sequence  form using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
1.When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set the following:
•Action: Access Results
•Object: Attach MASTER
•Method : Result Entities.
2.Select the mountingLUG_v1.MASTER  file and click Apply .
3.Go to the Results  application and view the results by selecting Log of Damage  or Log of Life.
4.Repeat using the mountingLUG_v1:SN_42 results case.
Step 8: Run other Fatigue Jobs
To run the other jobs from this Chapter, you can import each input deck into a new empty database and
repeat the steps here making modifications as necessary and shown below for each different input deck. Or
you can define new jobs in the same database by selecting the existing job mountingLUG_v1  and then
renaming it and making the modifications as necessary. The table below lists the modifications necessary for
each with the first as a baseline.&lt;/p&gt;
&lt;p&gt;171 CHAPTER 6
Multiple Loading
Main Index
Whenever you change a job name, reselect the subcases for your job and redefine the loading sequence. Also,
inspect the selected subcases and loading sequence before submitting the job.
Input Deck Modification
mountingLUG_v1.dat Baseline . No modifications necessary
mountingLUG_v2.dat Create a group with only the inner ring of elements of the mounting
lug. The setup is the same as the previous job except that in the Output
Requests&amp;hellip;  form when defining Subcases&amp;hellip; .
Select the group you created as Selected Group(s) as part of the Fatigue
Life output request for the first subcase, LOADCASE.1.SC1 .
mountingLUG_v3.dat The setup up for this job is the same as the previous job except that you
need to turn ON the Factor of Safety request in the Fatigue
Parameters&amp;hellip; form.
Set Design Life  to 30,000  (Flights ). The other parameters can be left
with their default settings.
mountingLUG_v4.dat T urn OFF the Factor of Safety  from the previous job and go to the
Define Fatigue Load Sequence&amp;hellip;  form from the Subcase Select&amp;hellip;  form.
The Max # of Static Load Cases is now set to 5. All the Subcase/Time
History associations are the same as previous jobs except for the 5th one
now associates LOAD_CASE.8.SC8 to a STATIC OFFSET, which you
select from the Time History (.dac)  file list box.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup172
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 7: A Simple Duty Cycle
7 A Simple Duty Cycle
Problem Description
Fatigue Setup
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description174
Main Index
Problem Description
In this analysis, the shock tower portion of a vehicle body is analyzed to illustrate more complex loading in
the form of a duty cycle. This particular component has many spot welds and are represented with CBAR
elements. Constraints and loads are applied at certain locations in order to simulate gravity and road loads.
The sheet metal stresses are recovered and used in the fatigue analysis.
Figure 7-1  Vehicle Body Shock Tower Model
Objectives
To illustrate duty cycle fatigue analysis setup and usage.
To determine the critical location due to the imposed loading conditions.&lt;/p&gt;
&lt;p&gt;175 CHAPTER 7
A Simple Duty Cycle
Main Index
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 7-1  Files Required
Files Required Description
shocktowerDCY_v1.dat Duty Cycle job - individual event summation run
shocktowerDCY_v2.dat Duty Cycle job - combined event run
shocktowerDCY_v3.dat Duty Cycle job - fast combined event run - using time history
compression
shocktowerDCY_v4.dat Duty Cycle job - equivalent to shocktowerDCY_v1.dat  - that uses
RPC3 formatted multi-channel files instead of single channel DAC
files
event_a_01.dac
event_a_02.dac
event_a_03.dac
event_b_01.dac
event_b_02.dac
event_b_03.dac
event_c_01.dac
event_c_02.dac
event_c_03.dacExternal DAC formatted files describing the cyclic load variation of
each load input for each event.
event_a.rsp
event_b.rsp
event_c.rspExternal RPC3  formatted files describing the cyclic load variation of
the load input, each containing the loads for its individual event in the
form of channel data.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description176
Main Index
Overview
The ability to define a duty cycle is a powerful feature that allows the analyst to assess damage from multiple
sequences and events through an intuitive interface that allows the analyst to set up realistic usage sequences.
A typical usage sequence may be a car running at a certain gross weight and subjected to various events such
as turning, braking, and traveling over potholes.
It is very useful for the analyst to identify which events contribute significant damage in a usage sequence or
which usage sequence (e.g., different weight configurations) causes significant damage. In either case, the
duty cycle capability allows the user to simulate usage profiles (sequences) consisting of multiple events, as
illustrated in this example.
Note that the duty cycle capability may be used in conjunction with the Time History Compression  feature.
Time History Compression  allows the user to filter out less damaging loading cycles and speeds up processing.
Once the most critical locations are identified, an analysis without time history compression can be
performed to include all loading cycles.
Please familiarize yourself with the following definitions and use figure Figure 7-2 as reference.
Table 7-2  Duty Cycle , Event, and Loading Definitions
Term Description
Sequence or
Load Sequence or
Duty CycleOne or more cyclic loading events that make up a given usage scenario; e.g., the
events driving over a rough surface and then a smooth surface at a particular weight
configuration may be one sequence. The entire test track in Figure 7-2 would be
considered a sequence or duty cycle.
Event
or
Load EventAn event consists of cyclic loading conditions used to define the event. It may take
a number of conditions to completely define an event. For example, a taxi event for
an aircraft may require 1 loading condition at the nose gear and 2 load conditions
at the main landing gears. These conditions act simultaneously during any given
event. Each individual portion of the test track in Figure 7-2 would be considered an
event. It is possibl e that o nly a portion of the loads making up an entire event are
measured. Thus a repeat factor can be defined to express the entire event.
Condition or
Load ConditionA particular combination of a MSC Nastran subcase result and an associated time
history file; this may also be referred to as a loading condition. In the example in
Figure 7-2, the load conditions may be the load transfer through the four wheel
contacts with the road, typically broken up into individual component directions.
Channel
(Monitor Points)Point on the structure where a load or acceleration data is measured; a channel or
monitor point is normally associated with only one coordinate direction. This is
also the location where loads are applied in the MSC Nastran analysis.&lt;/p&gt;
&lt;p&gt;177 CHAPTER 7
A Simple Duty Cycle
Main Index
Figure 7-2  Typical Duty Cycle Usage of Car on a Test Track
Rules to be Aware Of
1.Sequences of events are defined by the FTGSEQ  and FTGEVNT  entries. A FTGSEQ  can reference another
FTGSEQ  (in a nested manner) as a separate and unique event. Therefore all FTGSEQ  and FTGEVNT  entries
must use unique IDs.
2.For any given fatigue analysis, a FTGSEQ  that is referenced by the FATIGUE  case control cannot be nested
within another FTGSEQ  entry . This  causes an infinite loop in the sequence. Likewise a FTGSEQ  entry
that is referenced by a FTGSEQ  cannot itself reference the calling FTGSEQ  entry or an infinite loop in
the sequence is created.&lt;br&gt;
Fatigue Setup
In this example we concern ourselves only with the loading input. All other inputs for the fatigue analysis are
the same as previous examples and we refer you to the previous Chapters for explanations of those inputs.
Note only that a strain-life analysis ( EN) is being performed on only elements of PSHELL property 111. The
portions of the input deck (see shocktowerDCY_v1.dat ) of interest for a duty cycle fatigue analysis are shown
below in bold:
SOL 101                                                                      &lt;br&gt;
CEND                                                                         &lt;br&gt;
$
TITLE = Shock Tower Model (A Simple Duty Cycle)
$
FATIGUE = 42
$
SUBCASE 1                                                                   &lt;br&gt;
LABEL = Fz-&amp;gt;1000 N
SPC   = 1                                                               &lt;br&gt;
LOAD  = 1
SUBCASE 2                                                                   &lt;br&gt;
LABEL = Fy-&amp;gt;1000 N
SPC   = 1                                                               &lt;br&gt;
LOAD  = 2&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup178
Main Index
SUBCASE 3                                                                   &lt;br&gt;
LABEL = Mx-&amp;gt;100000 Nmm
SPC   = 1                                                               &lt;br&gt;
LOAD  = 3
$
BEGIN BULK
PARAM,POST,1
$
SET4    21      PROP    PSHELL  111
FTGDEF  42
ELSET   21      211
PFTG    211             P OLISH
$
FTGPARM 42      EN      1.0     1       3
STRESS                          ELEM
DTI     UNITS   1                                       MPA
$
$ Duty Cycle (Load Sequence) made up of Events A, B, &amp;amp; C
$
FTGSEQ  42      1       0
31      80.0    32      120.0   33      5.0
UNITS   1.0     Laps
$ Event A:
FTGEVNT 31      101     102     103
$ Event B:
FTGEVNT 32      201     202     203
$ Event C:
FTGEVNT 33      301     302     303
$
$ Event A loads
$
FTGLOAD 101     111     1       1.0     1.0     0.0     DB1
FTGLOAD 102     112     2       1.0     1.0     0.0     DB
FTGLOAD 103     113     3       1.0     1.0     0.0     DB
UDNAME  111
./event_a_01.dac
UDNAME  112
./event_a_02.dac
UDNAME  113
./event_a_03.dac
$
$ Event B loads
$
FTGLOAD 201     211     1       1.0     1.0     0.0     DB
FTGLOAD 202     212     2       1.0     1.0     0.0     DB
FTGLOAD 203     213     3       1.0     1.0     0.0     DB
UDNAME  211
./event_b_01.dac
UDNAME  212
./event_b_02.dac
UDNAME  213
./event_c_03.dac
1The keyword DAC can also be used in place of DB.&lt;/p&gt;
&lt;p&gt;179 CHAPTER 7
A Simple Duty Cycle
Main Index
$
$ Event C loads
$
FTGLOAD 301     311     1       1.0     1.0     0.0     DB
FTGLOAD 302     312     2       1.0     1.0     0.0     DB
FTGLOAD 303     313     3       1.0     1.0     0.0     DB
UDNAME  311
./event_c_01.dac
UDNAME  312
./event_c_02.dac
UDNAME  313
./event_c_03.dac
$
MAT1    1       200000.         .300000
MATFTG  1       1.0
STATIC  404.0   486.0   99&lt;br&gt;
EN      721.0   -0.068  -0.676  0.681   0.15    802.0   2.0+8
0.0     0.0     0.0             0.6     1.0
$&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup180
Main Index
Duty Cycle Loading
For the duty cycle analysis, three different loading events are to be considered. These are denoted as Event A ,
Event B, and  Event C. These events are for illustration purposes only and do not correspond to any actual,
real-world scenario. As this is an automotive example, they could each correspond to various portions of a
test track such as shown in Figure 7-2.
FTGSEQ  42      1       0
31      80.0    32      120.0   33      5.0
UNITS   1.0     Laps
$ Event A:
FTGEVNT 31      101     102     103
$ Event B:
FTGEVNT 32      201     202     203
$ Event C:
FTGEVNT 33      301     302     303
The FTGSEQ  entry is called out by the FATIGUE  case control (ID 42). The three events that make up this load
sequence or duty cycle are called out on the FTGSEQ  entry and the number of times the event is repeated in
the sequence is defined. In this scenario Event A will repeat 80 times, followed by 120 of Event B and then
5 of Event C. Note also on the FTGSEQ  entry that the fatigue equivalent units are set to Laps. The number of
equivalent units is 1.0, thus 1 Repeat  of the sequence is equal to 1 Lap .
Tip: Setting the 3rd field on the FTGSEQ  entry to one (1) outputs damage for each event as well as the
damage for the entire sequence.
Each event is made up of various load conditions corresponding to each subcase. The IDs referenced on the
FTGEVNT  entries correspond to FTGLOAD  entries that define the relationship of each subcase to its cyclic load
definition. In this scenario there are three channels of load input corresponding to two forces and a moment
applied at the same point on the model. Thus each event must have three cyclic loads associated to it.
$ Event A:
FTGEVNT 31      101     102     103
$ Event B:
FTGEVNT 32      201     202     203
$ Event C:
FTGEVNT 33      301     302     303Event FTGEVNT IDNumber of
Repeats
Event A 31 80.0
Event B 32 120.0
Event C 33 5.0&lt;/p&gt;
&lt;p&gt;181 CHAPTER 7
A Simple Duty Cycle
Main Index
Tip: You can give your events names using MSC Nastran 2013.1. Avoid using spaces.
FTGEVNT 31      101     102     103
NAME    Event_A
FTGEVNT 32      201     202     203
NAME    Event_B
FTGEVNT 33      301     302     303
NAME    Event_C
Figure 7-3  Three Channel Input - Load Applications of Shock Tower
The cyclic load definition for each subcase is defined on the FTGLOAD  entries. Note that each FTGLOAD  relates
the cyclic variation of the load (field 3) to the corresponding case control subcase (field 4). The cyclic
variations of the load are defined in external files defined by the UDNAME  entries. TABLFTG  or TABLED1  entries
could also have been used.
&amp;hellip;
SUBCASE 1                                                                   &lt;br&gt;
&amp;hellip;
SUBCASE 2                                                                   &lt;br&gt;
&amp;hellip;
SUBCASE 3                                                                   &lt;br&gt;
&amp;hellip;
$
BEGIN BULK
$
$ Event A loads
$
FTGLOAD 101     111     1       1.0     1.0     0.0     DB
FTGLOAD 102     112     2       1.0     1.0     0.0     DB&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup182
Main Index
FTGLOAD 103     113      3       1.0     1.0     0.0     DB
UDNAME  111
./event_a_01.dac
UDNAME  112
./event_a_02.dac
UDNAME  113
./event_a_03.dac
$
$ Event B loads
$
FTGLOAD 201     211      1       1.0     1.0     0.0     DB
FTGLOAD 202     212      2       1.0     1.0     0.0     DB
FTGLOAD 203     213      3       1.0     1.0     0.0     DB
UDNAME  211
./event_b_01.dac
UDNAME  212
./event_b_02.dac
UDNAME  213
./event_b_03.dac
$
$ Event C loads
$
FTGLOAD 301     311      1       1.0     1.0     0.0     DB
FTGLOAD 302     312      2       1.0     1.0     0.0     DB
FTGLOAD 303     313      3       1.0     1.0     0.0     DB
UDNAME  311
./event_c_01.dac
UDNAME  312
./event_c_02.dac
UDNAME  313
./event_c_03.dac
Tip: To remove the effect of an FE load case from an event, the associated time history should be
composed of zero loads throughout the history.
Using Multichannel (RPC3 ) Files
In shocktowerDCY_v1.dat , the use of single channel load data files is used. Another commonly used, industry
standard, load file format is the RPC3 (remote parameter control) file, normally indicated by an .rsp  file
extension. This file type contains exactly the same data but places all the loads for a particular event in the
same file, designated by a channel number. The input deck, shocktowerDCY_v4.dat , illustrates the usage of
RPC3 files. The equivalent input as above is shown here but with multichannel files specified instead of DAC
files. The only differences are that the TYPE field in the FTGSEQ  needs to be set to RPC and a channel number
is specified in the adjacent field. and of course, less external load definition files are needed.
FTGSEQ  42      1       0
31      80.0    32      120.0   33      5.0
UNITS   1.0     Laps
$ Event A:
FTGEVNT 31      101     102     103
$ Event B:
FTGEVNT 32      201     202     203
$ Event C:
FTGEVNT 33      301     302     303
$&lt;/p&gt;
&lt;p&gt;183 CHAPTER 7
A Simple Duty Cycle
Main Index
$ Event A loads
$
FTGLOAD 101     111     1       1.0     1.0     0.0     RPC     1
FTGLOAD 102     111     2       1.0     1.0     0.0     RPC     2
FTGLOAD 103     111     3       1.0     1.0     0.0     RPC     3
UDNAME  111
./ event_a.rsp
$
$ Event B loads
$
FTGLOAD 201     211     1       1.0     1.0     0.0     RPC     1
FTGLOAD 202     211     2       1.0     1.0     0.0     RPC     2
FTGLOAD 203     211     3       1.0     1.0     0.0     RPC     3
UDNAME  211
./ event_b.rsp
$
$ Event C loads
$
FTGLOAD 301     311     1       1.0     1.0     0.0     RPC     1
FTGLOAD 302     311     2       1.0     1.0     0.0     RPC     2
FTGLOAD 303     311     3       1.0     1.0     0.0     RPC     3
UDNAME  311
./ event_c.rsp
Figure 7-4  Cyclic Load Definitions for each Channel for each Event&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup184
Main Index
Fatigue Results
Run the shocktowerDCY_v1.dat  file using a supported version of MSC Nastran ( 201 6). Then inspect the
shocktowerDCY_v1.f06  file.
Duty Cycle Methods
The Duty Cycle  feature has three processing options, which are controlled via the METHOD (4th) field of
the FTGSEQ  entry. The individual method is used in the shocktowerDCY_v1.dat  file. The different methods
are:
Individual : This is the simplest option and the default. Damage from each event is independently
computed. Damage from each event is then summed to determine the overall damage due to the
entire sequence. This is computationally fast but possibly not as accurate if large, damaging cycles
are not accounted for across events (see shocktowerDCY_v1.dat) . Specifying partial repeats of
individual events is allowed, such as 1.5 repeats of Event A, 3.3 repeats of Event B, and 0.5 repeats of
Event B.
Combined Full : This option concatenates  all events for a given channel or monitor point, in an
attempt to ensure that any large cycles are closed even if closing occurs in an event different than the
initiating event. This is computationally more expensive, but more accurate if large, damaging cycles
as mentioned are present (see shocktowerDCY_v2.dat) . Specifying fractional repeats of events is not
allowed. Repeats of an event must be specified in whole repeats such as 1.0, 2.0, 3.0, etc. Fractional
repeats such as 1.5 will result in an error.
Combined Fast : This option is similar to Combined Full , except that processing speed is enhanced
at the expense of accuracy by using a time history compression algorithm (see
shocktowerDCY_v3.dat) . Fractional repeats of events are not allowed.
Time History Compression
Time history compression is a means in which lower damage cycles are ignored in the analysis. Although this
can dramatically speed up processing, it should be used judiciously since some damaging cycles are filtered
out. Generally, time history compression is useful to locate critical locations in a structure in order to allow
detailed analysis in the critical locations. This is especially the case in duty cycle analysis where typically a
large number of time histories is involved, with consequently large computing times
This feature can be controlled via the FTGPARM  entry using the RAINFLOW flag. A Peak-Valley extraction
method to slice up the time history is carried out. A rainflow gate is used when setting the RTYPE field to
LOAD . The peak valley slicing causes a reduction in the number of time history turning points so that, when
the reduced time history is rainflow cycle counted, any cycles that have ranges less than the gate value are
discarded. The gate value can be expressed either as an absolute value in the same units as the time history
(GATE field), or as a percentage (PCTRED field) of the maximum range of the time history. If GATE is
supplied, PCTRED is ignored.
FTGPARM 42      SN      1.0
STRESS  ABSMAXPR NONE           ELEM
$&amp;mdash;&amp;ndash;  RAINFLOW  RTYPE   GATE   PCTRED
RAINFLOW LOAD           50.0 &lt;br&gt;
or&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P11</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_011/</guid>
      <description>
        
        
        &lt;p&gt;185 CHAPTER 7
A Simple Duty Cycle
Main Index
FTGPARM 42      SN      1.0
STRESS  ABSMAXPR NONE           ELEM
$&amp;mdash;&amp;ndash;  RAINFLOW  RTYPE   GATE   PCTRED
RAINFLOW LOAD    10.0&lt;br&gt;
Setting the RTYPE field to FAST  causes a very severe reduction in the time history. In this case, only the
maximum and minimum values of each channel are retained; all other points are discarded, including the
corresponding points from all the other channels. It approximates the worst cycle, but discards many other
damaging cycles. The GATE and PCTRED fields are ignored in this case.
FTGPARM 42      SN      1.0
STRESS  ABSMAXPR NONE           ELEM
$&amp;mdash;&amp;ndash;  RAINFLOW  RTYPE   GATE   PCTRED
RAINFLOW FAST
Figure 7-5  Properties Group pshell.0111
The most critical location is at  Element 26283. T he damage due to each individual event, and the
summation of all three events are shown for each method. Most of the output shown in the tables below is
available in the F06 file. However if you specify the following, a CSV formatted file is produced that can be
read directly into Excel.
FORMAT(FORMAT=64) = 42
Results do not vary much in this example but it can be seen that concatenating the events produces different
results and the fast method results in the same life, but the job runs five times faster.  Only results at the
bottom layer (Z1) are shown as this layer produces the worst case results for this element.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup186
Main Index
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
Start Patran and open a new Patran database and call it shocktowerDCY . Use the Analysis  application
to import the first input deck associated with this example: shocktowerDCY_v1.dat  (Action =Read
Input File ). Make sure the Analysis Preference  is set to MSC.Nastran.
Step 2: Check the ModelTable 7-3  Results for Duty Cycle Method: Individual
Elem ID Shell
Layer Material Group DamageMax
StressMin
StressMax
Strain Min Strain Event NameLife
(Laps)
26283 Bottom Mat1 0.09098 356.7 -330.8 0.006291 -0.00419 Event_A 10.99
26283 Bottom Mat1 0.1859 344.7 -323.1 0.005313 -0.00383 Event_B 5.38
26283 Bottom Mat1 0.02995 341.2 -354.0 0.005012 -0.00606 Event_C 33.39
26283 Bottom Mat1 0.3068 356.7 -354.0 0.006291 -0.00606 ALL 3.259
Table 7-4  Results for Duty Cycle Method: Combined Full
Elem IDShell
Layer Material Group DamageMax
StressMin
StressMax
Strain Min StrainEvent
Name Life (Laps)
26283 Bottom Mat1 0.09111 356.7 -354.0 0.006291 -0.00606 event_A 10.98
26283 Bottom Mat1 0.1865 343.1 -324.7 0.005421 -0.00375 event_B 5.362
26283 Bottom Mat1 0.03001 356.7 -354.0 0.006291 -0.00606 event_C 5.362
26283 Bottom Mat1 0.3076 356.7 -354.0 0.006291 -0.00606 ALL 3.251
Table 7-5  Results for Duty Cycle Method: Combined Fast
Elem ID Shell
Layer Material Group DamageMax
StressMin
Stress Max StrainMin
StrainEvent
NameLife
(Laps)
26283 Bottom Mat1 0.09111 356.7 -354.0 0.006291 -0.00606 event_A 10.98
26283 Bottom Mat1 0.1865 343.1 -324.7 0.005421 -0.00375 event_B 5.362
26283 Bottom Mat1 0.03001 356.7 -354.0 0.006291 -0.00606 event_C 5.362
26283 Bottom Mat1 0.3076 356.7 -354.0 0.006291 -0.00606 ALL 3.251&lt;/p&gt;
&lt;p&gt;187 CHAPTER 7
A Simple Duty Cycle
Main Index
Go to the Loads/BCs  application. Plot the LBC markers ( Action =Plot Markers ). Make sure the
Current Load Case  is set to one of the imported load case ( _FY-&amp;gt;1000_N.SC2, _FZ-&amp;gt;1000_N.SC1,
_MX-&amp;gt;100000_NMM.SC3 ). Specifically select the force LBC and press the Apply  button. Repeat
this for the other Load Cases so you can see how the loading is defined for the three load cases.
Go to the Materials  application. Set the Action  to Modify  and select the only available material. Note
the values in the Linear Elastic  constitutive model. If there is no current Strain-Life (eN)  constitutive
model, create one. If there is, verify the following parameters, which are written to the MATFTG  entry:
Go to the Element Properties  application. Set the Action  to Modify . Select the property of interest
for our fatigue analysis: pshell.111 . Note the properties defined here. All fatigue element properties
are defined here. Make sure the following are set below. Any property not mentioned should be left
blank. Values for the fatigue properties, are placed on the PFTG entry. All other pertinent properties
are part of the PSHELL entry and related elements for this model.
Step 3: Check the Fatigue ParametersParameter Value
Constitutive Model: Strain-Life (eN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Strain: None
Curve Type: None
Yield Stress 404.0
Ultimate Tensile Stress 486.0
Strength Coefficient 721.0
Strength Exponent -0.068
Ductility Exponent -0.676
Ductility Coefficient 0.681
Cyclic Strain Hardening Exp 0.15
Cyclic Strength Coefficient 802.0
Cut-off in Reversals 2.0e8
Standard Error Log(e)(elastic) 0.0
Standard Error Log(e)(plastic) 0.0
Standard Error Log(e)(cyclic) 0.0
Parameter Value
[Surface Finish] None&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup188
Main Index
Go to the Analysis  application ( Action  = Analyze ). Since we read the existing job
shocktowerDCY_v1.dat , a job by the name of shocktowerDCY_v1  has been created. Click on it to
restore all its settings. Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip;
form. From here you can check the Fatigue Parameters&amp;hellip;  Open this form and ensure the following
parameters are set, which are written to the FTGPARM  entry. If a parameter is not mentioned below,
use the default value or leave it blank. Close all the forms when done using the OK buttons.
Also, in order to post-process the fatigue results in Patran, make sure that the results are written to
the MASTER/DBALL files. This is done in the Solution Parameters&amp;hellip; form by opening the Results
Output Format&amp;hellip; form and turning ON the MASTER/DBALL  toggle.Parameter Value
General Parameters:
Stress Units: MPa
Stress Combination: Abs. Max. Principal
Results Location: Element Center
Layer: Worst
Strain-Life (e-N):
Run eN Analysis T urn this ON
Mean Stress Correction: None&lt;/p&gt;
&lt;p&gt;189 CHAPTER 7
A Simple Duty Cycle
Main Index
Step 4: Check the Output Requests
Still in the Analysis  application, click on the Subcases&amp;hellip;  form. Our subcases are called: _FY-&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1000_N.SC2, _FZ-&amp;gt;1000_N.SC1, _MX-&amp;gt;100000_NMM.SC3 . Click on the _FZ-&amp;gt;1000_N.SC1&lt;br&gt;
subcase from the Available Subcases  list box to access all its settings. Then open the Output
Requests&amp;hellip;  form. Set this form to the advanced setting ( Form Type: ).
If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an -N material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed. From the Select Property Sets  list box, select only pshell.111 . Press the
Apply button on the Subcases&amp;hellip;  form to save the new output request settings.
One last note about output requests. Fatigue life output requests are subcase independent unlike
most standard output requests such as stress and displacement. If you are using multiple subcases, the
first subcase selected (see the next step) must have the Fatigue Life  output request in it. Thus, it is not
necessary in this example to open each subcase and ensure that FATIGUE is set as an output request.
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes to this subcase.
Step 5: Check the Cyclic Load Definition (Duty Cycle)
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). All three (3) of our
subcases should be present in the bottom list box. Now open the Define Fatigue Load Sequences&amp;hellip;&lt;br&gt;
form. On this form ensure that the loading associations are set up properly. For the loading in this
example, we want to associate the subcase to various external DAC files as shown here for different
load events - three (3) distinct load events in all. Change the Max # of Static Load Cases  to 3 and press
the Enter  or Return key. This places three rows in the spreadsheet for each layer of the spreadsheet.
Each layer represents a different load event.
For Event 1 , set the Event Name  to Event A . The arrow buttons will allow you to move up and down
between the events. Or you can type in the event number in the Event  data box to go to that event.
Fill out the spreadsheet as shown here if not already filled out.
Click on the down arrow button to go to Event 2  and set the Event Name  to Event B . Fill out the
spreadsheet as shown here if not already filled out. Subcase Time History Load Magnitude Scale Factor Offset
_FZ-&amp;gt;1000_N.SC1 event_a_01.dac 1.0 1.0 0.0
_FY-&amp;gt;1000_N.SC2 evetn_a_02.dac 1.0 1.0 0.0
_MX-&amp;gt;100000_NMM.SC3 event_a_03.dat 1.0 1.0 0.0
Subcase Time History Load Magnitude Scale Factor Offset
_FZ-&amp;gt;1000_N.SC1 event_b_01.dac 1.0 1.0 0.0
_FY-&amp;gt;1000_N.SC2 evetn_b_02.dac 1.0 1.0 0.0
_MX-&amp;gt;100000_NMM.SC3 event_b_03.dat 1.0 1.0 0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup190
Main Index
Click on the down arrow button to go to Event 3  and set the Event Name  to Event C . Fill out the
spreadsheet as shown here if not already filled out.
On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined. To create these from scratch, remove all the existing load sequences using the right mouse
button by clicking on Load Sequences  and select Remove All  Sequences . The follow these instructions:
Use the right mouse button to click on the Load Sequences  and Add a New Sequence . Then right
mouse button click on the new sequence and Add Event . Select the Event A , change the Repeat  number
to 80 and press Apply . Do this two more times for Event B  and Event C with Repeat  numbers of 120
and 5, respectively. The load sequence or duty cycle has now been defined.
However, you want the fatigue life to be reported back as Laps and not Repeats  of the load sequence.
Also the load sequence is to be called Track 1 . (You can rename it when you edit the sequence.) Each
Repeat  of the duty cycle is equal to 1 Lap(s) around Track 1 . To do this, right mouse click on the load
sequence you created and select Edit Sequence&amp;hellip; . In the subordinate form that appears, change
Repeats  to Laps, change the Load Sequence Name  to Track 1 , turn ON the Output Events  toggle so that
results from all events are output. If this toggle is left OFF, only results from all combined events are
output. Then press Apply .
Note that you can view the time histories by using the Time History Manager  button. This launches
a utility to view and manage these DAC files. To use this utility, the DAC file must first be loaded
into its database. Then you can graphically view it. The operation of this utility is fairly easy and
intuitive. Patran operation will be suspended until you exit from the utility.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD /UDNAME  entries. You can close the Load
Sequence  form using the OK button.Subcase Time History Load Magnitude Scale Factor Offset
_FZ-&amp;gt;1000_N.SC1 event_c_01.dac 1.0 1.0 0.0
_FY-&amp;gt;1000_N.SC2 evetn_c_02.dac 1.0 1.0 0.0
_MX-&amp;gt;100000_NMM.SC3 event_c_03.dat 1.0 1.0 0.0&lt;/p&gt;
&lt;p&gt;191 CHAPTER 7
A Simple Duty Cycle
Main Index
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result
Entities . Select the shocktowerDCY_v1.MASTER  file and press the Apply  button.
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Laps  for
each event and the combined events using shocktowerDCY_v1:EN_42 results cases. There is one
results case for each event and one for the combined (all) events.
Step 8: Run other Fatigue Jobs
To run the other jobs from this Chapter, you can import each input deck into a new empty database and
repeat the steps here making modifications as necessary and shown below for each different input deck. Or
you can define new jobs in the same database by selecting the existing job shocktowerDCY_v1 and then
renaming it and making the modifications as necessary. The table below lists the modifications necessary for
each with the first as the baseline
Note: Whenever you change a job name you have to reselect the subcases for your job and redefine the
loading sequence - so always inspect the selected subcases and loading sequence before submitting
the job.
Input Deck Modification
shocktowerDCY_v1.dat Baseline - no modifications necessary
shocktowerDCY_v2.dat In the Define Fatigue Load Sequences&amp;hellip;  form, right mouse click the
load sequence we named Track 1 and edit the sequence by changing the
Event Process Method  to Combined Full  and resubmit the job. Ensure
that the duty cycle definition and selected subcases remain in tact. (If
you imported the deck, the load sequence is given some generic name,
which you can rename from the same form.)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup192
Main Index
shocktowerDCY_v3.dat In the Define Fatigue Load Sequences&amp;hellip;  form, right mouse click the
load sequence we named Track 1 and change the Event Process Method&lt;br&gt;
to Combined Fast  and resubmit the job.
shocktowerDCY_v4.dat In the Define Fatigue Load Sequences&amp;hellip;  form, turn ON the Remote
Parameter Control  switch. This allows you to use RPC formatted
multi-channel files instead of specifying single channel DAC formatted
files or internal Patran fields to define the cyclic loading definition. Set
up each event as you have with the previous jobs in this chapter, but
select the event_a.rsp  file for the first event, event_b.rsp  file for the
second event, and event_c.rsp  for the third in column two (2) of the
event spreadsheet. The same file name should be used on each line
(row) of the spreadsheet for a given event. Column three (3) needs to
specify the channel number in the RPC file that the corresponding load
is to be associated with. In this case they are all sequential, so enter 1,
2, 3 in rows 1, 2, and 3, for each event.Input Deck Modification&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 8: Modal Transient Analysis
8 Modal Transient Analysis
Problem Description
Quasi-static Method
Modal Transient Method
Modal Method
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description194
Main Index
Problem Description
A cantilever beam is used to illustrate the modal stress recovery method. Up to this point, the quasi-static
stress recovery method has been used using linear static analysis through SOL 101. Now the same basic
procedure is used in modal (SOL 103) and modal transient (SOL 112) analysis.
The model is subject to four different loading conditions. A unit axial, horizontal, and vertical load are placed
at one of the outside edges of the end of the cantilevered beam.   Each load is allowed to act individually as
well as all three simultaneously, making four load conditions in total.
The model is made up of various different solid element types and the upper and lower portions are skinned
with shell elements.   Mass elements are place on the model to lower the first natural frequency to around 40
Hz.
Figure 8-1  Cantilever Beam with Unit Loads
Objectives
To illustrate the modal stress recovery method in fatigue analysis using both modal analysis (SOL
103) and modal transient analysis (SOL 112)
To compare the quasi-static stress recovery method (SOL 101) to the modal stress recovery method.
The model used is for illustrative purposes only. The cyclic loading variation is arbitrary and applied in the
same way to all four loading conditions. The resulting stress time histories are scaled to produce a target or
design life of 1000  Repeats  of the applied cyclic loading. T o determine the proper scale factors, first a factor
of safety analysis is done. Then the fatigue analysis is done using the scale factors produced from the factor
of safety analysis to show that the loads are properly scaled to give a life of 1000  Repeats  at a particular element
of interest (Element 245).&lt;/p&gt;
&lt;p&gt;195 CHAPTER 8
Modal Transient Analysis
Main Index
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Quasi-static Method
To begin, look at the cant_beam101.dat  file and run it through MSC Nastran. Note that nine (9) different
fatigue analyses are carried out in just the one input deck. The first three are to do factor of safety analyses
to determine the scale factors necessary to scale the resultant stress time variations to achieve a design life of
1000  Repeats . This can be done because the analysis is linear. The unit loads simply give the stress distribution
due to each. The fatigue analysis scales the stress distribution by the corresponding cyclic variation to give a
resultant stress time history from which rainflow cycle counting and subsequent damage look up and
summation are performed. Note the following for the first three fatigue analyses.Table 8-1  Files Required
Files Required Description
cant_beam101.dat Quasi-static SOL101 fatigue analysis
cant_beam103.dat Modal stress SOL 103 fatigue analysis
cant_beam112.dat Modal transient SOL 112 fatigue analysis
cant_beam_axial.inc
cant_beam_horiz.inc
cant_beam_vert.inc
cant_beam_all.incInclude files for cant_beam103.dat  for definition of the modal
participation factors (modal responses), located in
nast/tpl/include .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Quasi-static Method196
Main Index
SOL 101
CEND
$
SET 42 = 101,102,103,201,202,203,350,450,550
FATIGUE(SET) = 42
$
SUBCASE 1
SUBTITLE= Axial
&amp;hellip;
SUBCASE 2
SUBTITLE= Horizontal
&amp;hellip;
SUBCASE 3
SUBTITLE= Vertical
&amp;hellip;
$
BEGIN BULK
$
DTI     UNITS   1                                       PSI
SET1    1       1       THRU    5       20      THRU    30      59
THRU    70      99      THRU    100     239     THRU    254
283     THRU    292     321     THRU    332
FTGDEF  101
ELSET   1
FTGDEF  102
ELSET   1
FTGDEF  103
ELSET   1
$
FTGPARM 101     SN      1.0
STRESS  ABSMAXPR GOODMAN        ELEM
FOS     LIFE    1000.0  1.0     20.0    1.-4
FTGPARM 102     SN      1.0
STRESS  ABSMAXPR GOODMAN        ELEM
FOS     LIFE    1000.0  1.0     20.0    1.-4
FTGPARM 103     SN      1.0
STRESS  ABSMAXPR GOODMAN        ELEM
FOS     LIFE    1000.0  1.0     20.0    1.-4Three separate subcases, one for each unit load
in the axial, horizontal, and vertical directions.
Stress units of this model
are in PSI.
Only shell elements near the base of the beam are of interest.
Factor of safety analysis with target life of 1000  Repeats  de-
termined at the element centroids. Goodman mean stress
correction with stress parameter Max Abs. Principal&lt;/p&gt;
&lt;p&gt;197 CHAPTER 8
Modal Transient Analysis
Main Index
The second three fatigue analyses use the scale factors from the first three analyses. The fatigue life at our
element of interest from three fatigue analyses, by definition, must be around 1000  Repeats . All of these
analyses are show in the same input deck for convenience purposes. Naturally to do this, one would need to
run the first three analyses before the second three to determine the scale factors. Note the following from
the portions of the deck that set up these fatigue analyses.
The next fatigue analysis (350) is a factor of safety analysis with all three loads acting simultaneously. And
the subsequent one after that is the actual fatigue analysis using the scale factor just as was done with the three
loads acting individually (again at the element of interest). In this case the loading event is three
simultaneously acting loads and the previous scale factors determined when acting individually are used. It
is know that each load individually produces a life of approximately 1000 Repeats . It is not know whether all $
$ Factor of Safety - Target Life = 1000 Repeats
$    101 = Axial Load Only
$    102 = Horizontal Load Only
$    103 = Vertical Load Only
$
FTGLOAD 101     99      1       1.0     1.0     0.0
FTGLOAD 102     99      2       1.0     1.0     0.0
FTGLOAD 103     99      3       1.0     1.0     0.0
Fatigue analysis 101 associates subcase 1 (axial load)
with time variation defined in TABLED1 99 (not
shown), likewise, 102 with subcase 2 (horizontal load),
and 103 with subcase 3 (vertical load).
FTGDEF  201
ELSET   1
FTGDEF  202
ELSET   1
FTGDEF  203
ELSET   1
$
FTGPARM 201     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
FTGPARM 202     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
FTGPARM 203     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
$
$ SN Analysis
$    201 = Axial Load Only
$    202 = Horizontal Load Only
$    203 = Vertical Load Only
$
FTGLOAD 201     99      1       1.0     1.19200 0.0
FTGLOAD 202     99      2       1.0     0.01191 0.0
FTGLOAD 203     99      3       1.0     3.261-3 0.0 The same set of elements used and the same
parameters set except that no factor of safety
analysis is performed, thus only damage and
fatigue life are calculated.
These are the scale factors deter -
mined from the first three fatigue
analyses.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Quasi-static Method198
Main Index
three acting simultaneously would produce more or less damage. So again a scale factor is determined such
that all three acting simultaneously produce a target life of 1000 Repeats  at the element of interest. Because
the scale factor is less than one, this tells us that all three loads applied simultaneously is far more damaging
than each individually.
To apply the scale factor in the subsequent fatigue analysis (450), the reciprocal of the scale factor is used in
the LDM field out of convenience rather than multiplying it by each individual scale factor to get the new
scale factor for each load. The LDM field is a divisor as opposed to a multiplier.
Tip: You could also just put the scale factor in the FACTOR field on the FTGPARM entry since
this is an overall scale factor applied to the resulting stress variation rather than to individual loading.
The ninth and final fatigue analysis in this input deck is a duty cycle analysis where each individual load is
set up to act sequentially. Each acting individually produces a fatigue life of 1000 Repeats at our element of
interest. This analysis determines how many times each can act sequentially. We would expect about 1/3 or
333 Repeats  assuming the individual method of load sequence analysis as described in a previous example.
Since the loads do not act simultaneously, but sequentially, the scale factor determined from the simultaneous
run is not used.FTGDEF  350
ELSET   1
FTGDEF  450
ELSET   1
$
FTGPARM 350     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
FOS     LIFE    1000.0  1.0     20.0    1.-4
FTGPARM 450     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
$
$
$ Factor of Safety - Target Life = 1000 Repeats
$    350 = All Three Loads Simultaneously
$
FTGSEQ  350
351
FTGEVNT 351     301     302     303
FTGLOAD 301     99      1       1.0     1.19200 0.0
FTGLOAD 302     99      2       1.0     0.01191 0.0
FTGLOAD 303     99      3       1.0     3.261-3 0.0
$
$ SN Analysis
$    450 = All Three Loads Simultaneously
$
FTGSEQ  450
451
FTGEVNT 451     401     402     403
FTGLOAD 401     99      1       3.51    1.19200 0.0
FTGLOAD 402     99      2       3.51    0.01191 0.0
FTGLOAD 403     99      3       3.51    3.261-3 0.0 The same set of elements used
All three loads, each scaled by the
previously calculated scale factors.Factor of safety analysis.
Fatigue analysis only.
New scale factor applies in LDM
field as reciprocal.&lt;/p&gt;
&lt;p&gt;199 CHAPTER 8
Modal Transient Analysis
Main Index
Modal Transient Method
Now the same thing is done with a modal transient analysis using SOL 112. Before going into detail on the
modal transient analysis, let us first review what the SOL 101 quasi-static fatigue analysis is doing when
dealing with multiple load conditions acting simultaneously so that a comparison can be done with the
modal method. Refer to the figure below.Table 8-2  Scale Factors (Target Life = 1000 Repeats) at Element 245 (SOL 101)
LoadingLoad Magnitude
(Divisor) Scale Factor Fatigue Life
axial 1.0 1.192 ~1000 Repeats
horizontal 1.0 0.01191 ~1000 Repeats
vertical 1.0 0.003116 ~1000 Repeats
all three simultaneous 3.51 1.192 (axial)
0.01191 (horizontal)
0.003116 (vertical)~1000 Repeats
all three sequentially 1.0 1.192 (axial)
0.01191 (horizontal)
0.003116 (vertical)~333 RepeatsFTGDEF  550
ELSET   1
$
FTGPARM 550     SN      1.0     1       3
STRESS  ABSMAXPR GOODMAN        ELEM
$
$ SN Analysis
$    550 = All Three Loads Sequentially
$
FTGSEQ  550     1       0
551     1.0     552     1.0     553     1.0
FTGEVNT 551     501
FTGEVNT 552     502
FTGEVNT 553     503
FTGLOAD 501     99      1       1.0     1.192   0.0
FTGLOAD 502     99      2       1.0     0.01191 0.0
FTGLOAD 503     99      3       1.0     3.261-3 0.0 The same set of elements used
and fatigue parameters.
All three loads, each scaled by the
previously calculated scale factors.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Modal Transient Method200
Main Index
Figure 8-2  Quasi-Static Stress Recovery Method
Fatigue analysis requires a resultant stress time history. This time history is derived by taking the cyclic
variations of each load (Li in the above illustration) and multiplying them by the corresponding stress state
from a static subcase ( iA in the above illustration), typically each is a subcase with a single unit load. Using
the principle of linear superposition, the resulting stress time histories from each subcase are combined into
one single time history. The result is a stress tensor time history. A single scalar stress is derived form the tensor
(such as a signed von Mises or Maximum Absolute Principal) at each time step resulting in a single scalar
stress time history from which subsequent rainflow cycle counting can be done, damage summed, and fatigue
life calculated.
Now look at a similar illustration when doing this in modal space.&lt;/p&gt;
&lt;p&gt;201 CHAPTER 8
Modal Transient Analysis
Main Index
Figure 8-3  Modal Stress Recovery Method
The difference between the two methods is that the unit static loads are replaced by the mode shapes (modal
stresses - A1 in the above illustration) and the load time histories are replaced with the modal responses for
each mode shape, sometimes know as modal participation factors or vectors or loads ( q1(t) in the above
illustration). These are all derived internally to the modal transient SOL 112 analysis.
Tip: The modal responses can be output to an external file by using
SDISPLACEMENTS(PUNCH) = ALL in the case control. It becomes c lear why one may want to do
this in the next section.
It is assumed that the user understands basic dynamic analysis. No explanation of the actual dynamic analysis
is given here and the user is referred to the MSC Nastran Dynamic Analysis User’s Guide .
Now let us look at the input deck cant_beam112.dat . Note that the FTGDEF  and FTGPARM  entries in this input
deck are identical to those in the cant_beam101.dat  deck, so no additional explanation is given here. Only
the loading definitions differ.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Modal Transient Method202
Main Index
The loading definitions differ as shown below in that no FTGLOAD  or FTGEVNT  entries are required for a SOL
112 analysis. This is because the cyclic variations of the load are defined directly by the dynamic loading
(DLOAD case control) and each subcase of a SOL 112 analysis is an actual loading event in fatigue analysis
terminology. All loads acting simultaneously must be applied directly in the subcase, and thus that fully
defines a load event. Individual load events can still be combined using the FTGSEQ  entries to define a duty
cycle. Therefore, the FIDi fields of the FTGSEQ  entry refer to SOL 112 subcase IDs instead of FTGEVNT  IDs.SOL 112
CEND
$
SET 42 = 101,102,103,201,202,203,350,450,550
FATIGUE(SET) = 42
$
ECHO=NONE
RESVEC = NO
METHOD = 1
TSTEP = 1
SPC = 2
LOADSET = 5
SDISPLACEMENT(PUNCH)=ALL
DISPLACEMENT(PLOT)=ALL
STRESS(PLOT,SORT1,REAL,VONMISES,BILIN)=ALL
$
SUBCASE 1
SUBTITLE=Axial
DLOAD = 6
SUBCASE 2
SUBTITLE=Horizontal
DLOAD = 8
SUBCASE 3
SUBTITLE=Vertical
DLOAD = 10
SUBCASE 4
SUBTITLE=All Loads
DLOAD = 12
$
BEGIN BULK
PARAM    POST    1
PARAM    GRDPNT  0
PARAM   PRTMAXIM YES
$
TSTEP   1       108     1.0
EIGRL   1                       10
$
DTI     UNITS   1                                       PSINow four separate subcases are required, one
for each unit load in the axial, horizontal, and
vertical directions and one with the combina -
tion of all three acting simultaneously.&lt;br&gt;
Each is considered as its own fatigue loading
event.
Note there are 108 time steps in the cyclic defi -
nition of the loading and uses the same TA -
BLED1 entry (not shown) as the SOL 101
analysis.
Again, stress units of this
model are in PSI.&lt;/p&gt;
&lt;p&gt;203 CHAPTER 8
Modal Transient Analysis
Main Index
Note that the scale factors applied from the factor of safety analyses onto the actual fatigue analyses are placed
on the SCALE field of the FTGPARM  entries (not shown) as opposed to the FTGLOAD  entries, since there is none.
We do not expect to derive the same scale factors as the pseudo-static method in this case as the dynamic
effects cause a different stress distribution. As the mass effects become more and more negligible, one would
expect the results from the dynamic and pseudo-static methods to converge.$ Factor of Safety - Target Life = 1000 Repeats
$    101 = Axial Load Only
$    102 = Horizontal Load Only
$    103 = Vertical Load Only
$
FTGSEQ  101
1       1.0
FTGSEQ  102
2       1.0
FTGSEQ  103
3       1.0
$
$ SN Analysis
$    201 = Axial Load Only
$    202 = Horizontal Load Only
$    203 = Vertical Load Only
$
FTGSEQ  201
1       1.0
FTGSEQ  202
2       1.0
FTGSEQ  203
3       1.0
$
$ Factor of Safety - Target Life = 1000 Repeats
$    350 = All Three Loads Simultaneously
$
FTGSEQ  350
4       1.0
$
$ SN Analysis
$    450 = All Three Loads Simultaneously
$
FTGSEQ  450
4       1.0
$
$ SN Analysis
$    550 = All Three Loads Sequentially
$
FTGSEQ  550     1       0
1       1.0     2       1.0     3       1.0Factor of safety analysis 101 is associated
with subcase 1 (axial load).   Likewise,
102 with subcase 2 (horizontal load), and
103 with subcase 3 (vertical load).
Fatigue analysis 201 is associated with
subcase 1 (axial load).   Likewise, 202
with subcase 2 (horizontal load), and 203
with subcase 3 (vertical load).
Factor of safety analysis 350 is associated with
subcase 4 (all loads acting simultaneously).
Fatigue analysis 450 is associated with subcase 4
(all loads acting simultaneously).   Fatigue analysis
550 is a duty cycle analysis with all three loads act -
ing sequentially.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Modal Method204
Main Index
Tip: There are different ways of scaling the resultant cyclic stresses.
•Fatigue Parameters ( FTGPARM  entry):   An overall scale factor can be applied using the FACTOR
field. This scales the entire resulting stress time history used in the rainflow counting procedure.
•Fatigue Properties ( PFTG entry): A scale factor and/or an offset can be applied using the SCALE
and/or OFFSET fields. These are applied to the entire resulting stress time history but only to the
elements referenced by the PFTG entry. PFTG entries are referenced by the fatigue element
definitions (FTGDEF) entries, which define the elements on which the fatigue properties are
assigned.
•Fatigue Loading ( FTGLOAD  entry): A divisor, scale factor, and/or offset can be applied using the
LDM, SCALE, and OFFSET fields. These are applied to each individual cyclic load before the
superposition in the case of multiple loadings and used only in the modal (SOL 103) and pseudo-
static (SOL 101) methods. Modal transient analysis (SOL 112) does not use FTGLOAD . The
alternative for SOL 112 is described next.
•Dynamic Load Definition (DLOAD entry): Scale factors can be applied directly on the DLOAD
entry for modal transient analysis and is the preferred method as FTGLOAD  entries cannot be used
for scaling the loads in modal transient analysis.
•All scale factors applied in any of the above are cumulative.
Modal Method
What is done internally using SOL 112 can be simulated exactly with SOL 103 using plain modal analysis.
The difference is that the user must supply the modal responses directly. SOL 112 can provide these to the
user using SDISPLAMENT(PUNCH)=ALL in the case control, and they can also be derived using other
external methods such as provided in some motion packages like ADAMS.
Please reference input deck cant_beam103.dat . Note the case control for the SOL 103 deck.Table 8-3  Scale Factors (Target Life = 1000 Repeats) at Element 245 (SOL 112)
Loading Scale Factor Fatigue Life
axial 2.077E-2 ~1000 Repeats
horizontal 3.807E-3 ~1000 Repeats
vertical 1.058E-3 ~1000 Repeats
all three simultaneous 8.873E-4 ~1000 Repeats
all three sequentially 2.077E-2 (axial)
3.807E-3 (horizontal)
1.058E-3 (vertical)~333 Repeats&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P12</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_012/</guid>
      <description>
        
        
        &lt;p&gt;205 CHAPTER 8
Modal Transient Analysis
Main Index
Note: Only one subcase is allowed as the fatigue analysis needs a common set of modes. Should more than
one subcase exist, only modes from the first subcase are u sed for the fatigue analysis. This is also true
for SOL 112. A common set of boundary conditions is needed if combining subcases (load events) into
a duty cycle. Thus the same constraint is imposed on SOL 112 - only one set of modes is allowed.   So
the METHOD case control needs to be common to all subcases and the boundary conditions need to be
the same between all subcase.
For our example, the modal responses have been extracted from the SOL 112 run and converted to
TABLED1  entries contained in four different include files: cant_beam_axial.inc, cant_beam_horiz.inc,
cant_beam_vert.inc, cant_beam_all.inc . The modal analysis requests 10 modes. Thus there are 10 modal
responses (10 TABLED1 entries) for each loading condition. Each modal response contains 108 points, the
same number of points as defined by the dynamic load.
Again the FTGDEF  and FTGPARM  entries are the same between this and the previous two input decks for SOL
101 and SOL 112 (except the scale factors from the factor of safety analyses are placed in the SCALE field
of the FTGPARM entries).
For a SOL 103 analysis, the loading is set up exactly the way a pseudo-static SOL 101 analysis is setup. The
differences are that the FTGLOAD  LCID field points to a mode shape number instead of a static subcase with
a unit load. Thus the FTGLOAD  entries associate the modal response to the corresponding modal stresses. Each
FTGEVNT  entry must reference each FTGLOAD  association, one per mode.SOL 103
CEND
$
SET 42 = 101,102,103,201,202,203,350,450,550
FATIGUE(SET) = 42
$
ECHO=NONE
RESVEC = NO
METHOD = 1
SPC = 2
DISPLACEMENT(PLOT,SORT1,REAL)=ALL
SPCFORCES(PLOT,SORT1,REAL)=ALL
STRESS(PLOT,SORT1,REAL,VONMISES,BILIN)=ALL
$
SUBCASE 1
SUBTITLE=Normal Modes
$
BEGIN BULKOnly one subcase is allow ed (one set of modes).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Modal Method206
Main Index
$
$ Factor of Safety - Target Life = 1000 Repeats
$    101 = Axial Load Only
$    102 = Horizontal Load Only
$    103 = Vertical Load Only
$
FTGSEQ  101
111     1.0
FTGEVNT 111     1101    1102    1103    1104    1105    1106    1107
1108    1109    1110
FTGLOAD 1101    101      1       1.0     1.0     0.0
FTGLOAD 1102    102      2       1.0     1.0     0.0
FTGLOAD 1103    103      3       1.0     1.0     0.0
FTGLOAD 1104    104      4       1.0     1.0     0.0
FTGLOAD 1105    105      5       1.0     1.0     0.0
FTGLOAD 1106    106      6       1.0     1.0     0.0
FTGLOAD 1107    107      7       1.0     1.0     0.0
FTGLOAD 1108    108      8       1.0     1.0     0.0
FTGLOAD 1109    109      9       1.0     1.0     0.0
FTGLOAD 1110    110      10      1.0     1.0     0.0
$
FTGSEQ  102
121     1.0
FTGEVNT 121     1201    1202    1203    1204    1205    1206    1207
1208    1209    1210
FTGLOAD 1201    201      1       1.0     1.0     0.0
FTGLOAD 1202    202      2       1.0     1.0     0.0
FTGLOAD 1203    203      3       1.0     1.0     0.0
FTGLOAD 1204    204      4       1.0     1.0     0.0
FTGLOAD 1205    205      5       1.0     1.0     0.0
FTGLOAD 1206    206      6       1.0     1.0     0.0
FTGLOAD 1207    207      7       1.0     1.0     0.0
FTGLOAD 1208    208      8       1.0     1.0     0.0
FTGLOAD 1209    209      9       1.0     1.0     0.0
FTGLOAD 1210    210      10      1.0     1.0     0.0
$
FTGSEQ  103
131     1.0
FTGEVNT 131     1301    1302    1303    1304    1305    1306    1307
1308    1309    1310
FTGLOAD 1301    301      1       1.0     1.0     0.0
FTGLOAD 1302    302      2       1.0     1.0     0.0
FTGLOAD 1303    303      3       1.0     1.0     0.0
FTGLOAD 1304    304      4       1.0     1.0     0.0
FTGLOAD 1305    305      5       1.0     1.0     0.0
FTGLOAD 1306    306      6       1.0     1.0     0.0
FTGLOAD 1307    307      7       1.0     1.0     0.0
FTGLOAD 1308    308      8       1.0     1.0     0.0
FTGLOAD 1309    309      9       1.0     1.0     0.0
FTGLOAD 1310    310      10      1.0     1.0     0.0 Factor of safety analysis 101 is associated
with axial load modal responses.   Like -
wise, 102 with horizontal and 103 with
vertical modal responses.
These are the mode numbers (LCID field).
These are the TABLED1 IDs of the modal responses.&lt;/p&gt;
&lt;p&gt;207 CHAPTER 8
Modal Transient Analysis
Main Index
Fatigue analyses 201, 202, and 203 are set up the same except the scale factors are defined on the FTGPARM&lt;br&gt;
entry to give a life of 1000 Repeats  based on the results from fatigue analyses 101, 102, and 103, respectively.
$
$ Fatigue Parameters - SN Analysis
$
FTGPARM 201     SN      2.077-2
STRESS  ABSMAXPR GOODMAN        ELEM
FTGPARM 202     SN      3.807-3
STRESS  ABSMAXPR GOODMAN        ELEM
FTGPARM 203     SN      1.05E-3
STRESS  ABSMAXPR GOODMAN        ELEM
$
$ SN Analysis
$    201 = Axial Load Only
$    202 = Horizontal Load Only
$    203 = Vertical Load Only
$
FTGSEQ  201
111     1.0
$
FTGSEQ  202
121     1.0
$
FTGSEQ  203
131     1.0
$
INCLUDE &amp;lsquo;./cant_beam_axial.inc&amp;rsquo;
INCLUDE &amp;lsquo;./cant_beam_horiz.inc&amp;rsquo;
INCLUDE &amp;lsquo;./cant_beam_vert.inc&amp;rsquo;Fatigue analysis 201 is associated with axial
load modal responses.   Likewise, 202 with
horizontal and 203 with vertical modal re -
sponses.
Note that the same FTGEVNT entries are
referenced as they do not change (same
modes and same modal response/mode as -
sociation).
Include file references that contain the
modal responses as TABLED1 entries.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Modal Method208
Main Index
Factor of safety analysis 350 is associated to modal responses due to all loads acting simultaneously.
Fatigue analysis 450 is associated to modal responses due to all loads acting simultaneously. Note that the
event ( FTGEVNT  entry) that make up fatigue analysis 450 has already been previously defined and reference by
previous analyses. The scale factor determined by analysis 350 is applied in 450 to give the desired life of 1000
Repeats .
Fatigue analysis 550 is a duty cycle analysis where the three individual loads are applied sequentially. Note
that the events ( FTGEVNT  entries) that make up fatigue analysis 550 were already previously defined but are
redefined here with the loads being scaled by the scale factors computed by analyses 101, 102, and 103. Each
separately give a life of approximately 1000 Repeats . So as before, we would expect all three acting sequentially
in this manner to sum the damage to give approximately 1/3 of the life of any one acting individually, or in
other words, approximately 333 Repeats  at the element of interest.FTGPARM 350     SN      1.0
STRESS  ABSMAXPR GOODMAN        ELEM
FOS     LIFE    1000.0   1.0    20.0    1.-4
$
$ Factor of Safety - Target Life = 1000 Repeats
$    350 = All Three Loads Simultaneously
$
FTGSEQ  350
351     1.0
FTGEVNT 351     3001    3002    3003    3004    3005    3006    3007
3008    3009    3010
FTGLOAD 3001    401      1       1.0     1.0     0.0
FTGLOAD 3002    402      2       1.0     1.0     0.0
FTGLOAD 3003    403      3       1.0     1.0     0.0
FTGLOAD 3004    404      4       1.0     1.0     0.0
FTGLOAD 3005    405      5       1.0     1.0     0.0
FTGLOAD 3006    406      6       1.0     1.0     0.0
FTGLOAD 3007    407      7       1.0     1.0     0.0
FTGLOAD 3008    408      8       1.0     1.0     0.0
FTGLOAD 3009    409      9       1.0     1.0     0.0
FTGLOAD 3010    410      10      1.0     1.0     0.0 Factor of safety analysis 350 is associated with modal
responses due to all loads acting simultaneously.
TABLED1 IDs of modal responses.
Mode numbers
associated to
each modal re -
sponse.
FTGPARM 450     SN      8.873E-4
STRESS  ABSMAXPR GOODMAN        ELEM$
$
$ SN Analysis
$    450 = All Three Loads Simultaneously
$
FTGSEQ  450
351
INCLUDE &amp;lsquo;./cant_beam_all.inc&amp;rsquo;
$Fatigue analysis 450 is associated with load modal
responses due to all loads acting simultaneously.
Include file reference that contains the
modal responses as TABLED1 entries for
the three combined loads.&lt;/p&gt;
&lt;p&gt;209 CHAPTER 8
Modal Transient Analysis
Main Index
FTGPARM 550     SN      1.0      1      4
STRESS  ABSMAXPR GOODMAN        ELEM
$$
$ SN Analysis
$    550 = All Three Loads Sequentially
$
FTGSEQ  550     1       0
511     1.0     521     1.0     531     1.0
$
$
FTGEVNT 511     5101    5102    5103    5104    5105    5106    5107
5108    5109    5110
FTGLOAD 5101    101     1       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5102    102     2       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5103    103     3       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5104    104     4       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5105    105     5       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5106    106     6       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5107    107     7       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5108    108     8       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5109    109     9       2.077-2 1.0     0.0  &lt;br&gt;
FTGLOAD 5110    110     10      2.077-2 1.0     0.0  &lt;br&gt;
FTGEVNT 521     5201    5202    5203    5204    5205    5206    5207
5208    5209    5210
FTGLOAD 5201    201     1       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5202    202     2       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5203    203     3       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5204    204     4       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5205    205     5       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5206    206     6       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5207    207     7       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5208    208     8       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5209    209     9       3.807-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5210    210     10      3.807-3 1.0     0.0  &lt;br&gt;
$
FTGEVNT 531     5301    5302    5303    5304    5305    5306    5307
5308    5309    5310
FTGLOAD 5301    301     1       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5302    302     2       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5303    303     3       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5304    304     4       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5305    305     5       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5306    306     6       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5307    307     7       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5308    308     8       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5309    309     9       1.058-3 1.0     0.0  &lt;br&gt;
FTGLOAD 5310    310     10      1.058-3 1.0     0.0     Fatigue analysis 550 is a duty cycle
analysis where each individual
load is applied sequentially once
each.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks210
Main Index
The factor of safety scale factors between the SOL 112 and SOL 103 run are, as expected, identical.
Concluding Remarks
To conclude, here is a summary of the difference and similarities between using quasi-static, normal modes,
or modal transient analysis to perform fatigue analysis along with some limitation to be aware of.
Modal transient analysis (SOL 112) and modal analysis (SOL 103) use identical methods to
compute fatigue life. The difference is that SOL 112 does everything internally as all the loading is
defined directly in a SOL 112 job, and thus the modal responses determined automatically. For SOL
103, the modal responses must be provided and associated to each mode in order to do the linear
superposition to compute the cyclically varying stress responses.
Both the pseudo-static (SOL 101) and modal stress recover methods (SOL 103 or 112) are
mathematically identical. Once the data are provided, the internal computation (the principle of
linear superposition) to determine the cyclically varying stress responses does not know whether the
method is pseudo-static or modal in nature.
Practically though, the difference between the pseudo-static and modal stress recovery methods with
respect to the principle of linear superposition are:
•pseudo-static method uses unit loads; modal method uses mode shapes
•pseudo-static method uses load time histories; modal method uses modal responses for each mode
shape
Modal transient (SOL 112) subcases are loading events in fatigue analysis terminology. By definition
they contain all simultaneously applied loads. Therefore they are equivalent to multiple subcases to
define a single load event using the quasi-static (SOL 101) method.
Boundary conditions must not change from subcase to subcase in a modal transient analysis (SOL
112) when doing fatigue analysis where load events are combined into a duty cycle.   The mode
shapes must be identical for each subcase.
Only one subcase can be used in fatigue analysis using the modal method (SOL 103). If more than
one subcase is present, the modes from the first subcase are used for all loading events for the
purposes of the linear superposition to determine the resulting response time history.Table 8-4  Scale Factors (Target Life = 1000 Repeats) at Element 245 (SOL 103)
Loading Scale Factor Fatigue Life
axial 2.077E-2 ~1000 Repeats
horizontal 3.807E-3 ~1000 Repeats
vertical 1.058E-3 ~1000 Repeats
all three simultaneous 8.873E-4 ~1000 Repeats
all three sequentially 2.077E-2 (axial)
3.807E-3 (horizontal)
1.058E-3 (vertical)~333 Repeats&lt;/p&gt;
&lt;p&gt;211 CHAPTER 8
Modal Transient Analysis
Main Index
The modal stress recovery method provides computational efficiency. One might ask: beside
accounting for dynamic affect, why use this method over the pseudo-static method? The answer is
because it reduces the size of the problem down to an m x 6 + m x k problem as opposed to an n x 6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l x k problem where n is the number of locations (nodes or element centroids) and m is the
number of mode shapes, k is the number of time steps, and l is the number of loads. So for example
to compute fatigue life at 200 nodes ( n) with 100 loads ( l), each with 108 time points ( k) is 12,000
data points.   If 10 modes ( m) are retained, the modal method reduces this to 1,140 data points.
Naturally, the more loads there are and the less modes retained, the smaller the problem size. Six (6)
is the number of components is a stress tensor.
Likewise: why not just pass the resulting stress time histories from the SOL 112 analysis to the
fatigue analyzer? The answer is because this reduces the amount of data passed to the fatigue
analyzer from n x 6 x k to m x k + m x n. So as an example, a model with 200 locations and 108 time
points is 129,600 data points. But for the modal method with 10 mode shapes, this is 10 x 108 + 10
x 200 = 3,080 data points.
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
This Chapter has three separate solutions solved for SOL 101, 103, and 112. Each is explained separately.
SOL 101: cant_beam101.dat
Step 1: Import the Model
Start Patran and open a new Patran database and call it cant_beam . Use the Analysis  application to
import the input deck associated with this example: cant_beam101.dat  (Action =Read Input File ).
Make sure the Analysis Preference  is set to MSC.Nastran.
Note: The imported input deck does multiple fatigue analyses (FATIGUE entry references as SET entry
pointing to multiple IDs). Patran cannot fully import this deck with multiple fatigue jobs. Only the
parameters from the first job encountered are imported. However the load sequences from each are
imported and all associated to the one job in Patran. To run all the fatigue jobs in this deck you must
either create multiple jobs, or repeat submission of the same job after changing the appropriate
parameters. Multiple load sequences are import and associated to only the one job in Patran. It is
advisable to deactivate the load sequences that are not applicable to the particular run you wish to
reproduce from this input deck.
Step 2: Check the Model
Go to the Loads/BCs  application. Plot the LBC markers ( Action =Plot Markers ). Make sure the
Current Load Case  is set to one of the imported load cases ( e.g.: AXIAL.SCn ), where n represents the
load case number (1-3). Specifically select the force LBC and press the Apply  button. Repeat this for
the other Load Cases so you can see how the loading is defined on the outer edge of the beam.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup212
Main Index
Go to the Materials  application. Set the Action  to Modify  and select the only available material ( steel).
Note the values in the Linear Elastic  constitutive model. If there is no current Stress-Life (SN)&lt;br&gt;
constitutive model, create one. If there is, verify the following parameters, which are written to the
MATFTG  entry. Please note the stress parameters are entered in MPa but the model consistent stress
units are PSI, so the Conversion Factor  is supplied.
Go to the Element Properties  application. Set the Action  to Modify . Select the Shells  property. Note
the properties defined here. All fatigue element properties are defined here. Make sure the following
are set below. Any property not mentioned should be left blank. Values for the fatigue properties are
placed on the PFTG entry. All other pertinent properties are part of the PSHELL entry and related
elements for this model (or PSOLID and related elements).
Go to the Fields  application. There should be an existing Non Spatial  field that defines the oscillation
of cyclic loading (independent variable Time (t)  ). Click on it and examine it. The values make up the
TABLFTG  entry. If the field does not exist or does not contain all the 108 time points, you will have to
create or modify the field and enter all 108 time points and their corresponding values per the TABLFTG&lt;br&gt;
in the imported input deck. Make sure the independent variable is Time (t). If it is not, modify it to
be so!
Step 3: Check the Output RequestsParameter Value
Constitutive Model: Stress-Life (SN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Yield Stress 76.923103
Ultimate T ensile Strength 100.
Stress Range Intercept 453.8
1st Strength Exponent -0.1339
T ransition Point 1.0e6
2nd Strength Exponent 0.0
Standard Error of Log(N) 0.1
Conversion Factor 145.0377
Parameter Value
[Surface Finish] None&lt;/p&gt;
&lt;p&gt;213 CHAPTER 8
Modal Transient Analysis
Main Index
Go to the Analysis  application ( Action  = Analyze ). First make sure the subcases are set up properly
for fatigue life output. Click on the Subcases&amp;hellip;  form. Our subcases are called AXIAL.SC1 ,
HORIZONTAL.SC2, and VERTICAL.SC3 . Click on AXIAL.SC1  from the Available Subcases  list box
to access all its settings. Then open the Output Requests&amp;hellip;  form. It is best to set this form to the
advanced setting ( Form Type: ).
If FATIGUE  is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an S-N material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed. At this point, nothing further is needed to be defined on this form unless
you want to limit the elements included in the analysis in which case select the property sets from the
top list box on the right side of the form in advanced mode.
One last note about output requests. Fatigue life output requests are subcase independent unlike
most standard output requests such as stress and displacement. If you are using multiple subcases, the
first subcase selected (see the next step) must have the Fatigue Life  output request in it. Thus, it is not
necessary in this example to open each subcase and ensure that FATIGUE is set as an output request.
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes the subcase.
Step 4: Check the Fatigue Parameters
Still in the Analysis  application, click on the existing job cant_beam101  to restore all its settings.
Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form.(In this explanation,
only the fatigue analysis jobs are set up. The factor-of-safety jobs from the original deck that was read
are not part of this setup.) From here you can check the Fatigue Parameters&amp;hellip;  Open this form and
ensure the following parameters are set, which are written to the FTGPARM  entry. If a parameter is not
mentioned below, use the default value or leave it blank. Close all the forms when done using the OK
buttons.  Note that only results for the top layer of the shell elements are to be returned by the fatigue
analyzer.
Parameter Value
General Parameters:
Stress Units: PSI
Stress Combination: Abs. Max. Principal
Results Location: Element Center
Layer: T op
Certainty of Survival (%): 50
Stress-Life (S-N):
Run SN Analysis T urn this ON
Mean Stress Correction: Goodman
Factor of Safety
Run Factor of Safety Analysis T urn this ON&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup214
Main Index
Also, in order to post-process the fatigue results in Patran, make sure that the results are written to
the MASTER/DBALL files. This is done in the Solution Parameters&amp;hellip; form by opening the Results
Output Format&amp;hellip; form and turning ON the MASTER/DBALL  toggle.
Step 5: Check the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application).
Tip: In order to fully follow the subsequent explanation, it is suggested that you delete or overwrite
any existing sequences that may be defined due to importing an existing input deck and start from
scratch as explained below.
Only the three (3) subcases ( AXIAL.SC1, HORIZONTAL.SC2, VERTICAL.SC3 ) should be present
in the bottom list box. Now open the Define Fatigue Load Sequences&amp;hellip;  form. On this form ensure
that the loading associations are set up properly. For the loading in this example, we want to associate
the three loads to the field defining the cyclic nature of the loading. Change the Max # of Static Load
Cases  to 3 and press the Enter  or Return key. This places three rows in the spreadsheet. Four events
should be create, one for each individual load, and a forth for all three loads acting simultaneously.
Each layer of the spreadsheet represents an event. For the events with only one load, leave the other
two rows blank (not filled in with any subcase or time history). Fill out the spreadsheet for each layer
as shown here if not already filled out.
Make sure you press the Enter  or Return key. when entering Scale Factor  and Load Magnitude  so the
cells are properly filled out.
Now define five (5) load sequences. Use the right mouse button to click on Load Sequences  and Add
a New Sequence . Do this five times. Then right mouse button click on each sequence in turn and Edit
Sequence&amp;hellip;  Change the name of the sequence as listed in the table below. Do the same to Add
Event&amp;hellip; (s) to each sequence per the table below also. The load sequence is now defined.  Event Name SubcaseTime
HistoryLoad
MagnitudeScale
Factor Offset
Axial AXIAL.SC1 Field.99 1.0 1.192 0.0
Horizontal HORIZONTAL.SC
2Field.99 1.0 0.0119 0.0
Vertical VERTICAL.SC3 Field.99 1.0 3.261e-3 0.0
All Loads AXIAL.SC1 Field.99 3.51 1.192 0.0
HORIZONTAL.SC
2Field.99 3.51 0.0119 0.0
VERTICAL.SC3 Field.99 3.51 3.261e-3 0.0
Sequence Name Event Repeats
Axial Only Axial 1.0
Horizontal Only Horizontal 1.0
Vertical Only Vertical 1.0
All Simultaneously All Loads 1.0&lt;/p&gt;
&lt;p&gt;215 CHAPTER 8
Modal Transient Analysis
Main Index
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD  entries. You can close the Load Sequence&lt;br&gt;
form using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result
Entities . Select the cant_beam101.MASTER  file and press the Apply  button.
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Repeats&lt;br&gt;
for the fatigue results case .
Step 8: Run Factor of Safety Jobs
The above set up did not run the factor of safety analysis jobs that are also set up in the original input file.
Patran will not allow you to set up all of these in a single input deck. To run the factor of safety, using a new
Job Name  in the Analysis  application, you need to turn ON  the Factor of Safety  analysis in the Fatigue
Parameters&amp;hellip;  form and change the T arget Life =1000 , and you will have to adjust the Scale Factor  and Load
Magnitude  entries in the load sequences to match those in the original input deck. All other input remains
identical. The Maximum  and Minumum Safety Factors  should be set to 20, and 1.-4, respectively.All Duty Cycle Axial 1.0
Horizontal 1.0
Vertical 1.0Sequence Name Event Repeats&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup216
Main Index
SOL 112: cant_beam112.dat
Step 1: Create a New Job
You could go about this in two different ways. You could open a new database and then import the
input deck associated with this example: cant_beam112.dat  (Action =Read Input File ) and then
continue to verify the model and set up and submit the fatigue analysis. However for the purposes of
this exercise, continue in the same database as the previous job using the cant_beam101.dat  as the
imported input deck.
Note: If you go the import see the note under SOL 101: cant_beam101.dat, 211
Step 2: Check the Model
Go to the Load Cases  application ( Loads/BCs  tab / Load Cases  button in skin mode). Set the Action&lt;br&gt;
to Modify . For each of our Existing Load Cases  select them one at a time and make sure the load case
Type is Time Dependent . Ensure that each contains the following LBCs as per the table below. Modify
them to be so if needed. Also you will need to create the ALL.SC4 load case.
Note that the scale factors are applied in the load cases in this case and not defined as part of the
FTGPARM  entry using the Fatigue Parameters&amp;hellip;  form. The reason for doing this is to allow us to run
all the non-factor-of-safety jobs in a single run. For the SOL 101 job we put the scale factors right in
the Load Sequence&amp;hellip;  form in order to run all fatigue analyses in a single run. For SOL 112, this is not
possible on the Load Sequence&amp;hellip; form as you will see momentarily. We could define the scale factors
in the Fatigue Parameters&amp;hellip;  form, but this would force us to run one fatigue analysis per defined job.
Go to the Loads/BCs  application. Set Action =Modify  and Object =Force . Set the Current Load Case&lt;br&gt;
to ALLSC4  so we can see all three forces. Select force.5  from the list box and open the Modify Data&amp;hellip;&lt;br&gt;
form. In this form only the Force &lt;!-- raw HTML omitted --&gt;  data box should be filled out. In addition to this, the
data box just to the right of this data box must have our cyclic non-spatial time field: Field.99 . If not,
select it from the Time/Freq Dependent Fields  list box. (Note that sometimes the time dependent fields
are not visible unless you scroll the form or drag it over the middle of the screen and expand it.) Press
the Apply  button to modify the force LBC. Repeat this for the other two forces.
The material model and element properties are the same as for the SOL 101 job.
Step 3: Set the Job Name and SolutionLoad Case Type Scale Factor Associated LBCs
AXIAL.SC1 Time Dependent 0.02077 Displ_spc1.4
Force_force.5
HORIZONTAL.SC2 Time Dependent 0.003807 Displ_spc1.4
Force_force.7
VERTICAL.SC3 Time Dependent 0.001058 Displ_spc1.4
Force_force.9
ALL.SC4 Time Dependent 0.0008873 Displ_spc1.4
Force_force.5
Force_force.7
Force_force.9&lt;/p&gt;
&lt;p&gt;217 CHAPTER 8
Modal Transient Analysis
Main Index
Go to the Analysis  application ( Action  = Analyze ). Change the Job Name  to cant_beam112 . Open
the Solution Type&amp;hellip;  form and set the Solution Type  to TRANSIENT RESPONSE  with
Formulation =Modal .
Step 4: Define the Fatigue Parameters
Open the Solution Type / Solution Parameters&amp;hellip;  form and ensure that the settings on the Results
Output Format&amp;hellip;  and Fatigue Parameters&amp;hellip;  forms are the same as they were for the SOL 101 job.
The Eigenvalue Extraction&amp;hellip; form should have 10 set for the Number of Desired Roots  (this is the
default). Close the Solution Parameters&amp;hellip;  form with the OK button.
Step 5: Define the Subcases and Output Requests
Open the Subcases&amp;hellip;  form. Each of the subcases has to be redefined for SOL 112. Do this one subcase
at a time. Select the first subcase from the top list box.
Ensure that the same request for Fatigue Life  is made for at least the first of our subcases as it was for
the SOL 101 job.
Each subcase must have 108 time steps defined with a Delta-T of 1.0 and Skip Factor  of 1. Do this
under the Subcase Parameters&amp;hellip;  form and then under the DEFINE TIME STEPS&amp;hellip;  form. Make
sure you do this for each subcase.
When done defining time steps and adding the fatigue output request, close the respective forms and
press the Apply  button on the Subcases&amp;hellip;  form to store the changes to each subcase. Repeat the above
process for each subcase.
Step 6: Define the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). Deselect anything in the
bottom list box and then select the subcases from the top list box in this order: AXIAL.SC1 ,
HORIZONTAL.SC2 , VERTICAL.SC3 , ALL.SC4 .
Now open the Define Fatigue Load Sequences&amp;hellip;  form. Just like the SOL 101 setup, four events
should be create, one for each individual load, and a forth for all three loads acting simultaneously.
The difference here is that only the transient subcase needs to be selected to define a fatigue load
event. Fill out the spreadsheet for each layer as shown here if not already filled out.&lt;br&gt;
Event Name Subcase
Axial AXIAL.SC1
Horizontal HORIZONTAL.SC
2
Vertical VERTICAL.SC3
All Loads ALL.SC4&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup218
Main Index
Now define five (5) load sequences. Use the right mouse button to click on Load Sequences  and Add
a New Sequence . Do this five times. Then right mouse button click on each sequence in turn and Edit
Sequence&amp;hellip;  Change the name of the sequence as listed in the table below. Do the same to add events
to each sequence per the table also. The load sequence is now defined. The definition is actually
identical to the SOL 101 job.&lt;br&gt;
This defines the FTGSEQ  entry. You can close the Load Sequence  form using the OK button.
Step 7: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 8: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result Entities .
Select the cant_beam112.MASTER  file and press the Apply  button.
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Repeats&lt;br&gt;
for the fatigue results case .
Step 9: Run Factor of Safety Jobs
The above set up did not run the factor of safety analysis jobs that are also set up in the original input file.
Patran will not allow you to set up all of these in a single input deck. T o run the factor of safety, you need to
turn ON the Factor of Safety  analysis in the Fatigue Parameters&amp;hellip;  form and change the T arget Life =1000 , and
you will have to adjust the Scale Factor  back to 1.0 on the Load Cases to match those in the original input
deck.Sequence Name Event Repeats
Axial Only Axial 1.0
Horizontal Only Horizontal 1.0
Vertical Only Vertical 1.0
All Simultaneously All Loads 1.0
All Duty Cycle Axial 1.0
Horizontal 1.0
Vertical 1.0&lt;/p&gt;
&lt;p&gt;219 CHAPTER 8
Modal Transient Analysis
Main Index
SOL 103: cant_beam103.dat
Step 1: Create a New Job
Again, you could go about this in two different ways. You could open a new database and then import
the input deck associated with this example: cant_beam103.dat  (Action =Read Input File ) and then
continue to verify the model and set up and submit the fatigue analysis. However for the purposes of
this exercise, continue in the same database as the previous job using the cant_beam101.dat  as the
imported input deck, now with both SOL 101 and 112 jobs defined.
Note: If you go the import see the note under SOL 101: cant_beam101.dat, 211
Step 2: Prepare the Modal Responses
This SOL 103 job, in the end, will give identical results to the SOL 112 job. However, to do this in
a SOL 103 job, the external modal responses must be made available. These modal responses could
come from various different sources. For the purposes of this exercise the modal responses are output
from the SOL 112 job. To produce them, do this outside of Patran:
Edit the SOL 112 input deck and add this output request above all SUBCASES and submit to MSC
Nastran:
SDISPLACEMENT(PUNCH)=ALL
Also, if the following line exists, it is recommended that you comment it out by putting a “$” in front
of it:
NASTRAN SYSTEM(316)=19
The modal responses are output to the punch file, called cant_beam112.pch . Now the challenge is to
convert these to either external DAC files or import them to Patran in the form of non-spatial time
fields. There is a utility in Patran that can convert the punch file modal responses to individual modal
response XY files that can be imported to Patran as long as only modal responses are present in the
punch file. Do the following:
•Select Tools  | MSC Fatigue  | Main Interface  (Requires that MSC Fatigue be installed - no license
is required) - this simply initializes the utility
•In the Patran command window, type:
fatigue_input.convert_punch(“cant_beam112”,””)
One file, called moden.asc.01 , for each modal response found (n). So for this problem there are
four subcases, each with 10 modes, therefore we get 40 files, mode1.asc.01  through mode40.asc.01 .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup220
Main Index
•Go to the Fields  application and create 40 Non-spatial  fields, one for each of the files created using
the Import&amp;hellip;  capability on the Input Data&amp;hellip; form by selecting each file as appropriate. Name
them modenn _axial , modenn _horizontal , modenn _vertical , modenn _all, where nn is the mode
number. Note that you have to change the CSV Import Options&amp;hellip;  to use Space  as the Value
Separator . Use this table as a guide.
Each of these are translated into individual TABLFTG  entries when submitting the job from Patran.
Step 3: Set the Job Name and Solution
Go to the Analysis  application ( Action  = Analyze ). Change the Job Name  to cant_beam103 . Open the
Solution Type&amp;hellip;  form and set the Solution Type  to NORMAL MODES .
Step 4: Define the Fatigue Parameters
Open the Solution Parameters&amp;hellip;  form and ensure that the settings on the Results Output Format&amp;hellip;&lt;br&gt;
and Fatigue Parameters&amp;hellip;  forms are the same as they were for the SOL 101 and SOL 112 jobs. Close
the Solution Parameters&amp;hellip;  form with the OK button.SubcaseNon-Spatial Field Name XY File
AXIAL.SC1 mode01_axial mode1.asc.01
mode02_axial mode2.asc.01
&amp;hellip; &amp;hellip;
mode10_axial mode10.asc.01
HORIZONTAL.SC1 mode01_horizontal mode11.asc.01
mode02_horizontal mode12.asc.01
&amp;hellip; &amp;hellip;
mode10_horizontal mode20.asc.01
VERTICAL.SC1 mode01_vertical mode21.asc.01
mode02_vertical mode22.asc.01
&amp;hellip; &amp;hellip;
mode10_vertical mode30.asc.01
ALL.SC1 mode01_all mode31.asc.01
mode02_all mode32.asc.01
&amp;hellip; &amp;hellip;
mode10_all mode40.asc.01&lt;/p&gt;
&lt;p&gt;221 CHAPTER 8
Modal Transient Analysis
Main Index
Step 5: Define the Subcases and Output Requests
Open the Subcases&amp;hellip;  form. Only one subcase needs to be define. You can use the Default  subcase.
Select it and ensure that the same request for Fatigue Life  is made the SOL 101 and 112 jobs. The
Subcase Parameters&amp;hellip;  form should have 10 set for the Number of Desired Roots  (this is the default).
When done, close the respective forms and press the Apply  button on the Subcases&amp;hellip;  form to store
the changes to each subcase.
Step 6: Define the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). Deselect anything in the
bottom list box and then select the Default  subcase from the top list box.
On this form ensure that the loading associations are set up properly. For the loading in this example,
we want to associate each mode to its modal response for each loading event (that correspond to the
original transient response subcases). Change the Number of Modes  to 10 and press the Enter  or
Return key. This places 10 rows in the spreadsheet. Four events should be create, one for each
individual load, and a forth for all three loads acting simultaneously. Each layer of the spreadsheet
represents an event. Fill out the spreadsheet for each layer as shown here if not already filled out.
Make sure you press the Enter  or Return key. when entering Scale Factor  and Load Magnitude  so the
cells are properly filled out. Note that we are defining the scale factors in the load sequence again as
opposed to doing it as an overall fatigue parameter.Event
Name Mode Number Modal ResponseLoad
MagnitudeScale
Factor Offset
Axial Mode no. 1 mode01_axial 1.0 0.02077 0.0
Mode no. 2 mode02_axial 1.0 0.02077 0.0
&amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
Mode no. 10 mode10_axial 1.0 0.02077 0.0
Horizontal Mode no. 1 mode01_horizontal 1.0 0.003807 0.0
Mode no. 2 mode02_horizontal 1.0 0.003807 0.0
&amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
Mode no. 10 mode10_horizontal 1.0 0.003807 0.0
Vertical Mode no. 1 mode01_vertical 1.0 0.001058 0.0
Mode no. 2 mode02_vertical 1.0 0.001058 0.0
&amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
Mode no. 10 mode10_vertical 1.0 0.001058 0.0
All Loads Mode no. 1 mode01_all 1.0 0.0008873 0.0
Mode no. 2 mode02_all 1.0 0.0008873 0.0
&amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
Mode no. 10 mode10_all 1.0 0.0008873 0.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup222
Main Index
Also note that there is a toggle on the Load Sequence&amp;hellip;  form called Fill Down . If you turn this ON,
when selecting and filling in a cell in the spreadsheet, all cells in the same column will automatically
be filled in with sequentially ascending data. Give it a try to see what it does. In cases like these, it
helps fill out the form much more quickly.
Now define five (5) load sequences. Use the right mouse button to click on Load Sequences  and Add
a New Sequence . Do this five times. Then right mouse button click on each sequence in turn and Edit
Sequence&amp;hellip;  Change the name of the sequence as listed in the table below. Do the same to Add
Event&amp;hellip; (s) to each sequence per the table below also. The load sequence is now defined. The
definition is actually identical to the SOL 101 and 112 jobs.&lt;br&gt;
This defines the FTGSEQ /FTGEVNT /FTGLOAD  entries. You can close the Load Sequence  form using the
OK button.
Step 7: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 8: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result Entities .
Select the cant_beam103.MASTER  file and press the Apply  button.
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Repeats&lt;br&gt;
for the fatigue results case .
Step 9: Run Factor of Safety Jobs
The above set up did not run the factor of safety analysis jobs that are also set up in the original input file.
Patran will not allow you to set up all of these in a single input deck. T o run the factor of safety, you need to
turn ON the Factor of Safety  analysis in the Fatigue Parameters&amp;hellip;  form and change the T arget Life =1000 , and
you will have to adjust the Scale Factor  back to 1.0 on the Load Cases to match those in the original input
deck.Sequence Name Event Repeats
Axial Only Axial 1.0
Horizontal Only Horizontal 1.0
Vertical Only Vertical 1.0
All Simultaneously All Loads 1.0
All Duty Cycle Axial 1.0
Horizontal 1.0
Vertical 1.0&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 9: Design Optimization
9 Design Optimization
Problem Description
Fatigue Setup
Concluding Remarks&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description224
Main Index
Problem Description
This example uses a simple cantilevered plate to illustrate the fatigue optimization feature. The model is
identical to that used in the Cantilevered Plate  (Ch. 8) in the Design Sensitivity and Optimization User’s Guide&lt;br&gt;
for demonstrating multi-disciplinary analysis and design (see file dsoug3.dat  in the test problem library
tpl/ugdesopt ). The user should familiarize him/herself with that model first and should have basic
understanding of the usage of SOL 200, design optimization. This example is not a comprehensive
illustration or explanation of setting up, using, and debugging SOL 200 runs, but instead, is an illustration
of how fatigue constraints and objectives can be used in an optimization analysis.
Figure 9-1  Plate Thickness Design Problem
Objective
To illustrate the fatigue life optimization capability
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 9-1  Files Required
Files Required Description
fat_desopt_nolife.dat Modified dsoug3.dat  file with no fatigue life constraint.
fat_desopt_life.dat Modified dsoug3.dat  file with fatigue life constraint.
fat_desopt_loglife.dat Modified dsoug3.dat  file with fatigue log of life constraint.
fat_desopt_eqlife.dat Modified dsoug3.dat  file with fatigue equivalent life constraint.
fat_desopt_eqloglife.dat Modified dsoug3.dat  file with fatigue equivalent log of life constraint.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P13</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_013/</guid>
      <description>
        
        
        &lt;p&gt;225 CHAPTER 9
Design Optimization
Main Index
Limitations
Before proceeding, it is expedient to understand the current limitations of fatigue optimization in SOL 200.
Fatigue responses can currently only be defined from a single load sequence. That is, DRESP1  entries
can only reference one fatigue analysis (called out by the FATIGUE  case control) in the ATTB field.
However, there can be as many DRESP1  entries as necessary to define the fatigue responses as long as
they all reference the same fatigue output request.
Only ANALYSIS=STATIC subcases are currently supported, although the design optimization can
still be multi-disciplinary. Only static subcases can be used to calculate fatigue responses.
Currently, only the first subcase can have fatigue constraints defined by a DESSUB  case control. As
fatigue output requests are called out above the subcase level, it is recommended to use a global
constraint (DESGLB). Fatigue constraints encountered by anything other than the DESGLB  or the
DESSUB from the first subcase result in an error.
Description
The objective of this exercise is to determine the optimum thickness distribution of the cantilever plate such
that structural mass is minimized. There are a number of loading conditions imposed: a tip load as shown in
the figure above and a uniform pressure, also shown. Constraints are placed on the maximum allowable tip
displacement and the von Mises stresses on the upper surface of the first row of elements along the length of
the plate. A constraint is also placed on the first natural frequency and a frequency response analysis is
performed using a tip load across a frequency range of 0.0 to 10.0 Hz with a maximum tip displacement
constraint. This is the original example. On top of this a fatigue analysis is performed with a fatigue life
constraint imposed on the same elements as the stress constraint for the tip load. See the tables below for a
summary.fat_desopt_damage.dat Modified dsoug3.dat  file with fatigue damage constraint.
fat_desopt_logdamage.dat Modified dsoug3.dat  file with fatigue log of damage constraint.
fat_desopt_fos.dat Modified dsoug3.dat  file with fatigue safety factor constraint.
fat_desopt_obj.dat Modified dsoug3.dat  file with fatigue life objective.
saesus.mod External file describing cyclic loading conditions for subcase 2.
saetrn.mod External file describing cyclic loading conditions for subcase 1.Table 9-1  Files Required
Files Required Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description226
Main Index
Table 9-2  Analysis Model Description (2 x 8 array of CQUAD4 elements)
Table 9-3  Design Model Description Material: E = 10.0E+6 psi
UTS = 58,015 psi
SRI1 = 137,350 psi
b1 = -0.076
Nc1 = 5.0E+8 cycles
b2 = 0.0
Nfc = 1.3E+30 cycles
R = -1
Se = 0.1
T wo static structural analyses:
Tip Load: T wo 500 lb. loads in -z direction
Pressure Load: Uniform at 7.5 lb./in2
One normal modes analysis
One modal frequency analysis:
Tip Load: T wo 50 lb. loads in z-direction
Structural damping: 10%
One fatigue analysis: Tip load cyclic variation
Objective: Structural weight minimization
Design variables: Basis functions *: constant, linear and quadratic in x direction to
describe plate element thicknesses
*The eight individual plate thicknesses (one for each station along the length of the plate) are func -
tions of three independent variables 1, 2, and 3. For a description of the reduced basis func -
tions used, please see the original problem in Cantilevered Plate  (Ch. 8) in the Design Sensitivity and
Optimization User’s Guide .Constraints:
ANALYSIS = STATICS Tip displacement  2.0 inches
von Mises stress  29 ksi
ANALYSIS = MODES First natural frequency  1.5 Hz
ANALYSIS = MFREQ Magnitude of tip displacement  2.0 inches
FATIGUE = 101: 100,000 repeats of a cyclic tip load application&lt;/p&gt;
&lt;p&gt;227 CHAPTER 9
Design Optimization
Main Index
Fatigue Setup
Portions of the input deck for the fatigue optimization are shown and described below, starting with the case
control:
SOL 200
CEND
$
TITLE = Cantilever Plate NEF Model - Design Optimization
$
FATIGUE = 42
$
SPC      = 100
DISP(PLOT)     = ALL
STRESS(PLOT)   = ALL
DESOBJ(MIN) = 35   $ OBJECTIVE FUNCTION DEFINITION
DESGLB = 99        $ GLOBAL FATIGUE CONSTRAINT
SUBCASE 1
ANALYSIS = STATICS
SUBTITLE = LOAD CONDITION 1
LOAD     = 300
DESSUB   = 10
SUBCASE 2
ANALYSIS = STATICS
SUBTITLE = LOAD CONDITION 2
LOAD     = 310
DESSUB   = 10
SUBCASE 3
ANALYSIS = MODES
SUBTITLE = NORMAL MODES ANALYSIS
STRESS(PLOT)   = NONE
METHOD   = 100
DESSUB   = 30
SUBCASE 4
ANALYSIS = MFREQ
METHOD   = 100
SET 100  = 9,19,29   &lt;br&gt;
DISP(PLOT,PHASE,SORT2)  = 100
STRESS(PLOT)   = NONE
SUBTITLE = MODAL FREQUENCY ANALYSIS
LOADSET  = 2000
DLOAD    = 1000
DESSUB   = 40
FREQ     = 1000
$
BEGIN BULK
Case Control
The objective function is called out by DESOBJ(MIN)=35 , defining the minimization of the weight.
The design optimization case control contains four subcases that define the design task. Subcases 1 and 2
perform static analysis and impose different load conditions while sharing the imposed tip displacement and&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup228
Main Index
stress design constraints (DESSUB=10). Subcase 3 performs a normal modes analysis with METHOD=100
identifying the EIGRL bulk data entry that specifies the eigenvalue requests, while the DESSUB=30 points
to the DCONSTR entry that imposes a limit on the first natural frequency. Subcase 4 performs a modal
frequency response analysis (ANALYSIS=MFREQ) and uses the same METHOD=100 specification for the
eigenanalysis. For the 4th subcase, the PHASE part of the DISP(PHASE,SORT2)=100 acts to signify that
the magnitude/phase representations is to be used, not only in the printed and stored results, but also for the
FRDISP request on DRESP1 ID=230. The SORT2 request and the 100 have no effect on the design
response.
The FATIGUE =42 indicates that bulk data entries FTGDEF , FTGPARM , and FTGLOAD =42 are to be used in a fatigue
analysis. A fatigue constraint is imposed on a global level using the DESGLB=99 , calling out a DCONSTR
entry containing the fatigue constraint.
Material and Physical Properties
The material model is defined in the bulk data as shown. The MATFTG  entry that corresponds to the MAT1
entry defines the stress-life (S-N) curve for this material. Please refer to previous chapters and examples for
explanations of the S-N curve.
MAT1    51      1.0E+7          0.33    0.1
50000.  50000.  29000.
MATFTG  51      145.0377
STATIC  307.692 400.0   100             -1.0    0.1
SN      947.0   -0.07606 5.0e8  0.0     1.0e30
The fatigue analysis is defined for the elements of the PSHELL entries as shown here with default fatigue
properties. Again please refer to previous chapters and examples for explanations of the FTGDEF  and PFTG
entries.
SET4    1       PROP     PSHELL 1       THRU    8
FTGDEF  42
ELSET   1        999
PFTG    999   &lt;br&gt;
Fatigue Parameters
The fatigue analysis is defined as a Total Life  or Stress-Life (S-N)  analysis. Detailed explanations have been
given in the previous chapters. Note that the stress units of this model are defined as PSI on the DTI,UNITS&lt;br&gt;
entry for the fatigue analysis. This is required input.
FTGPARM 42      SN      1.000            4
STRESS          GOODMAN          ELEM
DTI     UNITS   1                                       PSI
Cyclic Loading
For the fatigue analysis, the following is defined for the cyclic loading of the tip load in subcase 1. Subcase 2
is not considered in the fatigue analysis. However the cyclic loading could have been any combination of
static subcases, each with its own cyclic load definition, including multiple events making up a duty cycle.
Detailed example of more complicated cyclic loading is provided in the previous chapters. In this example,&lt;/p&gt;
&lt;p&gt;229 CHAPTER 9
Design Optimization
Main Index
the cyclic loading is defined by the contents of an external (DAC formatted) file. One thousand repeats of
the cyclic loading is defined as an equivalent fatigue life unit of Laps.
FTGLOAD 42      98      1       1000.0   7.883    0.0      DB
UNITS   1000.   Laps
$
UDNAME  98
./saetrn.mod
Design Model
The design model consists of the design  variables and their relationships to the thicknesses defined on the
PSHELL entries as explained in Cantilevered Plate  (Ch. 8) in the Design Sensitivity and Optimization User’s
Guide .
DESVAR  10      ALPH1   1.0
DESVAR  20      ALPH2   1.0
DESVAR  30      ALPH3   1.0
$
DVPREL1 1       PSHELL  1       T
10      1.0     20      1.000   30      1.0
DVPREL1 2       PSHELL  2       T
10      1.0     20      0.875   30      0.7656
DVPREL1 3       PSHELL  3       T
10      1.0     20      0.750   30      0.5625
DVPREL1 4       PSHELL  4       T
10      1.0     20      0.625   30      0.3906
DVPREL1 5       PSHELL  5       T
10      1.0     20      0.500   30      0.250
DVPREL1 6       PSHELL  6       T
10      1.0     20      0.375   30      0.1406
DVPREL1 7       PSHELL  7       T
10      1.0     20      0.250   30      0.0625
DVPREL1 8       PSHELL  8       T
10      1.0     20      0.125   30      0.0156&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup230
Main Index
The responses are as shown from the original example with the new fatigue life response highlighted. The
response label is simply defined as LIFE, and the response type (RTYPE field) is set to FATIGUE. The same
elements are called out in the ATTi fields as for the stress response. Item code 4 in field ATTA specifies fatigue
life in Repeats  of the cyclic loading as the response of interest. The ATTB field, set to 42, specifies that fatigue
loading sequence 42 called out from the FATIGUE  case control with corresponding FTGLOAD  entry is the fatigue
analysis from which to compute life responses for this optimization run.
$===================================================================
$$$&amp;hellip; Fatigue &amp;ldquo;life&amp;rdquo; responses:
DRESP1   22     LIFE    FATIGUE ELEM            4       42      1
2       3       4       5       6       7       8
DSCREEN  FATIGUE -100.0
$===================================================================
$
$$$&amp;hellip; Static von Mises stresses:
DRESP1   2      S12     STRESS  ELEM             9              1
2       3       4       5       6       7       8
$
$$$&amp;hellip; Static displacement at tip:
DRESP1  33      D1      DISP                     3              19
$
$$$&amp;hellip; 1st natural frequency
DRESP1  130     FFREQ   FREQ                     1
$
$$$&amp;hellip; Frequency response tip displacement:
DRESP1  230     TDISP   FRDISP                   3              19
Notice the DSCREEN  entry above. The design optimization process screens the constraints (filters them) to
eliminate them from the optimization process if they are determined not to be contributing to the design. It
does this to reduce the number of constraints to obtain more reasonable computational efficiency. The
DSCREEN entry forces the optimization process to retain the listed responses. This is done for illustration
purposes for this example to see all the fatigue constraints. It is typically not necessary to use this entry. It can
be eliminated but likely will result in more design cycles to converge on an optimized design as the process is
iterative and may bounce back and forth around a constraint if one is violated.
The design objective is to minimize weight and the corresponding response objective is defined as follows and
is called out by the DESOBJ(MIN)=35 case control:
$$$&amp;hellip; Weight response objective function:
DRESP1  35      W       WEIGHT
The constraints are as shown from the original example with the new fatigue life constraint highlighted. The
fatigue constraint is set to a lower bound of 100,000 Repeats  of the cyclic loading defined by DRESP1  of ID
22, which references fatigue analysis 101.
$===================================================================
$$$&amp;hellip; Fatigue Life Constraint (Repeats):
DCONSTR 99       22     1.0+5
$===================================================================
$
$$$&amp;hellip; Stress constraint:
DCONSTR 10       2      -29000. 29000.
$
$$$&amp;hellip; Tip displacement constraint:&lt;/p&gt;
&lt;p&gt;231 CHAPTER 9
Design Optimization
Main Index
DCONSTR 10      33      -2.     2.
$
$$$&amp;hellip; Normal modes 1st mode frequency constraint:
DCONSTR 30      130     1.5&lt;br&gt;
$
$$$&amp;hellip; Frequency response tip displacement constraint:
DCONSTR 40      230             2.0
Fatigue Results
Run the fat_desopt_nolife.dat  and fat_desopt_life.dat  files using a supported version of MSC Nastran ( 201 6).
Then inspect the f06 files. The first input deck runs the fatigue analysis for the initial and final designs but
does not impose the fatigue constraint on the design. The fatigue life on the critical element (5) of the initial
design is approximately one million Repeats  of the cyclic loading (or one billion Laps). With the final design
however, the fatigue life is unacceptable. In fact, there is no fatigue life. The weight is significantly reduced
by more than 50%, but it breaks in less than one Repeat  of the cyclic loading.
The second input deck imposes the fatigue life constraint. As one would expect, the weight reduction is far
less, but the plate retains a fatigue life of at least 100,000 Repeats  or 100 million Laps. But only about a 10%
reduction in weight is obtained.
Other input decks show the use of other fatigue item codes (see discussion on Fatigue Item Codes (Response
Requests), 235  in Concluding Remarks, 234 ). These are, including the one that was just examined:
Life (in Repeats of the cyclic loading) = 4
Log of Life (in Repeats of the cyclic loading) = 5
Equivalent Life (in Laps in this case) = 6
Log of Equivalent Life (in Laps in this case) = 7
Damage = 8
Log of Damage = 9
Safety Factor = 12
The input to consider any of these is simply a change in the item code (see Table 2-11 and Table 2-12) on the
DRESP1  entry (ATTA field) and corresponding constraint. The equivalent constraint for each is shown:
Life Response /Constraint (100,000 Repeats lower bound)
DRESP1   22     LIFE    FATIGUE ELEM            4       42      1  &amp;hellip;
DCONSTR 99       22     1.0+5
Log of Life Response/Constraint (100,000 Repeats lower bound)
DRESP1   22     LOGLIFE FATIGUE ELEM            5       42      1  &amp;hellip;
DCONSTR 99       22     5.0
Equivalent Life Response/Constraint (100 Million Laps lower bound)
DRESP1   22     LAPS    FATIGUE ELEM            6       42      1  &amp;hellip;
DCONSTR 99       22     1.0+8&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup232
Main Index
Log of Life Response/Constraint (100 Million Laps lower bound)
DRESP1   22     LOGLAPS FATIGUE ELEM            7       42      1  &amp;hellip;
DCONSTR 99       22     8.0
Log of Damage Response/Constraint (0.00001 lower bound)
DRESP1   22     LOGDMG  FATIGUE ELEM            9       42      1  &amp;hellip;
DCONSTR 99       22             -5.0
Using any of the above response/constraint combinations in this example should give approximately the same
design in the end. Why? Because they are all basically the same constraint. Numerically, due to the iterative
nature of design optimization, small differences will occur, but the final designs should be close. The
exception to this is damage and safety factor.
Damage Response/Constraint (0.00001 upper bound)
DRESP1   22     DAMAGE  FATIGUE ELEM            8       42      1  &amp;hellip;
DCONSTR 99       22             1.0-5
Using damage as a fatigue constraint (or objective) should be avoided because damage is typically a very small
number and causes numerical instability in an optimization procedure. The optimization parameter GSCAL
on the DOPTPRM  entry can be used to scale the constraint to avoid small bounds but this is also
discouraged. Instead the response should be recast in a form that avoids small bounds by using a DRESP2
entry (for instance by taking its reciprocal to turn it into a life value). But the best is to use the log of damage
(or life or log of life), thus avoiding any of the previously mentioned techniques.
Safety Factor Response/Constraint (1.0 lower bound)
FTGPARM 101     SN      1.000            0
STRESS          GOODMAN          ELEM
FOS     LIFE    1.0+8   0.0101   20
&amp;hellip;
DRESP1   22     FOS     FATIGUE ELEM            12      42      1  &amp;hellip;
DCONSTR 99       22     1.0
The safety factor response is not something that can be directly compared to the life and damage
response/constraints. In this example we have a model that has finite life at most of the elements of interest.
Thus using a life constraint makes the most sense. The scale factors determined during a factor of safety
(FOS) analysis are determined through an iterative process to keep the life at all elements of interest at a
prescribed target. The resulting scale factors tell you what the resulting cyclic stresses need to be scaled by to
attain the target life at any particular element. If this example were exhibiting infinite life at all the elements
upon initial design, using a safety factor response/constraint would be appropriate to ensure the factors
remain above a Fail Safe  level, as a fatigue life optimization would be impossible. In this example, the target
life of the FOS analysis is set to the fatigue life constraint of 100 million Laps. The actual constraint is set to
a scale factor of 1.0 such that all elements just attain the target life.
The results of each run are shown in Figure 9-2 and Figure 9-3.&lt;/p&gt;
&lt;p&gt;233 CHAPTER 9
Design Optimization
Main Index
Figure 9-2  Final Thicknesses of each PSHELL Property
Figure 9-3  Weight by Design Cycle for each Item Code
Note: Life, Log of Life, Equivalent Life, and Log of Equivalent Life, and Log of Damage curves overlap each
other as they all give mostly identical results.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks234
Main Index
Concluding Remarks
Optimization using fatigue responses is a powerful feature. However, some things to be aware of with design
optimization and fatigue are:
If the initial design has zero fatigue life, changing the design will still have zero fatigue life, so the
optimizer cannot make progress. A related issue is that if the design has infinite fatigue life and the
user wants fatigue response to be critical, changing the design will not have any affect and the
optimizer cannot make progress. The initial design should have some reasonable damage below
static failure, but not infinite life, in order for the optimizer to make progress.
If an initial design has infinite life, optimizing on safety factor is an alternative.
Optimizing using damage constraints should be avoided as damage is typically a very small number
and may even be below the change limit tolerance, thus making the optimization process think it has
already converged. Use log of damage instead.
Sometimes fatigue constraints may be violated with only small perturbation to the design. In any
design cycle, the design values may be reduced in an amount that the fatigue constraints change
from a feasible design to violated constraints (when fatigue constraints are not retained). It may
report that the gradient of the violated fatigue constraints are zero. This is because the minimum life
value reported is 0.5. So when SOL200 perturbs the design variables, the analyzer always gives
fatigue life of 0.5. Thus, the fatigue life is zero. Since the fatigue life is a violated constraint and its
gradients are zero, the optimizer must stop since the optimizer does not know how to correct the
violated constraints. To overcome this problem, there are two ways:
•Adding DSCREEN , FATIGUE,-1.+2, thus the SOL200 will retain the fatigue life constraints.
The design variables will not change significantly unlike the unconstrained optimization without
DSCREEN. If a constrain&amp;lt;-0.5, it will not be retained in the next optimization cycle by default.
So setting the truncation threshold (TRS) field of DSCREEN to a larger negative number helps
ensure the constraints are retained.
•Modify DOPTPRM  DELX=0.1. The DELX has a default=0.5 that will allow design variables to
change up to 50% in next design cycle. DOPTPRM DELX=0.1 will allow design variables to
change up to 10% in next design cycle. Thus, this can be employed to avoid the above issue of
too much change and zero gradients.
This example used element centroidal fatigue responses for optimization, which is appropriate for
shell or surface type element s. For solid elements, nodal must be used (LOC=NODE or similar
element nodal request on FTGPARM ). There are two disadvantages of using nodal results:
•Currently, averaged grid point s tresses due to contributions from each shared element for fatigue
analysis are not used  unless LOC=NODA is specified.  LOC=NODE r esults in element nodal
fatigue results.
•Obviously, LOC=N ODE or NODA r esults in more constraints. Note that if it is desired to use
life from all four nodes of a particular 4-noded element, item codes 4, 15, 26, and 37 are required .
This is true even if using LOC=NODA due to the software architecture of determining nodal
average stresses.&lt;/p&gt;
&lt;p&gt;235 CHAPTER 9
Design Optimization
Main Index
Design Objective
If the objective is to minimize/maximize fatigue life or damage, currently only static subcases can be present
in the input deck. Multi-disciplinary optimization in not possible. The input deck fat_desopt_obj.dat  is an
example of maximizing the fatigue life. The DESOBJ case control points to a DRESP1 entry of a fatigue
response on a single element. The physical and design model are otherwise identical to all the other
optimization runs in this exercise. The fatigue constraint has been removed and the weight objective replaced
with an objective to maximize the fatigue life on the critical element (5).
If you run the deck and inspect the output you will see that convergence is obtained in only three design
cycles. The fatigue life quickly becomes infinite. Conversely if you replace DESOBJ(MAX) with
DESOBJ(MIN) to minimize the design life and rerun the problem you will also see that the problem
converges in very few design cycles. In this case the life quickly becomes zero. What this means in both cases
is that the problem is not bounded sufficiently to converge on a finite life in either case. So keep this in mind
when trying to use fatigue life or damage as the objective. More bounded constraints and design limits on
design variables need to be imposed on this model to converge on a finite life.
Fatigue Item Codes (Response Requests)
When doing optimization with fatigue responses, very particular item codes must be specified to identify
exact locations for the response.
For element centroid results the element(s), the fatigue response type, and the layer (top or bottom), if
applicable, must be specified. If both top and bottom of shell elements is desired for a particular response,
both item codes must be specified on different DRESP1 entries.
For element nodal results, the element(s), the fatigue response type, the item code for the particular node of
the element, and the layer, if applicable, must be specified. So for a CQUAD4 element, to request all the
nodes of the element for both top and bottom layers, a total of eight (8) item codes must be specified or eight
(8) different DRESP1 entries.
With fatigue analysis of spot welds, there are three layers corresponding to End A (top sheet), End B (bottom
sheet) and the nugget (center) of the spot weld. In addition to this, the responses can be calculated at
NANGLE angles around the spot weld perimeter. The default is 18 angles. So to specify all the item codes
for all layers of a spot weld element at all 18 angles,18x3=54 item codes must be specified on separate
DRESP1 entries. This is impractical and cumbersome for optimization purposes.
To over come this limitation in specifying responses and make the input easier to define, special negative item
codes have been provided that perform in the following manner:
Element centroid item codes (responses)
The below table shows what is necessary to specify LOG of LIFE for element 1001 of FID=42 for top and
bottom (Item Codes 5 and 16) for any element type used in a standard SN or EN analysis.
DRESP1 999 LOGLIFE FATIGUE PSHELL 5 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 19 42 1001&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks236
Main Index
If the item code is negative then the above example reduce down to a single entry as:
Internally this generates the previous two DRESP1 entries. It is no longer necessary to specify a DRESP1
entry with item code 16 in this case.
Element nodal item codes (responses)
The below table shows what is necessary to specify LOG of LIFE for element 1001 of FID=42 for top and
bottom (Item Codes 5,34,63,92  and 19,48,77,106 ) for all nodes of element 1001, which is assumed to be a
QUAD4 in this example, for a standard SN or EN analysis. Rows 1-4 are for Grids 1-4 of Z1 layer of element
1001 and rows 5-8 are for Grids 1-4 of Z2 layer of element 1001.
If the item codes are negative for the first layer of each node then the above example reduces down to only
the following entries as:
Internally this generate  the previous eight (8) DRESP1 entries. It is no longer necessary to specify DRESP1
entries for the nodes of the top layer (Z2), meaning that all responses for both shell layers (when shells are
used) of the specified element(s) are internally generated automatically.  There is no effect when using negative
item codes for solid element as they only have one layer.
Spot Weld item codes (responses)
As you can imagine, optimization input gets quite large for many angles and all locations of just a single spot
weld.
The below table shows what is necessary to specify LOG of LIFE for element 1001 of FID=42 for End A,
End B and the nugget (Item Codes 5, 125, 245 and 17, 137, 257 and 29, 149, 269) for all angles of element DRESP1 999 LOGLIFE FATIGUE PSHELL -5 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 5 42 1001
DRESP1 999 LOGLIFE FATIGUE PSEHLL 34 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 63 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 92 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 19 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL 48 42 1001
DRESP1 999 LOGLIFE FATIGUE PSEHLL 77 42 1001
DRESP1 999 LOGLIFE FATIGUE PSEHLL 106 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL -5 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL -34 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL -63 42 1001
DRESP1 999 LOGLIFE FATIGUE PSHELL -92 42 1001&lt;/p&gt;
&lt;p&gt;237 CHAPTER 9
Design Optimization
Main Index
1001, which is assumed to be a CBAR, CWELD, or CHEXA in this example. Note that NANGLE is set to
three (3) just to minimize the table (you can not actually have less than 10 angles). Rows 1-3 are for locations
top, nugget, bottom for the 1st angle  of element 1001, rows 4-6 for locations top, nugget, and bottom of
2nd angle , and rows 7-9 for locations top, nugget, bottom of 3rd angle .
As you can imagine, this would get quite large for more angles of all locations for just a single spot weld.  If
the item code is negative then this example reduces down to a single entry as:
Internally this generates all the above DRESP1 entries, meaning that responses for all angles of all locations
of the spot weld(s) specified are generated automatically.
If the item code is negative plus1000 as shown here:
then the internally generated DRESP1 entries only include the top sheet  and bottom sheet  locations and the
nugget location is omitted as shown here (for our three angles):DRESP1 999 LOGLIFE FATIGUE PBAR 5 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 125 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 245 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 17 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 137 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 257 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 29 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 149 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 269 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR -5 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR -1005 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 5 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 245 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 17 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 257 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 29 42 1001
DRESP1 999 LOGLIFE FATIGUE PBAR 269 42 1001&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks238
Main Index
Only the first set of item codes for SPOT weld are to be used as negative numbers to activate automatic
generation of DRESP1 entries for all locations and angles. Naturally this is a convenient feature to use to
reduce the amount of input necessary to define fatigue responses of spot welds in an optimization analysis.
However, if necessary, the traditional method of manually specifying all responses for all locations and angles
can still be employed.
Item Code Description
-4  (or -1004) Fatigue life in Repeats  of the loading sequence
-5  (or -1005 Log of fatigue life in Repeats  of the loading sequence
-6  (or-1006) Fatigue life in user defined equivalent units
-7  (or -1007) Log of fatigue life in user defined fatigue equivalent units
-8  (or -1008) Fatigue damage
-9 (or -1009) Log of fatigue damage
-12 (or -1012) Scale factor from Factor of Safety analysis&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 10: Spot Welds
10 Spot Welds
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description240
Main Index
Problem Description
Fatigue analysis of spot welds is addressed in this chapter. Some very simple models are used with a single spot
weld represented to illustrate the different modeling techniques. Then the fatigue analysis of a portion of a
vehicle body is performed containing multiple spot welds to ascertain if any may be problematic from a
fatigue damage perspective. This is the same shock tower model used in A Simple Duty Cycle .
Objective
To illustrate modeling techniques for fatigue analysis of spot welds
To identify critical spot welds based on fatigue damage
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 10-1  Files Required
Files Required Description
kang_cbar.dat Single spot weld model using CBAR element.
kang_chexa.dat Single spot weld model using CHEXA/RBE3 elements.
kang_cw_aln.dat Single spot weld model using CWELD element with ALIGN option.
kang_cw_eid.dat Single spot weld model using CWELD element with ELEMID option.
kang_cw_ep.dat Single spot weld model using CWELD element with ELPAT option.&lt;/p&gt;
&lt;p&gt;241 CHAPTER 10
Spot Welds
Main Index
Limitations
Fatigue analysis of spot welds is limited to the S-N (stress-life) method.
TOPSTR , TOPDMG , and NHS  options on FTGDEF  entry cannot be used. All spot welds identified
for fatigue analysis are fully processed.
Multi-axial/Biaxial assessment is not applicable to fatigue analysis of spot welds (MULTI
keyword/line on FTGPARM  entry).
Overview
The fatigue analysis of spot welds requires each spot weld to be represented by a stiff element from which
forces (and moments) are extracted. The forces transmitted through the element are used to calculate
structural stresses in the weld nugget and at the two adjoining metal sheets at various angular intervals around
the perimeter of each weld. The stresses are then used in a standard S-N method to make life predictions.
Figure 10-1  Cross-section of Typical Spot Weld
There are three element types that are generally accepted for modeling spot welds. Conceptually they all
accomplish the same thing and in the end, provide the same basic data to the fatigue solver. These are
CBAR/CBEAM, CWELD, or CHEXA elements. kang_cw_gid.dat Single spot weld model using CWELD element with GRIDID option.
kang_cw_pp.dat Single spot weld model using CWELD element with PARTPAT option.
shocktowerSPOT.dat
horizontal.dac
vertical.dac
torque.dacShock Tower model with fatigue analysis of spot welds using bar elements
and corresponding DAC files defining the cyclic load variation for the
three subcases contained in the analysis deck.
shocktowerSPOT_opt .dat
horizontal.dac
vertical.dac
torque.dacDesign optimization of shell thicknesses of S hock T ower model with
fatigue analysis of spot welds using bar elements and corresponding DAC
files defining the cyclic load variation for the three subcases contained in
the analysis deck.Table 10-1  Files Required
Files Required Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description242
Main Index
Using Bar Elements
The elements (CBAR or CBEAM) should be sufficiently stiff to ensure proper load transfer and should be
perpendicular to the top and bottom sheets. The length of each bar is to extend into the mid-surface of each
top and bottom shell element. Three sheet spot welds are modeled as two spot welds sharing a common node.
The shaded portion of Figure 10-1 represents the spot weld “nugget”. The length of the represented bar
elements is 0.5(s1+s2), where s1 and s2 are the thicknesses of the top and bottom sheets. Point 3 is on the
axis of the weld nugget and at the interface of the two sheets. The element forces/moments are converted to
the NEF spot weld coordinate system shown in Figure 10-2. The relationship for the three points is shown in
Table 10-2. From the transformed forces, radial stresses from the inner surfaces in the two adjacent sheets and
around the perimeter of the weld nugget are calculated at various angles (see Spot Welds (fatigue analysis of) ).
Figure 10-2  Bar Coordinate System vs NEF Spot Weld System
Table 10-2  Spot Weld Forces vs Nastran Bar Forces
Spot Weld LocationNEF Spot Weld
Coordinate SystemNastran
Bar Coordinate System
Point 1
(Top Sheet)FX1 -Z force (plane 2 shear)
FY1 Y force (plane 1 shear)
FZ1 X force (axial)
MX1 -Z moment 1 (plane 1 bending moment, end A)
MY1 -Y moment 1 (plane 2 bending moment, end A)
MZ1 X moment (torque)
Point 2
(Bottom Sheet)FX2 Z force (plane 2 shear)
FY2 -Y force (plane 1 shear)
FZ2 -X force (axial)
MX2 Z moment 1 (plane 1 bending moment, end A)
MY2 Y moment 1 (plane 2 bending moment, end A)
MZ2 -X moment (torque)&lt;/p&gt;
&lt;p&gt;243 CHAPTER 10
Spot Welds
Main Index
Using C onnector Elements
The advantage of using CWELD elements (as opposed to bars) is that the user does not have to match the
shell element mesh up exactly with the actual locations of each spot weld. The disadvantage of using bar
elements is that the grids of the shell meshes for the top and bottom sheets must align so the bars can be
connected in the proper locations. This requires quite a lot of meshing manipulations. The forces of the weld
elements are converted to the same coordinate system as in Table 10-2, radial stresses computed and the fatigue
analysis proceeds as normal.
Using Solid Elements
To over come the modeling limitations of using bar elements, some prefer to use a stiff solid CHEXA element
to represent the spot weld. The CHEXA element is placed at the spot weld location and connected to the
top and bottom sheets by multi-point constraint elements (RBE3). This way the mesh does not have to line
up at all. However the density of the mesh should be of sufficient size to adequately connect the CHEXA to
the surrounding shell elements in the vicinity of the weld (not to large and not too small).
Figure 10-3  Spot Weld CHEXA + RBE3 RepresentationPoint 3
(Nugget)FX3 = FX1
FY3 = FY1
FZ3 = FZ1
MX3 = (MX1&lt;em&gt;s2-MX2&lt;/em&gt;s1)/(s1+s2)
MY3 = (MY1&lt;em&gt;s2-MY2&lt;/em&gt;s1)/(s1+s2)
MZ3 = MZ1Spot Weld LocationNEF Spot Weld
Coordinate SystemNastran
Bar Coordinate System&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description244
Main Index
Figure 10-4  Spot Weld CHEXA Grid Point Force Transformation
Figure 10-5  Spot Weld CHEXA/RBE3 Equivalent Bar Representation
For the purpose of calculating the equivalent bar forces and moments, a few standards are assumed:
The CHEXA element coordinate system is used to orient the equivalent bar coordinate system
The face of the CHEXA defined by grids G1-G4 are connected to the top sheet (bar end-A) and
grids G5-G8 are connected to the bottom sheet (bar end-B)
The CHEXA element is assumed to be a rectangular parallelepiped; note that this can lead to
significant errors in cases where the sheet geometry does not allow a fit to this ideal
No torsional moment is computed
The grid point forces of the CHEXA element are extracted and transformed from global to local
coordinates and then transferred to the center of each opposing element face (end-A and end B). See
figure Figure 10-4.
In the end, the element forces are transformed into the same coordinate system as in Figure 10-2 thus reducing
the CHEXA/RBE3 representation of the spot weld down to an equivalent bar element ( Figure 10-5).
The CHEXA element R-S-T coordinates align with the NEF spot weld bar X-Y-Z coordinate system as
follows:
R -&amp;gt; X&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P14</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_014/</guid>
      <description>
        
        
        &lt;p&gt;245 CHAPTER 10
Spot Welds
Main Index
S -&amp;gt; Y
T -&amp;gt; Z
The equivalent bar forces and moments (computed in the NEF spot weld coordinate system) are as follows:
Where:
FXi , FYi, FZi are the end A nodal forces in the CHEXA element  and Fx, Fy, Fz are the end A equivalent bar
forces in the NEF spot weld system . The end A equivalent bar forces are taken over grids 1-4  and the end B
equivalent bar forces are taken over grids 5-8 .
Where:
Mx and My are the end A equivalent moment s in the NEF spot weld system. Lx and Ly are the lengths of the
CHEXA edges in the plane of the sheets in the local x and y-directions, respectively.  The end B equivalent
bar forces are taken over Nodes 5-8 . No torsional moment is computed .
Fatigue Setup
The input decks for the kang_xxx.dat  examples from Table 10-1 are explained here. As the fatigue analysis of
spot welds is an extension of a standard fatigue analysis, it is assumed that the user has familiarized
him/herself with standard S-N fatigue analysis from previous chapters.
Each of the input decks describes two sheets connected by a single connector spot weld with a 1000 N force
exhibited through the spot weld.
Figure 10-6  Single Spot Weld ModelFxFXi   ;&lt;br&gt;
14
= FyFYi    ;  FzFZi&lt;br&gt;
14
=
14
=
MxLy
2&amp;mdash;&amp;mdash;FZiLy
2&amp;mdash;&amp;mdash;FZi     ;     My
12
–
34
Lx
2&amp;mdash;&amp;mdash;FZiLx
2&amp;mdash;&amp;mdash;FZi
23
–
14
= =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup246
Main Index
There are three main models. The first uses a single CBAR element to represent the spot weld ( kang_cbar.dat ).
The second uses a single CHEXA element and RBE3 elements to represent the spot weld ( kang_chexa.dat ).
The third uses a single CWELD element to represent the spot weld, however there are five total decks
showing different modeling options of the CWELD element ( kang_cw_xxx.dat ). The spot weld connects the
center of the two sheets.
All the CWELD decks give identical answers. Answers between the three different modeling techniques are
very similar
Only the pertinent input for the fatigue analysis is shown and explained here. All the example decks in this
chapter are static SOL 101 jobs. Fatigue analysis of spot welds is however, applicable to all other supported
analysis types (SOL 103, 112, 200 - ANALYSIS=STATICS) as for any standard S-N fatigue analysis in the
time domain.
SOL 101
CEND
TITLE = kang bar model with reoriented x dir
$
FATIGUE(FORMAT=64) = 42
SUBCASE       1
SUBTITLE=1KNt 30 Deg
SPC = 1
LOAD = 1
SET 1 = 148,28
DISPLACEMENT(PLOT,SORT1,REAL)=ALL
SPCFORCES(PLOT,SORT1,REAL)=ALL
GPFORCE (PLOT)=1
STRESS( PLOT,SORT1,REAL,VONMISES,SGAGE)=ALL
FORCE( PLOT,PRINT,SORT1,REAL,BILIN)=ALL
$
BEGIN BULK
$
$  Fatigue Analysis Parameters
$
SET4    201     PROP    PBAR    2
FTGDEF  42
SPOTW   201     2
PFTG    2
5.0     1.6     1.6
FTGPARM 42      SN      1.0     1       0
SPOTW   STNDRD  SIMPLE  18
FTGLOAD 42      111     1       1.0     1.0     0.0
TABLFTG 111
0.0     1.0     -1.0    0.0     ENDT
MATFTG  1       1.0
STATIC          500     99
DTI     UNITS   1                                       MPA
$
$  &amp;hellip; Model Data (not shown)
$
ENDDATA&lt;/p&gt;
&lt;p&gt;247 CHAPTER 10
Spot Welds
Main Index
Case Control
FATIGUE(FORMAT=64) = 42
SUBCASE       1
SUBTITLE=1KNt 30 Deg
SPC = 1
LOAD = 1
SET 1 = 148,28
DISPLACEMENT(PLOT,SORT1,REAL)=ALL
SPCFORCES(PLOT,SORT1,REAL)=ALL
GPFORCE=1
STRESS( PLOT,SORT1,REAL,VONMISES,SGAGE)=ALL
FORCE( PLOT,PRINT,SORT1,REAL,BILIN)=ALL
The following notes are made on the case control above:
1.The FATIGUE  case control is required to invoke a fatigue analysis. As with previous examples, the FID
42 calls out FTGDEF , FTGPARM , and FTGSEQ  (or FTGLOAD ) entries. What makes this output request a
fatigue analysis of spot welds is dependent on the settings in these entries.
2.There is only one subcase and all output requests under this subcase are optional and not necessary
to specify as the appropriate element forces (FORCE output request) is extracted for the fatigue
analysis. In the case of the CHEXA model, the appropriate grid point forces (GPFORCE output
request) are extracted.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup248
Main Index
Fatigue Definitions/Properties
SET4    201     PROP    PBAR    2
FTGDEF  42
SPOTW   201      2
PFTG    2
5.0     1.6     1.6
The following notes are made about the fatigue definition entry ( FTGDEF ) above:
1.The FTGDEF  bulk data entry is required to invoke a fatigue analysis of spot welds by providing the
SPOTW keyword. This entry is called out by the FATIGUE  case control. If this entry is omitted or the
SPOTW keyword is not present, then MSC Nastran will attempt to do a standard fatigue analysis or
a fatal message will result if no appropriate elements are defined.
2.The SPOTW line calls out set(s) of element that define the spot weld. In this example, SET4 of ID
201 points to CBAR elements with PBAR property set of ID=2. Thus all bar elements associated to
this property set are included in the fatigue analysis, assuming they have fatigue material properties
associated to them.
3.For the models that use CWELD and CHEXA elements, the SET4 definitions specify the appropriate
PWELD and PSOLID entries as shown here:
SET4    201     PROP    PWELD   2
SET4    201     PROP    PSOLID  2
4.The SPOTW line also defines the fatigue properties associated with the spot welds by associating a
PFTG entry (ID= 2 in this case) to the spot weld elements.
5.The PFTG entry defines the weld diameter (DIAM=5.0), the top sheet thickness (T1=1.6), and the
bottom sheet thickness (T2=1.6). These are the most pertinent fields on this entry for fatigue analysis
of spot welds. The SCALE and OFFSET fields may also be specified to scale and offset the resultant
stress time histories for this set of elements. The  FINISH, TREATMENT, KF, SHAPE, and
KTREAT fields are ignored.
6.It not necessary to include a PFTG entry. If not specified or the DIAM, T1, and T2 entries are left
blank, then MSC Nastran automatically figures out the top and bottom sheet thicknesses by the
connectivity of the spot weld elements to the top and bottom sheets from the corresponding PSHELL
entries. And the nugget diameter is determined by a look up table for standard spot weld diameters
based on the top/bottom shell thicknesses. The only exception to this is when the CWELD element
is used. In this case the diameter is extracted from the corresponding PWELD entry unless the
SPTFLG field is set to one (1).&lt;/p&gt;
&lt;p&gt;249 CHAPTER 10
Spot Welds
Main Index
Fatigue Parameters
FTGPARM 42      SN      1.0     1       0
SPOTW   STNDRD  SIMPLE  18
DTI     UNITS   1                                       MPA
The following notes are made about the fatigue definition entry ( FTGPARM ) above:
1.The FTGPARM  bulk data entry is shown and used here, but not required to invoke a fatigue analysis of
spot welds as long as only the defaults are used. In this example however, the mean stress correction
is not the default (CORR=SIMPLE) and must be specified by providing the SPOTW keyword and
line. This entry is called out by the FATIGUE  case control. If this entry is omitted or the SPOTW
keyword is not present, then default parameters are used.
2.The SPOTW line allows you to specify the following:
•Stress combination (COMB field) - only one method is allowed (COMB=STNDRD), which is
basically like a critical plane analysis.
•Mean Stress Correction  (CORR field) - the default is CORR=NONE for no mean stress
correction. This example uses CORR=SIMPLE.  CORR=FKM is also allowed for spot welds.
SIMPLE requires a mean stress sensitivity parameter to be define, which is the same as setting all
the FKM parameters to -0.1. See the discussion on cyclic material properties below.
•Number of angles (NANGLE field) - the number of angles around the spot weld circumference
at which to calculate damage. The default is 18. The maximum is 360, or every degree.
•Result location (SWLOC field) - this can be set to 0, 1, 2, or 3. The default is 0, which reports
back damage at only the worst location and angle. The location is either the top sheet, bottom
sheet or the weld nugget. The other options report back the most damaging angle for each
location (SWLOC=1), the most damaging location for each angle (SWLOC=2), or damage for
all locations and angles (SWLOC=3).
•The  MIDDLE  field is a p arameter flags to trigger whether to process the middle sheet of three
sheet spot welds .
3.On the FTGPARM  entry it is also possible to include all other keywords ( “FOS”, “CERTNTY”, etc. to
invoke those features within a fatigue analysis of spot welds and/or to combine with standard
S-N/E-N or seam weld fatigue analyses as long as the elements defined for each are mutually
exclusive. However, “MULTI” cannot be used with spot welds.
4.The DTI,UNITS  entry is used to indicate the stress units of the model. This is no different from standard
fatigue analysis. Force and length units necessary for fatigue analysis of spot welds are extracted from
the stress units. All stress parameters defined on the MATFTG  entry are assumed to be in these stress
units unless the CNVRT field on the MATFTG  is set. See examples in previous chapters.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup250
Main Index
Cyclic Material Properties
MATFTG  1       1.0
STATIC          4000    99
The definition of the cyclic material properties is simple. The referenced MATFTG  entry of ID=1 corresponds
to an equivalent MAT1 entry in the deck of the same ID. Only those element referencing MAT1 of ID=1
will be processed for fatigue output and those element must be called out through the FTGDEF  entry as
explained earlier.
Only the STATIC line is provided on the MATFTG  entry with a material CODE=99 and UTS=4000. For
fatigue analysis of spot welds, this is actually a trigger or flag to indicate that standard, generic S-N material
properties for steel are to be used for the top, bottom, and nugget. The properties used are listed in Table 2-2,
“Spot and Seam Weld Fatigue Analysis SN Curve Defaults,” on page 34. Generic properties are available for
steel (CODE&amp;lt;100) and aluminum (100 CODE&amp;lt;200) materials  only.
It is possible to specify specific S-N properties for all three locations of the spot weld by explicitly defining
them on the MATFTG  entry as such:
MATFTG  1       1.0
STATIC  355     4000    99
SN      2100.0  -0.1667 1.e6    -0.09091 1.e30  0.334
-0.1    -0.1            0.1
1.0     0.0     0.0     0.6     0.0     0.5
0.6     0.0     0.5     0.0     0.0     0.0
SNS1    2900.0  -0.1667 1.e6    -0.09091 1.e30  0.33
-0.1    -0.1            0.1
1.0     0.0     0.0     0.6     0.0     0.5
0.6     0.0     0.5     0.0     0.0     0.0
SNS2    2900.0  -0.1667 1.e6    -0.09091 1.e30  0.33
-0.1    -0.1            0.1
1.0     0.0     0.0     0.6     0.0     0.5
0.6     0.0     0.5     0.0     0.0     0.0
The means stress sensitivity parameters for the FKM and SIMPLE methods are also specified on the MATFTG&lt;br&gt;
entry. Please note the following rules used if certain data is provided or omitted from the MATFTG  entry:
1.If only a STATIC key word is present, generic properties are used for steel and aluminum based on
the CODE field. If CODE defines a material other than steel or aluminum, a fatal error will be issued.
UTS must also be specified, although it is not used as the UTS of the generic properties is actually
used. See Concluding Remarks .
2.If the SN keyword is present then it defines the S-N parameters for the spot weld nugget.
3.If the SNS1 keyword is present then it defines the S-N parameters for the spot weld top sheet.
4.If the SNS1 keyword is present then it defines the S-N parameters for the spot weld bottom sheet.
5.If SN is present, but not SNS1 and SNS2, then SN=SNS1=SNS2.
6.If SNS1 is present but not SNS2, then SNS1=SNS2 and vice versa.
7.If SNS1 or SNS2 is present, but not SN, then SNS1=SN, or SNS2=SN.
8.SN (or SNS1/SNS2) may be present with only the mean stress sensitivity (M1-M4 &amp;amp; MSS)
parameters. In this case, SRI1, b1, Nc1, b2 must be left blank in order to trigger usage of generic
properties and avoid a fatal error.&lt;/p&gt;
&lt;p&gt;251 CHAPTER 10
Spot Welds
Main Index
Cyclic Loading
FTGLOAD 42      111     1       1.0     1.0     0.0
TABLFTG 111
0.0     1.0     -1.0    0.0     ENDT
The FTGLOAD  entry associates results from SUBCASE 1 to the cyclic behavior of the loading via the TABLFTG&lt;br&gt;
entry, which defines a single, fully reversed, constant amplitude load. This is identical to previous examples.
The cyclic loading definition is independent of the type of fatigue analysis.
Also look at and run the shocktowerSPOT.dat  file with its corresponding cyclic loading definition files,
horizontal.dac , vertical.dac , and torque.dac .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup252
Main Index
Fatigue Results
Results output for the single spot weld model is shown for CBAR, CHEXA, and CWELD models,
respectively. For the most part, the results are identical between CBAR and CWELD models and the CHEXA
model is very close with the differences being in the conversion/transformation from grid point forces to the
equivalent bar forces necessary for the fatigue analysis of spot welds. The other difference is the critical angle,
however this is only due to the arbitrary orientation of the CHEXA element. So comparing angles is
meaningless.
CBAR spot weld results:
CHEXA spot weld results:
CWELD spot weld results:
Note: Some CWELD options auto-generate nodes at the piercing points of the top and bottom sheets. This is
done for the options that only define a GS grid and not the actual piercing point designated as GA and
GB grids on the CWELD entry. Fatigue results will be reported at these auto-generated grids and those
grids will be listed in the f06 output files .
Note: For 3-sheet spot welds, the fatigue results at the middle sheet can be s uppressed. One may wish to do
this d ue to the fact that fatigue failures have rarely been seen at the middle sheet. If it is  not  desirable
to view these results, the MIDDLE field of the FTGPARM  entry needs to be set to zero (0) .                                                                                            EVENT ID  ALL EVENTS  FATIGUE ID      42
F A T I G U E   R E S P O N S E   I N    B A R     E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   0
ELEMENT       CRIT  CRIT    LIFE    LOG-LIFE    LIFE    LOG-LIFE     DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID         GRID ANGLE  (    REPEATS    )  (      REPEATS       )         DAMAGE       FORCE      STRESS      STRESS     FACTOR
161        148  80. 0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
F A T I G U E   R E S P O N S E   I N    H E X A   E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   0
ELEMENT       CRIT  CRIT    LIFE    LOG-LIFE    LIFE    LOG-LIFE     DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID         GRID ANGLE  (    REPEATS    )  (      REPEATS       )         DAMAGE       FORCE      STRESS      STRESS     FACTOR
162       1004 180.0    6.141E+04   4.79   6.141E+04   4.79   1.628E-05  -4.79   1.000E+03   3.703E+02  -1.115E+02
F A T I G U E   R E S P O N S E   I N    W E L D   E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   0
ELEMENT       CRIT  CRIT    LIFE    LOG-LIFE    LIFE    LOG-LIFE     DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID         GRID ANGLE  (    REPEATS    )  (      REPEATS       )         DAMAGE       FORCE      STRESS      STRESS     FACTOR
161        148  80. 0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02&lt;/p&gt;
&lt;p&gt;253 CHAPTER 10
Spot Welds
Main Index
Also shown here are the different outputs available from the FTGPARM  when the SWLOC field is set to a non
default value. The about output is for worst case location and angle (SWLOC=0). Below shows SWLOC=1,
2 &amp;amp; 3, respectively.
SWLOC=1, results at worse angle at each location:
SWLOC=2, results at worse location for each angle:
SWLOC=3, results at all location and angles (partial output):              F A T I G U E   R E S P O N S E   I N    B A R     E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   1
ELEMENT       GRID  CRIT    LIFE    LOG-LIFE    LIFE    LOG-LIFE     DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID              ANGLE (   REPEATS   )    (      REPEATS       )          DAMAGE       FORCE      STRESS      STRESS     FACTOR
161          0 180.0    4.273E+08   8.63   4.273E+08   8.63   2.340E-09  -8.63   1.000E+03   7.290E+01  -5.881E+01
28 260.0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
148  80.0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
F A T I G U E   R E S P O N S E   I N    B A R     E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   2
ELEMENT       CRIT ANGLE    LIFE    LOG-LIFE   LIFE    LOG-LIFE      DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID         GRID       (     REPEATS     ) (      REPEATS       )         DAMAGE       FORCE      STRESS      STRESS     FACTOR
161         28   0.0    3.522E+06   6.55   3.522E+06   6.55   2.839E-07  -6.55   1.000E+03   2.585E+02   0.000E+00
148  20.0    4.785E+05   5.68   4.785E+05   5.68   2.090E-06  -5.68   1.000E+03   2.966E+02  -3.809E+01
148  40.0    1.722E+05   5.24   1.722E+05   5.24   5.809E-06  -5.24   1.000E+03   3.301E+02  -7.158E+01
148  60.0    8.898E+04   4.95   8.898E+04   4.95   1.124E-05  -4.95   1.000E+03   3.550E+02  -9.644E+01
&amp;hellip;
28 260.0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
28 280.0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
28 300.0    8.898E+04   4.95   8.898E+04   4.95   1.124E-05  -4.95   1.000E+03   3.550E+02  -9.644E+01
28 320.0    1.722E+05   5.24   1.722E+05   5.24   5.809E-06  -5.24   1.000E+03   3.301E+02  -7.158E+01
28 340.0    4.785E+05   5.68   4.785E+05   5.68   2.090E-06  -5.68   1.000E+03   2.966E+02  -3.809E+01
F A T I G U E   R E S P O N S E   I N    B A R     E L E M E N T S  F O R  S P O T   W E L D S     SWLOC  =   3
ELEMENT       GRID ANGLE    LIFE    LOG-LIFE    LIFE    LOG-LIFE     DAMAGE    LOG     MAXIMUM     MAXIMUM     MINIMUM     SAFETY
ID                     (    REPEATS    )  (      REPEATS       )         DAMAGE       FORCE      STRESS      STRESS     FACTOR
161          0   0.0    1.127E+11  11.05   1.127E+11  11.05   8.873E-12 -11.05   1.000E+03   7.290E+01   0.000E+00
0  20.0    3.256E+11  11.51   3.256E+11  11.51   3.071E-12 -11.51   1.000E+03   6.620E+01   0.000E+00
0  40.0    7.941E+12  12.90   7.941E+12  12.90   1.259E-13 -12.90   1.000E+03   4.952E+01   0.000E+00
0  60.0    9.088E+14  14.96   9.088E+14  14.96   1.100E-15 -14.96   1.000E+03   3.218E+01   0.000E+00
0  80.0    1.132E+16  16.05   1.132E+16  16.05   8.835E-17 -16.05   1.000E+03   2.559E+01   0.000E+00
&amp;hellip;
0 300.0    9.088E+14  14.96   9.088E+14  14.96   1.100E-15 -14.96   1.000E+03   3.218E+01   0.000E+00
0 320.0    7.941E+12  12.90   7.941E+12  12.90   1.259E-13 -12.90   1.000E+03   4.952E+01   0.000E+00
0 340.0    3.256E+11  11.51   3.256E+11  11.51   3.071E-12 -11.51   1.000E+03   6.620E+01   0.000E+00
28   0.0    3.522E+06   6.55   3.522E+06   6.55   2.839E-07  -6.55   1.000E+03   2.585E+02   0.000E+00
28  20.0    2.033E+07   7.31   2.033E+07   7.31   4.918E-08  -7.31   1.000E+03   2.204E+02   0.000E+00
28  40.0    1.246E+08   8.10   1.246E+08   8.10   8.025E-09  -8.10   1.000E+03   1.869E+02   0.000E+00
28  60.0    5.988E+08   8.78   5.988E+08   8.78   1.670E-09  -8.78   1.000E+03   1.621E+02   0.000E+00
&amp;hellip;
28 300.0    8.898E+04   4.95   8.898E+04   4.95   1.124E-05  -4.95   1.000E+03   3.550E+02  -9.644E+01
28 320.0    1.722E+05   5.24   1.722E+05   5.24   5.809E-06  -5.24   1.000E+03   3.301E+02  -7.158E+01
28 340.0    4.785E+05   5.68   4.785E+05   5.68   2.090E-06  -5.68   1.000E+03   2.966E+02  -3.809E+01
148   0.0    3.522E+06   6.55   3.522E+06   6.55   2.839E-07  -6.55   1.000E+03   2.585E+02   0.000E+00
148  20.0    4.785E+05   5.68   4.785E+05   5.68   2.090E-06  -5.68   1.000E+03   2.966E+02  -3.809E+01
148  40.0    1.722E+05   5.24   1.722E+05   5.24   5.809E-06  -5.24   1.000E+03   3.301E+02  -7.158E+01
148  60.0    8.898E+04   4.95   8.898E+04   4.95   1.124E-05  -4.95   1.000E+03   3.550E+02  -9.644E+01
148  80.0    6.438E+04   4.81   6.438E+04   4.81   1.553E-05  -4.81   1.000E+03   3.682E+02  -1.097E+02
&amp;hellip;
148 300.0    5.988E+08   8.78   5.988E+08   8.78   1.670E-09  -8.78   1.000E+03   1.621E+02   0.000E+00
148 320.0    1.246E+08   8.10   1.246E+08   8.10   8.025E-09  -8.10   1.000E+03   1.869E+02   0.000E+00
148 340.0    2.033E+07   7.31   2.033E+07   7.31   4.918E-08  -7.31   1.000E+03   2.204E+02   0.000E+00&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks254
Main Index
Concluding Remarks
•A spot weld can be modeled with either a stiff bar (CBAR or CBEAM) element, a weld (CWELD)
element, or single CHEXA/RBE3 element combination
•The element defining a spot weld is connected to a top and bottom sheet of elements defined by
shell elements
•Usage of CBAR/CBEAM elements requires the shell mesh to match up exactly where spot welds
are actually located - the bars should be kept perpendicular to the sheets
•Usage of CWELD or CHEXA elements is more flexible in that the shell mesh does not need to
match up with actual weld locations
•The forces and moments of the bar or weld elements are used to determine structural stresses at
the top and bottom sheets and the weld nugget at various degree increments around the weld
•For CHEXA/RBE3 representation of spot welds, the grid point forces are extracted and converted
to equivalent bar forces and then the structural stresses determined
•The CHEXA elements must have the correct faces attached to the top and bottom sheets via
RBE3 elements, or results will be misleading and incorrect
•A FATIGUE  case control output request is required
•A FTGDEF  bulk data entry with the SPOTW line is required to define which element are the spot
weld elements
•A FTGPARM  bulk data entry is required to change any of the default parameters associated with
fatigue analysis of spot welds using the SPOTW line
•A MATFTG  bulk data entry is required to either define S-N materials associated with the top and
bottom sheets and the weld nugget, or to flag the use of generic S-N data for spot weld made of
steel or aluminum
•The shell thicknesses and the weld diameter can be specified by the user on the PFTG bulk data
entry
•If shell thickness is not specified, it is automatically determined from the connectivity of the spot
welds to the shell element properties
•If the nugget diameter is not provided it is automatically determined from a look up table based
on the top and bottom thicknesses or from the PWELD entry for CWELD elements
•Cyclic loading definitions are independent of the fatigue analysis type and thus, are the same as
for any other standard fatigue analysis
•It is possible to run a factor of safety analysis, and use time history compression, and specify
certainty of survival with fatigue analysis of spot welds - all specified on the FTGPARM  entry
•It is possible to run a standard fatigue analysis and a fatigue analysis of spot welds with the same
FATIGUE output request by using both the SPOTW and the ELSET lines on the FTGPARM  entry,
however the same element sets cannot be specified in both lines
•Worst case results (angle and location) are reported by default unless changed with FTGPARM&lt;br&gt;
SWLOC field&lt;/p&gt;
&lt;p&gt;255 CHAPTER 10
Spot Welds
Main Index
•The UTS on the MATFTG entry is ignored if generic material properties are requested by only
including the STATIC keyword/line.
•The calculation of fatigue at the middle sheet of 3-sheet spot welds is not suppressed b y default.
It must be turned off w ith MIDDLE field on FTGPARM  entry to remove f atigue results at the
middle sheet.
•Fatigue due to torsion in the spot weld is not taken into account.
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
Start Patran and open a new Patran database and call it spotweld . Use the Analysis  application to
import the first input deck associated with this example: kang_cbar.dat  (Action =Read Input File ).
Make sure the Analysis Preference  is set to MSC.Nastran.
Step 2: Check the Model
Go to the Loads/BCs  application. Plot the LBC markers ( Action =Plot Markers ). Make sure the
Current Load Case  is set to the imported load case (1KNT_30_DEG.SC1 ). Select all the LBCs and
press the Apply  button.
Go to the Materials  application ( Properties  tab, Isotropic  button group in skin mode). Set the
Action  to Modify  and select the only available material. Note the values in the Linear Elastic&lt;br&gt;
constitutive model. If there is no current Stress-Life (SN)  constitutive model, create one. If there is,
verify the following parameters, which are written to the MATFTG  entry:
By using the Derived  option, the generic ferrous S-N curves required for a fatigue analysis of spot
welds are used.Parameter Value
Constitutive Model: Stress-Life (SN)
Option: Derived
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Ultimate Tensile Stress 4000.0
Standard Error Log(N) 0.1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup256
Main Index
Go to the Element Properties  application. Set the Action  to Modify . Select the property of interest
for our fatigue analysis: pbar.2 . All fatigue element properties are defined here. Make sure the
following are set below. Only the fatigue property values are shown in the table. Values for the fatigue
properties, are placed on the PFTG entry. All other pertinent properties are part of the PSHELL entry
and related elements for this model.
Note that the weld diameter and top/bottom sheet thicknesses are specifically defined here and are
thus used directly in the analysis. Had they been left blank, MSC Nastran would extract the
thicknesses from the shell properties of the top and bottom sheets defined by the connectivity of the
bar element to the top and bottom elements. The diameter would then be derived from a lookup table
based on the minimum thickness. Also note that two thickness are give, one for the top sheet and one
for the bottom sheet. If only one value were provided, both sheet thicknesses would take on that value.
Step 3: Check the Fatigue Parameters
Go to the Analysis  application ( Action  = Analyze ). Since we read the existing job kang_cbar.dat , a job
by the name of kang_cbar  has been created. Click on it to restore all its settings. Open the Solution
Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form. From here you can check the Fatigue
Parameters&amp;hellip;  Open this form and ensure the following parameters are set, which are written to the
FTGPARM  entry. If a parameter is not mentioned below, use the default value or leave it blank. Close
all the forms when done using the OK buttons.
The above settings ensure that a Simple mean stress correction method is done, which is an FKM
mean stress correction with M1=M2=M3=M4=-MSS (parameters set on the Material form). Results
at all angles (default=18) around the weld are computed at the top and bottom sheets and at the weld
nugget.Parameter Value
[Scale Factor] 1.0
[Offset] 0.0
[Weld Nugget Diameter] 5.0
[T op/Bottom Sheet Thickness] 1.6 1.6
Parameter Value
Stress Units: MPa
Stress Combination: (this is ignored - set this under Spot Weld)
Results Loc.: Node
Run Spot Weld Analysis T urn this ON
Stress Combination: Standard
Mean Stress Corr.: Simple
Worst Case Report: All Locations and Angles&lt;/p&gt;
&lt;p&gt;257 CHAPTER 10
Spot Welds
Main Index
Also, in order to post-process the fatigue results in Patran, make sure that the results are written to
the MASTER/DBALL files. This is done in the Solution Parameters&amp;hellip; form by opening the Results
Output Format&amp;hellip; form and turning ON the MASTER/DBALL  toggle.
Step 4: Check the Output Requests
Still in the Analysis  application, click on the Subcases&amp;hellip;  form. Our subcase is called:
1KNT_30_DEG.SC1 . Click on the it from the Available Subcases  list box to access all its settings.
Then open the Output Requests&amp;hellip;  form. Set this form to the advanced setting ( Form Type: ).
If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the required FTGDEF  bulk data entry.
From the Select Property Sets  list box, select only pbar.2 . Press the Apply  button on the Subcases&amp;hellip;&lt;br&gt;
form to save the new output request settings.
One last note about output requests. Fatigue life output requests are subcase independent unlike
most standard output requests such as stress and displacement. If you are using multiple subcases, the
first subcase selected (see the next step) must have the Fatigue Life  output request in it. Thus, it is not
necessary in this example to open each subcase and ensure that FATIGUE is set as an output request.
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes to this subcase.
Step 5: Check the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). Our subcase should be
the only one present in the bottom list box. Now open the Define Fatigue Load Sequences&amp;hellip;  form.
On this form ensure that the loading association is set up properly. For the loading in this example,
we want to associate the subcase to a single constant amplitude defined by a Patran field called
Field.111 . Fill out the spreadsheet as shown here if not already filled out.
On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined. To create these from scratch, remove all the existing load sequences using the right mouse
button by clicking on Load Sequences  and select Remove All  Sequences . The follow these instructions:
Use the right mouse button to click on the Load Sequences  and Add a New Sequence . Then right
mouse button click on the new sequence and Add Event . Select the Event_1 . The load sequence has
now been defined.
You can rename the load sequence by right mouse clicking on the load sequence you created and
select Edit Sequence&amp;hellip; . The event can be renamed by changing the Event Name databox under the
spreadsheet.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD  entries. You can close the Load Sequence&lt;br&gt;
form using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.Subcase Time History Load Magnitude Scale Factor Offset
1KNT_30_DEG.SC1 Field.111 1.0 1.0 0.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup258
Main Index
Step 7: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result Entities .
Select the shocktowerSPOT.MASTER  file and press the Apply  button.
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Repeats .
When visualizing spot weld results, it is best to create a marker plot ( Action/Object/Method  set to
Create/Marker/Scalar ). The plots below show a spherical marker. Since results for spot weld exist at
the top sheet, bottom sheet, and nugget (center), each element has three results positions and, in
addition, each element has multiple layers of results corresponding to each angle around the
circumference of the spot weld (18 by default). What is normally of interest is the most damaging
angle and location. Depending on the settings used to make marker plot, you can visualize the results.&lt;/p&gt;
&lt;p&gt;259 CHAPTER 10
Spot Welds
Main Index
in various ways. If not specified, use the default settings. Here is a summary:
Description/ Method Plot
Nodal T op/Bottom Sheet results: One layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Select a Single Layer (angle)
Target Entities:
Addtl.Display Control set to Nodes
Press Apply
The plot shown illustrates the bar (spot weld representation) with a
marker (and value) at the top and bottom for layer corresponding to
angle 340 degrees. Only the top and bottom sheet locations are plotted
at the nodes.
Elemental Top/Bottom Sheet results: One layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Select a Single Layer (angle)
Target Entities:
Addtl.Display Control set to Elements
Press Apply
The plot shown illustrates the bar (spot weld representation) with a
marker (and value) at the nugget center for layer corresponding to
angle 340 degrees. The actual value is the average of the top and
bottom sheet values - not the actual value at the spot weld nugget (see
below).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup260
Main Index
Nodal Top/Bottom Sheet results: Worst Case layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Select All Layers (angles)
Set Option to Maximum  (for damage results) or Minimum&lt;br&gt;
(for life or factor of safety results)
Target Entities:
Addtl.Display Control set to Nodes
Press Apply
The marker (and value) show the worst case location/angle results.
This is the worst case damage or life, but the plot does not indicate
which location or angle it actually is. The same value is shown at the
top and bottom location.
Elemental T op/Bottom Sheet results: Worst Case layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Select All Layers (angles)
Set Option to Maximum  (for damage results) or Minimum&lt;br&gt;
(for life or factor of safety results)
Target Entities:
Addtl.Display Control set to Nodes
Plot Options:
Extrapolation  set to Max or Min
Press Apply
The marker (and value) show the worst case location/angle result with
just one marker per element at the element centroid. Description/ Method Plot&lt;/p&gt;
&lt;p&gt;261 CHAPTER 10
Spot Welds
Main Index
Note: The same procedures as above should be followed for viewing spot weld results from CWELD and
CHEXA elements. The CWELD results appear identically to CBAR/CBEAM. However, for
CWELD, it is recommended to start with a new database and import the results and model data
from the OP2 or MASTER files when attaching since some representations of CWELDs do not
have top and bottom nodes when only GS node is specified and MSC Nastran internally creates Elemental Nugget Result - One layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Select a Single Layer (angle)
Target Entities:
Addtl.Display Control  set to Elements
Plot Options:
Extrapolation  set to Centroid
Press Apply
The marker (and value) plotted at the element center now shows only
the nugget result (center of the spot weld) for a single layer (angle), 340
degrees in this case.
Elemental Nugget Result - Worst Case layer (angle)
Select Results (icon):
Select Result Case
Select Scalar Result
Set Option  to Maximum  (for damage results) or Minimum  (for
life or factor of safety results)
Target Entities:
Addtl.Display Control  set to Elements
Plot Options:
Extrapolation  set to Centroid
Press Apply
The marker (and value) plotted at the element center now shows only
the worst case nugget result for all layers (angles). Description/ Method Plot&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup262
Main Index
those nodes. For nodal plots, the CHEXA results are plotted at the four corners of the solid
elements .
Step 8: Run other Fatigue Jobs
To run the other jobs from this Chapter, import each input deck into a new empty database and repeat the
steps here making modifications as necessary and shown below for each different input deck. The table below
lists the modifications necessary for each with the first as the baseline :
Below is a scalar plot of the fatigue life of the various spot welds shown with spherical icons for the
shocktowerSPOT.dat  job.Input Deck Modification
kang_cbar.dat Baseline - no modifications necessary
kang_chexa.dat No modification are necessary. You should be able to follow the same
procedure as for the baseline deck kang_cbar.dat . The fatigue properties
(diameter and top/bottom shell thickness) are defined under the
property for the solid element instead of the bar element.
kang_cw_*.dat No modification are necessary. You should be able to follow the same
procedure as for the baseline deck kang_cbar.dat . The fatigue properties
(diameter and top/bottom shell thickness) are defined under the
property for the weld element instead of the bar element.
shocktowerSPOT .dat No modification are necessary. You should be able to follow the same
procedure as for the baseline deck kang_cbar.dat . The Mean Stress
Correction  is set to None . And of course the cyclic loading definition is
different.&lt;/p&gt;
&lt;p&gt;263 CHAPTER 10
Spot Welds
Main Index&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup264
Main Index&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P15</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_015/</guid>
      <description>
        
        
        &lt;p&gt;Main Index
Chapter 11: Seam Welds
11 Seam Welds
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description266
Main Index
Problem Description
Fatigue analysis of seam welds is addressed in this chapter. A fairly simple model called the “tee tube” is used
with a fillet seam weld connecting two metal tubes at 90 degree. As the fatigue analysis of seam welds is an
extension of a standard fatigue analysis, it is assumed that the user has familiarized him/herself with standard
S-N fatigue analysis from previous chapters. The clipped portion of the model below shows the various
portions of the seam weld (throat=yellow, toe=magenta, root=cyan).
Objective
To illustrate modeling techniques for fatigue analysis of seam welds
To identify critical seam weld locations based on fatigue damage
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 11-1  Files Required
Files Required Description
tee_tube.dat Fillet seam weld model using CQUAD element.&lt;/p&gt;
&lt;p&gt;267 CHAPTER 11
Seam Welds
Main Index
Limitations
Fatigue analysis of seam welds is limited to the S-N (stress-life) method.
TOPSTR, TOPDMG, and  NHS options on FTGDEF  entry cannot be used. All seam welds elements
identified for fatigue analysis are fully processed.
Overview
The seam weld fatigue analysis method implemented in MSC Nastran is based on that originally proposed
by Volvo Car Corporation and Chalmers University of T echnology, and developed in cooperation with
nCode. The method was developed particularly for automotive components welded from thin steel sheets
(typically1-3 mm), and most of the industrial applications of this method have been to this type of structure.
However, the structural stress-based approach it uses is of quite general applicability and there is no reason
in principle why it should not be applied to structures with thicker sheets.
The method is basically quite similar to the standard S-N method, but with some special features to deal with
welds. The method was originally developed for thin sheet welded structures, modeled and analyzed using
predominantly CQUAD4 elements. (The original work is described in Mikael Fermér, Magnus Andréasson
and Björn Frodin. “Fatigue Life Prediction of MAG-Welded Thin-Sheet Structures”, SAE T echnical Paper
982311 .) Please see Spot Welds (fatigue analysis of)  for calculation details.
As originally described by Fermér et al, the method used grid point forces from the FE solution to calculate
structural stresses at the weld toe. This approach was considered to provide a good level of mesh insensitivity
compared to standard stress recovery methods, which rely on extrapolation from gauss points. Subsequently,
it was realized that a good level of mesh-insensitivity could also be achieved by using the CUBIC stress
recovery option, and implementation of the method in software relied on CUBIC stress recovery. (The
CUBIC method derives stresses at each node in each element from the displacements and rotations of the
nodes.)
The method determines the contribution of bending to the total stress, and from this determines whether
the weld is essentially “stiff” or “flexible”. A different SN curve may be required for these cases, and
interpolation is made between the curves based on the degree of bending.
Different types of welds have to be analyzed differently, depending upon their geometry, the process by which
they are created, and the failure modes to be considered. Welds must therefore be collected into different
groups for analysis according to which category they fall into. The supported weld types are as follows.
Fillet Welds
A fillet weld is a Metal Inert Gas (MIG) or Metal Active Gas (MAG) weld joining two sheets at an angle.
The weld illustrated is a single-sided weld. The most likely failure (fatigue crack) locations at the weld toe or
weld root are marked. These are the locations where the fatigue damage will be evaluated. Note that weld
throat failure is unlikely unless a weld is of poor quality or the weld bead under-dimensioned.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description268
Main Index
Figure 11-1  Fillet weld cross-section showing likely failure locations
Overlap Welds
An overlap weld is similar to a fillet weld, except that the plates being joined are parallel. Note the marked
possible failure locations – these are the locations where the analysis engine will predict the fatigue damage.
Figure 11-2  Overlap weld cross-section showing likely failure locations
Laser Overlap Welds
In the case of the Laser Overlap weld, failures initiating and propagating through the sheets are classed as weld
root failures. The other possible failure mode is cracking through the weld itself. This is classified as a weld
throat failure. The possible failure locations are illustrated. Note that the sheet separation has been
exaggerated for the sake of clarity.
Figure 11-3  Laser overlap cross-section showing likely failure modes
Laser Edge Overlap
Laser edge overlap welds are handled in a very similar way to overlap welds, except that because of the small
dimensions of the weld bead, failure through the weld throat becomes a possibility.&lt;/p&gt;
&lt;p&gt;269 CHAPTER 11
Seam Welds
Main Index
Figure 11-4  Laser edge overlap weld cross-section and possible failure locations
Generic Seam Welds
The “Generic” option is provided so that some users may reproduce a conservative option previously
available in FE-Fatigue. In this option, damage is calculated for the top and bottom surfaces of all shell
elements attached to the weld elements. All these locations are treated as weld toes. For example:
Figure 11-5  Generic option “failure” locations. All positions are treated as weld toes.
Modeling Guidelines
In order to obtain reasonably accurate fatigue analysis results, it is necessary to adhere to certain FE modeling
guidelines. There are some general guidelines, and some that are specific to the different weld types.
General Guidelines
1.The structures to be analyzed should be meshed predominantly with 4-node quadrilateral elements
(CQUAD4 or equivalent) representing the mid-planes of the metal sheets.
2.The weld bead should be represented by a single or double row of shells.
3.The mesh around the weld should be regular, with elements of around 5 mm in size.
4. Triangular elements in the vicinity of the weld should be avoided.
5.The elements representing the different portions of the weld must be placed in a unique property set
for each weld or weld type using the FTGDEF  entry.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description270
Main Index
6.The weld element (throat) normals should be aligned so that the normals point outwards, that is
towards the welder (except for Laser Overlap welds). The elements defining the toe and root of the
weld must have the top of the shell (Z2 layer) be the side where the crack is expected to develop. See
the previous figures for Z1 and Z2 placement.
7.Un-averaged node-at-element stresses are recovered and used in the fatigue calculation.
8.In the past it has been recommended to “close” the ends of welds as illustrated below. However, when
using stresses, a simplified approach such as that illustrated in (b) appears to give quite good results
whilst being significantly  easier to build.
Figure 11-6  Simplified modeling of weld ends. Approach (b) is adequate.&lt;/p&gt;
&lt;p&gt;271 CHAPTER 11
Seam Welds
Main Index
Fillet Welds
Fillet welds may be modeled either by a row of inclined shell elements, as illustrated or by two rows.
Figure 11-7  Cross-section of fillet weld modeled with single inclined element
Please note the following:
1.Each weld element type is a different property set
2.The weld element normal points “towards the welder”.
3.The nodes of the weld elements are in line with the weld toe.
4.The length Lw should be determined by the actual dimensions of the weld toe. A typical
recommendation might be Lw = t1 + t2.
5.The thickness of the weld element should represent the weld throat thickness, typically
Figure 11-8  Cross-section of fillet weld modeled with two rows of elements
Lw2&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description272
Main Index
Please note the following:
1.Make sure that the weld element normals are aligned as shown. This orientation is required for the
correct identification of weld toe and weld root.
2.A weld element thickness of  or in other words about 0.35( t1 + t2) is recommended,
although the stiffness of this joint formulation will not be very sensitive to the weld element thickness.
For fillet welds, the weld toe and root elements are outlined above. The weld throat elements are not used for
analysis - do not include throat element in the analysis for fillet welds. The weld toe elements are the elements
in front of the weld that share nodes with the weld throat elements. The elements at the end of the weld line
are optional. It is recommended to exclude these end elements of the weld from the analysis.
Overlap and Laser Edge Overlap Welds
Overlap and Laser Edge Overlap welds are modeled in the same way, except that the dimensions of the weld
bead will be smaller for a Laser Edge Overlap weld. The principles are the same as for fillet weld modeling; a
row of nodes should be created along the line of the weld toe and one or two rows of elements used to model
the weld, with the thickness of these weld elements representing the weld throat.
Figure 11-9  Overlap weld modeling.two-element approach
For Overlap welds, typical leg length Lw = t1 + t2 and the weld element thickness should then be around
0.27( t1 + t2).
The approach can be simplified, replacing the double row of elements by a single row, as illustrated next. This
method is more suitable for Laser Edge Overlap welds, because it allows weld throat fatigue calculations to
be made; reasonable weld throat stresses require a single row of elements to be used.
Figure 11-10  Simplified modeling approach for overlap or laser edge overlap weldsLw22&lt;/p&gt;
&lt;p&gt;273 CHAPTER 11
Seam Welds
Main Index
In this case, for Overlap welds, the weld element thickness should be set to 2x the thickness of the thinner
of the two sheets, but in any case not less than 3 mm. For Laser Edge Overlap welds, the thickness of the
weld element should correspond to the weld throat, which will be about 0.7x the upper sheet thickness.
Figure 11-11  Alternative method for overlap and laser edge overlap welds
For overlap welds, the weld toe and root elements are outlined above. The weld throat elements should not
used for analysis. Again, the elements at the end of the weld line are optional. It is recommended to exclude
end elements of the weld.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description274
Main Index
Laser Overlap Welds
For Laser Overlap welds, the thickness of the weld element should represent the weld width. The weld width
should be 90% of the thickness of the thinner sheet, but in any case not less than 1 mm.
Figure 11-12  Laser overlap weld
For Laser Overlap welds, the weld root and throat elements are shown above. Because a crack might initiate
from either side of the weld throat, both sides of the weld throat element must be considered. Again, the
elements at the end of the weld line are optional and is recommend to exclude these elements from the
analysis.
Generic Seam Welds
If the seam weld is set to Generic, all surfaces of elements attached to the weld elements are used, and should
be treated/defined as weld toes.&lt;/p&gt;
&lt;p&gt;275 CHAPTER 11
Seam Welds
Main Index
Calculation Process
The overall calculation process is explained here. Please see Spot Welds (fatigue analysis of)  for calculation
method details.
Having identified the FE entities (nodes/elements) from which stresses will be recovered for calculation, and
the correct surfaces of each element to use, as described in the previous section, the calculation proceeds as
follows:
1.For each FE entity being analyzed, determine “weld-top” and “weld-bottom” surface stress tensor
time histories and calculate “weld-top” and “weld-bottom” surface combined stress histories (Abs
Max Principal or Critical Plane).
2.Where appropriate, use “weld-top” and “weld-bottom” surface stresses to determine the degree of
bending in the loading on the weld at the calculation point in question.
3.Where appropriate, use the bending ratio to interpolate between “stiff” and “flexible” S-N curves.
4.Rainflow count the “weld top” stress history.
5.Carry out the damage calculation. The main features of the damage calculation are the same as for a
normal S-N approach. A mean stress correction can optionally be applied using the FKM method.
There is also an optional thickness (size effect) correction and multi-axial assessment is allowed.
Figure 11-13  Seam Weld Analysis Process&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup276
Main Index
Fatigue Setup
The input deck for this example is tee_tube.dat . As the fatigue analysis of seam welds is an extension of a
standard fatigue analysis, it is assumed that the user has familiarized him/herself with standard S-N fatigue
analysis from previous chapters.
Only the pertinent input for the fatigue analysis is shown and explained here. This example decks runs a static
SOL 101 job. Fatigue analysis of seam welds is however, applicable to all other supported analysis types as for
any standard S-N fatigue analysis in the time domain.
SOL 101
CEND
TITLE = tee_tube Seam Weld fatigue analysis Model
&amp;hellip;$
FATIGUE(FORMAT=64) = 42
SUBCASE = 1
SUBTITLE = Fx=394
LOAD=1
&amp;hellip;
BEGIN BULK
&amp;hellip;$
$ toe elements
SET1    201     6       27      44&amp;hellip;   &lt;!-- raw HTML omitted --&gt;
$ toe seam nodes
SET1    202     1       12      13&amp;hellip;   &lt;!-- raw HTML omitted --&gt;
$ root elements
SET1    301     2       9       18&amp;hellip;   &lt;!-- raw HTML omitted --&gt;
$ root seam nodes
SET1    302     108     116     117&amp;hellip;  &lt;!-- raw HTML omitted --&gt;
$ throat elements
SET1    401     1422    THRU    1477
&amp;hellip;
FTGDEF  42
SEAMW   201     2       202     FILLET  TOE
301     2       302     FILLET  ROOT
401     2               FILLET  THROAT
PFTG    2                                       1.      0.
$
FTGPARM 42      SN      1.0     1       5
SEAMW   ABSMAXPR NONE   0       SGAGE   S TRESS
$
FTGLOAD 42      111     1       1.0     1.0     0.0
TABLFTG 111
0.0     -1.0    1.0     0.0     ENDT
$
MATFTG  1       1.0
STATIC          4000    99
$
DTI     UNITS   1                                       MPA
$
$  &amp;hellip; Model Data (not shown)
$
ENDDATA&lt;/p&gt;
&lt;p&gt;277 CHAPTER 11
Seam Welds
Main Index
Case Control
FATIGUE(FORMAT=64) = 42
SUBCASE = 1
SUBTITLE = Fx=394
LOAD=1
The following notes are made on the case control above:
1.The FATIGUE  case control is required to invoke a fatigue analysis. As with previous examples, the FID
42 calls out FTGDEF , FTGPARM , and FTGSEQ  (or FTGLOAD ) entries. What makes this output request a
fatigue analysis of seam welds is dependent on the settings in these entries.
2.There are two subcases, but only the first subcase is used in the fatigue analysis and all output requests
under this subcase are optional and not necessary to specify as the appropriate stresses (STRESS
output request) will be extracted for the fatigue analysis.
Fatigue Definitions/Properties
SET1    201     6       27      44&amp;hellip;   &amp;lt; FILLET/TOE elements&amp;gt;
SET1    202     1       12      13&amp;hellip;   &amp;lt; FILLET/TOE seam line nodes&amp;gt;
SET1    301     2       9       18&amp;hellip;   &amp;lt; FILLET/ROOT elements&amp;gt;
SET1    302     108     116     117&amp;hellip;  &amp;lt; FILLET/ROOT seam line nodes&amp;gt;
SET1    401     1422    THRU    1477    &amp;lt; FILLET/THROAD elements&amp;gt;
$
FTGDEF  42
SEAMW   201     2       202     FILLET  TOE
301     2       302     FILLET  ROOT
401     2               FILLET  THROAT
PFTG    2                                       1.      0.
The FTGDEF  entry is used to identify the seam weld classes (fillet, overlap, etc.) and location types (toe, root,
throat). Multiple lines may included under the SEAMW line of the FTGDEF  entry to define all weld classes
and location types as necessary in the model. Note the following:
1.The FTGDEF  bulk data entry is required to invoke a fatigue analysis of seam welds by providing the
SEAMW keyword. This entry is called out by the FATIGUE  case control. If this entry is omitted or the
SEAMW keyword is not present, then MSC Nastran will attempt to do a standard fatigue analysis
or a fatal message will result if no appropriate elements are defined.
2.The weld class and location type is associated to a set of elements using the ELSIDi field on the
SEAMW line. For example the line defining the FILLET/TOE elements references SET1 of ID 201,
which contains all the elements defining the toe of this fillet seam weld. SET1 ID 301 contains all
the elements defining the FILLET/ROOT elements. SET1 ID 401 contains all the elements defining
the throat elements.
3.Typically fatigue failure does not occur in the actual seam weld itself (throat elements) but at the
interface between the seam and the connected structure, referred to as the seam line. It is therefore
not recommended for most seam weld classes to include the throat elements as part of the analysis.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup278
Main Index
4.Because fatigue failure of seam welds typically occurs at the seam line, it is typically advantageous to
include only the seam line as part of the analysis itself. The NDSIDi field of the SEAMW line
identifies the nodes on those elements that are shared with the weld elements that define the seam
line. SET1 ID 202 defines the seam line of the FILLET/TOE elements. SET1 ID 302 defines the
seam line of the FILLET/ROOT elements. If NDSIDi is define, only those nodes of the elements are
retained in the analysis. If omitted, then all the nodes of the elements are included in the analysis,
which could trigger some false failures as it is unlikely for failure to occur away from the seam line.
5.It is important which surface (Z1[bottom] or Z2[top]) of each element is the “weld -top” surface, i.e.,
the surface at which crack development is predicted. This depends upon the direction of the weld toe
or root element normal direction. Please see the previous section on modeling guidelines.
6.The SEAMW line also defines the fatigue properties associated with the seam welds by associating a
PFTG entry (ID= 2 in this case) to the seam weld elements. The only applicable entries are the scale
factor and offset, for scaling and offsetting the resultant stress time history for the associated set of
elements/nodes. It not necessary to include a PFTG entry.
Fatigue Parameters
FTGPARM 42      SN      1.0     1       5
SEAMW   ABSMAXPR NONE   0       SGAGE   S TRESS
DTI     UNITS   1                                       MPA
The following notes are made about the fatigue definition entry ( FTGPARM ) above:
1.The FTGPARM  bulk data entry is shown and used here, but not required to invoke a fatigue analysis of
seam welds as long as only the defaults are used. The above uses all the default and could be omitted.
This entry is called out by the FATIGUE  case control. If this entry is omitted or the SEAMW keyword
is not present, then default parameters are used.
2.The SEAMW line allows you to specify the following:
•Stress combination (COMB field) - only two methods are allowed (COMB=ABSMAXPR or
CRITICAL), for absolute maximum principal or a critical plane analysis. This defines the
resultant scalar stress used in the damage look up on the S-N curve.
•Mean Stress Correction  (CORR field) - the default is CORR=NONE for no mean stress
correction. The only method available for seam welds is the FKM method (CORR=FKM). See
the discussion on cyclic material properties below.
•Thickness correction (THICK field) - flag to invoke a thickness correction. The default is no
correction (THICK=0). See Seam Welds (fatigue analysis of)  for a discussion on the usage of this
parameter.
•Result location (LOCSM field) - Location on seam weld to report life. Only calculation of r esults
on element nodes is possible. (Character; Default = NODE). However this field works just like
LOC /RECOVER fields  on the “STRESS” line and must actually be the same as that defined on
the “STRESS” line if  “STRESS” line is als o included for a standard fatigue analysis. LOC=ELEM
is not valid for fatigue analysis of seam welds and cannot be mixed with LOCSM = NODE. Aside&lt;/p&gt;
&lt;p&gt;279 CHAPTER 11
Seam Welds
Main Index
from defining where on the seam weld to report fatigue life, this field also defines what type of
element nodal stresses to extract for the fatigue analysis - LOCSM = SGAGE , or CORNER  (or
NODE) , or CUBIC . The original seam weld calculation method uses CUBIC. The default is
CORNER ( same as specifying NODE).
•Field RESENT must be set to STRESS as this is the only result entity type currently allowable.
3.On the FTGPARM  entry it is also possible to include all other keywords (“RAINFLOW”, “FOS”,
“CERTNTY”, “MULTI”, etc. to invoke those features within a fatigue analysis of seam welds and/or
to combine with standard S-N/E-N or spot weld fatigue analyses as long as the elements defined for
each are mutually exclusive.
4.The DTI,UNITS  entry is used to indicate the stress units of the model. This is no different from standard
fatigue analysis. All stress parameters defined on the MATFTG  entry are assumed to be in these stress
units unless the CNVRT field on the MATFTG  is set. See examples in previous chapters.
Cyclic Material Properties
MATFTG  1       1.0
STATIC          4000    99
The definition of the cyclic material properties is simple. The referenced MATFTG  entry of ID=1 corresponds
to an equivalent MAT1 entry in the deck of the same ID. Only those element referencing MAT1 of ID=1
will be processed for fatigue output and those element must be called out through the FTGDEF  entry as
explained earlier.
Only the STATIC line is provided on the MATFTG  entry with a material CODE=99 and UTS=4000. For
fatigue analysis of seam welds, this is actually a trigger or flag to indicate that standard, generic S-N material
properties for steel are to be used for the “stiff” and “flexible” S-N curves . The properties used are listed in
Table 2-2, “Spot and Seam Weld Fatigue Analysis SN Curve Defaults,” on page 34. Generic properties are
available for steel (CODE&amp;lt;100) and aluminum (100 CODE&amp;lt;200) materials.
It is possible to specify specific S-N properties for both “stiff” and “flexible” S-N curves  by explicitly defining
them on the MATFTG  entry as such:
MATFTG  1       1.0
STATIC  355     4000    99               -1.0
SNBR1   3.6e4   -0.3333 1.e7    -0.3333  1.e30  0.4
-0.25   -0.1    -0.1            1.0     0.16667
SNBR0   1.8e4   -0.3333 1.e7    -0.3333  1.e30  0.4
-0.25   -0.1    -0.1            1.0     0.16667
The means stress sensitivity parameters for the FKM methods are also specified on the MATFTG  entry. Please
note the following rules used if certain data is provided or omitted from the MATFTG  entry:
1.If only a STATIC key word is present, generic properties are used for steel and aluminum based on
the CODE field. If CODE defines a material other than steel or aluminum, a fatal error will be
issued. UTS must also be specified, although it is not used as the UTS of the generic properties is
actually used.
2.If the SN keyword is present then it defines the S-N parameters for both “stiff” and “flexible” S-N
curves at bending ratio r=0 and r=1, respectively.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks280
Main Index
3.If the SNBR1 keyword is present then it defines the S-N parameters for the “flexible” S-N curve at
bending ratio r=1.
4.If the SNBR0 keyword is present then it defines the S-N parameters for the “stiff” and “flexible” S-
N curve at bending ratio r=0.
5.If SN is present, but not SNBR1 and SNBR0, then SN=SNBR1=SNBR0.
6.If SNBR1is present but not SNBR0, then SNBR1=SNBR0, and vice versa.
7.SN (or SNBR1/SNBR0) may be present with only the mean stress sensitivity (M1-M4) parameters.
In this case, SRI1, b1, Nc1, b2 must be left blank in order to trigger usage of generic properties and
avoid a fatal error.
Cyclic Loading
FTGLOAD 42      111     1       1.0     1.0     0.0
TABLFTG 111
0.0     1.0     -1.0    0.0     ENDT
The FTGLOAD  entry associates results from SUBCASE 1 to the cyclic behavior of the loading via the TABLFTG&lt;br&gt;
entry, which defines a single, fully reversed, constant amplitude load. This is identical to previous examples.
The cyclic loading definition is independent of the type of fatigue analysis.
Fatigue Results
Some select results output for the tee-tube seam weld model is shown for the fillet weld at a few root locations
along the seam line only.
FILLET seam weld ROOT results:
Concluding Remarks
•Seam welds should be modeled with four (4) noded quad elements (CQUAD4) elements or
equivalent and triangular elements should be avoided.
•A FATIGUE  case control output request is required.            F A T I G U E   R E S P O N S E   I N   Q U A D 4   E L E M E N T S  F O R   S E A M  W E L D S     OPTION =NODE
LOCATION =   ROOT       TYPE =  FILLET
ELEMENT    GRID         LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
26      129        0.3988E+08   7.60   0.3988E+08   7.60   0.2507E-07  -7.60   0.3945E+02  -0.3945E+02
89      119        0.3291E+08   7.52   0.3291E+08   7.52   0.3039E-07  -7.52   0.4377E+02  -0.4377E+02
309      629        0.5224E+08   7.72   0.5224E+08   7.72   0.1914E-07  -7.72   0.3832E+02  -0.3832E+02
394      619        0.4859E+08   7.69   0.4859E+08   7.69   0.2058E-07  -7.69   0.3957E+02  -0.3957E+02
EVENT ID  ALL EVENTS  FATIGUE ID      42
* * *  C R I T I C A L  F A T I G U E   R E S P O N S E  F O R  S E A M  W E L D S * * *     OPTION =NODE
ELEMENT    GRID         LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
89      119        0.3291E+08   7.52   0.3291E+08   7.52   0.3039E-07  -7.52   0.4377E+02  -0.4377E+02&lt;/p&gt;
&lt;p&gt;281 CHAPTER 11
Seam Welds
Main Index
•The elements defining the different locations of seam weld classifications (fillet, overlap, laser
overlap, laser edge overlap, and generic), need to be group together as toe or root and defined on
the FTGDEF  entry on the SEAMW line, which is required.
•Throat elements (defining the actual weld) are typically not analyzed for fatigue as fatigue failure
generally occurs at the seam line of the toe or root. The elements making up the throat are
generally modeled simply to simulate the stiffness of the weld itself.
•Fatigue failure generally occurs along the seam line between the weld and the welded structure.
Typically these nodes would be defined to eliminate fatigue calculation on nodes of the elements
that are not along the seam line.
•The elements defining the throat should have the element normals in the correct direction
(pointing toward the welder, in most cases).
•It is important that the top (Z2) and bottom (Z1) of the throat and root shell elements be
positioned as discussed in this chapter. For the type of weld, this defines where (top or bottom)
the fatigue failure occurs and thus, which stresses are extracted and used in the actual fatigue
calculation. Stresses from both the top and bottom are only used to determine the bending ratio.
•A FTGPARM  bulk data entry is required to change any of the default parameters associated with
fatigue analysis of seam welds using the SEAMW line
•A MATFTG  bulk data entry is required to either define “flexible” and “stiff” S-N materials of the
seam weld, or to flag the use of generic S-N data for seam welds made of steel or aluminum.
•The PFTG bulk data entry is optional and only used to scale or offset the resultant stresses for the
associated element nodes.
•Cyclic loading definitions are independent of the fatigue analysis type and thus, are the same as
for any other standard fatigue analysis.
•It is possible to run a factor of safety analysis, and use time history compression, specify certainty
of survival, or run multi-axial assessment with fatigue analysis of seam welds - all specified on the
FTGPARM  entry.
•It is possible to run a standard fatigue analysis and a fatigue analysis of seam welds with the same
FATIGUE output request by using both the SEAMW and the ELSET lines on the FTGPARM&lt;br&gt;
entry, however the same element sets cannot be specified in both lines.
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
Start Patran and open a new Patran database and call it tee_tube . Use the Analysis  application to
import the first input deck associated with this example: tee_tube.dat  (Action =Read Input File ). Make
sure the Analysis Preference  is set to MSC.Nastran.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup282
Main Index
Step 2: Check the Model
Go to the Loads/BCs  application. Plot the LBC markers ( Action =Plot Markers ). Make sure the
Current Load Case  is set to the imported load case ( _FX=394.SC1 ). Select all the LBCs and press the
Apply  button.
Go to the Materials  application ( Properties  tab, Isotropic  button group in skin mode). Set the Action&lt;br&gt;
to Modify  and select the only available material. Note the values in the Linear Elastic  constitutive
model. If there is no current Stress-Life (SN)  constitutive model, create one. If there is, verify the
following parameters, which are written to the MATFTG  entry:
By using the Derived  option, the generic ferrous S-N curves required for a fatigue analysis of seam
welds are used.
Go to the Element Properties  application. Set the Action  to Modify . Select one of the properties of
interest for our fatigue analysis: ( pshell.11 or pshell.22I ). All fatigue element properties are defined
here. Make sure the following are set below. Only the fatigue properties are shown in the table below.
Values for the fatigue properties, are placed on the PFTG entry. All other pertinent properties are part
of the PSHELL entry and related elements for this model.
Note: Since the weld location is an element property in Patran, different weld locations (toe, root, throat)
must be placed in their own property sets so as to be able to distinguish them as such. Importing an
input file that does not have the weld locations specifically placed in different element properties
results in the loss of definition of these weld locations on import. The weld location takes on the last Parameter Value
Constitutive Model: Stress-Life (SN)
Option: Derived
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Ultimate T ensile Stress 4000.0
Standard Error Log(N) 0.1
Parameter Value
[Layer]
[Surface Finish]
[Reduction Factor Kf]
[Roughness Factor]
[T reatment Factor]These should be blank for a fatigue analysis of seam weld. They
are only applicable to standard S-N and -N analysis.
[Scale Factor] Blank or 1.0
[Offset] Blank or 0.0
[Weld Type] Fillet
[Weld Location] T oe (for pshell.11), Root (for pshell.22)&lt;/p&gt;
&lt;p&gt;283 CHAPTER 11
Seam Welds
Main Index
one encountered in a FTGDEF if not separated out into individual property sets (meaning a PSHELL
entry for each set of elements making up the toe, root, throat of a seam weld).
Step 3: Check the Fatigue Parameters
Go to the Analysis  application ( Action  = Analyze ). Since we read the existing job tee_tube.dat , a job
by the name of tee_tube  has been created. Click on it to restore all its settings. Open the Solution
Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form. From here you can check the Fatigue
Parameters&amp;hellip;  Open this form and ensure the following parameters are set, which are written to the
FTGPARM  entry. If a parameter is not mentioned below, use the default value or leave it blank. Close
all the forms when done using the OK buttons.
Also, in order to post-process the fatigue results in Patran, make sure that the results are written to
the MASTER/DBALL files. This is done in the Solution Parameters&amp;hellip; form by opening the Results
Output Format&amp;hellip; form and turning ON the MASTER/DBALL  toggle.
Step 4: Check the Output Requests
Still in the Analysis  application, click on the Subcases&amp;hellip;  form. Our subcase is called: _FX=394.SC1 .
Click on the it from the Available Subcases  list box to access all its settings. Then open the Output
Requests&amp;hellip;  form. Set this form to the advanced setting ( Form Type: ).
If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the required FTGDEF  bulk data entry.
From the Select Group(s)  list box (set Type of include data  to Groups ), select only set1_201, set1_301,
set1_401 . Press the Apply  button on the Subcases&amp;hellip;  form to save the new output request settings. You
could also select the property sets only ( pshell.11 , pshell.22 , pshell.4 ) that correspond to the toe, root,
and throat elements to be analyzed. But since SET1 entries were used in the imported input deck,
the weld location elements were grouped into separate Patran groups.
One last note about output requests. Fatigue life output requests are subcase independent unlike
most standard output requests such as stress and displacement. If you are using multiple subcases, the
first subcase selected (see the next step) must have the Fatigue Life  output request in it. Thus, it is not
necessary in this example to open each subcase and ensure that FATIGUE is set as an output request.
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes to this subcase.Parameter Value
Stress Units: MPa
Stress Combination: (this is ignored - set this under Seam Weld)
Results Loc.: Node
Run Seam Weld Analysis T urn this ON
Stress Combination: Abs. Max. Principal
Mean Stress Corr.: None
Result Entity: Stress (only choice)
Apply Thickness Correction OFF&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup284
Main Index
Step 5: Check the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). There should be two (2)
subcases present in the bottom list box, although only one is used in the fatigue analysis. Now open
the Define Fatigue Load Sequences&amp;hellip;  form. On this form ensure that the loading association is set
up properly. For the loading in this example, we want to associate the subcase to a single constant
amplitude defined by a Patran field called Field.111 .  Fill out the spreadsheet as shown here if not
already filled out.
On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined. To create these from scratch, remove all the existing load sequences using the right mouse
button by clicking on Load Sequences  and select Remove All  Sequences . The follow these instructions:
Use the right mouse button to click on the Load Sequences  and Add a New Sequence . Then right
mouse button click on the new sequence and Add Event . Select the Event_1 . The load sequence has
now been defined.
You can rename the load sequence by right mouse clicking on the load sequence you created and select
Edit Sequence&amp;hellip; . The event can be renamed by changing the Event Name databox under the
spreadsheet.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD  entries. You can close the Load Sequence  form
using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result Entities .
Select the shocktowerDCY_v1.MASTER  file and press the Apply  button. Subcase Time History Load Magnitude Scale Factor Offset
1KNT_30_DEG.SC1 Field.111 1.0 1.0 0.0&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P16</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_016/</guid>
      <description>
        
        
        &lt;p&gt;285 CHAPTER 11
Seam Welds
Main Index
Go to the Results  application and view the results by selecting Log of Damage  or Log of Life, Repeats .
You will note that results for each event and results of the combined events are accessible. Below is f
ringe of damage. Results exist only along the seam line in this case.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup286
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 12: A Multiaxial Assessment
12 A Multiaxial Assessment
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description288
Main Index
Problem Description
In real service conditions, some structures can experience multiaxial loadings in critical locations. That is, the
stress state in the critical location is characterized as having more than one significant principal stress, and/or
the principal stress directions change with time. Methods are available in MSC Nastran for investigating the
stress state to assess multiaxial conditions and whether, or not, further investigation and possible corrections
are needed based on the uniaxial assumptions made by standard S-N and -N fatigue analysis.
In this chapter, the SAE Shaft is used to investigate multiaxial stress states.
Objective
To confirm that the critical location is in one of the notched areas of the shaft
To explore the application of the biaxiality analysis feature and interpretation of the results
To assess the multiaxial stress state and make decisions on the validity of the fatigue analysis, i.e., are
the original uniaxial assumptions valid; does Proportional Loading  have to be taken into account, or
does a Critical Plane Analysis  need to be done?&lt;/p&gt;
&lt;p&gt;289 CHAPTER 12
A Multiaxial Assessment
Main Index
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Limitations
Multiaxial assessments are not possible with fatigue analysis of spot welds .
Fatigue analysis of seam welds can only do simple biaxiality and standard multiaxial assessments -
the auto feature, which does critical plane, analysis is not supported.
When doing a factor of safety analysis with standard S-N or -N fatigue life calculations, only
simple biaxial assessment is possible.
Geometry
The model is called the SAE shaft. The geometry of the shaft is meshed using hexahedral and pentahedral
solid elements. The area near the notch root was carefully refined. Because accurate surface (2D tensor or
surface resolved) stresses are needed for fatigue damage computations, the shaft model was wrapped with thin
shell elements having the same material properties as the solid elements. Although the shell elements do
increase computational time somewhat, they substantially increase the accuracy of the stress predictions at
the surface, avoiding extrapolation from sub-surface Gauss points. Shells should be thin enough such that
they do not influence the stress-strain response of the solid elements.Table 12-1  Files Required
Files Required Description
sae_shaft_multiax_simple.dat SAE Shaft model using the simple biaxiality analysis option  analyzed
on notches only.
sae_shaft_multiax_stnd.dat SAE Shaft model using the standard multiaxial assessment option&lt;br&gt;
analyzed on notches only.
sae_shaft_multiax_auto.dat SAE Shaft model with automatic override of stress combination
parameter to recalculate damage based on the multiaxial assessment
(auto method) analyzed on notches only.
sae_shaft_ skinned. dat SAE Shaft model with simple biaxiality analyzed on all skinned
elements.
sae_shaft_ resolved. dat SAE Shaft model with simple biaxiality analyzed on internally
generated skinned elements using RESOLVE option.
shaft01.dac
shaft02.dacCyclic load definition file describing the bending and torque applied
to the SAE Shaft model.
knuckleMA. dat
knuckle01-12.dacBiaxial assessment of an automobile knuckle based internally
generated skinned elements using RESOLVE option to show a
uniaxial stress state at the critical location of a complex model and
complex loading.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description290
Main Index
There is a total of 22140 elements, out of which 3852 are shell elements. Only the shell element are included
in the analysis.
Figure 12-1  SAE Shaft Model Dimensions
Loading
The shaft is loaded with two static load, representing a bending load of 1000 N (applied at the location shown
in Figure 4-3) and a torsional load of 1000 Nmm applied at the same location, which results is a multiaxial,
non-proportional loading condition / stress state. In both cases, the shaft is constrained around the parallel
section as shown above. The static load-cases are combined with actual bending and torque loading histories
using the principle of linear superposition, to produce stress histories for all or selected entities of the model.&lt;/p&gt;
&lt;p&gt;291 CHAPTER 12
A Multiaxial Assessment
Main Index
Multiaxial Assessment Overview
Multiaxial assessment provides information about how the stress state varies throughout the loading history.
There are three multiaxial assessment options:
Simple Biaxiality Analysis
Standard Multiaxial Assessmen t
Automatic Multiaxial Assessment
All require the stresses to be two dimensional (2-D). The basic input to the multiaxial assessment calculation
is a 2-D stress tensor time history;
Simple Biaxiality Analysis
This option provides in formation about the behavior of the stress tensor in terms of the biaxiality ratio and
the orientation of the absolute maximum principal stress. The input to the calculation is a 2-D or surface-
resolved stress tensor history ij(n) where n is the point number from the time history or peak-valley
sequence. The zz, xz and yz components are assumed to be zero, i.e.,
ijxxxy0
xyyy0
000=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description292
Main Index
At each point (n), the principal stresses are determined. For the purposes of this calculation the principal
stresses are 1, 2 and z, where z=zz(the surface normal stress) and | 1|  |2| (the in-plane principal
stresses).
So 1 is the Absolute Maximum Principal Stress and 2 is the other in-plane principal. At the same time, the
orientation p of 1 relative to the local x-axis is determined.
Figure 12-2  Surface stress state reduced to two (2) principal stresses and their orientation
The biaxiality ratio is defined as
Statistics of ae(n) and p(n) are calculated. In order to reduce the impact of data points (n) where the stresses
are very small, the number of points that contribute to the statistics are reduced through the use of a Biaxiality
Gate property, which is defined as a percentage of the material UTS (typically 20%). Points will be excluded
from the biaxiality analysis if
This is illustrated in Figure 12-3; the data points in blue will be excluded from the statistics.
ae2
1&amp;mdash;&amp;mdash;=
1n()Biaxiality Gate
100&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;UTS =&lt;/p&gt;
&lt;p&gt;293 CHAPTER 12
A Multiaxial Assessment
Main Index
Figure 12-3  Gating out small stresses from biaxiality calculations
The following quantities are reported in the analysis results:
Mean Biaxiality Ratio - The mean value of ae(n) during the loading sequence
Standard Deviation of the Biaxiality Ratio - The standard deviation of ae(n) during the loading
sequence
Angle Range - To calculate this, the values of p are collected into three degree bins, then looking
for the largest continuous block of unoccupied bins and subtracting this angle from 180 degrees.
Most Popular Angle - This refers to the most populated bin (see above).
Biaxiality Gate (In stress units) - Taking into account the percent (%) Biaxiality gate and the
material UTS)
Maximum Abs Max Principal Stress Range - The maximum range of 1
What is Biaxiality Analysis?
What we really want to know now, (and this is what “biaxiality analysis” will tell us) is whether the analysis
we have carried out is appropriate to the states of stress occurring in the component. A biaxiality analysis
accomplishes the following:
1.First we are concerned with stresses and strains at free surfaces, where a state of plane stress exists, i.e.,
the stress state is two dimensional in the plane of the free surface. We therefore simplify our attempts
to understand the free surface by transforming the stress results to local coordinate systems at each
location where the x-y plane is the plane of the surface, i.e., surface resolved stresses. Thus the reason
for skinning 3D models with shell elements.
2.The principal stresses are reordered from the conventional order where z is the surface normal stress
(should be 0) and 1 and 2 are ordered in magnitude. 1 is the largest in-plane principal (in absolute
value) and 2 is therefore the other in-plane stress.
3.The biaxiality ratio is calculated for every location at every time point: ae = 2/1. The angle, p, that
1 makes with the local x-axis is also retained for each location at every time point.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description294
Main Index
4.The surface stress state is therefore described completely by 1, ae and the angle, p.
5.ae and the angle, p, get a bit unstable when the stresses are small, so when we calculate statistics of
these parameters a gate is applied to filter out these small stresses.
It is obvious that the biaxiality ratio, ae, can take on any number between -1 and +1. There are two reasons
that we are interested in biaxiality.
1.One is that we need to know what the biaxiality is to calculate the stress-strain response correctly.
2.The other is that it affects the type and severity of fatigue damage.
When the biaxiality analysis is negative (as indicated by the Mohr&amp;rsquo;s circles of stress), the maximum shear plane
where cracks tend to initiate is oriented as shown in the diagram ( Figure 12-4). In the early stages of crack
initiation type A cracks grow mainly along the surface in Mode 2 (shear) before transition to Mode 1, normal
to the maximum principal stress.
When the biaxiality is positive however, the cracks tend to be driven more through the thickness. These are
therefore more damaging for the same levels of shear strain. Uniaxial loading is a special case.
Figure 12-4  Biaxiality Ratio Diagram
What is Multia xial Loading?
This table below describes what is meant by Proportional Loading , and  Non-proportional Loading .
“Loading” in this case means the local stress state variations, not the global loading environment. Fortunately
we very often find that although the global loading environment has a complex set of out-of-phase loads, the&lt;/p&gt;
&lt;p&gt;295 CHAPTER 12
A Multiaxial Assessment
Main Index
local stress-state variations in the critical locations are much simpler. This is often dictated by geometry - for
instance the stress state at the edge of a thin metal sheet will always be uniaxial.
Standard Multiaxial Assessment
This method is a more recent development that provides a more robust measure of the biaxiality and non-
proportionality of the local loading (stress state). Visualize the stress history as a cloud of data in which every
point in the stress history is represented by a point on a 3-D scatter plot of xx vs yy vs xy. See Figure 12-5.
By analyzing the shape and orientation of this data cloud, we can obtain numerical measures of the biaxiality
and non-proportionality of the loading.
Figure 12-5  3-D data cloud and Analysis for Standard Multiaxial Assessment. Each point represents a point
in the loading history.
The calculation procedure is as follows:
1.Determine the position of the center of gravity of the data cloud.
2.Determine the principal moments of inertia of the data cloud about the center of gravity I1  I2  I3.
3.Find the vector MINAX corresponding to the principal axis with the minimum moment of inertia I3.
4.Find the point with the largest distance STRMAX from the center of gravity of the cloud.p ae Rarity/Difficulty
Uniaxialconstant 0 Most common and easily dealt
with. Only one principal stress
exists, which is 1. Standard
methods are OK.
Proportiona l Loadingconstant Less common but easily dealt with
by knowing ae to correct from a
uniaxial case.
Non-propo rtional Loading may vary may vary Most rare and tricky to deal with.1– ae1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description296
Main Index
5.Find the offset D of MINAX from the origin.
Essentially, a 3-D linear regression analysis is performed on the data cloud. If the cloud of data correlates
closely with a straight line through the origin, the loading is proportional. The larger the aspect ratio of the
cloud and/or its offset from the origin, the more non-proportional the loading. The orientation of the vector
MINAX tells us the average biaxiality. So the calculation proceeds as follows:
6.Define the cloud aspect ratio:
7.Define the cloud offset factor:
8.Then we define a non-proportionality factor:
9.The three components ( xx, yy, xy) of the vector MINAX define a 2-D stress tensor ij from which
are obtained the two principal stresses 1 and 2 where |1| |2|. The mean biaxiality again, is then
calculated from:
10. At the same time, the orientation of the plane corresponding to MINAX is determined, i.e., the
orientation of 1 from the previous step. This gives the Dominant Stress Direction, which will
correspond to the most likely critical plane orientation.
The mean biaxiality and non-proportionality factors are reported in the analysis results, together with the
Dominant Stress Direction .
Automatic Multiaxial Approach
Auto mode uses a two-pass approach, which overrides the stress combination method setting (COMB on
FTGPARM  entry). When Auto is selected, four (six for -N analysis) additional properties must be set (see
Table 12-2):
1.In the first pass, the combination method is set to Abs Maximum Principal (the Normal  method) and
a Standard assessment is carried out.
2.A second pass using a different stress combination method may be carried out if the value of
STRMAX (see the section describing the Standard Assessment Method) exceeds the percentage of the
material strength (UTS) defined by Zero Damage Stress Percent AND IF the non-proportionality
and/or biaxiality values lie outside the ranges defined for the Normal method by the relevant
threshold values. The Auto mode is summarized in Figure 12-6.ASPECTI3
I1&amp;mdash;-=
OFFSETD
2xSTRMAX&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
NONPROP ASPECTOFFSET2+ =
ae2
1&amp;mdash;&amp;mdash;=&lt;/p&gt;
&lt;p&gt;297 CHAPTER 12
A Multiaxial Assessment
Main Index
Table 12-2  Additional Properties Associated with Auto Mode
Figure 12-6  Application of thresholds in the Auto multiaxial option
The Absolute Maximum Principal and Critical Plane stress combination methods have already been defined.
The other possible option is the T wo Plane option. This is similar to the Critical Plane method except that
calculations are made on two planes only - in the Dominant Stress Direction and at 90 degrees to the
Dominant Stress Direction.
The results reported for Auto mode are as for Standard, with the addition of the Calculation Method
(Normal, Critical Plane, T wo Plane).
S-N versus e-N
For a standard -N fatigue analysis, the basic principles of the Simple and Standard methods are the same as
for S-N fatigue analysis. The only difference in implementation is that the full strain tensor histories must
first be converted to stresses (using an elastic assumption) before the assessment can take place .Property Default Settings
Zero Damage Stress Percent 10
Lower Non-Proportional Factor Threshold 0.25
Upper Non-Proportional Factor Threshold  ( -N only) 0.5
Lower Biaxiality Threshold -0.6
Mid Biaxiality Threshold ( -N only) 0.25
Upper Biaxiality Threshold 0.6&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup298
Main Index
For the Automatic mode, note the differences in the stress combination methods used based on the calculated
biaxiality ratio and proportionality factor in Table 12-3 and Table 12-4.
Table 12-3  Auto Stress Combination for S-N Analysis based on ae and Proportionality
Table 12-4  Auto Stress Combination for -N Analysis based on ae and Proportionality
Note on Duty Cycle Processing
When a duty cycle is being processed, the biaxiality parameters are calculated for the individual unique events
that make up the duty cycle, as well as for the duty cycle as a whole. The statistics for the duty cycle as a whole
take into account the number of repeats of each event.
Fatigue Setup
Below is the pertinent portion of the input deck for this SAE Shaft example in sae_shaft_multiax_simple.dat .
The problem is a linear static analysis with two subcases. Each section of the input is discussed below.
SOL 101
CEND
$Proportionality Factor (PF)
0.0  PF  0.25 0.25  PF
Biaxiality
Ratio-1.0  ae  -0.6 Critical plane in 2
directions - dominant
and at 90 degrees to
dominantCritical plane 10 degree
intervals
-0.6  ae  0.6 Original calculation
OK (Absolute
Maximum Principal)
0.6  ae  1.0 Critical plane 10 degree
intervals
Proportionality Factor (PF)
0.0  PF  0.25 0.25  PF  0.5 0.5  PF
Biaxiality
Ratio-1.0  ae  -0.6 Critical plane in 2 directions - dominant and at
90 degrees to dominantCritical plane 10 degree
intervals - Issue warning
-0.6  ae  0.25 Original calculation
OK (Absolute
Maximum Principal)Critical plane in
dominant direction
0.25  ae  0.6 Signed T resca TBCPS * dominant
direction only
*TBCPS = Type B Critical Plane ShearTBCPS 10 degree
intervals - Issue warning
0.6  ae  1.0 TBCPS 10 degree intervals&lt;/p&gt;
&lt;p&gt;299 CHAPTER 12
A Multiaxial Assessment
Main Index
TITLE = SAE Shaft - Multiaxial Example
$
FATIGUE(FORMAT=64) = 42
$
SUBCASE 1
SUBTITLE=VERTICAL Z LOAD
&amp;hellip;
SUBCASE 2
SUBTITLE=X MOMENT
&amp;hellip;
BEGIN BULK
$
$  Fatigue Parameters
$
INCLUDE &amp;rsquo;notch_right.inc&amp;rsquo;
INCLUDE &amp;rsquo;notch_left.inc&amp;rsquo;
FTGDEF  42
ELSET   201     2       301     2
PFTG    2     &lt;br&gt;
$
FTGPARM 42      SN      1.64    1       0
STRESS  ABSMAXPR GOODMAN        NODE             SGAGE
MULTI   SIMPLE
DTI     UNITS   1                                       MPA
$
MATFTG  1       1.0
STATIC          621.    99              -1.     0.1
SN      2818.   -0.1339 1.E6    0.      1.E30
$
FTGSEQ  42
20
FTGEVNT 20      30      40
FTGLOAD 30      101     1       1000.   1               DAC
UDNAME  101
shaft01.dac
FTGLOAD 40      102     2       1000.   1               DAC
UDNAME  102
shaft02.dac
$
$  &amp;hellip; Model Data (not shown)
$
ENDDATA
Case Control
The case control is identical to previous examples in that the FATIGUE  output request is made. The
FORMAT=64 specifies that a .csv  file of fatigue results output also be created. The FATIGUE  ID (or FID) is
42, meaning that the corresponding FTGDEF , FTGPARM , and, FTGSEQ  bulk data entries of the same ID are called
out to define the fatigue problem.
FATIGUE(FORMAT=64) = 42
$
SUBCASE 1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup300
Main Index
$ Subcase name : VERTICAL Z LOAD
SUBTITLE=VERTICAL Z LOAD
SPC = 2
LOAD = 4
SUBCASE 2
$ Subcase name : X MOMENT
SUBTITLE=X MOMENT
SPC = 2
LOAD = 2
SUBCASE 1 is the vertical (bending) load and SUBCASE 2 is the twisting (torque) load.
Fatigue Definitions/Properties
INCLUDE &amp;rsquo;notch_right.inc&amp;rsquo;
INCLUDE &amp;rsquo;notch_left.inc&amp;rsquo;
FTGDEF  42
ELSET   201      2       301     2
PFTG    2    &lt;br&gt;
The two include files referenced contain SET1 entries of IDs 201 and 301 , each defining a list of elements.
The listed elements make up the two notched sections of the SAE Shaft and the fatigue analysis and multiaxial
assessment will only be carried out on these elements of interest.
The FATIGUE  case control (FID= 42) calls out and activates the FTGDEF  entry of corresponding ID 42.
The ELSET line of the FTGDEF  entry associates the element lists to the fatigue job (FID= 42). Also the element
lists are associated to corresponding fatigue element properties ( PFTG entry). In this example all element
properties are default values . Since fatigue cracks generally only initiate at the surface, we only care about the
results at the surface.
Fatigue Parameters
FTGPARM 42      SN      1.64
STRESS  ABSMAXPR GOODMAN        NODE             SGAGE
MULTI   SIMPLE
DTI     UNITS   1                                       MPA
The FATIGUE  case control (FID= 42) also calls out and activates the FTGPARM  entry of corresponding ID 42.
By inspecting the fields of the FTGPARM  entry, the following is noted:
TYPE = SN - a standard S-N fatigue analysis is called out
FACTOR=1.64 - an overall scale factor of 1.64 is to be applied to the resulting stress time history
values
COMB=ABSMAXPR - the stress parameter to use in the fatigue analysis is the absolute maximum
principal
CORR=GOODMAN - a mean stress correction based on the Goodman technique is to be applied
LOC=NODE - fatigue results are requested and the element nodes&lt;/p&gt;
&lt;p&gt;301 CHAPTER 12
A Multiaxial Assessment
Main Index
RECOVER=SGAGE - element stresses are recovered/resolved to the nodes based on the strain gage
recovery method
MMTHD=SIMPLE - a simple biaxial analysis is requested
Note also that by using the DTI,UNITS  entry, the stresses from the analysis are designated as stress units of Mega
Pascals (MPa).
This example actually contains three i nput decks: sae_shaft_multiax_simple.dat , sae_shaft_multiax_stnd.dat ,
sae_shaft_multiax_auto.dat . There is only one difference between these two d ecks and it is with the FTGPARM&lt;br&gt;
entry on the MULTI line. The difference is that MMTHD is changed between the three d ecks as shown here:
sae_shaft_multiax_simple.dat : invokes the simple multiaxial option
FTGPARM 42      SN      1.64    1       0       1
STRESS  ABSMAXPR GOODMAN        NODE            SGAGE
MULTI   SIMPLE
sae_shaft_multiax_stnd.dat : invokes the standard multiaxial assessment
FTGPARM 42      SN      1.64    1       0       1
STRESS  ABSMAXPR GOODMAN        NODE            SGAGE
M ULTI   STANDARD
sae_shaft_multiax_auto.dat : invokes the automatic multiaxial assessment
FTGPARM 42      SN      1.64    1       0       1
STRESS  ABSMAXPR GOODMAN        NODE            SGAGE
MULTI   AUTO
All the defaults for the biaxiality and proportionality thresholds are used and not changed on the MULTI
line. Also note that the LAYER field of the FTGPARM  is set to 1, requesting that a fatigue analysis results are
only to be reported in the MSC Nastran output file for the top (Z2 layer) of the shell elements.
Cyclic Material Properties
MATFTG  1       1.0
STATIC          621.    99              -1.     0.1
SN      2818.   -0.1339 1.E6    0.      1.E30
The cyclic material properties (the S-N curve) are defined on the MATFTG  entry exactly as explained in
previous examples. Please refer to previous chapters for explanations of this data. Note that a corresponding
MAT1 entry of ID= 1 must exist in order for these fatigue material properties to be associated to the elements
that use MAT1 of ID= 1. Defining a MATFTG  without a corresponding MAT1 will results in failed fatigue
analysis.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup302
Main Index
Cyclic Loading
FTGSEQ  42
20
FTGEVNT 20      30      40
FTGLOAD 30      101     1       1000.   1.0             DAC
UDNAME  101
shaft01.dac
FTGLOAD 40      102     2       1000.   1.0             DAC
UDNAME  102
shaft02.dac
The FATIGUE  case control (FID= 42) also calls out and activates the FTGSEQ  entry of corresponding ID 42.
The cyclic loading definition shown here follows the same logic as discussed in previous examples.  Please
refer to previous chapters for more detailed explanation. Simple speaking, the loading and stress state from
SUBCASE 1 are associated to cyclic loading variations defined via the FTGLOAD  of ID 30, and that from
SUBCASE 2, via FTGLOAD  of ID 40. Each FTGLOAD  entry defines the cyclic loading by referencing a table or
external file containing the cyclic loading definition.
Note that the LDM field is set to 1000. and the SCALE fields are set to 1.0 on the FTGLOAD  entries. This has
the effect of dividing the combination stress for each subcase by 1000. Also the TYPE field is set to DAC,
meaning that DAC formatted files are expected to be supplied in the UDNAME  entry as the external cyclic
loading definition files.
The two loads are combined together via the FTGEVNT  entry forming a combined fatigue load event. All load
events are called out by the FTGSEQ  entry. In this case there is only one fatigue load event in the load sequence.
The loads are combined using the principle of linear superposition as explained in previous examples.&lt;/p&gt;
&lt;p&gt;303 CHAPTER 12
A Multiaxial Assessment
Main Index
Fatigue Results
Results output from each of the input decks of this example is shown below for the critical element of the
SAE Shaft model.
Simple Biaxial Analysis Results:
Note the critical element is 51186. The mean biaxiality ratio is well within the upper and lower thresholds
however the angle spread does about an 80 degree variation. So although the first principal directions is
generally always much larger in proportion to the other principal direction, the first principal direction is
moving. It is probably appropriate to do further assessment by using one of the other methods to better
understand whether the loading is proportional or non-proportional in this particular case. If only evaluating
the mean biaxiality ratio, one might come to the incorrect conclusion that uniaxial assumptions are OK for
this model at the critical location.
Standard Multiaxial Assessment Results:
The standard method predicts the same element as the critical location and provides us with a proportionality
factor. The mean biaxiality ratios are approximately the same as with the simple method. The non-
proportionality factors are around 0.55, well above the default threshold suggesting that a critical plane
analysis be done or possibly some other calculation method to account for non-proportional loading state.                                * * *  C R I T I C A L  F A T I G U E   R E S P O N S E  * * *                          OPTION =NODE
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
51186    50988  Z2    0.1008E+04   3.00   0.1008E+04   3.00   0.9921E-03  -3.00   0.5289E+03  -0.1155E+03                &lt;br&gt;
EVENT ID  ALL EVENTS  FATIGUE ID      42
B I A X I A L/M U L T I A X I A L  A S S E S S M E N T  I N  Q U A D 4   E L E M E N T S   MMTHD=SIMPLE   OPTION=NODE
ELEMENT    GRID  LAYER   BIAXIAL    BIAXIAL RATIO     ANGLE     MOST POPULAR        BIAXIALITY   MAXIMUM ABS
ID      ID         RATIO(MEAN) STD DEVIATION     SPREAD        ANGLE             GATE      PRINCIPAL STRESS
51186    50986  Z2     1.342E-01    9.893E-02      77.33           -90.00          1.242E+02    7.467E+02
51092  Z2     1.297E-01    9.887E-02      77.33           -89.00          1.242E+02    7.290E+02
51094  Z2     1.353E-01    9.992E-02      77.33           -89.33          1.242E+02    7.313E+02
50988  Z2     1.397E-01    1.003E-01      80.33           -90.00          1.242E+02    7.491E+02
* * *  C R I T I C A L  F A T I G U E   R E S P O N S E  * * *                          OPTION =NODE
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
51186    50988  Z2    0.1008E+04   3.00   0.1008E+04   3.00   0.9921E-03  -3.00   0.5289E+03  -0.1155E+03                &lt;br&gt;
EVENT ID  ALL EVENTS  FATIGUE ID      42
B I A X I A L/M U L T I A X I A L  A S S E S S M E N T  I N  Q U A D 4   E L E M E N T S   MMTHD=STANDARD OPTION=NODE
ELEMENT    GRID  LAYER   BIAXIAL    NON             DOMINANT
ID      ID         RATIO(MEAN) PROPORTIONALITY STRESS DIR
51186    50986  Z2     1.427E-01    5.445E-01      77.67
51092  Z2     1.739E-01    5.613E-01      83.63
51094  Z2     1.797E-01    5.624E-01      83.40
50988  Z2     1.470E-01    5.454E-01      77.38&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup304
Main Index
Automatic Multiaxial Option Results:
With the automatic method, the stress combination set on the FTGPARM entry is overridden when doing
the fatigue analysis based on the biaxial ratio and the non-proportional factor determined during the
multiaxial assessment. In this case you can see that a different critical element was determined based on this.
To see which actual stress combination method was used for a particular element, please inspect the .csv file
produced by setting FORMAT=64 on the FATIGUE case control. Below shows an excerpt from the output
from sae_shaft_multiax_auto_SN_42.csv  of one of the nodes of element 51081, produced by the analysis,
showing that it did a critical plane analysis every 10 degrees for this element’s node.
Note: Regarding critical plane output in the F06 file. When a critical plane analysis is performed, each entity
is analyzed at 10 degree increments. The output in the F06 file is a summary of the results for each
entity and not for each angle computed. For each entity the more damaged angle is reported. If more
than one angle has the same maximum damage (especially in the cases of infinite life or static failure),
the first angle encountered is the reported critical angle. The maximum and minimum stresses
reported, however, may not correspond to this angle. The maximum and minimum stresses are the
maximum and minimum determined from all angles of any particular entity and reported along with the
maximum damage and corresponding angle as part of the summary for that entity. The user may
request a CSV output file or query the results via a postprocessor such as Patran to determine with
which angle the maximum and minimum stresses are actually associated.                                 * * *  C R I T I C A L  F A T I G U E   R E S P O N S E  * * *                          OPTION =NODE
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
51081    50988  Z2    0.1189E+04   3.08   0.1189E+04   3.08   0.8414E-03  -3.07   0.5302E+03  -0.5623E+02                &lt;br&gt;
EVENT ID  ALL EVENTS  FATIGUE ID      42
B I A X I A L/M U L T I A X I A L  A S S E S S M E N T  I N  Q U A D 4   E L E M E N T S   MMTHD=AUTO     OPTION=NODE
ELEMENT    GRID  LAYER   BIAXIAL    NON             DOMINANT     PLANE
ID      ID         RATIO(MEAN) PROPORTIONALITY STRESS DIR   ANGLE
51081    50880  Z2     1.369E-01    5.502E-01      77.16      90.00
50986  Z2     1.762E-01    5.551E-01      83.76      90.00
50988  Z2     1.829E-01    5.563E-01      83.79      90.00
50882  Z2     1.428E-01    5.514E-01      77.06      90.00
,        ,      ,         ,    ,   Mean,   Non-  , Dominant,
,        , Shell, Matrl,       ,   Biax,   Propor, Stress,    Calculation,    Plane, Max,    Min,
Node, Element, Layer, Group, Damage,   Ratio,  Factor, Direction, Method,         Angle, Stress, Stress, Life
50988, 51081,  Top,   Mat1,  0,        0.1829, 0.5563, 83.79,     Critical Plane,   0,   103.4,  -11.28, 1E30
50988, 51081,  Top,   Mat1,  0,        0.1829, 0.5563, 83.79,     Critical Plane,  10,   127.3,  -68.96, 1E30
50988, 51081,  Top,   Mat1,  0,        0.1829, 0.5563, 83.79,     Critical Plane,  20,   199.5,  -135.5, 1E30
50988, 51081,  Top,   Mat1,  2.085E-6, 0.1829, 0.5563, 83.79,     Critical Plane,  30,   271.3,  -182.8, 4.795E5
50988, 51081,  Top,   Mat1,  1.264E-5, 0.1829, 0.5563, 83.79,     Critical Plane,  40,   334.3,  -205.1, 7.912E4
50988, 51081,  Top,   Mat1,  4.242E-5, 0.1829, 0.5563, 83.79,     Critical Plane,  50,   382.5,  -199.9, 2.358E4
50988, 51081,  Top,   Mat1,  1.27E-4,  0.1829, 0.5563, 83.79,     Critical Plane,  60,   430.2,  -167.7, 7875
50988, 51081,  Top,   Mat1,  3.098E-4, 0.1829, 0.5563, 83.79,     Critical Plane,  70,   478.5,  -114.5, 3228
50988, 51081,  Top,   Mat1,  5.843E-4, 0.1829, 0.5563, 83.79,     Critical Plane,  80,   514.2,  -45.73, 1711
50988, 51081,  Top,   Mat1,  8.414E-4, 0.1829, 0.5563, 83.79,     Critical Plane,  90,   530.2,  -56.23, 1189
50988, 51081,  Top,   Mat1,  8.049E-4, 0.1829, 0.5563, 83.79,     Critical Plane, 100,   529.2,  -79.85, 1242
50988, 51081,  Top,   Mat1,  4.986E-4, 0.1829, 0.5563, 83.79,     Critical Plane, 110,   502.7,  -99.67, 2006
50988, 51081,  Top,   Mat1,  2.101E-4, 0.1829, 0.5563, 83.79,     Critical Plane, 120,   455.9,  -111.4, 4759
50988, 51081,  Top,   Mat1,  6.498E-5, 0.1829, 0.5563, 83.79,     Critical Plane, 130,   416.1,  -113.6, 1.539E4
50988, 51081,  Top,   Mat1,  1.4E-5,   0.1829, 0.5563, 83.79,     Critical Plane, 140,   356.8,  -106.1, 7.141E4
50988, 51081,  Top,   Mat1,  1.494E-6, 0.1829, 0.5563, 83.79,     Critical Plane, 150,   296.1,  -96.26, 6.693E5
50988, 51081,  Top,   Mat1,  0,        0.1829, 0.5563, 83.79,     Critical Plane, 160,   219.3,  -71.95, 1E30
50988, 51081,  Top,   Mat1,  0,        0.1829, 0.5563, 83.79,     Critical Plane, 170,   139.7,  -39.11, 1E30&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P17</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_017/</guid>
      <description>
        
        
        &lt;p&gt;305 CHAPTER 12
A Multiaxial Assessment
Main Index
Surface R esolved Stresses
The model used in this example has a layer of thin shell elements surrounding the solid elements. This is to
ensure a 2D state of stress at the surface of the shaft. These surface resolved stresses are needed in order to
properly conduct a multiaxial/biaxial stress assessment. Thus, fatigue and stress state assessment results are
only requested on these surface elements.
MSC Nastran (  2016) has the capability to automatically skin the outside of a specified set of solid elements
as designated on the FTGDEF  entry by placing a YES in the SRESOLVE field of the FTGPARM  entry. This feature
is convenient in that it makes it unnecessary to include any skinned (thin shell) elements around the solid
elements of the model in order to ensure the 2D state of stress at the surface. T wo additional input files are
included with this example to illustrate this. Inspect the difference between sae_shaft_skinned.dat and
sae_shaft_resolved.dat .
The former has both the solid and the skinned shell elements included. The latter has no shell elements
included in the model. The other major difference is simply the presence of YES in the SRESOLVE field of
the FTGPARM  entry as shown here.
FTGPARM 42      SN      1.64
STRESS  ABSMAXPR GOODMAN        NODE            SGAGE   YES
MULTI   SIMPLE
The latter input file causes MSC Nastran to automatically create thin shell elements on the free surface of
the solid elements. Only those solid elements defined by the FTGDEF  entry are skinned and only those
elements produce results. The original solid elements of the FTGDEF  entry are ignored in the analysis because
it is assumed by the SRESOLVE field that only surface resolved stresses are to be used in the fatigue analysis.
Also see knuckleMA.dat . This model also uses the skinning feature via SRESOLVE=YES, but is also a good
example of a complicated part with complicated loading (12 load cases) where a multiaxial assessment is
performed to ensure that at the critical locations, a fairly uniaxial state of stress is present. Thus, although the
model and loading are complex, the fatigue analysis is valid because the stress state basically remains uniaxial
at the critical location and no account for proportional or non-proportional loads needs to be considered.
Note: When using SRESOLVE with 3D elements, MSC Nastran internally generates the thin shell elements on
the free surfaces of the 3D elements and automatically assigns them element IDs based on the setting
of SYSTEM(183) cell, which by default is 200,000,000. Set this SYSTEM(183) cell to something else on
the NASTRAN line if you wish a different starting ID, e.g.:
NASTRAN SYSTEM(183)=5001&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks306
Main Index
Grid Poi nt Stresses and Surface Resolved Stresses
When using LOC=NODA (grid point stresses) and surface resolved stresses (SRESOLVE=YES), please be
aware of the following. Also a good understanding of how grid point stresses are calculated is essential. See
Element Nodal vs. Nodal Averaged Stresses, 84  and Grid Point Stresses  (p.363) in the MSC Nastran Linear Static
Analysis User’s Guide .
1.For any one particular fatigue analysis or FATIGUE ID (FID), you can only define one surface
(and/or volume). That surface and/or volume is defined by the elements in the FTGDEF entry.
2.If you want more than one surface (or volume) you must use multiple FIDs referencing different
FTGDEF entries (or run separate MSC Nastran decks).
3.Areas of the model with severe discontinuities should use separate surfaces. As an example, a cylinder
and its ends. The cylinder can be one surface but the ends should be a different surface.
4.When using the critical plane method, you should use the default coordinate (basic) system or a user
specified coordinate system. It is not recommended to use the element coordinate system unless you
have very similarly oriented elements since the result from each element remain in the element
coordinate system without modification when being averaged. This likely will cause improper stresses
to be calculated if the element coordinate systems are all different relative to each other either because
of connectivity or geometric issues. The angles (and critical angle) reported are relative to the X-axis
of the specified coordinate (OUTPUT on NAVG line on FTGPARM  entry) projected onto the surface
of the elements. Theta = 0 is the projected X-axis.
5.When using LOC=NODA and specifying a user defined CID, the X axis of that CID is the axis
project onto the surface. NEF does not give control over this, so the only control is by creating the
CID the way it needs to be.
6.If using LOC=NODA in conjunction with SRESOLVE=YES (surface resolved stresses), you also do
not have direct control over the surface created because the shell elements are automatically generated
for you and you do not know their element IDs before hand. You will get a surface defined by the
free surfaces of the elements in the FTGDEF entry. You can try to use multiple FIDs referencing only
the solid elements of interest making up the surfaces of interest.&lt;br&gt;
Concluding Remarks
•Standard fatigue analysis for both the S-N (including fatigue analysis of seam welds) and -N
method assumes uniaxial stress states (the maximum principal stress is always much larger than
the other principal stresses and stationary, i.e., always in the same direction).
•If there is any question of the validity of a fatigue analysis due to the possible non-proportionality
of the load state, a biaxiality analysis and/or multiaxial assessment should be done.
•Multiaxial assessments are not applicable if fatigue analysis of spot welds.
•Multiaxial assessment when also doing factor of safety calculations is limited to only the simple
biaxiality analysis method
•If the biaxiality ratio (mean) is within the upper and lower thresholds, generally a uniaxial stress
state can be assumed but,&lt;/p&gt;
&lt;p&gt;307 CHAPTER 12
A Multiaxial Assessment
Main Index
•The stationarity of the loading is evaluated by the non-proportionality factor
•If the non-proportionality factor is outside the default thresholds, the loading may be non-
proportional (not stationary )
•The automatic method may be used to override the stress combination method to use more
appropriate stress combination methods to correct the damage calculation due to non-
proportional loading states
•Further corrections may be needed for a multiaxial stress state such as the Dang Van method for
providing safety factor calculations in the endurance regime (large number of cycles to failure) or
through the use of a multiaxial plasticity, notch correction, rainflow, and damage models
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
Start Patran and open a new Patran database and call it sae_shaft . Use the Analysis  application to
import the first input deck associated with this example: sae_shaft_multiax_simple.dat  (Action =Read
Input File ). Make sure the Analysis Preference  is set to MSC.Nastran.
Step 2: Check the Model
Go to the Loads/BCs  application. Plot the LBC markers ( Action =Plot Markers ). Make sure the
Current Load Case  is set to one of the imported load case ( VERTICAL_Z_LOAD.SC1,
X_MOMENT.SC2 ). Select all the LBCs and press the Apply  button. Do it for the both load cases.
Go to the Materials  application ( Properties  tab, Isotropic  button group in skin mode). Set the
Action  to Modify  and select the only available material. Note the values in the Linear Elastic&lt;br&gt;
constitutive model. If there is no current Stress-Life (SN)  constitutive model, create one. If there is,
verify the following parameters, which are written to the MATFTG  entry. Any values not shown should
be left as defaults or blank.
Parameter Value
Constitutive Model: Stress-Life (SN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Ultimate Tensile Stress 621.0
R-Ratio -1.0
Standard Error of Log(N) 0.1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup308
Main Index
Go to the Element Properties  application. Set the Action  to Modify . Select the property of interest
for our fatigue analysis: shells. All fatigue element properties are defined here. Make sure the following
are set below. Only the fatigue property values are shown in the table. If not shown they can be left
as defaults or blank. Values for the fatigue properties, are placed on the PFTG entry. All other pertinent
properties are part of the PSHELL entry and related elements for this model.
Only the outer skin of shell elements are being analyzed for fatigue life. The solid elements are not of
interest. The skin of shell elements is necessary to resolve the stresses to the surface such that we can
retrieve the in-plane principals (with the out-of-plane principal being zero) for a proper biaxiality
analysis and multiaxial assessment.
Step 3: Check the Fatigue Parameters
Go to the Analysis  application ( Action  = Analyze ). Since we read the existing job
sae_shaft_multiax_simple.dat , a job by the name of sae_shaft_multiax_simple  has been created. Click
on it to restore all its settings. Open the Solution Type&amp;hellip;  form and then open the Solution
Parameters&amp;hellip; form. From here you can check the Fatigue Parameters&amp;hellip;  Open this form and ensure
the following parameters are set, which are written to the FTGPARM  entry. If a parameter is not
mentioned below, use the default value or leave it blank. Close all the forms when done using the OK
buttons.Stress Range Intercept 2818.0
1st Strength Exponent -0.1339
T ransition Point 1E6
2nd Strength Exponent 0.
Fatigue Cutoff 1E30
Parameter Value
[Layer] T op
[Surface Finish] None
[Scale Factor ] 1.0
[Offset] 0.0
Parameter Value
General Parameters:
Stress Units: MPa
Stress Combination: Abs. Max. Principal
Results Location: Element Nodal
Recovery: Gage
Stress-Life (S-N):Parameter Value&lt;/p&gt;
&lt;p&gt;309 CHAPTER 12
A Multiaxial Assessment
Main Index
The above settings ensure that a Simple biaxiality analysis is done (and an SN analysis with Goodman
mean stress correction ; stresses are recovered using the SGAGE technique).
As explained previously in this Chapter, although it is necessary to use surface resolved stresses (2D
stress state) to do biaxial/multiaxial assessment, this is accomplished because this model contains this
shell element on the outer surface of the solid elements. Were this not the case, then turning on the
Surface Resolved Stresses  toggle would be required in order to accomplish this .
Also, in order to post-process the fatigue results in Patran, make sure that the results are written to
an HDF5 file. This is done in the Solution Parameters&amp;hellip; form by opening the Results Output
Format&amp;hellip; form and turning ON the HDF5  toggle.
Step 4: Check the Output Requests
Still in the Analysis  application, click on the Subcases&amp;hellip;  form. Our subcase is called:
VERTICAL_Z_LOAD.SC1 . Click on the it from the Available Subcases  list box to access all its
settings. Then open the Output Requests&amp;hellip;  form. Set this form to the advanced setting ( Form Type: ).
If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the required FTGDEF  bulk data entry.
Set the Type of include data to Group and from the Select Group(s)  list box, select the two groups
set1_201 , and set1_301 . These sets contain the skinned shell elements of only the elements around
each notch, as this is where fatigue failure is going to occur. Press the Apply  button on the Subcases&amp;hellip;&lt;br&gt;
form to save the new output request settings.
One last note about output requests. Fatigue life output requests are subcase independent unlike
most standard output requests such as stress and displacement. If you are using multiple subcases, the
first subcase selected (see the next step) must have the Fatigue Life  output request in it. Thus, it is not
necessary in this example to open each subcase and ensure that FATIGUE is set as an output request.
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes to this subcase.Run SN Analysis T urn this ON
Mean Stress Correction: Goodman
Bi/Multi-axial Assessment:
Run Biaxial/Multiaxial
AssessmentT urn this ON
Method: Simple
Surface Resolved Stresses: Leave this OFFParameter Value&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup310
Main Index
Step 5: Check the Cyclic Load Definition
Next open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). Our subcase should be
the only one present in the bottom list box. Now open the Define Fatigue Load Sequences&amp;hellip;  form.
On this form ensure that the loading association is set up properly. For the loading in this example,
we want to associate the subcases to each cyclic definition contained in external DAC formatted files.
Fill out the spreadsheet as shown here if not already filled out.
On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined. To create these from scratch, remove all the existing load sequences using the right mouse
button by clicking on Load Sequences  and select Remove All  Sequences . The follow these instructions:
Use the right mouse button to click on the Load Sequences  and Add a New Sequence . Then right
mouse button click on the new sequence and Add Event . Select the Event_1 . The load sequence has
now been defined.
You can rename the load sequence by right mouse clicking on the load sequence you created and select
Edit Sequence&amp;hellip; . The event can be renamed by changing the Event Name databox under the
spreadsheet.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD  entries. You can close the Load Sequence  form
using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set Action =Access Results , Object =Attach MASTER , and Method =Result Entities .
Select the sae_shaft_multiax_simple.MASTER  file and press the Apply  button. Subcase Time History Load Magnitude Scale Factor Offset
VERTICAL_Z_LOAD.SC1 shaft01.dac 1.0 1.0 0.0
X_MOMENT.SC2 shaft02.dac 1.0 1.0 0.0&lt;/p&gt;
&lt;p&gt;311 CHAPTER 12
A Multiaxial Assessment
Main Index
Go to the Results  application and view the results by selecting various result types as summarized
below  for the fatigue results case :
Biaxiality Analysis Result
Biaxial Ratio, Mean
The mean biaxial ratio, a= 2/1, shows values between 0.14 and -0.981. A purely uniaxial state
would be a=0 as there would be only one principal stress. Thus from this parameter alone, one can
deduce that there is some sort of multiaxial state.
Biaxial Ratio, Std Dev
The standard deviation of the biaxiality ratio provides a measure of the variability of the biaxiality
ratio, or in other words, is the loading proportional or not? Values close to zero (0) denote
proportional loading. Proportional loading means the magnitudes of the principal stresses ( 1 and
2) vary proportionally to one another. This plot shows some relatively high values in the notched
are, the area of interest, again indicating a possible non-proportional loading situation.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup312
Main Index
Angle Spread
This gives an indication of the mobility of the absolute maximum principal stress range ( p =0-180
degrees). 45 degrees or so is not unusual; but movements around 90 degrees or more is either an
indication of non-proportionality or may occur when there is pure shear (when stresses “flip”
through 90 degrees).  The angle spread in this problem is showning close to 90 degrees.
Most Popular Angle
Stress, Max Absolute Principal
Biaxial Gate
These simply show the dominant angle that 1 takes on through out the stress history, the
maximum value of the principal 1 through out the stress history, and the stress gate used to filter
out small stresses so as not to adversely affect the biaxiality ratio calculations. The gate is a single
number for all locations and is generally a percentage of the UTS.Biaxiality Analysis Result&lt;/p&gt;
&lt;p&gt;313 CHAPTER 12
A Multiaxial Assessment
Main Index
Step 8: Run other Fatigue Jobs
To run the other jobs from this Chapter, import each input deck into a new empty database and
repeat the steps here making modifications as necessary and shown below for each different input
deck. The table below lists the modifications necessary for each with the first as the baseline :Multiaxial Assessment Result
Non-proportionality
The additional bit of information that is gained by using the other two methods is the non-
proportionality factor: the closer to zero (0), the more proportional the loading.
Input Deck Modification
sae_shaft_multiax_simple.dat Baseline - no modifications necessary
sae_shaft_multiax_stnd.dat Under the Fatigue Parameters  form for Bi/Multiaxial
Assessment , the Method  is set to Standard .
sae_shaft_multiax_auto.dat Under the Fatigue Parameters  form for Bi/Multiaxial
Assessment , the Method  is set to Auto, and all other parameters are
set to default for the Auto method.
sae_shaft_skinned.dat There is no difference between this input deck and the baseline
except that all the skinned elements are analyzed.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup314
Main Index
sae_shaft_resolved.dat Under the Fatigue Parameters  form for Bi/Multiaxial
Assessment , the Surface Resovled Stresses  toggle is turned ON. This
model has no skinned (shell) element present in the input deck.
Only the solid elements are selected for the fatigue and biaxial
assessment. But by turning this ON, it triggers MSC Nastran to
internally create the skinned elements. The fatigue analysis is then
performed on only the internally skinned elements.
In order to postprocess the results of this analysis, you must attach
the MASTER/DBALL file with the Method  = Both, where both
the model is imported and the results attached. This then give
access to the internally generated elements in order to plot results.
knuckleMA.dat Read in this model to Patran like all the other models and simply
investigate the model setup. This model consists of all CHEXA
and CPENTA elements. The model is include because it is a nice
real-world example of a model subjected to multiple load inputs,
yet the critical location exhibits a fairly uniaxial stress state. The
surface resolved stress option is turned ON and a biaxial analysis
is requested. Input Deck Modification
Damage
Critical LocationBiaxiality
Close to Zero!&lt;/p&gt;
&lt;p&gt;Main Index
Appendix A: Restarts
A Restart s
Overview
Automatic Restarts
Special Manual Restarts&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Overview316
Main Index
Overview
The MSC Nastran restart capability is a good way to do sensitivity or parametric studies with the MSC
Nastran Embedded Fatigue (NEF) capability quickly without having to rerun jobs and wait for the stiffness
matrix and other operations to be performed again. Once the stresses or strains in the model have been
calculated, it is easy to simply change one of the NEF related bulk data entries and rerun only fatigue analysis.
Here are some guidelines for RESTART of a NEF job if only the fatigue portion is to be affected:
The original job must be run with src=NO  and FATIGUE(STROUT=-1)  to preserve the original
MSC Nastran database and necessary data block for the RESART.
The case control must be identical between the original job and the RESTART job.
Nothing can be changed that would affect the stresses or strains from the original run, otherwise
more than just the fatigue portion must be recalculated. Only data on the following NEF related
entries may be changed:
FTGDEF &amp;amp; related SET1/SET3/SET4 &amp;amp; PFTG entries
FTGSEQ &amp;amp; related FTGEVNT/FTGLOAD/TABLFTG/TABLED1/UDNAME entries
FTGPARM  (except LOC=NODE/NODA/ELEM and STRESS vs STRAIN should remain
constant)
MATFTG
Only the executive control for RESTART, the case control, and the NEF related bulk data entries
that are changed need to be included in the RESTART input file
This is not an extensive explanation on RESTARTs. Please see Restarts  (Ch. 14) in the  for more information
on RESTARTs. Below are examples of an automatic restart and a special “manual” restart.
When postprocessing restart runs in Patran, it is suggested that you output an OP2 file using a
PARAM,POST ,1 parameter in the bulk data portion of the input deck. Then attach the OP2 file to your
Patran database rather then doing the same operation using the MASTER file. The reason for this is that
restart data gets written back into the original MASTER/DBALL files of the job that was restarted. Only the
results of the original job may be available to post processes from the original MASTER file even though all
the results from every restart may be present.
Automatic Restarts
Here is a simple example using the automatic restart capability. Portions of two input decks are shown (only
the NEF related bulk data entries are shown). The first is the cold start (original) input deck:
SOL 101
CEND
$
FATIGUE(STROUT=-1)  = 42
$
SUBCASE 1
SPC  = 2
LOAD = 6
$
BEGIN BULK&lt;/p&gt;
&lt;p&gt;317 APPENDIX A
Restarts
Main Index
$
$ Fatigue Element Set Definition
$
FTGDEF  42             211
PFTG    211            N ONE
$
$ Fatigue Parameters
$
FTGPARM 42      SN      1.0
DTI     UNITS   1                                        MPA
$
$ Fatigue Cyclic Loading
$
FTGSEQ  42
33      1.0
UNITS   1.0     Cycles
FTGEVNT 33      22
FTGLOAD 22      11      1       1.0     1.0     0.0
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
MATFTG  1
STATIC  524.6   600.0   99    &lt;br&gt;
.
.
.
$The rest of the bulk data
.
.
.
ENDDATA
The second is the restart input deck. Note that everything is included in this deck that is necessary to define
the restart. You must use an ASSIGN statement and a RESTART command in the Executive Control section
of the input deck. The ASSIGN statement specifies the MSC Nastran database from which to acquire all
necessary results  (stresses) and data blocks in order to perform the restart (this is the MASTER file created
by the original run). The case control remains the same as the original cold start run and only those entries
with changes are included in the bulk data section. In our example we are changing the analysis from an S-
N analysis to an  -N analysis and changing the material definition, so the FTGPARM and MATFTG are
included only.
RESTART
ASSIGN MASTER=’ cold_start.MASTER ’
SOL 101
CEND
$
FATIGUE = 42
$
SUBCASE 1
SPC  = 2
LOAD = 6
$
BEGIN BULK
$&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Special Manual Restarts318
Main Index
$ Fatigue Parameters
$
FTGPARM 42      EN      1.0
MATFTG  1       1
STATIC  524.6    600.0  99
EN      917.0   -0.095  -0.47   0.26    0.19    1103.0   2.0E8
ENDDATA
Special Manual Restarts
A special DMAP solution sequence (called FTGRSTRT ) has been developed to bypass all the up front
checking that occurs during an automatic restart. This solution can be used instead of an automatic restart if
the user knows that nothing has changed in the model that would change the stresses or strains, thus allowing
the restart to start up directly within the FTGSOL  solver. For very large models, this gives significantly
increased performance over automatic restarts.
Using the same example as the automatic restart above, after running the initial run with scr=NO  and
FATIGUE(STROUT=-1) , the restart run would look like this.
ASSIGN DBLOC=&amp;lsquo;cold_start.MASTER&amp;rsquo;
INIT MASTER(S)                                                             &lt;br&gt;
ACQUIRE NDDL                                                              &lt;br&gt;
DBLOCATE LOGICAL=DBLOC COPY
SOL FTGRSTRT                                                                &lt;br&gt;
CEND
$
FATIGUE = 42
$
SUBCASE 1
SPC  = 2
LOAD = 6
$
BEGIN BULK
$
$ Fatigue Parameters
$
FTGPARM 42      EN      1.0
MATFTG  1       1
STATIC  524.6    600.0  99
EN      917.0   -0.095  -0.47   0.26    0.19    1103.0   2.0E8
ENDDATA
Note: This special DMAP restart capability is only available in MSC Nastran version 2013.1&lt;/p&gt;
&lt;p&gt;Main Index
Appendix B: Superelements
B Superelement s
Overview
List Superelements
Part Superelements&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Overview320
Main Index
Overview
MSC Nastran Embedded Fatigue (NEF) can be used with standard superelement models. This appendix
shows an example for both List and Part superelements. To run these examples, the input decks are included
as part of the MSC Nastran installation. This appendix is not meant to be an exhaustive explanation of
analysis using superelements. It is meant only to show the nuances of superelement and fatigue analysis.
Please see MSC Nastran Superelements and Modules User’s Guide for details on modeling superelements.
Objective
To introduce the fatigue life prediction method using superelements
Files Required
All files necessary to run this example are found in the test problem library ( tpl/nef_ug ) directory in a
complete MSC Nastran Documentation installation.
Problem Description
The example is the double flyswatter model adapted from the MSC Nastran Superelements and Modules User’s
Guide . The model is defined with multiple superelements with SE0 as the residual structure.Table 2-1  Files Required
Files Required Description
flyswatter_no_SE.dat Example with no superelements defined
flyswatter_SEset.dat Example with List superelements defined
flyswatter_partSE.dat Example with Part superelements defined&lt;/p&gt;
&lt;p&gt;321 APPENDIX B
Superelements
Main Index
The first example deck ( flyswatter_no_SE.dat ) runs a fatigue analysis with no superelements defined. Only
the portion of the deck dealing with NEF input is shown here for reference.
SOL 101
CEND
TITLE = Flyswatter - no superelements
ECHO = NONE
FATIGUE(FORMAT=64,BULK) = 42
SUBCASE 1
$ Subcase name : Pressure Load
SUBTITLE=Pressure Load
SPC = 2
LOAD = 2
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 2
$ Subcase name : Normal Loading
SUBTITLE=Normal Loading
SPC = 2
LOAD = 4
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 3
$ Subcase name : Opposed Loading
SUBTITLE=Opposed Loading
SPC = 2
LOAD = 6
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
BEGIN BULK
PARAM    POST    1
PARAM    WTMASS .00259
PARAM   PRTMAXIM YES
$
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337
STATIC          480     99
DTI      UNITS   1                                       PSI
.
$Rest of Bulk Data
.
ENDDATA&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
List Superelements322
Main Index
List Superelements
The same double flyswatter model ( flyswatter_SEset.dat ) is now listed here when defined with List
superelement. The only addition to the input deck are the entries that define List superelement (SESET ,
DTI,SETREE).
NASTRAN SYSTEM(316)=19
SOL 101
CEND
TITLE = Flyswatter SESET superelement job
ECHO = NONE
FATIGUE(FORMAT=64,BULK) = 42
SUBCASE 1
$ Subcase name : Pressure Load
SUBTITLE=Pressure Load
SPC = 2
LOAD = 2
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 2
$ Subcase name : Normal Loading
SUBTITLE=Normal Loading
SPC = 2
LOAD = 4
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 3
$ Subcase name : Opposed Loading
SUBTITLE=Opposed Loading
SPC = 2
LOAD = 6
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
BEGIN BULK
PARAM    POST    1
PARAM    WTMASS .00259
PARAM   PRTMAXIM YES
DTI      SETREE  1       4       6       2       4       3       5
1       3
$
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337&lt;/p&gt;
&lt;p&gt;323 APPENDIX B
Superelements
Main Index
STATIC          480     99
DTI      UNITS   1                                       PSI
$ se1_left_swatter
$ Left Swatter
SESET          1      33      34      37      38
SESET          1      45    THRU      50
SESET          1      57    THRU      62
SESET          1      69    THRU      74
SESET          1      81    THRU      86
SESET          1      93    THRU      98
$ se2_right_swatter
$ Right Swatter
SESET          2      39      40      43      44
SESET          2      51    THRU      56
SESET          2      63    THRU      68
SESET          2      75    THRU      80
SESET          2      87    THRU      92
SESET          2      99    THRU     104
$ se3_left_vert_arm
$ Left Vertical Arm
SESET          3      29      30
$ se4_right_vert_arm
$ RIght Vertical Arm
SESET          4      31      32
$ se5_left_horiz_arm
$ Left Horizontal Arm
SESET          5       9    THRU      12
SESET          5      21      22
$ se6_right_horiz_arm
$ Right Horizontal Arm
SESET          6      15    THRU      18
SESET          6      25      26
$ se7_handle
$ Handle
SESET          7       1    THRU       8
.
$Rest of Bulk Data
.
ENDDATA
The point to make here is that the input data for a NEF job is identical to that of a non-superelement job.
The presence of superelements makes no difference. As long as stress/strain output requests can be made for
primary superelements and the residual structure, fatigue life can be determined for those entities.
The element/node with the lowest life in this example is Element 1/Node 2 with a Log of Life value of 6. 00
repeats of the loading. This element belongs to superelement 7. The results are, of course, identical to the
non-superelement run.
Part Superelements
For Part superelements, portions of the input deck ( flyswatter_partSE.dat ) for the same model are show
below. The thing to note is that each superelement is defined in its own section of the bulk data in between&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Part Superelements324
Main Index
a BEGIN SUPER and the next BEGIN SUPER or ENDDATA statements. The residual structure is defined
between the BEGIN BULK and the first BEGIN SUPER statement.
NASTRAN SYSTEM(316)=19
SOL 101
CEND
TITLE = Flyswatter PART superelement job
ECHO = NONE
FATIGUE(FORMAT=64,BULK) = 42
SUBCASE 1
$ Subcase name : Pressure Load
SUBTITLE=Pressure Load
SPC = 2
LOAD = 2
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 2
$ Subcase name : Normal Loading
SUBTITLE=Normal Loading
SPC = 2
LOAD = 4
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 3
$ Subcase name : Opposed Loading
SUBTITLE=Opposed Loading
SPC = 2
LOAD = 6
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
BEGIN BULK
$&amp;hellip;
SETREE   6       4
SETREE   4       2
SETREE   5       3
SETREE   3       1
$
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337
STATIC          480     99
DTI      UNITS   1                                       PSI
$
$ Rest of Residual Structure Bulk Data&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P18</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_018/</guid>
      <description>
        
        
        &lt;p&gt;325 APPENDIX B
Superelements
Main Index
$
$ Superelement Name: se1_left_swatter
$ Superelement Description: Left Swatter
BEGIN SUPER = 1
$&amp;hellip;
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337
STATIC          480     99
DTI      UNITS   1                                       PSI
$
$ Rest of SE 1 Bulk Data
$
$ Superelement Name: se2_right_swatter
$ Superelement Description: Right Swatter
BEGIN SUPER = 2
$&amp;hellip;
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337
STATIC          480     99
DTI      UNITS   1                                       PSI
$
$ Rest of SE 2 Bulk Data
$&amp;hellip;
$ SE 3 through SE 6
$&amp;hellip;
$ $ Superelement Name: se7_handle
$ Superelement Description: Handle
BEGIN SUPER = 7
$&amp;hellip;
FTGSEQ   42
33
FTGEVNT  33      101     102     103
FTGLOAD  101     99      1
FTGLOAD  102     99      2
FTGLOAD  103     99      3
FTGPARM  42      SN      0.03411&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Part Superelements326
Main Index
STRESS                          NODE            SGAGE
TABLFTG  99
0.0     1.0     -1.0    0.0     ENDT
MATFTG   1      145.0337
STATIC          480     99
DTI      UNITS   1                                       PSI
$
$ Rest of SE 7 Bulk Data
$
ENDDATA
The following points should be noted:
The case control is identical. The FATIGUE output request is still above all subcases.
For each superelement and the residual structure, there must be the appropriate NEF related cards
defined within that section of the bulk data or no fatigue analysis will occur for elements of that
superelement or residual structure. Each superelement section is treated as a separate model and all
the entities must be defined in each individual section or a FATAL error will occur.
It is possible to omit the NEF related cards within a superelement definition or the residual
structure . Thus no fatigue analysis will be done for those superelements or the residual structure. To
disable  fatigue analysis of a particular superelement,  all of t he FTGSEQ, FTGLOAD, F TGPARM ,
and F TGDEF entries need to be commented or removed. The presence of the other NEF related
entries will be ignored. It is NOT sufficient to simply change the I D such that they are n ot called
from the FATIGUE case control. The entries must be removed from the superelement definition.
Since the NEF related entries are defined within each superelement and the residual structure, it is
entirely possible to perform different fatigue analyses (with different parameters and/or loading) for
each individual superelement and the residual structure. If this is done, please ensure that this makes
engineering sense.
The element/node with the lowest life in this example is Element 1/Node 2 with a Log of Life value of 6. 00
repeats of the loading. This element belongs to superelement 7. The results are, of course, identical to the
non-superelement run and the List superelement run.&lt;/p&gt;
&lt;p&gt;Main Index
Appendix C: Utilities
C Utilities
Overview
Configuration
Descriptions
Batch Operation
User Environment (MENM)
Material Management (PFMAT)
Advanced Loading Utilities
Advanced Fatigue Utilities
Graphics Display Utilities
File Conversion Utilities&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Overview328
Main Index
Overview
Various utilities are available for use with MSC Nastran that a fatigue analyst may f ind useful, mostly for
manipulating and viewing standard DAC formatted cyclic loading files that are used with MSC Nastran
Embedded Fatigue (NEF) analysis. The utilities are broken up into the following categories.
Material Management
Loading Manipulation
Advanced Load Manipulation
Advanced Fatigue Analysis
Graphical Display
File Conversion
A brief description of each utility is given in this Appendix. These are available from a standard CAEfatigue
installation. All NEF licenses also allow access to CAEfatigue and these utilities.
Configuration
To invoke any of these modules, you must use the CAEfatigue_Utilities  commnd in the CAEfatigue
installation d irectory . For example, say the CAEfatigue i nstallation is in a location called &amp;lt;install_dir&amp;gt; ,
which may be c:\MSC.Software\CAEfatigue\ 20xx.y.z, then  set this location as a variable
(MSCP_NASTRAN_NEFUTILS) or put it in your path:
Windows:
set MSCP_NASTRAN_NEFUTILS =
&amp;lt;install_dir&amp;gt;\CAEfatigue_Utilities.cmd &amp;lt;module_name&amp;gt; &lt;!-- raw HTML omitted --&gt;
Linux (cshell shown):
setenv MSCP_NASTRAN_NEFUTILS &amp;lt;install_dir&amp;gt;/CAEFatigue_Utilities
&amp;lt;module_name&amp;gt; &lt;!-- raw HTML omitted --&gt;
where 20xx.y.z is the year.version.subversion  of the software. &amp;lt;module_name&amp;gt;  is the fatigue
utility to invoke, and &lt;!-- raw HTML omitted --&gt;  are any optional parameters that maybe needed or used when invoking a utility.
Then invoke the desired module, say ptime  as an example, by issuing the command (in lower case letters):
Windows:
c:&amp;gt; %MSCP_NASTRAN_NEFUTILS% p time
or if in your path:
c:&amp;gt; CAEfatigue_Utilities.cmd ptime
Linux (cshell shown):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$MSCP_NASTRAN_NEFUTILS p time
or if in your path:
CAEFatigue_Utilities ptime
Additional Notes:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;329 APPENDIX C
Utilities
Main Index
Please b e aware that these are 32 bit executables , but work fine on 64 bit machines .
Windows execution requires FORTAN libraries that are delivered in the tools\bin  directory  of
the CAEfatigue installation.  Only those libraries will work. If you get messages that
libifcoremd.dll  or libmmd.dll  cannot be found, ensure that these libraries exist i n that
directory and/or ensure that your library search path can see th at directory.
On Linux, to run these utilities, the following i386 RPMs are required to be installed on your
system as well:
libXp-1.0.0-8.1.el5.i386.rpm
libXmu-1.0.2-5.i386.rpm
openmotif-2.3.1-2.el5.i386.rpm
Descriptions
A brief d escriptions of each utility’s capability, is listed below:
Material Management
Loading and Advanced Load ManipulationModule Description
Material Management (PFMAT),
340PFMAT contains a user expandable database of many fatigue material
datasets that can be view both tabularly and graphically.
Module Description
Time History Management
(PTIME), 388PTIME is a utility that allows one to manager DAC time history files in a
given directory and quickly create, modify, and/or graphically display
them.
Arithmetic Manipulation -
(MART), 427MART is a module which arithmetically manipulates standard loading data
files. Files may be operated on in ways similar to that offered by a hand held
calculator. Complex mathematical procedures can be built up by
“chaining” together sets of MART commands. If necessary, the arithmetic
manipulation can be applied to a section or window in the data file, leaving
the remainder of the data unaffected.
Multi-Channel Editor - (MCOE),
434MCOE is an interactive alphanumeric editor that allows both the creation
of new and the editing of existing time series data files. MCOE operates
within a highly featured spreadsheet environment that allows data to be
manipulated within the spreadsheet (points inserted, moved, etc.).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Descriptions330
Main Index
Rainflow Cycle Counter -
(MCYC), 444MCYC is used to process a time series signal by extracting fatigue cycles
according to the rainflow cycle counting algorithm. MCYC is useful
because it allows the user to count cycles using the same parameters for
comparing and assessing various time signals.
Formula Processor (MFRM), 448 MFRM is an arithmetic and logical module which can be used to process
formulae of varying complexity.
File Cut and Paste - (MLEN), 480  MLEN is used to extract a portion of data from one file or several files, and
load the extracted portions into a new output file. It can be used to
concatenate (merge), individual data sets into a single output file. It can
also be used to delete a selected portion of data from files.
Multi-File Manipulation -
(MMFM), 488MMFM is an arithmetic and logical module which can be used to process
formulae of varying complexity. The formulae themselves are defined by
means of a command language which MMFM interprets and executes.&lt;br&gt;
The command language is, in effect, a simple programming language that
gives users access to all parts of loading files, i.e. header, data area, and extra
details keywords.
Peak-Valley Extraction -
(MPVXMUL), 494MPVXMUL extracts turning points from single parameter files such as
DAC a nd RPC multiple data - channel files. The MPVXMUL extraction
process maintains synchronous phase by writing corresponding data values
to all the output files whenever a turning point is found in any channel.
Simultaneous Values Analysis
DAC/RPC - (MSIMMAX), 501  MSIMMAX performs simultaneous values analysis on either multi-
channels in a single RPC file or multiple DAC files from the same test.
Amplitude Distribution - (MADA),
503MADA calculates the probability density distribution and other function
of a time signal.
Auto Spectral Density - (MASD),
504MASD performs a fr equency analysis of a time signal to determine
frequency content.
Fast Fourier Filter - (MFFF), 517 MFFF creates a finite impulse response (FIR), filter by using the window&lt;br&gt;
method. After creation, MFFF automatically removes unwanted frequency
components from time series data. High-pass, low-pass, band-pass or band-
reject can be created.
Butterworth Filtration - (MBFL),
524This program takes a signal file and passes it through a Butterworth filter
to produce an output signal file. The filter  characteristic can be a low pass,
high pass, band pass or band-stop.  The filter order  can be from 1 to 8 poles
which will give a cutoff of between 6db and 48db per octave.
Frequency Response Analysis -
(MFRA), 530The frequency response analysis, MFRA, analyses the response of a single
input, single output linear system.  Six files of statistics are generated as a
result of this analysis including the cross-correlation. Module Description&lt;/p&gt;
&lt;p&gt;331 APPENDIX C
Utilities
Main Index
Advanced Fatigue AnalysisStatistical Analysis - (MRSTAT),
542MRSTATS analyses a time signal and produces a number of statistics about
that signal. RSTATS works by breaking the input time signal into
segments, and statistically analyzing each segment.  Each statistic is fed into
an output signal file.
Header/Footer Manipulation -
(MFILMNP), 552File manipulation (MFILMNP) allows both header and extra details
manipulation. In addition it can check that a header conforms to
MSC.Fatigue conventions. MFILMNP can list and edit data file headers,
and control the extra details data that can be written to files. The files types
that can be edited include single parameter files e.g. . dac files and 2
parameter files e.g. . mdf. Three parameter histogram files can also be
processed.
Cycle and Damage Analysis -
(MCDA), 592MCDA calculates and displays cycles and damage distributions so that
different test conditions may be compared and the reasons for variations in
fatigue damage may be determined. Displays may be as histograms,
continuous curves, or exceedan ce plots.
Cycles File Lister - (MCYL), 598 MCYL is used to numerically list the contents of a histogram or cycle file.
MCYL can also display a summary of the information resident in the file
header region.
Module Description
Single Location S-N Analysis -
(MSLF), 565The MSLF program models fatigue life in software to predict durability
based on SN-curves derived from constant amplitude test results for
specimens or components and a ccepts measured stresses as input from a
single location.
Single Location e-N Analysis -
(MCLF), 574MCLF is a crack initiation module, but in the testing world where the
input is a measured strain history from a single location.
Cycle and Damage Analysis -
(MCDA), 592MCDA calculates and displays cycles and damage distributions so that
different test conditions may be compared and the reasons for variations in
fatigue damage may be determined. Displays may be as histograms,
continuous curves, or exceedance plots.
Time Correlated Damage -
(MTCD), 604MTCD is a fatigue analyzer that can be used to pin-point fatigue damage
within a loading history. It uses the local stress-strain approach to track
local stresses and strains by means of a single-pass algorithm. An estimate
of the total damage accrued by one pass through the load history is made
and displayed graphically.Module Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Descriptions332
Main Index
Graphical DisplaySingle Location Vibration
Fatigue - (MFLF), 611MFLF is a single location, stress-based fatigue analysis module that accepts
stress response PSDFs as input.
Stress-Strain Analysis - (MSSA),
627MSSA processes rosetta data and finite element data from software strain
gauges. MSSA creates outputs suitable for use by either the stress or strain-
life fatigue analyzers.
Multi-Axial Life Analysis -
(MMLF), 651MMLF is a single loc ation multiaxial fatigue analyzer based on Crack
Initiation. MMLF requires three strain input signals which typically come
from strain gauge rosettes.
Crack Growth Data Analysis -
(MFCG), 695MFCG calculates the Paris Law coefficient and exponent from actual raw
test data obtained under constant amplitude loading conditions.
Kt/Kf Evaluation - (MKTAN), 705 MKTAN stores and retrieves values for stress concentration factor ( Kt)
solutions for geometric details, and calculates Kt and Kf. It allows users
without finite element analysis (FEA) software rapid and convenient access
to Kt values for a range of common component geometries. The Kt values
can be used in MTCD to predict the fatigue life of an engineering
component.
Module Description
Graphical Editing - (MGED), 717 MGED is the multi-channel interactive graphical editor for time series data
allowing online manipulation of a signal.
Multi-File Display - (MMFD), 718 MMFD displays multiple p arameter data files.
Quick Look Display - (MQLD),
722MQLD displays single channel data files.
Two Parameter Display -
(MTPD), 723MTPD displays paired (X-Y) data files. For . mdf files.
Polar Display - (MPOD), 724 MPOD displays paired (X-Y) data files. For . pod files.
Three Dimensional Display -
(MP3D), 732MP3D is a histogram and waterfall display module.
Waterfall File Create -
(MWFLCRE), 802MWFLCRE creates a three parameter waterfall file from multiple single
parameter files.Module Description&lt;/p&gt;
&lt;p&gt;333 APPENDIX C
Utilities
Main Index
File Conversion
Module Description
Binary/ASCII Convertor -
(MDTA/MATD), 763The signal to ASCII module, MDTA, converts a single parameter, X-Y, or
histogram binary file into ASCII format. It can also write or omit header
details, and write an ASCII file as single or multiple column. MDTA is
complimentary to module PTIME which converts ASCII files to binary
files. The MADT module also converts ASCII files to binary, operates in
batch mode, and converts multi-channel data to multi-files automatically.
Regenerate Time Histories from
PSDs (MREGEN), 795MREGEN can regenerate a single parameter signal file (. dac extension)
from a three parameter range-mean cycles histogram file (. cyg type),
regenerate a single parameter signal file (. dac extension) from a three
parameter maximum-minimum cycles histogram file (. cyh type),
regenerate a single parameter signal file (.dac extension) from a three
parameter Markov Matrix (. mkh type), and generate a Gaussian series from
a user supplied irregularity factor and save it as a . dac file.
RPC to DAC - DAC to RPC -
(MREMDAC/MDACREM), 788This program extracts channels of data from MTS RPCtm remote
parameter (RPC) files, and creates a single . dac file for each channel of the
RPC file. It is possible to selectively extract one or more channel numbers.
A time window within the RPC file may be selected which will apply to all
channels extracted. Both RPC II and RPC III files may be processed. Full
details of the extraction and creation process can be saved to a report file.
The reverse of this is MDACREM.
Cross-Platform Conversion -
(MCONFIL), 798Cross platform file conversion.
Waterfall File Create -
(MWFLCRE), 802WFLCRE creates a three parameter waterfall file from multiple single
parameter files.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Batch Operation334
Main Index
Batch Operation
All the above utilities can be run in batch mode. For example  on Windows , to run the MART utility in batch
you can type something like:
CAEfatigue_Utilities.cmd m art
/opt=l/inp=test/out=test1/ov=y/mul=10.1/con=-123
In this example, MART process es an input data file called test.dac  by multiplying every value contained
therein by 10.1 and then subtracting 123 from the result. The output will be written to another data file
called test1.dac . If a file with this name already exists then it will be overwritten.
Batch keywords for each utility can be listed by using the help button when running each module graphically
in its main form .
User Environment (MENM)
The user environment manipulation module, MENM, can be used to create, edit, and maintain the
environment under which utility modules execute.
The environment records and sets default file names, save types, plot labels, and much more.   This guide
details which environment keywords are applicable in each module; they can all be set from MENM.
Utility modules function within the context of a user environment which determines their performance and
behavior. For example, the name of the last time series (. dac) file used is saved in the environment and so
when a particular module requires a . dac file as input, it can be offered as a default. In fact the entire utility
default handling system is implemented through the user environment.
Most modules routinely access the environment either to read or write information, this process is normally
transparent to the user. However, users can deposit specific instructions within the environment which will
force program modules to behave in specific ways. For example, the location of plotting labels output by the
quick look display (MQLD) module can be moved from the side to the top by setting the environment
keyword PLOTLABL  to TOP . The MENM module can be used to manipulate the user environment.&lt;/p&gt;
&lt;p&gt;335 APPENDIX C
Utilities
Main Index
The Global, Home and Local Environments
The user environment functions on three levels, the local, the home , and the global  level. This program
allows the user access to the environment files, the local environment ( envi.usr ), the global, or central,
environment ( envi.sys ) and the home environment ( envi.hom ). The global environment file is in the
nssys  directory on PC or Linux systems and may be accessed by many users.
Instructions saved at the local level will normally override instructions saved at the home level which will
override instructions at the global level, so that for example, setting PLOTLABL to TOP locally will override
a global PLOTLABL set to SIDE. This feature can be particularly useful on multi-user systems where some
functionality needs to be defined globally for all users, but nevertheless, individuals can still redefine some
functions locally for themselves. The local file is accessed only by programs running in the directory where
the file resides. The environment is used for default settings (e.g. pen colours) and to pass information from
program to program (e.g. last used file).
Physically, the user environment consists of three data files in which all the required information and
commands are stored. The local environment file is called envi.usr  and is always to be found in the user&amp;rsquo;s
current directory or subdirectory. Therefore, each directory from which any utility module is invoked will
have a specific copy of envi.usr  which reflects the usage within that directory. The Home environment is
called envi.hom , the global environment file is called envi.sys  and is located within the central system
directory nssys .
The structure of the local, home and global environment files is identical and consists of a random access
key-indexed format, which means that these files can only be accessed by the MENM module.
Information and instructions are stored within the environment files in the form of a keyword and an
associated value. Modules access the environment by searching for keywords specific to them and then acting
according to the associated value. The format of the keyword value combination, together with some
examples, are detailed below:
Most of the keyword value pairs to be found in an environment file are of no direct interest to the user, they
merely enable program modules to function in the expected way. However, as mentioned above, MENM can
be used to deposit specific instructions, such as the value of Palmgren Miner&amp;rsquo;s fatigue damage summation
constant, in order to customize performance. The user definable keyword value pairs relevant to particular
modules are detailed in the individual module documentation.
Module Operation
The MENM module can be run in one of the following ways:
In stand alone mode by typing menm  at the system prompt as explained in Configuration, 328 .KEYWORD
{8 characters max.}VALUE
{120 characters max.}MEANING
PLOTLABL TOP Plot Label position
$SIGNAL TEST101.DAC Last signal file accessed
$LASTPRG MMFD The last used program
$MINERS 1.0 Miners constant&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
User Environment (MENM)336
Main Index
By incorporating the MENM commands in a batch operation.
The first mode is interactive. Once running in interactive mode, MENM displays the following menu:
Figure 3-1  The MENM main menu.
All of the three main options (Local, Home, or Central) have the same sub menu, illustrated to the right of
the main menu.
The functions of these submenu options are described below. The required option is selected by pressing the
appropriate hot key or using the cursor. Alternatively, the highlight bar can be moved over the option and
ENTER pressed OR the menu option can be selected by pointing and clicking the mouse pointer.
Option 1 - List environment to screen.
Selecting this option will cause MENM to list the contents of the selected environment file. The listing is
directed to the screen, and takes the form of the keyword - value pairs.&lt;/p&gt;
&lt;p&gt;337 APPENDIX C
Utilities
Main Index
Figure 3-2  A Listing of Keywords
Option 2 - Output Environment to File
If File is chosen as the listing destination then a screen similar to Figure 3-3 below appears.
Figure 3-3   Listing destination is File&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
User Environment (MENM)338
Main Index
The fields are as follows:
Option 3 - Add/Alter key word
Selecting this option allows individual keyword value pairs to be added to or edited within the local
environment file. After selection of this option MENM displays this screen:
Figure 3-4  Add/Alter local entry screen.
If the specified keyword exists within the local environment (use the pick list facility to select one) then the
currently associated value is displayed and an alternative value may be entered.
The form of the environment is a set of keyword/value string pairs. The keywords may be up to 8 characters
in length, the value up to 120 characters.
If the specified keyword does not exist within the local environment, then the new keyword and the value
entered will be added. Screen Part Description
List File Name The name of the ASCII file to which the keyword/value pairs will be written.
Figure 3-3 above shows one of the default names, and if envi.lst  should already
exists then MENM will overwrite it. Change the file name if this is not the desired
result.
Overwrite This option specifies whether the output file should be overwritten or appended
to. If any option is selected and the file does not exist then the file will be created.
Separator Keyword/value pairs must be separated from each other by either an equals sign, a
space, or a TAB character. This field allows the character to be selected.
Keyword filter T o write a subset of keywords to the output file, a keyword filter may be used. An
asterisk (&lt;em&gt;) may be used at the end of the filter string and means, “any keyword
beginning with”. For example FRED&lt;/em&gt; will list all keywords beginning with FRED.
The default is that all keywords will be listed. Omitting the wildcard means that
an exact match is required.&lt;/p&gt;
&lt;p&gt;339 APPENDIX C
Utilities
Main Index
Option 4 - Remove keywords
Selection of this option will cause MENM to ask for the name of keyword to be deleted.
If the specified keyword exists within the local environment then it together with its associated value will be
deleted from the local environment file. If the specified keyword cannot be found then an appropriate error
message will be output.
The asterisk (&lt;em&gt;) wildcard may be used. It must be the last character. For example FRED&lt;/em&gt; will remove all
keywords beginning with FRED.
The pick list can be used to tag a number of keywords for mass deletion.
Option 5 - Clear Environment
Selection of this option will cause MENM to prompt with a message such as this:
Are you sure you wish to overwrite the local environment
Yes/No?
The default to this option is N for No (retain the current local environment). Pressing the ENTER key will
select this default. Pressing  “Y “or clicking &amp;lsquo;Yes&amp;rsquo; followed by ENTER will cause MENM to delete the local
environment.Note:   Changes made to the local environment will only apply to the specific directory relevant to that
environment.
Note:   Deleting the global environment file affects all users. Use this function with extra care!&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)340
Main Index
Material  Management (PFMAT)
PFMAT is a mat erials data base manager which has been designed for use with a fatigue life estimation system.
The materials database to which it interfaces has a structure which supports all the materials data (listed
below) associated with the three methods of fatigue life estimation:
Monotonic data
Stress-life data (including component and spot weld S-N curves)
Strain-life data
Cyclic stress-strain data
Multi-environment crack growth data
By using this database, all users have access to all the necessary data in one central location, thus ensuring the
highest-quality design procedures for durability analysis.
Once initiated, a set of screen displays which may be manipulated using the keyboard and mouse are
presented to the user.
The menu structure for PFMAT is shown in  Figure 3-5. The top menu contains options to additional
submenus, such as the Graphical display option. This multi -menu layering has been necessary to ensure the
legibility of each menu.&lt;/p&gt;
&lt;p&gt;341 APPENDIX C
Utilities
Main Index
Figure 3-5  The PFMAT  Menu Structure
PFMAT Me nu Options
The PFMAT module can be run in one of the following ways:
In stand alone mode by invoking pfmat  at the system prompt as explained in Configuration, 328 .
By incorporating the PFMAT commands in a batch operation (see PFMAT in BATCH Mode, 369 .
The main options and associated text on the PFMAT start-up form is shown in Figure 3-6.
Figure 3-6  PFMAT Start-up Screen Display
The menu options are shown as a vertical list. T o select one of the options, move the cursor over the option
you wish to select and click the mouse button.
The materials database in use may be the central or a local one. The actual database in use is shown above
the menu. The materials datasets that have been loaded are indicated toward the top of the start-up form (see
Figure 3-6). One or two materials may be loaded into the manager at any one time.
Full List Option
The Full list option will list on the screen an index of all the materials dataset names in the materials database
together with details of the datasets available for each material, the Young’s modulus, and the ultimate
strength of the material. An example of the listing is shown in Figure 3-7.
Important:   To use the central database when a local one exists, the local database must be deleted or
renamed from nmats.mdb  to another name.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)342
Main Index
Figure 3-7  Example of the Database Materials Listing
Various columns of information are shown and the data available. For example, in the example screen shown
in Figure 3-7, material dataset 2.25Cr1Mo only contains data for crack growth (LEFM) calculations, Young’s
Modulus (E), and UTS. (E -N=Strain-life, M.S-N = Material stress-life, C.S-N = Component stress life,
Sp.Wld. = Spot Weld S-N.)
Depending on the number of entries in the database, the listing may run over a number of pages.
Search and  List Option
Search and list is a powerful search facility which allows the user to find materials datasets which meet certain
specific requirements such as a given ultimate strength (UTS) or cyclic hardening coefficient (K&amp;rsquo;). Up to 10
parameters may be used in any one search out of a total list of 34 parameters covering monotonic (10
parameters), cyclic/strain-life (10 parameters), stress-life (7 parameters) and LEFM (8 parameters) datasets.
Once the Search and list option has been chosen, a form is presented as shown in Figure 3-8.&lt;/p&gt;
&lt;p&gt;343 APPENDIX C
Utilities
Main Index
Figure 3-8  The Selective Listing Setup Screen Display
To select a field for use in the search, the following procedure should be used.
1.Select a parameter from the list box at the left with the cursor using the mouse button.
2.A databox will then become enabled with the selected parameter which is located toward the right of
the screen. If the search field chosen is a numeric parameter, choose the logical parameter by selecting
it from the option menu next to where the selected parameter appeared (&amp;lt;,&amp;lt;=,&amp;gt;=,&amp;gt;,=).
3.For numeric parameters, it is also necessary to define the value of the search parameter (e.g., 500 for
UTS = 500 MPa). Type this into the databox next to the logicals option menu.
4.If the search field is non-numeric (e.g., Strain data), then it is necessary to select either YES or NO
once the selection has been made.
5.Continue to setup the search parameters until all the values required have been defined (in Steps 1-
4). A maximum of 10 search parameters may be defined for any one search. To commence the search,
click the OK button.
Once a search has been completed, a new window will present the results of the search as shown below in
Figure 3-9. PFMAT will have filtered out all those materials that did not meet the search criteria.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)344
Main Index
Figure 3-9  A Materials Search Report
Tabulate Options
The Tabulate option lists details of datasets 1 and 2.
When selected, it gives the option of choosing D ata Values or S urface (finish correction factor) values as
shown is Figure 3-10.
Important:   Hint for alternative/international/material names — if alternative names have been defined
(e.g., Werstoff number, DIN or BS designations), these will be reported using the search on
name option. This search field searches all 8 name fields in the database for each entry.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P19</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_019/</guid>
      <description>
        
        
        &lt;p&gt;345 APPENDIX C
Utilities
Main Index
Figure 3-10  Tabulate Options
For example, Figure 3-11 shows that if SAE1006_85A_HR and SAE1045_390_QT were resident as datasets
1 and 2, the Tabulate option would display the following information about them.
Figure 3-11  .Materials Information Listing, page 1
The above figure is only the first page of several. Subsequent pages list information on:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)346
Main Index
See Figure 3-12 and Figure 3-13 for examples of page 2 and 3. The pages of listed data appear differently
depending on the type of data stored for the material(s) loaded. Similar pages will be displayed for pages 4,
5, 6, etc.
For example, the other screen pages look like this:Page 1 :Dataset name(s), References and Comments.
Page 2 :Monotonic data.
Page 3 :Strain life.
Page 4 :Stress-life data.
Page 5,6,etc :LEFM datasets for different environments.&lt;/p&gt;
&lt;p&gt;347 APPENDIX C
Utilities
Main Index
Figure 3-12  Materi als Information Listing, page 2
Figure 3-13  Mate rials Information Listing, page 3
If the S urface Values option is chosen, then a list of surface finish correction factors is displayed. Figure 3-14
shows an example of this type of table.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)348
Main Index
Figure 3-14  List of Sur face Correction Factors
The finish of a component can have a significant effect on the fatigue life since a rough surface provides stress
concentrations which will promote crack initiation. To calculate the stress concentration due to a range of
surfaces, the ultimate strength (UTS) of the material must be known. The UTS is obtained from the materials
database and the factors computed for each available surface, resulting in a screen display similar to the one
shown in  Figure 3-14.
An additional surface finish may be added to the current list providing the user can define the relationship
between UTS and endurance limit. A user-defined surface finish can be supplied by modifying the file
cfuser.sur , which is delivered with the in the mats  directory. This file can be edited by loading it into the
Time History Database Manager, PTIME. The unedited file consists of a straight line at unity. Using
PTIME’s editing capabilities the user can modify this file to his needs.
Load Option
Selection of this option allows you to load a material into Set 1 and/or Set 2, or replace an existing material
for the purpose of editing, tabulating, or graphing. When first selected, the default dataset is Set 1. You may
change it to Set 2 by moving the selection with the cursor or arrow keys or by using the hot keys, 1 or 2 for
Set 1 or 2, respectively. See Figure 3-15.&lt;/p&gt;
&lt;p&gt;349 APPENDIX C
Utilities
Main Index
Figure 3-15  The Load Option
When the dataset is chosen, PFMAT lists the contents of the database on a screen such as that shown in
Figure 3-16.
Figure 3-16  A Listing of the Available Materials&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)350
Main Index
To load a material from the list box, simply select one with the cursor. Alternatively, a material name can be
typed by selecting the T ype Name toggle at the top of the form. This will bring up a databox in which the
user can type the name or part of the name of a material, which if found, will be loaded. The Return toggle
will return the user to the main PFMAT form.
Note that the scroll bar at the right of the list is a visual cue telling you that (in this case) more selections are
available. Moving the scroll bar to the side of the list box will enable viewing of materials not visible.
Unload Option
This option has the opposite effect to the Load option described above. Any material resident in datasets 1
or 2 can be unloaded and ready for replacement with a new entry. This option is very easy to use; simply select
set 1 or set 2 from the popup menu. The selected set will be emptied.
Figure 3-17  The Unload Option
Edit Option
Edit allows the entry in either set 1 or set 2 to be changed (edited). Note that the central database should not
normally be edited. The edit option only allows editing the central database if the password is known. The
password will be requested on a screen such as that shown in Figure 3-18.Important:   A word of caution: if a name fragment is entered (such as SAE) and if several database
entries exist with that fragment, then PFMAT will load the first one encountered into
the named set. T ype the minimum number of characters that uniquely define an entry.&lt;/p&gt;
&lt;p&gt;351 APPENDIX C
Utilities
Main Index
Figure 3-18  Password Screen
When the materials database is shipped, the password is set to PFATIGUE. However, the system manager
may have changed this password at installation time. If no authorization to enter data in the central materials
database has been given, it is still possible to make a local copy of the database and edit the latter. The system
manager will normally know the password and he should be consulted if data needs to be entered in the
central database. The password can only be changed if the database manager, PFMAT , is used to access the
central database while working in the directory where the central database resides. File and directory
protections will have to be set properly also if access is to be given outside of the central directory where the
database resides.
The first edit screen is shown in Figure 3-19 (it is the same screen if editing an entry in the central or local
database).
Important:   If a local database exists, then PFMAT will automatically start editing the local database, and
the above password stage will be skipped.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)352
Main Index
Figure 3-19  Edit Database Screen, page 1
Edit the name, references, or comment, and click the OK button to accept the changes. Successive pages
devoted to information on general physical properties, E-N data, S-N data, and fracture mechanics data will
be presented after this page.
Sample screens are shown in  Figure 3-20, Figure 3-21, Figure 3-22, in the order that they appear. Clicking the
Cancel button during any of any edit session will page back up to the previous edit screen.
Important:   Related specifications are based on chemical composition ONLY; mechanical properties
should be confirmed before considering alternative grade designations.&lt;/p&gt;
&lt;p&gt;353 APPENDIX C
Utilities
Main Index
Figure 3-20  Edit Data base Screen, page 2
Figure 3-21  Edit Data base Screen, page 3&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)354
Main Index
Figure 3-22  Edit Data base Screen, page 4
Figure 3-23  Edit Database Screen, page 5
Note that every field has a help window associated with it. For example, if guidance is needed about the units
for work hardening coefficient on the generic data page, then move the highlight bar over that field and press
the F1 key. A pop-up help window will appear.&lt;/p&gt;
&lt;p&gt;355 APPENDIX C
Utilities
Main Index
Also, data values may be edited by applying a percentage change. The change is automatically and
immediately updated on the screen.
Create Option
Create allows a new material to be entered into the attached database. If this option is chosen, than either
dataset 1 or 2 must be nominated to receive the new material. If the chosen set already contains an entry,
then it will be overwritten. If the name chosen to represent the new entry already exists in the database, an
option is given to load it directly.
Figure 3-24  The Create Option
Under this option, it is also possible to create a New Database, 359  or Merged Entries, 360  into the attached
database from another database or simply Copy Entry, 361  to a new name.
One very u seful opti on is that of generating material properties from UTS values based on empirically
derived formulas. This helps create useful (although not exact) material properties to get started on a fatigue
analysis when cyclic materials data are not available. You must know the UTS, Young’s Modulus and enter
the appropriate metal type code on the static page. See Figure 3-26 and Table 3-1 for the listing of valid metal
type codes.
When loading new materials information into the database, various input screens will be presented. The
create screens are illustrated in Figure 3-25, Figure 3-26, Figure 3-27, Figure 3-28, and Figure 3-29.Important:   Each data value has a valid range. If the user wishes to input values which are outside of these
ranges, he must turn material checking off. See the Preferences Option, 368  option in this
chapter. The valid ranges can be determined by placing the cursor or highlight bar over the
relevant data value and invoking help with the F1 key.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)356
Main Index
Figure 3-25  Create Material Screen, page 1
When some or all of the fields have been filled, the new entry is appended to the database. Again, if no local
database exists in the working directory, a password must be supplied to modify the central database. If no
password is given, a local database will be created. For more information about modifying the central database
and the password, see the Edit Option, 350  description.
Each data value has valid numerical ranges that are deemed acceptable. If numbers outside of these ranges are
input, they will be rejected. To see the valid ranges, place the cursor in the appropriate databox and use the
help option by pressing the F1 key. If the user wishes to input numbers outside of the appropriate range, turn
Material checking off. See the Preferences Option, 368  for more information.
Materials data may be loaded automatically from other databases using the ASCII batch operation of this
create option. This is described later in this chapter,  PFMAT in BATCH Mode, 369 . It can also be generated
automatically from only the UTS value as explained previously.&lt;/p&gt;
&lt;p&gt;357 APPENDIX C
Utilities
Main Index
Figure 3-26  Creat e Ma terial Scr een, page 2
Figure 3-27  Crea te Material Screen, page 3&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)358
Main Index
Figure 3-28  Crea te Ma terial Scr een, page 4&lt;/p&gt;
&lt;p&gt;359 APPENDIX C
Utilities
Main Index
Figure 3-29  Create Mate rial Screen, page 5
New Database
This feature allows for creation of a new, empty database. (This is necessary when batch loading materials
into a local database.) A form will appear into which the following information will be requested.
1.The new database name
2.A character database ID
3.A password&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)360
Main Index
Figure 3-30  The New Database Option
All information on this form is required. After clicking the OK button, a new database file will be created in
the local directory called database.mdb  where database  is the name given in the first field. The main
PFMAT form will reflect the fact that this new database is now attached.
Another form will appear after the database has been created requesting to set the database preference on start
up of PFMAT . This is more fully described in the Preferences Option, 368  description.
Merged Entries
This feature allows merging of databases or database entries to make one database from two. A form will
appear requesting the name of a database. The materials associated with this database will be appended to the
attached database. An option exists for overwriting existing records of the same name if duplicates are
encountered.
Figure 3-31  The Merged Entries Option
It is possible to merge only materials with names starting with a particular character string using the Material
Filter databox. For example, if all materials beginning with the string SAE are desired, then type SAE into the
databox. When specifying a material filter, an additional form will appear at each material encountered with
the option of merging it (YES), skipping it (NO), turning the prompt off and accepting all materials
encountered (ALL), or stopping the merge (QUIT).&lt;/p&gt;
&lt;p&gt;361 APPENDIX C
Utilities
Main Index
Figure 3-32  Confirmation of Merged Entries
Copy Entry
This option simply asks for you to select an existing material entry in the database. It will then ask you for a
new name or names and then duplicate the rest of the materials information and create a new material entry.
Figure 3-33  Copy Entry Screen
Delete Option
This option allows for deletion of a material from the database. The material to delete is the one currently
selected (material dataset one or two). To delete a different material from one currently loaded in the database
manager, it is first necessary to load the material using the Load Option, 348 , or use the selected Selected Entries&lt;br&gt;
option.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)362
Main Index
Figure 3-34  The Delete Option
Note that PF MAT must receive the user’s permission before permanently deleting data. Also, if deleting a
material from the central database, the password is necessary. See the Edit Option, 350  for information about the
password.
Figure 3-35  Delete Confirmation Screen
Selected  Entries
This feature allows for deletion of more than one material entry from the attached database at one time.
Again, a character string may be entered to specify materials which start with that particular sequence. As
with merging records, confirmation is requested to delete the material (Yes), skip it with no delete (No), turn
the prompt off and delete all records encountered (All), or stop the delete entirely (Quit).&lt;/p&gt;
&lt;p&gt;363 APPENDIX C
Utilities
Main Index
Figure 3-36  Delete Selected Material Entries
Figure 3-37  Delete Confirmation Screen
Weld Class ifier Option
Fatigue analysis model for welds has been thoroughly tested and approved by the British Standards Institute
(BSI). The standard which defines the procedures for weld durability analysis is BS7608, Part 10 (Ref. 1). In
this standard, weld types are defined according to a set of rules. These rules have been encoded in this menu
option in order to identify the weld type for the weld under analysis. The Weld classification main menu is
presented in Figure 3-38 with a brief description of the three main paths through the program.
Figure 3-38  Weld Classifier Main Menu
From this point, you may select one of the three options and follow a particular path through the weld
classification questions.
The major paths are summarized on the flowchart in  Figure 3-39.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)364
Main Index
Figure 3-39  Partial Wel d Classifier Flow Diagram
The following notes are made with respect to classifying welds.
1.For option 2 (small hole) of Non-welded details, the diameter must not be greater than three times
the plate thickness. The hole may contain a bolt for the attachment of a minor fixture. If the edges of
the plate are cut, this must be from machining, grinding, planing, or flame cutting by a controlled
procedure.
2.Option 4 of Non-welded details applies to bolt threads conforming to BS3692 or BS4395, and rod
threads conforming to BS3643 part 2.
3.Option 1 of Welded details on the surface of a member includes long attachments welded by
intermittent longitudinal fillet welds, even if the individual welds are less than 150mm long.
4.For options 2 and 3 of Welded details at end connections, “members” includes built-up members,
rolled steel members, and rolled steel plates. Option 2 also applies if a third transverse member is
present between the two members being joined — see BS7608 (Ref. 1).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P2</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_002/</guid>
      <description>
        
        
        &lt;p&gt;5 CHAPTER 1
Fundamentals of Fatigue Analysis
Main Index
Design Philosophies
There are three main fatigue design philosophies. Each centers around one of the fatigue life estimation
methodologies. To illustrate the three, consider the design of a stool.
Safe Life
The Safe Life  philosophy is a philosophy adopted by many, but especially the ground vehicle industry.
Products are designed to survive a specific design life. Full scale tests are usually carried out with margins of Total Life (S-N) Crack Initiation ( -N)
Linear Static
SOL 101Supported Supported
Normal Modes
SOL 103Supported Supported
Modal T ransient Response
SOL 112Supported Supported
Frequency Response
SOL 108 &amp;amp; SOL 111Supported Supported
Design Optimization1
1For frequency domain solutions, please see the MSC Nastran Embedded Vibration Fatigue Us -
er’s Guide .One of either:
ANALYSIS=STATIC
ANALYSIS=MFREQ
ANALYSIS=DFREQOne of either:
ANALYSIS=STATIC
ANALYSIS=MFREQ
ANALYSIS=DFREQ&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Design Philosophies6
Main Index
safety applied. In general, this philosophy results in fairly optimized structures such as a stool with three legs.
Any less than three legs and it would fall over.
This philosophy adopts the crack initiation method and is used on parts and components that are relatively
easy and inexpensive to replace and not life threatening if failure were to occur. Most of the life is taken up
in the initiation of a crack. The propagation of that crack is very rapid and short in comparison.
Fail Safe
On the other end of the spectrum of design philosophies is that of Fail Safe . This is where a failure must be
avoided at all costs. And if the structure were to fail it must fall into a state such that it would survive until
repairs could be made. This is illustrated with our stool now having six legs. If one leg were to fail, the stool
would remain standing until repairs could be made. This philosophy is heavily used in safety critical items
such as in the aerospace or offshore industries.
Dam age Tolerant
The middle ground philosophy is that of Damage Tolerant . This philosophy, adopted heavily in the
aerospace community and nuclear power generation, relies on the assumption that a flaw already exists and
that a periodic inspection schedule will be set up to ensure that the crack does not propagate to a critical state
between inspection periods. As implied, this philosophy adopts the crack growth method. This is illustrated
using our stool (now with four legs) and with someone inspecting it occasionally.&lt;/p&gt;
&lt;p&gt;7 CHAPTER 1
Fundamentals of Fatigue Analysis
Main Index
This particular design philosophy is generally used in conjunction with the fail safe philosophy, first to design
for no failure. and then to assume that, for whatever reason, a flaw exists and must be monitored. MSC
Nastran’s cohesive zone and virtual crack closure  technique (VCCT) modeling capabilities or some other
fracture mechanics technique (LEFM  based) are best suited for this damage tolerant design philosophy and
are not covered topics of this manual. Fail safe and safe life philosophies using the S-N and -N methods are
the topics covered by this manual.
Life Estimation Process
The life estimation process really centers around two major relationships.
1.The first rel ation is that of the loading environment to the stresses and strains in the component or
model. This load-strain or load-stress relation is determined using finite element modeling and
running linear elastic FE analysis. It is dependent on the characterization of the material properties
and in some instances, requires that a Notch Correction  procedure take place. For the purposes of this
discussion a notch correction is simply a way to compensate for plasticity from a linear FE analysis.
2.The seco nd relation is that of the stresses or stains to the life of the component or model. This is
accomplished by using damage modeling. Each fatigue life method has its own techniques to
determine and sum damage which shall be explained as you progress through the example problems.
When to Use Which Method
Of the three fatigue methods used to predict life, it is important to understand when to use which. This will
become more evident as you proceed through this manual and work each exercise. As a quick answer to this
question, the following guidelines are presented.
Stress-Life (S-N or To tal Life)
Long life or High Cycle Fatigue (HCF)  problems, where there is little Plasticity  since the S-N
method is based on nominal stress&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
When to Use Which Method8
Main Index
Components where crack initiation or crack growth modeling is not appropriate, e.g., composites,
welds, plastics, and other non-ferrous materials
Situations where large amounts of pre-existing S-N data exist
Components which are required by a control body to be designed for fatigue using standard data
such as MIL handbook data.
Spot weld analysis and random vibration induced fatigue problems
Strain-Life (Crack Ini tiation or Local Strain or -N)
Mostly defect free, metallic structures or components
Components where crack initiation is the important Failure Criterion  - safety critical components
Locating the point(s) where cracks may initiate, and hence the growth of a crack should be
considered
Evaluating the effect of alternative materials and different surface conditions
Components which are made from metallic, isotropic ductile materials which have symmetric cyclic
stress-strain behavior
Components that experience short lives -  Low Cycle Fatigue (LCF)  - where plasticity is dominant
Crack Gro wth (Damage Tolerant Design)
Pre-cracked structures or structures which must be presumed to be already cracked when
manufactured such as welds
Prediction of test programs to avoid testing components where cracks will not grow
Planning inspection programs to ensure checks are carried out with the correct frequency
To simply determine the amount of life left after crack initiation
Components which are made from metallic, isotropic ductile materials which have symmetric cyclic
stress-strain behavior&lt;/p&gt;
&lt;p&gt;Chapter 2: Introduction to User Interface
2 Introduction to User Interface
Overview
FATIGUE Case Control
Fatigue Element Definitions
Fatigue Parameters
Fatigue Loading
Analysis Model Units
Fatigue Optimization
Tips for Enhancing Performance&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Overview10
Main Index
Overview
Fatigue analysis using MSC Nastran consists of a FATIGUE case control output request and various bulk
data to define cyclic material properties, loading definitions , and various other parameters, each of which is
described in this Chapter. A brief description of each entry is given below. Details of each entry are given in
subsequent sections of this Chapter and apply only to time domain based fatigue analysis.
Case Control
Bulk DataFATIGUE Request a fatigue analysis and resultant life and d amage output. See
FATIGUE Case Control .
DRESP1 Define fatigue responses in optimization (SOL200) runs. See
Fatigue Optimization .
DTI, UNITS Specify the model analysis stress units. See Analysis Model Units .
FTGDEF Define areas (elements) of the model on which to perform fatigue
analysis. See Fatigue Element Definitions .
FTGPARM Define various fatigue parameters such as the type of fatigue
analysis. See Fatigue Parameters .
FTGEVNT Define loading events consisting of one or more simultaneously
occurring cyclic loading definition. Fatigue Loading .
FTGLOAD Associate loading from a particular subcase or mode to its time
(cyclic) variation. Fatigue Loading .
FTGSEQ Define a sequence of load events, sometimes referred to as a duty
cycle. Fatigue Loading .
MATFTG Define cyclic material properties in the form of S-N or -N data.
See Fatigue Element Definitions .
PFTG Define various physical fatigue properties to the elements of
interest. See Fatigue Element Definitions .
TABLFTG Define the cyclic variation of a particular load. Fatigue Loading .
UDNAME Alternate method to associate the cyclic variation of a particular
load to an external file. Fatigue Loading .&lt;/p&gt;
&lt;p&gt;11 CHAPTER 2
Introduction to User Interface
Main Index
Relationship Between Inputs
The relationship between each entry and other property entries is illustrated below.
Case Control (defines fatigue life output request):
FATIGUE[([SORT1,SORT2],[ PRINT,PLOT],[FORMAT=CODE], [STROUT=CODE],[ BULK/SET])] =n
Bulk Data:
1 2 3 4 5 6 7 8 9 10
FTGPARM ID TYPE FACTOR NTHRD LOGLVL LAYER
&amp;ldquo;STRESS&amp;rdquo;
or
“STRAIN”COMB CORR PLAST LOC INTERP RECOVER SRESOLVE
&amp;ldquo;CERTNTY&amp;rdquo; SURV
&amp;ldquo;FOS&amp;rdquo; OPTION LIFE BACKACC MAXFAC
etc.
1 2 3 4 5 6 7 8 9 10
FTGDEF ID TOPSTR PFTGID  TOPDMG NENTS maxENTS NHS HSGATE
&amp;ldquo;ELSET&amp;rdquo; ELSID1  PFTGID1  ELSID2  PFTGID2  ELSID3  PFTGID3&lt;br&gt;
ELSID4  PFTGID4  &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
&amp;ldquo;XELSET&amp;rdquo; XELSID1 XELSID2 XELSID3 XELSID4 XELSID5 XELSID6 -etc-
1 2 3 4 5 6 7 8 9 10
FTGSEQ ID EVNTOUT METHOD
FID1  N1 FID2  N2 FID3  N3 -etc-
&amp;ldquo;UNITS&amp;rdquo; EQUIV EQNAME
1 2 3 4 5 6 7 8 9 10
FTGEVNT ID FLOAD1  FLOAD2 FLOAD3 FLOAD4 FLOAD5 FLOAD6 -etc-
1 2 3 4 5 6 7 8 9 10
FTGLOAD ID TID  LCID  LDM  SCALE   OFFSET TYPE
1 2 3 4 5 6 7 8 9 10
MATFTG MID  CNVRT
&amp;ldquo;STATIC&amp;rdquo; YS UTS CODE TYPE RR  SE
“SN”  SRI1 b1 Nc1 b2 Nfc&lt;br&gt;
M1 M2 M3 M4
&amp;ldquo;TABLE&amp;rdquo; VALUE1 TID1  VALUE2 TID2 VALUE3 TID3&lt;br&gt;
VALUE4 TID4  &amp;hellip; &amp;hellip; -etc.-
&amp;ldquo;EN&amp;rdquo; Sf b c Ef n K Nc
SEe SEp SEc Ne FSN S
1 2 3 4 5 6 7 8 9 10
PFTG ID  FINISH KFINISH KF  SCALE OFFSET&lt;br&gt;
SHAPE KTREAT  What to Calculate
Where to Calculate
Cyclic Loading}
Materials
PropertiesPoints to SET1, SET3, SET4
entries to define elements
Points to SUBCASE for
stress/strain extraction
Points to TABLFTG or TABLED1 or
UDNAME to define cyclic loading
Associated to PSHELL,
PSOLID, et.c and corre -
sponding MAT1 entries.Points to TABLEM1 for
defining discrete S-N
curves.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Overview12
Main Index
Output Files
Various output files are created during a fatigue analysis as described here.
&lt;!-- raw HTML omitted --&gt; refers to the jobname and &lt;!-- raw HTML omitted --&gt; refers to the FATIGUE  output request ID within a specific job.
&lt;!-- raw HTML omitted --&gt; refers to the fatigue analysis type, which can take the following: SN for standard S-N analysis, EN for
standard e-N analysis, SP for fatigue analysis of spot welds, SM for fatigue analysis of seam w elds.
If the analysis splits the job due to memory issues and runs out-of-core, then  &amp;lt;&lt;em&gt;c#&amp;gt; is appended in
accordance with how many splits are made for certain output files. An additional file for each split ( #) is
created in this case.
File Description
&lt;!-- raw HTML omitted --&gt;.f06
&lt;!-- raw HTML omitted --&gt;.f04
&lt;!-- raw HTML omitted --&gt;.logStandard Nastran output files containing results, statistics,
messages. Always check these files for possible errors if the job is
not running to completion properly. The fatigue results are always
printed in the &lt;!-- raw HTML omitted --&gt;.f06  file.
&lt;!-- raw HTML omitted --&gt;.MASTER
&lt;!-- raw HTML omitted --&gt;.DBALLNastran database necessary to restart jobs . The DBALL file can be
very large. These files are not create if job is submitted with scr=yes
(scratch).
&lt;!-- raw HTML omitted --&gt;.h5 Nastran HDF5 file that can be requested with the
MDLPRM,HDF5,0 parameter. Fatigue results are stored in the
&lt;!-- raw HTML omitted --&gt;.h5  file, which can also be attached to a Patran database.
&lt;!-- raw HTML omitted --&gt;.op2 Nastran OUTPUT2 file that can be requested with the
PARAM,POST ,1 parameter. Fatigue results are stored in the
&lt;!-- raw HTML omitted --&gt;.op2  file, which can also be accessed by P atran . Fatigue
results are NOT stored in the &lt;!-- raw HTML omitted --&gt;.xdb  file, which is requested
with PARAM,POST ,0. Requesting an OUTPUT2 file using
PARAM,POST ,-1, also does NOT store the fatigue results. Please
use only the &lt;!-- raw HTML omitted --&gt;.op2  produced with PARAM,POST,1 to
postprocess in Patran.  Requesting an HDF5 file is the preferred
method.
&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;.log
&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;_&lt;!-- raw HTML omitted --&gt;.txtDebug output files from the fatigue analysis. LOGLVL must be
set on the FTGPARM  entry to spill the debug results to these files.&lt;br&gt;
Data in these files can further be used to resolve problems that do
not run properly to completion. Setting LOGLVL to values other
than the default can affect performance and should only be used
for debugging purposes. Data from each fatigue analysis &lt;!-- raw HTML omitted --&gt;&lt;br&gt;
run in a single job are concatenated within these files.
OpenCoreFile.nef This is a binary core dump file that can be sent to technical
support if DIAG 23 is included in the Executive Control section
of the input file.&lt;/p&gt;
&lt;p&gt;13 CHAPTER 2
Introduction to User Interface
Main Index
&lt;!-- raw HTML omitted --&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;.csv
&lt;!-- raw HTML omitted --&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;.fef
&lt;!-- raw HTML omitted --&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;.res_tmplAddition results output files that can be requested through the
FORMAT option on the FATIGUE  case control. These contain
only results from the fatigue analysis.
Depending on the CODE used on the FORMAT command, a _T
or _B may be appended to the name indicating the results are for
the top or bottom layer.  If an _N or _E is appended, this indicates
nodal or elemental data, respectively. O ther designations may  be
appended for worst case ( _W), superelement # ( _SE# ), event #
(_EV# ), event sum ( _EVS ), or out-of-core # ( _c#). The&lt;br&gt;
.res_tmpl  file is used by Patran to know how to interpret the
colums of data in the .fef file output.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
FATIGUE Case Control14
Main Index
FATIGUE Case Control
All fatigue analyses must be initiated with a FATIGUE case control output request as described below.
Requests one or more fatigue analyses for use in pseudo-static (SOL 101), modal (SOL 103) and modal
transient (SOL 112) runs.
Format :
Examples:
Three examples are shown here. The first and second are identical and use the default BULK option where
bulk data entries FTGDEF , FTGPARM , and FTGSEQ  of ID 42 are called out for the fatigue analysis. The
third example shows the SET option where case control SET ID 99 i s called out. The case control SET of
ID 99 contains two IDs, 100 and 200. Output from two separate fatigue analyses is requested where bulk
data entries FTGDEF , FTGPARM , and FTGSEQ  of IDs 100 and 200 are called out.
FATIGUE= 42
FATIGUE(BULK)= 42
SET 99 = 100, 200
FATIGUE(SET)= 99FATIGUE Fatigue Output Request
Describer Meaning
SORT1 Printed output is presented as a tabular listing of elements for each fatigue analysis
or event. In the case of duty cycle, where multiple events are output
(EVNTOUT=1 on FTGSEQ bulk data), each event is presented as a separate
fatigue analysis. Output written to the OEFTG data block is always in SORT1
format.
SORT2 Printed output is presented as a tabular listing of events for each element, node, or
angle. This is only applicable for duty cycle (loading sequences with more than one
event - EVNTOUT=1 on FTGSEQ bulk data). If there is only one event, the
output is identical to SORT1. Output written to the OEFTG data block is always
in SORT1 format.FATIGUE(SORT1
SORT2PRINT, PUNCH
PLOTFORMAT CODEBULK
SET
STATICS =
STROUT CODE = ) 
 n=&lt;/p&gt;
&lt;p&gt;15 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.Both PRINT and PUNCH may be requested.
2.A single FATIGUE  case control is required to perform one or more fatigue analyses and must be
present above the SUBCASE level. If not present, no fatigue analysis will occur regardless of the
presence of other bulk data related to fatigue analysis.
3.It is not necessary to include any case control STRESS and/or STRAIN output requests in order for
the FATIGUE output request to obtain the necessary stresses or strains for the fatigue calculation.
4.For a single fatigue analysis, BULK=n points to a FTGDEF , a FTGPARM , and a FTGSEQ  (or
FTGLOAD ) entry, each with ID=n.
5.For multiple fatigue analyses, SET=n points to a previously appearing SET case control and each
member of the SET is the ID of a FTGDEF , a FTGPARM , and a FTGSEQ  (or FTGLOAD ) bulk
data entry with that ID.
6.A fatigue analysis must have, at a minimum, loading and material data defined on either FTGSEQ&lt;br&gt;
or FTGLOAD  and MATFTG  bulk data entries, respectively, for a fatigue analysis to be valid.
FTGPARM  and FTGDEF  entries can be absent, in which case, defaults are u sed. PRINT  or (blank)
PUNCH
PLOT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The .op2  binary database file is generated with “PARAM,POST, X” (or the POST Case Control
command), while the .h5 binary database file is generated with “MDLPRM,HDF5, X” specified in
Bulk Data Section. Both .op2 and .h5 file can be created simultaneously. Note .xdb  file is being
deprecated. See Remark 14. regarding data blocks produced by the FATIGUE Case Control.
FORMAT Request that fatigue be output in specific file formats. See Remark 7. and   11.
STROUT Request that certain stress or strain output be included. See Remark 12. and 13.
CODE Codes for specific file format or stress output . See Remark 7., 11., and 12.
BULK Specifies that the n refers directly to bulk data IDs of FTGSEQ/ FTGLOAD,
FTGPARM and FTGDEF entries of the same ID (default) . See Remark 4.
SET Specifies that the n refers to a previously appearing SET ID. See Remark 5.
STATICS SOL 200 only . Specifies the FATIGUE case control is for ANALYSIS=STATICS
subcases in a SOL 200 optimization run. This is the default if not specified. See
Remark 10.
n ID of a SET case control entry (SET option) or ID of FTGSEQ/FTGLOAD,
FTGPARM, FTGDEF bulk data entries of the same ID (BULK option). See
Remark 4. and 5.Printer File (.f06) Punch File (.pch) Plot File (.op2/.h5)
X X*
X X*
X*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
FATIGUE Case Control16
Main Index
7.The following additional, optional, fatigue output file formats may be requested. The given codes
must be summed if multiple files are requested. Example: CSV file and FEF file CODE would be
64+128=192. Note the following:
•For multi-layered results, such as shells that compute top and bottom results, a separate file for
each is generated for FEF formats with _T or _B designations in the file n ame. For FEF file
output, if only a single file with worst case layer results is desired, add 256 or 10,000 to the
CODE. In this case no additional designation is put in the file name or _W is used. Using the
above example would give 448 or 10192. Either mechanism works. Other designations that can
appear in the filenames are _N or_E for element nodal or element al, respectively, and _EVi for
event i, or _EVS  for event summary only.
•Note that CSV file output only ever creates a single file as both layers are reported in the single file.
•Some output is not available for duty cycle jobs if EVNTOUT&amp;gt;0 on the FTGSEQ  bulk data
entry. Check messages if the .f06 and .log files if the requested output files are not being
generated.
8.RESTARTs are possible with FATIGUE  output request as long as the stress/strain state of the entities
requested does not change. Most parameters on the FTGPARM  (LOC excluded as it requires a
different set of stresses/strains) can be changed on a RESTART. Different loading ( FTGSEQ ) and
materials ( MATFTG ) can also be investigated using the RESTART capability.
9.Standard fatigue output is: File Format CODE
No additional output 0
CSV File (Comma Separated - Excel File) 64
FEF*/TML  (Patran Results File  and T emplate File ) 128
*SOL 101, 103, 112  produce FEF files of type ‘PATRAN 2els’ or
‘PATRAN 2nod’ with .fef  extension; Also see Remark 11.
Stress-Life (SN) Analysis Strain-Life (eN) Analysis
LIFE (Repeats) LIFE (Repeats)
LOG of LIFE (Repeats) LOG of LIFE (Repeats)
LIFE (user units *) LIFE (user units)
LOG of LIFE (user units) LOG of LIFE (user units)
DAMAGE DAMAGE
LOG of DAMAGE LOG of DAMAGE
MAX STRESS MAX STRESS or STRAIN †
MIN STRESS MIN STRESS or STRAIN&lt;/p&gt;
&lt;p&gt;17 CHAPTER 2
Introduction to User Interface
Main Index
10. STATICS option is utilized in SOL 200 only. Fatigue and design sensitivity analys es are p erformed
for the designated analysis type only. If STATICS is specified (default), FATIGUE case control must
be associated with subcases containing ANALYSIS=STATIC for a pseudo-static fatigue analysis and
the fatigue DRESP1 responses/constraints specified must be of RTYPE=FATIGUE. It is not
necessary to include this option as it is the default. It is available to differentiate from frequency
response, vibration fatigue options: FREQ, DFREQ, MFREQ.
11. The FEF file output request produces PATRAN 2 stye elemental or nodal ASCII results files that can
be imported directly into Patran for post processing. In order to import these files into Patran a
template file is also required in order to tell Patran how to map the columns of data in the files to
proper, meaningful labels. The analysis job produces both the FEF file and the corresponding
template files. The template file has the extension .res_tmpl  with the same base name as the FEF
file. Jobs run with LOC=ELEM or NODE on the FTGPARM entry create elemental based FEF files
for all SOL sequences. Jobs run with LOC=NODA produce nodal based FEF files. In Patran these
files are imported under the File|Import  menu with the Object  set to Results  and the Format  set to
either PATRAN 2els&amp;hellip; or PATRAN 2nod&amp;hellip;  for elemental or nodal based FEF results files,
respectively. The Element Node Results  switch must be set to Connectivity Based  for proper import
of elemental based results .
You must use the job produced template files to import the FEF files. However, if you routinely
postprocess in Patran you may wish to copy the appropriate template file to the standard template
file location provided with the Patran installation. The advantage of putting it where the standard
template files reside is that you may select it directly from the list without navigating the file browser
to the location of the job produced template files. The disadvantage is that if you use customized
fatigue equivalent units, the labels may change and not match.* User units are fatigue equivalent units as defined on the FTGSEQ  or FTGLOAD  entry
and other output is available depending on the settings of the FTGPARM  entry.
† Dependent on STRESS or STRAIN flag set on FTGPARM  entry.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
FATIGUE Case Control18
Main Index
12. The following additional, optional, stress or stain output may be requested. The given codes must be
summed if multiple requests are required. Example: CODE would be 1+2=3 for fatigue stress and
maximum stress range vector results.
13. STROUT is not honored in manual restarts using SOL FTGRSTRT (automatic restarts are OK).
STROUT=4 may use additional memory allocation o n your system. For STROUT=4, it is  highly
recommended to limit the number of requested entities on the FTGDEF  bulk data entry. If the job
stops because too many entities are requested, you can set maxENTS on the FTGDEF  entry.
STROUT=4 has the potential to produce enormous amounts of response data and external files,
which can severely affect performance and disk space. STROUT=4 produces temporary CSV
response files of each entity. These CSV files are deleted after the job completes unless scr=no is used
when submitting the job. When METHOD=0 on the FTGPARM  entry, STROUT=4 only produces
responses for each event. Additional Stress/Strain Output CODE
No additional output 0
Fatigue Stress/Strain  - these are the physical (or modal) stress/strain tensors passed
to the fatigue analysis for each requested entity of the fatigue analysis for each
SUBCASE (or mode). Valid for SOL 101, 103, and 112 only.1
Maximum Stress/Strain Range Magnitude or Vector - this is the stress/strain
maximum range magnitude (for all scalar COMB values of the FTGPARM  entry)
or vector (for 2D critical plane  analysis, COMB=CRITICAL) for all requested
entities at the critical angle for SOLs 101, 103, and 112 only, as returned from the
fatigue analysis. When LOC=ELEM or NODE on the FTGPARM entry, the
computed vector is in the basic coordinate system. For LOC=NODA, the computed
vector is in the SURFACE system as defined by OUTPUT field on the NAVG line
of the FTGPARM entry. For scalar COMB values, a vector is not computed and
only the x-component of the vector is provided. The other two components are
always zero in this case.2
Stress/Strain Range Scalar T ime History  - this is the computed scalar response time
history  in model consistent units ( for all COMBs on the FTGPARM  entry) at all
time points as returned from the fatigue analysis for SOLs 101, 103, and 112 only.
This is the actual response from which rainflow ranges and damage are computed.
While individual events are processed, the ALL event is not processed when
METHOD=0 on FTGPARM . Also LAYER=1 or 2 on the FTGPARM  entry is
honored for STROUT=4, but LAYER=0 prints values for both top and bottom. To
limit output and ensure decent performance maxENTS on the FTGDEF  entry is
defaulted to 100 and if the number of entities exceeds this, the job stops. Setting
maxENTS to a high number is not recommended due to performance issues.4
Stress/Strain Tensor Time History  - this is the computed tensor time history
response at all time points for all requested entities used by the fatigue analysis for
SOL 112 only.8&lt;/p&gt;
&lt;p&gt;19 CHAPTER 2
Introduction to User Interface
Main Index
14. Output Data Blocks: The following table indicates the output data blocks produced by the
FATIGUE case control and which parameters trigger creation of those data blocks. See the DMAP
Programmers Guide for a description of these data blocks.
Data Block Comment
OEFTG SOL 101, 103, 112 only.  This is the standard output data block  produced
simply by the presence of a FATIGUE case control , containing fatigue
life/damage and related data for time-based fatigue analysis. Data from
STROUT=2 is also written to this data block.
OEFTGM SOL 101, 103, 112 only.  This is the multiaxial/biaxial output data block
that is produced by the presence of a FATIGUE case control with the usage
of the MULTI key word on the FTGPARM entry for time-based fatigue
analysis .
OEFTGV SOL 108, 111 only.  This is the standard output data block  produced
simply by the presence of a FATIGUE case control , containing fatigue
life/damage and related data for frequency-based fatigue analysis.
OES1FS SOL 101 only.  This is a physical stress tensor data block , like OES , created
due to the presence of STROUT=1 usage in a FATIGUE case control.
OESFTGR SOL 103, 112 only . This is a modal stress tensor data block , like OES ,
created due to the presence of STROUT=1 usage in a FATIGUE case
control.
OEFTGRS SOL 101, 103, 112 only.  This is the scalar stress history response data block
created due to the presence of STROUT=4 usage in a FATIGUE case
control.
OES1FS SOL 112 only.  This is a tensor stress history data block , like OES , created
due to the presence of STROUT=8 usage in a FATIGUE case control.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions20
Main Index
Fatigue Element Definitions
To perform fatigue analysis, locations on the model (elements) and specific material and physical properties
must be specified. This is done with three main bulk data entries described here. The MATFTG  entry is
required and for each MATFTG  entry there must be a corresponding MAT1 entry, otherwise no cyclic
material definitions are available for the fatigue analysis. The other two are the FTGDEF  and PFTG  entries
used to limit the number of entities and define physical fatigue properties, respectively. If there are no
FTGDEF  and PFTG  entries, then every element in the model associated to a MAT1 / MATFTG  entry is
used with default properties.
Defines elements and their associated fatigue properties to be considered for fatigue analysis for time domain
SOLutions 101, 103, and 112.
Format:
Examples:
Defines all elements of the model (that have fatigue material properties) to use the physical fatigue properties
defined by PFTG  ID 3 for a standard fatigue analysis .
Defines actual element sets where IDs 14 and 15 refer to either SET1, SET3, or SET4 entries that define a
set of elements and each of these is assigned different physical fatigue properties defined by PFTG  IDs 3 and
4, for a standard fatigue analysis .FTGDEF Fatigue Element Definitions
1 2 3 4 5 6 7 8 9 10
FTGDEF ID TOPSTR PFTGID TOPDMG NENTS maxENTS NHS HSGATE
&amp;ldquo;ELSET&amp;rdquo; ELSID1 PFTGID1 ELSID2 PFTGID2 ELSID3 PFTGID3
ELSID4 PFTGID4 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
-etc.-
&amp;ldquo;SPOTW&amp;rdquo; ELSID1 PFTGID1 ELSID2 PFTGID2 ELSID3 PFTGID3
ELSID4 PFTGID4 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
-etc.-
&amp;ldquo;SEAMW&amp;rdquo; ELSID1 PFTGID1 NDSID1 WELD1 TYPE1
ELSID2 PFTGID2 NDSID2 WELD2 TYPE2
-etc.-
&amp;ldquo;XELSET&amp;rdquo; XELSID1 XELSID2 XELSID3 XELSID4 XELSID5 XELSID6 XELSID7
XELSID8 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
-etc.-
FTGDEF 22 100.0 3
FTGDEF 22
ELSET 14 3 15 4&lt;/p&gt;
&lt;p&gt;21 CHAPTER 2
Introduction to User Interface
Main Index
Defines three sets of elements for fatigue analysis of spot welds, each with its own property set that can be
used to define the nugget diameter and connecting sheet thicknesses .
Defines two sets of elements for fatigue analysis of seam welds, each with its own weld, type, but sharing
property set 99, and the first weld defining the seam line with node set 31 .FTGDEF 22
SPOTW 44 1 45 2 46
FTGDEF 22
SEAMW 44 99 31 FILLET TOE
45 99 LASER ROOT
Field Contents
ID Unique identification number  called out by a FATIGUE  case control .(Integer &amp;gt; 0).
TOPSTR T op stress percentage. Retains and reports only the percentage of entities with the
highest simple stress range. Cannot be used with SOL 200 or for fatigue analysis of spot
and seam welds; leave blank. (-100.0  Real 100.0; Default = blank - 100% is used).
See Remark 8.
PFTGID ID of a PFTG  entry for associating fatigue properties to all elements of the model.
Ignored if ELSET flag is present and should be left blank in this case. (Optional, Integer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0). See Remark 2.
TOPDMG T op damage percentage. Retains and reports only the percentage of entities with the
highest damage. (0.0 &amp;lt; Real 100.0; Default = blank). Cannot be used with SOL 200
or for fatigue analysis of spot and seam welds; leave blank. S ee Remark 8.
NENTS Specifies the number of actual entities to output in order to limit or further reduce
output file sizes based on most damage or maximum stress/strain range. A positive value
indicates the criterion for entity filtering is based on the most damaged entities. A
negative number indicates the filtering criteria is based on maximum stress/strain range.
(Integer  0; Default = blank). Not valid for SOL 200; leave blank. See Remark 10.
maxENTS This is used only if STROUT=4 is specified in the FATIGUE  case control. If the
number of entities requested is greater than maxENTS, the job stops to avoid
performance issues. Setting this to a large number can severely affect performance.
When using STROUT=4, the number of entities should be limited. (Integer &amp;gt; 0;
Default = 100).  See Remark 11.
NHS SOL 101, 103, 112 only. Specifies the number of hot spots to identify in the model.
(Integer &amp;gt; 0; Default = blank). This setting overrides TOPSTR and/or TOPDMG. See
Remark 8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions22
Main Index
HSGATE SOL 101, 103, 112 only. Number of element layers to keep around each hot spot
defined by NHS. Zero (0) indicates that only the hot spot elements are retained.
Otherwise HSGATE layers of connected elements around each hot spot element are
retained. (Integer &amp;gt;0; Default = 0).
ELSET Flag indicating that a list of element set and property pairs will follow, defining the
elements and their associated properties for consideration in the fatigue analysis.
(Optional, Character = ELSET) See Remark 9.
ELSIDi ID of a SET1, SET3, or SET4 entry listing entities of the model (elements) to be
included in the fatigue analysis. (Integer &amp;gt; 0).  See Remark 3.
PFTGIDi ID of a PFTG  entry, which indicates the fatigue property associated to the preceding
entities defined by ELSIDi. (Optional, Integer &amp;gt; 0). See Remark 2.
SPOTW Flag indicating that a list of element set and property pairs will follow, defining the
elements and their associated properties for fatigue analysis of spot welds. See Remark
5. and 6.
ELSIDi Same as ELSIDi under ELSET above  but for SPOTW entry . See Remark 3.
PFTGIDi Same as PFTGIDi under ELSET above  but for SPOW entry.
SEAMW Flag indicating that a list of element set and property pairs will follow, defining the
elements and their associated properties for fatigue analysis of seam welds.
See Remark 5.
ELSIDi Same as ELSIDi under ELSET above.  but for SEAMW entry.  These are to elements
that make up the seam weld toe, root, or throat. See Remark 3.
PFTGIDi Same as PFTGIDi under ELSET above  but for SEAMW entry.
NDSIDi ID of a SET1 or SET3 entry listing grids of the elements defined by ELSIDi to be
retained in the analysis. These grids define the seam line of the seam weld. If left blank,
all nodes of the elements are retained. Nodes defined that are not associated to elements
of ELSIDi are ignored. (Optional, Integer &amp;gt;0).
WELDi Seam weld definition. One of the following: FILLET, OVERLAP , LASER, EDGE, or
GENERIC, which define either a fillet, overlap, laser overlap, laser edge overlap or
generic seam weld, respectively. (Character; Default=GENERIC). See Remark 7.
TYPEi The type location on the seam weld that this set of elements represent. One of the
following: TOE, ROOT , or THROAT. (Character; Default = TOE for all but WELDi
= LASER where Default = ROOT). See Remark 7.
XELSET Flag indicating that sets of elements to be excluded from the fatigue analysis will follow.
(Optional, Character).  See Remark 4.
XELSIDi ID of a SET1 or SET3 entry listing elements of the model to be excluded from the
fatigue analysis. (Integer&amp;gt;0).  See Remark 3.Field Contents&lt;/p&gt;
&lt;p&gt;23 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.FTGDEF  bulk data entries are ignored if not selected by a FATIGUE  case control.  If no FTGDEF&lt;br&gt;
is present for a given fatigue analysis  (or only the FTGDEF  with no ELSET line) , all elements of the
model that have fatigue material properties defined are used with default properties except for fatigue
analysis of spot and seam welds. Also se e Remark 5.
2.If no PFTGID or PTFGIDi is specified, default properties are assigned to the entities.
3.If a SET3 is specified, field 3 of the SET3 entry must be set to &amp;ldquo;ELEM&amp;rdquo;. The SET4 entry must be
specified to select elements by property ID. The following elements referenced by PSHELL,
PSHEAR, and PSOLID properties are supported for standard S-N and -N fatigue analysis:
CQUAD4, CQUADR, CQUAD8, CSHEAR, CTRIA3,CTRIAR, CTRIA6, CHEXA, CPENTA,
CPYRAM, and CTETRA. The following elements referenced by PBAR, PBEAM, PSOLID, and
PWELD properties are supported for fatigue analysis of spot welds: CBAR, CBEAM, CHEXA,
CWELD. Only elements referenced by PSHELL properties are available for fatigue analysis of seam
welds, excluding TRIA3 as no corner stresses are available from this element.
4.If only the XELSET flag is present, then the entire model is included in the fatigue analysis less the
excluded entities.
5.For fatigue analysis of spot or seam welds, the FTGDEF  card is required with the corresponding
keyword and line defining the elements of interest.  If standard SN/ N analysis is also requested, then
an ELSET line is required, otherwise the standard SN/ N analysis is ignored.
6.Elements used to represent spot welds are typically very stiff bar or beam (CBAR/CBEAM) elements,
weld (CWELD) elements, or individual solid (CHEXA) elements. These elements connect the two
metal sheets defined by shell elements (CSHELL). Bars and beams must connect directly to the grids
of the shells, whereas welds and fasteners only need to pierce the shell elements. If individual solid
elements are used, face G1-G2-G3-G4 must have its grids connected to shell elements that define the
top sheet  (sheet 1)  via RBE3 rigid elements. And face G5-G6-G7-G8 must have corresponding RBE3
elements connecting the bottom sheet  (sheet 2) . Some CWELD options auto-generate grids on the
top and bottom metal sheets (when only GS grid is defined on CWELD entry with no GA/GB grids);
the fatigue results are associated to these generated grids.
7.The normals of the throat elements should point outward toward the welder, except for laser overlap,
in which case the normals just need to be consistently the same direction. The elements defining the
toe and root of the weld must have the top of the shell (Z2 layer) be the side where the crack is
expected to develop. For full descriptions of the throat, root, and toe elements for the various seam
welds, please see the MSC Nastran Embedded Fatigue User’s Guide , which show proper modeling
techniques. The WELDi and TYPEi entries are used for labeling purposes only and have no effect on
internal calculations.
8.Use of TOPSTR/TOPDMG, or NHS/HSGATE allows the user to significantly speed up the
analysis times of very large models to more quickly determine the critical damage locations and
reduce output. The preferred method is to use NHS/HSGATE as opposed to TOPSTR and/or
TOPDMG. If NHS is defined, it overrides any TOPSTR and/or TOPDMG settings, as they are
mutually exclusive.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions24
Main Index
•NHS/HSGATE: This method determines high damaged areas called hot spots . The algorithm is
such that the hot spots  detected are distinct from one another. In other words, if two adjacent
elements show the highest damage, and NHS=2, the two adjacent element only count as one hot
spot and another hot spot away from the first one is detected. In order to show nice postprocessing
plots, use HSGATE to retain a certain number of element layers around each hot spot element.
If HSGATE=0, only a single element for each hot spot is retained, which means that not all the
highest damaged elements are likely reported.
•If TOPSTR is used alone (TOPDMG is left unspecified), and is a positive percentatge, then a two
(2) pass analysis is performed where the first (1st) pass determines the approximate percentage of
entities to retain with the highest simple stress range. The second (2nd) pass computes damage on
only the remaining elements. The simple range test is done using this equation:
where Maxk and Mink are the maximum and minimum values from each channel of loading
history (load case k). SCALE and LDM are the scale factor and divisor as defined on FTGLOAD&lt;br&gt;
entries for each load case k, otherwise unity is used.
The calculation is similar for strains, except that the output is in strain units, and the calculation
of vonMises strain requires a value of the Poisson ratio. For the purposes of this simple ranking
procedure, the Poisson ratio is assumed to be 0.3. When the analysis involves a duty cycle (loading
sequence), the resulting assessed stress is the largest value from each of the events in the duty cycle.
If a negative percentage is given, then the retained elements are determined based on the actual
stress range after combination and superposition using that specified on the FTGPARM entry. As
an example, if TOPSTR=10%, and the highest stress range is determined to be 1000MPa, then
any entity with stress range higher than 900MPa is retained (10% of 1000 is 100; 1000-
100=900). This can have the effect of retaining many less entities tha n the positive percentage
method, but has the drawback of being extremely sensitive to high stress gradients.
•If TOPDMG is used alone (TOPSTR=100% or left unspecified), the percentage of entities
returned are simply based on the highest damage. This does not necessarily reduce computation
time, but does significantly reduce result recovery time as less entities are retained.
•If TOPSTR and TOPDMG are both specified, then a 2-pass analysis is performed where the first
(1st) pass eliminates all but the highest stressed entities and the second (2nd) pass returns only the
percentage of damaged entities based on those retained in the 1st pass.
•If none of TOPSTR, TOPDMG, or NHS are specified (all are blank or default), then a complete
analysis is done on all requested elements. This is the default scenario.
9.Element sets must be the same for all FATIGUE case control IDs that request surface resolved stresses
through the FTGPARM  entry (SRESOLVE field = YES). Otherwise a fatal condition is flagged and
the analysis stops.assessedMaxkMink– SCALEkvonMisesk 
LDMk&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
k=&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P20</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_020/</guid>
      <description>
        
        
        &lt;p&gt;365 APPENDIX C
Utilities
Main Index
Depending on the options selected, prompts for a series of questions defining the details of the weld will be
given. At the end of the consultation, PFMAT will report a weld classification similar to Figure 3-40.
Figure 3-40  Typical Weld Classification Example
Graphical D isplay Option
The graph ical display submenu leads to a dynamic menu of graph types. The possible options are shown in
Figure 3-41.
Figure 3-41  The Graphical Display Option&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)366
Main Index
To select a particular plot for one or two materials, first load the material dataset(s) and then select the
Graphical displays menu option. Pick one of the plots by moving the cursor over the required plot description
and press the mouse button. In some cases, additional information will be required. If this is necessary, enter
the data in the databoxes which will be enabled when the appropriate plot type is requested. Then use the
OK button to display the plot.
The plot will be displayed together with some pull down options menus at the top of the window. Not all
options will be present on all graphical display menus since some of the options are data-type specific.
Figure 3-42  Menu Options on the Graphical Display Screen
Many of the preferences and other options available through these pull-down menus are generic for graphical
operations throughout the system and are not discussed here. The operation of this graphical user interface
is described in  Module Operations  (App. 18), as well as the commands that may be entered in the Command
databox. The functions of the pull-down menus which are specific to PF MAT are described below :Important:   The Graphical display submenu may change in detail according to the data present in the
dataset.&lt;/p&gt;
&lt;p&gt;367 APPENDIX C
Utilities
Main Index
The following keyboard letters perform the functions described below:Option Description
Scatter Curve This option plots the +/-3 standard deviation lines for the S-N curve.
Elastic Line This option adds the linear elastic to the cyclic and/or monotonic stress-strain
curves (i.e., the line that defines Young&amp;rsquo;s Modulus).
E-P L ines This option adds the elastic and plastic strain-life response lines to the strain-life
curve.
Fatigue Limit This option adds the fatigue limit line to the stress-life or strain-life curves.
Remove Lines This option removes the elastic and plastic strain response lines, elastic line, and
the fatigue limit line and scatter curve from the plot.
X-Window This option allows definition of the width of the plot in terms of the x -coordinates
by entering two X positions using the keyboard. The input is prompted for in the
Command databox. The mouse can also be used to window around a certain
location by positioning the cursor and the RIGHT button depressed to mark each
window edge. After the second edge is selected, the plot will be redrawn
automatically. The first mouse click is the lower left corner.
Y-Window This option allows definition of the height of the plot in terms of the y-coordinates
by entering two Y positions using the keyboard. The input is prompted for in the
Command databox. The mouse can also be used to window around a certain
location by positioning the cursor and the RIGHT button depressed to mark each
window edge. After the second edge is selected, the plot will be redrawn
automatically. The first mouse click is the lower left corner.
Full Plot This option redraws the whole plot from the minimum x and y values to the
maximum x and y values.
Important:   You can obtain coordinate locations on any of the graphs by placing the mouse cursor over
the graph and depressing the LEFT mouse button. The coordinates are reported in the upper
left corner of the window below the pull-down menus.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)368
Main Index
Preferences Option
This option gives the chance to select the units of stress or strain that all records will use, to set material
checking on or off, to change the S-N cur ve axis, or change the working database. Each of these options has
its own options from which to choose from.
Figure 3-43  The Preferences Options
Stress units available are:  MPa, PSI, KSI, N/ , MN/  (strain or microstrain). Note that when
different units are used the database is not actually changed, they  are passed through a conversion factor table
stored in PFMAT and then displayed on screen.
Through the Preferences option there is the ability to turn material range checking on or off. When editing
or creating new materials PFMAT , check to see that certain numerical values are within acceptable ranges. If
not, PFMAT will not allow entry unless Material checking is set to OFF .Option Description
V Coordinates: place the cursor anywhere over the graph and depress the V key. The
coordinates of the graph will be reported in the upper left corner of the window.
P Plot: the P key will replot the graph.
W Window: place the cursor anywhere in the graph to define the lower left corner of
a new window and depress the W key. Move the cursor to the upper right corner
and depress the W key again. The plot will automatically update to define the new
window.
mm2mm2&lt;/p&gt;
&lt;p&gt;369 APPENDIX C
Utilities
Main Index
The axis of the S-N curve can be modified to report either the stress range or the stress amplitude.
The currently attached or working database may be changed to another database through the Database select
option. The three choices are either the central database delivered with the system, a local copy of the central
database, or a user created database. If the user-created database is specified, a window will appear allowing
selection of the user’s database.
All of these preferences can be saved locally or globally.
Figure 3-44  Saving the Users Preferences
If saved globally, then each time PFMAT is invoked, these preferences will be retained regardless of the
directory in which the program is running. If saved locally, then the settings will only be retained in the local
directory in which PFMAT is running. This is done via a envi.usr  file. There is also a “no save” option
which will only remember the setting during the current session. Once PFMAT is exited, the preference will
be set back to the previous setting. The user is prompted for this save option each time the preferences are
changed.
Exit Option
The Exit option will exit the materials database manager, PFMAT, and take the user back one level to the
main menu or return the user to the operating system if PFMAT is being run in stand-alone mode. At this
stage, a new ASCII database index file ( pfmat.adb ) is produced for use as necessary. This file is saved in the
local directory only if there is a local database. Otherwise the file is retained centrally.
PFMAT in B ATCH Mode
The whole of PFMAT cannot be operated in batch, however, to automate the creation of the materials
database, the Create option may be operated from batch. This is useful for those who have existing material
databases in ASCII format who wish to transfer these to PFMAT.
The format for entering materials data in batch is slightly different than other batch operations of these
programs described throughout the guide. The batch file command line points to a file which contains the
list of keywords, material parameters, and values required to describe the particular materials. The command
below references the ASCII file mymat.mat  as an example.
Important:   T o set the preference globally, it may be necessary to set the appropriate protection on the
envi.sys  file delivered with the system. Check with the system manager.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)370
Main Index
pfmat @mymat.mat
Note that there should be NO space between the @ and the file name.
The format of the lines in this ASCII file is:
/&lt;!-- raw HTML omitted --&gt;=&lt;!-- raw HTML omitted --&gt;
These keywords are described below. There are certain keywords which are mandatory and others which are
optional. In addition, there are groups of keywords which must either all be included or all excluded. These
are indicated. Also, only the capitalized portions of the keyword need be input. An example is given for each
keyword and an example input file is shown at the end of this section. Note that no spaces are allowed
between the equal signs.
)
The following keywords define the generic properties of the material. Of these, all are optional except /TYPE,
/UTS, and /E1 which are required.Keyword Desription
/OPTion= Batch operation is restricted to the Create and eXit options of PFMAT . This
keyword is mandatory and must appear as the first and last lines in the file.
(/OPT=CREATE, /OPT=EXIT)
/INDB= This is mandatory. It means, put the material IN the DAtabase.
(/INDB=YES)
/MATNO= This specifies whether loading material data into material dataset number 1 or 2.
This keyword is optional. (/MATNO=1)
/PASSword= If the user wishes to load the data into the central database, he must supply the
password. This keyword is optional and a local database must be present if it is not
supplied. (/PASS=PFATIGUE)
/PRImary= This is the primary name the user is giving to the material he is loading. This
keyword is mandatory. (/PRI=MYMAT)
/SECondary This is the secondary name the user wishes to give to the material he is loading.
He may specify up to 9 secondary or alternative names by using this keyword
repeated times. This keyword is optional.
(/SEC=MEGALLOY_1_2_3)
/REFerence= It is possible to specify a reference for the material. This is a character string up to
64 characters long. This keyword is optional. (/REF=FROM SOME
HANDBOOK)
/COMment It is possible to also specify two comment lines using this option. The first is a
character string up to 64 characters in length. The second is a character string up
to 32 characters in length. To specify two comment lines, use this keyword twice.
This keyword is optional. (/COM=HIGH STRENGTH STEEL)&lt;/p&gt;
&lt;p&gt;371 APPENDIX C
Utilities
Main Index
The next set of keywords define the strain-life (E-N) dataset. Either all must be present or none when
defining strain-life data.Keyword Description
/TYPE= This is the material type code. This keyword is mandatory. However, it can be left
blank. It is suggested that either 0 or 99 is used if it is not known to which family
of materials it should be grouped. A listing of all current material type codes.
(/TYPE=99) is given in  Table 3-1
/YS= This defines the yield strength of the material in stress units.
(/YS=324)
/UTS= This defines the ultimate tensile strength of the material in stress units.
(/UTS=552)
/E1= This defines the Young&amp;rsquo;s modulus of the material in stress units.
(/E1=2.034E5)
/K1C= This defines the fracture toughness of the material in units of
MPa&lt;em&gt;m 1/2 or KSI&lt;/em&gt;inch 1/2. (/K1C=121)
/N1= This defines the work hardening exponent. (/N1=0.21)
/K2= This defines the work hardening coefficient in units of stress.
(/K2=965)
/ME= This defines the elastic Poisson&amp;rsquo;s ratio. (/ME=0.3)
/MP= This defines the plastic Poisson&amp;rsquo;s ratio. (/MP=0.5)
Keyword Description
/ESF= This defines the fatigue strength coefficient in units of stress.
(/ESF=917)
/EB= This defines the fatigue strength exponent. (/EB=-0.095)
/EC= This defines the fatigue ductility coefficient. (/EC=-0.47)
/EF= This defines the fatigue ductility exponent. (/EF=0.26)
/EN1= This defines the cyclic strain hardening exponent. (/EN1=0.19)
/EK= This defines the cyclic strength coefficient in stress unit. (/EK=1103)
/ENC= This defines the cut-off in reversal. The default is 2E8 reversals.
(/ENC=2E8)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)372
Main Index
The next set of keywords define the stress-life (S-N) dataset. Either all must be present or none when defining
stress-life data.
The next set of keywords define the fracture mechanics (LEFM) dataset. Either all must be present or none
when defining fracture mechanics data. This group of keywords may be repeated for as many environments
as are being defined./EESE= This defines the standard error of log (N) (Elastic). The default is zero. (/EESE=0)
/EPSE= This defines the standard error of log(N) (Plastic). The default is zero.
(/EPSE=0)
/ECSE= This defines the standard error of log(N) (Cyclic). The default is zero.
(/ECSE=0)
Keyword Description
/SNT= This defines the S-N type, either Material, Component, or Spot Weld. (/SNT=M)
/SRI= This defines the stress range intercept in stress units. (/SRI=8948)
/B1 This defines the first fatigue strength exponent. (/B1=-0.2)
/NC1= This defines the fatigue transition point in cycles. (/NC1=2E8)
/B2 This defines the second fatigue strength exponent. (/B2=-0.2)
/SFL= This defines the stress range fatigue limit in stress units. (/SFL=10)
/SMSS= This defines the mean stress sensitivity factor used with Spot Weld. (/SMSS=0.1)
/SE= This defines the standard error of log (N). (/SE=0.137)
/RRAT= This defines the R-Ratio of test. (/RRAT=-1)
Keyword Description
/ENV= This is the name of the environment under consideration. It is a character string
up to 20 characters in length. (/ENV=AIR)
/FL= This defines the unnotched fatigue strength in stress units. (/FL=226)
/C This defines the Paris law coefficient in units of meters/cycle or inches/cycle.
(/C=3E-12)
/M= This defines the Paris law exponent. (/M=3.43)Keyword Description&lt;/p&gt;
&lt;p&gt;373 APPENDIX C
Utilities
Main Index
Example:
The following batch section shows how a full set of materials data can be entered from a batch environment.
The command below points to the ASCII file example.mat .
pfmat @example.mat
This ASCII file contains the following keywords, materials parameters and values to specify the material
MYMAT, and is listed below. First, however, the following notes should be made:
1.It is necessary to create a local database, either by manually editing or creating a material but not
giving the password or by using the utility under the Create option to initialize a new empty database.
The batch load will fail if there is not a local database already created.
2.The units used must be those expected by PFMAT. Check before the batch load that the units
preference has been set properly and is what is expected. See the  Preferences Option, 368  for details.
3.If entering data values outside of the acceptable, preset ranges of PFMAT, Material checking must be
set to OFF. Check before batch load operation that this is set properly. See the  Preferences Option, 368&lt;br&gt;
for details.
4.If there are problems loading or the data loaded is not what was expected, check the pfatigue.prt&lt;br&gt;
files for a description of the batch load operation.
The contents of example.mat  are:
/OPT=CREATE
/INDB=YES
/PASS=
/PRI=MYMAT
/SEC=first alternative
/SEC=second alternative
/REF=Data from somewhere
/COM=Example for manual
/TYPE=99
/UTS=552
/E1=2.034E5
/YS=324
/K1C=121
/N1=0.21
/K2=965
/ME=.3
/MP=.5
/ESF=917
/EB=-0.095/D0 This defines the delta K threshold at R=0 in units of MPa&lt;em&gt;m 1/2 or KSI&lt;/em&gt;inch 1/2.
(/D0=8)
/D1= This defines the delta K threshold at R=1 in units of MPa&lt;em&gt;m 1/2 or KSI&lt;/em&gt;inch 1/2.
(/D1=2)
/RC= This defines the stress ratio at threshold knee. (/RC=0.75)Keyword Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)374
Main Index
/EC=-0.47
/EF=.26
/EN1=.19
/EK=1103
/ENC=2E8
/EESE=0
/EPSE=0
/ECSE=0
/SNT=M
/SRI=1102
/B1=0
/NC1=1E2
/B2=-.0602
/SFL=0
/SE=0
/RRAT=-1
/ENV=AIR
/FL=226
/C=3E-12
/M=3.43
/D0=8
/D1=2
/RC=.75
/K1S=121
/ENV=WATER
/FL=200
/C=2E-12
/M=2.43
/D0=7
/D1=3
/RC=.85
/K1SCC=100
/OPT=EX
PFMAT M aterial Listing
Table 3-1 shows PFMAT material classes. Table 3-2 lists all materials that are delivered with the system and
available datasets.  Table 3-3 lists all materials delivered with the system and any alternative names by which
they may be known.
Table 3-1  Material Type Num bers and Descriptions
0 T ype undefined
1 Flake cast iron (FCI)
2 Ferritic cast iron with compacted graphite (FCICG)
3 Pearlitic cast iron with compacted graphite (PCICG)
4 Bainitic cast iron with compacted graphite (BCICG)
5 Ferritic cast iron with spheroidal graphite (FCISG)
6 Ferrite/pearlite cast iron with spheroidal graphite (FPCISG)&lt;/p&gt;
&lt;p&gt;375 APPENDIX C
Utilities
Main Index
7 Pearlitic cast iron with spheroidal graphite (PCISG)
8 Bainitic cast iron with spheroidal graphite (BCISG)
9 Cast steel with less than 0.2% carbon (CSL2C)
10 Normalized cast steel with 0.2-0.4% carbon (NCS24C)
11 Quenched &amp;amp; tempered cast steel with 0.2-0.4% carbon (QTCS24)
12 Normalized cast steel with 0.4-0.7% carbon (NCS47)
13 Plain carbon wrought steel with &amp;lt; 0.2% carbon (PCWS)
14 Hot rolled/normalized plain carbon wrought steel, 0.2-0.4% carbon (HNPCWS24)
15 Quenched &amp;amp; tempered cast steel with 0.4-0.7% carbon (QTCS47)
16 Quenched &amp;amp; tempered plain carbon wrought steel, 0.2-0.4% carbon (QTPCWS24)
17 Hot rolled/normalized plain carbon wrought steel, 0.4-0.7% carbon (HNPCWS47)
18 Quenched &amp;amp; tempered plain carbon wrought steel, 0.4-0.7% carbon (QTPCWS47)
19 Normalized low alloy wrought steel (NLAWS)
20 Quenched &amp;amp; tempered low alloy wrought steel (QTHSLAWS)
21 Normalized Ni/Cr/Mo wrought steel (NNCMWS)
22 Quenched &amp;amp; tempered Ni/Cr/Mo wrought steel (QTNCMWS)
23 Austenitic stainless steel (ASS)
24 Ferritic stainless steel (FSS)
25 Martensitic stainless steel (MSS)
26 Annealed plain carbon wrought steel, 0.2-0.4% carbon (APCWS24)
27 Annealed plain carbon wrought steel, 0.4-0.7% carbon (APCWS47)
28 Normalized carbon/manganese steel (MCMS)
29 Quenched and tempered carbon/manganese steel (QTCMS)
30 Hardened chromium steel (HCS)
31 Quenched and tempered chromium steel (QTCS)
99 Steel of unknown heat treatment (STEEL)
100 Wrought aluminium (WA)
101 Wrought aluminium-copper alloy (WACA)
102 Wrought aluminium-manganese alloy (WAMNA)
103 Wrought aluminium-magnesium alloy (WAMGA)
104 Wrought aluminium-magnesium-silicon alloy (WAMGSA)
105 Wrought aluminium-zinc alloy (WAZA)
106 Cast aluminium alloy (CAA)Table 3-1  Material Type Num bers and Descriptions&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)376
Main Index
107 Wrought complex special purpose aluminum alloys (WCSPAA)
200 Wrought copper (WCU)
201 Wrought brass (WBR)
202 Wrought aluminium bronze (WABR)
203 Cupronickel (CUPNI)
204 Nickel silver (NIAG)
205 Wrought phosphor bronze (WPHBR)
206 Wrought copper beryllium (WCUBE)
207 Cast copper alloys (CCUA)
300 Titanium alloy (TA)
400 Wrought magnesium alloys (WMGA)
401 Cast magnesium alloys (CMGA)
500 Fusible alloys, solders (FUSSOL)
600 Cast zinc alloys (CZINCA)
700 Wrought nickel alloys (WNIA)
701 Cast nickel alloys (CNIA)
800 Precious metals (PRECMET)
900 Clad materials (CLADMAT)
1000 Thermoplastics (THERPLAS)
1001 Thermosetting plastics (TSETPLAS)
Table 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types
150M19 2.07E5 682 E-N
2.25Cr1Mo 2.3E5 603 LEFM
2014-T6_125_HF 7.27E4 483 E-N
2014_HV_0 7.17E4 200 M.S-N
2014_HV_T4 7.17E4 410 M.S-N
2014_HV_T6 7.17E4 470 M.S-N
2017_HV_T31 7.17E4 300 C.S-N
2024-T3 7.25E4 460 LEFM
2024_HV_O 7.17E4 200 M.S-NTable 3-1  Material Type Num bers and Descriptions&lt;/p&gt;
&lt;p&gt;377 APPENDIX C
Utilities
Main Index
2024_HV_T3 7.17E4 450 M.S-N
2024_HV_T4 7.17E4 410 M.S-N
2024_HV_T851 7.17E4 410 M.S-N
2024_HV_T86 7.17E4 410 M.S-N
2219-T851 7E4 448 LEFM
2219_HV_T62 7.17E4 320 M.S-N
2219_HV_T81 7.17E4 410 M.S-N
2219_HV_T87 7.17E4 470 M.S-N
2789_370 1.628E5 436 E-N
2789_420 1.724E5 468 E-N
2789_600 1.737E5 591 E-N
2789_700 1.615E5 885 E-N
2789_800 1.62E5 890 E-N
2TA11 1.171E5 1233 E-N
3.5NCMV 2E5 1320 LEFM
3003_HV_H14 7.17E4 200 M.S-N
3003_HV_H16 7.17E4 200 M.S-N
3003_HV_H18 7.17E4 220 M.S-N
3004_HV_H34 7.17E4 215 M.S-N
3004_HV_H38 7.17E4 295 M.S-N
3004_HV_O 7.17E4 200 M.S-N
300M 2.07E5 1900 LEFM
316 1.9E5 590 LEFM
349S52 1.9E5 991 E-N
352S52 1.735E5 1027 E-N
5052-H32 6.96E4 231 E-N
5052_HV_H34 7.17E4 215 M.S-N
5052_HV_H38 7.17E4 295 M.S-N
5052_HV_O 7.17E4 200 M.S-N
5056_HV_CON 7.17E4 260 C.S-N
5083_114_CF 6.9E4 414
5083_87_CF 6.9E4 385 E-NTable 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)378
Main Index
526M60 2.02E5 939 E-N
5454_NONE_CF 6.9E4 334 E-N
605M30 2E5 705 E-N
605M36 2.07E5 835 E-N
6061-T6 80 HF 7.27E4 340 E-N
6061-T6_NONE_CF 6.9E4 389 E-N
6061-T6_NONE_SHEET 6.96E4 314 E-N
6061_HV_O 7.17E4 150 M.S-N
6061_HV_T4 7.17E4 215 M.S-N
6061_HV_T6 7.17E4 305 M.S-N
7075-T6 7.09E4 558 LEFM
7075_HV_O 7.17E4 220 M.S-N
7075_HV_T6 7.17E4 570 M.S-N
709M40 2.1E5 781 E-N
7175-T73_NONE_HF 7.13E4 524 E-N
722M24 2.05E5 976 E-N
817M40 2E5 1277 E-N LEFM
826M31 2E5 1209 E-N
835M30 2E5 1550 LEFM
835M30_V 1.943E5 1034 E-N
A533B 2E5 552 LEFM
AISI1012 2E5 333 E-N
AISI1020 2E5 416 E-N
AISI_4340 2E5 1700 LEFM
alphafe 2.1E5 1700 E-N LEFM
ASTMA536 1.447E5 480 E-N
B40PK 2E5 394 E-N
B40PO 2E5 438 E-N
B50XF 2E5 486 E-N
B50XK-CR 2E5 461 E-N
B50XK-HR 2E5 450 E-N
B55XF 2E5 488 E-NTable 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;379 APPENDIX C
Utilities
Main Index
B60RO 2E5 503 E-N
B80RK 2E5 610 E-N
B80XF 2E5 645 E-N
Beryllium 2.894E5 323 E-N
bs1452-260 1.253E5 277 E-N
BS376_Nickel 2.068E5 366 E-N
BS4360-43A 2.07E5 486 E-N
BS4360-43C 2.07E5 478 E-N
BS4360-43D 2.07E5 490 E-N
BS4360-50D 1.914E5 480 E-N LEFM
classB 2.07E5 500 C.S-N
classC 2.07E5 500 C.S-N
classD 2.07E5 500 C.S-N
classE  2.07E5 500 C.S-N
classF 2.07E5 500 C.S-N
classF2 2.07E5 500 C.S-N
classG 2.07E5 500 C.S-N
classW 2.07E5 500 C.S-N
Cold_rolled_sheet 2E5 303 E-N
Copper 1.136E5 206 E-N
DP1 2E5 659 E-N
DP2 2E5 753 E-N
EIBSG1400 1.75E5 1407 E-N
EICG315 1.51E5 315 E-N
EICG400 1.5E5 404 E-N
EICG493 1.63E5 493 E-N
EN24V 1.902E5 1047 E-N
EZ33A_HV_T5 4.4E4 140 M.S-N
FeE255TM 2E5 475 E-N
FeE37D 2E5 388 E-N
FeE420TM 2E5 490 E-N
FeE52D 2E5 550 E-NTable 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)380
Main Index
HSLA4 2E5 486 E-N
HT-30 7.1E4 355 E-N
HY130 2E5 1010 LEFM
HY80 2E5 735 LEFM
HYBRID_CASTIRON 1.51E5 296 E-N
hypress20 2E5 445 E-N
hypress23 2E5 437 E-N
hypress26 2E5 523 E-N
hypress29-4 2E5 544 E-N
hypress29-8 2E5 539 E-N
IMI685 1.2E5 955 LEFM
INC718 2.041E5 1304 E-N
MANTEN 2.034E5 552 E-N LEFM
MANTEN_MSN  2.034E5 600 M.S-N
MANTEN_SN 2.034E5 600 C.S-N
Mild_Steel 2E5 462 E-N
Nitro 2E5 483 E-N
Nitro-sa 2E5 648 E-N
Rephos 2E5 421 E-N
RQC100 2.034E5 863 E-N LEFM
RQC100_MSN  2.034E5 800 M.S-N
RQC100_SN 2.034E5 800 C.S-N
RQT501 2E5 590 E-N LEFM
RQT701 2E5 825 E-N LEFM
RR58 7.5E4 450 LEFM
SAE1006_85A_HR  2.07E5 318 E-N
SAE1006_85B_HR 2.07E5 318 E-N
SAE1006_85_HR  2.07E5 318 E-N
SAE1008_91_HR 2.07E5 363 E-N
SAE1015_80_NORM 2.07E5 415 E-N
SAE1018_106_HR  2.07E5 354 E-N
SAE1018_118_QT  2.07E5 496 E-NTable 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;381 APPENDIX C
Utilities
Main Index
SAE1018_209_QT 2.07E5 696 E-N
SAE1020_107_HR 2.07E5 441 E-N
SAE1020_108_ANLD 2.07E5 392 E-N
SAE1030_128A_HR 2.07E5 454 E-N
SAE1030_128_HR 2.07E5 454 E-N
SAE1035_169_CON 2.1E5 550 M.S-N
SAE1045_225_ANLD 2.07E5 751 E-N
SAE1045_390_QT 2.07E5 1343 E-N
SAE1045_450_QT 2.07E5 1584 E-N
SAE1045_500_QT 2.07E5 1956 E-N
SAE1045_595_QT 2.07E5 2239 E-N
SAE1045_705_QT 2.07E5 2067 E-N
SAE1045_HV_HR 2.07E5 671 E-N
SAE1050_189_CON 2.1E5 637 M.S-N
SAE1055_251_CON 2.1E5 860 M.S-N
SAE1080_371_QT 2.07E5 1298 E-N
SAE1080_410_QT 2.07E5 1432 E-N
SAE1080_421_AUST 2.07E5 1349 E-N
SAE1315_155_CON 2.1E5 530 M.S-N
SAE1522_289_HR 2.07E5 1005 E-N
SAE1522_304_HR 2.07E5 1088 E-N
SAE1541_362_QT 2.07E5 1200 E-N
SAE1561_234_HR 2.07E5 836 E-N
SAE2310_138_CON 2.1E5 480 M.S-N
SAE2335_217_CON 2.1E5 745 M.S-N
SAE30304 1.87E5 670 LEFM
SAE4130_259_QT 2.07E5 895 E-N
SAE4130_267_CON 2.1E5 912 M.S-N
SAE4130_366_QT 2.07E5 1426 E-N
SAE4142_380_QT 2.07E5 1412 E-N
SAE4142_400_QT 2.07E5 1550 E-N
SAE4142_450A_QT 2.07E5 1929 E-NTable 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)382
Main Index
SAE4142_450_QT 2.07E5 1757 E-N
SAE4142_475A_QT 2.07E5 2032 E-N
SAE4142_475_QT 2.07E5 1929 E-N
SAE4142_560_QT 2.07E5 2239 E-N
SAE4142_670_QT 2.07E5 2446 E-N
SAE4340_242_HR  2.07E5 826 E-N
SAE4340_350A_QT 2.07E5 1171 E-N
SAE4340_350B_QT 2.07E5 1171 E-N
SAE4340_350C_QT 2.07E5 1240 E-N
SAE4340_409_QT 2.07E5 1467 E-N
SAE5160_434_QT 2.07E5 1584 E-N
SAE52100_517_H 2.07E5 2011 E-N
SAE8630_254_NORM 2.07E5 785 E-N
SAE8640_361_QT 2.07E5 1373 E-N
SAE9262_260_NORM 2.07E5 923 E-N
SAE9262_271_QT 2.07E5 999 E-N
sra_60 2E5 531 E-N
sra_70 2E5 570 E-N
st00 2.1E5 347 E-N
Ti-6Al-4V 1.2E5 986 LEFM
unsg10200 2E5 393 E-N
1.4003 2E5 496 Sp.Wld
1.4301_IIIA 1.875E5 670 Sp.Wld
1.4301_IIIC 2E5 670 Sp.Wld
1.4589 2E5 523 Sp.Wld
AlMg5Mn 7E4 300 Sp.Wld
FePo4 2E5 313 Sp.Wld
spot_nugget_generic 2.1E5 500 Sp.Wld
spot_sheet_generic 2.1E5 500 Sp.Wld
ZSTE380 2E5 484 Sp.Wld.Table 3-2  PFMAT M aterial Listing (MPa)
Name E UTS Data types&lt;/p&gt;
&lt;p&gt;383 APPENDIX C
Utilities
Main Index
Table 3-3   PFMAT M aterial Alternative Names
Table C-4  Steels
SAE (USA) DIN(German) W.Nr.(German) British
SAE1006_85A_HR D8-2 1.0313 040A04,En2A
SAE1006_85B_HR D8-2 1.0313 040A04,En2A
SAE1006_85_HR D8-2 1.0313 040A04,En2A
SAE1008_91_HR St13 1.0333 050A04
SAE1015_80_NORM C15 1.0401 050A15
SAE1018_106_HR - - 080A17
SAE1018_118_QT - - 080A17
SAE1018_209_QT - - 080A17
SAE1020_107_HR C22 1.0402 070M20,En3
SAE1020_108_ANLD C22 1.0402 070M20,En3
SAE1030_128A_HR - - 080A30,En5B
SAE1030_128_HR - - 080A30,En5B
SAE1035_169_CON Cm35 1.1180 060A35
SAE1045_225_ANLD Ck45 1.1191 060A45
SAE1045_390_QT Ck45 1.1191 060A45
SAE1045_450_QT Ck45 1.1191 060A45
SAE1045_500_QT Ck45 1.1191 060A45
SAE1045_595_QT Ck45 1.1191 060A45
SAE1045_705_QT Ck45 1.1191 060A45
SAE1045_HV_HR Ck45 1.1191 060A45
SAE1050_189_CON C53 1.210 060A52
SAE1055_251_CON C55 1.0535 070M55,En9
SAE1080_371_QT - - 060A81
SAE1080_410_QT - - 060A81
SAE1080_421_AUST - - 060A81
SAE1315_155_CON - - -
SAE1522_289_HR 20Mn5 1.1133 120M19
SAE1522_304_HR 20Mn5 1.1133 120M19
SAE1541_362_QT 36Mn5 1.1167 150M36,En15B
SAE1561_234_HR - - -&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)384
Main Index
SAE2310_138_CON - - 708A30
SAE2335_217_CON - - -
SAE30304 X5CrNi18_9 1.4301 304S16,En58E
SAE4130_259_QT - - 708A30
SAE4130_366_QT - - 708A30
SAE4130_267_CON - - -
SAE4142_380_QT 42CrMo4 1.7225 708A42,En19C
SAE4120_400_QT 42CrMo4 1.7225 708A42,En19C
SAE4142_450A_QT 42CrMo4 1.7225 708A42,En19C
SAE4142_450_QT 42CrMo4 1.7225 708A42,En19C
SAE4142_475A_QT 42CrMo4 1.7225 708A42,En19C
SAE4142_475_QT 42CrMo4 1.7225 708A42,En19C
SAE4142_560_QT 42CrMo4 1.7225 708A42,En19C
SAE4340_HV_NONE - - -
SAE4340_242_HR 40CrNiMo6 1.6565 817M40,En24
SAE4340_350A_QT 40CrNiMo6 1.6565 817M40,En24
SAE4340_350B_QT 40CrNiMo6 1.6565 817M40,En24
SAE4340_350C_QT 40CrNiMo6 1.6565 817M40,En24
SAE4340_409_QT 40CrNiMo6 1.6565 817M40,En24
AISI4340M_HV-NONE - - -
SAE5160_434_QT 55Cr3 1.7176 527A60,En48
SAE52100_517_H 100Cr6 1.3505 539A99,En31
SAE8630_254_NORM 30NiCrMo2_2 1.6545 -
SAE8640_361_QT 40NiCrMo2_2 1.6546 -
SAE9262_260_NORM 60SiCr7 1.7108 -
SAE9262_271_QT 60SiCr7 1.7108 -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;835M30,En30B&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;St52 - BS4360-50D
ASTM A542 Class 2,3 2.25Cr1Mo - -&lt;/li&gt;
&lt;li&gt;3.5NiCrMoV - -
316_S/S - - -
A553B - - -
HY80 - - -Table 3-3   PFMAT M aterial Alternative Names&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P21</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_021/</guid>
      <description>
        
        
        &lt;p&gt;385 APPENDIX C
Utilities
Main Index
HY130 - - -
MANTEN - - -
MANTEN_SN - - -
NAMTEN_MSN - - -
RQC100 - - -
RQC100_SN - - -
RQC100_MSN - - -
RQT501 - - -
RQT701 - - -
Aluminum Alloys and Other Light Alloys
SAE DIN W.Nr. British
2025_T3 - - -
2219_T851 - - -
5056_HV_CON Al_Mg5 3.3555 -
2014-T6_125_HF - - -
6061-T6_80_HF - - -
5052-H32 - - -
6061-T6_NONE_SHEET - - -
6061-T6-NONE_CF - - -
2014_HV_O Al_Cu4_Si_Mg 3.1255 -
2014_HV_T4 Al_Cu4_Si_Mg 3.1255 -
2014_HV_T6 Al_Cu4_Si_Mg 3.1255 -
2017_HV_T31 Al_Cu4_Si_Mg 3.1355 -
2024_HV_O Al_Cu_Mg2 3.1355 -
2024_HV_T3 Al_Cu_Mg2 3.1355 -
2024_HV_T851 Al_Cu_Mg2 3.1355 -
2024_HV_T4 Al_Cu_Mg2 3.1355 -
2024_HV_T86 Al_Cu_Mg2 3.1355 -
2219_HV_T87 - - -
2219_HV_T81 - - -
2219_HV_T62 - - -
3003_HV_H18 - - -Table 3-3   PFMAT M aterial Alternative Names&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Material Management (PFMAT)386
Main Index
3003_HV_H16 - - -
3003_HV_H14 - - -
3004_HV_H38 - - -
3004_HV_H34 - - -
3004_HV_O - - -
5052_HV_H38 - - -
5052_HV_H34 - - -
5052_HV_O - - -
5083_114_CF - - -
5083_87_CF - - -
5454_NONE_CF - - -
6061_HV_O - - -
6061_HV_T4 - - -
6061_HV_T6 - - -
7075_HV_O Al_Zn_Mg_Cu1.5 - -
7075_HV_T6 Al_Zn_Mg_Cu1.5 - -
7175-T73_NONE_HF - - -
HT30 - - -
RR58 - - -
EZ33A_HV_T5 - - -
TI-6Al-4V - - -
IMI685 - - -
Weld Geometries
BSB5400:CLASS B
BSB5400:CLASS C
BSB5400:CLASS D
BSB5400:CLASS E
BSB5400:CLASS F
BSB5400:CLASS F2
BSB5400:CLASS G
BSB5400:CLASS WTable 3-3   PFMAT M aterial Alternative Names&lt;/p&gt;
&lt;p&gt;387 APPENDIX C
Utilities
Main Index
Important:   More materials are added from time-to-time. Use the Search and List Option, 342  with the letters
“D”, “W”, and “B” as entries for the Name keyword to see a listing of all materials with DIN,
W.Nr. or British standard names.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities388
Main Index
Advanced Loading Utilities
The following sections describe advanced loading utilities. There are several advanced modules for
manipulating loading history files of format . dac and other formats (. cyh).
Time History Management (PTI ME)
The main menu with associated text on the PTIME start-up form is shown in Figure 3-45. When first starting
PTIME, only the Add submenu will appear until a time history has been created or loaded. From that point
forward, when starting PTIME, the main menu will appear.
Figure 3-45  PTIME  Main Menu
The menu options are shown as a vertical bar. T o select one of the options, move the cursor over the desired
option and simply depress the mouse button. The following subsections describe the PTIME main menu
options.
Add an Ent ry Option
If this Main menu option is chosen, an additional submenu appears next to the main menu, as shown in
Figure 3-46.&lt;/p&gt;
&lt;p&gt;389 APPENDIX C
Utilities
Main Index
Figure 3-46  PTIMEAdd a Time History Menu
The Add an entry  options are explained over the following pages.
Load Files
This option provides the ability to load time histories into the database and set the descriptive loading type
and loading units information. T o do this, a form will be presented with the screen display shown below in
Figure 3-47. This screen or portions of this screen will be presented whenever creating a time history
dependent on the method of creation. Please refer back to this Figure 3-47 often throughout this chapter.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities390
Main Index
Figure 3-47  The Lo ad Option
Note that only those units appropriate to the load type are available in the Units  field.
Field Description
Source File Name This is the name of the file which contains the loading. This file must be a
standard binary loading file which has a default file type of filename.dac .
The complete directory path must be supplied if the file is not already resident
in the local directory. Use the List button to show all available
filename.dac  files and select a file from the list. You will have to change
the filter to load other files such as filename.psd  or filename.cyh .
Target File Name This is the file name under which the file specified above will be stored in the
local directory. The default file name is the same as the one specified in the
Source File name field (excluding the directory path and the file extension).&lt;/p&gt;
&lt;p&gt;391 APPENDIX C
Utilities
Main Index
If a required load type and/or unit is not on the list above, then the list can be extended. The list can be edited
and is held in a system directory. Description 1 and 2 These two fields are provided to associate other information with the loading.
In particular, a description of the direction and position of the transducer
could be defined together with details of the source from which the time
history was obtained (e.g., test details, job identity, etc.). Description 1 is
presented together with the file name in the database index listing. It is
required to use this first field to store essential information which may be
necessary to inform you of the identity of the time history.
Load type/Units The Load type and Units fields are closely associated. Both are toggle
operated. They allow for selection of the load type and units to be used by the
filename.dac  file chosen in Source File name (above). The load types and
units available by default are shown in the  Table 3-5.
Equivalent units In order to report fatigue life in units which are appropriate for the
component or structure being analyzed, it is required to enter both the
number of units and unit type which describes the duration of the loading.
These units are independent of the time or frequency base of the loading. For
example, it may be the case that the loading time history represents 27.3
kilometers, so the F atigue equivalent units are kilometers and the Number of
fatigue equivalent units is 27.3. Other examples are: 2 flights, 11 pressure
cycles, 3.5 days, 1 repeat. The default equivalent unit is 1 Repeat of the time
history.
Table 3-5  Table  of Load Types and Units
Load Type Units Available
Force Newtons, kNewtons, lbs force, T ons force, T onnes force
Pressure Pascals, MPa, PSI, KSI, TSI, Kgf/m2
Temperature Degress Kelvin, Degress Celsius, Degress Fahrenheit
Acceleration m/s2, feet/s2, g
Displacement m, mm, inches, milliinches, microinches
Rotational Velocity rph, rad/s, rad/min, rps, rpm
Velocity kph, ips, mph, m/s, mm/s
Uncalibrated undefined
Scalar %, levels, none
Moment Newton-meter (Nm), Ft-lbs, NmmField Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities392
Main Index
ASCII Convert + Load
This option allows for conversion of an ASCII file to a file with default filename.dac  file extension. Its
first screen is shown in Figure 3-48.
Figure 3-48  ASCII C onvert &amp;amp; Load Option
The fields are as follows. Fields are active or inactive depending on the options chosen.&lt;/p&gt;
&lt;p&gt;393 APPENDIX C
Utilities
Main Index
Field Description
ASCII File Name Enter the name of the ASCII file to be converted to filename.dac  (time history)
file format. Use the List button in top bar to list all available ASCII files. The files
must be called filename.asc . Note that the Filter sub-option allows for
specification of alternative directories for the ASCII file. Any file name may be
entered. However, if a file suffix is not specified, then a filename.asc  is assumed.
Data T ype If this is a time dependent signal, keep the default of Time series . If it is a PSDF
then set it to either Power spectrum , or psd X-y data . The only difference between
these two is that the first allows more options, just as in Time series  to import data.
The psd X-y data  entry assumes the numbers are in Frequency/Value pairs. The psd
Matrix  option will import a matrix definition of the PSDF/CFDFs from a
filename.pmx  file. This is for management only.
Time Series/
Power Spectrum/
PSD MatrixEnter the name of the loading here. A filename.dac  or filename.psd  file will
be created from the ASCII file named above. The default file name is the same as
whatever was entered in the ASCII File name field. A copy of the original file is
created but with a .dac  or .psd file extension rather than a . asc extension. The
original file is not changed. For PSD Matrix, only an entry is made in the database
for management purposes only.
Sample rate This is the number of values per X-axis increment (usually time). So, for 1 value very
0.1 seconds, the answer to this question is 10 (i.e.: 10 values per second or 10Hz).
The number of values per second is only important in fatigue crack growth
calculations since the crack growth rate is sensitive to the loading rate in corrosive
environments. The equivalent units facility allows the user to define time units that
are more appropriate to the actual analysis being carried out and so the sample rate
could be set to 1 if the total time for the file is unimportant. If, however, the entire
signal does not import properly, it may be that the sample rate needs to be higher
for more resolution of the actual signal.
Equally Spaced
DataT wo types of data can be converted:
1.Data that consists of Y-values only which (it is assumed) are spaced equally
apart in time or frequency. The sample rate is stated or implied elsewhere.
Even if time values are present they may well be omitted provided that the
correct sample rate is entered.
2.Where the file contains paired time or frequency and data values (X-y pairs),
and the values are NOT equally spaced, then the data is assumed to be
formatted with a time or frequency followed by a value sampled at that time
or frequency. X values must be in ascending order.
Header Lines If the ASCII file contains non-relevant header lines then PTIME should be told how
many header lines exist. It will then ignore that number of lines.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities394
Main Index
Batch O peration
PTIME can be run in batch mode for easy import of ASCII files.
A list of PTIME’s batch keywords:All Numbers If it is desirable to convert all values in the ASCII file then select Yes. Otherwise say
No. Selecting No enables skipping some data values in the ASCII file.
This is extremely useful if, for example, converting a multi-channel file such that
only channel 5 and 8 are extracted.
As an example, say each vertical column represents a channel of data, and extraction
of only data from channel 4 is desired. To do so first select Take All Numbers = No.
Three additional fields will then be displayed.
Start Position Setting this will start reading at the column specified. So for the example, reading
only channel (column) 4, set this to 4.
Number of Values
to TakeIn the example, this is set to 1, meaning; take 1 value then skip 7 values, then take
another value, etc., until the end of the file is encountered. T o take all of columns 4
and 5, this would be set at 2 and Number of Values to Skip would be set at 6.
When all the above fields have been filled and the OK button is pressed, another
screen will appear asking information on the details about the file that will be created
such as description, fatigue equivalent units, etc. See the  Load Files, 389  option above
for a detailed description of this screen.
Number of Values
to SkipThis causes the program to skip n number of values from the starting position. So
for example, set this to 7 to skip all other values except those in column 4. (There
must be an even number of columns for this to work properly since values are
counted from left to right and then continued on the next row.)
/OPT Main menu option to add time history or exit. /OPT=A or /OPT=X
/AOPT Option name for invoking ASCII import. /AOPT=A
/INP File name of the ASCII file to convert (.ASC) /INP = AERO
/DTTYP Data type to load: Time series, Power spectrum, psd X-y data, psd Matrix.
/DTTYP=T
/OUT File name of the output signal file (.DAC) /OUT=AERO
/SRATE Sample rate for the output file /SRATE = 2
/EQSP Whether the data is equally spaced or not, Y-values only, X-y pairs. /EQSP = Y
/HEAD Number of header lines to skip /HEAD =4
/ALL Whether to take all the numbers in the file /ALL = N
/STA The start position for accepting /STA = 10Field Description&lt;/p&gt;
&lt;p&gt;395 APPENDIX C
Utilities
Main Index
Example:
As an example, you can invoke PTIME with the following options all on the same line to load two time
histories at the same time. Keyword not used will use default values.
ptime /opt=a/aopt=ascii/inp=test/out=load1/eqsp=y/all=y
/opt=a/aopt=ascii/inp=test2/out=load2/eqsp=y/all=n/sta=1
/numtake=4/skip=5/opt=x
Or you can put each keyword and value in a file (called commands.cmd  for this example) on separate lines
and then invoke PTIME to process the keywords with
ptime @commands.cmd
To ensure proper execution, check the batlog.lst  file.
Copy from Central (Database)
PTIME is delivered with a set of standard loading time histories which are used in a number of fields such
as the aerospace or automotive industries. It is possible to copy one or more of these standard time histories
into the local directory for use in a particular durability analysis. Enter the name of the file if it is known, or
use the List button to obtain a listing of the database entries contained in the central area. See Figure 3-49.
Figure 3-49  Central Data base Copy Option/SKIP How many values to skip /SKIP = 4
/TAKE How many values to take /TAKE = 1
/DESC1 Description 1 of details. /DESC1=Description1
/DESC2 Description 2 of details. /DESC2=Description2
/L TYP Load type in details area. /LTYP=Force
/UTYP Unit type in details area. /UTYP=Newtons
/SOU Source filename (.dac, ,psd, or .cyh). /SOU=filename .dac
/TAR Target filename (can be any name). /TAR=newfilename .dac
/NUMEQU Number of equivalent units in details section. /NUMEQU=5
/EQUNI Equivalent units in details area. /EQUNI=hours&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities396
Main Index
It is also possible to store your own here as a data management tool. Simply move all of you own . dac, .psd,
or .cyh files into the ptime  directory and run PTIME from this directory and load all the files. They will
then be available for others to copy from the central database.
Copy from Remote (Database)
In order for users to share loading time histories without corrupting the remote database or time histories,
the copy from Remote database option has been provided. A database must exist in the remote directory in
order for this option to work. When this menu option is chosen, the following is presented with the question:
Figure 3-50  Copy from Remote Option
The full path and name of the directory must be defined. For example:
//node1/top_level_directory/sub_directory/
Once the directory has been defined and the OK button pressed, PTIME will read the database in the
specified directory and present the user with a form  as in Figure 3-49. The operation of this menu is identical
to that described for the  Copy from Central (Database), 395  option. This option can be used as a tool for loading
data management.
X-Y Time  Series
This option allows for creation of a simple time series file from scratch. Before being allowed to enter data to
define the time history, the generic information screen similar to that in  Figure 3-47 (presented previously) in
order to provide some descriptive data associated with the time history. The functionality and fields of this
screen are identical to those described in the Load files option above.
When the new file details have been specified, click OK to accept the details. A new window appears to allow
for data entry on a screen such shown on Figure 3-51 below. Click OK when finished.
Important:   Care must be taken to put the last delimiter before the start of the filename (e.g., \ or /).&lt;/p&gt;
&lt;p&gt;397 APPENDIX C
Utilities
Main Index
Figure 3-51  The X-Y Data Points Screen
Always end input of the Y values with a blank line. Clicking OK without doing so will result in the last point
being discarded.
X-Y PS D En try
This option is similar to the time series X-Y entry, except now you are using frequency/value pairs.
When the new file details have been specified, click OK to accept the details. A spreadsheet appears to allow
for data entry.
.
Important:   Only Y-values can be input in this mode. The X-values are automatically incremented by
unity (starting at zero) each time a new Y-value is added. T o input X-Y data pairs to more
precisely specify the time increment, use the  ASCII Convert + Load, 392  option.
A B C
Pair Frequency Load
1 0 0
2 1 0
3 10 100
4 20 0
5&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities398
Main Index
Data entry is accomplished very easily by clicking on a cell. Start typing the value. A form will appear allowing
entry. You can specify the pair by separating the frequency and value by a space or comma. Clicking the OK
button or using the ENTER key will scroll to the next row automatically. You can simply continue to type
the values in without every having to remove your hands from the keyboard.
If you need to make a correction, click on the cell and enter the data value. If you enter one value, only that
value will be overwritten. If you enter two values separated by a comma or space, both the frequency and
value will be updated.
The View pull-down menu on the spreadsheet form allows you to scroll to the portion of the spreadsheet that
you want.
You can insert or delete rows of frequency/value pairs by pressing the Pair button at the top of the form. Or
press the F5 key. The currently selected row will be deleted or a new row inserted above.
When you are satisfied with the input, press the F1 key or choose OK from the File pulldown menu. A new
filename.psd  entry will be created.
Graphical Create
The Graphical Create option allows for generation of a filename.dac  file via a graphical editor. A program
called MGED is spawned for this purpose.
When Graphical Create is selected, again the database entry definition screen is presented first. The
functionality and fields of this screen are similar to those described in the Load files option described earlier
(see Figure 3-47). However, there is an additional field to complete: the Sample rate. The sample rate is the
number of readings or data points per second, and is normally expressed in Hertz (Hz). 6
7
8A B C&lt;/p&gt;
&lt;p&gt;399 APPENDIX C
Utilities
Main Index
When all of the fields have been completed (or their defaults accepted), press the OK button to go to the
graphical editor. The graphical editor screen is shown below in Figure 3-52.
Figure 3-52  The Graphical Editor Screen
Many of the preferences and other options available through the pull-down menus at the top of the window
are generic for graphical operations throughout the system and are not discussed here. The operation of this
graphical user interface is described in  Module Operations  (Ch. 18) as well as the commands that may be entered
in the Command databox. The functions of the pull-down menus which are specific to PTIME and the
graphical editor are described below.
The main pull-down menus specific to PTIME are the Display, Edit, Append, Overwrite, and Move menus.
The Display menu is very simple and is explained in the table below.
The Edit menu contains several different operations, including deleting and inserting sections of signal,
rescaling and copying sections of signal to and from files.
The Append menu allows functions and waves to be generated at the end of the signal. Note that in append
mode for functions which only require the end point setting, and no question answering, the option does
not need to be repeatedly selected if several of the same functions are to be appended to one another. A series
of end points can be selected and the function will be generated between each of them.
The Overwrite menu allows functions and waves to be overwritten anywhere in the signal. The Overwrite
submenu is the same as the Append menu but the functions and waves may overwrite sections in the middle
of the file. The Overwrite submenu will allow functions to overwrite parts of the signal anywhere, so, unlike
the Append option, a start point and an end point must be defined.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities400
Main Index
The View menu controls the moving of the display window over the signal. This allows for display of various
sections of the signal.
Option Description
DISPLAY
Replot This simply replots the data and associated plot. The same thing can be accomplished
by pressing the P key.
Stats This displays some signal information, including the number of points, total time,
sample rate and coordinates of the last point.
EDIT
File Insert This function allows the data from an external file to be inserted into the signal at any
point. The program requests the start point to be selected, and then prompts for the
name of the file to insert, this may not be one of the files already being edited. The
inserted file must have the same sample rate as the main file, but may be any length.
Any signal after the start point is shuffled forward to make room for the inserted file.
The file must be of type filename.dac .
File Extract This function allows a section of signal to be written out to a file. The section is not
deleted from the main signal. The program requests the start and end points to be set
and then prompts for the name of the file. The name given must not be the name of
an existing file. This creates a file of type filename.dac .
T runcate This option allows the signal to be truncated. The program requests the new signal end
point to be set. All signal beyond that point will be deleted.
Rescale This function allows a section of signal to be rescaled. The program requests the start
and end points to be selected and then prompts for a scaling factor and an offset. Care
should be taken when using this function with signals that have large mean offsets,
since the offset is applied after the multiplication factor, and very large numbers could
be produced.
Drift This function allows drift in a signal to be corrected. The program requests the start
and end points to be selected, and then prompts for the offset to be applied at each
end. A linear correction is applied between the start and end points based on the offsets
defined.
Insert This function allows a space to be opened in the signal. The program requests the start
point to be entered, and then prompts for the number of seconds of data to insert. Any
signal after the start point is shuffled forward in time to make space for the new data
which is initialized to zero.
Delete This function deletes a section of signal. The program requests the start and end points
to be selected. Any signal beyond the end point is shuffled forward to the start point,
effectively deleting the signal between the two points.
APPEND/OVERWRITE
Ramp This function creates a straight line between the start and end points.&lt;/p&gt;
&lt;p&gt;401 APPENDIX C
Utilities
Main Index
Half Sin This function creates a half sine wave between the start and end points, starting with
a phase of zero degrees.
Step 1 This function creates a &amp;lsquo;rise then along&amp;rsquo; step. This means that all points after the start
point will be at the same level as the end point.
Step 2 This function creates an &amp;lsquo;along then rise&amp;rsquo; step. This means that the signal will be
horizontal from the start point until the point before the end point.
Exp 1 This function produces an exponential curve which tends to infinity in the x direction.
Exp 2 This function produces an exponential curve which tends to infinity in the y direction.
VIEW
Centre This option allows a point to be selected to be the center of the screen. The graph is
then redrawn with this point in the center.
Page Left This option moves the display window left by one window width.
Page Right This option moves the display window right by one window width.
Full X This option displays the full signal in the x direction.
Full Y This option displays the full signal in the y direction.
Goto End This option will display the last part of the signal in the first 20% of the time window.
Goto Start This option will display the first part of the signal.
Window X This option allows an x-axis window to be set. The program will prompt for the start
and end points of the window. This allows sections of particular interest to be zoomed
in the x direction.
Window Y This option allows a y-axis window to be set. The program will prompt for the start
and end points of the window. This allows sections of particular interest to be &amp;lsquo;zoomed&amp;rsquo;
in the y direction.
Zoom In This option zooms in by contracting the time window by 5 times.
Zoom Out This option zooms out by expanding the time window by 5 times.
Local Full This option adjusts the y-axis limits to fill the current display with the data shown.
MISCELLANEOUS
Cancel This option will cancel any option which is currently part way through its operation.
Restore This function restores a section of signal to its original form. The program will prompt
for the user to set the start and end points, after which the data that existed when the
program was started will be restored within the selected section. Note that sections
beyond the end of the original signal cannot be restored, and also the signal cannot be
restored if the input file is a new file.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities402
Main Index
Wave form Crea tion
This option initiates the waveform generation option which provides facilities for creating square, triangular,
or sine waves with an option to carry out multiple wave summation to create multi-frequency/phase periodic
waveforms.
The first stage in the waveform creation process is to define the database information concerning the time
history about to be created. See  Load Files, 389  option described earlier for an explanation of the fields.
Having provided the general information, it is then necessary to define the waveform creation parameters.
These data are shown in Figure 3-53.K/UP In many operations, a prompt for start and/or end points will be displayed. These
points can be picked by the mouse or cursor. However, it may be easier to actually
specify these values by keyboard input. To do this use, the K key. It will then be possible
to type in the positions in the Command databox. T o switch back to full mouse
operation in the middle of the option, type UP at the prompt for the point selection.
P If the P key is pressed at any time, the current option is terminated and the whole
screen is redrawn.
W If the W key is pressed at any time with the cursor over a menu option, help is
displayed for that option.
V If the V key is pressed at any time with the cursor over a menu option, that menu
option is invoked.Option Description&lt;/p&gt;
&lt;p&gt;403 APPENDIX C
Utilities
Main Index
Figure 3-53  Waveform Generation Setup Screen
Each field is explained in the table below.
Field Description
Waveform Type Three types of waveforms are possible: Sine, Triangular , or Square .
Sample Rate The sample rate is the number of points in the signal per second of signal.
It is important to remember that an inadequate number of samples will
distort the output signal. Shannon&amp;rsquo;s sampling theorem says that at least
two samples are required to define uniquely the highest frequency in the
signal (i.e., the sample rate must be at least twice the maximum frequency
in the signal). However, fatigue is an amplitude dependent process and so
it is necessary to consider the number of samples to define amplitudes
correctly. In practice, it has been found that 10 times the maximum
frequency in the signal will define the amplitudes to within 5% accuracy
for Sine Waves. For other waveforms, the relationship is worse due to the
sharpness of the peaks. It is advisable to check the signal visually after
creation using the graphical display option.
Total Time This defines the total time of the signal (i.e., 500 seconds).
Frequency This defines the frequency of the signal (i.e., 10 Hz or 10 cycles/second).
This is related to the Sample Rate described above.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities404
Main Index
Having created the first waveform, an option to add further frequencies to the wave by choosing the
Summation option is presented. The comments on sample rates above must be taken into account also in the
Summation option. Sample rates must be the same when summing waveforms. The screen shown in
Figure 3-54 is displayed after the first wave creation.
If Summation is selected, the screen shown in  Figure 3-54 is presented in order to add to the previous wave.
When done, select the Finish option.Phase Angle in Degrees A sine wave has an initial phase of 0 degrees and a cosine wave has one of
90 degrees. The phase may take any value between 0 to 360 degrees.
Percentage of Positive Slope This option is only enabled if a T riangular wave is being created. This
defines the percentage of each wave that has positive slope. Fifty percent
defines a perfectly symmetric triangular peak. If a sharp drop at the end of
the peak or a sharp increase at the beginning of the peak is desired this
number can be modified to accomplish this.
Percentage of Top Line This option is only enabled if a Square wave is being created. This defines
the amount of the top of the square wave that makes up the entire signal.
Form of the Data Amplitude /Mean  or Minimum/Maximum  values are allowable to define
the form of the wave. With Min/Max the two input lines to the side of the
Form of the Data will change to Minimum Data Value and Maximum
Data Value.
Amplitude The amplitude of the signal is the height of the peak above the mean level.
The magnitude of the signal must be in the units defined on the previous
setup page. The phase of the signal is defined in degrees and the
convention is as used to describe sine/cosine waves.
The amplitude of the signal is the height of the peak above the mean level.
The magnitude of the signal must be in the units defined on the previous
setup page. The phase of the signal is defined in degrees and the
convention is as used to describe sine/cosine waves.
Mean of Data The mean is the DC offset of the signal from zero.
Minimum of Data This is the minimum Y-value of the signal in the units defined on the
previous setup page.
Maximum of Data This is the maximum Y-value of the signal in the units defined on the
previous setup page.Field Description&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P22</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_022/</guid>
      <description>
        
        
        &lt;p&gt;405 APPENDIX C
Utilities
Main Index
Figure 3-54  Waveform  Summation Screen
Duplicate  File
To use this option, first indicate which loading file is to be duplicated. Type the name if it is known, or use
the List function to select a file by highlighting the file to be duplicated. PSDF matrix files cannot be
duplicated.
Once the correct file is selected, the duplicate screen appears as shown in Figure 3-55. The fields in this screen
are intuitive and are described more fully in the Load Files, 389  option. A new, unique name must be supplied
and at least the first description field must be filled. Click the OK button to accept the name and
descriptions. The name and descriptions of the time history being duplicated also appear at the top of the
screen.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities406
Main Index
Figure 3-55  The Duplicate File Screen
Block Pro gram
Time histories can be easily created by specifying a number of constant amplitude block with possible varying
means values between them. After selecting this option and specifying a file name, description and other
descriptive data for the time history, the following form appears. You may specify the constant amplitude
blocks either by inputting their amplitudes or the maximum and minimum values.
Figure 3-56  Block Form Creation Type
The next form that appears allows for specification of the amplitude/mean or maximum/minimum values.
The amplitude/mean form is shown here. You may enter as many blocks as you wish. When a block is
defined, click the OK button. The Block Number will increment one. You may view the blocks already
defined by pressing the List button. Press the Cancel button when all blocks have been defined or leave the
Block Number databox blank when pressing OK.&lt;/p&gt;
&lt;p&gt;407 APPENDIX C
Utilities
Main Index
Figure 3-57  Block Program Creation Form
White No ise
If white noise is chosen, aside from the standard input, the user must supply a random number seed from
which a pseudo-random number will be generated (the resultant wave sequence will, in fact, repeat after a
very large number of cycles). It has been proven that the best seed is an odd number. Different seeds produce
different pseudo-random sequences.
Rain flow Matrix
The Rain flow Matrix option allows you to create a matrix file in the form of a histogram. You may select an
existing time history file and rainflow cycle count it or you may read in the data from an ASCII file.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities408
Main Index
Input the existing time history file or the ASCII file in the Input File name databox. Give it a new name or
keep the same name in the Rainflow Matrix databox. A . cyh extension will be added to the name. For
matrices created from Time Histories, you may select the matrix size (bin size). The default is 128 which is
most accurate.
The ASCII file is defined by keyword/value pairs to specify the matrix size, axes limits and data type. The
data then follows and can be specified either by bin location + number of cycles or as a range mean pair +
number of cycles.
Lines beginning with the # character are comment lines and are ignored.
The first line in the file must be #V6.0
Mandatory keywords are:
BINS=&lt;!-- raw HTML omitted --&gt; where &lt;!-- raw HTML omitted --&gt; is 32, 64 or 128
RANGE_MIN=&lt;!-- raw HTML omitted --&gt; where value is minimum range of matrix.
MEAN_MIN=&lt;!-- raw HTML omitted --&gt; where value is minimum mean value of matrix.
The size of the matrix axes can be specified either by
RANGE_SIZE=&lt;!-- raw HTML omitted --&gt; where &lt;!-- raw HTML omitted --&gt; is the range bin size
MEAN_SIZE=&lt;!-- raw HTML omitted --&gt; where &lt;!-- raw HTML omitted --&gt; is the mean bin size
or
RANGE_MAX=&lt;!-- raw HTML omitted --&gt; where &lt;!-- raw HTML omitted --&gt; is the range maximum.
MEAN_MAX=&lt;!-- raw HTML omitted --&gt; where &lt;!-- raw HTML omitted --&gt; is the mean maximum.
The data is then entered, starting with one of the following lines:
BIN_DATA or
RANGE_MEAN_DATA
For BIN_DATA, the data is specified as follows, one entry per line.
&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;
For RANGE_MEAN_DATA,
&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;
An example of BIN_DATA follows:
#V6.0&lt;/p&gt;
&lt;h1&gt;Example using BIN_DATA&lt;/h1&gt;&lt;p&gt;409 APPENDIX C
Utilities
Main Index
BINS=32
MEAN_MIN=-1.1
MEAN_MAX=1.1
RANGE_MIN=0
RANGE_MAX=2.1
BIN_DATA:
31 15  5
16  9 10
16 23 10
8  2 20
8 32 20
An example of RANGE_MEAN_DATA follows:
#V6.0&lt;/p&gt;
&lt;h1&gt;Example using RANGE_MEAN_DATA&lt;/h1&gt;&lt;p&gt;BINS=32
MEAN_MIN=-1.1
MEAN_MAX=1.1
RANGE_MIN=0
RANGE_MAX=2.1
RANGE_MEAN_DATA :
2 0 5
1 0.5 10
1 -0.5 10
0.5 1 20
0.5 -1 20
END_DATA
PSDF Matrix. This is a simple utility to allow you to create a file that contains the relationship between
PSDFs and CSDFs and the corresponding FE load cases from a frequency response (FRF) analysis. This is a
necessary step when dealing with multiple load inputs from FRF analysis.
After entering a name and giving a description and the number of loads, a spreadsheet is presented. The
names of the loading PSDFs should be entered in the diagonal terms and the names of the loading CSDFs
should be entered in the off-diagonal terms. Click on a cell and start typing the name of the PSDF/CSDF as
it has been defined in the database. You do not need to include the . psd extension. The program will
automatically pick this up. The loading PSDFs and CSDFs MUST have already been defined and exist in
the PTIME database.
Make sure you enter the load PSDFs in the same order that the loading will be defined from the FE run, i.e.
load case 1 corresponds to PSDF in row/column 11, load case 2 corresponds to PSDF in row/column 22,
etc. If there are no cross terms (loads are completely independent of one another), then enter either 0 or
NONE in the off-diagonal terms.
You may make as many changes as you wish while you are in this spreadsheet. Once you are satisfied, use the
F1 key or OK from the File pulldown to accept the matrix. Once the matrix is defined it CANNOT be
changed. You will have to delete it and re-enter it; or you can edit the filename.pmx  file with an editor.
Alternatively you can create the matrix file entirely in an external editor and then load it into PTIME. See
ASCII Convert + Load, 392 .
PSDF matrix file format is shown below:
Filename: xxxxxx.pmx&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities410
Main Index
Number of load cases= n
n rows by n columns
Example 1:  5load.pmx
(5 load case matrix created manually using a text editor, no cross correlation)
5
test101.psd NONE NONE NONE NONE
NONE test102.psd NONE NONE NONE
NONE NONE test103.psd NONE NONE
NONE NONE NONE test104.psd NONE
NONE NONE NONE NONE test105.psd
Example 2:  3load.pmx
(3 load case matrix created with PTIME, some cross correlation terms)
3
test105.psd test12.csd test13.csd
test12.csd test105.psd NONE
test13.csd NONE test105.psd
Create PS DF from Ti me History
The Auto Spectral Density program, MASD, is spawned from this option. It allows the conversion of a time
domain signal into a frequency domain signal or power spectral density function (PSDF). It performs a
frequency analysis on a single parameter input file, a . dac file for example. MASD produces an output file
that indicates the frequency content of the input file. This module is described in Auto Spectral Density - (MASD),
504.
Change an Entry Option
If this Main menu option is chosen, an additional submenu appears next to the main menu, as shown in
Figure 3-58.
From this submenu, the user can change both the textual information associated with the database entries
and the actual time history data values. It also provides options to change the units system of the data, adjust
the sample rate of the time histories, and perform recalibration using polynomial transformations or a lookup
table.
These options are explained over the next few pages.&lt;/p&gt;
&lt;p&gt;411 APPENDIX C
Utilities
Main Index
Figure 3-58  Change Time History Submenu
Grap hical Edit
The Graphical Edit option of Change a time history invokes a specialized editor which has a mouse-driven
menu user interface. This editor has been designed to work with time history data, providing facilities for
appending or overwriting data values using:
Ramp functions
Step functions
Various waveforms
Point-by-point definition
Time segment extraction/insertion and deletion
Drift correction and spike removal
When the option is invoked, the screen display will be presented as shown in Figure 3-59 below.
Figure 3-59  The First Screen of Graphical Edit Option
This screen enables specification of the file to edit, and specification of its post-edit name. The same name
may be specified. P TIME will prompt for verification to overwrite the existing time history.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities412
Main Index
The graphical screen will be presented. The operation of this graphical user interface has been described
earlier under the  Graphical Create, 398  option. Please refer to this section.
Edit Details
The form in  Figure 3-59 is presented to the user to select a file to modify and to specify a new name if necessary.
The same name may be specified and overwrite permission will be requested.
A screen, as in Figure 3-60, is presented to allow modification of the loading details. The fields presented on
the screen for this option are described under the Load Files, 389  option.
Figure 3-60  The Ed it Details Option
Important:   It is possible to change the load type and units of the loading history on this page to values
which do not apply to the loading itself! This option should be used with caution since the
user may be lulled into thinking that there is a change in the actual data values as well as the
descriptive data. There is NO change to the actual loading file.&lt;/p&gt;
&lt;p&gt;413 APPENDIX C
Utilities
Main Index
Edit X-Y  Points
The third option from the Change submenu is Edit X-Y points. This function allows editing the
filename.dac  file or any other type with data points. The first screen prompts for the file to be edited. By
default, the target file name is the same as the input file name. If this is the case, then the new file will
overwrite the old and overwrite permission will be requested. If preservation of the original file is desired,
then enter a different name in the target file name field  (Figure 3-59).
When a file is accepted the screen in Figure 3-61 appears.
In the Next Point databox, the user may type in the point number to be edited. Also, if all the points are not
visible on the screen, type the point number and press the TAB key. This will display the current point in the
middle of the list with a few points above and below. To replace that value with another, simply type that
number in the New Y Value field. When the user presses the TAB key, the new value is accepted and the
screen is updated to reflect the change. Use the TAB key successively to move from the Next Point field to
the New Y-Value field.
Figure 3-61  The X-Y Edit Screen with List of X-Y Points
Poly nomial Trans form Option
This option provides for a method to carry out a polynomial transformation or conversion of the loading
data in a data file. The form of the polynomial is as follows:
(3-1)
YABYCY2DY3+ + + =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities414
Main Index
The first screen prompts for the file to be edited. By default, the target file name is the same as the input file
name. If this is the case, then the new file will overwrite the old, and overwrite permission will be requested.
If preservation of the original file is desired, then enter a different name in the target file name field&lt;br&gt;
(Figure 3-59). The screen display shown in Figure 3-62 is then presented, where B is set to unity and all other
multipliers are set to zero. These default settings ensure that the time history will remain unchanged if the
polynomial transformation is accidentally initiated.
Figure 3-62  The Polynomial Transformation Setup Screen Display
Once the parameters A, B, C, and D have been defined as necessary to represent the polynomial to be used
in the transformation, click the OK button. The user is then presented with the Edit Details form so that the
details of the file may be changed if required. This is explained in the Edit Details, 412  option.
Look up Trans form Option
The Lookup transformation takes a user-defined relationship between the input Y values and the output Y
values.
The first screen prompts for the file to be edited. By default, the target file name is the same as the input file
name. If this is the case, then the new file will overwrite the old and overwrite permission will be requested.
If preservation of the original file is desired, then enter a different name in the target file name field&lt;br&gt;
(Figure 3-59).
The relationship is defined in an ASCII file, an example of which is shown below in Table 3-6 Linear
interpolation is used between data pointsY is the value at time X
Y’ is the new value of Y at time X&lt;/p&gt;
&lt;p&gt;415 APPENDIX C
Utilities
Main Index
.&lt;/p&gt;
&lt;p&gt;To specify the ASCII file, the screen display shown in  Figure 3-63 is displayed.
Figure 3-63  The Look up Table Transformation Setup Screen
If the lookup table does not span the Y range of the loading, the user will be informed and asked to supply
an alternative lookup table file name.
As with the Polynomial T ransformation option, the user is then presented with the Edit Details form so that
the details of the file may be changed if required. This is explained in the  Edit Details, 412  option.
Units Conversion Option
The Units conversion option has been provided to allow switching of the units of any loading into any other
units of the same type (e.g., Pressure in Pa, MPa, psi, ksi, etc.). If the desired units are not supported, it is Table 3-6  An Example of a Lookup Table in Two Valid Formats
Table A Table B
-1000,-4000 -1000 -4000
-100,-300 -100 -300
-10,-20 -10 -20
0,0 0 0
10,20 10 20
100,300 100 300
1000,4000 1000 4000
Important:   It is important that the lookup table covers the full range of the loading to be manipulated
(i.e., from the maximum to the minimum Y value).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities416
Main Index
possible to extend the units list to include a new unit providing the relationship to S.I. units is known.
However, the units may only be extended by the system manager.
The first screen prompts for the file to be edited. By default, the target file name is the same as the input file
name. If this is the case, then the new file will overwrite the old and overwrite permission will be requested.
If preservation of the original file is desired, then enter a different name in the target file name field&lt;br&gt;
(Figure 3-59).
To specify the new units, PTIME will then display a screen similar to Figure 3-64.
Use the mouse to select the new units from the listbox. Note how PTIME automatically presents a list of
appropriate units. For example, it does not offer inches as a potential unit of force. See the  Edit Details, 412&lt;br&gt;
options if the expected units do not appear in the listbox because the load type is set incorrectly.
Figure 3-64  The Units Conversion Screen
Sample R ate Adjust Option
The Sample rate adjust option allows for increasing or decreasing the sample rate of the loading files. This is
sometimes necessary since loadings which have come from different sources may be used simultaneously in a
fatigue analysis. Rather than adjust the sample rate online for every node being analyzed in a fatigue analysis,
it is necessary to match the sample rates prior to the fatigue analysis.
A new sample rate which is either higher or lower than the original sample rate may be chosen. New data
values that lie between existing ones will be obtained using interpolation. T wo forms of interpolation are
provided.
The first screen prompts for the file to be edited. By default, the target file name is the same as the input file
name. If this is the case, then the new file will overwrite the old and overwrite permission will be requested. Method Description
Linear Interpolation This is quick to compute, but less accurate than spline fit when the waveform
contains curves.
Spline Fit Cubic splines are more accurate for curved waveforms, but they do take more
computational power to solve.&lt;/p&gt;
&lt;p&gt;417 APPENDIX C
Utilities
Main Index
If preservation of the original file is desired, then enter a different name in the target file name field&lt;br&gt;
(Figure 3-59).
The following screen appears after a file has been selected as shown in Figure 3-65.
Figure 3-65  The Sample Rate Adjust Option
List All Entries Option
This is a very simple Main menu function that is very easy to operate. It lists (on screen) all the
filename.dac  that are loaded into the PTIME database manager. It also list the PSDFs, CSDFs, Rainflow
matrices (histograms) and PSDF matrix files that are loaded into the database.
A typical listing is shown in Figure 3-66.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities418
Main Index
Figure 3-66  A List of Time History Entries
Search and  List Option
This is a Main menu option that allows for searching of the available loading ( filename.dac ) files and
extracts technical data from them. The following items may be used as search criteria.
The name of a file.
A generic file name.
A text string from the first line of its description.
A type of load and its units.
For example, it is possible to extract the details of only those files that have a load type of force, expressed in
Newtons. Alternatively, it is possible to search for and list all those files with test  in their names ( test1,
test2, test3 , etc.), or for the specific file name of test3 .
The amount of information extracted from the files can be just a Brief description (name, description, load
type, units, creation date, modification date), or a Full description (all the above plus details of the number
of data points, min/max points, etc.).&lt;/p&gt;
&lt;p&gt;419 APPENDIX C
Utilities
Main Index
The output destination can be to the Screen or to a list File. An ASCII file is stored on disk with the name
pfatigue.prt . This file can be printed out later.
On selecting the Search and list option, the screen display shown in Figure 3-67 will be presented.
Figure 3-67  Listing/Search Option Screen Display
The Search and List option embodies two functions, as follows:
Listing the information for a set of database entries.
Searching for database entries with specific characteristics.
Searching
The search function is only activated if an incomplete file name is specified, or no file name at all. The search
facility is independent of the text case (i.e., a or A may be used). The following fields are active during the
search.
Once all search parameters required by you have been defined, the search may be initiated using the &lt;!-- raw HTML omitted --&gt;&lt;br&gt;
(accept) key. When a match is found, the details of the matched database entry will be displayed on the screen Field Valid Entries
Description data (both lines) Any text string
File Name Any text string
Load T ype Only supported load types valid
Units Type Only supported units types&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities420
Main Index
or sent to the session file according to your selection in the same way as the listing with no search option. The
Full option is also available for the search, producing the same result as for a listing.
Listing
The listing may be viewed on the screen or sent to an ASCII file called pfatigue.prt  file by choosing the
options Screen or list File, respectively.
For example, a Brief listing of a file called pdata02.dac  will produce the information similar to that shown
below:
Filename :PDATA02
Description :Actuator flap acceleration
Load type :Acceleration Units type :g
Entry date :19:46 21-JUN-92 Last mod. date :20:04 21-JUN-92
A Full listing includes the statistics of the actual loading data as shown below in this specific example together
with the information for the Brief listing:
Number of fatigue equivalent units :12
Fatigue equivalent units :flights
Number of data values :497000
Sample rate (Hz) :540
Minimum in series :-9.283Maximum in history :9.333
Point no. of minimum :1410Point no. of maximum :352131
Mean:-0.4845 Standard deviation :4.013
R.M.S.:0.1822
Plot an Entry  Option
This is the Main menu option that causes the loading graphical display system to be spawned (MQLD for
time histories, MTPD for PSDFs, and MP3D for rainflow). The main form for this option is shown in
Figure 3-68.&lt;/p&gt;
&lt;p&gt;421 APPENDIX C
Utilities
Main Index
Figure 3-68  Time History Graphical Display Window
Many of the options available from the top pull-down menus are generic to the utility modules and are
described fully in Module Operations  (Ch. 18) along with the commands that are applicable in the Command
databox.
Those pull-down menu options that are specific to this graphical window are explained below. This list is not
exhaustive.
Important:   The difference between the Graphical edit/create tools and this option is that the facilities
available in this option only permit data inspection and hardcopy generation.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities422
Main Index
Option Description
DISPLA Y
Replot This simply replots the plot. The same thing can be accomplished by
pressing the P key.
T owers / Join Points Presents the display of the plot in towers or as straight lines connecting
point to point.
Stats On / Stats Off T urns the statistical display of the time history on or off. The display
appears to the right of the plot.
F Stats / W Stats Displays either the Full (F) statistical data of the entire time history or just
the statistical data for the portion of the time history appearing in the
current Window (W).
VIEW
Full Plot Displays the entire signal within the visible window.
Full X / Full Y Displays the entire X-axis or Y-axis of the signal within the current window.
Page Left / Page Right Pages left or right one window of the signal.
Page Up / Page Down Pages up or down one window of the signal. The signal must be transposed
for this option to be enabled.
Zoom Out Zooms out (away) from the signal 5 times.
Window X / Window Y Requests a minimum X or Y-axis value and a maximum X or Y-axis value
in the Command databox from which the signal is then brought to fit into
the current window.
T ranspose T ransposes the X and Y axes of the plot.
AXES
Lox X / Log Y Converts the X or Y axes to Log scale.
Linear X / Linear Y Converts the X or Y axes to Linear scale.
dB Y Scales the Y-axis to Db.
Grid On / Grid Off T urns the plot grid on or off.
Box On/ Box Off T urns the box around the plot on or off.
Zeros On / Zeros Off Removes or plots the line defining the X and Y zero locations.&lt;/p&gt;
&lt;p&gt;423 APPENDIX C
Utilities
Main Index
Delete Entries  Option
This is a Main menu option that takes the user to the delete screen. From this option, the user can either type
the name of the entry he wishes to delete or mark entries in the database for deletion. Once the user has
marked all files for deletion (denoted by an asterisk to the left of the file), he may execute the delete option.
The initial delete screen looks like Figure 3-72, which asks only for a single file name.
Figure 3-69  The Delete Time History OptionANNOTATE
Set Title / Del Title Allows for setting a title or deleting a title from the plot. The title must be
input through the Command databox. The default title is the description
line 1 from the database.
Add Text / Del T ext Allows for adding or removing additional text on the plot. The text is input
through the databox and automatically placed at a predefined location on
the plot. To delete the text, click on it with the mouse after selecting the
Delete Text option. Confirmation of the text will be requested.
Move T ext T o place added text use this option. First select the text with the cursor and
then use the cursor to place the text in the new location.
Top Label / Side Label Moves the label of the Y-axis to the top or side.
Labels On / Labels Off T urns any labels on or off.
MISCELLANEOUS
P If the P key is pressed at any time, the current option is terminated and the
whole screen is redrawn.
W If the W key is pressed at any time with the cursor over a menu option, help
is displayed for that option.
V If the V key is pressed at any time with the cursor over a menu option, that
menu option is invoked.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities424
Main Index
If deletion of more than one file at a time is required or the file name is not known, it is possible to bring up
a listbox which is invoked by pressing the List button. This will give a listing of available files to delete along
with their descriptions. See Figure 3-70. Once all files have been selected for deletion, click the OK button. A
confirmation to delete the files will be requested.
Figure 3-70  The Select List Screen for Deletion
Validate Database Option
The Validate database option takes you to the Validate submenu where two levels of validation are offered.
The first is a Quick validation and the second is a Full validation which involves recalculating the statistical
information of all the time history data files listed in the database. See Figure 3-71.
Figure 3-71  The Validate Database Submenu Options
These two options are described below.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P23</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_023/</guid>
      <description>
        
        
        &lt;p&gt;425 APPENDIX C
Utilities
Main Index
Multi-Ch annel
This option allows for display of multiple time histories simultaneously and also includes a utility for
extracting peaks and valleys from existing time history files and reducing them. One of two separate processes
are actually spawned when one of these options is specified.
When multiple file display of time histories is selected a utility module called MMFD is run. Operation of
this module is fully described in Multi-File Display - (MMFD), 718 .
When peak valley extraction is selected a utility module called MPVXMUL is run. Operation of this module
is fully described in Peak-Valley Extraction - (MPVXMUL), 494 .
New Directory
This Main menu option allows the user to change the directory in which the loading database will be or is
stored. All . dac, .psd, .chy, .pmx files and the ptime.adb  and ptime.tdb  files must reside in this
directory or will be created in the directory indicated in Figure 3-72.
The default is the current directory and is indicated by a dot (.). Enter the full path name of the new directory
and end with a slash (/).
Figure 3-72  The New Directory OptionOption Description
Quick Validation This option checks the local directory to ensure that all the files in the database
exist and reloads the database with the statistics of the files from the file header
blocks. Statistics include values such as max, min, and mean. In addition the
description (line 1) and the equivalent units are stored in the file’s extra details
area. The description is stored against the keyword GRPTITLE and the
equivalent number and units are stored as NUMEQUNI &amp;amp; EQUUNITS. It is
envisaged that these files and the specific information may be shared with other
users. The items in the extra details area are updated in the file from the PTIME
database.
The description line 2 is stored only in the PTIME database as this is intended
for the analyst to make model specific comments.
Full Validation The full validation option recalculates the statistics of all the files in the database
and reloads the database with the newly calculated values as well as carrying out
the quick validation checks. This option may take some time to execute.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities426
Main Index
Exit Option
The Exit option will exit the loading database manager (PTIME) and return control to Patran or return the
user to the system prompt. At this stage, a new ASCII database index file ( ptime.adb ) will be produced.
This file is necessary for Patran to recognize which loading files are available for job setup.&lt;/p&gt;
&lt;p&gt;427 APPENDIX C
Utilities
Main Index
Arithm etic Manipulation - (MA RT)
MART is a module which arithmetically manipulates standard data files. Files may be operated on in ways
similar to that offered by a hand held calculator. Complex mathematical procedures can be built up by
“chaining” together sets of MART commands. If necessary, the arithmetic manipulation can be applied to a
section or window in the data file, leaving the remainder of the data unaffected.
MART carries out arithmetic operations on data files which have either the time-series, X-Y, or histogram
formats, (1, 2 or 3 parameter files). MART supports the following arithmetic operations:
Multiply or Divide every data value in a file by a constant.
Add or Subtract a constant from every data value in a file.
Normalize a data file to a specific mean.
Raise every data value to a specified power.
Extract the SIN, COS or TAN of every value in a data file.
Take the Absolute value of every value in a data file.
Linear transformation of the type Y = MX + C for every value in a data file.
Logarithmic and Anti-Logarithmic transformations to base 10 or base e.
Throughout the course of the above manipulations the following conventions are observed:
The tangent of 90 and 270 degrees is taken to be zero.
Data files which contain negative values can only be raised to integer powers.
Zero values are taken to be real numbers in the range: -1.0 -10 &amp;lt; n &amp;lt; 1.0 -10
Zero values raised to a negative power are set to zero.
Module Oper ation
The MART module can be run in one of the following ways:
In stand alone mode by invoking mart  at the system prompt as explained in Configuration, 328 .
By incorporating the MART commands in a batch operation.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities428
Main Index
Once running in the interactive mode MART displays the main screen, which has various options. Select an
option, then supply a file name and the data necessary for the selected option.
.
Option Description
Multiply
Divide
Add
SubtractMART will ask for the number by which the user wishes to multiply, divide, add, or
subtract the data in the input file.
The defaults are 1, 1, 0, 0, for Multiplication, Division, Addition, and Subtraction
respectively for safety i.e., to produce an output the same as the input if the default
is accepted accidentally.
In addition to entering an explicit numeric value, it is possible to enter the name of
an extra details keyword. See the section on data file formats, and the
documentation associated with the File Manipulation module, Peak-Valley Extraction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(MPVXMUL), 494 , for more information on the extra details area. After accepting a
keyword, MART will search the extra details area of the input file and assign the
value associated with it to the arithmetic constant to be used. For example, suppose
that an input data file contains an extra details keyword called “MODULUS” which
has a value 205000 associated with it. Entering the word MODULUS in response
to the above prompt will cause MART to use the value 205000 as the arithmetic
constant. If the keyword cannot be found an error message will result.
Selecting
Normalize to a new
meanIf this option is selected, MART will ask for the new mean value. The current mean
of the data file is offered as the default, selecting this default will produce an output
with the same mean as the input. Extra details keyword input is also supported as
explained for the first options.
Selecting Raise to a
powerAny valid numeric value may be entered as the required power. Extra details
keyword input is also supported as explained for the first options. Data files that
contain negative values can only be raised to INTEGER powers.
Selecting
T rigon ometric
functionsIf this option is selected, MART will display a submenu alongside the main menu
which allows the user to specify whether the conversion function will be Sine,
Cosine, or Tangent. The user must specify the units of the input file (using File
type), the amount of input file to be processed (From and T o), and its Y-axis labels
and units.
Note that the TANGENT of 90 or 270 degrees is taken to be ZERO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;429 APPENDIX C
Utilities
Main Index
If the NOTEBOOK keyword is defined within the local environment an entry of the information generated
during the operation(s) of MART is made within the notebook. See the Modifying the MSC Fatigue Environment
(MENM), 1501  for details of the environment.
All of the main menu options use the same input screen, as shown in Figure 3-73 below. The field that changes
according to the option is the third field down (marked Option ). The other fields may or may not be grayed
out depending upon whether they are necessary for that option.Whichever option is chosen from the main
menu, the first field that the user must fill is the name of the input file. Selecting Absolute
value of dataSelection of this option will cause MART to assign a positive sign to every negative
value found in the input data file and write it out to the output file. Positive values
will be written without change.
Selecting
Y = MX + CThis option allows the input signal to be multiplied by one constant, M, and then
to have a second constant, C, added to the result. They are incorporated into the
well-known equation for a straight line (linear transformation).
The value for M is entered in field &amp;lsquo;Y = &amp;rsquo; and the C value is entered in field &amp;lsquo;X +&amp;rsquo;.
Any number consistent with the arithmetic operation to be undertaken, non-zero
values for division for example, may be entered.
Note that the constant is added AFTER the multiplication by M.
Extra details keyword input is also supported as explained for the first options.
Selecting
Logarithmic
functionsIf this function is selected, MART will display a submenu to the main menu.
Suboptions 1 and 2 will take the natural and base 10 logarithms of the input signal
respectively and write the result to the output file. Options 3 and 4 carry out the
reverse transformations i.e. ex and 10x respectively.
If the input data file contains NEGATIVE or ZERO values, MART will return an
error message. Also, a file cannot be Anti-logged if the resultant file would contain
values greater than 1E30.
After selecting a logarithmic function, MART will (as is always the case) ask for the
name of the input and output file, and will then process the named input file.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities430
Main Index
Figure 3-73  Input File Name and Options Screen
Each data field is explained below:&lt;/p&gt;
&lt;p&gt;431 APPENDIX C
Utilities
Main Index
.
Option Description
File Names MART can process data files which are in either a time series, X-Y, or histogram
format. By default it expects the input file to have a time series format and to have
a file extension of . dac. If such a file is to be processed it is only required to enter
its name, the . dac extension may be omitted. Files with the correct internal format
but different file extensions must have their names entered in full, i.e. including
the file extension.
By default, MART expects to find the input data files to be resident in the user’s
directory. However, other directories can be accessed.
The processed data will be written to an output file. As a default, this file will be
created within the current directory and the extension of the input file is appended
to the name entered. If another extension or destination is required then it must
be entered in full.
The name of the input file is offered as the default output file name. Acceptance
of this default means that input data will be overwritten and so MART will
prompt for confirmation to proceed. In addition, if the name of a file which
already exists is specified, MART will also prompt for confirmation to overwrite it.
When the input and output files have been named then some or all of the
following fields will have to be completed.
From and T o Input files are of a finite length and not all of a file has to be processed. A time
segment of a file may be processed. A time segment of a file can be specified by
From (start time) and T o (finish time).
The start of analysis &amp;lsquo;From&amp;rsquo; option supports keywords (START , extra details etc.)
and calculations such as START+5 (seconds). If the file is not a time history then
enter the appropriate unit e.g. Hz for an . asd file. Data before the start time is not
changed in any way, or deleted.
The finish time of analysis &amp;lsquo;To&amp;rsquo; also supports keywords such as END, extra details,
END-5. If the file is not a time history then enter the appropriate unit, e.g. Hz for
an .asd file. The &amp;lsquo;To&amp;rsquo; value must be greater than the start time of the analysis. The
default is the end of the file. Data after the &amp;lsquo;T o&amp;rsquo; time is not changed in any way, or
deleted.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities432
Main Index
Batch Op eration
mart /opt=l/inp=test/out=test1/ov=y/mul=10.1/con=-123
In this example, MART processes an input data file called test.dac  by multiplying every value contained
therein by 10.1 and then subtracting 123 from the result. The output will be written to another data file
called test1.dac . If a file with this name already exists then it will be overwritten.
As another example of the use of simple arithmetic operations to significantly alter the nature of a time history
consider the sine wave illustrated in Figure 3-74 below.Y-axis label + units The Y-axis label is a text string which is stored in the header area of the data file
and is used to describe the parameter that is represented on the Y-axis. The text
entered will automatically appear on any plots generated by any suitable graphics
module such as MQLD or MMFD.
The Y-axis units are represented by a text string which is stored in the header area
of the data file. The text entered will automatically appear on any plots generated
by any suitable graphics module such as MQLD or MMFD.
In the case of a file with a histogram format (. cyh or .mkv for example) MART
will additionally prompt with:
Z-axis label + units The Z-axis label is a text string which is stored in the header area of the data file
and is used to describe the parameter that is represented on the Z-axis. The text
entered will automatically appear on any plots generated by any suitable graphics
module such as P3D. The text string must not be longer than 12 characters.
The Z-axis units are represented by a text string which is stored in the header area
of the data file. The text entered will automatically appear on any plots generated
any suitable graphics module such as MP3D. The text string must not be longer
than 10 characters.
2 parameter files If X-Y or 2 parameter files (often with the . mdf extension) are being processed
then, MART prompts with the following fields:
Axis to use
Both &lt;br&gt;
X only&lt;br&gt;
Y onlyThis refers to which axis is going to be arithmetically operated upon. For example
if multiplying only the X-axis, then the Y-axis data remains the same etc. Note that
if only one axis is being operated upon then only the label and units for that axis
can be user specified. Option Description&lt;/p&gt;
&lt;p&gt;433 APPENDIX C
Utilities
Main Index
Figure 3-74   Fully Reversed Sine Wave With a Zero Mean Converted
Suppose that, for some reason, it was required to modify the data in such a way that all the negative values
were set to zero. To achieve this the following strategy could be adopted.
Using MART&amp;rsquo;s option Absolute value take the absolute value of the input data file and save the
output in a scratch file.
Use the multi-file manipulation module, MMFM, to add the contents of the original data file to
that contained in the newly created scratch file and store the result within an output file. Remember
that the result of this addition cannot be stored within either of the two input files.
Finally, use MART again to divide the contents of the output file by 2 and save the result within the
input file.
The batch command lines to achieve these operations are given below:
mart /opt=B/inp=sine/out=temp/ov=y/&lt;em&gt;=tt
mmfm /opt=1/inp=sine,temp/out=sine1/ov=y/&lt;/em&gt;=tt
mart /opt=D/inp=sine1/out=sine1/ov=y/*=tt/val=2&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities434
Main Index
Multi-Ch annel Editor - (M COE)
MCOE is an interactive alphanumeric editor that allows both the creation of new and the editing of existing
time series data files. MCOE operates within a highly featured spreadsheet environment that allows data to
be manipulated within the spreadsheet (points inserted, moved, etc.).
MCOE can be used to create or edit data files which have a single parameter “time series” format. The time
series structure is used to describe single channel data where the increment between samples is constant.
MCOE can create or edit multi-channel sets of files provided they have the same base offset and sample rate
in every file in the set. Data is displayed on the screen in columns, and in response to MCOE commands,
many functions are available to perform column operations.
Module Operation
The MCOE module can be run in the following way:
In stand alone mode by invoking mcoe  in response to the system prompt as explained in
Configuration, 328 .
MCOE does not run in batch mode as it is meant for interactive use.
There are three (3) modes of operation of MCOE:
All three modes use similar screen layouts and share a large number of capabilities. The differences are that
each mode has capabilities appropriate to its purpose. For example, in Browse mode it is impossible to change Option Description
Browse Allows existing data to be viewed but not edited.
Edit Allows existing data to be viewed and edited.
Create Allows new files to be created and edited.&lt;/p&gt;
&lt;p&gt;435 APPENDIX C
Utilities
Main Index
data. Therefore, capabilities such as being able to enter new data values via the edit window are disabled. In
Edit and Create modes these functions do operate.
Most of the differences occur between what is, and what is not available on the Options menu. Rather than
largely duplicate an explanation for each mode of operation, it is simpler to highlight the differences between
them, as shown in the table below.
After selecting Browse, Edit or Create, the first stage of a run of MCOE involves the specifying of the file or
files upon which it will operate.
Figure 3-75   Specifying the Input File Name
Editing an existing file
If two or more input files are entered, then MCOE offers the option to preserve the original data in a backup
file. The name of this file is always the same as that of the input file but with a . bak extension. However, if
only one input file is to be edited, then a specific output file name is asked for (rather than automatically
reusing the input file name).
Up to 256 files can be specified here. The Pick List facility is probably the easiest way of specifying multiple
file entries. All input files must have the same sample rate.
MCOE will expect the input to have an extension of . dac. Files with the correct internal format but different
file extensions, such as frequency spectra (. psd), or joint probability density distributions (. jpd), must have
their file extensions entered explicitly.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities436
Main Index
Creating an all new file(s)
This option will cause MCOE to ask for the files Sample Rate and Base Offset (as per Figure 3-75 above). Up
to 256 new file names can be entered in the input file name field, possibly by using quick entry naming
conventions such as test(1-10)  which will create test01.dac, test01.dac&amp;hellip; test10.dac
.
Spreadsheet Screen
When the input files have been specified and the screen accepted, MCOE will move to its spreadsheet screen,
which is shown below.Option Description
Sample Rate and Base
OffsetThe Sample Rate is the number of points per second of the new files which is any
number greater than zero. The Base Offset is the starting point of the sample
relative to the zero line of the X-axis, i.e. if a Base Offset of 200 is entered and the
units are seconds, then the created file will be assigned a start time of 200 seconds
rather than the default of zero seconds.
If it is intended to create an another type of data set, such as a spectrum for
example, then the “sample rate” must be used to define the increment between
samples. For example, consider the creation of a spectrum with a maximum
(Nyquist) frequency of 250 Hz and consisting of 128 data values. These
parameters imply an inter-sample separation, spectral width, of 250 / 128 or
1.9531 Hz and so, in this case, the “sample rate” the would be 1 / 1.9531 or 0.512.
X and Y axes Labels
and UnitsThe axes labels fields ask for the text string which will be assigned to the X and Y-
axis labels of all the files to be created.
The axes units fields ask for the text string which will be assigned to the X and Y-
axis units of all the files to be created.
Labels and units may be also defined and edited within the spreadsheet by
selecting &amp;lsquo;View Data&amp;rsquo; from the options menu.&lt;/p&gt;
&lt;p&gt;437 APPENDIX C
Utilities
Main Index
Figure 3-76   The MCOE Spreadsheet Environment
There are three main areas on a spreadsheet screen.
The menu bar  across the top of the screen which contains the buttons for manipulating the data and
navigating around the columns and rows.&lt;br&gt;
The data area  itself which consists of rows and columns of data cells.
The status bar along the bottom of the form. It contains temporary or volatile data such as the data
value currently highlighted or being edited and the data file’s name.
Each area will be explained separately, starting with the data area.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities438
Main Index
.
The File MenuOption Description
The Data Area Figure 3-76 shows the editing of a . dac file, as specified in the input field of
Figure 3-76. All columns from column C onwards (maximum 256) contain data
values.
Column A  contains a simple data point/row label. It can contain numerical
designations for billions of rows. The labels can NOT be edited. Note that the
numbers are not actually stored as part of the . dac file; they are present in MCOE
for purposes of identification, and are implied rather than stated in the post
MCOE .dac file
Column B  contains the X-axis values of the file data. If a scale factor has been
applied to the range column then the values appearing in this column will have
been multiplied by this factor and the scale factor number is displayed above the
column. Values in column B can not be edited.
Column C  and all subsequent columns contain data values, i.e. the Y -axis values.
The letter F that appears in columns A and B means that they are fixed, cannot be
edited, and will be on-screen at all times. A letter G means that a column is
grouped (see the Options menu for details).
The Edit Window This is an edit window. The contents of whichever cell is highlighted will be
displayed here. Any highlighted Y-axis data value can be edited simply by typing
a new number. As soon as typing starts the edit window becomes active and values
can be entered in the usual way.
If a value is entered beyond the end of the current column, then all values between
the previous end - and the new column end positions - are linearly interpolated.
The Header Bar The menu options contain what are probably the most easily usable methods of
navigating around the spreadsheet and manipulating its contents which are
explained below.
Option Description
OK Exits MCOE completely.
Back Goes back to MCOE’s main menu.&lt;/p&gt;
&lt;p&gt;439 APPENDIX C
Utilities
Main Index
The View menu
The Find menu
The FIND menu offers a data search facility. It is offered by clicking the mouse on the &amp;lsquo;Find&amp;rsquo; option.
All searches operate in the current column starting at the current row. If the column end is reached and no
match found the search resumes from the first row. A message is displayed if no match is found.
The Options menu
This menu offers the principal tools for editing and manipulating the data. When a multi-column edit
operation is selected a question is asked which determines the scope of the operation. The possibilities are:&lt;br&gt;
Current column , Grouped columns , All columns . The default is current column until MCOE is set
differently.Option Description
Up\ Page Up key Scrolls up 1 screen of data values.
Down\ Page Down
keyScrolls down 1 screen of data values.
Home/ End Goes to row 1 or the last row.
Left/ Right Move left or right n columns (if there are columns to move to).
First/ Last Goes to column 1 or the last column.
Goto option Goes to a user-specified row.
Option Description
Find nearest match A target value is input. All column data is compared against it and the closest  match
reported. Any other values equally close are found using the NEXT option
Less than value A value is entered and the column is searched for the point at which the column
date descends below  the threshold value.
Greater than value A value is entered and the column is searched for the point at which the column
data rises above  the threshold value
Between 2 values T wo values which form the target range are entered. The first value found within
this range is reported.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities440
Main Index
Option Description
Gap Allows data to be repetitively appended to the end of the current column. The user
must supply the number of points in the gap from which the equivalent number
of points, NPTS, is determined. MCOE then moves NPTS on from the column&amp;rsquo;s
end and waits for the user to enter a number that will fill the new end cell. The
gap between the previous and the new column end positions is bridged by a linear
ramp.
Delete Allows a block of data to be deleted from the columns. The block is copied to the
clipboard and may be inserted elsewhere in the spreadsheet using the Paste option.
The user is asked for the start and end positions of the block. If the block extends
beyond the end of any of the nominated columns the data cannot be copied to the
clipboard and a warning question offers the option to cancel the operation.
Deleted data may be restored to any row position but multi-column data deletions
can only be restored to their original columns. Delete is a multi-column operation.
Copy Allows a block of data to be copied to the clipboard without it being deleted from
the spreadsheet. The data may be pasted elsewhere in the spreadsheet.
The user is asked for the start and end positions of the block. If the block extends
beyond the end of any of the nominated columns the operation is aborted and a
warning issued. Copy is a multi-column operation.
Paste Allows the clipboard&amp;rsquo;s contents to be inserted into the spreadsheet. A question is
asked to determine the point before  which the data is to be inserted. Data cannot
be pasted to a position starting beyond the end of the column into which it is
being inserted.
Multi-column paste always returns data to the columns from which it was taken.
Single column paste offers the option of returning data to its original column or
to the current column (if different). Paste is a multi-column operation.
Cycle Allows a sequence of saw-tooth ramps to be appended at the end of a column. The
user must supply the following:
The start point of a cycle (Maximum or Minimum)
The cycle range (from Peak to Trough)
The number of cycles to be appended
The mean value of the first half-cycle
The mean value of the last half-cycle
The cycles are then appended to the end of the current column. Cycle is a single
column operation.&lt;/p&gt;
&lt;p&gt;441 APPENDIX C
Utilities
Main Index
Insert Allows a linear ramp to be inserted into a column. The user must supply the
following:
The duration of the data to be inserted
The first and last values to be inserted
The point before  which the data is to be inserted
The first and last values are then inserted into the column and all intermediate
points are linearly interpolated. Insert is a single column operation.
Append Allows data to be added to the end of a column. The user must supply the
following:
The duration of the data to be inserted
The first and last values to be inserted
The first and last values are then inserted into the column and all intermediate
points are linearly interpolated. Append is a single column operation.
Join Allows the data between two existing points in the columns to be joined by a
simple linear ramp. Questions are asked to determine the two points between
which the columns are to be joined by a linear ramp. A warning is issued if a join
point is beyond the end of the data. Join is a multi-column operation.
Export This writes column data to a TAB separated ASCII text file with a user supplied
name and a . txt extension. The exported file may then be imported into other
commercially available spreadsheets (e.g. MicroSoft EXCEL). Export is a multi-
column operation.
Plot Allows the contents of the columns to be viewed graphically by loading them into
the utilitiy m odule Multi File Display ( Multi-File Display (MMFD), 253 ). Plot is a multi-
channel operation.
Rescale and offset Performs a simple linear re-scaling of the columns according to the equation:
Y = FACTOR * X + CONSTANT.
Questions are asked to determine the following:
The start and end points of the rescaling region
The value of FACTOR and SCALE in the above equation
If the specified region extends beyond the end of any column to which the
operation is being applied a warning is issued. Rescale is a multi-column
operation.
View file Header Toggles the spreadsheet between the data editing mode and the file header
information editing mode.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities442
Main Index
The Pr eferences menu
The spreadsheet environment is customized by the preferences menu. When MCOE is exit or quit the
current preferences are stored as the defaults for the next run of the program.View extra details: The input files may have additional information about themselves appended to
their extra details areas. You may also add new extra details area keywords to the
input files with this option.
Format Columns Columns can be locked onto the screen, formed into groups, and hidden from
view.
Fixed:  A fixed column will remain visible on the screen at all times regardless of
how the spreadsheet viewing windows is maneuvered. A highlighted letter F
appears in the banner of columns which are fixed.
Grouped : Specific columns of interest may be grouped together and submitted, as
a group, to multi-file manipulation options (e.g. Plot). A highlighted letter G
appears in the banner of grouped columns.
Hidden:  When a column is hidden it is no longer displayed in the spreadsheet
window. The column still forms part of the spreadsheet and is still subject to
multi-file data manipulation commands.
Exit Accepts all edits/modifications made during the current session and exits the
program. Confirmation is requested before this operation is carried out.
Quit Rejects all edits/modifications made during the current session and exits the
program. Confirmation is requested before this operation is carried out.Option Description&lt;/p&gt;
&lt;p&gt;443 APPENDIX C
Utilities
Main Index
Option Description
Point pick The row specification method. When an option such as delete cells is carried out
MCOE can ask for the location to delete in terms of point number (column A),
X values (column B) or by pointing and clicking on the required rows.
Click on cells: All edit operations prompt for rows to be specified by clicking on
the required rows. The column in which the mouse was last clicked becomes the
current column for the operation.
Point numbers: All edit operations determine the required row or row range by
asking for row numbers.
X values range: All edit operation determine the required row or row range by
asking for X values. Values which are entered at other than the discrete positions
at which they occur are rounded to the nearest match.
X-value format The number of decimal places in the X-values column (B).
Data format The number of decimal places in the data column (from C onwards). For both
range and data format, if a value is so large that the number of places is not possible
the display reverts to Exponential format.
Scale X-values Allows X-values to be scaled by a factor. For example, setting the scale factor to
1000.0 allows a signal originally sampled in seconds to be displayed in
milliseconds.
Export options The export options capability allows the binary . dac file currently loaded to be
saved as a text file suitable for import into commercial spreadsheet and database
applications. When selected, a form appears asking for the specification of what
data is to be written and column separation delimeters, such a tabs, commas, etc.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities444
Main Index
Rainflow Cycle Counter - (MCYC)
The rainflow cycle counter, mCYC, processes a time series signal, by extracting fatigue cycles according to the
rainflow cycle counting algorithm. The utility is useful as it allows the user to count cycles using the same
parameters (gate, range, bin width) for comparing and assessing various time signals. The results are presented
in the form of a range-mean or a max-min matrix which can be displayed or used as input to mCLF or MSLF .
In addition, a file containing a description of each cycle can be generated. If the time of each cycle can be
stored, this file may also be used in crack growth analysis.
For example, use PTIME to Copy from central the time history, SAETRN.
1.Invoke MCYC by invoking mcyc  from the system prompt as explained in Configuration, 328 .
2.Select input file. By default, mCYC expects the input data to be a standard .dac file but files with the
correct internal format but different file extensions must have their names entered in full e.g.
filename.pvx.
3.Select Output Type - Histogram , Cycles Files, or Both . The layout of the lower part of the above
screen and next screen (shown here) will depend on the selection made here. If Histogram or Both is
selected the Gate, Histogram Filename, Range Parameters and Mean Parameters are prompted for in
the screen as shown on page 416.
4.Enter Gate to filter cycles (e.g. 75 which is approximately 10% of the max indicated value 747). The
value entered here must be in physical units (usually microstrain) and greater than zero. If the gate
value is more than half the size of the largest cycle in the input file, an error message will be issued.
All cycles bigger than the gate will be counted.
5.Enter Window Type - Time  or Points . Selecting one or the other changes the next input to time or
points.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P24</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_024/</guid>
      <description>
        
        
        &lt;p&gt;445 APPENDIX C
Utilities
Main Index
6.Specify Start Time and End Time or Start Points and End Points. (e.g. start+6 -start 6 seconds or
points from start and end-100 - end 100 seconds or points from end). Default is start and end.
7.Specify histogram filename if the Output Type selected is Histogram or Both.
8.Store Cycle Time and Cycles Filename are only activated if Cycles File or Both are selected above. If
yes is selected, a time based cycles file (.tcy) is generated that can be used in crack growth analysis. If
no is selected, a .cyc file is generated that stores the ranges and means from the largest cycle onwards.
9.Specify Cycles Filename if the Output Type selected is Cycles File or Both. The .tcy file can be
reordered if desired using the Sort Cycles. If no is selected the cycles are sorted in order of size. Note
that if sorting is not carried out, it is possible that a crack growth analysis will be wrong since the order
of the cycles is important in crack growth analysis. If yes is selected the cycles are sorted in order of
time. Slow  selects an old method for sorting which requires less disk space than the current faster
method. If disk space is not a concern, do not use this option.
10. The WSR component field is for the exponent on which to base the weighted stress range (range 2-
10). The value of 2 would give a rms of stress ranges, the default of 3 gives a root mean cube used
typically with welded joint S-N curves. For crack growth, the Paris Law exponent, m, should be used.
11. Pressing OK takes you to the next screen or, if only Cycles files was selected, a results summary is
displayed as shown below.
Histogram Limits
The following form is displayed if both or Histogram is selected above:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities446
Main Index&lt;/p&gt;
&lt;p&gt;The fields that are activated depend upon whether the environment keyword HISTFORM is set to
MINMAX (use the full range from minimum to maximum values) or BINSIZ (specify on the minimum and
the bin width).
1.Min (Range) - For the purposes of scaling the histogram, the range of the smallest cycle to be
represented in the histogram must be entered in physical units. If there are any cycles smaller than the
minimum range specified, then those cycles will be excluded from the histogram.
2.Max (Range) - For the purposes of scaling the histogram, the range of the largest cycle to be
represented in the histogram must be entered in physical units. If there are any cycles larger than the
maximum range specified, then those cycles will be excluded from the histogram.
3.No. of Bins - To scale the histogram, specify the number of bins into which to classify the cycle ranges.
Any integer up to a maximum of 128 may be entered.
4.Min (mean) - For the purposes of scaling the histogram, the smallest mean value to be represented
must be entered in physical units. If there are any cycles whose mean values are smaller than the value
specified, then those cycles will be excluded from the histogram.
5.Max (mean) - For the purposes of scaling the histogram, the largest mean value to be represented must
be entered in physical units. If there are any cycles whose mean values are greater than the value
specified, then those cycles will be excluded from the histogram.
6.No. of Bins - To scale the histogram, specify the number of bins into which to classify the cycle means.
Any integer up to a maximum of 128 may be entered.
7.If the environment variable HISTFORM=BINSIZ (set in mENM) then this field is displayed. The
format (size and shape) of the histogram can be set by specifying the bin width. By default, the
program calculates the bin width needed to include the maximum values in the input file but the user
can enter a smaller or larger width.
8.The max-min toggle will plot a histogram based on a count of cycles between the between the
maximum and minimum cycle. To scale the histogram, specify the number of bins into which to
classify these cycles. Any integer up to a maximum of 128 may be entered.
The output histogram using the range-mean option is shown below.&lt;/p&gt;
&lt;p&gt;447 APPENDIX C
Utilities
Main Index&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities448
Main Index
Formula Proc essor (M FRM)
MFRM is an arithmetic and logical module which can be used to process formulae of varying complexity.
The formulae themselves are defined by means of a command language which FRM interprets and executes.
The command language is, in effect, a simple programming language that gives users access to all parts of
various data files, i.e., header, data area, and extra details keywords. MFRM supports the following functions:
Addition
Subtraction
Multiplication
Division
Exponentiation
SIN and arc SIN
COS and arc COS multiplication
TAN and arc TAN
Degrees to Radians Conversion
Radians to Degrees Conversion
Logs to the base 10
All can be written into an MFRM commands file.
MFRM interprets and executes commands which are stored in a formula command file. Individual
commands, when grouped together, make up the required formula and so MFRM may be regarded as a
formula processor. For example, the following formula command file could be used to prompt for the names
of two input files which need to be added together, and the output loaded into a third file called
result.dac
;
; &amp;mdash; Define all the files &amp;mdash;&lt;/p&gt;
&lt;p&gt;449 APPENDIX C
Utilities
Main Index
%QYFIL /FILE=F1 /PROMPT=&amp;ldquo;Enter first filename&amp;rdquo; /TYPE=INPUT
%QYFIL /FI=F2 /PR=&amp;ldquo;Enter second filename&amp;rdquo; /TY=IN
%DFFIL /FILE=F3 /NAME=RESULT /TYPE=OUTPUT
;
; &amp;mdash; Carry out the addition &amp;mdash;
;
%BEGIN
;
F3 = F1 + F2
;
%END
;
; &amp;mdash; Finish &amp;mdash;
The template file must have an ASCII format. It can be created or edited through the use of a text editor or
word processor. However, care must be taken to ensure that no control characters are output from the word
processor (WP). Control characters cannot be interpreted and so will cause MFRM to stop processing and
display an error message.
The above command structure has two important regions.
The first is a constant, or file definition, region in which all the constants and file types for both input and
output are defined.
The second is the arithmetic region in which all the arithmetic operations to be carried out are specified. The
arithmetic region must always be embedded within the definition region and start with the %BEGIN
command and finish with the %END command. The %BEGIN and %END commands themselves should
be considered as belonging to the definition region.
From the above example, it is useful to note that, in the definition region, file specification is through
keyword switches which may be expressed in their full form such as /FILE= or in a more compressed form
such as /FI=. For more details of the keyword switches associated with each of the file definition commands
are provided in the section Syntax of Commands in the Definition Region, 450 .
Operational Constraints
Data Files
All data files which are input for processing by MFRM must have the following properties, otherwise they
cannot be processed.
All input files must physically exist on the path specified
All input files must have the same length
All input files must have the same sampling rate
They must be single parameter files (normally with the . dac file extension
The default output data file is single parameter with a .dac  file extensionNote:   Save the MFRM file as an ASCII file, not in the WP&amp;rsquo;s proprietary format. Give it the extension . frm&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities450
Main Index
The default output list file extension is .lst
The following pages contain details of the MFRM command language and syntax to be used in the MFRM
command files.
Syntax of Comma nds in the Definition Region
A command in the definition region is made up of up to three sections:
A command mnemonic
One or more mandatory switches
Some optional switches
As an example, consider the %QYFIL command:
Command Mnemonic Mandatory Switches Optional Switch
%QYFIL  /FI=F1 /PR=&amp;ldquo;INPUT&amp;rdquo;/TYP=IN /LA=&amp;ldquo;Pounds&amp;rdquo;/OV=Y
All commands and switches can be written in either upper or lower case letters.
Switches are interpreted from a maximum of 3 characters, any further characters are ignored so that to define
the /FILE= switch it is sufficient to write /FI =.
The following command mnemonics are supported in the definition region:Note:   Only one command may be issued per line and all questions and definitions must be declared
before the %BEGIN command. All arithmetic, trigonometric or conversion commands must
appear between the %BEGIN and %END commands.
Command
MnemonicDescription
%QYFIL Prompt for the entry of a filename.
%DFFIL Define a file with a given filename.
%QYCON Prompt for the entry of a constant.
%QYINT May be used instead of %QYCON or GET_VARIABLE to define a variable that
will only accept integers.
%DFINT This command which may be used instead of %DFCON or DEFINE_VARIABLE
to define a variable which will only take integer values.
%DFCON Define a value for a constant.
%DLOOK Define a lookup table.
%PRINT Print a string to screen or file
%BEGIN Define the start of the arithmetic processing region.
%END Define the end of the arithmetic processing area.&lt;/p&gt;
&lt;p&gt;451 APPENDIX C
Utilities
Main Index
The %QYFIL Command
This command causes MFRM to prompt for a filename. When using this command, three further
definitions must be made. Firstly, the filename must be allocated an internal MFRM file number. Secondly,
the prompt string must be defined followed by the nature of the file, input or output, specified. These
additional definitions are made through the use of the mandatory command switches detailed below:
%ENDIF will cause only the values of F1 greater than 20 to be written to F2.
/DE is the default switch and may now specify an environment keyword. To do this, do not enclose the string
in quotes. i.e., /DE=&amp;ldquo;TEST101&amp;rdquo; will set the default to TEST101/DE=.DAC will set the default to the last
file written to the .DAC environment keyword.
Examples of valid %QYFIL commands:
%QYFIL /FILE=F1 /PROMPT=&amp;ldquo;Enter input filename&amp;rdquo; /TYPE=INPUT
%QYFIL /FI=F2 /PR=&amp;ldquo;Enter output filename&amp;rdquo; /TY=OU
The following optional switches are available for use with files which are specified as output files:
Example use of the %QYFIL command to define an output file:
%QYFIL /FI=F1 /pr=&amp;ldquo;Enter results filename&amp;rdquo; /ty=ou
/la=&amp;ldquo;Distance&amp;rdquo; /un=&amp;ldquo;mtrs.&amp;quot;/ov=qCommand Switch Description
/FI=Fn Allocates a file number to the named file. /FI=F1 allocates the code F1. Up to a
maximum of 64 files may be allocated, i.e. /FI=F32.
/PR=&amp;ldquo;string&amp;rdquo; String is a character string representing the required prompt. The string must be
enclosed by quotation marks.
/TY= Defines the type of the file. /TY=IN specifies an input file. /TY=OU specifies an
output file. /TY=LI specifies a list file. If  /TY=VA, then a variable length output
file may be specified. Any files created in this way will only have data written to
them when the file is specified on the left hand side. For example, if F2 is a variable
file, then %IF (F1 &amp;gt; 20) F2 = F1
Command Switch Description
/LA=&amp;ldquo;string&amp;rdquo; String is a character string representing the Y-axis label.The string must be enclosed
by quotation marks.
or   /LA=$Fn Where Fn is a defined input file. The label is copied from the Y label of file Fn.
/UN=&amp;ldquo;string&amp;rdquo; String is a character string representing the Y-axis units. The string must be enclosed
by quotation marks.
or /UN=$Fn Where Fn is a defined input file. The label is copied from the Y units of file Fn.
/OV=option Whether to overwrite the output file or not. If option is Y, overwriting is automatic.
If N, the file will not be overwritten, if Q then the user will be asked whether the
file should be overwritten.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities452
Main Index
The LA and UN parameters are ignored if the output type is LIST.
The %DFFIL Command
This command defines the name of a data file explicitly. When using this command the file must be allocated
an internal MFRM file number, the filename defined, and the nature of the file, be it an input or output,
specified. These definitions are made through the use of the mandatory command switches detailed below:
Examples of valid %DFFIL commands:
%DFFIL /FILE=F1 /NA=file1 /TYPE=INPUT
%DFFIL /FI=F2 /NA=result /TY=OU
%DFFIL /FI=F2 /NA=data /TY=LIST
As a result of the first command line, MFRM will try to access an input file called file1.dac . From the
second line, it will attempt to write out an output file called result.dac . If file1.dac  does not exist or
result.dac  does, then an error condition will arise which will cause MFRM to cease processing. The third
line will create an output file called data.lst  to which the %PRINT command can write.
The following optional switches are available for use with files which are specified as output files:
Example use of the %DFFIL command to define an output file:
%DFFIL /FI=F1 /NA=RESULT/ty=ou /la=&amp;ldquo;Distance&amp;rdquo; /un=&amp;ldquo;mtrs.&amp;rdquo;
The command DEFINE_FILE may be used as well as %DFFIL. The new /TY=VA keyword as described
above is also supported.Command Switch Description
/FI=Fn Allocates a file number to the named file.
/FI=F1 allocates the code F1. Up to a maximum of 64 files may be allocated, i.e., /FI=F32.
/NA=FNAME Where FNAME is the filename. If no extension is specified DAC will be assumed.
/TY= Defines the type of the file. /TY=IN specifies an input file. /TY=OU specifies an
output file. /TY=LI specifies a list file.
Command Switch Description
/LA=&amp;ldquo;string&amp;rdquo; String is a character string representing the Y-axis label. The string must be enclosed
by quotation marks
or /LA=$Fn Where Fn is a defined input file from which the variable is copied.
/UN=&amp;ldquo;string&amp;rdquo; String is a character string representing the Y-axis units.The string must be enclosed
by quotation marks.
or /LA=$Fn Where Fn is a defined input file from which the variable is copied.
/OV=option Whether to overwrite the output file or not. If option is Y, overwriting is automatic.
If N, the file will not be overwritten, if Q then the user will be asked whether the
file should be overwritten.&lt;/p&gt;
&lt;p&gt;453 APPENDIX C
Utilities
Main Index
The %QYCON Command
This command causes MFRM to prompt for the value of a constant. When using this command, it is
necessary to assign the constant to an internal MFRM number and also to define the prompt string. These
definitions are made through the use of the mandatory command switches detailed below:
Examples of valid %QYCON commands:
;
; &amp;ndash; Ask for constants &amp;ndash;
;
%QYCON /CONSTANT=C1 /PROMPT=&amp;ldquo;Enter amplitude&amp;rdquo;
%QYCON /CO=C2   /PR=&amp;ldquo;Enter frequency value&amp;rdquo;/DE=&amp;ldquo;5&amp;rdquo;
The command GET_VARIABLE may be used as well as %QYCON.   A new keyword /NA=NAME may
be used to define a name to represent the variable. For example,
GET_VARIABLE    /CO=C3 /PR=&amp;ldquo;Enter speed&amp;rdquo; /NA=&amp;ldquo;SPEED&amp;rdquo;
DEFINE_VARIABLE    /CO=C4 /NA=&amp;ldquo;DISTANCE&amp;rdquo;
(see %DFCON below for DEFINE_VARIABLE). Then instead of
C4=C3&lt;em&gt;5.75
one may use
DISTANCE=SPEED&lt;/em&gt;5.75
Output files do not have to be declared before being created
%QYINT or GET_INTEGER
This command may be used instead of %QYCON or GET_VARIABLE to define a variable which will only
take integer values.
The %DFCON Command
This command defines the value of a constant explicitly. When using %DFCON, it is necessary to assign the
constant to an internal FRM number and also to define its value. These definitions are made through the use
of the mandatory command switches detailed below:Command Switch Description
/CO=Cn Allocates an internal number to the constant.
/CO=C1 allocates the code C1 to the required constant. Up to a maximum of 1000 constants
may be allocated.
/PR=&amp;ldquo;string&amp;rdquo; String is a character string representing the required prompt. The string must be
enclosed by quotation marks.
/DE=&amp;ldquo;Default&amp;rdquo; Gets the default string for the constant
Command Switch Description
/CO=Cn Allocates an internal number to the constant.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities454
Main Index
Examples of valid %DFCON commands:
;
; &amp;ndash; Define the constants &amp;ndash;
;
%DFCON /CONSTANT=C1 /VA=10
%DFCON /CO=C2  /VA=5.123
Optionally, %DFCON can be used to define header or extra details and store them in a constant. If the
command /FILE=&lt;!-- raw HTML omitted --&gt; is added, it will assume that the /VAL switch defines either a header or an extra
details keyword, the data coming from the file specified by &lt;!-- raw HTML omitted --&gt;. For example:
%DFCON /CO=C6 /FI=F1 /VAL=MEAN
%DFCON /CO=C7 /FI=F3 /VAL=EXTRA
The first example extracts the mean from the file defined as F1. In the second example, the value of the extra
details keyword EXTRA will be stored in C7. Clearly the file specified in /FI= must be previously defined in
a %QYFIL or %DFFIL, and must be of type INPUT . Some header keywords are:
:
The command DEFINE_VARIABLE may be used as well as %DFCON.
The  %WTVAL command
This command writes to the extra details area of a specified file. It can write constants, file values, and
temporary variables. The %WTVAL can only be used inside a %BEGIN and %END construction. The /VA
switch can be: /VA=Cn   constants, /VA=Fn a file value, /VA=Tn temporary variable.
An example of a line using /WTVAL is shown below:/CO=C1 allocates the code C1 to the required constant. Up to a maximum of 1000
constants may be allocated.
/VA=n Defines the value of the required constant. The value may be integer or decimal.
TOTPTS The number of points in the file.
SRATE The sample rate of the file.
BASE The base X-value of the file.
INCREM The X-axis increment.
MEAN The mean value of the data points.
SDEV The standard deviation of the data points
YMAX The maximum data value in the file.
YMIN The minimum data value in the file.
RMS The root mean square of the file
MAXLOC The X location of YMAX
MINLOC The X location of YMIN&lt;/p&gt;
&lt;p&gt;455 APPENDIX C
Utilities
Main Index
%WTVAL /FI=F2/KW=SPOINT /VA=C2
(command) (file to write to) (EDA keyword) (value of keyword)
A more comprehensive example is shown below. It should be used in conjunction with a signal and trigger
file. The trigger start and end points are put into the signal file&amp;rsquo;s extra details area.
;
; Get trigger start and end point numbers
; and put them in the signal file extra
; details area
;
%DFFIL /FI=F1 /NA=SIGNAL /TY=INP
%DFFIL /FI=F1 /NA=TRIGGER /TY=INP
%QYCON /CO=C1 /PROMPT=&amp;ldquo;ENTER TRIGGER VALUE&amp;rdquo;
%DFCON /CO=C2 /FI=F1 /VAL=POINT
%DFCON /CO=C3 /FI=F1 /VAL=TIME
;
%BEGIN ;&amp;ndash; Initialise temporary variables on point 1 only &amp;ndash;
%IF (C2 = 1)
T1 = 0.0
%ENDIF
;&amp;ndash; trigger start &amp;ndash;
%IF (F2 = C1)
%IF (T1  1.0)
%WTVAL /FI=F1 /KW=SPOINT /VA=C2
%WTVAL /FI=F1 /KW=STIME /VA=C3
T1 = 1.0
%ENDIF
%ELSE
;&amp;ndash; trigger end &amp;ndash;
%IF (T1 = 1.0)
%WTVAL /FI=F1 /KW=EPOINT /VA=C2
%WTVAL /FI=F1 /KW=ETIME /VA=C3
T1 = 0.0
%ENDIF
%ENDIF
%END&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities456
Main Index
Figure 3-77   Diagram Showing signal.dac  and trigger.dac
Points t1 and t2 are put in the EDA of signal.dac
SPOINT=Y-axis value of signal.dac  at t1
STIME= time at t1
EPOINT=Y-axis value of signal.dac  at t2
ETIME= time at t2
Special keywords
In addition, two special keywords are provided.
The values of these 2 keywords are modified dynamically throughout the %BEGIN&amp;hellip;%END processing
loop.
Any other keywords are expected to be found in the extra details area, and their value must convert to a single
valid real number.
The %DLOOK Command
Defines a lookup table to be used by the LUT&lt;!-- raw HTML omitted --&gt; function. Up to 10 lookup tables may be defined, either
in the MFRM file as pairs of X-Y points or as a DAC file, or as a paired (X-Y) file. T o define the lookup table,
it must be given an ID, and the type must be specified. If the values are defined in the MFRM file, the number POINT Stores the current point being processed.
TIME Stores the time of the point being processed.&lt;/p&gt;
&lt;p&gt;457 APPENDIX C
Utilities
Main Index
of values must be given. The maximum number of pairs of values in each lookup table is 100. The definition
is made using the switches below.
If TYPE=VALUES, the next NVALS lines of the MFRM file must contain a lookup table as X,Y pairs, space
delimited. The values of X must be increasing. For example:
%DFLOOK /TA=1 /TY=VALUES /NVALS=5
1 100
3 200
7 300
9 600
10 665
If TYPE=FILE, the file must be a DAC or MDF format. The number of pairs must not exceed 100. In the
case of the MDF , X must be increasing.
The command DEFINE_LOOKUP may be used as well as %DLOOK.
The %PRINT Command
The %PRINT command writes data to a list file or the screen. If it is used outside of the %BEGIN&amp;hellip;%END
loop, file names and constants may be displayed in addition to text. The following switches are used:
A message string has the following format:
/ME=&amp;ldquo;String&amp;rdquo;+5X+F1+30T+&amp;rdquo; another string &amp;ldquo;+C4
Entities must be separated by the + symbol. Strings must be enclosed in quotation marks. The entity Fn will
cause the name of the file to be displayed at that point. The entity Cn will cause the value of constant Cn to
be displayed at that point. The entity nX causes n spaces to be displayed. The entity nT causes the next entity
to be displayed in column n (used for tabulation). n must be greater than the length of the string to that
point. Examples:Command Switch Description
/TA=n Allocates an internal number to the table.
/TY=VALUES Defines the table as a set of values stored in the MFRM file.
/NVALS=N Defines the number of values.
/TY=FILE Defines the table as being stored in an external file
/NA=name Defines the filename. No assumption is made about the file extension.
Command Switch Description
/MEssage=string The string to be written, including file names and constants (see below)
/FF Will issue a form feed command to the printer which will cause it to scroll up 1
page
/FI=Fn An output file to write to. Must be defined as type LIST. If omitted, the data is
written to the screen.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities458
Main Index
%PRINT /FI=F4/ME=F1+25T+F2+50T+F3 %PRINT /ME=25T+&amp;ldquo;This is a file
heading&amp;rdquo;+3X+&amp;ldquo;mean = &amp;ldquo;+C5
The command PRINT may be used as well as %PRINT .
The %BEGIN Command
The %BEGIN command marks the start of the arithmetic operations region; it informs MFRM that until it
encounters the %END command, all command lines are to be treated as arithmetic operations. The
arithmetic operations region contains all the arithmetic, trigonometric and conversion commands required
for execution of the formula.
The command BEGIN may be used as well as %BEGIN.
The %END Command
The %END command marks the end of the arithmetic operations region. It informs MFRM that no further
arithmetic operations will be required. Only comment lines can follow the %END command. The command
END may be used as well as %END.
Example of the use of %BEGIN and %END:
;
; &amp;mdash; Definition Region &amp;mdash;
%QYFIL /FILE=F1 /PROMPT=&amp;ldquo;Enter first filename&amp;rdquo; /TYPE=INPUT
%QYFIL /FI=F2 /PR=&amp;ldquo;Enter second filename&amp;rdquo; /TY=IN
%DFFIL /FILE=F3 /NAME=RESULT /TYPE=OUTPUT /OV=Q
%DFCON /CO=C1 /VA=5.123
;
; &amp;mdash; Carry out the addition &amp;mdash;
;
%BEGIN
;
T1 = F1 * C1
F3 = T1 + F2
;
%END
;
; &amp;mdash; Finish &amp;mdash;Note:   All file names and constants MUST be defined before the %BEGIN command is issued. Each
formula template file MUST contain a %BEGIN command.
Note:   The %END command cannot be issued before a %BEGIN has been defined. Each formula
template file MUST contain a %END command.&lt;/p&gt;
&lt;p&gt;459 APPENDIX C
Utilities
Main Index
In this example file F1 is multiplied by constant C1, the result stored in a temporary file called T1 added to
file F2. The final result is loaded into file F3.
Syntax of Comma nds in the Arithmetic Region.
Commands in the arithmetic operations region are made up of variables and manipulative operands.
Operands are themselves subdivided into arithmetic, trigonometric, and conversion functions. The
syntactical relationship between variables and operands is given below:
{ output variable } = { input variable 1 } { operand } { input
variable 2 }
The only restriction concerning the placement of variables on either side of the equals sign is that any file
which has been declared as an INPUT, through the use of the /TY=INPUT switch within either the
%QYFIL  or %DFFIL  commands, cannot be treated as an output variable, i.e., it cannot appear on the LHS
of the equals sign. Therefore the following would NOT be allowed:
;
%DFFIL /FILE=F1 /NAME=RESULT /TYPE=INPUT
%DFCON /CO=C1 /VA=5.123
;
%BEGIN
F1=F1&lt;em&gt;C1
F1=T1&lt;/em&gt;F1
Temporary variables and files declared as OUTPUTS, through the use of the /TY=OUTPUT switch within
either the %QYFIL  or %DFFIL  commands, can appear on both sides of the equality, e.g., consider the
following fragment:
;
%DFFIL /FILE=F1 /NAME=RESULT /TYPE=OUTPUT /OV=Y
%DFCON /CO=C1 /VA=5.123
;
%BEGIN
T1=F1&lt;em&gt;C1
T1=T1&lt;/em&gt;F1
F1=F1*C1
Syntax of Variables
Three type of variables are used to represent values within the arithmetic operations region:Note:   Spaces between variables, operands and the equals sign are allowed.
Variable T ype Value
Files declared by the user Denoted by Fn  where n is the file number (1-64), e.g. F25.
Constants declared by the user Denoted by Cn where n is the number of the constant (1-1000), e.g.
C10.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities460
Main Index
Syntax of Arithmetic Operands
The table given below details the symbols required to achieve specific arithmetic
functions within the arithmetic region:
All the above arithmetic operations require two input variables and one output variable. Operations, may be
carried out on files, temporary variables and constants. Upper or lower case lettering is acceptable and spaces
can be inserted if required.
Examples usage of arithmetic operands:
;
; &amp;ndash; Add two files together &amp;ndash;
;
F1 = F2 + F3
; &amp;ndash; Subtract two files &amp;ndash;
;
F1 = F3 - F4
;
; &amp;ndash; Divide two files &amp;ndash;
;
F1 = F3 / F4
;
; &amp;ndash; Raise a file by a power &amp;ndash;
;
F1 = F1^C2
;
; - Multiply a file by a constant and place in a temporary
variable
;
T5 = F1*3.141592T emporary file variables Denoted by Tn where n is the temporary user variable number (1-
1000), e.g. T27. Variables can also be given names (see %DFCON
and %QYCON).
%QYINT or GET_INTEGER This command which may be used instead of %QYCON or
GET_VARIABLE to define a variable which will only take integer
values.
Arithmetic Function Symbol
Addition +
Subtraction -
Multiplication *
Division /
Exponentiation ^&lt;/p&gt;
&lt;p&gt;461 APPENDIX C
Utilities
Main Index
Assignments
A file or temporary variable appearing on the left of an equation may be simply assigned a value, with no
operator. For example:
;
; Assign a file value
;
T3=F1
;
; Assign a numerical value
;
T3=3.141592
;
; Assign a constant value
;
T3=C1
%LOOP or LOOP
This is a command which may be used as the start of the arithmetic region. All commands between LOOP
and BEGIN will be executed only once at the beginning of the processing. ENDLOOP or %ENDLOOP
should then be used to terminate the loop. All commands after END and before ENDLOOP will be
executed only once at the end of processing.
Example:
%BEGIN
%PRINT /ME=&amp;ldquo;At the start of processing&amp;rdquo;
%LOOP
;Do the calcs&amp;hellip;..
%ENDLOOP
%PRINT /ME=&amp;ldquo;At the end of processing&amp;rdquo;
%END
The two PRINT statements will appear only once.
Arithmetic functions
The following arithmetic functions are available:
The LOG function requires one input variable, in rounded brackets, and one output variable.T rigonometric Function Symbol
log base 10 LOG
absolute value ABS
maximum of two values MAX
minimum of two values MIN
degrees to radians RAD
radians to degrees DEG&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities462
Main Index&lt;/p&gt;
&lt;p&gt;Examples:
;
; &amp;ndash; Log of a file &amp;ndash;
;
F2 = LOG(F1)
;
; &amp;ndash; Log of a temporary variable &amp;ndash;
;
F3 = LOG(T4)
;
; &amp;ndash; Log of a constant &amp;ndash;
;
F3 = LOG(3.141592)
The ABS, RAD and DEG functions also takes one argument. The MIN and MAX functions take two
arguments, of any type. Examples are:
;
F1 = ABS (F1) ;
F2 = MAX (F1,F3) ;
F2 = MIN (F1,0)
;
F3 = MIN (C3,50)
;
Syntax of Trigonome tric Functions
The table given below details the symbols required to achieve specific trigonometric functions within the
arithmetic region:
All trigonometric functions, except AT2, require one input variable, in rounded brackets, and one output
variable. The inputs must be files rather than constants.
The input arguments required for the SIN, COS and TAN functions must be in RADIANS , each being
treated modulo 2*PI.Note:   The argument of the LOG function must be greater than zero.
T rigonometric Function Symbol
sine SIN
arc sine ASIN
cos COS
arc cos ACOS
tan TAN
arc tan ATAN or AT2&lt;/p&gt;
&lt;p&gt;463 APPENDIX C
Utilities
Main Index
AT2 is a real floating point arc tangent with two parameters, i.e. it represents the tan-1( a/b ) and so it requires
TWO input variables, in round brackets (a,b) and one output variable. The output from this function is as
follows:
The input arguments for ASIN, and ACOS must be less than or equal to 1.0.
In all instances upper or lower case letters are acceptable, and spaces can be inserted if required. Examples:
;
; &amp;ndash; Sine of a file &amp;ndash;
;
F2 =  SIN(F1)
;
; &amp;ndash; Tangent of a temporary variable &amp;ndash;
;
F4 = TAN(T3)
;
; &amp;ndash; Real arc TAN function &amp;mdash;&amp;mdash;
;
F3 = AT2 (T1,T2)
Lookup Table Fu nctions
The function LUTn(value) can be used on the right hand side of an equation. The lookup table n must have
been defined in a %DLOOK  command. The value must lie within the bounds of the lookup table, otherwise
a fatal error will result. Example:
%DFFIL /TYP=INP/FI=F1/NAM=INPUT
%DFFIL /TYP=OUT/FI=F2/NAM=OUTPUT/OV=Q
%DLOOK /TA=1/TYP=VALS/NVALS=5
0 1
1 3
2 9
3 19
4 33
;
%BEGIN
F2=LUT1(F1)
%END
Get Point Value Functions
The function FGET(FNO,POINT) gets the value at point number POINT from any input file FNO.a/b = 0 (a=0) : angle = 0
a/b =  (b=0) : angle = /2
a/b =  (a=0,b=0) : angle undefined.
Note:   The outputs from the ASIN, ACOS, ATAN and AT2 functions is always in RADIANS.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities464
Main Index
%IF, %ELSE and %ENDIF
Logic can be performed within the %BEGIN&amp;hellip;%END  loop. The equations within the %BEGIN&amp;hellip;%END&lt;br&gt;
are performed on each data point in the file, in sequence.
The commands %IF , %ELSE  and %ENDIF  can be used to control which equations are performed. The
%ELSE  is optional, and the structures can be nested up to a maximum of 5 deep.
The %IF command is structured as follows:
%IF ( value operator value )
where value may be a file, e.g. F1, a temporary variable, e.g. T4, a constant e.g. C3 or a number, e.g. 1000.
The operator may be one of the following:
The %ELSE  and %ENDIF  commands have no arguments.
A typical structure is:
%BEGIN
%IF ( F2 = 0 )
F3 = 0
%ELSE
F3 = F1/F2
%ENDIF
%END
The spacing is optional. A nested example is:
%BEGIN
%IF ( F2 = 0 )
%IF ( F1 &amp;gt; 0 )
F3 = 1E10
%ELSE
%IF ( F1 &amp;gt; 0)
F3 = -1E10
%ELSE
F3 = 0
%ENDIF
%ENDIF
%ELSE
F3 = F1/F2
%ENDIF
%ENDOperator Meaning
= Equal to
&amp;lt;&amp;gt; Not equal to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Greater than
= Greater than or equal to
&amp;lt; Less than
&amp;lt;= Less than or equal to&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P25</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_025/</guid>
      <description>
        
        
        &lt;p&gt;465 APPENDIX C
Utilities
Main Index
The commands %EXIT and %ABORT can be used to end the calculation if an error in logic occurs. They
have the syntax:
%EXIT /ME=string
%ABORT /ME=string
%EXIT will stop the calculation and save the output files up to the point where the error occurred.
%ABORT  will delete all output files and terminate. For example,
%BEGIN
%IF ( F2 = 0 )
%ABORT /ME=&amp;ldquo;Cannot divide by zero, sorry!&amp;rdquo;
%ELSE
F3 = F1/F2
%ENDIF
%END
The message format is the same as the %PRINT  command (see below). The %ABORT  and %EXIT
commands cannot appear outside an %IF ..%ENDIF  structure, since the program would always terminate
at the first point.
The %PRINT  command, which was used in the definition section, may also be used within the calculation
section. The syntax is the same, except that Fn will display the value of file n, and Tn will print the value of
a temporary variable. For example,
%DFFIL /FI=F1/NAM=INPUT/TYP=INP
%DFCON /CO=C1/FI=F1/VAL=POINT
%BEGIN
%IF (F1 &amp;gt; 100 )
%PRINT /ME=C1+25T+F1
%ENDIF
%END
will print to the screen the point number and value of all points where the value exceeds 100.
%DFFIL /FI=F1/NAM=INPUT/TYP=INP
%DFFIL /FI=F2/NAM=LIST/TYP=LIST/OV=Y
%DFCON /CO=C5/FI=F1/VAL=TIME
%BEGIN
%IF ( F1 = 0 )
%PRINT /FI=F2/ME=&amp;ldquo;Cannot invert at time &amp;ldquo;+C5
%ELSE
T3=1/F1
%PRINT /FI=F2/ME=C5+25T+T3
%ENDIF
%END
will print different messages to a file called LIST.LST depending on the value of the file.
The %BREAK  command breaks the calculation for this data point and moves to the next. Effectively jumps
to the %BEGIN .
%PAUSE or PA USE
This command causes the program to pause and wait for a key press at any point during the processing loop.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities466
Main Index
Synonyms for %IF, %BREAK, etc.
Error Codes and Messages
The following pages contain a list of the possible errors that can be produced by illegal commands or
conditions in MFRM. The error numbers that correspond to each error condition are also given. For some
errors MFRM will display the section in the command file that is causing the error. Suggested remedies are
given for each error code.%IF , %ELSE  and %ENDIF These may be replaced by IF , ELSE and ENDIF .
%EXIT and %ABORT These may be replaced by EXIT and ABORT
%BREAK &amp;hellip;may be replaced by BREAK.
ERROR Meaning Suggested remedy
1 Incorrect keyword An illegal % command has been found in the template file.
Edit the file and correct the command.
2 Illegal command file
instruction.A syntax error has occurred in the template file. Edit the
command file and correct the syntax.
3 Invalid switch. An illegal switch has been incorporated in the % command
that is shown with the error code. Edit the template file and
correct the switch.
4 No such input file. The input file declared by the %DEFIL command, or the
input file entered by the user does not exist in the specified
directory. Edit the template file and define the correct
filename or enter the correct filename when prompted.
5 Output file already exists. The output file declared by the %DFFIL command, or the
output file entered by the user already exists. Either define or
enter another filename, or delete the existing version.
6 Missing switches in
command line.There is a required switch missing from the % command that
is shown with the error code. See the sections above for details
of the correct switches and edit the template file accordingly.
7 Syntax error in switch. There is a syntax error in the switch that is shown with the
error code. See the sections above for details of the correct
switches and edit the template file accordingly.
8 File assignment number
greater than 64.FRM only allows 64 files to be defined in any one template
file. Limit the number of files in the command file to 64.
9 Multiple file numbers. There is more than one file defined with the same file number.
Edit the template file and define each file with a unique file
number.
10 There are more than 1000
constants defined.MFRM only allows 1000 constants to be defined in any one
template file. Use fewer constants in the command file.&lt;/p&gt;
&lt;p&gt;467 APPENDIX C
Utilities
Main Index
11 Multiple constant numbers. There is more than one constant defined with the same
constant number. Edit the template file and define each
constant with a unique number.
13 Too many temporary
variables are defined.FRM only allows 1000 temporary variables to be defined in
any one template file. Use fewer temporary variables by
overwriting unwanted variables.
14 Error in default option.
15 Undefined variable appears
on RHS of = sign.A temporary variable has been placed on the right hand side of
the equals sign without it being assigned a value. Edit the
template file and either change the temporary variable or
assign it a value.
16 Undefined file. A file number has been used in the template file, but there is
no file assigned to it. Edit the template file and either change
the file number, or assign a file to the file number using the
%DFFIL or %QYFIL commands.
17 Undefined constant. A constant number has been used in the template file, but
there is no value assigned to it. Edit the template file and either
change the constant number, or assign a value to the constant
number using the %DFCON or %QYCON commands.
18 Illegal tangent function. A calculation has occurred that involves taking the tangent of
a value in the range 1.570796326 to 1.570796327 or the
tangent of a value in the range 1.570796326 to 1.57079632.
19 Illegal arc cosine function. A calculation has occurred that involves taking the arc cosine
of a value greater than 1, or of a value less than -1.
20 Illegal arc sine function. A calculation has occurred that involves taking the arc sine of
a value greater than 1, or of a value less than -1.
21 Illegal log function. A calculation has occurred that involves taking the log of a
value less than zero.
22 Input files have different
lengths.The input files must all have the same length. Rerun FRM
with files that have the same number of data points in each
file.
23 Input files have different
sample rates.The input files must all have the same sample rate. Rerun
FRM with files that have the same sample rate.
24 Corrupted template file. The template file has become corrupted and cannot be
interpreted. T ry and edit the template file and then attempt
rerun FRM again. If this is unsuccessful it may be necessary to
recreate the template file. ERROR Meaning Suggested remedy&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities468
Main Index
25 Attempt to raise a negative
number to a non-integer
power.An error has occurred in the course of a ^ calculation
26 No such command file.
27 Cannot open command file.
(Check if file is locked).An error has occurred reading the template file
30 Invalid lookup table ID. The lookup table Id must be in the range 1-10.
31 Lookup table already
defined.An attempt has been made to define two lookup tables with
the same ID.
32 Invalid lookup type. Use
/TY=File or /TY=Values.
33 The number of lookup
values must be in the range
2-100.
34 Lookup table file open or
read error.
35 Number of lookup table
values does not match /NV
command.
36 Lookup table out of
sequence.
37 There must be two real
values on a lookup table
entry.The above errors may occur when defining lookup tables.
38 Invalid overwrite command,
use /OV=N, /OV=Y or
/OV=Q.
39 Lookup table not defined.
40 Input value out of lookup
table range.The above errors occur when using a lookup table.
41 Number of constants
exceeds 100.Too many numbers have been used in the calculation loop.
42 Equation must contain an =
sign.
43 Equation must have a RHS
expression.An invalid equation structure has been encountered.ERROR Meaning Suggested remedy&lt;/p&gt;
&lt;p&gt;469 APPENDIX C
Utilities
Main Index
44 Invalid command
encountered inside
{%BEGIN %END} Only IF ,ENDIF ,ELSE,PRINT,ABORT and EXIT are allowed
after %
45 %IF structures nested too
deeply.
46 %ELSE encountered outside
%IF structure.
47 Consecutive %ELSE
commands encountered.
48 %ENDIF command has no
matching %IF .
49 %EXIT or %ABORT
encountered outside %IF
structure!
50 Missing &amp;ldquo;(&amp;rdquo; or &amp;ldquo;)&amp;rdquo; in %IF
command.
51 Missing operator in %IF
command.
52 Invalid or missing LHS of
%IF command.
53 Invalid or missing RHS of
%IF command.
54 Incomplete %IF structure -
missing %ENDIF .The above errors indicate invalid IF ..ELSE..ENDIF structures
55 String too long.
56 Internal string table has
exceeded 1024 characters.The /ME parameters have exceeded internal limits.
57 Invalid constant value or
missing file in %DFCON
58 File not defined.
59 Attempt to get details from
an output file.
60 Error opening file to get
DFCON keyword.
61 Error reading file header to
get DFCON keyword.ERROR Meaning Suggested remedy&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities470
Main Index
Module Ope ration
The MFRM module can be run in one of the following ways:
In Stand alone mode by invoking mfrm, as explained in Configuration, 328 .
By incorporating the MFRM commands in a batch operation
Once initiated in either of the interactive modes one or two MFRM will display the following screen.62 Unable to convert DFCON
keyword to a value.
63 Unable to find DFCON
keyword.The above errors occur when using DFCON to load header or
extra details into a constant.
64 Attempt to use a list file in
calculations.
65 Attempt to %PRINT to a
non-list file.
66 Error writing to list file.
67 Invalid format for message
string.
68 Expanded message string is
too long.
69 T oo many spaces for message
string.
70 T emporary variables cannot
be displayed outside {
%BEGIN &amp;hellip;  %END }
structure.
71 Invalid tabulation in
message string.
72 Cannot tabulate backwards. The above messages occur when trying to %PRINT .
74 Checks that there is at least 1 valid input file. If there is NOT
then error 74 is issued and the program terminatesERROR Meaning Suggested remedy&lt;/p&gt;
&lt;p&gt;471 APPENDIX C
Utilities
Main Index
Figure 3-78  Screen One of MFRM
Additional menu options will become available when a formula template file has been named. An overview
of the module structure is shown below in Figure 3-79.
Figure 3-79   The Overall Module Structure of MFRM
The menu options on screen one are as follows:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities472
Main Index
After a template file has been run, MFRM will re-display the menu shown above, but with additional options
which are designed to enable the results of processing to be plotted or listed as appropriate.
The post-processing menu is shown below.Option Description
Run the formula
template An MFRM template file must be named. If selected a file input screen appears.
A command Filename (template file) must be entered in this field. Probably the
easiest way of naming a file is by using the F3/List facility which brings up the file
browser.
The template file is an ASCII file such as might be created using a text processor.
If it is created in a word processor then it must be saved as an ASCII file; a word
processors own format usually contains hidden formatting characters embedded
in the text, and these will confuse MFRM.
By default the template file must have a . frm extension, although the filename
can be anything as long as MFRM can interpret it&amp;rsquo;s contents. MFRM
manipulates data files which are in either a time series or histogram format. The
.dac extension may be omitted. Files with the correct internal format but
different file extensions such as spectra or histograms must have their names
entered in full, i.e., including the file extension.
Note : The input data files being processed, must all be of the same length, i.e.,
contain similar numbers of samples and must have the same sample rate. If these
conditions are not met, MFRM will issue an error message. The MLEN PTIME
modules can be used to ensure conformity with these conditions.
When a valid file has been entered and accepted MFRM will carry out whatever
instructions it contains.
At this point, if no errors are detected, a message will be displayed to indicate that
arithmetic processing has commenced. The appearance of subsequent screens
depends very much upon the instructions in the template commands file.
Edit the template file This option loads the MFRM file into a user nominated text editor.
The text editor&amp;rsquo;s name can be user supplied, or it may be stored in the local
environment by the keyword $EDITOR (see module MENM for environment
manipulation).
Help on syntax This option calls 8 pages of explanation and help about the syntax and usage of
FRM commands. It is a concise version of the Technical Overview in this
document.
eXit Quits FRM. Work is not automatically  saved.&lt;/p&gt;
&lt;p&gt;473 APPENDIX C
Utilities
Main Index
Figure 3-80  The Extended MFRM Postprocessing Menu
The additional menu options are as follows:
Batch Ope ration
MFRM can be run in all the standard batch modes as with most other  utility modules. A list of batch
keywords:Option Description
Plot results file When selected, this option will run the graphics module Multi File Display
(MMFD) which allows the results the output files to be viewed. When MMFD is
quit the user is returned to MFRM.
If no plot file was produced then this option is superfluous.
View/edit list output This option will load the text editor (discussed in Editing the Template File above)
and display the ASCII list (. lst) file produced when the template was run.
If no list file was produced then this option is superfluous.
Output file statistics This option will display a screen of statistics about the results of the most recent
run of an MFRM template.
/OPTion Main menu option [Run,Edit,Plot,eXit
/INP= The name of the template commands file to process. /INP=TEMP1
/FILnn= The name of any input data file to manipulate, or output file to create. This keyword
must be issued the same number of times as the %QYFIL command has been used. The
sequence of file names must also correspond i.e., the first /FIL= keyword will be matched
with the first %QYFIL command etc. /FILnn=FILE1/FILnn=FILE2
/DIVide Divide by zero value
/ZERo Special case of 0/0 (which is replaced by zero, one
/AZERo Arctan (x=0, y=0) value&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities474
Main Index
Exam ple MFRM Comm and Te mplate Files.
The three examples that follow have been provided in order to illustrate the use of the MFRM formula
processor.
Simple Arithmetic Test
In this example, MFRM will be used to calculate the following formula in which the variables &amp;quot; a &amp;quot; and &amp;quot; b
&amp;quot; are represented by data files and the variable &amp;quot; c &amp;quot; is a user-defined constant:
÷ { 2 a2 + ( b /c )2 }
;
; &amp;mdash; Template (FRM1.FRM) for the calculation of the function :
;
;( 2.0 * A ** 2.0 + (B / C) ** 2) ** 0.5
;
; &amp;mdash; Prompt for the two input filenames &amp;mdash;
;
%QYFIL /FI=F1 /PR=&amp;ldquo;Enter first input filename (a)&amp;rdquo; /TY=IN
%QYFIL /FI=F2 /PR=&amp;ldquo;Enter second input filename (b)&amp;rdquo; /TY=IN
;
; &amp;mdash; Define the name of the output file &amp;mdash;
;
%DFFIL /FI=F3 /NA=RESULT.NEW /TY=OUT /LABEL=&amp;ldquo;RESULT&amp;rdquo;
/UN=&amp;ldquo;WIDGETS&amp;rdquo;/OV=Q
;
;&amp;mdash; Prompt for the constant &amp;quot; c &amp;quot; &amp;mdash;
;
%QYCON /CO=C1 /PR=&amp;ldquo;Enter the constant (c)&amp;rdquo;
;
; &amp;mdash; Define the other two fixed constants &amp;mdash;
;
%DFCON /CO=C2 /VA=2
%DFCON /CO=C3 /VA=0.5
;
; &amp;mdash; Now start the calculation &amp;mdash;
;
%BEGIN
;
T1=F1&lt;em&gt;F1
T1=C2&lt;/em&gt;T1
T3=F2/C1
T4=T3^C2
T5=T4+T1
F3=T5^C3/OV= Whether to overwrite an output file
/CONnn= The value of any constant to be used. This keyword must be issued the same number of
times as the %QYCON command has been used. The sequence of constants must also
correspond i.e.the first  /CONnn= keyword will be matched with the first %QYCON
command etc. /CONnn=5.123&lt;/p&gt;
&lt;p&gt;475 APPENDIX C
Utilities
Main Index
%END
;
; &amp;mdash; Finished &amp;mdash;
Try executing together with data file 65.dac  as file A and 102.dac  as file B, both DC levels with amplitude
65 and 102 units respectively and using a value of 5 as the input constant. After processing, use MQLD to
check the maximum value calculated in file result.new . It should be 94.1.
Generation of a Square Wave
In this example, a square wave function will be generated by first creating and then adding together a number
of individual sine waves of appropriate amplitude and frequency. In effect the series, to five terms, being
solved is:
The methodology for calculating this function is based on the use of a ramp or sawtooth function going from
0 to 360 degrees. If a ramp is used then only a single cycle of square wave form will be produced and if a
sawtooth is used, then the same number of cycles as teeth will result. Figure 3-81 below illustrates the sawtooth
function, sawtooth.dac .
Figure 3-81   The Sawtooth Function sawtooth.dac
The MFRM template detailed below converts the seed input file ( sawtooth.dac ) to RADIANS and stores
the result in a temporary variable file called T50. This file is then scaled and each of the five terms of the
series outlined above calculated and stored in variables T1, T3, T5, T7 and T9. Finally, all the terms are
added and the result loaded into the output file square.dac .
;
; &amp;ndash; Get the name of the input seed file &amp;ndash;
;
%QYFIL /FILE=F1/PROMPT=&amp;ldquo;Enter name of seed file [Degrees]&amp;quot;/TYPE=
INPUT
;Y a0t sina03t sin
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a05t sin
5&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a07t sin
7&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a09t sin
9&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + + + + =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities476
Main Index
; &amp;ndash; Define the output file name &amp;ndash;
;
%DFFIL /FILE=F2/ NAME=square/ TYPE=OUTPUT /OV=Q
;
; &amp;ndash; Ask for  and define constants constants &amp;ndash;
;
%QYCON /CONSTANT=C1 /PROMPT=&amp;ldquo;Enter amplitude&amp;rdquo;
;
; &amp;ndash; Start the calculations &amp;ndash;
;
%BEGIN
;
; &amp;mdash; Convert seed to RADIANS and create basic sine wave &amp;mdash;
;
T50 = RAD(F1)
T1 = SIN(T50)
;
; &amp;ndash; Calculate the first term in the series, T1 &amp;ndash;
;
T1 = C1&lt;em&gt;T1
;
; &amp;ndash; Calculate the second term in the series, T3 &amp;ndash;
;
T2 = 3&lt;/em&gt;T50
T3 = SIN(T2)
T3 = T3/3
T3 = C1&lt;em&gt;T3
;
; &amp;ndash; Calculate the third term in the series, T5 &amp;ndash;
;
T2 = 5&lt;/em&gt;T50
T5 = SIN(T2)
T5 = T5/C
T5 = C1&lt;em&gt;T5
;
; &amp;ndash; Calculate the fourth term in the series, T7 &amp;ndash;
;
T2 = 7&lt;/em&gt;T50
T7 = SIN(T2)
T7 = T7/7
T7 = C1&lt;em&gt;T7
;
; &amp;ndash; Calculate the fifth term in the series, T9 &amp;ndash;
;
T2 = 9&lt;/em&gt;T50
T9 = SIN(T2)
T9 = T9/9
T9 = C1*T9
;
; &amp;ndash; Add all the terms to produce the final square wave &amp;mdash;
;
F2 = T1+T3
F2 = F2+T5
F2 = F2+T7&lt;/p&gt;
&lt;h1&gt;477 APPENDIX C
Utilities
Main Index
F2 = F2+T9
%END
;
; &amp;mdash; Finish &amp;mdash;
;
Turning Points in an Input File
The algorithm below calculates the irregularity factor  which gives an indication of the spread of frequencies
in a signal according to this equation.
where E[0] and E[P] which are statistical parameters that express the number of zeros and peaks per second
according to:
The Mn values can be calculated from:
The  value can vary from 1.0 (one dominant frequency) to 0.0 (equal energy at all frequencies).
; template calculates moments of PSD and irregularity factor
;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
;
; Get the input filename and the output ASCII filename
;
%QYFIL /FI=F1 /TYP=INPUT /PR=&amp;ldquo;Input Spectra Filename (.PSD)&amp;rdquo;
%DFFIL /FI=F2 /TYP=LIST /NA=irrfact.lst /OV=Y
;
; Define constants
;
%DFCON /CO=C2 /VA=2.0
%DFCON /CO=C3 /VA=TOTPTS /FI=F1
%DFCON /CO=C4 /VA=4.0 %DFCON /CO=C10 /VA=0.0
;
; Counter variables
;
; Current Point
;
%DFCON /CO=C9/VA=POINT/FI=F1
E0
EP&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
E0m2
m0&amp;mdash;&amp;mdash;-12/&lt;/h1&gt;&lt;h1&gt;EPm4
m2&amp;mdash;&amp;mdash;-12/&lt;/h1&gt;&lt;p&gt;MnfnGffd
0
=
&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities478
Main Index
; Current time = frequency
;
%DFCON /CO=C11/VA=TIME/FI=F1
;
; Frequency Increment
;
%DFCON /CO=C12/VA=INCREM/FI=F1
;
; Initialise Summation Counters
;
%DFCON /CO=C13/VA=0.0
%DFCON /CO=C14/VA=0.0
%DFCON /CO=C15/VA=0.0
;
%BEGIN
;
C5=C11^C2
C6=C11^C4
C7=C11^C10
T1=F1&lt;em&gt;C5
T2=F1&lt;/em&gt;C6
T3=F1&lt;em&gt;C7
T4=T1&lt;/em&gt;C12
T5=T2&lt;em&gt;C12
T6=T3&lt;/em&gt;C12
C13=C13+T4
C14=C14+T5
C15=C15+T6
;
; Check for end of file and write out information
;
%IF (C9 = C3)
%PRINT /FI=F2 /ME=&amp;ldquo;Moment&amp;rdquo;+15T+&amp;ldquo;Value&amp;rdquo;
%PRINT /FI=F2 /ME=&amp;rdquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;rdquo;
%PRINT /FI=F2 /ME=&amp;ldquo;0&amp;rdquo;+15T+C15
%PRINT /FI=F2 /ME=&amp;ldquo;2&amp;rdquo;+15T+C13
%PRINT /FI=F2 /ME=&amp;ldquo;4&amp;rdquo;+15T+C14
%PRINT /FI=F2 /ME=&amp;rdquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;quot;
;
;  Calculate expected number of zeros per second, E(0)
;   C20=C13/C15   C21=C20^0.5
;
;  Calculate expected number of peaks per second, E(P)
;
C22=C14/C13
C23=C22^0.5
;
;  Calculate irregularity factor, Gamma
;   C24=C21/C23
;
;  Write out expected values and irregularity factor to ASCII
file
;
%PRINT /FI=F2 /ME=&amp;ldquo;E(0)  =&amp;quot;+15T+C21&lt;/p&gt;
&lt;p&gt;479 APPENDIX C
Utilities
Main Index
%PRINT /FI=F2 /ME=&amp;ldquo;E(P)  =&amp;quot;+15T+C23
%PRINT /FI=F2 /ME=&amp;ldquo;Gamma =&amp;quot;+15T+C24
;
;  Write the irregularity value to extra details area of the PSD
;
%WTVAL /FI=F1 /KW=IRRFACT /VA=C24
%ENDIF
%END&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities480
Main Index
File Cut and Paste - (M LEN)
MLEN is used to extract a portion of data from one file or several files, and load the extracted portions into
a new output file. It can be used to concatenate (merge), individual data sets into a single output file. It can
also be used to delete a selected portion of data from files.
The process of data extraction is carried out by cutting portions of data from an input data file and copying
them to a named output file. The limits of the extraction, i.e. the start and end of the data to be cut, may be
defined in terms of X-axis parameter, usually time, or data point numbers; the original input data file remains
unaltered. The process of concatenation consists of joining together a number of input data sets, with the
same sampling rate, into a single output file.
MLEN automatically recalculates the appropriate header details for the resultant output file. If any of the
input data files have extra details associated with them, then these will be attached to the output file
accordingly. If any of the input files have extra details, then details from all files to be specified for
concatenation will be attached to the output file. This will be done in the order the files are specified. If there
are duplicate names then subsequent files will overwrite existing values.
Module Operation
The MLEN module can be run in one of the following ways:
In stand alone mode by invoking mlen at the system prompt as explained in Configuration, 328 .
By incorporating the MLEN commands in a batch operation.
Once running in interactive mode, a screen appears showing the main menu selections.
Extract Single File
This option displays a form shown in Figure 3-82. The name of the data file from which data are to be
extracted must be entered. By default, MLEN expects this file to have a time series format and a . dac file
extension. If a . dac file is being processed then the . dac extension may be omitted. If another file type with
the correct internal format, such as spectra is being processed, then it must have its name entered in full, i.e.
including the file extension.&lt;/p&gt;
&lt;p&gt;481 APPENDIX C
Utilities
Main Index
Figure 3-82   Data Extraction from a Single File
Extraction according to X-axis parameter (Time)
The fields Start  and End become active. For the start time, any X-axis value within the range defined between
the start and end of the data set may be entered. Extraction will commence at the data point nearest and
LESS than the value of X-axis parameter specified. For example, for a signal sampled at 50Hz, specification
of a start time of 0.11 seconds will cause MLEN to commence extraction at 0.1 seconds.
The default for the start of extraction is the beginning of the data. In addition to entering an explicit numeric
value at which extraction is to commence, it is possible to enter instead the name of an extra details keyword,
see the documentation associated with the Extra Details Manipulation module, Peak-Valley Extraction -
(MPVXMUL), 494 , for more information on the extra details area.
After accepting a keyword, MLEN will search the extra details area of the input file and assign the value of
the X-axis parameter for the start of extraction. For example, suppose that the input file referred to above
contains an extra details keyword called T1 which has a value 0.11 associated with it, then entering the word
T1 in response to the above prompt will cause MLEN to use the value 0.11 for the start time for extraction.
If the keyword cannot be found an error message will result.Option Description
Input File MLEN looks for the input file in the current directory. However, other directories
can also be accessed if the complete file specification of path name and file name
is entered. Pressing the pick list button will display a list of available files, or allow
the user to choose other files/directories, using the Path option.
Output File Name The extracted data will be written to an output file with a . dac file extension.   As
a default, this file will be created within the current directory. If another file
extension and/or destination are required then these must be specified in full.
At this stage it is required to specify the method by which the limits of the
extraction will be defined. This is done by selecting either Time or Points on the
two horizontal radio buttons.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities482
Main Index
For the end time, any X-axis time value within the range defined between the start point specified above and
end of the data set may be entered. The default for the end of extraction is the end of the data.
Extraction according to data point number
The fields Start Point  and End Point  become active. For the start point, any point number within the range
defined by the data set may be entered. Extraction will include the data point specified.
The default for the start of extraction is the first data point; this default may be selected by pressing the
ENTER key. Typing START would have the same effect. For the end point, any point number within the
range defined by the data set may be entered (even a number less than the start point). Extraction will include
both the data points specified.
The default for the end of extraction is the last data point; this default may be selected by pressing the
ENTER key, or by typing END.
When the user has filled all the fields, and accepted them, MLEN will proceed to extract data according to
the defined limits. On completion it will present a summary table of the operations carried out.
Extract Mult iple Files
Multiple File Extraction allows the same portion of data to be extracted from a selection of one or more input
files, and written to other output files, or files with the same names as the input files. There are two ways of
selecting the input files:
Test Name + channels
Separate File namesNote:   MLEN analyzes the file selected and displays the range of start and end times/points on the screen.
The numbers displayed will depend upon the file selected.&lt;/p&gt;
&lt;p&gt;483 APPENDIX C
Utilities
Main Index
Test name + channels
As with the Extract Single File option, it is required to specify the method by which the limits of the
extraction will be defined. This is done by selecting either Time or Points on the horizontal bar question.
The start and end points are entered in the same manner as they are for Single File Extraction (see above).
After completion of all the entries, MLEN will proceed to extract data according to the defined limits and
will display a scrolling list of file names and the number of points being processed as the extraction takes place
on that file. On completion it will present a summary table of the operations carried out.Option Description
Test Name Test Name is the generic file name, i.e. if the user were to enter data  as the file
name in this field then the program would look for data01 , data02 , data03&lt;br&gt;
and so on up to the number of channels.
The concept of a generic name for a test represents a quick method of entering
channel names for processing. The methodology is based on the fact that
associated data (derived from the same test) are usually demultiplexed after data
acquisition into individual channel files. The structure of these consists of a
generic base name, normally the name of the multiplexed data file itself, with the
appropriate channel numbers appended.
By default MLEN expects to process standard time series data files with a file
extension of . dac. Furthermore, the above generic test name convention only
applies to . dac files.
Channels MLEN will prompt for the numbers of the channels to process. The individual
channel numbers can be entered as a string of numbers separated by commas, or
grouped by hyphens, or as a combination of the two.
Start and End points and SRATE do not have to be equal. Each channel can have
a different sample rate and signal length.If using extra details keywords to identify
the start and end then the values may well differ from file to file.
Output File Name The Output File Name is the generic test name used to create the output files,
with the channel numbers selected appended to it. For example, if test  was
entered as the Output File Name name then the files; test01 , test02 , test03 ,
etc., dependent on the channel numbers requested, would be created.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities484
Main Index
Separate File Names
As with the two extraction options described earlier, the user must specify the method and the limits of the
extraction. This is achieved by selecting Time or Points on the horizontal bar question. The start and end
points are entered in the same manner as they are for single file extraction (see earlier). On accepting this
information an option is made available for editing the combined list of input files in case you made a mistake
or wish to tag certain of them for processing and exclude others without redefining the input file lists. By
using the cursor key or the mouse, files in the list can be tagged or untagged as desired. If OK is selected as
in the above example, then MLEN carries out the extraction as per user specifications.
Delete Section of Single File
Single File Deletion enables a portion of data to be removed from a file and the remaining data to be written
to a single output file. The method of input for deletion is the same as for extraction. See Extract Single File, 480 .Option Description
Input File Names MLEN allows up to fifty files per input line to be processed, which means a total
of 200 files can be extracted at any one time. The four input file fields allow files
to be selected in one of three ways:
A string containing a list of file names separated by commas, e.g. sine01 ,
sine02 .
A string containing a group of file names separated by hyphens, i.e.
entering data(1-3)  would select data01 , data02 , and data03 .
A list of file names selected using the pick list button. If this method is
used then a directory listing of . dac type files in the selected directory are
displayed.
Start and End points and SRATE do not have to be equal. Each channel can have
a different sample rate and signal length.If using extra details keywords to identify
the start and end then the values may well differ from file to file.
Output File Options The output files for a multiple extraction, by default will overwrite the input files
unless a new extension for the output files is specified. This is achieved by selecting
the Modify Extension option on the horizontal bar question.
New Extension On pressing ENTER a new prompt will appear requiring a new extension to be
entered. MLEN allows up to three characters for this extension.
Note:   Defaults for the start and end limits for deletion are not given as they are for extraction, and entering
start and end limits which both equal the start and end limits of the data set will result in an error
message.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P26</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_026/</guid>
      <description>
        
        
        &lt;p&gt;485 APPENDIX C
Utilities
Main Index
Delete Section of Multiple Files
Multiple File Deletion allows the same portion of data to be deleted from a selection of one or more input
files and written to these or other output files. The method of input for deletion is the same as for extraction.
See Extract Multiple Files, 482 .
Concate nation
Concatenation allows the user to join several files into a larger single file. Joining is nose to tail. MLEN allows
up to fifty files to be processed by using either the pick list or explicit file naming via the keyboard.
If you have selected a list of files and wish to change it, add to it, otherwise operate on that list, simply click
on the pick list button a second time. A menu will appear allowing for several options to operate on the file
list.
The File Options menu
The merged data will be written to an output file. As a default, this file will be created within the current
directory and, irrespective of the input file extensions, the extension . dac appended to the name entered. If
another extension or destination are required then these must be entered explicitly. On completion it will
present a summary table of the operations carried out. If the NOTEBOOK keyword is defined within the
local environment, (see Modifying the MSC Fatigue Environment (MENM), 1501  for more details) an entry of this
information will be made within the fatigue notebook.Note:   Defaults for the start and end limits for deletion are not given as they are for extraction. Entering
start and end limits which equal the start and end limits of the data set will result in an error
message.
Note:   The order in which file names are entered is important. The sample rate associated with the first
data set entered is used by MLEN as the reference rate. The sample rate of all the other data sets to
be concatenated must be equal to this reference; if they are not them an error message will be output.
It is up to the user to ensure that sample rates are compatible and, if necessary to use the PTIME
module to adjust sample rates accordingly ( Sample Rate Adjust Option, 243 ).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities486
Main Index
Start-End Smooth ing
The questions on this page determine the method by which the start and end of a signal are to be smoothed.
Input fields are explained below.
Reverse File
This option allows the user to reverse a . dac file to produce a . dac file whose first point is the last point of
the input file, and whose last point is the first point of the input file, etc. This can be an aid when filtering
certain .dac files. There are only two fields to fill (the name of the input file and the name of the reversed
order output file.
Batch Op eration
MLEN can be run in non-interactive batch mode. In this mode of operation complex procedures for creating
signals can be created. A typical batch command line is:
mlen /opt=1/inp=data01/out=data02/ov=y/type=t/sta=0.75/end=12.0Option Description
Input File Names The file name can be typed in directly or can be selected from a pick list. The
default extension is . dac.
Joining Function The end point may be joined to the first point using a half-sine, a linear ramp or
by tapering a section at the end of the signal such that it blends into the first point.
Alternatively, if the end point does not require joining to the first, the taper
options may be used to smooth the start and end sections of the signal. The taper
options may also be used in conjunction with the join options to smooth the start
and end sections of the signal before appending the ramp or half-sine to join the
signal start and end.
Join Window The Join Window is the length of signal over which the edited ends will be joined.
Taper Function The edited signal can be tapered using one of two functions:
Ramp function
Half sine function
If a function is selected then the duration over which the signal is to be tapered
will be requested. If &amp;lsquo;None&amp;rsquo; is selected, the end points are simply joined using the
curve selected in the join function. If tapering is not used, the signal may exhibit
hard transitions at the intersections of the joining curve.
Taper Window The Taper Window is the length of signal over which the edited ends will be
tapered together.
Output File Name This is the name of the smoothed file. Its default extension is . dac.&lt;/p&gt;
&lt;p&gt;487 APPENDIX C
Utilities
Main Index
In this example, MLEN will extract a portion of data from an input file called data01.dac , resident in the
current directory and write it to an output file called data02.dac . If a file with this name already exists
MLEN will overwrite it. The extraction will be according to X-axis units, time in this case, and will
commence at 0.75 seconds and end at 12.0 seconds.
A list of MLEN batch keywords:
/OPT= =1 Single file extraction, =2 Multiple file extraction, =3 Single file deletion, =4
Multiple file deletion, =5 Concatenation, =6 Start-End smoothing, =7 Reverse File
/OUT= The name of the output file.
/OV= Whether to overwrite an existing output file, OV=Y.
/FIL TYPe= Multiple file option. FILTYP=T test name + channels, specifies a generic input file
name (only applicable when OPT=2 or 4)
/INPut= Input file list for single or multiple file /INP= FILE1,FILE2, etc. up to 50 times,
processing. Input can be used up to and this structure can be used up to 4 times,
each time naming up to 50 times making a total of 200 files (i.e. up to 200 files can
be processed)
/MODify= Whether to modify file extensions, = O - Overwrite input files for output files, = M&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify extensions
/EXT= Extension to append to output files EXT=EXTENSION
/GEN= Generic input test name.
/CHA= Channels to process CHA=(1-6)
/OUT= Generic output name
/TYPE= In the case of extraction and /TYPE= T - Selects X-axis units, (default) deletion,
specifies the method for defining the start and end points /TYPE= P - Selects point
numbers.
/STA= Start point for the Extraction/Deletion STA= 0.5, STA= 3
/END= End point for the Extraction/Deletion /END= 12.4, END= 25&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities488
Main Index
Multi- File Manipulation - (M MFM)
MMFM is a module which can be used to manipulate standard time signal data files. Files can be added,
subtracted, multiplied, divided, or added according to the rules of vector addition. Complex mathematical
procedures can be built up by chaining together sets of MMFM commands in a batch process.
MMFM supports the following arithmetic operations:
Addition of a number of files.
Subtraction of one or several file(s) from another.
Multiplication of one or several file(s) by another.
Division of one file by one or more files.
Vector addition of two or three files.
Throughout the course of the above manipulations the following conventions are observed:
The largest and smallest numbers which can be processed are respectively 1.010 and 1.010. Some
computer types may be able to process numbers beyond this range, however, results may be
unpredictable.
Zero values are taken to be real numbers in the range: 1.0-10 &amp;lt; n &amp;lt; 1.010
The vector addition processor assumes that the input files X, Y, and Z are orthogonally related.
The vector addition processor accepts either two or three input files. Each point in the output file is
calculated on the basis of the following combination of values from the input files:
OUTPUT =   or OUTPUT =&lt;br&gt;
X2Y2+ X2Y2Z2+ + &lt;/p&gt;
&lt;p&gt;489 APPENDIX C
Utilities
Main Index
Operations on single parameter data files (time series type, . dac)
Depending on the specific operation to be carried out, MMFM can accept an unlimited number of input
files to process. These files can be of unequal length and unequal sampling rate. The length of the file which
contains the result of the operation, the resultant output file, is calculated on the basis of the smallest and
largest values of X-axis parameters found in the set of input data files. The sample rate of the resultant output
file may take any value and is not limited to any of the input sample rates. For example, in Figure 3-83 below,
data file s1.dac  had a sample rate of 1000 Hz and a duration of 1 second, whilst file s2.dac  had a sample
rate of 750 Hz and a duration of 2 seconds. The file resulting from the addition of these two data sets has a
sample rate of 500 Hz and is given in file s12.dac .
Figure 3-83  Addition of Files of Different Sample Rate and Duration
Operations on three parameter data files (histogram type)
In addition to processing time-series type data files, MMFM can also process files which have the standard
histogram format. In the general case, MMFM can process the following histogram file types:
Rainflow cycle (. cyh)
Fatigue damage (. dhh)
Range mean (. rmn)
Range pair (. rph)
Markov (.rph)
The ability to process histograms in this way can be very useful, particularly in situations where the data, if
left in the form of time-series, would consume an inordinate amount of disk space if concatenated for some&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities490
Main Index
reason. A significant amount of disk space could be saved if each history were converted to an appropriate
rainflow matrix and then the three histograms added together. The fatigue analysis could then be carried out
using the matrix rather than the time series fatigue processors.
Module Ope ration
The MMFM module can be run in one of the following ways:
In stand alone mode by invoking mmfm at the system prompt as explained in Configuration, 328 .
By incorporating the MMFM commands in a batch operation.
The first mode is interactive. Once running in interactive modes MMFM displays the following menu of
options:
Addition
Subtraction
Multiplication
Division
Vector Addition
Regardless of the option you select you will be prompted for a list of input signal names than may be entered
one per line, or as a string of names separated by commas, or as ranges e.g. saetrn , saesus , saebrakt ,
or data (1-3) . The last example ( DATA (1-3) ) would load data01.dac , data02.dac  and
data03.dac .
Probably the easiest method of entering input file names is to use the pick list facility. Once a set of files has
been selected you can always press the pick list button again to add or change the list of selected files.
If file names are entered as:
file1,file2,file3,&amp;hellip;, filen
MMFM will process them in the following ways:Note:   Ensure that histograms are compatible prior to manipulation. They must have the same
dimensions, i.e. the same start point and bin size on both axes.
Note:   If histograms are being manipulated it is up to the user to ensure that they are compatible (see the
technical overview).
Note:   The order in which file names are entered is important especially the first one.&lt;/p&gt;
&lt;p&gt;491 APPENDIX C
Utilities
Main Index
The second input screen looks like Figure 3-84.
Figure 3-84   The Addition ScreenOption Description
Addition Selection of the addition option above will cause MMFM to add the input data
files according to:
file1 + file2 + file3 +&amp;hellip; + filen
Subtr action Selection of the subtraction option above will cause MMFM to subtract data files
according to:
file1 - {file2 + file3 +&amp;hellip; + filen}
Multi plication Selection of the multiplication option above will cause MMFM to multiply data
files according to:
file1 x file2 x file3 x&amp;hellip; x filen
Division Selection of the division option above will cause MMFM to divide data files
according to:
file1 / {file2 x file3 x&amp;hellip; x filen}
Vector addition Selection of the vector addition option above will cause MMFM to add data files
according to:
(file12 + file22)1/2 or
(file12 + file22 + file32)1/2
depending on the number of file names entered.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities492
Main Index
MMFM will scan the input files for length and sampling rate. If the input files are of different length or
sample rate a warning message will be output. Under all circumstances the following messages will be
displayed.
The output signal will start at S and finish at F.
The lowest sample rate in these files is L samples/sec,
the highest is H samples/sec.
Signals with different sample rates will be correctly handled. Vector addition takes either two or three signals,
the other options take up to 50 input files.
MMFM handles XYZ files, such as histograms, but only if the X and Y-axis limits (max and min values) are
the same for each input file. The multi-file manipulation is performed only on the Z axis.Option Description
Output File Name The output file name defaults to the standard . dac type. If another extension or
destination are required then these must be entered explicitly; this is particularly
important when working with histograms.
The name of the first input file entered is offered as the default output name.
Selection of this default means that this data file will be overwritten and so
MMFM will prompt for confirmation to proceed.
Divide by Zero Value Division by zero is illegal, so a value to replace the divide by zero calculation is
needed. Whenever a division by zero is encountered during processing, the value
entered will be used for the answer. A zero value is defined within the software as
any value less than 1E-10.
Divide Zero by Zero
ValueA division of 0/0 is a special case. The result of a 0/0 division could logically be
zero or one, depending upon the application.
Whenever a 0/0 division is encountered during processing, the value entered will
be used for the answer.
Sample Rate In the case of time-series data structures, the resultant output data file can have
any sample rate. By default, MMFM offers the lowest sample rate found in the
input data files; this may be selected by clicking OK. Any other value, even
outside the limits of the minimum and maximum values found may be entered;
MMFM will automatically interpolate to provide the desired values. Note that
decreasing the value may cause features to be missed.
S Is the smallest X-axis value found in the input files.
F Is the largest X-axis value found in the input files.
L Is the lowest sample rate found in the input files.
H Is the highest sample rate found in the input files.&lt;/p&gt;
&lt;p&gt;493 APPENDIX C
Utilities
Main Index
Environment Keywo rds
A list of environment keywords and meanings:
Batch Op eration
MMFM can be run in non-interactive batch mode. In this mode of operation complex arithmetic
formulations can be created. For example:
mmfm
/opt=a/inp=test1,test2,test3/out=outfile/ov=y/sam=300
In this example, MMFM will add together the contents of files test1.dac , test2.dac  and test3.dac&lt;br&gt;
and write the result to a file called outfile.dac  at a sample rate of 300 samples per second. If a file
outfile.dac  already exists in the current directory it will be overwritten. Keywords are:$SIGNAL The Output File Name
.DAC The Output File Name if the input file was a . dac file.
/OPTion= The number of the required arithmetic option where /opt=A is Addition, =S
Subtraction, =M Multiplication, =D Division, =V Vector Addition. /OPT=A
/INPut= The name of the data file(s) to process. /INP= file1 ,file2
/OUTput= The name of the resultant output file. /OUT= output
/OVerwrite= Whether to overwrite the existing output file. /OV=Y
/SAMple= The new sample rate for the output file. /SAM=500
/ZERODIVide The value of the output where a divide by 0 is attempted. /ZERODIV=1000
/ZEROZERO When 0 is divided by 0 the result can be 1 (1) or 0 (Z). /ZEROZERO=Z&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities494
Main Index
Peak-Valley Extraction - (MPVXMUL)
MPVXMUL extracts turning points (maxima and minima or “peaks” and “valleys”) from single parameter
files such as . dac and RPC multiple data - channel files. The peak valley extraction process maintains
synchronous phase by writing corresponding data values to all the output files whenever a turning point is
found in any channel. Facilities for gating out small peak valley pairs by absolute value or by percentage of
range, on each channel, are available.
1.Invoke MPVXMUL by invoking mpvxmul at the system prompt as explained in Configuration, 328 .
2.Select the Input File type of DAC  or RPC . Press OK.
3.Select the generic Input Filename, the Channels, the Output Filename, and whether or not to write
a time file. Click OK.
4.Either the range of cycles from rainflow analysis can be used as the gate in the completion of your
analysis. This information along with other relative data is entered on the analysis setup form that is
displayed.
.
This program performs peak valley extraction i.e. it extracts turning points (maxima and minima or “peaks”
and “valleys”) from single parameter files such as . dac and on RPC multiple data-channel files. The analysis
is performed such that the phase relationship between all the channels is not lost, when peaks and valleys
occur on different channels at different times. To invoke this program from the system prompt you type
mpvxmul as explained in Configuration, 328 .
Note:   Input .dac files exist as families of files with a common generic name but with different numbers
appended to the name which denotes the channel number (i.e., test01.dac, test02.dac, etc., where
test is the generic name) .&lt;/p&gt;
&lt;p&gt;495 APPENDIX C
Utilities
Main Index
A hysteresis gate can be set independently for each channel, allowing small oscillations on the data (noise) to
be ignored.
Output files are created, one per channel (RPC files), or one per . dac file. All outputs are . dac files. Extra
details, such as equivalent units, are automatically transferred to the output file.
Input Data Files, .dac and MTS RPC
Single parameter . dac files can be processed by MPVXMUL. These exist as families of files with a common
generic name, but with different numbers appended to the name which denotes the channel number. For
example test01.dac  for channel 1, test02.dac  for channel 2, etc. test is the generic name.
Remote parameter RPC multiplexed files from MTStmcan also to loaded into MPVXMUL and each channel
converted into . pvx files. Both RPC II and III file types can be processed. See the MTS documentation for
full details of their RPC file types.
The Ran ge Method
Whatever the input, an output . pvk (Peak Valley extraction) file will be generated for each channel processed.
Within a time series, a turning point is defined as a local peak or valley, i.e. a value within the time series at
which its direction changes. At the start of the peak-valley process, only one turning point can be defined
with any certainty and that is the largest absolute value in the signal, be that the signal maximum or
minimum. MPVXMUL starts its processing at this point and continues on to the end of the signal, then it
loops back to the start of the data until the absolute maximum start point is reached again. The peak-valley
values are written out to the output file in the original sequence, i.e. starting with the first. This form of
output is exactly what is required by the critical location fatigue analyzer, FEFAT .
During the course of the peak-valley extraction process, the number of turning points detected can be
restricted by imposing a hysteresis “gate”. This gate corresponds to the smallest difference between adjacent
turning points that can be accepted. For turning points to be counted, they must be separated by a distance
greater than the specified gate. By these means, small disturbances or “noise” in the time series may be “gated
out” from the set of extracted turning points.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities496
Main Index
Figure 3-85   Hysteresis Gate
In Figure 3-85 turning points 3 and 4 will not be counted since their separation is less than the specified gate.
MPVXMUL can process the input time series data file in its entirety or just a selected portion. The analysis
can begin at a particular time, by default this time is 0.0 i.e. the start of the signal, and end at another time,
greater than the start time, usually the end of the signal. By these means it is possible to define a time window
for the peak-valley extraction process.
The output data file (. pvx extension) contains turning points in physical units and has the same file format
as the input data file (. dac extension). The output file can therefore be manipulated and displayed for
example using PTIME or MMFD.
Any information stored in the Extra Details Area of the input file are automatically carried forward to . pvx
file. The EQUUNITS and NUMEQUNI values are carried forward so that the fatigue analyzer FEFAT can
report predicted limits in equivalent units.
The Rainf low Procedure Method
The rainflow algorithm used by MPVXMUL is based on the standard practice for cycle counting in fatigue
analysis as defined by the ASTM designation E 1049-85, (See ASTM standards Vol. 03.01). Under these
circumstances, the rainflow cycle count will be identical to a range pair cycle count which itself starts at the
largest value. Differences in the results produced by the two procedures only arise if processing starts at some
value other than the absolute maximum.
It is possible to illustrate the rainflow cycle counting procedure used by considering the simple strain time
series shown in Figure 3-86 below.&lt;/p&gt;
&lt;p&gt;497 APPENDIX C
Utilities
Main Index
Figure 3-86   Illustration of the Rainflow Procedure
Figure 3-86 shows a strain sequence of four turning points, and the stress-strain response of a material to this
sequence. The closed hysteresis loop is a cycle, which may be characterized in terms of its strain range and
mean strain.
If the stress axis of this diagram is ignored and only successive strain ranges are considered, then an algorithm
can be developed which will extract cycles from a signal whatever its units. The rainflow algorithm is able to
extract cycles in the way described above, classify them in terms of their range and mean value, and store
them in a range mean matrix.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities498
Main Index
The term rainflow derives from an algorithm, in which cycles are extracted through a consideration of rain
drops flowing down a pagoda roof. Modern algorithms no longer use this concept although the generic name
“rainflow” still persists.
Module Operation
The first screen allows the type of input files to be selected. The program will work with multiple . dac files
or RPC files.
Normally, file type selection is available, as illustrated above, but the file type may be fixed before running
MPVXMUL by setting the environment variable $SIMXTYP equal to DAC or RPC.
There is therefore two distinct paths through MPVXMUL; however, they differ only in detail.
If .dac files are being processed then a generic . dac file name must be supplied.
If RPC files are being processed then only a single file name has to be supplied.
The next few screens presented will request that certain parameters be set. These are explained here.&lt;br&gt;
Field Description
Generic Input File
NameThe family of . dac files which are specified for input must all have names which are
constructed as follows:
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;.dac
where the generic name is the same for all the files. The channel numbers are two or
three digits padded with a leading zero where required. The generic name should be
entered in this field. A directory path may be included if required.
Channels Up to 999 channel numbers may be specified by entering them in the form
1,3-15,35-60, etc.
where the hyphen represents an inclusive range of channel numbers. Alternatively, the
word &amp;lsquo;ALL&amp;rsquo; may be entered in the answer field to indicate the use of all the channels
which match the given generic name.
Output File Name One output file is created for each input channel processed. The output file names
are also constructed according to the generic name plus channel number syntax
described above. Enter the generic part of the output file names in this field. This
name may include a directory specification if the output files are to be written into a
different directory. The extension of all the output files will be . pvx. If one or more
of the output files already exist with the specified name, the program will ask whether
to overwrite the existing files or not. If the answer is NO, then a different output file
name will be requested.
Input data time
span This is purely for display purposes and is a statement of the length of the input data
files, and the number of points that each of them contains.&lt;/p&gt;
&lt;p&gt;499 APPENDIX C
Utilities
Main Index
The fields are as follows:
On completion of all input parameters, the analysis will be performed and the results files written to disk.
A processing summary screen is displayed.Set Limits As This field and the following two allow a section of the input file(s) to be processed,
rather than processing the complete file(s). This is done by setting a start and end
position. This field determines the method by which the start and end position are to
be set, the options being Time or Point number. The following two fields, specifying
the start and the end position, will be changed to reflect the appropriate units.
Start
Position/Time As described above, this field may be either Start Time or Start Point. Times are
measured from the time origin, which is normally, but not necessarily always, the start
of the file. Points are numbered from 1 at the beginning of the file.
The word &amp;lsquo;START&amp;rsquo; may be entered signifying the start of the data.
End
Position/TimeThis field sets the end position in the chosen units. The word &amp;lsquo;END&amp;rsquo; may be entered
signifying the end of the data.
Gate Method     &lt;br&gt;
Range\CyclesChoose the method by which data values will be gated.
Range - each consecutive range value is checked against the specified gate. The
reference value is the maximum range of the data which MPVXMUL determines
before gating out those values that are less than the specified percentage of the
maximum range. This is the method used by previous versions of PVX and
MPVXMUL and is included for compatibility reasons.
Cycle - A rainflow analysis is performed and the size of the cycles are then compared
to the specified gate value. This involves an intermediate stage in which a rainflow file
is created and means that it is possible for non-consecutive points to be extracted or
excluded. This method is smarter and produces superior fatigue analysis results.
Gate Values When the above fields have been defined, MPVXMUL moves onto the Hysteresis
Gate Setting screen.
This screen allows the gate value to be set independently for each input channel. The
gate value may be set directly in the units of the data on the channel, or may be
entered as a percentage. If a percentage, the actual gate value used will be that
percentage of the maximum range of the data on the respective channel.
This screen may consist of more than one page, since only 16 channels can be
displayed at once. To move between the pages, use the Page Up, Page Dn, Home and
End keys. Field Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities500
Main Index
Batch Mode (MPVXMUL)
The following keywords are defined for batch mode operation:
Example:
mpvxmul /ty=d/gen=test/ov=y/cha=all/met=t/sta=start
/end=end/gatmth=r/pgat=50/TYpe Type of input file either D or R (/TY=D)
/GENeric Input generic file name (/GEN=test)
/CHAnnels Channels (/CHA=5,7,9,11)
/OUTput Output file name (/OUT=fred)
/OVerwrite Overwrite output files Y, N (/OV=Y)
/METhod Limit setting method, either T or P (/MET=P)
/STArt Start position (/STA=10)
/END End position (/END=20)
/GATMTH Gate method, either R or C (/GATMTH=R)
/GAT e Gate value (absolute value)
/PGATe Percentage gate value (% of range)
/CGATxxxx Gat value for channel xxxx, where xxxx is zero padded, i.e., channel 1 is 0001. This is only
available if GAT or PGAT are not used.
/*=TT If the user wishes to see output sent to the screen, he must include this parameter exactly
as shown. Any other value other than TT after the equal sign will send the output to a file
by that name.&lt;/p&gt;
&lt;p&gt;501 APPENDIX C
Utilities
Main Index
Simultaneous Values Analysis DAC/RPC - (MSIMMAX)
MSIMMAX performs simultaneous values analysis on either multi-channels in a single RPC file or multiple
DAC files from the same test. T wo analysis methods are available. The first uses a “control” channel, from
which turning points are extracted and scanned for the highest peaks, the lowest valleys or the highest
absolute maxima. Up to 50 of these events may be saved, with their positions in the data. The simultaneous
values of all the other channels at these positions are saved into the output files. The second method scans
each of the input channels for the single largest maximum, minimum or absolute maximum. For each
channel, the simultaneous values of all other channels at the position of the largest event is saved into the
output files.
The output file created is a tab-separated ASCII file suitable for input to a spreadsheet or word processing
package.
1.Invoke MSIMMAX by invoking msimmax at the system prompt as explained in Configuration, 328 .
2.Select the Input File type of DAC or RPC. Click OK.
3.The next form is the Filename Input form which allows the names of the input and output files to
be specified. For an input file type of RPC  the RPC Filename  field appears and for an input file type
of DAC  the Generic Filename field appears. Select the RPC Filename or the Generic Filename , the
Channels, the Output Filename, and whether or not to recalculate the statistics. Click OK.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities502
Main Index
4.The final form for MSIMMAX is the Analysis Definition form. This form allows you to choose
between Sort Channel  analysis and All Channels  analysis. It is here that the limits are set and the
event type is selected. This information along with other relative data is entered on the form that is
shown below.&lt;/p&gt;
&lt;p&gt;503 APPENDIX C
Utilities
Main Index
Amp litude Distribution - (MADA)
MADA, amplitude distribution analysis, calculates the probability density distribution (which defines the
probability of finding a value of a particular magnitude within the population of measured values ) and other
function of a time signal.
For example if you use saetrn.dac  as input to MADA and set the Analysis Type to Prob. Distribution , it
outputs a file saetrn.ada  shown here which is the probability density function of Y-values.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities504
Main Index
Auto S pectr al Density - (M ASD)
The Auto Spectral Density program, MASD, performs a frequency analysis on a single parameter input file,
a .dac file for example. MASD produces an output file that indicates the frequency content of the input file.
Most physical events occur at a certain speed, with a certain magnitude, and repeat at a certain rate. Engineers
need to analyze such events in terms of all these characteristics. While all events occur in time and space,
engineers and mathematicians have devised an alternative way of viewing events. They refer to this as the
frequency domain as opposed to the time domain.
The French mathematician J Fo urier (1768 - 1830) showed that any periodic motion can be represented by
a series of sines and cosines. This can be demonstrated simply by considering a square wave. Such a waveform
can be represented by the following Fourier series:
(3-2)
There are some very good reasons for working in the frequency domain. One of the most important is that
some complicated operations in the time domain become simple in the frequency domain, for example
convolution in the time domain becomes a simple multiplication in the frequency domain. In addition, the
relationship between the excitation and the response of a structure is often more easily understood in the
frequency domain.
Real events are analogue (continuous) and are often random and non-periodic. Random processes continue
for an infinite length of time, but are usually observed over a finite time. By carrying out a Fourier T ransform
(FT) of the finite length time domain data segment, the data is transformed into the frequency domain.
If the data is sampled for use in a digital computer, it is not possible to use the continuous form of the Fourier
T ransform and a discrete equivalent is required (a DFT):
(3-3)
Ya0t sin =a0 3t sin
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a0 5t sin
5&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a0 7t sin
7&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;a0 9t sin
9&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + + + +
xmxkei2mk
N&amp;mdash;- –
k0=N1–
   m=0,1,&amp;hellip;N/2 =&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P27</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_027/</guid>
      <description>
        
        
        &lt;p&gt;505 APPENDIX C
Utilities
Main Index
where N is the number of points in the time history and xm is the kth Fourier coefficient.
The Inverse Fourier T ransform (IFT) also exists which transforms data from the frequency domain into the
time domain. This reverse transformation is not discussed here but the reader is referred to standard texts for
more information (Refs. 41,42).
One of the problems of the DFT is that calculation times are long when there are a lot of data values, i.e.
when N in (3-3) is large. Many optimized methods have been proposed, collectively described as “Fast”
Fourier T ransforms (FFT). One such method was proposed by Cooley and T ukey (Ref. 43) and is published
by the IEEE. One of the compromises made in the FFT is that a particular number of data values must be
analyzed at any time. However, the fast Fourier transform and the DFT can be regarded as identical for the
purpose of this discussion. (The algorithm used in the frequency analysis tools is based on the IEEE
optimized algorithms (Ref. 44)).
The basic FFT process carried out on N data values sampled at F samples per second results in  complex
numbers representing a one sided spectrum of frequencies with a bandwidth of  Hz. These raw complex
Fourier coefficients may be postprocessed in a number of ways.
Window  Functions
Since it is rarely practical to transform a complete data segment, the analysis is carried out using short buffers
of data taken at increasing times through the sample. However, start and end data values in the buffer are
rarely identical, resulting in an effective discontinuity in the signal being analyzed. T o reduce these effects,
the buffer is shaped using a window function.
The default window function if no special window function is applied is a rectangular one, that is to say no
data window is applied. Other common types of spectral window functions are shown in Figure 3-87 below.
The choice of which window type to use will depend on the type of data to be analyzed. However, it is always
a good idea to analyze the data first using the rectangular window function.
If a window function is used, a correction for effective bandwidth is applied to the complex results of the
FFT. This correction depends on the type of window and is carried out automatically by the software.N2
F2&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities506
Main Index
Figure 3-87  Spectral Window Functions (Schematic)
Ensemble Averaging
The FFT coefficients from each buffer are normally summed in some way to produce a result representing
the average frequency content over the whole of the sample. The greater the number of buffers contributing
to this average, the more confidence may be placed in the result. Since the data windows attenuate data at the
start and end of the buffer, some data is not used in computing the average. Consecutive buffers may be
overlapped to use all the data in the signal. An overlap of 50% means that data at the end of one buffer is
located at the center of the next buffer where the end effects are not present.
If the changes in the frequency components over the length of the whole sample are of interest, the buffers
should not be averaged. The results from this type of analysis may be presented using a plot where the results
from each buffer form one line in a three dimensional plot of frequency versus time versus spectral estimate.
Such a plot is known as a waterfall plot  (see Figure 3-88).&lt;/p&gt;
&lt;p&gt;507 APPENDIX C
Utilities
Main Index
Figure 3-88  A Waterfall Plot.
Module  Operation
The MASD module can be run in one of the following modes:
From PTIME menu driven system - PSD from time.
In stand alone mode by invoking masd at the system prompt as explained in Configuration, 328 .
By incorporating the  MASD commands in a batch operation
Once running in interactive mode the MASD module displays the following screen.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities508
Main Index
Figure 3-89  The MASD File Name &amp;amp; Parameter Screen
The purpose and usage of each field is explained below. Note that until Input File name is completed and
confirmed (by clicking OK), the other fields are grayed out.&lt;/p&gt;
&lt;p&gt;509 APPENDIX C
Utilities
Main Index
Field Description
Input File Name In this field the user should type the name of an input file (usually a single
parameter . dac file). By default MASD assumes a . dac file extension but if
a file with a different file extension is to be processed then enter the file name
plus extension in full.
MASD carries out a frequency analysis on a time series.
MASD will expect to find the input data files resident in the user’s directory,
however, other directories can also be accessed if the complete file
specification i.e. path name and file name are entered, e.g.
/demo/filename.
Probably the easiest way to name an input file is to use the pick list facility.
Water fall Analysis (Y/N) Within the section of data being analyzed, a single spectrum can be
produced showing the frequency content over the whole section.
Alternatively, multiple spectra can be produced showing the change in
spectral content as the time series progresses. The multiple spectral display
is called a Waterfall Plot. Choose Yes to produce a multiple analysis.
Output Type The complex spectrum created by this program can be one of three types.
Power Spectral Density (PSD) where the magnitude is scaled, squared, and
divided by the spectral width.
Amplitude Spectrum (MASD) where the magnitude of the FFT is scaled to
indicate the amplitude of the original data.
Energy Spectral Density (ESD) which is defined as the PSD multiplied by
the analysis time.
In addition to these options it is possible to output the Real and Imaginary
parts of the FFT or the magnitude of FFT . The FFT algorithm returns real
and imaginary components for a single sided spectrum. The -ve frequency
mirror is ignored although this is compensated for by scaling up the
magnitude by a factor of 2. These options are only available if the data will
fit into a single buffer .
Output Scaling MASD allows the user to choose between displaying the amplitude as RMS
or as true values. For example a sine wave of amplitude (and true value) 1
has a RMS value of 0.7171. To calculate and display the true amplitude of
the frequency components, select Peak, otherwise the default is RMS.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities510
Main Index
Figure 3-90  MASD’s Parameter Input ScreenAveraging  Method When many FFT buffers are calculated, the spectral estimates for each
buffer can be handled in 2 ways. One simple way is to linearly  average the
component values over the number of buffers calculated. This corresponds
to the default linear option.
The disadvantage of this method is that fast high amplitude events that
occur in a single buffer are lost when the average of many buffers is taken.
The peak hold  option retains the largest FFT for each component and thus
eliminates the disadvantage.
Start Time (secs.) The frequency analysis may be carried out on a specific portion of the time
series. The start and end times for this analysis window are user- selectable
and are requested in the units of the time base for the input time series. The
default value offered is the base value of the signal.
Keywords can be used, for example START+5 will start the analysis 5
seconds after the START of the file.
End Time (secs.) The end time of the analysis window may be selected by the user or
defaulted to the end time that MASD reads in the input time series file.
Keywords can be used, for example END-5 will end the analysis 5 seconds
before the END of the file.
When all the fields shown in Figure 3-89 have been completed and confirmed
(by clicking OK)  then the screen shown in Figure 3-90 is shown.Field Description&lt;/p&gt;
&lt;p&gt;511 APPENDIX C
Utilities
Main Index
Fields that are not appropriate to the choices made in Figure 3-89 are not active on Figure 3-90. This means
that the Overlap (%), Normalization, and Window File name, fields may be grayed out in certain instances.
Field Description
Window  Type Each data block is tapered using the window function. A window improves
accuracy of the FFT because it reduces the magnitude of the data block in a
gradual way and avoids discontinuities at the extremities of data blocks. The
window functions are as follows.
Rectangular
Hanning
Kaiser-Bessel
Triangular
Cosine Bell
User Defined
If a user-defined window is required then MASD looks for a user definition
file with a . uwf file extension. A user definition file is created using a . dac
file creation program such as Graphical Create, 398 , or Multi-Channel Editor -
(MCOE), 996 . Alternatively the user could create the file in ASCII and then use
ASCII Convert + Load, 392  to convert it to a . dac file. Note that the user-defined
file MUST be the same size as the FFT buffer size.
Buffer Overlap (%) By default spectral windows are overlapped by 67%. The purpose of
overlapping spectral windows is to minimize the effects of “leakage” at the
edges of each window. Clearly the greater the degree of overlap the longer it
will take to process a given signal. Negative values of overlap will cause
MASD to skip data between spectral windows .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities512
Main Index
When the fields in Figure 3-90 have been completed the screen shown in Figure 3-91 appears.Data Normalization
File/Buffer/NoneNormalizing the input time series data prior to analysis reduces the DC
contribution (or power at 0 Hz) which can often swamp the rest of the
spectrum. Note that selecting normalization prior to analysis will not
permanently alter the input signal. File means that the mean of the entire
file is removed from each buffer, even if the whole file is not selected. Buffer&lt;br&gt;
means that each individual buffer has its mean calculated and then
subtracted from the data in that buffer.
FFT Buffer Size The minimum buffer size available is 32 and the maximum is 131072. For
buffer sizes greater than 8192, a slow FFT is used.
The FFT buffer size defines the resolution of the power spectrum. The
buffer must be a power of 2 and the longer the buffer, the higher the
resolution of the spectral lines. To calculate the resolution divide the Nyquist
frequency by half the FFT buffer size. E.g. if Nyquist=178 Hz and the FFT
buffer size selected is 1024 the spectral lines are 178 / (1024 / 2) = 0.347 Hz
apart. Another use of a smaller buffer size is for short data files as these
cannot be adequately analyzed with a big buffer, since there may not be
enough data to give a good spectral average. Using a smaller buffer size could
give a better spectral average at the expense of spectral line width.
Noise Floor When the amplitude of a particular frequency component is small, the FFT
coefficients become vanishingly small and may cause computational
difficulties or distort results; for example, the phase calculation is particularly
affected. In order to overcome these difficulties, a value may be defined
which represents an effective zero.
This cutoff point is normally specified in dB down from the maximum
magnitude. The default is -72dB. Note that -20dB is one order of magnitude
less than the maximum.
Window File Name If a user-defined window is required then MASD looks for a user definition
file with a . uwf file extension. See Window Type above.Field Description&lt;/p&gt;
&lt;p&gt;513 APPENDIX C
Utilities
Main Index
Figure 3-91  The Output Parameters Screen (MASD)
This screen enables the user to specify the output file name, whether to plot the output file, and the
minimum/maximum frequency of the plot.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities514
Main Index
Field Description
Output File Name The results of the frequency analysis are written to an output file for later
analysis or graphical postprocessing. By default the name of the output file
is taken to be the input file name but with a file extension as appropriate to
the analysis; for example
.psd - Power spectral density
.amp - Amplitude spectrum
.esd - Energy spectral density
.mag - Magnitude
.pha - Phase
.ftr - Real part of FFT
.fti - Imaginary part of FFT
.wfl - Waterfall file
If a file with the specified or default name already exists, MASD will prompt
for confirmation that the existing file is to be overwritten.
Plot Output Yes/No Whether or not to plot the postprocessing file using MQLD. If No is
selected then the plot parameter fields such as Minimum/Maximum
frequency do not appear. The results of processing will NOT be plotted on
screen but they will be saved as a disk file. This is also the case when waterfall
files are processed.
Maximum / Minimum
Frequency If the output file is to be plotted then the frequency limits for the plot are set
here.
The Nyquist frequency (half the sampling rate) is offered as the maximum
frequency for the spectrum to be displayed initially on the screen. The user
may select this limit or specify the required frequency. It is possible to change
this later when the power spectrum is displayed graphically.
Waterfall Para meters
Section Method
Buffer/TimeThe selection of the file used for each waterfall spectrum can be specified in
terms of time or number of buffers.
Number of Buffers This option enables the user to specify the number of FFT buffers to be used
for each waterfall spectrum (maximum buffer size = 8192, minimum = 32).
At this stage, MASD will commence to do the analysis according to the user
specification. During this process a message indicating the extent of progress
through the analysis will be displayed. When the input file has been
processed a screen of results is displayed.&lt;/p&gt;
&lt;p&gt;515 APPENDIX C
Utilities
Main Index
A results summary screen will be displayed after all input parameters have been specified and the analysis has
been performed.
The calculated power spectrum can be displayed graphically. MASD uses the utility module MQLD to plot
non Waterfall (if Display=Y was set) MASD output files (see Quick Look Display - (MQLD), 722 ). T o plot Waterfall
files, MASD uses module MP3D which is described in Three Dimensional Display - (MP3D), 732 .
Figure 3-92  Results File Being Displayed by MP3D.
Batch Operation (MASD)
MASD can be run in batch mode as with other utility modules. A list of MASD’s batch keywords:
/WFALL Waterfall yes or no. /WFALL=Y
/INPut The input file name. /INP=FILE
/OUTput The output file name required for the results data file. /OUT=RESULT
/OVerwrite Whether to overwrite an existing results file. /OV=Y
/STArt The start time for the analysis window. /STA=1
/END The end time for the analysis window. /END=20
/FMAXimum The maximum frequency for the power spectrum plot. /FMAX=5.7
/FMINimum The minimum frequency for the power spectrum plot. /FMIN=2.7
/NORMalize Option to normalize the input time series. = F , B, or N. /NORM=F
/OVERlap The amount of overlap of the FFT buffers. /OVER=45&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities516
Main Index
/OTYPE Output type PSD, ESD, or amplitude (see above). /OTYPE=PSD
/SCALE Scaling (peak/RMS). /SCALE=PEAK
/AVERaging The averaging method used i.e. Linear/Peak. /AVER=PEAK
/WINdow The window type (rectangular, Hanning, user-defined etc.). /WIN=REC
/WFILE The window file name if user-defined. /WFILE=&lt;!-- raw HTML omitted --&gt;.UWF
/FLOor The noise floor in dB. /FLO=79
/PLOt T o plot or not to plot Yes or No. /PLO=Y
/NBUFfer Number of buffers. /NBUF=10
/TIME The waterfall time slice in second. /TIME=0.1
/PL TNAM Hardcopy file name. /PLTNAM= &lt;!-- raw HTML omitted --&gt;
/METHOD Waterfall sectioning method. /METHOD=B
/FFTsize The FFT buffer size according to the table below. /FFT=512
FFT Buffer Sizes: 32, 256, 512, 1024, 2 048, 4096, 8192, 16384, 32768, 65636,
131,072&lt;/p&gt;
&lt;p&gt;517 APPENDIX C
Utilities
Main Index
Fast Fou rier Filter - (M FFF)
MFFF creates a finite impulse response (FIR), filter by using the window method. After creation, FFF
automatically removes unwanted frequency components from time series data. High-pass, low-pass, band-
pass or band-reject can be created.
MFFF calculates a set of filter coefficients, {h(n)}, which represent the ideal digital filter response {h(n)}
modified by a Kaiser (Io-Sinh) window, {w(n)}. The windowed digital filter can be represented as:
In the time domain, the ideal filter response, h(n), is calculated for each of the four filter types: low-pass,
high-pass, band-pass, and band-reject from the definitions of the cut-off frequencies and a {SIN(X) / X} type
function. Figure 3-93 illustrates such a function for a high-pass filter with a normalized cut-off of 0.35.
Figure 3-93  Ideal Impulse Response for a High-Pass Filter, f c = 0.35
The Kaiser (Io-Sinh) window function, w(n), is calculated from:
hn wnhn    0 nN1– =
hn 0  otherwise =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities518
Main Index
and
The modified zero-order Bessel function is calculated from the power series expansion of:
Io(x) = 1 + Å [(x/2)k/k!]2
Having calculated the required impulse response, h(n), MFFF automatically realizes the filter, i.e., filters the
specified data file.
A digital filter transfer function can be realized in either one of two ways, recursively or non-recursively. For
a recursive realization, the functional relationship between the input {x(n)} and output {y(n)} sequences can
be written as:
y(n) = fn [y(n-1), y(n-2), . . . . , x(n), x(n-1), . . .]
In this case, the current output sample, y(n), is a function of past output samples, y(n-1), y(n-2), as well as
past and present input samples, x(n), x(n-1). . ..
For a non-recursive realization, the functional relationship between the input {x(n)} and output {y(n)}
sequences can be written as:
y(n) = fn [ x(n), x(n-1), x(n-2), . . . ]
In this case, the current output sample, y(n), is a function of only past and present input samples, x(n), x(n-
1). . ..
MFFF realizes the calculated filter function in a non-recursive way. If {h(n)} represents the set of, N,
calculated filter coefficients then for a non-recursive realization the following difference equation may be
written:
y(n) = h(0)x(n) + h(1)x(n-1) + h(2)x(n-2) + . . . + h(N-1)x(n-
N+1)
which may be rewritten as
y(n) =  h(m) x(n-m)
where m is summed from m = 0 to m = (N-1) the number of filter
coefficients.N the number of values in the Kaiser window.
a constant that specifies a frequency response trade-off between the peak height of the side
lobe ripples and the width or energy of the main lobe  is given a value of 9.620 which
assures a stop-band attenuation of -96 Db.
Io(x) Is the modified zero-order Bessel function.
k summed from 1 to 25.wn Ib1 2nN1– 2–  I =
N1
2&amp;mdash;–– n N1
2&amp;mdash;–


&lt;/p&gt;
&lt;p&gt;519 APPENDIX C
Utilities
Main Index
The above equation represents a linear convolution of x(n) and h(n), therefore, the process of “filtering” the
time sequence {x(n)} involves convolving it with the filter function {h(n)}. Convolution may be carried out
wholly in the time domain, i.e., by explicitly solving the difference equation or by direct multiplication of
the filter response function and the time series in the frequency domain. Because the procedure in the time
domain involves many more arithmetic operations it is called slow convolution whilst the frequency domain
approach is called fast convolution. MFFF uses fast convolution.
Module Operation
The MFFF module can be operated in one of the following ways:
In Stand alone mode by invoking mfff at the system prompt as explained in Configuration, 328
By incorporating the MFFF commands in a batch operation.
Figure 3-94  MFFF&amp;rsquo;s Only Data Input Screen
The fields are as follows:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities520
Main Index
Option Description
Input Filename MFFF filters the contents of a file containing a single channel of data. By default
MFFF expects this file to be a standard time series with a file extension of . dac.
Therefore, if a time series is to be processed, it is only necessary to enter the
filename, the . dac extension may be omitted. Files with the correct internal
format but different file extensions, must have their names entered in full, i.e,.
including the file extension. The name offered in the input field is the current
default filename. T o select this default it is only necessary to press the RETURN
key or the F1 key.
MFFF expects to find the input data files to be resident in the user’s directory,
however, other directories can be accessed if the complete file specification i.e,.
path name and filename are entered. Alternatively use the pick list facility.
Output Filename The filtered signal is written to a standard time series file with an extension of
.dac. The default for this output file is the input file, i.e., the input file itself being
filtered. This default is presented in the output file name field and to select it is
only necessary to press the RETURN key. If the default is selected, or if the
filename of an existing file is entered, MFFF will prompt for confirmation to
overwrite it.
The output file containing the filtered signal is written back to the user’s directory.
If it is required to place it in some other directory, then this must be specified
explicitly.
Filter type 1 - low pass , 2 - hi gh pass , 3 - ba nd pass, 4 - band stop
MFFF can filter data according to one of the following four filter types:
Low-pass - that which passes lower frequencies but excludes higher frequencies.
High-pass - which passes higher frequencies but excludes lower frequencies.
Band-pass - which passes a contiguous band of frequencies but excludes all other
frequencies.
Band-stop - which excludes a contiguous band of frequencies but passes all other
frequencies. Figure 3-95 below illustrates the characteristics of the four filter types.
The two frequencies, f1 and f2, define the respective limits (cutoffs) of each filter
type. Note that fn is the Nyquist frequency, i.e., half the sampling rate - 0.5 fs.
It is only necessary to enter the appropriate option number (1 to 4) to select the
desired filter type. Depending upon the nature of the filter required, MFFF will
prompt for the following inputs.&lt;/p&gt;
&lt;p&gt;521 APPENDIX C
Utilities
Main Index
Low-Pass Option 1 Lower edge cut-off freq:
Enter the cut-off frequency for the pass-band, i.e. frequency f1 in Figure 3-95. This
frequency will define the limit of the pass band.
Any frequency between zero and fn, the Nyquist frequency, may be entered.
High-Pass Option 2 Lower edge cut-off freq:
Enter the cut-off frequency for the stop-band, i.e. frequency f1 in Figure 3-95. This
frequency will define the limit of the stop-band.
Any frequency between zero and fn, the Nyquist frequency, may be entered.
Band-Pass Option 3 Lower edge cut-off freq:
Enter lower cut-off frequency of the pass-band, i.e. frequency f1 in Figure 3-95. This
frequency will define the limit of the first stop band.
Upper edge cut-off freq:
Enter the cut-off frequency of the pass-band, i.e. frequency f2 in Figure 3-95. This
frequency will define the upper limit of the pass-band.
Any frequency, between f1 and fn, the Nyquist frequency, may be entered.
Band-Reject Option
4Lower edge cut-off freq:
Enter the lower cut-off frequency of the stop-band, i.e. frequency f1 in Figure 3-95.
This frequency will define the limit of the first pass-band.
Upper edge cut-off freq:
Enter the cut-off frequency of the stop-band, i.e. frequency f2 in Figure 3-95. This
frequency will define the upper limit of the pass band.
Any frequency, between f1 and fn, the Nyquist frequency, may be entered.
FFT Buffer Size Specify the size of the FFT buffer to use in the analysis. The bigger the buffer size,
the higher the resolution of the FFT.
The FFT buffer sizes allowed are 256, 512, 1024, 2048, 4096, or 8192.
At this stage MFFF will proceed to create the desired filter and then use it to filter
the input data file. On completion, it will display a page of results such as that
shown below.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities522
Main Index
Figure 3-95  Characteristics of the Four Filter Types
Figure 3-96  A Results Screen
Batch keywords
A list of MFFF’s batch keywords:&lt;/p&gt;
&lt;p&gt;523 APPENDIX C
Utilities
Main Index
/INPut The name of the data file to process, /INP=INDATA
/OUTput The name of the of the output data file, /OUT=OUTFIL
/OVerwrite Whether or not to overwrite an existing data file, /OV=Y
/TYPe The type of filter to use in the analysis. /TYP=1 selects a low-pass filter., /TYP=2
selects a high-pass filter., /TYP=3 selects a band-pass filter, /TYP=4 selects a band-
stop filter
/LOcut Lower edge cut-off frequency, f1 (Hz), /LO=5
/HIcut Upper edge cut-off frequency, f2 (Hz), /HI=50
/FFT Size of FFT buffer, 256-8192., /FFT=1024&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities524
Main Index
Butterworth Filtration - ( MBFL)
This program takes a signal file and passes it through a Butterworth filter to produce an output signal file.
The filter characteristic can be a low pass, high pass, band pass or band-stop. The filter order can be from 1
to 8 poles which will give a cutoff of between 6db and 48db per octave.
Module O peration
The MBFL module can be run in one of the following modes:
In Stand alone mode by invoking mbfl at the system prompt as explained in Configuration, 328
By incorporating the MBFL commands in a batch operation.
The first modes  is interactive. Once running in interactive mode, the MBFL module displays the following
screen:
Figure 3-97  The First MBFL Screen&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P28</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_028/</guid>
      <description>
        
        
        &lt;p&gt;525 APPENDIX C
Utilities
Main Index
The purpose and usage of each field is explained below. Until Input Filename is completed and confirmed
(by pressing F1) then none of the other fields will appear.
Option Description
Input Filename In this field the user should type the name of an input file (a single parameter . dac
file). By default MBFL assumes a . dac file extension but if a file with a different
file extension is to be processed then enter the file name plus extension in full.
MBFL will expect to find the input data files resident in the user’s directory,
however, other directories can also be accessed if the complete file specification
i.e., path name and filename are entered. Probably the easiest way to name an
input file is to use the F3/List facility.
Output Filename This is the file into which the filtered data is placed. It is a standard single
parameter file, and will be given a . dac extension, although the user can enter a
different extension. This file can also be created in a different drive/directory by
specifying the full path name of the file.
If the file exists the user will be asked for permission to overwrite it.
Filter Method
Forwards only /
forwards &amp;amp;
BackwardsIn forwards mode the data is passed through the filter from tstart  to tend. This
emulates a normal analogue hardware Butterworth filter and induces phase shift
characteristics.
In forwards/backwards mode the data is first passed through the filter from tstart&lt;br&gt;
to tend as above. The data is then passed again through the filter but this time from
tend to tstart . This has the effect of correcting any phase shift introduced in the
forward pass.
Note:  Passing the data through forwards and backwards will double the
attenuation, i.e., a 4 pole forward and back filter gives the equivalent attenuation
to an 8 pole forward only filter.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities526
Main Index
Filter order [1-8] The filter order determines the rate at which frequencies are rejected as the cut-off
frequency is exceeded. For a Butterworth filter this is 6 dB per octave, or 20 db
per decade (see Table 3-7).
If the cutoff frequency is set at a Hz (amplitude = 1) then by the time b Hz is
reached (which is 1 Octave higher than a the amplitude is 1/256, i.e., it is reduced
by 256 times.
Lower orders will produce shallower filter slopes and a lesser reduction in signal
amplitude per octave.
What this actually means is shown in the diagram below. It illustrates an 8th order
low pass filter
Note:  This means that data at and before the cut-off frequency is reduced in
amplitude. The maximum reduction is always 0.7071 at the cut off frequency and
the effect in the pass band is dependent on the order of the filter. This is a
characteristic of all filters, both analogue and digital. The cutoff frequency defines
a 3dB drop in amplitude
Filter type Here you are being prompted to enter which filter type you wish to use on the
input signal, there are four choices:
L - L ow pass (frequencies above the cut-off will be attenuated).
H - H igh pass (frequencies below the cut-off will be attenuated).
B - Ba nd pass (frequencies below the lower cut-off and above the higher cut-off
will be attenuated).
S - Band stop (frequencies between the lower cut-off and the higher cut-off will
be attenuated).
Note:  For the Band pass, and Band stop filter, unpredictable results can occur if
the upper and lower cut-off frequencies are close. The problem becomes worse the
higher the filter order.
The fields that appear beneath Filter type depend upon the setting of filter type.
Cutoff frequency
setting fieldsThe Figure 3-99 flowchart determines which fields appear depending upon the
setting of Filter type. Option Description&lt;/p&gt;
&lt;p&gt;527 APPENDIX C
Utilities
Main Index
.
Figure 3-98  An 8th Order Low-Pass FilterTable 3-7  Filtration per Octave
ORDERFilter slope per octave
(db)Filter slope per decade
(db) Reduction/Octave
1 6 20 1/2
2 12 40 1/4
3 18 60 1/8
4 24 80 1/16
5 30 100 1/32
6 36 120 1/64
7 42 140 1/128
8 48 160 1/256&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities528
Main Index
If Filter type is&amp;hellip;
Figure 3-99   Flowchart of Cutoff Frequency Settings
When all the above fields are set, pressing or clicking OK will cause MBFL to create the output file, and then
exit MBFL.
Batch Op eration
A list of MBFL’s batch keywords:
Note:   The time taken to perform a filter will be longer for band pass and band stop. It will also be longer
the higher the order of the filter.
/INPut The name of the input time series to be filtered, /INP=XFILE
/OUTput The name of the output file that will contain the filtered data, /OUT=OFILE
/OVerwrite Whether to overwrite existing output files, /OV=Y
/METhod Filter method, forward or backward (F or B)
/TYPE The type of filter to use, /TYPE=BP
/ORDER The order of the filter [1-8], /ORDER=8&lt;/p&gt;
&lt;p&gt;529 APPENDIX C
Utilities
Main Index
/FRQ1 The filter cut-off frequency for low, high pass or for the lower edge of the band pass
and band stop, /FRQ1=100
/FRQ2 The filter cut-off frequency for the higher edge of the band pass or band stop,
/FRQ2=150&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities530
Main Index
Frequency Re sponse Analysis - (M FRA)
The frequency response analysis, MFRA, analyses the response of a single input, single output linear system.
Six files of statistics are generated as a result of this analysis.
The program analyses the response of a single input, single output linear system.
MFRA uses the following terms (ASD=auto spectral density, CSD=cross spectral density):
as the ASD of x(t)
as the ASD of y(t)
as the CSD of x(t) with y(t)
as the CSD of y(t) with x(t)
These are complex values having a real and imaginary part
e.g.,
where  is the real part and  is the imaginary part.
The GAIN of the system is defined as
The PHASE relationship between x(t) and y(t) is
Sxx
Syy
Sxy
Syx
Sxx CxxQxx + =
Cxx Qxx
Cxy2Qxy2+  1
1
12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
Sxx&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;
&lt;p&gt;531 APPENDIX C
Utilities
Main Index
The COHERENCE is
The TRANSFER FUNCTION of the system is a complex set of values where.
Real Part =
Complex Part =
The program uses Fourier T ransforms to calculate the Auto and Cross Spectral Density files as complex
values. Using these values it generates all the results files, then saves the Spectra as real parts only.
The following files are generated with each run of the program.
Module Op eration
The MFRA module can be run in one of the following modes:
In stand alone mode by invoking mfra at the system prompt as explained in Configuration, 328 .
By incorporating the MFRA commands in a batch operation.
The first mode is interactive. Once running in interactive mode the MFRA module displays the following
screen:ASD of x(t) .sxx
ASD of y(t) .syy
CSDs .sxy and syx
GAIN .gai
PHASE ANGLE .pha
COHERENCE .cohTAN1Qxy
Cxy&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-–
SxySyx SxxSyy  
Qxy
Qxx&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities532
Main Index
Figure 3-100  MFRA&amp;rsquo;s Main Menu
The routes through MFRA are shown below.
Figure 3-101    The Routes Through MFRA&lt;/p&gt;
&lt;p&gt;533 APPENDIX C
Utilities
Main Index
OPTION 1 : Analysis of signal - the Trans fer Function Analysis (TFA)
The first screen in this option is:
Figure 3-102    The First TFA Screen&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities534
Main Index
Option Description
Input Filename By default, MFRA expects the input data file to be a standard time series with a file
extension of . dac. Files with the correct internal format but different file extensions
must have their names and extensions entered in full.
MFRA will expect to find the input data files resident in the user’s directory,
however, other directories can be accessed by using the pick list facility.
Response Filename This is the measured response of the system.  Again, by default, the response data
file is assumed to be a standard time series with a file extension of . dac.  The same
condition apply to this question as for the input signal.
Note:  BOTH input files must have the same number of data points and sample
rates.  If they do not, then using the graphical editor MGED, and Sample Rate
Adjuster (in PTIME), may rectify the situation.
Output Type Power or Energy Spectral Density,  Amplitude Spectrum
This option can be used to specify the nature of the spectral output required from
the analysis.  The different outputs arise from the way in which the complex FFT
coefficients are postprocessed.
If the magnitude of the FFT is scaled, squared and then divided by the spectral
width, then the Power Spectral Density, or PSD, results.
If  the magnitude of the FFT is scaled to reflect the amplitude of the original data,
the Amplitude Spectrum is produced.
If  the PSD is multiplied by the analysis time the  so-called Energy Spectral Density
or ESD is produced.
Output Scaling Peak/RMS
Normally the magnitude of the FFT components is scaled such that the amplitude
will be the RMS of  the frequency component. For example, a sine wave of
amplitude 1 has an RMS of 0.7071. T o calculate and display the true amplitude of
the frequency components, select the Peak option.&lt;/p&gt;
&lt;p&gt;535 APPENDIX C
Utilities
Main Index
Averaging Method When multiple FFT buffers are calculated, the spectral estimates for each buffer
can be handled in several ways.
One simple way is to linearly average the component values over the number of
buffers calculated. The disadvantage of this method is that fast, high amplitude
events which occur in a single buffer are lost when the average of a large number of
buffers is taken.
In this case the alternative peak hold method, in which the largest FFT magnitude
for each component is retained, may be more suitable.
Start time This option allows the specification of a time window for analysis. As a default, the
whole input time series will be analyzed.
Specific times for the start and end of analysis my be entered directly or
alternatively the keywords START and END may be used, together with a single
arithmetic operation.&lt;br&gt;
For example, START+5 will specify that analysis should commence 5 seconds into
the data and END-3.1 will specify a halt to analysis 3.1 seconds before the end of
file.
Extra details keywords may also be used to define the extent of the analysis time
window.
End time This option allows the specification of a time window for analysis. As a default, the
whole input time series will be analyses.
Specific times for the start and end of analysis my be entered directly or
alternatively the keywords START and END may be used, together with a single
arithmetic operation.
For example, START+5 will specify that analysis should commence 5 seconds into
the data and END-3.1 will specify a halt to analysis 3.1 seconds before the end of
file.  Extra details keywords may also be used to define the extent of the analysis
time window.
Note that the end of the analysis window is defined by the first occurrence of the
last data point within an FFT buffer.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities536
Main Index
Figure 3-103     Further Process Specification&lt;/p&gt;
&lt;p&gt;537 APPENDIX C
Utilities
Main Index
Option Description
Windo w type Each buffer of data processed by MFRA is tapered using a window function. A
window improves the accuracy of the FFT since it reduces the magnitude of the
data at the ends of each FFT buffer in a gradual manner thus avoiding
discontinuities at the extremities of the block of data. The following window
functions are supported: Hanning, Kaiser-Bessel, T riangular, Cosine bell, User
defined, and Rectangular.
Overlap (%) The purpose of overlapping spectral windows is to minimize the effects of
&amp;ldquo;leakage&amp;rdquo; at the edges of each window. The greater the overlap the smaller will be
the effect of this leakage, however, the processing time will increase.  An optimum
value for the overlap, which minimizes attenuation between successive buffers,
and providing reasonable computational times would be 67%.
Normalization File\Buffer\None
A time series which has an overall mean significantly away from zero is said to
possess a DC offset. This offset will generate a component in the frequency
domain close to zero Hz. which can swamp the spectrum.
The effect of a DC component can be minimized by eliminating it prior to
transformation into the frequency domain. This can be done in two ways:
Firstly, the mean of the whole file can be subtracted from each value in successive
FFT buffers prior to transformation.
Secondly, the mean of each buffer can be calculated individually and that value
subtracted.
Note that these normalization procedures do not permanently affect the input
time series itself.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities538
Main Index
The final screen of the process setup is shown below:
Figure 3-104  The Last Setup ScreenFFT Buffer Size The FFT buffer size defines the resolution of the power spectrum. The buffer
must be a power of 2, and the longer the buffer, the higher the resolution of the
spectral lines. T o calculate the resolution divide the Nyquist frequency by half the
FFT buffer size. e.g., if nyquist = 178 Hz and the FFT buffer size selected is 1024,
then the spectral lines are 178 / (1024 / 2) = 0.347 Hz apart. Another use of a
smaller buffer size is for short data files as these cannot be adequately analyzed
with a big buffer, since there may not be enough data to give a good spectral
average. Using a smaller buffer size could give a better spectral average at the
expense of spectral line width.
Noise floor (dB) When the amplitude of a particular frequency component is small, the FFT
coefficients become vanishingly small and may cause computational difficulties or
distort results; for example, the phase calculation is particularly affected.
In order to overcome these difficulties, a value may be defined which represents
an effective zero. This cut-off point is normally specified in dB  down from the
maximum magnitude. The default is -72dB.
Note that -20dB is one order of magnitude less than the maximum.Option Description&lt;/p&gt;
&lt;p&gt;539 APPENDIX C
Utilities
Main Index
OPTION 2: - Results Display
This form allows input of the generic results filename and some output parameters. The generic output
filename will be used to form the stem of the six output filenames to be plotted.
The user will then be offered a list of plot options which will allow the plotting of one or all of the available
results files.Option Description
Generic Output
FilenameThe output results from MFRA are:
ASD of x(t) - (. sxx)
ASD of y(t) - (. syy)
CSD - (.sxy)
GAIN - (.gai)
PHASE ANGLE - (. pha)
COHERENCE - (. coh)
The name you enter here will have the above file name extensions.
Zero/Zero in Gain
FileWhen calculating the gain, the software must decide what to output when there is
no significant data in the FFT of both the input and response files. The two
alternatives the user may select are Zero (result is not considered to be important)
or One (input and output are identical).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities540
Main Index
Figure 3-105  The Results Display Screen
The fields are as follows:
Batch Operation
A typical batch command line would be:
mfra /opt=1/inp1=data01/inp2=data02/fft=4/win=3
/gen=fraexamp/ov=y/norm=n/opt=2/disp=5/pltnam=fred
This batch command line will carry out a frequency response analysis using data01  as the input signal and
data02  as the response.  The results will be stored under the default generic name of fraexamp .  The
analysis will be carried out with a FFT buffer of 512 points and a hanning window.  The default conditions
of 30% overlap and normalized input data will be met.  A graphical display hardcopy file ( *.plt ) will be
produced from /OPT=2, and it will be the . pha file from /DISP=5, with the name fred.plt .
A list of  MFRA’s batch keywords:Option Description
Result to Display Choose any one, or choose all, or the results files to plot.  MFRA will then load
the graphics module Quick Look Display  (MQLD) and plot the results file.&lt;br&gt;
When QLD is exited the user will be returned to this screen.
Multi File Display (MMFD) is used when ’7. All results files’ is selected.
Minimum frequency
to plotSpecify the minimum frequency to plot in Hz.  The value must not be negative
and must be less than the Nyquist frequency (the Nyquist frequency for this case&lt;br&gt;
is displayed in the statistics area). This question is not so important for interactive
users since the limits may be changed when the data is displayed graphically but&lt;br&gt;
is very useful for batch operation.
Maximum frequency
to plotSpecify the maximum frequency to plot  in Hz.  The value must greater than the
specified Nyquist frequency (the Nyquist frequency is displayed in the statistics
area).  This question is not so important for interactive users since the limits may
be changed when the data is displayed graphically but  is very useful for batch
operation.
/OPTion This keyword is used for the first menu where the user chooses either analysis
(option 1) or display (option 2)
/INP1 The input filename, /INP1=FILE1
/INP2 The response filename, /INP2=FILE2
/GENeric The output filename required for the results data file, /GEN=RESULT
/OTYPE Output Type (PSD,AMP ,etc.) P , A, E
/SCALE RMS or Peak R, P
/AVERage Linear averaging or Peak Hold L, P&lt;/p&gt;
&lt;p&gt;541 APPENDIX C
Utilities
Main Index
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if&lt;br&gt;
it is omitted and an output file with the specified name already exists, batch operation will cease./STArt Start Time for Analysis
/END End Time for Analysis
/OV Whether to overwrite an existing results file, /OV=Y
/NORM Option to normalize the input time series data (Y/N), //NORM=F ,B,N
/OVERLap The amount of overlap of the FFT buffers, /OVERL=45
/FFT The permissible FFT buffer size: 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,
/FFT=32
/FLOor Noise Floor
/WFILE User Defined Window Filename
/ZERo Value of 0/0 in gain file Z, O
/WINdow The type of window function to be used, H, C, R, /WIN=H
/DISPlay This allows the user to choose the display to be viewed: 1. Power Spectrum of input
signal (.SXX), 2. Power Spectrum of response signal (.SYY), 3. Cross Spectrum of
input and response signals (.SXY), 4.Gain plotted against frequency (.GAI),
5.Phase angle plotted against frequency (.PHA), 6.Coherance function plotted
against frequency (.COH), 7.Display all, 8.Exit display options, /DISP=1
/FMAX The maximum frequency to be displayed, /FMAX=45
/FMIN The minimum frequency to be displayed, /FMIN=10
/PLOt Automatically plot results Y, N
/PL TNAM Hardcopy filename&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities542
Main Index
Statisti cal Analysis - (M RSTAT)
MRSTATS analyses a time signal and produces a number of statistics about that signal. MRSTATS works by
breaking the input time signal into segments, and statistically analyzing each segment. Each statistic is fed
into an output signal file.
Input files normally have the . dac file extension.
MRSTATS can generate a maximum of seven statistics from an input file. Each set of statistics is fed into its
own type of output file, the type of statistic being identifiable by the file extension. For example, the output
file that records the variation of the mean signal strength against time has a . mea file extension.
The MRSTATS module accepts input from . dac files and divides the signal recorded by the . dac file into a
series of time slices of equal length. Each slice then has up to seven operations carried out upon it. The
operations are as follows:
Operation Output File Extension
Root Mean Square (RMS) .rms
Standard Deviation .rsd
Mean .mea
Maximum Value .max
Minimum Value .min
Absolute Maximum .abs
Area Under Data .are&lt;/p&gt;
&lt;p&gt;543 APPENDIX C
Utilities
Main Index
The result of each operation is placed in the appropriate file, and the next slice is then analyzed. Eventually
all of the signal will be analyzed, and up to seven output files will have been created that record the variation
of the above named statistics against time, for each user specified slice of the input signal.
The Area Under Data option is a record of the area under the curve as derived by integration.
MRSTATS does not have the ability to display the output files. Use data display modules such as MMFD or
MQLD to display files.
Module Operation
The RSTATS module can be started and operated:
In Stand alone mode by invoking mrstats at the system prompt as explained in Configuration, 328 .
By incorporating the MRSTATS commands in a batch operation
MRSTATS is composed of three screens. Whether the user has run MRSTATS from the menu, or directly
from the system prompt, the first screen displayed looks like this:
Figure 3-106   Selecting the Statistics
The horizontal bar contains the tag options menu. The items that can be tagged are those statistics named
in the statistics list below the tag menu. T agging a statistic means that MRSTATS will produce an output file
containing the tagged type of statistical data.
A statistic is tagged when it has an asterisk (*) next to it.
To move the highlight bar within the list of statistics use the up/down arrow keys. The 5 tagging menu
choices do the following:
Note:   Use the left/right arrow keys and the space-bar to select from the tag menu, OR, press the
appropriate letter (the capital letter in the option is the &amp;lsquo;hot key&amp;rsquo;. The selected option is the one
highlit with the highlight bar or point and click with the mouse.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities544
Main Index
When the user has selected those statistics for which they want an output file to be created, they must click
OK to accept the screen. Pressing OK, or C to aCcept, takes the user to the second screen of MRSTATS.
The screen looks like this:Option Description
aCcept (or OK) When the user has selected those statistics for which they want an output file to
be created, they must press OK to accept the screen, OR, press C for aCcept.
Pressing OK takes the user to the second (and last) screen of MRSTATS.
Tag/untag This allows the user to tag individual statistics while leaving others untagged.
To tag/untag a statistic move the highlight bar over the statistic and press Enter.
Users may select as many, or as few, statistics as they wish.
tag All As the name suggests, this option allows the user to simply and quickly tag all the
statistics.
To use tag All, move the highlight bar over it and press Enter. An output file will
then be produced for all seven statistics.
Untag all This has the opposite affect to tag All. The program will not run if there are no
statistics tagged (there would be no point because no output would be produced).
Therefore, the only use of Untag all is to clear a previous set of selections prior to
making new selections.
Exit This option exits MRSTATS and returns the user to the operating system.
Options are not saved.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P29</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_029/</guid>
      <description>
        
        
        &lt;p&gt;545 APPENDIX C
Utilities
Main Index
Figure 3-107  Specifying the Analysis
Please note that initially only the first field is displayed (filename of input signal). Only when the input signal
filename has been entered will MRSTATS display the other fields.
This screen allows the user to name the input (. dac) file, the output file names, and specify certain technical
parameters.
The fields are as follows:
Option Description
Input Filename The name of the file that contain the input signal must be entered here. The input
file will normally be a . dac file, which is also the default file extension. The full
path must be specified only necessary if the file is not in the current directory, or
currently defined path.
Output Filename(s) Here the user can choose the name of the output file, or if more than one statistic
has been flagged, the output files. If all seven statistics were tagged, and data01&lt;br&gt;
was chosen as the output file name, the output files produced will have the
following names:
data01.rms
data01.rsd
datao1.mea
data01.max
data01.min
data01.abs
data01.are
Both of the above fields can accept up to 32 characters (to name the drive, path,
and extension).
Window Type Enter the method used to specify the window size. The options are:
Time - specify a window size in seconds.
Points - specify the window as a number of points
% (Percent) - specify the window as a percentage of the signal length&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities546
Main Index
Window size It is in this field that the user specifies the length of the window size units into
which the input signal will be divided. The diagram below illustrates how a 100
second long input signal is divided into five 20 second segments by choosing a
window size of 20 s. The same rules apply if points or % are selected.
Each of the 5 segments will be analyzed and each of the 7 output files will contain
data points each from of the five time segments.
If nothing is entered in this field, MRSTATS enters a default value of 10 units
(seconds, %, or points). If the signal is less than 10 units long, the default window
size is the length of the signal.
Users may not specify a window size greater than the length of the signal.
Overlap This field enables users to overlap time segments. For example, if a window size of
10 seconds was input for a 100 second signal, and an overlap of 50%, the output
readings will be at the following times: First reading between 0 and 10 seconds,
second between 5 and 15 seconds, third between 10 and 20 seconds, etc. until 100
seconds is reached.
The default value is no overlap, i.e., consecutive windows. The maximum overlap
is 99% or its equivalent. Negative overlaps are not allowed.
The options are:
Time - specify the overlap in seconds.
Points - specify the overlap as a number of points.
Percent - specify the overlap as a percentage of the window length.Option Description
600
-400100 0&lt;/p&gt;
&lt;p&gt;547 APPENDIX C
Utilities
Main Index
Gating Option A gating signal is a signal that records events which can be used to define which
parts of an input signal will be analyzed. In other words it is a kind of filter. For
example a user may only be interested in analyzing input signals that correspond
to an event such as the brake being applied on a test vehicle. If the use of the
vehicle&amp;rsquo;s brakes are recorded, the signal can be used as a gating signal that is
mapped to the input signal, so that only those parts of the input signal created by
brake application will be analyzed.
There are 6 ways of setting the gating signal plus an option for no gate (the
default):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Window starts when the gating signal reaches a specified value, and ends when
the gating signal rises to the specified value.&lt;/li&gt;
&lt;li&gt;Window starts when the gating signal is NOT at a specified value, and ends
when the gating signal reaches the specified.&lt;/li&gt;
&lt;li&gt;Window starts when the gating signal is greater than the specified value, and
ends when it falls to the specified value.&lt;/li&gt;
&lt;li&gt;Window starts when the gating signal is less than the specified value, and ends
when it is outside the specified limits.&lt;/li&gt;
&lt;li&gt;Window starts when the gating signal is inside the specified limits, and ends
when it is outside the specified limits.&lt;/li&gt;
&lt;li&gt;Window starts when the gating signal is outside specified limits
and ends when it is inside the specified limits.Option Description&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities548
Main Index
Statistics are calculated for that part of the signal which lies within the window.
The two drawings below illustrate an input signal (A) and its corresponding gating signal (B). When brakes
are applied the gating signal is 0.7, and it drops to 0 when brakes are not applied.Gating filename The user enters the name of the gating signal (if any) into this field. Typically it
has a .dac file extension. The gating signal is normally of the same time duration
and sample rate as its corresponding input signal.
The default file extension for a gating signal is . dac.
The Gating value(s) To complete the screen, move the highlight to the gating values box. The exact
layout of the gating values boxes depends upon the Gating Options chosen.
The values must lie within the gating signal limits (displayed to the right of the
gating value box).
Event Analysis Type The gate, once triggered, will operate for a certain portion of the signal (an event
frame), but it may encounter another trigger before it has reached the end of that
event frame. How this is handled is set by the Event Analysis Type field.
The event analysis type can be of three forms:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Analysis of signal takes place for the whole of the event frame i.e., multiple
windows can occur in one event. If an event is shorter than the window time then
no analysis will occur for this event.&lt;/li&gt;
&lt;li&gt;Analysis of signal takes place only for first window in an event frame. If an event
is shorter than the window time then the analysis occurs over the event time.&lt;/li&gt;
&lt;li&gt;The window value will be ignored and the analysis of the signal will take place
over the whole of the event time in the gating signal. Note that the x-axis value in
the output files is stepped in an arbitrary value of 1 sec.Option Description&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;549 APPENDIX C
Utilities
Main Index
Figure 3-108   A Signal and It&amp;rsquo;s Gate Signal
If the gating value is set to 0.5 then only segments 1, 3, 4 and 5 on graph A will be analyzed. Only those
peaks correspond to the 0.5 limit set as the gating signal trigger value. Note that the gating signal has to be
greater than the gating value for the entire time window, if it drops below the gating value just once per
window then the entire window&amp;rsquo;s data is ignored. If nothing is entered in this field, MRSTATS assumes there
is no gating signal and therefore analyzes all of the input signal.
The example given above was produced according to gating option 3.
If a gating option is chosen then the third and final screen is displayed.
If the no-gate option is accepted, the analysis proceeds and a % complete meter appears.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities550
Main Index
Figure 3-109   Specifying the Gating Parameters (In This Case for Option 5)
To accept the screen and start the analysis, press OK.
Once the screen has been accepted a &amp;lsquo;% processing complete&amp;rsquo; progress bar appears on the screen.
Batch Ope ration
MRSTATS can be run in non-interactive batch mode. Typical batch command lines would be:
mrstats /opt=all/inp=test/ov=y
This would calculate all output statistic signals for the input file test.dac .
A list of MRSTATS’ batch keywords:
/OPT The statistics options - 1 - 7 or ALL
/INP The name of the input . dac file
/OUT The name(s) of the output . dac files
/OV Overwrite existing files
/WINTYP The window type time, points, or percent
/WIN The window size
/OVLTYP The overlap type T(ime), P(oints), or %
/WINOV The window overlap
/GSIG The name of the gating signal.
/GOPT The gating option from 1 to 6
/LIM1 The gating value.&lt;/p&gt;
&lt;p&gt;551 APPENDIX C
Utilities
Main Index
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if
it is omitted and an output file with the specified name already exists, batch operation will cease./LIM2 Second gating value
/ETYP The event analysis type&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities552
Main Index
Head er/Footer Manipulation - (M FILMNP)
File manipulation (MFILMNP) allows both header and extra details manipulation.
MFILMNP can list and edit data file headers, and control the extra details data that can be written to files.
The files types that can be edited include single parameter files e.g. . dac files and 2 parameter files e.g. . mdf.
Three parameter histogram files can also be processed.
Headers tend to contain information relating to the data within the file. Extra Details Areas (also called
footers) tend to contain user supplied data, or the results of the analysis of the data.
Header information is stored in at the top of a data file ahead of the data itself. The area is of fixed size and
is reserved for a specific set of file details. Footers are appended to the end of files and tend to contain user
specified details. The exact contents of the footer cannot be stated without looking at each footer because the
extra details keywords, which specify the contents of the footer, vary. This is because the available extra details
keywords vary between utility modules, and in any case the user specifies which keywords are to be used.
Because of the difference between header and footer information, they are discussed separately, starting with
The Header Area.
The Header Area
Although file headers are usually strictly maintained with accuracy and integrity, it may sometimes become
necessary to edit the contents of a header element in order to meet a specific requirement. For example, under
normal circumstances files with differing sampling rates or bases cannot be concatenated. MFILMNP
provides a means for “adjusting” any header element so that concatenation, or any other operation which
would not normally be allowed, can be undertaken. However, great care must be exercised when using
MFILMNP in this way because the fundamental nature of the data is being changed! Because of this danger,
these numeric operations can only be carried out, with a precise knowledge of the header format, and by
accessing it through its ‘dump form’.
In addition to editing specific numeric elements, MFILMNP also provides a means of amending areas of the
header that contain textual information such as axis labels and units. This functionality can be particularly
useful when data files are being transformed, by some arithmetic or analytical process, from one unit system&lt;/p&gt;
&lt;p&gt;553 APPENDIX C
Utilities
Main Index
to another; the two example batch command lines provided at the end of the batch section illustrate this
usage. Unlike the numeric operations referred to above, textual manipulation does not require a knowledge
of the header format and so is carried out by accessing it through an ‘annotated form’.
The D mp Form
The dump form provides a means of accessing the header in a relatively straightforward way by considering
it to be made up of 128 four-byte elements, 512 bytes in all. Data can be stored in each element according
to the number of bytes required for each data type; this storage requirement is detailed below:
In this regime, a real floating point number, requiring 4 bytes, will occupy one element of the dump form.
An integer, on the other hand, will only half fill a dump form element, and so, two integers can be stored.
Similarly, each dump form element will store four characters.
Access to the dump form is through element number i.e. 1 through 128. It is the user&amp;rsquo;s responsibility to load
each element with the correct data type and number of values. For example, if dump form element 33 is to
be amended, the user will need to be aware that this element contains two integer values and enter them both.
Omitting a value will set the second half of the element to zero, see the section on module operation for more
details.
In all there are 128 elements numbered.
The Annotated Form
Unlike the dump form, the annotated form requires no prior knowledge of the format of the file header. It
is designed to allow access to specific header fields by name alone. The following fields may be accessed in
this way:
X-axis unit string
Y-axis unit string
Z-axis unit string
X-axis label string
Y-axis label string
Z-axis label string
Original signal name
Final signal name
Signal baseData Type ExampleStorage Requirement
(Bytes)Number of values per
dump form element
REAL 150.65 4 1
INTEGER 10 2 2
CHARACTER A 1 4&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities554
Main Index
Notice that although the signal base is a numeric field, it may nevertheless be accessed through the annotated
form. See the section on module operation for more details.
The Footer (Extra Details Area)
Often the header area is not large, or flexible enough, to store non-standard system or even user-defined,
information. T o overcome this restriction, a system has been devised whereby information may be attached
directly to the tail of an existing data file, into a region known as the Extra Details Area (EDA)  or Footer .
The extra details area of a specific data file may be examined, modified and extended through the use of the
MFILMNP module. However, many utility modules access this region automatically, either to deposit, or
recover information, some of these modules are detailed below:
Once extra details have been “attached” to a particular data file, they are automatically pass them on to any
data files “spawned“from the original file and so the information can be carried forward from the beginning
to the end of any analysis procedure.
Format of the extra details area.
Information is stored in the extra details area and are in the form of keyword/ value pairs, the sequence of the
pairs is irrelevant. The maximum size of each field is illustrated below:
The Keyword Field - Up to 8 characters in length.
The Value Field - Up to 120 characters in length.
Since access is always via MFILMNP or other utility modules, a more detailed knowledge of the format of
the EDA is not required.
Module Ope ration
The MFILMNP module can be run in one of the following modes:
In stand alone mode by invoking mfilmnp  at the system prompt as explained in Configuration, 328 .
By incorporating the MFILMNP commands in a batch operation.
The first mode is interactive. Once initiated in interactive mode, MFILMNP displays the following options:Note:   Since extra details are stored entirely as character text, any detail which is supposed to be numeric
will NOT be checked for validity by MFILMNP .&lt;/p&gt;
&lt;p&gt;555 APPENDIX C
Utilities
Main Index
Figure 3-110   The MFILMNP Top-Level Menu
Input File Name
By default MFILMNP expects this file to be a standard single parameter file with a file extension of . dac.
Therefore, if a file of this type is to be processed, the . dac extension may be omitted. Files with the correct
internal format but different file extensions must have their names entered in full, i.e. including the file
extension.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities556
Main Index
Header Manipulation
Option Description
View Annotated form The annotated form is an annotated (cut down) version of the full dump form. It
only contains those header parameters most often changed, i.e. about 20 of the
total of 128 parameters. Output can be sent to either the screen or a file.
View Dump form Lower limit:
The dump form of the file header consists of 128 four byte elements with each
element containing either a single floating point number, two integers, or four
characters. The response required here is the number of the dump form element
at which the listing is to commence.
Upper limit:
The dump form of the file header consists of 128 four byte elements with each
element containing either a single floating point number, two integers, or four
characters. The response required here is the number of the dump form element
at which the listing is to end. The number entered must be greater than or equal
to the lower limit specified above and less than or equal to 128.
Operation type: real, integer*2, character (R):
The contents of each element of the dump form can be represented and displayed
by means of any of the three data types; REAL, INTEGER and CHARACTER.
If the user wishes to view the first 3 (of 128) dump screen elements then entering
Lower limit = 1 and Upper limit = 3 will display elements 1 to 3.
Update annotated
formMove the highlight bar over the field to update in the screen that is presented.&lt;/p&gt;
&lt;p&gt;557 APPENDIX C
Utilities
Main Index
Extra D etails (Footer) Manipulation
The second major option from the main menu is that which allows manipulation of the footer information.
If this option is selected then you have the following options:Update dump form Dump form number:
The dump form of the file header consists of 128 four byte elements with each
element containing either a single floating point number, two integers, or four
characters. The response required here is the number of the dump form element
to edit.
Operation type Real, Integer*2, Character:
The contents of each element of the dump form can be replaced by any of three
data types; REAL, INTEGER and CHARACTER. The type offered as the default
is the data type of the element specified for editing.
MFILMNP will present the current contents of each dump form element and
prompt for an alternative value. Note that in this case the element specified was
number 91. Number 91 is a character and characters have up to 4 values to be
entered (Integers have 2 values and Real have 1).
Special characters such as Escape codes can be entered by surrounding number
with &amp;lt;&amp;gt; characters.
New Value:
Type the new values here. Pressing OK will cause them to be passed to the dump
form.
File integrity Check Selection of this option will cause MFILMNP to recalculate all the statistics which
are normally contained within the header area. This procedure is useful since it
ensures that the calculated values are a true representation of the data.
Save changes All edits MUST be explicitly saved before they become permanent. If changes are
not saved then MFILMNP will prompt with a Save Changes to Header Yes/No
message before leaving the Header manipulation options.
Return Returns you to the main menu.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities558
Main Index
Option Description&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load extra details
area from ASCII fileExtra details may be loaded into the specified data file from an external ASCII text
file which may, for example, have been created with a text editor or word
processor. This feature is very useful for loading additional, user-defined test
information, particularly in batch mode; see the second example of typical batch
commands for more details of this technique. By default MFILMNP assumes that
the text file will have the extension . asc and that it resides in the user directory.
Note that any extra details with matching keywords already in the file will
overwrite. Other extra details are unaffected.
Syntax of the ASCII File:
The ASCII file must have one keyword/value pair per line with the delimiter
between the keyword and value strings being the equals sign “=”, for example:
TITLE=This is the test title
ENGNAM=Fred
TEMP=150
Keywords can be up to 8 characters in length; entry of longer strings will result in
an error message. Values fields may by up to 120 characters in length. Any line
without an equals sign will be disregarded and so can be used as comment lines.
Spaces in the keyword are not allowed.&lt;/li&gt;
&lt;li&gt;Load extra details
area from another
data fileIt is possible to copy extra details from another file into the extra details area of
the current data file. The other file must have version 3.0 (or above) extra details,
and it is assumed by MFILMNP to have the default file extension . dac. Other file
extensions must be entered explicitly. Note that any extra details with matching
keywords already in the file will be overwritten. Other extra details are unaffected.&lt;/li&gt;
&lt;li&gt;List extra details
areaThis option will simply list the entire contents of the specified data file to the
screen or to a specified file. Note that a file must be Loaded from options 1 or 2.&lt;/li&gt;
&lt;li&gt;Delete all of the
extra details areaThis option allows the user to delete the entire extra details area of a specified data
file. This is a dangerous option since it may destroy important data, as a result
MFILMNP will prompt for confirmation to proceed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;559 APPENDIX C
Utilities
Main Index
5. Add extra details
pair.The additional information stored in the EDA of standard files are stored in the
form of a keyword identifying the extra detail together with an associated value.
Keyword
A string of up to 8 characters, which will represent the keyword by which the
particular piece of information will be identified, should be entered. If the
keyword already exists, an error message will result. Valid keyword strings might
be, TIME, Title, or My Name. These keywords will be stored as TIME, TITLE
and MY NAME, notice that the SPACE character is maintained as a valid
keyword character.
Value
The additional information stored in the EDA of standard files are stored in the
form of a keyword identifying the extra detail together with an associated value.
The value to be assigned to a particular keyword should be entered, it can be up
to 120 characters in length and may be any text string. The 120 characters are split
over two lines because of screen restrictions.
After entry of an extra details pair, any mistakes can be corrected by selection of
option 6.
6. Modify extra
details value.Selection of option 6 will cause EDM to ask for the keyword and its value. The
value associated with a particular keyword can be modified by means of this
option. If the keyword itself needs to be modified, then it must first be deleted
with option 7 and then re-inserted with option 5. Enter the keyword whose value
is to be altered, option 3 can be used to list all the keyword/value pairs currently
stored.
The modified value to be assigned to the specified keyword should be entered, it
can be up to 120 characters  in length and may be any text string.
7. Delete extra details
pair.The additional information stored in the EDA of standard files are stored in the
form of a keyword identifying the extra detail together with an associated value.
Entering the name of an unwanted keyword at this point will remove it and it&amp;rsquo;s
associated value from the extra details area.
Keyword pairs can be displayed using F3/List. This facility also allows the user to
tag more than 1 keyword, use a wildcard character (*) to tag families of keywords,
and access keywords from other drives/directories.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities560
Main Index
8. Copy extra detail
pair to environment
fileUtilities r uns within the context of both a local (from the user’s directory) and
global system environment. These environments are special data files that contain
information to which each utility p rogram module can gain access.
Since the structure of the environment file and the extra details are fundamentally
the same, data may be copied freely between them. As a result an environment file
may then be used as a mailbox to pass information results between data files and
program modules.
This option allows extra details keyword/value pairs to be copied from the
specified data file  TO the local environment file . Enter the name of the keyword
which, together with its associated value, is to be copied from the extra details area
of the current data file into the local environment file.
F3/List will list all available keywords.Option Description&lt;/p&gt;
&lt;p&gt;561 APPENDIX C
Utilities
Main Index
9. Copy extra details
from environment
fileEquivalent to option 8 but instead  copies FROM  the local environment  file to
the specified data file. Enter the name of the keyword which, together with its
associated value, is to be copied from the local environment file into the extra
details area of the current data file.
A. Extra details
calculationThis option can be used to perform arithmetic calculations on keyword values. An
example is shown in Figure 3-111 where speed in mph is converted to m/sec. The
top line reads the value associated with a header variable called SPEED and
multiplies it by 1.8 to get km/hr. The new speed value is automatically fed into
line 2 (EDMV2) and multiplied by 1000 and the resultant speed value is fed into
field EDMV3 where it is divided by 3600 (the number of seconds in an hour).
The results of all three stages are written to the extra details area, in this case as
EDMV1, EDMV2 and EDMV3.
Available input name/values can come from
Extra details
Numbers
Header Keywords
Arithmetic operators can be
*(multiply)
/(divide)
+(Add)
-(subtract)
^(raise to the power of)
There should be no spaces between words and operators.
B. Compress extra
detailsExtra details are added to the end of a data file as a string of values. When
values/words in the middle of the string are deleted, the blank space is NOT
automatically closed up. The deleted areas become &amp;lsquo;dead&amp;rsquo; space because
values/words can only be added to the end of the string, not in its middle. This
option closes up the spaces, or more accurately, it moves the spaces to the end of
the string where they become available again.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities562
Main Index
Figure 3-111   The EDA Calculation Screen
Validate Header
This option is a utility that checks the validity of the header. It:
checks the header values are correct by recalculating the values and comparing the calculated values
to those in the header.
uses double precision for the statistic calculations.
checks that blocks of extra details are consistent with the header.
checks that all numbers are credible.
New File
Selection of this option simply removes the menu from the screen and makes the Input File Name field the
screen focus once more.
Batch Op eration
MFILMNP can be run in non-interactive batch mode. In this mode of operation simple but often tedious
alterations to the file header to be made simply and accurately. Typical batch command lines would be:
mfilmnp
/inp=test101/opt=h/opt=u/ylabel=MPa/yunits=stress/&lt;em&gt;=tt
This changes the Y-axis label and the Y-axis units of the file test101.dac .
mfilmnp /inp=test101/opt=e/opt=8/key=&lt;/em&gt;
This copies all the extra details pairs from the file test101.dac  to the environment file. A list of
MFILMNP’s batch keywords:&lt;/p&gt;
&lt;p&gt;563 APPENDIX C
Utilities
Main Index
/INP= The name of the input data file. /INP=FILE1
Main Menu
options:
/OPT= H-Header, E-Extra, V-Validate, N-New file
/OPT= A submenu option number.
1-Load EDA from an ASCII file, 2-Load EDA from another data file, 3-List EDA,
4-Delete all of the EDA, 5-Add extra details pair, 6-Modify extra details value, 7-
Delete extra details pair, 8-Copy EDA to local environment, 9-Copy EDA from
local environment. /OPT=7
/KEYn= The required EDA keyword. /KEY1=TIME, /KEY2=SPEED
/VALn= The value to associate with the required keyword. /VAL1=60, /VAL2=100
/OV= Confirmation to allow the deletion of an entire extra details area. /OV=Y
/INPut The name of the ascii file or the data file from which to copy extra details from.
/INP=INDATA
/OPTion The required option number where: 1-View annotated form, 2-View dump form,
3-Update annotated form, 4-Update dump form, 5-File integrity check. /OPT=3
/DESTination The destination for the header listing: S-Specifies to the user screen. F-Specifies to
a file name. /DEST=F
/OUTput Output file name, /OUT= fred.lst. Note  that to direct the listing to a
notebook, a notebook name must be defined in the local environment. In batch
mode this is accomplished by issuing the following command to MFILMNP &amp;hellip;
/menm /opt=2/key=notebook/val=myname )
/LOWLIMit Specifies the element in the header at which the listing of the dump form will begin.
Values between 1 to 128 may be entered. /LOWLIM=1
/UPPLIMit Specifies the element in the header at which the listing of the dump form will end.
Values between /LOWLIM and 128 may be entered. /UPPLIM=10
/OPTYPe Defines the type of the header element to be edited. R-Specifies a REAL (floating
point) field, I-Specifies an INTEGER field, C-Specifies a character field.
/OPTYP=I
/XUNIT The text string that will define the units of the x-axis. Up to a maximum of 28
characters may be used. If the value is set to NONE, then this field will be made
blank. /XUNIT= Secs.
/YUNIT The text string that will define the units of the y-axis. Up to a maximum of 28
characters may be used. If the value is set to NONE, then this field will be made
blank. /YUNIT= Secs.
/ZUNIT The text string that will define the units of the z-axis. Up to a maximum of 28
characters may be used. If the value is set to NONE, then this field will be made
blank./ ZUNIT= Secs.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Loading Utilities564
Main Index
/XLABel The text string that will define the x-axis label. Up to a maximum of 16 characters
may be used. If the value is set to NONE, then this field will be made blank.
/XLAB=Elapsed Time.
/YLABel The text string that will define the y-axis label. Up to a maximum of 16 characters
may be used. If the value is set to NONE, then this field will be made.
/YLAB=Load.
/ZLABel The text string that will define the z-axis label. a maximum of 16 characters may be
used. If the value is set to NONE, then this field will be made. /ZLAB=Damage.
/BASE The new base value for the data file. /BASE=10
/REAL If a REAL (floating point) field is being edited, then this keyword defines the new
REAL value required. /REAL=26.5
/DUMPform Dump form number /DUMP=91
/NUM1 First value for dump form update /NUM1 = A
/NUM2 Second value for dump form update /BASE=10
/NUM3 Third value for dump form update /NUM3 = C
/NUM4 Fourth value for dump form update /NUM4 = D&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P3</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_003/</guid>
      <description>
        
        
        &lt;p&gt;25 CHAPTER 2
Introduction to User Interface
Main Index
10. The NENTS parameter can be used by itself or in conjunctions with TOPSTR, TOPDMG, or
NHS. Only entities that pass this filter are reported in the f06 file and/or output to the OUTPUT2
and/or HDF5 files. If NENTS is used with the SRESOLVE option on the FTGPARM  entry, then
the number of entities printed may be more as the SRESOLVE option saves the number of grids and
each element associated with those grids.
11. If FATIGUE(STROUT=4) case control is used it is highly recommended that output be limited.
Temporary CSV files are created for each entity and F06 output can be enormous if not filtered using
the ELSET entries. The analysis fails if maxENTS is less than the number of elements requested using
ELSET entries when STROUT=4 is specified. Increase maxENTS if necessary after assessing output
needs .
Defines a list of property IDs
Format:
Example:
Remarks:
1.THRU option may not appear in field 5 or 9 on first line or field 2 or 9 for continuation lines.
2.Referenced from the FTGDEF  entry.SET4 Property Set Definition
1 2 3 4 5 6 7 8 9 10
SET4 ID CLASS TYPE ID1 ID2 ID3 ID4 ID5&lt;br&gt;
ID6 ID7 ID8 -etc-&lt;br&gt;
SET4 22 PROP  PSOLID 1 THRU 20&lt;br&gt;
Field Contents
ID Unique identification number. (Integer&amp;gt;0).
CLASS Set to &amp;ldquo;PROP&amp;rdquo;. (Character=PROP; no default)
TYPE Property type. Valid options are PSOLID, PSHELL, PSHEAR, PBAR, PBEAM, and PWELD.
IDi Property IDs of the specified TYPE flag.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions26
Main Index
Defines fatigue ma terial p roperties for time domain based SOLs 101, 103, 112.
Format:
Examples:
Use of only the “STATIC” line, which define s an ultimate tensile stress (UTS) and a material code (CODE).
In this case, with no other lines of data, the cyclic material properties for either an S-N or -N analysis are&lt;br&gt;
derived or standard values used.&lt;br&gt;
This example contains a line specifically defining the parameters for an S-N curve. The “STATIC” line is
required in either case as UTS must be defined .MATFTG Fatigue Material Properties
1 2 3 4 5 6 7 8 9 10
MATFTG MID CNVRT
&amp;ldquo;STATIC&amp;rdquo; YS UTS CODE TYPE RR  SE mp
RA
“SN”
“SNS1”
“SNS2”
“SNBR1”
“SNBR0” SRI1 b1 Nc1 b2 Nfc SE BTHRES
H
M1 M2 M3 M4 MSS RTHICK nTHICK
SF-FXY DE-FXY TE-FXY SF-MXY DE-MXY TE-MXY
SF-FZ DE-FZ TE-FZ SF-MZ DE-MZ TE-MZ
&amp;ldquo;TABLE&amp;rdquo; V ALUE1 TID1 V ALUE2 TID2 V ALUE3 TID3
V ALUE4 TID4 &amp;hellip; &amp;hellip; -etc.-
“MMPDS” A1 A2 A3 A4
&amp;ldquo;EN&amp;rdquo; Sf b c Ef n’ K’ Nc
SEe SEp SEc Ne
“MA TID” E NU
MID1 MID2 MID3 MID4 MID5 MID6 MID7
-etc.-
MATFTG 9
STA TIC 430 682 99
MATFTG 9
STA TIC 430 682 0.1
SN 3095 -0.1339 1.e8 0.0 1.e8&lt;/p&gt;
&lt;p&gt;27 CHAPTER 2
Introduction to User Interface
Main Index
This example associates this single M ATFTG entry to MAT1 entries  9-15, and 18. This is a convenient
method to define only one fatigue material entry and associate it to multiple material/property sets when they
all use the same fatigue material definitions.MATFTG 9
STATIC 430 682 0.1
MATID 2.1e5 0.3
9 THRU 15 18
Field Contents
MID Unique material ID that matches the identification of a MAT1 entry unless the
MATID line is supplied (Integer&amp;gt;0). See Remark 1.
CNVRT Conversion factor.  See Remark 2. regarding units.
STATIC Required flag indicating that yield and/or ultimate tensile strengths and other
common parameters are supplied (Character = STATIC). See Remark 3. and 4.
YS Yield strength (Valid range equivalent in MPa: 50.0  Real  3000).  See
Remark 2. regarding units.
UTS Ultimate tensile strength (Valid range equivalent in MPa: 100.0  Real  4000).
See Remark 2. regarding units.
CODE Material code used in automatically generating S-N or -N data curves and for
surface finish corrections.  See Remark 3.
TYPE Specification of the type of S-N curves defined using the TABLE  flag (no
Default). See Remark 4.
RR R-ratio of test used to create S-N or -N curve.
(-1.0e30  Real  1.0, Default=-1.0 , fully reversed loading ).
SE Standard Error of Log(N). (0.0  Real  10.0, Default=0.1).&lt;br&gt;
mp Plastic Poisson’s Ratio. (0.45  Real  0.55, Default=055).
RA Percentage reduction in area used for deriving -N data for metals of type
“other” ( CODE f ield = 200-207 or &amp;gt;300). (0.0  Real  100.0; no Default).
SN
SNS1/SNS2
SNBR1/SNBR0 Flag indicating the definition of an S-N curve(s) follow (Character = SN,
optional). See Remark 5. and 7. and 8.
SRI1 Stress range intercept. (Valid range equivalent in MPa: 1.0  Real  2.5e4, no
Default). See Remark 2 regarding units.
b1 First fatigue strength exponent. (-1.0 &amp;lt; Real&amp;lt; -0.02, no Default)
Nc1 In 1-segment S-N curve, the cycles limit of endurance.  In 2-segment S-N
curve, this is the fatigue transition point. Both are defined in cycles. (1.0  Real
 1.0E25; no Default).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions28
Main Index
b2 Second fatigue strength exponent.  Set to ze ro (0) when defining 1-segment S-N
curve; (-0.5 &amp;lt; Real  0.0, Default=0.0).&lt;br&gt;
Nfc Fatigue cutoff. (1.e-9 Real  1.0e30; Default=1.0e30).
SE Standard Error of Log(N). (0.0  Real  10.0, Default=0.1).  SE from
“STATIC” line is used if left blank.
BTHRESH Threshold value of the bending (r) ratio used in interpolation between “stiff”
and “flexible” SN curves for fatigue analysis of seam welds. (0.0 Real  0.999;
Default=0.5)
M1 - M4 Mean stress slope parameters M1 through M4 representing sensitivity to mean
stress in four (4) regimes of R-ratio as plotted on a constant life Haigh diagram
and used in FKM mean stress correction. (-0.99  Real  0.0; Default = blank).
See Remark 6.
MSS Mean stress sensitivity factor, used only for fatigue analysis of spot welds with
CORR=SIMPLE on the FTGPARM  entry. (0.0  Real  1.0, Default=blank).
This mean stress correction method is a simplified version of the FKM method
where M1=M2=M3=M4=-MSS.
RTHICK Reference thickness/threshold (in consistent model length units) for sheet
thickness correction used in fatigue analysis of seam welds. Ignored if
THICK=0 on the FTGPARM  entry for “SEAMW”. Must be supplied if
THICK=1. (Real  1.0e-9; Default=1.0)
nTHICK Sheet thickness correction exponent used in the fatigue analysis of seam welds.
Ignored if THICK=0 on the FTGPARM  entry for “SEAMW”. Must be
supplied if THICK=1. (Real; Default=0.16667)
SF-FXY
SF-MXY
SF-FZ
SF-MZScale factor for stress due to FX or FY (shear forces), MX or MY (bending
moments), FZ (axial force), and MZ (torsion), respectively (Real, Default =
blank) used in fatigue analysis of spot welds only. See Remark 9.
DE-FXY
DE-MXY
DE-FZ
DE-MZDiameter exponent for stress due to FX or FY (shear forces), MX or MY
(bending moments), FZ (axial force), and MZ (torsion), respectively (Real,
Default = blank) used in fatigue analysis of spot welds only. See Remark 9.
TE-FXY
TE-MXY
TE-FZ
TE-MZThickness exponent for stress due to FX or FY (shear forces), MX or MY
(bending moments), FZ (axial force), and MZ (torsion), respectively (Real,
Default = blank) used in fatigue analysis of spot welds only. See Remark 9.
TABLE Flag indicating the definition of S-N curves as a number of tables follows
(Character=TABLE; optional). See Remark 5.
VALUEi The constant mean stress, R-ratio, or life (in cycles) of this particular S-N curve.
(Real; no Default). See Remark 2. regarding units .Field Contents&lt;/p&gt;
&lt;p&gt;29 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.Element properties must reference MAT1 entries in order to be linked to a MATFTG  entry as only
metal fatigue analysis of isotropic materials is supported. The MID must match that of an existing
MAT1 entry called out by the property entry (e.g. PSHELL) unless the “MATID” line is provided,
in which case all the MIDi referenced on the “MATID” line are then linked to the MATFTG  entry.
When the “MATID” line is used, E (required) and NU (optional) must be provided on this line as TIDi A TABLEM1  ID defining the S-N curve of stress range (y) vs. life (x) in cycles
for this particular S-N curve, or mean stress (x) vs. stress amplitude (y) for
constant life (Haigh diagram) curves (Integer&amp;gt;0). See Remark 2. regarding units.
MMPDS Flag indicating the definition of an S-N curve based on the MMPDS S-N
approach (Character-MMPDS; optional). See Remark 5.
A1 Coefficients or exponent of the standard MMPDS-01 material equation (must
be defined in units-KSI based on amplitude). (Real; typical ranges:
5.0&amp;lt;=A1&amp;lt;=110.0; -47.0&amp;lt;=A2&amp;lt;=-1.0, 0.1&amp;lt;=A3&amp;lt;=1.0; 0.0&amp;lt;=A4&amp;lt;=114.0; no
Default).  CNVRT is not applied to these values at all - it is ignored!A2
A3
A4
EN Flag indicating the definition of an -N curve is to follow. (Character=EN;
optional). See Remark 5.
Sf Fatigue strength coefficient (Valid range equivalent in MPa: 50.0  Real 
4000.0; no Default). See Remark 2. regarding units.
b Fatigue strength exponent (-0.5  Real  -2.0e-3; no Default).
c Fatigue ductility exponent. (-1.2  Real  -0.15; no Default).
Ef Fatigue ductility coefficient, (0.001  Real  10.0; no Default).
n’ Cyclic strain-hardening exponent, (5.0e-3  Real  0.5; no Default).
K’ Cyclic strength coefficient, (Valid range equivalent in MPa: 50  Real  1.2e4;
no Default). See Remark 5. regarding units.
Nc Cut-off (reversals), (1.0e5  Real  1.0e25; Default=2.0e8).
SEe Standard Error of Log(e) (elastic), (0.0  Real  10.0; Default=0.0).
SEp Standard Error of Log(e) (plastic), (0.0  Real  10.0; Default=0.0).
SEc Standard Error of Log(e) (cyclic), (0.0  Real  10.0; Default=0.0).
Ne Endurance Limit (Reversals), (1.0e-9  Real  1.0e25; Default=2.0e8).
MATID Flag indicating that a list of MAT1 IDs is to follow. See Remark 1.
E Young’s modulus, (Valid range equivalent in MPa: Real&amp;gt;0.0, no Default).
NU Elastic Poisson’s ratio. (0.25  Real  0.35, Default = 0.3)
MIDi IDs of existing MAT1 entries to which this MATFTG entry are linked. At least
one ID must be supplied. The &amp;ldquo;THRU&amp;rdquo; keyword is supported.Field Contents&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions30
Main Index
the code has no way of knowing from which referenced MAT1 this data should be extracted. Young’s
Modulus (E) and elastic Poisson’s ratio (NU) are extracted from the corresponding MAT1 entry of
the same ID when no “MATID” line is present. Usage of E and NU in the fatigue analysis itself is
dependent on the type of fatigue analysis requested and fatigue material properties provided. Young&amp;rsquo;s
Modulus (E) is mainly used for deriving S-N or e-N data when none is provided. If the “MATID”
line is used, and a MAT1 of the same ID also exists, that MAT1 ID must be in the MIDi list or it is
ignored in the analysis. In other words, when the “MATID” line is used, only the supplied MIDi IDs
are used in the fatigue analysis.
2.The CNVRT field is only used if fatigue material stress based parameters are directly input using the
&amp;ldquo;STATIC,&amp;rdquo; &amp;ldquo;SN,&amp;rdquo; &amp;ldquo;EN,&amp;rdquo;  or  &amp;quot; TABLE,&amp;quot;  methods.  It is used to allow the user to input the fatigue
material stress related parameters, (YS, UTS, SRI1, VALUEi, TIDi, A, B, Eb, K) in different units
other than the model&amp;rsquo;s consistent units.  Example:  model is producing stresses in PSI units, fatigue
material parameters input in MPa, the CNVRT factor should be 145.0377 to convert MPa to PSI.
Note that the y-values of any referenced TABLEM1 entries are also converted for the S-N method or
both the x- and y-values when TYPE=LIFE (Haigh curves). It is also necessary to use the DTI,UNITS&lt;br&gt;
for defining the model&amp;rsquo;s stress units.   See DTI,UNITS . (Real; Default=1.0)
3.If only STATIC is supplied, then for standard S-N or -N analysis, the S-N or -N curve is derived
using the UTS and a material CODE. For fatigue analysis of spot or seam welds, a standard material
set is used based on CODE, and UTS can be set to any valid number as the UTS from the standard
material set is used instead (only ferrous and aluminum codes are valid for spot/seam welds). Valid
codes are listed in Table 2-1 below. At a minimum UTS must be supplied along with the material
CODE and E on MAT1, or an error is issued. If either flag (SN or EN) is present, then the automatic
generation is suppressed if all the data necessary to define S-N or -N curves are given. For SN, these
fields are SRI1, b1, Nc1. For EN, these fields are Sf, b, c, Ef, n’, K’. Either all of them are present, in
which case they are used directly, or all of them are omitted, in which case the parameters are derived
as mentioned above. The determination as to whether S-N or -N curves are generated is determined
by the TYPE field set on the FTGPARM  entry. If surface finish corrections are to be applied, CODE
is also required (see PFTG  entry). When curves are derived, the specified CODE gets internally
converted to a generic code ferrous =99 for CODE&amp;lt;100, aluminum =100 for 100  CODE  200,
other=0 for 200  CODE  300, or titatnium =300 for 300  CODE &amp;lt; 400. When SN or EN flags
exist, the generic code is set to other, but the CODE is used as given.
4.TYPE can be set to MEAN (or AMEAN), RRATIO (or ARRATIO), or LIFE (or ALIFE) for
constant mean, R-ratio, or life (Haigh  diagrams), respectively, when using the “TABLE” flag. When
using multiple S-N curves for mean stress correction, CORR=INTERP on FTGPARM  must be used.
In this case, for RRATIO, a curve at R=-1 is required and for MEAN, a curve at zero (0) mean is
required. MEAN vs. AMEAN, or RRATIO vs. ARRATIO, or LIFE vs. ALIFE indicates the stress
type of the curves is range or amplitude, respectively.
5.If an S-N analysis is specified (TYPE field on FTGPARM  entry) but no S-N curve is supplied, an
error is issued.  If an -N analysis is specified but no -N curve is supplied, an error is issued.  The
STATIC data is required if SN or EN flags are specified on the MATFTG  entry. The SN  and TABLE
flags are generally mutually exclusive. When both SN and TABLE lines are defined, if TYPE is set,
the SN parameters (SRI1, b1, Nc1, b2) are ignored. EN flag may be present with SN  or TABLE flags,
but one or the other is ignored based on the type of analysis as set using the TYPE field on the
FTGPARM  entry. See Remark 7. and 8. for other “SNS1/SNS2/SNBR1/SNBR2” definitions.&lt;/p&gt;
&lt;p&gt;31 CHAPTER 2
Introduction to User Interface
Main Index
If MMPDS is used, the MMPDS mean stress correction is automatically applied by default
(CORR=MMPDS on FTGPARM entry).
6.Mean stress sensitivity: M1 for R&amp;gt;1; M2 for -  &amp;lt; R &amp;lt; 0; M3 for 0&amp;lt;R&amp;lt;0.5; M4 for 0.5&amp;lt;R&amp;lt;1. If M1-4
are undefined, and the material type (CODE) is given, all the parameters are estimated using
empirically defined rules for the FKM mean stress correction method. If only M2 is defined, then M1
and M4 are s et to zero and M3 to M2/3.
7.The “SN” line is used for the definition of standard SN parameters for any SN analysis. In the case
of fatigue analysis of spot welds, “SNS1” and “SNS2” are used to define the SN curves of the top and
bottom sheets to which the spot weld is connected and “SN” is used to define the SN curve of the
weld nugget. If no “SN”, “SNS1”, or “SNS2” flags are present, generic SN parameters are used for
steel or aluminum per the material CODE supplied. See Table 2-2 for default values used in this case.&lt;br&gt;
If CODE is blank, steel is assumed. If only one of the flags is provided, then “SN” = “SNS1” =
“SNS2”. If “SNS1” or “SNS2” is missing but the other is present, then “SNS1” = “SNS2”. If “SNS1”
and “SNS2” are defined, but not “SN”, then “SN” = “SNS1”.
8.The “SN” line is used for the definition of standard SN parameters for any SN analysis. In the case
of fatigue analysis of seam welds, “SNBR1” and “SNBR0” are used to define the flexible (bending
ratio=1.0) and stiff (bending ratio=0.0) SN curves. If no “SN”, “SNBR1”, or “SNBR0” flags are
present, generic SN parameters are used for steel or aluminum per the material CODE supplied. See
Table 2-2 for default values used in this case.  If CODE is blank, steel is assumed. If only “SN” is
supplied, then the “SN” parameters are used for both “SNBR1” and SNBR0”. If “SNBR1” or
“SNBR0” is missing but the other is present, then “SNBR1” = “SNBR0”. The 3rd and 4th lines of
data for these keywords should not be entered as they are applicable to fatigue analysis of spot welds
only, and not for seam welds.
9.If SF, DE, &amp;amp; TE values are not supplied, default values are used based on material CODE for steel
or aluminum. See Table 2-3 and Table 2-4. These should only be entered for fatigue analysis of spot
welds and not for anything else.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions32
Main Index
Table 2-1  Table of Material CODEs
CODE Description
1 Flake cast iron (FCI)
2 Ferritic cast iron with compacted graphite (FCICG)
3 Pearlitic cast iron with compacted graphite (PCICG)
4 Bainitic cast iron with compacted graphite (BCICG)
5 Ferritic cast iron with spheroidal graphite (FCISG)
6 Ferrite/pearlite cast iron with spheroidal graphite (FPCISG)
7 Pearlitic cast iron with spheroidal graphite (PCISG)
8 Bainitic cast iron with spheroidal graphite (BCISG)
9 Cast steel with less than 0.2% carbon (CSL2C)
10 Normalized cast steel with 0.2-0.4% carbon (NCS24C)
11 Quenched &amp;amp; tempered cast steel with 0.2-0.4% carbon (QTCS24)
12 Normalized cast steel with 0.4-0.7% carbon (NCS47)
13 Plain carbon wrought steel with &amp;lt; 0.2% carbon (PCWS)
14 Hot rolled/normalized plain carbon wrought steel, 0.2-0.4% carbon (HNPCWS24)
15 Quenched &amp;amp; tempered cast steel with 0.4-0.7% carbon (QTCS47)
16 Quenched &amp;amp; tempered plain carbon wrought steel, 0.2-0.4% carbon (QTPCWS24)
17 Hot rolled/normalized plain carbon wrought steel, 0.4-0.7% carbon (HNPCWS47)
18 Quenched &amp;amp; tempered plain carbon wrought steel, 0.4-0.7% carbon (QTPCWS47)
19 Normalized low alloy wrought steel (NLAWS)
20 Quenched &amp;amp; tempered low alloy wrought steel (QTHSLAWS)
21 Normalized Ni/Cr/Mo wrought steel (NNCMWS)
22 Quenched &amp;amp; tempered Ni/Cr/Mo wrought steel (QTNCMWS)
23 Austenitic stainless steel (ASS)
24 Ferritic stainless steel (FSS)
25 Martensitic stainless steel (MSS)
26 Annealed plain carbon wrought steel, 0.2-0.4% carbon (APCWS24)
27 Annealed plain carbon wrought steel, 0.4-0.7% carbon (APCWS47)
28 Normalized carbon/manganese steel (MCMS)
29 Quenched and tempered carbon/manganese steel (QTCMS)
30 Hardened chromium steel (HCS)
31 Quenched and tempered chromium steel (QTCS)&lt;/p&gt;
&lt;p&gt;33 CHAPTER 2
Introduction to User Interface
Main Index
99 Steel of unknown heat treatment (STEEL)
100 Wrought aluminum ( WA)
101 Wrought aluminum- copper alloy (WACA)
102 Wrought aluminum- manganese alloy (WAMNA)
103 Wrought aluminum- magnesium alloy (WAMGA)
104 Wrought aluminum- magnesium-silicon alloy (WAMGSA)
105 Wrought aluminum- zinc alloy (WAZA)
106 Cast aluminum a lloy (CAA)
107 Wrought complex special purpose aluminum alloys (WCSPAA)
200 Wrought copper (WCU)
201 Wrought brass (WBR)
202 Wrought aluminium bronze (WABR)
203 Cupronickel (CUPNI)
204 Nickel silver (NIAG)
205 Wrought phosphor bronze (WPHBR)
206 Wrought copper beryllium (WCUBE)
207 Cast copper alloys (CCUA)
300 Titanium alloy (TA)
400 Wrought magnesium alloys (WMGA)
401 Cast magnesium alloys (CMGA)
500 Fusible alloys, solders (FUSSOL)
600 Cast zinc alloys (CZINCA)
700 Wrought nickel alloys (WNIA)
701 Cast nickel alloys (CNIA)
800 Precious metals (PRECMET)
900 Clad materials (CLADMAT)
1000 Thermoplastics (THERPLAS)
1001 Thermosetting plastics (TSETPLAS)Table 2-1  Table of Material CODEs  (continued)
CODE Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions34
Main Index
Table 2-2  Spot and Seam Weld Fatigue Analysis SN Curve Defaults
PropertyGeneric Nugget Spot
WeldGeneric Top/Bottom
Sheet Spot WeldGeneric Flexible
Seam Weld (r=1)Generic Stiff Seam
Weld (r=0)
CODE steel
&amp;lt;100alum
100-199steel
&amp;lt;100alum
100-199steel
&amp;lt;100alum
100-199steel
&amp;lt;100alum
100-199
UTS (MPa) *
*Both Spot Weld and Seam Weld fatigue analyses use structural stresses, which do not relate to
UTS. Corrections based on UTS do no apply to welds.4000 4000 4000 4000 1.8E4 4000 1.8E4 4000
YS (MPa) 355 150 355 150 Blank Blank Blank Blank
E (MPa) 2.1E5 7E4 2.1E5 7E4 2.1E5 7E4 2.1E5 7E4
SRI1 (MPa) 2100 2462 2900 2462 3.6E4 3140 1.8E4 1275
b1 -0.1667 -0.2 -0.1667 -0.2 -0.3333 -0.1734 -0.3333 -0.1625
Nc1 1E6 1E7 1E6 1E7 1E7 1E7 1E7 1E7
b2 -0.09091 -0.1111 -0.09091 -0.1111 -0.3333 -0.1734 -0.3333 -0.1625
SE 0.334 0.33 0.33 0.33 0.4 0.4 0.4 0.4
RR 0.0 0.0 0.0 0.0 -1.0 -1.0 -1.0 -1.0
Nfc 1E30 1E30 1E30 1E30 1E30 1E30 1E30 1E30
MSS 0.1 0.2 0.1 0.2 Blank Blank Blank Blank
M1 Blank Blank Blank Blank Blank Blank Blank Blank
M2 -0.1 -0.2 -0.1 -0.2 -0.25 -0.25 -0.25 -0.25
M3 -0.1 -0.2 -0.1 -0.2 -0.1 Blank -0.1 Blank
M4 Blank Blank Blank Blank -0.1 Blank -0.1 Blank
BTHRESH Blank Blank Blank Blank Blank Blank Blank Blank
RTHICK Blank Blank Blank Blank 1 (mm) 1 (mm) 1 (mm) 1 (mm)
nTHICK Blank Blank Blank Blank 0.16667 0.16667 0.16667 0.16667&lt;/p&gt;
&lt;p&gt;35 CHAPTER 2
Introduction to User Interface
Main Index
Table 2-3  Steel Scale Factor, Diameter &amp;amp; Thickness Exponent Defaults
for Fatigue Analysis of Spot Welds
Table 2-4  Aluminum Scale Factor, Diameter &amp;amp; Thickness Exponent Defaults
for Fatigue Analysis of Spot WeldsSteel
(CODE &amp;lt; 100) Scale Factor Diameter Exponent Thickness Exponent
FX,FY SF-FXY = 1.0 DE-FXY = 0.0 TE-FXY = 0.0
MX,MY SF-MXY = 0.6 DE-MXY = 0.0 TE-MXY = 0.5
FZ SF-FZ = 0.6 DE-FZ = 0.0 TE-FZ = 0.5
MZ SF-MZ = 0.0 DE-MZ = 0.0 TE-MZ = 0.0
Aluminum
(100 CODE 200) Scale Factor Diameter Exponent Thickness Exponent
FX,FY SF-FXY = 0.4 DE-FXY = 0.5 TE-FXY = -0.25
MX,MY SF-MXY = 0.4 DE-MXY = 0.5 TE-MXY = -0.25
FZ SF-FZ = 1.0 DE-FZ = 0.0 TE-FZ = 1.0
MZ SF-MZ = 0.0 DE-MZ = 0.0 TE-MZ = 0.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions36
Main Index
Defines fatigue properties of elements.
Format:
Example :
This example shows that PFTG  ID defines the elements associated with it (called out by the FTGDEF  entry)
to have a polished surface finish and for the associated stresses to be scaled by a factor of 1.2 .PFTG Fatigue Properties
1 2 3 4 5 6 7 8 9 10
PFTG ID  FINISH KFINISH KF SCALE OFFSET
KTREAT DIAM T1 T2 SPTFLG&lt;br&gt;
PTFG 3.0 POLISH 1.2
Field Contents
ID Unique ID referenced by a FTGDEF  bulk data entry. (Integer&amp;gt;0)
FINISH Material Surface Finish.  This is a result of manufacturing process.  Value can be NONE,
POLISH, GROUND, MACHINE, POOR, ROLLED, CAST, KROUGH, KSURFC
(Character; Default=NONE). See Remark 1.
KFINISH Roughness factor for FINISH = KROUGH (0.0 &amp;lt; Real &amp;lt; 1.0, no Default).
Surface roughness in microns for FINISH = KSURFC (Real &amp;gt; 0.0; no Default; 0.0  Real
 for materials not listed in Remark 2.).
KF Fatigue strength reduction factor. (Real  0.0, Default=1.0).  See Remark 3.
SCALE Factor used to scale the resulting FE stresses of entities associated to this property set (Real;
Default=1.0).
OFFSET Offset used to offset the resulting FE stresses of entities associated to this property set (Real;
Default=0.0).
KTREAT T reatment factor (Real  0.0; Default = 1.0).&lt;br&gt;
DIAM Spot weld nugget diameter. Used in the fatigue analysis of spot welds only. (Real &amp;gt; 0.0 or
blank, No Default). See Remark 4. and 5.
T1/T2 T op (T1) and bottom (T2) thickness of shells connecting spot welds. Used in the fatigue
analysis of spot welds only. (Real &amp;gt; 0.0 or blank, No Default). Both should be left blank if
either one is left blank. See Remark 4.
SPTFLG Flag to indicate that a lookup table is to be used to define the spot weld nugget diameter. 0
or 1, Default = 0, no lookup). Only used if CWELD elements are used to define spot welds.
See Remark 5.&lt;/p&gt;
&lt;p&gt;37 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.The KF field can be used in lieu of or in addition to the FINISH &amp;amp; KTREAT field to modify the
fatigue limit by multiplying the original fatigue limit by this value.   POOR = Poor Machined.
ROLLED = As Rolled. CAST = As Cast. KROUGH and KSURFC require that a KFINISH be
entered. A material CODE on the MATFTG entry must be supplied to use anything other than
NONE or POLISH, otherwise an error is issued.
2.If KFINISH = KSURFC, the user should enter a value for surface roughness Rz in m. This is the
average surface roughness according to the German standard DIN 4768. The Surface Roughness
Factor Kr will then be calculated based on the strength and type of material (for example stronger
materials are in general more sensitive to surface finish, and cast materials less so). The method for
calculating Kr is taken from the FKM guideline Analytical Strength Assessment of Components in
Mechanical Engineering .
If Rz &amp;lt;= 1m, Kr = 1.
Otherwise:
Kr = 1-ar log (Rz) log(2Rm/Rm,N,min )
Rm is the UTS in MPa
Rm,N,min  and ar are constants.
3.Fatigue strength reduction factor can take into a ccount notch effects, size effects, and loading type
influence.   where the latter three are correction factors for each
effect, respectively .
4.If T1, T2, and DIAM are specifically supplied, they are used directly in the fatigue analysis of spot
welds. If either T1 or T2 are blank, the thicknesses are automatically determined from the PSHELL
entries that connect the spot welds. Table 2-5  Constants for Derivation of Surface Roughness Factor Kr from Roughness Rz
Material Steel GS*
&lt;em&gt;GS = cast steel and heat treatable cast steel, for general purposeGGG†
†GG = cast iron with lamellar graphite (grey cast iron)GT‡
‡GGG = nodular cast ironGG&lt;/em&gt;*
**GT = malleable cast ironWrought
Al AlloysCast Al
alloys
CODE from
MATFTG13,15,16-
999-12,
155-8 2-4 1 100-105 106
ar 0.22 0.20 0.16 0.12 0.06 0.22 0.20
Rm,N,min 400 400 400 350 100 133 133
KfCnotchCsizeCloading =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Element Definitions38
Main Index
When performing optimization using SOL 200, it is necessary to leave T1 and T2 blank if the
connecting shell thicknesses are being used as design variable, otherwise the fatigue analysis of the spot
welds will not use correct thicknesses from one design cycle to another.
5.If DIAM is left blank, the following rule is used:
•The diameter is derived based on the minimum thickness of the two sheets either side of the weld
by performing a lookup on a table. An example table is provided in the spotweld.sys  file in the
msc20xx/util  directory of a standard MSC Nastran installation. This is true for element types
CBAR/CBEAM and CHEXA used to define spot welds. If using CWELD elements the diameter
is automatically extracted from the PWELD entry, if SPTFLG=0. If SPTFLG=1, then the lookup
table is used for CWELDs. The spotweld.sys  file is specified by including the
spotweld=&lt;!-- raw HTML omitted --&gt;/spotweld.sys  on the Nastran command line or defining it in the Nastran
RC file as is done with other keywords. See Executing MSC Nastran . If not specified, the default table
is used as given in the example file mentioned.
In the case of a table lookup to determine DIAM, the thicknesses of the top and bottom sheets must
be within the range of the lookup table, which is up to 3mm by default. Otherwise a fatal error is
issued. Also the diameter is set as a function of the thickness of the thinnest sheet joined by the spot
weld. No interpolat ion b etween the data points in the spotweld.sys  file is done; rather, the
thickness of the thinnest sheet from each spot weld is compared to the table, and the value of thickness
that is nearest to but less than or equal to the thickness of the sheet is identified. The corresponding
diameter from the table is assigned to that spot weld.
Example spotweld.sys  file:
SPOT WELD DEFINITION FILE
NUGGET_DIAMETER=BY_THICKNESS
0.3,3.5
0.8,4.0
1.2,5.0
2.0,5.5
3.0,6.0
Note that there may be rounding errors in the extraction of sheet thicknesses, so when defining a
spotweld.sys  file, it may be a good idea to reduce the sheet thickness values by a small tolerance in
order to avoid anomalous results
Table 2-6  Availability of Settings for Different Analysis Types
Fatigue
PropertyAnalysis / Material Type Category
SN EN SpotWeld SeamWeld
FINISH    
KFINISH  †
KF  †
SCALE    
OFFSET    
SHAPE &lt;/p&gt;
&lt;p&gt;39 CHAPTER 2
Introduction to User Interface
Main Index
Available ; † Not available for Multi-mean or Multi R-ratio curvesKTREAT  †
DIAM 
T1/T2 
SPTFLG Table 2-6  Availability of Settings for Different Analysis Types
Fatigue
PropertyAnalysis / Material Type Category
SN EN SpotWeld SeamWeld&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters40
Main Index
Fatigue Parameters
Fatigue parameters are defined with the entry described below. The main use of this entry is to specify the
type of fatigue analysis (S-N or -N), but many other parameters may be set using this entry. Most of these
are explained in the tutorials that follow in subsequent chapters.
Defines parameters for a fatigue analysis in time domain SOLs 101, 103, and 112.
Format:
Examples:
Defines a strain-life ( -N) analysis with all other parameters defaulted .
Specifies a stress-life (SN) analysis with STRESSes to be passed to the fatigue analysis and to convert the stress
tensor to a signed von Mises (SGVON) scalar value and to perform no mean stress correction (NONE). Also
fatigue life is to be determined from nodal averaged stresses (NODA) based on the CUBIC method of stress
recovery .
Specifies a parameters for fatigue analysis of seam welds using the FKM mean stress correction method and
not to apply a thickness correction .FTGPARM Fatigue Param eters&lt;br&gt;
1 2 3 4 5 6 7 8 9 10
FTGPARM ID TYPE FACTOR NTHRD LOGLVL LAYER&lt;br&gt;
&amp;ldquo;STRESS&amp;rdquo;
or
“STRAIN”COMB CORR PLAST LOC INTERP RECOVER SRESOLVE
NANGLE
“RAINFLOW” RTYPE
&amp;ldquo;CERTNTY&amp;rdquo; SURV
&amp;ldquo;FOS&amp;rdquo; OPTION LIFE BACKACC MAXFAC MINFAC
“SPOTW” COMB CORR NANGLE SWLOC MIDDLE TORSION
“SEAMW” COMB CORR THICK LOCSM RESENT
“MULTI” MMTHD NONLWR NONUPR BIAXLWR BIAXMID BIAXUPR ZERO
GA TE
“NA VG” MTHD OUTPUT NORMAL
FTGPARM 22 EN
FTGPARM 22 SN
STRESS SGVON NONE NODA CUBIC
FTGPARM 22 SN
SEAMW FKM 0&lt;/p&gt;
&lt;p&gt;41 CHAPTER 2
Introduction to User Interface
Main Index
Specifies parameters for fatigue analysis of spot welds using the standard stress combination method,
SIMLPE mean stress correction method , and to compute results at 18 different angles around the weld
nugget and report at all locations with no middle sheet processing or torsion calculations .FTGPARM 22 SN
SPOTW STNDRD SIMPLE 18 3 0 0
Field Contents
ID Unique ID of the FTGPARM  entry  called out by a FATIGUE case control
(Integer &amp;gt; 0).  See Remark 1.
TYPE Type of fatigue analysis: &amp;ldquo;SN&amp;rdquo; or &amp;ldquo;EN&amp;rdquo; (Character, Default=SN).
FACTOR Global scale factor to be applied to combined resultant stress output (Real &amp;gt; 0.0,
Default=1.0).
NTHRD Number of threads to use for parallel processing for this fatigue analysis (Integer  0;
Default = Blank). Blank denotes that the number of threads used is based on SMP
setting and the existence of an SMP license. Zero (0) is used as a flag to tell the code
to use all available threads. Otherwise the number of threads designated is used if
available. An SMP license is only necessary to take advantage of multiple treads if left
blank.
LOGLVL Level of messaging sent to the log file (Integer 0, Default = 0; 0=None, 1=Error,
2=Info, 3=Low, 4=Medium, 5=High). Note that LOGLVL &amp;gt; 0 can result in a
significant performance penalty and should be used for debugging purposes only.&lt;br&gt;
LOGLVL=5 produces an HDF5 file that shows all parameter settings. This file can be
significantly large.
LAYER For shell elements, the output results layer to print to the f06 file. Values can be
0=Worst, 1=Top(Z2), 2=Bottom(Z1). (Integer, Default = 0). This is for printed
output only. The analysis produces results for both layers, which are always available
through the HDF5,  Output2, or other files for graphical postprocessors. See the
FATIGUE  case control entry.
&amp;ldquo;STRESS&amp;rdquo; Flag indicating that stress is used in the fatigue calculation. See Remark 2.
“STRAIN” Flag indicating that strain is used in the fatigue calculation. Not valid for TYPE = SN.
See Remark 2.
COMB Stress/strain combination to use in the fatigue analysis. Acceptable values are listed in
Table 2-7 after the Remarks below (Character; Default=ABSMAXPR).
CORR Mean stress correction to use in the fatigue analysis.  Acceptable values are listed in
Table 2-8 and Table 2-9 after the Remarks below (Character; Default=None  or
MMPDS if MMPDS fatigue material model is specified on the MATFTG entry) .
PLAS T Plasticity correction for TYPE = EN. Value can currenlty only be &amp;ldquo;NEUBER &amp;quot; for the
Neuber  method  (Character; Default=NEUBER). See Remark 3.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters42
Main Index
LOC Location to report fatigue lives. Valid values are &amp;ldquo;NODA ”, “NODE”, or “ELEM”
based on nodal averaged, element nodal, or element centroid stresses or strains,
respectively. (Character; Default = NODA). See the RECOVER field and Remark 4.
Also see the “NAVG” field and parameters.
INTERP Interpolation limit for multi-curve mean stress correction method (Integer 0; 0=Use
Max Curve, 1=Extrapolate; Default = 0).
RECOVER Stress recovery method to determine stresses/strains for the fatigue calculation. Valid
values are “SGAGE”, “CORNER”, “BILIN”, “CUBIC” or &amp;ldquo;CENTER&amp;rdquo; (Character;
Default = CORNER if LOC=NODA or NODE; Default = CENTER if
LOC=ELEM and any other setting is ignored). These are the same values used for the
STRESS (or STRAIN) case control output request. See LOC field and R emark 4.
SRESOLVE Request for surface resolved, 2D stress state. Used only for 3D solid elements.
(Character YES or NO (default = NO). See Remark 5.
NANGLE The number of calculation angles for 2D critical plane analysis (COMB=CRITICAL)
(1≤Integer≤360; Default = 36, i.e. every 10 degrees). Practical values are 360, 180,
120, 90, 72, 60, 45, 40, 36, 30, 24, 18, 15, 12, 10, 9, 8, 6, 5, 4 for every 1, 2, 3, 4, 5,
6, 8, 9, 10, 12, 15, 20, 24, 30, 36, 40, 45, 60, 72, 90 degrees, respectively. The more
angles computed, the more compute intensive is the analysis . In actuality, only half the
angles are computed since the principals are the same 180 degrees opposite any
computed angle.
“RAINFLOW” Flag indicating that parameters that follow define rainflow cycle counting parameters
for rainflow data reduction. See Remark 6.
RTYPE Method of rainflow data reduction (Time History Compression). Value can only be
&amp;ldquo;LOAD&amp;rdquo; for load time history data reduction on each load time history (Character;
no default). See Remark 6.
&amp;ldquo;CERTNTY&amp;rdquo; Flag indicating that the parameter that follows defines the certainty of survival in
fatigue analysis.
SURV Certainty of survival based on the scatter in the S-N or -N curves. (0.1  Real  99.9;
Default = 50.0).  See Remark 7.
&amp;ldquo;FOS&amp;rdquo; Flag indicating that parameters that follow are used in a factor of safety analysis. The
presence of this flag triggers a factor of safety analysis.  See Remark 8. and 13. Not
applicable to Spot Weld fatigue analysis.
OPTION Supported option is LIFE, requesting a life-based factor of safety analysis or NONE.
(Character; default = LIFE).
LIFE The targeted design life given in user defined life units (such as laps, miles, etc.) as
defined by “UNITS” line on FTGSEQ  or FTGLOAD  entry, or Repeats of the cyclic
loading if no “UNITS” line exists (Real &amp;gt; 0, no default).Field Contents&lt;/p&gt;
&lt;p&gt;43 CHAPTER 2
Introduction to User Interface
Main Index
BACKACC The back calculation accuracy used to control back calculation iterations that
determine the scale factor on the applied stress level to achieve the target design life.
Defined as a percentage error on the target design life. (0.01  Real 100.0, Default
= 1.0).
MAXFAC The maximum safety factor to calculate and report.  When this threshold is exceeded,
the analysis will go on to the next element and report the maximum for the exceeded
element (2.0  Real  5.e6, Default = 5.0).
MINFAC The minimum safety factor to calculate and report. If the result is below this
threshold, the analysis will report MINFAC as the safety factor for this element and
go on to process the next element. (0.0&amp;lt;Real£0.5, Default = 0.2). If zero (0) is entered,
it is treated as the default of 0.2.
&amp;ldquo;SPOTW&amp;rdquo; Flag indicating that parameters for fatigue analysis of spot welds are to follow. See
Remark 9.
COMB Stress combination to use in the fatigue analysis. Acceptable values are listed in
Table 2-7 after the Remarks below (Character; Default=STNDRD, which is basically
a critical plane analysis).
CORR Mean stress correction to use in the fatigue analysis of spot welds. Only NONE , FKM,&lt;br&gt;
or SIMPLE are valid for fatigue analysis of spot welds. See Table 2-8 and Table 2-9
below. (Character; Default = NONE).
NANGLE The number of calculation angles in 360 degrees around the spot weld.
(10Integer360; Default = 18, i.e., every 20 degrees)
SWLOC Location on the spot welds to report fatigue life. Zero (0) reports worst case angle and
location (top/bottom sheet or nugget); one (1) reports worst case angle for each
location; two (2) reports worst case location for each angle; three (3) reports all
locations and angles. (Integer 0, 1, 2, or 3, Default=0).
MIDDLE Whether to process middle sheets if there are more than two sheets in the weld.
(Integer 0 or 1, Default = 0 - do not process middle sheets). See Remark 11.
TORSION Whether to calculate torsion in the spot weld. (Integer 0 or 1, Default = 0 - do not
calculate torsion). See Remark 12.
&amp;ldquo;SEAMW&amp;rdquo; Flag indicating that parameters for fatigue analysis of seam welds are to follow. See
Remark 9.
COMB Stress/strain combination to use in the fatigue analysis of seam welds. Only
ABSMAXPR and CRITICAL are supported. See Table 2-7 below. (Character; Default
= ABSMAXPR).
CORR Mean stress correction to use in the fatigue analysis of seam welds. Only NONE or
FKM are valid for fatigue analysis of seam welds. See Table 2-8 and Table 2-9 below.
(Character; Default=NONE).
THICK Thickness correction to be applied. (Integer 0 or 1; Default =0 - no correction)Field Contents&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters44
Main Index
LOCSM Location on seam weld to report life. Valid values are &amp;ldquo;NODE”, “SGAGE”,
“CORNER”, “BILIN”, or “CUBIC” (Character; Default = NODE). If “STRESS”
line is also include, LOCSM must be the same as LOC/RECOVER combination
(that is, if SGAGE is used here, it must be used there also). LOC=ELEM and
LOC=NODA are n ot valid for fatigue analysis of seam welds and cannot be mixed
with LOC = NODE. See Remark 4.
RESENT Result entity type used in the fatigue analysis of seam welds; only STRESS is currently
supported. (Character; Default = STRESS).
&amp;ldquo;MULTI&amp;rdquo; Flag indicating that parameters for biaxial/multiaxial assessment are to follow. See
Remark 10. and 13.
MMTHD Can be set to the following:
NONE = No multiaxial assessment is done.
SIMPLE = Calculates simple biaxiality ratios only.
STANDard =Standard method of assessment, which merely returns the
results of the assessment .
AUTO = Performs the standard method, but then may recalculate fatigue
damage depending on the results of the assessment. Currently valid for S-N
analysis only.
&amp;ldquo;NAVG&amp;rdquo; Flag indicating that parameters for nodal (grid point) stress (or strain) averaging are to
follow. The LOC field must be set to NODA, otherwise this line is ignored. These
parameters are the same as those specified in the SURFACE and VOLUME case
control for requesting grid point stresses/strains and the user is referred to the
OUTPUT(POST) section for more details. All defaults are used if this line is omitted.
See Remark 14.
MTHD Method to calculate average grid point stresses/strains:
TOPO = Topological method (default)
GEOM = Geometric method.Field Contents&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P30</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_030/</guid>
      <description>
        
        
        &lt;p&gt;565 APPENDIX C
Utilities
Main Index
Advanced Fatigue Utilities
Various advanced modules are available as single location fatigue analyzers and/or for display of fatigue
damage and cycles information.
Single Location S-N Analysis - (M SLF)
The MSLF program models fatigue life to predict durability based on SN-curves derived from constant
amplitude test results for specimens or components. In this way, failure can be predicted in a total life sense
for any component subject to any variable amplitude or service measured time history using the Miner Rule
of linear damage calculation. In MSLF , a single fatigue life answer is not the end point, only the beginning
of potentially very many “what if” and sensitivity studies using multiple input parameters and back
calculations with varying scale factor, mean stress offset, % certainty of survival, stress concentration factor,
size effect, surface finish and surface treatment.
MSLF is very similar to MCLF . The difference between MSLF and MCLF is that MSLF requires stress
response information and MCLF requires strain responses. MSLF begins with a stress response (in the form
of a .dac file and could be from measurement data) and is a single location analyzer.
MSLF can be used when considering the fatigue performance of:
Welds and other structures which may contain cracks or crack- like defects.
Machined components
Forgings
Castings&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities566
Main Index
Pressings
Non-metals; e.g. plastics, composites etc.
MSLF , can be used for:
Durability assessments in the design/test loop to avoid costly and time consuming prototype repeat
testing
Durability Optimization by “what if studies” to achieve better fatigue solutions (loading, material,
surface condition, local geometry)
Failure analysis by mimicking the failure and providing substantiated remedial solutions
Optimization of inspection and maintenance scheduling by fatigue assessments and updates
Computer simulation prior to structural testing to optimize test programs from a fatigue content
perspective and to optimize time, budget and testing resources
Optimization of materials selection and manufacturing process routes (casting, forging, machining,
shot peening) from a fatigue durability viewpoint.
Kt values can be determined within Time Correlated Damage - (MTCD), 604  and passed into MSLF as default
selections. MSLF also supports the calculation of Kf values from Kt. A full range of postprocessing and results
display options are available in MSLF . Other features of MSLF are similar to the other fatigue analyzers in
the system and only those items unique to MSLF are expounded on here.
Module Operation
The MSLF module can be run in one of the following modes:
In stand alone mode by invoking mslf at the system prompt as explained in Configuration, 328 .
By incorporating the  MSLF commands in a batch operation.
Once running in interactive mode, the MSLF module displays the following screen:
Figure 3-112  The First MSLF Screen
The user must enter the name of an Input Job File, which have . fjb extensions. If the name of an existing
Job File is entered then MSLF will go to the postprocessing. If a new job is specified then its parameters have
to be entered in a series of screens. If no name is entered then the results of processing may NOT be saved.
The flow chart below illustrates the major routes through MSLF .&lt;/p&gt;
&lt;p&gt;567 APPENDIX C
Utilities
Main Index
Figure 3-113   The General Module Structure (MSLF)
The Loading Environment
This input for MSLF is identical to that of MCLF with the exception of a few items that MSLF does not
need. See Service Loading Environment, 577 .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities568
Main Index
Three types of loading file can be specified:
Time History  which normally means a single parameter . dac time history or . pvx peak valley file.
This can be a measured time history.
Range Mean Matrix  which normally means a rainflow matrix file with a . cyh extension.
Constant Amplitude  which requires the user to enter individual values of Amplitude and Mean
Value.
For all file types the data should preferably be in units of Microstrain (uE). If they are NOT then a calibration
file that contains the appropriate conversion factors should be supplied.
Model Parameters
All input on this page is identical to that required for a global FE fatigue analysis. See Model Parameters, 581 .
Nominal S-N curves can be either structure, component, or specimen based. One of the three analysis
methods must be chosen. Briefly they are:
Material S-N  which are S-N curves generated from the elastic part of the strain controlled fatigue
tests or S-N curves for which Kt = 1.0
Component S-N  which are generated directly from stress based fatigue tests on components and the
associated Kt &amp;gt; 1.0.
BS7608  which are S-N curves designed to be used as part of BS7608 part 10 analysis of welded
structures.
It is important to maintain consistency between the analysis methods selected here and the S-N datasets
chosen in the next screen.
Material Data Input
All input on this page is identical to that required for a global FE fatigue analysis. See Material Data Input, 581 .
Note that using Material Management  (Ch. 4), can approximate S-N damage curves and can be generated purely
on the basis of ultimate tensile strength (UTS). The curves are constructed by fixing the stress axis intercept,
1 cycle, at the value of the UTS, fixing the stresses at 1000 cycles and the endurance limit according to the
fractions of UTS detailed below:
Alloy Type Cycles Stress
Ferrous Alloys 1 1.000 x UTS
1,000 0.900 x UTS
1,000,000 0.357 x UTS
Titanium Alloys 1 1.000 x UTS
1,000 0.800 x UTS
1,000,000 0.307 x UTS
Aluminum Alloys 1 1.000 x UTS
1,000 0.700 x UTS&lt;/p&gt;
&lt;p&gt;569 APPENDIX C
Utilities
Main Index
Geometry Screen
All input on this page is identical to that required for a MCLF . See Geometry Screen, 582 .
A brief discussion of Notch Correction Factors Kf from Kt:
If Kf is not known then it can be calculated from a user supplied Kt value. MSLF that takes material
properties, notch radius, and notch depth into account, and uses hard coded lookup tables, to calculate Kf.
The user-defined Kf value is used to modify the S-N curve at the transition life’NC1’ by dividing the stress
by Kf. The S-N curve is also modified at N=1E3 by dividing by Kf’, which is determined from a hard coded
Figure 3-114 below, which is taken from R C Juvenall’s paper, ’Engineering Considerations of Stress, Strain,
and Strength’ McGraw Hill, 1967.
Figure 3-114  Relationship Between K’f and Kf as a Function of Ultimate Strength
The above figure illustrates the relationship between (Kf’)/(Kf-1) and the UTS of the material at N=1E3. If
the user defines a Kt value and the software calculates Kf, the software makes exactly the same adjustment at
the transition life. At 1E3 all corrections made to the S-N curve are based on the fatigue notch factor Kf. The
second slope is not changed at all - only the intercept is changed to make the transition life the same.500,000,000 0.258 x UTS
Other Alloys 1 1.000 x UTS
1,000 0.800 x UTS
100,000,000 0.274 x UTSAlloy Type Cycles Stress&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities570
Main Index
Results Setup Screen
This setup is also virtually identical to that of MCLF . See Output Setup Screen, 583 .
MSLF can generate a number of different output files depending on the analysis path chosen. If a multiple
analysis has been specified in any of the input screens, then a single file, with the results name provided, with
any one of the following file extensions, depending on the multiple parameter, will be created.
All these files have the standard X-Y paired data format and can be displayed graphically within MSLF itself
or by the X-Y parameter display module, MTPD. No other output files will be created.
If, on the other hand, a single shot analysis has been carried out then MSLF can optionally create a group of
files which contain different information, have the same results name and the following file extensions.
All these files may be displayed graphically from with MSLF .
Like MCLF these files, numerical results are also written to the extra details area of the damage matrix file,
.dhh extension. See Environment Keywords, 587 .
The Postprocessing Menu
See the The Postprocessing Menu, 586  postprocessing menu. Operations are identical.
Batch Ope ration
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if
it is omitted and an output file with the specified name already exists, batch operation will cease.
When batch processing with a series of different input files, it is necessary to use a new batch line and option
definition for each new input. The new line must specify the option from the postprocessing menu into
which the new input will go. For example, when using the jobfile fatjob.fjb :
mslf /job=fatjob.fjb/inp=datafil1.dac/opt=l
mslf /job=fatjob.fjb/inp=datafil2.dac/opt=l/opt=g/kf=2.0
mslf /job=fatjob.fjb/inp=datafil3.dac/opt=l/kf=2.5/opt=g
Which will run MSLF three times with a different strain history file each time. Omitting the /OPT keywords
will cause the batch file to fail because inputs without the /OPT=L keyword the . dac files cannot be loaded .fal  Scale factor vs. Life
.gal Hysteresis gate vs. Life
.ofl Offset vs. Life
.kfl Kf vs. Life
.ktl Kt vs. Life
.dcl Survival probability vs. Life
.cyo Rainflow matrix suitable for input to MCDA or MP3D
.dhh Damage matrix suitable for input to MCDA  or MP3D&lt;br&gt;
.slf List of fatigue cycles and associated damage suitable for input to MCDA.&lt;/p&gt;
&lt;p&gt;571 APPENDIX C
Utilities
Main Index
and will therefore be ignored (the values in fatjob.fjb  will be used instead). Each run of MSLF with a
new input for the fatigue job needs a new batch line.
Note that it is permissible to input more than one parameter on a batch line, but they must be different. Note
also that the order in which the batch keywords appear is not critical. Also all notes associated with MCLF
batch operation also apply to MSLF operation. Batch keyword for MSLF:
/OPTion Back page option, e.g. /OPT=M, to input a new Model parameter. Also
L,S,G,O,D,J,P ,C,R,X
/INPut The name of the input data file. /INP=INDATA
Needs /OPT=L if a new file is to be loaded into a job already created.
/FACT The required scaling factor(s). /FACT=2.5
/DCrit The %certainty of survival. /DC=50
/ANAL The required analytical procedure, M, C, or B.
/MSC Mean stress correction method, N=None, G=Goodman, B=gerBer, All
/ANAL The analysis method: Material s-n, Component s-n, or Bs5400. /ANAL=B
/UTS The Ultimate Tensile Strength of the material. /UTS=675
/GATE The required hysteresis gate. /GATE=500
/LIFe /LIF=10000
If BACK has been specified for this keyword then /FA= specifies the required life.
/SNC The name of the material data set to use. /SNC=SNDATA
/EDIT Specifier to edit a material parameter prior to analysis. /EDIT=SRI=10075.
This keyword can be used any number of times.
/OUT The name of the output results file. //OUT=RESULT
/OVer Whether to overwrite an existing results file. /OV=Y
/PL T Request a hardcopy plot of factors or design criterion vs. life plot. /PLT
/PL TNAM The name to assign to the required plot file. /PLTNAM=MYPLOT
/TYPE Loading type is; T=Time, R=Range-mean, or C=Constant temp. /TYPE=R
/CALFIL Calibration file; N=No, ASCII, or B=Binary. /CALFIL=B
/UNIT MPa, KSI, uE. /UNIT=MPA
/AMP Amplitude(s). /AMP=
/MEAN Mean(s). /MEAN=
/STA Start time. /STA=10
/END End time. /END=100
/CALNAM Calibration file name. /CALNAM=test
/LUNI Loading units from cal file. /LUNI=MPA
/OFF Offset. /OFF&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities572
Main Index
/NUMEQU Number of equivalent units. /NUMEQU=34
/EQUNIT Equivalent units string. /EQUNIT=
/DESign The design criteria. /DES=
/MINERs Miner&amp;rsquo;s value. /MINER=1.5
/JOB Jobname. /JOB=Newjob
/CREate Create new job Y/N. /CRE=Y
/MATENT ry Material entry method. /MATENT=
/SNDATa S-N data set name. /SNDAT=Fred
/SURFace Surface finish, PO,GR,GO,POO,AM,HO,F ,C,WC,SC,UD. /SURF=GR
/TREAT ments Surface treatments, NONE,NITRIDED, COLD ROLLED, HOT PEENED, AL.
/TREAT=Nitrided
/CLASS Weld class. /CLASS
/WELDED Welded yes/no. /WELDED=Y
/THICKness The thickness of the weld. /THICK=20
/WCORRosion Correct for corrosion Yes or No. /WCORR=Y
/YModulous Young,s modulus. /YM=3E3
/N1 The first S-N entry point. /N1=
/S1 The stress amplitude at S1. /S1=
/N2 2nd S-N entry point. /N2=
/S2 Stress amplitude at S2. /S2=
/SLOPE Slope after N2. /SLOPE=
/SERR Standard error at log(x). /SERR=
/RATIO R-ratio at test. /RATIO=
/GENTYP Type of material generated. /GENTYP=
/SRI1 Intercept on Y-axis of S-N plot for edit option (see fig 7). /SRI1=
/B1 First slope for, edit option. /B1=
/NC1 T ransition life, edit option. /NC1=
/B2 Second slope, edit option. /B2=
/KT Kt value(s). /KT=
/ADDKF Additional Kf values. /ADDKF=
/HTYPE Histogram type, None, Input units. /HTYPE=
/CYC Cycles file, Y/N. /CYC=
/SIZE Histogram size. /SIZE=
/LIMits Limits are User or Auto. /LIM=&lt;/p&gt;
&lt;p&gt;573 APPENDIX C
Utilities
Main Index
/DAMUNI Damage units A, P , N. /DAMUNI=
/XYFIL Create and X-Y file of multiple results Y=yes or N=no. /XYFIL=
/DAMage Damage histogram file Y/N. /DAM=
/RMIN Histogram file limit. /RMIN=
/RMAX Histogram file limit. /RMAX=
/MMIN Histogram file limit. /MMIN=
/MMAX Histogram file limit. /MMAX=
/PRFOPT Preference option, M,B,U. /PRFOPT=
/UNIOPT Material units setting, MP ,P ,K,N,MN. /UNIOPT=
/TOLERance Back life tolerance. /TOLER=
/MATCHK Material checking. /MATCHK=
/NEWJOB Job name to save as. /NEWJOB=
/JOBOPT Start another job or &amp;lsquo;save as&amp;rsquo; (see NEWJOB)
/AUTOVer Auto overwrite preference Yes/No. /AUTOV=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities574
Main Index
Single Location -N Analysis - ( MCLF)
Local (single location) stress-strain fatigue analysis is used to estimate the number of cycles required to initiate
an engineering crack. Similitude between the material at a critical location, such as a notch, and the material
in a smooth specimen, subjected to similar loading conditions, is assumed. MCLF uses this methodology to
predict the presence of engineering cracks of about 2 mm length.
Each calculation session is associated with a fatigue job file which contains details of all the parameters
required for an analysis; in this way a set of default fatigue environments can be defined. For complex jobs,
the fatigue job file is particularly useful since it obviates the need to re-enter parameters from one session to
the next unnecessarily. Multiple and “back” calculations are performed quickly and easily and provide
convenient X-Y type plots of life variation.
Analysis proceeds by tracking local stress and strain, identifying fatigue cycles by means of rainflow cycle
counting, correcting for the effects of geometry, surface finish and treatment and estimating partial damage.
Finally, total damage is calculated by linear damage summation.
Module Oper ation
The MCLF module can be run in one of the following modes:
In stand alone mode by invoking mclf at the system prompt as explained in Configuration, 328 .
By incorporating the  MCLF commands in a batch operation.
The first mode is interactive. Once running in interactive mode the MCLF module displays the following
screen.&lt;/p&gt;
&lt;p&gt;575 APPENDIX C
Utilities
Main Index
Figure 3-115   The First MCLF Screen
The user must enter the name of an Input Job File, the extension . fbj will be appended automatically. If the
name of an existing Job File is entered then MCLF will go to the postprocessing menu screen straight away.
If a new job is specified then its parameters have to be entered in a series of windows. A name is not required
to continue but the results of processing may not be saved.
The flow chart below illustrates the major routes through MCLF .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities576
Main Index
Figure 3-116   The General Module Structure (MCLF)
The following input is necessary to define a fatigue job:&lt;/p&gt;
&lt;p&gt;577 APPENDIX C
Utilities
Main Index
Service Loading Environment
Option Description
Loading One of the main inputs for a fatigue life estimation is the file that describes the
loading environment to which the component or assembly is to be subject. Three
types of loading file can be specified:
Time History  which normally means a single parameter . dac time history or . pvx
peak valley file. This can be a measured strain time history or a strain time history e
Range Mean Matrix  which normally means a rainflow matrix file with a . cyh
extension.
Constant Amplitude  which requires the user to enter individual values of
Amplitude and Mean Value.
For all file types the data should preferably be in units of Microstrain (uE). If they
are NOT then a calibration file that contains the appropriate conversion factors
should be supplied.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities578
Main Index
Calibration File Any other system of units such as those associated with load or force etc., can also
be used provided that the appropriate conversion function is supplied by means of
a calibration file.
Calibration files have a ASCII format. A calibration file must have the following
structure: Input on X and output on Y, where output must be in the default internal
units,i.e. microstrain, and input can be any user unit. The data pairs must be
entered X (input) followed by Y (output), with one pair per line. A space is a
sufficient delimiter between X and Y values.
The calibration should increase monotonically from the smallest values to the
largest. If necessary MCLF will linearly extrapolate beyond the ends of the
calibration. Internally, MCLF interpolates between specified values.
The units of both the input and output should be specified. In the case of an ASCII
file, these units are defined through the use two comment lines (lines preceded by
the # character) at the beginning of the file, e.g.
#input=Newtons
#output=MICROSTRAIN
-1000 -100
0 10
1000 150
In this case input in Newtons is related to output units of microstrain. As a guide
note that:
Microstrain = absolute strain x 1E6
Microstrain = per cent strain x 1E4
Microstrain = per mil strain x 1E3Option Description&lt;/p&gt;
&lt;p&gt;579 APPENDIX C
Utilities
Main Index
Strain State Axial Loading: Typically, at the surface of a component, the stress normal to the
surface is zero and conditions of plane stress are said to prevail. Under these
circumstances (and if the maximum principal strain remains relatively stationary
throughout the loading sequence), it is appropriate to use uniaxial properties
directly.
Plane Strain Loading : If the component thickness is large relative to the notch root,
and transverse contraction is effectively prevented, then plane strain conditions
prevail. Typically, such conditions may be found on the surface of a thick-walled
cylinder, or very thick sections. The triaxial stress state, found in plane strain,
effectively alters the uniaxial cyclic stress-strain curve in the first principal direction.
This modified curve is obtained by noting that the transverse strain and the stress
normal to the notch surface are both zero and applying the Hencky plastic flow
laws. If no entries are found in the material data base, then in the correction
procedure an elastic Poisson&amp;rsquo;s ratio of 0.3 and a plastic ratio of 0.5 are assumed.
Shear Strain : Conditions of pure shear arise when the biaxiality ratio approaches -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A typical situation is of a shaft loaded in torsion. If the shear strain state is
selected, MCLF will expect the input loading to be in terms of a shear strain history
(usually the signed absolute maximum). Such histories are obtained through the use
of strain gauge rosettes together with the appropriate outputs from the stress-strain
analysis module, MSSA. The uniaxial material parameters will be automatically
adjusted to account for this strain state.
Strain type The strain input to MCLF can be in one of two forms. The first is measured strain,
which was the default for this program in previous versions. This strain is assumed
to lie on the cyclic stress-strain curve, whereby if yield has occurred then the strain
will change in a non-linear way as load increases. The strains will be in this form if
a strain gauge has been used.
Alternatively, the strain may have been calculated theoretically, from classic elastic
theory or from finite element analysis. In this case the strain is usually linear elastic,
and MCLF must use a different method to calculate local stress and strain.
File Name The name of the loading file should be entered in this field. Note that if Loading =
Time History then MCLF expects a single parameter . dac or .pvx file to be
entered. If Loading = Range Mean Matrix then a . cyh file is expected. File names
with other extensions can also be typed in this field.Option Description&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities580
Main Index
Amplitude and
MeanMultiple values of amplitude OR mean can be entered. For example entering
(1000,5000,500) will calculate values from 1000 to 5000 inclusive at intervals of
500. Entering 1000,2000,3000 (without the brackets) will calculate values at 1000,
2000, and 3000. MCLF will run the calculation for them all (although as only one
multiple analysis criteria is allowed per run no other criteria can be multiple).
“BACK” can also be entered, in which case the required life must be entered and
MCLF will calculate the amplitude and mean required to achieve that life. The
Show button on the right of the header bar can be used to display the values that
will be processed.
Time Window Not all of the Loading Time History file has to be used in the calculation. If only a
part of the file needs to be used then the start point and end point can be specified
in the Time Window. The default is to use all of the time history file, which is why
the defaults are START and END.
If a part only is to be used then clear the fields and enter the values, i.e., 10 in the
Start field and 1000 in the End. Alternatively the syntax START+n and END-n&amp;rsquo;
where n is a number of units (e.g. seconds) from the start of the file and n&amp;rsquo; is a
number of units before the end of the file. START and END are usually recorded
in the header area of the input file. Please note that start is not necessarily zero.
Calibration file and
unitsThe use of a calibration file to convert input loading units to microstrain has been
specified. In this field the name of the file which contains the calibration, in the
appropriate format, must be provided.
As a default, calibration files are assumed to have the file name extension . cal and
so, the required file may be selected by entering its name directly without this
extension.
In the units field, enter the units of the input, X, half of the calibration file. This
can be any text string and is used only for reporting the units back to the user.
For Scale Factor, Offset, and Cycles Gate : if multiple entry is employed then a
Damage Matrix, Rainflow Matrix, or Cycles File will NOT be produced, although
MTPD will plot the results and will allow them to be stored as a hardcopy plot file.
Scale Factor The scale factor is an amount by which the loading history or matrix will be
multiplied. Multiple scale factors can be entered separated by commas or as, for
example entering (-500,1000,50) in the field will scale from -500 to +1000
inclusive in steps of 50.
BACK may also be entered in which case MCLF will calculate the scale factor
needed to achieve the required design life. Option Description&lt;/p&gt;
&lt;p&gt;581 APPENDIX C
Utilities
Main Index
Model Parameters
All input on this page is identical to that required for a global FE fatigue analysis. Select or set up as necessary
for your analysis.
Material Data Input
All input on this page is identical to that required for a global FE fatigue analysis. Select or set up as necessary
for your analysis.Offset The offset is a value added to the results file(s)  after the scale factor has been
applied . For example, if the original loading file had an amplitude of 10 and a scale
factor of 30 then the result (300) would then have the Offset applied. If the offset
was -5 then it would be 300-5, or 295.
Cycles Gate The gate is in effect, a filter that speeds processing by filtering any small cycles that
are unwanted (for example signal noise). The gate value should not be set too high
or it will filter out relevant parts of the signal. Any signal smaller than the gate value
specified in this field will be ignored in the life calculation.
Multiple gate values can be entered using the same syntax as the example given for
scale factors (above). No results file will be saved if a multiple analysis is carried out.
A multiple gate analysis can be used to assess the gate value so that the user can
choose the gate threshold that just fails to remove genuine damaging events.
The gate threshold value is sensitive to changes in material and Kf. Also if a signal
is scaled up by 2, the gate is NOT automatically scaled up by 2, the user must
manually scale up gate.
This Input File is
Equivalent to&amp;hellip;The fatigue analysis to be carried out is through the use of a either a time series,
range-mean matrix or a sequence of peak valleys. The results will normally be
presented in the form of the number of repeats of these series to failure.
An equivalent unit, such as miles, laps, hours, etc. can be attached to the input
loading file so that results can be presented in the form of miles, laps or hours to
failure.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities582
Main Index
Geometry Screen
Option Description
Method The elastic stress concentration factor, Kt, is the ratio of the maximum stress at a
stress raiser to the nominal stress computed by the ordinary strength- of-material
formulae, using the dimensions of the net section. It can be used to account for
the presence of a notch within a component or structure.
The magnitude of the Kt required depends on the nature of the notch and its
geometry. Values of stress concentration factors can be obtained from standard
works such as: R.E Peterson&amp;rsquo;s &amp;lsquo;Stress Concentration Factors&amp;rsquo;, John Wiley &amp;amp; Sons,
Inc. 1974. Alternatively use can be made of the Time Correlated Damage - (MTCD), 604&lt;br&gt;
module.
It is well known that small notches have less effect in fatigue than is indicated by
Kt. This has led to the idea of a fatigue concentration factor, Kf, which is
normally less than Kt, being introduced and being used to replace Kt within
Neuber&amp;rsquo;s rule.
Kf is related to Kt according to:
Kf = 1 + ( Kt - 1) / {1 + }
p&amp;rsquo; is a material constant dependent on grain size and strength and r is the notch
root radius.
If Kf is not known, then estimate the theoretical stress concentration factor, Kt,
and select the calculate option, otherwise select the direct entry option.
Kf vs. Kt If Kf or Kt are being entered directly other fields, such as notch root radius, do
not appear.
Single or multiple values of either Kf or Kt may be entered. Alternatively, the
word back, or BACK, may be entered in which case MCLF will request the entry
of a desired life and then will calculate the Kf required to achieve that life.
Note that only a single arithmetic operation between delimeters (comma or space)
can be undertaken, so 3+3/2 would cause an error. p ˜
r&lt;/p&gt;
&lt;p&gt;583 APPENDIX C
Utilities
Main Index
Output Setup Screen
MCLF can generate a number of different output files depending on the analysis path chosen. If a multiple
analysis has been specified in any of the input screens, then a single file, with the results name provided with
any one of the following file extensions, depending on the multiple parameter, will be created.
All these files have the standard X-Y paired data format and can be displayed graphically within MCLF itself
or by the X-Y parameter display module, MTPD, which is automatically invoked from MCLF .Notch Root Radius
(r) and Notch index
(q)Enter a value for the notch root radius in mm. A value will enable MCLF to
calculate q and display it in the Notch Index q field. The notch sensitivity index,
q, has been found to be a function of both material and notch radius. Neuber has
defined q as:
q = 1 / {1 + (p&amp;rsquo;/r)}
where:
p&amp;rsquo; is a material constant dependent on grain size and strength and r is the notch
root radius.
The parameter p&amp;rsquo; has units of distance, mm, and for a medium strength steel with
a UTS of 750 MPa has a value of about 0.1 mm.
The notch index q can only be calculated for steels that have a UTS of 50 - 250
ksi (about 340 - 1700 MPa).
Additional Kf The fatigue strength of a component can be reduced further as a result of
metallurgical defects such as inclusions or porosity. This field allows such
additional Kf effects to be included in the life calculation. The number entered
here will be multiplied by the value of Kf above, and the resultant combined value
used in Neuber&amp;rsquo;s rule. When the multiplication has been done the calculated Kf
is displayed in the Calculated Kf field. When setting up a new Job the next data
to be defined is the Output Definition screen (also called the Results Setup screen)
which is explained below.
.fal Scale factor vs. Life
.gal Hysteresis gate vs. Life
.ofl Offset vs. Life
.kfl Kf vs. Life
.ktl Kt vs. Life
.dcl Survival probability vs. LifeOption Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities584
Main Index
If, on the other hand, a single shot analysis has been carried out then MCLF can optionally create a group of
files which contain different information, have the same results name and the following file extensions.
All the above files may be displayed graphically from within MCLF .
In addition, numerical results are written to the extra details area of the damage matrix file, . dhh extension.
The following table details the key words and values stored.
The type of output requests are:.cyo Rainflow matrix suitable for input to MCDA or MP3D
.dhh Damage matrix suitable for input to MP3D
.clf List of fatigue cycles and associated damage suitable for input to
MCDA.
.slp Hysteresis loops suitable for input to MTPD.
Keyword Value Description
ANALYSIS CLF Program responsible for analysis
MSC S-W-T Mean stress correction method
DCRIT 50.0 Probability of survival used
FACTOR 1 Scale factor
GATE 0.0 Hysteresis gate used
OFFSET 0.0 Offset used
KF 2 Fatigue strength reduction factor used
MINER 1 Miner&amp;rsquo;s constant used
HISTORY test101.dac Load history used
MATERIAL MANTEN Material used
EQUUNITS Repeats Equivalent units
NUMEQUNI 1 Number of equivalent units
UTS 552 Ultimate tensile strength of material use
$CYCHEXT test101.cyo Rainflow matrix id, for system use only
MEANLF 3331 Mean life calculated
MINLF 3780 Life associated with minimum fatigue
damage
MAXLF 2899 Life associated with maximum fatigue
damage&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P31</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_031/</guid>
      <description>
        
        
        &lt;p&gt;585 APPENDIX C
Utilities
Main Index
Option Description
Histogram type If none is selected here, then no histogram damage file is generated. If Input Units
is selected then a damage histogram file will be generated with the same units as
the input file. Selecting Nominal uE or Local uE will produce histograms scaled
in strain units, either nominal elastic or local elastic-plastic ones respectively. A
histogram with the axes scaled in terms of strain amplitude and maximum stress is
produced by selecting the SWT option. The number of bins can also be specified.
Damage Units The units of the damage displayed in each cell of the damage matrix can be
specified. The damage can be output as actual damage values, as percent damage
or damage normalized to 1.0. Select the required units.
Cycles file In the case of a single shot fatigue life estimation, an output results file can be
generated. This file contains details every cycle extracted by the rainflow
algorithm, in terms of its nominal stresses and strains together with the associated
fatigue damage.
The cycles file may be viewed and searched using the list cycles option on the
display results menu or postprocessed using the MCYL module.
Histogram Limits The limits of the rainflow and damage matrices can be automatically determined
to match the limits of the data, or they can be &amp;lsquo;User&amp;rsquo; specified. If they are user-
specified then the range and mean minimum and maximum fields (described
below) become active.
Range Minimum/
Maximum The range limits can be manually specified in these two fields in the units
specified.
Mean Minimum/
Maximum The mean limits can be manually specified in these two fields in the units
specified.
Hysteresis Loops and
Number of Loops In the case of a single shot analysis, an output file which contains the &amp;rsquo;n&amp;rsquo; largest
hysteresis loops, i.e., stress-strain cycles, extracted by the rainflow algorithm can be
generated. The contents of this file may be displayed graphically by selecting the
plot loops option on the display results menu or by invoking the X-Y plotting
module, MTPD.
The file created will have the same generic name as given to the cycles and damage
matrices but its extension will be . slp. Select Yes or No for this file.
The number of loops to be saved in the output file can be specified here. Note that
the default is the 5 largest loops. Any positive number can be entered. Use the
display loops option to view the loops.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities586
Main Index
The Postprocessing Menu
This displays the results of the most recently calculated life estimation. Exactly what is available for display
depends upon the calculation; if an X-Y file was not created then it cannot be displayed, a multiple calculation
will not produce any histogram files, etc.
The Results Listing option will list the full results of the current life estimation in tabular form. Such listings
are carried out within MCLF . If parameters have been changed but not Recalculated, then the non-
recalculated data will NOT be listed. Selecting this will load the Cycles File Listing program Cycle and Damage
Analysis - (MCDA), 592  module.Option Description
Cycle matrix 3D Display a rainflow cycles matrix file as a 3D plot. Such a file may have been
calculated or entered into the analyzer. MCLF actually loads the plot 3D
module MP3D for this type of display. If a damage matrix file (. dhh) was also
created during the current analysis it can also be loaded from within MP3D.
Damage matrix 3D Display a damage matrix file as a 3D plot. MCLF actually loads the Plot 3D
module MP3D for this type of display.
Damage analysis Display both the cycles and damage matrices on a single 2-D plot. MCLF
actually loads the Cycles and Damage Postprocessor module Single Location S-N
Analysis - (MSLF), 565 .
Hysteresis loops If the hysteresis loops were saved during a single shot analysis (as a . slp file),
they may be displayed using the module T wo Parameter Display program,
MTPD. See ( Cycle/Damage Histogram Display (MP3D), 371 .&lt;/p&gt;
&lt;p&gt;587 APPENDIX C
Utilities
Main Index
Figure 3-117  Sample MCLF Plots
Environment Key words
MCLF makes the following entries in the local user environment.
USERNAME Username
.FBJ Last job file
PFSTSUNI Material units
BACKTOLR Back life calculation tolerance
MATCHECK Default status of material checking
FATAUTOV Default status for auto-overwrite
.DAC Last .dac file
$SIGNAL Last single parameter file&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities588
Main Index
Batch Operati on
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if
it is omitted and an output file with the specified name already exists, batch operation will cease. T o finish
an MCLF batch line use /OPT=X to exit from the postprocessing screen.
When batch processing with a series of different inputs, it is necessary to use a new batch line and option
definition for each new input. The new line must specify the option from the postprocessing menu into
which the new input will go. For example, when using the jobfile fatjob.fbj .
mclf /job=fatjob.fbj/inp=datafil1.dac/opt=l
mclf /job=fatjob.fbj/inp=datafil2.dac/opt=l/opt=g/kf=2.0
mclf /job=fatjob.fbj/inp=datafil3.dac/opt=l/kf=2.5/opt=g
Omitting the /OPT keywords will cause the batch file to fail because inputs without /OPT keywords cannot
be loaded and will therefore be ignored (the values in fatjob.fbj  will be used instead). Each run of MCLF
with one or more new parameters requires a new batch line. It is permissible to input more than one
parameter on a batch line, but they must be different. Note also that the order in which the batch keywords
appear is not critical.
Note that if a MCLF job file exists as the result of a prior interactive run of MCLF , then its job settings can
be overridden in batch by use of the appropriate postprocessing option and the appropriate parameter. For
example, suppose a job file called life.fbj exists in which Kf is set to 2. The following batch line will NOT
change Kf.
mclf /job=life/kf=4/ov=y
However, the following batch line WILL change KF and automatically recalculate a new life&amp;hellip;
mclf /job=life/opt=g/kf=4/ov=y
because /OPT=G invokes the Geometry option in which the change is made.
MCLF keywords:$CYCLES Last cycles file
$HISTOG Last histogram file
.CYH Last cycles histogram file
$PAIRED Last X-Y file
$ANNOT1 The first annotation string; $ANNOT2 TO $ANNOT6 also available.
/JOB Job File Name
/CREate Confirm Creation of New Job Y,N
/CALFIL Nature of the Calibration File A,B,N
/CALNAMe Name of Calibration File
/LUNIts Input Units of Calibration files
/STATE Strain State A,P
/STYPE Strain Type M,E&lt;/p&gt;
&lt;p&gt;589 APPENDIX C
Utilities
Main Index
/INPut Name of the Input Loading File
/TYPE Type of Loading Input T ,C,R
/UNITs Internal Loading Units M,K,U
/EQUNITs Equivalent Units
/NUMEQUnits Number of Equivalent Units
/STArt Start Time for Analysis
/END End Time for Analysis
/FACT or Scale Factor for input Loading
/OFFset Offset of Input Loading
/GATE Hysteresis Gate of Analysis
/AMPlitude Magnitude of Constant Amplitude
/MEAN Mean of Constant Amplitude
/MATENT ry Mode of Material Parameter Entry L,E,G
/MATSRC Source of materials data S,U
/DBNAME Material Database Name
/MATname Material Parameter Dataset Name
/EDIT Edit Material Dataset Y,N Parameter Editing &amp;amp; Entry
/UTS Ultimate T ensile Strength
/YM Young&amp;rsquo;s Modulus
/SF Fatigue Strength Coefficient
/BASQ Fatigue Strength Exponent
/EF Fatigue Ductility Coefficient
/COFF Fatigue Ductility Exponent
/NP Cyclic Hardening Exponent
/KP Cyclic Hardening Coefficient
/CUTOFF Endurance Limit Cut-off
/SERRE Elastic Standard Error
/SERRP Plastic Standard Error
/SERRC Cyclic Standard Error
/RATIO R - Ratio
/SURFace Surface Finish (=POLished, GRound, GOod Machined, Average Machined,
POOrly Machined, HOt Rolled, Forged, Cast, Water Corroded, Sea Corroded,
User Defined.)
/TREAT ment Surface treatment (=None, Nitrided, Cold rolled, Shot peened, All)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities590
Main Index
Parameter Generation:
/GENTYP Generic Material Type S,A,T ,O
/UTS Ultimate Tensile Strength/
SERR Standard Error of Log strain
/RAREA Reduction in Area Calculation Parameters
/DESign Design Criterion Percent
/MSC Mean Stress Correction Method N,S,M,A
/MINERs Value of Miner&amp;rsquo; Constant
/EPCORR Elastic-Plastic Correction Method, Neuber or Mertens-Dittmann N,M
/ALPHAP Shape Factor for Mertens-Dittmann
/GEOTYPe Notch Geometry E,C
/KF Fatigue Strength Reduction Factor
/KT Elastic Stress Concentration
/NOTCH Notch Root Radius
/ADDKF Additional Kf
/OUTput  Generic Name for Output Files
/CYCles file  Whether a Cycles File is Required Y,N
/DAMage file  Whether a Damage File is Required Y,N
/DAMUNI Units of the Damage Matrix A,P ,N
/XYFILe Save X-Y Data in a File Y,N
/HTYPE Matrix T ype I,N
/SIZE Matrix Size
/LIMit type Matrix Limits A,U
/RMIN Minimum Range of Matrix
/RMAX Maximum Range of Matrix
/MMIN Minimum Mean of Matrix
/MMAX Minimum Mean of Matrix
/OPTion Postprocessing Options L,M,S,G,O,D J,P ,C,R
/RESOPTion Results Display Options R,X
/JOBOPTion Job File Options N,S,L
/PRFOPTion Preference Options M,B,U
/UNIOPTion Units Options MP ,P ,K,N,MN
/NEWJOB Start Another Job Y,N
/LIFE Life required for Back Calculation&lt;/p&gt;
&lt;p&gt;591 APPENDIX C
Utilities
Main Index
/MATCHK Material Parameter Checking Y,N
/TOLER Sensitivity of Back Calculation
/OVerwrite Overwrite Existing Output Files Y,N
/AUTOVerwrite Overwrite Without Confirmation Y,N
/SWTMTH S-W-T algorithm method F ,I
/PLOt Whether hardcopy is required Y,N
/PL TNAM Hardcopy file name&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities592
Main Index
Cycle a nd Damage Analysis - (M CDA)
MCDA calculates and displays cycles and damage distributions so that different test conditions may be
compared and the reasons for variations in fatigue damage may be determined. Displays may be as
histograms, continuous curves, or exceedance plots.
The MCDA module provides a means of displaying cycles histograms created from Rainflow analysis, and
damage histograms created from Fatigue analysis. The input data is “histogrammed” within a two
dimensional array with a maximum of 128 x 128 elements (bins). MCDA takes each array dimension and
sums the data for each element across its opposing dimension.
This creates two new 2 dimensional histograms, each with a single array with a maximum of 128 elements.
Exceedance data is also calculated for each new array. This is achieved by summing the data values from the
current element in the array to its last element. This is repeated for each element until the maximum element
is reached for that array.
An example of this calculation for this is shown in the following table.
Module Op eration
The MCDA module can be run in one of the following ways:
In Stand alone mode by invoking mcda at the system prompt as explained in Configuration, 328 .
By incorporating the MCDA commands in a batch operation
Once running, MCDA will display the following window.TOTALS ARRAY
element 1 2 3 4  5
34.5 72.45 123.2 -12.0 312.0
EXCEEDANCE ARRAY 530.15 495.65  423.2 300.0 312.0&lt;/p&gt;
&lt;p&gt;593 APPENDIX C
Utilities
Main Index
Figure 3-118   Naming the Input Cycle and Damage Files
The user is asked to enter the cycles histogram file name which usually has a . cyh extension. If a damage
histogram file is found with the same generic name as the cycles histogram file this is also loaded. A default
file may already exist in the cycles histogram field.
A second cycles histogram file may be loaded. If the user does not want to load a second histogram file, then
this field can be left blank.
Depending on the user&amp;rsquo;s input, one of four menus will be shown. These menus give a list of the available plot
options for the histogram files selected.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities594
Main Index
When the input cycles and/or damage files have been named, and a menu option chosen, then a plot of the
data is displayed. An example plot is shown below in Figure 3-119 (in this case a plot of a cycles file and it&amp;rsquo;s
corresponding damage file).
Figure 3-119  A Typical MCDA PlotOption Description
Plot Cycles Histogram 1 Plots only the cycles of the first file selected.
Plot Cycles Histogram 2 Plots only the cycles of the second file selected.
Plot Both Histograms Plots the cycles from both files together in the same plot for comparison
purposes. This option is only available when two files have been supplied.
Plot Damage File 1 Plots the damage from the corresponding cycles of the first file only. This
option is only available when a corresponding damage file exists in
conjunction with the cycles plot.
Plot Damage File 2 Plots the damage from the corresponding cycles of the second file only. This
option is only available when a corresponding damage file exists in
conjunction with the cycles plot.
Plot Both Damage Files Plots damage from both files. This option is only available when two files have
been supplied.
Plot Damage/Cycles -
File 1 Plots cycles with the corresponding damage superimposed on top of the cycles
plot for the first file which is useful for viewing cumulative damage.
Plot Damage/ Cycles -
File 2 Plots cycles with the corresponding damage superimposed on top of the cycles
plot for the second file.&lt;/p&gt;
&lt;p&gt;595 APPENDIX C
Utilities
Main Index
Once a plot is on the screen, operation of the interface is from the command line or via the pull down menus.
The menu system is in MCDA is very similar to that in other graphical modules, many of which are
explained in Plot an Entry Option, 247  in the Loading (PTIME ) module. Each menu item can also be invoked
form the command line above the graphical display. Some of the command line codes are:
SA, NE, HC, RE, EX, PL,JO, TO, FU, WX, RA, ME, EP, TP, CW,
DW, LC, NC, LD, ND, GR, TI, TOUT, TIN, ZON, ZOF, AT, DT,
RON, ROFF, HBON, HBOF, GT, PESA, PEDE, PEPR, PEDA, PETX,
PEAX, PEAN, PEGR, PEBA, PEER, PESU, PEMF, PEMT, PEMO, PEMB,
PEMH, PEMK, XMIN, XMAX, CMIN, CMAX, DMIN, DMAX, CU, OP,
OPDM.
Typing OP at the command line will list all the options available within MCDA. Those of particular interest
to MCDA are explained below.
Save Files SA Saves the displayed histograms as a single file.
New File(s) NE Allows a new input file to be entered.
Range Plot RA Displays the range of the histogram along the X-axis.
Mean Plot ME Mean Plot, displays the mean of the histogram along the X-axis.
Log Cycles LC Displays the cycles on the Y-axis on a logarithmic scale.
Linear Cycles NC Linear (Normal) Cycles values along the Y-axis (not log scale).
Log Damage LD Displays the damage plot Y-axis as a log scale.
Linear Damage ND Linear (Normal) Damage values on the Y-axis.
Exceed. Plot EP Displays the exceedance plot of the histogram.
Totals Plot TP Displays the total histogram along the X-axis
X Window XW Sets a specific X minimum and Y
Cycle Window CW sets a specific cycle minimum or maximum to plot.
Damage Window DW Sets a specific damage minimum and maximum to plot.
CMIN/MAX Sets the minimum and maximum Y-axis cycles file window to
plot (functionally similar to CW above).
DMIN/MAX Sets the minimum and maximum Y-axis damage file window to
plot (functionally similar to DW above)
When the cursor is activated the following sub options are available:
V or Left Hand Mouse Button - Pick off a data value
W Window on X-axis
Q Quit cursor mode
TOUT Ticks drawn on the outside of the box
TI Ticks drawn on the inside of the box
CP Change plot type, returns to the menu
HC =&lt;!-- raw HTML omitted --&gt; (file name optional)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities596
Main Index
When saved, the following extensions are given to the various signal files.
Batch ope ration
MCDA runs in all the standard batch modes.
A list of MCDA’s batch keywords:
A typical batch command line would be:
mcda /inp1=data1.cyh/inp2=data2.cyh/dopt=2/pltnam=mytest
/ptit=test run 12/ov=y
In this case, Histogram files data 1 and data 2 will be loaded. If both files have matching damage histogram
files then these will also be loaded. The user has specified plot option 2 on the option menu, the command
SA is given, and this saves the plotted histogram as a signal data file. The data file already exists therefore the XMIN/XMAX=&lt;!-- raw HTML omitted --&gt; Set range or mean limits on the x-axis
CMIN/CMAX=&lt;!-- raw HTML omitted --&gt; Set cycle limits on the cycles-axis
DMIN/DMAX=&lt;!-- raw HTML omitted --&gt; Set damage limits on the damage-axis
.cdc Cycles histogram as totals plot.
.cdd Damage histogram as totals plot.
.exc Cycles histogram as exceedance plot.
.exd Damage histogram as exceedance plot.
INP1 Name of the cycles histogram file /INP1=SAETRN
INP2 Name of the second cycles histogram file /NP1=SAETRN2
DOPT The number of the chosen display option menu
OPT The number of the chosen graphics menu
option/OPT=3
XMIN The minimum X-axis value /XMIN=100
XMAX The minimum Y-axis value /XMAX=1E4
CMIN The minimum cycles value to be displayed /CMIN=10
CMAX The maximum cycles value to be displayed /CMAX=1000
DMIN The minimum damage value to be displayed /DMIN=5
DMAX The maximum damage value to be displayed /DMAX=275
OV Overwrite an existing file Yes/No /OV=Y
PLTNAM Plot the file name (used with /OPT=HC) /PLTNAM=FILENAME
PTIT Plot the file title (used with /OPT=HC) /PTIT=TEST RUN 5&lt;/p&gt;
&lt;p&gt;597 APPENDIX C
Utilities
Main Index
OV=Y batch command gives permission to overwrite it. The file name will be mytest.cyh  with a title of
Test Run 12.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities598
Main Index
Cycles File Lister - (M CYL)
It sometimes becomes necessary to examine the contents of a cycles file. In such instances, MCYL can be used
to numerically list the contents of such a file, either to the screen or to a list file stored on disk. MCYL can
also display a summary of the information resident in the file header region.
MCYL also accesses the cycle results files generated by the fatigue analyzers MCLF and MSLF and create a
rainflow matrix of cycles according to user specified engineering units and limits. It can also display the
histogram, alphanumerically, and produce an output histogram file which can itself be either plotted, listed
or edited.
MCYL can display paired data files and three parameter cycles matrix files. It can also modify such files and
save them as a disk file.
The 3-D rainflow matrices can be formed in terms of nominal or local stress or strain, with cycles being
classified into a maximum of 128 range classes and 128 mean classes. The size, in terms of physical units, of
the range and mean classes can be set independently.
The distribution of fatigue cycles in terms of counts or damage can be displayed alphanumerically or saved
for later plotting by the MP3D module.
Although a histogram with 64 columns and 64 rows cannot be displayed on the screen as a unity, windows
of 8 columns wide and 8 rows high can be used to scan the entire matrix. The particular use of this module
lies in its ability to display quantitatively the relationship between numbers of specific cycles and associated
damage content.
The cycle matrices generated can be used directly as inputs to the matrix fatigue analyzers MCLF and MSLF .
This feature is particularly useful if the original time series data files are large and it is undesirable to process
them directly.
Module Ope ration
MCYL can be run:
In stand alone mode by invoking mcyl  the system prompt as explained in Configuration, 328 .
By incorporating the MCYL commands in batch mode.&lt;/p&gt;
&lt;p&gt;599 APPENDIX C
Utilities
Main Index
The main menu items of MCYL are:
List a cycles file - List the contents of a cycles file (. cyl) to screen or disk.
Form a cycles matrix - Create a cycles matrix and possibly a damage file (. cyh and .dhh)
List a cycles matrix - List to screen or disk a file of the type created in 2 above
List to EXCEL - Create a text format data file in Lotus Excel spreadsheet format (. txt)
List a Cycles file
To list a cycles file the following input is requested:
Option Description
Input File Name When this option&amp;rsquo;s mask is first run only the Input File Name field is displayed.
The user must tell MCYL the name and location of the cycles file to list. This file
must be a standard cycles file from the fatigue analysis section or from the signal
classification section.
By default, MCYL expects to find any input data files to be resident in the user’s
directory. Probably the easiest method of entering input file names is to use the
pick list facility. This also enables other drives/directories to be accessed.
If a file name is entered without an extension then the default extension . clf will
be given to the file name entered. A default file name may also be given in the
question window.
When the Input File Name field is filled the other fields become active. They are
explained below.
Listing In a critical location analysis, results are produced for the nominal location, and at
the critical (local) location. Because of limited listing space, only one of these sets
of results may be listed at one time. Therefore select either 1 or 2.
Gate Value (also
applies to Damage
Gate)A gate may have originally been applied during the analysis to limit the calculation
to large cycles only (setting a gate value is a method of reducing signal noise). It is
possible to increase the original value with a higher gate value to further limit the
listing. The gate must be a range value in the units of the file listing. For example
in a stressed based file the gate value should be in MPa, whereas for strain based
the units should be uE.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities600
Main Index
Form a Cycles Matrix
To form a cycles matrix, the following input is required.Display T ype The cycles may be shown in Max/Min format (where the peak and trough values
of the cycles are displayed) or Range/Mean (where the range is the distance
between max and min and the mean the average of the max and min.)   Enter the
value 1 or 2. Alternatively, the strings MAX and RANGE are also recognized.
Output Destination The cycles file data may be displayed at the user’s terminal by selecting S for
Screen, or written out to a list file by selecting F for file.
If File is selected then an additional Output File Name field must be filled. The
default output file name is that of the input file but with a . lst extension. The
default file name can be edited by the user (to avoid overwriting an existing file for
example).
Output File Name Enter a file name to which the data should be sent. The default extension for the
file is .lst (see Output Destination above).
The output file contains header information and a complete listing of the data in
the cycles file.
Option Description
Input File Name A cycles file from , MCLF or MSLF should be input here. A damage histogram
input field is also available (MCYL knows the source of the input file by reading
it&amp;rsquo;s header). The damage histogram field is optional.
Generic Output
Name Type the name of the file (or files if a damage file is also to be created). The default
is to copy the Input File Name although this may require the input file to be
overwritten.
Cycles Matrix Type MCYL is able to form up a range-mean matrix from a cycles results file in terms
of either stress or strain. Toggle the appropriate option into the field.
MCYL will then display the limits of the largest and smallest cycles present in the
cycles results file and prompt for the following:
Minimum Range
Limit For the purpose of scaling the histogram the range of the smallest cycle to be
represented in the histogram must be entered in physical units (usually
microstrain). If there are any cycles smaller than the minimum range specified,
then those cycles will be excluded from the histogram. However, a warning
message will appear and a note made in the note book.Option Description&lt;/p&gt;
&lt;p&gt;601 APPENDIX C
Utilities
Main Index
List a Cyc les Matrix
A common usage for this option is to list the cycles file created in the above option although an existing file
can also be listed. This option can list BOTH Cycles and Damage files. The following input is required:Maximum Range
Limit For the purpose of scaling the histogram the range of the largest cycle to be
represented in the histogram must be entered in physical units (usually
microstrain). If there are any cycles larger than the maximum range specified, then
those cycles will be excluded from the histogram. However, a warning message will
appear and a note made in the note book.
Number of Columns For the purpose of scaling the histogram it is possible here to specify the number
of classes (bins) into which to classify the cycle means. Any integer number up to
a maximum of 128 (the default) may be entered.
Number of Rows For the purpose of scaling the histogram it is possible to specify the number of
classes (bins) into which to classify the cycle ranges. Any integer number up to a
maximum of 128 (the default) may be entered.
Minimum Mean
Limit For the purpose of scaling the histogram the smallest mean value to be represented
in the histogram must be entered in physical units (usually microstrain). If there
are any cycles whose mean values are smaller than the value specified, then those
cycles will be excluded from the histogram. However, a warning message will
appear and a note made in the note book.
Maximum Mean
Limit For the purpose of scaling the histogram the largest mean value to be represented
in the histogram must be entered in physical units (usually microstrain). If there
are any cycles whose mean values are greater than the value specified, then those
cycles will be excluded from the histogram. However, a warning message will
appear and a note made in the note book.
Option Description
Cycles File Name Specify a cycles histogram file in this field, for example one generated in the Form
a Cycles Matrix option. The default extension is . cyh but other compatible file
types can be typed with their extension. This field may be left blank if only a
damage histogram file is to be listed.
Damage File Name Specify a damage histogram file in this field, for example one generated in the
Form a Cycles Matrix option. The default extension is . dhh. This field may be left
blank if no damage histogram file is to be listed.
List Zero Bins List Zero Bins = No, will filter out from the listing any data entries that contain
zero cycles (and therefore contribute nothing to the analysis). If this is set to NO
it will ONLY apply to the cycles matrix NOT a damage matrix, should one be
included in the processing.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities602
Main Index
List to EX CEL
This main menu suboption will save the listings file in a format that can be imported into a Microsoft Excel
spreadsheet. The following input is required:
Batch O peration
MCYL can be run in macro mode. In this mode of operation simple listings can be automatically generated.
Please refer to the &amp;lsquo;batch operation&amp;rsquo; section for more general details of invoking modules in batch.List Type 3D is a normal 3D histogram plot, 2D = Range plots the sum of the X-axis values,
2D = Mean plots the sum of the Y-axis values.
Bin Location The matrix files hold values in mean or range bins. The maximum of the bins can
be used for the listing, or the mean of the bins (mean is (maximum-minimum) /2).
Damage Gate Setting a gate at any value will filter out any data entries with a value LESS than
the gate. Leaving this field blank will filter out nothing.
Destination - Screen
or FileIf the input file(s) are to be listed to screen select Screen. T o save them to disk select
File. They will be saved in the current directory.
Option Description
Input File Name This field should contain the name of the cycles file that is to be converted to Excel
text (.txt) format and saved on to disk.
Output File Name By default this is the same as the Input File Name not with a . txt extension.
However any valid name and extension can be specified here.
Output Format The program can create two types of file. In the first case, all the data is written to
the file, including header and label information. In the Raw Data option, only the
matrix data is written.
Label Data The data is normally output to the tab separated file without labels and totals. To
add labels and totals to the data, answer Yes to this question.
/INPut The name of the input cycles file. /INP=SAETRN
/LOCation Whether the nominal or critical location is to be used. /LOC=2
/GAT e= The gate value to limit the listing. /GAT=50
/DISTYPe The required display format. /DISTYP=2
/DESTination The destination of the output. /DEST=F
/OUTput The name of the output list file. /OUT=CYCLES
/OVerwrite Overwrite existing files, Yes or No. /OV=Y
/DAMage Damage gat. /DAM=12
/HSTOPT Cycles matrix type. /HSTOPT= Option Description&lt;/p&gt;
&lt;p&gt;603 APPENDIX C
Utilities
Main Index
/RMIN Minimum range limit. /RMIN=10
/RMAX Maximum range limit. /RMAX=8000
/NCOL Number of columns. /NCOL=32
/NROW Number of rows. /NROW=64
/MMIN Minimum mean limit. /MMIN=200
/MMAX Maximum mean limit. /MMAX=3000
/DMAT Damage matrix, Y or N. /DMAT=Y
/DAMSC Damage units Actual, %, or Normalized. /DAMSC=%
/OPT Main option, 1, 2, 3, 4. /OPT=3
/CYH Cycles histogram file name. /CYH=TEST1.CYH
/DHH Damage histogram file name. /DHH=TEST1.DHH
/ZERO List zero bins. /ZERO=YES
/TYPE List type - 3 (3D),R (2D range), M (2D mean). /TYPE=2DR
/BINLOC Bin location, Mean or Range. /BINLOC=R
/DGAT Damage gate. /DGAT=20&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities604
Main Index
Time Co rrelated Damage - ( MTCD)
MTCD is a fa tigue analyzer that can be used to pin-point fatigue damage within a loading history. It uses the
local stress-strain approach to track local stresses and strains by means of a single-pass algorithm. An estimate
of the total damage accrued by one pass through the load history is made and displayed graphically.
The local stress strain approach can be used to estimate the time taken to generate an engineering crack 2-5
mm in length.
The methodology needs a description of the loading history, the component geometry and material
properties.
Typically, the loading history is measured in the field, and is assumed to be representative of the actual loading
the component will experience throughout it&amp;rsquo;s life. Life estimates are usually expressed in the form of a
number of repeats of that history to failure, i.e. that the history essentially repeats itself. This assumption
allows the analysis to be simplified.
Because its local stress-strain coordinates must lie on the cyclic stress strain curve, analysis starts at the largest
absolute strain excursion, continues to the end of the sequence, wraps around to the start, and finishes at the
largest excursion again. In this way all cycles are closed and repeatable. This procedure is often referred to as
the two-pass algorithm, one pass to locate the largest excursion, and a second pass to carry out the fatigue
analysis.
The single pass algorithm commences analysis at the beginning of the loading sequence and accumulates
damage as each cycle closes and each reversal is replaced by larger relatives at the head of the rainflow stack.
At the end of the analysis, the largest strain excursion will be at the head of the stack and accompanied by a
number of residual peaks and valleys which cannot be closed.
The local stress and strain are tracked at each strain excursion, by using the cyclic stress strain relationship,
together with a rheological material model using segment exhaustion.
Once a cycle or appropriate reversal has been identified, the fatigue damage is estimated and ascribed equally
to both of its turning points. The damage is written in the correct sequential position of the output damage&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P32</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_032/</guid>
      <description>
        
        
        &lt;p&gt;605 APPENDIX C
Utilities
Main Index
file. Loading data values which are not turning points, are written out to the damage file with zero damage.
In this way the time-base is maintained and the two files may be compared directly. The number of cycles,
unclosed reversals, and the total damage accumulated, are presented for scrutiny.
It is important to note that MCLF uses a two pass algorithm, and when analyzing the same loading sequence
it provides total damage values slightly different to those given by MTCD which commences analysis at the
first point in the sequence. Naturally, MTCD agrees with the other analyzers when MTCD is also forced to
start at the largest excursion.
Module Op eration
The MTCD module can be run in one of the following ways:
In stand alone mode by invoking  mtcd  at the system prompt as explained in Configuration, 328 .
By incorporating the MTCD commands in a batch operation.
When run in interactive mode, MTCD&amp;rsquo;s first screen will ask for the name of the file to process and looks like
this:
Figure 3-120  The First MTCD Screen
The user must enter the name of an Input Job File, which has a . fjb extension. If the name of an existing
Job File is entered, it&amp;rsquo;s parameters will be loaded and MTCD will go straight to a postprocessing screen. If a
new job is specified then its parameters have to be entered in a series of screens. If no name is entered then
the results of processing may NOT be saved.
The operation of this module is very similar and in many cases identical to MCLF and MSLF .
Figure 3-121 illustrates the major routes through MTCD.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities606
Main Index
Figure 3-121   The General Module Structure (MTCD)
The above flowchart is mirrored by the options that are on the Postprocessing menu. If a new job is being
defined, then the following input is required:
The Loading Environment
This information is identical to that needed for MCLF . See Service Loading Environment, 577 .&lt;/p&gt;
&lt;p&gt;607 APPENDIX C
Utilities
Main Index
Model Parameters
This information is identical to that needed for MCLF . See Model Parameters, 581 .
Material Data Input
This information is identical to that needed for MCLF . See Material Data Input, 581 .
Geometry
This information is identical to that needed for MCLF . See Geometry Screen, 582 .
Results Setup
This is the only input that is somewhat different.
When all of the data for a calculation has been entered MTCD will create the required damage file. Results
will also be listed to the screen in the first instance. Plots can be displayed from the Postprocessing menu.
Note that the result is presented as accumulated damage rather than repeats to failure.
The Postprocessing Main Menu
This menu is identical to that needed for MCLF . See The Postprocessing Menu, 586 .Option Description
Output File Enter the name of the output file. The default extension is . dam. This file is in
.dac format.
Output File T ype Output damage files can have either of two formats. In the first, the single value
format, the absolute damage associated with each turning point, half for each cycle
or reversal, is written to the output file at the same point in time it occupied in the
time series file. Non turning points have zero damage ascribed to them. In the
second format, the damage is accumulated as it occurs and so provides insight into
the rate of damage accumulation.
Start At MTCD uses a single pass algorithm to accumulate fatigue damage. As a result,
analysis can commence at the beginning of the loading sequence, instead of at the
largest excursion, and so provide a more accurate distribution of damage within
the time series.
For compatibility with MCLF , MTCD has been provided with the option to
commence analysis at the largest absolute strain excursion. When run in this
mode, MTCD will provide values of total damage similar to those calculated by
MCLF , if not, the values will be slightly different.
Note:   If any parameters are changed the Recalculate option must be run for the changes to take effect.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities608
Main Index
This display of results is of the most recently calculated life estimation. Exactly what is available for display
depends upon the calculation; if an X-Y file was not created then it cannot be displayed, a multiple calculation
will not produce any histogram files, etc.
Figure 3-122   Sample MTCD Plots. Top: Job Details Page,
Bottom: A Cumulative Damage Plot, an Instantaneous Damage Plot
Batch Keyword Summary
A sample batch line is shown below:
mtcd  /job=test1/opt=l/inp=test101/ov=y/opt=r/opt=d/resopt=t
/pltnam=test101
In this example, the time series contained in file test101.dac  will be processed according to the defaults
set in job file test1.fjb  and the resulting damage distribution will be plotted together with the input time
series and save in a plot file call test101.plt .
Note that if a MTCD job file exists as the result of a prior interactive run of MTCD, then its job settings can
be overridden in batch by use of the appropriate postprocessing option and the appropriate parameter. For
example, suppose a job file called life.fbj  exists in which Kf is set to 2. The following batch line will NOT
change Kf.
mtcd /job=life/kf=4/ov=y
However the following batch line WILL change Kf and automatically recalculate a new life&amp;hellip;
mtcd /job=life/opt=g/kf=4/ov=y
&amp;hellip;because OPT=G invokes the Geometry option in which the change is made.
A list of MTCD’s batch keywords:&lt;/p&gt;
&lt;p&gt;609 APPENDIX C
Utilities
Main Index
/JOB Job File Name
/CREate Confirm Creation of New Job Y,N
/INPut Name of the Input Loading File
/CALFIL Nature of the Calibration File A,B,N
/CALNAMe Name of Calibration File
/LUNIts Input Units of Calibration files
/STATE Strain State A,P
/FACT or Scale Factor for input Loading
/OFFset Offset of Input Loading
/GATE Hysteresis Gate of Analysis
/EQUNIts Equivalent Units
/NUMEQUnits Number of Equivalent Units
/MATENT ry Mode of Material Parameter Entry L,E,G
/MATname Material Parameter Dataset Name
/EDIT Edit Material Dataset Y,N
/PL TNAM. Request a hardcopy plot of the results file, and give it a file name.
/PLTNAM= MYTEST.PLT
Parameter Editing &amp;amp; Entry
/UTS Ultimate T ensile Strength
/YM Young&amp;rsquo;s Modulus
/SF Fatigue Strength Coefficient
/BASQ Fatigue Strength Exponent
/EF Fatigue Ductility Coefficient
/COFF Fatigue Ductility Exponent
/NP Cyclic Hardening Exponent
/KP Cyclic Hardening Coefficient
/CUTOFF Endurance Limit Cut-off
/SERR Standard Error of Log Reversals
/RATIO R - Ratio
Parameter Generation
/GENTYP Generic Material Type S,A,T,O
/UTS Ultimate T ensile Strength
/SERR Standard Error of Log Reversals
/RAREA Reduction in Area, %&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities610
Main Index
Time Correlated Damage Analysis
/SURFace Surface Finish: Polished, Ground, GOod Machined, Average Machined, Poorly
Machined, Hot Rolled, Forged, Cast, Water Corroded, Sea Corroded, User
Defined. SUR=HOT ROLLED
/TREAT ment Surface treatment, None, Nitrided, Cold rolled, Shot peened.
/TREAT=NONE,/TREAT=SHOT PEENED
/DESign Design Criterion Percent
/MSC Mean Stress Correction Method N,S,M
/MINERs Value of Miner&amp;rsquo; Constant
/GEOTYPe Notch Geometry E,C
/KF Fatigue Strength Reduction Factor
/KT Elastic Stress Concentration
/NOTCH Notch Root Radius
/ADDKF Additional Kf.
/OUTput Generic Name for Output Files
/OTYPE Damage File Type S,C
/ANAStart Analysis Start Position B,L
/OPTion Postprocessing options L,M,S,G,O,D,J,P ,C,R, X, (i.e. the menu hot key)
/RESOPTion Results Display options T ,X, (T= plot time series)
/JOBOPTion Job File Options N,S,L
/PRFOPTion Preference Options M,B,U
/UNIOPTion Units Options MP ,P ,K,N,MN
/NEWJOB Start Another Job Y,N
/MATCHK Material Parameter Checking Y,N
/OVerwrite Overwrite Existing Output Files Y,N
/AUTOVerwrite Overwrite Without Confirmation Y,N&lt;/p&gt;
&lt;p&gt;611 APPENDIX C
Utilities
Main Index
Single Location Vibration Fat igue - (MFLF)
MFLF is a single location, stress-based fatigue analysis module that accepts stress response PSDFs as input.
This module has also been mentioned in an earlier chapter. As an example of usage copy over the original
SAE history saetrn.dac  to your working directory. This signal is assumed to contain a stress time response.
Use MASD to convert the time signal into the frequency domain by converting it to a PSDF . See the section
on MASD in this chapter for instruction on how to do this. Use all the default settings. The output file name
should be saetrn.psd .
1.Invoke MFLF from the system prompt by invoking mflf as explained in Configuration, 328 .
2.Accept all defaults for all setup screens except for these: Input Filename: saetrn.psd ; Dataset Name:
MANTEN&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities612
Main Index
The analysis proceeds, the results are presented, and eventually you are placed in the Post Processing
Options. Answer Yes to any overwrite permission questions.
Go to Display results&amp;hellip; | Cycles histogram .
Exit from MFLF when you are finished.
Once running in interactive mode the MFLF module will display the following screen:
Figure 3-123  The First MFLF  Screen
The fields are as follows:Note:   This example is for illustration purposes only. The signal used in this example is not actually an
appropriate signal to use in that it is not truly random or gaussian as required by a random vibration
fatigue analysis .&lt;/p&gt;
&lt;p&gt;613 APPENDIX C
Utilities
Main Index
Option Description
Input Filename The name of the file containing the data to be analyzed should be
entered into this field. The data may comprise of either a Power
Spectral Density or an Amplitude Spectrum (RMS, not Peak),
optionally stored as a slice of a waterfall file.
The default extensions are:
.psd for Power Spectral Density data
.amp for Amplitude Spectra
.wfl for waterfall data
The frequency units at which data is measured must be in Hertz (Hz)
(samples per second).
Wate rfall slice [1 : 4] No units Enter the “speed” (y-axis) value from which data is to be extracted. Note
that speed is the usual parameter, but a waterfall file containing
amplitude spectra may have time or buffer as the spectral value.
The speed used will be closest match to the value entered. However, if
the value entered is not within 25% of any of the speeds in the waterfall
file then a warning is issued. Clicking the left mouse button over option
also selects the corresponding data type.
Scale Factor A scale factor can be specified if necessary to scale up or down the
response. The default is unity.
Stress Units This question identifies the units of stress contained in the input file.
The units available depend upon the type of input file:
.amp - Amplitude spectra measured in MPa, ksi and psi, are supported
directly.
The ‘Other’ option is available for spectra which contain stress data
measured in other than these units.
.psd - PSDs measured in MPa2/Hz, ksi2/Hz and psi2/Hz are supported
directly. The ‘Other’ option may be used for PSDs measured in any
other units.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities614
Main Index
Figure 3-124 below summarizes the structure of the MFLF program and illustrates the routes through the
program. New Stress Units For ‘Other’ units 2 additional questions are asked. The first requests the
stress units (e.g. mmH20) and the second resolves the relationship
between these units of stress and the standard SI unit of stress, MPa.
Conversion Factor The conversion factor of the new stress units to SI units of MPa
Advanced Options Selecting Yes for this question gives access to the Advanced Options
form. The form contains three questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Analysis Type&lt;/li&gt;
&lt;li&gt;Cutoff Frequency&lt;/li&gt;
&lt;li&gt;Ask for RMS Cutoff 1
1The environment variable $FLFNRMS defined through the utiltiy MENM can also be used to
set a user defined number of RMS Cutoff level to be used for stress clipping in the damage cal -
culation. See the Modifying the MSC Fatigue Environment (MENM), 1501 .
By default, the programs automatically determines the optimal number of RMS levels and then
uses the user specified RMS Cutoff for the stress clipping only. Stress clipping has the effect
of keeping the stress constant at stress bins above the RMS Cutoff level when summing fatigue
damage. Less conservative fatigue lives are calculated by specifying RMS Cutoff levels below
the automatically determined optimal number.Option Description&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;615 APPENDIX C
Utilities
Main Index
Figure 3-124   The General Module Structure
Intermediate Rai nflow Range File Options
The next screen that is presented allows for specification of certain solution or analysis parameters.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities616
Main Index
Figure 3-125   An Intermediate RRF Screen.
Figure 3-125 only allows for a Dirlik solution. To use other solutions such as T unna, or Narrowband, you must
do this in the postprocessing stage. Only Dirlik, T unna and Narrow Band analyses generate rainflow stress
range histograms. This screen allows you to save the rainflow range histogram that is generated.
Option Description
Bins Required This question is asking for the number of bins to be used along each
dimension, Range (X) and Mean (Y), of the histogram.
Three options are offered 32, 64 and 128. The higher the number, the
higher the resolution of the output file, although once the data has
been fully resolved it is pointless increasing the resolution further.
Also, if the matrix file is to be used in another application, e.g. MSLF ,
then this feature can be used to ensure bin number compatibility with
other matrices being used in that application.
Mean Stress Correction You can apply the standard Dirlik method or the Dirlik method with a
mean or the Dirlik method with a mean using either a Gerber or
Goodman mean stress correction.
Global Mean Value This is the global mean value of stress offset to be used in the specified
mean stress correction method. Also the variable FLFGMEAN  can be
set globally. See the Modifying the MSC Fatigue Environment (MENM), 1501 .
Save PD F data (Yes No) The chosen analysis method generates an intermediate probability
density function (PDF) hence the histogram of the stress ranges.
This question offers the option of saving the PDF to a file or discarding
it when the analysis is complete.&lt;/p&gt;
&lt;p&gt;617 APPENDIX C
Utilities
Main Index
The Material S-N Analysis Screen
Figure 3-126  The Material S-N Analysis Screen
S-N damage curves can be selected for use in a life estimation in any one of the following ways:
Loading an S-N data-set directly from the material database.
Entering details of an S-N curve directly from the keyboard. The parameters entered will NOT be
loaded into the database.Output Filename The question is asking for the name of a file in which to save the
histogram.
Base Axes Units The X and Y-axis represent the RANGE and MEAN values respectively
and hence the units for both axes are identical.
This question is asking for the X and Y-axis units. The default units are
those from the input file.
Duration The default data in the rainflow histogram is normalized to 1 second
but may be rescaled to any duration of hours, minutes or seconds.
This question asks for the total duration of the rainflow data.
The answer given should be a real number greater than zero.
If you want to correlate a life calculation between frequency life
(MFLF)  and stress life  (MSLF)  using the range-mean matrix option,
you should enter the duration as the length of the time series used to
create the range-mean matrix input to MSLF .Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities618
Main Index
Generating an S-N curve from an input value of the ultimate tensile strength, UTS. The generated
parameters will not be loaded into the database.
Select the S-N type required.
Option Description
Entry Method = Load Selecting this option allows datasets to be loaded directly from the material
database.
Database It is possible to specify the database from which materials parameters will be
extracted. The standard method is to look for a local database called nmats.mdb&lt;br&gt;
then, if that database does not exist, look in the central directory for a database
named nmatsmas.mdb  (which is distributed with the software).
It is also possible to create named custom databases using the materials data
manager. By selecting the User option, it is possible to select data from any
database.
Database Name This field is activated when the database field is set to “user”. It is here that the user
can enter the name and location of the material database to use.
Dataset Name Typing the name of a dataset in this field causes  MFLF  to search the Materials
Data Manager (PFMAT) for that dataset. The List button will provide a list of all
material S-N datasets.
Edit Data Yes/No If a dataset was specified in dataset name (above) then it’s parameters can be edited
before a life estimation is carried out (select Yes to Edit). The edit will take place
only after the user leaves this screen.
Surface Fin ish Surface finish can have a significant effect upon fatigue life, especially with higher
strength materials. The default entry is ‘Polished’ as with a laboratory specimen,
but a whole range of predefined finishes is provided. The surface finish correction
factors that will be applied to the calculation are held in the \ mats  subdirectory.
Selecting User Defined enables the user to define a surface correction factor.
Surface T reat ment T reatments that introduce stresses, usually compressive, into the surface of a
component have a significant effect upon fatigue life. Correction factors for a
range of surface treatments are available within MFLF .
Ultimate T ensile
Strength, UTSThis field and the other fields listed below are all on the main form that comes up
when the Edit Data field is set to Yes and the OK button has been selected.
Enter the new UTS value in the units specified.
Stress Range
Intercept, SRI1This is the value of the intercept of the curve with the b1 slope on the stress range
axis.
Enter the new SRI1 value in the units specified.
First Slope, b1 Initial slope of the S-N curve - b1.
T ransition Life, NC1 This is the number of cycles at which the slope of the S-N curve changes.&lt;/p&gt;
&lt;p&gt;619 APPENDIX C
Utilities
Main Index
Second Slope, b2 This is the final slope of the S-N curve.
Entering zero will generate an implicit fatigue limit.
R-Ratio of T est, R This is a measure of the mean stress or the mean of constant amplitude signal or
the mean of stress cycle.
R=-1 is a fully reversed signal and is used in most material coupons.
Entry Method = Enter MFLF  also allows S-N curves to be entered at run time without using the
database. The parameters to be entered have been selected so that no regression
analysis is required.
The actual parameters, slopes and intercepts, required to define the damage curve
are calculated automatically.
Note that, a line is assumed between the co-ordinates (N1,S1) and (1,UTS) on the
stress axis.
Surface Finish and
Surface T reatmentSee Entry Method = Load above.
Ultimate T ensile
Strength, UTSThis field and the other fields below it are all on the new form that comes up when
the OK button has been selected.
The S-N curve is strongly affected by the materials Ultimate Tensile Strength
(UTS). Enter the UTS here.
First Life Point, N1 The default value for N1 is 1000.
Stress Amplitude at
N1, S1The default solve for stress amplitude at stress life coordinate pair 1 (cycles N1,
S1) is 1000 MPa.
Second Life Point, N2 The default value for N2 is 1E6.
Stress Amplitude at
N2, S2The default solve for stress amplitude at stress life coordinate pair N2, S2 is 200
MPa.
Slope after N2, b2 By default the second slope of the fatigue curve (b2) is 0.0.
The second slope, b2, is offered as zero which means it effectively represents a
fatigue limit. For situations where an absolute fatigue limit is inappropriate some
other slope should be entered.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities620
Main Index
Figure 3-127  Diagram Illustrating the Editable Fields of an S-N CurveR-Ratio of Test, R This is a measure of the mean stress or the mean of constant amplitude signal or
the mean of a stress cycle. R = -1 is a fully reversed single and is used in most
material coupons.
Entry Method =
Generate Approximate S-N damage curves can be generated purely on the basis of ultimate
tensile strength, UTS.
The curves are constructed by fixing the stress axis intercept (1 cycle) at the value
of the UTS, fixing the stresses at 1000 cycles and the endurance limit in
accordance with the fraction of the UTS detailed below:
Cycles  Stress
Ferrous Alloys. 1 1.000 x UTS
1,000 0.900 x UTS
1,000,000 0.357 x UTS
Titanium Alloys. 1 1.000 x UTS
1,000 0.800 x UTS
1,000,000 0.307 x UTS
Aluminum Alloys.  1 1.000 x UTS
1,000 0.700 x UTS
500,000,000 0.258 x UTS
Other Alloys. 1 1.000 x UTS
1,000 0.800 x UTS
100,000,000 0.274 x UTS
All Other Parameters The parameters below are essentially as per the Entry Method = Enter. Please refer
to that method in this table.Option Description&lt;/p&gt;
&lt;p&gt;621 APPENDIX C
Utilities
Main Index
Figure 3-128  Diagram Illustrating the Slopes and Features of the S-N Curve
MFLF Geo metry
The next page that is presented is the geometry correction screen.
Figure 3-129  The MFLF Geometry Screen
The fields are as follows:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities622
Main Index
When all the fields are filled out from the various input screens the analysis will proceed and you will be
presented with a summary page as follows:Option Description
Method You can either specify a Kf or you may calculate a Kf based on a stress concentration
value Kt, a notch root radius and any additional Kf values you wish to add. See the next
entry for a more detailed explanation.
Kt / Kf The elastic stress concentration factor, Kt, is the ratio of the maximum stress at a stress
raiser to the nominal stress computed by the ordinary strength- of-material formulae,
using the dimensions of the net section. It can be used to account for the presence of a
notch within a component or structure.
The magnitude of the Kt required depends on the nature of the notch and its geometry.
Values of stress concentration factors can be obtained from standard works such as: R.E
Peterson&amp;rsquo;s &amp;lsquo;Stress Concentration Factors&amp;rsquo;, John Wiley &amp;amp; Sons, Inc. 1974. Alternatively
use can be made of the Time Correlated Damage - (MTCD), 1147  module.
It is well known that small notches have less effect in fatigue than is indicated by Kt. This
has led to the idea of a fatigue concentration factor, Kf, which is normally less than Kt,
being introduced and being used to replace Kt within Neuber&amp;rsquo;s rule.
Kf is related to Kt according to:
Kf = 1 + ( Kt - 1) / {1 + }
where:
p&amp;rsquo; is a material constant dependent on grain size and strength and r is the notch root
radius.
If Kf is not known, then estimate the theoretical stress concentration factor, Kt, and
select the calculate option, otherwise select the direct entry option.
Notch Root
RadiusEnter the radius of the notch.
Notch Index q This is just a label that will display the notch index q once you click the OK button.
Additional Kf Enter any additional Kf value to be applied.
Calculated Kf This is just a label that will display the calculated Kf once you click the OK button.p ˜
r&lt;/p&gt;
&lt;p&gt;623 APPENDIX C
Utilities
Main Index
Figure 3-130  A Typical Page of Results
Once you accept the summary page you will then be place into the postprocessing menu where you can
change parameters, materials, methods and a variety of other inputs to perform what-if studies and re-
analysis.
MFLF Postpro cessing Menu
Once an initial analysis is finished you are presented with the following menu for post-processing purposes.
Figure 3-131  The Postprocessing Menu
The selections on this page offer the choice of rerunning the fatigue life estimation program and/or changing
any of the initial input parameters without an intermediate exit.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities624
Main Index
Analysis M ethod
The original analysis defaults to Dirlik, however you may change the analysis if desired after the initial
calculation. Dirlik is selected as the default for being the most generally applicable. It is sometimes useful to
select “All” for a comparison of all the different analysis types. This does not significantly increase the
computation time.Option Description
Loading environment This sends the user back to the loading screen (see Figure 3-123).
Analysis method This sends the user back to the type of analysis selection screen (see
Figure 3-132).
Material S-N data This sends the user back to the material S-N screen (see Figure 3-126).
Geometry definition This sends the user back to the geometry screen to modify Kf (see
Figure 3-129).
Display results This option loads the graphics module MP3D and displays any graphical
results file. Please refer Matrix Options, 370  for it’s usage instructions.
Edit psd This option will allow you to graphically edit the PSD. This may be useful
to investigate the contributions of various frequency content to damage. It
uses the graphic editor MGED described in Graphical Edit, 238  in the PTIME
module.
Preferences This allows the user to change the cut-off frequency. The cut-off frequency
is the position in the . amp file beyond which the data contribution from its
equivalent PSD is considered negligible and is, therefore, not to be used
during the analysis.
The default offered is the frequency at which 99.9% of the area under the
equivalent PSD curve is included - normally an acceptable value.
The answer should be a positive real number.
Recalculate life If any changes have been made this triggers a recalculation so that the effect
of the changes can be assessed.
Full Respecification This option restarts  MFLF  from its very beginning.
eXit Quits MFLF , discards and edits to the materials database, and saves the
results of the last run to the Notebook.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P33</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_033/</guid>
      <description>
        
        
        &lt;p&gt;625 APPENDIX C
Utilities
Main Index
Figure 3-132  Selecting the Analysis Method
MFLF B atch Operation
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if
it is omitted and an output file with the specified name already exists, batch operation will cease.
A list of MFLF’s batch keywords:
/INPut Input file name
/TYPE Input data type: P , A
/SLICE Waterfall file slice
/COFREQ Cut-off frequency
/SUNITS Units of stress in input data: M, K, P , O
/YUNI Entry field for less common stress units
/SCALE Scaling factor with respect to MPa
/METHOD Analysis method: D, N, W, H, K, S, A
/MATENT ry Mode of S-N curve entry: L, E, G
/SNDATa S-N data-set name
/MATSRC Source of materials data: S, U
/DBNAME Material database name
/EDIT Edit S-N data-set: Y, N
/SUFac Surface finish
/TREAT Surface treatment
/UTS Ultimate tensile strength
/SRI1 First stress range intercept
/B1, /B2 First slope, Second slope
/NC1 First Knee&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities626
Main Index
When batch processing with a series of different input files, it is necessary to use a new batch line and option
definition for each new input. The new line must specify the option from the post-processing menu into
which the new input will go./N1, /N2 Cycles at first point, Cycles at second point
/S1, /S2 Stress at first point, Stress at second point
/SLOPE Slope beyond second point
/GENTYP Type of material to be generated: S, A, T, O
/BINs Number of bins in histogram file: 32, 64, 128
/SAVPDF Option to save in the intermediate PDF
/OUTput Output histogram file name
/OVerwrite Overwrite existing histogram option: Y, N
/XUNITs Base units for histogram
/DURATion Duration of data in histogram
/DURUNIts Units of duration: N, M, H
/PLOt Option to plot the histogram
/PL TNAMe Histogram plot filename: Y, N
Note:   It is permissible to input more than one parameter on a batch line, but they must be different. Also,
the order in which the batch keywords appear is not critical.&lt;/p&gt;
&lt;p&gt;627 APPENDIX C
Utilities
Main Index
Stress-Strain Analysis - (MSSA)
Stress-Strain Analysis processes rosetta data, including software strain gauges. It creates outputs suitable for
use by either the stress or strain-life fatigue analyzers. It also provides an indication of the state of multiaxiality
present, suggests possible processing routines through the fatigue analyzers and has a multiaxial fatigue
analyzer. In addition to this, the module can be used to convert elastic-plastic strain records, measured on
one material, to that of another material. It can also convert elastic-plastic strain records to equivalent fully
elastic ones and vice-versa.
Strain Gau ge Rosettes
Nomenclature for strain gauge rosette analysis:
Geometrically different, but functionality equivalent configurations of rectangular and delta rosettes are
shown in Figure 3-133 and Figure 3-134.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities628
Main Index
Figure 3-133  Rectangular Rosettes
Figure 3-134   Delta Rosettes
By convention gauge numbering, 1,2,3 is counter-clockwise.
Rectangular Ro sette
Delta R osette
Trans verse SensitivityFirst strain gauge
Strain gauge at 45 to
Strain gauge at 90 to
First strain gauge
Strain gauge at 60 to
Strain gauge at 120 to
Gauge (1) strain corrected for Poisson’s strain
Gauge (2) strain corrected for Poisson’s strain
Gauge (3) strain corrected for Poisson’s strain
Kt   Transverse sensitivity factor
Kt1  Transverse sensitivity factor for gauge (1)
1
21
31
1
21
31
1
11
21
3&lt;/p&gt;
&lt;p&gt;629 APPENDIX C
Utilities
Main Index
Calculation of Principal Strains &amp;amp; Stresses
The following equations are used in the calculation of principal stress and strain from the component strains.
Rectan gular Rosette
(3-4)
(3-5)
Delta Ro sette
(3-6)
(3-7)
Tee Ro sette
and (3-8)Kt2  T ransverse sensitivity factor for gauge (2)
Kt3   T ransverse sensitivity factor for gauge (3)
Poisson’s ratio
p   Maximum principal strain
q      Minimum principal strain
max  Maximum shear strain
p     The angle from grid 1 to the max. principal
pq  The angle from grid 1 to either the max. or min. principal
p     Maximum principal stress
q     Minimum principal stress
max  Maximum shear stress
vm   Von Mises stress









pq13+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
2&amp;mdash;&amp;mdash;-12–223–2+
    =
pqE
2&amp;mdash;13+
1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1
1+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;12–223–2+
   
   =
pq123+ +
3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2
3&amp;mdash;&amp;mdash;-12+223+231+2+ +
    =
pqE
3&amp;mdash;133+ +
1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2
1+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;12–223–213–2+ +
   
   =
p1=q2=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities630
Main Index
(3-9)
(3-10)
Maxim um Shear Strain
(3-11)
Maxim um Shear Stress
(3-12)
Von Mises Stress (under conditions of plane stress)
(3-13)
Angle Between Grid 1 and the Maximum Principal Strain
Rectangular Rosette
(3-14)
Delta Rosette
(3-15)
Corrections for Transverse Sensitivity
Stack ed Tee Rosette
(3-16)
(3-17)pE
12–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;12+ =
qE
12–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;21+ =
maxpq– =
maxpq–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
VMp2pq–q2+ =
pq1
2&amp;mdash;tan1–221–3–
13–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
pq1
2&amp;mdash;tan1– 323–
212–3–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
110Kt–1Kt2– 
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
210Kt–2Kt1– 
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;631 APPENDIX C
Utilities
Main Index
Planar Tee Rosette
(3-18)
(3-19)
Stacked Rec tangular Rosette
(3-20)
(3-21)
(3-22)
(3-23)
Planar Rectangular Rosette
When the transverse sensitivities of the orthogonal gages (1) and (3) are nominally the same.
(3-24)
(3-25)
(3-26)
(3-27)
Rectangular Rosette
In the case where all three transverse sensitivities are dissimilar.1110Kt1– Kt1210Kt2–  –
1Kt1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
2110Kt2– Kt2110Kt1–  –
1Kt1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Kt1Kt2Kt3Kt= = =
110Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1Kt3–  =
210Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Kt132– +  –  =
310Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;3Kt1–  =
Kt1Kt2Kt13= =
110Kt13–
1Kt132–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;1Kt133–  =
210Kt1– 1Kt13+2Kt110Kt13– 13+ –
1Kt13+1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
310Kt13–
1Kt132–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;3Kt131–  =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities632
Main Index
(3-28)
(3-29)
(3-30)
Stacked Delta Rosette
In this case (3-31)
(3-32)
(3-33)
(3-34)
Planar Delta Rosette
When the transverse sensitivity of two of the gauges, (1) and (3) are nominally the same
(3-35)
(3-36)
(3-37)
(3-38)1110Kt1– Kt1310Kt3–  –
1Kt1Kt3–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
2210Kt2– 
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-Kt2110Kt1– 1Kt3–310Kt3– 1Kt1– +  
1Kt1Kt3– 1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; – =
3310Kt3– Kt3110Kt1–  –
1Kt1Kt3–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Kt1Kt2Kt3Kt= = =
110Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1Kt
3&amp;mdash;&amp;ndash;–12
3&amp;mdash;Kt23+ + =
210Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1Kt
3&amp;mdash;&amp;ndash;–22
3&amp;mdash;Kt31+ + =
310Kt–
1Kt2–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1Kt
3&amp;mdash;&amp;ndash;–32
3&amp;mdash;Kt12+ + =
Kt1Kt3Kt13= =
1110Kt13– 3Kt2–Kt13–Kt13Kt2–  2Kt13212Kt2– 10Kt13– 310Kt13– 1Kt2– +   –
2K2
t13Kt22Kt132– 2Kt13Kt2– 2Kt13– Kt2–3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
2210Kt2– 3Kt13+2Kt213–1v0Kt13–    –
Kt133Kt13Kt2– Kt2– 3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
3110Kt13– 3Kt2–Kt13–Kt13Kt2–  2Kt13110Kt13– 1Kt2–210Kt2– 1Kt13–  +   –
3K2
t13Kt22Kt132– 2Kt13Kt2– 2Kt13– Kt2–3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/p&gt;
&lt;p&gt;633 APPENDIX C
Utilities
Main Index
Delta Rosette
In the case where all three transverse sensitivities are dissimilar.
(3-39)
(3-40)
(3-41)
Elastic-plastic to Elastic Co nversion
Using successive elastic-plastic strain ranges, , the corresponding stress range,  is calculated from
either,
(3-42)
or,
(3-43)
The equivalent elastic strain range, e, is calculated from
(3-44)
Elastic to Elastic-pla stic Conversion
Using successive elastic strain ranges, the corresponding equivalent elastic-plastic stress ranges are calculated
from either,
(3-45)
or,1110Kt1– 3Kt2– Kt3– Kt2Kt3–  2Kt1110Kt2– 1Kt3–310Kt3– 1Kt2– +   –
3Kt1Kt2Kt3Kt1Kt2– Kt2Kt3– Kt1Kt3– Kt1– Kt2– Kt3– 3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
2210Kt2– 3Kt3– Kt1– Kt3Kt1–  2Kt2110Kt3– 1Kt1–110Kt1– 1Kt3– +   –
3Kt1Kt2Kt3Kt1Kt2– Kt2Kt3– Kt1Kt3– Kt1– Kt2– Kt3– 3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
3310Kt3– 3Kt1– Kt2– Kt1Kt2–  2Kt3110Kt1– 1Kt2–210Kt2– 1Kt1– +   –
3Kt1Kt2Kt3Kt1Kt2– Kt2Kt3– Kt1Kt3– Kt1– Kt2– Kt3– 3+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
 

E&amp;mdash;
K&amp;mdash;&amp;ndash;1n&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=

E&amp;mdash;&amp;mdash;-2
2K&amp;mdash;&amp;mdash;&amp;mdash;1n&lt;/li&gt;
&lt;li&gt;=

e
EKt2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
=
Ee2Kt2
E&amp;mdash;
K&amp;mdash;&amp;ndash;1n&lt;/li&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities634
Main Index
(3-46)
The equivalent elastic-plastic strain range, epsilon&amp;gt;, is calculated from
(3-47)
Elastic-p lastic to Elastic-plastic Conversion
This conversion uses the procedures described above to first convert the elastic-plastic strains to fully elastic
ones using the first set of material properties, and then to convert these elastic strains to elastic-plastic strains
using the second set of material properties.
MSSA Mo dule Operation
The MSSA module can be run in one of the following modes:
In stand alone mode by invoking mssa  at the system prompt as explained in Configuration, 328 .
By incorporating the MSSA commands in a batch or macro operation.
The first mode is interactive. Once running in interactive mode, the MSSA module displays the following
main menu screen.
Figure 3-135   The First MSSA Screen
Select option 1 of this menu to set up rosette calculations, and the other options are for strain conversions.
See the technical overview for a definition of these terms.
Note that if rosette calculations had been previously carried out, then it is possible to go straight to
the postprocessing menu (see Figure 3-139) via the option 1 sub menu - Analyze or Display. The
following text assumes that an analysis is being carried out.
Note also that Strain Gauge Rosette Analysis = Display uses graphics modules MMFD and MQLD
to display plots
Each menu option will be explained, starting with option 1 - Strain Gauge Rosette Analysis.Ee2Kt2
E&amp;mdash;&amp;mdash;-
K&amp;mdash;&amp;ndash;1n&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=
Ee2Kt2
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;635 APPENDIX C
Utilities
Main Index
1 - Strain Gauge Ros ette Analysis
When option 1 is selected, the following screen is displayed. On it the user must define the type of rosette
calculation to be undertaken.
Figure 3-136  Specifying the Rosette Calculation
The fields are as follows:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities636
Main Index
:
Field Description
Rosette Type MSSA supports three types of rosette configuration: rectangular, delta and tee.
Tee rosettes consist of two mutually perpendicular grids.
Rectangular rosettes have three grids, with the second and third grids angularly
displaced from the first grid by 45 and 90 degrees, respectively.
Delta rosettes have three grids, with the second and third grids 60 and 120
degrees away, respectively, from the first grid.
Rosette Construction Strain gauge rosettes are manufactured in two forms: planar, and stacked.
Stacked rosettes have the three grids layered on top of each other.
Planar rosettes have all three grids lying in the same plane.
All the gauges in a stacked rosette have the same gauge factor and transverse
sensitivity whilst the grids of a planar rosette will have slightly differing values
of these properties. In the latter case, the transverse sensitivities of grids 1 and 3
are generally the same and grid 2 is different.
The ‘User’ field allows for the case when all three transverse sensitivities are
different.
The rosette manufacturer’s data sheet should indicate the type of rosette that the
analysis is being set up for.
The number of transverse sensitivities (see below) depends upon the choice
made in this field.
T rans verse Sens. Kt1
(%)The transverse sensitivity coefficient, Kt, is defined as the ratio of the transverse
and axial gauge factors. It is used to correct measured strains for the effects of
transverse Poisson’s strains. It should not to be confused with the elastic stress
concentration factor of the same name.
The number of values to be entered is:
One Stacked Rosette Configuration
Two Planar Rosette Configuration
Three User Defined Rosette Configuration
Enter the value of transverse sensitivity coefficient as a percentage. Please refer
to the rosette manufacturer’s data sheet for the value(s) of this factor.&lt;/p&gt;
&lt;p&gt;637 APPENDIX C
Utilities
Main Index
Gauge Poi sson Ratio Errors due to transverse sensitivity and the effect of Poisson’s strains in the
calculation of stress from strain in anything other than a uniaxial field, may be
corrected by using the Poisson’s ratio of the material on which the gauge or
manufacturer’s factor was measured. For steel this value is usually, 0.285.
Please refer to the rosette manufacturer’s data sheet for the required value if
different to the default.
Input From
Files/KeyboardMSSA can calculate principals, shears, and angles from strains measured by
rosettes. These measured strains may be submitted as discrete values entered
from the keyboard, or from data files containing any number of values.
Select whether strains are to be entered manually, or read from a disc file. Note
that entering strains manually will allow a Mohr’s circle representation of the
principal strains, or stresses to be displayed as shown in Figure 3-137.
Note:  The Keyboard option requires the user to specify the stress units, and
then type the micro-strain values from the rosettes. MSSA will calculate the
principles, angles, and shears in the normal way.
Output Type This field only appears if Input From is set to Files. MSSA uses rosette strains
to calculate principals and shears in terms of either stress or strain. The
conversion from strain to stress values takes into account biaxiality caused by
significant Poisson’s strains.
Stress Units MSSA uses rosette strains to calculate principals and shears in terms of either
stress or strain. The stresses can be calculated in a number of different unit
systems. The conversion
MPa = 6.895 KSI is used
Note that the full units string, e.g. N/mm^2 must be used in conjunction with
the batch keyword.
Young’s Modulus The value of E is used in the principal stress option to convert from strain to
stress.
Poisson Ratio The value of mu is used in the principal stress option to convert from strain to
stress. It is NOT the same value entered for the Gauge Poisson Ratio.
Graphical Results When discrete Rosette Strains are entered from the keyboard, SSA offers the
option of displaying the Rosette, the principals and the angle between the
maximum principal and grid 1 in terms of a Mohr’s circle.Field Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities638
Main Index
Graphi cal Operations
Figure 3-137  Tabular and Graphical Results from Keyboard input (dependent upon Input Settings and
Graphical Results Setting on Figure 3-136)&lt;/p&gt;
&lt;p&gt;639 APPENDIX C
Utilities
Main Index
Operation of the graphics menu system is mostly standard operations described elsewhere and in Module
Operations  (Ch. 18). However menu options of particular interest to MSSA are shown in the table below. The
commands can be executed from a menu or at the command line. The menu options and command lines
are briefly described below.
:
Input Files Screen
When all of the above parameters have been defined, the input file(s) screen must be completed. Note:   The statistics shown on the graphical display are rounded to the nearest integer. Values accurate
to 3 significant figures are shown on the tabular display.
Option Description
General commands:
Strain\Stress
circleThis toggles the display between the Mohr’s circle for stress and the Mohr’s circle for
strain.
List Values Lists all the values for stress and strain to maximum accuracy (3 significant figures).
New Options  Returns the user to the Input Options screen.
Exit Will QUIT MSSA and return to the operating or menu system.
Graphics options in prompt mode:
HC Hard copy (optionally HC=filename)&lt;br&gt;
EX Exit the program&lt;br&gt;
PL Replot. In batch, switches to interactive.
MCS Show Mohr’s Circle for Stress.
MCE Show Mohr’s Circle for Strain.
LV List values numerically.
NV Enter new values.
NOP Modify options.
CU Sets cursor mode.
Keys available in this mode and in menu mode:
P Replots
H Hardcopy of entire screen (including menu)
V Display coordinate value
Q Quits cursor mode&lt;/p&gt;
&lt;h1&gt;Go from menu mode to prompt mode&lt;/h1&gt;&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities640
Main Index
Figure 3-138  The Rosette File Option screen
This screen defines the input and output files to be used for rosette calculations. There are three different
input files required for rectangular and delta rosettes or two for a tee rosette. Up to 7 output files will be
created. Use the options on this screen to limit or configure the outputs.&lt;/p&gt;
&lt;p&gt;641 APPENDIX C
Utilities
Main Index
Field Description
Input File Names, E1, E2, and E3 MSSA calculates principals, angles and shears from strains
measured by a rosette. Enter the name of the file that contains the
rosette output, in MICROSTRAIN, from grids 1, 2, and 3 of a
stain gauge rosette.
Note that for rectangular rosettes, grids 2 and 3 are angularly
separated from grid 1 by 45 and 90 degrees respectively. For delta
rosettes grids 2 and 3 are separated from grid 1 by 60 and 120
degrees respectively.
Alternatively, select the required file from the pick list of all . dac
files present in the current directory by pressing the F3 key, or by
clicking the LIST button with the mouse.
Files in other directories can be listed by specifying the appropriate
path name. The required file can be selected by tagging with either
the arrow keys or the mouse.
Generic Output Name A number of output files, which contain the calculated stresses and
strains will be created. These files will assume the generic name
specified here and are distinguished from each other by different
file extensions.
The following file extensions will be applied to the generic file
name:
.maxThe maximum principal stress or strain.
.minThe minimum principal stress or strain.
.absThe absolute maximum principal stress or strain.
.shrEither the absolute maximum or maximum shear stress or
strain.
.angThe angle between grid 1and either the absolute maximum
principal, or maximum principal, stress or strain.
.baxThe biaxiality ratio of minimum to maximum principal.
.vonThe Von Mises stress.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities642
Main Index
Von Mises Output MSSA can calculate the signed and unsigned Von Mises stresses
directly from the principals.
The unsigned value is taken to be the positive root of the Von
Mises expression. The signed value is taken to be a positive root
with the sign of the absolute maximum principal given to it.
Either signed or unsigned Von Mises stress may be used directly in
stress-based fatigue analyses.
If the None option is selected, then the Von Mises stress will not
be calculated.
Shear Output MSSA can calculate the maximum shear stress (or strain) from the
two principal stresses (or strains) respectively.
The unsigned maximum shear strain is given by the difference
between the two principal strains. The unsigned maximum shear
stress is given by half the difference of the two principle stresses.
The signed maximum shears are calculated as above, BUT with
the sign of the absolute maximum principal assigned.
Either the signed or unsigned maximum shear stresses and strains
can be used directly in stress and strain-based fatigue calculations
respectively.
If the None option is selected, then no shear values will be
calculated.Field Description&lt;/p&gt;
&lt;p&gt;643 APPENDIX C
Utilities
Main Index
Biaxiality Ratio The biaxiality ratio is the ratio of the smaller in-plane principal
stress to the larger (the absolute maximum principal). S
It can take on values which range from -1 (pure shear), through
zero (uniaxial), to +1 (equi-biaxial) loading.
As a rough guide, if the biaxiality ratio is greater than about +0.25
then fatigue calculations should employ a plane strain correction
and use the absolute maximum principal strain as input.
In the band between +0.25 and -0.25, (basically uniaxial loading),
fatigue calculations should use the absolute maximum principal as
input.
For biaxiality ratios less than about -0.25, the absolute maximum
principal can still be used or otherwise the maximum shear strain
together with shear strain life fatigue properties.
If the No option is selected, then the biaxiality ratio will not be
calculated.
Angle Option MSSA can calculate the angle between the orientation of grid 1 of
the rosette and either the maximum principal or the absolute
maximum principal stress or strain
The variation of this angle with time through a loading history
provides a valuable insight into the nature of the loading
environment. It is sometimes useful to carry out a time at level
analysis of the angle file in order to gauge angular stability. See also
the graphical output options presented in the MSSA
postprocessing menu.
If the angle is relatively stationary then the loading is said to be
proportional, and simple uniaxial or shear models can be used in
fatigue calculations.
If the angle fluctuates markedly, particularly at high strain
amplitudes, then the loading is probably non-proportional and so
fatigue analysis must use a critical-plane approach together with
kinematic hardening models.
If the none option is selected, then the angle will not be calculated.
Biaxiality Gate This value will be used to exclude any values of biaxiality for points
whose absolute maximum principal strain is less than the gate.Field Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities644
Main Index
When all of the above fields have been completed (or their defaults accepted), MSSA will process the input
files according to the user’s specification. It will then display the Rosette Postprocessing menu which allows
the results to be plotted.
Figure 3-139  The Rosette Postprocessing Menu
At this stage the required output files have been created from the rosette strains and it is possible to display
the results graphically.
Time series plots of all files can be plotted on a single display.
Crossplots of the biaxiality ratio or angle to grid 1 vs. absolute maximum principal can be also be
displayed.
Finally, an amplitude distribution, time at level, can be created and plotted.
2 - Elas tic to Elastic-plastic Analysis
The purpose of this function is to convert a strain time history of elastic only data to an equivalent elastic-
plastic strain time history file (assuming uniaxial loading).
Note:   MSSA uses the graphics module Multi File Display (MMFD) to plot the files. See Multi-File Display
(MMFD), 253 . From MMFD the user will always be returned to the Analysis Postprocessing menu.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P34</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_034/</guid>
      <description>
        
        
        &lt;p&gt;645 APPENDIX C
Utilities
Main Index
Figure 3-140  The Elastic to Elastic-Plastic Option Screen
The fields are as follows:
When the above fields have been filled the Input Material Data Screen is displayed.Field Description
Input Filename This is the name of the input file of elastic strain data. It is normally a single
parameter file, e.g. test.dac .
Output Filename Specify the name of the strain time history to create.
Kt Specify the scaling factor to be used on the linearized data. This value is simply a
strain multiplier or divisor. The stress concentration factor, Kt, may be used here
to convert from nominal to local and vice-versa. When converting from elastic-
plastic to elastic, this value is used as a divisor.
E-P Correction This field allows you to choose the plastic stress correction type.
Shape Factor Used in the Mertens-Dittmann and Seeger-Beste corrections. It is the ratio of the
plastic limit load to the yield load.
Output Type Select whether the output file will be in units of stress or strain.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities646
Main Index
Figure 3-141  The Input Material Data Screen
Figure 3-142  The Materials Data Options
There are three ways of inputting materials data.&lt;/p&gt;
&lt;p&gt;647 APPENDIX C
Utilities
Main Index
 load from the materials database using the material name or picking from the F3/List pick list. The
properties can be edited. PFMAT is the materials data source.
 entered directly into the Young’s modulus, Cyclic exponent, and Cyclic coefficient fields.
 generated from the material ultimate tensile strength (UTS) and Young’s modulus.
Specify the method to use. Depending upon the method chosen, one or more of the following fields will
appear.
When all of the above fields have been filled and accepted, the correction will be made and a results screen
displayed. A sample results screen is shown below.Field Description
Material Name All materials within PFMAT that have values for Young’s modulus and
UTS are available. The List facility is probably the easiest way of
scanning the database.
UTS (MPa) The Ultimate T ensile Strength. The value of UTS is used to generate n’
and K’ (below). This field does not appear if Load or Enter are selected.
Young’s Modulus (MPa) The value of E is used in the generation option to determine basic
material type. If the data is loaded from the database this field will be
modified each time the name is changed.
n’ n’ is the Cyclic Hardening Exponent. If the data is loaded from the
database, or generated from the UTS and E, this field will be modified
each time the name is changed or UTS/E are modified.
K’ (MPa) K’ is the Cyclic Strength Coefficient (not to be confused with cyclic
exponent above). If the data is loaded from the database, or generated
from the UTS and E, this field will be modified each time the name is
changed or UTS/E are modified.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities648
Main Index
Figure 3-143  An Elastic to Elastic-plastic Results Screen
3 - Elastic-pla stic to Elastic Analysis
This option performs the opposite conversion to that described in option 2 - Elastic to Elastic-plastic Analysis, 644&lt;br&gt;
above. However, all the screens and fields are the same as already described. Therefore, for usage instructions
please refer to the option above.
4 - Elastic-plastic to Ela stic-plastic Analysis
This option converts elastic-plastic strain records obtained with material A into an equivalent set of results
that would have be achieved by material B. The basic steps are:
 Name the input strain file (a single parameter data file), and the output file which will be created
 Specify the input material data
 Specify the output material data
The following fields need filling:
 Input File Name name (see text for Figure 3-140 above)
 Output File Name (see text for Figure 3-140 above)
Note that no Kf value is needed. The following need supplying for both input and output materials;
 Input Method (see text for Figure 3-141 above)
 Material Name (see text for Figure 3-141 above)
 Young’s Modulus (see text for Figure 3-141 above)
 n’ (see text for Figure 3-141 above)
 K’ (see text for Figure 3-141 above)
The post-analysis results screen is the same as for Figure 3-139 above.
MSSA Batch Operation
MSSA can be run in batch mode.&lt;/p&gt;
&lt;p&gt;649 APPENDIX C
Utilities
Main Index
An example batch or macro command line is shown below.
ssa /ov=y/opt=1/type=r/kt1=10/inp1=test101/inp2=test10
/inp3=test103/out=sumall
Which carries out a rectangular (TYPE=R) strain gauge rosette analysis (OPT=1) with a stacked
configuration (CON=S), transverse sensitivity (KT1) of 10%, and three INPut files. The family of output
files has the root name sumall , e.g. sumall.max , sumall.min , sumall.abs , sumall.shr .
Note that defaults were accepted for the other inputs.
A list of MSSA’s batch keywords:
/OPTion The main option (1-4). /OPT=2
/INPut The input filename. /INT=TEST1.DAC
/OUTput The output filename. /OUT=RESULT .DAC
/KT The scaling factor for conversion. /KT=1.5
/METH Material entry method for input material, L, E, G. /METH=L
/MATname Material name for input material. /MAT=RQC100
/UTS UTS for input material. /UTS=900
/YM YM for input material. /YM=2E5
/NP n&amp;rsquo; for input material. /NP=0.15
/KP K&amp;rsquo; for input material. /KP=1000
/METHOUT Material entry method for output material. /METHOUT=G
/MATOUT Material name for output material. /MATOUT=
/UTSOUT UTS for output material. /UTS=900
/YMOUT YM for output material. /YMOUT=2E5
/NPOUT n&amp;rsquo; for output material. /NPOUT=0.3
/KPOUT K&amp;rsquo; for output material. /KPOUT=1100
/MPOIS Gauge Manufacturer&amp;rsquo;s Poisson’s Ratio. /MPOIS=0.285
/TYPe Rosette Type, R, D, T . /TYP=D
/CONfig Rosette Configuration, S, P , U. /CONF=P
/KT1 ,/KT2 ,/KT3 T ransverse sensitivity factors. /KT1=1.3
/INFRom Input from File F or Keyboard K. /INFR=K
/OTYPe Output Type - Stress S or straiN N. /OTYP=N
/CONversion Stress Conversion - Linear or Non linear
/STSUNI Stress Units (MPa,KSI,PSI). /STUNI=MPA
/GRAph Whether to plot Mohr&amp;rsquo;s Circle Y, N. /GRA=Y
/E1 First strain value. /E1=1E3&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities650
Main Index
/E2 Second strain value
/E3 Third strain value
/INP1 File for gauge 1. /INP1=FILE1.DAC
/INP2 File for gauge 2. /INP2=FILE2.DAC
/INP3 File for gauge 3. /IINP3=FILE3.DAC
/OUT Generic output name for rosette calculations. //OUT=FILES.
/VON Von Mises output option signed S, unsigned U, none N. //VON=S
/SHEar Shear output option signed S, unsigned U, none N. //SHE=S
/BIAX Biaxiality ratio output yes Y, no N. /BIAX=Y
/ANGle Angle output; maximum principle M, absolute maximum principle A, none N.
/ANG=A
/POPTion Post-processing option P , B, A, D, M, X (see main menu hot keys)&lt;/p&gt;
&lt;p&gt;651 APPENDIX C
Utilities
Main Index
Multi-Axial Life Analysis - (MMLF)
MMLF is a single loc ation multiaxial fatigue analyzer based on Crack Initiation. It requires three strain input
signals which typically come from strain gauge rosettes. For rectangular rosettes the signals are separated by
45 degrees. For delta rosettes the signals are separated by 60 degrees.
As an example, take the three SAE histories that we have been using thus far ( saetrn.dac , saesus.dac ,
saebrakt.dac ), except run them through MLEN and chop them all to 1800  seconds. (See the previous section
on MLEN to learn how to do this.) We will assume that these new signals are from a rectangular rosette.
1.Invoke MMLF from the system prompt by invoking mmlf  as explained in Configuration, 328 .
2.Enter a new job name such as “ mlf_example .” It is new, so answer Yes to the ensuing question.
3.Accept all defaults for all setup screens except for these: Gauge 1: saetrn.dac ; Gauge 2: saesus.dac ;
Gauge3: saebrakt.dac ;Material Name: MANTEN
4.The analysis proceeds, the results are presented, and eventually you are placed in the Post Processing
Options. Answer Yes to any overwrite permission questions.
Go to Display results | Stress and Strain . Plot this result and any of the others you wish in this
menu selection.
Exit from MMLF when you are finished.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities652
Main Index
MMLF calculates crack initiation life from data files collected by rosette strain gauges.
MMLF incor porates a Mròz-Garud cyclic plasticity model, together with a generalized form of the Wang-
Brown multiaxial rainflow and damage accumulation procedures. The program also incorporates a variety of
Note:   Strain signals input to MMLF are assumed to be elastic-plastic. No elastic-plastic corrections are
performed in MMLF . Use MSSA and/or SSG to do this if necessary from FE data .&lt;/p&gt;
&lt;p&gt;653 APPENDIX C
Utilities
Main Index
other criti cal plane damage models. The program requires measured strains from strain gauge rosettes as
input, together with uniaxial cyclic material properties.
The software can handle general non-proportional biaxial loadings.
Summary of Method
Uniaxial methods for life prediction using the local strain approach have been in use for some time, having
their roots in the work of Basquin (Ref. 52), Manson (Ref. 53), and Coffin (Ref. 54)(Ref. 55), incorporating
rainflow cycle counting and material memory and Miners rule (Ref. 57). Within the well known limitations
of these methods they work quite well for a variety of components where the local loading in the critical area
is uniaxial or near-uniaxial. This class of components includes many that are subject to complex multiaxial
loading environments (Ref. 49)(Ref. 50). However, there are many other components where a combination
of loads and geometric effects generates local loadings which are proportional or non-proportional
multiaxial.
The life prediction process from measured strains can be divided into two steps. The first step is to determine
the relationship between the measured strains and all the stress and strain components required for the
damage calculation, through application of a cyclic plasticity model. The second step is to carry out cycle and
damage accumulation. MMLF addresses problems where the strains can be measured with a rosette, i.e.
biaxial loading on a free surface. For these problems the process can be summarized by the flow chart in
Figure 3-144:
Figure 3-144  Outline of Strain-based Life Prediction Process
The approach for calculations on the basis of elastic finite element analyses is similar, except that the input
strains are elastic strain components from the surface of the structure, and a notch correction procedure are
required in addition to the cyclic plasticity model to estimate the elastic-plastic stresses and strains (Ref. 59).
The essential calculations made by MMLF are as follows:
1.It takes three strain channels from a strain gauge rosette and convert them to the components of strain
y and  taking into account the transverse sensitivities of the gauge legs. The gauge
coordinate system is defined by x parallel to gauge 1 and z as the outward surface normal.
2.It feeds these 3 strain channels into the Mròz-Garud cyclic plasticity model, the outputs of which are
the remaining non-zero strain component and the in-plane stresses  and .
3.It processes the resulting seven components of stress and strain either by the conventional critical
plane methods, or by multiaxial rainflow counting and then accumulating damage using the Wang-
Brown methods.
These calculations are described in more detail in the following sections.
xyxy
zxyxy&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities654
Main Index
Cyclic Plasti city Modeling
The stresses and strains required by the damage models can be calculated if the relation between the
equivalent plastic strain increment  and the equivalent stress increment  is known during the
application of a given load increment.
However, it is known that the current relation depends on the previous load path and therefore, the plasticity
model must deal with loading path dependent material constitutive behavior.
Several models are available in the literature (Ref. 45), (Ref. 46), (Ref. 60), (Ref. 61) of which the model
proposed by Mr òz and recently modified by Ga rud are the most popular. Mròz has proposed that the uniaxial
stress-strain material curve be represented by a set of plasticity surfaces in three dimensional stress space. In
the case of a two dimensional stress state, the plasticity surfaces reduce to ellipses on the plane of principal
stresses described by:
(3-48)
and illustrated in Figure 3-145.
Figure 3-145  Linearization of the Material Curve and Corresponding Plasticity Surfaces
The load path dependent memory effects are modeled by prescribing a translation rule for the ellipses moving
with respect to each other over distances given by the stress increments. It is also assumed that the ellipses
move inside each other and they do not intersect. If the ellipses come in contact with one another they move
together as a rigid body.
The translation rule proposed by Garud avoids the intersection of the ellipses that could occur in some cases
in the original Mròz model. The Garud translation rule is illustrated in Figure 3-146 and can be described by
a model consisting, for simplicity, of only two plastic surfaces (ellipses).eqeq
eq121–222+ =&lt;/p&gt;
&lt;p&gt;655 APPENDIX C
Utilities
Main Index
Figure 3-146  Geometrical interpretation of the Mròz-Garud incremental Plasticity Model
In order to predict material response due to the stress increment d , the following steps are made:
1.Extend the stress increment d  to intersect the first external non-active plastic surface  f2 at point B2.
2.Connect point B2 and the center of the intersected plastic surface f2.
3.Find point B1 on the active plastic surface f1 by drawing a line parallel to the line O2B2 through the
centre O1 of the surface f1.
4.Connect the conjugate points B1 and B2 by the line B1B2.
5.Translate the ellipse  f1 in the direction of B1B2 from point O1 until the end of the vector d  lands
on the moving ellipse f1.
The translation rule assures that the two ellipses are tangential with the common point B1B2 without
intersecting each other. T wo or more tangential ellipses translate as a rigid body and the largest moving ellipse
(Figure 3-146) indicates the proper constitutive relation (linear segment) to be used for a given stress
increment. The principal of the method is described here for two surfaces. MMLF uses 40, with the&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities656
Main Index
corresponding linear sequences being fitted to the Ramberg-Osgood equation to give a more or less smooth
curve. More details of this method can be found in (Ref. 47).
Multiaxial Rainflow Counting
Wang and Brown (Ref. 62) proposed a multiaxial cycle counting method on the basis of strain hardening
behavior under non-proportional variable amplitude loading. Relative stresses and strains were introduced so
that a pair of turning points define the start and end points of a reversal, where the equivalent relative strain
rises monotonically to a peak value. Since plastic deformation generates the driving force for small fatigue
cracks, hysteresis hardening provides a physical parameter for cycle counting, analogous to rainflow counting
in the uniaxial case.
Each reversal commences with elastic unloading, which is followed by reloading and plastic strain hardening
up to the next turning point. The most significant turning point occurs at the highest value of equivalent
strain. This is illustrated at time 0 in Figure 3-147, which shows a repeating block of a combined
tension/torsion non-proportional load history. The equivalent strain is defined as the von Mises strain.
Figure 3-147  A Variable Amplitude Non-proportional Strain History, Tensile (epsilon), Torsional (gamma) and
Absolute Equivalent Strain&lt;/p&gt;
&lt;p&gt;657 APPENDIX C
Utilities
Main Index
The cycle counting method is illustrated by the following example. Starting from the most significant turning
point, a graph is drawn for the loading block of relative equivalent strain, where relative strain
represents the change of strain since time A. Figure 3-148 shows the relative equivalent
strain, with respect to times 0, 10 and 20 seconds. Using the relative strain, a reversal can be defined starting
from 0, up to the maximum value 10 seconds. T o obtain the second reversal the relative strain is re-plotted
starting from the next turning point where unloading commences (at 10 seconds), and the portions of the
strain hardening curve for the reversal are selected by a traditional rainflow procedure (Ref. 47). The region
of unloading and reloading within that reversal is counted in the next step.
Figure 3-148  The Variable Amplitude History: Equivalent Strains with Respect to Times 0, 10 and 20
Using the next turning point, relative strain is replotted with respect to 20 seconds for the subsequent
continuous fragment of strain history, yielding the third reversal. This procedure is repeated for each turning
point in chronological order, until every fragment of strain history has been counted. The recursive nature
of this process makes this module significantly slower than other analysis modules such as MCLF .
Fatigue Damage Calcu lation
The counting method described above is independent of fatigue damage parameters, being based on
hysteresis deformation behavior. Being unrelated to material properties, it can be integrated with any
multiaxial fatigue damage model. If the counted reversals are non-proportional, a fatigue damage parameter
that accounts for non-proportional straining effects is required. The path-independent damage parameter
proposed by Wang and Brown (Ref. 63) has been shown to provide good correlation for several materials
under proportional and non-proportional loading,
(3-49)*
ijijA
ij– =
ˆmaxSn+
1vS1v– ++&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 
f2n,mean–
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Nfb
f2Nfc+ =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities658
Main Index
where  max is the maximum shear strain amplitude on a critical plane (proportional or non-proportional),&lt;br&gt;
n is the normal strain excursion between the two turning points of the maximum shear strain (that is the
range of normal strain experienced on the maximum shear plane over the interval from start to end of the
reversal), and  n,mean  is the mean stress normal to the maximum shear plane. This can be omitted if no mean
stress correlation is required. If mean stress is included, this is equivalent to the Morrow method. The term
S is a material constant determined from a multiaxial test (typically between 1 and 2 for Case A and around
0 for Case B) and v‘ is the effective Poisson’s ratio. The right hand side of the equation is the same as the
uniaxial strain life equation, with a Morrow mean stress correction (Ref. 64). Mean stress is measured as the
average of the maximum and minimum stress values over the reversal. The total damage induced by a loading
history is calculated using Miner’s rule.
Figure 3-149 is a plot of predicted life against experimental life for a variety of proportional and non-
proportional tests on laboratory specimens, from (Ref. 48).
Figure 3-149  Comparison of Experimental and Predicted Results for the Wang-Brown Method
The other multiaxial damage parameters considered are the more conventional critical plane parameters. In
these methods, stresses and strains are resolved onto a particular plane, inclined at an angle = 90 degrees
(Case A) and/or  = 45 degrees (Case B) to the free surface. Cycle counting (uniaxial) and damage parameter
calculation is carried out on the critical plane and the damage accumulated. The orientation  of the
projection of the normal to the damage plane is increased by 10 degree increments from 0 to 170 degrees.
The plane with the largest accumulated damage is said to be the critical plane. The models are:
1.Norm al strain ( = 90 degrees only):
(3-50)




n
2&amp;mdash;&amp;mdash;&amp;mdash;f
E&amp;mdash;&amp;mdash;-2Nfbf2Nfc+ =&lt;/p&gt;
&lt;p&gt;659 APPENDIX C
Utilities
Main Index
is the strain amplitude normal to the critical plane. Otherwise this is the usual Coffin-Manson-
Basquin equation, where .
2.Shear s train:
(3-51)
3.Smith-Watson-Topper/Banna ntine (  = 90 degrees only) (Ref. 65):
(3-52)
where , max is the maximum normal strain on the critical plane which occurs during each
rainflow cycle. Otherwise this is the Smith-Topper-Watson method (Ref. 66).
4.Fatemi-So cie (Ref. 67):
(3-53)
Applications
MMLF may be used to predict the life of components and structures, to provide some help in design
optimization, and to assist in the design of efficient tests through fatigue editing. The main drawback of the
program is that it is necessary to place a strain gauge rosette on the critical location or crack initiation site in
order to get a reliable prediction. This is due to the fact that there is no simple transfer function between the
measured strains at a non-critical location and the strains at a nearby critical location when the loading is
non-proportional.&lt;br&gt;
Three applications of the multiaxial fatigue program will be described to illustrate the method.
Example 1: Fatigue calculations on an automotive wheel
This example is based on strain gauge measurements from an automotive wheel. The wheel was tested on a
rig simulating the rotation of the wheel under load, and the strain gauge measurements were taken using a
45 degree rosette placed in the most critical location. This location was identified by previous stress analysis.
A small section of the three strain gauge channels is illustrated in Figure 3-150.n
2&amp;mdash;&amp;mdash;&amp;mdash;

2&amp;mdash;&amp;mdash;1Ve+f
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Nfb1Vp+f2Nfc+ =

n
2&amp;mdash;&amp;mdash;&amp;mdash;nmaxf2
E&amp;mdash;&amp;mdash;&amp;ndash;2Nf2bff2Nfbc+ + =
n

2&amp;mdash;&amp;mdash;1nnmax
y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +
    1Ve+f
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Nfbn1Ve+f
2Ey&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2Nf2b1Vp+f2Nfcn1vp+ff
2y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Nfbc++ + + =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities660
Main Index
Figure 3-150  Section of Strain Measurements from Wheel Critical Location
The three channels of strain are more or less sinusoidal with a phase difference between them, indicating that
the stress state is multiaxial and non-proportional. The two cycles shown above are taken from a longer
history. The stress-strain state variations can be better understood qualitatively by looking at the behavior of
the principal stresses as illustrated in Figure 3-151, where it can be seen that the two principal stresses are almost
in phase, but with slightly different amplitudes and means. Notice that the absolute maximum principal stress
(the principal stress with the largest magnitude) “flips” between the maximum and the minimum principals.
Whenever it does this of course, the angle also flips through 90 degrees indicating that the state of stress has
reached a condition where E.MAX and E.MIN are equal and opposite, i.e. pure shear. In fact the stress state
behavior can be summed up by saying that when the stress is at a maximum or minimum, the stress state is
almost equibiaxial, and in between times it passes through a condition of pure shear where the stresses are
lower. Between the two limits the principal stress axis rotates through 90 degrees, so that there is a complete
rotation (180 degrees) per cycle. These files were generated using SSA.&lt;/p&gt;
&lt;p&gt;661 APPENDIX C
Utilities
Main Index
Figure 3-151  Absolute Maximum (E.ABS), Maximum Principal (E.MAX), Minimum Principal (E.MIN) and Angle
of the Absolute Maximum Principal Stress to Gauge 1 Against Time&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities662
Main Index
Figure 3-152  Plot of Biaxiality Ratio and Angle Against Absolute Maximum Principal Stress
Another way of looking at this data is to plot the biaxiality ratio (the ratio of the smaller in magnitude to the
larger principal stress) and the orientation against the largest principal stress. This is shown in Figure 3-153 for
1 cycle.
The results of analysis of the full loading history are given below with the results of some other methods for
comparison.
These results are all very similar, with the notable exception of the normal strain method which is relatively
non-conservative.Method Life (Rotations)
Wang-Brown (S = 1 for Case A, 0 for Case B) 1.03x106
Wang-Brown + Mean (S = 1,0) 7.07x105
Normal Strain 5.54x106
Smith-T opper-Watson (Bannantine) 9.43x105
Shear Strain 5.95x105
Fatemi-Socie (n = 0.6) 5.17x105
Experiment &amp;gt; 200000
(Test stopped with no failure)&lt;/p&gt;
&lt;p&gt;663 APPENDIX C
Utilities
Main Index
It is normal to view the accumulated rainflow cycles in an analysis in the form of a 3D histogram plot.
Normally the axes are range-mean or max-min or from-to. With the Wang-Br own method, each cycle is
characterized by shear strain range, normal strain range, mean normal stress, and two angle  and . The
distribution of numbers of reversals and damage may reasonably be visualized in relation to any two of these
parameters. Figure 3-153 shows the distribution of reversals in relation to shear strain range and normal strain
range.
Another potentially useful way of viewing the results is in the form of a polar plot of damage, as shown in
Figure 3-154. In this case there are only Case B damaging cycles, so there is only one curve on the plot. This
plot was produced with the polar display program MPOD.
Figure 3-153  One Representation of Rainflow Count.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities664
Main Index
Figure 3-154  Polar Plot of Log (damage) Against Orientation 
Example 2: Fatigue life prediction of a steering rack mounting bracket
This example concerns a sign-off test which is carried out on a front suspension cross-member and steering
rack assembly. The steering rack is mounted to the cross-member by means of two small brackets, which are
fatigue-sensitive areas. The assembly is tested by fixing the cross-member and applying a constant amplitude,
unidirectional load to the steering rack. The resulting stress state variations are illustrated in Figure 3-155.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P35</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_035/</guid>
      <description>
        
        
        &lt;p&gt;665 APPENDIX C
Utilities
Main Index
Figure 3-155  Plots of Principal Stress Ratio (left) and Principal Axis Orientation (right) Plotted Against Absolute
Maximum Principal Stress
These plots show that the single-axis loads applied generate locally a near-uniaxial, near proportional stress
state. The results of analysis with the new program, assuming 99.9% certainty of survival (based on the
calculated standard errors on the material parameters) are as given in below.
Example 3: Fatigue editing on an off-road vehicle rear axle
This example illustrates how the program can be used to reduce testing times through multiaxial,
multichannel fatigue editing of simulation test rig drive files. The component in question is a rear axle from
an off-road vehicle. The axle is instrumented with three strain gauge rosettes close to critical locations, and
analysis of the measurements from all three strain gauge rosettes show that the loading is non-proportional.
It is desired to reduce the testing time by editing the rig drive signals while retaining all the sections of the
original sections that cause significant damage. This was carried out using a simple editing procedure.
One of the outputs of the life prediction program is a time-correlated damage file, essentially a time history
of damage. This file is a record of the damage accumulated, with damage for each reversal being distributed
between the opening and closing point of each reversal. The signal is divided up into a number of equally
spaced windows, and the least damaging are discarded until a certain percentage of damage is retained. In
this example, 95% was retained. The time slices to be retained are compared across the three channels with Method Life (Repeats)
Wang-Brown (S = 1,0 24
Wang-Brown + Mean (S = 1,0) 23
Normal Strain 33
Smith-T opper-Watson (Bannantine) 22
Shear Strain 23
Fatemi-Socie (n = 0.6) 23&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities666
Main Index
a logical OR operation and all the resulting windows are retained. The resulting edit vector can be used to
edit the rig drive signals, inserting suitable joining functions for continuity. It is also important to edit the
strain signals and recalculate the life in order to check the likely effect of editing on the fatigue damage. This
is important because of the possibility of reversals starting in one window and ending in another, and also
because in multiaxial loading the loading path is important as well as the peaks. In some cases, editing the
signals may actually cause a slight increase in fatigue damage. This is why methods such as described in (Ref.
68) are not really suitable for non-proportional loadings because they do not retain the important sections of
the loading path. The results of the analysis described are summarized below and the original and edited strain
signals for Gauge 1 are illustrated in Figure 3-156.
Figure 3-156  Strain Signals Before and After Editing
The advantages of this method are that it retains both the most important sections of loading path, and the
essential frequency content of the loading, essential for components with dynamic behavior.
MML F Module Operation
The MMLF module can be run in one of the following modes:
In stand alone mode by invoking mmlf  at the system prompt as explained in Configuration, 328 .
By incorporating the  MMLF  commands in a batch operation
Once running in interactive mode the MMLF module displays the following screen.Gauge NumberOriginal Signal
Predicted Life
(repeats)Edited Signal
Predicted Life
(repeats)Actual Damage
RetainedData Reduction
Factor
1 13866 14079 98.5 8.25
2 29770 30188 98.6 8.25
3 53200 53800 98.8 8.25&lt;/p&gt;
&lt;p&gt;667 APPENDIX C
Utilities
Main Index
Figure 3-157  The First MMLF Screen
The user must enter the name of an Input Job File, the extension . fjb will be appended automatically. If the
name of an existing Job File is entered then MMLF will go to the postprocessing menu screen. If a new job
is specified then its parameters have to be entered in a series of windows. If no name is entered then the results
of processing may NOT be saved.
If a new job is specified, its name is specified in this window and its parameters in subsequent windows.
The flow chart below illustrates the major routes through MMLF .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities668
Main Index
Figure 3-158   The General MMLF Module Structure&lt;/p&gt;
&lt;p&gt;669 APPENDIX C
Utilities
Main Index
The above flowchart is mirrored by the options that are on the Post-processing menu illustrated in
Figure 3-169. If a new job is being defined, then the following screen will appear.
Rosette D efinition
Figure 3-159   The MMLF Geometry Screen
Field Description
Input Type Input can be either from a Rosetta or from a set of tensor strains (e.g,
from FE).
Rosette T ype MMLF supports three types of rosette configuration: rectangular , delta ,
and tee. T ee rosettes consist of two mutually perpendicular grids, which
should be aligned with the principal stresses. Rectangular rosettes have
three grids, with the second and third grids angularly displaced from the
first grid by 45 and 90 degrees, respectively. Delta rosettes have three
grids, with the second and third grids 60 and 120 degrees away,
respectively, from the first grid. See the technical overview of SSA for
details.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities670
Main Index
Rose tte Construction Strain gauge rosettes are manufactured in two forms, planar , and stacked .
Stacked rosettes have the three grids layered on top of each other. Planar
rosettes have all three grids laying in the same plane. All the gauges in a
stacked rosette have the same gauge factor and transverse sensitivity
whilst the grids of a planar rosette will have slightly differing values of
these properties. In the latter case, the transverse sensitivities of grids 1
and 3 are generally the same and grid 2 is different. The ‘User’ field allows
for the case when all three transverse sensitivities are different. The rosette
manufacturer’s data sheet should indicate the type of rosette that the
analysis is being set up for. The number of transverse sensitivities (see
below) depends upon the choice made in this field.
T rans verse sens. Kt1 (%) The transverse sensitivity coefficient, Kt, is defined as the ratio of the
transverse and axial gauge factors. It is used to correct measured strains
for the effects of transverse Poisson’s strains. It should not to be confused
with the elastic stress concentration factor of the same name. The
number of values to be entered is&amp;hellip;
One - Stacked Rosette Configuration
Two - Planar Rosette Configuration
Three - User Defined Rosette Configuration
Enter the value of transverse sensitivity coefficient as a percentage. Please
refer to the rosette manufacturer’s data sheet for the value(s) of this factor.
In practice this may make little difference to the results.
Poiss on’s Ratio The gauge’s   (not the test material’s) Poisson’s ratio (ratio of the fractional
contraction in breadth to the fractional increase in length) is entered here.
This is the Poisson’s ratio of the material on which the gauge factor was
measured. For steel the value is usually 0.285. Please refer to the rosette
manufacturer’s data sheet for the required value if different to the default.Field Description&lt;/p&gt;
&lt;p&gt;671 APPENDIX C
Utilities
Main Index
Service Loading Environment
Figure 3-160   The MMLF Loading Environment Screen
The Service Loading fields are as follows:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities672
Main Index
Field Description
Gauge1 / Gauge 2 /
Gauge 3The three files that contain the rosette strain gauge data can be typed
individually (or picked using the pick list button) into fields Gauge 1, 2 and
3.
Time Window Not all of the Loading Time History file has to be used in the calculation. If
only a part of the file needs to be used then the start point and end point can
be specified in the Time Window. The default is to use all of the time history
file, which is why the defaults are START and END.
If a part only is going to be used, then clear the fields and enter the values,
i.e. 10 in the Start field and 1000 in the End. Alternatively, the syntax
START+n and END-n&amp;rsquo; where n is a number of units (e.g. seconds) from the
start of the file and n&amp;rsquo; is a number of units before the end of the file. START
and END are usually recorded in the header area of the input file. Please note
that START is not necessarily zero.&lt;/p&gt;
&lt;p&gt;673 APPENDIX C
Utilities
Main Index
Scale Factor The scale factor is an amount by which the history will be multiplied.
Multiple scale factors can be entered. For example entering (-500,1000,50)
in the field will scale from -500 to +1000 inclusive in steps of 50, i.e.
from to      in steps of
-500, 1000, 50
BACK may also be entered in which case MMLF will calculate the scale
factor needed to achieve the required design life. See the online help for
further examples of multiple entry and arithmetic operations with keywords.
Strain Gate The gate is, in effect, a filter that may speed processing by filtering any small
cycles that are unwanted (for example signal noise). The gate value should
not be set too high or it will filter out relevant parts of the signal. Any signal
smaller than the gate value specified in this field will be ignored in the life
calculation.
Multiple gate values can be entered using the same syntax as the example
given for scale factors (above). No results file will be saved if a multiple
analysis is carried out. A multiple gate analysis can be used to assess the gate
value so that the user can choose the gate threshold that just fails to remove
genuine damaging events.
The gate threshold value is sensitive to changes in material. Also if a signal is
scaled up by 2 the gate is NOT automatically scaled up by 2, the user must
manually scale up gate.
These files equivalent
to&amp;hellip;..repeatsThe fatigue analysis to be carried out is through the use of a either a time
series, range-mean matrix or a sequence of peak valleys. The results will
normally be presented in the form of the number of repeats of these series to
failure.
An equivalent unit, such as miles, laps, hours, etc. can be attached to the
input loading file so that results can be presented in the form of miles, laps
or hours to failure.
In these fields, enter the units laps, and the number of them that the loading
series is equivalent to.
Note that the units and their number will be stored within the extra details
area of the input data file using EQUUNITS and NUMEQUNI as keywords
respectively.Field Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities674
Main Index
Model Parameters
Figure 3-161  MMLF Model Parameters
The fields are as follows:Note:   Only 1 field from Scale Factor, or Strain Gate (see below) can have multiple values entered.
Attempts to enter multiple values in more than 1 of these fields will result in an error message. This
limitation also affects the % Certainty of Survival field on the Calculation Parameters screen or any
field with a SHOW button.&lt;/p&gt;
&lt;p&gt;675 APPENDIX C
Utilities
Main Index
The damage accumulation methods are:
1.Normal St rainField Description
% Certainty of Survival Any fatigue life prediction has associated with it a degree of
uncertainty. T o incorporate the effects of scatter in the strain life data,
a % certainty of survival value can be entered here. This option is
similar to that in any other utility m odule.
Damage Accumulation Method MMLF supports 6 multiaxial damage accumulation methods. Options
1 - 4 are conventional critical plane methods, whereas options 5 and 6
are more sophisticated and are described in more detail in the technical
background.
The conventional critical plane methods work by calculating the
normal or shear strains and normal stresses on a particular plane,
before carrying out cycle counting and damage accumulation more or
less in the normal way. The orientation of the plane is defined by 2
angles  and . The angle  is the angle made by the free surface
normal and the normal to the current plane. The angle  is the angle
made by the projection onto the free surface of the normal to the plane
and the local x-axis (gauge 1). A variety of angles are calculated and the
one with the worst damage is taken to be the critical plane.
Because the damage parameters are essentially either normal strain or
shear strain based, q takes values of 90 (Case A) or 45 (Case B) degrees.
The angle  can take any value in theory. In the program  is increased
in increments of 10 degrees. If only case A is calculated, as in options
1 and 2, 18 planes are evaluated. Otherwise, 36 planes are considered.
The Wang-Brown and Wang-Brown + Mean are considered the best of
these methods. If you have a uniaxial loading with no mean stress, all
these methods will give almost the same result. The methods are
described below this table.
Begin Stress-Strain T racking at The Wang Brown method of cycle counting always starts from the
maximum equivalent strain. If you wish to start the stress strain
tracking from this point also, then select Maximum equivalent. This is
better as it minimizes the effect of transient behavior at the beginning
of the strain history. Otherwise select Start to begin stress-strain
tracking from the start of the strain history file.
Miners Co nstant You can adjust Miner’s constant as with other utility m odules. See the
comment below regarding Miner’s rule.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities676
Main Index
This is a simple “critical plane method”. The damage parameter is the normal strain n used in
conjunction with the Coffin-Manson-Basquin equation.
2.SWT/Bannantine
This method is very similar to the normal Smith-Watson-Topper method. In additional to the
normal strain, the damage parameter includes the maximum normal stress . This is the
maximum normal stress occurring in each rainflow cycle. The difference with the normal SWT
method is that the maximum normal stress does not necessarily occur at the same time as the
maximum normal strain.
3.Shear Str ain
The shear strain method is similar to the first option, except that it uses shear strain only, and the
parameters   and  are modified accordingly.
4.Fatemi-Socie
The Fatemi-Socie method uses shear strain and maximum normal stress. Note that it requires two
extra parameters: the yield stress of the material and a dimensionless parameter n. Make sure you have
defined a yield stress for the material if you want to use this method. These parameters effectively
control the relative importance of the shear strain and the normal stress. Typical values of n are from
0.4 to 0.6.
5.Wang-Bro wn, and
6.Wang Brown + Mean
These methods are described in more detail in the Summary of Method, 653 .
Regarding Miner’s constant, operation at a strain amplitude  will result in failure in, say, N1 cycles.
Operation at the same strain amplitude for a number of cycles less than N1, Nj say, will result in a smaller
fraction of damage, Dj, which is often referred to as a partial damage. Operation over a spectrum of different
strain levels, results in a partial damage contribution Di from each strain cycle,i. Failure is then predicted
when the sum of these partial damage fractions reaches unity so that:n
2&amp;mdash;&amp;mdash;&amp;mdash;f
E&amp;mdash;&amp;mdash;-2Nfbf2Nfc+ =
n, max
n
2&amp;mdash;&amp;mdash;&amp;mdash;nmaxf2
E&amp;mdash;&amp;mdash;&amp;mdash;2Nf2bff2Nfbc++ =
ff

2&amp;mdash;&amp;mdash;1ve+f
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2Nfb1vp+f2Nfc+ =

2&amp;mdash;&amp;mdash;1nnmax
y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +
    1ve+f
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2Nfbn1ve+f2
2Ey&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2Nf2b1vp+f2Nfc+ + =n1vp+ff
2y&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;2Nfbc++
1&lt;/p&gt;
&lt;p&gt;677 APPENDIX C
Utilities
Main Index
D1 + D2 +&amp;hellip;&amp;hellip; + Di-1 + Di   1
The Palmgren-Miner rule asserts that the partial damage at any strain amplitude , or STW level, is linearly
proportional to the ratio of number of cycles of operation, ni, to the total number of cycles that would
produce failure at that strain level, Ni i.e.:
Di  =  ni / Ni
Failure is predicted then if:
or
The above equations represent a statement of the linear damage rules used by all the fatigue analyzers.
Experience shows that linear damage summation is somewhat of an over-simplification of reality. The most
important shortcoming is that no account is made of the sequence in which strain levels are experienced, and
damage is assumed to accumulate at the same rate for a given strain level regardless of prehistory. In particular,
it appears that large strain amplitudes which precede smaller ones, cause the smaller cycles to become more
damaging than expected and visa versa. The net result is that in the first instance, the Miners&amp;rsquo; sum (total of
(n/N)) is measured to be less than 1 and in the latter case, it becomes greater than 1. Since most service
environments involve quasi-random loading sequences, the use of the Palmgren-Miner linear damage rule
summing to a constant of 1 is mostly satisfactory. However, provisions have been made within MMLF to set
the Miners&amp;rsquo; sum to any desired value.i
n1/N1n2/N2+ &amp;hellip;.. + ni-1/Ni-1+ni/Ni1 +
niNi1
1i
&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities678
Main Index
Material Data Input
Figure 3-162   The material Data Input screen
The multiaxial local stress-strain fatigue analyzer requires a characterization of the material from which the
component or part is manufactured. This characterization is accomplished through a set of parameters
generated by strain-controlled testing smooth specimens of the material in question.
This screen allows selection of material data-sets to be made. It is possible to either load the desired parameters
from the PFMAT data base, to load them from a user custom database (any name allowed) or to enter them
directly from the keyboard, or to generate them from empirical rules based on tensile properties.&lt;/p&gt;
&lt;p&gt;679 APPENDIX C
Utilities
Main Index
Field Description
Entry Method = Load Selecting this option allows data-sets to be loaded directly from the material
database.
Database Allows you to specify the database from which materials parameters will be
extracted. The default is to look for a local database called NMATS.MDB. If
the User option is selected, then a database name must be specified.
Database Name Specify the name of the database to use.
Material Name Material data-sets are loaded directly from the material database. Each data-
set has a unique name through which it can be referenced. The PICK LIST
button, can be used to list all the available data-sets and the cursor used to pick
the required set. The data base manager, PFMAT , can also be used to search
for materials with specific characteristics. The search operation needs to be
carried out outside this program, perhaps in multiaxial mode.
Edit Data Yes/No/Reload Having selected a material data-set from the database, it is possible to edit the
parameters prior to a life estimation. Select yes if you require to edit the
material parameters prior to (re)calculation. The edit function itself will be
present on exit from this screen. Select reload to undo any previous edits by
reloading the named material from the database.
Entry Method = Enter Material data parameters may be entered directly from the keyboard. The
parameters entered will be loaded into the job file and remain active until
overwritten or another job selected. They will NOT be loaded into the
PFMAT database. If a particular set of parameters is to be used often, then it
is recommended that they be loaded within the database by running PFMAT.
To enter parameters, move the highlight cursor to the required position and
enter the value in the appropriate units. Stress units can be customized in the
preferences menu. All of these parameters are described in Material Management&lt;br&gt;
(Ch. 4).
Entry Method = Generate
(Material Parameters) Selecting this option will send the user to a separate Material Data Generation
screen that prompts the user to enter the data needed to generate a data set.
The form in Figure 3-163 is displayed and the various field are explained in the
table that follows the figure.
Surfa ce Finish This field is provided because surface finish can have a significant effect upon
fatigue life, especially with higher strength materials. The default entry is
&amp;lsquo;Polished&amp;rsquo; as with a laboratory specimen, but a whole range of predefined
finishes is provided. The surface finish correction factors that will be applied
to the calculation are held in the /mats  sub-directory. Selecting User Defined&lt;br&gt;
enables the user to define a surface correction factor. Selecting all will cause
MMLF to calculate the fatigue lives for the whole range of Surface Finishes.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities680
Main Index
Figure 3-163   Generating a Materials Data SetSurface T reat ment T reatments that introduce stresses, usually compressive, into the surface of a
component have a significant effect upon fatigue life. Correction factors for a
range of surface treatments are therefore available within MMLF . Selecting
ALL will cause MMLF to calculate the fatigue life for the entire range of
surface treatments. &amp;lsquo;All&amp;rsquo; can NOT be entered for both Surface Finish and
Surface T reatment at the same time.
Fatemi-Socie Para meter
“n”The Fatemi-Socie method requires two parameters to be defined which are
not normally required for a fatigue analysis, namely the yield stress of the
material and a dimensionless parameter n. The value of n/y controls the
relative importance of the maximum normal stress and the shear strain range
for the damage parameter.
Material parameter “s” The Wang-Brown method uses a damage parameter .
The parameter S controls the relative importance of the shear and normal
strain range on the critical plane, for Case A only. For Case B, S is set to 0. In
general values of S are in the range 1 to 2. A value of 1 will tend to be a little
conservative, so is a reasonable default.Field Description
ˆmaxSn+
1vS1v– ++&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;681 APPENDIX C&lt;/dt&gt;
&lt;dt&gt;Utilities&lt;/dt&gt;
&lt;dt&gt;Main Index&lt;/dt&gt;
&lt;dt&gt;Regarding surface finish and treatment: the effect of surface treatment depends on the surface finish. The&lt;/dt&gt;
&lt;dt&gt;increase in endurance limit with stress due to the surface treatment is given below.&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Whatever correction was made by the surface finish, then applying a surface treatment will have a subsequent
effect taken from the table above. For example if machining reduces the endurance limit by 50%, and it is
wished to recover the loss, then from the table it can be seen that cold rolling will increase the limit by +70%.Field Description
Material Type Steel, Titanium, Aluminum, Other
Ultimate T ensile Strength (UTS) Enter a value for the UTS in the units specified. The parameters
required to characterize cyclic material properties can be generated
purely on the basis of this field.
Standard Error of Log( ) - SE Enter a value for the standard error of log( ). The value will apply
equally to the elastic life line, the plastic life line, and the cyclic stress
strain curve.
Youngs Modulus - YM Enter a value for the modulus of elasticity (Young&amp;rsquo;s modulus) in the
units specified. This field only appears for Material Type = Other.
Reduction in Area - RA % Enter a value for the percentage reduction in area. This field only
appears for Material Type = Other.
FINISH SHOT PEENED COLD ROLLED NITRIDED
Polished +15% +50% +100%
Ground +20% +0% +100%
Machined +30% +70% +100%
Hot Rolled +40% +0% +100%
Cast +40% +0% +100%
Forged +100% +0% +100%&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities682
Main Index
Results Setup Screen
Figure 3-164   Results Setup Screen&lt;/p&gt;
&lt;p&gt;683 APPENDIX C
Utilities
Main Index
The output files generated by any of the combination of settings to which MMLF can be set are shown below.
Note that the files generated in any given run of MMLF depend upon the parameters specified in the job file.
MMLF can generate a number of different output files depending on the analysis path chosen. If a multiple
analysis has been specified in any of the input screens, then a single file, with the results name provided with
any one of the following file extensions, depending on the multiple parameter, will be created.
All these files have the standard X-Y paired data format and can be displayed graphically within MMLF itself
or by the X-Y parameter display module, MTPD. No other output files will be created.
If, on the other hand, a single shot analysis has been carried out then MMLF can optionally create a group
of files which contain different information, have the same results name and the following file extensions.Extension File definition
.cyo Three parameter cycles file
.cyc ASCII reversals file (Wang-Brown only). It has 11 columns of data (shear strain,
angle  etc.) which can be viewed in a text editor or a spreadsheet.
.dam Single parameter time correlated damage file
.dhh Three parameter damage histogram
.epy Y-component direct strain
.epx X-component direct strain (parallel to gauge 1)
.epz Z-strain (surface normal)
.gxy XY-shear strain (engineering)
.pdm Polar plot of damage at different critical planes (angle )
.sgx X-component stress
.sgy  Y-component stress
.txy XY shear stress
.fal Scale factor vs. Life
.dcl Survival probability vs. Life
.gal Gate vs. life
.cyo rainflow matrix suitable for input to MCDA or MP3D
.cyc ASCII cycles file
.dhh damage matrix suitable for input to MP3D
.pdm data file of damage/angle suitable for plotting with MPOD or MTPD
.ep strain component
.epy strain y-component&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities684
Main Index
In addition, numerical results are written to the extra details area of the damage matrix file, . dhh extension.
The following table details the keywords and values stored.
Figure 3-165     Results of a Single Shot Analysis (All Methods).epz strain z-component
.gxy strain xy-component
.sgx stress x-component
.sgy stress y-component
.gxy stress xy-component
Keyword Value Description
ANALYSIS MLF Program responsible for analysis
METHOD Wang-Brown+Mean Mean stress correction method
DCRIT 50.0 Probability of survival used
FACTOR 1 Scale factor
GATE 0.0 Hysteresis gate used
MINER 1 Miner&amp;rsquo;s constant used
MATERIAL MANTEN Material used
EQUUNITS Repeats Equivalent units
NUMEQUNI 1 Number of equivalent units
UTS 552 Ultimate tensile strength of material use
$CYCHEXT 5161.CYO Rainflow matrix id, for system use only
MEANLF 333 Mean life calculated&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P36</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_036/</guid>
      <description>
        
        
        &lt;p&gt;685 APPENDIX C
Utilities
Main Index
Figure 3-166  Single Shot Analysis of Just One Method
The fatigue life represents the number of repeats of the history to failure. In this context “failure” is taken to
be that defined to be the initiation of an &amp;rsquo;engineering crack&amp;rsquo;, typically 2mm. The number of cycles or reversals
used corresponds to the number of cycles or reversals in the strain record.
The Results From a M ultiple Analysis
If a multiple analysis procedure has been specified then, on completion, MMLF will display a table of results
on the screen and make a similar entry to the notebook and generate an X-Y file of results. In the case of a
certainty of survival analysis, entering ALL in response to the question, and introducing scatter (e.g. SD=0.2
in the materials data edit screen), will cause the following table to be displayed:
An example of an X-Y plot is shown below. Design criterion vs. Life analysis
Number of SD&amp;rsquo;s from mean % Certainty of survival Design life (repeats of history)
-3 99.9 1164
-2.5 99.4 1486
-2 97.7 1902
-1.5 93 2437
-1 84 3129
-0.5 69 4024
0 50 5185
0.5 31 6698
1 16 8674&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities686
Main Index
Figure 3-167   Plot of Design Criterion vs. Life
Figure 3-168   A Multiple Analysis Results Listing&lt;/p&gt;
&lt;p&gt;687 APPENDIX C
Utilities
Main Index
The Postproce ssing Menu
The general module structure flowchart in Figure 3-116 at the start of the Module Operation section illustrates
how MMLF will always lead the user to the Postprocessing Menu.
The Postprocessing menu looks like this:
Figure 3-169  The Postprocessing Menu
The menu shown above can be mapped directly to the flow chart in Figure 3-116.
The Postprocessing options screen will be reached when:
all of the parameters of a new job have been entered and the calculation has been carried out.
a predefined job was entered as the Jobname (see Figure 3-115). In which case the job definition
screens will be skipped.
The Postprocessing menu allows a job to have one or more of its parameters changed, and to have existing
results and parameters changed and/or viewed.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities688
Main Index
The options on the menu that allow current inputs to be altered are:
The other options may or may not affect the results of the calculation, but are generally of the nature of
utilities rather than calculation parameters. They are as follows:
Display Results
This displays the results of the most recently calculated life estimation. Exactly what is available for display
depends upon the calculation; if an X-Y file was not created then it cannot be displayed, a multiple calculation
will not produce any histogram files, but will produce an X-Y plot, etc.
Essentially this option plots the 7 non-zero stress and strain components. These are:
.sgx - x(t), .sgy - y(t), .txy - xy(t), .epx - x(t), .epy - x(t), .epz - z(t),
.gxy - xy(t)
The full range of possibilities is explained below:Note:   If any parameters are changed, the Recalculate option must be run for the changes to take effect.
Field Description
Loading Environment Returns control to the loading environment screen (see Figure 3-160).
Calculation Parameters Returns control to the Model parameters screen (see Figure 3-161).
Material Definition Returns control to the Material Definition screen (see Figure 3-162).
Rosette Definition Returns control to the Rosette Definition screen (see Figure 3-159).
Output Definition Returns control to the Results Setup screen (see Figure 3-164).&lt;/p&gt;
&lt;p&gt;689 APPENDIX C
Utilities
Main Index
Option Description
Stress and Strain
(X-Y Plot)Display a two parameter plot from a multiple analysis. MMLF actually
loads the two parameter display module MTPD for this type of
display.
Cycle Histogram Display a rainflow cycles or reversals matrix file as a 3D plot. Such a
file may have been calculated or entered into the analyzer. MMLF
actually loads the plot 3D module MP3D for this type of display. If a
damage matrix file (. dhh) was also created during the current analysis
it can also be loaded from within MP3D. See Matrix Options, 370 .
For option 1 and 3 the histogram is stress range, mean stress, cycles.
For option 2 and 4 the histogram is strain range-mean, max stress,
cycles. For option 5 and 6 the histogram is strain range, normal stress
range, reversals.
Damage Histogram Display a damage matrix file as a 3D plot. MMLF actually loads the
Plot 3D module MP3D for this type of display. If a cycles matrix file
(.cyh) was also created during the current analysis it can also be loaded
from within MP3D. See Matrix Options, 370 .
Time-damage Plot Displays the original input strains, together with a time-correlated
damage plot. See , 1169 .
Dam age Polar Plot This option displays a polar plot that shows log (damage) against
orientation . The plot is created for the . pdm file, which is a two
parameter file. Case A and B damage are plotted separately. See Polar
Display (MPOD), 844 .
Results Listing This option will list the full results of the current life estimation in
tabular form, i.e. not as a graphic. Such listings are carried out within
MMLF . If parameters have been changed but not Recalculated, then
the unrecalculated data will NOT be listed.
List Last Job This option will list the full set of parameters used for the current life
estimation, in tabular form, i.e. not as a graphic. Such listings are
carried out within MMLF . If parameters have been changed but not
Recalculated, then the unrecalculated data will NOT be listed.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities690
Main Index
Figure 3-170   Sample MMLF plots. Cycles (a), Damage (b), Polar Plot (c),
and Damage Analysis (d)
Job Menu
The Job utilities menu has three options:
Prefere nces
The personal preferences menu allows some aspects of MMLF&amp;rsquo;s operation to be customized. These are:Option Description
New job Will send the user to screen 1 of MMLF where a new job can be defined.
Save job as Will save the current job under a new name. The current job remains active.
This option is useful for preserving the current job before changing it.
List job Will list all of the details of the current job (but not the life estimation results).&lt;/p&gt;
&lt;p&gt;691 APPENDIX C
Utilities
Main Index
Change Back Life
Allows a value to be entered for the life of the back calculation.
Recalculate
In order to see the results of any change to the parameters in a job file, this option must be selected. Until
this option is selected any changes will be ignored, and the job and results files will not be updated.
eXit
Exits from MMLF .
MMLF Environment Keywords
MMLF writes or reads the following entries to or from the local user environment.Option Description
Material checking MMLF normally checks material parameters to ensure that they are within
certain limits. Such limits ensure that the numbers are within expected
ranges, and also trap numbers that may cause arithmetic errors, e.g., the log
of a negative number. Such self-checking can be turned off if required.
Back sensitivity BACK calculations are iterative life estimations which determine the value of
certain parameters necessary to achieve a specific life. Normally MMLF
considers the calculated life to be estimable to within 5%. This assumption
can be altered with this option.
Stress Units The units in which material parameters are displayed can be selected from a
submenu from this option.
Auto-overwrite This option can be used to specify if existing output files are to be
automatically overwritten by new files with the same name. Auto-
overwrite=Yes should be used with caution because it suppresses the
Overwrite Existing file Yes/No warning, and may cause a loss of data. On the
other hand, it can save a lot of disk space.
Curve method MMLF creates a stepwise cycle stress strain increment table for the plastic
section of the curve based on Ramberg-Osgood.
The method of curve creation can be selected with this option.
Note:   A back calculation may fail if the target life is greater than the cutoff point of the S-N curve or strain
life curve currently being used. So exercise caution when specifying large numbers as the target for
back calculation e.g.  &amp;gt;1E5.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities692
Main Index
MMLF B atch Operation
It is recommended that, by default, the /OV=Y keyword be included in every batch command line, since if
it is omitted and an output file with the specified name already exists, batch operation will cease. T o finish
an MMLF batch line use /OPT=X to exit from the postprocessing screen.
When batch processing with a series of different inputs, it is necessary to use a new batch line and option
definition for each new input. The new line must specify the option from the postprocessing menu into
which the new input will go.
A list of MMLF’s batch keywords:Writes Reads
.MLFFJB last job file PFSTUNI match units
$PAIRED last X-Y file BACKTOLR back life calculation tolerance
$LASTPRG last program MATCHECK default status of material
checking
$HISTOG last histogram file FATAUTOV default status of auto-
overwrite
.CYH last cycles
histogram file
/JOB Job File name
/CREate Confirm Creation of New Job. Y,N
/STYPE Strain Type. M,E
/FTYPE File input method. I,G&lt;br&gt;
/IINP1,/INP2,/IN
P3Input file names
/GEN Generic file name
/CHA Channel numbers
/EQUNITs Equivalent Units
/NUMEQUnits Number of Equivalent Units
/STArt Start Time for Analysis
/END End Time for Analysis
/GATE Strain cycle gate
/FACT or Scale Factor for input Loading
/MATENT ry Mode of Material Parameter Entry. L,E,G
/MATSRC Source of materials data. S,U
/DBNAME Material Database Name&lt;/p&gt;
&lt;p&gt;693 APPENDIX C
Utilities
Main Index
/MATname Material Parameter Dataset Name
/EDIT Edit Material Dataset. Y,N
/FSP Fatemi-Socie Parameter
/BMP Brown-Miller Parameter
Parameter Editing &amp;amp; Entry:
/UTS Ultimate Tensile Strength
/YM Young&amp;rsquo;s Modulus
/YS Yield Strength
/SF Fatigue Strength Coefficient
/BASQ Fatigue Strength Exponent
/EF Fatigue Ductility Coefficient
/COFF Fatigue Ductility Exponent
/NP Cyclic Hardening Exponent
/KP Cyclic Hardening Coefficient
/CUTOFF Endurance Limit Cut-off
/SERRE Elastic Standard Error
/SERRP Plastic Standard Error
/SERRC Cyclic Standard Error
/RATIO R - Ratio
Parameter Generation:
/GENTYP Generic Material Type. S,A,T ,O
/UTS Ultimate Tensile Strength
/SERR Standard Error of Log strain
/RAREA Reduction in Area
/SURFace Surface Finish - POLished, GRound, GOod Machined, Average Machined,
POOrly Machined, HOt Rolled, Forged, Cast, Water Corroded, Sea Corroded,
User-Defined
/TREAT ment Surface treatment - None, Nitrided, Cold rolled, Shot peened, All
Calculation Parameters:
/DESign Design Criterion Percent
/METHod Damage accumulation method. 1-7
/MINERs Value of Miner&amp;rsquo;s Constant
/ANSTArt Start point for stress-strain tracking. S,M
/TYP Rosette Type. R,T,D&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities694
Main Index
/CON Rosette Construction. S,P ,U
/KT1,/KT2,/KT3 T ransverse sensitivity
/POIS Poisson’s Ratio of Gauge
/OUTput Generic Name for Output Files
/OPTion Postprocessing Options. L,C,M,S,O,D, J,P ,B,R,X
/RESOPTion Results Display Options. S,C,D,T,O,R,J
/JOBOPTion Job File Options. N,S,L
/PRFOPTion Preference Options. M,S,B,A
/UNIOPTion Units Options. MP ,P ,K,N,MN
/NEWJOB Start Another Job. Y,N
/LIFE Life required for Back Calculation
/MATCHK Material Parameter Checking. Y,N
/TOLER Sensitivity of Back Calculation
/OVerwrite Overwrite Existing Output Files. Y,N
/AUTOVerwrite Overwrite Without Confirmation. Y,N
/PLOt Whether hardcopy is required. Y,N
/PL TNAM Hardcopy file name&lt;/p&gt;
&lt;p&gt;695 APPENDIX C
Utilities
Main Index
Crack G rowth Data A nalysi s - (MFCG)
MFCG calculates the Paris Law coefficient, C, and exponent, m, in the expression da/dN = C( K)m from
actual raw test data obtained under constant amplitude loading conditions. The data is corrected for the
influence of crack closure and static fracture modes so that the whole data set may be used to obtain C and
m by least squares linear regression.
The input may be from either:
An ASCII file of paired data points of the form &lt;!-- raw HTML omitted --&gt; &amp;lt;da/dN&amp;gt;, previously prepared using an
editor. The default file type is . kap.
A binary, . mdf, file containing multiple sets of paired (X,Y) data in the form X=&lt;!-- raw HTML omitted --&gt;,
Y=&amp;lt;da/dN&amp;gt;. An R value must be entered for each data set used from the file.
The MFCG module calculates the Paris Law coefficient, C, and exponent, m, in the expression:
(3-54)
The crack growth data, when plotted in log-log format, usually appears as a sigmoidal shape ( Figure 3-171).
The upward swing is due to the increasing contribution of static fracture modes as Kmax approaches the
fracture toughness, KIC, leading to rapid unstable fracture. The downward swing is due to the increasing
influence of crack closure leading to a threshold K for zero growth rate. It is often difficult to determine C
da
dN&amp;mdash;&amp;mdash;- CKm=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities696
Main Index
and m from a very limited linear central portion of the data, which may often be really only a single inflection
point.
By correcting the “apparent”  values, calculated from measured crack length, load and geometry, to
“effective”  values to account for these two influences, it is possible to straighten out the S shape and use
the whole data set to determine C and m by least squares regression fitting of a straight line ( Figure 3-172).
The mathematical formulae for the corrections are derived as follows:
(3-55)
(3-56)
(3-57)
(3-58)
where Kcl, the crack closure level, is obtained from:
(3-59)
where R is the stress ratio (Kmin/Kmax) used in the test and  is the threshold  at that R value.
This leads to the correct version of the Paris Law:
(3-60)
or
(3-61)
which is a straight line.K
K
K  appKmaxKmin– =
KeffKeff
maxKeff
min– =
KeffKmaxKmax+ K1cKcl– eff =
Keffgreater of KminKcl =
KclKth1R– =
Kth K
da
dN&amp;mdash;&amp;mdash;- CKeffm=
da
dN&amp;mdash;&amp;mdash;-log mKeff log Clog+ =&lt;/p&gt;
&lt;p&gt;697 APPENDIX C
Utilities
Main Index
Figure 3-171   “Apparent” K-da/dN Data&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities698
Main Index
Figure 3-172   “Effective” K-da/dN Data
To achieve the above calculations MFCG requires the user to enter the following data.
The critical K or KIC in MPa m1/2
The test R value
The delta K threshold at R=0 in MPa m1/2
The delta K threshold as R-&amp;gt;1 in MPa m1/2
The R value at threshold knee
The critical K or KIC is the material fracture toughness; the test R value is the stress ratio
(minimum/maximum load) at which the laboratory test was carried out; the  threshold at R=0, the&lt;br&gt;
threshold as R tends to unity and the R value at the threshold knee are the 3 parameters which describe the
threshold response of a material as a function of stress ratio as per Figure 3-173.
K K&lt;/p&gt;
&lt;p&gt;699 APPENDIX C
Utilities
Main Index
Figure 3-173   Description of Kth Response as a Function of Stress Ratio
MFCG is a module which takes an ASCII file of apparent , da/dN pairs, takes input values of KIC and
and carries out the corrections and linear regression. A post analysis menu allows presentation of the
results and data either numerically or graphically, on screen or written to files.   The filtered parameters may
be exported to a materials database by MFCG for later use in fatigue crack growth calculations using the
PCRACK module. It should be noted that in some circumstances, MFCG can be used to estimate the
material values for fracture toughness and threshold from crack growth data by repeated calculations using
the module to optimize the best fit to the test data, particularly for a family of datasets from tests conducted
at different R values.
MFCG M odule O peration
The MFCG module can be operated in one of the following ways:
In stand-alone mode by typing mfcg  at the system promptas explained in Configuration, 328 .
By incorporating the MFCG commands in a batch operation.
Once running in interactive mode MFCG displays this screen.
K
Kth&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities700
Main Index
Figure 3-174   The MFCG  File Input and Process Definition Screens
MFCG can process da/dN-  data either as ASCII or binary XY files (. mfd files). This question asks the
user to select which type of input file by choosing one of the toggle options.
Field Description
Input File Name MFCG will prompt the user to enter the name of the data file to analyze. This
input file must be either an ASCII file of paired data points in the form of K (,
or space) da/dN, previously prepared either by using a standard editor or as a
result of data reduction from computer controlled testing (the default extension
is .kap) or a two parameter file of K, da/dN (default extension . mdf).
Output File Name The next prompt requests the name of an output file to save the results of the
MFCG  analysis. This will have a . mdf extension by default and the generic name
of the input file is offered as a default. Input . kap files are output as . mdf files.
The results file is used subsequently for graphical presentation though a printout
is also possible from the post analysis menu. If the output file name specified
already exists, then the user will be asked to confirm that it is to be overwritten.
Number of Data Sets
(MDF files only)The input . mdf file may contain several data sets. This question is asking for the
number of data sets to be included in analysis.
The answer should be a positive number not exceeding the number of data sets
defined in the . mdf file. An R value will later need to be specified for each data
set included in the analysis.
If there are 5 data sets defined in the file and 3 is entered into this field then only
the data from the first 3 sets are included in the analysis.
K&lt;/p&gt;
&lt;p&gt;701 APPENDIX C
Utilities
Main Index
Post Analysis
When the test data has been defined, clicking OK will process the input file and then display the post analysis
screen as in below.Test R value R can be any value between 0 and 1 when the maximum load is positive. R is zero
for “zero to tension” loading and -1 is for “fully reversed tension/compression
loading”.
For fatigue crack growth tests with constant load amplitude and constant R value,
R is given by:
R=minimum load or stress or K / maximum load or stress or K
Critical K or K1C To correct for the influence of static fracture modes (the upward bend of the log-
log plot) a value of critical K at fracture, or the fracture toughness value K1C is
required for the material under test.
K Threshold at R=0,
and R nearing 1 The threshold values are used at low da/dN to determine the crack closure
influence and to correct the apparent K. The units are MPa m1/2.
K threshold is the positive value at which fatigue cracks will not propagate due
to the presence of crack closure reducing the effective K to 0. This condition has
been experimentally determined at a cut-off rate of 1e-11 m/cycle and measured
values vary with R as;
K threshold = D0 - (D0-D1) * R/Rc
where D0 is the threshold at R=0, D1 is the threshold as R nears 1, and Rc is the
R value at the knee point. If the calculated K threshold is less than D1 then D1
is automatically used.
R value at threshold
knee If the test R value is greater than Rc, MFCG  will automatically use the D1
value.Field Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities702
Main Index
Figure 3-175  The Postprocessing Menu&lt;/p&gt;
&lt;p&gt;703 APPENDIX C
Utilities
Main Index
The MFCG  Graphical Display SystemField Description
Print Analysis Results Prints the results as statistically fitted values of m and C, the standard deviation
and the correlation coefficient. The page of results are numerical (not graphical
plots) and can be seen on screen, or saved as a text file to disk.
Apparent K Plot This option plots the original unprocessed input file. It may be plotted as data
points only, or a &lt;code&gt;best fit&lt;/code&gt; S curve can be superimposed on the data points.
Effective K plot This option plots the processed input file (the output file). It may be plotted as
data points only, or a &lt;code&gt;best fit&lt;/code&gt; fitted straight line plot can be superimposed on
the data points.
List Data Lists the apparent K, effective K, and da/dN to either screen or disk file
(where they may be imported into most commercial word processors). The
number of sets of data values can be indefinitely large depending upon the
number of points in the input data file, and there may be many pages of data.
Export to Material
DatabaseThis option allows the materials database to be updated to include the results
from this analysis. The choice of databases are from Central, Local, or User.
Run MFCG Again Runs MFCG  again and returns to screen 1 for another set of experimental data.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities704
Main Index
Figure 3-176   Graphical Display with Main Menu
The graphical interface is mostly explained elsewhere in this guide and is similar if not identical to other
graphical displays. However, some options are tailored to MFCG. Those options are explained below.
The options pop-up menu contains no unique option; it presents the more commonly used menu options in
a very convenient form.
Batch Operati on
A list of MFCG’s batch keywords:
Example:
mfcg /inp=test/kic=100/r=0.1/d0=5.35/d1=2/ov=yes/opt=li/opt=hc
/men=a/pltnam=test1/ptit=test 1
This causes MFCG to read in a file called test.kap  and, using a KIC of 100 MPa m1/2, D0=5.35, D1=2
and the default threshold parameters (taken from BSI document PD6493, 1988 version) for a test stress ratio
of 0.1, write a  effective plot to a plot called test1.plt  and display C, m and statistics to the notebook.
By default the . mdf output file is test.mdf  (because no /OUT was specified). Command  Menu option Meaning
LI Line On Display the statistically fitted regression line to either the
apparent or effective K plots.
NL Line off Remove the statistically fitted line from either the apparent or
effectiveK plots.
Return Return to the post-processing menu
Exit Exit to the operating or menu system
K&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P37</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_037/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_037/</guid>
      <description>
        
        
        &lt;p&gt;705 APPENDIX C
Utilities
Main Index
Kt/Kf Eval uation - (MKTAN)
MKTA N stores and retrieves values for stress concentration factor (Kt) solutions for geometric details, and
calculates Kt and Kf. It allows users without finite element analysis (FEA) software rapid and convenient
access to Kt values for a range of common component geometries. The Kt values can be used in programs
such as MTCD to predict the fatigue life of an engineering component which require the user to input a
value for stress concentration factor Kt, or fatigue strength reduction factor Kf. Such values have been
calculated for a wide range of shapes (geometries) and sizes of engineering components and are available in
standard reference works such as Peterson’s book on Stress Concentration Factors.
Tables exist for geometries such as elliptical holes with a range of long and short diameters, in plates of various
widths, crankshafts, springs, keyways, inclusions, etc. MKTAN stores these values in a library of cases and
allows the user easy access to the libraries for calculation purposes.
The library cases cover popular and common geometries such as holes and notches in plates and bars, plus
effects of surface condition on crack initiation, and strength reduction Kf values for various environments
such as seawater.
Subsequent releases of MKTAN will contain progressively more comprehensive cases for a wider range of
geometries and conditions. Library entries supplied with MKTAN are detailed in an index file called
secure.ktd . Actual entries are held in a secure database. Supplied files cannot be edited. However the user
can copy entries into a user database and edit them at will. Details of the user database are held in a file called
user.ktd .
Module Operation
MKTAN can be run in one of the following ways:
In stand alone mode by invoking, mktan  at the system prompt as explained in Configuration, 328 .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities706
Main Index
By incorporating the MKTAN commands in a batch operation.
There are two main operations that MKTAN performs:
Calculate a Kt value from the Secure or User database.
Edit the User database or view the Secure or User databases.
There are a variety of steps and options to both of the above operations. However, both types of operation
are started from MKTAN’s main menu. The main menu screen is the first screen to appear when MKTAN
is operated in interactive mode. The main menu screen is shown overleaf.
Figure 3-177   The  MKTAN  Main Menu Screen
The options available from the main menu screen are illustrated in the flowchart below.
Figure 3-178     Flowchart Summarizing MKTAN  Menu System&lt;/p&gt;
&lt;p&gt;707 APPENDIX C
Utilities
Main Index
The options on the left of the flowchart allow for user database functions such as display or edit. Entries from
the secure database can also be copied to the user database and then edited although the secure database
cannot be changed.
The options on the right of the flowchart enable the component geometry to be selected, and the exact
dimensions of that geometry, plus any other information needed to calculate a Kt value to be input.
Database Functions Menu
All database functions are achieved via this menu. The text below details the purpose and function of each
of the options from the Database Functions selection on the main menu.
Add an Entry
Choose this option when an entry to the database is being made. The user will be sent to a screen which has
empty fields into which a definition of the entry will be made.
Option Description
Description field Enter a description for the database entry. The description can NOT be left blank.
Comments field Enter some comments about the database entry. The comments field can be left
blank.
The Reference field Enter a reference for the database entry (the Reference field). The reference can be
left blank.
Name of Storefile This is the name of the file where the database information will be kept. The name
of the store file must be entered, and must be unique.
X type The X parameter type can be toggled between Single and Ratio by pressing the
space bar or clicking the left mouse button. The X parameter type Single means:
a single variable (numerator), e.g. A, such as the width of a plate.
An example of a X parameter type Ratio:
A / B, such as the long and short radii of an elliptical hole.
X Scale This scale refers to the lookup table X scale. The X scale can be either Linear or
Log 10. The X scale can be toggled between Linear and Log 10 by pressing the
space bar or clicking the left mouse button.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities708
Main Index
A second Add an Entry screen will be presented whose input parameters are:Family T ype The Family type can be Single, Ratio or None. Each of these values can be chosen
by toggling the type, by pressing the space bar, or by clicking the left mouse
button.
The family type Single refers to a single variable representing the family value (e.g.
A). The family type Ratio refers to two variables representing the family value as
a ratio (e.g. A / B). The family type None means that there are no variables which
represent the family value. This means that there is only one curve (lookup table)
in the family.
Variable 1 - 4 The variables entered are used to represent the X parameter and/or Family
parameter.
Geometry type The available geometries can be toggled through and selected.
When the fields have been filled the 2nd Add Entry screen is displayed. Some of
the fields will NOT be shown if they are not appropriate to the parameter and
choices specified on the previous screen.
Option Description
X Parameter
numerator The available X parameter variables can be shown/selected by pressing the space
bar or clicking the left mouse button. Ensure that this selection is for the
numerator for the X-axis ratio, for example a in a/b.
X Parameter
denominatorThe available X parameter variables can be shown/selected by pressing the space
bar or clicking the left mouse button. Ensure that this selection is for the
numerator for the X-axis ratio, for example b in a/b.
Family parameter
numeratorThe available family parameter variables can be shown/selected by pressing the
space bar or clicking the left mouse button. Ensure that this solution is for the
numerator family parameter ratio, for example r in r/D.
Family parameter
denominatorThe available family parameter variables can be shown/selected by pressing the
space bar or clicking the left mouse button. Ensure that this solution is for the
denominator family parameter ratio, for example D in r/D.
Plot File Name This field is where the picture/plot entry is named. The default file type is . plt.
The plot file should contain an image of the Geometry to be used in the
calculation of Kt. The image will be shown if the geometry is selected.
Lookup tables If the type chosen is . mdf (two parameter file) or ASCII the lookup table file name
is specified here. If the lookup table type is polynomial then the polynomial
constants and limits are required to be entered. The format of this file is shown
after this table.Option Description&lt;/p&gt;
&lt;p&gt;709 APPENDIX C
Utilities
Main Index
Format of MK TAN ASCII lookup files:
If the lookup table type is ASCII then the file type is defaulted to . asc (e.g. entering fred  is interpreted as
fred.asc ). An ASCII file can be created using any editor or word processor, however the format provided
by MKTAN is as follows. The first line of the ASCII file must contain the following words starting in column
1: KTAN ASCII FILE.
The second line must contain the number of families specified in this file, e.g. 3. The format is then:
 The family value for the lookup table
 The number of lookup table pairs
 The lookup table x, y pairs (each pair on separate lines)
An example of an ASCII file is as follows:
KTAN ASCII FILE &lt;!-- raw HTML omitted --&gt;
2&amp;lt;number of families (2 shown below)&amp;gt;
0.1 &amp;lt;family value for family 1&amp;gt;
6&amp;lt;number of lookup table x, y pairs&amp;gt;
10.0,20.0 &amp;lt;X,Y pairs&amp;gt;
30.0,30.0
50.0,35.0
60.0,40.0
70.0,80.0
80.0,90.0
0.2&amp;lt;family value for family 2&amp;gt;
3&amp;lt;number of lookup table x, y pairs&amp;gt;
8.0,15.0 &amp;lt;x,y pairs&amp;gt;
10.0,25.0
20.0,100.0 Lookup File Name This screen allows the name of the lookup table to be entered.
Select database screen
(geometry type)This screen allows the database to use for drawing the pictures (geometries) to be
selected.
Polynomial constant
screen A screen appears if Polynomial was selected. Enter the value for the polynomial
constant A0 to A3. n is from 1 to 4 and all 4 constants should be entered even if
they are all zero.
The Family Parameter values:
For each family (sub-set) the value of the family should be entered, for example
A=0.1. For each subset the family parameter value must be larger or smaller than
the previous one (uniformly increasing or decreasing).Option Description
Note:   Items in &amp;lt; &amp;gt; are for reference only, and do not appear in the file.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities710
Main Index
Delete entry
This question relates to the deletion (removal from database) of a user database entry. The Storefile associated
with the user database entry is also deleted. After selecting an entry to be deleted, you must confirm the
deletion by answering in an affirmative manner (Yes) to the Are you Sure? prompt to delete the entry.
Answering Negatively (No) will not delete the user entry. The database entry and the user database will be
removed if this question is answered in an affirmative manner (Yes).
Answering No will leave the User Database without making changes. If the user database is deleted (removed)
then no user database operations will be allowed until further entries are made to the user database (i.e. by
completing an ‘Add an entry’ operation).
Edit an Entry
This screen allows the editing of a User Database entry. At first this option lists all the database entries. An
entry must be selected for editing. Note that a page of information on the currently highlighted entry can be
obtained by pressing the Info button. The Info data is there to help users choose. When a selection has been
made another menu appears. The following explains what each menu option does.
Show Entries Screen
This screen allows the user to view the database entries. It contains these suboptions:Option Description
Edit general details This allows the description, comments, reference and geometry type to be
changed.
Replace Plot File This allows a new plot file (geometry drawing) to replace the existing geometry
drawing.
Extract to MDF file This allows the extraction of the lookup table data to a . mdf format (paired) file.
Polynomial lookup table cannot be extracted.
Extract to ASCII file This allows the extraction of the lookup table data to an ASCII format file. The
ASCII file produced is the same format as required to be input to MKTAN to
represent a lookup table. Polynomial lookup table cannot be extracted.
Replace Lookup table
with MDF This replaces the existing lookup table with an . mdf format file.
Replace Lookup table
with ASCII -This replaces the existing lookup table with an ASCII format file.
Edit Polynomial
constantsThis allows the editing of the polynomial constants lookup table&lt;/p&gt;
&lt;p&gt;711 APPENDIX C
Utilities
Main Index
Pictures
The final option on the Database Functions menu is Pictures. All database entries should have a
corresponding picture associated with them (specified on the Add Entry form). The picture shows the user
what the dimensions are and what shape the component is. The pictures will be produced on a graphics
package and will be a plot file with a . plt extension. When ’Pictures’ is selected, the user is given a list of
available geometry types. Selecting a geometry type, which may have several cases, leads to a page of pictures.Option Description
Show all entries The complete database is listed. Details of individual entries are stored as pages of
general information. To view a page of information about an entry move the
highlight bar over the entry and click on Info or press F3. Alternatively a semi-
sorted list of database entries can be viewed by using the sub-option below.
List by Geometry
Type This screen shows a list of the database entries with a given geometry type. Entries
are displayed in pages with general information displayed about each entry. Note
that a page of information on the currently highlighted entry can be obtained by
pressing or by clicking on the Info button. The Info data is there to aid users in
their choice.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities712
Main Index
Figure 3-179  A Kt Picture (This Example is a Crankshaft)
The Calculate Menu
The other option from the Main Menu is Calculate. This allows Kt values to be calculated for any geometry
contained within the database.
When Calculate is selected, the user must choose to use either the Secure database or the User Database. This
choice is made on a pop up menu that appears next to the main menu. There then follows an established
series of steps that lead to a Kt value being calculated. When the database is chosen a form appears.
It is here that the geometry type of the component being analyzed is chosen from the database of geometry
types. After the geometry type is selected a list of entries of that type is displayed. An entry must be selected.
Any single geometry type will probably contain more than 1 entry or case. For example holes in a plate of
finite width, and holes in a plate of infinite width. One of them must be selected before Kt can be calculated.
Selection is by one of two methods, either:
From the list shown on a screen such as the screen overleaf where the user can move the highlight
bar over the desired choice and select it by pressing ENTER or by pointing and clicking the mouse
pointer over the selection.
or
The user can click on the Picture button to produce a picture of the case. In the above example it
will cause the picture over the page to be displayed. One picture is of a plate with a finite width of
value w. The other picture is of a plate with an infinite width. A selection can be made by pointing
and clicking on the appropriate picture.
When selected, a screen like this will appear:&lt;/p&gt;
&lt;p&gt;713 APPENDIX C
Utilities
Main Index
Figure 3-180     Kt Hole Dimension Definition
The picture defines the relevant dimensions of the geometry and gives guidance to the user as to what
numbers should be entered where. All the dimensions and variable names etc. were defined when the entry
into the database was made using the Database Functions/add Entry facility.
The menu to the right of the picture contains the Calculate command. Clicking on Calculate causes
MKTAN to ask the user to input the actual values for the dimensions. Note the value for Kt (in this case
4.333).
The graphics menu (shown overleaf) also contains the hardcopy command so users can record the case, with
its dimensions, and the calculated Kt value for reporting purposes.
Graphi cs Mode Operation
Some of the graphics commands of MKTAN are shown here. These commands can be entered in the
command line of the graphics window or accessed directly from one of the pulldown menus:
CA, ED, NG, HC, PL, EX, RON, ROFF, PESA, PEDA, PETX, PEAX, PEAN,
PEGR, PEBA, PEER, PESU, PEMF, PEMT, PEMO, PEMB, PEMH, PEMK, OP,
HBON, HBOF, CU.
The graphics screens are menu or command line operated. Most of the options are standard operations and
are explained in Graphical Display, 256 . Options of particular interest to MKTAN are explained below.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities714
Main Index
Batch Op eration
A list of MKTAN’s batch keywords:
\ Edit ED Allows a second calculation to be performed with new (edited) values.
Note that Calculate must be clicked upon before the new values are acted
upon.
Calculate  CA T riggers the process that calculates new K values. The user must supply
values for whatever variables have been defined for the current geometry.
New Geom This option sends the user back to the Select Geometry Type screen.
Main Menu  Sends the user back to the MKTAN Main Menu screen.
/MEN Main menu option. (E = Exit, D = Database Menu, C = Calculate)
/DB Database menu option. (A = Add, E = Edit, etc.)
/CAL Calculate menu option. (U = User database, S = Secure database)
/SE Show entry menu option. (L = List by type, S = Show all entries)
/EDT Edit menu option. (number of option, e.g. 1 is Edit general)
Database menu options
Add an entry batch keywords (also Edit entry keywords where applicable)
/DES Description of entry
/COM Comments about the entry
/REF Reference
/STF Storefile name (unique)
/XTYP The type of X parameter required. (S - Single, R - Ratio)
/XSC The type of X lookup table scaling. (Li - Linear, Lo - Log 10)
/FAM The type of Family parameter. (S - Single, R - Ratio, N - None)
/VAR1 Variable 1 name (e.g. A)
/VAR2 Variable 2 name (e.g. B)
/VAR3 Variable 3 name (e.g. C)
/VAR4 Variable 4 name (e.g. D)
/GEOM Geometry name (e.g. Holes)
/XP1 X parameter numerator
/XP2 X parameter denominator
/FP1 Family parameter numerator
/FP2 Family parameter denominator
/PL T Plot File name&lt;/p&gt;
&lt;p&gt;715 APPENDIX C
Utilities
Main Index
/LUT Lookup table type (M - MDF , A - ASCII, P - Polynomial)
/LUF Lookup file name
MDF lookup file add entry
/FVn Family value, where n represents the set number, and can be 1 to 10. (e.g. /FV1 =
0.5 for family value 1)
Polynomial lookup file add entry
/FVn Family value, where n represents the set number, and can be 1 to 10. (e.g./FV1 =
0.5 for family value 1)
/XMINn The minimum X value for the lookup table (n is set number)
/XMAXn The maximum X value for the lookup table (n is set number) |
/CnA0 The first polynomial constant (n is set number)
/CnA1 The second polynomial constant (n is set number)
/CnA2 The third polynomial constant (n is set number)
/CnA3 The fourth polynomial constant (n is set number)
Database menu options
Delete an entry
/ENT The entry to delete (the first occurrence found of the entry will be used, when the
full entry specification is not given)
/DEL Confirmation required to delete entry (Y - Yes, N - No)
/KIL Confirmation required to remove the user database (Y - Yes, N - No). This situation
occurs when deleting the last entry in the user database, this will cause the user
database to be removed as well as the entry. Selecting No will not delete the entry
or database.
Edit entry menu options
Edit general details - keywords same as add entry
/NPL T Replace Plot File. The new plot file name.
/NMDF Extract to MDF file. The file name of the output MDF file.
/NMDF Extract to ASCII file. The file name of the output ASCII file.
Replace Lookup tables with MDF
/LUF The file name of the MDF format lookup file.
/FVn Family values for each set (n is set number)
Replace Lookup tables with ASCII
/LUF The file name of the ASCII format lookup file Edit
Polynomial constants - same as Add entry Polynomial lookup table
Database menu option&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Advanced Fatigue Utilities716
Main Index
Pictures - not applicable in batch mode as the option draws geometry to screen.
Calculate Menu
/GTYP The geometry type to list (use geometry type number)
/ENT The geometry entry to use in the calculation of Kt&lt;/p&gt;
&lt;p&gt;717 APPENDIX C
Utilities
Main Index
Graphics Display Utilities
Several display utilities and three hardcopy plotting/printing utilities exist for graphics.
Graphical Editing - (MGED)
This module is the multi-channel interactive graphical editor for time series data allowing online
manipulation of a signal. Tasks such as cleaning up bad data, creating data, extending a signal, spike removal,
etc., are all easy and quick to carry out. This module can also operate in batch. For multi-channel edits it
creates its own NCL macro so that operations defined for one channel can be applied to all others, without
the need to do them interactively. The assumption is that the other signals are from the same test or at least
exhibit the same sample rate, etc.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities718
Main Index
Multi-File Display - (MMFD)
This module displays single parameter data files. The files may contain any type of sequential data including
time series, power spectra, time at level distributions, etc. Files may be displayed across four screen pages, with
a maximum of eight files per page. Thus, allowing up to 32 files to be presented. Three modes are offered for
displaying the files on each page. They are: separate plots, overlaid plots, and cross-plots. Separate plots are
those where each file is plotted independently of the others. Overlaid plots are where all of the files are plotted
using common axes. Cross-plots are where one file nominally forms the X-values against which the other files
are plotted on common axes.
This module is used mainly to compare channels of measurement data in a fast and convenient way, MMFD
displays files as graphs. Single files are also easily displayed. Up to 32 files can be plotted, either separately, or
at up to 8 files per page. Files can be overlaid (superimposed) on a single set of axes, or even cross plotted&lt;/p&gt;
&lt;p&gt;719 APPENDIX C
Utilities
Main Index
against each other to test correlation. Scaling, tracking and scrolling functions are available. T o invoke this
program from the system prompt invoke mmfd as explained in Configuration, 328 .
The MMFD module can display several data files simultaneously. It is intended primarily to display time
series data such as single parameter . dac files, however, other data files with a single parameter structure can
also be displayed.
As stated earlier, up to 32 data files may be plotted during a single run of the program. The plots may be
presented either separately or overlaid. In this way data from a particular measurement campaign can be easily
compared and contrasted.
To aid the process of comparison, the Y-axes of the displays can be scaled in any one of three ways:
There are three types of plots that can be displayed:
In cross-plot mode, there are facilities to setup exclusion zones, adjust plotting resolution and slow down
plotting by time delay to aid in the viewing (and plotting) of data.
In standard and overlay modes there are facilities for scrolling through the data and tracking individual data
sets for coordinate values to aid in the viewing of data.
Input File Names
MMFD can display the contents of a single data file or a group of files. The concept of a generic name for a
test represents a quick method of entering channel names for processing. The methodology is based on the Field Description
Local (Self) scaling Each channel scales to its own maximum and minimum values.
Global (Auto) scaling All the channels scale to the channel with the largest global maximum or
smallest global minimum, auto-scaling. This type of scaling can be achieved
by setting the optional scaling toggle on screen 1 of MMFD to Global.
Standard scaling In this mode the local Y range is used but the x-axis (time) units are set from
the lowest minimum to the highest maximum x values extracted from the set
of files.
Field Description
Standard plots These are normal plots displayed next to each other.
Overlaid plots These are plots displayed on top of each other
Cross p lots Data files can be cross plotted. This is a process whereby up to 7 files can be
plotted against a nominated reference file. The reference file will represent the
X-axis and the other files are plotted on the Y-axis. This is an excellent way of
assessing the correlation between sets of data. A high degree of similarity
between data sets will produce a straight line cross plot. Low correlation will
produce a scattered plot.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities720
Main Index
fact that data derived from the same test, are usually demultiplexed into individual channel files whose file
name structure consists of a generic base (test) name, normally the name of the multiplexed data file itself,
with the appropriate channel number appended. For example, if the name of the multiplexed data file
happened to be DATA, then the following file names would be generated: data01.dac,
data02.dac,&amp;hellip;, datann.dac .
In the above example, the generic name of the test would be data . So entering data(1-n)  where n is the
last number in the series will process all files prefixed by the word data . If fewer files exist than are specified
then MMFD will display an error message prompt to that effect and proceed to display the data files that do
exist.
Since MMFD expects to process standard time series data files (usually a . dac file) the above generic test
name convention only applies to this data type. Files with the correct internal format but different file
extensions, such as spectra with the extension . psd, must have their names entered in full, i.e. including the
file extension e.g. data(1-n).psd .
MMFD expects to find the data files for plotting to be resident in the user’s directory, however, other
directories can also be accessed if the complete file specification i.e. path name and file name are entered.
If data files unconnected by a generic test name are to be processed then enter their full file names separated
by commas.
Entering File Names Using F3/List
A very easy way to select files is by using the List facility. List displays all available files on a scrollable pick
list. Files on the list can be selected by pointing and clicking with the mouse pointer. For technical reasons
the files picked from this list are not remembered once you have progressed beyond this screen, although the
path is remembered and used in the next run of the program.
Typing File Names
If more than 1 individual file name is typed then the last name in the list is saved to the environment and is
used as the default file name the next time the program is run.   Also files that are typed are remembered once
you have progressed beyond this screen but return to it. Files must be separated by commas.
Up to 32 individual file names may be entered.
When the files have been selected, MMFD will display either the names of the files or the number of files
selected.
Alter Setup Yes/No
Generally speaking, as a default, MMFD will plot the entire contents of each data file separately on the screen
and scale each data set to its own local maximum and minimum values. If something other than these defaults
are required, then answer this question YES. Having requested to alter the default settings up to 8 additional
fields will be displayed.&lt;/p&gt;
&lt;p&gt;721 APPENDIX C
Utilities
Main Index
Field Description
Plots per page This field allows the default number of plots per screen to be set. The
maximum range is 1-8 for separate plots and 2-8 for overlaid and cross plots.
The actual range offered depends on the number of files presented. If 12 files
are presented the minimum value is 3, i.e. 3 per page for the 4 pages. The
selected value is written to the environment and used as the default when the
program is next run.
X and Y scaling X Scaling Linear/Log 10
Y Scaling Linear/Log 10/dB
These fields allow the user to choose the X and Y-axis scales.
Axes Limits The axes limits settings can be global, local, or standard.
Maximum/Minimum X/Y These fields appear if the axes limits are set to global. The default values are
the highest maximum and lowest minimum X and Y values across all the
files. Note that on color screens or hardcopy devices that support different
pen colors, MMFD will plot each data set in a different color. For
monochrome devices, each plot will be distinguished by a different line style.
Cross Plot Type If Cross Plot is selected then X-Scaling and Y-Scaling appear as in Display
Type = Separate (above). The new field that only appears for Cross Plot is
Plot T ype = Scatter - Joined - Both
The selection of scattered or joined plots is a matter of preference and clarity,
some files look better cross plotted and some are clearer with joined plots.
However, please note that scattered plots take 30% longer to plot than joined
plots. So if large files are being plotted then selecting joined plots will save
time.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities722
Main Index
Quick Look Display - (MQLD)
This module displays single channel data file. The file must be in the .dac format, which includes time
histories, ASD results, ADA results, and any other results that have a constant X-axis increment. Use MTPD
for paired (X-Y) data and MP3D for histogram and waterfall data.
MQLD can be run by invoking mqld from the system prompt as explained in Configuration, 328 . It also gets
spawned when doing various graphical requests from other utilities.&lt;/p&gt;
&lt;p&gt;723 APPENDIX C
Utilities
Main Index
Two Parameter Display - (MTPD)
The two parameter display module displays paired (X-Y) data files. Displays may be scaled in various ways.
Functions for windowing specific fields and picking off coordinate pairs are also available. After the data has
been displayed, a menu will appear. Select your options and give the name of a data file to display. The file
is assumed to be in the local directory and have an extension .mdf. If you wish to access another directory or
use a file with a different extension, you will need to type in a fuller file specification.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities724
Main Index
Polar Display - (MPOD)
The polar display module displays pared (X-Y) data files. Displays may be scaled in various ways. Functions
for windowing specific fields and picking off coordinate pairs are also available. After the data has been
displayed, a menu will appear. Select your options and give the name of a data file to display. The file is
assumed to be in the local directory and have an extension .pod. If you wish to access another directory or
use a file with a different extension you will need to type in a fuller file specification.
The MPOD module can be run in one of the following three ways:
In stand alone mode by typing mpod  at the system prompt as explained in Configuration, 328 .
By incorporating the MPOD batch commands.
Modes one is interactive. Once running in interactive mode the MPOD module prompts with the following
screen:
Figure 3-181  Naming the MPOD Input File
MPOD plots the contents of a paired ( ,R) data file. By default it expects this file to be a standard paired
file with an extension of . pdm and so if such a file is to be displayed, it is only necessary to enter its name, the
extension may be omitted.
MPOD expects to find the input data files to be resident in the user’s directory. However, other directories
can also be accessed if the complete file specification, (path name and file name) is entered. If the Alter setup
question it set to Yes, then a second window appears. The purpose of each of its fields is as follows:
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P38</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_038/</guid>
      <description>
        
        
        &lt;p&gt;725 APPENDIX C
Utilities
Main Index
Figure 3-182  Altering the MPOD Setup File
The input fields are as follows:
Option Description
R-Axis Minimum For the purpose of scaling the display, the minimum value of R to be
included in the plot may be specified in physical units. The minimum
value of the R parameter present in the data file is given as the default
limit.
If a value greater than the minimum value is specified then some data will
be excluded from the plot.
R-Axis Maximum For the purpose of scaling the display, the maximum value of R to be
included in the plot may be specified in physical units. The maximum
value of the R parameter present in the data file is given as the default
limit.
If a value smaller than the maximum value is specified then some data will
be excluded from the plot.
Plot T ype Having specified the R axis limits, it is now possible to define if the plot
is to be generated by displaying the -R coordinate pairs discretely (a
scatter plot) or if the data are to be plotted by joining up between adjacent
values (a joined plot) or both.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities726
Main Index
Clicking the OK button either after altering the setup or without altering the setup will result in a polar plot.
When the polar plot is displayed, various manipulation options are available.
Polar Plot Ma nipulation
The screen is split into 3 regions:
 the prompt line dialog box
 the menu along the top of the form
 the graph area in the centre of the screen. Plot 1 in n Not every point in the file has to be displayed. T o display a plot more
quickly, enter a number n and only every n&amp;rsquo;th plot will be displayed.
It also allows hard copies to show adequately the pattern of data in a file
with many points without taking too long to physically produce. The
selection of either scattered or joined plots is arbitrary. However, scattered
plots will, by and large, take longer to plot than joined plots. Joined plots
are generated some 30% faster than scatter plots and so they are
recommended for longer data sets. In either case, cross-plotting data can
be time consuming and care must be taken in selecting the data to plot.
Scaling Options
(Scale R)T wo scaling options for the R axis are possible.
Linear  - Linear R
Linear  - Log R
Linear-Linear scaling is the default. Set the required option with the left
mouse button.
Display Data Sets [1-n] If the file selected has more than 1 data set, then they can be plotted
selectively. Enter the number of the data sets you wish to have plotted. The
numbers can be separated by commas. For example 1, 5, 18, will display
the 1st, 5th, and 18th data sets.
Change in Shapes Shapes on/off allows the user to have each data set plotted with a different
shaped symbol. For example one set of data points can be plotted with
small crosses, another with small triangles, another with small squares etc.
Change in Shape=no  plots all the data set with the same shaped symbol.
When the above fields have been filled, selecting OK will cause MPOD to
plot the data. Option Description

&lt;/p&gt;
&lt;p&gt;727 APPENDIX C
Utilities
Main Index&lt;/p&gt;
&lt;p&gt;Figure 3-183   The MPOD Graphics Screen
The dialog area is used for the following:
Supplemental questions following option picks
Entering prompt mode codes
Use the mouse cursor to select the menu options.
The general operation of the graphics menu system is fully described in Module Operations  (Ch. 18), but the
options available specific to MPOD are all illustrated in the diagram below.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities728
Main Index
Figure 3-184   The MPOD Graphics Menu System
The menu options all have corresponding prompt mode codes. They can be typed in the dialogue box (click
in it to make it active).
The following lists explain the menu options and also give their corresponding prompt codes. Note that the
lists do not cover all menu options because many of the standard options are fully explained elsewhere.
Also, note that some options do not appear at all times - for example the Show Set/Hide Set options do not
appear if there is only one set.
.
Option Command Meaning
Main Menu options
Options OP Display the available prompt options.
New File NE Return to the file input screen
Replot PL Replot without change. PL is useful after many changes have
been made to the plot with Redraw Off, or if the display has
been corrupted in any way.&lt;/p&gt;
&lt;p&gt;729 APPENDIX C
Utilities
Main Index
Display View and Axes options
Join JO Plot the data by joining the data values with a line
Points PO Plot the data point themselves, scatter plot
Join Points JP Plot points and join them
Lines TO Plot data by displaying radial lines to the values
XMIN = XX Alter the scaling on the specified axis
XMAX = XX The commands may be concatenated with commas
YMIN = YY For example: YMAX = YY  XMAX=500,XMIN=-
300,YMIN=-500,YMAX=1000
Window R WR Pick two values on the Y-axis and plot all between them
Log R LR Replot with a logarithmic R-axis
Linear R NR Replot with a linear R-axis
Full X/Y FX/FY Redraw the plot to include the full X and Y axes
Zoom in ZI Zoom in 2 times on the centre of the plot
Zoom out ZO Zoom out 2 times on the centre of the plot
grid# GR Superimpose the plot on a grid
Box TI Graduate the axes with ticks
Zeros On/Off ZON/ZOFF Displays zero lines for the X and Y axes
Plot Type and Annotate Options
Note: The title string is stored within the extra details area of the data file for which the string is defined
against the keyword GRPTITLE. This means that when the data are re-plotted once MPOD has exited,
the title will remain intact.
Point Skip SK Plot every n&amp;rsquo;th point and skip the rest
Set Title STI Sets a title which will appear below the plot
Del Title DTI Deletes the title below the plot
Add Text AT Add text at the position of the mouse cursor
Move T ext MT Move existing text
Del T ext DT Delete a block of text
Preferences\ Legend On/Off
Note:  These are mostly standard options. However, if between 1 and 6 sets are being plotted then Legend
On/Off and Legend T ext appears on the menu. It enables each data set to be given an editable label which
be toggled on and off the plot.Option Command Meaning&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities730
Main Index
MPOD Extra Details Key words
User-Defined Titles
MPOD allows for the inclusion of a user-defined main title and subtitle within a particular plot. The main
title appears at the top of the plot and the subtitle at the bottom. Both titles correspond to text strings which
are stored in the extra details area of the data file being plotted. The keywords corresponding to each title are
detailed below.
:
MPOD Ba tch Operation
MPOD runs in all the standard batch modes.
When run in batch mode MPOD will, by default, produce a hardcopy with the plot file taking on the next
available name of the form plN.plt  from the plot index.Keyboard Options
Note: These are normally available when the cursor is selected by typing CU at the prompt when the cursor
is over the plot, e.g. to draw a circle on the R-axis, press the R key, and a circle will be drawn through the
cursor.
Display Value V Pick off a value. Equivalent to pressing the LEFT HAND
mouse button
Define Window W Define a window. The window is rectangular and its left
corner will be the position of the cursor when W is pressed,
and the right corner the position of the cursor when the right
mouse button is pressed
Save Pair Data S Save coordinate pair in the extra details area
Replot P Replots entire screen
Hardcopy H Hardcopy plot of entire screen including menu and dialogue
box. The plot title will take the form PLn.PLT. Use PLTCON
to convert it to formats such as HPGL (.HPS)
Draw Circle R Draws circle at R
Draw Angle A Draws an angle at 
Quit Q Quit from cursor mode
Exit or return options EX and #EX Exit MPOD
Extra Data Keyword Text String Value
$TITLE &amp;lt;Main Title Text String - top of plot&amp;gt;
GRPTITLE &amp;lt;Sub-Title Test String - bottom of plot &amp;gt;
&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;Option Command Meaning&lt;/p&gt;
&lt;p&gt;731 APPENDIX C
Utilities
Main Index
If the /OPT=PL command is received in batch, MPOD will return to interactive mode and plot the data to
the screen.
A list of MPOD’s batch keywords:
/INP  Input file name
/RMIN    Minimum on R-axis to display
/RMAX  Maximum on R-axis to display
/TYPE Plot Type (Scatter/Join/Both)
/ONEIN   Plot 1 in value
/RSCAL  R-axis scaling (Linear/Log10)
/SETS  Data sets to display
/SHA   Whether to change shape between data sets
/OPT  Graphical plot options&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities732
Main Index
Three Dimensional Display - (MP3D)
This module is the histogram and waterfall display module. It accesses a standard nSoft histogram or waterfall
file and provides a 3D graphical representation in the form of a tower, surface, or waterfall plot. The display
can then be zoomed into, and positioning using rotation, tilt, and quadrant operations may expose hidden
areas. For histogram files originating from fatigue analysis damage/cycles files may be plotted directly. In
addition, mP3D will display the sum total occurrences of values along the X or Y-axis and display the result
as a 2D plot. For waterfall files, 2D plots of X-slice and Y-slice may be produced.&lt;/p&gt;
&lt;p&gt;733 APPENDIX C
Utilities
Main Index
Linux Bas ed Plo tting Utility - (M QPLO T)
MQPLOT is used to view or print plot (. plt) files. Up to 2000 plot files can be loaded onto MQPLOT and
viewed on screen and/or printed or plotted as hard copy. A large number of output devices are supported.
MQPLOT can also be used to convert plot files into different formats, for example . plt to .eps
(encapsulated postscript).
MQPLOT is designed to be simple and very easy to use. MQPLOT can also set up the number of plots per
page, landscape or portrait orientation, number of copies and whether the plot title should be on or off.
When viewing, MQPLOT can scroll through plots by mouse or key press, alter plot titles, deselect plots,
change print device and print. Plot files are produced by using the hardcopy option in any graphics module.
Unless the plot is given a specific name, then they take the form plnnnnnn.plt  where nnnnnn  is a number
starting at PL000001.PLT . The next value of n is stored in the local environment against the keyword
$NEXTPLT. A plot file has a &amp;lsquo;plotted&amp;rsquo; status, yes or no, so that when MQPLOT selects files to view or plot
the user has the choice of &amp;lsquo;All plots&amp;rsquo; regardless of whether they have been plotted or not OR &amp;lsquo;All unplotted&amp;rsquo;
which plots all unplotted files in the local directory. The F3/pick list shows the plotted status, and has
additional options for sorting alphabetically or by creation date, for displaying the plot title or creation date
and for deleting plotted plots.
In viewing mode, MQPLOT has a number of options including next/previous, scrolling by time display or
key press, deselection and print. In plotting mode, a plot device can be selected from the index
(plotters.ind ) stored locally or centrally and the setup can be customized to set the number of plots per
page (maximum 8), plot title inclusion or not, landscape/portrait orientation and number of copies. When
plotting (using the MGRAPHIC program), a status display can be given.
Module Operation
MQPLOT can be run in one of these ways:
In stand alone mode by invoking mqplot  at the operating system prompt as explained in
Configuration, 328 .
In batch mode&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities734
Main Index
When running in interactive mode the first screen to appear is where the plot files are named. If they are to
be output to a print or plotting device, the device is also specified on this screen. The fields are used as follows.
Option Description
Select All Plots, all
Unplotted, Select
PlotsSelect the input type for plots required: All Plots - All plot files in the local
directory, all Unplotted - All unplotted files in the local directory, Select Plots -
Select names from a list or enter via keyboard.
Up to 2000 plot files may be selected.
File Names The plot file names can be typed directly into the field. Multiple files can be
specified, for example FILE(1-4) would cause MQPLOT to load FILE1, FILE2,
FILE3 and FILE4. However, probably the easiest way to enter file names is by
using the List button).
When using the List facility, files can be tagged/untag (selected) in the usual way
prior to acceptance but MQPLOT&amp;rsquo;s top bar menu also has an options button for
sorting and display. The Options are:
Delete plotted  - Delete all the files which have been plotted and
regenerate the list.
Sort alphabetically  - Sort the list of file names alphabetically.
Sort on creation date  - Sort the list of file names into creation date order.
Creation date display  - Display the creation dates of all the files and
which program created them.
Plot Title display - Display the plot titles of all the files.
The default is to sort on data with date of creation display; when displaying title,
the environment keyword QPDTIT is set to Y.
The F3/List facility will not function if there are no plots in the current directory.&lt;/p&gt;
&lt;p&gt;735 APPENDIX C
Utilities
Main Index
If Display is set to Screen, some additional menu items are available for graphical manipulation. Instructions
for using the graphics menu and command line interface are typical to other graphical programs and not
detailed here. The full menu system and list of command line codes are shown below.
Most of the codes are standard and therefore explained elsewhere, but two of particular interest to MQPLOT
are NX and PR. Pressing NX (Next) and PR (Previous) allows the user to scroll forwards and backwards
through up to 50 plots, which is just about all that MQPLOT is intended to do in view mode.Output This is a simple toggle and only one option can be selected, not both. If Screen is
selected the files chosen in File Names will be displayed on the user&amp;rsquo;s screen.
For Device, select a device by double clicking on the name of that device. A list of
devices must first be created using the Windows-Based Plotting Utility - (MWNPLOT), 737&lt;br&gt;
program. Use MPLTSYS to edit the list.
Device If Device is selected then the Device field becomes active. It contains the user&amp;rsquo;s
choice, from a pick list of devices, that are available from F3 or the List button.
The exact contents of the pick list is dependent upon what the user has installed
using MPLTSYS.
Alter Setup Selection of Yes will allow the following plotter parameters to be set.
Plots per page  - from 1 to 8 (dependent upon the number of plots
selected).
Plot Title  - Whether the plot title should be output or not.
Orientation  - Whether the plot orientation should be landscape or
portrait.
Status Display  - Whether the status display should be shown or not.
Number of copies - The number of copies of the plot requested
When the plot system has been setup according to the user’s wishes, pressing F1
or OK will cause plotting or display to occur.
If plotting is to disk file or printer then the user takes no further part in the process.
In the event of problems MQPLOT will attempt to print to the selected device for
a period of time equivalent to the TIMEOUT variable as set in the environment,
e.g. TIMEOUT=15 for a time-out of 15 seconds. The time-out default is 30
seconds. Use module MENM to set the TIMEOUT . See Modifying the MSC Fatigue
Environment (MENM), 1501 .
Menu Option Prompt Code Meaning
MAIN The Main (and only) menu
Next Scrn NS Show the next plot in the queue
Prev. Scrn PS Show the previous plot in the queueOption Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities736
Main Index
Batch M ode
A list of MQPLOT batch keywords:Device DV Go back to the figure 2 screen to set the device
Scroll SCR Causes MQPLOT to automatically page through selected
plots without the user having to press Previous or Next
Alter Title AT Change the plot title
Deselect DES Remove the currently selected plot from the list
Print Setup PSU Go back to the screen to set the device
Print PRI Print a plot . plt file to disk
Return RT Return to the file name input screen of MQPLOT
Exit EX Exit out of MQPLOT
CU Go into cursor mode
OP List the options codes
/INPut Plot file name(s) to print, display, or &amp;lsquo;print&amp;rsquo; to disk (convert). /INP=FILE(1-9)
/TYPe T ype of output, Screen or Display (S or D). /TYP=S
/NAMe Name of the plotting device. /NAM=HPGL
/SELect Select the input type for plots A (all), U (unplotted), S (select). /SEL=A
/ALT er Alter Setup Y,N. /ALT=Y
/NUMber Plots per page, 1 to 8. /NUM=4
/TITle Plot Title Y,N. /TIT=My plot
/LAYout Orientation P ,L. /LAY=L
/COPies Number of copies. /COP=2&lt;/p&gt;
&lt;p&gt;737 APPENDIX C
Utilities
Main Index
Wind ows-Based Plotting Utility - (MWNPLOT)
This application allows plot files to be selected, previewed and plotted to any device supported by Windows.
The software is unprotected and may be loaded onto many computers simultaneously. A typical application
might be on a PC networked to a Linux installation, in which case plot files, after conversion by MCONFIL
to PC format, may be sent from the work station to the PC for inclusion within a document being created
by a word processor.
Initially screen displays are rendered in the same colors as set within each graphic module. Prior to printing
it is advisable to select a white background from the preferences menu.
Graphic diagrams can be imported, via the Windows clipboard directly into other applications such as word
processors. Better resolution can be achieved by copying to the clipboard via the meta-file format rather than
a bitmap.
Text may be reproduced by means of vectors (characters drawn by means of lines), or the fonts supported by
specific printers.
This is an interactive only program and can be invoked by invoking mwnplot  at a system prompt as
explained in Configuration, 328 .
The File Pulldown Menu
Option Description
Open This option allows one or more plot files to be selected and loaded ready for
viewing. A standard Windows File Open dialogue box is used to select the
required path and files. Dragging the mouse whilst pressing the left hand button
will mark several files for selection (although only one at a time can be viewed).
WNPLOT remembers the name of the last directory from which files were
loaded. Therefore storing your plot files in the same plot file directory will reduce
the need to change directory.
Having selected one or more files (up to 1000 can be selected), click the OK
button to load and display file(s). Pressing the print button will cause the currently
displayed plot to be sent to the current plotting device as specified in Windows.
Select the multiple print option in order to print a set of selected files.
Print&amp;hellip; Uses the standard Windows Print folder
Print Setup&amp;hellip; Uses the standard Windows Print Setup folder&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities738
Main Index
Options Menu
Clipboard Command
This option copies the currently displayed plot file to the clipboard from which it can be pasted into any other
suitable Windows application such as a word processor.
Or&amp;hellip;
Save as .WMFPage Setup&amp;hellip; Allows the size and paper source to be selected (printer and paper must be
available), and the orientation (Portrait/Landscape), and the paper margins.
Load Settings Just about anything that can be set from the other menu and button options, e.g.
font, font size, color, metafile vector/bitmap clipboard saves, etc. can be saved in
a settings file (using the Save Settings As option). Such files can be retrieved and
applied to the current plot(s). See also Pen Colors Setup folder.
Settings files have . set extensions. See also the nplot.ini  file.
Save Settings As The current settings, e.g. font, font size and color, metafile vector/bitmap
clipboard saves, etc. can be saved to a settings file for future retrieval and
application by the user. In this way a library of settings can be created that are
applicable to specific plots via the Load Settings option.
When saving settings files, save them with their chosen name and the . set file
extension, e.g. myprefs.set . Also, take care to save the files in a directory in
which you can find them in the future.
Option Description
Save Settings on Exit This option allows preferences such as line thickness, pen colors and background
colors to be saved on exit so that when the application is restarted, they are
immediately available.
Auto Redraw Some plot files may be quite large and, therefore, require some time to plot on
screen. Under these circumstances it may be desirable to select several preferences
between each repainting of the screen.
Set Auto-redraw to off to disable automatic re-draw after each option. The display
will be updated only when the View button is pressed.Option Description
Note:   The Preferences-Settings-Clipboard Settings folder must not have the Save to File check button
ticked (on).&lt;/p&gt;
&lt;p&gt;739 APPENDIX C
Utilities
Main Index
This option copies the currently displayed plot file to either the clipboard, or to a file, as a Windows metafile
(.wmf). See More details on Bitmaps and Metafiles for details of the metafile types available.
Or&amp;hellip;
Save as Bitmap (.bmp)
This option copies the currently displayed plot file to either the clipboard, or to a file, as a bitmap. See More
details on Bitmaps and Metafiles for details of the bitmap types available.
The Preferences Menu
Background Color&amp;hellip;
By default, this application reproduces graphic images in the same color scheme as the original graphic
modules; which means that the background color is generally black. See &amp;lsquo;Pen Colors Setup&amp;rsquo; folder also.
This option allows an alternative background color to be chosen. If the save settings option has been selected,
then the color setting will be saved.
Settings&amp;hellip;  This reveals a form with four different folder options:
Font Table Setup folder
Having elected to display textual information through the use of the Windows system of fonts, this option
allows specific fonts to be assigned to specific textual areas of the display. The font uses are as follows:
1.Default Font
2.Title Font
3.Annotation Font
4.Axes Labels Font
5.Axes Numbers
6.Text Font
7.to 16. User Defined
The Edit&amp;hellip; button pops up the font folder that allows the font, font size, color, and style, to be set for any
Font Description. The settings can be saved to a . set file (see Save Settings As).
If a .set file is loaded (see Load Settings) it can be used in future runs of WNPLOT until overridden by the
default settings (see below) or by the loading of another . set file.
The Default button loads the defaults, regardless of the current settings.Note:   The Preferences-Settings-Clipboard Settings folder must have the Meta File radio button set to on.
See More details on Bitmaps and Metafiles for details of the bitmap types available.
Note:   The Preferences-Settings-Clipboard Settings folder must have the Bitmap radio button set to on.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities740
Main Index
The Copy all button imposes the defaults onto the current plots.
Note that if text has been rotated by the original graphic application then a T rue T ype font must be selected
if the text is to be rotated on the hardcopy also.
Pen Colors Setup folder
The palette from which pens can be assigned colors is set here. There are 16 color slots available from which
pens can be assigned colors and the total number of colors from which to choose can be from 256 to 16
million (depending upon the PC’s hardware and settings).
The colors specified will affect the screen display, and most color plotters. Use the following table as a guide
to pen number and function:
pen 1 Default
pen 2 Data plots
pen 3 Text (only applicable to vector text)
pen 5 Axes including all labels
pen 6 Annotation text (only applicable to vector text)
pen 8 Grids within graphs
Clicking the edit button pops up the color palette from which colors can be selected.
Clicking the define custom colors button on the color palette pops up the windows color picker. Clicking
anywhere on the spectrum of colors causes that hue to be assigned to the 16 available. Adjacent to the
spectrum is a slider that controls the lightness of the hue
The Default button of the pen colors folder makes the current settings (including changes) become the new
default.
Monochrome devices will not respond to color definitions although up to four colors are automatically
simulated in mono by different line styles. Line thickness settings are effective in color and mono.
Line Thickness
The thickness of the line to be drawn can be set up from this dialogue box. Note that when text is set to fonts
the line thickness setting of fonts has no effect (Windows controls the font thickness), however, lines and axes
are still affected.
Clipboard Settings&amp;hellip;
The Clipboard Settings folder - Creating and defining graphics files.
Images can be copied as . bmp bit-maps using the current screen resolution, or in the form of Windows Meta
File vector files with . wmf extension. With vector files the resolution matches itself to that of the plot device.
Bitmaps will have . bmp file extensions, and windows meta files . wmf extensions.
Bitmap
The default dimensions of the image to be copied to the clipboard have been set to provide a graphic which
occupies about a third of a page of A4 paper, with an aspect ratio similar to the original screen image, i.e. 400
x 400 pixels. If a different size or aspect ratio are required then alternative settings can be set within this
dialogue box.&lt;/p&gt;
&lt;p&gt;741 APPENDIX C
Utilities
Main Index
Bitmap images can easily be edited in graphics editors such as Windows Paintbrush. Vector formats such as
.wmf tend to be less easy to edit but their variable and usually superior resolution makes them very popular
for CAD and presentation applications.
Meta File - Scalable
The clipboard stores the current graphic to RAM memory, or a disk file, depending upon whether Save to
File is ticked. Selecting Settings leads to a Settings window for the clipboard type (bitmap or metafile).
More details on Bitmaps and Metafiles.
Save to file - When Save to File is On, clicking Copy to Clipboard causes the Save Bitmap, or metafiles save
folder, to appear. Their File Type buttons allow any of the above graphics types to be the save format.
Miscellaneous folder
16 Colors/Monochrome
For monochrome displays, such as those found on certain lap-top computers, it is often preferable to view
images in monochrome. Selecting the monochrome option will reproduce the image in monochrome on
both the display and any color plotting device.
When printing to a black and white printer, e.g. most laser printers, it is advisable to set Preferences to
monochrome; results tend to be clearer (black on white has the highest contrast of all) and monochrome
tends to use the least toner.
If a plot was originally created with several lines differentiated in different colors, and mono is chosen then
up to 4 line colors are represented by different line styles.
Text Preferences - Fonts/Vectors
Text may be displayed on screen and on a hard copy by representing each letter as a series of vectors (lines)
which may limit their resolution, or through the use of the Windows font system. The latter invariably
provides a more satisfactory result which is generally much more compatible with the results obtained from
word processors and graphics packages etc.
One possible problem area in is text rotation whereby certain Windows print drivers may rotate text in an
unforeseen way. In such circumstances it will be necessary to use vector-based text.
Zoom Preferences
This option sets the mode of operation of the zoom buttons.
When set to Magnify, text or plot lines remain the same absolute thickness, and thus appear progressively
thicker as you zoom in.
When set to More Detail, the text and lines remain the same relative thickness, thus dense plots with many
points etc. can be easier to resolve.
The Button Bar
The function of most of the buttons is, given by their titles, self explanatory. In cases where the function is
not so obvious it is explained.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities742
Main Index
File Open - pops up the select file pick list and allows one or more plots to be loaded, i.e. it has the
same effect as the Open command on the File Menu. WNPLOT remembers the name of the last directory
opened.
The navigation and control buttons are analogous to those found on a
video recorder or audio tape player. They allow the user to page through a list of plots, jump quickly to either
end or beginning of the list, and start/pause the slide show. Some navigation keys have keyboard equivalents
as described in the topic Active Keyboard Keys.
Slide show Time Delay. The time delay in seconds for which plots are displayed during a slide show.
Redraw screen. Redraws the current plot, i.e. to remove any drawing marks or to put into effect a
series of commands that are pending because redraw is set to off (on the options menu).
Copy to clipboard. Copies the current plot to the clipboard (see also clipboard settings on the
clipboard menu).
Print. Pops up the Windows Print dialogue box.
Full Screen. Make the plot occupy the full screen. Navigation keys is still possible by using certain
keyboard keys as described in the topic   Active Keyboard Keys.
Zoom in by a factor of 2. Up to 4 zooms are possible. See also the Zoom settings on the
preferences menu. Zoom out by a factor of 2. Up to 4 zoom-outs are possible. See also the Zoom settings on
the preferences menu.
Drawing on the plot
The mouse cursor becomes a drawing tool pen if it is pressed and moved when it is over the plot area.
The pen is intended only for use as a marker or presentation tool, e.g. to temporarily highlight an area of
interest on the plot. None of the marks or writing drawn on the plot can be saved.
The pen is red when preferences are set to monochrome, and when set to color the pen is the reverse of the
background color (which is also set in preferences).&lt;/p&gt;
&lt;p&gt;743 APPENDIX C
Utilities
Main Index
Active Keyboard Keys
Several control buttons have keyboard equivalents:
Home - Jump to the first plot in the list.
Page Up - Go back to the previous plot.
Page Down, Enter or Return - Go forward to the next plot in the list.
End - Jump to the last plot in the list.
More details on Bitmaps and Metafiles
The minimum of information that must be set is the height and width of the bitmap. However, bitmaps can
be specified in much greater detail by toggling ’Save to file’ on and then clicking the File Options button.
The bitmap options are as follows:
RGB - Standard bitmap format that stores the palette
Bits per pixel - 1 = mono, usually black or white, 4 = 16 colors (4 bits=16 in base ten). If the graphic
has &amp;gt;16 colors then Windows picks the nearest color of the 16 and substitutes it - this can produce
unusual results), 8 = 256 colors, 24 = True color (16million colors)
RLE4 - Run Length Embedded bitmap (4 bits 16 color)
RLE8 - Run Length Embedded bitmap (8 bits 256 color)
The RLE formats are readable by many graphics applications.
Metafiles types can be specified when the Save to folder appears after Clipboard-Copy to Clipboard has been
clicked. The types are:
Scalable - Aldus placable - a very common format that includes the header (which makes it scalable).
This format is readable by 16 bit applications such as Windows 3.1programs.
Enhance - New to Windows 95 and NT - 32 bit only and non 3.1 compatible.
The nplot .ini File
Settings for fonts, pens, the clipboard, and general settings, are all stored in the nplot.ini  file. This is a
windows file that is loaded by windows immediately before WNPLOT , and sets many of WNPLOT’s
characteristics.
It is an ASCII text file that resides in the winnt  directory, and it can be edited by users. Make a backup copy
of nplot.ini  before editing it. An example of a nplot.ini  file is given below.
[GENERAL]
SaveSettingsOnExit=Yes
AutoRedraw=Yes
Colour=Yes
Fonts=Yes
Slidetime=5,
Zoom=2
workdir=c:
[CLIPBOARD_SETTINGS]
Bitmap=1
Limits=400,400
BitmapFileType=1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities744
Main Index
BitmapBits=8
[FONTS]
Font1=20,10,0,0,400,0,0,0,0,1,2,1,26,Arial
Font2=20,10,0,0,400,0,0,0,0,1,2,1,26,Arial
Font3=20,10,0,0,400,0,0,0,0,1,2,1,26,Arial
Font4=20,10,0,0,400,0,0,0,0,1,2,1,26,Arial
etc&amp;hellip;
[PENS]
Pen1=64,128,128
Pen2=64,0,64
Pen3=0,0,0
Pen4=0,0,0
etc&amp;hellip;
[PEN_WIDTH]
Pen1=5
Pen2=1
Pen3=1
etc&amp;hellip;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P39</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_039/</guid>
      <description>
        
        
        &lt;p&gt;745 APPENDIX C
Utilities
Main Index
Printer/Plotter Definition Module - ( MPLTS YS)
The utilities system can produce graphical hardcopy on a wide range of output devices. These include pen
plotters such as the wide range of HP devices, laser printer-plotters, and dot matrix printers.
Before any hardcopy can be produced, the plotters that are available on the system must first be defined.
The plotter definition system controls all aspects of defining the available plotters, and their setup (plot size,
position etc.). MPLTSYS allows definitions to be created, modified deleted and listed.
The definition of a plotter includes two parts, description and setup.
The description includes the name that the plotter will be known by, a general description of the plotter its
output port or file extension, and whether it is currently available for use. It is possible to have a defined
plotter that is currently unavailable for some reason. If the plotter is marked as being unavailable, users will
not be able to send hardcopies to it.
The setup includes details of the required plot size, position on the page, number of copies, physical
connection between plotter and computer and other things.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities746
Main Index
T wo types of setup are possible: central and local. The central setup for each plotter is held in a central
location and is used by all users. When a definition is first added, the setup data are stored centrally
automatically. The modification option allows a local setup for a plotter to be created or modified as required.
The local setup is held (permanently) in the local directory. There can therefore be as many local setups for
each plotter as there are local directories.
When a hardcopy output is produced, any settings found in a local setup override the corresponding settings
in the central setup. Individual users may therefore have plotter setups which are modified over the standard
central setup without having to modify the central setup.
Up to 16 definitions may be stored. This can be 16 different setups for a single device, a single setup for each
of 16 different devices, or any mixture between these extremes. The index of defined plotters is held in the
file &amp;lt;install_dir&amp;gt;\ mscfatigue_files\nssys\plotters.ind . The central setups for the defined
plotters are held in the same directory in files of type . de1. Local copies may be held in the local directory
under the same name as the central copy.
A schematic overview of the commands and options within the plotter definition system is shown in
Figure 3-185.&lt;/p&gt;
&lt;p&gt;747 APPENDIX C
Utilities
Main Index
Figure 3-185  Possible Plotter Definitions&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities748
Main Index
Figure 3-186  MSYSPLT Module Overview
Module Operat ion
The MPLTSYS module can be started in one of the following way:
In stand alone mode by invoking mpltsys  at the system prompt as explained in Configuration, 328 .&lt;/p&gt;
&lt;p&gt;749 APPENDIX C
Utilities
Main Index
The main options screen displays the defined plotters in a vertical list. For each plotter its name and
description are displayed. The following options are displayed:
eXit
Add
Modify
Delete
List
Import
The Modify, Delete, and L options occur on the currently highlight plotter definition.
These individual options are be described below except those that are self-explanatory.
Add a Printer/Plotter
Select the main option Add to add a plotter definition to the existing list. You must enter these three pieces
of information:
1.Plotter name  - The plotter name must be unique in the list of defined plotters, and is only a name.
It does not need to be the physical device name. For example the device could be a CANON laser
printer-plotter. In this case you do not need to specify the name as CANON. MPLTSYS  does not
know that it is a CANON type device by its name. You could call this plotter PLOTTER1, for
example. Note that the listing page will list only the first 6 characters of the name.
2.Description  - The description field can be used, for example, to identify the setup of this plotter. You
could enter CANON plotter - A3 paper. Users would then know that A3 size paper is loaded into
this device.
3.Available  - Select available or not as appropriate. If you select that the plotter is not available, it will
not be displayed on the list of plotters that graphical output can be sent to by the plot control system.
Once input is complete, press the OK button to save the data. At this point the name will be checked for
uniqueness. If a matching name is found an error will be displayed and the data will not be saved.
The program will then proceed through the following sections in turn:
Plot size selection
Plot orientation selection
Plot file disposal and number of copies selection
Paper feed selection
Pen selection
Plotter type selection
Plotter control parameters
Plot output destination selection&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities750
Main Index
Plot Size Selection
Plot Orientation Selection
This section allows you to rotate or invert the plots. This setup section is included only for compatibility with
previous releases of the software. It is better to use the Landscape/Portrait options available in the plot control
system.
Plot File Disposal and Number of Copies SelectionOption Description
Units of size The first field allows you to select the units of size used in the setup to be
millimeters, centimeters or inches.
Maximum Sizes on X
and Y axesThe maximum allowed sizes are for informational use only. No check is made
against the values entered when the hardcopy is produced.
Origins The X and Y origins are expressed relative to the mechanical origin of the plotter.
The relationship between the mechanical origin of the plotter and the paper is not
always clear. You can examine this relationship by setting the origin values to 0,
making a plot and seeing where the plot begins on the paper. You may enter
negative values here if required.
Plot Sizes on X and Y
axesThe X and Y-axis plot sizes are measured from the origin points specified above.
Option Description
Plot Rotation The plot can be caused to be rotated about the origin by answering yes to this
question.
Plot Rotation Angle If you specify Yes as the response to the plot rotation question, you will be allowed
to enter a rotation angle. The rotation angle is expressed in degrees and must be
positive. All rotations are taken from the origin in an anti-clockwise direction.
Plot Inversion If you select inversion, the plots produced will be rotated by 180 degrees about
their centre.
Option Description
Delete Plot File After
PlottingWhen hardcopy is selected in the display program, a plot file is produced
containing the device-independent codes required to produce a plotted hardcopy.
By selecting Yes as the response to the “delete plot file after plotting question” these
plot files will be deleted after the plot has completed successfully.
Number of Copies to
be PlottedThe number of copies produced for each plot file may be selected on this screen
by entering the required number here.&lt;/p&gt;
&lt;p&gt;751 APPENDIX C
Utilities
Main Index
Paper Feed Selection
You may select to have a paper feed before and/or after each plot, or no paper feed at all. If you specify no
paper feed, the plot control system will prompt you to enter paper before each plot is produced.
Option Description
Paper Feed Before
PlotSelect Yes here to cause a paper feed to occur before the plot is produced on the
plotter.
Paper Feed After Plot Select Yes here to cause a paper feed to occur after the plot is produced on the
plotter.
Paper Feed Type You may select either sheet or roll paper feed. On dot matrix printers where the
device is fed by continuous stationery, you should specify this as sheet, not roll. If
you select roll paper, you must enter the length of paper to be rolled out.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities752
Main Index
Plotter Type Selection
Vector devices are those devices which can directly understand a vector command. That is, they can directly
process a command to draw a line from A to B, and can process these commands in any order. Vector devices
include pen plotters, some laser printer plotters and postscript type devices.Length of Roll Feed If you have selected that the paper feed type is roll, you must specify the length of
the feed required.
Pen Selection
Number of Pens
Available (maximum
8)The pen selection screen allows you to specify the number of pens available, and
whether pen or line style change is to be used on an overlaid data plot.
In the graphical display software, it is possible to produce overlaid and cross-
plotted data graphs. It is important to be able to differentiate the different data
sources on the plotted hardcopy. The graphical hardcopy device drivers use the
information on this screen to decide how to display this type of data. The driver
has two options, use different pens (colors or thickness) or different line styles.
Different line styles are achieved by drawing lines made up of different length
dashes and spaces.
The procedure that the hard copy driver uses for determining what it will do is as
follows.
If you specify that the device has multiple pens and that pen change is to be used,
the device driver will use the different pens to display the different data lines. If,
for example, you specified that the device had 8 pens, and you plotted an eight
data line overlaid plot, each line would be drawn with a solid line using a different
pen, on the assumption that each pen is a different color. If you specified 4 pens
with the same data plot, the first four lines would be drawn as solid lines using the
four pens, the second four lines would be drawn as dashed lines (all the same
pattern) using the four pens. If you specified 3 pens with this plot, the first three
lines would be drawn solid with the three pens, the second three would be drawn
dashed (pattern 1) with the three pens, and the last two would be drawn as dashed
(pattern 2, different to 1) with the first 2 pens.
Change Line
style/PenIf set to Pen with multiple pens available, then each pen will be used.
If you specify one pen, or multiple pens with line style change instead of pen
change, each data line would be drawn primarily in a different line style rather
than a different color.
The facility to force multi-pen plotters to use line style change can be useful in the
case where the plot will need to be photocopied, when different colors may not
show up on the copies.Option Description&lt;/p&gt;
&lt;p&gt;753 APPENDIX C
Utilities
Main Index
Raster devices are devices for which the vector command must be translated before it can be understood.
These devices are impact printers and some laser printers. Consider a simple impact printer. In order to draw
a line from the top to the bottom of a piece of paper, the device must print one dot per line moving down
the sheet.
If the next command were to draw a line back to the top of the paper, the printer could not do this because
it could not move the paper backwards. Instead, the graphical hardcopy driver must split the plot into a series
of strips arranged vertically down the paper, and ensure that all the dots required in the plot in each strip are
produced whilst the print head is on this line. This means that the plot file must be processed several times
to actually produce the plot.
Pen color settings in the hardcopy environment:
This document gives some help and advice on the use of pen settings within the hardcopy environment. The
standard colors are: 1 - Black, 2 - Red, 3 - Green, 4 - Blue, 5 - Cyan, 6 - Yellow, 7 - Magenta, 8 - Brown
To change the pen colors, you need to create a file in the &amp;lt;install_dir&amp;gt;/mscfatigue_files/nssys&lt;br&gt;
directory which has the same name as your plotter name, but with an extension of . pen. For example, if you
are using a plotter called deskjet , then create a file called deskjet.pen . This file, which can be created
with any editor and should contain lines which specify a new pen number and the associated pen color
required. Each line in the file should be in the form:
&lt;!-- raw HTML omitted --&gt;=&lt;!-- raw HTML omitted --&gt;
where the pen number is the number of the pen to change, and &lt;!-- raw HTML omitted --&gt; is the new color, entered as a name.
So, for example, if you wish to replace yellow with black, enter a line as follows
6=black
The color name is NOT case sensitive. Comment lines can be included in the file by having a ! as the first
character in the line.
Plotter Type Selection = Vector
If you select vector, the toggle field shows the list of supported vector plotters (one of which must be selected).
Option Description
HPGL This is a generic entry which includes any device that implements the Hewlett-
Packard Graphing Language (HPGL). This includes HP devices themselves, but
since HPGL has become a de facto  standard, devices from many other
manufacturers (other than HP) support this protocol.
CALCOMP 81/84 These are A3/A4 size plotters driven by Calcomp graphing commands. As with
HPGL, devices from other manufacturers (other than Calcomp) may support this
protocol.
CANON (Vector) This entry refers to the CANON LBP8 series of laser printer/plotters that include
the VDM (Vector Draw Mode) facility fitted either as standard or as an option.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities754
Main Index
For PostScript printers:
What do the numbers designate?
The usage of each numerical designation is shown below.
1.Default Font
2.Title Font (For example File name)
3.Annotation (User added text on particular plots)
4.Axes Labels Font (i.e. X and Y-axis titles)
5.Axes Numbers Font (i.e. along X and Y-axis on plots)
6.Text (i.e. stats)
7.To 16 User Defined (Not Used)
What fonts are available in my printers PostScript Cartridge?
A file called fntlst.pos  should be located in the &amp;lt;install_dir&amp;gt;/mscfatigue_fiels/nssys&lt;br&gt;
subdirectory. If it is sent to a PS printer then it will cause it to print a list of all the fonts available in the
currently loaded cartridge.
Note that when entering a font name in the User Defined column that PostScript cartridges are very case
sensitive; type the name exactly  as it is shown in the font list, i.e. ZapfDingbats is not the same as Zapfdingbats DEC LN03+ This is the DEC LN03 laser printer/plotter fitted with the Tektronix graphing
option.
GRAPHTEC 4731 For driving the Graphteck 4371 continuous paper plotter.
PostScript This is a generic description including any device that implements the PostScript
language. The implementation of PostScript enables different fonts to be printed
on a plot, and also has two additional font selection screens, and for this reason
merits further explanation.
Option Description
T ext Output - Fonts |
VectorsIf set to Fonts, the plotter definition being edited can potentially make use of all
the PS fonts in the currently loaded cartridge.
If set to Vectors  then the PS fonts are ignored and the default font is used in vector
format - this can be useful if problems are being experienced with Postscript
settings.
Edit Font Table If set to Yes then the font table can be edited. For example, the setting 2 (the Title
font) can be set to Palatino-Bold, which is a more stylish font than Courier, and
the height scale factor Y is 1.5 which makes the title text 50% taller than the other
text. Scale factor can also be used to adjust inter-letter spacing.Option Description&lt;/p&gt;
&lt;p&gt;755 APPENDIX C
Utilities
Main Index
because the incorrect lower case &amp;rsquo;d&amp;rsquo; would cause the whole name to be unrecognized (which would cause the
default Courier font to be used instead).
Standard PostScript fonts which can be used on any PostScript device are: Courier, Courier-Oblique,
Courier-Bold, Courier-BoldOblique, Times-Roman, Times-Italic, Times-Bold, Times-BoldItalic, Helvetica,
Helvetica-Oblique, Helvetica-Bold, Helvetica-BoldOblique
These are available by toggling on any cell in column 1 with the space bar. Only Courier has a constant letter
width, the other fonts have variable letter widths, i.e. whereby an &amp;rsquo;m&amp;rsquo; is wider than an &amp;lsquo;i&amp;rsquo;, etc.
Plotter Type Selection = Raster
If you select raster, the list of the supported raster plotter types will be displayed in the toggle list, one of
which must be selected. Note:   Scientific notation, e.g. Greek symbols, is available with the Symbol or ZapfDingbats fonts on most
PostScript cartridges.
Option Description
EPSON FX The graphical hardcopy driver is capable of driving EPSON FX printers at three
different print densities.
EPSON LQ The graphical hardcopy driver is capable of driving EPSON LQ printers at four
different print densities.
HP PAINTJET The hardcopy driver is capable of driving the Hewlett Packard paintjet plotter at
two different plot densities.
HP LASERJET II The hardcopy driver is capable of driving the Hewlett Packard Laserjet II plotter
at four different plot densities.
OKI 290 Series The hardcopy driver is capable of driving the OKI 290 series color printer at three
different plot densities.
HP LASERJET III For driving the HP Laserjet III. These printers are faster than HP II s&amp;rsquo; because
compressed files are transmitted.
Deskjet Use HP laserjet III driver and choose 7 pens for color deskjet or 1 pen for a
monochrome deskjet.
Epson Escape P2 Use for Epson stylus printers. Choose 7 pens for color printer or 1 pen for a
monochrome printer.
Note:   Raster devices can only be output to a device, not to a file or a queue.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities756
Main Index
Plotter Control Parameters
The final set of data required in the plotter setup could be referred to as device specific data. The first is for
vector devices, the second for raster. The only difference between them is the first field on the screen. For the
vector device it is number of plotter units per 25.4 mm (one inch), for the raster it is a selection of plotter
density.
Option Description
Internal Scaling (Plot
Units per 254mm
and Plotter Density)For a vector device, the plotter units per 25.4 mm field will always appear with a
default value which varies according to the plotter type selected. It should not be
necessary to change this value. The ability to change it is included to cope with
the situation where a device may emulate another device type, but with a different
internal scaling.
For a raster device, a selection of plotter densities will appear, also varying with the
plotter type selected. The density figures shown will not necessarily relate directly
to any printer documentation in respect of their absolute values. For example, the
three densities available for the EPSON FX are 60 120 and 180, and these are not
the dots per inch figures published in the EPSON manual. Instead, the figures
should be used in the mode of low, medium. and high. The higher the value the
more dense (and better-looking) the plot will be. Also, the higher this value, the
longer the plot will take to produce.&lt;/p&gt;
&lt;p&gt;757 APPENDIX C
Utilities
Main Index
Plotter Inter-Buffer
Delay TimeThe next field allows the specification of an inter-buffer delay time for the device.
This field will only have any significance for plotters whose destination has been
set to be a serial device (via a COM port).
The output device and the computer should &amp;lsquo;handshake&amp;rsquo; using the method
selected on the serial device screen to ensure that the computer does not send data
that the output device is not ready to receive and process.
On some early devices, at high data transmission rates this process can break
down. The result is a corrupted plot, with lines appearing to be drawn at random
on the paper. The response to this field defines a time (in seconds) that the
computer will wait between each buffer of data (approximately 78 characters). If
this problem is experienced, judicious use of this parameter will allow it to be
overcome.
Pre and Post Plot
Command StringsThe final two fields on the screen allow the specification of pre and post plot
command strings. These allow you to define commands that will be sent to the
device before and after the plot is produced.
The pre-plot command could, for example, be the command string required to
change the device from one mode of operation to another to allow a plot to be
produced. The post-plot command could then be used to switch the device back
again. The values entered here must be in ADE (ASCII Decimal Equivalent)
format. That is, if a part of the string is the letter A, this must be entered as 65
(characters 6 and 5), since this is the ADE code for A. The specification as ADE
values is necessary since the typical types of commands to be sent include non-
printable characters.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities758
Main Index
Output Destination
Option Description
Output Destination
SelectionVarious screen displays are possible from this point, depending on the response to
the first screen in this set. There are three possibilities for the output destination,
Device, File and Queue.
If Device is selected, graphical hardcopy output using this plotter definition will
go directly to the plotter.
If you select File, the device-independent plot file will be converted into a device-
specific intermediate file that can be sent to the plotter by, for example, a print
command.
If Queue is selected, first a file will be produced as in the previous option, then
this file will be submitted to a print queue using user-defined commands. A print
queue is a facility whereby printing can occur on a device at the same time that
other programs are running.
Output Destination -
DeviceIf you select device as the output destination, a screen allowing the device to be
selected will appear. This screen allows you to select the actual computer port to
be used. This can be COM1 or COM2 (serial (RS232) ports) or LPT1 or LPT2
(parallel ports). Baud rate, data and stop bits, parity setting and handshake all have
to be specified if the output device is COM1 or COM2.&lt;/p&gt;
&lt;p&gt;759 APPENDIX C
Utilities
Main Index
Output Destination
Device - SerialThis screen is used to set the communications parameters for the serial port. The
responses to each of these fields must be set to match the settings on the plotter.
If they do not match exactly, the hardcopy will either not appear or will be
corrupted. If there is any doubt about the setup of your plotter, consult the
appropriate plotter manual.
In order for the computer to communicate with a printer or plotter over a serial
cable, the two devices must be capable of handshaking. This means that the
printer or plotter can tell the computer when to stop sending data, and when it
can re-start. If this does not happen successfully, data will be lost.
There are two handshake methods. The first is software controlled and is known
as Xon/Xoff handshaking. With this, the printer or plotter sends the Xoff
character (normally the DC3 ASCII character) to the computer when it wants the
computer to stop sending data. It sends an Xon character (normally the DC1
ASCII character) when communication is to be re-started.
The second handshake method uses connections on the serial interface and is
known as hardware handshake. The status (high or low) of a connection is
changed and monitored. One of two strategies is normally employed. The two
strategies are to interconnect the DTR and DSR lines (pins 6 and 20), or the CTS
and RTS lines (pins 4 and 5).
For serial devices, in the plotter system, the handshaking can be selected to be
either Xon/Xoff or hardware. The hardware handshake method supported is the
RTS-CTS link. If your device uses DTR-DSR, then a cable must be made
connecting the DTR signal to RTS, and the DSR signal to CTS.
This information is not relevant for the parallel ports and is not asked for. Only
the port number is asked if you select the LPT ports.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities760
Main Index
Output Destination -
FileOn selecting this option a screen will be displayed prompting for the file type of
the temporary device specific file that will be produced. The file type without the
period (.) should be entered. If you had, for example, two plotters connected, one
CANON and one HP , they could be setup such that the file type for the files to
be sent to the CANON is CAN, and HP for the HP . In this way they would be
distinguishable from each other, and it would be easy to see which should go to
which device.
When these files are created, they are created with the name n.ype , where n is a
number and ype is the answer to this question. The plot control system controls
the creation of these files.
Please note that the plot file deletion setting does not affect whether these
intermediate files are deleted.
This setting cannot be chosen for dot matrix printer type devices (Raster) devices.
The intermediate file that would be produced for each plot file would occupy
several megabytes of disk storage. This is because of the need to convert the
graphical data to a bitmap that can be printed on the device. These devices must
be driven direct through a serial (often called COM1 or 2) or a parallel port (often
called LPT1 or LPT2).
Output Destination -
QueueChoosing queue as the output destination causes an additional input screen to
appear.
The first field on this screen prompts for a file type. The comments in the previous
section - output destination file - apply to the response to be given here. The
device specific information is stored in this file.
File Name Method
Incremental  | Plot
File NameT wo other fields for input appear on this screen: queue text string to precede file
name and queue text string to follow file name. These allow the definition of the
queue command and any of its qualifiers. The graphical hardcopy output system
will build a command line using these two responses and the file name, and then
issue this command to the computer operating system.
For example, let us assume that one temporary file has been created whose name
is 7.spl . The program that will queue this file to a device is called PLOT, and
the file can be deleted after it has been sent to the device by appending /DELETE
to the file name. You would enter PLOT as the queue text string to precede the
file name, and /DELETE as the queue text string to follow the file name. The
software would build the command line
PLOT 7.spl /DELETE
and then send this command to the operating system.Option Description&lt;/p&gt;
&lt;p&gt;761 APPENDIX C
Utilities
Main Index
Once this final screen has been accepted, the program will return to the main options screen.
Modifying a Plotter Definition
Once a plotter definition has been created, the modification option can be used to change any of the stored
details. The modification option also allows a local setup for the plotter to be created and edited. On selecting
modification on the main options page with the currently highlight plotter selected, a screen is presented.
Any of the four fields on this screen can be modified. Please note that in order to modify the setup data, the
fourth (Modify Setup) field must be set to yes. Once this screen has been accepted and the choice to modify
the setup data has been made, if you have chosen to modify the setup data, another screen appears to allow
the selection of either the central or local setup. If local is selected, and a local setup file does not exist, it will
be created automatically, and the contents of the central setup file will be copied to it.
There is a difference in operation between modifying a central and a local setup. With the central setup all
the setup data can be edited. With the local setup, the plotter type and the plotter control parameters are not
able to be edited.
Having selected central or local, the main modification control screen appears. Any of the individual groups
of data can be selected. Once a group has been selected, the modification screen that appears is similar to the
addition screen and all the comments noted in the addition section apply.
Note that the Postscript font settings option only appears when a PostScript device is being modified.
Listing
On selecting the listing option, a further menu screen appears. This allows the selection to list either the
defined plotters (their name and description only) or the setup for the selected plotter.
One of two destinations can be selected for the listing: screen or file. Screen displays are sent directly to the
screen, with the screen pausing between each successive screen of data. If the listing is sent to a file, the name
of the file to which the data will be sent is needed. A default name will be displayed. By convention the file
type associated with list files is . lst If the default name is not accepted it is possible to omit the file type or
specify it as . lst.
If an existing file of the name specified is found, you will be asked if you want to overwrite it. If
Overwrite=No, the initial selection screen will appear, otherwise the file will be overwritten and the list file
will be created.
Import
Import allows an existing plotter definition file - they always have . de1 extensions - to be imported into the
current plotter table without having to define the new files characteristics, etc.Hint:   If you are trying to modify settings that appear to be unwilling to change, then please check
that the settings of a Local copy of the plot definition file of the same name are not overruling
the Global definition file that is undergoing to modification (Local definitions always take
priority over Global definitions).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Graphics Display Utilities762
Main Index
Imports must be in the &amp;lt;install_dir/mscfatigue_files/nssys  sub-directory - MPLTSYS
will not import plotters from other directories.
If the definition file originated from a different machine then it must first be converted using the
module MCONFIL.
Import has only one screen whose fields are:
Option Description
Plotter File Name Enter the file name of the . de1 to import. The name must be unique, it is not
allowed to have multiple plotters with the same name. The file MUST reside in
the system (nssys ) directory.
Plotter Name This is non-editable text taken from the plotter file.
Description Type a description of the imported plotter. It can be used to differentiate the
plotters for the users of the system by describing the physical plotter that has this
name.
Available If this plotter is available for use, e.g. connected to your computer, select Yes. If
not, select No.&lt;/p&gt;
&lt;p&gt;763 APPENDIX C
Utilities
Main Index
File Conversion Utilities
Various additional file manipulation and translation modules are also available.
Binary/ASCII Convertor - (M DTA/MATD)
MDTA - Binary to ASCII
The signal to ASCII module, MDTA, converts a single parameter, X-Y, or histogram binary file into ASCII
format.
It can also write or omit header details, and write an ASCII file as single or multiple column.
MDTA is complimentary to module PTIME which can convert ASCII files to binary files.
Signal files cannot be easily examined on a terminal or printing device because they are in binary format. For
the same reason they are difficult to manually edit (in a word processor for example). However, ASCII files
can be viewed or printed easily because they are letters and numbers. MDTA provides the means to quickly
and easily produce an ASCII version of many signal files.
The resultant ASCII files are meant to be read by PTIME and are not a generic file type.
The header of the input signal file can also be converted (or omitted) and MDTA can write multi or single
column.
Note that any extra details area data within the . dac file will be lost in this process. In order to retain such
keywords, write them out to a separate ASCII file, then import them into the data file using MFILMNP .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities764
Main Index
If multi-column is chosen the program will attempt to fit as many values onto a line as possible. This will
minimize the ASCII file size. The alternative is single column whereby each value (or pair of values for X-Y
files) will be written to a new line.
If two parameter files are to be created from a single parameter file then MDTA can read the header
information of the input . dac and create a second data column of X values e.g. time.
Numbers in an ASCII file are delimited (separated) by 1 of 3 characters from the ASCII character set. These
are the space, comma, or tab.
The file types supported are:
1 Parameter : .dac , .psd, .acf, .ada, .asd,, .pvx, .sxx, .sxy, .syy
Histogram:  .cyh, .dhh, .hst, .san
X-Y (2 Parameter):  .mdf, .css, .sl, .fal
The above table is not necessarily exhaustive.
MATD - A SCII to Binary
The ASCII to signal module, MATD, converts an ASCII text file into a format binary data file, for example
a 1 parameter .DAC file.
MATD processes files of data in ASCII format and converts them to binary format files that can, for example,
be plotted in MQLD or MMFD.
MATD&amp;rsquo;s complementary module is MDTA which converts binary to ASCII.
There are three options/modes of operation from ATD&amp;rsquo;s main menu:
1.Single channel file conversion&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P4</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_004/</guid>
      <description>
        
        
        &lt;p&gt;45 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.FTGPARM  bulk data is ignored if not selected by a FATIGUE  case control entry.  If a FTGPARM&lt;br&gt;
entry is not defined, default properties are used for the requested fatigue analysis.
2.For total life or stress-life (TYPE=SN), only STRESS results can be used. For crack initiation or
strain-life (TYPE=EN), the fatigue analyzer may use either STRESS or STRAIN results from the
finite element analysis. This selection should make no difference to the final results of a crack
initiation calculation, as strains are always  calculated. The exception is when shell results are used.
In this case, STRESS should be selected because only 2D results are available and the absence of the
out-of-plane strains can c ause incorrect calculation of combined parameters. It is an error to have
both STRESS and STRAIN lines. If both are missing, then STRESS is assumed with  default values.
3.PLAST can be set to NEUBER . Please note that NEUBER can be used universally for uniaxial stress
states. PLAST is only valid for TYPE=EN.
4.If LOC=ELEM (element center), fatigue lives are calculated based on stresses/strains at element
centroids (not recommended for anything but shell or 2D solid elements (plane stress/strain and
axisymmetric) and the RECOVER field is ignored or automatically set to CENTER. If
LOC=NODA, fatigue lives are based on stresses/strains from nodal averaged (grid point) stresses,
resulting in a single damage value at each node. If LOC=NODE, the fatigue lives are calculated from
the stresses/strains at the element nodes, resulting in multiple damage values per node. This  OUTPUT Coordinate system in which to translate stresses/strains before averaging:
-1 : Specifies the element coordinate system for output
0 : Specifies the basic coordinate system for output (default)
CID : Specifies the coordinate system defined on a CORDij bulk data entry
for output
The X-axis of this system is used to define the X stress direction. For shell elements the
X-axis of the specified coordinate system is projected onto the surface or, that is, the
resulting averaged stresses are a projection onto the surface.
NORMAL For shell elements defining a surface, this specifies the method to define the surface
normal. For solid elements defining a volume, this specifies the method to define the
stress Z-axis. Indirectly this also sets the reference direction for positive fiber and shear
stress output, but has no effect when OUTPUT=-1.  Can be set to R (default), X1, X2,
or X3.
M Specifies the reverse of the direction given by R, X1, X2, or X3 and must be  entered
as MR, MX1, MX2, or MX3 with no space between the M and the  following letter.&lt;br&gt;
R Specifies the radius vector from the origin of reference coordinate system to  the grid
point.
The Y stress direction is the cross product of the Z and X stress directions defined by
the NORMAL and the X-axis of the OUTPUT coordinate system.Field Contents&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters46
Main Index
parameter cannot be changed on a RESTART since it would require a different set of stress/strain
data, which is not allowed on a RESTART for a pure fatigue analysis. Note that for LOC=NODA
and LOC=NODE, the RECOVER field can be set to SGAGE, BILIN, CUBIC, or CORNER to
control which stresses are used in the fatigue analysis for element nodal stresses and correspond to the
same options as on the STRESS (or STRAIN) case control. LOC=NODE generally gives more
conservative answers than LOC=NODA since no averaging of the stresses/strains is done from the
contributions of the surrounding elements.
5.SRESOLVE is applicable for all three values of LOC, i.e.: LOC = ELEM, NODE or NODA.
SRESOLVE is an option to evaluate surface stresses instead of volume stresses. When surface resolved
stresses are requested from 3D solid elements, a thin layer of 2D shell elements is internally created
encompassing the volume of the elements defined on the FTGDEF entry from which the 2D stress
state is then determined. This parameter is necessary if a multiaxial assessment of a model made of
3D elements is necessary, otherwise 3D elements are ignored during a multiaxial assessment. Fatigue
life and multiaxial statistics are only reported for these newly defined 2D elements (or reduced set of
nodes) on the surface of the volume (free surface). Interior nodes are not included in the fatigue
calculation. The internal element IDs generated by this option can be controlled by using MSC
Nastran  SYSTEM cell 183 (Default is set to 200000000) .
Element sets must be the same for all FATIGUE case control IDs that request surface resolved
stresses. Otherwise a fatal condition is flagged and the analysis stops.
6.This RAINFLOW flag is used only to speed up the analysis by performing peak-valley-extraction. For
each event the input time history peaks and valleys are retained as well as corresponding points from
time histories of other events participating in the loading sequence. All other loading points are
eliminated, thus reducing the input time history data processing during the rainflow counting
procedure. RTYPE must be set to LOAD and is currently the only valid option.
7.Certainty of survival is based on scatter in the S-N or -N curves.  It is used to modify the curves
according to the standard error parameters ( ) defined in the MATFTG  material entry.  A higher
reliability level requires a larger certainty of survival.
8.This FOS option  calculate s a type of safety factor for over design analysis to be performed. This
analysis is in addition to the normal fatigue life/damage output and must be requested by the presence
of this FOS flag and its parameters. This analysis method can be very useful for those components
which predict infinite life, providing a measure of the risk of fatigue failure. The results of this analysis
are factors by which the stress would have to be scaled to attain the specified design life. A value of
one suggests that the specified life is exactly attained whereas a factor less than one means the desired
life will not be attained. Factors greater than one are, therefore, most desirable. FOS results are only
reported for the sum of all events when multiple events are defined. Resulting fatigue life results
reported are not affected by the presence of the FOS line.
9.For fatigue analysis of spot and seam welds, besides the “SPOTW” and “SEAMW” lines themselves,&lt;br&gt;
“CERTNTY”, and “FOS” are also applicable. “MULTI” is applicable to seam weld, but not spot
welds. All other s are ignored. TYPE field is ignored as an SN analysis is force d for fatigue of spot and
seam welds.SEn&lt;/p&gt;
&lt;p&gt;47 CHAPTER 2
Introduction to User Interface
Main Index
10. Biaxial/Multiaxial assessment can be requested for all but fatigue analysis of spot welds and is ignored
by SOL 200 optimization runs. These assessments require a 2D state of stress. For this reason only
shell elements are supported with this feature. See the SRESOLVE field i f 3D elements are involved.
11. The Rupp method for spot weld life prediction has not been validated for the prediction of fatigue
damage occurring at the middle sheets for spot welds joining more than two sheets. It should also be
noted that such failures are relatively rare, difficult to reproduce in the laboratory, and difficult to
detect in practice. Scrutinize middle sheet results carefully as they may give a false positive failure
prediction.
12. Setting the TORSION option enables fatigue calculations to be made based on the shear stress
around the periphery of the spot weld in each sheet due to the torsional load on the spot weld. Please
note the following:
a.This option requires that suitable S-N curves be defined for the torsion case, which may mean a
separate run for torsion vs for a non-torsion run.
b.Do not use this option unless your modeling strategy can generate realistic torsional loads in the
spot welds. For example, this is not true of the simple CBAR modeling approach.
c.The mean stress correction is applied a little differently, because the sign of a mean shear stress
cannot influence the fatigue damage. For this reason, the ABSOLUTE value (i.e., the magnitude)
of the mean stress is used when applying any mean stress correction for the torsion case.
d.The calculation is a completely separate operation—there is no combination of the torsional
stresses with the other stresses on the spot weld.
e.This option has had little validation, and no suitable S-N curves are provided with the software.
However, it has been successfully used in practice, using S-N curves deduced from practical
experience with car body structures, and has proved a useful tool for predicting premature failure
in the small number of spot welds that may experience significant torsional loads.
f.The results of the torsional fatigue calculation are identified in the results by being associated with
an angle of -1
13. Factor of Safety (FOS) analysis is only compatible with the MMTHD=SIMPLE if doing a multi-
axial/biaxial (MULTI) assessment in the same run. A fatal error is issued if also used in conjunction
with SPOTW (fatigue analysis of spot welds).
14. When LOC=NODA for requesting nodal average stresses, the grid point stresses generator is used to
determine the nodal averaging. A limited set of controls is provided on the NAVG line to control
how the averaging method. Internally, SURFACE and/or VOLUME definitions are created for the
grid point stress request, just as if the GPSTRESS case control, with its associated OUTPUT(POST)
commands, were given. However, only one SURFACE and/or VOLUME is determined based on
the elements defined on the FTGDEF entry for requesting fatigue analysis. The user should be aware
of possible stress discontinuities that can result from this.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters48
Main Index
Table 2-7  Allowable Values for  the COMB Field *
Stress/Strain
Combination Valid for TYPE Meaning
ABSMAXPR SN (+SeamWeld),
ENAbsolute Maximum Principal (default)
SGVON SN, EN Signed von Mises Stress
SGMAXSHR SN, EN Signed Maximum Shear
CRITICAL SN (+Seam Weld),
ENCritical Plane Analysis - every 10 degrees  by default unless NANGLE
is specified otherwise  - Not valid for 3D solid (with SRESOLVE=NO)
or CSHEAR elements - element must have an in-plane stress state.
STNDRD SN
(Spot Weld only)This is basically a critical plane analysis with calculations being done at
NANGLEs around the circumference of the spot weld.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The six multiaxial components defined by the stress tensor (or strain tensor) are resolved into one uniaxial
or combined value for fatigue calculations for each node or element for each time step. This is necessary since
the fatigue damage models used are based on theories which deal with uniaxial stress. These stress scalar com -
binations can be any of the above. For S-N analysis, the signed von Mises (SGVON) is smaller than the Ab -
solute Maximum Principal (ABSMAXPR) when there is positive biaxiality and hence this selection would be
less conservative. (Note also that some BS weld classes require shear stress to be used.)   The sign on the signed
parameters is taken from the sign of the absolute maximum principal value. It is necessary to sign these stress
parameters, otherwise non-conservative fatigue life estimates  result. It is therefore not recommended to use
non-signed values, thus they are not supported .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;49 CHAPTER 2
Introduction to User Interface
Main Index
Table 2-8  Allowable Valu es for the CORR Field
Mean Stress
Correction Valid for TYPE Meaning
NONE SN (+Spot/Seam Weld),
ENNo mean stress correction (default)
GOODMAN SN Goodman mean stress correction
GERBER SN Gerber mean stress correction
GDMANT SN Tension only Goodman mean stress correction
GRBERT SN Tension only Gerber mean stress correction
FKM SN (+Spot/Seam Weld) FKM mean stress correction method. Uses M1, M2, M3,
M4 slopes as defined in MATFTG  entry. See remarks in
MATFTG entry.
SIMPLE SN (Spot Weld only) Modified FKM mean stress correction method where
M1=M2=M3=M4=-MSS as defined in the MATFTG&lt;br&gt;
entry.
INTERP SN Interpolation method used with multiple SN curves only.
TYPE field of MATFTG  entry must be set to MEAN,
RRATIO, or LIFE . Requires that there be multiple curves
defined, one at R=-1 for TYPE=RRATIO, or zero (0)
mean stress for TYPE=MEAN.
SWT EN Smith-Watson-T opper mean stress correction
MORROW EN Morrow mean stress correction
MMPDS SN*
*If MMPDS S-N material model is specified and referenced on a MATFTG, then the MMPDS
mean stress correction is automatically applied regardless of the value of the CORR field.Walker mean stress correction built into the MMPDS-01
material curves.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Parameters50
Main Index
Table 2-9  Allowable S-N vs. Mean Stress Correction Methods
Mean Stress
Correction S-N Method
StandardMulti Mean
CurveMulti R-Ratio
Curve Haigh
NONE YES YES*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allowed but a curve at zero mean stress must be present.YES†
†Allowed but a curve at R = -1 must be present.NO
GOODMAN YES YES* YES† NO
GERBER YES YES* YES† NO
GDMANT YES YES* YES† NO
GRBERT YES YES* YES† NO
FKM YES YES* YES† NO
SIMPLE ‡
‡Spot Welds only.YES NO NO NO
INTERP NO YES YES YES
MMPDS MMPDS **
**MMPDS mean stress correction is only applicable when using MMPDS S-N
material model and automatically applied regardless of the mean stress correction
(CORR) setting.NO NO NO&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;51 CHAPTER 2
Introduction to User Interface
Main Index
Fatigue Loading
Fatigue analysis must have a definition of the cyclic nature of the loading. This is accomplished using a
number of bulk data entries and can be as simple as a single load oscillating between one (1) and minus one
(-1) to a complicated duty cycle consisting of multiple load events each containing multiple, simultaneously
acting loads. These entries are described here and more specific examples given in each of the examples in
this manual to clarify the proper usage of these entries. For a valid fatigue analysis, a FTGSEQ  entry must
be defined or at a minimum, a FTGLOAD  entry must be defined, in the case of only a single loading.
Defines the loading sequence for pseudo-static fatigue analysis using SOL 101 or modal transient fatigue
analysis using SOL 103 or SOL 112.
Format:
Example:
This example simply shows that the load sequence defined by FTGSEQ  ID 1 is made up of a single loading
event defined by FTGEVNT  entry of ID 6 (in the case of SOL 101 or 103) or SUBCASE 6 (in the case of
SOL 112) and that event is repeated or occurs 1.5 times .FTGSEQ Fatigue L oad Sequence
1 2 3 4 5 6 7 8 9 10
FTGSEQ ID EVNTOUT METHOD
FID1 N1 FID2 N2 FID3 N3 FID4 N4
FID5 N5 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
-etc.-
&amp;ldquo;UNITS&amp;rdquo; EQUIV EQNAME
FTGSEQ 1
6 1.5
Field Contents
ID Unique ID with respect to all other FTGSEQ  and FTGEVNT  entries. (Integer&amp;gt;0) See
Remark 1.
EVNTOUT Flag for requesting fatigue output for each event individually. (Integer; 0=no or 1=yes;
Default = 0). See Remark 7.
METHOD Event processing method. 0=independent, 1=Combined Full, 2= Combined Fast (Integer;
Default = 0). This entry is only honored from the controlling FTGSEQ  entry when called
out by the FATIGUE  case control. Otherwise it is ignored. See Remark 2. Currently only
METHOD=0 is supported.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Loading52
Main Index
Remarks:
1.FTGSEQ  bulk data are called out by FATIGUE  case control.
2.Processing of events can be done by determining the damage due to each event independently
(default) and then summing the damage due to all events. Or the events can be concatenated and
damage determined after rainflow cycle counting over all events. The advantage of the independent
method over the combined methods is computational expense versus accuracy. The combined
method  closes all cycles, whereas the individual method may miss a large damaging cycle if the cycle
begins in one event and ends or closes in a subsequent event. The combined fast method performs a
rainflow count data reduction to speed up the analysis and determine the most critical locations first
and then redoes a full analysis on the critical locations.  The concatenated methods are currently not
supported in this version.
3.Once a FTGSEQ  bulk data entry is referenced in an FIDi field, it can  not be referenced again in any
other FTGSEQ  entries (within its own associations - the same fatigue analysis) to avoid infinite
loops.  And if it is referenced by the FATIGUE  case control, it cannot appear in any FIDi field of the
FTGSEQ  bulk data.
4.Different FTGEVNT s can be set up and the user can construct each sequence by specifying how
many times to repeat each event in a sequence.  One sequence could then be referenced in another
sequence to tell the new sequence how many times to repeat that sequence.  As an example, assume
there are three events an automobile is subjected to: cobble stones, pot holes, speed bumps.  One
sequence might be five (5) &amp;ldquo;cobble stones,&amp;rdquo; six (6) &amp;ldquo;potholes&amp;rdquo; and three (3) &amp;ldquo;speed bumps.&amp;rdquo;  This
sequence may be called &amp;ldquo;torture track.&amp;rdquo;  Also define two more events called &amp;ldquo;cornering left&amp;rdquo; and
&amp;ldquo;cornering right.&amp;rdquo;  A load sequence of ten (10) &amp;ldquo;cornering left&amp;rdquo; and ten (10) &amp;ldquo;cornering right&amp;rdquo; might
be called &amp;ldquo;country road.&amp;rdquo;  Now with a nested FTGSEQ  you can put these together any way you
want.  So one fatigue analysis might use a sequence of only &amp;ldquo;country road,&amp;rdquo; another of only &amp;ldquo;torture
track&amp;rdquo; and another of a combined six (6) &amp;ldquo;torture tracks,&amp;rdquo; five (5) &amp;ldquo;country roads,&amp;rdquo; followed by one
(1) more &amp;ldquo;torture track&amp;rdquo; and one (1) more &amp;ldquo;country road&amp;rdquo;  This would result in 3 fatigue analyses. FIDi ID of a FTGEVNT  or another FTGSEQ  entry for pseudo-static fatigue analysis using SOL
101 or a modal analysis using SOL 103, or a subcase ID that represents the loading event
or another FTGSEQ  entry for modal transient fatigue analysis using SOL 112.
(Integer &amp;gt;0). See Remark 3. and 4.
Ni Number of repeats of this loading sequence or event (Real&amp;gt;0.0, Default=1.0). Ignored if
only one event is defined. For METHOD=1 and 2, Ni must be a whole number, i.e., 1.0,
2.0, 3.0, etc. In other words, fractions of events are not allowed. Fractional events are also
not allowed for any METHOD if the corresponding FID references a FTGSEQ entry. See
Remark 3. and 4.
&amp;ldquo;UNITS&amp;rdquo; Flag indicating that a fatigue equivalent unit name is applied to this loading. See Remark
5. and 6.
EQUIV Number of equivalent units. (Real&amp;gt;0.0; Default=1.0). See Remark 5. and 6.
EQNAME Equivalent name of this loading event. EQNAME can span across fields 4 through 9.  If
not defined it is called Repeats  (Character). No spaces are allowed. See Remark 5. and 6.Field Contents&lt;/p&gt;
&lt;p&gt;53 CHAPTER 2
Introduction to User Interface
Main Index
5.If the &amp;ldquo;UNITS&amp;rdquo; flag is absent, the default fatigue equivalent unit is 1.0 Repeats  of the resulting stress
time history sequence. Equivalent units specified on FTGLOAD  entries are ignored when FTGSEQ&lt;br&gt;
entries are used
6.Example of using equivalent units:  If one repeat of the sequence is equivalent to 5 times around a
test track, the equivalent unit name, EQNAM, might be &amp;quot; laps,&amp;quot; and the equivalent unit, EQUIV,
would be 5.  Fatigue life is reported in these units if defined, otherwise they are reported as repeats of
the loading sequence. Life output is reported in both Repeats  and the fatigue equivalent units, if
defined.
7.For SOL 200 only EVNTOUT=0 is supported. Also some additional output file formats are not
supported if EVNTOUT&amp;gt;0. Also see the FATIGUE  case control entry for STROUT=4 limitations.&lt;br&gt;
If a factor of safety (FOS line present on FTGPARM  entry), safety factors are only reported for the
sum of all events.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Loading54
Main Index
Groups simultaneously applied loads into loading events for pseudo-static fatigue analysis using SOL 101 or
modal analysis using SOL 103 by referencing FTGLOAD  entries.
Format:
Example:
This example shows that this fatigue load event consists of two separate, but simultaneously applied, loading
defined by FTGLOAD  entries of IDs 4 &amp;amp; 11 .
Remarks:
1.Each FTGEVNT  ID must be unique relative to all other FTGEVNT  and FTGSEQ  IDs.
2.Event names are passed to the f06 print file and displayed as the name of the event as opposed to the
event ID. If no name is given, the event is referred to by its ID.
3.EVNTNAM cannot have numbers at the start of any field. For example, using 8 character formatted
fields, the first character of fields 3-9 cannot be numeric (columns 1, 9, 17, etc. or the EVNTNAM
field). These would be acceptable:
“Flights”  or “F_l_i_g_h_t_s ’.
But these would not be acceptable:
“1_Flights ” or “F_l_i_g_2ts ”
because the “1” and the “2” are in columns 1 and 9 of the EVNTNAM field.FTGEVNT  Fatigue Loading Events
1 2 3 4 5 6 7 8 9 10
FTGEVNT ID FLOAD1 FLOAD2 FLOAD3 FLOAD4 FLOAD5 FLOAD6 FLOAD7
FLOAD8 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip;
-etc-
“NAME” EVNTNAM
FTGEVNT 22 4 11
NAME rough_road
Field Contents
ID Unique ID. See Remark 1.
FLOADi ID of a FTGLOAD  entry (Integer &amp;gt; 0, no default).&lt;br&gt;
NAME Flag indicating that a name is to be associated with this load event. See Remark
2.
EVNTAM Event name associated with this event (Character). Can span fields 3 through
9, however for practical purposes, the name is truncated in f06 output. No
spaces are allowed. See Remark 3. and 4.&lt;/p&gt;
&lt;p&gt;55 CHAPTER 2
Introduction to User Interface
Main Index
4.EVNTNAM cannot handle spaces within its field as one might expect. If you wish to uses spaces,
make sure that once a space is used the next character does not start until the start of the next field.
For example, using 8 character formatted fields, the following would be acceptable:
“My_flights ” or “My      Flights ”.
But this would not be acceptable:
“My Flights ”
and would end up just being displayed as “ Myts ” because once a space is encountered within the 8
character field, the code interprets that as no more character data until it processes the next 8
character field. It is best not to use spaces in EVNTNAM.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Loading56
Main Index
Defines loading time variation for pseudo-static fatigue analysis using SOL 101 or modal analysis using SOL
103.
Format:
Examples:
T wo examples are shown here where the first associates SOL 101 subcase ID 2 to its cyclic variation defined
by TABLFTG  ID 4. This could also be a SOL 103 mode number associated to its modal participation factor
(modal loading). The second shows the same thing except that now it is subcase ID 5 associated to
UDNAME  entry 4 (flagged by the “DB”). The UDNAME  entry defines an external file containing the cyclic
variation of the loading .FTGLOAD Fatigue Loading Time Variation
1 2 3 4 5 6 7 8 9 10
FTGLOAD ID TID LCID LDM SCALE/
MAX   OFFSET/
MIN TYPE CHNL
&amp;ldquo;UNITS&amp;rdquo; EQUIV EQNAME
FTGLOAD 55 4 2  1.0 1.0 0.0
FTGLOAD 23 4 5 1.0 1.0 0.0 DB
UNITS 5.5 Flights
Field Contents
ID Unique ID which is referenced by a  FTGEVNT  entry or directly by a FATIGUE  case
control (Integer &amp;gt; 0).  See Remark 1.
TID Table ID of a TABLFTG  (or TABLED1 ) entry that defines the time variation of the loading
or the ID of a UDNAME  entry for external definition of the loading time variation (Integer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0). See Remarks 2. through 6. Ignored if TYPE=CONST or STATIC.
LCID Subcase ID of a linear static solution SUBCASE for SOL 101 or a mode number for SOL
103 (Integer &amp;gt; 0, no default).
LDM Largest magnitude of the applied load (in the same units used to define the load time
variation in field TID) used to normalize the load (Real, default=1.0). This effectively scales
the stress to simulate a stress state due to a unit load.  See Remark 7.
SCALE/
MAX Scale factor applied to the load time history (Real, default=1.0). See Remark 7. Or the 1st
peak level of a constant amplitude signal if TYPE=CONST (Real, default=1.0).
OFFSET/
MIN Offset applied to the load time history (Real, default=0.0). See Remark 7. Or the 2nd peak
level of a constant amplitude signal if TYPE=CONST (Real, default = -1.0). MAX can be
&amp;lt; or &amp;gt; than MIN for TYPE=CONST .
TYPE Flag indicating the type of load being defined. Values can be: blank, &amp;ldquo;DB&amp;rdquo;, &amp;ldquo;DAC&amp;rdquo;, &amp;ldquo;RPC&amp;rdquo;,
&amp;ldquo;CONST&amp;rdquo; or &amp;ldquo;STATIC&amp;rdquo;. Default is blank. See Remarks 2. through 6.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;57 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.If a FATIGUE  case control command invokes an ID that is present on both a  FTGSEQ  entry and a
FTGLOAD  entry, the FTGSEQ  request is honored and the FTGLOAD  entry is ignored unless it is
referenced on an FTGEVNT entry.
2.If the TYPE field is blank then TID references a TABLFTG  or TABLED1 entry.
3.If TYPE=DB, DAC or RPC, then TID references a UDNAME  ID. A UDNAME  entry must be
supplied in this case to specify the file and path of the externally defined load time variation. This file
is expected to be in standard DAC file format or channel data in the form of a RPC file. TYPE=DB
is the same as TYPE=DAC. You cannot mix TYPE=RPC designations with any other TYPEs within
the same fatigue analysis ( FATIGUE =FID). If RCP is used, all FTGLOAD  entries must use
TYPE=RPC. The same RPC file must be reference d via UDNAME  for all FTGLOAD s of the same
event ( FTGEVNT ).
4.If TYPE is STATIC, the TID field should be left blank as it is ignored.  STATIC indicates that the
stress state from the specified LCID is to act as a static offset with no load time variation when
performing the linear superposition, which  gives every element a different offset defined by the stress
state at each element of the specified subcase, as opposed to simply specifying the OFFSET field,
which gives every element the same offset. If the &amp;ldquo;STATIC&amp;rdquo; flag is specified, there must be at least
two FTGLOAD  entries defined and called out by a FTGEVNT  entry, one of which must be time
varying (see Remark 7.).
5.If TYPE is CONST, the TID, LDM, and CHNL fields are ignored. The MAX and MIN fields are
used to define the maximum and minimum values of a constant amplitude cycle. TYPE=CONST
cannot be mixed with any other TYPE values for a given fatigue analysis ( FATIGUE =FID). All
loading must be of TYPE=CONST. This is sometimes referred to as block loading.
6.For modal analysis using SOL 103, the referenced load variation defines the modal participation
factors for the referenced mode.
7.The LDM, SCALE, and OFFSET are used together in the following manner to scale/modify the
stress state in order to determine the resulting stress time variation:CHNL Channel of referenced RPC file (TYPE=RPC). (Integer &amp;gt;0, Default is blank). See Remark
11.
&amp;ldquo;UNITS&amp;rdquo; Flag indicating that a fatigue equivalent unit name is defined for this loading. See Remarks
8. and 9.
EQUIV Number of equivalent units (Real&amp;gt;0.0, default=1.0).  See Remarks 8. and 9.
EQNAME Equivalent name of this loading history. EQNAME can span across fields 4 through 9.  If
not defined it is called Repeats  (Character). No spaces are allowed. See Remarks 8. and 9.Field Contents
ijt Ptij,l
LDM&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-SCALE  OFFSET + =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Loading58
Main Index
where  is the resulting stress tensor at time t,  is the stress tensor from the subcase or
mode defined by the LCID field, and P(t) is the y value of the load-time history at time t as defined
by the TID field. For multiple loads, the principle of linear superposition is used to combine all loads
for a single event.
8.If the &amp;ldquo;UNITS&amp;rdquo; flag is absent, the default fatigue equivalent unit is 1.0 Repeats  of the stress time
history. If this FTGLOAD  is referenced by a FTGEVNT , then the equivalent units on this entry are
ignored and those on the FTGSEQ  entry take precedent. Only if a FTGLOAD  is directly referenced
by a FATIGUE  case control are the fatigue equivalent units used as defined on the FTGLOAD  entry.
9.Example of using equivalent units:  If one repeat of the defined time history is equivalent to 5 times
around a test track, the equivalent unit name, EQNAME, might be &amp;quot; laps,&amp;quot; and the equivalent unit,
EQUIV, would be 5.0.  Fatigue life is r eported in these units if defined, otherwise they are reported
as Repeats  of the loading. Life output is reported in both Repeats  and the fatigue equivalent units, if
defined.
10. All FTGLOAD  entries referenced by a FTGEVNT  should reference different SUBCASEs for SOL
101 (or modes for SOL 103) and must have time variations consisting of the same number of points.
11. CHNL is only used for TYPE=RPC. If supplied, the specified channel of the referenced RPC file is
used. If it is left blank, the next available channel sequentially from the last one referenced is used. For
example, if there are three FTGLOAD  entries for a specific event and CHNL is blank for all three,
the 1st one will use channel 1, the 2nd one will use channel 2 and the 3rd will used channel 3. If in
this example the 1st specifies CHNL=11 and the others are blank, then the channels used are 11, 12,
and 13. If the 1st is left blank and the 2nd references CHNL=12, then the channels used are 1 , 12,
and 13.ijt ijl&lt;/p&gt;
&lt;p&gt;59 CHAPTER 2
Introduction to User Interface
Main Index
Defines tabular data for specifying fatigue cyclic loading variation.
Format:
Example:
Remarks:
1.The TABLFTG  is referenced by a FTGLOAD  entry.
2.The x-values are assumed to be in ascending order.  For rainflow cycle counting purposes the actual
x values are inconsequential.
3.For modal analysis using SOL 103, this would define the modal participation factors for a particular
mode.
Note: The TABLFTG  entry is specific to time domain fatigue analysis and referenced only by
FTGLOAD  entries. The FTGLOAD  entries can also directly reference a TABLED1 entry to
define the time variation in the load.TABLFTG Fatigue Loading Tabular Data
1 2 3 4 5 6 7 8 9 10
TABLFTG TID
y1 y2 y3 y4 y5 y6 y7 &amp;ldquo;ENDT&amp;rdquo;
TABLFTG 1
0.000 -1.0 1.0 0.0 ENDT
Field Contents
TID T able identification number. (Integer &amp;gt; 0)
yi Y value of each point in the time history curve. (Real).&lt;br&gt;
&amp;ldquo;ENDT&amp;rdquo; Flag indicating the end of the table.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Loading60
Main Index
Defines a tabular function for use in generating time-dependent loads from an externally defined channel
data file.
Format:
Examples:TABL RPC Dynamic Load Tabular Function Referencing Channel Data File
1 2 3 4 5 6 7 8 9 10
TABL RPC TID XAXIS YAXIS UID TYPE CHAN TOTIM PUNCH  
  xi1 xj1 xi2 xj2 xi3 xj3 -etc.- &amp;ldquo;ENDT&amp;rdquo;  
TABL RPC 32 33 RPC 5  
UDNAME 33  
C:\myrpcfile.rsp
TABL RPC 32 33 DAC  
0.0 20.0 35.0 60.0 ENDT
UDNAME 33  
C:\myrpcfile.dac
TABL RPC 32 -33 5  
0.0 20.0 35.0 60.0 ENDT
UDNAME 33  
C:\myrpcfile.rsp
Describer Meaning
TID Table identification number. (Integer &amp;gt; 0 , no default )
XAXIS Specifies a linear or logarithmic interpolation for the x-axis. (Character: “LINEAR” or
“LOG”; Default = “LINEAR”)
YAXIS Specifies a linear or logarithmic interpolation for the y-axis. (Character: “LINEAR” or
“LOG”; Default = “LINEAR”)
UID Identification number of a UDNAME entry to specify the external file that defines the x-y
pair values that define the actual tabular function. Required. (Integer != 0, no default)
TYPE Type of external file to specify via UID field. (Character: “RPC”  or “DAC” ; Default =
“RPC”)
CHAN Channel number to read for Y (load) values from “RPC”  file. Leave blank for “DAC” files.
(Integer &amp;gt; 0, Default = 1)
TOTIM Total time of the signal defined in channel CHAN.  Optional. (Real &amp;gt; 0., Default=Blank).
See remarks below.&lt;/p&gt;
&lt;p&gt;61 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.The TABLRPC  entry can be referenced by any entry that can reference a TABLED1. The TABLRPC&lt;br&gt;
is internally converted to a TABLED1 entry using the channel data specified. This internal
TABLED1 entry can be written to the punch (. pch) file if the PUNCH field is set to YES.
2.The CHANnel specified contains the Y (load) data. The X (time) data for each point is automatically
extracted from the channel file at each point to create the x-y pairs for a TABLED1 entry. The
TOTIM (total time) of the signal can be optionally supplied, in which case the time increment of
each point is calculated as TOTIM / (NPNTS-1) where NPNTS are the number of signal points.
This will override any time specifications for the points from the original channel file.
3.xii/xji field pairs are purely optional. If not needed, no continuation lines should be present, in which
case the entire signal defined in the specified CHANnel is taken.
4.The xii/xji field pairs represent sections of the channel to read and must be in the order in which they
appear in the external file. For example, to read from only x=0.0 to x=1.0, specify xi1=0.0 and xj1=1.0
and xi2=ENDT. If the first xii is left blank, reading begins at the first data point. If the last xji value
is left blank, then the rest of the data points are read to the end of the channel. If a specified xii or xji
value does not exist, only the points in between are retained or excluded.
5.Any xii/xji field pair may be ignored by placing the character string “SKIP” in either of the two fields.
6.The end of the table is indicated by the existence of the character string “ENDT” in either of the two
fields following the last entry. An error is detected if any continuations follow the entry containing
the end-of-table flag “ENDT”
7.As this data is converted to a TABLED1 entry, all comments pertaining to the TABLED1 entry are
also valid.
Note: This TABLRPC  entry description is included here because it can be referenced in place of a
TABLED1 entry anywhere a TABLED1 entry may be referenced by other bulk data entries.  This
is especially convenient for transient dynamic analysis using SOL 112 where the dynamic loading
can be reference directly from an external time series channel file instead of converting the channel
file data to TABLED1 entries. Although not directly related to a fatigue analysis, many fatigue
analyses use channel file data and this entry make running a SOL 112 analysis with  this data more
convenient.PUNCH Specify whether equivalent TABLED1 entries containing the actual x-y pairs should be
written to the PUNCH file. (Character: “YES” or “NO”; Default= “NO”)
xii/xji x-y pair Filter mechanism. The given (xii,xji)  pairs reflect the start and end x-values for
inclusion from the external file; or if UID is negative, the given pairs reflect the start and
end x-values to exclude from reading from the external file. See remarks below. Optional.
(Real). 
&amp;ldquo;ENDT&amp;rdquo; Flag indicating the end of the table.Describer Meaning&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Analysis Model Units62
Main Index
Provides the name of a file referenced from the FTGLOAD entry.
Format:
Example:
Remarks:
1.The UDID is referenced by  FTGLOAD  and TABLRPC entries .
2.The NAME can be of any length, but the Nastran embedded fatigue capability only supports up to
64 words which corresponds to four lines of data in fields 2 through 9.
3.If only a NAME with no path (e.g., sine01.dac ) is supplied, the file is assumed to be located in the
same directory as the Nastran input file.  If an absolute or relative path is supplied (e.g,
/local/user/fatigue/sine01.dac ), it is used.
4.The filenames must be all lowercase.
Analysis Model Units
When performing fatigue analysis, it is important to understand the relationship between the model’s units
and those necessary for a fatigue analysis. Please see the remarks in the description of DTI, UNITS below.
Defines units necessary for conversion during a Nastran embedded fatigue analysis.
Format:
Example:
For fatigue analysis, only the stress units are necessary.UDNAME User Defined File Name
1 2 3 4 5 6 7 8 9 10
UDNAME UDID
NAME    &lt;br&gt;
Field Contents
UDID Unique UDID (Integer&amp;gt;0). See Remark 1.
NAME Name of the file (with or without path) of the external loading time history in DAC  or R PC
format. (Character).&lt;br&gt;
DTI,UNITS Unit Definitions
1 2 3 4 5 6 7 8 9 10
DTI UNITS 1 STRESS&lt;/p&gt;
&lt;p&gt;63 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.MSC Nastran is a unitless code and it is the user’s responsibility to ensure compatible units. During
a fatigue analysis, stress is converted to SI units of MPa because the fatigue material property stress
parameters as defined on the MATFTG  entry are internally converted to standard SI units of MPa.
The stresses from the analysis must match. Thus it is necessary for the user to use DTI,UNITS  to
define the stress units to ensure proper conversion.  The default units are MPa and this entry is only
necessary if stresses are not in MPa.
2.Supported1 values of STRESS  units are:
•MPA - megapascal (default)
•PA - pascal
•PSI - pound per square inch
•KSI - kilo pound per square inch
•PSF - pound per square foot
•KSF - kilo pound per square foot
•DYNECM2 - dyne per square centimeter
•BAR - bar
•ATM - physical atmosphere
Fatigue Optimization
Design optimization using SOL 200 allows for the definition of fatigue life or damage responses. These
responses can be used as design objectives, such as maximizing life or minimizing damage, or for defining
constraints on fatigue life or damage at particular locations on the model. Below is a partial listing of the
DRESP1  entry explaining how it is used for fatigue responses only. The fatigue item codes are also listed.
Defines a set of structural responses that is used in the design either as constraints or as an objective.
Format:DTI UNITS 1 MPA
1 For fatigue analysis of spot welds, only MPA, PA, PSI, KSI, PSF, and KSF are supported.DRESP1 Design Sen sitivity Response Quantities
1 2 3 4 5 6 7 8 9 10
DRESP1 ID LABEL RTYPE PTYPE REGION ATTA ATTB ATT1
ATT2 -etc.-&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Optimization64
Main Index
Example:
This example defines a fatigue life response (ATTA=4) on element 321 (ATT1=321) defined by the fatigue
analysis called out by FATIGUE  case control of ID 44 (ATTB=44). A label called FLIGHTS is used to name
the response .
Remarks:
1.Fatigue item codes can be found in Table 2-11.
2.For RTYPE = FATIGUE, PTYPE must be set to ELEM or PSOLID, PSHELL, PBAR, PBEAM, or
PWELD. ATTB is the ID of a FATIGUE  case control.&lt;br&gt;
3.If a FATIGUE  case control references a SET ID, then ATTB must reference one of the IDs referenced
by the SET.
4.Design optimization using fatigue responses is currently limited to one fatigue analysis, that is, one
loading sequence. Multiple fatigue responses referencing different loading sequences, i.e., FATIGUE&lt;br&gt;
case control IDs, will result in an error.DRESP1 55 FLIGHTS FATIGUE ELEM 4 44 321
Field Contents
ID Unique entry identifier. (Integer &amp;gt;0)
LABEL User-defined label. (Character)
RTYPE Response type. See Table 2-10. (Character)
PTYPE Element flag (PTYPE =“ELEM”) or property entry name. Used with element type
responses (stress, strain, force, etc.) to identify the property type, since property
entry IDs  are not unique across property types. (Character: “ELEM”, “PBAR”,
“PSHELL”, etc.)
REGION Region identifier for constraint screening. (Integer &amp;gt;0)
ATTA, ATTB,
ATTiResponse attributes. See Table 2-10. (Integer &amp;gt;0 or Real or blank)
Table 2-10  Design Sensitivity Response Attributes
Response Type (RTYPE)Response Attributes
ATTA (Integer &amp;gt;0)ATTB (Integer &amp;gt; 0 or Real &amp;gt;
0.0) ATTI (Integer &amp;gt;0)
FATIGUE
(pseudo-static)Fatigue Item Code.
See Remark 1.ID of a FATIGUE  case
control.
See Remark 2. and 4.Property ID (PID) or
Element ID (EID)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P40</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_040/</guid>
      <description>
        
        
        &lt;p&gt;765 APPENDIX C
Utilities
Main Index
MATD can convert single parameter time history files, paired data files, and histograms.  If the data
came from MDTA then header details are automatically used.&lt;br&gt;
MATD can convert non-equally spaced data, and can selectively choose or ignore data from a file as
required. This selectivity is made possible by the user supplied parameters, explained in the Module
Operation section.
2.Multi-channel file conversion
This option extracts many channels of data from an input file simultaneously. The data must be
sequential (i.e., time history format).
The program will need the following information to be supplied:
•The number of channels in the input file
•A list of channels to be demultiplexed
•The sample rate of the data
•The base offset of the data
•For each channel, its X and Y axes&amp;rsquo; units and labels
The information may be input using the keyboard or from an ascii file (hereafter referred to as a
general setup file). The format of the general setup file is shown at the end of this technical overview.
3.Chart logger (dAtagate) file conversion
This option extracts many channels of data from an input file created by the dAtagate chart logger
(from now on referred to as a chart logger).
The program will normally take the default setup from the chart logger&amp;rsquo;s setup file, however, a general
setup file may also be used.
Spreadsheet
For multi-channel demultiplex operations a spreadsheet facility is offered for specifying and editing the
default X and Y axes labels and units.&lt;br&gt;
MDTA Mod ule Operation
The MDTA module can be run in one of the following modes:
In stand-alone mode by invoking mdta  at the system prompt as explained in Configuration, 328 .
By incorporating the  MDTA commands in a batch operation
Once running in interactive mode the MDTA module prompts for the following input. The purpose and
usage of each field is explained below. Note that until Input File Name is completed and confirmed (by
clicking OK) then none of the other fields are active.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities766
Main Index
Option Description
Input File Name In this field the user should type the name of an input binary file (often a single
parameter . dac file). By default MDTA assumes a . dac file extension but if a file
with a different file extension is to be processed then enter the File Name plus
extension in full. T wo parameter files and histogram (3 parameter) files can also be
processed.
MDTA will expect to find the input data files resident in the user’s directory.
However, other directories can also be accessed if the complete file specification
path name and file name are entered. Probably the easiest way to name an input file
is to use the pick List facility.
Output File Name In this field the output ASCII file must be named. The file extension will by default
be .asc although if a different name and extension is entered here then the
alternative extension will be used.
By default MDTA uses the input file name as the output file name (the file
extensions will be different). If a file with the same name as he proposed output file
name already exists on the target drive and directory then MDTA will prompt the
user for permission to overwrite the existing file.
Write Header
Yes/NoMDTA can optionally write the header details to the ASCII file. If the ASCII
output file is subsequently converted back to binary (by module PTIME) then the
header information will also be converted. This MDTA/PTIME pairing is useful,
for example, if a binary header needs to be edited and then re-converted back to
binary.
The header details will occupy their usual fixed 20 first lines of the file.
Multiple Column
Yes/NoIf multiple column is selected, the program will attempt to fit as many values into
a line as possible. If no value is selected then every data value X-Y pair will be
written on a separate line (although the ASCII file will be larger).
Separator This field enables the user to select which of three ASCII characters will be used to
delimit or act as a boundary marker, between the data values.
Include X-Values? If two parameter files are to be created from a single parameter file then MDTA can
read the header information of the input . dac and create a second data column of
X values e.g. time&lt;/p&gt;
&lt;p&gt;767 APPENDIX C
Utilities
Main Index
MDTA Batch Ex ample
MDTA can be invoked in all the standard batch modes. A typical batch command line would be:
mdta /inp=saetrn/out=saetrn/ov=y/mul=y/del=t
In this case, MDTA would convert a data file called saetrn.dac . The results would be written to a file
saetrn.asc  and this file would be overwritten if it already existed. The ASCII file will be multi- column
with tabs as delimeters.
A list of MDTA’s batch keywords:
MATD Mod ule Operation
The MATD module can be run in one of the following modes:
In stand alone mode by invoking matd  at the system prompt as explained in Configuration, 328 .
By incorporating the  MATD commands in a batch operation.
Once running in interactive mode the MATD module appears allowing access to the three modes of
operation.
Mode 1 - Single Channel
The following input is available for Single Channel operation:/INPut The input file name. /INP=FILE
/OUTput The output file name required for the results data file. /OUT=RESULT
/OVerwrite Whether to overwrite an existing results file. /OV=Y
/HEADer Whether to write header, Yes or No. /HEAD=Y
/MULtiple Whether to write multiple columns (or single) Yes/No. /MUL=Y
/DELimiter The delimiter character Space, Comma, Tab /DEL=C&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities768
Main Index
Option Description
ASCII Filename This field asks for the name of an ASCII text file data to be converted to a time
series file format .DAC file. The assumed file extension is .ASC though other file
extensions and pathnames are accepted if they are entered explicitly.
Use the pick list facility to select an input file. Note that until this field has been
completed, none of the other fields will appear.
Output Filename This requests the name of a time series file (e.g. *.DAC) as the output of the
ASCII to DAC conversion process. The generic name of the input file is offered
as default, and if the output file already exists in the specified directory, the user
will be asked to confirm that it may be overwritten.
Sample rate Enter the sample rate on points per second (Hz).  The default is 1 Hz, or the
value in the macro of the ASCII if it was made by DTA, or if the keyword
ATDSAMP is set in the environment then any values associated with that
keyword are used. If the time increment is known then the sample rate is the
time rate&amp;rsquo;s reciprocal.
Equally Spaced Data
?  Yes/NoMATD can convert two types of ASCII data file:
Where the data consists of values only, where the values are assumed to
be equally spaced apart in time. If the time values are present in this
case, they may be omitted provided the correct sample rate is entered. (a
single parameter file)
Where both time and values are present, and the time values are not
equally spaced. The data is assumed to be formatted with a time
followed by a value sampled at that time. This is the two parameter file
type.
The user must answer Yes if the data format is like that of 1) above, or No if the
data format is like that of 2) above. If Yes is entered and Take All Numbers = No,
then the following fields appear. Start Position for Accepting, Number of Values
to Skip, and Number of Values to Take.
Header Lines to Skip The ASCII text file being used as input to MATD may have some header lines
containing information about the data rather than data itself. The user is
requested to enter the number of lines of header the program is to ignore as valid
data lines. The default is determined by the environment keyword ATDSKIP ,
which MATD both sets and reads in the local environment. It may be necessary
to view the ASCII file to count the header lines. If the ASCII file was produced
by the module MDTA then the correct number of header lines to skip to recreate
the original signal file is 20.&lt;/p&gt;
&lt;p&gt;769 APPENDIX C
Utilities
Main Index
Take All the
Numbers  [Y/N] The conversion program is only interested in data points and not in any other
numbers which may be in the file, such as time base values. This question is
asking whether all the numbers in the ASCII file are to be used or whether some
are to be ignored. When the file is a file of time-data value pairs where the time
values are NOT equally spaced then answering Yes will cause MATD to treat all
data as time-value pairs. If No then ATD will ask for the time column number
and the data column number.
Start Position for
Accepting This field appears if Equally Spaced Data=Yes and Take All Numbers=No.
If the user wishes to skip some data values in the file, for example in the case of
a multiplexed ASCII file such as:
1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 8
etc. (8 channels)
Each channel may be taken out one at a time by specifying the start location of
the channel. In this case, for channel 4, selecting a start value of 4 and the skip
value (next question) of 7 (skip 7 values before the next data value for channel
4), will convert only the ASCII data for channel 4. The default is to begin taking
data at the first value.
Number of Values to
Skip This field appears if Equally Spaced Data=Yes and Take All Numbers=No
If the user wishes to skip some of the data values in the file, then the number of
values to skip at any one time must be given in response to this prompt. For
example, if the file is like this:
1
2.5
2
3.45
3 etc.
and the values 1,2,3 are not required, then the number to skip is 1. The default
value is 0, meaning do not skip.Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities770
Main Index
Mode 2 - Multi Channel
The following input is available for the multi-channel operation:Number of Values to
TakeThis field appears if Equally Spaced Data=Yes and Take All Numbers=No. If the
user wishes to skip some of the data values in the file, then the number of values
to accept at any one time must be entered at this prompt. For example, if the file
is like this:
1
2.5 3.5 4.5
2
3.45 4.2 3.1
3  etc.
and the values 1,2,3 are not required,  then the number to skip is 1 and the
number to take is 3. The default number to take is 1. If Equally Spaced Data =
No, then Start Position for accepting, etc., does not appear.  They are replaced
by Time Column and Data Column.
Time Column This field appears if Equally Spaced Data=No and Take All Numbers=No. If non
equally spaced data is in the input file then the program needs time value pairs.&lt;br&gt;
If  the file has multiple data columns, the user must specify which column is
time. Therefore, in this field the time column number is entered.  MATD will
assume that each line has the same number of columns.
Data Column This field appears if Equally Spaced Data=No and Take All Numbers=No. In
addition to knowing which is the Time Column, MATD must also know which
is the Data Column.
Y-Axis Label/Units All screen displays contain these two fields. The label for the Y-Axis is Magnitude
and Volts by default, however the user can enter any 28 characters in these fields
should they wish to change the Label/Units. Having completed all inputs,
MATD begins the data conversion and gives the following on screen message.Option Description&lt;/p&gt;
&lt;p&gt;771 APPENDIX C
Utilities
Main Index
:
Option Description
General Setup
FilenameThe name of a general setup file should be entered into this field. General setup
file usually take an .ATD extension and this will be assumed if none is given. If
the field is left blank it will be assumed that the program is to create a temporary
default setup for the demultiplex operation. A list of .ATD files is offered by
pressing the pick list button or by clicking the mouse on the LIST button. A file
may be selected from this list.
ASCII Data Filename The name of the ASCII data file should be entered into this field. ASCII data files
usually contain a number of header lines followed by the data to be demultiplexed.&lt;br&gt;
The standard extension for this type of data file is .ASC and this will be assumed
if none is entered. A list of .ASC files is given by clicking the pick list button); A
file may then be selected from this list.
Generic Output
FilenameA generic file name for the output filenames should be entered here. The output
filenames are created by appending the channel numbers to the filename and
adding a .DAC extension, e.g., Demultiplexing channels 1, 5 and 6 using a file
stem FRED will produce the following output filenames:
FRED01.DAC   -   Contains data from channel 1
FRED05.DAC   -   Contains data from channel 5
FRED06.DAC   -   Contains data from channel 6
Header Lines to Skip The standard ASCII data file may optionally contain a header area proceeding the
data to be demultiplexed. This question asks for the number of lines of text
comprising the header area. The first non-blank line after this area is then assumed
to be the start of the data to be demultiplexed. The default is determined by the
environment keyword ATDSKIP , which MATD both sets and reads in the local
environment. If the ASCII data file does not contain any header information then
the answer to this question will be 0.
Number of Chans in
FileThis question is asking for the number of channels, NCHANS, defined in the
data file. The program can then synchronize the data knowing that a new sample
begins after every NCHANS data values in the input file. The channels are
numerically tagged, incrementing sequentially from 1 to NCHANS (i.e. if 4
channels are defined these are tagged 1,2,3,4). Channels are subsequently referred
to by their numerical tag. If a general setup file is being used the default number
of defined channels offered in this field is taken from this file.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities772
Main Index
Mode 3 - Chart Logger
The following input is available for the chart logger operation:Sample Rate of Data This question determines the sample rate of the data. It must be the same for all
channels. The sample rate is defined to be the number of samples per channel per
second. It is also the reciprocal of the time increment between each sample of a
given channel. If a general setup file is being used the default sample rate offered
in this field is taken from this file. If no setup has been nominated the default
value offered is 1 unless the keyword ATDSAMP is in the environment in which
case its associated value is used.
Base Offset of Data This question determines the X-Axis base offset of the data. Most commonly this
means the time at which the first data in the input file was sampled and it usually
has a value of zero. It must be the same for all channels. If a general setup file is
being used the default value for the base offset is taken from this file. If no setup
is being used a default value of 0.0 is offered.
Demultiplex
Channel ListThe list of channels to demultiplex is entered in this field. The input may be
entered using the keyboard as follows:
1,5,7-10 - selects channels 1,5,7,8,9 and 10
ALL - selects all channels in data file
DEFAULT - uses the default channel list from the setup file or
ALL channels if a setup file is not being used
Alternatively, the channels may be selected from a list of all active channels offered
by pressing the pick list button or by clicking the mouse over the CHAN button.
The word &lt;!-- raw HTML omitted --&gt; is written to the field to denote a list of channels
selected this way. The number of channels selected is displayed below this field.
When all the above fields have been filled, ATD will use the spreadsheet function
to display the units and labels for each channel. The spreadsheet function is
explained four pages ahead.Option Description&lt;/p&gt;
&lt;p&gt;773 APPENDIX C
Utilities
Main Index
Option Description
Logger Setup
FilenameA chart logger setup filename should be entered into this field. Logger files take a
.SET extension (this is implied if none is given). Files with other extensions are
assumed to be general setup files. If the field is left blank it will be assumed that
the program is to create a temporary default setup for the demultiplex  operation.
A list of .SET files is offered by clicking the mouse on the LIST button. A file may
be selected from this list.
When the logger file has been selected the following items are requested:
Logger Data
FilenameThe chart logger data filename should be entered into this field. Chart logger data
files take the extension .PRN and this will be assumed if none is entered. A
warning is issued  if  the specified file does not exists. A list of .PRN files is given
by  pressing the pick list button. A file may then be selected from this list.
Generic Output
FilenameA generic stem for the output filenames should be entered into this field. The
output filenames are created by appending the channel numbers to the filestem
and adding a .DAC extension, e.g., Demultiplexing channels 1,5 and 6 using a file
stem FRED will produce the following output filenames:
FRED01.DAC   -   Contains data from channel 1
FRED05.DAC   -   Contains data from channel 5
FRED06.DAC   -   Contains data from channel 6
Header Lines to Skip MATD would fail if it attempted to start extracting data in the header region of
the input file.  So, because the header region consists of a discrete number of lines
at the top of the file, it is possible to instruct MATD to skip that number of lines
before data extraction will begin. The default is determined by the environment
keyword ATDSKIP , which MATD both sets and reads in the local environment.
By default MATD will skip whatever number of header lines it encounters in the
input file. Also, because ASCII files can be loaded into a text editor, it is possible
to manually count the number of lines that need skipping in order to answer this
question.
Number of Chans in
FileThis question is asking for the number of channels, NCHANS, defined in the
data file. The program can then synchronize the data knowing that a new sample
begins after every NCHANS data values in the input file. The channels are
numerically tagged, incrementing sequentially from 1 to NCHANS (i.e. if 4
channels are defined these are tagged 1,2,3,4). Channels are subsequently referred
to by their numerical tag. If a general setup file is being used the default number
of defined channels offered in this field is taken from this file.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities774
Main Index
The MATD Spreadsheet
There are three main areas on a spreadsheet screen:
1.The data area  itself which consists of rows and columns of data cells.
•Column A  contains the channel number  It can contain numerical designations for up to 256
rows.  These labels can NOT be edited.
•Column B  contains the X-axis labels.  Values can be edited. See the Copy function for details of
quick global edits.
•Column C  is the X-axis units and  columns  D and E contain the corresponding values for  the Y-
axis. Sample Rate of Data This question determines the sample rate of the data. The sample rate is defined
to be the number of samples per channel per second. It is also the reciprocal of the
time increment between each sample of a given channel. If a general setup file is
being used the default sample rate offered in this field is taken from this file. If no
setup has been nominated, the default value offered is 1 unless the keyword
ATDSAMP is in the environment in which case its associated value is used.
Base Offset of Data This question determines the X-Axis base offset of the data. Most commonly this
means the time at which the first data in the input file was sampled and it usually
takes the value 0. If a general setup file is being used the default value for the base
offset is taken from this file. If no setup is being used a default value of 0.0 is
offered.
Demultiplex Channel
ListThe list of channels to demultiplex is entered in this field. The input may be
entered using the keyboard as follows:
1,5,7-10 - selects channels 1,5,7,8,9 and 10
ALL - selects all channels in data file
DEFAULT - uses the default channel list of setup file or ALL
channels if a setup file is not being used
Alternatively, the channels may be selected from a list of all active channels offered
by pressing the pick list button. The word &lt;!-- raw HTML omitted --&gt; is written to the field
to denote a list of channels selected this way. The number of channels selected is
displayed below this field. When all the above fields have been filled MATD will
use the spreadsheet function to display the channel units and labels for each
channel (see next section). Exiting from the spreadsheet editor will initiate the
demultiplexing operation (after the user has confirmed this action). During logger
file demultiplexing, lines containing errors will cause a temporary  halt with a
message to select one action from Remove, remove All, or  Exit.  Any lines
removed in this way will be written or appended to a test file, ATDERR.LOG, for
subsequent viewing.Option Description&lt;/p&gt;
&lt;p&gt;775 APPENDIX C
Utilities
Main Index
2.The edit window  at the bottom of the screen.  It contains  temporary or volatile data, such as the data
value currently highlighted or  being edited.
3.The header bar  across the top of the screen which contains the buttons for manipulating the data and
navigating around the columns and rows. All of the buttons have keys mapped to a function, as
described in the footer.
Most of the operations in the header bar are self evident. Those that are not are listed here:
Option Description
OK When the edits have been made this option quits the spreadsheet environment
and starts the demultiplexing operation.
Back This option quits the spreadsheet environment and returns to the previously
viewed screen.
Set Verifications Off Suppresses the less crucial verification requests. For example the verification for
restoring a snapshot will not be asked.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities776
Main Index
MATD Batch Operation and Setup Files
MATD can run in batch mode because the spreadsheet operations are inherently interactive and are not
available in batch. In the absence of interactive instructions, Setup files   in which the interactive instructions
are preprepared are used. Setup files are described here.Set Channel
Substitution String This option allows a string to be defined such that wherever it is encountered as a
substring in any channel label or unit it represents the channel number. For
example, assume the channel substitution string is set to &amp;ldquo;nn&amp;rdquo; and the Y-labels for
channels 3,57 and 92 are set as follows:
3:Strain Gauge nn
57:Serial No PK00nn
92:Channel-nn
The actual labels written to the output files will be
Strain Gauge 3
Serial No PK0057
Cha92el-92
Note that the substring, nn, is obviously inappropriate since it produces an
unrequired substitution in the word Cha nnel.
SNAPSHOT Causes the current spreadsheet values to be remembered. The values are reinstated
by using the restore option.  A snapshot is automatically taken when the
spreadsheet is first entered.
RESTORE Spreadsheet values are re-instated to those stored when the last snapshot was
taken. Verification is only required if the verify preference is switched on.Option Description&lt;/p&gt;
&lt;p&gt;777 APPENDIX C
Utilities
Main Index
A minimal specification in a general setup file must contain values for the sample rate, base offset, number
of channels and the list of channels to be demultiplexed. The file format of general setup files is rigid and the
following rules must be observed when they are created:
1.Tokens must be delimited by triangular brackets &amp;lt;  &amp;gt;
2.The only tokens recognized are those listed above. Any unrecognized token will be assumed to be the
result of misspelling and will cause an error.
3.Any line not beginning with a token is ignored and treated as a comment. Option Description
Chart Logger Header
FilesThe default setup for chart logger data is taken from the corresponding .SET file.
However, it is permitted to use an .ATD setup file if required.
No Setup File If no setup file is nominated then all input fields corresponding to demultiplex
parameters are initialized to NULL thus forcing values to be entered.
General, .ATD, Setup
filesThe general setup file will be structured as follows.
The first line of the file will distinguish an MATD general setup file from other
files:
MATD General Setup File: Created 5/2/95 for testing with MYDATA
The characters up to and including the colon form the identification string. All
characters after this colon are optional and are ignored.
All remaining lines of importance will contain recognizable tokens followed by&lt;br&gt;
their associated parameters.
TOKENS / Example
&lt;!-- raw HTML omitted --&gt; 12The number of header lines preceding the data
&lt;!-- raw HTML omitted --&gt; 0.01The sample rate
&lt;!-- raw HTML omitted --&gt; 0.00The x-base offset
&lt;!-- raw HTML omitted --&gt; 3, Time The channel number (3) followed by the label
&lt;!-- raw HTML omitted --&gt; 3, Strain The channel number (3) followed by the label
&lt;!-- raw HTML omitted --&gt; 3, Seconds The channel number (3) followed by the units
&lt;!-- raw HTML omitted --&gt; 3, uE The channel number (3) followed by the units
&lt;!-- raw HTML omitted --&gt; 4The number of channels in the data file
&lt;!-- raw HTML omitted --&gt; 2,3The list of channels to be demultiplexed
&lt;!-- raw HTML omitted --&gt; nnnThe channel number substitution string
&lt;!-- raw HTML omitted --&gt; 1-9,17,18 The logical channel mapping information used
when saving information from a logger setup
file to a general setup file.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities778
Main Index
4.Token lines must contain their corresponding parameters. Labels and units may seem not to be
specified in some files where their values comprise solely of white-space (TAB characters and spaces).
5.Lines containing tokens should not contain any other information other than the token&amp;rsquo;s associated
parameters.
6.In the example above channels 2 and 3 are to be demultiplexed from a 4 channel file, however, the
units and labels for channel 2 will be initialized to NULL because they have not been defined.
7.The following tokens may appear more than once to allow the specification of information to be
spread over several lines of the setup file which otherwise would result in a line too long to fit within
screen viewing limits:
•&lt;!-- raw HTML omitted --&gt;
•&lt;!-- raw HTML omitted --&gt;
•An error is invoked if the setup file contains any of the tokens in the following list more than
once:
•&lt;!-- raw HTML omitted --&gt;
•&lt;!-- raw HTML omitted --&gt;
•&lt;!-- raw HTML omitted --&gt;
•&lt;!-- raw HTML omitted --&gt;
•&lt;!-- raw HTML omitted --&gt;
A list of MATD’s batch keywords:
/INP File name of the ASCII file to convert (.ASC) /INP = AERO
/OUT File name of the output signal file (.DAC) /OUT=AERO
/OV Whether it overwrites the existing output filename /OV = Y
/SPA Whether the data is equally spaced in the frame /SPA = N
/HEAD Number of header lines to skip /HEAD =
/ALL Whether to take all the numbers in the file /ALL = N
/STA The start position for accepting /STA = 10
/SKIP How many values to skip /SKIP = 4
/TAKE How many values to take /TAKE = 1
/SAM Sample rate for the output file /SAM = 2
/UNI Units for the output file /UNI= mV
/XBASE Base offset of X-axis
/LAB Output file label /LAB = Title
/TCOL Time column /TCOL = 2
/DCOL Data column /DCOL = 2
/SET up Setup filename.&lt;/p&gt;
&lt;p&gt;779 APPENDIX C
Utilities
Main Index
/INPut Input filename.
/OUTput Output filename.
/NCHANS Number of active channels in data file /NCHANS=8
/CHAnnels List of channels to be demultiplexed.
/ERRACT Action to take if multichanel datafile has errors (R, A, X)
/MISDAT Action to take if multichannel samples not complete (Z, R, X)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities780
Main Index
Signal Regeneration - (M REGEN)
MREGEN can:
regenerate a single parameter signal file (. dac extension) from a three parameter range-mean cycles
histogram file (. cyh type).
regenerate a single parameter signal file (. dac extension) from a three parameter maximum-
minimum cycles histogram file (. cyh type).
regenerate a single parameter signal file (. dac extension) from a three parameter Markov Matrix
(.mkh type).
generate a Gaussian series from a user supplied irregularity factor and save it as a . dac file.
generate a random time history (.dac) from input psd.
The cycles histogram files are, in the first instance, created from single parameter files and the creation process
loses time information (sample rate and frequency). Because of this loss of original information, MREGEN
produces an approximation of the input file, i.e. with the same number of cycles at each specific range and
mean.
The only output file is the signal (. dac) file regenerated from the input cycles histogram.
The plots in Figure 3-187 compares a regenerated file with its original.&lt;/p&gt;
&lt;p&gt;781 APPENDIX C
Utilities
Main Index
Figure 3-187  The Original . dac File, (Bottom) Compared to the Regenerated File (Top)
The regenerated file is similar to the original (compare the statistics to the right of each plot) except for the
fact that the sample rate  is wrong; the original was 204.8 samples/sec and the new file was assigned the
estimate of 200 sample/sec. MREGEN always allows the user to enter a sample rate because it cannot be
calculated from a . cyc or .mkh file because time information is lost. The default time allocated is 1
sample/sec.
Rainflow Rec onstruction:
The MREGEN module constructs a peak-valley sequence from two types of rainflow matrix, one where the
cycles are stored in the matrix according to their range and mean, and another where they are stored by their
maximum and minimum (peak and trough). In the case of the range-mean type of matrix, the data is
converted from range-mean to max-min format before the reconstruction occurs. This results in a slight
inaccuracy when the resulting regenerated sequence is cycle counted and compared with the input matrix.
This inaccuracy is due to the overlap of range-mean and max-min matrix bins, i.e. a cycle from a particular
range-mean bin may lie in one of four max-min bins. Care must therefore be taken when comparing results
from a regeneration from a range-mean matrix.
Once a max-min matrix has been obtained, either directly or by conversion from range-mean, the
regeneration process may begin.
The procedure for regeneration is as follows:
1.Find the largest cycle, that is the one inside which all other cycles will hang or stand. Generate three
points to define this cycle. Use a random number to determine whether the cycle is min-max-min or
max-min-max. If there is more than one entry in the bin, generate 2n+1 points for n entries in the
bin.
Use the user-supplied method to generate the data value from the bin location. The extreme option
chooses the largest possible maximum and smallest possible minimum. The mean option uses the
value from the centre of the bin and the random option selects a random location within the bin.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities782
Main Index
2.For all other bins with non-zero entries, obtain the maximum and minimum value of the cycle
classification. Find all the possible locations for this cycle to be inserted within the current regenerated
sequence. A possible location is defined by the ability to fit the new cycle inside two consecutive
existing samples. For example, in the following sequence we are trying to fit a cycle whose maximum
is 100 and minimum is -100.
Existing sequence: 500 (A),-500 (B),100 (C),-50 (D),250 (E),-300 (F), 300 (G).
In this case there are 4 possible locations, between A and B, B and C, E and F , F and G. It is not possible to
insert the cycle between C and D or between D and E and create the correct sequence. Note that &amp;rsquo;equal to&amp;rsquo;
is allowed, as in the case of B to C.
A random number is then used to determine which of these four locations to use. The data to the right of the
pair of points, including the right hand point, is then shuffled right to leave a two point gap into which the
cycle can be placed. The points are then inserted in the correct sequence to retain a peak-valley order. In the
above example if the second pair (B-C) were selected then points C-G would be moved right and the values
inserted to give the following sequence:
New sequence:
200 (A),-500 (B), 100(new), -100 (new), 100 (C),-50 (D),250 (E),-300 (F), 200 (G).
This procedure is repeated for the number of cycles in the bin.
The process then continues until all non-zero bins have been handled.
To obtain satisfactory speed performance, memory management and extensive software optimization is
performed. This leads to a possible limitation on some machines of a maximum of 800,000 cycles in the
regenerated sequence. This requires 10Mb of actual or paged memory. On Linux systems the number of
cycles which can be regenerated in one go is limited to the amount of memory available to the user.
When the sequence is written from memory to disk, the first point written to the file is selected randomly
from within the complete sequence. This method is based on the paper in reference (Ref. 39).
Markov Tra nsition Matrix Reconstruction:
When regenerating a data stream from a Markov Transition Matrix, there are two approaches, firstly to
reconstruct segments which result in an exact match when a Markov count is performed on the regenerated&lt;/p&gt;
&lt;p&gt;783 APPENDIX C
Utilities
Main Index
samples. Secondly, it is possible to regenerate a sequence of any length whose transition matrix has the same
characteristic as the original.
To understand this last approach, consider the Markov matrix as a joint probability matrix. In this matrix,
each bin represents the probability that the next data point will be selected from that bin, given that the
current point is known. The additional restriction is that from a minimum (valley) point, the next sample
must be from a bin greater than the current bin, and similarly for a maximum (peak) value the next data
point must be from a bin whose value is less than the current bin.
The algorithm normalizes the transition matrix to be a joint probability matrix and then selects a random
start point. The start point is selected randomly, but in such a way that the algorithm will proceed correctly.
Subsequent samples are generated by a random value shaped by the probability distribution. This will
continue to an indefinite number of samples provided that the Markov T ransition matrix was valid. If the
matrix was invalid, it may be possible to arrive at a bin with no valid bin to go to. In this case an error will
be generated. As the sequence becomes longer, the distribution of the regenerated samples will more closely
resemble the original distribution.
Irregularity Factor Rec onstruction:
The irregularity factor of a data stream is defined as
(3-62)
Note that the band width, E, is defined as
E =E= (3-63)
So when =1 and E= 0 the data is pure narrow band. When gamma=0 and E=1 the data is pure broad band
and when 0&amp;lt; &amp;lt;1 the data is wide band.
Kowalewski (Ref.40.) proposes a method by which a joint p.d.f. may be generated from a single value of
gamma. The algorithm uses this method to generate the p.d.f. and then regenerates a sequence of peak valleys
by the method defined in the section on Markov T ransition Matrix Reconstruction. The Kowalewski p.d.f.
is normalized in the X, Y and Z axes so the output data is scaled to the values entered by the user.
Module Op eration
The MREGEN module can be run in one of the following modes:
In stand alone mode by invoking mregen  at the system prompt as explained in Configuration, 328 .
By incorporating the  MREGEN  commands in a batch operation.
Once running in interactive mode, the MREGEN module will display the four options listed below.The number of positive mean crossings
The number of peaks&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
12 –0.5

&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities784
Main Index
Range- Mean Rainflow Matrix
This option requires the following input.Option Description
Range-Mean Rainflow
Matrix, 784Regenerates a . dac files from a range-mean rainflow matrix (. cyh). As pointed out
in the technical overview, this type of regeneration has to go via an intermediate
maximum-minimum stage and is as a consequence 3% less accurate than the
maximum-minimum option.
Max-Min Rainflow Matrix,
785Regenerates a . dac file from a maximum-minimum rainflow matrix (. cyh) file.
Both the above methods accept . cyh files as their input and MREGEN cannot
guarantee that it is the correct type unless it was created from another utility
module (Range-mean or max-min is identified in the header). The wrong input
type will probably cause an error message to be output at some stage but this can
NOT be guaranteed.
Transition Markov Matrix,
785Regenerates a . dac files from a from-to Markov transition matrix. It takes a
Markov T ransition matrix and converts it to a joint peak-trough probability
density function (p.d.f.) from which a variable length time series may be
reconstructed. The reconstructed history will have the same, or similar, peak
trough p.d.f. to the original data. It does not reconstruct exact transition segments.
Irregularity Factor, 786 Generates a Gaussian distribution from a user supplied irregularity factor.
Option Description
Input File Name The name of the file from which a . dac file is to be regenerated must be entered
here. The List button will automatically look for files with the correct extension
depending upon what was chosen in the Input Type field above.
Output File Name The name of the . dac file to be regenerated must be entered here. By default it
will have the same name as the input file, but a . dac extension. MREGEN will
ask for permission before overwriting any existing files.
Bin value Position  &lt;br&gt;
Extreme\
Mean\RandomWhen a matrix element is selected to reconstruct a time history value, the value
itself may be determined from any part of the bin. Three cases are offered here:
Select the extreme edge of the bin (maximum for peaks, minimum for troughs),
the mean value (centre of the bin), or a random location.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P41</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_041/</guid>
      <description>
        
        
        &lt;p&gt;785 APPENDIX C
Utilities
Main Index
Max-Min  Rainflow Matrix
The input fields for this option are all the same as for Range-mean Rainflow Matrix, so please refer to the
previous text for details of how to complete them.
Transition Markov Matrix
This option requires the following input.Sample Rate This field specifies the sample rate of the output . dac file. Because the rainflow
process loses all time information it is necessary to supply it in this field, which
will allow a new time series (. dac) file to be created. Note that the new time series
is really a peak valley sequence with a single cyclic frequency equal to half the
supplied sample rate.
Seed The number seed can be one of two types: Random or User defined. If it is
random then the program will generate a pseudo-random number as the seed (it
will in fact repeat after a very large number of cycles). For repeatable results it
should be the same seed value for each run of the program, hence the option of
the user entering a seed number.
Seed Value This field only appears if Seed is set to User generated. It has been proved that the
best seed is an odd number.
Option Description
Input File Name Enter the name of the matrix from which a time history is to be regenerated. The
default file extension is . mkh.
Output File Name Enter the name of the time series file to be created. If this file exists, the program
will ask whether the file may be overwritten. The default extension for this file is
.dac.
Sequence length &lt;br&gt;
PointsEnter the number of points to be recreated. For reconstruction from a Markov
matrix, the default value will reconstruct a sequence containing the same number
of peaks and troughs as the input matrix.
Bin Value Position &lt;br&gt;
Extreme\
Mean\RandomWhen a matrix element is selected to reconstruct a time history value, the value
itself may be determined from any part of the bin. Three cases are offered here, to
select the extreme edge of the bin (maximum for peaks, minimum for troughs),
the mean value (centre of the bin) and a random location. Option Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities786
Main Index
Irregularity Factor
This option requires the following input.Sample Rate This field specifies the sample rate of the output . dac file. Because the rainflow
process loses all time information it is necessary to supply it in this field, which
will allow a new time series (. dac) file to be created.
Note that the new time series is really a peak valley sequence with a single cyclic
frequency equal to half the supplied sample rate.
Seed The number seed can be one of two types: Random or User defined. If it is
random then the program will generate a pseudo-random number as the seed (it
will in fact repeat after a very large number of cycles). For repeatable results it
should be the same seed value for each run of the program, hence the option of
the user entering a seed number.
Seed Value This field only appears if Seed is set to User generated. It has been proved that the
best seed is an odd number.
Option Description
Output File Name Type the name of the output . dac file that will be created.
Irregularity Factor Enter the irregularity factor from which a transition matrix will be created. The
irregularity factor is defined as the number of mean crossings divided by the
number of peaks. The value lies in the range, 0.0 to 1.0 where 1 implies pure
narrow band.
Y-Axis Label / Units Type the Y-axis label and it&amp;rsquo;s units (if any) of the output . dac file.
Maximum Reconstruction from an irregularity factor generates a normalized probability
matrix. T o calibrate the time history, specify the maximum value which the time
history may attain.
Sequence length Enter the number of points to be recreated.
Sample Rate Type the output file&amp;rsquo;s sample rate (sample rate information is not part of the 3
parameter . cyh file). Note that the new time series is really a peak valley sequence
with a single cyclic frequency equal to half the supplied sample rate.
Seed The number seed can be one of two types; Random or User defined. If it is random
then the program will generate a pseudo-random number as the seed (it will in fact
repeat after a very large number of cycles). For repeatable results it should be the
same seed value for each run of the program, hence the option of the user entering
a seed number.
Seed Value This field only appears if Seed is set to User generated. It has been proven that the
best seed is an odd number.Option Description&lt;/p&gt;
&lt;p&gt;787 APPENDIX C
Utilities
Main Index
Batch Exa mple
A sample batch line is given below.
mregen /typ=r/inp=aero/out=reg_aero/sam=0.5/stype=r
Which will input aero.cyh  and output a . dac file.
A list of MREGEN’s batch keywords:
/OPT Input Type R,M,T ,I,X
/INP Input File Name. /INP= results.cyh&lt;br&gt;
/OUT Output File Name. /OUT= newfile.dac&lt;br&gt;
/BINPOS Bin Position - E,M,R
/SAM Sample Rate in samples per second. /SAM=50
/STYPe The type of random number seed; Random R or User defined U. /STYP=R
/SEED The random number seed when STYP=U. /SEED=3
/SEQ Sequence length
/BINPOS Bin Position - E,M,R
/IRR Irregularity Fact
/LAB Y-Axis Label
/UNI Y-Axis Units
/MAX Maximum value
/MIN Minimum value
/OV Overwrite, Y/N&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities788
Main Index
RPC to D AC - DA C to RPC - (M REMD AC/M DACR EM)
The MREMDAC program extracts channels of data from MTS RPCtm remote parameter (RPC) files, and
creates a single . dac file for each channel of the RPC file. It is possible to selectively extract one or more
channel numbers. A time window within the RPC file may be selected which is applied to all channels
extracted. Both RPC II and RPC III files may be processed. Full details of the extraction and creation process
can be saved to a report file.
The MDACREM program combines a set of related . dac files into a single RPC file (‘remote parameter’)
suitable for driving a test rig.   The . dac files are often individual channels of a multi-channel data acquisition
test.
There are several different forms of RPC files, particularly for RPC II. The subsections below briefly describe
the types of file that can be processed by this program (see the MTS documentation for full details).
RPC II File Types
The files that can be processed are demultiplexed drive or response time histories. The data type must be 16
bit integer. This corresponds to MTS file types 00 or 100 with data type 00.
RPC III File Types
Note:   Damage may occur to a test rig if it is driven by an unsuitable RPC file. When creating an RPC file
it is strongly recommended that the file is tested for validity within the RPC software suite before
the file is used to drive a test rig.&lt;/p&gt;
&lt;p&gt;789 APPENDIX C
Utilities
Main Index
Any drive or response time history file can be processed.
Module Op eration
The MREMDAC and MDACREM modules can be run in one of the following modes:
In stand alone mode by invoking mremdac  or mdacrem  at the system prompt as explained in
Configuration, 328 .
By incorporating commands in a batch operation
RPC to DAC Conversion (MREMDAC)
When first invoked, MREMDAC, only the Remote Parameter File field will appear. When a name has been
supplied the rest of the fields appear.
Option Description
Remote Parameter
File The first field is the name of the RPC file to convert. The default extension for
the RPC file name is . rsp, and the file is assumed to reside in the current working
directory. A file name may be picked from a list by clicking on the pick list button.
Once the RPC file name has been entered, the remainder of the input fields are
displayed on screen. These fields are described below.
Data Channels This field allows the channels required for extraction to be specified. Channel
numbers may be entered directly into the field by entering them in the form
1,3-5,10-15 etc.
where the hyphen indicates an inclusive range of channel numbers. The word
&amp;lsquo;ALL&amp;rsquo; may be entered in the field which indicates that all the channels in the RPC
file should be processed. Click on LIST to pick one or more channel numbers
from a list of those which exist in the RPC file. In this case a screen will be
presented. The vertical list shows all the channels which exist in the RPC file. One
or more channels may be individually tagged (selected with the mouse). Pressing
the T key over an already tagged channel will untag it. Use the A key to tag all
channels, or U to untag all channels. Select the Accept option when all the
required channels have been tagged.
Output File Root
Name One output file is created for each channel extracted from the input file. The
output file names are constructed as &lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;.dac&lt;br&gt;
where the &lt;!-- raw HTML omitted --&gt;  is the name entered in this field. This name will be the
same for all the output files. The channel number occupies two or three digits,
padded with a preceding zero if required.
Output File
Extension This field allows the extension of the output files to be specified. The default
offered is .dac, which is the standard extension of time series data files. Any other
three letter extension may be entered if required.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities790
Main Index
Processing begins when all input is entered, then channel-by-channel. If an existing file exists or a channel
will be overwritten you will be prompted for overwrite permission. A summary screen is presented after
processing is done showing details of the operation.
DAC to RPC Conversion (MDACREM)
This following input is required for this conversion.Report Selection If this field is set to Yes, then a report file will be generated during processing,
which contains a list of the channels which have been extracted, with their
channel descriptions and units. Also a table of the statistics of each of the
extracted channels is written to the file. The report file will have the same name
as the root name specified above, but a file extension of . lst. It is a text file which
may be printed if required.
Window Selection
Method It is not necessary to extract the complete signal for each channel from the RPC
file. A time window for extraction can be specified by entering the start and end
position. The start and end position may be specified either as times in seconds
measured from the start of the data file, as point numbers counted from the start
of the data file, or as frame numbers, also counted from the start of the data file.
At the bottom of the screen the length of the data file in terms of time, points and
frames is displayed. This field requests the method by which the time window is
to be selected.
Start Position This field will actually request Start Time, Start Point Number or Start Frame
Number, depending on the setting of the previous field. Either enter the required
start position in the appropriate units, or enter the word START which indicates
the start of the data file.
End Position This field will actually request End Time, End Point Number or End Frame
Number, depending on the setting of the Window Selection Method field. Either
enter the required end position in the appropriate units, or enter the word END
which indicates the end of the data file. It is not possible to enter offsets from the
end of the file (using END-5 etc.). When this screen is accepted, the processing
will begin. As each channel is processed its channel number and description is
displayed at the bottom of the screen. Also, when each channel is completed, the
statistics of the created . dac file will be displayed. If an output file is already found
to exist during processing, then a box will be popped on screen asking whether to
overwrite the existing file or not. Option Description&lt;/p&gt;
&lt;p&gt;791 APPENDIX C
Utilities
Main Index
Option Description
Input T est Name The .dac files which are to be combined should all be different channels of the
same test. The name of each file should follow the convention below. &lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;.dac  where the &lt;!-- raw HTML omitted --&gt;  is the same for all
the .dac files. The &lt;!-- raw HTML omitted --&gt;  should be at least two characters and is
padded with a leading zero if required, i.e. test01.dac  would be channel 1 for
test name test . The test name for the required set of input . dac files should be
entered in this field.
Data Channels As described in the previous section, the names of the input . dac files should be
related by a common test name. Enter in this field the channel numbers of this
test that are to be processed. The channel numbers should be entered in the form
1,3-15,21-30 etc., where the hyphen indicates an inclusive range of channel
numbers. Alternatively, the word ‘ALL’ may be entered in the field, and the
program will locate and process all the . dac files which match the specified test
name. Please note that all the . dac files specified for input must have the same
sample rate and number of points.
Titles/Units Source Select the source of the channel titles and units. Header will get them from the
input .dac file headers. Extra Details will get any extended titles and units from
their extra details areas.
Output File Name This field specifies the name of the output RPC file to create. This file will be
created in the current working directory unless the name is preceded with a
directory specification. The name should not include a file extension. If the name
of an existing file is specified, then a question box will appear on screen asking
whether the existing file should be overwritten or not.
Output File
ExtensionThis field specifies the extension which will be attached to the output file. The
default offered is . rsp.
RPC T ype The program can create either RPC II or RPC III files. Select the required file type
here. If RPC III is selected, then the last 4 fields on this screen are not offered,
since they do not apply to RPC III files.
Test Title The test title is a textual description of the data in the file. It is stored in the header
of the output RPC file.
Report Selection If this field is set to Yes, then a report file will be generated during processing
which contains a list of the channels processed, their descriptions, units and
statistics. The report file is a text file which may be printed if required. The
program will inform the user of the name of the report file when processing is
complete.
Points/Frame RPC files are organized in ‘groups’. Each group contains 1, 2 or 4 frames, and each
frame contains a number of points which is a power of 2 between 256 and 8192.
The file must always contain a whole number of groups. Select the number of
points per frame from the list offered.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities792
Main Index
Incomplete Data Groups Frames/Group As described in the previous paragraph, each group within the file must contain
either 1, 2 or 4 frames. Select the required number of frames per group from the
list.
Window Selection
Method It is not necessary to process the entire length of the input . dac files. A time
window can be selected for processing by entering a start and end position.This
field controls the method by which the start and end positions are set, which may
be Time, measured in seconds from the start of the . dac files, or Point numbers,
counted from the start of the . dac files.
Start Position This field will either request Start Time or Start Point Number, depending on the
setting of the previous field. Time is measured in seconds from the start of the data
file. Point numbers are counted from the start of the data files. Alternatively, the
word ‘START’ may be specified indicating the start of the data file. Please note
that the ‘START+’ construct used elsewhere does not work here.
End Position This field will either request End Time or End Point Number, depending on the
setting of the Window Selection Method field. Times or point numbers are
measured from the start of the data files as described above. Alternatively, the
word ‘END’ may be specified indicating the end of the data files. Please note that
the ‘END+’ construct used elsewhere does not work here.
RPC II only fields, The fields below appear if RPC II files are being created
Maximum Number
of Characters in
Channel Description This field and the following three are only used for RPC II files. These files allow
the maximum length of the channel description storage area to be set at the time
of file creation. A number between 1 and 80 may be specified.
Maximum Number
of Characters in
Units Description RPC II files allow the maximum length of the channel units description storage
area to be set at the time of file creation. A number between 1 and 80 may be
specified.
Clock Pulses per
Second This field is the clock pulses per second, which may have a value between 1 and
30 000. The sample rate per point of RPC II files is held in the form of a clock
speed and a divider. The clock speed, in pulses per second should be entered in
this field and the divider (pulses per data point) in the following field. The clock
speed divided by the divider value should be equal to the sample rate in points per
second. The defaults offered by the program are calculated from the sample rate
of the input files, but may be changed if required.
Clock Pulses per
Point As described in the previous paragraph, this field and the clock pulses per second
define the sample rate of the RPC file. Enter a number between 1 and 999 in this
field.
If the values entered in these two fields are not equivalent to the sample rate of the
input files, then a message box will be popped on screen. A choice will be offered
of whether to continue or re-select the clock settings. Option Description&lt;/p&gt;
&lt;p&gt;793 APPENDIX C
Utilities
Main Index
Data in RPC files are stored in groups, each group containing 1 or more frames; only complete groups can
be stored. However, sometimes the combination of points and groups, divided by the total number of points
in the .dac files, mean that the last group in the RPC file will not be completely filled. In such cases the last
group must be padded out with a series of values, or discarded.
If the last group is incomplete the Incomplete Data Group window is shown.
The padding options are:
Zero - All extra values are set to zero
Last - All extra values are set to whatever is the last value in that channel
Mean - All extra values are set to the mean value of that channel
Truncate to last full group, i.e. discard the unfilled group
Linear Ramp from last to start value
Haversine join (a cosine wave form) from last to start value
When all the parameters have been set and accepted, processing will begin.
As each channel is processed, the program will display its description, units, and the statistics of that channel.
If the report file option was set to Yes, then a report of the processing will be generated. If the fatigue
notebook system is active, then this report is written to the notebook file, otherwise the report is written to
a file which has the same name as the output RPC file but an extension of . lst. A message will be displayed
when processing is complete describing where the report has been written.
Extra Details
The .dac files only allow 24 characters for channel descriptions and 28 characters for the channel units as
stored in the header. RPC files may have more characters than this for both description and units. The
description and units written into the . dac file header is a truncated form of the RPC file description and
units. However, the full description and units are written into the extra details area of the . dac files under
the keywords $YTITLE and $YUNIT.
In addition, the test title as stored in the header of the RPC file is written into the extra details area under
the keyword $RPTITLE.
Batch M ode Op eration
A sample batch line is given below:
mdacrem /inp=test/out=result/win=p/fill=m/ov=y/cho=c/fra=256
This will use test  as the generic input ( test101 , test102 , etc.) with ALL channels being processed by
default. The file name results  is the output file name ( results.rsp  and results.lst ). The window
selection is points (/win=p) and the frame size 256 points.
If the combination of points per group and the total number of points to be processed result in the last group
being incomplete then a fill value must be supplied (/fill=m in this example). In the event of anomalies such
as incomplete groups, MDACREM must be told to continue despite the incomplete group by the /cho=c
command; otherwise it would abort the batch run.
A list of MREMDAC’s batch keywords:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities794
Main Index
A list of MDACREM’s batch keywords:INPut Input RPC file name. /INP=test
CHAnnels Channel Numbers. /CHA=all
OUTput Output File root name. /OUT=test
EXT ension Output file extension. /EXT=DAC
REPort Report Selection, yes (Y) or no (N). /REP=Y
WINdow Window Selection Method T=time, P=Points, F=Frame. /WIN=P
STArt Start Position. /STA=10
END End Position. /END=30
OVerwrite Overwrite Output Files Y=yes, N=no, A=all, E=end. /OV=A
INPut Input (DAC) Root File Name, /INP=test
CHAnnels Channel Numbers, /CHA=1-10
OUTput Output RPC File Name, /OUT=test
CHOice Whether to proceed if channels not contiguous, /CHO=Y
EXT ension Output File Extension, /EXT=RSP
REPort Report Selection, /REP=Y
FRAme Frame Size, /FRA=512
GRP Frames per Group, /GRP=2
TITle T est Title, /TIT=Test title
WINdow Window Selection Method, /WIN=P
STArt Start Position, /STA=10
END End Position, /END=20
OVerwrite Overwrite Output File, /OV=Y
TYPe RPC File Type, /TYP=3
CD Maximum Length of Channel Description, /CD=40
EU Maximum Length of Channel Units, /EU=40
PULSEC Pulses per Second, /PULSEC=10000
PULPNT Pulses per Point, /PULPNT=16
SCAL Scale Factors, /SCAL=O
FILL Fill value for missing points, Z, L, or M, /FILL=M&lt;/p&gt;
&lt;p&gt;795 APPENDIX C
Utilities
Main Index
Regenerate Time Histories from PSDs (M REGEN )
To regenerate a time signal from the frequency domain ideally we would perform an &amp;lsquo;Inverse Fourier
Transformation&amp;rsquo; on the complex vector of frequency domain results. This would yield exactly the same time
history as we started with. However when starting with a PSD this method is inappropriate because the PSD
does not contain any of the original phase information. For certain time histories, however, we are able to
make assumptions about the original phase content and therefore regenerate a statistically equivalent time
history. The assumption we make is that the time history is taken from an ergodic stationary Gaussian
random process.
The method used by MREGEN to generate a time signal is as follows:
1.Generate a white noise signal of a sample rate and length proposed by the user. White noise is a
random signal with equal amplitudes at all frequencies up to the Nyquist frequency (half the sample
rate). The minimum sample rate allowed is twice the maximum frequency in the PSD file. There is
also a minimum signal length, which is related to the FFT buffer size.
2.Create a &amp;ldquo;gain&amp;rdquo; file based on the PSD input. If the PSD input is in XY format, or if the specified
sample rate or buffer size is different from the suggested default, some interpolation will be required
between the points of the PSD, and the square root of the interpolated file is taken to produce a gain
file. Interpolation can be linear or logarithmic.
3.The gain file is then used in a Fast Fourier Filtering operation applied to the white noise signal.
4.Finally, the amplitude of the filtered signal is adjusted to ensure its RMS matches the area under the
PSD, and any required mean offset is added.
The output of this process will be a signal whose PSD approximately matches that of the input PSD. Since
the signal is based on a sample of white noise, and since the PSD represents an average over time, longer time
signals will provide a closer match to the original signal.
Module  Ope ration
The module can be operated by invoking, mregen , at the system prompt as explained in Configuration, 328 .
There are two (2) main steps to operating MREGEN - Signal Regeneration  Menu .Caution:   Since an &amp;ldquo;inverse fourier transform&amp;rdquo; is not being performed, a limitation exists in algorithm
defined above. If your input PSD file (and hence the gain file) includes a sharp edge, slight
discontinuities will be produced at the end of each buffer. This is due to the sharp &amp;ldquo;edge&amp;rdquo; in
the time domain translating to a &amp;ldquo;ringing&amp;rdquo; in the time domain. If the input PSD is a very sharp
spike, defined by only one or two points, the effect can be more serious.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities796
Main Index
1.Select the PSD Option from the MREGEN - Signal Regeneration  Menu.
2.Tell the the type and name of the file that is to be converted, and input values for other options in
the MREGEN - Signal Reconstruction  form shown below:
MREGEN_ PSD Reconstruction Form Entries
This following input is required for the regeneration.&lt;/p&gt;
&lt;p&gt;797 APPENDIX C
Utilities
Main Index
Option Description
Input Type Inputs can be a P SD file (e.g. generated by MASD) or binary or ASCII xy file.
The ASCII file needs two columns of data, representing frequency (in Hz) and
PSD value, and the units should be defined. The first point MUST be at zero
frequency. An example file follows (lines preceeded by # are optional):&lt;/p&gt;
&lt;h1&gt;ASCII X-Y PSD file&lt;/h1&gt;&lt;h1&gt;Lines preceded by # are comments&lt;/h1&gt;&lt;h1&gt;Data is XY points - Frequency, PSD&lt;/h1&gt;&lt;p&gt;UNITS=MPa^2/Hz # for example
0, 0
5, 1
6, 10
10, 10
12, 2
14, 0
16, 4
17, 2
20, 0
Input Filename Input or select the filename to be processed. Default filename extensions are
.PSD, .MDF , and .ASC for the three file types.
Output Filename Enter the name of the time series file to be created. If this file exists, the program
will ask whether the file may be overwritten. The default extension for this file is
.dac
Signal Duration Enter here the signal duration (in seconds). The default signal length is the
minimum recommended, based on an assumed FFT buffer size. Bear in mind that
what is generated by this module is a random sample representing a stationary
random process. The longer the sample, the better the representation of the
process.
Sample Rate The sample rate of the generated signal must be at least twice the maximum
frequency in the PSD (the default). This is necessary to avoid aliasing. If the signal
is to be used for fatigue analysis, a frequency of at least 10 times the maximum
frequency of interest in the PSD is recommended.
Buffer Size This is the size of the FFT buffer used in the filtering operation, and controls the
resolution of the filtering operation.
Signal Mean Enter the desired mean of the output signal.
Units Enter the units of the output signal.
Label Enter the Y-axis label for the output signal.
Interpolation
Method Select the interpolation method where appropriate.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities798
Main Index
Cross-Platfo rm C onversion - (M CONFIL)
MCONFIL is a utility module that converts a wide range of data files between a variety of hardware platforms
and operating systems. MCONFIL converts files so that they can be processed on hardware platforms and
operating systems other than that on which the file was originally created. MCONFIL is capable of changing
the format of binary files so that such files can be used on any of the range of supported machines.
A typical usage situation might be one whereby data is collected in the field with a PC running MS-DOS,
but is to be analyzed on a workstation running UNIX. MCONFIL can convert the MS-DOS file to a format
usable by the UNIX machine (or the other way around if necessary).
Another scenario is where the conversion may need to be carried out on a VAX so that the data files can be
written to standard 6250 bpi computer tapes. MCONFIL supports binary conversions of this kind where the
computer on which the conversion is carried out is different from either the source or target computer.
MCONFIL can process the following file types:
The above file types could have been produced on any of the following hardware platforms/operating systems:
The files may be converted to be usable on any of the same hardware platforms/operating systems.
Module Ope ration
The module can be operated by invoking, MCONFIL, at the system prompt as explained in Configuration, 328 .
There are three (3) basic steps to operating MCONFIL:
1.Tell MCONFIL the name and the type of file that is to be converted (i.e., name the input file).File Type Typical File Extension
Demultiplexed Data DAC,KSN, PSD
Time History Database TDB
Materials Database MDB
RSX11M (for the DEC PDP range of minicomputers)
MS-DOS (for DEC VAX computers)
UNIX (for the IBM PC and compatibles)
UNIX (Masscomp workstations)
UNIX (Apollo workstations)
UNIX (Hewlett Packard)
UNIX (Sun)
UNIX (SGI)
UNIX (IBM 6000)
UNIX (DECstation)&lt;/p&gt;
&lt;p&gt;799 APPENDIX C
Utilities
Main Index
2.Tell MCONFIL the hardware platform/operating system the input file was created on.
3.Tell MCONFIL on which hardware platform/operating system that the output file will be
configured to run under.
There are other details that MCONFIL needs to know, such as the name of the output file and whether or
not existing files can be overwritten, etc.
These are the steps that must be followed when operating MCONFIL in interactive (nonbatch) mode.
Naming  the Input File (Screen 1)
When MCONFIL is first invoked a screen appears. It is here where the input file to be converted is identified.
It is necessary to type the full file name and its file extension. Only those file types named previously can be
processed. Input file names may be specified with wildcards (an asterisk “*”).
When the file name has been input, the user should confirm the choice by pressing OK, F1  or ENTER . This
will cause the next screen to be displayed.
When the input file has been named, the user is prompted to supply the output file name. By default, the
output file name is the same as the input file. If the same name and directory are specified then MCONFIL
will prompt for permission to overwrite the input file. If the input file is to be preserved then the user should
select another name or directory for the output file.
From  which File Format to what File Format (Screen 2)
The second is screen where the user tells MCONFIL the hardware platform/operating system the input file
was created on, and which hardware platform/operating system that the output file will be configured to run
under.
The numbers at the side of each option are the designation codes for that option. These numbers are used
when operating MCONFIL in batch mode.
To specify format from and format to, a selection must be made from at least two of the three menus. The
first menu’s (left of the screen) choice was effectively made when the file extension was specified on the
previous screen, although it can be changed here. The second menu (middle) is the menu upon which the
user must specify the operating system that the input file was created under. This is the file source operating
system.
The third menu (right of the screen) is the menu upon which the user must specify the operating system that
the output file will be created to run under. This is the file destination operating system.Important:   Converting (and overwriting) an already converted . dac file is possible. For example, a user
may convert from afile.dac  for DOS to afile.dac for UNIX, and then, if they forget
that the conversion has already been done, inadvertently attempt to convert the UNIX
version to UNIX. This release of CONFIL will not prevent the user from corrupting files in
such fashion. It is up to the user to keep track of file names and file types.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities800
Main Index
The easiest way of selecting the source and destination operating systems is to point and click the mouse
pointer. So if the user wishes to select MSDOS as the source and VMS as the destination, they need only to
click on MSDOS and VMS in the appropriate menu.
When using the keyboard, the left/right arrow keys move the highlight bar between the menu boxes.
The up/down arrow keys move the highlight bar up and down within menus.
Pressing ENTER  selects an option within a menu.
When all selections have been made, clicking OK or F1 causes MCONFIL to start the conversion.
MCONFIL tells the user about the progress of the conversion with an on-screen % converted meter.
If no selection has been made from a menu then MCONFIL will take the current or last position of the
highlight cursor as the selection.
When conversion is complete, MCONFIL offers the user the chance to perform another conversion.
Batch  Ope ratio n
Batch operation has the following batch keywords:
Example:
mconfil /inp=saetrn/out=saetrn/type=11/sou=2 /des=7/ov=yes/agn=n
This batch line would convert saetrn.dac  which is a type 11 file (demultiplexed data) from a VAX
(/SOU=2) compatible operating system to a Sun (/DES=7) operating system and give it the same name,
overwriting the existing file. The program would then quit and not perform another conversion (/AGN=N)./INPut The name of the file to be converted (/INP=FILENAME.EXT)
/OUTput The name of the post conversion output file (/OUT=NEWNAME.EXT)
/TYPe Select the type of file to be converted. Files can be one of the following: . plt,&lt;br&gt;
.dif, .mux . Standard single channel data files:   . dac, .acf, ada, .asd,
ccf, coh, csd, .gai, .pha, .pvx,.sxx, .syy, .sxy, .ksn  (all
type 11 files) (/TYPE=11 (the numbers correspond to those on the menu)) Note
that this is actually a character string and not a number, so if the pure number does
not appear to be working, try typing in the entire string as it appears in the
interactive window of MCONFIL, e.g. 7-TDB.)
/SOUrce Select the source operating system: DEC RSX11M, DEC VAX, MS-DOS, UNIX
(APOLLO, SUN, HP , MASSCOMP , SGI, IBM, DEC).(/SOU=3 (the numbers
correspond to those on the menu))
/DEStination Select the source operating system: DEC RSX11M, DEC VAX, MS-DOS, UNIX
(APOLLO, SUN, HP , MASSCOMP , SGI, IBM, DEC).(/DES=3 (the numbers
correspond to those on the menu))
/OVerwrite Is used in both generic and individual cases. If the output file(s) exist, then you can
choose to overwrite them with this keyword. (/OV=Y)
/AGN Convert another file - Yes or No, the default is No to prevent MCONFIL&lt;br&gt;
looping. (/AGN=Y or N)&lt;/p&gt;
&lt;p&gt;801 APPENDIX C
Utilities
Main Index
Important:   The choices that appear in the /TYPe keyword and subsequently on the CONFIL interactive
window are dependent on a configuration file called confil.sys  found in the nssys&lt;br&gt;
directory of the utility s ystem. It can be altered to include or exclude different supported file
types. All file types that are used by the utilities a re included so this should not be necessary.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities802
Main Index
Waterfall  File C reate - (M WFLCRE)
Module MWFLCRE has four functions.  These are:
Combine single parameter files into three parameter waterfall (.WFL) files
Split .WFL files into multiple single parameter files
Convert a .WFL file into a .SAN histogram file
Convert a .SAN histogram file into a .WFL file
The above functions can, for example, enable the data contained in .WFL files to be operated by analysis
modules that cannot normally operate on waterfall data, but which can operate on single parameter files.
1.Combining single parameter files into 3 parameter waterfall (.WFL) files - Waterfall file creation.
This part of the program combines 2 or more spectral density files in a .WFL file.  The spectral density
files are single parameter and typically have an extension of .PSD, .ASD, .DAC, or .AMP.  They can
be made by programs such as ASD.
2.Splitting .WFL files into multiple single parameter files.
This function generates output files from an input waterfall file. The spectra at a single speed can be
stripped out of a waterfall file but more probably a series of spectra can be stripped out into a series
of 1 parameter files.  The generic name of the output files is specified by the user but they will
normally take their name from the input file with  numbers appended to them.
The number of .ASD files created will depend upon the Z-axis range specified by the user multiplied
by the incremental spacing within that range. For example if the Z-axis speed specified is from 0 to
50 , in increments of 1, then 50 ASD files will be created. If the increment is 0.1 then 500 ASD files
will be created (50 / 0.1).  If the increment is 10 then only 5 ASD files will be created.
It is up to the user to decide how many 1 parameter files are to be created, although even if the entire
input .WFL file were split, the sum total of the output files will usually only be about 25% larger then
the original waterfall file size.&lt;/p&gt;
&lt;p&gt;803 APPENDIX C
Utilities
Main Index
3.Converting a .WFL file into a .SAN histogram file.
This option converts the input file into a single .SAN histogram file.  The .SAN file can be
manipulated as a standard histogram file, but not plotted using P3D.
4.Converting a .SAN file into a .WFL file.
This option converts the input file into a single .WFL file.&lt;br&gt;
Option 1: Create .WFL from individual files
This option merges a range of single parameter files into a waterfall  file.  The filename definition screen
contains the following fields.
The final screen of waterfall construction enables the user to label the axes of the output waterfall file.  The
defaults for the frequency and Z axes are read from the header area of the 1st input file, although they can be
edited. When this screen has been accepted MWFLCRE will process the input files, create the output file,
and return to the Main Menu.&lt;br&gt;
Option 2: Split .WFL to .ASD files
This option is the opposite to create .WFL form .ASD.  When selected the following screen will appear. The
field must be completed as follows.Option Description
Input Filename
ExtensionAs mentioned, the single parameter input files typically have an .ASD extension.&lt;br&gt;
However if the files to be merged have a different extension, such as .DAC, then
the extension should be entered in this field.
Output Filename This is the name of the output .WFL file.  It will be the sum of all the input files.
Input Filename(s) Here is where the input files are named.  Their names can be entered in full, or a
generic name can be entered.  For example  ORD1P3(1-20) will input
ORD1P301, ORD1P302, ORD1P303&amp;hellip;to ORD1P320, i.e. 20 files.
A maximum of 128 input files can be specified. A minimum of 2 files must be
specified.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities804
Main Index
Option 3: Convert .WFL file to .SAN file
The only input that the user has to make is to name the input waterfall file and its corresponding
output file.
Option 4: Convert .SAN to .WFL file
The only input that the user has to make is to name the input waterfall file and its corresponding
output file.
Batch Operation
A list of MWFLCRE’s batch keywords:Option Description
Input filename This is where the input file is named. It has to be a waterfall file format, although
if its file extension is not .WFL, but its format is that of a waterfall file then it can
be processed.  The full file name (including extension) only has to be entered if
the extension is not .WFL.
Output filename This is where the generic name for all the output files is entered.  Note that the
final filename cannot be more than 8 characters long, so entering TESTFIL as a
generic name and generating more than 9 files will produce an error message
because TESTFIL10 contains too many characters.
Output extension Any extension can be specified here, although .PSD is the default extension.
Split from/to Whatever is the range of values and increments along the Z-axis, a subset of  those
values can be entered in these fields.
These 2 fields allow the input file to be split selectively, i.e. not all the Z-axis values
have to be processed (every Z-axis value will produce and output file).
Only numbers are allowed (not START, or END etc.).
The exact number of output files created is dependent  upon the range and its
incremental spacing. See T echnical Overview  above (split WFL files into multiple
1 parameter files) for a full explanation.
When the above fields have been filled and accepted MWFLCRE returns to the
Main Menu.
/EXTension The file extension
/OUTput The output file name
/OVerwrite Whether to overwrite an existing output file
/INPut The input file names
/SPEed The speed values&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P42</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_042/</guid>
      <description>
        
        
        &lt;p&gt;805 APPENDIX C
Utilities
Main Index
/SMINimum Minimum speed to fitS
/MAXimum Maximum speed to fit
/FLABel The frequency labe
/lFUNIts The frequency units
/SLABel The speed label
/SUNIts The speed units
/ZLABel The Z data labe
/lZUNIits The Z data units&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
File Conversion Utilities806
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Glossary
Glossary&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 808
Main Index
Amplitude
Amplitude is half of the range of a cycle. It is the maximum less the minimum divided by two.
August WoehlerNote:   The terms and definitions in this appendix may have multiple meanings to different people. The
definitions give here are as used in the context of this guide.&lt;/p&gt;
&lt;p&gt;809 APPENDIX
Glossary
Main Index
This German gentleman is probably the most famous of all fatigue researchers being the “Father of Fatigue”
as many know him. He is responsible for the invention of the “stress-life” or “S-N” method of fatigue life
prediction. See glossary term Stress-Life (S-N) .
Average Nodal Stress/Strain
See glossary term Stress/Strain (from FEA) .
-Solution
See glossary term Compliance Function .
Bastenaire
This is another representation of the S-N or stress-life curve.
Based upon the analysis of thousands of tests carried out on different steels, Bastenaire proposed in 1974 a
general formulation of the Stress Life curve:
The four parameters A, B, C and EB are derived from material raw data. If C &amp;gt; 1, the SN curve has an
inflexion point. If C = 0, the model simplifies to the Stromeyer formulation N = A/(S-E) (with a factor of e).
NA
SEB–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;SEB–
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;C
– exp =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 810
Main Index
The Bastenaire formula aims to correctly describe the whole endurance domain and the parameter calculation
takes into account all tested specimens, including the run-outs.
Bastenaire curves can also be modified to calculate lives at any certainty of survival, using a scatter factor and
the normal distribution law (the assumption is made that the stresses are normally distributed for a specified
life):
sd: scatter factor, estimation of the standard deviation on stress
m: number of standard deviations from the mean value, defines the required probability
and is given by the normal law tables.
Below are given example formulas for 84%, 50% and 16% certainty of survival:
Biaxial - Biaxiality Ratio
For surface resolved stresses the two major principal stresses lie in the plane of the surface with the third
principal stress being zero (normal to the surface). The principal stresses therefore, correspond to the X, Y,
and Z=0 component stresses. The ratio of the minimum in-plane stress divided by the maximum in-plane
stress defines the biaxiality ratio. This ratio can take on any number between -1 and 1. Zero indicates a
uniaxial state of stress with only one principal stress being non-zero. See A Multiaxial Assessment  (Ch. 12).
Broad Band
See glossary term Wide Band .
Certainty of Survival
SE, the standard error of log10(N), is used to adjust the life/damage predicted to any given probability of
survival. Fatigue life always includes some scatter, and at any given level of stress range, the distribution of
fatigue lives is assumed to be a log-normal distribution, that is, a Normal or Gauss distribution of the
logarithm of the fatigue life.
The Gauss distribution defines the probability density function of a value x as:Np%A
SmsdEB– &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-S msdEB–  
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  C
– exp =
N84%A
SsdEB– + &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;SsdEB– +
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;  C
– exp =
N50%A
SEB–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;SEB–
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;C
– exp =
N16%A
SsdEB– + &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;SsdEB– +
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;  C
– exp =&lt;/p&gt;
&lt;h1&gt;811 APPENDIX
Glossary
Main Index
and the cumulative probability of x as:
When applying this to fatigue calculations:
x is replaced by log10(N) where N is the fatigue life in cycles.
 is replaced by log10(N50) where N50 is the number of cycles at which 50% of tested specimens are
predicted to fail.
 is the standard error of log10(N) associated with the S-N curve (obtained from linear regression of
the original test data – SE in the material database).
In practice, if we want to make a life or damage prediction based upon a particular percentage probability of
survival, we use a lookup table to determine the deviation from the mean (50%) life in terms of the number
of standard errors.
Table 0-1  Lookup Table for Certainty of Survival
Number of SD’s from mean % Certainty of survival
-3.0 99.9
-2.5 99.4
-2.0 97.7
-1.5 93.0
-1.0 84.0
-0.5 69.0
0.0 50.0
0.5 31.0
1.0 16.0
1.5 6.7
2.0 2.3
2.5 0.6
3.0 0.1x1
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;ex–2
22&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- –&lt;/h1&gt;&lt;p&gt;x1
2&amp;mdash;1erfx–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+  =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 812
Main Index
For example, if the standard error is 0.1,creating a calculation with 97.7% certainty of survival corresponds
to -2 standard errors. Therefore:&lt;/p&gt;
&lt;p&gt;In the case of a strain-life curve, if a design criterion of 97.7% is desired, z = -2, the strain-life curve is then
shifted downwards as follows:
Combination Method
See glossary terms Stress Combination  or Strain Combination .
Compliance Function
For crack growth analysis, a compliance function needs to be defined. This is also known as a -function or
a K-solution. It is defined based on the crack geometry and the dimension of the specimen. In physical terms
it is simply a measure of how the compliance (stiffness or flexibility) of the structure changes as the crack
propagates. These functions take on the form of look up tables in the software and can be defined in terms
of a polynomial equation or selected from a standard library set. They are then used in the crack growth rate
(Paris) equation to determine the stress intensity for any given stress cycle and, in turn, used to determine a
incremental crack size. log10N  10N500.2– log=
N N50100.2–=
af
E&amp;mdash;&amp;mdash;-2Nfb10zSEe f2Nfc+ 10zSEp =&lt;/p&gt;
&lt;p&gt;813 APPENDIX
Glossary
Main Index
Com ponent S-N
This is an S-N curve which is tied to a specific component geometry and relates nominal stress (S) to life.
The stress that is looked up on the S-N curve is not the actual stress at the failure location (in general) but
the stress as measured in a location away from the failure. This is usually because of the impracticality of
placing a strain gauge at the failure location. The S-N curve can only be used for components with the same
geometry (and material) as that used to create the S-N curve. The components themselves are used as test
specimens to create the S-N curves (such as a weld class). These types of S-N curves are not used to identify
the location of a possible fatigue failure since this location is already identified by the nature of the S-N curve.
Instead they are used to evaluate resistance to variation of the loading. These S-N curves are generally used
when the failure mechanism is not well modeled with material S-N curves or other methods. They represent
a more macro way of characterizing the failure mechanism by building into the curve all influences on the
fatigue life, i.e., plasticity, geometry, residual stress, etc. The challenge when using these S-N curves with FE
analysis is to know where the measured or reference location is, which is the stress that should be used to look
up damage using these S-N curves.
Crack Initiation
See glossary term Strain-Life (e-N) .
Crack Growth (Propagation)
See glossary term LEFM .da
dN&amp;mdash;&amp;mdash;- CKm  Paris Equation =
K Ya  Stress Intensity =
Compliance Function&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 814
Main Index
Critical Plane Analysis
The principal stress tensor axis can rotate from time step to time step when subject to multiple load inputs.
A fatigue analysis done at various angles is said to be a critical plane analysis. The plane that exhibits the most
damage is said to be the critical plane. These types of analyses are typically illustrated using a polar plot of
damage versus angle.
Cycles (cycle counting)
A stress or strain cycle is one event that may or may not cause damage. A single constant amplitude, fully
reversed sine or triangle wave that passes upwards positively through its mean will register a stress cycle each
time. Many methods of counting cycles in a randomly varying signal have been adopted and abandoned over
the years. The rainflow cycle counting method is the most widely accepted. Another way to understand cycle
counting is illustrated by the diagram where a portion of a time signal is stood on end and then each point is
mapped onto stress-strain space. This simulates loading and unloading where the material may yield
producing a hysteresis loop. Each loop represents one stress cycle. Cycles with noticeable inner area are
damaging and cycles which appear as straight lines are purely elastic and cause no damage. For any time
varying load, all cycles will fall with in one outer, large cycle representative of the maximum and minimum
of the signal. So in short, cycle counting counts the number of hysteresis loops and keeps track of their
range/mean or maximum/minimum values.&lt;/p&gt;
&lt;p&gt;815 APPENDIX
Glossary
Main Index
The basic method has the following steps (assume we are looking at a stress history):
1.Reduce the stress time history to a series of turning points (maxima and minima):
2.Cycles are identified by considering four (4) points at a time. The logic is as follows:
If point n is a maximum, IF Sn  Sn-2 AND Sn-1  Sn-3 then Sn-2 and Sn-1 make a cycle that can be
extracted from the sequence.
If point n is a minimum, IF Sn  Sn-2 AND Sn-1  Sn-3 then Sn-2 and Sn-1 make a cycle that can be
extracted from the sequence.
After this logic has been applied to the whole sequence, any remaining points are known as the
residual.
This is illustrated below:&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 816
Main Index
Two cycles are extracted from the sequence, represented by points 2 and 3 and by points 5 and 6. The
remaining turning points, 1, 4 and 7 form the residual. (In the trivial case where the history contains
only 2 or 3 points, there will be only 1 obvious cycle and no residual.)
3.Finally, the residual may be closed down. This is done by re-ordering the points to start from the
point with the largest absolute value, and repeating this point at the end. Steps 1 and 2 are then
repeated. In this case, point 7 is no longer a turning point, so we are left with the trivial case with only
3 points.
The end result of cycle counting is a list of cycles. For example, the case illustrated gives:&lt;/p&gt;
&lt;p&gt;817 APPENDIX
Glossary
Main Index
Note that if you start cycle counting a stress time history starting from the absolute maximum value, all cycles
will close, that is, there will be no residual.
The following values associated with each cycle may be used in subsequent fatigue calculations:
Max – the maximum value of the cycle
Min – the minimum value of the cycle
The range of stress (Max – Min)
The amplitude – half the range
The mean stress (Max + Min)/2
The load ratio or stress ratio R, Min/Max
Rainflow cycle counting for the local strain ( -N) approach is based on the same principles as for the S-N
method, but there are additional requirements in that we need to know the total (elastic-plastic) strain range
for each cycle, together with its mean or maximum stress.
Consider the case of a simple bar, subjected to a variable amplitude loading under uniaxial conditions, and
suppose we can determine the total strain and stress histories. If we plot stress against strain, the stress-strain
history will appear as a number of nested hysteresis loops, each corresponding to a rainflow cycle, as
illustrated.Cycle number Max value Min value
1 S2 S3
2 S6 S5
3 S4 S1&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 818
Main Index
Each excursion takes the shape of part of the hysteresis curve.
Starting at point 1, we follow the hysteresis curve as far as point 2. At this point the strain direction reverses,
so we start again from point 2 up to 3, and from point 3 we reset to the beginning of the hysteresis curve
again until point 4. 2-3-4 represents a closed rainflow cycle. At point 4, the well-known material memory
effect has to be considered. The material appears to “remember” that it was interrupted after starting from
point 1, so when it gets to point 4 it resumes along the hysteresis curve starting from 1 until it reaches the
next turning point at 5.
By continuing in this way, we will find that the entire history can be tracked and reduced to a number of
hysteresis loops that can be identified with rainflow cycles. For each cycle, we can determine the important
parameters we need for a fatigue calculation, namely the strain range and mean or maximum stress.
However, FE-based -N fatigue calculations are very often based on elastic FE results, so that the equivalent
strain history generated by the -N analysis engine based on the load provider is a pseudo-elastic strain
history. In reality, there may be plasticity, especially at critical locations, and this needs to be estimated if
realistic life predictions are to be obtained. In addition, the stress state may not be uniaxial. In these
circumstances, the tracking rainflow cycle counting procedure has to be modified to include a notch
correction procedure such as the Neuber or Hoffmann-Seeger methods, to estimate the total strain range of
each cycle, and to allow the resulting hysteresis loops to be correctly positioned.
The steps in the calculation are as follows:
1.Reduce the elastic strain history to a peak-valley sequence, and re-order it to start from the Abs Max
value, with the first point repeated at the end.
2.Position this point in stress-strain space using the cyclic stress strain curve and using a notch
correction method such as the Neuber method to estimate the elastic-plastic stress and strain.
3.From this point, calculate the next excursion using the hysteresis curve and the Neuber correction
again.
4.Repeat this process. When a cycle or cycles close, remove these points from the sequence, noting the
calculated total strain range, mean and maximum stress for the cycle, and reset the starting point for
the next strain excursion to the last remaining point.
5.Continue until the end of the history is reached and all cycles have closed.
Cyclic Properties
Cyclic material properties are those that are obtained from a material test similar to a monotonic test with
one big difference. The loading is reversed and cycled at various load levels. From these tests are derived the
cyclic stress-strain curve and the strain-life curve used in crack initiation analysis. At each load level the
stabilized hysteresis loop is extracted, its maximum stress/strain value extracted and plotted onto a single plot
to create the cyclic stress-strain curve.&lt;/p&gt;
&lt;p&gt;819 APPENDIX
Glossary
Main Index
Cyclic Hardening
This is a behavior exhibited by materials that, when subject to cyclic loading, actually strengthen with time.
This is illustrated by the hysteresis loops becoming taller and skinnier on stress-strain space. The yield
strength become greater.
Cyclic Softening
This is a behavior exhibited by materials that, when subject to cyclic loading, weaken with time. This is
illustrated by the hysteresis loops becoming shorter and fatter on stress-strain space. The yield strength lessens
.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 820
Main Index
da/dN C urve
This is the crack growth rate (da/dN). It is a material characteristic and as such, is treated as a material data
set and is obtained by experiments. It relates the growth rate of a crack to stress intensity ( K), or in other
words, the driving force of the crack. There are three regions on a da/dN curve. Region 1 is the threshold
region where the driving force is not great enough to grow a crack (like a fatigue limit). Region 2 is the linear
region of the curve where behavior is described by the Paris equation. Region 3 is where static or fast fracture
occurs as the driving force reaches or becomes very near to the fracture toughness of the material.&lt;/p&gt;
&lt;p&gt;821 APPENDIX
Glossary
Main Index
Damage (Log of Damage)
Damage is the reciprocal of Life. Sometimes it is reported in log base(10) units mainly for convenient contour
plotting.
Dam age Summa tion
This is the mechanism of summing the damage from the various stress cycles. All cycles are identified using
rainflow cycle counting. Damage due to each is determined from the appropriate damage curve such as an
S-N or strain-Life curve. Damage is then summed using the linear damage summation law as defined by
Palmgren and Miner which simply states that each cycle causes a damage which is equal to 1/(number of
cycles to failure at that load level). When you apply a series of cycles, damage is added up linearly until the
total is unity (1) when failure is predicted. Fatigue damage is a non-linear process, but we find that if we have
a fairly random repeated sequence it works satisfactorily.
Dam age Tolerant
This is a fatigue life design philosophy which adopts the crack growth method and is used in conjunction
with the fail safe philosophy. A crack or flaw is assumed to exist and its growth rate determined to set up
specific inspection periods to ensure that the flaw will not grow to any critical size between these inspections.
Dete rministic
This is a loading event which can be determined at any point in time, such as a constant amplitude sine wave.
Repeatable loading falls into this category. This is in opposition to a random load where no events can be
determined at any given point in time or more specifically, where the next sequence of events cannot be
determined from any previous events.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 822
Main Index
Durability
Durability is the conglomeration of all aspects that effect the life of a product and usually concerns itself with
much more than just fatigue and fracture, but also loading conditions, environmental concerns, material
characterizations, and testing simulations to name a few. A true product durability program in an
organization that takes all of these aspects and more into consideration.
Duty Cycle
A duty cycle is a series of events (roading, loading, digging, hauling, etc.) that comprises the typical loading
that a system will see throughout its life cycle. The duty cycle, as a sequence of events, is processed through
the analysis engine. Duty cycles can be processed by the fatigue analysis in three different ways, which can be
summarized as follows:
Independent  mode. Each unique event in the duty cycle is processed separately, and the damage
from each is multiplied by the number of times it appears in the complete sequence. The total
damage is the sum of the damage from all the different events. This is fast, but may miss significant
cycles that cross different events.
Combined Full  mode. All the events in the duty cycle are concatenated, including all repeats of each
event, and the resulting stress history is processed as if it was one long event. This is accurate, but is
computationally inefficient and could take a long time to process.
Combined Fast mode. An intermediate method that cycle counts events individually but also
captures the cycles that cross events. It will in general be almost as accurate as the Combined Full
option and almost as quick as the Independent mode.
The methods are best explained with the aid of a simple example.&lt;/p&gt;
&lt;p&gt;823 APPENDIX
Glossary
Main Index
Consider a duty cycle consisting of Event 1, which has 2 repeats, and Event 2, which has 3 repeats. We will
now consider how the resulting combined stress histories for these two events are handled by the different
duty cycle processing options.  See glossary term Cycles (cycle counting)  before reading this explanation.
In Independent mode, Event 1 is cycle counted. This results in a cycle with range B and a residual, which is
also closed to give cycle A. Each of these cycles appears twice in the duty cycle, so their damage is calculated
and multiplied by 2. The same procedure is applied separately to Event 2, resulting in 3 repeats of cycles C,
D and E.
The result can be summarized as 2&lt;em&gt;A, 2&lt;/em&gt;B, 3&lt;em&gt;C, 3&lt;/em&gt;D, 3*E.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 824
Main Index
This method has the virtue of being quick and simple, but it does miss out the obvious larger cycle formed
by the minimum of Event 1 and the maximum of Event 2. However, for many applications where there are
no big mean shifts between events, it may be sufficiently accurate.
In the Combined Full method, the entire duty cycle is concatenated, including every repeat of each event in
the correct sequence, and the result is rainflow counted from the beginning and the residuals closed down.
The result in terms of cycles can be summarized as: 1&lt;em&gt;A, 2&lt;/em&gt;B, 3&lt;em&gt;C, 2&lt;/em&gt;D, 2&lt;em&gt;E, 1&lt;/em&gt;F , 1*G.
This method has the virtue of being accurate – no assumptions or approximations are made. However, for
duty cycles with many repeats of individual events it could be prohibitively slow.
The Combined Fast option provides a good compromise between speed and accuracy. It works as follows:
1.Each unique event is cycle counted. Cycles that close within individual events are multiplied by the
total number of repeats of that event. The residual for each event is also closed and multiplied by the
total number of repeats of that event less the number of times the event appears in the duty cycle. In
the case of Event 1, we get 2 repeats of cycle B and 1 repeat of cycle A.
2.The residuals for each event are concatenated in the sequence in which they occur and then cycle
counted, including closing down any residuals.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P43</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_043/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_043/</guid>
      <description>
        
        
        &lt;p&gt;825 APPENDIX
Glossary
Main Index
In this case, the resulting cycles are: 1&lt;em&gt;A, 2&lt;/em&gt;B, 3&lt;em&gt;C, 2&lt;/em&gt;D, 2&lt;em&gt;E, 1&lt;/em&gt;F , 1*G. For this simple example, the result
is exactly the same as for the Combined Full option, but in general this cannot be guaranteed. However, for
almost all practical applications, this method should be sufficiently accurate.
Elastic
Elastic behavior refers to a component or material, which when subject to loading conditions that cause
structural deformation, if removed, returns to its original state. No permanent state of deformation is left
when the loads are removed. Linear elastic analysis denotes that as the loads vary, the responses vary in a linear
and elastic manner relative to the loads. For instance if you double or triple the load, the responses will double
or triple respectively. Whether the stresses exceed the yield or even the ultimate stress is not taken into
account.
Elastic-plas tic Correction
Elastic-plastic corrections are often required because the local strain approach requires total (elastic-plastic)
strain as well as stress, yet for efficiency reasons, calculations often have to be based on linear elastic finite
element (FE) calculations. Notch corrections allow elastic plastic strains and stresses to be estimated based
on elastic FE results.
Neuber: The Neuber method provides a simple way of estimating the total elastic-plastic strain and
stress at an “average” stress concentration, based on the local elastic stress/strain. Consider a simple
notched specimen subjected to a uniaxial loading. As long as the yield stress is not exceeded, linear
FE analysis gives (assuming a good model) a reasonably accurate estimate of the strain and stress at
the root of the notch. However, once the yield stress is exceeded, the elastic solution becomes
increasingly unrealistic. In practice, as yielding occurs, there will be a redistribution of stress and
strain around the notch, so that the real strain will be greater than the elastic value and the real stress
less than the value from elastic analysis. The true solution must lie somewhere on the material stress-
strain curve. To get a reasonably accurate estimate of the way this stress and strain is redistributed,
we could carry out an elastic-plastic FE solution, taking into account the geometry of the specimen,
but this could be rather time consuming, especially if we have to consider many loading cycles.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 826
Main Index
The Neuber method provides a simple alternative that provides a rough estimate for how the stress
and strain might redistribute, without reference to the real geometry. The Neuber method assumes
that the product of stress and strain before and after redistribution is constant. This is represented by
the Neuber hyperbola, where the product of stress and strain is constant and equal to the elastic
stress x elastic strain.
The Neuber method can be applied to monotonic or cyclic loading. It is applied to cyclic loading, in
one of two ways:
1.To position the outside hysteresis loop by applying Neuber to the Abs Max value of the elastic strain
in the strain history, together with the cyclic stress-strain curve. This is achieved by solving the pair
of equations
To calculate a subsequent strain excursion, by applying Neuber to the elastic strain range of the
excursion, together with the hysteresis curve, i.e., by solving the pair of equations
These two ways of using Neuber are illustrated below. First, the position of the Absolute Maximum
value is estimated using the Neuber method at Point 1. All hysteresis loops are positioned relative to
this point. The next strain excursion, to Point 2, is then corrected by applying the Neuber correction
to the range of the excursion, using the hysteresis curve.EeABsMax 2maxmax=
maxmax
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;max
K&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=
Ee2 =

E&amp;mdash;&amp;mdash;-2
2K&amp;mdash;&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/li&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;827 APPENDIX
Glossary
Main Index
Note that the Neuber method as implemented takes the damage parameter (Abs Max Principal,
Signed von Mises, etc.) and treats it as if it is the strain under uniaxial loading conditions (biaxiality
ratio a = 0).   In reality, the stress state is very often not uniaxial, and the Hoffmann-Seeger method
may give more realistic results.
Hoffma nn-Seeger : The Hoffmann-Seeger method is a modified version of the Neuber method that
takes into account the state of stress, allowing it to be extended to proportional multiaxial loadings.
If the loading is very non-proportional, then most of the assumptions implicit in this method are
violated; hardening is really kinematic and not isotropic, and the principal axes may not only rotate,
but the principal stress and strain axes are no longer necessarily aligned with each other.
The Hoffmann-Seeger method requires 2-D stresses or strains (e.g., from thin shells, or surface
resolved) and knowledge of the biaxiality ratio. As implemented, the Hoffmann-Seeger method
makes the following assumptions:
•The principal stress and strain axes are fixed in orientation.
•The ratio of the in-plane principal strains is constant.
•The uniaxial stress-strain curve can be extended for use with von Mises equivalent stress and strain
under different states of stress.
•Hencky’s flow rules.
•Masing’s hypothesis and material memory are implemented to achieve stress-strain tracking in
the same way as with Neuber.
For convenience, the in-plane principal stresses and strains are denoted 1, 2, 1, 2 and the surface
normal strain z. The principals are ordered so that
Application of Neuber correction to cyclic loading
1212&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 828
Main Index
First, the elastic value of the signed von Mises strain is computed, which is defined as
If the chosen damage parameter (stress combination) is Signed von Mises, this is calculated directly.
However, in practice, the calculation will often be based upon the Abs Max Principal strain, Critical
Plane strain, etc. In these cases, the elastic equivalent (Signed von Mises) strain can be deduced
knowing the elastic Poisson ratio e and the mean elastic biaxiality ratio ae (convert to von Mises).
If using Abs Max Principal Strain or Critical Plane
If using Signed Tresca or Type B Critical Plane Shear, and ae  0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;or if ae &amp;lt; 0
Then the elastic equivalent stress can be deduced
where “eq” denotes elastic equivalent.
The strain biaxiality ratio is deduced from the mean value of the elastic biaxiality ratio (from the
multiaxial assessment) as follows:
This strain ratio is assumed constant.
Now the Neuber correction is carried out as normal, but based on the elastic equivalent strain and
stress, i.e., by solving
if positioning the largest hysteresis loop, oreq1
1&amp;mdash;&amp;mdash;&amp;ndash;1
1ve+2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;12–22z–2z1–2+ +   =
eq11ae– ae2+
1aeve–
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
eqSignedTresca1ae– ae2+ =
eqSignedTresca1ae– ae2+
1ae–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
eqEeq=
2
1&amp;mdash;&amp;ndash;aeve–
1aeve–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
qq
E&amp;mdash;&amp;mdash;q
K&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;= andqqeq=eqEeq2=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;829 APPENDIX
Glossary
Main Index
for subsequent strain excursions. The subscript “q” here denotes the estimated elastic-plastic strain
and stress.
Once the plasticity correction has been carried out, the principal stresses and strains can be calculated,
assuming Hencky’s flow rules and that the principal strain ratio remains constant.
First, the effective Poisson ratio must be calculated:
Then&lt;/p&gt;
&lt;p&gt;a is the elastic plastic biaxiality ratio. (If the ratio of the principal strains is considered fixed, the ratio
of the principal stresses will in general change.)
Critical plane strain is treated as if it were Abs Max Principal Strain, and Type B Critical Plane Shear
strain is treated as if it were Signed Tresca Strain.qq
E&amp;mdash;&amp;mdash;&amp;mdash;-2q
2K&amp;mdash;&amp;mdash;&amp;mdash;-1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= andqqeq=eqEeq2=
v0.5 0.5ve–q
Eq&amp;mdash;&amp;mdash;&amp;mdash; – =
141va–
1a– a2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
22
1&amp;mdash;&amp;ndash;
1=
141
1a– a2+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
2a1=
a2
1&amp;mdash;&amp;mdash;2
1&amp;mdash;&amp;ndash;v+
1v2
1&amp;mdash;&amp;ndash; +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = =
a2
1&amp;mdash;&amp;mdash;2
1&amp;mdash;&amp;ndash;v+
1v2
1&amp;mdash;&amp;ndash; +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- = =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 830
Main Index
Note that the assumption of constant strain ratio means that the Hoffmann-Seeger method will give
slightly different results to the Neuber method for uniaxial loadings. However, the differences are
small, and as long as 2-D FE results are available, the Hoffmann-Seeger method is a sensible default.
Elemental and Element Nodal Stress/Strain
See glossary term Stress/Strain (from FEA) .
Endur ance Limit
This is similar to the fatigue limit and is an imposed limit of reversals on strain-Life curves above which the
component is said to have infinite life. This limit, referred to as the material cut-off, is set to 2e8 reversals but
can be changed by the user.
Event Pr ocessing
See glossary term Duty Cycle .
Failure Criterion
The criterion that defines failure such as catastrophic failure into two or more pieces, until an engineering
crack of 2mm appears, or until a crack reaches a critical size to be deemed unsafe. Understanding the failure
criterion in a fatigue analysis is very important. The material properties used in any fatigue analysis, be it an
S-N curve, strain-Life curve, or crack propagation da/dN curves, define the failure criterion.
Fail Safe
This is a fatigue life design philosophy which adopts the total life (S-N) method generally where failure
cannot be tolerated. Therefore built in redundancy is generally used such that if a failure were to occur, the
structure would fall into a state that it would survive until repair can be accommodated.
Fatigue
This is a failure under a repeated or otherwise varying load which never reaches a level sufficient to cause
failure in a single application. The initiation and growth of a crack, or growth from a pre-existing defect, until
it reaches a critical size, such as separation into two or more parts
Fatig ue Concentra tion Factor, Kf
This is similar to the stress concentration, Kt, except it accounts for the fact that small notches have less effect
on fatigue than is indicated by Kt. This has led to the idea of a fatigue concentration factor, Kf, which is
normally less than Kt, being introduced and being used to replace Kt within Neuber’s rule. Kf is related to Kt
according to
where p’ is a material constant dependent on grain size and strength and r is the notch root radius.Kf1 Kt1– + 1 p&amp;rsquo;r§ +  § =&lt;/p&gt;
&lt;p&gt;831 APPENDIX
Glossary
Main Index
Fatigue Limit
This is a stress level below which no fatigue failures will occur. See Stress-Life (S-N) .
Fourier Analysis
In simplistic terms, Fourier analysis is the ability to represent a finite length of time signal by the sum of a
series of sine waves with varying amplitudes, frequencies, and phases.
Fracture
A fracture is the growth or propagation of a crack once it has been initiated. Fracture also denotes sudden
breakage of a component or structure in two. However for the purposes of this manual it refers to the life
prediction method of crack growth as implemented using LEFM. See LEFM .
Fracture Mechanics Triangle
The fracture mechanics triangle states that if any two of the three variables are known, through fracture
mechanics and their relationships to one another, the other can be determined.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 832
Main Index
Frequency Domain
The time domain relates a variable (stress) to time and describes how the variable changes with time. Time
signals can also be represented in the frequency domain which relates the variable to frequency, describing
how that variable changes with or is affected by frequency. The time and frequency domains present the same
information in different ways, helping the engineer understand the effect a signal or response may have on a
structure. Consider, for example, a random signal which when converted to the frequency domain shows only
content at 10 Hz. This signal when applied to a structure with natural frequencies well above 10 Hz may not
be damaging at sufficiently low enough levels. However if the structure has natural frequencies in the 10 Hz
range, the signal would be far more damaging. Being able to view a signal in the frequency domain can alert
an engineer to this potential danger.
Gaussian
For a random signal and for most engineering purposes the amplitude Probability Density Function (PDF)
will be approximately Gaussian. This means that the density distribution will take on a bell like curve as
shown here where the highest levels of the signal are the least probable of occurring. See also glossary term
Power Spectral Density (PSD) .
Gerb er Mean Stress
This is a mechanism to correct for a non-zero mean stress range for the S-N method. See glossary term Mean
Stress Correction .
Good man Mean Stress
This is a mechanism to correct for a non-zero mean stress for the S-N method. This is a more conservative
method than the Gerber one. See glossary term Mean Stress Correction .&lt;/p&gt;
&lt;p&gt;833 APPENDIX
Glossary
Main Index
Haigh
Another way of defining stress-life data is in terms of a constant life sometimes referred to as a Haigh diagram.
The material behavior is described by a number of curves on a plot of stress amplitude vs. mean stress, each
of which represents test failures with the same fatigue life. See glossary term Interpolation  for more details.
High C ycle Fatigue (HCF)
This is the ability of a component or structure to withstand or survive many stress cycles. S-N analysis
applications deal completely in the high cycle regime and are not valid in the low cycle regime. The technical
definition of high cycle versus low cycle fatigue is where the elastic and plastic strain-Life curves cross each
other on the strain-Life plot. This is known as the transition life above which is high cycle fatigue and below
which is low cycle fatigue. It is clear that above the transition life elastic events dominate and below it, plastic
events dominate. S-N analysis does not compensate for plastic events in an adequate way as the strain-life
method does and for this reason is not a good choice for low cycle fatigue problems. The strain-life method
can handle both high and low cycle fatigue problems. The transition life is generally around 104 or 105 cycles
and is material dependent.
Hoffman-Seeger
See glossary term Elastic-plastic Correction .&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 834
Main Index
Hyster esis
This is a material behavior that is illustrated by loading a material beyond its yield point and then unloading
it and perhaps reversing the load until it yields in compression and cycling. When the stress and strain are
cross plotted, they create plots such as the one shown here. Each loop is a hysteresis loop. This phenomenon
is know as the Baush inger effect after the German engineer that first documented this behavior of most
metallic materials.
Inverse Fourier Transform
The ability or methodology of converting a frequency domain signal back into the time domain by recreating
the time signal from a power spectral density (PSD) function is called the Inverse Fourier T ransformation.
Because no phase information is kept with a PSD, random phases are created. The regenerated time signal
will not be exactly the same as the original but will be statistically equivalent.
Interpol ation
The S-N analysis can accept the S-N data in the form of a family of curves representing the fatigue strength
of the material at different mean stress levels. This is another way of compensating for mean stress effects. The
normal way to use such a curve set is to interpolate between the curves to determine the life and
corresponding damage for each cycle. This process is illustrated in the following diagram for constant mean,
constant r-ratio, and constant (Haigh) curves.
Constant Mean Curves : The material S-N behavior is described in this case by two S-N curves
representing the material at mean stress levels of 0 and 100.&lt;/p&gt;
&lt;p&gt;835 APPENDIX
Glossary
Main Index
•Consider a cycle with Range X . First we must identify which two curves to use for interpolation
by finding the pair with mean values either side of that of our cycle.
If the cycle has a mean of 50, this lies between our two curves. In this case, we look up the
log(Life) values on the two curves corresponding to LogX, and locate points A and B. If necessary,
we extrapolate the curves beyond their end points. We then linearly interpolate between these two
log(Life) values based upon the mean stress of our cycle to determine the log(Life) of our cycle.
If the cycle has a mean less than or equal to the minimum mean of all the curves (in this case 0),
the life is determined using the curve with the minimum mean value. The life corresponds to
Point B.
If the cycle has a mean greater than the maximum mean in the curve set, in this case 100, either
the two curves with the highest mean values can be used to determine the log(life) by
extrapolation, or the curve with the highest mean may be used, i.e., in this case the life
corresponds to point A. This is controlled by the interpolation limit  property.
•Consider a cycle with range Y . This corresponds to point C on the Mean = 100 curve, but it does
not intersect the mean = 0 curve, or that intersection point is beyond the Fatigue Cutoff Life. In
this case, the second point D used for interpolation or extrapolation is set to 30 (corresponding
to life of 1E30).
•Consider now a cycle with Range Z.  This cycle does not intersect any of the S-N curves at a value
less than the material cutoff, so the damage value will be set to zero.  Any cycle for which the
resulting life is beyond the material cutoff will have its damage set to zero.
Constant Mean S-N Curves&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 836
Main Index
Constant R-ratio Curves : The handling of multiple r-ratio curve data is very similar to that of
constant mean data.  The material S-N behavior is described in this case by two S-N curves
representing the material at R-ratios of -1 and 0.
•Consider a cycle with range X.  First we must identify which two curves to use for interpolation
by finding the pair with mean values either side of that of our cycle. We have to be a little careful
because the R-ratio has two distinct regimes bounded by the condition where maximum stress =
0, at which point R is undefined.
Constant R-ratio Curves&lt;/p&gt;
&lt;p&gt;837 APPENDIX
Glossary
Main Index
If the cycle has an R-ratio of -0.5, this lies between our two curves. In this case, we look up the
log(Life) values on the two curves corresponding to LogX, and locate points A and B. If necessary,
we extrapolate the curves beyond their end points. We then calculate the mean stress
corresponding to points A and B and linearly interpolate between these two log(Life) values based
upon the mean stress of our cycle to determine the log(Life) of our cycle. We don not use the R-
ratio for interpolation because of the non-linear and discontinuous behavior illustrated in the
figure of lines of constant R-ratio above.
Assuming that there are no curves present with R &amp;gt; 1 (i.e., totally in the compressive regime,
which is unlikely):
If the cycle has an R-ratio less than or equal to the minimum curve R-ratio, or which is
greater than 1, the life is determined using the curve with the minimum R-ratio value.
If the cycle has an R-ratio greater than the maximum R-ratio in the curve set, but less than
1, either the two curves with the highest R-ratio values can be used to determine the
log(life) by extrapolation, or the curve with the highest R-ratio value may be used, i.e., in
this case, the life would correspond to point A. This is controlled by the interpolation limit&lt;br&gt;
property.
•Consider a cycle with Range Y.  This corresponds to point C on the R = 0, but it does not
intersect the R = -1 curve, or that intersection point is beyond the Fatigue Cutoff Life. In this
case, the second point D used for interpolation or extrapolation is set to 30 (corresponding to a
life of 1E30).
•Consider now a cycle with Range Z . This cycle does not intersect any of the S-N curves at a value
less than the material cutoff, so the damage value will be set to zero.  Any cycle for which the
resulting life is beyond the material cutoff will have its damage set to zero.
Lines of Constant R-ratio&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 838
Main Index
Constant Life (Haigh) Curves : Another way of defining stress-life data is in terms of a constant life
or Haigh diagram. The material behavior is described by a number of curves on a plot of stress
amplitude vs. mean stress, each of which represents test failures with the same fatigue life.
The life for a given cycle is determined by interpolation between the curves of the Haigh diagram.
For example, in the illustration below, consider the cycle represented by point A. This lies between
the curves for Nf = 1E4 and Nf = 1E6. Based upon the mean stress of this cycle, we look up the stress
amplitudes corresponding to points D and E. The life for this cycle is determined by linear
interpolation of the log(Life) between these points. For example, if A lies halfway between D and E,
the predicted life for that cycle will be 1E5 (damage 1E-5).
The stress amplitude points for interpolation may be determined by extrapolation if necessary, as for
point C.
For a cycle that lies above or below all the curves such as that represented by point B, the life and
damage is determined by extrapolation (subject to limitations imposed by the MaxDamage and
Fatigue cutoff properties).
Results based upon cycles that use extrapolation should be treated with some caution.&lt;/p&gt;
&lt;p&gt;839 APPENDIX
Glossary
Main Index
Irregul arity Factor
This is a parameter for describing or characterizing a process such as a time signal or a power spectral density
function. For a time signal, it is defined as the ratio of the number of times a signal passes upward in a positive
manner through the mean of a signal divided by the number of peaks. In the frequency domain, the
irregularity factor is determined from its moments. The irregularity factor takes on values between zero and
one, one describing a narrow band process and non-zero values describing wide or broad band processes. A
value of unity describes a process whose peaks and adjacent valleys are roughly the same order of magnitude
Fatigue Life by Interpolation using Haigh Diagram&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 840
Main Index
but of opposite sign whereas a value of near zero represents a signal that has an infinite number of peaks versus
upward mean crossings, e.g., a dominate sine wave with noise superimposed on top of it.
K-So lution
See glossary term Compliance Function .
LEFM
Linear Elastic Fracture Mechanics. This is the art of crack growth prediction as determined from linear elastic
stresses. It assumes only a localized plastic zone around the crack tip and uses the stress intensity or driving
force of the crack to determine crack growth rates according to the Paris equation.
Life (Log of Life)
The Life (Log of Life) is the result reported as to how long a component or structure will last. This life can
be reported in terms of stress cycles or reversals survived, however this is usually not a convenient way of
reporting it. Time series are generally given some sort of fatigue equivalent units such as laps, miles, hours,
missions, etc., which are more descriptive to a user in describing the life. A repeat of a time history may have
many stress cycles but can be described as representative of, say, 30 times around a cobblestone test track. The
life is then reported as laps. Because the computed life of a component can vary dramatically from location
to location on the component itself, the life is often reported in log (base 10) units. This is convenient because
the spread can be from some small finite number (1000) to infinite life (the cutoff being around 1018). This
helps spread out contour bands on graphical plots for better visualization and for xy plots.
Local Strain
See glossary term Strain-Life (e-N) .
Low C ycle Fatigue (LCF)
Low cycle fatigue is the inability of a component or structure to withstand or survive many stress cycles. See
glossary term High Cycle Fatigue (HCF) .
Mate rial Cut-off
See glossary term Endurance Limit.
Mate rial Generation
Allows for standard S-N, -N or Dang Van fatigue material properties to be estimated or derived, based on
basic information such as the type and strength of the material.
Standard properties can be generated for four(4) different material classes - Ferrous, Aluminium, Titanium
and Other. Apart from selecting the material class, the user provides the static strength (UTS) and an estimate
of the Standard Error of log(N), except for the case of &amp;ldquo;Other&amp;rdquo; materials, where the Elastic Modulus and
Reduction in Area (%) are also required. The fatigue properties are then calculated as follows. Note that any
property values not listed are not set.&lt;/p&gt;
&lt;p&gt;841 APPENDIX
Glossary
Main Index
Then the S-N curve is defined by the values of the stress at 1000 cycles (call this S1) and at the transition life
Nc1 (call this S2).Parameter NameCalculation
Ferrous Aluminum Titanium Other
MaterialType 99 100 300 0
UTS User entry User entry User entry User entry
E 210000 MPa 73000 MPa 110000 MPa User entry
Me 0.3 0.3 0.3 0.3
Mp 0.5 0.5 0.5 0.5
Parameter NameS-N Calculation
Ferrous Aluminum Titanium Other
S1 0.9 x UTS 0.7 x UTS 0.8 x UTS 0.8 x UTS
S2 0.357 x UTS 0.258 x UTS 0.307 x UTS 0.274 x UTS
Parameter
NameS-N Calculation
Ferrous Aluminum Titanium Other
SRI1 2 x S2/(Nc1)b1 2 x S2/(Nc1)b1 2 x S2/(Nc1)b1 2 x S2/(Nc1)b1
b1 (log(S2) -
log(S1))/(log(Nc1) -
3)(log(S2) -
log(S1))/(log(Nc1) -
3)(log(S2) -
log(S1))/(log(Nc1) -
3)(log(S2) -
log(S1))/(log(Nc1) -
3)
Nc1 1E6 5E8 1E6 1E6
b2 b1/(2 + b1) b1/(2 + b1) b1/(2 + b1) b1/(2 + b1)
SE User entry User entry User entry User entry
RR -1 -1 -1 -1
Parameter
Name-N Calculation
Ferrous Aluminum Titanium Other
Sf &amp;lsquo;1.5 x UTS &amp;lsquo;1.67 x UTS &amp;lsquo;1.67 x UTS &amp;lsquo;1.9 x UTS
b -0.087 -0.095 -0.095 -0.12
c -0.58 -0.69 -0.69 -0.6&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 842
Main Index
where
if UTS/E &amp;gt; 3E-3, ? = 1.0
if 3E-3 &amp;lt; UTS/E &amp;lt; 1E-2, ? = 1.375 - (125 x UTS/E)
if E-2 &amp;lt; UTS/E, ? = 0.1
and where
D = log (1/(1-RA/100)). RA is the Reduction in Area (%) entered by the user.
Dang Van properties can be estimated for ferrous materials only, based on the UTS as follows:
Mate rial S-N
This is an S-N curve that relates local stress ( ) to life. These types of curves are generally obtained through
material tests of highly polished test coupons where the monitored stress is the stress experienced at the failure
location. These type of S-N curves are geometry independent; that is, the S-N curves are valid for any
geometry and are only dependent on the actual material that they represent. All plasticity modeling is built
into the curve.
Mean
Mean is the average value of a cycle or signal. It is the maximum plus the minimum divided by two for a
simple constant amplitude oscillating signal as shown here. Note that the two small cycles in the stress-strain
plot have the same strain range but have different mean stress.Ef &amp;lsquo;0.59 &amp;lsquo;0.35 &amp;lsquo;0.35 &amp;lsquo;0.76 x D0.6
n &amp;lsquo;0.15 &amp;lsquo;0.11 &amp;lsquo;0.11 &amp;lsquo;0.2
K &amp;lsquo;1.65 x UTS &amp;lsquo;1.61 x UTS &amp;lsquo;1.61 x UTS &amp;lsquo;Sf&amp;rsquo;/(Ef&amp;rsquo;n&amp;rsquo;)
Nc 2E8 2E8 2E8 2E8
SEe User entry User entry User entry User entry
SEp User entry User entry User entry User entry
SEc User entry User entry User entry User entry
Material Parameter Description
MaterialType 99
UTS User Entry
E 210000
TAFE 0.28 x UTS if UTS &amp;lt; 1400 MPa; 430 MPa if UTS &amp;gt; 1400 MPa
HSS 0.35Parameter
Name-N Calculation
Ferrous Aluminum Titanium Other&lt;/p&gt;
&lt;p&gt;843 APPENDIX
Glossary
Main Index
Mean Stress Correction
This is a technique for correcting or compensating for non-zero mean signals when looking up damage on
damage curves that have been created with zero mean (R=-1) signals in a test laboratory. Various methods
exist for both the S-N and strain-life methods. Fracture mechanics uses different da/dN curves for different
R-ratios. See also Interpolation , which is used for mean stress correction using multiple life curve. For the S-
N method:
Good man: The Goodman mean stress correction calculates an effective stress amplitude based upon
the mean stress and UTS of each cycle. Again, this can work with all S-N data types, but if it is to
function with multiple curve data, the material data set must include data sets corresponding to zero
mean or R = -1, otherwise an error message is issued.
In its original form, it is used to calculate an effective stress Se that can be compared to an R = -1 S-
N curve, based upon the stress amplitude Sa, mean stress Sm and the material UTS:
This has been extended to allow the equivalent stress to be determined for any R-ratio:
This is illustrated below:mmaxmin+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
Sa
SeR=1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;Sm
UTS&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; + 1=
SeRR Sa UTS
UTSSm– Sa1RR+1RR– +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 844
Main Index
Goodman Tension Only : The Goodman correction in the form described above can be rather non-
conservative for cycles with compressive mean stresses. Goodman Tension Only addresses this by
flattening off the constant life curve when the mean stress is compressive, as illustrated below:
Goodman Mean Stress Correction&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P44</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_044/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_044/</guid>
      <description>
        
        
        &lt;p&gt;845 APPENDIX
Glossary
Main Index
Gerber: The Gerber correction in its original form is similar to Goodman, except that the second
term is squared:
We can then calculate the equivalent stress for any other R-ratio RR:
Graphically, this looks like:
Goodman Tension Only Mean Stress Correction
Sa
SeR=1–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;Sm
UTS&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1=
SeRR 14SeR=-11RR+2 
1RR–2UTS2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; +
   1–
    1RR–2UTS2
2SeR=-11RR+2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 846
Main Index
In practice this is not very realistic, because the reduction in fatigue strength under compressive
loading is the same as it is under tensile loading. The Gerber correction in its original form will in
general be rather non-conservative for tensile mean stresses and rather pessimistic for compressive
mean stresses. This is particularly unrealistic, and so the method as implemented is modified so that
for compressive loadings:
Nevertheless, this method is not highly recommended. Also (although this is not likely to be an issue
in practice) the user can imagine that this method may have problems finding a unique solution for
the equivalent stress, or any solution at all, when RR (the R-ratio of the test data) lies deep in the
compressive region.
Gerber Mean Stress Correction
Sa
SeR=-1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Sm
UTS&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2
– 1=&lt;/p&gt;
&lt;p&gt;847 APPENDIX
Glossary
Main Index
Gerber Tension Only : This option provides a better solution by flattening off the constant life
diagram in the compressive region in the same way as for Goodman Tension Only.
Interpolate : When Interpolate is selected, the mean stress effect will be taken into account by
interpolation (or extrapolation) from multiple curves. The exact method depends upon the S-N
data type. See glossary term Interpolation .
Modified Gerber Mean Stress Correction
Tension Only Gerber Mean Stress Correction&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 848
Main Index
FKM : The FKM method as implemented here is based upon the method described in the FKM
Guideline “Analytical Strength Assessment of Components in Mechanical Engineering”, Tr. E.
Haibach. 2003.
In essence it uses 4 factors M1-4 which define the sensitivity to mean stress in 4 regimes:
1.R&amp;gt;1
2.–infinity &amp;lt;= R &amp;lt; 0
3.0 &amp;lt;= R &amp;lt; 0.5
4.0.5 &amp;lt;= R &amp;lt; 1
where R is the stress ratio (min/max) of the loading cycle. The method allows us to determine the
equivalent stress amplitude S-eq at a particular material R-ratio, Rref. The method is illustrated in the
form of a constant life or Haigh diagram:
The values of M1-4 can be determined from material tests or estimated as follows:
M1 = 0
M2 = -M
M3 = -M /3
M4 = 0
Where the value of Mis estimated as follows for the supported material types:
M = aM&lt;em&gt;10-3&lt;/em&gt;Rm + bM where aM and bM are constants and Rm is the UTS in MPa.
FKM Mean Stress Correction&lt;/p&gt;
&lt;p&gt;849 APPENDIX
Glossary
Main Index
Values of aM and bM for the different supported material classes are as follows:
In the software, if M1-4 are undefined, and the material type is one of those listed, all the parameters
will be estimated using these rules. If only M2 is defined, then M1 and M4 will be set to zero and M3
to M2/3.
A simple mean stress correction based on FKM where M1=M2=M3=M4=-MSS can be used the
fatigue analysis of spot welds per this schematic.
Morrow: Used in -N analysis only, the Morrow mean stress correction adjusts the value of the
intercept of the elastic part of the strain life curve before looking up the life/damage, on a cycle-by-
cycle basis as follows:
where m is the mean stress of each cycle. The effect of this mean stress correction, correlated with
test data, is illustrated below:Table 0-2  FKM Mean Stress Correction Parameters
Material
Type SteelGS
(cast
steel)GGG
(nodular
cast iron)GT
(malleable
cast iron)GG (cast
iron with
lamellar
graphite)Wrought Al
alloyCast Al
alloy
Material Type
No. (CODE)13,14,16-22-
25,26-999-12,15 5-8 2-4 1 100-105 106
aM .35 .35 .35 .35 0 1.0 1.0
bM -0.1 0.05 0.08 0.13 0.5 -0.04 0.2
afm–
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2Nfbf2Nfc+ =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 850
Main Index
Smith Wat son Topper  (SWT) : Used in -N analysis only, while loosely termed a mean stress
correction method, the Smith-Watson-Topper method actually defines a new damage parameter
based upon the product of the strain amplitude and the maximum stress of each cycle.
In practice, there are two ways this can be applied.
•In the Formula  method, the following equation is solved for life/damage.
•In the Iterative  method (not currently supported), a fully reversed cycle that has the same value
of PSWT as the cycle being analyzed is sought.
PSWTamax=
amaxf
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;2
2Nf2bff2Nfbc++ =&lt;/p&gt;
&lt;p&gt;851 APPENDIX
Glossary
Main Index
The strain amplitude of the fully reversed cycle defines an equivalent strain amplitude that can be
looked up on the standard strain-life curve. Because the strain amplitude and max stress of the
equivalent fully reversed cycle are related by the cyclic stress-strain curve, the equations to be
solved are:
The equivalent stress amplitude is then looked up on the standard strain-life curve as normal.&lt;br&gt;
Generally, the Iterative method is considered a more correct approach.
Miner’s Constant
Miner’s constant is the damage summation constant that defines failure, usually set to unity (1). See glossary
term Damage Summation .
Monotonic Properties
Monotonic material properties are those that are obtained from a material test. Test coupons are placed in
servo-hydraulic machines and loaded in a single application of steady load increase through the yield point
of the material and to ultimate fracture of material. From these tests come various material parameters such
as Young’s Modulus (E), the yield strength ( y), and the ultimate tensile (UTS). The load is not reversed, nor
is it cycled to obtain these properties.
Morro w Mean Stress
A mechanism to correct for non-zero mean stress for the strain-life method. See glossary term Mean Stress
Correction .PSWTamaxaequivmaxequiv= =
aequivmaxequiv
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;maxequiv
K&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 852
Main Index
Multia xial
Multiaxial means that the stress state is not uniaxial. More than one principal stress exists. The biaxiality ratio,
ae, defined as the minimum in-plane stress divided by the maximum in-plane stress (for surface stresses), is
non-zero. There are two different degrees of multiaxial stress states: proportional and non-proportional.
Proportional multi-axial or proportional loading refers to the principal stresses always being in proportion to
one another in magnitude and are stationary. Stationary means that the principal stress axes do not rotate
significantly with time or in other words, the maximum and minimum principal stresses are always in the
same direction. Non-proportional loading is the opposite of this where the two principal in-plane stresses are
not proportional to each other at any given time, nor is the principal stress axis always in the same direction.
See A Multiaxial Assessment  (Ch. 12).
Narrow Band
This is a signal which contains frequency content predominantly at or around one frequency which when
converted to the frequency domain appears as single peak spanning only a portion of the frequencies.
Neuber’s Rule
See glossary term Elastic-plastic Correction .
Nodal Averaged Stress/Strain
See glossary term Stress/Strain (from FEA) .
Non-pro portional Loading
See glossary term Multiaxial  and A Multiaxial Assessment .
Notch Correction
This is a term that is adopted in the FE-fatigue world to signify the correction from purely elastic stresses and
strains to elastic-plastic stresses and strains. See glossary term Elastic-plastic Correction . Historically the term
comes from determination of stress at a notch while taking measurements away from the notch and using a
stress concentration factor, Kt, knowing that the material has yielded in the notch area and an additional
correction needs to be made to determine the true stress (and/or strain).
Offset
See glossary term Scale Factor and Offset .&lt;/p&gt;
&lt;p&gt;853 APPENDIX
Glossary
Main Index
Paris E quation
This is the main equation that governs the LEFM (crack growth) method and relates the crack growth rate
(da/dN) to stress intensity ( K). , where C and m are material constants.
Peak-Val ley Extraction
See glossary term Time History Compression .
Plastic Load Limit Correction
See glossary term Shape Factor .
Plasti city
Fatigue does not generally involve major changes to the properties of the bulk of the material in a component.
In most components that have failed by fatigue, the processes that lead to the fatigue failure are confined to
the region around the crack tip. Fatigue is always caused by plastic deformation. Plasticity is an irreversible
process of deforming the material beyond its yield point. Some who have experienced fatigue failures may
say “there is no plastic deformation in my component,” or “the FEA results showed that all stresses were below
yield.” If there is a fatigue failure, then there must be plastic deformation, even if it is confined to only a few
grains, or to a very small region around the tip of a crack or a notch.
Power Spectral Density (PSD)
The term originated with electronic engineers in the 1940’s trying to characterize equipment noise. The PSD
is a way of describing a random time signal. A random signal is random because there is no way of predicting
a future section of the signal from previous sections. Therefore some sort of statistical method of describing
these signals was devised. By taking a time signal, squaring it, and taking its average you get what is called
the mean square value. If the squared signal is passed through a low pass filter at various cut-off frequencies,
the mean value can be plotted as a function of frequency. The slope of this curve describes the density of the
mean square with respect to frequency and is called a “spectrum.” The term “spectral density” comes from da
dN&amp;mdash;&amp;mdash;- CKm=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 854
Main Index
the fact that it is a property with respect to frequency such as a rainbow which is the variations of frequency
in the colors of visible light. The term “power” dates back to the electrical engineers who used power as the
key parameter. Dynamicists have simply adopted the term. In simple summary, a PSD is nothing other than
an equivalent representation of a random time signal in a different domain, which has certain advantages over
the time domain. In terms of Fourier analysis, the area under any infinitesimal strips of the PSD represents
the mean square of the sine wave at that frequency where a time signal is made up of a number of sine waves
summed together.
Probabilistic Nature of Fatigue
See glossary term Certainty of Survival .
Probability Density Function (PDF)
T wo important Probability Density Functions (PDF) can be computed from a stress or strain time history.
These are the amplitude and peak PDFs as shown. The best way to visualize these parameters is to draw tram
lines horizontally through the time history and then count either the number of times the signal crosses the
tram lines or the number of times a peak occurs in-between the tram lines. The complete PDFs are obtained
by repeating this process for all horizontal levels in the signal. For most engineering purposes the amplitude
PDF will be approximately Gaussian. Furthermore, for a narrow band process the peak PDF will be
approximately equivalent to the Rayleigh PDF . A PDF , therefore, is the probability of a certain stress or strain
level occurring and is represented as a density distribution.
Proportio nal Loading
See glossary term Multiaxial  and A Multiaxial Assessment  (Ch. 12).
R-Ratio
This is a measure of the mean stress or the mean of constant amplitude signal or the mean of a stress cycle. R
= -1 is a fully reversed signal or a cycle with zero mean. R = 0 is a signal which goes from zero to a maximum
value and returns to zero. R = infinity is the reverse where the signal goes from zero to a negative maximum
value and back to zero.
Rainf low Cycle Counting
See glossary term Cycles (cycle counting) .&lt;/p&gt;
&lt;p&gt;855 APPENDIX
Glossary
Main Index
Rand om Vibration
This is excitation due to loading which is random in nature. That is to say that at any particular point in time
it is impossible to determine anything specific about the loading. It can only be described by its statistics such
a mean level, rms, standard deviation, etc. This is in opposition to a loading event which can be determined
at any point in time, such as a constant amplitude sine wave. Random vibration is usually dealt with in the
frequency domain by converting signals to power spectral density functions (PSDs).
Range
Range is the total absolute magnitude between the maximum and minimum values of a cycle. Note that the
two small cycles in the stress-strain plot have the same stress and strain range but have different mean stress.
Refere nce Location
When dealing with component S-N curves, this is the location on the test specimens used to create the S-N
curve. The nominal stress axis of the S-N curve relates stress levels at this location to failure. When using a
component S-N curve in conjunction with finite element models you must know the equivalent location
(reference location) as only stress from this location relates to the S-N curve.
maxmin– =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 856
Main Index
Regres sion Analysis
Regression analysis is the art of taking measured data such as that for an S-N curve and determining an
equation to describe the curve from the raw data, also called curve fitting.
Residual Stress
This is a permanent stress that is left behind in a component or structure after unloading. Residual stress can
be caused or induced in a number of ways such as shot peening, overloads, and manufacturing processes to
name a few. Residual stresses can be tensile (positive) or compressive (negative) in nature and can be beneficial
to bettering fatigue life (compressive) or detrimental (tensile).
Root M ean Square (rms)
By taking a time signal, squaring it, then taking the average, you get the mean square of the signal. If you take
the square root of the mean square of the signal you get the root mean square (rms). The rms is a parameter
that allows you to gauge the overall intensity of a signal relative to another random signal.
Safe Life
This is a fatigue design philosophy which adopts the crack initiation method. In general it is applied to
relatively inexpensive components which can easily be thrown away and replaced. In addition it is applied to
structures or parts where the initiation of a crack takes up the majority of the life relative to the growth of the
crack or where it is intolerable to have a crack in the structure. This philosophy generally produces fairly
optimized structures and is used heavily in the ground vehicle industry. A failure of a component designed
with this philosophy should not have catastrophic consequences.
Sample Rate
When measuring a signal, the sample rate is the number of times you take a sample in a given period of time,
usually one second. It is the frequency of samples in number/second. Sampling too slowly can cause
important loading events to be missed.
Scale Factor and Offset
The scale factor and offset settings allow the user to manipulate the stresses or strains before further analysis,
for whatever purpose. For example, the offset might be used as a simple way to explore the possible effect of
a residual stress.
In the case of the S-N analysis, the scale factor and offset are applied to the combined stress history (i.e., after
extracting the Abs Max Principal, Critical Plane stress, etc.) before cycle counting.
(Stress for cycle counting) = (Combined stress) x (Scale Factor) + (Offset)
In the case of the -N method, the offset, which is defined as a stress, has to be converted into strain units
first, so:
(Strain for cycle counting) = (Combined strain) x (Scale Factor) + (Offset)/E
In the case of the Dang Van approach, because it is a multiaxial safety factor approach, and because it includes
an elastic shakedown procedure, definition of an offset of undefined direction makes little sense. For this&lt;/p&gt;
&lt;p&gt;857 APPENDIX
Glossary
Main Index
reason, the Dang Van engine supports only the scale factor, which is applied to the whole stress tensor before
the Dang Van calculation.
Seam  Welds (fatigue analysis of)
The original work to develop this methodology of fatigue analysis of seam welds is found in Mikael Fermér,
Magnus Andréasson and Björn Frodin. “Fatigue Life Prediction of MAG-Welded Thin-Sheet Structures”,
SAE T echnical Paper 982311 . An example and modeling guidelines and techniques are explained in Seam
Welds  (Ch. 11). The calculation method is explained here.
Having identified the FE entities (nodes/elements) from which stresses will be recovered for calculation, and
the correct surfaces of each element to use, the calculation proceeds as follows:
1.Determine “weld-top” and “weld-bottom” surface stress tensor time histories and calculate “weld-
top” and “weld-bottom” surface combined stress histories (Abs Max Principal or Critical Plane)
2.Use “weld-top” and “weld-bottom” surface stresses to determine the degree of bending in the loading
on the weld at the calculation point in question.
3.Interpolate between “stiff” and “flexible” S-N curves
4.Rainflow count the “weld top” stress history
5.Do damage calculation base on normal S-N approach with optional mean stress correction FKM
method and optional thickness (size effect) correction
Let us examine each of these steps in more detail.
Stress Calculation and Combination: The stress tensor histories for the “weld-top” and “weld-
bottom” surfaces are calculated in the usual way as for any standard analysis. The extracted stress are
un-averaged node-at-element stresses.
If Absolute Maximum Principal  stress is used, this is determined for the “weld top” surface in the
usual way from the in-plane principals:
The orientation p of the absolute maximum principal with respect to the element x-axis is
determined from:
The bottom surface stress is calculated by determining the direct stress in the same direction as the
top surface absolute maximum principal stress.
Note that the “weld-top” stress is the primary stress used for the fatigue calculation; the “weld-
bottom” surface stress is used only to determine the degree of bending.1,2xxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  2
xy2+  =
eq,topAMP1 if 12  otherwise  AMP2= = =
2ptan2xy
xxyy–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
eq,botxxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;pcosxypsin + + =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 858
Main Index
If the Critical Plane  method is being used, the “weld-top” and “weld-bottom” surface stresses are
both determined on a number of planes at 10-degree intervals:
p = 0, 10, 20 &amp;hellip;170 degreesxxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;cosxysin + + =&lt;/p&gt;
&lt;p&gt;859 APPENDIX
Glossary
Main Index
Determine the Degree of Bending : The stress in a shell can be partitioned into two components - a
bending stress b and a direct or normal stress n as shown below.
The instantaneous degree of bending at a given calculation point is defined by the bending or flex
ratio r, which always lies between 0 (no bending) and 1 (pure bending):
During the fatigue calculation, the minimum, maximum, average, and standard deviation of the
bending ratio is calculated over all points in the loading history.
The average bending ratio is the most important value for the fatigue calculation; it is a weighted
average calculated as follows:
Material Properties and Interpolation : The material data set required for a seam weld calculation
consists of basic material properties, and either one or two children S-N curves. If two curves are
present, one must represent “flexible” or bending loading conditions (r = 1) and the other “stiff” or
membrane loading conditions (r = 0).
The generic (parent) data is as follows:
a.Material type: Numeric code defining the type of material
b.UTS: Ultimate tensile strength
c.E: Modulus of elasticity
rb
nb+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
req,topeq,bot–
eq,topeq,bot+ eq,topeq,bot– +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
rreq,bot2
n
eq,bot2
n&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 860
Main Index
d.M1-M4: Mean stress sensitivity factors for FKM mean stress correction
e.Tref: Reference thickness/threshold for sheet thickness correction (RTHICK on MATFTG  entry)
f.n: Sheet thickness correction exponent (nTHICK on MATFTG  entry)
g.RR: R-ratio (ratio of minimum to maximum load) of the tests used to define the S-N curve
h.rth: Threshold value of the bending (r) ratio, used in interpolation between “stiff” and “flexible”
curves. Default of 0.5 is assumed. (BTHRESH on MATFTG  entry)
For each “stiff” and “flexible” S-N curves:
a.BendingRatio: Bending or flex ratio of the curve. If two curves are present, BendingRatios must
be 1 and 0 to identify “flex” and “stiff” curves.
b.SRI1: Stress range intercept
c.b1: First fatigue strength exponent
d.Nc1: Transition life
e.b2: Second fatigue strength exponent
f.SE: Standard error of log10(N) used to calculate the life adjusted to a certain probability of
failure/survival
g.NFc: Numerical fatigue cutoff life. Beyond this life, damage will be assumed to be zero.
The formulation of the curve is the same as for the Standard S-N curve formulation as shown below.
Note that in this particular dataset, b1 and b2 are set to be the same, and that the curve should not
be modified in the low-cycle regime to take into account the UTS. This can be ensured by the
DAMAGE flag CHECK to none (-1) on the FTGPARM  entry.
Some weld types may interpolate between the curves. First, an interpolation factor is determined
based on the mean bending ratio and the threshold bending ratio rth:&lt;/p&gt;
&lt;p&gt;861 APPENDIX
Glossary
Main Index
IF I = 0
ELSE IF&lt;br&gt;
The default value of rth is 0.5. Graphically this is like:
For values of the bending ratio up to the threshold, the “stiff” (r = 0) S-N curve will be used. Above
that value, interpolation will be made between the “stiff” (r = 0)and “flexible” (r=1) curves.
The interpolation scheme is used to determine an interpolated set of parameters (SRI1, b1, Nc1, b2,
SE), which will be used to predict fatigue damage as shown below.0rrth
rthr1 Irrth–
1rth–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 862
Main Index
This defines the stress level at 1 cycle.
This defines the stress level at Nc1int cycles. These two points define the first section of the curve up
to Nc1int cycles. The last section is defined by finding a third point as follows: A life value is defined,
being 10 x the greater of the Nc1 values for the stiff and flexible curves. From these, we can calculate
s2flexible  and s2stiff. From these, we can interpolate to get s2int which defines the high cycle part of
the curve.
Note that if only one S-N curve is present, it will be used directly without interpolation.
Thickness Correction : Optionally, a thickness (size effect correction) may be applied, based on the
thickness, t, of each element. This works as follows:
If t Tref (the reference thickness or threshold), there is no effect.
If t &amp;gt; Tref the fatigue strength is reduced at all lifetimes by a factor where n is the thickness exponent.
(The factor is used to increase the stress.)
Fatigue Calculation : Once any interpolation and/or thickness correction has been carried out, the
fatigue calculation proceeds as for a standard S-N calculation, based on the “weld-top” stress. If a
mean stress correction is to be applied, the FKM method is used. Multiaxial assessment may be
carried out using the Standard or Simple Biaxiality options. The Auto mode is not available. See
glossary terms Biaxial - Biaxiality Ratio  and Multiaxial .
Seeg er-Heuler
See glossary term Shape Factor .
Shape Facto r
This property is used by -N analysis only, and when defined, invokes the Seeger-Heuler plastic limit load
correction.
Simple notch rules such as the Neuber’s Rule  and Hoffman-Seeger  rules estimate the redistribution of stress
and strain around a notch with limited yielding, but with no reference to the geometry of the component. In
practice, particularly when a notch is shallow or the loading is high, plasticity may become more widespread,
and these simple notch rules may then significantly underestimate the plastic strains.
The Seeger-Heuler method provides a variation on the Neuber or Hoffmann-Seeger methods that increases
the amount of plasticity estimated when net section yielding is predicted, based on the Shape Factor. The
Shape Factor for any section is defined as the ratio of the plastic limit load to the yield load.
Simple notch rules such as the Neuber and Hoffmann-Seeger rules estimate the redistribution of stress and
strain around a notch with limited yielding, but with no reference to the geometry of the component. In SRI1intSRI1stiffSRI1flexibleSRI1stiff–  I + =
NC1int10Nc1stiff Nc1flexible log Nc1stiff log–  I + log =
s1ints1stiffs1flexibles1stiff–  I + =
s2ints2stiffs2flexibles2stiff–  I + =&lt;/p&gt;
&lt;p&gt;863 APPENDIX
Glossary
Main Index
practice, particularly when a notch is shallow or the loading is high, plasticity may become more widespread,
and these simple notch rules may then significantly underestimate the plastic strains.
The Seeger-Heuler method provides a variation on the Neuber or Hoffmann-Seeger methods that increases
the amount of plasticity estimated when net section yielding is predicted, based on a Shape Factor. If this
property is not defined there is no effect of shape factor considered.
The Shape Factor or limit load ratio for any cross-section is defined:
the ratio of the plastic limit load (load at which plasticity spreads across the section) to the yield load (load
at which yielding starts). This limit load ratio or shape factor or formzahl can be calculated for simple sections
assuming an idealized elastic-perfectly plastic stress-strain curve.
For example:
Suppose we now add a small notch to the surface of the bar with a stress concentration factor of 2.5, the yield
load will be reduced by a factor of 2.5, but if the notch is small the plastic limit load will be more or less
unaffected, so we might estimate a shape factor for the notched bar as 2.5 x 1.5 = 3.75
An un-notched bar in tension is a trivial case where .
From similar arguments, a plate with a small round hole in tension would have
With the Seeger Heuler plastic limit load correction method, the application of the notch rule is very similar
to that described for the Neuber method described earlier, the only difference being that the stress-strain
product is modified.
1.To determine the position of the largest hysteresis loop, we solvepLp
Ly&amp;mdash;&amp;mdash;=
p1–
p3.–&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 864
Main Index
for  and .
2.To determine the range of stress and strain associated with each subsequent excursion, we solve:&lt;/p&gt;
&lt;p&gt;for  and .
When the strain levels are low and/or the shape factor is large, the terms
become insignificant, and the solution converges with the Neuber method.
Since this approach could equally well be applied to the equivalent stress and strain, it is compatible with the
Hoffmann-Seeger method.
Spec tral Moments
Spectral moments are used to obtain other statistical properties of the PSD. The n-th spectral moment&lt;br&gt;
of a PSD is defined by
Spot  Welds (fatigue analysis of)
The user is referred to Spot Welds  (Ch. 10) for an example fatigue analysis of spot welds and details on the
modeling techniques. The method implemented in MSC Nastran for the fatigue analysis of spot welds is
based closely upon the work of Rupp, A., Störzel, K. and Grubisic, V. “Computer Aided Dimensioning of
Spot-Welded Automotive Structures.” SAE Technical Paper 950711, 1995.  Forces transmitted through the
elements representing the spot welds are used to calculate structural stresses in the weld nugget and adjoining
sheets at intervals around the perimeter of each weld. The stresses are then used to make life predictions using
the standard S-N (total life) method.
The structural stresses in the sheets are the radial stresses from the inner surfaces of the two sheets around the
perimeter of the weld nugget. The structural stresses in the nugget are determined from the principal stresses  Eepe
p&amp;mdash;&amp;mdash;Ee
pK&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1
n&amp;mdash;-
+
     
and  = 
E&amp;mdash;
K&amp;mdash;&amp;ndash;1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= 
 Eep2e
2p&amp;mdash;&amp;mdash;&amp;mdash;Ee
2pK&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
1
n&amp;mdash;-
+
     
and  =
2&amp;mdash;&amp;mdash;
2E&amp;mdash;&amp;mdash;-
2K&amp;mdash;&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/li&gt;
&lt;li&gt;=

Ee
2pK&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
1
n&amp;mdash;-
andEe
pK&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
1
n&amp;mdash;-
mn
mnS S
–
ffndf Þ =&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P45</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_045/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_045/</guid>
      <description>
        
        
        &lt;p&gt;865 APPENDIX
Glossary
Main Index
around the perimeter of the nugget at a section representing where the two sheets meet, based on the nominal
shear and direct stresses in the nugget at that point.
The structural stresses in the sheets are a function of the shear (FX, FY), axial (FZ),and bending moments
(MX, MY) transmitted by the structural element to the sheet, and varying with the angle . For example, for
sheet 1:&lt;/p&gt;
&lt;p&gt;where
(Contributions from the shear forces. Note that these are adjusted by an empirical factor, which adjusts the
contributions of the shear forces relative to those of the axial force and bending moments, and allows a size
effect in terms of weld diameter and sheet thickness to be taken into
account.)
(Contributions from the axial force; note that only the contribution from tensile loads is considered. Note
also the empirical factor in the same form as
sheet1maxFX1( )cos – maxFY1( )sin – FZ1( )maxMX1 ( ) + sinmaxMY1( )cos – + =
maxFX1( )FX1
ds1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;SFFXYdDEFXYs1TEFXY   =
maxFY1( )FY1
ds1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;SFFXYdDEFXYs1TEFXY   =
FZ1( )1.744FZ1
s12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;SFFZdDEFZ s1TEFZ     if F Z1 &amp;gt; 0 or 0 if FZ1 0 =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 866
Main Index
before.)
(Contribution from the bending moment, again including an empirical factor.)
A similar set of equations is used for the stresses in sheet 2.
The empirical factors are calculated from a set of nine material properties. See Table 2-3 and Table 2-4 for
typical values used for spot welds of steel and aluminum, respectively.
The stress around the periphery of the nugget at Point 3 is calculated as follows:
Shear stress:
Direct stress:
where
Then, from the shear and direct components of stress, we can calculate the Absolute Maximum Principal
stress in the nugget as follows:
Although most spot welds in a well-designed structure will not experience significant torsional loads under
normal conditions, occasionally, spot welds will fail early due to torsional fatigue. Torsional fatigue is modeled
separately as a distinct failure mode, determined by the circumferential shear stress in each sheet. This is
calculated as follows:
Note that this torsional calculation is optional and requires appropriate material properties and the
TORSION flag on the FTGPARM  entry to be activated.maxMX1 ( )1.872MX1
ds12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;SFMXYdDEMXYs1TEMXY   =
maxMY1( )1.872MY1
ds12&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-SFMXYdDEMXYs1TEMXY   =
maxFX3( )2sinmaxFY3( )2 cos + =
FZ3( )maxMX3 ( )sinmaxMY3( )cos – + =
maxFX3( )16FX3
3d2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; = maxFY3( )16FY3
3d2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; =
FZ3( )4FZ3
d2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  if F Z3 &amp;gt; 0 or 0 if FZ3 0 = maxMX3 ( )32MX3
d3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
maxMY3( )32MY3
d3&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =
AMP,nugget
2&amp;mdash;
4&amp;mdash;2
2+ if 0 + = AMP,nugget
2&amp;mdash;
4&amp;mdash;2
2+ if 0 – =
12MZ1
s1r2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =22MZ1
s2r2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;867 APPENDIX
Glossary
Main Index
Strain Combination
The combination method defines how a damage parameter for fatigue calculation will be extracted from the
strain tensor history. The options, based on the strain tensor ij and the principal strains 1,2,3, are as follows:
Absolute Maximum Principal : The Absolute Maximum Principal strain is defined as the principal
strain with the largest magnitude:
Signed von Mises : The Signed von Mises strain is the von Mises strain, but forced to take the sign
of the Absolute Maximum Principal strain, i.e.:
Signed Shear : The Signed Shear strain is the Maximum Shear strain (Tresca Criterion) forced to
take the sign of the Absolute Maximum Principal strain. A factor is applied to ensure that the
parameter has the same value as the Absolute Maximum Principal strain under uniaxial loading
conditions.
Critical Plane : The Critical Plane option is available only for stresses/strains flagged as 2-D. The
normal strain is calculated and rainflow counted on multiple planes. The critical plane is the plane
with the most predicted fatigue damage. The planes on which the normal strain is determined have
normals that lie in the plane of the physical surface, i.e., in the x-y plane of the 2-D stress or strain
results coordinate system. The orientation of each plane is defined by the angle  made with the
local x-axis.AMP3= if31 otherwiseAMP1=
SVMAMP
AMP&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-1
1ve+2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;12–223–231–2+ +   =
SShAMP
AMP&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-13–
1ve+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 868
Main Index&lt;/p&gt;
&lt;p&gt;The strain on each plane is calculated from
can take the values 0, 10, 20, 30, …170 degrees.
Strain Hardening
See glossary term Cyclic Hardening .
Strain-Life ( -N)
This is a fatigue life prediction method commonly referred to as “crack initiation,” or “local strain.” It only
concerns itself with the initiation of a crack. The method is called “strain-life” because it relates local strain
xxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; + 2xy2sin + cos =&lt;/p&gt;
&lt;p&gt;869 APPENDIX
Glossary
Main Index
to life. It is a fairly recent and well accepted method of fatigue life prediction brought about by the work of
many but principally the Americans, Manson and Coffin in the mid 1950s. This work would not have been
possible without the invention of the servo-hydraulic test machine. These machines allowed strains to be
precisely controlled as opposed to stresses which are near impossible to control. Because of this the scatter in
material data for the strain-life method is much less than that of the S-N method and a more accurate
prediction of fatigue life can be made.
The Coffin-Manson-Basquin formula defines the relationship between strain amplitude a and the number
of cycles to failure Nf:
(0-1)
Graphically, it looks like:
Fatigue damage is predicted in the same way as for the S-N method – the damage due to an individual cycle
is calculated by looking up the strain amplitude of that cycle on the curve to find the number of reversals to
failure 2Nf. The damage assigned to that cycle is then 1/Nf.
If the life Nf corresponding to a particular cycle is greater than the cutoff Nc, zero damage is predicted. Ne
is an endurance limit. The main application for this is in the consideration of surface finish.
The basic operation of a standard -N analysis can be summarized in the following diagram:f
E&amp;mdash;&amp;mdash;-2Nfbf2Nfc+ =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 870
Main Index
A typical -N analysis has the following basic steps, which are executed for each analysis entity (Node,
Element, Node-on-Element), shell surface and critical plane where appropriate.
1.The strain tensor history, as a function of time or data points, is assembled from the information
provided in the load provider. This applies to time-series, time step, constant amplitude, duty cycle
and hybrid load providers. In most cases, the strains are linear elastic strains at this point.
2.From the strain tensor (still elastic), extract a combined strain parameter (Abs Max Principal, Signed
von Mises, Signed Shear, Critical Plane, etc.).
3.Rainflow count the combined strain history to obtain a list of rainflow cycles, at the same time
estimating the total local strain (elastic-plastic) using a notch rule (e.g., Neuber’s rule) and tracking
the shape and position of each hysteresis loop. This procedure is called a tracking rainflow count. This
more complex rainflow procedure is necessary because the local strain approach requires that we know
the total (elastic-plastic) strain range for each cycle, and often we also require the mean or maximum
stress of each cycle too.
4.Calculate and accumulate damage from -N curve definitions, using linear damage accumulation
(Miner’s rule).
Strain S oftening
See glossary term Cyclic Softening .
Strain vs. Stress
See glossary term Stress vs. Strain .
Stress/Strain (from FEA)
Note that stresses and strains used in fatigue analysis from finite element models can be of three different
types.&lt;/p&gt;
&lt;p&gt;871 APPENDIX
Glossary
Main Index
Elemental  or Element Centroidal : the stresses (or strains) are calculated at the center of the element
and only one stress (or stress tensor) result exists per element. In fatigue analysis, only shell type
elements are appropriate for this type of stress. As cracks tend to initiate at the surface, it would be
inappropriate or inaccurate to use these types of stresses for solid elements.
Element Nodal  or Node on Element : these stresses occur at the nodes of each individual element.
This means that there are multiple stresses at any one node due to the contribution of each element.
Typically this results in a more conservative fatigue results since damage from the highest calculated
stress at a given node will be used in the analysis.
Nodal Averaged  or Grid Point Stresses : these are stresses that are averaged at the nodes due to all
the contributions from the associated elements. Since all contributions of stress from each associated
element are averaged to give only one stress (or stress tensor) per node, the resulting damage tends to
be less conservative than the element nodal approach. But the result may be more realistic since in
actuality only one stress state can exist at any node at any given point in time.
Stress Combination
For all cyclic loads in the time domain the fatigue analysis engine creates a stress tensor history, ij(t). In order
to make a fatigue calculation, we need to reduce this stress tensor to a scalar value, so that we can cycle count
it and compare the resulting cycles to an S-N curve or curves. This process is called stress combination. The
available options for combined stress damage parameters are:
Abs Max Principal
Signed von Mises
Signed Shear
Critical Plane
In general, a stress tensor has 9 components, but due to symmetry, this reduces to 6.
However, the majority of fatigue cracks initiate at free surfaces. At a free surface, we can assume that there is
no direct or shear stress applied to the surface. This means that if we choose an appropriate Cartesian
coordinate system - one where the z-axis is a surface normal - all stress components containing a “z” disappear
and we are left with a stress tensor with only 3 non-zero components.
See the glossary term on Surface Resolved Stresses  for details of surface resolution. If the stresses are resolved
to the plane of the surface, the zz, yz and zx stress components will be ignored (assumed to be zero). 2-D
stresses may be processed more quickly.ijxxxyzx
xyyyyz
zxyzzz
ijxxxy0
xyyy0
000&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 872
Main Index
Most of the combination methods require the determination of principal stresses. The principal stresses are
the eigenvalues of the stress tensor matrix.
In the case of 2-D stresses, the calculation of the 2 in-plane principal stresses reduces to the solution of a
quadratic:
The third principal in this case is the surface normal stress, which is always zero.
Whether the stress tensor is flagged as 2-D or 3-D, the result is three principal stresses 1,2,3 which are
ordered so that 1  2  3. These are useful for calculating the other combined stress options as follows.
Absolute Maximum Principal : The absolute maximum principal stress is defined as the principal
stress with the largest magnitude:
Signed von Mises: The signed von Mises stress is the von Mises stress, but forced to take the sign of
the Absolute Maximum Principal stress, i.e.,
Signed Shear : The Signed Shear stress is the Maximum Shear stress (Tresca Criterion), forced to
take the sign of the Absolute Maximum Principal stress. A factor of 2 is applied to ensure that the
parameter has the same value as the Absolute Maximum Principal stress under uniaxial loading
conditions.
Critical Plane : The critical plane option is available only for stresses flagged as 2-D. The normal
stress is calculated and rainflow counted on multiple planes. The critical plane is the plane with the
most predicted fatigue damage. The planes on which the normal stress is determined have normals
that lie in the plane of the physical surface, i.e., in the x-y plane of the 2-D stress results coordinate
system. The orientation of each plane is defined by the angle  made with the local x-axis.  See
glossary term Critical Plane Analysis .
The stress on each plane is calculated from:
can take the values 0, 10, 20, 30, …170 degrees.principalxxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  2
xy2+  =
AMP3= if31otherwiseAMP 1=
SVMAMP
AMP&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;12–223–231–2+ +
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-  =
SShAMP
AMP&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;13– =
xxyy+
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;xxyy–
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 2xy2sin + cos + =&lt;/p&gt;
&lt;p&gt;873 APPENDIX
Glossary
Main Index
Maximum Principal : Maximum principal is the maximum principal stress 1. It may be smaller in
magnitude than the minimum principal stress and should be used with caution. If the three
principal stresses are 1, 2,3 where 123, this is 1. Use with caution as this isn&amp;rsquo;t a
recommended damage parameter.
von Mises : This is the von Mises stress where 1, 2, 3 are the three principal stresses. It is always
positive (not signed by the absolute maximum principal stress) and should be used with caution.
Shear : The shear stress is the Maximum Shear stress (Tresca Criterion), i.e.,  sh =1-3 where&lt;br&gt;
1, 2,3 are the three principal stresses and 123. A factor of 2 is applied to be
consistent with the Signed Shear parameter. This is always positive and is not recommended as a
damage parameter.
Stress Concentration Factor, Kt
This is a factor which relates stress at one point in a structure to stress at another point. For example, the
stress concentration factor for a large plate with a hole is three (3). This relates the nominal stress (P/A) at an
area away from the hole to the stress at the radius of the hole. Concentration factors have come about due to
the fact that it is difficult to place a measurement device directly on the highest stressed area. Therefore some
factor had to be established to convert measured response to actual responses at critical locations. In FE
fatigue based analysis, Kt is generally taken as unity (1), since in this case we do know the stress at the critical
area. In fact we know the local stress at all locations.VM12–223–231–2+ +
2&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 874
Main Index
Stress Intensity
In simplistic terms, this is the driving force that causes a crack to propagate forward. It controls the stress
around a crack tip and is know as K (not to be confused with Kt or Kf, the stress and fatigue concentration
factors). When the magnitude of K reaches the fracture toughness of a material, failure occurs. K is a function
of the crack length, a, the nominal or far field stress away from the crack, and other geometric dimensions of
the component or structure and has units of stress-length1/2.
Stres s-Life (S -N)
This is a fatigue life prediction method commonly referred to as “total life” because it does not make a
distinction between initiating or propagating a crack but instead considers only the total life of the
component until failure into two or more pieces. The method is called “stress-life” because it relates nominal
or local stress to life. It was the first method of fatigue life prediction conceived by the German, August
Woehler in the late 1800’s due to his work in the railway industry. His famous rotating-bending tests gave
rise to the concept of the S-N curve. These curves are generally denoted in log units and some materials
exhibit a “fatigue limit,” a stress level below which no fatigue failures will occur.&lt;/p&gt;
&lt;p&gt;875 APPENDIX
Glossary
Main Index
The standard S-N curve consists of 3 linear segments on a log-log plot. The central section has the formula
where Nf is the number of cycles to failure.
NC1 defines the point on the curve where it transitions to the second slope b2. If b2 is set to zero, this acts
as a fatigue limit. &lt;br&gt;
At lives of less than 1000 cycles, the slope of the curve may be modified to take into account the limitation
in fatigue strength imposed by the static strength of the material, so that, at a life of 1 cycle, the maximum
stress is equal to the UTS.
The fatigue cutoff is a numerical limit, normally set at around 1E30 cycles. It has no physical interpretation.
The basic operation of the standard S-N analysis can be summarized in the following diagram.
 SRI1Nfb1=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 876
Main Index
Figure 0-1  Basic S-N analysis engine steps
A typical S-N analysis has the following basic steps, which are executed for each analysis entity (Node,
Element, Node-on-Element), shell surface and critical plane where appropriate.
1.The stress tensor history, as a function of time or data points, is assembled from the information
provided in the load provider. This applies to time-series, time step, constant amplitude and hybrid
load providers.
2.From the stress tensor, extract a combined stress parameter (Abs Max Principal, Signed von Mises,
Signed Shear or Critical Plane).
3.Rainflow count the combined stress history to obtain a list of rainflow cycles, each with a known range
and mean value.
4.Calculate and accumulate damage from S-N curve definitions.
Smith-Watson-Topper (STW) Me an Stress
This is a mechanism to correct for non-zero mean stress for the strain-life method. See glossary term Mean
Stress Correction .
Stress-S train Relationship
The local strain ( -N) approach requires that the cyclic stress-strain behavior be modelled. This requires that
we know the relationship between stress amplitude and strain amplitude (cyclic stress-strain curve), and how
to predict the shape of hysteresis loops. The uniaxial cyclic stress strain curve is modelled using a Ramberg-
Osgood relationship.
Masing’s hypothesis is used to predict the shape of each hysteresis loop by doubling the size of the cyclic stress-
strain curve.
aa
E&amp;mdash;&amp;mdash;a
K&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;877 APPENDIX
Glossary
Main Index
The relationship between the two curves is illustrated below.
If SEc &amp;gt; 0, then the design criterion (certainty of survival) will also adjust the stress strain behavior as follows,
based on the number of standard errors from the mean:
The effects of this adjustment can be counter-intuitive, particularly when the Smith-Watson-T opper method
is being used. It is probably best to leave SEc set to 0.
E&amp;mdash;&amp;mdash;-2
2K&amp;mdash;&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=

E&amp;mdash;&amp;mdash;-2
2K&amp;mdash;&amp;mdash;&amp;mdash;1
n&amp;mdash;-&lt;/li&gt;
&lt;li&gt;10zSEc – =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 878
Main Index
Stress vs. S train
Note that -N calculations may be based on linear stresses or linear strains from the finite element (FE)
analysis. If stresses ij are used, they have to be converted to linear strains ij at the beginning of the
calculation, using Hooke’s Law.
Where
G is the shear modulus and e is the elastic Poisson ratio.
Note that when 2-D linear strains are obtained from shell elements, the out-of-plane z-strains are frequently
not calculated by the FE code. However, it is not correct to assume that these are zero. In these circumstances
the out-of-plane strain is calculated from the in-plane strains and the Poisson ratio as follows:
Surface Fin ish/Treatment
Surface finish and treatment can have a significant effect on fatigue behavior. Rough surface finishes, e.g., due
to machining marks, will in general reduce the fatigue strength, whereas surface treatments are often applied
to increase the fatigue strength.
Surface finish and treatment effects are modelled in the S-N and -N analysis by means of a single surface
factor Ksur. This works in a different way from the Scale Factor and Offset  described above, with which it
should not be confused. The Surface Factor is used to adjust the material curve. The application is slightly
different for the S-N and -N methods, but the basic principal is the same – the surface factor is applied to
the fatigue strength of the material in the high cycle (long-life) regime, but the effect reduces in the low cycle
(short-life) regime.
Standard S-N curves are modified by changing the slope and intercept of the central portion of the
S-N curve so that the fatigue strength is reduced by a factor Ksur at life Nc1 (the transition life), but
remains the same for life 1000 cycles.
Bastenaire data is modified by multiplying the Bastenaire fatigue limit parameter EB by Ksur
resulting in shifting the curve.xxxx
E&amp;mdash;&amp;mdash;&amp;ndash;ve
E&amp;mdash;&amp;ndash;yyzz+  – =
yyyy
E&amp;mdash;&amp;mdash;&amp;ndash;ve
E&amp;mdash;&amp;ndash;zzxx+  – =
zzzz
E&amp;mdash;&amp;mdash;-ve
E&amp;mdash;&amp;ndash;xxyy+  – =
xyxy
2&amp;mdash;&amp;mdash;-xy
2G&amp;mdash;&amp;mdash;&amp;ndash; = = GE
21ve+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =
zzvexxyy+ –
1ve–&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- =&lt;/p&gt;
&lt;p&gt;879 APPENDIX
Glossary
Main Index
For all the other S-N options, that is multiple mean, multiple R-ratio, or Haigh curves, all the stress
values (Amplitude, Range or Max stress) are multiplied by a factor, say Ksur’ which is a function of
Ksur and the life value Nf corresponding to the stress value.
For Nf  1E3, Ksur’ = 1.0
For Nf  Ne, Ksur’ = Ksur
For 1E3 &amp;lt; Nf &amp;lt; Ne, Ksur’ is interpolated logarithmically as follows:
Ksur is the product of three factors, which can be defined via the material map. Each of these has default value
1.
Ksur = (KTreatment) x (KUser) x (KRoughness)
KTreatment  - A factor used to adjust the fatigue strength to take into account surface treatment. A
factor &amp;gt; 1 will result in an improvement in fatigue strength.
KUser  - A factor used to adjust the fatigue strength for any unspecified reason. A factor &amp;gt; 1 will
result in an improvement in fatigue strength.
KRoughness  - defined in three different ways, depending on the setting of the Surface Roughness
Type. The roughness factor normally provides an indication of the fatigue strength relative to a
polished surface condition, but in practice it is relative to whatever the surface condition of the
material was on the specimens used to derive the material properties.  The three methods for creating
a surface roughness factor (KRoughness) are:Ksur&amp;rsquo;=10Ksur3 Nf log– 3 Ne log–  log
Modifications of standard S-N curves to
take into account surface condition.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 880
Main Index
•Descriptive  - if one of the surface roughness descriptions is selected (Polished, Ground, Machined
etc.) the FKM method described above will be applied, using one of a number of pre-set values
for the surface roughness RZ. The values are given in the following table:
•Enter Roughness Factor  - if Surface Roughness Type = Enter Roughness Factor, the Surface
Roughness Factor KRoughness (KR) may be set directly, e.g., based on the user’s experience, or
on experimental evidence.
•Enter Surface Roughness  - if Surface Roughness Type = Enter Surface Roughness, the user should
enter a value for the Surface Roughness Rz in m. This is the average surface roughness according
the German standard DIN 4768. The Surface Roughness Factor KR will then be calculated, based
on the strength and type of material (for example, stronger materials are in general more sensitive
to surface finish, and cast materials less so). The method for calculating KR is taken from the FKM
Guideline “Analytical strength assessment of components in mechanical engineering”.
If Rz  1 m, KR = 1.
Otherwise:
KR = 1-aR.log(RZ).log(2Rm/Rm,N,min )
Rm is the UTS in MPa
Rm,N,min  and aR are constants.
Values of the constants are a function of the type of material and the UTS. They are defined in
the following table. In order for the calculation to work, the material type number must be
defined in the material data set, and must be one of the type numbers specified in the table.Table 0-3  Surface Roughness (RZ) Values Corresponding to Surface Finish Descriptors
Condition RZ (m)
Polished 0
Ground 12.5
Machined 100
Poor machined 200
As rolled 200
As cast 200&lt;/p&gt;
&lt;p&gt;881 APPENDIX
Glossary
Main Index
GS = cast steel and heat treatable cast steel, for general purposes
GG = cast iron with lamellar graphite (grey cast iron)
GGG = nodular cast iron
GT = malleable cast iron
In the case of the -N method, the effect of the surface condition is modelled by changing the slope of the
elastic part of the strain-life curve so that the fatigue strength at the endurance limit Ne is reduced by the
surface factor.
If the surface factor is denoted Ksur, the modified slope b’ is calculated from:
Note that if Ne is not defined, the fatigue cutoff Nc will be used instead.Table 0-4  Constants for Derivation of Surface Roughness Factor KR from Roughness Rz.
Material Steel GS GGG GT GGWrought Al
alloysCast Al
alloys
Material type
number
(CODE)13,14,16-
22-25,26-
999-12,15 5-8 2-4 1 100-105 106
aR .22 .20 .16 .12 .06 .22 .20
Rm,N,min /MPa 400 400 400 350 100 133 133
bbKsur log
Ne log&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; –=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 882
Main Index
Surface Resolved Stresses
Surface resolved stresses are the stress on the surface of a structure or component which is said to be in a state
of plane stress. The two principal stresses are in the plane of the surface while the third principal which is
normal to the surface is zero. Finite element shell element models produce surface resolved stresses by default.
However many solid element models produce stress results in elemental coordinate systems and need to be
transformed into surface resolved stresses. Surface resolved stresses are needed to correctly calculate biaxiality
ratios and perform multiaxial assessments.
Time History Compression
The time taken to run a fatigue analysis is a function of the number of entities (nodes and elements), load
cases (for superposition events), the type of analysis ( -N is somewhat slower than S-N) and for time-series
loadings, the number of data points in the time series. One way of reducing the time taken to run an analysis
is to reduce the number of data points to be processed. A means of doing this that applies to time-series only,
is peak-valley compression. In effect, this provides the option of reducing the number of points in the time-
series inputs before linear superposition.
Consider the simple example below. Peak valley extraction reduces the time history to seven turning points.
At the same time, the time history is rainflow cycle counted, and any cycles that have ranges less than a
specified Gate value are discarded (LOAD option). The Gate value can be expressed either as an absolute
value in the same units as the time history, or as a percentage of the maximum range of the time history.
For example, in the time history illustrated, we might use a gate value of 25%. First, the points labelled 1 to
7 are identified as turning points, and the rest are discarded. Rainflow Cycle Counting  this history identifies
3 cycles, formed by:
Points 1 and 4 – a range of 25 (in whatever units)
Points 2 and 3 – a range of 10
Points 5 and 6 – a range of 6
Because they are associated with a cycle that has a range of less than 25% of the maximum range, points 5
and 6 are also discarded.&lt;/p&gt;
&lt;p&gt;883 APPENDIX
Glossary
Main Index
Finally, the list of turning points processed looks like this.Note that the horizontal axis is now points and not
time:
When multiple channels are processed, it is important to maintain the synchronization between channels.
For this reason, when multiple channels are processed, after the peak-valley points to be retained in each
channel have been identified, the corresponding points in time from all other channels are also retained,
whether or not they are turning points. Fewer points will in general be discarded than would be the case for
a single channel.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 884
Main Index
Note that when setting the value of the cycle gate, there is a trade-off between the speed of processing and
accuracy. The bigger the gate value, the more potentially damaging cycles may be removed.
Note also that it is possible in certain circumstances that using this feature may eliminate the most damaging
loads from the loading history. For example, consider a simple example – a cantilever beam loaded in
combined tension-compression and bending, where the tension and bending have similar stress levels at the
root of the beam, with sinusoidal loading and a 90 degree phase difference. The result is illustrated in below.
This shows the contributions to the stress from bending and tension-compression, and the combined stress.
The black crosses indicate the data points that are retained by peak valley slicing, and the black line represents
the combined stress that will be calculated after peak valley slicing. In this case, the use of peak-valley slicing
will result in an attenuation of the peak stress of about 40%.
This example represents a worst case scenario. If loading histories are represented by out-of-phase sine waves
(which might be the case in simulating a rotating shaft, for example), it would be advisable not to use time
history compression. However, in the majority of cases with multiple load cases and variable amplitude
loadings, peak valley slicing provides a very useful way of reducing analysis times without great loss of
accuracy.
If in doubt, configure a second analysis run with no time-history compression, which re-analyzes the most
critical entities from the first run.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P46</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_046/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_046/</guid>
      <description>
        
        
        &lt;p&gt;885 APPENDIX
Glossary
Main Index
Using the FAST option gives a much greater degree of data reduction, rather like applying peak valley
extraction with a gate of 99.99%. Compression is applied, which retains the points corresponding to the
maximum and minimum values of each channel (time history), including the corresponding points from all
the other channels. It approximates the worst cycle, but discards many other damaging cycles. This method
is really only intended to be used as a way of identifying the most highly stressed regions of a structure for
more accurate analysis in a subsequent run.
When running a duty cycle, time compression operates on each event in the duty cycle independently.
Total Life
See glossary term Stress-Life (S-N) .
Transfer Function
A T ransfer Function is a way of relating one quantity to another. In the frequency domain the structure is
modeled by a linear Transfer Function relating input loads to output responses. The output from the model
is expressed as a PSD. In frequency response analysis these T ransfer Functions are determined by subjecting&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 886
Main Index
the model at the input load point to a series of sine waves with unit amplitude over the frequency range of
interest. Multiplying the input PSD of load by the T ransfer Function then gives the response PSD.
Unia xial
This is the stress state of a component or location in a component where only one principal stress exists, all
others being zero. The biaxiality ratio, ae, defined as the minimum in-plane stress divided by the maximum
in-plane stress (for surface stresses), is zero in this case. The principal stress is also stationary; that is, the
principal stress is always in the same direction and not rotating such as a rod in tension.
White Noise
White noise is a signal which contains frequency content from all frequencies and when converted to the
frequency domain, is a constant line. A sharp sudden impact is also a form of signal which contains content
at all frequencies.
Wide Ba nd
Wide band is a signal which contains frequency content at more than one frequency which when converted
to the frequency domain can appear as multiple spikes or as a broad curve spanning multiple frequencies.PSDinputTF PSDresponse=&lt;/p&gt;
&lt;p&gt;References
References&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 888
Main Index
1.“Steel, Concrete, and Composite Bridges, Part 10, Code of Practice for Fatigue,” British Standards
Institution, BS5400, ISBN 0-580-10567-9, 1980.
2.Peterson, R.E., “Stress Concentration Factors,” John Wiley &amp;amp; Sons, New York, 1974, ISBN 0-471-
68329-9.
3.Rooke and Cartwright, D. J., “A Compendium of Stress Intensity Factors,” HMSO, 1974.
4.Murakame, Y., (Editor-in-Chief), “Stress Intensity Factors Handbook,” Pergamon Press, 1987.
5.James, L. A. and Mills, W. J., “Eng. Fract. Mech.,” Volume 30, No.5, 1988, page 641.
6.Gray, T. J. F., Int. Jnl. Fract., Volume 13, No.1, 1977, page 65.
7.Newman, J. C. Jr. and Raju, I. S., ASTM STP 791, ASTM, 1983, page I-238.
8.Walker, E. F. and May, M. J., BISRA Open Report No. MG/E/307/67, 1967.
9.Lipson, C., and Juvinall, R. C., Handbook of Stress and Strength — Design and Material
Applications, Macmillan &amp;amp; Co., New York 1963.
10. Paris, P. C., Gomez, R. E., and Anderson, W. E., “The Trend in Engineering,” Vol. 13, No. 1, Jan
1961.
11. Forman, R. G., Kearney, V. E., and Engle, R. M., “Jnl. Basic Eng.,” Vol 89, 1967, p459.
12. Klesnil, M. and Lukas, P., Matl. Sci. Jnl., Vol 9, 1972, page 231.
13. Austen, I. M. and Walker, E. F., Proc. Int. Conf. “Steel in Marine Structures,” Delft, Netherlands,
June 1987, (Elsevier), page 859.
14. Austen, I. M. and Walker, E. F., Proc. Int. Conf. “Fatigue &amp;lsquo;87,” Charlottesville, VA., USA, (EMAS),
page 1155.
15. Austen, I. M. and Walker, E. F., Proc. Int. Conf. “Influence of Environment on Fatigue,” London,
UK, May 1977, (I. Mech. E.), page 1.
16. Austen, I. M., et al, “A Review of Fatigue Crack Growth Characterization by Linear Elastic Fracture
Mechanics (LEFM) Part 3 — Corrosion Fatigue,” (British Steel/The Welding Institute), 1989.
17. Austen, I. M. and Walker, E. F., Proc. Int. Conf. “Offshore Structures,” Cambridge, UK, Nov. 1978,
(DEn/CEC).
18. Webster, S. E., Austen, I. M., and Rudd, W. J., “Fatigue, Corrosion Fatigue, and Stress Corrosion of
Steels for Offshore Structures,” ECSC Contract 7210.KG/801, Final Report, (HMSO), April 1984.
19. Webster, S. E., Austen, I. M., and Rudd, W. J., “The Fatigue and Stress Corrosion Properties of
Conventional and Higher Strength Steels for Use in Offshore Environments,” ECSC Contract
7210.KG/802, Final Report, (HMSO), July 1988.
20. Austen, I.M., “Quantitative Understanding of Corrosion Fatigue Crack Growth Behaviour,” ECSC
Contract 7210.KE/806, Final Report, (HMSO), July 1982.
21. Austen, I. M., “Quantitative Assessment of Corrosion Fatigue Crack Growth Under Variable
Amplitude Loading,” ECSC Contract 7210.KE/810, Final Report, (HMSO), July 1987.
22. Garwood, S. J., and Boulton, C. F., “Cumulative Damage to Welded Steel Structures,” ECSC
Contract 6210.KD/8/801, Final Report, (HMSO), Sept. 1979.&lt;/p&gt;
&lt;p&gt;889 APPENDIX
References
Main Index
23. Willenborg, J. D., Engle, R. M., Wood, H. A., Air Force Flight Dynamics Laboratory, Report TM-
71-1-FBR, Wright-Patterson Airbase, USA, 1971.
24. Johnson, W. S., “Methods and Models for Predicting Fatigue Crack Growth Under Random
Loading,” ASTM STP 748, 1981, (ASTM), page 85.
25. Elber, W., “Fatigue Crack Growth Under Spectrum Loads,” ASTM STP 595, 1976, (ASTM), page
236.
26. Neuber, H. (1961) “Theory of stress concentration for shear strained prismatic bodies with arbitrary
nonlinear stress-strain law.” Journal of Applied Mechanics, Vol. 28, pp. 544-551.
27. Hoffmann, M. and Seeger, T. (1989) “Estimating multi-axial elastic-plastic notch stresses and strains
in combined loading.” Biaxial and Multi-axial Fatigue, EGF3. Edited by M. W. Brown and K. J.
Miller, MEP, pp. 3-24.
28. Hoffmann, M. and Seeger, T. (1989) “Stress-strain analysis and life predictions of a notched shaft
under multi-axial loading.” Multi-axial Fatigue, Analysis and Experiments, AE-14. Edited by G. E.
Leese and D. Socie, SAE Inc., pp. 81-96.
29. Klann, D. A., Tipton, S. M. and Cordes, T. S. (1993) “Notch stress and strain estimation considering
multi-axial constraint.” SAE Technical Paper 930401.
30. Dittmann, K. J. (1991) “Ein Beitrag zur Festigkeitsberechnung un Lebensdauer fur Bauteile das Stahl
unter mehrachsiger synchroner Beanspruchung.” PhD Dissertation, TU Berlin.
31. Seeger, T. and Beste, A. (1977) “Zur Weiterentwicklung von Nherungsformeln fur die Berechnung
von Kerbbeanspruchungen im elastisch-plastischen Bereich.” VDI-Fortschrittsberichte, Reihe 18,
Nr. 2, Dusseldorf.
32. Rupp, A., Störzel, K. and Grubisic, V.  “Computer Aided Dimensioning of Spot-Welded
Automotive Structures.” SAE Technical Paper 950711, 1995.
33. Smith, R. A.  and Cooper, J. F.  “Theoretical predictions of the fatigue life of shear spot welds.”&lt;br&gt;
Fatigue of Welded Structures, Ed. S. J. Maddox, pp. 287-293, The Welding Institute, 1988.
34. British Standards Institution.  Code of Practice for Fatigue Design and Assessment of Steel
Structures.  BS 7608, 1993.
35. Radaj, D.  “Local Fatigue Strength Characteristic Values for Spot Welded Joints.”  Engineering
Fracture Mechanics, Vol. 37, No. 1, pp. 245 - 250, 1990.
36. Sheppard, S. D. and Strange, M. E.  “Fatigue Life Estimation in Resistance Spot Welds: Initiation
and Early Growth Phase.”  Fatigue and Fracture of Engineering Materials and Structures, Vol. 15,
No. 6, pp. 531 - 549, 1992.
37. Sheppard, S. D.  “Estimation of Fatigue Propagation Life in Resistance Spot Welds.”  ASTM STP
1211, Advances in Fatigue Life Prediction Techniques, M. R. Mitchell and R. W. Landgraf, Eds.,
pp. 169 - 185, ASTM Philadelphia, 1993.
38. Heyes, P., Dakin, J. and StJohn, C.  “The Assessment and Use of Linear Static FE Stress Analyses for
Durability Calculations.”  SAE Technical Paper 951101, 1995.
39. A.K.Khosrovaneh and N.E.Dowling “Fatigue Loading History Reconstruction based on the
Rainflow Technique.” International Journal of Fatigue,Vol 12 no. 2  pp90-106&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 890
Main Index
40. J.Kowalewski “On the relationship between Component Life Under Irregularity Fluctuating and
Ordered Load Sequences.” Part 2, DVL Report 249
41. Thomson, W. T., &amp;ldquo;Theory of Vibration with Applications&amp;rdquo;, 2nd Edition, George Alle and  Unwin,
1981.
42. Newland, D. E., &amp;ldquo;An Introduction to Random Vibrations and Spectral Analysis&amp;rdquo;, 2nd Edition,
Longman, 1986.
43. Cooley, J. W., and J. W. Tukey, &amp;ldquo;An algorithm for the Machine Calculation of Complex Fourier
Series&amp;rdquo;, Math. Comput., 19 (April 1965): 297.
44. &amp;ldquo;Programs for Digital Signal Processing&amp;rdquo;, Published by IEEE, 1979.
45. Mròz Z., (1967), “On the Description of Anisotropic Work Hardening,” Journal of Mechanics and
Physics of Solids, vol. 15, pp. 163-175
46. Garud Y. S., (1981), “A New Approach to the Evaluation of Fatigue under Multiaxial Loading,”
Journal of Engineering Materials and Technology, vol. 103, pp. 118-125
47. Wang C. H. and Brown M. W., (1996), “Life Prediction Techniques for Variable Amplitude
Multiaxial Fatigue - Part 1: Theories,” Journal of Engineering Materials and Technology, vol. 118,
pp. 367-370
48. Wang C. H. and Brown M. W., (1996), “Life Prediction Techniques for Variable Amplitude
Multiaxial Fatigue - Part 2:  Comparison with Experimental Results,” Journal of Engineering
Materials and Technology, vol. 118, pp. 371-374
49. Heyes P. J., Milsted M. G. and Dakin J., (1996), “Multiaxial Fatigue Assessment of Automotive
Chassis Components on the basis of Finite-Element Models, Multiaxial Fatigue and Design,” ESIS
21 (Edited by A. Pineau, G. Cailletaud and T. C. Lindley) MEP London, pp. 461-475
50. Heyes P., Dakin J. and St.john C., (1995), “The Assessment and Use of Linear Static FE Stress
Analyses for Durability Calculations,” Proceedings of the Ninth International Conference on Vehicle
Structural Mechanics and CAE, pp. 189-199
51. Heyes P. and Fermér M., (1996), “A Program for the Fatigue Analysis of Automotive Spot-Welds
Based on Finite Element Calculations,” Proceedings of the Symposium on International Automotive
Technology, SAE Technical Paper 962507
52. Basquin O. H., (1910), “The Exponential Law of Endurance Tests,” Proceedings of the American
Society for Testing Materials, vol. 10, pp. 625-630
53. Manson S. S., (1953), “Behaviour of Materials under Conditions of Thermal Stress,” Heat Transfer
Symposium, University of Michigan Engineering Research Institute, pp. 9-75
54. Coffin L. F., (1954), “The Problem of Thermal Stress Fatigue in Austenitic Steels at Elevated
Temperatures,” ASTM STP No. 165, p.31
55. Coffin L. F., (1954), “A Study of the Effects of Cyclic Thermal Stresses on a Ductile Metal,” Trans.
American Society for Testing and Materials, vol. 76, pp. 931-950
56. Matsuishi M. and Endo T., (1968), “Fatigue of Metals Subjected to Varying Stress,” Presented to
Kyushu District Meeting, JSME.
57. Miner M. A., (1945), “Cumulative Damage in Fatigue, Journal of Applied Mechanics,” vol. 12, pp.
A159-A164&lt;/p&gt;
&lt;p&gt;891 APPENDIX
References
Main Index
58. HBM United Kingdom Limited (HBM), nCode 8 (including GlyphWorks , Automation Personal
Edition and DesignLife™ (2012), software manuals
59. Glinka G. and Buczynski A., (1997), “Elastic-Plastic Stress-Strain Analysis of Notches under Non-
Proportional Cyclic Loading Paths,” Proceedings of the 5th International Conference on
Biaxial/Multiaxial Fatigue and Fracture, Krakow, Poland
60. Chu C. C., (1989), “A Three-Dimensional Model of Anisotropic Hardening in Metals and its
Application to the Analysis of Sheet Metal Formability,” Journal of Mechanics and Physics of Solids,
vol. 22, no. 3, pp. 197-212
61. Armstrong P. J. and Frederic C. O., (1966), “A Mathematical Representation of the Multiaxial
Bauschinger Effect,” CEGB Report RD/B/M731, Berkeley Nuclear Laboratories
62. Wang C. H. and Brown M. W., (1993),  “Inelastic Deformation and Fatigue under Complex
Loading, Proceedings of the 12th International Conference on Structural Mechanics in Reactor
Technology,” vol. L,  pp. 159-170
63. Wang C. H. and Brown M. W., (1993), “A Path-Independent Parameter for Fatigue under
Proportional and Non-Proportional Loading, Fatigue and Fracture of Engineering Materials and
Structures,” vol. 16, pp. 1285-1298
64. Brown M. W., Suker D. K. and Wang C. H., (1996), “An Analysis of Mean Stress in Multiaxial
Random Fatigue,” Fatigue and Fracture of Engineering Materials and Structures, vol. 19, no. 2/3,
pp. 323-333
65. Bannantine J. A., (1989), “A Variable Amplitude Multiaxial Fatigue Life Prediction Method,” PhD
thesis, University of Illinois at Urbana-Champaign
66. Smith K. N., Watson P. and Topper T. H., (1970), “A Stress-Strain function for the Fatigue of
Metals,” Journal of Materials, vol. 5, no. 4, pp. 767-778
67. Fatemi A. and Socie D. F., (1988), “A Critical Plane Approach to Multiaxial Fatigue Damage
Including Out-of-Phase Loading,” Fatigue and Fracture of Engineering Materials and Structures,
vol. 11, no. 3, pp.149-165
68. Dreßler K., Köttgen V. B. and Kötzle H., (1995), “Tools for Fatigue Evaluation of Non-Proportional
Loading,” Proceedings of Fatigue Design 1995 (Edited by Gary Marquis and Jussi Solin), vol. 1, pp.
261-277
69. Andrzej Buczynski and Grzegorz Glinka (1997), &amp;ldquo;Elastic-Plastic Stress-Strain Analysis of Notches
under Non-Proportional Loading,&amp;rdquo; Proceedings of the 5th International Conference on
Biaxial/Multiaxial Fatigue and Fracture, Cracow, Poland, Sept. 97.
70. Diboine, A.  (1996)  Fatigue Assessment of Components under Complex Loadings, Multiaxial
Fatigue and Design , ESIS 21, Mechanical Engineering Publications, London, pp. 425-443.
71. McDiarmid, D.L.  (1991)  A General Criterion for High Cycle Multiaxial Fatigue Failure, Fatigue
and Fracture of Engineering Materials and Structures .  Vol. 14, No. 4, pp. 429-453.
72. McDiarmid, D.L.  (1994)  A Shear Stress based Critical-Plane Criterion of Multiaxial Fatigue Failure
for Design and Life Prediction, Fatigue and Fracture of Engineering Materials and Structures.  Vol.
17, No. 12, pp. 1475-1484.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 892
Main Index
73. Dang Van, K., Cailletaud, G., Flavenot, J.F., le Douaron, A., Lieurade, H.P.      (1989)  Criterion for
High Cycle Fatigue Failure Under Multiaxial Loading, Biaxial and Multiaxial Fatigue , EGF 3,
Mechanical Engineering Publications, London, pp. 459-478.
74. Dang Van, K., Griveau, B., Message, O.  (1989)  On a New Multiaxial Fatigue Limit Criterion:&lt;br&gt;
Theory and Application, Biaxial and Multiaxial Fatigue , EGF 3, Mechanical Engineering
Publications, London, pp. 479-496.
75. D.E.Newland, An introduction to random vibrations and spectral analysis (2nd edition), Longman
Inc., New York, (1984).
76. N W M Bishop, Dynamic fatigue response of deepwater offshore structures subjected to random
loading, Structural Engineering Review SER, 76/11, 63-78, (1991).
77. N W M Bishop and F Sherratt, Fatigue life prediction from power spectral density data. Part 1,
traditional approaches and Part 2, recent developments. Environmental Engineering, 2,(1989).
78. P.H.Wirsching and M.C.Light, Fatigue under wide band random loading, J Struct. Div., ASCE,
1593-1607,  (1980).
79. G.K.Chaudhury and W.D.Dover, Fatigue Analysis of Offshore Platforms Subject to Sea Wave
Loading, Int J Fatigue, 7, (1985).
80. J.C.P.Kam and W.D.Dover, Fast fatigue assessment procedure for offshore structures under random
stress history, Proc. Instn. Civ. Engrs., Part 2, 85, 689-700, (1988).
81. T.Dirlik, Application of computers in Fatigue Analysis, University of Warwick Thesis, (1985).
82. N.W.M.Bishop, The use of frequency domain parameters to predict structural fatigue, PhD thesis,
Warwick University, (1988).
83. I.Rychlik, A new definition of the rainflow cycle counting method, Int J Fatigue, 9, pp 119-121,
(1987).
84. N.W.M.Bishop and F.Sherratt, A theoretical solution for the estimation of rainflow ranges from
power spectral density data. Fat. Fract. Engng. Mater. Struct., 13, 311-326, (1990).
85. J.Kowalewski, On the relationship Between Component Life Under Irregularly Fluctuating and
Ordered Load sequences.  Part 2, DVL Report 249, (1963).
86. P Bonfield and MP Ansell, Fatigue testing of wood composites for aerogenerator rotor blades. Part
V. Life Prediction and Hysteresis.  Wind Energy Conversion, eds TD Davies et al. (1990)
87. N.W.M.Bishop and F.Sherratt, Signal processing for fatigue in both the time and frequency domains,
IMA Conference on Mathematics in the Automotive Industry, University of Warwick, 315-331,
(1989).
88. N W M Bishop, Z Hu, R Wang and D Quarton, Methods for the rapid evaluation of fatigue damage
on the Howden HWP330 wind turbine, British Wind Energy Conference, York, (1993).
89. N.W.M.Bishop , F Sherratt and Hu Zhihua,  The Analysis of Non-Gaussian Loadings from Wind
Turbine Blades Using Frequency Domain Techniques, British Wind Energy Conference 13,
Swansea, 317-321, (1991).
90. N.W.M.Bishop and Hu Zhihua, The Fatigue Analysis of Wind Turbine Blades Using Frequency
Domain Techniques, European Wind Energy Conference, EWEC &amp;lsquo;91, Amsterdam, 246-250,
(1991).&lt;/p&gt;
&lt;p&gt;893 APPENDIX
References
Main Index
91. K.A.Digre, L.K.Brasted and P.W.Marshall. The Design of The Bullwinkle Platform, Offshore
Technology Conference OTC # 6050, (1989).
92. D.I.Karsan. Design of Jackets in Deeper Gulf of Mexico Waters, Journal of Waterway, Port, Coastal
and Ocean Engineering, ASCE, 112, 427-446 (1986).
93. J.E.Dailey, D.I.Karsan and D.A.Kypke. Comparative Study of Offshore Structure Concepts For
Deepwater Applications, API North Pacific Section Meeting, Ventura, Calif,  1-19, (1979).
94. W.J. Pierson and L. Moskowitz. A Proposed Spectral Form For Fully Developed Wind Seas Based
on the Similarity Theory of S.A. Kitaigorodskii, Journal of Geophysical Research, 69, (1964).
95. K.S. Bathe and E.L. Wilson. Solution Methods for Eigenvalue Problems in Structural Mechanics,
Int. J. Numerical Methods in Engineering, 2, (1973).
96. J M Tunna.  Random load fatigue:  theory and experiment.  Proc Inst Mech Engrs 199(C3), pp249-
257,1985.
97. J M Tunna.  Fatigue life prediction for gaissian random loads at the design stage.  Fatigue Fact Engng
Mat Struct, 9(3), pp169-184, 1986.
98. Steinberg, D.S Vibration Analysis for Electronic Equipment.  John Wiley and Sons, New York,
p223, 2nd edition, 1988.
99. So Rice, Mathematical Analysis of Random Noise, in selected papers on noise and stochastic
processes, (N.Wax, ed) Dover, New York 1956.
100. Kreyszig E. &amp;ldquo;Advanced Engineering Mathematics. Seventh Edition.&amp;rdquo; John Wiley &amp;amp; Sons, inc.
101. Cooley, J.W and Tukey, J.W (1965). &amp;ldquo;An algorithm for the machine calculation of complex Fourier
series.&amp;rdquo; Math. Comp., 19, 297-301.
102. Priestley M.B (1981). &amp;ldquo;Spectral Analysis and Time Series.&amp;rdquo; Academic Press.
103. Spence P. &amp;ldquo;What is &amp;lsquo;Power Spectral Density&amp;rsquo;?&amp;rdquo; The Analyst.
104. ESDU 85020 (1993). &amp;ldquo;Characteristics of atmospheric turbulence near the ground. Part II: single
point data for strong winds (neutral atmosphere).&amp;rdquo; ESDU international plc. 27 Corsham Street,
London, N1 6UA, England.
105. Newland D.E. (1993) &amp;ldquo;An introduction to Random vibrations, Spectral &amp;amp; Wavelet Analysis, (Third
edition).&amp;rdquo; Longman Scientific &amp;amp; Technical.
106. Rupp, A., Störzel, K.and Grubisic, V. (1995). “Computer Aided Dimensioning of Spot-Welded
Automotive Structures”. SAE Technical Paper 950711.
107. Mikael Fermér, Magnus Andréasson and Björn Frodin. “Fatigue Life Prediction of MAG-Welded
Thin-Sheet Structures”, SAE Technical Paper 982311
Further Read ing
1.“Wohler’s Experiments on the ‘Fatigue of Metals,” Engineering Editorial, March 24th, 1871, p199
et seq.
2.Bannantine, Julie A., Comer, Jess J., and Handrock, James L., “Fundamentals of Metal Fatigue
Analysis,” Prentice Hall, ISBN 0-13-340191-X, 1990.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide 894
Main Index
3.Fuchs, H.O., and Stephens, R.I., “Metal Fatigue in Engineering,” John Wiley &amp;amp; Sons, ISBN 0-471-
052647, 1980.
4.Collins, J. A., “Failure of Materials in Mechanical Design — Analysis, Prediction, Prevention,” John
Wiley &amp;amp; Sons, ISBN 0-471-05024-5, 1981.
5.“Fatigue Under Complex Loading — Analysis and Experiments,” Society of Automotive
Engineering, SAE AE-6, 1974.
6.Hertzberg, R. W., and Manson, J. A., “Fatigue of Engineering Plastics,” Academic Press, ISBN 0-12-
343550-1, 1980.
7.“Multi-axial Fatigue — Analysis and Experiments,” Society of Automotive Engineering, SAE AE-14,
ISBN 0-89883-780-4, 1989.
8.Pickard, A. C., “The Application of 3-Dimensional Finite Element Methods to Fracture Mechanics
and Fatigue Life Prediction,” EMAS, ISBN 0-947817-22-0, 1986.&lt;/p&gt;
&lt;p&gt;MSC.Fatigue Quick Start Guide
Index
MSC Nastran Embedded Fatigue User’s Guide&lt;br&gt;
Main Index
Numerics
2-pass analysis , 71
A
addition , 428, 491
amplitude , 89, 808
amplitude distribution analysis , 503
analysis units , 82, 136, 161
arithmetic commands , 459
arithmetic manipulation (MART) , 427
ASCII to Binary convertor (MATD) , 764
August Woehler , 808
auto spectral density , 330, 504
averaging methods , 510
B
band filters , 520, 526
bar elements , 242
Bastenaire , 26, 809
batch mode
PFMAT , 369
PTIME , 394
Baushinger effect , 834
beta-solution , 809
biaxiality ratio , 643, 810
Binary to ASCII convertor (MDTA) , 763
block loading, 146
broad band , 810
buffer overlap , 511
buffer size , 512bulk data , 10, 136
DCONSTR , 230
DESGLB,DESGLB , 225
DESSUB,DESSUB , 225
DOPTPRM , 232, 234
DRESP1 , 10, 63
DSCREEN , 230
DSCREEN,DSCREEN , 234
DTI UNITS , 10, 32, 62
FTGDEF , 10, 20
FTGEVNT , 10, 54
FTGLOAD , 10, 56
FTGPARM , 40
FTGSEQ , 10, 51
MATFTG , 10, 26
PFTG, 10, 36
TABLED1 , 56, 86, 162, 181, 205
TABLEM1 , 29, 82
TABLFTG , 10, 59
UDNAME , 10, 62
Butterworth filtration (MBFL) , 524
C
case control , 10, 79, 116, 134, 160, 227
CBAR, 242
certainty of survival , 144
channel , 176
CHEXA , 243
command syntax , 450
command templates , 474
compliance , 809, 812
component S-N curve , 81, 82, 813
concatenation , 485
condition , 176
constant amplitude loading, 146
constraints , 225, 230
crack growth , 7, 8, 813
crack growth data analysis , 695
crack growth rate , 820Index&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
896
Main Index
crack initiation , 2, 8, 813
crack initiation analysis, 132
create
material , 355
material database , 359
time history , 388
waves , 402
critical plane analysis , 48, 653, 814
cross platform compatibility , 798
cross plots , 719
curves
material , 365
CWELD , 243
cycle counting , 40, 85, 114, 148, 814
cycle file lister (MCYL) , 598
cycles and damage analysis (MCDA) , 592
cyclic hardening , 132, 137, 819
cyclic loading , 56, 59, 85, 117, 144, 228
cyclic loading, multiple loads, events, load events , 162
cyclic material properties , 3, 818
cyclic plasticity , 652
cyclic plasticity modeling , 654
cyclic softening , 132, 137, 819
cyclic stress-strain , 26
cyclic stress-strain curve , 136
D
da/dN curve , 820
DAC files , 62
DAC to RPC file conversion , 788
damage , 821
damage calculation, multiaxial , 657
damage response , 63
damage summation , 114, 120, 821
damage tolerant , 6, 821
database
materials , 340
validate, time history , 424
DCONSTR , 230
delete
materials , 361
time history , 423
delta rosette , 628, 629
derived material properties , 82derived materials , 840
design constraints , 225, 230
design model , 229
design objective , 227, 235
design optimization , 224
design philosophies , 5
design responses , 230
design variables , 229
DESOBJ, 227, 230
deterministic , 821
division , 428, 491
DOPTPRM , 232, 234
DRESP1 , 10, 63, 230
DSCREEN , 230
DTI UNITS , 10, 32, 62
durability , 822
duty cycle , 174, 822
duty cycle,events,load event , 176
E
edit
material , 350
time history , 400, 411
elastic , 825
elastic line , 367
elastic to elastic plastic conversion , 644
elastic to elastic-plastic conversion , 633
elastic-plastic correction , 148, 825
elastic-plastic lines , 367
elastic-plastic to elastic conversion , 633, 648
elastic-plastic to elastic-plastic conversion , 634, 648
elements
bars, 242
solids, 243
welds, 243
e-N analysis , 132
e-N curve , 26
Endo, 119
endurance limit , 26, 150, 830
ensemble averaging , 506
environment
MSC.Fatigue , 334
equivalent units , 51, 56, 87
errors , 466&lt;/p&gt;
&lt;p&gt;897 INDEX
Main Index
estimating material properties , 355
event processing , 830
events , 54
examples
formula processor (MFRM) , 474
EXCEL , 602
extra details (footer) , 557
extracting files , 480, 482
F
factor of safety analysis , 40, 65, 125, 159
fail safe , 6, 830
failure criterion , 132, 830
fast analysis , 121
fast Fourier filtering , 517
fast fourier transform , 504
Fatemi-Socie, 26
Fatemi-Socie Parameter , 680
fatigue , 830
FATIGUE case control , 10
fatigue concentration factor , 830
fatigue cutoff , 26
fatigue ductility exponent/coefficient , 26
fatigue event , 54
fatigue limit , 367, 831
fatigue loading , 56
fatigue parameters , 83, 143, 161, 228
fatigue properties , 36
fatigue response , 63
fatigue strenght reduction factor , 36
fatigue strength exponent/coefficient , 26
fatigue strength reduction , 705
fatigue units , 51, 56, 87, 391, 840
file
extract time history , 400
insert time history , 400
file conversion , 763, 788, 798, 802
file dump , 553
files
multichannel , 175, 182
rsp, 175, 182
filter type , 520
filter types , 526
finite element methods , 4
FKM mean stress , 49FKM mean stress correction , 848
formula processor (MFRM) , 448
Fourier analysis, 831
fracture , 831
fracture mechanics , 7
fracture mechanics triangle , 831
frequency domain , 832
frequency response analysis (MFRA) , 530
FTGDEF , 10, 20
FTGEVNT , 10, 54
FTGLOAD , 10, 56
FTGPARM , 10, 40
FTGSEQ , 10, 51
G
Garud , 654
gauge Poison’s ratio , 637
Gaussian, 832
generate material properties , 355
geometry , 621
geometry information , 3
Gerber mean stress , 49, 122, 832
Gerber mean stress correction , 845
global constraints , 225
Goodman mean stress , 49, 122, 832
Goodman mean stress correction , 843
graphics
create time history , 398
material data, 365
grid point stresses , 84, 306
H
Haigh , 30, 49, 89, 94, 833
header and footer manipulation (MFILMNP) , 552
high cycle fatigue , 149, 833
high pass filter , 520, 526
Hoffmann-Seeger , 827
Hoffman-Seeger notch correction , 833
hypertext , 808
hysteresis , 834
I
interpolation , 834
inverse Fourier transform , 834&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
898
Main Index
irregularity factor, 839
irregularity factor reconstruction , 783
item codes , 65
K
keywords , 338
Kf, 36
k-solution , 809, 840
Kt evaluation (MKTAN) , 705
Kt library, 711
L
life, 840
life prediction methods , 4
life response , 63
linear elastic fracture mechanics , 840
linear superposition , 163
Linux based plotting utility (MQPLOT) , 733
list a file , 599
list cycles matrix , 601
load condition , 176
load sequence , 176
loading
constant amplitude , 146
loading information , 3
load-strain relation , 7
local strain , 2
local strain analysis , 132
local strain method , 840
logarithmic functions , 429
lookup files , 709
lookup table functions , 463
low cycle fatigue , 149, 840
low pass filter , 520, 526
M
Markov transition matrix reconstruction , 782
MART , 427
batch operation , 432
module operation , 427
Masing’s hypothesis , 149
MATD , 763material
database manager , 340
listing, 374
material cut-off , 840
material generation , 840
material information , 3
material properties , 26
derived , 82
material scatter , 123
material S-N curve , 79, 81, 842
material tests , 139
materials
crack growth data , 354, 358
crack initiation data , 353, 357
data values , 344
estimate , 355
full listing , 341
generic data , 353, 357
search and list , 342
surface values , 344, 347
total life data , 354, 358
MATFTG , 10, 26
Matsuishi , 119
maximum shear strain , 630
maximum shear stress , 630
MBFL , 524
module operation , 524, 528
MCDA , 592
batch operation , 596
module operation , 592
MCLF , 574
batch operation , 588
keywords , 584, 587
module operation , 574
MCOE , 434
module operation , 434
preferences , 442
MCONFIL , 798
batch operation , 800
module operation , 795, 798
MCYL , 598
batch operation , 602
module operation , 598&lt;/p&gt;
&lt;p&gt;899 INDEX
Main Index
MDACREM , 788
batch operation , 793
module operation , 789
MDTA , 763
batch operation , 767
module operation , 765, 767
mean stress , 26, 149, 842
mean stress correction , 40, 49, 85, 89, 114, 122, 144,
843
MENM , 334
MFCG , 695
batch operation , 704
module operation , 699
MFFF, 517
batch operation , 522
module operation , 519
MFILMNP , 552
batch operation , 562
module operation , 554
MFLF
batch operation , 625
postprocessing , 623
MFRA , 530
batch operation , 473, 540
command templates , 474
module operation , 531
MFRM , 448
module operation , 470
Miner’s constant , 120, 851
Miner’s Rule , 677
Miner’s rule , 821
Miner’s summation constant , 675
MKTAN
batch operation , 714
graphical mode operation , 713
module operation , 705
MLEN , 480
batch operation , 486
module operation , 480
MMFM , 488
batch operation , 493
keywords , 493
module operation , 490MMLF
batch operation , 692
module operation , 666
modal analysis , 194
model units , 82, 136, 161
modify
time history , 410
monotonic material properties , 3, 851
Morrow , 849
Morrow mean stress , 49, 149, 851
MPLTSYS , 745
module operation , 748
MPOD
batch operation , 730
keywords , 730
polar plot manipulation , 726
MQPLOT , 733
batch operation , 736
module operation , 733
MREGEN , 780, 795
batch operation , 787
module operation , 783
MREMDAC , 788
batch operation , 793
module operation , 789
Mroz, 654
MRSTATS , 542
batch operation , 550
module operation , 543
MSLF , 565
batch operation , 570
module operation , 566
MSSA
batch operation , 648
graphical operation , 638
module operation , 634
strain gauge rosette analysis , 635
MTCD , 604
batch operation , 608
module operation , 605
multiaxial fatigue analysis , 332, 651
multiaxial loading , 294&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
900
Main Index
multiaxial methods
Fatemi-Socie , 659, 676
Normal Strain , 658, 675
Shear Strain , 659, 676
STW-Bannantine , 659
SWT-Bannantine , 676
Wang-Brown , 663, 676
multiaxial stress state , 852
multichannel creator/editor -MCOE, 434
multiple file manipulation (MMFM) , 488
multiple loads , 158, 174, 194
multiplication , 428, 491
MWFLCRE , 802
N
narrow band signal , 852
Neuber , 825
Neuber notch correction , 852
Neuber’s rule , 148
nodal averaged stresses , 84
nodal stress averaging , 42, 44, 83
noise floor , 512
non-proportional loading , 295, 852
normalization , 512
notch correction , 7, 37, 40, 151, 852
O
offset, 852, 856
offsets , 56, 86, 117
optimization , 224
optimization parameters , 234
output requests , 14
overlay plots , 719
P
Palmgren-Miner damage summation law, 121
Palmgren-Miner rule , 120
Paris equation , 853
PDF (probablility density function) , 119
peak-valley extraction , 40, 121, 184, 853
performance , 71PFMAT
create material , 355
delete , 362
edit material, 350
graphical display , 365
graphical options , 366
load material , 348
material listing , 374
menu options , 341
menu structure , 341
merge entries , 360
new database , 360
preferences , 368
unload material , 350
weld classifier , 363
PFTG, 10, 36
planar tee rosette , 631
plastic limit load correction , 862
plastic load limit correction , 853
plasticity , 89, 132, 853
plasticity correction , 40
plots
material , 365
plotting utilities , 733
poisson’s ratio , 670
polar plots , 689
power spectral density (PSD) , 853
preferences
material checking , 368
material database , 368
material units , 368
multiaxial , 690
S-N axis, 368
principal stresses , 629
printer/plotter definitions (MPLTSYS) , 745
probabalistic nature of fatigue , 144
probabilistic nature of fatigue , 123
probability density function , 616
probability density function (PDF) , 854
probablistic , 854
program environment , 334&lt;/p&gt;
&lt;p&gt;901 INDEX
Main Index
programs
MART , 427
MASD , 504
MATD , 763
MBFL, 524
MCDA , 592
MCLF, 574
MCOE , 434
MCONFIL , 798
MCYL, 598
MDACREM , 788
MDTA , 763
MENM , 334
MFCG , 695
MFFF, 517
MFILMNP , 552
MFRA , 530
MFRM , 448
MLEN , 480
MMFM , 488
MPLTSYS , 745
MQPLOT , 733
MREGEN , 780, 795
MREMDAC , 788
MRSTATS , 542
MSLF, 565
MTCD , 604
MWFLCRE , 802
proportional loading , 295, 854
PSDF from time history , 504
PSDFs from Time Histories , 410PTIME
ASCII convert and load , 392
block program , 406
copy from central database , 395
copy from remote database , 396
delete option , 423
duplicate , 405
edit details , 412
edit x-y points, 413
graphical create , 398
graphical edit , 411
graphics options , 422
list entries , 417
load files , 389
look-up transform , 414
modify a time history , 410
options , 388
polynomial transform , 413
rainflow matrix , 407
sample rate adjust , 416
search and list , 418
time history , 420
units conversion , 415
waveform creation , 402
white noise , 407
x-y points , 396
x-y PSDF points , 397
R
rainflow , 40, 121, 184, 615
rainflow cycle counting , 114, 118, 148, 854
multiaxial , 656
rainflow extraction method , 496
rainflow matrix , 407
rainflow reconstruction , 781
random vibration , 855
range , 89, 855
range extraction method , 495
reading , 893
rectangular rosette , 628, 629
reference location , 82, 855
references , 888, 893
regenerate
time history
from PSD, 795&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
902
Main Index
regression analysis , 85, 144, 856
residual stress , 856
response , 63
responses , 230
responses,damage , 231
responses,life , 231
responses,safety factor , 231
restarts , 315
results , 87, 118, 147, 184, 231
multiaxial , 685, 687
reverse file , 486
root mean square (rms) , 856
rosette
construction , 670
definition , 669
types, 669
rosette configuration , 636
RPC to DAC file conversion , 788
RPC3 files , 175, 182
r-ratio , 26, 49, 85, 92, 854
rsp files , 175, 182
S
safe life , 5, 856
safety factor , 40, 65, 125, 159
sample rate , 393, 416, 856, 862
save
preference settings , 369
scale factor , 65, 125, 159, 856
scale factors , 40, 56, 86, 117
scatter , 367
seam welds , 266, 857
Seeger-Heuler , 862
sequence , 176
sequence effects , 604
shot peening , 151
similitude , 81, 142
sine waves
create , 402
summation, 404
Smith Watson Topper mean stress , 49
Smith-Watson Topper, 850
smoothing , 486
S-N analysis , 114, 158, 194, 224S-N curve , 26, 874
constant life , 94
constant mean , 90
constant r-ratio , 92
S-N method , 2
solid elements , 243
spectral moments , 864
spot welds , 240, 864
stacked rectangular rosette , 631
stacked tee rosette , 630
standard error , 123
standard error of log(e) , 26
static offsets , 56
statistical analysis , 542
strain, 151
strain combination , 867
strain gauge rosette analysis , 635
strain gauge rosettes , 627
strain hardening , 137, 868
strain softening , 137, 870
strain vs. stress , 870, 878
strain-life , 2, 26
strain-life analysis , 132
strain-life curve , 140, 868
strain-life relation , 7
stress averaging , 42, 44, 83
stress combination , 83, 144, 871
stress concentration , 3, 705, 830, 873
stress intensity, 874
stress range , 855
stress range intercept , 26
stress vs. strain , 151, 870, 878
stress/strain combination , 40, 48
stress-life , 2, 26
stress-life analysis , 114, 158, 194, 224
stress-life curve , 874
stress-life vs. strain-life , 142
stress-strain relationship, 876
stress-strain tracking , 149, 675
STW mean stress, 876
subtraction , 428, 491
superelements , 319
superposition of loads , 163
surface conditions , 150&lt;/p&gt;
&lt;p&gt;903 INDEX
Main Index
surface finish , 618, 679
surface finish/treatment , 36, 150, 878
surface resolved stress, 882
surface resolved stresses , 291, 305
surface treatment , 618, 680
T
TABLED1 , 56, 86, 162, 181, 205
TABLEM1 , 29, 82
TABLFTG , 10, 59
tee rosette , 629
time correlated damage analysis (MTCD) , 604
time history
add, 388
from PSD , 795
import ASCII file , 392
load type , 391
lookup transform , 414
scale, 413
search and list , 418
units, 391
time history compression , 40, 121, 184, 882
top stress (TOPSTR) , 71
total life , 2, 7, 885
total life analysis , 114, 158, 194, 224
transfer function , 885
transfer function analysis (MFRA) , 533
transient modal analysis , 194
transverse sensitivity , 628, 636, 670
trigonometric functions , 428, 462
two-pass analysis , 71
U
UDNAME , 10, 62
uniaxial loading , 295
uniaxial stress , 886
unit conversion, 32
units, 82, 136, 161
time history , 415
using strains , 151
utilities
advanced loading manipulation , 388
material database , 340
UTS(Ultimate Tensile Strength) , 26V
vibration fatigue
analysis methods , 624
vibration fatigue analysis , 611
W
Wang Brown , 26
waterfall analysis , 509
waterfall parameters , 514
waterfall plot , 506
waterfall plots , 802
waterfall slice, 613
weld classifier , 363
weld elements , 243
welds , 240, 266, 857, 864
white noise , 407, 886
wide band , 886
window functions , 505
window size , 546
window type , 537, 545
window types , 511
windows based plotting (WNPLOT) , 737
Y
YS(Yield Strength) , 26&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
904
Main Index&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P5</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_005/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_005/</guid>
      <description>
        
        
        &lt;p&gt;65 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.Element Group A consists of elements: CHEXA, CPENTA,  CPYRAM,  CTETRA, CTRIA3,
CSHEAR
2.Element Group B consists of elements: CQUAD4, CQUAD8, CQUADR, CTRIA6, CTRIAR
3.For CTRIA3 and CSHEAR elements, LOC=ELEM and LOC=NODE or NODA options on
FTGPARM  use the same item codes in Table 2-11.
4.For Element Group B (shell elements), if the item code is negative (e.g., -4) for layer Z1, this flags
Nastran to automatically (and internally) create a DRESP1 with the corresponding item code for
layer Z2. This is a convenient method to include responses from both top and bottom by defining
only a single DRESP1 entry for any particular set of elements or property sets.Table 2-11  Standard S-N and -N Fatigue Ite m Codes for LOC=ELEM  on FTGPARM
Element Name Real Element Data Item Item Code
Element Group A and
Element Group B
(for Z1 layer - bottom)4
(-4)Fatigue life in Repeats  of the loading sequence
See remark 4.
5 (-5) Log of fatigue life in Repeats  of the loading sequence
6 (-6) Fatigue life in user defined fatigue equivalent units
7 (-7) Log of fatigue life in user defined fatigue equivalent units
8 (-8) Fatigue damage
9 (-9) Log of fatigue damage
12 (-12) Scale factor from Factor of Safety analysis
Element Group B
(for Z2 layer - top)18 Fatigue life in Repeats  of the loading sequence
19 Log of fatigue life in Repeats  of the loading sequence
20 Fatigue life in user defined fatigue equivalent units
21 Log of fatigue life in user defined fatigue equivalent units
22 Fatigue damage
23 Log of fatigue damage
26 Scale factor from Factor of Safety analysis&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Optimization66
Main Index
Table 2-12  Standard S-N and -N Fatigue Item Codes for LOC=NODE  or NODA o n FTGPARM
Element Name Item Codes Real Element Data Item
CTETRA 4,16,28,40 Life in Repeats  of the loading sequence
5,17,29,41 Log of life in Repeats  of the loading sequence
6,18,30,42 Life in user defined fatigue equivalent units
7,19,31,43 Log of life in user defined equivalent units
8,20,32,44 Fatigue damage
9,21,33,45 Log of fatigue damage
12,24,36,48 Scale factor from Factor of Safety analysis
CQUAD4
CQUAD8
CQUADR
(for Z1 layer - bottom)4,33,62,91
(-4,-33,-62,-91)Life in Repeats  of the loading sequence
See remark 8.
5,34,63,92
(-5,-34,-63,-92)Log of life in Repeats  of the loading sequence
6,35,64,93
(-6,-35,-64,-93)Life in user defined fatigue equivalent units
7, 36, 65, 94
(-7,-36,-65, -94)Log of life in user defined equivalent units
8, 37, 66, 95
(-8,-37,-66,-95)Fatigue damage
9, 38, 67, 96
(-9,-38,-67-96)Log of fatigue damage
12, 41, 70, 99
(-12,-41,-70,-99)Scale factor from Factor of Safety analysis
(for Z2 layer - top) 18, 47, 76, 105 Life in Repeats  of the loading sequence
19, 48, 77, 106 Log of life in Repeats  of the loading sequence
20, 49, 78, 107 Life in user defined fatigue equivalent units
21, 50, 79, 108 Log of life in user defined equivalent units
22, 51, 80, 109 Fatigue damage
23, 52, 81, 110 Log of fatigue damage
26, 55, 84, 113 Scale factor from Factor of Safety analysis&lt;/p&gt;
&lt;p&gt;67 CHAPTER 2
Introduction to User Interface
Main Index
CTRIA6
CTRIAR
(for Z1 layer - bottom)4, 33, 62
(-4, -33, -62)Life in Repeats  of the loading sequence
See remark 8.
5, 34, 63
(-5, -34, -63)Log of life in Repeats  of the loading sequence
6, 35, 64
(-6, - 35, -64)Life in user defined fatigue equivalent units
7, 36, 6
(-7, -36, -6)Log of life in user defined equivalent units
8, 37, 66
(-8, -37, -66)Fatigue damage
9, 38, 67
(-9, -38, -67)Log of fatigue damage
12, 41, 70
(-12, -41, -70)Scale factor from Factor of Safety analysis
(for Z2 layer - top) 18, 47, 76 Life in Repeats  of the loading sequence
19, 48, 77 Log of life in Repeats  of the loading sequence
20, 50, 79 Life in user defined fatigue equivalent units
22, 51, 80 Log of life in user defined equivalent units
23, 52, 81 Fatigue damage
26, 55, 84 Log of fatigue damage
Scale factor from Factor of Safety analysis
CPENTA 4,16,28,40,52,64 Life in Repeats  of the loading sequence
5,17,29,41,53,65 Log of life in Repeats  of the loading sequence
6,18,30,42,54,66 Life in user defined fatigue equivalent units
7,19,31,43,55,67 Log of life in user defined equivalent units
8,20,32,44,56,68 Fatigue damage
9,21,33,45,57,69 Log of fatigue damage
12,24,36,48,60,72 Scale factor from Factor of Safety analysisTable 2-12  Standard S-N and -N Fatigue Item Codes for LOC=NODE  or NODA o n FTGPARM
Element Name Item Codes Real Element Data Item&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Optimization68
Main Index
Remarks:
1.CQUAD4, CQUAD8, CQUADR, CTETRA item codes are listed for Grids 1-4, respectively.
2.CTRIA6 and CTRIAR item codes are listed for Grids 1-3, respectively.
3.CPYRAM item codes are listed for Grids 1-5, respectively
4.CPENTA item codes are listed for Grids 1-6, respectively.
5.CHEXA item codes are listed for Grids 1-8, respectively.
6.For CTRIA3 and CSHEAR elements, LOC=ELEM and LOC=NODE or NODA options on
FTGPARM  use the same item codes in Table 2-11.
7.If it is desired to use a life response (or other item) for all nodes (using LOC=NODE or NODA on
FTGPARM ), all item codes for the particular item are required, e.g., 4, 16, 27, and 38  for CTETRA
(one DRESP1  entry for each item code).
8.For shell elements with bottom (Z1) and top (Z2) layers, if the item code is negative (e.g., -4) for layer
Z1, this flags Nastran to automatically (and internally) create a DRESP1 with the corresponding item
code for layer Z2. This is a convenient method to include responses from both top and bottom by
defining only a single DRESP1 entry for any particular response for a set of elements or property sets.
So as an example, to specify the bottom and top response (Life in Repeats ) for all the grids of the
specified element or property set for a CQUAD4 element, use items codes:  -4,-27,-50,-73
9.These item codes are used for LOC=NODE or NODA and all other element nodal values of
RECOVER on the FTGPARM  entry, namely, “SGAGE”, “CORNER”, “BILIN”, and “CUBIC”
also.CPYRAM 4,16,28,40,52 Life in Repeats  of the loading sequence
5,17,29,41,53 Log of life in Repeats  of the loading sequence
6,18,30,42,54 Life in user defined fatigue equivalent units
7,19,31,43,55 Log of life in user defined equivalent units
8,20,32,44,56 Fatigue damage
9,21,33,45,57 Log of fatigue damage
12,24,36,48,60 Scale factor from Factor of Safety analysis
CHEXA 4,16,28,40,52,64,76,88 Life in Repeats  of the loading sequence
5,17,29,41,53,65,77,89 Log of life in Repeats  of the loading sequence
6,18,30,42,54,66,78,90 Life in user defined fatigue equivalent units
7,19,31,43,55,67,79,91 Log of life in user defined equivalent units
8,20,32,44,56,68,80,92 Fatigue damage
9,21,33,45,57,69,81,93 Log of fatigue damage
12,24,36,48,60,72,84,96 Scale factor from Factor of Safety analysisTable 2-12  Standard S-N and -N Fatigue Item Codes for LOC=NODE  or NODA o n FTGPARM
Element Name Item Codes Real Element Data Item&lt;/p&gt;
&lt;p&gt;69 CHAPTER 2
Introduction to User Interface
Main Index
Remarks:
1.Spot weld fatigue item code is related to NANGLE, the number of calculation angles around the weld
circumference as defined on the FTGPARM  entry. Item codes listed above are for the first angle at
zero (0) degrees. For each subsequent angle, the item code should be increased by 12. For example,
item code =16 is for “Fatigue life in Repeats  of the loading sequence” at the Top Sheet for the second
angle.Table 2-13  Item Codes for Fatigue Analysis of Spot Welds
Element Name Item Code Real Element Data Item
CBAR
CBEAM
CWELD
CHEXA
(For T op Sheet at
Angle = 0.0
degrees)4
(-4) (-1004)Fatigue life in Repeats  of the loading sequence
See remarks 2. and 3.
5 ( -5)(-1005) Log of fatigue life in Repeats  of the loading sequence
6 (-6)(-1006) Fatigue life in user defined fatigue equivalent units
7 (-7)(-1007) Log of fatigue life in user defined fatigue equivalent units
8 (-8)(-1008) Fatigue damage
9 (-9)(-1009) Log of fatigue damage
13 (-13)(-1013) Scale factor from Factor of Safety analysis
CBAR
CBEAM
CWELD
CHEXA
(For Weld Nugget
at Angle = 0.0
degrees)4+12&lt;em&gt;NANGLE Fatigue life in Repeats  of the loading sequence
5+12&lt;/em&gt;NANGLE Log of fatigue life in Repeats  of the loading sequence
6+12&lt;em&gt;NANGLE Fatigue life in user defined fatigue equivalent units
7+12&lt;/em&gt;NANGLE Log of fatigue life in user defined fatigue equivalent units
8+12&lt;em&gt;NANGLE Fatigue damage
9+12&lt;/em&gt;NANGLE Log of fatigue damage
13+12&lt;em&gt;NANGLE Scale factor from Factor of Safety analysis
CBAR
CBEAM
CWELD
CHEXA
(For Bottom
Sheet at Angle =
0.0 degrees)4+24&lt;/em&gt;NANGLE Fatigue life in Repeats  of the loading sequence
5+24&lt;em&gt;NANGLE Log of fatigue life in Repeats  of the loading sequence
6+24&lt;/em&gt;NANGLE Fatigue life in user defined fatigue equivalent units
7+24&lt;em&gt;NANGLE Log of fatigue life in user defined fatigue equivalent units
8+24&lt;/em&gt;NANGLE Fatigue damage
9+24&lt;em&gt;NANGLE Log of fatigue damage
13+24&lt;/em&gt;NANGLE Scale factor from Factor of Safety analysis&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Optimization70
Main Index
2.If item codes 4-9 or 13 are negative (e.g., -4), this flags Nastran to automatically (and internally)
create a DRESP1 with the corresponding item code for the nugget and bottom sheet as well and for
all specified angles. This is a convenient method to include responses from all locations and angles by
defining only a single DRESP1 entry for any particular response for a set of spot weld elements or
property sets. So as an example, to specify the response (Life in Repeats ) for all the locations and angles,
use a single DRESP1 entry with item code:  -4.
3.In conjunction with the above remark, if the item code is negative and multiplied by 1000
(e.g., -1004), then the nugget responses are not generated. Only the top and bottom sheet responses
are internally generated .
Remarks:
1.CQUAD4, CQUAD8, CQUADR item codes are listed for Grids 1-4, respectively.
2.CTRIA6 and CTRIAR item codes are listed for Grids 1-3, respectively.
3.Note that FTGDEF has a keyword “SEAMW” that may have the field NDSIDi, which lists seam line
grids. If this is used, it means that some grids of the elements will not have fatigue life associated with
them and are excluded from the analysis.Table 2-14  Item Codes for Fatigue Analysis of Seam Welds
Element Name Item Code Real Element Data Item
CQUAD4
CQUAD8
CQUADR4, 19, 34, 45 Fatigue life in Repeats  of the loading sequence
5, 20, 35, 46 Log of fatigue life in Repeats  of the loading sequence
6, 21, 36, 47 Fatigue life in user defined fatigue equivalent units
7, 22, 37, 48 Log of fatigue life in user defined fatigue equivalent units
8, 23, 38, 49 Fatigue damage
9, 24, 39, 50 Log of fatigue damage
12, 27, 42, 53 Scale factor from Factor of Safety analysis
CTRIA6
CTRIAR4, 19, 34 Fatigue life in Repeats  of the loading sequence
5, 20, 35 Log of fatigue life in Repeats  of the loading sequence
6, 21, 36 Fatigue life in user defined fatigue equivalent units
7, 22, 37 Log of fatigue life in user defined fatigue equivalent units
8, 23, 38 Fatigue damage
9, 24, 39 Log of fatigue damage
12, 2 7, 42 Scale factor from Factor of Safety analysis&lt;/p&gt;
&lt;p&gt;71 CHAPTER 2
Introduction to User Interface
Main Index
Tips for Enhancing Pe rformance
Follow these tips to ensure your fatigue analysis runs as quickly as possible.
1.Leave L OGLVL field on FTGPARM  blank. Set it only f or debugging purposes . Large amounts of
data can be p roduced , which severely degrades performance.
2.Use as many threads as possible. This is set in the NTHRD field on FTGPARM  bulk data entry.
Setting it to zero (0)  allows the program to automatically select the number of threads available.
3.Very large duty cycle jobs can result in many open files during the analysis procedure. Make sure your
resource limits on your machine allow for this. The number of open files is typically set to 1024 by
default. The installation manual explains how to change these limits. If the cyclic variation of each
load in the duty cycle sequence is confined to only constant amplitudes, use the TYPE=CONST on
the FTGLOAD  entry.
4.Estimate the amount of memory that is needed. The amount of RAM (in words) needed is
approximately:
•50 times the Number of Materials plus
•18 times the Number of Entities (nodes or elements) plus
•Number of points in each Time History times the number of Time Histories plus
•Six (6) times the Number of Entities times the Number of Load Cases (or Modes) plus
•Small amounts for Events, tables, etc.
Using I8 doubles the requirement.
Therefore, use the FTGDEF  entry to limit the results on large models.
5.Use NHS w ith HSGATE option on the FTGDEF  entry. This has the effect of reducing the
computation time and output by identifying only critical locations of high damage on your model.&lt;br&gt;
These locations are called hot spots .
6.Or us e TOPSTR on FTGDEF  entry to process only critically stressed locations, and/or use
TOPDMG on FTGDEF  to retain only a top percentage of damaged locations. Use of
NHS/HSGATE is preferred. S ee the next section.
Two (2 ) Pass and Hot Spot A nalysis
A particularly useful mechanism for enhancing the performance of a job and more quickly identifying critical
locations on a large model without compromising the accuracy of the final results is by using the so-called 2-
pass or hot spot a nalysis techniques. These are activated on the FTGDEF  entry by specifying values in the
TOPSTR /TOPDMG or NHS/HSGATE f ields.  They are mutually exclusive and if NHS is specified it
overrides any TOPSTR/TOPDMG specifications.
TOPSTR defines the top percentage of entities to be retained in the analysis based on the static
stress parameter (von Mises, Absolute Maximum Principal, etc.) and the maximum/minimum
(range) of the combined time histories. By default, all entities are retained (100%).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Tips for Enhancing Performance72
Main Index
TOPDMG returns the percentage of entities simply based on the highest damage. This does not
necessarily reduce computation time, but does significantly reduce result recovery time as less
entities are retained.
Here are the likely scenarios:
Single (1) P ass Analysis  - no TOPSTR/TOPDMG or NHS/HSGATE s pecified
This is done where neither TOPSTR or TOPDMG nor NHS/HSGATE a re specified. All requested elements
of the analysis are retained  in a single pass. This is the default scenario.
Hot Spot Analysis  - NHS/HSGATE only
If NHS/HSGATE are used, the number of specified hot spots  (critical locations) are determined by NHS and
the number of element layers around each hot spot is specified by HSGATE. The speed increase can be
significant for large models as both computation time and output recover is reduced dramatically, all while
continuing to identify the most critical areas of the model. Please note that the algorithm is such that the hot
spots are unique to one another even though the most damaged elements may be adjacent to each other. In
other words, if the number of hot spots  is set to two (NHS=2), but the two most damaged elements are
adjacent, two distinct locations are still identified. It is advisable to set HSGATE to something reasonable so
as to be able to better visualize the hot spots  in a postprocessor by keeping element layers around the hot spot
elements using HSGATE. If NHS is used, it overrides any TOPSTR or TOPDMG settings.
Two ( 2) Pass Analysis  - TOPSTR only
If TOPSTR is used alone (TOPDMG is left unspecified), then a two (2) p ass analysis is performed where the
first (1st) pass determines the entities with the highest simple s tress range.  The specified percentage of those
entities is retained for the next pass. The second (2nd) pass performs the full fatigue analysis on the remaining
entities .
TOPDMG only
If TOPDMG is used alone (TOPSTR is left unspecified or is 100%), then a full fatigue analysis is performed
but only the specified p ercentage of entities to retain based on the highest damage . This does not reduce
computation time, but does reduce result recovery time, which can be significant for large models.
TOPSTR and TOPDMG specified
If TOPSTR and TOPDMG are both specified, then a two (2) p ass analysis is performed where the first (1st)
pass determines the percentage of entities to retain  based on TOPSTR as described above. This eliminates
the first set of entities. The second (2nd) pass does the full fatigue analysis but only returns results for a
specified p ercentage of the most damages entities of the remaining entities from the first (1st) pass based on
TOPDMG  as also described above .
Examples:
As an example if TOPSTR is set to 10% and the model has 1 0,000 entities (GRIDs), then approximately the
top 1 ,000 (10% of 1 0,000) highly stressed GRIDs are retained for the second (2nd) pass. If TOPDMG is
also set to 10%, then of the remaining GRIDs, the top 1 00 (10% of 1 ,000) most damaged GRIDs are&lt;/p&gt;
&lt;p&gt;73 CHAPTER 2
Introduction to User Interface
Main Index
retained from the final analysis. If NENTS is specified as 10, then of the remaining 100 GRIDs, only 10 of
the most damaged are actually reported back to the user. The use of NENTS does not increase the speed of
the analysis.
As an example of NHS/HSGATE, if NHS is set to 10, and HSGATE is set to 0 or left blank, only 10 element
results are returned. They do not necessarily reflect to 10 most highly damaged elements, however the highest
damaged element is one of the locations. If HSGATE is set to one (1), then one (1) layer of elements around
each element is also retained. This helps capture more of the most damaged elements. The number of extra
elements retained is dependent on the model connectivity, but for a standard QUAD element with four (4)
nodes connected to other QUAD elements, this can result in another, say, eight (8) elements around each
hot spot element for the first layer. So for the first layer with 10 hot spots, that would equate to about 90
elements with HSGATE=1.
Below is a graphic of some scenarios as described above and their p erformance statistics using 1, 2, 3, and 4
threads on a multi-processor Windows machine. The model is of relatively small size (19,000 nodes and
22,000 elements) with two time history loads of 3500 points each. Both the total time of the run and the
fatigue process itself are shown. The results are normalized with respect to a single-p ass, full analysis using a
single thread.
Notes :
If not using any of TOPSTR/TOPDMG or NHS/HSGATE, it is best to leave those field blank.
Neither TOPSTR or TOPDMG , nor NHS/HSGATE c an be used for fatigue analysis of spot welds
or seam welds or for SOL 200 (optimization) runs.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Tips for Enhancing Performance74
Main Index
Use of TOPDMG will have show little to no increase in performance unless the model is
significantly large and a fairly small percentage is requested. The only real time savings in on result
recovery as less entity results have to be processed.
Use of TOPST R and T OPDMG results in a large performance gain when only using one (1) thread
(NTHRD on FTGPARM  entry. Diminished benefits are realized with the more treads available.
The actual performance benefits show in the fatigue process itself in comparison to the overall time
of the Nastran job. The process is highly dependent on model size, input/output considerations, the
size and number of time histories , and loading events.
More relative performance benefit from the second (2nd) pass is seen versus the first (1st) pass if
more entities are retained from the first (1st) pass, when doing performance comparisons between
the different passes.
Using NHS/HSGATE is a preferred method over TOPSTR/TOPDMG in both computational
speed and in retaining accurate critical locations.
It is possible to set TOPSTR to a negative percentage. If this is done, then the retained entities are
determined by a percentage of the largest stress. For example if the largest stress is say, 1,000 MPa
and TOPSTR is set to 10%, then 10% of 1,000 is 100. This means that 1,000 - 100 = 900 MPa and
any only entities with stress range over this amount are retained in the analysis. This has the benefit
of possibly reducing the number of retained entities significantly in comparison to the positive
percentage counterpart. But because it is a stress-based percentage, if there are large stress gradients
or possible stress concentrations, one may find that not enough elements are being retained as one
might expect.&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 3: A Simple S-N Analysis
3 A Simple S-N Analysis
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup
CAEfatigue Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description76
Main Index
Problem Description
In this first example problem we start with a very simple model to introduce some fatigue analysis concepts
by investigating the Total Life , of the component shown below. For the purpose of this exercise we refer to it
as the keyhole  model as it is a keyhole shape notched component.
A fully reversed loading (p) of +/- 10,000 N is applied on the sample to open and close the notch. Clearly,
the notch root will see the highest stress. Because the model is symmetric about the notch, a half- model with
a symmetric boundary condition is all that is required.
Figure 3-1  The S-N Analysis of the Keyhole Model
Objective
To introduce the S-N fatigue life prediction method, commonly referred to as the
Stress-Life (S-N)  or Total Life  method.&lt;/p&gt;
&lt;p&gt;77 CHAPTER 3
A Simple S-N Analysis
Main Index
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation  installation.
Fatigue Setup
This fatigue analysis is done using a linear static solution (SOL 101) with a load magnitude of 10,000
Newtons. The partial input deck is shown below. It is assumed that the user is familiar with the basic setup
of a standard SOL 101 job. Only the portions of the input deck dealing directly with the fatigue analysis are
explained here (see file simpleSN_v1.dat ).
SOL 101
CEND
$
TITLE = Keyhole Model (Simple SN)
ECHO = NONE
AUTOSPC(NOPRINT) = YES
$
FATIGUE(PRINT,FORMAT=0,BULK) = 42
$
SUBCASE 1
SPC  = 2
LOAD = 6
STRESS  = ALL
$
BEGIN BULK
PARAM    POST    1
MDLPRM   HDF5    0
$
$ Fatigue Element Set Definition
$
SET4    21      PROP    PSHELL  1
FTGDEF  42
ELSET   21      211
PFTG    211             N ONE
$
$ Fatigue ParametersTable 3-1  Files Required
Files Required Description
simpleSN_v1.dat Simple S-N curve - fully reversed constant amplitude loading
simpleSN_v2.dat Simplified form of input file - equivalent to simpleSN_v1.dat
simpleSN_v3.dat Derived material S-N properties
simpleSN_v4a.dat Multiple constant mean S-N curves - 0.0 MPa mean
simpleSN_v4b.dat Multiple constant mean S-N curves - 100 MPa mean
simpleSN_v5.dat Multiple constant R-Ratio S-N curves
simpleSN_v6.dat Multiple constant life (Haigh) curves&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup78
Main Index
$
FTGPARM 42      SN      1.0
DTI     UNITS   1                                        MPA
$
$ Fatigue Cyclic Loading
$
FTGSEQ  42
33      1.0
UNITS   1.0     Cycles
FTGEVNT 33      22
FTGLOAD 22      11      1       10000.  1.0     0.0
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
$
$ Partial Listing of Elements and Element Property
$
PSHELL   1       1       9.525   1               1
CQUAD8   1       1       1       3       23      21      2       15
22      14                                      0.      0.
&amp;hellip;etc.
$
$ Material Records
$
MAT1     1       203403. 78231.7 .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          600.0                           0.137
SN      8948.0  -0.2    2.e8    0.0
$
$ Partial Listing of Nodes of the Entire Model
$
GRID     1               63.8175 0.      0.
GRID     2               63.8283 .320863 0.
&amp;hellip;etc.
$
$ Loads and Constraints
$
SPCADD   2       1       4
LOAD     6       1.      1.      1
$
$ Parital listing of Displacement Constraints
$
SPC1     1       2       1
&amp;hellip;etc.
$
$ Nodal Force
$
FORCE    1       394     0       10000.  0.      1.      0.
$
ENDDATA&lt;/p&gt;
&lt;p&gt;79 CHAPTER 3
A Simple S-N Analysis
Main Index
Case Control
In order to perform a fatigue analysis, there must be a FATIGUE  case control:
FATIGUE(PRINT,FORMAT=0,BULK)  = 42
Note that all defaults are used and are therefore, not necessary to specify. This case control results in the same
fatigue output request:
FATIGUE = 42
Fatigue output is printed to the f06 file ( PRINT ) and no additional output formats are saved (FORMAT=0 ).
The ID referenced is ID 42 of bulk data FTGDEF , FTGPARM , and FTGSEQ  entries (BULK ). The analysis expects
to find a FTGDEF , a FTGPARM , and FTGSEQ  bulk data entry, each with ID= 42. The only bulk data entries that
are absolutely required are the FTGSEQ  (or FTGLOAD ) and MATFTG .   If the other entries are not present, default
values are used.
In this and all examples, the STRESS (or STRAIN) case control output request is also included, but not
required  to perform the actual fatigue analysis. Stresses are necessary for the fatigue analysis just as
displacements are required to determine the stresses, but they are automatically c omputed internally a s
necessary when the FATIGUE  case control is present.
Mate rial and Physical Properties
The FATIGUE  case control calls out FTGDEF  bulk data of ID 42. This portion of the input deck defines where
on the model, or that is, which elements of the model, are to be included in the fatigue analysis. The FTGDEF&lt;br&gt;
entry uses an ELSET flag to indicate that pairs of element sets and their corresponding fatigue properties are
to be defined.
In this case only one pair is defined. That pair references a SET4 entry of ID 21 that defines all elements of
element property PSHELL of ID 1. It associates these elements defined by the SET4 entry to the physical
fatigue properties defined by PFTG entry of ID 211.
$ Fatigue Element Set Definition
$
SET4    21      PROP    PSHELL  1
FTGDEF  42
ELSET   21      211
PFTG    211             N ONE
Please note that since the entire model is included in the elements defined by the SET4 entry, it is not actually
necessary to define the element set as shown above. The same thing can be accomplished with just these
entries and by default , all elements of the model become part of the fatigue analysis:
FTGDEF  42              211
PFTG    211             N ONE
Because the PFTG entry uses all defaults, it too could have been omitted and only the FTGDEF  entry would be
acceptable:
FTGDEF  42
But because the FTGDEF  entry now defines no actual element sets or specific, non-default fatigue properties,
all elements become part of the fatigue analysis. So, it too could have been omitted.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup80
Main Index
When the FATIGUE  case control finds no FTGDEF  of the designated ID, it assumes all elements of the model that
have fatigue material properties are to be included in the fatigue analysis and uses default physical properties.
See file simpleSN_v2.dat , which brings us to the definition of fatigue material properties.
The presence of a MATFTG  entry is required. The MATFTG  entry must be associated to an existing MAT1 entry
that defines Young’s Modulus, which is also required for a fatigue analysis. In this example, all elements are
associated to PSHELL of ID 1, which references MAT1 of ID 1. Therefore MATFTG  of ID 1 is also referenced
by the PSHELL entry.
$ Material Records
$
MAT1    1       2 03403. 78231.7 .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          600.0
SN      8948.0  -0.2    2.e8    0.0             0.137
In the MATFTG  entry above, there are two lines of data specified by the STATIC and the SN flags. On the
STATIC line the UTS is entered and is required. Since only th e additional SN flag is specified, nothing else
on the  STATIC line is necessary.&lt;br&gt;
However, the SE field or Standard Error of Log(N) can be specified on either the STATIC or SN lines.  If
specified on both, the SN line entry takes precedence. T he SN flag indicates that parameters that define a
stress-life curve are to be entered.
All the stress parameters in this example are given in units of MPa . See the section below about stress
parameter units - Model Units .
If plotted, the stress-life curve for the data given appears as such:
Figure 3-2  Material S-N Curve&lt;/p&gt;
&lt;p&gt;81 CHAPTER 3
A Simple S-N Analysis
Main Index
The Co ncept of Similitude
As can be surmised by the above, life can be determined by simply looking up the corresponding stress.
An S-N curve is based on the principle of similitude. This means that if the same stress experienced by T ower
Bridge (shown below) c an be reproduced in a test laboratory specimen made of the same material, then we
can expect the life of the two to be about the same, if subjected to the same levels of stress.&lt;/p&gt;
&lt;p&gt;Figure 3-3   Tower Bridge and the Concept of Similitude
Mate rial vs. Compon ent S-N Curves
Different types of S-N curves exist. The one used in this example is known as a Material S-N  curve where
this principle of similitude is applicable. However, be aware of another type of S-N curve known as a
component S-N curve.
Material S-N curves are representative of the material and independent of geometry. They relate local stress
() to life. Note:   A portion of the S-N curve includes a region where the S-N curve is invalid. The S-N fatigue
analysis method is generally only good for High Cycle Fatigue (HCF)  problems, meaning that
the number of cycles to failure is generally very high. Note that this invalid region is generally
below about 104 cycles.
Note:   Another region of the curve is the cut-off region where the endurance limit is defined 108.
Anything above this limit is reported back as being beyond the cut-off  (infinite life, in other
words).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup82
Main Index
Some S-N curves are generated where the actual component geometry itself as well as the material have been
used in tests to create the S-N curve. This type of S-N curve is called a Component S-N  curve. These types
of curves relate nominal stress (S) to life and are dependent on the geometry of the component. If you change
the geometry, the curve is no longer representative and therefore inv alid.
The nominal stress is a location away from the actual failure location. This is usually because it is impossible
to place a measurement device such as a strain gauge in the failure location. The point of measurement is
sometimes referred to as the Reference Location . Thus, the fatigue analysis of models using these types of
curves must localize the analysis to the area of the reference location as fatigue life reported from anywhere
else will not be correct.
Model Units
Nastran is a unitless code, meaning that the user must ensure all units are consistent. One thing to be very
aware of when doing fatigue analysis is the consistent model units, particularly the units of stress. Fatigue
material properties must be entered in the model’s consistent units unless the CNVRT field is used. In this
example the material stress parameters such as Young’s Modulus (E) and other parameters defining the S-N
curve are in MPa, which is consistent with the rest of the model units (length units in millimeters, force units
in Newtons). Stresses from the analysis are in MPa.
Should you wish to input any values on the MATFTG  entry in units other than the model’s consistent units, the
CNVRT field (field 3 on the 1st line of MATFTG ) must be used to convert the stress parameters from whatever
units they are in, to the model’s consistent units. The conversion scaling is only applied to those stress
parameters on the MATFTG  or referenced by MATFTG  in TABLEM1  entries.
When a fatigue analysis is initiated, all fatigue material stress parameters, including Young’s modulus on the
MAT1 entry are converted to SI units of MPa internally. All stresses from the analysis are also converted to
MPa so that the look up on the stress-life curve is done properly and consistently.   In order for this to occur,
the analysis stress units must also be identified to the fatigue analysis. This is done on the DTI,UNITS  entry like
this:
DTI     UNITS   1                                       MPA
MPa is the default stress unit  system ! This entry is not needed for this example because our stress units are
already in MPa and our fatigue material stress parameters are entered in MPa, which is the model’s consistent
stress units. Subsequent examples where the model’s stress units are in PSI  better illustrate the use of the
DTI,UNITS  entry.
Deriving Ma terials Properties
As a side note, what if you do not have access to specific fatigue material properties , yet you still want to do
a fatigue analysis?&lt;br&gt;
By using the MATFTG  entry with only the STATIC line, the UTS, and a material code, plus Young’s Modulus
from the MAT1 entry, appropriate cyclic material properties (an S-N curve in this case) are derived
automatically (see input deck simpleSN_v3.dat ).&lt;/p&gt;
&lt;p&gt;83 CHAPTER 3
A Simple S-N Analysis
Main Index
Fatigue Parameters
The FATIGUE  case control also calls out FTGPARM  bulk data of ID 42. This portion of the input deck defines
various fatigue analysis parameters. These are introduced , as applicable , throughout the remaining examples.
For this example, the FTGPARM  entry uses all defaults.
$ Fatigue Parameters
$
FTGPARM 42      SN      1.0
The most important parameter to note is the third field (TYPE) where the actual fatigue analysis type is
specified, in this case an S-N analysis ( SN). The 1.0 in field four  (4) is an overall scale factor that can be
applied to the resultant stresses. Because all the defaults are used, this entry could have been omitted (see file
simpleSN_v2.dat ). When the FATIGUE  case control finds no FTGPARM  of the designated ID, it assumes
an S-N analysis using all default parameters.
For this example, this same entry could have been included with all the defaults as:
FTGPARM 42      SN      1.0
STRESS  ABSMAXPR NONE           NOD A
CERTNTY 50.0
These are shown here to emphasize a few things that occur during the analysis.
1.The STRESS flag indicates that stresses are to be used in the fatigue analysis, which is the only option
for a S-N analysis.
2.The 6th field  (LOCation)  on the STRESS line, which is set to NOD A. This specifies  the fatigue
analysis to be performed at all the nodes of each element defined by the FTGDEF  entry  using nodal
averaged stresses . Thus, only one fatigue life is calculated for any given node as the contribution from
associated elements is averaged. If this entry is set to NODE as opposed to NODA, then the element
nodal stresses are used and no stress averaging is done due to contributions of associated elements. In
that case, multiple fatigue lives  (from each contributing element)  are determined and reported for
each node.
3.The stress combination used to actually look up life from the S-N curve. This is specified in the
STRESS line. The ABSMAXPR in the 3rd field of this line is the scalar Stress Combination  and
corresponds to the absolute maximum principal stress . This is the stress parameter that is used in the
fatigue analysis. The stress tensor from the FE analysis results is extracted at each element’s node.
However only a single stress value can be looked up on the S -N curve. So the six component values
of the stress tensor are resolved to the maximum absolute principal value which is used as the stress
look up parameter.
4.The Mean Stress Correction  to take place. In this case no mean stress correction ( NONE ) is to take
place. More is mentioned about this below in the discussion of the cyclic loading.
5.The Certainty of Survival  set on the line with the CRTNTY flag. It is set to  50.0% by default. This
uses the scatter in the S-N data to adjust the fatigue life prediction accordingly. A higher certainty&lt;br&gt;
produce s a lower life prediction and vice versa. Thus a value of 50.0 means that there is a 50%
probability that the reported life will be reached. A value of 95.0 means  a 95% chance of reaching
the reported life.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup84
Main Index
Element Nodal vs. N odal Averaged Str esses
It is important to understand the difference between the three values of the LOC field on the FTGPARM  entry
to determine which is appropriate to use in any given modeling circumstance.
LOC = NODA  calculates damage at nodes based on nodal averaged stresses.
LOC = NODE  calculates damage at nodes due to individual element nodal stresses.
LOC = ELEM  calculates damage at the center of an element due to the element center stresses.
For the two nodal methods, results  differ and LOC = NODA  may possibly be slightly non-conservative in
comparison. Since nodal averaged stresses/strains are determined from the average of all element nodal
contributions, the highest stresses/strains determined for any given node is generally smaller than the largest
element nodal contribution, resulting in less damage and thus, a longer fatigue life (i.e. non-conservative).
However, nodal averaged stresses are likely more representative of the actual stress given in that multiple
stresses do not actually exist at the same time on any given node, which the element nodal method suggests .
So depending on how conservative you wish to be in determining fatigue life, this drives the use LOC =
NODA  or LOC = NODE . T wo different thoughts exist on this.
LOC = NODE : Calculate life based on the highest possible stresses (no averaging), thus calculating
a fatigue life at every node for each element. Then average the fatigue lives at the nodes (as would be
done by postprocessor such as Patran when graphically displaying results).
LOC = NODA : First average the stresses and then calculate the fatigue lives at each node based on a
single stress value at each node.
LOC = ELEM : Calculating fatigue lives at the element center should be reserved to shell elements
only as fatigue cracks initiate at the surface only.
Nodal averaged stresses are grid point stresses and are determined using the grid point stresses generator in
MSC Nastran. This is the same as the GPSTRESS  (or GPSTRAIN ) output request.
It is important that the user understand how grid point stresses are calculated in MSC Nastran. When LOC
= NODA  the grid point stress generator is automatically invoked (thus there is no need for a GPSTRESS
output request). There are some limitation to be aware of. The SURFACE and VOLUME entries are
automatically generated when LOC = NODA  that GPSTRESS  output request would reference. For surfaces
(shell elements), the designated AXIS defaults to X1=X of the referenced coordinate (OUTPUT field) on the
NAVG line in the FTGPARM  entry. This axis is projected onto the defined surface (the elements making up the
surface) and defines the x-direction stress. From the normal, the y-direction stress is determined. All stresses
from contributing elements for a particular node are transformed to this consistent coordinate system and
then averaged.
Since the user has no control over the actual surface being used, care should be taken that the elements defined
for fatigue analysis in the FTGDEF  entry made up a reasonable surface that does not contain sharp corners. If
it does, the averaged stresses at those discontinuities maybe suspect.
The user is referred to Grid Point Stresses  (p.363) in the MSC Nastran Linear Static Analysis User’s Guide  for
more explanation of grid point stresses.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P6</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_006/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_006/</guid>
      <description>
        
        
        &lt;p&gt;85 CHAPTER 3
A Simple S-N Analysis
Main Index
Cyclic Loading
The load applied in the FE model is a static load of 10,000 N. Fatigue analysis using SOL 101 (statics)
employs a pseudo-static method where the cyclic variation of the static loading must be defined.   The time
signal used in this analysis is a fully reversed loading. Cyclic loading is sometimes described using a parameter
called the R-Ratio  (R), which is the minimum load divided by the maximum load.   R is a measure of the
mean stress or defines the constant mean of a signal. R = -1 for a fully reversed loading.
The S-N curve used in this example was generated by testing numerous polished test specimens at different
constant amplitude, fully reversed (R= -1) loading conditions. The parameter or power law that defines the
S-N curve was determined by Regression Analysis , of the raw data. Therefore no Mean Stress Correction  is
required since there is no mean stress to speak of (the mean stress is zero). This is why NONE is specified as
the correction method on the FTGPARM  entry .
In order to do a fatigue analysis using linear static FE results, we must define how the load varies with time.
This is easily done using the bulk data entries FTGSEQ , FTGEVNT , FTGLOAD , and TABLFTG . The load is defined as
a constant amplitude, fully reversed loading. This has the effect of oscillating the 10,000 N load from
+10,000 to -10,000 N.
A single occurrence of this fully reversed, constant amplitude signal is defined as one  cycle of the loading (for
more information please visit Cycles (cycle counting) . The X-values are taken as evenly spaced intervals (see
Sample Rate ).
Figure 3-4  Display of Unit Load, Fully Reversed Load
The FATIGUE  case control also calls out FTGSEQ  bulk data of ID 42. This portion of the input deck defines the
cyclic load variation. A FTGSEQ  entry is required or an error is i ssued (see exception below).
$ Fatigue Cyclic Loading
$
FTGSEQ  42
33      1.0
UNITS   1.0     Cycles&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup86
Main Index
FTGEVNT 33      22
FTGLOAD 22      11      1       1.0     1.0     0.0
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
A FTGSEQ  entry defines a sequence of load events. A FTGEVNT  entry groups different cyclic loads into a single
event (simultaneously acting loads). A FTGLOAD  entry defines the relationship between the FE stresses from a
particular SOL 101 subcase and the corresponding cyclic variation of the stresses due to the loading from that
subcase. The TABLFTG  entry defines the actual cyclic load variation. More is elaborated on FTGSEQ  and FTGEVNT&lt;br&gt;
as the loading become more complicated in subsequent examples. For now, suffice it to say that there is only
one load in the event and only one event in the load sequence.
So for all intense purposes, the input could be simplified to reference only the FTGLOAD  entry as such (see file
simpleSN_v2.dat ):
$ Fatigue Cyclic Loading
$
$       ID      TID     LCID    LDM     SCALE   OFFSET  TYPE
$       &amp;ndash;      &amp;mdash;     &amp;mdash;-    &amp;mdash;     &amp;mdash;&amp;ndash;   &amp;mdash;&amp;mdash;  &amp;mdash;-
FTGLOAD 42      11      1       1.0     1.0     0.0
UNITS   1.0     Cycles
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
The above simplification shows that the FATIGUE  case control calls out the FTGLOAD  entry instead of the FTGSEQ .
This is the one exception where a FTGSEQ  entry is not required, if replaced by a single FTGLOAD  entry. Only a
single load (one subcase) is possible in this case.
The FTGLOAD  entry defines the simple load variation in tabular format, also plotted in Figure 3-4. Note that
only Y-values are necessary using a TABLFTG  entry. Evenly spaced X-values are assumed. The time or distance
between the values is ignored. More explanation on this is given in the next example. A TABLED1  entry
could also be used and referenced by the FTGLOAD  entry in the 3rd field. If a TABLED1 is used, the X-values
must be in ascending order. Again the actual X-values or distance between each in time is of no consequence
to the actual fatigue analysis.
The FTGLOAD  entry associates the actual cyclic variation of the stresses from a particular subcase to the subcase
itself. Field three (3) points to the TABLFTG  or TABLED1 entry and field four ( 4) points to the SUBCASE ID.
The other three fields are for normalizing, scaling, and offsetting the stresses. In this case, no additional
normalization, scaling or offsetting is done. But for the purposes of understanding when to use these the
following explanation is given.
Load Normalizing, Sca ling and Offsets
The FE stress results from a subcase can be scaled in several different ways using the Load Magnitude  (B),
Scale Factor  (A) and Offset  (C). The stress time or cyclic variation is determined as:
where,
P(t) is the cyclic load as a variation of timeijt PtAij
B&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;C+ =&lt;/p&gt;
&lt;p&gt;87 CHAPTER 3
A Simple S-N Analysis
Main Index
is the stress tensor from the subcase
A is the Scale Factor (field 6)
B is the Load Magnitude  (field 5)
C is the Offset (field 7)
If the stress results are to be used as-is, then Load Magnitude  and Scale Factor  should be set to unity and Offset&lt;br&gt;
to zero  (0). Thus the cyclic variation oscillates between its own maximum and minimum. To scale the stress
by 10 times, use a time history that oscillates between +/-1, and a Scale Factor  of 10.0.
The Load Magnitude  is normally used to normalize the stress results to simulate a unit load. In this example
a Load Magnitude of 10,000 could be specified to normalize the stress due to a unit load. Then the TABLFTG&lt;br&gt;
entry could oscillate between +/-10,000 to achieve the same cyclic loading.
The Offset  is used to simulate the same static stress offset across all elements of interest in the fatigue analysis.
The value must be input in the same stress units as the model.
Fatigue Equ ivalent Units
The second line of the FTGSEQ  entry (or the FTGLOAD  entry) has a flag called UNITS set. If this line is present,
then fatigue equivalent units are defined by setting fields three and four on this line. Fatigue equivalent units
are a convenient way to have the fatigue analysis report back life results in meaningful terms that an engineer
or anyone can understand. If no fatigue equivalent units are defined, then the fatigue life is reported back as
Repeats  of the cyclic load variation or Repeats  of the time history applied to the static loading.
In this example, one cycle of fully reversed loading is defined. Therefore, one repeat of the cyclic loading can
be called a cycle. So the results of the fatigue analysis are reported back in both Repeats  of the cyclic loading
and as Cycles . Because one Repeat  is also one Cycle , in this example, it does not have much meaning.
Subsequent examples show more meaningful fatigue equivalent units, such as laps around a test track, or
flights  of an aircraft, or hours  of operation.
Fatigue Results
Run the simpleSN_v1.dat  file using a supported version of MSC Nastran (  2016). Then inspect the
simplesn_v1.f06  file. The lowest life on node 1 of element 1 show just under half a million cycles
(105.64  436,800 c ycles).ij&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks88
Main Index
Listing 3-1  Fatigue Life and Damage for Nodes of Element 1
Both Life, Repeats, and Life, Cycles,  are available result types. Both show the exact same result.
Life, Repeats : is the default result value and indicates the number of repeats of the time history the
model has survived.
The Cycles is a user defined fatigue unit to describe more accurately what Repeats  of the time signal
may mean. For example, it could represent a number of Flights of an aircraft, or  Laps around a test
track, or Hours  of operation. In this case it is a single Cycle.
The Log life, Cycles  reveals the log (base 10) of the fatigue life. This output is available mostly for
post-processing reason in a graphical pre- and post-processor to make the contour bands more
readable as life and damage results tend to have very high gradients (from infinite life to no life). The
log values help spread out the contour bands.
Damage is the reciprocal of life.
Figure 3-5  Log of Life (Cycles)
Concluding Remarks
This is a very simple analysis, the results of which should be obvious. The lowest life is naturally predicted at
the highest stressed location. Because the loading is simple, perhaps a detailed fatigue analysis as performed
here, is not necessary. In fact you could  simply extract  the highest principal stress (333 MPa) and go  directly
to the plotted S-N curve to read the life. This, of course, starts to become very impractical with anything&lt;br&gt;
more complicated, as  is see in subsequent examples.                                                                                            EVENT ID  ALL EVENTS  FATIGUE ID      42
F A T I G U E   R E S P O N S E   I N   Q U A D 8   E L E M E N T S               OPTION =NODA
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (CYCLES              )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
1        1  Z1    0.436 8E+06   5.64   0.436 8E+06   5.64   0.22 89E-05  -5.64   0.3332E+03  -0.3332E+03                &lt;br&gt;
3  Z1    0.456 3E+06   5.66   0.456 3E+06   5.66   0.2191E-05  -5.66   0.3302E+03  -0.3302E+03                &lt;br&gt;
23  Z1    0.3674E+07   6.57   0.3674E+07   6.57   0.2722E-06  -6.57   0.2176E+03  -0.2176E+03                &lt;br&gt;
21  Z1    0.3413E+07   6.53   0.3413E+07   6.53   0.293 1E-06  -6.53   0.2208E+03  -0.2208E+03&lt;/p&gt;
&lt;p&gt;89 CHAPTER 3
A Simple S-N Analysis
Main Index
Range vs. Amplitude
To read the correct life value from the curve for this exercise, you must multiply the maximum principal stress
at Node 1 by two (666 MPa) since the total range of the signal is twice the stress determined by the FE
analysis since it is experiencing full reversal. See glossary terms Range  vs. Amplitude .
Plasticity in S-N Analysis
A note on Plasticity : Fatigue cannot occur without some local plasticity. The S-N method makes no effort
to define the amount of plasticity or compensate for it in any specific manner. All plasticity is built into the
S-N curve itself.
Mean Stress
Various methods exist for compensating for non-zero mean stress. The material S-N data used is typically
derived using zero mean stress. The actual loading experienced does not typically result in zero mean stress.
One method used is to use multiple S-N curves derived at different constant mean stresses or R-ratios. There
is also a method using a Haigh Diagram,  which constitutes a number of stress range vs. stress mean curves at
constant life . The multi-curve analysis methods employ empirical data to account for mean stress effects
rather than analytical methods such as Gerber and Goodman, which are illustrated in the next Chapter.
Constant Mean Stress S-N Curves
Here is an example input for defining multiple constant mean ( MEAN ) stress S-N curves (see
simpleSN_v4a.dat ). Note that three curves are defined, one each at -50.0  MPa, 0.0 MPa, and 100.0  MPa
mean stress, respectively.
FATIGUE = 42
$
BEGIN BULK
$
SET1    21      1      !Element 1 only
FTGDEF  42
ELSET   21
FTGPARM 42      SN
STRESS  ABSMAXPR INTERP                 0
DTI     UNITS   1                                       MPA
$
FTGLOAD 42      11      1       1.0     1.0     0.0
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
$
$ Description of Material : MANTEN M-M
MAT1     1       203403. 78231.7 .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          552.0   99      MEAN            0.3
TABLE   -50.0   31      0.0     32      100.0   33
TABLEM1 31
7729.0  800.0   3.152+4 700.0   1.6+5   600.0   1.08+6  500.0
1.14+7  400.0   5.12+8  300.0   1.74+12 200.0   ENDT
TABLEM1 32
3102.0  800.0   1.2651+4 700.0   6.4098+4 600.0  4.369+5 500.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks90
Main Index
4.576+6 400.0   9.45+7   300.0  3.05+11  200.0  3.3+17  100.0
ENDT
TABLEM1 33
52.0     800.0  1542.0  700.0   7819.0  600.0   5.3289+4 500.0
5.5814+5 400.0  1.15+7  300.0   5.546+9 200.0   6.03+15  100.0
ENDT
Figure 3-6  Multiple “Constant Mean St ress” S-N Curves
Knowing the maximum stress range of 666 MPa for this simple, zero mean loading, we can simply read the
life from the zero-mean curve, interpolating between the 600.0  and 700.0  MPa levels ( TABLEM1 32),
giving approximately 21,000 cycles. If the OFFSET field on the FTGLOAD  entry is set to 0.3,
FTGLOAD 42      11      1       1.0     1.0     0.3
that yields an offset range mean of 100 MPa (recall that the cyclic loading contains absolute peak values of
+/-1). A 100.0  MPa mean stress S-N curve exists as TABLEM1 of ID 33 above. Looking up 666 MPa on
the 100 MPa curve gives life of approximately 2,600 cycles (see simpleSN_v4b.dat) .
When CORR=INTERP on the FTGPARM  entry (to indicate that the mean stress correction is to interpolate
between curves), there must be a curve defined at zero mean or the mean stress correction  fails. Curves are
defined as stress range vs . life in cycles (TYPE=MEAN on MATFTG ) or stress amplitude vs . life in cycles
(TYPE=AMEAN on MATFTG ). Stresses should be entered in the model consistent units unless the CNVRT
field on MATFTG  is used to convert input stress values to the model consistent units.&lt;/p&gt;
&lt;p&gt;91 CHAPTER 3
A Simple S-N Analysis
Main Index
Constant R-Ratio S-N Curves
This example defines multiple constant R-ratio ( RRATIO ) S-N curves (see simpleSN_v5.dat ). Note that five
curves are defined, one each at -1.0 , 0.0, 0.2, 0.4, and 0.5 R-ratio, respectively. Again, with this simple
example and no stress offset, the life is read directly from the R=-1 curve. If a mean offset is given,
interpolation between the curves occurs.  Experiment by changing the OFFSET field (7) on the FTGLOAD&lt;br&gt;
entry.
FATIGUE = 42
$
BEGIN BULK
$
SET1    21      1     !Element 1 only
FTGDEF  42
ELSET   21
FTGPARM 42      SN
STRESS  ABSMAXPR INTERP                 0
DTI     UNITS   1                                       MPA
$
FTGLOAD 42      11      1       1.0     1.0     0.0
TABLFTG 11
0.0     1.0     -1.0    0.0     ENDT
$
$ Description of Material : Wrought AlAlloy 7075-T6510 RR
MAT1     1       7.0E4          .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          585.0   105     RRATIO          0.0
TABLE   -1.0    31      -0.4    32      0.0     33
0.2     34      0.5     35
TABLEM1 31
1.0E4   820.0   1.0E5   550.0   1.0E6   350.0   1.0E7   300.0
ENDT
TABLEM1 32
1.0E4   650.0   1.0E5   435.0   1.0E6   315.0   1.0E7   265.0
ENDT
TABLEM1 33
1.0E4   525.0   1.0E5   365.0   1.0E6   280.0   1.0E7   245.0
ENDT
TABLEM1 34
1.0E4   440.0   1.0E5   325.0   1.0E6   255.0   1.0E7   225.0
ENDT
TABLEM1 35
1.0E4   295.0   1.0E5   250.0   1.0E6   200.0   1.0E7   175.0
ENDT&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks92
Main Index
Figure 3-7  Multiple “Constan t R-Ratio” S-N Curves
When CORR=INTERP  on the FTGPARM  entry (to indicate that the mean stress correction is to interpolate
between curves), there must be a curve defined at R = -1 (zero mean) or the mean stress correction  fails.
Curves are defined as stress range vs . life in cycles ( TYPE=RRATIO  on MATFTG ) or stress amplitude vs . life in
cycles (TYPE=ARRATIO  on MATFTG ). Stresses should be entered in the model consistent units unless the
CNVRT field on MATFTG  is used to convert input stress values to the model consistent units.
Constant Life (Haigh) Curves
This e xample defin es constant life Haigh  (ALIFE ) curves (see simpleSN_v6.dat) . Note that six curves
are defined, one each at 1.0E4 , 1.0E5 , 1.0E6 , 1.0E7 , 1.0E8 , and 5.0E8  constant life (cycles),
respectively.
FATIGUE = 42
$
BEGIN BULK
$
SET1    21      1      !Element 1 only
FTGDEF  42
ELSET   21
FTGPARM 42      SN
STRESS  ABSMAXPR INTERP                 0
DTI     UNITS   1                                       MPA
$
FTGLOAD 42      11      1       1.0     1.0     0.0
TABLFTG 11&lt;/p&gt;
&lt;p&gt;93 CHAPTER 3
A Simple S-N Analysis
Main Index
0.0     1.0     -1.0    0.0     ENDT
$
$ Description of Material : Wrought AlAlloy 7075-T6510 (Haigh)
MAT1     1      6.9E4           .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          565.0   105     ALIFE           0.0
TABLE   1.0E4   31      1.0E5   32      1.0E6   33
1.0E7   34      1.0E8   35      5.0E8   36
TABLEM1 31
0.0     363.0   107.5   322.5   252.5   252.5   412.5   137.5
ENDT
TABLEM1 32
-95.0   285.0   0.0     260.0   77.5    232.5   190.0   190.0
379.5   126.5   ENDT
TABLEM1 33
-69.0   207.0   0.0     190.0   60.0    180.0   155.0   155.0
315.0   105.0   ENDT
TABLEM1 34
-55.0   165.0   0.0     150.0   49.0    147.0   127.5   127.0
285.0   95.0    ENDT
TABLEM1 35
-52.5   157.5   0.0     145.0   45.0    135.0   120.0   120.0
273.8   91.25   ENDT
TABLEM1 36
-47.5   142.5   0.0     135.0   40.5    121.5   115.0   115.0
270.0   90.0    ENDT
CORR=INTERP  on the FTGPARM  entry should be set to indicate that the mean stress correction is to
interpolate between curves or an error  occurs. Curves are defined as stress range vs. mean stress
(TYPE=LIFE  on MATFTG ) or stress amplitude vs. mean stress ( TYPE=ALIFE  on MATFTG ). Stresses should
be entered in the model consistent units unless the CNVRT field on MATFTG  is used to convert input stress
values to the model consistent units.
Again, experiment by changing the OFFSET field (7) of the FTGLOAD  entry to see how mean stress effects
affect the life prediction.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup94
Main Index
Figure 3-8  Multiple “Con stant Life” Haigh Curve s
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but may appear differently than the Windows forms shown here.
Step 1: Import the Model
1.Start Patran and open a new Patran database and call it simpleSN .
2.Use the Analysis  application (or tab) to import the first input deck associated with this example:
simpleSN_v1.dat (Action = Read Input File ).
3.Make sure the Analysis Preference  is set to MSC Nastran.
Step 2: Check the Model
1.Go to the Loads/BCs  application (or tab).
a.Plot the LBC markers (Action = Plot Markers ).
b.Make sure the Current Load Case  is the imported load case ( Untitled.SC1 ).
c.Select all the LBCs and click Apply .
You should see the constraints and 10,000 N load.&lt;/p&gt;
&lt;p&gt;95 CHAPTER 3
A Simple S-N Analysis
Main Index
2.Go to the Materials  application (or Properties  tab, then click on Isotropic  ribbon icon).
a.Set the Action  to Modify  and select mat1.1 .
Note the values in the Linear Elastic  constitutive model.
b.If there is no current Stress-Life (SN)  constitutive model, create one.
c.If there is, verify the following parameters, which are written to the MATFTG  entry or modify as
necessary:
3.Go to the Element Properties  application (or Properties tab).
a.Set the Action  to Modify .
b.Select the property pshell.1.
Note the properties defined here. Additional fatigue properties can be defined here but are not.
Anything set is the default. Thus all defaults are used for this example, so there is no need to
modify anything. Values for the fatigue properties, if defined, are placed on the PFTG entry. All
other pertinent properties are part of the PSHELL entry and related elements for this model.
4.Go to the Fields  application (or Properties tab and click on one of the Fields ribbon icons).
a.If there is no Non Spatial field ( Field.11)  defining the unit load oscillation, then define one.
Action = Create
Object = Non Spatial
Method = Tabular Input
b.Name it UnitLoad .
c.Use Time (t) as the independent variable.
d.Define 4 points at say, 0, 1, 2, and 3 seconds with values 0.0, 1.0, -1.0, and 0.0.
The time values are arbitrary. They just need to be in ascending order. This field will be
referenced later when associating it to the 10,000 N subcase. This field defines the TABLFTG  entry.Parameter Value
Constitutive Model: Stress-Life (SN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Ultimate Tensile Strength 600.0 MPa
Stress Range Intercept 8948.0 MPa
1st Strength Exponent -0.2
T ransition Point 2.0E8
2nd Strength Exponent 0.0
Standard Error of Log(N) 0.137&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup96
Main Index
Step 3: Check the Fatigue Parameters
1.Go to the Analysis application (Action = Analyze ). Since we read the existing job
simpleSN_v1.dat,  a job by the name of simplesn_v1  has been created.
2.Click on it to restore all its settings.
3.Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form.
4.Check Fatigue Parameters&amp;hellip;&lt;br&gt;
5.Open this form and ensure the following parameters are set, which are written to the FTGPARM  entry.
If a parameter is not mentioned below, use the default value or leave it blank.
6.Close all the forms when done using the OK buttons.
Parameter Value
General Parameters:
Stress Units: MPa
Stress Combination: Abs. Max. Principal
Results Location: Nodal Averaged
Stress-Life (S-N):
Run SN Analysis T urn this ON
Mean Stress Correction: None&lt;/p&gt;
&lt;p&gt;97 CHAPTER 3
A Simple S-N Analysis
Main Index
Step 4: Request the Appropriate Output File
In order to post-process the fatigue results in Patran, make sure that the results are written to the
HDF5  or OP2 file. This is done in the Solution Parameters&amp;hellip; form by opening the Results Output
Format&amp;hellip; form and turning ON the HDF5 and/or OP2  toggle s.
Step 5: Check the Output Requests
1.In the Analysis  application, click on the Subcases&amp;hellip;  form.
2.Click on our subcase called Untitled.SC1 , from the Available Subcases  list box to access all its
settings.
3.Open the Output Requests&amp;hellip;  form. It is best to set this form to the advanced setting Form Type: .
If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an S-N material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed (but Patran  always write s one).
At this point, nothing further is need to be defined on this form unless you want to limit the elements
included in the analysis in which case you would select items from the two top list boxes on the right
side of the form in advanced mode.
Fatigue life output requests are subcase independent unlike most standard output requests such as
stress and displacement. If you are using multiple subcases, the first subcase selected (see the next step)
must have the Fatigue Life  output request in it.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup98
Main Index
4.When done inspecting this form and adding the fatigue output request, close the form.
5.In the Subcases&amp;hellip;  form, click Apply  to store the changes to this subcase.
Step 6: Check the Cyclic Load Definition
1.Open the Subcase Select&amp;hellip;  form (still part of the Analysis  application). The only subcase that should
be in the bottom list box is Untitled.SC1 .
2.Open the Define Fatigue Load Sequences&amp;hellip;  form.
3.Ensure that the loading associations are set up properly. For the simple loading in this example, we
want to define a single load event (Event: 1) that associates our 10,000 N subcase called
Untitled.SC1  to the load variation defined by the non spatial field created or inspected earlier.
4.Click on the cell under the Subcase  column in the spreadsheet and then select the subcase from the
bottom list box. The next cell should become selected or active.&lt;/p&gt;
&lt;p&gt;99 CHAPTER 3
A Simple S-N Analysis
Main Index
5.Click on the cell under the Time History column. Select the Non-spatial Field  from the appropriate
list box (Field.11 ). The cell has to be selected and made active to make the selection. The single
load event is now defined.
a.In the tree widget on the left, ensure that a Load Sequence with one event is set up.
b.If not, use the right mouse button to click on the Load Sequences  and Add New Sequence .
6.With the right mouse button click on the new sequence and Add Event.&lt;br&gt;
7.Select the one and only event from the list box that appears and click Apply . The load sequence is
now defined.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD  entries.
8.Click OK to close this form.
Step 7: Run the Analysis
Click  Apply  on the Analysis  application form to submit the job ( Method = Full Run ). It is
assumed that Patran has been configured to properly run the correct version of MSC  Nastran.
Step 8: View the Results
1.When the job is complete, attach the MSC Nastran database to Patran to view the results.
2.In the Analysis  application, set the following:
•Action = Access Results
•Object = Attach HDF5
•Method = Result Entities
3.Select the simplesn_v1. h5 file and click Apply .
4.In Results  application and view the results by selecting Damage  (LOG)  or Life (LOG) , Repeats  using
the simpleSN_v1:SN_42  results case.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup100
Main Index
Step 9: Run other Fatigue Jobs
To run the other jobs, import each input deck into a new empty database and repeat the steps
making modifications as necessary as shown below for each different input deck. Alternately, you can
define new jobs in the same database by selecting the existing job simpleSN_v1,  renaming it,
and making the necessary modifications. The table below lists the modifications necessary for each
using the first as a baseline.
Whenever you change a job name you have to reselect the subcases for your job and redefine the
loading sequence - so always inspect the selected subcases and loading sequence before submitting
the job.
Input Deck Modification
simpleSN_v1.dat Baseline - no modifications necessary
simpleSN_v2.dat No modifications necessary. Patran  always write s FTGSEQ , FTGEVNT ,
and FTGLOAD  even for the simplest loading. This example input deck
simply illustrates t hat MSC Nastran does not actually need FTGSEQ&lt;br&gt;
and FTGEVNT  for a simple load as illustrated in this Chapter.&lt;/p&gt;
&lt;p&gt;101 CHAPTER 3
A Simple S-N Analysis
Main Index
simpleSN_v3.dat In the Materials  application select the Stress-Life (SN) constitutive
model for the existing mat1.1  material and change it so that:
Option : Derived
Material (CODE) : Ferrous (99)
Stress : None
Curve T ype : None
Only UTS needs to be defined as 600 MPa. Changing an existing
material changes this for all defined jobs that have elements associated
with this material.
simpleSN_v4a &amp;amp;
simpleSN_v4b.datIn the Fields  application, create three SN curves called SN-50 , SN0,
SN100 .
Action : Create
Object : Material Property
Method : Tabular Input
The independent variable must be Life (N). Enter the data for each S-N&lt;br&gt;
curve as Stress (Data) vs. Life (N). (If you import the deck they appear
as Field.31, Field.32, Field.33.)
1.In the Materials  application select the Stress-Life (SN)
constitutive model and change it so that:
Option : Tabular
Material (CODE) : Ferrous (99)
Stress : Range
Curve T ype : Constant Mean.
2.Define UTS as 552 MPa and SE as 0.3.
3.For Value 1, 2, &amp;amp; 3 enter -50.0, 0.0, and 100.0.
4.For SN Curve 1, 2 , &amp;amp; 3, select the corresponding material Fields
created earlier.
Mean Stress Correction should be set to Interpolation in the Fatigue
Parameters&amp;hellip;  form. The Interpolation Limit should be set to Use Max.
Curve for simpleSN_v4a.dat  and Extrapolate  for
simpleSN_v4b.dat .
For simpleSN_v4b.dat,  change the Offset  on the Define Fatigue
Load Sequences&amp;hellip;  to 0.3Input Deck Modification&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup102
Main Index
simpleSN_v5.dat Similar setup as simpleSN_v4a.dat with some exceptions. The
SN curves are different.
1.Create the five S-N curves using the Fields  application as before
and call them SN_RR-1, SN_RR-.4, SN_RR0,
SN_RR.2, SN_RR.5 . If you import the deck they come in
as Field.31 thru Field.35.
2.Modify the Stress-Life (SN) constitutive model to use these S -N
curves as Curve Type =Constant R-Ratio and enter Value 1 -5 as
-1.0, -0.4, 0.0, 0.2, and 0.5.
3.The material was changed to use Wrought AlAlloy 7075-
T6510. So set the Material (CODE) : Aluminium (100).
4.Modify the Elastic  constitutive model to use E=7.0E4 and the
UTS is now 585.0 MPa and SE = 0.0.
Mean Stress Correction should be set to Interpolate in the Fatigue
Parameters&amp;hellip;  form. The Interpolation Limit should be set to Use Max.
Curve.
simpleSN_v6.dat Similar setup as simpleSN_v4a.dat with some exceptions. The
S-N curves are different and this time must be entered as mean stress
(Data ) vs. stress amplitude ( Life (N) ). You still use Life (N) as the
independent variable even though for a Haigh curve the independent
variable is stress amplitude.
1.Create the six Haigh curves and call them HAIGH1e4,
HAIGH1e5, HAIGH1e6, HAIGH1e7, HAIGH1e8,
HAIGH5e8.
2.Modify the Stress-Life (SN) constitutive model to use these
Haigh curves as
Stress: Amplitude
Curve Type : Constant Life
3.Enter Value 1-6 as 1e4, 1e5, 1e6, 1e7, 1e8 and 5e8.
If you import the deck they come in as Field.31 thru Field.36.
4.The material was changed to us Wrought AlAlloy 7075-T6510.
So the Elastic constitutive model has to be modified to use
E=6.9E4 and the UTS is now 565.0 MPa with SE = 0.0.
Material (CODE) :Aluminium (100).
Mean Stress Correction should be set to Interpolate in the Fatigue
Parameters&amp;hellip;  form. The Interpolation Limit should be set to Use Max.
Curve.Input Deck Modification&lt;/p&gt;
&lt;p&gt;103 CHAPTER 3
A Simple S-N Analysis
Main Index
CAEfatigue Setup
This section explains how to run the examples in this Chapter through CAEfatigue. The Nastran Embedded
Fatigue (NEF) interface in CAEfatigue must start with a run-ready SOL 101 (linear static) input deck of the
analysis job. CAEfatigue then allows you to set up all the fatigue parameters, material properties, and cyclic
loading from which include file(s) are created. The include files can be manually inserted into the linear static
input deck or CAEfatigue can submit the job directly and insert the include files automatically. The job is
run through MSC.Nastran and the results can be postprocessed directly in CAEfatigue.
Step 1: Edit Input File
Before actually starting this exercise via CAEfatigue, edit the simpleSN_v1.dat  and remove (or
comment out) the following entries so that there are no fatigue related entries in the input file and
only the static analysis itself is left:
•FATIGUE  - remove or comment out this case control output request
•FTGDEF  / PFTG- remove or comment out the fatigue definition entry including the fatigue property
associated with it. You can also remove the SET4 entry referenced by the FTGDEF  entry.
•FTGPARM  - remove or comment out the fatigue parameters entry.
•DTI,UNITS  - remove or comment out the model units entry.
•FTGSEQ  / FTGEVNT  / FTGLOAD  / TABLFTG  - remove or comment out all of these entries that define the
cyclic loading behavior.
•MATFTG  - remove the material S-N definition entry and all associated lines (STATIC, SN, etc.)
You can run the input deck through MSC.Nastran to check that it properly runs and no fatigue
analysis is executed.
Step 2: Import the Model
1.Start CAEfatigue and under the File menu open a new Nastran Embedded Fatigue  / SOL 101&lt;br&gt;
process flow. Use the File | Save As  pull down menu and save your work. Call it simpleSN _v1.
The CAEfatigue process flow database is labeled with .cfmodel extension.
2.In the process flow graphical area, click on the Resources  window.&lt;br&gt;
This brings up the RESOURCES TABLE on the left side of the screen. Click on the icon with three
dots (the ellipses &amp;hellip;) to browse for the input file that you edited and select it: simpleSN_v1.dat .
You should now be able to see the model in the Fringe Plot  window, when you click on it to activate
the window.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
CAEfatigue Setup104
Main Index
Step 3: Set up the Fatigue Material Properties
1.Click on the Materials  window in the process flow.
2.On the left, change the Material Source  to Custom  and then enter the material properties for UTS
(600), E (203403), and SE (0.137). Leave all else as default values.
3.Next, open the SN definition by clicking on the SN toggle and enter the following properties:
SRI1(8948), b1(-0.2), NC1(2e8), b2(0.0), Nfc:(1e30).
Your material is now defined. If you double click on the name ( mat1 ) on the top left you can rename
it to anything you want. The material property should show MPa  as the MATERIAL UNITS and
Range  as the STRESS UNIT by default.
Step 4: Associate the Model to the Material
1.Click on the Time Analysis  window in the process flow.&lt;br&gt;
You should see (on the top left) that mat1  is associated to All Elements  under the MATERIALS
MAPPING. You do not need to change this as this is what we want.
Step 5: Set up the Fatigue Parameters
1.Still with the Time Analysis  window active in the process flow. You should see (on the top left) the
ANALYSIS PARAMETERS. Open this tab and change the Stress Combination  to Maximum
Principal . Accept the defaults for the rest of the parameters.
2.Open the UNITS tab and just ensure that the Stress Unit  is set to MPa . Force  and Length  units
should be set to Newton  and Millimeter , respectively.
3.Under the OUTPUT tab, change Location  to Center  + Corner .&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P7</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_007/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_007/</guid>
      <description>
        
        
        &lt;p&gt;105 CHAPTER 3
A Simple S-N Analysis
Main Index
4.Enter Cycles as the Equivalent Name  and 1.0 for the Equivalent Units .
All other tabs and their parameters have default settings.
Step 6: Set up the Cyclic Load Definition
1.Click on the Time Load Scheduler  window in the process flow. For our example problem, there is
only one loading sequence with only one event and only one load in that event.
2.Click on Event 1  in the Time Load Scheduler  window (click anywhere in the orange area to turn it
blue, indicating it is selected/active). Accept all defaults. There is only one event and no additional
events are to be added. Simply note the event properties on the left side of the screen. The event only
has one channel of data, called Channel 1 . The channel of load data corresponds to the one and only
load applied to the model.
3.Delete Channel 1  because we are going to re-define it. Press the trash can icon below the Channel 1&lt;br&gt;
label. Then click the ADD CHANNEL button. On the right side of the screen click the Loads  icon
and then click the table icon below it and drag it onto Channel 1. On the left side of the screen set
the DeltaT  (time step) to one (1) and the Duration  to three (3) under the EVENT tab and add the
following TIME/HEIGHT pairs to the table under the TABLE tab: (0,0) / (1,1) / (2,-1) / (3,0) to
define the fully reversed load.
4.Associate Channel 1 to Load Case 1 (SUBCASE 1)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
CAEfatigue Setup106
Main Index
Finally note on the bottom left that the CHANNEL LOAD MAPPING shows that Channel 1  is
associate to Load Case 1. (You may have to select it from the list under LOAD CASE if not selected
by default.) This means that the load from the MSC.Nastran SUBCASE 1 (the 10,000 N load in the
finite element model) oscillates according to the time variation set up in Channel 1 . By reading in the
input file, CAEfatigue knows all SUBCASEs (designated as LOAD CASEs by CAEfatigue). Since
there is only one SUBCASE and only one event, the mapping is automatic.
The job is now ready to run.
Step 7: Save the CAEfatigue Process Flow
Use the File | Save pull down menu and save your work.
Step 8: Run the NEF Analysis
1.Click on the Run window in the process flow.
2.If all you desire are the include files for running the analysis, press the EXPORT button. You must
manually insert the Nastran INCLUDE statement in your input file and then submit the job
manually if you use this option.
3.If you wish to run the NEF analysis through Nastran, press the RUN button. The NEF analysis runs
as long as the path to the MSC.Nastran executable is set properly (check the Nastran  tab under the
Tools  | Settings  pull down menu). A new input file is created called simpleSN_v1_NEF  and the
include files are automatically set within the new input file. The include files are created in a sub-
directory at the same directory level as the new input file. The sub-directory name is
simpleSN_v1_cfjob .
Three include files are created:
•simpleSN_v1_cc.inc  (This is the Case Control with FATIGUE  output request)
•simpleSN_v1_bulk.inc  (This is the Bulk Data with NEF related entries)
•simpleSN_v1_timedata_Event1.bdf  (This is the Bulk Data with TABLED1 entries)
Step 9: Review the Results&lt;/p&gt;
&lt;p&gt;107 CHAPTER 3
A Simple S-N Analysis
Main Index
1.After the analysis is run, the include files and results can be viewed directly from CAEfatigue by
clicking on the READ button in the Nastran Output  window. The Main input file, with the
INCLUDE statements and Bulk Data include file can be viewed from the tabs at the bottom of the
screen: Main BDF  and Fatigue BDF . The MSC.Nastran log and f06 print files can also be viewed
from those tabs.
2.Make a fringe plot of the Log of Damage. Click on the Fringe Plot window. On the left, set the
Results under the FRINGE SOURCE tab to Log Damage (Duty Cycle).
Step 10: Notes on Output
The main input deck is copied and modified to include the Nastran include files as such (partial
listing shown):
SOL 101
CEND
$
TITLE=Keyhole NEF Model (A Simple S-N Analysis)
&amp;hellip;
include &amp;lsquo;simpleSN_v1_cfjob\simpleSN_v1_cc.inc&amp;rsquo;
SUBCASE 1
&amp;hellip;
$
BEGIN BULK
&amp;hellip;
include &amp;lsquo;simpleSN_cfjob\simpleSN_v1_bulk.inc&amp;rsquo;
&amp;hellip;
The first include file is placed in the case control section and includes the following output
request:
$ File: ./simpleSN_r1_cfjob/simpleSN_r1_cc.inc
$ Generated by CAEFatigue (2021.4 6314)
$
FATIGUE(SORT1,PRINT,FORMAT=64,BULK)= 42
$&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
CAEfatigue Setup108
Main Index
The second include file contains the fatigue related bulk data as shwon here:
$ File: ./simpleSN_r1_cfjob/simpleSN_r1_bulk.inc
$ Generated by CAEFatigue (2021.4 6314)
$
FTGPARM 42              1.              0    &lt;br&gt;
stress  absmaxprnone            node &lt;br&gt;
MATFTG  60   &lt;br&gt;
static          600.    99      range                        &lt;br&gt;
sn      8948.   -0.2    2e+08   0.      1e+30        &lt;br&gt;
matid   203403.
1    &lt;br&gt;
FTGDEF  42      100. &lt;br&gt;
FTGSEQ  42      1            &lt;br&gt;
101     1.   &lt;br&gt;
FTGEVNT 101     401  &lt;br&gt;
name    Event1&lt;br&gt;
INCLUDE &amp;lsquo;simpleSN_r1_cfjob/simpleSN_r1_timedata_Event1.bdf&amp;rsquo;
FTGLOAD 401     101     1               1.   &lt;br&gt;
A third include file ( simpleSN_v1_timedata_Event1.bdf ) is embedded within the bulk
data portion that includes the load variation with time. In this case, the load variation is simple
and consists of just a single table entry. More complicated loading sequences with multiple events
and multiple simultaneous loading per event (channel data) can consist of many more tables of
data. For this reason it is placed in its own include file.
TABLED1      101  LINEAR  LINEAR
,0.0E+00,0.0E+00,1.0E+00,1.0E+00,2.0E+00,-1.0E+00,3.0E+00,0.0E+00
, ENDT
Note:   The following notes are given that explain a few differences that occur in this output relative to
the original example problem:
1.CAEfatigue allows you to define the main fatigue ID (42), known as the Job ID under
the JOB info when the Time Analysis  window is active. However all IDs referenced
below this level are automatically generated for FTGEVNT , FTGLOAD , PFTG, SET4 , MATFTG ,
etc.
2.The MATFTG  entry always uses the MATID keyword to associate any MAT1 entries to the
fatigue material.
3.The results at the critical location are the same as with the original NEF analysis in this
example. However, if you look closely at the FTGPARM  entry, LOC field six (6), is set to
NODE instead of NODA (nodal average) as originally set up in the Nastran input file.
The results are the same at the critical location (Node 1) because there are no
contributions to fatigue life from any other elements for this particular node only. Results
at any other nodes are different due to the fact that no nodal averaging is being done from
the NEF run set up by CAEfatigue.&lt;/p&gt;
&lt;p&gt;109 CHAPTER 3
A Simple S-N Analysis
Main Index
Step 11: Run other Fatigue Jobs
To run the other jobs, import each input deck into a new NEF process flow for Time Quasi-Static&lt;br&gt;
and repeat the steps making modifications as necessary as shown below for each different input
deck. Or you can simply modify your original process flow.
Input Deck Modification
simpleSN_v1.dat Baseline - no modifications necessary
simpleSN_v2.dat No modifications necessary. The job is setup identically and the same
output is created.
simpleSN_v3.dat In the Materials  window, set the Material Source to Auto EN/SN . Set
the following:
Auto EN/SN : SN
UTS : 600.0
Material Type : Ferrous
Only UTS needs to be defined as 600 MPa.
simpleSN_v4a .dat In this examples, only Node 1 is analyzed. This requires that
CAEfatigue read in the SET bulk data in order to recognize an element
set. Also the S-N definition is tabular and multiple S-N curves are
defined at different means, and the mean stress correction is requested.
In the Materials  window, set the Material Source  to Custom . Enter the
STATIC PROPERTIES as in previous exercises, but this time activate
MULIT SN and enter the following data:
Multi Curve T ype : Mean Stress
MEAN STRESS VAL : -50., 0.0, 100.0
Activate each mean stress value individually and enter the values (this
needs to be done for each mean stress value):
Mean : -50.
CYCLES : 7729, 31500, 1.6e5, 1.08e6, 1.14e7, 5.12e8, 1.74e12
STRESS : 800, 700, 600, 500, 400, 300, 200
Mean : 0.
CYCLES : 3102, 2651e4, 6.4098e4, 4.369e5, 4.576e6, 9.45e7, 3.05e11, 3.3e17
STRESS : 800, 700, 600, 500, 400, 300, 200, 100
Mean : 100.
CYCLES : 7729,31500,1.6e5,1.08e6,1.14e7,5.12e8,1.74e12
STRESS : 800, 700, 600, 500, 400, 300, 200. 100&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
CAEfatigue Setup110
Main Index
In the Time Analysis  window, set the Mean Stress Correction  to
Interpolation (Multi-SN or Digimat)
Next click on the Pick button under MATERIAL MAPPING to select
the element set. Set to Nastran SET Filenames ; pick the
simpleSN_v1.dat  file;  then select ID 1. This sets the element
selection to only the elements in SET1 of ID1 from this input file.
simpleSN_v4b.dat Follow instruction from the previous example except set the following
load offset to produce a mean stress:
simpleSN_v5.dat Similar setup as simpleSN_v4a.dat  with one e xceptions. The SN
curves are different . In the Materials  window, set the Material Source&lt;br&gt;
to Custom . Activate MULIT SN and enter the following data:
Multi Curve Type : R-ratio
MEAN STRESS VAL : -1, -0.4, 0.0, 0.2, 0.5
Activate each R-ratio value individually and enter the values (this needs
to be done for each R-ratio value):
R-RATIO : -1.
CYCLES : 1e4, 1e5, 1e6, 1.e7
STRESS : 820, 550, 350, 300
R-RATIO : -0.4
CYCLES : 1e4, 1e5, 1e6, 1.e7
STRESS : 650, 435, 315, 265
R-RATIO : 0.
CYCLES : 1e4, 1e5, 1e6, 1.e7
STRESS : 525, 365, 280, 245
R-RATIO : 0.2
CYCLES : 1e4, 1e5, 1e6, 1.e7
STRESS : 440, 325, 255, 225
R-RATIO : 0.5
CYCLES : 1e4, 1e5, 1e6, 1.e7
STRESS : 295, 250, 200, 175Input Deck Modification&lt;/p&gt;
&lt;p&gt;111 CHAPTER 3
A Simple S-N Analysis
Main Index
simpleSN_v6.dat Similar setup as simpleSN_v4a.dat  with two exceptions. The
material and the SN curves are different.
In the Materials  window, set the Material Source  to Custom . The
material is changed to us Wrought AlAlloy 7075-T6510. So the
STATIC PROPERITES need to be changed so that UTS is now 565.0
MPa with SE = 0.0. and the M aterial Type  to Aluminium  (100).
Activate MULIT SN and enter the following data:
Multi Curve T ype : Haigh Life
HAIGH LIFE VALUE : 1e4, 1e5, 1e6, 1e7, 1e8, 5e8
Activate each Life value individually and enter the values (this needs to
be done for each Life value):
Haigh Life : 1e4
MEAN STRESS : 0.0, 108, 253, 413
STRESS : 363, 322.5, 252.5, 137.5
Haigh Life : 1e5
MEAN STRESS : -95, 0, 77.5, 190, 380
STRESS : 285, 260, 232.5, 190, 126.5
Haigh Life : 1e6
MEAN STRESS : -69, 0, 60, 155, 315
STRESS : 207, 190, 180, 155, 105
Haigh Life : 1e7
MEAN STRESS : -55, 0, 49, 128, 285
STRESS : 165, 150, 147, 127, 95
Haigh Life : 5e7
MEAN STRESS : -5.25, 0, 45, 120, 274
STRESS : 157.5, 145, 135, 120, 91.25
simpleSN_v7.datInput Deck Modification&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
CAEfatigue Setup112
Main Index&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 4: Rainflow Cycle Counting
4 Rainflow Cycle Counting
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description114
Main Index
Proble m Descrip tion
This example is an extension of the previous exa mple where the simple constant amplitude loading is replaced
with a more complex , randomly varying time signal. Review the previous chapter before reading this chapter
as this chapter builds on the concepts already introduced.
Figure 4-1  Varying Load Signal, saetrn.dac
Objective
To predict the life of the keyhole subject to a varying load signal.
To understand how to normalize the FE stresses.
To introduce the concept to  Rainflow Cycle Counting .
To introduce the concept of Damage Summation .
To investigate the effect of Mean  stress.
To investigate the probabilistic nature of fatigue.
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 4-1  Files Required
Files Required Description
RFCount_v1.dat Original Input File - Entire model
RFCount_v2.dat Original Input File - Element 1 only
RFCount_v3.dat Time history compression, Entire Model
RFCount_v4.dat Mean Stress Correction, Certainty of Survival (MANTEN_MSN)
RFCount_v5.dat Mean Stress Correction, Certainty of Survival (RQC100_MSN)
RFCount_v6.dat Multiple Constant Mean Stress S-N Curves&lt;/p&gt;
&lt;p&gt;115 CHAPTER 4
Rainflow Cycle Counting
Main Index
Fatigue Setup
This fatigue analysis is set up almost exactly as the example in the previous chapter using a linear static
solution (SOL 101) with a load magnitude of 10,000 Newtons. The difference is the cyclic loading
definition. Thus, only this portion of the input deck is explained in detail. No FTGDEF  and FTGPARM  entries
are used since all the elements of the model are included in the fatigue analysis and an S-N analysis using all
default parameters is all that is necessary for this example. The partial input deck is shown below (see file
RFCount_v1.dat ).
SOL 101
CEND
$
TITLE = Keyhole Model (Rainflow Cycle Counting)
$
FATIGUE = 42
$
SUBCASE 1
SPC  = 2
LOAD = 6
STRESS  = ALL
$
BEGIN BULK
PARAM    POST    1
MDLPRM   HDF5    0
$
$ Fatigue Cyclic Loading
$
FTGLOAD 42      18      1       10000.  1.0     0.0     DB
UDNAME  18
./saetrn.dac
$
$ Partial Listing of Elements and Element Property
$
PSHELL   1       1       9.525   1               1
CQUAD8   1       1       1       3       23      21      2       15
22      14                                      0.      0.
CQUAD8   2       1       3       5       25      23      4       16
24      15                                      0.      0.
&amp;hellip;RFCount_v7.dat Multiple Constant Mean Stress S-N Curves - w/ Extrapolation
RFCount_v8.dat Multiple Constant R-Ratio S-N Curves
RFCount_v9.dat Multiple Constant Life (Haigh) Curves
RFCount_v11.dat Factor of Safety Analysis
saetrn.dac
saetrn01.pvxCyclic load definition file
Compressed Cyclic load definition fileTable 4-1  Files Required  (continued)
Files Required Description&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup116
Main Index
CQUAD8   224     1       807     809     826     824     808     815
825     814                                     0.      0.
$
$ Material Records - for MANTEN_MSN
$
MAT1     1       203403. 78231.7 .3      0.      0.      0.      0.
MATFTG  1       1.0
STATIC          600.0                           0.137
SN      8948.0  -0.2    2.e8    0.0
$
$ Partial Listing of Nodes of the Entire Model
$
GRID     1               63.8175 0.      0.
GRID     2               63.8283 .320863 0.
&amp;hellip;
GRID     826             127.    3.175   0.
$
$ Loads and Constraints
$
SPCADD   2       1       4
LOAD     6       1.      1.      1
$
$ Parital listing of Displacement Constraints
$
SPC1     1       2       1
&amp;hellip;
SPC1     4       345     817     THRU    826
$
$ Nodal Force
$
FORCE    1       394     0       10000.  0.      1.      0.
$
ENDDATA
Case Control
In order to perform a fatigue analysis, there must be a FATIGUE  case control:
FATIGUE = 42
The ID referenced is ID 42. The analysis expects to find a FTGLOAD  of ID= 42 (or a FTGSEQ , but in this case,
since no FTGSEQ  of ID 42 exists, then FTGLOAD  of ID 42 must exist or a fatal error  occurs). The only other
fatigue related bulk data entry that is absolutely required is MATFTG . Default parameters and all elements
associated with a fatigue material property are used by default if no FTGDEF  and/or FTGPARM  entries are present.
Material and Physical Properties
See Material and Physical Properties  (Ch. 3) in the  as they are identical.&lt;/p&gt;
&lt;p&gt;117 CHAPTER 4
Rainflow Cycle Counting
Main Index
Fatigue Parameters
See Fatigue Parameters  (Ch. 3) in the  as they are identical.
Cyclic Loading
The load applied in the FE model is a static load of 10,000 N. Fatigue analysis employs a pseudo-static
method where the cyclic variation of the static loading must be defined.   As opposed to the previous example
using the keyhole model ( Cyclic Loading  (Ch. 3) in the ), the time signal used in this analysis is rather long and
complex, possibly random in nature, as shown in Figure 4-1. Signals such as this one are typically some sort
of measured load stored in an external file.
The FATIGUE  case control calls out FTGLOAD  bulk data of ID 42. This portion of the input deck defines the
cyclic load variation. A FTGLOAD  entry is required in this example or an error  is issued.
$ Fatigue Cyclic Loading
$
$       ID      TID     LCID    LDM     SCALE   OFFSET  TYPE
$       &amp;ndash;      &amp;mdash;     &amp;mdash;-    &amp;mdash;     &amp;mdash;&amp;ndash;   &amp;mdash;&amp;mdash;  &amp;mdash;-
FTGLOAD 42      18      1       10000.  1.0     0.0     DB
UDNAME  18
./saetrn.dac
This FTGLOAD  entry associates the FE stresses from SUBCASE 1 (LCID field four (4) on FTGLOAD ) and the
corresponding cyclic variation of that loading, thus defining the cyclic stress variation. A large TABLFTG  entry
could have been used as in the previous example. However, the time variation for this example is stored in
an external DAC file called saetern.dac .
A DAC file is a standard binary file used to store measured load data. Various utilities (such as those included
with CAEfatigue)  exist to create, edit, and plot data from DAC files. Utilities also exist to convert other types
of files, such as RPC and CSV files, to DAC files.  (See Utilities  (App. C).) The FTGLOAD  allows for specification
of a DAC file as opposed to using a TABLFTG . A DB  (or DAC) f lag in field eight (8)  indicates that the TID
in field three ( 3) refers to a UDNAME  entry that lists the DAC file and its full or relative directory path. If no
directory path is given, the file is assumed to exist in the same directory as the input file.
Load Normalizing, Scaling  and Offsets
In the previous example we entered unity for the load magnitude (LDM field 5 on FTGLOAD ) accepting the
FE load as being the true representation of the load and thus the stresses. The time history defined by the
TABLFTG  entry scaled the stress distribution between 1 and -1 to signify the time variation of the loading. This
time the time history saetrn.dac  is used to define the actual loading as it changes with time. The FE load
magnitude is therefore simply an arbitrary number used to obtain the stress distribution. The stresses in the
FE analysis need to be normalized by this FE load magnitude of 10000  N, to simulate the stress distribution
due to a unit load.
FTGLOAD 42      18      1       10000.  1.0     0.0     DB
The load magnitude acts as a divisor to normalize the stresses to obtain a stress distribution due to a unit load
as in the equation ij(t)=P(t)ij/Pfea. Where ij and Pfea are the stress tensor and load magnitude, respectively,
from the FE analysis. P(t) is the externally defined time variation of the loading. And ij(t) is the resulting&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup118
Main Index
time variation of the stress tensor (at any particular location in the component). This can be done because
the analysis is linear elastic. Using linear elastic FE analysis and associating an external time variation of the
loading for fatigue analysis is called the pseudo-static  method.
Fatigue Equivalent Units
No fatigue equivalent units are defined for this problem. Thus the fatigue life is reported  as Repeats  (of the
time history load or the cyclic load variation).
Fatigue Results
Run the RFCount_v1.dat file using a supported version of MSC Nastran (  201 6) and ensure that the
saetrn.dac  file is available in the same directory. Then inspect the rfcount.f06  file.
Listing 4-1  Fatigue Life and Damage for Nodes of Element 1
Rainflow Cycle Co unting
This analysis takes slightly longer to run to completion than the previous example due to the complex nature
of the time signal. The program is performing a procedure called Rainflow Cycle Counting , sometimes
referred to as preprocessing in a fatigue analysis. Cycle counting is a mechanism to extract and count the
number of stress cycles in a signal and must be done before damage can be determined and summed due to
each stress cycle.                                                                                             EVENT ID  ALL EVENTS  FATIGUE ID      42
F A T I G U E   R E S P O N S E   I N   Q U A D 8   E L E M E N T S               OPTION =NODA
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (      REPEATS       )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
1        1  Z1    0.1885E+06   5.28   0.1885E+06   5.28   0.5305E-05  -5.28   0.3328E+03  -0.1649E+03                &lt;br&gt;
3  Z1    0.1974E+06   5.30   0.1974E+06   5.30   0.5067E-05  -5.30   0.3299E+03  -0.1635E+03                &lt;br&gt;
23  Z1    0.1722E+07   6.24   0.1722E+07   6.24   0.5809E-06  -6.24   0.2174E+03  -0.1077E+03                &lt;br&gt;
21  Z1    0.1600E+07   6.20   0.1600E+07   6.20   0.6252E-06  -6.20   0.2206E+03  -0.1093E+03&lt;/p&gt;
&lt;p&gt;119 CHAPTER 4
Rainflow Cycle Counting
Main Index
Figure 4-2  Rainflow Cycle Counting Illustrated
The term Rainflow  is attributed to two Japanese gentlemen, Ma tsuishi and En do, who are credited with
defining the method. It is based on the concept of raindrops flowing off Japanese style pagoda roofs. Time
history signals are stood on end and rain is visualized to run off of each peak or valley.
Various rules are adopted to count cycles and reversals which is beyond the scope of this text; but suffice it
to say that the end result of rainflow cycle counting is a set of constant amplitude signals and a count of the
number of cycles of each. Cycle counts can be visualized as Probability Density Function (PDF)  or as three
dimensional histogram matrices.
The plot in Figure 4-3 shows the constant amplitude signals determined from the cycle counting procedure
broken up into various bins, each with its own stress range and mean. The more discretized the bins are, the
more accurate the damage calculation and summation due to each bin. The damage histogram plots shows
the amount of damage due to each bin of stress cycles.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup120
Main Index
Figure 4-3  Cycle and Damage Histogram Plots
Damage Su mmation
It is important to break up a variable signal into a number of constant amplitude signals in order to assess the
life from the S-N curve. The curve itself is created by a series of constant amplitude tests. So for each cycle in
the signal you must look up the proper stress from the S-N curve. What stress to look up is the job of rainflow
cycle counting. The next challenge to tackle is the summation of the damage from each cycle in order to
report a total life due to all cycles. This is accomplished by way of the Palmgren-Miner linear Damage
Summation  law.
This states that damage can be summed by determining the ratio of the number of cycles experienced to the
number of cycles to failure for a given stress range or level and then summing all the ratios for every stress
range. When this number, known as Miner’s Constant , reaches unity, failure is said to have occurred. The
predicted life is then determined by summing the percentage of life used by each stress level for the entire
time signal. Life is then reported back as to the number of times the given time signal can be applied before
failure.&lt;/p&gt;
&lt;p&gt;121 CHAPTER 4
Rainflow Cycle Counting
Main Index
Figure 4-4  Palmgren-Miner Da mage Summation Law
Speeding up the Analysis
There are two ways that you could speed up this analysis. This fatigue analysis is already very fast, but:
First, we already know where the failure location is (at the point of highest stress). This is because of
the simplicity of this model and the fact that there is only a single load application point and
direction.
Therefore, we could define only element one (1) in a SET1 entry specified on the FTGDEF  entry. This
however, would only calculate life at this one element and would ignore the rest of the model (see
input deck RFCount_v2.dat ).
SET1    21      1
FTGDEF  44
ELSET   21
Secondly, we could r educe or eliminate u nwanted cycles (or cycles that potentially cause little or no
damage and can therefore be eliminated from the analysis). For a single load event, a normal
rainflow procedure is applied to each requested location of the model once the stress time variation
is determined.
By compressing the load time signal first, this speeds up the analysis significantly for a complex time
signal. It does however, produce slightly less accurate results in that some damaging cycles may be
eliminated, especially if there happen to a lot of them.
Hint:   This is where user-defined fatigue equivalent units come in handy, because rarely does one want
life reported in Repeats  of the time signal, but rather in more meaningful units such as hours,
miles, years, laps, missions, etc. This is accomplished by defining these user-defined units on the
FTGLOAD  entry.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup122
Main Index
This can be accomplished by using a peak-valley extraction or other time history compression
procedure on our external saetrn.dac  file. CAEfatigue gives access to a utility called mpvxmul  to
do exactly this procedure. Running saetrn.dac  through this compression routine to create
saetrn01.pvx  reduces the number of data points (and thus cycles) by an order of magnitude, but
retains all the damaging cycles. ( RFCount_v3.dat ).
Note: Significant improvements in performance have been made over the span of the last releases that
time history compression is no longer needed in most cases.
Effect of Mean Stress
Now let us investigate the effect of  Mean  stress on the fatigue life predictions. First remember that the S-N
curve we are using was produced for an R-ratio of minus one (-1), or in other words, zero mean stress. The
time history used in this example has a predominately tensile mean. The initial life prediction did not take
into consideration this mean stress and therefore could perhaps be giving a somewhat non-conservative
answer. Various mean stress correction methods are available on the FTGPARM  entry. Let us investigate
GOODMAN  and GERBER . Note that both of them give more conservative answers (see input deck
RFCount_v4.dat ).
FTGPARM 45      SN
STRESS  ABSMAXPR GOODMAN        NOD A
and
FTGPARM 46      SN
STRESS  ABSMAXPR GERBER         NOD A
How is mean stress comp ensated for in the S-N analysis?
The simple way to explain this is that for both the Goodman and Gerber methods, knowing the ultimate
tensile strength (Su) and the actual stress amplitude ( a) and mean ( m), an equivalent stress range with zero
mean is determined (Se). Goodman and Gerber follow these equations:
Graphically this looks like the plot below where, at least for Goodman, if you draw a line connecting Su to
the intersection of a and m and then continue it on to the stress amplitude axis, this  indicate s the equivalent
stress Se with zero mean. This stress is then used to look up damage on the S-N curve.a
Se&amp;mdash;&amp;mdash;m
Su&amp;mdash;&amp;mdash;-+ 1  Goodman =
a
Se&amp;mdash;&amp;mdash;m
Su&amp;mdash;&amp;mdash;-
2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1  Gerber =&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;123 CHAPTER 4
Rainflow Cycle Counting
Main Index
Figure 4-5  Goodman &amp;amp; Gerber Mean Stress Correction
Prob abilistic Natu re of Fatigue
As a final exercise in this example, let us investigate two different materials. The material used thus far is
called MANTEN_MSN . Substitute the following RQC100_MSN  into the input deck as such (see input deck
RFCount_v5.dat) :
$
$ Material Records - for RQC100_MSN
$
MAT1     1       203403. 78231.7 .3      0.      0.      0.      0.
MATFTG  1       1.0
$       STATIC  YS      UTS     CODE    TYPE    RR      SE
STATIC          800.0                           0.433
$       SN      SRI1    b1      Nc1     b2      Nfc
SN      13240.0 -0.216  1.e8    0.0
The significant difference between the two materials is the SE field.
RQC100_MSN,  being a much higher strength steel, gives a much higher life prediction (364,400 repeats vs.
188,500 repeats) for no mean stress corrections. One might conclude that RQC100_MSN is a better material
to use. Looking at the S-N curve might indicate this also.
On the FTGPARM  entry change the design criterion or certainty of survival (SURV field on CERNTY line) to
99% and rerun the analysis, once using MANTEN_MSN  and again using RQC100_MSN .
FTGPARM 44      SN
STRESS  ABSMAXPR NONE           NOD A
Note:   As a stress range of a cycle becomes larger and larger, there tends to be less and less possible
variability in the mean of that cycle. This is indicated on the cycle histogram plot since the base
of these type of plots tends to be triangular in nature, which means that as the stress gets larger,
the mean stress has less of an effect on the fatigue life.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Concluding Remarks124
Main Index
$       CERTNTY SURV
CERTNTY 99.0
The life of approximately 90,50 0 repeats versus 3 5,800 repeats, less than that of the lower strength steel. This
is due to the probabilistic nature of fatigue and the scatter associated with the S-N curves themselves. By
specifying 99% as the design criterion, we are asking to calculate a life value based on a 99% certainty of
survival. The larger the scatter in the original S-N data that makes up the curve, the less certain we are of
survival and the code takes this into account by reporting a more conservative answer. The default is a 50%
probability of survival (or failure).
.
Table 4-2  Mean Stress Correction Results
Other mean stress correction methods can be employed using the multi-curve method as explained in the
previous Chapter. (See input files RFCount_v6.dat  through RFCount_v 9.dat. )
Concluding Remarks
This exercise introduced you to Rainflow Cycle Counting , Damage Summation , Mean  stress  effects, and the
probabilistic nature of fatigue by using a randomly varying load on our simple keyhole model. Though this
example still did not help us identify critical locations since we already knew where failure would occur, it did
start to show the power of MSC Nastran Embedded Fatigue analysis by being able to handle complex time
signals and to make compensation for parameters that may effect the fatigue life, something that would be a
daunting task to do by hand.
The fatigue analysis does not take into account the frequency (speed at which cycles are experienced) or the
sequence (when a particular cycle is experienced relative to other cycles) of cycles from a given signal. Note:   Scatter is associated with S-N curves and other damage curves due to the fact that, for example, if
you take 10 identical test coupons and subject them to what you think are identical tests, you will
get ten slightly different answers. The material parameters associated with S-N curves take this
into consideration with the Standard Error of Log(N) (SE) determined by regression analysis of
the raw data.
Mean Stress Correction (50% Certainty of Survival)
None Goodman Gerber
MANTEN_MSN 188,500 (Repeats) 85,900 (Repeats) 169,800 (Repeats)
RQC100_MSN 364,500 (Repeats) 216,200 (Repeats) 344,900 (Repeats)
Mean Stress Correction (99% Certainty of Survival)
None Goodman Gerber
MANTEN_MSN 90,50 0 (Repeats) 41,30 0 (Repeats) 81,50 0 (Repeats)
RQC100_MSN 35,80 0 (Repeats) 21,30 0 (Repeats) 33,900 (Repeats)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P8</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_008/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_008/</guid>
      <description>
        
        
        &lt;p&gt;125 CHAPTER 4
Rainflow Cycle Counting
Main Index
Rainflow cycle counting simply counts the number of cycles and determines their range and mean.
Frequency and sequence can have an influence on the fatigue life but is a third or fourth order effect on life
prediction in most cases.
Factor of S afety Analysis
Sometimes the fatigue analys is report s back infinite life as the result . Infinite life does not tell us much
though. For this reason a Factor of Safety analysis can be run by setting the options on the FTGPARM  entry as
follows (see input deck RFCount_v11.dat ).
FTGPARM 44      SN
STRESS  ABSMAXPR NONE           NOD A
FOS     LIFE    188500. 0.1     20.0
The “FOS” flag indicates a factor of safety analysis.  The supported option is that based on fatigue LIFE . A
life-based calculation is an iterative calculation used to find the magnitude of the scaling factor on the stress-
time spectrum that will cause failure for the specified design life. The scaling factor is applied to all cycles and
is, thus, an overall factor of safety suited well for random loading.
Just for illustration purposes, the target life in this example is the lowest life calculated at node 1 of this model
(188500  Repeats ). The maximum factor to calculate is 20.0 . This is set so that anything above 20 is reported
as 20, which helps speed up the analysis by moving on to the next entity. The accuracy of the back calculation
is set to 0.1 so that when a scale factor has been determined such that the fatigue life is with 0.1% of the
design life, the analysis completes and moves on to the next entity. It is actually best to set this 1.0 (1%) to
speed up the iterative process. Thus for this model, it is expected that the scale factor determined at Node 1
would be 1.0 and &amp;gt;1.0 at all other nodes because our design life should be exactly reached at Node 1.
When you expect a component to survive a very large number of significant loading cycles, e.g., around 108
cycles or more, it is not reasonable to make finite life predictions; you are too near to the fatigue limit where
the amount of scatter is very large. For cases like this it makes more sense to apply a Factor of Safety method ,
which aims to put the design below the fatigue limit by a selected safety margin. The life-based  method
requires the target Design Life, a Back Calculation Accuracy factor, and a Maximum Factor to be set. The
Maximum Factor is simply used to stop the analysis for any particular location when this maximum is
reached and go on to the next location. This can speed up the analysis if lowered significantly. The life-based
method is iterative. The calculation stops when the life is within a certain percentage of the target life based
on the Back Calculation Accuracy set.
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but may a ppear differently than the Windows forms shown here.
Step 1: Import the Model
1.Start Patran and open a new Patran database and call it RFCount .
2.Use the Analysis  application to import the first input deck associated with this example:
RFCount_v1.dat (Action =Read Input File ).&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup126
Main Index
3.Make sure the Analysis Preference  is set to MSC.Nastran .
Step 2: Check the Model
1.Go to the Loads/BCs  application. Plot the LBC markers ( Action : Plot Markers).
2.Make sure the Current Load Case is the imported load case (Untitled.SC1). Select all the LBCs and
click Apply . You should see the constraints and 10,000 N load.
3.Go to the Materials  application  (in skin mode look under the Properties  tab - click on Isotropic . Set
the Action  to Modify  and select mat1.1 .
The values in the Linear Elastic  constitutive model  as show . If there is no current Stress-Life (SN)&lt;br&gt;
constitutive model, create one. If there is, verify the following parameters, which are written to the
MATFTG  entry:
4.Go to the Element Properties  application  (in skin mode, click on any 0D, 1D, 2D, or 3D property
icon) . Set the Action  to Modify.
5.Select the property pshell.1 .
Note the properties defined here. Fatigue properties can be defined here but are not. Thus all
defaults are used for this example, so there is no need to modify anything. Values for the fatigue
properties, if defined, are placed on the PFTG entry. All other pertinent properties are part of the
PSHELL entry and related elements for this model.
Step 3: Check the Fatigue Parameters
1.Go to the Analysis  application ( Action  = Analyze ). Since we read the existing job
RFCount_v1.dat,  a job by the name of RFCount_v1  has been created.
2.Click on it to restore all its settings.
3.Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form.
4.Check the Fatigue Parameters&amp;hellip;  option. Parameter Value
Constitutive Model: Stress-Life (SN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Stress: None
Curve Type: None
Ultimate T ensile Strength 600.0
Stress Range Intercept 8948.0
1st Strength Exponent -0.2
T ransition Point 2.0E8
2nd Strength Exponent 0.0
Standard Error of Log(N) 0.137&lt;/p&gt;
&lt;p&gt;127 CHAPTER 4
Rainflow Cycle Counting
Main Index
5.Open this form and ensure the following parameters are set, which are written to the FTGPARM  entry.
If a parameter is not mentioned below, use the default value or leave it blank.
6.Close all the forms when done using the OK buttons.
7.In order to post-process the fatigue results in Patran, make sure that the results are written to the
HDF5  file. To do this, open the Results Output Format&amp;hellip; form in the Solution Parameters&amp;hellip; form.
Turn on the HDF5  option.
Step 4: Check the Output Requests
1.In the Analysis  application, click on the Subcases&amp;hellip;  form.
Our subcase is called Untitled.SC1 . Click on it from the Available Subcases list box to access all
its settings. Then open the Output Requests&amp;hellip;  form. It is best to set this form to the advanced
setting ( Form Type: ).
2.If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an S-N material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed. At this point, nothing further is need to be defined on this form unless
you want to limit the elements included in the analysis in which case you would select items from the
two top list boxes on the right side of the form in advanced mode.
Fatigue life output requests are subcase independent unlike most standard output requests such as
stress and displacement. If you are using multiple subcases, the first subcase selected (see the next step)
must have the Fatigue Life  output request in it.
After inspecting this form and adding the fatigue output request, close the form and click Apply  on
the Subcases&amp;hellip;  form to store the changes to this subcase.
Step 5: Check the Cyclic Load Definition
1.In the Analysis  application, open the Subcase Select&amp;hellip;  form. The only subcase that should be in the
bottom list box is Untitled.SC1 .
2.Open the Define Fatigue Load Sequences&amp;hellip;  form.
a.Ensure that the loading associations are set up properly. Parameter Value
General Parameters:
Stress Units: MPa
Stress Combination: Abs. Max. Principal
Results Location: Nodal Averaged
Stress-Life (S-N):
Run SN Analysis T urn this ON
Mean Stress Correction: None&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup128
Main Index
b.For the loading in this example, we want to define a single load event (Event: 1) that associates
our 10,000 N subcase called Untitled.SC1  to the load variation defined by an external DAC
file representation.
c.The saetrn.dac  file should be located in your working directory.
3.Click on the cell under the Subcase  column in the spreadsheet and then select the subcase from the
bottom list box. The next cell should become selected or active.
4.Click on the cell under the Time History  column, if necessary, and select the Time History (.dac)  file
from the appropriate list box. The cell just needs to be selected and active to make selection.
5.Enter 10,000 for the Load Magnitude . Make sure you press the Enter  or Return key to accept the value
into the selected cell. The single load event is now defined.
6.On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined.
7.To create these from scratch, remove all the existing load sequences using the right mouse button by
click on Load Sequences and select Remove All Sequences . Then, follow these instructions:
a.Use the right mouse button to click on the Load Sequences  and Add a New Sequence.
b.Right-click on the new sequence and Add Event .
c.Select only one event from the list box that appears.
d.Click Apply .
You can view the time history by using the Time History Manager  button. This launches a utility to
view and manage these DAC files. To use this utility, the DAC file must first be loaded into its
database. Then you can graphically view it. The operation of this utility is fairly easy and intuitive.
Patran operation will be suspended until you exit from the utility.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD /UDNAME  entries. The load sequence is now
defined. You can close this form using the OK button.
Step 6: Run the Analysis
Click Apply  on the Analysis  application form to submit the job .
Step 7: View the Results
1.When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set the following:
•Action: Access Results
•Object: Attach HDF5
•Method : Result Entities.
2.Select the rfcount_v1. h5 file and click Apply.
3.Go to the Results  application and view the results by selecting Log of Damage or Log of Life, Repeats
using the RFCount_v1:SN_42  results case.
Step 8: Run other Fatigue Jobs&lt;/p&gt;
&lt;p&gt;129 CHAPTER 4
Rainflow Cycle Counting
Main Index
To run the other jobs from this chapter, import each input deck into a new empty database and repeat the
procedure mentioned here making modifications as necessary and shown below for each different input deck.
You can also define new jobs in the same database by selecting the existing job RFCount_v1  and then
renaming it and making the modifications as necessary. The following table lists the modifications necessary
for each using the first as a baseline.
Whenever you change a job name, reselect the subcases for your job and redefine the loading sequence. Also,
inspect the selected subcases and loading sequence before submitting the job.
Input Deck Modification
RFCount_v1.dat Baseline - no modifications necessary
RFCount_v2.dat First create a group with only Element 1 in it. When setting up output
requests under the Subcases&amp;hellip;  form, select only that group in the
Output Requests&amp;hellip;  form as the set in the Select Groups  list box. Make
sure the Type of include data is set to Groups .
RFCount_v3.dat Just change the time history selected from Step 5 above. To actually
modify the saetrn.dac  file and compress it, you need to copy it and
rename it saetrn01.dac . Then use the CAEfatigue utility mpvxmul&lt;br&gt;
to compress the time history and remove small stress cycles. This creates
saetrn01.pvx  from the saetrn01.dac  file. Of course this was
already done for you and you can simply use the file directly. Aside from
changing the name of the time history file, no other modification are
needed from the baseline example.
RFCount_v4.dat For these you set the Mean Stress Correction  on the Fatigue
Parameters&amp;hellip;  form to the appropriate value (Goodman or Gerber).
Also the Certainty of Survival  is set appropriately at 50% or 99%.
Patran cannot fully import this deck with multiple fatigue jobs. Only
the parameters from the first job encountered are imported. However
the load sequences from each are imported. T o run all the fatigue jobs
in this deck you must either create multiple jobs, or repeat submission
of the same job after changing the appropriate parameters. Multiple
load sequences are import and associated to only the one job in Patran.
It is advisable to delete (or deactivate) the extra load sequences (as they
are all duplicates in this case).
RFCount_v5.dat This is identical to RFCount_v4.dat where the Mean Stress
Correction  and Certainty of Survival  is set appropriately, but the
standard S-N parameters for material RQC100 are used.
Note: Same note as previous input deck.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup130
Main Index
RFCount_v6.dat These are all set up in an identical manner to that done in Chapter 3:
A Simple S-N Analysis by changing the Stress-Life (S-N) and Elastic
constitutive models under the Materials  application and rerunning the
analysis.
Set Mean Stress Correction  to Interpolation. Set Interpolation Limit&lt;br&gt;
to Use Max Curve for all but RFCount_v7.dat,  which uses
Extrapolation.RFCount_v7.dat
RFCount_v8.dat
RFCount_v9.dat
RFCount_v11.dat Same as RFCount_v2.dat  but on the Fatigue Parameters&amp;hellip;  form, do
the following:
Turn ON the Factor of Safety  analysis
Set Design Life to 188,500 Repeats
Set Back Calculation Accuracy  to 0.1
Set Maximum Safety Factor  to 20.Input Deck Modification&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 5: A Simple e-N Analysis
5 A Simple -N Analysis
Problem Description
Fatigue Setup
Concluding Remarks
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description132
Main Index
Problem Desc ription
A model, aptly named the spider model because of its unique shape, is fixed at the shafts of its three legs. The
center shaft is subject to a fully reversed 15 KSI amplitude pressure loading on its underside that oscillates in
a sinusoidal fashion. A linear static analysis is performed using SOL 101.
Figure 5-1  Spider Model
Everything that you have learned thus far using the Total Life  method is now also applicable to the next
method of fatigue life prediction. We  now b uild on this knowledge to introduce and explain the Crack
Initiation  method , sometimes known as the  Local Strain  method , or Strain-Life (e-N)  method . As the name
implies, the Failure Criterion  is life to initiate a crack. When  an engineering crack appears, failure is assumed.
Objective
The objective of this problem is as follows:
To introduce the Crack Initiation  method.
To understand Cyclic Softening  and Cyclic Hardening .
To learn how cyclic stress-strain and strain-life curves are created.
To understand how plasticity is accounted for.
To relate stress-life to strain-life prediction methods.
To emphasize the issue with consistent model units and fatigue analysis.&lt;/p&gt;
&lt;p&gt;133 CHAPTER 5
A Simple e-N Analysis
Main Index
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Fatigue Setup
A partial listing of the input deck for this model is shown here. Explanations of each portion related to fatigue
analysis follows ( see file spiderCI_v1.dat ).
SOL 101
CEND
$
TITLE = Spider Model (Simple e-N Analysis)
$
FATIGUE = 42
$
SUBCASE 1
SPC = 2
LOAD = 2
STRESS=ALL
$
BEGIN BULK
$
PARAM   POST     1
PARAM   AUTOSPC  Y ES
$
$ Fatigue Element Definitions
$
SET4    1       PROP    PSOLID  1
FTGDEF  42
ELSET   1       18
PFTG    18              POLISH
$
$ Fatigue Parameters + Model Stress Units
$
FTGPARM 42      EN
DTI     UNITS   1                                       PSI
$
$ Fatigue Cyclic Loading
$Table 5-1  Files Required
Files Required Description
spiderCI_v1.dat Original input file - entire model - UDNAME
spiderCI_v2.dat Only element of interest included in analysis - TABLFTG
spiderCI_v3.dat Derived material properties - XELSET
spiderCI_v4.dat STRAIN flag used instead of STRESS on FTGPARM
sine01.dac Cyclic loading definition file&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup134
Main Index
FTGSEQ  42
33      1.0
UNITS   1.0     Cycles
FTGEVNT 33      22
FTGLOAD 22      99      1       1.0     1.0     0.0      DB
UDNAME  99
./sine01.dac
$
$ Partial Listing of Elements and Element Properties:
$
PSOLID   1       1       0
CHEXA    &amp;hellip;     etc.
$
$ Material Record : BS4360-50D
$
MAT1     1      2.77602+7       .3
MATFTG  1       145.0377
STATIC          480.0
EN      1036.0  -0.123  -0.618  0.622   0.163   912.0   2.0E6
0.0     0.0     0.0
$
$ Partial Listing of Multipoint Constraints:
$
RBE2     1       10001   123     265     266     267     268     2255
2256    2257    2258    2259    2260    3309    3310    3311
3312    3313    3314
etc.
$
$ Partial Listing of Nodes:
$
GRID     &amp;hellip;     etc.
$
$ Loads for Load Case : Default
$
SPCADD   2       1
LOAD     2      1.      1.       1
$
$ Displacement Constraints: Fixed
$
SPC1     1       123     10001   10002   10003   10004   10005   10006
$
$ Parial Listing of Pressure Load: 15ksi
$
PLOAD4   &amp;hellip;     etc.
$
$ Referenced Coordinate Frames:
$
CORD2C   &amp;hellip;     etc.
ENDDATA
Case Control
A FATIGUE  case control is required to request fatigue life output.&lt;/p&gt;
&lt;p&gt;135 CHAPTER 5
A Simple e-N Analysis
Main Index
FATIGUE = 42
A FTGSEQ  or a FTGLOAD  entry with ID 42 is required in the deck. A MATFTG  entry defining strain-based fatigue
material parameters is also required and elements associated to this MATFTG  must be defined on a FTGDEF  entry
of ID 42. If no FTGDEF  entry is present, all elements with fatigue material properties are included in the fatigue
life calculation. A FTGPARM  entry of ID 42 is also required in this case since the analysis is meant to be a strain
based (-N) solution. If this entry is not present, then an S-N (stress based) fatigue analysis is initiated , since
that is the default,  and a fatal error is issued since no S-N data is present.
Material and Physical Properties
The FATIGUE  case control calls out FTGDEF  bulk data of ID 42. This portion of the input deck defines where
on the model, or that is, which elements of the model, are to be included in the fatigue analysis. The FTGDEF&lt;br&gt;
entry uses an ELSET flag to indicate that pairs of element sets and their corresponding fatigue properties are
to be defined. In this case only one pair is defined. That pair references a SET4 entry of ID 1 that defines all
elements of element property PSOLID of ID 1. It associates these elements defined by the SET4 entry to the
physical fatigue properties defined by PFTG entry of ID 18.
$ Fatigue Element Set Definition
$
SET4    1       PROP    PSOLID  1
FTGDEF  42
ELSET   1       18
PFTG    18              POLISH
Please note that since the entire model is included in the elements defined by the SET4 entry, it was not
actually necessary to define the element set as shown above. The same thing can be accomplished with just
these entries and by default all elements of the model are part of the fatigue analysis:
FTGDEF  42              1 8
PFTG    18              POLISH
The only physical fatigue property defined is that of a polished surface finish ( POLISH ). The PFTG entry is
required in order to define a surface finish, although POLISH is the default, which is the same thing as
specifying NONE.
Strain based fatigue material properties are required for a local strain fatigue analysis. The concept is similar
to the way stress-based fatigue analysis is performed and life calculated by looking up stress on a stress vs. life
plot. In this case strain is looked up on a strain vs. life plot. However, the stresses are first converted to strains,
if necessary, and then the final lookup strain value is modified to account for plasticity and mean strain as
requested on the FTGPARM  entry.
$ Material Record : BS4360-50D
$
MAT1     1      2.77602+7       .3
MATFTG  1       145.0377
STATIC          480.0
EN      1036.0  -0.123  -0.618  0.622   0.163   912.0   2.0E6
0.0     0.0     0.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup136
Main Index
The material used in this example is called BS4360-50D. Young’s Modulus is defined on a MAT1 entry and
a corresponding MATFTG  entry of the same ID as the MAT1 is required to associate the fatigue material
properties to the elements.
Model Units
Note that Young’s Modulus entered on the MAT1 entry is in stress units of PSI, consistent with the model’s
consistent units (length in inches and force in pounds). The stress parameters entered on the MATFTG  entry
are entered in SI units of MPa in this example, thus the CNVRT field on the MATFTG  is necessary to convert
the values to PSI to be consistent with the rest of the model.
In addition to this, fatigue analysis requires that the model’s stress units be identified. This is done on the
DTI,UNITS  bulk data:
DTI     UNITS   1                                       PSI
Internally, the stresses are converted to SI units of MPa as are all the stress parameters entered on the MATFTG&lt;br&gt;
entry (and Young’s Modulus on the MAT1).
Cyclic Stress-Strain Curves
Stress based (S-N) life plots consist of a single plot known as the stress-life curve.
For strain-based fatigue analysis, the fatigue material properties actually define two different plots.
The first is the cyclic stress-strain plot to relate stress to strain (see glossary term Cyclic Properties ).
When stresses are used, they are first converted to strains using the cyclic stress-strain data. Cyclic
stress-strain curves must be used as opposed to monotonic stress-strain curves (see glossary term
Monotonic Properties ) because of possible strain hardening or softening due to the cyclic nature of
fatigue.
The second is the actual strain-life plot that relates the cyclic strain to fatigue life.&lt;/p&gt;
&lt;p&gt;137 CHAPTER 5
A Simple e-N Analysis
Main Index
Figure 5-2  Cyclic Stress-Strain Plots of MANTEN and RQC100
The plot show s how two materials behave under cyclic loading conditions. It also shows how they behave
relative to one another. RQC100  is obviously a much higher strength steel with its yield point well above that
of MANTEN .
Three parameters (E, K’, n’) need to be defined in order to characterize these plots according to the following
equation that relates stress amplitude to strain amplitude:
The first part of the right hand side can be recognized as the elastic stress-strain equation (Hooke’s law) and
the second part defines the plastic strain.
This equation is identical to the Ramberg-Osgood equation that relates total strain to the elastic strain plus
plastic strain in the Monotonic Properties  sense. The only differences are the primes (’) on K’ and n’ to signify
that it represents a cyclic condition as opposed to a monotonic condition.
Cycle Ha rdenin g, Cycle Softe ning
Now an interesting thing to do is to examine the detailed material property values for each of the two
materials shown above in Figure 5-2.
aa
E&amp;mdash;&amp;mdash;a
K&amp;rsquo;&amp;mdash;&amp;mdash;1n&amp;rsquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup138
Main Index
Figure 5-3  Cyclic Material Properties of MANTEN and RQC100
Note the Work Hardening Exponent  for each of the materials:
The RQC100&amp;rsquo;s  value is relatively small.
This implies it is weaker under cyclic conditions. This is known as cyclic softening or strain softening.
The MANTEN&amp;rsquo; s work hardening exponent is relative large.
This implies that it is stronger under cyclic loading. This is known as cyclic hardening or strain
hardening.
When a material softens under cyclic loading, this can be very bad from a durability standpoint. This is why
many structures or components fail prematurely even though, supposedly, they have been designed to remain
below yield. Compare the work hardening exponent (n) to the cyclic strain-hardening exponent (n’) to note
the hardening (n’&amp;gt;n) or softening (n’&amp;lt;n) characteristics of a material.&lt;/p&gt;
&lt;p&gt;139 CHAPTER 5
A Simple e-N Analysis
Main Index
The problem in these softening cases is that the actual yield point is much lower when subject to cyclic
loading.
Figure 5-4  Cyclic Hardening and Softening
Cyclic Ma terial Tests
The monotonic stress-strain curve is created by simply placing a test coupon in a servo-hydraulic test
machine and slowly increasing the load until the component breaks. The elastic modulus can be determined
from this test as well as the yield and ultimate tensile strengths. A cyclic stress-strain curve is created through
a series of tests where the strain level is precisely controlled. The load is increased until the specified strain
level is reached and then the load is reversed.
These tests are typically performed using fully reversed loading ( R-Ratio  = -1). Each test is done at a different
strain level. Initially each test will exhibit a softening or hardening effect as can be seen if the hysteresis loops
are plotted for a given test (see diagram above). Eventually the material stabilize s and stop s hardening or
softening. This stable hysteresis loop is then extracted.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup140
Main Index
The maximum stress/strain level from the stable hysteresis loop of each test is then cross-plotted onto its own
stress-strain space which then constitutes the cyclic stress-strain curve.
Figure 5-5  Stable Hysteresis Loops
Strain-Life Cu rve
From each of these strain-controlled tests also comes another piece of information: the number of cycles to
failure. This information can be plotted onto its own curve called the Strain-Life (e-N)  curve.
Figure 5-6  Strain-Life Curves of MANTEN and RQC100
You can compare the two strain-life plots for MANTEN  and RQC100 . Note that they cross each other and
therefore exhibit different life behavior depending on the stain level experienced. So it is impossible to say
from the plot which would perform better.&lt;/p&gt;
&lt;p&gt;141 CHAPTER 5
A Simple e-N Analysis
Main Index&lt;/p&gt;
&lt;p&gt;The depiction of the strain-life curve for the actual material used in this example problem (BS4360-50D)  is
shown in the following figure . Three lines plotted. The actual strain-life curve is made up of two
components: an elastic portion and a plastic portion.
Figure 5-7  Strain-Life Curve of BS4360-50D with E-P Lines
This curve can be fully characterized by knowing four material parameters as shown in the equation of the
strain-life plot f’,b,f’,c):
Like the stress-strain curves, it also is broken into an elastic component and a plastic component. The
summation of the two lines makes the total strain-life curve. The following notes are made about this plot:Note:   The Failure Criterion  (that is, when a crack has actually initiated) is determined by ASTM standard
E606. It is not a specified length of the crack, but instead a percentage drop in load as measured
by the test device.
When a crack initiates the component can no longer sustain the same level of stress for the same
strain rate. If you actually looked at a test specimen after reaching the failure point, there would
appear to be an engineering sized crack of, say, 1 to 2 mm in length.

2&amp;mdash;&amp;mdash;f&amp;rsquo;
E&amp;mdash;&amp;mdash;2Nfbf&#39;2Nfc+ =
(Elastic) (Plastic)&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup142
Main Index
The elastic and plastic lines cross each other at some point which is called the transition point.
The transition point defines the difference between High Cycle Fatigue (HCF)  versus Low Cycle Fatigue
(LCF).
To the right of the transition point is considered HCF because elastic events dominate plastic events.
To the left of the transition point is considered LCF because plastic events dominate elastic events.
This is i mportan t because the type of fatigue being experienced dictates the remedy or solution. For example,
in HCF you might try a higher strength steel, or change the surface finish/treatment or mean stress (residual)
to better the fatigue life. If LCF is being experienced these remedies would have little or no effect and in some
cases, perhaps even worsen the situation. The solution therefore, is to find a material that is more resistant to
plastic deformation, such as a more ductile material.
The Concept of Similitude
Just as with the S-N method, an -N curve is also based on the principle of similitude. This means that if we
can reproduce the same local strain as that experienced in say, a plate with a hole (shown to the right) in a test
laboratory specimen (shown on the left) made of the same material, then we can expect the life of the two to
be about the same, when subjected to the same strain levels.
Stres s-Life vs. Strain-Life
Take a good look at the elastic portion of the strain-life equation above. If you ignore the plastic component
and take E to the other side of the equation you get a stress equaling some constant times the number of cycles
to failure raised to the power b. This is the exact formula for the stress-life curve. So the elastic strain-life curve
is, in fact, a material S-N curve (with crack initiation as the failure criterion). The significance is that the S-
N method is nothing more that a subset of the Crack Initiation method ignoring plastic influences.
Deriving Material Properties
As a side note, what if you do not have access to specific fatigue material properties yet you still want to do a
fatigue analysis?&lt;br&gt;
Note:   The crack initiation method, taking into account elastic and plastic contributions to fatigue life,
is more widely applicable to a greater range of problems (HCF and LCF) whereas the T otal Life
method breaks down below the transition point (usually around 105 cycles) because plasticity
dominates. This is why S-N curves are only good for HCF .&lt;/p&gt;
&lt;p&gt;143 CHAPTER 5
A Simple e-N Analysis
Main Index
By using the MATFTG  entry with only the STATIC line, the UTS, and a material code, appropriate cyclic
material properties (an -N curve in this case) are derived automatically (see input deck spiderCI_v3.dat ).
MAT1     1      1.732+7         .3
MATFTG  1       1.0
STATIC          480.0   99
See the description of MATFTG  for a list of valid material type codes.
Defining an Element Exclusion Set
The referenced input deck also shows how to specify the elements of interest based on an exclusion set
definition.
SET1    2       1       THRU    1781    1784    THRU    2015    2018
THRU    2249    2252    THRU    2481
FTGDEF  42      100.0   18
XELSET  2
PFTG    18              POLISH
Because no ELSET line exists in the FTGDEF , all elements are selected by default. However, because of the
existence of the “XELSET” flag, the elements listed on SET1 of ID 2 are excluded from the fatigue analysis.
Fatigue Parameters
The FATIGUE  case control also calls out FTGPARM  bulk data of ID 42. This portion of the input deck defines
various fatigue analysis parameters. For this example, the FTGPARM  entry is required and must define the
analysis to be strain-life ( EN) in the TYPE field (3).
All other fields use defaults or are left blank.
$ Fatigue Parameters
$
FTGPARM 42      EN      1.0
For this example, this same entry could have been included with all the defaults as:
$ Fatigue Parameters
$
FTGPARM 42      EN      1.0
STRESS  ABSMAXPR NONE           NOD A
CERTNTY 50.0
These are shown here to emphasize a few things that occur during the analysis.
The STRESS  flag indicates that stresses are to be used in the fatigue analysis. The STRAIN  flag could
have also been used. Stresses are converted to strains in a crack initiation analysis. Both STRESS  and
STRAIN  flags cannot be specified. Only one is allowed.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup144
Main Index
The 6th field on the STRESS  line that is set to NODA (default is not present). This specifies that the
fatigue analysis should be performed from nodal averaged stresses of the specified elements defined
by the FTGDEF  entry. A single damage value or fatigue life results at each node. This in contrast to
setting the value to NODE, in which case the element nodal stresses are used and multiple
damage/fatigue lives are computed for each node based on the contribution from each associated
element.
The stress (or strain) combination to be used in the fatigue analysis. This is specified on the STRESS&lt;br&gt;
or STRAIN  line. The ABSMAXPR in the 3rd field of this line is the scalar Stress Combination  and
corresponds to the absolute maximum principal value . This is the parameter that is calculated from
the stress or strain tensor before the plasticity correction and damage lookup and summation is
done. The tensor from the FE analysis results is extracted at each element’s node. However only a
single value can be looked up on the - and -N curves.
So the six component values of the tensor are resolved to the maximum absolute principal value
which is used as the look up parameter.
Fourth is the Mean Stress Correction  to take place. In this case no mean stress correction ( NONE ) is
to take place.
Fifth is the Certainty of Survival  set on the line with the CRTNTY  flag. It is set to  50.0% by default.&lt;br&gt;
This uses the scatter in the material property data to adjust the fatigue life prediction accordingly. A
higher certainty produces a lower life prediction and vice versa. Thus a value of 50.0 means that
there is a 50% probability reaching the reported life. A value of 95.0 means that a 95% chance of
reaching the reported life.
Cyclic Loading
The load applied in the FE model is a static load of 15 KSI or 15,000 PSI. Fatigue analysis employs a pseudo-
static method where the cyclic variation of the static loading must be defined.   The time signal used in this
analysis is a fully reversed loading. Cyclic loading is sometimes described using a parameter called the R-Ratio&lt;br&gt;
(R), which is the minimum load divided by the maximum load.   R is a measure of the mean stress or defines
the constant mean of a signal. R = -1 for a fully reversed loading.
The - and -N curves  used in this example were generated by testing numerous polished test specimens at
different constant amplitude, fully reversed (R= -1) loading conditions. The parameter or power law that
defines these curves was determined by Regression Analysis , of the raw data. Therefore no Mean Stress
Correction  is required since there is no mean stress to speak of (the mean stress is zero). This is why NONE
is specified as the correction method on the FTGPARM  entry.
In order to do a fatigue analysis using linear static FE results, we must define how the load varies with time.
This is easily done using the bulk data entries FTGSEQ , FTGEVNT , FTGLOAD , and TABLFTG . The load is a unit sine
wave. Thus the loading oscillates between 15 KSI and -15 KSI.
A single occurrence of this fully reversed, constant amplitude sine wave is defined as one  cycle of the loading
(for more information please visit Cycles (cycle counting) . The X points are taken as evenly spaced intervals
(see Sample Rate ).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>User&#39;s Manual P9</title>
      <link>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//uildDrafts:1313/docs/msc_nastran_2024.1_embedded_fatigue_user_guide/msc_nastran_2024.1_embedded_fatigue_user_guide_009/</guid>
      <description>
        
        
        &lt;p&gt;145 CHAPTER 5
A Simple e-N Analysis
Main Index
Figure 5-8  Display of Unit Sine Wave, Fully Reversed Load
The FATIGUE  case control also calls out FTGSEQ  bulk data of ID 42. This portion of the input deck defines the
cyclic load variation. A FTGSEQ  entry is required or an error will be issued (see exception below).
$ Fatigue Cyclic Loading
$
FTGSEQ  42
33      1.0
UNITS   1.0     Cycles
FTGEVNT 33      22
FTGLOAD 22      99      1       1.0     1.0     0.0      DB
UDNAME  99
./sine01.dac
A FTGSEQ  entry defines a sequence of load events. A FTGEVNT  entry groups different cyclic loads into a single
event (simultaneously acting loads). A FTGLOAD  entry defines the relationship between the FE stresses from a
particular SOL 101 subcase and the corresponding cyclic variation of the stresses due to the loading from
that subcase. The UDNAME  entry defines the actual cyclic load variation via an external file.
More is elaborated on FTGSEQ  and FTGEVNT  as the loading become more complicated in subsequent examples.
For now, it is sufficient to say that there is only one load in the event and only one event in the load sequence.
So for all intense purposes, the input could be simplified to reference only the FTGLOAD  entry as such (see file
spiderCI_v2.dat ):
$       ID      TID     LCID    LDM     SCALE   OFFSET  TYPE
$       &amp;ndash;      &amp;mdash;     &amp;mdash;-    &amp;mdash;     &amp;mdash;&amp;ndash;   &amp;mdash;&amp;mdash;  &amp;mdash;-
FTGLOAD 42      99      1       1.0     1.0     0.0     DB
UNITS   1.0     Cycles
UDNAME  99
./sine01.dac&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup146
Main Index
The cyclic load variation is defined in the external file called sine01.dac . This file, defined on the UDNAME ,
is a representation of a sine wave defined by multiple points.
The above simplifications shows that the FATIGUE  case control calls out the FTGLOAD  entry instead of the
FTGSEQ . This is the one exception where a FTGSEQ  entry is not required, if replaced by a single FTGLOAD  entry.
Only a single load (one subcase) is possible in this case.
The FTGLOAD  entry associates the actual cyclic variation of the stresses/strains from a particular subcase to the
subcase itself. The TID field 3 points to the TABLFTG  or UDNAME  entry and the LCID field 4 points to the
SUBCASE ID. The other three fields are for normalizing, scaling, and offsetting the stresses. In this case, no
additional normalization, scaling or offsetting is done as explained in the previous two examples.
Fatigue Equivalent Units
As also explained in the previous two examples, the second line of the FTGSEQ  entry (or the FTGLOAD  entry)
has a flag called UNITS set for defining the fatigue equivalent units, Cycles  in this example. Life is r eported
back in both Cycles  and Repeats  of the cyclic load definition.
Constant Amplitude (Block Loading)
As explained in the previous example regarding Cycles (cycle counting) , the rainflow procedure only find s one
cycle in this signal of unit amplitude and zero mean. So, it is the same as defining a signal that just has four
points in it as used in A Simple S-N Analysis , the first example. Thus this portion of the input deck is really
equivalent to:
FTGLOAD 42      99      1       1.0     1.0     0.0
UNITS   1.0     Cycles
TABLFTG 99
0.0     1.0     -1.0    0.0     ENDT
where a simple four point table has been defined to describe the load as a constant amplitude, fully reversed
load.
If using MSC Nastran ( 2014), another feature of the FTGLOAD  is to set the TYPE field to CONST . This
allows for a constant amplitude definition directly on the FTGLOAD  entry without having to define an external
file or use a TABLFTG  entry. The maximum and minimum of the constant amplitude loading is defined in the
MAX and MIN fields, which are the same fields as SCALE and OFFSET , respectively. The above entry would
reduce down to this:
$       ID      TID     LCID    LDM     MAX     MIN     TYPE
$       &amp;ndash;      &amp;mdash;     &amp;mdash;-    &amp;mdash;     &amp;mdash;&amp;ndash;   &amp;mdash;&amp;mdash;  &amp;mdash;-
FTGLOAD 42              1        1.0     1.0     -1.0    CONST
UNITS   1.0     Cycles
Note that the TID field is left blank as it is not necessary since the entire definition of the cyclic loading is
contained within the FTGLOAD  entry itself.
This feature is sometimes referred to as block loading  when many constant amplitude signals are used at
multiple loading locations with multiple loading events strung together to form a loading sequence (called a
duty cycle). See A Simple Duty Cycle  (Ch. 7) for an example of a duty cycle.&lt;/p&gt;
&lt;p&gt;147 CHAPTER 5
A Simple e-N Analysis
Main Index
Fatigue Results
Run the spiderCI_v1.dat  file using a supported version of MSC Nastran ( 201 6). Then inspect the
spiderci_v1.f06  file. Only the element nodes of interest are listed here. The highest damage (lowest life)
occurs on or near nodes 981, 2314, and 3650.
EVENT ID  ALL EVENTS  FATIGUE ID      42
F A T I G U E   R E S P O N S E   I N     H E X A   E L E M E N T S               OPTION =NODA
ELEMENT    GRID  LAYER  LIFE   LOG-LIFE     LIFE   LOG-LIFE      DAMAGE     LOG      MAXIMUM       MINIMUM     SAFETY   CRIT.
ID        ID         (    REPEATS    ) (CYCLES              )            DAMAGE    STRESS        STRESS      FACTOR   ANGLE
1782      980        0.1891E+04   3.28   0.1891E+04   3.28   0.5290E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
981        0.9912E+03   3.00   0.9912E+03   3.00   0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
987        0.1972E+06   5.29   0.1972E+06   5.29   0.5070E-05  -5.29   0.3211E+05  -0.3211E+05                &lt;br&gt;
986        0.4728E+05   4.67   0.4728E+05   4.67   0.2115E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
997        0.4739E+04   3.68   0.4739E+04   3.68   0.2110E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
998        0.2107E+04   3.32   0.2107E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
1005        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05                &lt;br&gt;
1004        0.4399E+06   5.64   0.4399E+06   5.64   0.2273E-05  -5.64   0.2903E+05  -0.2903E+05                &lt;br&gt;
1783      981        0.9912E+03   3.00   0.9912E+03   3.00    0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
982        0.1890E+04   3.28   0.1890E+04   3.28   0.5291E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
988        0.4728E+05   4.67   0.4728E+05   4.67   0.2115E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
987        0.1972E+06   5.29   0.1972E+06   5.29   0.5070E-05  -5.29   0.3211E+05  -0.3211E+05                &lt;br&gt;
998        0.2107E+04   3.32   0.2107E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
999        0.4738E+04   3.68   0.4738E+04   3.68   0.2111E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
1006        0.4401E+06   5.64   0.4401E+06   5.64   0.2272E-05  -5.64   0.2903E+05  -0.2903E+05                &lt;br&gt;
1005        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05                &lt;br&gt;
2016     2313        0.1890E+04   3.28   0.1890E+04   3.28   0.5291E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
2314        0.9913E+03   3.00   0.9913E+03   3.00   0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
2319        0.1972E+06   5.29   0.1972E+06   5.29   0.5070E-05  -5.29   0.3211E+05  -0.3211E+05                &lt;br&gt;
2318        0.4728E+05   4.67   0.4728E+05   4.67   0.2115E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
2329        0.4738E+04   3.68   0.4738E+04   3.68   0.2111E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
2330        0.2107E+04   3.32   0.2107E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
2335        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05                &lt;br&gt;
2334        0.4399E+06   5.64   0.4399E+06   5.64   0.2273E-05  -5.64   0.2904E+05  -0.2904E+05                &lt;br&gt;
2017     2314        0.9913E+03   3.00   0.9913E+03   3.00    0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
2315        0.1890E+04   3.28   0.1890E+04   3.28   0.5290E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
2320        0.4729E+05   4.67   0.4729E+05   4.67   0.2115E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
2319        0.1972E+06   5.29   0.1972E+06   5.29   0.5070E-05  -5.29   0.3211E+05  -0.3211E+05                &lt;br&gt;
2330        0.2107E+04   3.32   0.2107E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
2331        0.4739E+04   3.68   0.4739E+04   3.68   0.2110E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
2336        0.4399E+06   5.64   0.4399E+06   5.64   0.2273E-05  -5.64   0.2904E+05  -0.2904E+05                &lt;br&gt;
2335        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05                &lt;br&gt;
2250     3649        0.1890E+04   3.28   0.1890E+04   3.28   0.5290E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
3650        0.9913E+03   3.00   0.9913E+03   3.00    0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
3656        0.1971E+06   5.29   0.1971E+06   5.29   0.5073E-05  -5.29   0.3212E+05  -0.3212E+05                &lt;br&gt;
3655        0.4727E+05   4.67   0.4727E+05   4.67   0.2115E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
3666        0.4739E+04   3.68   0.4739E+04   3.68   0.2110E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
3667        0.2108E+04   3.32   0.2108E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
3674        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05                &lt;br&gt;
3673        0.4398E+06   5.64   0.4398E+06   5.64   0.2274E-05  -5.64   0.2904E+05  -0.2904E+05                &lt;br&gt;
2251     3650        0.9913E+03   3.00   0.9913E+03   3.00    0.1009E-02  -3.00   0.5709E+05  -0.5709E+05                &lt;br&gt;
3651        0.1890E+04   3.28   0.1890E+04   3.28   0.5290E-03  -3.28   0.5348E+05  -0.5348E+05                &lt;br&gt;
3657        0.4727E+05   4.67   0.4727E+05   4.67   0.2116E-04  -4.67   0.3802E+05  -0.3802E+05                &lt;br&gt;
3656        0.1971E+06   5.29   0.1971E+06   5.29   0.5073E-05  -5.29   0.3212E+05  -0.3212E+05                &lt;br&gt;
3667        0.2108E+04   3.32   0.2108E+04   3.32   0.4745E-03  -3.32   0.5289E+05  -0.5289E+05                &lt;br&gt;
3668        0.4739E+04   3.68   0.4739E+04   3.68   0.2110E-03  -3.68   0.4868E+05  -0.4868E+05                &lt;br&gt;
3675        0.4398E+06   5.64   0.4398E+06   5.64   0.2274E-05  -5.64   0.2904E+05  -0.2904E+05                &lt;br&gt;
3674        0.1000E+31  30.00   0.1000E+31  30.00   0.0000E+00 -20.00   0.2452E+05  -0.2452E+05&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup148
Main Index
Rainflow Cy cle Coun ting
Figure 5-9  RainFlow Cycle Counting
When the analysis starts , it first converts stresses to strains if stresses have been supplied. The rainflow
counting procedure then takes place as discussed in the last chapter (of course only one cycle is found with
this simple sine wave). This results in a matrix of strain cycles with their respective ranges and means. The
Crack Initiation  method helps to perhaps, better understand rainflow cycle counting.
The reason rainflow cycle counting works so well is because it actually counts the number of stress-strain
cycles (hysteresis loops) in a cyclic or time varying signal. So consider a signal stood on its end. As it is loaded
from point A to B and unloaded from point B to point C, this converts into the section A-B-C in stress-strain
space. On loading from point C to D, in stress-strain space, it actually remembers it was on the original path
from A to D and the interruption B-C-B is counted as one cycle. E-F-E also counts as a cycle as does G-H-
G. All cycles fall inside of one large, outer cycle (A-D-A) representing the maximum and minimum of the
signal. Cycles with some noticeable area inside within this large, outer loop cause damage while those that are
straight lines are purely elastic and cause no damage.
Elastic-Plastic Corr ection
Now before damage can be determined and summed for each cycle, certain corrections need to take place,
the main correction being the conversion of purely elastic stresses and strains to elastic-plastic stresses and
strains.
Plasticity is accounted for in the Crack Initiation  method by the Neuber method. The elastic stresses and
strains are looked up on the elastic line and then corrected to fall onto the cyclic stress strain curve to
determine the elastic-plastic stresses and strains. This elastic-plastic strain is used to look up damage on the
strain-life damage curve.
Neuber’s Elastic-plastic Correction , sometimes called a Notch Correction , is based on the simple principle that
the product of the elastic stress and strain should be equal to the product of the elastic-plastic stress and strain
from the cyclic stress-strain curve.&lt;/p&gt;
&lt;p&gt;149 CHAPTER 5
A Simple e-N Analysis
Main Index
Then through an iterative method, the elastic-plastic stress and strain can be determined. This is illustrated
below:
Figure 5-10  Neuber’s Elastic-Plastic Correction
Effect of M ean Stress
Just as with the S-N method, various mean stress correction methods are available. These are the Smith-
Watson-Topper and Morrow methods. First remember that the material data we are using were produced for
an R-ratio of minus one (-1), or, in other words, zero mean stress. The time history used in this example has
a zero mean. So we would not expect that using any mean stress correction would make much difference.
You can change the FTGPARM  options to verify this claim.
FTGPARM 42      EN      1.0
STRESS  ABSMAXPR SWT    NEUBER  NOD A
or
FTGPARM 42      EN      1.0
STRESS  ABSMAXPR MORROW NEUBER  NOD A
Changing the mean stress tends to only have effects in the High Cycle Fatigue (HCF)  region. The effect of mean
stress gets washed out with Low Cycle Fatigue (LCF)  problems due to the higher plasticity. This can be seen in
the Morrow equation for mean stress where the mean stress is accounted for only on the elastic side of the
equation. The plot below also illustrates this comparing a strain-life plot with and without Mo rrow mean
stress correction (note only the HCF side is effected).
Note:   If we want to do str ess-strain tracking so that we can calculate the maximum or mean stress of
each cycle we need to know what the shape of each arm of a hysteresis loop is. We get this by using
Masing&amp;rsquo;s hypothesis which says that the hysteresis curve is the same shape as the cyclic stress strain
curve, but doubled up in both directions, hence the factors of two in the equation for the cyclic
stress strain curve above.

2&amp;mdash;&amp;mdash;f&amp;rsquo;m–
E&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-2Nfbf&#39;2Nfc+ =Morrow
Mean Stress&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup150
Main Index
Figure 5-11  Morrow Mean Stress Curve vs. Zero Mean Strain-Life Curve
SWT mean stress correction has the effect of shifting the entire curve and plotting a new parameter on the
right hand side of the equation by multiplying by the maximum stress.
Effect of Surf ace Finish/Treatment
Different surface treatments and finishes can also be applied as you may have noticed when setting up analysis
jobs. Up to this point we have always set the finish and treatment to either none or a polished finish (which
are the same) signifying that we wish to use the material properties as-is with no corrections. To meet a design
life a different surface finish or treatment can sometimes serve the purpose.
Surface finish and treatment corrections are imposed by changing the material properties. This is
accomplished by changing the slope of the S-N curve or for strain-life curves, the slope of the elastic line at
the Endurance Limit . A scale factor for each finish or treatment is used. These factors are based on the UTS of
the material and derived from empirical data.

2&amp;mdash;&amp;mdash;maxf&#39;2
E&amp;mdash;&amp;mdash;&amp;ndash;2Nf2bf&amp;rsquo;f&#39;2Nfbc++ = SWT
Mean Stress&lt;/p&gt;
&lt;p&gt;151 CHAPTER 5
A Simple e-N Analysis
Main Index
Surface treatments and finishes tend again to only effect HCF jobs. Note that the answers tend to converge
between the various surface finish/treatments at higher load levels. A curve very similar to Figure 5-11 above
results when comparing two strain-life curves, one with polished and one with some other finish, where only
the HCF end is effected.
Concluding Remarks
This exercise has served to introduce the Crack Initiation  method, which uses local strain and is mostly
accredited to Manson and Coffin; the material parameter, c, is named after Coffin. The cyclic stress-strain
curve and the strain-life curve have been introduced as well as the Neuber notch correction  method.
Other Notch Corre ctions
Other elastic-plastic correction methods are available, which are valuable to use for very low cycle fatigue
where the Neuber method tends to break down and not be as accurate. The Hoffman-Seeger  method is an
option.
Stres ses vs. Str ains
In this example we used stresses from our FE model. We could have just as easily selected the strains to use
instead. We would expect to get exactly the same answers, however there are a few things to be
aware of.
You should be very careful using strains from plate models since the out-of-plane strain ( z) is not
calculated, which is needed to determine the proper strain combination parameter (absolute
maximum principal, signed von Mises, etc.), it is safer to use the stresses from the FE analysis.
The strains used for the fatigue analysis are engineering strains as opposed to the strain tensor. The
three shear strain components are multiplied by two to convert them to engineering strain before
using them in a fatigue analysis.
Patran Setup
This section explains how to run the examples in this Chapter through Patran. It is assumed that the user is
familiar with Patran operations. Only generic steps are given here and not in depth explanations of how to
perform each operation. Any graphic images shown are from the Windows platform. Forms are similar for
Linux but will appear differently than the Windows forms shown here.
Step 1: Import the Model
1.Start Patran and open a new Patran database and name it spiderCI .
2.Use the Analysis  application to import the first input deck associated with this example:
spiderCI_v1.dat  (Action =Read Input File). Note:   Shot Pe ening is a mechanism used to impose a compressive residual stress into the surface, thus
changing the mean stress. However, it is compensated for by surface finish/treatment techniques.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup152
Main Index
3.Ensure Analysis Preference  is set to MSC.Nastran.
Step 2: Check the Model
1.Go to the Loads/BCs  application. Plot the LBC markers ( Action : Plot Markers).
2.Make sure the Current Load Case is the imported load case (Untitled.SC1). Select all the LBCs and
click Apply . You should see the constraints and 15 KSI pressure load.
3.Go to the Materials  application. Set the Action  to Modify and select BS4360-50D. Note the values
in the Linear Elastic constitutive model. If there is no current Strain-Life (eN) constitutive model,
create one. If there is, verify the following parameters, which are written to the MATFTG  entry:
4.Go to the Materials  application. Set the Action  to Modify  and select mat1.1 .
Note the Conversion Factor  input here to convert the supplied stress parameters to PSI units, which
are this model’s consistent units. The stress parameters have been input in MPa. This is why this
Conversion Factor  is necessary.
5.Go to the Element Properties  application. Set the Action  to Modify. Select the property spider .
Note the properties defined here. Fatigue properties can be defined here but do not need to be as all
defaults are used for this example, so there is no need to modify anything. Values for the fatigue
properties, if defined, are placed on the PFTG entry. All other pertinent properties are part of the
PSOLID entry and related elements for this model.Parameter Value
Constitutive Model: Strain-Life (eN)
Option: Standard Parameters
Material (CODE): Ferrous (99)
Strain: None
Curve Type: None
Ultimate T ensile Strength 480.0
Strength Coefficient 1036.0
Strength Exponent -0.123
Ductility Exponent -0.618
Ductility Coefficient 0.622
Cyclic Strain Hardening Exp 0.163
Cyclic Strength Coefficient 912.0
Cut-off in Reversals 2.0e6
Standard Error Log(e)(elastic) 0.0
Standard Error Log(e)(plastic) 0.0
Standard Error Log(e)(cyclic) 0.0
Conversion Factor 145.0377&lt;/p&gt;
&lt;p&gt;153 CHAPTER 5
A Simple e-N Analysis
Main Index
Step 3: Check the Fatigue Parameters
1.Go to the Analysis  application ( Action  = Analyze). Since we read the existing job
spiderCI_v1.dat , a job by the name of spiderCI_v1  has been created.
2.Click on it to restore all its settings.
3.Open the Solution Type&amp;hellip;  form and then open the Solution Parameters&amp;hellip; form.
4.Check the Fatigue Parameters&amp;hellip;&lt;br&gt;
a.Open this form and ensure the following parameters are set, which are written to the FTGPARM&lt;br&gt;
entry. If a parameter is not mentioned below, use the default value or leave it blank.
b.Close all the forms when done using the OK buttons .
5.In order to post-process the fatigue results in Patran, make sure that the results are written to the
MASTER/DBALL  files. To do this, open the Results Output Format&amp;hellip; form in the Solution
Parameters&amp;hellip; form. Turn on the MASTER/DBALL  option.
Step 4: Check the Output Requests
1.In the Analysis  application, click on the Subcases&amp;hellip;  form.
Our subcase is called Untitled.SC1 . Click on it from the Available Subcases list box to access all
its settings. Then open the Output Requests&amp;hellip;  form. It is best to set this form to the advanced setting
(Form Type: ).
When done inspecting this form and adding the fatigue output request, close the form and press the
Apply  button on the Subcases&amp;hellip;  form to store the changes to this subcase.
2.If FATIGUE is not already defined as an Output Request , then do so by selecting Fatigue Life  from
the top list box. This defines the FATIGUE  case control as well as the FTGDEF  bulk data entry. By default
all elements that have an -N  material defined are included in the analysis in which case a FTGDEF&lt;br&gt;
entry is not actually needed. At this point, nothing further is need to be defined on this form unless
you want to limit the elements included in the analysis in which case you would select items from the
two top list boxes on the right side of the form in advanced mode.Parameter Value
General Parameters:
Stress Units: PSI
Stress Combination: Abs. Max. Principal
Results Location: Nodal Averaged
Strain-Life (e-N):
Run eN Analysis ON
Mean Stress Correction: None
F .E Results: Stress
Plasticity Correction: Neuber&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup154
Main Index
atigue life output requests are subcase independent unlike most standard output requests such as stress
and displacement. If you are using multiple subcases, the first subcase selected (see the next step) must
have the Fatigue Life  output request in it.
3.After inspecting this form and adding the fatigue output request, close the form and click Apply  on
the Subcases&amp;hellip;  form to store the changes to this subcase.
Step 5: Check the Cyclic Load Definition
1.In the Analysis  application, open the Subcase Select&amp;hellip;  form. The only subcase that should be in the
bottom list box is Untitled.SC1 .
2.Open the Define Fatigue Load Sequences&amp;hellip;  form.
a.Ensure that the loading associations are set up properly.
b.For the loading in this example, we want to define a single load event (Event: 1) that associates 15
KSI subcase called Untitled.SC1  to the load variation defined by an external DAC file
representation.
c.The sine01.dac  file should be located in your working directory.
3.Click on the cell under the Subcase  column in the spreadsheet and then select the subcase from the
bottom list box. The next cell should become selected or active.
4.Click on the cell under the Time History  column, if necessary, and select the Time History
(.dac) file from the appropriate list box. The cell just needs to be selected and active to make
selection.
5.Enter 10,000 for the Load Magnitude. Make sure you press the Enter  or Return key to accept the value
into the selected cell. The single load event is now defined.
On the left hand side the load sequence is defined. Expand the tree to see the load sequence and event
defined.
6.To create these from scratch, remove all the existing load sequences using the right mouse button by
click on Load Sequences and select Remove All Sequences . Then, follow these instructions:
a.Use the right mouse button to click on the Load Sequences  and Add a New Sequence.
b.Right-click on the new sequence and Add Event .
c.Select only one event from the list box that appears.
d.Click Apply .
The load sequence is now defined. However, you want the fatigue life to be reported back as Cycles
and not Repeats  of the time history.
7.To report fatigue life back as Cycles and not Repeats  of the time history, do the following:
a.Right mouse click on the load sequence you created.
b.Select Edit Sequence&amp;hellip; . In the subordinate form that appears, change Repeats  to Cycles.
c.Click Apply .&lt;/p&gt;
&lt;p&gt;155 CHAPTER 5
A Simple e-N Analysis
Main Index
You can view the time history by using the Time History Manager  button. This launches a utility to
view and manage these DAC files. To use this utility, the DAC file must first be loaded into its
database. Then you can graphically view it. The operation of this utility is fairly easy and intuitive.
Patran operation will be suspended until you exit from the utility.
Data on this form defines the FTGSEQ /FTGEVNT /FTGLOAD /UDNAME  entries. You can close the Load
Sequence  form using the OK button.
Step 6: Run the Analysis
Press the Apply  button on the Analysis  application form to submit the job.
Step 7: View the Results
1.When the job is complete, attach the MSC Nastran database to Patran to view the results. Still in the
Analysis  application, set the following:
•Action: Access Results
•Object: Attach MASTER
•Method : Result Entities.
2.Select the piderci_v1.MASTER  file and click Apply .
3.Go to the Results  application and view the results by selecting Log of Damage  or Log of Life,
4.Repeat using the spiderCI_v1:EN_42  results case.
Step 8: Run other Fatigue Jobs
To run the other jobs from this Chapter, you can import each input deck into a new empty database
and repeat the steps here making modifications as necessary and shown below for each different
input deck. Or you can define new jobs in the same database by selecting the existing job
spiderCI_v1 and then renaming it and making the modifications as necessary. The table below lists
the modifications necessary for each with the first as the baseline.&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Patran Setup156
Main Index
Whenever you change a job name, reselect the subcases for your job and redefine the loading
sequence. Also, inspect the selected subcases and loading sequence before submitting the job.
Input Deck Modification
spiderCI_v1.dat Baseline - no modifications necessary
spiderCI_v2.dat This example has two differences from the first. Instead of sine01.dac
used to define the load variation, a Patran non-spatial field is used. The
field is identical to that used in Chapter 3: A Simple S-N Analysis . Please
reference that example.
The other difference is that the Output Requests&amp;hellip;  limit the elements
analyzed to only those showing the critical fatigue life. On import of
this deck a group is created that contains only the elements of the model
of interest, namely elements 1782, 1783, 2016, 2017, 2250, and 2251.
The group is then selected as part of the Output Requests&amp;hellip; from the
Select Group(s) list box.
spiderCI_v3.dat This example limits the fatigue results to just the critical element just as
the 2nd example above. However it derives the -N properties from the
UTS of the material. In the Materials  application select the Strain-Life
(eN) constitutive model and change it so Option : Derived, Material
(CODE): Ferrous(99), Stress and Curve Type : None. Only UTS needs
to be defined as 480 MPa and the Conversion Factor. Note that
changing an existing material will change this for all defined jobs that
have elements associated with this material.
spiderCI_v4.dat This example is identical to the 2nd example above but uses strains in
the fatigue calculation directly instead of stresses. On the Fatigue
Parameters&amp;hellip; form change F .E. Results  to Strain .&lt;/p&gt;
&lt;p&gt;Main Index
Chapter 6: Multiple Loading
6 Multiple Loading
Problem Description
Fatigue Setup
Patran Setup&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Problem Description158
Main Index
Problem D escription
Until now,  we have used simple, semi-fabricated examples to illustrate concepts. Now we take a more realistic,
real-world example. The model is still simple but the loading is complex. This example describes a typical
multiple load case fatigue analysis. An S-N approach is employed.
Figure 6-1  Aircraft Rear Engine Mounting Lug
The component is a titanium alloy aircraft rear engine mounting lug. It is mounted across the rear of the
aircraft wing and is used to locate a pin which constrains the rear of the engine in the x-y plane. The engine
is restrained in the z-direction (direction of travel) by the front engine mounting. Thrust results in a
downward distribution of pressure and is simulated by a cos2t pressure distribution over a 90 degree angle,
amounting to a resultant force of around 1000 Newtons. The model is composed of 2D quadratic elements.
The lug is mounted very stiffly along its top edge, simulated by constraining this edge for all degrees-of-
freedom.
Loading around the lug hole is simulated by applying 8 different load cases. Each load is a separate subcase
and spaced every 45 degrees. A loading spectrum is available consisting of horizontal and vertical loads that
represent 1000 flights. The design life is approximately 30,000 flights.&lt;/p&gt;
&lt;p&gt;159 CHAPTER 6
Multiple Loading
Main Index
Objectives
To assess the fatigue life of safety critical items
To demonstrate setup of multiple loading conditions
To determine the critical location
Figure 6-2  Stress Distribution due to Eight Subcase
As you can see, each load case gives a different stress distribution. It is not clear from these stress plots where
the critical location will be when combined.
Files Required
All files necessary to run this and subsequent examples are found in the test problem library ( tpl/nef_ug )
directory in a complete MSC Nastran Documentation installation.
Table 6-1  Files Required
Files Required Description
mountingLUG_v1.dat Original Input File - Entire model
mountingLUG_v2.dat Inside Elements Only
mountingLUG_v3.dat Factor of Safety analysis on inside elements
mountingLUG_v4.dat Fatigue analysis using static offset subcase
xpos.dac
xneg.dac
ypos.dac
yneg.dacCyclic load definition file in positive x and y directions and negative x
and y directions&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup160
Main Index
Fatigue Setup
The setup differences between this model and those previously demonstrated revolves around the cyclic
loading. Therefore only brief descriptions of the material and physical properties and other fatigue parameters
are described. The major portions of the input deck for this model are shown below.
There are two versions of this analysis job :
Where all elements of the model are included ( see file mountingLUG_v1.dat )
Where only the inner ring of elements is included ( see file mountingLUG_v2.dat ) as we expect the
critical location to be on one of these elements.
Case Control
Eight subcases are defined to simulate the eight different loading conditions. Only the first subcase definition
is fully shown. The FATIGUE  output request case control calls out a fatigue analysis using   FTGPARM , FTGDEF ,
and FTGSEQ  bulk data of ID 42
SOL 101
CEND
$
TITLE = Mounting Lug Model (Multiple Loads)
$
FATIGUE = 42
$
SUBCASE 1
SUBTITLE=Load_Case.1
SPC = 2
LOAD = 10
DISPLACEMENT(SORT1,REAL)=ALL
SPCFORCES(SORT1,REAL)=ALL
STRESS(SORT1,REAL,VONMISES,BILIN)=ALL
SUBCASE 2
&amp;hellip;
SUBCASE 8
&amp;hellip;
BEGIN BULK
&amp;hellip;&lt;/p&gt;
&lt;p&gt;161 CHAPTER 6
Multiple Loading
Main Index
Material and Physical Properties
The SET1 entry below defines the inner ring of elements, which is referenced by the FTGDEF  entry to define
the elements on which to do a fatigue analysis. The FTGDEF  entry also associates the elements to physical
fatigue properties on the PFTG entry. The entry is shown here with default values set. The S-N data set is
defined on the MATFTG  entry, which is associated to its corresponding MAT1 entry of the same ID that is
referenced by a property, in this case a PSHELL entry.
SET1    21      1       THRU    10      51      THRU    60      121
THRU    132     157     THRU    168     193     THRU    204
229     THRU    240
FTGDEF  42
ELSET   21      211
&amp;hellip;
PFTG    211             N ONE
&amp;hellip;
MAT1    1       120000. 46086.9 .3
MATFTG  1       1.0
STATIC  925.0   986.0   300             -1.0    0.05
SN      1.188E4 -0.2588 1.0E7   0.0
Model Units
The model stress units for this example are MPa. The following bulk data defines the stress units used in the
analysis and passes this information to the fatigue analyzer so that proper unit conversions can be done when
calculating fatigue life. All stress-based parameters on the above MATFTG  and MAT1 entries are thus defined
in MPa also.
DTI     UNITS   1                                       MPA
Fatigue Parameters
The FTGPARM  entry defines the type of fatigue analysis to be performed. An S-N analysis in this case.   The
certainty of survival is set to 96% based on the scatter in the S-N material data. Stress tensor data is resolved
to the ABSolute MAX imum PRincipal stress as the stress parameter to look up on the S-N curve. A
GOODMAN  mean stress correction method is to be used and the fatigue life is to be calculated at the nodes
(NOD A) of selected e lements  based on nodal averaged stresses d efined by the FTGDEF entry.
FTGPARM 42      SN      1.0
STRESS  ABSMAXPR GOODMAN         NODA
CERTNTY 96.0&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup162
Main Index
Cyclic Loading
The main difference between this analysis and previous examples is the cyclic loading. Up to this point we
have dealt with simple, single location, single direction, cyclic loading.   Only one subcase has been necessary
to define the stress state of a single load application.
In this example we have eight load applications, each of which exhibits its own unique stress state. In practice
the load could be in any direction. However for practical reasons we can not have an infinite number of load
cases, so we have applied a finite number around the perimeter of the hole and  simulate loading in any
particular direction by a linear combination of the nearest two load cases. Eight load cases are set up around
the perimeter. However, to simplify things for this example we use only four of these in the fatigue analysis.
Of course, the more load cases you use in a case like this, the more accurate the simulation of the load
distribution at any instant.
The FTGSEQ  is called out by the FATIGUE  case control. The FTGSEQ  defines a loading sequence made up of load
events. In this case we still have only one load sequence made up of a single event defined on the FTGEVNT&lt;br&gt;
entry (see the next Chapter for a duty cycle example). The load event however, is made up of multiple
simultaneously applied loads, each defined on a FTGLOAD  entry. Each FTGLOAD  entry associates the stresses
from a particular subcase to its cyclic variation of the loading
In this analysis the four load cases used are in positive and negative x and y directions, respectively. Originally
the x and y loadings contained both positive and negative content. The problem with this is that when you
have loading via a pin, as in this case, the stress distribution for a unit negative x loading is not minus one (-&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;times the stress distribution for a positive x loading. Positive and negative loads have to be treated as
separate load cases, with separate load histories.
For this reason, the x and y loadings are separated into positive and negative parts. These measured loads exist
in external DAC formatted files called xpos.dac, ypos.dac, xneg.dac , and yneg.dac  and get
referenced in the deck on UDNAME  entries. The DB flag specifies that UDNAME  entries are to be referenced as
opposed to TABLFTG  or TABLED1  entries, which could have just as easily been used.FTGSEQ 42
33      1.0
UNITS   1000.0  Flights
FTGEVNT 33      101     103     105     107
FTGLOAD 101     111     1       0.924   1.0     0.0     DB
FTGLOAD 103     113     3       1.023   1.0     0.0     DB
FTGLOAD 105     115     5       1.121   1.0     0.0     DB
FTGLOAD 107     117     7       1.218   1.0     0.0     DB
UDNAME  111
./xpos.dac
UDNAME  113
./ypos.dac
UDNAME  115
./xneg.dac
UDNAME  117
./yneg.dacPoints to SUBCASEs 1, 3, 5,
&amp;amp; 7, respectively&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;163 CHAPTER 6
Multiple Loading
Main Index
Note that all the histories have positive values. The stress distributions from the FE analyses are used to define
the actual sign (positive or negative).
Figure 6-3  Four Cyclic Loads Applied to the Mounting Lug
The load magnitude from each load case is around 1000 N (they vary slightly with each load case). The cyclic
variations have been defined in kNewtons whereas the FE loads use Newtons. To keep the loading consistent
the Load Magnitudes are defined in kNewtons on the LDM (5th) field of the FTGLOAD  entry.
Principal of Linear Su perpo sition
We have four load cases all of which vary independently of one another. Fatigue analysis uses the principle
of linear superposition to combine all load cases together to determine the stress variation at each location
due to the combination of all loads. This is done using the following formula:SUBCASE ID Time History Load Magnitude
1 xpos.dac 0.924
3 ypos.dac 1.023
5 xneg.dac 1.121
7 yneg.dac 1.218
ijt Pktijk
Pfeak&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;

k=&lt;/p&gt;
&lt;p&gt;MSC Nastran Embedded Fatigue User’s Guide
Fatigue Setup164
Main Index
where the elastic FE stresses, ij, from each load case, k, are normalized by the load magnitude from the FE
analysis, Pfea,k and then multiplied by the time variation of the loading, Pk(t). The result of summing over
all load cases gives the total stress time variation at each location of the model. To summarize:
Pk(t) corresponds to each time history in our example defined on the UDNAME  entries and referenced
by the TID (3rd) field of the FTGLOAD  entries with DB flag in TYPE (7th) field: xpos.dac , ypos.dac ,
xneg.dac , yneg.dac
ij,k are the stresses from each SUBCASE defined in the LCID (4th) field of the FTGLOAD  entries:
1,3, 5, &amp;amp; 7 (only four are used)
Pfea,k are the load magnitudes used to normalize the stresses from each SUBCASE defined in the
LDM (5th) field of the FTGLOAD  entry: 0.924, 1.023, 1.121, 1.218
Or in terms of strains for Crack Initiation jobs:
Figure 6-4  Principle of Linear Superposition in Fatigue Analysis
To summarize the procedure:
1.All load cases are normalized with respect to each FE load case magnitude, i.e., converted to unit
loads, if necessary. This is done by dividing the FE stresses by the load magnitudes and then
multiplying by the time history.
2.All normalized stress time histories for each load case are superimposed using the principal of linear
superposition.
3.The stress time history tensor is resolved down to a single scalar value versus time as defined on the
FTGPARM  entry - the stress combination COMB (4th) field.
4.Rainflow cycle counting is performed.
5.Any reductions and corrections (surface finish, mean stress, etc.) are applied.
6.Finally, damage is summed according to the linear damage summation rules.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
