{"/about/":{"data":{"":" The website is used as an online repository for Nastran 95 documentation. It was created by the Simulation Software Technology Center of Hexagon Manufacturing Intelligence (Qingdao) Co., Ltd. "},"title":"About"},"/docs/":{"data":{"":"NASTRAN has been released under the NASA Open Source Agreement version 1.3.\nNASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970’s. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.\nNOTE: There is no technical support available for this software."},"title":"Documentation"},"/docs/programmers/":{"data":{"":"NASA SP-223 (01) THENASTRAN PROGRAMMER’S MANUAL SEPTEMBER 1972 Scientific andTechnical Information Office 1972 NATIONAL AERONAUTICS AND SPACE ADMINISTRATION Washington, D.C. II]]1] i,\nForsalefromComputer Software Management andInformation Center (COSMIC) Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50\nPREFACE TOTHENASTRAN PROGRAMMER’S MANIIAL TheProgrammer’s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN, theother three being theTheoretical Manual, theUser’s Manual andtheDemonstration Problem Manual. TheProgrammer’s Manual isdivided intoseven major sections: Section l,NASTRAN Program- ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions; Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section 6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs. Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground material forallsections which follow. Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata communication between theprogram’s functional modules (amodule isdefined tobeagroup ofsub- routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha- betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections 2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven atthebeginning ofSections 2.4and2.5respectively. Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2. Thereader isurged toreadtheintroductory material toSections 3and4before using these sections. Section 5treats computer andoperating system dependent matters suchasoperating system control cards andgeneration oftheabsolute (executable) NASTRAN system. Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented. Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN. Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners ofthesystem ofnewmnemonics, acronyms, phrases and\"buzz\" words. Inorder toaidthereader in i(811172)\nlearning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN Dictionary, oftheUser’s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat leastthissection oftheUser’s Manual forhisday-to-day reference. ii(8/I/72)"},"title":"Programmer's Manual"},"/docs/programmers/programmers_manual_001/":{"data":{"":"NASA SP-223 (01) THENASTRAN PROGRAMMER’S MANUAL SEPTEMBER 1972 Scientific andTechnical Information Office 1972 NATIONAL AERONAUTICS AND SPACE ADMINISTRATION Washington, D.C. II]]1] i,\nForsalefromComputer Software Management andInformation Center (COSMIC) Barrows Hall,University ofGeorgia, Athens, Georgia 30601 -Price $27.50\nPREFACE TOTHENASTRAN PROGRAMMER’S MANIIAL TheProgrammer’s Manual isoneoffourmanuals thatconstitute thedocumentation forNASTRAN, theother three being theTheoretical Manual, theUser’s Manual andtheDemonstration Problem Manual. TheProgrammer’s Manual isdivided intoseven major sections: Section l,NASTRAN Program- ming Fundamentals; Section 2,DataBlock andTable Descriptions; Section 3,Subroutine Descriptions; Section 4,Module Functional Descriptions; Section 5,NASTRAN -Operating System Interfaces; Section 6,Modifications andAdditions toNASTRAN; andSection 7,NASTRAN Support Programs. Section lisageneral overview oftheprogram, andassuchitshould bereadasbackground material forallsections which follow. Section 2contains descriptions ofthedatablocks, which aretheprincipal means ofdata communication between theprogram’s functional modules (amodule isdefined tobeagroup ofsub- routines which perform aspecific function) andtheNASTRAN Executive System. Twoindexes forthe datablock descriptions, onesorted alphabetically ondatablock names andtheother sorted alpha- betically onthenames ofthemodules fromwhich thedatablocks areoutput, aregiven inSections 2.2.1 and2.2.2 respectively. Section 2alsocontains a)descriptions oftables, both coreand noncore resident, maintained bytheNASTRAN Executive System andb)descriptions ofmiscellaneous tables which areaccessed byaclass ofmodules. Alphabetical indexes forthese tables aregiven atthebeginning ofSections 2.4and2.5respectively. Sections 3and4contain descriptions ofthe(utility orgeneral purpose) subroutines and modules ofNASTRAN respectively. Thereader isdirected tothealphabetical indexes, sorted on entry point names, inSections 3.2and4.1.3 respectively forthese sections. Anindex tothe Module Functional Descriptions, sorted alphabetically onmodule names, isgiven inSection 4.1.2. Thereader isurged toreadtheintroductory material toSections 3and4before using these sections. Section 5treats computer andoperating system dependent matters suchasoperating system control cards andgeneration oftheabsolute (executable) NASTRAN system. Section 6describes themeans bywhich modifications andadditions toNASTRAN areimplemented. Section 7describes several auxiliary programs usedtomaintain orinterface withNASTRAN. Thelearning ofanynewsystem, whether itbeanoperating system oralarge applications system likeNASTRA_I, ismademoredifficult thanitought tobebecause oftheusebythedesigners ofthesystem ofnewmnemonics, acronyms, phrases and\"buzz\" words. Inorder toaidthereader in i(811172)\nlearning suchcommonly usedNASTRAN terms, asingle source reference, Section 7,theNASTRAN Dictionary, oftheUser’s Manual isprovided. Theprogrammer isadivsed tosecure acopyofat leastthissection oftheUser’s Manual forhisday-to-day reference. ii(8/I/72)\nTABLE OFCONTENTS Section I.NASTRAN PROGRAMMING FUNDAMENTALSPageNo. l.l 1.2PROGRAM 1.I.I l.l.2 NASTRAN l.2.1 l.2.2 l.2.3OVERVIEW ………………………………………………….. l.l-I Objectives ………………………………………………… l.l-I Program Organization ………………………………………. l.l-3 EXECUTIVE SYSTEM …………………………………………… 1.2-1 Introduction ………………………………………………. 1.2-1 Executive Operations During thePreface ………………………. 1.2-4 Executive Operations During Problem Solution ………………….. 1.2-9a 1.3 WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS ……………………….. 1.3-1 1.3.1 Introduction ………………………………………………. 1.3-1 1.3.2 Alphanumeric Data ………………………………………….. 1.3-2 1.3.3 Word Packing ………………………………………………. 1.3-2 1.4 SYSTEM BLOCK DATASUBPROGRAM (SEMDBD) ………………………………… 1.4-1 1.5 THEOPENCORECONCEPT ……………………………………………… 1.5-1 1.5.1 Introduction ………………………………………………. 1.5-1 1.5.2 Definition ofOpenCore …………………………………….. 1.5-1 1.5.3 Example ofanApplication ofOpenCore ……………………….. 1.5-1 1.6 NASTRAN INPUT/OUTPUT ………………………………………………. 1.6-1 1.6.1 Introduction ………………………………………………. 1.6-1 1.6.2 UseoftheOperating System Input File ……………………….. 1.6-1 1.6.3 UseoftheOperating System Output File ………………………. 1.6-2 1.6.4 GIN_ ……………………………………………………… 1.6-3 1.7 NASTRAN MATRIX ROUTINES ……………………………………………. 1.7-I 1.7.1 Introduction ………………………………………………. 1.7°l 1.7.2 Matrix Packing andUnpacking ………………………………… 1.7-1 1.7.3 TheNested Vector SetConcept UsedtoRepresent Components ofDisplacement ……………………………………………. 1.7-2 1.7.4 Processing ofMatrices ……………………………………… 1.7-4 1.8 GENERATION OFMATRICES …………………………………………….. 1.8-1 1.8.1 TheECPTDataBlock ………………………………………… 1.8-1 1.8.2 Structural Elements ………………………………………… 1.8-2 iii(8/I/72)\n,Section 1.9 1.I0TABLEOFCONTENTS (Continued) 2.PageNo. TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES ……………………….. 1.9-I RESTARTS INNASTRAN ……………………………………………….. I.I0-I DATABLOCKANDTABLEDESCRIPTIONS 2.1INTRODUCTION …………………………………………………….. 2.1-I 2.2DATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES ………………… 2.2-I 2.2.1 IndexforDataBlockDescriptions Sorted onDataBlockNames ……. 2.2-3 2.2.2 IndexforDataBlockDescriptions Sorted Alphabetically byModule ..2.2-11 2.3DATABLOCKDESCRIPTIONS ……………………………………………. 2.3-I 2.3.1 DataBlocks Output FromModule IFPI………………………….. 2.3-I 2.3.2 DataBlocks 2.3.3 DataBlocks 2.3.4 DataBlocks 2.3.5 DataBlocks 2.3.6 DataBlocks 2.3.7 DataBlocks 2.3.8 DataBlocks 2.3.9 DataBlocks 2.3.10 DataBlocks 2.3.11 DataBlocks 2.3.12 DataBlocks 2.3.13 DataBlocks 2.3.14 DataBlocks 2.3.15 DataBlocks 2.3.16 DataBlocks 2.3.17 DataBlocks 2.3.18 DataBlocks 2.3.19 DataBlocks 2.3.20 DataBlocks 2.3.21 DataBlocks 2.3.22 DataBlocksOutput FromModule IFP…………………………… 2.3-5 Output FromModule GPI…………………………… 2.3-31 Output FromModule GP2…………………………… 2.3-36 Output FromModule PLTSET ………………………… 2.3-37 Output FromModule PL_T………………………….. 2.3-40 Output FromModule GP3…………………………… 2.3-41 Out)ut FromModule TAI…………………………… 2.3-45 Out)ut FromModule SMAI………………………….. 2.3-56 Out)ut FromModule SMA2………………………….. 2.3-58 Out)ut FromModule GPWG………………………….. 2.3-59 Out)ut FromModule SMA3………………………….. 2.3-60 Out)ut FromModule GP4…………………………… 2.3-61 Out)ut FromModule GPSP………………………….. 2.3-63 Out)ut FromModule MCEI………………………….. 2.3-64 Out)ut FromModule MCE2………………………….. 2.3-65 Out)ut FromModule SCEI………………………….. 2.3-67 Out)ut FromModule SMPI…………. ………………. 2.3-70 OutDut FromModule RBMGI …………………………. 2.3-73 Output FromModule RBMG2 …………………………. 2.3-75 Output FromModule RBMG3 …………………………. 2.3-77 Output FromModule RBMG4 …………………………. 2.3-78 iv(8/I172)\nSection 2.3.23 2.3.24 2.3.25 2.3.26 2.3.27 2.3.28 2.3.29 2.3.30 2.3.31 2.3.32 2.3.33 2.3.34 2.3.35 2.3.36 2.3.37 2.3.38 2.3.39 2.3.40 2.3.41 2.3.42 2.3.43 2.3.44 2.3.45 2.3.46 2.3.47 2.3.48 2.3.49 2.3.50 2.3.51 2.3.52TABLEOFCONTENTS (Continued) PageNo. DataBlocks Output FromModule SSGI………………………….. 2.3-79 DataBlocks Output FromModule SSG2………………………….. 2.3-80 DataBlocks Output FromModule SSG3………………………….. 2.3-81 DataBlocks Output FromModule SSG4………………………….. 2.3-83 DataBlocks Output FromModule SDRI………………………….. 2.3-84 DataBlocks Output FromModule SDR2………………………….. 2.3-88 DataBlocks Output FromModule DPD…………………………… 2.3-114 DataBlocks Output FromModule READ………………………….. 2.3-125 DataBlocks Output FromModule DSMGI …………………………. 2.3-128 DataBlocks Output FromModule SMP2………………………….. 2.3-129 DataBlocks Output FromModule DSMG2 …………………………. 2.3-130 DataBlocks Output FromModule PLAI………………………….. 2.3-132 DataBlocks Output FromModule ADD…………………………… 2.3-137 DataBlocks Output FromModule PLA2………………………….. 2.3-138 DataBlocks Output FromModule PLA3………………………….. 2.3-139 DataBlocks Output FromModule PLA4………………………….. 2.3-140 DataBlocks Output FromModule CASE………………………….. 2.3-141 DataBlocks Output FromModule MTRXIN ………………………… 2.3-142 DataBlocks Output FromModule GKAD………………………….. 2.3-143 DataBlocks Output FromModule CEAD………………………….. 2.3-146 DataBlocks Output FromModule VDR…………………………… 2.3-149 DataBlocks Output FromModule FRRD………………………….. 2.3-158 DataBlocks Output FromModule SDR3………………………….. 2.3-160 DataBlocks Output FromModule XYTRAN ………………………… 2.3-175 DataBlocks Output FromModule RANDOM ………………………… 2.3-179 DataBlocks Output FromModule TRD…………………………… 2.3-181 DataBlocks Output FromModule GKAM………………………….. 2.3-183 DataBlocks Output FromModule DDRI………………………….. 2.3-184 Element Stress Output DataDescription ……………………….. 2.3-185 Element ForceOutput DataDescription ………………………… 2.3-189 v(811172)\nSection 2.4TABLEOFCONTENTS (Continued) 3.2.3.53 DataBlocks Output FromModule DDR2………………………….. 2.3.54 DataBlocks Output FromModule BMG…………………………… 2.3.55 DataBlocks Output FromModule PLTTRAN ……………………….. EXECUTIVE TABLEDESCRIPTIONS ………………………………………..PageNo. 2.3-192 2.3-194 2.3-194 2.4-I 2.4.1 Executive Tables WhicharePermanently CoreResident …………… 2.4-2 2.4.2 Executive Tables NotPermanently CoreResident ………………… 2.4-15 2.5MISCELLANEOUS TABLEDESCRIPTIONS ……………………………………. 2.5-I 2.5.1 Miscellaneous Tables WhicharePermanently CoreResident ……….. 2.5-2 2.5,2 Miscellaneous Tables NotPermanently CoreResident …………….. 2,5-6 SUBROUTINE DESCRIPTIONS 3.1INTRODUCTION …………………………………………………….. 3.1-I 3.2ALPHABETICAL INDEXOFENTRYPOINTS FORSUBROUTINE DESCRIPTIONS …………. 3.2-I 3.3EXECUTIVE SUBROUTINE DESCRIPTIONS ………………………………….. 3.3-I 3.3.1 XSEMI (Executive Sequence Monitor, Preface) …………………… 3.3-I 3.43.3.2 3.3.3 3.3.4 3.3.5 3.3.6 3.3.7 3.3.8 3.3.9 3.3.10 3.3.11 3.3.12 3.3.13 3.3.14 3.3.15BTSTRP SEMINT GNFIAT ENDSYS(Bootstrap Generator) ………………………………… 3.3-2 (Sequence Monitor Initialization) ……………………… 3.3-3 (Generate FIAT)……………………………………… 3.3-5 (End-of-Link) ……………………………………….. 3.3-6 SEARCH (Search, Load,andExecute Link) ………………………. 3.3-8 XSEMi(LinkiMainProgram, i=2,3….)……………………… 3.3-9 XSEMXX (Sequence Monitor -DeckGenerator) ……………………. 3.3-11 GNFIST (Generate FIST) ……………………………………… 3.3-12 XEOT(End-of-Tape) …………………………………………. 3.3-14 SSWTCH (Sense Switches) …………………………………….. 3.3-15 C_NMSG (Console Message Writer) …………………………….. 3.3-16 TTLPGE (Title PageWriter) ………………………………….. 3.3-17 SEMTRN (Transliteration) (IBH360-370 only) …………………… 3.3-19 RETURN (Return) ……………………………………………. 3.3-20 3.4-I 3.4-IUTILITY SUBROUTINE DESCRIPTIONS …………………………………….. 3.4.1 MAPFNS (Machine WordFunctions) ……………………………… vi(8/I/72)\nSecti on 3.4.2 3.4.3 3.4.4 3.4.5 3.4.6 3.4.7 3,4.8 3.4.9 3.4.10 3.4.11 3.4.12 3.4.13 3.4.14 3.4.15 3.4.16 3.4.17 3.4.18 3.4.19 3.4.20 3.4.21 3.4.22 3.4.23 3.4.24 3.4.25 3.4.26 3.4.27 3.4.28 3.4.29 3.4.30 3.4.31TABLE OFCONTENTS (Continued) PageNo. _PEN (Initiate Activity onaFile) …………………………… 3.4-3 WRITE (Write DatainaLogical Record) ……………………….. 3.4-4 CLOSE (Terminate Activity onaFile) …………………………. 3.4-5 READ (Read DataFromaLogical Record) ……………………….. 3.4-6 FWDREC (Forward Space OneLogical Record) …………………….. 3.4-8 BCKREC (Backspace OneLogical Record) ………………………… 3.4-9 REWIND (Position FiletotheLoadPoint) ……………………… 3.4-I0 EOF(Write anEnd-of-File) ………………………………….. 3.4-II SKPFIL (Skip Files Forward orBackward) ………………………. 3.4-12 XGINO (GINO Utility Routine) ………………………………… 3.4-13 GINO (General Input/Output Routine) ………………………….. 3.4-15 OPNCOR (Transmit Logical Records To/From CoreStorage) …………. 3.4-20 GOPEN (Short FormforSubroutine _PENWithHeader Record Processing) ……………………………………………….. 3.4-22 FREAD (Short FormforSubroutine READ) ……………………….. 3.4-23 WRTTRL (Write Trailer) ……………………………………… 3.4-24 FNAME (File Name) ………………………………………….. 3.4-25 CLSTAB (Close aGINOFileandWrite aNonzero Trailer) ………….. 3.4-26 XRCARD (Executive Free-Field CardDataConversion Routine) ………. 3.4-27 RCARD (Fixed Field CardDataConversion Routine) ………………. 3.4-32 TAPBIT (Tape BitTest) ……………………………………… 3.4-35 PEXIT (Problem Exit)………………………………………… 3.4-36 TMTOGO (Time-To-Go) ………………………………………… 3.4-37 PAGE (Page Heading) ……………….. _………………………. 3.4-38 MESAGE (Message) …………………………………………… 3.4-39 MSGWRT (Message Writer) …………………………………….. 3.4-40 USRMSG (User Message Writer) ………………………………… 3.4-41 MATDUM (Matrix Dump(Print) Routine) …………………………. 3.4-42 TABPRT (Table Printer) ……………………………………… 3.4-43 PRELOC (Position DataBlock toRequested Record) ………………. 3.4-44 SORT (Sort aTable) ………………………………………… 3.4-46 vii(811172)\nSection 3.4.32 3.4.33 3.4.34 3.4.35 3.4.36 3.4.37 3.4.38 3.4.39 3.4.40 3.4.41 3.4.42 3.4.43 3.4,44 3.4.45 3.4.46 3.4.47 3.4.48 3.4.49 3.4.50 3.4.51 3.4.52 3.4.53 3.4.54 3.4.55 3.4,56 3.4.57 3.4.58 3.4.59 3.4.60GMMATD Precisi GMMATS Precisi INVERD INVERS PREMAT PRETRD Double PRETRS Single PRETABTABLEOFCONTENTS (Continued) PageNo. (General Matrix Multiply andTranspose -Double on)………………………………………………… 3.4-49 (General Matrix Multiply andTranspose -Single on)………………………………………………… 3.4-52 (Double Precision InCoreInverse Routine) ………………. 3.4-53 (Single Precision InCoreInverse Routine) ……………… 3.4-54 (Material Property Utility) …………………………… 3.4-55 (Utility forModules WhichUsetheCSTMDataBlock- Precision Version) …………………………………… 3.4-64 (Utility forModules WhichUsetheCSTMDataBlock - Precision Version) …………………………………… 3.4-66 (Table Look-Up) ……………………………………… 3.4-67 AXIS(DrawanAxisonaPlot) ……………………………….. 3.4-70 AXISi(AxisRoutine forPlotter i)…………………………… 3.4-72 SKPFRM (SkipaVariable Number ofFrames) …………………….. 3.4-73 SELCAM (ToInitiate aNewPlot) …………………………….. 3.4-74 IDPL_T (Generate an\"ID\"Plot) ………………………………. 3.4-75 INTGPX (Search aListofIntegers) …………………………… 3.4-76 INTLST (Interpret aListofIntegers) ………………………… 3.4-77 LINE(DrawaLineonaPlotter) ……………………………… 3.4-78 LINEi(DrawaLineonPlotter i)…………………………….. 3.4-79 PRINT(Print aTitleonaPlotter) …………………………… 3.4-81 RDM_DX (ReadaFileContaining XRCARD Translations) ……………. 3.4-83 SGINO (GI_!OforUnformatted Tapes) …………………………… 3.4-85 STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot)……. 3.4-87 SYMBOL (TypeaSymbol onaPlotter) ………………………….. 3.4-88 TIPE(TypeaLineofCharacters onaPlotter) …………………. 3.4-90 TYPEi (TypeaLineofCharacters onPlotter i)………………… 3.4-92 TYPFLT (TypeaFloating PointNumber onaPlotter) …………….. 3.4-94 TYPINT (TypeanInteger Number onaPlotter) ………………….. 3.4-96 WPLTI (Write aPlotter Command forPlotter I)…………………. 3.4-98 WPLT2 (Write aPlotter Command forPlotters 2and8)…………… 3.4-100 WPLT3 (Write aPlotter Command forPlotter 3)…………………. 3.4-102 viii(8/I/72)\nSectionTABLE OFCONTENTS (Continued) 3.4.61 3.4.62 3.4.63 3.4.64 3.4.65 3.4.66 3.4.67 3.4.68 3.4.69 3.4.70 3.4.71 3.4.72 3.4.73 3.4.74 3.4.75 3.4.76 3.4.77 3.4.78 3.4.79PageNo. GINOIO (GINO Input/Output Routine) …………………………… 3.4-I03 EJECT (Automatic PageEject) ………………………………… 3.4-105 PLAMAT (Material Property Utility forTwo-Dimensional Elements inPiecewise Linear Analysis) ………………………………… 3.4-I06 WPLT4 (Write aPlotter Command forPlotters 4through 7)……….. 3.4-I08 WPLT9 (Write aPlotter Command forPlotter 9)…………………. 3.4-II0 WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose Plotter) ………………………………………………….. 3.4-III PLTSET (Plotting Parameter Initialization) …………………… 3.4-I13 DRWCHR (ToDrawaLineofCharacters) ………………………… 3.4-I15 FNDPLT (Determine theInternal Plotter andModel Indices) ………. 3.4-I17 PHDMIA (DMIPunch Routine) ………………………………….. 3.4-I18 HEAD (Plot Heading) ………………………………………… 3.4-120 DELSET (Dummy Element Setup). ……………………………….. 3.4-121 HMAT (Heat Transfer Material Property Utility) ………………… 3.4-122 (Binary Search) ……………………………………… 3.4-123 BISRCH FORFIL (File Unit) …………………………………………. 3.4-126 DADOTB (Double Precision Vector DotProduct) ………………….. 3.4-127 DAXB(Double Precision Vector Cross Product) ………………….. 3.4-128 SADOTB (Single Precision Vector DotProduct) ………………….. 3.4-129 SAXB(Single Precision Vector Cross Product) ………………….. 3.4-130 3.5 MATRIX SUBROUTINE DESCRIPTIONS ……………………………………… 3.5-I BLDPK (Build aPacked Column ofaMatrix) …………………….. 3.5-I PACK (Pack aColumn ofaMatrix) ……………………………. 3.5-5 INTPK (Interpret aPacked Column ofaMatrix) …………………. 3.5-7 UNPACK (Unpack aPacked Column ofaMatrix) ……………………. 3.5-I0 CALCV PARTN SSG2A SDRIB UPART3.5.l 3.5.2 3.5.3 3.5.4 3.5.5 3.5.6 3.5.7 3.5.8 3.5.9(Compute aPartitioning Vector) ………………………… 3.5-12 -MERGE (Partition aMatrix -Merge Matrices Together) …….. 3.5-13 (Driver forPARTN) ……………………………………. 3.5-16 (Driver forMERGE) ……………………………………. 3.5-17 (Symmetric Partition Driver) …………………………… 3.5-18 ix(811172) L\nTABLEOFCONTENTS (Continued) Section 4.PageNo. 3.5.10 ADD(Driver forSADD) ………………………………………. 3.5-19 3.5.11 SSG2C(Driver forADD)……………………………………… 3.5-20 3.5.12 MPYAD(Matrix Multiplication Routine) ………………………… 3.5-22 3.5.13 SSG2B(Driver forMPYAD) ……………………………………. 3.5-29 3.5.14 SDCOMP (Symmetric Decomposition) …………………………….. 3.5-30 3.5.15 DECOMP (Unsymmetric Matrix Decomposition) …………………….. 3.5-44 3.5.16 CDCBMP (Complex Matrix Decomposition) ………………………… 3.5-62 3.5.17 FBS(Forward -Backward Substitution) ………………………… 3.5-64 3.5.18 SSG3A (Driver forFBS)……………………………………… 3.5-66 3.5.19 GFBS(General Forward -Backward Substitution) ………………… 3.5-67 3.5.20 SOLVER (Simultaneous Equation Solution Routine) ……………….. 3.5-69 3.5.21 DMPY(Multiply aDiagonal Matrix byanArbitrary Matrix) ……….. 3.5-71 3.5.22 ELIM(Perform aMatrix Reduction) ……………………………. 3.5-73 3.5.23 FACTOR (Decompose aMatrix IntoTriangular Factors) ……………. 3.5-74 3.5.24 TRANPI (Driver forTRNSP) …………………………………… 3.5-75 3.5.25 TRNSP (Matrix Transpose) ……………………………………. 3.5-76 3.5.26 SADD(Matrix Addition Routine) ………………………………. 3.5-78 3.5.27 RSPSDC (RealSingle Precision Symmetric Decomposition) …………. 3.5-80 3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition) ………. 3.5-82 3.5.29 CXFBS (Forward -Backward Substitution) ………………………. 3.5-84 MODULE FUNCTIONAL DESCRIPTIONS 4.1GENERAL COMMENTS ANDINDEXES ……………………………………….. 4.1-I 4.1.1 UseofModule Functional Descriptions ………………………… 4.1-2 4.1.2 Alphabetical IndexofModule Functional Descriptions ………….. 4.1-7 4.1.3 Alphabetical IndexofEntryPoints inModule Functional Descriptions ………………………………………………. 4.1-8 4.2EXECUTIVE PREFACE MODULE XCSA(EXECUTIVE CONTROL SECTION ANALYSIS) ……… 4.2-I 4.3 EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI)…………… 4.3-I 4.4EXECUTIVE PREFACE MODULE XSORT(EXECUTIVE BULKDATACARDSORT) …………. 4.4-I 4.5EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) …………………… 4.5-I x(811172)\nSection 4.6 4.7 4.8 4.9 4.10 4.11 4.12 4.13 4.14 4.15 4.16 4.17 4.18 4.19 4.20 4.21 4.22 4.23 4.24 4.25 4.26 4.27 4.28 4.29 4.30 4.31 4.32 4.33 4.34 4.35TABLE OFCONTENTS (Continued) PageNo. EXECUTIVE PREFACE MODULE IFP3(II4PUT FILEPROCESSOR 3)………………… 4.6-I EXECUTIVE PREFACE MODULE XGPI(EXECUTIVE GENERAL PROBLEM INITIALIZATION ….. 4.7-I EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) …………….. 4.8-I EXECUTIVE MODULE XSFA (EXECUTIVE SEGMENT FILEALLOCATOR) ………………. 4.9-I EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) …………………………….. 4.10-1 EXECUTIVE DMAPINSTRUCTION REPT (REPEAT AGROUP OFDMAP INSTRUCTIONS) ……. 4.11-1 EXECUTIVE DMAPINSTRUCTION JUMP (UNCONDITIONAL DMAPTRANSFER) ………….. 4.12-I EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) ………………… 4.13-I EXECUTIVE DMAPINSTRUCTION EXIT (TERMINATE DMAPPROGRAM) ………………. 4.14-I EXECUTIVE DMAPMODULE SAVE (SAVE VARIABLE PARAMETER VALUES) ……………. 4.15-I EXECUTIVE DMAPMODULE PURGE (EXPLICIT DATABLOCK PURGE) ……………….. 4.16-I EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) …………….. 4.17-I EXECUTIVE DMAPINSTRUCTION END(ENDOFDMAPPROGRAM) ………………….. 4.18-I EXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR) …………………….. 4.19-I EXECUTIVE DMAPMODULE-SETVAL (SETVALUES) …………………………… 4.20-I FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l)………………….. 4.21-I FUNCTIONAL MODULE GP2(GEOMETRY PROCESSOR -PHASE 2)………………….. 4.22-I FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) ………………. 4.23-I FUNCTIONAL MODULE PLBT (STRUCTURAL PLOTTER) ………………………….. 4.24-I FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3)………………….. 4.25-I FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) ……………………………… 4.26-I FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l)…………. 4.27-I FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2)…………. 4.28-I FUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) ………………….. 4.29-I FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3)………….. 4.30-I FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4)…………………… 4.31-I FUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) ……………… 4.32-I FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE l)…….. 4.33-I FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2)…….. 4.34-I FUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAINT ELIMINATOR) ……………. 4.35-I xi(811172)\nSection 4.36 4.37 4.38 4.39 4.40 4.41 4.42 4.43 4.44 4.45 4.46 4.47 4.48 4.49 4.50 4.51 4.52 4.53 4.54 4.55 4.56 4.57 4.58 4.59 4.60 4,61 4.62 4.63 4.64TABLEOFCONTENTS (Continued) P_Pa_geNo. FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEI)………. 4.36-I FUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASEI)……….. 4.37-I FUNCTIONAL MODULE RBMG2(RIGID BODYMATRIX GENERATOR -PHASE2)……….. 4.38-I FUNCTIONAL MODULE RBMG3(RIGID BODYMATRIX GENERATOR -PHASE3)……….. 4.39-I FUNCTIONAL MODULE RBMG4(RIGID BODYMATRIX GENERATOR -PHASE4)……….. 4.40-I FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI)………….. 4.41-I FUNCTIONAL MODULE SSG2(STATIC SOLUTION GENERATOR -PHASE2)………….. 4.42-I FUNCTIONAL MODULE SSG3(STATIC SOLUTION GENERATOR -PHASE3)………….. 4.43-I FUNCTIONAL MODULE SSG4(STATIC SOLUTION GENERATOR -PHASE4)………….. 4.44-I FUNCTIONAL MODULE SDRI(STRESS DATARECOVERY -PHASEI)………………. 4.45-I FUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE2)………………. 4.46-I FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) ……………………. 4.47-I FUNCTIONAL MO[ULE READ(REALEIGENVALUE ANALYSIS -DISPLACEMENT) ………. 4.48-I FUNCTIONAL MODULE DSMGI(DIFFERENTIAL STIFFNESS MATRIX GENERATOR - PHASEI)………………………………………………………… 4.49-I FUNCTIONAL MODULE SMP2(STRUCTURAL MATRIX PARTITIONER -PHASE2)………. 4.50-I FUNCTIONAL MODULE DSMG2(DIFFERENTIAL STIFFNESS MATRIX GENERATOR - PHASE2)………………………………………………………… 4.51-I FUNCTIONAL MODULE PLAI(PIECEWISE LINEAR ANALYSIS -PHASEI)………….. 4.52-I FUNCTIONAL MODULE PLA2(PIECEWISE LINEAR ANALYSIS -PHASE2)………….. 4.53-I FUNCTIONAL MODULE PLA3(PIECEWISE LINEAR ANALYSIS -PHASE3)………….. 4.54-I FUNCTIONAL MODULE PLA4(PIECEW!SE LINEAR ANALYSIS -PHASE4)………….. 4.55-I FUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) ………………………. 4.56-I FUNCTIONAL MODULE MTRXIN (MATRIX INPUT) …………………………….. 4.57-I FUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) ………………….. 4.58-I FUNCTIONAL MODULE CEAD(COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) …….. 4.59-I FUNCTIONAL MODULE VDR(VECTOR DATARECOVERY) ………………………… 4.60-I FUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) …….. 4.61-I FUNCTIONAL MODULE SDR3(STRESS DATARECOVERY -PHASE3-S@RTIto S_RT2PROCESSOR) …………………………………………………. 4.62-I FUNCTIONAL MODULE XYTRAN (XY-OUTPUT DATATRANSLATOR) ……………….. 4.63-I FUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) …………………….. 4.64-I xii(8/I/72)\nTABLEOFCONTENTS(Continued) Section 4.65 4.66 4.67 4.68 4.69 4.70 4.71 4.72 4.73 4.74 4.75 4.76 4.77 4.78 4.79 4.80 4.81 4.82 4.83 4.84 4.85 4.86 4.87Page No. FUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) …………….. 4.65-I FUNCTIONAL MODULE GKAM (GENERAL KASSEMBLER ,MODAL) …………………… 4.66-I FUNCTIONAL MODULE DDRI (DYNAMIC DATA RECOVERY -PART l)………………. 4.67-I FUNCTIONAL MODULE DDR2 (DYNAMIC DATA RECOVERY -PART 2)………………. 4.68-I OUTPUT MODULE XYPLOT (X-Y DATA PLOTTER) …………………………….. 4.69-I OUTPUT MODULE BFP(OUTPUT FILE PROCESSOR) …………………………… 4.70-I OUTPUT MODULE MATPRN (GENERAL MATRIX PRINTER) ……………………….. 4.71-I OUTPUT MODULE MATGPR (DISPLACEMENT METHOD MATRIX PRI_ITER) …………….. 4.72-I OUTPUT MODULE MATPRT (MATRIX PRINTER) ……………………………… 4.73-I OUTPUT MODULE SEEMAT (PICTORIAL MATRIX PRINTER) ……………………… 4.74-I OUTPUT MODULE TABPT (TABLE PRINTER) ………………………………… 4.75-I OUTPUT MODULE PRTMSG (MESSAGE WRITER) ………………………………. 4.76-I OUTPUT MODULE PRTPARM (PARAMETER ANDDMAPMESSAGE PRINTER) ……………. 4.77-I MATRIX MODULE ADD(ADDTWOMATRICES) ……………………………….. 4.78-I .MATRIX MODULE MPYAD(MULTIPLY ADD)…………………………………. 4.79-I MATRIX MODULE S_LVE (SOLVES THEMATRIX EQUATION [A][X] =[B])………….. 4.80-I MATRIX MODULE DECAMP (MATRIX DECOMPOSITION) …………………………. 4.81-I MATRIX MODULE FBS(FORWARD -BACKWARD SUBSTITUTION) ………………….. 4.82-I MATRIX MODULE PARTN(PARTITION AMATRIX) ……………………………. 4.83-I MATRIX MODULE MERGE(MERGE MATRICES TOGETHER) ……………………….. 4.84-I MATRIX MODULE TRNSP (TRANSPOSE AMATRIX) ……………………………. 4.85-I MATRIX MODULE SMPYAD (STRI?IG MULTIPLY ADD)…………………………… 4.86-I STRUCTURAL ELEMENT DESCRIPTIONS …………………………………… 4.87-I 4.87.1 TheR_D,C_IRBD, andTUBEElements …………………………. 4.87-7 4.87.1.1 InputDatafortheR_D,TUBE,CBNR_D Elements ……… 4.87-7 4.87.1.2 Stiffness Matrix Calculation (Subroutine KR_D andKTUBEofModule SMAI) ……………………….. 4.87-8 4.87.1.3 Lumped MassMatrix Calculation (Subroutine MR_D andMTUBEofModule SMA2) ……………………….. 4.87-9 4.87.1.4 Element LoadCalculations (Subroutine EDTLof Module SSGI) …………………………………… 4.87-10 4.87.1.5 Element Stress Calculations (Subroutines SR_DI andSR_D2ofModule SDR2) ……………………….. 4.87-10 xiii (8/I/72)\nSection 4.87.2 4.87.3TABLEOFCONTENTS (Continued) PageNo. 4.87.1.6 Differential Stiffness Matrix Calculation (Subroutine DRODofModule DSMGI) ……………………………. 4.87-12 4.87.1.7 Piecewise Linear Analysis Calculations (Subroutine PSRODofModule PLA3andSubroutine PKRODofModule PLA4) …………………………………………. 4.87-14 4.87.1.8 Coupled MassMatrix Calculation (Subroutine MCRODof Module SMA2) …………………………………… 4.87-16a 4.87.1.9 Thermal Analysis Calculations fortheRODElements (Subroutine KRODofModule SMAI) …………………. 4.87-16b TheBARElement ………………………………………….. 4.87-17 4.87.2.1 InputDatafortheBARElement ………………….. 4.87-17 4.87.2.2 Stiffness Matrix Calculation (Subroutine KBARof Module SMAI) …………………………………… 4.87-18 4.87.2.3 Lumped MassMatrix Calculation (Subroutine MBARof Module SMA2) …………………………………… 4.87-25 4.87.2.4 Element LoadCalculation (Subroutine BARofModule SSGI) …………………………………………. 4.87-26 4.87.2.5 Element Stress Calculations (Subroutines SBARIand SBAR2ofModule SDR2) …………………………… 4.87-27 4.87.2.6 Differential Stiffness Matrix Calculation (Subroutine DBEAMofModule DSMGI) ………………………….. 4.87-29 4.87.2.7 Piecewise Linear Analysis Calculations (Subroutine PSBARofModule PLA3andSubroutine PKBARofModule PLA4………………………………………….. 4.87-32 4.87.2.8 “Consistent” MassMatrix Calculation (Subroutine MCBARofModule SMA2) …………………………… 4.87-36 4.87.2.9 Thermal Analysis Calculations fortheBARElement (Subroutine KBARofModule SMAI) …………………. 4.87-37 TheSHEAR PanelandTWIST PanelElements ……………………. 4.87-38 InputDataforSHEARandTWISTPanels …………….. 4.87-38 Definition ofElement Geometry …………………… 4.87-39 Coefficient Generation ………………………….. 4.87-41 Stiffness Matrix Formulation foraSHEARPanel (Subroutine KPANEL ofModule SMAI) ……………….. 4.87-46 TWIST Element Stiffness Matrix Generation (Subroutine KPANEL ofModule SMAI) ………………………….. 4.87-47 MassMatrix Generation (Subroutine MASSTQ ofModule SMA2) …………………………………………. 4.87-484.87.3.1 4.87.3.2 4.87.3.3 4.87.3.4 4.87.3.5 4.87.3.6 xiv(8/I/72)\nSection 4.87.4 4.87.5TABLE OFCONTENTS (Continued) PageNo. 4.87.3.7 SHEAR Element Stress andForce Calculations (Subroutine SPANLI andSPANL2 ofModule SDR2) ………. 4.87-50 4.87.3.8 TWIST Element Stress andForce Calculations (Subroutines SPANLI andSPANL2 ofModule SDR2) ……… 4.87-52’ 4.87.3.9 SHEAR Panel Differential Stiffness Calculations (Subroutine DSHEAR ofModule DSMGI) ………………. 4.87-54 TRMEM andQDMEM Elements ………………………………….. 4.87-58 4.87.4.1 Input DatafortheTRMEM andQDMEM Elements ……….. 4.87-58 4.87.4.2 Basic Equations forTRMEM ……………………….. 4.87-59 4.87.4.3 Stiffness Matrix Calculation forTRMEM (Subroutine KTRMEM ofModule SMAI) ………………………….. 4.87-61 4.87.4.4 Mass Matrix Calculation fortheTRMEM Element (Subroutine MASSTQ ofModule SMA2) ……………….. 4.87-62 4.87.4.5 Element LoadCalculations fortheTRMEM Element (Subroutine TRIMEM ofModule SSGI) ……………….. 4.87-63 4.87.4.6 Element Stress Calculations fortheTRMEM Element (Subroutines STRMEI andSTQME2 ofModule SDR2) …….. 4.87-63 4.87.4.7 Differential Stiffness Matrix Calculations forthe TRMEM Element (Subroutine DTRMEM ofModule DSMGI) …… 4.87-67 4.87.4.8 General Calculations fortheQDMEM bytheQDMEM Driver Routines (Subroutines KQDMEM ofModule SMAI, SQDMEI ofModule SDR2, DQDMEM ofModule DSMGI) ……… 4.87-67 4.87.4.9 Stiffness Matrix Calculations fortheQDMEM ………. 4.87-70 4.87.4.10 Element Stress Calculations fortheQDMEM (Subroutine SQDMEI andSTQME2 ofModule SDR2) ………………… 4.87-70 4.87.4.11 MassMatrix Generation fortheQDMEM Element (Subroutine MASSTQ ofModule SMA2) ……………….. 4.87-74 4.87.4.12 Thermal LoadComputation fortheQDMEM …………… 4.87-76 4.87.4.13 Differential Stiffness Computations fortheQDMEM (Subroutines DQDMEM andDTRMEM ofModule DSMGI) ……. 4.87-76 4.87.4.14 Piece_ise Linear Analysis Calculations (Subroutines PSTRM andPSQDM ofModule PLA3andSubroutines PKTRM andPKQDM ofModule PLA4) …………………… 4.87-76a 4.87.4.15 Thermal Analysis Calculations fortheMembrane Elements (Subroutine KTRMEM andKQDMEM ofModule SMAI) …………………………………………. 4.87-76d TheTRBSC, TRPLT andQDPLT Elements ………………………… 4.87-78 4.87.5.1 Input DatafortheTRBSC andTRPLT Elements ……….. 4.87-78 4.87.5.2 General Calculation fortheTRBSC Element ………… 4.87-79 xv(811172)\nTABLEOFCONTENTS (Continued) Section 4.87.64.87.5.3 4.87.5.8 4.87.5.9 4.87.5.10 4.87.5.11 4.87.5.12 4.87.5.13 4.87.5.14 TheTRIAl, 4.87.6.1 4.87.6.2 4.87.6.3 4.87.6.4 4.87.6.5 4.87.6.6 4.87.6.7Pa_a_eNo. Stiffness Matrix Calculations fortheTRBSCElement (Subroutine KTRBSC ofModule SMAI) ……………….. 4.87-84 Stress Calculations fortheTRBSCElement …………. 4.87-85 Stiffness Matrix Calculations fortheTRPLTElement (Subroutine KTRPLT ofModule SMAI) ……………….. 4.87-87 Structural Damping Matrices fortheTRPLTElement ….. 4.87-95 Stress andElement ForceCalculations fortheTRPLT Element (Subroutines STRPLI andSBSPL2 ofModule SDR2) …………………………………………. 4.87-95 Stiffness Matrix Calculations fortheQDPLTElement (Subroutine KQDPLT ofModule SMAI) ……………….. 4.87-97 Stress andElement ForceCalculations fortheQDPLT Element (Subroutines SQDPLI andSBSPL2 ofModule SDR2) …………………………………………. 4.87-102 Lumped MassMatrix Generation fortheTRBSC, TRPLT, andQDPLTElements (Subroutine MASSTQ ofModule SMA2).. 4.87-104 Coupled MassMatrix Calculations fortheTRBSCElement (Subroutine MTRBSC ofModule SMA2)………………… 4.87-I04a MassMatrix Calculations fortheTRPLT Element (Subroutine MTRPLT ofModule SMA2) ……………….. 4.87-I04g MassMatrix Calculations fortheQDPLTElement (Subroutine MQDPLT ofModule SMA2) ……………….. 4.87-I04j Thermal LoadEquations fortheBending Element (Subroutine TRBSC, TRPLT andQDPLTofModule SSGI) ….4.87-I04n TRIA2, QUADIandQUAD2Elements ………………….. 4.87-106 InputDatafortheTRIAl, TRIA2, QUADIandQUAD2 Elements ………………………………………. 4.87-106 Stiffness Matrix Calculations (Subroutine KTRIQD ofModule SMAI) ………………………………… 4.87-107 Lumped MassMatrix Generation (Subroutine MASSTQ ofModule SMA2) ………………………………… 4.87-108 Thermal LoadCalculations (Subroutine EDTLofModule SSGI) …………………………………………. 4.87-108 Element Stress andForceCalculations (Subroutines STRQDI andSTRQD2 ofModule SDR2) ………………… 4.87-108 Differential Stiffness Matrix Calculations (Subroutine MTRIQD ofModule SMA2) ……………….. 4.87-I09 Piecewise Linear Analysis Calculations (Subroutines PSTRII, PSTRI2, PSQADI, andPSQAD2 ofModule PLA3, andPKTRII, PKTRI2, PKQADI andPKQAD2 ofModule PLA4) …………………………………………. 4.87-I09a xvi(811/72)\nSecti on 4.87.7 4.87.8 4.87.94.87.6.8 4.87.6.9TABLE OFCONTENTS (Continued) PageNo. Differential Stiffness Matrix Calculations forthe TRIAl andTRIA2 Elements (Subroutine DTRIA of Module DSMGI) …………………………………. 4.87-I09d Differential Stiffness Matrix Calculations forthe QUADI andQUAD2 Elements (Subroutine DQUAD of Module DSMGI) …………………………………. 4.87-I09g 4.87.6.10 Differential Stiffness Matrix Calculations forthe Basic Bending Triangle (Subroutine DTRBSC of Module DSMGI) …………………………………. 4.87-I09j 4.87.6.11 Thermal Calculations fortheCombination Elements (Subroutine KTRIQD ofModule SMAI) ……………….. 4.87-I09p TheELASi, MASSi andDAMPi Elements …………………………. 4.87-II0 4.87.7.1 Input Data fortheELASi, MASSi andDAMPi Elements …. 4.87-II0 4.87.7.2 ELASi Stiffness Matrix Generation (Subroutine KELAS ofModule SMAI) ……………………………….. 4.87-II0 4.87.7.3 MASSi Mass Matrix Generation (Subroutine MASSD of Module SMA2) ………………………………….. 4.87-III 4.87.7.4 DAMPi Damping Matrix Generation (Subroutine MASSD ofModule SMA2) ……………………………….. 4.87-III 4.87.7.5 ELASi Stress andForce Recovery (Subroutines SELASI andSELAS2 ofModule SDR2) ……………………… 4.87-III Concentrated MassElements C_NMI, C_NM2 ……………………. 4.87-113 4.87.8.1 ECPTEntries fortheC_NMIMassElement ………….. 4.87-113 4.87.8.2 MassMatrix Calculations fortheCONMIElement (Subroutine MC_NMX ofModule SMA2) ………………. 4.87-113 4.87.8.3 ECPTEntries fortheCOHM2MassElement ………….. 4.87-114 4.87.8.4 MassMatrix Calculations fortheCONM2Element (Subroutine MCBNMX ofModule STY2) ……………… 4.87-114 TheCONEAX Element ……………………………………….. 4.87-117 4.87.9.1 InputDatafortheCONEAX Element ……………….. 4.87-117 4.87.9.2 Stiffness Matrix Calculations (Subroutine KCONEof Module SMAI)………………………………….. 4.87-117 4.87.9.3 MassMatrix Computation (Subroutine MCONEofModule SMA2)………………………………………… 4.87-118 4.87.9.4 Element LoadCalculations (Subroutine CONEofModule SSGI)…………………………………………. 4.87-118 4.87.9.5 Element Stress Calculations (Subroutines SCONE1, SCONE2, SC@NE3 ofModule SDR2) ………………….. 4.87-123 4.87.9.6 Differential Stiffness Matrix Calculations (Subroutine DCONEofModule DSMGI) …………………………. 4.87-127a xvii (8/I/72)\nSection 4.87.10 4.87.11 4.87.12TABLEOFCONTENTS (Continued) No. TheTRIARG Element ……………………………………….. 4.87-128 4.87.10.1 InputDatafortheTRIARG Element ……………….. 4.87-128 4.87.10.2 General Geometric Calculations ………………….. 4,87-129 4.87.10.3 Integral Calculations ………………………….. 4.87-130 4.87.10.4 Elastic Constants Matrix Calculations …………… 4.87-132 4.87.10.5 Stiffness Matrix Generation (Subroutine KTRIRG of Module SMAI) ………………………………….. 4.87-133 4.87.10.6 MassMatrix Calculations (Subroutine MTRIRG of Module SMA2) ………………………………….. 4,87-135 4.87.10.7 Thermal LoadCalculations (Subroutine TTRIRG of Module SSGI)…………………………………… 4.87-136 4.87.10.8 Element ForceandStress Calculations (Subroutines STRIRI andSTRIR2 ofModule SDR2) ……………….. 4.87-136 4.87.10.9 Thermal Analysis Calculations fortheTRIARG and TRAPRG Elements (Subroutine HRINGofModule SMAI)….. 4.87-138a TheTRAPRG Element ………………………………………. 4.87-139 4.87.11.1 InputDatafortheTRAPRG Element ……………….. 4.87-139 4.87.11.2 General Calculations …………………………… 4.87-140 4,87.11.3 Integral Calculations ………………………….. 4.87-142 4.87.11.4 Elastic Constants Matrix Calculation …………….. 4.87-144 4.87.11.5 Stiffness Matrix Generation (Subroutine KTRAPR of Module SMAI) ………………………………….. 4.87-144 4.87.11.6 MassMatrix Calculation (Subroutine MTRAPR of Module SMA2) ………………………………….. 4.87-146 4.87.11.7 Thermal LoadCalculations (Subroutine TTRAPR of Module SSGI) ………………………………….. 4.87-147 4.87.11,8 Element ForceandStress Calculations (Subroutines STRAP1 andSTRAP2 ofModule SDR2) ……………….. 4.87-148 4.87.11.9 Thermal Analysis Calculations fortheTRAPRG Element (Subroutine HRINGofModule SMAI) ……………….. 4.87-151 TheT_RDRG Element ………………………………………. 4.87-152 4.87.12.1 4,87.12,2 4.87.12.3 4.87.12.4InputDatafortheT@RDRG Element ……………….. 4.87-152 General Calculations …………………………… 4.87-153 Integral Calculations ………………………….. 4,87-156 Elastic Constants Matrix Calculations ……………. 4.87-160 xviii (8/I/72)"},"title":"Programmer's Manual P1"},"/docs/programmers/programmers_manual_002/":{"data":{"":"TABLE OFCONTENTS (Continued) Section 4.87.13 4.87.14 4.87.15Page No. 4.87.12.5 Stiffness Matrix Calculations (Subroutine KT_RDR ofModule SMAI) ……………………………….. 4.87-160 4.87.12.6 Mass Matrix Calculations (Subroutine MT_RDR of Module SMA2) ………………………………….. 4.87-165 4.87.12.7 Thermal Load Calculations (Subroutine TT_RDR of Module SSGI) …………………………………. 4.87-166 4.87.12.8 Element Force andStress Calculations (Subroutines STORDI andSTORD2 ofModule SDR2) ……………….. 4.87-168 TheVISC Element …………………………………………. 4.87-175 4.87.13.1 4.87.13.2Input Data fortheVISC Element …………………. 4.87-175 Damping Matrix Calculations (Subroutine BVISC of Module SMA2) ………………………………….. 4.87-175 4.87.14.1 4.87.14.2 4.87.14.3 4.87.14.4 4.87.14.5 4.87.14.6Integral Calculations fortheTRIARG, TRAPRG Elements ………… 4.87-177 Integral Calculation forq\u003e0andanyp.(Function DKINT) ……………….. ?…………………….. 4.87-179 Integral Calculation forp\u003e0andq\u003c-l(Function DK8g) ………………… _…………………….. 4.87-179 Integral Calculation forp\u003c0andq\u003c-l(Function DKIO0) ………………………………………… 4.87-180 Integral Calculations forp\u003e-landq=-l(Function DKJAB) ……………………………………….. 4.87-181 Integral Calculations forp\u003c-landq=-l(Function DK219) ……………………………………….. 4.87-182 Integral Calculations forp=-landq=-l(Function DK211) ……………………………………….. 4.87-182 TheFLUID2, FLUID3, FLUID4, AXIF2, AXIF3, AXlF4, andMFREE Elements ……………………………………………….. 4.87-183 4.87.15.1 4.87.15.2 4.87.15.3 4.87.15.4 4.87.15.5Input Data fortheFluid Elements ……………….. 4.87-183 Matrix Calculations fortheFLUID2 Element (Subroutine KFLUD2 ofModule SMAIandSubroutine MFLUD2 ofModule SMA2) …………………………. 4.87-183 Matrix Calculations fortheFLUID3 Element (Subroutine KFLUD3 ofModule SMAIandSubroutine MFLUD3 ofModule SMA2) …………………………. 4.87-186 Matrix Generation fortheFLUID4 Element (Subroutine KFLUD4 inModule SMAIandSubroutine MFLUD4 inModule SF_2) …………………………. 4.87-188 Matrix Calculations fortheMFREEElement (Subroutine MFREEinModule SMA2) ………………………….. 4.87-189 xix(8/I/72)\nSection 4.87.16 4.87.17TABLEOFCONTENTS (Continued) PageNo. 4.87.15.6 Stress Calculations fortheAXIFElements, Phase1………………………………………. 4.87-189 4.87.15.7 Stress Calculations fortheAXIFElements, Phase2………………………………………. 4.87-194 TheSL_T3andSLOT4FluidElements …………………………. 4.87-194 4.87.16.1 InputDatafortheSL_T3andSL_T4Elements ………. 4.87-194 4.87.16.2 General Calculations fortheSLOTElements ……….. 4.87-195 4.87.16.3 Stiffness Matrix Generation fortheSL_T3Elements ….4.87-195 4.87.16.4 MassMatrix Generation fortheSL@T3 Elements …….. 4.87-196 4.87.16.5 Stress Matrix Calculations intheSL_TElements (Phase I)…………………………………….. 4.87-196 4.87.16.6 CSLOTi Element, Phase 2……………………….. 4.87-198 SolidPolyhedra Elements, TETRA, WEDGE, HEXAI, HEXA2 …………. 4.87-199 4.87.17.1 InputDatafortheSolidPolyhedra Elements ………. 4.87-199 4.87.17.2 BasicEquations fortheTETRA Element ……………. 4.87-200 4.87.17.3 Stiffness Matrix Generations fortheTETRAElement (Subroutine KTETRA ofModule SMAI) ………………. 4.87-201 4.87.17.4 MassMatrix Generation fortheTETRA Element (Subroutine MSOLID ofModule SMA2) ………………. 4.87-201 4.87.17.5 Thermal LoadGeneration fortheTETRAElement (Subroutine TETRAofModule SSGI) ……………….. 4.87-201 4.87.17.6 Stress Calculations fortheTETRAElements (Subroutines SSOLIDI andSSOLID2 ofModule SDR2) ….. 4.87-202 4.87.17.7 BasicEquations fortheWEDGE, HEXAI, andHEXA2 Elements ……………………………………… 4.87-203 4.87.17.8 Stiffness Matrix Calculations andGeometry Checks fortheWEDGE, HEXAI, andHEXA2 Elements (Subroutine KSOLID ofModule SMAI) …………………………. 4.87-204 4.87.17.9 MassMatrix Generation fortheWEDGE, HEXAI, and HEXA2 Elements (Subroutine MSOLID ofModule SMA2)….. 4.87-205 4.87.17.10 Thermal LoadGeneration fortheWEDGE, HEXAI, and IIEXA2 Elements (Subroutine S_LID ofModule SSG2)…… 4.87-206 4.87.17.11 Stress DataRecovery fortheWEDGE, HEXAI, and IIEXA2 Elements (Subroutines SSOLIDI andSS_LID2 of Module SDR2) ………………………………….. 4.87-206 4.87.17.12 Thermal Analysis Calculations fortheSolid Elements (Subroutine KTETRA ofModule SMAI) ………………. 4.87-207 xx(811172)\nTABLE OFCONTENTS (Continued) Section 4.88 4.89 4.90 4.91 4.92 4.93 4.94 4.95 4.96 4.97 4.98 4.99 4.100 4.101 4.102 4.103 5.ae_. 4.87.18 TheHBDYElements ………………………………………… 4.87-208 4.87.18.1 InputDatafortheHBDYElements ………………… 4.87-208 4.87.18.2 Stiffness Matrix Calculations (Subroutine HBDY ofModule SMAI) ………………………………. 4.87-208 4.87.18.3 HBDYElement Thermal Loads(Subroutine HBDYof Module SSGI) ………………………………….. 4.87-210 DETERMINANT METHOD OFEIGENVALUE EXTRACTION ………………………… 4.88-I EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4)………… 4.89-I FUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC PROBLEMS) ………………………………………………………… 4.90-I EXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5)…………. 4.91-I FUNCTIONAL MODULE PLI-TRAN …………………………………………. 4.92-I MATRIX MODULE UPARTN (PARTITIONS AMATRIX BASEDONUSET) ……………… 4.93-I MATRIX MODULE UMERGE (MERGES TWOMATRICES BASEDONUSET) ……………… 4.94-I MATRIX MODULE VEC(CREATES PARTITIONING VECTOR BASEDONUSET) …………. 4.95-I MATRIX MODULE ADD5(ADDMATRICES) ………………………………….. 4.96-I FUNCTIONAL MODULE INPUT(INPUT GENERATOR) …………………………… 4.97-I FUNCTIONAL MODULE INPUTTI …………………………………………. 4.98-I FUNCTIONAL MODULE INPUTT2 …………………………………………. 4.99-I FUNCTIONAL MODULE BUTPUTI …………………………………………. 4.100-I FUNCTIONAL MODULE _UTPUT2 …………………………………………. 4.101-I OUTPUT MODULE _UTPUT3 …………………………………………….. 4.102-I OUTPUT MODULE TABPRT (FORMATTED TABLEPRINTER) ………………………. 4.103-I NASTRAN -OPERATING SYSTEM INTERFACES 5.1 INTRODUCTION …………………………………………………….. 5.1-I 5.2 NASTRAN OnTheIBM7094/7040(44) DCS(IBSYS) DELETED……….. 5.2-I 5.3 NASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S)………………. 5.3-I 5.3.1 5.3.2 5.3.3 5.3.4 5.3.5Introduction …………………………………………….. 5.3-I Input/Output ……………………………………………. 5.3-I LinkSwitching …………………………………………… 5.3-4 Overlay Considerations andImplementation ofOpenCore………… 5.3-4 Execution DeckSetup ……………………………………… 5.3-6 xxi(8/I/72)\nSection 5.4 5.5TABLEOFCONTENTS (Continued) PageNo. 5.3.6 Physical ItemsandGeneration ofNASTRAN Executable System ……. 5.3-13 5.3.7 Machine Dependent Routines ………………………………… 5.3-17 5.3.8 GIN_(Generalized Input/Output Processor forNASTRAN) ………… 5.3-20 5.3.9 Special ErrorCodesfromNASTRAN ontheSystem 360………….. 5.3-22 5.3.10 System 360F_RTRAN Compilers usedforNASTRAN ……………….. 5.3-23 5.3.11 IBM360-370 Overlay Charts ………………………………… 5.3-24 NASTRAN ONTHEUNIVAC 1108(EXEC8)………………………………… 5.4-I 5.4.1 Introduction …………………………………………….. 5.4-I 5.4.2 Input/Output …………………………………………….. 5.4-I 5.4.3 LinkSwitching …………………………………………… 5.4-4 5.4.4 Overlay Considerations andImplementation ofOpenCore……….. 5.4-5 5,4.5 Execution DeckSetup ……………………………………… 5.4-7 5.4.6 Description ofNASTRAN Physical ItemsandGeneration ofthe NASTRAN Executable System …………………………………. 5.4-10 5.4.7 Machine Dependent Routines ……………………………….. 5.4-12 5.4.8 Procedure toCopytheThree System Tapes ……………………. 5.4-15 5.4.9 NASTRAN Tapes (Files) Catalogue Procedure …………………… 5.4-17 5.4.10 NASTRAN Update Procedure ………………………………….. 5.4-19 5.4,11 Regenerate theExecutable Tape ……………………………. 5.4-20 5.4.12 TheASGCRDS Program File………………………………….. 5.4-22 5.4.13 TheC_NTRL orC_NTRL42K Program File ………………………. 5.4-23 5.4.14 Description ofaDemonstration Problem Starter Deck………….. 5.4-24 5.4.15 TapeandProblem Numbers fortheNASTRAN Demonstration Problem InputDataTape………………………………………….. 5.4-27 5.4.16 GIN_(Generalized Input/Output forNASTRAN) …………………. 5.4-28 5.4.17 Matrix Packing Routines …………………………………… 5.4-32 5.4.18 1108TimeEstimation ……………………………………… 5.4-38 5.4.19 Single Precision Routines ………………………………… 5.4-38 5.4.20 UNIVAC Overlay Diagrams …………………………………… 5.4-39 NASTRAN ONTHECDC6400/6600 (SCOPE 3)……………………………… 5.5-I 5.5.1 Introduction ……………………………………………. 5.5-I 5.5.2 Input/Output …………………………………………….. 5.5-2 xxii(8/I/72)\nTABLE OFCONTENTS (Continued) Section 5.5.3 5.5.4 5.5.5 5.5.6 6.PageNo. Layout ofCoreStorage ……………………………………. 5.5-4 Execution DeckSetup ……………………………………… 5.5-6 Physical Deliverables andGeneration ofExecutable System …….. 5.5-9 Machine Dependent Routines ………………………………… 5.5-12 5.6 THECDC6400/6600 LINKAGE EDITOR …………………………………… 5.6-I 5.6.1 Introduction ……………………………………………. 5.6-I 5.6.2 Preparing forLinkage Editor Processing …………………….. 5.6-6 5.6.3 Designing anOverlay Program ………………………………. 5.6-7 5.6.4 Linkage Editor Control Statements ………………………….. 5.6-12 5.6.5 Examples ofLinkage Editor Processing ………………………. 5.6-23 5.6.6 Storage Requirements fortheLinkage Editor …………………. 5.6-29 5.6.7 Link-Edited Linkage Editor ………………………………… 5.6-30 MODIFICATIONS ANDADDITIONS TONASTRAN 6.1 INTRODUCTION …………………………………………………….. 6.l-I 6.2 FBRTRAN IVLANGUAGE RESTRICTIONS …………………………………… 6.2-I 6.3 THEEXECUTIVE CONTROL DECK ………………………………………… 6.3-I 6.3.1 TheNASTRAN Card…………………………………………. 6.3-I 6.4 THECASECONTROL DECK …………………………………………….. 6.4-I 6.5 THEBULKDATADECK ……………………………………………….. 65-I 6.6 RIGID FORMATS ……………………………………………………. 6.6-I 6.7 FUNCTIONAL MODULES ……………………………………………….. 67-I 6.8 ADDING ASTRUCTURAL ELEMENT ……………………………………….. 68-I 6.8.1 Introduction totheProblem ……………………………….. 6.8-I 6.8.2 General Guidelines ……………………………………….. 68-16 6.8.3 Specific Checklists ………………………………………. 6.8-27 6.8.4 Updating theNASTRAN Manuals ………………………………. 6.8-49 6.8.5 Dummy UserElements (DUMI through DUM9) …………………….. 6.8-54 6.9 PRINTED OUTPUT …………………………………………………… 6.9-I 6.10 PLOTTER OUTPUT …………………………………………………… 6.10-1 6.10.1 Changes tothePlotter Software ……………………………. 6.10-1 xxiii (8/I/72)\nTABLEOFCONTENTS (Continued) Section 6.11 6.12 7,6.10.2 6.10.3 6.10.4 6.10.5 6.10.6 ADDITION 6.11.I 6.11.2 6.11.3 6.11.4 6.11.5Pa_eNo. Changes tothePL_TModule, theStructural Plotter ………….. 6.10-3 Changes totheXYPLOT Module, theXYPlotter ……………….. 6.10-4 Changes totheSEEMAT Module, theMatrix Plotter ……………. 6.10-4 UseoftheNASTRAN Plotter Software inaNewModule …………. 6.10-6 NASTRAN General Purpose Plotter …………………………… 6.10-14 OFANEWLINK…………………………………………… 6.11-I Modules toInclude ………………………………………. 6.11-I Addition of_ewModules ………………………………….. 6.11-I Generation ofaNewLinkSpecification TableandaNewLink Driver …………………………………………………. Subsys theNewLink……………………………………… Increasing theLinkLimit ………………………………… 6.12,1 6.12.2 6.12.3 6.12.4 6.12.5 NASTRAN SUPPORT 7.1 7.2WRITING ANEWMODULE …………………………………………….. Summary ofNASTRAN Coding Conventions andTerminology ……….. Module Design …………………………………………… Implementing theNewModule ………………………………. Coding aModule Subroutine ……………………………….. Sample Module Coding …………………………………….. PROGRAMS INTRODUCTION ……………………………………………………. DESIGN OFTHECDC6400/6600 LINKAGE EDITOR …………………………. 7.2.1 7.2.2 7.2.3 7.2.4 7.2.5 7.2.6 7.2.7 7.2.8 7.2.96.11-2 6.11-4 6.11-4 6.12-I 6.12-I 6.12-3 6.12-7 6.12-8 6.12-12 7.1-I 7.2-I Introduction ……………………………………………. 7.2-2 Discussion oftheMajor Divisions oftheLinkage Editor/Loader ..7.2-14 Flowcharts ……………………………………………… 7.2-79 Subroutine Descriptions ………………………………….. 7.2-134 Object DeckFormat ………………………………………. 7.2-176 Principal Linkage Editor Variable …………………………. 7.2-183 Linkage Editor Output andDiagnostic Messages ………………. 7.2-191 Recommended Improvements totheLevel2.0Version …………… 7.2-204 Linkage Editor Glossary ………………………………….. 7.2-205 xxiv(8/I/72)\nSection 7.3TABLE OFCONTErJTS (Continued) Page No. THESOURCE ………………………………………………………. 7.3-I 7.3.1 7.3.2 7.3.3 7.3.4 7.3.5Purpose oftheSource Conversion Program ……………………. 7.3-I Conversion Performed ……………………………………… 7.3-I MajorDivisions intheProgram ……………………………. 7.3-8 UseoftheSCP…………………………………………… 7.3-19 SCPFlowcharts …………………………………………… 7.3-20 xxv(8/I/72)\nMostRecent 811172 *i 811172 *ii 811172 *iii BII172 *iv 811172 *v 8/1/72 *vi 8/1/72 *vii 8/1/72 *viii 811172 *ix 811172 *x 8/I/72 *xi 8/I/72 *xii 8/I/72 *xiii BII/72 *xiv 8/3/72 *xv 8/1/72 *xvi 811172 *xvii 8/I/72 *xviii B/1/72 *xix B/I/72 *xx 811/72 *xxi 8/I/72 *xxii 8/l/72 *xxiii 8/I/72 *xxiv Bl1172 *xxv B11172 *xxvi 8/I/72 *xxvii 8/I/72 *xxviii 8/I/72 *xxix 811/72 XXX l.I-I l.I-2 1.I-3 1.I-4 I.2-I l.2-2 8/I/72l.2-3 1.2-4 1.2-5 I.2-6 1.2-7 8/1/72 *I.2-8 811172 *l•2-9 8/l/72 **l.9-9a 1.2-10 8/I/72 *I.2-11 l.2-12 ll/I/70 1.2-13 II/1/701.2-14 l.3-I I.3-2 1.3-3 1.4-I I.5-I I.5-2 12/I/69 1.6-I 1.6-2 1.6-3 l.6-4PAGEsTATUS LOG MostRecent 12/1/69 811172 811172 12/I/69 811172 1111170 1111170 1111/70 1111170 8/1/72 8/1/72 8/1/72 1111170 8/1/72 8/1/72 811172 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 811172 8/1/72 8/1/72 8/1/72 811172 8/1/72 8/1/72 8/1/72_ e P,__ °MostRecent *2.3-28a *2.3-29 -2.3-29a **2.3-29b *2.3-30 2.3-31 2.3-32 2.3-33 2.3-34 2.3-35 2.3-36 2.3-37 2.3-38 2.3-39 2.3-40 ,2.3-41 2.3-42 2.3-43 *2.3-44 2.3-45 *2.3-46 **2.3-46a 2.3-47 2.3-48 *2.3-49 *2.3-49a **2.3-49b *,2.3-49c 2.3-50 2.3-51 *2.3-52 2.3-53 2.3-54 2.3-55 2.3-56 2.3-57 2.3-58 2.3-59 2.3-60 2.3-61 2.3-62 2.3-63 2.3-64 2.3-65 2.3-66 2.3-67 2.3-68 2.3-69 2.3-70 2.3-71 2.3-72 2.3-73 2.3-74 2.3-75 2.3-76 2.3-77 2.3-78 2.3-79 2.3-80811172 8/1/72 811172 8/1/72 811172 1111170 8/1/72 811172 1211169 8/1/72 8/1/72 8/1/72 8/1/72 811172 8/1/72 8/1/72 1211169 3/1/71 xxvi(8/1/72) f\nPAGESTATUS LOG PageNo. 2.3-81 2.3-82 2.3-83 2.3-84 2.3-85 2.3-86 *2.3-87 2.3-88 2.3-89 2.3-90 2.3-91 2.3-92 2.3-93 2.3-94 2.3-95 2.3-96 2.3-97 2.3-98 *2.3-99 2.3-I00 2.3-I01 2.3-I02 2.3-I03 2.3-104 2.3-I05 2.3-I06 2.3-I07 2.3-I08 2.3-I09 2.3-II0 2.3-II 2.3-12 2.3-13 2.3-14 2.3-15 2.3-16 2.3-17 2.3- 18 2.3-I19 2.3-120 2.3-121 2.3-122 2.3-123 2.3-124 “2.3-125 “2.3-126 “2.3-127 2.3-I27a 2.3-128 2.3-129 2.3-130 2.3-131 2.3-132 2.3-133 2.3-134 2.3-134a 2.3-135 2.3-136 2.3-136aMostRecent DateChanged 811172 811172 7/I/70 7/I/70 12/I/69 8/I/72 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69PageNo. 2.3-137 2.3-138 2.3-139 2.3-140 2.3-141 “2.3-142 2.3-143 *2.3-I 44 *2.3-I 45 2.3-146 2.3-147 2.3-148 2.3-149 *2.3-I 50 2.3-151 2.3-152 2.3-153 2.3-154 2.3-155 2.3-156 2.3-157 2.3-158 2.3-159 2.3-160 2.3-161 2.3-162 2.3-163 2.3-164 2.3-165 2.3-166 2.3-167 2.3-168 2.3-169 2.3-170 2.3-171 2.3-172 2.3-173 2.3-I74 2.3-175 2.3-176 2.3-177 2.3-178 2.3-179 2.3-180 2.3-181 2.3-182 2.3-183 “2.3-184 2.3-185 *2.3-I 86 “2.3-187 *2.3-I 88 2.3-189 “2.3-190 “2.3-191 *‘2.3-191a 2.3-192 2.3-193 “2.3-194Most Recent DateChanged 8/I/72 8/I/72 8/I/72 8/I/72 6/I/71 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72Pae_. 2.4-I 2.4-2 2.4-3 2.4-4 2.4-5 2.4-6 2.4-7 2.4-8 2.4-9 2.4-I0 2.4-II 2.4-12 “2.4-13 “2.4-13a 2.4-14 2.4-15 2.4-16 2.4-17 2.4-18 2.4-19 2.4-20 2.4-21 2.4-22 2.4-23 2.4-24 2.4-25 2.4-26 2.4-27 2.4-28 2.4-29 2.4-30 2.4-31 2.4-32 2.4-33 2.4-34 2.4-35 2.4-36 2.4-37 2.4-38 2.4-39 2.4-40 2.5-I 2.5-2 2.5-3 2.5-4 2.5-5 *2.5-6 **2.5-6a 2.5-7 2.5-8 2.5-9 2.5-I0 2.5-II 2.5-12 2.5-13 3.l-I 3.1-2 3.1-3Most Recent DateChanged 311171 8/I/72 8/I/72 12/I/69 12/I/69 3/I/71 3/I/71 3/I/71 3/I/71 3/I/71 311171 311171 311171 311171 311171 1211169 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 xxvii (8/I/72)\nPAGESTATUS LOG PageNo. “3.2-I *3.2-2 *3.2-3 *3.2-4 *3.2-5 *3.2-6 **3.2-7 3.3-I 3.3-2 3.3-3 3.3-4 3.3-5 3,3-6 3.3-7 3.3-8 3.3-9 3.3-10 3.3-11 3.3-12 3.3-13 3.3-14 “3.3-15 “3.3-15a 3.3-16 “3.3-17 *‘3.3-18 *‘3.3-19 **3.3-20 3.4-I 3.4-2 3.4-3 3.4-4 3.4-5 3.4-6 3.4-7 3.4-8 3.4-9 3.4-10 3.4-11 3.4-12 3.4-13 3.4-14 3.4-15 3.4-16 3.4-17 “3.4-18 3.4-19 3.4-20 3.4-21 3.4-22 3.4-23 *3.4-24 3.4-25 3.4-26 3.4-27 *3.4-28 3.4-29 3.4-30 3.4-31 3.4-32MostRecent DateChanged 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 8/I/72 8/I/72 8/I/72PaseNo 3.4-33 3.4-34 3.4-35 *3.4-36 3.4-37 3.4-38 3.4-39 3.4-4O 3.4-41 3.4-42 3.4-43 3.4-44 3.4-45 3.4-46 3.4-47 3.4-48 3.4-49 3.4-50 3.4-51 3.4-52 3.4-53 3.4-54 3.4-55 3.4-56 3.4-57 3.4-58 3.4-59 3.4-60 3.4-61 3.4-62 3.4-63 3.4-63a *3.4-64 *3.4-65 3.4-66 3.4-67 3.4-68 3.4-69 3.4-70 3.4-71 3.4-72 3.4-72a 3.4-73 3.4-73a 3.4-74 3.4-74a 3.4-75 3.4-75a 3.4-76 3.4-77 3.4-78 3.4-78a 3.4-79 3.4-80 3.4-81 3.4-82 3.4-83 3.4-84 3.4-85 3.4-86MostRecent DateChan_ed 3/I/71 8/I/72 12/I/69 12/I/69 3/I/71 12/I/69 12/I/69 3/I/71 3/I/71 3/I/71 3/I/71 3/I/71 3/I/71 3/I/71 3/I/71 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69PageNo. 3.4-87 3.4-87a 3.4-88 3._-89 3.4-90 3.4-91 3.4-92 3.4-93 3.4-94 3.4-95 3.4-96 3.4-97 3.4-98 3.4-99 3.4-100 3.4-101 3.4-102 3.4-103 3.4-104 3.4-105 3.4-106 3.4-107 3.4-108 3.4-109 3.4-110 3.4-111 “3.4-112 3.4-113 3.4-114 3.4-115 3.4-116 3.4-117 *‘3.4-118 *‘3.4-119 **3.4-120 *‘3.4-121 *‘3.4-122 *‘3.4-123 *‘3.4-124 *‘3.4-125 *‘3.4-126 *‘3.4-127 *‘3.4-128 *‘3.4-129 **3.4-I 30 “3.5-I 3.5-2 3.5-3 *3.5-4 3.5-5 3.5-6 *3.5-7 *3.5-8 *3.5-9 3.5-10 3.5-11 3.5-12 3.5-13 3.5-14 3.5-15MostRecent DateChansed 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 7/I/70 7/I/70 12/I/69 12/I/69 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 xxviii\nPAGESTATUSLOG Pae_. 3.5-16 3.5-17 3.5-18 3.5-19 3.5-20 3.5-21 3.5-22 *3.5-23 3.5-24 3.5-25 *3.5-26 *3.5-27 *3.5-28 **3.5-28a 3.5-29 3.5-30 3.5-31 3.5-32 3.5-33 3.5-34 3.5-35 3.5-36 3.5-37 3.5-38 3.5-39 3.5-40 3.5-41 3.5-42 *3.5-43 *3.5-44 3.5-45 3.5-46 3.5-47 3.5-48 3.5-49 3.5-50 3.5-51 3.5-52 3.5-53 3.5-54 3.5-55 3.5-56 3.5-57 3.5-58 3.5-59 3.5-60 3.5-61 3.5-62 *3.5-63 3.5-64 *3,5-65 **3.5-65a 3.5-66 3.5-67 3.5-68 3.5-69 3.5-70 3.5-71 3.5-72MostRecent DateChanged 6/I/71 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 3/I/71 12/I/69 8/I/72 8/I/72 8/I/72PageNo. 3.5-73 3.5-74 3.5-75 3.5-76 3.5-77 3.5-78 3.5-79 **3.5-80 **3.5-81 **3.5-82 **3.5-83 **3.5-84 **3.5-85 *4.I-I 4.1-2 4.1-3 4.1-4 4.1-5 4.1-6 *4.I-7 **4.1-7a *4.1-8 *4.I-9 “4.1-10 *4.1-I1 “4.1-12 “4.1-13 “4.1-14 “4.1-15 *4.1-16 “4.1-17 *4.I-I8 *4.1-19 *4.1-20 *4.1-21 **4.1-22 **4.1-23 4.2-I *4.2-2 4.2-3 4.2-4 4.2-5 4.2-6 4.3-I 4.3-2 4.3-3 4.3-4 4.3-5 4.3-6 4.3-7 4.3-8 4.3-9 4.3-10 “4.3-11 “4.3-12 4.4-I 4.4-2 4.4-3 4.4-4 4.4-5MostRecent DateChanged 12/I/69 6/I/71 6/I/71 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 3/I/70 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 811/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 3/I/71 8/I/72 8/I/72PageNo. 4.4-6 4.4-7 4.4-8 4.4-9 4.4-10 4.4-11 “4.5-I *4.5-2 4.5-3 4.5-4 *4.5-5 *4.5-6 *4.5-7 *4.5-8 *4.5-9 “4.5-10 *4.5-I1 “4.5-12 “4.5-13 **4.5-13a “4.5-14 “4.5-15 “4.5-16 “4.5-17 “4.5-18 “4.5-19 **4.5-20 4.6-I 4.6-2 4.6-3 4.6-4 4.6-5 4.6-6 4.6-7 4.6-8 4.6-9 4.6-10 4.6-11 4.6-12 4.6-13 4.6-14 4.6-15 4.7-I 4.7-2 4.7-3 4.7-4 4.7-5 *4.7-6 **4.7-6a 4.7-7 4.7-8 4.7-9 4.7-10 4.8-I 4.8-2 4.9-I *4.9-2 4.9-3 4.9-4Most DateRecent Changed 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 xxix(8/I/72)\nPAGESTATUS LOG PageNo. 4.9-5 4.9-6 4.9-7 4.9-8 4.9-9 4.9-10 4.10-I 4.10-2 4.10-3 4.10-4 4,11-I 4.11-2 4.11-3 4.12-I 4.13-I 4.13-2 4.14-I 4.14-2 4.15-I 4.16-I 4.16-2 4,16-3 4.16-4 4.17-I 4.17-2 4.17-3 4.17-4 4.17-5 4.17-6 4.18-I 4.19-I 4.19-2 4.20-I 4.21-I 4.21-2 4.21-3 4.21-4 4.21-5 4.21-6 “4.21-7 4.21-8 4.21-9 4.22-I 4.22-2 *4.22-3 4.23-I 4.23-2 *4.23-3 *4.23-4 *4.23-5 4.24-I 4.24-2 4.24-3 4.24-4 4.24-5 4.24-6 4.24-7 4.24-8 4.24-9MostRecent DateChanged 8/I/72 11/I/70 8/]/72 1211169 811/72 811/72 811/72 12/I/69 12/I/69 3/I/71 3/I/71Pae_. 4.24-10 4.24-I1 4.24-12 *4.24-I 2a 4.24-13 “4.24-14 4.24-15 4.24-16 4,24-17 4.24-18 4.25-I 4.25-2 4.25-3 4.25-4 4.25-5 4.25-6 4.25-7 4.25-8 4.25-8a 4.25-9 4.25-10 4.26-I 4.26-2 4.26-3 4.26-4 4.26-5 4.26-6 4.26-7 4.26-8 4.26-9 4.26-10 4.26-I1 4.26-12 4.26-13 4.26-14 *4.26-15 4.26-16 4.26-17 4.26-18 4.27-I 4.27-2 4.27-3 4.27-4 4.27-5 *4.27-6 4.27-7 *4.27-8 4.27-9 4.27-10 4.27-11 4.27-12 “4.27-13 4.27-14 4.27-15 4.27-16 4.27-17 4.27-18 4.27-19 4.27-20MostRecent DateChanged 3/I/71 3/I/71 3/I/71 8/I/72 8/I/72 12/I/69 12/I/69 9/I/70 9/I/70 1111170 911170 1111170 1111170 811172 811172 311171 811172 811172PageNo. “4.27-21 **4.27-21a **4.27-21 b *4.27-22 4.27-23 4.27-24 4.27-25 *4.27-26 *4.27-27 4.28-I 4.28-2 4.28-3 4.28-3a 4.28-4 4.28-5 4,28-6 4.28-7 4.28-8 “4.28-8a “4.28-8b 4.28-9 “4.29-I *4.29-2 *4.29-3 *4.29-4 *4.29-5 4.29-6 4.29-7 4.30-I 4.30-2 4.30-3 4.30-4 4.30-5 4.30-6 4.30-7 4.30-8 “4.31-I *4.31-2 *4.31-3 “4.31-4 *4.31-5 **4.31-6 4.32-I 4.32-2 4.32-3 4.32-4 4.33-I 4.33-2 4.33-3 4.34-I 4.34-2 4.35-I 4,35-2 4.35-3 *4.36-I *4.36-2 *4.36-3 4.37-I 4.37-2MostRecent DateChanged 811172 811/72 8/I/72 811172 711170 811172 811/72 311171 311171 311171 311171 1211169 8/Ir72 8/I172 7/I170 8/Ir72 8/Ir72 8/I_72 8/I172 8/I172 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 8/I/72 8/I/72 8/I/72 xxx(8/I/72)\nPAGESTATUSLOG PageNo_. 4.38-I 4.38-2 “4.39-I 4.39-2 4.40-I 4.40-2 4.41-I 4.41-2 4.41-3 “4.41-4 4.41-5 4.41-6 “4.41-7 4.41-8 4.41-9 4.41-lO 4.41-ll *4.41-12 “4.41-13 **4.41 -l3a 4.41-14 4.41-15 4.41-16 4,41-17 4.41-18 4.41-19 4.41-20 4.41-21 4.41-22 4.41-23 4.41-24 4.41-25 4.41-26 4.41-27 “4.41-28 *‘4.41-28a **4.41-28b **4.41-28c *4.41 -29 4.41-30 4.42-I 4.42-2 4.42-3 4.42-4 4.43-1 4.43-2 4.43-3 4.44-1 4.44-2 4.45-I 4.45-2 4.45-3 4.45-4 4.45-5 4.45-6 4.46-I 4.46-2 4.46-3 4.46-4 4.46-5MostRecent DateChanged 8/I/72 8/I/72 8/I/72 12/I/69 7/I/70 911/70 8/I/72 8/I/72 8/I/72 7/1/70 3/1/71 3/1/71 8/1/72 8/1/72 8/1/72 8/1/72 8/1/72 7/1/70 3/1/71Page No. 4.46-6 4.46-7 4.46-8 4.46-9 4.46-10 4.46-I 1 4.46-12 4.46-13 4.46-14 4.46-15 4.46-16 4.46-17 4.46-18 *4.46-19 *‘4.46-19a **4.46-I 9b *4.46-20 4.47-I 4.47-2 4.47-3 4.47-4 4.47-5 4.47-6 4.47-7 4.47-8 *4.48-I *4.48- 2 4.48-3 4.48-4 *4.48-5 4.48-6 4.48-7 4.48-8 4.48-9 4.48-I0 4.48-II *4.48-12 4.48-13 4.48-14 4.48-15 4.48-16 4.48-17 4.48-18 4.48-19 4.48-19a 4.48-19b 4.48-19c 4.48-19d 4.48-19e 4.48-19f 4.48-19g 4.48-20 4.48-21 4.48-22 4.48-23 4.48-24 4.48-25 *4.48- 26 4.48-27Most Recent DateChanged 811172 811172 8/I/72 811172 1211/69 811172 811/72 12/I/69 8/I/72 3/I/71 7/I/70 8/I/72 12/I/69 12/I/69 12/I/69 1211/69 12/I/69 1211169 12/I/69 3/I/71 12/I/69 8/I/72PBe_. 4.49-I 4.49-2 “4.49-3 4.49-4 4.49-5 *4.49-6 *4.49-7 **4.49- 7a 4.49-8 4.49-9 4.50-I 4.50-2 4.51-I 4.51-2 4.51-3 4.51-4 “4.52-I *4.52-2 *4.52-3 *4.52-4 4.53-I 4.53-2 4.54-I *4.54-2 4.54-3 4.54-4 4.54-5 4.54-6 4.54-7 4.54-8 4.55-I 4.55-2 4.55-3 4.55-4 4.55-5 4.55-6 4.55-7 4.55-8 4.55-9 4.56-I 4.56-2 4.56-3 4.57-I 4.57-2 4.57-3 4.57-4 4.58-I 4.58-2 4.58-3 4.58-4 4.58-5 4.58-6 4.58-7 4.59-I *4.59-2 4.59-3 4.59-4 4.59-5 4.59-6MostRecent DateChanged 12/I169 811172 1211169 811172 811172 811172 711170 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 3/I/71 8/I/72 xxxi(811172)\nPAGESTATUS LOG Pa_ag_eNo. 4.59-7 4.59-8 4.59-9 4.59-10 *4.59-I 1 4.59-12 4.59-13 “4.59-14 *‘4.59-15 4.60-I 4.60-2 4,60-3 4.60-4 4.60-5 4.60-6 4.60-7 *4.61-I “4.61-2 *4.61-3 **4.61-3a 4.61-4 “4.61-5 4.61-6 4.61-7 4.61-8 4.62-I 4.62-2 4.62-3 4.62-4 4.62-5 4.62-6 4.62-7 4.62-8 *4.62-9 4.63-I 4.63-2 4.63-3 4.63-4 4.63-5 4.63-6 4.63-7 4.63-8 4,64-I 4.64-2 4.64-3 4.64-4 4.64-5 *4.64-6 *4.64-7 4.64-8 4.64-9 4.64-10 4.65-I 4.65-2 4.65-3 4.65-4 4.65-5 4.65-6 4,65-7 *4.65-8MostRecent DateChanged 12/I/69 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 6/I/71 6/I/71 6/I/71 8/I/72 8/I/72 8/I/72PageNo. 4.65-9 4.65-10 “4.65-11 4.65-12 4.65-13 4.65-14 4.65-15 4.65-16 4.65-17 “4.65-18 “4.65-19 4.65-20 4.65-21 4.65-22 4.66-I 4.66-2 4.66-3 4.66-4 4.66-5 4.67-I 4.68-I 4.68-2 4.68-3 4.68-4 4.68-5 4.69-I 4.69-2 4.69-3 4.69-4 4.70-I 4,70-2 4.70-3 4.70-4 4.70-5 4.70-6 4.70-7 4.71-I 4.72-I 4.72-2 4.72-3 4.73-I 4.73-2 4.73-3 4.73-4 4.74-I 4.74-2 474-3 *z.74-4 **z.74-4a 474-5 475-I 476-I 476-2 476-3 477-I 477-2 477-3 *z.78-I *z.78-2 .79-IMostRecent DateChanged 1211169 12/I/69 8/I172 711170 711170 7/I170 3/I171 8/I/72 8/I/72 7/I/70 7/I/70 7/I/70 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 8/I/72 8/I/72 12/I/69 8/I/72 8/I/72PageNo. 4.79-2 4.79-3 4.80-I 4.80-2 4.81-I 4.81-2 4.82-I 4.82-2 “4.83-I 4.83-2 *4.83-3 **4.83-4 “4.84-I *4.84-2 4,85-I 4.86-I 4.86-2 “4.87-I *4.87-2 *4.87-3 *4.87-4 *4.87-5 *4.87-6 4.87-7 4.87-8 4.87-9 4.87-10 4.87-11 4.87-12 “4.87-13 4.87-14 4.87-15 4.87-16 4.87-16a *‘4.87-16b 4.87-17 4.87-18 4.87-19 4.87-20 4.87-21 4.87-22 4.87-23 4.87-24 4.87-25 4.87-25a *4.87-26 4.87-27 4.87-28 4.87-28a 4.87-29 4.87-30 4.87-31 4.87-32 4.87-33 4.87-34 4.87-35 4.87-36 *4.87-37 3.87-38 4.87-39MostRecent DateChanged 811/72 311/71 811172 811172 8/I172 811/72 811172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 11/I/70 3/I/71 3/I/71 8/I/72 3/I/71 12/I/69 8/I/72 3/I/71 3/I/71 9/I/70 9/I/70 8/I/72 911170 11/1/70 9/I/70 3/I/71 3/I/71 8/I/72 xxxii (8/I/72)\n4.87-40 4.87-41 4.87-42 4.87-43 4.87-44 4.87-45 4.87-46 4.87-47 4.87-48 4.87-49 4.87-50 4.87-51 4.87-52 4.87-53 4.87-54 4.87- 55 4.87-56 4.87-57 4.87-58 4.87-59 4.87-60 4.87-61 4.87-6 2 *4.87-63 *4.87-64 4.87-65 *4.87-66 **4.87-66a *4.87-67 4.87-68 4.87-69 4.87-70 4.87-71 4.87-72 4.87-73 4.87-74 4.87-75 4.87-76 4.87-76a 4.87-76b 4.87-76c *4.87-76d 4.87-76e 4.87-77 4.87-78 4.87-79 4.87-80 4.87-81 4.87-82 *4.87 -83 4.87-84 4.87-85 4.87-86 4.87-86a 4.87- 87 4.87-88 4.87-89 4.87-90 4.87-91MostRecent DateChanged 311171 3/1/71 3/1/71 811/72 8/I/72 II11170 811172 811172 811172 12/]/69 12/I/69 12/I/69 8/1/72 811/72 8/I/72 9/I/70 9/I/70 9/1/70PAGESTATUS LOG MostRecent Most Recent 4.87-119 12/I/69 *4.87-92 8/I/72 4.87-120 4.87-9 3 4.87-I 21 4.87-94 4.87-I 22 4.87-95 12/1/69 *4.87-96 8/I/72 4.87-123 4.87-97 9/I/70 -4.87-124 8/I/72 4.87-97a 9/I/70 ,4.87-125 8/1/72 *4.87-98 8/I/72 ,4.87-126 8/I/724.87-126a 8/I172 4.87-99 4.87-127 4.87-I00 4.87-127a 12/I/69 4.87-I01 4.87-127b 12/I/69 4.87-102 12/I/69 4.87-I03 ll/I/70 4.87-127c 4.87-I04 ll/I/70 4.87-127d 12/I/69 4.87-I04a 12/I169 4.87-127e 12/I/69 4.87-104b 12/I/69 4.87-127f 12/I/69 4.87-104c 12/I/69 4.87-128 4.87-104d 12/I/69 4.87-129 4.87-104e 12/I/69 4.87-130 4.87-104f 12/I/69 4.87-131 4.87-I04g 12/I/69 a.87-132 4.87-I04h 1211/69 4.87-133 4.87-I04i 12/I/69 4.87-134 4.87-I04j 12/I/69 4.87-135 4.87-I04k 12/I/69 -4.87-136 8/I/72 4.87-I04_ 12/I/69 4.87-137 4.87-I04m 12/I/69 4.87-138 4.87-I04n 11/I/70 *-4.87-138a 8/I/72 4.87-104o 1111/70 4.87-139 ,4.87-105 8/I/72 4.87-140 3/I/714.87-141 3/I/71 4.87-106 4.87-142 3/I/71 4.87-107 3/I/71 4.87-108 9/I/70 4.87-143 ,4.87-109 8/1172 4.87-144 ,4.87-I09a 8/I/72 4.87-145 4.87-I09b 12/I/69 4.87-146 4.87-I09c 12/I/69 4.87-147 .4.87-I09d 8/I/72 4.87-148 *-4.87-I09e 8/I/72 4.87-149 *-4.87-I09f 8/I/72 4.87-150 *-4.87-I09g 8/I/72 -4.87-151 8/I/724.87-152 *,4.87-I09h 811/72 4.87-153 *‘4.87-I09i 811/72 *‘4.87-I09j 8/I/72 4.87-1544.87-155 *-4.87-I09k 8/I/72 4.87-156 *-4.87-I09_ 8/I/72 *-4.87-I09m 8/I/72 4.87-157 **4.87-I09n 8/I/72 4.87-1584.87-159 .-4.87-109o 8/I/72 4.87-160 .,4.87-I09p 8/I/72 4.87-161 4.87-110 -4.87-111 8/I/72 4.87-1624.87-163 4.87-112 4.87-164 4.87-11 3 4.87-165 4.87-114 4.87-166 4.87-115 4.87-167 4.87-116 4.87-168 4.87-117 ,4.87-118 8/I/72 4.87-169 xxxiii (8/I/72)\nPAGESTATUS LOG PageNo. 4.87-170 4.87-171 4.87-172 4.87-173 4.87-174 4.87-175 4.87-176 4.87-177 4.87-178 4.87-I 79 4.87-180 4.87-181 4.87-182 “4.87-183 4.87-184 4.87-185 4.87-186 4.87-187 4,87-188 “4.87-189 *‘4.87-190 *‘4.87-191 *‘4.87-192 *‘4.87-193 *‘4.87-194 *‘4.87-195 *‘4.87-196 *‘4.87-197 *‘4.87-198 *‘4.87-199 **4.87-200 *‘4.87-201 **4.87-202 **4.87-203 **4.87-204 **4.87-205 **4.87-206 **4.87-207 **4.87-208 **4,87-209 *‘4.87-210 4.88-I 4.88-2 4.88-3 4.88-4 4.88-5 4.88-6 4.88-7 4.88-8 4.88-9 4.88-10 4.89-I 4.89-2 4.89-3 4.89-4 4.89-5 4.89-6 4.89-7 4.89-8 4.89-9MostRecent DateChanged 811172 11/I170 11/I170 11/I/70 11/I/70 11/I/70 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 1111170 1111170 1111170 1111170 11/1170 1111170 11/I170 1111170 1I11170PageNo. 4.89-10 4.89-I1 4.89-12 4.89-13 4.89-14 4.89-15 4.89-16 4.89-17 “4.90-I *4.90-2 *4.90-3 *4.90-4 *4.90-5 *4.90-6 *4.90-7 **4.90-8 “4.91-I “4.91-2 *‘4.91-3 *‘4.91-4 *‘4.91-5 *‘4.91-6 *‘4.91-7 “4.92-I *4.92-2 *‘4.93-I **4.93-2 *‘4.94-I **4.94-2 *‘4.95-I **4.95-2 *‘4.96-I **4.96-2 *‘4.97-I **4.97-2 *‘4.98-I **4.98-2 **4.98-3 *‘4.99-I **4.99-2 **4.99-3 *‘4.100-I *‘4.100-2 *‘4.100-3 *‘4.101-I *‘4.101-2 *‘4.101-3 *‘4.102-I *‘4.102-2 *‘4.103-I *‘4.103-2 5.1-I “5.2-I “5.3-I *5,3-2 *5.3-3 *5.3-4 *5.3-5 *5.3-6 5.3-7MostRecent DateChanged 1111170 1111170 1111170 1111170 1111170 11/I/70 1111170 1111170 811r72 8/Ir72 8/I172 811172 811172 811r72 811172 811172 811172 811172 811r72 811172 811t72 811172 8/1172 8/1172 8/I172 8/I172 8/I172 8/I172 8/IZ72 8/I172 8/I172 8/I172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 DELETED 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/725 *5 *5 *5 **5 **5 **5 *‘5 **5PageNo. *53-8 *53-9 3-10 3-11 3-12 3-13 3-14 3-15 3-16 3-17 3-18 **53-19 **53-20 *‘5.3-21 **5.3-22 **5.3-23 **5.3-24 **5.3-25 **5.3-26 **5.3-27 **5.3-28 **5.3-29 **5.3-30 *‘5.3-31 **5.3-32 **5.3-33 **5.3-34 **5.3-35 **5.3-36 **5.3-37 **5.3-38 **5.3-39 **5.3-40 *‘5.3-41 **5.3-42 **5.3-43 **5.3-44 **5.3-45 **5.3-46 **5.3-47 **5.3-48 **5.3-49 **5,3-50 **53-51 **53-52 **53-53 **53-54 *54-I *54-2 *54-3 *5.4-4 *5.4-5 *5,4-6 *5.4-7 *5.4-8 *5.4-9 “5,4-10 “5.4-11 “5.4-12 “5.4-13MostRecent DateChan_ed 811172 811172 811172 8/1172 8/1172 8/1172 811172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/It72 8/Ir72 8/I_72 8/1172 8/1172 8/I172 8/I172 8/1172 8/1172 8/I172 8/I172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 xxxiv (8/I/72)\nPAGESTATUSLOG PageNo. “5.4-14 “5.4-15 “5.4-16 “5.4-17 “5.4-18 “5.4-19 *5.4-20 “5.4-21 *5.4-22 *5.4-23 *5.4-24 *5.4-25 *5.4-26 *5.4-27 *5.4-28 *5.4-29 *5.4-30 *5.4-31 *5.4-32 *5.4-33 *5.4-34 *5.4-35 *5.4-36 *5,4-37 *5.4-38 *5.4-39 **5.4-40 *‘5.4-41 **5.4-42 **5’.4-43 *‘5.4-44 **5.4-45 **5.4-46 **5.4-47 **5.4-48 **5.4-49 **5.4-50 *‘5.4-51 **5.4-52 **5.4-53 **5.4-54 **5.4-55 **5.4-56 **5.4-57 **5.4-58 **5.4-59 **5.4-60 *‘5.4-61 **5.4-62 **5.4-63 **5.4-64 **5.4-65 **5.4-66 **5.4-67 **5.4-68 **5.4-69 **5.4-70 *‘5.4-71 **5.4-72 **5.4-73MostRecent DateChanged 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72PageNo. **5.4-74 **5.4-75 **5.4-76 **5.4-77 “5.5-I *5.5-2 *5.5-3 5.5-4 5.5-5 *5.5-6 *5.5-7 *5.5-8 *5.5-9 “5.5-10 “5.5-11 “5.5-12 “5.5-13 *‘5.5-14 *‘5.5-15 **5.5-16 *‘5.5-17 *‘5.5-18 *‘5.5-19 **5.5-20 **5.5-21 _‘5.5-22 **5.5-23 **5.5-24 **5.5-25 **5.5-26 **5.5-27 **5.5-28 **5.5-29 **5.5-30 *‘5.5-31 **5.5-32 **5.5-33 **5.5-34 **5.5-35 **5.5-36 **5.5-37 **5.5-38 **5.5-39 **5.5-40 *.5.5-41 **5.5-42 **5.5-43 **5.5-44 **5.5-45 **5.5-46 **5.5-47 **5.5-48 5.6-I 5.6-2 5.6-3 5.6-4 5.6-5 5.6-6 5.6-7 5.6-8MostRecent DateChanged 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 12/I/69 8/I_72 8/Ir72 8/Iq2 8/1172 8/I172 8/I172 8/I172 8/1172 8/Ir72 8/Ir72 8/Ir72 8/1172 8/I/72 8/I172 8/1172 8/1172 8/Iq2 8/1172 8/Ir72 8/Ir72 8/1172 8/Ir72 8/Ir72 8/Ir72 8/I172 8/Ir72 8/I/72 8/1172 8/I'72 8/I172 8/Ir72 8/Ir72 8/1172 8/I_72 8/1172 8/1172 8/1172 8/Ir72 8/Iq2 8/Ir72 8/Iq2 8/I_72 8/I172 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69PageNo. 5.6-9 5.6-10 5.6-11 5.6-12 5.6-13 5.6-14 “5.6-15 “5.6-16 5;6-17 5.6-18 5.6-19 5.6-20 5.6-21 5.6-22 *5.6-23 *5.6-24 *5.6-25 *5.6-26 *5.6-27 *‘5.6-27a *5.6-28 5.6-29 “5.6-30 *‘5.6-30a 5.6-31 6I-I *62-I *62-2 *62-3 *63-I *63-2 **63-3 64-I 6.5-1 6.5-2 *6.6-I 6.6-2 6.7-I 6.7-2 “6.8-I *6.8-2 *6.8-3 *6.8-4 *68-5 *68-6 *68-7 *68-8 *68-9 *68-10 “6.8-11 *68-12 *68-13 *68-14 *68-15 *68-16 *68-17 *68-18 *68-19 *68-20 *68-21MostRecent DateChanged 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 8/I/72 8/I/72 12/I/69 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 311171 311171 811172 811172 811172 811/72 811172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/1/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 xxxv(8/I/72)\nPAGESTATUS LOG PageNo. *6.8-22 *6.8-23 *6.8-24 *6.8-25 *6.8-26 *6.8-27 *6.8-28 *6.8-29 *6.8-30 “6.8-31 *6.8-32 *6.8-33 *6.8-34 *6.8-35 *6.8-36 *6.8-37 *6.8-38 *6.8-39 *6.8-40 “6.8-41 *6.8-42 *6.8-43 *6.8-44 *6.8-45 *6.8-46 *6.8-47 *6.8-48 *6.8-49 *6.8-50 *6.8-51 *6.8-52 *6.8-53 *6.8-54 *6.8-55 6.9-I 6.9-2 6I0-I 610-2 610-3 610-4 610-5 610-6 610-7 6.10-8 6.10-9 6.10-10 6.10-11 6.10-12 6.10-13 6.10-14 6.10-15 “6.10-16 6.10-17 6.10-18 6.11-I 6.11-2 6.11-3 6.11-4MostRecent DateChanged 811172 811172 811172 811172 811172 811172 811172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 12/I/69 12/I/69 12/I/69 3/I/70 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 12/I/69 8/I/72 12/I/69 12/I/69PageNo. *‘6.12-I **6.12-2 **6.12-3 **6.12-4 **6.12-5 **6.12-6 **6.12-7 **6.12- 8 **6.12-9 *‘6.12-10 *‘6.12-11 *‘6.12-12 *‘6.12-13 **6.12-14 **6.12-15 *‘6.12-16 *‘6.12-17 *‘6.12-18 7.1-I 7.1-2 7.2-I 7.2-2 7.2-3 7.2-4 7.2-4a 7.2-5 7.2-6 7.2-7 7.2-8 72-9 72-9a 72-10 72-11 72-12 72-12a 72-I2b 72-13 7.2-14 7.2-14a 7.2-15 7.2-16 7.2-17 7.2-18 7.2-19 7.2-20 7.2-21 7.2-22 7.2-23 7.2-24 7.2-25 7.2-26 7.2-27 7.2-28 7.2-28a 7.2-29 7.2-30 7.2-31 7.2-32MostRecent DateChanged 811172 811172 811172 8/I172 8/It72 8/Ir72 8/Ir72 8/I172 8/I172 8/I172 8/I172 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 8/I/72 3/I/71 3/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71No. 7.2-33 7.2-34 7.2-35 7.2-36 7.2-37 7.2-38 7,2-39 7.2-40 7.2-41 7.2-42 7.2-43 7.2-44 7.2-45 7.2-46 7.2-47 7.2-48 7.2-49 7.2-50 7.2-51 7.2-52 7.2-53 7.2-54 7.2-55 7.2-56 7.2-57 7.2-58 7.2-59 7.2-60 7.2-61 7.2-62 7.2-63 7.2-64 7.2-65 7.2-66 7.2-67 7.2-68 7.2-69 7.2-70 7.2-71 7.2-72 7.2-73 7.2-74 7.2-75 7.2-76 7.2-77 7.2-78 7.2-79 7.2-80 72-81 72-82 72-83 72-84 72-85 72-86 72-87 7.2-88 7.2-89 7.2-90MostRecent DateChanged 6/I/71 6/1171 611/71 611171 611/71 6/I/71 611171 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 xxxvi (8/I/72)\nPAGESTATUSLOG PageNo. 7.2-91 7.2-92 7.2-93 7.2-94 7.2-95 7.2-96 7.2-97 7.2-98 7.2-99 7.2-I00 7.2-I01 7.2-102 7.2-I03 7.2-I04 7.2-I05 7.2-I06 7.2-I07 7.2-I08 7.2-109 7.2-II0 7.2-III 7.2-I12 7.2-I13 7.2-I14 7.2-I15 7.2-I16 7.2-I17 7.2-I18 7.2-I19 7.2-120 7.2-121 7.2-122 7.2-123 7.2-124 7.2-125 7.2-126 7.2-127 7.2-128 7.2-129 7.2-I30 7.2-131 7.2-132 7.2-133 7.2-134 7.2-135 7.2-136 7.2-137 7.2-138 7.2-139 7.2-140 7.2-141 7.2-142 7.2-143 7.2-144 7.2-145 7.2-146 7.2-147 7.2-148 7.2-149Most Recent DateChanged 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 611171 611171 611171 611171 611171 611171 611171 611171 611171 611171 611171 611171 611171 6/1171 611171 611171 6/I171 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71PageNo. 7.2-150 7.2-151 7.2-152 7.2-153 7.2-154 7.2-155 7.2-156 7.2-157 7.2-158 7.2-159 7.2-160 7.2-161 7.2-162 7.2-163 7.2-164 7.2-165 7.2-166 7.2-167 7.2-168 7.2-169 7.2-170 7.2-171 7.2-172 7.2-173 7.2-174 7.2-175 7.2-176 7.2-177 7.2-178 7.2-179 7.2-180 7.2-181 7.2-182 7.2-183 7.2-184 7.2-185 7.2-186 7.2-187 7.2-188 7.2-189 7.2-190 7.2-191 7.2-192 7.2-193 7.2-194 7.2-195 7.2-196 7.2-197 7.2-198 7.2-199 7.2-200 7.2-201 72-202 72-203 72-204 72-205 72-206 73-I 73-2Most Recent Date Changed 611171 611171 611171 6/I171 6/I171 611/71 611/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/I/71 6/Ir71 6/Ir71 6/Ir71 6/Ir71 6/Ir71 6/Ir71 6/Ir71 6/I171 6/I171 6/I_71 3/I/71 3/I/71PageNo. 7.3-3 73-4 73-5 73-6 73-7 73-8 73-9 73-10 73-11 73-12 73-13 73-14 73-15 73-16 73-17 73-18 73-19 73-20 73-21 73-22 73-23 73-24 73-25 73-26 73-27 73-28 73-29 73-30 73-31 73-32 73-33 73-34Most Recent DateChanged 311171 311171 311171 3/I171 3/I171 3/I/71 3/I/71 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 311171 xxxvii (8/I/72)\nPROGRAMOVERVIEW I.IPROGRAM OVERVIEW l.l.l Objectives TheNASTRAN program hasbeendesigned according totwoclasses ofcriteria. Thefirst class relates tofunctional requirements forthesolution ofanextremely widerange oflarge andcom- plexproblems instructural analysis with highaccuracy andcomputational efficiency. These cri- teria areachieved bydeveloping andincorporating themost advanced mathematical models andcom- putational algorithms thathavebeenproven inpractice. Inparticular, theyareachieved by providing suchfeatures asthebandwidth-with-active-column technique inmatrix decomposition; packing routines totakemaximum advantage ofmatrix sparsity soastoconserve input/output time; highly stable andefficient algorithms forthesolution ofproblems ineigenvalue analysis and transient response; andanelegant approach tomodeling theeffects ofcontrol systems andother nonstructural components. Thesecond class ofcriteria relates totheoperational andorganizational aspects ofthe program. These aspects aresomewhat divorced fromstructural analysis itself; yettheyareof equal importance indetermining theusefulness andquality oftheprogram. Chief among these criteria are: I.Simplicity ofproblem input deckpreparation. 2.Minimization ofchances forhuman error inproblem preparation. 3.Minimization ofneedformanual intervention during program execution. 4.Ease ofprogram modification andextension tonewfunctional capability. 5.Ease ofprogram extension tonewcomputer configurations andoperating systems, and generality inability tooperate efficiently under awidesetofconfiguration capabilities. 6.Capability forstepbystep problem solution, without penalty ofrepeated problem setup. 7.Capability forproblem restart following unplanned interruptions orproblem preparation error. 8.Minimization ofsystem overhead, inthethree vital areas: a.Diversion ofcorestorage fromfunctional useinproblem solution. l.l-I"},"title":"Programmer's Manual P2"},"/docs/programmers/programmers_manual_003/":{"data":{"":"NASTRAN PROGRAMMING FUNDAMENTALS b.Diversion ofauxiliary storage unitsfromfunctional tosystem usage. c.System housekeeping timeforperforming executive functions thatdonotdirectly further problem solution. These criteria areachieved inNASTRAN through modular separation offunctional capabilities, organized underanefficient, problem-independent Executive System. Thisapproach isabsolutely essential foranycomplex multi-operation, multi-file application program suchasNASTRAN. Toseethis,onemustexamine theimplications ofmodularity inprogram organization. Anyapplication computer program provides aselection ofcomputational sequences. These are controlled bytheuserthrough externally provided options andparameter values. Sincenouser willwishtoobserve theresult ofeachcalculation, theseoptions alsoprovide fortheselection ofthedatatobeoutput. Inaddition toexternally setoptions, internal switches whose setting depend upontests performed during thecalculations willcontrol thecomputation sequences. There is,therefore, anatural separation ofcomputations intofunctional blocks. Theprincipal blocks arecalled functional modules; modules themselves ofcourse may,andusually must,befurther organized ona sub-modular basis. Despite thisseparation, however, itisclearthatmodules cannot becompletely independent, sincetheyarealldirected toward solution ofthesamegeneral problem. Inparticular, they mustintercommunicate dataamongthemselves. Theprincipal problem inorganizing anyapplication program, largeorsmall, isdesigning thedatainterfaces between modules. Forsmallprograms, thestandard techniques aretocommunicate dataviasubroutine calling sequences andcommon dataregions incore. Forprograms thathandle larger amounts ofdata, auxiliary storage isused;however, strict specifications ofthedevice_ usedandofthedata record formats areusually imposed. Thepenalty paidisthatof\"sideeffects\". Achange inaminor subroutine initiates a modification ofthedatainterfaces thatpropagates through theentire program. Whentheprogram issmall, theseeffects maynotbeserious. Foracomplex program likeNASTRAN, however, they would bedisastrous. 1,I-2\nPROGRAM OVERVIEW Thisproblem hasbeensolved inNASTRAN byaseparation ofsystem functions, performed by anExecutive System, fromproblem solution functions, accomplished bymodules separated strictly along functional lines. Eachmodule isindependent ofallother modules inthesense that modification ofamodule, oraddition ofanewmodule, will notingeneral require modification ofother modules. Evenso,programming constraints onmodule development doexist butareminor. Theessential restrictions are: I.Modules mayinterface with other modules onlythrough auxiliary storage files, asopposed topassing information between eachother while incore. 2.Since theavailability andallocation ofauxiliary files formodule execution interact with theexecution ofother modules, nomodule canspecify orallocate files foritsinput or output data. Allauxiliary storage allocation isreserved asanExecutive function. 3.Modules operate asindependent subprograms, andmaynotcall, orbecalled by,other modules. Theymaybeentered onlyfromtheExecutive System. 4.Modules mayinterface with theExecutive System through aparameter table thatis maintained bytheExecutive System. User-specified options andparameters arecommunicated tomodules inthisway. Themajor lineofcommunication isone-way, fromusertoExecutive routine tomodule. However, inaddition, anappreciable twowaycommunication, frommodule back toexecutive routine (andtherefore toother modules) ispermitted viatheparameter table. 5.Intra-module parameter communication isformat-free inthesense thateachmodule defines andorders itsownlocal parameter setinternally. Thuseachmodule is independent ofcommon dataformatting byanyother module. Noother constraints, except those imposed bytheresident compilers andoperating systems, arerequired forfunctional modules. l.l.2 ProBram Organization Because oftheverylarge size oftheNASTRAN program (more than750decks and300individual overlay segments), execution asonephysical program wasnotpossible. However, tomeet the stated design objectives, itwasrequired thatNASTRA_ appear totheresident operating system as oneprogram. 1.1-3\nNASTRAN PROGRAMMING FUNDAMENTALS Aprogram structure evolved which isbasically computer independent, although thewayin which thecodestructure issupported varies across thecomputers. TheNASTRAN program isdivided intoaseries oflogical pieces called links. Eachlinkcon- tainsitsownrootsegment (thesetofsubprograms which isalways coreresident forthatlink) anditsowncomplete overlay structure. Eachlinkiscapable ofperforming apredefined subset ofNASTRAN operations. Communication between linksoccurs through computer files. Control ofthe sequence ofexecution ofthelinksisperformed entirely bytheNASTRAN program andrequires no operator intervention. Asaresult ofthisapproach, aNASTRAN program execution appears tothe resident operating system asanormal batchjobtobeprocessed inthebatchstream. Detailed descriptions ofthewayinwhichthelinkstructure isimplemented oneachcomputer aregiven insection 5. 1.I-4\nNASTRAN EXECUTIVE SYSTEM 1.2NASTRAN EXECUTIVE SYSTEM 1.2.1Introduction Theessential functions oftheExecutive System are: I.Establish andcontrol thesequence ofmodule executions according tooptions specified bytheuser. 2.Establish, protect, andcommunicate values ofparameters foreach module. 3.Allocate system files toalldatablocks (adatablock designates asetofdata, matrix ortable, occupying afile) generated during program execution. Afile is\"allocated\" toa datablock, andadatablock is\"assigned\" toafile. Thegeneral datablock I/routine (GIN) andthedatacardconversion routines (XRCARD andRCARD) areconsidered Input/Output utilities andarediscussed separately insection 1.6. 4.Maintain afullrestart capability forrestoring aprogram execution after either a scheduled orunscheduled interruption. TheExecutive System isopen-ended inthesense thatitcanaccommodate anessentially unlimited number cffunctional modules, files, andparameters. Modification oftheExecutive System necessary forchange, addition, orextension offunctional modules isrestricted to changes inentries incontrol tables stored within theExecutive routines. Program execution isdivided intotwophases: l)thePreface, inwhich modules XCSA, IFPI, XS_RT, IFPandXGPIareexecuted to:a)process theNASTRAN input datadeckandb)perform general problem initialization; and2)theprogram body itself, inwhich thesequence ofprogram operations iscontrolled bytheOperation Sequence Control Array (_SCAR) Executive table, which wasdeveloped intheXGPImodule ofthePreface. Adiagram ofasample NASTRAN input data deck isshown inFigure I.Note thataNASTRAN input datadeckconsists of3separate decks: l)the Executive Control Deck, 2)theCaseControl Deckand3)theBulk DataDeck. Adetailed descrip- tionofthecontents oftheNASTRAN datadeckisgiven insection 2oftheUser’s Manual. The flowofoperations during thePreface ispresented inFigure 2.Thenumbers intheblocks in Figure 2refer tosection numbers where more detailed explanations ofthesubroutines andmodules canbefound. 1.2-I\nNASTRANPROGRAMMING FUNDAMENTALS ’’ IENDDATA C.o\"_ IDISPL=ALL ,.jx) iOUTPUT\n\u003cIL(AD=2 •__\\ ISPC:5’ ___ ITITLE =SAMPLE PR_IBLEM o\" ICEND J% ISeLl,O x IAPPDISPLACEMENTITIME 40 ICHKPNT =YES IDJBBOOO,ABC\u003c \\ Figure I.Sample NASTRAN input datadeck. l.2-2\nNASTRANEXECUTIVESYSTEM CENTRY) 1 IGenerate theInitial FileAllocation I Tables (GNFIAT-3.3L.4) IReadandAnalyze theExecutive Control Deck(XCSA-4.2) Ip_cesst_ICaseC°nt_1_c_I_Pl-,.3_ ISorttheBulkDataDeck I (XS@RT-4.4) Conical ShellProcess theBulkDataDeck (IFP-4.5) _ H_droelastic No Further Process DataSDecific tothe Hydroelastic Problem (IFP4-4.89) or Acoustic Problem (IFP5-4.90)Further Process DataSpecific to theConical Shell Problem (IFP3-4.6) Perform General Problem Initialization (XGPI-4.7) Figure 2.Flowofoperationsduring thePerface. 1.2-3 (8/I/72)\nNASTRAN PROGRAMMING FUNDAMENTALS 1.2.2 Executive Operations During thePreface Thesequence ofPreface operations showninFigure 2iscontrolled bytheSequence Monitor Initialization subroutine, SEMINT (seesection 3.3.3). Eachroutine called bySEMINT isdis- cussed inthefollowing sections. Thenumbers inthesection headings refertosection numbers wheremoredetailed information onthesubroutine ormodule canbefound. 1.2.2.1 Generation oftheInitial FileAllocation Tables (GNFIAT section 3.3.4) Twofileallocation tables aremaintained bytheNASTRAN Executive System. Onetable, FIAT, (seesection 2.4)defines thefilestowhichdatablocks generated during solution oftheproblem willbeallocated. Thesecond table, XFIAT, (seesection 2.4)includes filestowhichpermanent Executive datablocks, suchastheNewProblem Tape,theOldProblem Tape,plottapes, andthe User’s Master Fileareassigned. TheNewProblem Tapewillcontain thosedatablocks generated during thesolution thatare necessary forrestarting theproblem atanypoint. TheOldProblem Tapecontains thedatablocks savedfromsomeprevious execution thatmayservetobypass stepsinthesolution ofthenew problem. TheUser’s Master Fileisapermanent collection ofuseful information, suchasmaterial properties, thatmaybeusedtogenerate inputdata. Thegeneration oftheXFIATandFIATtables isacomputer dependent operation sincedirect interface withtheoperating system ofthecomputer mustbemade. TheGNFIAT routine, which accomplishes thisfunction, interrogates filetables inthenucleus oftheoperating system. Fileswhich areavailable forusebytheNASTRAN program arereserved, andtheunitnumbers for thesefilesarestored intheNASTRAN fileallocation tables. Anindication ofwhich unitsare physical tapes isalsostored. Ifthenumber offilesavailable isinsufficient torunthepro- blem,anerrormessage isgenerated, andtherunisaborted. 1.2.2.2 Analysis oftheExecutive Control Deck(XCSASection 4.2) TheExecutive Control Deckisprocessed andanalyzed bytheXCSAExecutive Preface module. TheExecutive Control Deckincludes cardswhich describe thenature andtypeofsolution tobe performed. Thisincludes anidentification oftheproblem, anestimated timeforsolution ofthe problem, theapproach, aselection oftheRigid Format tobeexecuted oranalternative sequence ofNASTRAN operations (DMAP) tocontrol thesolution, arestart deckfromaprevious runifthe 1.2-4\nNASTRAN EXECUTIVE SYSTEM solution istoberestarted, anindication ofanydiagnostic printout tobemade, aspecification ofwhether theproblem istobecheckpointed ornot,and, ifaRigid Format isselected, any desired alterations tothatformat. Section 2oftheUser’s Manual should beconsulted forthe formats of,andrestrictions on,eachofthecards intheExecutive Control Deck. Theapproach (APP) card, andthesolution (S_L) card, which selects aparticular solution (Rigid Format) tobe executed, areworthy ofspecial note. However, firstsome introductory definitions arerequired. Thesequence ofoperations tobeexecuted during theprogram body iswritten inadatablock oriented language called DMAP, anacronym for\"Direct Matrix Abstraction Program\". ADMAP instruc- tionisastatement intheDMAPlanguage, aDMAPsequence isasetofDMAPinstructions, andaDMAP loopisaDMAPsequence toberepeated. ADMAPmodule isonewhich is\"called\" bymeans ofa DMAPinstruction. ARigid Format consists of: a)afixed pre-stored DMAP sequence andb)itsassociated restart tables. ARigid Format performs aspecific (structural) problem solution. Section 3of theUser’s Manual presents theDMAPsequence andtheassociated restart tables foreachRigid Format. TheAPPcardoftheExecutive Control Deckdefines theproblem solution approach. TheAPP cardisrequired, andthere aretwooptions ontheAPPcard: DISPLACEMENT orDMAP. TheS@Lcard hastheform S_L n,m where n=Rigid Format number, andm=asubset oftheRigid Format. TheS_Lcardisrequired if theDISPLACEMENT option ischosen ontheAPPcard. TheS_Lcardmustnotbepresent inthedeck iftheDMAP option ischosen. Inaddition tousing theRigid Formats provided automatically byNASTRAN, theusermaywish either toexecute aseries ofmodules inamanner different fromthatprovided bytheRigid Format, ortoperform aseries ofmatrix operations which arenotcontained inanyexisting Rigid Format. Ifthemodifications toanexisting Rigid Format areminor, theALTER feature described inSection 2oftheUser’s Manual maybeemployed. Otherwise, auser-written Direct Matrix Abstraction Program (D_P) should beused, inwhich casethecard APPD_JAP mustbeused. Chapter 5oftheUser’s Manual discusses DMAP. 1.2-5\nNASTRAN PROGRAMMING FUNDAMENTALS Eachofthecardscomprising theExecutive Control DeckisreadviaXRCARD (3.4.19) and analyzed. Depending onthecard,information iseither stored invarious Executive tables main- tained incorestorage orwritten intheExecutive Control Table (2.4.2.5) ontheNewProblem Tapeforfurther processing during thegeneral problem initialization phase (XGPI-4.7) ofthe Preface. Figure 3presents theformat oftheProblem Tape. Theformats oftheNewandtheOld Problem Tapesareidentical; onlychronology defines theirseparate functions. 1.2.2.3 Processing oftheCaseControl Deck(IFPISection 4.3) TheCaseControl Deckincludes thefollowing classes ofcards: selection ofspecific sets ofdatafromtheBulkDataDeck,selection ofprinted orpunched output, definition ofsubcases, definition ofstructural plotstobemade,anddefinition ofXYplotstobemade. Section 2of theUser’s Manual discusses indetail allcardsoftheCaseControl Deck. ThisdeckisreadviaXRCARD (3.4.19) andprocessed. Information defining setselection, output selection andsubcase definition iswritten intotheCaseControl datablock, CASECC. Information defining plotrequests iswritten inthePlotControl (PCDB) andXYControl (XYCDB) datablocks. Iftheproblem isarestart, acomparison withtheCaseControl Deckfromtheprevious run ismade. Differences arenoted inanExecutive restart table, which isusedinthegeneral pro- bleminitialization phase(XGPI-4.7) ofthePreface. 1.2.2.4 Sorting oftheBulkDataDeck(XS_RT Section 4.4) Thefunction oftheXS_RTroutine istoprepare afileontheNewProblem Tape(seesection 1.2.2.1) whichcontains thesorted BulkDataDeck(bulkdata). Operation oftheroutine is influenced bythetypeofrun. Iftherunisacoldstart, thebulk’data isreadfromthesystem inputfile(e.g.cardreader) ortheUser’s Master File,sorted, andwritten ontheNewProblem Tape. Iftherunisanunmodified restart, (restarts arediscussed insection I.I0), thebulk dataiscopied fromtheOldProblem Tape(seesection 1.2.2.1) totheNewProblem Tape. Ifthe runisamodified restart, thebulkdataisreadfromtheOldProblem Tape,andcardsaredeleted and/or addedinaccordance withcardsinthesystem inputstream. Themodified bulkdatais sorted andwritten ontheNewProblem Tape. Additionally, anychanges inthedataarenoted in theExecutive restart table. Aprinted listoftheunsorted bulkdataisgiven ifrequested byanECHOcardintheCase Control Deck. Similarly, thesorted bulkdataisechoed onrequest. 1.2-6\nNASTRAN EXECUTIVE SYSTEM Allfiles begin with an eight character (2word) BCDheader record. PROBLEM IDFILE (always present) ALTER FILE (only ifALTER cards arepresent) EXECUTIVE C_NTROL TABLE FILE (always present) CASEC_NTR_L FILE (always present) BULKDATACARD FILE (always present) PARAMETER VALUE FILE (only ifPARAM cards arepresent) [CHECKPBINT FILES {(only ifCHKPi4T or RESTART cardispresent) {PROB. TAPEDICT. FILE (only ifCHECKPOINT FILES arepresent)B M_NTH -Is___l– DAY__–L YEAR REEL# _ XALTER (header) _AA _ XCSA (header) _ BULKDATA (header) – XPTDIC (header) ^A first andsecond fields from IDcard (BCD) -—problem date _reel sequence no. (seesection 2.4.2.6) Note: ^denotes BCDblank (seesection 2.4.2.5) (seesection 2.3.1.I) _bulk datacard images (seesection 2.4.2.4) _all checkpointed datablocks separated byE_F’s _always thelastfile (seesection 2.4.2.3) Figure 3.Problem tape format (same format for;_ewProblem Tape andOldProblem Tape). 1.2-7\nNASTRAN PROGRAMMING FUNDAMENTALS Sincethecollating sequence ofalphanumeric characters varies fromcomputer tocomputer, the sortroutine converts allcharacters toaninternal codepriortosorting. Following thesort, thecharacters arereconverted. Inthisway,thecollating sequence iscomputer independent. Thealgorithm usedbythesortroutine isbiased toward thecasewhere thedatainsort ornearly insort. Consequently, BulkDataDeckswhicharenearly insortwillbeprocessed efficiently bytheroutine. 1.2.2.5 Processing oftheBulkDataDeck(IFPSection 4.5) Thesorted BulkDataDeckisreadcard-by-card fromtheNewProblem TapebytheInputFile Processor (IFP)andconverted tointernal binary formbyRCARD(3.4.20). Eachofthecardsis checked forcorrectness offormat. Ifanydataerrors aredetected, amessage iswritten, anda switch issettoterminate therunattheconclusion ofthePreface. Section 2oftheUser’s Manual presents adetailed description ofallcardsoftheBulkDataDeck. Processing ofeachbulkdatacarddepends onthetypeofcard. Allbulkdatacardsofthe sametypearewritten intothelogical record towhich thecardtypehasbeenassigned. These records areorganized intodatablocks classified according togeneral categories ofuseand written onprescribed preallocated files. 1.2.2.6 Processing ofConical ShellData(IFP3Section 4.6) Iftheproblem isaconical shellproblem, further processing ofthebulkdataspecific to theconical shellproblem isaccomplished. Thenature ofthisprocessing istoconvert datafor theconical shellmodel intoformats ofaconventional statics problem. Theresult isthatthe conical shellproblem canbedescribed inaformat convenient totheanalyst a_dprocessed by NASTRAN inaformat convenient totheprogram. 1.2.2.7 Processing ofHydroelastic Data(IFP4Section 4.89) Ifhydroelastic analysis dataexists, thisdatamustbeconverted tothedatablockformats andmerged withexisting dataoutput fromIFP.Thismodule creates gridpoint, scalar point, element connection, andconstraint dataaswellasproducing asection intheMATP_L datablock. 1.2-8(8/I/72)\nNASTRAN EXECUTIVE SYSTEM 1.2.2.8 Processing ofAcoustic Data(IFP5 Section 4.91) Ifacoustic analysis dataexists, theIFP5module generates andmerges gridpoints, scalar elements, andplotting elements with theexisting datablocks. 1.2.2.9 General Problem Initialization (XGPI Section 4.7) TheExecutive General Problem Initialization (XGPI) module istheheart ofthePreface. Its principal function istogenerate theOperation Sequence Control Array (_SCAR-2.4.2.1), which defines theproblem solution sequence. TheBSCAR consists ofasequence ofentries, with each entry containing alloftheinformation needed toexecute onestepoftheproblem solution. The _SCAR isgenerated from information supplied bytheuserthrough hisentries intheExecutive Control Deck. Thisinformation issupplied bytheS_Lcard, which points toaRigid Format, or byausersupplied DMAPsequence. Theinitial sequence ofinstructions waswritten intheExecutive Control Table (2.4.2.5) ontheNewProblem TapebytheXCSAPreface module. This table isreadtoinitiate assembly of theBSCAR. Iftheproblem isarestart, therestart dictionary (contained intheExecutive Control Table) andtheExecutive restart table areanalyzed todetermine which datablocks areneeded to restart thesolution andwhich operations inthe_SCAR needtobeexecuted tocomplete the solution. Entries intheBSCAR foroperations notrequired forthecurrent solution areflagged fornooperation. Toaidinefficient assignment ofdatablocks tofiles, twoattributes arecomputed and included with eachdatablock ineachentry oftheBSCAR. These attributes are: a)theBSCAR sequence nun_er when thedatablock isnextused(NTU) andb)the_SCAR sequence nu_er when the datablock islastused(LTU). Details ofthefileallocation arediscussed insection 1.2.3.3. Whengeneration ofthe_SCAR iscomplete, itiswritten ontheDataPoolFile(P_L). If theproblem isrestart, datablocks needed forthecurrent solution arecopied fromtheOld Problem Tape totheData PoolFile. 1.2-9 (811172)\nNASTRAN EXECUTIVE SYSTEM 1.2.3 Executive Operations Durin9Problem Solution 1.2.3.1 Sequence Monitor (XSEMi Section 3.3.7) WhenthePreface hasbeencompleted, solution oftheproblem isinitiated. Thissolution iscontrolled bythesequence monitor. Figure 4showstheflowforthesequence monitor. Note thatthereareicopies ofXSEMiwithin NASTRAN, onecontrolling eachlink’s operation. Section 1.1.2defined thenecessity forthesedivisions. Thesequence monitor readsanentryfromthe_SCAR (2.4.2.1) which defines onestepinthe problem solution intermsof:theoperation tobeperformed, datablocks required forinput, datablocks tobeoutput, scratch filesrequired andparameters used. TheFileStatus Table (FIST-2.4.1.3), which relates theinternal datablockreference numbers (seeSection 1.6.4) to thefileposition intheFileAllocation Table (FIAT-2.4°1.2), iscreated bytheFISTgenerator, subroutine GNFIST. Whenthestatus tableiscomplete, XSEMimoves theparameters required for theoperation intoblank common andcallstherequested module (ifwithin thecurrent link)to begintheoperation. Iftherequested module isnotwithin thecurrent link,ENDSYS (seeSection 3.3.5) iscalled andtheSequence Monitor within thenewlinkisexecuted. Withtheexception ofXSFA,thesevenroutines described inthefollowing subsections are Executive modules called directly byXSEMitoperform theirspecified functions. 1.2-9a (8/I/72)\nNASTRAN PROGRAMMING FUNDAMENTALS _d ENTER ICallSEMINT (Preface Only) _ReadnextI“OSCARentry _;o _Y_s Generate FIST for Input, _utput, Scratch DataBlocks MoveParameters IfromVPS toBlankCommon No ICallmodule ICallEXECRoutine (XCEI, CHKPNT, PURGE EQUIV, SAVE) Call 1ENDSYS CallMessage 1Writer MSGWRT Figure 4.Flowdiagram forthesequence monitor, XSEMi. 1.2-I0\nNASTRANEXECUTIVESYSTEM 1.2.3.2 FIST Generator (GNFIST Section 3.3.9) TheFISTgenerator, subroutine GNFIST, creates theFileStatus Table(FIST), whichcontains thelinkage between theinternal datablockreference numbers andtheactual system fileslisted intheFileAllocation Table (FIAT). Eachinput, output andscratch datablockrequired bythe forthcoming module isassigned aninternal reference number iffoundtobeactive inFIAT. A datablockfoundtobeinactive, thatispurged ornotgenerated, willnotbeassigned areference number. Thismissing reference number willcausetheaccessing module tobesignaled regarding theinactive status. If,during thegeneration oftheFIST,adatablock isnotfoundinthe FIAT,active orinactive, theExecutive Segment FileAllocator (XSFA) module iscalled byGNFIST tomakeafileavailable tothesubject datablock. 1.2.3.3 Segment FileAllocator (XSFASection 4.9) TheExecutive Segment File Allocator (XSFA) module, which iscalled exclusively byGNFIST, istheadministrative manager ofdata blocks forNASTRAN. Since, ingeneral, thenumber ofdata blocks required forsolution ofaproblem farexceeds thenumber offiles available, assignment ofdata blocks tofiles isacritical operation forefficient execution ofNASTRAN. TheExecutive Segment File Allocator module iscalled whenever adata block isrequired for execution ofanoperation butisnotcurrently assigned toafile (i.e., does notappear inthe FIAT). When theSegment File Allocator iscalled, itattempts toallocate notjust forthedata block initiating thecall, butforasmuch oftheremaining problem solution aspossible. This allocation depends onthetype ofproblem, thenumber offiles available, andtherange ofuseof theremaining data blocks. 1.2-11 (8/I/72)\nNASTRAN PROGRAMMING FUNDAMENTALS TheSegment FileAllocator readsentries fromthe_SCARfromthepointofcurrent operation totheendoftheproblem solution. TheFIATtableentries arecreated inwhichattributes of thedatablocks, including theirnextuse(NTU)andlastuse(LTU), arestored. Datablocks which arecurrently assigned tofilesbutarenolonger required forproblem solution arereleased. Incertain cases, whentherangeofuseofadatablockislarge, itmaynotbepossible to allocate afiletothedatablockthroughout itsrangeofuse.Inthiscase,pooling ofthe datablockisrequired sothatthefiletowhichthedatablockwasassigned maybefreedfor another allocation. Thenexttimeused(NTU)attribute foradatablockisusedtoefficiently pooldatablocks. Ingeneral, thedatablockwhosenextuseisthefurthest fromthecurrent pointispooled, thatis,copied ontotheDataPoolFile(P_L). Theformat oftheDataPool Fileisshown inFigure 5. Oneadditional checkismadewithregard topooling. Theoperation oftheSegment File Allocator itself islessexpensive thanapooling operation. Therefore, pooling occurs only whenthemodule forwhichtheallocation wasrequired cannot beallocated without pooling. _hentheSegment FileAllocator iscomplete, anewFileAllocation Table (FIAT) hasbeen generated. Thistableisuseduntilthesolution againreaches apointwhereadatablockis required toexecute anoperation butisnotassigned toafile. 1.2.3.4 Interpretation ofExecutive Control Entries (XCEISections 4.11,4.12,4.13,4.14) Executive control entries include theDMAPinstructions: REPT,JUMP,C_NDandEXIT. Executive control entries inthe_SCARareprocessed bytheExecutive Control EntryInterpretor (XCEI). Whensuchanentry isencountered inthe_SCAR, theControl Entry Interpretor iscalled byXSEMi. Iftheoperation isajump,cor,ditional jumporrepeat, the_SCARisrepositioned accordingly. Iftheoperation isanexit,theNASTRAN termination routine PEXIT(3.4.22) is called. 1.2.3.5 Checkpointing DataBlocks (CHKPNT Section 4.10) Thecheckpoint module (DNLAPname: CHKPI_T; entry pointname: XCHK) copies specified data blocks required fcrproblem restart ontotheNewProblem Tapeandmakes appropriate entries intherestart dictionary. Thisdictionary isalsopunched ontocardsaseachnewentry ismade. Thus,intheeventofanyunscheduled problem interruption, arestart fromthelastcheckpoint 1.2-12 (lllll70)\nNASTRA;_ EXECUTIVE SYSTEM Allfiles begin with an eight character (2word) BCDheader record. _SCAR FILE I(always present) FF – XIBSCAR^^ (header) -data blocks fromDMI’sandDTI’s (ifpresent) separated byE_F’s i4ote: ^denotes BCDblank (seesection 2.4.2.1) --data blocks pooled byXSFA (ifnecessary) separated by E_F’s Figure 5.Format oftheDataPool File. 1.2-13\nNASTRAN PROGRAMMING FUNDAMENTALS canbemadeusingtheProblem Tapeandtherestart dictionary fromtheinterrupted run. 1.2.3.6 Purging aData Block (PURGE Section 4.16) Thepurge routine (DMAP name: PURGE; entry point name: XPURGE) flags datablocks sothat theywill notbeassigned tophysical files. Thisspecial status provides ameans forlogically suppressing asegment ofprocessing steps requiring thedatablock. Thus, ifthefunction ofa module istomultiply twomatrices andaddathird matrix totheproduct, theaddition stepmight bedeleted bypurging thedatablock corresponding tothethird matrix. 1.2.3.7 Equivalencing Data Blocks (EQUIV Section 4.17) Theequivalence routine (DFtAP name: EQUIV; entry point name: XEQUIV) attaches oneormore equivalent datablock names toanexisting datablock. Thisspecial status provides ameans of logically removing amodule function bymaking adatablock input tothemodule equivalent toa datablock output fromthemodule. Thus anentire module could beskipped, andaninput data block “copied” toanoutput datablock without physically moving thedatafromonefiletoanother. 1.2.3.8 Saving Parameters (SAVE Section 4.15) Thesaveroutine (DMAP name: SAVE; entry point name: XSAVE) provides aprotection feature fortheparameters communicated between, andusedby,thefunctional modules. Allvariable para- meters arestored within theVPSExecutive table (seesection 2.4). Prior toeachmodule’s operation, thesubset ofparameters required bythemodule ismoved toblank common. Themodule mayuseormodify thissubset ofparameters asdesired. When themodule terminates operation, onlythose parameters within thesubset designated tobesaved arerestored totheExecutive table. l.2-14 (ll/I/70)\nWORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS 1.3WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS 1.3.1 Introduction Although NASTRAN isaF@RTFCAN oriented system, considerable effort wasrequired todevelop programming andwordhandling techniques applicable tofourseparate computer configurations. llnese computers exhibit wide differences intheir binary wordsizes andinteger representation method. Thecurrent computer configurations considered andtheir significant differences follow: I.Computer -IBM7094/7040 DCS WordSize-36Bits Character Capacity -6bits/character and6characters/word Integer Representation -SignandMagnitude 2.Computer -IBMSystem/360 series WordSize -32Bits Character Capacity -8bits/character and4characters/word (character zbyte) Integer Representation -Twoscomplement fornegative integers 3.Computer -UNIVAC If08 WordSize -36Bits Character Capacity -6bits/character and6characters/word Integer Representation -Onescomplement fornegative integers 4.Computer -CDC6600 Word Size-60Bits Character Capacity -6bits/character andlOcharacters/word. Integer Representation -Ones complement fornegative integers Various Executive routines (e.g., XSORT (4.4), XRCARD (3.4.19)) thatdealdirectly with character strings fromtheinput stream require somemethod ofobtaining theabove computer dependent information. SJithin theNASTRAN Preface, subroutine BTSTRP (3.3.2) solves analgorithm thatdetermines which ofthefourcomputers iscurrently operating. This algorithm functions by inspecting theword length (bymeans ofshifting andtesting) andbychecking thenegative integer representation method. Asaresult ofthese tests, aword (MACH) withi_ theSYSTEM Executive table (seesection 2.4) issettoindicate thecomputer type. Since datawithin BTSTRP defines thenumber ofbits-per-word (NBPW), thenun_er cfcharacters-per-word (NCPW), andthenun_er of 1.3-I\nNASTRAN PROGP_AMMING FUNDAMENTALS bits-per-character (NBPC) foreachcomputer type,thecorrect values fortheseparameters arealso stored intotheSYSTEM table. Thistableresides within theNASTRAN rootsegment andisthus accessable toanymodule orsubroutine. 1.3.2 AIphanumeric _ata Datastored within acomputer asbinary-coded-decimal (BCD)characters mustberepresented bytheproper hardware defined bitcodes. These character codes (andinthecaseoftheIBM System/360, thenumber ofbitsrepresenting thecode)varyamongtheNASTRAN computer types. Although thenumber ofcharacters-per-word couldhavebeenobtained fromtheSYSTEM table, various datablocks andbuffers within NASTRAN required firmentrysizes, regardless ofcomputer type,tofacilitate indexing. Forthesereasons, theminimum number efcharacters-per-word (4) amongthefourcomputer typeswaschosen asaprogram design standard. Computer typeswitha wordcapacity ofgreater thanfourcharacters willhavetheunused lowordercharacter positions filled withBCDblanks. 1.3.3 l_ordPacking Standard F_RTP_AN compilers donotprovide thecapability forstoring orretrieving datathat occupies lessthanafullcomputer word. Through theMachine WordFunctions (MAPFNS, 3.4.1) routine somelimited wordpacking (nottobeconfused withmatrix packing) isperformed within theExecutive System andafewutility subroutines. Packing provides anefficient useofmemory spaceattheexpense oftheadditic.nal operating timeneeded tocombine orseparate theelements ofthepacked words. TheMachine WordFunction _RFisgenerally usedforcombining elements, whileANDFwithasuitable maskisusedforseparating them. 1.3.3.1 Examples ofMachine WordFunctions (MAPFNS) Usage Assume threelO-bit itemsofdataoccupy theloworderI0bitsofthreeseparate 30-bit computer words (A,B,andC).Topackthesethreeitems intoasingle 30-bit word(X),perform thefollowing stepsusingtheindividual functions available within F_PFNS: a)Leftshift(LSHIFT) wordA,twenty bits b)Leftshift(LSHIFT) wordB,tenbits c)Logically add(_RF)words AandB;store intoX 1.3-2"},"title":"Programmer's Manual P3"},"/docs/programmers/programmers_manual_004/":{"data":{"":"WORDSIZEANDCOMPUTER HARDWARE CONSIDERATIONS d)Logically add(_RF) words XandC;store intoX. Assume two8-bit items ofdataarepacked intotheleftandright halves ofa16-bit word (X). Tounpack these twoitems intotheloworder 8bitsoftwoseparate 16-bit words (AandB),per- formthefollowing steps using theindividual functions available within MAPFNS: a)Create )(ASK containing 8loworder bitsequal tolandthe8highorder bits equal to0 b)Right shift (RSHIFT) word X,eight bits; store intoA c)Logically multiply (ANDF) word XbyMASK; store intoB. Inthepreceding example, thewordXremains unchanged since thefunctions return the requested modified result inacomputer register. 1.3-3\nSYSTEM BLOCKDATASUBPROGRAM (SEMDBD) 1.4SYSTEM BLOCKDATASUBPROGRAM (SEMDBD) NASTRAN contains amaster block dataprogram (SEMDBD) which isresponsible fordefining and initializing (root segment) common blocks. Thecommon blocks referenced inSEMDBD areeither Executive common blocks (XFIAT, XXFIAT, XFIST, etc.) which require initial values, orgeneral information common blocks (SYSTEM, NAMES, TYPE, etc.) which arereferenced bymanymodules. The source listing forSEMDBD identifies thecommon blocks, anditdocuments thedatawhich are initialized, viacomments. Inaadition, theExecutive common blocks aredocumented insection 2.4 andthenon-Executive common blocks insection 2.5. Certain parameters inthese common blocks contain machine dependent values suchasword size, number ofBCDcharacters perword, etc. These values aresetbysubroutine BTSTRP (section 3.3.2) byidentifying themachine onwhich theNASTRAN program iscurrently operating andsetting thevalues accordingly. 1.4-I\nTHEOPENCORECONCEPT 1.5THEOPENCORECONCEPT 1.5.1Introduction Thedesign philosophy oftheNASTRAN system dictated acompletely openended design whenever possible. NASTRAN wastohave theflexibility tooperate onasecond generation machine with a 32Kcore (theIBM7094/7040 DC$)aswellasthelargest oftheIBMS/360 series ofcomputers, and takecomplete advantage oftheadditional corestorage without major program changes. Theuseof afixed dimension forlarge arrays wasoutlawed since thisautomatically restricted thesize of aproblem that could besolved. Instead, modules were tobeprogrammed toallocate space as required andtousespill logic totransfer datatoscratch files ifcomplete coreallocation was in,possible. Inthismanner, aproblem might cause spill logic tobeusedonacomputer with limited core storage, butnotonacomputer withalarger corestorage capacity. 1.5.2 Definition ofOpenCore Thedefinition ofopen coreis:acontiguous block ofworking storage defined byalabeled common block whose length isavariable determined bytheNASTRAN Executive function C_RSZ. The implementation ofthisdefinition bythemodule writer consists oftheorigining ofalabeled common block attheendofhisoverlay segment. Thislabeled common block contains adimensioned variable oflength I.C_RSZ returns thenumber ofwords ofcoreavailable between hisopencore origin andtheendofcore. Themodule writer cannowwrite hisprogram asifhehaddimensioned hisarray bythatnun_ber. Inactuality, heisextending beyond theareareserved forthearray intoanarea reserved forthejobbutnotcurrently usedbythesegment. Whenimplementing this concept, caremust betaken toassure thatthesystem does notusethisarea. 1.5.3 Example ofanApplication ofOpenCore Figure ldemonstrates theuseofopencorebytwosubroutines, AandB.Bysomemeans, which aremachine dependent andarediscussed insection 5,anendpoint isestablished foropen core. Thelength ofopencoreisthenthedifference between thisendpoint andthelabeled common block. Intheexample shown, subroutine Awillhavemoreopencoreavailable toitthan Bdoes. l.5-I\nNASTRAN PROGRAMMING FUNDAMENTALS I0SUBROUTINE A C@MM_N//XX COMMON/AX/Z(1) INTEGER C_RSZ NZ=C_RSZ(Z(I),XX) D_I01:I,NZ Z(I):I RETURN ENDSUBROUTINE B CBMM_N//XX C_MMON /BX/Z(1) INTEGER C_RSZ NZ:CORSZ(Z(1),XX) D@I0I=I,NZ lOz(1):I RETURN END OpencoreforSUB.A L Blank common establishes theendof opencoreforsome machines (seesection 5). Figure I.SUB.A /AX/ //ixSUB.B /BX/ 1_End ofopen core available forthis job. Aexample oftheuseofopencore.OpencoreforSUB.B 1.5-2\nNASTRANINPUT/OUTPUT 1.6 NASTRAN INPUT/OUTPUT 1.6.1 Introduction Theparticular (IBM7094, IBMS/360, Univac ll08, CDC6600) operating system input andout- putfiles provide therequired dataconnection between NASTRAN, theinput data decks andthe printed output. Utility subroutines XRCARD (section 3.4.19) andRCARD (section 3.4.20) convert special NASTRAN input cardformats tostandard F_RTRAN datawords easily handled byallNASTRAN input processors. Printed output isgenerated through F_RTRAN formatted write statements. All internal datablock input/output ishandled byGIN_, thesystem ofNASTRAN general purpose input/ output routines. GIN_provides therequired manipulation totailor thevariable length logical data records needed bymost NASTRAN modules tofixed length records available onalldirect access massstorage hardware. 1.6.2 UseoftheOperatin 9System Input File Thesystem input fileisreadonlybythefollowing routines within theNASTRAN Preface: I.SEMINT (seesection 3.3.3) reads thefirst cardandprocesses itusing utility XRCARD ifitistheNASTRAN card (seesection 6.3.1). 2.TheExecutive Control Deckcontaining free-field cards isreadandprocessed byXCSA (section 4.2)using theXRCARD utility. 3.TheCaseControl Deckcontaining free-field cards isreadandprocessed byIFPI (section 4.3)using theXRCARD utility. 4.TheBulkDataDeck containing fixed-field cards isreadbyXS_RT (section 4.4). This data issubsequently processed byIFP(section 4.5)using theRCARD utility. These cardconversion utilities (XRCARD andRCARD) provide respectively allthefree-field andfixed-field datacardprocessing required byNASTRAN. 1.6.2.1 UseoftheSubroutine XRCARD (SeeSection 3.4.19) XRCARD interprets NASTRAN free-field datacards andprocesses thefields intoasequential buffer thatcanbeeasily handled bysubsequent modules. Free-field data consist ofseries of dataitems separated bysuitable delimiters andpunched innon-specific cardcolumns. Data items mayinclude alphanumeric, integer, andvarious types ofrealvariables. Field delimiters 1.6-I (12-I-69)\nNASTRAN PROGRAMMING FUNDAMENTALS mayinclude thecomma, slash, parenthesis, andblanks. Fordetails regarding dataanddelimiter usageandtheformat ofthesequential output buffer, seetheXRCARD subroutine description in section 3.4.19. 1.6.2.2 UseoftheSubroutine RCARD(SeeSection 3.4.20) RCARDinterprets NASTRAN fixed-field datacardsandprocesses thefields intoasequential buffer thatcanbeeasily handled bysubsequent modules. Fixed-field dataconsist ofdataitems punched within specific cardfields. Eacheighty-column cardisdivi_ed intoaneight-column IDfield (forthecardmnemonic) followed byeither eighteight-column datafields orfour sixteen-column datafields. Aspecial character (asterisk orplus)within theIDfielddetermines whenthecardistobeinterpreted ascontaining sixteen-column fields. Thelasteightcolumns ofthecardareforcontinuation mnemonics usedbyXSORTandarenotprocessed byRCARD. The dataitemwithin theIDfieldmustbealphanumeric. Thedataitemswithin allotherfields may include alphanumeric, integer, andvarious typesofrealvariables. ForVetails regarding data andtheformat ofthesequential output buffer, seetheRCARDsubroutine description in section 3.4.20. 1.6.3 UseoftheOperatin_ Syster_ Output File Although NASTRAN printed output isformed andplaced ontothesystem output filethrough useofstandard FORTRAN formatted writestatements, twobasic NASTRAN design concepts prohibit everyoperating module fromgenerating printed output. Firstly, sincetheFORTRAN I/0package for output generation occupies asizable blockofcomputer memory, thispackage isgenerally positioned byloader directives within specific output oriented segments, rather thanwithin therootsegment oftheoverlay, toreduce thetotalmemory requirement. Secondly, because manyfunctional modules generate thesameorsimilar diagnostic andinformation messages, aNASTRAN message writer (MSGWRT) wasdeveloped tocentralize message textandthusprevent duplications within manyseparate modules. Forthereasons previously discussed, NASTRAN output generation isrestricted toaspecific classofmodules whichcanreside within anoutput oriented segment below thelinkrootsegment. Thesesegments willcontain theoutput producing modules suchastheOutput FilePrc_cessor (OFP- section 4.70), theMessage Writer (MSGWRI -section 3.4.26), andthevarious tableandmatrix printers (TABPT -section 3.4.29, MATPRT -section 4.71, etc.)alongwiththeoutput titling (PAGE-section 3.4.24) andnecessary FORTRAN I/0packages. 1.6-2\nNASTRAN INPUT/OUTPUT 1.6.4 GIN_ GIN@ isacollection ofsubroutines which provide forallinput andoutput operations within NASTRAN except reading datafromtheresident system input fileandwriting dataontheresident system output andpunch files. These latter operations areaccomplished through F_RTRAN formatted read/write statements. NASTRAN programs perform input/output operations bymaking thefollowing calls toGIN_entry points: I.@PEN (seesection 3.4.2) OPENinitiates activity forafile (unless thedatablock assigned tothefileispurged, in which caseanalternate return isgiven). Aworking storage area (GIN@ buffer), foruseby GIN@, isassigned (allocated) bythecalling program thusproviding optimum allocation of storage bythecalling program. Thisworking storage areaisreserved forusebyGIN_ until activity onthefileisterminated byacalltoCLOSE (seeparagraph 4below). Oneachof theNASTRAN computers, theworking storage areaallocated bythecalling program isseparate fromtheactual physical I/_buffer. 2.WRITE (seesection 3.4.3) WRITE writes aspecified (bythecalling program) number ofwords onafile. Theblock of words tobewritten maycomprise anentire logical record orportion ofalogical record. 3.READ (seesection 3.4.5) READreturns tothecalling program aspecified (bythecalling program) number ofwords from thelogical record atwhich thefileiscurrently positioned. READmaybeusedtotrans- mitanentire logical record orportion ofalogical record. 4.CLOSE (seesection 3.4.4) CLOSE terminates activity forafile. Theworking storage areaassigned at_PEN isreleased. Thefile isrepositioned totheloadpoint ifrequested. 5. REWIND (seesection 3.4.8) REWIND repositions therequested filetctheloadpoint. Thefilemustbe\"open\", i.e.a REWIND operation isrequested subsequent toacallto@PENandprior toacalltoCLOSE. 6. FWDREC (seesection 3.4.6) FWDREC repositions therequested fileonelogical record forward. 1.6-3\nNASTRAN PROGRAMMING FUNDAMENTALS 7.BCKREC (seesection 3.4.7) BCKREC repositions therequested fileonelogical record backwards. 8.SKPFIL (seesection 3.4.10) SKPFIL repositions therequested fileforward orbackward Nlogical fileswhereNisspecified bythecalling program. 9.E_F(seesection 3.4.9) E_Fwrites alogical end-of-file ontherequested file. ThebasicunitofI/0inNASTRAN isalogical record. Thelength ofalogical record is completely variable andmayrangefromonewordtoanarbitrarily largenumber ofwords. For NASTRAN matrix datablocks, theconvention wasadopted thateachcolumn ofthematrix would com- priseonelogical record. ForNASTRAN datablocks containing tables, norigidconvention exists. Typically eachlogical record contains onetableofaspecific type. Tilelogical record concept provides greatest easeinprcgramming. However, since these records mustbestored onaphysical device suchasadrum,diskortape,thecharacteristics ofthe device mustbetakenintoconsideration. ThebulkofNASTRAN dataisstored ondrumsordisks. Forboththesedevices thecommon unitoforganization isatrack, whichstores afixednumber ofwords. Thus,thereisaconflict between thevariable length GIN_records andthefixed length tracks. Thisconflict isresolved byblocking. G!N@actsastheinterface between tiledevice and theNASTRAI_ program. Usingthistechnique, theprogram itself neednotbeconcerned withdevice considerations (which wouldcreate machine dependent code). GIN_hasbeenparameterized sothat different devices maybeeasily accommodated. Basically, blocking provides forthereading andwriting offixed-length blocks. Thelength ofablockisafunction ofthedevice. Itmaybeonetrack, one-half trackorotherintegral division ofatrack(Lutnevermorethanonetrack). Because oftherelatively largetimeto access agivenposition onatrack (duetotherotational speed ofthedevice and/or mechanical movement oftheheadtothetrack), ablocksizeequal toonefulltrackisthemostdesirable. However, limitations intheamount ofstorage available toholdtheblocks incoreisasecond consideration. 1.6-4\nNASTRAN INPUT/OUTPUT Sincelogical recordlengths arevariable butthelengthofrecords physically reador written isfixed, logicmustbeprovided toaccommodate thissituation. Thislogicisprovided intheGIN_routine, whichallows forthefollowing cases: I.Multiple logical records perblock 2.Multiple blocks perlogical record Themethod bywhichphysical inputandoutput ofblocks isaccomplished byGIN_ismachine dependent. OntheIBM7094,I_EXisused.OntheIBMS/360, F_RTRAN binary read/write statements areused.OntheUnivac 1108,NTRANisused.OntheCDC6600,SC_PEmacros areused.These implementation differences aretransparent totheNASTRAN applications programmer (functional module writer). Thesystems programmer whoisinterested inimplementation details onthevarious machines isreferred tosection 5. 1.6.4.1 GIN_FileNames Thenamesoffilesinputasarguments totheGIN_routines listedabovemaybealphabetic (BCD,oftheform4HXXXX )orinteger. AGIN_filenameisBCDifthefilecontains permanent Executive tables ordatablocks. A listofthesefilesforaparticular NASTRAN runresides inthepermanent portion oftheFIST Executive table. Thefollowing listpresents allcurrent Executive fileswiththeirBCDfile names: File BCDFileName Data PoolFile Pe_L NewProblem Tape NPTP OldProblem Tape _PTP BCDPlotTape PLTI Binary PlotTape PLT2 User’s Master File UMF NewUser’s Master File NUMF User Input File INPT. 1.6-5\nNASTRANPROGRAMMING FUNDAMENTALS Functional modules should notaccess thesE: permanent Executive files. Functional modules access thefiles onwhich their input, output andscratch datablocks reside byinternal integer GIN_ filenames. Prior tocalling afunctional module, thelinkdriver routine, XSEMi, calls subroutine GNFIST (GNFIST iscalled exclusively byXSEMi) togenerate theFISTExecutive table. Foreachinput, output orscratch datablock required foroperation ofamodule (this information being contained inthe_SCAR entry), GNFIS1 searches theFIATtofindthedatablock. Ifthedata block isintheFIATandafilehasbeenassigned toit,aninternal GIN_ filenumber denoting the datablock andapointer (index) totheentry intheFIAT isplaced intheFIST. Thefollowing convention isusedforinternal GIN_filenumbers: input datablocks –lO0+position inthe _SCAR entry; output datablocks –200+position inthe_SCAR entry; scratch datablocks –301 through 300+nwhere n=number ofscratch datablocks asdefined intheMPL. (Theposition in the_SCAR entry istheposition intheDMAP instruction). Ifthedatablock isintheFIATandis purged, noentry isplaced intheFIST. Forexample, consider thefollowing DMAPcalling sequence forfunctional module XYZ: XYZ A,B,C/D,E,F,G/V,N,PARMI/V,N,PARM2 $ Thedatablocks inputtothemodule areA,BandC;thedatablocks output fromtilemodule are D,E,FandG;themodule’s parameters arePARMIandPARM2. Notethatinternal scratch filesare notmentioned intheDMAPcalling sequence. Thenumber ofscratch filesforamodule isdefined intheModule Property List(MPL)Executive table(seesection 2.4)andiscommunicated tothe Executive SystemviatheOSCAR. Details onthesyntactical rulesofDMAParegiveninsection 5of theUser’sManual. InordertoreadtheinputdatablockB,theGINOfilenumber internal toXYZis102;in ordertowritedatablockD,theGINOfilenumber is201.Thethirdof,say,fivescratch data blocks isreferenced byXYZthrough theGINOfilenumber 303. l.6-6\nNASTRANMATRIXROUTINES 1.7NASTRANt.TRIXROUTINES 1.7.1 Introduction Therequirement thatNASTRAN handle large structural analysis problems implies thatNASTRAN should beabletomanipulate andstore large matrices efficiently andeffectively. Ingeneral, thematrices generated inthedisplacement approach tendtobesparse (i.e., thenumber ofnon- zero terms inanycolumn ofamatrix issmall compared totheorder ofthematrix). TheNASTRAN matrix routines, ADD,MPYAD, DECAMP, etc., which aredescribed insection 3.5,areoptimized as much aspossible totakeadvantage ofmatrix sparsity andthuseliminate many unnecessary operation onzeroelements. Inorder toaidinthese operations andtomakeeffective useofauxiliary storage, apacking scheme wasdevised tostore onlythenon-zero terms inacolumn. 1.7.2 Matrix Packin andUnpacking Theneedforamatrix packing routine canbeseenbycomputing theauxiliary storage required toholdalO,O00 order n_trixwhich isI%dense (i.e., theaverage nunlber ofnon-zero terms in acolumn isI00). With nopacking technique, lO8words ofstorage arerequired toholdthe matrix. Using theNASTRAN packing routines, amaximum of2xlO6words ofstorage arerequired iftheterms arescattered, andlO6words arerequired iftheterms occur inaband. Thesubroutines BLDPK, INTPK, PACK, andUNPACK, along with their additional entry points, provide thematrix packing/unpacking capability ofNASTRAi_. Theusershould refer tothedes- criptions ofthese subroutines insections 3.5.1 through 3.5.4 foradetailed description ofthe packing logic. 14atrices arestored bycolumns, andsubroutines PACK/UIIPACK provide theability topack/ unpack acomplete column. Thecapability isalsoprovided topack/unpack acolumn fromthefirst non-zero element tothelast. Anadded feature ofthepacking routines isthatsubroutines BLDPK andINTPK provide the capability ofpacking/unpacking oneelement atatime. ByuseofINTPK, amatrix canberead element-by-element, suchthatanentire matrix canbeprocessed without anyappreciable core storage requirements. Likewise, byusing BLDPK, amatrix canbebuilt oneelement atatime. This isanextremely important feature toroutines thatmust process matrices whenstorage islimited. 1.7-I (12-I-69)\nNASTRAN PROGRAMMING FUNDAMENTALS 1.7.3 TheNested Vector SetConcept UsedtoRepresent Components ofDisplacement Inconstructing thematrices usedintheDisplacement Approach, eachrowand/or column ofa matrix isassociated closely withagridpoint, ascalar pointoranextrapoint. Everygridpoint has6degrees offreedom associated withit,andhence6rowsand/or columns ofthematrix. Scalar andextrapoints onlyhaveonedegree offreedom. Ateachpoint(grid, scalar, extra) thesedegrees offreedom canbefurther classified intosubsets, depending ontheconstraints orhandling required forparticular degrees offreedom. (Forexample inatwo-dimensional problem all\"z\" degrees offreedom areconstrained andhencebelongs tothes(single-point constraint) set). Eachdegree offreedom canbeconsidered asa\"point\", andtheentire model isthecollection of theseone-dimensional points. Nearly allofthematrix operations indisplacement analysis areconcerned withpartitioning, merging, andtransforming matrix arrays fromonesubset ofdisplacement components toanother. Allthecomponents ofdisplacement ofagiventype(suchasallpoints constrained bysingle-point constraints) formavector setthatisdistinguished byasubscript fromothersets. Agiven component ofdisplacement canbelor_g toseveral vector sets. Themutually exclusive vector sets, thesumofwhose members arethesetofallphysical components ofdisplacements, areasfollows: u_umpoints eliminated bymultipoint constraints, uspoints eliminated bysingle-point constraints, uopoints omitted bystructural matrix partitior;ing, urpoints towhich determinate reactions areapplied instatic analysis, theremaining structural points usedinstatic analysis (points leftover), Ueextradegrees offreedom intFoduced indynamic analysis todescribe control systems etc. Thevector setsobtained bycombining twoormoreoftheabovesetsare(+signindicates theunionoftwosets): ua=ur+uL,thesetusedinrealeigenvalue analysis, ud=ua+Ue,thesetusedindynamic analysis bythedirect method, uf=ua+uo,unconstrained (free) structural points, un=uf+us,allstructural points notconstrained bymultipoint constraints, Ug=un+um,allstructural (rgz_i_d)points including scalar points, 1.7-2\nNASTRAN MATRIX ROUTINES Up=Ug+ue,allphysical points. Indynamic analysis, additional vector setsareobtained byamodal transformation derived fromrealeigenvalue analysis ofthesetua.These are: _origid body (zero frequency) modal coordinates, _ffinite frequency modal coordinates, _i:_o+_f’thesetofallmodal coordinates. Onevector setisdefined thatcombines physical andmodal coordinates. Thatsetis Uh=i+Ue’thesetusedindynamic analysis bythemodal method. Thenesting ofvector setsisdepicted bythefollowing diagram: u s uo ur u ud ue _o Ci _fua uhuf Un IUgUp Thedatablock USET (USETD indynamics) iscentral tothissetclassification. Eachword of USET corresponds toadegree offreedom intheproblem. Eachsetisassigned abitintheword. Ifadegree offreedom belongs toagiven set,thecorresponding bitison.Every degree offree- domcanthenbeclassified byanalysis ofUSET. Thecommon block /BITP_S/relates thesetstobit numbers. 1.7-3\nNASTRAN PROGRAMMING FUNDAMENTALS Twotypesofoperations occurrepeatedly. Examples are: andThefirstisthepartitioning orsortoperation. Unl(1) . JKnn]=_jI_iKssj (2) Thesecond istherecombining (ormerge) operation: Theseoperations canbecompletely described bya\"partitioning\" vector whose length corresponds totilelength ofthemajorset(theUgsetinEQuation I)andwhoseelements arezerosorones depending onwhether adegree offreedom belongs totheupper(theunsetinEquation I)subset orthelower(theumsetinEquation I)subset. Suchapartitioning vector canbeconstructed bysubroutine CALCV, whichisdescribed insection 3.5.5. Thisoperation isdescribed throughout thedocumentation bythenotation USET(UG,UN,UM) where UG(Ug)isthemajorset,UN(un)is thezeroset,andUM(um)istheoneset.Thepartitioning vector generated bysubroutine CALCV isinputtothematrix routine PARTN (section 3.5.6) toperform operations similar tothosein Equations 1and2andisinputtothematrix routine MERGE (section 3.5.6) toperform operations similar tothatinEquation 3. 1.7.4 Processing ofMatrices Matrices inNASTRAN canbedivided intwogeneral types: coreheldmatrices suchasthe ;x6’sgenerated bytheelement routines anddatablock heldmatrices suchasthoseoutput by functional modules. Therearemanyroutines toassist theprogrammer intheprocessing ofboth typesofmatrices. Incore matrices canbeprocessed byGMMATD (Section 3.4.32), GMMATS (Section 3.4.33), INVERD (Section 3.4.34) andINVERS (Section 3.4.35). Datablockheldmatrices canbe processed atseveral levels. Themostgeneral isthrough thematrix packing andunpacking 1.7-4(8/I/72)\nNASTRANMATRIXROUTINES routines(BLDPK,PACK,INTPKandUNPACK).Thenextlevelofgenerality isprovidedbythematrix subroutines suchasADD,PARTN,MERGE,TRNSP,MPYAD,SDC_MP,DECAMP,CDC_MP,FBS,GFBS,andINVTR. Thefunctionsprovidedbytheseroutinescanalsobeactivatedbyasimplesubroutine callthrough suchroutinesasSSG2A,SDRIB,SSG2C,SSG2B,SSG3A,S_LVER,FACTORandTRANPI.Thisthirdformis byfarthemostconvenient anderrorfreemethodforthenoviceNASTRANapplications programmer. 1.7-5(8/I/72)\nGENERATION OFMATRICES 1.8GENERATION OFMATRICES TheStructural Matrix Assembler (SMA) modules generate thestiffness, structural damping, massanddamping matrices forthestructural model. SMAIgenerates thestiffness matrix exclusive Kxandthestructural damping matrix, [K_g]; SMA2generates themass ofgeneral elements, [gg], matrix, [Mgg], andthedamping matrix, [Bgg]; andSMA3generates thefinal stiffness matrix, [Kgg], bygenerating amatrix foreachgeneral element inthemodel, andsuccessively adding these matrices toFKx1Other matrix generation modules are: l)DS_IGI which generates thegg-. Kddifferential stiffness matrix, [gg],foruseintheStatic Analysis with Differential Stiffness Rigid Format andintheBuckling Analysis Rigid Format; 2)PLAI, which generates thestiffness KLmatrix forlinear elements, [gg],foruseinthePiecewise Linear Analysis Rigid Format; 3) rKn_lPLA4, which generates thestiffness matrix fornonlinear elements, LggJ,foruseinthePiecewise Linear Analysis Rigid Format; 4)MTRXIN, which provides atwo-fold capability: a)toprovide fordirect input matrices suchascontrol systems inthedynamics Rigid Formats, andb)toprovide theDMAPuseracapability ofconverting matrices inputonDM!GbulkdatacardstoNASTR_N matrix format; and5)theIFPmodulewhichprovides theuserthecapability ofconverting matrices inputonDMIbulkdatacardstoNASTRAN matrix format. Detailed information oneach ofthesemodules canbefoundinsection 4,Module Functional Descriptions. Thecentral role thattheECPTdatablockplaysintheformation ofthestructural matrices generated inmodules SIIAI,SMA2,DSHGI,PLA!andPLA4isexplained inthefollowing subsections. 1.8.1 TheECPTDataBlock NASTRAN embodies alumped element approach, i.e., thedistributed physical properties ofa structure arerepresented byamodel consisting ofafinite number ofidealized substructures orelements thatareinterconnected atafinite number ofpoints. Anelement will affect terms inthematrices only inrowsandcolumns related toitsinterconnected points. Hence each column ofthese matrices maybeformed using onlyelements connected tothegridorscalar point associated with thatcolumn. TheTable Assembler (TAI) module constructs theElement Connection andProperties Table (ECPT) data block foruseinthegeneration ofthese structural matrices. Eachrecord ofthe ECPT corresponds toagridpoint orascalar point ofthemodel, and,conversely, every grid point orscalar point ofthemodel corresponds toarecord oftheECPT. Thepoint towhich a 1.8-I\nNASTRAN PROGRAMMING FUNDAMENTALS record oftheECPTcorresponds iscalled thepivotpointoftherecord. Eachrecord contains the connection andproperties dataforallelements connected tothepivotpoint. Hencedataforan element willappear ntimes, wherenisthenumber ofpoints defining theelement. 1.8.2 Structural Elements Thebasisforthestructural matrices inNASTRAN arethefinit_ structural andscalar elements. Eachelement generates matrix termsconnecting andconnected tothegridandscalar points given onitsinputconnection card(e.g., CR_D). Astructural element generates 6by6matrix parti- tionsrelated tothesixdegrees offreedom ofeachconnecting gridpoint. Ascalar element generates onetermforeachconnection. Thestiffness matrix, [K],forastructural element consists ofa6by6partition foreach combination oftheconnected gridpoints. Forexample, aBARorR_Delement isconnected totwo gridpoints, “a\"and\"b”.Thestiffness matrix partitions are:[Kaa], [Kab], [Kba]and[Kbb]. Atriangular element (e.g., TRMEM) isconnected tothreepoints. Itwillgenerate ninepartitions: [Kaa], [Kab], [Kac], [Kba], [Kbb], [Kbc], [Kca], [Kcb]and[Kcc]. Although theactual equations fortheelement stiffness, massanddamping matrices are different foreachelement, thesolutions follow adefinite pattern. Theelement connection, orientation andproperty dataaregivenintheECPTdatablock. Thecoordinate system datafor orienting theglobal coordinates ateachgridpointaregivenintheCSTMdatablock. The material properties aregivenintheMPTandDITdatablocks. Autility routine, PRETRD, is available tofetchcoordinate system data,andautility routine, PREMAT, isavailable tofetch material properties. I.Anelement coordinate system iscalculated usingthelocations ofthegridpoints. Usingthesedataamatrix, [E],isformed, which transforms displacements fromelement coordinates tobasiccoordinates. 2.Thestiffness matrix maybeformed inelement coordinates usingmanymethods. Forthe simple elements (e.g., R_D)thetermsaredirect functions ofthegeometry, properties and material coefficients oftheelement. Forsomeelements thematrix isfirstformulated in termsofgeneralized coordinates, {q},usually thecoefficients ofapowerseries. In general coordinates, thematrix is[Kq]. Transformation matrices, [Hi],aregenerated to 1.8-2\nGENERATION OFMATRICES transform thedisplacements atthegridpoints inelement coordinates {u},tothegeneral coordinates {q}. 3.Theglobal coordinate system orientation matrix, [T],foreachgridpoint iscalculated. 4.Thestiffness matrix partition forthecolumns related topoint jandtherowsrelated to point iis[Kij]. Ingeneral itisformed bytheequation [Kij] =[Ti]T[E][Hi]T[Kq][Hj][E]T[Tj]. (I) Inorder togenerate aparticular partition, [Kij], itisoften necessary togenerate [K]. Onlythose partitions [Kij], where iisthepivot point andj=1,2…..n(nbeing thenumber of gridpoints associated with theelement), areuseful forthecurrent ECPT record being processed. Theunused partitions arerecalculated andusedwhenj_iappears asapivot point inasub- sequent ECPTrecord. Analternate procedure formatrix generation, which isnotused, would be tocalculate alloftheelementmatrices onceandstore themonanauxiliary fileforfuture use ,.,h….. _ _-alternate procedure isi_ssefficient forlarge problems, where efficiency really counts, because therecalculation timeislessthanthetimerequired torecover element matrices fromtheauxiliary file. 1.8-3\nTERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES 1.9TERMINATION PHILOSOPHY ANDDIAGNOSTIC MESSAGES Certainrestrictions areplaceduponthefunctional modulewriterwithregardtorun termination anderrordiagnostics. Thisisnecessaryinordertocompletecertainfunctions uponterminating andtomaintainuniformity withregardtodiagnostic messages. Afunctional modulewriterisrequiredtoutilizeamessagewriter(MSGWRT,section3.4.26) toprintallofhismessages. Inthismannersimilarmessage formats donothavetobedunlicated ineachmodule. Also, inorder toavoid placing theI/0conversion routines andthelengthy format statements intherootsegment, themessage writer isrestricted toitsownoverlay segment, Communication between themodule andthemessage writer isviaaqueued message concept. Subroutine MESAGE (section 3.4.25) iscalled tostore themessage parameters. Inthecaseofa fatal message, adumpistaken ifaDIAGlcardispresent intheExecutive Control Deck, and PEXIT (section 3.4.22) iscalled. Fornon-fatal messages, themessage isqueued andcontrol given back totheuser. Themessage queue isprinted after eachmodule isexecuted. ,,,u_uer foranyroutine toterminate thecurrent execution, acalltoPEXIT mustbemade. PEXIT handles allthefunctionsmecessary towrapuptherun: flushing output buffers, printing queued messages, andpunching thelastcardofthecheckpoint dictionary. 1.9-I\nP_STARTS INNASTRAN I.I0RESTARTS INNASTRAN NASTRAN isdesigned torunlargeproblems withlongrunning times. Evenwiththebestof computer systems, ahardware, operator, orsystem failure isnotuncommon forlongrunning jobs. Atthesametime,thelargevolumes ofdataandthecomplexity ofthestructures thatcanbe modeled andanalyzed usingNASTRAN makeithighly likely thatuserinputdataerrors willoccur. Manyoftheseerrors areofasubtle type,meaning thattheycannot beimmediately detected in theNASTRAN Preface bythemodules whichprocess thedatadecks. Todealwiththeseproblems, and tosavemachine timeonrunswhichabortbecause ofdataorsystem errors, NASTRAN hasasophisti- catedcheckpoint andrestart capability (seesection 3oftheUser’s Manual foradiscussion of restarts fromtheuserpointofview). Theoverall design philosophy forrestart istwofold. A restart selectively executes onlythemodules necessary toaccomplish auser-input datachange. Theuserisabletochange anypartofhisproblem including structural modelchanges, additional cases, ormoreoutput requests. Atthesametimerestarts areautomatic asfarasuserinterference isconcerned. Theuserneedonlycheckpoint (seesection 1.2.3.5) hisoriginal runandsubmit changes totheoriginal runonsubsequent runs. Theuserdoesnothavetoanalyze theeffect of hischanges. Inaddition theselective nature ofrestart allows theprogram toproceed with implicit errors (errors present inthedatabutnotyetidentified) untilnofurther validprogress canbemade. Theworkaccomplished tothispointisnotlost,butrather onlythetableormatrix datablockinerrormustbecorrected toallowtheprogram toproceed. Mucherrorchecking canbe deferred until theactual module usingthedataisincontrol. Theremainder ofthissection will explain theprogram mechanics bywhichrestart isaccomplished. InNASTRAN therearefourgeneral typesofrestarts. Unmodified Restart (UMR), Psuedo Modified Restart (PMR), Modified Restart (MR),andRigidFormat Switch (RFS). NotethatintheUser’s Manual UMR’s andPMR’saredescribed together asUnmodifed Restarts. These classifications arefordes- criptive andinternal purposes. Theuserneednotknowanything aboutwhich typeiswhich. The basic characteristics ofeachtypewillbedescribed below. AnUnmodified Restart results whenthe usersimply resubmits aproblem withnodatachanges. Itisusedtocontinue asolution fromthe pointofinterruption. Presumably theproblem aborted previously duetotimeexpiring, machine error, system error, etc.Therestart dictionary (created while checkpointing) isprocessed, and thesolution isstarted againatthelastre-entry point (after thelastsuccessful checkpoint). APsuedo Modified Restart occurs whentheuserrequests additional output fromtheprogram which simply requires there-execution ofanoutput module suchastheStructure Plotter, theGridPoint 1.10-I"},"title":"Programmer's Manual P4"},"/docs/programmers/programmers_manual_005/":{"data":{"":"NASTRANPROGRAMMING FUNDAMENTALS WeightGenerator, ortheStressDataRecoverymoduleetc.Thenumericalsolutionisnotaffected bythesemodules;onlyoutputisgenerated. NotethataPMRisthecommoncasesinceprinterout- put,plotteroutput,etc.isusuallyrequested. AtrueUMRisrare.OnaPMR,outputmodulesare re-executed todisplayrequestedoutput,andthentheproblemiscontinuedatthere-entrypoint. AtrueModifiedRestartoccurswhensomenumerically significant datachange.Themoduleswhich processthistypeofdatamustbere-executed. Thesemodulesarere-executed toregenerate their outputdatablocksbasedonthenewdata,andtheproblemiscontinuedatthere-entrypoint.A RigidFormatSwitchisaspecialformofi4odifiedRestartinwhichaproblemchangesfromone solutiontypetoanother.Oneexamplewouldbe:auserhassolvedforthestaticsolutionon RigidFormat1andnowwantstofindthenormalmodesbyusingRigidFormat3.Thismayormay notrequiredatachanges.Thekeydifference hereisthatthere-entrypointcannotbeusedto determinetheproperplacetorestart.ThetechniquebywhichaRFSisaccomplished istore- executethefinalmodulesonthenewRigidFormatandlettheFileNameTablechainthesolution backtotheproperrestartpoint. Tounderstand, ingeneral,howtheabovetypesofrestartareimplemented, itisnecessaryto considertheModuleExecutionDecisionTable(MEDT),whichisassociated witheachRigidFormat. TheModuleExecutionDecisionTableisatablewhichhasoneentryforeveryDMAPinstruction inthe RigidFormat.Eachentryis5wordslong;eachwordcontains31bits.Forconvenience, thesebits arenumberedsequentially fromlefttorightwiththenumbers1through155.Iftheentryinthe MEDTforamodulehas,say,bit55turnedon,thismodulewillbeexecutedwheneveracardordata blockchangeassociated withbit55occursonarestart.TheCardNameTableassociates bitsof theMEDTwithselectedbulkdatacardnames,CaseControlselections andparameternames.TheFile NameTableassociates bitsoftheMEDTwithselecteddatablocknames.Forconsistency, bits1 through62foreachentryintheMEDTarereservedfortheCardNameTable,andbits94through 155arereservedfortheFileNameTable.Thefollowingexampleillustrates theuseofthesetables indetermining theeffectsofchangingabulkdatacardonaModifiedRestart.SupposetheF_RCE bulkdatacardistobechangedwhenexecutingRigidFormatI.Thetableinsection3.2.3.1of theUser’sManualassociates bit60withtheFORCEcard.Thedecisiontableforbits1through62 isshowninsection3.2.3.3oftheUser’sManual.DMAPmodulesBEGIN,FILE,FILE,GP3,SAVE,PARAM, PURGE,CHKPNT,SSGI,CHKPNT,EQUIV,etc.,willbeexecutedsincebit60isonforeach. Thereisonemoretable,theRigidFormatSwitchTable,whichisconstantforallRigid Formats,andhenceresidesinPrefacemoduleXCSA.TheRigidFormatSwitchTableassociates with 1.10-2\nRESTARTSINNASTRAN eachRigidFormatabitforeachentryintheMEDT:bit63isassociated withRigidFormatI,bit 64isassociated withRigidFormat2,etc.IftherestartinvolvesaRigidFormatchange,thebit inthedecisiontablewhichissetisthebitcorresponding totheRigidFormatoftheprevious execution. EachpartoftheNASTRANPrefacecontributes toprocessing theinformation forarestart. XCSAextractsandstorestheCardNameTable,theFileNameTable,theModuleExecutionDecision Table,theDMAPsequenceandtheRigidFormatSwitchbitifany.ThesearewrittenintheXCSA ExecutiveControlTable(seesection2.4.2.5)ontheNewProblemTapeforlaterusebymoduleXGPI. IFPIcomparesthecurrentCASECCdatablockwiththeonesubmittedonthepreviousrun(acopyof CASECCisstoredontheOldProblemTapeforthispurpose). Threetypesofchangesarenotedby IFPI: I.ChangesindatasetselectionsuchasLoadset,SPCset,etc.; 2.Theoccurenceofoutputrequestsforprinter,plotter,etc.; 3.Changesintheloopingstructureoftheproblem. Theresultsofthisanalysisarestoredincommonblock/IFPXO/. Eachbitin/IFPXO/ isassoci- atedwithakeyname. Thesenameswillappear insomeRigid Format’s CardNameTable. /IFPXO/ contains onebitforeveryunique entryintheCardNameTable. /IFPXI/ contains thesenames inordergivenby/IFPXO/. Thus,bit135in/IFPXO/ corresponds tothekeyword,L_AD$. Ifbit 135ison(non-zero), thestatus ofL_AD$haschanged onthisrestart. XS_RTanalyzes thebulk datacardchanges inasimilar manner, setting theproper bitsin/IFPXO/. IFPapplies certain logical rulestocombinations ofthebits. XGPIthenanalyzes thisinformation inthefollowing manner. Foreachbitin/IFPXO/ theBCDequivalent isextracted from/IFPXI/. Thismnemonic issearched foramatch intheCard Name Table. Ifamatch occurs, theappropriate bitinamaster module execution mask isturned on. After allchanges have been processed, themaster mask is logically multiplied (logical and) with each module execution entry. Anon-zero results indicates that this mcdule istobeexecuteQ. Allbits in/IFPXO/areclassified aseither significant tothesolution orasonly reflecting output requests. Ifonly output request bits areon,aPMRisindicated. Iftherestart isa Modified Restart, onefurther table look-up maybenecessary: theresulting DMAP sequence deter- mined from theexecution flags ofthemodules maynothave therequired input data blocks. (All 1.I0-3 (12-I-69)\nNASTRAN PROGRAMMING FUNDAMENTALS input datablocks mustfirst appear asoutput data blocks). Ifthisshould bethecase (most often caused byswitching rigid formats), theFileNameTable isconsulted todetermine which bitsareon andhence which modules should bere-executed togenerate themissing datablocks. Theresulting DMAPsequence causes theselective execution ofonlythose modules necessary toreflect thedata changes andcomplete therequested solution. 1.10-4\nIIITRODUCTION 2.1INTRODUCTION Thissectioncontainsdescriptions ofa)thoseNASTRANdatablockswhichappearinoneor moreRigidFormats(section2.3),b)Executivetablesmaintained bytheNASTRANExecutiveSystem (section2.4),andc)Miscellaneous tablesusedbymorethanonemodule(section2.5). DatablocksthatappearinRigid Formats arestructural problem oriented andreside on physical files. Afileis\"allocated\" toadatablock, andadatablock is\"assigned\" toafile. TheExecutive Segment FileAllocator (XSFA) Module isthe\"administrative manager\" offiles for NASTRAN. Executive Tables have trueexecutive functions inthesense thattheyarenotoriented toa particular problem solution oreven tostructural analysis ingeneral. They maybecore resident ormayreside onphysical files. Miscellaneous tables ar¢common blocks which areusedbytheExecutive System and/or a particular class ofmodules (e.g., /GPTAI/i:used^-“k.. …………. jujmodules GPi,GP2,GP3andTAI). Common blocks thatareusedforintra-module communications aredocumented insection 4,Module Functional Descriptions. Section 2.2.1 contains anindex fordatablock descriptions sorted ondatablock names, and section 2.2.2 contains anindex fordatablock descriptions sorted onthenames ofmodules from which theyar_output. Alphabetical indexes aregiven forExecutive table descriptions and miscellaneous table descriptions atthebeginning ofsections 2.4and2.5respectively. 2.l-I\nDATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES 2.2DATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES Datablockdescriptions havebeenorganized sothatalldatablocks output fromthesame module aregrouped together. Thenameofeachdatablockisgiven, andthedatablockis classified asamatrix oratable. Adatablockisclassified asamatrix onlyifitisin NASTRAN matrix form,thatis,generated byoneoftheNASTRAN matrix packing routines, PACKor BLDPK, thelatter having secondar)entry points BLDPKI, ZBLPKI andBLDPKN. Allotherdatablocks areclassified ast_bles. Following adatablock’s nameandclassification isabriefdescription ofitscontents, followed byitsformat ifitisatable. Sinceallmatrices areinstandard NASTRAN packed format arepeated description oftheformat isunnecessary forn_atrices. Eachdatablockhasa header record (consisting ingeneral oftwoBCDwords) which isthealphanumeric nameofthedata blockasitappears inaRigidFormat, andthisheader record isdesignated “Record 0\"intable formats. Forthosefewdatablockwhich contain morethanthesetwoBCDwords intheirheader record, e.g.,SLT,GPTT,DLT,thecontents aredescribed explicitly. Theconventions usedfor describing thetypesofwords inrecords oftables are:Rimplies real;Iimplies integer; B implies BCD,fourcharacters percomputer wordleftadjusted withtheremaining characters, if any,filled withBCDblanks; andLimplies a\"logical” –notintheF_RTRAN sense–wordwhich isamaskofbits,rightadjusted. There isassociated witheachdatablockasixwordcontrol blockcalled atrailer. Trailer information is\"written” bythemodule whichoutputs thecorresponding datablockandcanbe “read” byanymodule accessing thecorresponding datablockasinput. Ifamodule “writes” a zerotrailer foradatablock, thisimplies nodatawaswritten inthedatablock. Ifamodule “writes” anon-zero trailer, thisimplies datawaswritten inthedatablock. Non-zero trailer information isoftenusedbymodules toallocate corestorage before reading thecorresponding datablock. Trailer information foreachdatablockisstored inandretrieved fromtheFIAT Executive table (seesection 2.4.1.2) bytheutility routines WRTTRL (write trailer) andRDTRL (readtrailer), whicharedescribed insection 3.4.16. Whileresiding intheFIAT,atrailer isstored in6half-words; eachhalf-word consists of16binary digits. Trailer information isstandardized formatrix datablocks, notstandardized fortabledata blocks. Theformat ofamatrix trailer isasfollows: 2.2-I\nDATABLOCKANDTABLEDESCRIPTIONS Word3=form=1 2 3 4 5 6 7 8 Word4=type=1Word1=number ofcolumns =N Word2=number ofrows =M squarematrix rectangular matrix N:I diagonal matrix M=t.umberofrows lowertriangular matrix uppertriangular matrix symmetric matrix IN=I rowvector _M=numberofrows identitymatrix elements ofthematrix arerealsingle precision 2elements ofthematrixarerealdouble precision 3elements ofthematrix arecomplex sinc_le precision 4elements ofthematrix arecomplex double precision. Word5=maximum number ofnon-zero words(rather thannon- zeromatrixelements) inanyonecolumn (e.g.,ifareal doubleprecision matrix isdiagonal andnon-zero word5=2) Word6=notdefined Word5isdependent uponthestructural modelandtheuser’s gridpointsequencing rather thanon anyintrinsic property ofthematrix andistherefore notdescribed inthisreport. Thelowercaseletters, e.g.,g,n,m,s,o,L,etc.,usedassubscripts designate thesub- setsofdisplacement towhichtherootsymbol (e.g., [K],forastiffness matrix) applies. The reader isreferred tosection 3oftheTheoretical Manual andtosection 1.7oftheProgrammer’s Manual forfurther details. 2.2-2\n2.2.1DATA BLOCK DESCRIPTIONS -GENERAL COMMENTS ANDINDEXES Index forData Block Descriptions Sorted onData Block Names Section Number Data Block Name Output From Module 2.3.40.3 ABFL MTRXIN 2.3.47.2 AUT(B RANDOM 2.3.2.11 AXIC IFP 2.3.18.9 BAA SMPI 2.3.41.2 BDD GKAD 2.3.54 BDP_JBL BMG 2.3.17.8 BFF SCEI 2.3.10. 2 BGG SFIA2 2.3.3.5 BGPDT GPI 2.3.49.2 BHH GKAM 2.3.16.4 BNr_ MCE2 2.3.27.7 BQG SDRI 2.3.41.8 B2DD GKAD 2.3.40.3 B2PP MTRXIN 2.3.1.1 CASECC IFPI 2.3.39. l CASEXX CASE 2.3.42.2 CLAMA CEAD 2.3.50. l CPHID DDR 2.3.27.11 CPHIP SDRI 2.3.3.4 CSTM GPl 2.3.27.9 DFLTAPG SDRI 2.3.27. l0 DELTAQG SDRI 2.3.27.8 DELTAUGV SDRI 2.3.2.7 DIT IFP 2.3.29.7 DLT DPD 2.3.21. l DM RBf4G3 2.3.2.9 DYNAMICS IFP 2.3.8.3 ECPT TAI 2.3.34.4 ECPTNL PLAI 2.3.38.2 ECPTNLI PLA4 2.2-3 (8/I/72)Page Number 2.3-142 2.3-I 80 2.3-29 2.3-72 2.3-I 43 2.3-I 94 2.3-68 2.3-58 2.3-34 2.3-183 2.3-66 2.3-85 2.3-145 2.3-142 2.3-I 2.3-141 2.3-146 2.3-184 2.3-86 2.3-33 2.3-86 2.3-86 2.3-85 2.3-2l 2.3-I19 2.3-77 2.3-25 2.3-53 2.3-135 2.3-140\nDATABLOCKANDTABLEDESCRIPTIONS SEction Number DataBlockName Output FromModule 2.3.4.1 ECT GP2 2.3.2.8 EDT IFP 2,3.29.4 EED DPD 2,3.5.4 ELSETS PLTSET 2.3.2.5 EPT IFP 2.3.29.5 EQDYN DPD 2.3.3.2 EQEXlN GPI 2.3,8.1 EST TAI 2.3.34.2 ESTL PLAI 2.3.34.3 ESTNL PLAI 2.3.37.2 ESTNLI PLA3 2.3.2.12 F_RCE IFP 2.3.29.9 FRL DPD 2.3.8.2 GEl TAI 2.3.2.1 GEOMI IFP 2.3.2.2 GERM2 IFP 2.3.2.3 GE@i43 IFP 2,3.2.4 GEOM4 IFP 2.3.15.1 GM MCEI 2.3.41.4 GMD GKAD 2.3.18.1 GO SMPI 2.3.41.5 GOD GKAD 2.3.8.4 GPCT TAI 2.3.3.3 GPDT GPI 2.3.3.1 GPL GPI 2.3.29.1 GPLD DPD 2.3.5.3 GPSETS PLTSET 2.3.9.3 GPST S_LAI 2.3.7,2 GPTT GP3 2.3.18.2 KAA SMPI 2.3.40.1 KBFL MTRXlN 2.3,33.2 KBFS DSMG2_umber 2.3-36 2.3-24 2.3-116 2.3-38 2.3-16 2,3-I18 2.3-31 2.3-45 2.3-132 2.3-133 2.3-139 2.3-30 2.3-122 2.3-53 2.3-7 2.3-8 2.3-13 2.3-15 2.3-64 2.3-144 2.3-70 2.3-144 2.3-54 2.3-32 2.3-31 2,3-114 2.3-37 2.3-56 2.3-44 2,3-70 2.3-142 2.3-130 2.2-4 (11/I/70)\nDATABLOCK DESCRIPTIONS -GENERAL CO_,IENTS ANDINDEXES Section Number DataBlock Name Output FromModule 2.3.33.1 KBLL DSMG2 2.3.33.3 KBSS DSMG2 2.3.32.1 KDAA SMP2 2.3.35.3 KDAAM ADD 2.3.41.I KDD GKAD 2.3.17.5 KDFF SCEI 2.3.17.6 KDFS SCEI 2.3.31.I KDGG DSMGI 2.3.16.3 KDNN MCE2 2.3.17.7 KDSS SCEI 2.3.17.1 KFF SCEI 2.3.17.2 KFS SCEI 2.3.12.1 KGG SMA3 2.3.12.2 KGGL SMA3 2.3.38.1 KGGNL PLA4 2.3.35.1 KGGSUM ADD 2.3.9.1 KGGX SMAI 2.3.34.1 KGGXL PLAI 2.3.49.3 KHH GKAM 2.3.19.1 KLL RBMGI 2.3.19.2 KLR RBMGI 2.3.16.1 KNN MCE2 2.3.18.3 K_B SMPI 2.3.19.3 KRR RBMGI 2.3.17.3 KSS SCEI 2.3.41.6 K2DD GKAD 2.3.40.I K2PP MTRXIN 2.3.18.10 K4AA SMPI 2.3.17.9 K4FF SCEI 2.3.9.2 K4GG SMAI 2.3.16.5 K4NN MCE2 2.3.30.I LAMA READPaBeNumber 2.3-130 2.3-130 2.3-!29 2.3-137 2.3-143 2.3-68 2.3-68 2.3-128 2.3-65 2.3-68 2.3-67 2.3-67 2.3-60 2.3-60 2.3-140 2.3-137 2.3-56 2.3-132 2.3-183 2.3-73 2.3-73 2.3-65 2.3-70 2.3-73 2.3-67 2.3-144 2.3-142 2.3-72 2.3-69 2.3-56 2.3-66 2.3-125 2.2-5 (IIII170)\nDATABLOCKANDTABLEDESCRIPTIONS Section Number DataBlock Name Output FromModule Pa_eNumber 2.3.20.I LBLL RBMG2 2.3-75 2.3.20.I LLL RBMG2 2.3-75 2.3.18.4 L_O SMPI 2.3-70 2.3.18.6 MAA SMPI 2.3-71 2.3.2.10 MATP_L IFP 2.3-28 2.3.41.3 MDD GKAD 2.3-143 2.3.5.5 MESSAGE PLOT 2.3-39 2.3.17.4 MFF SCEI 2.3-67 2.3.10.I MGG SMA2 2.3-58 2.3.49.1 MHH GKAM 2.3-183 2.3.30.3 MI READ 2.3-126 2.3.19.4 MLL RBMGI 2.3-73 2.3.19.5 MLR RBMGI 2.3-74 2.3.16.2 MNN MCE2 2.3-65 2.3.18.8 MOAB SMPI 2.3-72 2.3.18.7 M_B SMPI 2.3-71 2.3.2.6 MPT IFP 2.3-20 2.3.22.1 MR RBMG4 2.3-78 2.3.19.6 MRR RBMGI 2.3-74 2.3.41.7 M2DD GKAD 2.3-144 2.3.40.2 M2PP MTRXIN 2.3-142 2.3.29.10 NLFT DPD 2.3-122 2.3.28.21 OBEFI SDR2 2.3-108 2.3.28.17 _BESI SDR2 2.3-104 2.3.28.10 _BQGI SDR2 2.3-97 2.3.42.3 _CEIGS CEAD 2.3-147 2.3.28.14 _CPHIP SDR2 2.3-I01 2.3.28.20 _EFBI SDR2 2.3-I07 2.3.28.22 _EFCl SDR2 2.3-109 2.3.45.13 _EFC2 SDR3 2.3-172 2.3.28.19 _EFI SDR2 2.3-I06 2.3.45.5 OEF2 SDR3 2.3-164 2.2-6 (II/I/70)\nSection Nu_erDATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES DataBlock NamesOutput FromModule 2.3.30.4 OEIGS READ 2.3.28.16 OESBI SDR2 2.3.28.18 OESCI SDR2 2.3.45.12 OESC2 SDR3 2.3.28.15 _ESI SDR2 2.3.45.4 OES2 SDR3 2.3.14.1 _GPST GPSP 2.3.11.I _GPWG GPWG 2.3.37.1 ONLES PLA3 2.3.28.5 _PGI SDR2 2.3.43.1 OPHID VDR 2.3.28.13 _PHIG SDR2 2.3.43.5 OPHIH VDR 2.3.43.4 OPNLI VDR 2.3.45.6 OPNL2 SDR3 2.3.28.7 OPPCI SDR2 2.3.45.9 OPPC2 SDR3 2.3.28.6 OPPI SDR2 2.3.45.1 OPP2 SDR3 2.3.28.9 OQBGI SDR2 2.3.28.8 OQGI SDR2 2.3.28.12 OQPCI SDR2 2.3.45.10 OQPC2 SDR3 2.3.28.11 OQPI SDR2 2.3.45.2 OQP2 SDR3 2.3.28.2 OUBGVl SDRI 2.3.43.2 OUDVCI VDR 2.3.45.14 OUDVC2 SDR3 2.3.43.3 OUDVI VDR 2.3.45.7 OUDV2 SDR3 2.3.28.1 OUGVI SDR2 2.3.43.6 OUHVCI VDRPa_eNumber 2.3-126 2.3-103 2.3-105 2.3-171 2.3-102 2.3-163 2.3-63 2.3-59 2.3-139 2.3-92 2.3-149 2.3-I00 2.3-153 2.3-154 2.3-94 2.3-168 2.3-93 2.3-160 2.3-96 2.3-95 2.3-99 2.3-169 2.3-98 2.3-161 2.3-89 2.3-150 2.3-173 2.3-151 2.3-166 2.3-88 2.3-154 2.2-7 (lllll70)\nDATABLOCKANDTABLEDESCRIPTIONS Section Number Data Block Name Output From Module 2.3.45.15 OUHVC2 SDR3 2.3.43.7 _UHVl VDR 2.3.45.8 _UHV2 SDR3 2.3.28.4 OUPVCI SDR2 2.3.45.11 _UPVC2 SDR3 2.3.28.3 OUPVl SDR2 2.3.45.3 UPV2 SDR3 2.3.53.2 PAF DDR2 2.3.53.5 PAT DDR2 2.3.33.4 PBL DSMG2 2.3.33.5 PBS DSMG2 2.3.1.2 PCD IFPI 2.3.44.3 PDF FRRD 2.3.48.2 PDT TFD 2.3.23.1 ,2.3.35.2 PG SSGI ,AOD 2.3.27.2 PGG SDPI 2.3.23.2 PGI SSGI 2.3.36.2 PGVl PLA2 2.3.30.2 PHIA READ 2.3.42.1 PHID CEAD 2.3.49.4 PHIDH GKAM 2.3.27.4 PHIG SDRI 2.3.42.4 PHIH CEAD 2.3.24.4 PL SSG2 2.3.26.1 PLI SSG4 2.3.6.1 PLOTXl PL_T 2.3.6.2 PL@TX2 PL_T 2.3.5.2 PLTPAR PLTSET 2.3.5.1 PLTSETX PLTSET 2.3.48.5 PNLD TRD 2.3.48.7 PNLH TND 2.3.24.2 PO SSG2 2.2-8Page Number 2.3-174 2.3-156 2.3-167 2.3-91 2.3-170 2.3-90 2.3-162 2.3-192 2.3-!93 2.3-131 2.3-131 2.3-3 2.3-158 2.3-181 2.3-79, 2.3-137 2.3-84 2.3-79 2.3-138 2.3-125 2.3-146 2.3-183 2.3-84 2.3-148 2.3-80 2.3-83 2.3-40 2.3-40 2.3-37 2.3-37 2.3-182 2.3-182 2.3-80\nDATABLOCKDESCRIPTIONS -GENERAL COMMENTS ANDINDEXES Section Number DataBlockNameOutput fromModule 2.3.26.2 POI SSG4 2.3.44.4 PPF FRRD 2.3.28.25 PPHIG SDR2 2.3.48.4 PPT TRD 2.3.24.3 PS SSG2 2.3.47.1 PSDF RANDOM 2.3.29.8 PSDL DPD 2.3.44.2 PSF FRRD 2.3.48.3 PST TRD 2.3.28.24 PUBGVI SDR2 2.3.28.26 PUGV SDR2 2.3.28.23 PUGVI SDR2 2.3.27.6 QBG SDRI 2.3.27.3 QG SDRI 2.3.36.3 QGI PLA2 2.3.27.15 QP SDRI 2.3.27.12 QPC SDRI 2.3.24.1 QR SSG2 2.3.13.1 RG GP4 2.3.25.6 RUBLV SSG3 2.3.25.3 RULV SSG3 2.3.25.4 RUOV SSG3 2.3.3.6 SIL GPI 2.3.29.2 SILD DPD 2.3.55.1 SIP PLTTRAN 2.3.7.1 SLT GP3 2.3.29.6 TFPOOL DPD 2.3.29.11 TRL DPD 2.3.27.5 UBGV SDRI 2.3.20.4 UBLL RBMG2 2.3.25.5 UBLV SSG3Page Number 2.3-83 2.3-158 2.3-112 2.3-182 2.3-80 2.3-I 79 2.3-121 2.3-158 2.3-181 2.3-III 2.3-I13 2.3-II0 2.3-85 2.3-84 2.3-I 38 2.3-87 2.3-86 2.3-80 2.3-61 2.3-82 2.3-81 2.3-81 2.3-35 2.3-I14 2.3-194 2.3-41 2.3-I19 2.3-124 2.3-85 2.3-76 2.3-82 2.2-9 (8/I/72)\nSectionNumberDATABLOCKANDTABLEDESCRIPTIONS DataBlockName Output fromModule 2.3.33.7 UB_V DSMG2 2.3.44.1 UDVF FRRD 2.3.50.2 UDVIF DDRI 2.3.53.3 UDV2F DDR2 2.3.48.1 UDVT TRD 2.3.50.3 UDVIT DDRI 2.3.53,6 UDV2T DDR2 2.3.53.1 UEVF DDR2 2.3.53.4 UEVT DDR2 2.3.27.1 UGV SDRI 2.3,36,1 UGVI PLA2 2.3.44.5 UHVF FRRD 2.3.48.6 UHVT TRD 2,3.20.2 ULL RBMG2 2.3.25.1 ULV SSG3 2.3.27.14 UPV SDRI 2.3.27.13 UPVC SDRI 2.3.18.5 U@O SMPI 2.3.25.2 UO_V SSG3 2,3.13.3 USET GP4 2.3.29.3 USETD DPD 2.3.1.3 XYCDB IFPI 2.3.46.2 XYPLTFA XYTRAN 2.3.46.3 XYPLTF XYTRAN 2.3.46.4 XYPLTR XYTRAN 2.3.46,1 XYPLTT XYTRAN 2.3.46.5 XYPLTTA XYTRAN 2.3.33.6 YBS DSMG2 2.3.13.2 YS GP4PageNumber 2.3-131 2.3-158 2.3-184 2.3-192 2.3-181 2.3-184 2,3-193 2.3-192 2.3-192 2.3-84 2.3-138 2.3-I59 2.3-182 2.3-75 2.3-81 2.3-87 23-87 23-71 23-81 23-61 23-115 23-4 23-178 2.3-178 2.3-178 2.3-175 2.3-178 2.3-131 2.3-61 2.2-10 (8/I/72)\nDATABLOCKDESCRIPTIONS -GENERALCOMMENTSANDINDEXES 2.2.2Index forData Block Descriptions Sorted Alphabetically byModule Section Number Module Page Number Section Number Module 2.3.35 ADD 2.3-137 2.3.6 PLOT 2.3.54 BMG 2.3-194 2.3.5 PLTSET 2.3.39 CASE 2.3-141 2.3.55 PLTTRAN 2.3.42 CEAD 2.3-146 2.3.47 RANDOM 2.3.50 DDRI 2.3-184 2.3.19 RBMGI 2.3.53 DDR2 2.3-192 2.3.20 RBMG2 2.3.29 DPD 2.3-I14 2.3.21 RBMG3 2.3.31 DSMGI 2.3-128 2.3.22 RBMG4 2.3.33 DSMG2 2.3-130 2.3.30 READ 2.3.44 FRRD 2.3-158 2.3.17 SCEI 2.3.41 GKAD 2.3-143 2.3.27 SDRI 2.3.49 GKAM 2.3-183 2.3.28 SDR2 2.3.3 GPI 2.3-31 2.3.45 SDR3 2.3.4 GP2 2.3-36 2.3.9 SMAI 2.3.7 GP3 2.3-41 2.3.10 SMA2 2.3.13 GP4 2.3-61 2.3.12 SMA3 2.3.14 GPSP 2.3-63 2.3.18 SMPI 2.3.11 GPWG 2.3-59 2.3.32 SMP2 2.3.2 IFP 2.3-5 2.3.23 SSGI 2.3.1 IFPI 2.3-I 2.3.24 SSG2 2.3.15 MCEI 2.3-64 2.3.25 SSG3 2.3.16 MCE2 2.3-65 2.3.26 SSG4 2.3.40 MTRXIN 2.3-142 2.2.8 TAI 2.3.34 PLAI 2.3-132 2.3.48 TRD 2.3.36 PLA2 2.3-138 2.3.43 VDR 2.3.37 PLA3 2.3-139 2.3.46 XYTRAN 2.3.38 PLA4 2.3-140Page Number 2.3-40 2.3-37 2.3-194 2.3-179 2.3-73 2.3-75 2.3-77 2.3-78 2.3-125 2.3-67 2.3-84 2.3-88 2.3-160 2.3-56 2.3-58 2.3-60 2.3-70 2.3-129 2.3-79 2.3-80 2.3-81 2.3-83 2.3-45 2.3-181 2.3-149 2.3-175 2.2-11 (811172)\nDATABLOCKDESCRIPTIONS DATABL_CKDESCRIPTIONS DataBlocks Output Fr_!1odule IFPI 2.3.1.1 CASECC (TABLE) Description Case Control Data Table Table Format Record Wor___d_d Type l l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO i !! ! 12 I 13 I 14 I 15 I 16 I 17 I }18 I 19 I 20 I }21 I 22 I 23 I }24 I 25 I 26 I }27 I 28 I 29 I 13O I 31 I 32 I33 I 34 I 35 I }36 I 37 I 38 I 39 B 0 BItern lleader record Subcase number Multipoint constraint set Sinele-point constraint set External static loadset Realeigenvalue extraction set Element deformation set Them};al loadset Thermal material set Transient initial conditions Non-linear loadoutput set UULLUL l_Uld selec_lon ]=print, 4=punch Fo_at ofoutput -1 real 2=real/imao 3=mag/phase Ifword 12\u003c0, SBRT2 isrequested Dynan:ic load set Frenuency response set Transfer function set S:_metrv flaq Sameas10-12forloadoutput Sameas10-12fordisplacement out,nut Same as10-12 forstress output Same aslO-12 forforce output San;e as10-12 foracceleration output Same as10-12 forvelocity output Same as10-12 forforces ofconstraint output Time step setselection fortransient problem 32words ofTITLE 2.3-I III I\nDATABLOCKANDTABLEDESCRIPTIONS i_oteRecord 103 135 136B B I 137 I 138 I 139 B 140 B 141 B } 142 B 143 B } 144 B 145 I 146 147 148 I 149 I 150 I 151 I 1152 I 153 I 154 I 1155 I 156 I 157 I }158 I 159 I 160 I 161 I 162 163 I 164 I 165 166 I 167 RItern 32wordsofSUBTITLE 32v_ords ofLA3EL Structure plotter flag Axisymmetric set-C_SINE =2 SINE :1 FLUID =2 Number ofharmonics tooutput Differential stiffness coefficient set NameofK2PPmatrix t;ameofM2PPmatrix Nameofb2PPmatrix OUTPUT frenuency setselection Notdefined Notdefined Comnlex eigenvalue extraction set Structural damping tableset Inertia relief set(Force method only) Sameas10-12forsolution setdisplacements Sameas10-12forsolution setvelocities Sameas10-12forsolution setaccelerations on-linear loadsetintransient problems Delete set(Force method only) Notdefined Random analysis set Piecewise linear coefficient set Notdefined Length ofsymmetry sequence (LSE) RCoefficients forsymmetry seouence ] 166+LSEH R 167+LSE’.l I SetID 168+LSE_1 I Length oftheset(LSET). 169+LSE,.I 169+LSE_i+LSET I ISetmembers Theaboverecord isrepeated foreachsubcase andsymmetry combination. 2.3-2 (IIII/70)\nDATABLOCKDESCRIPTIONS Table Trailer Word1=0 Word2:7 Word3:0 _Cord4:7 Werd5=0 Word6:7 2.3.1.2 PCDB (TABLE) Description Plot Control Data Table Table Femat Record 9 l _+I TableTra_ler °,lords ithrough 3arezero _!_rd4=7777 lerd5and’:erd6arezeroforthestructure plotter. Item i;eader record Thedata here istheXRCARD translation oftheStructure Plotter Packet cards intileCase Control Deck (See Subroutine Description forXRCARD). There isonerecord foreach physical card. End-of-file 2.3-3\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.1.3 XYCDB(TABLE) Description XYOutput Control DataBlock. Record onecontains thesubroutine IFPIXY interpretations oftheXYplotoutDut request casecontrol datacards. Record twocontains anNby6matrix stored byrowsandsorted suchthat thecolumns areinsortlefttoright. Nisthetotalnumber ofcombinations specified bythe XY-plot-request casecontrol datacards. TableFormat Record Word Type Item 0 Header record 1 l-Last Mixed IFPIXY interpretations oftheXY-output-requests, translated forrapidprocessing bytheXYTRAN module. 1 I Subcase number (0implies all) 2 I Vector request type #repeats 3 I Pointorelement ID \u003eforall 4 I Comnonent 5 I XYoutput type rows 6 -I Destination code Notes l° Vector request type1=Displacement 2=Velocity 3=Acceleration 4=Single-point forces ofconstraint 5=Load 6=Stress 7=Force 8=Adisplacement 9=Avelocity I0=Aacceleration II=Nonlinear Force 2. XYoutput typeI1=Response2=PSDF 3=AUT 3. Destination code =1=Print 2=Plot 3=Print, plot 4=Punch 5=Print, punch 6=Plot,punch 7=Print, plot,nunch 4.Either ofrecords 1and2maybenull,however theywillalways exist. TableTrailer WordsI-5=nonzero Word6=one 2.3-4\nDATA BLOCK DESCRIPTIONS 2.3.2 Data Blocks Output From Module IFP. Module IFP(Input File Processor, part oftheNASTRAN Preface) processes theBulk Data Deck sorted bymodule XS_RT andwrites thefollowing data blocks that appear inoneormore Rigid Formats: GE_MI, GEOM2, GEOM3, GEOM4, EPT, MPT, DIT, EDT, DYNAMICS, MATPOOL. Each ofthese data blocks hastheusual 2-word BCDheader record. Each data block contains bulk data card images ormodified card images ofasubset ofbulk data card types. Each logical record ofeach oftheabove data blocks contains allthedata ofa particular card type. Ifacard type isnotpresent intheBulk Data Deck, there isnorecord. Foreach card type present, 3words arewritten asheader information fortherecord. Then for every logical bulk data card ofthat type intheBulk Data Deck, acard image oramodified card image iswritten sequentially intherecord. Following thelast data record, afinal three word record iswritten; thedata values areall65535. Thefirst twowords oftheheader information ofeach record areused byentry point LOCATE ofsubroutine PREL_C. Thethird word oftheheader information isthecard number used bytheIFP programmer toreference tables internal totheIFPmodule. LBCATE isused byroutines that wish toread data blocks output bytheIFP. Thesecond word oftheheader information portion ofeach record corresponds toabitposition ina96-bit, 6-word data block trailer, each word containing 16bits. Ifaroutine requests LBCATE tolocate (position) thefile to)aparticular card type, LOCATE will determine ifthecard type ispresent byinterro- gating thecorresponding bitinthetrailer, thebitnumber having been supplied through thecalling sequent toLOCATE. Ifthebitiszero, thecard type isnotpresent andLBCATE executes anon- standard RETURN. Ifthebitisone, thecard type ispresent andL_CATE uses thefirst word ofthe header information, also supplied through thecalling sequence, tofind theproper logical record (card type). Since theBulk Data Deck issorted alphabetically before IFPprocesses it,andsince IFP processes thedeck sequentially, theorder ofthecard types ineach data block isalphabetical. Itshould benoted that when twotrailer bitnumbers aregiven inthedescription foracard type, this implies that: (1)thecard isa\"multi-entry\" card type (more than onelogical card onone physical card, e.g., CELAS3, CELAS4, CROD, CTUBE); (2)these card types mayormaynotbesorted with respect totheprimary field, intheabove examples element identification; and(3)amodule 2.3-5 (8/I/72)"},"title":"Programmer's Manual P5"},"/docs/programmers/programmers_manual_006/":{"data":{"":"DATABLOCKANDTABLEDESCRIPTIONS accessing thesecardtypesmustknowwhether ornottheyareinsort. Iftheyareinsort,the second bitnumber issettoI;iftheyarenotinsort,thesecond bitnumber issettoO. Cardtypeformats correspond toatypical cardentryinthelogical record allocated toa cardtype. Anumber (literal) inacardtypeformat implied thattheIFPhasplaced thisnumber initsoutput buffer before writing theinformation onthefileandthatthisnumber isnotonthe bulkdatacarditself. Themnemonics usedinthecardtypeformats correspond tothemnemonics inthebulkdatacardsection oftheNASTRAN User’s Manual. Itisadvised thatanyone usingthe information onthefollowing pagessecure acopyofthissection oftheUser’s Manual forcross reference purposes. IFPalsogenerates theAXICandF_RCEdatablocks, theParameter ValueTable (PVT)andwrites Direct Matrix Input(DMI)andDirect TableInput(DTI)cardsontheDataPoolFile. TheAXlCdata block, whose presence implies aconical shell(aunique structural element) problem solution, a hydroelastic analysis problem, oranacoustic problem, isprocessed bythePreface modules IFP3, IFP4andIFP5. ThePVT,which isanExecutive Tableandisdocumented inSection 2.4,contains thenamesandvalues ofallparameters inputbymeansofthePARAMbulkdatacard. ThePVTis written ontheProblem Tape. EachDMIintheBulkDataDeckisoutput ontheDataPoolFilein NASTRAN packed matrix format andisindistinguishable fromanymatrix datablockpooled bythe XSFA,thatis,amatrix trailer iswritten onthelastlogical record ofthedatablock. IFPalso stores thenameofeachDMIontheDPL(seeSection 2.4). Similarly, eachDTIisoutput onthe DataPoolFile,atabletrailer iswritten, andthenameoftheDTIisstored intheQPL. Thepreface modules IFP3,IFP4,andIFP5alsowillgenerate someofthedataonthedata blocks output fromIFP.Thesemodules areusedtoprocess datacardswritten byIFPandreplace themwithequivalent datablocks. Forinstance, datacardCFLUID2 isinitially placed ondata blockAXlCbytheIFPmodule. TheIFP3module willgenerate CFLUID2 elements andaddthemto datablockGERM2. 2.3-6(8/I/72)\nDATABLOCKDESCRIPTIONS 2.3.2.1GEOMI(TABLE) CardTypesandHeader Information: Header Word1 Header Word2 CardType CardType Trailer BitPositionHeader Word3 Internal CardNumber blank 0 0 89 ADUMI 0 0 3 ADUM2 0 0 32 ADUM3 0 0 51 ADUM4 0 0 88 ADUM5 0 0 99 ADUM6 0 0 I00 ADUM7 0 0 I01 ADUM8 0 0 103 ADUM9 0 0 106 C_RDIC 1701 17 6 CORDIR 1801 18 5 C_RDIS 1901 19 7 C_RD2C 2001 20 9 C@RD2R 2101 21 8 CBRD2S 2201 22 I0 GRDSET 0 0 2 GRID 4501 45 1 _FQ_p nl r 4 CardTypeFormats: Blankcardsarenotwritten. ADUMi cardsarenotwritten. Rather, thecontents arecodedandstored inwords46-54 of/SYSTEM/ . CORDIC (6words) ClD 2 I G1 G2 G3 CORDIR (6words) ClD 1 1 G1 G2 G3 CORDIS (6words) CID 3 1 G1 G2 G3 CORD2C (13words) CID 2 2 RID A1 A2 A3 B1 B2 B3 C1 C2 C3 CORD2R (13words) ClD 1 2 RID A1 A2 A3 B1 B2 B3 C1 C2 C3 CORD2S (13words) CID 3 2 RID A1 A2 A3 B1 B2 B3 Cl C2 C3 2.3-7 (811172)\nDATABLOCK DESCRIPTIONS 2.3.2.1 GEOMI (TABLE) CardTypesandHeader Information: Header Word l Header Word2 CardType CardType Trailer BitPositionHeader Word3 Internal CardNu_er blank 0 0 89 ADUMI 0 0 3 ADUM2 0 0 32 ADUM3 0 0 51 ADUM4 0 0 88 ADUM5 0 0 99 ADUM6 0 0 lO0 ADUM7 0 0 lOl ADUM8 0 0 I03 ADUM9 0 0 I06 CORDIC 1701 17 6 CORDIR 1801 18 5 CORDIS 1901 19 7 C_RD2C 2001 20 9 C_RD2R 2101 21 8 C_RD2S 2201 22 lO GRDSET 0 0 2 GRID 4501 45 l SEQGP 5301 53 4 CardType Formats: Blank cards arenotwritten. ADUMi cards arenotwritten. Rather, thecontents arecoded andstored inwords 46-54 of/SYSTEM/. CORDIC (6words) CID 2 1 G1 G2 G3 CORDIR (6words) CID 1 1 G1 G2 G3 CORDIS (6words) CID 3 1 G1 G2 G3 CORD2C (13words) CID 2 2 RID Al A2 A3 Bl B2 B3 Cl C2 C3 CORD2R (13words) CID l 2 RID Al A2 A3 Bl B2 B3 Cl C2 C3 CORD2S (13words) CID 3 2 RID Al A2 A3 Bl B2 B3 Cl C2 C3 2.3-7 (811172)\nDATA BLOCK ANDTABLE DESCRIPTIONS Card Type Formats Cont’d.: TheGRDSET card isnotwritten. Rather, thecontents arestored locally foruse when processing theGRID cards. GRID (8words) ID CP Xl X2 X3 CD PS F_ IfaGRDSET card ispresent, andifanyoffields 3,7,or8ofanyGRID card areblank, IFPwill insert corresponding data fields from theGRDSET card. Only oneGRDSET card mayappear intheBulk Data Deck. SEQGP (2words) ID SEQID 2.3-7a (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.2.2 GERM2(TABLE) CardTypesandHeader Information: Header Word1 CardType CardTypeHeader Word2 Trailer BitPositionHeader Word3 Internal CardNumber Generated byIFP3,IFP4orIFP5. 2.3-8 (8/I/72)BAR_R 0 0 179 CAXlF2 2108 21 224 CAXlF3 2208 22 225 CAXIF4 2308 23 226 CBAR 2408 24 180 CDAMPI 201 2 69 CDAMP2 301 3 70 CDAMP3 401 4,92 71 CDAMP4 501 5,89 72 CDUMI 6108 61 107 CDUM2 6208 62 108 CDUM3 6308 63 109 CDUM4 6408 64 II0 CDUM5 6508 65 111 CDUM6 6608 66 112 CDUM7 6708 67 113 CDUM8 6808 68 114 CDUM9 6908 69 115 CELASI 601 6 73 CELAS2 701 7 74 CELAS3 801 8,91 75 CELAS4 901 9,88 76 CFLUID2 8515 85 O CFLUID3 8615 86 O* CFLUID4 8715 87 O* CHBDY 4208 42 232 CHEXAI 5708 57 219 CHEXA2 5808 58 220 CMASSI I001 I0 65 CMASS2 II01 II 66 CMASS3 1201 12,93 67 CMASS4 1301 13,90 68 CMFREE 2508 25 O* C@NMI 1401 14 63 C@NM2 1501 15 64 C@NR@D 1601 16 47 CQDMEM 2601 26 60 CQDPLT 2701 27 59 CQUADI 2801 28 57 CQUAD2 2901 29 58 CR_D 3001 30,96 48 CSHEAR 3101 31 61 CSL_T3 4408 44 227 CSL@T4 4508 45 228 CTETRA 5508 55 217 CT_RDRG 1908 19 104 CTRAPRG 1808 18 80 CTRBSC 3201 32 54 CTRIAI 3301 33 52 CTRIA2 3401 34 53 CTRIARG 1708 17 79 CTRMEM 3501 35 56 CTRPLT 3601 36 55 CTUBE 3701 37,95 49\nDATABLOCKDESCRIPTIONS CardTypesandHeaderInformation Cont’d.: Header Word1 CardType CardTypeHeader Word2 Trailer BitPositionHeader Word3 Internal CardNumber CTWIST 3801 38 62 CVISC 3901 39,94 50 CWEDGE 5608 56 218 GENEL 4301 43 28 PLOTEL 5201 52,87 II SPOINT 5551 49 I05 CardTypeFormats: TheBAR_Rcardisnotwritten. processing theCBARcards.Rather, thecontents arestored locally forusewhen CAXlF2 (6words) EID G1 G2 RHO B N CAXIF3 (7words) EID G1 G2 G3 RHO B N CAXlF4 (8words) EID G1 G2 G3 G4 RHB B N _D D_A,,(16words) EID PID GA GB Xl X2 X3 F PA PB ZIA Z2A Z3A ZIB Z2B Z3B IfaBARBR cardispresent intheBulkDataDeck,anyifanyofthefields 3,6,7,8,9of anyCBARcardareblank, IFPwillinsert thecorresponding datafields fromtheBARBRcard. Only oneBAROR cardmayappear intheBulkDataDeck. CDAMPI (6words) EID PID G1 G2 Cl C2 CDAMP2 (6words) EID B G1 G2 C1 C2 CDAMP3 (4words) EID PID S1 $2 CDAMP4 (4words) EID B S1 $2 CDUMi(variable number ofwords, depending onthecontents oftheADUMicard) CELASI (6words) EID PID G1 G2 C1 C2 CELAS2 (8words) EID K G1 G2 C1 C2 GE S CELAS3 (4words) EID PID S1 $2 2.3-9(8/I/72)\nCardTypeFormatsCont’d.: CELAS4(4words) CFLUID2(6words) CFLUID3(7words CFLUID4(8words CHBDY(8words) CHEXAI(I0words CHEXA2(I0words CMASSl(6words) CMASS2(6words) CMASS3(4words) CMASS4(4words) CMFREE(5words) C_NMI(24words) CONM2(13words) C_NROD(8words)DATABLOCKANDTABLEDESCRIPTIONS EID K S1S2 EID S1 $2 p B N EID S1 $2 $3 p BN EID S1 $2 $3 $4 pB N EID FLAG HAF G1 G2G3 G4 EID MID G1G2 G3 G4 G5 G6 G7G8 EID MID G1G2 G3 G4 G5 G6 G7G8 EID PID G1 G2 Cl C2 EID M G1G2 Cl C2 EID PID S1S2 EID M S1 $2 EID Sl $2 y N EID G ClD MII M21 M22M31 M32 M33 M41 M42 M43 M44 M51 M52M53 M54 M55 M61 M62 M63 M64 M65 M66 EID G ClD M X1 X2X3 III 121 122 131 132133 EID G1 G2MID A J C NSM 2.3-10(8/I/72)\nCard Type Formats Cont’d.: CQDMEM (7words) CQDPLT (7words) CQUADI (7words) CQUAD2 (7words)DATA BLOCK DESCRIPTIONS EID PID G2 G3 TH EID PID G2 G3 TH EID PID G2 G3 TH EID PID G2 G3 TH CR_D (4words) EID PID G2 CSHEAR (6words) EID PID G2 G3 CSL_T3 (8words) EID Gl G3 RH_ M N CSLOT4 (9words) CTETRA (6words) CT_RDRG (7words) CTRAPRG (7words)Gl G4 Gl G4 G1 G4 G1 G4 Gl Gl G4 G2 B EID G1 G2 G3 G4 RH_ B M N EID MID Gl G2 G3 G4 EID PID G2 Al 0 EID Gl G3 G4 MIDGl A2 G2 TH 2.3-II (811172)CTRBSC (6words) EID PID Gl G2 G3 TH CTRIAI (6words) EID PID Gl G2 G3 TH CTRIA2 (6words) EID PID Gl G2 G3 TH CIRIARG (6words) EID Gl G2 G3 TH MID CTRMEM (6words) EID PID Gl G2 G3 TH CTRPLT (6words) EID PID Gl G2 G3 TH CTUBE (4words) EID PID Gl G2\nDATABLOCKANDTABLEDESCRIPTIONS CardTypeFormats Cont’d.: CTWIST (6words) CVISC(4words) CWEDGE (8words) GENEL(openended) PL_TEL (3words) SP_INT (Iword)EID PID G1 G2 G3 G4 EID PID G1 G2 EID MID G1 G2 G3 G4 G5 G6 EID UII Cll UI2 C12 • uIM ClM ii M UDI CDI UD2 CD2 • UDN CDN ii N ZII Z21 Z22 Z31 Z32 Z33 ZMM , ii s12 SIN S21 i5 s2,… 66i s,2 … SMN EID Gl G2 ID 2.3-12 (8/I/72)\nDATABLOCKDESCRIPTIONS 2.3.2.3 GEOM3 (TABLE) CardTypes andHeader Information: Header Word 1 Header Word2 CardType CardType Trailer BitPosition F_RCE 4201 F_RCE] 4001 F_RCE2 4101 GRAV 4401 LOAD 4551 MOMENT 4801 M_MENTI 4601 MBMENT2 4701 PLOAD 5101 PLOADI* 6909 PLOAD2 6802 QHBDY 4309 RFORCE 5509 SLOAD 5401 TEMP 5701 TEMPD 5641 TEMPPI 8109 TEMPP2 8209 TEMPP3 8309 TEMPRB 840942 40 41 44 61 48 46 47 51 69 68 43 55 54 57 65 81 82 83 84Header Word3 Internal Card Nu_er 18 20 22 26 84 19 21 23 24 198 199 233 190 25 27 98 201 202 203 204 CardType Forn_ts: FORCE (7words) FORCE1 (5words) F_RCE2 (7words) GRAV (6words) LOAD (open ended) MBMENT (7words) MOMENTI (5words) M_MENT2 (7words)SID F N3 SID Gl SID Gl G4 SID Nl SID Ll ,,. -I SID M N3 SID Gl SID G1 G4G N1 G G2 G G2 CID N2 S $2 Sn -I G Nl G G2 G G2CID N2 F F G3 G N3 Sl L2 Ln CID N2 M M G3 2.3-13(811/72)\nDATABLOCKANDTABLEDESCRIPTIONS CardTypeFormats Cont’d.: PLEAD(6words) SID P G1 G2 G3 G4 PLBADI* Notavailable PLEAD2 (3words) SlD P QHBDY(8words) SID AF G3FLAG G1 G4 RFORCE (7words) SID G A N1 N3 SLBAD(3words) SID TEMP(3words’) SID TEMPD(2words) SlD T TEMPPI (6words) SID T’EID T1 TEMPP2 (8words) SID MX T1EID MY T2 TEMPP3 (24words) SID TO Z2 T3 Z5 T6 Z8 T9EID Z1 T2 Z4 T5 Z7 T8 ZIO TEMPRB (16words) SID TB T'2a TDa TCb TFbEID T’la T'2b TEa TDbEID QO G2 ClD N2 F T T T2 T MXY ZO T1 Z3 T4 Z6 T7 Z9 TIO TA T’Ib TCa TFa TEb 2.3-14 (811/72)\nDATABLOCKDESCRIPTIONS 2.3.2.4GEOM4(TABLE) CardTxpesandHeader Infomation: Header Word1 CardType CardTypeHeader Word2 Trailer BitPositionHeader Word3 Internal CardNumber ASET 5561 76 215 ASETI 5571 77 216 MPC 4901 49 17 MPCADD 4891 60 83 BMIT 5001 50 15 OMIT1 4951 63 92 SPC 5501 55 16 SPCI 5481 58 12 SPCADD 5491 59 13 SUPORT 5601 56 14 UISET II0 41 167 UISETI III0 II 176 U2SET 210 2 168 U2SETI 1210 12 177 U3SET 310 3 169 U3SETI 1310 13 178 U4SET 410 4 170 U4SETI 1410 14 186 U5SET 500 5 171 U5SETI 1510 15 187 U6SET 610 6 172 U6SETI 1610 I0 188 U7SET 710 7 173 U7SETI 1710 17 192 U8SET 810 8 174 U8SETI 1810 18 193 U9SET 910 9 175 U9SETI 1910 19 194 CardTypeFormats: ASET(2words) ID C Thenotebelowconcerning the_MITcardapplies totheASETcardaswell. ASETI (openended) MPC(openended) MPCADD (openended) OMIT(2words)C G G … G -l SID G C A G C A G C A’\" -I -I -I SID S1 $2 … S -In ID C Components canbeinputinanyunique combination ofdigits I-6. andonedigit, thedigits foranyoneentrybeinginsort. Example: ID C 12 3516Output format willbeID 2.3-15 (811172)\nCardTypeFormatsCont’d.: Outputas: _MITI(openended) SPC(4words) SPCl(openended) SPCADD (open ended)DATABLOCKANDTABLEDESCRIPTIONS SUP_RT (2words) Thenoteaboveconcerning the_MITcardapplies tothe UISET(2words) ID C Thenoteaboveconcerning the_MITcardapplies tothe UISETI (openended) C G .. G U2SET (2words) ID C Thenoteaboveconcerning the_M!Tcardapplies tothe U2SETI (openended) C G .. G U3SET (2words) ID C Thenoteaboveconcerning the_MITcardapplies tothe U3SETI (openended) C G .. G U4SET(2words) ID C Thenoteaboveconcerning theBMITcardapplies tothe U4SETI (openended) C G .. G U5SET (2words) ID C Thenoteaboveconcerning the_MITcardapplies tothe U5SETI (openended) C G .. G U6SET (2words) ID C Thenoteaboveconcerning theBMITcardapplies tothe U6SETI (openended) C G .. G12 1 12 3 12 5 12 6 C G G •.. G -I SID G C D SID C G1 G2 … Gn -I SID S1 S2 … S -In ID C SUP_RT card aswell. UISET card aswell. G -l U2SETcardaswell. G -I U3SETcardaswell. G -I U4SETcardaswell. G -I U5SETcardaswell. G -I U6SETcardaswell. G -I 2.3-15a (8/I/72)\nDATABLOCKDESCRIPTIONS CardTypeFormats Cont’d.: U7SET(2words) ID C Thenoteaboveconcerning the_MITcardapplies totheUTSETcardaswell. UTSETI (openended) C G G … G -I U8SET(2words) ID C Thenoteaboveconcerning the_MITcardapplies totheU8SETcardaswell. U8SETI (openended) C G G … G -I U9SET(2words) ID C Thenoteaboveconcerning the_MITcardapplies totheU9SETcardaswell. U9SETI (openended) C G G … G -I 2.3-15b (811/72)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.2.5EPT(TABLE) CardTypesandHeader Information: Header Word1 Header Word2 CardType CardType Trailer BitPositionHeader Word3 Internal CardNumber PBAR 52 20 181 PC@NEAX 152 19 147 PDAMP 402 2 45 PDUMI 6102 61 116 PDUM2 6202 62 117 PDUM3 6302 63 118 PDUM4 6402 64 159 PDUM5 6502 65 160 PDUM6 6602 66 161 PDUM7 6702 67 163 PDUM8 6802 68 164 PDUM9 6902 69 165 PELAS 302 3 46 PMASS 402 4 44 PQDMEM 502 5 41 PQDPLT 602 6 40 PQUADI 702 7 38 PQUAD2 802 8 39 PR@D 902 9 29 PSHEAR 1002 I0 42 PT_RDRG 2102 21 121 PTRBSC 1102 II 35 PTRIAI 1202 12 33 PTRIA2 1302 13 34 PTRMEM 1402 14 37 PTRPLT 1502 15 36 PTUBE 1602 16 30 PTWIST 1702 17 43 PVISC 1802 18 31 CardTypeFormats: PBAR(19words) PCBNEAX (24words)PID II NSM C2 El F2 112 ID MID2 T2 Z2 PHI3 PHI6 PH19 PHIl2 PIDMID 12 FE D1 E2 K1 MID1 I NSM PHIl PHI4 PHI7 PHILO PHIl3 PDAMP(2words)A J Cl D2 F1 K2 T1 MID3 Z1 PHI2 PHI5 PHI8 PHIl1 PHIl4 2.3-16 (8/I/72)\nDATABLOCK DESCRIPTIONS CardType Fomats Cont’d.: PDUMi (variable nu_er ofwords, depending onthecontents oftheADUMi card) PELAS (4words) PID K GE S PMASS (2words) PID M PQDMEM (4words) PID MID NSMT PQDPLT (8words). PID MIDI MID2 T Zl Z2I NSM PQUADI (lOwords) PID MIDI Tl MID2 I MID3 T3 NSM Zl Z2 PQUAD2 (4words) PID MID NSM PROD (6words) PID MID A J C NSM ncurAn f_ …. J-_PiD MID NSM PT_RDRG (4words) PiD MID TFTM PTRBSC (8words) PID MIDI MID2 T Zl Z2I NSM PTRIAI (lOwords) PID MIDI Tl MID2 I MID3 T3 NSM Zl Z2 PTRIA2 (4words) PID MID NSMT PTRMEM (4words) PID MID NSM PTRPLT (8words) PID MIDI MID2 T2 Zl Z2I NSM PTUBE (5words) PID MID T NSM_D PTWIST (4words) PID MID NSI4 PVISC (3words) PID C1C2 2.3-17 (811172)\nDATABLOCKANDTABLEDESCRIPTIONS THEINFORMATION FORMERLY ONTHISPAGE HASBEENDELETED 2.3-18 (8/I/72)\nDATABLOCKDESCRIPTIONS THEINFORMATION FORMERLYONTHISPAGE HASBEENDELETED 2.3-19(811172)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.2.6MPT(TABLE) CardTypesandHeader Information: Header Word1 CardType CardTypeHeader Word2 Trailer BitPositionHeader Word3 Internal CardNumber DSFACT 53 I0 143 MAT1 103 1 77 MAT2 2O3 2 78 MAT3 1403 14 122 MAT4 2103 21 234 MAT5 2203 22 235 MATS1 503 5 90 MATT1 703 7 91 MATT2 803 8 102 MATT3 1503 15 189 PLFACT 1103 II 185 CardTypeFormats: DSFACT (openended) MAT1(IIwords) IfanyoneofE,GorNUisblank, i otherwise, values supplied bytheuserwi MAT2(16words) MAT3(16words) MAT4(3words) MAT5(8words) MATS1(IIwords) MATT1(IIwords)SID B1 B2 … B -In MID E G NU RH_ A TREF GE ST SC SS twillbecomputed tosatisfy theidentity E=2(I+NU)G; IIbeused. MID GII GI2 GI3 G22 G23 G33 RH_ A1 A2 AI2 TO GE ST SC SS MID EX EY EZ NUXY NUYZ NUZX RH_ GXY GYZ GZX AX AY AZ TREF GE MID K 0 MID KXX KXZ KYY KZZ 0KXY KYZ MID R1 R3 R4 RIOR2 MID R1 R3 R4 RIOR2 °°° 2.3-20 (8/I/72)\nDATABLOCKDESCRIPTIONS CardTypeFormatsCont’d.: MATT2(16words) MATT3 (16words) PLFACT (openended)MID R3 RI5 MID R3 RI5 SlD °°,R1 R4 R1 R4 B1 BnR2 °o° R2 °°° B2 -I 2.3-20a (8/I/72)"},"title":"Programmer's Manual P6"},"/docs/programmers/programmers_manual_007/":{"data":{"":"DATABLOCK DESCRIPTIONS 2.3.2.7 DIT(TABLE) CardTypes andHeader Information: Header Word 1 Header Word 2 CardType CardType Trailer BitPositionHeader Word 3 Internal CardNumber TABDMPI 15 21 162 TABLEDI ll05 ll 133 TABLED2 1205 12 134 TABLED3 1305 13 140 TABLED4 1405 14 141 TABLEMI 105 1 93 TABLEM2 205 2 94 TABLEM3 305 3 95 TABLEM4 405 4 96 TABLESI 3105 31 97 TABRNDI 55 25 191 CardType Formats: TABDMPI (open ended) TABLEDI (open ended) TABLED2 (open ended) TABLED3 (open ended) TABLED4 (open ended)ID 0 0 gl °,o -I ID 0 0 Yl o.. -l ID 0 0 Yl .,. -l ID 0 0 Yl -l ID X3 0 AI An0 0 0 f2 fn -l 0 0 0 X2 X n -l X1 0 0 X2 X n -l Xl 0 0 X2 X n -l Xl X4 0 A2 -l0 0 fl g2 Q.-fl 0 0 xl Y2 Yn 0 0 x1 Y2 Yn X2 0 x1 Y2 Yn X2 0 Ao … 2.3-21 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS CardTypeFormats Cont’d.: TABLEMI (openended) TABLEM2 (openended) TABLEM3 (openended) TABLEM4 (openended) TABLESl (openended) TABRNDI (openended)ID 0 0 0 0 0 Yl ,x2 •.° X n -I -I ID Xl 0 0 0 0 Yz x2 •°* X n -1 -1 ID Xl 0 0 0 0 Yl x2 °°, X n -I -I ID X1 X3 X4 0 0 AI A2 A -In ID 0 0 0 0 0 Yl x2 •°o X n -I -I ID 0 0 0 0 0 gl f2 ..° fn -I -I0 0 Xl Y2 Yn 0 0 Xl Y2 Yn X2 0 Xl Y2 Yn X2 0 Ao ,°, 0 0 Xl Y2 Yn 0 0 fl g2 gn 2.3-22 (8/I/72)\nDATABLOCKDESCRIPTIONS THEINFORMATION FORMERLY ONTHISPAGE HASBEENDELETED 2.3-23 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.2.8 EDT(TABLE) CardTypesandHeader Information: Header Word1 CardType CardType DEFORM 104 1Header Word2 Trailer BitPosition CardTypeFormats: DEFORM (3words) SID EID DHeader Word3 Internal CardNumber 81 2.3-24 (8/I/72)\nDATABLOCKDESCRIPTIONS 2.3.2.9 DYNAMICS (TABLE) CardTypesandHeader Information: HeaderWord1 CardType CardTypeHeaderWord2 Trailer BitPositionHeader Word3 Internal CardNumber DAREA 27 17 182 DELAY 37 18 183 DL_AD 57 5 123 DPHASE 77 19 184 EIGB I07 l 86 EIGC 207 2 87 EIGP 257 4 158 EIGR 307 3 85 EP_INT 707 7 124 FREQ 1307 13 126 FREQI I007 lO 125 FREQ2 ll07 II 166 NOLINI 3107 31 127 N_LIN2 3207 32 128 NBLIN3 3307 33 129 N_LIN4 3407 34 130 RANDPS 2107 21 195 RANDTI 2207 22 196 RANDT2* 2307 23 197 RL_ADI I,0, 51 i3l RL_AD2 5207 52 132 SEQEP 5707 57 135 TF 6207 62 136 TIC 6607 66 137 TL_ADI 7107 71 138 TLBAD2 7207 72 139 TSTEP 8307 83 142 CardTypeFormats: DAREA(4words) DELAY(4words) DL_AD(openended) PHASE(4words) EIGB(18words)SID A SID T SID L] ,o° -l SID TH SID L2 NDN G O 0P P S S2 Sn -I P METH{_D (2words) NEP E C 0C C S1 L2 Ln C L1 NDP N(_RM(2words) 0 0 2.3-25(8/I172)\nDATABLOCKANDTABLEDESCRIPTIONS CardTypeFormats Cont’d.: EIGC(openended) EIGP(4words) EIGR(18words) EP@INT (Iword) FREQ(openended) FREQI(4words) FREQ2(4words) N_LINI (8words) N_LIN2 (8words) N_LIN3 (8words) N_LIN4 (8words) RANDPS (6words)SlD METHOD (2words) NORM(2words) G C E mal Coal mbl _bI _l Nel Ndl ma2 _a2 C_D2 Cob2 _2 Ne2 Nd2 … man Coan abn Cobn Ln Nen Ndn -I -I -I -I -I -I -I SID M SID F2 NZ G 0 0 ID SID F -I SID NDF SID NF SID S T SID S GK SID S A SID S A SID Xm co METHOD (2words) F1 NE ND E NBRM(2words) C 0 0 0 F F •.. F F1 F1 GI GJ 0 GI GJ CK GI GJ 0 GI GJ 0DF F2 CI CJ CI CJ CI CJ CI CJ K TID 2.3-26 (811172)\nDATABLOCKDESCRIPTIONS CardTypeFormatsCont’d.: RANDTI(4words) RANDT2*Notavailable RLBADI(6words) RL_AD2(6words) SEQEP(2words) TF(openended) TIC(5words) TLBADI(5words) TL_AD2(I0words) TSTEP(openended)SID NTMAX SID N SID N ID SID BO G(1) AI(1) c(2) A2(2) C(N) A2(N) -I SID UO SID 0 SID 0 F B SID N_(1) N0(2) DT(N) -IL TC L TB SEQID GD B1 C(1) A2(1) AO(2) i6iN)-I -I G VO L TF L T1 P N(1) N(2) -1TO M TD M TP CD B2 AO(1) G(2) AI(2) G(N) AI(N) -l -l C M M T2 C DT(1) DT(2) N(N) -I 2.3-27 (8/I172)\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.2.10 MATP_BL (TABLE) CardTypesandHeader Information: Header Word1 CardType CardTypeHeader Word2 Trailer BitPositionHeader Word3 Internal CardNumber DMIAX 214 2 221 DMIG 114 1 120 BNDFL 9614 96 0\"* CardTypeFormats: DMIAX(openended) GJ CJNAME(2words) 0 IF_ 0 00 NJ GI CI NI GI Cl NI -I -I -ITIN TBUT IHeader Informa-tionforthe matrix (9words) vIV* Non-zero termsofthe _._first non-zero column JEndofcolumn indicators GJ CJ NJ GI Cl NI V* GI CI NI V* -I -I -INon-zero termsofthe second non-zero column Endofcolumn indicators GJ CJ NJ GI Cl NI V* GI Cl NI V* -l -l -l -l -l *Vmaybel,2,or4words depending onTIN.INon-zero termsofthelastnon-zero column Endofcolumn indicators Endofmatrix indicators **Generated byIFP3,IFP4orIFP5. 2.3-28 (8/I/72)\nCardTypeFormatsCont’d.: DMIG(openended)DATABLOCKDESCRIPTIONS NAME(2words)0IFB0 00TIN GJ CJ GI CI V* GI CI V* GJCJ GI CI V* GI Cl VT_UTHeaderInformation forthematrix (9words) Non-zerotermsofthe firstnon-zerocolumn Endofcolumnindicators Non-zerotermsofthesecondnon-zerocolumn Endofcolumnindicators GJCJ GI CI VGI CI V* -I -I *VmaybeI,2,or4wordsdepending onTIN. BNDFL(openended) CSf g p B M S1 $2 NHARMNBSYM N1…….. Idfl r Sz P G1 @I G2 @2 G3 @3 -I -I Endofdataforfluidpoint Idf2r z s pNon-zero terms ofthe last non-zero column Endofcolumn indicators IHeader Information •IFluid point data ISurface gridpointId’sandazimuth angles. Fluid point data -Ietc. -I -I EndofRecord 2.3-28a (8/I/72)\nDATABLOCKDESCRIPTIONS 2.3.2.11 AXIC (TABLE) CardTypes andHeader Information: Header Word l CardType CardType. Conical ShellHeader Word 2 Trailer BitPositionHeader Word 3 Internal CardNu_er AXIC 515 5 144 CC_NEAX 2315 23 146 F_RCEAX 2115 21 156 M_MAX 3815 38 157 MPCAX 4015 40 149 BMITAX 4315 43 150 P_INTAX 4915 49 152 PRESAX 5215 52 154 RINGAX 5615 56 145 SECTAX 6015 60 153 SPCAX 6215 62 148 SUPAX 6415 64 151 TEMPAX 6815 68 155 Hydroelastic AXIF 8815 88 212 BDYLIST 8915 89 213 CFLUID2 85_5 _b 209 CFLU!D3 8615 86 210 CFLUID4 8715 87 211 FLSYM 9115 91 222 FREEPT 9015 90 214 FSLIST 8215 82 206 GRIDB 8115 81 205 PRESPT 8415 84 208 RINGFL 8315 83 207 II 12 13 14Acoustic Cavity AXSLOT 1115 GRIDF 1215 GRIDS 1315 SLBDY 1415223 229 230 231 CardTypeFomats: Conical Shell AXIC(2words) CCONEAX (4words) F_RCEAX (8words) MBMAX(8words)ID RB SID HID2 FP SID HID2 MP0 PID RID S FZ RID S MZRA HIDI FR HIDI MR 2.3-29 (8/I/72) • II\nDATABLOCKANDTABLEDESCRIPTIONS CardType Formats Cont’d.: MPCAX (open ended) SID RID HID C A RID HID C A • RID HID C\" A -l -l -l -l OMITAX (3words) RID HID C POINTAX (3words) ID RID PHI PRESAX (6words) SID P RIDI RID2 PHIl PHI2 RINGAX (4words) ID R Z C SECTAX (5words) ID RID R PHIl PHI2 SPCAX (5words) SID RID HID C V SUPAX (3words) RID HID C TEMPAX (4-words) SID RID PHI TEMP Hxdroelastic AXIF (open ended) BDYLIST (open ended) CFLUID2 (5words) CFLUID3 (6words) CFLUID4 (7words) FLSYM (3words) FREEPT (3words) FSLIST (open ended) GRIDB (5words)CSF B N1 RHO IDF ID RH_ ID IDF ID IDF B M IDF RHO IDF ID PSG N_SYM IDF °°,•, IDF B IDF RHO IDF IDF Sl ID IDF °°,•• PHI IDFRHO NHARM -I IDF -I IDF IDF B IDF RHO $2 PHI IDF -l CID 2.3-29a (8/I/72)\nCardTypeFormatsCont’d.: PRESPT(3words) RINGFL(4words)DATABLOCKDESCRIPTIONS IDF ID PHI IDF Xl X2 X3 Acoustic Cavity AXSL_T (5words) GRIDF (3words) GRIDS (5words) SLBDY (open ended)RH_ W IDG IDG W RH_ ID2 ..°°oB M R R IDF M °,°°° -lN Z Z IDl ,°o,, -l 2.3-29b (8/I/72)\nDATABLOCKDESCRIPTIONS THEINFORMATION FORMERLY ONTHISPAGE HASBEENDELETED 2.3-30 (8/I/72)\nDATA BLOCK DESCRIPTIONS 2.3.3 Data Blocks Output From Module GPI 2.3.3.1 GPL(TABLE) Description Grid Point List. First logical record contains alist ofexternal grid andscalar numbers ininternal sort. Second logical record contains pairs ofexternal grid andscalar numbers andsequence numbers ininternal sort. Table Format Record Word Item 0 Header record l l External grid orscalar number Irepeated foreachgrid orscalar point inmodel 2 l External grid orscalar number _repeated foreach 2 Sequence number grid orscalar point Jinmodel 3 End-o f-fiIe r:otes I.Internal isimplied byword position inrecordone. 2.Sequence number =lO00 *external number unless replaced byanewsequence number onaSEQGP card. 3.Alldata words areintegers. Table Trailer Word1=number ofexternal gridpoints +number ofscalar points. Word2-6=zero. 2.3.3.2 EQEXIN (TABLE) Description Equivalence between external grid orscalar numbers andinternal numbers. First record contains pairs ofexternal grid andscalar numbers andinternal numbers in external sort. Second logical record contains pairs ofexternal qrid andscalar numbers andcoded SILnumbers inexternal sort. 2.3-31\nDATABLOCKANDTABLEDESCRIPTIONS TableFormat Record Word Item 0 Header record 1 1 2External gridorscalar number Internal number irepeated foreachgridorscalar point inmodel 2 1 2External Qridorscalar number IO*SIL number +code irepeated foreachgridorscalar point inmodel 3 End-of-file Notes I.Alldatawordsareintegers. {forgridpoint2.Code=forscalar 9oint TableTrailer Word1=number ofgridpoints +number ofscalar points. Word2-6=zero. 2.3.3.3 GPDT(TABLE) Description GridPointDefinition Table. Onelogical record contains listofallgridandscalar points withassociated coordinate system andconstraint information. Listisininternal sort. Table Format Record Word Item 0 Header record Internal number Coordinate system IDthatdefines x,y,z (X)z (R)/P\\ depending onyor eor@]defining coordinate z @/system Coordinate system IDfordisplacements Constraint coderepeated foreach gridorscalar 2 End-of-file Notes I.Words3-5aresingle precision floating point; allotherwords areinteqer. 2.Scalar points areidentified bycoordinate system ID=-I,andwords 3-7areallzero. 3.Seedescription oftheGRIDbulkdatacardintheUser’s Manual foradefinition ofthe constraint code. 4.Ifasingle degree offreedom, suchasahydroelastic fluid point, isdesired, the integer -I,isusedinposition 6. 2.3-32 (ll/I/7O)\nDATABLOCKDESCRIPTIONS Table Trailer Word 1 Word 2-6=number ofgrid points +nu_er ofscalar points. =zero. 2.3.3.4 CSTM (TABLE) Description Coordinate System Transformation Matrices. Onelogical record contains allcoordinate system transformations. Transformation isfrom global tobasic bythefollowing formulation: (1) rectangular Irllr12r13 (il(tl): tr21 r22 r23) + t2 z \\r31 r32 r33/ t3 (2) cylindrical (ilIr11r2r13 ( c°s°l_r21r22r2qsin°\\r31 r32 r33/z(t)t2 t3 (3) spherical Ill Irll rl2 r1331 IPpsinec°sii=r21 r22 r2 sinesin z \\r31 r32 r33/ pcos0(tl)t2 t3 Table Format Record Word Item 0 Header record l 2 3-5 6-14Coordinate system ID !=rectangularCoordinate system type cylindrical spherical tI,t2,t3 rll, rl2, rl3, r21, r22, r23, r31, r32, r33Irepeated foreach coordinate system End-of-file 2.3-33\nDATABLOCKANDTABLEDESCRIPTIONS Notes I. 2. Table TrailerCoordinate system IDandcoordinate system typeareintegers. tiandrijaresingle precision floating point. Word1=number ofgridpoints +number ofscalar points. Word2=number ofcoordinate systems. Word3-6:zero. 2.3.3.5 BGPDT(TABLE) Description BasicGridPointDefinition Table. Onelogical record contains alistofallgridandscalar points ininternal sort,with (forgridpoints) theirx,y,zcoordinates inthebasicsystem alongwithacoordinate system IDfordisplacement computations. Table Format Record Word Item 0 Header record 1 1 Coordinate system ID _reneated foreach 2-4 x,y,zinbasicsystem fqrid orscalar point 2 End-of-file Notes I. 2.Coordinate system IDisinteger; x,y,zaresingle precision, floating point. Scalar points areidentified bycoordinate system ID=-I,andx,y,z=O. TableTrailer Word1=number ofgridpoints +number ofscalar points. Word2-6=zero. 2.3-34\nDATA BLOCK DESCRIPTIONS 2.3.3.6 SIL(TABLE) Description Scalar Index List. Onelogical record that contains alist ofSILnumbers foreach qrid orscalar point. Thelist isininternal sort, therefore, internal number isimplied byword position intherecord. Definition ofSILnumbers isasfollows: Leti=internal number, then SILl =l, _,(SIL. +6ifi=grid point SILi+ l{SILi +lifi=scalar point Table Format 2 NotesRecord Word Item Header record l SIL1 n SiL n End-of-file SILnumbers areinteqers. TableTrailer Word 1 Word 2 Word 3-6=number ofgrid points +number ofscalar points. =degrees offreedom intheg-displacement set. =zero. 2.3-35\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.4DataBlocks Output FromModule GP2 2.3.4.1 ECT(TABLE) Description Element Connection Table. TheECTcontains onelogical record foreachelement connection cardtypethathasbeen input. Additionally, theECTcow,rains onelogical record forGENELelements iftheyhave beeninput. Table Format TheECTisidentical informat todatablock GERM2, output frommodule IFP.All external gridorscalar numbers arereplaced byinternal numbers. SP_INT datais notcopied ontheECT. TableTrailer Identical totrailer onGERM2datablock. 2.3-36\nDATA BLOCK DESCRIPTIONS 2.3.5 DataBlocks Output FromModule PLTSET 2.3.5.1 PLTSETX (TABLE) Description Usererrormessages related tothedefinition ofelement plotsetsforthestructure plotter. TableFommat Seethedescription oftheT_ESSAGE table, section 2.3.5.5. i_ote PLTSETX isgenerated insubroutine SETINP. Table Trailer WordI-5=0 Word6:1 2.3.5.2 PLTPAR (TABLE) Description Plotparameters andplotcontrol table. TableFormat Record Word 0 Header record l 2 3 etc. Last End-of-file Note!tern Dunlicate oftheplotcontrol datablock (PCDB) created intheIFPImodule except thatallplotsetdefinitions havebeen deleted. PLTPAR isgenerated insubroutine SETINP. Table Trailer Word I-5 =0 Word 6 =1 2.3.5.3 GPSETS (TABLE) Description Gridpcintsetsrelated totheelement pletsets. 2.3-37 iiIll"},"title":"Programmer's Manual P7"},"/docs/programmers/programmers_manual_008/":{"data":{"":"DATABLOCKANDTABLEDESCRIPTIONS TableFormat Record Word Itern Header record I-NSETS Element plotsetID’s(integer) 2-(NSETS+I) 1 2-(NGP+ 1)Number ofgridpoints inanelement set Pointers tothegridpoints inthiselement set(integers) 1If:O,thegridpointisnotinthisset 2If#O,thisisaninternal indexrelative toonlythegrid points inthiselement set(ifnegative, thisgrid pointistobeexcluded whenusedtodrawdefonlled shapes andvectors) NSETS+2 End-of-file Notes I.NSETS =number ofelement sets 2.NGP =totalnumber ofstructural gridpoints 3.GPSETS isgenerated insubroutines SETINP andCNSTRC Table Trailer Word I-5 =0 Word 6 =l 2.3.5.4 LLSETS (TABLE) Description Element plotsetconnection tables. TableFormat Record Grou_ Word Header recordItern I-NSETS I-NTYPS 1 ;_umber ofgrid points perelement ofagiven element type (integer) Note: Ifless than 3or negative, this element type does notdefine a closed area. Grid point indices relative toallgrid points defining each element ofthis type (integers) Integer zero GSETS+I End-of-file Notes I.IqSETS =number ofelement plotsets 2.NTYPS =numbc-r ofelement typesrepresented inanelement plotset 3.N =number ofconnection gridpoints forallelements ofagiventypeinanelement plotset =(number ofgridpoints perelem,entofagiven type)X (number ofelements ofagiventypeinanelement set) 4.ELSETS isgenerated insubroutine CNSTRC 2.3-38\nDATABLOCKDESCRIPTIONS Table Trailer ‘vlord I-5 =0 iJord 6 =l 2.3.5.5 I.IESSAGE (TAGLE) Description ;lessages tobeprocessed bythemessage writer module (P_T.._,I). Each _essage mayeither bea physical orlogical record. This data block isnever really created assuch, butisincluded soasteexplain other data blocks such asPL_TXI, PL_TX2, etc., andisreferenced inthe Table Formats ofthese data blocks. Table Format Record Word Item 0 Header record hgiven logical record inagiven physical record canbeof_voalternate forms A. Record Word Item J j_l/-,]oL /If=-l,-2,-3,-4,-5,or-6,then thenext 32words isanew title fortheIst, 2nd, 3rd, 4th, 5th, or6thlines onall printed pages tofoll_v fro this lessaoe table (integer) The324-character DCDwords forthis title B. Record Word Ite J (j+l)- (.i+;,_LI ST) j+,_LI ST+I (j+IiLIST+2)- (j+i_LI ST+iIF+I )NLIST =number oflist iten_s (integer) List items (mixed mode) NF=size offormat tobeused tonrint these list items (integer) Format tobeused toprint this list (series ofconsecutive BCD characters) 2.3-39\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.6 DataBlocks Output From_odule PL_T 2.3.6.1 PL_TXI (TABLE) Description Usermessages fromtheplotmodule relative totheundefom_ed structural shapes TableFormat Seethedescription ofthe’_ESSAGE table, section 2.3.5.5 TableTrailer WerdI-5=0 iord6:1 2.3.6.2 PL)TX2 (TABLE) Description Usermessages fromtheplotmodule relative tothedeformed structural shapes enerated inthe statics analysis TableFormat Seethedescription ofthe’[SSAGE table, section 2.3.5.5 TableTrailer _JcrdI-5=0 ,lord6=1 2.3-40\nDATABLOCKDESCRIPTIONS 2.3.7 DataBlocks Output FromModule GP3 2.3.7.1 SLT(TABLE) Description Static LoadsTable. Theheader record oftheSLTcontains asorted listofallunique loadsetID’scontained onstatic loadcardsexcept theL_ADcarditself. Thenlogical records thatfollow the header record comprise allstatic loadsdatabelonging toeachofthenloadsets,one logical record perloadset.The(n+l)st logical record contains allL_ADcards(ifany). TableFormat Record Word Type Item 0 I-2 B Datablockname 3 I LoadsetID_ 2+n I LoadsetIDn 1 I 1,2 3 2+mLoadcardtype,m Leaddataasfunction ofloadcardtype… repeated mtimesrepeated foreach different loadcard typebelonging to loadsetnumber 1 n+l 1,2 I,R 3,4 R,I 5,6 R,I 2k+3,2k+4 ISameformat asrecord l Databelongs toloadsetnumber n Combination loadId,Overall scalefactor Scalefactor, loadsetID Scalefactor, loadsetID -I,-Irepeated for each LBAD card n+2 End-of-file Notes I. 2.TheSLTisgenerated insubroutine GP3A. CardtypeID’sandformat fordataforeachbulkdatacardtypeareasfollows: 3=F_RCEI Word Type 1 I 2 R 3-4 IItem Internal gridnumber Signed magnitude ofapplied load Internal gridnumbers ofgridpoints thatdefine direction 2.3-41 (811172)\nDATABLOCKANDTABLEDESCRIPTIONS 5=F_RCE2 1=F@RCE 8=GRAV 4=M_MENTI 6=M@MENT2 2=MBMENT 9=PL@AD 7=SL_ADWord Type Item 1 I 2 R 3-6 IInternal gridnumber Signed magnitude ofapplied load Internal gridnumbers ofgridpoints thatdefine direction Word 1 I 2 I 3 R 4-6 RItem Internal gridnumber Coordinate system ID Signed scalefactor forapplied force Forcecomponents Word Type Item 1 I 2 R 3-5 RCoordinate system ID Gravity vector scalefactor Gravity vector components SeeF_RCEI, substitutinq “moment” for\"force\". SeeFORCE2, substituting “moment” for\"force\". SeeF_RCE, substituting “moment” for\"force\". Word Type Item 1 R Pressure 2-5 I Internal gridnumbers Word Type Item 1 I Internal scalar number 2 R Applied load 2.3-42\nDATA BLOCK DESCRIPTIONS lO:RF@RCE Word Type Item l I 2 I 3 R 4-6 RInternal grid number Coordinate system ID Scale factor Components ofrotation direction vector II=PRESAX Word Type It______ l R Pressure value 2-3 I Ring ID’s 4-5 R Azimuthal angles 6 I Number ofharmonics 3.With theexception ofGRAV andPLEAD card types, data ofagiven card type within a logical record isinsort oninternal grid (orscalar) number atwhich theload is applied. 4.IfnoL_AD cards have been input, the(n+l)st record does notexist. Table Trailer Word l =number ofload sets. Word 2-6 =zero. 2.3-43\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.7.2 GPTT(TABLE) Description GridPointTemperature Table. Theheader record oftheGPTTcontains sorted triples oftemperature setID,default tempera- ture,andflag. Foreachtemperature setforwhichtemperature dataisdefined atthegridpoints orstructural elements, alogical record oftheGPTTispresent. TableFormat Record Word Item 0 I-2 3Datablockname(BCD) Temperature setID,(integer) Default temperature (floating point) -Iifnodefault temperature defined (integer) 0ifonlydefault temperature forset(integer)\n0record number oftemperature dataforset (integer)repeated foreach temperature set 5+count-I 0Temperature setID Element type Element typecountoftemperature data (number ofvalues forelement ID) Element ID Repeats for Temperature values allelements (nonexistent ifofelement element IDisneg- ative) typein problem. Flagindicating endofelement datafor element type.Repeats for allelement typesin problem. k+lSameformat asrecord 1 End-of-file Notes I. 2. 3,TheGPTTisgenerated insubroutine GP3D. Atemperature setmaybedefined asconsisting onlyofadefault temperature that applies toallgridpoints, andthuselements connecting thosegridpoints. Adefault temperature (ifdefined) istoapplytoallgridpoints forwhicha temperature hasnotbeendefined. TableTrailer Trailer contains nospecific information. 2.3-44 (811172)\nDATA BLOCK DESCRIPTIONS 2.3.8 Data _locks Output From r,_odule TAI 2.3.8.1 EST(TABLE) Description Element Summary Table. TheESTisacollection ofdata forallelements ofthestructural model. Itcontains one logical record foreach element type. Foreach element: connection data, properties data, basic grid point data andtheelement temperature aregrouped. General elements andelements that belong tosuper elements arenotincluded intheEST. Table Format Record _.Jord Type Ite_____m 0 Header record 1 1 I 2-i+I i+2-i+j+l i+j+2-i+j+k+l i+j+k+2 n+lElement type ECTsection _repeated EPTsection IforBGPDT section each Element temperature element End-of-filerepeated for each element type Notes I.i=number ofwords inECTsection. j=number ofwords inEPTsection. k=number ofwords inBGPDT section. 2.Thenumber ofrecords intheESTcorresponds tothenumber ofseparate element types in 3. Summarythemodel. TheESTisgenerated insubroutine TAIA. ofESTFormats ECTSection EPTSection BGPDT Section Element i_uiliu_r number Number !ne,onic ofWords ofWords ofWordsTntal Element Words Temper- Per ature Element l _P _ 5 8 Yes 17 2 BEA£i 19 19 8 Yes 47 3 TLBE 3 4 8 Yes 16 4 SHEAR 5 3 16 Yes 25 5 TWIST 5 3 16 Yes 25 6 TRIAl 5 9 12 Yes 27 7 TRBSC 5 7 12 Yes 25 8 TRPLT 5 7 12 Yes 25 9 TRMEM 5 3 12 Yes 21 lO C_NR_D 8 0 8 Yes 17 II ELASI 5 3 0 No 8 12 ELAS2 8 0 0 No 8 13 ELAS3 3 3 0 No 6 14 ELAS4 4 0 0 No 4 15 ODPLT 6 7 16 Yes 30 16 QDMEM 6 3 16 Yes 26 17 TRIA2 5 3 12 Yes 21 2.3-45 (12-1-69)\nDATABLOCKANDTABLEDESCRIPTIONS ECTSectionEPTSectionBGPDTSection Total Element Words Element Number Number Number Temper- Per Mnemonic ofWords ofWords ofWords ature Element 18 QUAD2 6 3 16 Yes 26 19 QUADI 6 9 16 Yes 32 20 DAMP1 5 1 0 No 6 21 DAMP2 6 0 0 No 6 22 DAMP3 3 1 0 No 4 23 DAI,IP4 4 0 0 No 4 24 VISC 3 2 8 Yes 14 25 MASS1 5 1 0 No 6 26 MASS2 6 0 0 No 6 27 MASS3 3 1 0 No 4 28 MASS4 4 0 0 No 4 29 C_NMI 24 0 4 Yes 29 30 C_NH2 13 0 4 Yes 18 31 PL_TEL 3 0 8 Yes 12 34 BAR 15 18 8 Yes 42 35 C_!_EAX 3 23 8 Yes 35 36 TRIARG 6 0 12 Yes 19 37 TRAPRG 7 0 16 Yes 24 38 T@RDRG 6 3 2 Yes 18 39 TETRA 5 0 17 Yes 23 40 WEDGE 7 0 25 Yes 33 41 IIEXAI 9 0 33 Yes 43 42 IIEXA2 9 0 33 Yes 43 43 FLUID2 6 0 8 No 14 44 FLUID3 7 0 12 _Io 19 45 FLUID4 8 0 16 No 24 46 HFREE 5 0 8 No 13 47 AXIF2 6 0 8 No 14 48 AXIF3 7 0 12 No 19 49 AXIF4 8 0 16 No 24 50 SL_T3 9 0 12 No 21 51 SL_T4 lO 0 16 No 26 52 IIBDY 7 0 17 Yes 25 53 DUMI * * * Yes * 54 DUM2 * * * Yes * 55 DUM3 * * * Yes * 56 DUM4 * * * Yes * 57 DUM5 * * * Yes * 58 DUM6 * * * Yes * 59 DUM7 * * * Yes * 60 DUM8 * * * Yes * 61 DUM9 * * * Yes * *Forthedummyelements, DUMItllruDUM9,thesevalues aredetermined presence oftherespective ADUMIthruADUM9bulkdatacards. WehavefromtheADUMicardthus; G,q= NC= NP=atexecution timeupon Number ofgridooints connected byPUMi Humber ofadditional connection cardvalues foundontheCDUMi cardinaddition totheelement ID,property ormaterial ID,andGN=countofgridID’s. Number ofadditional property cardvalues, found onthePDUMicardinaddition totheproperty IDandmaterial ID. 2.3-46 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS ThenumberofwordsintheBGPDTsectionisthen4timesGN. ThenumberofwordsintheEPTsectionisthen1+NPifNPisgreaterthanzero,oriszerootherwise. ThenumberofwordsintheECTsectionisthen1+GNifNPisgivengreaterthanzerooris2+GNifNPiszero. ThetotalnumberofwordsisthenthetotaloftheECTsectionplustheEPTsection plustheBGPDTsectionplus1forthetemperature. Detailed ESTFormats ECTsection forelement type :2: Word Type Item 1 I 2-3 I 4-6 R 7 I 8-9 IElement ID SILnumbers forgridpoints I,2 x,y,z(orientation vector) Coordinate system IDforx,y,z Pa\"Pb 10-12 R ZIZ23a’a’Za 13-IS RZ!b, 16-19 R ECTSection forg1’g2’g3’g\" element type=I,3,24,31: Word Type Item l I Element ID 2-3 I SILnumber forgrid points l,2 ECTSection forelement type =4,5: Word Type Item 1 I Element ID 2-5 I SILnumbers forgrid points l,2,3,4 2.3-46a (8/I/72)\nDATA BLOCK DESCRIPTIONS ECTsection forelement type =6,7,8,9,17: Wor_____d Type Iten_l l I 2-4 I 5 RElement ID SILnumbers forgrid points l,2,3 8(degrees) ECTsection forelement type =15,16,18,19: Wor__.d Type Item 1 I 2-5 I 6 RElement ID SILnumbers forgrid points l,2,3,4 @(degrees) ECTsection forelement type =lO: Word Type Ite___m_m l I Element ID 2-3 I SILnumbers forgrid points l,2 4 I Material ID 5 R A 6 R J 7 R C 8 R non-structural mass (nsm) ECTsection forelement type =II,20,25: Wor..dd _ Item 1 I 2-3 I 4-5 IElement ID SILnumbers forgrid points l,2 Component codes forgrid points l,2 ECTsection forelement type =12: _!ord Type Ite___m_m l I Element ID 2 R Value 3-4 I SILnumbers forgrid points l,2 5-6 I Component codes forgrid points l,2 7-8 R ge,S ECTsection forelement type =13,22,27: Word Type l I 2-3 IItem Element ID SILnumbers forscalar points I,2 ECTsection forelement type =14,23,28: l, or___dd Type l I 2 R 3-4 IItem Element ID Value SILnumbers forscalar points I,2 2.3-47\nDATABLOCKANDTABLEDESCRIPTIONS ECTsectionforelementtype=21,26: Word Type 1 I 2 R 3-4 I 5-6 IItem Element ID Value SILnumbers forgridpoints I,2 Component codesforgridpoints I,2 ECTsection forelement type=29: Word Type 1 I 2 I 3 I 4-24 RItem Element ID SILnumber forgridpoint Coordinate system ID m11,m21,m22,m31,etc., (6x6symmetric matrix) ECTsection forelement type =30: Word Type Item 1 I Element ID 2 I SILnumber forgridpoint 3 I Coordinate system ID 4 R m 5-7 R xI,x2,x3 8-13 R I11,121,122,131,132,133 ECTsection forelement type=34: Word Type Item 1 I Element ID 2-3 I SILvalues 4-6 R Xl,X2,X3 7 I Coordinate 8-9 I Pa’Pb I 2 3 10-12 R Za,Za,Za 1 2 3 13-15 R Zb,Zb,Zb ECTsection forelement type=35: Word Type Item 1 I Element ID 2-3 I SILvalues forringsIo2forqridpoints I,2 system IDforXI,X2,X3 2.3-48\nDATABLOCKDESCRIPTIONS ECTsection forelement type =36: Word Type Item l I Element ID 2-4 I SILvalues forgrid points l,2,3 5 R 0(degrees) 6 I Material ID ECTsection forelement type =37: Word Type Item 1 I Element ID 2-5 I SILvalues forgrid points I,2,3,4 6 R 0(degrees) 7 I Material ID ECTsection forelement type =38: Word Type Item l I Element ID 2-3 I SILvalues forgrid points l,2 4-5 R AI,A2 6 Notdefined ECTsection forelement type =39: Word Type Item l I 2 I 3-6 IElement ID Material ID SILvalues forgrid points l,2,3,4 ECTsection forelement type=40: Word Type Item 1 I Element ID 2 I Material ID 3-8 I SILvalues forgridpoints I,2,3,4,5,6 ECTsection forelement type :41,42: Word Type Item l I Element ID 2 I Material ID 3-I0 I SILvalues forgrid points l,2,3,4,5,6,7,8 ECTsection forelement type=43: Word Type Item l I 2,3 I 4 R 5 R 6 IElement ID SILvalues forgrid points I,2 Density, p Bulk modulus, B Harmonic Index, N 2.3-49 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS ECTsectionforelementtype=44: Word Type Item 1 I 2-4 I 5 R 6 R 7 IElement ID SILvalues forgridpoints I,2,3 Density, p Bulkmodulus, B Harmonic Index, N ECTsection forelement type=45: Word Type Item 1 I 2-5 I 6 R 7 R 8 IElement ID SILvalues forgridpoints I,2,3,4 Density, p Bulkmodulus, B Harmonic Index, N ECTsection forelement type=46: Word Type Item 1 I 2,3 I 4 R 5 IElement ID SILvalues forgridpoints 1,2 Weight density, D Harmonic Index, N ECTsection forelement ty_e=47: Word Item 1 I 2,3 I 4 R 5 R 6 IElement ID SILvalues forgridpoints I,2 Density, p Bulkmodulus, B Harmonic Index, N ECTsection forelement type=48: Word Type Item 1 I 2,3,4 I 5 R 6 R 7 IElement ID SILvalues forgridpoints I,2,3 Density, p Bulkmodulus, B Harmonic Index, N ECTsection forelement tyDe=49: _‘JOrd Type Item 1 I 2,3,4,5 I 6 R 7 R 8 IElement ID SILvalues forgridpoints I,2,3,4 Density, p Bulkmodulus, B Harmonic Index, N 2.3-49a (8/I/72)\nDATABLOCK DESCRIPTIONS ECTsection forelement type =50: Word Type l I 2,3,4 I 5 R 6 R 7 I 8 IItem Element ID SILvalues forgridpoints l,2,3 Density, p Bulkn_)dulus, B Number ofSlots, M Harmonic Index, N ECTsection forelement type =51: Word Type l I 2,3,4,5 I 6 R 7 R 8 I 9 IItem Element ID SILvalues forgridpoints l,2,3,4 Density, p Bulkmodulus, B Number ofSlots, M Harmonic Index, N ECTsection forelement type =52: Word Type Item l I Element ID 2 B FLAG 3 R H 4 R AF 5-8 I SILvalues forgridpoints l,2,3,4 ECTsection forelement type =53thru61: (Refer tothenoteunder theTable Summary ofESTFormats above) Word Type Item l I 2 I 3thru (GN+2) I (GN+3) thru Mixed (GN+2+NC)Element ID Material ID(NP=O) SILvalues forGNgridpoints. (NP=O) Additional connection data asdetermined by theuser-programmer (Present onlyifNCis greater thanzero) Note that ifNPisgiven greater thanzero, thematerial IDwill appear intheEPT section andthuswords 3thru (GN+2+NC) willbeshifted upbythelword removed. 2.3-49b (811172)\nDATABLOCKANDTABLEDESCRIPTIONS EPTsection forelement type Word=l: l I Material ID 2 R A 3 R J 4 R C 5 R nsmItem EPTsection forelement type =2: Word Type Item l I Material ID 2 R A 3-4 R 11,12 5 R J 6 R nsm 7 I Force Element Code(FE) B-9 R CI,C2 I0-II R DI,D2 12-13 R El,E2 14-15 R FI,F2 16-17 P Ki,v_ •_ , •, “Z !8 R If2 !9 Notdefined D 2.3-49c (8/I/72)\nDATABLOCKAI_DTABLEDESCRIPTIONS EPTsection forelement type Wor___dd Type:3: 1 I Material 2 R O,D. 3 R t 4 R nsmItem ID EPTsection forelement type=4,5,9,16,17,18: Wor...dd Type Itern 1 I Material ID 2 R t 3 R nsm EPTsection forelement type:6,19: Wor.___d Type Item 1 I Material IDformembrane 2 R tI 3 I Material IDforbending 4 R I 5 I Material IDfortransverse shear 6 R t2 7 R nsm 8-9 R ZI,Z2 EPTsection forelement type =7,8,15: Wor.___d Type Item l I Material IDforbending 2 R I 3 I Material IDfortransverse shear 4 R t2 5 R nsm 6-7 R ZI,Z2 EPTsection forelement type= Word Type 1 R K 2 R ge 3 R sII,13: Item EPTsection forelement type:20,22: Word Type Item 1 R Be 2.3-50\nDATABLOCKDESCRIPTIONS EPTsectionforelementtype: Word Type l RC1 2 R C224: Item EPTsection forelement type =25,27: Word Type Item l R Me EPTsection forelement type =33: Word Type Item l I Super element property ID EPTsection forelement type =34: Word Type Item l I Material ID 2 R A 3-4 R 11,12 5 R J 6 R nsm 7 I FE(Force Method only) 8-9 R CI,C2 lO-ll R DI,D2 12-13 R El,E2 14-15 R FI,F2 16-17 R KI,K2 18 R I12 EPTsection forelement type :35: Wor_.__d_d Type Item l I Material IDformembrane 2R R Tl 3 I Material IDforbending 4 R I 5 I Material IDfortransverse shear 6 R T2 7 R nsm 8-9 R ZI,Z2 I0-23 R @i,i=l,14 2.3-51\nDATABLOCKANDTABLE DESCRIPTIONS EPTsection forelement type=38: Word Type Item 1 I Material ID 2 R TM 3 R TF EPTsection forelement types =53thru61: (Refer tonoteunderthetableSummary ofESTFormats above) Word _ Item 1 I Material ID 2thru Mixed Property datadetermined bytheuser-programmer (I+NP) TheEPTsection forelement types53thru61ispresent onlyifNP isgreater thanzeroasdescribed above. TableTrailer Word1=number ofelements inmodel. Word2-6=areundefined. 2.3-52 (8/I/72)\nDATABLOCK DESCRIPTIONS 2.3.8.2 GEl(TABLE) Description General Element Input. TheGEIcontains onelogical record foreachgeneral element inthemodel. Table Format Record Word Type Item l I 2 I 3 I 4 I 3+n I 4+n I “-t--_ I .ii\"IH 3+n-h’n+n 2j fR 3+n+m+n 2) +nmHeader record IDforgeneral element n=number ofelements inUIlist m=number ofelements inUDlist SILvalue forfirst UI SILvalue fornthUI SILvalue forfirst UD SILvalue formthUDnotpresent ifm=0 Elements ofZmatrix Elements ofSmatrix Sameformat asrecord l k k+lSameformat asrecord l End-of-file Table Trailer Word l=number ofgeneral elements inthemodel. Words 2-6=zero. 2.3.8.3 ECPT (TABLE) Description Element Connection andProperties Table. TheECPT isessentially theESTinadifferent sort. TheECPTcontains onelogical record foreach gridorscalar point ofthemodel. Eachlogical record contains Element Summary Table dataforeachelement connected tothegridorscalar point. 2.3-53"},"title":"Programmer's Manual P8"},"/docs/programmers/programmers_manual_009/":{"data":{"partition-ofmassmatrix--cset#DATA BLOCK DESCRIPTIONS\n2.3.19Data Blocks Output From Module RBMGI\n2.3.19.1 KLL(MATRIX)\nDescription\n[K_]-\nMatrix Trailer\nNumber ofcQlumns\nNumber ofrows\nForm\nType\n2.3.19.2 KLR(MATRIX)\nDescription\n[K_r] -\nMatrix Trailer\nNumber ofcolumns\nNumber ofrows\nForm\nType\n2.3.19.3 KRR(MATRIX)\nDescription\n[Krr] -\nMatrix Trailer\nNumber ofcolumns\nNumber ofrows\nForm\nType\n2.3.19.4 MLL(MATRIX)\nDescription\n[M_]-\nMatrix Trailer\nNumber ofcolumns\nNumber ofrows\nForm\nTypePartition ofstiffness matrix\nsymmetric\nreal double precision\nPartition ofstiffness matrix\nr\nrectangular\nreal double preclsion\nPartition ofstiffness matrix\nr\nr\nsymmetric\nreal double preclsion\nPartition ofmassmatrix -Cset.":"DATABLOCKANDTABLEDESCRIPTIONS TableFormat Record Word Item Header record 2 3-i+2 i+3-i+j+2 i+j+3-i+j+k+2 i+j+k+3SILnumber for\"pivot\" grid orscalar point(integer) Element type repeated for ECTsection eachelement EPTsection connected BGPDTsection tothe Element temperature pivotirepeatedfor each gridor scalar inthe model n+l End-of-file Notes I.Detailed formats aregiven intheESTwriteup (seesection 2.3.8.1). 2.Ifnoelements areconnected toagridorscalar point, therecord contains only oneword. TableTrailer Word1=7 Word2-6=areundefined 2.3.8.4 GPCT(TABLE) Description GridPointConnection Table. TheGPCTisacondensation oftheECPT. Itcontains oneloqical record foreachgridor scalar pointofthemodel. Eachlogical record contains alistofallgridorscalar points thatareconnected (bymeansofstructural elements) tothepivotgridorscalar point. Table Format Record Word Item 0 Header record 1 2 3-2+m+SILnumber forpivotgrid -orscalar point(integer) m=number ofconnected points (integer) Sorted listofSILnumbers ofconnected pointsrepeated foreach gridorscalar inthemodel n+l End-of-file Notes I.IftheSILnumber forthepivot(first word)\u003cO, thenthepivot isascalar point. 2.Ifnoelements areconnected tothepivot (andtherefore nootherqridorscalar points), therecord contains onlyoneword. 2.3-54 (12-I-69)\nDATA BLOCK DESCRIPTIONS Table Trailer Word l Word 2-6=7 =areundefined 2.3-55\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.9 2.3.9.1Data_locks Output From_1odule S_,_AI KGGX(:.ATRIX) DescriFtion !.latrix TrailerPartition ofstiffness matrix exclusive ofqeneral elements -gset. Number ofcolumns :q Number ofrov_s =q Form =symmetric Type =realdouble precision 2.3.9.2 K4GG(IiATRIX) Description K1- gg- Matrix TrailerPartition ofstructural damping matrix -gset. I;umber ofcolumns =q :umber ofrows =q Form :symmetric Type =realdouble precision 2.3.9.3 GPST(TABLE) Description GridPointSingularity Table Table Format Record Word Item Header record Orderofsingularity (l,2,or3) !=number ofSILnumbers thatfollow SILl SIL _ote2+N 2 Allentries areinteqers.SILN End-of-file_epeated foreach singularity 2.3-56\nDATA BLOCK DESCRIPTIONS Table Trailer Word 1=undefined Word 2=0 Word 3=1 Word 4=2 Word 5=1 Word 6=0 2.3-57\nDATABLOCKANDTABLEDESCRIPTIONS 2,3.10 DataBlocks Output. FromModule SHA2 2.3.10.1 Descri ption [Mgg] - Matrix TrailerMGG(MATRI×) Partition ofmassmatrix -gset. Number ofcolumns :g Number ofrows :g Form :symmetric Type :realdouble precision 2.3.10.2 Descriptio n [Bgg] r,latrix TrailernGG(MATRIX) Partition oFdamping matrix -gset. Number ofcolumns :g Number ofrows =g Form =syr.mletri c Type :realdouble precision 2.3-58\nDATABLOCK DESCRIPTIONS 2.3.11 DataBlocks Output FromModule GPWG. 2.3.11.I _GPWG (TABLE) Description GridPoint Weight Generator _utput Table. Table Format Record Word Type l I 2 I 3 I 4-9 lO I ll-50 51-146 B 2 1-36 37-45 46-49 50-53 54-57 58-66 67-69 70-78 Table Trailet Word l=0 Word 2=nonzero. Words 3-6=0R R R R R R R RItem Header record _FPIDrecord l 13 External IDofgridpoint about which moments andinterias werecalculated. IfExternal ID=0 thebasic origin wasused. Notdefined. 98 Notdefined. 96words oftitle, subtitle, andlabel from I_UTPUTI _FPdatarecord [MO]6x6moment matrix [S]3x3matrix Mx,Xx,Yx,Zx My,Xy,Yy,Zy Mz,Xz,Yz,Zz Inertia matrix (3x3) Principal inertias Qmatrix (3x3) End-of-file 2.3-59\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.12 DataLlocks OutF,utFrom!\u003codule St:A3 2.3.12.1 KGG(4ATRIX) Description [Kgg]Partition ofstiffness matrix -gset,Contains contributions fromallelements inthemodel, including general elements. Matrix Trailer Number ofcolumns =g Number ofrows :g Fo :symmetric Type =realdouble precision 2.3.12.2 KGGL(MATRIX) Description K_[gg]- Matrix TrailerPartition ofthestiffness matrix oflinear elements -gset.Contains contribu- tionsfromalllinear elements ofthemodel including general elements. Usedonly inPiecewise Linear Analysis. Number ofcolumns =g Number ofrows =g Form =symmetric Type :realdouble precision 2.3-60\nDATA BLOCK DESCRIPTIONS 2.3.13 DataBlocks Output FromModule GP4 2.3.13.1 RG(MATRIX) Description [Rg] -Multipoint constraint equations matrix. Matrix Header Number ofcolumns =g Number ofrows =m Form =rectangular Type =real single precision 2.3.13.2 YS(MATRIX) Description {Ys}-Constrained displacement vector -sset. Matrix Trailer Number ofcolumns :1 Number ofrows =s Form _recLangular Type =real single precision 2.3.13.3 USET (TABLE) Description Displacement setdefinitions table. USET contains onelogical record. Each word corresponds toeach degree offreedom inthe g-displacement set(ininternal order) andcontains ones inspecified bitpositions indicat- ingthedisplacement sets towhich thedegree offreedom belongs• Table Format RecordWord Type Item I-2 B Data block name 3 I SPCsetID 4 I MPCsetID l L Mask forfirst degree offreedom n L Mask fornthdegree offreedom End-of-file 2.3-61\nDATABLOCKANDTABLE DESCRIPTIONS Notes I.Bitpositions forthevarious displacement setsaredefined asfollows: [SblSg IJL[a[flnIglrl°[sIm\"l 2223242526272829303132 TableTrailer Word1=zero. Word2=degrees offreedom intheg-displacement set(LUSET). Word3=zero, Word4=logical “or\"ofallUSETmasks. Word5=zero. Word6=zero. 2.3-62\nDATABLOCK DESCRIPTIONS 2.3.14 DataBlocks Output FromModule GPSP. 2.3.14.1 _GPST (TABLE) Description Unremoved GridPoint Singularities. Table Format Record Word Type l I 2 I 3 I 4 I 5-9 lO I ll-50 51-146 l 2 3 4-6 7-9 lO-12 *Note:Item Header record _FPIDrecord 0 8 SPCsetID MPCsetID Notdefined 12 Notdefined B 96words oftitle, subtitle, andlabel from /BUTPUT/ BFPdatarecord I External gridpoint ID i Scalar point flag ! Singularity order I Strongest singularity components I Nextstrongest sinqularity comoonents I Weakest singularity components Theabove 12words arerepeated inrecord 2foreachgridpoint withanunremoved singularity. End-of-file Table Trailer Word l=8 Word2-6=0 2.3-63(311171)\nDATA BLOCK ANDTABLE DESCRIPTIONS 2.3.15 DataBlocks Output FrnmHodule HCEI 2.3.15.1 GM(MATRIX) Description [Gm] Matrix HeaderMultipoint constraint transformation matrix -mset. Number ofcolumns :n Number ofrows =m Form =rectangular Type =real double precision 2.3-64\nDATABLOCKDESCRIPTIONS 2.3.16Data Blocks Output From Module MCE2 2.3.16.1 KNN(MATRIX) Description [Knn] Matrix Trailer Number ofcolumns Number ofrows Form Type-Partition ofstiffness matrix -nset. =n =n =symmetric =real double precision 2.3.16.2 MNN(MATRIX) Description [Mnn] Matrix Trailer Number ofcolumns Number ofrows Form TypePartit_ion ofmass matrix -nset. =n =n =symmetric =real double precision 2.3.16.3 KDNN (MATRIX) Description Matrix TrailerPartition ofdifferential stiffness matrix -nset. Number ofcolumns :n Number ofrows :n Form =symmetric Type =real double precision 2.3-65\nDATABLOCKANDTABLEDESCRIPTIONS 2.3,16.4 BNN(MATRIX) Description [Bnn] - Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.16.5 K4NN(MATRIX) Description [K_n] Matrix Trailer Number ofcolumns Number ofrows Form TypePartition ofdamping matrix -nset. =n =n =symmetric =realdouble precision Partition ofthestructural damping matrix -nset. –n –n =symmetric =realdouble precision 2.3-66\nDATA BLOCK DESCRIPTIONS 2.3.17 Cata blocks Output From J_cdule SCLI 2.3.17.1 KFF(MATRIX) Description [Kff] Matrix TrailerPartition ofstiffness matrix after single-point constraints have been removed fset. Number ofcolumns =f Number ofrows =f Form =symmetric Type =real double precision 2.3.17.2 KFS(_!ATRIX) Description. [Kfs] - latri xTrailerPartition ofstiffness matrix after single-point constraints have been removed. Number ofcolumns =s Number ofrows =f Form =rectangular Type =real double precision 2.3.17.3 KSS(.ATRIX) Description [Kss] - !_atrix TrailerPartition ofstiffness matrix after single-point constraints have been removed - sset, _,umber ofcolumns =s i_umber ofrows =s Form =symmetric Type =real double precision 2.3.17.4 _’.:FF(I_ATRIX) Description. [I.Iff] - _atrix TrailerPartition ofmass matrix after single-point constraints have been removed -fset. Number ofcolumns =f Number ofrows =f Form =symmetric Type =real double precision 2.3-67\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.17,5KDFF(r,_TRIX) Description [K_f] Partition ofdifferential stiffness matrix -fset. Matrix Trailer Number ofcolumns =f Number ofrows =f Form =symmetric Type =real double precision 2.3.17.6 KDFS (MATRIX) Description [K_s] -Partition ofdifferential stiffness matrix, Matrix Trailer Number ofcolumns =s Number ofrows =f Form =rectangular Type =real double precision 2,3.17.7 KDSS (MATRIX) Description [K_s] -Partition ofdifferential stiffness matrix -sset, Matrix Trailer Number ofcolumns :s Number ofrows :s Form =symmetric Type :realdouble precision 2.3.17.8 BFF(HAIRIX) Description [Bff] -Partition ofdamping matrix after single point constraints have been removed -fset. tlatrix Irailer l_umber ofcolumns :f Fiumber ofrows =f Form :svmn;etric Type =real double precision 2.3-68\nDATABLOCK DESCRIPTIONS 2.3.17.9 K4FF(MATRIX) DescriRtion [K_f]- MatrixTrailerPartition ofstructural damping matrix withsingle-point constraints removed -fset. Number ofcolumns :f Number ofrows =f Form =symmetric Type =realdouble precision 2.3-69\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.18 DataBlocks Output FromModule SMPI 2.3.18.1 G@(MATRIX) Description [So] Matrix Trailer Number ofcolumns Number ofrows Form Type-Structural matrix partitioning transformation matrix. =a =o =rectangular =realdouble precision 2.3.18.2 KAA(MATRIX) Description [Kaa] Matrix Trailer Number ofcolumns Number ofrows Form Type-Partition ofstiffness matrix -aset. :a =a =symmetric =realdouble precision 2.3.18.3 KB_B(MATRIX) Description [ oo] Matrix Trailer-Partition ofstiffness matrix -oset. Number ofcolumns :o Number ofrows =o Form =symmetric Type =realdouble precision 2.3.18.4 LO@(MATRIX) Description [koo] Lowertriangular factor ofK_B-oset. Matrix Trailer Number ofcolumns =o Number ofrows =o Form :lowertriangular Type =realdouble precision 2.3-70\nDATA BLOCK DESCRIPTIONS 2.3.18.5 U@0(MATRIX) Description [Uoo]- Matrix Trailer Number ofcolumns Number ofrows Form Type “,oteUppertriangular factor ofK_B-oset. =o =o :upper triangular =real double precision Thismatrix isnotastandard uppertriangular factor. subroutine FBS. 2.3.18.‘6 MAA(MATRIX) Description [Maa]-Partition ofmassmatrix -aset. Matrix Trailer Number ofcolumns =a Number ofrows =a Form :symmetric Type =realdouble precision 2.3.18.7 M_B (i_TRIX) Partition ofmass matrix -oset.Description [Moo]- Matrix Trailer Number ofcolumns Number ofrows Form Type=o =o =symmetric =real double precisionItsformat isacceptable only to 2.3-71\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.18.8 Description [Moa]- Matrix TrailerMOAB(MATRIX) Partition ofmassmatrix. Number ofcolumns =a Number ofrows =o Form =rectangular Type =realdouble precision 2.3.18.9 BAA(MATRIX) Description [Baa] Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.18.10 K4AA(MATRIX) Description [K_a] Matrix TrailerPartition ofdamping matrix -aset. =a =a =symmetric =realdouble precision Partition ofstructural dampinq matrix -aset. Number ofcolumns =a Number ofrows =a Form =symmetric Type =realdouble precision 2.3-72\nDATA BLOCK DESCRIPTIONS 2.3.19Data Blocks Output From Module RBMGI 2.3.19.1 KLL(MATRIX) Description [K_]- Matrix Trailer Number ofcQlumns Number ofrows Form Type 2.3.19.2 KLR(MATRIX) Description [K_r] - Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.19.3 KRR(MATRIX) Description [Krr] - Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.19.4 MLL(MATRIX) Description [M_]- Matrix Trailer Number ofcolumns Number ofrows Form TypePartition ofstiffness matrix symmetric real double precision Partition ofstiffness matrix r rectangular real double preclsion Partition ofstiffness matrix r r symmetric real double preclsion Partition ofmassmatrix -Cset.:g =symmetric =real double precision-gset. -rset. 2.3-73"},"title":"Programmer's Manual P9"},"/docs/programmers/programmers_manual_010/":{"data":{"matrix-trailernumber-ofsubcases#DATABLOCK DESCRIPTIONS\n2.3.26\n2.3.26.1\nDescri ption\n[P_]\nMatrix TrailerDataBlocks Output FromModule SSGA.\nPLI(MATRIX)\nPartition ofloadvector forinertia relief matrix giving loads duetostatic +\ninertial forces on_set.\nNumber ofcolumns\nNumber ofrows\nForm\nType\n2.3.26.2 P_I(MATRIX)\nDescription\n[Pio]\nMatrix Trailer=number ofsubcases":"DATABLOCKANDTABLEDESCRIPTIONS 2.3.19.5 MLR(MATRIX) Description [M_r] Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.19.6 MRR(MATRIX) Description [Mrr] - Matrix Trailer Number ofcolumns Number ofrows Form TypePartition ofmassmatrix. =r =rectangular =realdouble precision Partition ofmassmatrix -rset. =r =r =symmetric =realdouble precision 2.3-74\nDATA BLOCK DESCRIPTIONS 2.3.20 Data Blocks Output From Module RBMG2 2.3.20.I LLL(MATRIX) Description [Lz_] - Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.20.2 ULL(.MATRIX) Description [u_]- Matrix Trailer NoteLower triangular factor ofKLL-_set.=lower triangular =real double precision Upper triangular factor ofKLL-_set. Number ofcolumns = Number ofrows : Form :upper triangular Type =real double precision This matrix isnotastandard upper triangular factor. subroutine FBS. 2.3.20.3 Description Matrix TrailerLBLL (MATRIX) Lower triangular factor ofKBLL -_set. Number ofcolumns = Number ofrows = Form =lower triangular Type =real double precisionItsformat isacceptable only to 2.3-75\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.20.4 UBLL(MATRIX) Description [u_]- Matrix Trailer NoteUpper triangular factor ofKBLL -_set. Number ofcolumns = Number ofrows = Form =uppertriangular Type =realdouble precision Thismatrix isnotastandard uppertriangular factor. subroutine FBS.Itsformat isacceptable onlyto 2.3-76\nDATA BLOCK DESCRIPTIONS 2.3.21 Data Blocks Output From Nodule REMG3 2.3.21.I DM(MATRIX) Description [D] -Rigid body transformation matrix. Natrix Trailer _umber ofcolumns = Number ofrows =r Form =rectangular Type =real double precision 2.3-77\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.22 DataBlocks Output FromModule RBMG4 2.3.22.1 MR(MATRIX) Description [mr] -Rigid body mass matrix -rset. Matrix Trailer Number ofcolumns :r Number ofrows :r Form :symmetric Type =real double precision 2.3-78\nDATA BLOCK DESCRIPTIONS 2.3.23 DataBlocks Output FromModule SSGI. 2.3.23.1 PG(MATRIX) Description [Pg] -Static loadvector matrix giving static loads -gset. Matrix Trailer Number ofcolumns =number ofsubcases Number ofrows =g Form =rectangular Type =realsingle precision 2,3,23.2 PGI(MATRIX) Description i [Pg] -Static loadvector giving static loads forPiecewise Linear Analysis problem - gset. MAtrix Trailer Number ofcolumns =1 Number ofrows =g Form =rectangular Type =realsingleprecision 2.3-79\nDATA BLOCK ANDTABLE DESCRIPTIONS 2.3.24 DataBlocks Output Fromr_odule SSG2 2.3,24.1 Description [qr]- Matrix TrailerQR(MATRIX) Determinate support forces matrix -rset. Number ofcolumns Number ofrows Form Type 2.3.24.2 P0(F_TRIX) Description [Po] Matrix Trailer=number ofsubcases :r :rectangular =realsingle precision Partition oftheloadvector matrix giving loadsduetostatic force-oset. Number ofcolumns Number ofrows Form Type 2.3.24.3 PS(MATRIX) Description [Ps] Matrix Trailer:number ofsubcases :o =rectangular :realsingle precision Partition ofloadvector matrix giving loads insset. Number ofcolumns Number ofrows Form Type 2.3.24.4 PL(MATRIX) Description [P_] - Matrix Trailer=number ofsubcases :s =rectangular =real single precision Partition oftheloadvector matrix giving static loadson_set. Number ofcolumns Number ofrows Form Type:number ofsubcases : :rectangular =realsingle precision 2.3-80\nDATA BLOCK DESCRIPTIONS 2.3.25 Data Blocks Output From Module SSG3 2.3.25.1 ULV(MATRIX) Description [u_] Partition ofthedisplacement vector matrix giving displacements _set. Matrix Trailer Number ofcolumns Number ofrows Form Type=number ofsubcases=rectangular =real double precision 2.3.25.2 U_V (MATRIX) Description [u_] Partition ofthedisplacement vector matrix giving displacements intheoset. Matrix Trailer Number ofcolumns Number ofrows Form Type=number ofsubcases :o =rectangular =real double precision 2.3.25.3 RULV (MATRIX) Description [6P_] Residual vector matrix forthe_set. Matrix Trail er Number ofcolumns =number ofsubcases Number ofrows = Form =rectangular Type =real single precision 2.3.25.4 RU_V (MATRIX) Description {6Po} -Residual vector matrix fortheoset. Matrix Trailer Number ofcolumns =number ofsubcases i_umber ofrows =o Form =rectangular Type =real single precision 2.3-81\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.25.5 UBLV(MATRIX) Description [u_] -Partition ofthedifferential stiffness displacement vector -set. Matrix Trailer Number ofcolumns :1 Number ofrows : Form :rectanaular Type :realdouble precision 2.3.25.6 RUBLV(MATRIX) Description [6P] Differential stiffness residual vector -Lset. Matrix Trailer Number ofcolumns :1 Number ofrows : Form =rectangular Type :realsingle precision 2.3-82\nDATABLOCK DESCRIPTIONS 2.3.26 2.3.26.1 Descri ption [P_] Matrix TrailerDataBlocks Output FromModule SSGA. PLI(MATRIX) Partition ofloadvector forinertia relief matrix giving loads duetostatic + inertial forces on_set. Number ofcolumns Number ofrows Form Type 2.3.26.2 P_I(MATRIX) Description [Pio] Matrix Trailer=number ofsubcases=rectangular =realsingle precision Partition ofloadvector forinertia relief matrix giving loads duetoinertial force +static forces onoset. Number ofcolumns Number ofrows Form Type:number ofsubcases =o =rectangular =realsingle precision 2.3-83\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.27 DataBlocks Output FromModule SDRI 2.3.27,1 UGV(MATRIX) Description [Ug]- Matrix TrailerDisplacement vector matrix giving displacements inthegset. Number ofcolumns =number ofsubcases inCASECC Number ofrows =g Form :rectangular Type =realsingle precision 2.3.27.2 Description [Pg] - Matrix TrailerPGG(MATRIX) Static loadvector appended toinclude allboundary conditions -gset. Number ofcolumns Number ofrows Form Type=number ofsubcases inCASECC =g =rectangular =realsingle precision 2.3.27.3 Description [qg] - Matrix TrailerQG(MATRIX) Single-point constraint forces anddeterminate support forces matrix -qset. Number ofcolumns =number ofsubcases inCASECC Number ofrows =g Form :rectanqular Type =realsingle precision 2.3.27.4 PHIG(MATRIX) Description [@g] -Eigenvector matrix giving eigenvectors (displacements) inthegset. Matrix Trailer Number ofcolumns =number ofeigenvalues found inREAD Number ofrows =g Form =rectangular Type =realsingle precision 2.3-84\nDATABLOCK DESCRIPTIONS 2.3.27.5 UBGV (MATRIX) Description h [u_] -Displacement vector matrix fordifferential stiffness giving displacementssinthegset. Matrix Trailer Number ofcolumns =number offactors onaDSFACT bulkdatacard Number ofrows =g Form =rectangular Type =realsingle precision 2.3.27.6 Description [qbg] _ Matrix TrailerQBG(MATRIX) Single-point forces ofconstraint matrix fordifferential stiffness -gset. Number ofcolumns =number offactors onaDSFACT bulkdatacardi|..L_. mu_r OFrows =g Form :rectangular Type :realsingle precision 2.3.27.7 BQG(MATRIX) Description [q_] Single-point forces ofconstraint matrix forabucklinq analysis problem -gset. Matrix Trailer Number ofcolumns =number ofbuckling modes found inREAD Number ofrows =g Form =rectangular Type =realsingle precision 2.3.27.B DELTAUGV (MATRIX) Description {6Ug} -Incremental displacement vector inpiecewise linear analysis -gset. Matrix Trailer Number ofcolumns =l Number ofrows =g Form =rectangular Type =realsinqle precision 2.3-85\nDATA BLOCK ANDTABLE DESCRIPTIONS 2.3.27.9 Description {6Pg} Matrix TrailerDELTAPG (MATRIX) Incremental loadvector inpiecewise linear analysis -gset. Number ofcolumns =1 Number ofrows =g Form :rectangular Type =realsingle precision 2.3.27.10 DELTAQG (MATRIX) Description {6qg} -Incremental vector ofsinqle-point forces ofconstraint inpiecewise linear analysis -gset. Matrix Trailer Number ofcolumns =1 Number ofrows :g Form =rectangular Type =realsingle precision 2.3.27.11 CPHIP (MATRIX) Description [@p] -Complex eigenvectors inpset. Matrix Trailer lumber ofcolumns =number ofeigenvalues foundinCEAD Number ofrows =p Form =rectangular Type =complex single precision 2.3.27.12 QPC(MATRIX) Description [q] -Complex single-point forces ofconstraint -pset. Matrix Trailer Number ofcolumns =number ofeigenvalues found inCEAD Number ofrows =p Form =rectangular Type =complex single precision 2,3186\nDATA BLOCK DESCRIPTIONS 2.3.27.13 Description Matrix TrailerUPVC (MATRIX) Frequency response solution vectors -pset. Number ofcolumns Number ofrows Form Type=theproduct ofthenumber offrequencies andnumber ofloads =p =rectangular =complex single precision 2.3.27.14 UPV(MATRIX) Description [Up]Transient solution vectors -pset. Matrix Trailer Number ofcolumns =thenumber ofoutput times multiplied by3\" Number ofrows =p Form =^……I_. Type =realsingle precision *Eachtriple isdisplacement, velocity andacceleration. 2.3.27.15 QP(_TRIX) Description [qp]-Transient single-point forces ofconstraint -pset. Matrix Trailer Number ofcolumns =thenumber ofoutput times Number ofrows =p Form =rectangular Type =real single _recision 2.3-87 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28 DataBlocks Output FromModule SDR2. 2.3.28.1 UGVI(TABLE) Description Output displacement vector requests (gset,SBRTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RItem Header record Device code+lOapproach code 1 0 Subcase number LoadsetID 0 0 0 Format code Number ofwords perentry innextrecord =8 Notdefined Title Subtitle LabeT lOpoint ID+device code Point type R(TI), R(T2), R(T3), R(RI), R(R2), R(R3) Notes I.Records 1and2arerepeated foreachvector tobeoutput 2.Device code=li= 3.Format code:I: 4.Approach code 5.Pointtype =xyoutput only print punch printandpunch real real/imaginary magnitude/phase I,3,7,orI0 Ii=grid pointscalar point extra point modal point TableTrailer WordsI-6contain nosignificant values.repeat foreach point 2.3-88\nDATABLOCK DESCRIPTIONS 2.3.28.2 _UBGVI (TABLE) Description Output displacement vector requests (gset,S_RTI, real) Table Format Recor____d Wor___dd Type 0 Header record l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B l I 2 I 3-8 RItem - Device code+lOaoproach code l 0 Subcase number LoadsetID 0 0 0 Format code Nu_er ofwords perentry innext record =8 Notdefined Title Subtitle Label lOpoint ID+device code )repeat Point type \u003efor each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codeli=xyoutput only= =print =punch =print andpunch I!=real==real/imaginary =magnitude/phase 4.Approach code =4 5.Point type = Ii=gridpointscalar point extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-89\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.3 UPVI(TABLE) Description Output displacement vector requests (pset,S_RTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 1 I 2 I 3-8 RItem Header record Device code+lO*approach code I:Displacement1Velocity illAcceleration 0 Subcase number Time 0 0 LoadsetID Format code Number ofwords perentry innextrecord =8 Notdefined Title Subtitle Label lO*point ID+device code _repeat Pointtype }foreach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code= 3.Format codeli=xyoutput onlyprint punch printandpunch 4.Approach code=6=real =real/imaginary =magnitude/phase 5.Pointtype = Ii=grid pointscalar point extra point modal point TableTrailer Words I-6contain nosignificant values. 2.3-90\nDATABLOCK DESCRIPTIONS 2.3.28.4 _UPVCI (TABLE). Description Output displacement vector requests (pset,S_RTI, complex). Table Format Record Word Type 0 Header recordItem 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 1 I 2 I 3-8 R 9-14 RDevice code+lOaDproach code lO01:Displacement lOlO Velocity lOll Acceleration 0 Subcase nu_er Frequency 0 0 LoadsetID Format code Number ofwords perentry innextrecord =14 Notdefined Title Subtitle Label lOpoint ID+device code )repeat Point type tfor R(TI), R(T2), R(T3), R(RI) R(R2), R(R3)each I(TI), I(T2), I(T3), I(RI) I(R2), l(R3)_point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codeli=xyoutput only= =print =punch =print andpunch I!:real==real/imaginary =magnitude/phase 4.Approach code =5 5.Point type =Ii=gridpointscalar point extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-91\nDATA BLOCK ANDTABLE DESCRIPTIONS 2.3.28.5 OPGI(TABLE). Description Output loadvector requests (gset,SORT1, real) Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RItem Header record Device code+lOapproach code 2 0 Subcase number LoadsetID 0 0 0 Format code Number ofwordsperentryinnextrecord :8 Notdefined Title Subtitle Label lOpoint ID+device code )ReFeat Pointtype _foreach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point Notes I.Records 1and2arerepeated foreachvector tobeoutDut. 2.Device code li=xyoutput only= =print =punch =printandpunch 3.Format codeI!:real= =real/imaginary =magnitude/phase 4.Approach code =I,3,7,orI0 5.Pointtype li=gridpoint= scalar point extrapoint modalpoint TableTrailer Words I-6contain nosignificant values. 2.3-92\nDATABLOCK DESCRIPTIONS 2.3.28.6 _PPI (TABLE). Description Output loadvector requests (pset, S{_RTI, real). Table Format Record Word Type Item Header record l I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 BDevice code+lOapproach code 2 0 Subcase number Time 0 0 LoadsetID Format code Number ofwords perentry innextrecord =8 Notdefined Title Subtitle Label ! I 2 I 3-8 RlOpoint ID+device code )reDeat Point type _for each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codelixyoutput only= =print =punch =print andpunch I!=real==real/imaginary =magnitude/phase 4.Approach code =6 5.Point typeIi=gridpoint= =scalar point =extra point =modal point Table Trailer Words I-6contain nosignificant values. 2.3-93","notelower-triangular-factor-ofkll-_set#DATA BLOCK DESCRIPTIONS\n2.3.20 Data Blocks Output From Module RBMG2\n2.3.20.I LLL(MATRIX)\nDescription\n[Lz_] -\nMatrix Trailer\nNumber ofcolumns\nNumber ofrows\nForm\nType\n2.3.20.2 ULL(.MATRIX)\nDescription\n[u_]-\nMatrix Trailer\nNoteLower triangular factor ofKLL-_set.":"","typenumber-ofsubcases#DATA BLOCK DESCRIPTIONS\n2.3.25 Data Blocks Output From Module SSG3\n2.3.25.1 ULV(MATRIX)\nDescription\n[u_] Partition ofthedisplacement vector matrix giving displacements _set.\nMatrix Trailer\nNumber ofcolumns\nNumber ofrows\nForm\nType=number ofsubcases":""},"title":"Programmer's Manual P10"},"/docs/programmers/programmers_manual_011/":{"data":{"":"DATABLOCKANDTABLEDESCRIPTIONS 2.3.28.7 BPPCl(TABLE). Description Output loadvector requests (pset,S_RTI, complex). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 R 9-14 RItem Header record Device code+lOapproach code 1002 0 Subcase number Frequency 0 0 LoadsetID Format code Number ofwordsperentry innextrecord =14 Notdefined Title Subtitle Label lOpoint ID+device code _reneat Pointtype _or R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)(each I(TI), I(T2), I(T3), I(RI), i(R2), l(R3))point Notes I.Records 1and2arerepeated foreachvector tobeo_tput. 2.Device code= 3.Format codeli=xyoutput onlyprint punch printandpunch 4.Approach code=5=real =real/imaginary =magnitude/phase 5.Pointtype Ii=gridpoint=scalar point = =extrapoint =modalpoint TableTrailer Words I-6contain nosignificant values. 2.3-94\nDATA BLOCK DESCRIPTIONS 2.3.28.8 CQGI(TABLE) Description Output forces ofsingle-point constraint requests (gset,S_RTI, real). Table Format Record Wor_.__dd T_e Item 0 Header record l I 2 I 3I 4 I 5 I 6 I 7I 8I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B l I 2 I 3-8 RDevice code+lOapproach code 3 0 Subcase number LoadsetID 0 0 0 Format code Number ofwords perentry innextrecord =8 Notdefined Title Subtitle Label lOpoint ID+devicecode )reoeat Point type _foreach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))noint Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.li=xyoutput only= =print =punch =print andpunch I!=realFormat code = real/imaginary magnitude/phase 4.Approach code =I,2,3,7,orlO 5.Point typeli=gridpoint==scalar point =extra point =modal point Table Trailer Words I-6contain nosignificant values. 2.3-95\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.28.9 _QBGI (TABLE) Description Output forces ofsingle-point constraint requests (gset,S_RTI, real). Table Format Record Word Type Item 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RHeader record Device code +lOaDDroach code 3 0 Subcase number Load setID 0 0 0 Format code Number ofwords perentry innext record =8 Notdefined Title Subtitle Label lOpoint ID+device code _repeat Point type _for each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}point Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codeli=xyoutput only= =print =punch =printandpunch !=real==real/imaginary =magnitude/phase 4.Approach code=4 5.Pointtype = li=gridpointscalar point extrapoint modalpoint TableTrailer WordsI-6contain nosignificant values. 2.3-96\nDATABLOCKDESCRIPTIONS 2.3.28.10 _BQGI (TABLE). Description Output forces ofsingle-point constraint requests (gset,S_RTI, real). Table Format Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 R 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+lOapproach code 3 0 Subcase number Modenumber Eigenvalue O 0 Format code Nu_er ofwords perentry innextrecord =8 Notdefined Title Subtitle Label 1 I 2 I 3-8 RlOpoint ID+device code )repeat Point type \u003efor each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}ooint Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codeli=xyoutput only= =print =punch =print andpunch li=real==real/imaginary =magnitude/phase 4.Approach code =8 5.Point type = Ii:grid pointscalar point extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-97\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.11 _QPI(TABLE). Description Output forces ofsingle-point constraint requests (pset,S_RTI, real). Table Format Record Word Type Item 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RHeader record Device code+lOapDroach code 3 0 Subcase number Time 0 O LoadsetID Format code Number ofwords perentry innextrecord =8 Notdefined Title Subtitle Label lOpoint ID+device code )repeat Point type \u003eforeach R(TI),R(T2), R(T3), R(RI), R(R2), R(R3)_point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code = 3.Formatcodeli=xyoutput onlyprint punch print andpunch 4.Approach code =6=real =real/imaginary :magnitude/phase 5.Point typeIi:gridpoint= =scalar point =extrapoint =modalpoint Table Trailer Words I-6contain nosignificant values. 2.3-98\nDATABLOCKDESCRIPTIONS 2.3.28.12 _QPCI (TA3LE). Description Output forces ofsingle-point constraint requests (pset,S_RTI, complex). Tab]e Format Record Word Type Item 0 Header record l I 2 I 3 I 4 I 5 R/I 6 I/R 7 I/R 8 I 9 I I0 I II-50 51-82 B 83-114 B IIa–I_fU BDevice code+lOapproach code I003 0 Subcase number Frequency ormodenumber Ooreigenvalue (real oart) 0oreigenvalue (imaginary part) LoadsetID Format code Number ofwords perentry innextrecord =14 Notdefined Title Subtitle Lauel l I 2 I 3-8 R 9-14 RlOpoint ID+device code }reoeat Point type (for R(TI), R(T2), R(T3) R(RI), R(R2), R(R3)each I(Tl), I(T2), I(T3) I(RI), I(R2), I(R3)}point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code lixyoutputonly= =print =punch =print andpunch 3.Format codeli=real= =real/imaginary =magnitude/phase 4.Approach code =5,or9 5.Point type ligrid point= =scalar point :extra point =modal point Table Trailer Words I-6contain nosignificant values. 2.3-99(8/1/72)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.13 _PHIG(TABLE). Description Output eigenvector requests (gset, S_RTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 R 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RItem Header record Device code +lOapproach code 7 0 Subcase number Mode number Eigenvalue O 0 Format code Number ofwords perentry innext record =8 Notdefined Title Subtitle Label lOpoint ID+device code }repeat Point type _for each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))point iotes I.Records Iand2arerepeated foreachvector tobeoutput. 2.Device code 3 4.Format codeli=xyoutput only= =print =punch =print andhunch I!:real==real/imaginary =magnitude/phase Approach code=2,or8 5.Pointtype = li=gridpointscalar point extrapoint modal point TableTrailer Words I-6contain nosignificant values. 2.3-100\nDATABLOCK DESCRIPTIONS 2.3.28.14 _CPHIP (TABLE). Description Output eigenvector requests (pset,S_RTI, complex). Table Format Record Word 1 I 2 I 3 I 4 I 5 I 6 R 7 R 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B l I 2 I 3-8 R 9-14 RItem Header record Device code+lOapproach code I007 0 Subcase number Mode number Eigenvalue (real part) Eigenvalue (imaginary part) 0 Format code Number ofwords perentry innextrecord =14 Notdefined Title Subtitle Label lOpoint ID+device code )repeat Point type {for R(TI), R(T2), R(T3),R(RI) R(R2!, R(R3)each I(TI),I(T2), I(T3), I(RI) I(R2},l(R3)}point Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codelixyoutput only= :print =punch :print andpunch li:real= :real/imaginary =magnitude/phase 4.Approach code:9 5.Point type =Ii gridpointscalar point extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-101\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.15 OESl(TABLE). Description Output element stress requests (S_RTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I/R 6 R/I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 2 1 I 2-NWDS MixedItem Header record Device code +lOapproach code 5 Element type Subcase number Time, Load setID,ormode number Eigenvalue or0 0 Load setIDor0 Format code Number ofwordsperentry innextrecord =NWDS Notdefined Title Subtitle Label lOelement ID+device code Element stress data See2.3.51 fordetailsreoeat foreach element Notes I.Records 1and2arerepeated foreachvector tobeoutput. li=xyoutput only2.Device code= print punch printandpunch {!=real3.Format code = real/imaginary magnitude/phase 4.Approach code =l,2,3,6,7,orlO TableTrailer WordsI-6contain nosignificant values. 2.3-102\nDATABLOCK DESCRIPTIONS 2.3.28.16 _ESBI (TABLE). Description Output ele(,ent stress requests (S_RTI, real). Table Format Record Word Type l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-114 B II5-146 B 2 l I 2-NWDS MixedItem Header record Device code+lOapproach code 5 Element type Subcase nu_er LoadsetID 0 0 Q FBrmat code Number ofwords oerentry innextrecord =NWDS Notdefined Title Subtitle Label lOelementID+device code Element stress data See2.3.51 fordetailsrepeat foreach element Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codeli=xyoutput only= =print =punch =print andpunch !=real= =real/imaginary =magnitude/phase 4.Approach code =4 Table Trailer Words I-6contain nosignificant values. 2.3-I03\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.17 _BESI(TABLE). Description Output element stress requests (S_RTI, real). Table Format Record Word Type Header recordItem l I 2 I 3 I 4 I 5 I 6 R 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 2 1 I 2-NWDS MixedDevice code+lOapproach code 5 Element type Subcase number Modenumber Eigenvalue 0 0 Format code Number ofwords perentry innext record =NWDS Notdefined Title Subtitle Label lOelement ID+device code }repeat Element stress data IforeachSee2.3.51 fordetails element Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Devicecode= 3,Format codeli:xyoutput onlyprint punch print andpunch I!=real= =real/imaginary =magnitude/phase 4.Approach code =8 Table Trailer Words I-6contain nosignificant values. 2.3-104\nDATABLOCKDESCRIPTIONS 2.3.28.18 _ESCI(TABLE). Descri ption Output element stress requests (SBRTI, complex). Table Format Record Word Type Header recordItem l I 2 I 3 I 4 I 5 RII 6 I/R 7 I/R 8 I 9 I lO I ll-50 51-82 B 83-I14 B !!5-146 BDevice code+lOapproach code I005 Element type Subcase number Frequency ormodenu_er 0oreigenvalue (real part) 0oreigenvalue (imaginary part) LoadsetID Format code Number ofwords perentry innextrecord =NV_S Notdefined Title Subtitle Label 2 l I 2-NWDS MixedlOelement ID+device code Element stress data See2.3.51 fordetailsreoeat foreach element Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.li=xyoutput only= =print =punch =print andpunch li:realFormat code = real/imaginary magnitude/phase 4.Approach code =5,or9 Table Trailer Words I-6contain nosignificant values. 2.3-I05\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.19 _EFI(TABLE). Description Output element force requests (SBRTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I/R 6 :/R 7 I 8 I 9 I IO I ll-5O 51-82 B 83-I14 B I15-146 B 2 l I 2-NWDS MixedItem Header record Device code+lOapproach code 4 Element type Subcase number Time, loadsetID,ormodenumber 0oreigenvalue 0 LoadsetIDor0 Format code Number ofwords perentry innext record =NWDS Notdefined Title Subtitle Label lOelement ID+device code Element force data See2.3.52 fordetailsrepeat foreach element Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code 3.Format codelixyoutput only: =print =punch =print andpunch li=real= =real/imaginary =magnitude/phase 4.Approach code =l,2,3,6,7,orlO Table Trailer Words I-6contain nosignificant values. 2.3-I06\nDATABLOCKDESCRIPTIONS 2.3.28.20 _EFBI(TA3LE). Description Output element force requests (S_RTI, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 2 l I 2-NWDS MixedItem Headerrecord Device code+lOapproach code 4 Element type Subcase nu_er Load setID 0 0 0 Format code Number ofwords perentry innextrecord =NWDS Notdefined Title Subtitle Label lOelement ID+device code Element force data See2.3.52 fordetailsreneat foreach element Notes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code = 3.Format codeli=xyoutput onlyprint punch print andpunch I!=real==real/imaginary =magnitude/phase 4.Approach code =4 Table Trailer Words I-6contain nosignificant values. 2.3-107\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.28.21 OBEFI(TABLE). Description Output element forcerequests (SORT1, real). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 R 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 2 1 I 2-NWDS MixedItem Header record Device code+lOannroach code 4 Element type Subcase number Modenumber Eigenvalue 0 0 Format code Number ofwordsperentryinnextrecord =N!_DS Notdefined Title Subtitle Label lOelement ID+device code }repeat Element forcedata Iforeach See2.3.52 fordetails element Notes I.Records 1and2arerepeated foreachvector tobeoutput. li=xyoutput onlyprint 2.Device code= punch printandpunch {!=real3.Format code= =real/imaginary =magnitude/phase 4.Approach code=8 TableTrailer WordsI-6contain nosignificant values. 2.3-108\nDATABLOCKDESCRIPTIOHS 2.3.28.22 BEFCI(TABLE). Description Output element forcerequests (S_RTI, complex). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 R/I 6 I/R 7 I/R 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 2 1 I 2-NWDS MixedItem Header record Device code+lOapproach code 1004 Element type Subcase number Frequency ormodenu_er 0oreigenvalue (realDart) 0oreigenvalue (imaginary part) LoadsetIDor0 Format code Number ofwords oerentryinnextrecord :N_,tDS Notdefined Title Subtitle Label lOelement ID+device code Element force data See2.3.52 fordetailsIreoeat foreach element i’_otes I.Records 1and2arerepeated foreachvector tobeoutput. li=xyoutput onlyprint 2.Device code= punch printandpunch !:real3.Format code =real/imaginary magnitude/phase 4.Approach code=5,or9 TableTrailer Words I-6contain nosignificant values. 2.3-109\nDATABLOCK ANDTABLE DESCRIPTIONS 2.3.28.23 Description NotePUGVl (matrix -seenotebelow) PUGVl contains thetranslation components ofUGVIrotated tothebasic coordinate system. Thefirst fourwords ofeachlogical record (column) contain identification dataforthe column. These words mustbereadprior tocalling theappropriate unpacking routine. Wordl=subcase number Word2=l Word3=static loadsetID Word4=0 Matrix Trailer Trailer issameasthatforUGVlexcept word l=O,andword6=0(seesection 2.3.36.1). 2.3-II0\nDATABLOCKDESCRIPTIONS 2.3.28.24 Description NotePUBGVI (matrix -seenotebelow) PUBGVI contains thetranslation components ofUBGV rotated tothebasic coordinate system. Thefirst fourwords ofeachlogical record (column) contain identification dataforthe column. These words n_stbereadprior tocalling theappropriate unpacking routine. Wordl=subcase number Word2=l Word3=static loadsetID Word4=0 Matrix Trailer Trailer issameasthatforUBGVwithword1=O,andword 6=O. 2.3-III\nDATA BLOCK ANDTABLE DESCRIPTIONS 2.3.28.25 PPHIG (matrix -seenote below) Description PPHIG contains thetranslation components ofPHIG rotated tothebasic coordinate system. Note Thefirst four words ofeach logical record (column) contain identification data forthe column. These words must beread prior tocalling theappropriate unpacking routine. Word l=subcase number Word 2=2 Word 3=mode number Word 4=eigenvalue (X) Matrix Trailer Trailer issame asthat forPHIG with word l=O,andword 6=O,(see section 2.3.27.4). 2.3-112\nDATABLOCKDESCRIPTIOiIS 2.3.28.26 PUGV(matrix-seenotebelow) Description PUGV contains thetranslation components ofUPV(excluding extra points) rotated tothebasic coordinate system. Note Thefirst four words ofeach logical record (column) contain identification data forthe column. These words must beread prior tocalling theappropriate unpacking routine. Word l=subcase number Word 2=3 Word3=0 Word4=time Matrix Trailer Trailer issameasthatforUGVwithword1=O,andword6=O,(seesection 2.3.27.1). 2.3-113"},"title":"Programmer's Manual P11"},"/docs/programmers/programmers_manual_012/":{"data":{"":"DATABLOCKANDTABLEDESCRIPTIONS 2.3.29 DataBlocks Output FromModule DPD 2.3.29.1 GPLD(TABLE) Description GridPointListDynamics. Onelogical record whichcontains alistofallgridpoints, scalar points andextrapoints inthemodelininternal sort. Table Format Record Word Type 0 1 1 I n I 2 TableTrailer Word1 Word2-6Item Header record IDforfirst point IDfornthpoint End-of-file =number ofgridpoints +number ofscalar points +number ofextrapoints. =zero. 2.3.29.2 SILD (TABLE) Description Scalar Index List Dynamics. Twological records. First logical record contains scalar index values inthep-displace- ment setforeach point inthedynamics model (internal order). These values aredefined asfollows: SILDl =l (SILD. +6ificorresponds toagrid point SILDi+ l_SILD I+lificorresponds toascalar oranextra point Thesecond logical record contains anequivalence between scalar index values inthe g-displacement setandscalar index values inthep-displacement set. 2.3-114\nDATABLOCKDESCRIPTIONS TableFormat Record 0 l 2 3 Table TrailerWord Type Item Header record 1 I Scalar indexforfirstpoint • _ \" n I Scalar indexfornthpoint I,2 I SILvalue, SILDvalue 2m-l,2m I SlLvalue, SlLDvalue End-of-file Word1=degrees offreedom inthep-displacement set(LUSETD). Word2=number ofextrapoints. Word3-6=zero. 2.3.29.3 USETD (TABLE) Description Displacement setdefinitions table dynamics. USETD contains onelogical record. Each word corresponds toeach degree offreedom inthe p-displacement set(ininternal order) andcontains ones inspecified bitpositions indicat- ingthedisplacementsets towhich thepoint belongs. Table Format RecordWord Type Item Header record 1 L Mask forfirst degree offreedom n L Mask fornthdegree offreedom End-of-file Notes Bitpositions forthevarious displacement sets aredefined asfollows: LdIfelnelPlelsb]Sgl _IaIf]nJgIrl°ls]mI 17181920212223242526272829303132 2.3-115\nDATABLOCKANDTABLEDESCRIPTIONS Table Trailer Word1= Word2= Word3= Word4= Word5: Word6=degrees offreedom inthep-displacement set(LUSETD). number ofextrapoints. zero. logical “or\"ofallUSETDmasks. zero. zero. 2.3.29.4 EED(TABLE) Description Eigenvalue Extraction Data. TheEEDcontains onelogical EIGP, EIGR). Table Format Record Word 0 1 2 3 4 5 Detailed format forEIGBdata: Word Type I-3 I 4 I 5-6 B 7-8 R 9-11 I 12 R 13-14 B 15 I 16-21record foreacheigenvalue extraction cardtype(EIGB, EIGC, Eachlogical record contains datafromallcardsofagiventype. Item Header record EIGBdata(ifEIGBcards inbulkdata) EIGCdata(ifEIGCcards inbulkdata) EIGPdata(ifEIGPcards inbulkdata) EIGRdata(ifEIGRcards inbulkdata) End-of-file Itern 107,I,0 SetID Method F,F1 2 Ne,Nd,Nz E Norm Ifnorm=“P_INT”, SILvalue in a-set ofnormalization point Notdefinedrepeated foreach EIGBcard inbulkdata 2.3-I16 (711170)\nDATA BLOCK DESCRIPTIONS Detailed format forEIGCcard: Word Type I-3 I 4 I 5-6 B 7-8 B 9 I I0 II R 12-13 14-15 R 16-17 R 18 R 19-20 I 21 14+8k-21 +8k IItem 207,2,0 SetID Method Norm IfNorm=“P_INT”, SILvalue inanalysis setofnormalization point Notdefined E Notdefined _a’_a }repeated _b’_b Iforeach region Ne,Nd definition Notdefined -l(k=number ofregions) Detailed format forEIGPcard: Word Type 1-3 I 5 I 6-7 R 8 IItem 257,4,0 SetID_repeated for _,m\u003eeach EIGPcard M _inbulkdata Detailed format forEIGRcard: Word Type Item I-3 I 4 I 5-6 B 7-8 R 9-11 I 12 R 13-14 B 15 I 16-21307,3,0 SetID Method F,FI 2 Ne,Nd,Nz E Norm Ifnom=“P_INT”, SIkvaluein a-setofnormalization point Notdefinedrepeated foreach EIGRcard inbulkdata Table Trailer Word l= bit17=IifEIGBrecord exists 18=lifEIGCrecord exists 19=lifEIGPrecord exists 20=lifEIGRrecord exists other bits=0 Word 2-6=zero.repeated foreach EIGCcard inbulkdata 2.3-117 (7/1/70)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.29.5 EQDYN(TABLE) Description Equivalence between external points andscalar indexvalues -dynamics• EQDYNcontains twological records. Thefirst record contains pairsofexternal point numbers andscalar indexvalues inthep-displacement setforthepoints inexternal order. Thesecond record isessentially thesameasthefirstexcept thatthetypeofp_(grid, scalar, extra) iscoded inthesecond wordofthepair. TableFormat Record Word Type 1,2 I 2n-l,2n IItem Header record IDforfirstpoint, scalar indexforfirstpoint IDfornthpoint, scalar indexfornthpoint 3 Note Type= TableTrailer Word1 Word2 Word3-61,2 I 2n-I,2n IIDforfirst point, lOscalar index +type IDfornthpoint, lOscalar index +type End-of-file I!forgridpointforscalar point forextrapoint =number ofgridpoints +number ofscalar points +number ofextrapoints indynamics model• =number ofextrapoints• =zero. 2.3-118\nDATABLOCK DESCRIPTIONS 2.3.29.6 TFP_OL (TABLE). Descri ption Transfer Function Pool. TheTFP_L datablock containsonelogical record foreach transfer function setdefined in thebulkdataonaTFbulkdata card. Point andcomponent values areconverted torowand column numbers inthep-displacement set. Table Format Record Word T_pe Item O Header record l I 2 I 3-5RSetID 65536*column n_er +rownun_er Coefficientsrepeated foreE;chsetof non-zero terms Same format asfirst record n+l End-of-file Table Trailer Word l Word 2-6=nu_U_er oftransfer function sets. =zero. 2.3.29.7 DLT(TABLE). Description Dynamic LoadsTable. Theheaderrecord oftheDLTcontains asummary ofalldynamicloadsetsdefined inthe problem. Thefirst record oftheDLTcontains allDLgAD cards (ifDLCAD cards havebeen input). Each succeeding record contains alldataforonedynamic loadset. TableFormat Record Word Type Item I-2 B 3 I 4-3+m I 4+m-3+m+n IDatablock name m=number ofDL_AD setID’s SetID’sonDL_AD cards SetID’sonRL_ADI, 2andTL_ADI, 2cards l 2 3-4I R R,ISetID Scale factor Scale factor, setID -!,-lrepeated foreach DL_AD card 2.3-I19 (12-I-69)\nDATABLOCKA;_DTABLEDESCRIPTIONS Record Word Type Item n+2l I 2 I 3-8 9 I 10-12 RDynamic loadcardtype =0notimedelays Ip0timedelays SeeNotes SILnumber Irepeated foreach A,,e_dynamic loadset End-of-file Notes l°IfnoDL_ADcardshavebeeninput, thethirdwordoftheheader record iszeroandthe DL@ADrecord doesnotexist. Therefore, record 1oftheDLTcorresponds totheload setdefined inword4oftheheader record. 2.DL_AD-set ID’sareinsortbysetID.Inrecord I,setID’swithin aDL_ADcardare insort. 3.Within otherrecords, dataisinsortbySILnumber. 4.Formats bydynamic loadcardtypeareasfollows: 1=RL@ADI Word _ Item 3 I Table IDforC(f) 4 I Table IDforD(f) 5-8 Notdefined 2=RL@AD2 Word Type Item 3 I Table IDforB(f) 4 I Table IDfor@(f) 5-8 Notdefined 3:TL_ADI Word Type Item 3 I Table IDforF(t) 4-8 Notdefined 4=TL_AD2 Word Type Item 3-4 R TKI,TK2 5-6 R IVK’_K 7-8 R nK’_K TableTrailer WordI:GIN_filenameofDLT. Word2-6=undefined. 2.3-120\nDATABLOC/,DESCRIPTIOHS 2.3.29.8 PSDL(TABLE) Description PowerSpectral Density List. Thefirstlogical record ofthePSDLcontains RANDPS data. Subsequent logical records contain RANDTdata,onesetperlogical record. EachPJ_NDTlogical record contains a sorted listofunique timelagsdefined intheset. Table Format Record Word Type Item 0 1,2 B Datablockname 3 I RANDTsetID I 2+n I RANDTsetIDn 1 I RANDPS setID 2 I LoadsetID 3 I LoadsetID 4,5 R Complex number 6 I Table ID i-m R Timelagsrepeated foreach RANDPS cardin bulkdata n+l n+2Sameformat asrecord 2 Databelongs toRANDTsetIDn End-of-file Notes I. 2,RANDPS cardsmustbepresent fordatablocktoexist. Therefore, record onealways contains RANDPS data. IfnoRANDTI orRANDT2 cardsarepresent inthebulkdata,theheader record will contain exactly twowords andrecord twowillbeanend-of-file, TableTrailer _number ofRANDTsets,orWord1 65535 ifnoPJ_NDTsetsexist. Word2-6=zero. 2.3-121\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.29.9 FRL(TABLE) Description Frequency Response List. TheFRLcontains onelogical record foreachdifferent frequency setdefined inthebulk data. Eachrecord contains asorted listoftheunique frequencies defined intheset. Table Format Record Word Type Item 0 1,2 B Datablockname 3 I SetID 1 2+n I 1 l-m R n l-k RSetIDn Frequencies belonainq tosetID 1 Frequencies belonging tosetIDn n+l End-of-file TableTrailer Word1=number offrequency sets. Word2-6=zero. 2.3.29.10 NLFT(TABLE) Description Non-Linear Forcing Table. Theheader record oftheNLFTcontains asorted listofsetidentification numbers forall N_LINsetsdefined inthebulkdata. Eachloqical record oftheNLFTcontains alldatafor asingle set.Pointandcomponent numbers ontheN_LINcardsareconverted toscalar index values inboththed-ande-displacement sets. TableFormat Record Word Type Item 0 1,2 B Datablock name 3 I SetID 1 2+n I SetID n 2.3-122\nDATABLOCK DESCRIPTIONS Record Word Type I I type=1= type=2= type=3= type=4= type:1: type:2: type=3= type=4=Item Typeofnonlinear load(l_type=4) SILvalue ind-set SILvalue ine-set Scale factor SILvalue ind-set SILvalue ine-set Table ID(inteqer) SILvalue ind-set(inteqer) Scale factor (real) Scale factor (real) Notdefined SILvalue ine-set (inteqer) Notdefined Notdefinedrepeated for eachN_LIN card inset Sameformat asrecord I. Databelongs tosetIDn. n+l End-of-file Note Within each record, thedataissorted onwordZofeach8-word entry intherecord. Table Trailer Word l=number ofN_LIN sets. Word 2-6=zero. 2.3-123\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.29.11 TRL(TABLE). Description Transient Response List. Theheader record oftheTRLcontains alistofalltransient initial condition set identifications inthebulkdata. Subsequent logical records contain TICdataforeach set(onesetperlogical record). IfTSTEPcardsareoresent inthebulkdata,thisdata follows theTICdata,onelogical record foreachTSTEP set. TableFormat Record Word _ Item 0 1,2 B Datablockname 3 I Number ofTICsets 4 I SetID I 3+n I 4+n I 1 I 2,3 RSetIDn Degrees offreedom inthed-displacement set SILvalueind-set _repeated foreachinitial Uo,V° [condition inset Sameformat asrecord 1 Databelongs tosetIDn n+l n+m1 I TSTEP setID 2 I N_repeated for 3 R Atleach interval 4 I NOinset Sameformat asrecord n+l n+m+l End-of-file Notes I. 2. 3.Datawithin eachTICrecord issorted onword1ofeach3-word entry. Ifword3oftheheader record =O,thenthefirstlogical record oftheTRLcontains TSTEPdata. IfTSTEPdataisnotpresent inthebulkdata,andend-of-file willfollow thelast TICrecord. TableTrailer Word1=number ofTICsets. Word2=number ofTSTEP sets. Word3-6=zero. 2.3-124\nDATA BLOCK DESCRIPTIOAS 3.30 Data Blocks Output Froni idodule READ Descri rti co A - r!ml Ei:envalue Tshle a Table For!iat 2ecord :lord Tvne - - I tell: 0 tlcader record GFP ID record 1 I 2 1 2 I 9 3 I 0 e-9 I ? 19 I 7 11-50 Not defined 51-146 Title, subti tic, and label frolii /QUTnl’T/ GFP data record 1 I vo\u0026 IJI~’\u003e?~ * ? Extraction order 3 l? h - ?i jenvalu? 4 K f =m 5 K w = f/2n G R Generalized mass 7 R Generalized stiffness\nThe seven data words in record 2 repeat for each eigenvalue found in READ. Table Trailer Mon-zero trailer Cescription [ a ] - Eigenvectors nlatrix giving the eigenvectors (disp1acen:ents) in the a set. a Matrix Trai ler Number of columns = number of eigenvectors found in READ Number of rows = a Form = rectangular TY pe = real single precision DATABLOCKANDTABLEDESCRIPTIONS 2.3.30.3 MI(MATRIX) Descriptior_ [mi]-ModalMassMatrix MatrixTrailer Number ofcolumns =numberofeigenvectors foundinREAD Number ofrows =number ofeiQenvectors foundinREAD Form =gener_l Type =realsingle precision 2.3.30.4 _EIGS (TABLE) Description RealEigenvalue Summary Table TableFormat Record Word Type Header record 1 I 21 2 I 9 3 I 2 1 4 4 I 0 5 I 0 6 I 0 7 I 0 8 I 0 9 i 0 10 I 0 Words 11-17 depend onthemethod used.Itern Determinant Method:IfInverse PowerMethod IfDeterminant Method ifGivens Method II I Number 12 I Number 13 I Number 14 I Number 15 I Number 16 I Number 17 I Reason l 2ofeigenvalues extracted ofpasses through starting points ofcriteria changes ofstarting point moves oftriangular decompositions offailures toiterate toaroot fortermination -Allrequested roots formed -Outofregion predictions fromevery starting point -Insufficient timetoextract another root -Everywhere singular matrix 2.3-126 (8/I/72)\nDATABLOCKDESCRIPTIONS Record Word Type Itern Inverse PowerMethod: II 12 13 14 15 16 17Number ofeigenvalues extracted Number ofstarting points used NumbEr ofstarting points moved Number oftriangular decompositions Number ofvector iterations Dummy Reasons fortermination l-2Singularities encountered inarow 2-4Shifts while tracking oneroot 3-Regions completed 4-3*Number ofestimated roots werefound 5-Allroots ofproblem found 6-Number desired roots found 7-outside maximum range 8-Insufficient timetoextract another root 9-200iterations and1shiftpointmnve before locating aroot Givens Method: II I Number 12 I Number 13 I Number 14. I …….. 15 I Dummy 16 I Dummy i7 I Reason l 18 R 19 I 20 I 21 I 22-50 51-146 Bofeigenvalues extracted ofeigenvectors compLeted offailures toconverge toaneigenvalue ofc…..toconverge toan_go_\"÷ fortermination -Normal termination 3-Insufficient timetoevaluate eigenvectors Value ofoff-diagonal element ofmodal massmatrix having largest magnitude (zero where notapplicable) Column of18inMI Rowcf18inMI Number ofoff-diagonal elements ofmodal mass matrix thatfailtomeet error criterion Notused Title, subtitle, label Records 2and3exist onlywhentheDeterminant Method isused. 1 I 21 2 I 9 3 I 3 4 I 0 5 I 0 6 Z 0 7 I 0 8 I 0 9 I 0 I0 I 6 11-50 Notused 51-146 B Title, subtitle, label l I 2 R 3 R 4 R 5 RStarting point ID ,-Starting point =- Starting point f=/2-Starting point Determinant at_,Words I-6arerepeated foreach starting point 2.3-127 (8/I/72)\nDATABLOCKDESCRIPTIONS Record Word 6Type RItem Scalefactor (powerofI0) ofdeterminant ! End-ef-file Table Trailer Nonzero 2.3-127a (12-I-69)\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.31 DataBlocks Output From’_odule DS_GI 2.3.31.1 KDGG{MATRIX) DescriFtion Kd [gg] Matrix TrailerPartition ofdifferential stiffness matrix -gset. Number ofcolumns =(! _lumber ofrows =g Form =symmetric Type =realdouble precision 2.3-128\nDATA BLOCK DESCRIPTIONS 2.3.32 2.3.32.1 Description [K_a] Matrix TrailerData Elocks Output From HoduleSHP2 KDAA (MATRIX) Partition ofdifferential stiffness matrix -aset. Number ofcolumns =a Number ofrows =a Form =symmetric Type =real double precision 2.3-129\nDATABLOCKANDTA[SLEDESCRIPTIONS 2.3.33 DataBlocks Output FromModulc DSHG2 2.3.33.1 Description [Kb_] Matrix TrailerKBLL(MATRIX) Partition ofthestiffness matrix ofthefirstorderannroximation to larqedisplacements -_set. Number ofcolumns = Humber ofrows = Form =symmetric Type =realdouble precjsi_on 2.3.33.2 KBFS(MATRIX) Description [K_s]- Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to largedisplacements. Number ofcolumns =s Number ofrows =f Form =rectanqular Type =realdouble precision 2.3.33.3 KBSS(MATRIX) Description Matrix TrailerPartition ofthestiffness matrix ofthefirstorderapproximation to larqedisplacements -sset. Number ofcolumns =s Number ofrows =s Form =symmetric Type =realdouble precision 2.3-130\nDATABLOCKDESCRIPTIO;_S 2.3.33.4 PBL(!IATRIX) Description I\u003c}-Partition oftheloadvector ofthefirstorderapproximation tothe largedisplacements -_set. Matrix Trailer Number ofcolumns =1 Number ofrows = Form =rectangular Type =realsingle precision 2.3.33.5 PBS(MATRIX) Description Partition oftheloadvector ofthefirstorderannroximation tothe largedisplacement problem -sset. Matrix Trailer I_umber ofcolumns =1 Number ofrows =s Form =rectangular Type =realsingle precision 2.3.33.o YBS(MATRIX) Description IY sl-Partition oftheconstrained displacement vector ofthefirstorder approximation tothelargedisplacement vector -sset. Matrix Trailer Number ofcolumns =1 Number ofrows =s Form =rectangular Type =realsingle precision 2.3.33.7 UBO_V (MATRIX) Description Io°blPartition ofthedisplacement vector ofthefirstorderapproximation tothe largedisplacement problem -oset. Matrix Trailer Number ofcolumns =1 Number ofrows =o Form =rectangular Type =realsingle precision 2.3-131\nDATABLOCKANDTABLEDESCRIPTIO,S 2.3.34 2.3.34.1 KGGXL(MATRIX). Description ,x [,ggJ - Matrix Trailer Number ofcolumns Number ofrows Form Type 2.3.34.2 ESTL(TABLE). DescriptionDataBlocks Outout FromModule PLAI. Stiffness matrix oflinear elements exclusive ofgeneral elements -gset. =g =g =symmetric =realdouble precision Element Summary TableforLinear Elements. TheESTLcontains datacopied fromtheESTdatablock. theESTLonlyifitisalinear element ofthemodel. TaLleFormat Sameformat astheESTdatablockoutput frommodule TAI. TableTrailer Word1=number ofelement entries inESTL. Words 2-6=zero.Anelement’s ESTdataresides in 2.3-132"},"title":"Programmer's Manual P12"},"/docs/programmers/programmers_manual_013/":{"data":{"":"DATABLOCK DESCRIPTIONS 2.3.34.3 ESTNL (TABLE). Descri ption Element Summary Table forNon-Linear Elements. TheESTNL, usedonlyinthePiecewise Linear Analysis Rigid Format, isconstructed fromthe Element Sun,mary Table (EST). Itcontains onelogical record foreach element typeforwhich at least oneelement ofthattypeisnon-linear (anelement isdefined tobenon-linear ifits modulus ofelasticity isdefined asthefirst derivative ofastress-strain tabular function input onaTABLESI bulkdata card) andforwhich arequest forstress output isfound. Thecon- struction oftheESTNL isasfollows: theESTdatablock isreadandeachelement istested for possible non-linearity. Iftheelement isnon-linear andtheuserhasrequested element stress datatobeoutput, itselement dataiscopied ontotheESTNL datablock andthen initial stress dataisappended. Theonly elements admissible totheESTNL are: RQD,TUBE, C_NR_D, BAR,TRMEM, TRIAl, TRIA2, QDMEM, QUADI, QUAD2. Table Format Record Word Item 0 Header record l 2toN+l i!.(. _._11'4\"1\" IElement type (integer) }repeated for Element ESTdata _repeated foreach !each admissible E!..mme._nt stress data_non-!inear element element tyne Notes l• 2.Nisthenumber ofwords intheESTdatasection. Misthenumber ofstress words appended. Thenumber ofrecords intheESTNL corresponds tothenun_Der ofseparate admissible element types forwhich atleast oneelement isnon-linear. Table TraiIer Word l =total number ofelements intheESTNL. Words 2-6=zero. Detailed ESTNL Formats R_D,C@NR_D: Word Item 1-17 18 19 20 21ESTdata E0,previobs strain value onceremoved, initially zero ,previous strain value, initially zero E,thepreviously calculated modulus ofelasticity, initially thevalue ofEgiven aMATIcard. T,thepreviously calculated torsional moment, initially zero 2.3-133\nDATABLOCKANDTABLEDESCRIPTIONS TUBE: Word 1-16 17-20Item ESTdata Sameaswor_s18-21fortheR_D. BAR: Word 1-42 43 44 45 46 47 48 49 5OItem ESTdata Go,previous strain value onceremoved, initially zero E,previous strain value, initially zero E,thepreviously calculated modulus ofelasticity, initially thevalue ofEgiven onaMAT1 card V1 V2 *Theprevious element forces, initially zeroT HIa _‘I2a TRMEM: TRIAl:Word 1-21 22 23 24 25 26 2]7Item ESTdata co,previous strain valueonceremoved, initially zero c,previous strain value, initially zero E,thepreviously calculated modulus ofelasticity, initially the valueofEgivenonaHAT1card _X _yThecurrent membrane stresses, initially zero °xy Word 1-27 28-33Item ESTdata Sameaswords22-27fortheTRMEM 2.3-134 (12-I-69)\nDATABLOCK ANDTABLE DESCRIPTIONS Word 34 35 36 37 38Mx My Mxx Vx =k VyItem Theprevious element forces, initially zero TRIA2: Word 1-27 28-32Item Sameaswords 1-27fortheTRMEM Sameaswords 34-38 fortheTRIAl QDHEM: Word 1-26 27-32Item ESTdata Sameaswords 22-27 fortheTRMEM QUADI: Word 1-32 33-38 39-43Item ESTdata Sameaswords22-27fortheTRMEM Sameaswords34-38fortheTRIAl QUAD2: Word 1-26 27-32 33-37Item ESTdata Sameaswords22-27fortheTRMEM Sameaswords34-38fortheTRIAl 2.3-134a (12-I-69)\nDATA3LOCKDESCRIPTIONS 2.3.34.4 ECPTNL (TABLE). Description Element Connection andProperties Table for_Ion-Linear Elements. TheECPTNL, usedonlyinthePiecewise Linear Analysis RigidFormat, isconstructed fromthe ECPTdatablock. TheECPTNL contains onelogical record foreachgridpointorscalar pointof themodel. Eachlogical record contains Element Summary Table (EST)dataplusinitial element stress dataappended tothisdataforeachnon-linear element connected tothepivot point. (An element isdefined tobenon-linear ifitsnmdulus ofelasticity isdefined asthefirstderivative ofastress-strain tabular function inputonaTABLESl card). Theonlyelements admissible tothe ECPTNL are:R_D,TUBE,C_NR_D, BAR,TRMEM, TRIAl, TRIA2, QDMEM, QUADI, QUAD2. Table Format Record Word Item 0 Header record 1 l 2 3toN+2 N+3toN+M+2SILnumber for\"Divot\" arid orscalar point(integer) Element type(integer)}reDeated foreach Element ESTdata _non-linear element Element stress data )connected tothepivot n+l End-of-filereheated foreachorid orscalar nointinthe model Notes I.Nisthenumber ofwordsintheESTdatasection. Misthenund_er ofstress wordsappended. Thenumber ofstress wordsappended in generating theECPTNL datablockisnotthesameasingenerating theESTNLdatablock. 2.nisthetotalnumber ofgridandscalar points inthemodel. 3.Ifallelements connected toapivotpointarelinear, thentherecord contains only oneword,thepivotpointsetnegative. TableTrailer Word1=totalnumber ofelement entries intheECPTNL. Words 2-6=zero. Detailed ECPTNL Formats R_D,C_NR_D: Word 1-20Item SameasESTNLdata. Noteword21oftheESTNL isnotpresent intheECPTNL datafortheR_D,C_NR_D. 2.3-135\nDATABLOCKANDTABLEDESCRIPTIONS TUBE: BAR:Word 1-19Item SameasESTNLdata. Noteword20oftheESTNLisnot present intheECPTNL datafortheTUBE. TRMEM:Word 1-45Item SameasESTNLdata. Notewords 46-50oftheESTNLarenot present intheECPTNL datafortheBAR. Word 1-27Item SameasESTNLdata. TRIAl: TRIA2:Word 1-33Item SameasESTNLdata. Notewords 34-38oftheESTNLarenot present intheECPTNL datafortheTRIAl. QDMEM:Word 1-27Item SameasESTNLdata. Notewords 28-32oftheESTNLarenot present intheECPTNL datafortheTRIA2. Word 1-32 SameasESTNLdata.Item QUADI: Word 1-38Item Same asESTNL data. Note words 39-43 oftheESTNL arenot present intheECPTNL data fortheQUADI. 2.3-136 (12-I-69)\nDATABLOCKANDTABLEDESCRIPTIONS QUAD2: Word 1-32Item SameasESTNLdata. Notewords 33-37oftheESTNLarenot present intheECPTNL datafortheQUAD2. 2.3-136a (12-I-69)\nDATABLOCK DESCRIPTIONS 2.3.35 DataBlocks Output FromModule ADD 2.3.35.1 KGGSUM (MATRIX) Description Sumof[K_g] and[K_]. Usedonly inthePiecewise Linear Analysis Rigid Format andisequivalent to[Kgg]. Matrix Trailer Number ofcolumns =g Number ofrows =g Form =symmetric _vpe =realdouble precision 2.3.35.2 PG(14ATRIX) Description MatrixTrailer Number ofcolumns Number ofrows Form TypeIncremental loadvector used inPiecewise Linear Analysis. =l =g =rectangular =realsingle precision 2.3.35.3 KDAAM (MATRIX) Description Kdml-Thenegative of[K_a] (seesection 2.3.32).aa- UsedonlyintheBuckling Analysis Rigid Format. HatrixTrailer Number ofcolumns =a Number ofrows =a Form =symmetric Type =realdouble precision 2.3-137\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.36 DataBlocks Output FromModule PLA2 2.3.36.1 UGVl(MATRIX) Description [uldMatrix ofsuccessive sumsofincremental displacement vectors -gset. UsedonlyinthePiecewise Linear Analysis RigidFormat. Matrix Trailer Number ofcolumns =number offactors onaPLFACT bulkdatacard Number ofrows =g Form =rectangular Type =realsingle precision 2.3.35.2 PGVI(MATRIX) Description 1 [P_] -Matrix ofsuccessive sumsofincremental loadvectors -aset. yonlyinthePiecewise Linear Analysis RiqidFormat. Matrix Trailer Number ofcolumns =number offactors onaPLFACT bulkdatacard Number ofrows =g Form =rectangular Type =realsingle precisionUsed 2.3.36.3 QGI(MATRIX) Description [qld Matrix TrailerMatrix ofsuccessive sumsofincremental vectors ofsingle pointconstraint forces -gset.UsedinthePiecewise Linear Analysis RigidFormat only. Number ofcolumns =number offactors onaPLFACT bulkdatacard humber ofrows =q Form =symmetric Type =realsinale precision 2.3-138\nDATABLOCKDESCRIPTIONS 2.3.37DataBlocks Output FromModule PLA3. 2.3.37.1 _NLES (TABLE). Description Output tablefornonlinear element stresses. Format Sameformat as_ESItableoutput frommodule SDR2. Note ONLES iswritten insubroutine PLA32 ofmodule PLA3. TableTrailer Word 1 =total number ofelement entries inBNLES. Word 2-6 =zero. 2.3.37.2 ESTNLI (TABLE). Description Element summary table fornonlinear elements -updated. Used only inthePiecewise Linear Analysis Rigid Format, theESTNLI data block isthesame astheESTNL data block except that theappended stress information isupdated. Seedata block description forESTNL forfurther details. Table Format Same format astheESTNL data block. Table Trailer Word l =number ofelement entries inESTNLI. Word 2-6 =zero. 2.3-139\nDATABLOCKANDTABLEDESCRIPTIO_iS 2.3.38 2.3.38.1 DescriptionDataBlocks Output FromHodule PLA4. KGGNL(MATRIX). Stiffness matrix ofnonlinear elements -gset. UsedonlyinthePiecewise Linear Analysis RigidFormat. Matrix Trailer Number ofcolumns = Number ofrows = Form = Type = 2.3.38.2 ECPTNLI (TABLE). Descriptiong g symmetric realdouble precision Element Connection andProperties TableforNon-Linear Elements -undated. UsedonlyinthePiecewise Linear Analysis RigidFormat, theECPTNLI datablockisthe sameastheECPTNL datablockexcept thattheappended stress information isupdated. See description forECPTNL forfurther details. Table Format Sameformat astheECPTNL datablock. TableTrailer Word1:totalnumber ofelement entries inECPTNLI. Word2-6=zero. 2.3-140\nDATABLOCK DESCRIPTIONS 2.3.39 DataBlocks Output FromModule CASE. 2.3.39.1 CASEXX (TABLE). Description CaseControl datatable fordynamics problems. Table Format Theformat oftherecords isexactly likeCASECC, (seesection 2.3.1.I) with dynamic looping records deleted. Table Trailer WordI=number ofrecords inC_EXX. Word2-6:zero. 2.3-141\nDATASLOCKANDTABLEDESCRIPTIONS 2.3.40 DataBlocks Output FromModule MTRXIN 2.3.40.I K2PP(MATRIX) Description 2 [mpp] - Matrix Trailer Plumber ofcolumns Number ofrows Form TypeDirect inputstiffness matrix -pset. =p =p =square =depends oninput 2.3.40.2 M2PP(MATRIX) Description 2 [Mpp] - Matrix TrailerDirect inputmassmatrix -pset. Number ofcolumns :p _lumber ofrows =p Form =square Type =depends oninput 2.3.40.3 B2PP(MATRIX) Description 2 [Bpp] Matrix Trailer Number ofcolumns Number ofrows Form TypeDirect inputdamping matrix -pset. =p =p =square =depends oninput 2.3.40.4 TheMTRXIN module maybeusedviaDMAPtoproduce anydesired psizedmatrix from DMIGinputdata. 2.3-142 (8/I/72)\nDATA BLOCK DESCRIPTIONS 2.3.41 Data Blocks Output From Module GKAD 2.3.41.1 KDD(MATRIX) Description [Kdd] -Dynamic stiffness matrix -dset. Matrix Trailer Number ofcolumns Number ofrows Form Type=d =d =square =complex double precision -frequency response/complex eigenvalue =real double precision -transient 2.3.41.2 BDD(MATRIX) Description [Bdd] Dynamic damping matrix -dset. I’ldbY\"IX IrcII I_I\" Number ofcolumns Number ofrows Form Type=d =d =square =complex double precision frequency response/complex eignevalue =real double precision transient 2.3.41.3 MDD(MATRIX) Description [Mdd] Dynamic massmatrix -dset. Matrix Trailer Number ofcolumns Number ofrows Form Type=d =d =square =complex double precision -frequency response/complex eigenvalue =real double precision -transient 2.3-143\nDATABLOCKANDTABLEDESCRIPTIONS 2,3.41.4 Description [G m] Matrix TrailerGMD(MATRIX) Multipoint constraint transformation matrix -dynamics. Number ofcolumns =d Number ofro_’s =m Form =rectangular Type =realdouble precision 2.3.41.5 GOD(MATRIX) Description [G_] - Matrix TrailerOmitted coordinate transformation matrix -dynamics. Number ofcolumns =d Number ofrows =o Form :rectangular Type =realdouble precision 2.3.41.6 K2DD(MATRIX) Description Matrix TrailerDirect inputstiffness matrix -dset. Number ofcolumns =d Number ofrows =d Form :square Type =complex double precision/real double precision 2.3.41.7 M2DD(MATRIX) Description [M_d] Matrix Trailer Number ofcolumns Number ofrows Form TypeDirect inputmassmatrix -dset. =d =d =square =complex double precision/real double precision 2.3-144 (8/I/72)\nDATABLOCK DESCRIPTIONS 2.3.41.8 Description Matrix TrailerB2DD(MATRIX) Direct input dampinQ matrix -dset. Number ofcolumns Diumber ofrows Form Type=d =d =square =complex double precision/real double precision\nDATABLOCKAilDTABLE DESCRIPTIO,_S 2.3.42 DataBlocks Output FromModule CEAD 2.3.42.1 PHID(MATRIX) Description [_d]-Complex eigenvectors inthedset. Matrix Trailer Number ofcolumns =number ofeigenvalues foundinCEAD Number ofrows =d Form =rectanqular Type =complex sinqle precision 2.3.42.2 CLAMA(TABLE) Description\n, Complex eigenvalue table. TableFormat Record Word Type Item 0 Header record 1 I 2 I 3-9 I I0 I 11-50 51-146 BOFPIDrecord 90 1006 0 6 Notdefined Title, subtitle, andlabelfrom/UTPUT/ 1 I 2 I 3 R 4 R 5 R 6 R@FPdatarecord Modenumber Extraction order Realpartofeiqenvalue Imaqinary partofeinenvalue IIm(X)I/21[ -2*Re()/llm (Z)I Note: The6datawords arerepeated inrecord 2foreach eigenvalue foundinCEAD. End-of-fil e TableTrailer Word1=1006 Word2=0 Word3=0 Word4=0 Word5=6 Word6=0 2.3-146\nDATA_LOCKDESCRIPTIOI4S 2.3.42.3 _CEIGS(TABLE). Description Complex eigenvalue summary table. Table Format Record Word Type Item 0 B Header record 1 I 2 I 3 I 4-10 I II I 12-180 1009 1ifdeterminant 2ifinverse power 0 Number ofeigenvalues extracted Depend onthemethod used Determinant 12 I 13 I 14 I 15 I 16 I 17 I 18 INumber ofpasses through starting points Number ofcriteria changes Number ofstarting point moves Number ofdecompositions Number offailures toiterate toaroot Number ofpredictions outside theregion Reason fortermination l-allrequested roots found 2-outofregion prediction from every starting point 3-insufficient time toextract another root 4-everywhere singular matrix Inverse Power 12-18 19-50 51-146 BIdentical towords 12-18forInverse PowerMethod section oftheBEIGSdatablockoutput fromthe READmodule (seesection 2.3.30.4). Notdefined Title, subtitle, label Record 1will berepeated foreach region forInverse Power. Records 2+3exist only when METHOD =DETM. 1 I 0 2 I 1009 3 I 3 4-9 I 0 I0 I 6 II-50 Notdefined 51-146 B Title, subtitle, label 2.3-147\nDATABLOCKAIIDTASLEDZSCRIPTIO,_S Record 4 TableTrailer Non-zero.Word Type. Item l I 2 R 3 R 4 R 5 R 6 IStartinn pointnumber inregion Realpartofstartina point Imaainary partofstartina point Maqnitude ofstartinn point Phaseofstartinn point Scalefactor (power ofI0)ofmaanitude WordsI-6arerepeated foreachstartina pointineachreaion. End-of-file 2.3.42.4 PHIH(MATRIX) Description [#h] -Complex eigenvectors inthehset. Matrix Trailer Number ofcolumns =number ofeigenvalues found inCEAD Number ofrows =h Form =rectangular Type =complex sinqle precision 2.3-148\nDATA BLOCK DESCRIPTIONS 2.3.43 Data Blocks Output From Module VDR 2.3.43.1 _PHID (TABLE) Description Output complex eigenvectors requests (solution set, S_RTI, complex). Table Format Record Word Type Item NotesI-2 B Data block name 3-5 I Month, day, year 6 I Time 7 I l l I 2 I 3 I 4 I 5 I 6-7 R 8 I g I lO I 11-50 51-82 B 83-I14 B I15-146 B l I 2 I 3-8 R 9-14 RDevice code +lOapproach code lOl4 0 Subcase number Mode number Complex eigenvalue 0 Format code Nun_er ofwords perentry inrecord 2=14. Notdefined Title Subtitle Label lOpoint ID+device code _repeated Point type {for R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each I(Tl), I(T2), I(T3), I(Rl), I(R2), I(R3)}Doint I.Records land2arerepeated foreach vector tobeoutput. 2.Device code 3.Format codeI!=xyoutput only==print =punch =print andpunch I!=real ==real/imaginary =magnitude/phase 4.Approach code =9 5.Point type 6°Ii=grid point==scalar point =extra point =modal point Components (words 3-14 ofeven numbered records) which arenotinthesolution setare replaced byaninteger I. 2.3-149\nDATABLOCKANDTABLEDESCRIPTIONS TableTrailer Word1 Word2 Word3-6=(sumofallwords inevennumbered records)/65536 =remainder fromdivision above =zero. 2.3.43.2 @UDVCl (TABLE) Description Output displacement requests (solution set,S_RTI, complex) TableFormat Record Word _ Item I-2 B Datablockname 3-5 I Month, day,year 6 I Time 7 I 1 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 R 9-14 RDevice code+I0approach code I015 =displacement 1016=velocity 1017=acceleration 0 Subcase number Frequency 0 0 Dynamic loadsetID Format code Number ofwords perentry inrecord 2=14 Notdefined Title Subtitle Label I0point ID+device code _repeated Pointtype {for R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)}point Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code: 3.Format codeli=xyoutput onlyprint punch printandpunch 1=real 2=real/imaginery 3=magnitude/phase 4.Approach code=6 2.3-150 (811/72)"},"title":"Programmer's Manual P13"},"/docs/programmers/programmers_manual_014/":{"data":{"":"DATA BLOCK DESCRIPTIONS !_otes cont’d. 5.Point type Ii qrid point==scalar point =extra point =modal point 6.Components (words 3-14 ofeven numbered records) which arenotinthesolution set arereplaced byaninteger I. Table Trailer Word l =(sum ofallwords ineven numbered records)/65536. Word 2 =remainder from division above. Word 3-6 =zero. 2.3.43.3 OUDVl (TABLE) Description Output displacement requests (solution set, S_RTI, Feal). Table Format Record Word Type Item I-2 B Data block name 3-5 I Month, day, year 6 I Time 7 I l 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 1 I 2 I 3-8 RDevice code+I0approach code I15=displacement 16=velocity 17=acceleration 0 Subcase number Time 0 O Dynamic load setID Format code =l Number ofwords perentry inrecord 2=8 Notdefined Title Subtitle Label lOpoint ID+device code Point type Tl,T2,T3,Rl,R2,R3irepeated foreach Point 2.3-151\nDATABLOCKANDTABLEDESCRIPTIONS Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code= li=xyoutput onlyprint punch printandpunch 3.Format code=real =real/imaginary =magnitude/phase 4.Approach code =7 5.Pointtype = li=qridpointscalar point extrapoint modal point 6.Components (words 3-8ofevennumbered records) whicharenotinthesolution set arereplaced byaninteger I. TableTrailer Word1=(sumofallwords inevennumbered records)/65536. Word2=remainder fromdivision above. Word3-6=zero. 2.3.43.4 @PNLI(TABLE) Description Output nonlinear loadrequests (solution set,S_RTI, real) TableFormat Record Word _ Item I-2 B Datablockname 3-5 I Month, day,year 6 I Time 7 I 1 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+I0*approach code 12 0 Subcase number Time 0 0 Dynamic loadsetID Format code Number ofwords perentryinrecord 2:8 Notdefined Title Subtitle Label 2.3-152\nDATABLOCKDESCRIPTIONS Record Word Type Item+ l I 2 I 3-8 RlOpoint ID+device code} repeated Point type Iforeach Tl,T2,T3,Rl,R2,R3 point Notes I.Records land2arerepeated foreach vector tobeoutput. 2.Device code li=xyoutput only==print =punch =print andpunch 3.Format codeI!=real= =real/imaginary =magnitude/phase 4.Approach code =7 5. Point type Ii=Qrid point==scalar point =extra point =modal point 6.Components (words 3-8ineven numbered records) which arenotinthesolution set arereplaced byaninteger I. Table Trailer Word l =(sum ofallwords ineven numbered records)/65536. Word 2 =remainder from division above. Word3-6=zero. 2.3.43.5 _PHIH (TABLE) Description Output complex eigenvector requests (solution set, S_RTI, complex). TableFormat Record Word Type Item I-2 B Data block name 3-5 I Month, day, year 6 I Time 7 I l l I Device code +lOapproach code 2 i lOl4 3 I 0 4 I Subcase number 5 I Mode number 6-7 R Complex eigenval ue 8 I 0 9 I Format code lO I Number ofwords perentry inrecord 2=14 2.3-153\nDATABLOCKANDTABLEDESCRIPTIONS Record Notes I.Word _ Item 11-50 Notdefined 51-82 B Title 83-114 B Subtitle 115-146 B Label 1 I I0*pointID+device code irepeated 2 I Pointtype _for 3-8 R R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each 9-14 R l(ml), I(T2), l(T3), l(ml), l(m2), I(R3)_point Records 1and2arerepeated foreachvector tobeoutput li=xyoutput only2.Device code= print punch printandpunch !=real3.Format code= real/imaginary magnitude/phase 4.Approach code=9 li=gridpoint5.Pointtype = scalar point extrapoint modal point 6.Components (words 3-14ofevennumbered records) which arenotinthesolution set arereplaced byaninteqer I. TableTrailer Word1 Word2 Word3-6=(sumofallwords inevennumbered records)/65536. =remainder fromdivision above. :zero. 2.3.43.6 @UHVCl (TABLE) Description Output displacement requests (solution set,S_RTI, complex). 2.3-154\nDATA BLOCK DESCRIPTIONS Table Format Record Word Type Item I-2 3-5 6 7B Datablock name I Month, day,year I Time I 1 l 2 3 4 5 6 7 8 9 lO ll-50 51-82 83-I14 I15-146I Device code +lOapproach code lO15 =displacementI 1016 =velocity lOl7 =acceleration I 0 I Subcase number R Frequency I 0 I 0 I Dynamic load setID I Format code I Number ofwords perentry inrecord 2=14 Notdefined B Title B Subtitle B Label 1 I 2 i 3-8 R 9-14 RI0point ID+device code _repeated Point type {for R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)Ceach I(TI), I(T2), I(T3), I(RI), I(R2), l(R3)_point Notes I.Records land2arerepeated foreach vector tobeoutput. 2.Device code = 3.I!=xyoutput onlyprint punch print andpunch I!=realFormat code =real/imaginary magnitude/phase 4.Approach code =6 5.Point type = 6,I=grid point2=scalar point 3=extra point 4=modal point Components (words 3-14 ofeven numbered records) which arenotinthesolution set arereplaced byaninteger I. Table Trailer Word l Word 2=(sum ofallwords ineven numbered records)/65536. =remainder from division above. Word 3-6 =zero. 2.3-155\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.43.7 _UHVI(TABLE) Description Output displacement requests (solution set,S_RTI, real). Table Format Record Word _ Item I-2 B Datablockname 3-5 I Month, day,year 6 I Time 7 I 1 1 I 2 I 3 I 4 I 5 R 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 1 I 2 I 3-8 RDevice code+I0approach code 15=displacement16=velocity 17=acceleration 0 Subcase number Time 0 0 Dynamic loadsetID Format code=1 Number ofwords perentryinrecord 2=8 Notdefined Title Subtitle Label I0point ID+device code pointtype TI,T2,T3,RI,R2,R3Irepeated foreach point Notes I.Records 1and2arerepeated foreachvector tobeoutput. li=xyoutput only2.Device code= print punch printandpunch !=real3.Format code= real/imaginary magnitude/phase 4. =7 Approach code Ii=gridpoint5.Pointtype = scalar point extrapoint modalpoint 6.Components (words 3-8ofevennumbered records) which arenotinthesolution set arereplaced byaninteger I. 2.3-156\nDATA BLOCK DESCRIPTIONS Table Trailer Word l Word 2 Word 3-6=(sum ofallwords ineven numbered records)/65536. =remainder from division above. :zero. 2.3-157\nDATA_LOCKAI_DTABLEDESCRIPTIONS 2.3.44 2.3.44.1 Description Matrix TrailerDataBlocks Output FromModule FRRD UDVF(ilATRIX) Displacement vector matrix inafrequency response problem -dset. ,Number ofcolumns [,_umber ofrows Form Type 2.3.44.2 PSF(MATRIX) Description Matrix Trailer=number offrequencies multiplied bythenumber ofloads =d =rectangular =complex single precision Loadvector forfrequency response -sset. Number ofcolumns Number ofrows Form Type 2.3.44.3 PDF(MATRIX) Description Matrix Trailer=number offrequencies multiplied bythenumber ofloads =s =rectangular =complex single precision Dynamic loadmatrix forfrequency analysis -dset. Number ofcolumns _umber ofrows Form Type 2.3.44.4 PPF(r,IATRIX) Description [Pif)] ,.’latrix Trailer=number offrequencies multiplied bythenumber o_loads =d =rectangular =complex sinqle precision Dynamic loadsforfrequency response -pset. Number ofcolumns i’_umber ofrows Form Type=number offrequencies multiplied bythenumber ofloads =p =rectangular =complex single precision 2.3-158\nDATABLOCK DESCRIPTIONS Note Theheader record contains thelistoffrequencies. 2.3.44.5 UHVF(MATRIX) Description Matrix TrailerModal frequency response solution vectors -hset. Number ofcolumns =number offrequencies multiplied bythenumber ofloads Number ofrows =h Form =rectangular Type =complex single precision 2.3-159\nDATABLOCKANDTABLE DESCRIPTIONS 2.3.45 DataBlocks Output FromModule SDR3. 2.3.45.1 @PP2(TABLE) Description Output loadvector requests (pset,S_RT2, real). Table Format Record Word Type 0 1 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 2 1 R 2 I 3-8 RItem Header record Device code +lOapproach code 2002 0 Subcase number lOpoint ID+device code 0 0 Dynamic load setID Format code =l Number ofwords perentry innext record =8 Notdefined Title Subtitle Label Time )repeat Pointtype _foreach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_time step Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code= 3.Format codeli=xyoutput onlyprint punch 5printandpunch 4.Approach code=6=real =real/imaginary =magnitude/phase 5.Pointtype = Ii=grid pointscalar point extra point modal point TableTrailer WordsI-6contain nosignificant values. 2.3-160\nDATABLOCKDESCRIPTIONS 2.3.45.2 _QP2(TABLE). Description Output forces ofsingle-point constraint (pset,S_RT2, real). Table Format Record Wor__d Type Item 0 Header record l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 BDevice code+lOapproach code 2003 0 Subcase nu_er lOpoint ID+device code 0 0 Dynamic loadsetID Format code=l Nu_er ofwords perentry innextrecord =8 Notdefined Title Subtitle Label 1 R 2 I 3-8 RTime }repeat Point type _for each R(TI),R(T2), R(T3), R(RI),R(R2), R(R3)_timestep Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code 3.li=xyoutput only= =print =punch =print andpunch I!:realFormat code =real/imaginary magnitude/phase 4.Approach code =6 5.Pointtype:igrid pointscalar point extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-161\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.45.3 OUPV2(TA3LE). Description Outout displacement vector requests (pset,S_RT2, real). Table Format Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-145 BDevice code+lOapproach code 2001=Displacement 2010 Velocity 2011 Acceleration 0 Subcase number lOpoint ID+device code 0 0 Dynamic loadsetID Format code=1 Number ofwords perentryinnextrecord =8 Notdefined Title Subtitle Label 1 R 2 I 3-8 RTime )reoeat Pointtyne \u003eoreach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time sten Notes I.Records 1and2arereheated foreachvector tobeoutput. 2.Device code li=xyoutput onlyprint punch printandpunch I!=real3.Format code= real/imaginary magnitude/phase 4.Approach code=6 5.Pointtype =I=gridpoint=scalar point 3=extrapoint4modalpoint TableTrailer WordsI-6contain nosignificant values. 2.3-162\nDATABLOCK DESCRIPTIONS 2.3.45.4 _ES2 (TABLE). Description Output element stress requests (S_RT2, real). Table Format Record Word Type l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I ID I ll-50 51-82 B 83-I14 B I15-146 B 2 l R 2-NWDS MixedItem Header record Device code+lOapDroach code 2005 Element type Subcase number lOelement ID+device code 0 O Dynamic loadsetID Format code =l Number ofwords _erentry innextrecord =M’JDS Notdefined Title Subtitle Label Time _repeat Element stress data for each Seesection 2.3.51 fordetails)time step l_otes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code = 3.Format codei=xyoutput only•print 14=punch=print andpunch I!=real==real/imaainary =magnitude/ghase 4.Approach code =6 Table Trailer Words l-Gcontain nosignificant values. 2.3-163\nDATABLOCKANGTABLEDESCRIPTIONS 2.3.45.5 _EF2(TABLE). Description Output element forcerequests (S_RT2, eal). TableFormat Record Word Type 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 B 2 1 R 2-NWDS MixedItem Header record Device code+lOapproach code 2004 Element type Subcase number lOelement ID+device code 0 0 Dynamic loadsetID Format code=1 Number ofwords perentry innextrecord =NWDS Notdefined Title Subtitle Label Time )reoeat Element forcedata foreach Seesection 2.3.52 fordetails}time step Notes I.Records 1and2arerepeated foreachvector tobeoutput. I=xYoutput only 2.Device code= print i_punchprintandpunch !=real3.Format code= real/imaginary magnitude/phase 4.Approach code=6 TableTrailer WordsI-6contain nosignificant values. 2.3-164\nDATA BLOCK DESCRIPTIONS 2.3.45.6 PNL2(TABLE). Description Output nonlinear load requests (solution set, S_RT2, real). Table Format Record Word Type Item O Header record l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B i R 2 I 3-8 RDevice code +lOapnroach code 2012 0 Subcase number lOpoint ID+device code 0 0 Dynamic load setID Format code =l Number ofwords perentry innext record =8 Notdefined Title Subtitle Label Ti _reDeat Point type _for each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))timestep Notes I.Records land2arerepeated foreach vector tobeoutput. 2.Device code = 3.Format codeli=xyoutput onlyprint punch print andpunch 4.Approach code =6 5.Pointtype=real =real/imaginary =magnitude/phase 6.Ii=grid point==scalar point =extra ooint =modal point Components (words 3-8ineven numbered records) which arenotinthesolution setare replaced byinteger I. Table Trailer Words I-6contain nosignificant values. 2.3-165\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.45.7 UDV2 (TABLE). Description Output displacement vector requests (solution set,S_RT2, real). Table Format Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+lOapproach code 2015=Displacement 2016 Velocity 2017 Acceleration 0 Subcase number lOpoint ID+device code 0 0 Dynamic loadsetID Format code=1 Number ofwordsperentryinnextrecord =8 Notdefined Title Subtitle Label 1 R 2 I 3-8 RTime )reDeat Pointtype \u003eforeach R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)}timesten Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code= 3.Format code=li=xyoutput onlyprint punch printandpunch !=realreal/imaginary magnitude/phase 4.Approach code=6 5.Pointtype 6.#=gridpoint= =scalar point I_=extra_oint=modalpoint Components (words 3-8ofevennumbered records) whicharenotinthesolution setare replaced byinteger I. TableTrailer Words I-5contain nosignificant values. 2.3-166\nDATA BLOCK DESCRIPTIONS 2.3.45.8 OUHV2 (TABLE). Descri ption Output displacement vector requests (solution set,S_RT2, real). TableFormat Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-145 BDevice code +lOaDDroach code 2015=Displacement 2016 Velocity 2017 Acceleration 0 Subcase number lOpoint ID+device code 0 0 Dynamic loadsetID Format code=1 Number ofwordsperentryinnextrecord =8 Notdefined Title Subtitle Label 1 R 2 I 3-8 RTime _reoeat Point type \u003efor each R(TI), R(T2), R(T3), R(RI), R(R2), R(R3))time stem Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code 3°li=xyoutput only= =print :ounch =print andpunch I!=realFormat code =real/imaginary magnitude/phase 4.Approach code =6 5.Pointtype _.li=grid point= =scalar point =extra point =modal point Components (words 3-8ofeven numbered records) which arenotinthesolution setare replaced byaninteger I. TableTrailer Words I-6contain nosignificant values. 2.3-167\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.45.9 OPPC2 (TABLE). Description Output loadvector requests (pset,S_RT2, complex). Table Format Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-145 BDevice code+lOapproach code 3002 0 Subcase number lOpoint ID+device code 0 0 0 Format code Number ofwordsperentry innextrecord =14 Notdefined Title Subtitle Label 1 R 2 I 3-8 R 9-14 RFrequency _re_eat Pointtype _for R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each I(TI), I(T2), I(T3), I(RI), I(R2), l(R3))frequency Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2.Device code= li=xyoutput onlyprint punch printandpunch 3.Format code li=real= =real/imaginary =magnitude/phase 4.Approach code =5 li=gridpoint5.Pointtype = scalar point extrapoint modal point TableTrailer WordsI-Gcontain nosignificant values. 2.3-168\nDATABLOCK DESCRIPTIONS 2.3.45.10 _QPC2 (TABLE). Description Output forces ofsingle-point constraint requests (pset,S_RT2, complex). Table Format Record Word Type Item l I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I lO I ll-50 51-82 B 83-I14 B I15-146 B 1 R 2 I 3-8 R 9-14 RHeader record Device code+lOapproach code 3003 0 Subcase number lOpoint ID+device code 0 0 LoadsetID Format code Number ofwords perentry innext record =14 Notdefined Title Subtitle Label Frequency _repeat Point type {for R(TI), R(T2), R(T3), R(RI), R(R2), R(R3)_each I(TI), I(T2), I(T3), l(Rl), I(R2), l(R3))frenuency Notes I.Records land2arerepeated foreachvector tobeoutput. li=xyoutput onlyprint 2.Device code =punch print andpunch i=real3.Format code= :real/imaginary =magnitude/phase 4.Approach code:5 li:gridpointscalar point 5.Point type =extra point modal point Table Trailer Words I-6contain nosignificant values. 2.3-169\nDATA_LOCKANDTABLEDESCRIPTIONS 2.3.45.11 _UPVC2 (TABLE). Description Output displacement vector requests (pset,S_RT2, complex). Table Format Record Word Type Item Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+lOaDproach code 3001=Displacement 3010 Velocity 3011 Acceleration 0 Subcase number lOpoint ID+device code 0 0 LoadsetID Format code Number ofwords perentry innextrecord =14 Notdefined Title Subtitle Label 1 R 2 I 3-8 R 9-14 RFrequency Pointtype R(TI), R(T2), R(T3), R(RI), R(R2), R(R3) I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat for eachfrequency i_otes I.Records 1and2arerepeated foreachvector tobeoutput. O=xyoutput only 2.Device code=1print 4=punch 5printandpunch I!=real3.Format code= real/imaginary magnitude/phase 4.Approach code=5 5.Pointtypel=gridpoint=2scalar point 3=extrapoint 14modal point TableTrailer £Jords I-6contain nosignificant values. 2.3-170"},"title":"Programmer's Manual P14"},"/docs/programmers/programmers_manual_015/":{"data":{"":"DATABLOCKDESCRIPTIONS 2.3.45.12 _ESC2 (TABLE). Description Output element stress requests (S_RT2, complex). Table Format Record Word Type 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BItem Header record Device code+lOapproach code 3005 Element type Subcase number lOElement ID+device code 0 0 LoadsetID Format code Number ofwords perentry innextrecord =NWDS Notdefined Title Subtitle Label 2 i R Frequency 2-NWDS Mixed Element stress data See2.3.51 fordetailsrepeat for ach frequency Notes I.Records 1and2arerepeated foreach vector tobeoutout. li=xyoutput onlyprint 2.Device code =punch print andpunch !=real3.Format code= real/imaginary magnitude/phase 4. =5 Approach code TableTrailer Words I-6contain nosignificant values. 2.3-171\nDATA3LOCKANDTABLEDESCRIPTIONS 2.3.45.13 @EFC2(TA3LE). Description Output element forcerequests (S_RT2, complex). Table Format Record Word _ Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+lOaDnroach code 3004 Element type Subcase number IOelement ID+device code 0 0 LoadsetID Format code Number ofwords perentry innextrecord =NWDS Notdefined Title Subtitle Label 2 1 R Frequency 2-NNDS Mixed Element forcedata See2.3.52 fordetailsrepeat foreach frequency Notes Records 1and2arerepeated foreachvector tobeoutput. 2.Device code=O=xyoutput only1print 4=punch 5printandpunch 3.Format codeI!=real= =real/imaginary =magnitude/phase 4.Approach code=5 TableTrailer WordsI-6contain nosignificant values. 2.3-172\nDATABLOCK DESCRIPTIONS 2.3.45.14 UDVC2 (TABLE). Description Output displacement vector requests (solution set,S_RT2, cowlex). Table Format Record Wor___dd Type Item 0 Header record l l 3 4 5 6 7 8 9 lO ll-50 51-82 83-I14 I15-146 l 2 3-8 9-14B B B R I R RDevice code+lOapproach code 3015=Displacement 3016 Velocity 3017 Acceleration 0 Subcase Number IOpoint ID+device code 0 0 Dynamic loadsetID Format code Number ofwords perentry innextrecord =14 Notdefined Title Subtitle Label Frequency )repeat Point type (for R(TI), R(T2),R(T3) R(RI), R(R2),R(R3)_each I(TI), I(T2), I(T3): I(RI),I(R2), l(R3))frequency ilotes I.Records land2arerepeated foreachvector tobeoutput. 2.Device code = 3.Format code =li:xyoutput onlyprint punch print andpunch I!=real=real/imaoinary =magnitude/phase 4.Approach code =5 Ii=gridpoint5.Point type =scalar pointextra point modal point 6.Components (words 3-14ofevennumbered records) which arenotinthesolution setare replaced byinteger I. Table Trailer Words I-6contain nosignificant values. 2.3-173\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.45.15 OUHVC2 (TABLE). Description Output displacement vector requests (solution set,S_RT2, complex). Table Format Record Word Type Item 0 Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 I 11-50 51-82 B 83-114 B 115-146 BDevice code+lOaDDroach code 3015=Disnlacement 3016 Velocity 3017 Acceleration 0 Subcase number lOpoint ID+device code 0 0 Dynamic loadsetID Format code Number ofwordsperentryinnextrecord =14 Notdefined Title Subtitle Label 1 R 2 I 3-8 R 9-14 RFrequency Pointtype R(TI), R(T2), R(T3), R(RI), R(R2), R(R3) I(TI), I(T2), I(T3), I(RI), I(R2), I(R3)repeat for each frequency Notes I.Records 1and2arerepeated foreachvector tobeoutput. 2. 3.0=xyoutput only1print Device code=4punch 5printandhunch I!=realFormat code= real/imaginary magnitude/phase 4.Approach code=5 5.PointtypeI=gridpoint=2scalar point 3=extrapoint4modal point Components (words 3-14ofevennumbered records) whicharenotinthesolution setare replaced byaninteger I. TableTrailer Words I-6contain nosignificant values. 2.3-174\nDATABLOCKDESCRIPTIONS 2.3.46DataBlocks Output FromModule XYTRAN. 2.3.46.1 XYPLTT (TABLE). Description Output plotrequest datainformfordirect plotting ofS_RT2Transient Response output. TableFormat Record Word Type Item 0 Header record 1 1 I-R 2 I 3 I 4 I 5 I 6 I 7 I 8 I 9 I I0 II R 12 R 13 R 14 R 15 R 16 R 17 I 18 I 19 I 20 I 21 I 22 I 23 R 24 R 25 I 26 I 27 I 28 I 29 I 30 ISubcase IDorifaRandom Response problem, theMeanResponse Framenumber Curvenumber Point IDorelement ID Component number Vector number (I,2….II) l–Graph usestophalfofframe O–Graph usesfullframe -l–Graph useslowerhalfofframe O–Axis, tics,labels, values, etc.havebeen drawnandthiscurve istobescaled and plotted identically aslastexcept forcurve symbols. l–Axis, tics,labels, scaling, etc.aretobe performed orcomputed andifword7ofthis record =0orI,askidtonewframeistobe made. Number ofblankframes between frames (frame- skip) Notused XMIN!X[_AN Define exactcorners o_this YMIN upper, lower, orfullframegraph YMAX Actual valueoffirsttic Actual increment _osucc_ss=w tics Integer valuetobeprinted on firsttic Maximum number ofdigits in anyprint-value x-direction +or-powerforprintvalues tics Totalnumber ofticstonrint thisedge Value printskid0,1,2,3— Delta integer printvalueto successive tics\" Sameas15through 22 Butfory-direction tics 2.3-175\nDATABLOCKDESCRIPTIONS Record Word 31 32 3334 35 36 37 38 39 4041 42 5O 51 243 2B_ 283 284 285 286 287 288 289 29O 291 292 293 294 295 296 297 298 299 300B B B B B B I I R R I I I I R R R R R R R R R RItem Topedgetics leachof31-34maybeless Bottom edgetics[than O–tics without values Leftedgetics(equal toO–noticshere Rightedgetics)greater O–tics withvalues O–x-direction islinear Greater thanO–number o_cycles andx-direction islogarithmic O–y-direction islinear Greater thanO–number ofcycles andy-direction islogarithmic O–nox-axis l–draw x-axis x-axis y-intercept O–noy-axis l–draw y-axis y-axis x-intercept Lessthan0–plotsymbol foreachcurvepoint. Select symbol corresponding to curvenumber inword3ofthis record. Equalto0–connect points bylineswhere points arecontinuous i.e.,(no integer 1pairs). Greater than0–dobothofabove. Notused Title (32words) Subtitle (32words) Label (32words) CurveTitle (32words) x-axis Title (32words) y-axis Title (32words) Notused Pensize Plotter 1:SC4020, 2:EAI3500 Inches paperx-direction Inches papery-direction Camera forSC4020 lessthan0=35mm,0:F80, Greater 0=Both Printflag0:no,1=yes Plotflag0:no,1=plotter, -I:paper, 2=plotter andpaper Punchflag0:no,1=yes x-minofalldata x-maxofalldata y-minwithin x-limits ofgraph x-value atthisy-min y-maxwithin x-limits ofgraph x-value atthisy-max y-minforalldata x-value atthisy-min y-maxforalldata x-value atthisy-max 2.3-176 (6/I/71)\nDATABLOCK DESCRIPTIONS Record Word Type Item 1 I 2 I 3 R 4 Rl Always ispresent l x-value _coordinate pair y-value #reoeats forallpairs plotted Notes I.Records land2repeat foreachcurve plotted. 2.Evennumbered records willcontain integer 1pairs toindicate where curve hasmoved outside ofgraph limits. Table Trailer WordsI-6contain nosignificant values. 2.3-177\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.45.2 XYPLTFA (TA3LE). Description Identical toXYPLTT, forFrequency Response plots (solution set). 2.3.4G.3 XYPLTF (TABLE). Description Identical toXYPLTT, forFrequency Response plots. 2.3.46.4 XYPLTR (TABLE). Description Identical toXYPLTT, forRandom Response Dlots. 2.3.4G.5 XYPLTTA (TABLE). Description Identical toXYPLTT, forTransient Response plots (solution set). 2.3-178\nDATA BLOCK DESCRIPTIONS 2.3.47 DataBlocks Output FromModule P_AND_M 2.3.47.1 PSDF(TABLE) Description PowerSpectral Density Table. Table Format Record Word Type Item 0 Header record 1 I 50 2 I Codefordatatype DISP=2001 VEL_=2010 ACCE=2011 L_AD=2002 SPCF=2003 ELF_=2004 STRE=2005 3 ! 4001 4 I 0 5 I Pointorelement IDtimesI0 6 I Component ID+2 7 I 0 8 R Meanresponse 9 I 0 I0 I 2 11-50 I 0 51-145 B Title, subtitle, label 2 1 R Frequency 2 R Powerspectral densitv i_otes I.Words1and2ofrecord 2arerepeated foreachfrequency. 2.Records 1and2arerepeated foreachpowerspectral density request. Tablr,Trailer L!ordsI-5=zero. ,_ord6=number ofrequests. 2.3-179\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.47.2 AUT_(TABLE). Description Autocorrelation function table. TableFormat Record Word Type Item Header record 1 I 2 I 3 I 4 I 5 I 6 I 7 I 8 R 9 I I0 I 11-50 I 51-146 B5O Codefordatatype DISP=2001 VELO=2010 ACCE=2011 LOAD=2002 SPCF=2003 ELFO=2004 STRE=2005 4002 0 Pointorelement IDtimesI0 Component ID+2 0 Meanresponse 0 2 0 Title, subtitle, label 2 1 R 2 RTAU Autocorrelation function Notes I.Words1and2ofrecord 2arerepeated foreachTAU. 2.Records 1and2arerepeated foreachautocorrelation request. TableTrailer Words I-5=zero. Word_=number ofrequests. 2.3-180\nDATA BLOCK DESCRIPTIONS 2.3.48 Data Blocks Output From Module TRD. 2.3.48.1 UDVT (MATRIX) Description ut[d] -Displacement, velocity, andacceleration vector matrix inatransient analysis problem -dset. r_trix Trailer Number ofcolumns =three times thenumber ofoutput time steps Number ofrows =d Form =rectangular Type =real single precision 2.3.48.2 Description Matrix TrailerPDT(MATRIX) Linear dynamic load matrix fortransient analysis -dset. Number ofcolumns =number ofoutput times Number ofrows =d Form =rectangular Type :real single precision 2.3.48.3 PST(MATRIX) Description [P_] -Linear load vector fortransient analysis -sset. Matrix Trailer Number ofcolumns =number ofoutput times Number ofrows :s Form :rectanqular Type =realsingle precision 2.3-181\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.48.4 PPT(MATRIX) Description [P_] Linear dynamic loadsfortransient analysis -pset. Matrix Trailer Number ofcolumns =number ofoutput times Number ofrows =p Form =rectangular Type =realsingle precision *Note: Theheader record contains thelistofoutput times. 2.3.48.5 PNLD(MATRIX) Description [p_] Nonlinear loads intransient problem -dset. Matrix Trailer Number ofcolumns =number ofoutput times Number ofrows =d Form =rectangular Type =realsingle precision 2.3.48.6 UHVT(MATRIX) Description [u_] Modaltransient solution vectors -hset. Matrix Trailer Number ofcolumns =threetimes thenumber ofoutput times Number ofrows =h Form =rectangular Type =realsingle precision 2.3.48.7 PNLH(MATRIX) Descrigtion n_ [Ph] Nonlinear loads inmodal transient problem -hset. Matrix Trailer Number ofcolumns :number ofoutput times Number ofrows =h Form =rectangular Type =realsinqle precision 2.3-182\nDATABLOCKDESCRIPTIONS 2.3.49 2.3.49.1 Description [mhh] Matrix TrailerDataBlocks Output Fromi|odule GKAH MHH(MATRIX) Modalmassmatrix -hset. Number ofcolumns =h Number ofrows =h Form =symmetric Type =realdouble precision 2.3.49.2 BHH(MATRIX) Description [bhh] Matrix TrailerModaldamping matrix -hset. Number ofcolumns =h Number ofrows =h Form =symmetric Type =realdouble precision 2.3.49.3 KHH(MATRIX) Description [khh] Matrix TrailerModalstiffness matrix -hset. Number ofcolumns =h Number ofrows =h Form =symmetric Type =realdouble precision 2.3.49.4 PHIDH(MATRIX) Description [_dh] Matrix Trailer Number ofcolumns Number ofrows Form TypeTransformation matrix fromdsettomodal coordinates. =h =d =rectanqular =realsingle precision 2.3-183\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.50DataBlocks Output FromModule DDRI 2.3.50.1 CPHID(MATRIX) Description [d]Complex eigenvector matrix transformed frommodaltophysical coordinates. Matrix Trailer Number ofcolumns Number ofrows Form Type=number ofeigenvectors =d =rectangular =complex single precision 2.3.50.2 UDVIF(MATRIX) Description [u] Displacement vectors matrix inafrequency response problem -dset. Matrix Trailer Number ofcolumns Number ofrows Form Type=number offrequencies timesnumber ofloads =d =rectangular =complex single precision 2.3.30.3 UDVIT(MATRIX) Description [m_] -Displacement vectors matrix inatransient response problem -dset. Matrix Trailer Number ofcolumns =number ofoutput timesmultiplied by3 Number ofrows =d Form =rectangular Type =realsingle precision 2.3-184 (811172)\nDATABLOCK DESCRIPTIONS 2.3.51 Element Stress Output DataDescription. Note particular datablockd_scription (e.g., _ESl, _ESBI) forcontents ofword lforeachelement. Element Txpe lName CR_D CBE_M CTUBE CSHEAR CTWIST CTRIAIRealElement Stresses Wordor Component Item 2 Axial 3 Axial Safety Margin * 4 Torsional 5 Torsional Safety Margin* 2 SAI 3 SA2 4 SA3 5 Axial 6 SA-maximum 7 SA-minimum 8 Safety Margin inTension* 9 SBI lO SB2 II SB3 12 SB-maximum 13 SB-minimum 14 Safety Margin inComp* SameasCR_D 2 Maximum Shear 3 Average Shear 4 Safety Margin* 2 Maximum 3 Average 4 Safety Margin* 2 Z1=Fibre Distance 1 3 Normal-x atZ1 4 Normal-y atZl 5 Shear-xy atZl 6 O-Shear Angle atZl 7 Major-Principal atZl 8 Minor-Principal atZl 9 Max-Shear atZl lO Z2=Fibre Distance 2 II Normal-x atZ2 12 Normal-y atZ2 13 Shear-xy atZ2 14 O-Shear Angle atZ2 15 Major-Principal atZ2 16 Minor-Principal atZ2 17 Maximum-Shear atZ2Complex Element Stresses Wordor Real Component Item Imag. 2 Axial R 3 Axial I 4 Torsional R 5 Torsional I Undefi ned SameasCR_D 2 Maximum Shear R 3 Maximum Shear I 4 Average Shear R 5 Average Shear I 2 Maximum R 3 Maximum I 4 Average R 5 Average I 2 Z1=Fibre Distance 1 3 Normal-x at1R 4 Normal-x at1I 5 Normal-y atlR 6 Normal-y atlI 7 Shear-xy atlR 8 Shear-xy atlI 9 Z2=Fibre Distance 2 lO Normal-x at2R II Normal-x at2I 12 Normal-y at2R 13 Normal-y at2I 14 Shear-xy at2R 15 Shear-xy at2I 2.3-185\nDATABLOCKANDTABLEDESCRIPTIONS Element Type Name 7 CTRBSC 8 CTRPLT 9 CTRMEM I0 CONRAD II CELASl 12 CELAS2 13 CELAS3 14 CELAS4 15 CQDPLT 16 CQDMEM 17 CTRIA2 18 CQUAD2 19 CQUADI 2O CDAMPI 21 CDAMP2 22 CDAMP3 23 CDAMP4 24 CVISC 25 CMASSI 26 CMASS2 27 CMASS3 28 CMASS4 29 C@NMI 30 C_NM2 31 CPL_TELIWordorRealElement Stresses Component Item NoteCTRIAI NoteCTRIAI 2 Normal-x 3 Normal-y 4 Shear-xy 5 O-Shear Angle 6 Major-Principal 7 Minor-Principal 8 Maximum Shear NoteCR_D 2 Stress 2 Stress 2 Stress Undefined NoteCTRIAI NoteCTRMEM NoteCTRIAI NoteCTRIAI NoteCTRIAI Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined UndefinedComplex Element Stresses Word or Component Item NoteCTRIAI NoteCTRIAI 2 Normal -x 3 Normal-x 4 Normal -y 5 Normal -y 6 Shear-xy 7 Shear-xy NoteCR_D Stress Stress Stress Stress Stress Stress Undefined Note CTRIAI Note CTRMEM Note CTRIAI Note CTRIAI Note CTRIAI Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined UndefinedReal Imag. R I R I R I 2.3-186 (8/I/72)\nElement Type Name 34 CBAR 35 CC_NEAX 36 CTRIARG 37 CTRAPRGDATABLOCK DESCRIPTIONS I Real Element StressesWordor Component Item 2 SAI 3 SA2 4 ,SA3 5 SA4 6 Axial 7 SA-maxi mum 8 SA-minimum 9 Safety Margin inTension* lO SBI II SB2 12 SB3 13 SB4 14 SB-maximum 15 SB-mi nimum 16 Safety Margin inComp* 2 Harmonic orpoint angle 3 Zl=Fibre Distance l 4 Normal-u atl 5 Normal-v atl 6 Shear-uv atl 7 O-Shear Angle ati 8 Major-Principal atl 9 Minor-Principal atl lO Maximum Shear atl II Z2=Fibre Distance 2 12 Normal-u at2 13 Normal-v at2 14 Shear-uv at2 15 O-Shear Angle at2 16 Major-Principal at2 17 Minor-Principal at2 18 Maximum-Shear at2 2 Radial (x) 3 Circum (Theta) 4 Axial (z) 5 Shear (zx) 2 Radial (x) atl 3 Circum (Theta) atl 4 Axial (z) atl 5 Shear (zx) atl 6 Radial (x) at2 7 Circum (Theta) at2 8 Axial (z) at2 9 Shear (zx) at2 lO Radial (x) at3 II Circum (Theta) at3 12 Axial (z) at3 13 Shear (zx) at3 14 Radial (x) at4 15 Circum (Theta) at4 16 Axial (z) at4 17 Shear (zx) at4 18 Radial (x) at5Complex Element Stresses Wordor Real Component Item Imag. 2 SAI R 3 SA2 R 4 SA3 R 5 SA4 R 6 Axial R 7 SAI I 8 SA2 I 9 SA3 I lO SA4 I II Axial I 12 SBI R 13 SB2 R 14 SB3 R 15 SB4 R 16 SBI I 17 SB2 I 18 SB3 I 19 SB4 I Undefined Undefined Undefined 2.3-187 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS Element Type Name 37cont’d. 38 CT_RDRG 53-CDUMI 61 thru CDUM9RealElement Stresses Wordor Component Item 19 Circum(Theta) at5 20 Axial (z) at5 21 Shear(zx) at5 2 Mem.-Tagen. at1 3 Mem.-Circum. at1 4 Flex.-Tangen. at1 5 Flex.-Circum. at1 6 Shear-Force at1 7 Mem.-Tangen. at2 8 Mem.-Circum. at2 9 Flex.-Tangen. at2 I0 Flex.-Circum. at2 II Shear-Force at2 12 Mem.-Tangen. at3 13 Mem.-Circum. at3 14 Flex.-Tangen. at3 15 Flex.-Circum. at3 16 Shear-Force at3 2 S1 3 $2 4 S3 5 $4 6 $5 7 $6 8 $7 9 $8 I0 $9Complex Element Stresses Wordor Real Component …….. Item……… Imag. _ Undefined 2 S1 R 3 $2 R 4 $3 R 5 S4 R 6 S5 R 7 $6 R 8 $7 R 9 $8 R I0 $9 R II S1 I 12 $2 I 13 $3 I 14 $4 I 15 $5 I 16 $6 I 17 $7 I 18 $8 I 19 $9 I *Ifnotequaltointeger I. Note: Ifoutput ismagnitude/phase themagnitude replaces therealpartandthephase replaces theimaginary part. 2.3-188 (8/I/72)\nDATABLOCK DESCRIPTIONS 2.3.52 Element Force Output DataDescription. Note particular datablock description (e.g., OEFI, OEFBI) forcontents word lforeachelement. Element Type Name l CROD 2 CBEAM 3 CTUBE 4 CSHEAR 5 CTWIST 6 CTRIAI 7 CTRBSC 8 CTRPLT 9 CTRMEM I0 C_NR_D II CELASI 12 CELAS2 13 CELAS3Real Element Forces Wordor Component Item 2 Axial Force 3 Torque 2 Bend-Mom 3 Bend-Morn 4 Bend-Morn 5 Bend-Morn 6 Shear-I 7 Shear-2 8 Axial Force 9 Torque SameasCR(D 2 Force Pts1,3 3 Force Pts2,4Al A2 Bl B2 2 Moment Pts1,3 3 Moment Pts2,4 2 Bend-Mom-x 3 Bend-Mom-y 4 Twist-Moment 5 Shear-x 6 Shear-y Same asCTRIAI SameasCTRIAI Undefined SameasCR_D Force 2 Force 2 ForceComplex Element Forces Wordor Real Component Item Imaq. 2 Axial Force R 3 Axial Force I 4 Torque R 5 Torque I Undefined SameasCROD 2 Force Pts1,3 R 3 Force Pts1,3 I 4 Force Pts_ R 5 Force Pts2,4 I 2 Moment Pts1,3 R 3 Moment Pts1,3 I 4 Moment Pts2,4 R 5 Moment Pts2,4 I 2 Bend-Mom-x R 3 Bend-Mom-y R 4 Twist-Moment R 5 Shear-x R 6 Shear-y R 7 Bend-Mom-x I 8 Bend-Mom-y I 9 Twist-Moment I lO Shear-x I II Shear-y I SameasCTRIAI SameasCTRIAI Undefined SameasCROD 2 Force R 3 Force I 2 Force R 3 Force I 2 Force R 3 Force I 2.3-189\nElement Type Name 14 CELAS4 15 CQDPLT 16 CQDMEM 17 CTRIA2 18 CQUAD2 19 CQUADI 20 CDAMPI 21 CDAMP2 22 CDAMP3 23 CDAMP4 24 CVlSC 25 CMASSI 26 CFtASS2 27 CFtASS3 28 CFtASS4 29 C_NMI 30 C_NM2 31 CPL_TEL 34 CBARDATABLOCK ANDTABLE DESCRIPTIONS RealElement Forces Wordor Co_iponent Item 2 Force NoteCTRIAI Undefined NoteCTRIAI NoteCTRIAI NoteCTRIAI Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Bend-Mom Al Bend-Mom A2 Bend-Mom Bl Bend-Mom B2 Shear-l Shear-2 Axial Force TorqueComplex Element Forces IternWordor Component Force Force Note CTRIAI Undefined Note CTRIAI NoteCTRIAI NoteCTRIAI Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Undefined Bend-Mom Bend-Mom Bend-Mom Bend-Mom Shear-l Shear-2 Axial Force Torque Bend-Mom Bend-Mom Bend-Mom Bend-Mom Shear-l Shear-2 Axial Force Torque2 3 2 3 4 5 6 7 8 9 lO II 12 13 14 15 16 17Al A2 Bl B2 Al A2 Bl B2Real Imag. 2.3-190 (8/I/72)"},"title":"Programmer's Manual P15"},"/docs/programmers/programmers_manual_016/":{"data":{"":"DATABLOCKDESCRIPTIONS Element Type Name 35 CC@NEAX 36 CTRIARG 37 CTPJ_PRG 38 CT_RDRG 53-61 CDUMI thru CDUM9Wordor Component 2 3 4 5 6 7 8 9 I0 2 3 4 S 6 7 8 9 I0 II 12 13 2 3 4 S 6 7 8 9 I0 II 12 13 2 3 4 5 6 7 8 9 lORealElement Forces Item Harmonic orpoint angle Bend-Morn u Bend-Morn v Twist-Moment Shear u Shear v Radial (x) Circum (Theta) Axial (z) Radial Ix)Circum Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Radial (x) Circum (Theta) Axial (z) Moment (zx) Direct Strain Curvature x)Radial ITheta) Circum Axial (z) Moment (zx) Direct Strain Curvature F/ F2 F3 F4 F5 F6 F7 F8 F9atl at1 atl at2 at2 at2 at3 at3 at3 atl at1 atl at2 at2 at2 at3 at3 at3 at4 at4 at4 at1 atl atl atl atl atl at2 at2 at2 at2 at2 at2 2 3 4 5 6 7 8 9 lO II 12 13 14Complex Element Forces Word or Component Item Undefined Undefined Undefined Undefined F1 F2 F3 F4 F5 F6 F7 F8 F9 F1 F2 F3 F4Real Imag. 2.3-191 (8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS Element Type Name 53-61cont’d.RealElement Forces Wordor Component ItemWordor Component 15 16 17 18 19Complex Element Forces Item F5 F6 F7 F8 F9Real Imag. 2.3-191a (811/72)\nDATABLOCK ANDTABLE DESCRIPTIONS 2.3.53 Data Blocks Output FromModule DDR2 2.3.53.1 UEVF(MATRIX) Description [uf] -Displacements attheextra points forafrequency response problem.e Matrix Trailer Number ofcolumns =number offrequencies times number ofloads Number ofrows =e Form =rectangular Type =single precision 2.3.53.2 PAF(MATRIX) Description [P_] -Equivalent loadvector formodeacceleration computations inafrequency response problem -aset. Matrix Trailer Number ofcolumns :number offrequencies timesnumber ofloads Number ofrows :d Form :rectangular Type =single precision 2.3.53.3 Description [u_a] Matrix TrailerUDV2F(MATRIX) Mode accelerated displacement vectors forafrequency response problem. Number ofcolumns =number offrequencies times number ofloads Number ofrows =d Form =rectangular Type =complex single precision 2.3.53.4 UEVT(MATRIX) Description [u_] -Displacement attheextra points foratransient analysis problem. 2.3-192\nDATABLOCKDESCRIPTIONS Matrix Trailer Number ofcolumns =number ofoutput times multiplied by3 Number ofrows =e Form =rectangular Type =realsingle precision 2.3.53.5 PAT(MATRIX) Description [P_] -Equivalent loadvector formodeacceleration inatransient analysis problem. Matrix Trailer Number ofcolumns Number ofrows Form Typenumber ofoutput times multiplied by3 d rectangular realsing!p precision 2.3.53.6 UDV2T (MATRIX) Description [u_a]-Mode accelerated displacement vectors foratransient analysis problem. Matrix Trailer Number ofcolumns =number ofoutput times multiplied by3 Number ofrows =d Form =rectangular Type =realsingle precision 2.3-193\nDATABLOCKANDTABLEDESCRIPTIONS 2.3.54 DataBlocksOutput fromModule BMG 2.3.54.1 BDP_L (TABLE) Description Hydroelastic boundary matrix tables. fableFormat SameformatastheMATPBOL datablockDMIGcardimages. Notes: Thenamesofthematrices areKBFLandABFL Table Trailer IFPformat, 6words containing 96pointer bitsforusebysubroutines PRELOC andLOCATE. 2.3.55 DataBlocksOutput fromModule PLTTRAN 2.3.55.1 SIP(TABLE) Description SameformatasdatablockSIL. thenextSILvaluetohaveavalue: TheSIPdatawillbe:Iffluidpoints arepresent eachfluidpoint, i,willcause SIL(i+I) =SIL(i) +1 SIP(i+l) =SIP(i) +6 whereiisafluidpoint. 2.3.55.2 BGPDP(TABLE) Description Sameformat asdatablockBGPDTexcept fluidpoints havethevalue-2inthefields corresponding tocoordinate system identification numbers. 2.3-194 (811172)\n2.4EXECUTIVETABLEDESCRIPTIONS EXECUTIVETABLEDESCRIPTIONS Thefollowingisanalphabetical indexofExecutivetabledescriptions. Section Number Executive Table Name Where Stored 2.4.1.5 CEITBL /XCEITB/ 2.4.1.4 DPL /XDPL/ 2.4.1.2 FIAT /XFIAT/ 2.4.1.3 FIST /XFIST/and/XPFIST/ 2.4.2.8 IFPXO /IFPXO/ 2.4.2.9 IFPXI /IFPXl/ 2.4.2.7 LNKSPC /XLKSPC/ 2.4.2.2 MPL /XGPI2/ 2.4.2.1 _SCAR DataPoolFile 2.4.2.4 PVT /XPVT/ 2.4.i.B …..\" /_WT_M/ 2.4.1.7 TAPID /STAPID/ 2.4.1.6 VPS /XVPS/ 2.4.2.6 XALTER Problem Tape 2.4.2.5 XCSA Problem Tape 2.4.1.I XFIAT /XXFIAT/ 2.4.1.9 XLINK /XLINK/ 2.4.2.3 XPTDIC Problem TapePageNumber 2.4-9 2.4-7 2.4-3 2.4-5 2.4-31 2.4-32 :.4-29 2.4-21 2.4-15 2.4-26 2o4-13 2.4-12 2.4-10 2.4-28 2.4-27 2.4-2 2.4-14 2,4-24 2.4-I (311171)\nDATABLOCKANDTABLEDESCRIPTIONS 2.4.1 Executive Tables WhicharePermanently CoreResident 2.4.1.1 XFIAT(Permanent FileAllocation Table) Description ANASTRAN resident memory tablecontaining thephysical fileidentification forthe permanent files(P_L, OPTP,etc.). Created inModule Thephysical fileidentifications areoutput byGNFIAT (generate FIAT). TableFormat Word 1 s 2 s 3 NNOT ITI USEDi;I_o11_ FILE NOTI!1FILE NJT ITI USED 171_6115 FILE NOT ITI USED _71_61IsFILE Word Item Description I-N TP NotesFILETapeFlag(Ibit)-setifphysical file(FILE) isa magnetic tape. File ID(15bits) -unique integer identification for aphysical file. 1• Thenumber ofentries (N)isdictated bytheinteger value inPFIST (seeFIST Executive TableDescription -2.4.1.3) 2.TheXFIATtableislocated inthenamedcommon block/XXFIAT/. 2.4-2\nEXECUTIVE TAJ3LE DESCRIPTIONS 2.4.1.2 FIAT (File Allocation Table). Description ANASTRAN resident memory table containing thedatablock namevs.physical fileID.for asegment ofDMAPmodules. Created inModule Thephysical files available forthesystem/computer confiquration areoutout by_NFIAT (generate FIAT). Thedatablock names andother datablock information areoutnut byXSFA, Executive Segment FileAllocator. Table Format Word l 2 3 4 5 6 7 8 9 lO NUFA MXE CAE I.A_’ ITII jP_LTUIPI ___3_1_o ’,’,_FILE J DATABLOCK NAME DATABLOCK TRAILER I! I ’ :L m m _…….FIATHeader Entry #I(sample) Entry #2through C/E 2.4-3\nDATABLOCKANDTABLEDESCRIPTIONS Wor_d_d Item Description 1 UFA Unique filesavailable -thisinteger indicates thenumber of unique fileentries intheFIAT. 2 MXE Maximum entries -this integer shows thetotal entry size of thedimensioned FIAT table; theamount ofmemory reserved (N)=6xMXE+3. 3 CAE Current active entries -thisinteger designates theportion of FIATcurrently containing validdata;UFA_CAE_HXE. Words4through 9describe asample 6-word entry: 4 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced. 1bit,fileequivalenced. AP Append flag (Ibit) -setifappend issDecified fordata block inDMAP sequence byaFILE DMAP instruction. LTU Lasttimeused(14bitinteger) -record number of@SCAR entry forlastuseofdatablock. TP Tapeflag(Ibit)-setifphysical file(FILE) isamagnetic tape. FILE File ID(15bits) -unique identification foraphysical file. 5,6 NAME Data block name -8characters (4characters/word). 7,8,9 TRAILER Datablocktrailer -storage for6-16bitdatablocktrailer words. WordsI0through Ncontain repeated 6-word entries. Trailer Information Trailer information foreachdatablock isstored inandreceived fromtheFIATbyWRTTRL (write trailer) andRDTRL(readtrailer). Note TheFIATtableislocated inthenamedcommon block/XFIAT/. 2.4-4\nEXECUTIVE TABLE DESCRIPTIONS 2.4.1.3 FIST (File Status Table) Description ANASTRAN resident memory table containing theinternal data block reference (IDBR) numbers vs.FIATtable pointers foraparticular module; also, thepermanent filereference names vs.XFIAT table pointers. Created inModule Themodule entries aregenerated prior toeachmodule execution bysubroutines GNFIST (Generate FIST). Thepermanent entries areinitialized atsystem assembly. Table Format PFIST I I I MXE CAEWord l 2I+2+I +2 +3 +4 NPermNameI I i XFPointl I PermName2 IIl XFPointI IDBRl 0i FPoint I sl IDBR2 I I ol sl FPointIFISTHeader Sample Permanent Entry Sample Module Entry 2.4-5\nDATABLOCKANDTABLEDESCRIPTIONS Word Item Description. PFIST I Integer number ofpermanent FISTentries. 1 MXE Maximum entries -thisinteger showsthetotalentry sizeofthe dimensioned FISTtable; theamount ofmemory reserved (N)=2*MXE+2. 2 CAE Current active entries -thisinteger designates theportion of FISTcurrently containing validdata;IcCAE_MXE. Words3and4describe asample 2-word permanent entry: 3 PermName Apermanent filereference name-4characters BCD(e.g., P_L, OPTP,PLTI,etc.). 4 XFPoint Points totheXFIATposition containing thefileIDforthis permanent file. Words21+2+I and+2describe asample 2-word module entry. +I IDBR Aninternal datablockreference number (GINOfilenumber) - integer (e.g., 104,206,301,etc.). +2 FPoint Points totheFIATposition containing thefileIDforthis module entry. Notes I. 2, 3. °XFIATpointer values contain anSbitequaltoI,while FIATpointer values contain an SbitequaltoO. Permanent entries remain static throughout arun, while module entries arechanged by GNFIST prior toeach module call. FIATandXFIATposition pointers areindexes intotherespective tables considering thefirstwordofthetableasposition O. TheFISTtableislocated inthenamedcommon block /XFIST/. ThePFISTentry islocated inthenamedcommon block/XPFIST/. 2.4-6\nEXECUTIVE TABLE DESCRIPTIONS 2.4.l.4 DPL(Data PoolDictionary) Description ANASTRAN resident memory table describing thecurrent contents andstatus oftheDataPool. Created inModule DataPool, andtherefore Dictionary entries, arecreated bypooling fromSFA(Segment File Allocator), housekeeping operations byDPH(Data PoolHousekeeper) andrestart initialization by GPI(General Problem Initialization), andIFP(Input FileProcessor) whenwriting D_IandDTI information (seesection 2.3.2). TableFormat Word1NFA MXE CAE DATABLOCK NAME B ET rI Q: SIZE Im I S!31 17116FILE# ! II j I IIDPLHeader Entry #I(samole) Entry #2 2.4-7\nDATABLOCKANDTABLE DESCRIPTIONS NoteWord Item 1 NFADescription Nextfileavallable- thenextDataPoolFilenumber (integer) available foroutput. 2 MXEMaximum entries -thisinteger showsthetotalentrysizeof thedimensioned DPLtable; theamount ofmemory reserved (N):3*MXE+3. 3 CAE Current active entries -thisinteger designates theportion of theDPLcurrently containing validdata;0\u003cCAE_MXE. Words4through 6describe asample 3-word entry. 4,5 N_tE Datablock name-8characters (4characters/word). 6 EQ Equivalence flag(Ibit)-0bit,filenotequivalenced. 1bit,fileequivalenced. SIZESizeofthepooled datablock-number ofwords/lO. FILE# Thefilenumber (integer) showing therelative position ofthe datablockfileofthepool. TheDPLtable islocated inthelabeled common block /XDPL/. 2.4-8\nEXECUTIVE TABLE DESCRIPTIONS 2.4.1.5 CEITBL (Control Entry Information Table) Description CEITBL controls theREPTandEXITDI_APmodule execution. Created InModule XGPI. Table Format Word l 2 3 4 5 6 7 8 9 lO Mt_MN BL EL !31…… 1_16 ….. I ML CL 3!…… 1_716 1.(\" — LN — ,otus 1 1,:_ L Notused NotusedSample entry forREPTcontrol (4words) Sample entry forEXITcontrol (4words) Word l 2 3 4 5,6 7 8 9,10Item MN CN BL EL ML CL LN ERN MC CCDescription Maximum nu_er ofwords intable (integer). Current number ofwords being used (integer). 9SCAR record number where loopbegins (integer). _SCAR record number where loopends (integer). Maximum loopcount asspecified inREPT instruction (integer). Current loopcount, thatis,thenumber oftimes loophasbeen repeated (integer). Location namespecified inREPTinstruction (BCD). EXIT9SCAR record number (integer). Maximum count specified inEXITinstruction. Current count ofnumber oftimes EXITinstruction notexecuted. These twowords arezeroed. Notes CEITBL islocated innamed common block /XCEITB/. 2.4-9\nDATABLOCKANDTABLEDESCRIPTIONS 2.4.1.6 VPS(Variable Parameter SetTable) Description TheVPStablecontains thevaluesofallvariable parameters referenced byDMAPmodules ina DMAPprogram. Itisthemeansfortransferring variable parameter values fromonemodule to another. Created inModule XGPI. TableFormat Word 4 5 6 5+L Mfi Word 1 2 3,4 5 6thru5+LMN CN Parameter Name [AM T L 0 20 1716 1Sample entry (variable length) Item MN CN Name ADescriDtion Maximum numberofwordsinVPS(integer). Current number ofwordsbeingused(integer). BCDnameofvariable parameter. Assigned flag. A=1indicates valuefromDFtAPinstruction hasbeenentered inVPS. Modified flag. M=1indicates parameter wasmodified bybulk dataPARAMcardonrestart. Typecodeforparameter (integer). Length inwordsofitemV(integer). Valueofparameter. 2.4-10\nEXECUTIVE TABLE DESCRIPTIONS Notes I. 2.Items A,MandT(word 5ofsample entry) areusedonlybytheXGPImodule andare cleared prior toexiting XGPI. Type codeandcorresponding word length. T L l=integer l 2=real, S.P. l 3=BCD 2 4=real, D.P. 2 5=complex, S.P. 2 6=complex, D.P. 4 3.TheVPStable islocated inthenamed common block /XVPS/. 2.4-11\nDATABLOCKANDTABLEEESCRIPTIONS 2.4.1.7 TAPID(Problem TapeIdentification Table) Description TAPIDcontains Problem Tapeidentification information. Created inModule XCSA. Table Format Word ID1 __ ID2 31M i RD 514 98 Word 1,2 3,4 5 G Notes , 2,Item ID1 ID2 M,D,Y RDescription FirstBCDfieldonI[Executive Control card. Second BCDfieldonIDExecutive Control card. Thedate-integers -month, day,year. Reelnumber ofProblem Tape(integer). TAPIDiswritten onProblem Tapeassingle record field. Itisalways thefirst file ontheProblem Tape. OTAPID hassameformat asTAPID. @TAPID istheIDinformation fromanOldProblem Tape beingusedforrestarting problem. 3.TAPIDand@TAPID arelocated innamedcommon block /STAPID/. 2.4-12\nEXECUTIVETABLEDESCRIPTIONS 2.4.1.8SYSTEM(NASTRANSystemParameters). Description ANASTRAr! resident memory tablecontaining various machine dependent, operating system and NASTRA_I parameters. Thelength ofthetable isdefined byoneofthetableitems. Created in_odule I,lostitemsareinitialized bytheNASTRAN blockdataprogram, SE_DBD. Several machine dependent itemsaresetbysubroutine BTSTRP. TableFormat Thesequential table description follows: Word S_bol DescriptionInitially Setb_ 1 SYSBUF 2 UTTAP 3 N@G 4 INTP 5 PC 6 SPC 7 METHOD 8 LBAD 9 NLPP i0 MTEMP II NPAGES 12 NLINES 13 TLINES 14 MXLINS 15 DATE(1) 16 DATE(2) 17 DATE(3) 18 TIMEZ 19 ECH_F 20 PL_TF 21 APPRCH 22 MACH 23 LSYSTM 24 EDTUMF 25 SWITCH 26 CPPGCT 27 MN 28 IC_NFG 29 MAXFIL 30 MAXOPN 31 K_N360 32 TIMEW 33 FPFLGNumber ofwordsina_INBbuffer BTSTRP F@RTRAN looical unitforoutput BTSTRP Flag defining status during Preface SEMDBD FORTRAN logical unit forinput BTSTRP Multipoint constraint setID SEMDBD Single-point constraint setID SE_IDBD ……………….. __.^ gF_DRD L_valu_ ….. Firstrecord pointer inCaseControl datablock SEMDBD Number oflinesperDa_eofprinted output BTSTRP Material temperature setID SEMDBD Current pagecount SEMDBD Number oflinesoncurrent page SEMDBD Totalnumber oflinesprinted forproblem SEMDBD Maximum number ofprinted linespermitted SEMDBD Today’s date-integer month 1-12 SEMDBD Today’s date-inteoer day1-31 SEMDBD Today’s date-integer year(XX) SEMDBD Timeofproblem start-seconds aftermidnite SEMDBD Bulkdataoutput reouest type SEMDBD Structural plotrequest flag SEMDBD Approach typeflag(2=DISDL, 3=DMAP) SEMDBD Computing machine codenumber (2=360,3:1108, 4=6600) BTSTRP Length ofthistable SEMDBD Usermaster fileeditflag SEMDBD Logical senseswitch bitssetbyaDIA_ Executive Control Deckcard SE_DBD XCHKmodule pagecount SEMDBD Usedonlyinaconical shellproblem. Thelower order16bitscontain N,thenumber of harmonics; thenexthigher order16bits contain M,thenumber ofrings. SEMDBD Machine configuration -subset ofMACHcode number SEMDBD Maximum number offiles tobeadded toFIAT SEr_DBD Maximum number offiles tobeopened simultaneously SEMDBD Number ofmemory words tobereleased for_S (360 only) SEMDBD Initial problem start time (integer seconds after midnite) SEMDBD _FPoperate flag-setnonzero whenOFPoperates SEMDBD 2.4-13 (811172)\nEXECUTIVETABLEDESCRIPTIONS Word 34 35 3637 3839 4041 42 4344 45 4647 48 495O 5152 53 5455 5657 58 596O 6162 63 6465Symbol NBRCBU NBRMST NBRSUB KSEMTR QONBPC NBPW NCPW SYSDAT(1) SYSDAT(2) SYSDAT(3) TAPFLG ADUMEL(1) ADUMEL(2) ADUMEL(3) ADUMEL(4) ADUMEL(5) ADUMEL(6) ADUMEL(7) ADUMEL(8) ADUMEL(9) IPREC !THRML Unused Unused Unused Unused Unused Unused Unused Unused UnusedDescription Length ofFET+circular buffer (CDC6600only) Length ofmaster index(CDC6600only) Length ofsubindex (CDC6600only) InputDataTransliteration Flag(IBI_36_only) Hydroelastic Problem Flag Number ofbitspercharacter Number ofbitsperword Number ofcharacters perword System Generation Date-Month System Generation Date-Dav System Generation Date-Year Permanent FileTapeFlag DummyElement Flag-DUMI DummyElement Flag-DUM2 DummyElement Flag-DUM3 DummyElement Flag-DUM4 DummyElement Flag-DUM5 DummyElement Flag-DUM6 DummyElement Flag-DUM7 DummyElement Flag-DUM8 DummyElement Flag-DUM9 Precision Flag HeatTransfer FlagInitially Setby SE_IDBD SEMDBD SEr_DBD SEMDBD SEMDBD BTSTRP BTSTRP BTSTRP TTLPGE TTLPGE TTLPGE SEMDBD SEMDBD SEMDBD SEMDBD SEMDBD SEMDBD SE_DBD SEr_DBD SEMDBD SEMDBD SEMDBD SEMDBD 2.4-13a (8/I/72)\nDATABLOCKANDT_,BLEDESCRIPTIONS 2.4.1.9 XLINK(LinkSpecification Tab]e- Non-resident Edit) Description ThisLinkSpecification Table(seealso2.4.2.7) contains anentrycorresponding toeach DI_Pmodulewithin theMPL(2.4.2.2) table. Theseentries areindexed byMPLposition and arethusordered thesameastheMPLentries. Eachentrycontains akeyindicating the linksinwhichthemodule resides. Created inModule XLINKdataiscreated fromtheLNKSPC (2.4.2.7) andMPL(2.4.2.2) tablesbytheXGPIBS subroutine within theXGPI(4.7)module. TableFormat Word 1 Word Item 1 LXLINK 2 MAXLNK 3,N KeyLXLINK MAXLNK Key Key KeyEntry#I(sample) Entry#2 Entry#3 Description Length oftable (number ofentries) Maximum permissable linknumber Linkresidence keyforthecorresponding MPLentry Thecontent ofthisKeywordisidentical totheKeywordwithin LNKSPC (2.4.2.7) forthe machine typecurrently operating. Seesection 2.4.2.7 foranexplanation ofthecontent. Notes I.TheXLINK table must contain anentry inthesameorder foreachmodule thatis intheMPL(2.4.2.2) table. 2.XLINKtableislocated in/XLINK/. 2.4-14"},"title":"Programmer's Manual P16"},"/docs/programmers/programmers_manual_017/":{"data":{"":"EXECUTIVETABLEDESCRIPTIONS 2.4.2Executive Tables NotPermanentl_ CoreResident 2.4.2.1 SCAR (Operation Sequence Control Array) Description TheOperation Sequence Control Array (SCAR) controls thesequence ofmodules executed and aidsincommunicating data between modules. The_SCAR isgenerated fromaDMAPinstruction sequence supplied bytheuserorselected fromtheRigid Format library. Ingeneral, an_SCAR entry isaDMAPstatement which hasbeen translated toamore readily usable formforinternal use. Thefour_SCAR entry format types are: I.Type lorF(functional) format isusedforallfunctional modules exceot outout processors. 2.Type 2or(output) format isusedforoutput processors. 3.Type 3orC(control) format isusedforREPT, JUMP, C_NDandENDDMAPinstructions. 4.Type 4orE(executive) format isusedforSAVE, CHKPNT, PURGE andEQUIV DMAP instructions. Created inModule XGPI. Table Format Word l 2 3 4 5 6 7 NRN MI LTi__7 L_ _.i Module Name -El DINS31 Formatofthis section isdependent onvalueofTEntry Header Section Entry DataSection 2.4-15\nDATABLOCKANDTABLEDESCRIPTIONS Word 1 2 3 4,5 6Item N RN MI Name EX DINDescription Integer -number ofwords inentry. Integer -record number ofentryin_SCARtable. Integer -module indexnumber assigned according tomodule’s position inMPLandusedtoaccess themodule’s linkspecifica- tionsin/XLINK/. Integer -format typecode(l,2,3,or4)fordatasection ofentry. BCD-module nameissameasDMAPinstruction nameexcept when T=4. Execute flag. EX=1indicates module istobeexecuted. Integer -DMAPinstruction number whichgenerated thisentry. DataSection Format forTypeIorFFormat: Word I0 8+NIP3 9+NIP3 IO+NIP3 II+NIP3 9+NIP3+NOP3 IO+NIP3+NOP3 II+NIP3+NOP3NIP DATABLOCK NAME NTU i N_P DATABLOCK NAME ___ L1_s_ NS NP -C IL (Notused)Sample entry Sample entry Sample entry (variable length)Input DataBlock Subsection Output DataBlock Subsection Parameter Subsection 2.4-!6\nEXECUTIVE TABLE DESCRIPTIONS Word 7 8,9 lO 8+NIP3 9+NIP3, lO+NIP3 II+NIP3 9+NIP3 + _fP3 lO+NIP3 + N@P3 II+NIP3 + N_P3Item NIP {tAME AP LTU TP NTU N_P NAME AP,LTU, TP,NTU NS NP CV ILDescription Integer -number ofdatablocks input tomodule asspecified inMPL. BCD-nameoffirst input datablock specified inDMAPinstruc- tionorzero ifnonespecified. Append flagusedbysubroutine XSFAandsetbyX_SGEN ifAPPEND isspecified fordatablock inaFILEDMAP instruction. Integer -lasttimeused. _SCAR record n_ber ofentry a_ter which datablock willnolonger besaved. Tapeflagusedbysubroutine XSFAandsetbyX@SGEN iftapeis specified fordatablock inaFILEDMAPinstruction. Integer -nexttimeused. _SCAR record number ofentry where datablock isnextreferenced. Integer -number ofdata blocks output frommodule asspecified inMPL. BCD-nameoffirst output datablock specified inDMAP instruc- tionorzeroifnonespecified. Samedescriptions aswordlO. Integer -number ofscratch datablocks usedbymodule as specified inMPL. Integer -number ofparameters usedbymodule asspecified in MPL. Constant/variable flag. Flag indicates meaning ofIL. Integer -VPSindex/length ofconstant. IfCV=0theparameter isaconstant whose value isstored inthenext ILwords (i.e., words 12+NIP3 +NQIP3 through II+NIP3 +N_P3 +IL). IfCV=ltheparameter isavariable whose value isstored in theVPStable. ILpoints tothevalue inVPS. 2.4-17\nDATABLOCKANDTABLEDESCRIPTIONS DataSection Format forType2or0Format: Word I0 8+NIP3 9+NIP3 IO+NIP*38 9NIP DATABLOCK NAME LTU NTU I 15 INS NP –31Sample entry ISampl eentry I(variable length)InputDataBlock Subsection IParameter Subsection Type1format description isapplicable totype2format above. DataSection Format forType3orCFormat: Word7=NI131RRN1716I11 Word Item Description N RRN Integer -re-entry record number. Indicates OSCARrecord to jumptoforJUMP,REPTandC_NDDMAPinstructions. Not applicable forEXITsoRRN:O. Integer -indexintoXCEITBL forREPTorEXITDMAPinstruction. Pointer toparameter valueinXVPStable ifC@NDDMAP instruction. Notapplicable forJUMPsoI:O. 2.4-18\nEXECUTIVETABLE DESCRIPTIONS DataSection Formats forType4orEFormats: Word7 8 9 NNP IV IB Sample entryFormat for SAVEDMAP instruction Word 7Item NP IV IBDescription Integer -number ofparameter values tobesaved (i.e. number ofentries). Integer -pointer toparameter value inVPS. Integer -pointer toparameter value inblank common. Word 7 8 9 N-l NNDB FIRST DATA BLOCK NAME LASTDATA BLOCK NAMEFormat forCHKPNT DMAP instruction Word 7 8thru NItem NDB NAMESDescription Integer -number ofdatablocks names inlist. BCD-listofdatablocks tobecheckpointed. 2.4-19\nDATABLOCK ANDTABLE _ESCRIPTIONS Word7 8 9NDB DATABLOCK J _- NAME : IVFormat forPURGE orEQUIV DMAPinstruction Word 7 8,9 N Notes I. 2.Item NDB N_4E IVDescription Integer -number ofdata block names infirst qroun. maybeoneormoregroups. BCD-name offirst datablock infirst group. Integer -pointer toparameter value inVPStable.There _SCAR islocated innamed common block /XGPII/while module XGPI isgenerating it. After generating _SCAR andprior toexiting XGPIthe_SCAR iswritten ontheDataPool File. The_SCAR fileheader IDisX_SCAR. 2.4-20\nEXECUTIVETABLEDESCRIPTIONS 2.4.2.2MPL(ModulePropertyList) Description TheModule Properties Listcontains information needed bythemodule XGPItocorrectly generate OSCAR table entries forexecutable DMAPinstructions and/or todetermine whether or nottheDMAP instructions adhere tothecalling sequence described insection 4,Module Functional Descriptions. Created inModule XGPI(Block DataProgram XMPLBD). Table Format There aretwoformats usedintheMPL,oneforDeclarative (FILE, BEGIN, LABEL), Executive (CHKPNT, EQUIV, PURGE, SAVE) andControl (REPT, JUMP, C_ND, EXIT, END) DMAPmodules andtheother forfunctional modules. Allentries intheMPLareinteger except formodule names which are BCDandBCDparameter values. Format forDeclarative, Executive andControl Modules: Word iiN4i2 Module 3 Name 4 F Word l 2,3 4Item N Name FDescription Nu_er ofwords inentry. NameofDMAPmodule. _SCAR format typecode 3=Control module (Cformat) 4=Executive module (Eformat) 5=Declarative module (Dformat) 2.4-21\nDATABLOCKANDTABLEDESCRIPTIONS Format forFunctional Modules: Word l, 2 3 4 5 6 7 8 NN Module Name F IP @P S Parameter ListIVariable Length Word I-3 4 5 IP 6 @P 7 S 8-NItem FDescription Sameasformat forDeclarative, Executive andControl modules. F:1implies module hasinputandoutputdatablocks F:2implies module hasnooutput datablocks, e.g., _FP,SETVALetc. Numberofinputdatablocks. Numberofoutputdatablocks. Number ofscratch datablocks. Parameter List (omit ifnoparameters). Theparameter listforamodule contains thetypesofallparameters residing inblank common thatarereferenced bythemodule. Theorderoftheparameters intheMPLentrymust coincide withtheorderoftheparameters inblankcommon. Spacemustbeallowed foradefault valueiftheparameter typecodeispositive. Thespacefollowing apositive typecodewill contain thedefault valueifthetypecodeisinteger orBCD,otherwise thespacewillcontain anindexintoanother tablewhichcontains thedefault value. TypeCode 1=integer 2:real,singleprecision 3=BCD 4=real,doubleprecision 5=complex, single precision 6=complex, double precisionSpaceNeeded forDefault Values 1word 1word 2words 2words 2words 4words 2.4-22 (12-I-69)\nEXECUTIVETABLEDESCRIPTIONS Anexampleofallpossibleentries inaparameter listfollbws. Notethatforeachparameter onlythefirst index wordwill appear intheXMPLBD Block Datasubprogram. m l -3 -___]I2 _L -2 3 ABCD EFGH -__3_34 l I -45 2 ___L2 -__E_s6 3 3 4 4 -6Word 8=Integer typecode. 9=Integer default value. lO=Integer typecode(nodefault value). II=Real, S.P.typecode. 12=Index intotable containing arealS.P.default value. 13=Real, S.P.typecode (nodefault value). 14=BCDtypecode. is{16=BCDdefault value (2words). 17=BCDtypecode (nodefault value). 18=Real, D.P.typecode. 19=_Index intotable containing arealD.P.default value. 20 {Noteindex isinbothwords. 21=Real, D.P.typecode (nodefault value). 22=Complex, S.P.typecode. 23{24=Index intotable containing acomplex S.P.default value. 25=Complex, S.P.typecode(nodefault value). 26=Complex, D.P.typecode. 27{28=Index intotable containing therealpartofthecomplex D.P.default value. 29=_inaex in_ocaole containing theimaginary partofthecomplex D.P. 30tdefault value. 31=Complex, D.P.typecode(nodefault value). Notes I.MPLtable islocated innamed common block /XGPI2/. 2.Thedefault value table islocated innamed common block /XGPI2X/. 2.4-23(12-1-69)\nDATABLOCK ANDTABLE DESCRIPTIONS 2.4.2.3 XPTDIC (Problem TapeDictionary) Description XPTDIC istheProblem TapeDictionary ofdatablocks checkpointed plusother information needed torestart aproblem. Created inModules XGPI, CHKPNT andXCEI. Table Format Record Word 1 2 1 2 1 2 3 4 5 6 7 8 9 K K+I K+231 I\"AFI1716 !, S XVPS —- BCDBLANKS BCDBLANKS __T31DIN 17116(RN m DBN — -EQTET_R] Rl F [ XVPS EQ R F s13113Ol29 17 1 End-of-fileFirst entry ina group isaspecial entry Repeat thisentry foralldatablocks referenced explicitly orimplicitly in CHKPNT instructionThis group of entries is repeated foreach CHKPNT module executed 2.4-24\nEXECUTIVETABLEDESCRIPTIONS Record Word Item 0 1,2 ID l l PR NAFDescri ption Header record containing nameXPTDIC (BCD). Present reelnumber ofProblem Tape. Reels are numbered sequentially beginning with ReelI. Nextavailable filenumber onpresent reel. Files arenumbered sequentially beginning with file I. 2 S 2 1,2 XVPSSequence number oflastrestart dictionary card punched out. BCDnameXVPS. Thefilecorresponding tothis entry contains named common blocks /XVPS/and /XCEITB/. 3 R,F 4,5 (blanks) 6 DIN 9RNReelnumber andfilenumber where thefile corresponding tothisentry islocated. Forthis entry thereelnumber mustbeone. BCDblanks indicate special entry. DMAP instruction number ofDMAPinstruction following CHKPNT module (i.e., re-entry point). SCAR record number ofCHKPNT module being executed. /, 9UUI, EQ ET ER R,F K,K+l XVPS K+2 EQ,ET, ER,R,Fn_+ k1,,v(RED)ofdatahlockbeing u_ua u,_ name __ checkpointed. Equivalence flag. EQ=lindicates data block is equivalenced toanother datablock. Endoftapeflag. ET=lindicates that data block issplit across tworeels ofproblem tape. Endoflogical record flag. ER=lindicates thatthecomplete logical record waswritten out prior tochanging reels when ET=I. Reelnumber andfilenumber where thefile corresponding tothisentry islocated. For purged ornot-generated datablocks, R=0and F=O. BCDnameXVPS. Thefilecorresnondina tothis entry contains named common blocks /XVPS/, /XCEITB/and/SYSTEM/. Seeword9fordescriptions. Notes I. 2. 3. °Allentries areinteger unless otherwise noted. TheXPTDIC table isalways thelastfileontheProblem Tape. XGPIgenerates records O,landthefirst entry ofrecord 2.CHKPNT modules add entries torecord 3.XCEIdrops entries fromrecord 2whenaREPTDMAPinstruction transfers control tothetopofaDMAPloon. XCSAalsocreates aXPTDIC table whenproblem isbeing restarted. This soecial XPTDIC table iscreated fromtherestart dictionary anditsformat isessentially thesameas described above except thatthere arenospecial entries. 2.4-25\nDATABLOCKANDTABLEDESCRIPTIONS 2.4.2.4PVT(Parameter ValueTable) Description TheParameter Value Table contains theparameter names andvalues ofallparameters input bymeans ofthePARAM bulkdatacard. Created inModule IFP. Table Format Record Word Item 0 1,2 Header record contains namePVT(BCD). 1,2 3 4 3+LNameofparameter (BCD) Type codeforparameter value Value ofparameter. Type codes andcorresponding lengths, L,of values aregiven intable below.repeat forall parameters onPAP_AM cards. Notes TypeCode Meaning ofCode Integer Real, single precision BCD Real, double precision Complex, single precision Complex, double precisionCorresnonding Length inWords l l 2 2 2 4 I.IFPdoesnotcreate PVTifnoPARAM cards exist intheBulk DataDeck. 2.PVTiswritten ontheProblem Tapeas2ormore records (aheader record andlrecord for each PARAM card). 3.ThePVTtable islocated innamed common block /XPVT/. 2.4-26\nEXECLFTIVETABLEDESCRIPTIONS 2.4.2.5XCSA(Executive ControlTable) Description Executive control table derived from theExecutive Control Deck. Created inModule XCSA. TableFormat Record Word 0 l 2,3 4,5 6,7 l l 2 3,4 5 6 2 1 N 1 2 3 L L+I M M+IItem BCDwordXCSA-header ID. BCDwordS_L_Dictionary ofcontents ofrecords BCDwordDMAP_tofollow. Doesnotneedtobein BCDwordMED)thisorder, norisMEDalways present. Approach code iStart code Alter parameters S_Lrecord Solution number _Subset number nn_kl^ f-_P_A nM_D n_m oruser_enerated DMAP program (18words percard image). )DMAPrecord (BCDinformation) Number ofDMAPinstructions Number ofwords perISltable entry. IS1table (Module Execution Decision Table). Number ofentries inJNMtable. JNMtable (File NameTable) Number ofentries inINMtable INMtable (Card NameTable) 4 End-of-fileMEDrecord included only if aooroach calls for aRigid Format Notes I.Datablock XCSA iswritten ontheProblem Tape. 2.Amore detailed description oftables ISl,JNMand INMisgiven intheModule Functional Description formodule XCSA, section 4.2. 2.4-27\nDATABLOCKANDTABLEDESCRIPTIONS 2.4.2.6XALTER(Executive AlterTable) Description XALTER isgenerated fromtheALTER data intheExecutive Control Deck. Created inModule XCSA. Table Format Record Word 0 1,2 l 1,2 l 18Item BCDwordXALTER -header record Numbers ofDMAPinstructions tobealtered. (Integers). Card image (BCD) N End-of-file Notes XALTER datablock iswritten ontheProblem Tape.Zeroormoreofthese records. Repeat until next2word record encountered.Repeat 1or more times until E_F encountered. 2.4-28\nEXECUTIVETABLEDESCRIPTIONS 2.4.2.7LNKSPC(LinkSpecification Table-ResidentBase) Descri ption ThisLinkSpecification Table (seealso2.4.1.9) contains anentry foreachexecutable DMAPmodule available within theNASTRANsystem. Eachentry contains: a)theDMAPmodule name, b)themodule’s subroutine entry point nameandc)akeyindicating thelinks inwhich themodule resides foreachoffourmachine types. Created inModule LNKSPC dataisstored bytheXBSBD Block Datasubprogram inmodule XGPI (4.7). Table Format Word l 2 3 4 5 6 7 8 9LLINK DMAPModule Name Entry Point Name Key#1 Key#2 Key#3 Key#4Entry #I(Sample) Word 1 2,3 4,5 6 7 8 9Item LLINK DMAPModule Name Entry Point Name Key#1 Key#2 Key#3 Key#4Description Length oftable inwords (excluding word l) DMAPname-8 characters (4characters/word) Entry name-8 characters (4characters/word) Linkresidence keyformachine type#1 Linkresidence keyformachine type#2 Linkresidence keyformachine type#3 Linkresidence keyformachine type#4 2.4-29\nDATABLOCKANDTABLEDESCRIPTIONS ThemachinetypecodenumberisthesameasthatdefinedintheMACHwordoftheSYSTEM (2.4.1.8)table.EachbitwithintheKeywordspecifiesalinknumberthatistocontainthat module.Bitsarenumberedfromrighttoleft;therightmost(leastsignificant) bitspecifiesthatthemoduleistoresideinlinkl,etc.Forexample,ifaparticular Key contained26(binaryOllOlO),onlylinks2,4and5wouldcontainthespecifiedmodule. Notes I.TheL_!KSPCtablemustcontainanentryforeachexecutable modulethatisinthe MPL(2.4.2.2)table. 2.TheLNKSPCtableislocatedin/XLKSPC/. 2.4-30\nEXECUTIVETABLEDESCRIPTIONS 2.4.2.8IFPXO(ModifiedRestartTable) Description IFPXO records thetypes ofchanges totheinput datawhich weremade during arestart. In addition, itclassifies each typeofchange astosubstantive (solution affecting) ornonsub- stantive (output onlyaffecting). Thebasic dataisstored inpacked format, 31bits totheword. Theuseofthisarray inrestart anditscompanion /IFPXI/isdescribed insection l.lO, Created inModule(s) IFPI, XS@RT andIFPandreadbyXGPI. Table Format Word Item l N 2 Il 3 Ll 4 I2 5 L2 6 I3 7 L3 8through 18 IB 19through 29Number ofpairs (I,L) tofollow. Pointer tofirst word in/IFPXO/that isused toflagmodified bulkdata. Nu_er ofwords reserved formodified bulkdata flags. Pointer tofirst word in/IFPXO/that isused toflagmodified CaseControl data. Number ofwords reserved formodified Case Control dataflags. Notused. Array containing flags which specify what input hasbeenmodified forrestart (themeaning of eachbitcanbedetermined from/IFPXI/.(See section 2.4.2.9). Array which specifies which bitsintheIBarray caninitiate amodified restart. 2.4-31 (311171)\nUA[ABLOCKANDTABLEDESCRIPTIONS 2.4.2.9IFPXI(MasterCardNameTable) Description IFPXl contains mnemonics forthevarious cardtypes (anddatatypes) which canbesignificant forrestart. Itisactually akeyintocommon block IFPXO (seesection 2.4.2.8). array isdescribed insection l.lO. Created inModule Modules IFPI, XSORT, IFPandXGPIreadthisarray. Table Format Word No. BitNo. InIFPXl InIFPXO Contents l 31O 2 l GRID 4 2 GRDSET 6 3 BEAMOR 8 4 SEQGP l0 5 CORDIR 12 6 CORDIC 14 7 CORDIS 16 8 CORD2R 18 9 CORD2C 20 lO CORD2S 22 II PLOTEL 24 12 SPCI 26 13 SPCADD 28 14 SUPORT 30 15 OMIT 32 16 SPC 34 17 MPC 36 18 FORCETheuseofthis Output Only (PMR) Number of CardTypes YesSupported NO 2.4-32 (3111;I)\nEXECUTIVETABLEDESCRIPTIONS WordNo. BitNo. OutputInIFPXI InIFPXO Contents Only (PMR) 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 9619 20 21 22 23 24 25 26 27 28 29 30 31 32(word 2) 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48M_MENT FIERCE1 M@MENTI F_RCE2 M@MENT2 PL_)AD SL_AD GRAV TEMP GENEL PROD PTUBE PVISC PBEAM PTRIAI PTRIA2 PTRBSC PTRPLT PTRMEM PQUADI PQUAD2 PQDPLT PQDMEM PSHEAR PTWIST PMASS PDAMP PELAS C_NR_D CR_DSupported No 2.4-33 (311171)\nDATABLOCKANDTABLEDESCRIPTIONS WordNo. BitNo. Output InIFPXI InIFPXO Contents Only(PMR) 49 5O 51 52 53 54 55 56 57 58 59 60 61 62 63(word 3) 64 65 66 64 68 69 7O 71 72 73 74 75 76 7798 I00 102 104 106 108 II0 112 114 116 118 120 122 124 126 128 130 132 134 136 138 140 142 144 146 148 150 152 154CTUBE CVISC CBEAM CTRIAI CTRIA2 CTRBSC CTRPLT CTRMEM CQUADI CQUAD2 CQDPLT CQDMEM CSHEAR CTWIST CONMI CONM2 CMASSI CMASS2 CMASS3 CMASS4 CDAMPI CDAMP2 CDAMP3 CDAMP4 CELASI CELAS2 CELAS3 CELAS4 MAT1Supported No 2,4-34 (3/I/71)"},"title":"Programmer's Manual P17"},"/docs/programmers/programmers_manual_018/":{"data":{"":"EXECUTIVE TABLE DESCRIPTIONS WordNo. BitNo. Output InIFPXI InIFPXO Contents Only (PMR) 156 158 160 162 164 166 168 170 172 174 176 178 18O 182 184 186 188 190 192 194 196 198 200 202 204 206 208 210 212 21478 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94(word 4) 95 96 97 98 99 lO0 lOl I02 I03 I04 I05 I06 I07MAT2 CTRIARG CTRAPRG DEFORM PARAM MPCADD LOAD EIGR EIGB EIGC REACT MATSI MATTI OMITI TABLEMI TABLEM2 TABLEM3 TABLEM4 TABLESI TEMPD TABLES2 TABLES3 TABLES4 MATT2 MATS2 CTORDRG SPOINT SEQD SEQDBFEYes YesSupported No No No FORCE FORCE 2.4-35 (311171)\nDATABLOCKANDTABLEDESCRIPTIONS WordNo. BitNo. Output InIFPXI InIFPXO Contents Only(PMR) 216 218 220 222 224 226 228 230 232 234 236 238 240 242 244 246 248 25O 252 254 256 258 260 262 264 266 268 27O 272 274I08 109 II0 III 112 113 114 115 116 117 118 119 120 121 122 123 124 125(word 5) 126 127 128 129 130 131 132 133 134 135 136 137QDSEP SPQUADI SPQUAD2 SPQDMEM SPQDPLT ZI CTRIA3 PTRIA3 SETRBFE VECDN VECGP DMI DMIG PTORDRG MAT3 DLOAD EPOINT FREQI FREQ N_LINI NOLIN2 NOLIN3 NOLIN4 RLOADI RLOAD2 TABLED1 TABLED2 SEQEP TF TICSupported FORCE FORCE FORCE F_RCE F_RCE F_RCE FORCE FORCE FORCE FORCE FORCE 2.4-36 (3/I/71)\nEXECUTIVE TABLE DESCRIPTIONS WordNo. BitNo. Output InIFPXI InIFPXO Contents Only (PMR) 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156(word 6) 157 158 159 160 161 162 163 164 165 166 167276 278 280 282 284 286 288 290 292 294 296 298 300 302 304 306 308 310 312 314 316 318 320 322 324 326 328 330 332 334TLBADI TL_AD2 TABLED3 TABLED4 TSTEP DSFACT AXIC RINGAX CC_NEAX PCBNEAX SPCAX MPCAX _MITAX SUPAX P_INTAX SECTAX PRESAX TEMPAX F_RCEAX M_MAX EIGP MASSC EDFIR DF_RM TABDMPI TABDMP2 TABDMP3 TABDMP4 FREQ2 CQUAD3Supported F_RCE FQRCE F_RCE 2.4-37 {311171)\nDATABLOCKANDTABLEDESCRIPTIONS WordNo. BitNo. Output InIFPXl InIFPXO Contents Only(PMR) 336 338 340 342 344 346 348 35O 352 354 356 358 360 362 364 366 368 37O 372 374 376 378 38O 382 384 386 388 390 392 394168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197PQUAD3 SPQUAD3 SETR SPTRIAI SPTRIA2 SPTRMEM SPTRBSC SPTRPLT SECL SECP SEPTRIA3 BAROR CBAR PBAR DAREA DELAY DPHASE PLFACT CGENEL PGENEL ELDELE MATT3 RFORCE TABRNDI TABRND2 TABRND3 TABRND4 RANDPS RANDTI RANDT2Supported F_RCE FORCE FORCE FORCE FORCE FORCE FORCE FORCE F_RCE FORCE FORCE FORCE FORCE F_RCE 2.4-38 (3/I/71)\nEXECUTIVE TABLE DESCRIPTIONS Word No. BitNo. Output InIFPXl InIFPXO Contents Only (PMR)\" 396 398 400 402-598 600 602 604 606 608 610 612 614 616 618 620 622 624 626 628 630 632 634 636 638 640 642 644 646 64819B 199 200 201-299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324PLBAD1 PLEAD2 DTI Notused C_UPMASS GRDPNT WTMASS IRES LFREQ HFREQ LM_DES G W3 W4 M_DACC MPC$ sPc$ L_AD$ METHODS DEF(BRM$ TEMPLD$ TEMPMT$ IC$ ACUT$ LB_P$ LB_PI$ DLIBAD$ FREQ$ TF$Yes Yes Yes YesSupported 2.4-39 (311171)\nDATABLOCKANDTABLE DESCRIPTIONS WordNo. BitNo. Output InIFPXl InIFPXO Contents Only(PMR) 650 652 654 656 658 660 662 664 666 668 670 672 674 676 678 680 682325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 346 341PLOTS Yes TSTEP$ POUTS Yes TEMPMX$ DSC_$ K2PP$ M2PP$ B2PP$ CMETH_D$ SDAMP$ INERTIA$ NLFORCE$ XYOUT$ Yes DELETES RANDOM$ AXYOUT$ Yes NOLOOP$ NotUsedSupported F_RCE F_RCE 2.4-40 (3/I/71)\nMISCELLANEOUS TABLE DESCRIPTIONS 2.5 MISCELLANEOUS TABLE DESCRIPTIONS. Thefollowing isanalphabetical index ofmiscellaneous table descriptions. SectionNu_er TableName Where Stored Pa_eNumber 2.5.2.2 BITPi_S /BITP_S/ 2.5-7 2.5.2.4 CHAR94 /CHAR94/ 2.5-l0 2.5.2.7 CHRDRW /CHRDRW/ 2.5-13 2.5.1.6 DESCRP /DESCRP/ 2.5-3 2.5.2.1 GPTAI /GPTAI/ 2.5-6 2.5.1.5 MSGX /MSGX/ 2.5-3 2.5.l.8 NJ_MES /NAMES/ 2.5-4 2.5.l.l _SCENT /SCENT/ 2.5-2 2.5.I.2 i_UTPUT /,UTPUT/ 2.5-2 2.5.2.3 PLTDAT /PLTDAT/ 2.5-8 .5.i. TTME /STIME/ 2.5-2 2.5.2.6 SYMBLS /SYMBLS/ 2.5-12 2.5.I.7 TW /TWO/ 2.5-4 2.5.1.9 TYPE /TYPE/ 2.5-4 2.5.l,4 XMDMSK /XMDMSK/ 2.5-3 2.5.2.5 XXPARM /XXPARM/ 2.5-Il 2.5-1(12-1-69)\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.1Miscellaneous TablesWhichArePermanently CoreResident. 2.5.1.1 OSCENT (_SCAR Entry) Description A200wordstorage arraycontaining the_SCARentry(record) currently beingprocessed. Created inModule Theentryisreadfromthe_SCARandstoredinOSCENTbytheXSEMi(section 3,3.7)sub- routine. Otherexecutive routines thatrequire details ofthecurrent entrywillsearch _SCENT. TableFormat TheOSCENTformat isidentical tothe_SCAR(section 2.4.2.1) entryitcurrently contains. 2.5.1.2 _UTPUT (Output headings) Descri ption Astorage array containing problem title, subtitle, label andvarious headings required by thePAGE(section 3.4.24) routine toproperly annotate theNASTRAN output. Created inModule Thetitle, subtitle andlabel aretaken fromCase Control Deckcards andstored in_UTPUI byIFPI (section 4.3). Other heading lines maybestored byoutput modules prior tocalling PAGE. TableFormat _UTPUT contains sufficient space forseven 128character lines. Thefirst three lines con- tainthetitle, subtitle, andlabel. Thesubsequent three lines contain local headings, andthe final linecontains theplotter ID.Since 4characters occupy eachcomputer word, theOUTPUT array requires 224words ofstorage. 2.5.1.3 STIME (Solution Time) Description Astorage cellcontaing theuser’s estimated solution time. Created inModule Theestimated solution timeistaken from aExecutive Control Deckcard andstored into STIME byXCSA (section 4.2) Table Format STIME consists ofasingle cellcontaining theestimated timeininteger seconds. 2.5-2\nMISCELLANEOUS TABLE DESCRIPTIOr_S 2.5.1.4 XMDMSK (Executive Module Decision Mask) Description Contains the155bitmaster module execution mask (seesection l.lO) andacellindicating oheckpoint status. Created inModule The155bitmaster module execution mask isgenerated andusedbyXGPI (section 4.7). The checkpoint status seton(YES) byXCSA (section 4.2)bythepresence ofaCHKPNT =YEScardin theExecutive Control Deck. Table Format The155bitmaskoccupies theloworder _lbits ofthefirst fivewords ofXMDMSK. sixth word isthecheckpoint status (flag).The 2.5.1.5 MSGX (Message Queue) Description Aqueue table tohold fourword NASTRAN information anderror messages between thetime they aregenerated byamodule andprinted bythemessage writer, MSG_IRT (section 3.4.26). Created inModule Messages maybegenerated byanyNASTRAN module through acalltoMESAGE (section 3.4.25). Table Format Word l Word 2 Word 3-6 Word 6-endNun_er ofmessages queued. Maximum nu_er ofmessages queue canhold Fourword message entry (typical) Additional fourword message entries 2.5.1.6 DESCRP (Matrix Description) Description Astorage block usedbysubroutine INTPK (section 3.5.3) tobuffer thematrix unpacking procedure. Thisbuffering reduces thenumber ofI/_accesses totheparticular matrix data block. Created inModule DESCRP isfilled andusedexclusively byINTPK Table Format Anarray with thefirst word defining thelength ofthearray. 2.5-3\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.1.7 TWO(Powers ofTwo) D_escription A32word array witheachword (starting with linthe32ndword) containing thenextpower oftwo. Created inModule The32integer values aredefined within theNASTRAN system block dataprogram (SEMDBD). Table Format Word32-l Word31-2 Word30-4 Word29-8 etc. 2.5.1.8 NAMES(Symbolic Names) Description Aseries ofsymbolic names identified with their NASTRAN numeric equivalents. forGINOfileoptions, arithmetic types andmatrix forms.Defines values Created inModule Thevalues aredefined within theNASTP_N system block data program (SEMDBD). Table Format Word SYMBOL VALUE Word SYMBOL VALUE Word SYMBOL VALUE 1 RD :2 7 EOFNRW =3 13 RECT :2 2 RDREW =0 8 RSP =1 14 DIAG :3 3 WRT =3 9 RDP =2 15 UPPER =4 4 WRTREW =l lO CSP =3 16 LOWER =5 5 REW =l II CDP =4 17 SYM =6 6 N_REW =2 12 SQUARE :1 18 R_W :7 19 IDENT =8 2.5.1.9 TYPE (Number Types) Description Aseries ofproperties aredefined asafunction ofanumber type. ThetypemaybeReal Single Precision (RSP-I), RealDouble Precision (RDP-2), Complex Single Precision (CSP-3), or Complex Double Precision (CDP-4). Theproperties thatmaybereturned include precision (single, double), number ofwords, andrealorcomplex. Created inModule Theproperties aredefined within theNASTRAN system block data program (SEMDBD). 2.5-4\nMISCELLANEOUS TABLEDESCRIPTIONS TableFormat Word Property (Values) l l 2 2 3 l 4 2 5 2 6 4 7 l 8 l 9 2 lO 2Type Precision (RSP) Precision IRDP) Precision (CSP) Frecision (CDP)Words (RSP) Words (ROP) Words ICSP) Words (CDP) Real/Complex (RSP) (RDP) (CSP) (CDP) Example Assun_ thenu_er ofwordsrequired tocontain aComplex Single Precision (CSP-3) isdesired. ThethirditemintheWordsarrayisindexed andfoundtocontain a2(words). 2.5-5\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.2 Miscellaneous Tables NotPermanently CoreResident 2.5.2.1 /GPTAI/ Purpose Todescribe connection andproperty characteristics ofeachelement. /GPTAI/ isusedin modules GPI,GP2,GP3,TAI,SMAI,SMA2,DSMGI, SDR2,PL_T,andSSGI,andisinitialized bythe blockdataprogram GPTABD andsubroutine DELSET. Description Word Type 1 I 2 I 3 I 4-5 B 6 I 7-8 I 9 I I0-II I 12 I 13 I 14 I 15 I 16 I 17 I 18 I 19 I 20 I 21 I 22 I 23 I 24 IItem Number ofentries (i.e., elements) intable Pointer tofirstwordoflastentry intable Number ofwords perentryintable Nameofelement (e.g., R_D) Internal element identification number ECTrecord IDandtrailer bitforLOCATE Number ofwords perentryonECT EPTrecord IDandtrailer bitforLOCATE Number ofwords perentryonEPT Number ofgridpoints perelement +I:Scalar element withgridpointand component code 0:Notascalar element -I:Scalar element withscalar points onl Number ofwords perentryonEST Position offirstgridpointinECTentry Temperature data Temperature datacount 2Hollerith symbols ifelement isplottable Number ofwords SDR2passes fromPhase1 element routines toPhase2element routines Countofwords SDR2outputs forrealstresses Countofwords SDR2outputs forrealforces Pointer intoanSDR2D tableforcombining of realstresses toformcomplex stress outputs Pointer intoanSDR2D tableforcombining of realforces toformcomplex forceoutputsrepeated for each element 2.5-6(8/I/72)\nDATABLOCKANDTABLEDESCRIPTIONS Word 25 26 27Type I I IItem SMAI element overlay limb SMA2 element overlay limb SMA3 element overlay limb 2.5-6a (8/I/72)\nMISCELLANEOUS TABLE DESCRIPTIONS 2.5.2.2 BITP_S. Purpose Toprovide pointers intoUSETandUSETD words forinterpreting thenested vector sets inNASTRAN. Description Word Item l UM Bitnumber 2 UO Bitnumber 3 UR Bitnumber 4 USG Bitnumber 5 USB Bitnumber 6 UL Bitnumber 7 UA Bitnumber 8 UF Bitnumber 9 US Bitnumber lO UN Bitnumber II UG Bitnumber 12 UE Bitnumber 13 UP Bitnumber 14 UNE Bitnumber 15 UFE Bitnumber 16 UD Bitnumber Note Allwords areinteger. 2.5-7\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.2.3 PLTDAT Purpose Todefine plotter-dependent parameters. Description Thistable isdefined inthePL_TBD block datasubprogram. Thetable isdivided intoN+2 2D-word sections, where N=number ofplotters acceptable bytheNASTRAN plotting software. Sections 3toN+2aretheonlysections initialized, because eachcontains values which aredepen- dentupontheplotter hardware. Section lcontains values which mayvarywithin thelimits ofthe hardware, andSection 2issimply aduplicate ofoneofthelastNsections corresponding tothe plotter ofinterest. Section 2mustbefilled inbythemodule writer. Theformat ofSections 2toN+2isas follows: Word Type Name Description I-2 R XYMAX Maximum xandycoordinate values acceptable by theplotter. 3 R CNTSIN Number ofplotter counts/inch onpaper. 4-5 R CNTCHR Number ofplotter counts percharacter inthex andydirections. 6 R _XLEN Maximum length ofalinesegment. 7 I NPENS Maximum number ofpensorlinedensity available ontheplotter. 8-9 R _RIGIN Forincremental plotters, thecurrent penposition relative tothelower leftcorner oftheplot. Otherwise, thelocation ofthelower leftcorner of theplotter relative toitstruephysical origin. I0 I PLTYPE/+l,+2,or+3iftheplotter isamicrofilm, table ‘_ordrumplotter, respectively, with typing )capability. _-l, -2,or-3iftheplotter isamicrofilm, table #ordrum plotter, respectively, with notyping _capability (i.e., allcharacters must bedrawn). II B PLTAPE IPLTIifaneven parity plottape istobegeneratedforthisplotter. PLT2ifanoddparity plottape istobegenerated forthisplo–tt’er. 12 I PBFSIZ Plottape physical record size (number ofcharacters) 13 I E_FIOifanend-of-file istobewritten after everyplot. lifnoend-of-file istobewritten ontheplot tape. 14-20 Undefined 2.5-8 (12-I-69)\nMISCELLANEOUS TABLEDESCRIPTIONS Sectionlmustalsobefilledinbythemodulewriter.However,unlikeSection2,someof theparameters mayvaryfromplottoplot,aslongastheyremainwithinthelimitations imposed bytheplotterhardware. TheformatofSectionlisasfollows. Word Type Name I I F_DEL 2 I PL_TER 3-6 R REG 7-8 R AXYMAX 9-I0 R XYEDGE II I CAMNUM 12-20Description Plotter model index Plotter index Plotter region (Xmin,Ymin’ Xmax’ Ymax)inwhich thecurrent picture isbeing drawn. These values mustbesomefraction (between 0andl)ofwords 7and8(AXYF4AX). Sizeofthepaper used(x,y), lesstheborders, in plotter units. Sizeoftheborders (x,y) inplotter units. Current selected camera. Thiswordneednotbe filled in,because itissetandusedasacon_nuni- cation between theSELC#J_ andSKPFRM subroutines. Undefined usage Sections land2arenormally setup bytheFNDPLT subroutine, except fortheplotter region values (REG). These values must besetup bythemodule writer himself. Itisessential thatboth these sections becorrectly setup, because theyarereferenced bytheentire NASTRAN plotter soft- ware package. IfSections land2arecorrectly setup bythemodule writer, heneednotsubsequently worry about such things ascompensating forpaper margins ordifferent physical plotter origins. He needonly assume thattheplotter origin islocated atthelower leftcorner ofthepaper where theleftandbottom borders intersect. TheNASTItAN plotter software will automatically compensate fortheborders andthephysical origin. 2.5-9 (12-I-69)\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.2.4 CHAR94 Purpose Toprovide atable ofcharacters usedtogenerate plottapes asiftF,ecomputer were always anIBM7094. Thistable however isindependent oftheactual computer used. Description This isa240word table defined inthePLOTBD block datasubprogram. Itisdivided intofour equal sections of60words each. Eachentry ineach section hasaparallel entry intheother three sections. Section Iisastring ofalltheHollerith characters acceptable bytheplotmodules ofthe form IHx,where xisaHollerith character. Section IIcontains theinteger equivalents oftheIBM7094internal binary characters inthe sameorderasSection I.However, neartheendofthissection areintegers representing various additional characters notinSection I.Theseadditional characters cannotbeexpressed inthe formIHxandareusedforspecial plotter commands. Eachentryinthistableisaright-adjusted two-digit integer withleading zeroes. Section Illcontains theinteger equivalents oftheIBM7094BCDcharacters astheywould appear onanevenparity tapewritten onanIBM7094, inthesameorder andformasinSection II. Section IVcontains theinteger equivalents oftheCDCdisplay character codes soastopro- duceanevenparity BCDplottapeasifwritten onanIBM7094, inthesameorder andformasin Section II. Thesequence ofcharacters ineachsection isasfollows: 0l23456789 ABCDEFGHIj KLMN_PQRST uvwxYz()+- */= ,$‘b character 49=endofrecord mark character 50=endoffilemark characters 51-53 =special characters. characters 54-60 =0 Note InSection I,characters 49-60=O. usage Section Iisbasically usedforcalculating anindex intotheother twosections bycomparing anarbitra_ Hollerith character witheach character inSection Iuntil amatch isfound. Once thisisdone, theindex isusedtoextract thecorresponding entry fromeither Section IIorIll, depending onwhether anoddoreven parity plottapeisbeing generated. Ifthecomputer isan IBM7094, onlySection IIisused, andifthecomputer isaCDC6600andanevenparity plottape isbeing generated, Section IVisusedinstead ofSection Ill. 2.5-10 (12-I-69)\nM!SCELLANEOUS TABLE DESCRIPTIONS 2.5.2.5 XXPAR_I Purpose Todefine theplottapebuffer size, thecamera tobeused, thenun,ber ofblank frames of filmtobeinserted between plots, theplotter model name, andthepaper size tobeusedontable ters. Description Thistable isdefined asfollows inthePL_TBD block datasubprogram. Word Type Name l I BUFSIZ 2 I CAMERA 3 I BFP_a.IS 4-5 I,orB PLTMDL 8-9 R PAPSiZDescription Plottapebuffer size Plotter camera tobeused (appropriate onlyona microfilm plotter). Number ofblank frames offilmtobeinserted between plots (appropriate onlyonamicrofilm plotter). Plotter model identification. ,,=+ –__^\u003c.h+ __hopape_r tnheused (appropri- ateonlyontable plotters). usage Theinitial values ofthese variables areasfollows: BUFSIZ =must besetbythemodule writer CAMERA =2(paper output only) BFRAMS =l PLTMDL =4020, 0(integer) PAPSIZ =8.5, ll.O This table’s actual sizeis152words. Theremainder ofthetable isinitialized forthestructur- alplotter module, PL_T, butmaybeusedbytheprogrammer foranything hedesires inother plot- tingmodules. 2.5-11(12-1-69)\nDATABLOCKANDTABLEDESCRIPTIONS 2.5.2.6 SYMBLS Purpose Toprovide atable ofiFdices into theCHAR94 andCHRDRW tables used totype ordraw pre- defined plotter symbols. Description Thetable isdefined inthePLOTBD block data subprogram. There isroom forupto20indices foreach plotter. However, thesame number ofindices must bedefined foreach plotter. The format ofthetable isasfollows: Word Type 0 I 1-20 I 21-40 I 41-60 IDescription Number ofsymbols defined foreachplotter (currently =9). Symbol indices forplotter I. Symbol indices forplotter 2. Symbol indices forplotter 3. There areasmany groups ofsymbol indices asthere areavailable plotters. Thesymbols defined foreach plotter areasfollows: Symbol l=x Symbol 2=* Symbol 3=+ Symbol 4=- Symbol 5=.(dot, notaperiod). Symbol 6=circle Symbol 7=square Symbol 8=diamond Symbol 9=triangle Should anyofthesesymbols notbeavailable onaplotter, asubstitution ofanother symbol must bemade. Usage ThistableisusedbytheSYMBOL subroutine. 2.5-12 (12-I-69)\nMISCELLANEOUS TABLE DESCRIPTIONS 2.5.2.7 CHRDRW Purpose Todefine theco_ination oflines needed todrawalphanumeric characters andsymbols. Descri ption Thistable isdefinedinthePL_TBD block datasubprogram. Thetable isdivided intotwo sections. Section Iisalistofindices intoSection If,usedtolocate thedataneeded todraw characters. Thefirst 48indices inSection Icorrespond tothe48characters listed inSection I oftheCHAR94 table. Thelast7indices areusedfordrawing thespecial characters listed inthe SYMBLS table. Ifanindex isnegative, itisanindex intoSection Iinstead ofSection If.This occurs when aduplicate character exists (e.g., azero, theletter “_\",andthesymbol fora circle). Section IIofthistable defines the(integer) coordinates ofthestarting andending points ofthestraight lines tobedrawn inorder todrawacharacter orsymbol. Ingeneral, theneces- sarystraight lines arecontiguous, sothattheendpoint ofonelineisthestarting point ofthe next, etc. Insomecases, thisiseither impractical orimpossible (e.g., *,+,=,etc.). In suchasituation, thestarting point ofaline isnegative, meaning that itisnottobeconnected totheendpoint ofthepreceding line. Thecharacters defined inSection IIarebased upon6x6square characters. Thevalues inthis section aresimply integer coordinates within a6x6square. Theformat ofthistable isasfollows: Wor____dd Type Name 0 I LSTCHR 1-60 I CHRIND 61-760 I CHRDescription Nameofcharacters andsyn_ols referenced in Section I(=52). Section I-“LSTCHR” indices intoSection II. Section II:(x,y) pairs defining thelineal representation of6x6square characters. usage This table isusedbytheDRWCHR subroutine. 2.5-13 (I2-I-69)"},"title":"Programmer's Manual P18"},"/docs/programmers/programmers_manual_019/":{"data":{"":"INTRODUCTION 3.1INTRODUCTION Section3contains descriptions ofsubroutines notanintegral partofamodule. Those sub- routines which areanintegral partofamodule arediscussed insection 4,Module Functional Descriptions. Section 3.2contains analphabetical index ofentry points ofroutines documented insection 3.Asimilar index ofentry points documented insection 4canbefound insection 4.1.3. Subroutine descriptions havebeenpartitioned into3classifications: executive, utility and matrix subroutine descriptions, documented insections 3.3,3.4,and3.5respectively. Descriptions oftheplotting utility routines (e.g., AXIS, section 3.4.40; AXISi, section 3.4.41) refer toplotters bynumber ortheletter “i”,andtoplotter models bynumber only. The correspondence ofthese numbers toplotter hardware isgiven inTable I.Further details canbe found insection 4oftheUser’s Manual. 3.l-I (12-I-69)\nSUBROUTINE DESCRIPTIONS Table I.Correspondence Between External andInternal Plotter andModelNamesandNumbers. where:External External Internal Internal plotter name modelname plotter number modelnumber BL EAI SC CALC_MP DD NASTRAN BL EAI SCSTE,30 1 1LTE,30 3500,30 2 13500,45 8 1 4020,0 3 1 /765,2O5 5 4 765,210 4 4 765,105 5 5 765,110 4 5 763,205 7 4 763,210 6 4 763,105 7 5 763,110 6 5 565,205 5 2 565,210 4 2 565,105 5 3 565,110 4 3 565,305 5 1 565,310 4 1 563,205 7 2 563,210 6 2 563,105 7 3 563,110 6 3 563,305 7 l _563,310 6 l 80,B 9 l M,O I0 +I T,O II +2 D,O II +3 Pi,l I0 -I T,l II -2 D,l II -3 =Benson Lehner =Electronic Associates Inc. =Stromberg Carlson 3.1-2 (12-I-69)\nINTRODUCTION TableI.Correspondence Between External andInternal Plotter andModelNamesandNumbers (Cont’d), CALC@MP DD NASTRAN=California Computing =DataDisplay =NASTRAN General Purpose Plotter 3.1-3 (12-I-69)\nALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS 3.2ALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS. SectionNumber 3.5.10 3.4.1 3.4.40 3.4.41 3.4.41 3.4.7 3.3.5 3.4.74 3.5.1 35.1 35.1 33.2 35.5 35.16 35.16 3.4.4 3.4.18 3.4.1 3.5.16 3.3.12 3.4.1 3.4.1 3.5.28 3.5.28 3.5.16 3.5.29 3.5.16 3.4.76 3.4.77Entry Point Subroutine Description ADD ADD ANDF MAPFNS AXIS AXIS AXIS3 AXISi AXISIO AXISi BCKREC BCKREC BGNSYS ENDSYS BISRCH BISRCH BLDPK BLDPK BLDPKI BLDPK BLDPKN BLDPK BTSTRP BTSTRP CALCV CALCV CDC@MP CDC_MP CL_P CDC@MP CLOSE CLOSE CLSTAB CLSTAB COMPLF MAPFNS COMI2 CDC_MP CONMSG C_NMSG CORSZ MAPFNS CORWDS MAPFNS CSPL_O CSPSDC CSPSDC CSPSDC CTRNSP CDC_MP CXFBS C×FBS CXL_P CDC_MP DAD_TB DAD_TB DAXB DAXBPageNumber 3.5-19 3.4-I 3.4-70 3.4-72 3.4-72 3.4-9 3.3-6 3.4-123 3.5-I 3.5-I 3.5-I 3.3-2 3.5-12 3.5-62 3.5-63 3.4-5 3.4-26 3.4-I 3.5-63 3.3-16 3.4-I 3.4-I 3.5-82 3.5-82 3.5-63 3.5-84 3.5-63 3.4-126 3.4-127 3.2-I (8/I/72)\nSUBROUTINE DESCRIPTIONS Section Number 3.5.15 3,4.72 3.5.15 3.5.15 3.5.21 3.4.68 3.4.62 3.5.22 3.3.5 3,4.9 3.5.23 3.5.17 3.5.17 3.5.17 3.5.12 3.5.15 3.5.15 3.4.17 3.4.69 3.4.75 3.4.15 3.4.6 3.5.15 3.5.19 3.4.12 3.4.61 3.4.32 3.4.33 3.3.4 3.3.9EntryPoint DEC@MP DELSET DDL@@P DL_@P DMPY DRWCHR EJECT ELIM ENDSYS E@F FACT@R FBS FBSDP FBSSP FILSWI FINDC FINWRT FNAME FNDPLT F@RFIL FREAD FWDREC GENVEC GFBS GIN@ GIN@I@ GMMATD GMMATS GNFIAT GNFISTSubroutine Description DEC@MP DELSET DECAMP DEC@MP DMPY DRWCHR EJECT ELIM ENDSYS E@F FACTOR FBS FBS FBS MPYQ DEC@MP DECAMP FNAME FNDPLT F@RFIL FREAD FWDREC DEC@MP GFBS GIN@ GIN@I@ GMMATD GMMATS GNFIAT GNFISTPageNumber 3.5-44 3.4-121 3.5-60 3.5-60 3,5-71 3.4-115 3.4-105 3.5-73 3.3-6 3.4-11 3.5-74 3.5-64 3.5-65 3.5-65 3.5-28 3.5-57 3.5-54 3.4-25 3.4-117 3.4-125 3.4-23 3,4-8 3.5-54 3.5-67 3.4-15 3.4-103 3.4-49 3.4-52 3.3-5 3.3-12 3.2-2(8/I/72)\nALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS Section Number Entry Point Subroutine Description Page Number 3.4.14 GOPEN G_PEN 3.4-22 3.4.71 HEAD HEAD 3.4-120 3.4.73 HMAT HMAT 3.4-122 3.4.44 IDPL_T IDPLBT 3.4-75 3.4.45 INTGPT INTGPX 3.4-76 3.4.45 INTGPX INTGPX 3.4-76 3.4.46 INTLST INTLST 3.4-77 3.5.3 INTPK INTPK 3.5-7 3.5.3 INTPKI INTPK 3.5-7 3.4.34 INVERD INVERD 3.4-53 3.4.35 INVERS INVERS 3.4-54 3.4.47 LINE LINE 3.4-78 3.4.48 LINE1 LINEi 3.4-79 3.4.48 LINE2 LINEi 3.4-79 3.4.48 LINE3 LINEi 3,4-79 3.4.48 LINE4 LINEi 3.4-79 3.4.48 LINE9 LINEi 3.4-79 3.4.48 LINEIO LINEi 3,4-79 3.4.30 LOCATE PREL_C 3.4-44 3.5.14 L_BP SDCBMP 3.5-42 3.4.1 LSHIFT MAPFNS 3.4-I 3.4.36 MAT PREMAT 3.4-55 3.4.28 MATDUM MATDUM 3.4-42 3.5.6 MERGE PARTN-MERGE 3.5-13 3.4.25 MESAGE MESAGE 3.4-39 3.5.9 MPART UPART 3.5-18 3.5.12 MPYAD MPYAD 3.5-22 3.5.12 MPYI MPYQ 3.5-28 3.5.12 MPY2NT MPYQ 3.5-28 3.5.12 MPY2T MPYQ 3.5-28 3.2-3(811172)\nSUBROUTINE DESCRIPTIONS Section Number 3.4.26 3.5.15 3.4.2 3.4.13 3.4.1 3.5.2 3.4.24 3.4.24 3,4.24 3.5.6 3.4.22 3.4.70 3.4.70 3.4.70 3,4.70 3,4.63 3.4,67 3.4.30 3.4,36 3.4.39 3.4.37 3.4.38 3,4.49 3.4.20 3.5.15 3.4.13 3.4.50 3.4.50 3.4.50 3.4.16EntryPoint MSGWRT NETW _PEN _PNC_R _RF PACK PAGE PAGEI PAGE2 PARTN PEXIT PHDMIA PHDMIB PHDMIC PHDMID PLAMAT PLTSET PREL_C PREMAT PRETAB PRETRD PRETRS PRINT RCARD RC_RE RDC@R RDMODE RDM_DX RDM_DY RDTRLSubroutine Description MSGWRT DEC@MP @PEN @PNC@R MAPFNS PACK PAGE PAGE PAGE PARTN-MERGE PEXIT PHDMIA PHDMIA PHDMIA PHDMIA PLAMAT PLTSET PREL_C PREMAT PRETAB PRETRD PRETRS PRINT RCARD DECAMP _PNC_R RDM_DX RDM_DX RDM_DX WRTTRLPageNumber 3.4-40 3.5-54 3.4-3 3.4-20 3.4-I 3.5-5 3.4-38 3.4-38 3.4-38 3.5-13 3.4-36 3.4-118 3.4-118 3,4-118 3.4-118 3.4-106 3.4-113 3.4-44 3.4-55 3.4-67 3.4-64 3.4-66 3.4-81 3.4-32 3.5-58 3.4-20 3.4-83 3.4-83 3.4-83 3.4-24 3.2-4 (8/I/72)\nALPHABETICAL INDEX OFENTRY POINTS FORSUBROUTINE DESCRIPTIONS Section Number Entry Point Subroutine Description 3.4.50 RDW_RD RDM@DX 3.4.5 READ READ 3.3.15 RETURN RETURN 3.4.8 REWIND REWIND 3.4.1 RSHIFT MAPFNS 3.5.27 RSPL(I RSPSDC 3.5.27 RSPSDC RSPSDC 3.5.6 RULER PARTN -MERGE 3.5.26 SADD SADD 3.4.78 SAD_TB SADOTB 3.4.79 SAXB SAXB 3.4.51 SCL@SE SGIN 3o5o!4 SDC_MP SDC_MP 3.5.8 SDRIB SDRIB 3.3.6 SEARCH SEARCH 3.4.43 SELCAM SELCAM 3.3.3 SEMINT SEMINT 3.3.14 SEMTRN SEMTRN 3.4.51 SE_F SGIN_ 3.4.10 SKPFIL SKPFIL 3.4.42 SKPFRM SKPFRM 3.5.20 S_LVER S_LVER 3.4.51 S_PEN SGIN_ 3.4.31 S_RT S_RT 3.5.7 SSG2A SSG2A 3.5.13 SSG2B SSG2B 3.5.11 SSG2C SSG2C 3.5.18 SSG3A SSG3A 3.3.11 SSWTCH SSWTCH 3.4.52 STPL_T STPL_TPageNumber 3.4-83 3.4-6 3.3-20 3.4-I0 3.4-I 3.5-80 3.5-80 3.5-14 3.5-78 3.4-128 3.4-129 3.4-85 3.5-30 3.5-17 3.3-8 3.4-74 3.3-3 3.3-19 3.4-85 3.4-12 3.4-73 3.5-69 3.4-85 3.4-46 3.5-16 3.5-29 3.5-20 3.5-66 3.3-15 3.4-87 3.2-5 (811172)\nSection Number 3.4.51 3.4.53 3.5.15 3.4.39 3.4.29 3.4,21 3.5.15 3.4.54 3.4,23 3.5.24 34.37 35.15 34,38 35.25 33.13 34,55 3.4.55 3.4.55 3.4.55 3.4.55 3.4.56 3.4.57 3.5.4 3.5.9 3.4.27 3,4.58 3.4.59 3.4.60 3.4.64 3.4.65 3.4.66SUBROUTINE DESCRIPTIONS EntryPoint SWRITE SYMBBL T TAB TABPRT TAPBIT TFIN TIPE TMTOGO TRANPI TRANSD TRANSP TRANSS TRNSP TTLPGE TYPE1 TYPE2 TYPE3 TYPE9 TYPEIO TYPFLT TYPINT UNPACK UPART USRMSG WPLTI WPLT2 WPLT3 WPLT4 WPLT9 WPLTIOSubroutine Description SGINO SYMBOL DECAMP PRETAB TABPRT TAPBIT DECAMP TIPE TMT_G@ TRANPI PRETRD DEC@MP PRETRS TRNSP TTLPGE TYPEi TYPEi TYPEi TYPEi TYPEi TYPFLT TYPINT UNPACK UPART USRMSG WPLTI WPLT2 WPLT3 WPLT4 WPLT9 WPLTIOPageNumber 3.4-85 3.4-88 3.5-58 3.4-67 3.4-43 3.4-35 3.5-58 3.4-90 3.4-37 3.5-75 3.4-64 3.5-53 3.4-66 3.5-76 3.3-17 3.4-92 3.4-92 3.4-92 3.4-92 3.4-92 3.4-94 3.4-96 3.5-10 3.5-18 3.4-41 3.4-98 3.4-100 3.4-102 3.4-108 3,4-110 3.4-111 3.2-6 (8/I/72)\nALPHABETICAL INDEXOFENTRYPOINTSFORSUBROUTINE DESCRIPTIONS Section Nu_er Entry Point Subroutine Description PageNu_er 3.4.3 WRITE WRITE 3.4-4 3.4.13 WRTC{R (PNC{ R 3.4-20 3.4.16 WRTTRL WRTTRL 3.4-24 3.3.lO XE_T XE_T 3.3-I4 3.4.Il XGIN{ XGIN_ 3.4-I3 3.5.15 XL(_OP DEC(MP 3.5-60 3.4.l X(RF MAPFNS 3.4-I 3.4.19 XRCARD XRCARD 3.4-27 3.3.8 XSEMXX XSEMXX 3.3-Il 3.3.l XSEMI XSEMI 3.3-I 3.3.7 XSEM2 XSEMi 3.3-9 3.3.7 XSEM3 XSEMi 3.3-9 3. X_FM4 XSEMi 33-9 J.l …. \" 3.3.7 XSEM5 XSEMi 3.3-9 3.3.7 XSEM6 XSEMi 3.3-9 3.3.7 XSEM7 XSEMi 3.3-9 3o3.7 XSEM9 XSEMi 3.3-9 3.3.7 XSEMI0 XSEMi 3.3-9 3.3.7 XSEMIl XSEMi 3.3-9 3.3.7 XSEMI2 XSEMi 3.3-9 3.3.7 XSEMI3 XSEMi 3.3-9 3.3.7 XSEMI4 XSEMi 3.3-9 3.5.1 ZBLPKI BLDPK 3.5-I 3.5.3 ZNTPKI INTPK 3.5-7 3.2-7 (8/I/72)\nEXECUTIVESUBROUTINE DESCRIPTIONS 3.3 3.3.1 3.3.1.1 3.3.1.2EXECUTIVESUBROUTINE DESCRIPTIONS. XSEMI (Executive Sequence Monitor, Preface). Entry Point: XSEMI. Purpose Toinitiate theexecution oftheNASTRAN Preface. 3.3.1.3 Calling Sequence CALLXSEMI 3.3.1.4 Method Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine SEMINT iscalled toexecute theprogram Preface (i.e. input file processors andDMAP Drogram compiler). After initiating theproblem, modules arecalled asdirected bythe_SCAR until, amodule is encountered inthe@SCAR thatdoesnotreside inlinklatwhich time XSEMI calls subroutine ENDSYS toloadanewl….II1_• 3.3.1.5 Design Requirements XSEMI mustreside inthecore resident portion oflinkI.Linklisnotre-entrant which means thatoncetheprogram leaves linklitcannever transfer control backtolinkI.Functional DMAPmodules cannotreside inlinkI.Open coreisusedforaGINBbuffer with named common block /ESFA/defining thebeginning ofopencore. Seethesecond paragraph ofthedesign requirements section ofthesubroutine description XSEMi (seesection 3.3.7) fordetails onfiles, datablocks, andcommon blocks necessary foroperation. 3.3-1\nSUBROUTINE DESCRIPTIONS 3.3.2 BTSTRP (Bootstrap Generator I. 3.3.2.1 EntryPoint: BTSTRP. 3.3.2.2 Purpose Determines themachine typeandinitializes themachine dependent constants andmasks within theNASTRAN system blockdataprogram (SEMDBD). 3.3.2.3 Calling Sequence CALLBTSTRP 3.3.2.4 Method Themachine type(IBM7094,IBMS/360, Univac 1108,CDC6600)isdetermined byinspection of themachine binary wordlength andtheknownmethods ofrepresenting negative integers (sign andmagnitude orones/twos complement) usingthefollowing algorithm: I.Iftheonescomplement (COMPLF seesection 3.4.1) of-Iisgreater than2,themachine istheIBM7094. Ifnot,themachine isanIBMS/360, Univac 1108orCDC6600. (i.e., only thesignandmagnitude representation of-Ionthe7094willyieldalarge (\u003e2)positive valuewhencomplemented.) 2.Shift(RSHIFT seesection 3.4.1) abinary machine wordofalll’stotherightthirty- twobinary places. Compare theresulting valueto15.Ifthevalueislessthanfifteen, themachine isthe32bitIBMS/360; equaltofifteen, the36bitUnivac 1108;andgreater thanfifteen, the60bitCDC6600. Oncethemachine typeisknown, theproper constants andmasks areselected fromassembled tables. 3.3.2.5 Design Requirements Thissubroutine mustbemodified ifitistooperate withotherthanthefourmachine types listed above. 3.3-2\nEXECUTIVE SUBROUTINE DESCRIPIIONS 3.3.3 SEMINT (Sequence Monitor Initialization). 3.3.3.1 Entry Point: SEMINT. 3.3.3.2 Purpose Toexecute thePreface ofaNASTRAN problem solution. 3.3.3.3 Calling Sequence CALL SEMINT 3.3.3.4 Method Thefirst card OftheNASTRAN data deck isread from thesystem input file anditsimaqe stored inblank C@MMBN. XRCARD iscalled toconvert thecard. Ifthename ofthecard is NASTRAN, ecard isechoed andkeywords areidentified andappropriate words of/SYSTEM/are reset totheinput values. Ifanunidentified keyword isdetected, orthecard hasaformat error, amessage isprinted andtheN_GOflagisturned on.ThefirstwordofblankC_MM_N issettoc;b- ifthecardwasaNASTRAN card,tozerootherwise. ThenGNFIAT iscalled togenerate theinitial FIAT. XCSAiscalled toreadandprocess theExecutive Control Deck. IFPIiscalled toreadand process theCaseControl Deck. XSORTiscalled toreadandsorttheBulkDataDeck. Ifbulk dataispresent, IFPiscalled toprocess it.Iftheproblem isaconical shellproblem, IFP3is called tofurther process zhebulk data. Ifthecurrent runistoprepare aUser’s Master File, UMFEDT iscalled andcont_i isreturned toXS_RTforeachnewproblem tobewritten ontheUMF. Otherwise, XGPIiscalled toperform General Problem Initialization andthenreturn ismadeto XSEMIsignifying completion ofthePreface. 3.3.3.5 Design Requirements IftheNASTRAN cardispresent, itmustbethefirstcardofthedatadeck. 3.3.3.6 Diagnostic Messages UNIDENTIFIED NASTRAN KEYW_RD BUFFSIZE C_NFIG MAXFILES IvIAXOPEN SYSTEMACCEPTABLE KEYW_RDS F{_LL{_W– 3.3-3\nSUBROUTINE DESCRIPTIONS Self-explanatory. NASTRAN CARDD_ESNOTHAVEC_RRECT F_RMAT. Typical errors include non-integer values orcontinuation ofthecardfollowinq an=sign. Seesection 6.3.1forfurther details ontheNASTRAN card. 3.3-4\nEXECUTIVE SUBROUTINE DESCRIPTIONS 3.3.4 GNFIAT (Generate FIAT). 3.3.4.1 Entry Point: GNFIAT. 3.3.4.2 Purpose Determines thenumber oflogical files available within thecomputer hardware andsoftware configuration andplaces anentry foreachintoFIATorXFIAT. 3.3.4.3 Calling Sequence CALL GNFIAT GNFIAT mustbecalled onceandonlyonceasthefirst call fromthepreface. 3.3.4.4 Method Eachcomputer configuration hasitsownindependent subroutine toaccomplish thenecessary functions ofGNFIAT. Thesubroutine interrogates unitblocks, datadefinition cards, filetables, etco tod_termine thenumber oflogical files available within theconfiguration. Aseach logical fileissensed, itisdetermined whether thefilehasbeenassigned toaohysical magnetic tapeorsomebulk storage device suchasdiskordrum. Eachfilehasalogical nameand/or number foridentification. These file ID’sarestored inFIAT, XFIAT orbothdepending on several factors. AsthefileIDisstored, aphysical tapeflagissetwhere appropriate. The factors thatdetermine FIATvs.XFIAT storage areasfollows: l)thefirst PFIST (seesection 2.4foradescription oftheFIST) files sensed arealways entered intoXFIAT, 2)except forthe first file (always theP_L), allofthefirst PFIST files without tapeflags arealsoentered intoFIAT, and3)allother files areentered intoFIATonly. 3.3.4.5 Design Requirements Since GNFIAT routines arecomputer hardware/software dependent, operational requirements maydiffer atvarious times. Seeappropriate commented assembly listing ifdifficulties or error codes areencountered. 3.3-5\nSUBROUTINE DESCRIPTIONS 3.3.5 ENDSYS (End-of-Link). 3.3.5,1 EntryPoints: ENDSYS, BGNSYS. 3.3.5.2 Purpose ForENDSYS, tosavevarious NASTRAN core-resident Executive Tables onascratch fileforuse incommunicating withthenextlinkrequested. ForBGNSYS, torestore theNASTRAN Executive Tables savedbyENDSYS andtoposition the _SCARatthecorrect entrytobeexecuted intheresident link. 3.3.5.3 Calling Sequences CALLENDSYS(LINK,X,REWFLG) LINK -BCDnameofthelink. Thenaming convention is:NSOI=linkl,NS02=link2, etc. -Dependent onmachine type. FortheIBM7094only,X(6BCDcharacters) specifies theunitwhere thelinksarestored. Notusedonothermachines. REWFLG :0indicates LINKisaheadofcurrent link(i.e.wearegoingfromlinkNto linkN+K,KTM0).IBM7094only;notusedonothermachines. REWFLG :1indicates LINKisbehind current link(i.e.wearegoingfromlinkNto linkN+K,K\u003c0).IBM7094only;notusedonothermachines. CALLBGNSYS. 3.3.5.4 Method ForENDSYS, asearch ismadeforanempty fileandwhenfound theExecutive Tables are written (saved) onit.Apointer tothesavefileissavedinblank common orwritten ona system fileforusebyBGNSYS whenthenewlinkisloaded. Subroutine SEARCH isthencalled to loadtherequested link. BGNSYS iscalled afteranewlinkisloaded. Thepointer tothesavefilecontaining the Executive Tables isobtained fromeither blankcommon orasystem file,andtheExecutive Tables arereloaded intocore. The@SCARispositioned atthecorrect entrytobeexecuted, anda RETURN ismadetothecalling routine. 3.3-6\nEXECUTIVE SUBROUTINE DESCRIPTIONS 3.3.5.5 Design Requirements Program links areusually considered tobephysically separate Drograms, essentially independent ofoneanother except forthefact that theoperating system executive (not theNASTRAN executive) provides ameans bywhich control canbetransferred from onelink toanother when requested bytheuser. Themeans bywhich theoperating system executive transfers control from onelink toanother isdependent upon themachine andthesystem being used. Forsome future machir,es there maybenomeans forbuilding physically separate links sothelinks become logical subsets ofonehuge program. Nomatter howthelinks areformed itisnecessary, when transferring from onelink to another, that allfile assignments bepreserved aswell astheir status (i.e. don’t rewind thetapes). Open core isused forGIN_ buffer area andthebeninning ofopen core isdefined bynamed common block /ESFA/. Ifnosave file isavailable orifanyoftheExecutive Tables tobewritten exceeds 900 words, thejobisterminated. 3.3-7\nSUBROUTINE DESCRIPTIONS 3.3.6 SEARCH (Search_ Load,andExecute Link). 3.3.6.1 EntryPoint: SEARCH. 3.3.6.2 Purpose SEARCH locates (searches for)aparticular linkoftheNASTRAN system ontheLinkStoraQe File,loadsthelinkintothecomputer memory andtransfers execution control tothelinkentry point XSEMi, i=2,3,…. 3.3.6.3 Calling Sequence CALLSEARCH(LKNAM,LKFIL,REW) LKNAM=4character symbolic nameoflink,i.e.,NSOI,NS02forlinkI,link2,etc. LKFIL=symbolic nameoftheLinkStorage File(IBM7094only) REW=setnon-zero toposition asequential LinkStorage Filetoitsbeginning (IBM7094only) 3.3.6.4 Method SEARCH ismachine dependent. Itinterfaces withthemachine operatin_ system toprovide a multi-link capability. Eachlinkisasomewhat arbitrary parto#thecomplete NASTRAN system. Thedivision intolinkswasnecessary onlybecause ofthesizelimitation forprogram complexes imposed bythevarious operating systems. Thelinking technique foreachmachine isdiscussed insection 5oftheProgrammer’s Manual. 3.3.6.5 Design Requirements OnlytheIBil7094system requires theLinkStorage Filetobenamed (LKFIL) and,since itis sequential, provides thecapability ofrewinding itfollowing aSEARCH call. Allothersystems provide random access (disk, drum) LinkStorage Files. 3.3.6.6 Diagnostic Messages Individual SEARCH subroutines mayabnormally terminate duetohardware malfunction. See appropriate commented assembly listing ifdifficulties orerror codesareencountered. 3.3-8\nEXECUTIVE SUBROUTINE DESCRIPTIONS 3.3.7 XSEF!i (Link iMainProgram, i:2_3…. 3.3.7.1 Entry Point: XSEMi. 3.3.7.2 Purpose Togetthenextn_)dule tobeexecuted fromthe_SCAR, initialize themodule andcallit ifitisinlinki,ortransfer tothelinkinwhich module resides ifitisnotinlinki. 3.3.7.3 Calling Sequence Example: CALL XSEM2, wi_ere XSEM2 istheentry point oflink2 3.3.7.4 Method Subroutine BTSTRP iscalled toinitialize machine dependent data, andthensubroutine BGNSYS iscalled toreload Executive Tables saved fromtheprevious link. Thenext_SCAR entry isread intocoreandprocessed. Iftheentry isforafunctional module, subroutine GNFIST iscalled tolinkfiles with inout, outnut andscratch datablocks needed bythemodule. Variable parameter values needed bythemodule aretransferred toblank common from table VPSwhich resides innamed con_non block /XVPS/.Constant values inthe_SCAR entry parameter section aretransferred toblank common. Thelinkspecification table innamed common block /XLINK/isexamined toseeifthemodule resides inthislink. Ifitdoes, themodule iscalled. Upon returning fromthemodule, the diagnostic message queue ischecked andmessage writer MSGWRT iscalled ifthere aremessages queued. Begin andendexecution times areprinted outforfunctional modules. Thenext_SCAR entry isreadandtheprocess isrepeated until amodule isencountered which does notreside inthislink, atwhich timesubroutine ENL’SYS iscalled toinitiate loading ofthe linkcontaining themodule. 3.3.7.5 Design Requirements XSEMi mustreside inthecoreresident portion oflinki.L$nk iisre-entrant which means program control canbetransferred tothislinkasoften asneeded. Onencore isusedfora GINO buffer with named common block /ESFA/defining thebeainninp o_opencore. An_SCAR entry cannot begreater than200words. 3.3-9\nSUBROUTINE DESCRIPTIONS Files, datablocks andnamedcommon blocks needed byXSEMiarelisted below, alongwithtype ofaccess required (i.e.fetchand/or storedata)andreasons foruse. DataPoolFile-fetch. Contains X_SCAR datablock. X_SCAR -fetch. Contains _SCARentrytobeprocessed.1• 2. 3. 4. 5. 6. 7. 8. 9. I0. 3.3.7.6Common /XLINK/ -fetch. Common /XFIST/ -store. Common /XPFIST/ -fetch. Common /_SCENT/ -fetch. Common /ESFA/ -store. Common /XVPS/ -fetch. tobeexecuted. Common /MSGX/ -fetch. Common /SEM/-fetch. Diagnostic MessagesContains linkspecification table. Initialized priortocallino GNFIST. Contains parameter needed toinitialize FISTtable. Contains _SCARentry tobenrocessed. Defines beginning ofopencoreareausedbyGIN_buffer. Contains variable parameter values needed toinitialize module Contains diagnostic message queue, Contains BCDnamesoflinksNSOI,NS02, …. Amessage iswritten ifthemodule tobeexecuted required morefilesthanareavailable. Thejobisthenterminated. 3.3-10"},"title":"Programmer's Manual P19"},"/docs/programmers/programmers_manual_020/":{"data":{"":"EXECUTIVESUBROUTINE DESCRIPTIONS 3.3.8 XSEIIXX (Sequence Monitor -Deck Generator). 3.3.8.1 Entry Point: XSEMXX. 3.3.8.2 Purpose Toprovide amodel from which allother XSEMi (i=link number) subroutines except XSEMI canbemade. Seesection 6.11, which discusses howtogenerate alink driver subroutine. 3.3-II\nSUBROUTINE DESCRIPTIONS 3.3.9 GNFIST (Generate FIST) 3.3.9.1 EntryPoint: GNFIST. 3.3.9.2 Purpose Tosetuptheproper linkage between datablocks andthefilestheyreside oninpreparation forexecuting thefunctional module requiring thedatablocks. 3.3.9.3 Calling Sequence CALLGNFIST(DDN,FISTNM,M_DN_) DBN -Datablock name(TwowordBCDarray-8characters total) FISTNM -Datablock identification (GIN_filenumber) usedbyfunctional module (integer). M_DN_ SCARrecord number offunctional module tobeexecuted (integer). M_DN indicates tothecalling routine whataction wastakenbyGNFIST. M_DNO\u003eO,datablockassigned afileoritwaspurged. M_DN_=O,fatalerrordetected. M_DN_-O,datablocknotassigned afile,GNFIST called Executive Segment FileAllocator (XSFA) 3.3.9.4 Method Ifthedatablockispurged, GNFIST returns tothecalling routine withMODNO\u003eO.A datablockispurged ifitisaninputwhich hasnotbeengenerated oritsstatus ispurged or DBN=O. Ifaninputdatablockresides ontheDataPoolFileandneedstobeunpooled, GNFIST calls thefileallocator (XSFA) tounpoGl allinputs tothemodule which reside ontheDataPoolFile thatneedtobeunpooled. GI_FIST thenreturns tothecalling routine withM_DN_\u003cO.Theother condition underwhichXSFAiscalled isifafilehasnotbeenallocated toanon-purged output datablockorscratch datablockneeded bythemodule. Afileisallocated toadatablockwhenthedatablock nameappears intheFIATtable, located innamedcommon block/XFIAT/, asunpurged. Input, output andscratch datablocks which havebeenassigned toafileandarerequired bythefunctional module, havetheirFISTNM’s entered 3.3-12\nEXECUTIVE SUBROUTINE DESCRIPTIONS intheFISTtable which islocated innamed common block /XFIST/.FISTentries arelinked to theDBN’s intheFIATtable which inturn links thedatablock toafile. Thiscompletes the linking offunctional module datablocks totheir files. Output datablocks cannot reside ontheDataPoolFile, soGNFIST checks forthisandif found, theDBNandallDBN’s equivalenced toitaredeleted fromtheDPLtable located innamed common /XDPL/. 3.3.9.5 Design Requirements GNFIST resides inthecore resident portion ofalink. Itdoesnotuseonencoreandthe onlyrestriction isthattheFISTtable belarge enough toholdallFISTNM’s foramodule. Thenamed common blocks needed byGNFIST arelisted below, along with typeofaccess required (i.e. fetch and/or store data) andreasons foruse. I.C_MM_N/XFIST/ -Store. Usedtostore FISTNM’s andlinkFISTNM’s with their corresponding DBN’s inFIAT. 2.C_MM_N/XFIAT/ -Fetch andstore. Usedtodetermine status ofDBN’s. TheFIATtable isaltered ifunpooling ofinput datablocks isnecessary. 3.C_MM_N/XDPL/ -Fetch andstore. Used todetermine status ofinput DBN’s andisaltered ifoutnut DBN’s appear init. 4.C_MM_N/_SCENT/ -Fetch. Contains BSCAR entry forfunctional module tobeexecuted. Usedtoalter FIATwhen input DBN’s needtobeunpooled. 3.3.9.6 Diagnostic Messages GNFIST detects overflow inFISTtable andsends message toterminate job. 3.3-13\nSUBROUTINE DESCRIPTIONS 3.3.10 XEOT (End-of-Tape). 3.3.10.1 Entry Point: XE_T. 3.3.10.2 Purpose Toprepare andsend tothecomputer operator, messages instructing himwhat todowhen end-of-tape hasbeen encountered ontheOldProblem Tape (_PTP) ortheNewProblem Tape (NPTP). 3.3.10.3 Calling Sequence CALL XE_T(ID,_REEL,NREEL,BUF) ID-BCDnameNPTPor_PTP _REEL-Number ofreeltobedismounted -integer. NREEL-Number ofnewreeltobemounted -integer. BUF-GIN_buffer usedbyNPTPorOPTP. 3.3.10.4 Method Acheck ismadetoseeiftapehasmulti-reel capability. Ifnot,afatalmessage isissued andjobisterminated. Theoperator messages aregenerated andissued andtheoldreelisre- woundandunloaded. Acheck ismadetoseeifcorrect newreelhasbeenmounted andthena return ismadetocallinp program. 3.3.10.5 Design Requirements XE_Tmustbeaccessible toroutines XGPIandXCHK. 3.3.10.6 Diagnostic Messages Amessage isissued iftapedoesnothavemulti-reel capability. 3.3-14\nEXECUTIVE SUBROUTINE DESCRIPTIONS 3.3.11 SSWTCH (Sense Switches) 3.3.11.I Entry Point: SSWTCH. 3.3.11.2 Purpose Toindicate tothecalling routine whether ornotaspecified sense switch isset. 3.3.11.3 Calling Sequence CALL SSWTCH(SS,F) SS-Sense switch number -integer, l\u003cSS\u003c31. F-Flag indicating status ofSS F=0ifSSnoton F=lifSSison 3.3.11.4 Method Named common block /SYSTEM/contains theword which contains thesense switch settings. Bitloftheword corresponds tosense switch l,bit2corresponds tosense switch 2,etc. If thebitcorresponding toSSisonthen F=l,ifnotthen F=O. Note that sense switches aresetbytheuser viatheDIAG card intheExecutive Control Deck andnotthrough physical sense switches setbythecomputer operator. Thefollowing sense switches arecurrently inuse: Switch l Dump core when subroutine DUMP orPDUIIP iscalled. This will cause acore dump onanynonpreface fatal error. 2 Print theFIAT after each call toXSFA. 3 Print theData Pool Dictionary after each call toXSFA. 4 Print the_SCAR attheendofXGPI. 5 Type amessaQe tosignify thebeginning ofeach module ontheoperator’s console. Type amessage tosignify theending ofeach r_odule on theoperator’s console. Print eigenvalue extraction diagnostics forreal inverse power andreal andcomplex determinant methods. 3.3-15 (8/I/72)\nEXECUTIVE SUBROUTINE DESCRIPTIONS Switch 8 9 I0 II 12 13 14 15 16 17 i8 19 20 21 22 23-26 27 28 29 30 31Printmatrix trailers asthematrices aregenerated. Notused. Usealternate nonlinear loading inTRD.(Replace {Nn+I}by_{Nn+1+Nn+Nn_l}) Printallactive rowandcolumn possibilities forthe decomposition algorithm. Printeigenvalue extraction diagnostics forcomplex inverse power. Printopencorelength. PrinttheRigidFormat (!_ASTRAN SOURCE PROGRAM COHPILATION) forallnon-Restart runs. TraceGIN99PEN/CL9SE operations onCDC6000series. Tracerealinverse powereigenvalue extraction operations. PunchtheDMAPsequence thatiscompiled. NoLused. PrintdataforMPYADmethod selection. Generate de-bug printout (ForNASTRAN programmers who include CALLBUGintheirsubroutines). PrintGP4setdefinition. PrintGP4degree offreedom definition. Notused. InputFileProcessor (IFP)tabledump. Punchoutthelinkspecification table-deckXBSBD. Process linkspecification tableupdate deck. Punchoutalters toXSEMidecks. Printlinkspecification table. Forafurther explanation ofswitches 28-31seeSection 6.11intheProgran_er’s Manual. 3.3.11.5 Design Requirements SSWTQI resides inthecoreresident portion ofalink. 3.3-15a (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.3.12 C_NMSG (Console Message Writer). 3.3.12.1 EntryPoint: C_NMSG 3.3.12.2 Purpose Writes thecurrent timeandaNASTRAN system message ontothesystem output device and (ifthecomputer configuration permits) ontotheon-line operator’s console device. 3.3.12.3 Calling Sequence CALLC_NMSG(MSG,CNT,YN) MSG-Array namecontaining message. CNT-Number of4-character words inmessage (integer). YN-1=yes,0=no.Printon-line device ifyesandavailable. 3.3.12.4 Method Acomputer real-time and/or jobclock isinterrogated. Thenumber ofmessage words indicated issenttothesystem output device (usually printer) alongwiththeclockreading(s). Ifthecomputer configuration permits andtheyes/no switch issetyes,thesameclock reading(s) andmessage issenttotheoperator’s console device (usually typewriter). 3.3.12.5 Design Requirements Onlytheleft-most fourcharacters fromeachcomputer wordareextracted andsenttothe output device(s). 3.3-16\nEXECUTIVE SUBROUTINE DESCRIPTIONS 3.3.13 TTLPGE (Title PageWriter). 3.3.13.l Entry Point: TTLPGE 3.3.13.2 Purpose Toprint onthesystem output filetitle pageinformation asfollows: •theNASTRAN symbol •themachine typeandmodel •thesystem generation date •thelevel identification •major level nun_er (corresponds tothebasic archive Source Library) •minor level nunl)er (corresponds totheobject library foramachine type) •local level nunV_er •variations ofalocal level •theRigid Format series identification, including modifications, ifany 3.3.13.3 Calling Sequence CALLTTLPGE (K) 3.3.13.4 Method TTLPGE iscalled asthefirst executable statement inthePreface driver SEMINT following transliteration (IBM360,370only) andreading oftheNASTRAN card(ifany). Thevariable Kisstored asalocal variable insubroutine SEMINT andmaybesetatexecution timebytheuserontheNASTRAN datacardby NASTRAN TITLE_PT =k where thedefault value forkis1asdefined byaDATAstatement insubroutine SEMINT. The action taken byTTLPGE depends ontheinteger option parameter K(whose value isk)asshown below. k TTLPGE action \u003c0 =0 l 2 3\n3Print one(I)copyofanabbreviated title page Supress anytitle pageprintout Print one(1)copy ofthefulltitle page Print two(2)copies ofthefulltitle page Print asingle copyofalocally annotated title page Supress anytitle pageprintout 3.3-17(8/1/72)\nSUBROUTINE DESCRIPTIONS Whenever changes areincorporated intoNASTRAN, theTTLPGE routine should beupdated to reflect thesechanges. Thisisparticularly important whenofficial updates aremadesinceruns mayonlybeidentifiable bytheinformation contained inthisprintout. Thebasic identification ofagivenversion ofNASTRAN iscalled theLevelnumber, acodeoftheform i.j.k where iisthecurrent major levelnumber, jistheminorlevelnumber andkislocallevel number. Themajor levelcorresponds toacomplete recompilation oftheentire system oneachmachine fromasingle archive source library maintained forallmachines. Itisthrough thismechanism thatthemachine-independent nature oftheNASTRAN codeisguaranteed. Majorlevels ofNASTRAN willprobably onlybeissued atintervals ofonceayearorlonger duetotheexpense involved. Minorlevels correspond tochanges thataremadeononegiventypeofmachine, saythe CDC6000machines. These changes arereflected intheobject library forthegivenmachine class, andmaybereflected inthesource byeither alters tothebasicsource library orbyan updated source library. Minorlevels willprobably beissued every fewmonths foreachmachine classasalters tothebasicorprevious source library. Locallevels arereserved forlocally madechanges andprovides amechanism forthelocal NASTRAN system programmer tokeeptrackofseveral versions ofNASTRAN thatmayexistathis installation. Thiswouldprobably consist ofadigitoradigit andatypedletter (e.g., Level 15.I.2A). TheRigid Format series isdesignated byaletter. Minormodifications willbeidentified byadigit (e.g., RigidFormat Series M.2). Itisanticipated thatnewseries ofRigidFormats willonlybeavailable concurrently withmajor levels oftheprogram. 3.3-18 (8/I/72)\nEXECUTIVESUBROUTIrIE DESCRIPTIONS 3.3.14SEr_TR_I (Transliterator) (IBM36_-370 only) 3.3.14.1 EntryPoint: SE_TRN 3.3.14.2 Purpose Toreadthesystem inputstream andconvert EBCDIC characters toBCD. 3.3.14.3 Calling Sequence CALLSEr._RN (KIN,K_UT) 3.3.14.4 Method AnI/_activity isdoneusingF_RTRAN. Oneeighty (80)column cardimageatatimeisread fromF_RTRAN unitKIN,transliterated, andwritten outonF_RTRAN unitK_UT. F_RTRAN unitK_UT isrewound before writing andbefore returning. F_RTRAN unitKINisnotrewound before reading and isnotmanipulated further onceanend-of-file condition isdetected. AnyEBCDIC characters other thanthestandard NASTRAN setdefined onpage2.1-2 (6/I/72) oftheUser’s Manual aretransliterated totheblankcharacter. BCDpunched characters aretransliterated intothemselves. Thus,forthe standard character set,either BCD,EBCDIC ormixedBCDandEBCDIC maybeusedontheIBM360-370 computer systems. Itshould beemphasized thatdeckscontaining EBCDIC characters willnotrunon theother NASTRAN computers. 3.3.14.5 Design Requirements TheF_RTRAN unit KBUT must bedefined intheJCLandsufficient space must beallocated tohold thetransliterated input stream. Theactual unit numbers used aredefined bythecalling program (SEMINT) andarecurrently settoKIN=5andK_UT =I.Ifthe2314 disk facility isused forKBUT, thespace canbeestimated by No.CardsNo.Tracks =91 iffull track blocking isused. This isaccomplished byspecifying theDCBas DCB =(RECFM=FB, LRECL=80, BLKSIZE=7280) Thetransliteration iseffected byusing thecharacter read inasanindex into a256byte table containing thedesired BCDrepresentations. Inthis way, nolook-up expense isinvolved. 3.3-1g (8/I/72)\n3.3.15 RETURN (Return) 3.3.15.1 EntryPoint: RETURN 3.3.15.2 Purpose:SUBROUTINE DESCRIPTIONS Toallowinclusion ofcallstonon-existing decks. required tousethiscapability. 3.3.15.3 Calling Sequence CALLRETURN 3.3.15.4 Method Theonlyexecutable statement isaRETURN tothecalling program. 3.3.15.5 Design Requirements RETURN should belocated inLINK0orintherootsegment. 3.3.15.6 Diagnostic Messages None.Linkage Editor datachanges are 3.3-20 (8/I172)\n3.4 3.4.I 3.4.1.I 3.4.1.2UTILITY SUBROUTINE DESCRIPTIONS UTILITY SUBROUTINE DESCRIPTIONS. MAPFNS (Machine Word Functlons). Entry Points: LSHIFT, RSHIFT, ANDF, _RF, X_RF, C_MPLF, C_RSZ, C_RWDS. Purpose Toperform basic computer wordmanipulations bystandard binary digit (bit) operations. Themanipulations areperformed over thecomplete memory wordlength fortheparticular hardware. Also, todetermine thesizeofopencore (C_RSZ) andtheabsolute difference between locations in core (C_R_DS). 3.4.1.3 Calling Sequence Allmachine word functions areexecuted asF_RTRAN integer function subroutines with integer arguments. 3.4.1.4 Method Themethod employed within eachfunction wiiibedescribed following theseparate _unction examples. 3.4.1.5 Entries K:LSHIFT (I,N) Theentire bitstructure ofwordIisshifted leftNplacesandtheresulting wordreplaces wordK.WordIisunchanged. High-order bitsshifted outarelost.Zerosaresupplied to vacated low-order positions. Theshiftislogical; nospecial provision ismadeforthesign position. K=RSNIFT (I,N) Theentire bitstructure ofword Iisshifted right Nplaces andtheresulting word reolaces word K.Word Iisunchanged. Low-order bitsshifted outarelost. Zeros aresupplied to vacated high-order positions. Theshift islogical; nosnecial orovisionismade forthesign position. K=ANDF (I,J) Alogical product ofthebitswithin wordIandwordJisformed andstored intoword K. Words IandJareunchanged. 3.4-1\nSUBROUTINE DESCRIPTIONS K=_RF(I,J) Alogical sumofthebits within word Iandword Jisformed andstored into word K. Words IandJareunchanged. K=X_RF (I,J) Themodulo-two sum(exclusive or)ofthebits within word Iandword Jisformed and stored into word K.Words IandJareunchanged. K=COMPLF (1) Theones complement ofthebits within word Iisformed andstored into word K.Word I isunchanged. K:C_RSZ (l,J) Thesizeofopencoreiscomputed andstored inlocation Kthrough thisfunction. Location Iisnormally theaddress ofalabeled common celldefining thebeginning ofaparticular open corearea. Location Jisnormally theaddress ofblankcommon (usually thought tobetheendof aparticular opencorearea). Oncomputer memory configurations whereblankcommon doesnot define theendofopencore, C_RSZignores location Jandsubstitutes acorrect endvalue. The arguments IandJmaybeinterchanged without affecting results. K=C_RWDS (l,J) Theabsolute difference plus1between theaddresses oflocations IandJiscomnuted and stored intowordK.Words IandJareunchanged. 3.4.1.6 Design Requirements I_APFNS iswritten inassembly language. 3.4-2\n3.4.2 3.4.2.1 3.4.2.2UTILITY SUBROUTINE DESCRIPTIONS _PEN (Initiate Activit XonaFile). Entry Point: BPEN. Purpose Toinitiate activity ontherequested file. 3.4.2.3 Calling Sequence CALL_PEN($n,NAME,BUFF,P) n-F_RTRAN statement intheFIST(i.e.thedata NAME-GIN_filename BUFF-Anarraywhose will beused byGIN while D,open file toI.open file to _P=_i_open file to t3•open file to 3.4.2.4 Methodnumber defining thereturn tobetaken intheevent NAME isnot block ispurged). ofthedata block which istoberead orwritten(see section 1.6.4.1). dimension equals thecontents ofthefirst word of/SYSTFM/which thefile isoben. read with rewind write with rewind read without rewind write without rewind _PENstores parameters in/GIN_X/ andthencallsXGINBwhichsearches theFISTforaname matchandpicksupfromtheFIATtheunittowhichthedatablockisassigned. Theposition of thebuffer isdetermined relative to/XNSTRN/. ThisindexissavedintheBUFADD arrayin/GIN_X/. BUFADD issearched todetermine ifany other buffer overlaps thebuffer currently assigned. GINOiscalled toinitiate activity forthe file. 3.4.2.5 Design Requirements Theaddress ofthebuffer assigned mustbegreater thantheaddress of/XNSTRN/. 3.4.2.6 Diagnostic Messages Thefollowing system fatalerrors maybeissued by_PEN: 3006 3012 3O4O 3.4-3\nSUBROUTINE DESCRIPTIONS 3.4.3 WRITE (Write DatainaLogical Record). 3.4.3.1 EntryPoint: WRITE. 3.4.3.2 Purpose Towrite alogical record, orportion ofalogical record, ontherequested file. 3.4.3.3 Calling Sequence CALLWRITE(NAME,BL_CK,N,E_R) NAME-GINBfilenameofthedatablockwhich istobewritten (seesection 1.6.4.1). BL_CK- Anarrayofdimension _Ncontaining thedatawords tobewritten. N-Thenumber ofwordstobewritten -integer -input. O,theNwordstobewritten bythiscalldonotendthelogical record, i.e. _subsequent WRITEcallswillprovide additional datatobewritten inthe E_R=_Icurrent logical record. \\I,theNwordstobewritten bythiscallendthelogical record. 3.4.3.4 Method _JRITE stores parameters in/GIN_X/ andthencalls XGIN_which inturncalls GINOtonerform theactual processina ofthecall. 3.4-4\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.4 CLOSE (Terminate Activity onaFile). 3.4.4.1 Entry Point: CLOSE. 3.4.4.2 Purpose Toterminate activity ontherequested file. 3.4.4.3 Calling Sequence CALLCL_SE(NAME,P) NAME-GIN_filenameofthedatablock tobeclosed (seesection 1.6.4.1). l,iffilewasopened towrite, write end-of-file andrewind. Iffilewasopened toread, rewind only. 2,close fileatcurrent file position (noend-of-file, norewind). P 3,iffilewasopened towrite, write end-of-file andposition fileinfront of end-of-file mark. \\ Iffilewasopened toread, sameas_P=2. Iftherequested fileisnotintheFISTorisnotcurrently open, anormal return isgiven andnooperation takes place. Ifthefilewasopened foroutput andthelastlogical record hasnotbeenwritten, itis written prior tohonoring the_Prequest. Thebuffer assigned when thefilewasopened isreleased andisavailable totheuseron return. 3.4.4.4 Method CLOSE stores parameters in/GIN_X/andthencalls XGIN. IfXGIN returns indicating the file isnotintheFISTornotopen, animmediate return isgiven totheuser. Otherwise XGIN_ calls GIN_ toprocess thecall. 3.4-5\nSUBROUTINE DESCRIPTIONS 3.4.5 READ (Read Data From aLogical Record). 3.4.5.1 Entry Point: READ. 3.4.5.2 Purpose Toread thecontents ofalogical record, orportion ofalooical record, from therequested file. 3.4.5.3 Calling CALLREAD($n_ n_Sequence ,$n2,NAME,BLBCK,N,EBR,M) F_RTRAN statement number defining thereturn tobetaken intheevent anend-of- file isencountered bythis READ operation. n2 F_RTRAN statement number defining thereturn tobetaken attheendoftheREAD operation whenever theend-of-logical-record isencountered prior totransmittinq therequested number ofdata words. NAME -GIN_ file name ofthedata block which istoberead (see section 1.6.4.1). BL_CK-Anarrayofdimension _N,wherethewordsreadwillbestored. N\u003eO:Thenumber ofwords tobereadandstored atBL@CK -integer -input. N-_N(O:Thenumber ofwords tobeskipped, i.e.,readbutnotstored at_L_CK. ! _Integer -inout. O,subsequent callstoREADforthecurrent logical record areexDected. EOR _I,thecurrent callisthelastcallforthecurrent logical record. Thefile l _willbepositioned tothebeginning ofthenextloqical record before returning. M -Ifreturn ton2isgiven, thenumber ofwords actually readisstored inM. Innoothercasearethecontents ofMchanged. _Jhenever return ton2isgiven, thefileispositioned tothebeginning ofthenextlogical record regardless ofthesetting ofE_R. Areturn ton_ispossible onlywhenacalltoREADisgivenwhenthefileispositioned at thebeginning ofalogical record. 3.4-6\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.5.4 Method READstores parameters in/GIN@X/andthencalls XGIN_ which inturncalls GIN@ toperform theactual processing ofthecall. 3.4-7\nSUBROUTINE DESCRIPTIONS 3.4.6 F_JDREC IForward SpaceOneLogical Record). 3.4.6.1 EntryPoint: FWDREC. 3.4.6.2 Purpose Toposition therequested fileforward onelogical record. 3.4.6.3 Calling Sequence CALLFWDREC($n,NAME) n-F_RTRAN statement number defining thereturn tobetakenintheeventanend-of-file isencountered. NAME-GIN_filenameofdatablocktobepositioned forward (seesection 1.6.4.1). Thiscallwillalways position thefiletothebeginning ofthenextlogical record unless anend-of-file isencountered. 3.4.6.4 Method FWDREC stores parameters in/GINBX/ andthencalls XGIN_which inturncallsGIN_toprocess thecall. 3.4-8\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.7 BCKREC (Backspace OneLogical Record). 3.4.7.1 Entry Point: BCKREC. 3.4.7.2 Purpose Toposition therequested file backward onelogical record. 3.4.7.3 Calling Sequence CALLBCKREC (NAME) NAME-GIN_filenameofdatablock tobepositioned backward (seesection 1.6.4.1). Ifthefileispositioned inthemiddle ofalogical record, thefileisrepositioned to thebeginning ofthatrecord. Otherwise, thefileispositioned tothebeginning oftheprevious logical record. Ifthefileispositioned atthebeginning offile, nooperation occurs andanormal return isgiven. 3.4.7.4 Method BCKREC stores parameters in/GIN_X/andthencalls XGINB which inturncalls _I_to process thecall. 3.4-9"},"title":"Programmer's Manual P20"},"/docs/programmers/programmers_manual_021/":{"data":{"":"3.4.8SUBROUTINE DESCRIPTIONS REWIND (Position File totheLoadPoint). 3.4.8.1 Entry Point: REWIND 3.4.8.2 Purpose Torewind therequested file. 3.4.8.3 Calling Sequence CALL REWIND(NAME) NAME-GIN_ filenameofthedatablock toberewound (seesection 1.6.4.1). Rewind given foranoutput filehastheeffect oferasing anydatawhich hasbeenwritten onthefile. 3.4.8.4 Method REWIND stores parameters in/GIN_X/andthencalls XGIN_ which inturncalls GIN_ to process thecall. 3.4-I0\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.9E_F(Write anEnd-of-File). 3.4.9.1 Entry Point: E_F. 3.4.9.2 Purpose Towrite anend-of-file ontherequested file. 3.4.9.3 Calling Sequence CALLE_F(NAME) NAME-GIN_file nameofdatablock onwhich end-of-file istobewritten(see section 1.6.4.1.) Thefilemustbeopentowrite atthetimeofthiscal’l. 3.4.9.4 Method E_Fstores parameters in/GINBX/andthencalls XGIN_ which inturncalls GIN_toprocess thecall. 3.4-II\nSUBROUTINE DESCRIPTIONS 3.4.10 SKPFIL (SkipFilesForward orBackward). 3.4.10.1 EntryPoint: SKPFIL. 3.4.10.2 Purpose Toposition therequested fileforward orbackward astated number offiles. 3.4.13.3 Calling Sequence CALLSKPFIL(NAME,N) NAME-GINOfilenameofthedatablocktoberepositioned (seesection 1.6.4.1). N-Thenumber offilestobeskipped. N\u003e0meansforward skiD, N_0means backward skip, N=0meansnooperation -inteaer -innut. Notes: I.Following aforward skip,thefileispositioned atthebeqinning ofthefirst logical record (i.e.immediately aftertheend-of-file mark). 2.Following abackward skip,thefileispositioned immediately infrontofthe end-of-file mark(oratthebeginning-of-unit). 3.Request toskipbackward fromthebeginning-of-unit isignored andthefile remains positioned atthebeginning-of-unit. 4.SKPFIL backward onafileopened towrite hastheeffect of\"erasing\" file(s) written. 3.4.13.4 Method SKPFIL stores parameters in/GIN_X/ andcallsXGINOwhich inturncallsGIN_tonrocess the call. 3.4-12 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.11 XGINIB (GIN_ Utility Routine). 3.4.11.1 Entry Point: XGIN(B. 3.4.11.2 Purpose Toconvert theGINBfilenametoaunitnumber, retrieve thebuffer assigned tothefile andcallGIN_. 3.4.11.3 Calling Sequence CALLXGIN_($nI,$n2,A,M) C_MM_N/GIN_X/LGIN0X,FILEX,E_R,P,ENTRY,LSTNAM,N,NAME,NTAPE,XYZ(2),UNITAB(75),BUFADD(75) l,callfromsubroutine PEN E;TRY = NAME - FILEX - LSTI_M - NTAPE = nl2,callfromsubroutine WRITE 3,callfromsubroutine READ 4,callfromsubroutine CLOSE S,callfromsubroutine BCKREC 6,callfromsubroutine FWDREC 7,callfromsubroutine SKPFIL 8,callfromsubroutine E_F n2integer -inout 9,callfromsubroutine REWIND GIN_file nameofdatablock forwhich activity isrequested -integer -input. Unit number towhich NAMEisassigned -integer -output. Onentry toXGIN, GIN_namefromprevious call. OnexitfromXGINB, LSTNAM =NAME-integer -input andoutput. O,filedoes notreside ontapeinteger outDut. l,fileresides ontape ifENTRY =lor4,F_RTRAN statement number defining return intheeventN_MEisnotinFIST. ifENTRY =3or6,F_RTRAN statement number defining return intheevent anend-of-file isencountered. IfENTRY =3,F_RTRAN statement number defining end-of-logical-record prior to completion ofrequested read. 3.4-13\nSUBROUTINE DESCRIPTIONS A IfENTRY =2or3,Aistheuser block (from/to) which data words arewritten/read. M IfENTRY =3andreturn ton2isgiven, M=number ofwords read -integer -output. 3.4.11.4 Method TheFIST issearched foraname match. Iffound, thepointer toFIAT isused tonickunthe unit number andtape flag. Ifnotfound, anon-standard return isgiven (ENTRY =lor4)ora fatal message isgenerated. Theaddress ofthebuffer assigned tothefile isnicked uDandGINB iscalled toexecute therequested operation. 3.4.11.5 Design Requirements XGINO isdesigned asanintegral part oftheGIN_ collection ofroutines foruseonly by _PEN, READ,WRITE, etc. TheBUFADD tablemustbeinitialized tozeropriortothefirstcallinaNASTRAN execution. 3.4.11.6 Diagnostic Messages Thefollowing system fatalerrors maybeissued byXGINO: 3010 3021 3.4-14\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.12 GIN_ (General Input/Output Routine). 3.4.12.1 Entry Point: GIN_. 3.4.12.2 Purpose Toprovide general purpose Input/Output services tohigher level routines (READ, WRITE, etc.) inthet_STRANprogram. 3.4.12.3 Calling Sequence CALLGIN_($nI,$n2,BUFF,A,M) c_MM_N/GIN_/LGIN_x,FILEx,E_R,_P,ENTRY,LSTNAM,N,NAME,NTAPE,xYZ(2),UNITAB(75),BUFADD(75) I, 2, 3, 4, ENTRY =5, 6, 7, 8, 9, FILEX -Unit EOR BP BUFF nl n2 A M_PENOperation WRITE Operation READOperation CLBSE Operation BCKREC Operation FWNRFC _nprm_inn……… r…….. SKPFIL Operation E_FOperation REWIND OperationInput, integer nu_er offile-integer- input. -End-of-record flag (seeREAD, WRITE) -integer -input. -Operation code (see_PEN, CLOSE) -integer -input. -Number ofwords towrite/read ornumber offiles toskip (seeWRITE, READ, SKPFIL) -integer -input. -Address ofbuffer assigned toFILEX. -F@RTRAN statement number defining return intheevent anend-of-file isencoun- tered (READ and_DREC operations only). -F_RTRAN statement number defining return intheevent anend-of-record isencoun- tered prior totransmitting therequested number ofwords (READ operations only). -Userblock (seeWRITE, READ). -Number ofwords actually readifend-of-record encountered andreturn ton2is given (seeREAD) -integer -outDut. 3.4-15\nSUBROUTINE DESCRIPTIONS 3.4.12.4 Method GIN_blocks alllogical records intofixedlength physical records (blocks) forwriting andreading. Adescription oftheGIN_buffer follows: .=j _- 4- q-Buffer Control Word(BCW)=‘READ’ or’WRIT’ Current Buffer Pointer (CBP) Current Logical Record Pointer (CLR) Current BlockNumber (NBL@CK) Number ofdatawords inlogical record orrecord segment DataWords Control Word u 0 Number ofdatawords inlogical record orrecord segment DataWords Control Word Pointer tolastlogical record (LLR)Loaical recordLogical record and control words Control word=4K+2\"F2+F1where F1=1indicates continued record F2=0indicates lastsegment ofcontinued record ifF1=O,K=number of_1ords inlogical record ifF2=I,K=65536(Block No.)+CLRofIstsegment oflogical record Processing ofeachoperation takesplaceasfollows: I._PEN. Ifarewind isrequested, thefileisrewound andthefirstthreewords ofthe buffer areinitialized followed byareturn. Otherwise, thecurrent fileposition isretrieved fromUNITAB. Ifthefileislogically between blocks, action occurs asabove. Otherwise, the nextblockisreadandthepointer tothecurrent logical record isrestored. Iftheblockread isnottheexpected block, arecovery attempt ismade. 3.4-16\nUTILITY SUBROUTINE DESCRIPTIONS 2.WRITE. Forthefirst call towrite inalogical record, NBL_CK andCLRaresaved in UNITAB. Userdataistransferred tothebuffer. Ifthebuffer isfilled, acontrol word indicat- ingcontinuation isplaced, theblock iswritten andthelogical record iscontinued inthenext block. After datatransfer tothebuffer, E_Ristested. Ifon,acontrol word isnlaced in thebuffer andpointers aremoved tothebeginning ofanewlogical record. 3.READ. Ifthebuffer isempty, thenextblock onthefile isread. Ifpositioned atthe beginning ofalogical record, atestforlogical end-of-file ismade. Ifon,return tonlis given. Otherwise data istransferred fromthebuffer totheuserarea. Ifthelogical end-of- record isencountered before therequested number ofwords havebeentransmitted, Missetwith thenumber ofwords read, andreturn ton2isgiven. Ifthelogical record iscontinued tothe nextblock, thenextblock isread. After thetransfer ofdata iscomplete, E_Ristested. If on,pointers aremoved tothebeginning ofthenextlogical record. 4.CLOSE. Ifthefilewasopened toread, Pistested. If_P=l,thefileisrewound. IfOP#l,thefileisbackspaced oneblock unless thefile islogically between blocks. In either case, thelogical position ofthefile (NBL_CK andCLR)issaved inUNITAB, BCWissetto zeroand return ismade. Ifthefilewasopened towrite andCBP#CLR,control words forthe last logical record arestored inthebuffer. If_P=lor3,alogical end-of-file isplaced. Thecurrent block iswritten onthefile. If_P=I,thefileisrewound, otherwise thefile is backspaced oneblock. Thelogical position ofthefile issaved inUNITAB, BCWissettozero andreturn ismade. 5.BCKREC. Ifthebuffer incoreisempty, thefileisbackspaced oneblock, theblock is readandLLRisusedtosetthepointers tothelastlogical record intheblock. Ifthefile is logically positioned inthemiddle ofalogical record, pointers arereset tothebeginning ofa logical record. Ifthefileispositioned atthebeginning ofalogical record, pointers are reset tothebeginning oftheprevious logical record. 6.FWDREC. NissettozeroandE_Rtolandthecode intheREAD portion ofGIN isused toposition thefileatthebeginning ofthenextlogical record. 3.4-17\nSUBROUTINE DESCRIPTIONS 7.SKPFIL. Ifaforward skipisrequested, logical records areskipped untilaloaical end-of-file isencountered. Thisisrepeated untilthenumber ofrequested fileshasbeen skipped. Ifabackward skipisrequested, thecodeintheBCKREC portion ofGIN_isusedtoposition backwards onelogical record. Atestforloadpointismade. Ifyes,return ismade. Otherwise, alogical end-of-file testismade. Ifno,theBCKREC isrepeated. Ifyes,atestfornumber ofrequested filesismade. Ifyes,return isgiven. Otherwise, theprocess isrepeated. 8.E_F.Ifthefilewasnotopened towrite, anerrormessage isgenerated. IfCBP_CLR, control wordsareplaced to\"close\" thelastlogical record. Alogical end-of-file isplaced in thebuffer. Return ismade. 9.REWIND. Thefileisrewound, pointers areresetandreturn isgiven. 3.4.i2.5 Design Requirements I.GIN_isdesigned asanintegral partoftheGINOcollection ofroutines andistobe called onlybyXGIN@. 2.SinceGIN@“remembers” theposition offileswhentheyareclosed, anyactivity ona fileoutside ofGINOwilllikely befatal. 3.Because ofthepacking usedinthecontrol word, thefollowing maximums apply: Max.number ofblocks written ononefile=2k-1where k=number ofbitsin thecomputer word-18. Max.buffer size=65535words. 4.Theactual contents oftheGINObuffer aremachine dependent. SeeSection 5fordetails. 3.4.12.6 Diagnostic Messages Thefollowing system fatalmessages maybeissued byGINB: 3009 3029 3048 3049 3.4-18 (811172)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.12.7 Information Message GIN_RECOVERY ATTEMPT _NDATABL_CK EXPECTED BL_CKNB.= N_o= Thismessage isissuedpriortoMessage 3049.GIN_attempts toreposition thefile. Iftheattempt fails,Message 3049isissued, otherwise theproblem proceeds.ACTUAL BL_CK 3.4-19\nSUBROUTINE DESCRIPTIONS 3.4.13 3.4.13.1 3.4.13.2OPNCOR(Transmit Logical Records To/From Core Storage). Entry Points: OPNCOR,WRTCOR, RDCOR. Purpose Tosimulate theGINO WRITE andREAD calls providing thecapabilit_ towrite logical records ofdata incore storage andread logical records from core storage. 3.4.13.3 Calling Sequence CALLOPNC_R(BLOCK) BLOCK-Anarraywhose dimension issufficient toholdalogical record tobewritten orread. CALLHRTCOR(BLOCK,A,N,EOR) BLOCK- Thearraywhere thelogical record istobewritten. A-Anarraycontaining thedatawords tobewritten. N-Thenumber ofdatawords tobewritten fromA. IiO,additional datawillbewritten inthelogical record viasubsequentEOR-callstoWRTCOR. O,thecurrent callisthatlastcallforthecurrent logical record. CALLRDCOR($n_,$n2,BLOCK,A,N,EOR,M) n_-FORTRAN statement number defining thereturn takenintheeventanend-of-file isencountered. Thisreturn isno__.t_tpossible fromRDCORbutisprovided inthe calling sequence forcompatibility withREAD. n2 FORTP_AN statement number defining thereturn taken intheeventthatthe number ofwords requested tobereadisnotavailable intherecord. Inthis case,Mwordsarereadandtransmitted andthevalueMisreturned totheuser. BLOCK- Thearraywherethelogical record isstored. A-Anarraywhere therequested datawords fromtherecord willbestored. N-Thenumber ofdatawordstoberead. 3.4-20\nUTILITY SUBROUTINE DESCRIPTIONS __=O,moredataistobereadfromtherecord viasubsequent calls toRDC_R.E{_R O,thecurrent call isthelastcall forthecurrent logical record. Any remaining words inthelogical record aretobeskipped. M -Thenumber ofwords actually readintheevent return ton2istaken. Thenun_er ofwords available atBL_CK mustbeequal to(orgreater than) thenumber of words inthelogical record ]_lustwo. _PNC_R initializes awordpointer stored atBL_CK(1) tolandhasnoother function. The usermaydesire toperform thisfunction himself with thestatement BL_CK(1) =I.Thisfunction mustbeaccomplished prior tothefirst call toWRTC[_R orRDC_R foreach logical record. 3.4.13.4 Method _PNC_R. BL_CK(1) issettooneandreturn ismade. WRTC{R. Thecurrent pointer stored atBL_CK(1) ispicked up. Nwords aretransmitted from AtoBLOCK beginning atthecurrent pointer plusone. IfE_R=O,thenewpointer isstored and return made. Otherwise, anend-of-record flagisstored f_BL_CK following the’*,__ord written. Thepointer (pointing totheflag) isstored andreturn made. RDC{_R. Thecurrent pointer ispicked upfromBL_CK(1). Words aretransmitted fromBLiBCK beginning atthecurrent pointer plusonetoAuntil (1)theend-of-record flagisencountered inwhich case theactual nund_er ofwords transmitted isstored inMandRETURN 2isgiven, or(2) Nwords havebeentransmitted. IfE_R=O,thenewpointer isstored andreturn ismade. If E_R#O,BL_CK issearched until theflagisfound, thepointer (pointing immediately prior totheflag) issaved andreturn ismade. 3.4.13.5 Design Requirements Theflag value mustbeunique. Itsvalue =(-16777215) must notbeoneofthedatawords written. 3.4-21\nSUBROUTINE DESCRIPTIONS 3.4.14 3.4.14.1 EntryPoint: G_PEN. 3.4.14.2 PurposeG_PEN (Short Form forSubroutine PEN With Header Record Processing. Toprovide ashort form (without thenon-standard return ofsubroutine _PEN)for opening a GINO file, andtowrite atwo-word header record ifthedata block isopened asoutput with rewind ortoskip theheader record ifthedata block isopened asinput with rewind. 3.4.14.3 Calling Sequence CALLG_PEN(FILE,BUFFER,_PT) where: FILE =GINOfilename(seesection 1.6.4.1). BUFFER =GINBbuffer location. _PT =anyoftheopenoptions permitted bysubroutine _PEN(seesection 3.4.2). 3.4.14.4 Method Openthefile(subroutine @PEN). If@PT=inputwithrewind (0),skipthefirstrecord of thedatablock. If@PT=output withrewind (I),writethetwowordBCDnameofthedatablock asreturned bysubroutine FNAME. 3.4.14.5 Design Requirements Thedatablockmustexist(mustnotbepurged). If_PT=innutwithrewind (0),thefirst record ofthedatablockmustbeatleasttwowordslong. Subroutines used: _PEN,READ,WRITE, FNAME, MESAGE. 3.4.14.6 Diagnostic Messages Ifthedatablockispurged orifanend-of-file orend-of-record condition isencountered whenreading thedatablock, subroutine MESAGE willbecalled withinternal messaae numbers I,2, or3,respectively (external message numbers are3001,3002and3003). 3.4-22\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.15 3.4.15.1 EntryPoint: FREAD. 3.4.15.2 PurposeFREAD (Short FormforSubroutine READ). Toprovide ashort form (without thenon-standard returns ofsubroutine READ) ofreading a GIN_file. 3.4.15.3 Calling Sequence CALLFREAD(FILE,BL_CK,N,EBR) where: FILE=GINBfilename (seesection 1.6.4.1). BL_CK= array intowhich Nitems aretoberead. N=number ofitems toberead. EOR=anyendofrecord option permittedbysubroutine READ(seesection 3.4.5). 3.4.15.4 Method Read theNitems from FILEintoBL_CK. Ifsubroutine READreturns anend-of-file or end-of-record condition, subroutine MESAGE iscalled with afatal error condition. 3.4.15.5 Design Requirements Inaddition tothose imposed byREAD, there mustbeNitems remaining intherecord tobe read. Subroutines used: READ, MESAGE. 3.4.15.6 Diagnostic Messages Subroutine MESAGE maybecalled with internal message number 2or3(external message numbers 3002,3003). 3.4-23\nSUBROUTINE DESCRIPTIONS 3.4.16 WRTTRL IWrite Trailer). 3.4.16.1 Entry Points: WRTTRL, RDTRL. 3.4.16.2 Purpose WRTTRL will pack sixwords oftrailer information into three words andstore them intheFIAT. RDTRL will retrieve andunpack thetrailer information. 3.4.1G.3 Calling Sequence CALL WRTTRL(FILBLK) FILBLK(1) -GINO file name (see section 1.6.4.1). FILBLK(2-7) -Trailer information tobestored. CALL RDTRL(FILBLK) FILBLK(1) -GINO file name. FILBLK(2-7) -Storage space fortrailer information. 3.4.16.4 Method Theindex into theFIAT forthespecified file islocated intheFIST. Thethree packed words arestored inorretrieved from theFIAT. Theinformation isalso stored forallfiles equivalenced totheGIN_ file name. ForRDTRL, ifthefile ispurged, FILBLK(1) isset negative. Ifthefile isamatrix, word 7isconverted toadensity (lO000 =I00% dense). Matrix trailers canbedisplayed asthey arewritten byactivating DIAG 8. 3.4.16.5 Design Requirements Each word oftrailer information isassumed tobeapositive integer less than 216-I. Trailers maynotbewritten onGINO files I01-199. 3.4.16.6 Diagnostic Messages Ifthefile didnotexist intheFIST when WRTTRL wascalled, fatal error 3011 occurs. 3.4-24 (811172)\nUTILITY SUBROUTII_E DESCRIPTIONS 3.4.17 FI\u0026J_E (File Name). 3.4.17.1 Entry Point: FNAME. 3.4.17.2 Purpose Given aGINBfilename, FNAME returns thetwoBCDwords which describe thedatablock. 3.4.17.3 Calling Sequence CALLFNAME(FILE,NAME) FILE-GINBfilename (seesecticn 1.6.4.1). NAME(2) -Storage forthetwoBCDwords. 3.4.17.4 Method TheGINBfile nameisfirst located intheFIST. Theindex intheFISTisusedtofind theBCDdescriptors intheFIAT. Ifthefiledoesnotexist intheFIST, ‘(I_NE)_’ isreturned asthetwowords, ^indicating aBCDblank. 3.4-25\nSUBROUTINE DESCRIPTIONS 3.4.18 3.4.18.1 EntryPoint:CLSTAB. 3.4.18.2 PurposeCLSTAB (Close aGIN_FileandWrite aNon-zero Trailer). Toclose aGINBfileandgenerate atable trailer bycallinn WRTTRL. 3.4.18.3 Calling Sequence CALLCLSTAB(FILE,_PT) where: 3.4.18.4 CALLCL_SE(FILE,OPT) Generate thetablecontrol block, ITABCB: ITABCB(1) =FILE ITABCB(7) =1 D_I01=2,6 I0ITABCB(1) :0 CALL_4RTTRL (ITABC3). 3.4.18.5 Design Requirements Sameasthoseforsubroutines CLOSEandWRTTRL.FILE=GIN_filenumber -integer -input. OPT=anyclose option permitted bysubroutineCL_SE (seesection 3.4.4) -integer -input. Method Subroutines used: CLOSE, WRTTRL. 3.4-26\n3.4.19UTILITY SUBROUTINE DESCRIPTIONS XRCARD(Executive Free-FieldCardData ConversionRoutine) 3.4.19.1Entry Point: XRCARD. 3.4.19.2Purpose Tointerpret NASTRAN free-field cardinput dataasfollows: I.Identify BCDalpha andnumeric datafields astheyareconverted andplaced in theuser’s buffer; 2.Flagandoutput special datafield delimiters; 3.Convert BCDnumeric fields tobinary integer orbinary floating point; 4.Indicate when thedataextends beyond one72column card. 3.4.19.3Calling Sequence “““XRCARD_U,BU,,L,IN ) L rl_T=BUF Where: @UTBUF L INBUF=Thebufferwhich istocontain theconverted cardimage. =Thelength of_UTBUF available toXRCARD. =Thebuffer containing thecardimage tobeconverted. 3.4.19.4Method XRCARD’s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing machines having avariety ofcomputer wordstructures, andavariety ofdifferences inhollerith handling imposed bydifferingFgRTRAN compilers. XRCARD analyzes thetwenty hollerith words input through INBUF asfollows: Data Field Delimiters TypeA: Thefollowing syn_ois signify theendofanalpha field ornumeric field onthecard. As these syni_ols areencountered, theywillbeflagged andplaced intheoutputbuffer toaidthe user inidentifying thedata. (LEFTPAREN /SLASH =EQUAL 3.4-27\nSUBROUTINE DESCRIPTIONS TypeB: Thefollowing symbols areidentical tothoselisted aboveexcept thatthesymbol isnot flagged orplaced intheoutput buffer: ,COMHA )RIGHTPAREN Whensuccessive typeAortyneBdelimiters areencountered, anullfieldindication (twoBCD blankwords) isoutput. Anullfieldisgenerated foreachsuccessive delimiter. Anullfield isalsogenerated whenatypeAortypeBdelimiter isfollowed bya$indicating theendofdata condition. TypeC: Thefollowing symbol isidentical toU1eCOMrIAexcept thatnonullfieldindication isoutput whentheyareencountered insuccession. ABLAIIK EndofDataIndication Therearethreemeansbywhich end-of-data maybespecified onthecard: -Thelastdatafieldendsincolumn 72,orisfollowed byblanks outthrough column 72; -$isencountered, afterwhichconments maybeincluded outtocolumn 80;or -Continuation cardsending in(,/,=or,willresult inacontinuation flag (0modeword). Format ofOutput Data Amodeword,N,isplaced intheoutput buffer todistinguish between BCDdataand numeric data. Numeric ModeWord: Anewmodewordisoutput eachtimeanumeric fieldisconverted andoutput. (Allnumeric modewordsarenegative). I/=-Iinteger data(Idataword) =-2floating pointsinnle precision (Idataword) =-4floating pointdouble precision (2datawords) Nindicates thetypeofnumeric dataandwhere tolookforthenextmodeword. 3.4-28 (8/1/72)\nUTILITY SUBROUTINE DESCRIPTIONS Aloha Mode Word: When processing alpha data, only onemode word isoutput forsuccessive alpha fields, i.e., analpha mode word will never follow another aloha mode word. N=Thenumber ofsuccessive alpha fields encountered onthecard. Each alnha #ield consists oftwo4-character computer words (left adiusted). Thus Ncanbeused tocompute thelocation ofthenext mode word. Thetype Adelimiters areoutput asalpha data andare’covered’ bythealoha mode ord. Since data output inthealpha mode must consists oftwowords atype Adelimiter will appear as: Word l=Delimiter flag, allbits oftheword areon. Word 2=BCDdelimiter, left adjusted, followed byBCDblanks. End-of-Data: Theend-of-data flag isplaced last intheoutput buffer andappears inplace ofanexpected mode word. There aretwoend-of-data flags: -Aword with allbits off, indicating that more data istofollow onacontinuation card. -Aword with allbits onexcept forthesign, indicating that nomore data isto_ollow forthis card type. Sample Input Card CARDAA=I,B=I.O,ABC/CDEFGH GOOD DATA OOOO0000 IZ34S57L 111111 22222222 3333333 4444444 55555555 6_665G_6 77777777 )S;888 99;9_S tZ_a:j_OOg0000 OOC000;;;00000000 O00000DOOOC_OOOOOCOOO_OG 9lg_ii_13141Slii/I@5_2!;Z23_425___Z__31_33__33S373;J_142434445_4?+’152_3____l:?£3 111111111111111111111i 111111111111111111111111 2222222222 222222222 333\"33333333333 444444444444444 44444 5555555555555555 55_5 666B_666B668BBBGS 6 777777777777777771 77 B8888BBBBBB8882222222222222222 3333333 33333333 44444444444444 5555553555555555 B6_BB666_BB666 777177777771777 888888888BBBBB82222222222222222 3333333333323133 4444444444444444 5555555555555_55 6B6GBBB6GBBBB_8 7777777777777777 BBBB889888B88888 £,999S99999.m99999_3$9999999999999S99,3999993999993998 3)11121314151_I)1[,1@,),Z]2223_4_526Y.7Z5.+3CJl.23)34J5:+Z]3540414)i}14(,:464l4B4D5_S’.%54-“5_’57-JF,6_O00D;D;O_ODO0000000 1111111111i111i1111 2222222222222222222 3333333333333333333 4444444444444_44444 55555555S5555555555 86_6666666BB6B_6G 1771711111177711771 8888888888BB_B_B_ 9999999999_9_S?_9 3.4-29"},"title":"Programmer's Manual P21"},"/docs/programmers/programmers_manual_022/":{"data":{"":"SUBROUTINE DESCRIPTIONS Resulting OutputBuffer forIBM7094orUnivac 1108 BCDFieldI BCDFieldI Output Delimiter I Output Delimiter I NOTE: FortheIBMS/360 the output buffer shownherelooks thesameexcept thattheright twoblanks shownintheBCD fields heredonotexist. For theCDC6600therearean additional fourtrailing blanks ineachwordofaBCDfieldthan shownhere.+(alpha mode word) 3 CARD_A a_AAAA AAAAAA A A A AA A alIbitson =AAAAA -(numeric modeword) 1 integer 1 +(alpha modeword) 2 BAAAAA AAAA_ allbitson =AA AAA -(umeric modeword)2 single-precision 1.0 +(alpha modeword) 5 ABCAA A A A AA A allbits on /A A A A /, CDEFAA GHAAA G__DAA A A A A A A DATA/_A A AA A A A allbits onsign bitoff AIndicates blank.Number ofsuccessive alphafields (including TypeAdelimiters) Endofdataforthiscard 3.4-30\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.19.5 Design Requirements Analpha field must beeight characters orless. Longalpha fields willbetruncated to eight characters. Alldatamustbeplaced incardcolumns 1-72. Adatafield maynotbesplit between twocards. Thespecification ofallnumeric datafields must conform toF_RTRAN IVstandards. Ifanerror condition isencountered, e.g., databad,XRCARD willwrite amessage, turnon theN_G_flag in/SYSTEM/,setthefirst wordof@UTBUF =O,andmake anormal return tothe calling program. 3.4-31\nSUBROUTINE DESCRIPTIONS 3.4.2_ 3.4.20.1 Entry Point: RCARD. 3.4.20.2 PurposeRCARD(Fixed FieldCardDataConversion Routine). Tointerpret NASTRAN fixed-field (bulkdata)cardinputasfollows: -Identify BCDalphaandnumeric datafields astheyareconverted andplaced intheusersbuffer; and -Convert BCDnumeric fields tobinary integer orbinary floating point. 3.4.2g.3 Calling Sequence CALLRCARD(_UTBUF,FR_BF,NFLAG,INBUF) Where: _UTBUF FRMTBF NFLAG INBUF=Thebuffer which istocontain theconverted card image. =Abuffer which contains identification flags fortheconverted data in_UTBUF. =Contains number ofwords returned in_UTBUF. =Thebuffer containing thecard image tobeconverted. Definition ofData Identification Flaas Placed inFRMTBF 0=output forablank data field. l=output foraninteger field. 2=output forafloating ooint field. 3=output foraBCDfield. 4=output foradouble precision floating point field. -l=error. 3.4.20.4 Method RCARD’s design isbased onthenecessity ofhaving tofunction onavariety ofcomputing machines having avariety ofcomputer word structures, andavariety ofdifferences inHollerith handling imposed bydiffering F_RTRAN compilers. Twenty 4-Hollerith wordsarereceived byRCARDonanyparticular calltoRCARD. RCARDfirst determines fromfield1(words 1and2)ifthedatacardisacontinuation card,andwhether the 3.4-32\nUTILITY SUBROUTINE DESCRIPTIONS fields aresingle (2words each)ordouble (4wordseach)inlength. Fields 2through 9(for single fieldcards) or2through 5(fordouble fieldcards) arethenconsidered oneatatime. Noconsideration ismadeforthelastfieldofanycard(words 19and20). 3.4.20.5 Design Requirements I.AllBCDfields mustbeginwithanalphabetic character. 2.AllBCDfields aredefined tobeeightcharacters inlength. Nameswithlessthaneinht characters willbefilled withBCDblanks. 3.Whenplaced intheuseroutput buffer, eachBCDfieldwillbedivided intotwofour- character words (leftadjusted) andstored intwosuccessive locations oftheoutput bu#fer. Theremainder ofthewordsisfilled withBCDblanks. 4.Special characters arenottobeusedaspartofaBCDfieldexcept for*and+infield 1(column I)whichindicate adouble fieldorsingle field (respectively) continuation card. 5.Thedatafields willbestored successively intheusersoutput buffer astheyare encountered inscanning thecardimagefromlefttoright. Thenumber ofoutput coreloca- tionsrequired perfield typevaries: a.Integer field=1coreword(right adjusted). b.BCDfield=2corewords. c.Realsingle precision =1coreword, d.Realdouble precision =2corewords. e.Blankfield=1coreword(integer 0). 6.Thecardtypefield (field I)ofacontinuation cardwillnotbepassed alonntotheuser. Twozerowordswillreplace theIDfieldintheoutput buffer. Thustheusercaneasily dis- tinguish thedifference between acontinuation cardandanewcardtype. 7.Acheck forbulk data card types SEQGP andSEQEP ismade byRCARD. Fields 3,5,7,and9oi these card types areprocessed byaspecial conversion. Theinput within these special fields will besimilar totheDewey decimal notation and consists ofamultiple digit integer anduptothree single digit sub-integers; e.g., (354.1.2) and(267.5). Thespecial fields will beconverted toasingle integer bydropping anydecimal points andappending anumber ofzeros equal tothree minus thenumber ofdecimal points in theoriginal number; e.g., (354120) and(267500). 3.4-33 (311171)\nSUBROUTINE DESCRIPTIONS 8.RCARDdoesnotknowthelength oftheusersoutput buffer, therefore, nocheck ismade forexceeding thelength ofthebuffer. However, thenumber ofdatawords placed inthe output buffer willbespecified inNFLAG. 9.Field I0willnotbepassed alongtotheuser. 3.4.20.6 Diagnostic Messages Fields appearing tobeincorrect toRCARDwillcauseadiagnostic tobewritten onthe system output filefollowed byacardformat heading, acardimageecho,andanunderlining of thefieldinquestion. Also,the/SYSTEM/ N_G_flagisset.TRUE., azeroisplaced intheoutput buffer forthefield, anda-Iisplaced intheformat buffer forthefield. RCARDwil3print diagnostics forallfields appearing incorrect andmakeanormal return. 3.4-34\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.21 TAPBIT (Tape BitTest). 3.4.21.I Entry Point: TAPBIT. 3.4.21.2 Purpose Toexamine thetapebitforapermanent GIN_filetodetermine theexistence ofaphysical tapeforthatfile. 3.4.21.3 Calling Sequence IF(TAPBIT(FILE)) GOT_… FILE istheGIN@filename (oneof’P_L’, ‘BPTP, ‘NPTP’, ‘UMF’,‘NUMF’, ‘PLTI’, ‘PLT2’, ‘INPT’). 3.4.21.4 Method Thepermanent FISTissearched andthetapebitinthecorresponding FIATentry is examined. Ifthebitison(indicating thepresence ofaphysical tape), TAPBIT will beset .TRUE.. Otherwise itwillbeset.FALSE.. 3.4.21.5 Design Requirements ThetypeofTAPBIT must bedeclared L_GICAL. 3.4.21.6 Diagnostic Messages Afatal calltoMESAGE occurs ifaGIN@filenameotherthanthose listed isused. 3.4-35\nSUBROUTINE DESCRIPTIONS 3.4.22 PEXIT (Problem Exit). 3.4.22.1 EntryPoint: PEXIT. 3,4.22.2 Purpose Toterminate theprogram. 3.4.22.3 Calling Sequence CALLPEXIT. 3.4.22.4 Method Thediagnostic message queue ischecked andifnotemptythemessage writer MSGWRT is called. Ifthecheckpoint flagissetacardispunched indicating theendoftherestart checkpoint dictionary. Thesystem output buffers areflushed andthentheiobisterminated. 3.4.22.5 Design Requirements PEXITmusthaveaccess totheF_RTRAN 1/9routines. PEXITshould notbecalled bymodule writers. Termination should beviaacallto MESAGE (i.e., CALLMESAGE(-61,O, NAME)). 3.4-36 (8/I/72)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.23 TMT_G_ (Time-To-Go). 3.4.23.1 EntryPoint: TMT_G_. 3.4.23.2 Purpose Computes therunning timeremaining forthisNASTRAN problem. 3.4.23.3 Calling Sequence CALLTMT_G_ (TIME) TIME=Remaining timeininteger seconds. 3.4.23.4 Method During NASTRAN problem initialization, onesystem cell issettotheproblem starting time (PSTART) while another issettothemaximum running time (I_TIME) contained ontheExecutive Control DeckTIMEcard. TIME-T_-G_ isthenfound byreading theclock (N_W) andsolving the following: TIME-T_-G_ =MXTIME -(N@W-PSTART). TheCPUclock isutilized onallmachines except theiBM7094where noneisavailable. 3.4-37\nSUBROUTINE DESCRIPTIONS 3.4.24PAGE (Page Headinq). 3.4.24.1 Entry Points: PAGE, PAGEI, PAGE2 3.4.24.2 Purpose Toprovide astandard pageheading forNASTRAN output. 3.4.24.3 Calling Sequence CALLPAGE CALLPAGEI CALLPAGE2(N) C_I_MON/SYSTEM/XXX,_TPE,SPACE(6),IPAGE,LINE,ITLINE,MAXLIN,DATE(3) OTPE -Systemoutput unit-inteqer. IPAGE-Current pagenumber-increased by1oneachcalltoPAGE. LINE -Numberofdatalinesonprevious page-LINEissettozerobyPAGE. ITLINE-Totalnumberoflinesofprintout inrun-ITLINE =ITLINE+LINE. MAXLIN -Maximum numberofdatalinesallowed -ifITLINE\u003eMAXLIN, PEXITwillbecalled. DATE(3)- Today’s date: month,day,year-integer. N -Numberoflinestobewritten -integer -input. C_MM_N/_UTPUT/TITLE(32),SUBTIT(32),LABEL(32),NEADI(32),HEAD2(32),HEAD3(32) 3.4.24.4 Method PAGEwrites astandard 6lineheading fromTITLE, SUBTIT, LABEL, HEAD1, HEAD2, HEAD3. PAGE1writes onlythefirst3linesofastandard header. PAGE2restores thepageifNlineswillnotfitonthecurrent page. 3.4.24.5 Design Requirements ITLINEmustbelessthanMAXLIN. PAGEmusthaveaccess totheF_RTRAN I/_routines. 3.4-38\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.25 MESAGE (Message). 3.4.25.1 EntryPoint: MESAGE. 3.4.25.2 Purpose Toqueue nonfatal messages during theexecution ofamodule; andforfatal messages give coredump (CALL PDUMP), print themessage queue (CALL MSGWRT), andcallPEXIT. 3.4.25.3 Calling Sequence CALLMESAGE(N_,PARM,N_E) Where N_=Internal message nun_er. N_positive defines themessage asnonfatal; N_negative defines themessage asfatal. PARM=Parameter used intheprinted message (usually theGIN_filenumber) NAME(2) =Twowords usedintheprinted message (usually twoBCDwords containing the nameofthesubroutine calling MESAGE). 3.4.25.4 Method Non-fatal messages arequeued incommon block /MSGX/until themaximum number isreached. Allnon-fatal messages after thisarelost. Whenafatal message isencountered, itisqueued andappropriate action taken toterminate therun. 3.4.25.5 Design Requirements Thesizeofcommon block /MSGX/limits thenumber ofmessages stored. 3.4-39 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.2G MSGVIRT (Message Writer). 3.4.26.1 Entry Point: MSGiVRT. 3.4.26.2 Purpose Toprint NASTRAN error messages onthesystem output file. 3.4.26.3 Calling Sequence CALL MSG_RT COHMON/MSGX/N,M,MSG(4,10) where: N-isthetotalnumber ofmessages tobeprinted. M-maximum number ofmessages thatcanbequeued bysubroutine MESAGE inthearrayMSG. MSG-arraywheremessage parameters arequeued. MSG(I,I) -theinternal message number oftheIthmessage. MSG(2,1) -ifIMSG(I,I)I _30,MSG(2,1) isaGIN_filenumber. IfIMSG(I,I)I =30,thenMSG(2,1) isaninternal message number and USRMSG iscalled. MSG(3,1), MSG(4,1) =parameters fortheIthmessage. 3.4.26.4 Method Theinternal message number, M(I,I), ifnotequalto30inabsolute value, isusedbyMSGWRT to printouttheerrormessage alongwithexternal message number, which is3000plustheinternal message number. Iftheinternal message number, M(I,I), is30,subroutine USRMSG iscalled. 3.4.26.5 Design Requirements External message numbers output byMSGtVRT atpresent are3001through 3057. MSGWRT iscalled onlybyNESAGE. 3.4-40 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIOI_S 3.4.27 USRMSG (User Message Writer). 3.4.27.1 Entry Point: USRMSG. 3.4.27.2 Purpose Toprint mostNASTP,ANusererror messsges onthesystem output file. 3.4.27.3 Calling Sequence CALLUSRMSG(I) C_MM_N/MSGX/N,M,,MSG(4,10) where: I -Pointer intotheMSGarray. N -NotusedinUSRMSG. M -NotusedinUSRMSG. MSG(!,!) -If!MSG(I,I)! =30,MSGNRT will callUSRMSG. MSG(2,I) -UsedbyUSRMSG astheinternal message number. MSG(3,I), MSG(4,I) -Parameters fortheIthmessage. 3.4.27.4 Method USRMSG willprint appropriate error message along withexternal message number, which is 2000plus internal message nu_er. 3.4.27.5 Design Requirements External message numbers output byUSRMSG atp,-esent are: 2001–2140. USRMSG iscalled onlybyMSGWRT. 3.4-41 (3/I/71)\nSUBROUTINE DESCRIPTIONS 3.4.28MATDUM (Matrix Dump (Print) Routine). 3.4.28.1 Entry Point: MATDUM. 3.4.28.2 Purpose Toprint ageneral NASTRAN matrix. 3.4.28.3 Calling Sequence CALLMATDUM(FILEA) FILEA -Seven-word array (matrix control block)- integer Word 1 2 3 4 5 6 7 3.4.28.4 MethodGIN_name Number ofcolumns Numberofrows Formofmatrix Typeofmatrix Maximum number ofnon-zero termsinanycolumn Undefined Thenon-zero terms ofeachcolumn areunpacked andprinted. Ifthematrix control block doesnotcontain legal values thetable printer (seesection 3.4.29) iscalled. 3.4.28.5 Design Requirements Open coreat/TABPRX/. MATDUM mustholdthenon-zero bandofthematrix inthis area. Subroutine TABPRT andtheFORTRAN I/_routines must beavailable toMATDUM. 3.4-42\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.29TABPRT (Table Printer). 3.4.29.1 Entry Point: TABPRT. 3.4.29.2 Purpose Toprint anyNASTRAN DataBlock (especially tables). 3.4.29.3 Calling Sequence CALLTABPRT(FILEN) FILEN -GIN_ nameofdatablock -integer -input. 3.4.29.4 Method Eachword isread, identified astotype–integer, BCD,orrealnumber andprinted lO characters perword, lOnumbers perline. Notethattheidentification method varies from machine tomachine andisnotI00%certain, i.e., certain words maybemisidentified. 3.4.29.5 Design Requirements Opencoreat/TABPRX/. Double precision numbers will notbecorrectly interpreted ontheUnivac llO8. 3.4-43\nSUBROUTINE DESCRIPTIONS 3.4.30 3.4.30.I Entry Points: PREL_C, LBCATE. 3.4.30.2 PurposePREL(_C (Position DataBlocktoRequested Record). Toprovide aconvenient means oflocating data records indata blocks output bythe Input File Processor (IFP). 3.4.30.3 Calling Sequence CALLPREL_C($n,BUFF,NAME) n-F_RTRAN statement number defining return takenintheevent NAMEisnotinthe FIST(i.e., datablock ispurged). BUFF-Anarraywhosedimension equals thecontents ofthefirstwordof/SYSTEM/ plusone.UsedasaGIN_buffer byPREL_C andL_CATE. NAME-GIN_filenameofdatablocktoberead(integer). CALLL_CATE($n,BUFF,ID,IDX) n-F_RTRAN statement number defining return takenintheeventthattherequested record (defined byID)isnotpresent inthedatablock. BUFF-ThesameBUFFassigned whenPRELOC wascalled. ID-Theaddress ofatwo-word array. Thefirstwordistheinteger record identifi- cation andthesecond wordisthebitposition inthetrailer forthedatablock wherethepresence orabsence oftherecord isdefined. IDX-Thecontents ofthethirdwordoftherecord foundwillbestored inIDX (internal cardnumber generated byIFP). Ifthedatablockisnotpurged, PREL_C willopenthefileandskiptheheader record. 2.Iftherequested record isnotpresent (asdetermined bytheappropriate trailer bit),no I/_activity willoccur. Otherwise, LOCATE willposition thefiletoreadthefirstdataentryof therequested record (i.e., afterthe3-word header fortherecord). See2.3.2forformat of records andtrailer.Notes: I. 3.4-44\nUTILITY SUBROUTINE DESCRIPTIONS 3.Iftheuserdoesnotreadalldatainarecord andhewishes touseLOCATE tofind another record, heshould useFWDREC toskiptheremainder ofthecurrent record prior tocalling L_CATE. 4.Foroptimum efficiency inprocessing adatablock, theusershould callL_CATE in theorder inwhich therecords appear onthedatablock, i.e.NASTRAN collating order. 3.4.30.4 Method PRELOC stores NAME inBUFF(1) andthencalls _PEN using BUFF(2) asthebuffer address. If thedatablock ispurged, thenon-standard return isqiven totheuser. Otherwise, FWDREC is called toskiptheheader record andreturn ismadetotheuser. L@CATE calls RDTRL toreadthe datablock trailer. Thebitposition identified byID(2) istested using ANDF. Ifzero, the non-standard return isgiven. Otherwise, three words fromthefile areread. Ifthefirst word equals ID(1), IDXissettothethird wordandreturn ismade. Otherwise, thefirst word issaved andtheremainder oftherecord isskipped. Thefirst three words ofeachsuccessive record are readandthetestforiietch onfirst wordismadeuntil (!)anend-of-file occurs inwhich case thefileisrewound, theheader record skipped andtheprocess iscontinued, (2)amatch isfound inwhich case IDXissetandreturn isgiven or(3)amatch with thefirst record readisfound inwhich case therecord isskipped, awarning message isqueued andthenon-standard return is given. 3.4.30.5 Diagnostic Messages Thefollowing messages maybeissued byPREL_C: 2072 3002 3003 3.4-45\nSUBROUTINE DESCRIPTIONS 3.4.31 S_RTISortaTable). 3.4.31.1 EntryPoint: S_RT. 3.4.31.2 Purpose Tosortacorecontained table, ortosortalogical record fromaspecified inputfile, onaspecified keyword ineachentry. 3.4.31.3 Calling Sequences Tosortacorecontained table: CALLS_RT(O,O,NWDS,KEYWD,TA3LE,NTABLE) NWDS KEYWD TABLE NTABLE -Total NWDS). Tosortalogical record: C_MM_N/SETUP/NFILE(6),BUF CALLS_RT(INPFL,UTFL,NWDS,KEYWD,BL_CK,NBL_CK) NFILE -ThefirstthreewordsmustbesetbytheuserpriortoCALLS@RTwiththe GINBfilenamesofthreescratch files forusebyS_RT. Uponreturn to theuser,NFILE(6) willcontain theGIN_filenameofthefilecontaining thesorted record. BUF IfINPFL=BUTFL, thenBUFpoints toanareainBL@CKwhere aGINObuffer isavailable forS_RT,i.e.,BL_CK(BUF) isthebuffer address. Restriction: BUF\u003eNBL_CK. INPFL -GINOfilenameofdatablockcontaining theloaical record tohesorted. UTFL -GINOfilenameofdatablockwhere thesorted record istobewritten. IfOUTFL=O,thesorted record willremain onNFILE(6).-Thenumber ofwords ineachentryofthetable. Restriction: NWDS 20. -Theword positior within each entry onwhich thesort istotake nlace. -Address where thetable isstored. number ofwords inthetable (NTABLE must beanintegral multiple of 3.4-46\nUTILITY SUBROUTINE DESCRIPTIONS NWDS KEYWD BL_CK-Thenumber ofwords ineachentry oftherecord. Restriction: NWDS_20. -Defined asabove. -AnareaincoretobeusedbyS_RTtoperform thesortphase. NBL_CK -Thenumber ofcomputer words available atBL_CK. Notes: I.INPFL mustbeopened andpositioned tothelogical record bytheuserprior to entry toS_RT. Thefile isnotclosed byS_RT. 2.If_UTFL O,thisfilemustbeopened andpositioned bytheuser prior toentry to S_RT. Thefile isnotclosed byS_RT. 3.IfINPFL =UTFL, thefileisclosed bySBRT, opened towrite withrewind, and thesorted logical record iswritten asthefirst logical record onthefile. Thefileis no___t_tclosed byS_RT. A NPTI(A _cmlwmyc rlnc_H wifh rpwinH 3.4.31.4 I.Method CpRESpRT. Themethod usedisashuttle exchange orbubble sortwhich isoptimum for datawhichisnearly insort. Themethod isasfollows: a.Thekeywordsoftwosuccessive entries arecompared. Ifcurrently insort,the process isrepeated. Ifnot, b.Asearch toward thebeginning ofthetableismadetodetermine theposition ofthe out-of-sort entry. c.Fromthisposition, thetableisshifted oneentryandtheout-of-sort entryis inserted atitsproper position. d.Ifthelastpairofentries havenotbeenanalyzed, theprocess returns tostep(a). Otherwise thesortiscomplete. 2.FILES_RT. OneGIN_buffer isallocated attheendofBLBCKandascratch fileis opened towrite. Asmanyentries ascanbeheldintheremaining coreinBL_CKarereadand sorted usingthealgorithm above. Thesorted dataiswritten asalogical recordonthescratch file. Thisprocess isrepeated untilalldataintheinputrecord hasbeenreadandthesorted 3.4-47\nSUBROUTINE DESCRIPTIONS strings written onthescratch file. Ifonlyonesuchsortwasrequired, thesortiscomplete except forcopying ontoOUTFL ifrequested. Otherwise, anoptimum distribution ofsorted recores ontwoscratch filesiscomputed usingaFibonacci sequence. Thesorted strings areredistributed between twoscratch filesandthemergephaseisentered. Thetwoscratch filesarereadone entryatatime,merged, andnewsorted entries written onathirdscratch file. Notethat,usina theFibonacci sequence, oneofthefilescontaining sorted strings willhaveagreater number of strings (records) thantheother. Oneachpassinthemergenhase, themeraeoccurs untilthe filewithfewerstrings isexhausted. Atthispoint, themerged filebecomes thefilewiththe larger number ofsorted strings, theprevious larger filebecomes thefilewiththefewerstrinns, andtheprevious filewithfewerstrings (which wasexhausted) becomes thefileontowhich the merged strings arewritten. Theprocess continues untilthesortiscomplete. Theresulting sorted record iscopied onto_UTFL ifrequested. 3.4.31.5 Design Requirements Thenumber ofwords perentrymaynotexceed 20.(Achange inthedimension ofthelocal variable TEMPmaybemadetorelaxthisrestriction.) Theamount ofcoreavailable atBL_CKmustbeatleastoneGIN_buffer Dlus2NWDS during thecoresortphaseandthreeGIN_buffers plus2NWDS durin_ themerge nhase. Thecoretableorlogical record tobesorted mustcontain anintegral number ofentries. 3.4.31.6 Diagnostic Messages Thefollowing messages maybeissued byS_RT: 3001 3002 3008 3.4-48\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.32 MMATD (General Matrix Multiply andTranspose -Double Precision). 3.4.32.1 Entry Point: GMMATD. 3.4.32.2 Purpose Toperform anyoneofthefollowing matrix operations: [A][B]:[C] (1) [A]T[B]=[C] (2) [A][B]T=[C] (3) [A]T[B]T=[C] (4) [A][B]+[D]:[C] (5) [A]T[B]+[D]=[C] (6) [A][B]T+[D]=[C] (7) [A]T[B]T+ [D]=[C] (8) where [A],[B],[C],and [D]arerealdouble precision matrices Tk…..*\" •,,,,,uu_,neIsusedfor small in-core matrices, innon-NASTRAN packed format, insuchnmdules asSMAI, SMA2, SMA3and DSMGI. 3.4.32.3 Calling Sequence CALLGMMATD(A,IR_WA,IC_LA,MTA,B,IR_WB,IC_LB,MTB,C) A-Arealdouble precision matrix ofIR_WA rowsandIC_LA columns stored inthe singly dimensioned double precision variable A. N.B. Amust bestored byrows. Forexample, if 1.0 4.0 [A]:2.0 5.0, .0 6. then thematrix mustbestored intheF_RTRAN double precision array Aasfollows: A(1) =l.O A(2) =4.0 A(3) =2.0 A(4) =5.0 A(5) =3.0 3.4-49"},"title":"Programmer's Manual P22"},"/docs/programmers/programmers_manual_023/":{"data":{"":"SUBROUTINE DESCRIPTIONS A(6)=6.0 (Aisinputonly). IROWA-number orrowsof[A]-input. IC_LA-number ofcolumns of[A]-input. MTA-Flagusedtodetermine if[A]istobetransposed andtodetermine iftheoutput matrix, [C],istobezeroed out;thatis,todetermine ifamatrix product only,oftheform [A][B]=[C],willbeperformed orifaproduct and(ineffect) asum,oftheform [A][B]+[D]=[C],willbeperformed. I.IfMTA=O,then[A]isnottransposed andhenceeither Equation (I)or(3)will beperformed, depending uponMTB. IfMTA=+Ithen[A]istransposed andhenceeither Equation (2)or(4)willbe performed, depending uponMTB. MTAisinputonly. 2.IfMTAislessthanzero,[C]isnotzeroed out.Hencetheroutine, inthis case,computes [a][B]+[D]=[C]ifMTA=-2andMTB=O. [a][B]T+[D]=[C]ifMTA=-2andMTB:I. [A]T[E]+[D]=[C]ifMTA=-IandMTB=Oo [a]T[L]T+[D]=[C]ifMTA:-IandMTB=I. (seeMTBdefinition below) whereDisarealdouble precision matrix ofIR_WArowsandIC_LBcolumns if MTA=-2andDisIC_LAxIC_LBifMTA=-!.Dmustbestored row-wise atthe location ofCbythecalling program. B-realdouble precision matrix, stored row-wise. IR_WB-thenumber orrowsof[B]-input. IC_LB-thenumber ofcolumns of[B]-input. MIB-Transpose flagfor[B].IfMTB=O,[B]isnottransposed. transposed.Seecomments forAabove -input. IfMTB=I,[B]is NotethatMTAandMTBareindependent andthatonlyMTAcontrols whether ornot 3.4-50 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS [C]willbezeroed out. MTBisinput only. C-realdouble precision matrix. Input (ifMTA\u003cO)andoutput. Examples ontheuseoftheroutine: I. If[A]is3x3and[B]is3xland[C]=[A][B]isdesired then: CALLGI_TD(A,3,3,0,B,3,1,O,C). [C]is3xl. 2. If[A]isnxland[B]isnxlandthedotproduct isdesired ([A]T[B])then: CALLG_4ATD(A,N,I,I,B,N,I,O,C). [C]isIxl,ascalar. 3.Compute [C]=([X][y])T where [X]is5x4and[Y]is4x7: CALLGMMATD(Y,4,7,I,X,5,4,I,C). Cis7x5. 4.Compute D:[A][B]T+[C]where [A],[B]and[C]are3x3: DOiOI=l,9 inniT)=r(_) CALLG_TD(A,3,3,-2,B,3,3,I,D). 3.4.32.4 Method Thefirst phase ofthesubroutine setsupinteger looplimits which arefunctions ofthetwo transpose flags. IfMTAisnotlessthanzero, theCarray iszeroed out. Then theclassical mathematical definitions oftheabove matrix products arecarried out. 3.4.32.5 Design Requirements Theorders ofthe[A]andthe[B]matrices incombination withthetranspose flags mustdefine aconformable matrix product. 3.4.32.6 Diagnostic Messages Thesubroutine examines thetranpose flags incombination withtheorders ofthematrices to make surethat aconformable matrix productisdefined bythis input data. This testclearly is made forpurposes ofcalling routine checkout only. Notests aremade, norcantheybemade, to insure thatthecalling routine hasprovided sufficient storage forarrays. Ifaconformable matrix product isnotdefined bytheinput arguments, fatal error message 2021isprinted. 3.4-51 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.33 3.4.33.1 3.4.33.2 Purpose Toperform any where [A],[B],[D] in-core matrices in routine PREMAT.GMMATS (General Matrix Multiply andTranspose -Sinqle Precision). EntryPoint: GMMATS. oneofthefollowing matrix operations: [a][B]:[C] (I) [A]T[B]=[C] (2) [a][B]T:[C] ($) [A]T[B]T=[C] (4) [A][B]+[D]:[C] (5) [a]T[B]+[D]=[C] (6) [A][B]T+[O]=[C] (7) [a]T[B]T+[D]=[C] (8) and[C]arerealsingle precision matrices. Thisroutine isusedforsmall non-NASTP_AN packed format insuchmodules asSDR2andPLA3andintheutility 3.4.33.3 Calling Sequence CALLGMMATS(A,IR@WA,IC_LA,MTA,B,IR@WB,ICOLB,MTB,C) Thisroutine isexactly thesameassubroutine GMMATD except thatGMMATD operates onreal double precision matrices, whileGMMATS operates onrealsingle precision matrices. Seesub- routine description forGI,_ATD (seesection 3.4.32) fordetails onsubroutine arguments, method, design requirements anddiagnostic messages. 3.4-52\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.34 3.4.34.1 EntryPoint: 3.4.34.2 PurposeINVERD (Double Precision InCore Inverse Routine). INVERD. Tocompute theinverse ofareal double precision matrix [A]andonoption tosolve the matrix equation [A][X]=[B]. This routine isused toinvert small in-core double precision matrices innon-NASTRAN packed format andisused asautility routine insuch mndules asSMAI, SMA3andDS_IGI. 3.4.34.3 Calling Sequence CALLINVERD (NDIM,A,N,B,M,DETERM,ISING,INDEX) NDIM -Theactual rowdimension ofthedoubly subscripted arrays AandBinthe calling program -integer -input. A -Thesquare matrix tobeinverted. [A]-Iuponreturn fromINVERD isstored at A.Double precision -inputandoutput N -Theorderofthematrix beinginverted (thesizeoftheupperlefthandcorner actually beinginverted). N(NDIM-integer -input. B -Thecolumn(s) ofconstants intheaboveequation. If[A]istobeinverted, then Bisadummy argument. Thesolution matrix [X]isreturned atB.Double precision -input andoutput. -Thenumber ofcolumns ofconstants. IfM_O,[A]-liscomputed -integer - M input. DETERM -Thedeterminant of[A]. ISING -Singularity indicator. INDEXDouble precision -output. If[A]isnon-singular, ISlNGissettoI;if[A]is singular, ISINGissetto2-integer -output. Doubly subscripted arrayofrowdimension Nandcolumn dimension 3usedforthe rowandcolumn interchanges -integer -internal working storage. 3.4.34.4 Method Theclassical Gauss-Jordan method with full rowandcolumn interchanges isused. arithmetic operations aredouble precision.All 3.4-53\nSUBROUTINE DESCRIPTIONS 3.4.35 3.4.35.1 3.4.35.2INVERS (Single Precision InCore Inverse Routine). Entry Point: INVERS. Purpose Tocompute theinverse ofarealsingle precision matrix [A]andonoption tosolvethe matrix equation [A][X]=[B].Thisroutine isusedtoinvert smallin-core single precision matrices innon-NASTRAN packed format andisusedasautility routine insuchmodules asSDR2. 3.4.35.3 Calling Sequence CALLINVERS (NDIM,A,N,B,M,DETERM, ISlNG,INDEX) Thisroutine isexactly thesameassubroutine INVERD except thatINVERD operates onreal double precision matrices, while INVERS operates onrealsingle precision matrices. Allarith- meticoperations aresingle precision. DETERM isrealsingle precision. Seesubroutine descrip- tionforINVERD (seesection 3.4.34) fordetails onsubroutine arguments andmethod. 3.4-54\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.36 3.4.36.1 3.4.36.2PREt4AT (14aterial Property Utility). Entry Points: PRE_,IAT, I_AT. Purpose Toprovide autility routine forobtaininn material properties usedbystructural element subroutines. Thefirst entry point, PRESET, iscalled oncebyamodule forinitialization purposes, andthen14ATcanbecalled bytkemodule’s element subroutines repeatedly tofetch required material properties. 3.4.36.3 Calling Sequence CALLPREMAT (Z,ZZ,BFR,NIMAT,N_AT,MPTF,DITF) Z -Integer array ofopencoregiven tothesubroutine tostore thematerial proper- tiesandthedirect input tables -input andoutput. ZZ Sa_address asZ.Usedasrealinthisroutine -input andoutput. BFR -AGINObuffer (plus oneceil) usedbysubroutine PRELOC asabuffer -input only. NIMAT -Thelength ofopencore, theZarray, given toPREMAT andMAT-integer - input only. N2MAT -Thelength ofopencoreusedbyPREMAT andMAT-integer -output only. MPTF -GINBfile number oftheMaterial Properties Table (ilPT) datablock -input only. DITF -GINOfilenumber oftheDirect Input Tables data block. IfDITFisnegative, theroutine assumes thatthecalling module isaPiecewise Linear Analysis module which implies material properties cannot betemperature dependent and thatMATSI cards aretoberead. PREMAT usesthelOthwordof/SYSTEM/which isthetemperature setidentification number for material properties chosen bytheuser inhisCaseControl Deck. PREMAT alsouses/NA_ES/for various GIN_options. 3.4-55\nSUBROUTINE DESCRIPTIONS CALL MAT(ELE;41D) ELZMID -Integer element identification number; usedonlyfordiagnostic messages (seebelow) -inputandoutput. C@HMON/HATIN/_TID,INFLAG,TEMP,PLAARG,SINTH,C_STH MATID -Material property identification number -integer -input. INFLAG -Integer inputflagwhichdetermines which setsofinputdatacards, MAT1,MAT2, orMAT3,theroutine willsearch inordertofindrIATID. AlsoINFLAG deter- minesinwhatformat theoutput illbeplaced intheMAT_UT common block. Currently INFLAG mayassume thevalues 1through 7defined asfollows: INFLAG =1–Thematerial properties corresnonding totheMATIDareoutnut in “MAT1” orisotropic material format (see/F!AT_UT/ below). Onedimensional elements suchasR@D,BAR,SHEARetc.require isotropic materials. Ifthe MATIDisnotfoundamongalltheMAT1material cardsreadbyPREMAT, afatal erroroccurs. INFLAG =2–IfINFLAG =2,thematerial properties corresponding tothe MATID areoutput in\"MAT2\" oranisotropic material format. Two-dimensional elements suchasTRMEM, TRIAl, QDPLT, QUADIetc.mayuseisotropic or anisotropic materials. First, theroutine willtrytofindtheMATIDamong theMAT1cards. Ifitisfoundamong theMAT1cards, thevariables E(modulus ofelasticity), v(Poisson’s ratio) andG(shear modulus) areusedtoconstruct the3x3symmetric matrix [Gelneeded bytwo-dimensional elements, andthe matrix isstored in/MATOUT/: [GelT vE 0 1-v2 _E E l-v21-v20 0 0 G 3.4-56\nUTILITY SUBROUTINE DESCRIPTIONS IftheMATIDisnotfoundamongtheMAT1cards, the_AT2cardsaresearched. IftheMATIDisnotfoundamongtheMAT2cardsafatalerroroccurs. Ifitis found, [Gm],the3x3symmetric matrix inputontheMAT2card,istransformed bythematrix equation [Ge]=[u]T[Gm ][U]and{_}:[V]{_m},where{m}is thetemperature expansion coefficient vector innutonaMAT2card.[U]and[V] arefunctions ofsin8andcose(seeSINTHandC_STHbelow). [u] OSO sin2o cosOsin07J in2O cos2O -cosesine 2cososino 2cosOsinO (cos2O-sin2O Iv]cos2e sin2e -cosesine sin2e cos2e cosesine 2cosOsine -2cosesine (cos20-sin2e) INFLAG=3–IfINFLAG=3,itimplies theinverse ofthesymmetric 2x2 transverse shearmatrix Jwillbestored inlocations 16,17and18of /MATeUT/. Therearetwocases: (I)thecurrent MATIDisnotequaltothe mostrecent MATID,MATIDe, and(2)thecurrent MATIDisequaltothemost recent MATID. I.Ifthecurrent MATIDisnotequaltothemostrecentmaterial identi#i • cation number (MATIDe), theMAT1cardsaresearched. IftheMATIDis foundamongtheMAT1cards,thenlocations 16,17and18of/MATOUT/ are settoG,0.0andGrespectively, whereGistheshearmodulus. Ifthe MATIDisnotfoundamongtheMAT1cards, theMAT2cardsaresearched. IftheMATIDisnotfoundamongtheMAT2cards, afatalerroroccurs. If itisfoundamongtheMAT2cards, locations 16,17and18aresettozero. 2.Thecurrent MATIDisequaltothemostrecent MATID. IfINFLG, the mostrecent INFLAG isnot2,thisisthesameascase(I).Ifitis2, then(a)iftheMATIDwasfoundonaMAT1card,locations 16,17and18 3.4-57 (3/I/71)\nSUBROUTINE DESCRIPTIONS aresettoG,0.0andGrespectively; or(b)iftheMATIDwasfoundona MAT2card,locations 16,17and18aresetto0.0. INFLAG =4–IfINFLAG is4,thisimplies thatonlythedensity ofthe material, RH_,willbereturned in/MAT_UT/ andthisinthefirstlocation. TheMATIDcanbeeither onaMAT1orMAT2card. IftheMATIDcannot be_ound amongallMAT1andMAT2cards, afatalerroroccurs. INFLAG =5–INFLAG =5isreserved foruseonlybymodule PLAI. Thisoption determines iftheMATIDissuchthatE,themodulus ofelasticity, isdefined asstress dependent byMATSlandTABLESl cards. Ifitisstress dependent, INDSTR, equivalenced tothefirstwordof/MAT_UT/, issetto+I.Ifnotstress dependent, INDSTR issettoO.OnlyMAT1cardsareadmissible forINFLAG =5. INFLAG =6–INFLAG =6isreserved forusebymodules PLA3andPLA4. The fourth wordof/MATIN/, PLAARG (seebelow), isstrain andisusedastheinde- pendent variable inatablelook-up forstress, which isstored inthefirst wordof/MAT_UT/. OnlyMAT1cardsaresearched tomatch theinputMATID. INFLAG =7–INFLAG 7implies thatthematerial properties corresponding to theMATIDwillbeoutput inMAT3ororthotropic material format. Currently onlytheaxisymmetric elements TRIARG, TRAPRG andTORDRG usethisoption. If ther_TIDisfoundintheMAT1set,thedataarestored inMAT3format. Ifnot foundintheMAT1set,theMAT3setissearched. Ifnotfoundhere,afatal errorexists. INFLAG =8–INFLAG =8isusedonlybytwo-dimensional element subroutines inmodules PLA3andPLA4. Thefourth wordof/MATIN/, PLAARG (seebelow), is stress ()andisusedastheordinate inaninverse interpolation tablelook- uptoobtain theabscissa which isstrain (). Ifeither: a)theordinate isintherangeofthepiecewise linear function defined bythetableonaTABLES1 bulkdatacard, orb)theordinate is greater thanthemaximum (which isalsothelast)ordinate inthetablebut theslopeofthelinesegment joining thelasttwopoints ofthetableis nonzero, thenthesecond wordof/MAT_UT/ issettozeroandtheabscissa, 3.4-58 (311171)\nUTILITY SUBROUTINE DESCRIPTIONS obtained byinverse linear interpolation orextrapolation, isstored inthe first word of/MAT_UT/.Ifeither: a)theordinate islessthantheminimum (which isalsothefirst) ordinate i_thetable, orb)theordinate is greater thanthemaximum ordinate inthetable andtheslope oftheline segment joining thelasttwopoints ofthetable iszero, thentheinteger “l\"isstored inthesecond wordof/MAT_UT/(andthefirst word of/MAT_UT/ issettozero). OnlyMATI cards aresearched tomatch theinput MATID. TEMP -Average element temperature. Usedastheindependent variable inatable look- upwhen itisdetermined thatamaterial property istemperature dependent. Notusedwhen INFLAG =5or6. PLAARG -Element strain. Usedastheindependent variable inatable look-up whenE, themodulus ofelasticity, isdefined asthefirst derivative ofastrain-stress curve. Used onlyinthePiecewise Linear Analysis Rigid Format andonlyby modules PLA3andPLA4. SINTH -Sineofthematerial property orientation angle. Used onlywhen INFLAG =2 andtheMATID isfound among theMAT2cards. Usedtoconstruct the[U]matrix referenced above. C_STH -Cosine ofthematerial property orientation angle. Thecomments onSINTH, above, alsoapply here. C_MM_N/MAT_UT/ -(Output Common Block). Length 20words. Depending upon thevalues ofINFLAG, theoutput common block isdefined variously asfollows: 3.4-59 (311171)\nSUBROUTINE DESCRIPTIONS I.FIAT1Fomlat (INFLAG :I) 21Word l E 2 G 3 4 p 5 6 TO 7 ge 8 at 9 oc I0 as ll-20 _T2Format (INFLAG =2) Word Symbol l Gil 2 Gl2 3 Gl3 4 G22 5 G231 6 G33 7 RH_Y 8 ALPHI 9 ALPH2 lO ALPHI2 II TOY 12 GEY 13 SIGTY 14 SIGCY 15 SIGSY 16-20Definition Young’s modulus (modulus ofelasticity) Shear Modulus Poisson’s ratio Density Thermal expansion coefficient Thermal expansion reference temperature Structural element damping coefficient Stress limit fortension Stress limit forcompression Stress limit forshear Undefined Definition The3x3symmetric material property matYix Density Thermal expansion coefficient vector Thermal expansion reference temperature Structural element damping coefficient Stress limit fortension Stress limit forcompression Stress limit forshear Undefined 3.4-60 (3/I/71)\nUTILITYSUBROUTINE DESCRIPTIONS 3.Transverse Shear Inverse Matrix (INFLAG =3) Word 1-15 16 17 18 19-20S__ Definition Jll Jl2 J22 4.RH@Only Format (INFLAG =4) Word S_jnnbol 1 RHO 2-20 5.PLAIUseOnl_ (INFLAG =5) 6tWord Symbol 1INDSTR 2-20 Stress Functional Value (INFLAG =6) Word Sy_ol l PLAANS 2-20Unchanged The2x2symmetric inverse ofthe transverse shear matrix Undefined Definition Density Undefined Definition Stress dependent flag Undefined Definition Value ofstress (_)asafunction of (strain) Undefined 3.4-61 (3/I/71)\nSUBROUTINE DESCRIPTIONS 7.MAT3Format(INFLAG =7) Word Symbol 1 EX3 2 EY3 3 EZ3 4 NUXY3 5 NUYZ3i 6 NUZX3 7 RH_3 8 GXY3 9 GYZ3 I0 GZX3 II AX3 12 AY3 13 AZ3 14 TREF3 15 GE3 16-20 8,Definition Young’s Moduli x,yandz directions Poisson’s ratios. Coupled strain ratios inthexy,yz,andzx directions Density Shear moduli Thermal expansion coefficients Thermal expansion reference temperature Structural element damping coefficient Undefined Strain Functional Value (INFLAG :8) Word Symbol 1 PLANS 2 ICELL2Definition Value ofstrain (_)asaninverse function ofstress (0) I_0iftheinput stress isintherange ofthefunction liftheinput stress isoutside therange ofthefunction 3-20 Undefined 3.4.36.4 Method I.PREMAT: AlltheNLATI, _T2andMAT3cards arereadfrom theMPTdata block intoopen coresothateachcardisassigned l+3*Nwords ofcorewhere N,afunction ofthecardtype, is thenumber ofmaterial property data items onthatcard type. Thefirst word isthematerial iden- 3.4-62 (311171)\nUTILITYSUBROUTINE DESCRIPTIONS tification numberandeachmaterialpropertyisallocated3words:thefirsttheinputmaterial property;thesecondatable(function) numberwhichgivesthismaterialpropertyasafunctionof temperature; thethirdatablenu_erwhichgivesthismaterialpropertyasafunctionofstress. Initiallywords2and3aresettozero.AlthoughthethirdwordiscurrentlyusedonlyforMATI cardsandforE,themodulusofelasticity, onthatcard,futuredevelopment maymakeuseofa moregeneralapplication ofstressdependentmaterialproperties. Iftherearenotemperature dependentmaterialproperties foranon-Piecewise LinearAnalysisproblem,PREMATiswrappedup andaRETURNtothecallingroutineisexecuted. Foranon-Piecewise LinearAnalysisproblemforwhichatemperature setformaterialproper- tieswasselectedintheuser’sCaseControlDeck,allMAI-FI,MATT2andMATT3cardsarereadinto opencorefromtheMPTdatablock.ForaPiecewiseLinearAnalysisproblemMATSIcardsareread intoopencorefromtheHPT.Asorted list, withduplicates discarded, ofthetable numbers refer- enced onthese cards isconstructed inopencore. Thistable nun_er listisconstructed sothat every referenced tablehaseleven locations allocated toit.These e]even ]ocations areusedasa dictionary forthetables. Thecontents are: thetable number (word l);thetable type1,2,3, or 4(word 2);pointers tothefirst andlastentries inthetable (words 3and4);parameters from theTABLE card (words 5through ll). TheDITdatablock isthenread. Foreachtable read, itis determined byscanning thetable number listwhether ornotthetable isrequired forproblem solution. Ifitisrequired, thetable isreadintoopencoreandthedictionary entry forthe table iscompleted. Forarequired table which isatype4(polynomial) table, thefunctional values ofthepolynomial attheendpoints oftheinterval ofthereal lineoverwhich the polynomial isdefinedarecalculated byan\"internal subroutine” andstored inthetable dictionary. Ifthetable isnotrequired, itisreaduntil anend-of-table indicator issensed. This process continues until alltables ofthesetTABLEMI, TABLEM2, TABLEM3 andTABLEM4 orof thesetTABLESI, areexhausted. Whenallreferenced tables havebeenread intocore, PREMAT is wrapped upandareturn isgenerated. 2.MAT: Thebasic logic oftheMATroutine isstraightforward. Eight types oftable look- ups, described above forINFLAG =l,2,3,4,5,6,7and8aresupported. Acomputed-go-to on INFLAG isexecuted andeach option iscarried outasdescribed above. “Internal subroutines” which areentered viaF_RTRAN ASSIGN andG_T@statements andreturn totheir correct “calling” locations viaASSIGNED G_T_‘sareusedliberally byMAT. Itshould benoted thateach timeMAT 3.4-63 (3/1/71)\nUTILITY SUBROUTINE DESCRIPTIONS iscalled, MATID, INFLAG andother applicable input items, aresaved. Onthenextcallifthe input isidentical with theinput oftheprevious call, nothing isstored in/MAT_UT/.Hence, thecalling routine should use/MAT_UT/asa\"read-only dataset\". 3.4.36.5 Design Requirements Subroutine GMMATS istheonly non-root segment subroutine usedbythisroutine. There areno other special requirements. 3.4.36.6 Diagnostic Messages Thefollowing messages canbeoutput viaPREMAT and/or MAT: 3008, 2017, 2018, 201g, 2041, 2042, 2103, 2112, 2113, 2114, 2115, 2116, and2117. 3.4-63a (3/1/71)\nSUBROUTINE DESCRIPTIONS 3.4.37 3.4.37.1 EntryPoints: PRETRD, TP_ANSD 3.4.37.2 PurposePRETRD (Utility forModules WhichUsetheCSTMDataBlock-Double Precision Version). Autility routine formodules which usetheCSTM(Coordinate System Transformation _atrices) datablock, TRANSD generates arealdouble precision 3x3direction cosine matrix whichmansa vector fromalocalcoordinate system tobasiccoordinates. PRETRD setsUDeventual callsto TP_ANSD. Foramodule touseTRANSD acalltoPRETRD ismadeonceandonlyonce. 3.4.37.3 Calling Sequence CALLPRETRD(CSTM,NCSTM) CSTM=arrayofcoordinate system transformation matrices (seedatablockdescrintion forCSTM,section 2.3)-mixed -input. NCSTM=length oftheCSTMarray. NCSTM=14*the number ofcoordinate systems inthe CSTMdatablock-integer -input. CALLTRANSD(ECPT,TA) ECPT=arrayoflength 4.Thefirstwordisaninteaer coordinate system identification number andthenext3wordsarethecomponents ofavector inbasiccoordinates - inputonly. TA =realdouble precision 3x3direction cosine matrix whichmapsavector _romthe localcoordinate system designated byECPT(1) tobasiccoordinates -output. 3.4.37.4 Method TheCSTMarrayissearched tofindacoordinate system transformation identification number thatmatches ECPT(1). Ifthecoordinate system isrectangular, the3x3matrix, callitT,which isinwords6through 14oftheCSTMblocks, isstored inTAandaRETURN isgenerated. Ifthe coordinate system isbasic, theidentity matrix isreturned. Ifthecoordinate system isspherical orcylindrical, the[T]matrix defines therectangular system fromwhich theangles aredefined. Inthesecasescalculate: X y=[T]T E-V z where Eistheinputvector stured atECPT(2) aridVisthetransl_tion offset vector inbasic\nUTILITY SUBROUTINE DESCRIPTIONS coordinates found intheCSTMblock inwords 3,4and5;and r=V_z+ y2 Ifthecoordinate system iscylindrical define: x/r -y/r !IITs1= L_/r x/ro Ifthecoordinate system isspherical define: Then [TA] 3.4.37.5=/x2+y2+Z2’ FXI% X__{Z yl_r [T] =Jy/;L y._zr x/rI Lz/-r_o.oJ =[T][T] iscomputed andthesubroutine returns tothecalling program. Design Requirements Theroutine isdesigned sothatamodule which usestheCSTMdata block canhaveautility routine tofetch acoordinate system transformation matrix. Typically, amodule driver will attempt toopenthefilewhich contains theCSDIdatablock. Ifthedatablock isnotPurged, themodule willreadtheentire datablock intoopencore, close thefileandcallPRETRD to transmit theaddress ofthearray andthelength ofthearray. Once thisinitialization call hasbeenmade, TRANSD maybecalled inthemodule asmanytimes asnecessary. Theroutine does notperform anyI/_operations. Theroutine assumes theformat oftheCSTMdatablock, asoutlined intheDataBlock Description fortheCST)I (section 2.3oftheProgrammer’s Manual) iscorrect, and nonumerical checks aremade. 3.4.37.6 Diagnostic messages Ifthecoordinate system identification number transmitted viaECPT(1) cannotbefound in theCSTM array userfatal message 2025occurs. Theusershould check coordinate system numbers onGRIDbulk datacards against those defined onC_RDIC, C_RDIR, etc., bulkdatacards toinsure thatthere arenoundefined coordinate systems. 3.4-65 (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.4.38 3.4.38.1 3.4.38.2PRETRS IUtility forModules Which UsetheCSTMDataBlock -Single Precision Version). Entry Points: PRETRS, TRANSS. Purpose Autility routine formodules which usetheCSTM (Coordinate System Transformation Matrices) data block, TRANSS generates arealsingle precision 3x3direction cosine matrix which mapsa vector fromalocal coordinate system tobasic coordinates. PRETRS setsupeventual calls to TP_ANSS. Foramodule touseTRANSS acalltoPRETRS ismade onceandonly once. 3.4.38.3 Calling Sequence CALLPRETRS(CSTM,NCSTM) CALLT_NSS(ECPT,TA) This routine isexactly thesameassubroutine PRETRD (seesection 3.4.37) andTRANSD except thatTRANSD, anentry point, returns arealdouble precision matrix TAandusesdouble precision arithmetic, while TRANSS returns arealsinqle precision matrix TAandusessinnle precision arithmetic. Seesubroutine description forPRETRD fordetails onsubroutine arguments, method, design requirements anddiagnostic messaoes. 3.4-66\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.39PRETAB (Table Look-Up). 3.4.39.1 Entry Points: PRETAB, TAB. 3.4.39.2 Purpose Toreadtables (functions) fromthedatablock DIT,Direct Input Tables, intocoreandto setuptable dictionaries which aresubsequently usedwhenthecalling routine requests a functional value fromatable viaacalltotheentry point TAB. Theroutine isdesigned so that PRETAB iscalled onceandonlyoncebyamodule andsothatTABmaybecalled many times as atable look-up routine. 3.4.39.3 Calling Sequence CALLPRETAB(DITF,Z,IZ,BUF,LCRGVN,LCUSED,TABN_L,LIST) DITF -GINBfile number oftheDirect Input Tables data block -integer -input. Z -Array ofcoregiven tothesubroutine asworking storage -real-input and output. !Z -Sameaddress asZ.Usedasinteger inthisroutine. BUF -AGINBbuffer (plus onecell) usedbysubroutine PREL_C -input. LCRGVN -Thelength ofZarray, given toPRETAB andTAB-integer -input. LCUSED -Thenumber ofcells ofcoreusedbyPRETAB -integer -output. TABN_L -Listoftable numbers thatthecalling routine will bereferencing viaTAB calls. TABN_L(1) =Nisthenumber oftables tobereferenced. TABN_L(2), …. TABN_L(N +l)contain thetable numbers. Note that0isanadmissible table number. Table 0defines afunction which isidentically zerofor allvalues oftheindependent variable -integer -input. LIST -Array ofcontrol words forsubroutine L_CATE andtable types. LIST(1) =M isthenumber oftriples which follow inthelist. Thefirst twowords of eachtriple arethesubroutine L_CATE control words fortheparticular table being referenced andthethird word isthetable type: l,2,3or4-integer - input. 3.4-67\nSUBROUTINE DESCRIPTIONS CALLTAB(TABID,X,Y) TABIL-Tablenumber-integer-input. X-AbscissafortablenumberTABIDatwhichthefunctional valueisdesired-real- input. Y-Functional value(ordinate) ofabscissaXfortablenumberTABID-real-output. 3.4.39.4 Method PRETAB:ForeachtableintheTABNOLlistanIIwordtabledictionary entryisdefinedin opencore.ThefirstwordineachentryisthetablenumberobtainedfromtheTABNOLlist.Then theDITdatablockisread.ForeachentryoftheDIT,itisdetermined whetherornotthistable numberisintheTABN_Llist.Ifitisnot,thenthetableisreadseriallyuntilanend-of-table indicatorissensed.IfitisatablecalledforintheTABN_Llist,theprogramsetswords2and 3ofthetabledictionary, thetabletype(1,2,3or4)andthepointertotheIstentryinthe tablerespectively. Thetableisthenreadintocore,andthe4thwordofthetabledictionary, thepointertothelastentryinthetable,isset.Words5throughIIofthedictionary, the tableparameters, areset.Ifthetabletypeis4,indicating apolynomial, thefunctional values ofthepolynomial attheendpointsoftheintervalofthereallineoverwhichthepolynomial is definedarecalculated. AfterthetablesforanentryintheLISTarrayhavebeenexhausted, a checkismadetodetermineifalltablesintheTABN_Llisthavebeenfound(aftereachtableis foundthetablenumberissetnegative). Ifalltableshavebeenfound,thetablenumbersin TABN_Laresettotheiroriginalpositivestatusandtheroutineiswrappedup.Ifalltables havenotbeenfound,thenextclassoftablecards,definedbythenexttripleintheLISTarray, arelocatedintheDITdatablockandtheprocessisrepeated. TAB:lhetabledictionary issearcheduntilamatchisfoundwiththeinputargumentTABID. Thetabletype(l,2,3or4)isdetermined, the(functional) argumentiscomputedaftera4-way branchontabletype,andatransferismadetoeitherthe\"internalsubroutire\" whichperforms linearinterpolation–if thetabletypeisl,2or3–orthe\"internalsubroutine\" whichperforms polynomial evaluation–if thetabletypeis4. 3.4-68"},"title":"Programmer's Manual P23"},"/docs/programmers/programmers_manual_024/":{"data":{"":"UTILITY SUBROUTINE DESCRIPTIONS 3.4.39.5 Design Requirements DITmust notbepurged. Enough opencoremustbemadeavailable toconstruct thetable dictionaries andtocontain allreferenced tables incore. Alltable numbers mustbeunique. Alltable numbers input viatheTABNBL array mustbefound intheDITdata block. Atable number referenced bytheTABID argument ofTABmusthavebeenreferenced previously intheTABN_L array. 3.4.39.6 Diagnostic Messages Thefollowing diagnostic messages mayappear: 3008 2088 2089 2090 3.4-69\n3.4.40 AXISIDrawanAxisonaPlot). 3.4.40.1 EntryPoint: AXIS. 3.4.40.2 PurposeSUBROUTINE DESCRIPTIONS Todrawanxoryaxisonaplotter. 3.4.40.3 Calling Sequence CALLAXIS(XI,YI,X2,Y2,PEN,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. where: XI,YL:starting pointoftheaxisline-real-input. X2,Y2=terminal pointoftheaxisline-real-input. PEN=pennumber orlinedensity tobeused(itsmeaning depends ontheplotter) -integer -input. -!toinitiate thelinemode._PT =+toterminate aseries ofplotoommands. -integer -input todrawanaxis. /PLTDAT/ M_DEL =plotter modelnumber -integer -input. PL_TER =plotter number (i)-integer -input. NPENS :largest number ofpensormaximum density forplotter i-integer -input. 3.4.40.4 Method Thissubroutine callsLINEorAXISi, depending onwhether theplotter hasavailable asingle command usedfordrawing anaxis. Atthiswriting, onlyplotter 3hasaspecial axiscommand. If_PT_O,allotherarguments areignored, andLINEorAXISi iscalled. Otherwise, alternate pennumber (PENX) iscalculated modulo NPENSandisusedasthepennumber passed to 3.4-70 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS LINEorAXISi, asfollows: PENX=PEN-NPENS *((PEN-I)/NPENS) 3.4.40.5 Design Requirements Generally, AXISorLINE should becalled with_PT=-lbefore axesaregenerated, even though itisnotnecessary tospecifically putallplotters inthelinemode (e.g., plotter 3).Once thisisdone, itneed notberepeated unless theplotter hasbeen putintosomeother mode (e.g., thetyping mode). Subroutines used: LINE, AXISi. 3.4-71 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.41AXlSi (Axis Routine forPlotter i). 3.4.41.I Entry Point: AXISi. 3.4.41.2 Purpose Tosetupaplot command todrawanxoryaxisonplotter i. 3.4.41.3 Calling Sequence CALLAXISi(XI,YI,X2,Y2,PEN,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: Xl,Yl =starting point oftheaxis line-real-input. X2,Y2 =terminal point oftheaxisline-real-input. PEN =pennumber orlinedensity tobeused (meaning depends onplotter)- integer - input. -itoinitiate thelinemode_PT =+,toterminate aseries ofplotcommands -integer -input. otodrawanaxis /PLTDAT/ XYMIN -minimum xandyvalues oftheregion permitted onplotter i-real-input. XYMAX =maximum xandyvalues oftheregion permitted onplotter i-real -input. ORIGIN =location ofthelower leftcorner oftheplotter relative toitstruephysical origin -real-input. 3.4.41.4 Method Taking intoaccount thetrueorigin oftheplotter, theplot command isgenerated. 3.4-72 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.41.5 DesignRequirements Subroutine used:WPLTi. 3.4-72a(12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.42SKPFRM (Skip aVariable Number ofFrames). 3.4.42.1 Entry Point: SKPFRM. 3.4.42.2 Purpose Tcskipavariable number offrames, ifappropriate totheplotter. 3.4.42.3 Calling Sequence CALLSKPFRM (BFRAMS) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: BFRAMS =number offrames tobeskipped -integer -input. /PLTDAT/ M_DEL =plotter model number -integer -input. PL_TER =plotter number -integer -input. REG =plotregion parameters -real-input. AXYMAX =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-input. EDGE =sizeoftheborders (x,y) inplotter units -real-input. CAMERA =currently active camera -integer -input. _RIGIN =location (x,y) ofthelower leftcorner oftheplotter relative toitstrue physical origin -real-input. 3.4.42.4 Method Forplotters 3and9,thespecified number offrames (BFRAMS) areskipped. Forplotters 4 to7,theremainder ofthecurrent plot isskipped, andanother halfplot isalsoskipped. For plotters l,2and4,nothing isdoneduetotheabsence ofanyautomatic method ofskipping blank paper. 3.4-73 (12-1-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.42.5 Design Requirements Subroutines used: LINE, WPLTi. 3.4-73a (12-I-69)\n3.4.43 3.4.43.1 3.4.43.2SUBROUTINE DESCRIPTIONS SELCAM IToInitiate aNewPlot). Entry Point: SELCAM. Purpose Toselect acamera and/or togenerate asetup record foranewplot. 3.4.43.3 Calling Sequence CALLSELCAM (CAMERA,PLTNUM,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: CAMERA =camera number tobeselected (ifappropriate) -integer -input. PLTNUM =plotnumber -integer -input. OPT_0=ifthecamera istobeselected when appropriate, andnothing istobedone when notappropriate -integer -input. /PLTDAT/ M_DEL PL_TER XYMAX EDGE CAMNUM _RIGIN 3.4.43.4 Method=plotter model number -integer -input. =plotter number -integer -input. =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real -input. =sizeoftheborders (x,y) inplotter units -real-input. =lastselected camera -integer -output. =location (x,y) ofthelower leftcorner oftheplotter relative toitstrue physical origin -real-input andoutput. If_PT#0andacamera isnotappropriate totheplotter, nothing isdonebythissubroutine. 3.4-74 (12-I-69)\nSUBROUTINE DESCRIPTIONS Otherwise, whatisdoneisdependentupontheplotterhardwarerequirements. Forplottersl,2and8,theplotterisstoppedwiththeplotnumberdisplayedintheconsole lights.Forplotters2and9thespecifiedcameraisselected. Andforplotters4to7,ablock addressrecordwithth_plotnumberisgenerated. 3.4.43.5 DesignRequirements Subroutines used:WPLTi,LINE. 3.4-74a(12-I-69)\n3.4.44UTILITY SUBROUTINE DESCRIPTIONS IDPL_T (Generate an\"ID\"Plot). 3.4.44.1 EntryPoint: IDPL_T. 3.4.44.2 Purpose Toidentify theownerofalltheplotsbyprinting theinformation contained onthePL_TID cardintheuser’s CaseControl Deckpriortogenerating thefirstplot. 3.4.44.3 Calling Sequence CALLIDPL_T (IDX) C_MM_N/OUTPUT/SKIP(32,6),ID(32) C_MMON/PLTDAT/ -seePLTDATMiscellaneous Tabledescription, section 2.5. where: IDX:i0ifaplotidwasnotgenerated (1ifaplotidwasgenerated /_UTPUT/-integer -output. ID=usersupplied PL_TID, intheCaseControl Deck -BCD-input. /PLTDAT/ XYMIN XYMAX AXYMAX EDGE=Iplot region parameters -real-input. =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real -input. =sizeoftheborders (x,y) inplotter units -real-input. number ofcounts perprinted character inthexandydirections respectively real-input.CNTX,CNTY= PLTYPE :plotter type-integer -input. 3.4-75 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.44.4 Method IfthereisnoPL_TID(ID=blanks),IDXissettozeroandnoidentification isgenerated. Otherwise, IDXissettooneandanidentification isgenerated. Thecurrent region parameters aresaved (they will berestored attheendofthesubroutine)andaresettoinclude theentire paper area. Theidentification generated varies, depending upontheplotter type. Iftheplotterisamicrofilm plotter (IPLTYPEI =l),anentire frame isgenerated asidenti- fication. Thetopandbotto_ oftheframe areaseriesofclosely spaced horizontal lines. The PLgTID isthenprinted three times inthecenter oftheframe. Iftheplotterisadrumortable plotter(IPLTYPEI fl),theidentification isprinted once attheverybottom ofthepaperwithin thebottom border. After theidentification isgenerated, thePLgTID issettoblanks. This insures thatthe identification will begenerated prior tothefirst plotonly. 3.4.44.5DesignRequirements Subroutines used: AXIS, PRINT. 3.4-75a (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.45 3.4.45.1 3.4.45.2INTGPX ISearch aListof19te_ers ). Entry Points: INTGPX, INTGPT. Purpose GivenalistofNintegers, tofindtheindexofthelistitemequaltoITEM(primarily used tosearch alistofexternal gridpointid’s). 3.4.45.3 Calling Sequence CALLINTGPX(LIST,N) K=INTGPT (ITEM) where: LIST=listofNintegers, inarbitrary order-input. N:number ofentries inLIST-integer -input. ITEM:integer forwhichamatchistobefoundinLIST-input. 3.4.45.4 Method Search LISTusingalinearsearch untilamatchforITEMisfound. Thentheresult (INTGPT) issetequaltotheindexofLISTwherethematchoccurs. Ifnomatchisfound, theresult is set=O. 3.4.45.5 Design Requirements INTGPXmustbecalledbefore INTGPT isused.AslongasLISTdoesnotchange location and thevalueofNdoesnotchange, INTGPXneednotbecalledagain. 3.4-76 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.46INTLST (Interpret aListofIntegers). 3.4.46.1 Entry Point: INTLST. 3.4.46.2 Purpose Tointerpret alistofintegers and/or pairs ofintegers separated bythewordT_orTHRU. 3.4.46.3 Calling Sequence CALL INTLST(LIST,N,SIGN,NI,N2) where: LIST-thelisttobeinterpreted -integer -input. N-index location ofthenextlistitem(s) tobeinterpreted -integer -input. SIGN-sign(_l)oftheinterpreted integer orthefirst ofapairofintegers - output. Ni-absolute value uftheinterpreted integer orthefirst ofapairofintegers - output. N2 -absolute value ofthesecond irlteger ofpairofintegers (=Nlifnotapair) - output. 3.4.46.4 Method SIGN =+_lifLIST(N) ispositive ornegative. Nl=absolute value ofLIST(N). IfLIST(N+I) _T_orTHRU, thenN2=NlandNisincremented byI. IfLIST(N+I) =TOorTHRU, thenN2=absolute value ofLIST(N+2) andNisincremented by3. 3.4.46.5 Design Requirements Initially, Nmust besettotheindex ofthefirst integer orinteger pairtobeinterpreted inLIST. Ifthelistisconsecutive, Nneednotsubsequently bealtered until anewlististo beinterpreted. Itisadvisable thatthevalue following thelastiteminLISTbeset=0to avoid thechance thatitmayequal T_orTHRU. 3.4-77 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.47 LINE(DrawaLineonaPlotter). 3.4.47.1 EntryPoint: LINE. 3.4.47.2 Purpose Todrawalineonaplotter. 3.4.47.3 Calling Sequence CALLLINE(X1 ,YI,X2,Y2,PEN,_PT) C{MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. where: XI,YI=starting pointoftheline-real-input. X2,Y2=terminal pointoftheline-real-input. PEN:pennumber orlinedensity tobeused-integer -input. I!tOinitiate thelinemode\"_PT = toterminate aseries ofplotcommands, integer -input. todrawaline. /PLTDAT/ M_DEL =plotter model number -integer -input. PL_TER =plotter number (i)-integer -input. REG =xandyvalues defining theregion inwhich thelineistobedrawn -real- input. NPENS =maximum number ofpensorlinedensity possible forplotter i-integer -input. 3.4.47.4 Method Ifthelinetobedrawnisen%irely outside thespecified region, thesubroutine immediately returns without drawing anything. Ifonlypartofthelineisoutside theregion, onlythat portion ofthelinewithin theregionisdrawn. Theactual pennumberorlinedensity usedwill bemodulo themaximum number ofpensorlinedensity asfollows: PENX=2EN-NPENS* ((PEN-I)/NPENS) ThenLINEiiscalled. 3.4-78 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.47.5 DesignRequirements Generally, LINEshouldbecalledwith_PT=-lbeforeanylinesaredrawn,eventhoughitis notnecessarytospecifically putallplottersinthelinemode(e.g.,plotter3).Oncethisis done,itneednotberepeatedunlesstheplotterhasbeenputintosomeothermode(e.g.,the typingmode).If_PT_O,allotherargumentsareignored.Subroutine used:LINEi. 3.4-78a(12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.48LINEi (Draw aLineonPlotter i). 3.4.48.1 Entry Point: LINEi. 3.4.48.2 Purpose Todraw alineonplotter i. 3.4.48.3Calling Sequence CALLLINEi(XI,YI,X2,Y2,PEN,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description section2.5. where: XI,Yl =starting point oftheline-real-input. X2,Y2 =terminal point oftheline-real-input. PEN =pennumber orlinedensity tobeused-integer -input. (-Itoinitiate thelinemode.l _PT =I+ltoterminate aseries ofplotcommands. -integer -input. Cotodrawaline. /PLTDAT/ M_DEL =plotter model number -integer -input. PL_TER =plotter number -integer -input. MAXLEN =maximum length ofalinesegment -real-input. _RIGIN =xandyvalues ofthecurrent position ofthepen(applicable onlytoincre- mental plotters) -real-input andoutput. 3.4.48.4 14ethod If_FT_O,allother arguments areignored. If_PT=-landifapplicable forplotter i,a flag issetsothatwhenLINEi issubsequently called with_PT=O,theplotter will beputinto thelinemode before drawing therequested line. If_PT=+landifapplicable forplotter i,the penisraised. Then, nomatter which plotter isbeing usedthecurrent sequence ofplotter commands isterminated. If_PT=O,thelineisdrawn asaseries oflinesegments, each of maximum length MAXLEN. 3.4-79 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.48.6 DesignRequirements Subroutines used:WPLTi. 3.4-80 (12-I-69)\n3.4.49 3.4.49.1 3.4.49.2UTILITY SUBROUTINE DESCRIPTIONS PRINT (Print aTitle onaPlotter). Entry Point: PRINT. Purpose Totypeatitle onaplotter horizontally orvertically. 3.4.49.3 Calling Sequence CALLPRINT (X,Y,XYD,CHR,N,(PT) C_MM{N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: X,Y-starting orending point ofthetitle tobetyped (always left-to-right or top-to-bottom) -real-input. XYD+l ifX=starting orending point ofthetitle -integer -input. (+2ifYstarting orending point ofthetitle integer input. CHR-title tobetyped (four characters/word -leftadjusted followed byblanks) - BCD-input. N-number ofwords inthetitle -integer -input. I!tOinitiate thetyping mode\"(_PT-toterminate aseries ofplotcommands. -integer -input. totypeatitle. /PLTDATI CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input. 3.4.49.4 Method If_PT_O,allother arguments areignored andTIPE iscalled. Otherwise, eachcharacter inthetitle (CHR) isseparated andputintoanother array (C). This isdoneforeach 20words ofthetitle (80characters), andTIPE isthencalled totypethese characters. 3.4.49.5 Design Requirements Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be 3.4-81 (12-I-69)\nSUBROUTINE DESCRIPTIONS called with_PT=-Ibefore anytyping isattempted, eventhough itisnotnecessary tospecifi- callyputallplotters inthetyping mode(e.g., plotter 3).Oncethisisdone,itneednotbe repeated unless theplotter hasbeenputintosomeothermode(e.g., thelinemode). Subroutines used: TIPE. 3.4-82 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.50 3.4.50.I 3.4.50.2RDM_DX (Read aFileContaining XRCARD Translations). Entry Points: RDM_DX, RDM_DY, RDM_DE, RDW_RD. Purpose Tc_readfromafileorstorage arecord containing thesubroutine XRCARD interpretation of freefield datacards (e.g., thePCDBdatablock). 3.4.50.3 Calling Sequence CALL RD_DX(FILE,14_DE_W_RD) CALL RDr4_DY(A,M@DE,W_RD) CALL RDM_DE($nI,$n2,$n3) CALL RDW_RD where: FILE=G!N_file namewhich istoberead-integer -input. M_DE=storage location intowhich theXRCARD mode value istoberead-integer -output. W_RD =2locations intowhich XRCARD carditems aretoberead-integer -output. A =array which istcbe\"read\" (instead ofFILE) -integer -input. nl=theF_RTRAN statement number defining thereturn atwhich numeric dataare interpreted (M_DE \u003c0). n2=theF_RTRAN statement number defining thereturn atwhich alphabetic dataare interpreted (0\u003cM_DE \u003cl,O00,O00). n3=theF_RTRAN statement nu_er defining thereturn when theendofalogical card isencountered (M_DE \u003el,O00,O00). 3.4.50.4 Method RDMODX andRDM_DY areinitialization calls forthefileandcoreoriented options respectively. ForRDMQDE: I.AnXRCARD mode value isread intoM_DE. IfM_DE =O,theendofaphysical card hasbeenencountered, butnottheendofalogical card. Inthiscase, therecord ister- minated (ifFILE isbeing read). Thenthefirst wordofthenextrecord orlocation isread intoM_DE. 3.4-83 (l2-I-69)"},"title":"Programmer's Manual P24"},"/docs/programmers/programmers_manual_025/":{"data":{"":"SUBROUTINE DESCRIPTIONS 2.IfM_DE\u003cO,thenextwordisreadintoW_RD(1). IfM_DE=-4,another wordis readintoW_RD(2). 3.If0\u003cM_DE\u003c1,000,000, BCDinformation follows aspairsof4-character words. The firsttwoofthesewords arereadintoNEXT(1) andNEXT(2). IfNEXT(1) isablankorNEXT(2) isadelimiter, thevalueofM_DEisdecremented byone,andifMODEisstillgreater than zero,thenexttwowords arereadintoNEXT(1) andNEXT(2). Thiscontinues untileither M_DE:O,orNEXT(1) isnotablankandNEXT(2) isnotadelimiter. IfMODEdoesbecome zero,step1isthenre-executed. 4.IfM_DE\u003e1,000,000, theendofalogical cardhasbeenencountered. IfFILEis beingread,thecurrent record isterminated. ForRDW_RD: I.ThetwowordsnowinNEXT(1) andNEXT(2) arestored inW_RD(1) andW_RD(2). 2.M_DEisdecremented byone. IfMODEisstillgerater thanzero,thenexttwo wordsarereadintoNEXT(1) andNEXT(2). IfNEXT(1) isablank orNEXT(2) isadelimiter, thisstepisrepeated untileither M_DE=O,orNEXT(1) isnotablankandNEXT(2) isnota delimiter. 3.4.50.5 Design Requirements RDM_DX orRDM_DY mustbecalled before RDM_DE andRDW_RD. AslongasFILEdoesnotchange invalue, andM_DE,W_RD,andAdonotchange locations, RDM_DX andRDM_DY neednotbecalled again. IfRDM_DX iscalled, FILEmustbeopened andproperly positioned bythecalling program. Inaddition, RDM_DE andRDWORD cannot becalled whenFILEisclosed. Ifanend-of-file or-record condition isencountered, afatalerroroccurs (seesubroutine FREAD). 3.4-84 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.51 SGIN_ (GIN_ forUnformatted Tapes). 3.4.51.I Entry Points: S_PEN, SWRITE, SEOF, SCL_SE. 3.4.51.2 Purpose Towrite unformatted BCDandbinary tapes todrive NASTRAN plotters. 3.4.51.3 Calling Sequences CALLS_PEN($n,PLTTP,BUFFER,LBUFF) n –FORTRAN statement number defining thereturn ifPLl-[P isnotavailable forwriting. PLTTP -GIN_filenameoftheplottape. This mayhavetwovalues: PLTI-BCDplot tape; PLT2-binary plot tape-BCD-input. BUFFER -Array inwhich theplotdatatransmitted during SWRITE calls arestored. LBUFF -Length ofthebuffer array -integer -input. CALL SWRITE(PLTTP,DATA,LDATA,I_PT) PLTTP -GIN_filenameoftheplottape-BCD-input. DATA -Array ofplotdata (lcharacter/word, right justified, leading zeros). LDATA -Length oftheDATAarray inwords -integer -input. O,potentially moredata tobetransmitted inthisrecord. )I_PT - iinteger -input. l,endofrecord with thisdatatransmission. CALLSE_F(PLTTP) PLTTP -GIN_file nameoftheplottapeonwhich aphysical E_Fwillbewritten. CALL SCL_SE(PLTTP) PLTTP -GIN_filenameoftheplottape. 3.4.51.4 Method SGIN_ stores data inBUFFER until I_PT=lorBUFFER isfilled. Itthentransmits thedata toaphysical tapewithout anycontrol words. Thedataaretransmitted toSGIN_ lcharacter (right 3.4-85 (12-I-69)\nSUBROUTINE DESCRIPTIONS justified, leading zeros) perword. SGIN_packsthesecharacters intofullwords. SGIN_isin F_RTRAN onallmachines. OntheIBM7094itinterfaces withGIN_;theUnivac i108version uses NTRAN; theIBMS/360usesF_RTRAN I/9;andtheCDC6600useXI_RTNS. Seesection 5fordetails. 3.4.51.5 DesignRequirements OnlyoneofPLTIorPLT2maybeopenatonetime. SOPENmustbecalled beforeSWRITE, SE_F,orSCL_SE. PLTIorPLT2mustbephysical tapesiftheyarewritten on. 3.4-86 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.52STPL_T (ToInitiate aNewPlotorTerminate theCurrent Plot). 3.4.52.1 Entry Point: STPL_T. 3.4.52.2 Purpose Toinitiate anewplotorterminate thecurrent plot. 3.4.52.3 Calling Sequence CALLSTPL_T(PLTNUM) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. C_MM_N/XXPARM/ -seeXXPARM Miscellaneous Table description, section 2.5. where: jifnonnegative, theplotnumberPLTNUM ifnegative, terminate thecurrent plot /PLTDAT/ M_DEL = PL@TER = REG = XYMAX = PLTYPE = PLTAPE = E(_F : /XXPARM/ CAMERA = BFRAMS =I-integer -input. plotter model index -integer -input. plotter number -integer -input. plot region parameters -real-input. size ofthepaper (x,y) used, lesstheborders, inplotter units -real-input. plotter type-integer -input. plottape-BCD-input. 0ifanend-of-file mark istobewritten ontheplot tapeafter eachplot -integer -input. lifnoend-of-file mark istobewritten ontheplot tapeafter eachplot camera number (ifapplicable) tobeused-integer -input. number ofblank frames between plots -integer -input. 3.4-87 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.52.4 Method 3.4.52.5 Subroutines usedinclude:A.IfPLTNUMisnonnegative: I.Selectthespecifiedcameraorcreateasetuprecordappropriate totheplotter (CALLSELCAM). 2.Skiptoanewframe(ifapplicable) andcreatetheowneridentification. Ifthe owneridentification isgeneratedbysubroutine IDPL_T,re-execute steplandskiptoa newframe. 3.Ifappropriate tothisplotter,insertthedesirednumberofblankframesonfilm only.Ifthecameraspecifiediscamera2(paperonly),noblankframesareinserted. 4.Iftheplotnumberisnonzero,typethisnumberintheupperleftandrightcorners ofthepicture. B.IfPLTNUMisnegative: i.TenJ_inatethe………._^_reco_A _,_tape 2.Closethecurrentplottapefile(CALLSCL_SE). 3.Ifeachplotistobeseparatedbyanend-of-file mark(EOF=O),writeanend-of- fileontheplottape(CALLSE@F). DesignRequirements IDPL_T,SELCAM,SKPFRM,TYPINT,SCL_SE,SE@F. 3.4-87a(12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.53 SYMB@L (TypeaSymbol onaPlotter I. 3.4.53.1 EntryPoint: SYMBOL. 3.4.53.2 Purpose Totypeasymbol onaplotter. 3.4.53.3 Calling Sequence CALLSYMB_L(X,Y,SYM,OPT) C@MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. C_MM_N/SYMBLS/ -seeSYMBLS Miscellaneous Tabledescription, section 2.5. where: X,Y-pointatwhich thesymbol istobetyped-real-input. SYM-twoconsecutive storage locations eachcontaining anindexintotheSYMBLS table-integer -input. I-!t°initiate thetyping m°de\" 1OPT-+toterminate aseries ofplotcommands. -integer -input. totypethesymbol. /PLTDAT/ MODEL -plotter model number -integer -input. PLOTER -plotter number (i)-integer -input. /SYMBLS/ NSYM-number ofsymbols defined intheSYMBLS table-integer -input. SYMBL(20,i) -character indices defining thesymbols ofplotter i-integer -input. 3.4.53.4 Method IfOPT_O,allotherarguments areignored andTYPEi orDRWCHR iscalled. Otherwise, an alternate symbol index(SYMX) iscalculated modulo NSYMforeachindexinSYMandisusedasthe actual symbol index, asfollows: 3.4-88 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIOr!S SYMX :SYMj-NSYM*((SYMj_I)/NSYM) ,j:l,2. ThenTYPEi orDR_CHR iscalled foreachsymbol. Thereason forSYMbeing twoindices istoenable theusertocreate anyadditional symbol bycombining anytwoofthevalid symbols intheSYMBLS table. Note: anyoftheindices inSYM may=O.Thiswould imply thatanews_n_bol isnotbeing created. 3.4.53.5 Design Requirements Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMB@L) should be called with _PT#-lbefore anytyping isattempted, eventhough itisnotnecessary toputall plotters inthetyping mode (e.g., plotter 3).Once thisisdone, itneednotberepeated unless theplotter hasbeenputintosomeother mode (e.g., thelinemode). Subroutines used: TYPEi, DRWCHR. 3.4-89 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.54 3.4.54.1 3.4.54._TIPE (Type aLine ofCharacters onaPlotter). Entry Point: TIPE. Purpose Totype aline ofcharacters onaplotter horizontally orvertically. 3.4.54.3 Calling Sequences CALLTIPE(X,Y,XYD,CHR,N,(_PT) COMMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. COMMON/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5. where: X,Y-starting orending pointofthelinetobetyped(always left-to-right ortop-to- bottom) -real-input. I++__12if X=starting orending pointoftheline.1XYD- -integer- input. ifYstarting orending pointoftheline. CHR-lineofcharacters tobetyped (onecharacter/word -leftadjusted followed by blanks) -BCD-iF.put. N number ofcharacters tobetyped-integer -input. I!toinitiate typing mode. “IOPT-toterminate aseries ofplotcommands. -integer -input. totypealineofcharacters. /PLTDAT/ MODEL -plotter model number- integer -input. PLOTER -plotter number (i)-integer -input. CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input. /CHAR94/ CHAR -Section IoftheCHAR94 table-BCD-input. 3.4-90 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.54.4 Method If_PTIO,allother argunmnts areignored andTYPEi orDRWCHR iscalled. Otherwise, for eachcharacter tobetyped, anindex intotheCHARcharacter setisfound. This isdone80 characters atatim_. Ifacharacter cannot belocated, itistreated asablank. Foreachset of80character indices setup,TYPEi orDRWCHR iscalled. 3.4.54.5 Design Requirenmnts Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be called with_PT#-lbefore anytyping isattempted, eventhough itisnotnecessary toputall plotters inthetyping mode (e.g., plotter 3).Oncethis isdone, itneednotberepeated unless theplotter hasbeenputintosome other mode(e.g., thelinemode). Subroutines used: TYPEi, DRWCHR. 3.4-91 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.55 3.4.55.1 3.4.55.2TYPEi IType aLineofCharacters onPlotter i). Entry Point: TYPEi. Purpose Totypealineofcharacters onplotter ihoriziontally orvertically. 3.4.55.3 Calling Sequence CALLTYPEi (X,Y,XYD,CHR,N,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. C_MM_N/CHARg4/ -seeCHAR94 Miscellaneous Table description, section 2.5. where: X,Y=starting orending point ofthelinetobetyped (always right-to-left ortop-to bottom) -real-input. i+__12ifx:starting orending pointoftheline.1XYD= -integer -input. ifystarting orending pointoftheline. CHR=indices ofthelineofcharacters tobetyped(seedescription forTIPE:section 3.4.54) -integer- input. N=numberofcharacters tobetyped-integer -input. ltoinitiate thetyping mode. _PT:_1toterminate aseries ofplotconT_ands -integer -input. 0totypealineofcharacters. /PLTDAT/ X_MIN =minimum xandyvalues oftheregion inwhich thelineistobetyped -real input. XYMAX :maximum xandyvalues oftheregion inwhich thelineistobetyped -real- input. CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input. 3.4-92 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS /CHAR94/ CHRC_D =Section If,III,orIVoftheCHAR94 table -integer -input. 3.4.55.4 Method If_PT#O,allother arguments areignored. If_PT=-landifapplicable forplotter i,a FlagissetsothatwhenTYPEi issubsequently called with _PT=O,theplotter willbeputinto thetyping modebefore typing thefirst character. If_PT=+l,thecurrent sequence ofplotter commands isterminated. Define: LSTCHR =lastlegitmate character index forplotter i. NCHR =nu_er ofcharacter indices which must bechanged forplotter i. CHAR =NCHRpairs ofcharacter indices. Thefirst index ofeach pairistheindex which mustbechanged, andthesecond index isthereplacement index. IfN\u003cO,itisassumed thatonecharacter istobetyped. Each character index inCHRischecked against LSTCHR. ablank isinserted atthecorresponding point ontheplot. need befrom CHARandthecharacter istyped. Nocharacters will betyped outside theregion asdefined byXYMIN andXYMAX.Iftheindex isgreater thanLSTCHR, Otherwise, indices arealtered if 3.4.55.5 Design Requirements Subroutines used: WPLTi. 3.4-93 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.56TYPFLT (Type aFloating Point Number onaPlotter). 3.4.56.1 Entry Point: TYPFLT. 3.4.56.2 Purpose Totypeafloating point number onaplotter, horizontally orvertically. 3.4.56.3 Calling Sequence CALLTYPFLT (X,Y,XYD,V,FIELD,OPT) COMM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: X,Y XYD V FIELD _PT /PLTDAT/ MODEL-point atwhich thenumber istobetyped (always left-to-right ortop-to-bottom) -real-input. +lifX=starting orending point ofthetyped number. I_integer input. +_2ifYstarting orending point ofthetyped number. -number tobetyped -real-input. -field width ofthetyped number. IfFIELD \u003eO,thenumber will becentered at (X,Y). IfFIELD \u003cO,thenumber willbetyped starting orending at(X,Y). If IXYDI =lor2,thenumber will betyped horizontally or_ertically respectively- integer- input. I+!t°initiate thetyping m°cle’ 1-toterminate aseries ofplotcommands. -integer -input. totypethenumber. 3.4.56.4-plotter model number -integer -input. PLOTER -plotter number (i)-integer -input. CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input. Method IfOPT_O,allother arguments areignored andTYPEi orDRWCHR iscalled. Otherwise, the 3.4-94 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS number ofsignificant digits (NSIG) tobetyped isdetermined. IfV_0, thetyped nun_er willbeunsigned. IfFIELD \u003e4,thenumber ofsignificant digits typed willbeatleast =FIELD -4.IfFIELD _4,NSIG=FIELD -I. IfV\u003cO,thetyped nu_er willbesigned. IfFIELD \u003e5,thenun_Der ofsignificant digits typed will beatleast FIELD -5.IfFIELD _5,NSIG=FIELD -2. Thenumber (V)ismultiplied bysomepower oftensuch thattheproduct isbetween lO7and lO8.Itcanthenbeexpressed asan8-significant digit integer. Ifthenumber issuchthatNSIG digits cannot betyped without anexponent, astandard formisused: -X.XXXX …_XX. Otherwise thedecimal point isadjusted andtheexponent willnotbeprinted. 3.4.56.5 Design Requirements Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMBOL) should be called with _PT=-lbefore anytyping isattempted, even though itisnotnecessary toputallthe plotters inthetyping mode (e.g., plotter _I._Oncethisisdone, itneednotberepeated unless theplotter hasbeen putintosomeother mode (e.g., thelinemode). Subroutines used: TYPEi, DRWCHR. 3.4.56.6 Diagnostic Messages IfNSIG significant digits cannot possibly betyped inthefield width (FIELD) specified, theentire field will befilled withasterisks (**…*). 3.4-95 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.57 3.4.57.1 3.4.57.2TYPINT (Txpe anInteger Number onaPlotter_. Entry Point: TYPINT. Purpose Totypeaninteger number onaplotter, horizontally orvertically. 3.4.57.3 Calling Sequence CALLTYPINT (X,Y,XYD,NUM,FIELD,OPT) C@MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: X,Y XYD NUM FIELD PT-point atwhich thenumber istobetyped (always left-to-right ortop-to-bottom) -real-input. (+lifX=starting orending point ofthetyped number.) “i-2 i-integer -input. ifYstarting orending point ofthetyped number. -number tobetyped -integer -input. +lifthetyped number istobecentered at(X,Y). IfIXYDI =lor2,thenumber will betyped horizontally orvertically, respectively. -lorO,thenumber willbetyped starting orending at(X,Y). IfFIELD =-l, FIELD will besettothenumber ofdigits typed bythesubroutine; inthis case, FIELD must beasymbol inthecallstatement. -integer -input and output. {+!toinitiate thetyping mode. 1-toterminate aseries ofplotcommands. -integer -input. totypethenumber. /PLTDAT/ MQDEL -plotter model number -integer -input. PLQTER -plotter number (i)-integer -input. CNTCHR -number ofplotter counts percharacter inthexandydirections -real-input. 3.4-96 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.57.4 I_ethod If_PT_O,allotherarguments areignored andTYPEi orDRWCHR iscalled. Otherwise, each digit ofthenumber isseparated andusedascharacter indices fortheTYPEi orDRWCHR subroutines. Inaddition, ifFIELD \u003cO,FIELD isset=thenumber ofdigits printed. 3.4.57.5 Design Requirements Generally, oneofthetyping subroutines (PRINT, TIPE, TYPFLT, TYPINT, SYMB@L) should be called withOPT=-lbefore anytyping isattempted, eventhough itisnotnecessary to specifically putallplotters inthetyping mode (e.g., plotter 3).Oncethisisdone, itneed notberepeated unless theplotter hasbeen putintosomeother mode (e.g., thelinemode). Subroutines used: TYPEi, DRWCHR. 3.4-97 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.58 WPLTI (Write aPlotter Command forPlotter I). 3.4.58.1 Entry Point: WPLTI. 3.4.58.2 Purpose Towrite aplotter command forplotter I. 3.4.58.3 Calling Sequence CALLWPLTI (A,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. C_MMON/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5. where: A(1)-x-coordinate (integer). A(2)-y-coordinate (integer). A(3)-annotation character index(a). A(4)-control character index(ci). A(5)-control character index(c2). A(6)-control character index(c3). O,ifAisaplotcommand_PT- ( I,ifaseries ofplotcommands istobeterminated /PLTDAT/integer -input. EDGE-size ofthexandyborders ofthepaper-real-input. PL_T-GINOfilenameoftheplottapetobewritten -BCD-input. /CHAR94/ CHAR(60,3) -sections II,III,andIVoftheCHAR94 character table-integer -input. 3.4.58.4 Method Ifcomputer 1(IBM7094)isthecomputer beingused, section IIoftheCHAR94 tableisused asthecharacters written ontheplottape;ifcomputer 4(CDC6600) section IVisused; ifany 3.4-98 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS other computer, section IIIisused. Thelower leftcorner ofthepaper isassumed tobeat(0,0). Taking intoaccount thexand yborders, thetruexandycoordinates arecalculated. These coordinates arethenseparated into fourinteger digits. Theplotcommand isthensetupandwritten asfollows: rbx4x3x2XlbbY4Y3Y2YlbClC2bbc3babbbbb preceeded by35blanks. Theresulting plotcommand is60characters long. r=record mark (character 49intheCHAR94 table) b=blank (character 48intheCHAR94 table) xi=x-coordinate digit Yi=y-coordinate digit ci=control character a=annotation character. 3.4.58.5 Design Requirements Subroutine used: SWRITE. 3.4-99 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.59 WPLT2 (Write aPlotter Command forPlotters 2and8) 3.4.59.1 Entry Point: WPLT2. 3.4.59.2 Purpose Towrite aplot command forplotters 2and8. 3.4.59.3 Calling Sequence CALLWPLT2 (A,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. C_MM_N/CHAR94/ -seeCHAR94 Miscellaneous Tabledescription, section 2.5. where: A(1)=x-coordinate (integer). A(2)=y-coordinate (integer). A(3)=annotation character index (a). A(4)=control character index(ci). A(5)=control character index(c2). A(6)=control character index (c3). 0,ifA=plotcommand 1_PT= -integer -input. I,ifaseries ofplotcommands istobeterminated /PLTDAT/ AXYMAX -sizeofthepaper (inplotter units) beingused, lesstheborder -real-input. PL_T -GINOfilenameoftheplottapetobewritten -BCD-input. /CHAR94/ CHAR(60,3) -sections II,IIIandIVoftheCHAR94 table-integer -input. 3.4.59.4 Method Ifcomputer 1(IBM7094)isthecomputer beingused, section IIoftheCHAR94 tableisused forthecharacters written ontheplottape;ifcomputer 4(CDC6600), section IVisused;ifany 3.4-I00 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS other computer, section IIIisused. Assuming thetrue physical origin oftheplotter tobeatthecenter ofthepaper, thetrue xandycoordinates arecalculated. These coordinates arethenseparated intofourinteger digits. Aplotcommand isthen setupandwritten asfollows: XSxX4X3X2XlYSyY4Y3Y2Ylbbbbbbbbclc2ac 3 preceeded by96blanks. X Y sx Sy xi Yi b ci aTheresulting plotcommand is120characters long. =character X(character 34intheCHAR94 table) =character Y(character 35intheCHAR94 table) =+or-character depending uponthesignofthex-coordinate. =+or-character depending uponthesignofthey-coordinate. =x-coordinate digit. =y-coordinate digit. =blank (character 48intheCH.AR94 table). =control character. =annotation character. 3.4.59.5 Design Requirements Subroutine used: SWRITE. 3.4-101 (12-1-69)\nSUBROUTINE DESCRIPTIONS 3.4.60 WPLT3 IWrite aPlotter Command forPlotter 3). 3.4.60.1 EntryPoint: WPLT3. 3.4.60.2 Purpose Towriteaplotcommand forplotter 3. 3.4.60.3 Calling Sequence CALLWPLT3 (A,_PT) C@MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. where: A(1)andA(2)=36bitplotcommand setupbyAXIS3, LINE3, orTYPE3, as218-bit words (right justified, leading zeros) -input. 0,ifA=plotcommand 1_PT= -integer -input. I,ifaseries ofplotcommands istobeterminated /PLTDAT/ PL_T -GINOfilenameoftheplottapetobewritten -BCD-input. MAXCHR -plottapebuffer size(number ofcharacters) -integer -input. 3.4.60.4 Method Eachplotter command is36bitslong(6six-bit characters). Sixofthe36bitsinA(1)and A(2)arewritten ontheplottapeuntilall36bitshavebeenwritten. Inaddition, thenumber ofsix-bit characters written inarecord iscalculated. WhenWPLT3 iscalled withOPT=I,a checkismadetodetermine ifthenumber of6bitcharacters written inthecurrent record is aninteger multiple ofthenumber ofcharacters perwordonthecomputer. Ifsuchisnotthecase, anadditional 36bitcommand iswritten asmanytimesasnecessary untilthiscondition does existbefore terminating theplottaperecord. Thecommand usedwilldonothing toaffect the generated plot. 3.4.60.5 Design Requirements Subroutine used: SWRITE. 3.4-I02 (12-I-69)"},"title":"Programmer's Manual P25"},"/docs/programmers/programmers_manual_026/":{"data":{"":"UTILITY SUBROUTINE DESCRIPTIONS 3.4.61 GIN_IO (GINO Input/Output Routine). 3.4.61.I Entry Point: GIN_IO. 3.4.61.2 Purpose GINOIO executes thephysical input/output operations forsubroutine GINO. 3.4.61.3 Calling Sequence CALLGINOI_($n,OPC_DE,BUFF) C_MM_N/GIN0X/LGIN_,FILEX,E_R_P,ENTRY,LSTNAM,N_NAME_NTAPE,XYZ(2),UNITAB(75),BUFADD(75), NBUFF3,ERR_R,NOSECT. n-F_RTRAN statement numberdefining return intheeventofanI/error. l,Rewind 2,Writeoneblock OPC_DE -3,Readoneblock input -integer. 4,Backspace oneblock 5,Forward space oneblock BUFF -Address oftheblock tobereadorwritten. FILEX -Unitnumber offile-integer -input. NBUFF3 -Length ofblock tobereadorwritten -integer -input. 7,Abnormal completion ofI/0operationERROR -8,Physical end-of-file encountered integer -output. 9,Datatransmission error NOSECT -Number ofsectors perblock onFASTRAND drum (Univac If08only) -integer -input. 3.4.61.4 Method Themachine cell in/SYSTEM/istested. FortheIBM7094orIBMS/360 computers, FORTRAN REWIND, WRITE, READ andBACKSPACE operations areused. FortheUnivac ll08, theNTRAN routine isused. 3.4.61.5 Design Requirements GINOI isdesigned asanintegral partoftheGIN_collection ofroutines andistobe called only byGINO. 3.4-I03\nSUBROUTINE DESCRIPTIONS Sinceallinput/output operations byGINOaremadebyGINOI_, acharlge tointerface witha newordifferent operating system caneasily bemadebymodifying GiNOIO. 3.4-I04\n3.4.62 3.4.62.1 3.4.62.2UTILITY SUBROUTINE DESCRIPTIONS EJECT(Automatic PageEject) EntryPoint: EJECT Purpose Automatic linecounting forprinted output andnewpageinitiation whenpagesarefilled. 3.4.62.3 Calling Sequence K=EJECT(LINES) C_P_40N /SYSTEM/ -seeSYSTEM tabledescription, section 2.4.1.8. where: LINES-Number oflinestobeprinted. /SYSTEM/ _AXL!N -Maximum number oflinespermitted perpage. LINCNT -Number oflinesthusfarprinted onthispage. 3.4.62.4 Method Ifthenumber oflinesalready printed onthispage(LINCNT) addedtothenumber oflines abouttobeprinted (LINES) would begreater thanthenumber oflinespermitted perpage (MAXLINI, anewpageisstarted (CALLPAGE1), thecurrent linecounter issettothenumber oflinestobeprinted (LINCNT =LINES), andtheresult ofthisfunction issetto1(EJECT =I). Ifthenumber oflinesabouttobeprinted (LINES) willfitonthispage(LINCNT +LINES\u003c MAXLIN), theresult ofthisfunction issetto0(EJECT :0). 3.4.62.5 Design Requirements Ifitisdesired toforceanewpagetobestarted, simply setLINCNT =MAXLIN before calling thisfunction. 3.4-I05\nSUBROUTINE DESCRIPTIONS 3.4.63 PLAMAT (Material Property Utillty forTwo-Dimensional Elements inPiecewise Linear Analysis). 3.4.63.1 EntryPoint: PLAMAT. 3.4.63.2 Purpose Toperform thefollowing matrix operation: [C] =[A]T[B][A] , where [A]isequalto[U](seethesubroutine descriptior_ forPREMAT andMAT,section 3.4.36.3, foradefinition of[U]withINFLAG =2),and[B]isequaltoapreviously calculated material properties matrix which isincommon block/PLAGP/. Theresult [C],whichissymmetric, isstored incommon block/MATOUT/. 3.4.63.3 Calling Sequence CALLPLAMAT COMMON/PLAGP/GP(9),MIDGP,ELID COMM_N/MATIN/MATID,INFLAG,ELTEMP,PLAARG,SINTH,C_STH C_MMON/MATOUT/GII,GI2,GI3,G22,G23,G33,DUMMY(14) where: /PLAGP/ GP(9) MIDGP ELID /MATIN/ MATID INFLAG1=3x3material properties matrix calculated inaPLAelement driver -real-input. =thematerial identification number associated withGP-integer -input. =theelement identification number associated withGP-integer -input. =theincoming material identification number -integer -input. notused byPLAMAT. 3.4-106 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS SINTH C@STH /HAT@UT/ Sameas/MAT(_UT/with INFLAG =2asdescribed insection 3.4.36.3 sixcells areused.=Sineofthematerial property orientation angle -real-input. =Cosine ofthematerial property orientation angle -real-input. except onlythefirst 3.4.63.4 Method Thisroutine checks toseeiftheincoming material identification number (HATID) isequal to thematerial identification number (MIDGP) which wasusedtocalculate thematerial properties matrix stored in/PLAGP/.Iftheyarenotequal, thisroutine calls HATwith INFLAG =2and returns tothecalling program. Thiswill onlyhappen incombination elements (TRIAl, TRIA2, QUADI, QUAD2) where there isadifferent material identification number usedforthemembrane and plate properties. Iftheyareequal, thenthematrix operation described above isperformed. 3.4-I07 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.64 WPLT4 (Write aPlotter Command forPlotters 4Through 7). 3.4.64.1 EntryPoint: WPLT4. 3.4.64.2 Purpose Towriteplotcommands forplotters 4through 7. 3.4.64.3 Calling Sequence CALLWPLT4 (A,PT) C_MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. where: A(1): A(Z-N):\ncommand type(0=control, 2=line,4=position) # additional datausedtogenerate theplotcommands (contents and length, N,varywithcommand type) _PT=IO’ifaplotcommand istobegenerated (I,ifthecurrent command buffer istobeterminated ) /PLTDAT/ PLTMDL =plotter modelnumber -integer -input. PLOTER =plotter number -integer -input. PL_T =GINOfilenameoftheplottapetobewritten -BCD-input. 3.4.64.4 _4ethodinteger, input. integer, input. Theresulting plotcommand varies inlength, depending bothonthecommand typeandtheamount ofnecessary drummovement. IfA(1)=0(control command), A(2)=number ofcontrol characters intheresulting command (onecharacter expressed asarightadjusted integer ineachwordofthe Aarray, starting inA(3)). IfA(1)=2or4(lineorpositioning command), theresulting plotcommand willbeginwiththe characters necessary tolowerorraisethepen,respectively, unless thepenisalready downorup, respectively. A(2)andA(3)contain thenumber ofXandYhalfsteps necessary todrawtheline 3.4-I08(7/I/70)\nUTILITY SUBROUTINE DESCRIPTIONS (with thependown orup),while A(4)andA(5)contain pointers totwocharacter strings needed to drawtheentire lineexcept forthefinal halfstep. A(6) andA(7)contain thepointers needed to drawthelasthalfstepofthelineonly. Thepointers inA(4-7)willcause drummovements as follows: l=+Y 9=+Y/2 17=+X/2, +Y 2=+X,+Y lO=+X/2, +Y/2 18=-X,+Y/2 3=+X II=+X/2 19=+X,-Y/2 4=+X,-Y 12=+X/2, -Y/2 20=+X/2, -Y 5=-Y 13=-Y/2 21=-X/2, -Y 6=-X,-Y 14=-X/2, -Y/2 22=-X,-Y/2 7=-X 15=-X/2 23=-X,+Y/2 8=-X,+Y 16=-X/2, +Y/2 24=-X/2o +Y Thenumber ofcharacters inastring isafunction oftheinternal plotter model number, PLTMDL. IfPLT,_IDL =I,eachstring isthree characters; iFPL_4DL _2or4,each string istwocharacters; andifPLTMDL =3or5,eachstring isonlyonecharacter. Asrequired, thissubroutine will automatically initiate each plottaperecord with the necessary “conditioning, synchronizing, andstart plot” characters, andterminate eachplottape record with tilenecessary “stop plot” characters. 3.4.64.5 Design Requirements Theonly incremental drummovements available fortheCALCOMP drum plotter indicated as PLTMDL =larethefirst eight (8)aslisted above. Therefore, whenA(1)=2or4,thevalues in A(4-7)must belessthannine (g). Subroutine used: SWRITE. 3.4-I09 (711170)\nSUBROUTINE DESCRIPTIONS 3.4.65 WPLT9 IWrite aPlotter Command forPlotter 9). 3.4.65.1 EntryPoint: WPLTg. 3.4.65.2 Purpose Towriteaplotcommand forplotter 9. 3.4.65.3 Calling Sequence CALLWPLT9 (A,OPT) C_MMON/PLTDAT/ -seePLTDAT Miscellaneous Tabledescription, section 2.5. OPTwhere: A /PLTDAT/=lO-character plotcommand (Icharacter perword,rightjustified, leading integer -input.zeros) -integer- input. =_0ifA=plotcommand ifaseries ofplotcommands istobeterminated PL_T=GIN_filenameoftheplottapetobewritten -BCD-input. 3.4.65.4 Method If_PT=O,theI0characters arewritten ontheplottapewithout anychanges. twocharacters areappended tothecurrent record: 628(EXITcode)and618(NOPcode). 3.4.65.5 Design RequirementsIf@PT=I, Subroutine used: SWRITE. 3.4-110 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.66 WPLTIO (Write aPlotter Command fortheNASTRAN General Purpose Plotter). 3.4.66.1 Entry Point: WPLTIO. 3.4.66.2 Purpose Towrite theplotter comands fortheNASTRAN general purpose plotter. 3.4.66.3 Calling Sequence CALL WPLTIO (A,_PT) C_MM_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: A(1)=pletmodeindex A(2) =control index _uj=X1^=_vv,_lna_e -integer -input. A(4)=Yl=y-coordinate A(5) =x2=x-coordinate A(6) =Y2=y-coordinate {iifA=pl°tc°mmand _integer input.OPT = - - ifaseries ofplotcommands istobeterminated /PLTDAT/ EDGE =sizeoftheborders (x,y) inplotter units -real-input. PL_T =GIN_filenameoftheplottapetobewritten -BCD-input. MAXCHR =plottapebuffer size (number ofcharacters) -integer -input. 3.4.66.4 Method Each plotcommand written iscomposed of30six-bit unsigned integers. Theplotmode index, %(I), andthecontrol index, A(2), arethefirst twointegers. Thenext20integers represent thevalues inA(3-6). Eachvalue isrepresented byfive6-bit integers, each integer being a decimal digit ofthedecimal representation ofthevalue asfollows: 3.4-111 (12-I-69)\nSUBROUTINE DESCRIPTIONS d4d3d2dld 0 where theoriginal integer valueisgivenby do.lO0+dl.lOl +d2.102 +d3.103+d4.104 Thisrepresentation isusedsoastomakeiteasytorecover theoriginal integer values onany binary computer. Thelast8characters arealways zeros. Theendresult isaplotcommand ofthefollowing format: MCP4P3P2PIPoQ4Q3Q2QIQoR4R3R2RIRoS4S3S2SlSo00000000 where: M C Pi=plotmodeindex =control index =decimal digitoftheIstinteger value Qi=decimal digit ofthe2ndinteger value Ri=decimal digit ofthe3rdinteger value Si=decimal digit ofthe4thinteger value 0=zero WhenWPLTIO iscalled with_PT=I,thecurrent plottaperecord isfilled withasmanydummy plotcommands asisnecessary togenerate afixedlength record. Thedummy plotcommand ismade of30zeros. ThisisdonesothattheplottapecanbereadinF_RTRAN without having toworry aboutvariable length records aslongastheplottapebuffer size(MAXCHR) isaninteger multiple ofthenumber ofcharacters perwordonthecomputer onwhich theplottapeisbeingread(see section 6.10.6 forfurther details). 3.4.66.5 Design Requirements Subroutine used: SWRITE. 3.4-112 (8/I/72)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.67 3.4.67.1 3.4.67.2PLTSET (PlottinB Parameter Initialization). Entry Point: PLTSET. Purpose Given theinternal plotter andmodel numbers, toinitialize the/XXPARM/and/PLTDAT/tables asneeded bytheNASTRAN plotter software package. 3.4.67.3 Calling Sequence CALLPLTSET C@MMON/XXPARM/ -seeXXPARM Miscellaneous Table description, section 2.5. C_4MON/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. where: /XXPARM/ PBUFSZ =plottapebuffer size (number ofwords) -integer -output. PAPSIZ =sizeofthepaper tobeused(inches) -real-input. /PLTDAT/ M_DEL =internal plotter model number -integer -input. PL_TER =internal plotter number -integer -input. REG =plotting region parameters -real-output. AXYMAX =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-output. XYEDGE =sizeoftheborders (x,y) inplotter units -real-output. XYMAX =maximum useable xandycoordinate values ontheplotter -real-output. CNTSIN =number ofplotter counts perinchofpaper -real-output. CNTCHR =number ofplotter counts percharacter inthexandydirections -real-output. PLTYPE =plotter type-integer -output. PBFSIZ =plottape buffer size (number ofcharacters) -integer -output. 3.4-113 (12-I-69)\nSUBROUTINE DESCRIPTIONS 3.4.67.4 Method Usingtheinternal plotter (PL_TER) andmodel (M_DEL) numbers, theinitialization needed to properly usetheNASTRAN plotting software isperformed asfollows: I.Section 2of/PLTDAT/, ofwhichXYI_X, CNTSIN, CNTCHR, PLTYPE andPBFSIZ areapart,is settoaduplicate ofsection PLOTER+2. 2.PBUFSZ of/XXPARM/ isthensettoPBFSlZ/CHRWRD whereCHRWRD =number ofcharacters per wordonthesubject computer. 3.AXYMAX andXYEDGE arecalculated basedupontheplotter typeand/or papersize. Ifthe plotter isatableplotter (PLTYPE =+2or-2),theborders aresetupasI/2inchborders. Iftheplotter isnotatableplotter andhasnotyping capability (PLTYPE =-Ior-3), theborders aresetupashalfthehorizontal andvertical character sizes (CNTCHR/2). Otherwise, theborders aresettozero. 4.Theplotting region isthensetto(O,O,AXYMAX(1),AXYFt_X(2)). Thisregion canbesub- sequently altered bythemodule writer. 3.4-114 (12-I-69)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.68 DRWCHR (ToDrawaLineofCharacters). 3.4.68.1 Entry Point: DRWCHR. 3.4.68.2 Purpose Todrawalineofcharacters onaplotter, horizontally orvertically. 3.4.68.3 Calling Sequence CALL DRWCHR (X,Y,XYD,CHR,NN,(_PT) C(_I(_N/PLTDAT/ -seePLTDAT Miscellaneous Table description, section 2.5. C(_MM(_N/CHRDRW/ -seeCHRDRW Miscellaneous Table description, section 2.5. where: X,Y=starting orending coordinate ofthelineofcharacters tobedrawn (always left-to- right ortop-to-bottom) -real-input. (+lifX=starting orending point oftheline XYD=I+2 I-integer- input._ifYstarting orending point oftheline CHR=indices ofthelineofcharacters tobedrawn (seesubroutine TiPE) -integer - input. NN=nu_er ofthecharacters tobedrawn -integer -input. -!toinitiate thelinemode.(_PT=+toterminate aseries ofplotcommands. -integer -input. todrawalineofcharacters. /PLTDAT/ REG =plotregion parameters -real-input. XYI.V_X =sizeofthepaper (x,y) used, lesstheborders, inplotter units -real-input. E[‘GE =sizeoftheborder (x,y) inplotter units -real-input. CNTCHR =number ofplotter counts percharacter inthexandydirections -real-input. /CHRDRW/ LSTIND =index ofthelastcharacter which canbedrawn -integer -input. 3.4-I15 (12-I-69)\nSUBROUTINE DESCRIPTIONS CHRIND=indices intoXYCHRusedtolocatethedataneeded todrawcharacters -integer -input. XYCHR:lineswhichmustbedrawntoproduce alphanumeric characters -integer -input. 3.4.68.4 Method If_PT=O,allotherarguments areignored andLINEiscalled. Otherwise, thecharacters aredrawn. Thewidthandheight ofeachcharacter position areassumed tobeinteger multiples of8and16,respectively. Thesizeofthedrawncharacter willbethisinteger multiple of6. Theremaining spaceineachcharacter position isusedasthehorizontal andvertical spacing. Nocharacter willbedrawnoutside theregionspecified inREG. 3.4.68.5 DesignRequirements Subroutine used: LINE. 3.4-I16 (12-I-69)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.69FNDPLT (Determine theInternal Plotter andModel Indices). 3.4.69.1 Entry Point: FNDPLT. 3.4.69.2 Purpose Given theexternal name andmodel ofaplotter, todetermine thecorresponding internal plotter andmodel numbers usedbytheNASTRAN plotting software package. 3.4.69.3 Calling Sequence CALLFNDPLT (PL@TER,M_DEL,PLTNAM,PM@DEL) where: PL_TER =internal plotter number -integer -output. M_DEL =internal model number -integer -output. PLTN/_,I(2) =external plotter name-BCD-input. PM_DEL(2) =external model name-integer orBCD-input andoutput. 3.4.69.4 Method PLTNAM andPM_DEL arecompared withaninternal table ofplotter names andmodels. Whena match isfound, PL_TER andM_DEL aresettothecorresponding internal plotter andmodel numbers. Ifamatch isfound onlyfortheplotter name (PLTNAM), themodel nameforthefirst model appro- priate tothematched model namewillbeusedtodetermine PL_TER andM_DEL, andthemodel name usedwill bestored inPM_DEL. Ifnomatch isfound, PL_TER andM_DEL willbesettozero. See section 3.1forfurther details. 3.4-I17(12-I-69)\n3.4.70 PHDMIA (DMIpunchroutine) 3.4.70.1 EntryPoints: 3.4.70.2 PurposeSUBROUTINE DESCRIPTIONS PHDMIA, PHDMIB, PHDMIC, PHDMID Writes DMIbulkdatacardimages onaF_RTRAN unitforsmallrealmatrices. 3.4.70.3 Calling Sequence CALLPHDMIA -Initializes matrix CALLPHDMIB Initializes eachnon-null column CALLPHDMIC Collect eachnon-zero termofcolumn CALLPHDMID Wrapupcolumn C_MMON /PHDMIX /N(2),C,IFO,TIN,TOUT,IR,IC,N_,KPP,NLP,ERN_,IC_L,IRO,XX Communication areaasfollows: N-Alphanumeric nameofmatrix, 2A4. C-Alphanumeric string forcontinuation chaining, A3. IF_-1forasquare, non-symmetric matrix; 2forarectangular matrix; 6forasymmetric matrix. TIN-1(input toIFPwillbesingle precision). T_UT -1ifIFPistogenerate single-precision terms. 2ifIFPistogenerate double-precision terms. IR- IC- N_-Number ofrowsinmatrix, Integer \u003eO. Number ofcolumns inmatrix, Integer \u003eO. F_RTRAN printer output unitnumber (ifN__O,noprinting willbedone; ifN_\u003eO,thecardimages willbelisted onFORTRAN unitNOaswellas “punched”). I,single-field DMIcardimages willbegenerated; 2,double-field DMIcardimages willbegenerated. Number ofdatalinesperpage. O,noerrors weredetected; I,morethan9999cardimages forasingle matrix wererequested. Current column number. Current rownumber. Current valueofmatrix termasasingle-precision floating pointnumber.KPP NLP ERNO (output) IC@L IR_ XX 3.4-118 (8/I/72)\nUTILITYSUBROUTINE DESCRIPTIONS 3.4.70.4 Method Tousethisroutine,carryoutthestepsbelowafterloadingthecommonblock. I.Foreachmatrix,CALLPHDMIA.Alldataitemsin/PHDMIX/ mustbeloaded except ERN_(output), IC_L,IR_andXX. 2.Foreachnon-null column, dothefollowing: a.LoadIC_L,IR_andXXwithdatacorresponding tothefirst non-zero term inthecolumn. b.CALLPHDMIB c.Foranyother non-zero termsinthecolumn, loadIR_andXXand d.CALLPHDMIC e.Afterallnon-zero termshavebeenprocessed, CALLPHDMID towrapupthe column. Matrices willbepunched onsingle-field DMIcardsusingaF8.1format fortheelement values ifKPP=I;double-field cardswi!!bepunched usinga!PE!6.8 fieldifKPP=2. 3.4.70.5 Design Requirements APUNCHfileisassumed toexistonFBRTRAN unit7. 3.4.70.6 Diagnostic Messages None. 3.4-119 (BII172)\nSUBROUTINE DESCRIPTIONS 3.4.71 HEAD(PlotHeading) 3.4.71.1 EntryPoint: HEAD 3.4.71.2 Purpose Creates heading blocks forplotframes. 3.4.71.3 Calling Sequence CALLHEAD(T,N,L,V) TType-1 2 3=STATIC =MODAL =TRANSIENT NDeformation Number (0=undeformed shape) L-LoadCaseIdentification Number V-Valueofeigenvalue ortime. 3.4.71.4 Method TheTITLE, SUBTITLE andLABELarepicked upfrom/_UTPUT/ andplotted inthelowerlefthand corner oftheplotframe, followed bytheplotidentification line. 3.4.71.5 Design Requirements Theplotter software package mustbeavailable tothisroutine. 3.4.71.6 Diagnostic Messages None. 3.4-120 (8/I/72)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.72 DELSET (Dummy Element Setup) 3.4.72.1 Entry Point: DELSET 3.4.72.2 Purpose Modifies /GPTAI/toaccommodate anydummy elements present. 3.4.72.3 Calling Sequence CALL DELSET 3.4.72.4 T_ethod TheADUMi bulk data card information ispicked upfrom the46ththru 54thwords of/SYSTEM/ where itwasplaced byIFS5P. Thedesired entries in/GPTAI/aregenerated andinserted into the 53rdthru 61stpositions asrequired. 3.4.72.5 Design Requirements Allmodules using /GPTAI/should call this routine toinsure that thedummy elements are properly recognized. 3.4.72.6 Diagnostic Messages None. 3.4-121 (8/I/72)\n3.4.73 3.4.73.1 3.4.73.2SUBROUTINE DESCRIPTIONS HMAT(HeatTransfer Material Property Utility) EntryPoint: HMAT Purpose Toobtain material property dataforHeatTransfer element routines. 3.4.73.3 Calling Sequence CALLHMAT(ID,Z) ID-=O,setupcallmadebySMAIA;\nO,element identification number oncallsmadebyelement routines. Z-Working core. 3.4.73.4 Method I.Initialization call(ID=O) ReadintocoreallMAT4andMAT5cardsandcheckforanyduplicate identification numbers. 2.Element Routine calls (ID\u003eO) Ifprevious callhadthesamerequest data,return tothecalling routine. Otherwise, lookupthedesired material dataincore,extract thedesired information, andreturn tothecalling routine. 3.4.73.5 Design Requirements Working coremustbesufficient toholdalloftheMAT4andMAT5data. Utility routines PREL_C andBISRCH areused. 3.4.73.6 Diagnostic Messages Messages 3002,3008, 2157,3062and2156maybeissued. 3.4-122 (8/I/72)"},"title":"Programmer's Manual P26"},"/docs/programmers/programmers_manual_027/":{"data":{"":"UTILITYSUBROUTINE DESCRIPTIONS 3.4.74BISRCH (Binary Search) 3.4.74.1 EntryPoint: BISRCH 3.4.74.2 Purpose Toperform abinary search onalistofsorted data. 3.4.74.3 Calling Sequence CALLBISRCH ($nID,BUF,L,KN,JP) n-F_RTRAN statement nun_ber defining thereturn tobetakenintheevent amatchisnotfound. ID-Wordtomatchwithfirstwordofentry. BUF-Arraytobesearched. LLength ofeachentryofarray. KN Number ofentries inBUF. JP Pointer returned tocalling program. This pointer gives LheFirst word ofthematching entry inthearray. 3.4-123 (811172)\nSUBROUTINE DESCRIPTIONS 3.4.74.4 Method Astandard binary search algorithm isusedasshownbelow: KHI=K JP=j RETURN 1\u003c0IJJ=L-IKLO=I KHI=KN J=K*L-JJ t ijp=jRETURN\u003e0 KLB=K \u003c0 \u003e0 N_ YES I,_ K=KHI 3.4-124 (8/I/72)\n3.4.74.5 None. 3.4.74.6 None.Design Requirements Diagnostic MessagesUTILITY SUBROUTINE DESCRIPTIONS 3.4-125 (8/I/72)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.75 F_RFIL (File Unit) 3.4.75.1 Entry Point: FORFIL 3.4.75.2 Purpose Toextract thelogical unit towhich agiven GIN@ file name belongs. 3.4.75.3 Calling Sequence INTEGER F_RFIL NUNIT =FORFIL(NAME) NAME GINO file name 3.4.75.4 Method F_RFIL searches theFIST fortheGIN0 file name. When amatch isfound, theinternal unit number iseither /XXFIAT/or/XFIAT/andisextracted andreturned through thefunction name asininteger. 3.4.75.5 None. 3.4.75.6Design Requirements Diagnostic Messages Message 2179 maybeissued intheevent that therequested GINB file name cannot be found. 3.4-126 (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.4.76 DAD_TB (Double Precision Vector DotProduct) 3.4.76.1 Entry Point: DAD_TB 3.4.76.2 Purpose Tocompute thescalar inner product oftwovectors indouble precision. 3.4.76.3 Calling Sequence D_UBLE PRECISION DAD_TB, A(3),B(3),C C=DAD_TB(A,B) 3.4.76.4 Method C = 3.4.76.5 None. 3.4.76.6 None.3 AiBi 2=I Design Requirements Diagnostic Messages 3.4-127 (8/I/72)\nUTILITY SUBROUTINE DESCRIPTIONS 3.4.77 DAXB(Double Precision Vector CrossProduct) 3.4.77.1 EntryPoint: DAXB 3.4.77.2 Purpose Tocompute thevector product oftwovectors indouble precision. 3.4.77.3 Calling Sequence DOUBLE PRECISION A(3),B(3),C(3) CALLDAXB(A,B,C) 3.4.77.4 Method D: 3.4.77.5 Design Requirements mayoverlay AorBincore. 3.4.77.6 Diagnostic Messages None. 3.4-128 (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.4.78 SAD_TB (Single Precision VectorDotProduct) 3.4.78.1 Entry Point: SAD_TB 3.4.78.2 Purpose Tocompute thescalar inner product oftwovectors insingle precision. 3.4.78.3 Calling Sequence DIMENSION A(3),B(3) C=SADOTB (A,B) 3.4.78.4 C =Method 3 AiBi i=l Design Requirements Diagnostic Messages 3.4-129 (8/I/72)\n3.4.79 3.4.79.1 3.4.79.2UTILITY SUBROUTINE DESCRIPTIONS SAXB(Single Precision Vector CrossProduct) EntryPoint: SAXB Purpose Tocompute thevector product oftwovectors insingle precision. 3.4.79.3 Calling Sequence DIMENSION A(3),B(3),C(3) CALLSAXB(A,B,C) 3.4.79.4 Method 3.4.79.5 Design Requirements mayoverlap AorBincore. 3.4.79.6 Diagnostic Messages None. 3.4-130 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5 3.5.1 3.5.1.I 3.5.1.2MATRIX SUBROUTINE DESCRIPTIONS. BLDPK (Build aPacked Column ofaMatrix). Entry Points: BLDPK, BLDPKI, ZBLPKI, BLDPKN. Purpose Towrite acolumn ofamatrix inNASTRAN packed format. 3.5.1.3 Calling Sequence Ifseveral different matrices aretobepacked concurrently, themulti-column version is used: CALLBLDPK(TYPIN,TYP_UT,NAME,BL_CK,_PT,I) CALLBLDPKI(A,I,NAME,BL@CK,@PT) CALLBLDPKN(NAME,BL_CK,_PT,MCB) where: BLDPK isaninitialization callandismadeonce foreachcolumn tobepacked. BLDPKI isthecallmadetosupply asingle element ofthecolumn tobepacked. BLDPKN isacall toterminate processing ofthecolumn. TYPIN -Arithmetic typeoftheelements tobepacked (l=realsingle precision, 2=real double precision, 3=complex single precision, 4=complex double precision)- integer -input. TYP_UT -Arithmetic typeoftheelements inthepacked column -integer -input. _PT=‘WRITE’: GIN_file nameofdatablock where packed column willbewritten.NAME (_PT ‘WRTC_R’: Anarray incorewhere packed column willbewritten. BL_CK -Anarray ofdimension 20forusebyBLDPK andBLDPKI. {‘WRITE’: Thepacked column willbewritten byGIN. IinDut_PT- ‘WRTC_R’: Thepackedcolumn willbewritten incore. Subroutine name A-Anarrayofdimension I,2or4(depending onTYPIN) wheretheelement tobepacked is stored -real-input. I-Rowposition ofelement tobepacked-integer -input. MCB-Anarrayofdimension 7wherethetrailer information aboutthematrix isaccumulated. Ifonlyonematrix isbeingpacked, thesinglecolumn version shouldbeusedasitismore efficient. C_MM(_N/ZBLPKX/A(4),I 3.5-1(8/1/72)\nSUBROUTINE DESCRIPTIONS CALLBLDPK(TYPIN,TYPOUT,NAME,O, OPT,O) CALLZBLPKI CALLBLDPKN(NAME,O,BPT,MCB) where: BLDPKanditsarguments areasdefined above. ZBLPKI isthecallmadetoprovide anelement ofthecolumn tobepacked. Theelement (A), anditsrowposition (I),arestored in/ZBLPKX/ bytheuserpriortoeachCALLZBLPKI. BLDPKN anditsparameters aredefined asabove. Note: BLDPKN accumulates thefollowing twowords ofMCB: MCB(2) =column number MCB(6) =number ofwords inthedensest column Inthemulti-column version, BL@CK must bedifferent foreach matrix being packed. 3.5.1.4 Method Format ofapacked column (one logical record): Rowposition offirst non-zero element Type ofelements =TYPOUT Notused .Column header Notused Notused First non-zero element Rowposition ofsecond non-zero element orsecond non-zero element Last non-zero element 16777215 (integer) =24\"I\"bitsColumnbody IColumn trailer 3.5-2\nMATRIX SUBROUTINE DESCRIPTIONS Example: Assume acolu_m ofarealsingle precision 19xNmatrix istobepacked inrealsingle precision form: RowPosition Value Packed Format l 0.0 4 2 0.0 l 3 0.0 Notused 4 l.0 Notused 5 2.0 Notused 6 0.0 l.0 7 3.0 2.0 8 4.0 7 9 5.0 3.0 lO 6.0 4.0 II 7.0 5.0 12 8.0 6.0 13 0.0 7.0 14 0.0 8.0 15 0.0 16777215 16 0.0 17 0.0 18 0.0 19 0.0 Foreachofthe16possible combinations ofTYPINandTYPBI_, BLDPKsetsswitches forthe typeofconversion tobeusedinpacking. Forthemulti-column version, theseswitches and otherpointers aresavedinBL_CK. BLDPKI restores theswitches andpointers andmovesthe element anditsrowposition to/ZBLPKX/ thenenters codecommonwithZBLPKI. Iftheelement iszero,animmediate return isgiven. Iftheelement isthefirstnon-zero element forthe column, the5-word header iswritten followed bytheelement. Otherwise, therowposition of thecurrent element iscompared totherowposition ofthelastelement. Ifthedifference is unequal toone,thecurrent rowposition iswritten. Ineither case,thenon-zero element is written andreturn ismade. 3.5-3\nSUBROUTINE DESCRIPTIONS 3.5.1.5 Design Requirements Letljandlj+1betherowspositions oftwoelements supplied insuccessive callsto BLDPKI orZBLPKI. Thenlj+1\u003eliforalliofacolumn. IfBPT:‘WRTCOR’, thentheblockNAMEmustbeinitialized priortoeachcalltoBLDPK (see_PNC_R). Ifthesingle column version isused,subroutine PACKmaynotbecalled between callsto BLDPKandBLDPKN. MCB(2), MCB(6) andMCB(7) mustbesettozerobytheuserpriortothefirstcallof BLDPKN foramatrix. Theexactformat ofapacked column ismachine dependent. SeeSection 5fordetails. 3.5-4 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.2 3.5.2.1 Entry Point: PACK. 3.5.2.2 PurposePACK (Pack aColumn ofaMatrix). Topackandwrite acolumn ofamatrix. 3.5.2.3 Calling Sequence C_N/PACKX/TYPIN,TYP_UT,I,N,INCR CALLPACK(A,NAME,_PT,MCB) A -Anarray where theelements ofthecolumn arestored inunpacked form. (_PT =‘WRITE’, GIN_nameofthe packed datablock where the column will be NAME -jwritten. PT =‘WRTC_R’, anarray incorewhere thepacked column will bestored. IWRITE: Packed c°lumnwill bewritten byGIN- }InputOPT tWRTC_R: Packed column willbestored incoreatNAME. Subroutine name MCB -Anarray ofdimension =7where thematrix trailer information willbe accumulated. TYPIN -Arithmetic typeoftheelements ofthecolumn stored atA(l=realsingle precision, 2=realdouble precision, 3=complex single precision, 4=com- plexdouble precision). TYP_UT -Arithmetic typeinwhich theelements aretobeinpacked form. Sameconven- tion asTYPIN. I Rowposition oftheelement stored atA(1). N -Rowposition ofthelastelement inthecolumn stored atA. INCR -Spacing oftheelements incolumn stored atAinunits ofelements, e.g., if realdouble precision elements arestored consecutively, INCR=I. 3.5.2.4 Method BLDPK iscalled toinitiate activity forthecolumn. Foreach element inthecolumn, ZBLPKI iscalled toperform packing andwriting. BLDPKN iscalled toterminate activity forthecolumn andupdate thematrix trailer. 3.5-5\nSUBROUTINE DESCRIPTIONS 3.5.2.5 DesignRequirements Seesubroutine description forBLDPK, section 3.5.1. 3.5-6\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.3 IHTPK (Interpret aPacked Column ofaIIatrix). 3.5.3.1 Entry Points: INTPK, INTPKI, ZNTPKI. 3.5.3.2 Purpose Toread andinterpret acolumn ofamatrix inNASTRAN packed format. 3.5.3.3 Calling Sequence Ifseveral different matrices aretoberead andinterpreted concurrently, themulti-column version isused. CALL INTPK($n,NAME,BLOCK,OPT,TYP_UT,I) CALL INTPKI(A,I,NAME,BLBCK,_PT,EOL) where I_PK istheinitialization call andismade once foreach column toberead and interpreted. INTPKI isthecall made toread successive non-zero elements ofthecolumn. Each call to INTPKI returns onenon-zero element. n-FORTRAN statement number defining return tobetaken intheevent thecolumn isnull. PT =‘READ’, GINO file name ofdata block where thematrix isstored.NAME tOPT ‘RDC_R’, asarray ofcore storage where thematrix isstored. BL_CK -Anarray ofdimension 20forusebyINTPK andINTPKI. OPT I’READ’ -Thec°lumn will beread byGIN\" }Input,‘RDC_R’ -Thecolumn will beread from core storage. Subroutine name TYP_UT -Arithmetic type into which theelements aretobeunpacked (+_l=real single precision, +–2=real double precision, +_3=complex single precision, +_4=complex double precision). IfTYP_UT \u003cO,thesign ofeach non-zero element istobe changed -integer -input. A-Anarray ofdimension l,2or4,depending onTYP_UT, where thenon-zero element istobe stored -real -output. I-Rowposition ofthenon-zero element -integer -output. EOL=lindicates last non-zero element inthecolumn wasread onthecurrent call to INTPKI, =0otherwise -integer- output. 3.5-7 (8/I/72)\nSUBROUTINE DESCRIPTIONS Ifonlyonematrix istobereadandinterpreted, thesingle-column version should beused asitismoreefficient. C_MM_N/ZNTPKX/A(4),I,E_L,E_R CALLINTPK($n,NAME,O,OPT,TYP_UT,O) CALLZNTPKI where INTPKanditsarguments aredefined asabove. Z[ITPKI isthecallmadetoreadsuccessive non-zero elements ofthecolumn. Oneelement (A), itsrowposition (I),end-of-column indicator (E_L), andend-of-record indicator (E@R)arestored in/ZNTPKX/ foreachcalltoZNTPKI. E_Lisdefined asabove. EOR=1indicates theend-of-record hasbeenreadbyZNTPKI, =0otherwise (ZNTPKI buffers aheadsothatE_Rwillusually beonebefore EOLisone.E_Risalways onewhenE_L=I). 3.5.3.4 Method INTPKreadsthelineheader forthecolumn. If@PTexitsviaRETURN 2,anullcolumn exists andRETURN 1ismadetotheuser. Otherwise, foreachofthe32combinations ofTYP_UT andthe typeoftheelements inthecclumn, aswitch forpickup andconversion oftheelements isset. Forthemulti-column version, thisswitch andotherpointers arestored inBL_CK. Forthesingle column version, onebuffer isread. INTPKI restores theswitch andpointers andthenenters code common withZNTPKI. Atestismadetodetermine ifareadisnecessary (thisisalmost always required inthemulti-column version sinceonlyoneelement atatimeisread). Thenon-zero element ispicked up,converted ifnecessary, andstored in/ZNTPKX/. Itsrowposition isstored in/ZNTPKX/. Thenextwordinthecolumn isnowtested (areadbeing givenfirstifnecessary). Ifthe(integer) absolute valueofthisnumber islessthan16777215, thenumber istherow position ofthenextnon-zero element. If=16777215, itisthetrailer wordandthelastnon-zero element hasbeenread. InthiscaseE_LissettoI.If\u003e16777215, thenumber isarealnumber andtherowposition ofthenextnon-zero element equals thecurrent rowposition plusone.For themulti-column version, A,IandE_Laremoved from/ZNTPKX/ totheuser,andtheparameters are savedinBL@CK. 3.5-8 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.3.5 Design Requirements I.If_PT=RDC_R, thecalling module mustinitialize NAME nrior toeachcalltoINTPK see PNC_R (section 3.4.13). 2.Ifthesingle column version isused, subroutine UNPACK must notbecalled during interpretation ofacolumn, i.e., subsequent toacalltoINTPK andprior toareturn fromZNTPKI with EOL=I. 3.Theformat offloating point words oncomputers which execute thisprogram must besuch thatanynon-zero floating point word islarger inabsolute value thantheinteger 16777215. 4.When using thesingle column version, iftheuserdoes notcomplete interpretation of thecolumn, hemust insure thattheremainder ofthecolumn isskipped. Thismaybeaccomplished by IF(E_R.E.O) CALLFWDREC($n,NAME). 3.5.3.6 Diagnostic Messages Thefollowing messages maybeissuedbyINTPK: 3002 3003 3.5-9 (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.5.4 UNPACK (Unpack aPacked Column ofaMatrix). 3.5.4.1 EntryPoint: UNPACK. 3.5.4.2 Purpose Toreadandunpack acolumn ofamatrix stored inNASTRAN packed format. 3.5.4.3 Calling Sequence CALLUNPACK($n,NAME,A,_PT) C_N_I_N/UNPAKX/TYP@UT,I,N,INCR n F_RTRAN statement number defining return tobetakenifthecolumn isnull. PT=‘READ’, GIN_nameofdatablockcontaining thecolumn tobeunnacked.NAMEI t@PT ‘RDC@R’, anarraywherethepacked column isstored. IREAD’-c°lumn willbereadbyGIN\" }@PT = Subroutine name RDC@R’ -column willbereadfromcoreatNAME. A Anarraywhere theunpacked column willbestored. TYP@UT -Arithmetic typeinwhich theelements aretobestored atA(I=realsingle precision, 2=realdouble precision, 3=complex single precision, 4=complex double precision). TYP_UT _0meansthateachoftheelements willbestored withachange ofsign. I -Rowposition oftheelement tobestored atA(1). N -Rowposition ofthelastelement tobestored atA. INCR -Spacing oftheelements tobestored atAinunitsofelements, i.e.,if complex single precision elements aretobestored atA(1),A(5),A(7),etc., INCR=2. Notes: I.Zerosarestored forzeroelements. 2.IfI(0orN_O,thecolumn isunpacked fromthefirst non-zero element throuqh thelastnon-zero element andIandNaresettotheserowpositions. 3.Ifreturn tostatement nisgiven, zerosareno__ttstored atA. 3.5-10\nn r,_TRIX SUBROUTINE DESCRIPTIONS 3.5.4.4 Method Activity forthecolumn isinitiated byacalltoINTPK. Anon-standard return from INTPK results inanimmediate RETURN ltotheuser. ZNTPKI iscalled toobtain thefirst non-zero element. Ifitsrowposition islessthanI,ZNTPKI isrepeatedly called until arowposition mI orend-of-column isfound. Iftherowposition ofthefirst non-zero element isgreater than I, zeros arestored forthemissing elements. Eachnon-zero element whose rowDosition islessthan orequal toNisstored andzeros arestored formissina elements. Non-zero elements whose row positions aregreater thanNareskipped until theend-of-column isreached. 3.5.4.5 Design Requirements Seesubroutine INTPK (seesection 3.5.3). 3.5.4.6 Diagnostic Messages Inacoding sense messages 3002and3003arepossible. However, theyviolate thedesign of GINBor_PNC_R andtherefcre,if obtained, should indicate anobscure program design error or machine error. 3.5-11\nSUBROUTINE DESCRIPTIONS 3.5.5 CALCV (Compute aPartitioning Vector). 3.5.5.1 EntryPoint: CALCV. 3.5.5.2 Purpose Tobuildapartitioning vector ofzeros, onesandtwostobeusedbysubrGutines MERGE andPARTN. 3.5.5.3 Calling Sequence CALLCALCV(FILEP,SETI,SUBO,SUBI,C@RE) FILEP-GIN_filenumber ofpartitioning vector -integer -input. SET1-Bitposition ofmajorset-integer -input. SUBO-Bitposition ofzerosubset -integer -input. SUB1-Bitposition ofonesubset -integer -input. C@RE-Opencore. C_MM_N/PATX/LCORE,NSUBO,NSUBI,NSUB2,FUSET LC@RE-Length ofopencore-integer -input. NSUBO-Number ofrowsinzerosubset -integer -output. NSUBI-Number ofrowsinonesubset -integer -output. NSUB2-Number ofrowsintwosubset (notinoneorzerosubset) -integer -output. FUSET-FilenameofUSET-integer -input. 3.5.5.4 Method Eachelement ofUSETisexamined andclassified. Ifitbelongs toSET1itisfurther classified intoSUBO,SU31,andSUB2. Avector isconstructed whichhaszeros, onesandtwosinorderaselements ofUSETareso classified. 3.5.5.5 Design Requirements LC@REmustbe_twicelength ofGIN_buffer. 3.5.5.6 Diagnostic Messages System messages ifUSETorFILEParenotcorrect GIN_files. 3.5-12"},"title":"Programmer's Manual P27"},"/docs/programmers/programmers_manual_028/":{"data":{"":"MATRIXSUBROUTINE DESCRIPTIONS 3.5.6PARTN-MERGE (Partition aMatrix -MergeMatricies Together). 3.5.6.1 EntryPoint: PARTN, F,_RGE. PARTNandMERGE aretwodistinct routines butareso closely related thattheyaredescribed together here. 3.5.6.2 Purpose PARTNwillbreakupamatrix intofoursubmatrices. MERGE istheinverse ofPARTN inthatgiventhefourbuildina blocks AII,…,A22 MERGE willreconstruct [A]. 3.5.6.3 Calling Sequence CALLPARTN (RP,CP,Z) CALLMERGE (RP,CP,Z) RP-Matrix control blockoftherowpartitioning vector -integer -input. CP-Matrix control blockofthecolumn partitioning vector -integer -input. Z-Arrayofopencore. IfRP(1)_O,orCP(1)_O,thecorelocations fromRP(8)orCP(8)willcontain this vector inpacked form. IfRP(1)=CP(I) \u003c0thearrays RPandCPcoincide incore. C_MM_N/PARMEG/MCBA(7),MCBAII(7),MCBA21(7),MCBAI2(7),MCBA22(7),LC_RE,RULE MCBA -Matrix control blockfor[A]-input. MCBAII -Matrix control blockfor[All]-input. MCBA21 -Matrix control blockfor[A21]-input. MCBAI2 -Matrix control blockfor[AI2]-input. MCBA22 -Matrix control blockfor[A22]-input. Ifanysubmatrix isnotdesired ordoesnotexistsetMCBAij(1) =O. LC_RE -Length ofZarray -integer -input. RULE -Ruletobeapplied totherowandcolumn partitioning vectors -integer -input. 3,5-13\nSUBROUTINE DESCRIPTIONS 3.5.6.4Method Eachelementof[A]isassignedtotheappropriate submatrixbythefollowingschemes. RULE\u003e0N:IRULEI aij_[All]ifRP(1)=CP(J)=N aijE[A21]ifRP(1)=N,CP(J)PN aijc[AI2]ifRP(1)_N,CP(J)=N aijc[A22]ifRP(1)_N,CP(J)N RULE_0N=IRULEI aij[All]ifRP(1)mN,CP(J)N aij[A21]ifRP(1)_N,CP(J)_N aijE[AI2]ifRP(1)_N,CP(J)N aij[A22]ifRP(1)_N,CP(J)\u003cN Subroutine RULER(RULE,IP,ZCONT,@NCNT,LIST,NR_WP,BUFF,I_PT) iscalledtwicetoaccomnlish thisassignment where RULE-Ruletcbcapplied IP-EitherRPorCP ZC_NT-Numberofelements(roworcolumn)assignedtotheoneclass. _NCNT-Numberefelements(roworcolumn)assignedtothetwoclass. Forexample,ifRULERisanalyzingRPandRP(1)=NthiselementofRPissaidtobelongto the1classinthatitwillgoeitherto[All]or[A21]. LISTAlistofzerosandones.Zero,iftheelementbelongstotheoneclass. One,iftheelementbelongstothetwoclass. NR_WP-NumberofrowsinIP BUFFOneGIN_bufferspace I@PTIfI_PT=I,LISTwillbestored1numberperword.IfI_PT=O,LISTwillbe packed32bits/word. Non-zero_lementsareread,classified andoutput. 3.5-14\nI_TRIX SUBROUTINE DESCRIPTIONS 3.5.6.5 Design Requirements Opencoremustcontain nGIN_buffers +lcolumn (single precision) of[A]andlrow/32 of [A],where n=thenumber ofsubmatrices present plusone. 3.5.6.6 Diagnostic Messages Ifinsufficient coreisavailable asdescribed above, fatal message 3008isgiven. 3.5-15\nSUBROUTINE DESCRIPTIONS 3.5.7 SSG2A(Driver forPARTN). 3.5.7.1 EntryPoint: SSG2A. 3.3.7.2 Purpose Topartition avector intotwosubsets (i.e., tobeadriver forPARTN). 3.5.7.3 Calling Sequence CALLSSG2A(VECT@R,PARTI,PART2,PVECT) VECTOR -GI_filenumber ofvector tobepartitioned -integer -input. PART1 -GIN_filenumber ofmajorpartition -integer -input. PART2 -GIN_filenumber ofminorpartition -integer -input. PVECT -GIN_filenumber ofpartitioning vector -inteaer -input. C_MM_/PATX/XX X,NR_I, NR_!_2 Number ofrowsinPART1-integer -input. Number ofrowsinPART2-integer -input.NR@WI ,RG)W2 3.5.7.4 Method 3.5.7.5ThePARTNcommon blockisfilled. Basedonthetrailer ofVECTOR andI;ROWI, NR_VI2: {VECTOR} –\u003e#PARTI{ Design Requirements Opencoreisneeded at/SSGA2/. 3.5-16\n3.5.8 3.5.8.1 3.5.8.2SDRIB IDriver forMERGE). Entry Point: SDRIB Purpose Todrive MERGE forming VECTORMATRIX SUBROUTINE DESCRIPTIONS PART1 1I\"ECT_RI =IPART2 , 3.5.8.3 Calling Sequence CALLSDRIB(FVECT,PARTI,PART2,VECT_R,MAJ_R,SUBO,SUBI,USET,I_PT,IYS) PVECT -GINBnameofpartition vector -integer -input. PARTI -GINBnameofvector which corresponds toSUBOset-integer -input. PART2 -GINB nameofvector which corresponds toSUBIset-integer -input VECTOR -GIN_nameofmerged vector -integer -input. MAJOR -Bitposition ofsetofVECT@R -integer -input. SUBO -Bitposition ofsetofPARTI -integer -input. SUBI -Bitposition ofsetofPART2 -integer -input. USET GINBnameofUSET-integer -input. I@PT ‘0’These areusedinamodule specific callto handle theYSdatablock inaspecial manner. IYS -‘O’ 3.5.8.4 Method CALCV iscalled toobtain partitioning vector. PARMEG common block isfilled. MERGE iscalled. 3.5.8.5 Design Requirements Open coreat/SDRBI/. 3.5-17\nSUBROUTINE DESCRIPTIONS 3.5.9 UPART ISymmetric Partition Driver). 3.5.9.1 EntryPoints: UPART, MPART 3.5.9.2 Purpose Tocompute apartitioning vector andthenperform aseries ofsymmetric partitions. A symmetric partition issuchthattherowpartitioning vector equals thecolumn partitioning vector. Forexampl e: FKff Kfs_ [Knn] =_sfKss] 3.5.9.3 Calling Sequence CALLUPART(USET,SCRI ,MAJ_R,SUBO,SUBI) USET GINBFilenumber ofUSET-integer -input. SCRI Scratch fileonwhichthepartitioning vector willbewritten -integer -input. MAJOR -Bitposition within aUSETwordofthesuperset(e.g., nsetintheabove example) -integer -input. SUBO-Bitposition ofthefirstsubset (e.g., fsetintheaboveexample) -integer - input. SUB1-Bitposition ofthesecond subset (e.g., ssetintheaboveexample) -integer - input. CALLMPART(KNN,KFF,KSF,KFS,KSS) KNN-GINOnameofthematrix topartitioned -inteQer -input. KFF,KSF,KFS,KSS -GIN_namesofthepartition outputs. Azerowillcausetherespective matrix nottobewritten. 3.5.9.4 Method AcalltoUPARTcauses CALCVtocompute apartitioning vector. MPARTdrives PARTNandiscalled repeatedly topartition several matrices (i.e.KNN,MNN, BNN,K4NN) inasimilar symmetric manner usingthesamepartitioning vector. 3.5.9.5 Design Requirements Opencoreat/UPARTX/. 3.5-18\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.10 ADD(Driver forSADD) 3.5.10.I Entry Point: ADD. 3.5.10.2 Purpose Todrive SADDtocompute [X]=[A]+8[B]oronoption [X]=[A]. 3.5.10.3 Calling Sequence CALLADD(Z) Z–Array ofcore C_N/ADDX/MCBA(7),MCBB(7),MCBC(7),TYPA,ALPHA(4),LC_RE,TYPB,BETA(4) MCBA-Matrix Control Block for[A]-input. MCBB-Matrix Control Block for[B]-input. MCBC-Matrix Control Block for[X]-input. TYPA-Type ofAlpha -integer -input. |-rea|single precision 2-realdouble precision 3-complex single precision 4-complex double precision ALPHA -_-input -typedepends onTYPA. LC_RE -Length ofZarray. TYPB -Type ofBETA -integer -input. BETA -B-input -typedepends onTYPB. 3.5.10.4 Method ADDrearranges andmoves /ADDX/to/SADDX/,andcalls SADD tocompute [X]inabove equation. 3.5.10.5 Design Requirements Matrix addroutine ADDisreplaced bySADD. Therevised ADDroutine iskept inthesystem toaccommodate theexisting calls totheADDroutine. However, allfuture calls tomatrix addition should bemadedirectly toSADD. 3.5-19 (611171)\nSUBROUTINE DESCRIPTIONS 3.5.11 3.5.11 .I 3.5.11.2SSG2C IDriver forADD). EntryPoint: SSG2C. Purpose TodriveADDtocompute [C]=[A]+B[B]. 3.5.11.3 Calling Sequence CALLSSG2C (FILEA,FILEB,FILEC,I_P,BLOCK) FILEA-GIN_filenumber of[A]-integer -input. FILEB-GIN_filenumber of[B]-integer -input. FILEC-GIN_filenumber of[C]-integer -input. I_P-Option flag-integer -input. IFI_P\u003c0thefirstcolumn of[A]willbeaddedtoeachcolumn of[B]to give[C]. BLOCK -ll-word arraycontaining coefficients -input. Word Type Meanin 1 Integer Typeof 2 Real 3 4 5 6 Notused 7 Integer TypeofB 8 Real 9 B I0 II 3.5-20\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.11.4 Method Thetrailers ofFILEA andFILEB andBL_CK areusedtofilltheADDXcommon block. ThetypeofFILEC istheminimum typecompatible with _[A]andBIB]. 3.5.11.5 Design Requirements Opencoreat/SSGC2/. 3.5-21\nSUBROUTINE DESCRIPTIONS 3.5.12 3.5.12.1 EntryPoint: MPYAD. 3.5.12.2 Purpose Toevaluate thematrix equation D=[A][B][C] 3.5.12.3 Calling Sequence CALLMPYAD(Z,Z,Z)MPYAD (Matrix Multiplication Routine). orD=[A]T[B][C]. C_MMON/MPYADX/A(7),B(7),C(7),D(7),NZ,T,SIGNAB,SIGNC,PREC,SCR Z-Anareaofworking storage. NZ-Thenumber ofcomputer wordsatZ. A,B,C-Matrix control blocks forthematrices A,B,C. IfC(1)=O,Cisnotused,i.e.[D]=[A][B]or[AT][B]. D-Matrix control blockfortheproduct matrix. D(1)mustcontain theGIN_filenamepriortoentry. D(5)mustcontain thearithmetic typeoftheelements ofD.MPYADwillaccumulate D(2),D(6)andsetD(7)=O. T_=O,[A][B][C]iscomputed. O,+[A]T[B]_[C]iscomputed. J =I+l,compute +[A][B]or+[A]T[B]SlGNAB ,compute -[A][B]or-[A]T[B] _+I,use+CSIGNC t-l,use-C Note: IfC(1):O,SIGNCisignored. PREC SCR#,perform arithmetic insingle precision ,perform arithmetic indouble precision :GIN_filenameofascratch fileforusebyMPYAD. 3.5-22\nMATRIXSUBROUTINE DESCRIPTIONS 3.5.12.4Method I.GeneralComments. Twoalternative methodsofperforming thematrixmultiplication are availableinMPYAD.MethodOneholdsasmanyunpackedcolumnsoftheBandDmatricesascore storagewillallow.TheAmatrixisreadinterpretively byINTPK.Foreachnon-zeroelementin A,allcombinatorial termsforcolumnsofBcurrentlyincorearecomputedandaccumulated inthe storageforD.Atthecompletion ofonepassoftheAmatrix,thematrixproductiscompleteto theextentofthenumberofcolumnsofBcurrentlyincore.(IftheCmatrixispresent,columns areinitiallyunpackedintothestorageforD.)TheprocessisrepeateduntiltheBmatrixis exhausted. OneGINObufferonlyisrequiredforMethodOne.ThenumberofpassesoftheA matrixforMethodOneequalsthenumberofcolumnsofBdividedbythenumberofcolumnsofBand Dwhichcanbeheldincoreatonetime.InMethodTwoeitheroneelementofB(T=O)orone columnofBinunpackedform(T=I)isheldincoreatonetime,andeitheronecolumnofDin unpackedform(T=O)oroneelementofD(T=I).Theremainingstorageisallocatedtostorage ofcolumnsofAinpackedfor,-(i.e.,nonzero^ms:,andr_p_s_+onsv.._nly)v…FOr…..allthecolumns ofAinstorageatonetimetheBandEmatricesarepassed,columnbycolumn,formingpartial answersoneachpass.TheEmatrixisinitiallytheCmatrix(ifpresent)andthereafter isthe partialproductmatrixfromthepreviouspass.ThreeGINObuffersarerequiredforMethodTwo. ItmaybeseenthattheAmatrixispassedonceandthenumberofpassesoftheBandEmatrices equalsthenumberofcolumnsofAdividedbynumberofcolumnsofAthatmaybeheldincoreat onetime. 2.Initialization Phase.Thearithmetic typeoftheelementsofDisdetermined asa functionofthetypesofA,BandCandtheprecisionrequestedbytheuser.Variouspointers forbothMethodsOneandTwoarecomputed. Adetermination ofsufficient corestorageismade (oneunpackedcolumnofBplusoneunpackedcolumnofDplusoneGINBbuffer).Theexecution timesforMethodsOneandTwoareestimated. Themethodgivingtheminimumexecutiontimeis selectedforuse. 3.5-23 (811172)\nSUBROUTINE DESCRIPTIONS 3.Method One.Theallocation ofcorestorage forMethod Oneisshownbelow: JZBorJZDB——,- NZZ NZ1 dll d21 d12 d22 d.2 dlr d2r d\" nr bll b21 bml b12 b22 bm2 blr b2r b’ mr GINBbufferIstcolumn ofD(NDwords) 2ndcolumn ofD ‘rthcolumn ofD Istcolumn ofB(NRwords) 2ndcolumn ofB rthcolumn ofB 3.5-24\nMATRIX SUBROUTINE DESCRIPTIONS Columns ofBandCarereadandunpacked byUNPACK. INTPK iscalled toinitiate reading and interpreting the_thcolumn ofA(_=linitially). Foreach non-zero terminA,ai_oraci depending onT,thefollowing arithmetic computations aremade: T=O:dij :ai_b_j+dij T_O:d_j=a_ibij+d_j where jrunsacross thecolumns ofBandDcurrently incore. Attheconclusion ofapassofthe Amatrix, thecolumns ofDincore arepacked andwritten byPACK. Themrocess isremeated until themultiplication iscomplete. 4.Method Two. Theallocation ofcorestorage forMethod Twoisshown onthenextpage. 3.5-25\nSUBROUTINE DESCRIPTIONS AC_RE FIRSTL BUF3 BUF2 BUFID- p. L v v NZ—–_Storage foronecolumn of DorB No.n.z.termslRow pos.of instring iIstn.z.termI Non-zero terms i No.n.z.termsiRow pos.of instring iIstn.z,term I Non-zero terms No.strings inIstcol.ofA Pointer toIstcol.ofA GIN_buffer GINBbuffer GINObufferINDorNB Firststring Laststring Column definition words-backward stored DMatrix A\u0026BMatrices CMatrix 3.5-26 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS Tobegin each passofMethod Two, asmanycolumns ofAthatcanbeheldincorearereadusing INTPK andstored incore instrings. Eachstring consists ofastring definition word followed by consecutive terms ofacolumn such thatnotwoconsecutive terms arezero. Foreachcolumn there exists apairofcolumn definition words –onepoints tothefirst string inthecolumn andthe other defines thenumber ofstrings inthecolumn. Thenumber ofpasses isdetermined bythesize anddensity oftheAmatrix. Thefollowing operations areperformed forthenontranspose case: I.UNPACK iscalled tounpack thenextcolumn ofCintotheDmatrix area. 2.INTPK iscalled toreadthenon-zero terms ofthecorresponding column ofB. 3.MPY2NT iscalled toperform theoperation dik=aijbjk+Cik.Eachnon-zero element ofB(bjk) will confine withallnon-zero elements inthejthcolumn ofAandaddtothe corresponding elements inthekthcolumn ofDincore. 4.Whenallcolumns ofAincorearecomplete, thecolumn ofDispacked andwritten by PACK. 5.Whenallcolumns ofBandCarecomplete, atestforcompletion ofthemultiplication ismade. 6.Ifincomplete, theCandDfiles areswitched andtheprocess described above is repeated. Thefollowing operations areperformed forthetranspose case: I.UNPACK iscalled tounpack thenextcolumn ofBintocore. 2.INTPK iscalled toreadthenon-zero terms forthecorresponding column ofC. 3.BLDPK iscalled toinitiate thepacking ofacolumn ofD. 4.MPY2T iscalled toperform theoperation dik=_aijbjk core.+Cikforeach rowofAin 5.Th?elements ofDarepacked using ZBLPKI. 6.Whenallcolumns ofBandCarecomplete, atestforcompletion ofthemultiplication ismade. 7.Ifincomplete, theCapdDfiles areswitched andtheprocess described above isre- peated. 3.5-27 (8/I/72)\nSUBROUTINE DESCRIPTIONS If,aftercompletion ofMethod Two,therehasbeenanevennumber ofpasses oftheBmatrix, FILSWI iscalled toswitch theDmatrix fromascratch filetoitsassigned unit. 3.5.12.5 Auxiliary Subroutine MPYQ l• 2.EntryPoints: MPYI,MPY2NT, MPY2T. Purpose: MPYQiscalled onceperexecution ofMPYAD. Itperforms general initialization foreachoftheotherentrypoints. MPYI,MPY2NT, andMPY2Tperform theinnerloopsforMethod One,Method Two (non-transpose), andMethod Two(transpose) respectively. Forefficiency these routines arewritten inassembly language foreachofthemachines. 3.5.12.6 Auxiliary Subroutine FILSWI I• 2.EntryPoint: FILSWI Purpose: Auxiliary subroutine toswitch unitreference numbers in/XFIAT/ inthe eventthattheproduct matrix inMethod Twoendsuponascratch file(evennumber ofpasses ofBmatrix). 3.5.12.7 Design Requirements Corestorage mustbesufficient toholdoneunpacked column ofBplusoneunpacked column of DplusoneGIN_buffer. Thematrices tobemultiplied (andadded) musthavecompatible dimensions. MPYADdoesnot checkthis. 3.5.12.8 Information Messages CONMSG iscalled atentryandatexitfromMPYAD. Consequently, thelinexxxxxMPYADwill appear twiceforeachcalltoMPYAD(where xxxxx=timeinseconds). Thedifference isthe execution timeforMPYAD. MPYADmethod selection dataisprinted undercontrol ofDIAG19. 2102LEFT-HAND MATRIX ROWP_SITION OUT_FRANGE -IGNORED. AtermintheAmatrix whoserowposition islarger thanthestated dimension wasdetected andignored. 3.5-28 (8/I/72)\nMATRIXSUBROUTINE DESCRIPTIONS 3.5.12.9 Diagnostic Messages Thefollowing messages maybeissued byMPYAD: 3001 3002 3008 3.5-28a (8/I/72)\n3.5.13 3.3.13.1 3.5.13.2 orI,TRIX SUBROUTINE DESCRIPTIONS SSG2B (Driver forMPYAD). Entry Point: SSGZB. Purpose Todrive MPYAD tocompute [D]=L[A][B]L[C] [D]=[A]T[B]_[C] 3.5.13.3 Calling Sequence CALLSSG2B(FILEA,FILEB,FILEC,FILED,T,PREC,ISIGN,SCRI) FILEA -GINBnameof[A]-integer -input. FILEB -GIN_nameof[B]-integer -input. FILEC -GINBnameof[C]-integer -input. FILED -GINB nameof[D]-integer -input. T -Transpose flag-integer -input. T-Oimplies use[A] T=limplies use[A]T PREC -Precision ofcomputation -integer -input, l=realsingle precision, 2=realdouble precision, 3=complex single precision, 4=complex double precision. ISIGN -Signofproducts -integer -input. Isign [AB]=sign (ISIGN) ISIGN =_1:\u003e(sign [C] sign(ISIGN) IISIGNi _l=\u003e+ [AB]-[C] IISIGNI\u003c1=\u003e-[AB]+[C] SCRI-GIN_scratch file-integer -input. 3.5.13.4 Method SSG2Bfills/MPYADX/ andcallsMPYADtocompute [D]inaboveequation. 3.5.13.5 Design Requirements Opencoreat/SSGB2/. 3.5-29\nSUBROUTINE DESCRIPTIONS 3.5.14 SDC_rlP (Symmetric Decomposition). 3.5.14.1 EntryPoint: SDCOMP. 3.5.14.2 Purpose Todecompose arealsymmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa unitlowertriangular matrix and[D]adiagonal matrix stored inplaceoftheunitelements on thediagonal of[L].Onoption, theCholesky decomposition [A]=[C][C]Tisdoneforareal, positive definite matrix, withonlythelowertriangle [C]bein9output. thedeterminant of[A]. 3.5.14.3 Callin? Sequence CALLSDC_MP($n_,Z,Z,Z) COMM_N/SFACT/A(7),L(I),C(7),SCRI,SCR2,NZ,DET,P_WER,CNLSKY A(7) Matrix control blockfor[A]. L(7) Matrix control blockfor[L]. C(7) -Matrix control block for[L]Tor[C]. SCRI,SCR2-Twoscratch files. NZ DETSDC_MP willalsocompute -Thenumber ofcomputer wordsatZ. -Double precision cellwhere thescaled valueofthedeterminant of[A]will bestored. P_VER -Scalefactor tobeapplied toDET(Determinant =DET*IO**P_!,fER). CHLSKY -WhenCHLSKY =I,form[C] Anareaofworking storage. Statement number towhichcontrol istransferred ifthedecomposition fails.Z nl 3.5.14.4 Method I.lathematical Considerations. Anynon-singular realsymmetric matrix [A]canbeuniquely decomposed intothefactors [A]=[L][D][L]T.Theelemer:ts of[D]and[L]aregivenby: i-I di=aii-r.‘ikdk k=l 3.5-30\n_TRIX SUBROUTINE DESCRIPTIONS j-l Cij=[aij-kZ=lLikdk\"tjk]/dj 2.General Comments. Interpretation oftheabove equations identifies that element _ijis composed ofproducts oftheelements intheithrowof[L]times the_lements inthejthrowof [L]times thediagonal elements of[D](Figure l). Also, element Cijaffects only theelements in theithrowortheithcolumn of[L], (Figure 2). Theabove considerations indicate themeans ofoptimizing thedecomposition process toher- form only thenecessary operations andtokeep elements incore only aslong asneeded. Asan example, if[A]wasstrictly banded, with abandwidth ofB,then theinner product calculation of Cijextends only totheband asallother terms arezero (Figure 3). Also inthis example, all terms of[L]incolumn 5affect only theelements inside thetriangle. Assoon asthese terms arecomputed, column 5need notbeheld incore. Theoptimum algorithm forbanded matrices would betohold thetriangular portion oftheband incore, compute terms corresponding tothefirst column, output thefirst column, andmove thetriangular area down theband (Figure 4). Inpractice, however, structural matrices arenotstrictly banded, butsemi-banded with c fewscattered terms existing outside theband. Thebasic algorithm remains thesame excent that theterms outside theband (active elements) must behandled inananalogous manner tothose inside theband (band elements). This creates arectangular storage area forthe_ctive rows (rows of[L]which co_tain atleast oneactive element) plus asecond traingular area forterms arising outofinteractions between active rows. Thestorage requirements areshown inFigure 5. Given amatrix [A], SDCOMP will determine theoptimum combination ofB(bandwidth), and C(number ofactive rows) byestimating thetime required todecompose [A]forallcombinations ofBandCandchoosing thepair corresponding totheminimum time. Figures 6,7,and8show howstorage isallocated tovarious operations. 3.5-31"},"title":"Programmer's Manual P28"},"/docs/programmers/programmers_manual_029/":{"data":{"":"SUBROUTINE DESCRIPTIONS lOI ,..,..,……. ___ 0:::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n0,_ I_ Figure I.Computation ofelement ij: ,o.o:[a_o.-‘IO. ‘0,-’o,.….’,o.°,’,,J/ F \":’:’.’.’.’;\":’::’\": i:i:!iiii:i[iii!i!iiiili!i_ili!:! _i,i.% li:i:li:i:i Figure 2.Affect ofelement _ijo 3.5-32\nMATRIX SUBROUTINE DESCRIPTIONS I0)iii)iii)i_iiiiii!)iiiiiiiiiii)i)liiiii)iii_)i!iiiii )i)iii!iiii)iiii!iiiiil)iiiiiiiiiiilili!iiiil)lliii!!)ii ‘,’,’,Jiiii’ii’:’,’,i’,’,’,’,iii{’,i’,ii!i’’,!,’,’i’!’_! ‘iii!’,ii’:l ii!!i!i’,ii’,’,ii’,i’,lii’,’,’,’,i)ii’iii’?ii i_i::iiiiiilii’,iiiili!i’,’,ii’,!!’,li’,’,.’,…J…. _ iliiiiiii!liliiii!iiiliiii_ilililliiii| i,# Figure 3.Computation ofelement ij(banded matrix): o,:[°o.o-,o..o.q/ B !i!iiiii!ili_ii!iiiiii!iiiiiiiii!ii!iiiiii) _ii)i)iiiii’i!iiiiiililiiiiii!! ii!’,iiiii_i Figure 4.Corestorage require_nts forabandedr_atrix. 3.5-33\nSUBROUTINE DESCRIPTIONS ,,,,,,,,,,,,,,iiiiiiii!ii_iiiiiiiiii_iiiiiiiiii •:’:’:’:’:’’’!i :::::::i:i:! ooooo_i_i|i_i_i_i_I_i_i_i_i_i_i1_i. i_i!i_!!iii!i!i!!:i_i!ii_!ii!ii_!ii!ii_I_ii_i!iii!i:i!i_iii:iiIi!ii!ii_!iiiiii_!_!_iii!!_i!ii!ii! Figure 5.Corestorage requirements foramatrix v,it,,active rows. 3.5-34\nMATRIX SUBROUTINE DESCRIPTIONS IStorage forthepartially computed elements of[L]thatarewithin theband. IIStorage foracompleted column of[L]. IIIStorage forthenextcolumn of[A]tobereadin. IVStorage forthepartially computed elements of[L]thatareoutside theband. VStorage forintermediate results computed frominteractions between activerows. –12 B II i r-123II!Z\",, ,llr!!\nB-1I I I SPILL C rI\n;If\n½14SP- 14 A__‘V C V– ,qmB IIV I I B+IpLU_I;IS -t L v I—c—-I Figure 6.Definition ofstorage areas. 3.5-35\nSUBROUTINE DESCRIPTIONS Biiiiiii!iii_} i:i:!:! ii!!i!iiiiiiii i_!}iiiiiiii !iiiiiiiiiiiii:::::::i!iiiii :!i?}ii!i!!i!i ::::::::}:i:i:} ::::;:: iiiiiii X0 X_iiiiiii_iiiiii!l_ iiiiiiiliiiiiiiil__’’…….!ii:!:! iiii!iii_i_i_ii_iiiiiiii_ ,,-\u003c 00X 000 X0::::::: ::::::: }}!_ii:i:i:i / D 0 0 0.:.:.:. ……\n:.:.: ,…… •:.:.: \u003e:.:.: [IJ V –°’ 00 00 00!!!!i::::i::ii_il i#i;i_iil}ili_i) :,:.»: \u003e:.x. ….. .\u003e:.\u003e: i!i_iiiiii:::::::: :::::::::…….. 000 000 oioo I 11i!i!iiiii!!iii!i!i!!iiiiiiii:.:.:.:.: :.:.:.:.:..:.:.:.:. ………… ,:.:.:.:. ::::::::: :::::::::: :.:.:.:.: o}}iiii_i;i::;:;::;: 000 000.:.:.:.:.:, .:.:.:.: :.:.:.:.:. :.:.:.:. :::::::::::i:i:i:i.;.:.\u003e:.: …….. :i:i:!:i:i:!:!:!:! ….. ……•i!iiiiiiii!iiiiiiii| }:!:!:!:::!}:!:}:1::!:1i1::::: :.:.:.:.:. ;:;:::::::: ::::::::::!:::: :::::::::: ::::::::: :::::::::: ::::.i,i.11i}iii …….iliii?ili’,ii’,iili’i’i’i’i________ :}:i:i:i:ii_i!ili_i_!ililiiiiii_ !!i!i!i!i! ili_iiiiili_i_ili_iiI_i_i_i_iiiiliiiiiiiiiiiliiiiiiiiiifiiiiiit_ Figure 7,Location ofstorage areaswithin thematrix, 3.5-36\nMATRIX SUBROUTINE DESCRIPTIONS 11 I3 14 15 12 NZIll IV II UNUSED CORE I/OBUFFERS Figure 8.Location ofstorage areas within core. 3.5-37\nSUBROUTINE DESCRIPTIONS (1) (2) (3) (4) (5)ENTER Initialize Parameters IMakeI/0Passon[A] toGenerate theBvs.C Vector andCopy[A] ontoanAlternate File Obtain theOptimum BandC.Compute R Allocate Core IFilltheInitial Tri- angle (AreaI).Usea Scratch FileforColumns ifR\u003eB-1 J YES ReadBandPortion oftheNextColumn of[A]intoAreaIllProcess the FinalTriangle(ll) NO Generate theCHOLESKY Matrix [C] (13) Figure 9.(a) SDCO_iP prograr, lflow(12) REWRITE [L] 3.5-38\nMATRIX SUBROUTINE DESCRIPTIONS C=O? YES C=O? (6) Active Row YES AddColumn of Interaction Elements (Area V)into Area IV IMerce Active Row (Area IV)into Area III I Reduce theSize of | theInteraction TriangleRead Active Element Portion oftheNext Column of[A] NOC7) IAddElement into IExisting Row(Area IV) Create NewRow inArea IV lExpand Interaction Triangle forNewRow Figure 9.(b) SDC_iIP program flow 3.5-39\nSUBROUTINE DESCRIPTIONS (8) (9)YMovetheFirstColumn of AreaIintoAreaIIand Divide bytheDiagonal I MoveFirstColumn of J Active Elements (AreaIV) IintoAreaII Compute Interactions Between Active Elements andAddthem into Area V AddContributions oftheJ Current Pivitol Column J into Area I,Moving itUp asYouProceed AddTermstotheActive Rows(AreaIV)and MoveItUp (I0)Write OutCompleted Column of[L](Area II) BumpColumn Counter Figure 9.(c) SDCOilP program flow 3.5-40\nMATRIX SUBROUTINE DESCRIPTIONS 3.Program Flow. Theflowchart inFigure 9gives thelogical flowofSDC_MP. Thefollowing arecomments expanding oncertain areas oftheflowchart: (1)Allocate buffers, initialize determinant,andwrite header records. (2)Avector isgenerated containing thenu_er ofactive rowsforvarying bandwidths. Thematrix [A]iscopied ontoanalternate fileforuseduring thedecomposition. (3)Theestimated timefordecomposition iscomputed foreachcombination ofBandC. TheBandCcorresponding totheminimum timeispicked. R,thenumber ofcolumns which canbeheldincore, isalsoco_uted atthistime. (4)Pointers tothevarious areas ofcoreshown inFigure 6arecomputed asafunction ofB,CandR. (5)Thebanded portion ofthefirst B-lcolumns of[A]arereadintoArea I.IfR_B-l, columns arewritten onascratch file. (6)Asthedecomposition proceeds, active rowsgradually merge intotheband. This means acolumn fromArea Vwillmerge intoAreaIVandarowfromArea IVwill merge intoArea III. When thisoccurs, thecurrent nu_er ofactive rowsdecreases byoneandthesizeoftheinteraction triangle isreduced. (7)Asactive elements corresponding tothenextcolumn of[A]arereadin,theyare either added toanalready existing active row,oranewactive rowmust becreated. Whenever anewrowiscreated, indices arestored identifying therow,theactive element isstored inArea IV,andtheinteraction triangle isexpanded toaccomodate theadded row. (8) Asacolumn emerges fromthetriangle inArea I,itisacompleted column of[L]. (9) Before thecolumn canbeoutput, allterms involving thiscolumn mustbecomputed andstored. These intermediate terms arestored ineither Areas I,IV,orV,denend- ingwhere theelements arelocated. (lO) Acolumn of[L]canbeoutput. Allareas oftemporary storage havebeenupdated. Areas I,IV,andIllhaveallmoved overonecolumn relative totheir previous position inthematrix. 3.5-41\nSUBROUTINE DESCRIPTIONS (ll)Whenallcolumnsof[A]havebeenreadin,allactiverowshavemergedandonlyArea Iexists.Thisfinaltriangleisprocessedtocompletethecomputation of[L].If spillexists,asmorecoreismadeavailablebycolumnsof[L]beingoutput,addi- tionalcolumnsofthespillfilearereadin. (12)Thefilecontaining [L]isnowcomplete. Anadditional fileiscreatedwiththe columnsof[L]writteninthereverseorder.Thisgeneratesapseudoupnertri- angularmatrixthatisusedbyFBSforthesolutionofasetofequations. (13)IfCHLSKYwasset,[L]isread,thediagonaltermpickedup,eachcolumnis multiplied bythesquarerootofthediagonal,andtheresulting[C]matrixis output. AuxiliarySubroutines Subroutine Name:L_P Purpose:Tocomputetheinnerarithmetic loopofSDCOMP. 3.5.14.6 DesignRequirements Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomnosition is donewithoutpivoting. Corestoragerequirements deDendontheparameters BandC.ForagivenBandC,AreasII, Ill,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GINBbuffers.3.5.14.5 Filescontaining [L]and[L]T standard NASTRAN format. 3.5.14.7 l•should beusedasinput only toFBSastheyarenotin Information Messages C@NMSG iscalledatentryandexitfromSDCBMP. Theline xxxxSDC_MP willappear twiceperdecomposition. Theexecution timeofSDC_MPwillbethedifference inthe times(wherexxxxx=timeinseconds). 3.5-42\nMATRIXSUBROUTINE DESCRIPTIONS 2.Message3023givesthevaluesoftheparameters, B,C,andRchosenforthedecomposition. 3.Message3027givestheestimatedtimeinsecondstodothedecomposition. 4.Message3024indicatesthatamatrixhasscatteredtermswayoffthediagonal(i.e.,a largebandwidth). Insteadofsearchingallcombinations ofBandC,thesearchisstarted atthemaximumbandwidth. 3.5.14.8 Diagnostic Messages I.IfSDC_MPwasunabletofindacombination ofBandCwhichwouldmeetcorerestrictions, fatalmessage3008occurs. 2.Inacodingsense,message3025ispossible. However,itviolatesthedesignofSDC_MP andtherefore, ifobtained,shouldindicateanobscureprogramdesignerror,ormachineerror. 3.Message3026indicatesthatsufficient spacewasnotreservedforthegeneration ofthe Bvs.Cvector.SDC_MPshouldberecompiled toincreaseBMAXandCMAX. 3.5-43(8/I/72)\nSUBROUTINE DESCRIPTIONS 3.5.15 DECAMP (Unsymmetric Matrix Decomposition) 3.5.15.1 EntryPoint: DECAMP 3.5.15.2 Purpose Todecompose arealsquare matrix [A]intotheform [a]=[L][U] (where [L]isaunitlowertriangular matrix, and[U]isanuppertrianaular matrix), using partial pivoting within thelowerband. 3.5.15.3 Calling Sequence CALLDECAMP ($n,X,X,X) C_MM_N /DC_MPX/ A(I),L(7),U(I),SCR(3),DET,P_WER,NX,MINDIA,B,BBAR,C,CBAR,R n X A L,U SCR(3) - DET - P_WER - NX MINDIA -Statement number towhichcontrol istransferred if[A]issingular. Anareaofcoreavailable toDECAMP. Matrix control blockfortheinputmatrix [A](ifA(1)\u003cO,avoid re-writing [U]inreverse order). Matrix control blocks fortheoutput matrices [L]and[U]. GINOfilenamesforthreescratch files-integer. Double precision cellwhere thescaled value ofthedeterminant of[A] willbestored. B,BAR, 1C,CBAR, R(i) Scalefactor tobeapplied toDET(det([A]) =DET*IO**P@WER). Number ofcomputer wordsavailable atX. Double precision wordwhere thevalueoftheminimum diagonal of[U]is stored. Integer values describing theupper andlowersemi-bandwidths, number ofactive rowsandcolumns andnumber ofcolumns of[L]heldincore,usedtodecompose [A]. (IfB,BBAR=O,GENVEC iscalled tocompute theparameters before de- composing [A].IfB,BBAR#O,thegivenparameters areusedfordecomposition). 3.5-44 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.15.4 Method l.Mathematical Considerations: Byexpanding Equation l,introducing element notation, andforming themultiplication, wecansolve fortheelements of[L]and[U]. These equations aregiven by: j-l ij=[ai.i-k_l_ikUkj]/uij’ i\u003ej (2) i-l uij=aij-Z_ikUkj ,i\u003cj (3)k=l 2.General Comments: Theimplementation oftheabov ecuations isaccomplished with several constraints inmind. Thedecomposition proce Jreisoptimized suchthatthe minimum number ofoperations isperformed, with theminimum amount ofcoreused. To accomplish this, theelements oftheinput matrix [A]areseparated intotwogroups: terms inside theband (band elements), andterms outside theband (active elements). Also, pivoting isusedonlywithin thelower bandtoavoid unnecessarily filling the matrix with non-zero terms. Since, inpractice, structural matrices tendtobesemi-banded withscattered terms existing outside theband, thisdivision ofthematrix should optimize thedecomposition process. Several parameters aregenerated todescribe thisdivision. Bisdefined as theupper bandwidth, nasthelower bandwidth, Cisdefined asthenumber ofactive columns, andCasthenumber ofactive rows, where anactive column isdefined asacolumn con- taining oneormoreactive elements above thediagonal, andanactive rowcontains oneormore active elements below thediagonal. Corresponding tothese parameters, several storage areas aredefined tohold thevarious parts ofthematrix. Thedescription andlocation ofthese areas aregiven inFigures l,2and3.Aflowchart forDECAMP isgiven inFigure 4. Thestorage areas in IStorage for IIStorage for IIIStorage for IVStorage for VStorage for VIStorage for VIIStorage forFigures I,2,and3aredefined asfollows: thecompleted columns of[L]still required forcomputation. thecurrent column being computed. active column elements. active rowelements. elements created byinteractions between active rowandcolumn elements. indexes identifying active columns. indexes identifying activ) rows. 3.5-45\nSUBROUTINE DESCRIPTIONS lISP 11 lI +1 R \\II IPAK V13SP—- -_+1 22-ff+B C _J,I,I IIIIIIII i IVl VII C/2 C/2 Figure I.Definition ofstorage areas forDECO;IP. 3.5-46\nMATRIX SUBROUTINE DESCRIPTIONS B iilili-i_iiiiiiii ,-°°.°., ,’.:.:.: ,.-.-.:.i::iii::ooo iiii!iii–iiiooo ii_iiiiiiiiiii::i_iiiiiooo ii:i-i_iiiiilii!iiiiiiii..-..:i,: ooo iii!iiii:::::.:.:.iiiiii::i-iii:joo !iiiiiii-ii!i!i*!:i:.o:.:..,!i!iiiiiii_iiiiiiiiiiio !iii!!ii_iiilii!ili_ili:,iiiiiii::i-i!iiiiiii-!i!•:-:-:..;-:.;\u003c r.:.’.’, ll;i;i:i-:i:!.i.i!iil:i?iiiliii_iiii:::::::?:: li!!::ii_!iill_iii-::i_i::ii::i.ii_i i!iii-iil_i!iiiii I–i_C.:;; \\X 0 II 0 00 I 0X 000 00 .::..:::::::-’:::-’n_00 010 i::’:\"::;:::::.’.,i’.\"..\"oooolo ,...:.-,,—.;::i:::i:-ii!ii-,!!.:.-\"_ioo_o!o ®iii\"i_ii_i oooo ’-’.’-’-…..,::-::-{i:’: 00 ……i_iiooo ;:-’:::::!Ii-i::iiiii::ii!iioo …..:.,, ;-:-:.:-’….. i :o°o’;‘I ,-°-°-°-, ‘o i\":’:’:’__ili:i:i:i:i!;.i!:.:.:.:,:!::::::i!.!!iiii::xoooooooo_i_i…Jl xooooooooFi!::iii_iiiiiiK’;i_.–:’,-.__\"-’.—–.’:\",.-…..…….:-.:.’ xooooooooo:i!!iiiii_ii!i_iiiiii_iiIII Figure 2.Location ofstorage areas within thematrix 3.5-47 (311171)\nSUBROUTINE DESCRIPTIONS 12 13 14 15 16SP 17SP NZII III IV Vl Vll UNUSED CORE I/0BUFFERS Figure 3.Allocation ofcore forDECAMP 3.5-48\nMATRIX SUBROUTINE DESCRIPTIONS (1) (3) (4) (B)ENTER Initlallze IParameters . YES @NO PicktheOptimum B,B,C,C,R (GENVEC) Initialize Pointers toVariousCore Areas Transpose the Active Column Terms (TRANSP)(2) Solve aMatrixof Order1or2 (NETW)RETURi_ YES (6) Generate Active Columns I Corresponding toActive l.__ Elements intheFirst | B+1Rowsof[A] | Figure 4.(a)DECgMP programflow 3.5-49\nSUBROUTINE DESCRIPTIONS (7) (8) (9) (I0) (ll)ES Read Band Portion of Ainto Area Ill Read Active Row Termsinto Area IV NO AddActive Column (Area III) into Area I! AcldInteraction Terms (Area V)toArea IV. ! Operate ontheCurrent ) IColumn of[A]by All lPrevious Columns of[L] Compute theElements forActive Rows(22) Finish OutputingColumns of[L], Re-write [U] (FINWRT)RETURN (12) ISearch theLower Band of1 _Area IIfortheMaximun _ a “IElementandInterchange iIRowstoMove ittothe I JDlagor_1 . Figure4.(b) DECAMP Program flow 3.5-50\nMATRIX SUBROUTINE DESCRIPTIONS (13)] (14) (15) (16) (17) (18)?Interchange Active Column Elements and AddinTerms from LastColumn of[L] Output Column of[U] PlusActive Column Terms Compute Active Row- ColumnInteraction Elements MoveElements in Area IllOneRowUp Output Column of[L] ‘4ove Elements ofArea Over OneColumn. Add Lower BandofArea II toArea IMove Elements of Area IVOverOne Column ReadNextRowof Active Column Elements(19) (2o) ZeroArea II Merge Interaction Elements intoAreaIII ifNecessary(21) Figure 4.(c) DECAMP program flow 3.5-51"},"title":"Programmer's Manual P29"},"/docs/programmers/programmers_manual_030/":{"data":{"":"SUBROUTINE DESCRIPTIONS 3.Program Flow: Theflow chart inFigure 4gives thelogical program flow ofDECOMP. Thefollowing comments expand oncertain portions oftheflow chart: (1) Allocate buffers, initialize thedeterminant, andwrite header records. (2) Iftheorder of[A]islor2,subroutine NETW iscalled tohandle the decomposition. (3) IfBandBareinput aszero, GENVEC iscalled topick theoptimum parameters fordecon_position. (4) Thepointers into thevarious areas ofcore shown inFigure larecomputed. (5) Ifthere exist active elements intheupper triangle, TRANSP iscalled to transpose these elements. (6) Active columns areinitialized forallcolumns having anactive element within thefirst B+lrows of[A]. (7) Theband portion ofthenext column of[A]isread into Area II. (8) Anyactive elements occurring below thediagonal inthecurrent column are added into existing active rows, ornewactive rows arecreated. (9) When anactive column merges into theband, acolumn from Area IIIisadded into corresponding positions inArea II,andacolumn ofinteraction elements inArea Visadded totheactive rowterms inArea IV. (lO) Thecurrent column of[A]inArea IIisoperated onbythecolumns of[L] stored inArea I. (ll) Terms corresponding toactive rows notyetmerged into theband areadded into Area II. (12) Thelower band portion ofArea IIissearched forthemaximum element. Rows areinterchanged tobring ittothediagonal position, andtheinterchange index isstored inArea I. (13) Active columns elements areinterchanged corresponding totheinterchange within theband. Ifacolumn of[L]isabout tobeoutput (i.e., B+ columns of[L]arestored inArea I_terms arising from that column areadded into theactive columns. 3.5-52\n_TRIX SUBROUTINE DESCRIPTIONS 3.5.15.5(14)Thecolumn of[U]fromArea IIplusarowofactive column terms inArea III areoutput. (15)Ifactive rowsandcolumns exist, terms arising fromtheir interaction are computed andadded intoArea V. (16)Elements intheactive columns aremoved uponerowposition inArea Illto replace theoutput elements, andmake roomforanewrow. (17) Thefirst column of[L]inArea Iiswritten outifArea Iisfull. The active rowelements belonging tothatcolumn arealso output. (18) Thecolumns of[L]inAreaIaremoved overonecolumn andthelower band portion ofArea IIisstored inArea I. (19) Active rowsinArea IVaremoved over onecolumn. (20) Thenextrowofactive elements intheupper triangle of[A]isread. Elements areadded toexisting active columns, ornewcolumns arecreated. (21) Whenpossible, arowofinteraction elements inArea Vismerged intothe bottom rowofactive columnelements (Area III). (22) After processing allcolumns of[A],FINWRT iscalled tocomplete the outputting of[L]andtore-write [U]. Auxiliary Subroutine TRANSP I.Entry Point: TRANSP 2.Purpose: Todoanin-core transpose oftheactive elements occurring outside theband andintheupper halfofthematrix (i.e., transpose allelements aijsuchthatj-i\u003e_B). 3.Calling Sequence: CALLTRANSP (X,X,NX,A,B,SCRFIL) X NX A B SCRFIL -Anareaofcoreavailable toTRANSP. Number ofwords available atX. GIN_filecontaining theinput matrix [A]-integer. Upper bandwidth ofmatrix [A]. GIN%filewhere transposed elements arestored. 3.5-53\nSUBROUTINE DESCRIPTIONS 4, theuppertriangle arestored incore,alongwiththeirrowandcolumn position. isthensearched andelements output intransposed order.Method: Theinputmatrix [A]isread,andallelements occurring outside thebandin Thislist 3.5.15.6 Auxiliary Routine NETW EntryPoints: @NETW_,FINWRT Purpose: @NETW@ isaseparate routine whose soleresponsibility istosolvematricesI° 2. oforderoneortwo. FINWRT isasection ofcodeseparated fromDECAMP duetocompiler overflow. Its function istofinish outputting theremaining columns of[L]andtore-write thecolumns of[u]. Auxiliary Subroutine GENVEC EntryPoint: GENVEC Purpose: Topicktheoptimum B,B,C,C,andRforagivenmatrix [A]. Calling Sequence: CALLGENVEC ($nI,BUF,A,NX,X,N,B,BBAR,C,CBAR,R,IENTRY) Statement towhich control istransferred ifanullcolumn isdiscovered in[A]. -Location ofaGINBbuffer. -GIN_filecontaining theinputmatrix [A]. -Anareaofcoreavailable toGENVEC. -Number ofwordsofcoreavailable atX. Theorderofthematrix [A]. lnteger output parameters giving theoptimum values fortheupperandlower -_bandwidths, thenumber ofactive rowsandcolumns, andthenumber ofcolumns I _of[L]heldincore. I_1implies DECAMP called GENVEC. -2implies CDC_MP called GENVEC Thefollowing logicflowgivesthemeans bywhich theoptimum bandwidths are3.5.15.7 I. 2. 3. nI BUF A X NX N B,BBAR, C,CBAR, R IENTRY 4.Method: chosen. 3.5-54\nI.tATRIX SUBROUTINE DESCRIPTIONS A.Locate extreme non-zero terms I.Initialize active column list tozero. Thelength ofthelist isequal tothe maximum value oftheupper bandwidth (B)that isofinterest. _lO5 (BmaxNMB,ortheorder oftheproblem, whichever isless, where Nistheorder of thematrix andMBisthearithmetic time in_seconds forperforming onemultiply and oneadd. 2.Initialize thecolumn list tozero. Thelength ofthelist istheorder of theproblem. 3.Locate thenon-zero elements inthenext column ofthematrix. 4.Insert thecolumn number ofallnon-zero elements inthecorrect rowoosition ofthecolumn number list with thefollowing constraints: a.Consider only elements inthelower triangle. b.Donotinsert column numbers inrowpositions already occupied. 5.Insert therownumber ofthenon-zero element located inthelowest numbered rowinto thecolumn position oftherownumber list forthecurrent column under consideration. 6.Return tostep 4until allcolumns ofthematrix have been processed. B.Determine active columns I.Zero counter E SetCounter FtoN-l SetCounter GtoN-l SetCounter Hto2 2.Beginning with thelast entry intherownumber list, subtract thecurrent value ofcounter H,andtest foranegative sign. Ifnegative, increment counter Ebyone. 3.Thecurrent value ofcounter Eisthenumber ofactive columns when theupper bandwidth isequal tothecurrent value ofcounter F.Compare counter Ewith the existing entry intheactive column list forthebandwidth indicated bycounter F. Update theactive column list ifcounter Eisgreater than theexisting entry. 4.Decrement counter Fbyone. Return tostep 2unless counter Fiszero. 3.5-55\nC. D°SUBROUTINE DESCRIPTIONS 3. 4. 5. 6. 7. 8.5.Decrement counter Gbyone. Increment counter Hbyone.Setcounter Ftothe valueofcounter G.Zerocounter E.Return tostep2unless counter Giszero. 6.Thefinalactive column listcontains themaximum number ofactive columns for bandwidths ofunitythrough themaximum upperbandwidth investigated. 7.Prepare reduced active column listbyextracting pairs-minimum Band associated Cforunique values ofC. Determine active rowsforgivenBand I.Extract pairs (rownumber, L,andcolumn number, K)fromthecolumn number listforwhich L-K\u003e_ 2.Consider anewlistofpairsconsisting ofKandL+B.Foreachpair (K,L+B)determine thenumber ofremaining pairs(Ki,(L+B)i)forwhich Ki\u003cL+Band(L+B)i\u003e__K 3.Themaximum number ofpairssatisfying therelation instep2foranysingle pairisCforthegivenBandB. Select B,B,Cand_forMinimum Decomposition Time I.Select thenextvalueofBandassociated Cfromthereduced active column list(begin withmaximum Bofinterest). 2.Assume B=andC=C. Calculate RandTwithpreliminary timing equations. Savetheminimum Tandtheassociated BandC. Return tostep1unless allentries inreduced active column listhavebeenused. Ifthematrix isunsymmetric useBandCfromstep4andset=B. Determine CforagivenBandB. Calculate RandTwiththepreliminary timing equations. 9.Compare withtheprevious minimum T. 3.5-56\n3.5.15.9 I. 2. 3. 4.MATRIX SUBROUTINE DESCRIPTIONS lO.IfthenewTexceeds theprevious minimum bymorethan20%orB=maximum B ofinterest goto12. II.Savetheminimum Talong withassociated B,,Cand.Increment by2%of theBassociated withminimum Tandgoto7. 12.Return toB=B. 13.Decrement Bby2%oftheBassociated withminimum Tanddetermine the associated C. 14.Calculate RandTwiththepreliminary timing equations. 15.Compare withtheprevious minimum Twhile decrementing . 16.IfthenewTexceeds theprevious minimum bymorethan20%orB=2goto18. 17.Savetheminimum Talong withassociated B,B,Cand_andgoto13. 18.Savevalues ofB,B,Cand_associated withtheminimum value ofTfrom upsearch anddownsearch onB:foruseindecomposition. Auxiliary Function FINDC Entry Point: FINDC Purpose: Tofindthenumber ofactive rows()foragiven Band. Calling Sequence: CALLFINDC (B,BBAR,N,X,Y,CBAR) B BBAR - N X Y CBAR - Method:Upper bandwidth -integer. Lower bandwidth -integer. Order oftheproblem. Column number list. Scratch vector. Thenumber ofactive rows, C. SeestepCintheGENVECmethod. 3.5-57\nSUBROUTINE DESCRIPTIONS 3.5.15.10 Auxiliary Routine TIMEEQ I.EntryPoints: T,TFIN,RC_RE 2.Purpose: Tocompute thepreliminary andfinaltiming equations fordecomposition, andtocompute thecoreallocation function. 3.Calling Sequences: CALLT(B,BBAR,C,CBAR,R,IENTRY,N,TIM) CALLTFIN(B,BBAR,C,CBAR,R,IENTRY,N,TIMEX) CALLRC@RE (B,BBAR,C,CBAR,N,IENTRY,NX,R) B,BBAR Upperandlowerbandwidths, number ofactive rowsandcolumns. C,CBAR, - I__implies entrywasfromDECAMP. IENTRY -implies entrywasfromCDC_MP. N Theorderoftheproblem. TIM Floating pointvalueforthepreliminary time. TIMEX Floating pointvalueforthefinal timing equation. NX Number ofcorewordsavailable toDECAMP orCDC_MP. R Thenumber ofcolumns of[L]thatcanbeheldincore(output byRC_RE, inputtoTandTFIN). 4.Method: Thefollowing equations areevaluated togive’the desired output. A.CoreFunction R=(NX-((B+B+I)+2IENTRYMINO(N,B +B+B)+ 2IENTRYC*(B +2)+2CIENTRY*(MINO(B +B,N)+I)+ 2IENTRYCC +C+CIENTRY +C)-6SYSBUF)/(2IENTRY*B) B.Preliminary Timing Equation TIM-N[MBBR+Mc(BC+BC+BC+2CC)+IB(B+B-R-I)] 106 where MB=Arithmetic timein_seconds foroneterminside theband. Mc=Arithmetic timein_seconds foronetermintheactive rowor active column.(4) (5) 3.5-58 (12-I-69)\nMATRIX SUBROUTINE DESCRIPTIONS whereI=I/timein_seconds foroneterm. C.Final Timing Equations TIMEX isafunction ofTl,T2,T3andT4asdefined below(P=matrix packing timein_seconds foroneterm), Tlisgiven by: Tl=K1[MBBR +IB(B+B-R)+P(B+2)] , (6) whereKl=I_-B-2_‘ifN-B-2_\u003e0,ifN B2_\u003c0 . T2isgiven by: K2 t2=-[BK2MB+(K3-R)(I-MB)+2PB+PK2] ,(7) (8) ifN_B+2B;otherwise,K2=K3=B+ (9) andK2=N-B , (I0) whereK3 T3isgiven by: T3Ii+BifN_B +BifN\u003cB+B :_-M8+ I+P_K 5(ll) (12) DK4=B+B-R,ifB-R\u003c_0,ifB R\u003eO(13) 3.5-59\n3.5.15.11and ifN\u003eB+2B. and l° 2. inDECAMP.Otherwise, T4isgivenby: Finally,SUBROUTINE DESCRIPTIONS T = 4K5=B+{B , Ii-R,ifN-R\u003cBK4= ,IfN R\u003eB K5:N (N-B)[Mc(BC +BC+BC+C_)+P(C+)]. TIMEX =(T1+T2+T3+T4)I0-6 whereTIMEX isthetotalestimated timefordecomposition. Auxiliary Subroutine DL@P EntryPoints: DL@OP,DDL@@P,XL@_P Purpose: Toimprove efficiency ofF_RTRAN generated codeforseveral loops 3.5.15.12 Design Requirements Corestorage requirements depend ontheparameters B,B,CandC.(14) (15) (16) (17) (18) Areas II,III,IV,andV mustreside incoreatalltimes, alongwithaminimum oftwocolumns ofAreaI,andfiveGINO buffers. GENVEC isdesigned topickthecombination ofB,B,C,and_suchthatthenroblem willallocate ifatallpossible. Thefilecontaining [U]isnotinstandard format, astheactive column termsarestored outofplace. Forthis reason [L]and[U]should beused asinput only toGFBS oranassociated routine. 3.5-60\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.15.13 Information Messages I.C_NMSG iscalled atentry andexitfromDECOMP., Theline XXXXDECOMP willappear twice perdecomposition. Theactual execution timeofDECQMP will bethe difference inthetimes (where XXXX=timeinseconds). 2.3023 B=XXX C=XXX R=XXX 3028 BBAR=XXX CBAR=XXX R=XXX These messages givetheparameters chosen forthedecomposition. 3.3027DECQMP_SITIQN TIME ESTIMATE =XXX Gives theestimated timeforthedecomposition inseconds. 3.5.15.14 Diagnostic Messages Fatal error massages 3008and3025mayoccur. 3.5-61\nSUBROUTINE DESCRIPTIONS 3.5.16 CDC_MP (Complex Matrix Decomposition) 3.5.16.i EntryPoint: CDC_MP 3.5.16.2 Purpose Todecompose acomplex square matrix [A]intotheform[A]=[L][U] where[L]isa unitlowertriangular matrix and[U]isanuppertriangular matrix. 3.5.16.3 Calling Sequence CALLCDCOMP ($nI,X,X,X) C_MM_N /CDCMPX/ A(I),L(7),U(I),SCR(3),DET(2),P@WER,NX,MINDIA,B,BBAR,C,CBAR,R n1 X A L,U SCR(3) BET(2) P_WER - NX MINDIA - B,BBAR, C,CBAR, - RLocation incalling program wherecontrol istransferred if[A]issinqular. Anareaofworking storage. Inputmatrix control blockfor[A]. Output matrix control blocks for[L]and[U]. Threescratch filesavailable foruse. Twodouble precision wordswhere therealandimaginary values ofthe determinant arestored. Scalefactor tobeapplied tothedeterminant (det([A])=DET*IO**P_WER). Number ofcomputer wordsatX. Double precision wordwherethemodulus oftheminimum diagonal element of[U]isstored. lfB:BBAR=O,compute andstoreB,BBAR,C,CBAR,R before decomposing [A].IfBorBBAR#O,usepreviously stored values ofB,BBAR,C,CBAR andRfor decomposing. 3.5-62\nMATRIXSUBROUTINE DESCRIPTIONS 3.5.16.4 Method CDCOMPissimplyacopyofDECOMPwiththearithmetic statements replacedbycomplex arithmetic. Pointerstostorageareasweremodifiedtoaccommodate theextrawordsneeded. 3.5.16.5 AuxiliarySubroutine CTRNSP Purpose:ComplexversionofTRANSP(seeSection3.5.15.5). 3.5.16.6 AuxiliarySubroutine COM12 Purpose:ComplexversionofBNETW_(seeSection3.5.15.6) 3.5.16.7 AuxiliaryRoutineCLOOP Innerlooproutine. 3.5.16.8 AuxiliaryRoutineCXLOOP Innerlooproutine. 3.5.16.9 DesignRequirements Seesubroutine descriptions forDECAMP,Section3.5.15. 3.5.16.10 Diagnostic Messages Seesubroutine descriptions forDECOMP,Section3.5.15. 3.5-63 (811172)\nSUBROUTINE DESCRIPTIONS 3.5.17 3.5.17.1 EntryPoint: FBS. 3.5.17.2 PurposeFBS(Forward -Backward Substitution). Giventhedecomposition ofarealsymmetric matrix [A]=[L][D][L]TFBSwillperform the forward-backward passnecessary tosolvethesystem oflinear equations [A][X]=[B]. 3.5.17.3 Calling Sequence CALLFBS(Z,Z) C(_MMON/FBSX/L(7) ,U(7),B(7),X(7),NZ,PREC,SIGN L,U Matrix control blocks fortheloweranduppertriangular factors output #rom SDC(_MP. B,X-Matrix control blocks forthematrices [B]and[X]. NZ-Number ofcomputer wordsatZ. _I,perform arithmetic insingle precision.PREC 2,perform arithmetic indouble precision s° ve=,solve [A][X] -[B]. Z -Anarea ofworking storage. 3.5.17.4 Method Mathematical Considerations. Given theunit upper andlower triangular matrices [L]and [L]T,with thediagonal matrix [D]stored over their diagonals, FBSsolves thetwosystems of equations given by [L][Y]=+[B] and [L]T[X]:[D]-I[Y] 3.5-64\nMATRIX SUBROUTINE DESCRIPTIONS Elements [Y]and[X]aregiven by i-I Yij =bij-kZ=l£ikYkj n xij=Yij/di -kZ=i+l£ki xij Program Flow. Overall program flowisidentical tothatofGFBS (seeSection 3.5.19). The onlydifference inthetworoutines isthatFBSusesthedecomposed matrices output fromSDC_MP, while GFBSusesthose output byDECAMP. Likewise, thecomputed equations differ slightly. 3.5.17.5 Auxiliary Subroutine FBSDP l° 2. 3. 4° 3.5.17.6 I. 2. 3. .Entry Point: FBSDP Purpose: Inner looproutine fordouble precision forward andbackward substitution. Calling Sequence: CALLFBSDP (X,Y,N,M) D_UBLE PRECISION X(1),Y(1),A COMM_N /ZNTPKX/A X-Input vector/output vector Y-Input vector N-Looplimit M SkipIndex Method: Xi=Xi-AYi,i=I(M)N AuxiliarySubroutine FBSSP Entry Point: FBSSP Purpose: Inner looproutine forsingle precision forward andbackward substitution. Calling Sequence: CALLFBSSP (X,Y,N,M) DIMENSION X(1),Y(1) COMM_N IZNTPKXIA X Input vector/output vector Y Input vector N Looplimit M SkipIndex Method: xi=Xi-AYi, i=l(‘1)N 3.5-65 (8/I/72)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.17.7 Design Requirements Onecolumn of[B]andoneGIN_ buffer must fitincore. 3.5.17.8 Diagnostic Messages SeeGFBS (Section 3.5.19). 3.5-65a (8/I/72)\nSUBROUTINE DESCRIPTIONS 3.5.18SSG3A IDriver forFBS). 3.5.18.1 EntryPoint: SSG3A. 3.5.18.2 Purpose Tosolve[A][X]=[B]using [A]=[L][L]T.Onoption tocompute theresidual matrix [RES]=[A][X]-[B]. 3.5.18.3 Calling Sequence CALLSSG3A(FILEA,FILEL,FILELT,FILEB,FILEX,SCRI,SCR2,1RES,FILER) FILEA -GIN_filenameof[A]-integer -input. FILEL -GIN_filenameof[L]-integer -input. FILELT -GIN_filenameof[L]T-integer -input. FILEB GIN_filenameof[B]-integer -input. FILEX GIN_filenameofIX]-integer -input. SCRI GINBnameofscratch file-integer -input. SCR2 GIN_nameofscratch file-integer -input. IRES -Option forresidual vector -integer -input. IRES=0suppresses calculation ofresidual vector. FILER -GIN_filenameofresidual vector -integer -input. 3.5.18.4 Method /FBSX/ issettocompute [A][X]=[B]. SSG2Biscalled tocompute [RES]:[A][X]-[B](seesection 3.5.17.3). Foreachcolumn of[X],{Xi},ciiscomputed. _i={xi}T{RESi}/{Bi}T{xi } 3.5.18.5 Design Requirements Opencoreat/SSGA3/. 3.5-66\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.19 3.5.19.1 Entry Point: GFBS. 3.5.19.2 PurposeGFBS (General Fo_vard -Backward Substitution). Given thedecomposition ofageneral square matrix [A]=[L][U],GFBSwillsolve thesystem ofequations [A]IX]=[L][U]IX]=[B] 3.5.19.3 Calling Sequence CALLGFBS (Z,Z) COMMON/GFBSX/L(7),U(7),B(7),X(7),NZ,PREC,ISIGN L,U,B,X -Matrix control blocks forthematrices [L],[U],[B],and[X]. X(5) NZ PREC ISIGN Z 3.5.19.4Method-Desired output typefor[X]. -Number ofcomputer words available atZ. O,usesingle precision arithmeticJ 2,usedouble precision arithmetic {I:solve [A]IX]=+[B].,solve [A][X]:-[B]. -Anareaofworking storage. I.Mathematical Considerations. Given [L],[U](nbynlower andupper triangular matrices) andB GFBSsolves thetwosystems ofequations ELIEY]=[B] and [U]IX]=[Y] 3.5-67\nSUBROUTINE DESCRIPTIONS Elements of[Y]and[X]aregiven by i-I = _hikYkj (I)Yij bij k=l n xij=[Yij -Z (2) b=i+l uikXkj]/uii 2.Initialization Phase. Thetype ofarithmetic tobeperformed iscomputed asafunction ofthetype of[L], [B], andtheprecision requested bythecalling routine. Corresponding transfer vectors aresetuptotransfer control totheproper arithmetic computation. Core storage isfilled with asmany columns of[B]aspossible. 3.Forward Pass. Theintermediate values of[Y]arecomputed directly over thecolumns of [B]currently incore. This isaforward pass on[L]since itisread sequentially forward. Interpretation ofEquation lshows that Yljiscomplete after thefirst column of[L]hasbeen read, Y2jafter column 2,etc. Elements of[L]areread oneatatime viaINTPK andthe appropriate term subtracted off. 4.Backward Pass. Elements of[X]arecomputed byprocessing [U]inthereverse order. Reading thelast column of[U]completes Xn,j,then-lcolumn of[U]gives Xn_l, j,etc. Inorder tofacilitate tilereading ef[U], itwaswritten inthereverse order byDECAMP, allowing a forward pass tobemade inactuality. 5.Output Phase. Thefinished columns of[X]arepacked andoutput viaPACK. Ifmore columns of[B]still exist, core isonce again filled with vectors of[B]andtheprocess repeated until allcolumns of[X]have been computed. 3.5.19.5 Design Requirements Atleast onecolumn of[B]must beunpacked incore, along with oneGINB buffer. 3.5.19.6 Diagnostic Messages Ifinsufficient core isavailable forGFBS, fatal message 3008 occurs. Ifadiagonal term does notexist foracolumn of[U], fatal message 3005 occurs. This is noramlly detected inDECAMP implying care wasnottaken inprocessing singular matrices inthe calling routine calling DECOMP. 3.5-68\nMATRIX SUBROUTINE DESCRIPTICNS 3.5.20 3.5.20.1 3.5.20.2S_LVER (Simultaneous Equation Solution Routine). Entry Point: S_LVER. Purpose Toperform thefollowing three functions: I.Solve [A][X]=-[B]forXwhere Aisarealsymmetric matrix which hasbeen decomposed bySDC_MP. 2.Evaluate thematrix equation [E]=[D]+[B]T[X] 3.Onoption, compute c:E]L[LL ]tED]II 3.5.20.3 Calling Sequence CALLS_LVER(L,U,X,B,D,E,EPS,FLAG,SCR) where: L,UaretheGINBfilenames ofthedatablocks containinq thelower andumDer trianaular factors ofA,respectively. XistheGIN_filenameofthedatablock where thesolution matrix willbewritten. BistheGINBfilenameofthedatablock containing theright handmatrix in[A][X]=-[B] D,EaretheGIN( filenames ofthedatablocks inEquation (2)above. EPSistherealsingle precision result ofthedivision inEquation (3). SCRistheGINBfilenameofascratch fileforusebyS(.LVER. FLAG_ O,compute _fromEquation (3)above andstore inEPS O,donotcompute E /S(_LVRX/isopencoreforS_LVER Note: I. 2.Lmustbeoutput fromsubroutine SDC_MP. IfD=A,thenEistheerror residual matrix. 3.5-69\nSUBROUTINE DESCRIPTIONS 3.5.20.4 Method /FBSX/ isinitialized andFBSiscalled tosolve[A][X]=-[B]. /MPYADX/ isinitialized andMPYAD iscalled tocompute [E]=[D]+[B]T[A].FLAGis tested. IfFLAG=O,return ismade. Otherwise, INTPKiscalled tounpack andinterpret each non-zero termofE.Thecumulative sumoftheabsolute valueofallnon-zero termsofEis formed indouble precision. Thisoperation isthenperformed onD.Finally Eisthedivision ofthesetwoquantities andisstored inEPSinsinQle precision. 3.5.20.5 Design Requirements /S_LVRX/ mustbeinserted attheendoftheoverlay segment containing S@LVFR. 3.5.20.6 Diagnostic Messages Thefollowing system fatalmessage maybeissued byS_LVER: 3001 3.5-70"},"title":"Programmer's Manual P30"},"/docs/programmers/programmers_manual_031/":{"data":{"":"MATRIX SUBROUTINE DESCRIPTIONS 3.5.21 3.5.21 .I 3.5.21.2DMPY {Multipl XaDiagonal Matrix bXanArbitrary Hatrix). Entry Point: DMPY. Purpose Topreorpostmultiply anabritrary matrix [B]byadiagonal matrix, i.e.[C]=[D][B] or [C]=[B][D]. 3.5.21.3 Calling Sequence CALLDMPY(Z,Z) C_I_ON/DMPYX/D(7),B(7),C(7),NZ,FLAG,SIGN Z-Anareaofworking storage. )-Thenumber ofcomputer words atZ. D-Matrix control block forthediagonal matrix. B-Matrix control block forthegeneral matrix. C-Matrix control block fortheproduct matrix. C(1)mustcontain theGIN filenameprior toentry. C(5)mustcontain thearithmetic typeoftheelements ofC. DMPYwillaccumulate C(2)andC(6)andsetC(7)=O. C(3)andC(4)maybesetbytheuserbefore orafter thecall. _=O,pre-multiply BbyD.FLAGm O,post-multiply BbyD. _+l,formpositive product.SIGN t-l,formnegative product. 3.5.21.4 Method Thetype ofarithmetic isdetermined (real orcomplex). Theelements ofthediagonal matrix, D,areunpacked atZ.INTPK isused toreadandinterpret thenon-zero elements ofB, column bycolumn. Thefollowing equations areused: Pre-multiplication: cij=dibij Post-multiplication: cij=bijdj 3.5-71\nSUBROUTINE DESCRIPTIONS 3.5.21.5 Design Requirements Double precision arithmetic isusedthroughout. Theamount ofcoreatZmustbesufficient toholdtheunpacked diagonal termsofDand twoGIN_buffers. Thedimensions ofDandBmustbecompatible although thisisnotchecked. 3.5.21.6 Diagnostic Messages Thefollowing system fatalmessages maybeissued byDMPY: 3001 3002 3.5-72\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.22 3.5.22.1 Entry Point: ELIM. 3.5.22.2 PurposeELIM (Perform aMatrix Reduction). Toperform amatrix reduction onthestructural model bycomputing thematrix equation: [Kii] =[-Kii]+[_i]T[Gj] +[Gj]T[Kji ]+[Gj]T[_Kjj] [Gj] 3.5.22.3 Calling Sequence CALLELIM(KIIB,KJIB,KJJB,GJ,KII,SCRI,SCR2,SCR3) where KIIB, KJIB, KJJB, GJandKIIaretheGINBfile names ofeachofthematrices inthe above equation. SCRI, SCR2andSCR3areGINOfilenames ofthree scratch files usedbyELIM. OpencoreforELIMisdefined by/ELIMX/. 3.5.22.4 Method FIIMcomputes theabove matrix eq,,ation bythree successive calls toMPYAD: These areas follows: [SCRI] =[_j] [Gj]+g[ji] [SCR2] =[_i]T[Gj]+[_i] =[Gj]T[SCRI] + [Kii] [SCR2] 3.5.22.5 Design Requirements /ELIMX/mustbeincluded attheendofthesegment inwhich ELIMresides. 3.5-73\nSUBROUTINE DESCRIPTIONS 3.5.23 3.5.23.1 3.5.23.2FACTOR (Decompose aMatrix IntoTrianqular Factors). EntryPoint: FACTOR. Purpose Todecompose asymmetric matrix intoitstwotriangular factors. 3.5.23.3 Calling Sequence CALLFACTOR (A,L,U,SCRI,SCR2) whereA,L,UaretheGINOfilenamesofthedatablocks forthesymmetric matrix tobe decomposed, itslowertriangular factor anditsuppertriangular factor, respectively. IfUis negative, FACTOR willdecompose thesymmetric matrix [A]onfileAsuchthat [A]=[C][C]T, where theCholesky decomposition isused. [C]willbewritten onUasalowertriangular matrix. Lwillcontain thelowertriangular factor ofastandard non-Cholesky decomposition. SCRIand SCR2areGIN_filenamesoftwoscratch filesforusebyFACTOR. Thecommon block/FACTRX/ is opencoreforFACTOR. 3.5.23.4 Method FACTOR initializes /SFACT/ andcallsSDC_MP toaccomplish thedecomposition. 3.5.23.5 Design Requirements /FACTRX/ mustbeincluded attheendofthesegment which contains FACTOR. 3.5.23.6 Diagnostic Messages Thefollowing system fatalmessage maybeissued byFACTOR: 3005 3.5-74 (12-I-69)\nMATRIX SUBROUTINE DESCRIPTIONS 3.5.24 TRANPI (Driver forTRNSP). 3.5.24.1 Entry Point: TRANPI. 3.5.24.2 Purpose Todrive TRNSP tocompute [B]=[A]T. 3.5.24.3 Calling Sequence CALLTRANPI(FILEA,FILAT,NSCRTH,SCRI,SCR2,SCR3,SCR4,SCR5,SCR6,SCR7,SCRS). FILEA -GIN_nameof[A]-integer -inDut. FILAT -GIN_nameof[A]Tinteger -input. NSCRTH- Number ofscratch files -integer -input. SCRI, …,SCR8-GIN_names ofscratch files -integer -inoJt. 3.5.24.4 Method /TRNSPX/i__tha_d onthetrailer ofF!LEA= 3.5.24.5 Design Requirements Open coreat/DTRANX/. 3.5-75\nSUBROUTINE DESCRIPTIONS 3.5.25 TRNSP (flatrix Transpose). 3.5.25.1 EntryPoint: TRNSP. 3.5.25.2 Purpose Tocompute [A]Tgiven[A]. 3.5.25.3 Calling Sequence CALLTRNSP(Z) Z-Arrayofcore. C_MM@N/TRNSPX/MCBA(7),MCBAT(7),LC_RE,NSCRTH,SCR(8) MCBA -Matrix control blockfor[A]-input. MC3AT Matrix control blockfor[A]T-input. LC_RE -Length ofZarray-integer -input. NSCRTH -Number ofscratch filesavailable -integer -innut. SCR -ListofGIN_namesofscratch files-integer -input. 3.5.25.4 Method Threemethods arepossible:1_-NSCRTH _-8. Method 1-In-core matrices. Ifthefullmatrix canbeheldincore, [A]isunpacked intocore,andpacked outonto[A]T. Method 2-Simple sub-matrices. Thematrix [A]isbroken uponecolumn atatimeintosubmatrices. Thesubmatrices arewritten onscratch files, readinandtransposed oneatatime. Thebreak-un of [A]canbepictured asfollows: [A]:SCRATCH 1 SCRATCH 2 SCRATCH 3 etc. 3.5-76\nMATRIX SUBROUTINE DESCRIPTIONS Ifinsufficient scratch files areavailable tohold[A],multiple passes mayben;ade Method 3-Multiple passes onsubmatrices. Ifmultiple passes on[A]arenecessary inMethod 2,itmaybemoreefficient to create larger submatrices andpasseachsubmatrix several times rather thanseveral passes on[A]. Thebreak-up of[A]canbepictured asfollows: [A]=C_RE L@ADl __C_RE £eAD_2 CeRELBAD3u I\nC_RA!C ]_ i……. ISCRATCH 2 C_REL_AD4 etc. TRNSP will choose between themethods tominimize running time. 3.5.25.5 Design Requirements rlethods 2and3require atleast onescratch file. Neither [A]nor[A]Tmaybepurged. Oneunpacked column of[A]andNSCRTH+I GIN_buffers mustfitintocore. 3.5.25.6 Diagnostic Hessages Amessage indicating insufficient coreisproduced ifthethird oftheabove requirements isnotsatisfied. Either reduce thenumber ofscratch files orincrease theopencore available toTRNSP. 3.5-77\nSUBROUTINE DESCRIPTIONS 3.5.26 SADD(Matrix Addition Routine) 3.5.26.1 EntryPoint: SADD 3.5.26.2 Purpose Tocompute [X]=[A] +B[B]+y[C]+6[D]+[E] 3.5.26.3 Calling Sequence CALLSADD (Z,Z) Z–Array ofcore COMMON/SADDX/NOMAT,LCORE,MCBA(7),TYPA,ALPHA(4),MCBB(7),TYPB, BETA(n),MCBC(7),TYPC,GAMMA(4),MCBD(7),TYPD,DELTA(4), MCBE(7),FYPE,EPSLN(5),MC(7) NOMAT -Number ofmatrices tobeadded -integer -input. LCORE -Length ofZarray -integer -input. MCBA -Matrix Control Block for[A]-input TYPA -TypeofALPHA -integer -input l-realsingle precision 2-realdouble precision 3-complex single precision 4-complex double precision ALPHA -_-input -typedepends onTYPA MCBB -Matrix Control Block for[B]-input TYPB -Type ofBETA -integer -input BETA -B-input -typedepends onTYPB MCBC -Matrix Control Block for[C]-input TYPC -TypeofGAMMA -integer -input GAMMA -y-input -typedepends onTYPC MCBD -Matrix Control Block for[D]-input TYPD -TypeofDELTA -integer -input DELTA -6-input -typedepends onTYPD 3.5-78 (611/71)\nMATRIX SUBROUTINE DESCRIPTIONS MCBE -Matrix Control Block for[E]-input TYPE -Type ofEPSLN -integer -input EPSLN -c-input -type depends onTYPE MC -Matrix Control Block for[X]-input 3.5.26.4Method Thetype ofarithmetic isdetermined tobethemaximum type of[A], [B], [C], [D], [E], ,B,y,6,e. Initially acolumn of[X]iszeroed out. Each nonzero element of[A]isobtained byZNTPKI, multiplied by,andadded into acorresponding position of[X]. After processing acomplete column of[A], columns from matrices [B], [C], etc., aretreated inasimilar manner. When thecontribution from thelast matrix hasbeen added in, acomplete column of[X]isoutput viaPACK. This procedure isrepeated until all columns ofIX]areoutput. 3.5.26.5 Design Requirements Zmust besufficient tohold oneunpacked column of[X]plus nGIN_ buffers (where n=N_MAT+I). 3.5-79 (6/I171)\nSUBROUTINE DESCRIPTIONS 3.5.27 3.5.27.1RSPSDC (RealSingle Precision Symmetric Decomposition) EntryPoint: RSPSDC 3.5.27.2 Purpose Todecompose arealsymmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa unitlowertriangular matrix and[D]isadiagonal matrix stored inplaceoftheunitelements on thediagonal of[L].Onoption, theCholesky decomposition [A]=[C][C]Tisdoneforareal, positive definite matrix, withonlythelowertriangle [C]beingoutput. RSPSDC willalsocompute thedeterminant of[A]. 3.5.27.3 Calling Sequence CALLRSPSDC ($nI,Z,Z,Z) C_MM_N/SFACT/A(7),L(7),C(7),SCRI,SCR2,NZ,DET,P_WER,CHLSKY A(7) Matrix control blockfor[A]. L(7) Matrix control blockfor[L]. C(7) Matrix control blockfor[L]Tor[C]. SCRI,SCR2 Twoscratch files. NZ Thenumber ofcomputer wordsatZ. DET Double precision cellwhere thescaled value ofthedeterminant of[A]will bestored. P_WER-Scalefactor tobeapplied toDET(Determinant =DET*IO**POWER). CHLSKY -WhenCHLSKY =I,form[C] Z Anareaofworking storage. nz Statement number towhichcontrol istransferred ifthedecomposition fails. 3.5.27.4 Method Themethod usedbyRSPSDC isidentical tothatusedbySDC_MP (Section 3.5.14) except that allcomputations aredoneinsingle precision. 3.5.27.5 Auxiliary Subroutines Subroutine Name: RSPL_ Purpose: Tocompute theinnerarithmetic loopofRSPSDC. 3.5-80 (8/I/72)\nMATRIXSUBROUTINE DESCRIPTIONS 3.5.27.6 DesignRequirements Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomposition is donewithoutpivoting. Corestoragerequirements dependontheparameters BandC.ForagivenBandC,AreasII, III,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GIN_buffers. Filescontaining [L]and[L]TshouldbeusedasinputonlytoFBSastheyarenotinstandard NASTRANformat. Information Messages C_NMSGiscalledatentryandexitfromRSPSDC.Theline xxxxRSPSDC willappeartwiceperdecomposition. TheexecutiontimeofRSPSDCwillbethedifference in thetimes(wherexxxxx=timeinseconds). 2.Message3023givesthevaluesoftheparameters, B,C,andRchosenforthedecomposition. 3.Message3027givestheestimatedtimeinsecondstodothedecomposition. 4.Message3024indicatesthatamatrixhasscatteredtermswayoffthediagonal(i.e.,a largebandwidth). Insteadofsearchingallcombinations ofBandC,thesearchisstarted atthemaxi_lumbandwidth. 3.5.27.8 Diagnostic Messages I.IfRSPSDCwasunabietofindacombination ofBandCwhichwouldmeetcorerestrictions, fatalmessage3008occurs. 2.Inacodingsense,message3025ispossible. However,itviolatesthedesignofRSPSDC andtherefore, ifobtained,shouldindicateanobscureprogramdesignerror,ormachine error. 3.Message3026indicatesthatsufficient spacewasnotreservedforthegeneration ofthe Bvs.Cvector.RSPSDCshouldberecompiled toincreaseBMAXandCMAX. 3.5-81(8/i/72)\nSUBROUTINE DESCRIPTIONS 3.5.28 CSPSDC (Complex Single Precision Symmetric Decomposition) 3.5.28.1 EntryPoint: CSPSDC 3.5.28.2 Purpose Todecompose acomplex symmetric matrix [A]intotheform[A]=[L][D][L]Twhere [L]isa unitlowertriangular matrix and[D]adiagonal matrix stored inplaceoftheunitelements on thediagonal of[L].CSPSDC willalsocompute thedeterminant of[A]. 3.5.28.3 Calling Sequence: CALLCSPSDC CALLSDC@MP($nl,Z,Z,Z) C_MM_N/SDCCSP/A(7),L(7),C(7),SCRI,SCR2,NZ,DET,POWER,CHLSKY A(7) Matrix control blockfor[A]. L(7) Matrix control blockfor[L]. C(7) Matrix control blockfor[L]Tor[C]. SCRI,SCR2-Twoscratch files. NZ Thenumber ofcomputer wordsatZ. DET Double precision cellwhere thescaled valueofthedeterminant of[A]will bestored. POWER Scalefactor tobeapplied toDET(Determinant =DET*IO**P_WER). CHLSKY WhenCHLSKY =I,form[C] Z Anareaofworking storage. nl Statement number towhichcontrol istransferred ifthedecomposition fails. 3.5.28.4 Method Themethod usedbyCSPSDC isidentical tothatusedbyRSPSDC (Section 3.5.27). 3.5.28.5 Auxiliary Subroutines Subroutine Name: CSPL_O Purpose: Tocompute theinnerarithmetic loopofCSPSDC. 3.5-82 (811172)\nMATRIXSUBROUTINE DESCRIPTIONS 3.5.28.6 DesignRequirements Theinputmatrix[A]shouldbewellconditioned orpositivedefiniteasthedecomposition is donewithoutpivoting. Corestoragerequirements dependontheparameters BandC.ForagivenBandC,AreasII, III,IV,andVmustresideincorealongwithaminimumoftwocolumnsofAreaIand5GIN_ buffers. Filescontaining [L]and[L]TshouldbeusedasinputonlytoCXFBSastheyarenotin standardNASTRANformat. Information Messages C_NMSG iscalled atentry andexit from CSPSDC. Theline xxxx CSPSDC will appear twice perdecomposition. Theexecution time ofCSPSDC will bethedifference inthetimes (where xxxxx =time inseconds). 2.Message 3023 gives thevalues oftheparameters, B,C,andRchosen forthedecomposi- tion. 3.Message 3027 gives theestimated time inseconds todothedecomposition. 4.Message 3024 indicates that amatrix hasscattered terms wayoffthediagonal (i.e., a large bandwidth). Instead ofsearching allcombinations ofBandC,thesearch isstarted atthemaximum bandwidth. 3.5.28.8 Diagnostic Messages I.IfCSPSDC wasunable tofindacombination ofBandCwhichwouldmeetcorerestrictions, fatalmessage 3008occurs. 2.Inacoding sense, message 3025ispossible. However, itviolates thedesign ofCSPSDC andtherefore, ifobtained, should indicate anobscure program design error, ormachine error. 3.Message 3026indicates thatsufficient spacewasnotreserved forthegeneration ofthe Bvs.Cvector. CSPSDC should berecompiled toincrease BMAX andCMAX. 3.5-83 (811/72)\nSUBROUTINE DESCRIPTIONS 3.5.29 CXFBS (Forward -Backward Substitution). 3.5.29.1 EntryPoint: CXFBS 3.5.29.2 Purpose Giventhedecomposition ofacomplex symmetric matrix [A]=[L][D][L]TCXFBSwillperform thefom_ard-backward passnecessary tosolvethesystem oflinear equations [A][X]=[B]. 3.5.29.3 Calling Sequence CALLCXFBS C_MM_N/FBSXCX/L(7),U(7),B(7),X(7),NZ,PREC,SIGN L,U Matrix control blocks fortheloweranduppertriangular factors output from SDCOMP. B,X Matrix control blocks forthematrices [B]and[X]. NZ Number ofcomputer words atZ. PREC-I,solve [A]IX]=[B]. 2,perform arithmetic indouble precision. SIGN-+I,solve[A]IX]=[B]. -l,solve[]Iv]:-[], Anareaofworking storage. 3.5.29.4 Method Mathematical considerations. Giventheunitupperandlowertriangular matrices [L]and [L]T,withthediagonal matrix [D]stored overtheir diagonals, CXFBS solves thetwosystems of equations givenby and[L][Y]:+[B] [L]T[X]=[D]-I[Y] Elements of[Y]and[X]aregivenby Yij=i-I bij-__kiYkjk=l 3.5-84 (8/I/72)\nMATRIXSUBROUTINE DESCRIPTIONS n xij=Yij/di-k=i+lZ_kix..lj ProgramFlow.OverallprogramflowisidenticaltothatofGFBS(seeSection3.5.19).The onlydifference inthetworoutinesisthatCXFBSusesthedecomposed matricesoutputfrom SCDC_MP,whileGFBSusesthoseoutputbyCDC_MP.Likewise,thecomputedequationsdifferslightly. 3.5.29.5 DesignRequirements Onecolumnof[B]andoneGIN_buffermustfitincore. 3.5.29.6 Diagnostic Messages SeeGFBS(Section3.5.19). 3.5-85(811172)\nGENERAL COMMENTS ANDINDEXES 4.1 GENERAL COMMENTS ANDINDEXES TheI_ASTRAN modules (amodule isalogical group ofsubroutines) documented inthis section havebeenclassified into7categories: l)Executive Preface modules, 2)Executive modules, 3)Executive DMAPinstructions, 4)Executive DMAPmodules, 5)functional modules, 6)output modules, and7)matrix modules. Executive Preface modules arethose which areexecuted prior totheexecution ofthe first module inaD_Psequence. Theyconsist of: which processes theNASTRAN Executive Control Deck; which processes theNASTRAN CaseControl Deck; 3)l)XCSA (Executive Control Section Analysis), 2)IFPI(Input FileProcessor, Partl), XS_RT (Executive BulkDataCardSort), which sorts theNASTRAN Bulk DataDeck; 4)IFP(Input FileProcessor), which processes the sorted BulkDataDeck; 5)IFP3, IFP4andIFP5(Input FileProcessor 3,4and5),which process bulkdatacards unique toanaxisymmetric conical shell, hydroelastic, oracoustic problem; 6)XGPI (Executive General Problem Initialization), theheart ofthePreface, which a)translates (compiles) aDMAPsequence intoaninternal form, theBSCAR, -seeSection 2.4.2.1, andb)for problem restarts, initializes datablocks andlabeled common blocks; and7)UMFEDIT (User Master FileEditor), which creates andmanipulates UserMaster Files. Theonlymodule classified asanExecutivemodule, perse,isXSFA (Executive Segment FileAllocator), which isthe\"administrative manager\" offiles forNASTRAN. Executive DMAPinstructions documented inthissection areREPT, JUMP, C_ND, EXITand END.TheDMAPinstructions BEGIN, LABEL andFILEarenotallocated aseparate section, and therefore brief explanations follow. I.TheBEGIN DMAPinstruction isadeclarative DMAPinstruction which denotesthe beginning ofaDMAPsequence. Itisanalogous toacomputer operating system control card which calls acompiler ofthesystem. 2.TheFILEDMAPinstruction isadeclarative DMAPinstruction which alters thenormal attributes ofadatablock inan_SCAR entry (seeanexplanation oftheattributes AP,LTU, TP,NTUofadatablock intheDataSection Format forfunctional modules section inthedescription ofthe_SCAR, section 2.4.2.1). These attributes ofadata block areusedbytheExecutive Segment FileAllocator (XSFA) module inperforming its task. 4.l-I (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 3.TheLABELDMAPinstruction isusedtolabelalocation inaDMAPsequence so thatthelocation maybereferenced bytheDMAPinstructions JUMP,CONDandREPT. Amoredetailed description ofthesethreeExecutive DMAPinstructions canbefound insection 5oftheUser’s Manual. Executive DMAPmodules consist ofCHKFNT, SAVE,PURGE, EQUIV, PARAMandSETVAL. In addition tothedescriptions inthissection, thereader isreferred tosection 5ofthe User’s Manual, wherefurther explanations oftheusesofEQUIV, PURGEandCHKPNT canbe found. Functional modules comprise thebulkofthedescriptions inthissection. Functional modules perform theactu_l structural problem solution. Ther_aaer isreferred tosection 5 oftheUser’s Manual fora)general co_nents onDMAPrulesandb)thesyntactical rulesof theDMAPcalling sequences referring tofunctional modules. Output modules arethosewhoseentire output isdirected a)tothesystem output fileand/or b)toatapewhichwilldriveaplotting device. Matrix modules arethosewhich, although nodifferent operationally fromfunctional modules, aremostlikely tobeusedbytheprogram userwhowishes totakeadvantage ofthe Direct Matrix Abstraction capabilities ofNASTRAN; therefore, theyareseparately categorized. 4.1.1 UseofModule Functional Descriptions Eachmodule documented bymeansofaHodule Functional Description (MFD)hasbeen assigned aninteger i,anditsMFDisdocumented insection 4.i.Forfunctional modules, aconsistent numbering scheme hasbeenfollowed, wherever possible, intheMFD’s. Fora functional module whoseassigned integer isi,then, 4.i Title 4.i.I EntryPoint 4.i.2 Purpose 4.i.3 DMAPCalling Sequence 4.i.4 InputDataBlocks 4.i.5 Output DataBlocks 4.i.6 Parameters 4.1-2\nGENERAL COMMENTS ANDINDEXES 4.i.7 Method 4.i.8 Subroutines 4.i.9 Design Requirements 4.i.lO Diagnostic Messages comprises thisnumbering scheme. Thetitle: a)classifies themodule intooneoftheseven categories defined inthefirst paragraph ofsection 4.1; b)defines themodule name, which, ifitisaDMAPmodule (onewhich iscalled byaDMAP instruction), isthenamebywhich it mustbecalled intheDMAPcalling sequence; andc)defines, parenthetically, thephrase fromwhich thenamewasderived. Comments ontheremaining sections follow. I.Entry Point Thissection defines theentry point ofthemodule. Amodule’s entry point usually agrees with themodule name, butthere areexceptions. Forexample, theREAD(Real Eigenvalue Analysis Displacement) module hastheentry point REIG (theentry point READ isasubroutine intheGIN_ collection ofroutines). 2.Purpose Abrief description ofthepurpose ofthemodule isgiven. Thecasual orfirst-time reader willperhaps gonofurther thanreadthepurpose. 3.DMAPCalling Sequence TheDMAPcalling sequence asitappears inaRigid Format isgiven (seesection 3of theUser’s Manual foradetailed description oftheRigid Formats inNASTRAN). DMAP calling sequences forExecutive DMAPinstructions andforExecutive DMAPmodules follow nofixed format. Refer totheindividual Module Functional Descriptions fordetails ontheir DMAP calling sequences. Functional modules, which arealways “called” viaaDMAPcalling sequence, dohaveafixed format. Consider thefollowing DMAPcalling sequence forfunctional module SMA2, which generates themassmatrix, [Mgg], andthedamping matrix, [Bgg]: Sr_2 CSTM,MPT,ECPT,GPCT,DIT/MGG,BGG/V,Y,WTIvLASS =I.O/V,N,N_MGG/V,N,NOBGG/V,Y, C_UPBAR =-I$ SMA2 isthemodule name. Thenameofamodule mustbegin with analphabetic character 4.1-3(311170)\nMODULE FUNCTIONAL DESCRIPTIONS followed byuptosevenadditional alphanumeric characters. Following thenameisablank field. Following thisblankfieldisthelist{CSTM,MPT,ECPT,GPCT,DIT} ofdatablocks input tothemodule. Thelististerminated byaslash (/).Eachiteminthislistisseparated byacomma. Notethatthenumber ofcommas forthislistisonelessthanthenumber ofinput datablocks. Thesecond slashterminates thelist{MGG,BGG} ofdatablocks output fromthe module. Therulefornaming inputandoutput datablocks isthesameasformodule names. Eachsubsequent slashterminates aparameter field. Eachparameter fieldcontains threeparts separated bycommas. Thefirstpartiseither theletter “V\"ortheletter “C”,defining the parameter asavariable orasaconstant respectively. Thesecond partiseither theletter “Y\"ortheletter “N”.“Y\"implies “yes\"thevalueoftheparameter maybespecified ona PAP_AMbulkdatacard,and\"N\"implies “no\"thevalueoftheparameter maynotbespecified ona PAP_AMbulkdatacard. Thethirdpartmaybeeither: (a)thenameoftheparameter, (b)the valueoftheparameter, or(c)thenameandthevalueoftheparameter. Avariable parameter musthaveaname,henceavariable parameter maynotbespecified onlybyitsvalue. Therule governing thenamesofparameters isthesameasthatformodule names. Thevalueofa parameter maybecomplex double precision, complex single precision, double precision, real, integer orBCD.Intheexample given, thenameofthefirstparameter isWT_SS, andits initial value (which canbeoverridden byavalueonaPARAMcardbecause of\"Y\"priortothe name)is1.0.Notethattheslashterminating thelastparameter fieldisomitted. Although onecanterminate thelastparameter fieldwithaslash, thisfinalslashisusually omitted. Adollar sign, “$\",terminates aDMAPstatement. 4.InputDataBlocks Ashortdescription ofeachofthemodule’s inputdatablocks isgivenalongwith notesexplaining whatthemodule’s design requires about thestatus (purged ornot purged) ofthedatablocks. Detailed aatablockdescriptions arefound insection 2 oftheProgrammer’s Manual. 5.Output DataBlocks Ashortdescription ofeachofthemodule’s output datablocks andanexplanation of theaction takenwhenanoutput datablockhasbeenpre-purged aregiveninthis section. Anoutput datablock issaidtobepre-purged ifthedatablockhasbeen 4.1-4\nGENEP4_L COMMENTS A_DINDEXES explicitly purged inaprevious PURGE DMAPinstruction, orifthedatablock doesnot appear intheDMAPcalling sequence forthemodule. 6.Parameters Theorder ofDMAPparameters inaDMAPcalling sequence isthesameastheorder ofthe F_RTRAN variables corresponding totheparameters inblank common atmodule execution time. Eachvariable DI_Pparameter isdefined aswhether a)itisinput data into, oroutput datafrom, themodule, orboth (e.g., aDMAPloopcounter which isincremented within the module); b)thetypeoftheparameter: integer, real, double precision, complex single precision, complex double precision, orBCD; andc)thedefault value oftheparameter asdefined either i)intheModule Properties List (MPL) Executive table, ii)bymeans ofaPARAM orSETVAL DMAPinstruction, oriii)bymeans oftheDMAPstatement itself. An example ofthethird typeofdefault value is M_DULEA A,B,C/D,E/V,N,UVW/V,Y,XYZ=-I $. Theparameter XYZissetto-lbytheabove statement. Forfurther information onDMAP parameters seeparagraph 3above, section 2.4.2.2 intheProgrammer’s Manual andsection 5oftheUser’s Manual. 7.Method Adiscussion ofthemethod usedbythemodule writer toachieve thepurpose ofthe module isgiven inthissection. 8.Subroutines Thesubroutines which comprise themodule aredescribed inthissection. However, notallsubroutines capable ofbeing called byamodule arelisted here. Utility routines andmatrix routines thatareintherootsegment arenotlisted inthis section. These inlcude: MAPFNS, alltheGIN_routines (PEN, WRITE, CLOSE, READ, FWDREC, BCKREC, REWIND, E_F,SKPFIL, XGIN, GIN_, PNC_R), FREAD, G_PEN, WRTTRL, FNAME, CLSTAB, PREL_C, PEXIT, TMT_G, MESAGE, andthematrix packing andunpacking routines (BLDPK, PACK, INTPK, UNPACK). Descriptions forthese routines arefound insection 3. 4.1-5"},"title":"Programmer's Manual P31"},"/docs/programmers/programmers_manual_032/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 9.Design Requirements Design requirements peculiar tothemodule arepresented. I0.Diagnostic Messages Diagnostic messages unique tothemodule aregiveninthissection. Adetailed list ofNASTRAN diagnostic messages canbefoundinsection 6oftheUser’s Manual. 4.1-6\nGENERALCOMMENTSANDINDEXES 4,1.2AIphabetical IndexofModule Functional Descriptions Section Number Module Name Section Number 4.78 ADD *** 4.96 ADD5 4.72 *** BEGIN 4.71 4.90 BMG 4.73 4.33 4.56 CASE 4.34 4.59 CEAD 4.84 4.10 CHKPNT ** 4.13 C_ND ** ** DDR 4.79 4.67 DDRI 4.57 4.68 DDR2 4.81 DECAMP 4.70 4.47 DPD ** 4.49 DSMGI 4.100 4.51 DSMG2 4.101 ** DUMM_DI 4.102 ** DUMMOD2 ** ** DUMM_D3 4.83 452 453 454 455 424 423 4.92 4.76 4,77 4.16 4.64 4.37 4.38 4.39 4.40 4.48 4.11 4.15 4.35 4.45 4.46 4.62 4.74 4.204.18 END 4.!7 EQUIV 4.14 EXIT 4.82 FBS *** FILE 4.61 FRRD 4.58 GKAD 4.66 GKAM 4.32 GPSP 4.29 GPWG 4.21 GPI 4.22 GP2 4.25 GP3 4.31 GP4 4.5 IFP* 4.3 IFPI* 4.6 IFP3* 4.89 IFP4* 4,91 IFP5* 4.97 INPUT 4.98 INPUTTI 4.99 INPUTT2 ** INPUTT3 ** INPUTT4 4.12 JUMPModule Name LABEL MATGPR MATPRN MATPRT MCEI MCE2 MERGE M_DA M_DB M_DC MPYAD MTRXlN BFP BUTPUT _UTPUTI BUTPUT2 _UTPUT3 BUTPUT4 PARAM PARTN PARTVEC PLAI PLA2 PLA3 PLA4 PL_T PLTSET PLTTRAN PRTMSG PRTPARM PURGE RANDOM RBMGI RBMG2 RBMG3 RBMG4 READ REPT SAVE SCEI SDRI SDR2 SDR3 SEEMAT SETVAL *Executive System Internal Module **DummyModule ***Executive System Instruction (NoModule Functional Description) 4.1-7 (8/I/72)\nGENERAL COMMENTS ANDINDEXES AIphabetical IndexofModule Functional Descriptions (Continued) Section Number _1odule Name Section Number Modul eName 4.27 SMAI 4.94 UMERGE 4.28 SMA2 4.8 UMFEDIT* 4.30 SMA3 4.93 UPARTN 4.86 SMPYAD 4.36 SMPI 4.60 VDR 4.50 SMP2 4.95 VEC 4.80 S_LVE 4.41 SSGI 4.2 XCSA* 4.42 SSG2 4.7 XGPI* 4.43 SSG3 4.9 XSFA* 4.44 SSG4 4.4 XSBRT* 4.69 XYPL_T 4.103 TABPRT ** XYPRNPLT 4.75 TABPT 4.63 XYTRAN 4.26 TAI 4.65 TRD 4.85 TRNSP *Executive System Internal Module **DummyModule ***Executive System Instruction (NoModule Functional Description) 4.1-7a (811172)\nMODHLE FLIHCTIO_AL DESCRIDTIQrlS 4.1.3 Alnhabetical IndexofEntryPoints int_odule Functional Bescrimtions Nameslisted underentrypointwhichendinthecharacters “BD\"areblock Section Number EntryPoint ;1odule Hame 4.46.8 4.46.8 4.46.8 4.46.8 4.46.8 4.48.8.25 4.41.11.37 4.41.II.22 4,46.8 4.90.1 4.90.8 428.8.16 456.1 459.8.14 459.8.15 459.8.19 459.8.9 4.59,8.20 4.59,8,18 4,59.1 4.59.8.1 4.59.8.8 4.59.8.2 4.59.8.3 4.59,8.4 4.59.8.5 4.59.8.10 4.59.8.6 4.598.7 4.238.3 4.468 4.4111.7 4.238.2 4.4111.34 4.4.5.7datasuborograms. PaaeNumber AI SDR2 4.46-7 A,I SDR2 4.46-7 AK SDR2 4.46-7 At4 SDR2 4.46-7 AMATRX SDR2 4,46-7 ARRM READ 4.48-18 BAR SSCl 4,41-27 BASGLB SSGI 4.41-22 BINT S_R2 4.46-7 BM_ B_!C 4.90-1 BMGT_JS B!G 4.90-7 BVISC SMA2 4.28-8 CASE CASE 4.56-I CDETF! CE#D 4.59-12 CDETr_2 CEAD 4.59-12 CDETM3 CEAD 4.59-14 CDIFBS CEAD 4.59-8 CDIVID CE_D 4.59-14 CDTFBS CEAD 4.59-14 CEAD CEAD 4.59-I CEADI CE#D 4.59-3 CINFBS CEAD 4.59-8 CINVPR CEAD 4.59-3 CINVPI CEAD 4.59-4 CINVP2 CEAP 4.59-4 CINVP3 CEAD 4.59-6 CMTIMH CEAD 4.59-9 CN@Rr’! CEAD 4.59-7 CN_R_I CE\u0026D 4.59-7 CNSTRC PLTSET 4.23-3 C_EF SDR2 4.46-7 C_BIH SSGI 4.41-17 C_HECT PLTSET 4.23-3 C_NE SSCl 4.41-26 CRDFLC XS_RT 4.4-5 4.1-8(8/I/72)\nGENEP_LCO_MENTSANDINDEXES Section Number EntryPoint bdule lame PaQe_umber 4.41.11.19 CRBSS SSCl 4.41-21 4.59.8.17 CSnRT CEAD 4.59-13 4.59,8.12 CSUB CEAD 4.59-10 4.59.8.16 CSUMM CEAD 4.59-13 4.59.8.11 CXTRNY CEAD 4.59-9 4.78.1 DADD ADD 4.78-I 4.96.1 DADD5 ADD5 4.96-I 4.49.8.6 DBAR DSM_I 4.49-6 4.49.8.10 DC_NE DSr_G1 4.49-7 4.81.1 DDC_m DECO!P 4.81-1 4.67.1 DDRI DDRI 4.67-I 4.68.1 DDR2 DDR2 4.68-I 4.68.8.1 DDRIA DDR2 4.68-4 4.68.8.2 DDRIB DDR2 4.68-5 4.27.8.5 DETCK SMAI 4.27-9 4.48.8.24 DETDET READ 4.48-17 4.4..Z8 LqE_FBS READ 4.48-i9 4,48.8.15 DET READ 4.48-13 4.48.8.16 DETMI READ 4.48-15 4.48.8.17 DETM2 READ 4.48-l6 4.48.8.18 DETM3 READ 4.48-16 4.48.8.19 DETer4 READ 4.48-16 4.48.8.20 DETM5 READ 4.48-16 4.48.8.21 DETM6 READ 4.48-16 4.82.1 DFBS FBS 4.82-I 4.41.11.9 DIRECT SSGI 4.41-18 4.27.8.27 DKEF SMAI 4.27-16 4,27.8.22 DKI S_!AI 4.27-13 4.27.8.25 DKINT SMAI 4.27-14 4.27.8.26 DKJ SMAI 4.27-15 4.27.8.31 DKJAB S_IAI 4.27-17 4.27.8.23 DKK SMAI 4.27-14 4.27.8.24 DKM SMAI 4.27-14 4.27.8.29 DKIO0 SMAI 4.27-16 4.27.8.33 DK211 SMAI 4.27-18 4.27.8.32 DK219 SMAI 4.27-18 4.27.8.28 DK89 SMAI 4.27-16 4.27.8.38 DMATRX SMAI 4.27-21 4.28.8 DMEF SrIA2 4.28-3 4.1-9 (811172)\nMODULEFUNCTIONAL DESCRIPTIONS Section Number EntryPoint Module Name PaqeNumber 4.28.8 DMI SMA2 4.28-3 4.28.8 DMINT SMA2 4.28-3 4.28.8 DMJ St\"A2 4.28-3 4.28.8 DMJAB SMA2 4.28-3 4.28.8 DMK SMA2 4.28-3 4.28.8 DMM SMA2 4.28-3 4.79.1 DMPYAD MPYAD 4.79-I 4.28.8 DMIO0 SMA2 4.28-3 4.28.8 DM211 SMA2 4.28-3 4.28.8 DM219 SMA2 4.28-3 4.28.8 DM89 SMA2 4.28-3 4.47.1 DPD DPD 4.47-I 4.47.8.1 DPDAA DPD 4.47-7 4.47.9.2 DPDCBD DPD 4.47-8 4.47.7.1 DPDI DPD 4.47-3 4.47.7.1 DPD2 DPD 4.47-3 4.47.7.1 DPD3 DPD 4.47-3 4.47.7.1 DPD4 DPD 4.47-3 4.47.7.1 DPD5 DPD 4.47-3 4.24.1 DPL_T PL@T 4.24-I 4.23.1 DPLTST PLTSET 4.23-I 4.49.8.9 DnDHE_ DS_Cl 4.49-7 4.49.8.12 DOUAD DS,GI 4.49-7a 4.24.8.6 DRAW PL@T 4.24-7 4.49.8.5 DR_D DSMGI 4.49-6 4.49.8.7 DSHEAR DSMnl 4.49-6 4.49.1 DSMGI DSMGI 4.49-I 4.51.1 DS_C2 DSMG2 4.51-I 4.49.8.1 DSI DS_IGI 4.49-5 4.49.8.2 DSIA DS_IGI 4.49-5 4.49.8.4 DSIABD DSMCl 4.49-6 4.49.8.3 DSIB DS_I 4.49-5 4.85.1 DTRANP TRNSP 4.85-I 4.49.8.13 DTRBSC DS_GI 4.49-7a 4.49.8.11 DTRIA DSMGI 4.49-7 4.49.8.8 DTRMEM DSMql 4.49-7 4.94.1 DUMERQ UMERGE 4.94-I 4.93.1 DUPART IIP_RTN 4.93-I 4.24.9.11 DVECTR PL_T 4.24-10 4.1-I0 (8/I/72)\nGENERALCOMMENTSANDINDEXES Section _lumber EntryPoint Module Name PageNumber 4.27.8.35 4.27.8,36 4.27.8.37 4.48.8.23 4.41.11.4 4.24.8.16 4.48.8.36 4.41.11.2 4.4.5.8 4.41.11.33 4.41.11.26 4.48.8.22 4.41.11.28 4.41.11.39 4.41.11.38 4.46.8 4.48.8.3/ 4.24.8.2 4.46.8 4.41.11.18 4.24.8.12 4.41.11.21 4.73.8.4 4.65.8.5 4.658.11 4.41II.II 4.611 4.618.1 4.618.2 4.618.3 4.61.8.4 4.61.8.5 4.61.8.6 4.46.8 4.46.8 4.46.8 4.46.8 4.46.8 4.46.8 4.41.II.51D4K SMAI D5K SMAI D6K SMAI EADD READ EDTL SSGI ELELBL PLOT EMPC_R READ EXTERN SSGI EXTINT XSORT FCURL SSGI FDCSTM SSGI FDVECT READ FEDT SSGI FEDTED SSGI FEDTST SSGI FFIO0 SDR2 FiLC_R RLAD FIND PLOT FJAB SDR2 FNDPNT SSGI FNDSET PL_T FNDSIL SSGI FORMAT MATPRT F_RHI TRD F_RH2 TRD FP_NT SSGI FRRD FRRD FRRDIA FRRD FRRDIB FRRD FRRDIC FRRD FRRDID FRRD FRRDIE FRRD FRRDIF FRRD F4 SDR2 F5 SDR2 F6 SDR2 F6211 SDR2 F6219 SDR2 F89 SDR2 GBTRAN SSGI4.27-19 4.27-20 4.27-20 4.48-17 4.41-16 4.24-12a 4.48-19c 4.41-14 4.4-5 4.41-26 4.41-23 4.48-17 4.41-24 4.41-28 4.41-28 4.46-7 4.48-i9d 4.24-4 4.46-7 4.41-21 4.24-10 4.41-22 4.73-4 4.65-14 4.65-17 4.41-19 4.61-I 4.61-5 4.61-6 4.61-6 4.61-6 4.61-7 4.61-7 4.46-7 4.46-7 4.46-7 4.46-7 4.46-7 4.46-7 4.41-28c 4.1-11 (8/1/72)\nMODULEFUNCTIONAL DESCRIPTIONS SectionMumber EntryPoint Module Name PageNumber 4.24.8.4 GETDEF PL@T 4.24-6 4.58.1 GKAD GKAD 4.58-I 4.58.8.1 GKADIA _KAD 4.58-6 4.58.8.2 GKADIB RKAD 4.58-6 4.58,8.3 CKADIC GKAD 4.58-7 4.58.8.4 GKADID _KAD 4.58-7 4.66.1 _KAM KAM 4.66-I 4.66.8.2 GKAMI\u0026 KAM 4.66-4 4.66.8.1 GKAMIB GKA! 4.66-3 4.41.II.23 GLBBAS SSnl 4.41-22 4.32.1 GPSP G_SP 4.32-I 4.24.8.10 GPTLBL PLAT 4.24-9 4.24.8.9 GPTSYM PL_T 4.24-9 4.29.1 GPWG GPWQ 4.29-I 4.29.8.1 GPWClA GPW 4.29-5 4.29.8.2 GPW_IB _PWq 4.29-5 4.29.8.3 GPWGIC _PWG 4.29-6 4.21.I GPI GPI 4.21-I 4.22.1 _P2 GP2 4.22-I 4.25.1 GP3 GP3 4.25-2 4.25.8.3 _P3A P3 4.25-4 4.25.8.4 CP3B mP3 4.25-7 4.25.8.2 GP3C GP3 4.25-2 4.25.8.5 GP3D rP3 4.25-9 4.31.I GP4 cD4 4.31-I 4.31.8.1 GP4PRT cP4 4.31-5 4.41.11.16 GRAV SSCl 4.41-20 4.41.11.5 GRAVLI SSCl 4.41-16 4.41.11.6 GRAVL2 SSCl 4.41-16 4.41.11.29 GRAVL3 SS_I 4.41-24 4.41.11.40 HBDY SSGI 4.41-28 4.27.8.45 HHBDY SHAI 4.27-21a 4.27.8.46 HRING SteAl 4.27-21b 4.46.8 IFAC SDR2 4.46-7 4.5.1 IFP IFP 4.5-I 4.5.7.9 IFPDC IFP 4.5-7 4.3.1 IFPI IFPl 4.3-I 4.3.7.1 IFPIB IFPI 4.3-2 4.3.7.2 IFPIC IFPI 4.3-3 4.1-12 (8/I/72)\nGENERALCOM!4ENTSANDINDEXES Section Number EntryPoint Module Name PageNumber 4.3.7.3 IFPID IFPI 4.3.7.4 IFPIE IFPI 4.3.7.5 IFPIF IFPI 4.3.7.6 IFPIG IFPI 4.3.7.8 IFPIXY IFPI 4.6.1 IFP3 IFP3 4.6.8.1 IFP3B IFP3 4.89.1 IFP4 IFP4 4.89.8.1 IFP4A IFP4 4.89.8.2 IFP4B IFP4 4.89.8.3 IFP4C IFP4 4.89.8.4 IFP4E IFP4 4.89.8.5 IFP4F IFP4 4.89.8.6 IFP4C IFP4 4.91,1 IFP5 IFP 4.91.8 IFP5A IFP 4.5.7.8 IFSlP IFP 4.5.7.8 IFS2P IFP 4.5.7.8 IFS3P IFP 4.5.7.8 IFS4P IFP 4.5.7.8 IFS5P IFP 4.5.7.1 IFXlBD IFP 4.5.7.2 IFX2BD IFP 4.5.7.3 IFX3BD IFP 4.5.7.4 IFX4BD IFP 4.5.7.5 IFX5BD IFP 4.5.7.6 IFX6BD IFP 4.5.7.7 IFX7BD IFP 4.4.5.3 INITCO XSORT 4.65.8.3 INITL TRD 4.98.1 IN_TTI INPUTTI 4.99.1 INPTT2 INPUTT2 4.97.1 INPUT INPUT 4.4.5.9 INTEXT XSBRT 4.65.8.8 INTFBS TRD 4.73.8.1 INTPRT MATPRT 4.24.8.7 INTVEC PL_T 4.48.8.40 INVERT READ 4.48.8.14 INVFBS READ4.3-_ 4.3-4 4.3-4 4.3-5 4.3-6 4.6-I 4.6-15 4.89-I 4.89-15 4.89-15 4.89-16 4.89-16 4.89-17 4.89-17 4.91-2 4.91-7 4.5-6 4.5-6 4.5-6 4.5-6 4.5-6 4.5-5 4.5-5 4.5-5 45-6 4.5-6 4.5-6 4.5-6 4.4-4 4.65-13 4.98-I 4.99-2 4.97-I 4.4-5 4.65-15 4.73-I 4.24-8 4.48-19e 4.48-12 4.1-13 (8/I/72)\nHODULE FUNCTIONAL DESCRIPTIONS Section Number .Entry Point Hodule Name PageNumber 4.48.8.14 INVFSP READ 4.48.8.6 INVPWR READ 4.48.8.7 INVPI READ 4.48.8.8 INVP2 READ 4.48.8.9 INVP3 READ 4.48,8.41 INVTR READ 4.4.5.11 ISFT XS@RT 4.97.8 IUNI@N INPUT 4.27.8.7 KBAR SMAI 4.27.8,18 KC@NE SMAI 4.27.8.18 KC_NEX SMAI 4.27,8.16 KELAS SMAI 4.27.8.30 KFAC SMAI 4.27.8.39 KFLUD2 SMAI 4.27.8.40 KFLUD3 SMAI 4.27.8.41 KFLUD4 SMAI 4.27.8.9 KPANEL SMAI 4.27.8.47 KPLTST SMAI 4.27.8.11 KNDMEM SMAI 4.27,8.14 KQDPLT SMAI 4.27.8.6 KR_D SHAI 4,27.8.42 KSL_T SHAI 4.27.8.44 KS_LID SMAI 4.27.8.43 KTETRA SMAI 4.27,8.21 KTORDR SMAI 4.27.8.20 KTRAPR SMAI 4.27.8,12 KTRBSC SMAI 4.27.8.15 KTRIQD SMAI 4.27.8.19 KTRIRG SMAI 4.27.8.10 KTRMEM SMAI 4.27.8.13 KTRPLT SMAI 4.27.8.8 KTUBE SMAI 4.2.5.2 LDi XCSA 4.41.11.8 L_ADX SSGI 4.46.8.36 MAGPHA SDR2 4.74.8.1 MAP SEEMAT 4.74.8,1 MAPSET SEErIAT 4.28.8,12 MASSD SMA2 4.28.8.7 MASSTQ SMA24.48-12 4.48-8 4.48-8 4.48-9 4.48-9 4.48-19f 4.4-6 4.97-2 4.27-10 4.27-13 4.27-13 4.27-12 4.27-17 4.27-21 4.27-21 4.27-21 4.27-10 4.27-21b 4.27-11 4.27-12 4.27-10 4.27-21a 4.27-21a 4.27-21a 4.27-13 4.27-13 4.27-11 4.27-12 4.27-13 4.27-11 4.27-11 4.27-10 4.2-2 4.41-17 4.46-19 4.74-4 4.74-4 4.28-7 4.28-5 4.1-14 (8/I/72)\nGENERAL COM_*IENTS ANDINDEXES Section Number Entry Point Module Name PageNumber 4.72.1 MATGPR MAT_PR 4.72-I 4.71.1 MATPRN MATPRN 4.71-I 4.73.8.2 MATPRT MATPRT 4.73-2 4.65.8.6 MATVEC TRD 4.65-14 4.28.8.8 ,%_AR SMA2 4.28-6 4.28.8.9 MCBAR SMA2 4.28-6 4.33.1 MCEI MCEI 4.33-I 4.33.8.1 MCEIA MCEI 4.33-2 4.33.8.2 MCEIB MCEI 4.33-2 4.33.7 MCEIC MCEI 4.33-2 4.33.8.3 MCEID MCEI 4.33-2 4.34.1 MCE2 MCE2 4.34-I 4.28.8.11 MCBNE SMA2 4.28-6 4.28.8.10 MC_NtIX S_A2 4.28-6 4.28.8.18 MCRBD SMA2 4.28-8 4.84.1 MERGEI MER_E 4.84-I 4.28.8 MFAC SMA2 4.28-3 4.28.8.23 MFLUD2 SMA2 4.28-8a 4.28.8.24 MFLUD3 SMA2 4.28-8b 4.28.8.25 MFLUD4 SMA2 4.28-8b 4.28.8.26 MFREE SMA2 4.28-8b 4.24.8.13 MINMAX PL_T 4.24-II 4.7.5.11 MPLPRT X_Pl 4.7-6 4.41.II.24 MPYL SSGI 4.41-23 4.41.II.25 MPYLT SSnl 4.41-23 4.28.8.21 _DPLT SMA2 4.28-8a 4.28.8.5 MR_D S_A2 4.28-5 4.28.8.27 MSLBT SMA2 4.28-8b 4.28.8.28 MS,LID SMA2 4.28-8b 4.48.8.11 MTIMSU READ 4.48-10 4.28.8.15 MT_RDR SMA2 4.28-7 4.28.8.14 MTRAPR S_A2 4.28-7 4.28.8.19 _RBSC SMA2 4.28-8 4.28.8.22 _RIQD SMA2 4.28-8a 4.28.8.13 ,TTRIR SMA2 4.28-7 4.28.8.20 MTRPLT SMA2 4.28-8a 4.57.1 MTRXIN T-_RXIN 4.57-I 4.28.8.6 MTUBE S_A2 4.28-5 4.41.11.20 N_RM SSGI 4.41-21 4.1-15 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Section lumber EntryPoint I’odule!ame 4.48.8.10 N@RMI READ 4.70.1 _FP @Fp 4.70.8.1 _FPPUN _]FP 4.70.8.2 OFPI _FP 4.70.8.3 FPI @_FP 4.70.8.4 _FPIBD _FP 4.70.8.5 _FP2BD _FP 4.70.8.6 _]FP3BD @FP 4.70.8.7 _FP4BD OFP 4.70.8.8 _FP5BD _FP 4.48.8.5 _,RTCK READ 4.59.8.13 RTH CEAD 4.7.5.10 _SCDMP XGPI 4.100.1 @UTPTI _UTPUTI 4.lOl.l _UTPT2 _]UTPUT2 4.I02.l BUTPT3 _UTPUT3 4.24.8. l PARAM PLAT 4.83.l PARTNI PARTN 4.83.8. l PARTN2 PARTN 4.83.8.2 PARTN3 PARTN 4.41.ll.17 PERMUT SSGI 4.24.8.14 PERPEC PLAT 4.102.8.1 PHDMIA OUTPUT3 4.55.8.5 PKBAR PLA4 4.55.8.10 PKQADI PLA4 4.55.8.11 PKnAD2 PLA4 4.55.8.7 PKQDM PLA4 4.55.8.18 PK(IDMS PLA4 4.55.8.13 PKODMI PLA4 4.55.8.22 PKO,DPL PLA4 4.55.8.4 PKR@D PLA4 4.55.8.14 PKTQI PLA4 4.55.8.16 PKTQ2 PLA4 4.55.8.20 PKTRBS PLA4 4.55.8.8 PKTRI1 PLA4 4,55.8.9 PKTR12 PLA4 4.55.8.6 PKTRM PLA4 4.55.8.17 PKTRMS PLA4 4.55.8.12 PKTRMI PLA4PageNumber 4.48-I0 4.70-I 4.70-2 4.70-3 4.70-3 4.70-3 4.70-3 470-3 470-3 470-3 448-7 459-I0 47-6 4lO0-1 4lOl-I 4.102-I 4.24-4 4.83-I 4.83-4 4.83-4 4.41-20 4.24-II 4.102-2 4.55-4 4.55-5 4.55-5 4.55-5 4.55-7 4.55-6 4.55-8 4.55-4 4.55-6 4.55-7 4.55-8 4.55-5 4.55-5 4.55-4 4.55-7 4.55-6 4.1-16 (8/I/72)\nGENERAL COMMENTS ANDINDEXES Section Number EntryPoint Module Name PageNumber 4.55.8.21 PKTRPL PLA4 4.55-8 4.55.8.19 PKTROD PLA4 4.55-7 4.55.8.15 PKTRn2 PLA4 4.55-6 4.52.1 PLAI PLAI 4.52-I 4.53.1 PLA2 PLA2 4.53-I 4.54.1 PLA3 PLA3 4.54-I 4.54.8.1 PLA31 PLA3 4.54-3 4.54.8.2 PLA32 PLA3 4.54-3 4.55.1 PLA4 PLA4 4.55-I 4.55.8.3 PLA4B PLA4 4.55-4 4.55.8.1 PLA41 PLA4 4.55-3 4.55.8.2 PLA42 PLA4 4.55-3 4.41.II.13 PLBAD SSGI 4.41-9 4.24.8.3 PL_T PLBT 4.24-5 4.24.8.5 PLT_PR PLBT 4.24-6 4.92.1 PLTTRA PLTTRAN 4.92-I 4.41.II.15 PRESAX SSGI 4.41-20 4.24.8.15 PROCES PL_T 4.24-12 4.73.1 PRTINT MATPR_ 4.73-I 4.73.8.2 PRT_T MATPRT 4.73-2 4.76.1 PRTMSG PRTMSG 4.76-I 4.77.1 PRTPRM PRTPARM 4.77-I 4.73.8.3 PRTVEC MATPRT 4.73-3 4.54.8.4 PSBAR PLA3 4.54-4 4.54.8.9 PSnADI PLA3 4.54-5 4.54.8.10 PSQAD2 PLA3 4.54-5 4.54.8.6 PSnDM PLA3 4.54-4 4,54.8.12 PSQDMI PLA3 4.54-6 4.54.8.16 PSQPLI PLA3 4.54-7 4.54.8.3 PSROD PLA3 4.54-3 4.54.8.15 PSTPLI PLA3 4.54-6 4.54.8.13 PSTQI PLA3 4.54-6 4.54.8.18 PST02 PLA3 4.54-7 4.54.8.14 PSTRBI PLA3 4.54-6 4.54.8.7 PSTRII PLA3 4.54-5 4.54.8.8 PSTRI2 PLA3 4.54-5 4.54.8.5 PSTRM PLA3 4.54-4 4.54.8.11 PSTRMI PLA3 4.54-5 4.54.8,17 PSTRQ2 PLA3 4.54-7 4.1-17 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Section Number EntryPoint Module Name PageNumber 4.41.11.35 QDMEM SSGI 4.41-27 4.41.11.42 QDPLT SSGI 4.41-28a 4,41.11.41 QHBDY SS_I 4.41-28 4.19.1 QPARAM PARAM 4.19-I 4.48.8.38 QRITER READ 4.48-19d 4.64.1 RANDOM RANDOM 4.64-I 4.64.8.4 RAND1 RANDOM 4.64-6 4.64.8.5 RAND2 RANDOM 4.64-6 4.64.8.5 RAND2A RANDOM 4.64-6 4.64.8.6 RAND3 RANDBM 4.64-7 4.64.8.7 RAND4 RANDOM 4.64-7 4.64.8.2 RAND5 RANDBM 4.64-6 4.64.8.8 RAND6 RANDOM 4.64-7 4.54.8.1 RAND7 RANDOM 4.64-5 4.64.8.3 RAND8 RANDOM 4.64-4 4.37.1 RBMGI RBMGI 4.37-I 4.38.1 RBMG2 RBMG2 4.38-I 4.39.1 RBMG3 RBMG3 4.39-I 4.40.1 RBMG4 RBMG4 4.40-I 4.48.8.1 READ1 READ 4.48-4 4.48.8.2 READ2 READ 4.48-5 4.48.8.3 READ3 READ 4.48-6 4.48.8.4 READ4 READ 4.48-7 4.48.8.2 READ5 READ 4.48-5 4.48.8.42 READ6 READ 4.48.19f 4.48.1 REIG READ 4,48-I 4.41.11.14 RFORCE SSGI 4.41-19 4.41.11.43 ROD SSGI 4.41-28a 4.27.8.34 ROMBDK SMAI 4.27-19 4.46.8 ROMBER SDR2 4.46-7 4.48.8.35 RBTATE READ 4.48-19c 4.48.8.34 ROTAX READ 4.48.19c 4.4.5.2 RPAGE XS_RT 4.4-3 4,46.8.37 SAXIFI SDR2 4.46-19 4.46.8.38 SAXlF2 SDR2 4.46-19 4.46.8.15 SBARI SDR2 4.46-12 4.46.8.32 SBAR2 SDR2 4.46-18 4.46.8.27 SBSPL2 SDR2 4.46-16 4.31.8.2 SCALEX GP4 4.31-6 4.1-18 (811172)\nGENERAL COMMENTS ANDINDEXES Section Number Entry Point Module Name PageNumber 4.35.1 SCEI SCEI 4.35-I 4.46.8.16 SC_WEI SDR2 4.46-12 4.46.8.30 SC_NE2 SDR2 4.46-17 4.46.8.31 SC_NE3 SDR2 4.46-18 4.46.8.43 SDRETD SDR2 4.46-19b 4.45.1 SDRI SDRI 4.45-I 4.45.8.1 SDRIA SDRI 4.45-5 4.45.8.2 SDRIC SDRI 4.45-5 4.45.8.3 SDRID SDRI 4.45-5 4.46.1 SDR2 SDR2 4.46-I 4.46.8.2 SDR2A SDR2 4.46-8 4.46.8.1 SDR2AA SDR2 4.46-8 4.46.8.3 SDR2B SDR2 4.46-9 4.46.8.20 SDR2C SDR2 4.46-13 4.46.8.21 SDR2D SDR2 4.46-14 4.46.8.22 SDR2E SDR2 4.46-15 4.62.1 SDR3 SDR3 4.62-I 4.62.8.1 SDR3A SDR3 4.62-9 4.74.1 SEE_T SEEMAT 4.74-I 4.46.8.13 SELASI SDR2 4.46-12 4.46.8.26 SELAS2 SDR2 4.46-16 4.23.8.1 SETINP PLTSET 4.23-3 4.20.I SETVAL SETVAL 4.20-I 4.24.8.8 SHAPE PLBT 4.24-8 4.48.8.32 SIC_X READ 4.48-19b 4.48.8.33 SINCAS READ 4.48-19b 4.41.II.12 SLBAD SSGI 4.41-19 4.27.8.1 SMAI SMAI 4.27-8 4.27.8.2 SMAIA SMAI 4.27-8 4.27.8.3 SMAIB SMAI 4.27-9 4.27.8.4 SMAIBD SMAI 4.27-9 4.28.1 SMA2 SMA2 4.28-I 4.28.8.2 SMA2A SMA2 4.28-4 4.28.8.3 SMA2B S_2 4.28-4 4.28.8.4 SMA2BD SMA2 4.28-4 4.30.I SMA3 SMA3 4.30-I 4.30.8.1 SMA3A SMA3 4.30-5 4.30.8.2 SMA3B SMA3 4.30-5 4.30.8.4 SMA3BD SMA3 4.30-6 4.1-19 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Section Number EntryPoint Module Name PageNumber 4.30.8.3 4.48.8.30 4.86.1 4.36.1 4.50.1 4.41.11.44 4.80.1 4.46.8.7 4.46.8.25 4.468.12 4.468.10 4.468.27 4.468.4 4.468.23 4.4111.50 4.4111.49 4.411 4.41II.I 4.421 4.428.1 4.43.1 4.44.1 4.46.8.39 4.46.8.40 4,46.8.41 4.46.8.42 4.65.8.7 4.46.8.19 4.46.8.35 4.46.8.28 4.46.8.18 4.46.8.34 4.46.8.8 4.46.8.17 4.46.8.33 4.46.8.11 4.46,8.9 4.46.8.14 4.46.8.29SMA3C SMA3 SMLEIG READ SMPYAD SMPYAD Sr4PI SMPI SMP2 SMP2 S@LID SSGI S_LVE S_LVE SPANLI SDR2 SPANL2 SOR2 SNDMEI SDR2 SQDPLI SDR2 SQRTM READ SR@DI SDR2 SR_D2 SDR2 SSGETD SSGI SSGKHI SSGI SS_I SSGI SSGIA SSGI SSG2 SSG2 SS62BI SSG2 SSG3 SSG3 SSG4 SSG4 SSL@TI SDR2 SSL_T2 SDR2 SS@LDI SDR2 SS_LD2 SDR2 STEP TRD ST@ROI SDR2 ST@RD2 SDR2 STQME2 SDR2 STRAP1 SDR2 STRAP2 SDR2 STRBSI SnR2 STRIRI SDR2 STR!R2 SDR2 STRMEI SDR2 STRPLI SDR2 STRnDI SDR2 STRnD2 SDR24.30-6 4.48-19a 4.86-I 4.36-I 4.50-I 4.41-28a 4.80-I 4.46-10 4.46-16 4.46-11 4.46-11 4,48-19 4.46-10 4.46-16 4.41-28c 4,41-28c 4.41-I 4.41-14 4.42-I 4.42-4 4.43-I 4.44-I 4.46-19a 4.46-19a 4.46-19a 4.46-19b 4.65-15 4.46-13 4.46-19 4.46-17 4.46-13 4.46-18 4.46-10 4.46-13 4.46-18 4.46-11 4.46-11 4.46-12 4.46-17 4.1-20 (8/I/72)\nGENERALCOMMENTSANDINDEXES Section Number EntryPoint Module Name PageNumber 4.46.8.6 STUBEI SDR2 4.48.8.13 SUB READ 4.48.8.26 SUMM READ 4.3.7.7 SWSRT IFPI 4.103.1 TABFMT TABPRT 4.75.1 TABPT TABPT 4.26.1 TAI TAI 4.26.8.2 TAIA TAI 4.26.8.3 TAIB TAI 4.26.8.4 TAIC TAI 4.26.8.5 TAICA TAI 4.26.8.6 TAIF TAI 4.26.8.7 TAIG TAI 4.41.11.3 TEMPL SSGI 4.41.11.45 TETRA SS_I 4.41.11,10 TP_NT SSGI 4.41.11.46 TRBSC SSGI 4.65.1 TRD TRD 4.65.8.! TRDIA TRD 4.65.8.2 TRDIB TRD 4.65.8.4 TRDIC TRD 4.65.8.9 TRDID TRD 4.65.8.10 TRDIE TRD 4.48.8.31 TRIDI READ 4.41.11.36 TRIMEM SSGI 4.41.11.47 TRIQD SSGI 4.85.1 TRNSP TRNSP 4.41.11.48 TRPLT SSGI 4.41.11.32 TT_RDR SSGI 4.41.11.31 TTRAPR SSCl 4.41.11.30 TTRIR_ SSGI 4.8.1 UMFEDT UMFEDIT 4.8.6 UMFZBD UMFEDIT 4.48.8.29 VALVEC READ 4.60.8.1 VDR VDR 4.60.8.2 VDRA VDR 4.60.8.3 VDRB VDR 4.60.9.2 VDRBD VDR 4,95.1 VEC VEC4.46-I0 4.48-11 4.48-18 4.3-6 4.103-I 4.75-I 4.26-I 4.26-14 4.26-14 4.26-14 4.26-15 4.26-15 4.26-15 4.41-15 4.41-28a 4.41-18 4.4i-28b 4.65-I 4.65-12 4.65-12 4.65-13 4.65-16 4.65-16 4.48-19a 4.41-27 4.41-28b 4.85-I 4.41-28b 4.41-26 4.41-25 4.41-25 4.8-I 4.8-I 4.48-19 4.60-5 4.60-5 4.60-6 4.60-7 4.95-I 4.1-21 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS Section Number 4,73.8,3 4,48,8.39 4,76,8,2 4,24,8.17 4.4,5,5 4,7,62 4,11,I 4,11.6 4.12,1 4.13.1 4,14.1 4,18.1 4,10,1 4,9,5.2 4,2,1 4,9.5,4 4,17.1 4..4.5.4 4,4.5,10 4,9.5,7 4,7,5.9 4,7.5,8 4.7.1 4,7,6,2 4,7.5.2 4,7,5,1 4,7,5,1 4,7,5,5 4,7,5,4 4,7,6,2 4,7,5.5 4.7,5,3 4.7,5.6 4.9,5.6 4,9,5,5 4,4,5,6 4,9,5,3 4,16.1 4,4,5.1EntryPoint VECPRT WILVEC WRTMSG WRTPRT XBCDBI XBSBD XCEI XCEI XCEI XCEI XCEI XCEI XCHK XCLEAN XCSA XDPH XEQUIV XFADJ XFADJI XFILPS XFLDEF XFLORD XGPI XGPIBD XGPIBS XGPIDG XGPIMW XIPFL XLNKHD XMPLBD XOPFL X_SGEN XPARAM XPLEQK XPOLCK XPRETY XPUNP XPURGE XRECPSModule Name MATPRT READ PRTMSG PLOT XS_RT XGPI REPT REPT JUMP COND EXIT END XCHK XSFA XCSA XSFA EQUIV XSBRT XS_RT XSFA XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XGPI XSFA XSFA XS_RT XSFA XPURGE XSORTPageNumber 4,73-3 4.48-19e 4.76-2 4,24-12a 4,4-4 4.7-7 4.11-I 4.11-2 4,12-I 4,13-I 4.14-I 4,18-I 4.10-I 4.9-4 4.2-I 4,9-6 4.17-I 4.4-4 4.4-5 4.9-7 4,7-5 4,7-5 4.7-I 4,7-7 4,7-3 4.7-3 4,7-3 4,7-4 4.7-4 4,7-7 4,7-4 4,7-3 4.7-4 4.9-6 4,9-6 4,4-4 4.9-5 4.16-I 4.4-3 4,1-22 (8/I172)\nGENERAL COMMENTS ANDINDEXES Section Number Entry Point Module Name PageNumber 4.2.5.1 XRGDFM XCSA 4.2-I 4.15.1 XSAVE XSAVE 4.15-I 4.2.5.4 XSBSET XCSA 4.2-2 4.7.5.7 XSCNDM XGPI 4.7-4 4.9.1 XSFA XSFA 4.9-I 4.4.1 XS_RT XS_RT 4.4-I 4.9.5.1 XS_SGN XSFA 4.9-3 4.48.8.12 XTRNSY READ 4.48-II 4.63.8.7 XYCHAR XYTRAN 4.63-8 4.63.8.1 XYDUMP XYTRAN 4.63-5 4.63.8.2 XYFIND XYTRAN 4.63-5 4.63.8.8 XYGRAF XYTRAN 4.63-8 4.63.8.4 XYL_G XYTRAN 4.63-6 4.63.8.3 XYBUT XYTRAN 4.63-6 4.69.1 XYPLBT XYPLBT 4.69-I 4.63.8.6 XYPRPL XYTRAN 4.63-7 4.63.8.5 XYTICS XYTRAN 4.63-7 4.63.1 XYTRAN XYTRAN 4.63-I 4.1-23 (8/I/72)\nEXECUTIVEPREFACEMODULEXCSA(EXECUTIVE CONTROLSECTIONANALYSIS) 4.2 4.2.1 4.2.2EXECUTIVE PREFACE MODULE XCSA (EXECUTIVE CONTROL SECTION ANALYSIS) Entry Point: XCSA Purpose Toprocess theNASTRAN Executive Control Deck. 4.2.3 Calling Sequence CALLXCSA. XCSAiscalled onlybysubroutine SEMINT. 4.2.4 Method Thecards oftheExecutive Control Deckarereadandprocessed withchecks being made for illegal formats, duplication anderrors peculiar totheparticular cardbeing processed. When allofthecontrol cards havebeenprocessed (i.e., CENDcontrol card found), theExecutive Control Table (XCSA) iswritten ontheProblem TaPe andXCSAreturns tothecallinq routine. 4.2.5 Subroutines 4.2.5.1 Subroutine Name: XRGDFM I.Entry Point: XRGDFM 2.Purpose: Toselect a.rigid format based ontheSBLcardintheExecutive Control Deck. 3.Calling Sequence: CALLXRGDFM (NEWS_L,BLDS_L,IAPP) NEWS_L -Two-word array containing solution andsubset numbers taken fromS0L control card. _LDS_L Two-word array containing solution andsubset numbers taken fromthe OldProblem Tapeiftheproblem isarestart. Ifnotarestart, BLDS_L =O. IAPP -Approach code(l=F_RCE, 2=DISPL, 3=DM/_P) taken fromtheAPPcard intheExecutive Control Deck. 4.Method: Iftheproblem isbeing restarted, acheck ismade forasolution (Rieid Format) change. Ifthesolution hasbeenchanged, abitissetintable MEDMSK in named comon block /XMDMSK/. 4.2-I"},"title":"Programmer's Manual P32"},"/docs/programmers/programmers_manual_033/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS Acheckismadeforalegalsolution number, and,ifacceptable, abranch ismadeonthe solution number, andsubroutine LDi(i=solution number) iscalled tocreate theDMAPandMED records fortheXCSAtable. XRGDFM thenreturns tothecalling routine XCSA. 4.2.5.2 1• 2.Subroutine Name: LDi,where i=solution number, i=01,02….. 12. EntryPoints: LDi Purpose: Towrite theDMAPsequence andMEDrecords oftheXCSAExecutive Tablefor solution (Rigid Format) i(seeXCSAExecutive Control Tabledescription, Section 2.4.2.5). 3.Calling Sequence: CALLLDi(SUBSET) SUBSET -Solution subset number fromtheSOLcontrol card. 4.Method: Thepacked DMAPprogram isgenerated, andthensubroutine XSBSET iscalled to select theproper solution subset fortheDMAPprogram byaltering theIS1array. Upon return fromXSBSET thearrays IS1,JNMandINM(see4.2.6.2 below) arewritten ontheNew Problem Tapetocomplete theMEDrecord forExecutive TableXCSA. LDithenreturns to calling routine. 4.2.5.3 Subroutine Name: XSBSET I.EntryPoint: XSBSET 2.Purpose: Toeliminate DMAPinstructions notbelonging tothespecified subset by altering theISlarray. 4.2-2 (8/I/72)\nEXECUTIVEPREFACEMODULE XCSA(EXECUTIVECONTROL SECTION ANALYSIS) 3D NSS SUBSET ISl NDI NWPI 4.Method:Calling Sequence: CALLXSBSET (IDI,NSS,SUBSET,ISI,NDI,NWPI) IDl Table containing DMAPinstruction numbers ofthose instructions that are notpartofthespecified subset. -Number ofsubsets intable IDl. -Subset tobeselected fromtable IDl. -Module execution decision table. -Number ofDMAP instructions inDMAPprogram. -Number ofwords perISlentry. Table IDlissearched andtheproper subset isselected. EachDMAPinstruction hasacorresponding entry intable ISl. IftheISlentry foraninstruction iszero, then theinstruction iseliminated fromtheDMAPproqram. Therefore zeroino theISlentries of those instructions specified intable IDlyields theproper subset. XSBSET thenreturns to thecalling routine. 4.2.6 Design Requirements 4.2.6.1 UseofOpen Core Open coreisusedforGIN_buffers, forgenerating theXPTDIC Executive Table (seesection 2.4) onrestarts, andforstoring user generated DMAPprograms. Named conunon block /XCSABF/ defines thebeginning ofopencoreformodule XCSA. Since XPTDIC isnotstored permanently in open coreandbecause theuseofopencore tostore aDMAPprogram andacall toLDiare mutually exclusive, theLDisubroutines canbeorigined foroverlaypurposes atthesamelocation as/XCSABF/. 4.2.6.2 Restart Tables Initialized intheRoutines Thefollowing tables areinitialized bytheLDi(i=solution number) subroutine orits associated Block Dataprogram andareusedtoaidmodule XGPI inrestarting aproblem which uses Rigid Format i. I.ISl-Module Execution Decision Table: Thistable whenusedinconjunction withtable MEDMSK innamed common block /XMDMSK/willprovide module XGPIwiththeinformation needed todecide whether ornottosettheexecute flag inan_SCAR entry. EachDMAPinstruction 4.2-3\nMODULE FUNCTIONAL DESCRIPTIONS inaRigid Format hasacorresponding entryinIS1.AnentryinIS1canbeonetofive words inlength, andonlybits1through 31areusedtoformatruthtable. Notethatif anIS1entryiszero,thecorresponding DMAPinstruction isunconditionally excluded from theRigidFormat DMAPprogram beingcompiled bymodule XGPI. 2.JNM-FileNameRestart Table: TheJNMtableprovides module XGPIwiththecapability ofregenerating datablocks whicharemissing intherestart dictionary andwhichare needed torestart theproblem. Notethattherestart mustbeamodified restart. Ifa datablockismissing, theJNMtablewillindicate whichbittosetintableMEDMSK. MEDMSK isthenusedwithIS1todetermine which DMAPmodules mustbere-executed inorderto correctly regenerate themissing datablock. Sample JNMEntry: Word1 2 3DataBlock Name(BCD) BN(integer) BNisthebitnumber ofthebitwhich istobesetintableMEDMSK toregenerate the specified datablock. Theusable bits(bits1-31)ofMEDMSK arenumbered sequentially starting frombit31ofthefirstword. MEDMSK isfivewords long, Example: BN= MEDMSK WordI, “–m 31, 32, …m62, 63, …,93 m9t+i…,12W m125,…,155. 1 2 3 4 5 3.INM-CardNameRestart Table: Whentheproblem isbeinnrestarted andinputdata (BulkDataand/or CaseControl Data)hasbeenmodified, table INMtellsmodule XGPI whether ornotthemodifications affect thecompilation oftheDMAPprogram associated withtheRigidFormat. TableMJCDinnamedcommon block /IFPXI/ andtableMJMSK innamed common block/IFPXO/ indicate whichcardshavebeenmodified. IfINMhasanentryfora modified card,theINMentrywillindicate whichbittosetintableMEDMSK. MEDMSK is thenusedwithIS1todetermine which DMAPmodules mustbere-executed. 4.2-4\nEXECUTIVE PREFACE MODULE XCSA (EXECUTIVE CONTROL SECTION ANALYSIS) Sample INMEntry: Word BNisthenumber ofthebitwhich istobesetintable MEDMSK iftheassociated cardname hasbeenmodified. Seesample JNMentry forfurther description ofBN. 4.IDl-Subset Table: DMAPinstructions inaDMAP program arenumbered sequentially starting with “BEGIN” asinstruction number I.Table IDlcontains theinstruction numbers ofthose instructions thatarenottobeincluded inasubset. Sample IDlEntry: Word l+NlNI(in*en:r_ Ij(integer) IkNlwordsRepeatforallsubsets N1=number ofinstructions todelete insubset I.(N1_0). lj-Ik=DMAP instruction numbers ofinstructions tobedeleted. 4.2-5\nMODULEFUNCTIONAL DESCRIPTIONS 4.2.7Diagnostic Messages Every effort ismadetogetthrough module XCSAsothatthemodules IFPIandIFPcanprocess theCaseControl DeckandtheBulkDataDeck. XCSAsetstheN_G_flag innamed common block /SYSTEM/according totheseverity oftheerrors found. NOG_=0-noerrors found. l-jobwillterminate after module XGPI. 2-jobwill terminate after IFPmodules. 3-jobterminates inXCSA. Seediagnostic message section ofUser’s Manual (section 6.2)foradetailed discussion of XCSAerror messages. XCSAmessages include numbers 501thru526. 4.2-6\nEXECUTIVEPREFACEMODULE IFPI(INPUT FILEPROCESSOR,PART l) 4.3EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl) 4.3.1 Entry Point: IFPI 4.3.2 Purpose Toprocess theCase Control Deck.Seesection 2.3oftheUser’s Manual foradiscussion oftheCaseControl Deck. 4.3.3 Calling Sequence CALLIFPI. IFPI, aPreface module, iscalled onlybysubroutineSEMINT. 4.3.4 Input Data Theinput dataconsists oftheCaseControl DeckandtheCASECCdatablock from theOld Problem Tapeiftheproblem isarestart. 4.3.5 Output DataBlocks CASECC -CaseControlDataTable. PCDB -PlotControl DataTable (forthestructure plotter). XYCDB -XYoutput Control DataBlock. Notes: I.CASECC will always exist. 2.PCDBwillexist onlyifastructure plotter package isincluded intheCase Control Deck. 3.XYCDB will exist onlyifaXY_UT plotter package isincluded intheCase Control Deck. 4.3.6 Method TheCaseControl Cards arereadandstored onascratch fileforlater use. Thetitle cards areabstracted toformpageheadings. Title cardabstraction isstopped byaSYM,SUBCASE, SYMC@M orREPCASE card. IFPIisstopped byaBEGIN BULK card. 4.3-1\nMODULE FUNCTIONAL DESCRIPTIONS 4.3.7 4.3.7.1Theconstruction ofCASECC isasfollows: I.Thescratch tapeisreadonecardatatime,andsubroutine XRCARD iscalled to translate thecard. 2.Thefirstfourcharacters beginning withanon-blank areidentified inakeyword table, andcardtypedependent routines areexecuted. (SeeCaseControl DeckinUser’s Manual). 3.When\"SUBCASE” typecardsareencountered, aCASECC record iswritten out. 4.Ifthecard_UTPUT (PL_T) isencountered,XRCARD images ofsucceeding cardsarewritten onP2DB. 5.Ifthecard_UTPUT (XY_UT) isencountered,IFPIXY processes thesucceeding cards into theXYCDB. Themodule conclusion isasfollows: I.AcopyofCASECC isplaced ontheNPTPforuseinrestart. 2.Ifthisrunisarestart, IFPIBiscalled toanalyze CASECC changes andsetmodify flags forlateruseinExecutive Preface module XGPI(seesection 4.7). Subroutines Subroutine Name: IFPIB I.EntryPoint: IFPIB 2.Purpose: Tosetmodify flagsforuseinmodified restart. 3.Calling Sequence: CALLIFPIB(ICASE,@PTP,CASECC,IBUFI,IBUF2,LENCC) ICASE Atwo-dimensional array (LENCC,2) forstorage ofbothcopies ofCASECC - OPTP CASECC IBU I IBUF2J LENCCarray-input. GIN_filenameoftheOldProblem Tape-BCD-input. GINOfilenameofCASECC -BCD-input. GINObuffer pointers -integer -input. Rowdimension ofICASE-integer -input. 4.3-2\nEXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl) NW_RDS 4.Method:C_M_NIIFPXOISPACE(3),NW_RDS Pointer into/IFPXO/suchthatIFPImodify flags areinSPACE(NW_RDS). CASECC andthecopyofCASECC onthe_PTParecompared according tothefollowing scheme. Thelocal array IW_RD classifies eachword inCASECC into0andI.0words: If theCASECC word isnon-zero andIBITisnon-zero inthisposition, theIBITbitisturned on in/IFPXO/.lword: IftheCASECC word isdifferent fromthe_PTPword andIBITis non-zero inthisposition, theIBITisturned onin/IFPXO/. IFPIB alsodetermines theloopnature oftheproblem. Thelooping rules areas follows: a.Thecurrent problem will loopunder thefollowing conditions: SPCsetchanges; MPCsetchanges; direct input matrix changes; transfer function setchanges; tran- sient loadchanges; frequency setchanges; differential stiffness coefficient set isgreater thanzero; andPiecewise Linear coefficient setisgreater thanzero. Ifanyoftheabove conditions aremet.LB_P$ isturned onin/IFPXO/. b.Theoldproblem might havebeenalooping problem iftheabove conditions were present inthe_PTP CASECC. Iftheoldproblem wasalooping problem asdetermined in(a)andthenu_er ofrecords inCASECC changes, L_PI_ Isset(this should force there-execution oftheentire loop). c.Iftheproblem isnotalooping problem, N_L_P$ isset. 4.3.7.2 Subroutine Name: IFPIC I. 2. 3. ISUB 181 C_RE SCRIEntry Point: IFPIC Purpose: Toconstruct setlists fropSETcards. Calling Sequence: CALLIFPIC (ISUB,181,CORE,SCRl,NWPC,ICC,NZ,THRU,NSET) -l-master set. 2-setbelongs toasubcase -integer -input. -Pointer tostorage forsetincore-integer -input/output. -Opencorearray. -GIN_ filenumber ofscratch filecontaining cardimages -integer -input. 4.3-3 (311171)\nMODULEFUNCTIONAL DESCRIPTIONS 4.3.7.3NWPC ICC NZ THRU NSET 4.3.7.4 I. 2. 3. 4.3.7.5Numberofwordspercard-integer-input. CurrentlinecountofCaseControlcardecho-integer-input/output. Lengthofopencore-integer-input/output. BCDvalue\"THRU\"-BCD-input. Numberofsetsfoundtocurrentset-integer-input. Subroutine Name:IFPID I.EntryPoint:IFPID 2.Purpose:Towriteuserdiagnostic messagesfromIFPI. 3.CallingSequence: CALLIFPID(MSGN) MSGNUsermessagenumber-integer-input. Subroutine Name:IFPIE EntryPoint:IFPIE Purpose:TowriteoutCASECCandupdatesets. CallingSequence: CALLIFPIE(CASE,ISUBC,SYMSEQ,NWDSC,181) CASEArraycontaining CaseControlrecordtobewrittenout(CASE(LENCC,2)), ISUBCFivewordBCDarraycontaining currentsubcasenumber-BCD-output. SYMSEQ-Symmetrycoefficient array-real-input. NWDSCPointertobeginningofsetlists-integer-input/output. 181Pointertoendofsetlist-integer-output. Subroutine Name:IFPIF I.EntryPoint:IFPIF 2.Purpose:Tofindthefirstfourcharacters beginningwithanon-blankononeinput card. 4.3-4\n3. Sn IW@RD IS IBEN II IFPIX IFPIA 4.3.7.6 I. 2. 3. ITYPE CASE ISUBI IFPIXEXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl) Calling Sequence: CALLIFPIF ($n,IWgRD,IS,IBEN,II) -FCRTPJ_N statement nu_er which definesthereturn tobetaken iftheentire cardisblank. -First fourcharacters beginning with anon-blank, leftjustified -BCD-output. -Nu_er ofbits/character ti_s (nu_er ofcharacters/word-l) -integer -input. -Maskusedtodetermine ifcharacter isblank ‘bOO0’ -input. -Pointer toword inwhich IWCRD begins -integer -output. Cg_N/IFPIX/CgRE(20) -20-word array holding card image -BCD-input. C¢V_W_M/IFPIA/ -See/IFPIA/description under Design Requirements (section 4.3.8). Subroutine Name: IFPIG Entry Point: IFPIG Purpose: Tofind anequal signandcopytheremainder ofthedataintoaspecified arrays Calling Sequence: CALLIFPIG (ITYPE,CASE,ISUBI) -Indicates area Io 2. 3. 4. 5. 6. 7. 8. -integer -input.inwhich tostore data. TITLE SUBTITLE LABEL HEADI HEAD2 HEAD3 PL_TID First 32words ofCASEof/¢UTPUT/ -Casecontrol array (132,2) unless ITYPE =8,when itmaybeonly32word array. Subcase nu_er -lor2ofCASEarray. CCHMCN/IFPIX/CCRE(20) -20-word array holding cardimage. 4.3-5\n_UTPUT - IFPIAMODULE FUNCTIONAL DESCRIPTIONS C_MM_N/_UTPUTI Output common block -holdsBCDtitles forNASTRAN pages. COMMON/I FPIA/ See/IFPIA/ description underDesign Requirements (section 4.3.8). 4.3.7.7 Subroutine Name: SWSRT I.EntryPoint: SWSRT 2.Purpose: Tochecksetlistsforduplicates andoverlapping intervals. sortslistsintoincreasing order. 3.Calling Sequence: CALLSWSRT(LIST,IST_R,NLIST) LIST Arrayofsetmembers. IST_R Scratch spaceoflength NLIST. NLIST Number ofmembers inLIST. 4.3.7.8 Subroutine Name: IFPIXY I.EntryPoint: IFPIXY 2.Purpose: Toconstruct theXYCDBdatablock. 3.Calling Sequence: CALLIFPIXY (FLAG) FLAG-O,firstentryforinitialization; I,dataentry; -I,lastentry. to1onreturn fromthefirstentry-integer -input/output. CARD - CARD1 -SWSRTalso FLAGisset COMMON/IFPIX/CARD(20), CARD1(20) Contains carddataasreadfromtheinputfile. Contains XRCARD translatioq ofCARDunless CARD(1) contains ‘XTIT’, ‘YTIT’, ‘TCUR’, ‘YTTI’ or’YBTI’ InthiscaseCARD1 (20)contains BCDdataoccurring aftertheequalsign. 4.3.8 Design Requirements I.Onescratch file. 2.Opencoreat/IFPIX/. 4.3-6\nEXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTl) C@MM_N/I FPIX/ Card Image XRCARD translation ofinput card20words setlists currently active 2GINBbuffers 3.Common block IFPIA. Name Length NAME 2 SUBC 1 SET 1 SYMS 1 TSTE 1 LABE 1 SUBT 1 SCRI 1 CASECC 1 BLANK 1Meanin_ Nameofdatablock forerror messages. Subcase keyword Setkeyword Symmetry sequence keyword Timestepcardselection keyword Label keyword Subtitle keyword GINBfilenumber ofscratch file GINBfilenameofCASECC Blank wordInitialized to CASE CC SUBC SETb SYMS TSTE LABE SUBT 301 CASE bbbb 4.3-7\nMODULEFUNCTIONAL DESCRIPTIONS Name CARD CeUN T BEGI TITL CASEN SPCF VEL_ ACCE ELF_ STRE DISP UTP SYM FREQ DLBA TEMP DEFO TIME SPC MAXL IC METH LOAD MPC STIF ALL THRU SORT UNS_Length l 1 1 IIMeanin Heading wordcard CARD Heading word COUN COUNT T Beginbulkkeyword BEGI Titlekeyword TITL CaseControl pageheading CaseControl Deckecho Forces ofconstraint keyword SPCF Velocity keyword VEL_ Acceleration keyword ACCE Element forces keyword ELF_ Element stress keyword STRE Displacement keyword DISP _utput keyword UTP Symmetry subcase keyword SYM Frequency setkeyword FREQ Dynamic loading keyword DL_A Temperature field keyword TEMP Deformation setkeyword DEF Time keyword TIME Single-point constraint setkeyword SPC Maximum number ofoutput lines keyword MAXL Initial condition setselection id IC Realeigenvalue orbuckling method METH selection keyword Load setselection keyword LOAD Multipoint setselection keyword MPCb Stiffness thermal field keyword STIF ALLkeyword ALLb THRU keyword THRU Sorted echokeyword S_RT Unsorted echokeyword UNSOInitialized to 4.3-8\nEXECUTIVEPREFACEMODULEIFPI(INPUTFILEPROCESSOR, PARTl) Nanle ECH_ PL_T M_DE PUNC PRIN NWPC NCPW B_TH N_NE PCDB NAME VECT SYMC EQUAL1 NM_DES IB_B IEND ISYMCM L_ADN I_UT2 ICC NSET NSYM IN_M_R NPTP PTP D_L ZZZZBBLength l l l l l l l l l l 2Meanino Bulkdataechokeyword Plotkeyword Modes keyword Punch keyword Print keyword Number ofwords percard Number ofcharacters perword (NASTRAN) Echo-sorted andunsorted None keyword Plotcontrol dataGIN_filename GINBerror message forPCDBfile Alternate displacement keyword Symcom keyword Equal signleftadjusted Value ofmodes card Structure plotflag O,notcurrently instructure plotmode l,instructure plotmode Sy_om flag Current Subcase IDnumber Printed cardcount Number ofcurrent setlists Number of’SYM’ subcases FlagtoturnoffTitle cardsearch GIN_file nameoftheNewProblem Tape GIN_file nameoftheOldProblem Tape Dollar sign Hollerith zerosInitiated to ECH PL_T M_DE PUNC PRIN 20 4 B_TH N@NE PCDB PCDB bbbb VECT SYMC =bbb l 0 0 0 1 O 1 0 1 0 NPTP _PTP $bbbb O000bb 4.3-9\nMODULE FUNCTIONAL DESCRIPTIONS Name ISTR ISU3 K2PP B2PP M2PP DSC_ REPC LENCC LINE OM TFL DEFA ELST MAT @FRE IMAG PHAS REAL CMET SDAM INER ADIS AVEL AACC N_NL C_NF XYPL PLC_Length 1 1 1 1 1Mean_ Storage flagforIFPIGtitles Subcase ormaster CASECC pointer Keywords fordirect inputmatrix selectionInitiated to 1 1 K2PP B2PP M2PP DSCO Keywordfordifferential stiffness set selection Keywordforrepeat subcase subcase REPC Length ofCaseControl Record 166 KeywordforLINE/page count LINE Wordtodistinguish between SUBC_H OMbb SUBCASE Key TFL Key DEFA Key ELST Key MATE Key _FRE Key IMAG Key PHAS Key REAL Key Key use Key selection Keywordforsolution setdisplacement SDIS selection Keywordforsolution setvelocity selection SVEL Keywordforsolution setacceleration SACC selection Keywordfornon-linear loadsetselection N_NL Notused KeywordforXYPL_T packet delimiter XYPL KeywordforPiecewise Linear setselection PLC@wordfortransfer function setselection wordfordefault specification wordforelement stress setselection wordforthermal material setselection wordforoutput frequency setselection wordforreal/imaginary printout wordformagnitude/phase printout wordforrealorreal/imaginary printout wordforcomplex eigenvalue setselection CMET wordforStructural Damping Table for SDAM inmodalformulation wordforInertia Relief Element set INER 4.3-10\nName AXIS NLL_ DELE XYCB ONEB HARM SINE COSl FLUID SUBS AVEC F_RC RAND XYOU LBA PLTI PLT2 XTIT YTIT TCUR YTTI YBTI IBEN EQUAL PRES TEMP 4.EXECUTIVE PREFACE MODULE IFPI(INPUT FILEPROCESSOR, PARTI) ken 1MeaninE Keywordforselection ofAxis symmetric boundary condition ywordfornon-linear output setselection Keywordforelement deletion setselection GIN_filenameofXYcontrol datablock BCDone Keywordforharmonic output control Keywordforsineboundary conditions Keywordforcosine boundary conditions Keywordforfluidboundary conditions KeywordforSUBSEQ Keywordforsolution setvector output Notused Keywordforrandom setselection KeywordforXYPLOT packet delimiter Keywordforoutput loadsetselection GINOfilenameofBCDnlottape GIN_filenameofbinary plottape Keywords forXYoutput titles Rightshifted blank’O00b’ Rightshifted equal ‘000=’ Alternate displacement keyword Alternate displacement keywordInitiated to AXIS NLLO DELE XYCB Ibbb HARM SINE C_Sl FLUI SUBS SVEC RAND XY@LI OLOA PLTI PLT2 XTIT YTIT TCUR YTTI YBTI PRES TEMP Interface with/SYSTEM/ (SeeSection 2.4). IFPIcansetthefollowing cellsofSYSTEM: a.NOG-(NOGOflag). Ifafatalerrorisdetected. b.NLPP-(Number oflinesperpage). IfaLINEcardissupplied bytheuser. c.STFTEM -(Material Temperature SetID).IfaTEMP(_TE) cardissupplied. 4.3-II (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS d.ECHB-(Echoflag). IfanECH_request ismade. 5.Interface with/_UTPUT/. IFPIsupplies theproblem title, subtitle, andlabelaswellasthePlotID. 4.3.9 Diagnostic Messages IFPImakeseveryattempt toprocess theentire CaseControl Decksothatthecomplete Preface willrun.Henceallfatalmessages onlycausetheN_GOflagtoturnon. IFPIcauses messages 601-699. Fortheexactnature ofthesemessages, refertotheDiagnostic Message section oftheUser’s Manual. 4.3-12 (811172)\nEXECUTIVE PREFACEMODULE XSgRT (EXECUTIVEBULKDATACARDS_RT) 4.4 EXECUTIVE PREFACE ,MODULE XS_RT (EXECUTIVE BULKDATACARDS_RT) 4.4.1 Entry Point: XS_RT 4.4.2 Purpose Thefunction ofXSBRT istoprepare afileontheNewProblem Tapecontaining thesorted bulkdata. Theoperation ofXS_RT isinfluenced bythetypeofrun. Ifacoldstart, thebulk data isreadfromthesystem input stream (ortheUser’s Master File), sorted andwritten onthe NewProblem Tape. Ifanunmodified restart, thebulk dataiscopied fromtheOldProblem Tape ontotheNewProblem Tape. Ifamodified restart, thebulkdata isreadfromtheOldProblem Tape, andcards aredeleted and/or added inaccordance with cards inthesystem input stream. Additionally, flags aresetwithin restart tables foreachcardtypechanged inanyway. Again, thesorted bulkdata iswritten ontotheNewProblem Tape. Aprint oftheunsorted and/or sorted bulkdata ismadeonrequest. XS_RT processes alldatacards between theBEGIN BULKandENDDATA cards intheinput stream. Bothcards must bepresent toproperly bracket theNASTRAN Bulk DataDeck. 4.4.3 Callin 9Sequence CALLXS_RT. XS_RT, aPreface module, iscalled onlybythePreface driver, SEMINT. 4.4.4 Method Iftheinput istobefromaUserMaster File, XS_RT begins bypositioning thefiletothe beginning oftheproper subset ofbulkdatacards. INITC_ isthencalled toinitialize machine dependent masks andconstants. Theopencorebelow XS_RT (/ES_RT/) isdivided into5GIN_buffers andaworkbuffer. Thiswork buffer willcontain eachdatacardandachaining pointer to indicate itssorted position. Thatis,thecards willbeplaced intotheworkbuffer inthe sameorder asread, buttheir sorted order willbeshown byachaining wordwith eachcard pointing totheposition ofthenextcardinalphanumeric sort. Ifthework buffer isunable toholdallofthebulkdata cards, eachsubset thatfills thebuffer isunchained andwritten insorted order ontoascratch file. Thiswriting ontoascratch filefrees theworkbuffer for another subset ofdatacards. 4.4-I\nMODULE FUNCTIONAL DESCRIPTIONS Threescratch filesmaybecome involved insorting alargenumber ofbulkdatacards. Afterthefirsttwoscratches arefilled withsorted subsets, theyaremerged, while main- taining thesorted order, ontoathirdscratch. Fromthispoint_ aftereachnewsubset is written ontoascratch, itismerged withthescratch containing allprevious subsets. As anexample, assume threescratches arenamedA,B,andC.Scratch Aiswritten withthefirst subset ofdatafromafilled workbuffer. Scratch Biswritten withthesecond subset. Scratch AandBarethenmerged toformscratch C.Thisfreesscratch AandB.Scratch Ais thenwritten withthethirdsubset ofdata. AandCaremerged toformanewB.Aisthen written withthefourth subset. AandBaremerged toformanewC.Thisprocess continues untilallbulkdatahasbeensorted. Following thefinalmerge, oneofthescratch files willcontain allofthesorted bulkdatacards. Asthesortandmergeoperations arebeingperformed, anycontinuation cardsordelete cardsencountered arewritten ontoseparate holding files. Afteralldatacardsintheinput stream havebeenprocessed, eachoftheseholding filesisprocessed. Thedelete cardvalues areplaced inascending orderandanyoverlaps orredundancies areremoved. Thecontinuation cardsarechecked forduplication andanin-core dictionary oftheirconnection words isformed. XS_RTmaynowmakeapassthrough thescratch filecontaining allofthesorted bulkdata cardswithin theinputstream. During thispass,theUserMaster File(UMF)ortheOld Problem Tape(_PTP) datacardsaremerged withthosefromtheinputstream. BoththeUMFand OPTPdatacardswereproperly sorted during theirpreparation. Asthismergeprogresses, any datacardsdesignated forremoval bydelete control cardsarediscarded. IftheNASTRAN run forwhichXSORTisoperating isarestart, alldatacardswithin theinputstream plusany deleted fromthe_PTPwillcausedatacardtypeflagstobesetwithin restart tables. This entire passisnotperformed iftherundoesnotrequire either aUMForOPTP. Nowafinalpassoftheresulting sorLed dataismadetointroduce anycontinuation cards andwrite thecompleted BulkDataDeckontotheNewProblem Tape. Thecontinuation cardsare connected tothesorted datacardsbymatching connection words. Continuation cardscaninno wayaffect thesorted order. Ifaprintoftileresulting sorted deckisrequested, itis performed during thispass. During anysortcollation thedatacardsareordered bycomparing half-fields fromleft toright. Eachbulkdatacardmaycontain uptoten,eightcolumn (character) fields. 4.4-2\nEXECUTIVE PREFACE MODULE XS_RT (EXECUTIVE BULKDATACARDSgRT) Because ofcomputer wordsizeconstraints, eachdatacardisstored intotwenty memory words, four characters (half acardfield) perword. Sorting proceeds bycomparing thefirst words (4charac- ters) fromeachcard. Ifanorder cannot beestablished, i.e,, thewords areequal, thesecond words fromeach cardarecompared, andsoon,until anorder isestablished ortotal duplication isdetermined. Eachfield (8characters) isleft(BCD) orright (integer) justified prior tosorting toeliminate leading ortrailing blanks. Thecharacters within thefirst field ofeachcardareconverted toaspecial internal character setprior tocomparing toeliminate machine dependent collation sequences which might order thesamecards differentlyondifferent machines. This internal setforces thecollation order tobeascending fromblank through allnumbers thenallletters. Aflowchart isgiven inFigure I. 4.4.5 Subroutines Inthefollowing, notethatXRECPS, RPAGE, INITCg, XFADJ, XBCDBI, XPRETY, CRDFLG, EXTINT, andINTEXT aresecondary entry points inXRECPS. 4.4.5.1 Subroutine Nane: XRECPS I.Entry Point: XRECPS 2.Purpose: Positions thecontinuation cardfiletotheproper record (card image) as determined from thein-core continuation carddictionary. 3.Calling Sequence: CALLXRECPS (NEW, @LD) Where: NEW=thefileposition being requested 9LD=thefileposition lastrequested. Both arguments areinteger record numbers. 4.4.5.2 Subroutine Name: RPAGE I. 2. with thesystem subroutine PAGE. 3.Calling Sequence: CALL RPAGE (NLINE) Where: NLINE =integer number oflines being output.Entry Point: RPAGE Purpose: Counts output print lines forXSgRT, andperforms thenecessary interface IfNLINE _lO0apageeject is 4.4-3"},"title":"Programmer's Manual P33"},"/docs/programmers/programmers_manual_034/":{"data":{"":"MODULEFUNCTIONAL DESCRIPTIONS 4.4.5.3 I. 2. 3. 4.4.5.4forcedandthelinecountissettoNLINE-lO0. Subroutine Name:INITC_ EntryPoint:INITC@ Purpose:Initializes machinedependentmasksandconstantswithinXSORT. CallingSequeL_ce: CALLINITC_ Subroutine Name:XFADJ I.EntryPoint:XFADJ 2.Purpose:Adjustsfourcharacterfields,leftorright,twoorfourfieldsat atime.Ifthefieldscontainonlyintegers,theshiftisright,otherwisetheshift willbeleft.Thisroutinedetermines onlythedirectionofshiftrequired. Actual shiftingisperformedbyXFADJI. 3.CallingSequence: CALLXFADJ(BUF,SD,K) Where:BUF=fieldarraytobeshifted SD=IO’shift twofields atatime I1,shift four fields atatime 0,returned ifright shift wasdone.K ,returned ifleftshift wasdone. 4.4.5.5 Subroutine Name: XBCDBI I.Entry Point: XBCDBI 2.Purpose: Converts two,fourcharacter BCDinteger fields (right adjusted intheleft mostfour characters ofthecomputer word) intoasingle binary integer (right adjusted inthesecond ofthetwoinput words). 3.Calling Sequence: CALLXBCDBI (BUF) Where: BUF:two!ord array tobeconverted. 4.4.5.6 Subroutine Name: XPRETY I.Entry Point: XPRETY 4.4-4\nEXECUTIVEPREFACEMODULE XSgRT (EXECUTIVE BULKDATACARDS_RT) 4.4.5.72.Purpose: “Pretties-up” printed output byleftadjusting allfields toeliminate any leading zeros introduced wheninteger fields areright adjusted. 3.Calling Sequence: CALLXPRETY (BUF) Where: BUF=cardimage array. Subroutine Name: CRDFLG I.Entry Point: CRDFLG 2.Purpose: Setsthecardtypeflags within therestart tables. 3.Calling Sequence: CALLCRDFLG (CARD) Where: CARD =first oftwowordcardtypefield. Subroutine Name: EXTINT I.Entry Point: EXTINT 2.Purpose: Converts cardtypefield fromthemachine dependent character codeto aninternal machine independent code. 3.Calling Sequence: CALLEXTINT (CTYBF) Where: CTYBF =first oftwoword cardtypefield. Subroutine Name: INTEXT I.Entry Point: INTEXT 2.Purpose: Converts thecardtypefield from aninternal machine independent codeto themachine dependentcharacter code. 3.Ca_ling Sequence: CALL INTEXT (CTYBF) Where: CTYBF =first oftwowordcardtypefield. Subroutine Name: XFADJI I.Entry Point: XFADJI 2.Purpose: Adjust fourcharacter fields leftorright, twoorfourfields atatime. This routine performs actual shifting withthedirection ofshift controlled through the4.4.5.8 4.4.5.9 4.4.5.10 4.4-5\nMODULEFUNCTIONAL DESCRIPTIONS callingsequence. (NoteentrypointXFADJ). 3.CallingSequence: CALLXFADJI(BUF,SHIFT,SD) Where: BUF=FieldArraytobeshifted. SHIFT=Function LSHIFT orRSHIFT. SD=IO,shift twofields atatime. b,shift fourfields atatime. 4.4.5.11 Function lqame: ISFT I.Entry Point: ISFT 2.Purpose: Performs special shifting functions forsubroutine XFAJI. 3.Calling Sequence: CALLISFT RESULT =ISFT(BUF,SFTCNT,J) where: BUF=Word tobeshifted. SFTCi_T =Bitstobeshifted. J=Shift diFection control; 3=right, 4=left. Design Requirements I.Data cards operated uponbyXSORT mustconform totheNASTRAN format forbulk datacards (ten, eight character fields percard). Seesection 2oftheUser’s Manual fordetails. 2.Datacards must contain onlyvalid BCDkeypunch codes orblanks. Non-standard multi-punched code (e.g., some IBMEBCDIC) will cause unpredictable results. 3.XS_RT requires sufficient opencore tocontain fiveGIN_buffers andawork buffer foratleast tendatacards. (Each datacard requires twenty-one core locations). Sort efficieF:cy increases inproportion tothesizeofthework buffer. 4.Thecontinuation carddictionary mustfitintothecorework buffer during thefinal pass. Eachcontinuation cardrequires twodictionary locations. 5.XS_RT logic isbiased toward input thatisalready sorted. That is,theprogram willoperate atamuch greater speed ifverifying asort rather thanproducing asort.4.4.6 4.4-6\nEXECUTIVEPREFACEMODULEXS_RT(EXECUTIVE BULKDATACARDS_RT) 4.4.7Diagnostic Messages XS_RT canproduce twocatagories ofdiagnostic messages. Thefirst aretermed USER messages anddealwith bulkdatacarderrors. Thesecond aretermed SYSTEM messages which aregenerally fatal innature andindicate serious I/_malfunctions. XS_RT message numbers includes 201through 216. Allmessages arelisted andexplained in section 6oftheUser’s Manual. 4.4-7\nMODULEFUNCTIONAL DESCRIPTIONS XS RTENTER No I Position UMF toproper file -i CallINITCB toinitialize constants \u0026 masks Initialize work buffer with low\u0026highlimit Readcard Ifrominput No Print card IWrite cardoncontin, file Write cardondelete fileYesAdjust char. toleft toeachfield Is card ENDDATA ? Is carda continuation ? Is card a comment ? Is Figure l.(a) Flowchart formodule XSBRT. 4.4-8\nEXECUTIVEPREFACEMODULEXSgRT(EXECUTIVEBULKDATACARDS¢RT) Between veto Inextfield Duplicate card J I ISorted position found -setchaining pointer No Unchain sorted work buffer andwrite onascratchNo Merge twoscratches \u0026 for_, a3rdscratch Process delete cardfile -sort \u0026eliminate redundancy re-write ontofile JMerge(_)Old Prob. Tape orUMFwithfinal merged scratch from input. Remove anycards deletedSet-up next scratch for nextunload Figure l.(b) Flovchart formodule XS9RT. 4.4-9\nMODULEFUNCTIONAL DESCRIPTIONS Copysortedcardwithout continuation ontonew problemtapeFormcontinuation card dictionary incore Scansortedcardfileproduced fromthelastmerge(_)or merge (_ifUMForrestart No No Collate cont.cardwithsorted card. Writebothontonew problem tapelCopysorted card fileontonew problem tape No Print card(s) RETURN Figure l.(c) Flowchart formodule XS_RT. 4.4-I0\nEXECUTIVEPREFACEMODULEXS(aRT(EXECUTIVEBULKDATACARDSi_RT) more cards insortedYes Any unused No continuations ? Message Figure l.(d) Flowchart formodule XSgRT. 4.4-II\nEXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR) 4.5EXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR) 4.5.1Entry Point: IFP 4.5.2 Purpose Toprocess theBulkData Decksorted byExecutive Preface module, XSORT. Thistask is accomplished asfollows: l)thesorted BulkDataDeckisreadfromtheNewProblem Taoe (NPTP) card-by-card; 2)thecontents ofeachfield ofeachcardarevalidated (seesection 2.4ofthe User’s Manual fordetailed descriptions ofeachbulkdatacard); 3)card images ormodified card images arewritten ondatablocks ortheNPTPortheDataPoolFile (seesection 2.3.2 of theProgrammer’s Manual fordetails ontheformats ofthese datablocks). 4.5.3 Callin 9Sequence CALL IFP. IFP,anExecutivePreface module, iscalled onlybythePreface driver, subroutine SEMINT. 4.5.4 In_ Theinput toIFPconsists oftheBulkDataDecksorted byExecutive Preface module XSgRT. 4.5.5 Theoutput ofIFPconsists of:I)datablocks usedinRigid Formats; 2)theAXICdata block, which isprocessed byExecutive Preface Modules IFP3, IFP4andIFP5andispresent onlyif theNASTRAN runisaconical shell (aunique structural elemtn) problem, ahydroelastic problem, oranacoustic cavity problem; 3)thePVTExecutive table, which contains thenames andvalues of allDMAPparameters input bymeans ofthePARAM bulkdatacard, andwhich iswritten ontheNew Problem Tape tobeprocessed byExecutive Preface module XGPI; and4)DMI’s (Direct Matrix Inputs) andDIT’s (Direct Table Inputs), eachofwhich iswritten ontheDataPoolFileasadatablock andisindistinguishable fromanymatrix datablock ortable datablock pooled bytheExecutive Segment FileAllocator (XSFA) module. 4.5-I (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.5.5.1 Output DataBlocks UsedinRigidFormats GEOMI GERM2 GERM3 GERM4 EPT MPT DIT EDT DYNAMICS MATP_L Note:-Gridpoint, coordinate system, andsequence data. Element connection data. Static loadsandtemperature data. Displacement setdefinitions data. Element Property Table. Material Property Table. Direct InputTables. Element Deformation Table. Collection ofbulkdatacardsforadynamics problem. Datablockcontaining matrices inputonDMIGbulkdatacards. Donotconfuse theDTI(Direct TableInput) bulkdatacardandtheDIT(Direct InputTable) datablock. 4.5.6 Method 4.5.6.1 General Comments Thebulkdatacardsprocessed byIFPareclassified intofivecategories. Listed belowis abriefexplanation ofeachwithafewexamples. I.Closed EndCards (Fixed Length Card) CardssuchasCQUAD2 andPRODgothrough allthestandard bulkdatacardchecks (see4.5.6.2) before beingprocessed bythecarddependent subroutines within IFP,(IFSiP, i=I,2,3,4, 5).Theseclosed endcardsareoutput tooneofthestandard GINBfiles. 2.OpenEndedCards (Variable Length Cards) IncardssuchasSPClandPLFACT, sincethelength andtherefore theformats arenot known, thebulkdatachecks usingthedatainitialized intheblockdatasubprograms mustbemadeinthecarddependent subroutines. Also,since thelength isnotknown, a flagisplaced attheendoftheinformation forthatcardbefore beingwritten onthe fileinorderthatroutines reading anopenendedcardwillbesignaled astoanend-of- cardcondition. 4.5-2 (8/I/72)\nEXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) 3.GRDSET andBAR_R Cards Special cards suchasGRDSET andBAR_R arenotoutput toaGIN_datablock, butarestored inlocal variables, andprovide default values fortheGRIDandCBARcards. 4.DMIandDTICards DMIandDTIcards areunique inthemanner inwhich theyareusedbytheuserandorocessed byIFP. TheDMIcardenables theusertodefine matrix datablocks directly, while the DTIcardgives theuserthecapability toinput hisowntable datablocks directly. The usermustwrite aDMAP sequence orusetheALTER feature -seesection 2.2oftheUser’s Manual -intheExecutive Control Decktoalter theRigid Format chosen inorder touse BothDMIandDTIcards 4.5.6.2theDMIorDTIfeature since heisdefining hisowndatablocks. arewritten directly ontotheDataPoolFile. 5.PARAM Cards PARAM bulkdatacards arestored inopencorebyIFPuntil theentire BulkData Deckhas beenprocessed. PARAM cards arethenwritten asthePVT(Parameter Value Table) onthe NPTPforsubsequent processing bytheExecutive Preface module XGPI. CardProcessing I.IFPsearches theNPTPfortheBulkDataDeckandextracts itin20word (onephysical card) segments. Eachcardispassed tosubroutine RCARD, which takes theBCDcard images andconverts thefields thereon tovalues, andidentifies thevalues astotype: blank data field, integer datafield, realsingle precision datafield, BCDdatafield, real double precision data field oradatafield which isinerror. IFPalways hastwophysical bulkdatacards ininternal storage areas: the\"current\" cardandthe\"next\" card. Misthelocal F_RTRAN array where thevalues ofthecurrent bulk datacardarelocated, andMlthelocal F_RTP4_N array where thevalues ofthenext cardarelocated. After thecurrent cardisprocessed, thedatainMlaretransferred into M,andnewcardvalues forMlareinput fromtheNPTP. Whenthevalues fromMlaretrans- ferred toM,thefirst twowords (thecardmnemonic) arestripped off. Ml(3) isstored in M(1), Ml(4) isstored inM(2),and soon. 4.5-3\nMODULE FUNCTIONAL DESCRIPTIONS 2./IFPXl/ isreferenced toverify theadmissibility ofthename(mnemonic) ofthe particular cardtakenfromtheNPTP. 3.Theapproach acceptability flagischecked. Thisflagisdefined asfollows: 0 = 1= 2=OKforanyapproach; Notusedbydisplacement approach; lllegal fordisplacement approach. Theapproach flag(DISPL, DMAP)isfoundin/SYSTEM/. 4.Theproper output filesareestablished. SeeTable1orTable 2fortheoutnut file onwhich thevarious bulkdatacardswillreside. 5.Uniqueness flags, which reside inC_MM_N/IFPX5/, aredefined foreachcard typeasfollows: 0-Nocheck ismade; 1-Acheckismade; 2-Aspecial check ismade. Forexample, onthebulkdatacardC_NR_D, field2istheEID,anditmustbeunique with respect toallother C_NR_D EID’s. 6.Thenextphysical cardisreadfromtheNPTP. Thiswillbethenextcardtobeprocessed. 7.Acheck fortoomanycontinuation cardsismade. Thischeck ismadeonfixedlength cardsonly. 8.Acheck ismadefortheminimum andmaximum number ofwords foralogical bulkdatacard. 9.Acheckfortheproper typesofvalues forthefields onacardismadebyreferencing /IFPXT/, whichcontains format codesforeachcardtypeasfollows: 0:Blank 1:Integer 2:Real 3=BCD 4=Double Precision 5=Anything. 4.5-4\nEXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) When RCARD passes format values toIFP,aformat codeof0willoverride thischeck. Inthe carddependent codecheck (step lO),thevalue will belooked attoseeifitisinerror. lO.Anauxiliary subroutine IFSiP, i=l,2,3,4,5,iscalled toexecute carddependent code. If.Iftheinput cardpasses thetests inthecarddependentcode, thedata arewritten on theappropriate GIN9output file. 4.5.6.3 Module Conclusion Whenthesorted BulkDataDeckhasbeenexhausted, thefollowing steps arecarried out. I.Theappropriate trailer codes arewritten foreachdatablock. Forlistings of trailer information reference section 2.3.2. 2.ThePVTiswritten onthe_PTP. 3.Restart flags aresetin/IFPXO/. 4.5.7 Subroutines IFPusestheutility routine RCARD describedinsection 3.4.20. 4.5.7.1 Block DataSubprogram: IFXIBD Purpose: Toinitialize /IFPXI/,which isusedbyIFPtovalidate card names. Allbulk data card names must appear inthistable. 4.5.7.2 Block DataSubprogram: IFX2BD Purpose: Toinitialize /IFPX2/.This table contains twowords perentry (twowords per card type): thefirst gives theGIN9output filenun_)er, andthesecond gives theapproach acceptability flag. 4.5.7.3 Block DataSubprogram: IFX3BD Purpose: Toinitialize /IFPX3/.Thistable contains twowords perentry (twowords per cardtype): thefirst word isusedastheConical Shell Problem flag, andthesecond word is used internally tostore thenu_er ofwords tobeoutput totheGIN9output file. 4.5-5(RII172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.5.7.4 BlockDataSubprogram: IFX4BD Purpose: Toinitialize /IFPX4/. Thistablecontains twowords perentry(twowords per cardtype): thefirstistheminimum number ofwordsallowable, thesecond isthemaximum number ofwordsallowable. Thefirstwordofanentrybeingnegative implies thecardisopen ended. 4.5.7.5 BlockDataSubprogram: IFX5BD Purpose: Toinitialize /IFPX5/. Thistablecontains twowords perentry (twowords per cardtype): thefirstisapointer into/IFPX7/, thesecond isthefield2uniqueness checkflag. 4,5.7.6 BlockDataSubprogram: IFX6BD Purpose: Toinitialize /IFPX6/. Thistablecontains twowords perentry (twowords per cardtype): thefirstisheader word1(cardtype), thesecond isheader word2(trailer bit position) ofthethreewordheader information ofeachlogical record, whichcorresponds toall thedataofparticular bulkdatacardtype. Seesection 2.3.2fordetails. 4.5.7.7 BlockDataSubprogram: IFX7BD Purpose: Toinitialize /IFPX7/. Eachentrycontains theadmissible sequence offormat codesforthatcardtype(seestep9insection 4.5.6.2 above). 4.5.7.8 Subroutine Name: IFSiP, i=I,2,3,4,5 I.EntryPoint: IFSiP, i=I,2,3,4,5 2.Purpose: Thesearethefoursubroutines thatthemodule driver IFPcallstoexecute carddependent code. 3.Calling Sequence: CALLIFSiP($nl,$n2,$n3) nIFORTRAN statement number defining thereturn taken intheeventofaformat n2 n3ordataerror. FORTRAN statement number defining thereturn takenwhenlocalvariables are settoprovide default values forappropriate cards. FORTRAN statement number defining thereturn takenintheeventofadataerror. 4.5-6 (8/I/72)\nEXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) 4.5.7.9 Subroutine Name: IFPDC_ I.Entry Point: IFPDC_ 2.Purpose: L_GICAL FUNCTION IFPDC_ decodes packed component codeandreturns .FALSE. if noerrors aredetected and.TRUE. ifanyerrors aredetected. Thedecoded results arestored inlabeled common block /IFPDTA/.Thissubroutine isalsousedbythePreface Module IFP3. 4.5.8 Design Requirements Open coreisdefined in/IFPXX/.Opencoreisusedtostore allPARAM cards until theBulk DataDeckhasbeenexhausted, atwhich timethePARAM cards arewritten ontheNPTPasthePVT Executive table. IFPhasacompilation-dependent overlay structure asshown inthesketch below. IFSIP IFS2PIFP RCARD Block Data Routines IFS3Pi IFS4P IFS5P /IFPXX/OpenCore Theopencore (common block /IFPXX/mustbelocated below thelongest oftheIFSiP segments. This isautomatically doneontheUnivac ll08butmustbedonebytheprogrammer ontheother machines. 4.5.9 Diagnostic Messages Ifafatal error isdetected during anyphase oftheprocessing ofmodule IFP,theN_G_flag will beset,andtheerror message willbeprinted out. IFPwillcontinue processing data cards until allareprocessed. 4.5-7 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS Tablel(a).BulkDataCardsProcessedbyIFPSortedbyInternalCardNumber. Thefollowinglistgivesanexplanation ofthecolumnheadingsonthefollowingpagesof TableI. A=InternalIFPBulkDataCardNumber B=BulkDataCardName (anasterisk following anameimplies thecardisnotavailable) C=Internal IFPGIN_Output FileNun_er D=DataBlock Name E=Approach Acceptance Indicator -2=Illegal fortheForce Approach -l=NotUsedbytheForce Approach 0=OKforanyApproach l=NotUsedbytheDisplacement Approach 2=Illegal fortheDisplacement Approach F=Minimum Number ofWords Allowed PerLogical Card (Fnegative implies anopenended card) G=Maximum Number ofWords Allowed PerLogical Card H=Format Check Pointer IntoIFX7BD I=Field 2Uniqueness Check Flag 0=NoCheck isMade l=Check isMade 2=Special J=Subroutine L_CATE CodeforCard onOutput DataBlock K=Trailer BitPosition L=Pointer toSecondary (Card Dependent) Code Sl=Subroutine IFSIP $2=Subroutine IFS2P $3=Subroutine IFS3P $4=Subroutine IFS4P $5=Subroutine IFS5P M=FBRTRAN Statement Number intheCardDependent Subroutines N=Conical Shell Problem Flag -l=Illegal forShell Mode 4.5-8 (8/I/72)\nEXECUTIVEPREFACEMODULEIFP(INPUTFILEPROCESSOR) Tablel(b). BulkDataCards ProcessedbyIFPSorted byInternal CardNumber. 0=OKforShell Mode l=PutsCard IntoDifferent DataBlock 0=Users MapforDataBlocks IFX2BD,…,IFX6BD Values forI=1,2or3 J=1,2or3 H=A,B,C,D orE K=1,2,3,4,5 or6 I=IsDataStatement intheBlock DataProgram J=TheGroup ofAThrough EContinuation CardBlocks Within theIthDataStatement H=Alphabetic Character inCol6(Continuation Column) intheJthGroup K=ThePairNumber onLineHWhere theActual Data islocated. 4.5-9 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 1 2 3 4 5 6 7 8 9 I0 II 12 13 14 15 16 17 18 19 2O 21 22 23 24 25 26 27 28 29 3O 31 32 33 34 35 36 37 38 39 4O 41 42 43 44 45 46 47 48 49 5O 51 52 53 54 55 56 57 58Tablel(c). BulkDataCardsProcessed byIFPSorted CD EFGHIJ GRID 1GEOMI 0412 114501 GRDSET 1GEOMI 0412132 0 ADUMI 1GERM1 0885370 0 SEQGP 1GERM1 -I483705301 CORDIR 1GEOMI 0483701801 CORDIC 1GEOMI 0483701701 CORDIS 1GEBMI 0483701901 C_RD2R 1GEOMI 012164512101 CORD2C 1GERM1 012164512001 CORD2S lGERM1 012164512201 PL_TEL 8GE@M2 04850505201 SPCI I0GE@M4 -2-49-I05481 SPCADD I0GERM4 -248-I15491 SUPORT I0GEOM4 -2483705601 OMIT I0GEOM4 -2483705001 SPC I0GERM4 -248I0105501 MPC I0GEOM4 -248-I04901 FORCE 9GERM3 081210904201 M_MENT 9GERM3 081210904801 FORCE1 9GERM3 081212104001 MOMENT1 9GERM3 081212104601 F_RCE2 9GE@M3 081213304101 M_MENT2 9GERM3 081213304701 PLOAD 9GERM3 081214505101 SLOAD 9GEOM3 -24815705401 GRAV 9GE@M3 081216514401 TEMP 9GEOM3 04815705701 GENEL 8GEOM2 -2-49-I14301 PROD 2EPT 04121651902 PTUBE 2EPT 041217711602 PVISC 2EPT -24818901802 ADUM2 1GEOMI 0885370 I0 PTRIAI 2EPT 041622111202 PTRIA2 2EPT 04823701302 PTRBSC 2EPT 041225711102 PTRPLT 2EPT 041225711502 PTRMEM 2EPT 04823701402 PQUADI 2EPT 04162211702 PQUAD2 2EPT 0482370802 PQDPLT 2EPT 04122570602 PQDMEM 2EPT 0482370502 PSHEAR 2EPT 04823701002 PTWIST 2EPT 04823701702 PMASS 2EPT -2482690402 PDAMP 2EPT -2482690402 PELAS 2EPT -2484970302 C_NROD 8GEOM2 081227711601 CR_D 8GEOM2 0483703001 CTUBE 8GEOM2 0483703701 CVISC 8GEOM2 -2483703901 ADUM3 1GEOMI 0885370 I0 CTRIAI 8GEOM2 081231313301 CTRIA2 8GEOM2 081231313401 CTRBSC 8GEOM2 081231313201 CTRPLT 8GEOM2 081231313601 CTRMEM 8GERM2 081231313501 CQUADI 8GEOM2 081232512801 CQUAD2 8GERM2 081232512901byInternal CardNumber. KL MN 45$3I00-I 0$3200-I 0S5I00 0 53S1 40-I 18S1500-I 17S1600-I 19S1700-I 21S1800-I 20S1900-I 22S1I000 -I 52S1IIII -I 58$33980 -I 59$34020 1 56S11400 -I 50S11400 -I 55Sl1600 -I 49$31700 -I 42S11800 1 48S11800 1 40S12000 -I 46S12000 -I 41S12200 -I 47S12200 -I 51S12400 -I 54S12500 -I 44Sl2600 1 57S12500 -I 43$32800 -I 9S12900 -I 16S12920 -I 18S1310-I 0$5200 0 12S12980 -I 13S13000 -I IIS13020 -I 15S13020 -I 14S13000 -I 7S12980 -I 8S13000 -I 6S13020 -I 5S13000 -I I0S13000 -I 17S13000 -I 4Sl3200 -I 2S13200 -I 3S13240 -I 16S13260 -I 30S13281 -I 37S13282 -I 39S13283 -I 0$5300 0 33S13360 -I 34S13360 -I 32S13360 -I 36S13360 -I 35S13360 -I 28Sl3460 -I 29S13460 -IIJHK IIAI IIA2 IIA3 IIA4 IIA5 IIA6 lIB1 lIB2 lIB3 lIB4 lIB5 lIB6 IICI IIC2 IIC3 IIC4 IIC5 IIC6 lID1 lID2 lID3 lID4 lID5 lID6 lIE1 lIE2 lIE3 lIE4 lIE5 lIE6 12AI 12A2 12A3 12A4 12A5 12A6 12BI 12B2 12B3 12B4 12B5 12B6 12CI 12C2 12C3 12C4 12C5 12C6 12DI 12D2 12D3 12D4 12D5 12D6 12El 12E2 12E3 12E4 4.5-10 (8/I/72)\nEXECUTIVE PREFACE MODULEIFP(INPUTFILEPROCESSOR) Tablel(d) AB C 59 60 61 62 63 64 65 66 67 68 69 7O 71 72 73 74 75 76 77 78 79 8O 81 82 83 84 85 86 87 88 89 9O 91 92 93 94 95 96 97 98 99 I00 I01 102 103 I04 I05 106 107 I08 109 II0 III 112 113 114 115 116CQDPLT 8 CQDMEM 8 CSHEAR 8 CTWIST 8 CONMI 8 C_NM2 8 CMASSI 8 CMASS2 8 CMASS3 8 CMASS4 8 CDAMPI 8 CDAMP2 8 CDAMP3 8 CDAMP4 8 CELASI 8 CELAS2 8 CELAS3 8 CELAS4 8 MATI 3 MAT2 3 CTRIARG 8 CTRAPRG 8 DEFBRM 4 PARAM 6 MPCADD lO LOAD 9 EIGR 7 EIGB 7 EIGC 7 ADUM4 1 1 3 3 I0 5 5 5 5 5 9 1 1 1 3 1 8 8 1 8 8 8 8 8 8 8 8 8 2MATS1 MATT1 BMITI TABLEMI TABLEM2 TABLEM3 TABLEM4 TABLESI TEMPD ADUM5 ADUM6 ADUM7 MATT2 ADUM8 CTORDRG SP_INT ADUM9 CDUMI CDUM2 CDUM3 CDUM4 CDUM5 CDUM6 CDUM7 CDUM8 CDUM9 PDUMI•BulkDataCardsProcessed byIFP D EFGHISorted byInternal CodeNumber. J KL M N GEOM2 081232512701 27S13460 -I GERM2 08123251260126Sl3460 -I GERM2 08123371310131S13540-I GEOM2 081233713801 38S13540-I GERM2 082834911401 14S13580-I GERM2 082037711501 15S13600-I GEOM2 -24123371I001 I0S13620-I GERM2 -24123971II01 IISl3623-I GERM2 -248370120112S13674-I GERM2 -24840901301 13S13697-I GERM2 -241233712012S13620 -I GERM2 -24123971301 3S13623 -I GERM2 -2483704014S13675 -I GEOM2 -24840905015S13698 -I GERM2 -24123371601 6S13620 -I GERM2 -24124171701 7S13800 -I GERM2 -2483708018S13676-I GERM2 -24840909019S13699-I MPT 042042911031S13860 0 MPT 082044912032S13880 0 GEOM2 -281273811708 17$4790-I GERM2 -281273711808 18$4800-I EDT -2481570104 1Sl2500 -I PVT 0-516-I200S33960 0 GERM4 -248-I14891 60$34020 1 GERM3 048-I14551 61S34060 1 DYNAMICS -214184691307 3$28500 DYNAMICS -214184691I071$28500 DYNAMICS -2-4I0-I12072$28700 GEOMI 0885370 00$54000 GEOMI 088-I2 00$28900 MPT -241654515035$4900-I MPT 041654517037$4900 0 GEOM4 -2-49-I0495163$33981-I DIT 0-416-I1105 1$2930 0 DIT 0-416-I1205 2S2930 0 DIT 0-416-I1305 3$2930 0 DIT 0-416-I1405 4S2960 0 DIT -2-416-I1310531$2930-I GEBM3 04122690564165$4980 1 GERM1 08853703200S55000 GEOMI 0885370 00$5600 0 GERM1 0885370 00S5700 0 MPT 041652518038S41020-I GEOMI 0885370 00S5800 0 GERM2 -241275011908 19$41040 -I GEBM2 -2-4979405551 49S41050 -I GEOMI 088537000$5900 0 GERM2 082492516108 61$5I000 0 GEOM2 082492516208 62$5II00 0 GEOM2 082492516308 63$51200 0 GERM2 08249251640864$51300 0 GEBM2 08249251650865$51400 0 GEOM2 08249251660866$51500 0 GEOM2 08249251670867$51600 0 GEOM2 08249251680868$51700 0 GERM2 08249251690869$51800 0 EPT 04249251610261$51900 0IJHK 12E5 12E6 13AI 13A2 13A3 13A4 13A5 13A6 13BI 13B2 13B3 13B4 13B5 13B6 13CI 13C2 13C3 13C4 13C5 13C6 13DI 13D2 13D3 13D4 13D5 13D6 13El i3E2 13E3 13E4 13E5 13E6 21AI 21A2 21A3 21A4 21A5 21A6 21BI 21B2 21B3 21B4 21B5 21B6 21CI 21C2 21C3 21C4 21C5 21C6 21DI 21D2 21D3 21D4 21D5 21D6 21El 21E2 4.5-11(8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174Table1(e).BulkDataCardsProcessed byIFPSorted byInternal CardNumber. D EFGHIJKLM N PDUM2 2EPT 0424925 16202 62$52000 0 PDUM3 2EPT 0424925 16302 63$52100 0 DMI 12P_OL 0-416-I0 00$21190 0 DMIG 14MATP_BL -2-412-I0114 1$21200 0 PTORDRG 2EPT -24823702102 21S13000 -I MAT3 3MPT -2420449 11403 14,$41220 -I DLOAD 7DYNAMICS -248-I1575$34060 0 EP_INT 7DYNAMICS -2-497940707 7$41050 0 FREQI 7DYNAMICS -24870501007 I0S11250 0 FREQ 7DYNAMICS -248-I11307 13$31260 0 NOLINI 7DYNAMICS -281272503107 31S11270 0 N@LIN2 7DYNAMICS -281272503207 32S11280 0 NOLle3 7DYNAMICS -281272503307 33S11290 0 N@LIN4 7DYNAMICS -281272503407 34S11290 0 RLOADI 7DYNAMICS -28833715107 51$31310 0 RLOAD2 7DYNAMICS -28833715207 52$31310 0 TABLED1 5DIT -2-416-I11105 II$2930 0 TABLED2 5DIT -2-416-I11205 12$2930 0 SEQEP 7DYNAMICS -I483705707 57S1 40-I TF 7DYNAMICS -2812-I06207 62S11360 0 TIC 7DYNAMICS -241271306607 66S11370 0 TL_ADI 7DYNAMICS -28868117107 71$31380 0 TL_AD2 7DYNAMICS 081668917207 72$31390 0 TABLED3 5DIT 0-416-I11305 13$2930 0 TABLED4 5DIT 0-416-I11405 14$2960 0 TSTEP 7DYNAMICS 048-I18307 83S11420 0 DSFACT 3MPT 048-I153I0$31430 0 AXlC 15AXIC -248930515 5$31440 0 RINGAX 15AXIC -241224515615 56$31450 0 CC@NEAX 15AXIC -24864512315 23$31460 0 PC@NEAX 2EPT -2428653115219$31470 0 SPCAX 15AXlC -241248506215 62$31480 0 MPCAX 15AXIC -248-I04015 40$31490 0 OMITAX 15AXIC -24833704315 43$31500 0 SUPAX 15AXlC -24833706415 64$31500 0 POINTAX 15AXIC -24851714915 49$31520 0 SECTAX 15AXIC -241217716015 60$31530 0 PRESAX 15AXlC -24126105215 52$31540 0 TEMPAX 15AXIC -24823706815 68$31550 0 FBRCEAX 15AXlC -2-41310902115 21$31560 0 M_MAX 15AXIC -2-41310903815 38$31560 0 EIGP 7DYNAMICS -2485610257 4S11580 0 PDUM4 2EPT 0424925 16402 64$52200 0 PDUM5 2EPT 0424925 16502 65$52300 0 PDUM6 2EPT 0424925 16602 66$52400 0 TABDMPI 5DIT -2-416-I11521$2930 0 PDUM7 2EPT 0424925 16702 67$52500 0 PDUM8 2EPT 0424925 16802 68$52600 0 PDUM9 2EPT 0424925 16902 69$52700 0 FREQ2 7DYNAMICS -24870501107 IIS11660 0 UISET I0GEOM4 088370II041$52800 0 U2SET I0GEOM4 088370210 2$52900 0 U3SET I0GEOM4 088370310 3S53000 0 U4SET I0GEOM4 088370410 4$53100 0 U5SET I0GEOM4 088370500 5$53200 0 U6SET I0GE@M4 088370610 6$53300 0 U7SET I0GERM4 088370710 7$53400 0 U8SET I0GEBM4 088370810 8$53500 0IJHK 21E3 21E4 21E5 21E6 22AI 22A2 22A3 22A4 22A5 22A6 22BI 22B2 22B3 22B4 22B5 22B6 22CI 22C2 22C3 22C4 22C5 22C6 22DI 22D2 22D3 22D4 22D5 22D6 22EI 22E2 22E3 22E4 22E5 22E6 23AI 23A2 23A3 23A4 23A5 23A6 23BI 23B2 23B3 23B4 23B5 23B6 23CI 23C2 23C3 23C4 23C5 23C6 23DI 23D2 23D3 23D4 23D5 23D6 4.5-12 (8/I/72)"},"title":"Programmer's Manual P34"},"/docs/programmers/programmers_manual_035/":{"data":{"":"EXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) Table l(f). BulkDataCards Processed byIFPSorted byInternal CardNumber. A B C D EF GH IJ KL M N 175U9SET lOGERM4 0 88370910 9$53600 0 176UISETI lOGERM4 0-4 9-l0lifO II$53700 0 177U2SETI lOGERM4 0-4 9-I01210 12$53800 0 178U3SETI lOGERM4 0-4 9-l01310 13$5 3900 0 179BAR_R 8GERM2 0412 252 00Sl lO0 -l 180CBAR 8GERM2 0820 73l2408 24Sl 200 -l 181PBAR 2EPT 0424621 l 5220Sl 300 -l 182DAREA 7DYNAMICS -2 48lOl 0 27 17$3 1820 0 183DELAY 7DYNAMICS -2 48lOl 0 3718$3 1820 0 184DPHASE 7DYNAMICS -2 48lOl 0 7719$3 1820 0 185PLFACT 3MPT -2 48-llll03 II$3 1420 -l 186U4SETI lOGERM4 0-4 9-l01410 14$5 4000 0 187U5SETI lOGERM4 0-4 9-l01510 15$54100 0 188U6SETI lOGERM4 0-4 9-l01610 lO$54200 0 189MATT3 3MPT -2 416525 l1503 15$41020 -l 190RF_RCE 9GERM3 -2 812I09 05509 55Sl1900 l 191TABRNDI 5DIT -2-4 16 -l l 5525$2 930 0 192U7SETI lOGERM4 0-4 9 -l01710 17$54300 0 193U8SETI lOGERM4 0-4 9 -l01810 18$54400 0 194U9SETI lOGERM4 -0-4 9-I01910 19$54500 0 195RANDPS 7DYNAMICS -2 412782 02107 21$4 1950 -l 196RANDTI 7DYNAMICS -2 48752 02207 22$4 1960 -l 197I_ANDT2* 7DYNAMICS -2-4 8-ll2307 23$9 -l 198PL_ADI* 9GERM3 -2 00 006909 69 $9 -l 199PLEAD2 9GERM3 -2-4 9774 06802 68 $41990 -l 200DTI 12PB_L 0-4 16 -l0 O0$22000 0 201TEMPPI 9GERM3 -2-4!0 -l08109 81$42100 -l 202TEMPP2 9GEBM3 -2-4lO -I08209 82$42200 -l 203TEMPP3 9GERM3 -2°4lO -l08309 83$4 2300 -l 204TEMPRB 9GEBM3 -2-4lO -l08409 84$4 2400 -l 205GRIDB 15AXIC -2 812 ll8115 61$4 3100 -l 206 FSLIST 15AXIC -2-4lO -l08215 82$4 3200 -l 207 RINGFL 15AXIC -2 48497 l8315 83$4 3300 -l 208 PRESPT 15AXIC -2 48834 08415 84$4 3400 -l 209 CFLUID2 15AXIC -2 88845 l8515 85 $43500 -l 210CFLUID3 15AXIC -2 88853 l8615 86$4 3600 -l 211 CFLUID4 15AXIC -2 88861 l8715 87 $43700 -l 212 AXIF 15AXIC -2-8lO -I08815 88$43800 -l 213 BDYLIST 15AXIC -2-4lO -l08915 89$43900 -l 214 FREEPT 15AXIC -2 48834 09015 90$44000 -l 215ASET lOGERM4 -2 48 3705561 76Sl 1400 -l 216ASETI lOGERM4 -2-4 9 -l05571 77$33981 -l 217CTETRA 8GERM2 -2 88337 l5508 55$44100 -l 218 CWEDGE 8GERM2 -2 88525 l5608 56$44200 -l 219CHEXAI 8GERM2 -21616531 l5708 57$44300 -l 220 CHEXA2 8GERM2 -21616531 l5808 58$4 4400 -l 221 DMIAX 14MATP_L -2-4 9-l0 214 2$44500 -l 222 FLSYM 15AXIC -2 4lO826 09115 91 $44600 -l 223 AXSLBT 15AXIC -2 88869 lIll5 IISl4100 0 224 CAXIF2 8GERM2 -2 88877 l2108 21Sl4200 0 225 CAXIF3 8GERM2 -2 88877 l2208 22Sl4300 O 226 CAXIF4 8GERM2 -2 88877 l2308 23Sl4400 0 227 CSL_T3 8GERM2 -2 88877 l4408 44Sl 4500 0 228 CSL_T4 8GERM2 -2 816877 l4508 45Sl 4600 0 229 GRIDF 15AXIC -2 48885 l1215 12Sl 4700 0 230 GRIDS 15AXIC -2 48893 l1315 13Sl 4800 0 231 SLBDY 15AXIC -2-4 8 -l01415 14Sl4900 0 232 CHBDY 8GERM2 099901 l4208 42 Sl5000 -lIJHK 23EI 23E2 23E3 23E4 23E5 23E6 31Al 31A2 31A3 31A4 31A5 31A6 31Bl 31B2 31B3 31B4 31B5 31B6 31Cl 31C2 31C3 31C4 31C5 31C6 31Dl 31D2 31D3 31D4 31D5 31D6 31El 31E2 31E3 31E4 31E5 31E6 32AI 32A2 32A3 32A4 32A5 32A6 32BI 32B2 32B3 32B4 32B5 32B6 32CI 32C2 32C3 32C4 32C5 32C6 32DI 32D2 32D3 32D4 4.5-13 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Tablel(g).BulkDataCardsProcessed byIFPSortedbyInternal CardNumber. AB CD EFGHIJKLMN 233QHBDY 234MAT4 235MAT5 236SAME 237SAME1 238INPUT 239BUTPUT9GERM3 0999010430943S15100 -I 3MPT 04831712103 21S13900 -I 3MPT 0888212203 22Sl4000 -I IIGERM5 -2-49-I0III0 II$5 5-I IIGERM5 -2-89-I01210 12$5 5-I IIGERM5 01717909 01310 13$5 5-I IIGERM5 01717909 01410 14$5 5-lIJHK 32D5 32D6 32EI 32E2 32E3 32E4 32E5 4.5-13a (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Table2(a). BulkDataCardsProcessed byIFPSorted Alphabetically byCardName. Thefollowing listgivesanexplanation ofthecolumn headings onthefollowing pagesof Table 2. A=Internal IFPBulkDataCardNumber B=BulkDataCardName(anasterisk following anameimplies thecardisnotavailable) C:Internal IFPGIN_Output FileNumber D=DataBlockName E:Approach Acceptance Indicator -2:lllegal fortheForceApproach -I=NotUsedbytheForceApproach 0=OKforanyApproach 1=NotUsedbytheDisplacement Approach 2=lllegal fortheDisplacement Approach F=Minimum Number ofWordsAllowed PerLogical Card(Fnegative implies anopenended card) G=Maximum Number ofWordsAllowed PerLogical Card H=Format CheckPointer IntoIFX7BD I:Field2Uniqueness Check Flag 0=NoCheckisMade 1=CheckisMade 2=Special J=Subroutine L_CATE CodeforCardonOutput DataBlock K=Trailer BitPosition L=Pointer toSecondary (CardDependent) Code S1=Subroutine IFSIP $2:Subroutine IFS2P $3=Subroutine IFS3P S4=Subroutine IFS4P $5=Subroutine IFS5P M:F_RTRAN Statement Number intheCardDependent Subroutines N=Conical ShellProblem Flag -I=lllegal forShellMode 4.5-14 (8/I/72)\nEXECUTIVE PREFACEMODULE IFP(INPUT FILEPROCESSOR) Table 2(b). BulkDataCards Processed byIFPSorted Alphabetically byCardName. 0=OKforShell Mode l=PutsCard IntoDifferent DataBlock 0=Users MapforDataBlocks IFX2BD …..IFX6BD Values forI=1,2or3 J=1,2or3 H=A,B,C,D orE K=1,2,3,4,5 or6 I=IsDataStatement intheBlock DataProgram J=TheGroup ofAThrough EContinuation CardBlocks Within theIthDataStatement H=Alphabetic Character inCol6(Continuation Column) intheJthGroup K=ThePairNu_er onLineHWhere theActual Data islocated. 4.5-15 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Table 2(c). BulkDataCardsProcessed byIFPSorted Alphabetically byCard AB CD 89 1GERM1 3ADUMI 1GERM1 32ADUM2 1GERM1 51ADUM3 1GERM1 88ADUM4 1GEBMI 99ADUM5 1GEBMI I00ADUM6 1GEBMI I01ADUM7 1GERM1 103ADUM8 1GERM1 106ADUM9 1GERM1 215ASET I0GERM4 216ASETI I0GERM4 144AXIC 15AXIC 212AXlF 15AXIC 223AXSL_T 15AXIC 179BAR_R 8GERM2 213BDYLIST 15AXlC 224CAXlF2 8GERM2 225CAXIF3 8GERM2 226CAXlF4 8GEBM2 180CBAR 8GEBM2 146CC_NEAX 15AXIC 69CDAMPI 8GEBM2 70CDAMP2 8GEBM2 71CDAMP3 8GERM2 72CDAMP4 8GEBM2 107CDUMI 8GERM2 108CDUM2 8GEBM2 109CDUM3 8GERM2 II0CDUM4 8GERM2 IIICDUM5 8GERM2 112CDUM6 8GERM2 113CDUM7 8GERM2 114CDUM8 8GERM2 115CDUM9 8GERM2 73CELASI 8GERM2 74CELAS2 8GEBM2 75CELAS3 8GERM2 76CELAS4 8GERM2 209CFLUID2 15AXlC 210CFLUID3 15AXIC 211CFLUID4 15AXlC 232CHBDY 8GEBM2 219CHEXAI 8GERM2 220CHEXA2 8GERM2 65CMASSI 8GEBM2 66CMASS2 8GERM2 67CMASS3 8GERM2 68CMASS4 8GERM2 63C_NMI 8GEBM2 64CBNM2 8GERM2 47C_NR_D 8GERM2 6CBRDIC 1GERM1 5C_RDIR 1GERM1 7CBRDIS 1GERM1 9C_RD2C 1GERM1 8CBRD2R 1GERM1 I0C_RD2S 1GERM1EFGHIJKL MN 088-I2 00$2890 0885370 00$5I00 0885370I00$5200 0885370I00$5300 0885370 00$5400 0885370320 0$5500 0885370 00$5600 0885370 00$5700 0885370 00$5800 0885370 00$5900 -2483705561 76S11400 -2-49-I05571 77$33981 -248930515 5$31440 -2-8I0-I08815 88$43800 -288869 11115 IIS14100 0412252 00S1 I00 -2-4I0-I08915 89$43900 -288877 12108 21Sl4200 -288877 12208 22S14300 -288877 12308 23S14400 08207312408 24S1200 -248645 12315 23$31460 -24123371201 2S13620 -24123971301 3S13623 -248370401 4S13675 -2484090501 5S13698 082492516108 61$5I000 082492516208 62$5II00 082492516308 63S51200 082492516408 64$51300 082492516508 65$51400 082492516608 66$51500 082492516708 67$51600 082492516808 68$51700 082492516908 69$51800 -24123371601 6S13620 -2412417 1701 7S13800 -248370801 8S13676 -2484090901 9S13699 -288845 18515 85$43500 -288853 18615 86$43600 -288861 18715 87$43700 099901 14208 42Sl5000 -2161653115708 57$44300 -2161653115808 58$44400 -24123371I001 I0S13620 -24123971II01 IIS13623 -2483701201 12S13674 -24840901301 13S13697 082834911401 14S13580 082037711501 15S13600 081227711601 16S13260 048370i701 17S1600 0483701801 18S1500 0483701901 19S1700 012164512001 20S1900 012164512101 21S1800 012164512201 22S1I000Name. IJHK 0 13E5 0 IIA3 0 12A2 0 12D3 0 13E4 0 21B3 0 21B4 0 21B5 0 21CI 0 21C4 -I 32A5 -I 32A6 022D6 -I 32A2 032CI -I 23E5 -I 32A3 032C2 032C3 032C4 -I 23E6 022E2 -I 13B3 -I 13B4 -I 13B5 -I 13B6 0 21C5 0 21C6 021DI 021D2 021D3 021D4 021D5 0 21D6 0 21El -I 13CI -I 13C2 -I 13C3 -I 13C4 -I 31E5 -I 31E6 -I 32AI -I 32D4 -I 32B3 -I 32B4 -I 13A5 -I 13A6 -I 13BI -I 13B2 -I 13A3 -113A4 -I 12C5 -I IIA6 -I IIA5 -I lIB1 -I lIB3 -I lIB2 -I lIB4 4.5-16 (8/I/72)\nEXECUTIVE PREFACE MODULEIFP(INPUTFILEPROCESSOR) Table2(d). BulkDataCardsProcessed byIFPSortedAlphabetically byCardName. AB CD EFGHIJKLMN 60CQDMEM 8GEOM2 08123251260126S13460-I 59CQDPLT 8GEOM2 08123251270127Sl3460-I 57CQUADI 8GEOM2 08123251280128S13460 -I 58CQUAD2 8GEOM2 081232512901 29S13460-I 48CROD 8GEOM2 0483703001 30S13281-I 61CSHEAR 8GEOM2 081233713101 31S13540-I 227CSL_T3 8GEOM2 -2888771440844S14500 0 228CSLOT4 8GEOM2 -28168771450845S14600 0 217CTETRA 8GEOM2 -2883371550855$44100 -I 104CTORDRG 8GEOM2 -24127501190819$41040 -I 80CTRAPRG 8GEOM2 -28127371180818S4800-I 54CTRBSC 8GEOM2 08123131320132S13360 -I 52CTRIAI 8GEOM2 08123131330133S13360 -I 53CTRIA2 8GEOM2 08123131340134Sl3360 -I 79CTRIARG 8GEOM2 -28127381170817$4790-I 56CTRMEM 8GEOM2 08123131350135S13360 -I 55CTRPLT 8GEOM2 08123131360136Sl3360 -I 49CTUBE 8GEOM2 0483703701 37S13282 -I 62CTWIST 8GEOM2 08123371380138S13540 -I 50CVlSC 8GEOM2 -2483703901 39Sl3283-I 218CWEDGE 8GEOM2 -2885251560856$44200 -I 182DAREA 7DYNAMICS -248I0102717$31820 0 81DEFORM 4EDT -24815701041S12500 -I 183DELAY 7DYNAMICS -248I0103718S31820 0 123DLOAD 7DYNAMICS -248-I1575$34060 0 I19DMI 12POOL 0-416-I000$21190 0 221DMIAX 14MATPOOL -2-49-I02142$44500 -i 120DMIG 14MATPOOL -2-412-I0114 1$21200 0 184DPHASE 7DYNAMICS -248I0107719$31820 0 143DSFACT 3MPT 048-I153I0S31430 0 200DTI 12POOL 0-416-I000$22000 0 86EIGB 7DYNAMICS -2141846911071$28500 87EIGC 7DYNAMICS -2-4I0-I12072$28700 158EIGP 7DYNAMICS -24856102574S11580 0 85EIGR 7DYNAMICS -2141846913073$2850 0 124EP_INT 7DYNAMICS -2-4979407077$41050 0 222FLSYM 15AXlC -24I08260911591$44600 -I 18F_RCE 9GEOM3 08121090420142S11800 1 20F_RCEI 9GERM3 08121210400140Sl2000 -I 22F_RCE2 9GEOM3 08121330410141S12200-I 156FORCEAX 15AXIC -2-41310902115 21$31560 0 214FREEPT 15AXlC -2488340901590$44000 -I 126FREQ 7DYNAMICS -248-I1130713$31260 0 125FREQI 7DYNAMICS -24870501007I0Sl1250 0 166FREQ2 7DYNAMICS -24870501107IIS11660 0 206FSLIST 15AXIC -2-4I0-I08215 82$43200 -I 28GENEL 8GEOM2 -2-49-I14301 43$32800 -I 26GRAV 9GEOM3 08121651440144Sl2600 1 2GRDSET 1GEOMI 041213200$3200-I 1GRID 1GEOMI 041211450145$3I00-I 205GRIDB 15AXlC -281211811581$43100 -I 229GRIDF 15AXlC -2488851121512S14700 0 230GRIDS 15AXIC -2488931131513Sl4800 0 238INPUT IIGEOM5 017179090131013$5 5-I 84LOAD 9GEOM3 048-I1455161$34060 1 77MAT1 3MPT 042042911031Sl3860 0 78MAT2 3MPT 082044912032S13880 0 122MAT3 3MPT -24204491140314$41220-I0 IJHK 12E6 12E5 12E3 12E4 12C6 13A1 32C5 32C6 32BI 21C2 13D2 12D6 12D4 12D5 13Dl 12E2 12El 12Dl 13A2 12D2 32B2 31A2 13D3 31A3 22A3 21E5 32B5 21E6 31A4 22D5 31D2 13E2 13E3 23B2 13El 22A4 32B6 lIC6 liD2 liD4 23A6 32A4 22A6 22A5 23C4 31E2 liE4 liE2 lIA2 lIAl 31El 32DI 32D2 32E4 13D6 13C5 13C6 22A2 4.5-17 (811/72)\nMODULE FUNCTIONAL DESCRIPTIONS Table2(e). BulkDataCards B CD E 234MAT4 3 235MAT5 3 90MATS1 3 91MATT1 3 102MATT2 3 189MATT3 3 157M_MAX 15 19M_MENT 9 21M_MENTI 9 23M_MENT2 9 17MPC I0 83MPCADD I0 149MPCAX 15 127N_LINI 7 128N_LIN2 7 129N_LIN3 7 130N_LIN4 7 15_MIT I0 92_MITI I0 150_MITAX 15 239_UTPUT II 82PARAM 6 181PBAR 2 147PC_NEAX 2 45PDAMP 2 116PDUMI 2 117PDUM2 2 118PDUM3 2 159PDUM4 2 160PDUM5 2 161PDUM6 2 163PDUM7 2 164PDUM8 2 165PDUM9 2 46PELAS 2 185PLFACT 3 24PLBAD 9 198PLEAD1* 9 199PLEAD2 9 IIPL_TEL 8 44PMASS 2 152PBINTAX 15 41PQDMEM 2 40PQDPLT 2 38PQUADI 2 39PQUAD2 2 154PRESAX 15 208PRESPT 15 29PROD 2 42PSHEAR 2 121PT_RDRG 2 35PTRBSC 2 33PTRIAI 2 34PTRIA2 2 37PTRMEM 2 36PTRPLT 2 30PTUBE 2 43PTWIST 2Processed byIFPSorted Alphabetically byCardName. FGH MPT 048317 MPT 08882 MPT -2416545 MPT 0416545 MPT 0416525 MPT -2416525 AXIC -2-413109 GE@M3 0812109 GE@M3 0812121 GE@M3 0812133 GE@M4 -248-I GE@M4 -248-I AXlC -248-I DYNAMICS -2812725 DYNAMICS -2812725 DYNAMICS -2812725 DYNAMICS -2812725 GEBM4 -24837 GE@M4 -2-49-I AXlC -248337 GERM5 01717909 PVT 0-516-I EPT 0424621 EPT -2428653 EPT -248269 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT 0424925 EPT -248497 MPT -248-I GERM3 0812145 GERM3 -2000 GERM3 -2-49774 GEBM2 048505 EPT -248269 AXIC -248517 EPT 048237 EPT 0412257 EPT 0416221 EPT 048237 AXlC -241261 AXlC -248834 EPT 0412165 EPT 048237 EPT -248237 EPT 0412257 EPT 0416221 EPT 048237 EPT 048237 EPT 0412257 EPT 0412177 EPT 048237IJKLMN 12103 21S13900 -I 12203 22S14000 -I 1503 5$4900 -I 1703 7$4900 0 1803 8$41020 -I 11503 15$41020 -I 03815 38$31560 0 04801 48S11800 1 04601 46S12000 -I 04701 47S12200 -I 04901 49S31700 -I 14891 60$34020 1 04015 40$31490 0 03107 31S11270 0 03207 32S11280 0 03307 33S11290 0 03407 34S11290 0 05001 50S11400 -I 04951 63$33981 -I 04315 43$31500 0 01410 14S5 5-I 2 00$33960 0 15220S1300-I 115219$31470 0 0402 2S13200 -I 16102 61$51900 0 16202 62$52000 0 16302 63$52100 0 16402 64$52200 0 16502 65$52300 0 16602 66$52400 0 16702 67$52500 0 16802 6E$52600 0 16902 69$52700 0 0302 3S13240 -I 11103 II$31420 -I 05101 51S12400 -I 06909 69$9 -I 06802 68$41990 -I 05201 52S1IIII -I 0402 4S13200 -I 14915 49S31520 0 0502 5S13000 -I 0602 6S13020 -I 1702 7S12980 -I 0802 8S13000 -I 05215 52$31540 0 08415 84$43400 -I 1902 9S12900 -I 01002 I0S13000 -I 02102 21S13000 -I 11102 IIS13020 -I 11202 12Sl2980 -I 01302 13S13000 -I 01402 14S13000 -I 11502 15S13020 -I 11602 16S12920 -I 01702 17S13000 -IIJHK 32D6 32EI 13E6 21AI 21B6 31B3 23BI lID1 lID3 lID5 IIC5 13D5 22E5 22BI 22B2 22B3 22B4 IIC3 21A2 22E6 32E5 13D4 31AI 22E3 12C3 21E2 21E3 21E4 23B3 23B4 23B5 23CI 23C2 23C3 12C4 31A5 IID6 31C6 31DI lIB5 12C2 23A2 12B5 12B4 12B2 12B3 23A4 31E4 lIE5 12B6 22AI 12A5 12A3 12A4 12BI 12A6 lIE6 12CI 4.5-18 (8/I172)\nTable2(f) A B 31PVISC 233QHBDY 195RANDPS 196RANDTI 197RANDT2* 145RINGAX 207 RINGFL 190RF_RCE 131RL_ADI 132RL_AD2 236SAME 237SAMEI 153SECTAX 135SEQEP 4SEQGP 231SLBDY 25SL_AD 16SPC 12SPCI 13SPCADD 148SPCAX I05SPmINT 151SUPAX 14SUPmRT 162TABDMPI 133TABLEDI 134TABLED2 140TABLED3 141TABLED4 93TABLEMI 94TABLEM2 95TABLEM3 96TABLEM4 97TABLES1 191TABRNDI 27TEMP 155TEMPAX 98TEMPD 201TEMPPI 202TEMPP2 203TEMPP3 204TEMPRB 136TF 137TIC 138TLBADI 139TL_AD2 142TSTEP 167UISET 176UISETI 168U2SET 177U2SETI 169U3SET 178U3SETI 170U4SET 186U4SETI 171U5SET 187U5SETI 172U6SETC 2 9 7 7 7 15 15 9 7 7 II 11 15 7 1 15 9 I0 I0 I0 15 8 15 10 5 5 5 5 5 5 5 5 5 5 5 9 15 9 9 9 9 9 7 7 7 7 7 I0 lO lO lO lO lO lO lO lO lO lOEXECUTIVE PREFACE MODULE IFP(INPUT FILEPROCESSOR) BulkDataCards Processed byIFPSorted Alphabetically byCardName. D E FG H IJ KL M N IJHK EPT -2 48189 01802 18Sl 310 -I 12AI GERM3 099901 04309 43Sl 5100 -l 32D5 DYNAMICS -2 412782 02107 21$4 1950 -l 31C3 DYNAMICS -2 48752 02207 22$4 1960 -l 31C4 DYNAMICS -2-4 8-l l2307 23$9 -l 31C5 AXlC -2 412245 l5615 56$3 1450 0 22EI AXIC -2 48497 l8315 83 $43300 -l 31E3 GERM3 -2 812I09 05509 55Sl 1900 l 31B4 DYNAMICS -2 88337 l5107 51$31310 0 22B5 DYNAMICS -2 88337 l5207 52$31310 0 22B6 GERM5 -2-4 9-l0lifo II$5 5-l 32E2 GERM5 -2-8 9-l01210 12$5 5-l 32E3 AXIC -2 412177 l6015 60 $315300 23A3 DYNAMICS -l 483705707 57Sl 40-l 22C3 GE_MI -l 483705301 53Sl 40-I lIA4 AXIC -2-4 8-l01415 14Sl4900 0 32D3 GERM3 -2 48157 05401 54S12500 -I 11EI GERM4 -2 48lOl 05501 55Sl1600 -l llC4 GERM4 -2-4 9-l05481 58$33980 -l liB6 GERM4 -2 48-ll5491 59$34020 l lICl AXIC -2 412485 06215 62 $31480 0 22E4 GERM2 -2-4 9794 05551 49$4I050 -l 21C3 AXIC -2 48337 06415 64$31500 0 23AI GERM4 -2 483705601 56Sl1400 -l lIC2 DIT -2-416 -ll 1521$2 930 0 23B6 DIT -2-416 -llll05 II$2 930 0 22CI DIT -2-416 -ii1205 12$2 930 0 22C2 DIT 0-416 -ll1305 13$2 930 0 22D2 DIT 0-416 -ll1405 14$2 960 0 22D3 DIT 0-416 -l lI05 l$2 930 0 21A3 DIT 0-4 16 -ll205 2$2 930 0 21A4 DIT 0-416 -ll305 3$2 930 0 21A5 DIT 0-416 -l l405 4$2 960 0 21A6 DIT -2-416 -ll3105 31$2 930 -l 21Bl DIT -2-416 -l l 5525$2 930 0 31B5 GERM3 048157 05701 57Sl2500 -l liE3 AXIC -2 48237 06815 68$3 1550 0 23A5 GERM3 0412269 05641 65$4 980 l 21B2 GERM3 -2-4 lO -l08109 81$42100 -l 31D3 GERM3 -2-4 lO -l08209 82$4 2200 -l 31D4 GERM3 -2-4 lO -l08309 83$4 2300 -l 31D5 GERM3 -2 -4lO -l08409 84$4 2400 -l 31D6 DYNAMICS -2 812 -l06207 62Sl 1360 0 22C4 DYNAMICS -2 412713 06607 66Sl 1370 0 22C5 DYNAMICS -2 88681 17107 71S3 1380 0 22C6 DYNAMICS 0816689 l7207 72$31390 0 22DI DYNAMICS 04 8-ll8307 83Sl1420 0 22D4 GEI_M4 0 88370 llO 41$5 2800 0 23C5 GERM4 0-4 9-l0lllO II$53700 0 23E2 GERM4 0 88370 210 2$52900 0 23C6 GERM4 0-4 9-l01210 12$53800 0 23E3 GERM4 088370 310 3$53000 0 23DI GERM4 0-4 9-l01310 13$53900 0 23E4 GERM4 0 88370 410 4$53100 0 23D2 GERM4 0-4 9-l01410 14$54000 0 31A6 GERM4 088370 500 5$53200 0 23D3 GERM4 0-4 9-I01510 15$54100 0 31Bl GERM4 088370610 6$53300 0 23D4 4.5-19 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Table2(g).BulkDataCardsProcessed byIFPSortedAlphabetically byCardNal_e. A B 188U6SETI 173U7SET 192U7SETI 174U8SET 193U8SETI 175U9SET 194U9SETICD EFGHIJKLM N I0GERM4 0-49 I0GERM4 088 I0GERM4 0-49 I0GERM4 088 I0GERM4 0-49 I0GERM4 088 I0GERM4 -0-49-I01610 I0$54200 0 3707107$53400 0 -I01710 17$54300 0 3708108$53500 0 -I01810 18$54400 0 3709109$53600 0 -I01910 19$54500 0IJHK 31B2 23D5 31B6 23D6 31CI 23EI 31C2 4.5-20 (8/I/72)\nEXECUTIVE PREFACE MODULE IFP3 (INPUT FILE PROCESSOR 3) 4.6 EXECUTIVE PREFACE MODULE IFP3 (INPUT FILE PROCESSOR 3) 4.6.1 Entry Point: IFP3 4.6.2 Purpose I.Tointerpret Bulk Data cards unique toanaxisymmetric conical shell problem. 2.Togenerate anddistribute todata blocks GEOMI, GEOM2, GEOM3, andGEOM4 data cards forallharmonics specified intheproblem. 3.Toconvert thefollowing input Bulk Gata cards tothefollowinq output Bulk Data cards. Ipput Bulk Data Input Output Bulk Data OUtDUt Card Type Data Block Card Type Data Block AXIC AXIC None CCONEAX AXIC CCBNE GERM2 FORCEAX AXIC FORCE GEBM3 F_RCE AXIC FORCE GERM3 GRAV AXIC GRAV GEOM3 L_AD AXIC L_AD GERM3 M_MAX AXIC M_MENT GEOM3 MOMENT AXlC MOMENT GERM3 MPCADD AXlC MPCADD GEOM4 MPCAX AXIC MPC GEOM4 _MITAX AXlC _MIT GEBM4 POINTAX AXlC MPC GEOM4 GRID GEBMI PRESAX AXIC FRESAX GEOM3 RINGAX AXIC S_S _E_M4 GRID GERM1 SECTAX AXIC MPC GERM4 GRID GEOMI SEQGP AXIC SEQGP GE_MI SPCADD AXIC SPCADD GEOM4 SPCAX AXlC SPC GERM4 SUPAX AXIC SUP_RT GEOM4 TEMPAX AXIC TEMP GEOM3 TEMPD AXIC TEMPD GERM3 4.6-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.6.3 Callin_ Sequence CALL IFP3. IFP3, aPreface module, iscalled only from thePreface driver SEMINT. 4.6.4 Input Data Blocks AXIC Bulk Data Deck cards asoutput from IFP. 4.6.5 Output Data Blocks GERM1 GEOM2 GERM3 GEOM4-Grid Point Data. -Element Connection Data. -Loading Data. -Constraint Data. 4.6.6 Parameters Notapplicable toIFP3. 4.6.7 Method Inthefollowing a\"card\" isdefined asthetype ofcard image output byIFP, i.e., with themneumonic stripped offandacard image, insome cases amodified card image, written on theoutput data block. 4.6.7.1 Initialization andOverall Method IFP3 first determines theamount ofcore available, andthen allocates three buffers for theSCRATCH, AXIC, andGEOM data blocks. TheAXIC data block isopened forinput using PREL_C. Atthis point the21types ofinput Bulk Data cards arefound, onetype atatime, ontheAXlC data block, using theL_CATE routine. Thecards ofeach type areconverted andoutput toa GErM data block. Tofacilitate theoperation, allBulk Data cards causing output toaparticular GErM data block arehandled together. Thus theprocessing issuch that allcards affecting GERM2 arefirst converted, andfollowing these allthose forGEOM3, then GERM4, andfinally GE_MI. Thesuperscripts sandcinthefollowing refer tothesine andcosine sets respectively. 4.6-2\nEXECUTIVE PREFACEMODULE IFP3(INPUTFILEPROCESSOR 3) 4.6.7.2 Conversion ofInput BulkDataCards toOutput BulkData Cards forGEgM2. I.AXIC card -Input Card- AXICHa__ -Output Card- (None) TheAXICcardsupplies Harmwhich isusedtocompute thenumber ofharmonics, N. N=Harm+l 2.CCgNEAX card(i) where-Input Card- CC_NEAXJEL-iD_ JJProp-IDJ RingAID IRingB IDJ -NOutput Cards- CC{_NERJEL-IDnJPr°p-IDIRingA IDnJRing BIDRJ EL-IDn =EL-ID xI000+n, (2) RingAIDn=RingAID+lO00000 xn,(3) RingBIDn=RingBID+lO00000 xn, (4) forn=l,2,…,N. 4.6-3\nMODULE FUNCTIONAL DESCRIPTIONS 4,6.7.3 l°Conversion ofInputBulkDataCardstoOutput Cards forGERM3. F@RCEcardandMOMENT card Thesetwocardsareoutput toGEBM3asinputfromAXlC. 2.F_RCEAX cardandM_MAX card where-Input Cards- FORCEAXl SetIDIRing IDIHarm IDIFactor 1 M_MAXl SetIDIRingIDIHarm IDIFact°r I -Output Cards- F(RCEI SetID[Ring IDHI 01Factor 1 M(MENTISet IDIRing IDHI 01Fact°r IFr_IFzl MrM_LMzI rtF__zl MrLI0IMzl RingIDH=RingID+(HarmID+I)xI000000 (5) IfF_RCEcardsandF_RCEAX cardsbothexist, thentheresulting output cardsoftheF@RCEand F_RCEAX cardsaremerged insortonSetID’s. Thisapplies toM_MENT andM@MAXcardsalso. 3.GRAVcard,L@ADcard,andTEMPDcard Thesethreecardsareoutput toGEOM3astheyareinputfromAXIC. 4.PRESAX card -Input Card- PRESAX SetIDIValue IRingA ID[Ring BID@I- @2 4.6-4\nEXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3) where-NOutput Cards- PRESAXnl SetID[Value ]RiRgAIDnlRiRgBIDRI _IJ@2JnI RingAIDn=RingAID+lO00000 xn RingBIDn=RingBID +lO00000 xn forn=l,2,…,N. 5.TEMPAX card TEMPAX ISet ID[RingID!-Input Card- _I[TiI¢2lT2]_31T31 -Nx2Output Cards - IDn+ Ts IDn+1Tn where Ring IDn+l=RingID+lO00000 x(n+l) SetIDs =SetID+lO0000000 SetIDc =SetID+200000000 forn=O,l,….N-l. TsandTcarecomputed asfollows. AllTEMPAX cards having thesameSetIDandn n Ring IDaregathered together. Theangles @iandtemperatures Tiarearrayed intoatwo-(6) (7) (8) (9) (lO) 4.6-5\nMODULE FUNCTIONAL DESCRIPTIONS dimensional matrix. ¢iT1 @2T2 @k Tk wherekisthetotalnumber ofunique @’s,andthe@‘sareconverted toradians. Thematrix issortedonthe@column, andduplicate angles areremoved. Forn=O,wehave k TCo-4_Ii-£-I(Ti+Ti+l)(¢i+I- ¢i)’(11) and S=O.To(12) Forn\u003e0 Tc1k 1 I(Tiqbi+l “Ti+l@i)(sin -sin -Z(qbi+1-@i){ n n@i+ln@i)n_i=1 Ti+l\"Ti 12(cosn¢i+1-cosn@i+n¢i+1sinn@i+1-n@isinn@i) n(13) and k 1 J(Tiqbi+l -Ti+lq_i) TSn-Ii:l(i+l-q_l) n (-cosn@i+1+cosn@i) Ti+1-Ti }+ 2(sinn@i+1-sinn¢i-n@i+lcosn@i+l+n@icosn@i)n(14) 4.6-6\nEXECUTIVEPREFACEMODULEIFP3(INPUTFILEPROCESSOR3) where andCk+l=¢I+2_ (15) Tk+l=Tl. (16) 4.6-7\n4.6.7.4 I• whereMODULE FUNCTIONAL DESCRIPTIONS Conversion ofInputBulkDataCardstoOutput CardsforGE@M4 SPCADD card -Input Card- SPCADD L_ S1I “’” I$9 -2Output Cards- SPCADDSl SetIDSIS1[ … SPCADDC ISetIDClS11 “’“I-_ flOPen-ended SetIDs=SetID+I00000000 , SetIDc=SetID+200000000 • Thefollowing 4mandatory SPCADD cardsarealsocreated andputoutonGEBM4reaardless ofwhether thereareorarenotSPCADD cardsoresent. SPCADD[IO0000101 _ _c_ool_ooooo_o_1_o_1-_I _c_ool_ooooooooiio_t_I c_ooI_ooooooooi°_iI-_I 2.MPCADD card Alloperations performed fortheSPCADD cardareperformed fortheMPCADD card.(17) (28) 4.6-8\n3.SPCAXcard where and where 4.MPCAXcardEXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3) -Input Card- SPCAXISet IDIRing ID(Harm IDIComp IValue- I -3Output Cards- SPCADDISet IDslset IDIlOlI-l1 SPCADDC_et IDcIset IDIi02I-lI SetIDs=SetID+lO0000000 , SetIDc=SetID+200000000 ; RingIDHICompIValuel Ring IDH=Ring ID+(Harm ID+l)xlO00000. -Input Card- MPCAX SetIDRingIDHarm ICompIDValue … -l -l -l -lIII_IIIIIII””’_Rep_e ats -3OutputCards- MPCADDs_etIDISetIDII01I-II MPCADD etIDsetID102 -i SetIDs=SetID+lO0000000, SetIDc=SetID+200000000. 4.6-9(19) (2O) (2]) Open Ended (22) (23)\nandMODULE FUNCTIONAL DESCRIPTIONS MPCISetIOlRingIDHC°mPlValue “’” l-’[-il’l__- Foreach3-word group output, RingIDH:RingID+(Harm ID+1)x1000000. (24) 5.POINTAX card(also processed inGERM1 section) -Input Card- POINTAXI IDIRingIDI_I -12Output Cards- ;I_o_I_oI_I-.o] -con_-nl_Icoe.nI -cont- IDnIiIC°ef’n -cont- -II-II-I .c__o_l’°I_I-.° -cont- IDnIiICoef.n -cont- IDnIiIC°ef’n -cont-] -Il-II-IN3-word groups (n:ltoN) N3-word qrnuDs (n=ltoN)sset i=lto6 cset i:lto6 4.6-10\nEXECUTIVE PREFACEMODULE IFP3(INPUT FILEPROCESSOR3) where theCoef.nabove aredefined by: i cset-Coef, n sset-Coef,n I(ur) 2(u¢) 3(ut) 4(Or) 5(e_) 6(ez)cos(n¢) sin(n¢) cos(n¢) sin(n¢) cos(n¢) sin(n@)sin(n¢) -cos(he), sin(n¢)=+l,n=O -cos (n¢),=+I,n=0 sin(n¢) -cos (n¢), =+l,n=0 and IDn=Ring ID+(nxlO00000). (25) 6.SECTAX card (also processed inGECMI section) -input Card- -6Output Cards- ,,c;[,o_I_o,I-_.ol -cont-i,o.[iICoef.n[ ID__o.=I.I’]c,.nf -cont- !‘1]-_I-_IN3-wordqrouos (n=ltoN)sset i=lto3 4.6-II"},"title":"Programmer's Manual P35"},"/docs/programmers/programmers_manual_036/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS where theCoef.n_c_I_o_i,oj_i_oI ID iCoef-cont-I n1 I.nl -cont- -cont- I abovearedefined by:IDnIiJCoef.nIN3.word groups (n=ltoN)cset i=lto3 and 7°i cset-Coef, n sset-Coef, n BMITAX card(sin(n@2) -sin(n@l))n orR(_2-01)forn=O __(cos(n_2) -cos(n_l))n or0forn=O E(sin(n@2) sin(n@l) )n orR(2_l)forn=O(cos(n@2) -cos(n@l))n or0forn=O R(s sin(n_l)) in(n¢ 2)- orR(_2-_l)forn=O __(cos(n@2) -cos(n,l))n orO,forn=O ID=RingID+(nxI000000)n(26) -Input Card- (_MITA RingID IHarm IDIComb -Output card- __n_I0_ICom_I RingIDH=RingID+(HarmID+I)xI000000. (27) 4.6-12\n8° 9°EXECUTIVE PREFACE MODULE IFP3 (INPUT FILEPROCESSOR 3) SUPAX card where-Input Card- SUPAXIRiR_ IDIHarm IDIComp.l -Output Card- SUPORT _ Ring IDH=RingID+(Harm ID+I)xI000000. RINGAX card(also processed inGE_MI section) -Input Card- RINC_X_iRg ID[RIZIComp1 -2xNOutputCards- forn=l,2….. N;and whereRingID_=RingID+I000000 xn, sPccI102Fing IDC1246I01 RingID_=RingID+I000000 xn, forn=l,2,…,N.(28) (29) (3O) 4.6-13\nMODULE FUNCTIONAL DESCRIPTIONS 4.6.7.5 Conversion ofInputBulkDataCardstoOutput CardsforGERM1. I.P(INTAX card(alsoprocessed inGERM4section) -Input Card- POINTAX _ -Output Card- °°1_°I°1_I°°iL°°[°I01oI 2.SECTAX card(alsoprocessed inGERM4section) -Input Card- SECTAX _ -Output Card- 3.RINGAX card(alsoprocessed inGERM4section) -Input Card- RINC_AX_ -NOutput Cards- GR_DIRingIDI 0lRIZ 100 I01COmb1 01 / where forn=I,2….. N.RingIDn=RingID+I000000 xn, (31) 4.6-14\nEXECUTIVE PREFACE MODULE IFP3(INPUT FILEPROCESSOR 3) 4.6.7.6 Order ofOutput forGenerated Card Images IFP3hastheresponsibility tooutput cards inthesortorder outout byIFP. IFP3tosimultaneously process somecards. 4.6.8 SubroutinesThis causes 4.6.8.1 Subroutine Name: IFP3B I.Entry Point: IFP3B 2.Purpose: Toprocess thecards causing output tobecreated forGEQM4 andGE_MI. 3.Calling Sequence: CALL IFP3B Design Requirements Thedesign requirements are: I.Toproduce cardimages equivalent tothose outoutbyIFP. 2.Tooutput those images onGEQMI, GEQM2, GERM3, GEQM4 intheproper sortandorder. Thefollowing CQ_N blocks arerequired fordatainterface between subroutines IFP3and4.6.9 IFP3B. 1.CgV_ICN/IFP3LV/ ThisCg_N blockcontains localvariables common between IFP3 andIFP3Bonly. 2oCgHH_N/IFP3BD/ ThisCg_Fi_Nblockcontains constants commonbetween IFP3and IFP3Bandisinitialized intheBlockDatasubprogram AXICBD. 3.CCMI_N/IFP3ZZ/ ThisCg_N blockdefines thebeginning ofopen-core. 4.6.10 Diagnostic Messages IFP3error messages arealluser-oriented. They pertain toBulkDatacarderrors forthe axisymmetric conical shell problem, andareoutput insummary formbyIFP3onthesystem output file. 4.6-15\nEXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION) 4.7EXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION). 4.7.1EntryPoint:XGPI 4.7.2Pur__ Totranslate(compile)aDMAPprogramintoaninternalform(the{_SCAR)forusebythe NASTRANExecutiveSystem,and,ifrestarting theproblem,toinitialize datablocks andnamed common blocks forproper restart oftheproblem. Seesection 2forformat ofthe_SCAR. 4.7.3 Calling Sequence CALLXGPI. XGPIiscalled onlybysubroutine SEMINT, thePreface driver. 4.7.4 Method XGPIcalls XGPIBS toinitialize dataforthemodule andtoinitialize theLink Specification table innamed common block /XLINK/.Upon return fromXGPIBS, XGPIloads theXCSA Executive Table intocorefromtheProblem Tape. Ifrestarting theproblem, XGPImodifies table MEDMSK innamed common block /XI4DMSK/ifnecessary. Seediscussion oftheINMtable inthedescription fortheXCSAmodule, insection 4.2.6.2. XGPI calls X_SGEN toexecute phase lofthebMAPprogram compilation. X_SGEN processes theDMAP instructions andgenerates theskeleton oftheOperation Sequence Control Array (SCAR). Seesection 2.4.2.1 fordetails ontheformat ofthe_SCAR. XGPIcalls XFL_RD toexecute phase 2ofthecompilation. XFL_RD fills inthe_SCAR entries with theinformation needed forallocating files (bySFA)whenDMAPmodules are executed. Ifrestarting aproblem, XFL_RD determines which datablocks areneeded fromtheOld Problem Tape torestart theproble: and,whennecessary, turns onexecute flags forDMAP modules toregenerate missing datablocks. Atthispoint, XGPIterminates thejobifanyerrors were found incompilation; ifnot, XGPIwrites the_SCAR ontotheDataPoolFile. Iftheproblem isarestart, XGPIcopies the datablocks specified byXFL_RD fromtheOldProblem TapeontotheD_taPoolFileand initializes various named common blocks. 4.7-I\nMODULE FUNCTIONAL DESCRIPTIONS XGPIcalls_SCDMP toprintthe_SCARifrequested bytheuserviatheDIAGcardinthe Executive Control Deckandtoposition theDataPoolFileatthefirst_SCARentryinpreparation forexecuting DMAPmodules. Ifcheckpointing isrequested bytheuser,theProblem Tape Dictionary isinitialized andwritten ontheProblem Tape. XGPIthenreturns tothecalling routine SEMINT. 4.7.5 Subroutines Thefollowing labeled common blocks areusedtocommunicate dataandconstants amongthe complex ofXGPIsubroutines. I.C_MMON/XGPIC/ -Contains 30individual cellscontaining various flags, integer andBCD constants, andmachine dependent data. Alsoanadditional 40cellarraycontains aseries ofrequired masks. 2.C_MM_N/XGPID/ -Contains restart typecodesandapproach typecodesplusmasksandflags required inOSCARgeneration. 3.COMM_N/XGPII/ -Defines thebeginning ofopencorefortheXGPImodule andcontains the SCAR asitisgenerated. 4.C_MM_N/XGPI2/ -Contains theMPLtable(seesectio 2.4.2.2). 5.C_MM_N/XGPI2X/ -Contains thedefault parameters required bytheMPLtable. 6.C_MMON/XGPI3/ -Contains thePVTtable (seesection 2.4.2.4) priortoitbeingwritten ontheProblem Tape. 7.C_MM_N/XGPI4/ -Contains individual DMAPcardsastheyareoutput fromXRCARD plusthe various flagsandpointers required toprocess eachDMAPinstruction. 8.C_MM_N/XGPI5/ -Contains solution, solution subset, approach andstartcodesalongwith datapertaining toDMAPALTER numbers. 9.C_MM_N/XGPI6/ -Contains various pointers intotheModule Execution Decision Table, MED(seesection I.I0). I0.C_MM_N/XGPIT/ -Contains datapertaining totheIFILETable (seesection 4.7.6.3). 4.7-2\nEXECUTIVE PREFACE MODULE XGPI (EXECUTIVEGENERAL PROBLEM INITIALIZATION) II.C_MM_N/XGPI8/ -Contains pointers intotheICPDPL Table (seesection 4.7.6.3). Further details regarding these common blocks maybeobtained fromthesource listings for XGPIBD andXGPIBS. 4.7.5.1 XGPIDG 4.7.5.2I.Entry Points: XGPIDG, XGPIMW. 2.Purposes: ForXGPIDG, towrite allfatal andnon-fatal diagnostic messages for module XGPI. ForXGPIMW, towrite allnon-diagnostic messages formodule XGPI. 3.Calling Sequences: ForXGPIDG: CALLXGPIDG (NC_DE,I,J,K) NC@DE -Message code nun_er I,J,K -Integer values determined byNCgDE. ForXGPIMW: CALLXGPIMW (MSGN@,I,J,A) MSGN_ -Message codenun_er I,J,A -Integer values determined byMSGN_ XGPIBS I.Entry Point: XGPIBS. 2.Purpose: Toinitialize module dataandtheLinkSpecification table inname, cormnon block /XLINK/(seesection 2.4). 3.Calling Sequence: CALLXGPIBS 4.7.5.3 XgSGEN I.Entry Point: X_SGEN. 4.7-3\nMODULEFUNCTIONAL DESCRIPTIONS 4.7.5.42.Purpose: Toexecute phase 1ofthecompilation bytranslating theDMAPprogram intoaskeleton Operation Sequence Control Array (_SCAR). 3.Calling Sequence: CALLXOSGEN XLNKHD I.Entry Point: XLNKHD. 2.Purpose: Togenerate theheader section ofan_SCAR entry andforproblem re- starts, todetermine whether ornottosetthe_SCAR entry execute flag. 3.Calling Sequence: CALLXLNKHD 4.7.5.5 XIPFL 4.7.5.6I.EntryPoints: XIPFL, X_PFL. 2.Purpose: ForXlPFL, togenerate theinputdatablocksection ofan0SCARentry. ForX_PFL, togenerate theoutputdatablocksection ofanOSCARentry. 3.Calling Sequences: CALLXlPFL CALLXOPFL XPARAM I.Entry Point: XPARAM. 2.Purpose: Togenerate theparameter section ofan_SCAR entry. 3.Calling Sequence: CALLXPARAM 4.7.5.7 XSCNDM I.EntryPoint: XSCNDM. 2.Purpose: ToscanallDMAPinstructions andreturn tothec_lling program each iteminaninstruction alongwithitsidentification (i.e.,delimiter, BCDname, 4.7-4\n4.7.5.8 4.7.5.9EXECUTIVE PREFACE MODULE XGPI (EXECUTIVE GENERAL PROBLEM INITIALIZATION) value orendofinstruction) asitisrequested. 3.Calling Sequence: CALLXSCNDM XFL_RD I.Entry Point: XFL_RD. 2.Purpose: Tocompute theLTU(Last TimeUsed) andNTU(Next TimeUsed) values fortheinput andoutput sections of_SCAR entries, andforproblem restarts, to determine whicK datablocks areneeded fromtheOldProblem Tape torestart the problem. 3.Calling Sequence: CALLXFL_RD XFLDEF I.Entry Point: XFLDEF. 2.Purpose: Tosearch theOldProblem Tape restart dictionary forarequested data block nameandflagnameiffound; andifnotfound, andifrestart ismodified andthe calling routine requests it,toattempt toregenerate thedatablock byturning onthe proper _SCAR execute flags. 3.Calling Sequence: CALLXFLDEF (NAMI, NAM2, N@FIND) NAMI,NAM2 Datablock name (8characters, 4characters/word). N_FIND -Forinput, N_FIND\u003c 0indicates thatthecalling routine wants thedatablock regenerated ifitisnotinrestart dictionary. N_FINDmO indicates noregeneration isdesired. Foroutput, N_FIND indicates tothecalling routine whatXFLDEF did. N_FIND \u003cO,thedatablock wasregenerated. N_FIND =O,the datablock wasintherestart dictionary andwasflagged for useinrestarting theproblem. N_FIND \u003eO,thedatablock wasnotfound andwasnotregenerated. 4.7-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.7.5.10 BSCDMP I.EntryPoint: OSCDMP. 2.Purpose: ToprinttheOSCARonthesystem output fileifrequested byuser,and toposition theDataPoolFileatthefirstOSCARentry. 3.Calling Sequence: CALL_SCDMP (FILP_S) FILPOS -Thenumber offilemarkstoskipoverinordertobepositioned at beginning oftheOSCAR. 4.7.5.11 MPLPRT I.EntryPoint: MPLPRT 2.Purpose: Toprintthecontents oftheModule Properties List(MPL)asdefined bytheBlockDataProgram XMPLBD. Thisprintout, which occurs whenever aDIAG31 cardexists intheExecutive Control Deck,isformatted foreasyreadability by programmers andusersalike. 3.Calling Sequence: CALLMPLPRT 4.7.6 Design Requirements 4.7.6.1 OpenCoreLayout The_SCARarrayinnamedcommon block/XGPII/ defines thefirstlocation inopencore. Allotherarrays tobeputinopencoreareequivalenced toOSCARandareoffset fromOSCAR(1) byanamount determined atexecution time. Thisdynamic allocation ofarrays inopencore optimizes thespaceavailable onagivenmachine, whichmeans thatanyrestrictions ondata (except thosenotedbelow) areduetothemachine’s coresizeandnottheprogram. 4.7-6 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Thediagrams below show theorder inwhich tables reside inopen coreduring phase land phase 2ofthecompilation. Phase l _SCAR DMPCRD LBLTBL MED FNM IBUFRPhase 2 _SCAR PTDIC ICPDPL MED FNM IBUFR Inphase lthefinal sizes ofthearrays _SCAR andLBLTBL arenotknown until theDMAP program hasbeen completely scanned byX@SGEN. These twoarrays request space asneeded until itrunsout. Atthistimetheuserisinformed thattheDMAPshould beshortened or corestorage should beincreased. 4.7-6a (8/I/72)\nEXECUTIVEPREFACEMODULEXGPI(EXECUTIVE GENERALPROBLEMINITIALIZATION) 4.7.6.2DataNecessaryForOperation TheProblemTapeprovidesExecutiveTables×CSA,XALTER,PVT,andforrestarts,XPTDIC (seesection2.4fordetails). Datainnamedcommonblocksisinitialized bytheBLOCKDATA routinesXMPLBD,XGPIBDandXBSBDorcommonblockdataisinitialized byroutineXGPIBS. 4.7.6.3TableFormats I._SCAR:Locatedinnamedcommonblock/XGPII/.Seesection 2.4.2.1 forformat. 2.MED,CNM, FNM: Equivaienced tothe_SCAR table. SeeISl,INMandJNMtable descriptions inXCSAModule Functional Description (4.2.6.2). 3.PTDIC, ICPDPL: Equivalenced to_SCAR array. Sample entry: Word l 2 3r IR I_i30129 28 _7 Word 1,2Item DBN R,F EQ ETDescription Datablock name (BCD) ofthedatablock fromtherestart dictionary. Note, adatablock nameappears onlyoncein thetable except fortable VPSwhere itappears twice. Reelnun_er andfilenumber where thedatablock islast located onOldProblem Tape. ForXVPSthere isanentry (thefirst inPTDIC) which indicates where thefirst XVPS datablock islocated ontheOldProblem Tape. Forpurged ornot-generated datablocks, R=0andF=O. Equivalence flag. EQ=0indicates thedatablock is equivalenced toanother datablock. Endoftapeflag. ET=lindicates thatthedatablock is split across tworeels oftheOldProblem Tape. 4.7-7\nMODULE FUNCTIONAL DESCRIPTIONS Word Item Description ER Endoflogical record flag. ER=1indicates thatthe complete logical record waswritten outprior tochanging reels whenET=I. RU Reuse flag. RU=lindicates thatthisdatablock istobe usedtorestart theproblem. Table ICPDPL contains allentries fromPTDIC which hadtheRUflagset. 4.MPL: TheMPLislocated innamed common block /XGPI2/.Seesection 2.4.2.2 fordetails 5.I_RDNL: Equivalenced toMPL,theI_RDNL table isusedinphase 2whentheMPLisno IORDNL intheorder thattheyare longer needed. Datablock names areentered into output fromfunctional modules andIFP. Sample entry: Word Word Item 1,2 DBN 3 LSTUSE 6.PVT:TP LTU AP1— DBN — 2 3| I_LSTUS E4l TTU- ……. 3130 1 Description Datablock name (BCD) Pointer toinput oroutput section entry ofafunctional module _SCAR entry where thedata block waslastreferenced. LSTUSE isusedtofill in NTU’s (Next TimeUsed) in_SCAR entries. Tapeflag. TP=lifthedatablock wasdeclared TAPE inaFILEDMAP instruction. Lasttimeused. Record number of_SCAR entry beyond which thedatablock neednotbesaved forinput. Append flag. AP=lifthedatablock wasdeclared APPEND inaFILEDMAPinstruction. Located innamed common block /XGPI3/. 4.7-8\nEXECUTIVEPREFACEMODULE XGPI (EXECUTIVEGENERAL PROBLEMINITIALIZATION} Sampleentry: CN PVTFile seesection 2.4.2.4 fordetails. MN-Maximum numberofwords inPVT(integer). CN-Current number ofwords being used(integer). 7.IFILE: Located innamed common block /XGPI7/.Thepurpose ofIFILE istosave information fromFILEDMAPinstructions. W°rd lIii_32 -rpIDBNTpI –iil Word Item Description 1,2 DBN D_tablock name(BCD) 3 SV SAVEflag TP TAPE flag AP APPEND flag 4.7.6.4 Restrictions onData There areonly three fixed length tables which might beoverflowed byexcess userdata. These tables arePVT, IFILE andI_RDNL. 4.7.7 Diagnostic Messages Every effort ismade todetect syntactical andlogical errors intheDMAPprogram, and,for restarts, tomakesurethattheproblem isbeing restarted correctly. Alltables arechecked foroverflow. TheN_G_flaginnamed common block /SYSTEM/issetaccording totheseverity ofthe errors found. N_G =lindicates compilation istobediscontinued after phase 2.N_G_=2 4.7-9\nMODULE FUNCTIONAL DESCRIPTIONS indicates aserious errorandcauses XGPItoterminate theprogram immediately. SeetheDiagnostic Message section oftheUser’s Manual (section 6.2)foradetailed dis- cussion ofXGPIdiagnostic messages, XGPImessages include numbers 1thru53. 4.7-I0\nEXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) 4.8 EXECUTIVE PREFACE MODULE UMFEDIT (USER MASTER FILEEDITOR) 4.8.1 Entry Point: UMFEDT 4.8.2 Purpose Tocreate andmanipulate UserMaster Files. 4.8.3 Callin 9Sequence CALLUMFEDT. UMFEDT iscalled onlybySEMIte, thePreface Driver. 4.8.4 Method UMFEDIT functions asapost-processor toExecutive Module XSBRT. Itsprimary taskisto generate aUserMaster Filebyrepeatedly transferring sorted bulkdatadecks generated byXS_RT fromtheNewProblem Tape (NPTP) totheNewUserMaster File (NUMF) based oncontrol cards read fromtheSystem Input File. Seesection 2oftheUser’s .Manual foradescription ofthese control cards andhowtheycontrol thecontents oftheNUMF. inaddition tocreating aUserMaster File, UMFEDIT isused tolistand/or punch BulkData Decks fromanexisting UserMaster File (UMF). Control cards readfromtheSystem Input File alsocontrol thisprocess. 4.8.5 Subroutines TheUMFEDIT module hasnoauxiliary subroutines butusesXRCARD (seesection 3.4fora description). 4.8.6 Design Requirements I.Open coreisdefined at/UMFXXX/andisutilized asfollows: C_E,N/UMFXXX/ ;GIN Buffer forUMF GIN_Buffer forUMF GINBBuffer forNPTP ! Unused coreF 4.8-I\nMODULEFUNCTIONAL DESCRIPTIONS 2.TheBlockDatasubprogram UMFZBDfills/UMFZZZ/. 3.UMFEDIT operates onlyinthePreface environment. TheBulkDataDeckmusthavebeen processed byXS_RT andaccepted bytheInput FileProcessor (IFP). 4.8.7 Diagnostic Messages BadBulk DataDecks (indicated byABORT =.TRUE.) will notbeaccepted byUMFEDIT for inclusion ontheNUMF. Subsequent BulkDataDecks will beincluded, however, ifacceptable. Other errors detected inUMFEDIT will result inappropriate diagnostic messages being written ontheSystem Output Fileandtermination viaPEXIT. These messages are: 1703through 1716, 1718, 1719, 1721, 1722, 1723, and1725through 1737. 4.8-2\nEXECUTIVEMODULEXSFA(EXECUTIVE SEGMENTFILEALLOCATOR) 4.9EXECUTIVEMODULEXSFA(EXECUTIVE SEGMENTFILEALLOCATOR) 4.9.1Entry Point: XSFA 4.9.2 Pur_ur_ep__sg_ TheSegment FileAllocator (SFA)manages thedatablock tophysical file relationships throughout aNASTRAN problem. Since, ingeneral, thenumber ofdatablocks required for problem solution farexceeds thenumber ofphysical files available, allocation offiles to datablocks isdonedynamically asthemodule sequence proceeds. TheSFAwillallocate forward forasmanymodules aspossible. Agroup ofmodules allocated byoneoperation of theSFAistermed asegment. 4.9.3 Callin 9Sequence CALLXSFA _SCP_S -(@SCP@S) Wheninput toXSFA, thisinteger argument isthecurrent position (record number) within the_SCAR. Uponreturn fromXSFA, (1)ifallocation was successful, WSCP_S isthe_SCAR position oftheendofthesegment asdefined above; (2)ifallocation wasunsuccessful, theinput argument issetnegative. 4.9.4 Method SFAiscalled byGNFIST (seesection 3.3.9 foradescription ofGNFIST) when GNFIST fails tofind thenecessary datablock names intheFIATtable toconstruct acomplete FISTtable forthenextoperating module (seesection 2.4fordescriptions oftheFISTandFIAT). TheFIST table mustcontain anentry foreachinput, output, andscratch datablock required by themodule. SFAoperates byprocessing the_SCAR fromitspresent position (_ext module tobe operated) through allremaining modules. Onlyfunctional module andoutput processor _SCAR entries flagged forexecution areprocessed. The_SCAR isreadandprocessed byan internal subroutine named XS_SGN (Serial _SCAR Sequence Generator) andtheS_Stable is formed. Fromthistable allallocation isperformed. Following XS_SGN, another internal subroutine named XCLEAN operates. XCLEAN actsto\"clean up\"theFIATandDPLtables prior tothebasic allocation procedure. Thisclean-up involves deleting datablock names not needed forsubsequent modules, removing equivalence flaas ifonemember ofanequivalent 4.9-I\nMODULE FUNCTIONAL DESCRIPTIONS pair isdeleted, andclosing upgaps intheFIAT caused bydeletions. Following operation of XCLEAN, basic allocation begins. Allocation isaccomplished during twopasses through theS_S table. Pass onefirst checks toseeifeach data block from theS_Sisalready intheFIAT. Ifso, itisconsidered allocated; otherwise thepossibility ofdata block stacking isinvestigated. Stacking isdefined asassigning twoormore data blocks tothesame physical file bycon- sidering their usespan. Thevarious usespan attributes available are: First-Time-Used (FTU), Next-Time-Used (NTU), andLast-Time-Used (LTU). Data block Amayuse(bestacked on)thesame file asdata block Bifthefirst use(FTU) ofdata block Bissubsequent tothelast use(LTU) ofdata block A.Thus many data blocks maybeallocated tousethesame physical file iftheir usespans donotoverlap. INPUTS maynotbestacked. Following pass one, ifanydata blocks within S_Sremain un-allocated, passtwoisbegun. Pass twofirst checks forfiles within theFIAT currently notassigned toanydata block. These files areconsidered empty andareassigned totheun-allocated data blocks. Once the empty files areexhausted acheck ismade todetermine ifthenext module tobeoperated has allitsdata blocks allocated tofiles. Ifthenext module (attheleast) isallocated, basic allocation iscompleted. Ifthenext module hasnotbeen completely allocated, the second part ofpass twowill force pooling ofsufficient data blocks toprovide thenecessary empty files forallocation oftheremaining data blocks needed forthenext module. Pooling isaccomplished byflagging thedata blocks forcopying onto aseparate file called the DataPoolFile. TheDataPoolFilewilltherefore contain manydifferent datablocks where allotherfilescontain onlyonedatablockatatilne. Datablocks arechosen forpooling bychecking thenext-time-used (NTU)attribute. Thedatablockwithtilegreatest NTUwill bepooled first. Datablocks pooled areconsidered un-allocated; whentheyaresubsequently re-allocated totheirownfile,theywillbeflagged forunpooling. Following basicallocation, subroutine XPUNP (Pool-Unpool) isoperated. Alldatablocks flagged forpooling arecopied tothePoolFilefollowed byalldatablocks flagged forunpooling beingcopied fromtheDataPoolFile. Lastly subroutine XDPH(DataPoolHousekeeper) operates toclean-up andifnecessary re-copy theDataPoolFile. SFAthenreturns control toGNFIST withthecalling argument setnegative ifitwasun-able toallocate thenextmodule. Figure ] illustrates thefunctional flow. 4.9-2 (811172)\nEXECUTIVE MODULE XSFA(EXECUTIVE SEGMENT FILEALLOCATOR) 4.9.5 Subroutines XSFAperforms basic allocation anditsentry point, purpose andcalling sequence aregiven above. Below, itshould benoted thatXPLEQK andXFILPS aresecondary entry points inXP_LCK. 4.9.5.1 Subroutine Name: XSBSGN (Serial _SCAR Sequence Generator) I.Entry Point: XS_SC_N 2.Purpose: XS_SGN reads the_SCAR andcreates theSOS(Serial _SCAR Sequence) andMD (Module Descriptor) tables. TheS_Stable contains thedatablock names andvarious attributes, while theMDtable contains the_SCAR sequence numbers andthenumber of input, output, andscratch datablocks required byeachmodule. S_STable MDTable #Entries DataBlock Name ArAb:………….LIP’,LTUt,NTU S_31 I.301_16_IS AL= AP= LTU= T= NTU=Entry Allocation Flag,setonbySFA whendatablock isallocated. Append Flag, setonbymodule XGPI ifdatablock istobe added to. Last-Time-Used, created by XGPIasadatablock attribute. TapeRequest Flag, setbyXGPI toindicate aphysical tapefile isrequested fordatablock. Next-Time-Used, created byXS_SGN asadatablock attribute.#Entries BSCAR Sequence #\" #Inputs #Outputs …………………….. #Scratches #=Fullword integer values foritemsEntry 4.9-3"},"title":"Programmer's Manual P36"},"/docs/programmers/programmers_manual_037/":{"data":{"":"MODULEFUNCTIONAL DESCRIPTIONS Note:ItemscreatedorsetbyXGPIarepassedvia_SCAR. Thesetablesarecontainedwithinthe/XSFAI/common block. 3.Calling Sequence: CALLXSBSGN 4.9.5.2 Subroutine Name: XCLEAN (FIAT andDPLClean-up) I.Entry Point: XCLEAN 2.Purpose: XCLEAN deletes datablock names fromtheFIATandDPLwhen theyareno longer needed (their LTUhasbeen reached). Following these deletions, equivalenced datablocks flags within FIATarechecked forcontinuing validity. If,forexample, onemember ofanequivalenced pairhasbeendeleted, theequivalence flagonthe remaining member isremoved. Finally, empty spaces within FIATareremoved byclosinn upthetable. XCLEAN alsoregenerates andstores various parameters intotheextended FIATtable. Since thistable isnon-resident andexists onlyduring SFAoperation, values suchasNTUandtheon/off switches mustberestored. Word lWord 1 4 5 6 ItemExtended FIAT l 01 ITiII _131 17116_1_15 -N=Pool +N=Unpool FlagNTU ._i -IYesCurrent Module0No -lYes Current Segment0No Allocation Type (Unused) DescriptionSample entry (oneforeachFIATentry) On/off switch, datablock isturned offfollowing stacking toprevent double stacking. Tape request flag, copied fromS_Swhen allocated. _lext-Time-Used; copied fromS_Swhen allocated, regenerated byXCLEAN fordatablocks remaining fromprevious allocation. 4.9-4\nEXECUTIVEMODULEXSFA(EXECUTIVE SEGMENT FILEALLOCATOR) Word Item -N +NDescription Flags XPUNP topooldatablock, N=number ofequivalent names fordatablock (Equals lifdatablock notequivalenced). Flags XPUNP tounpool datablock, N=DataPoolFile number ofdatablock. Flagsetyesifdatablock alloc)ted formodule currently being allocated -cleared between module allocations. Flagsetyesifdatablock allocated formodule within current segment -i.e., alldatablocks allocated during oneSFA operation. Allocation type-l= 2= 3 _ 5= z 6 Unuseddatablock match, namealready inFIAT datablock stacking, nameonfilewith another empty fileusedfordatablock datablock usingfilefreed byPooling another datablock sameas5except pooleddatablock is equivalenced This table iscontained within the/XSFAI/common block. 4.9.5.3 Subroutine Name: XPUNP (Pool-Unpool) I.Entry Point: XPUNP 2.Purpose: XPUNP checks thePoolandUnpool flags within theextended FIATandperforms theI/_operations necessary tocopydatablocks fromtheir separate files totheDataPool Fileandvice-versa. Datablock trailers arecopied fromtheFIATontotheDataPoolFile asanadditional record during pooling andarerenlaced fromthisrecord during unnooling. Allrequested pooling operations areperformed priortoanyunDoolinQ o_erations. Asdata blocks areadded totheDataPoolFile, appropriate entries areadded totheDataPool Dictionary (DPL). Theextended FIAT(4.9.5.2) iscontained within the/XSFAI/common block. 3.Calling Sequence: CALLXPUNP 4.9-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.9.5.4 Subroutine Name: XDPH(DataPoolHousekeeper) I.EntryPoint: XDPH 2.Purpose: XDPHscanstheDataPoolDictionary (DPL)todetermine thenumber andsizeof thedatablocks ontheDataPoolFilewhichhavebeenflagged asnolonger needed. Ifa sufficient quantity ofdataisflagged, acomplete housekeeping operation isperformed. Thiscomplete process involves re-copying theDataPoolFileontoascratch filewhile skipping thosedatablocks flagged forremoval. Following there-copy, thescratch file becomes thenewDataPoolFileandtheoldDataPoolFileisreleased asascratch file. XDPHwillalsoperform apartial housekeeping ifa(several) flagged datablock(s) appears asthelastdatablockontheDataPoolFile. Forthispartial operation onlytheDPL entries aremodified torelease thepoolspace, nore-copy isnecessary. 3.Calling Sequence: CALLXDPH 4.9.5.5 Subroutine Name: XPOLCK (DataPoolDictionary Check) I.EntryPoint: XPOLCK 2.Purpose: XP_LCK scanstheDataPoolDictionary foraparticular datablockname. If found, theposition within thedictionary andtheDataPoolfilenumber arereturned to thecalling program. 3.Calling Sequence: where: DBNI,DBN2- FNCALLXP@LCK (DBNI,DBN2,FN,L) Request datablockname(8characters), 4characters ineachword, leftjustified andfilled withblanks (ifnecessary). O,ifdatablocknotontheDataPoolFile.N,ifdatablockontheDataPoolFile; N=DataPoolFilenumber. Position ofdatablockentrywithin thedictionary ifdatablockfound. 4.9.5.6 Subroutine Name: XPLEQK (DataPoolEquivalence Check) I.EntryPoint: XPLEQK 4.9-6\nEXECUTIVE MODULE XSFA (EXECUTIVESEGMENTFILEALLOCATOR) 2.Purpose: XPLEQK scans theDataPoolDictionary foranyequivalence tothecalled data block name. Iffound, acopyoftheequivalent names ismoved from theDataPool Dictionary totheFIAT. 3.Calling Sequence: CALLXPLEQK (P_gLX,FIATX) where: P_LX -Position ofdatablock entry within thedictionary(seeargument Lwithin XP_LCK). FIATX -Position ofsamedatablock entry within theFIAT. 4.9.5.7 Subroutine Name: XFILPS (Data PoolFilePositioner) I.Entry Point: XFILPS 2.Purpose: XFILPS positions theDataPoolFiletothebeginning ofarequested data block. (TheData PoolFile isamulti-file file). 3.Calling Sequence: CALLXFILPS (FNEW) where: FNEW -Thefilecount oftherequested position. Thecurrent oroldfile_osition isstored inthe/XSFAI/common block. 4.9.6 Design Requirements I.Opencore isused onlyforGIN9buffers (2maximum). Theopencoreorigin is co_,_n block /ESFA/located following allSFAsubroutines. 2.SFAcommunicates data internal tothemodule subroutines viacom_n block /XSFAI/. TheS_S,MDandextended FIATtables reside in/XSFAI/. 3.The9SCAR mustbeattheentry where allocation istobegin. Following allocation, that initial 9SCAR position isrestored. 4.BLOCK DATA subprogram defines thelengths oftables in/XSFAI/. 4.9-7\nMODULEFUNCTIONAL DESCRIPTIONS 4.9.7Diagnostic Messages Special DMAProuting maycause thewarning 3022message tobeprinted bySFA. Following output ofthismessage, SFAflags thedatablock asallocated (although itwill notappear intheFIAT) andcontinues. Since SFAcannot predict conditional DMAProuting, the data block inquestion maynotberequired andtheproblem will proceed satisfactorily. Ifthe datablock isrequired, theproblem willterminate intherequesting module. Under these circum- stances theDMAProuting should bestudied. Allother error messages generated bySFAarefatal innature andindicate serious I/O malfunctions orexecutive table overflow. Seesection 6ofUser’s Manual forlistinq and explanation ofthese messages. XSFAmessages include numbers lOOlthrough I004, lOllthrough lOl4, 1021, 1031through I035, 1041, andlOS1. 4.9-8\nEXECUTIVEMODULEXSFA(EXECUTIVESEGMENTFILEALLOCATOR) XSFA(E.TER) Next Module Next DataBlock Next DataBlocLlCallXSBSGN Call XCLEAN _ I LISetalloc range to vIfirst/next module i Passl Pick-up first/next data] block within module Yes °I No Pass2 Pick-up first/next “Idatablock within moduleI Figure l.(a) Flowchart formodule XSFA.I Stack datablock I onthesamefileF-” I Setdatablock I_. asallocatedp 4.9-9\nMODULE FUNCTIONAL DESCRIPTIONS No IUse empty Ifile for data blockFindthedatablock withthelargest NTUnotrequired inthismodule Yes Setthepooling flag forthis data block Usethisnowemptyfile fornewdatablock 3 ISetnewdatablockasallocatedYes No YesSetARG.NEG.indicating alloc, incomp. YesXPUNP XDPH _ RETURN _ Figure l.(b) Flowchart formodule XSFA. 4.9-10\nEXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) 4.10 EXECUTIVE DMAPMODULE CHKPNT (CHECKPOINT) 4.10.1 Entry Point: XCHK 4.10.2 Pur__ Tosave, ontheProblem Tape, specified datablocks along withother datanecessary forrestarting aproblem. 4.10.3 DMAPCalling Sequence CHKPNT DBI,DB2 …..DBN$ where DBI,DB2…..DBN(N_l)aredatablocks tobecopied onto theProblem Tape for useinrestarting aproblem. 4.10.4 Method TheProblem TapeDictionary (XPTDIC), seesection 2.4.2.3, isbrought intocorefromthe Problem Tape, andthedatablock listintheCHKPNT _SCAR entry isscanned. Datablocks thathave beengenerated areentered intothelocal D!CTtable (seediscussion below) along with alldata blocks equivalenced tothem. Datablocks thatarepurged, orhavenotyetbeengenerated, areentered inthelocal PURGE table. Thedatablocks areassigned filenumbers andare placed intheFDICT table. Datablocks arethencopied onto theProblem Tapeaccording to their file number unless thedatablock isequivalenced andisalready intheProblem Tape Dictionary. Core resident datanecessary forrestart isalsowritten ontheProblem Tape as theVPSExecutive Table. Entries fromFDICT andPURGE areentered intotheProblem Tape Dictionary, andthenewcheckpoint entries arepunched forusersubmittal intheExecutive Control Deck uponproblem restart. Theupdated Problem Tape Dictionary iswritten back onthe Problem Tape, andtheProblem Tape ispositioned tothebeginning ofthelastfile (i.e., XPTDIC) inpreparation forthenextexecution oftheCHKPNT module. 4.10.5 Subroutine Module XCHKhasnoauxiliary subroutines. 4.10-1\nMODULE FUNCTIONAL DESCRIPTIONS 4.10.6 Design Requirements 4.10.6.1 OpenCoreLayout Namedcommon block/ESFA/ defines thestartoftheopencorearea. Theuseofopencore isoptimized byorigining arrays GBUF,PTDICandI_BUFat/ESFA/ andcomputing theiroffset fromtheoriginatexecution time.Thediagram belowshowshowthearrays areplaced inopen core. PTDIC(PTDT_P) I_BUF(1OPNT) GBUF(FPNT) GBUF(DPPNT) GBUF(NPTPNT)COMM_N /ESFA/ Problem TapeDictionary Utility buffer DataBlockGIN_buffer DataPoolFileGIN_buffer Problem TapeGIN_buffer 4.10.6.2 DataNecessary forOperation Thedatablocks, named common blocks andfiles needed bytheCHKPNT module arelisted below, along withtypeofaccess required (i.e. fetch and/or store data) andreasons foruse. I.DataPoolFile-fetch datablocks tobecopied onto theProblem Tape. 2.Problem Tape-fetch andstore datablocks. 3.Executive Table XPTDIC -fetch andstore. Used togenerate newcheckpoint entries which arethenadded toXPTDIC. 4.Common /XFIST/-store temporary entry inFISTforcopying datablocks. 5.Common/_SCENT/ -fetcb. CHKPNT_SCARentryresides here. 6.Common/XCEITB/,/XVPS/ and/SYSTEM/ -fetch. Contains datatobewritten inVPS Executive Table. 7.Common/XFIAT/ andCommon/XDPL/ -fetch. Contains datablocknamesofdatablocks tobecopied. 8.Common/_UTPUT/ -store. Prints outpageheading forCheckpoint Dictionary printout. 9.Common /STAPID/ -fetchandstore. UsedtowriteProblem TapeIDfileonnewreelof oftheProblem Tapewhenanendofreelisencountered. 4.10-2\nEXECUTIVE DMAPMX)DULE CHKPNT (CHECKPOINT) 4.10.6.3 Formats ofLocal Arrays I.DICTtable Thepurpose oftheDICTtable istoholdpreliminary datatobeused ingenerating the FDICT table. Sample DICTentry: Word Item 1,2 DBNWord l 2 3 _J31|30129 171G Description BCDname (8characters, 2words) ofthedatablock whose status is generated andistobecheckpointed. 3 EQ Equivalence flag. EQ=lindicates alldatablocks equivalenced to tKisdatablock alsoreside inDICT table. FA Filenumber assigned flag. FA=lindicates thatanFDICT entry has beengenerated forthisDBNandthatafile number ofwhere thedatablock will reside ontheProblem Tapehasbeenassigned. DP Datapoolflag. DP=lindicates thatthedatablock isontheDataPool File. FP Varies according toDPflag. ForDP=l,FPisnotused. ForDP=O, FPisapointer totheFIATentry containing DBNorequivalenced DBN. ID Varies according toDPflag. ForDP=l,IDisthefilenumber where thedatablock resides ontheData PoolFile. ForDP=O,IDisthefile (unit) identifier. FortheIBM7094, IDistheunitcontrol block pointer forthefile. Formachines using theFBRTRAN GINB, IDistheFBRTRAN logical unitnun#_er assigned tothefile. 2.FDICT table Thepurpose oftheFDICT table istoholdfinal data tobeused ingenerating XPTDIC entries fordatablocks whose status isgenerated. 4.10-3\nSample FDICT entry: WordMODULE FUNCTIONAL DESCRIPTIONS – DBN …..I Word Item 1,2 DBN EQ ET ER 3 R,FDescription BCDnameofdatablock. Equivalence flag. EQ=lindicates alldatablocks equivalenced to thisdatablock alsoreside intheFDICT table. End-of-tape flag. ET=lindicates thatthedatablock issplit across tworeels ofProblem Tape. End-of-logical-record flag. ER=lindicates thatthecomplete logical record waswritten outprior tochanging reels when ET=I. Reel number andfile number where thedatablock will bewritten on theProblem Tape. 4.10.6.4 Restrictions XPTDIC cannot bewritten across tworeels ofProblem Tape (i.e. afatal error occurs if anend-of-tape isencountered while writing XPTDIC). 4.10.7 Diagnostic Messages SeeDiagnostic Message section ofUser’s Manual (section 6.2) foradetailed discussion of CHKPNT module diagnostic messages. XCHKmessages include numbers llOlthrough If09. 4.10-4\nEXECUTIVEDMAPINSTRUCTION REPT(REPEATAGROUPOFDMAPINSTRUCTIONS) 4.11EXECUTIVEDMAPINSTRUCTION REPT(REPEATAGROUPOFDMAPINSTRUCTIONS) 4.11.1Entry Point: XCEI TheXCEImodule executes theDMAP control instructions: REPT, EXIT, C_NDandJUMP. 4.11.2 Purpose Torepeat agroup ofDMAPinstructions aspecified number oftimes. 4.11.3 DMAPCallin 9Sequence REPT n,c$ where: I.nisaBCDnameappearing inaLABEL instruction which specifies thelocation ofthe beginning ofthegroup ofDMAPinstructions toberepeated. 2.cisaninteger constant which specifies thenumber oftimes torepeat the instructi ons. 4.!1.4 BEGIN $ LABEL Ll$ M(_DULEI A/B/V,Y,PI $ M_DULE’N B/C/V,Y,PN $ REPT LI,3$ END$ 4.11-1\nMODULE FUNCTIONAL DESCRIPTIONS TheDMAPinstructions fromMODULE1 toM_DULEN willberepeated 3times. NotethatREPT isplaced attheendofthegroupofinstructions toberepeated. 4.11.5 Method Executive TableCEITBL innamedcommon block/XCEITB/ (seesection 2.4forformat) is searched fortheREPTentryandtheentry isupdated afterdetermining whether ornottorepeat theloopagain. Iftheloopisnottoberepeated, areturn ismadetothecalling routine. If arepeat oftheloopistobeexecuted, theProblem TapeDictionary (XPTDIC) isreadintocore fromtheProblem Tape,anddictionary entries created inside thelooparedeleted. Theupdated XPTDIC iswritten backontheProblem Tape. Datablocks thatarereferenced onlyinside theloop andwhichhavenotbeendeclared savedinaFILEDMAPinstruction havetheirstatus changed to not-generated (i.e.datablocktrailers within FIATarecleared andifthedatablocknameappears intheDPLitisremoved). The_SCARontheDataPoolTapeispositioned tothetopofloopand areturn ismadetothecalling routine. 4.11.6 Subroutine 4.11.6.1 Subroutine Name: XCEI. I.EntryPoint: XCEI 2.Purpose: Toexecute DMAPControl modules REPT,JUMP,C_ND,andEXITasdescribed intherespective Executive DMAPModule Descriptions inthissection andinsections 4.12, 4.13and4.14. 3.Calling Sequence: CALLXCEI 4.11.7 Design Requrements 4.11.7.1 OpenCoreLayout NamedcomRon block/ESFA/ defines thestartoftheopencorearea. diagram showsthelayout. COMMON/ESFA/ DataPoolFileGIN_buffer area. Problem TapeGIN_buffer area. Problem TapeDictionary (XPTDIC).Thefollowing 4.11-2\nEXECUTIVE DMAPINSTRUCTION REPT(REPEAT AGROUP OFDMAP INSTRUCTIONS) 4.11.7.2 DataNecessary ForOperation Thetables, named common blocks andfiles needed bythecontrol modules arelisted below, along withtypeofaccess required (i.e. fetch and/or store data) andreasons foruse. I.DataPoolFile-XCEImust re-position theBSCAR tothecorrect entry when a transfer istobeexecuted. 2.Problem Tape-fetch andstore theProblem TapeDictionary when looping. 3.DataBlock XPTDIC -fetch andstore. TheProblem TapeDictionary mustbeupdated when looping. 4.C_MI_N /XVPS/-fetch. /XVPS/contains theC_NDinstruction parameter value. 5.C_V_N /XCEITB/-fetch andstore. /XCEITB/contains control parameters forREPTandEXIT instructions. 6.C_Vt4_N /_SCENT/-fetch. /_SCENT/contains theControl Module _SCAR entry. 7.C_4_N /XFIAT/-fetch andstore. Mustbeupdated when looping. 8.C_V_N /XDPL/-fetch andstore. Mustbeupdated when looping. 4.11-3\nEXECUTIVEDMAPINSTRUCTION JUMP(UNCONDITIONAL DMAPTRANSFER) 4.12EXECUTIVEDMAPINSTRUCTION JUMP(UNCONDITIONAL DMAPTRANSFER) 4.12.1Entry Point: XCEI 4.12.2 Pur__ Toalter thenormal order ofexecution ofDMAPmodules byunconditionally transferring program control toaspecified location intheDMAP program. Thenormal order ofexecution ofDMAPmodules isthesequential order ofoccurrence of themodules asDMAPinstructions intheD_Pprogram. 4.12.3 DMAPCalling Sequence JUMP n$ where nisaBCDnameappearing onaLABEL instruction which specifies where control istobe transferred. 4.12.4 Method Ifcontrol isbeing transferred toaprevious DMAPmodule inthe_SCAR (i.e., looping), theProblem TapeDictionary isreadintocorefromtheProblem Tapeanddictionary entries created inside thelooparedeleted. Theupdated Problem TapeDictionary iswritten backouton theProblem Tape. Datablocks that arereferenced only inside theloopandwhich have not beendeclared saved inaFILEDMAP instruction have their status changed tonot-generated. The_SCAR ispositioned tothespecified location. Table CEITBL innamed common block /XCEITB/ issearched forREPTentries andtheloopcount iszeroed ifthejump istransferring control from inside thelooptooutside theloop. Areturn isthenmadetothecalling program. Ifcontrol isbeing transferred toasubsequent DMAPmodule inthe_SCAR, theBSCAR is positioned tothespecified location andareturn ismade tothecalling program. Seedescription oftheExecutive DMAPinstruction REPT (seesection 4.11) forfurther details. 4.12-I\n4.13 4.13.1 4.13.2EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) EXECUTIVE DMAPINSTRUCTION C_ND (CONDITIONAL TRANSFER) Entry Point: XCEI Toalter thenormal order ofexecution ofDMAPmodules byconditionally transferring program control toaspecified location intheDMAP program. 4.13.3 DMAPCallin 9Sequence C_ND n,V$ where: I.nisaBCDnameappearing onaLABEL instruction which sDecifies where control istobe transferred. 2.VisaBCDnameofavariable parameter whose value indicates whether ornottoexecute thetransfer. IfV\u003cO,thetransfer isexecuted. 4.13.4 BEGIN $ C_ND LI,K$ M_DULEI A/B/V,Y,PI $ LABEL Ll$ M@DULEN X/Y/$ END$ IfK_O,M_DULEI isexecuted. executed.IfK\u003c0control istransferred toL1andM_DULEN is 4.13-I\nMODULEFUNCTIONAL DESCRIPTIONS 4.13.5Method TheparametervaluefortheC_NDinstruction isexamined. Ifthevalueisgreater thanorequaltozero,areturnismadetothecallingroutine.Ifthevalueislessthan zero,theCONDinstruction isexecutedexactlyliketheJUMPinstruction. Seedescription oftheExecutiveDMAPinstruction JUMP(section4.12)forfurtherdetails. 4.13-2\nEXECUTIVEDMAPINSTRUCTION EXIT(TERMINATE DMAPPROGRAM) 4.14EXECUTIVEDMAPINSTRUCTION EXIT(TERMINATE DMAPPROGRAM) 4.14.1Entry Point: XCEI 4.14.2Purpose Toterminate aNASTRAN job. 4.14.3 DMAPCalling Sequence EXIT c$ where cisaninteger constant which specifies thenumber oftimes theinstruction isto beignored before terminating theprogram. Ifc=0thecalling sequence maybeshortened toEXIT$. 4.14.4 BEGIN $ LABEL Ll$ M_DULEI A/B/V,Y,PI $ EXIT3$ REPT LI,3$ END$ TheEXIT instruction will beexecuted thethird timetheloopisrepeated (i.e., the instructions within theloopwill beexecuted fourtimes). 4.14-I\nMODULEFUNCTIONAL DESCRIPTIONS 4.14.5Method Adetermination ismadewhetherornottoterminatethejobbyexaminingtheloopcountcf theEXITentryinnamedcommonblock/XCEITB/.Ifthejobistobeterminated, routine PEXIT iscalled; ifnot,theloopcount intheEXIT entry isincremented, andareturn ismadetothe calling program. Seedescription oftheExecutive DMAPinstruction REPT(section 4.11) forfurther details. 4.14-2\nEXECUTIVEDMAPMODULESAVE(SAVEVARIABLEPARAMETERVALUES) 4.15EXECUTIVEDMAPMODULESAVE(SAVEVARIABLEPARAMETERVALUES) 4.15.1Entry Point: XSAVE 4.15.2 Tospecify whichvariable parameter valuesaretobesavedfromthepreceding functional module forusebysubsequent modules. 4.15.3 DMAP Calling Sequence SAVE VI,V2 …..VN$ where VI,V2 …..VN(N_l)aretheBCDnames ofsomeorallofthevariable parameters which appear intheimmediately preceding functional module DMAPinstruction. ASAVEDMAPinstruction mustimediately follow thefunctional module instruction wherein theparameters being saved aregenerated. 4.15.4 Method Thespecified parameter values aretransferred fromblank common totheVPSExecutive Table located innamed common block /XVPS/.Seedescription ofthe_SCAR insection 2.4.2.1 fortheformat ofaSAVE_SCAR entry. 4.15.5 Subroutine TheXSAVE module hasnoauxiliary subroutines 4.15.6 Design Requirements SAVE mustaccess blank common andnamed common blocks /XVPS/and/_SCENT/. 4.15-I"},"title":"Programmer's Manual P37"},"/docs/programmers/programmers_manual_038/":{"data":{"":"EXECUTIVEDMAPMODULEPURGE(EXPLICITDATABLOCKPURGE) 4.16EXECUTIVEDMAPMODULEPURGE(EXPLICITDATABLOCKPURGE) 4.16.1Entry Point: XPURGE 4.16.2 Pur__ Toflagadatablock sothatitwill notbeallocated toaphysical file andsothat modules attempting toaccess itwill besignaled. 4.16.3 DMAPCalling Sequence PURGE DBNIA,DBN2A,D3N3A/PARMA/DBNIB,DBN2B/PARMB $ Note: Thenumber ofdatablock names (DBNi_) prior toeachparameter (PARMa) andthe number ofsetsofdata block names andparameters inaparticular calling sequence isvariable. 4.16.4 Input DataBlocks DBNIA,DBN2A, etc. -Anydatablock names appearing within theDMAPsequence. 4.16.5 Output DataBlocks (None specified orpermitted) 4.16.6 Parameters PARMA, etc.-Onerequired foreachdatablock nameorsetofnames. 4.16.7 Method 4.16.7.1 Summary Thedatablocks (within theDMAP calling sequence) arepurged ifthevalue oftheasso- ciated parameter is\u003cO.Ifthedatablocks arealready purged andtheparameter value is\u003eO,m thepurged datablocks areunpurged sothattheymaybesubsequently reallocated. Ifthedata blocks arenotpurged andiftheparameter value is_0, noaction istaken. 4.16-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.16.7.2 Functional Flow PURGEoperates bymodifying entries within theFIAT(FileAllocation Table) andDPL (DataPoolDictionary). TheFIATcontains anuppersection (unique part)andalowersection (tailpart). Bothpartscontain entries structured asdescribed intheExecutive Table description fortheFIAT,section 2.4.1.2. Thelength oftheunique partisdefined bytheunique filesavailable countintheFIATheader. Thetailpartisdefined astheremainder ofthe FIAT. Theunique partcontains oneentryforeachunique (separate) fileavailable forallo- cation, andthefileID’swithin theseentries arenotmodified through aNASTRAN run.The tailpartcontains entries forstacked files (seedescription forExecutive ModuleXSFA, section 4.9). purged files, andmembers ofequivalenced sets. Anentrywithin theFIATispurged byflagging (setting allbitson)itsfileID.Therefore, ifadatablockwithin theunique partisto bepurged, itsnameismoved tothetail. Adatablockentrywithin DPLispurged byremoving itsentryfromtheDPL.Adatablockwhich isalready purged isunpurged byremoving theflagged entryfromtheFIATsothatitmaybesubsequently allocated toaphysical file. Figure 1 illustrates thelogicflow. 4.16.8 Design Requirements I.Noopencoreisrequired bythismodule. 2.The_SCARrecord containing theDMAPpurgerequest mustreside inthelabeled common block/_SCENT/. 3.Thevalidity ofalldatablock namesandcontrolling parameters ischecked during NASTRAN initialization bymodule XGPI. 4.16.9 Diagnostic Messaqes PURGEmayproduce thefollowing System Fatalmessages: 1201,FIAT_VERFL_W 1202,DPL_VERFLOW Bothofthesemessages indicate thattheassembled sizeoftheparticular tablehas beenexceeded. Although itisunlikely thateither message willoccur, astudy ofthe erroneous problem’s operation alongwithdiaqnostic prints oftheFIATandDPL,obtained viatheDIAGExecutive Control card(seeUser’s Manual, section 2),should indicate some 4.16-2\nEXECUTIVE DMAPMODULE PURGE(EXPLICIT DATABLOCKPURGE) corrective action. Possible corrective actions include: increasing thebasic table size through re-assembly; providing more physical files totheNASTRAN system; andaltering the DMAPoperations. 4.16-3\nMODULE FUNCTIONAL DESCRIPTIONS PURGE ! Pick-up datablockI namefrompurge entryin_SCAR ISearch totalFIATfordata block name No Unique Yes Setpurge flagon [RnemOv_rdOat_hbel _LIClear datablock Inamefrom unique partofFIAT w __ v I Unpurge(Remove data block namefromFIAT) YesYes ,No Create a purged entry forthedata block inthe FIATtail Goback toENTER Figure loFlowchart formodule PURGE. 4.16-4\n4.17EXECUTIVE DMAPMODULE EQUIV (DATABLOCK NAMEEQUIVALENCE) EXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) I 4.17.1 Entry Point: XEQUIV 4.17.2 Purpose Toattach oneormoreequivalent (alias)datablock namestoanexisting datablock sothat module accesses todatabyequivalenced names willbeidentical. 4.17.3 DMAPCalling Sequence EQUIV DBNIA,DBN2A,DBN3A/PARMA/DBNIB,DBN2B/PARMB $ Not___e: Thenumber ofdatablock names (DBNi_) prior toeachparameter (PARMa) andthe number ofsetsofdatablock names andparameters inaparticular calling sequenceare variable. 4.17.4 Input DataBlocks DBNIA,DBN2A, etc.-Anydatablock names appearing within theDMAPsequence. TheIst datablock nameineachseries (DBNIA andDBNIB) isprimary andthe2nd,etc.datablock names become equivalent totheprimary. 4.17.5 Output DataBlocks (None specified orpermitted) 4.17.6 Parameters PARMA, etc. -Onerequired foreachsetofdatablock names. 4.17.7 Method 4.17.7.1 Summary Thedata block names aremadeequivalent ifthevalue oftheassociated parameter is\u003cO. Ifasetofdata blocks isalready equivalenced andtheparameter value is_O,theequivalence isbroken andthedatablock names again become unique. Ifthedatablocks arenotequivalenced andiftheparameter value is_O,noaction istaken. 4.17-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.17.7.2 Functional Flow EQUIVoperates bymodifying entries within theFIAT(FileAllocation Table) andDPL(Data PoolDictionary). TheFIATcontains anuppersection (unique part)andalowersection (tail part). Bothpartscontain entries structured asdescribed intheExecutive Tabledescription fortheFIAT,section 2.4.Thelength oftheunique partisdefined bytheunique files available countintheFIATheader. Thetailpartisdefined astheremainder oftheFIAT. Theunique partcontains oneentryforeachunique (separate) fileavailable forallocation andthefileID’swithin theseentries arenotmodified through aNASTRAN run.Thetailpart contains entries forstacked files (seedescription forExecutive TableXSFA), purged filesand members ofequivalenced sets. Entries within theFIATandDPLaremadeequivalent bysetting theirEQUIVflags(signbitwithin anentry) andmaking theirfileID’sidentical. Sinceadata blockwithin theunique partoftheFIATmusthaveaunique fileID,onlyonemember ofanequiva- lencesetmayreside within theunique section, allothers willbeplaced intheFIATtail. Thus, ift_oGatablocks occupying unique physical filesareequivalenced, onewillbemovedtothe FIATtail. Datablocks previously equivalenced areunequivalenced (broken) byremoving the EQUIVflagsandthesecondary entries. Whentwoormoredatablocks areequivalenced, thefirst datablockofthesetisconsidered theprimary datablock. Allothers areconsidered secondary. Thefilecontaining theprimary datablockislogically attached toalldatablocks intheset: primary andsecondary. Dataonfilesattached tosecondary datablocks priortoequivalencin_ islostuponequivalence. Iftheprimary datablockispurged, thesecondary(s) willbepurged. Figure 1illustrates thelogicflow. 4.17.8 Design Requirements I.Noopencoreisrequired bythemodule. 2.TheOSCARrecord containing theDMAPEQUIVrequest mustreside inthelabeled common block/_SCENT/. 3.Thevalidity ofalldatablocknamesandcontrolling parameters ischecked during NASTRAN initialization byXGPI. 4.XEQUIV isanentrypointinXPURGE. 4.17-2\nEXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) 4.17.9 Diagnostic Messages EQUIVmayproduce thefollowing System FatalMessages: 1201FIAT_VERFL@W 1202DPLQrVERFL_ Bothofthesemessages indicate thattheassembled sizeoftheparticular tablehasbeen exceeded. Although itisunlikely thateithermessage willoccur,astudyoftheerroneous problem’s operation alongwithdiagnostic printsoftheFIATandDPLobtained, viatheDIAG Executive Control card(seeUser’sManual, section 2),should indicate somecorrective action. Possible corrective actions include: increasing thebasictablesizethrough re-assembly; providing morephysical files totheNASTRAN system; andaltering theDMAPoperations. 4.17-3\nMODULE FUNCTIONAL DESCRIPTIONS ENTER _EQUIV Pick-Up Data Block Name from EQUIV Entry inOSCAR Search Total FIAT forData Block Name Was Block Name inFIAT?No lOCk Primar ondary PrimarySecondary No Prim, ‘y Data B1ock Yes SetLogic to PURGE forAll Data Blocks inthis SetParameter Value _O? No ockPrimary orSecon- Name ntheDPL Yes SetPrimary Data E!lock EQUIV Flag inDPLPrimary JataBlock ir No Figure 1.(a)Flowchart forEQUIVmodule 4.17-4\nEXECUTIVE DMAPMODULE EQUIV (DATA BLOCK NAMEEQUIVALENCE) PISetPrimaryDataBlock EQUIV Flag inFIAT ‘r lock Namein Block EQUIV Flag I inDPL L No Clear Stacked DataBlock Names fromFIAT_No F- Unequivalence (Clear Secondary DataBlock from FIAT) No ClearfromDataDPLBlock) I D Figure I.(b)Flowchart forEQUIV module 4.17-5\nMODULE FUNCTIONAL DESCRIPTIONS IClearDataBlockINamefromUnique PartofFIAT AddSecondary DataBlockEntry inFIATTailiEquivalence ITail Secondary DataI BlocktoPrimaryJ _n Block DPLNo \u003c_BIockName Yesilo _IRemove Secondary IDataBlock NameI Primary \u0026 Secondary Data BlockinDPLOccu SameFile?Yes No Clear Secondary Data Block Name from DPLes IAddSecondary IDataBolOD_kLName Figure I.(c)Flowchart forEQUIV module 4.17-6\nEXECUTIVE DMAP INSTRUCTION END(ENDOFDMAPPROGRAM) 4.18 EXECUTIVE DMAP INSTRUCTION END(ENDOFDMAPPROGRAM) 4.18.1 Entry Point: XCEI TheXCEImodule executes theDMAPcontrol instructions: REPT, EXIT, COND, andJUMP. 4.18.2 Pur_se Todenote theendofaDMAPprogram. ThisDMAP instruction performs afunction similar toanENDstatement inaFORTRAN compilation, i.e., tosignal theendofthe source program. 4.18.3 DMAPCallinq Sequence END $ Note: AnENDDMAPinstruction isoperationally equivalent toanEXIT0$orEXIT$ DMAPinstruction. 4.18.4 Method TheENDinstruction istranslated during aDMAPprogram compilation inmodule XGPI intoanEXIT $instruction. (seesection 4.14). 4.18-1\nEXECUTIVE DMAPMODULE PARAM (PARAMETER PROCESSOR) 4.19 EXECUTIVE DMAPMODULE PARAM (PARAI_TER PROCESSOR) 4.19.1 Entry Point: QPAF_M 4.19.2 _ Toperform specified arithmetic andlogical operationsonD_Pparameters. 4.19.3 DMAPCalling Sequence PARAM //C,N,_P/V,N,_UT/V,N,INI/V,N,IN2 $ where thefollowing operations (_P)areavailable: AND _RCUT -l +l +l +l -l -I -I +lIN1 \u003c0 \u003c0\n0 0 \u003c0 \u003c0 0 20IN2 \u003c0 0 \u003c0 20 \u003c0 –\u003e0 \u003c0 -\u003e0 ADD INI+IN2 SUB INI-IN2 iMPY INI*IN2 DIV N¢T IKPL NgP\u003c0 \u003c0 -0 _0iINI/IN2 -INl -I +I -I -! _UT\u003c0 0 0 _\u003eCInteger Arithmeti c 4.19-I\nMODULE FUNCTIONAL DESCRIPTIONS Notes: I. 2. 4.19.4*not used. PARAM does itsovenSAVE; therefore, aDMAP SAVE instruction isnotneeded following themodule. 3.PARAM hasnoinput oroutput data blocks. Examples 1.PARAM //C,N,NOP/V,N,PI=5 andsavesitintheVPS.$-this example sets thevalue ofparameter P1to5 2.PARAM //C,N,NOT/V,N,XYZ/V,N,NOXYZ $thisexample changes thesenseof parameter N_XYZwhich maybeuseful fortheCONDorEQUIVinstructions. Alternatively, XY2couldhavebeensetinthefollowing way: PARAM //C,N,MPY/V,N,XYZ/V,N,NOXYZ/C,N,-I $ 4.19.5 Method QPARAM performs theindicated parameter operation andstores theresult intheVPS (/XVPS/). 4.19.6 Diagnostic Messages _PERATION C_DE N_TDEFINED F_RMODULE PARAM, EXECUTION TERMINATED. Thelisted operation codewasnotrecognized byPARAM. 4.19-2\nEXECUTIVE DMAPMODULE SETVAL (SETVALUES) 4.20 EXECUTIVE DMAPMODULE SETVAL (SETVALUES) 4.20.I Entry Point: SETVAL 4.20.2 Purpose Toset{)MAPparameters equaltootherDMAPparameters ortoconstants. 4.20.3 DMAPCallin9Sequence SETVAL //V,N,XI/V,N,YI/V,N,X2/V,N,Y2/V,N,X3/V,N,Y3/V,N,X4/V,N,Y4/V,N,X5/V,N,Y5 $ 4.20.4 InputDataBlocks None. 4.20.5 OutPut DataBlocks None. 4.20.6 Parameters X|,X2,X3,X4,X5-Output-integers-no default values. Yl,Y2,Y3,Y4,Y5-Input-integers-default values =-l. 4.20.7 Method Thismodule does nothing except setXl=YI,X2=Y2,X3=Y3,X4=Y4,andX5=Y5. Onlytwoparameters needbespecified inthecalling sequence (XlandYl). 4.20.8 Subroutines SETVAL hasnoauxiliary subroutines. 4.20.9 Design Requirements SETVAL should reside intherootsegment inalllinks. 4.20.I0 Diagnostic Messages None. 4.20-I\nFUNCTIONAL MODULEGPI(GEOMETRYPROCESSOR-PHASEl) 4.21FUNCTIONAL MODULEGPI(GEOMETRYPROCESSOR-PHASEI) 4.21.1Entry Point: 4.21.2 PurposeGPI. GPIperforms basic geometry processing forthemodel. Alistofallgridandscalar points isassembled andplaced ininternal order. Coordinate system transformation matrices arecomputed, andallgridpoints aretransformed tothebasic coordinate system. 4.21.3 D_PCallinq Sequence GPI GEgMI,GEOM2/GPL,EQEXIN,GPDT,CSTM,BGPDT,SIL/V,N,LUSET/V,N,NgCSTM/V,N,N_GPDT $ 4.21.4 Input DataBlocks GEgMI -Gridpoint, coordinate system, sequence data. GEOM2 -Element connection data. 4.21.5 Output DataBlocks GPL -GridPoint List. EQEXIN -Equivalence between external gridorscalar numbers andinternal numbers. GPDT -GridPoint Definition Table. CSTM -Coordinate System Transformation Matrices. BGPDT -Basic GridPoint Definition Table. SIL -Scalar Index List. Note: Nooutput datablock maybepurged. 4o21.6 Parameters LUSET -Output, integer, nodefault. Total degrees offreedom inthegdisplacement set. NgCSTM -Output, integer, nodefault. Number ofcoordinate systems defined intheBulkData Deck, -lifnocoordinate systems defined. NOGPDT -Output, integer, nodefault. -lifnoaridorscalar Doints defined inBulk Data Deck, +lotherwise. 4.21-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.21.7 Method 4.21.7.1 Construction oftheGPLandFirst Logical Record oftheEQEXIN. TheSPOINT cards andthescalar element cards (CELASi, CDAMPi, CMASSi, i=1,2,3,4) are read from GEOM2, andalist ismade ofallreferenced scalar points. TheGRID cards areread from GEOMI, andamerged list ofallgrid andscalar points isconstructed andwritten onSCRI, a scratch file. Thelist isexpanded topairs ofnumbers. Thefirst number istheidentification number, ID,thesecond istheresequenced number which isgiven ontheSEQGP cards orislO00*ID ifnotgiven onSEQGP cards. Thepaired list issorted bySORT onthesequence numbers. The resulting setoffirst numbers iswritten asthefirst logical record intheGPL(Grid Point List). These arethepoint identification numbers inorder oftheir sequence numbers. Thesequenced paired list iswritten asthesecond logical record oftheGPLdata block. Thesecond numbers in thesequenced paired list arereplaced bytheindices l,2,3,…, accordinq toposition. The list issorted again, this time using thefirst number ofeach pair (the identification number). Theresulting paired list isthefirst logical record oftheEQEXIN data block which isused to convert external numbers, given bythefirst number ofapair, totheinternal grid point indices, given bythesecond number inthepair. 4.21.7.2 Formats ofGPDT, BGPDT andCSTM. Thegeometry data blocks aretheGPDT, theBGPDT andtheCSTM. Their formats, although described insection 2.3.3, arerepeated here since thefollowing terms will bereferenced inthe discussion below ontheconstruction oftheCSTM. GPDT -There isoneentry foreach grid orscalar point. Theorder oftheentries isbytheinternal (sequenced) order. Each entry contains: I.Internal sequence number. 2.Locating coordinate system ID. 3.x,y,z forarectangular system. 4.r,8,z foracylindrical system. 5.p,8,_ foraspherical system. 6.Global coordinate local coordinate system ID. 7.Permanent single-point constraint coordinate (l=x,2=y,etc.). 4.21-2\nFUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l) Forscalar points, word 2=-landwords 3through 7arezero. Thedataisessentially aduplicate oftheGRIDbulkdatacardexcept thattheidentification number isrenlaced by theinternal sequence number. BGPDT -Contains oneentry foreachgridorscalar point. Thecontents are: I.Local coordinate system IDforglobal coordinate definition. 2.xi)Locations ofpoint 3.Yilinbasic coordinate 4.zisystem. CSTM- TheCSTMcontains oneentry foreachlocal coordinate system. Theorder isby coordinate system identification numbers. Eachentry contains 14words: Word Item l N-thecoordinate system ID. 2 3-5 6-14 4.21.7.3TypeN-thecoordinate system type(rectangular, cylindrical or spherical}. {RoN} -thelocation ofthesystem origin inbasic coordinates. [ToN]-thethree-by-three matrix defining theorientation ofthe coordinate system principal axes. Construction oftheGPDT. TheGPDTdatablock isformed incoresized groups. Thegridandscalar dataarereadone entry atatimefromSCRI. EQEXIN (incore) issearched tofindtheinternal nu_er, andthegrid dataarestored (ifpossible) intheinternal position allocated incore. Ifcorewill nothold theGPDT, thedataarewritten onSCR2, andS_RTiscalled tosort andwrite thedataontheGPDT. 4.21.7.4 Construction oftheCSTM. Sixteen words arealloted foreachlocal coordinate system, andfivewords arealloted for eachreferenced grid point. TheC_RDij dataisread fromGE_MI andstored incore. External point ID’sonC_RDij cards arereplaced withinternal numbers. AC_RDIj cardreferences three grid points. Itmaybeconverted toaCSTMentry ifthese gridpoints have their locations reduced tobasic coordinates. AC@RD2j cardreferences another local coordinate system. Itmay 4.21-3\nMODULE FUNCTIONAL DESCRIPTIONS beconverted toaCSTMentryifthatreferenced system hasbeenreduced toaCSTMentry. The basic logicistomakerepeated passes overthecoordinate system data,eachtimereducing oneor morecoordinate systems and,whenpossible, converting referenced gridpoints tobasicsystem location. AC_RDIj cardimagereferences threegridpoints -a,bandc.Ifthelocations ofthese points inbasiccoordinates arethevectors {Ra},{Rb},{Rc},thesolution forcoordinate system Nis {RoN}={Ra}, (I) {Vk}={Rb}{Ra}, (2) {Vi}={Rc}{Ra}, (3) {Vk} {k}:T’_ (unit\"z\"vector), (4) {k}x{Vi} {Jl= (unit\"y\"vector), (5) l{k}x{Vi}l {i}={j}x{k}(unit\"x\"vector). (6) Pointaistheorigin, pointbliesonthez(orpolar) axis, pointcliesinthex-zplane (e=0or@=0).Thethree-by-three matrix [TN]isdefined as: m i [TN]:2 13Jlkl J2 k2 J3k3 N,typeN,{RoN}and[TN]formtheCSTMentryforthecoordinate system.(7) 4.21-4\nFUNCTIONAL MODULEGPI(GEOF_TRYPROCESSOR-PHASEl) AGRiDpoint(j)referenced tocoordinate system(N)maybereducedtobasiccoordinates (Xo’Yo\"Zo)bytheequations: I.IftypeN=Rectangular (R), Xj,YjandZjaregiven by Ix°ll::IYo={RoN} +[TN] \" (8) Zo (zj) 2.IftypeN=Cylindrical (C), r,eandZaregiven by Xj=rcose, (9) Yj=rsine, (lO) z.=z. (11)3 Xo’YoandZoarecalculated asinEquation 8. 3.IftypeN=Spherical (S),p,Band¢aregivenby Xj=psinBcos$, (12) Yj:psin8sin$, (13) Zj:pcosB. (14) Xo’YoandZoarecalculated asabove. Whenthebasic location ofagridpointhasbeencalculated, theentryinthelistischanged such thatthereference coordinate system (entry No.2)iszeroandthethreevalues areXo,Yo’Zo\" 4.21-5\nMODULEFUNCTIONAL DESCRIPTIONS TheC_RD2jcardimagereferences anothercoordinate systemanddefinesthreepointsinthe referenced system:a,bandc.IfsystemnumberNisdefinedbysystemnumberM,thesolutionis I.IftypeM=rectangular, thenumbersdefiningthethreebointsarethevectors: {a},{b},and{c}, 2.IftypeM=cylindrical, thenumbersarer,8andz.Theequationstoconvertthese torectangular vectorsare a2 a3Iracos8a1rasin0a Za:{a}. (15) The{b}and{c}vectors arecalculated similarly. 3.IftypeM=spherical, thenumbers givenforthepoints arep,8,andqb. lal! laPsin_c°sq_Ia2=apsinesin ={a} a3 apcos andsimilarly forpoints bandc. 4.Thedefinition ofthenewsystem isthatpointaistheorigin, pointblieson thez(orpolar) axisandpointcliesinthex-z(ore=O)plane. theCSTMdataare {RoN} ={RoM}+[TON]{a}.Wecalcul ate (16) Insystem Mthevectors defining theaxesofsystem Nare {Vk}={b}-{a};Theequations for {k}{vk} :_ ,(“z\"unitvector); {Vi}={c}-{a};(17) (18) (19) (20) 4.21-6"},"title":"Programmer's Manual P38"},"/docs/programmers/programmers_manual_039/":{"data":{"":"FUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR -PHASE l) {j}{k}x{Vi} l{k}x{Vi}I’(“Y\"unitvector);(21) {i}={j}x{k},(“X\"unitvector). Theorientation oftheaxes isdefined bythematrix JlkI[TON] =[TOM] i2 J2 k2” J3 k(22) (23) 5.OneachpassoftheC_RDij dataatleast onenewsystem mustbeconverted. After eachpassthereferenced GRIDdataischecked andconverted. Theresulting C_RDij data will betheCSTMdatablock witheachentry reduced from16to14words. 4.21.7.5 Construction oftheBGPDT, theSILandtheSecond Logical Record ofthe_QEXIN. TheBGPDT andtheSILdatablocks areformed simultaneously. TheSILdatablock issimely alistofthefirst scalar index foreachgridorscalar Doint. Agrid point hassixscalar indices (ordegrees offreedom), andascalar point hasonescalar index. Every degree offreedom intheproblem hasascalar index, butsince thesixdegrees offreedom foragridpoint arecon- secutive, onlythefirst oneislisted. TheGPDTdataarereadapoint atatime. Thebasic location coordinates ofthepoint are formed using Equation 8through Equation 14andthese dataarewritten ontheBGPDT file. TheSIL value forthenextpoint iscalculated byincrementing thelastvalue bysix(grid point) orby one(scalar point). Atest ismadeonthevalue ofthedisplacement coordinate system (field 6)intheGPDTdata. Ifthisvalue istheinteger, -l,thepoint isaspecial RINGFL, GRIDF, orGRIDS fluid point. It isgiven onescalar index, thedisplacement coordinate system isbasic (0),anditslocation coordinates intheBGPDT datablock arecalculated likeanormal gridpoint. Finally thesecond logical record ofEQEXIN iswritten. Thisrecord contains pairs ofex- ternal numbers, lO*scalar index +typewhere type=lforagrid point, 2forascalar point. 4.21-7 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.21.8 Subroutines GPIhasnoauxiliary subroutines. 4.21.9 Design Requirements 4.21.9.1 Allocation ofCoreStorage During theassembly oftheGPL,spacefor2*(number ofgridpoints plusnumber ofscalar points) plustwoGINObuffers isrequired. During theassembly oftheCSTM,corestorage is allocated asfollows: ICSDT ILIST BUFIC_MM_N/GPAI/Z(1) External pointnumber Internal number Coordinate system ID li=rectangularCoordinate system type =cylindrical =spherical Coordinate system definition =C_RD2j Reference coordinate system ID IIgllg2 la3 b1 c2 c3 Internal grid number Defining coordinate system ID GIN_bufferTwowords perentry oneentrypergridor scalar point Sixteen words perentry oneentry percoordinate system Five words perentry oneentry foreach grid point referenced ona C_RDIi card. 4.21-8 (lllll70)\nFUNCTIONAL MODULE GPI(GEOMETRY PROCESSOR-PHASE l) Total storage requirements during thisphase, therefore, equals 2*(number ofgrid+number ofscalar points) +16*(number ofcoordinate systems) +5*(number ofgridpoints referenced on C_RDIj cards) +oneGIN_buffer. 4.21.9.2 Environment OpencoreforGPIisdefinedby/GPAI/.Thetable /GPTAI/mustbeincorewhenGPIis executed. GPIusestwoscratch files. 4.21.I0 Diagnostic Messages Thefollowing diagnostic messages maybeissued byGPI: 2001, 2002, 2003, 2004, 2005, 2006, 2012 4.21-9\n4.22FUNCTIONAL MODULEGP2(GEOMETRYPROCESSOR-PHASE2) FUNCTIONAL MODULE GP2(GEOMETRYPROCESSOR-PHASE 2) 4.22.1 Entry Point: GP2 4.22.2 GP2processes element connection dataandconverts external point numbers tointernal numbers. 4.22.3 DMAPCalling Sequence GP2GEgM2,EQEXIN/ECT $ 4.22.4 Input DataBlocks GERM2 -Element connection data. EQEXIN -Equivalence between external gridorscalarnumbers andinternal numbers. Rote: EQEXIN maynotbepurged. 4.22.5 Output DataBlocks ECT-Element Connection Table. Note: ECTmaynotbepurged. 4.22.6 Parameters None 4.22.7 Method Thefirst datarecord ofEQEXIN (containing pairsofexternal point identification and internal index) isread intocore. GEt,M2 isopened, andtheheader record isskipped. TheECT isopened, andtheheader record iswritten. Thefollowing process isrepeated foreach logical record inGEgM2. I.The3-word header isread. Ifanend-of-tile isencountered, sten (4)isexecuted. Other- wise, /GPTAI/(seedescription insection 2.5)issearched foramatch. Iffound, step (2) isexecuted. Ifnotfound, aninternal table, CARDS, which defines additional cards Drocessed 4.22-I\nMODULE FUNCTIONAL DESCRIPTIONS byGP2(e.g. GENEL) issearched. Ifamatch isfound, step (3)isexecuted. Otherwise, therecord isskipped, andstep (1)isrepeated. 2.The3-word header from GEOM2 iswritten ontheECT. Parameters defining theelement are fetched from /GPTAI/.Ifthenumber ofwords perelement isless than 5,thesort flag in theGERM2 trainer isfetched. Each element card ofthecurrent type onGERM2 isread. Each external grid identification isconverted toaninternal index byperforming abinary search intheEQEXIN table. Ifthepoint isnotinthetable, anerror message isqueued andtheNOGO flag isturned on. Ifthedata isnottobesorted, theelement iswritten directly ontheECT. Otherwise itissaved incore (orwritten onascratch file ifcore is full). When allelements ofagiven type have been processed, thesort flag isagain tested. Ifoff, theECTrecord isclosed andreturn tostep (1)ismade. Otherwise, thedata are sorted bySORT andtheECTrecord isthen written. 3.ForGENEL, SEQBFE andQDSEP data (the latter twoareForce Method only), each entry is read, allexternal point identifications areconverted tointernal indices asin(2)andthe entry iswritten ontheECT. When thelogical record onGERM2 isexhausted, theECTrecord isclosed andreturn tostep (1)ismade. 4.TheECTtrailer iswritten, andallfiles areclosed. IftheNOG_ flag wasturned on, PEXIT iscalled. Otherwise, anormal exit ismade. 4.22.8 Subroutines Themodule GP2consists ofonesubroutine, GP2. 4.22.9 Design Requirements 4.22.9.1 Allocation ofCore Storage GP2requires space for2*(number ofgrid points +number ofscalar points) +three GINO buffers. 4.22.9.2 Environment Open core isdefined by/GPA2/.Thetable /GPTAI/must beincore when _P2isexecuted. GP2uses uptofour scratch files. 4.22-2\nFUNCTIOIIAL MODULE GP2(GEOMETRYPROCESSOR -PHASE 2) 4.22.10 Diagnostic Messaqes Thefollowing diagnostic messages maybeissued byGP2: 2007, 2059, 2060, 206l, 2138. 4.22-3 (8/I/72)\n4.23FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) FUNCTIONAL MODULE PLTSET (PLOT SETDEFINITION PROCESSOR) 4.23.1 Entry Point: DPLTST 4.23.2 Togenerate thestructural element setstobeusedbythestructural plotter (functional module PL_T). 4.23.3 DMAP Calling Sequence PLTSET PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/V,N,NGP/V, N,NPSET 4.23.4 Input DataBlocks PCDB EQEXIN ECT Note: 4.23.5 PLTSETX - PLTPAR - GPSETS ELSETS Note: 4.23.6 Parameters NGP - NPSET –PlotControl DataBlock forthestructure plotter. Equivalence between external gridorscalar numbers andinternal numbers. Element Connection Table. IfPCDBispurged, nothing isdoneinthismodule. However, ifPCDBisnotpurged, neither EQEXIN norECTmaybepurged. Output DataBlocks User error messages related tothedefinition ofelement plotsetsforthe structure plotter. Plotparameters andplotcontrol table. -Gridpoint setsrelated totheelement plotsets. Element plotsetconnection tables. Noneofthese datablocks maybepre-purged unless PCDBisalsopurged. Output-integer-no default. Total number ofgridpoints. Output-integer-default value =-l.Number ofelement plotsets (setto-lif none). 4.23-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.23.7 Method Eachlogical cardintheplotcontrol datablock (PCDB) isread. Ifthefirstentry ona cardisnot\"SET”, thecardisassumed tobeaplotparameter orcontrol cardmeaningful only tothePLOTmodule. Inthiscase,thelogical cardiscopied ontothePLTPAR datablock. Ifthefirstentryonacardis\"SET\", itisassumed tobeadefinition ofanewelement plotset.Aseachentryonthecardisread,itisdecided whether alistofelements (bytype, rangeorexplicit id’s)oralistofgridpoints (byrangeorexplicit id)isbeing included or excluded. Eachelement typewhichisspecified isinserted intoatable(TYP,I00words long). Ifarangeofelements oranexplicit element idisspecified, itisinserted intothebeginning ofopencore(theELarray). Andfinally, ifarangeofgridpoints oranexplicit gridpointid isspecified, itisinserted intotheendofopencore(theGParray). Whenasethasbeen completely specified, itiswritten outontoascratch file(MSET) inthefollowing format: Word 1 Word2toNEL+I Word 1 Word2toNTYP+I Word 1 Word2toNPT+I=NEL(number ofentries intheELarray). =theentries intheELarray. =NTYP(number ofentries intheTYParray). =theentries intheTYParray. =NPT(number ofentries intheGParray). =theentries intheGParray. After alltheSETcardshavebeenprocessed, subroutine C_MECT iscalled tosetupa shortened element connection table(ECTX). Foreachelement type,thetableisasfollows: foreachelement I ofthistypeWord1 Word2 Word3 Word4, etc.=twocharacter BCDelement typesymbol (leftjustified) =number ofgridpoints perelement. =element id. :internal gridpointnumbers ofthegridpoints connected bythiselebient 4.23-2 (12-I-69)\nFUNCTIONAL MODULEPLTSET(PLOTSETDEFINITIO_ PROCESSOR) Thistable,inconjunction withMSET,isusedbysubroutine CNSTRCtocreatetheGPSETSand ELSETSdatablocks.TheELSETSdatablockissimplyaduplicateofECTXforeachplotset,except thatonlythoseelementswhichareinthesetareincluded. TheGPSETSdatablockforeachplot setissimplyalistofindicesintothesubsetofgridpointswhichpertaintothisset. 4.23.8Subroutines Utility routines CLSTAB, FREAD, G_PEN, INTGPX, INTGPT, INTLST, RDMODX, RDMODE andRDWORD are usedbyPLTSET. SeeSection 3.4fortheirdescriptions. 4.23.8.1 Subroutine Name: SETINP l• 2. 3. COFV40N/GPTAI/NTYPES ,LAST,INCR,ELEM(1)EntryPoint: SETINP Purpose: Tocreate theplotparameter andcontrol datablock (PLTPAR) andinterpret theplotsetdefinition cardsfromthePlotControl DataBlock(PCDB). Calling Sequence: CALLSETINP (NoteSection 2.5.2.1) 4.23.8.2 Subroutine Name: COMECT I. 2. 3.Calling Sequence: CALLC_MECT COMMON/GPTAI/NTYPES,LAST,INCR,ELEM(1) 4.23.8.3 Subroutine Name: CNSTRCEntryPoint: COMECT Purpose: Tocreate ashortened formoftheElement Connection Table (ECT). (NoteSection 2.5.2.1) l• 2. 3. C{_MMON/GPTAI /NTYPES ,LAST,INCR,ELEM(1)EntryPoint: CNSTRC Purpose: Toconstruct theelement andgridpointplotsetdatablocks (ELSETS,GPSETS). Calling Sequence: CALLCNSTRC (GP,ELE,BUF,FtAX) (NoteSection 2.5.2.1) 4.23-3 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS Where: GP ELF= BUF= MAX=NGPlocationsusedtosetupthegridpointindexlistforthegrid pointsetdatablock(GPSETS), MAXlocationsusedtosetuptheelementsetdatablock(ELSETS). Locationof3GIN_buffers. AmountofcoreavailablefortheFLEarray(opencore). 4.23.9Design Requirements OpenCoreDesign (Common BlockXXPSET) I.Subroutine SETINP EL(1) EL(NEL) GP(NPT) GP(1) xc(1)C_MM_N/XXPSET/ Element id’sandranges Gridpoint id’sandranges 5GINObuffers I 2.Subroutine CNSTRC Forthissubroutine, opencoreispartitioned bythecalling program asfollows: GP(1) GP(NG) ELE(1) ELE(MAX) BUF(1)Gridpointindextable Plotsetelement id’s 3GIN_buffers 4.23-4 (811172)\nFUNCTIONAL MODULEPLTSET(PLOTSETDEFINITION PROCESSOR) 4.23.10 Diagnostic Message s Afatalmessage occurs inSETINP ifasetspecification issolargethatopencoreisfilled (i.e., arrayELmeetsarrayGP).Allotherdiagnostics arenon-fatal andarewritten onthe PLTSETX datablockforprinting bythePRTMSG module. 4.23-5 (8/I/72)\nFUNCTIONAL MODULE PLOT (STRUCTURAL PLOTTER) 4.24FUNCTIONAL MODULE PL_T(STRUCTURAL PLOTTER) 4.24.lEntryPoint: DPLOT 4.24.2 Todrawstructural shapes onavariety ofdifferent plotters. 4.24.3 DMAPCallin 9Sequence PLCT PLTPAR,GPSETS,ELS_TS,CASECC,BGPDT,EQEXIN,SIL,PLTDSPI,PLTDSP2/PLCTX/V,N,NGP/ V,N,LSIL/V,N,NPSET/V,N,PLTFLG/V,N,PLTNUM $ 4.24.4 Input DataBlocks PLTPAR GPSETS ELSETS CASECC BGPDT EQEXIN SIL PLTDSPI PLTDSP2 Notes:-Plotparameters andplotcontrol table. -Gridpoint setsrelated totheelement plotsets. -Element plotsetconnection tables. -CaseControl DataTable. -Basic GridPoint DefinitionTable. -Equivalence between external gridorscalar numbers andinternal numbers. -Scalar Index List. -Translational displacements (statics). -Translational displacements(dynamics). I.OnlySIL,PLTDSPI, andPLTDSP2 maybepurged. Ifthis isthecase, only undeformed shapes maybedrawn. 2.Ifeither PLTSDPI orPLTDSP2 ispurged, thattypeofdeformed shape will notbe drawn. 3.Ifeither PLTDSPI orPLTDSP2 isnotpurged, SILmaynotbepurged. 4.24.5 Output DataBlocks PLOTX Usermessages. Note: PLOTX maynotbepurged. 4.24-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.24.6 Parameters NGP LSIL NPSET PLTFLG PLTNUMInteger-input-no default value. Number ofgrid points. Integer-input-no default value. Lastscalar index value. Integer-input-no default value. Number ofelement plotsets. Integer-input/output-default value =I.Displacement plotflag. =lifundeformed shapes havenotyetbeendrawn. =-lifundeformed shapes havebeendrawn. Integer-input/output-default value =O.Plotnumber. 4.24.7 Method Subroutine PARAM reads eachcard intheplotparameter andcontrol table (PLTPAR). If thefirst entry onacardisnot’FIND’ or’PL_T’, itisassumed tobeaplotparameter cardtobeprocessed within PARAM (e.g., PR_JECTION, PLOTTER, etc.). Within PARAM, animplied ‘FIND’ cardisinitially setuptoautomatically findanorigin, vantage point, andscale. In addition thissameimplied “FIND” cardissetupeachtimeanewprojection isdefined asa ‘PL_TTER’ cardisencountered. Atthesame time, theviewangles arere-initialized totheir default values, theregions pertaining toeachorigin arereset tofullpictures, andallpre- viously defined origins arenullified. When a’FIND’ cardisencountered, subroutine FINDiscalled both tointerpret thecard andactuponitsrequests. Andfinally, whena’PL_T’ card isencountered, subroutine PL_T iscalled both tointerpret thecardandtoactuponitsrequests. However, inthiscase, if theimplied ‘FIND’ card setupbysubroutine PARAM still exists (i.e., ifnoorigin, scale, orvantage point hasbeendefined) theFINDsubroutine iscalled tosatisfy these needs before subroutine PLOTiscalled. Insubroutine FIND, after theinterpretation ofthe’FIND’ card iscompleted, acoordinate system rotation matrix iscalculated relative tothecurrent viewangles, andthen thevantage point, scale factors, andtheorigin requested arecalculated asneeded. Insubroutine PL_T, after theinterpretation ofthe’PLOT’ card iscompleted, alistof messages totheplotter operator isgenerated. Thenallplots requested ontheplotcard are generated bycalling subroutine DRAWforeach plotrequest. 4.24-2\nFUNCTIONAL MODULEPL_T(STRUCTURAL PLOTTER) Subroutine DRAWgeneratesoneplot.Itsetsuptheregionoftheplot, rotates thegrid points based uponthecurrent viewing angles, applies thelatest scale factor tothestructural coordinates, andtranslates these coordinates totheorigin specified forthisplot. Italso controls thevarious aspects ofaplotasspecified onthe’PL_T’ card, e.g., drawing ashape, labeling gridpoints, etc., forbothundeformed anddeformedstructures (superimposition if called for). 4.24-3 (12-I-6g)\nMODULE FUNCTIONAL DESCRIPTIONS 4.24.8 Subroutines Thefollowing utility routines arecalled byPLOT: CLSTAB,FREAD,GOPEN,(INTGPX,INTGPT), INTLST,(RDM_DX,RDMODY,RDM_DE,RDWORD). Seethesubroutine descriptions insection 3.The subroutines FNDSET, MINMAX, PERPEC andPROCES aresupport subroutines usedbymore than oneofthefollowing subroutines. 4.24.8.1 Subroutine Name: PARAM I.Entry Point: PARAM 2.Purpose: Tointerpret theplot parameter cards andtodetect the’FIND’ and’PL_T’ plotcontrol cards. Inaddition, itserves asadriver forsubroutine FINDandPLOT. 3.Calling Sequence: CALLPARAM (SETID,X) C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5). Where: SETID =variousplotsetid’screated inthePLTSET module. (Record lofGPSETS). X =Open core. 4.Method: Allplotparameters areinserted intheXXPARM table. Anyparameter which isnotrecognizable causes amessage tobecreated tothiseffect, andtheparameter isthenignored. 5.Additional Subroutines Required: FIND,PLOT 4.24.8.2 Subroutine Name: FIND I.Entry Point: FIND 2.Purpose: Tointerpret a’FIND’ cardandtocalculate theparameters requested on thecard. 3.Calling Sequence: CALL FIND(MODE,SETID,X) C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5). Where: MODE =Current value oftheXRCARD mode value asreada_dmodified bysubroutine 4.24-4\nFUNCTIONAL MODULEPL_T(STRUCTURALPLOTTER) RDM@DX. SETID =Various plotsetid’screated inthePLTSET module (record lofGPSETS). X =Opencore. 4.Method: After interpreting the’FIND’ card, thecoordinate system rotation matrix iscalculated (based uponthecurrent viewangles), thevantage point, scale factor, and desired originarecalculated. 5.Additional Subroutines Required: FNDSET,MINtIAX,PR_CES,PERPEC. 4.24.8.3Subroutine Name: PL_T I.Entry Point: PL_T 2.Purpose: Tointerpret the’PL_T’ card, andproduce alltheplots requested onthecard byacting asadriver tosubroutineDRAW. 3.Calling Sequence: CALLPL_T (M_DE,SETID,X) C_MMON/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). C_I.IM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5). Where: M_DE =Current value oftheXRCARD modevalue asreadandmodified bysubroutine RDM_DX. SEIID :Various plotsetid’screated inthePLTSET module (record lofGPSETS). X -Opencore. 4.Method: After interpreting thedefom}ed structure plotrequests (there maybemany onone’PL_T’ card), therestofthe’PLgT’ cardisread intomemory. Foreachdeformed structure request, theappropriate displacement datablock (PLTDSPI orPLTDSP2) is searched foramatching subcase id. Ifoneisfound, (this search doesnotoccur ifonly theundeformed requests arebeing serviced), thentherestoftheplotcardisinterpreted forthevarious plotting options. Subroutine DRAWisthen called toservice these options andtodraw thecorresponding picture foreachplotelement setlisted onthe ‘PL_T’ card. 5.Additional Subroutines Required: HEAD,FNDSET,GETDEF,ORAW. 4.24-5 IIIIIII\nMODULE FUNCTIONAL DESCRIPTIONS 4.24.8.4 Subroutine Name: GETDEF I.Entry Point: GETDEF 2.Purpose: Toreadthetranslational components ofasetofdisplacements (inthebasic coordinate system). 3.Calling Sequence: CALLGETDEF (DFRM,GPT,D) C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). where: DFRM =Displacement datablock toberead (pre-positioned atthesetofdisplacements toberead). GPT =Listofgrid point indices defining asubset ofgridpoints. D =Array intowhich thedisplacement components aretoberead(3pergrid point -X,Y,Z). 4.Method: Thescalar index list(SILdatablock) isused todetermine atwhich grid point aparticular displacement component isspecified. While reading thecomponents, amaximum absolute component (MAXDEF) isdetermined. 4.24.8.5 Subroutine Name: PLT_PR I.Entry Point: PLTOPR 2.Purpose: Togenerate printed output tobeusedbytheplotter operator insetting uptheplotting equipment, andtogenerate output informing theuseroftheplotting parameters usedtogenerate theplots. 3.Calling Sequence: CALLPLTOPR C_MM_N/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5). C_MM_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). 4.Method: Alloutput iswritten onthePLOTX datablock forsubsequent processing by thePRTMSG module. Theresulting output canbeusedbytheusertoalter certain plotparameters onasubsequent run,ifhedesires, inorder toslightly alter theplots produced, 4.24-6\nFUNCTIONAL MODULEPL_T(STRUCTURALPLOTTER) 4.24.8.6 Subroutine Name: DRAW I.:Entry Point: DRAW 2.Purpose: Toservice themany possible plotting options andgenerate thecorresponding picture. 3.Calling Sequence: CALLDRAW (GPLST,X,U,S,DEF_PJ4,STERE_) C(_MMON/PLTDAT/ -SeePLTDAT miscellaneous table description (section 2.5). C{_MM{_N/XXPARM/ -SeeXXPARM table description below (section 4.24.9.2). C{_MM(_N/RSTXXX/ -SeeRSTXXX table description below (section 4.24.9.2). C(_MM(N/DRWDAT/ -SeeDRWDAT table description below (section 4.24.9.2). :List ofindices (oneforeachstructural gridpoint) intothesubset ofgrid points which pertain totheelement setappropriate tothisplot. X :Coordinates ofthegridpoints inthiselement set(3pergridpoint -r,s,t). U =Defor_tion components foreachgridpoint inthiselement set(3pergrid point -x,y,z). S =Location intowhich thesandtdeformed structure grid point coordinates are tobeplaced. DEF_RM{ 0ifanundeformed structure plot isrequested.lifadeformed structure plotisrequested. _=0iftheleftimage ofastereo plotistobegenerated.STERE@ liftheright image ofastereo plotistobegenerated. 4.Method: Initially, thegridpoints arerotated based uponthecurrent viewing angles, translated totheselected plotorigin, andconverted toplotter units using thecurrent scale factor, andthedeformation components arereduced tothespecified maximum deformation value. Then theundeformed structural plotisgenerated. Next, thedeformed structural shape (ifrequested) isdrawn. Thenthedeformation vectors (asrequested) aredrawn.where: GPLST 4.24-7 (12-I-69) Im\nMODULE FUNCTIONAL DESCRIPTIONS 4.24.8.75.Additional Subroutines Required: Subroutine Name: INTVECMINMAX,PR_CES,PERPEC,INTVEC,SHAPE,GPTSYM,GPTLBL,DVECTR, ELELBL I.EntryPoint: INTVEC 2.Purpose: Tointerpret theusersupplied deformation vector plotrequest. 3.Calling Sequence: CALLINTVEC(VECTOR) where: VECTOR=BCDcharacters specified inthedeformation vector request (any combination uptofourletters ofthecharacters R,X,Y,Z,N). InputandOutput. Oninput,VECTOR isinteger (=0)orBCD.On output, VECTOR ininteger (=0,if=0uponinput). 4.Method: Theresult isstored intoVECTOR, asfollows: 0 X=2 1 Y=2 2 Z=2 3 R=2(ifVECTOR =‘R’only,itistreated asif VFCTOR =RXYZ). -VECTOR (thenegative ofthesumoftheother characters)N= 4.24.8.8 Subroutine Name:SHAPE I.EntryPoint: SHAPE 2.Purpose: Todrawastructural shape. 3.Calling Sequence: CALLSHAPE(GPLST,X,U,PEN,DEF_RM) where: GPLST=Listofindices intothesubsetofgridpointspertaining totheshape tobedrawn. =Corresponding gridpointcoordinates oftheundeformed structure (3per gridpoint-r,s,t). 4.24-8 (3/I171)\nFUNCTIONAL MODULEPLIBT(STRUCTURALPLOTTER) U PEN = DEFi_RMI=Corresponding gridpoint coordinates ofthedeformed structure (2pergrid point -s,t). Pennumber orlinedensity tobeusedtodrawtheshape. 0iftheundeformed shape istobedrawn. lifthedeformed shape istobedrawn. 4.Method: Thestructuralshapetobedrawn isdefined asacompact element connection table ontheELSETS datablock (assumed openandpositioned atthecorrect element set). Aseach element isread, itisdrawn, taking intoaccount whether theelement isoneor twodimensional. 4.24.8.9 Subroutine Name: GPTSYM II 2. 3. Where: GPLST XEntry Point: GPTSYM Purpose: Totypeaspecial symbol ateachofasubset ofgridpoints. Calling Sequence; CALLGPTSYM (GPLST,X,U,SYM,DEF_M) U SYM =Listofindices defining thesubset ofgridpoints. Corresponding grid point coordinates oftheundeformed structure (3per gridpoint -x,s,t). Corresponding gridpoint coordinates ofthedeformed structure (2per gridpoint -s,t). Twoindices tobeusedtoconstruct thespecial symbol. 0iftheundeformed gridpoints aretobeused. lifthedeformed gridpoints aretobeused. 4.24.8.10 Subroutine Name: GPTLBL I.Entry Point: GPTLBL 2.Purpose: Totypetheexternal gridpoint idofeach ofasubset ofgridpoints. 3.Calling Sequence: CALLGPTLBL (GPLST,X,U,DEFtRM) CgMM_N/PLTDAT/ -SeethePLTDAT miscellaneous table description(section 2.5). 4.24-9 (3/1/71)"},"title":"Programmer's Manual P39"},"/docs/programmers/programmers_manual_040/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS Where: GPLST X=Listofindices defining thesubset ofgridpoints. :Corresponding gridpointcoordinates oftheundeformed structure (3per gridpoint-r,s,t). U =Corresponding gridpointcoordinates ofthedeformed structure (2per gridpoint-s,t). I0iftheundeformed gridpoints aretobeused.DEFORM = 1ifthedeformed gridpoints aretobeused. 4.Method: Theinternal andexternal idofeachstructural gridpointisreadfromthe EQEXlN datablock. Ifthegridpointispartofthespecified subset, thentheexternal idisprinted totheimmediate rightofthegridpoint. 4.24.8.11 Subroutine Name: DVECTR I.EntryPoint: DVECTR 2.Purpose: Todrawdeformation vectors. 3.Calling Sequence: CALLDVECTR (GPT,X,U_PEN) Where: GPT PEN=Listofindices defining thesubset ofgridpoints atwhichvectors areto bedrawn. =Corresponding gridpoint coordinates oftheundeformed structure (3per gridpoint-x,s,t). =Corresponding gridpointcoordinates ofthedeformed structure (2per gridpoint-s,t). :Pennumber orlinedensity tobeusedtodrawthevectors. 4.24.8.12 Subroutine Name: FNDSET I.EntryPoint: FNDSET 2.Purpose: Tofindthesubset ofgridpoints pertaining toasetofelements, andtoread thecorresponding gridpointcoordinates fromtheBGPDT datablock. 3.Calling Sequence: CALLFNDSET (SET,GPID,X) 4.24-10 (3/I/71)\nWhere: SET GPIDFUNCTIONAL MODULE PL_T (STRUCTURAL PLOTTER) =Element plotsetindex. =Array intowhich thelistofindices defining thesubset ofgrid points istoberead. X=Array intowhich thecorresponding coordinates aretoberead (3pergrid point -x,y,z). 4.Method: IfSET=O,thegridpoint setindex datablock (GPSETS) isassumed positioned atthecorrect record. Otherwise, GPSETS isfirst positioned correctly (record SET+I). Theindices arethenreadintoGPID, andthecorresponding coordinates arereadfrom BGPDT intoX. 4.24.8.13 Subroutine Name: MINMAX I.Entry Point: MINMAX 2.Purpose: Toinitialize theminimum andmaximum gridpoint coordinates toavery large andsmall nun_er, respectively. 3.Calling Sequence: CALLMINMAX C_MM_N/RSTXXX/ -SeetheRSTXXX table description below (section 4.24.9.2). 4.24.8.14 Subroutine Name: PERPEC I.Entry Point: PERPEC 2.Purpose: Tocalculate thevantage point and/or translate thegridpoint coordinates tothevantage point. 3.CallingSequence: CALLPERPEC (X,STERE_) CCMM¢N/XXPARM/ -SeeXXPARM table description(section 4.24.9.2). CCMMCN/RSTXXX/ -SeetheRSTXXX table description (section 4.24.9.2). where: X STERE_ =Setofgridpoint coordinates tobetranslated (3pergridpoint -r,s,t) Iiifthecoordinates oftheleftimage forstereo aretobecalculated.ifthecoordinates oftheright image forstereo aretobecalculated. 4.24-II (3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 4.Method: Afterthevantage pointiscalculated (ifrequired), eachgridpointis translated. Intheprocess, unless theprojection isstereo, theminimum andmaximum sandtcoordinates arecalculated. Finally, thedifferences between theseminima and maxima, andtheiraverages, arecalculated. 4.24.8.15 Subroutine Name: PRICES I.EntryPoint: PRICES 2.Purpose: Toexchange coordinate axes(asrequested) androtate thegridpointcoordi- natesbaseduponthecurrent viewangles. 3.Calling Sequence: CALLPROCES (X) C_MM_N/XXPARM/ -SeetheXXPARM tabledescription below (section 4.24.9.2). C_MH_N/RSTXXX/ -SeetheRSTXXX tabledescription below(section 4.24.9.2). where: X=Gridpointcoordinates (3pergridpoint-x,y,z). 4.Method: Inaddition toitsprimary purpose, thissubroutine calculates theminimum and maximum rotated gridpointcoordinates, andthedifferences andaverages oftheseminima and maxima. 4.24.8.16 Subroutine Name: ELELBL I.EntryPoint: ELELBL 2.Purpose: Totypetheelement identification number ofeachelement inasubset of elements. 3.Calling Sequence: CALLELELBL (GPLST,X,U,DEF_RM) C_MM_N/CHAR94/ -SeetheCHAR94 miscellaneous tabledescription (section 2.5). C_MMON/PLTDAT/ -SeethePLTDAT miscellaneous tabledescription (section 2.5). where: GPLST =Listofindices defining thesetofgridpoints associated withtheelements tobelabeled. 4.24-12 (311171)\nMODULE FUNCTIONAL DESCRIPTIONS =Corresponding grid point coordinates oftheundeformed structure. =Corresponding grid point coordinates ofthedeformed structure. _0iftheundeformed gridpoints aretobeusedDEF@RM hifthedeformed gridpoints aretobeused 4.Method: Thecompact element connection table (ELSETS) isread. Aseachelement idis read, itistyped atthecenter oftheelement. Thetwocharacter symbolic name ofthe element type isappended totheelement ID. 4.24.8.17 Subroutine Name:WRTPRT I.Entry Point: WRTPRT 2.Purpose: Towrite messages onadatablock forsubsequent processing byWRTMSG. Calling Sequence: CALLWRTPRT (G,L,F,N) G L= F= N=GIN_filename Listvector oflength L(1) incells L(2)-L(L(1)+I) Format vector Length offormat vector, 4.24-12a (8/I/72)\nFUNCTIONAL MODULEPLgT(STRUCTURAL PLOTTER) 4.24.9Design Requirements 4.24.9.1 OpenCoreDesign (Common Block XXPL_T) NPSET :Number ofelement plotsets. NGP =Total number ofgridpoints. NGPSET =Number ofgridpoints inanelement.Define IoSubroutine DPL@T partitions opencoreforsubroutine PARAM asfollows: C_4_N/XXPL_T/ x(o) X(NPSET) X(BUF)Elementplotsetid’s Open Core 3GIN_buffers 2.Subroutine FINDpartitions opencoreforsubroutines FNDSET, PERPEC, andPR¢CES as follows: x(o) X(NGP) X(NGP+3NGPSET) X(NGP+4NGPSET)GPLST(NGP) Gridpoint indices intoasubset ofgridpoints X(3,NGPSET) Coordinates ofthegridpoints inthesubset XR(NGPSET) ’s’gridpoint coordinates for theright image ofastereo pair. Restofopencore 4.24-13\nMODULEFUNCTIONAL DESCRIPTIONS 3.Subroutine PL@Tpartitions opencoreforsubroutines FNDSET,GETDEF, andDRAWasfollows: DEFLST(O) DEFLST(NDEF) DEFLST(NDEF+N) DEFLST(NDEF+N+NGP) DEFLST(NDEF+N+NGP+3NGPSET) DEFLST(NDEF+N+NGP+4NGPSET) DEFLST(NDEF+N+NGP+7NGPSET) DEFLST(NDEF+N+NGP+9NGPSET) DEFLST(BI)DEFLST(NDEF) Listofspecified deformation subcases PLTCRD(N) Restofthe’PLOT’ card GPLST(NGP) Gridpoint indices intoasubset ofgridpoints X(3,NGPSET) Coordinates ofthegridpoints inthesubset XR(NGPSET) ’s’gridpoint coordinates for theright image ofastereo pair U(3,NGPSET) Coordinates ofthedeformed grid points inthesubset S(2,NGPSET) ’s’and’t’coordinates ofthe deformed gridpoints Restofopencore PL_TTER Buffers 5GIN_Buffers 4.24-14 (8/I/72)\nFUNCTIONALMODULE PLFF(STRUCTURAL PLOTTER) 4.24.9.2 Io SET LABEL gRIGIN PEN SHAPE SYMBOL SYM VECTgRBlock Data Interface C_MM_N/DRWDAT/ SET,LABEL,_RIGIN,PEN,SHAPE,SYMB_L(2),SYM(6),VECT_R -Element plotsetindex. -Gridpoint label option. -Origin index. -Pennumber ordensityvalue. Integer -Structural shape drawing option. -Grid point symbol indices. -Symmetry options. -Deformation vector options. 2.Cg_gN/RSTXXX/ CSTM(3,3),MIN(3),MAX(3),D(3),AVER(3) CSTM -3x3coordinate system rotation matrix. MIN -Minimum rotated gridpoint coordinates. MAX -Maximum rotated gridpoint coordinates, Real D -Differences between theminima andmaxima. AVER -Averages oftheminima andmaxima. 3.C¢_PICN/XXPARM/ PBUFSZ,CAMERA,BFRAMS,PLTMDL(2),TAPDEN, NPENS,PAPSIZ(Z),PAPTYP(2),PENSIZ(8),PENCLR(8,2),“SRIP(1)”, SCALE,_BJM_D,FSCALE,MAXDEF,DEFMAX, AXIS(3),DAXIS(3),VANGLE(3),BETA_S,BETAP,“SKIP(4)”, FVP,RO,SOL,SOR,TO,DO,DO2,DO3,PRJECT,SOS FgRG,gRG,NgRG,gRIGIN(II),EDGE(II,4),XY(II,3) Inthefollowing descriptions, thevalue(s) inparentheses totheright ofthevariable name, thedefault value, andtheletter inparenthesestotheright oftheexplanation pertain tothetypeofthevariable (Iimplies integer andRimplies real). PBUFSZ(O) =Plottapebuffer size (1) 4.24-15 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Plotter Data CAMERA(2) BFRAMS(1) PLTMDL(4020,O) TAPDEN(O) PenandPaperData NPENS(8) PAPSIZ(8.5,11.) PAPTYP(VELLUMbb) PENSIZi(1) PENCLRi,I(BLAC) \u0026PENCLRi,2(Kbbb) Scalin9Data SCALE @BJM_D(I.) FSCALE(1) MAXDEF(O.) DEFMAX Viewin9 Data AXlS (1,2,3) DAXIS(I,2,3) VANGLE(O.,-I.IO I0,34.27) BETA_S(23.17) BETAPCo.):Plotter camera number (1). =Number ofblank frames between plots (I). =Plotter model (BCDorIorR). =Plottapedensity (I). :Maximum number ofpens (I). =Paper sizeininches (R). =Paper type (BCD). =Pensizes (I). =Pencolors (BCD). =Object-to-plotter ormodel-to-plotter (stereo only) scale factor (R). =Object-to-model scale factor (R-stereo only). :Findscale factors option (1). :Forced value ofthelargest deformation component (R). =Actual largest deformation component (R). :Undeformed structure axisorientation (I). =Deformed structure axisorientation (I). =Viewangles (R-alpha,beta,gamma). =Orthographic andstereo default value forthe “beta” viewangle(R). =Perspective default valueforthe\"beta\" view angle(R). 4.24-16 (12-I-69)\nFUNCTIONAL MODULEPL@T(STRUCTURAL PLOTTER) Projection Data FVP(1) RO SOL SOL,SOR TO DO D02(l.) D03(2.) PRJECT(1) SOS(2.756) Origin Data F_RG(1) _RG(O) N_RG(IO) @RIGIN EDGEi,I(O.) \u0026EDGEi,2(O.) EDGEi,3(I.) lEDGEi,4(I.) XYi,l XYi,3 XYi,l\u0026XYi,2=Findvantage point option (1). =“r\"component ofthevantage point (R). =“s\"component oftheperspective vantage point (R). =“s\"components ofthestereovantage point (R). =“t\"component ofthevantage point (R). =Projection plane separation value (R). =Perspective default projection plane separation value (R). =Stereo default projection plane separation value (R). =Projection type (I,l=orthographic, 2=per- spective, 3=stereo). =Ocular separation value (R). =Findoriginpoint option(1). =Number ofactive origins(1). =Maximum nun_er ofactive origins (1). =Active origin id’s (1). :Lower leftcorner oftheregion specified fortheithorigin(R). =Upper right corner oftheregion specified fortheithorigin(R). :xcomponent oftheithorigin (R). =ycomponent oftheithorigin(R). :leftandright xcomponents oftheithorigin forstereo projection (R). 4.24.9.3 Common Storage Requirements I.IXXPLCT/ 2.IPLTDAT/ 3.IXXPARMI 4.IRSTXXX/ 5.IDRWDAT/Opencore. -Plotter data (seemiscellaneous table description -section 2.5). -Plotting parameters. -Plotco-ordinate system calculations. -Drawing data. 4.24-17\nMODULE FUNCTIONAL DESCRIPTIONS 4.24.10 Diagnostic Messages Anon-fatal message, number 3008,CALLMESAGE (8,x,x), willbegenerated bysubroutine PL_Tif notenough coreisavailable forthegridpointdataneeded foraspecific element plotset.If thisoccurs, thissetwillnotbeusedtogenerate aplot. Allotherdiagnostics arenon-fatal andarewritten ontothePLOTXmessage datablock forprinting bythePRTMSGmodule. Thesemessages areallquiteself-explanatory and straightforward, anddonothaveanyexternal message numbers. 4.24-18 _ r\n4.25 4.25.1 4.25.2FUNCTIC_AL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3) FUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3) Entry Point: GP3 Purpose GP3processes static loads andtemperature data.Static loaddataarecollected byload set,andexternal numbers areconverted tointernal numbers. Similarly, temperature dataare collected bytemperature setandexternal numbers areconverted tointernal numbers. 4.25.3 DMAPCallin9 Sequence GP3 GE_M3,EQEXIN,GE_M2/SLT,GPTT/V,N,N_L_AD/V,N,N_GRAV/V,N,N_TEMP $ 4.25.4 Input DataBlocks GERM3 EQEXIN GE@M2 Note:Static loads andtemperature data. Equivalence between external grid andscalar numbers andinternal numbers. Element connection data. EQEXIN maynotbepurged. 4.25.5 OutputDataBlocks SLT -Static Loads Table. GPTT -GridPoint Temperature Table. 4.25.6 Parameters N_L_AD - N_GRAV N_TEMPOutput-integer-no default. +lotherwise. Output-integer-no default. -lifnoGRAV cards intheBulkDataDeck, +lotherwise. Output-integer-no default.-lifnoTEMP orTEMPO cards inBulkDataDeck (orifGPTT ispurged), +lotherwise.-lifnostatic loads (i.e. SLTisnotcreated), 4.25-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.25.7 Method Subroutine GP3isthecontrol program forthemodule. Itexecutes eachofthemajor subroutines ofGP3(GP3C, GP3A,GP3B)depending onthestatus ofthedatablocks. Aflow chartforGP3isincluded inFigure I. 4.25.8 Subroutines 4.25.8.1 Subroutine Name: GP3 I.Entry Point: GP3 2.Purpose: Module control program. 3.Calling Sequence: CALL GP3 4.25.8.2 Subroutine: GP3C I.EntryPoint: GP3C 2.Purpose: Toconvert PLEAD2 datatoPLEADformat, merge PLEAD2 datawithPL@AD data(ifpresent) andwrite theresulting dataonSCR2,ascratch file. 3.Calling Sequence: CALLGP3C 4.Method: PLEAD2 cardsarereadintocorefromGEOM3. Sixwordsareusedforeach entry. Thefirstword(setidentification) issetnegative andthesixthwordof eachentry issettozero. GERM2isopened andtheheader record isskipped. The following stepsoccurforeachrecord onGE_H2. I.The3-word header isread. /GPTAI/ (seesection 2.5)issearched foramatch. If nomatchisfound, therecord isskipped andtheprocess isrepeated. Ifanend-of- fileisencountered, step(3)isexecuted. Ifamatch isfound, atestonelement typeismade. Ifaone-dimensional element, therecord isskipped andtheprocess repeated. Otherwise, step(2)isexecuted. 2.Anentryofthecurrent element typeisread. Alinear search through thePLOAD2 dataincoreismadetofindamatch onelement identification (3rdwordofeach PLOAD2 entry). Ifnomatchisfound, thenextentry isread. Foreachmatchwhich isfound, thegrididentification numbers which connect theelement arestored 4.25-2\nDFUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3) inthecorresponding PLOAD2 entry andthefirst word ofthePLOAD2 entry isset positive. Whenalldataforthecurrent element typehasbeenread, areturn to step(1)ismade. 3.Apassthrough eachentry inthePLOAD2 dataismade. Foreachentry forwhich thefirst word isnegative, anerror n_ssageisqueued andtheNOG_flagturned on. Uponcon_letion ofthepass, PEXIT iscalled iftheNOGO flagwasturned on. Otherwise step (4)isexecuted. 4.LOCATE iscalled toposition GEOM2 toPLOAD data. Ifnoneexists, step(5)is executed. Otherwise, thePLOAD dataisreadintocorefollowing thePLOAD2 data. Thecombined listissorted bySORTonsetidentification nu_er. 5.Thedataincoreiswritten asonelogical record onSCR2. Areturn toGP3isgiven. Allocation ofcorestorage inGP3C isasfollows: NPLD2 BUFIBefore conversion PLOAD2 setID Scale factor Element ID 0 Sameformat asIst entry GINBbufferC[_MMI_N/GP3COR/Z( l) l Sixwords per p PLOAD2 card ILast NPLD2PLOAD2 entry BUFIAfter conversion +PLOAD2 orPLOAD set!D Scale factor Gridpoint ID1 Grid point ID2 Gridpoint ID3 Grid point ID4orO Sameformat asIstentry GINObuffer;ixwords )erentry 4.25-3\n4.25.8.3 I. 2. 3. 4. NTYPES Note:MODULE FUNCTIONAL DESCRIPTIONS Subroutine: GP3A Entry Point: GP3A Purpose: Toassemble toStatic Loads Table (SLT). Calling Sequence: CALLGP3A Method: GP3Aassembles theSLTbymaking twopasses ontheloadcards (FORCEi, M_MENTi, etc). Onthefirst passeachofthecards isreadfromGERM3, (orSCR2forPLBAD data), unique setidentifications areextracted andsaved incore, allexternal point identifcations areconverted tointernal indices byperforming abinary search intheEQEXIN table, thedataarewritten onSCRI, andpointer tables areaccumulated. These tables areasfollows: STATUS Pointer inLISTtable tofirst entry ofcardtype Pointer inLISTtable tolastentry ofcard type2words/entry L_stEntrylentry per cardtype entry =(-l,-l)ifcardtypenotpresent 4.25-4\nFUNCTIONAL MODULE GP3(GEOMETRY PROCESSOR -PHASE 3) NEQX ILIST NLIST ISET BUF2 BUFIC_IM_N/GP3CgR/Z(1) External point ID Internal index LoadsetID Pointer todata inset No.ofdatawords inset SetID2 SetIDl GINObuffer GINObuffer2words/entry 3words/entry ILastentryintable ilword/entryEQEXIN Table (lentry per point inmodel) LISTTable (lentry perset t)ercardtype) SetLIST (lentry perset percardtype) Note: SetIDsarestored backward incore. ISET-I torecord entry, etc.ISETpoints tofirst entry, 4.25-5\nMODULE FUNCTIONAL DESCRIPTIONS Attheendofthefirstpass,theLISTtableismoved tothebeginning ofopencore. Thesetlistissorted, andduplicate setidentifications arediscarded. Theresulting listisstored immediately following theLISTtable. Ifalldatafortheloadcards willfitintheremaining core,thisdataisreadfromSCRI. ILIST=I NLIST ISET ITABL=NSET BUFIfollows: COMM_NIGP3C_RIZ(I ) SetID Pointer todata inset No.ofdata words inset SetID1 SetID n Loaddata GINO buffer3words/entry ILastentry Iword/entry }Last entryCore storage isas LIST Table SetLIST 4.25-6\n4.25.8.4 I. 2. o 4.FUNCTIONAL MODULE GP3(GEOMETRYPROCESSOR-PHASE 3) TheSETlistiswritten intheheader record ontheSLT. Foreach setIDinthe SETlist, theLISTtable issearchedforamatch. When found, thepointer tothedataisfetched. Thedataaresorted ontheapplied point (except GRAVand PLEAD data) andthedatawritten ontheSLT.Asaresult, eachlogical record of theSLTcontains alldataforoneset. Finally, ifcombination loadcards are present, theyarecopied fromGEgM3 tothelastrecord oftheSLT. Ifcorewill nothold theentire loaddata, thelogic issimilar toabove except thatSCRI ispassed onceforeachsetandonlyuatabelonging toasingle card typewithin asetarereadintocore. Subroutine Name: GP3B Entry Point: GP3B Purpose: Toassemble thegridpoint related temperature dataandstore ontheSCRATCHI file. Calling Sequence: CALLGP3B Method: EQEXIN isread intocore. Alistofdefault temperatures (TEMPD cards ifpresent) isreadfromGEgM3. Thetemperature data(TEMP cards) arereadto determinethenumber oftemperature sets, thesetidentifications andthenumber ofentries ineach temperature set. Foreachtemperature set,athree-word entry iswritten intheheader record oftheSCRATCHI: Word l=SetID Word 2=default temperature (real) or-l(integer) Word3=record number inSCRATCHI oftemperature dataforthesetorzeroifonly default temperature isdefined. GE(IM3 isbackspaced onelogical record. Thetemperature dataarere-read. Vhenall temperature dataforasethavebeenreadintocore, thedataaresorted onpoint identi- fication andwritten asonelogical record onSCRATCHI. Thisprocess isrepeated for each temperature set. Allocation ofcorestorage forGP3Cisasfollows: 4.25-7 (9/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS ITEMPD ITABL+I Nl BUF2 BUFIC_MMONIGP3C_RIZ(1) External point ID Internal index Temperature SetID Default Temperature Number ofdata words insetl Point ID Temperature GINO buffer GINBbufferi2words/entry –I 2words/entry I1word/entry 2words/entryEQEXIN Table (lentry Der point inmodel) Default temperature 1entryperset Definition ofdata intemperature sets Temperature data foroneset 4.25-8\n4.25.8.5 I. 2. . 4.MODULE FUNCTIONAL DESCRIPTIONS Subroutine Name: GP3D Entry Point: GP3D Purpose: Toprocess TEMPPI, TEMPP2, TEMPP3, andTEMPRB dataandassemble theelement temperature table referred toastheGPTT. Calling Sequence: CALLGP3D Method: TEMPPI, TEMPP2, TEMPP3, andTEMPRB carddataarereadfromGERM3, converted for GP3D’s useandwritten onSCRATCH2. Thegridpoint temperature dataheader isthenread fromSCRATCHI (ascreated inGP3B). Asimilar header record isthenconstructed from theunion ofthegridpoint temperature setdataandtheelement temperature setdata. Thisiswritten onGPTT. Foreachtemperature set,forwhich there isother thana default temperature available, arecord isthenwritten ontheGPTTcontaining specific element temperature databyelement typeandelement identification. Allocation of corestorage forGP3Disasfollows: Element temperature setlist data (2words/entry) Gridpoint temperature set listdata (3words/entry) Gridpoint dataforcurrent temperature set(2words/entry) TEMPPI, TEMPP2, TEMPP3 datafor current temperature set (7/words/entry) TEMPRB dataforcurrent setID (15words/entry) :unused GIN_buffer GIN_bufferZ(1) Z(NL!ST) Z(IGPTT) Z(NGPTT) Z(IGPT) Z(NGPT) Z(IETI) Z(NETI) Z(IET2) Z(NET2) Z(BUF2) Z(BUFI) 4.25-8a (9/I/70)\nFUNCTIONAL MODULEGP3(GEOMETRYPROCESSOR-PHASE3) 4.25.9Design Requirements 4.25.9.1 Allocation ofCore Storage Thecorestorage mapspresented inthemethod sections ofGP3A, GP3BandGP3C provide detailed storage requirements. Asummary ispresented here. GP3C: Maximum requirement =6*(number ofPLEAD2 +number ofPLEAD cards) +one GIN_buffer. GP3A: LetNPTS=number ofgrid+number ofscalar points andNSETS =(number ofload sets) (number ofcardtypes perloadset)andSYSBUF =oneGIN_buffer. Thenmaximum storage requirement equals MAX((2NPTS+4NSETS+2SYSBUF), (4*NSETS +MAX (number ofwords foronesetofonecardtype) +SYSBUF))o GP3B: Seestorage map. 4.25.9.2 Environment I.Block Data Theblock dataprogram GP3BD initializes /GP3C_M/withGIN_filenames, datadefining theloadcards andother miscellaneous data. Itmustberesident incorewhen GP3is executed. 2.General /GPTAI/isusedbyGP3Candmust becoreresident when GP3isexecuted. Opencore is defined by/GP3C_R/.Thenormal overlay istoinclude GP3BD, GP3,GP3C, GP3A, GP3B in onesegment. GP3usestwoscratch files. 4.25.10 Diagnostic Messages Thefollowing messages maybeissued byGP3: 2008, 2009, 2015, 3008, 4010, 4011, 4012. SeeSection 6oftheUser’s Manual fordetails. 4.25-9 (IIII170) I"},"title":"Programmer's Manual P40"},"/docs/programmers/programmers_manual_041/":{"data":{"i1-16#MODULEFLINCTIONAL DESCRIPTIONS\nlogicalrecordconsistsofpairsof(-l,elementpointer).\nnumberofelementsconnectedtothepoint.Example:\nC_MMON/TAA2/Z(1)\n1\nIECPTO\n/\ncodeforelement\ntype (l=BAR)6\n)I23\nI\nr/\u0026ndash;1i 0I\n15l 36\nI/8o3I\nI\n1I 16\n1I 0\nIThenumber ofpairs equals the\nGPC\nStorage forthe\n3element pointers\nconnected togridpoint l\nStcrage forthe\n2element pointers\nconnected togridpoint 2\n)osition ofelement inECTrecord\nSkeleton ECPTdataiswritten onascratch file:\n-l\nI\n11 0\nI\n-l\n15, 36\nI\n-l\nI\n3t 80\nI\n-I\nI1= 16":"MODULE FUNCTIONAL DESCRIPTIONS GP3 _ENTER RDTRL)FReadTrailer]zLon_E_M3/\n_Yes Build PLEAD DataonSCR2RDTRL Purged? No k_AD2 Cards _nGERM2? \\ Yes GP3C [Assemble SLT]\\ _ onGPTT _RDTRL \u003eRead Trailer] JLonSLT / Yes Norprocess TEI_P/LandTEM_DData] / GP3B pr°cessTEMtPI'2'3]4JlandTE,PPB Data andAssemble GP3D \u003e/LGPTT ’ Figure I.Flowchart formodule GP3 4.25-I0 (911170)\nFUNCTIONAL MODULE TAI(TABLEASSEMBLER) 4.26 FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) 4.26.1 EntrXPoint: TAI 4.26.2 TAIprocesseselement connection data,elementproperty dataandgeometry.Thesedataare merged intwodifferent sorts forefficiency inlater processing. TheElement Sumary Table contains, foreachelement, connection, property andgeometry data.TheElementConnection andProperties Table contains, foreachgridorscalar point inthemodel, connection, property andgeometry dataforallelements connected tothepoint. Elementtemperature dataarealso included forbothdatablocks where applicable. Additionally, general elements areprocessed andtheGEI(General Element Input) datablock isassembled. 4.26.3 DMAPCallin) Sequence TAI, ECT,EFT,BGPDT,SIL,GPTT,CSTM/EST,GEI,ECPT,GPCT/V,N,LUSET/V,N,NSIL/V,N,N_SIMP /C,N,O/V,N,N_GENL/V,N,GENEL $ 4.26.4 Input DataBlocks ECT -Element Connection Table. EPT -Element Properties Table. BGPDT -Basic GridPoint Definition Table. SIL -Scalar Index List. GPTT -GridPoint Temperature Table. CSTM °Coordinate System Transformation Matrices. Note: TheECT,BGPDT andSILdatablocks maynotbepurged. 4.26.5 Output DataBlocks EST -Element Summary Table. GEI -General Element Input. ECPT -Element Connection andProperties Table. GPCT -GridPoint Connection Table. Not____e: Nooutput datablock maybepurged. 4.26-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.26.6 Parameters LUSET NSIL N_SIMPInput-integer-no default. Output-integer-no default. inthemodel. NOGENL - GENEL - 4.26.7 MethodDegrees offreedom intheg-displacement set. Number ofgridpoints plusnumber ofscalar points Output-integer-no default. Number ofelements inthemodel (exclusive of general elements) or-Iifnoelements. Output-integer-no default. Number ofgeneral elements inthemodelor-I ifnogeneral elements. Output-integer-no default. GENEL=-NOGENL. 4.26.7.1 General Comments Thepurpose oftheTableAssembler Module istocombine alloftheelement dataina convenient formforthegeneration ofthestructural matrices (ECPT) andforthecalculation ofthe element stresses andforces (EST), Thecomplete description ofanelement requires: (I)the locations oftheconnected gridpoints, (2)necessary orientation dataandendconditions, (3)element properties, (4)amaterial reference, (5)transformations fromthebasicsystem totheglobal coordinate system and(6)element temperature. Scalar elements require no geometric ormaterial data. General elements mayrequire geometric data. Fourdatablocks areformed inthismodule. TheECPTdatablockisusedinstructural matrix generation. Itcontains allelement dataforeachgridpointorscalar pointinthe orderofthesequenced gridpointnumbers (internal gridpoint indices). TheESTdatablock contains element dataingroups ofelement typeandwithsequential element I.D.numbers within eachgroup. Itisusedtocalculate element stresses andforces inaconvenient order foroutput. TheGEldatablockcentains ti_egeneral element flexibility andsupport matrices. TheGPCTdatablockisusedtoallocate storage inthestructural matrix assemblers. Thereason forassembling theECPTandESTtables rather thangenerating functions such aselement stiffness matrices andstress functions istheexpected sizeoftheproblems. The computing timeusedtorecalculate certain dataisexpected tobecompensated forbythetime savings thatresult fromsorting andmerging smaller tables. 4.26-2\nFUNCTIONAL MODULE TAI(TABLE ASSEMBLER) Subroutine TAIisthemaincontrol program forthemodule. Itexecutes eachofthe major routines oftheTable Assembler (TAIA toassemble theEST,TAIB toassemble theECPT andGPCT, andTAICtoassemble theGEl)depending onthestatus ofthedatablocks anddata fortheproblem. Aflowchart ofTAIisincluded asFigure I. 4.26.7.2 TAIA Assembly oftheElement Summary Table isperformed intwosteps. Forthefirst step, theEPTisreadintocoreoneproperty typeatatime. TheECTisreadoneelement atatime. Foreachelement thereferenced property dataarefound byperforming abinary search inthe EPTincore. TheECTandEPTdataarewritten onSCRI, ascratch file, oneelement atatime. onelogical record perelement type. Toinitiate thesecond step, theBGPDT andSILdatablocks arereadintocore. Ifa temperature setisselected, theappropriate temperature datafromtheGPTTarereadintocore. Data fromSCRIarereadoneelement atatime. Internal indices forthegridpoints areused aspointers intotheBGPDT andSILtables. Thetemperature oftheelement isextracted from the GPTT,data block. Eachtemperature isfound byperforming abinary search intheGPTTwiththe element identification number. Iftheentry isnotfound intheGPTT, thedefault temperature for thesetissubstituted. Theinternal indices arenowreplaced with corresponding scalar index values. Alinecomprising ECT,EPT,BGPDT andGPTTdatafortheelement iswritten ontheEST. Each logical record oftheESTcomprises alldataofoneelement type. 4.26-3 (llll/70)\nMODULEFUNCTIONAL DESCRIPTIONS Allocation ofcorestorageduringthesecondstepisasfollows: C_MM_N/TAAI/Z(1) L_CBGP=I Coordinate system ID NBGP NBGP+I ITMP BUF2 BUFfx Y z SILl SIL2 Element typeandN Element ID Temperature data GINBbuffer GINBbuffer4words/entry }1word/entry IN+Iwords/entryBGPDT table oneentry perpoint inproblem SILtable oneentry perpoint inproblem GPTTtable oneentry per defined element 4.26.7.3 TAIB TheECPTdata block isassembled inTAIB. Eachlogical record intheECPT corresnonds toa gridorscalar point inthemodel. Foreachpoint, thedata fareachelement connected tothe point arelisted. Thedataforeach element areidentical totheESTdata. Each setofelement datawill belisted intheECPT\"n\"times, where “n\"isthenumber ofgridpoints connected bythe element. Asample oftheECPTisgiven inTable I.Thelogical phases oftheoperation areas follows: Alistisformed incore giving therelative locations oftheelements intheECTdata intheorder which theywillbeplaced intheECPTdatablock. Storage isallocated by 4.26-4 (ll/I/70)\nFUNCTIONAL MODULETAI(TABLE ASSEMBLER) forming theGPC(Grid Point Counter) andthenreplacing theGPCbyarunning sumof elements connected topoints. Asample is: IMplied GPC GPCS GridPoint Nun_er of SumofPrevious internal index Connected Elements Elements (1) 5 0 (2) 3 5 (3) 1 8 (4) 2 9 (5) 6 ll 17 TheGPCisformed asfollows. Anareaofcoreequal tothenumber ofgridandscalar points ofthemodel issettozero. TheECTisreadoneelement atatime. Thestorage location corresponding totheinternal index ofeach referenced grid point isincremented by one. Wheneach element intheECThasbeenprocessed, arunning sumofthecoretable is formed. Thecontents ofeachword intheGPCnowprovide apointer tothefirst storage location where asecond pointer totheelement datawillbestored. Since thetotal nun_er ofconnected elements mayexceed available corestorage, spill logic isprovided. Abandofentries inthe GPCisdetermined. TheECTisreadoneelement atatime. Theposition ofeachelement of agiven element typeisdetermined bysumming thenun_er ofwords foreachentry forthe element (i.e. ifm=number ofwords perECTentry, thentheposition oftheelement inthe ECTrecord =(i-l)*m where i=entry number intheECTrecord). Foreachpoint referenced by theelement (which isinthebandcurrently being processed), thecontents oftheassociated position intheGPCisfetched. Theelement position anditstype arestored attheindicated locations. Thelocation intheGPCisincremented byone.WhenapassoftheECTiscomplete, the skeleton ECPT iswritten, onelogical record perpoint intheband ofthecurrent pass. Each 4.26-5\nMODULEFLINCTIONAL DESCRIPTIONS logicalrecordconsistsofpairsof(-l,elementpointer). numberofelementsconnectedtothepoint.Example: C_MMON/TAA2/Z(1) 1 IECPTO / codeforelement type (l=BAR)6 )I23 I r/–1i 0I 15l 36 I/8o3I I 1I 16 1I 0 IThenumber ofpairs equals the GPC Storage forthe 3element pointers connected togridpoint l Stcrage forthe 2element pointers connected togridpoint 2 )osition ofelement inECTrecord Skeleton ECPTdataiswritten onascratch file: -l I 11 0 I -l 15, 36 I -l I 3t 80 I -I I1= 16-I I1_ 0 ILogical record l (allelements connected togridpoint l) Logical record 2 (data forgridp:)int 2) 4.26-6\nFUNCTIONAL _DULETAI(TABLEASSEMBLER) WhenallentriesoftheGPChavebeenprocessed, theskeletonECPTiscomplete. Anareaofcoreequaltotwowordsperelementtypeissettozero.TheECTisreadintocore following theabove table until either theECTisexhausted orcoreisfilled. Apointer to thebeginning ofdataforeachelement type isstored inthetable. Theskeleton ECPTis nowreadonepairofwords atatime. Ifthedatatowhich theelement pointer points are currently incore, theyarewritten outonasecond scratch file. Thefirst word oftheentry contains thenumber ofwords intheECTdata. Ifthedataarenotincore, thepair (-l, element pointer) iswritten onthesecond scratch file. This process isrepeated until the skeleton hasbeenexhausted. IfalltheECTisincore, thenewskeleton ECPTiscomplete. Otherwise, thefiles foroldandnewskeleton ECPTareswitched, andtheprocess continues by reading moreoftheECTdataintocore. Storage allocation atthispoint follows: N21CCMM_N/TAA2/Z(1) Pointer toECTdataforIstelement type _2 J SumofECTwords readonprevious passes ECTdataforIstelement type ECTdatafor2ndelement typewords/entry oneentry per element type 4.26-7\nMODULEFUNCTIONAL DESCRIPTIONS TheremainderoftheECPTassemblyisverysimilartotheESTconstruction. The principaldifference isthattheentireEPTisheldincore.Apointertablesimilartothe ECTtableisformed(twoentriesperelementtype).TheEPTisreadintocore,andthefirst positionofeachEPTtypeisstoredinthetablealongwiththenumberofEPTentriesofthat type.IftheBGPDT,SILandGPTTcanbeheldincorewiththeEPT,theECPTisassembled inonepass.Otherwise, twopassesaremade.TheskeletonECPTisreadoneentryatatime. Foreachelement,thepropertydataareattachedbyperforming abinarysearchintheassociated propertytableincore.Ifonepass,theBGPDT,SILandGPTTdataareattachedasinTAIA. OtherisetheECTandEPTdataarewrittenonascratchfile,andasecondpassismadetoattach theBGPDT,SILandGPTTdata.Table1containssampleECPTcontents. DuringthefinalpassoftheECPTassembly,theGPCTisconstructed. TheGPCTis comprisedofonelogicalrecordperpoint(sameasECPT).Eachlogicalrecordconsistsofthe pivotpointandallotherpointsconnectedtothepivotbymeansofelementconnections. 4.26-8\nFUNCTIONALMODULE TAI(TABLE ASSEMBLER) Table I.Sample ECPTDataContents. Reference Grid Point First Scalar Index (Pivot Point) IstElement Type Connected Grid Point First Scalar Indices (From ECTandSIL) Anisotropic Angle(From ECT) Material Number (From EPT)235 9(Triangular membrane) 625 235 535 0.0 IstElement Properties (From EPT) Location andOrientation DataforGrid Points (From BGPDT) E!e__nt Temperature (FromGPTT) 2ndElement Type0.5 0.0 l.O 5,I0.0, I00.0,0.05,If.O, lO0.O, 0.0 O,235.0, 50.0, 25.0 15.5 34(Bar) etc. LastElement Type (forpoint235) l(Rod) EndofLogical Record (newgridpoint) Reference GridPoint First Scalar Index (Pivot Point)etc. etc.241 4.26-9\nMODULEFUNCTIONAL DESCRIPTIONS 4.26.7.3TAIC TheGeneralElementflexibility andsupportmatricesareassembledinTALC.Thedata, givenintheECTdatablock,consistofthefollowingsectionsforeachGeneralElement: I.Alistoftheindependent degreesoffreedom,ui,intermsofgridpointsand components and/orscalarpoints. 2.Alistofsupporting degreesoffreedom,ud,givenbygridandscalarpoints (Maybenull). 3.Aflexibility matrix[Z]withrowsandcolumnscorresponding tothelistofgiven uipoints. 4.Asupportmatrix[S]withrov,scorresponding totheuipointsandcolumns corresponding totheudpoints.(Maybenull). ThetasksofTAICareto(1)convertthelistsofuiandudtoscalarindicesandsort thembyincreasing scalarindex,(2)rearrangethematricestocorrespond tothesortedlists ofuianduddegreesoffreedom,and(3)onuseroptioncalculatethesupportmatrixfromgrid pointgeometry. Thesetasksareaccomplished asfollows: I.Foreachsetofcoordinates (uiandud)oflengthn,a4xntableisformedwhere thefourentriescorresponding toeachdegreeoffreedomare: a)Thepositionasgiven(l,2,3…n) b)Theinternalposition(zeroinitially) c)ThegridorscalarpointI.D.(Internalindex) d)Thegridpointcomponent(l=x,2=y,etc) 2.Thelistissorted onthethird andfourth position. Ifapoint I.D.inthethird position isduplicated, theduplicates aresorted onthecomponents inthefourth position. Thelistnowcorresponds tothedesired order ofircreasing scalar indices. 3.TheSILdatablock isread, andeachofthepoints inthelist isconverted toits SILvalue. (Theposition ofaSILnumber isitsinternal point index.) TheSIL value andthecomponent cidetermine thescalar index, Ni,ofadegree offreedom by: 4.26-I0\nFUNCTIONAL HODULETA](TABLEASSEMBLER) Ni=SIL+(ci-l) {l) forgridpoints and forscalar points. . 5. 6.Ni=SIL (2) Thelistofscalar indices iswritten ontheGEIdatablock file. Inordertorearrange thematrices tocorrespond totheproper sequence ofdegrees offreedom theabove listismodified asfollows: a)Theinternal position nu_er isplaced inthesecond position ofeachentry in thelist. Thefirst entry usesl,thesecond, 2,etc. b)Thelistissorted again toreturn theoriginal orderasgiven ontheinput card images. Thefirst position ofeachentry supplies thisorder. Theinternal position ofaterminamatrix isnowgiven bythesecondnumbers ineachentry. Steps (1)through (4)arerepeated forboththeuiandudsets. The[Z]and[S]matrices arerearranged according tothesorted lists ofdegrees offreedom. Therowandcolumn numbers areconverted bythealgorithm: a)ForatermofZij,where iandjaretherowandcolumn asgiven bythematrix order,theposition ioftheuiirternal number listgives 4,thenew column nu_er. b)ForatermofSij,where iandjaretheexternal rowandcolumn numbers, the rownumber iisconverted using theuilist. Thecolumn number jusesthe udlist. Ifamatrix issmall enough tofitincore, thenewrowandcolumn numbers areusedtoplace theterminitscorrect position incore. Ifthematrix will belarger thancore, thenewrowandcolumn indices andtheterm itself arewritten onascratch file. Whenallterms areprocessed, thefileis sorted toformasequenced matrix. Theterms ofthematrix arewritten on theGElfileinfullmatrix form. 4.26-II\nMODULE FUNCTIONAL DESCRIPTIONS 4.26.7.4 TAICA The[S]matrix must begenerated fftheuser inputs alist ofsixudpoints anddoes notsupply anIS]matrix. This isaccomplished insubroutine TAICA asfollows: TheBGPDT andCSTM data areread into core. (SIL isalready incore). Asixbysixmatrix [Do] isformed, where each rowcorresponds toaudscalar index (j). IDol isasixbysixmatrix which transforms thethree translations andthree rotations inthebasic coordinate system tothesixrigid body uddegrees offreedom: lu ,}=foolxo Yo zo 0x 0z basic(3) Thesteps forgeneration ofeach rowof[D]areasfollows: I.Xj,Yj,ZjtheBGPDT location vector forthegrid point containing scalar point jis found. 2.[Tj] the3x3global-to-basic transformation matrix forthegrid point containing j isfetched using subroutine MAT. 3.Ifscalar jisatranslation, define: [Ej]II 0 0 0 Zj -YjiI0 1 0 -Zj 0 Xj 0 0 l Yj -Xj 0(4) Thecolumn of[Tj] corresponding tothedegree offreedom jisdefined asthe rowvectorIVj} T.Therowvector of[Do]corresponding topoint jis: 4.26-I?\nFUNCTIONAL MODULE TAI(TABLE ASSEMBLER) {Doj}T:{Vj}T[Ej]. (5) 4.Ifscalar jisarotation, thecolumn of[Tj]corresponding tothedegree of freedom jisdefined astherowvector {Vj}T.Therowvector of[Do]corresponding to point jis: {Doj}T T}. (6) ={00O:Vj When all6rows[DO]havebeengenerated, thematrix isinverted: [Hdo]:[Do]’l . (7) [Hdo]transforms theuddisplacements torigid bodymotions about thebasic coordinate system, i.e.: IXoYo Zo I8x°Byo 8zo=[Hdo]{ud} (8) basic Ifthematrix isill-conditioned, afatal error exists. The[S]matrix maynowbecalculated arowatatime. Thelistofuipoints, (si), is readoneatatime, andthe[S]matrix isformed arowatatime. Calleach row{Si}T. Thesteps forgeneration ofeach rowareasfollows: I.Using thebasic coordinates Xi,Yi’Ziforthegridpoint corresponding toscalar si, theglobal-to-basic transformation matrix ITi]isfetched. 2.Thecolumn ofITi]corresponding tothescalar coordinate ofuiisdefined astherow vector {Vi}T. 4.26-13\nMODULE FUNCTIONAL DESCRIPTIONS 3.Ifuiisatranslation, weform II000Zi[E] = O 10-Zi0 00 lYi-Xi and 4.Ifuiisarotation: s=iooo:vTl[,o_] 4.26.8 Subroutines 4.26.8.1 Subroutine Name: TAI I.Entry Point: TAI 2.Purpose: Module driver. 3.Calling Sequence: CALLTAI 4.26.8.2 Subroutine Name: TAIA I.Entry Point: TAIA 2.Purpose: Toassemble theEST. 3.Calling Sequence: CALLTAIA 4.26.8.3 Subroutine Name: TAIB I.Entry Point: TAIB 2.Purpose: Toassemble theECPTandGPCT. 3.Calling Sequence: CALLTAIB 4.26.8.4 Subroutine Name: TAIC I.Entry Point: TAICvi1Xi 0(9) (lO) (ll) 4.26-14\n2. 3. 4.26.8.5 I. 2. 3. 4.26.9 2.26.9.1 TAIA. TAIB.FUNCTIONAL MODULE TAI(TABLE ASSEMBLER) Purpose: Toassemble theGEI. Calling Sequence: CALL TAIC Subroutine Name: TAICA Entry Point: TAICA Purpose: Tocalculate thegeneral element support matrix [S]. Calling Sequence: CALL TAICA Design Requirements Allocation ofCore Storage Step (1): Maximum core storage equals allproperty data foroneelement type plus three GINB buffers. Step (2): Maximum core storage equals 5*(number ofgrid andscalar points in model) plus 2*(number ofgrid point temperatures inselected set) plus twoGIN_ buffers. Theinitial steps ofTAIB areopen ended. Thefinal assembly oftheECPT requires that allEPTdata beheld incore atonetime. Atanother time thesame storage requirement asTAIA exists plus additional storage tohold alist ofthemaximum number ofpoints connected toanyonepoint bymeans ofelement connections. 4.26-15 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS TAIC.Themaximum storage requirement equals 5*(number ofgridandscalar points inthemodel) plustheCSTMtableplus4*(number ofui+number ofudpoints) plusthreeGINQbuffers. 4.26.9.2 Environment TAIisdesigned toalloweachofthemajor phases ofthemodule tobeinaseparate overlay segment. Opencoreforeachisdefined asfollows: TAIA: /TAAI/ TAIB: /TAA2/ TAIC: /TACl/ GIN_filenamesandDMAPparameters arecommunicated through blankC_MM@N. Noblock dataprogram isused. Communication between TAICandTAICAoccurs through /TAICAX/ and/TACI/. 4.26.10 Diagnostic Messages Thefollowing messages maybeissued byTAI: 2010,2011,2013,2014,2015,2044,2045,2063,2082 4.26-16\nFUNCTIONAL MODULE TAI(TABLE ASSEMBLER) TAI ENTER + Initialize IGINgFile Names + -IReadTrailerqLonGCPT ] + SetforFlag I Approach \u003cRD_TRL \u003e”_-Read Trailer7 -L oRECT __ + Setflag Iforgeneral elements Approach FlagForce Displacement TAIA _{ AssembleEsT ] Assemble ] TAIB ECPT,GPCT General \u003clement _n TAIC=[Assemble ] GEl Figure l(a).SetF1ag forEach Super Element Type Test forAny Super Elements Absent TAIA Test General Element Flag TAIC Flowchart formodule TAIPresent _\u003e Assemble 1 EST Off Assemble ] GEl 4.26-17\nMODULE FUNCTIONAL DESCRIPTIONS FAssembleEsT ] _Initial I TAIA \u003e\" .[Assemble] ““LECPT ] TAIB \u003e” FAssemble \\C.-_Portion ofSEST] TAID / J _Absent _o-_tanerj IPresent FAssemble ,,PortionofSEST] TAID 1 Absent FAssemble Iwresen |Portion ,v ,-“LofSEST Absent TPresent FAssemble] _Portion | ,‘L0f SEST] TAIF 1 I_FAssemble 7 \u003c TAIG _LFinalEST] Figure l(b). Flowchart formodule TAI 4.26-18\nFUNCTIONAL MODULE SI_I (STRUCTURAL MATRIX ASSEMBLER -PHASE I) 4.27 4.27.1 4.27.2FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l) Entry Point: SMAI Purpose •KxTogeneratethestiffnessmatrix exclusive ofgeneral elements [gg], thestructural damping matrix,[K_gl, andtheGridPoint Singularity Table, GPST. 4.27.3 DMAPCalling Sequence SMAI CSTM,MPT,ECPT,GPCT,DIT/KGGX,K4GG,GPST/V,N,NOGENEL/V,N,NOK4GG $ 4.27.4 Input DataBlocks CSTM MPT ECPT GPCT UII 4.27.5Notes: KGGX K4GG GPST Notes:-Coordinate System Transformation Matrices. -Material Properties Table. -Element Connection andProperties Table. -GridPoint Connection Table. -Direct Input Tables. I.TheCSTMmaybepurged. 2.TheECPTandtheGPCTcannot bepurged, orelse afatal error willoccur. 3.Ifsomeelement references amaterial property, theMPTcannot bepurged. 4.Ifsomematerial property istemperature dependent, DITcannot bepurged. Output DataBlocks -Partition ofstiffness matrix exclusive ofgeneral elements -gset. -Partitionofstructural damping matrix -gset. -GridPoint Singularity Table. I.Neither KGGXorGPSTmaybepre-purged. 2.IfK4GG ispre-purged, K4GGwillnotbegenerated. 3.IfN_GENL \u003e0(seebelow) theGPSTwill notbegenerated. 4.27.6 Parameters NOGENL Input-integer-no default value, i_OGENL isthenumber ofgeneral 4.27-I"},"title":"Programmer's Manual P41"},"/docs/programmers/programmers_manual_042/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS elements inthemodel, IfN_GENL \u003e0thenGPSTwillnotbegenerated. N_K4GG -Output-integer-no default value. IfK4GGhasbeenpre-purged oristhe zeromatrix, N_K4GG issetequal to-I.Otherwise NOK4GG isset=+I. 4.27.7 Method Matrix generation modules suchasSMAI,SI.2,DSMGIandPLA4allusetheECPT(or a variation thereof inthecaseofPLA4)anditscompanion datablock, theGPCT,asthebasic datablocks forgeneration ofstiffness andstructural damping matrices (SMAI), massand viscous damping matrices (SMA2), thedifferential stiffness matrix (DSMGI), andthenon- linear stiffness matrix (PLA4). Thecentral roleoftheECPTdatablockinthesemodules isdiscussed insection 1.8. Subroutine SMAIisthemodule driver. Itstasksare:tosetupGIN_buffers andmatrix control blocks fortheoutput matrices; todetermine iftheCSTMdatablockexists, and, ifitdoes,toreaditintoopencoreandcalltheinitialization routine PRETRD; tocall thematerial properties initialization routine PREMAT, where material property cardsand tables arereadintoopencore;toopenandposition allfilessothatinputdatablocks arereadytobereadandoutput datablocks arereadytobewritten; tocallsubroutine SMAIA, themodule “workhorse”, whichwillcreate theoutput datablocks. Uponreturn fromSMAIA, filesareclosed andtrailers arewritten. Subroutine descriptions forPRETRD andPREHAT canbefoundinsection 3.4.37 and3.4.36 respectively. Subroutine SMAIAconsists entirely ofaloopinwhich, during eachpassoftheloop,a record oftheGPCTandarecord oftheECPTareprocessed inacomplementary manner. Each passthrough thisprincipal loopcreates either oneorsixrows(orcolumns since[K_g].and [K_g]aresymmetric ofthestiffness matrix, KGGX,(andthestructural damping matrix, K4GG, ifcalled forintheDMAPcalling sequence). Onerowwillbegenerated ifthepivotpoint, thefirstwordofboththeGPCTrecord andtheECPTrecord, isascalar point; sixrowswill begenerated ifthepivotpointisagridpoint. Thelatter caseholdsinthemajority of cases. Theloopisterminated whenanend-of-file issensed onthefilecontaining theGPCT. Theloon, h_oin_k….hy—-’’.’’\"t*:m+ to….,:au theFirst twowords ofthecurrent GPCT record. Ifthesecond non-standard return from subroutine READ occurs, itimplies thecurrent pivot point hasnoelements connected toitsothat oneorsixnull rows must beoutput forthe 4.27-2\nFUNCTION#_ MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I) matrices. This non-standard return, itshould benoted, doesnotoccur inthemajority ofcases. Anor_l return fromREADimplies anormal paththrough theprincipal loop. Theremainder ofthe GPCTrecord isreadintocore, andapointer table isconstructed. Thispointer table relates thescalar index numbers oftheGPCTrecord, which arethecolumn indices ofthe(possible) non- zeroterms ofthegenerated matrices, tolocations incore inwhich thecorrespondinq submatrices will reside. Thepointer table isdefined recursively asfollows: Pl=l (I) Pi=Pi-l+q’i\u003el (2) where qis6ifthepoint (i-l) isagridpoint andqislifthepoint (i-l) isascalar point. Itisthendetermined ifallthesubmatrices corresponding tothecurrent pivot point canbeheld inopencore. Iftheycan, there isnoproblem. Iftheycannot, spill logic isprovided only ifthestructural damping matrix isnotcalled for. Rather thancompute all submatrices, store themonascratch file, retrieve themwhen computations havebeencompleted andsortthem, thefollowing approach wasadopted. Itisdetermined what themaximum number ofrowsthatcanbeheldincoreis:3,2orI.Theelement submatrices arecomputed in their respective routines (i.e. KR_D, KBAR) andpassed tothe\"insertion\" subroutine, SMAIB, which “inserts” intothecorrect opencorepositions only those rowswhich canbecontained. When theECPTrecord isexhausted, thelinkvector, LINK, (seediscussion below ofthe LINKvariable in/SMAICL/)issearched todetermine ifanystructural element entries inthe ECPTwere skipped because thecorresponding element subroutine didnotreside inthelink (element subroutine overlay segment) currently incore. Ifthere didexist suchanelement, theECPT fileisbackspaced andtheECPTrecord isreprocessed suchthatallelement sub- matrices notcomputed ontheprevious pass(es) oftheECPT record will becomputed. If (orwhen) theLINKarray isidentically zero, signifying thatallelement submatrices corresponding tothecurrent passoftheECPTrecord havebeen computed, theDETCK subroutine iscalled iftheinput parameter N_GENL _0. DETCK generates theGPSTbyexamining the “translational” and\"rotational\" diagonal 3X3submatrices ofthe6rowsoftheKGGXmatrix currently incore. Ifthetotal number ofrowstobecomputed (6orl)forthecurrent ECPT record isnotincoreduetospill problems, DETCK stores those elements ofthe3X3sub- 4.27-3\nMODULEFUNCTIONAL DESCRIPTIONS matricescurrentlyincoreinlocalvariablesandthenDrocessestheentire3x3submatrices on thelastpassoftheECPTrecord(seedefinitions ofthevariablesLR_WICandNR_WSCin/SMAICL/ below). After DETCK returns, thenumber ofrows incorearepacked ontotheKGGX(and, ifcalled for,theK4GG) datablock(s) using thestandard matrix packing routines BLDPK, ZBLPKI and BLDPKN. Ifthelastrowincore isnotequal tothetotal number ofrowstobecomputed, theECPTfileisbackspaced andtherecord isprocessed again, thistimethenextsetof 3,2orlrowsbeing output. Ifthelastrowincoreisequal tothetotal number of rowstobecomputed, theprocessing oftheECPTrecord iscomplete andatransfer ismade tothetopofthe\"GPCT andECPTprocessing\" looptoprocess thenextrecord oftheGPCTand ECPT. Theloopterminates when anend-of-file isencountered while attempting toreadthe GPCT. Upon looptermination, SMAIA returns toSMAI. Itshould benoted thatthemostdifficult logic oftheroutine involves theLINK vector andthespill logic. Theprogrammer isadvised thattheLINKvector logic will notbe usedonanyoftilecurrent hardware/software configurations because l)theroutine residing insegment (link) 2,KCONE, cannot beused inconjunction with anyother structural element routine and2)theaxisymmetrical element routines KTRIRG, KTRAPR andKT_RDR cannot (from a mathematical modeling point ofview) beused inconjunction with anyother structural element routines. Thespill logic isveryseldom entered since forthemajority ofcases thegeometry ofthemathematical model issuchthatthenumber ofwords inanyGPCT record -andhence the number of(potentially) non-zero columns inanysixrowsofthematrix -isgenerally quite small. Ahighupper limit forthenumber ofwords inanyGPCT record would be40. 4.27-4\nFUNCTIONAL MODULESI_l(STRUCTURAL HATRIXASSEMBLER -PHASE I) 4.27.7.1 Determining GridPoint Singularities inSubroutine DETCK Letthepivot point beagridpoint with scalar index pinthefollowing discussion. Let[Q]bethe\"translational\" or\"rotational\" 3x3symmetric submatrix along thediagonal ofthestiffness matrix, [K_g],_ i.e., therowsandcolumns ofthe\"translational\" [Q]matrix would correspond toscalar index numbers p,p+l,andp+2;andtherowsandcolumns ofthe “rotational” [Q]matrix would correspond toscalar index numbers p+3, D+4,andp+5. Thefollowing steps comprise thealgorithm fordetermining thepresence orabsence of gridpoint singularities. Thediscussion assumes [Q]isthe\"translational\" 3x3matrix butthe samealgorithm holds forthe\"rotational\" [Q]. I.Thematrix [Q]isscaled bythemagnitude ofthelargest term, Qmax: [B]:_ (3) Qmax\" ifthelargest term isnon-positive, thesingularity isoforder 3,andthescalar index numbers p,p+landp+2arewritten ontheGPST. 2.Thevector magnitudes of3xlcolumns (rows) arecalculated: i,_B 2 2 2 bz= +B+B, (4) 11 12 13 ,,%_B2 B2B2= + + , (5)b2 21 22 23 J 2 2 2b3=+B+B• (6) 31 32 33 3.Foreachbi=O,thesingularity order counter IgRDER isincreased byone. 4.Iftwobiarezero, theorder ofthesingularity istwo,andthescalar index numbers jandkcorresponding tothese tworowsof[B]arewritten ontheGPST. 4.27-5\nMODULEFUNCTIONAL DESCRIPTIONS 5.Ifonebiiszero,andiistherowsuchthatbi=O,define jandkastheother rows of[B]andcalculate: Bjj Bik_ m:det L_k,i BkkJ(7) R=iB_j+B_j)(B;k +B_k) (8) If\u003clO-2,theorder ofthesingularity is2andtheGPSTcontains thepaired scalar index values fori,j,kintheorder (1)(i,j) ifBkk\u003e0or(2)(i,k) ifBjj\u003eO. m If_lO-2,theorder ofthesingularity isoneandonlytheSILvalue foriiswritten ontheGPST. 6.Ifallb.\u003eO,wecalculate1 D=det[B] (9) IfD\u003e.5xlO-2x(blb2b3), there arenosingularities, andDETCK returns if[Q]isthe “rotational” matrix. If[Q]isthe\"translational\" matrix, the\"rotational\" [Q]is input tothealgorithm. 7.IfD\u003c.5xlO\"2x(blb2b3), oneormore singularities exist. Thefollowing terms are calculated: 22B2_mt=det , (I0) 32B3_ llB11m2=det , (II) 31 B3 11BI] m3:det_21 B2d, (12) 4.27-6 (8/I/72) j\nFUNCTIONAL MODULE SMAI(STRUCTURAL MATRIX ASSEMBLER -PHASE l) RI=(B +Bz)(B2+B2),2 23 32 33(13) r2=V(B_+B2)(B_ +2), 1 13 31 33(14) R,:V(B , 8.Determine i,j,ksuchthat:+B2)(B,+B ). 12 22(15) mim.mk (16) mi 9.If\u003c 10-2,thesingularity isoforder 2.Redefine i,j,ksuchthatBii\u003cBjj\u003cBkk- i TheSILvalues forthepaired indexes (j,k), (i,k) and(i,j) arewritten onGPSTonly ifthe corresponding Bisgreater thanzero. Forinstance ifBkkiszero, theSILpair(i,j) isnot written ontheGPST. mi lO.If_IO -2,(seestep8)thesingularity isoforder I.TheSILvalues arewritten i ontheGPST intheorder miisince –\u003e 10-2, (17) mj jif\u003eI0\"2 , (18) mk\u003e kif_k I0-2 (Ig) 4.27-7(3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 4.27.8 Subroutines Theutility routines PRETRD andPREMAT (orHMAT)arecalled inSMAIforinitialization purposes sothatthestructural element subroutines cancalltheentrypoints TRANSD ofPRETRD and MATofPREMAT (orHMAT)tofetchCoordinate System Transformation Matrices (CSTM) dataandmaterial properties datarespectively. GMMATD isusedbyelement routines asageneral matrix multiply routine, andINVERD isusedforinversion ofsmallin-core (order usually \u003c12)matrices. It should benotedthatallmatrices referenced inthestructural element subroutines arestored by_ rowsandaredouble precision. Seethesubroutine descriptions fortheseroutines inSection 3. Theprincipal meansofcommunicating anelement entryoftheECPTtoanelement stiffness matrix generation routine isthrough /SMAIET/. Thisfactisnotexplicitly stated ineachofthe descriptions oftheelement routines (e.g.KR_D)givenbelow. Sincemuchofthemathematics needed forgenerating: (I)element stiffness matrices (module SMAI); (2)element massanddamping matrices (module SMA2); (3)element contributions toloadvectors (module SSGI); (4)element stress (andforce) datarecovery (module SDR2); (5)element differential stiffness matrices (module DSMGI); (6)element stress (andforce) datarecovery fornon-linear elements inaPiecewise Linear Analysis RigidFormat problem (module PLA3); and(7)element stiffness matrices fornon-linear elements inaPiecewise Linear Analysis problem (module PLA4), issimilar orevenidentical, detailed mathematical algorithms aregrouped byelement inSection 4.87. Itshould benotedthatroutines DKI,DKK,DKM,DKINT,DKJ,DKEF,DK89,DKIOO,KFAC,DKJAB,DK219, DK211,R_MBDK,D4K,D5K,D6K andDMATRX areusedonly(directly orindirectly) bytheaxisymmetric shellelement routines KTRIRG, KTRAPR andKT_RDR. 4.27.8.1 Subroutine Name: SMAI I.EntryPoint: SMAI 2.Purpose: Seediscussion above. 3.Calling Sequence: CALLSMAI 4.27.8.2 Subroutine Name: SMAIA I.EntryPoint: SMAIA 4.27-8 (811/72)\nFUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I) 2. 3. 4.27.8.3Purpose: Seediscussionabove. Calling Sequence: CALLSMAIA Subroutine Name: SMAIB I.Entry Pointt SMAIB 2.Purpose:This routine, called bythemodule’s element stiffness matrix generation routines suchasKR@D, KBAR, etc., addsadouble precision 6x6orlxlmatrix, [Ke], to Kx 4the\"submatrix\" of[gg]or[Kgg] corresponding tothecurrent pivot point. 3.Calling Sequence: CALLSMAIB (KE,J,II,IFILE,DAMPC) KE Row-stored double precision 6x6orlxlmatrix tobeadded tothe submatrix incore -double precision -input. Kx K4J Thecolumn index ofthe[gg]or[gg]matrix which corresponds tothe first column ofthe[Ke]matrix -integer -input. II -IfIIisO,the[Ke]matrix is6x6.IfIIisgreater thanzero, itis rx rv4l therowindex oftheLKgg] orL\"ggJ matrix corresponding tothelxl matrix [Ke]tobeadded -integer -input. IFILE -GIN_file number ofthematrix incorebeing added to-KGGXorK4GG- integer -input. K4DAMPC -If[Ke]is6x6andthe[gg]matrix iscalled for,theinput matrix [Ke]is DAMPC before being added tothesubmatrix of[K;g] in multiplied by core. Block DataProgram Name: SMAIBD Entry Point: SMAIBD Purpose: Block dataprogram which setsGIN_file numbers, I/_parameters, andSMAI4.27.8.4 I. 2. overlay parameters. 3.Calling Sequence: None 4.27.8.5 Subroutine Name: DETCK I.Entry Point: DETCK 4.27-9\n4.27.8.6 I. 2. 3. 4.27.8.7 I. 2. 3. 4.27.8.8 I. 2. 3. 4.27.8.9 I. 2. 3.MODULE FUNCTIONAL DESCRIPTIONS 2.Purpose: This routine generates theGrid Point Singularity Table byexamining the 3x3\"translational\" and\"rotational\" diagonal submatrices oftheKGGXmatrix. This routine iscalled after thesubmatrix foreachpivot point hasbeencompleted. 3.Calling Sequence: CALLDETCK (JARG) IfJARG=O,thepivot point haselements connected toit. IfJARG=-l,thepivot point isascalar point andnoelements are JARG - connected toit. IfJARG =l,thepivot point isagridpoint andnoelements areconnected toit. Subroutine Name: KR_D Entry Point: KROD Purpose: Togenerate theelement stiffness matrix foraR_Delement. Calling Sequence: CALLKR_O Subroutine Name: KBAR\" Entry Point: KBAR Purpose: Togenerate theelement stiffness matrix foraBARelement. Calling Sequence: CALLKBAR Subroutine Name: KTUBE Entry Point: KTUBE Purpose: Togenerate theelement stiffness matrix foraTUBE element. Calling Sequence: CALL KTUBE Subroutine Name: KPANEL Entry Point: KPANEL Purpose: Togenerate theelement stiffness matrix foraSHEAR orTWIST panel element. Calling Sequence: CALLKPANEL (IARG) 4.27-I0\n4.27.8.10 I. 2. 3. 4.27.8.11FUNCTIONAL MBDULESHAI(STRUCTURAL HATRIXASSEMBLER -PHASE I) _IARG =4calls forgeneration ofthematrix forashear panel;IARG tIARG 5implies atwist panel. Subroutine Name: KTRMEM Entry Point: KTRMEM Purpose: Togenerate theelement stiffness matrix foraTRMEM element. Calling Sequence: CALL KTRMEM (1) I=_0-Docomplete triangular membrane. l-Return 3transformed 3x3matrices onlyforpivot point. KTRMEM iscalled byKQDMEM. Subroutine Name: KQDMEM I.Entry Point: KQDMEM 2.Purpose: Togenerate theelement stiffness matrix foraQDMEM element. 3,Calling Sequence: CALLKQDMEM Subroutine Name: KTRBSC I.Entry Point: KTRBSC 2.Purpose: Togenerate theelement stiffness matrix forabasic bending triangle element. 3.Calling Sequence: CALLKTRBSC (1) 0-Docomplete element computation forbasic bending triangle I=l-Formonlythe[KU]9x9matrix. 2-Formonlythe[KU]9x9matrix butsavethe[H]“land[S]matrices.4.27.8.12 4.27.8.13IfI=l, Subroutine Name: KTRPLT I.Entry Point: KTRPLT 2.Purpose: Togenerate theelement stiffness matrix foratriangular plate element. 3.Calling Sequence: CALL KTRPLT 4.27-II\n4.27.8.14 4.27.8.15MODULE FUNCTIONAL DESCRIPTIONS Subroutine Name: KQDPLT I.EntryPoint: KQDPLT 2.Purpose: Togenerate theelement stiffness matrix foraquadrilateral plateelement. 3.Calling Sequence: CALLKQDPLT Subroutine Name: KTRIQD I.EntryPoint: KTRIQD 2.Purpose: Togenerate theelement stiffness matrix foranyofthefollowing elements: TRIAl,TRIA2,QUADI,QUAD2. 3.Calling Sequence: CALLKTRIQD (IARG) I!-TRIAlelement\"TRIA2element. IARG= QUADIelement. 4QUAD2element. 4.27.8.16 Subroutine Name: KELAS I.EntryPoint: KELAS 2.Purpose: Togenerate stiffness matrix contributions fromtheELASI,ELAS2,ELAS3 and ELAS4elements andstructural damping matrix contributions fromtheELASI,ELAS2 and ELAS3elements. 3.Calling Sequence: CALLKELAS (IARG) IARG Indicates thetype ofelement being processed. Itcantake onthevalues 1,2,3 and4denoting theELASI,ELAS2,ELAS3 andELAS4 elements respectively. Integer-input. 4.27.8.17 Subroutine Name: KBEAM I.Entry Point: KBEAM 2.Purpose: Togenerate theelement stiffness matrix foraBEAM element. 3.Calling Sequence: CALL KBEAM 4.27-12\n4.27.8.18 4.27.8.19FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE I) Subroutine Names: KC(_NE, KC(_NEX I.Entry Point: KC_NE, KC_NEX 2.Purpose: Togenerate theelement stiffness matrix foraconical shell problem. 3.Calling Sequence: CALL KC_NE andCALLKC(_NEX Subroutine Name: KTRIRG I.Entry Point: KTRIRG 2.Purpose: Tocalculate anelement stiffness matrix foratriangular cross-section ring, TRIARG, element. 3.Calling Sequence: 4.27.8.20 Subroutine Name: KTRAPRCALL KTRIRG I.Entry Point: KTRAPR 2.Purpose: Tocalculate anelement stiffness matrix foratrapezodial cross-section ring, TRAPRG, element. 3.Calling Sequence: 4.27.8.21 Subroutine Name: KT_RDRCALLKTRAPR I.Entry Point: KT_RDR 2.Purpose: Tocalculate anelement stiffness matrix foratoroidal thinshell ring, T_RDRG,element. 3.Calling Sequence: CALLKT_RDR Function Name: DKI I.Entry Point: DKI 2.Purpose: Toevaluate integrals indouble precisionforthetriangular and trapezoidal cross-section rings insubroutines KTRIRG andKTRAPR. 3.Calling Sequence: DP=DKI(I,J,K,L,M,N,IP,IQ,R,Z)4.27.8.22 4.27-13 (8/I/72)\n4.27.8.23 I. 2. 3. 4.27.8.24 I. 2. 3. 4.27.8.25 l. 2.MODULE FUNCTIONAL DESCRIPTIONS I,J Thesubscripts ofRdefining twolines onthelimit ofintegration, integer-input. K,L Thesubscripts ofR,Zdefining another lineonthelimit ofintegration, integer-input. M,N -Thesubscripts ofR,Zdefining thefourth lineonthelimit of integration, integer-input. IP,IQ -Integers thatdefine thepower oftherandzvariables respectively, -input. R,Z -Vectors oftherandzcoordinates ofallpoints usedtodescribe the areaofintegration, double precision -input. Function Name: DKK Entry Point: DKK Purpose: Tocalculate theslope ofalinegiven twopoints infunction DKI. Calling Sequence: DP=DKK(I,J,R,Z) I,j -Thesubscripts ofR,Zdefining thetwopoints. R,Z -Vectors oftherandzcoordinates. Function Name: DKM Entry Point: DKM Purpose: Tocalculate they-intercept ofalinegiven twopoints infunction DKI. Calling Sequence: DP=DKM(I,J,R,Z) I,J Thesubscripts ofR,Zdefining thetwopoints. R,Z Vectors oftherandzcoordinates. Function Name: DKINT Entry Point: DKINT Purpose: Toevaluate thefollowing function intheFORTRAN function routine DKI: 4.27-14\nFUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEl) where1w fI(A,B) =Z t=OC_EF•At•Bw-t•AJ (20) andCgEFs=Hl w-s+l fort#0 s 1 fort=0(21) AJ=R(J) (w+v-t+l) -R(I) (w+v-t+l) w+v-t+l In[–]for(w+v-t+l) p0 for(w+v-t+l) =0.(22) 3e Calling Sequence: I,j A,B V,W R,ZDP=DKINT (I,J,A,B,V,W,R,Z) Thesubscripts ofR,Z. Thearguments ofthefunction finEquation20. Integer paran_ters ofthefunction. -Vectors oftherandzcoordinates. 4.27.8.26 Function Name: DKJ Io 2.Entry Point: DKJ Purpose: Toevaluate thefollowing function infunction DKINT. DKJ=R(J)(SiII R}II(s+l S R(J) {In[]fors+lp0 fors+l=0.(23) 3.Calling Sequence: DP=DKJ(I,J,R,S) I,J Thesubscripts ofR 4.27-15\nMODULE FUNCTIONAL DESCRIPTIONS R S-Vector ofthercoordinates. -Integer parameters ofthefunction, 4.27.8.27 Function Name: DKEF Io 2.EntryPoint: DKEF Purpose: Toevaluate thefollowing function infunction DKINT. 3.Calling Sequence:DKEF=I_=_I DP=DKEF(T,W)w-s+l fort#0s fort=O. T,W-Integer parameters ofthefunction.(24) 4.27.8.28 Function Name: DK89 I.Entry Point: DK89 2.Purpose: Toevaluate thefollowing function infunction DKI. M DK89(I,A,B) -l ZM!(-A)s•d _s=O where(2s) d =(A+B.R(1)(M+I-N-S) (M-S)! S!(M+I-N’S) In(_A +B.R(1) ) (M+I-N)! (N-l).for(M+I-N-S) #0 for(M+I-N-S) =0(26) 3.Calling Sequence: I A,B M,N RDP=DK89(I,A,B,M,N,R) Thesubscript ofR. Thearguments ofthefunction. Integer parameters ofthefunction. Vector nfthercoordinates 4.27.8.29 Function Name: DKIO0 I.Entry Point: DKIO0 4.27-16\nFUNCTIONAL MODULE SMAI (STRUCTURALMATRIX ASSEMBLER -PHASEl) 2.Purpose: whereToevaluate thefollowing function insubroutine DKI. -IM+N-2 DKIOO(I,A,B) :–_ .(M+N-2)!-d , A,-,,,,-, js=O(27) (A+B.R(1))(M-I-S).(_B) S (M+N-2-S)! S!(M-I-S)‘R(1) (M-I-S) IA+BR(1) (-B)M-I’In(J R(I) J) (M-I)!(N-I)!for(M-I-S) 0 for(M-I-S) =0•(28) .Calling Sequence: I A,B M,N RDP=DKIO0 (I,A,B,M,N,R) Thesubscript ofR. lhearguments ofthefunction. Integer parameters ofthefunction. Vector ofthercoordinates. 4.27.8.30 Function Name: KFAC I. 2. 3. 4.27.8.31Entry Point: KFAC Purpose: Toevaluate thefactorial function infunctions DKSgandDKIO0. Calling Sequence: K=KFAC (N) N -Theinteger argument ofthefunction. IfN\u003c2,thefunctional value issettoI. Function Name: DKJAB I.Entry Point: DKJAB 2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKIusing the function evaluated inF_RTRAN function DK89. DKJAB(I,A,B) -R(1)MIg(IA+B’R(I)I )-•DK89(I,A,B)M (29) 4.27-17\nMODULE FUNCTIONAL DESCRIPTIONS 3.Calling Sequence: I A,B M,N RDP=DKJAB(I,A,B,M,N,R) Thesubscript ofR. Thearguments ofthefunction. Integer parameters ofthefunction. Vector ofthercoordinates. 4.27.8.32 Function Name: DK219 I.EntryPoint: DK219 2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKIusingthe function evaluated inFORTRAN function DKIO0. DK219(I,A,B) :-In(IA+B’R(1)I) M.R(1)M(3O) +_“DKIO0(I,A,B) 3.Calling Sequence: I A,B M,N RDP=DK219(I,A,B,M,N,R) Thesubscript ofR. Thearguments ofthefunction. Integer parameters ofthefunction. Vector ofthercoordinates. 4.27.8.33 Function Name: DK211 I.EntryPoint: DK211 2.Purpose: Toevaluate thefollowing function inF_RTRAN function DKI. DK21I(I,A,B)I0 _-[In(12-B.R(1)I)] 2 [InIAI]’[InlR(1)l] -t_l _In(IB.R(1) I)]2+oo _‘2AtforB.R(1) =A forB.R(1)#A, [B.R(1)]2=A 2 for[B’R(1)] 2\u003cA2 for[B.R(I)] 2\u003eA2(31) 4.27-18\nFUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l) 3. 4.27.8.34Calling Sequence: DP=DK211 (I,A,B,R) I -Thesubscript ofR. A,B -Thearguments ofthefunction. R -Vector ofthercoordinates. Subroutine Name:R_MBDK I.Entry Point: R_MBDK 2.Purpose: Toevaluate integrals indouble precision forthetoroidal thinshell ringinsubroutine KT@RDR. 3.Calling Sequence: CALLR@MBOK (A,B,N@SIG,PRECIS,NUM,ITD@NE,FINTG,K_DE,FUNCT,X) N@SIG - PRECIS - NUM ITD_NE - FINTG - K_DE - FUNCT - XLower andupper limit ofintegration respectively. Number ofcorrect significant digits desired. Actual number ofsignificant digits attained. Maximum number ofhalvings oftheinterval [A,B] tobemade. Actual number ofhalvings oftheinterval [A,B]. Resultant value ofintegral. Print control (notused). Function subprogram usedtoevaluate theintegral. Vector ofparameters usedbyfunction subprogram. 4.27.8.35 Function Name: D4K I.Entry Point: D4K 2.Purpose: Toevaluate thefollowing function tobeintegrated bysubroutine R_MBDK. 3.D4K= CJ.sin2@ R_-Rp.sin _)+Rp-sin _1\"cos ¢+Rp.COS _-sin@ Calling Sequence: DP=D4K(X) X -Vector offunction parameters. x(1)- X(2) -Rp X(3) -Rl(32) 4.27-19\n4.27.8.36MODULE FUNCTIONAL DESCRIPTIONS X(4) -cos_i X(5) -sin_I X(6) -J+l Function Name: D5K I.Entry Point: D5K 2.Purpose: Toevaluate thefollowing function tobeintegrated bysubroutine ROMBDK. 3. 4.27.8.37 I. 2. 3.D5K = @J.2\"sin@‘cos_ R_-Rp-sina_ +Rp.sina_ cos_+Rp.COS_t.sin_ DP=D5K(X) Vector offunction parameters. Rp Rl COS I sin_i J+lCalling Sequence: X X(1) - X(2) - X(3) x(4) x(5) x(6) Function Name: D6K(33) Entry Point: Purpose: Calling Sequence: X X(1) - X(2) - X(3) - X(4) -D6K Toevaluate thefollowing function tobeintegrated bysubroutine ROMBDK. D6K = @Jc°sZ@ (34) Ri-Rp.sinal +Rp.sin_1.cos +Rp.COS_1\"Sl_ DR=D6K(X) Vector offunction parameters. Rp R1 COS_z 4.27-20\nFUNCTIONAL )IODULE SMAI(STRUCTURAL MATRIX ASSEHBLER -PHASE I) X(5) -sin_ X(6) -J+I 4.27.8.38 Subroutine Name: DMATRX I.Entry Point: DMATRX 2.Purpose: Toform theelement stiffness matrix infield coordinates forthetoroidal thinshell ringinsubroutine KT@RDR. 3.Calling Sequence: CALLDMATRX (D,V,C,CA,CA2,VA,DM,DB,YI) D V,C,CA, CA2,VA, DM,DB YI 4.27.8.39-Resultant stiffness matrix. Terms used intheevaluation ofthestiffness matrix. -Array ofintegral values. Subroutine Name: KFLUD2 I. 3. 4.27.8.40Entry Point: KFLUD2 Purpose: Toformtheelement psuedo stiffness matrix fortheFLU!D2 andAX!F2 elements° Calling Sequence: CALL KFLUD2 Subroutine Name: KFLUD3 I. 2. 3. 4.27.8.41Entry Point: KFLUD3 Purpose: Toformtheelement psuedo stiffness matrix fortheFLUID3 andAXIF3 elements. Calling Sequence: CALL KFLUD3 Subroutine Name: KFLUD4 I.Entry Point: KFLUD4 2.Purpose: Toformtheelement psuedo stiffness matrix fortheFLUID4 andAXIF4 elements. 3.Calling Sequence: CALLKFLUD4 4.27-21 (8/I/72)"},"title":"Programmer's Manual P42"},"/docs/programmers/programmers_manual_043/":{"data":{"":"MODULEFUNCTIONAL DESCRIPTIONS 4.27.8.42 Subroutine Name:KSL_T I.EntryPoint:KSL_T 2.Purpose:ToformtheelementpsuedostiffnessmatrixfortheSL_T3andSL_T4elements. 3.CallingSequence: CALLKSL_T(IARG) IARG=0=SLBT3 elements l=SL_T4 elements 4.27.8.43 Subroutine Name: KTETRA I.Entry Point: KTETRA 2.Purpose: Tocalculate andinsert element stiffness matrices fortheTETRA (solid tetrahedron) element. Itisalsousedforthesubelements oftheWEDGE, HEXAI, and HEXA2 elements. 3.Calling sequence: CALL KTETP_A (I_PT), where: IfI_PT=O,thestiffness isdivided by2. IfI_PT=I,thestiffness isunmodified. IfI_PT_ lO0,theelement istested forgeometric consistency. 4.27.8.44 Subroutine Name: KSBLID I.Entry Point: KSBLID 2.Purpose: Toperform, ontheWEDGE, HEXAI, andHEXA2 elements, thefollowing tasks: a) Check geometric consistency. b) Rearrange theECPTdata intotheTETRA format foreach subelement andcallthe KTETRJ_ subroutine. 3.Calling sequence: CALLKSBLID (ITYPE), where ITYPE =limplies aWEDGE element (three tetrahedra). ITYPE =2implies aHEXAI ele_nt (five tetrahedra). ITYPE =3implies aHEXA2 element (tentetrahedra). 4.27.8.45 Subroutine Name: HHBDY I.Entry Point: HHBDY 4.27-21a (8/I/72)\n2, , 4.27.8.46 I. 2.FUNCTIONAL MODULE SMAI (STRUCTURAL MATRIX ASSEMBLER -PHASE l) Purpose: Tocalculate thermal convection matrix terms fortheboundary heat transfer elements (HBDY). Calling sequence: CALLHHBDY. Subroutine Name: HRING Entry Point: HRING Purpose: Tocalculate thermal conductivity matrix terms fortheTRIARG andTRAPRG elements. Calling Sequence: CALLHRING(ITYPE), where ITYPE =3implies aTRIARG element. ITYPE =4implies aTRAPRG element. KPLTST3. 4.27.8.47 Subroutine Name: I.Entry Point: KPLTST 2.Purpose: Toexamine theplanarity ofquadrilateral elements. 3.Calling Sequence: CALLKPLTST (GI,G2,G3,G4) where Gi=GridPoint coordinate vectors 4.27.9 Design Requirements 4.27.9.1 Open CoreDesign Theopen corecommon block formodule SMAIisdefined bythefollowing F_RTRAN statements: I. D_UBLE PRECISIBN DZ(1) 2. INTEGER IZ(1) 3. CBMM_N /SMAIX/Z(2) 4. EQUIVALENCE (Z(1),IZ(1),DZ(1)). Theopen corelayout isgiven inFigure I. 4.27-21b (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS I.D_UBLEPRECISION DZ(1) 2.INTEGER IZ(1) 3.COMM@N/SMAIX/Z(1) 4.EQUIVALENCE (Z(1),IZ(1),DZ(1)). Theopencorelayout isgiven inFigure I. ICSTM IMATI IGPCT IP_INT 16X6K IGGPST IGGPCT IGECPT IG4GG IGKGGC_MM_N ISMAIX/ CSTMData MPTandDIT tobereadinto corebyMATor HMAT GPCTData Pointer table defined iFEquations land2 Submatrices forKGGX andK4GGforthecurrent pivot point. GINObuffer forGPST GIN_buffer forGPCT GIN_buffer forECPT GIN_buffer forK4GG GIN_buffer forKGGX Figure I.Opencorelayout formodule SMAI. 4.27-22 (8/I/72)\nFUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEI) Thedefinition ofthevariables isasfollows: ICSTM -Thezeropointer totheCSTMportion ofopen core; defined tobezero. IMATI IGPCT - IP_INT - I6X6K - 16X64 -Thezero pointer totheMPTandDITdata readintocorebysubroutine PREMAT; defined tobeICSTM +NCSTM, where NCSTM isthelength oftheCSTMportion ofopencore. Thezeropointer totheGPCTportion ofopencore; defined tobeIMATI +MATCR, MATCR being thelength ofopencoreusedbysubroutine PREMAT. Thezeropointer tothepointer table inopencore. Thepointer table isused asadictionary torelate theGPCTtothesubmatrices incore; defined tobe IGPCT +NGPCT, NGPCT being thelength oftheGPCT. Thezeropointer tothesubmatrices ofKGGX; I6X6K =(IP_INT +NP_INT -l)/ 2+2where NP_INT =NGPCT isthelength ofthepointer table. Theextra arithmetic todefine I6X6K isnecessary because thesubmatrices aredouble precision nun_)ers. While theabove indices aresingle precision indices, I6X6K isadouble precision index. Thezeropointer tobesubmatrices ofK4GG; I6X64 =16X6K +N6X6K, where N6X6K isthenun_er ofdouble precision numbers inthesubmatrices ofKGGX. I6X64 isadouble precision index. Thepointers fortheGIN_buffers, IGGPST, IGGPCT, IGECPT, IG4GG andIGKGG are, unlike theabove, ‘one’ pointers. Itshould benoted thatthelengths NCSTM andMATCR are constant throughout themodule operation, while thelength oftheGPCTdatawillva_vfrompivot point topivot point astheECPTandGPCTdatablocks areprocessed serially. (Hence itis probable thatforapivot point with arelatively small nun_er ofelements connected toitthe entire submatrix maybeheld incore, while spill logic will beentered onlywhen apivot point hasagreat manyelements connected toit.) 4.27.9.2 Block DataSubprogram Theblock dataprogram SMAIBD setsGIN_filenumbers, I/parameters andSMAIoverlay parameters incommon blocks /SMAII/and/SMAICL/. 4.27.9.3 Common Storage Requirements Blank common isusedonly forDMAPparameters. Thefollowing common blocks areused throughout themodule: /SMAII_/,/SMAIBK/,/SMAICL/,/SMAIET/and/SMAIDP/.Theyaregiven indetail heresince other matrix assembler modules suchasSMA2andDSMGI aredesigned similarly. Allcommon block variables areinteger except (1)DODET in/SMAICL/which isalogical variable; (2)thearray in/SMAIET/which isamixed (integer andreal) array; and(3)thedouble precision array in/SMAIDP/. 4.27-23\nMODULEFUNCTIONAL DESCRIPTIONS I. parameters. WordNumberTheSMAII_ common block is36words inlength andisusedforSFtAI input/output Variable l IFCSTM 2 IFMPT 3 IFDIT 4 IDUMI 5 IFECPT 6 IGECPT 7 IFGPCT 8 IGGPCT 9-I0 IFGEI,IGGEI II IFKGG 12 IGKGG 13 IF4GG 14 IG4GG 15 IFGPST 16 IGGPST 17 INRW 18 OUTRW 19 CLSNRW 20 CLSRW 21 NEOR 22 E_R 23-29 MCBKGG 30-36 MCB4GG 2. parameters.Definition GIN_filenumber fortheCSTMdatablock. GIN_filenumber fortheMPTdatablock. GIN_ filenumber fortheDITdata block. Undefined. GIN_filenumber fortheECPTdatablock. GIN_buffer pointer fortheECPT. GIN_filenumber fortheGPCTdatablock. GIN_buffer pointer fortheGPCT. Undefined. GIN_filenumber fortheKGGXdatablock. GIN_buffer pointer forKGGX. GIN_file number fortheK4GGdatablock. GIN_buffer pointer forK4GG. GINO filenumber fortheGPSTdatablock. GINO buffer pointer fortheGPST. Input with rewind option forsubroutine _PEN. Output with rewind option forsubroutine OPEN. Close without rewind option forsubroutine CLOSE. Close with rewind option forsubroutine CLOSE. Noend-of-record indicator forsubroutine READ. End-of-record indicator forsubroutine READ. Matrix control block fortheKGGXmatrix. Matrix control block fortheK4GGmatrix. TheSNtAIBK common block islOwords inlength andisused forSMAIopen corebookkeeping Itcontains zero pointers andlengths forthevarious sub-arrays inopen core. 4.27-24\nFUNCTIONAL MODULESMAI(STRUCTURAL. MATRIXASSEMBLER-PHASEI) WordNumber Variable Definition 1 ICSTM Zero pointer totheCSTMsub-array inopen core. For example thefirst location ofthissub-array isreferenced asIZ(ICSTM +l). 2 NCSTM Length oftheCSTMsub-array inopencore. 3 IGPCT Zeropointer totheGPCTsub-array inopencore. 4 NGPCT Length oftheGPCTsub-array. 5 IP_INT Zero pointer totheP_INT sub-array inopencore. 6 NP_INT Length oftheP_INT sub-array. 7 I6X6K Zeropointer tothe6x6submatrices ofKGBX. 8 N6X6K Number ofwords allocated tothe6x6submatrices ofKGGX. 9 16X64 Zero pointer tothe6x6submatrices ofK4GG. I0 N6X64 Undefined. 3.TheSMAICL common block is133words inlength andisusedformodule control parameters. WordNumber Variable Definition 1 I_PT4 Indicator usedbyelement routines denoting whether ornot theK4GGmatrix willbegenerated. I_PT4 =O,implies no generation; I_PT4 =limplies generation. 2 K4GGSW Indicator setto-Iinitially. IfI_PT4 =I,thenelement routines willsetK4GGSW =l,when anon-zero element structural damping matrix isgenerated. 3 NPVT Thescalar index which isthepivot point. This isthefirst word ofevery record oftheECPTdatablock. 4 LEFT Thenumber ofwords ofopencoreremaining after allsub- arrays inopencorehavebeenallocated. 5 FR_WIC Thefirst rowofthesubmatrices incore. Ifallsixrows ofthematrices tobegenerated cannot beheldincore, spill logic isinitiated, and3,2orlrowsofthesubmatrices are generated during eachpassoftheECPT record forthepivot point which causes thespill. FR_WIC cantakeonthevalues 1,2,3,4,5 or6. 6 LR_WIC Thelastrowofthesubmatrices incore. LR_WIC isdefined as FR_WIC +NR_WSC -l,where NR_WSC isthenumber ofrowsincore. Ifthere arenospill problems, thenLR_WIC =6ifthepivot point isagridpoint, andLR_WIC =lifthepivot point isa gridpoint. 7 NR_WSC Thenumber ofrowsofthesubmatrices currently incore. 8 TNR_WS Total number ofrowsofthesubmatrices tobegenerated. TNR_WS =6ifthepivot point isagridpoint andTNR_WS =l ifthepivot point isascalar point. Thisdefinition holds whether ornottheK4GGmatrix istobegenerated. (In actuality, iftheK4GGisgenerated thetotal number ofrows 4.27-25 (711170)\nMODULE FUNCTIONAL DESCRIPTIONS WordNumber I0 11-20 21 22Variable Jt,IAX NLINKS LINK N_G_ IDETCKDefinition generated foranyECPTrecord is12or2). Thenumber ofcolumns ofKGGX(andK4GG)tobegenerated with thecurrent ECPTrecord. Thenumber ofmachine links(overlay segments) necessary to contain themodule’s element routines. Currently NLINKS is defined tobe3.Thisvariable isusedinconjunction with theLINKarraydefined below. Formachines withlarge memories, itisdesirable tohaveallelement routines in onelink,forwheninanyECPTrecord thereareelements which reside indifferent links, overlay overhead canbeverycostly (particularly onsecond generation computing systems). Before thecurrent ECPTrecord isreadforthefirsttime,the LINKarrayissetto-IforLINK(1), I=I,…NLINKS. When thefirstelement isreadfromtheECPT,theproper element routine iscalled, thereby loading thelinkinwhich that element routine resides. Thevariable LINCOR, thelinkincore, isdefined asLINC_R =IBVRLY(ITYPE), where ITYPEistheele- ment’s internal number, e.g., R_D=I,BEAM=2,etc. Forthe nextelement readfromtheECPT,itisdetermined inwhatlink itresides. Ifitresides inthelinkwhici_ isincore,the element routine iscalled. Iftheroutine doesnotreside in thelinkcurrently incore,itisdetermined whether (a)the linkhasalready beenprocessed or(b)thelinkhasnotbeen processed inwhich casea\"to-be-processed-later\" flagisset. Forcase(a)LINK(ITEMP) isI;forcase(b)LINK(ITEMP) is set=O,where ITEMP=I_VRLY(ITYPE). Whenanend-of-record issensed fortheECPT,LINK(LINCOR) issetto1andLINK arrayissearched forzeros. Iftherearenozeros, theprocess- ingoftheECPTrecord iscomplete. Iftherearezeros, that is,linkstobeprocessed, thefilecorresponding totheECPT isbackspaced andprocessing oftherecord isrepeated. Flagusedtoindicate ifauserfatalerrormessage occurred intheprocessing ofanyelement. NOGO=1indicates anerror. Execution istermination uponcompletion oftheprocessing of theGPCT. N_G_=0indicates noerror. Continue execution. Usedasafirstpassindicator intheDETCKsubroutine. There willbemultiple passes through theDETCK routine, foreach ECPTrecord, onlyiftherearespillproblems, i.e.,thetotal number ofrowstobegenerated fortheECPTrecord willnotfit incore. 4.27-26 (8/I/72)\nFUNCTIONAL MODULESMAI(STRUCTURAL MATRIXASSEMBLER-PHASEI) 23 D_DET Logical variable which iftrueimplies theDETCKroutine will becalled andiffalsewillnotbecalled. Iftheinputpara- meter, N_GENL, isgreater thanzero, implying general elements exist, thenD_DETissetfalse. Otherwise D_DETistrue. 4.Thecommon blockSI._IET isI00words inlength andisusedasthemeans ofcommunicating theelement datafromtheECPTdatablocktotheelement subroutines. 5.Thecommon blockSMAIDP defines anarrayof300double precision words. Thisblock is usedas\"scratch\" storage byelement routines. Thosevariables which inmostF_RTRAN programs wouldbelocalsubroutine variables aredefined in/SMAIDP/ bythemodule’s element routines inordertopreserve corestorage andhenceincrease opencore. 4.27.9.4 Arithmetic Considerations Allfloating pointarithmetic operations arecarried outindouble precision. and[K_g] 4.27.10aredouble precision matrices.Kx Both[gg] Diagnostic Messages Themodule hasavariety of\"fail-safe\" error checks. Ifanyofthese checks fails, it implies anobscure program design error oracomputer operating system/hardware failure. Diagnostic messages 2022, 2023, 2034 areofthis type. User fatal error messages 2025, 2026, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 5001, 5002, 5003, and5004 occur when oneofthestructural element routines encounters some user data which makes generation ofanelement matrix impossible. Examples would include auser defin- ingaRODorBARelement ofzero length; auser defining thefour points ofaSHEAR panel element notintheproper cyclical order; auser defining TRPLT data sothat amatrix inaalgorithm is singular; etc. Itshould benoted thefirst time this type ofuser data isencountered afatal error occurs, that isthemodule does notcontinue toprocess data foruncovering anymore errors. Detailed descriptions ofthese error messages canbefound inSection 6oftheUser’s Manual. 4.27-27 (8/I/72)\n4.28 4.28.1 4.28.2FUNCTIONALMODULE SMA2 (STRUCTURALHATRIXASSEMBLER -PHASE2) FUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2) Entry Point: SMA2 Togeneratethemassmatrix [Mgg] andthedampingmatrix [Bgg]. 4.28.3 DMAPCalling Sequence SMA2 CSTM,MPT,ECPT,GPCT,DIT/MGG,BGG/V,Y,WTMASS=I.O/V,N,N_MGG/V,N,N_BGG/V,Y, 4.28.4 CSTM - MPT - ECPT - GPCT DIT - Notes: I. 2. 3. 4. 4.28.5 MGG- BGG - Notes: I. .C_UPMASS/V,Y,CPBAR/V,Y,CPR_D/V,Y,CPQUADI/V,Y,CPQUAD2/V,Y,CPTRIAI/V,Y,CPTRIA2/ V,Y,CPTUBE/V,Y,CPQDPLT/V,Y,CPTRPLT/V,Y,CPTRBSC/ $ Input DataBlocks Coordinate System Transformation Matrices. Material Properties Table. Element Connection andProperties Table. Grid Point Connection Table. Direct Input Tables. TheCSTMmaybepurged. Ifson_element references amaterial property, theMPTcannot bepurged. Neither theECPTnortheGPCTmaybepurged. Ifsomematerial property istemperature dependent, DITcannot bepurged. Output DataBlocks Partition ofmassmatrix -gset. Partition ofdamping matrix -gset. MGGcannot bepre-purged. BGGcanbepre-purged. 4.28-I (3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 4.28.6 Parameters WTMASS -Input-real-default value(inDMAPcalling sequence) =1.0.WTMASS isthescalar valuebywhichthegenerated massmatrix willbemultiplied before thecolumns N_MGG NOBGGarepacked onto theoutput file. -Output-integer-no default value. mass matrix isthezero matrix. -8utput-integer-no default value.WTMASS istheratioofmasstoweight. NOMGGissetequalto-Iifthegenerated Otherwise itisset=+I. IftheBGGmatrix iseither pre-purged oris generated asthezeromatrix, N_BGGisset=-I.Otherwise itisset=+I. COUPMASS -Input-integer-default value=-I.IfCOUPFtASS =-I,“consistent” massmatrices for allelements willnotbegenerated; ifCOUPMASS\u003eO, “consistent” massmatrices forallelements willbegenerated. IfCOUPMASS =0\"consistent\" massmatrices willbegenerated forelement typesdepending onthevalues ofCPBAR, CPROD, CPQUADI, CPQUAD2, CPTRIAI, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, andCPTRBSC. CPBAR, CPROD, CPQUADI, CPQUAD2, CPTRIAI, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT andCPTRBSC -Input- integer-default value=-I. Theseparameters choose between “consistent” massandnorma_ massalgorithms fortheirres- pective element typesasgivenbelow. Parameter Element Ty]__es- CPBAR BAR CPROD ROD,CONROD CPQUADI QUADI CPQUAO2 QUAD2 CPTRIAI TRIAl CPTRIA2 TRIA2 CPTUBE TUBE CPQDPLT QDPLT CPTRPLT TRPLT CTRBSC TRBSC These parameters function inconjunction with COUPMASS andhave noeffect ifCOUPMASS _O. IfCOUPMASS =0anegative value forthese parameters will cause the\"normal\" mass matrix tobe generated. Avalue equal toorgreater than zero will cause the\"consistent\" mass matrices tobe generated forallelement types controlled bythis parameter. 4.28-2 (3/I/71)\nFUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2) 4.28.7 Method S)tA2isstructuredsimilarly tomodule SMAI. Aseparatemodule waswritten togenerate themassanddamping matrices inorder tomaximize theamount ofopencorespace available forelement matrices during matrix generation. This corespace wasespecially critical on thedevelopment computer, theIBM7094-7040 DCS. Since SMA2 issosimilar toSMAI, the details ofthesimilarities willnotberepeated here; teedifferences willbepointed out. Thereader isreferred totheModule Functional Description (MFD) forSMAI (section 4.27). When allrows (or,inthecaseofspill, thenumber ofrowsincore) foreachpivot point havebeencomputed, eachmatrix element of[Mgg] ismultiplied byWT_SS before being packed onto theoutput data block MGG. 4.28.8 Subroutines SMA2, likeSMA!, usestheutility routines PRETRD, PREMAT andGMMATD. Theprincipal means ofcommunicating anelement entry oftheECPTtoanelement mass or damping matrix generation routine isthrough /SI_2ET/.This factisnotexplicitly stated in eachofthedescriptions oftheelement routines (e.g., MR_D) given below. Thefollowing listgives acorrespondence between SMAI andSMA2routines thatareusedonly (directly orindirectly) bytheaxisymmletric shell element routines IRIARG andTRAPRG. All oftheSMA2 routines arethesame astheir SMAIcounterparts except forname. Thereason for duplicating these routines with different names wastomaximize opencoreforelement matrices inSMAIandSMA2, which both reside inthesameNASTRAN link. Fordetails oneachofthe routines, seethecorresponding SMAIcounterpart (section 4.27.8). S_‘AI SMA2 DKI DMI DKK DMK DKM DMM DKINT DMINT DKJ DMJ DKEF DMEF 4.28-3 (.3/I/71)\nFUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2) SMAI SMA2 DK89 DM89 DKIO0 DMIO0 KFAC MFAC DKJAB DMJAB DK219 DM219 DK211 DM211 4.2B-3a (311171)\n4.28.8.1 I. 2.MODULEFUNCTIONAL DESCRIPTIONS Subroutine Name:SMA2 EntryPoint:SMA2 Purpose:ThemoduledriverwhichparallelsSMAI. methodsectionoftheMFDforSMAI(section4.27.7). 3.CallingSequence: CALLSMA2 4.28.8.2 Subroutine Name: SMA2A I.EntryPoint: SMA2A 2.Purpose: Togenerate [Mgg]and[Bgg]. forSMAI fordetails onSMAIA (section 4.27.8). 3.Calling Sequence: CALLSMA2A. 4.28.8.3Forfurther details seethe This routine parallels SMAIA. SeetheMFD Subroutine Name: SMA2B I.Entry Point: SMA2B 2.Purpose: Toaddadouble precision 6by6or1by1matrix [Ke]tothe\"submatrix\" of [Mgg] or[Bgg] corresponding tothecurrent pivot point. 3.Calling Sequence: CALLSMA2B (KE,J,II,IFILE,DUMDP). KE,J,II areasdefined forsubroutine SMAIB (seesection 4.27.8). IFILE -GIN_filenumber ofthematrix incorebeing added to[Mgg] or[Bgg]-integer-input. DUMDP -Adummy double precision argument added sothatthecalling sequence to SMA2B would conform tothatofSMAIB. 4.28.8.4 Block DataProgram Name: SMA2BD. I.PuYpose: TosetGIN@filenumbers, I/parameters andSMA2 overlay parameters in /SMA21/and/SMA2CL/. 4.28-4\nFUNCTIONP_L MODULESMA2(STRUCTURAL MATRIXASSEMBLER-PHASE2) 4.28.8.5Subroutine Name:MP,_D I.EntryPoint:MR_D 2.Purpose:TogeneratetheelementmassmatrixforaR_Delement. 3.Calling Sequence: CALLMR_D. 4.28.8.6 Subroutine Name: _gUBE I.Entry Point: MTUBE 2.Purpose: Togeneratetheelement massmatrix foraTUBE element. 3.Calling Sequence: CALLMTUBE 4.28.8.7 Subroutine Name: MASSTQ I.EntryPoint: MASSTQ 2.Purpose: Togenerate anelement massmatrix foranyofthetwo-dimensional structural elements listed under theCalling Sequence. 3.Calling Sequence: CALLMASSTQ(IARG) IARG=4=TRMEM 1:QDNEH 3=TRBSC 3:TRPLT 7=QDPLT 5=TRIAl 4=TRIA2 2=QUADI l=QUAD2 6=SHEAR 6=TWIST 4.28-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.28.8.8 Subroutine Name: MBAR I.Entry Point: MBAE 2,Purpose: Togenerate the\"diagonal\" (uncoupled) element massmatrix foraBAR element. 3.Calling Sequence: CALLMBAR 4.28.8.9 Subroutine Name: MC_AR I.EntryPoint: MCBAR 2.Purpose: Togenerate the\"consistent\" (coupled) element ma_sn_atrix foraBAR element. 3.Calling Sequence: CALLMCBAR 4.28.8,10 Subroutine Name: MC@NMX I.Entry Point: MC_NMX 2.Purpose: Togenerate anelement massmatrix foreither ofthetwoconcentrated- mass-elements listed underCalling Sequence. 3.Calling Sequence: CALLMCOrlMX(IARG) IARG-11CONMI {2=C_NI12 4.28.8.11 Subroutine Name: MC_NE I.EntryPoint: MC_NE 2.Purpose: Togenerate anelement massmatrix fortheaxisymmetric conical shell element (C_NE). 3.Calling Sequence: CALLMC_NE 4.28-6\nFUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2) 4.28.8.12 Subroutine Nan:e: MASSD I.Entry Point: 14ASSD 2.Purpose: Togenerate lbylelement massmatrices forscalar elements MASSi, i=1,2,3,4; andlbylelement damping matrices forscalar damping elements DAMPi, i=1,2,3,4. 3.Calling Sequence: CALL_SSD(1) l-Generate element massmatrix forat._SSl element, 2-Generate element mass matrix foraMASS2 element, 3-Generate element massmatrix foraF_SS3 element, 4-Generate element massmatrix foraI4ASS4 element, I-, 5-Generate element damping matrix foraDAMPI element, 6-Generate element damping matrix foraD_P2 element, 7-Generate element damping matrix foraDAMP3 element, 8-Generate element damping matrix foraDAMP4 element. 4.28.8.13 Subroutine Name: MTRIRG I.Entry Point: I-_RIRG 2.Purpose: Togenerate anelement massmatrix foratriangular cross-section ring, TRIARG, element. 3.Calling Sequence: MTRIRG. 4.28.8.14 Subroutine Name: MTRAPR I.Entry Point: MTRAPR 2.Purpose: Togenerate anelement massmatrix foratrapezoidal cross-section ring, TRAPRG, element. 3.Calling Sequence: CALLMTRAPR. 4.28.8.15 Subroutine Name: MT_RDR I.Entry Point: MT_RDR 4.28-7\n2.Purpose: element, 3.CallingSequence: 4.28.8.16 Subroutine Name:MODULEFUNCTIONAL DESCRIPTIONS Togenerateanelementmassmatrixforatoroidalthinshellring,T_RDRG, CALLMT_RDR. BVISC I,EntryPoint:BVISC 2.Purpose:TogenerateanelementdampingmatrixforaVISCelement. 3.CallingSequence: CallBVISC 4.28.8.17 Subroutine Name:MBEAM I.EntryPoint: MBEAM 2.Purpose: Togenerate anelement massmatrix foraBEAMelement. 3.Calling Sequence: CALLMBEAM 4.28.8.18 Subroutine Name:MCR_D I.Entry Point: MCR_D 2.Purpose: Togenerate the\"consistent\" (coupled) element massmatrix foranyofthe elements listed under calling sequence, 3.Calling Sequence: CALLMCR_D (IARG) IARG:l-R@D 1-C_NR_D 3-TUBE 4.28.8.19 Subroutine Name: MTRBSC I.Entry Point: MTRBSC 2.Purpose: Togenerate the\"consistent\" (coupled) element massmatrix forabasic bending triangle element. 3oCalling Sequence: CALLMTRBSC 4.28-8 (12-I-69)\nMODULEFUNCTIONAL DESCRIPTIONS 4.28.8.20Subroutine Name: MTRPLT I.Entry Point: MTRPLT 2.Purpose: Togenerate the\"consistent\" (coupled) element massmatrix foratriangular plate element. 3.Calling Sequence: CALLMTRPLT 4.28.8.21 Subroutine Name: MQDPLT I.Entry Point: MQDPLT 2.Purpcse: Togenerate the\"consistent\" (coupled) element massmatrix foraquadrilateral plate elerent. 3.Calling Sequence: CALLMQDPLT 4.28.8.22 Subroutine Name: MTRIQD I.Entry Point: MTRIQD 2.Purpose: Togenerate the\"consistent\" (coupled) elenent foranyofthefollowing elements: T_IAI, TRIA2, QUADI, QUAD2. 3.Calling Sequence: CALLMTRIQD (IARG) l-TRIAl element. 2-TKIA2 element. IARG= 3-QU_I element. 4-QUAD2 element. 4.28.8.23 Subroutine Name: MFLUD2 I.Entry Point: MFLUD2 2.Purpose: Togenerate thepsuedo massmatrix terms fortheFLUID2 andAXIF2 elements. 3.Calling Sequence: CALLMFLUD2 4.28-8a (8/I/72)\nFUNCTIONAL MODULE SMA2(STRUCTURAL MATRIX ASSEMBLER -PHASE2) 4.28.8.24 I. 2. 3. 4.28.8.25 Subroutine Name: I. 2. 3. 4.28.8.26 Subroutine Name: MFREE I.EntryPoint: MFREE l• 2. 3.Subroutine Name: MFLUD3 EntryPoint: MFLUD3 Purpose: Togenerate thepsuedo massmatrix termsfortheFLUID3 andAXIF3elements. Calling Sequence: CALLMFLUD3 MFLUD4 EntryPoint: MFLUD4 Purpose: Togenerate thepsuedo massmatrix termsfortheFLUID4 andAXIF4elements. Calling Sequence: CALLMFLUD4 2.Purpose: Togenerate thepsuedo massmatrix termsforthefreesurface element. element isinternally generated inIFP4fromFSLIST data. 3.Calling Sequence: CALLMFREE 4.28.8.27 Subroutine Name: MSLOT EntryPoint: MSL_T Purpose: Togenerate psuedo massmatrix termsfortheSL_T3andSLOT4elements. 4.28.8.28 I. 2. 3.Calling Sequence: CALLMSL_T(IARG) 0=SLOT3IARG 1:SL_T4 Subroutine Name: MSOLID EntryPoint: MS,LIDThis Purpose: Togenerate themassmatrix termsforthethree-dimensional solidelements. Calling Sequence: CALLMSOLID(1) IElement 1 TETRA 2 WEDGE 3 HEXAI 4 HEXA2 4.28-8b (8/I/72)\nFUNCTIONAL MODULE SMA2 (STRUCTURAL MATRIX ASSEMBLER -PHASE 2) 4.28.9 Design Requirements 4.28.9.1 Open CoreDesign Theopencoredesign forSMA2 isthesameasthatinSMAIwith theexception that/SMA2X/ defines thebeginning ofopen coreandonlyfourbuffers areneeded, oneeachforMGG,BGG, ECPTandGPCT. 4.28.9.2 Common Stcrage Requirements Thecommon storage requirements forSMA2aresimilar tothose inSMAll Thecommon blocks /SMA2I_/,/SMA2BK/,/SMA2CL/,/SMA2ET/and/Sr_2DP/ofSMA2correspond to/SF_II_/,/SMAIBK/, /SMAICL/,/SMAIET/and/SMAIDP/ofSMAI. SeetheMFDforSMAI (seesection 4.27.9). The following differences areworthy ofnote. I.In/SMA21@/,words 15and16areundefined andwords 23through 36define matrix control blocks forMGGandBGG. 2./SMA2CL/isonly 131words inlength, thelasttwowords of/SMAICL/being reserved forvariables unique toSMAI. 4.28.9.3 Arithmetic Considerations Floating point arithmetic operations arecarried outindouble precision. and[Bgg] arerealsymmetric double precision matrices. 4.28.10 DiaBnostic MessaBesBoth[Mgg] Seethediagnostic message section intheMFDforSMAI (section 4.27.10). 4.28-9 (711170)"},"title":"Programmer's Manual P43"},"/docs/programmers/programmers_manual_044/":{"data":{"":"4.29 4.29.1 4.29.2FUNCTION_ MODULEGPWG(GRIDPOINTWEIGHTGENERATOR) FUNCTIONAL MODULEGPWG(GRIDPOINTWEIGHTGENERATOR) Entry Point: GPWG Purpose Tocon_Dutethecenter ofmassofthestructurerelative toagiven point andfindthe principal inertias about thecenter ofgravity. 4.29.3 DMAPCalling Sequence GPWG BGPDT,CSTM,EQEXIN,MGG/_GPWG/V,Y,GRDPNT/V,Y,WTMASS 4.29.4 Input DataBlocks BGPDT CSTM EQEXIN MGG Notes:-Basic GridPoint Definition Table. -Coordinate System Transfor_tion Matrices. -Equivalance between external gridorscalar numbers andinternal nu_ers. -Partition ofmassmatrix -gset. I.BGPDT,EQEXIN andMGGcannot bepurged. 2.CSTMmustbepresent ifsome gridpoint ofthemodel isnotinbasic coordinates. 4.29.5 Output DataBlocks _GPWG -GridPoint Weight Generator Output Table. Notes: This datablock cannot bepurged. 4.29.6 Parameters GRDPNT WTMASS-Input-integer-default =-l.GRDPNT selects thegridpoint about which the inertias willbecalculated. IfGRDPN1 isnottheexternal IDofageometric gridpoint, thebasic originisused. -Input-real-default =l.O. WTMASS gives theratio ofmasstoweight forthe structure. Alloutput quantities areinweight units. 4.29-I (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.29.7 Method TheGridPointWeight Generator module calculates themasses, centers ofgravity, and inertias ofthegeneral mathematical modelofthestructure. Thedataareextracted fromthe[Mgg] matrix byusingarigidbodytransformation calculation. Thetransformation isdefined bythe global coordinate displacements resulting fromunittranslations androtations ofthewholebody aboutareference point. Because ofthescalar masseffects, thetotalmassmayhavedirectional properties, andthe center ofgravity maynotbeaunique location. Thiseffect isshown intheoutput bygiving for eachofthethreemasses itsowndirection andcenter ofgravity. Theinertia termsarecalculated byusingthedirectional masseffects. Theaxesaboutwhichtheinertia termsarecalculated may notintersect. However, theseaxesarethosewhichprovide uncoupled rotation andtranslation effects. Thisisthesignificance oftheterm\"center ofgravity\". Ifthestructural modelhas beenconstructed usingonlyrealmasses, thethreemasses printed outwillbeequal, thecenter of gravity willbeunique, andtheaxesoftheinertia termswillintersect atthecenter ofgravity. Theactual computation proceeds in4parts. I.Computation ofthe[D]Tmatrix takesplaceinsubroutine GPWGIA. Sixvectors areformed whichwilldescribe thesixmotions aboutthereference point. Thematrix [D]formed from thevectors whichdescribe rigidbodydisplacements inglobal coordinates intermsofthesix unitdisplacements androtations inbasic coordinates atthereference point: (Ug}=[D](Uo}(reference point). (I) Themethod ofgeneration isasfollows: EQEXlN isplaced incoreandsearched forGRDPNT toobtain itsinternal sequence number. If thevalueoftheparameter GRDPNT isnottheIDnumber ofaphysical gridpoint, thebasic origin isused. Assuming GRDPNT isaphysical gridpoint, BGPDT isreadtoobtain {Ro]forthe reference point. TheBGPDTfileisthenrewound. CSTM(ifpresent) isplaced incoreand readied forusebysubroutine PRETRS. Eachgridpoint intheBGPDT isconsidered inorder. Ifitisascalar point, zeroisstored ineachofthesixcolumns of[D]T. Ifitisagridpoint, {ri}:{Ri}-{Ro}: , (2) 4.29-2 (8/I/72)\nFUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) iscomputed where {Ri}isthebasic coordinate location oftheithgridpoint given inthe BGPDT table and{Ro}isthelocation ofthereference point. Thetransformation matrix tothegridpoint, i0r3 -i21[Tr]:-r30 l ’ r2-rI(3) isformed. Subroutine TRANSS calculates the3x3transformation matrix [Ti]fromglobal coordinates tobasic coordinates forthegridpoint. Thematrix piT:TiTTr1[d]:F’- L0:Ti(4) Therowsof[d]formthecolumns of[D]T.Thematrix [D]Tisgenerated a iscomputed. column atatimeandispacked outontoascratch file. 2.Ifallpoints were scalar points, GPWGreturns; otherwise subroutine TRANPI is called toform[D]from[D]T, 3.[Mo]iscomputed bytwocallstosubroutine SSG2B, [Mo] :[D]T[Mgg] [D]. (5) 4.Output quantities arecomputed asfollows: Moisunpacked, output andpartitioned asfollows: : tr] (Thematrix issymmetric, wherethesuperscripts tandrrefertotranslation androtation respectively.) Acheckismadeforinconsistent scalar masses. Let andt2 (7)6=/Z(Mij ) : i_j. (8) 4.29-3 (8/I172)\nMODULE FUNCTIONAL DESCRIPTIONS If_\u003e10-3,thecoordinates should berotated. Otherwise [S]=[I]. Ifrotation isnecessary, theeigenvectors of[t], {el} ,{e2} ,and{e3},aredetermined bythe Jacobi technique. Define [S]:[{eI},{e2} ,{e3}].(g) The[S]matrix isoutput. [Mt], [Mr]and[Mtr]arecomputed asfollows: [Mt]=[s]T[t][S], (IO) [Mtr]:[s]T[tr][S], (II) [Mr]:[s]T[-r][S]. (12) Thefollowing terms, defined intheprincipal axissystem {el}, {e2}, and{e3}, arecalculated andoutput: Themass terms are: : (13) MxMI’ My M2’ (14) =MzM3’ (15) the\"centers ofgravity\" are: tr MII Xx:‘Yx- tr M23 Xy-My’Yy- tr -M32 Xz-M’Yz-ztr tr -M13 M12 “x’zx: (161 tr tr M22 -M21 My’Zy=My’ (17) tr tr M31 M33 Mz,Zz=Mz (18) andtheinertias are: r 2_Mzy2 Ill=Mll-MyZy z’(19) r Il2=121=-Ml2-MzXzYz’(20) = = r XyZ.y, Il3 131 -Ml3-My =r x2_Mx2 122 M22 “Mzz Zx’(21) (22) 4.29-4 (8/I/72)\nFUNCTIONAL MODULEGPWG(GRIDPOINTWEIGHTGENERATOR) ==r-MxYxZx’ I32 123 -M23 133=M_3 MxYx2-MyXy2.(23) (24) These terms formthesymmetric matrix [I]. Forprinciple inertias eigenvalues andeigenvectors arefound suchthat: °°1FIlPl IP20 =[Q]T[I][Q]. (25) [Q]contains thenormalized eigenvectors (thedirections oftheprincipal inertias), and theIPiterms aretheeigenvalues. Thematrices [S]and[Q]areactually coordinate rotation matrices andshowthedirections oftheprincipal masses andinertias. 4.29.8 Subroutines Utility Subroutines PRETRS,TRANSS,TRANPI,SSG2B andGMMATS areused. Seesubroutine descriptions, section 3. 4.29.8.1 Subroutine Name: GPWGIA I.Entry Point: GPWGIA 2.Purpose: Toformthe[D]Tmatrix. 3.Calling Sequence: CALLGPWGIA(P_INT,BGPDT,CSTM,EQEXIN,DT,N_G_) P_INT BGPDT CSTM EQEXIN DT N_G_-External gridpoint idofreference point -integer -input. -GIN_ filenumber of_GPWG -integer -input. -GIN_filenumber ofCSTM-integer -input. -GIN_file number ofEQEXIN -integer -input. -GIN_file nu_er offileonwhich [D]Twill bewritten -integer -input. oFlagforallscalar problem- integer -output. N_G_ =0implies all scalars. 4.29.8.2 Subroutine Name: GPWGIB I.Entry Point: GPWGIB 4.29-5 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 2.Purpose: Toformoutput quantities asgiveninparagraph 4ofsection 4.29.7. 3.Calling Sequence: CALLGPWGIB (M_,GPWG,WTMASS,IP) M @GPWG WTMASS IP-GIN_filenumber of[Mo]matrix -integer- input. -GIN_filenumber of_GPWG-integer -input. -Masstoweight ratioparameter -real-input. -External gridpointidofreference point(=0ifbasicorigin wasused) -integer -input. 4.29.8.3 Subroutine Name: GPWGIC I. 2. method.EntryPoint: GPWGIC Purpose: Tocompute eigenvectors andvalues ofa3by3matrix bytheclassical Jacobi 3.Calling Sequence: CALLGPWGIC (B,E,EV,IFLAG) B -3by3inputmatrix -real-input. E 3by3matrix ofeigenvectors -real-output. EV 3eigenvalues -real-output. IFLAG Errortermination flag-integer -output. notconwrge. 4.29.9 Design Requirements GPWGrequires fourscratch files. OpencoreforGPWGIA isdefined at/GPWGAI/. coreforGPWGIB isdefined at/GPWGBI/. Thelayout ofopencoreisasfollows: C_MM_N /GPWBGI/ ) I1BGPDTentry CSTMDataBlock16words perentry GIN_bufferCSTMIfIFLAG\u003eO,GPWGIC could Open 4.29-6\nFUNCTIONAL MODULE GPWG (GRID POINT WEIGHT GENERATOR) C_N IGPWGAI/ INo] _GPWG36words for6by6matrix GIN_buffer 4.29.10 Diagnostic Messages Thefollowing fatal error messages mayoccur: 3007, 3008. 4.29-7\nFUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3) 4.30 FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3) 4.30.I Entry Point: SMA3 4.30.2 Pur__ Togenerate thefinal stiffness matrix, [Kgg], bygenerating amatrix oforder gforeach x general element inthemodel, andsuccessively adding this matrix to[Kgg], thestiffness matrix exclusive ofgeneral elements. 4.30.3 DMAP Calling Sequence SMA3 GEI,KGGX/KGG/V,N,LUSET/V,N,N_GENL/V,N,NOSIMP $ 4.30.4 Input Data Blocks -General Element Input. -Partition ofstiffness matrix exclusive ofgeneral elements -gset.GEl KGGX Note: I. 2. elements (i.e., there arenosimple elements). 4.30.5 O__utput Data Blocks KGG -Partition ofstiffness matrix -gset. inthemodel, including general elements. Not___e_e: KGGmaynotbepre-purged. 4.30.6 Parameters LUSET NBGENLGEIcannot bepre-purged. KGGX maybepre-purged. This implies that themodel consists entirely ofgeneral Contains contributions from allelements Input-integer-no default value. LUSET isthetotal number ofdegrees of Kxfreedom inthegdisplacement set. Itistheorder ofthe[gg]and[Kgg] matrices. Input-integer-no default value. NBGENL isthenumber ofgeneral elements in theGEldatablock. 4.30-I\nMODULE FUNCTIONAL DESCRIPTIONS NOSIMP - 4.30.7 Method 4.30.7.1Kx Input-integer-no default value. IfNOSIMP \u003cO,[gg]doesnotexist, i.e.,all elements ofthemodelaregeneral elements. IfNOSIMP zO,[K_g]_doesexist. Mathematical Considerations Twomatrices canbeusedtoformastiffness matrix foreachgeneral element intheGEl datablock: aflexibility influence coefficient matrix, [Z],andarigidbodymatrix, [S]. Theformer mustbepresent andmustbenon-singular; thelatter mayormaynotbepresent. Thesetofdegrees offreedom (scalar indexnumbers) usedby[Z]isdesignated the\"ui\"set; thesetofdegrees offreedom usedby[S]isdesignated the\"Ud\"set.Callthelength ofthe uisetm,andcallthelength oftheudsetn.[Z]ismbym,and[S]ismbyn. Foreachgeneral element inthemodel, thestiffness matrix corresponding tothegeneral element, [Kge], ismadeupoffourpartitions iftheudsetexists. Theyare: [Kii] :[Z]-I, [Kid] :[Z]-I[s] , [Kdi] =[s]T[z] -I= [Kdd] =[s]T[z]-I[s]T [Kid] ,(1) Thefourmatrices mustbemerged suchthatI): [Kge]: K.:Kdl,dd] and coordinates inorderofascending scalar indexnumbers. Iftheudsetdoesnotexist, then INge]:[Kii]=2)therowsandcolumns of[Kge]mustcorrespond toamerged listofbothuiandud [z]-I(2) (3) (4) (5) (6) 4.30-2\nFUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3) 4.30.7.2 Initialization TheGEIdatablock isopened, andtheheader record isskipped. Itisdetermined whether thenumber ofgeneral elements, f,isevenorodd. Thisisdonetoinsure thattheresult of thefinal matrix addition, where[Kgg] =[Krs]+[Kgef] , (7) f-l [Krs]=[K_g] +T[Kgei] , (8)i=l and[Kgef] isthefinal general element matrix, willbewritten ontheoutput datablock, KGG. KxIf[gg]doesnotexist, andthere isonlyonegeneral element, thentheGINOfilenumber (201) fortheKGGdatablock isstored inIFA,thevariable which contains theGIN(_filenumber of thefileonto which thecurrent [Kge]matrix willbepacked. Theprincipal logic ofthemodule driver, S,MA3, iscarried outinaloop inwhich, during eachpass oftheloop, a[Kge]matrix isgenerated andadded, using subroutine SSG2C, tothe running summatrix, [Krs]. 4.30.7.3 Generation andAddition ofaGeneral Element Matrix Thesteps involved intheprincipal loopoftheprogram areasfollows: I.Theloopcounter isincremented. 2.Thefirst three words ofthenextlogical record arereadfromGEl: theelement id; thelength oftheuiset,m;andthelength oftheudset,n. 3.Thematrix control blocks forthescratch files IFBandIFCareinterchanged provided that: a.this isnotthefirst passthrough theloop; b.thisisnotthesecond passthrough theloopandthenumber ofgeneral element isodda__n_dthere areonlygeneral elements inthemodel; and c.this isnotthesecond timethrough theloopand[K_g] exists. 4.30-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.Itisdetermined whether theorders ofthe[Z]and[S]matrices aresuchthatthe in-core matrix routines GMMATD andINVERD canbeused. Thisisaccomplished asfollows. Define p=2(m+n+m2+n2+2mn), (9) q=2(m+n+m2)+3m, (I0) and r=max(p,q) . (II) pisthenumber ofcomputer wordsneeded tostore: I)theuiandudsetsintwo different sorts; 2)thedouble precision mbym[Z]matrix; 3)thedouble precision nbyn[s]T[z]‘I[s] matrix; and4)thedouble precision mbyn[S]matrix andthedouble precision mbyn[Z]‘I[s] matrix. qisthenumber ofcomputer words needed tostore: I)theuiandudintwodifferent sorts; 2)thedouble precision mbym[Z]matrix; and3)3mcellsofscratch storage tobeusedbysubroutine INVERD. Ifrislessthantheavailable amount ofcore,thein-core routine, SMA3A, isGalled tocompute [Kge]. Otherwise: I)SMA3Bgenerates [Z]and-[s]T; 2)FACTOR decomposes [Z]intoitstriangular factors; 3)SSG3Acomputes [Z]-I; 4)SSG2Bcomputes -[s]T[z]; 5)TRANPI transposes -[s]T; 6)SSG2Bcomputes -[Z][s]T; 7)SSG2Bcomputes [s]T[z]-I[s]; and8)SMA3Cbuilds thefinal [Kge]matrix oforder gbyg. 5.Thematrix [Kge]having beengenerated asinstep4,SSG2Ciscalled toadd[Kge]to [Krs]. 4.30.8 Subroutines Utility routines GMMATD, INVERD, FACTOR, SSG3A, SSG2B, TRANPI andSSG2C areusedinthis module. 4.30-4\n4,3O.8.1 l. 4.30.8.2 I. 2. 3,FUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3) Subroutine Name:SMA3A 2. routines GMMATD andINVERD. 3.Calling Sequence: CALLSMA3A (MCBA) COMMON /GENELY/-seedescription below (section 4.30.9.2). MCBA- 4.Method:Entry Point: Sr,_3A Purpose: Tobuild agbyggeneral element matrix, [Kge], using thein-core matrix Thematrix control block corresponding to[Kge]. Wordlisinput; words 2through 7areoutput. Theuisetandtheudset(ifpresent) ofscalar index numbers arereadinto core, andalistLisformed oflength m+n,suchthatL(k) =_implies thecthentry ofthestring: {Uil,Ui2 ,….Uim,Udl,Ud2 …..Udn} isthekthsmallest. Them2single precision elements of[Z]arereadandstored atdouble precision locations. [Z]-lis computed using INVERD. [S],ifpresent, isreadandstored atdouble precision locations. GMMATD iscalled twice tocompute [Z]-I[s] and[s]T[z]-I[s]. Theelements of[Kge], as defined inEquation 5,areoutput totheGINOfilecorresponding toMCBA(1) with non-zero terms intherowandcolumn positions specified bytheuiandudsets. determines thesequence ofelements tobeoutput foranyonecolumn. Subroutine Name: SMA3B Entry Point: SMA3B Purpose: Tocreate [Z]and[S]fromtheGEIdata. Calling Sequence: CALLSMA3B (IFLAG) C_MM_N /GENELY/-seedescription below (section 4.30.9.2). IFLAG -IIFLAG =-Iimplies [S]doesnotexist. 1IFLAG limplies [S]exists. -integer -output. 4.ThelistL Method: TheGEIdatablock isreadfortherownumbers andnon-zero terms of[Z]. These areoutput instandard NASTRAN matrix format bysubroutine BLDPK. IS]Tisgenerated inasimilar manner. (-[S]Tiscreated rather than[S]forcomputational ease insubse- quent calculations -seeparagraph 4insection 4.30.7.3 above). 4.30-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.30.8.3 Subroutine Name: SMA3C I.EntryPoint: SMA3C 2.Purpose: Tocreate the[Kge]matrix from[Z]-I, 3.Calling Sequence: CALLSMA3C (IFLAG, KE)-[z]“l[s],.[s]TEz] -Iand[s]T[z]-I[s]. C@MM_N /GENELY/ -seedescription below (section 4.30.9.2). COMMON //LUSET sizeofproblem. IFLAGisasdescribed inSMA3B. Hereitimplies [Kge]=[Z]-I. KE-Matrix control blockfor[Kge]-integer -input/output. 4.Method: Amatrix ofgsizeiscreated from[Z]-I, [Z]-I[s], -[s]T[z] and[s]T[z]-I[s] withthenon-zero termsintherowandcolumn positions specified bytheuiandudlists. Thismatrix canbeaddedtotheexisting [Krs]toreflect thestiffness termsofthis general element. 4.30.8.4 BlockDataSubprogram: SMA3BD Purpose: Toinitialize theGINOfilenumbers andGINOoptions indicators in/GENELY/, whichisdiscussed below. 4.30.9 Design Requirements 4.30.9.1 OpenCoreDesign Theopencorecommon blockforthemodule driver SMA3andsubroutine SMA3A isdefined by thefollowing F_RTRAN statements: I.D@UBLE PRECISI@N DQ(1) 2.INTEGER IQ(1) 3.DIMENSION Q(1) 4.C_MMON /GENELX/ Q 5.EQUIVALENCE (IQ(1),DQ(1),Q(1)) SMA3usesopencoreonlyforoneGIN_buffer, which isreserved fortheGEldatablockwhile SMA3A, SMA3B, orSMA3Cisexecuting, andwhichisreserved forusebySSG2Cwhenthisroutine adds[Kge]to[Krs]attheendoftheprincipal loopinthedriver. 4.30-6\nFUNCTIONAL MODULE SMA3 (STRUCTURAL MATRIX ASSEMBLER -PHASE 3) SMA3A usesloworder opencore asoutlined inparagraph 4insection 4.30.7 above. Theopencore forsubroutine SMA3B isdefined at/SMAB3/andisusedfortwoGIN_buffers inhighorder opencore. Theopencore forsubroutine SMA3C isdefined at/SMAC3/andisusedfor: l)theuiandud setsinloworder opencoreand2)sixGIN_buffers inhighorder opencore. 4.30.9.2 Common Storage Requirements Thecommon block /GENELY/isused for: l)GIN2filenumbers; 2)GIN_option indicators; 3)matrix control blocks; and4)zeropointers tosub-arrays in/GENELX/when SMA3A executes. Itisdefined asfollows: COMMON /GENELY/IFGEI,IFKGGX ,IF{_UT,IFA,IFB,IFC,IFD,IFE,IFF,INRI.4,_UTRW,CLSRW,CLSNRW, E_R, NE_R,MCBA(7),MCBB(7),MCBC(7),MCBE(7),MCBF(7),MCBKGG(7)IUI_IUD,IZI,IS,IZIS,ISTZIS,IBUFF3(3), LEFT Variabl e Definition IFGEI,IFKGGX,IF_UT GIN filenumbers forthetwoinput datablocks andtheoutput datablock respectively. IFA GIN_filenumber forthecurrent [Kgelbeing computed. IFB,IFC GIN_filenumbers for[Krs]and[Krs]+[Kgel matrices. Theyare\"flip-flopped” suchthat IFC=IF_UT forthefinal matrix addition. IFD,IFE,IFF GIN_file numbers forscratch files which are used insubroutine SMA3C. INRW,_UTRW,CLSRW,CLSNRW,E_R,NE_R GIN0option indicators asdefined insection 4.27.9.3. MCBA,MCBB,…,MCBF,MCBKGG Matrix control blocks forthematrices corres- ponding toIFA,IFB,…,IFF,andIFKGXX. IUI,IUD,IZI,IS,IZIS,ISTZIS Zero pointers tothesub-arrays in/GENELX/ corresponding to:I)u_set;2)uAset;3)[Z]-’; 4)IS]; 5)[z]-l[s] and6)[s]T[z]-I[s]. Note thatIZI,IZIS, ISTZIS arezeropointers into doubleprecision arrays. IBUFF3(3) Three wordbuffer which contains thegeneral element id,mandn. LEFT Thenumber ofcomputer words currently remaining in/GENELX/. 4.30-7\nMODULE FUNCTIONAL DESCRIPTIONS 4.30.9.3 Arithmetic Considerations Allfloating pointarithmetic operations arecarried outindouble precision. 4.30,10 Diagnostic Messages InSMA3A, system fatalerror2028canoccur. Seesection 6oftheUser’sManual fordetails. 4.30-8\nFUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4) 4.31 FUNCTIONAL MODULE GP4(GEOMETRY PROCESSOR -PHASE 4) 4.31.I Entry Point: GP4 4.31.2 Purpose GP4assembles thevarious displacement sets andbuilds thedisplacement setdefinition table (USET). Additionally, forstatics problems, GP4analyzes subcases based onsingle-point andmultipoint constraint sets, andsetparameters tocontrol execution oftheRigid Format. 4.31.3 GP4 4.31.4 CASECC GEOM4 EQEXIN SIL GPDT Note: 4.31.5 RG YS USET XX Note:DMAPCallin9Sequence CASECC,GEBM4,EQEXIN,SIL,GPDT /RG,YS,USET,XX /V,N,LUSET /V,N,MPCFI /V,N,MPCF2 / V,N,SINGLE /V,N,_MIT /V,N,REACT /V,N,NSKIP /V,N,REPEAT /V,N,N_SET /V,N,N_L / V,N,NBA /C,N,SSID $ InputDataBlocks CaseControl DataTable. -Displacement setdefinitions. -Equivalence between external gridorscalar andinternal numbers. -Scalar IndexList. -GridPointDefinition Table. OnlyGEBM4maybepurged. Output Data Blocks -Multipoint constraint equations matrix. -Constrained displacement vector(s) set. -Displacement setdefinition table. -Reserved forfuture use. YSmaybepurged. 4.31.6 Parameters LUSET -Input-integer-no default. MPCFI -Output-integer-no default. constraints, -lotherwise.Degrees offreedom intheg-displacen_nt set. +lifthecurrent subcase contains multipoint 4.31-I (811172)\nMODULE FUNCTIONAL DESCRIPTIONS MPCF2 SINGLE _MIT REACT NSKIP REPEAT - NOSET - N_L NBA SSID - 4.31.7 MethodOutput; integer, nodefault. +Iifthecurrent subcase contains adifferent multipoint constraint setfromthelastsubcase, -Iifnonewmultipoint constraint setornomultipoint constraints inthecurrent subcase. -Output, integer, nodefault. constraints, -Iotherwise. -Output, integer, nod_fault. -Iotherwise. -Output, integer, nodefault.+Iifthecurrent subcase contains single-point +Iifthemodel contains omitted coordinates, +Iifthemodelcontains supports, -Iotherwise. Inputandoutput, integer, deault =O.Number ofrecords toskiptoreachthe firstrecord intheCaseControl DataBlock forthenextsubcase. (NSKIP =0for thefirstsubcase). Output, integer, nodefault. problem, +Iotherwise. Output, integer, nodefault. -IifMPCFI=-IandSINGLE :-IandOMIT:-Iand REACT=-I,+Iotherwise. Output, integer, default =+I.-Iifalldegrees offreedom inthemodel belong todependent displacement sets(i.e., nodegree offreedom belongs toan independent set),+Iotherwise. Output, integer, default =+I.-IifMPCFI=-IandSINGLE =-Iand_MIT=-I, +Iotherwise. Input, integer, default =O.Reserved forfuture use.-Iifthecurrent subcase isthelastsubcase inthe CASECC isreadforeachsubcase. Parameters aresettocontrol thereturn pointforthenext subcase. Theuser-requested constraint setnumbers areextracted andsaved forcontrol ofthe following steps. Themulti-point constraint cards (MPC)eachdefine arowofaconstraint matrix equation: [Rm]{um}+[Rn]{un}:0 (I) 4.31-2 (811/72)\nFUNCTIONAL MODULEGP4(GEOMETRYPROCESSOR-PHASE4) For’eachrequestedMPCset,theMPCcardimagesarereadfromGEBM4,andthegridpointsand theirscalarcoordinates (orscalarpoints)areconvertedtothescalardegreeoffreedomnumbers. TheEQEXINandSILdatablocksareplacedincore,thepoint\"id\"numberisfoundasthefirst entryofapairinthefirstrecordofEQEXIN,thecorresponding numberinthesecondentryofthe pairistheinternalgridpointindex.TheithpositionoftheSlLcontainsthevalueofthe scalardegreeoffreedomnumberforthefirstdegreeoffreedomofpointi.TheSILvalue,SILu, forthecomponentc,(c=1,2…..6)ofagridpointpisfoundbytheequation: SIL :SIL +(c-I) (2) u p TheSILofapoint isthescalar index ofitsfirst degree offreedom. Thepoint “id’s” and components given ontheMPCcards areconverted toscalar index numbers, asorted list isformed oftheumscalar indices, (see definition below ofthesets defined inUSET), andthedata are written onSCRI, ascratch file. Each term intheequation ispaired with apacked word giving itsequation number anditsSILvalue. Theequation data arenowsorted togroup thedata byeach scalar index number inorder ofincreasing dependent umpoint number. This essentially creates a Fq column stored matrix LRg_. Each rowinthematrix corresponds toaumpoint. Each column corre- sponds toaunique scalar index (Ugpoint). TheSUP_RT (Ur), ASET (ua)andOMIT (uo)card images areread from GERM4. Thegrid andcom- ponent numbers aresorted andwritten onSCRI. TheGPDT isread, andalist isformed ofthe permanent single-point constraints (Usg) which were identified ontheGRID bulk data cards. This list iswritten onSCRI. TheSPCADD, SPCI andSPCbulk data card images identify thesets ofsingle-point constraints used asboundary points (Usb) andinclude anypossible constrained displacement values (Ys). The user-requested setofSPCcards areextracted from theCASECC data block andtheSPCADD cards. Therequested SPCandSPCI card images areread, thegrid andcomponent “id” numbers areconverted toscalar indices, andapaired list ofscalar indices andtheir corresponding displacement values iswritten onSCRI. Thenon-zero Ysvalues formed intheprevious step form apacked vector with indices given bytheir position inthelist. This istheYSdata block, avector packed relative totheusset. TheUSET data block contains onecoded word foreach scalar degree offreedom intheentire structure. Theword iscoded toidentify thesetorsets ofcoordinates towhich thescalar 4.31-3 (Bl1172)\nMODULE FUNCTIONAL DESCRIPTIONS degree offreedom belongs (seeSection 2.3.13). Anareaofcoreissetequal tozero,andthe listsofum,uo,uranduspoints arereadfromSCRI. Thescalar indexofacoordinate corre- sponds toaposition incore. Thewordinthatposition ismodified toidentify tilesettowhich thatscalar indexbelongs. Withtheurn,Uo,uranduspoints known, theUg,un,uf,uaandu_ points maybeidentified. The\"nesting” ofthesesetsfollows thescheme: U m u S uo un ………….1 u_ IuaUg USETiswritten asonelogical record ontheUSETdatablock. Thefinaloperation istoprocess eachdegree offreedom inUSETtoinsure thatthedisplace- mentsetdefinitions areconsistent andassign anyotherwise undefined degrees offreedom inUSET. Thegoverning rule(asmaybenotedinthenesting scheme) isthateachdegree offreedom may belong toatmostonedependent subset. Ifanyinconsistent definitions arefound, theyare written onSCRI. Wheneachpointhasbeenanalyzed, EQEXIN andSILarereadintocore. Then SCRIisread,and,foreachentry, anerrormessage isqueued. MESAGE isthencalled toabnormally terminate GP4. Unassigned degrees offreedom areassigned according tothefollowing: I.IfanyASET(orASETI) cardsarepresent, undefined degrees offreedom willbe placed intheuoset. 2.if_MIT(or_MITI) cardsarepresent, undefined degrees offreedom willbeplaced inthe uaset.Thesedegrees offreedom mayalsoberedundantly specified onASET(orASETI) cardsifdesired. Inthiscaseallnon-uosetdegrees offreedom mustbespecified since rulelapplies. 3.Ifneither ASET(orASETI) nor_MIT(or_MITI) cards arepresent, allfreedegrees of freedom willbeassigned totheuaset. 4.31-4 (8/1/72)\nFUNCTIONAL MODULEGP4(GEOMETRYPROCESSOR-PHASE4) 4.31.7.1 Definitions oftheSetsDefinedinUSET UgAllstructural degreesoffreedomdefinedbygridandscalarpoints. umDependentcoordinates usedinthemultipoint constraint equations. Definedas thefirstdegreeoffreedomofanMPCcard. un-Allstructural degreesoffreedomexceptum. us-Allfixedpoints.TheUsgpointsaredefinedbytheGRIDcardsandhaveadisplace- mentofzero.TheUsbpointsaredefinedbytheSPCcardsandmayhaveaconstrained displacement. uf-Alldegreesoffreedominthestructureexceptumandus. uo-Theseare\"omittedcoordinates” definedby_MITandBMITIcards.Instatics,the structural matrixispartitioned, andthesedegreesoffreedomaresolvedseparately. Indynamics,thedisplacements ofthesepointsareapproximated bytheirstatic displacements undermassloads. ua-Thesearetheunconstrained degreesoffreedomofthesystem.Theyincluderigid bodymodesindynamics. ur-Thesearefictitious supportsdefinedbytheSUP_RTcards.Indynamicsandinertia relieftheelasticdisplacements aremeasuredrelativetothesepoints. u_-Thissetincludesalldegreesoffreedomnotdefinedbytheum,us,uoandurpoints. Thestiffnessmatrixdefinedbythesepointsisusedforthesolutionofdisplacements versusloads. 4.31.8Subroutines Themodule GP4consists ofamainsubroutine, GP4,andanauxiliary subroutine, GP4PRT. 4.31.8.1 Subroutine Name: GP4PRT l• 2.EntryPoint: GP4PRT Purpose: a.Prints, atuserrequest viaDIAG21,alistofdegrees offreedom. Foreach degree offreedom, anindication ismadeidentifying thesetstowhichitbelongs. b.Prints, atuserrequest viaDIAG22,thecontents ofselected displacement sets. Foreachset,alistofalldegrees offreedom belonging tothesetisgiven. 4.31-5 (8/I172)"},"title":"Programmer's Manual P44"},"/docs/programmers/programmers_manual_045/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 3, 4.Calling Sequence: CALLGP4PRT (BUF) Method: TheDIAGflagsaretested andlocalvariables set.TableEQE×IN isthenread intoopencoreandsorted. IfDIAG21ison,tableUSET(already inopencore)is examined andtheexternal degree offreedom isextracted fromEQEXIN andprinted along withthesetindications. IfDIAG22ison,transpose process takesplace. 4.31.8.2 Subroutine Name: SCALEX I.EntryPoint: SCALEX 2.Purpose: Decodes packed component codes. 3.Calling Sequence: CALLSCALEX (I,C,L) I=Valuetobedecoded C=Ifnon-positive, return afterloading IintoL(1). L=Arrayintowhich thedecoded values areplaced. 4.31.9 Design Requirements Themaximum storage requirement forGP4isonewordperdegree offreedom (i.e., LUSET=6* (number ofgridpoints) +number ofscalar points) plusoneGIN_buffer. Itsopencoreisdefined by/GP4C_R/. Twoscratch filesareusedbyGP4. 4.31.10 Diagnostic Messages Thefollowing messages maybeissued byGP4: 2045,2048,2049,2050,2051,2052,2053,2101,3008,3001,3002,2110 4.31-6 (8/I/72)\nFUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) 4.32 4.32.1 4.32.2FUNCTIONAL MODULEGPSP(GRIDP_INTSINGULARITY PRBCESS_R). EntryPoint: GPSP, TheGPSTdatablock contains data onpossible stiffness matrix singularities. These singu- larities mayberemoved through theapplication ofsingle ormultipoint constraints. TheGPSP module checks eachsingularity against thelistofconstraints, andifthesingularity isnot removed, writes dataforwarning theuser. 4.32.3 DMAPCallin 9Sequence GPSP GPL,GPST,USET,SIL/_GPST $ 4.32.4 Input DataBlocks GPL-GridPoint List. GPST-GridPoint Singularity Table. USET -Displacement setdefinitions table. SIL -Scalar Index List. Note: Noinput datablock canbepurged. 4.32.5 Output DataBlocks OGPST -Unremoved Grid Point Singularities. This datablock willbeprocessed bythe_FP (Output File Processor) module. 4.32.6 Parameters None. 4.32.7 Method USET isreadintocore. TheUSETdatablock contains oneword foreachdegree offreedom in thestructural model. Thisword identifies thedisplacement coordinate setstowhich thecoordi- natebelongs. Eachentry intheGPSTdatablock contains theorder ofthesingularity andthe scalar index numbers ofthedegrees offreedom involved. Thelogic ofthealgorithm depends on theorder ofthesingularity. Foreachtypethelogic is: I.Iforder =l,thecontents oftheGPSTdata are: a._RDER :1 4.32-I\nMODULE FUNCTIONAL DESCRIPTIONS b.Number ofwordsfollowing c.NI d. N21maynotappear e.N3) NI,N2andN3arethescalar indices ofthedegrees offreedom whichwillremove the singularity ifconstrained. Ifthesingularity isnotremoved, the_GPSTdataisoutput. 2.Iforder=2: a.CRDER =2 b.Number ofwords following c.N11 d.N21 e.N1z f.N2z maynotappear g.N13 h.Nz3 Eachpairofindices identifies twodegrees offreedom whichcausethesingularity. If bothindices foranypairbelong totheUSET(UMorUS),thesingularity isremoved. If onlyoneofthedegrees offreedom inapairisconstrained byausorumcoordinate, the singularity order isnow_RDER=I.Thenumbers listed arenotunique, andmorethanone oftheNijindices maybelong totheusorumsets. Keeping thesamesequence, the unconstrained scalar indices ineachpartially constrained pairislisted inthe_GPST in theformforORDER=I. 3.Iforder=3: a.RDER=3 b.Number ofwords following c.NI d.N2 e.N Allthreeindices (NI,N2,andN3)mustbelong totheusorumsetstoremove the 4.32-2\nFUNCTIONAL MODULE GPSP (GRID POINT SINGULARITY PROCESSOR) singularity. Ifoneortwoofthecoordinates areconstrained, theorder istwoorone,and theremaining scalar indices orindex islisted inthe_GPST. Ifanysingularities areunremoved, amessage isgiven tothiseffect. AlsotheSIL values must beconverted toexternal gridpoint-component notation foruser readability. Thefirst timeanunremoved singularity isdetected, SILisreadintocorebeneath USET, and GPLisplaced beneath SIL. EachSILvalue islooked upinSILforapointer intoGPLtothe external gridpoint ID.Scalar points aredifferentiated fromgrid points. Data is output tothe_GPST intheorder: gridpoint ID,type, singularity order andcomponents. Whenallentries intheGPSThavebeenprocessed, theroutine returns. 4.32.8 Subroutines None. 4.32.9 Design Requirements Opencoreisdefined at/GPSPA/. C_I_N /GPSPS/ USET SIL GPL _GPSP Buffer GPSP Buffer Scratch Buffer- _SET,GPL,SIL} } }LUSET (Length ofUSET) LSIL+I (Length ofSIL+I) Last cellhasLUSET stored LGPL (Length ofGPL) GIN_buffer GIN_buffer GIN_buffer 4.32.9.1 Allocation ofCore Storage Ifnosingularities exist, USET plustwoGIN_buffers mustbeheld incore. exist, USET, SIL, 6PLplus three GIN_buffers mustbeheldincore.Ifsingularities 4.32-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.32.10 Diagnostic Messages Thefollowing diagnostic messages mayoccur: 3007 (iftheGPSTdoesnotcontain legal SIL numbers, indicating aprogramming error); 3008 (ifthecorestorage requirements given insection 4.32.9.1 arenotmet). 4.32-4\nFUNCTIONAL MODULEMCEI(HULTIPOINTCONSTRAINTELIMINATOR -PHASE l) 4.33 FUNCTIONAL MODULE MCEI (MULTIPOINT CONSTRAII_T ELIMINATOR -PHASE l) 4.33.1 Entry Point: MCEI 4.33.2 Purpose MCEIpartitions [Rg]into[Rm]and[Rn]andthen solves thematrix equation [Rm][Gm] -[Rn] for[Gm]. 4.33.3 DMAPCallin 9Sequence MCEI USET,RG/GM $ 4.33.4 Input DataBlocks -Displacement setdefinitions table. -Multipoint constraint equations matrix. Neither USETnorRGmaybepurged.USET RG Note: 4.33.5 Output DataBlocks GM Note: 4.33.EMultipoint constraint transformation matrix -mset. GMmaynotbepurged. Parameters None 4.33.7 Method [Rg] isamatrix with eachrowdefining aconstraint equation. Therowscalar indices correspond totheumsetofcoordinates andthecolumn indices correspond totheUgset. Thefirst operationofMCEI istopartition [Rg]into[Rm]and[Rn]. MCEIA performs thisoperation by initializing /PARMEG/andcalling PARTN (seesection 3.5.6 forPARTN details). Thesecond operation ofMCEIistosolve thematrix equation [Rm][Gm]=-JRn] (I) 4.33-I\nMODULE FUNCTIONAL DESCRIPTIONS for[Gin]. If[Rm]isdiagonal, tileoperation isstraightforward, InthiscaseMCEIDis called. Theterms-riiarestored incore,the[Rn]matrix isreadinterpretively by INTPK, andthetermsof[Gm]areFormed fromtheequation r.. gij r.II where thetermsinthenumerator belong to[Rn]andthoseinthedenominator belong to[Rm]. [Rm]isnotdiagonal, Equation 1issolved bydecomposition andforward-backward substitution. Inthiscase,MCEIBiscalled. MCEIBperforms anunsymmetric decompositiun of[Rm]by initializing /DC_MPX/ andcalling DECOMP. MCEICisthencalled byMCEI. MCEIC performs a forward-backward substitution tosolvefor[Gm]byinitializing /GFBSX/ andcalling GFBS. Seesection 3.5.15 and3.5.19 forfurther details onDECOMP andGFBS,respectively. 4.33.8 Subroutines 4.33.8.1 Subroutine Name: MCEIA I.EntryPoint: MCEIA 2.Purpose: Topartition [Rg]into[Rm]and[Rn]. 3.Calling Sequence: CALLMCEIA 4.33.8.2 Subroutine Name: MCEIB I.EntryPoint: MCEIB 2.Purpose: Todecompose [Rm]intoloweranduppertriangular factors. 3.Calling Sequence: CALLNCEIB 4.33.8.3 Subroutine Name: MCEID I.EntryPoint: MCEID 2.Purpose: Tosolvethematrix equation [Rm][Gm] diagonal.=[Rn]for[Gin]where [Rm]is 3.Calling Sequence: CALLMCEID 4.33.9 Design Requirements 4.33-2(2) If\nFUNCTIONAL MODULEMCEI(MULTIPOINT CONSTRAINT ELIMINATOR -PHASEI) 4.33.9.1 Allocation ofCoreStorage Themaximum corestorage requirement inthemodule isonedouble precision vector in theumdisplacement setplusthree GINObuffers. 4.33.9.2 Environment Communication ofGIN_filenames toeach ofthephases ofMCEIoccurs through blank C_,I_N. Thefourphases aredesigned sothateachmaybeinaseparate overlay segment. coreforeachofthephases isasfollows: MCEIA: /MCEAI/ MCEIB: /MCEBI/ MCEIC: /MCECI/ MCEID: /MCEDI/. 4.33.10 Diagnostic Messages Thefollowing messages maybeissued byMCEI: 3005, 3016Open 4.33-3\n4.34 4.34.1 4.34.2FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2) FUNCTIONAL MODULE MCE2 (MULTIPOINT CONSTRAINT ELIMINATOR -PHASE 2) Entry Point: MCE2 Purpose MCE2 partitions thestiffness matrix [Kgg] into[Knn],[Kmn]and[Kmm]andthen performs thematrix reduction [Knn]=[_nn]+[GmIT[Kmn]+[_mnIT[Gm]+[Gm]T [_mm][Gm] Similar partitions andreductions areperformed on[Mgg], [Bgg] and[K_g] ifthese matrices arenotpurged. 4.34.3 D[CAPCalling Sequence MCE2USET,GM,KGG,MGG,BGG,K4GG/KNN,MNN,BNN,K4NN $ 4.34.4 Input DataBlocks USET GM KGG MGG BGG K4GG Note:-Displacement setdefinitions table. -Multipoint constraint transformation matrix -mset. -Partition ofstiffness matrix -gset. -Partition ofmassmatrix -gset. -Partition ofdamping matrix -gset. -Partition ofstructural damping matrix -gset. MGG,BGGandK4GGmaybepurged. 4.34.5 Output DataBlocks KNN MNN BNN K4NN Note:-Partition ofstiffness matrix -nset. -Partition ofmassmatrix -nset. -Partition ofdamping matrix -nset. -Partition ofstructural damping matrix -nset. MNN,BNNorK4NNmaybepurged onlyifMGG,BGGorK4GGispurged. 4.34.6 Parameters None 4.34-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.34.7 Method Using subroutine UPART togenerate rowandcolumn partitioning vectors andsubroutine MPART toperform theactual partitioning, [Kgg] ispartitioned asfollows: l_ FnniKnm1 _—,—-. (I)Lmn,Kmm] Subroutine ELIMiscalled toperform thefollowing matrix reduction: [Knn]=[Knn]+[Gm]T[_mn]+[Kmn]T[Gm]+[Gm]T[_m][Gm]. (2) ,K4Foreachofthedatablocks corresponding tothematrices [Mgg], [Bgg][gg]whichisnot purged, theabovepartitioning andmatrix reductions areperformed. 4.34.8 Subroutines Calls aremade tothefollowing matrix utility routines: UPART seesection 3.5.9 fordetails MPART seesection 3.5.9 fordetails ELIM seesection 3.5.22 fordetails 4.34.9 Design Requirements 4.34.9.1 Allocation ofCoreStorage Themaximum storage requirement forMCE2 isfour times thenumber ofdegrees offreedom intheundisplacement setplusoneGIN@buffer. 4.34.9.2 Environment ThemoduleMCE2consists ofonesubroutine, MCE2. Callsaremadetothematrix utility routines asindicated above. Sixscratch filesareused. 4.34-2\nFUNCTIONAL MODULE SCEI (SINGLE-POINT CONSTRAI:_T ELIMINATOR) 4.35FUNCTIONAL MODULE SCEI 4.35.1 Entry Point: SCEI 4.35.2 Pu___ose(SINGLE-POINT CONSTRAINT ELIMINATOR) 4.35.5Toreduce thensetmatrices tofsetmatrices byremoving thesingle-point constraints. 4.35.3 DMAPCallinq Sequence SCEI USET,KNN,MNN,BNN,K4NN/KFF,KFS,KSS,MFF,BFF,K4FF/ $ 4.35.4 Input DataBlocks USET -Displacement setdefinitions table. KNN -Partition ofstiffness matrix -nset. MNN -Partition ofmassmatrix -nset. BNN -Partition ofdamping matrix -nset. K4NN -Partition ofthestructural damping matrix -nset. Notes: I.USETcannot bepurged. 2.KNN,MNN,BNN andK4NNcanbepurged. 3.Atleast onedegree offreedom must belong tothefandssets. Output DataBlocks KFF -Partition ofstiffness matrix after single-point constraints havebeen removed -fset. KFS -Partition ofstiffness matrix after single-point constraints havebeen removed. KSS -Partition ofstiffness matrix after single-point constraints havebeen removed -sset. MFF -Partition ofmassmatrix after single-point constraints havebeenremoved - sset. BFF -Partition ofdamping matrix after single-point constraints havebeenremoved - fset. K4FF -Partition ofstructural damping matrix withsingle-point constraints removed - fset. 4.35-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.35.6 Parameters None 4.35.7 Method Thematrices arepartitioned using USET(UN,UF,US) asfollows (see section 1.7fordetails): I. If[Knn] exists: [Knn] “-_\u003e _Kff !Kf_s] (I) —i- ° LKsfiKss] The[Kff], [Kfs]and[Kss]partitions aregenerated andsaved. 2.If[Mnn]exists: 3.If[Bnn] exists: K44.If[nn]exists::Mfs [Mnn] :\u003e LMsfff” !Mss\"(2) [Bnn] :\u003e -B—,-B- Esf;ss(3) K4 _iK4s Inn] =\u003e L\"t,, 4 Forthe[Mnn], [Bnn] and[Knn] matrices, only the\"ff\" partition isgenerated andsaved. Onecall toUPART followed by4calls toMPART accomplishes theabove tasks. 4.35-2\nFUNCTIONAL MODULE SCE] ($1NGLE-POINTCONSTRAINT ELIMINATOR) 4.35.8 Subroutines UPART andMPART arecalled. Seesubroutine description insection 3.5._ 4.35.9 Design Requirements Onescratch fileisnecessary. 4.35-3\nFUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIONER -PHASEl) 4.36 FUNCTIONAL MODULE SMPI(STRUCTURAL MATRIX PARTITIQ_IER -PHASE]) 4.36.1 EntryPoint: SMPI Purpose 4.36.2 SMPI partitions [Kff] into [Kaa], and[Koa]and[Koo]. Thematrix equations [Koo] [Go] :-[Koa] issolved for[Go]. [Kff] isthen reduced bythematrix equation [Kaa] =[Kaa]+[Koa]T[Go]. If[Mff] isnotpurged, itisreduced bytheequation [Maa] =[Maa]+[Go]T[Moa] +[Moa]T[GO] +[Go]T [Moo][Go]. Similarly, [Bff] and[K_f] arereduced. 4.36.3 DMAPCalling Sequence SMPI 4.36.4 USET KFF MFF BFF K4FF Note: 4.36.5 G_ KAA - K00 - L@O - u_o - MAA - M_ - M_A - BAA - K4AA -USET,KFF,MFF,BFF,K4FF/GO,KAA,KBO,LOO,UO_,MAA,MOO,MOA,BAA,K4AA $ Input Data Blocks -Displacement setdefinitions table. -Partition ofstiffness matrix -fset. -Partition ofmass matrix -fset. -Partition ofdamping matrix -fset. -Partition ofstructural damping matrix -fset. MFF, BFForK4FF maybepurged. Output Data Blocks Structural matrix partitioning transformation matrix. Partition ofstiffness matrix -aset. Partition ofstiffness matrix -oset. Lower triangular factor ofKOOB -oset. Upper triangular factor ofKO_B -oset. Partition ofmass matrix -aset. Partition ofmass matrix -aset. Partition ofmass matrix. Partition ofdamping matrix -aset. Partition ofstructural damping matrix -aset. 4.36-I (8/I/72)\nNote:MODULE FUNCTIO_IAL DESCRIPTIONS 4.36.6I.U_@andL_arenotstandard formmatrices. Theirformat iscomnatible onlyfor inputtosubroutine FBS. 2.HAA,rl_,H_A,BAAorK4AAmaybepurged onlyifMFF,BFForK4FFarepurged. Parameters None. 4.36.7 Hethod Usingsubroutine UPARTtogenerate rowandcolumn partitioning vectors andsubroutine MPART toperform theactual partitioning, [Kff]ispartitioned asfollows: KaaIKao [Kff]_\u003e – (I) IKooj LK°aI Subroutine FACTOR iscalled todecompose [Koo]intotriangular factors. Subroutine S_LVER iscalled toperforn afo_ard-backward substitution solving for[Go]inthematrix equation [Koo][Go]=-[Koa] , andcomputing [Kaa]fromtheequation [Kaa] =[Kaa]+[Koa][GO]• Foreachofthedatablocks [Mff], [Bff], [K_f]which isnotpurged, theabove partitioning operation isperformed andthematrix reductions: [Maa] =[Maa]+[Go]T[Moa]+[MooIT[GO]+[Go]T[[Ioo][Go], [Baa] =[Baa]+[GoIT[Boa]+[Boa]T[GO]+[Go]T[Boo][Go], [K4aa]=[_4aa]+[Go]T[K4oa]+4T [K4oo] [Koa] [GO]+[Go]T [Go],(2) (3) (4) (5) (6) areperformed bysubroutine ELIM. 4.36-2 (8/I/72)\nFUNCTIONAL .YJDULES.IPI(STRUCTURAL MATRIXPARTITIONER -PHASEI) 4.36.8Subroutines Callsaremadetothefollowing matrix utility routines: UPART Seesubroutine descriptions -Section 3.5.9fordetails MPART Seesubroutine descriptions -Section 3.5.9fordetails FACTOR Seesubroutine descriptions -Section 3.5.23 fordetails S_LVER Seesubroutine descriptions -Section 3.5.20 fordetails ELIM Seesubroutine descriptions -Section 3.5.22 fordetails 4.36.9 Design Requirements 4.36.9.1 Allocation ofCoreStorage Themaximum storage requirement forSMPIisfourtimesthenumber ofdegrees offreedom in theuadisplacement setplusoneGlrIObuffer. 4.36.9.2 Environment Themodule SMPIconsists ofonesubroutine, SMPI. Callsaremadetothematrix utility routines indicated above. Sixscratch filesareused. Thematrix multiply-add routine isusedbyELIMtoperform thematrix reductions described byequations 3,4,5and6.Forequations 4,5and6,thereduction isdoneinthreephases as shownbelowforthemassmatrix. [A]=[Moo][Go]+[Moa] (7) [B]=[Moa]T[Go]+[Maa] (8) [Maa] =[Go]T[A]+[B] (9) 4.36-3 (811172)\nFUNCTIONAL MODULE RBMGI (RIGID BODYMATRIX GENERATOR -PHASE l) 4.37 FUNCTIONAL MODULE RBMGI (RIGID BODYF_TRIX GENERATOR -PHASE l) 4.37.1 Entr_ Point: RBMGI 4.37.2 RBMGI partitions [Kaa] into[K_], [K_r] and[Krr]. If[Maa] isnotpurged, itis partitioned similarly. 4.37.3 DMAPCallin_ Sequence RBMGI USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ 4.37.4 Input DataBlocks USET -Displacement setdefinitions table. KAA -Partition ofstiffness matrix -aset. Fb_A -Partition ofmass matrix -aset. Note: USETmaynotbepurged. 4.37.5 Output DataBlocks KLL Partition ofstiffness matrix -_set. KLR Partition ofstiffness matrix. KRR Partition ofstiffness matrix -rset. MLL -Partition ofmassmatrix -_set. MLR -Partition ofmassmatrix. MRR -Partition ofmassmatrix -rset. Note: Output datablocks maybepurged onlyifthecorresponding input datablock is purged. 4.37.6 Parameters None 4.37.7 Method Using subroutine UPART togenerate rowandcolumn partitioning vectors andsubroutine 4.37-I\nMODULE FUNCTIONAL DESCRIPTIONS MPARTtoperform theactualpartitioning, [Kaa]ispartitioned asfollows: !7 [Kaa]:\u003e -‘K ‘Kr‘rr Similarly, if[Maa]isnotpurged, itispartitioned, 4.37.8 Subroutines RBMGIcallsthefollowing matrix utility routines: UPART_ seesection 3.5.9fordetails. MPART 4.37.9 Design Requirements 4.37.9.1 Allocation ofCoreStorage Storage requirements forRBMGIareminimal sincenounpacked vectors areheldincore. 4.37.9.2 Environment Themodule RBMGIconsists ofonesubroutine, RBMGI. Callsaremadetothematrix utility routines indicated above. Onescratch fileisused. 4.37-2\n4.38 4.38.1FUNCTIONAL MODULE RBMG2 (RIGID BODYMATRIX GENERATOR -PHASE 2) FUNCTIONAL MODULE RBMG2 (RIGID BODYMATRIX GENERATOR -PHASE 2) Entry Point: RBMG2 4.38.2 Purpose LLL - ULL - NotesRBMG2 decomposes[K_£] intoitstriangular factors [L_£] and[U£]. 4.38.3 DMAPCallin 9Sequence RBMG2 KLL/LLL,ULL/V,N,P_WER/V,N,DET $ 4.38.4 Input DataBlocks KLL-Partition ofstiffness matrix -Zset. Note: KLLmaynotbepurged. 4.38.5 Output DataBlocks Lower triangular factor ofKLL-£set. Upper triangular factor ofKLL-£set. I.LLLandULLmaynotbepurged. 2.ULLisnotastandard upper triangular matrix. forinput tosubroutine FBS. 4.38.6 Parameters 4.38.7 MethodOutput-integer-default =I. Output-real-default =l.O. det[Kz] =DET*IO P_WERItsformatiscompatible only Power ofI0inthedeterminant ofKLL. Magnitude ofdeterminant ofKLL,i.e., 4.38-IRBMG2 calls thematrix utility routine FACTOR (seesection 3.5.23 forFACTOR details).RBMG2 calls subroutine FACTOR toperform thedecomposition of[K££] into[L_] and[Ucz]. 4.38.8 Subroutines\nMODULE FUNCTIONAL DESCRIPTIONS 4.38.9 Design ReRuirements Forallocation ofcorestorage, seesubroutine SDC_MP (section 3.5.14). consists ofonesubroutine, RBMG2. Three scratch files areused.Themodule RBMG2 4.38.10 Diagnostic Messages Message number 3005maybeissued byRBMGI. 4.38-2"},"title":"Programmer's Manual P45"},"/docs/programmers/programmers_manual_046/":{"data":{"":"FUNCTIONAL MODULE RBMG3 (RIGID BODYMATRIX GENERATOR -PHASE3) 4.39 FUNCTIONAL MODULE RBMG3 (RIGID BODYMATRIX GENERATOR -PHASE3) 4.39.1 EntryPoint: RBMG3 4.39.2 Purpose RBMG3solves fortherigidbodytransformation matrix [D]fromtheequation [K_][D]:-[K_r] Therigidbodyerrorratio, c,iscomputed from E:II[Krr] +[Kcr]T [D]II ll[Krr]II Note: Theabsolute value IIIIisthesquare rootofthesumofthe squares _,,,1_k-is\"notadeterminant). 4.39.3 DM_PCal!in9Sequence RBMG3 LLL,ULL,KLR,KRR/DM $ 4.39.4 InputDataBlocks LLL-Lowertriangular factor ofKLL-_set. ULL-Uppertriangular factor ofKLL-_set. KLR-Partition ofstiffness matrix. KRR-Partition ofstiffness matrix -rset. Note: Inputdatablocks maynotbepurged. 4.39.5 Output DataBlocks DM-Rigidbodytransformation matrix. Note: TheDMdatablockcorresponds tothematrix [D]andmaynotbepurged. 4.39.6 Parameters None.(I) (2) 4.39-I (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.39.7 Method Subroutine S_LVER iscalled toperform theoperations inEquation land2. 4.39.8 Subroutines RBMG3 calls thematrix utility routine S_LVER andhasnoauxiliary subroutines. Seesection 3.5.20 forS_LVER details. 4.39.9 Design Requirements Forallocation ofcorestorage, seesubroutines FBS(section 3.5.17) andMPYAD (section 3.5.12). Twoscratch files areused. 4.39-2\n4.40 4.40.1 4.40.2FUNCTIONAL MODULERBMG4(RIGIDBODYMATRIXGENERATOR-PHASE4) FUNCTIONAL MODULERBHG4(RIGIDBODYMATRIXGENERATOR-PHASE4) Entry Point: RBMG4 RBMG4 computes therigid bodymassmatrix [mr]from thematrix equation [mr] =[Mrr]+[D]T[M_r]+[Mcr]T [D]+[D]T[M_] [D]. 4.40.3 DMAP Callin_ Sequence RBMG4 DM,MLL,MLR,MRR/MR $ 4.40.4 Input DataBlocks DM-Rigid bodytransformation matrix. MLL -Partition ofmassmatrix -set. MLR -Partition ofmassmatrix. t_n ,4 -Partition of_ssmatrix -rset. Notes: I. 2. MR4.40.5 4.40.6Noinput datablock maybepurged. TheDMdatablock corresponds tothematrix [D]inEquation I. Output DataBlocks Rigid bodymassmatrix -rset. Parameters _one 4.40.7 Method Subroutine ELIIIiscalled tocompute [mr]asinEquation l(seesection 3.5.22 forELIM details).(1) 4.40-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.40.8 Subroutines RBMG4consists ofonesubroutine, RBMG4. Matrix utility routine ELIM(section 3.5.22) iscalled byRBMG4. 4.40.9 Design Requirements Forallocation ofcorestorage, seesubroutine MPYAD(section 3.5.12). Threescratch files areused. 4.40-2\nFUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASE l) 4.41 FUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) 4.41.I Entry Point: SSGI 4.41.2 Tocompute thestatic loads, thermal loads, andenforced deformation loads selected bythe user. 4.41.3 DMAPCallin 9Sequence SSGI SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT,EDT,MGG,CASECC,DIT/PG/V,N,LUSET/V,N,NSKIP 4.41.4 Input DataBlocks SLT -Static Loads Table. BGPDT -Basic GridPoint Definition Table. CSTM -Coordinate System Transformation Matrices. SIL -Scalar Index List. EST -Element Summary Table. MPT -Material Property Table. GPTT -GridPoint Temperature Table. EDT -Element Deformation Table. MGG -Partition ofmass matrix -gset. CASECC - DIT Notes: I.CaseControl DataTable. Direct Input Tables. SLT,BGPDT, SILcannot bepurged ifexternal static loads orLOADcards areselected inCASECC. 2.CSTMcannot bepurged ifanygridpoint orload references acoordinate system other thanbasic. 3.EST,MPTcannot bepurged ifthermal orelement deformation loads areselected. 4.GPTT cannot bepurged ifthermal loads areapplied. 5.EDTcannot bepurged ifelement deformation loads areselected. 4.41-I\nMODULEFUNCTIONAL DESCRIPTIONS 6.MGGcannotbepurgedifGRAVITYorRF_RCEloadsareapplied. 7.CASECCcannotbepurged. 8.DITcannotbepurgediftemperature dependentmaterialsareloaded. 4.41.5Output DataBlocks PG-Static loadvector matrix giving static loads -gset. Note: PGcannever bepurged. 4.41.6 Parameters LUSET NSKIP 4.41.7Input-integer-no default. LUSET defines length ofPG. Input-integer-no default. Onestatic load isbuilt foreachCASECC record starting with NSKIP +laslongastheboundary conditions areconstant. Overview oftheMethod UsedinSSGI Thepurpose ofthefirst phase ofstatic solution calculation (module SSGI) isthegeneration oftheloadvectors onthewhole structure. Thestructure maybeloaded inthree different ways: I.Simple applied loads andmoments maybegiven togridandscalar points. Pressure loads maybeapplied toanareadefined bythree orfourgrid points. Centrifugal force fields mayalsobedefined. 2.Thermal andenforced deformation loads aregenerated byusing thestructural element characteristics. Theloads ontheconnected grid points areequivalent tofixing the displacements andreplacing theelement bytheload itwould apply tothepoints. 3.Gravity loads aredependent onthemass characteristics ofthestructure. Agravity loadisproduced bygenerating avector ofaccelerations onallgridpoints inthestructure andpre-multiplying thevector bythestructural massmatrix. Thedetails onloadvector generation forthese three different types ofloading aregiven in sections 4.41.8, 4.41.9 and4.41.I0 below. Thefunction ofmodule SSGIistoread thecasecontrol dataandextract thenecessary loadsetdata, calculate loadvectors foreach requested loadset, andcombi;_e these setstoproduce theloads requested forallsubcases using thesameboundary. condition. 4.41-2\nFUNCTIONAL MODULESSGI(STATICSOLUTIONGENERATOR-PHASEl) 4.41.7.] ModuleInitialization Commonblock/L_ADX/,which contains GIN_filenumbers forinput datafiles andposition pointers, isinitialized. Alistofallexternal loadsetsisextracted fromtheSLT. (This must belessthanlOl.) CASECC isskipped forward NSKIP records (incaseseveral boundary conditions arebeing solved in onerun). Foreach succeeding record which isnotaneigenvalue record, notasymmetry record, notadifferential stiffness record, andforwhich theboundary conditions arethose forthe current loop (SPCandMPCsets), alistismadeofeachthermal orenforced deformationload. The external loads selected aremarked intheabove list. Ifaselected external loadisnotinthe above list, theL_AD cards arereadinandtheir component id’ssearched. AL_AD cardmaycause additional members tobeselected. Acomposite listiscreated which contains: External loadid°s selected onesmarked \u003clO0 Thermal loadid’s\u003clO0 Enforced deformation load id’s\u003clO0\u003clO0 Ifthere isnorecord which allows construction ofaload, SSGIaborts. Ifaselected external loadiddoes notexist either asaL_ADcardorsimple loadset,SSGIaborts. (Subroutine SSGIA). 4.41.7.2 Individual LoadVector Generation Eachrequested setofloads isusedtogenerate a{P_}loadvector. Thevectorsaregenerated oneatatimeincoreandwritten onthePGtemporary file, ascratch file. Files PGtemporary, SLT, BGPDT, CSTMandSILareopened. Thevector generation depends onthetypeofloadandtype ofinput data. Details aregiven insections 4.41.8, 4.41.9 and4.41.I0 below. 4.41-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.7.3 Subcase Load Vector Generation Each simple load set, j,produces a{P_} load vector, andeach subcase maybeacombination ofvarious simple load sets. Aseach load setvector isformed, itiswritten onPGtemporary. When allsets have been generated, theCASECC data block andtheL_AD card images areread again. Atable isformed foreach subcase consisting oftherequired setnumber andthescale factor for each setifgiven onaL_AD card. Thefile containing theload vectors forthesets isread for each subcase, c,andadded toa{P_} load vector. The{P_} load vectors arepacked andwritten asthePGdata block instandard NASTRAN matrix form. 4.41.8 Direct Applied Loads Direct loads areapplied tothestructural model bymeans ofF_RCE, F_RCEI, F_RCE2, GRAV, MOMENT, MOMENTI, MOMENT2, PLOAD, PLEAD2, RFORCE, andSL_AD Bulk Data Cards andthePRESAX card which isused fortheaxisymmetric conical shell problem only. 4.41.8.1 F_RCEandM_MENT CardProcessing Thedata described byaF_RCE orMBMENT data card aregiven asfollows: N=Grid point index;P Nc=Coordinate system number; S=Scalar factor; and TheBGPDT data forthepoint aredetermined. equals Nc,thevector isIAII{p}=A2• A3 Iftheglobal coordinate number, Ng,(1) forthepoint {Pg}=S{P}, (2) where therowindex isdetermined from SIL. IfNg_Nc,[Tg] and[Tc]arecalculated using the location coordinates andthetwolocal coordinate systems (subroutines GLBBAS andBASGLB). The 4.41-4 (811172)\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) loadinglobal coordinates is: =S[Tg]T[Tc] {P}. (3) {Pg} IfaF_RCE card isused, theloads areadded tothefirst three positions forthegridpoint in theloadvector. IfaMgMENT card isused, theloads areadded tothelastthree positions. (Subroutine DIRECT). 4.41.8.2 F_RCEI andM_MENTI CardProcessing Thedatadescribed byF_RCEI orM_MENTI cardaregiven asfollows: Np=Application point number; S=Loadmagnitude; NI,N2=Gridpoint numbers describing thevector direction oftheload. Thebasic coordinates ofthepoints Nl,N2andNparefound intheBGPDT. PER,T andFNDPNT). If{R}and{R2}arethevectors corresponding toNl direction is:(Subroutines andN2,theload {R2}-{RI} {d}=I{R2}{R}I. (4) Thecoordinate transformation [Tg]forpoint Npiscalculated (Subroutine BASGLB).Theload vector inglobal coordinates is: {Pg}:S[Tg]T{d} (5) IfaF_RCE1 cardwasusedthevaluesareaddedtothefirstthreecoordinates, starting withthe SILnumber, intheloadvector. IfaM_MENT1 cardwasused,thevalues areaddedtothelast three(subroutine TP_NT). 4.41.8.3 F_RCE2andM_MENT2 CardProcessing ThedataonaF_RCE2 orM_MENT2 cardareasfollows: N=Application pointnumber;P S=Loadmagnitude; 4.41-5\nMODULE FUNCTIONAL DESCRIPTIONS NI,N2,N3,N 4aresuchthatthedirection oftheforce is determined byEquation 6below. Thealgorithm issimilar totheonefortheF_RCEI andMOMENT1 caseexcept thatfourbasic coordinate system vectors, {RI},{R2},{R3},{R,},areformed forthefourpoints and: {d}=({R2}-{RI})x({R,}-{R3}) I({R2} {R_})x({R4}-{R_})J ‘(6) (Subroutine FP_NT). 4.41.8.4 PLEADandPLEAD2 CardProcessing Thedatacontents foraPLOADcardare(aPLOAD2 cardistransformed intoaPLEADcardby GP3): p:Pressure value; NI,N2,N3,N 4Points describing areaover whichpressure loadisacting. (N4isoptional.) Foreachofthefourpoints, Ni,thebasiccoordinate system vector, {Ri},isformed. IfN4=O,theloadoneachpointis: P[({RI}{R2})x({R3}-{R2})] {F}:-(7) Theloadvector inglobal coordinates foreachpointis: {Pgi}=[Ti]T{F} . IfN4#O,thequadrilateral issubdivided intofourtriangles asshown.(8) .-I- 4.41-6\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) PT changed eachtimethetriangle calculation isdone. 4.41.8.5 SL_AD CardProcessing Thedata contents foraSL_AD cardare: Np=Scalar point idand S=Loadonpoint, Thescalar index iscomputed bysubroutine FNDSIL, andSisadded in. 4.4].8.6 RF_RCE Card Processing Thedatacontents foranRFBRCE cardare:Foreachtriangle {Pgi}iscalculated forthethree connected points using apressure value =I/2p.Theequations arethesameastheprevious caseexcept thatthepoints areinter- (Subroutine PLEAD.) (Subroutine SL@AD.) Np Nc A=Index ofgridpoint through which rotation vector passes; =Coordinate system number defining therotation vector; =Factor forvector; Rx,Ry,R zarecomponents ofrotation vector incps. Thefollowing sequence ofoperations comprises RF_RCE cardprocessing which iscarried out insubroutine RFBRCE. I.Thelocal tobasic coordinate transformation matrix, [Tc],forthereference coordinate system Ncisextracted fromtheCSTMdatablock. 2.Therotation vector inbasic coordinates, andinradians persecond, is: {mb}=2_A ITc]Rx 3.Define thebasic location vector ofthereference point Np {ra}{0}.(g) as{ra}. IfNp=O,set 4,41-7 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.Extract thebasiccoordinate system vector {ri}foreachpointfromBGPDT. 5.Using {ri}andthelocalcoordinate system referenced bythepoint, calculate the global-to-basic transformation matrix [Ti]. 6.Forthesixcolumns ofthemassmatrix [Mgg]corresponding tothegridpointi,the6x6 matrix partition onthediagonal isextracted. Define thisas[Mi]. 7.Partition the6x6matrix into3x3matrices FMi:Mi7 L_t__L_.t.r_I [Mi]–\u003e IMP\"iM_I’ (I0)Lrt, r_] andtransform therotational velocity vector toglobal coordinates {_g}=[TilT{_b}. (II) 8.Calculate theforces andmoments onthegridpointbytheequations: xMi{F}=-{g}x[M][Ti]T({wb }x[{ri}-{ra}]) -{Wg} [tr]{_g} (12) {M}=-{g}x[Mr][TiIT({_b}x[{ri}-{ra}]) -{g}x[M]{_n} (13) 9.Theloadvector partition inglobal coordinates is: 4.41.8.7 PRESAX CardProcessing Thedatacontents foraPRESAX card(which applies onlytopressure loading ofan AXISYMMETRIC shell) are: p – Na= Nb= _i= qb2= n=Pressure; Indexvalueofharmonic RingA; Indexvalueofharmonic RingB; (degrees); (degrees); Harmonic number ofharmonic being added. 4.41-8 (12-I-69)\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) Thealgorithm given inthefollowing steps isperformed insubroutine PRESAX. I.Czand¢2areconverted toradians. 2.BGPDT dataareextracted forbothRINGA andRINGB, giving {r}and{z}. 3.Thecalculations forharmonic nare: =J(rb-ra)2 +(Zb-Za)2 ,(15) rb-rasin_-,(16) cosZb-Za(17) Forthecosine case, ifn=O,wecalculate: P_o =P_ + (2-I)cos,(lB) ;r.r.\nPizo=-P 131-]–+6–J-)(qb2 -qbl)sin_.(]g) Ifn\u003eO rn -_ + (sin(n(h2) -sin(nq_1)) cos_b,(20) zr_ pi:p(__L _JJ)(sin(nqb2) sin(n@])) sinin n\\o+u/ - “(2l) 4.41-9 (7/l/70)\nMODULE FUNCTIONAL DESCRIPTIONS Forthesinecase, ifn\u003eO, Pirn:p_\u003ci+\u003en pi:p_\u003ci,i\u003e zn n +(COSin@2)-cos(n@l))cos_, (cos(n@2)-cos(n@1))sin_. 4.Theabove equations aresolved fori=a,i=bandi=b,_=a. tothecorresponding gridpoint location inthePGloadvector i Pr 0i Pz 0 0 O (Subroutine PRESAX). 4.41.8.8 GRAVCardProcessingTheloads areadded EachGRAVinput carddescribes auniform acceleration field withthefollowing parameters: N=Coordinate system ID; G=Scale factor; {V}=Vector ofloadincoordinate system N. Thegravi+y vector inbasic coordinates is: {gb}=G[TON]{V}.(22) (23) where [TON] isthe3x3orientation matrix ofcoordinate system N. MPYL). This vector {gb}issaved forlater processing. ’thenumber ofgravity loads listed.(24) (25) (Subroutines GRAV,FDCSTM, Subroutine EXTERN thenreturns, noting 4.41-I0\nFUNCTIONAL MODULESSGI(STATICSOLUTIONGENERATOR-PHASEI) 4.41.9Thermal andEnforced Deformation Loads Thethermal andenforced deformation loads arecalculated using thestiffness properties of thestructural elements. TheEDTdataforeachloadsetandtheMPT, DITandSILdatablocks are placed incore. TheESTdatablock andtheGPTTdatafortheselected setarereadoneelement at atime. Theloads produced bythatelement areplaced inthePGload vector. Theactual algo- rithms forgenerating element loads aregiven inSection 4.87. 4.41.I0 Gravity Loads Acceleration vectors arecomputed foreachgravity loadbytwomeans, oneforanaxisvmmetric shell problem, theother fornon-shell problems. 4.41.I0.I Gravity Loads foranAxisymmetric Shell Problem m(number ofrings) andn(number ofharmonics) areextracted fromthe/SYSTEM/common block. Thefirst mpoints intheBGPDT define the\"zero” harmonic. Thesecond mentries define the\"one\" harmonic etc. Theacceleration vectors arecalculated bytheformulae: ax 2 g=+g;+gz’ (26) gxy=g_+ gy2, (27) gz cosOg g, (28) a sin0=_xyg g, (29) sinCg=gy9 gxy (30) gx cos_g- (31)gxy 4.41-II (9/I170)\nMODULE FUNCTIONAL DESCRIPTIONS Thevectors {a}forharmonics n=0andn=1aredefined forloadsetcosine by: andforloadsetsineby:{a_}gcos9g (allrings), {a_}=gsinegcos@g (allrings)(32) (33) 1 1 0 {a_}:gsin@gsin,g 0 Thesevectors areusedasinthenormal case. Theyaremerged into{ag}which inturnispre- multiplied by[Mgg]togivethe{Pg}vector (subroutine GRAVL3). 4.41.10.2 Gravity LoadsforNon-Shell Problems Theacceleration vector mustbetransferred totheglobal coordinate system ateachgrid pointandexpanded toavector acting ontheUgcoordinates. Foreachgridpoint (i)theBGPDT dataisread,andusingtheCSTMdata,a3x3basic toglobal transformation matrix [Ti]is formed. Theacceleration atthepointiinbasiccoordinates is: {a_} =[Ti]{gb}, (35) where {gb}isthegravity vector saved inEquation 25. Thevector {a_} isplaced inthetotal acceleration vector inpositions SILi, SILi+l ,andSILi+2. Novalues arecalculated forscalar points orrotation coordinates (Subroutine GRAVLI). When all{ag} vectors have been calculated forthewhole structure, they arepre-multiplied bythestructural mass matrix toproduce aload vector: {Pg}=[Mgg]{ag}, (36) 4.41-12 (8/I/72)(34)\nFUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASEI) (subroutine SSG2B). Thegravity vectors areappended totheother load vectors, andscalar points arezeroes in case interaction occurred. Gravity loads onscalar points arenotsupported. 4.41.I0.3 Direct-Applied Thermal Loads Direct loads areapplied totheheat transfer model bymeans oftheQHBDY data cards. These cards contain thefollowing data: S_xmbol FLAG, Qo’ Af, G1,G2,G3,G4 Theword\"FLAG\" indicates thetypeofload,“P_INT,” “LINE,” “REV,” “AREA3,” or\"AREA4,\" and thenumber ofgridpoints defined byGI,G2,etc.Theloadsareformed intoavector {P]witha length equal tothenumber ofpoints. Thevalues of{P}are: {P}=AQo{V}. Thevalues forAand{V}aregiveninthefollowing table:Description Identified type ofload Flux density Area factor Internal grid point numbers FLAGNumber ofgrid- points atwhich load vector is applied{v} 1 -Af {1} 2 -A__(length)2 I_l 2 __(length) 12Xl +x21 3 (x1+2x2,’ makeintooverlapping triangles, as 4 inFLAG=4(divide loadsbytwo) 4.41-13 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS where thevalues xi,Yi\"ziaretheBGPDT values forpoint iand: _ _2I/2(length) =[(x2Xl)2+(Y2-Yl)2+(z2 Zl)] (area) :½Ir12xr131 where rlj=yjYl J=2,3 zjzl Theloadistobeinserted intoallthree translational degrees offreedom atthegridpoints. Thescalar indices maybefound intheSILtable. 4.41-13a (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.11 4.41.II.ISubroutines Subroutine Name: SSGIA. I.EntryPoint: SSGIA. 2.Purpose: Tobuildalistofexternal loads, thermal loadsandenforced deformation loads selected bytheuserinCASECC. 3.Calling Sequence: CALLSSGIA(NI,ILIST,NEDT,NTEMP,NCENT,CASECC,IHARM) N1 -Number ofexternal loadspresent -integer -output. ILIST -ListofloadID’swithselected loadID’ssetnegative -integer -output. NEDT -Number ofenforced deformation loads-integer -output. NTEMP -Number ofthermal loads-integer -output. NCENT -Notused(settozero)-integer -output. CASECC -GINOnumber ofCaseControl DataBlock-integer -input. IHARM -Boundary conditions foraxisymmetric shellproblem. 1=sine, 2=cosine -integer -output. C_MM_N//XX,L_ADNN L_ADNN -Number ofrecords inCASECC toskipbefore beginning tobuild loads-integer - input. C@MMON/L_ADX/ L_ADX -Seedescription of/L_ADX/ conTnon blockbelow (section 4.41.11.8). 4.41.11.2 Subroutine Name: EXTERN. I.EntryPoint: EXTERN 2.Purpose: Tocompute user-selected external loads. 4.41-14\nFUNCTIONAL t4ODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) 3.Calling Sequence: CALL EXTERN (NLIST,NGRAV,GVECT,ILIST,PG,NI,IHARM) NLIST -Number ofloadid’sinILIST array -integer -input. NGRAV -Number ofgravity loads selected -integer -output. GVECT -Array ofgravity vectors, 3numbers pervector -real-output. ILIST -Listofallloadid’s-integer -input. PG -Matrix control block forfileonwhich external loads willbewritten -integer - input/output. Nl -Number ofexternal load id’s-integer -input. IHARM -Boundary condition foraxisymmetric shell problem l=sine, 2=cosine. C_I_M_NIILUSET LUSET -Length ofPG-integer -input. C_N_IgN/L_ADX/ -See/L_ADX/descripticn insection 4.41,II.8. 4.41.ll.3 I. 2. 3.Subroutine Name: TEMPL. Entry Point: TEMPL Purpose: Tocompute thermal loads foreach element. Calling Sequence: CALLTEMPL (NTEMP,ILIST (Nl+l),PG(1)) NTEMP -Number ofthermal loads -integer -input. ILIST(NI+I) -Beginning ofthermal loadlist-integer -input. PG -Matrix control block forload file-integer -input/outDut. C_M_N/L_ADX/- See/L_ADX/description insection 4.41.II.8. C_MMgN//LUSET LUSETLength ofPG-integer -input. 4.41-15"},"title":"Programmer's Manual P46"},"/docs/programmers/programmers_manual_047/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 4.41.11.5 Subroutine Name: I. 2. 3.4.41.11.4 Subroutine Name: EDTL. I.EntryPoint: EDTL 2.Purpose: Tocompute enforced deformation loadsforeachelement. 3.Calling Sequence: CALLEDTL(NEDT,ILIST(NI+I),PG(1)) NEDT Number ofenforced deformation loads-integer -input. Theremainder ofthevariables hasthesamemeaning asinTEMPL (section 4.41.11.3). GRAVLI. EntryPoint: GRAVLI Purpose: Tobuildacceleration vectors forgravity loads. Calling Sequence: CALLGRAVLI (NGRAV,GVECT,SCRI,IHARM) 4.41.II.6NGRAV GVECT SCRI IHARMNumber ofgravity loadsselected -integer -input. Arrayofgravity vectors, threewordspergravity vector -real-input. GIN@filenumber onwhichtobuildtheacceleration vectors -integer -input. Boundary condition foraxisymmetric shellproblem. 1=sine, 2=cosine -integer -output. Subroutine Name: GRAVL2. I.EntryPoint: GRAVL2 2.Purpose: Toaddgravity loadsontopreviously generated loadvectors andcheckscalar points. 3.Calling Sequence: CALLGRAVL2 (NGRAV,PGG,PG(1)) NGRAV -Number ofgravity vectors -integer -input. PGG -GIN_filenumber ofgravity loads-integer -input. PG -Matrix control blockforallother (non-gravity) loads-integer -input/output. C_MM_N/L_ADX/ L_ADX See/LOADX/ common block (section 4.41.11.8). 4,41-16\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) C_MM_N//LUSET LUSET -Length ofPGvector -integer -input. 4.41.II.7 Subroutine Name: C_MBIN. I.Entry Point: C_I_IN 2. 3.Purpose: Tocombine subloads intosubcase loads. Calling Sequence: CALLC@I_IN (PG,ILIST,NI) PG -Matrix control block forPGvector -integer -input/output. ILIST -ListofallloadID’s-integer -input. Nl -Number ofentries inILIST -integer -input. C_MM_N/L_ADX/ LOADX -See/L_ADX/description, section 4.41.II.8) C_I_M_N//LUSET LUSET -Length ofPGvector -integer -input. C_MM_N/L_ADS/NL_ADS,IARY(300) NL_ADS -Number ofloads tobuild. IARY Foreachload: Number ofsubloads Subload ID Irepeated foreachsubload Scale Factor ) Subload ID}Scale Factor 4.41.ll.8Common Block L_ADX.reheated for eachload I.Purpose: Totransmit filenumbers andpointers. 2.Variable List: C@MM_N/L_ADX/LC,SLT,BGPDT,_LD,CSTM,SIL,ISIL,EST,MPT,GPT,EDT,IMPT,IGPTT, IEC,L_ADF,MGG,N_BLD,DIT,ICM 4.41-17 (711170)\nMODULE FUNCTIONAL DESCRIPTIONS SLT,BGPDT,CSTM,SlL,EST,MPT,GPTT,EDT,MGG,DIT blocks -integer -input. LC OLD - ISIL - LOADF - NOBLD IMPT - IGPTT IEC 4.41.II.9 . .-GIN_filenumbers forrespective data 3.Length ofopencore-integer -input. Current gridpointposition oftheBGPDT-integer -input. Current SlLposition -integer. GINOfilenumber ofloadfile-integer -input. Build-nobuild flagfordirect loadroutines -integer. Unused atpresent. Subroutine Name: DIRECT. EntryPoint: DIRECT Purpose: ToapplyloadsduetoFORCEandM_MENT cards. Calling Sequence: CALLDIRECT COMMON/LOADX/ LOADX Seedescription of/L_ADX/ above (section 4.41.11.8). 4.41.II.I0 I. 2. 3.Subroutine NameTP_NT. _ntryPoint: TPONT Purpose: Toapply loadsduetoFORCE1 andM_MENTI cards. Calling Sequence: CALLTPBNT C_MM_N/L_ADX/ L_ADX -Seedescription of/L_ADX/ above(section 4.41.11.8). 4.41-18\n4.41.II.II Subroutine Name: I. 2. 3. 4.41.ll.12 Subroutine Name:FUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASE l) FP_NT. Entry Point: FPONT Purpose: Toapply loads duetoF_RCE2 andMBMENT2 cards. Calling Sequence: CALLFP@NT COMM_N/LOADX/ L@ADX Seedescriptionof/LOADX/above (section 4.41.II.8). SLOAD. I.Entry Point: SL_AD 2.Purpose: Toapply loads duetoSLOAD cards. 3.Calling Sequence: CALLSLBAD COF_N/LOADX/ LOADX -Seedescription of/LOADX/above (section 4.41.II.8). 4.41.II.13 Subroutine Name: PLOAD. I.Entry Point: PLEAD 2.Purpose: Toapply loads duetoPLOAD cards. 3.Calling Sequence: CALLPLOAD CgMMON/LOADX/ L_ADX -Seedescription of/LOADX/above (section 4.41.II.8). 4.41.I1.14 Subroutine Name: RF_RCE. I.Entry Point: RF_RCE 2.Purpose: Toapply loads duetoRFgRCE cards. 3.Calling Sequence: CALLRFBRCE (LCORE) LC_RE -Current buffer top-integer -input. COMM_N/LOADX/ L_ADX -Seedescription of/LOADX/above (section 4.41.II.8). 4.41-19\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.II.15 Subroutine Nan,: PRESAX. I.EntryPoint: PRESAX 2.Purpose: Toapplyloadsduetoaxisymmetric pressure loads. 3.Calling Sequence: CALLPRESAX (IHARM) IHARM -Axisymmetric boundary condition -integer -input. CO_ON/LOADX/ LBADX -Seedescription of/L_ADX/ above (section 4.41.11.8). 4.41.11.16 Subroutine Name: GRAV. I.EntryPoint: GRAV 2.Purpose: Toextract gravity vector andconvert tobasiccoordinates. 3.Calling Sequence: CALLGRAV(NGRAV,GVECT,NEX,ILIST,NLBOP) NGRAV Number ofgravity loads-integer -outnut. GVECT -Arrayofgravity vectors -real-output. NEX -Number ofexternal loads-integer -input. ILIST Listofexternal loadID’s-integer -input/output. NLO_P -Current pointer intoILIST. COMM_N/LOADX/ L_ADX -Seedescription of/LOADX/ above (section 4.41.11.8). 4.41.11.17 Subroutine Name: PERMUT. I.EntryPoint: PERMUT 2.Purpose: Toreorder alistofgridpoint ID’stoallowthemostefficient extraction ofthesegridpoints fromtheBGPDT. 3.Calling Sequence: CALLPERMUT (PBNT,1ORD,NP,OLD) PONT Listofpoints -integer -input. 4.41-20\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE l) I_RD -Pointers toP_NT, i.e., I_RD(I)contains subscript ofPgNTwhich should be 4.41.II.20extracted first fromtheBGPDT -integer -output. NP -Number ofpoints -integer -output. _LD -Current position ofBGPDT -integer -input. 4.41.II.18 Subroutine Name: FNDPNT. I.Entry Point: FNDPNT 2.Purpose: Toextract BGPDT datafromtheBGPDT. 3.Calling Sequence: CALLFNDPNT (BGPDD,PONT) BGPDD -Four-word BGPDT entry -output. PONT -Gridpoint idofdesired BGPDT entry -integer -input. 4.41.II.19 Subroutine Name: CR@SS. I.Entry Point: CR_SS 2.Purpose: Tocompute thecross product oftwovectors. 3.Calling Sequence: CALLCR_SS (VI,V2,V3) Vl-Three-word vector -real-input. V2-Three-word vector -real-input. V3=V1xV2-real-output. Subroutine Name: NORM. I.Entry Point: N_RM 2.Purpose: Tonormalize avector. 3.Calling Sequence: CALLNORM (Vl,XLV) VI-Three-word vector -real-input/output. XLV-NormofVl. Vlonoutput =VI/XL unless XL=0.0,thenVl=Vl. 4.41-21\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.II.21 I. 2. 3. 4.41.11.22 Subroutine Name: I. 2. 3.Subroutine Name: FNDSIL. EntryPoint: FNDSlL (insubroutine FNDPNT) Purpose: TofindtheSILvalueofaparticular gridpoint id. Calling Sequence: CALLFNDSIL (GPID) GPID-Gridpointidoninput, SILvalueonoutput -integer -inDut/outnut. C_MM_N/LOADX/ LOADX-Seedescription of/LOADX/ above (section 4.41.11.8). BASGLB. EntryPoint: BASGLB Purpose: Toconvert avector fromthebasictotheglobal coordinate system. Calling Sequence: CALLBASGLB (VIN,V_UT,GRDPNT,CSYS) VIN-Three-word inputvector -real-input. V_UT-Three-word output vector -real-output. VINmayequalV_UT. GRDPNT -Location ofgridpointatwhich vector istobeaDDlied (notusedunless coordinate system typeisspherical orcylindrical) -real-input. CSYS -Coordinate system id-integer -input. C_MM_N/L_ADX/ L_ADX Seedescription of/L_ADX/ above (section 4.41.11.8). 4.41.11.23 Subroutine Name: GLBBAS. I.EntryPoint: GLBBAS 2.Purpose: Toconvert avector fromglobal tobasic coordinates. 3.Calling Sequence: CALLGLBBAS (VIN,V_UT,GRDPNT,CSYS) Wherethevariables havethesamenamesasinBASGLB. 4.41-22 (3/I/71)\nFUNCTIONAL MODULE SSGI (STATIC SOLUTION GENERATOR -PHASE I) 4.41.II.24 Subroutine Name: MPYL. I.Entry Point: MPYL 2.Purpose: Tomultiply twoin-core matrices together: [A]-[B]=[C]. 3.Calling Sequence: CALLMPYL (A,B,NC_LA,NR_WA,NC_LB,C) A(NC_LA,NR_WA) matrix B(NC_LB,NC_LA) matrix These matrices arestored row-wise. C(NC_LB,NR_WA) matrix Note: AorB_C 4.41.II.25 Subroutine Name: MPYLT. I.Entry Point: MPYLT 2.Purpose: Tomultiply twoin-core matrices together [A]T•[B]=[C]. 3.Calling Sequence: CALLMPYLT (A,B,NR_WB,NC_LA,NC_LB,C) A(NC_LA,NR_B) matrix i B(NC_LB,NR_WB) matrix IThese matrices arestored row-wise. ! C(NC_LB,NC_LA) matrix 1 4.41.II.26 Subroutine Name: FDCSTM. I.Entry Point: FDCSTM 2.Purpose: Toextract theorientation matrix fromtheCSTM. 3.Calling Sequence: CALLFDCSTM (ICSTM) ICSTM -Coordinate system iddesired. C_MM_N/TRANX/XX(5),T_(3,3) TO-3x3orientation matrix. C_HM_N/L@ADX/ LOADX -Seedescription of/LBADX/ above “s_ction4.41.II.8). 4.41-23\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.11.27 Subroutine Name: FGPTT. I.EntryPoint: FGPTT 2.Purpose: Tofindtemperature intheGPTT. 3.Calling Sequence: CALLFGPTT(SILAR,TAR,NP) SILAR ArrayofSIL’sforwhichtemperatures aredesired -inteqer -input. TAR Arrayoftemperatures atSIL’s-real-output. NP Number ofentries inSILAR. C_MM_N/FPT/T_,NSIL,NGPTT,NR_WSP T_ -Default temperature -real-input. NSIL -Number ofSILentries -integer -input. NGPTT -Length ofGPTT. NROWSP -Beginning ofSILtable-integer -input. 4.41.11.28 Subroutine Name: FEDT. I.EntryPoint: FEDT(insubroutine FNDPNT) 2.Purpose: Toextract oneenforced deformation fromtheEDTgivenoneelement id. 3.Calling Sequence: CALLFEDT(EID,DELTA,IDEFM) _ID -Element id-integer -input. DELTA -Deformation ofelement EID-real-output. IDEFM Setidofcurrent deformation set. 4.41.11.29 Subroutine Name: GRAVL3. I.EntryPoint: GRAVL3 2.Purpose: Tocompute anacceleration vector foranaxisymmetric shellproblem. 3.Calling Sequence: CALLGRAVL3 (NGRAV,GVECT,AG,IHARM) NGRAV -Number ofgravity vectors -integer -input. GVECT Gravity vector array-real-input. AG GIN_filenumber ofacceleration vector -integer -input. 4.41-24 (3/I171)\nFUNCTIONAL MODULE SSGI(STATIC SOLUTIONGENERATOR -PHASEI) IHARM -Boundary condition flag l=sine, 2=cosine Cgt_i_N//LUSET LUSET -Length ofPGvector. C_t_N/SYSTEM/IX(26),t_l MN -Packedword giving number ofrings/number ofharmonics. 4.41.II.30 Subroutine Name: TTRIRG I.Entry Point: TTRIRG 2.Purpose: Tocalculate anelement thermal loadvector foratriangular cross-section ring intheSSGImodule. 3.Calling Sequence: CALLTTRIRG (TI,PG) TI Array offourtemperatures atthefourpoints ofthering-real-input. PG Loadvector array -real-input. C_MM_N/TRIMEX/ TRIMEX -This contains theESTentry fortheelement. 4.41.II.31 Subroutine Name: TTRAPR. I.Entry Point: TTRAPR 2.Purpose: Tocalculate anelement thermal loadvector foratrapezoidal cross-section ring intheSSGImodule. 3.Calling Sequence: CALLTTRAPR (TI,PG) C_MM_N/TRI MEX/ Thearguments arethesameasinTTRIRG. 4.41-25\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.II.32 Subroutine Name: TTORDR. I.Entry Point: TT_RDR 2.Purpose: Tocalculate anelement thermal load vector foratoroidal thin shell ring intheSSGI module. 3.Calling Sequence: CALL TTORDR (TI,PG) C_MM_N/TRIMEX/ Thearguments arethesameasthoseinTTRIRG (section 4.41.11.30). 4.41.11.33 Subroutine Name: FCURL. I.EntryPoint: FCURL 2.Purpose: Toformtheelement thermal loadmatrices infieldcoordinates forthe toroidal thinshellringinsubroutine TT_RDR. 3.Calling Sequence: CALLFCURL(FMEO,FMEI,FFEO,FFEI,YI,S,LAMI) FMEO,FMEI Theresultant thermal loadmatrices. FFEO,FFEI YI -Arrayofintegral values. S,LAMI -Termsusedintheevaluation ofthethermal loadmatrices. 4.41.11.34 Subroutine Name: CONE. I.EntryPoint: CONE 2.Purpose: Tocalculate anelement thermal loadvector foranaxisymmetric shellin theSSGImodule. 3.Calling Sequence: CALLC_NE(TI,PG) C_MM_N/TRIMEX/ Thearguments arethesameasinTTRIG (section 4.41.11.30). 4.41-26\nFUNCTIONAL MODULE SSGI(STATIC SOLUTION GENERATOR -PHASE l) 4.41.II.35 Subroutine Name: QDMEM. I.Entry Point: QDMEM 2.Purpose: Tocalculate anelement thermal loadvector forquadrilateral elements in the3SGImodule. 3.Calling Sequence: CALL QDMEM (TI,PG) C_MM_N/TRIMEX/ Thearguments arethesameasinTTRIRG (section 4.41.II.30). 4.41.II.36 Subroutine Name: TRIMEM. I.Entry Point: TRIMEM 2.Purpose: Tocalculate anelement thermal loadvector fortriangular elements in theSSGImodule. 3.Calling Sequence: CALLTRIMEM (TYPE,TBAR,PG) C_MM_N/TRIMEX/ TYPE -Flagindicating normalentry(0)orsubelement callfromaQDMEM(I)-integer - input. TBAR -Average temperature overtheelement -real-input. PGand/TRIMEX/ areasinTTRIRG (section 4.41.II.30). 4.41.11.37 Subroutine Name: BAR. I.EntryPoint: BAR 2.Purpose: Tocalculate anelement thermal loadvectorordeformation loadvector for thebarelement intheSSGImodule. 3.Calling Sequence: CALLBAR(PG,IDEFM,ITEMP, IDEFT) C_MM_N/TRIMEX/ IDEFM -0ifelement deformation loadvector isnottobecomputed -integer -input. ITEMP 0ifelement thermal loadvectorisnottobecomputed -integer -input. 4,41-27\nMODULE FUNCTIONAL DESCRIPTIONS IDEFT -SetIDoftheelement deformation set. integer -input. PG,/TRIMEX/ areasinSection 4.41.11.30. 4.41.11.38 Subroutine Name: FEDTST I, 2. 3.ThisisusedonlyifIDEFM#0- EntryPoint: FEDTST (inFNDPNT) Purpose: Toputincoretheelement id’sandassociated values foragivendeformation setfromtheEDT. Calling sequence: CALLFEDTST (IDEF) IDEF-Setidofcurrent deformation C_MM_N /FPT/DUM(3),NR_WI,LCBRE NRBW-Number ofwords ofopencoreused. LCBRE-Endofavailable opencore. COMMON /SSGIBX/CORE C_RE-Firstcellofopencoreavailable. 4.41.11.39 Subroutine Name: FEDTED I.EntryPoint: FEDTED (inFNDPNT) 2.Purpose: Todetermine ifallelements inaselected deformation setwereused. 3.Calling Sequence: CALLFEDTED (IDEF) IDEF-Setidofcurrent deformation set. 4.41.11.40 Subroutine Name: HBDY I.EntryPoint: HBDY. 2.Purpose: Tocalculate heattransfer fluxloadsduetoconvective filmcoefficients and temperatures ofthesurrounding fluid(heattransfer analysis only). 3.Calling sequence: CALLHBDY. 4.41.11.41 Subroutine Name: QHBDY I.EntryPoint: QHBDY. 2.Purpose: Togenerate heatfluxloadsinaheattransfer problem. 3.Calling sequence: CALLQHBDY. 4.41-28 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.11.42 Subroutine Name: QDPLT I.Entry Point: QDPLT 2.Purpose: Togenerate theelement thermal loaddataforquadrilateral plate elements. 3.Calling Sequence: CALLQDPLT (TI) TI-Array ofgridpoint temperatures COMMON /TRIMEX/ 4.41.II.43 Subroutine Name: ROD I.Entry Point: R_D 2.Purpose: Togenerate theelement thermal loaddataandenforced deformation load datafortheROD,CONR(JD andTUBE elements. 3.Calling Sequence: CALLROD COMM_N /TRIMEX/ 4.41.II.44 Subroutine Name: SOLID I.Entry Point: SOLID 2.Purpose: Togenerate theelement thermal loaddataforallsolid elements except TETRA. 3.Calling Sequence: CALLSOLID (T,P,I) T=Temperature vector P=Loadvector I=l,element isWEDGE 2,element isHEXAI 3,element isHEXA2 4.Method: Calls aremadetoTETRA. 4.41.II.45 Subroutine Name: TETRA I.Entry Point: TETRA 2.Purpose: Computes element thermal loaddata fortetrahedra either directly (for theTETRA element) orindirectly viaSOLID (fortheother solid elements). 4.41-28a (8/I/72)\n3. 4.41.II.46 I. 2. 3.MODULE FUNCTIONAL DESCRIPTIONS Calling Sequence: CALLTETRA (T,P,K) T=Temperature vector P=Loadvector K=Option Flag =O,divide by6.0 O,divide by12.0 Subroutine Name: TRBSC EntryPoint: TRBSC Purpose: Tocompute thethermal loaddataforthebasicbending triangle element TRBSC. Calling Sequence: CALLTRBSC (I,T) I=0(basic bending triangle) 1(sub-computations forSQDPLI) 2(sub-computations forSTRPLI) T=Temperature vector Subroutine Name: TRIQD EntryPoint: TRIQD Purpose: Tocompute thethermal loaddataforthetriangular andquadrilateral elements. Calling Sequence: CALLTRIQD (N,T) N=1implies TRIAl 2implies TRIA2 3implies QUADI 4implies QUAD2 =Temperature vector Subroutine Name: TRPLT EntryPoint: TRPLT Purpose: Tocompute thethermal loaddataforthetriangular bending elements. Calling Sequence: CALLTRPLT (T) T=Temperature vector4.41.11.47 l• 2. 3. T 4.41.I1.48 I. 2. 3. 4.41-28b (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.II.49 Subroutine Name: SSGKHI I.Entry Point: SSGHKI 2.Purpose: Computes element thermal load andenforced deformation loaddataforuseby TRBSC, TRPLT andQDPLT. 3.Calling Sequence: CALLSSGKHI (TR,TI,FN) TR-RealTemperature Vector TI-Integer Temperature Vector FN-Multiplication fraction 4.41.II.50 Subroutine Name: SSGETD l° 2. 3.Entry Point: SSGETD Purpose: Computes element temperature fromapre-positioned record. Calling Sequence: CALLSSGETD (E,T,G) E-Element identification number forwhich temperature isdesired. T-Areaintowhich temperature dataisreturned. G-=O,element temperature format dataisdesired #O,number ofgridpoints. 4.41.II.51 Subroutine Name: BASGLB I.Entry Point: GBTRAN 2.Purpose: Finds aGlobal toBasic transformation matrix stored byrows. 3.Calling Sequence: CALLGBTRAN (IC,P,T) IC-Coordinate system identification number. P-Location ofgridpoint atwhich vector istobeapplied. T-Transformation matrix stored byrows. 4.41-28c (8/I/72)\nFUNCTIONALMODULE SSGI (STATICSOLUTION GENERATOR -PHASE l) 4.41.12Design Requirements Threescratchfiles areneeded. Opencore isdefinedasfollows: I./SSGAIX/duringEXTERN phase C#I_4_N/SSGAIX/ PG MGGBuffer SILBuffer CSTMBuffer BGPDT Buffer SLTBuffer PGBufferLUSET UsedifRFgRCE cards present 6GIN_buffers . /SSGBIX/during EDTL, TEMPL phase Cg_4gN/SSGBIX/ PG PREMAT Tables SIL i GPTT/EDT Scratch Buffer GPTT orEDTBuffer CSTMBuffer ESTBuffer PGBufferLUSET 5GIN_buffers lO0L_ADID’smaximum. 4.41-29 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.41.13 Diagnostic Messages Ifthecorestorage requirements asdepicted intheabove diagrams arenotmet, SSGIwill issue fatal error message 3008. 4.41-30\nFUNCTIONAL MODULESSG2(STATICSOLUTIONGENERATOR-PHASE2) 4.42FUNCTIONAL MODULESSG2(STATICSOLUTIONGENERATOR-PHASE2) 4.42.1Entry Point: SSG2 4.42.2 Pur_ Toreduce theapplied loadvectors andenforced displacements intoequivalent load vectors applied totheindependent displacement coordinate sets. 4.42.3 DMAPCalling Sequence SSG2 USET,GM,YS,KFS,G_,DM,PG/QR,P_,PS,PL/ $ 4.42.4 Input DataBlocks USET GM YS KFS G_ DM PG-Displacement setdefinitions table. -Multipoint constraint transformation matrix -mset. -Constrained displacements -sset. -Partition ofstiffness matrix after single-point constraints havebeenremoved. -Structural matrix partitioning transformation matrix. Rigid bodytransformation matrix. Static loadvector matrix giving static loads -gset. I.USETmustbepresent. 2.GMmust bepresent ifmsetisnotnull. 3.YSmustbepresent ifssetisnotnull. 4.KFSmustbepresent ifssetisnotnull. 5.G_mustbepresent ifosetisnotnull. 6.DMmust bepresent ifrsetisnotnull. 7.PGmust bepresent. Output DataBlocks -Determinate support forces matrix -rset. -Partition oftheloadvector matrix giving loads duetostatic force -oset. -Partition ofloadvector matrix giving loads insset. -Partition ofloadvector matrix giving static loads on£set.Notes: 4.42.5 QR P_ PS PL 4.42-I\nMODULE FUNCTIONAL DESCRIPTIONS Notes: I.QRmustbepresent ifrsetisnon-null. 2.P_mustbepresent ifosetisnon-null. 3.PSmustbepresent ifssetisnon-null. 4.PLmustbepresent if_setisnon-null. 5.Iftheproblem hasnosets,SSG2willreturn. 4.42.6 Parameters None 4.42.7 Method ThefifthwordoftheUSETtrailer control blockisanalyzed todetermine thepresence of m’s, s’s, o’s, orr’s. Each ofthefollowing steps isomitted iftheappropriate setisnull. Thefollowing steps indicate theoperations ononeload setvector. Theactual algorithm uses allvectors ineach step byperforming matrix operations. I.Ifm’sarepresent, thePGvectors arepartitioned using USET (UG,UN,UM) andsub- routines CALCV andSSG2A: Theloadsontheunsetarecalculated as: {Pn}:{_}+[Gm]T{Pm}, (2) bycalling subroutine SSG2B. 2.Ifs’sarepresent, the{Pn}loadvectors arepartitioned usingUSET(UN,UF,US) and subroutines CALCV, andSSG2A: The{Ps}vectors areoutput indata block PS. Theloads ontheuf(3) setarecalculated as: 4.42-2"},"title":"Programmer's Manual P47"},"/docs/programmers/programmers_manual_048/":{"data":{"":"FUNCTIONAL MODULE SSG2 (STATIC SOLUTION GENERATOR -PHASE2) IPf_ =Ff- IKfsl IYsl (4) The IYsl vectornormallyiszero. Ifmorethanoneloadvectorisbeing reduced, Ys}isexpanded tohaveNidentical columns suchthat theabove matrix equation isdimensionally consistent. Thisisaccomplished insubroutine SSG2BI (seebelow). 3.Ifo’sarepresent, the{Pf}vectors arepartitioned using USET(UF,UA,U_) and subroutines CALCV andSSG2A: Polvectors arewritten ondatablock P_. Theequivalent loads ontheuasetarecalculated as: IPa =l a(+TIpo( (6) Subroutine SSG2B iscalled toperform thisoperation. 4.Ifr’sarepresent, the{Pa}vectors arepartitioned using USET (UA,UL,UR) andsubroutines CALCV andSSG2A: ,IP_I,vectors arewritten ondatablock PL. Thereaction vectors onthesupportpoints are: lqr_:_IPrl -[DmIT where[Dm]corresponds tothedatablockDM. 4.42.8 Subroutines SSG2usesmatrix subroutines CALCVandSSG2Aformatrix partitioning operations and subroutine SSG2Btodrivesubroutine MPYAD. Seesection 3fordetails.IPf( (8) {qr}vectors arewritten ondatablock QR. 4.42-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.42.8.1 Subroutine Name: SSG2BI I.Entry Point: SSG2DI 2.Purpose: SSG2BI isexactly likeSSG2B. Itcomputes [A][B]+[C]=[D]except YSisfirst expanded ontoSCRIwhich thenplays theroleof[B]. 3.Calling Sequence: CALLSSG2BI (A,SCRI,C,D,T,PREC,ISIGN,YS,SCR2) Thevariables havethemeaning asSSG2B except forYS,which istheGIN_ filenumber ofthe YSdatablock -integer -input. See3.5.13 forSSG2B details. 4.42.9 Design Requirements /SSG2X/isopencoreforCALCV. Fourscratch files areused. SSG2BI isanentry point inSSG2B. 4.42-4 (7/I/70)\nFUNCTIONAL MODULESSG3(STATICSOLUTIONGENERATOR-PHASE3) 4.43FUNCTIONAL MODULESSG3(STATICSOLUTIONGENERATOR-PHASE3) 4.43.1Entry Point: SSG3 4.43.2 Purpose: Toperform theactual static solutions. Adisplacement solution isproduced foreach applied loadandtested forpossible matrix decomposition errors. 4.43.3 DMAPCallin 9Sequence SSG3 LLL,ULL,KLL,PL,L_,U_@,K_B,P_/ULV,U_V,RULV,RU@V/V,N,MIT/V,Y,IRES $ 4.43.4 Input DataBlocks LLL -Lower triangular factor ofKLL-set. ULL -Upper triangular factor ofKLL-set. KLL Partition ofstiffness matrix -set. PL Partition oftheloadvector matrix giving static loads on_set L Lower triangular factor ofK_B-oset. U Upper triangular factor ofK_B-0set. K_B -Partition ofstiffness matrix -oset. P@ -Partition oftheloadvector matrix giving loads duetostatic forces -oset. Notes: I.ULL,LLL andPLmustbepresent. 2.KLLcanbepurged ifRULVispurged. 3.U,L, P_canbepurged if_MIT( O. 4.K_Bcanbepurged if_MIT• 0orRU_V ispurged. 4.43.5 Output DataBlocks ULV Partition ofthedisplacement vector matrix giving displacements -_set. U_V Partition ofthedisplacement vector matrix giving displacements -oset. RULV -Residual vector matrix forthe_set. RU_V -Residual vector matrix fortheoset. Notes: I.ULVmust bepresent. 4.43-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.43.62.U_Vcanbepurged if_MIT\u003c O. 3.RULVandRUOVcanbepurged. 4.[RULV] =[KLL] [ULV] -[PL]. [RUOV] =[K_B][U_V] -[PO]. Parameters MIT IRESInput-integer-no default. MITcontrols operations ono-set matrices. Notused-integer-no default. IRESisauser-controlled parameter thathemayset to+lonaBulkDataPARAM cardsothatresidual vectors maybeprinted. Itis included heretodefine aninitial value forIRES. 4.43.7 Method 4.43.7.1 Solution Algori thim Fornormal statics problems PLandPOvectors areused; forinertia relief problems thePLIandP@Ivectors aregenerated intheSSG4module andusedinstead ofPLandP.The equations tobesolved are: [Kc] {u_} ={P_}, (I) andifo’sarepresent (MIT \u003eO) [Koo][u]={Po}, (2) where [KL_]=[Lc_]lULL], (3) [Koo]=[Loo][Uoo]. (4) [L_] and[Loo] arelower traingular matrices. [U_] and[Uoo]areupper triangular matrices. Theequations aresolved inthefollowing manner: [L][U]{u}={P}, (5) or 4.43-2\nFUNCTIONAL MODULESSG3(STATICSOLUTIONGENERATOR-PHASE3) [L]{y}={P}. (6) Inturnthesolutionforthedisplacement vectoris: [U]{u}:{y}• (7) ErrorCheckAlgorithm 4.43.7.2 IfRULVisnotpurged,anerrorcheckismade.Sinceitispossibleforthestiffness matricestobenearlysingularorill-conditioned, themodulecalculates thefollowingerror analysistermsforboththe{u_}and{uo}solutions: {6P_}:{P_}-[K\u0026\u0026]{u\u0026}, (8) {u_}T{6P_} ce- (9) {p_}T {u_} {6Pz} forms datablock RULV orRU_V. ceisprinted foreach solution. 4.43.8 Subroutines SSG3A -istheonly auxiliary subroutine inmodule SSG3 (seesection 3.5.18 fordescription). 4.43.9 Design Requirements Twoscratch files areneeded. 4.43-3 (3/I/71)\nFUNCTIONAL MODULE SSG4(STATICSOLUTION GENERATOR -PHASE 4) 4.44 FUNCTIONAL MODULE SSG4 (STATIC SOLUTION GENERATOR -PHASE 4). 4.44.1 Entry Point: SSG4 4.44.2 Purpose Thepurpose ofthismodule istocalculate mass loads inaStatic Analysis with Inertia Relief problem. Therigid bodyaccelerations arefunctions ofthereactions onthefictitious supports. Theinertia loads onthestructure areproportional tothese accelerations. 4.44.3 DMAPCalling Sequence SSG4 PL,QR,P_,MR,MLR,DM,MLL,M_B,MI_AB,G_,USET/PLI,P_I/V,N,_MIT $ 4.44.4 Input DataBlocks PL-Partition oftheloadvector matrix giving static loads -set. QR -Determinate support forces matrix -rset. P-Partition oftheloadvector matrix giving loads duetostatic force -oset. MR-Rigid bodymassmatrix -rset. MLR Partition ofmassmatrix. DM Rigid body transformation matrix. MLL Partition ofmassmatrix -set. M_OB-Partition ofmassmatrix -oset. M_AB-Partition ofmassmatrix. G Structural matrix partitioning transformation matrix. USET-Displacement setdefinitions table. Note: Allmatrices must bepresent iftheir appropriate setisnon-null. 4.44.5 Output DataBlocks PLI -Partition ofloadvector forinertia relief matrix giving loads duetostatic and inertial forces on_set. 4.44-I\nMODULEFUNCTIONAL DESCRIPTIONS P_I-Partitionofloadvectorforinertiareliefmatrixgivingloadsduetoinertialand staticforcesonoset. Note:Bothmatricesmustbepresentiftheirappropriate setisnon-null. If@MIT\u003eO,theosetisnon-null.4.44.6Parameters @MIT-Input-integer-no default. 4.44.7Method I.Fheaccelerations oftheurdegreesoffreedomare: {ar}=.[mr]-I{qr}. [mr]corresponds todatablockMR.(i) Subroutines FACTOR andSSG3A areusedtosolve for{at}. 2. {P_} [D]corresponds todatablock DM. 3.If_MITmO:Thetotal load vectors onthestructure are: ={P_}+ [[M_] [D]+[M_r]]{ar}. Subroutine SSG2B isusedtodrive MPYAD. [E oolE ol+t ool]I-V-] Theproduct [--] {ar}i(2) {p} : (3) sformed bymerging columns of[D]{ar}with {ar}using USET (UA,UL,UR). Subroutine SDRIB isusedtodrive MERGE, andSSG2B forthematrix products. 4.44.8 Subroutines SSG2B -Seesubroutine description, section 3.5.13 SSG3A -Seesubroutine description, section 3.5.18 SDRIB -Seesubroutine description, section 3.5.8 4.44.9 Design Requirements Fivescratch files arenecessary. 4.44-2\nFUNCTIONAL MODULESDRI(STRESSDATARECOVERY-PHASEl) 4.45FUNCTIONAL MODULESDRI(STRESSDATARECOVERY-PHASEI) 4.45.1Entry Point: SDRI 4.45.2 TheSDRImodule utilizessolutionvectors toproduce displacements, eigenvectors, velocities, accelerations, applied loads andreaction loads. Thevectors input toSDRI are intheformofpacked matrices with eachcolumn asolution vector foradifferent subcase. eigenvalue, frequency/load, ortransient output time. Therowposition ofeachtermina vector corresponds toadegree offreedom inaunique displacement set. Therelative position ofthetermmust beconverted toarelative position inthevector which includes alldis- placement components inthesystem. Thedependent components ofthedisplacement vector arerecovered andmerged toproduce acomplete vector describing alldegrees offreedom in thestructural ordynamics model. IntheStatic Analysis orStatic Analysis with Inertia Relief Rigid Formats, SDRIcollects solutions foreach boundary condition ontoasingle file, convenient forthesolution ofsymmetry problems. 4.45.3 DMAPCallin9 Sequence SDRI USET,PG,ULV,U_V,YS,G_,GM,PS,KFS,KSS,QR/UGV,PGG,QG/V,N,APPEND/V,N,F_RMAT $ 4.45.4 Input DataBlocks USET PG ULV U_V YS Ge GM PS KFS KSS QR-Displacement setdefinitions table. -Static loadvector matrix giving static loads -gset. -Partition ofthedisplacement vector matrix giving displacements -_set. -Partition ofthedisplacement vector matrix giving displacements intheoset. -Constrained displacements -sset. -Structural matrix partitioning transformation matrix. -Rigid bodytransformation matrix. -Partition ofloadvector matrix giving loads insset. -Partition ofstiffness matrix after single-point constraints havebeen removed -sset. -Partition ofstiffness matrix after single-point constraints havebeen removed -sset. -Determinate support forces matrix -rset. 4.45-I\nMODULE FUNCTIONAL DESCRIPTIONS Notes: 4.45.5 UGV PGG QG Notes:I.USETmustalways bepresent. 2.PGmayormaynotbepresent. 3.ULVmustalways bepresent. 4.U_Vmustbepresent unless theosetisnullorF_RMAT =DYNAMICS (seebelow). 5.YSmayormaynotbepresent. 6.G_mustbepresent unless theosetisnull. 7.GMmustbepresent unless themsetisnull. 8.PSmayormaynotbepresent. 9.KFSmustbepresent unless thessetisnullorQGisnotpresent. I0.KSSmustbepresent unless YSisabsent orthessetisnullorQGisnotpresent. II.QRmayormaynotbepresent. Output DataBlocks Displacement vector matrix giving displacements inthegset. Static loadvector appended toinclude allboundary conditions -gset. Single-point constraint forces anddeterminate support forces matrix -gset. I.IfPGispresent, PGGmustbepresent. 2.UGVmustbepresent. 3.QGmustbepresent. 4.IfAPPEND tI,UGV,PGG,QGwillbeappended tothedataalready onthesefiles. 4.45.6 Parameters APPEND -Input-integer- nodefault. Seenote4above. FgRMAT -Input-BCD-no default. Format indicates theproblem type. STATICS Statics typeproblem. REIGEN Realeigenvalue problem. DYNAMICS -Dynamic problem. 4.45.7 Method Thefollowing stepsareperformed bytheSDRImodule inthemostgeneral case. Most problems, however, donotusealloftheconstraint options. Inthesecases certain steps 4.45-2\nFUNCTIONAL MODULESDRI(STRESSDATARECOVERY-PHASEI) areskipped.ThetaskSDRIperformsalsovariesfromRigidFormattoRigidFormat. I.IfPGispresent,itiscopiedorappendedontoPGG.(Subroutine SDRIA). 2.Ifr’sarepresentandtheproblemtypeisnotDYNAMICSorREIGEN: Thisisaccomplished bysubroutine SDRIB,thedriverforMERGE. details. Ifs’sarealsopresent: Otherwise,lq÷l\u003eIfSeesection 3.5.8for I_i\u003e which isthencopied orappended ontoQG. 3.Ifo’sarepresent, thedependent degrees offreedom ofthe\"omitted\" coordinates {uo}arecomputed. Forstatics problems:lqgI’ (Subroutine SDRIBandSDRIA). ForDynamic problems: Uo=e_o][o°] This isaccomplished bycalling SSG2B (see section 3.5.13). Theindependent degrees of freedom {ua}or{ud}aremerged with thedependent coordinates {uo},using subroutine SDRIB: lu-:-I:\u003elu,l• 4.Ifs’sarepresent, thecoordinates fixed bysingle-point constraints, lUsl,(I) (2) (3) (4) (5) (6) 4.45-3\nMODULE FUNCTIONAL DESCRIPTIONS mayhaveconstrained displacements, {Ys},inastatics problem. the{uf}vectorusingsubroutine SDRIB: I-ysf-I:\u003e{un}Thesearemergedwith (7) Theforces ofsingle-point constraint {qs}arecalculated using SSG2B fromtheequation: {qs}=-{ps}+[Kfs]T{uf}+[Kss] {Ys}. Subroutine SDRIBisusedtomerge{qs}with{qf}toform{qg}. thef-set: {qg}iscopiedorappended ontodatablockQG(Subroutine SDRIA). lu;l-\u003e(8) {qf}is{qr}expanded to (9) IfYSisnotpresent, (lO) Theforcesofsingle-point constraint arecomputed asinEquation 7except the{Ys}term isomitted. Ife-points (extrapoints) arepresent inadynamics problem, [Kfs]mustbeconverted to [K_s]bysubroutine SDRIC. Iftheproblem isatransient problem, {uf}mustbereduced to displacement vectors only,since{uf}contains triples -displacement, velocity and acceleration intransient problems. Thisreduction isaccomplished inSDRID. 5.Ifm’sarepresent, thedependent coordinates, {Um},ofthemultipoint constraint equations arecalculated using: (II) Indynamics problems [Gm]{um}:[Gm]{un}• :[G]. Thetwovectors {um}and{un}aremerged 4.45-4\nFUNCTIONAL IODULE SDRI(STRESS DATARECOVERY -PHASE I) 6o\u003e(Ug} {Ug}(or{Up}fordynamics problems) iscopied orappended onto UGV. 4.45.8Subroutines(12) SSG2B andSDRIB areusedasutility routines. 4.45.8.1 I. 2. 3.Seesection 3.5.13 and3.5.8 fordetails. Subroutine Name: SDRIA Entry Point:SDRIA Purpose: Tocopyorappend vectors. Calling Sequence: CALLSDRIA (IN,I_UT) IN GIN_filenumber ofinput file-integer -input. I_UT GIN_ filenumber ofoutput file -integer -input. C_MM_N//IAPEND- Append flag. IfIAPEND l,I_UTwill bepositioned after thelast record andINcopied ontoI_UTatthispoint. Otherwise INiscopied ontoI_UT. 4.45.8.2 Subroutine Name: SDRIC I° 2. 3. KFS KDFS 4.Design Requirement; parameters.Entry Point: SDRIC Purpose: Toexpand afile (KFS) fromthefsettothefesetfordynamics. Calling Sequence: CALLSDRIC (IPVECT,KFS,KDFS) IPVECT -GIN filenumber ofthepartitioning vector previously generated - integer -input. -GIN_ filenumber of[Kfs] -integer -input. -GIN_filenumber of[K_s] -integer -input. SDRIC depends onaprevious calltoSDRIB toinitialize set 4.45.8.3 Subroutine Name: SDRID I.Entry Point: SDRID 4.45-5\nMODULE FUNCTIONAL DESCRIPTIONS 2. 3. 4.45.9Purpose: Tostripvelocity andacceleration vectors from{uf}. Calling Sequence: CALLSDRID(PS,IUF,IUFI,ITRAN) PS GIN_filenumber ofPS-integer -input. IUF GIN_filenumber of{uf}-integer -input. IUFI -GIN_filenumberof{uf}stripped -integer -input. ITRAN -Flagwhichshowswhether problem isatransient analysis ornot-integer - input. Itsvaluesare: 1:\u003enot transient 0:\u003etransient. Design Requirements Sixscratch filesarerequired. 4.45-6\nFUNCTIONAL MODULESDR2(STRESSDATARECOVERY-PHASE2) 4.46 4.46.1 4.46.2FUNCTIONAL MODULESDR2(STRESSDATARECOVERY-PHASE2) Entry Point: SDR2 Purpose TheSDR2module processes theoutput requests forforces ofsingle-point constraint, loads, point displacements, point velocities, point accelerations, element stresses, andelement forces, fomatting theoutput datablocks withthese final output results for: a)direct output- ingbytheOutput FileProcessor (FP) module orb)input totheS_RT2 processor (SDR3) module and thentheXY-output modules (XYTRAN andXYPL_T). 4.46.3 DMAPCalling Sequence SDR2EQEXIN ‘CASECC CSTN,MPT,DIT,{EQDYN },SIL_lCASEXX’ ISILD_‘GPTT’EDT’ BGPDT, P°°IPGV] PPF , CL_QG QBG BQG QGI QPC QPUGV UGVl UPV UPVC UBGV PHIG CPHIPXYCDB / I II_QGI_PGI _QBGI _PPCl ,_BQGI _PPI _QPCl _QPIiI00ovlEs1i100Pvl_UPVCI __ESCl ‘_UBGVI (’)_ESBI ’ _PHIG __BESI _CPHIP@EFI _(PUPV OEFCI __PUGVI OEFBI _’_PPHIG OBEFI !_PUBGV] C,N,STATI CS REIGEN DSO DSI FREQ TRANSNT BLKO BLKI CEIGEN PLAIV,N,N_S_RT2$ 4.46-I\nMODULEFUNCTIONAL DESCRIPTIONS 4.46.4Input DataBlocks CASECC CASEXX CSTM MPT DIT EQEXIN EQDYN SIL SILD GPTT EDT BGPDT PGG PGVl PPF PPT LAMA CLAMA QG QBG BQG QGI QPC QP UGV UGVl UPV-CaseControl DataTable. -CaseControl DataTable forDynamics problems. -Coordinate System Transformation Matrices. -Material Property Table. -Direct Input Tables. -Equivalence between external gridorscalar numbers andinternal numbers. -Equivalence between external points andscalar index values. -Scalar Index List. -Scalar Index ListforDynamics. -GridPoint Temperature Table. -Element Deformation Table. -Basic Grid Point Definition Table. -Static loadvector appenoed toinclude allboundary conditions. -Matrix ofsuccessive sumsofincremental loadvectors. -Dynamic loads forfrequency response. -Linear dynamic loads fortransient analysis. -RealEigenvalue Table. -Complex Eigenvalue Table. -Single-point constraint forces anddeterminant support forces matrix. -Single-point forces ofconstraint matrix forDifferential Stiffness -gset. -Single-point forces ofconstraint matrix foraBuckling Analysis problem -gset. -Matrix ofsuccessive sumsofincremental vectors ofsingle-point constraint forces. -Complex single-point forces ofconstraint -pset. Transient single-point forces ofconstraint -pset. Displacement vector matrix giving displacements inthegset. Matrix ofsuccessive sumsofincremental displacement vectors. Transient solution vectors -pset. 4.46-2\nUPVC UBGV PHIG CPHIP EST ESTL XYCDBFUNCTIONAL MODULESDR2(STRESSDATARECOVERY-PHASE2) Frequencyresponsesolutionvectors-pset. Displacement vectormatrixfordifferential stiffnessgivingdisplacements inthegset. Eigenvector matrix giving eigenvectors. Complex eigenvectors inthepset. Element Summary Table. Element Summary Table forLinear Elements. XYCaseControl DataBlock. Notes: I.Ifthefirst input datablock ispurged, itisafatal error. Thisdata block iscalled “Case Control” inthisModule Functional Description. 2.TheCSTMmaybepurged ifnocoordinate systems arereferenced, orifstresses and/or forces arenotrequested. 3.TheMPTmaybepurged ifnostress orforce requests arepresent. 4.TheDITmaybepurged ifnostress orforce requests arepresent, orifno temperature dependent materials arereferenced. 5.Thesecond record ofEQEXIN orEQDYN must exist ifarequest exists foranyof: loads, forces ofsingle-point constraint, displacements, velocities, accelerations, orplots. 6.SILorSILDmaybepurged ifnostress orforce requests exist, orthere are noextra-points andnothermal loads. (Thesecond record isusedbySDR2). 7.TheGPTTmaybepurged ifnothermal loading exists, orthere arenorequests for stresses orforces. 8.TheEDTmaybepurged ifthere arenoelemen_ requests forforces orstresses, orifthere arenoenforced element deformations intheproblem. 9.TheBGPDT maybepurged iftheproblem isinbasic coordinates andnoelement requests forstresses orforces exist. IO.LAMAorCLAMA maynotbepurged ifaneigenvalue orfrequency response problem• 4.46-3\nMODULE FUNCTIONAL DESCRIPTIONS II.IfinputdatablockII(QGorQBGetc.)ispurged, forces ofsingle-point constraint requests areignored. 12.Ifinputdatablock12(UGVorUGVIetc.)ispurged, SDR2willprocess onlyloadsand forces ofsingle-point constraint requests. 13.IftheESTorESTLispurged, element stresses andforcerequests areignored. 14.TheXYCDBmaybepurged. 4.46.5 Output DataBlocks _PGI -1_PPCI Output loadvector requests, _PPI _QGI -/_QBGI _BQGI Output forces ofsingle-point constraint requests. _QPCl _QPI _UGVl -1_UPVCI Output displacement vector requests. _UBGVI @PHIG -} _CPHIP Output eigenvector requests. OESI -/_ESCI _ESBI Output element stress requests. OBESI @EFI - _EFCI I _EFBI Output element forcerequests. _BEFI - PUPV PUGVl PPHIG PUBGVITranslation components ofthedisplacement vector rotated tobasiccoordinates. Notes: Output datablocks purged willresult inoutput requests tothosedatablocks notbeingprocessed. 4.46-4\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) 4.46.6 STATICS REIGEN DSO DSI FREQ TRANSNT BKLO BKLI CEIGEN PLA N_S(RT2Parameters -BCDconstant indicating aStatics solution. BCDconstant indicating aRealEigenvalue solution. BCDconstant indicating theStatics phase ofaDifferential Stiffness solution. BCDconstant indicating final phase ofaDifferential Stiffness solution. BCDconstant indicating aFrequency Response solution. BCDconstant indicating aTransient Response solution. BCDconstant indicating theStatics phase ofaBuckling solution. BCDconstant indicating thefinal phase ofaBuckling solution. BCDconstant indicating aComplex Eigenvalue solution. BCDconstant indicating aPiecewise Linear Analysis solution Integer-Output-Set to0ifthere arenoS_RT2 requests orrequirements, andsettolotherwise. 4.46-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.46.7 Method TheSDR2functional module isconstructed inamodular formconsisting offivestages. Asmallexecutive control program (subroutine SDR2)containing themainentrypointforthe module serially callsthefivestages forexecution. I.Stage I,performed bysubroutine SDR2AA, prepares, ifnecessary, amodified Case Control datablock, internal toSDR2,toinsure thatanyXY-output requests present andnotincluded inthe_FPoutput requests ofCaseControl areincluded intheoutput ofSDR2forlaterprocessing byfunctional modules XYTRAN andXYPLOT. 2.StageII,performed bysubroutine SDR2A, analyzes theoverall output requests within thesubcases ofCaseControl andsetsflagsforusebystages III,IV,andV. 3.Stage III,performed bysubroutine SDR2B, isexecuted onlyifstage IIhasdetermined thatsomeelement forceorstress output requests arepresent within CaseControl. If executed, element stress matrices arecomputed onceandstored alongwithcertain other element properties appearing intheESTforeachelement appearing inamaster setof element requests. (Themaster setisasetwhich istheunionofallelements forwhich output requests arepresent inanysubcase ofCaseControl). Thesestored dataareused instageVrepeatedly asnecessary tosatisfy thevarious output request combinations andmultiple displacement vectors thatmaybepresent. 4.Stage IV,performed bysubroutine SDR2C, isexecuted onlyifinstage IIithasbeen determined thatsomeoutput requests arepresent foranyof:forces ofsingle-point constraint, loads, displacement, velocities, accelerations, ordeformed structure plots. Iftheyarepresent, theserequests (except forstructure plots) arefullyprocessed within thisstage. 5.StageV,performed bysubroutine SDR2D, isexecuted onlyifstage IIIwasexecuted. Stage Vperforms finalelement stress andforcecomputations. Foreachsubcase ofCase Control containing element output requests, theappropriate displacement vector isapplied tothestress matrices, computed inStageIII,oftheelements requested foroutput to arrive atthefinalstress and/or forceoutputs. 4.46-6\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) Forseveral ofthefivestages themainsubroutine listed utilizes additional subroutines toaccomplish itsparticular task. Themethods employed within eachstage arefurther described inthesubroutine descriptions inthenextsection. 4.46.8 Subroutines Theutility routines PRETRS andPREMAT arecalled within theSDR2module forinitialization purposes sothatthestructural element subroutines cancalltheentry point TRANSS ofPRETRS andMATofPREMAT tofetch Coordinate System Transformation Matrices(CSTM) dataandmaterial properties (MPTandDIT)datarespectively. G_ATS isusedbyelement roJtines asageneral matrix multiply routine andINVERS isusedforinversion ofsmall in-core (order usually _12) matrices. Itshould benoted thatallmatrices referenced inthestructural element subroutines arestored byrowsandaresingle precision. Seethesubroutine descriptions forthese routines insection 3. Theaxisymmetric shell element routines STRIRI, STRAPI, STgRDI, STRIR2, STRAP2, ST_RD2 utilize thefollowing functions andsubroutines whose double precision versions aredescribed intheModule Functional Description forS_l (section 4;27.8). SDR2(Singleprecision) SMAI (Double precision) AI DKI AK DKK DF4,1 BINT DKINT AJ DKJ C_EF DKEF F89 DK89 FFIO0 DKIO0 IFAC KFAC FJAB DKJAB F6219 DK219 F6211 DK211 R_MBER R(_MBDK F4 D4K F5 D5K F6 D6K AMATRX DMATRX 4.46-7"},"title":"Programmer's Manual P48"},"/docs/programmers/programmers_manual_049/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 4.46.8.1 Subroutine Name: SDR2AA I.Entry Point: SDR2AA 2.Purpose: Toperform stage Iasdefined above, under “Method”. 3.Calling Sequence: CALLSDR2AA 4.Method: SDR2AA attempts toopentheXYCDB datablock. Ifitispurged, areturn is given toSDR2. Otherwise, theheader record andfirst data record ofXYCDB areskipped anddataapplying toallsubcases arereadfromthesecond datarecord. Ifnosuchdata exist adummy master iscreated. Otherwise, themaster dataarereduced toalistof unique pairs. Ifonlymaster dataexist, flags aresetappropriately. Foreachrecord intheCaseControl datablock thefollowing processing occurs. a.Therecord isreadintocore. IfnoXYCDB subcase corresponds totheCase Control subcase, pointers aresettothemaster data. Otherwise, themaster data andappropriate XYCDB subcase dataaremerged andreduced tounique pairs. b.Foreachrequest forsolution setoutput inXYCDB, thecorresponding request inCaseControl isexamined. Ifnorequest ispresent inCaseControl, theXYCDB request isreduced toasetinCaseControl format, andarequest forthesetis turned oninCaseControl. IftheCaseControl setis\"ALL\", nofurther action istaken. IftheCaseControl request isaset, thesetis\"merged\" with theXYCDB set,andtherequest isaltered toreflect thenewset(unless allpoints inthe XYCDB setwerealready intheCaseControl set). Aflag issetifanynewrequests areformed. c.Whenallrequests forthecurrent CaseControl record havebeenanalyzed, the record (asmodified) iswritten onascratch file. d.WhenallCaseControl records havebeen read, theGINOfilename fortheCase Control datablock isswitched tothescratch file (unless nomodifications were madetoCaseControl). 4.46.8.2 Subroutine Name: SDR2A I.Entry Point: SDR2A 4.46-8\nFUNCTIONAL MODULESDR2(STRESSDATARECOVERY-PHASE2) 2.Purpose:ToperformstageIIasdefinedabove,under\"Method\". 3.CallingSequence: CALLSDR2J_ 4.Method:SDR2AanalyzesCaseControltodeterminetheoveralloutputrequests. Flags aresettozeroforallrequestpossibilities, and,aseachrecordofCaseControlis analyzed,flagsaresettolforthoserequestspresent.Simultaneously, amasterset ofallstructural elementsrequestedforoutputiscreated.Themastersetisthena unionofallelementrequestspresentwithduplicates removed. 4.46.8.3Subroutine Name:SDR2B I.EntryPoint:SDR2B 2.Purpose:ToperformstageIIIasdefinedabove,under\"Method\". 3.CallingSequence: CALLSDR2B 4.Method:SDR2Bperformsthe\"phaseI\"stressandforcerecoverycomputations. TheCSTMisfirstreadintocore,ifpresent,andthenthematerialpropertydataare readintocoreviatheroutinePREMAT.Atthispoint,theESTisopenedandprocessed withonepass. SDR2Adetermined amastersetlistofallelementsrequestedbytheusertobe output.Thismastersetlist,residingincore,isnowusedastheESTisprocessed. ForeachrecordoftheESTaparticular elementtypeisrepresented. Thusthefirst wordofanESTrecord(givingtheelementtype)isread,andtheelementdependent variablesareset.Theelementsummaryforeachelementofthistypeisread,and,if theelementisincludedinthemasterset,thephaseIstressrecoveryroutineiscalled tocomputetheelementstressmatriceswhicharefunctionsofelementgeometryand materialproperties only.Theresultsofthiscomputation areoutputtoascratchdata blockforusebySDR2D(stageV).Whentheend-of-record isencountered ontheESTfor thiselementtype,thenextelementtyperecordisprocessed, untilallrecordsofthe ESThavebeenpassed. 4.46-9\nMODULE FUNCTIONAL DESCRIPTIONS 4.46.8.4 I. 2. 3. 4.46.8.5 I, 2. 3. 4.46.8.6 I. 2. 3, 4.46.8,7 I. 2. 3. IP_AG 4.46.8.8Subroutine Name: SR_DI EntryPoint: SR_DI Purpose: Togenerate element stress matrices fortheR_Delement. CALLSRODI Calling Sequence: Subroutine Name: SBEAMI EntryPoint: SBEAMI Purpose: Togenerate element stressmatrices fortheBEAMelement. CALLSBEAMI Calling Sequence: Subroutine Name: STUBEI EntryPoint: STUBEI Purpose: Togenerate element stressmatrices fortheTUBEelement. CALLSTUBEI Calling Sequence: Subroutine Name: SPANLI EntryPoint: SPANLI Purpose: Togenerate element stressmatrices fortheSHEARandTWISTelements. Calling Sequence: CALLSPANLI (IARG) i4implies SHEARpanelelement stressmatrices willbegenerated. 5implies TWISTpanelelement stressmatrices willbegenerated. Subroutine Name: STRBSl I.EntryPoint: STRBSI 2.Purpose: Togenerate element stressmatrices fortheTRBSCelement andperform sub-computations fortheSQPDLI andSTRPLI routines. 4.46-10\nFUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE 2) 3.Calling Sequence: CALLSTRBSI (IARG) I!=TRBScelementIARG =Sub-computations forSQDPLI. =Sub-computations forSTRPLI. 4.46.8.9 Subroutine Name: STRPLI I.Entry Point: STRPLI 2.Purpose: Togenerateelement stress matrices fortheTRPLT element. 3.Calling Sequence: CALLSTRPLI 4.46.8.10 Subroutine Name: SQDPLI I.Entry Point: SQDPLI 2.Purpose: Togenerate element stress matrices fortheQDPLT element. 3.Calling Sequence: CALLSQDPLI 4.46.8.11 Subroutine Name: STRMEI I.Entry Point: STRMEI 2.Purpose: Togenerate element stress matrices fortheTRMEM element andperform sub-computations fortheSQDMEI routine. 3.Calling Sequence: CALLSTRMEI (IARG) _0=TRMEMIARGt l=Sub-computations forSQDMEIsubroutine. 4.46.8.12 Subroutine Name: SQDMEI I.Entry Point: SQDMEI 2.Purpose: Togenerate element stress matrices fortheQDMEM element. 3.Calling Sequence: SQDMEI 4.46-11\nMODULE FUNCTIONAL DESCRIPTIONS 4.46.8.13 Subroutine Name: SELASI I.EntryPoint: SELASI 2.Purpose: Togenerate element stress matrices fortheelements listed underthe Calling Sequence. 3.Calling Sequence: CALLSELASl (IARG) i=ELASl=ELAS2 IARG =ELAS3 =ELAS4 4.46.8.14 Subroutine Name: STRQDI I.EntryPoint: STRQDI 2.Purpose: Togenerate element stress matrices fortheelements listed underthe Calling Sequence. 3.Calling Sequence: I=TRIAl2=TRIA2 IARG3=QUADI 4=QUAD2CALLSTRQDI (IARG) 4.46.8.15 Subroutine Name: SBARI I.EntryPoint: SBARI 2.Purpose: Togenerate element stress matrices fortheBARelement. 3.Calling Sequence: CALLSBARI 4.46.8.16 Subroutine Name: SC_NEI I.Entry Point: SC_NEI 2.Purpose: Togenerate element stress matrices fortheC_NEelement. 3.Calling Sequence: CALLSC_NEI 4.46-12\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) 4.46.8.17 Subroutine Name: STRIRI I.Entry Point: STRIRI 2.Purpose: Togenerate element stress matrices fortheTRIRG element. 3.Calling Sequence: CALLSTRIRI 4.46.8.18 Subroutine Name: STRAPI I.Entry Point: STRAPI 2.Purpose: Togenerate element stress matrices fortheTRAPRG element. 3.Calling Sequence: CALLSTRAPI 4.46.8.19 Subroutine Name: ST_RDI I.Entry Point: ST_RDI 2.Purpose: Togenerate stress matrices fortheT_RDRG elephant. 3.Calling Sequence: CALLST_RDI 4.46.8.20 Subroutine Name: SDR2C I.Entry Point: SDR2C 2.Purpose: Toperform stage IVasdefined above, under “Method”. 3.Calling Sequence: CALLSDR2C 4.Method: SDR2C operations aredependent ontheRigid Format being executed. Inall cases thesecond record ofEQEXIN orEQDYN isfirst readintocore. Anover-allloop of3passes isthenexecuted toprocess thefollowing: passl:displacements, velocities, accelerations; pass2:single-point constraint forces; andpass3:loads. ForeachpasstheCaseControl datablock isopenedforinput, andthefollowing operations areperformed depending onRigid Format: a.Foreigenvalue problems, alistofeigenvalues andmodenumbers isreadintocore fromLAMAorCLAMA. b.ForDifferential Stiffness orBuckling phase lproblems, thefirst record of 4.46-13\nMODULE FUNCTIONAL DESCRIPTIONS b CaseControl, which isusedinphase0ofBuckling orCifferential Stiffness, is skipped. c.Forfrequency ortraQs-i_zt response problems, alistoffrequencies ortimesis readintocorefromPPForPPT. Atthispointarecord inCaseControl isread,anditisdetermined ifasymmetry sequence oflength LSYMistobeoutput. Ifitis,theprevious LSYMvectors ofthe UGVdatablockareunpacked andalinear combination isformed incore. Otherwise, UGVis opened, ifnotyetopened, andthenextvector present isunpacked intocore. Dataitemsarenowassembled fortheidentification record, andthisidentification record isoutput totheoutput datablock. Output lineentries forthepoint-ID’s requested arethenwritten ontheoutput datablockforming adatarecord. Atthistime,iftheuser requested magnitude/phase forcomplex outputs, themagnitude/phase computations areperformed onthereal/imaginary pairs. Whenallrequests havebeenprocessed forthisvector, thenextCaseControl record isread. IfnomoreCaseControl records existandtherearemorevectors present, thosevectors areprocessed usingthelastCaseControl record’s specifications. Whenallvectors havebeenprocessed forthecurrent looppass,thenextpassmay bemadeforforces ofsingle-point constraint orloads. Ifdeformed structure plotsarerequested, anoutput plotdatablockisformed during thefirstlooppass,described above, containing translation components ofthe displacement vector rotated tobasiccoordinates. 4.46.8.21 Subroutine Name: SDR2D I.Entry Point: SDR2D 2.Purpose: Toperform stage Vasdefined above, under “Method”. 3.Calling Sequence: CALL SDR2D 4.46-14\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) 4.Method: SDR2D performs thephase 2stress andforce recovery computations. Inthis phase actual stresses andforces arecomputed fortheuser-requested elements. These stresses andforces areafunction ofthestress matrices computed inStage Illandthe displacements atthegridpoints oftheelements. Theoperations ofSDR2Daredependent upontheRigid Format being executed. In allcases theCaseControl datablock isopened first. Foreigenvalue problems alist ofeigenvalues andmodenumbers isreadintocorefromLAMAorCLAMA. ForDifferential Stiffness orBuckling phase lproblems, thefirst record ofCase Control, which isused inphase 0ofBuckling orDifferential Stiffness, isskipped. Forfrequency or transient response problems, alistoffrequencies ortimes isreadintocorefromPPF orPPT. CoreandGIN_ buffers arethenallocated asrequired fora)theCase Control datablock, b)theElement Deformation Table, c)theGridPoint Temperature Table, andd)theelement stress matrices. Ifthere isinsufficient space incorefortheelement stress matrices, theyaremaintained onthescratch datablock generated instage Ill. Thedisplacement datablock (UGV) isnowopened, andthedisplacement vectors present areprocessed serially with CaseControl asinstage IV. Eachelement requested for output hasitsrespective phase 2element stress andforce recovery routine called. Theelement routine outputs formtheentries fortheoutput data record ofthis element type. Inthecaseofacomplex displacement vector, theelement routine iscalled first with apointer totherealdisplacement vector andthenwith apointer totheimaginary displacement vector. Theresults ofthese twocalls aremerged to form thecomplex output stresses andforces. 4.46.8.22 Subroutine Name: SDR2E I.Entry Point: SDR2E 2.Purpose: Topassthrough theelement stress matrices once, executing thefinal element stress andforce computations fortherequests inthecurrent subcase ofCase Control. 3.Calling Sequence: SDR2E ($n) n=F_RTRAN statement number defining thereturn taken intheevent ofanerror inSDR2E. 4.46-15\nMODULE FUNCTIONAL DESCRIPTIONS 4.46.8.23 Subroutine Name: SROD2 I.EntryPoint: SR_D2 2.Purpose: Toperform finalstressandforcecomputations fortheR_Delement. 3.Calling Sequence: CALLSROD2 4.46.8.24 Subroutine Name:SBEAM2 IoEntryPoint: SBEAM2 2.Purpose: Toperform finalstress andforcecomputations fortheBEAMelement, 3.Calling Sequence: CALLSBEAM2 4.46.8.25 Subroutine Name:SPANL2 I.EntryPoint: SPANL2 2.Purpose: Toperform finalstress andforcecomputations fortheSHEARandTWIST elements. 3.Calling Sequence: CALLSPANL2 (IARG) _4=SHEAR element.IARG 5=TWIST element. 4.46.8.26 Subroutine Name:SELAS2 I.Entry Point: SELAS2 2.Purpose: Toperform final stress andforce computations fortheELASI, ELAS2, ELAS3, andELAS4 elements. 3.Calling Sequence: CALLSELAS2 4.46.8.27 Subroutine Name: SBSPL2 I.Entry Point: SBSPL2 2.Purpose: Toperform final stress andforce computations fortheTRBSC, TRPLT, andQDPLT elements. 4.46-16\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) 3.Calling Sequence: CALLSBSPL2 (IARG) li=TRBSC element\"IARG =TRPLT element. =QDPLT ele_mnt. 4.46.8.28 Subroutine Name: STQME2 I.Entry Point: STQME2 2.Purpose: Toperform final stress computations fortheTRMEM ardQD_!EM elements. 3.Calling Sequence: CALLSTQME2 (IARG) 1:TRMEM element.IARG 2=QDMEM element. 4.46.8.29 Subroutine Name: STRQD2 I.Entry Point: STRQD2 2.Purpose: Toperform final stress andforce computations fortheTRIAl, TRIA2, QUADI, andQUAD2 elements. 3.Calling Sequence: CALLSTRQD2 (IARG) IARGj3 =TRIAl orTRIA2 element. 4=QUADI orQUAD2 element. 4.46.8.30 Subroutine Name: SC_NE2 I.Entry Point: SC_E2 2.Purpose: Toperform final harmonic stress andforce computations fortheC_NEelement. 3.Calling Sequence: CALLSC(_r_E2 4.46-17\n4.46.8.31MODULEFUNCTIONAL DESCRIPTIONS Subroutine Name: SC_NE3 I.Entry Point: SC_NE3 2.Purpose: Tocompute thefinal stresses andforces foroneofthe14possible points inaC_NEelement. 3.Calling Sequence: CALLSC_NE3 (LARG) LARG =Logical argument set.FALSE. initially andthenset.TRUE. bySC_NE3 after 4.46.8.32 Io 2. 3. 4.46.8.33 Subroutine Name: I. 2. 3. TGRID 4.46.8.34 Io 2. 3. TGRIDthelastpoint defined foraparticular element hashaditsfinal stresses andforces computed. Subroutine Name: SBAR2 Entry Point: SBAR2 Purpose: Toperform final stress andforce computations fortheBARelement. Calling Sequence: CALLSBAR2 STRIR2 Entry Point: STRIR2 Purpose: Toperform final stress andforce computations fortheTRIRG element. Calling Sequence: CALLSTRIR2 (TGRID) =3wordrealarray giving gridpoint temperatures atthe3connection grid points. Subroutine Name: STRAP2 Entry Point: STRAP2 Purpose: Toperform final stress andforce computations fortheTRAPRG element. Calling Sequence: CALLSTRAP2 (TGRID) =4wordrealarray giving gridpoint temperatures atthe4connection gridpoints. 4.46-18 I !\nFUNCTIONAL MODULE SDR2 (STRESS DATARECOVERY -PHASE 2) 4.46.8.35 Subroutine Name: STBRD2 I.Entry Point: ST_RD2 2.Purpose: Toperform final stress andforce computations fortheT_RDRG element. 3.Calling Sequence: CALLST_RD2 (TGRID) TGRID =Two-word realarray giving gridpoint temperatures atthetwoconnection gridpoints. 4.46.8.36 Subroutine Name: MAGPHA I.Entry Point: MAGPHA 2.Purpose: Tocompute themagnitude andphase ofacomplex number, c. 3.Calling Sequence: CALLMAGPHA (A,B) A-Realpartofconinput, magnitude ofconreturn. B-Imaginary partofconinput, phase ofconreturn. 4.46.8.37 Subroutine Name: SAXIFI I. 2. 3.Entry Point: SAXIFI Purpose: Togenerate element pressure-velocity matrices fortheAXIFelements. Calling Sequence: CALLSAXIFI (IARG) 0=AXIF2 IARG= l=AXIF3 2=AXIF4 4.46.8.38 I. 2. 3.Subroutine Name: SAXIF2 Entry Point: SAXIF2 Purpose: Togenerate element velocities oraccelerations fortheAXIFelements. Calling Sequence: CALLSAXIF2 (I_PT, IPART, BRANCH, EIGEN) 0=AXIF2 I_PT = l=AXIF3 2=AXIF4 IPART =1l=RealVector 2=Imaginary Vector BRANCH = SDR2Process codeword EIGEN = 3words forcomplex orrealeigenvalue orrealfrequency. 4.46-1g (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.46.8.39 Subroutine Name: SSLBTI I.Entry Point: SSL_TI 2.Purpose: Togenerate element pressure-velocity matrices fortheSLBTelements. 3.Calling Sequence: CALLSSL_TI (I_PT) I_PT = I0=SL_T3 l=SLOT4 4.46.8.40 Subroutine Name: SSLBT2 I.Entry Point: SSL_T2 2.Purpose: Tocompute element velocities oraccelerations fortheSL_Telements. 3.Calling Sequence: CALLSSL_T2 (I_PT, IPART, BRANCH, EIGEN) I_PT = I0=SL_T3 l=SL_T4 IPART =Il=RealVector 2=Imaginary Vector BRANCH =SDR2 Process codeword EIGEN =3words foreigenvalue orfrequency. 4.46.8.41 Subroutine Name: SSOLDI I.Entry Point: SS_LDI 2.Purpose: Togenerate stress matrices forthesolid elements. 3.Calling Sequence: CALLSS@LDI (1) Element Type l TETRA 2 WEDGE 3 HEXAI 4 HEXA2 4.46-19a (811172)\nMODULEFUNCTIONAL DESCRIPTIONS 4.46.8.42 I. 2. 3. 4.46.8.43 I. 2. 3.Subroutine Name: SS_LD2 Entry Point: SSOLD2 Purpose: Toperform final stress andforce computations forthesolid elements. Calling Sequence: CALLSSOLD2 (I,T) Element Type l TETRA 2 WEDGE 3 HEXAI 4 HEXA2 T-Temperature Vector Subroutine Name: SDRETD Entry Point: SDRETD Purpose: Reads element temperature fromapre-positioned record. Calling Sequence: CALLSDRETD (ID,T,G) ID-Element identification number forwhich thedataisdesired. T-Areaintowhich datawillbestored G -O,element temperature format data isdesired. #O,number ofgridpoints. 4.46.9 Design Requirements I.Since thefive stages oftheSDR2module mustbeabletooperate under allRigid Formats, abranch design hasbeen usedwithin eachstage whereby operations thatarevariant under different Rigid Formats aregrouped intosubstructures within that stage. Atthese locations, abranch isalways madetothesubstructure appropriate totheRigid Format being executed. 2.Thefollowing common blocks appear onlywithin thesubroutines oftheSDR2module. a.COMMON /SDR2XI/ Thiscommon block contains seventeen flagwords which aresetonthebasis ofrequests intheCaseControl datablock bySDR2A. b.COMMON /SDR2X2/ This common block contains twenty-nine pointers defining thelocations ofthevarious requests andsetdefinitions within theCaseControl datablock. 4.46-19b (8/I/72)\nFUNCTIONAL MODULE SDR2(STRESS DATARECOVERY -PHASE2) c.C@MMBN/SDR2X3/ Thiscommon blockcontains dataconstants unique tothestructural elements. d.C_MMBN/SDR2X4/ Thiscommon blockcontains localvariables andflagssetbythesubroutines ofthe SDR2module forcommunications between thesesubroutines. e.COMM_N/SDR2X5/ Thiscommon blockisusedbySDR2BtosendESTdatatothephase1element routines andtoreceive outputs fromthephase1element routines. f.CBMMON/SDR2X6/ Thiscommon blockconsists ofathreehundred wordscratch areaforusebytheelement routines while performing phase1computations. g.C_MMBN/SDR2X7/ Thiscommon blockisusedbySDR2Dforsending andreceiving datatotheelement routines performing phase2computations. h.CBMM_N/SDR2X8/ Thiscommon blockconsists ofathreehundred wordscratch areaincoreforusebythe element routines whileperforming phase 2computations. 4.46.10 Diagnostic Messages SDR2beingoneofthelastmodules toexecute inaproblem solution, makes everyattempt atexecution inanyevent. Should anerrorbedetected bySDR2,amessage isqueued foroutput and,ifpossible, SDR2continues toexecute portions ofthesolution notaffected bytheerror, Thefollowing NASTRAN messages maybeoutput bySDR2: 2075,2076,2077,2078,2079, 2080,3001, 3002,3003,and3008. 4.46-20 (8/I/72)\n4.47 4.47.1 4.47.2FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) FUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) Entry Point: DPD Purpose DPDistheprincipal dataprocessing module fordynamics problems. Newtables are assembled toaccount foranyextra points inthemodel andtheadditional displacement sets used indynamics. Bulk datacards which control thesolution ofadynamics problem are processed andassembled intovarious datablocks forconvenience andefficiency insolution ofthedynamics problem. 4.47.3 DMAPCalling Sequence DPD DYNAMICS,GPL,SIL,USET/GPLD,SILD,USETD,TFP_L,DLT,PSDL,FRL,NLFT,TRL,EED,EQDYN/ V,N,LUSET/V,N,LU_ETD/V,N,N_TFL/V,N,N_DLT/V,N,N_PSDL/V,N,N_FRL/V,N,N_NLFT/ V,N,N_TRL/V,N,N_EED/C,N,O/V,N,N@UE $ 4.47.4 Input DataBlocks DYr_MICS Collection ofbulkdata cards fordynamics problem. GPL Grid Point List. SIL Scalar Index List. USET Displacement setdefinitions table. Note: DYNAMICS maybepurged. Other input datablocks maynotbepurged. 4.47.5 Output DataBlocks GPLD SILD USETD TFP_L DLT PSDLGridPoint List Dynamics. Scalar Index ListDynamics. Displacement setdefinition table dynamics. Transfer Function Pool. Dynamic Loads Table. Power Spectral Density List. 4.47-I\nMODULE FUNCTIONAL DESCRIPTIONS FRL NLFT TRL EED EQDYN Note: 4.47.6GPLD,SILD,USETDandEQDYNmaynotbepurged. purged.-Frequency Response List. -Non-Linear Forcing Table. -Transient Response List. -Eigenvalue Extraction Data. Equivalence between external andinternal numbers -dynamics. Allotherdatablocks maybe Parameters LUSET LUSETD N_TFL N_DLTDegrees offreedom intheg-displacement set. Degrees offreedom inthep-displacement set. Number oftransfer function sets inthebulkdata,-Input-integer-no default. -Output-integer-no default. -Output-integer-no default. -Iifnosetsaredefined. -Output-integer-no default. +Iifdynamics loaddataarepresent inthebulkdata (i.e.,DLTiscreated), -Iotherwise. N_PSDL -Output-integer-no default. N_FRL -Output-integer-no default. N_NLFT -Output-integer-no default. NOTRL -Output-integer-no default. N_EED -Output-integer-no default. N_UE Output-integer-no default.+IifthePSDLiscreated, -Iotherwise. +IiftheFRLiscreated, -Iotherwise. +liftheNLFT iscreated, -lotherwise. +liftheTRLiscreated, -lotherwise. +liftheEEDiscreated, -lotherwise. Number ofextra points inthemodel, -Iiftherearenoextrapoints. 4.47.7 Method 4.47.7.1 General Subroutine DPDisthemaincontrol program forthemodule. Itinitializes eachofthe DMAPparameters, allocates buffers inopencore (/DPDC_R/), andcalls eachoftheprincipal routines ofthemodule asfollows. 4.47-2\nFUNCTIONAL MODULE DPD(DYNAMICS POOLDISTRIBUTOR) I.DPDItoassemble GPLD, USEID, SILDandEQDYN. 2.DPD2toassemble DLT. 3.DPD3 toassemble FRLandPSDL. 4.DPD4 toassemble NLFTandTRL. 5.DPD5toassemble EEDandTFL. 4.47.7.2 Assembly ofGPLD, USETD, SILDandEQDYN Thesecond logical record ofGPL,which contains pairs ofexternal point identification andsequence numbers, isreadintocore. Three words areusedforeachentry intheGPL. In thethird wordofeachentry theinternal index isstored. Thelistofextra points is readfromtheEP_INT record inDYN_41CS. Foreachextra point, athree-word entry is added LuLhelistnowincore. Thefirst word contains theextra point identification, the second contains theinitial sequence number equal tolO00times thepoint ID,andthethird word iszero. TheSEQEP record inDYNAMICS isread. Foreach referenced point, thesequence number isreplaced bythenewsequence number. Thelistincore isnowsorted onsequence number bysubroutine SORT. Thesequence number ineachentry isreplaced byaninternal index according totheposition oftheentry following thesort. TheGPLD isnowwritten. Itconsists ofonelogical record ofonewordentries, eachentry containing theexternal point identification. Theinternal index isimplied bytheposition oftheentry inthe record. TheSILisread intocore following thetable ofthree-word entries currently incore. Bitmasks areinitialized forthevarious displacement sets instatics anddynamics. Files containing theUSETD andSILDdatablocks areopened towrite. Thefilecontaining theUSET datablock isopened toread. Eachofthethree-word entries incore isprocessed asfollows. I.Iftheentry corresponds toagridpoint, sixwords arereadfromUSET, bitsfor displacement sets indynamics areturned onaccording tothestatics setstowhich the point belongs, sixwords arewritten onUSETD, oneword iswritten onSILD, thesecond word ofthethree-word entry isreplaced withthescalar index value inthep-set, the third word isreplaced with thescalar index value intheg-set, andthescalar index counter forthep-set isincremented bysix. 4.47-3\nMODULE FUNCTIONAL DESCRIPTIONS 2.Iftheentrycorresponds toascalar point, onewordisreadfromUSET,andthe process proceeds asaboveexcept thatonewordiswritten onUSETDandthescalar indexcounter isincremented byone. 3.Iftheentrycorresponds toanextrapoint, onewordiswritten onUSETD, theextra pointcounter isincremented, andtheprocess proceeds aswithascalar point. Whenallentries havebeenprocessed, USETDiscomplete andthefirstlogical record ofSILDiscomplete. Thesecond logical record ofSILDisnowwritten. Itcomprises two-word entries, eachpaircontaining ascalar indexvalueintheg-setandthecorresponding scalar indexvalueinthep-set. Thethirdwordofeachofthethreewordentries incoreisnowreplaced withacode wordwhich istentimesthescalar indexvalueinthep-setplusthetypeofpoint(I:grid, 2=scalar, 3=extra). Thetableissorted onexternal pointidentificatlon. EQDYN iswritten astwological records. Thefirstrecord contains pairs, eachconsisting ofanexternal point ID andascalar indexvalueinthep-set. Thesecond record contains pairs, eachconsisting ofan external point IDandacodeword. 4.47.7.3 Assembly oftheDLT TheDAREA, DELAYandDPHASE tables arereadfromDYNAMICS, onetableatatime. Grid pointandcomponent codesareconverted toascalar indexvalueinthep-setbysubroutine DPDAA. Whenallentries ofatablehavebeenread,thetable issorted onscalar indexvalue andwritten asalogical record onascratch file(three scratch filesareused,oneforeach ofthethreetypesoftables). Thetableidentification issavedincore. TheRL_ADI, RL_AD2, TL_ADI andTL_AD2 cardsarereadfromDYNAMICS andstored incore. Eleven words areusedforeachentry. Inthefirstwordofeachentry, acodeforthecard typeisstored. Whenallcardshavebeenreadandstored incore,thedataaresorted on loadsetidentification. DL_ADcardsarereadfromDYNAMICS andstored incore, andthedatawithin eachDL_ADcard aresorted onreferenced setidentification. Thefilecontaining theDLTdatablock isopened towrite. Theheader record iswritten. Itcontains thedatablock name,alistofset 4.47-4\nFUNCTIOrIAL MODULE DPD(DYNA_IICS POOLDISTRIBUTOR) identifications defined onDL_AD cards andalistofsetidentifications defined onRL_ADI, RL_AD2, TL_ADI andTL_AD2 cards. TheDL_AD dataarethenwritten asthefirst logical record oftheDLT. Theremainder oftheDLTco,rises onelogical record perloadset. Foreach entry inthell-word perentry table incorethefollowing processing occurs. I.Thescratch filecontaining thetables referenced intheentry ispositioned toreadthereferenced table. 2.Entries arereadfromeachofthereferenced tables. Afour-word entry iswritten ontheDLTconsisting ofthescalar index value, A,,and. 3.Whenallentries fromthetables havebeen read, theDLTrecord isclosed, and theprocess repeats forthenextloadset. 4.47.7.4 As_en_ly oftheFRLandthePSDL FREQI, FREQ2 andFREQcards arereadfromDYNAI’,IICS andstored incore. Frequencies on FREQcards areconverted toradians. Whenallthedatahavebeen read, alistcontaining three words perentry isaccumulated incore. Thefirst word contains thefrequency setidentifica- tion, thesecond wordcontains apointer tothefirst wordwhere databelonging totheset arestored, andthethir_ word defines thetype(0=FREQI, -l=FREQ2, N=FREQ, where Nis thenumber ofwords inthefrequency set). Thelistissorted onsetidentification. Thefile containing theFRLdatablock isopened towrite. Theheader record iswritten. Itcontains thedata block nameandalistofallfrequency setidentifications. Theremainder ofthe FRLiscomprised ofonelogical record perfrequency set. Foreachentry inthethree-word perentry listincorethefollowing processing occurs. I.Iftheentry corresponds toaFREQI set,thenN+lfrequencies arewritten asa logical record ontheFRLbythefollowing equation: fi=fo+(i-l) Af,i=1,2….. N+I. (1) 2.Iftheentry corresponds toaFREQ2 set,thenN+lfrequencies arewritten asonelogical record ontheFRLbythefollowing equation: 4.47-5"},"title":"Programmer's Manual P49"},"/docs/programmers/programmers_manual_050/":{"data":{"":"whereMODULEFUNCTIONAL DESCRIPTIONS fi=folO(i-l)6i:1,2,….N+l fea:_Tl°glo(T-)‘o(2) (3) 3.Iftheentry corresponds toaFREQset, thefrequencies inthesetaresorted, and anyduplicate frequencies arediscarded. Thesorted listiswritten asonelogical record ontheFRL. TheRANDPS cards arereadintocore (ifnoRANDPS dataarepresent, thePSDLisnot assembled). TheRANDTI andRANDT2 cards arereadintocore, andalistsimilar tothat in thefrequency processing isformed. Thislistissorted onsetidentification number. The filecontaining thePSDL isopened towrite, andthesetidentifications arewritten inthe header record. TheRANDPS dataarewritten asthefirst logical record ofthePSDL. The remainder ofthePSDLcontains onelogical record perset. ForRANDT2 sets, thedataare sorted ontimelag,andduplicates arediscarded prior towriting therecord. ForRANDTI sets, N+ltimelags, _i’arewritten where _i:to+(i-l)Az i=1,2….,N+1 (4) 4.47.7.5 Assembly oftheNLFTandTRL TheN_LINi (i=1,2,3,4) cards arereadintocore. Eachreferenced grid point and component codeisconverted toascalar index value intheUp-Set. Thedata aresorted onsetidentification number. USETD isreadintocore. Thefilecontaining theNLFTdata block isopened towrite, andthesetidentifications arewritten intheheader record. The remainder oftheNLFTcontains onelogical record perset. Scalar index values within each setareconverted toscalar index values intheudanduesets. Thedatawithin eachsetare sorted onthescalar index value towhich theforcing function isapplied. TheTICcards areread, referenced gridpoints andcomponent codes areconverted to scalar index values intheUp-Set, andthedataarewritten onSCRI, onelogical record perset. AlistoftheTICsetidentifications isaccumulated incore. USETD isread intocore. The 4.47-6\nFUNCTIONAL MODULEDPD(DYNAMICSPOOLDISTRIBUTOR) filecontaining theTRLdatablockisopenedtowrite.Thesetidentifications arewritten intheheaderrecord.ThelastwordoftheheadercontainsthedegreesoffreedomintheUd-Set. DataarereadfromSCRI.ScalarindexvaluesareconvertedtoscalarindexvaluesintheUd-set. EachTICsetiswrittenasonelogicalrecordontheTRL.WhenalltheTICdatahavebeen processed, theTSTEPdataarecopiedfromDYNAMICStotheTRL,onelogical record perTSTEP set. 4.47.7.6 Assembly oftheEEDandTFL Processing ofEIGB, EIGC, EIGPandEIGRcards isminimal. Foreachcardtypepresent, acorresponding logical record iswritten onEED. Foreach ofthecards which specify P¢INT, thereferenced grid point andcomponent code isconverted toascalar index value (uaset forEIGBandEIGRcards, udsetforEIGCcards). Transfer function dataarereadfromtheTFrecord onDYNAMICS onesetatatime. For each transfer function set,thepoint andcomponent codes areconverted toscalar index values intheUpset,which inturnformrowandcolumn numbers ofthetransfer function matrices. Thedataarewritten ontheTFL,onetransfer function setperlogical record• Theset identification nu_er isthefirst wordofeachlogical record. Fourwordentries follow. Thefirst word is65536*columnnumber plusrownumber; thenextthree words aretheterms of thematrices. 4.47.8 Subroutines Auxiliary subroutines DPDI, DPD2, DPD3, DP4aredescribed above. 4.47.8.I Subroutine Name: DPDAA I.Entry Point: DPDAA 2.Purpose: Toconvert agridpoint andcomponent codetoascalar index value in theUpset. 3.Calling Sequence: CALLDPDAA 4.Method: Aflagcalled INEQismaintained in/DPDC_M/.Iftheflagiszero, EQDYN isread intocoreandINEQissettoone. Thegridpoint andcomponent tobe converted isstored inBUF(L) andBUF(L+I) where BUFandLarein/DPDC_M/.Abinary search isperformed inEQDYN. Ifthepoint isfound, thecorresponding scalarindex value isstored inBUF(L). Otherwise, anerror message isqueued, andaninternal 4.47-7\nMODULE FUNCTIONAL DESCRIPTIONS N_G_flagisturned on. 4.47.9 Design Requirements 4.47.9.1 Allocation ofCoreStorage Ingeneral, corestorage requirements inDPDaretheEQDYNtableplusonesetofdata beingprocessed plustwoorthreeGIN_buffers. InDPD3whereEQDYN isnotrequired, itis assumed thatalldatarequired toassemble theFRLorPSDLcanbeheldincoreatonetime. 4.47.9.2 Environment TheBlockDataprogram DPDCBD initializes /DPDC_M/ withGIN_filenames, L_CATE codesfor thevarious cardtypesprocessed byDPD,andmiscellaneous data. Itmustberesident in corewhenDPDisexecuted. DPDisdesigned tooperate inasingle overlay segment. Communication inthemodule occurs through /DPDC_I4/ andopencore/DPDC_R/. Ifanalternate overlay isdesired, DPDCDB, DPDandDPDAAcouldformalocalprimary segment andeachofDPOI,DPD2,DPD3,DPD4andDPD5 couldformseparate secondary segments. Inthiscase,/DPDC_R/ mustbeinserted afterthe longest ofthesecondary segments. Fourscratch filesareusedbyDPD. 4.47.10 Diagnostic Messages Thefollowing messages maybeissued byDPD: 2064,2066,2068,2069,2071,2107,2135,2136. 4.47-8 (12-I-69)\nFUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 4.48 FUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 4.48.1 Entry Point: REIG 4.48.2 : Tosolve theequation [K]-X[M]){u} :0 foreigenvalues Xandtheir associated eigenvectors. 4.48.3 DMAPCallin Sequence READ KAA,MAA,MR,DM,EED,USET,CASECC/LAMA,PHIA,MI,0EIGS/V,N,F_RMAT/v,N,NEIGvS/V,N,NSKIP Input DataBlocks -Partition ofstiffness matrix -aset. -Partition ofmassmatrix -aset. Rigid bodymassmatrix -rset. Rigid body transformation matrix. Eigenvalue Extraction Data. Displacement setdefinitions table. -CaseControl DataTable.4.48.4 KAA MAA MR DM EED USET CASECC Notes: I. 2. 3. 4. 5. 4.48.5 LAMAKAAmust bepresent. MRmayormaynotbepresent. DMandUSETmustbepresent ifMRispresent. EEDandCASECC must bepresent. InBuckling Analysis MAA=-KDAA Output DataBlocks -RealEigenvalue Table 4.48-I (8/I/72)(1)\nMODULE FUNCTIONAL DESCRIPTIONS PHIA MI _EIGS-Eigenvectors matrix giving theeigenvectors intheaset. -Modal MassMatrix. -RealEigenvalue Summary Table. 4.48.6 Parameters F(_RMAT NEIGVS NSKIP-Input-BCD-no default. IfF_RMAT _MODES, READwill solve abuckling problem (i.e., [_M-K]{u}=O)using EIGBdatacards where Misthenegative ofthe differential stiffness matrix. -Output-integer-no default. NEIGVS isthenumber ofeigenvalues found. Ifnone werefound, NEIGVS =-l. -Input-integer-default value ofone. Themethod usedbyREADistaken fromthe NSKIP record ofCASECC. 4.48.7 Method REIGisthemaincontrolling program fortheREADmodule. Itsresponsibility istodecide which method wasasked for(Inverse Power, Determinant orGivens) andtopasscontrol tothe appropriate routine. Onceeigenvalues havebeenextracted, RE[Gdirects thesorting andnormaliz- ingofthevectors forfinal output. Theflowofthemodule canbeseenintheflow charts shown inFigure I. 4.48.8 Subroutines Thesubroutines usedbyREADaredivided intofiveclasses: l)subroutines usedbyREIG, 2)subroutines usedfortheInverse Power Method, 3)subroutines usedfortheDeterminant Method, 4)subroutines usedfortheGivens Method, and5)general subroutines. Thedescriptions forthe general subroutines canbefound insection 3. 4.48-2 (8/I/72)\nFUNCTIONAL MODULEREAD(REALEIGENVALUE ANALYSIS-DISPLACEMENT) REIG INVERSE POWER DETERMINANT GIVENS READI INVPWR DETM SUMM VALVEC READ2 INVPI DETMI SQRTM SMLEIG READ3 INVP2 DETM2 DETFBS TRIDI REAJ)4 INVP3 DETM3 SIC_X READS N_RMI DEll’f4 SINCA_S READ6 MTIMSU DETM5 R@TAX 9RTCK XTRNSY DETM6 R_TATE INVERT SUB FDVECT EMPCgR INVTR INVFBS F_ADD FILCgR DETDET QRITER ARRM WILVEC GENERAL DECgMP ADD PREL_C SSG2B SDRIB SDC_MP FACT@R TRANPI TRNSP MERGE MPYAD 4.48-3 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.48.8.1 Subroutine Name: READ1 I.Entry Point: READ1 2.Purpose: Tocompute theeigenvectors fortherigid body modes. 3.Calling Sequence: CALL READI (DM,MR,SCRI,SCR2,SCR3,PHIAT,USET,NR,LAMAT,SCR4) DM,MR,USET aretheGIN_ file numbers oftheir respective data blocks -integer -input. SCRI….,SCR4 aretheGIN_ file numbers of4scratch files -integer -input. PHIAT GIN_ file number ofatemporary storage file fortheeigenvectors -integer -input. LAMAT -GIN_ file number ofatemporary storage file fortheeigenvalues -integer -input. NR -Number ofrigid body modes -integer -output. C_MMON /READIA/Z(1) Z(1) Array ofopen core forREADI 4.Method: Letrbethenumber ofrigid body modes andlet etc. Set{vI} a.Il= p ={Il}andperform thefollowing three steps fori=l,2….. r. Normalize {vi}bythefollowing equations: Si:{vi}T [mr]{vi}, l {_i}=i {vi}’ Simust begreater than zero foraconsistent rigid body system.(2) (3) () (5) 4.48-4\nFUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) b.Calculate using j:1,2…..i: _J={@j}T [mr]{li+l}\"(6) c.Thenextvector isthen: (Return tostepb).i •: -z:j{j}.{Vi+l _ {li+l}j=l This procedure isamodification oftheSchmidt orthogonalization procedure using the{I}vectors asastarting point. Since the[mr]matrix isnon-sir.)ular, the{I} vectors areindependent with respect tothematrix. Eachnewvector {li+l}ismade orthogonal withrespect totheprevious vectors bysubtracting itsscalar matrix products ()with theother vectors. Thematrix ofresulting vectors [@to] should formadiagonal, unitmatrix [mro]withtheequation: [mro] =[@ro]T[mr][@ro]• Theremaining displacements oftherigid bodyeigenvectors areformed fromthe equation(7) (8) [@_o]=[D][@ro], (9) where [D]corresponds tothedatablock DM. Eachcolumn of[@ro]ismerged with [@40] using USET (UA,UL,UR). 4.48.8.2 Subroutine Name: READ2 I.Entry Points: READ2, READ5 2.Purpose: Tocompute themodal massmatrix [MI], tonormalize theextracted eigenvalues, andtoprepare theoutput files LAMAand@EIGS. 3.Calling Sequence: CALLREAD2 (MAA,PHIA,SCRI,N_RM,IA,USET,MI,LAMA,_EIGS,SCR2,EPSI,SCR3) CALLREAD5 (IP_UT) 4.48-5 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS MAA,PHIA,USET,MI,LAMA,_EIGS aretheGIN_filenumbersoftheirrespective data blocks-integer-input. SCRI,…,SCR3 areGIN_filenumberof3scratchfiles-integer-input. NQRM IA-Normalization method requested. MAX -Implies maximum component. P_INT -Implies specified component. MASS -Implies unitmodal massmatrix.Input -BCD -IfN@RM =P_INT, IAisthecomponent number which issettol.O- integer -input. EPSI -IfEPSI#0.0, theoff-diagonal terms ofthemodal mass matrix[MI]arechecked forthenumber which exceed EPSI. C_MM@N /READ2A/Z(1) Z(1) -Array ofopencoreforREAD2. 4.48.8.3 Subroutine Name: READ3 I.Entry Point: READ3 2.Purpose: Tosorttheeigenvalues inascending order andtooutput theeigenvalues andeigenvectors inorder. Also, topacktheeigenvectors instandarE matrix format. 3.Calling Sequence: CALLREAD3 (N_VECT,NC_L,SCRI,SCR2,PHI,LAMBDA) N_VECT -Number ofeigenvectors extracted -integer -input. NC_L -Length ofthevectors -integer -input. SCRI -GIN_filecontaining theunsorted eigenvalues -integer -input. SCR2 -GIN_filecontaining theunsorted eigenvectors -integer -input. PHI -GIN_filefortheoutput sorted vectors -integers -input. LAMBDA -GIN_filefortheoutput sorted eigenvalues -integer -input. C_MM_N /READ2A/Z(1) Z(1)-Areaofopencoreavailable toREAD3. 4.48-6\nFUNCTIONAL MODULEREAD(REALEIGENVALUE ANALYSIS-DISPLACEMENT) 4.48.8.4Subroutine Name: READ4 I.EntryPoint:READ4 2.Purpose:Totestforclose andequalroots found bytheDeterminantMethod andmake sure thecorresponding vectors areorthogonal. 3.Calling Sequence: CALLREAD4 (LAMAT,MPHIA,SCRI,EPSI,MAA) LAMAT -GIN_filenumber oftemporary storage filefortheeigenvalues found - integer -input. MPIIIA -Matrixcontrol block forPHIA-integer -input. SCRI -GIN@filenumber ofascratch file-int_er -input. EPSI -Close roottestcriteria °real-input. MAA GIN_filenun_erofl_Jk-integer -input. C_r_._N /READ2A/Z(1) SeeREAD2A Z(1)-Array ofopencoreforREAD4. 4.48.8.5 Subroutine Name:_RTCK I.Entry Point: _RTCK 2.Purpose: RTCK will generatethegeneralizedmassmatrix fortheclose roots and make theepsilon testtodetermine ifthevectors should beorthogonalized. 3.Calling Sequence: CALL_RTCK (X,MAA,BUFFER(1),NUM,NDIM,GM,ACCUM,EPSI) X -Unorthogonalized eigenvectors -real-input/output. MAAandEPSIareasdescribed inREAD4. BUFFER NUM NDIM GM ACCUM-GIN@buffer. -Number ofclose roots -integer -input. -Order oftheproblem -integer -input. -Generalized massfortheclose roots -reelarray -output. -Running sumof[Maa] [Ca]-real i_pu/output. 4.48-7\nMODULEFUNCTIONAL DESCRIPTIONS 4.48.8.6Subroutine Name:INVPWR I.EntryPoint:INVPWR 2.Purpose:INVPWRisthemaindriverfortheInversePowerMethodofeigenvalue extraction. 3.CallingSequence: CALLINVPWR C@MM_N/INVPWX/K(7),M(7),LAM(7),PHI(7),SCRFIL(8),EIGSUM,LMIN,LMAX,N_EST,NDPLUS,NDMNUS, EPS,N_RTH_ K,M Matrix control blocks fortheinputstiffness andmassmatrices, [K]and[M]. LAM,PHI Matrix control blocks fortheoutputeigenvalue andeigenvector files. SCRFIL(8) GINBfilenumbers foreightscratch files. EIGSUM GIN_filenumber fortheeigenvalue summary file-integer. LMIN-LMAX Desired rangeforeigenvalues -real. N@EST Number ofestimated eigenvalues intherange-integer. NDPLUS Number ofdesired positive eigenvalues -integer. NDMNUS Number ofdesired negative eigenvalues -integer. EPS Convergence criteria -real. N_RTH_ Number ofrootsextracted -integer. COMM_N /INVPX/Z(1) Z(1) Areaofopencoreavailable toINVPWR. 4.Method: Reference canbemadetotheflowcharts inFigure 1fortheprogram logic. Theoretical implications arehandled insection 4.48.11 andinthe Theoretical Manual. 4.48.8.7 Subroutine Name: INVPI I.EntryPoint: INVPI 2.Purpose: TosetupacalltoADDtoform [A]:[K]-Zo[M] (lO) 4.48-8\nFUNCTIONAJ_ DULE READ(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) KsM A LAM z(1) 4.48.8.8 I. 2.3.Calling Sequence: CALLINVPI C_Mr_N /INVPWX/K(7),M(7),A C_MM_N /INVPXX/LAM_ C_I,I_N /INVPIX/Z(1) Matrix control blocks fortheinput matrices. GIN_filenumber fortheoutput matrix. -Double precision scalar multiplier. -Area ofopen coreavailable toADD. Subroutine Name: INVP2 Entry Point: INVP2 Purpose: Toinitialize andcallDECAMP forsubroutine INVPWR. Calling Sequence: CALL INVP2 C_MM_N /INVPWX/DUM(14),A(7),L(7),XX(2),U,SCRI,SCR2,SCR3,LL,UU C_MM_N /INVPXX/DUMM(12),SWITCH C_.I_N/INVP2X/Z(1) A -GIN_filenumber oftheinputmatrix -integer -input. L,U -GIN_filenumber fortheloweranduppertriangular matrices output fromDECAMP- integer -input. SCRI, SCR2, SCR3_ LL,UU -GIN@filenumbers foralternate storage ofLandU-integer -input. SWITCH -0-Store output matrices inLandU.l-Store output matrices inLLandUU- integer -input. Z(1) -Area ofopen coreavailable forDECAMP.Three scratch files usedbyDECI_MP -integer -input. 4.48.8.9 Subroutine Name: INVP3 I.Entry Point: INVP3 2.Purpose: Tosolve foraneigenvalue andeigenvector using theInverse Power Method. 3.Calling Sequence: CALLINVP3 C_MM_N _INvPW_K(7),M(7)LAM(7),PH(7),_RFIL(8)_EIG_M,LMIN,LMAX,N_EST,NDPLUS,NDMNUS,EPS C_MM_N /INVP3X/Z(1) 4.48-9\nMODULEFUNCTIONAL DESCRIPTIONS 4.48.8.10 Subroutine Name:SeeINVPWRforadescription of/INVPWX/(section 4.48.8.6). Z(1) OpencoreforINVP3. 4.Method: Thelogic flowofINVP3 isgiven inFigure lwith themathematical equations supplied in4.48.11. Theoretical considerations aregiven intheTheoretical Manual. INVP3 wasdesigned with twoaspects inmind: first toassure thatallroots within agiven region arefound, andsecond toavoid anypossibility oflooping uncontrollably. Toaccomplish these ends, considerable testing wasinserted around themathematical equations. 5.Design Requirements: INVP3 needs sufficient storage toholdseven double precision asetvectors andfour GIN_buffers incore. N_RMI I.EntryPoint: N_RMI 2.Purpose: Tonormalize avector {x}suchthatitsmaximum component isone. 3.Calling Sequence: CALLN_RMI(X,DIV) C_MM_N /INVPWX/XX,N N-Lengthofthedouble precision vector {x}. X-Doubleprecision vector {x}. DIV-Doubleprecision valueofthedivisor usedtonormalize {x}-output. 4.48.8.11 Subroutine Name:MTIMSU I.EntryPoint: MTIMSU 2.Purpose: Topre-multiply avector byamatrix i.e.j: {x}:[M]{y}. 3.Calling Sequence: CALLMTIMSU (Y,X,BUF) (BUFisnotused) C_MM_N /INVPWX/DUM(7),M(7) C@MM_N /INVPXX/DU_4(13),NZERO(ll) 4.48-10 (3/1/71)\nFUNCTIONALMODULE READ (REAL EIGENVALUEANALYSIS -DISPLACE31ENT) M -Matrix control block formatrix [M]. X,Y -Double precision leftandright handsidevectors. BUF -GIN_buffer. NZER9 -Number ofzerocolumns ofmatrix [M]. 4.48.8.12 Subroutine Name: XTRNSY I.Entry Point: XTRNSY 2.Purpose: Toformthedotproduct oftwovectors a={x}T{y}. (12) 3.Calling Sequence: CALLXTRNSY (X,Y,A) C_MM_N /iNVPWX/XX,N N-Length ofvectors {x}and_y}. X,Y -Double precision vectors. A -Double precision value ofthedotproduct. 4.48.8.13 Subroutine Name: SUB I.Entry Point: SUB 2.Purpose: Toevaluate thevector equation 3,Calling Sequence: Cgt_gN /INVPWX/XX,N{z}:a{x}-b{y}. (13) CALLSUB(X,Y,A,B) N-Length ofthevectors{x}and{y}. X,Y -Double precision vectors intheabove equation. contains thedifference vector {z}. A,B -Double precision scalar multipliers.Y,uponreturn fromSUB, 4.48-II (7/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS 4.48,8.14 Subroutine Name: INVFBS (orINVFSP) I.EntryPoint: INVFBS (orINVFSP) 2.Purpose: INVFBS willperform theforward-backward substitution necessary to solveoneiteration oftheInverse PowerMethod givenby ([K]-Xo[M]){Wn} 3.Calling Sequence: CALLINVFBS (X,Y,BUF) COMM_N /INFBSX/L(7),U(7) L,U X Y BUF 4.=[M]{Un_l}. Matrix control blocks fortheloweranduppertriangular matrices generated bydecomposition of([K]-X[M]).0 Double precision righthandvector, [M]{Un_l}. Double precision solution vector, {Wn}. GIN_buffer. Method: INVFBS isastripped downversion ofGFBS. Bothvectors arestored in core. Real,double-precision arithmetic isusedforINVFBS andreal,single-precision arithmetic isusedforINVFSP.(14) 4.48-12 (8/I/72)\nFUNCTIONAL MODULE READ(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 4.48.8.15 Subroutine Name: DETM I.Entry Point: DETM 2.Purpose: Tosupervise theoperations oftheDeterminant Method. 3.Calling Sequence: CALLDETM Alldeterminant routines usecommon blocks /KEGEAN/and/DETMX/. C_MM_N /REGEAN/IM(7)_IK(7)IEV(7)SCRl_SCR2_SCR3_SCR4_SCR5_LC_RE_RMAx_RM_N_MZ_NEv_EPSI RMINR,NE,NIT,NEVM,SCR6,SCR7,NFOUND,LAMA,IBUCK,NSYM IM(7) - IK(7) - IEV(7) - SCR!,°++, SCR7 SCRI - SCR2 - SCR3 - LC_RE - RMAX - RMIN - MZ NEV EPSI RMINR NEMatrix control block forMAA. Matrix control block forKAA. Matrix control block fortheeigenvectors. GIN_filenumber of7scratch files -integer -input. Contains [KAA] -[MAA]. Contains [LLL]. Contains [ULL]. Amount ofopencorereserved forstarting points, determinants, scale factors andaccepted eigenvalues -integer -input. Maximum eigenvalue ofinterest -real-input/output. Minimum eigenvalue ofinterest -real-input. Number ofzeroeigenvalues -integer -input. Number ofestimated eigenvalues intherange ofinterest -integer -input. Convergence criteria -real-input/output. EPSI=l.OxlO -llcurrently. Lower boundary tosearch region. (RMINR =-.OI*RMIN) Forbuckling problems apoleofgeometrically increasing order isplaced at RMINR each timethesearch procedure points below RMIN-real-input. Number ofchanges intheconvergence criteria -integer -input. NEiscurrently setat4. 4.48-13\nMODULEFUNCTIONAL DESCRIPTIONS NIT-Numberofiterations allowedtoconvergetoaneigenvalue. NITis currentlysetto20-integer-input. NEVM-Numberofeigenvalues desired-integer-input. NF_UND-Numberofeigenvalues found-integer-output. LAMA-GIN@filenumberofeigenvalue storagefile-integer-input. IBUCK-Bucklingflag.IfIBUCK:3,thecurrentproblemisaBucklingAnalysis problem-integer-input. NSYM Symmetricdeterminant flag.IfNSYM=l,symmetricdecomposition isused tocomputethedeterminant ofA-integer-input. c@MM_N/DETMX/P(4),DETX(4),Psl(4),DETl(4),N2EV,IPSAV,IPS,IDET,_PDETA,PREc,NSTART’NDCMP,Ic,NSM_VE, ITERM,IS,ND,IADD,SMLI,IPDETX(4),IPDETI(4),IFAIL,K,FACTI,IFFND,NFAIL,NP_LE,ISNG P DETX PSl DETI N2EV IPSAV IPS IDET IPDETA PREC NSTART NDCMP IC-The3trial values oftheeigenvalue -double precision -input/output. -Thedeterminants ofthe3P’sabove -double precision -input/output. -The3current starting points -double precision -input/output. -Thedeterminants ofthe3starting points -double precision -input/output. -Thenumber ofstarting points -integer -input. -Pointer totheaccepted eigenvalues -integer -input. -Pointer tothestarting points -integer -input. -Pointer tothedeterminants ofthestarting points -integer -input. Pointer tothescale factors ofthedeterminants -integer -input. Precision ofthecalculations -integer -input. Number ofpasses through thestarting points -integer -output. -Total number ofdecompositions -integer -output. -Total number ofconvergence criteria changes -integer -output. 4.48-14\nn ) NSM_VE ITERM IS ND IADD SMLI IPDETX IPDETI IFAIL K FACTI IFFND NFAIL NP_LE ISNGFUNCTIONAL MODULE READ(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) -Number ofstarting point moves -integer -output. -Reason fortermination -integer -output. -Start setcounter -integer -input/output. -Number ofn_starting points toevaluate -integer -input. -Pointer tonextstarting point toevaluate -integer -input/output. -Magnitude ofsmallest diagonal element oflULL] -real-output. -Scale factors forthedeterminants inDETX-integer -input/output. -Scale factors forthedeterminants inDETI-integer -input/output. -Ifthissetofstarting points produced afailure toiterate toaroot, IFAIL =l-integer -input/output. -Current iteration counter -integer -input. -Constant =EPSI*SQRT(RMAX) -real-input/output. -Ifaneigenvalue isaccepted onagiven passthrough thestarting points, IFFND =l-integer -input/output. Number offailures toiterate toaroot-integer -output. Order ofthecurrent poleatRMINR -integer -input/output. -Number ofsingular matrices detected during decomposition -integer -input/output. COI_VQNIDETDX/DZ(1) DZ(1) -Array ofopencoreforDETM. 4.Method: Thegeneral method usedfortheDeterminant Method isdescribed in section 4.88. 5.Design Requirements: DETMneeds sufficient opencoretoholdtwodouble precision aset vectors andoneGINObuffer. Opencoreat/DETDX/isusedforstorage ofstarting points, determinants, powers andaccepted eigenvalues. 4.48.8.16 Subroutine Name: DETMI I.Entry Point: DETMI 2.Purpose: Tocompute thelocations ofthestarting points. 3.Calling Sequence: CALLDETMI($n) 4.48-15\n4.48.8.17 I. 2. 3. 4.48.8.18 Subroutine Name: DETM3 I.EntryPoint: DETM3 2. 3. n1 n2- n3- 4.48.8.19 I. 2. 3. 4.48.8.20 Subroutine Name: DETM5 I.EntryPoint: DETM5 2. 3. 4.48.8.21 Subroutine Name: DETM6MODULE FUNCTIONAL DESCRIPTIONS -Thestatement number towhichDETMIwillreturn ifthefirstthreestarting points yield asingular matrix. Subroutine Name: DETM2 EntryPoint: DETM2 Purpose: Toevaluate thedeterminant ofNDstarting points. Calling Sequence: CALLDETM2 Purpose: Toiterate foraneigenvalue. Calling Sequence: CALLDETM3 ($nl,$n2,$n3) -Return foranewstarting point. Return foranewpassthrough thestarting points. Return forproblem timeexpired. Subroutine Name: DETM4 Entry Point: DETM4 Purpose: Tomoveanystarting points necessary. Calling Sequence: CALLDETM4 Purpose: Towriteouttheeigenvalue analysis summary forthedeterminant method. Calling Sequence: CALLDETM5. I.EntryPoint: DETM6 4.48-16\nFUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 2.Purpose: Torescale anynumber bypowers oflO. 3.Calling Sequence: CALLDETM6 (D,POWER) Thearguments areboth input andoutput totheroutine andaredefined bythe following equation. DoutxIoP_WERout =DinxIoP_WERin, .l![Doutl!lO. Disdouble precision andP_WER isinteger. 4.48.8.22 Subroutine Name: FDVECT I. 2. 3. SMLI PK 4.48.8.23 I. 2. 3. P PREC 4.48.8.24 I. 2. 3.Entry Point: FDVECT Purpose: Tobuild theloadvector tosolve foraneigenvector. Calling Sequence: CALL FDVECT (SMLI,PK) -Smallest diagonal termof[ULL] -real-input. -Accepted eigenvalue -double precision -input. Subroutine Name: EAJ)D Entry Point: EADD Purpose: Tocompute [A]=[K_] -p[MJ_A]. Calling Sequence: CALLEADD (P,PREC) -Trial value foroneeigenvalue -double precision -input. -“2”-integer -input. Subroutine Name: DETDET Entry Point: DETDET Purpose: Tocompute theswept determinant of[A]. Calling Sequence: CALLDETDET (DETA,IP_WR,P,SMLI,_LDD,IPR_LD)(15) (16) 4.48-I 7"},"title":"Programmer's Manual P50"},"/docs/programmers/programmers_manual_051/":{"data":{"":"","d#FUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT)\nVAL Diagonal terms ofthetridiagonal matrix oninput, reordered eigenvalues onreturn -\ndouble precision -input/output.\n\u0026ndash;Squares oftheoff-diagonal terms ofthetridiagonal matrix. These areiteratively\nreduced tozero -double precision -input/output.\nL_C-Array giving theo_der inwhich eacheigenvalue isfound -integer -output.\nQR \u0026ndash;QR_0implies thattheeigenvalues already exit atVALandthisisanordering call\nonly-integer -input.\nSubroutine Name: WILVEC\nEntry Point: WILVEC\nPurpose: Tocompute eigenvectors bytheWilkinson method.\nCalling Sequence: CALLWILVEC (D,_,VAL,VL_C,V,F,PoQ,R,VEC,NX,SVEC)\n-Array ofdiagonal values -double precision -input.\nArray ofoff-diagonal values -double precision -input.\nArray ofeigenvalues -double precision -input.\nArray oforiginal ordering ofeigenvalues -integer -input.\nV,F,P,Q,R Scratch arrays oflength equal totheorder oftheproblem -double precision -\ninput/output.\nVEC -Array ofcore tostore vectors -double precision -scratch.\nNX -Notused\nSVEC -Array ofcoretostore vectors -single precision -scratch.\nSubroutine Name: INVERT\nI.Entry Point: INVERT\n2.Purpose: Todrive INVTR (seesection 4.48.8.41) tocompute theinverse ofanupper or\nlower triangular matrix.\n3.Calling Sequence: CALL INVERT (IA,IB,SCRI)\nC_MM_N /INVTRX/Z(1)4.48.8.39\nI.\n2.\n3.\nD":"MODULEFUNCTIONAL DESCRIPTIONS DETA IP@WR P SMLI @LDD IPR_LD 4.48.8.25 I. 2.-Sweptdeterminant of[A]-doubleprecision-output. ScalefactorofDETA-integer-output. Valueofpusedincomputing[A]-doubleprecision-input. Valueofsmallestdiagonaltermof[ULL]-real-output. Sweptdeterminant ofpreviousvalueofp-doubleprecision-input. Scalefactorof_LDD-integer-input. Subroutine Name:ARRM EntryPoint:ARRM Purpose:Toarrangethreestartingpointsinorderbythemagnitudeoftheir scaleddeterminants. 3.CallingSequence: p- D- ND- 4.48.8.26 I. 2. 3.CALLARRM(P,D,ND) Arrayof3startingpoints-doubleprecision-input/output. Arrayof3determinants atP-doubleprecision-input/output. Arrayof3scalefactorsofD-integer-input/output. Subroutine Name:SUMM EntryPoint:SUMM Purpose:Toaddtwoscalednumberstogether. CallingSequence: CALLSUMM(SUM,ISUM,TI,ITI,T2,1T2,N) Theargumentsaredefinedbythefollowingequation: SUMxlOISUM:TlxlOITl+T2xlOIT2 IfN=l,theminussignisused,otherwisethepositivesignisused. SUM,Tl,T2aredoubleprecision. N,ITl,ISUM,IT2areintegers.(17) 4.48-18\nFUNCTIONAL MODULE READ(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 4.48.8.27 Subroutine Name: SQRTM I.Entry Point:SQRTM 2.Purpose: Tocompute thesquarerootofascalednumber. 3.Calling Sequence:CALLSQRTM (A,IA,B,IB) Thearguments aredefinedbythefollowing equation: AxlOIA=B_xlO IB AandBaredouble precision. IAandIBareintegers. 4.48.8.28 Subroutine Name: DETFBS I. 2. 3. F X BUFFER FU NROW 4.48.8.29 I. 2. 3.EntryPoint: DETFBS Purpose: Tosolve fortheeigenvector. Calling Sequence: CALL DETFBS (F,X,BUFFER,FU,NR_W) Array containing theloadvector {F}-double precision -input. Array containing theeigenvector -double precision -output. GIN_buffer. Matrix control block forlULL] -integer -input. Order oftheproblem (length ofFandX)-integer -input. Subroutine Name: VALVEC Entry Point: VALVEC Purpose: Toextract theeigenvalues andeigenvectors ofasymmetric matrix. Calling Sequence: CALLVALVEC C_MM_N /GIVN/Xl,M_,MD,MRl,Ml,M2,M3,M4,X9(3),RSTRT,Xl8(82),N,LFREQ’_RDER,Y4,HFREQ,LAMA,NV, X8(2),NF_UND,OEIGS,PHIA,NVER,NEVER,MAX,ITERM CCMM_N IXXVLVCIZ(1) /GIVN/isusedbyallGivens routines. 4.48-19(12-I-69)\nFUNCTIONAL MODULEREAD(REALEIGENVALUE ANALYSIS-DISPLACEMENT) M_ MD,MR1,MI,M2,M3,M4 RSTRI N LFREQ,HFREQ _RDER LAMA,_EIGS, PHIA NV NF_UND NVER NEVER MAX ITER ZGIN_filenumber oftheinput matrix -integer -input. GINOfile numbers ofscratch files -integer -input. ‘0’indicates norestart isbeing made -integer -input. Order oftheproblem- integer -output. -Frequency range forcomputation ofeigenvectors -real-input. Eigenvalue sortorder flag-integer -input. -GINOfile nameoftheassociated datablocks -integer -input. -Number ofeigenvectors tocompute -integer -input. -Number ofrigid bodymodes previously found -integer -input. -Number offails toconverge oneigenvectors -integer -output. \"’- of=i_toconverye oT_eig_nvdlues -integer output. -Maximum number ofQRiterations allowed -integer -input. -Reason fortermination -integer -input. -OpencoreforVALVEC. Xl,xg,Xl8,YY,X8aredummy variables andarenotcurrently used. 4.48.8.30 Subroutine Name: SMLEIG I.Entry Point: SMLEIG 2.Purpose: Tocompute theeigenvalues foralbyland2by2matrix andtheeigenvector foralbylmatrix. 3.Calling Sequence: CALLSMLEIG (D,,VAL) D-Array ofdiagonal values -double precision -output. -Array ofoff-diagonal values -double precisior, -output. VAL -Array efeigenvalues -double precision -output. 4.48.8.31 Subroutine TRIDI I.EntryPoint: TRIDI 4.48-19a (12-I-69)\nFUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 2. 3. D C- A B AA 4.48.8.32 I. 2. 3. D C@S 4.48.8.33 I. 2. 3. R@W FLAGPurpose: Totridiagonalize asymmetric matrix. Calling Sequence: CALLTRIDI (D,_,C,A,B,/_A) -Diagonal terms ofthetridiagonal matrix -double precision -output. -Offdiagonal terms ofthetriadiagonal matrix -double precision -output. Scratch array which contains another copyofthediagonal terms attheconclusion ofTRIDI -double precision -output. Remainder ofcore-double precision -scratch. Scratch array which contains thesquare oftheoff-diagonal terms -double precision -output. Remainder ofcore-single precision -scratch. Subroutine Name: SIC_X Entry Point: SIC_X Purpose: Toinitialize thearrays inSICAS. Seesection 4.48.8.33. Calling Sequence: CALLSIC@X (D,@,C_S) -Array ofdiagonal values -double precision -input/output. -Array ofoff-diagonal values -double precision -input. -Array ofcosine rotation factors -double precision -irput/output. Subroutine Name: SIC@X (D,@,C_S) Entry Point: SINCAS Purpose: Tocompute therotation factors foragiven row. Calling Sequence: CALLSINCAS (R_W,FLAG) -Thenumber ofthecurrent rowtorotate -integer -input. -Ifnorotations arerequired forthis row,FLAG=O.Otherwise, FLAG=l-integer -input. 4.48-19b (12-I-69)\nFUNCTIONAL MODULEREAD(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 4.48.8.34 Subroutine Name: RgTAX ].Entry Point:RgTAX 2.Purpose: Toinitialize thearrays inR_TATE. 3.Calling Sequence:CALLR_TAX (,SIN,C_S) SIN- C_S - 4.48.8.35 I. 2. 3. A R@W R@WI R@W2 4.48.8.36 I. 2. 3. MTI MT2 PT PCSeesection 4.48.8.35. Array ofoff-diagonal values -double precision -input/output. Array ofsinerotation factors -double precision -input. Array ofcosine rotation factors -input. Subroutine Name: R@TAX Entry Point: R@TATE Purpose: Torotate asmuchofthematrix asfits intocore. Calling Sequence:CALLRgTATE (A,Rg,R_WI,RgW2) -Partition ofthe_atrix h_AIncore-uuuu,_ pre_ision -input. –Therownumber ofcurrent rotation row-integer -input. Therownun_er ofthefirst rowofthematrix partition incore-integer -input. Therownumber ofthelastrowofthematrix partition incore-integer -input. Subroutine Name: EMPC_R Entry Point: EMPCgR Purpose: Toempty coreofatriangular matrix partition. Calling Sequence: CALLEMPCgR (MTI,MT2,PT,PC,FRSRgW,MIDR@W,LASRgW,NX,A,Z) -GIN_filenameofthefirst output file-integer -input. GIN9filenameofthesecond output file-integer -input. Precision (l=single precision, 2=double precision) oftheinput matrix - integer -input. Precision (l=single precision, 2=double precision) oftheoutput matrix - integer -input. Therownumber ofthefirst rowincore-integer -input. Whenthecurrent rowisgreater thanMIDRgW, write theremainder ofthematrix 4.48-19c (I2-I-69)\nFUNCTIONAL MODULE READ(REALEIGENVALUE ANALYSIS -DISPLACEMENT) LASR_W NXontoMT2-integer -input. Therownumber ofthelastrowincore-integer -input. Orderofthematrix -integer -input. Storage containing thetriangular matrix -double precision -input. GIN_buffer -input. 4.48.8.37 Integer Function Name: I.EntryPoint: FILC_RFILCOR 2, 3. MTI MT2 PC FRSR_W MIDR_W NX A NZA Z ROW 4.48.8.38Purpose: Tofillcorewithatriangular matrix. Calling Sequence: R_W=FILC_R (MTI,MT2,PC,FRSR_W,MIDR_W,NX,A,NZA,Z) -GIN_filenameofthefirstpartofthematrix (uptoMIDR@W) -integer -input. -GIN_filenameoftherestofthematrix -integer -input. -Precision (I=single precision, 2=double precision) ofthematrix incore- integer -input. -Therownumber ofthefirstrowofthematrix toberead-integer -input. -Breakpoint ofthematrix -integer -input. -Orderofthematrix -integer -input. -Corestorage toholdthematrix -integer -input. -Number ofsingle precision wo_dsatA-integer -input. -GIN_buffer -input. -Therownumber ofthelastrowreadintoA-integer -output. Subroutine Name: QRITER I.EntryPoint: QRITER 2.Purpose: Toobtain theeigenvalues ofatridiagonal matrix bytheOrtega -Kaiser QR iteration technique. 3.Calling Sequence: CALLQRITER (VAL,_,LOC,QR) 4.48-19d (12-I-69)\nFUNCTIONAL MODULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) VAL Diagonal terms ofthetridiagonal matrix oninput, reordered eigenvalues onreturn - double precision -input/output. –Squares oftheoff-diagonal terms ofthetridiagonal matrix. These areiteratively reduced tozero -double precision -input/output. L_C-Array giving theo_der inwhich eacheigenvalue isfound -integer -output. QR –QR_0implies thattheeigenvalues already exit atVALandthisisanordering call only-integer -input. Subroutine Name: WILVEC Entry Point: WILVEC Purpose: Tocompute eigenvectors bytheWilkinson method. Calling Sequence: CALLWILVEC (D,_,VAL,VL_C,V,F,PoQ,R,VEC,NX,SVEC) -Array ofdiagonal values -double precision -input. Array ofoff-diagonal values -double precision -input. Array ofeigenvalues -double precision -input. Array oforiginal ordering ofeigenvalues -integer -input. V,F,P,Q,R Scratch arrays oflength equal totheorder oftheproblem -double precision - input/output. VEC -Array ofcore tostore vectors -double precision -scratch. NX -Notused SVEC -Array ofcoretostore vectors -single precision -scratch. Subroutine Name: INVERT I.Entry Point: INVERT 2.Purpose: Todrive INVTR (seesection 4.48.8.41) tocompute theinverse ofanupper or lower triangular matrix. 3.Calling Sequence: CALL INVERT (IA,IB,SCRI) C_MM_N /INVTRX/Z(1)4.48.8.39 I. 2. 3. D\rVAL - VL_C - 4.48.8.40 4.4B-19e (12-I-69)\nIA IB SCRI Z 4.48.8.41 I. 2. 3.FUNCTIONAL MODULEREAD(REALEIGENVALUE ANALYSIS -DISPLACEMENT) -GIN_filenameofanupperorlowertriangular matrix -integer -input. GIN@filenameoftheinverse ofthematrixonIA-integer -input. -GIN_filenameofascratch file-integer -input. -OpencoreforINVERT. Subroutine Name: INVTR EntryPoint: INVTR Purpose: Toinvertatriangular matrix. Calling Sequence: CALLINVTR(X,DX) C_MM_N IINVTRX/FA(7),FB(7),SCRFIL,NX,PREC X OpencoreforINVTR-single precision -scratch. DX OpencoreforINVTR(sameaddress asX)-double precision -scratch. FA Matrixcontrol blockfortheinputmatrix -integer -input. FB Matrixcontrol blockfortheoutputmatrix -integer -input. SCRFIL GINpfilenameofascratch file-integer -input. NX LengthinwordsofX-integer -input. PREC Precision (I=singleprecision, 2=double precision) ofthecomputation - integer -input. Subroutine Name: READ6 EntryPoint: READ6 Purpose: Tomergetherigidbodyeigenvectors withvectors computed byGIVENS. Calling Sequence: CALLREAD6(IRBM,IMGIV,NR,IPHIA) C_MM_N /READ6X/Z(1)4.48.8.42 I. 2. 3. IRBM IMGIV NR-GIN_filenameforeigenvectors computed byREAD1 -integer -input. -GIN_filenameforeigenvectors computed byGIVENS -integer -input. -Number ofeigenvectors computed byREADI -integer -input. 4.48-19f (12-I-69)\nIPHIA Z 4.48.9FUNCTIONAL MODULEREAD(REALEIGENVALUE ANALYSIS-DISPLACEMENT) -GIN_filenameformergedeigenvectors -integer-input. -OpencoreforREAD6. Design Requirements Design requirements arepeculiar tothemethod chosen. beconsulted. Ninescratch files areused. 4.48.10 Diagnostic MessagesTheappropriate subroutines should Messages outputfromREADarepeculiar totheindividual subroutine. 4.48-19g (3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 4.48.11 Mathematical Considerations fortheInverse PowerMethod Thealgorithm forfinding theeigenvalues andeigenvectors of ([K]-X[M]) [4]=O, (19) isgivenasfollows. I.Theiteration algorithm isgivenbythefollowing equations. ([K]-Xo[M]){Wn}=[M]{Un_I},(20) _1{Wn}’{_n} Cn {%}: })},1 where Cnistheabsolute valueofthemaximum component of{Wn}. extends overallpreviously extracted eigenvectors. 2.Form 3.Compute{Fn}:[M]{Un}. an=({un}T {Fn})I/2 .Thesumover i(Zl) (22) (23) (24) 4.Compute {6un}={un} {Un_1} an _n-I(25) 5.Compute {6Fn}:[M]{6un}.(2'6) 6,Compute theapproximate eigenvalue X11_n-I Cnan(27) 4.48-20\nFUNCTIONAL MODULE READ(REAL EIGENVALUE ANALYSIS -DISPLACEMENT) 7.Fortherapid convergence test, compute n=({6un}T {6Fn}) I/2. (28) 8oFornormal convergence, compute X2_{6un}T {6Fn_I} 2q(29) and k22 6n=({6un}T {6Fn}) /(l-l)(3O) go andFortheshift decision test, compute hl,n=m_n l_n-i Ro. (31) 10glo 6_n-) k: • (32) lOglO (k2/kl) I0.Forthek2reliability test, compute h2,n :k2,n-X2,n-I (33) Ro Theabove equations, along with theproper logic given inFigure lformthebasis forthe Inverse Power Method. 4.48-21\nMODULEFUNCTIONAL DESCRIPTIONS REIGENTER _Yes _No Extract rigid body II modes (READI)I L Inverse Extract roots byGivens GivensJ Method Power v Tridiagonalization method _ ’\" antExtract roots byDeterminant Write eigenvalue summary record (READ5) I Figure l.(a)Extract roots byInverse Power method (INVPWR) method (DETM) =0 __ _o! Sorteigenvalues \u0026vectors I intoascending order (READ3)i61 _Det. or Givens Orthogonalize vectors for1closeroots(READ4) Unv\" I Normalize vectors,compute1 modal mass, andwrite | eigenvalue summary (READ.2) / 3 Flowchart formodule READ. 4.48-22 (12-I-69)\nFUNCTIONAL MODULEREAD(REALEIGENVALUE #J_ALYSIS-DISPLACEMENT) INVPWR IInitialize I parameters IPickkoincenter ofI_ searchregion t°°([K]-ko[H]) (INVPI)] I°ec_P°seICK_-°EM_I_INVP2 ! Evaluate eigenvalues inI theregion (INVP3)I Yes Outputsummaryeigenvalue I Figure l.(b) Flowchart formodule READ 4.48-23\nMODULE FUNCTIONAL DESCRIPTIONS Uselast iteraterated vectorINVP3 ENTER $Initialize parameters sTes Usepreviously stored ___ Orthogonalize I vector forstarting vector Solvefor{_n}(INVFBS) Normalize vector(NORM1) $ OrthogonaliZevector 1 OnGenerate a 1 starting vector Figure l.(c) Flowchart formodule READ 4,48-24\nFUNCTIONAL F_DULE READ (REAL EIGENVALUE ANALYSIS -DISPLACEMENT) Compute J {Fn}=[M]{n} Compute I an=({pn}T{Fn}) I/2 ] Setrapid convergence flag LI Compute{Pn} 6_n}-an{Pn_l} O_n.1 n=J{CS_n}T[l’l]{6_n }11/2 No Yes Ist iteration Yesornn_1\u003c nn\u003e1.01nn\" No c2flag_2=_I {6pn}T{6Fn-1}n 2 Figure l.(d) Flowchart formodule READ 4.48-25\nMODULE FUNCTIONAL DESCRIPTIONS 2,n 2,n-l h : 2,n o Yes NoSetE2flag =_ 2,n 2,n-l Yes_IConvergence achieved Save _and@ sufficient time remain forfinding more rootses New regionneeded No completed orall eigenvalues Yes No 91Moveshiftpoint I’ Figure l.(e) Flowchart formodule READ.RETURN 4.48-26 (8/I/72)\nFUNCTIONALMODULE READ (REALEIGENVALUE ANALYSIS -DISPLACEMENT) Setshiftflag K—–7_-_/2 ,Yes Continue terating ft Savecurrent vector LIMove_close to [0 eigenval ue C RETURN Figure l.(f) Flowchart formodule READ 4.48-27\nFUNCTIONAL MODULEDSMGI(DIFFERENTIAL STIFFNESSMATRIXGENERATOR-PHASEI) 4.49 4.49.l 4.49.2FUNCTIONAL MODULEDSMGI(DIFFERENTIAL STIFFNESSMATRIXGENERATOR-PHASEl) Entry Point: DSMGI Purpose Togenerate thedifferentialstiffness matrix, [K_g]_ Static Analysis with Differential Stiffness andBuckling Analysis. 4.49.3 DMAPCallin9 Sequence DSMGI CASECC,GPTT,SIL,EDT,UGV,CSTM,MPT,ECPT,GPCT,DIT/KDGG/V,N,DSCOSET 4.49.4 Input DataBlocks CASECC -CaseControl DataTable. GPTT -Grid Point Temperature Table. SIL -Scalar Index List. EDT -Element Deformation Table. UGV -Initial Approximation totheDisplacement Vector -gset. CSTM -Coordinate System Transformation Matrices. MPT -Material Properties Table. ECPT -Element Connection andProperties Table. GPCT -Grid Point Connection Table. DIT -Direct Input Tables. Notes:,which isusedintwoRigid Formats: I.Afatal error exists ifCASECC ispurged. 2.Afatal error exists ifthere isatemperature loadandtheGPTTispurged. 3.Afatal error exists ifthere isatemperature loadandtheSILispurged. 4.Afatal error exists ifanelement deformation setisrequested bytheuserin case control andEDTispurged. 5.Afatal error exists ifUGVispurged. 6.CSTH canbepurged. However, ifson._gridpoint ofthemodel isnotinbasic coordinates andtheCSTM ispurged, afatal error occurs. 4.49-I\nMODULE FUNCTIONAL DESCRIPTIONS 7. IftheMPTispurged andsome elemept references amaterial property, afatal error occurs. 8. Afatal error occurs iftheECPT ispurged. 9. Afatal error occurs iftheGPCT ispurged. lO. Ifsome material property istemperature dependent, DITcannot bepurged. 4.49.5 Output Data Blocks KDGG -Partition ofdifferential stiffness matrix -gset. Note: KDGG cannot bepre-purged. Afatal error occurs ifitis. 4.49.6 Parameters DSC_SET -Output-integer-no default value. Thesetidentification number ofaDSFACT bulk data card chosen bytheuser inhisCase Control Deck. Ifnosuch setwas specified bytheuser, DSC_SET issetto-l. 4.49.7 Method Themodule driver, DSMGI, isavery short routine whose only function istocall thetwo principal subroutines ofthemodule, DSIandDSIA, which accomplish thetwophases ofthemodule. Thefirst phase ofthemodule isincorporated insubroutine DSI. This routine creates thescratch file ECPTDS (GIN_ file number 301) byappending toeach element intheECPT data block forwhich differential stiffness isdefined anelement deformation, anaverage element loading temperature forallelements except theconical shell element (aloading temperature ateach grid point is appended fortheconical shell element) andtheproper components ofthedisplacement vector, UGV. Itshould benotedthatalthough element defo_nations aredefined onlyforrods,tubes, beams, and bars,anelement deformation isattached toeachelement writter_ ontheECPTDS scratch datablock. Theelements admissible totheECPTDS scratch datablock are:rods,beams, tubes, shear (but nottwist) panels, triangular andquadrilateral elements (TRMEM’s andQDMEM’s), thecombination membrane andplatetriangular andquadrilateral elements (TRIAl, TRIA2, QUADI, QUAD2) andthe conical shell element. TheflowofDSlisgiveninthefollowing steps: I.Thelength ofvariable coreisdetermined, buffers aredefined atthebottom ofopen 4.49-2 (12-I-69)\nFUNCTIONALMODULE DSMGI (DIFFERENTIALSTIFFNESSMATRIX GENERATOR PHASE l) core, andzeropointers to,andlengths of,subarrays inopencoreareinitialized. 2.TheCaseControl datablock, CASECC, isreadtodetermine theelement deformation set number, theloading temperature setnumber, andthedifferential stiffness coefficient setnumber. 3.Ifthere isnotemperature load, gotostep4.Ifthere isatemperature load, the GridPoint Temperature Table datablock, GPTT, isreadsuchthatthepro)er temperature setisread intoopencore. TheScalar Index Listdatablock, SIL,isread intoopen core, andtheinternal gridpoint numbers intheGPTT arereplaced with thecorresponding SILnumbers. 4.Ifanon-zero element deformation setnumber wasrradfromCASECC, theelement deforma- tionsetisreadintoopencore. 5.Thefirst (andonly) record ofthedisplacement vector file, UGV, isreadintoopen core, andthentheECPTDS andECPTfiles areopened andpositioned correctly. 6.TheECPTdatablock isreadrecord byrecord, andtheECPTDS scratch datablock is generated forusebysubroutine DSIA. Theprocedure foreachrecord isasfollows. The pivot point isread. Foreachelement inthecurrent ECPTrecord, itisdetermined if theelement typeisadmissible totheECPTDS datablock. Ifisnotadmissible, thenext i element entry isread; ifitisadmissible, atestismade todetermine iftheelement type isaTRIAl, QUADI orconical shell element. IfitisaTRIAl, QUADI oraconical shell element andifthiselement haszeromembrane thickness (which implies theelement hasbend- ingproperties only) andsince differential stiffness isnotdefined forplate elements, then thenextelement entry isreadfromthecurrent ECPTrecord. Whenthefirst element ofthe ECPT record which belongs tothedifferential stiffness setisencountered, thepivot point iswritten ontheECPTDS datablock. Note thatiftheelement isaBAR,theECPTentry is rearranged toconform with theECPTentry fortheBEAMsothattheDBARsubroutine maybe called insubroutine DSIA. Theelement typeiswritten ontheECPTDS record. Thenan element deformation number, anaverage element loading temperature (twoloading temperatures foraconical shell element), andthedisplacement vecto_ components areappended incore totheECPT entry fortheelement. Finally this_Dended ECPTentry iswritten onECPTDS. Itshould benoted thatthe2ndthrough the(n+l):twords (nbeing thenumber ofgrid points oftheelement) ofevery ECPTentry, since theyarescalar index numbers, aredirect pointers 4.49-3 (811172)"},"title":"Programmer's Manual P51"},"/docs/programmers/programmers_manual_052/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS intothedisplacement vector, UGV.Notefurther thatforelements forwhich differential stiffness isdefined (savefortheBAR,theBEAMandtheconical shellelement) onlythe threetranslational components ofthedisplacement vector ateachgridpointareappended. FortheBARandBEAMallsixdisplacement compGnents ateachgridpointareappended. For thespecial caseoftheconical shellelement, onlythesixdisplacement components ateach gridpointassociated withthezeroth harmonic areapperlded. Whenanend-of-record issensed foranECPTrecord, anindicator isinterrogated to determine whether ornotanyoftheelements intherecord werewritten ontheECPTDS data block. Ifthereweren’t any,a-Iiswritten onECPTDS withanend-oF-record mark; ifthere wasatleastoneelement, anend-of-record iswritten onECPTDS. Ineither case,afterthis stephasbeendone,thenextECPTrecord isprocessed identically. Whenanend-of-file is sensed ontheECPT,thefilesforECPTandECPTDS areclosed, andtheroutine returns to DSMGI. T_emodule driver, DSMGI, teststheargument ofDSl.Ifitisequaltozero,thisimplies thatnoelement oftheECPTwasamember ofthesetofelements forwhichdifferential stiffness isdefined, andhenceafatalerrorexitoccurs. Iftheargument isgreater thanzero,subroutine DSIAiscalled. Inthesecond phaseofthemodule, subroutine DSlAprocesses thescratch fileECPTDS to Kd produce thedifferential stiffness matrix, [gg].Thelogicofthisprocessing isverysimilar tothatusedinsubroutine SMAIA (ofmodule SMAI,thestiffness matrix generation routine). SeetheModule Functional Description forSNtAI(section 4.27)fordetails. 4.49-4 (12-I-69)\nFUNCTIONAL MODULE DSMGI (DIFFERENTIAL STIFFNESS MATRIX GENERATOR -PHASE I) 4.49.8 Subroutines Allsubroutines defined below except DSIarenecessary toaccomplish thesecond phase ofthemodule, which istheprocessing oftheECPTDS scratch file inorder togenerate Kd[gg]. Theauxiliary routines PRETRD, PREMAT, G_TD andINVERD areusedsimilarly tomodule SMAI. Thedata(anECPTDS entry) input toanelement differential stiffness matrix generation routine (e.g., DR@D) arecommunicated totheroutine via/DSIAET/,which factisnotexpressly stated inthesubroutine descriptions given below. 4.49.8.1 Subroutine Name: DSI l° 2. 3. IARG 4.49.8.2Entry Point:DSI Purpose: Seediscussion above. Calling _……….. DSI(iARG) Initially settozeroinsubroutine DSI. Thisvariable issettolinDSIevery timeanelement intheECPTisencountered which isinthesetofelements for which differential stiffness isdefined. IfIARGisstill zerouponDSl’s return toDSMGI, DSMGI will terminate thejobbycalling MESAGE andPEXIT. Subroutine Name: DSIA I. 2. 3. 4.49.8.3Entry Point: DSIA Purpose: Seediscussion above. Calling Sequence: CALLDSIA Subroutine Name: DSIB I.Entry Point: DSIB 2.Purpose: This routine, called bythemodule’s element matrix generation routines such asDR_D, DBEAM, etc., addsadouble precision 6by6element differential stiffness matrix tothe\"submatrix\" corresponding tothecurrent pivot point. This samefunction isperformed inmodule SFtAIbysubroutine SMAIB, inSMA2bySMA2B andinPLA4byPLA4B. 4.49-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.49.8.43.Calling Sequence: CALLDSlB(KE,J) KE-Row-stored double precision 6by6matrix tobeaddedtothe\"submatrix\" corresponding tothecurrent pivotpoint. Double precision; input. Kd J-Thecolumn indexofthe[gg]matrix whichcorresponds tothefirstcolumn oftheKE matrix. Integer; input. BlockDataSubprogram Name: DSIABD I.EntryPoint: DSIABD 2.Purpose: Thisblockdataprogram setsI)GINOfilenumbers; 2)GIN__PEN,WRITE andCLOSEoption parameters; 3)differential stiffness element routine (e.g., DR_D,DBAR) overlay parameters; and4)anarraywhichdefines thenumber ofwords tobereadfor eachelement fromtheECPTDS scratch file. Thecommon block/DSlAAA/ isusedforthe second phaseofthemodule. 4.49.8.5 I. 4.49.8.6 4.49.8.7Subroutine Name: DR_D 5. orTUBEelement. 3.Calling Sequence: Subroutine Name:EntryPoint: DR_D Purpose: Togenerate theelement differential stiffness matrix foraR_D,C_NR_D CALLDR_D DBAR I.EntryPoint: DBAR 2.Purpose: Togenerate theelement differential stiffness matrix foraBARorBEAM element. 3.Calling Sequence: CALLDBAR Subroutine Name: DSHEAR I.EntryPoint: DSHEAR 2.Purpose: Togenerate theelement differential stiffness matrix foraSHEAR (panel) element. 4.49-6 (8/I/72)\n3. 4.49.8.8 I. 2. 3. IARG= 4.49.8.9FUNCTIONAL MODULE DSMGI (DIFFERENTIAL STIFFNESS MATRIX GENERATOR PHASE l) Calling Sequence: CALLDSHEAR Subroutine Name: DTRMEM Entry Point: DTRMEM Purpose: Togenerate theelement differential stiffness matrix foraTRMEM element. Calling Sequence: CALLDTRMEM (IARG) IO=Called fromDSGMIl=Called fromDQDMEM 2=Called fromDTRIA 3=Called fromDQUAD Subroutine Name: DQDMEM I.Entry Pnint: DQDM,EM 2.Purpose: Togenerate theelement differential stiffness matrix foraQDMEM element. 3.Calling Sequence: CALLDQDMEM 4.49.8.10 Subroutine Name: DCBNE Entry Point: DC_NE Purpose: Togenerate theelement differential stiffness matrix foraconical shellI. 2. element. 3.Calling Sequence: 4.49.8.11CALLDC_NE Subroutine Name: DTRIA (IARG) I.Entry Point: DTRIA 2.Purpose: Togenerate theelement differential stiffness matrix foraTRIAl andTRIA2 element. 3.Calling Sequence: CALLDTRIA (IARG) IARG=Il=TRIAl element (2=TRIA2 element 4.49-7 (8/I/72)\nFUNCTIONAL MODULE DSMGI (DIFFERENTIAL STIFFNESS MATRIX GENERATOR PHASEI) 4.49.8.12 Subroutine Name: DQUAD (IARG) I.EntryPoint: DQUAD 2.Purpose: Togenerate theelement differential stiffness matrix foraQUADIandQUAD2 element. 3.Calling Sequence: CALLDQUAD(IARG) I1=QUADIelementIARG 2=QUAD2element 4.49.8.13 Subroutine NameDTRBSC (IARG, NPIV_T) I. 2. forele_f_ntary triangles. 3.Calling Sequence: CALLDTRBSC (IARG, NPIV_T) I1:Called fromDTRIAIARG (2:Called fromDQUAD NPIV_T =0,1,2, or3=Pointontriangle usedaspivotpoint.EntryPoint: DTRBSC Purpose: Usedbysubroutines DTRIAandDQUADtogenerate differential stiffness matrices (0=nopivot) 4.49.9 Design Requirements 4.49.9.1 OpenCoreDesign During phaseoneofthemodule’s operation, themaximum corestorage requirements aregiven inthefollowing diagram, inwhichopencore,theZarray, isdefined at/DSlX/. 4.49-7a (8/I/72)\nZ(IGPTT) Z(IEDT) Z(IDISP)MODULE FUNCTIONAL DESCRIPTIONS C_MM_N/DSIX/ GPTTdatawith internal gridpoint numbers replaced byscalar index numbers fromtheSIL EDTdata Single precision displacement vector inunpacked formfromthe UGVdatablock Z(BUFFRI) Z(BUFFR2)GIN_buffer GIN@buffer During phase twoofthemodule’s operation, theopen coredesign isthesameasthat formodule SMAI, except thatonly3GIN_ buffers areneeded instead of5,oneforECPTDS, oneforGPCT andoneforKDGG. Opencore forphase twoisdefined at/DSIAXX/. 4.49.9.2 Common Storage Requirements During phase one,there arenospecial common storage requirements. During phase two,/DSIAAA/takes theplace of/SMAII_/,/SMAIBK/and/SMAICL/;/DSIAET/ corresponds to/SMAIET/;and/DSIADP/corresponds to/SMAIDP/.Seethecommon storage re- quirements section oftheSMAIModule Functional Description fordetails on/SMAII_/,/SMAIBK/, /SMAICL/,/SMAIET/and/SMAIDP/(section 4.27.9.3). 4.49-8\nFUNCTIO_UkL MODULEDSMGI(DIFFERENTIAL STIFFNESSMATRIXGENERATOR-PHASEl) 4.49.9.3Arithmetic Considerations Allfloatingpointarithmetic operations arecarriedoutindoubleprecision. [K_g]is arealdoubleprecisionsymmetricmatrix. 4.49.10Diagnostic Messaqes During phase onethefatal messages 2029and2030canbecalled iftheGPTT isnotinthe proper format. IfaBARelement isencountered whose coupled bending interia property, ll2,isnon-zero, thenitissettozeroandtheuseriswarned ofthisfactwith message 2111. Usermessages 2081and2083arefatal messages indicating anulldifferential stiffness matrix andanulldisplacement vector respectively. Forphase twodiagnostics, thereader isreferred tothediagnostic message section of theModule Functional Description forSMAI. 4.49-9\nFUNCTIONAL MODULESMP2(STRUCTURAL MATRIXPARTITIONER -PHASE2) 4.50FUNCTIONAL MODULESMP2(STRUCTURAL MATRIXPARTITIONER -PHASE2) 4.50.IEntry Point: SMP2 4.50.2 Purpose Toperform thefollowing matrix operations: .,-d Kd-I [Kdf] _ .d,T_KdI (aoJ: oo_J(1) [Kdaa]=[,daa] +[Kdao][Go]+ ([Kdao][Go])T+ [GoIT[Kdoo] [Go]- 4.50.3 DMAPCallin 9Sequence SMP2 USET,G,KDFF/KDAA/ 4.50.4 Input DataBlocks USET G@ KDFFDisplacement setdefinitions table. Structural matrix partitioning transformation matrix. Partition ofdifferential stiffness matrix -fset. 4.50.5 Output DataBlocks KDAA -Partition ofdifferential stiffness matrix -aset. 4.50.6 Parameters None 4.50.7 Method matrix [K_f] ispartitioned asinEquation lusing The USET (UF,UA,U_), andmatrix subroutine ELIM(seesection 3.5.22 fordetails) iscalledtoperform theoperations in Equation 2.(2) 4.50-I (711170)\nMODULEFUNCTIONAL DESCRIPTIONS 4.50.8Subroutines SMP2hasnoauxiliary subroutine. 4.50.9 Design Requirements Seedesign requirements forsubroutine UPART anditsentry point MPART which perform thesymmetric partition ofEquation l;alsoseedesign requirements forsubroutine ELIM. These areinsections 3.5.9 and3.5.22 respectively. 4.50-2\n4.51 4.51.l 4.51.2FUNCTIONAL MODULEDSMG2(DIFFERENTIAL STIFFNESSMATRIXGENERATOR-PHASE2) FUNCTIONAL MODULEDSMG2(DIFFERENTIAL STIFFNESSMATRIXGENERATOR-PHASE2). Entry Point: DSMG2 Purpose Thismodule performs thefollowing matrix operations: eK J:e aal÷ eKdaa , (1\u003e ekes]:[Kfs]+[K_s], (2) FK_s]:[Kss]+[K_s], (3) {P_} =B{P_} , (4) {P_} :B{Ps}, (5) {Y_} =B{Ys}, (6) {u_b}:{u} . (7) Thevalue ofBisonaDSFACT bulkdatacardwhose setidentification number isspecified bythe input parameter DSC_SET. Theparticular value onthatcardtobeusedforBonanypassthrough theDMAPloopintheStatic Analysis withDifferential Stiffness Rigid Format iscontrolled bythe parameter NDSKIP (seebelow). 4.51.3 DMAPCallin_ Sequence DSMG2 MPT,KAA,KDAA,KFS,KDFS,KSS,KDSS,PL,PS,YS,U_V/KBLL,KBFS,KBSS,PBL,PBS,YBS,UBg_V/ V,N,NDSKIP/V,N,REPEATD/V,N,DSC_SET $ 4.51.4 Input DataBlocks MPT KAA KDAA-Material Property Table. -Partition ofstiffness matrix -aset. -Partition ofdifferential stiffness matrix -aset. 4.51-I\nKFS KDFS KSS KDSS- PL- PS YS u_v- Notes: I. 2. 3. 4.51.5 KBLL- KBFS- KBSS- PBLMODULE FUNCTIONAL DESCRIPTIONS Partition ofstiffness matrix aftersingle-point constraints havebeenremoved. Partition ofdifferential stiffness matrix aftersingle-point constraints have beenremoved. Partition ofstiffness matrix aftersingle-point constraints havebeenremoved - sset. Partition ofdifferential stiffness matrix aftersingle-point constraints have beenremoved -sset. Partition oftheloadvector matrix giving static loadson_set. Partition oftheloadvector matrix giving loadsinsset. Constrained displacement vector -sset. Partition ofthedisplacement vector matrix giving displacements intheoset. Afatalerroroccurs ifMPTispurged. KAAandKDAAcannot bepurged. KFSandKDFSmustbebothpurged orbothnon-purged. 4.KSSandKDSSmustbebothpurged orbothnon-purged. 5.Afatalerroroccurs ifPLispurged. 6.PS,YSandU_Vcanbepurged. Output DataBlocks Partition ofthestiffness matrix ofthefirstorderanproximation tolarge displacements -_set. Partition ofthestiffness matrix ofthefirstorder approximation tolarge displacements. Partition ofthestiffness matrix ofthefirstorderapproximation tolarge displacements -sset. Partition oftheloadvector ofthefirstorderapproximation tothelarge displacements -_set. 4.51-2\nPBS YBS UB_V -FU;_CTIO;_AL ;._ULEDS,4G2 (blFFEREi_TIAL STIFF;ESS ;.TRIXGEi_ERATOR -PHASE 2) -Partition oftheloadvector ofthefirst order approximation tothelarge displacements -set. -Partition oftheconstrained displacement vector ofthefirst order approximation tothelarge displacement vector -sset. Partition ofthedisplacement vector ofthefirst order approximation tothe large displacement problem -oset. Notes: I. 2. 3. 4. 5.KBLLmust notbepurged orafatal error exists. KBFScanbepurged ifandonly ifboth KFSandKDFSarepurged. KBSScanbepurged ifandonlyifbothKSSandKDSSarepurged. PLmust notbepurged orafatal error exists. PBS,YBSandUB_V canbeDurapd,……..if_n_n_ly,,,¢,,,nS,w,anduD_v……. respectiveiy arepurged. 4.51.6 Parameters NDSKIP REPEATD DSC@SET-Input andoutput-integer -mustbesettozerobefore theDMAP loopforStatic Analysis with Differential Stiffness isinitiated. This parameter isusedasa loopcounter fortheDMAPloopintheStatic Analysis withDifferential Stiffness Rigid Format. Itenables thismodule toskiptheproper number ofwords onthe proper DSFACT card (seedefinition oftheparameter DSC_SET below) tofetch the value ofBforthescalar multiplications defined above. Output-integer-no default value. This parameter issetto+lifanother pass is tobemade through theStatic Analysis with Differential Stiffness DMAPloop (and hence through theDSMG2 module). Itissetto-lifthemodule determines that thecurrent passthrough themodule willbethefinal one. Thislatter condition ismetif(1)nodifferential stiffness coefficient setnumber wasspecified by theuserinhisCaseControl Deck (ifthiscondition istrue, module DSMGI sets theparameter DSC_SET (seebelow) equal to-Iandavalue of1.0isusedfor); orif(2)thecurrent Bisthelastoneontheuserspecified DSFACT card. -Input-integer-no default value. DSCOSET isthedifferential stiffness coefficient 4.51-3\nMODULEFUNCTIONAL DESCRIPTIONS 4.51.7MethodsetnumberofaDSFACTbulkdatacardchosenbytheuserinhisCaseControlDeck. Ifnosuchsetwasspecifiedbytheuser,DSC_SET=-landthismodulewillset B=l.OandsettheREPEATDparameterto-l.IfDSFACT\u003eO,DSFACTisusedto searchtheMPTfortheDSFACTbulkdatacardchosenbytheuser. REPEATDissettooneandNDSKIPisincremented byone.IfDSCOSET=-l,REPEATD issetto -landthethree matrix additions inEquations l,2and3arecarried outusing thematrix sub- routine SSG2C. Itshould benoted thatifDSC_SET =-l,itisassumed thatDMAPequivalences have beenmadebetween PLandPBL, PSandPBS,YSandYBS,andU_VandUB_V andhence Equations 4 through 7arenotcalculated. IfDSC_SET #-l,theMPTissearched until amatch isfound between DSCOSET andaDSFACT bulkdatacard image ontheMPT. Ifamatch isfound, theparameter NDSKIP isusedtofind the correct value ofBforthispassthrough theDMAPloop. Ifamatch isnotfound, afatal error occurs. Amatch having beenfound, thefollowing operations areperformed. I.REPEATD issetto-lifitisdetermined thatthisBisthelastoneontheDSFACT card. 2.Thefourscalar multiplications inEquations 4through 7areperformed using matrix subroutine SSG2C. 3.Thethree matrix additions inEquations lthrough 3areperformed using matrix sub- routine SSG2C. 4.51.8 Subroutines DSMG2 hasnoauxiliary subroutines. 4.51.9 Design RequirementsAdescription ofSSG2C canbefound insection 3.5.11. IfDSCOSET =-l,itisassumed thatDMAPequivalences have beenmadebetween thedatablocks corresponding tothematrices inEquations 4through 7. TwoGINBbuffers areneeded andopencoreisdefined at/DSMG2X/. 4.51.I0 Diagnostic Messages Fatal error message 2084mayoccur. 4.51-4\nFUNCTIONAL MODULEPLAI(PIECEWISE LINEARANALYSIS-PHASEI) 4.52 4.52.1 4.52.2FUNCTIONAL MODULEPLAI(PIECEWISE LINEARANALYSIS-PHASEl) Entry Point: PLAI PLAIisapre-processor forthemodules unique tothePiecewise Linear Analysis Rigid Format. PLAIextracts thelinear elements fromtheECPTdatablock (anelement isdefined tobelinear if itsmodulus ofelasticity (EonaMATIbulkdatacard) isnotreferenced asastress-strain tabular function defined onaTABLESI bulkdatacard. PLAIextracts thenonlinear element entries fromtheECPTdatablock toformECPTNL, andseparates thelinear andnonlinear element entries intheESTtoform ESTLandESTNL. Thelinear elements areusedtogenerate the[K_] matrix. gg 4.52.3 D_PCalling Sequence PLAI 4.52.4 CSTM MPT ECPT GPCT DIT CASECC EST Notes:CSTM,MPT,ECPT,GPCT,DIT,CASECC,EST/KGGXL,ECPTNL,ESTL,ESTNL/V,N,KGGLPG/v,N,NPLALIM/ V,N,ECPTNLPG/V,N,PLSETN_/V,N,N_NLSTR/V,N,PLFACT $ Input DataBlocks -Coordinate System Transformation Matrices. -Material Properties Table. -Element Connection andProperties Table. -GridPoint Connection Table. -Direct Input Tables. CaseControl DataTable. Element Summary Table. I.TheCSTMmaybepurged. However, ifitis,andsomegridpoint isnotin basic coordinates, thenafatal error exists. 2.Ifanelement references amaterial property andtheMPTispurged, afatal error exists. 3.Ifanyofthedatablocks ECPT, GPCT, DIT,CASECC orESTispurged, afatal error exists. 4.52-I (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.52.5 KGGXL ECPTNL ESTL ESTNL Note:Output DataBlocks -Stiffness matrix oflinear elements exclusive ofgeneral elements -gset. -Element Connection andProperties TableforNonlinear Elements. -Element Summary TableforLinear Elements. -Element Summary TableforNonlinear Elements. Noneoftheoutput datablocks maybepre-purged. 4.52.6 Parameters KGGLPG NPLALIM ECPTNLPG PLSETN_ N_NLSTR-Output-integer-no default value. PurgeflagfortheKGGXLmatrix. Ifall elements arenonlinear, theKGGXLmatrix isthezeromatrix, andthemodule setsKGGLPG =-I.Ifalinear element isfound, KGGLPG willbesetto+I. -Output-integer-no default value. NPLALIM isthenumber ofloadincrements onthePLFACT cardchosen bytheuserinhisCaseControl Deck. This parameter controls thenumber ofstepsintheDMAPloopofthePiecewise Linear Analysis (PLA)RigidFormat. -Output-integer-no default value. PurgeflagfortheECPTNL datablock aswellasafatalerrorcondition flagwithrespect tothePLARigidFormat. Ifthemodule findsthatallelements arelinear, ECPTNLPG isset:-I,and, uponcompletion ofthemodule, aJUMPtoanerror condition message writer willoccur, andthenanEXITwillbeexecuted. Ifatleastoneelement is nonlinear, ECPTNLPG issetto+I,andtheflowthrough DMAPsequence continues. Ou}put-integer-no default value. PLSETN_ isthesetnumber onaPLFACT cardwhichischosen bytheuserinhisCaseControl Deck. Itisused inmed:_les PLA3andPLA4tofindtheproper PLFACT cardintheMPTdata block. Output-integer-no default value. N_NLSTR isaflagusedtocontrol the calling ofthePLA3module, whichoutputs stresses, in_FP(Output File Processor) format, fornonlinear elements. Ifeither (a)theuserdoesnot request theoutput ofelement stresses, or(b)theuserhasrequested 4.52-2 (8/I/72)\nFUNCTIONAL MODULEPLAI(PIECEWISE LINEARANALYSIS-PHASEI) PLFACT 4.52.7Methodelementstressoutputforasetofelementsallofwhosemembersare linear,thenNBNLSTRissetto-I.Ifthereisastressoutputrequest forsomenonlinearelement,thenNBNLSTRisset=+IandPLA3willbe calledeachtimethroughthePLADAMPloop. Output-complex-no defaultvalue.Thefirstloadincrementfactortobe usedthefirsttimethroughthePLADAMPloop. Theroutineisdividedintotwophases.Phase1processestheECPTdatablockinafashion similartomoduleSMAI(seeSection4.27).Foreachpivotpoint,everyelementisexaminedto determinewhetheritislinearornonlinear.Thisisaccomplished bycallingsubroutine MAT (seeSection3.4.36)withthesecondword,INFLAG,ofthecommonblock/MATIN/ equalto5.If theelement islinear, theproper element stiffness matrix generator routine suchasKR_D,KBAR, etc.iscalled. Theelement routine will,inLurn,callsubroutlne SMAIBtoadditscontribution tothe6(orfewer, ifthepivotpointisascalar pointorthereisnotenough corestorage available-see Module Functional Description forSMAI,Section 4.27-) mowsoftheKGGXLmatrix currently beinggenerated. IftheMATroutine determines thattheelement isnonlinear, then theECPTentryforthatelement, alongwithwordsneeded subsequently inmodule PLA4,isappended (seedatablockdescription forECPTNL inSection 2.3.34.4 fordetails). Thenumber ofwords appended depends uponelement type. Thisappended ECPTentry iswritten ontotheECPTNL data block. Phase2ofthisroutine readsthefirstrecord ofCASECC intocore,andtheMPTdatablock issearched tofindthesetnumber onaPLFACT bulkdatacard(ifthedefault isnotused)re- quested bytheuserinCASECC. Ifthedefault valueisspecified bytheuserasdescribed for thePLCBcardofSection 2.3oftheUser’s Manual, asingle valueof1.0willbegenerated. Parameters PLFACT andPLASETNO areset.TheESTdatablockisthenprocessed. Thelogichere issimilar toPhaseI.Foreachelement, itisdetermined iftheelement islinear ornonlinear. Iftileelement islinear, itsESTentryiscopied ontotheESTLdatablock. Iftheelement is non-llnear andstress output isrequested, theESTentryalongwithwords needed subsequently inmodule PLA3areappended. Thenumber ofwordsappended depends uponelement typeandisnot thesamenumber ofwords appended totheECPTentrytocreate theECPTNL. Iftheelement nonlinear andstress output isnotrequested, theESTentryfortheelement iswritten ontothe ESTLdatablock. 4.52-3 (8/i/7z)\nMODULE FUNCTIONAL DESCRIPTIONS 4.52.8 Subroutines PLAIhasnoauxiliary subroutines assuch. However, itusesallthestructural element routines ofmodule SMAItogenerate rKx_]‘which inturnusethecommon blocks ofSMAI aswell Lgg asthe\"insertion\" routine, SMAIB. SeeModule Functional Description forSMAI, section 4.27. 4.52.9 Design Requirements Forphase 1ofPLAI, thedesign requirements arethesameasthose forSMAI. Forphase 2,thefirst record ofCASECC mustbeheld inopencore. 4.52.10 Diagnostic Messages Forphase l,seediagnostic messages formodule S_l, section 4.27.10. Forphase 2,auser fatal message, 3032, occurs ifthePLFACT bulkdatacardwhich waschosen bytheuserinhis Case Control Deckcould notbefound intheMPT. 4.52-4 (8/I/72)\nG.53 4.53.1 4.53.2FUNCTIONAL MODULE PLA2(PIECEWISE LINEAR ANALYSIS -PHASE 2) FUNCTIONAL MODULE PLA2 (PIECEWISE LINEAR ANALYSIS -PHASE 2) Entry Point: PLA2 Purpose Toaddtheincremental displacement vector, theincremental loadvector, andtheincremental vector ofsingle-point forces ofconstraint forthecurrent passthrough thePiecewise Linear Analysis Rigid Format DMAP looptothecurrent running sumofthese vectors: {Ugi+I}:{Ugi}+{AUgi}, (I) {Pgi+l }:{Pgl}.. +{APql}.. , (2) {qgi+l}:{qo_i}+{aqgi} (3) 4.53.3 DMAPCallin_ Sequence PLA2 DELTAUGV,DELTAPG,DELTAQG/UGVI,PGVI,QGL/V,N,PLAC_UNT $ 4.53.4 DELTAUGV DELTAPG DELTAQG Note:Input DataBlocks -Incremental displacement vector inPiecewise Linear Analysis -gset. -Incremental loadvector inPiecewise Linear Analysis -gset. -Incremental vector ofsingle-point forces ofconstraint inPiecewise Linear Analysis -gset. I.DELTAUGV andDELTAPG cannot bepre-purged. 2.DELTAQG maybepre-purged. 4.53.5 Output DataBlocks UGVl PGVI QGIMatrix ofsuccessive sumsofincremental displacement vectors -gset. Matrix ofsuccessive sumsofincremental loadvectors -gset. Matrix ofsuccessive sumsofincremental vectors ofsingle-point forces of constraint -gset. 4.53-I\nMODULE FUNCTIONAL DESCRIPTIONS Notes: I. 2.UGVIandPGVIcannot bepurged. QGImaybepurged ifDELTAQG ispurged. 4.53.6 Parameters FtAC_UNT Inputandoutput-integer -thisparameter mustbesetto1outside the Piecewise Linear Analysis RigidFormat DMAPloon. Thisisdoneusinq thePARAMmodule rather thanthrough theModule Properties List(MPL). 4.53.7 Method IfPLAC_UNT =I,thatis,thisisthefirsttimePLA2hasbeencalled inthePiecewise Linear Analysis RigidFormat DMAPloop,thentheDELTAUGV datablockiscopied ontotheUGVI datablock. IfPLAC@UNT \u003eI,thenPLAC@UNT isusedasacounter todetermine howmanyrecords (running sumdisplacement vectors) toskiponthefilecontaining UGVIsothatthemostrecently computed running sumdisplacement vector canbereadintoopencoreforthevector addition. Oncethisvector isreadintoopencore,theincremental displacement vector isreadand interpreted usingsubroutines INTPKandZNTPKI, andthevector addition given inEquation 1is carried outelement-by-element. Equations 2and3arecomputed usingthemethod described intheaboveoaraqra_h. 4.53.8 Subroutines PLA2hasnoauxiliary subroutines. 4.53.9 Design Requirements Opencoreisdefined at/PLA2X/. 4.53.10 Diagnostic Messages Usermessage 2127or2128isoutput ifeither DELTAUGV (DELTAPG) orUGVI(PGVI) ispurged. 4.53-2\nFUNCTIONAL MODULE PLA3 (PIECEWISE LINEAR ANALYSIS -PleASE 3) 4.54 FUNCTIONAL MODULE PLA3 {PIECEWISE LINEAR ANALYSIS -PHASE 3) 4.54.1 Entry Point: PLA3 4.54.2 Pu_Purpose Tocompute element stresses fornonlinear elements (seedefinition oflinear elements in section 4.52.2) forwhich theuserhasrequested stress output. Italso updates theESTNL data block sothattheoutput datablock, ESTNLI, contains up-to-date element stress information. 4.54.3 DMAPCallin_ Sequence PLA3 CSTM,MPT,DIT,DELTAUGV,ESTNL,CASECC/_NLES,ESTNLI/V,N,PLACOUNT/V,N,PLSETNB $ 4.54.4 Input DataBlocks CSTM MPT DIT DELTAUGV ESTNL CASECC Notes: 4.54.5 _NLES ESTNLI Note: 4.54.6 Parameters-Coordinate System Transformation Matrices. -Material Properties Table. -Direct Input Tables. -Current incremental displacement vector. -Element Summary Table forNonlinear Elements. -Case Control DataTable. I.CSTMcanbepurged. However, ifsomegridpoint ofthemodel isnotinbasic coordinates andtheCSTMispurged, afatal error occurs. 2.Afatal error occurs ifeither MPT,DIT,DELTAUGV, ESTNL orCASECC ispurged. Output DataBlocks -Nonlinear element stresses (tobeprocessed bytheOutput FileProcessor). -Element Summary Table forNonlinear Elements -Updated. Neither output datablock maybepurged. PLAC_UNT -Input-integer-no default value. This isthePiecewise Linear Analysis (PLA) 4.54-I"},"title":"Programmer's Manual P52"},"/docs/programmers/programmers_manual_053/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS PLTSETN@Rigid Format DMAP loopcounter. Itisusedinthis routine tofind theproper loading factors onthePLFACT bulkdata cardspecified bytheuser(see PLSETN_ below). Input-integer-no default value. PLSETNO isthesetidentification number of scmePLFACT bulk datacardchosen bytheuser inhisCaseControl Deck. Itis usedtofindthis PLFACT card intheMPTdatablock. 4.54.7 Method Themodule driver, PLA3, isashort routine whose onlyfunction istocallsubroutines PLA31 andPLA32 which accomplish phase landphase 2ofthetaskofthemodule respectively. Subroutine PLA31 reads theincremental displacement vector intocoreandappends toeachelement entry oftheESTNL datablock thecomponents oftheincremental displacement vector corresponding tothegridpoints ofeachelement. Thismerged information iswritten onthescratch data block ESTNLS, GIN_filenumber 301. InPLA32, theESTNLS datablock isread, andtheproper element routine iscalled tocompute element stresses which areprepared in_FP(Output File Processor) format. Eachelement routine alsoupdates incremental stress data. TheESTNL data foreach element withtheupdated stress information (butwithout thecomponents ofthedisplace- ment vector) arewritten onESTNLI. Ir_PLA31, forTRMEM andQDMEM elements, onlythethree translational components ofthedis- placement vector ateach gridpoint oftheelement areappended totheESTNL entry. Other elements forwhich Piecewise Linear Analysis isdefined useallsixcomponents ateachgrid point. InPLA32, thedifference quotients y*and¥,which aretheprevious andcurrent (with respect totheDMAP loopinthePLARigid Format) loadincrement ratios, arecomputed asfollows. Let PI’P2’P3….. betheloading factors onaPLFACT bulkdata card. Define Po=O.Define _i=Pi-Pi-l ’ (1) fori_I.Then, define Yl=O,and\n_i Yi- ’ (2) _i-l 4.54-2 (8/I/72) FUNCTIONAL MODULEPLA3(PIECEWISE LINEARANALYSIS-PHASE3) fori\u003el,anddefine (3) fori_I.These difference quotients arestoredin/PLA32C/forcommunication tothemodule’s element routines sothattheycancompute theestimated nextstrain. Thedetails oftheelement calculation aregiven insection 4.87. Theinput parameter PLAC_UNT, being thecounter forthe PLARigid Format DMAPloop, controls thecomputation ofy*andy.However, themodule’s design assumes (1)PLAC_UNT issettooneoutside thePLADMAPloopand(2)module PLA2, which incre- ments PLAC_UNT byone,will beexecuted prior toevery DMAPcalltoPLA3. Hence, theproper choice forthesubscript iinEquations l,2and3isonelessthanthevalue ofPLAC_UNT. Thedifference PLAC_UNT-I isstored in/PLA32C/asIPASS. 4.54.8 Subroutines PLA3uses, forelement routine calculations, theutility routines PRETRS, PREMAT, GMMATS and element drivers. Communication ofanappended ESTNL element entry toanelement routine during phase 2ofPLA3 isaccomplished via/PLA32E/,which isI00words inlength. This factisnot explicitly stated below. Theelement drivers PSTRM, PSQDM, PSTRII, PSTRI2, PSQADI, andPSQAD2, usea)/PLA3ES/,which is300words inlength, asacon_nunication linkfortheelement subroutines which theycall; and b)/PLA3UV/,which is25words inlength, asacommunication linkfordisplacement vectors between thedriver andtheir subroutines. PLA32 willcalltheelement drivers listed above (plus PSR_D andPSBAR); theother subroutines described below (insections 4.54.8.11 through 4.54.8.18) are only used (directly orindirectly) bytheele_nt drivers. 4.54.8.1Subroutine Name: PLA3I I.Entry Peint: PLA31 2.Purpose: Toperform phase lofthemodule’s operations asdescribed above. 3.Calling Sequence: CALLPLA31 4.54-3 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.54.8.2 Subroutine Name: PLA32 I.Entry Point: PtA32 2.Purpose: Toperform phase 2oftffemodule’s operation asdescribed above. 3. CALLPLA32 Calling Sequence: Subroutine Name: 4.54.8.3 PSR@D I.Entry Point: PSROD 2.Purpose: Tocompute element stresses andtoupdate theESTNL entry foraR_D,CONROD or TUBEelement. NotethatforaTUBEelement, theESTNLentryisrearranged andelementary transformations areperformed inPLA32sothatthePSRODroutine maycompute element stresses foraTUBE. 3.Calling Sequence: 4.54.8.4 Subroutine Name: PSBARCALLPSROD I.EntryPoint: PSBAR 2.Purpose: Tocompute element stresses andtoupdate theESTNLentryforaBARelement. 3.Calling Sequence: CALLPSBAR 4.54.8.5 Subroutine Name: PSTRM I.EntryPoint: PSTRM 2.Purpose: Tocalculate thematerial properties matrix, arrange theflowofelement stresscalculations andupdate theESTNLentryfortheTRMEMelement. 3.Calling Sequence: CALLPSTRM Subroutine Name:PSQDM I.EntryPoint: PSQDM 2.Purpose: Tocalculate thematerial properties matrix, arrange theflowofelement stress calculations andupdate theESTNLentryfortheQDMEMelement.4.54.8.6 3.Calling Sequence: CALLPSQDM 4.54-4 (12-I-69)\nFUNCTIONAL MODULEPLA3(PIECEWISE LINEARANALYSIS-PHASE3) 4.54.8.7Subroutine Name:PSTRII I.EntryPoint:PSTRII 2.Purpose:Tocalculatethematerialproperties matrix,arrangetheflowofelementstress calculations andupdatetheESTNL entry fortheTRIAl element. 3. CALLPSTRII PSTRI2 Entry Point: PSTRI24.54.8.8 I. 2.Calling Sequence: Subroutine Name: Purpose: Tocalculate thematerial properties matrix, arrange theflowofelement stress calculations andupdate theESTNL entry fortheTRIA2 element. 3.Calling Sequence: CALLPSTRI2 Subroutine Name: PSQADI I.Entry Point: PSQADI 2.Purpose: Tocalculate thematerial properties matrix, arrange theflowofelement stress calculations andupdate theESTNL entry fortheQUADI element. CALL PSQADI PSQAD2 I.Entry Point: PSAQD2 2.Purpose: Tocalculate thematerial properties matrix, arrange theflowofelement stress calculations andupdate theESTNL entry fortheQUAD2 element. CALLPSQAD2 PSTRMI I.Entry Point: PSTRMI 2.Purpose: Togenerate element stress matrices fortheTRMEM element, andthemembrane portion ofTRIAl andTRIA2 elements, andperform subcomputations forthePSQDMI routine. 3.Calling Sequence: CALLF’STRMI (NTYPE)4.54.8.9 3.Calling Sequence: 4.54.8.10 Subroutine Name: 3.Calling Sequence: 4.54.8.11 Subroutine Name: 4.54-5 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS _0=TRMEM, TRIAl, orTRIA2NTYPE Subcomputations forthePSQDMIsubroutine 4.54.8.12 Subroutine Name: PSQDMI I.EntryPoint: PSQDMI 2.Purpose: Togenerate element stressmatrices fortheQDMEMelement andthemembrane portions ofQUADIandQUAD2elements. 3.Calling Sequence: CALLPSQDMI 4.54.8.13 Subroutine Name: PSTQI I.EntryPoint: PSTQI 2.Purpose: Togenerate element stressmatrices fortheTRIAl,TRIA2, QUADI, andQUAD2 elements. 3.Calling Sequence: CALLPSTQI(NTYPE) 1=TRIAl 2=TRIA2 NTYPE 3=QUADI 4=QUAD2 4.54.8.14 Subroutine Name: PSTRBI I.EntryPoint: PSTRBI 2.Purpose: Togenerate element stress matrices forsubcalculations ofbasicbending triangles fortheplateportion ofTRIAl, TRIA2, QUADIandQUAD2elements. 3.Calling Sequence: CALLPSTRBI (I_PT) _I:Subcalculations forPSQPLII@PT 2Subcalculations forPSTPLI 4.54.8.15 Subroutine Name: PSTPLI I.Entry Point: PSTPLI 2.Purpose: Togenerate theelement stress matrices fortheplate portion ofTRIAl and 4.54-6 (I2-I-69)\nFUNCTIONAL’ MODULEPLA3(PIECEWISE LINEARANALYSIS-PHASE3) TRIA2 elements. 3.Calling Sequence:CALL PSTPLI 4.54.8.16 Subroutine Name: PSQPLI I.Entry Point: PSQPLI 2. 3. 4.54.8.17 Subroutine Name: I. 2. 3.Purpose: Togenerate element stressmatrices fortheQUADI andQUAD2 elements. Calling Sequence: PSQPLI PSTRQ2 Entry Point; PSTRQ2 Purpose: Toperform final stress computations forTRMEM andQDMEM elements. Callino S((lllPnr- PAlIDCTD(_O /MTVnC% _I=TRMEMelementNTYPE (2=QDMEMelement 4.54.8.18 Subroutine Name: PSTQ2 I.Entry Point: PSTQ2 2.Purpose: Toperform final stresscomputations fortheTRIAl, TRIA2, QUADI, andQUAD2 elements. 3.Calling Sequence: CALLPSTQ2 (NPTS) 13=TRIAl andTRIA2 elements NPTS _4=QUADI andQUAD2 elements 4.54.9 Design Requiren_nts I.Themodule wasdesigned sothatphaselandphase 2canbeexecuted inseparate overlay segments. 2.Open coreforphase lisdefined at/PLA31X/andforphase 2at/PLA32X/.Opencore requirements forbothphases areminimal. Inphase l,thesingle precision incremental displacement vector inunpacked formmustbeabletobecontained inopencore. Inphase 2, theCSTM andMPTdatablocks, tables intheDITreferenced onMATS1 bulkdatacards, and 4.54-7(12-1-69)\nMODULEFUNCTIONAL DESCRIPTIONS thefirstrecord(andonlyrecordsinceaPLAproblemallowsonlyoneCASECCrecord)of CASECCmustbeabletobecontainedinopencore. 3.Inadditiontothecommonblocksmentionedabove,PLA32uses/PLA32S/, whichis325 wordsinlength, asscratch storage forthemodule’s element routines, and/SOUT/, which is30wordsinlength, asastorage bufferforcomputed element stresses. 4.Onescratch fileisused,andallarithmetic operations areperformed insingle precision. 4.54.10 Diagnostic Messages During phaseI,thefollowing diagnostic messages mayappear. Iftheincremental displace- mentvector isnull,userfatalerror3005willbegiven. Twosystemfatal\"fail-safe\" error messages, 2091and2092,maybeimplemented iftheESTNLinputdatablockwasincorrectly con- structed inPLAIorwasincorrectly updated during theprevious execution ofthePLA3module. During phase2,errormessages 3001,3002or3003mayoccuriftheproper loading factors Pjcannot befoundonthePLFACT bulkdatacardimageintheMPT.IftheECPTDS scratch file isnotintheprescribed format, system fatalmessage 2091willoccur. Iftheminimal corestorage requirements ineither phase1orphase2arenotmet,the usualfatalerror3008willoccur. 4.54-8 (12-I-69)\nFUNCTIONAL DULEPLA4(PIECEWISE LINEARANALYSIS-PHASE4) 4.55 4.55.1 4.55.2FUNCTIONAL DULE PLA4(PIECEWISE LINEAR ANALYSIS -PHASE 4) Entry Point: PLA4 Purpose n£i Togenerate thestiffness matrix fornonlinear elements, [Kgg, andtoupdate the Element Connection andProperties Table forNonlinear Elements, ECPTNL, sothatitcontains up-to-date element stress information. 4.55.3 D_PCallin Sequence PLA4 4.55.4 CSTM MPT ECPTNL GPCT DIT DELTAUGV Notes: 4.55.5 KGGNL ECPTNLI Note:V,N,PLFACT Input DataBlocksCSTM,MPT,ECPTNL,GPCT,DIT,DELTAUGV/KGGNL,ECPTNLI/V,N,PLAC_UNT/V,N,PLSETN_/ $ -Coordinate System Transformation Matrices. -Material Properties Table. -Element Connection andProperties Table forNonlinear Elements. -GridPoint Connection Table. -Direct Input Tables. -Current incremental displacement vector. I.CSTMmaybepurged. However, ifsomegridpoint ofthemodel isnotinbasic coordinates andtheCSTMhasbeenpurged, afatal error willoccur. 2.Afatal error occurs ifeither MPT,ECPTNL, GPCT, DITorDELTAUGV ispurged. Output DataBlocks Stiffness matrix ofnonlinear elements -gset. Element Connection andProperties Table forNonlinear Elements -updated. Neither KGGNL orECPTNLI maybepurged. 4.55-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.55.6 Parameters PLAC_UNT -Input-integer-no default value. PLSETN_ PLFACT 4.55.7 MethodLoopcounter forthePiecewise Linear Analysis (PLA) Rigid Format DMAPloop. Themodule usesthisparameter tofind thecorrect loading factors onthePLFACT bulkdatacardchosen bytheuser, Input-integer-no default value. Setidentification number ofaPLFACT bulkdatacardchosen bytheuserinhisCaseControl Deck. Themodule uses thisparameter tosearch theMPTforthiscard. Output-complex-no default value. Thedifference ofloading factors tobeused during thenextpassofthePLARigid Format DMAP loop. Themodule driver PLA4isashort routine whose onlyfunction istocallsubroutines PLA41 andPLA42 which accomplish phase landphase 2ofthetaskofthemodule respectively. Subroutine PLA41 reads theincremental displacement vector intocoreandappends toeach element entry oftheECPTNL datablock thecomponents oftheincremental displacement vector corresponding tothegridpoints ofeachelement. Thismerged information iswritten onthe scratch data block ECPTS, GIN_filenumber 301. InPLA42, theECPTS datablock isprocessed inafashion similar totheprocessing oftheECPTdatablock inmodule SMAI(seetheModule Functional Description forSMAI, section 4.27). InPLA41, forallelements except theBARelement, only thethree translational components ofthedisplacement vector ateachgridpoint ofanelement areappended tothe ECPTNL element entry. ForaBARelement, allsixcomponents ofthedisplacement vector at each gridpoint areappended. Thelogic oftheprocessing ofthescratch datablock, ECPTS, inPLA42 isvery similar tothatused insubroutine SMAIA (ofSMAI, thestiffness matrix generation module -see theModule Functional Description forSMAI, section 4.27). Thesimilarities arenotenumerated here, butnotable differences arethefollowing. I.Before PREMAT iscalled toreadintoopen coretheMPTdatablock andtables from theDITdatablock referenced onMATSI bulkdatacards, theMPTisreadinsubroutine 4.55-2\nFUNCTIONAL MODULEPLA4(PIECEWISE LINEARANALYSIS-PHASE4) PLA42tocomputey*andyasinEquationsl,2and3insection4.54,andtherealpart oftheoutputDMAPparameterPLFACTissettothevalueof_i+linEquation3insection 4.54.TheimaginarypartofPLFACTissettozero.ThereasonforPLFACTbeingcomplexis thatitisaninputparametertotheDMAPmoduleADDduringthenextpassofthePLA RigidFormatDMAPloop,andADD(seesection4.78)requiresitsparameters tobecomplex. 2.WhenPREMATiscalled,thelastargumentissetnegativetosignalPREMATthatthis isaPLAproblemandhencethatspecialprocessing willberequired. 3.Subsequent tothecallofanelementroutine,theelementtypeandtheupdatedECPT entryarewrittenontotheECPTNLIdatablock. 4.55.8Subroutines PLA4 usesPRETRD, PRETRS, PREMAT, INVERS, INVERD, GF_4ATS, andGMMATD asutility routines. The common block /PLA42E/isthe.me_ans ofco.“municating a)theelement entry oftheECPTS from rL_42 toanelement stiffness matrix generation routine andb)theECPTS element entry withupdated stress information fromtheelement routine backtoPLA42 uponcompletion ofelement matrix generation. Thisfact isnotexplicitly stated inthedescriptions oftheelement routines (e.g., PKR@D) given below. Theelement drivers PKTRM, PKQDM, PKTRII, PKTRI2, PKQADI, andPKQAD2 usea)/PLA4ES/,which is300words inlength, andb)/PLA4UV/,which is25words inlength, ascommunication links with thesubroutines thattheycall. PLA42 will callthedrivers listed above which will use(directly andindirectly) thesubroutines described below insections 4.55.8.12 through 4.55.8.22. 4.55.8.1 Subroutine Name: PLA41 I.Entry Point:PLA41 2.Purpose: Seediscussionabove. 3.Calling Sequence: CALLPLA41 4.55.8.2 Subroutine Name: PLA42 I.Entry Point: PLA42 2.Purpose: Seediscussion above. 4.55-3 (12-l-6g)\nMODULE FUNCTIONAL DESCRIPTIONS 4.55.8.3 4.55.8.4 4.55.8.5 4.55.8.63.Calling Sequence: CALL PLA42 Subroutine Name: PLA4B I.Entry Point: PLA4B 2.Purpose: Toaddadouble precision 6by6element stiffness matrix tothe\"submatrix” corresponding tothecurrent pivot point. This routine performs thesame function as,and ismodeled after, subroutine SMAIB ofmodule SMAI. 3.Calling Sequence: CALL PLA4B (KE,J) KE-Row-stored double precision 6by6matrix tobeadded tothesubmatrix incore -input. J-Thecolumn index oftheKGGNL matrix which corresponds tofirst column oftheKE matrix -integer -input. Subroutine Name: PKR_D I.EntryPoint: PKROD 2.Purpose: Togenerate theelement stiffness matrix foraRODelement andtoupdate theECPTNL element entryforaR_Delement. 3.Calling Sequence: CALLPKR_D Subroutine Name: PKBAR I.EntryPoint: PKBAR 2.Purpose: Togenerate theelement stiffness matrix foraBARelement andtoupdate the ECPTNL element entryforaBARelement. 3.Calling Sequence: CALLPKBAR Subroutine Name: PKTRM I.EntryPoint: PKTRM 2.Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheTRMEM element. 3.Calling Sequence: PKTRM 4.55-4 (12-I-69)\nFUNCTIONAL MODULE PLA4 (PIECEWISE LINEAR ANALYSIS -PleaSE 4) 4.55.8.8 4.55.8.94.55.8.7 Subroutine Name: PKQDM I.EEntry Point: PKQDM 2.Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheQDMEM element. 3.Calling Sequence: CALLPKQDM Subroutine Name: PKTRII I.Entry Point: PKTRII 2.Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheTRIAl element. 3.Calling Sequence: CALLPKTRII Subroutine Name: PKTRI2 I.Entry Point: PKTRI2 2.Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheTRIA2 element. CALLPKTRI2 PKQADI I.Entry Point: PKQAI)I 2.Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheQUADI element. CALLPKQADI PKQAD2 Entry Point: PKQAD2 Purpose: Tocalculate thematerial properties matrix, update theECPTNL entry, and arrange theflowofelement stiffness calculations fortheQUAD2 element. 3.Calling Sequence: CALLPKQAD23.Calling Sequence: 4.55.8.10 Subroutine Name: 3.Calling Sequence: 4.55.8.11 Subroutine Name: I. 2. 4.55-5 (12-I-69)\nMODULEFUNCTIONAL DESCRIPTIONS 4.55.8.12 Subroutine Name:PKTRMI I.EntryPoint:PKTRMI 2.Purpose:TogenerateelementstressmatricesfortheTRMEM,TRIAlandTRIA2elements, andperformsubcomputations forthePKQDMIroutine. 3.CallingSequence: CALLPKTRMI(NTYPE) _0=TRMEM,TRIAlorTRIA2NTYPE Subcomputations forthePKQDMIroutine 4.55.8.13 Subroutine Name:PKQDMI I.EntryPoint:PKQDMI 2.Purpose:TogenerateelementstressmatricesfortheQDMEM,QUADIandQUAD2elements. 3. CALLPKQDMI PKTQICallingSequence: 4.55.8.14 Subroutine Name: I.EntryPoint:PKTQI 2.Purpose:TogenerateelementstressmatricesfortheTRIAl,TRIA2,QUADI,andQUAD2 elements. 3.CallingSequence: CALLPKTQI(NTYPE) l=TRIAl 2=TRIA2 NTYPE 3=QUADI 4=QUAD2 Subroutine Name: PKTRQ2 I.Entry Point: PKTRQ2 2.Purpose: Toperform final stress computations fortheTRMEM andQDMEM elements. 3.Calling Sequence: CALL PKTRQ2 (NTYPE) _l=TRMEM elementNTYPE QDMEM element4.55.8.15 4.55-6 (12-I-69)\n4.55.8.16FUNCTIONAL MODULEPLA4(PIECEWISE LINEARANALYSIS-PHASE4) Subroutine Name:PKTQ2 I.EntryPoint:PKTQ2 2.Purpose:Toperformfinalstresscomputations fortheTRIAl,TRIA2,QUADI,andQUAD2 elements. 3.CallingSequence: CALLPKTQ2(NPTS) 13=TRIAl orTRIA2 elementsNPTS t4QUADI orQUAD2 elements 4.55.8.17 Subroutine Name: PKTRMS I.Entry Point: PKTRMS 2.Purpose: Togenerate theelement stiffness matrix fortheTRMEM element andsub- computations forthePKQDMS routine. 3.Calling Sequence: CALLPKTPJ4S (NTYPE) NTYPEII =TRMEMSub-computations forPKQDMS 4.55.8.18 Subroutine Name: PKQDMS I.Entry Point: PKQDMS 2.Purpose: Togenerate theelement stiffness matrix fortheQDMEM element. 3.Calling Sequence: CALLPKQDMS PKTRQD 4.55.8.19 Subroutine Name: I. 2. QUAD2 elements. 3.CallingSequence:Entry Point: PKTRQD Purpose: Togenerate theelement stiffness matrix fortheTRIAl, TRIA2, QUADI, or CALLPKTRQD (NTYPE) 4.55-7 (12-l-69)\nMODULE FUNCTIONAL DESCRIPTIONS NTYPE 4.55.8.201=TRIAl 2=TRIA2 3=QUADI 4=QUAD2 Subroutine Name: PKTRBS I.Entry Point: PKTRBS 2.Purpose: Togenerate theelement stiffness matrix subcalculations forthePKTRPL and PKQDPL routines. 3.Calling Sequence: CALLPKTRBS (1OPT) l_PTIi=Subcomp utati°ns f°rPKQDPL Subcomputations forPKTRPL 4.55.8.21 Subroutine Name: PKTRPL I.EntryPoint: PKTRPL 2.Purpose: Togenerate theelement stiffness matrix fortheTRIAlandTRIA2elements. 3.Calling Sequence: CALLPKTRPL 4.55.8.22 Subroutine Name: PKQDPL I.Entry Point: PKQDPL 2.Purpose: Togenerate theelement stiffness matrix fortheQUADIandQUAD2elements. 3.Calling Sequence: CALLPKQDPL 4.55.9 Design Requirements Themodule wasdesigned sothatphase1andphase 2canbeexecuted inseparate overlay segments. Opencoreforphase 1isdefined at/PLA41X/ andforphase2at/PLA42X/. Inphase1the single precision incremental displacement vector inunpacked formmustbeabletobecontained in core. Inphase2,theopencorerequirements arethesameasthoseformodule SMAI(seesection 4.27.9.1) except thatonlyfourGIN_buffers arerequired during theprincipal loopofphase2, 4.55-8 (12-I-69)\nFUNCTIONAL MODULE PLA4(PIECEWISE LINEAR ANALYSIS -PHASE4) which processes theECPTS andGPCTinacomplementary manner. OneGIN_buffer isdefined for eachofKGGNL, ECPTNLI, ECPTS andGPCT. Inaddition to/PLA42E/,which islO0words inlength, subroutine PLA42 usesthefollowing common blocks: a)/PLA42D/,which is300double precision words inlength, andisusedasa scratch storage forthemodule’s element routines; b)/PLA425/,which is325single precision words inlength, andisusedasscratch storage forthemodule element routines; andc)/PLA42C/,which isacommunication region forphase 2ofthetaskofthemodule. /PLA42C/isdefined asfollows: C_MM_N/PLA42C/NPvT,GA_4A,GAMMAS,IPASS,ICSTM,NcSTM,IGPCT,NGPcT,IP@INT,NP@INT,6X6K,N6X6K,CSTM,MPT, E_PTS,GPCT,D_T_KGGNL,E_PT,NRW,UTRW,E_R,NE_R,CLSRW,JFt_X,FR_W,LR_W_C,NR_W_C,NL_NKS,NW_RDS(4), 10VRLY(40),LINK(40),N_G_ GAMMA,GAMMAS IPASS NPVT,ICSTM,NCSTM,IGPCT, 1 NGPCT,IP_INT,NP_INT, 16X6K,N6X6K DIT,KGGNLCSTM’MPT’ECTPS’GPCT’ 1 ECPT_Theloadincrement ratios asdefined inEquations 2and3in section 4.54. Number of_necurrent passthrough thePLADMAPloop. Asdefined insection 4.27.9. GINO filenun_ers fortheir corresponding datablocks. GIN_ filenumber forthe£CTPNLI datablock. Asdefined insection 4.27.9.INRW,UTRW ….. 1 I_VRLY(40),LINK(40),N_G - Thevariables a)corresponding toGIN_filenumbers, b)GIN_parameter options (e.g., INRW, _UTRW), andc)NLINKS, I_VRLY, andNW_RDS, andN_GBaresetintheblock data subprogram PLA4BD. Onescratch file isused, andalloperations associated with stiffness matrix calculations areperformed indouble precision. 4.55.10 Diagnostic Messages During phase l,iftheincremental displacement vector isnull, userfatal error 2083will occur. During phase 2,error messages 3001, 3002, or3003mayoccur iftheproper loading factors cannot befound onthePLFACT bulkdata cardimage intheMPT. Other diagnostic messages for phase 2arethesameasthose formodule SMAI (seesection 4.27.10). 4.55-9 (12-I-69)\nFUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) 4.56 FUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) 4.56.1 Entry Point: CASE 4.56.2 Purpose Toremove looping considerations fromlater dynamics modules. 4.56.3 DMAPCalli n9Sequence CASE CASECC, PSDL/CASEXX/C, N,APPROACH/V, N,REPEAT/V, N,L(_(BP $ 4.56.4 CASECC PSDL Note:Input DataBlocks -CaseControl DataTable. -Power Spectral Density List. PSDLisusedonlyifAPPROACH =FREQRESP andRandom Analysis isselected inCASECC. 4.56.5 CASEXX Note: 4.56.6OutpLt DataBlocks -CaseControl datatable fordynamics problems. CASEXX cannot bepurged. Parameters APPROACH Input-BCD-no default. criteria. BCDValue STATICS REIGEN DSO DSI FREQRESP TRANRESP BLKO 3LKI CEIGENDefines theapproach tobeusedforlooping N_NE N_NE N_NE N_NE DIRECT INPUT MATRICES ORTRANSFER FUNCTIONS L_AOS N_NE N_NE DIRECT INPUT MATRICES ORTRANSFER FUNCTIONS 4.56-I\nMODULE FUNCTIONAL DESCRIPTIONS BCDValue PLA REPEAT L_P-Inputandoutput-integer-set equaltozerooutside oftheDMAPloopbythePAP,AM module. -Iifnoadditional loops; +loopcountifloops. -Output-integer-default =-I.-Iifthisisnotalooping problem, 0ifthis isalooping problem. 4.56.7 Method Themethod ofoperation depends upontheinputparameter APPROACH. 4.56.7.1 Transient Response IfAPPROACH =TRANRESP, CASECC isskipped overREPEAT records. IfREPEAT =O,REPEAT isset toI.Onerecord ofCASECC isreadandcopied ontoCASEXX. Anattempt ismadetoreadanother record. Ifnomorerecords exist, REPEAT issetto-I.Also, ifthisisthefirstentrytoCASE (i.e., REPEAT =I),LOOPissetto-I.Ifadditional records exist, REPEAT andLO_ParesettoI. 4.56.7.2 Complex Eigenvalue Analysis IfAPPROACH =CEIGEN, REPEAT records areskipped inCASECC. IfREPEAT =O,REPEAT issetto I.Onerecord ofCASECC isreadandcopied ontoCASEXX. ThenamesoftheDirect InputMatrices andTransfer Functions setsaresaved. Anattempt ismadetoreadanother record. Ifno moreexist, REPEAT issetto-I.Alsoifthisisthefirstentry (i.e., REPEAT =I)LOOPisset to-I.Ifadditional records exist, theirDirect InputMatrices andTransfer Functions setsare compared tothosesaved. Iftheyallagree, thisrecord iscopied ontoCASEXX andtheprocess isrepeated. Iftheydonotagree, REPEAT isincremented byI,LO_PissettoI,andCASEreturns. 4.56.7.3 Frequency Response IfAPPROACH =FREQRESP, themethod usedisthesameasComplex Eigenvalue Analysis except a testisalsomadeforfrequency setselection changes. Inaddition, ifRANDPS cardsareselected, theselected setisreadfromPSDLandtheunique subcase “id’s” referenced arestored. Eachsub- caseidcopied ontoCASEXX iscompared tothislist,andtheentry ismarked asfound. Ifatthe completion ofCASEunmarked entries exist, theroutine terminates withmessage 3033. 4.56-2 (311171)\nFUNCTIONAL MODULE CASE(SIMPLIFY CASECONTROL) 4.56.8 Subroutines Noauxiliary subroutines areusedbyCASE. 4.56.9 Design Requirements Opencoreisdefined at/CASC_R/. C@MM_N/CASC_R/ CASECC Record List CASEXX buffer PSDLbuffer CASECC bufferPresent onlyifRANDOM checks done 3GIN_buffers 4.56.10 Diagnostic Messages Ifacasecontrol record cannot beheldincore, CASEwill issue error message 3008. Message 3033maybeissued byCASEasoutlinedabove. 4.56-3\nFUNCTIGI_AL MODULEMTRXIN(MATRIXINPUT) 4.57FUNCTIONAL MODULEMTRXIN(MATRIXINPUT) 4.57.1Entry Point: MTRXIN 4.57.2 Purpose MTRXIN hastwopurposes: (l)toprovide acapability fordirect inputmatrices asmayoccur in control systems inthedynamics Rigid Formats and, (2)toprovide theDMAPuseracapability ofconverting matrices input onDMIGbulkdatacards toNASTRAN matrix format. 4.57.3 DMAPCallin_ Sequences I.Dynamics Rigid Formats: MTRXIN cASEcc,MATP_L,EQDYN’SILD’TFP_BL/K2PP,M2PP,B2PP/v,N,LUSETD/V,N,NBMATl/V,N,N_MAT2/ V,N,N(_IAT3 $ 2.uMAPApproach: MTRXIN, ,MATP_L,EQEXIN,SIL,/NAMEl,NAME2,NAME3/V,N,LUSET/v,N’N9MATl/V’N,N9MAT2/V,N,N_MAT3 4.57.4 CASECC MATP_gL EQDYN SILD TFP_gL EQEXIN SIL Notes : I. 2.Input DataBlocks -CaseControl. -Datablock containing matrices input onDMIGbulkdatacards. -Equivalence between external numbers andinternal numbers, dynamics. -Scalar Index List-dynamics. -Transfer Function Pool. -Equivalence between external numbers andinternal numbers. -Scalar Index List. IfCASECC ispurged, thesecond purpose isassumed byMTRXIN. EQDYN, EQEXIN, SILandSILDmaynotbepurged. 4.57-I"},"title":"Programmer's Manual P53"},"/docs/programmers/programmers_manual_054/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 4.57.5 K2PP M2PP - B2PP - NAMEI_ NAME2 - NAME3) Note:Output DataBlocks -Direct inputstiffness matrix -pset. Direct inputmassmatrix -pset. Direct inputdamping matrix -pset. Thesamenamesthatappear or_theDMIGcards, i.e.,theDMIGmatrix called NAME1willbeoutput ondatablockNAME1. Anyoutput datablockmaybepurged. 4.57.6 Parameters LUSET LUSETD NOMATiInput-integer-no default. andSIL. Input-integer-no default. andSILD. Output-integer-no default. -Iotherwise.Degrees offreedom inthegset.UsedwithEQEXIN Degrees offreedom inthepset.UsedwithEQDYN +Iiftheithoutput datablockisgenerated, 4.57.7 DMAPExample Assume thebulkdatacontain twoDMIGmatrices namedM1andM2which reference gridand/or scalar points only. Thefollowing setofDMAPinstructions willgenerate thesetwomatrices in NASTRAN matrix format, multiply themtogether andprinttheresult. BEGIN GPI SAVE MTRXIN, SAVE C_ND C_ND MPYAD MATPRN LABEL ENDGE_MI,GE_M2/GPL,EQEXlN,GPDT,CSTM,BGPDT,SIL/V,N,LUSET/C,N,O/C,N,O LUSET$ ,MATP_L,EQEXIN,SIL,/MI,M2,/V,N,LUSET/V,N,N_MI/V,N,N_M2/C,N,O $ NOMI,N_M2 $ EXIT,NOMI $ EXIT,N_M2 $ MI,M2,/PR_DUCT/C,N,O/C,N,I/C,N,I/C,N,I $ PRODUCT ….//$ EXIT$ 4.57-2\nFUNCTIONAL MODULE MTRXIN (MATRIX INPUT) 4.57.8 Method Thefirst logical record intheCase Control data block isread into core, andthenames of therequested DMIG matrices arefetched. IftheCase Control data block ispurged, FNAME is called todetermine thenames oftheDMIG matrices from thenames oftheoutput data blocks. If theCase Control record wasread, thetransfer function setselection isfetched. Iftransfer matrices arerequested, theTFP_L data block isopened, andthefile ispositioned tothe requested set. Each transfer function matrix forwhich acorresponding direct input matrix exists iswritten onascratch file. Ifnodirect input matrix exists corresponding toatransfer func- tion matrix, thetransfer function matrix iswritten directly ontheappropriate output data block. Thetransfer function matrices arewritten inNASTRAN matrix format bydecoding therowand column numbers andcalling BLDPK. Upon completion ofthewriting ofthetransfer function matrices (ifany), thesecond record ofEqLXIN orEQDYN isread into core. Thesecond word ofeach entry isconverted into ascalar index number bydividing bylO. TheMATPO_L data block isopened. Thefollowing processing occurs: I.Theheader information fortheDMIG matrix isread. Ifanend-of-file isencountered, step (5)isexecuted. Ifthematrix isnotrequested, theremainder oftherecord is skipped andstep (1)isrepeated. Otherwise, step (2)isexecuted. 2.Each term inthematrix isread. Thegrid identification andcomponent code are converted toascalar index value byperforming abinary search inEQEXIN orEQDYN in core. Thescalar index forms arowposition ofthematrix. Therowandcolumn number (packed inoneword) andthevalue fortheterm arestored incore. Ifcore storage is exceeded, theterms arewritten onascratch file. 3.When allterms have been read, converted andstored, thematrix issorted byS_RT. Thematrix isnowwritten inNASTRAN format byBLDPK. 4.Ifatransfer function istobeadded totheDMIG matrix, theADDroutine iscalled toaccomplish thematrix addition. 5.Atest ismade todetermine ifallrequested matrices have been processed. Ifnot, anerror message isqueued, andPEXIT iscalled. Otherwise, themodule makes anormal exit. 4.57-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.57.9 Design Requirements 4.57.9.1 Allocation ofCoreStorage Storage isrequired toholdtheEQDYNorEQEXINtable(2wordsperpointintheproblem) plus fiwGINBbuffers. Complete spilllogicisprovided forprocessing theDMIGmatrices. 4.57.9.2 Environment Themodule MTRXINconsists ofonesubroutine, MTRXlN. Callsaremadetotheutility routine S_RTandmatrix operation ADD.Opencoreisdefined by/MTRXXX/. Sevenscratch filesareused. 4.57.10 D,ia_nostic Messages Thefollowing messages maybeissued byMTRXIN: 2065, 2070, 2074. 4.57-4\nFUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) 4.58 FUNCTIONAL FDDULE GKAD (GENERAL KASSEMBLER DIRECT) 4.58.1 Entry Point: GKAD 4.58.2 Purpose Toassemble thedynamic stiffness, damping andmassmatrices. 4.58.3 4APCalling Sequence GKAD USETD,GM,G,KAA,BAA,MAA,K4AA,K2PP,M2PP,B2PP/KDD,BDD,MDD,GMD,G_D,K2DD,M2DD,B2DD/ V,N,TYPE/V,N,APP/V,N,FORM/V,Y,G/V,Y,W3/V,Y,W4/V,N,NOK2PP/V,N,NOM2PP/V,N,NOB2PP/ V,N,MPcFl/v,N,SINGLE/V,N,0MIT/V,N,N0UE/V,N,N0K4GG/V,N,N0BGG/v,N,KDEKA/V,Y,M_DAcC 4.58.4 USETD GM GO KAA BAA MAA K4AA K2PP M2PP B2PP Notes:Input DataBlocks -Displacement setdefinitions table dynamics. Multipoint constraint transformation matrix -mset. Structural matrix partitioning transformation matrix. -Partition ofstiffness matrix -aset. -Partition of -Partition of -Partition of -Direct input -Direct input -Direct input I. 2. 3. 4. 5. 6. 7. 8. 9.damping matrix -aset. massmatrix -aset. structural damping matrix -aset. stiffness matrix -pset. mass matrix -pset. damping matrix -pset. USETD cannot bepurged. GMcannot bepurged ifMPCFI _O. G_cannot bepurged ifOMIT•O. KAAcannot bepurged ifKDEKA •O. BAAcannot bepurged ifNOBGG _O. MAAmaybepurged. K4AAcannot bep_rged ifN@K4GG _O. K2PPcannot bepurged ifNOK2PP _O. M2PP cannot bepurged ifNOM2PP _O. 4.58-I\n4.58.5 KDD BDD MDD GMD G_D K2DD M2DD B2DD 4.58.6Notes: TYPE APP F_RM W3MODULE FUNCTIONAL DESCRIPTIONS I0.B2PPcannot bepurged ifN_B2PP mO. Output DataBlocks W4-Dynamic stiffness matrix -dset. -Dynamic damping matrix -dset. -Dynamic massmatrix -dset. Multipoint constraint transformation matrix -dynamics. -Omitted coordinate transformation matrix -dynamics. Direct inputstiffness matrix -dset. Direct inputmassmatrix -dset. Direct inputdamping matrix -dset. I.GMDcannot bepurged ifMPCFI_O. 2.G_Dcannot bepurged if_MIT_O. 3.K2DDcannot bepurged ifN_K2PP \u003eO. 4.M2DDcannot bepurged ifNOM2PP _O. 5.B2DDcannot bepurged ifN_B2PP _O. Parameters Input-BCD-no default. IfTYPE=TRANSIENT thetransient equations areused; otherwise thefrequency response equations areuseo, Input-BCD-no default. IfAPP=FORCEthePset=dset;otherwise p’sare reduced tod’sbyremoving m’s,s’s,ando’s. -Input-BCD-no default. IfF_RH=M_DAL, KDDandBDDarenotcomputed. MDDis notcomputed unless M_DACC _O. Input-real-default =O.O.Gisthecoefficient ofK4DDifTYPE#TPJ_NSIENT. G/W3 iscoefficient ofKIDDifTYPE=TRANSIENT. -Input-real-default =0.0.IfTYPE=IRANSIENT G/W3isthecoefficient ofKIDD. IfW3=0.0KIDDisnotused. -Input-real-default =0.0,1.O/W4 isthecoefficient ofK4DDifTYPE:TPJ_NSIENT. IfW4=0.0K4DDisnotused. 4.58-2\nN_K2PP N_M2PP N_B2PP MPCFI SINGLE _MIT - N_UE N_K4GG N_BGG KDEKA M_DACC - 4.58.7 MethodFUNCTIONAL MODULE GKAD(GENERAL KASSEMBLER DIRECT) Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. constraints. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-default =-1. onlyifF_RM=M_DAL)N_K2PP m0indicates presence ofK2PP. N_M2PP _0indicates presenceofM2PP. N_B2PP _0indicates presence ofB2PP. MPCFI m0indicates presence ofGM. SINGLE _0indicates presence ofsingle-point MIT_0indicates presence ofG. N@UEm0indicates presence ofextra points. N_K4GG m0indicates presence ofK4AA. N_BGGZ 0indicates presence ofBAA. KDEKA _Oindicates presence ofMAAandKAA. M_DACC 0requests computation ofMDD(meaningful Ifextra points arepresent(N_UE_O) andmultipoint constraints oromittedcoordinates arepresent (MPCFI\u003eO or_MIT\u003eO), then and SubroutiI_e GKADIA performs these tasks.GM\u003eGMD, (1) G)G_D. (2) Ifdirect input matrices arepresent andm’s,s’soro’sarepresent, thedirect input D2matrices arereduced fromthepsettothedset. Let[pp]beadirectinput matrix, D2:[K_p], M2 B2 [pp] [pp]or[pp] I.Ifm_sarepresent, 4.5B-3\nMODULE FUNCTIONAL DESCRIPTIONS 2,2D2 nnInm (3) [pp]:\u003e “-} Bmm-- mn, (Theecoordinates areincluded withthencoordinates). Thencompute: [D2nn]=[D2nn]+[D2nm][Gd]+[Gmd]T[D’mn]+[Gd]T[D2n][Gmd] 2.Ifs’sarepresent, I’°L]ffI E0_=\u003eL°TT_j ¢ 3.whereonly[D_f]issaved. Theecoordinates areincluded withthefcoordinates. Ifo’sarepresent, firstpartition [D_f] [°]=\u003e[::°oo]_(6) then: Steps 1through 3aredoneforK2PP,M2PPandB2PP, usingsubroutines GKADIC andGKADID. 4.58-4\nFUNCTIONAL MODULE GKAD(GENEPJ_L KASSEMBLER DIRECT) IfF(RM=I_DAL ar,dF_DACC \u003cO,GKADisdone. thedsetbyadding zeros atextra points.Ifnot,theasetmatrices areexpanded to Let[Daa]beanasetmatrix. Then, ! a, =\u003e[D d] I Theabove stepisdone forKAA,BAJ,MN_,andK4AAandisperformed insubroutine GKADIB. Compute KDD,BDDandMDD. I.ForFrequency Response orComplex Eigenvalue Analysis (TYPE fTRAN),(8) [Sdd] =[B_d]+[8_d], (I0) [“dd]=[M_d]+[”_]” (11) 2.ForTransient Analysis (TYPE =TRAN), [Kdd]:[K_d]+EKed], (12) [Mdd] :[M_d] M2+[dd]. (14) IfW3orW4iszero, thecorresponding matrices areignored. 4.58-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.58.8 Subroutines GKAD usesmatrix utility routines SSG2C, CALCV, MERGE, UPART, MPART andELIM. forthese routines canbefound insection 3.Descriptions 4.58.8.1 Subroutine Name: GKADIA I. 2. 3.Entry Point: GKADIA Purpose: Toexpand GMorG_todsizematrices: [Gm.o]—-\u003e[G] Calling Sequence: CALLGKADIA (USETD,GO,GOD,SCRI,UE,UA,UNE) USETD GINQfilenumber ofUSETD-integer -input. GQ GINOFilenumber ofG_-integer -input. GQD -GIN_filenumberofGQD-integer -input. SCRI -GIN@filenumber ofscratch file-integer -input. UE -Pointer toUEbitinUSETDword-integer -input. UA -Pointer toUAbitinUSETDword-integer -input. UNE -Pointer toUNEbitinUSETDword-integer -input.(15) 4.58.8.2 Subroutine Name: GKADIB I.EntryPoint: GKADIB 2.Purpose: Toexpand asetmatrices todsetsize. 3.Calling Sequence: CALLGKADIB (USETD,KAA,MAA,BAA,K4AA,KIDD,MIDD,BIDD,K41DD,UA, UE,UD,SCRI) USETD KAA MAA BAA K4AA-GIN_file number ofUSETD -integer -input. -GIN_ filenumber ofKAA-integer -input. -GIN_ filenumber ofMAA-integer -input. -GIN_filenumber ofBAA-integer -input. -GIN_file number efK4AA-integer -input. 4.58-6\nFUNCTIONAL MODULE GKAD (GENERAL KASSEMBLER DIRECT) KIDD MIDD BIDD K41DD SCRI UA UE UD-GIN_filenumber ofKIDD-integer -input. -GIN_filenumber ofMIDD-integer -input. -GIN_file number ofBIDD-integer -input. -GIN_filenumber ofK41DD -integer -input. -GIN_filenumber ofscratch file-integer -input. -Pointer toUAbitinUSETD word -integer -input. -Pointer toUEbitinUSETD word -integer -input. -Pointer toUDbitinUSETD word -integer -input. 4.58.8.3 Subroutine Name: GKADIC I.Entry Point: GKADIC 2.Purpose: Toinitialize GKADID. 3.Calling Sequence: CALL GKADIC (GMD,G_D,SCRI,SCR2,SCR3,SCR4,SCR5,SCR6,USETD) GMD,G_D,USETD areGIN_filenumbers oftheir respective datablocks -integer -input. SCRI…..SCR6 areGIN_filenumbers ofsixscratch files -integer -input. 4.58.8.4 Subroutine Name: GKADID I.Entry Point: GKADID 2.Purpose: Toreduce “2PP” matrices to\"2DD\" matrices. 3.Calling Sequence: CALLGKADID (K2PP,K2DD) K2PP -GIN_filenumber ofinput matrix -integer -input. K2DD -GIN_filenumber ofreduced matrix -integer -input. 4.58.9 Design Requirements Sixscratch files arenecessary. OpencoreforGKADIA andGKADIB isdefined at/GKADAI/. Opencore forGKADIC andGKADID isdefined at/GKAOCI/. 4.58.10 Diagnostic _ssa_es None 4.58-7\n4.59 4.59.1FUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) FUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) Entry Point: CEAD 4.59.2 Purpose Tosolvetheequation ([M]p2+[B]p+[K]){u}={0} fortheeigenvalues pandtheassociated eigenvectors {u}where [M],[B]and[K]aremass, damping andstiffness matrices respectively. 4.59.3DMAPCallin9 Sequence CEAD KDD,BDD,MOD,EED,CASECC/PHID,CLAMA,gCEIGS/V,N,NFgUND $ 4.59.4 Input DataBlocks KDD BDD MDD EED CASECC Notes: I. 2. 3. 4.59.5 PHID CLAMA 9CEIGS Note:Dynamic stiffness matrix -dset. -Dynamic damping matrix -dset. -Dynamic massmatrix -dset. -Eigenvalue Extraction Data. -CaseControl DataTable. EEDmust bepresent. CASECC must bepresent. Atleast oneofKDD,BDDandMDDmustbepresent. Output DataBlocks -Complex eigenvectors inthedset. -Complex eigenvalue table. -Complex eigenvalue summary table. Nooutput datablock canbepurged.(1) 4.5g-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.59.6 Parameters NFOUND -Output-integer-no default. NFOUND indicates thenumber ofeigenvalues found. Ifnonewerefound, NF_UND issetto-I. 4.59.7 Method TheComplex Eigenvalue Analysis Module calculates theeigenvalues andeigenvectors for ageneral system whichmayhavecomplex termsinthemass,damping, andstiffness matrices. Theeigenvectors arescaled according totheuser-requested normalization scheme. Modalmasses arenotcalculated sincetheywill, ingeneral, becomplex, andtheirvalue israther dubious. Theformoftheproblem solved bytheComplex Eigenvalue Analysis Module isgiven inEquation I. Theeigenvalues pandtheeigenvectors {u}arealways treated ascomplex. Thesedata arerelated totheuddisplacements ifadirect formulation isusedorarerelated tothe uhdisplacements ifamodalformulation isused. Themethod tobeusedandthenecessary data areselected bycalling foroneIDnumber intheEEDdatablock. AsetofEEDdatawhich defines either theDeterminant Method ortheInverse PowerMethod mustbeused. Subroutine ClNVPR orCDETMiscalled tosolvetheeigenvalue problem (seesubroutine descriptions below formethod details). Theeigenvalues andassociated vectors aresorted bythemagnitude ofthe imaginary partcftheeigenvalue withallpositives listed aheadofallnegatives. (Subroutine CEADIA). 4.59.8 Subroutines Thesubroutines used byCEAD canbedivided into four groups: I)those used byCEAD; 2)those use(! fortheInverse Power Method; 3)those used bytheDeterminant Method; and, 4) general utility routines. Thedescriptions oftheutility routines canbefound insection 3. CEAD Inverse Power Determinant General CEADIA ClNVPR ClNFBS CDETM CDC_MP ClNVPI CMTIMU CDETM2 ADD ClNVP2 CXTRNY CSUMM PREL_C ClNVP3 CSUB CSQRT CN_RM RTH CDTFBS CN_RMI CDIFBS CDETM3 CDIVID CSQRTX 4.59-2 (8/I/72)\n4.59.8.1 I. 2. 3. LAMAI PHIl LAMA_ PHI_ NF@UND 4.59.8.2 I. 2.FUNCTIONAL MODULE CEAD (COMPLEXEIGENVALUE ANALYSIS -DISPLACEMENT) Subroutine Name: CEADIA Entry Point: CEADIA Purpose: Tosorttheeigenvectors andeigenvalues. Calling Sequence: CALLCEADIA (LA_I,PHII,LAMA_,PHI_,NFOUND) -GIN9filenumber ofunsorted eigenvalues -integer -input. -GIN_file number ofunsorted eigenvectors -integer -input. -GIN9file number ofdatablock CLAF_ -integer -input. -GINOfile number ofdatablock PHID-integer -output. -Number ofeigenvalues found -integer -input. Subroutine Name: CINVPR EntryPoint: CINVPR Purpose: CINVPR isthemaindriver fortheComplexInverse FowerMethod of eigenvalue extraction. 3.Calling Sequence: CALLClNVPR (EED,METHgD,NFgUND) C_MM_N /CINVPX/K(7),M(7),B(7),LAM(7),PHI(7),EIGSUFI,SCRFIL(II),N_REG,EPS,REG(7,10) Cg_MgN /CINVX/Z(1) K,M,B -Input matrix control blocks forthestiffness, mass, anddamping LAM,PHI EIGSUM SCRFIL(II) NgREG EPS REG(7,10) z(1)matrices [K], [M],and[B]. -Matrix control blocks fortheoutput eigenvalue andeigenvector files. -Theoutput eigenvalue summary file. -Eleven scratch files available toInverse Power. -Number ofregions input toCINVPR. -Convergence criterion. Storage space foruptolOregion parameters. Open coreforClNVPR. 4.59-3\nMODULE FUNCTIONAL DESCRIPTIONS EED METHOD - NF_UND - 4.Method:GIN_filenumber forthisinput datablock. IDofanEIGCcardfortheInverse Power Method. Number ofeigenvalues found. Complex Inverse Power was, ingeneral, designecl identically toRealInverse Power. Thenotable exceptions areintheiteration equation andtheorthogonalization with respect topreviously extracted eigenvectors. Withthese points inmind, the basic flowcanbetaker_ fromREADinsection 4.48. Theoretical development isgiven in theTheoretical Manual. 4.59.8.3 Subroutine Name: CINVPI I.Entry Point: ClNVPI 2.Purpose: Togenerate calling sequences toADDtoform [A]:[K]+X[B]+X2[M]. 3.Calling Sequence: CALL CINVP! CCMMeN /CINVPX/K(7),M(7),B(7),DUM(15),A C_MM_N/CINVIX/Z(1) C_MM_N/ClNVXX/ LAMBDA K,M,B -Matrix control blocks fortheinputmatrices. A GIN_filenumber fortheoutput matrix. Z(1) Areaofopencoreavailable toADD. LAMBDA Complex doubleprecision scalarmultiplier. Subroutine Name: ClNVP2 EntryPoint: CINVP2 Purpose: Toinitialize andcallCDC_MP forsubroutine ClNVPR.4.59.8.4 I. 2.(2) 4.59-4\nFUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) 3.CallingSequence: CIviLCINVP2 C_4(N/CINVPX/DUM(36),A,XX,L,U,SCRI,SCR2,SCR3,LL,UU C_N /CINVXX/DUI(4)SWITCH C_MM_N /ClNV2X/Z(1) A L,U SCRI,SCR2,SCR3 LL,UU SWITCH z(1)GIN_file nu_er fortheinput matrix. GIN filenun_er forthelower andupper triangular factors output fromCDC_MP. -Three scratch files usedbyCDC_MP. -GIN_filenunbers foralternate storage ofLandU. __0,store factors onLandU. !l,store factors onLLandUU. -Area ofopencoreusedbyCDC_MP. 4.59-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.59.8.5 Subroutine Name:CINVP3 I.EntryPoint: ClNVP3 2.Purpose: Tosolveforacomplex eigenvalue andeigenvector usingtheInverse PowerMethod. 3.Calling Sequence: CALLCINVP3 C_MM_N/CINVPX/K(7),M(I),B(I),LLM(I),PHI(I),XXX,SCRFIL(II) C_MMON/CINV3X/Z(1) Seesection 4.59.8.2 abovefordetails on/CINVPX/. Z(1)-Areaofopencoreavailable inCINVP3. 4.Method: Thelogicflowandthemathematical equations areessentially identical toINVP3,withthefollowing exceptions. Theeigenvalues andeigenvectors arefound corresponding tothematrixequation (X2[M]+X[B]+[K])[¢]:[0] wheretheiteration equation isgivenby (X_[M]+Xo[B]+[K]){Wn}:-([B]+Xo[M]) {Un_I}-[M]{Vn-I}_ with 1 {Un}=_{Wn},\n1 {Tn}=ko{Un}+_{Un-l} ’ {un}:{Ur}-_mi{¢i},i {Vn}={_n}-__ixi{_i}’ and {¢i}T[Xi[M]{_n}+[M]{v-n]+[B]{gn}] {¢i}T(2Xi[M]+[B]) {@i} 4.59-6(3) (4) (5) (6) (7) (8) (9) where _i= Cn= _i=FUNCTIONAL MODULE CEAD (COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) Previously extracted right-hand vector, Previouslyextracted left-hand vector, Largest element (inmagnitude) of{Wn},and Previously extracted eigenvalue. Theabove equations replace Equations 19through 22insection 4.48. Thecalculation ofthe 4.59.8.6remaining equations remains thesameexcept fortheuseofcomplex arithmetic. Theleft eigenvector isobtainedby_ecomposing Equation 3with _o-_iandusing CDIFBS tomake the appropriate substitution using thefactors fromCDCOMP. 5.Design Requirements: CINVPS requires fourteen complex double precision vectors in core plusfourGINO buffers. Subroutine Name: CNORM I.Entry Point: CN_RM 2.Purpose: Tonormalize successive iterated vectors such thatthemaximum element is equal tounity, andtoreturn thenormalizing divisor. 3.Calling Sequence: CALLCNORM (X,DIV) X -Input vector tobenormalized. DIV -Divisor which wasusedtonormalize thevector corresponding tothe argument X. Subroutine Name: CN_I Entry Point: CNOP_I Purpose: Tonormalize acomplex vector suchthatthelargest magnitude ofanelement is4.59.8.7 I. 2. equal toone. 3.Calling Sequence: CALLCNORM (X,N) X-Vector tobenormalized. N-Length ofthevector (complex terms). 4.59-7\nMODULEFUNCTIONAL DESCRIPTIONS 4.59.8.8Subroutine Name:CINFBS I.EntryFoint:CINFBS 2.Purpose:Toperformtheforward-backward substitution necessarytosolvean 4.59.8.9iterationoftheInversePowerMethod. 3.CallingSequence: CALLCINFBS(X,Y,BUF) C_I_ON/CINFBX/L(7),U(7) L,U- X- y- BUF 4.Method: CINFBS isastripped downversion ofGFBS. andonlycomplex doubleprecision arithmetic isused. Subroutine Name:CDIFBS I.EntryPoint: CDIFBS 2.Matrix control blocks forthefactors output fromCDCOMP. Complex double precision input vector. Complex double precision solution vector. GIN_buffer. Bothvectors reside incore, Purpose: Toperform theforward-backward substitution necessary tosolve forthe lefteigenvector. 3.Calling Sequence: CALLCDIFBS (X,BUF) C_MM@N /CINVPX/DUM(41),UPRTRI,XXX,L_WTRI UPRTRI,L_WTRI -Files containing theupper andlower triangular factors output fromCDC_MP. ×-Theoutput complex double precision lefteigenvector. BUF- GINObuffer usedbyCDIFBS. 4.Method: CDIFBS actually solves thesystem ofequations [A]T{x}={y}, (lO) where [A]hasbeen decomposed into[A]=[L][U]. Tosolve thetranspose problem wehave that 4.59-8\nsothatFUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) [A]T=([L][U])T=[U]T[L]T (ll) [U]tILlT{x}={y}. (12) CDIFBS isamodified formofGFBSwhich doestheforward passon[U]anCthebackward passon[L]. Allarithmetic operations arecomplex double precision. 4.59.8.10 Subroutine Name: CMTIMU I.Entry Point: CMTIMU 2.Purpose: Topre-multiply avector {y}byamatrix toobtain avector {x}. 3.Calling Sequence: CALLCMTIMU (Y,X,FILE,BUF) C_MM_N /CINVPX/DUM(I):r_(7) FILE -IfFILE=O,form {x}=[M]{y}. FILE#O,form{x}=[A]{y},where [A]isthematrix onFILE. X,Y -Complex double precision vectors. BUF -GIN_buffer. 4.59.8.11 Subroutine Name: CXTRNY I.Entry Point: CXTRNY 2.Purpose: Toformtheinner product oftwocomplex vectors, {x}and{y} a:{x}T{_}, (13) where{y–}denotes avectorallofwhosecomponents arethecomplex conjugates of{y}. 3.Calling Sequence: CALLCXTRNY (X,Y,A) C_M_N /ClNVPX/XX,N N -Length ofthevectors. X,Y Complex double precision vectors. A -Complex double precision value oftheinner product of{x}and{y}. 4.59-9 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.59.8.12 Subroutine Name: CSUB I.EntryPoint: CSUB 2.Purpose: Toevaluate thevector equation {z}:a{x}-b{y}, (14) N X,Y,Z A,B 4.59.8.13 I. 2. 3.where{x},{y},aandbmaybecomplex. 3.Calling Sequence: CALLCSUB(X,Y,Z,A,B) COMM_N /ClNVPX/XXX,N Lengthofthevectors {x}and{y}. Complex double precision vectors. Complex double precision scalarmultipliers. Subroutine Name:ORTH_ EntryPoint: RTH Purpose: Toorthogonalize avectorwithrespect toallpreviously extracted vectors. Calling Sequence: CALLORTHO(U,VDXl,X2_X3,X4,X5,NZ,BUFI,BUF2,BUF3,BUF4) COMMON /CINVPX/K(7),M(I),B(7),LAMBDA(I),PNI(I),XXX,SCRFIL(IO) C_MM_N/CINVXX/DUM(19),NR_TS Seesection 4.59.8.2 for/CINVPX/ details. NR_@TS -Number ofeigenvectors already extracted. U,V -Input-current vectors -Output -orthogonalized vectors. Xl….,X5-Storage spaceforfivecomplex doubleprecision vectors. NZ IBUF4 4.Method:Thenumberofwordsofcoreavailable toORTHO. FourGIN_buffers. ORTHOsolves theequations {un}:{un}- 1_iXi{¢‘i}’(15) 4.59-10"},"title":"Programmer's Manual P54"},"/docs/programmers/programmers_manual_055/":{"data":{"":"FUNCTIONAL MODULE CEAD (COMPLEX EIGENVALUE ANALYSIS -DISPLACEMENT) {Vn} ={Vn}-Z_iki{_i}‘i(16) where {¢i}T[xi[M] {un}+[M]{vn}+[B]{Un}] _i= {¢i}T[2 ki[M]+[B]]{¢i} and }: {¢i}= ki=Previously found lefteigenvectors. Previously found right eigenvectors. Previously found eigenvalues. Notethatthedemoninator ofequation 17isconstant with respect tothecurrent iterate unandvn. Thusitiscomputed onceforeach vector andsaved ontheleftvector scratch fileinplace oftheleftvector.(17) 4.59-II (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS r4.59.8.14 Subroutine Name:CDETM I.EntryPoint: CDETM 2.Purpose: Tosolvethecomplex eigenvalue problem bytheDeterminant Method. 3.Calling Sequence: CALLCDETM(METH_D,EED,M,B,K,LAMA,PHID,CEIGS,NF_UND,SCRI,SCR2, SCR3,SCR4,SCR5,SCR6,SCR7,SCR8) METHOD -IDofanEIGCcardfortheDeterminant Method -integer -input. EED,OCEIGS, I-GIN_filenumbers oftheirrespective datablocks -integer -input. M,B,K LA -GINOfilenumberoftemporary eigenvalue storage file-integer -input. PHID -GINOfilenumberoftemporary eigenvector storage file-integer -input. NFOUND -Number ofeigenvalues found-integer -output. SCRI,SCR2, } ….SCR8 -GIN_filenumbers of8scratch files -integer -input. 4.Method: Theoverall flowandtheoretical considerations oftheDeterminant Method areexplained insection 4.88. Tworefinements aremade inCDETM. Thefirst isthe handling ofmultiple search regions, which allows theusertocontrol thedistribution of starting points inthecomplex plane. SeetheEIGCbulkdatacarddescription insection 2oftheUser’s Manual forfurther details. Thesecond istheuseoftheEIGPcardtcdefine poles which willbeswept fromthedeterminant asiftheywere previously accepted eigenvalues. Thisallows theusertoprevent convergence toknown oralready extracted eigenvalues. 5.Design Requirements: CDETM requires twocomplex double precision dsetvectors plus oneGIN_buffer incore. 4.59.8.15 Subroutine Name: CDETM2 I.Entry Point: CDETM2 2.Purpose: Toarrange 3starting points inorder ofthemagnitude ofthedeterminant. 3.Calling Sequence: CALL CDETM2(P,D,IP,PR,PI,DR,DI,IPS) P-Three starting point values -input-complex double precision. 4.59-12\nFUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) D IP PR PI DR DI IPS 4.59.8.16 I.-Scaled determinants atP-input-complex double precision. -Scale factors forD-input -integer. -Realparts ofthereordered starting points -output-double precision. -Imaginary parts ofthereordered starting points -output-double precision. -Realparts ofthereordered determinants -output-double precision. -I_aginary parts ofthereordered detern_inants -output-double precision. -Scale factors ofthereordered determinants -output -integer. Subroutine Name: CSUMM Entry Point: CSUV_I . 3. Thearguments aredefinedinthefollowing equation: (DI,D2) xlOIDl+(D3,D4) xlOID2= where allDi’saredouble precision. 4.59.8.17 Subroutine Name: CSQRT I. 2. 3. Thearguments aredefined inthefollowing equation: (D3,D4) xI0ID2=_/(DI,D2)Purpose: Toaddtwoscaled complex numbers together. Calling Sequence: CALLCSUMM (DI,D2,IDI,D3,D4,ID2,D5,D6,ID3) (D5,D6) xlOID3, Entry Point: CSQRT Purpose: Tocompute thepositive principal square rootofascaled complex number. Calling Sequence: CALL CSQRT (DI,D2,1DI,D3,D4,1D2) xlOIDl where allDi’saredouble precision.(18) (19) 4.59-13\nMODULEFUNCTIONAL DESCRIPTIONS 4.59.8.18 I. 2. 3. FSubroutine Name:CDTFBS EV BUFFER(1) FU NR_WEntry Point: CDTFBS Purpose: Tosolve fortheeigenvector given thedecomposed impedance matrix. Calling Sequence: CALLCDTFBS (F,EV,BUFFER(1),FU,NROW) -Applied complex loadvector -input-complex double precision. -Eigenvector -output- complex double precision. -GIN_buffer. Matrix control block for[U]-integer -input. Order ofproblem -integer -input. 4.59.8.19 Subroutine Name: CDETM3 I.Entry Point: CDETM3 2.Purpose: Torescale ascaled complex number. 3.Calling Sequence: CALLCDETM3(DI,D2,1DI) LetDl,D2,IDlbetheinput values ofDl,D2,IDl.Onreturn fromCDETM3 (DI,D2) xlOIDI:(D-i-,) xlO’_‘T, and l.O_I(DI,D2)I where allDi’saredouble precision. 4.59.8.20 Subroutine Name: CDIVID I. 3.lO.0, Entry Point: CDIVID Purpose: Todivide acomplex vector byacomplex number. Calling Sequence: CALLCDIVID (DIV,V,VI,NV) where Visacomplex D.P.vector oflength NVtobedivided byDIVandtheanswer put inVl. 4.59-14 (8/I/72)(20) (21)\nFUNCTIONAL MODULECEAD(COMPLEXEIGENVALUE ANALYSIS-DISPLACEMENT) 4.59.9Design Requirements Open coreisdefined at/CEADIX/toprocess EED. Opencoreisdefined at/CEADAI/foruse byCEADIA. 4.59-15 (811/72)\nFUNCTIONAL MODULE VDR (VECTOR DATA RECOVERY) 4.60 FUNCTIONAL MODULE VDR (VECTOR DATA RECOVERY) 4.60.1 Entry Point: VDR 4.60.2 Purpose VDR formats data blocks for input to the Output File Processor (gFP) and XY plot (XYPLBT) modules to provide a capability for output of vectors in the solution set. 4.60.3 DMAP Calling Sequence VDR CASECC,EQDYN ,USETD,UDV aPP ,XYCDB ,PNL/@UDVl 90PNLl/ TRANREsP) FREQRESP /C 9N (DI’ET) MDAL /V,N,S@RTZ/V aN,BUTPUT/V ,N,SDR2/V,N9FMflDE 6 CEIGN 4.60.4 Input Data Blocks CASECC - Case Control Data Table. EQDYN - Equivalence between external and internal number - Dynamics. USETD - Displacement set definitions table - Dynamics. UDV - Partition of Displacement Vector. PP - Dynamic Load Vector. XYCDB - XY Control Data Block. PNL - Non-Linear Load Vector. Notes :\nCASECC, EQDYN and USETD may not be purged. PP may be purged only if UDV is purged. PNL and XYCDB may be purged. 4.60.5 Output Data Blocks gUDV1 - Output Displacement Requests - Solution set. BPNLl - Output Non-Linear Load Requests - Solution set. MODULE FUNCTIONAL DESCRIPTIONS Note: Output datablocks maybepurged. 4.60.6 Parameters Thefirst parameter indicates aRigid Format andmustbeoneofthethree names shown above. Thesecond parameter indicates adirect ormodal formulation andmustbeoneofthe twonames shown above. S_RT2 - _UTPUT - SDR2 FM_DEOutput-integer-no default. Output-integer-no default. -lotherwise. Output-integer-no default. +lifanyrequests foroutput inthephysical set arefound inCASECC orXYCDB, -lotherwise. Input-integer-no default. Ifamodal formulation, FM_DE =mode number ofthe first mode. FM_DE isnotusedinadirect formulation. 4.60.7 Method+IifanyS_RT2 output isrequested, -Iotherwise. +lifanyoutput inthesolution setisrequested, 4.60.7.1 General VDRisthemaincontrol program forthemodule. VDRA iscalled toanalyze theCase Control (CASECC) andXYCDB datablocks. Ifanyrequests forsolution setoutput arefound, VDRBiscalled toassemble theOUDVl output datablock forprocessing bythe_FP. Ifthe problem isatransient response problem, VDRBiscalled asecond time toprocess anyrequests fornon-linear loadoutput. 4.60.7.2 Analysis oftheCaseControl andXYCDB DataBlocks VDRA attempts toopentheXYCDB datablock. Ifitispurged, areturn isgiven toVDR. Otherwise, theheader record andfirst data record ofXYCDB areskipped, anddataapplying to allsubcases arereadfromthesecond datarecord. Ifnosuchdataexist, adummy master iscreated. Otherwise, themaster dataarereduced toalistofunique pairs. Ifonlymaster dataexist, flags aresetappropriately. Foreachrecord intheCaseControl datablock thefollowing processing occurs: 4.60-2\nFUNCTIONAL MODULEVDR(VECTORDATARECOVERY) I.Therecordisreadintocore.IfnoXYCDBsubcasecorresponds totheCaseControl subcase,pointersaresettothemasterdata.Otherwise, themasterdataandappropriate XYCDBsubcased_taaremergedandreducedtouniquepairs. 2.ForeachrequestforsolutionsetoutputinXYCDB,thecorresponding requestinCase Controlisexamined. IfnorequestispresentinCaseControl,theXYCDBrequestis reducedtoasetinCaseControlfor_t,andarequestforthesetisturnedoninCase Control.IftheCaseControlsetis\"ALL\",nofurtheractionistaken.IftheCase Controlrequestisaset,thesetismergedwiththeXYCDBset,andtherequest alteredtoreflectthenewset(unlessallpointsintheXYCDBsetwerealreadyinthe CaseControlset).Aflagissetifanynewrequestsareformed. 3.WhenallrequestsforthecurrentCaseControlrecordhavebeenanalyzed,the record(asmodified)iswrittenonascratchfile. 4.WhenallCaseControlrecordshavebeenread,theGIN_filenamefortheCaseControl datablockisswitchedtothescratchfile(unlessnomodifications weremadetoCase Control). 4.60.7.3Preparation ofSolutionSetOutput Theoperations ofVDRBaredependentontheRigidFormatbeingexecuted. VDRBoperates inallsixofthedynamicsRigidFormats.Theinitialoperations inVDRBproceedasfollows: I.Foradirectsolution,oramodalsolutionwithextrapoints,thesecondrecordofEQDYN isreadintocore. USETD isreadintocore. 2.Iftheproblem isadirect solution, eachentry inEQDYN isprocessed. Thescalar index value (the2ndwordofeachentry) isreplaced bythescalar index value inthe solution setplusacodeindicating which components ofthepoint areinthesolution set. 3.Iftheproblem isamodal solution withextra points, thescalar index ofeachextra point inEQDYN isreplaced with ascalar index inthesolution set. Thescalar indices of allother points arereplaced withzero. 4.Iftheproblem isacomplex eigenvalue problem, alistofmode nu_ers andcomplex eigenvalues isreadintocorefromtheCLAPLA datablock. 4.60-3\nMODULE FUNCTIONAL DESCRIPTIONS 5.Iftheproblem isatransient response problem, alistoftimesisreadintocore fromthePPdatablock. 6.Iftheproblem isafrequency response problem, alistoffrequencies isreadinto corefromthePPdatablock. 7.Theheader record ontheinputfileisskipped, andvarious parameters are initialized fortheoverall processing. Arecord ontheCaseControl datablockisread. Theoutput request isexamined. If theoutput isdefined intermsofaset,pointers tothesetdefinition arecomputed. The vector isunpacked incore(unless thevector isalready incoreinthecaseofvelocities and accelerations forfrequency problems). Information isassembled towrite theidentification record ontheoutput datablock asfollows. I.Forcomplex eigenvalues, themodenumber andeigenvalue arepicked upfromthelist incore. 2.Forfrequency response, thefrequency ispicked upfromthelistincore. A comparison withthe_FREQselection inCaseControl ismade. Ifthecurrent frequency isnotmarked foroutput, theremainder ofthecalculations forthecurrent vector are skipped. 3.Foratransient problem, thetimeispicked up. Theidentification record iswritten. Entries arewritten inthedatarecord according to therequest. Themodified EQDYNtableincoreisusedtopickuppoints inthevector tobe output. Conversion tomagnitude andphase ismadeifrequested. Whenallpoints inthecurrent request havebeenprocessed, postprocessing occurs depending ontheproblem typeasfollows: I.Forcomplex eigenvalues, apointer isupdated tothenextmodenumber andeigenvalue. Ifalleigenvectors havenotbeenprocessed, thestepsabove arerepeated. Otherwise, terminal processing isinitiated. 4.60-4\nFUNCTIONAL MODULE VDR(VECTORDATARECOVERY) 2.Forfrequency response, ifthevector justprocessed wasadisplacementvector, thecorresponding velocity vector isdetermined bydifferentiating withrespect totime. {v}=iw{u}. (1) Similarly, ifthevectorjustprocessedwasavelocityvector, thecorresponding acceleration vector isformed bydifferentiating with respect totime: {a}=iw{v}. (2) Ifallvectors havenotbeenprocessed,thestepsabove arerepeated. Otherwise, terminal processing isinitiated. 3.Fortransient response, pointers areupdated sothatthevectors willbeprocessed in theordera)displacement,b)velocity, andc)acceleration. Ifallvectors havenotbeen processed, thesteps above arerepeated. Otherwise, terminal processing isinitiated. Theterminal processing consists ofclosing allfiles, writing atrailer onthe output file andexiting. 4.60.8 Subroutines 4.60.8.1 SubroutineName: VDR I.Entry Point:VDR 2.Purpose: Maincontrol program forthemodule. 3.Calling Sequence: CALLVOR 4.60.8.2 Subroutine Name: VDRA I.Entry Point: VDRA 2.Purpose: Toanalyze theoutput requests intheCaseControl andXYCDB datablocks. 3.Ca;ling Sequence: CALLVDRA 4.60-5\nMODULEFUNCTIONAL DESCRIPTIONS 4.60.8.3Subroutine Name:VDRB _UTFL IREQI.Entry Point: VDRB 2.Purpose: Tcprocess requests forsolution setoutput andassemble theoutput datablock. 3.Calling Sequence: CALLVDRB (INFIL,OUTFL,IREQ) INFIL -GINOfilenameofthedatablock containing vectors tobeoutput inthe solution set. -GINOfilenameofthedatablock where solution setoutput will bewritten. Wordposition intheCaseControl record where solution setoutput request is defined. 4.60.9 Design Requirements 4.60.9.1 Allocation ofCoreStorage Themaximum storage requirements forthemodule areinVDRB. storage isasfollows: l ILIST ICC+I IVEC BUF3 BUF2 BUFIAgeneral picture ofcore C@MMON/VDRCOR/Z(1) EQDYNTable Listofeigenvalues, frequencies ortimes CaseControl record Unpacked Vector Buffer forinput file Buffer foroutput file Buffer forCase Control2words perentry, oneentry foreach point intheproblem. l,2or3words perentry, oneentry for eacheigenvalue, frequency ortime. Oneword foreachdegree offreedom inthe solution set. (twowords ifcomplex). 4.60-6\nFUNCTIONAL MODULEVDR(VECTORDATARECOVERY) 4.60.9.2Environment TheBlock Dataprogram VDRBD initializes /VDRC_M/with GIN_filenames, datadefining position ofparameters inaCaseControl record, datadefinirg rigid formats andproblem types, andmiscellaneous data. Itmustbeincorewhen VDRisexecuted. Themodule VDRisdesigned tobeexecuted asoneoverlay segment. Open coreisdefined by/VDRC_R/.Twoscratch files areused. 4.60-7\nFUNCTIONAL MODULEFRRD(FREQUENCYRESPONSE -DISPLACEMENTAPPROACH) 4.61 FUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) 4.61.1 Entry Point:FRRD 4.61.2 Tosolve thematrix equation [-[M] atagiven setoffrequencies i A.3 DMAP_a,,,-_ng Sequence .Ul FRRD+i[B]+[K]] [X]=[P(_i)] andloads P(which maybefunctions of_i). 4.61.4 CASECC -CaseControl Datatable. USETD -Displacement setdefinitionstable dynamics. DLT -Dynamic Loads Table. FRL -Frequency Response List. GMD -Multipoint constraint transformation matrix -dynamics. GgD -Omitted coordinate transformation matrix -dynamics. KHH -Modal stiffness matrix -hset. BHH -Modal damping matrix -hset. MHH -Modal massmatrix -hset. PHIDH -Transformation matrix fromdsettomodal coordinates. DIT -Direct Input Tables. Notes: I.CASECC cannot bepurged. 2.USETD cannot bepurged. 3.DLTcannot bepurged. 4.FRLcannot bepurged. 5.GMDcannot bepurged ifMPCFI _O. 6.G_Dcannot bepurgedif_MIT_O.(i) ASEc,USETD,DLT,FRL,GMD,G_D,H,BHH’MHH,PHIDH,D_T/UHv,PS,PD,PP/V,N,APP/V,N,F/ V,N,LUSETDIV,N,MPCFI/V,N,SINGLE/V,N,_MIT/V,N,N_NCUP/V,N,FRQSET/C,Y,DEC_M_PT:I $ InputDataBlocks 4.61-I (8/I/72)\n4.61.5MODULE FUNCTIONAL DESCRIPTIONS 7.PHIDHcannot bepurged ifF_RM=MODAL. 8.DITcannot bepurged ifaloadusestables. Output DataBlocks UHV- PS PD pp Notes: 4.61.6Displacement vectors. Partition ofloadvector matrix giving loadsinsset. Loadvectors -dset. Loadvectors -pset. I.UHV,PD,andPPcannot bepurged. 2.PScannot bepurged ifSINGLE \u003eO. Parameters APP FORM LUSETD MPCFI SINGLE OMIT N_NCUP FRQSET DECOMOPT - 4.61.7 MethodInput-BCD-no default. Input-BCD-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. FORM=MODAL Output-integer-no default. listfromCASECC. Input-integer-default =I. I. 2. 3. 4.APPshould besetequaltoDISP. FORM=MODALimplies amodalsolution should beused. LUSETD indicates length ofpset. MPCFI_0implies multipoint constraints present. SINGLE _0implies single-point constraints present. OMIT_0implies omitted coordinates present. NONCUP =-Iimplies noncoupled solution if FRQSET isthesetidoftheselected frequency Selects typeofarithmetic forequation solution. Indicates double precision withpivoting. Indicates double precision without pivoting. Notusedatpresent. Indicates sinQle precision without pivotinQ. 4.61.7.1 Overview oftheMethod TheFrequency Response module forthedisplacement approach assembles afrequency-dependent loadvector andsolves forthesteady-state, frequency response, displacement vectors. Various 4.61-2 (8/I/72)\nFUNCTIONAL MODULE FRRD(FREQUENCY RESPONSE -DISPLACEMENT APPROACH) loadsetsaredefined asfunctions offrequency. Combinations ofthesesetsareusedwiththe various specified frequencies. Loadvectors foreachfrequency areformed andreduced toloads ontheproperdegree offreedom. Thesolutions forbothdirect formulation andcoupled modal formulation areidentical except thatdifferent matrices areused.Thesolution involves a triangular decomposition andbacksubstitution usingthetypeofarithmetic selected bythe parameter DEC_M_PT foreachfrequency. analytic equations. 4.61.7.2 I.Thesolutions fortheuncoupled modalformulation are Logical Phases Theloadvectors foreachdesired frequency areassembled fromtheDLTdatablock. 4.61.7.3TheDL_AD section oftheDLTtells which loadsetstouseandwhat scale factors touse incombining theloadsets. Thedataforeach loadsetaregiven intheRL_AD section oftheDLT. Thiswork isdone insubroutine FRRDIA. 2.Thetotal loadvectors arepartitioned andmanipulated toproduce loadvectors onthesolution coordinates. Thiswork isdoneinsubroutine FRRDIB. 3.Thematrix equation fordisplacements isnowsolved foreach loadcombination andeach frequency. Theoverall dynamic matrix isformed. Thematrix isdecomposed, andthedisplacements areformed bybacksubstitution using thevarious loads. Ifthe formulation isanuncoupled modal system, thedisplacements arecalculated directly. Thiswork isdonebysubroutines FRRDIC andFRRDID orFRRDIF. 4.Thesolution vectors arethenresorted intoload-frequency order. Thiswork is donebysubroutine FRRDIE. Algorithms I.Assembly ofLoadVectors: Thefrequency setidisextracted fromCASECC. Thisfrequency setisplaced in corefrom theFRLandconverted fromradians tofrequency. These frequencies areoutput intotheheader ofPPforlater output identification. TheloadidisreadfromCASECC, found inDLT,andatable isconstructed giving asimple idandascale factor foreach component. TheDLTdataarereadforeachsimple id,andalistoftherequired tables is extracted. Coreisallocated toholdasmanyloadvectors aspossible uptothenumber of 4.61-3 {811182)\nFUNCTIONAL MODULEFRRD(FREQUENCY RESPONSE-DISPLACEMENT APPROACH) frequencies. Iftablesarepresent,theyareinitialized andevaluatedforallfrequencies incore.TheDLTisread,andtwotypesofloadsareconstructed: l)RL_ADI P(f):A[C(f)+iD(f)]ei(O-2_fT), (2) 4.61-3a(8/I/72)\n2)RL_AD2MODULEFUNCTIONAL DESCRIPTIONS P(f):AB(f)ei(@(f)+O-2_fT) (3) whereA,B,C,D,O,zand@areuserinputconstantsortables. Ifallfrequencies cannotbeevaluatedatonce,additional passesthroughtheDLTaremade untilallareevaluated. Ifadditional subcasesexistinCASECC,theabovestepsare repeatedforeachload. 2.Manipulation ofLoadVectors: Thevectorsproducedintheprevioussectionsarerelatedtothepset.Theyare reducedbythefollowingstepsusingdatablocksUSETD,GMDandGOD. IfMPCFI\u003eO: 3.IfSINGLE \u003eO:{Pne}Pne_ (4) {Pp}–\"\u003el m-’I , ={P-ne}+[Gmd]T{Pm}. (5) {Ps}isoutput ondatablock PS. If_MIT\u003eO: {Pd}isoutput onPD. IfFORM=M@DAL:{Pd}:{‘pd}+[Gdo]T{Po}, {Ph} :[@dhIT{Pd}. Solution Phase: Foradirect formulation theequation tobesolved is: [2[Mdd]+i[Bdd]+[Kdd]] {Ud} =(7) (8) (9) {Pd()} . (IO) 4.61-4\nFUNCTIONAL DULEFRRD(FREQUENCY RESPONSE-DISPLACEMENT APPROACH) Foracoupledmodalformulation theequationtobesolvedis: [2[Mhh]+i[Bhh]+[Khh]]{Uh}={pn()}. (II) ThelefthandmatrixisgeneratedbytwocallstoADDanddecomposed. Thenormalmatrix decomposition checksarerelaxedinthesesolutions. Itisexpectedthatthematrices willnotpassthetriangular deco_osition atcertainfrequencies. Thesolutionwill proceed,andonlyawarningwillbeissued.Theloadsatthegivenfrequencyarecollected fromtheloadfileandfedtoGFBSforaforwardbackwardsubstitution solution. Ifthe decomposition failed,azerovectorwillresult. Foroneuncoupledmodalformulation theequationstobesolvedare; {Pi(_) }: . (12) {_i} _mim2 +ibim+ki With zerodampingtheuncoupled modal formulation mayproduce division bysmall numbers. Thisfact isnoted andthesolutionproceeds, 4.Order Phase: Except fortheuncoupled modal approach itmaybenecessarytoreorder thesolutions from afrequency /loadsorttoaload/frequency sort. 4.61.8 Subroutines Utility subroutines PRETAB,TAB,CALCV,SSG2B,SSG2A,SSG2C,CDC_MP,SCDCMP,CSPSDC,CXFBS and GFBS areused. Seesubroutine descriptions, Section 3fordetails. 4.61.8.1 Subroutine Name: FRRDIA I.Entry Point: FRRDIA 2.Purpose: Toassemble theuserselected loads. 3.Calling Sequence: CALLFRRDIA (DLT,FRL,CASECC,DIT,PP,LUSETD,NFREQ,NL_AD,FRQSET) DLT,FRL,CASECC,DIT,PP areGIN_filenu_ers oftheir respective datablocks -integer - input. LUSETD -Length ofpset-integer -input. NFREQ -Nu_er offrequencies inselected frequency set-integer -output. 4.61-5 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS NL_AD-Numberofloads(recordsinCASECC)selected-integer-output. FRQSET-Setidofselectedfrequencyset-integer-output. 4.61.8.2Subroutine Name:FRRDIB I.EntryPoint:FRRDIB 2.Purpose:Toreduceloadsfromtheptothed(orh)set. 3.CallingSequence: CALLFRRDIB(pp,USETD,GMD,G_D,MULTI,SINGLE,_MIT,M_DAL,Pt_IDH, pD,PS,PH,SCRI,SCR2,SCR3,SCR4) PP,USETD,GMD,G_D,PHIDH,PD,PS,PH areGIN_filenumbersoftheirrespective data blocks-integer-input. MULTI- SINGLE- _MIT- MODAL- SCRI….,. SCR4MULTI\u003e0impliesm’sarepresent-integer-input. SINGLE\u003e0impliess’sarepresent-integer-input. OMIT_0implieso’sarepresent-integer-input. M_DAL=MODAimpliesamodalformulation -BCD-input. GIN_filenumbersof4scratchfiles-integer-input. 4.61.8.3Subroutine Name:FRRDIC I.EntryPoint:FRRDIC 2.Purpose:Toformanddecompose\"left\"handsideofthefrequencyequation. 3.CallingSequence: CALLFRRDIC(FRL,FRQSET,MDD,BDD,KDD,I,ULL,LLL,SCRI,SCR2,SCR3, SCR4,IG_D) FRL,MDD,BDD,KDD,ULL,LLL,SCRI-4 areGIPI_filenumbersoftheirrespective datablocks- integer-input. FRQSET-Setidofselectedfrequencyset-integer-output. I-Currentfrequencycounter-integer-input. IG_D-IGO_D=limpliesasingularmatrix-integer-output. 4.61.8.4Subroutine Name:FRRDID I.EntryPoint:FRRDID 2.Purpose:Tosolvefordisplacements givendecomposition factorsandloads. 4.61-6\nFUNCTIONAL MODULEFRRD (FREQUENCY RESPONSE -DISPLACEMENT APPROACH) 3.Calling Sequence: CALLFRRDID (PD,ULL,LLL,SCRI,SCR2,UDVP,I,NL_AD,IG_D,NFREQ) PD,ULL,LLL,UDVP,SCRI,SCR2 areGIN_filenumbers oftheir respective datablocks - integer -input. I NL_AD IG_D NFREQ-Current frequency count -integer -input. -Number ofloads-integer -input. -IG_D =limplies asingularmatrix -integer -input. -Total number offrequencies -integer -input. 4.61.8.5 Subroutine Name: FRRDIE I. 2. 3. UDVP UDV NLgAD IEntry Point: FRRD!E Purpose: Toreorder displacements ifnecessary. Calling Sequence: CALLFRRDIE (UDVP,UDV,NL_AD,I) -GIN_filenumber ofdisplacements sorted byfrequency/load -integer -input. -GINg filenumber ofdisplacements sorted byload/frequency -integer -input. -Number ofloads -integer -input. -Number offrequencies solved. 4.61.8.6 Subroutine Name: FRRDIF I.Entry Point: FRRDIF 2.Purpose: Tosolve theuncoupled modal equations. 3.Calling Sequence: CALLFRRDIF (MHH,BHH,KHH,FRL,FRQSET,NLCAD,NFREQ,PH,UHV) MHH,BHH,KHH,FRL,PH,UHV areGIN¢filenumbers oftheir respective datablocks. - integer -input. FRQSET -Selected frequency setid-integer -input. NFREQ -Number cffrequencies inFRQSET -integer -input. NL_AD Number ofloads (Subcases incurrent execution) -integer -input. 4.61.9 Design Requirements Eight scratch files areusedbyFRRD. Open coreat/FRRDAI/isusedasfollows: 4.61-7"},"title":"Programmer's Manual P55"},"/docs/programmers/programmers_manual_056/":{"data":{"":"MODULEFUNCTIONAL DESCRIPTIONS COMM_N/FRRDAI/ FrequencyList ID1 Scalel ID2 Scale2 TableID’s 1 } F(f) 1 Buffer NFREQ ID,scaleforallmembers ofaDL_ADcard NTABL 2LUSETD 2LUSETD NTABLAsmany loads aswillfit uptoallfrequencies. Opencoreat/FRRDBI/,/FRRDCI/,/FRRDDI/areusedbythematrix routines• Opencoreat/FRRDFI/ isusedasfollows: C(MM_N/FRRD F1/ Frequency List 1 UHV PHNFREQ hsetsize hsetsize hsetsize 2GIN Buffers 4.61.10 Diagnostic Messages Module FRRDmayissue thefollowing diagnostic messages: 3005, 3008and3045. 4.61-8\n4.62FUNCTIONAL MODULE SDR3 (STRESSDATARECOVERY -PHASE 3-SORT1 TOSORT2 PROCESSOR) FUNCTIONAL MODULE SDR3 (STRESS DATARECOVERY -PHASE 3-SORTI toS_RT2 PROCESSOR) 4.62.1 Entry Point: SDR3 4.62.2 Purpose otranspose (perform SORT2) datablocks containing dataprepared foroutput intheformof ELEMENT-ID-SETS orP_INT-ID-SETS versus TIME-STEP orFREQUENCY-STEP todataprepared foroutput intheformofTIME-STEP-SETS orFREQUENCY-STEP-SETS versus ELEMENT-ID orP_INT-ID. 4.62.2.1 Example ofS_RTI andSORT2 Output Below isatable of_FPprinted output ofSDR3input (S_RTI) andoutput (S_RT2) datablocks. SDR3Input DataBlock Printed (SBRTI) TIME =l.O DIS PLACEMENTS POINT-ID Tl T2 T3 Rl R2 R3 l 0.0 4.53 0.0 0.0 0.0 0.0 2 0.0 5.12 0.0 0.0 0.0 0.0 TIME =2.0 DISPLACE MENTS POINT-ID Tl T2 T3 Rl R2 R3 l 0.0 4.83 0.0 0.0 0.0 0.0 2 0.0 5.53 0.0 0.0 0.0 0.0 TIME=3.0 DISPLACEMENTS POINT-ID Tl T2 T3 Rl R2 R3 l 0.0 6.84 0.0 0.0 0.0 0.0 2 0.0 7.96 0.0 0.0 0.0 0.0 SDR3Output DataBlock Printed (SORT2) POI-ID =l DISPLACEMENTS TIME Tl T2 T3 Rl R2 R3 l.O 0.0 4.53 0.0 0.0 0.0 0.0 2.0 0.0 4.83 0.0 0.0 0.0 0.0 3.0 0.0 6.84 0.0 O.O 0.0 O.O POINT-ID =2 DISPLACEMENTS TIME Tl T2 T3 Rl R2 R3 l.O 0.0 5.12 0.0 0.0 0.0 0.0 2.0 0.0 5.53 O.O 0.0 0.0 0.0 3.0 0.0 7.96 0.0 0.0 0.0 0.0 4.62-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.62.3 DMAPCalling Sequence SDR3 INI,IN2,1N3,1N4,1N5,1N6/@UTI,_UT2,_UT3,_UT4,_UT5,_UT6/ $ 4.62.4 InputDataBlocks Onetosixdatablocks inanyorderdesired. Inputdatablocks toSDR3which arepurged areignored. 4.62.5 Output DataBlocks Onetosixdatablocks incorresponding ordertothatoftheinputdatablocks. IfSBRT2 istobeperformed, theremustbeanavailable output datablockforthecorresponding inoutdata block(Non-Fatal Errorifthiscondition isnotmet). 4.62.6 Parameters None 4.62.7 Method 4.62.7.1 InputandOutput DataBlockRecord Arrangements Bothtileinputandoutput datablocks ofSDR3havethefollowing format: 4.62-2\nFUNCTIONAL MODULE SDR3 (STRESS DATA RECOVERY -PHASE 3-SJ_RTI TOSI_RT2 PROCESSOR) Group l Group MHeader ID DATA ID DATA ID DATA ID DATA ID DATAIRecord 0 Record l IRecord 2 IRecord 3 ;}Record 4 IRecord N-l IRecord N(aneven number) 4.62-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.62.7.2 Description ofaGroup I.Aninput(SORT1) datablockGroupandanoutput (S_RT2) datablockGrouparegiven inthe following figures: Theoretical InputGroup (S_RTI) OneInputGroup\u003cID DataType1 DATA Entries 1thruKi ID DataTypeJ DATA Entries 1thru ID DataType1 DATA Entries 1thruKz ID DataTypeJ DATA Entries 1thruRecord pairfor DataTypeI. Record pairfor DataTypeJ. Record pairfor DataTypeI. Record pairfor DataTypeJ.BaseSetfor ValueI. BaseSetfor\nValue I. 4,62-4\nFUNCTIONAL MODULE SDR3 (STRESS DATARECOVERY -PHASE 3-S_RTITOSORT2 PROCESSOR) TheoreticalOutput Group (SORT2) OneOutput GroupIDRecord DataType l DATARecord Entries IthruI IDRecord DataTypel DATARecord Entries lthruI IDRecord DataTypeJ DATARecord Entries 1thruI IDRecord DataType J DATARecord Entries lthruIRecord pairfor P_INT orELEMENT l Record pairfor POINT orELEMENT KI Record pairfor POINT orELEMENT Ij Record pairfor POINT orELEMENT KjS_RT2 Collection ofDataType I. S_RT2 Collection ofDataTypeJ. 4.62-5\nMODULE FUNCTIONAL DESCRIPTIONS 2.Intheabovefigures eachGroupisindependent ofanyotherGroupsofarasSDR3need beconcerned. 3.AGroupisdefined asacollection ofsuccessive records belonging tothesamesubcase. 4.AnID-Record isofafixedsizeequalto146words. 5.ADATA-Record contains multiple Entries witheachEntrybeingofalength inwords specified within theimmediately preceding ID-Record. 6.I=Thenumber ofValues (FREQUENCIES orTIMES) present intheGroup. 7.ABaseSetisasub-Group oftheGroupcontaining datarecords foroneparticular Value. 8.J=Thenumber ofdifferent DataTypes(DISPLACEMENTS, VELOCITIES, etc.)within aBaseSet. 9.Kj:Thenumber ofEntries forDataTypei. I0.Respective records ofanytwoBaseSetswithin aninputdatablockGroupareofthe samesize. II.Respective Entries within respective DATARecords ofallBaseSetsofaninputdata blockGroupbeginwiththesameELEMENT-ID orP_INT-ID. 12.Mostinputdatablocks willcontain onlyoneGrouphaving butoneDataType. Thereis normally morethanoneBaseSetwithin anyGroup. 13.Apictoral representation ofaS(_RTItoSORT2process isgivenonthenextpageusing thefollowing data: Values =3timesteps (I.0,2.0,3.0) I-Displacements (3Entries/Value -points 5,8and9) DataTypes:I Velocities (2Entries/Value -points 3and4)Accelerations (2Entries/Value -points 1and4) 4.62-6\nFUNCTIONAL MODULE SDR3(STRESS DATARECOVERY -PHASE 3-SgRTI TOSCRT2 PROCESSOR) Base Set Base Set Base SetInput DataBlock S_RTI Group t:1.0S_RTI toS_RT2 ProcessOutput DataBlock S_RT2 Group DISPLACEMENTS ID Pt.5 Record Pt9Entr DATA Recordt=l.0 Entr Pt. t=!.O Pt.9 t=2.0 Entr Entr t=3.0 Pt.3 t=2.0 _tr t=2.0 _.r t=3.O t:3.0 t=3.0 Pt. ntr,Pt.4 Pt.l Entr Pt.4 4.62-7\nMODULE FUNCTIONAL DESCRIPTIONS 4.62.7.3 Physical DataProcessing (S_RTI toS_RT2) Allemphasis isplaced ontheGroup, andthusinperforming S@RT2 aGroup pointer always points tothefirst record ofthecurrent Group being processed. EachGroup isprocessed andcompleted successively until allGroups havebeenprocessed. ForeachGroup aloopofJpasses isexecuted. During thejthpassofthisloop, thejthData Type (note 4.62.7.2) present oftheBaseSetswillbecollected andtransposed. Thetranspose consists ofdetermining howmanyEntries arepresent forthecurrent DataType andthendividing theavailable coreintothatmanyRegions. TheEntries ofeachDATA record forthejthDataType aredistributed inEntry order, oneeach, totheRegions. AtthetimeeachEntry isdistributed toaRegion, theEntry’s first word (P_INT-ID orELEMENT-ID) isreplaced bytheValue (FREQUENCY orTIME) intheID-Record associated with theDATA-Record fromwhich theEntry hascome. Atthe conclusion ofeachpassofthisloop, output tothedatablock canproceed. ForeachRegion an ID-Record iswritten. ThisID-Record isacopyoftheinput datablock ID-Record inthefirst BaseSetforthejthDataType, having hadtheValue (FREQUENCY orTIME) replaced with theP_INT- IDorELEMENT-ID oftherespective Region. Thefilled portion oftheRegion isthenoutput asthe DATA-Record. 4.62.7.4 Spill Logic Ifduring theEntry distribution theRegions canholdnomore Entries, spill toscratch files isperformed. required. LayerIALayer ofrecords iswritten, onerecord foreachRegion, eachtimespill is Scratch l Region l Region N+l Region K-lScratch 2 Region2 Region KScratch N RegionN Region K-2 4.62-8\nFUNCTIONAL MODULE SDR3 (STRESS DATARECOVERY -PHASE 3-S_RTI TOS_RT2 PROCESSOR) Attheoutput stage, ifspill tothescratch files hasoccurred, theRegions inthescratch files areoutput before thein-core Regions. 4.62.8 Subroutines 4.62.8.1 Subroutine Name: SDR3A I. 2. 3. 4.62.9Entry Point: SDR3A Purpose: Toperform allSORT2 operations when called bythedriver routine SDR3. Calling Sequence: CALL SDR3A (OFPFIL) BFPFIL -Anarray ofsixwords, oneforeach input datablock, each ofwhich isset tozerobefore theCALLandthenreset bySDR3A withatraceback positive integer intheevent anerror foritsrespective datablock occurred. Design Requirements I.Thedesign requires thatthelargest DATA-Record fitincore. Ifaproblem isoutputting somanyELEMENT-ID orP_INT-ID Entries foraparticular FREQUENCY orTIME thatcoreis insufficient, thenmoresubcases inconjunction with output request setsarerecommended. 2.C_MM@NISDR3ZZIZ(1) This common block defines opencorefortheSDR3module. 3.SDR3will openallitsscratch files (8). 4.62.10 Diagnostic Messaqes Allerrors within SDR3areconsidered non-fatal-User Warning typeerrors. Anyerror resulting intermination oftheS)RT2 process results inthesetting ofanSDR3traceback number, anappropriate message, andacalltothe@FP(Output FileProcessor) which inturnwilloutput thedatablock inS_RTI format. IfBFPisunable tooutput thedatablock itinturnwill call theTABPRT routine, andthedatablock will beprinted. 4.62-9 (8/I/72)\n4.63 4.63.1 4.63.2FUNCTIONAL MODULEXYTRAN(XY-OUTPUTDATATRANSLATOR) FUNCTIONAL MODULEXYTRAN(XY-OUTPUTDATATRANSLATOR) EntrXPoint: XYTRAN Purpose Toreadthefirst record oftheXYCDB datablock (prepared bysubroutine IFPIXY of Executive module IFPI); tosetxy-output parameters from theserial specifications ofthis record; tointerpret theusercurve requests; tolocate intheXYTRAN input datablocks (2 thru6)thedatasets containing therequested curve data; toprepare summary andxy-coordinate data fortherequested curves andoutput themtothesystem output printer andpunch units; andto prepare xy-coordinate dataandoutput themtotheXYTRAN output datablock fordirect plotting by theXYPL_T module ofthose curve requests specified tobeplotted. 4.63.3 DMAPCallin_ Sequences 4.63.3.1 Frequency Response -Direct Formulation. (Rigid Format 8) I.Vector datarecovery output. XYTRAN XYCDB,UDVC2 ,,,,/XYPLTFA/C,N,FREQ/C,N,DSET/V,N,PFILE/V,N,CARDN $ 2.Stress datarecovery output. XYTR_ XYCDB,_PPC2,QPC2,UPVC2,ESC2,EFC2/XYPLTF/C,N,FREQ/C,N,PSET/v,N,PFILE/V,N,CARDN $ 3.Random response output. XYTRA,’ XYCDB,PSDF,AUT,,,/XYPLTR/C,N,RAND/C,N,PSET/V,N,PFILE/V,N,CARDN $ 4.63.3.2 Transient Response -Direct Formulation. (Rigid Format g) I.Vector datarecovery output. XYTRAN XYCDB,_UDV2,PNL2,,,/XYPLTTA/C,N,TRAN/C,N,DSET/V,N,PFILE/V,N,CARDN $ 2.Stress datarecovery output. XYTRAN XYCDB,OPP2,_QP2,@UPV2,_ES2,EF2/XYPLTT/C,N,TRAN/C,N,PSET/V,N,PFILE/V,N,CARDN $ 4.63.3.3 I. XYTRANFrequency Response -Modal Formulation. (Rigid Format II) Vector data recovery output. XYCDB,UHVC2,,,,/XYPLTFA/C,N,FREQ/C,N,HSET/V,N,PFILE/V,N,CARDN $ 4.63-I\nMODULE FUNCTIONAL DESCRIPTIONS 2.Stress data recovery output. XYTRAN XYCDB,OPPC2,_QPC2,0UPVC2,_ESC2,0EFC2/XYPLTF/C,N,FREQ/C,N,PSET/V,N,PFILE/ V,N,CARDNO $ 3.Random response output. XYTRAN XYCDB,PSDF,AUT@,,,/XYPLTR/C,N,RAND/C,N,PSET/V,N,PFILE/V,N,CARDNO $ 4.63.3.4 Transient Response -Modal Formulation. (Rigid Format 12) I.Vector data recovery output. XYTRAN XYCDB,OUHV2,_PNL2,,,/XYPLTTA/C,N,TRAN/C,N,HSET/V,N,PFILE/V,N,CARDNO $ 2.Stress data recovery output. XYTRAN XYCDB,@PP2,@QP2,_UPV2,0ES2,EF2/XYPLTT/C,N,TRAN/C,N,PSET/V,N,PFILE/V,N,CARDN 4.63.4 Input Data Blocks XYCDB _UDVC2 _PPC2 _QPC2 _UPVC2 _ESC2 _EFC2 PSDF AUTO _UDV2 OPNL2 OPP2 _QP2 _UPV2 _ES2 _EF2 OUHVC2 OUHV2-XYOutput Control Data Block. -Output displacement vector requests (solution set, S_RT2, complex). -Output load vector requests (solution set, SORT2, complex). -Output forces ofsingle-point constraint requests (solution set, SORT2, complex). -Output displacement vector requests (pset, SORT2, complex). -Output element stress requests (S@RT2, complex). -Output element force requests (SORT2, complex). -Power Spectral Density Table. Autocorrelation function table. Output displacement vector requests (solution set, SORT2, real). Output Output Output Output Output Output Output Outputnonlinear load requests (solution set, SORT2, real). load vector requests (pset, SORT2, real). forces ofsingle-point constraint (pset, S_RT2, real). displacement vector requests (pset, SORT2, real). element stress requests (SORT2, real). element force requests (SORT2, real). displacement vector requests (solution set, SORT2, complex). displacement vector requests (solution set, SORT2, real). 4.63-2\nFUNCTIONAL MODULE XYTRAN(XY-OUTPUTDATATRANSLATOR) 4.63.5 Output DataBlocks XYPLTFA -1XYPLTF - XYPLTR -1XYPLTTA - XYPLTT -iXY-Plot output requests prepared byXYTRAN fordirectplotting byXYPLgT. 4.63.6 Parameters CARDH(_ PFILE FREQ TRAN RAHD DSET PSET HSET-Input andoutput-integer-default value =O.CARDN_ isincremented byoneand punched incolumns 73-80 ofeach cardpunched byXYTRAN. -Input andoutput-integer-default value =O.PFILE isincremented byonefor eachframe XYTRAN defines foroutput byXYPL_T. -Input-BCD-2-word-constant distinguishes theproblem asfrequency response. -Input-BCD 2-word-constant distinguishes theproblem astransient response. -Input-BCD 2-word-constant distinguishes theproblem asrandom response. Input-BCD 2-word-constant distinguishes theinput vector asthedset. Input-BCD 2-word-constant distinguishes theinput vector asthepset. Input-BCD 2-word-constant distinguishes theinput vector asthehset. 4.63-3\nMODULE FUNCTIONAL DESCRIPTIONS 4.63.7 Method 4.63.7.1 Thefollowing diagram illustrates theprocess ofserially reading through theXYCDB datablock’s first record andperforming theXYTRAN data processing. ENTER i,d ReadlBCDword [wordanyof | Readthenext thefollowing? Yes _i 32words into “XTIT,YTIT, vitherespective YTTI,YBTI, m title array. TCUR\"L v r IsBCD | Read1word wordoneof Yes J andsettherecognized _eValu e appropriate rbs vI value.b.. r IsBCD i Readdataas word\"XY” indicating Yes dictated by command data _ phase-l.Perform isnext phase-ll? I _IBCDwordisnotrecognized Iwritewarning message. Figure I.Flowchart forreading thefirst record ofXYCDBw 4.63-4\nFUNCTIONAL MODULEXYTRAN(XY-OUTPUT DATATRANSLATOR) 4.63.7.2 Phase I InPhase ItheXYCDB datablock isfurther readto: I.Determine thetypeofXY-output curves desired. (Response, Autocorrelation, orPower Spectral Density Function); 2.Determine thetypeofdata (displacements, stresses,etc.,) andsubcases desired; 3.Determine which types ofXY-output arerequested ofXYPUNCH, XYPEAK, XYPRINT, XYPAPLgT, andXYPL_T (XY-output requests aredescribed insection 4oftheUser’s Manual). 4.Determine thepoint-component curve relationships foraframe. Thedataforallcurves ofagiven frame (upper andlower, orwhole) arethencollected andstored incore. 4.63.7.3 Phase II Theoperations ofPhase IIinvolve theanalysis ofthecurve datainconjunction withthe XY-output specifications stored tothispoint asasetofvalues, andthecomputation and setting ofdynamiccurve limits. Whenallprocessing iscomplete, output totheprinter, the punch, andtheXYTRAN output datablock isaccomplished. 4.63.8 Subroutines 4.63.8.1 Subroutine Name: XYDUMP I.Entry Point: XYDUMP 2.Purpose: Toperform phase IIasdescribed above. 3.Calling Sequence: CALL XYDUMP (IARG,ITYPE). IARG -201,GIN_output datablock nu_er. ITYPE -lforRESPONSE, 2forPSDF, 3forAUT¢. 4.63.8.2 Subroutine Name: XYFIND I.Entry Point: XYFIND 2.Purpose: Toposition oneoftheXYTRAN input datablocks (2thru6)tothe beginning ofadatasetrecord foraparticular ELEMENT-ID orPOINT-ID ofaspecific 4.63-5 (6/l/7l)\nMODULEFUNCTIONAL DESCRIPTIONS datatype. Calling Sequence: 4.63.8.3 4.63.8.43. CALLXYFIND ($nI,$n2,$n3,MAJID,IDZ) nI Return taken intheevent anend-of-file issensed when anE_Fshould notbehit. n2 =Return taken intheevent anend-of-record issensed whenanend-of-record. should notbehit. n3 =Return taken ifthedatarequested could notbefound. MAJID =Anarray oftheeleven datatypemajor-IDs. IDZ :Pointer intotheZarray ofopencoretoanELEMENT-ID orPO!NT-ID. Subroutine Name: XY_UT I.Entry Point: XYOUT 2.Purpose: Tooutput tothesystem printer unitanxy-output summary ortooutput tothesystem printer and/or punch unit(s) anxy-output coordinate pair. 3.Calling Sequence: CALLXYOUT (IARG,BUFF) IARG =I\u003c0implies print summary. t\u003e_0implies print and/or punch coordinate pair. BUFF =Array containing data tobeoutput. Subroutine Name: XYL_G I.Entry Point: XYL_G 2.Purpose: Toanalyze theinput arguments VlandV2andtoreset these arguments to powers oftenbracketing theoriginal values. Anexample follows. w I=0.5 =5.6 Input arguments. UndefinedJV2 IARG Vl V2 IARG=O.l =lO.O 2Output arguments. 4.63-6\nFUNCTIONAL MODULEXYTRAN(XY-OUTPUT DATATRANSLATOR) 3.Calling Sequence: CALLXYL_G(VI,V2,1ARG) Vl =Smaller input realvariable. V2 =Larger input realvariable. IARG =Number oflogrithmic cycles needed tobracket VlandV2. return) 4.63.8.5 4.63.8.6(SetbyXYLgG before Subroutine Name: XYTICS I.Entry Point: XYTICS 2.Purpose: Toaccept user-specified xy-plot edge-tic specifications andcompute actual edge-tic beginning andending values, their increments tothesuccessive edge-tics, andtheir scientific values with powers often. 3.Calling I¢UT = 9UT = IARGI = Rl = R2 = ISKIP =Sequence: CALL XYTICS (19UT,_UT,IARGI,RI,R2,1SKIP) Integer outputarray IOneandthesamearray. Realoutputarray Number ofedge-tic divisions desired byuser. Minimum coordinate value ofedge. Maximum coordinate value ofedge. Edge-ticskipcount i_dicating which edge-tics aretohaveavalue printed along with thetic-mark. Subroutine Name: XYPRPL I.Entry Point:XYPRPL 2.Purpose: ToprocesstheXYPAPLgT request. TheXYTRAN output data block isreadand aproper plotisgenerated foreachXYPAPL_T request. Frame numbers areprinted aswellas titles, andthedataarescaled tothesizeofthepagewidth. 3.Calling Sequence: CALLXYPRPL 4.63.8.7 Subroutine Name: XYCHAR I.Entry Point: XYCHAR 2.Purpose: Tostore thepoints tobeplotted intotheappropriate lineoftheoutput buffer. 4.63-7 (6/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 3, IR(BW ICOL CURVCH 4.63.8.8Calling Sequence: CALLXYCHAR(IROW,ICOL,CURVCH) =Ycoordinate ofthepoint tobeplotted =Xcoordinate ofthepoint tobeplotted =Symbol tobeusedforthepoint Subroutine Name: XYGRAF I.Entry Point: XYGRAF 2. Purpose: Toprint theproper plotforaframe. 3.Calling Sequence: CALLXYGRAF(GP_APH) GP_APH =Frame border datafortheplot 4.63.9 Design Requirements I.TheXYTP_AN design requires thatforaparticular frame allofthecurve dataforthe curves ofthatframe fitincore. Ifthiscondition isnotpossible, onecurve atatime willbecancelled, with awarning message output, until thecondition ismetfortheframe inquestion. 2.Thefollowing C_MM_N blocks areusedinthesubroutines ofmodule XYTRAN. a.C_MM_N/XYW@RK/ This common block contains variables required intheprocessing oftheuseroutput requests. b.COMMON/XYTRZZ/ Defines opencoreforthemodule 4.63.10 Diagnostic Messages AllXYTRAN diagnostic messages areofaUSER-WARNING nature. There arenoFATAL type error diagnostics. XYTRAN isinallcases expected tomake anormal return. 4.63-8 (6/I/71)\nFUNCTIONAL MODULERANDOM(RANDOMANALYSISMODULE) 4.64FUNCTIONAL MODULERAND_M(RANDOMANALYSISMODULE) 4.64.1Entry Point: RANDi_M 4.64.2Purpose Tocompute power spectral densityfunctions andautocorrelation functions fromfrequency response data. 4.64.3 DMAPCallin 9Sequence RANDOM XYCDB,DIT,PSDL,_UPVC2,_PP2,_QP2,_ESC2,EFC2,CASECC/PSDF,AUT/V,N,N_RAND $ 4.64.4 Input DataBlocks 4.64.5XYCDB DIT PSDL _UPVC2 - _PP2 - _QP2 - _ESC2 - _EFC2 - CASECC Note.___s: I. 2. 3. 4. 5. PSDF AUT_XYPlotter Control DataBlock. Direct Input Tables. Power Spectral Density List. Output displacement vector requests (pset,S_RT2, complex). Output loadvector requests (pset,S_RT2, complex). Output forces ofsingle-point constraint (pset,S_RT2, complex). Output element stress requests (S_RT2, complex). Output element force requests (S_RT2, complex). CaseControl DataTable. IfXYCDB ispurged, RAND@M returns. DITcannot bepurged ifPSDLpoints totables inDIT. IfPSDLispurged, RANDOM returns. _UPVC2, _PP2, _QP2, _ESC2, _EFC2 mustcontain therequested outputs. CASECC cannot bepurged. Output DataBlocks -Power Spectral Density Table. -Autocorrelation function table. Notes: PSDFandAUT_cannot bepurged. 4.64-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.64.6 Parameters N_RAND Output-integer-no default. O,otherwise.N_RAND =-I,ifnorandom analysis isrequested; 4.64.7 Method 4.64.7.1 Overview oftheMethod TheRandom Analysis Module calculates powerspectral density functions, autocorrelation functions andmeandeviations forselected displacements, loads, forces ofsingle-point constraint, andelement forces andstresses. 4.64.7.2 Module Initialization Thefollowing 4stepsofsubroutine RAND7comprise module initialization. I.TheXYCDB must bepresent orRANDOM returns. 2.AsetofRANDPS Bulk Data cards from PSDL must beselected inCASECC orRANDOM returns. 3.Thefrequency list isextracted from thefirst non-empty data file. 4.Theselected RANDPS cards areread inandstored. Thetables _eferenced are prepared bysubroutine PRETAB. defines thefunctionsTheRANDPS (see section 2.4oftheUser’s Manual) card Sab(f) =(x+iy)FK(f) (1) where aisthesubcase idoftheexcited load set; bisthesubcase idoftheapplied load set(a\u003cb);(x,y) isacomplex number such that ifa=b,then ymust be0.0; and Kisthetable identification number ofaTABRNDI Bulk Data card which defines Fk(f), apower spectral density asatabular function offrequency. IfonanyRANDPS card a#b,theequations arecalled coupled, otherwise they arecalled uncoupled. 4.64-2"},"title":"Programmer's Manual P56"},"/docs/programmers/programmers_manual_057/":{"data":{"":"FUNCTIONAL MODULE RANDCM (RANDOM ANALYSIS MODULE) 4.64.7.3 TheUncoupled Case Thefollowing eight steps areaccomplished insubroutine RAND5. I.TheXYCDB isreadforalistofrequested points. This listisstored incore. (Subroutine RAND6). 2.Coreisallocated forasmanypoints aspossible atoneword perfrequency. If allpoints willnotfitincore, another passwill bemade onthisfile. 3.Compute Saa(f) ateach loadchange (subroutine TAB). 4.ReadinthedatafromtheS{RT2 datablock andcompute: Sja(f )=IUj(f) l2Saa(f), (2) where Uj(f) istheresponse ofthejthpoint atfrequency f. 5.These aresummed over allloads toformthepower spectral density function: Sj(f) =zaSJa(f)’ (3) where ‘a’runsoverallsubcase id’sontheRANDPS cards. 6.When allsubcases forthepoints incorehavebeenprocessed, themean response qj iscalculated insubroutine RAND3 foreachpoint j: = Z[(Sj(f i)+Sj(fi+l)] (fi+l -fi)}I/2’ (4)i=l where N=nu_d_er offrequencies. Themeanresponse isoutput with boththePSDFand theautocorrelation function. 7.IfPSDFforpoint jisrequested, oneidanddatarecord arewritten onthePSDF datablock. 8.Ifanautocorrelation function isrequested forpoint j,theSj(f) aretransformed tothetimedomain togivetheautocorrelation function: Rj(Tm)=N’IIl FSj(fi+l) -Sj(fil [cos(2_mfi+l) cos(2_mfi)]- +i=l4- 2T mL(fi÷l-fi) l[Sj(f+l) sin )-Sj(fi) sin(2_Tmfi)] 1 (5) 2_%m (2_Zmfi +l ’ 4.64-3\nMODULE FUNCTIONAL DESCRIPTIONS where iistheindex ofthefrequencies; Nishighest frequency; Tmisdefined by m TmTO+_(Tmax-To), (6) whereToisthestarting timelag,Misthenumber oftimelagintervals, andTmax isthemaximum timelag(o\u003cTO\u003c_m),allofwhich aredefined onaRANDTI BulkData card. Notethatif,inEquation 5,Tm:O,then 2 Rj(m)=qj. (7) Ifmorepoints forthisdatablockremain tobedone,thefileisrewound andanother passismade. Ifadditional filetypesarerequested, steps 1through 8outlined aboveare repeated. Thiscompletes theuncoupled caseprocessing. 4.64.7.4 TheCoupled Case Thefollowing 6stepsareaccomplished insubroutine RAND8. I.Alistofunique subcase id’sisextracted fromtheRANDPS cards. 2.TheXYCDBisreadforalistofrequested points. Thislistisstored incore (subroutine RAND6). 3.Anarrayofcoreisreserved foreachpointasfollows: LetNFREQ=thenumber offrequencies usedandNUNObethenumber ofunique subcase id’s mentioned ontheRANDPS cards. Eachpointrequires 2NFREQ*NUN words ofstorage. Asmanypoints aspossible aredoneatonce. Thedatafileisreadandthedataare stored (real/imaginary) foreachpointuntilallsubcases forallpoints incorehave beenprocessed. 4.ForeachRANDPS cardSab(fi) islooked upforallf(subroutine TAB). ForeachpointincoreS(f) iscomputed: S!(f)j :Hja(f )Sab(f )Hjb(f), (8) where Hja(f) denotes thevalue ofpoint jforsubcase a.Thebarover thethird l(f) aresummed over allfactor inEquation 8denotes thecomplex conjugate. These Sj RANDPS cards toform SjCf):.. 4.64-4 FUNCTIONAL MODULE RANDall (RANDOM ANALYSIS MODULE) Sj(f) =[Z_Hja(f) Sab(f) b(f)I.ab NotethatSba=Tab, thecomplex conjugate. 5.Themeanresponse andautocorrelation functions arecomputed asinEquations 5,6and7. 6.Ifmore points forthisfile remain tobedone,thefile isrewound andanother passismade. Ifadditional file types arerequested, steps lthru6arerepeated. Ifnot,the coupled caseprocessing iscomplete. 4.64.8 Subroutines 4.64.8.1 Subroutine Name: RAND7 I.Entry Point: RAND7 2.Purpose:Toinitialize forboth thecoupled anduncoupled cases. 3.Calling Sequence: CALLRAND7(IFILE,NFILE,PSDL,DIT,IC_UP,NFREQ,NPSDL,NTAU,LTAB, CASECC,XYCDB). PSDL,DIT,CASECC,XYCDB areGIN_filenumbers fortheir respective datablocks - -integer -input. IFILE - NFILE - IC@UP - m NFREQ - NPSDL - NTAU - LTABArray ofGIN filenumbers ofdatafiles toRAND(_M -integer -input. Number offiles inIFILE -integer -input. -INoRANDOM analysis tobedone. 0uncoupled algorithm tobeused-integer -output. lcoupled algorithm tobeused. Number offrequencies -integer -ouLput. Number ofRANDPS cards selected -integer -output. Number ofT’sonRANDTI cards -integer -output. Amount ofcoretaken upbytable storage -integer -output. C_MM_NIRANDMX/ RAND7 stores mostofitsoutputdatain/RANDMX/. (section 4.64.9).Seecorestorage layout of/RANDMX/(9) 4.64-5\nMODULE FUNCTIONAL DESCRIPTIONS 4.64.8.2 I. 2. 3.Subroutine Name: RAND5 EntryPoint: RAND5 Purpose: Tocompute uncoupled PSDFandAUTOnumbers. Calling Sequence: CALLRAND5(NFREQ,NPSDL,NTAU,XYCDB,LTAB,IFILE,PSDF,AUT_,NFILE) 4.64.8.3 I. 2. 3. 4.64.8.4 I. 2. 3. FILE MID TYPE ID COMP Q 4.64.8.5 I.PSDF,AUT_ -GINOfilenumbers ofrespective files-integer -input. Othervariables areasinRAND7(Section 4.64.8.1). Subroutine Name: RAND8 Entry Point: RAND8 Purpose: Tocompute coupled PSDFandAUT_numbers. Calling Sequence: CALLRAND8(SameasRAND5). Subroutine Name: RAND1 EntryPoint: RANDI Purpose: Toputone_FPtypeIDonPSDFandAUTO. Calling sequence: CALLRAND1(FILE,MID,TYPE,ID,COMP,Q). -GINOfilenumber ofoutput file-integer -input. -Filetype(PSDF=4001,AUTO =4002)-integer -input. -Curvetype-DISP,VEL_,ACCE,L_AD,SPLF,ELFO, orSTRE-BCD,input. -Pointid-integer -input. -Pointcomponent -integer -input. -Meandeviation -real-input. Subroutine Name: RAND2 EntryPoints: RAND2, RAND2A 2.Purpose: ToreadaSBRT2typeoutput fileuntilitfindsapoint idselected by theuserinalist. 3.Calling Sequence: FILE ILISTCALLRAND2 (FILE,ILIST,L_AD,IF,LEN,LLIST, DATA) CALLRAND2A (DATA) -GINOfilenumber oftheSORT2datafile-integer -input. -Listofuserdesired points -inputandoutput. 4.64-6 (811172)\nFUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) LBAD IF LEN LLIST DATA 4.64.8.6Subcase idoffirst data record inILIST -integer -output. Format ofdata-real/imaginary ormagnitude/phase -integer -output. Length ofthedata lineforthisrecord -integer -output. Length oftheILIST array. Dataarray -input. Subroutine Name: RAND3 l. 2. 3. F S Q N 4.64.8.7Entry Point: RAND3 Purpose: Tocompute themean response q. Calling Sequence: CALL RAND3 (F,S,Q,N) -Array offrequencies -real-input. -Array ofpower spectral density functions -real-input. -Mean response -real-output. -Length oftheFandSarrays -i_teger -input. Subroutine Name:RAND4 I.Entry Point: RAND4 2.Purpose: Tocompute theautocorrelation function R(z). 3.Calling Sequence; CALL RAND4 (F,S,TAU,R,N) F,S,N areasdescribed inRAND3. TAU -Tpoint atwhich Ristocomputed -real-input. R -Autocorrelation function atTAU-real-output. 4.64.8.8 Subroutine Name: RAND6 I. 2. 3. XYCDB BUFFER NPOINTEntry Point: RAND6 Purpose: ToextractfromtheXYCDB alistofuserrequested points forRANDOM output. Calling Sequence: CALL RAND6 (XYCDB,BUFFER,NP_INT,IZ,INPUT) -GIN_filenumber oftheXYCDB datablock -integer -input. -GIN_buffer -array -input. -Number ofpoints requested bytheuserforthisfile-integer -output. 4.64-7 (8/I/72)\nMODULE FUNCTIONAb DESCRIPTIONS IZ ArrayinwhichRAND6storesthelistofrequests -integer -output. INPUT-GINOfilenumber ofdatafileforwhichlistofrequest isdesired. 4,64.9 Design Requirements OpenCoreat/RANDMX/ isarranged asfollows: C_MM_N/RANDMX/ fl fNFREQ RANDPS Card Data T1 TNTAU TableData FromPRETABNFREQfrequencies 5wordspercard: Subcase ID Subcase ID X Y Table NTAUTaus LTABTable dataNPSDLcards Theabovedataareplaced incorebyRAND7andarethesameforboththecoupled and uncoupled cases• Theremaining dataarecoredependent. Uncoupled casedata: Saa(fl ) Saa(f2 ) Saa(fNFRE Q) Requests from RAND6 NP_INT of them5words/ pointThese areevaluated eachtimethe Subcase idchanges. I)Data Block 2)Point ID 3)Component 4)Request Type l=PSDF 2=AUTO 3-Both 5)Destination l=Print 2=Punch 3=Both 4=Plot 4.64-8\nFUNCTIONAL MODULE RANDOM (RANDOM ANALYSIS MODULE) Sj(f) Sj+l(f) Sab(f I) Sab(fNFREQ) Request Hja(f) Hjb(f) Sj(f) AUT@ PSDF InputNFREQ NFREQSj(f) foreach point inthe request list (spill ispossible here) I3GIN_buffers l Coupled casedata: These arere-evaluated foreach RANDPS card Unique subcase ID’sfromRANDPS cards NUNQ ofthem Asinuncoupled request list 2*NFREQ NUNQ ofH’sRepeated foreach point inrequest list(spill possible here). NFREQ 3GINObuffers 4.64-9\nHODULE FUNCTIONAL DESCRIPTIONS 4.64.10 Diagnostic Messages RANDOM isdefined asanoutput processor andthusmustnotstopduetouserinnuterror. Henceallmessages areofawarning nature. Random mayissue message 3048. 4.64-10\nFUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) 4.65 FUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) 4.65.1 Entry Point: TRD 4.65.2 Purpose Tosolve thetransient problem. 4.65.3 DMAPCalling Sequence TRD CASECC,USETD,DLT,TRL,NLFT,DIT,KHH,BHH,MHH,GMD,G_D,PHIDH/UHVT,PDT,PST,PPT,PNLH/V,N, 4.65.4 CASECC USETD DLT TRL NLFT DIT KHH BHH MHH GMD G_D PHIOH Notes: I. 2. 3. 4.F_RM/V,N,LUSETD/V,N,MPCFI/V,N,SINGLE/V,N,_MIT/V,N,N_NCUP/V,N,N_UE InputDataBlocks -CaseControl Datatable. -Displacement setdefinitions table-dynamics. Dynamic LoadsTable. Transient Response List. -Non-Linear Forcing Table. -DirectInputTables. -Modalstiffness matrix -hset. -Modaldamping matrix -hset. -Modalmassmatrix -hset. -Multipoint constraint transformation matrix -dynamics. -Omitted coordinate transformation matrix -dynamics. -Transformation Matrix fromd-settomodalcoordinates. CASECC cannot bepurged. USETD cannot bepurged. DLTcannot bepurged ifadynamic loadwasselected inCASECC. TRLcannot bepurged. 4.65-I\n4.65.5 4.65.6MODULE FUNCTIONAL DESCRIPTIONS UHVT PDT PST PPT PNLH- Notes: FORM LUSETD MPCFI SINGLE _MIT N_NCUP N@UE5.NLFTcannot bepurged ifnonlinear loads areselected inCASECC. 6.GMDcannot bepurged ifMPCFI _O. 7.G_Dcannot bepurged if_MIT_O. 8.PHIDH cannot bepurged ifF_RM=M_DAL. Output DataBlocks -Modal transient solution vectors -hset. Linear dynamic loadmatrix fortransient analysis -dset. Linear loadvector fortransient analysis -sset. Linear dynamics loads fortransient analysis -pset. Nonlinear loads inmodal transient problem -hset. I.UHVTcannot bepurged. 2.PDTcannot bepurged. 3.PSTcannot bepurged ifSINGLE _O. 4.PPTcannot bepurged. 5.PNLHcannot bepurged ifnonlinear loads areselected. Parameters -Input-BCD-no default. IfF_RM=M_DAL amodal formulation will beused, othem_ise adirect formulation will occur. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default. Input-integer-no default.LUSETD indicates length ofpset. IfMPCFI \u003e0multipoint constraints arepresent. IfSINGLE \u003e0single-point constraints arepresent. If_MIT\u003e0omitted coordinates arepresent. IfN_NCUP =-Ianuncoupled solution willbedone. N_UEindicates thenumber ofextrapolnts-used in nonlinear loadformulation. 4.65-2\nFUNCTIONAL MODULETRD(TRANSIENT ANALYSIS-DISPLACEMENT) 4.65.7 Method 4.65.7.1 Overview oftheMethod TheTransient Analysis module integrates, over specified timeperiods, equations of motion ofastructure having timedependent loads. Ageneral structure maybeusedwith real stiffness, mass anddamping matrices. Non-linear effects maybecalculated byspecifying certain loading functions onthefree, physical displacements ofthesystem. This analysis isparticularly useful when shock loads areapplied toastructure. Itisalsomore efficient thanfrequency analysis orcomplex eigenvalue analysis when theapplied loads arewelldefined andthefrequency characteristics aresecondary todamping andpeakloadcharacteristics_ This analysis isalsotheonlydynamic general system analysis which allows non-linearities. 4.65.7.2 Logical Phases ofSolution I.Theapplied loadvectors areassembled. Thetimeincrement fromtheTRLdatablock isusedtoidentify thetimes atwhich theloads areassembled. Theinitial conditions areassembled. 2.Theloads arereduced tothesolution coordinates. 3.Thelefthandmatrix ofthegeneral integration equation, Equation 15below, andthe tworight handmatrices areassembled. Thetriangular decomposition ofthelefthand matrix isperformed. 4.Thesolution loopoftheprogram maynowproceed until thetimeincrement is changed. Thesteps are: a.Compute thenon-linear loadforthistimestep. Addthisloadtotheload vectors computed inStep2. b.Multiply thedisplacement vectors intotheright handmatrices andaddthe resultant vectors totheapplied loadvector. c.Solve forthelefthanddisplacement vector byperforming abacksubstitution intothetriangular decomposition ofthelefthandmatrix. Ifthisisanoutput timestep, thevelocity andacceleration arecomputed using differences ofthe displacement vectors. 4.65-3\nMODULE FUNCTIONAL DESCRIPTIONS d.Ifthetimeincrement changes forthenexttimestep,theprogram returns to step3.Iftheincrement isthesame,steps4athru4darerepeated. 5.Iftheequations areintheuncoupled modalformulation form(i.e., notransfer functions, direct inputmatrices, ornon-linear functions), thesolution logicis muchfaster. Foreachcoordinate, thedisplacement, velocity andacceleration maybe computed independently versus time. Steps3and4areomitted. 4.65.7.3 Algorithms forEachLogical Phase I.Assembly ofApplied loadvectors: CASECC isreadandtheselected timestep, load, non-linear load,andinitial condition setidsareextracted. Theinitial displacement andvelocity vectors arepacked onascratch fileforlateruse.Thecomputation andout- putdataontheTSTEPcardarestored incore. TheDLTisreadtobuildalistofload “id’s”, andtable\"id’s\" andscalefactors forthesimple components ofaload. Coreis zeroed, andloadsforasmanytimesaspossible areconstructed incoreandoutput. Twotypesofloadsareavailable, TL_ADI andTLOAD2. FortheTL_ADI load, P(t)=AF(t-z), (I) whereFisauserinputtable. FortheTLOAD2 load, P(t)=_tBec_elsewherecos(2_ft+P)0_t_T2-TI wheret=t-T1-zandTI,T2,f,P,CandBareuserinputcoefficients. (Subroutines TRDIA, PRETAB andTAB). 2.Reduction ofloadstothesolution coordinates: Ifm’sarepresent (MPCFI_O), Ppl..I ne, {Pne}:[G]T{Pm}+{§ne}.(2) (3) (4) 4.65-4\nFUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) Ifs’sarepresent (SINGLE _0), {Pne} – IPfe P- -I\" {Ps}isreduced totheoutputtimes andoutputondatablock PS. Ifo’sarepresent (i_4IT \u003e_0), {Pfe}==I }’ {Pd}=[Gdo]T{Po}+{Pd}.(5) (6) (7) {Pd}isreduced totheoutput times andoutputondatablock P¢. Ifthis isamodal formulation (FgRM= M_DAL), {Ph}={¢dn}T{Pd}. (8) {Pp}isreduced tooutputtimes andoutputondatablock PP. 3.Solution ofthecoupled equations: Thematrix isformed anddecomposed.Thematrix isformed andsaved.Thematrix [E]=+12At [B]+½[K]) , _2(9) (lO) (ll) isformed andsaved. Thesolution loops thenproceed until atimestepchange occurs. arebrought inandthestarting equationTheinitial conditions 4.65-5\nMODULE FUNCTIONAL DESCRIPTIONS 1+pl}+{No}+[C]{uo}+[E]{U_l}, [D]{uI}=½{Pll_ +Po issolved for{Ul}, where {uo}isthestarting displacement vector; {U!l} ={uo}-{Uo}At, {o}isthestarting velocity vector; {P} =[K]{uo}+[B]{Go}; {NO}isthenon-linear loadcalculated from{Uo}; and {PlI}=[K]{ull}+ [B]{uo} ={P_}-At[K]{o}. Note thattheloadcomputed att=Oisnever usedbutisreplaced by{P}. through {un}arenowcomputed fromthegeneral equation: [D]{ui+2}=½{Pi+Pi+l+Pi+2}+ {Ni+l}+[C]{ui+I}+[E]{ui}.{u2}(12) (13) (14) (15) (16) Ifnon-linear loads areselected, theyareevaluated directly atthesolution points for timestepbythefollowing process. N_LINI loads arecomputed as, where point, uj as,Pi(t) :ST(uj(t)), (17) Tisauserselected table, iistheloaded solution point, jisthedeflecting isthepreviously computed displacement atpoint j.N_LIN2 loads arecomputed Pi(t) :Suj(t)uk(t), (18) where i,j,andkareasinN_LINI loads. 4.65-6\nFUNCTIONAL MODULETRD(TRANSIENTANALYSIS-DISPLACEMENT) NgLIN3 loads arecomputed as, Pi(t)! JS{uj(t)}A, uj(t)\u003eO I0,uj(t)O NgLIN4 loadsarecomputed as, Pi(t)J-S{-ui(t)}A, ui(t)\u003c O I0 ,ui(t) O. Theuserspecifiesthesetoftimes atwhich dataistobesaved. anoutput time, thedisplacement vectorfortimet=tiisoutput. Thevelocityvectorgivenby:(Ig) (20) Ifthecurrent time is {i}: [{Ui+l} -{Ui_l}], (21) isoutput. Theacceleration vector given by l {’i}=[{ui+l}+{ui_l}-2{ui}], (22) isoutput. Ifthetimestepisscheduled tochange atti+lfromAtItoAt2Jthedisplacement fortime i+lhasbeencalculated. {Ui_l}, {ui}, and{ui+l}aresaved along with {Pi+l}.Thematrices areformed anddecomposed asinEquations 9,10, andIIforAt=At2. Thefollowing equation isusedforcomputing {ui+2} , [D]{ui+2}=½{PI+Pi+l+Pi+2}+ {Ni+l} +[C]{Ui+l} +[El{u}. Thevectors {P]and{u_}intheabove equation arecalculated asfollows.Define(23) 4.65-7\nMODULE FUNCTIONAL DESCRIPTIONS 1 {ui+I}=_({Ui+l} -{ui}), (24) {_i+l} _1({ui+ I}-2{ui}+{Ui_l}), (25) t {uli}:{ui+I}-{Ui+l}At2, (26) then: 2 {uI}={ui+I}-At2{Ui+l}+z_t2{i+l} ’ 2(27) {PIi}:[M]{‘i+l} +[B]{GI}+ [K]{ul}. (28) 4.Solution ofUncoupled ModalEquation: Ifthemethod ofmatrix formulation ismodal andnotransfer functic, nsordirect inputmatrices areused,theequations maybe solved inamoreaccurate, moredirect manner. Thediagonal termsofMHH,BHH,andKHH arestored incore. Thefollowing dataarenecessary tosolvethetransient behavior of amodalcoordinate (_i). mi= bi= K. = 1Modalmassofmode(MHH) Modaldamping coefficient (BHH) Modalstiffness (KHH) moi=(Ki/mi)I/2 (29) (3O) tj=time ofthejthtimestep,(31) 4.65-8 (811172)\nFUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) hj=timeincrement after thejthtime, fij=applied loadoncoordinate iatthejthtime. Thefollowing coefficients aregenerated foreach distinct timeincrement andstored in core. There arefourcases. (=lO-5andthesubscript iisimplied). a.Ifmo2\u003eB2+(underdamped): F=e-Bh(cos_h+Csin_h), (32) G=!e-Bhsinwh,W(33) :1{e-Bh (2_B AhT_ [(m2-B2 Bh)sin_h—+h_)cos,_h]+2Bm}, _20 _20 _20(3-i) B=1{e-Bh hT [(-_2__2) sinwh+2_cos_h]+h-2}2 i _02 _0 _02(35) 2 -BhF’-oesin_h, (36) G’=e-Bh(cos =h-_sin_h), (37) A’=I[e-Bh {(8+h=)sin_h+mcos_h}-m], (38) B’-l[-e-Bh(Bsin _h+cos_h)+9]hk (39) b.IfI_o2-B2I\u003cE(critically damped): F:e-Bh(l +Sn), (40) G=he-!Sii,(41) 4.65-9 (]2-]-69)\nMODULE FUNCTIONAL DESCRIPTIONS 2_e-6h(2+2h6+h262)], A=[-(42) B=I[-2+6h+e-Bh(2+Bh)] (43) F’:-B2he-Bh, (44) G’:e-Bh(l -Bh), (45) A’ 1[e-6h:BIT (I+hB+h2B2)-I],(46) 1 e-6hB’=h–[l - (6h+l)].(47) c.Ifcoo2\u003c62-(over damped): F=e-Bh(coshcoh+sinh coh),CO(48) G=1e-cohsinhcoh,CO(49) 1{e-6h +62h [(co22 COOhB)sinhcoh-(2co.+ hco)cosh_h]+2co.} , coo2 co02(50) 1{e-6h +62 2co_ _ [_2 sinhcoh+–cosh coh]+_h 26co}, 2 CO02 CO2_0 0(51) FI2 cooe-BhsinhcobCO J(52) G’=e\"Bh(cosh coh-sinhcoh),co(53) A’=l[e-6hhT {(B+hcoo2) sinhcob+cocoshcoh}-co], (54) B’:1 e-Sh[- (Bsinhcoh+cocoshcoh)+co]. (55) 4.65-I0 (12-I-69)\nFUNCTIONAL MODULETRD(TRANSIENTANALYSIS-DISPLACEMENT) d.Ifl_ol=IBI_c(undamped): F=I, (56) G=hm (57) A=h2/3m, (58) B=h2/6m, (59) FI _ Ol(60) IZ l,(61) A’=h/2mt B’=h/2m. Theequations foreachdisplacement, velocity, andacceleration interms ofthe applied loads andprevious displacement andvelocity are:(63) {i,j+l =Fi_i,j +Gi{i,j +Aifi,j +Bifi,j+l ’ (64) _i,j+l =F’iCl,j +G’I_I,j+A’ifi,j +B’ifi,j+l , =Pi,j+l +bi_i,j+l Ki_i,j+l _i,j+l mi mi mi(65) (66) 4.65-II (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS 4.65.8Subroutines Utility routines PRETAB, TAB,SSG2A, CALCV, SSG2B, ADD,andDECAMP areused. subroutine descriptions, section 3fordetails. 4.65.8.1 I. 2. 3.See Subroutine Name: TRDIA Entry Point: TRDIA Purpose: Toassemble theloads atalltimesteps. Calling Sequence: CALLTRDIA (DLT,TRL,CASECC,DIT,PPA,IC,LUSETD,NLFTP,NGR@UP, ITRL,M_DAL) DLT,TRL,CASECC, DITareGINOfilenumbers oftheir respective datablocks -integer - input. PPA IC LUSETD - NLFTP - NGROUP - ITRL - M_DAL - 4.65.8.2-GIN_filenumber ofapplied loads -pset-foralltimes -integer -input. GINOfilenumber ofinitial condition matrix -integer -input. Length ofpset-integer -input. Non-linear loadsetidselected inCASECC -integer -output. Number oftimestepchanges -integer -output. Number ofrecords toskipinTRLtoobtain selected TSTEP card -integer - output. IfMODAL = Subroutine Name: I.Entry Point: TRDIB 2.Purpose: output timeloads. 3.Calling Sequence:l,amodal formulation isbeing used -integer -input. TRDIB Toreduce theapplied loads tothesolution setandremove allbut CALLTRDIB(PPA,USETD,GM_,G@D,PHIDH,MPCFI,SINGLE,_MIT,FORM, PD,PS,PP,PAPPLD,SCRI,SCR2,SCR3,SCR4,NGR_UP,TRL,ITRL) 4.65-12"},"title":"Programmer's Manual P57"},"/docs/programmers/programmers_manual_058/":{"data":{"":"FUNCTIONAL MODULETRD(TRANSIENT ANALYSIS -DISPLACEMENT) PPA USETD,GM_, GgD,PHIDH,PD,_ - PS,PP,TRL ! ScR4SCRI\"\"’ I- MPCFI,SINGLE, ¢_IIT,F_RM}- NGR_UP,ITRL PAPPLD 4.65.8.3 I. 2. 3.SameasforTRDIA GINgfilenumbers oftheir respective datablocks -integer -input. GINgfilenumbers of4scratch files. Module input parameters asexplained insection 4.65.6. SameasforTRDIA -integer -input. GINgfilenumber ofapplied loads -integer -input. Subroutine Name: INITL Entry Point: INITL Purpose: Toform[C]and[Elmatrices andtoformanddecompose the[D]matrix. Calling Sequence: CALL INITL (gFFSET,DELTA) C{r_4_N/TRDXX/ CFFSET DELTA 4.65.8.4 ’ I. 2. 3. IC,NGRCUP - NLFTP ) UDV,DIT NLFT,PNL }- SCRI PAPPLD NgUE -Seesection 4.65.8.4. -Length ofreserved areaofcore-integer -input. -Current timeincrement -real-input. Subroutine Name: TRDIC Entry Point: TRDIC Purpose: Tosolve thecoupled equations. Calling Sequence: CALLTRDIC (IC,PAPPLD,NGR_UP,NLFTP,UDV,I,SCRI,DIT,NLFT,NCUg MgDAI,PNL) Areasdescribed inTRDIA -integer -input. AreGIN¢filenumbers oftheir respective datablocks -integer -input. GIN_filenumber ofascratch file. Isasdescribed inTRDIB. Module parameter. 4.65-13\nMODULEFUNCTIONAL DESCRIPTIONS M_DAI -IifF_RM_M_DAL. I Current loopcount. integer -input. C_MM_N/TRDXX/IK(7)IM(7),IB(7),C,ULL,LLL,E,SCRI,SCR2,1_PEN IK(7) IM(7) IB(7) C ULL,LLL E SCRI,SCR2- I_PEN1ifF_RM:M_DAL -integer -input. Runsfrom1tonumber oftimestepchanges - Matrix control block forKmatrix. Matrix control block forMmatrix. Matrix control block forBmatrix. GIN_filenumber forCmatrix. GIN_filenumbers fordecomposition products ofDmatrix. GIN_filenumber forEmatrix. GIN_filenumbers for2scratch files. limplies C,ULL,LLL, andEareopen. 0implies C,ULL,LLL, andEareclosed. 4.65.8.5 I. 2. 3. u_ UDOT_ UI P_ PI DELTATSubroutine Name: F_RMI Entry F_RMI Purpose: Tocompute {U_l}, {P_}, and{P_l}forstarting theintegration procedure. Calling Sequence: CALLF_RMI (U_,UD_T_,UI,P_,PI,DELTAT,IBUF) -Array ofcorecontaining {uo}-real-input. -Array ofcorecontaining {i0}-real-input. -Array ofcoreforstorage of{U.l} -real-output. -Array ofcoreforstorage of{P_}-real -output. Array ofcoreforstorage of{P_l}-real -output. Current timestepsize-real-input. IBUF GIN_buffer C_MM_N/TRDXX/ (seeabove). 4.65-14 (7/I/70)\n4.65.8.6 I. 2. 3. Y X FILEA IBUFFUNCTIONAL MODULETRD(TRANSIENT ANALYSIS -DISPLACEMENT) Subroutine Name: MATVEC EntryPoint: MATVEC Purpose:Toform theproduct{X}={X}+[A]{Y}where [A]isamatrix and{Y}isavector. Calling Sequence:CALLMATVEC (Y,X,FILEA,IBUF) -Array ofcorecontaining Yarray real-input. -Array ofcorecontaining Xarray real-input/output. -Matrix control block forA.IfFILEA(1) \u003c_O,MATVEC will return. -GIN(Jbuffer. IfIBUF\u003c_O,MATVEC will assume thefileisalready incore. 4.65.8.8COMMON/Tpnxx/ (S_section 4.65.8.4) 4.65.8.7 SubroutineName: STEP I.Entry Point: STEP 2.Purpose: Tointegrate forward ltimestep. 3.Calling Sequence: CALLSTEP (U2,UI,U,P,IBUF) U2 -Array which will contain {ui+2]-real-output. U! -Array containing {ui+l}-real-input. UO -Array containing {ui}-r(al-input. P Array containing combined load-real-input. IBUF -GIN9buffer -input. COMI_N/TRDXX/ (Seesection4.65.8.4) SubroutineName: INTFBS I.Entry Point: INTFBS 2.Purpose: Toperform theforward-backward substitution necessary tosolve thesystem ofequations: [A]{Y}={X}for{Y}. 3.Calling Sequence: CALLINTFBS (X,Y,IBUF) X -Load vector (i.e. right handside)-real- input. 4.65-15 (7/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS Y-Solution vector-real-output. IBUF-GIN@buffer. C_MMON/TRDXX/ (Seesection 4.65.8.4) COMMON/INFBS/FILEL(7),FILEU(7) FILEL Matrixcontrol blockofthelowertriangular factorfromthedecomposition ofA. FILEU Matrixcontrol blockoftheuppertriangular factorfromthedecomposition ofA. Subroutine Name: TRDID EntryPoint: TRDID Purpose: Tocompute thenon-linear loadsateachtimestep. Calling Sequence: CALLTRDID C@MM_N/TRDD_/NLFT,D_T,NLFTP,N_UT,_c_UNT,L_P,M0DA,Nz_c_RE,_U2,_P4,PNL(7),NM0DES NSTEP,PNL Thevariables DIT,NLFT,NLFTP,M_DAI andPNLaredefined asinTRDIC(seesection 4.65.8.4).4.65.8.9 I. 2. 3. NOUT - IC_UNT - ILOOP - NZ IC_RE - IU2 IP4 IPNL - NM_DES - NSTEP -Outputinterval -integer -input. Current timestepcounter -integer -input. Current timechange counter -integer -input. Lengthofopencore-integer -input. Pointer tofirstunused cellofopencore-integer -input. Pointer todisplacement vector -1-integer -input. Pointer toloadarea-I-integer -input. Matrix control blockforPNL-integer -input/output. Numberofmodesifmodalformulation isbeingused-integer -input. Numberoftimesstepsforthistimeincrement -integer -input. 4.65-16 (7/I/70)\nFUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) 4.65.8.10 Subroutine Name: TRDIE I.Entry Point: TRDIE 2.Purpose: Tosolve theuncoupled modal equations. 3.Calling Sequence: CALLTRDIE (14HH,BHH,KHH,PH,UHV,NGR_UP) MHH,BHH,KHH, PH,UHV-GINOfilenumbers oftheir respective datablocks -integer -input. NGROUP -Number oftimestepchanges -integer -input. 4.65.8.11 I. 2. 3. UDDIPI UDIPI UIP PIP IBUFSubroutine Name: FORM2 Entry Point: F_RM2 Purpose: Tocompute {u;}and{P;}whenchanging timesteps. through 28) Calling Sequence: CALLFORM2 (UDDIPI,UDIPI,UIP,PIP,IBUF)(SeeEquations 23 -Array ofcorecontaining {_i+l }-real -input. -Array ofcorecontaining {i+! }-real -input. -Array ofcorecontaining {u}-real-output. -Array ofcorecontaining {P;}-real-output. -GINO buffer COMMON/TRDXX/ (Seesection 4.65.8.4) 4.65-17 (3/I171)\nMODULE FUNCTIONAL DESCRIPTIONS 4.65.9 Design Requirements I.Open coreat/TRDAI/isillustrated asfollows: C_MM_N/TRDAI/ LoadIDl Scalel LoadID2 Scale2 Table IDl Table ID2 Tables LoadatTl LoadatT2 LoadatT3 PRETAB Buffer DLTBuffer PPBuffer Number ofsteps At Output Interval ,iLoad ID’s+Scale factors forcurrent DL_AD Listofunique table ID’sreferenced by loads (NTABL id’s) Table dataused PRETAB/TABby }LUSETD IThese arerepeated foras many times ascorewill hold. Gonewhen loads areincore 2GIN_ Buffers Repeated foreach timestepchange There mustbeenough coretoassemble onetimestep load. 4.65-18 (8/I/72)\nFUNCTIONAL MODULETRD(TRANSIENTANALYSIS-DISPLACEMENT) 2.OpenCoreat/TRDIX/isillustrated asfollows: C_N/TRDIX/ OpenCore forDECAMP andADD Number ofsteps At Output IntervalRepeated foreachtimestepchange 4.65-19 (8/1/72)\nMODULE FUNCTIONAL DESCRIPTIONS Thistable isatthebottom ofopencore through themodule. 3.Open Coreat/TRDCI/isillustrated asfollows: C_MM@N/TRDCl/ u1 u2 u3 P1 P2 P3 P4 Type Table ID’s Table’s forTAB TabBuffer CBuffer DBuffer ULLBuffer LLLBuffer Solution Buffer LoadBuffer Utility Buffer} } } } } } } }NR_W NR_W NROW NR(_W NROW NR_W NROW 5words foreach non-linear loadcard selected. Table ID’sselected onN_LIN cards. Usedonly ifnon-linear loads are selected. GIN_Buffers 4.65-20 (711/70)\nFUNCTIONAL MODULE TRD(TRANSIENT ANALYSIS -DISPLACEMENT) 4. OpenCore at/TBDEI/isillustrated asfollows: C_M_NITRDEI/ MHH BHHEach sectionisoflength H KHH F G A B F’ G’ A! B’ Cj _j+l C’j+l fj fj+l PHBuffer UHVBuffer2GIN_buffers 4.65-21 (71117N)\nMODULE FUNCTIONAL DESCRIPTIONS 4.65.10 Diagnostic Messages TRDmayissue thefollowing messages 3001, 3002, 3003, 3005, 3007, 3008, 3031, 3044, 3045, 3046. 4.65-22 (7/I170)\nFUNCTIONAL MODULEGKAM(GENERALKASSEMBLER MODAL) 4.66 4.66.1 4.66.2FUNCTIONAL MODULE GKAM (GENERAL KASSEI_LER MODAL) Entry Point: GKAM Purpose Toassemble themodal mass, damping andstiffness matrices. 4.66.3 DMAPCa!lin 9Sequence GKAM USETD,PHIA,MI,LAMA,DIT,M2DD,B2DD,K2DD,CASECC/H,BHH,KHH,PHIDH/V,N,N_UE/C,Y, 4.66.4 Input USETD - PHIA - MI LAMA - DIT - M2DD B2DD K2DD CASECC - Notes: I. 2. 3. 4. 5. 6. 7. 8. 9.LM_DES/C,Y,LFREQ/C,Y,HFREQ/V,N,NOM2PP/V,N,N@B2PP/V,N,NgK2PP/V,N,N@NCUP/V,N, FM@DE $ DataBlocks Displacement setdefinitions table dynamics. Eigenvectors matrix giving theeigenvectors (displacements) intheaset. Modal massmatrix. RealEigenvalueTable. Direct input Table. Direct input massmatrix -dset. Direct input damping matrix -dset. Direct input stiffness matrix -dset. CaseControl DataTable. USETDmaybepurged ifNgUE\u003cO. PHIAcannot bepurged. MIcannot bepurged. LAMAcannot bepurged. DITcannot bepurged ifSDAMP #0inCASECC. CASECC cannot bepurged. M2DDcannot bepurged ifN¢|2PP _O. B2DDcannot bepurged ifN_B2PP _O. K2DDcannot bepurged ifN_K2PP \u003eO. 4.66-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.66.5 Output DataBlocks MHH BHH KHH PHIDH Note:Modalmassmatrix -hset. Modaldamping matrix -hset. Modalstiffness matrix -hset. Transformation matrix fromdsettomodalcoordinates. Nooutout matrix canbepurged. 4.66.6 Parameters N_UE LM_DES LFREQ HFRE_ NOM2PP NOB2PP NOK2PP N_NCUP FM_DE-Input-integer-no default. NBUEindicates presence andnumber ofextrapoints. -Input-integer-default =O.LMODES selects thefirstLM_DES eigenvectors (orall iftherearelessthanLM_DES) touseforthemodalcoordinates, -Input-real-default =0.0. IfLMODES =O,eigenvectors witheigenvalues between LFREQandHFREQareusedinthemodalformulation. -Input-real-default =0.0. -Input-integer-no default. -Input-integer-no default. -Input-integer-no default. -Output-integer-no default.SeeLFREQ. IfN_M2PP \u003cO,M2DDwillnotbeused. IfN@B2PP \u003cO,B2DDwillnotbeused. IfNOK2PP \u003cO,K2DDwillnotbeused. Ifnodirect inputmatrices existthenroblem is considered uncoupled andN@NCUP issetto-I. Output-integer-no default. Themodenumber ofthefirstselected eigenvector isstored inFM_DE. 4.66.7 Method Thegeneral system assembly module forthemodalmethod isusedwhentherealeigenvalues forthestructure havebeendetermined. Withthismethod, itispossible todecrease theorder oftheproblem without sacrificing accuracy. Themodule formstheconversion matrix between modaldisplacements andallfreephysical displacements ofthesystem. Itthenforms thegeneral matrices intermsofdisplacements ofthemodesandtheextrapoints. 4.66-2\nFUNCTIONAL MODULE GKAM (GENERAL KASSEI,LER MODAL) CASECC isread, andtheselected structural damping table “id\"isstored. LAMA isreadandtheselected eigenvalues arestored incore. Ifaneioenvalue is selected, thecorresponding column ofPHIAiscopied onto PHIDHI, ascratch file. Ifextra points arenotpresent (N_UE \u003c0),PHIDH =PHIDHI. Ifextra points arepresent: [dh] =Lo!F‘aLO-I” (I) This isaccomplished insubroutine GKAMIB. The\"H\"matrices areformed: [Mhh]=–i\"0][@dh]T [M_d][@dh]’ (2) k_i….OoiLo[Khh] : where mi=diagonal terms ofMI,and+[@dhIT[K_d] [@dh], bi(4) :mi_ig(°i)’ (5) ki=mi_ (6) _iisthefrequency forthemodefromLAMAandg(mi)isthetabular structural damping table selected inCASECC. Ifnoselection ismade g(mi)_0.0. The\"H\"matrices areformed using subroutines GKAMIA, SSG2B, PRETAB, TAB,CALCV, MERGE. 4.66.8 Subroutines 4.66.8.1 Subroutine Name: GKAMIB. I.Entry Point: GKAMIB. 2.Purpose: Toconstruct [@dh]ifextra points arepresent. 4.66-3\nMODULEFUNCTIONAL DESCRIPTIONS 3. 4.66.8.2 I. 2. 3.Calling Sequence: CALL GKAMIB USETD -GIN_filenumber of SCRI -GIN_filenumber of SCR2 -GINBfilenumber of PHIDH - PHIDHI MODES C_RE LHSET N@UE(USETD,SCRI,SCR2,PHIDH,PHIDHI,M_DES,C_RE,LHSET,N_UE) USETD -integer -input. Istscratch file-integer -input. 2ndscratch file -integer -input. GINBfilenumber ofPHIDH -integer -input. GINOfilenumber ofPHIDHI -integer -input. Number ofmodes selected -integer -input. Array ofopencore. Length ofhset-integer -output. Extra point flag N_UE_0indicates presence ofextra points -integer -input. Subroutine Name: GKAMIA. Entry Point: GKAMIA. Purpose: Toform[Mhh], [Bhh], or[Khh]. Calling Sequence: CALLGKAMIA (MI,PHIDH,DIT,SCRI,SCR2,1_PT,IHH,N_I2DD,C_RE,M_DES, SDITD,LHSET,12DD,IMSKIP,SCR3) MI GINOfilenumber ofMI-integer -input. PHIDH -GINBfile number ofPHIDH -integer -input. DIT -GINOfile number ofDIT-integer -input. SCRI -GINO filenumber ofscratch l-integer -input. _CR2 -GIN_file number ofscratch 2-integer -input. SCR3 -GINOfilenumber ofscratch 3-integer -input. IHH -GIN_filenumber ofHHfile (M,B,orK)being constructed -integer -input. 12DD -GIN_filenumber of2DDfilebeing usedwith IHH(K2DD, M2DD orB2DD) - integer -input. I(PT -Flagforequation touse 1—–\u003eMHH 2\u003eBHH 3:\u003eKHH 4.66-4\nFUNCTIONAL MODULEGRAM(GENERALKASSEMBLER MODAL) N_I2DD M_DES SDTID LHSET IMSKIP C(_RE - 4.66.9 Desi9nRequirements Three scratch files arenecessary. Opencoreat/GKAMIX/isusedformodestorage. packed eigenvector mustbeheld incore. 4.66.10 Diagnostic Messages Fatal error messages 3007and3008maybeissued byGKAM.-integer -input. -NgI2DD \u003c0implies 12DDpurged -integer -input. -Number ofmodes selected -integer -input. -Idofstructural damping table tobeusedforBHH-integer -input. -Length ofHset-integer -input. -Number ofrecords toskip inMIbefore extracting diagonal terms -integer - input. Array ofmodes selected. One 4.66-5\n4.67 4.67.1 4.67.2FUNCTIONAL MODULEDDRI(DYNAMICDATARECOVERY-PARTl) FUNCTIONAL MODULEDDRI(DYNAMICDATARECOVERY-PARTl) Entry Point: DDRI Purpose: Totransform modal solutions tophysical solutions: {ud}=[_dh]{uh}. 4.67.3 DMAPCalling Sequence DDRI UHV,PHIDH/UDV $ 4.67.4 Input DataBlocks UHV PHIDH-Solution setdisplacement vectors. -Transformation matrix fromdsettomodal coordinates. 4.67.5 Output DataBlocks UDV -Displacement vectors -dset. 4.67.6 Parameters None 4.67.7 Method Subroutine SSG2B iscalled tocompute {ud}asinEquation I. 4.67.8 Subroutines DDRIhasnoauxiliary subroutines. 4.67.9 Design Requirement s(i) Seesection 3.5.13 foradescription ofSSG2B. Onescratch file isneeded. 4.67-I\n4.68 4.68.1 4.68.2FUNCTIONAL MODULE DDR2(DYt\u0026VIICDATARECOVERY -PART2) FUNCTIONAL MODULE DDR2 (DYNAMIC DATARECOVERY -PART2) Entry Point: DDR2 Tocompute modeacceleration displacements. 4.68.3DMAPCallin 9Sequence DDR2 _ETD_DV_PDF_K2DD_B2DD_MDD_FRL_LL_LLL_DM/UD_E_F_PAF/V’N,TYPE/V,N,NgUE/V,N,REAcT/ V,N,FRQSET$ 4.68.4 Input DataBlocks USETD UDV PDF K2DD B2DD MDD FRL ULL LLL DM-Displacement setdefinitions table dynamics. -Displacement vectors -dset. -Dynamic loadmatrix forfrequency analysis -dset. -Direct input stiffness matrix -dset. -Direct input damping matrix -dset. -Dynamic massmatrix -dset. -Frequency Response List. -Upper triangular factor ofKLL-_set. -Lower triangular factor ofKLL-_set. -Rigid body transformation matrix. Notes: I.USETD mustnotbepurged. 2.UDVmustnotbepurged. 3.PDFmust notbepurged. 4.FRLmust notbepurged ifTYPE=FREQ. 5.MDDmust notbepurged. 6.ULL,LLLmust notbepurged. 7.DMmust notbepurged ifREACT \u003eO. 4.68-I\n4.68.5 Output DataBlocks 4.68.6UDVI UEVF PAFMODULE FUNCTIONAL DESCRIPTIONS -Displacements aftermodeacceleration -dset. -Displacements attheextrapoints. -Equivalent loadvector formodeacceleration computations -aset. Parameters TYPE - NOUE - REACT - FRQSET - 4.68.7 MethodInput-BCD-no default. TYPEdetermines thetypeofmodeacceleration whichwillbe used,TRANfortransient orFREQforfrequency response. Input-integer-no default. N@UE_0indicates presence ofextrapoints. Input-integer-no default. REACT_0indicates presence ofsupports. Input-integer-no default. FRQSET chooses thefrequency listifTYPE=FREQ. Theequivalent loadvector iscomputed: {P_}:{Pd}-[K_d]{ud}-[B_d]{d}-[Mdd]CUd}. Foratransient analysis problem {Ud},{Gd},and{Ud}aregivenexplicitly. Response Analysis: {6d}=i{ud},(1) ForFrequency (2) {Ud}=m2{Ud}’ (3) wheremistheforcing frequency and{ud}isthecomplex response vector, mcomesfromFRQSET inFRL.Thevector {P}isthesumofapplied loadsandinertia loadsduetothemotion ofthe system approximated byitslowermodes. Thestatic solution usingtheseloadswillprovide a better answer fordisplacements. 4.68-2\nFUNCTIONAL MODULE DDR2 (DYANMIC DATARECOVERY -PART2) Ifextra points arepresent (N_UE 0),then (4) [ue) {ue}isplaced indatablock UEVF. Subroutines CALCV andSSG2A perform thiscalculation. Ifsupports arepresent (REACT \u003e0),then(5) %}=)r-(6) (7) Solve for{u}: [L][U]{u}:{P_}. (8) This isaccomplished insubroutine SSG3A. Ifsupports arepresent, then otherwise, {u_}:{u_}.{uaa}=’{u}+[D]{Ur}_ (……_r…….)’ Subroutine SDRIB performs thiscalculation.(9) 4.68-3\nMODULE FUNCTIONAL DESCRIPTIONS Note: 4.68.8Ifextrapointsarepresent, then \u003c-I:tltue) ua Iftheproblem typeistransient, {d}mustbemerged with{6d}and{d}. Subroutines Called CALCV -Seesection 3.5.5. SSG2A -Seesection 3.5.7. SSG2B -Seesection 3.5.13. SSG3A -Seesection 3.5.18. SDRIB -Seesection 3.5.8. 4.68.8.1(lO) Subroutine Name: DDRIA. I.EntryPoint: DDRIA. 2.Purpose: Toconstruct theequivalent loadvector {P_}. 3.Calling Sequence: CALLDDRIA(PDF,K2DD,B2DD,MDD,UDV,PAF,FRL,FRQSET,SCRI,SCR2,SCR3,SCR4, TYPE,SCR5). PDF K2DD B2DD MDD UDV PAF FRL SCRI-5GIN_filenumberofappropriate datablock-integer -input. FRQSET -Frequency setlistid-integer -input. TYPE Problem type-BCD-input.FRQSETwillbeusedonlyifTYPE=FREQ. 4.68-4"},"title":"Programmer's Manual P58"},"/docs/programmers/programmers_manual_059/":{"data":{"":"FUNCTIONAL MODULEDDR2(DYNAt41CDATARECOVERY -PART2) 4.68.8.2 Subroutine Name: DDRIB I.Entry Point: DDRIB. 2.Purpose: Tomerge displacements withpreviously computed velocity andacceleration in atransient problem. 3.Calling Sequence: CALLDDRIB (UDV,UAD,UADV). UDV-GIN_filenumber ofdisplacement, velocity andacceleration file-inteoer -input. UAD-GIN_filenumber ofequivalent displacements -integer -input. UADV-GINgfilenumber ofnewdisplacements,velocity andacceleration -integer -input. 4.68.9 Design Requirements OpencoreforDDR2begins at/DDRIX/.OpencoreforDDRIA begins /DDRAI/.Opencorefor DDRIB begins /DDRBI/.Sixscratch files areneeded. 4.68.10DiagnosticMessages None. 4.68-5\nOUTPUTMODULEXYPLgT(X-YDATAPLOTTER) 4.69OUTPUT MODULE XYPLCT(X-YDATAPLOTTER) 4.69.1 Entry Point: XYPL_T 4.69.2 Purpose Toprocess information supplied byr,mdule XYTRAN through asingle datablock andoutput toeither PLTI (BCDplottape) orPLT2(binary plottape) forlabeling andplotting X-Ydata onanoff-line plotter. 4.69.3 DHAPCallin 9Sequence XYPL_T XYPLTT// $ 4.69.4 Input DataBlocks XYPLTT -Plotting Control Values Table. NoteifXYPLTT ispurged, XYPL_T returns control without action. 4.69.5 Output DataBlocks None. (Alloutput consists ofphysical tapes produced foroff-line plotters and possibly userwarning messages totheinstallation output unitforprinting). 4.69.6 Parameters /,lone. 4.69.7 Method XYPLCT initially determines opencoresizeandassigns buffers foritsinput fileand output file. Theremaining coreisusedtostore datapoints readinforeachplot. The input file isthenopened andspaced forward overtheheader record containing thedatablock name. Should thesystem notbeabletolocate thisfile, awarning message isoutput and X?PLCT returns control tothecalling program without further action. Otherwise XYPL_T reads inthefirst I.D.record fromtheinput file. Acheck ismadetodetermine iftheword count ofthisrecord iscorrect. Ifnot,thefollowing records arechecked until either thecorrect 4.69-I\nMODULEFUNCTIONAL DESCRIPTIONS wordcountisfoundortheerrorcountreachesaspecifiedlimit.Ifthespecifiedlimitis reached,XYPL_Tassumestheinputfileisinvalidandreturnscontroltothecallingprogram afterprintingawarningmessage. IftheI.D.recordhadtheproperwordcount,XYPLOTchecksifnewaxesarenecessary. Ifnot,thenextdatarecordisread,andthedatapairsareplottedonthepreviousaxes.When newaxesarenecessary, acheckismadetodetermineiftheygoonthelowerhalfofaplot.If not,XYPL_TmakesanumberofI.D.datavaliditychecks.Wheneverpossible,whereI.D.dataare questionable, defaultvaluesareassignedandprocessing continuesfollowingawarningmessage thatthisparticular plotmaybeinvalid. Afterthevaliditychecks,XYPL_Tterminates thepreviousplotandinitializes theplotting parameters fortheNASTRANplottingsoftware. Thisisdoneforeachnewplotsothatitis possibletoproducealternateplotsontwodifferentplotters. Normally,however,plotswillbe doneforonlyoneplotteronanysingleentrytoXYPLOT.Ifrequired,anewplotisinitiated, andcurveandaxestitlesarepreparedfromtheI.D.dataandgenerated. Ifnotanewplot,only theaxestitlesaredone. AtthistimeXYPL_Tcomputestheconstantswhichwillbeusedtotransformthecurvedata intoactualplottercounts.Theseconstantsaresavedanduseduntilnewaxesaredrawn. Followingthis,XYPL_Tdetermines ifanytickmarksaretobeplacedalongtheXaxisand attheXmaximumandXminimumlines.Iftherearetobetickmarks,thenumberandspacing (linearorlogarithmic) iscomputedforthemandplotted.AstheXdirectiontickmarksare prepared,acheckismadetodetermineifYgridlinesarerequested. Ifso,agridlineis preparedateachtickmarkandplotted.Logarithmic tickmarklabelsarepreparedandplotted atthesametimeasthetickmarksandXgridlines,ifany. Afterthetickmarksarecompleted, theXandYaxesareplottedifrequested. Finally thelineartickmarksarelabeledinboththeXandYdirections ifrequested. Oncethecurvetitles,tickmarks,andlabelinghavebeenaccomplished, XYPL@Treadsin thenextrecordfromtheinputdatafile.NormallyallthedatapairsforanyI.D.recordcanbe broughtintocorememorywithasingleread. However, provision ismadeforadditional reads if theopencorespace isnotsufficient tocontain allthedata ontheinitial read. Acheck is made todetermine ifthere areaneven number ofdatavalues (i.e., anXandYvalue foreachdata 4.69-2 (12-I-69)\nOUTPUTMODULE XYPL_T(X-YDATAPLOTTER) point). Ifnot,awarning message isprinted andthelastvalue ignored. Thedataarethen checked against thepreviously defined XandYminimums andmaximums. Anydataoutside these limits areignored andnotplotted. andplotted inoneofthree modes. plot; combination ofthefirst two.Theremaining datapoints arethenconverted toplotter counts Thethree modes are: point plotwith choice ofsymbol; line Afterfinishing thedata, XYPLgT reads inthenextI.D.record andcontinues asbefore until anend-of-file isreached. Atthispoint itcloses theinput file, terminates thecurrent plot andreturns control tothecalling program. 4.69.8 Subroutines XYPLgT calls thefollowing plotter utility subroutines: AXIS, LINE, PRINT, SgPEN, PLTSET, STPLgT, SYMBOL, TIPE, TYPFLT, andTYPINT. Thedescriptions ofthese subroutines maybefound in section 3.4. 4.69.9 Design Requirements 4.69.9.1 Allocation ofCoreStorage XYPLgT usesopencorefortwoGINgbuffers andtheremainder asonelarge buffer fordata points. Itappears asfollows: 4.69-3 (12-1-69)\nMODULE FUNCTIONAL DESCRIPTIONS Normally thedatapairsbuffer willbesufficiently largetoholdallthedatapairsfor asingle curveatonetime. However, thisisnotnecessary andXYPLBT couldoperate ifthedata pairsbuffer wereonlytwowords long,although notefficiently. Asanoutput module, XYPLOT hasbeenprogrammed toavoidanysystem fatalerrors. Theworstcondition thatshould occuris thatnoplotsareproduced. InallcasesXYPLOT returns tothecalling program sothatother system functions maybecontinued. 4.69.9.2 Environment Thebeginning ofopencoreforXYPL_T isdefined by/XYPLXX/. XYPLOT usesnoscratch files. Common storage requirements consist of/XXPARM/ and/PLTDAT/ whicharedefined inthe blockdatadeckPL_TBD which mustbeloaded withXYPLOT. /CHAR94/ andSYMBLS/ arealsodefined inPLOTBD andarenecessary forthesubroutines called byXYPL_T. Seesection 2.5fora description ofthesecommon blocks. WhenXYPLOT iscalled, theremustbeatleastonephysical tapesetuptoreceive the plotted output, otherwise XYPLOT returns tothecalling program without further action. 4.69.10 Diagnostic Messages Diagnostic messages 991through 997maybeoutput ontheinstallation printer device as aresult ofXYPL_T operation. Generally theyareself-explanatory andusually pointout particular plotswhicharequestionable rather thangiving theuseraprecise method of solving theproblem. Thisisnotpossible sinceXYPLOT receives allitsinformation through aseries ofothermodules rather thanfromtheuserdirectly. Seesection 6ofthe User’s Manual fordetails. 4.69-4\n4.70 4.70.I 4.70.2OUTPUT MODULE _FP(OUTPUT FILEPROCESSOR) OUTPUT MODULE @FP(OUTPUT FILEPROCESSOR) Entry Point: _FP Purpose FPoutputs tothesystem output file, inuser-orierted, self-explanatory formats, data blocks prepared foroutput byother functional modules. 4.70.3 DMAPCalling Sequence @FP DBI,DB2,DB3,DB4,DB5,DB6//V,N,CARDN@ $ 4.70.4 Input DataBlocks Onetosixinput datablocks intheoutput order desired. Anyorallinput datablocks maybepurged. 4.70.5 Output DataBlocks None 4.70.6 Parameters CARDN@ 4.70.7 Method-Input andoutput -integer -default =O.CARDN isincremented byone andpunched incolumns 73-80 foreachcardpunched by_FP. 4.70.7.1 Overall Logic Flow The_FPlogic consists ofdefining oneGIN_buffer andthenentering oneoverall loopof sixpasses (onepassforeachdatablock). Allinput datablocks arethenhandled identically oneatatime. Within eachdatablock, eachoddnumbered (Identification) record anditsrespective immediately following evennumbered (Data) record _reconsidered asapair, andisacompletely separate entity. There is,andneedbe,nocorres o)Idence between these tworecords andthe previous tworecords, orbetween these tworecords indthefollowing tworecords. 4.70-I\nMODULE FUNCTIONAL DESCRIPTIONS r Thus, within theloopforagiven datablock, after thefileonwhich thedatablock resides isopened anditsheader record isskipped, _FPreads anIdentification record, defines various pointers anddescriptors, andthen, ifanydataarepresent intheDatarecord, processes this data linebylineuntil theend-of-record isreached. Thisprocess continues forallIdentifica- tion-Data record pairs. 4.70.7.2 Defining Descriptors andPointers Because _FPwasconfronted with outputting avastarray ofdataclasses having manydata format andheading format configurations, itwasdecided thatinorder tokeep_FPfrombe- coming amammoth module offormat statements, asystem ofpointers would beusedinconjunction with allthedifferent micro-format elements required. Information intheIdentification record issufficient toselect aninitial class pointer. This class pointer, with theaddition ofasubclass pointer, points toanarray ofsixpointers, fiveofwhich define fivemicro-line formats (from themaster setofmicro-line formats), andone ofwhich points toastring ofmicro-data format pointers. These micro-data format pointers then eachpoint toamicro-data format capable ofoutputting asingle variable. This design issuchastomakepossible thedefinition ofmacro-formats andtoallow for easymodification andaddition ofmoreoutput dataclasses. 4.70.8 Subroutines 4.70.8.1 Subroutine Name: _FPPUN I. 2. 3.Entry Point: @FPPUN Purpose: Towrite output onthesystem punch unit. Calling Sequence: CALL_FPPUN (BUF,NWDS,I_PT,IDD,PNCHED) BUF Array tobeoutput. NWDS -Number ofwords inBUFtooutput. I_PT .II=Vector output. !2=General output. 0=S@RTI (Istword Integer). IDD “t1=S_RT2 (Istword Real). 4.70-2\n4.70.8.2 I. 2. 3. 4.70.8.3OUTPUT MODULE gFP(OUTPUT FILEPROCESSOR) I.FALSE. =Punch heading c_rds.PNCHEO I I t.TRUE. =Dorotpunch heading cards. Subroutine Name: gFPl Entry Point: gFPl Purpose: Tocall PAGEandwrite fivemicro-line formats. Calling Sequence: CALLpFPI Subroutine Name: pFPIA I.Entry Point: gFPIA 2.Purpose: Anauxiliary routine topFPI.Called bygFPI only. 3.Calling Sequence: CALLPFPIA(LIhE) LINE -Integer -Branch toformat pointer. 4.70.8.4 Block DataSubprogram Name: gFPIBD gFPIBD defines common block /@FPBDI/. 4.70.8.5 Block DataSubprogram Name: CFP2BD _FP2BD definescommon block /_FPBD2/. 4.70.8.6 Block DataSubprogram Name: gFP3BD _FP3BD definesco_n block /_FPBD3/. 4.70.8.7 Block Data Subprogram Name:_FP4BD _FP4BD definesco.,or block /OFPBD4/. 4.70.8.8 Block DataSubprogram Name: gFP5BD gFP5BD defines con_on block /gFPBD5/. 4.70-3\nMODULEFUNCTIONAL DESCRIPTIONS 4.70.9 Design Requirements Thecommon blocks listed above interface between themainsubroutines OFPand_FPIA. In addition C_MM_N/_FPXXX/ isusedtodefine open-core which contains thefollowing. Ll L2 L3 L4 L5 IDFivewords which indicate thefiveformat numbers defining theheading forthecurrent databeing output. Afifty word buffer forstorage ofthefirst fifty words ofanidentification record fromthedatablock tobe output. BUFF -AGIN_buffer. Thepointer system required bythedesign operates asdescribed below. Thearrays B,C,D,E, andESINGL, referenced inthediscussion below appear insubroutine OFP. I.Thevariable Iissetequal totheDatatypespecified inthedatablock. Thevariable Jissetequal totheclass ofdata: l=Real-SORTI, 2=Complex -S_RTI, etc. Then the basepointer, CPOINT =B(I,J), isfound. Datatype l Datatype2 Data typeNBarray S_RT 1 Real Complex 0 130 2 134 4 138SORT2 Real 120 122 124Complex 132 136 140 ForFuture_Expansi on 4.70-4Example: ForI=2,J=4. CP_INT =B(I,J) =136\nOUTPUTMODULEgFP(OUTPUTFILEPROCESSOR) 2.CPgINTisaindexintotheCarray.Define:DPgINT=C(CPgINT). DPglNT isanindex intotheDarray. Also andLI=C(CP_INT +l), L2=C(CP_INT +2), L3=C(CP_INT +3), L4=C(CP_INT +4). L5=C(CP@INT +5). Thesearethe5lineformat numberswhich makeuptheheading format forthetypeofdata currently being processed. Carray 25 I0 12 8 136 137 138 139 140 141DP_INT Ll L2 L3 L4 L5 A A FutureExpansion 4.70-5\nMODULEFUNCTIONAL DESCRIPTIONS 3.WordDP_INToftheDarraydefinesthebeginningofastringofpointersintotheEarray. Thisstringisterminated bythefirstwordcontaining azero.Eachwordofthisstringthus definesastringofwordsintheEarraywhichcontainsHollerithdataforconstruction of aformat.ShouldawordintheDarraybenegative,theabsolutevalueisusedtopointinto theESINGLarraywhichcontainsHollerithdataalso. DP@INT-I DP_INT DP_INT+IDarray 5 2 6 9 -4 10 20 0 Future Expansion 4.70-6\nOUTPUTMODULE_FP(OUTPUTFILEPROCESSOR) 4.TheEarray containsHollerith datapertaining totheoutput ofavariable; theESINGL array contains Hollerith datapertaining tospacing andcarriage control only. Earray IPEl 6.6, IPEl 7.6, FIO. ,^^ E21. 4^^^ E22. 5^^^ ETC. _-_uture ExpansionJI_ote^implies BCD blankESINGLarray IX^^ /15X /IHO ETC. Future Expansion 4.70.I0 Diagnostic Messages If,duringsome phase ofoutputtingadatablock,gFPencounters anerror condition, work on thatdatablock will cease, awarning message will beprinted, andacalltotheNASTRAN table- printer fortable printing ofthisdatablock will bemade. _FPwillthencontinue processing the remaining input datablocks. 4.7O-7\nOUTPUTMODULEMATPRN(GENERALMATRIXPRINTER) 4.71OUTPUT MODULEMATPRN (GENERAL MATRIX PRINTER) 4.71.1 EntryPoint: MATPRN. 4.71.2 Purpose Toprint general matrix datablocks. 4.71.3 DMAPCalling Sequence MATPRN KGG,PL,PG,B2PP,UPV// $ 4.71.4 Input DataBlocks KGG-Anymatrix datablock. PL-Anymatrix datablock. PG-Anymatrix datablock. B2PP -Anymatrix datablock. UPV -Anymatrix datablock. Notes: I.Anyorallinput datablocks canbepurged. 2.Ifanydatablock isnotamatrix, theTABPT routine willbecalled. 4.71.5 Output Thenon-zero bandofeachcolumn oftheinput matrix isunpacked andisprinted insingle precision format onthesystem output file. 4.71.6 Parameters None. 4.71.7 Method Subroutine MATDUM iscalled foreachnon-purged inputfile. 4.71.8 Subroutines MATDUM -Seesubroutine description, section 3.4.28. 4.71-I\nOUTPUTMODULE MATGPR (DISPLACEMENTMETHOD MATRIX PRINTER) 4.72 4.72.1 4.72.2OUTPUT MODULE MATGPR (DISPLACEMENT METHOD MATRIX PRINTER) Entry Point: MATGPR Purpose Toprint displacement method matrices, identifying values withexternal gridpoint nuni_ers. 4.72.3 DMAPCallinq Sequence MATGPR GPL,USET,SIL,A_IYMAT//C,N,C_LSET/C,N,R_WSET 4.72.4 Input DataBlocks GPL - USET - SIL - ANYMAT- Notes: I. 2. 4.72.5GridPoint List(This mayalsobeGPLD ifextra points arepresent.) Displacement setdefinitions table (This mayalsobeUSETD ifextra points arepresent.) Scalar Index List(This mayalsobeSILOifextra points arepresent.) Anydisplacement method matrix. Unless C_LSET =R_WSET =‘H’,GPL,USETandSILmustbepresent. IfANYMAT ispurged, MATGPR willreturn. Output DataBlocks Thenon-zero terms of@d_Y_T aregivenexternalidentification andprintedonthe system output file. 4.72.6 Parameters C@LSET -Input-BCD-no default. C_LSET indicates thesettowhich thecolumns ofANYMAT belong. IfC_LSET isnotoneofthefollowing: M,_,R,SG,SB,L,A,F,S,N,G,E,P,NE,FE,D,H thenMATGPR will return. RffWSET Input-BCD-default =X.R@WSET indicates thesettowhich therowsofANYMAT belong. IfRgWSET isnotalegal setname, R_WSET =C_LSET. 4.72-I\nMODULEFUNCTIONAL DESCRIPTIONS 4.72.7Method TheBCDparameters C_LSETandR_WSETartconvertedtobitpositionsinUSET.COLSETmust beoneofthefollowing17symbols:M,O,R,SG,SB,L,A,F,S,N,G,E,P,NE,FE,D,H orelseMATGPRwill return.IfROWSETisnotalegitimate symbolROWSET=C_LSET. GPL,USET, andSILareplaced incore. Eachcolumn andnon-zero rowelement isidentified according tothefollowing scheme: I.USET issearched forthenumber ofmembers belonging tothegset(psetifUSETD is used) before thecurrent member ofthematrix set. 2.Thisnumber islooked upinSILtoobtain theinternal grid point number andtypeof point (scalar, grid, orextra). 3.Theinternal gridpoint number points intoGPLfortheexternal ID. 4.72.8 Subroutines FtATGPR hasnoauxiliary subroutines. 4.72.9 I. 2.Design Requirements Opencoreisdefined at/MPRTX/. Layout ofopencoreisasfollows: C@MM@N/MPRTX GPL USET SIL BufferLGPL LUSET LSIL+I GINObuffer 4.72-2\nOUTPUTMODULEMATGPR(DISPLACEME_T METHOD_4ATRIXPRINTER) 4.72.10Diagnostic 14essaBes I_ATGPR mayissue thefollowing diagnosticmessages: 3007and3008. 4.72-3\n4.73 4.73.1 4.73.2OUTPUTMODULE MATPRT (MATRIX PRINTER) OUTPUTMODULE MATPRT (MATRIX PRINTER) Entry Point: PRTINT Toprint amatrix datablock. 4.73.3 DMAPCallin9Sequence MATPRT X//C,N,RC/C,N,Y $ 4.73.4 Input DataBlock X-Matrix datablock tobeprinted. 4.73.5 Output DataBlocks None. 4.73.6 RC YIfXispurged,thennothingisdone. Parameters Indicates whether Xisstored byrows(RC=l)orcolumns (RC=O)-integer -input. Indicates whether Xistobeprinted(Y\u003cO,donotprint X;Y\u003eO,print X) -integer -input -defaultvalue =-l. 4.73.7 Method Eachcolumn(orrow)ofthematrix isbroken intogroupsof6terms (3terms ifcomplex) perprinted line.Ifalltheterms inagroup=O,thelineisnotprinted. Iftheentire column (orrow)-O,itisnotprinted.Iftheentire matrix =O,itisnotprinted. 4.73.8 Subroutines 4.73.8.1 Subroutine Name: INTPRT I.Entry Point:INTPRT 2.Purpose:Toprintamatrix datablock using subroutineMATPRT. 3.Calling Sequence: CALLINTPRT (A,CR,9,NAME) 4.73-1\nMODULEFUNCTIONAL DESCRIPTIONS where: A-Storagefor1column(row)ofthematrix+1GIN_buffer. CR_{0ifthematrixisstoredbycolumns.1ifthematrixisstoredbyrows. _{0ifthematrixisnottobeprinted.1ifthematrixistobeprinted. NAME-8characternameofthematrix(2words,4characters perword). 3.Method:Subroutine MATPRTiscalledtoprintthematrix.WheneverHATPRT returns foramatrix nameorcolumn/row idtobeprinted, thenameofthematrix (NAMEI,NAME 2) orthecolumnorrowid(asindicated by’CR’),isprinted. 4.73.8.2 Subroutine Name:MATPRT I.EntryPoints: MATPRT, PRTMAT 2.Purpose: Toprintamatrix datablock. 3.Calling Sequence: CALLMATPRT ($NI,$N2,A,_PT,C_LNUr, I) CALLPRTMAT ($NI,$N2) C_MM_N/XXMPRT/MCB (7) where: N1 N2 A I_PT C@LNUM-F_RTP_AN statement numberdefining thereturn executed whenever anewpage hasbeenstarted (thecalling program isexpected toprintthematrix and column id.COLNUM =current columnnumber). -F_RTRAN statement numberdefining thereturn executed whenever thecolumn idmustbeprinted inthemiddle ofapage(C_LNUM =current column number). -Storage for1columnofthematrix +oneGIN@buffer. -Seesubroutine description forVECPRT, below, fortheexplanation of thisargument. -Current column numberbeingprinted (output). MCB -Matrix control block. 4.73-2\nOUTPUT MODULE MATPRT (MATRIX PRINTER) 3.Method: Thematrix isunpacked andprinted onecolumn atatime. Whenever either of thenonstandard returns ($NI,$N2) isexecuted, thecalling program must callPRTMAT to continue theprinting ofthematrix. 4.Additional Subroutines Called: VECPRT. 4.73.8.3 Subroutine Name: VECPRT I.Entry Points: VECPRT, PRTVEC 2.Purpose: Toprint avector. 3.Calling Sequence: where: Nl N2 p N- A - _PT-CALLVECPRT($NI,$N2,P,N,A,PT) CALLPRTVEC ($NI,$N2) F_RTR#J statement number defining thereturn executed whenever anewpage hasbeenstarted (thecalling program isexpected toprint thevector idand anyother subtitles desired). F_RTRAN statement number defining thereturn executed whenever thevector idistobeprinted inthemiddle ofapage. Vector typeandprecision. Number ofcomponents inthevector. Location ofthevector. 0ifallthevector components aretobeprinted, regardless ofits sparsity, andifitistobeprinted starting onanewpageifit will notfitonthecurrent page. +lifonlytheprinted lines which would haveatleast onenon-zero component aretobeprinted, andifthevector istobeprinted starting onanewpageifitwillnotfitonthecurrent page. -Iifonlytheprinted lines which would haveatleast onenon-zero component aretobeprinted, andifasmuch ofthevector aspossible istobeprinted onthecurrent page. 3.Method: Thevector willbeprinted asasingle precision realorcomplex vector. The components willbeprinted 6perlineifreal, 3perlineifcomplex. Inaddition, the first andlastcomponents ofeach linewillbeidentified oneachside ofthelineby their respective component members. Inaddition whenever either ofthenonstandard 4.73-3\nMODULEFUNCTIONAL DESCRIPTIONS returns($NI,$N2)isexecutedthecallingprogrammustcallPRTVECtocontinuetheprinting ofthevector. 4.Additional Subroutines Called:F_RMAT. 4.73.8.4Subroutine Name:F_RMAT I.EntryPoint:F_RMAT 2.Purpose:Toprintalineoflto6realnumbers(optionally centered)precededand followedbyintegerid’softhefirstandlastnumberprinted. 3.CallingSequence: CALLF_t_T(A,NI,N2,N3,LI,L2) where: A Nl N2Arrayfromwhichthelto6realnumbersaretobeprinted. IndexoftheIstnumberinthearraytobeprinted. Indexofthelastnumberinthearraytobeprinted. N3-Incrementtobeusedinextracting the2rid,3rd,etc.,numbersinthe arraytobeprinted. Ll-IntegeridoftheIstnumbertobeprinted. L2-Integeridofthelastnumbertobeprinted. 3.Method:IfLlandL2arebothpositive,thenumberswillbecenteredonthepage. IfeitherLlorL2isnotpositive,thenumberswillbeprintedbaseduponthe centeringof6numbers. 4.73.9Design Requirements Open coreisdefined at/XXPRTI/.Open corecontains oneGIN_buffer followed byone unpacked realorcomplex single precision column ofthematrix. 4.73-4"},"title":"Programmer's Manual P59"},"/docs/programmers/programmers_manual_060/":{"data":{"":"OUTPUTMODULE SEEMAT(PICTORIALMATRIX PRINTER) 4.74 OUTPUTMODULE SEEMAT (PICTORIALMATRIX PRINTER) 4.74.1 Entr_, Point: SEEMAT 4.74.2 Purpose Toshownonzero matrix elements onprinter orplotter outputpositioned pictorially by rowandcolumn within theoutlinesofthematrix. 4.74.3 DMAPCalling Sequence SEEMAT MI,M2,M3,M4,M5//C,N,{_}/V,N,PFILE/V,N,PACK/C,N,PL,TTER/C,N,MgDELNI/C,N, M_DELBI/C,N,M(_DELN2/C,N,M(_DELB2 $ Notethatparameters PL(_TTER, M_DELNI, M_OELBI, M_DELN2 andM(_DELB2 arealldescribed in paragraph 4insection 4.74.6. 4.74.4 Input DataBlocks Ml M2 M3 Matrix DataBlocks, anyofwhich maybepurged. M4 M5 4.74.5 Output DataBlocks None. Theformatted matrix picture isoutputonthesystem outputfileoronaplottape depending onthevalue ofthefirst parameter. 4.74.6 Parameters I.PRINT implies useofthesystem outputfile. (Anyvalue otherthanPLtT implies PRINT). PL(_Timplies useofoneoftheplotters. Either oftheplotter tapes PLTIorPLT2willbe used,dependingonthetypeofplotterrequested. 2.PFILE istheplotnumber (Used onlyiffirst parameter isPL(_T). Input/output variable integer parameter. Frame orsheet number.Thevalue ofthis parameter will beincremented byone(1)foreach frame (sheet) created bySEEMAT. Thedefaultvalue forthisparameter isO. 3.PACKisreserved forafuture modification thatwill allow therepresentation ofanonzero blockofthematrix with asingle character. Thisparameter maybespecifiedasC,Nonly. (seeexample inparagraph 4below) 4.74-I (12-I-6g)\nMODULEFUNCTIONAL DESCRIPTIONS 4.Plotter NameandModelIdentification (Usedonlyifparameter 1=PL_T.) Eachplotter namehasassociated withittwomodelidentifiers. Eachofthesemodel identifiers mayeither beaninteger (M_DELNi) valueorBCD(M_DELBi) value. Ifmodel identifier “i”(i=I,2)isaninteger, insert itsvalueforM_DELNi; ifmodelidentifier “i”(i=I,2)isBCD,insertitsvalueforMODELBi. Ineither case,specify theother valueformodelidentifier “i”(MODELBi andM_DELNi, respectively) asC,Nonly. Belowisalistofmodelidentifiers allowable foreachplotter name.Adetailed explanation ofthislistcanbefoundinsection 4oftheUser’s Manual. Eachplotter has associated withitadefault modelandseveral optional models. Themodelunderlined isthe default model. Toaccessthisdefault model, donotspecify anyofthelastfourDMAP parameters. Forexample tospecify theCALC_MP 765,205(seesection 4oftheUser’s Manual) thefollowing DMAPstatement maybeused: SEEMAT MI,M2,M3,M4,M5//C,N,PLOT/V,N,PFILE/C,N/C,N,CALC_MP $ Plotter Name ModelIdentifiers BL LTE,30 tSTE,30! EAI 3500,300 _3500,45 sc 4020,0 CALC@MP/765.205 765,105 765,110 763,205 763,210 763,105 763,110 565,205 565,210 565,105 565,110 565,305 565,310 563,205 563,210 4.74-2 (12-I-69)\nOUTPUTMODULESEEMAT(PICTORIAL MATRIXPRINTER) where:Plotter Name DD NASTRAN BLisaBenson-Lehner plotter EAIisanElectronic Associates plotter SCisaStrond_erg Carlson plotter CALC_MP isaCalifornia Computer plotter DDisaData Display plotter NASTRAN istheNASTRAN general purpose plotterModel Identifiers 563,105 563,110 563,305 563,310 BOB D DO M1 T1 D1 4.74.7 I_tethod Thematrix ispartitioned intoblocks which canbeprinted onasingle sheet ofoutput paper orplotted onasingle frame orsheet ofplotter output media. Onlyblocks containing nonzero elements will beprinted. Rowandcolumn indices areindicated. Theuserofthismodule is cautioned tomake surethathislinecount limit islarge enough. Adefault of20,000 lines is provided byNASTRAN. Thismaybechanged viathestatement “MAXLINES =value” intheNASTRAN Case Control Deck. Thetranspose ofthematrix isalways printed. Thecolumns ofthematrix areexamined fornonzero terms. Letthematrix bepartitioned intoblocks, where ablock consists ofNLcolumns andlO0rows, where NListhenumber ofdata lines perpageobtained from/SYSTEM/.Foreachblock containing nonzero terms, aBCDblock image isstored inopencore inpacked bitformat. Onlyblocks containing nonzero terms are stored. WhenNLcolumns havebeen passed, theblocks containing nonzero terms areprinted on 4.74-3 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS thesystem output fileorplotted. NotethatsinceNASTRAN matrices arestored bycolumn, the transpose ofthematrix iswhatactually appears ontheprinted orplotted output. Blocks used forthefirstNLcolumns maynowbere-used forsubsequent groups ofNLcolumns. Thisprocess iscontinued untilallcolumns ofthematrix havebeenprocessed. Asmanyasfivematrices may behandled during asingle calltoSEEMAT. 4.74.8 Subroutines Theplotter environment subroutines areutilized bySEEMAT. Seesection 3.4fordescriptions oftheplotter utility routines. 4.74.8.1 I. 2. 3.Subroutine MAPSET EntryPoints: MAPSET, MAP Purpose: Converts physical unitstoplotter unitsformodule’SEEMAT. Calling Sequence: CALLMAPSET (XI,YI,X2,Y2,KII,KJI,KI2,KJ2,L) CALLMAP(X,Y,KI,KJ) X,Y,Xi,Yi =Physical coordinates KI,KJ,KIi,KJi :Plotter coordinates L=Output Format Flag,input 1:KI,KJareinteger 2=KI,KJarereal Themeaning ofifollows: i=1 i=2 i=blankpointislowerleftcorner offrame pointisupperrightcorner offrame pointisanarbitrary pointonframe. 4.74-4 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.74.9Design Requin_nts 4.74.9.1 O_n ConI_sign C_N S_X/ block 1 block 2 block3 l Iblock is #J\nsS eS block n unusedo_ncon GIN@buffer SGIN@ buffer (ifneeded)\n/Word I\n•Word 2 \\Word 3 Word6 e Word lOTypical Block Istr_no.-l Istcolno.-l Coll(lO0bits @32bits/word _JCol 2(lO0bits@32 bits/word J ColNL(lO0bits@32bits/word inotused 4.74-4a (8/I/72)\nOUTPUTMODULESEEMAT(PICTORIAL MATRIXPRINTER) 4.74.9.2 DataRequirements andRestrictions I.Allnonpurgedinputdatablocksmustbematrices. Errordiagnostics willoccurinthe unpackingroutinesifanattemptismadetoinputatabledatablocktoSEEMAT. 2.Ifthenumberofblocksneededoverflowstheavailableoperlcore(e.g.,alargefull matrixcandothis), anonfatal diagnostic message will beoutput ontheSystem Output File andprocessing forthatmatrix will bEterminated. Theusermaydecrease NLbyadding a Case Control CardLINE=NLasameans ofovercoming thisrestriction (printer only). Since thetypeofmatrix forwhich oneisinterested inseeing thetopology isusually sparse and atleast partially banded, thisrestriction should notprove serious. 4.74.10 Diagnostic Messages Diagnostic conditions detected bySEEMAT arenonfatal andresult inappropriate error messages andtermination oftheprocessing ofthecurrent input matrix datablock. Theone exception isthecondition ofnoopencoreforGIN_buffers, which should notoccur inpractice. 4.74-5 (12-I-69)\nOUTPUTMODULE TABPT(TABLEPRINTER) 4.75OUTPUTMODULE TABPT(TABLE PRINTER) 4.75.1 Entry Point: TABPT. 4.75.2 Purpose Toprinttabledatablocks. 4.75.3 DMAPCallin9Sequence TABPT TAB1,TAB2,TAB3,TAB4,TAB5// $ 4.75.4 InputDataBlocks TAB1-AnyNASTRAN datablock. TAB2-AnyNASTRAN datablock. TAB3-AnyNASTRAN datablock. TAB4-AnyNASTRAN datablock. TAB5-AnyNASTRAN datablock. Not___ee:Anyorallinputdatablocks canbepurged. 4.75.5 Eachword inadatablock isidentified asreal, BCD,orinteger andprinted onthesystem output file. Thetrailer dataisalsoprinted. 4.75.6 Parameters None. 4.75.7 Method Subroutine TABPRT iscalled foreachnon-purged input file. 4.75.8 Subroutines TABPRT -Seesubroutine description, section 3.4.29. 4.75-I\nOUTPUT MODULE PRTMSG (MESSAGEWRITER) 4.76OUTPUT MODULEPRTMSG (MESSAGE WRITER) 4.76.1 Entry Point: PRTMSG 4.76.2 Purpose Toprocess adatablock ofuser-oriented messages. 4.76.3 DMAPCalling Sequence PRTMSG MSG// $ 4.76.4 Input DataBlocks MSG-Messages tobeprinted (ifpurged, nothing isdone). 4.76.5 Output DataBlocks None 4.76.6 Parameters None 4.76.7 Method Inaddition tomessages, theMSGdatablock maycontain titles andsubtitles. Before thefirst message isprinted, anewpage isstarted. Fromthenon,amessage count ismain- tained soastostart another newpagewhen themaximum number oflines perpage isexceeded. messages areassumed tobeonlyonelinelong. However, there islogic included toprovide formessages ofmore thanoneline, forcing anewpageatanytime, andthealteration of titles andsubtitles atanytime. Thedescription below ofsubroutine WRTMSG details allthe included logic capability. 4.76.8 Subroutines PRTMSG usestheutility routines EJECT andFREAD (seesections 3.4.62 and3.4.15). 4.76.8.1 Subroutine Name: PRTMSGAll 4.76-I\nMODULE FUNCTIONAL DESCRIPTIONS I.EntryPoint: PRTMSG 2.Purpose: Toprinttheusermessages intheMSGdatablock. 3.Calling Sequence: CALLPRTMSG C_MM@N/_UTPUT/TITLE(32,6) -See_UTPUT miscellaneous tabledescription insecticn 2.5. Where: TITLE 4.Method: 4.76.8.2 I. 2. 3.=NASTRAN title, subtitle, label, andthreeextrasubtitles. OpentheMSGdatablock, andskiprecord O.IftheMSGdatablockdoesnot exist, nothing elseisattempted. Otherwise, thethreeextrasubtitles aresettoall blanks, andWRTMSG iscalled. Subroutine Name: WRTMSG (General purpose subroutine) EntryPoint: WRTMSG Purpose: Toprocess adatablockofuser-oriented messages. Calling Sequence: CALLWRTMSG (HSG) C_MM_N/SYSTEM/ -SeeSYSTEM tabledescription insection 2.4.1.8. Where: MSG=GIN_filenameoftherISGdatablock. andin/SYSTEM/ MAXLIN =Maximum number oflinespermitted perpage. COUNT =Number oflinesthusfarprinted onthecurrent page. 4.Method: a.Savethecurrent NASTRAN title, subtitle, andlabel. Forcethefirstmessage tostartonanewpage(COUNT=MAXLIN). b.Readoneword(N)fromMSG. Ifanend-of-record condition occurs, forcethe firstmessage inthenextrecord tostartonanewpage(C_UNT=MAXLIN). Then repeat thisstep. c.IfN\u003cO,thenext32wordsareassumed tobeareplacement forTITLE (I-32,N). Forcethenextmessage tostartonanewpage(COUNT=MAXLIN). Repeat stepb. 4.76-2\nOUTPUTMODULEPRTMSG(MESSAGEWRITER) d.IfN\u003eO,alist andformat follow. Thenext Nitems areassumed tobe thelist items. IfIC=O,only aformat follows. e.Read oneword (NF) from MSG. IfHF\u003cO,NF=number oflines tobegenerated bythis message (repeat this step). IfNF=O,this message will beprinted starting onanewpage (C_UNT=MAXLINo repeat this step). Unless otherwise instructed, this subroutine assumes that each message will generate only lline ofoutput. Ineither case, integer function EJECT iscalled tomaintain thepage line count. Ifthis message will notfitonthis page, anyextra title(s) explicitly specified areprinted below theNASTRAN title, subtitle, andlabel. f.IfNF\u003eO,NF=size oftheformat (the format must beacontinuous string of characters, contrary totheusual r_STRAN method ofspecifying atmost 4characters per word). Thenext NFwords areassumed tobetheformat tobeused with thelist items read instep d,inonethefollowing F_RTRAN statements: W_ITE (M_,F_R) [ifnolist isspecified]. or WRITE (M_,F_R) (LIST(1), I=I,N) Repeat stepb. g.WhentheendoftheMSGdatablock isencountered instepb,theNASTP_N title, subtitle, andlabelarerestored, andtheMSGdatablockisclosed witharewind. 5.Design Requirements: a.Themessage datablock(HSG)mustbeopened before calling WRTMSG. b.Ingeneral, asetofmessages isonerecord ofthedatablock. Eachsetof messages willstartonanewpage. 4.76.9 Design Requirements Open core isdefined at/XXPMSG/,andisused only foroneGIN_ buffer which isdefined atthebeginning ofopen core. 4.76-3\nOUTPUTMODULE PRTPARM(PARAMETER ANDDt\u0026PMESSAGE PRINTER) 4.77 OUTPUTMODULE PRTPARM(PARAMETER ANDDMAPMESSAGE PRINTER) 4.77.1 Entr_Point: PRTPRH 4.77.2 Purpose Toprint parameter values andDMAPmessages. 4.77.3 DMAP Callin9 Sequence PRTPARM //C,N,/C,N,B $ 4.77.4 Input DataBlocks None 4.77.5 Output DataBlocks None 4.77.6 Parameters -Integervalue (nodefault value) B-BCDvalue (default value =XXXXXXXX) 4.77.7 Method Asaparameter printer, use_=O.There aretwooptions: I.B=parameter namewill cause theprintout ofthevalue ofthatparameter. Example: PRTPARM //C,N,O/C,N,LUSET $ 2.B=XXXXXXXX will cause theprintout ofthevalues ofall parameters inthe current XVPS. Since this isthedefault value, itneednotbespecified. Example: PRTPARM //C,N,O$ AsaDMAPmessage printer, use__O.There aretwooptions: I._\u003e0causes theprintout ofthejthmessage o2category Bwhere j=I_IandBisone ofthevalues shownbelow. (Thenumber ofme_sages available ineach category isalso shown). Example: PRTPARM //C,N,I/C,N,DV_P $ 4.77-I\nMODULE FUNCTIONAL DESCRIPTIONS 2.\u003c0causes thesameaction as\u003e0withtheadditional action ofprogram termination. Thus,PRTPARM maybeusedasafatalmessage printer. Example: PRTPARM //C,N,-2/C,N,PLA $ 4.77.8 Remarks I.is avalue. 2. TABLEOF_CATEGORY VALUES Rigid Format Static Analysis Static Analysis withInertia Relief Normal ModeAnalysis Static Analysis withDifferential Stiffness Buckling Analysis Piecewise Linear Analysis Direct Complex Eigenvalue Analysis Direct Frequency andRandom Response Direct Transient Response Modal Complex Eigenvalue Analysis Modal Frequency andRandom Response ModalTransient Response DMAPNumber of ValueofBeta Messages STATICS 4 INERTIA 4 M_DES 4 DIFFSTIF 6 BUCKLING 7 PLF_ 6 DIRCEAD 5 DIRFRRD 6 DIRTRD 5 MDLCEAD 6 MDLFRRD 7 MDLIRD 7 DMAP 1 3.Fordetails onerrormessages fortheithRigidFormat seesection 3.(i+I).2 intheUser’s Manual. 4.77.9 Subroutines PRTPRM hasnoauxiliary subroutines. 4.77-2\nOUTPUT MODULE PRTPARM (PARAMETER ANDDMAPMESSAGE PRINTER) 4.77.10 DiaBnostic MessaBes Values of_andBinconsistent with theabove under “Method” will result indiagnostic messages fromPRTPARM. 4.77-3\n4.78 4.78.1 4.78.2 4.78.4MATRIX MODULE ADD(ADD’TWO MATRICES) MATRIX MODULE ADD(ADD TWOMATRICES) Entry Point: DADD Purpose Tocompute [C]=_[A]+B[B]. 4.78.3 DMAPCalling Sequence ADDA,B/C/C,Y,#LPHA=(I.O,2.0)/C,Y,BETA=(3.0,4.0) $ InputDataBlocks A-Anymatrix B B-Anymatrix #A Not____ee: Aand/or Bcanbepurged. 4.78.5 Output DataBlocks C-Matrix. ThetypeofCismaximum ofthetypesofA,B,6,B. ispresent. Otherwise itisthatofB. Note: Ccannot bepurged. 4.78.6 Parameters ALPHA -Input-complex-no default value. BETA -Input-complex-no default value. Note: IfIm() orIm(B) 4.78.7 _thodTheshapeofCistheshapeofAifA This isthescalar multiplier forA. This isthescalar multiplier forB. =0.0, theparameter will beconsidered real. If[A]isnotpurged, thenumber ofcolumns, rows,andformof[C]=number ofcolumns, rows, andformof[A].Otherwise the[B]descriptors areused. ThetyDeof[C]isthemaximum compatible typeof[A],[B],ALPHA andBETA. ALPHAandBETAareassumed toberealiftheir imaginary partsarezero. 4.78-I (8/1/72)\nMODULEFUNCTIONAL OESCRIPTIONS 4.78.8Subroutines ADD-Seesubroutine description, Section3.5.10. 4.78.9DesignRequirements Opencoreisdefinedat/DADDA/. 4.78.10 Diagnostic Messages None. 4.78-2 (8/I/72)\nMATRIX MODULE MPYAD (MULTIPLY ADD) 4.79MATRIXMODULE MPYAD(MULTIPLY ADD) 4.79.1 EntryPoint: DMPYAD 4.79.2 Purpose MPYAD performs themultiplication oftwomatrices and,optionally, addition ofathird matrix totheproduct: [D]=[ALIBI _[C] 4.79.3 DMAPCalling Sequence MPYAD A,B,C/D/C,N,T/C,N,SIGNAB/C,N,SIGNC/C,N,PREC 4.79.4 Input DataBlocks A-Lefthandmatrix inthematrix product [A][B] B-Right handmatrix inthematrix product [A][B] C-Matrix tobeadded to[A][B] ,,ut:s. I. 2. 3. 4.79.5 D Note: Dmaynotbepurged. 4.79.6 ParametersIfnomatrix istoadded, Cmustbepurged. A,B,Cmustbephysically aifferent datablocks. AandBmustnotbepurged. 4.Either AorB(butnotboth) maybeaNASTRAN diagonal matrix. Cmustbepurged. Output DataBlock -Matrix resulting fromtheMPYAD operation. -Integer-input-no default.Inthiscase, I,perform [A]T[B]=O,perform [A][B] 4.79-I\nSlGNAB SlGNC PRECMODULE FUNCTIONAL DESCRIPTIONS Integer-input-no default. Integer-input-no default.SIGNAB SIGNC PREC Integer-input-no default.+ll,perform [A][B]=-,perform -[A][B] I+ll’add[c]=-,subract [C] Cl,elements of[D] willbeoutput in :_single-precision. 2,elements of[D] willbeoutput in double-precision. 4.79.7 Examples I.[D]:[A][B]+[C](Ddouble precision) MPYAD A,B,C/D/C,N,O/C,N,I/C,N,2 $ 2.[D]=[A]T[B] -[C](Dsingle precision) MPYAD A,B,C/D/C,N,I/C,N,I/C,N,-I/C,N,I 3.[D]=-[A][B] (Ddouble precision) MPYAD A,B,/D/C,N,O/C,N,-I/C,N,O/C,N,2 4.79.8 Method DMPYAD reads thetrailers forthedatablocks A,BandC./MPYADX/isinitialized. If neither [A]nor[B]isdiagonal, MPYAD iscalled, thetrailer forDiswritten, andthemodule exits. Otherwise, /DMPYX/isinitialized, andDMPYiscalled toperform thediagonal multiplication. Ifthematrix [C]ispresent, /ADDX/isinitialized, andADDiscalled toperform thematrix addition. Thetrailer forDiswritten andthemodule exits. 4.79.9 Subroutines DMPYAD calls thefollowing matrix operations: MPYAD (seesection 3.5.12 fordetails) DMPY (seesection 3.5.21 fordetails) ADD (seesection 3.6.10 fordetails) 4.79.10 Design Requirements 4.79.10.I Allocation ofcorestorage 4.79-2\nMATRIXMODULEMPYAD(MULTIPLYADD) Seedescriptions forMPYAD,DMPYandADD. 4.79.10.2 Environment Themodule MPYAD consists ofonesubroutine, DMPYAD. Onescratch fileisused. Three common blocks define opencore, oneforeachofthethree overlay segments containing the matrix operations: /MPYAID/included atendofsegment containing MPYAD. /MPYA2D/included atendofsegment containing DMPY. /MPYA3D/included atendofse§ment containing ADD. 4.79-3\nMATRIX MODULE S_LVE(SOLVES THEMATRIX EQUATION [A][X]=[B]) 4.80 MATRIX MODULE S_LVE (SOLVES THEF,_TRIX EQUATION [A][X] :[B]) 4.80.1 Entry Point: S_LVE 4.80.2 Tosolvethematrix equation, [A][X]:±[B] 4.80.3 A B Not__ee:DMAPCalling Sequence 4.80.4S_LVE A,B/X/V,Y,SYM/V,Y,SIGN/V,Y,PREC/V,Y,TYPE Input Data Blocks -Asquare realorcomplex matrix. -Arectangular matrix. 4.80.5 4.80.6IfBispurged, theidentity matrix isassumed. Output DataBlocks X Arectangular matrix. Parameters SYM-Input-integer-default =0 SIGN -input-integer-default =l PREC-Input-integer-default :1 TYPE -Input-integer-default =lli-useunsymmetric decompositionusesymmetric decomposition.\ntrysymmetric decomposition, use unsymmetric if[A]issingular. Ii-solve [A][X] :[B]- solve [A][X] -[B] Il-usesingle precision arithmetic2-usedouble precision arithmetic l-output typeofmatrix [X]isreal single precision 2-output typeofmatrix [X]isreal double precision(i) 4.80-I MODULE FUNCTIONAL DESCRIPTIONS 3-output typeofmatrix [X]iscomplex single precision 4-output typeofmatrix [X]iscomplex double precision 4.80.7 Method Depending upontheSYHflagandthetypeof[A],either SDC_MP CDC_MP, orDECAMP iscalled toform FBSorGFBS iscalled tosolve and 4.80.8 Subroutines[A]=[L][U] . [L][Y] :_[B], [U]EX] =[Y] Theabove mentioned subroutines aretheonlyonescalled byS_LVE andaredocumented insection 3.5. 4.80.9 Design Requirements Theappropriate subroutines should bereferenced forthedesign requirements peculiar toeach routine. 4.80.I0 Diagnostic Messages Theindividual routines should bereferred tofordiagnostic messages.(2) (3) (4) 4.80-2"},"title":"Programmer's Manual P60"},"/docs/programmers/programmers_manual_061/":{"data":{"":"MATRIXMODULEDECAMP(ATRIXDECOMPOSITION) 4.81MATRIXMODULEDECAMP(MATRIXDECOMPOSITION) 4.81.1Entr Point:DDC_MP 4.81.2 Purpose Todecompose asquarematrix [A]intolower [L]andupper [U]triangular factors. 4.81.3 DMAPCalling Sequence DECAMP A/L,U/V,Y,KSYM/V,Y,CH_LSKY/V,N,MINDIAG/V,N,DET/V,N,P_WER/V,N,SING $ 4.81.4 4.81.5Input DataBlocks A -Asquare matrix. Output DataBlocks L -Lower triangular factor of[A]. U -Non-standard upper triangular factor of[A]. 4.81.6 Parameters KSYM -Input-integer-no default, l,usesymmetric decomposition. O,use unsymmetric decomposition. CH_LSKY -Input-integer-default =O.l,useCholesky decomposition. O,donotuse Choleskydecomposition. -Output-real-no default. Theminimum diagonal termof[U]. -Output-complex single precision-no default. Thescaled value ofthe determinant of[A]. Output-integer-no default. Integer P_WER oflObywhich DETshould bemultiplied toobtainthedeterminant of[A]. Output-integer-no default. SING issetto-Iif[A]issingular.MINDIAG DET P_WER SING 4.81.7 Method Depending uponthetypeof[A]andtheKSYMflag, acalling sequence issetup,andeither 4.81-I\nMODULE FUNCTIONAL DESCRIPTIONS CDCOMP, DECAMP, orSDC_MP iscalled. 4.81.8 Subroutines Themajorsubroutines usedareDECOMP, CDCOMP andSDC_MP. Descriptions ofthesesub- routines canbefoundinsections 3.5.15, 3.5.16, and3.5.14 respectively. 4.81.9 Design Requirements Theindividual subroutine writeups should beconsulted fortheparticular restrictions ofeachroutine. 4.81.10 Diagnostic Messages Seetheappropriate subroutine descriptions. 4.81-2\nMATRIXMODULEFBS(FORWARD-BACKWARD SUBSTITUTION) 4.82MATRIXMODULE 4.82.1EntryPoint: DFBS 4.82.2 Tosolvetheequation,FBS(FORWARD-BACKWARD SUBSTITUTION) [L][U][X]:±[B] (I) where [L]and[U]aretheupperandlowertriangular factors obtained viamatrix module DECAMP. 4.82.3 DMAPCalling Sequence FBS L,U,B/X/C,N,A/C,N,B/C,N,C/C,N,D 4.82.4 InputDataBlocks$ L,U -Matrices output frommodule DECAMP. B -Rectangular matrix. 4.82.5 Output DataBlocks X Rectangular matrix. 4.82.6 Parameters D 4.82.7 Methoddefault._l matrix [L][U] issymmetricInput-integer-no •_0matrix [L][U] isunsymmetric default\" 1lsolve [L][U][X] =[B]Input-i nteger-no -lsolve [L][U][X] -[B] default.i l-usesingle precision arithmeticInput-integer-no 2usedouble precision arithmetic Input-integer-no default.ll -output [X]insingle precision i K2 output [X]indouble precision Depending upon thevalue oftheparameter A,either FBSorGFBS iscalled. 4.82-I\nMODULE FUNCTIONAL DESCRIPTIONS 4.82.8 Subroutines Theaboveroutines aretheonlyonescalled byDFBS.Theirdescriptions aregivenin sectiot_ 3.5.17 forFBSand3.5.19forGFBS. 4.82.9 DesignRequirements Theappropriate routines shouldbereferenced fortheirindividual requirements. 4.82.10 Diagnostic Messaqes Theindividual subroutines should bereferred toforthemessages. 4.82-2\n4.83 4.83.] 4.83.2MATRIX MODULE PARTN(PARTITION AMATRIX) MATRIX MODULE PARTN (PARTITION AMATRIX) Entry Point: PARTNI Purpose Topartition [A]into[All], [Al2], [A21] and[A22]: LAI2,A22_J 4.83.3 DMAPCalling Sequence PARTN A,RP,CP/AII ,Al2,A21 ,A22/V,Y,SYM/V,Y,TYPE/V,Y,FORMl/V,Y,F9RM2/V,Y,F_RM3/V,Y,F_RM4 $ 4.83.4 Input DataBlocks A-Matrix tobepartitioned. RP-Rowpartitioning vector -single precision column vector. CP-Column partitioning vector -single precision column vector. Notes: I. 2.IfAispurged, PARTN returns. IfRPispurged, Aispartitioned asfollows: LA123 3.IfCPispurged andSYM\u003e O,Aispartitioned asfollows: [A]==\u003e[Alli A21]. 4.IfCPispurged andSYM(O,Aispartitioned asfollows: LAI2 ‘A22_I where RPisusedasboththerowandcolumn partitioner. 5.RPandCPcannot bothbepurged.(2) (3) (4) 4.83-I (811/72)\n4.83.5 Output DataBlocks All-Partition ofA. Al2-Partition ofA. A21-Partition ofA. A22-Partition ofA. Notes:MODULE FUNCTIONAL DESCRIPTIONS 4.83.6 SYMI.Anyoralloutput datablocks canbepurged. 2.Fortheshapeofoutputs (number ofrowsandcolumns) seesection 4.83.7 below. Parameters Input-integer-no default. SYMchooses between asymmetric partition andan unsymmetric partition. IfSYM_O,CPisusedasRP. distinct. TYPE-Input-integer-no default. TYPEofoutput matrices. F_RMI-Input-integer-no default. FormofAll. F_RM2-Input-integer-no default. FormofAI2. F_RM3-Input-integer-no default. FormofA21. F_RM4-Input-integer-no default. FormofA22. 4.83.7 Method LetN1=number ofnon-zero termsinRP. LetN2=number ofnon-zero termsinCP. LetNR_WA=number ofrowsinA. LetNC_LA=number ofcolumns inA. CASE:I RPpurged. Allisa(NR@WA-N2) xNC_LAmatrix. AI2isaN2xNC_LAmatrix. A21isnotwritten. A22isnotwritten.IfSYM\u003eO,CPandRPare 0\u003cTYPE_4. 4.83-2 (311/71)\nr_TRIX MODULE PARTN (PARTITION AMATRIX) CASE2:CPpurged andSy_!\u003eO. AllisaNR_WAx(NCOLA -NI)matrix. AI2isnotwritten. A21isaNR_JAxN1matrix. A22isnotwritten. CASE3:CPpurged andSYM_O. Allisa(NR_WA -NI)x(NCBLA -NI)matrix. AI2isaN1x(NC_LA -NI)matrix. A21isa(NROWA -NI)xN1matrix. A22isaN1xN1matrix. CASE4:Neither RPnorCPpurged. Allisa(NR_WA -N2)x(NC_LA -NI)matrix. AI2isaN2x(NC_LA -NI)matrix. A21isa(NR_WA -N2)xN1matrix. A22isaN2xN1matrix. Ingeneral ifa..[A],then:13 aij[All] ifRP(J)=CP(1)=0 aijE[AI2]ifCP(1)tO,RP(J)=0 aijc[A21]ifCP(1) =O,RP(J)#0 aijE[A22]ifCP(1) _O,RP(J)#0 4.83.8 Subroutines 4.83.8.1 Subroutine Name: PARTN2 I.EntryPoint: PARTN2 2.Purpose: Initialization routine forPARTNI andMERGE1. ItcallsPARTN3 tobuild thebitstrings fromthepartitioning vectors CPandRPandsetsdefault options based onSYM. 4.83-3 (811172)\nMODULEFUNCTIONAL DESCRIPTIONS 3,CallingSequence: CP= RP= CORE= BUF:CALLPARTN2 (CP,RP,C_RE,BUF) GINOfilenameofcolumn partitioning vector GINOfilenameofrowpartitioning vector Location offirstwordopencore Location ofGIN_buffer. 4.83.8.2 Subroutine Name: PARTN3 l• 2. 3.EntryPoint: PARTN3 Purpose: Builds bitstrings asdirected byPARTN2. Calling Sequence: CALLPARTN3 (FILE,SIZE,ONES,IZ,NZ,HERE,BUF,CORE) FILE=GINOfilename SIZE=Length ofpartitioning vector _NES=Number ofnon-zero termsinvector IZ=Pointer toworking core NZ=Length ofworking core HERE=Logical Flag BUF=Location ofGIN_buffer CORE=Location ofopencore 4.83.9 Design Requirements Opencoreisdefined at/PARTNI/. 4.83.10 Diagnostic Messages Messages 2166,2167,2168,2169,2170,2171,2172,2173,2174,2175, 2176,3002,and3008may beissued. 4.83-4 (8/I/72)\n4.84 4.84.1 4.84.2MATRIX MODULE )ERGE (FIERGE MATRICES TOGETHER) MATRIX MODULE MERGE (MERGE MATRICES TOGETHER) [A]\u003c:LAI2 -A]“Entry Point: MERGEI P r ose Toform 4.84.3 DMAPCalling Sequence MERGE All,A12,A21,A22,RP,CP/A/V,Y,SYM/V,Y,TYPE/V,Y,FBRM 4.84.4 Input DataBlocks 4.84.5All Al2- A21 - A22 - RP- CP- Notes: I. 2. 3. A ;_otes:Matrix _AI2,A21,A22. Matrix _All, A21,A22. Matrix #All,AI2,A22. Matrix _All,Al2, A21. Rowpartitioning vector -single precision vector. Column partitioning vector -single precision vector. AnyorallofAll,Al2,A21,A22canbepurged which implies [AIJ] =[0]. RPandCPcannot bothbepurged. Seemethod section formeaning whenRPorCPispurged. Output DataBlocks -Merged matrix fromAll,AI2,A21,A22. Acannot bepurged.(1) 4.B4-1(811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.84.6 Parameters SYM TYPE F_RM- 4.84.7 MethodInput-integer-no default. SYM_0,CPisusedasRP.SYM\u003eO,CPandRPare distinct. Input-integer-no default. TypeofA.1implies Aisrea]single precision, 2implies Aisrealdouble precision, 3implies Aiscomplex single precision, 4implies Aiscomplex double precision. Input-integer-no default. FormofA(seesection 2.2). MERGE istheinverse ofPARTNinthesensethatifAll,AI2,A21,A22wereproduced by PARTNusingRP,CP,F_RM,SYM,andTYPEfromA,MERGEwillreproduce A.SeePARTN(section 4.83)foroptions onRP,CPandSYM. 4.84.8 Subroutines Subroutines PARTN2 andPARTN3 areused. 4.84.9 Design Requirements Opencoreisdefined at/MERGE1/.Theseroutines aredescribed inSection 4.83. 4.84.10 Diagnostic Messaqes Messages 2161,2162,2163,2164,2!70,217l,2172,2173,2174,2175,2176, 3002,and3008 maybeissued. 4.84-2 (8/I/72)\nMATRIX MODULE TRNSP (TRANSPOSE AMATRIX) 4,85 MATRIX MODULE TRNSP (TRANSPOSE AMATRIX), 4.85.1 Entry Point: DTRANP 4.85.2 Purpose Toform [A]Tgiven [A]. 4.85.3 DMAPCalling Sequence TRNSP A/AT $ 4.85.4 Input DataBlocks A-Anymatrix datablock. Note: If[A]ispurged, TRNSP returns. 4.85.5 ]utput Data Blocks AT-Thematrix transpose of[A]. Note: ATcannot bepurged. 4.85.6 Parameters None. 4.85.7 Method Subroutine TRNSP iscalled. 4.85.8 Subroutines TRNSP -Seesubroutine description, section 3.5,25. 4.85.9 Design Requirements Open coreisdefined at/DTRANX/.Eight scratch files areused. 4.85-I\n4.86 4.86.1 4.86.2MATRIX MODULE SMPYAD (STRING MULTIPLY ADD) MATRIX MODULE SMPYAD (STRING MULTIPLY ADD) Entry Point: SMPYAD Purpose Tomultiply aseries ofmatrices together. 4.86.3 DMAPCalling Sequence SMPYAD A,B,C,D,E,F/G/C,N,N/C,N,SIGIIX/C,N,SIGNF/C,N,PG/C,N,TA/C,N,TB/C,N,TC/C,N,TD $ 4.86.4 Input DataBlocks A B C D E F- Notes:Upto5matrices tobemultiplied together, from lefttoright. Matrix tobeadded totheabove product. I.Ifoneofthefivemultiplication matrices isrequired intheproduct (see parameter “N\"below) andispurged, themultiplication will notbedone. 2.IftheFmatrix ispurged, nomatrix will beadded totheproduct. 4.86.5 Output DataBlocks G-Resultant matrix (maynotbepre-purged). 4.86.6 Parameters N SIGNX SIGNF PG-Number ofmatrices involved intheproduct -integer -input. -Sign oftheproduct matrix (e.g., [A][B][C][D][E]) -integer -input. lforplus,-1forminus. -Slgnofthematrix tcbeadded totheproductmatrix -integer -input. lforplus, -Iforminus. -Output precision ofthefinal result -integer -input. lforsingleprecision, 2fordouble precision. 4.86-I\nMODULE FUNCTIONAL DESCRIPTIONS TA1TB- TC TD Note: l. 2. 3. 4.Transpose indicators forthe[A][B][C] and[D]matrices (Iiftransposed matrixtobeusedintheproduct; 0ifuntransposed) -integer -input. Alltheparameters except “N\"havedefault values. Theyarethese: SlGIIX=1(signofproduct isplus) SIGNF:1(signofaddedmatrix isplus) PG=1(single precisior_ result) TA1TB = TC TD0(useuntransposed [A],[B],[C],and[D]matrices intheproduct) 4.86.7 Method Themethod isthesameasfortheMPYADmodule withoneexception andoneaddition: I.Noneofthematrices maybediagonal. 2.Except forthefinalproduct, allintermediate matrix products aregenerated indoubleprecision. Thematrices aremultiplied together fromright-to-left, i.e.,thefirstproduct calculated istheproduct ofmatrix n-IanGmatrix n. 4.86.8 Subroutines MPYADiscalled (seesection 3.5.12 fordetails). 4.86.9 l° 2.Design Requirements Twoscratch filesarerequired. Opencoreisthe/MPYADX/ common block, thesameoneasusedbytheMPYADmodule, (seesection 4.79). 4.86-2\nSTRUCTURAL ELEHEt_T DESCRIPTIONS 4.87 STRUCTURAL ELDiENT DESCRIPTIONS Thefinite structural element subroutines usedinHASTRAN haveanumber ofdifferent calcu- lations associated withthem. Thesesubroutines arefoundinthemodules DIAl,S_IA2,SSGI,SDR2, DSHGI, PLA3andPLA4. Allmodules excluding IFPhaving anything todowiththeNASTRAN structural elements, their geometry, orassociated datablocks, usethebasicelement datafoundincommon block/GPTAI/. /GPTAI/ issetinitsownblockdatasubprogram, and/or by(inthepresence ofdummy-user-eleraents) theroutine DELSET. RefertoSection 2.5.2.1 forfurther information regarding /GPTAI/. Theelement subroutines intheSHAI(Structural Hatrix Assembler -PhaseI)module generate elen._nt stiffness matrix partitions. Thestiffness matrix, [K],forastructural element consists ofa6by6partition foreachcombination oftheconnected gridpoints. Fore\u003eample, aR_D element isconnected totwogridpoints, “a\"and\"b”.Thestiffness matrix partitions are”[I(a], [Kab], [Kba]and[Kbb].Atriangular element (e.g., TRrlEM) isconnected tothreepoints. It’,Jill generate ninepartitions: [Kaa], [Kab], [Kac], [Kba], [Kbb], [Kbc], [Kca], [Kcb]and[Kcc]. In ordertogenerate aparticular partition, [Kij], itisoftennecessary togenerate [K].However, onlythosepartitions [Kij], where iisthepivotpoint(seesection 1.8)andj=1,2…..n(n beinqthenumber ofgridpoints associated withtheelement), areoutput byanelehent stiffness matrix generation subroutine, e.g., KRI_D. Thesepartitions areoutput fromanelenent subroutine intheformofcallstothe\"insertion” subroutine SI’IAIB(seeSection 4.27). Thereisonecall foreach6by6partition iftheelement isastructural element, andonecallforeach1by1 “partition” iftheelement isascalar element. Theunused partitions arerecalculated andused whenj#iappears asapivotpointinasubsequent ECPTrecord. Analternate procedure for matrix generation, which isnotused,wouldbetocalculate alloftheelement matrices onceand storethemonanauxiliary storage unitforusewhenneeded. Thealternate procedure isless efficient forlargeproblems, where efficiency really counts, because therecalculation timeis lessthanthetimerequired torecover element matrices fromtheauxiliary unit. Element structural damping matrices, [K4],areproportional totheelement stiffness matrices, theproportionality constant beingge’thestructural damping coefficient inputonamaterial (e.g., MAT1)bulkdatacard. Anelement stiffness matrix generation routine, e.g., KRfSD,of module SMAIwilloutput, through thecalling sequence tosubroutine SMAIB” I)anelement stiffness 4.87-] (8/1/72)\nMODULEFUNCTIONAL DESCRIPTIONS matrixpartition, 2)thestructural dampingcoefficient, and3)aflag,whichwillsignalSMAIB thatthescalarmultiplication ofthematrixbythestructural dampingcoefficient istotake place. Theelementsubroutines (e.g.,MR_D,MC_NMX)intheSMA2(Structural MatrixAssembler-Phase 2)modulegenerateelementmassmatrixpartitions. Theremarksinthethirdparagraphabove concerning elementstiffnessmatrixpartitions applyherealsowhenthereadermakesthesubsti- tutions:“mass\"for\"stiffness”, “[M]“for”[K]”,“MR_D\"for\"KR_D”,and\"SMA2B\"for\"SMAIB\". OnlytheelementVISCandDAMPigenerateviscousdampingtermswhichcontribute tothe dampingmatrix,[Bgg],andconversely, theonlyelementswhichcontribute to[Bgg]aretheVISC andDAMPielements. Thesetermsarecalculated inmoduleSMA2.Thedampingmatrixpartitions arepassedtosubroutine SMA2Binafashionsimilartothatformassmatrixpartitions. Elementstaticloadingfunctionsduetotemperature andenforceddeformations aregenerated intheSSGI(StaticSolutionGenerator-PhaseI)module,andthemathematical descriptions for thesefunctionsaregiveninthisSection(4.87).(SeetheModuleFunctional Description for SSGI,Section4.41,fortheequationsgoverningdirectappliedloadsandgravityloads.)The outputofanelementroutineareloadvectorswhichareplacedinthe{Pg}loadvector(see Section4.41). Elementstressesandforcesduetodisplacements arecalculated intheSDR2(StressData Recovery-Phase2)module.Thesecalculations areperformedintwophases.Phase1generates elementstressmatricesforeachelementforwhichtheuserhasrequested element stress and/or forceoutput. Theseelement stress matrices arewritten onascratch fileforuseinphase2. Inphase2,thedisplacement vector forthecurrent subcase isreadintocore,and,foreach element forwhich stress and/or forceoutput isrequested, thecorresponding element stress matrix isreadandpassed tothephase2element subroutine. Thephase2element subroutine then calculates element stresses andforces. Alistofthestresses andforces output inphase2for eachelement isgiveninSections 2.3.51 and2.3.52 respectively. Differential stiffness matrix partitions arecalculated forsomeelements. Thesearecalcu- latedinmodule DSMGI(Differential Stiffness Matrix Generator -PhaseI)forlargedisplacement analysis andbuckling problems. Theoutput ofanelement routine oftheDSMGImodule arethe 6by6differential stiffness matrix partitions, [K_j], where iisthepivot point. The\"insertion\" subroutine formodule DSMGI, similar tosubroutine SMAIBofmodule SMAI, isDSIb. 4.87-2 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS Nonlinear, plasticeffectsinthestructuremaybedetermined bysolvingfortheelement stressandmodifyingtheelasticproperties ofanelementinaniterativeloop.Elementstresses arecalculated inthePLA3(Piecewise LinearAnalysis-Phase3)module,andelementstiffness matriceswithmodifiedelasticproperties arecalculated inthePLA4(Piecewise LinearAnalysis- Phase4).Theoutputsofanelementsubroutine ofthePLA3moduleare:I)elementstresses, whichhavethesameformatsastheelementstressesoutputfromaphase2elementsubroutine of moduleSDR2,and2)updatedincremental stressdataintheESTNLIdatablock,whichareusedas inputtothePLA3moduleinthenextpassofthePiecewiseLinearAnalysis(PLA)RigidFormat DMAPloop.Theoutputsofanelementsubroutine ofthePLA4moduleare:I)elementstiffness matrixpartitions (theremarksonelementstiffnessmatrixpartitions inthesecondparagraph applyhereaswell,exceptthatthe\"insertion\" subroutine isPLA4B)and2)updatedincremental stressdataintheECPTNLIdatablock,whichareusedasinputtothePLA4moduleinthenextpass ofthePLARigidFormatDMAPloop. Thefollowingdataareneededtogeneratetheelementmatricesintheabovemodules. I.ElementConnection andProperties Table(ECPT)Data. 2.Transformation matrices,[Ti],fromtheglobalcoordinate systemtothebasiccoordinate system. 3.MaterialPropertyData. 4.ElementDeformation Data(usedonlyinmodulesSSGI,SDR2andDSGMI). 5.GridPointTemperature Data(usedonlyinmodulesSSGI,SDR2andDSGMI). TheECPTdataareinputtoanelementsubroutine byamoduledriverfromtheECPTdatablock ortheEST(ElementSummaryTable)datablock.Thedataineachofthesedatablocksareidentical, fromanindividual elementsubroutine pointofview.TheECPTdatablockisusedinmodulesSMAI, SMA2andDSGMI;theESTdatablockisusedinmodulesSSGIandSDR2.Forthespecialcaseof PiecewiseLinearAnalysis,theECPTNL(ElementConnection andProperties TableforNonlinear Elements)datablockisusedinmodulePLA4,andtheESTNL(ElementSummaryTableforNonlinear Elements)datablockisusedinmodulePLA3.TheECPTandESTdatablocksaregeneratedinthe TableAssembler(TAI)module(seeSection4.26)fromthefollowingdatablocks:ECT(Element Connection Table,Section2.3.4.1),EPT(ElementPropertyTable,Section2.3.2.5),BGPDT(Basic GridPointDefinition Table,Section2.3.3.5),andGPTT(GridPointTemperature Table,Section 2.3.7.2). 4.87-3(8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS TheECPTdataforanelementconsistoffourseparate parts: I)connection data2)property data, 3)basicgridpointdefinition dataand4)theelement temperature formaterial properties. Theconnection dataconsists ofdataonaconnection bulkdatacard(e.g., CR_D), except forthe property identification number (theproperty identification number ontheconnection andproperty cardsisusedonlytorelate thetwocardsduring theassembly oftheECPTandESTdatablocks, anditdoesnotappear ineither theconnection dataorproperty data). Notealsothatgridpoint identification numbers havebeenconverted tointernal numbers, Scalar IndexList(SIL)numbers, which correspond todegrees offreedom numbers. Property dataconsist ofdataonaproperty bulk datacard(e.g., PROD)withtheabovenotedexception. Basicgridpointdefinition dataconsist of,foreachgridpointconnecting theelement, l)theidentification number ofthecoordinate system inwhichdisplacements aredefined atthegridpointand2)thecoordinates ofthegrid pointinthebasiccoordinate system. Theelement temperature formaterial properties isthe average valuegivenforeachelement intileGPTTdatablock. Thistemperature isplaced inthe ECPT/EST dataintheTableAssembler module fromtheelement temperatures intheGPTTdatablock andthesetidentification number, n,fromtheTEMPERATURE(MATERIAL) =ncardintheUser’s Case Control Deck. Notethatnistransmitted totheTableAssembler viathetenthwordof/SYSTEM/ (seeSection 2.4.1.8). Thetransformation matrices, [Ti],fromtheglobal coordinate system tothebasiccoordinate system, aresupplies toanelement subroutine bytheutility routines TRANSD andTRANSS. These utility routines usetheCSTM(Coordinate System Transformation Matrices, Section 2.3.3.4) data blockinconjunction withthebasic gridpointdefinition dataatapointitocompute [Ti]. Henceallmodules which dealwithelement calculations require theCSTMdatablock asinput. TRANSD returns, toanelement subroutine, adouble precision matrix, [Ti],usedbyelement routines inthefollowing morl_jlrs w!lichusedouble precision arith_letic: SMAI, SMA2,DSGMIand PLA4;TRANSS returns, toarlelement subroutine, asingle precision matrix, [Ti],usedbyelenlent routines inthefollowing modules whichusesingle precision arithmetic: SSGI,SDR2andPLA3. I,laterial property dataarecontained intheMPT(Material Properties Table, Section 2.3.2.6) andtheDIT(Direct InputTables, Section 2.3.2.7) datablocks. Bothofthesedatablocks are output fromtheIFP(Input FileProcessor) Preface module. Theutility routine MAT(seeSection 3.4.36) fetches required material property dataforelement routines. Tllesedataarereturned insingle precision form. 4.87-4 (8/I/72)\nSTRUCTURAL ELErIENTDESCRIPTIONS Elementdeformation dataarecontainedintheEDT(ElementDeformation Table,Section2.3.2.8) datablockwhichisoutputbytheIFPPrefaceModule.Elementdeformation dataisadmissible only fortheR_D(including C_NR_D),TUBEandBARelements. Elementtemperature dataarecontainedintheGPTT(GridPointTemperature Table,Section 2.3.7.2),whichisoutputbytheGP3(GeometryProcessor-Phase3)module.Thetemperature data containedinthisdatablockareusedforstaticloadingfunctionsduetotemperature. Table1onthefollowingpagegivesreferencetotheTheoretical andUser’sManualswhere moreinformation ontheelementscanbefound. 4.87-5(811172)\nMODULE FUNCTIONAL DESCRIPTIONS TableI.Structural Element References. BulkDataConnection CardMnemonicProgrammer’s Manual ReferenceUser’sManual ReferenceTheoretical Manual Reference CAXIF2 4.87.15 CAXlF3 4.87.15 CAXlF4 4.87.15 CBAR 4.87.2 CC_NEAX 4.87.9 CDAMPI 4.87.7 CDAMP2 4.87.7 CDAMP3 4.87.7 CDAMP4 4.87.7 CELASI 4.87.7 CELAS2 4.87.7 CELAS3 4.87.7 CELAS4 4.87.7 CFLUID2 4.87.15 CFLUID3 4.87.15 CFLUID4 4.87.15 CMASSI 4.87.7 CM#_SS2 4.87.7 CMASS3 4.87.7 CMASS4 4.87.7 CMFREE 4.87.15 C_NMI 4.87.8 C_NM2 4.87.8 C_NR@D 4.87.1 CQDMEM 4.87.4 CQDPLT 4.87.5 CQUADI 4.87.6 CQUAD2 4.87.6 CR_D 4.87.1 CSHEAR 4.87.3 CSL_T3 4.87.16 CSL_T4 4.87.16 CT_RDRG 4.87.12 CTRAPRG 4.87.11 CTRBSC 4.87.5 CTRIAI 4.87.6 CTRIA2 4.87.6 CTRIARG 4.87.10 CTRMEM 4.87.4 CTRPLT 4.87.5 CTUBE 4.87.1 CTWIST 4.87.3 CVlSC 4.87.131.8 1.8 1.8 1.3.2 1.3.6 1.3.8 1.3.8 1.3.8 1.3.8 1.3.8 1.3.8 1.3.8 1.3.8 1.7 1.7 1.7 13.8 13.8 13.8 13.8 17 12.3 12.3 13.3 13.5 13.5 13.5 13.5 13.3 13.4 18 18 13.7 13.7 13.5 13.5 1.3.5 1.3.7 1.3.5 1.3.5 1.3.3 1.3.4 1.3.317.1 17.1 17.1 5.2,7.2 5.9 5.6 5.6 5.6 5.6 5.6 5.6 5.6 5.6 16.7 16.1 16.1 5.6 5.6 5.6 5.6 16.1 5.5 5.5 5.2,7.2 5.8,7.3 5.8 5.8,7.3 5.8,7.3 5.2,7.2 5.3 17.1 17.1 5.11 5.10 5.8 5.8,7.3 5.8,7.3 5.8 5.8,7.3 5.8 5.2,7.2 5.3 5.2 Note: Thebulkdataconnection andproperty carddescriptions inSection 2oftheUser’s Manual should alsobeconsulted. 4.87-6 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONs 4.87.l 4.87.1 .l I. SILa,SILb Na’Xa’Ya’Za} Nb’Xb’Yb’Zb MatI.D. A J C t 2.TheR_D,C_NR_D andTUBE Elements Input DatafortheR_D,TUBE, C_NR_D Elements TheECPT/EST entries fortheR_DandC_NR_D are: S_xmbol Description Scalar indices forgridpoints aandb Local coordinate system number andbasic coordinates ofgridpoints Material identification number Cross-section area Polar inertia Nonstructural mass perunitlength Shear stress coefficient Temperature formaterial properties TheTUBE element hasthesamecharacteristics astheRBDexcept fordifferent input properties. TheTUBE hasd,theoutside diameter, andt,thethickness, given. Theconversion toR_Dproperties is: 3.Coordinate system dataA=_(d-t)t J=_A((d-t)2 d C=+t2) Given Na,Xa,Ya’Za’Nb’Xb’YbandZbandtheCSTM (Coordinate System Transformation Matrices) datablock, the3by3global-to-basic coordinate transformation matrices [Ta]and [Tb]arecalculated using theutility routine TRANSU orTRANSS. 4.87-7"},"title":"Programmer's Manual P61"},"/docs/programmers/programmers_manual_062/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS 4.Material data Giventhe\"MATI.D.“andt,thematerial routine, I,T,returns thefollowing data: ].87.1.2E G- p T-o Qe- ot- c_C CrsModulus ofElasticity ShearModulus Poisson’s ratio Density Thermal expansion coefficient Reference temperature Structural damping ratio Stress limit, tension Stress limit, compression Stress limit, shear Stiffness Matrix Calculation (Subroutines KR_DandKTUBEofModule SMAI) l•Calculate thelength ofmember, (4): =V(Xa -Xb)2+(Ya-Yb)2+(Za\"Zb)2 (1) 2.Calculate anormalized direction vector {n}inbasiccoordinates: InlllIXa-Xbln2= YaYb n3 ZaZb(2) 3.Formtheextensional stiffness matrix, [DL]: n_ nln2 nln31 :AEin n2n3i[Dp] – In2n k_nln3n2n3 n_](3) 4.87-8\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.Formthetorsional stiffness matrix [Dr]: [Dr]I wn_ nln2 nln3 = –i1n2 n n2n3 In3 n2n3n2(4) 5.[Ta] and[Tb] aretbematrices which transform displacement components intheglobal coordinate system tothebasic system. 6.Transforming toglobal coordinates andcombining theresults give thepartitions ofthe element stiffness matrix: [kaa] ‘IFT I TaD_Tai 0! |T 0 l DrT nTa a !.(-) [kab]T i TaD£Tb0 0l T 0 iTaDrTb !(6) [kbb] F!;!O Tqo,(7) [kba] =[kabIT.(8) Theelement damping matrices areequal tothestiffness matrices times ge’thestructural damping coefficient. 4.87.1.3 Lumped Mass Matrix Calculation (Subroutines MROD andMTUBE ofModule SMA2) Thetotal mass oftheelement, m,is m:pA+_ (g) 4.87-9 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Thepartitions oftheelement massmatrix are: m [Maa] :[Mbb] 2m l l 0 l ….. |…. Io0 i0 _ I o_(lO) [Mab] =[Mba] :0 4.87.1.4 Element LoadCalculations (Subroutine EDTLofModule SSGI) Theelement loading calculations arecalculated using theESTdata, theelement loading temperature, i,andtheenforced deformation 6. I.Calculate _,{n},[Ta]and[Tb]asinsection 4.87.1.2. 2.Calculate: =(ta+tb)/2 -TO,(12) r[Ta]T” l _EAL.o__j(n\u003e (+Z___To), {Pa},(13) 1…..{n}(6+_ZT-ZTo). 3.{Pa}and{Pb}areplaced intheloadvector inpositions corresponding topoints a andb,(14) 4.87.1.5 Element Stress Calculations (Subroutines SR_DI andSR_D2 ofModule SDR2). Thestress functions calculated inphase l(Subroutine SR_DI) are: =E[S] _{n}T[Ta], (Ix3);(15) 4.87-I0 (lllll70)\nSTRUCTURAL ELEMENTDESCRIPTIONS E{n}T[Tb]’ (Ix3); (16) [s_]- [S_] =GC_{n}T.[Tb], (Ix3)’, (17) [S_] -GC_{n}T[Tb], (Ix3). (18) ST=-mE, (19) Sa- E4\" (20) Themiscellaneous constants A,_,To,ot,ocandosarealsosaved forphase 2calculations. NoteJ/CissettozeroifC=O.Thesuperscripts tandrdenotes translational and rotational stress matrices respectively. Thestress andforce values arecalculated inphase 2(Subroutine SR_D2) using the displacement vectors {ua}and{Ub}, theloading temperature, T,andtheenforced deformation _. that {uI}and{uT}(i=a,b)denote the3byltranslational androtational components ofNote {ui}. I.Partition II 2.Thestresses are: Themargins ofsafety intension orcompression, M.S.torM.S.crespectively, arecalculated asfollows: Ifo\u003e0then: 4.87-11 (3/1/71)\nMODULE FUNCTIONAL DESCRIPTIONS Ifa\u003cO,then:MIS+ -: define a_ M,S° =| ora=O =-lacl. Ici0 -1,a 0 t Integer “l,a=0orac-=0(25) (26) Themargin ofsafety fortorsion !as 1, =l_F,,I M.S. /Integer 1\"as\u003e0andT_0 a\u003cOorT=OS–(26a) Theforces are: P:Aa, (27) J (28)T=-T. 4.87.1.6 Differential Stiffness Matrix Calculation (Subroutine DR(_DofModule DSMGI) Thedata input from theECPT, MPTandCSTM data blocks areaslisted insection 4.87.1.I. Thefollowing variables arecalculated inthesame manner asthose forthestiffness matrix variables (section 4.87.1.2) In2 n3 [Ta],[Tb]length ofrod Thedirection cosines oftherodaxis (+from btoa) inthebasic coordinate system Thetransformation matrices fromglobal coordinates to thebasiccoordinate system atthegridpoints. 4.87-12 (3/I/71)\nSTRUCTURAL ELEMENT DESCRIPTIONS Onlythelinear translational displacements atthegridpoints areextracted fromthe displacement vector. Call these {u_}and{u_}(3xlsingle precision vectors.) I.Calculate theaxial loadintheelement (+implies tension): Fx- AE I_ 2{n}T[[Ta]{Uta}- [Tb]{U}]- 6-_T- To1(29) 2.Apairofaxesperpendicular totherodaxisisconstructed. Select thesmallest component of{n}. Define niasthecomponent of{n}which isthesmallest; letj andkbetheother twocomponents. Construct {m}such that Letmi=l,mj=mk=O. {m}x{n}{y} =]{m}x{n}l’(3O) (31) and {n}x,{X} {z}=l{n}x{y}l’(32) where xdenotesthecross product. Theactual partitions ofthedifferential stiffness matrix relating todisplacements inglobal coordinates are: [K_a]Fx __[Ta]T [{y}{y}T +{z}{z}T] [Ta] [K_b]-F_x[Ta]T [{y}{y}T +{z}{z}T] [Tb] [K_b]_Fx[Tb]T[{y}{y}T +{z}{z}T] [Tb] [K_a] dT =kab (34) (35) (36) 4.87-I 3(811172)\nMODULEFUNCTIONAL DESCRIPTIONS Theactual6x6partitions areformedbyexpanding: etc. (37) 4.87.1.7 PiecewiseLinearAnalysisCalculations (Subroutine PSR_DofModulePLA3and Subroutine PKRODofModulePLA4) Theadditional ECPTNLandESTNLentriesare: r Eo Thepreviously computed strain value onceremoved. E*-Thepreviously computed strain value. c E-Thepreviously computed modulus ofelasticity. T*-Thepreviously computed torsional moment (present intheESTNL entry only). Alloftheabove values areinitially zerowith theexception ofE*,which isinitially the original modulus ofelasticity present onaMATI card. Forboth stress calculation andstiffness matrix generation, thequantities and{n} aregenerated asinsection 4.87.1.2. At{Aut}and{Ub},the3xltranslational displacement vectors, calculate the Using increment ofstrain: z_E=- {n}T_Ta]{Aut}- [Tb]{Au}] , (38) AE :E_.E_ro• (39) Define thefollowing terms: El=E*+AE, (current strain); (40) E2 c1+y(AE) , (estimated nextstrain);(41) 4.87-14 (3/I/71)\nSTRUCTURAL ELEMENTDESCRIPTIONS whereyistheratioofthenextloadincrementtothepresentloadincrement. Wecalculate: oI=f(El), o2=f(2),(42) (43) where fisthetabular stress-strain function. (When c*=O,define oI=Eo¢l) Forstiffness matrix generation, thenewmaterial properties are: E =o2-oI ,ifE2_Ele2-El E*,ife2=eI(44) and G = (45) where Eo MAT.andGoareelastic meduli obtained fromtheMATIbulkdatacardviasubroutine Forplastic element stresses andforces thevalues are: (46) (47) T-JG*{n}T (CTa]{Au} [Tb]{Au}) +T* CT(_=0ifC=0orJ=0),=3-(48) (49) where (50) 4.87-15\nMODULE FUNCTIONAL DESCRIPTIONS ThenewESTNLandECPTNL entries are: on(51) _“k =_lFI :’ o2-oIE*- ne2-el’ T*=Tn(52) (53) (54) 4.87-16\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.1.8 Coupled MassMatrix Calculation (Subroutine MCR_D ofKodule SMA2) I.Thelength oftheelement, 4,thenormalized direction vector, {n},andthemass ofthe element, m,arecalculated asinEquations land2insection 4.87.1.2 andEquation 9insection 4.87.1.3 respectively. 2.The3by3matrix iscalculated.[Z_4] m=T_m n_ nln2nln3 nln2 n_ n2n3 nln3n2n3n_ w 3.The3by3element massmatrices inbasic coordinates are and[maa] =[mbb] ImI2°=0 m/2 L0 0 m/[AM] [mab] =[mba]=[AM] . 4.Inglobal coordinates the6by6massmatrix partitions are: TiTmijTj 0 [Mij] : 0 0 m fori=aorb,j=aorbandwhere [Ti]istheglobal-to-basic coordinate transformation matrix forpoint i.(55) (56) (57) (58) 4.87-16a (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.1.9 Thermal Analysis Calculations fortheRBDElements (Subroutine KRBDofModule sMAI) Ifa\"stiffness” matrix forthermal analysis istobegenerated, thefirstword,HEAT,in C_MM_N datablockSMA2HTis.TRUE. Thelength, _,oftheelement iscalculated asinSection 4.87.1.2. Thethermal material coefficient, k,isobtained bycalling subroutine HMAT,rather thanMAT.The6x6matrix partitions are: Forthepivotpoint, Forj_i,kA Kii- kA Kij-ool 01OI0 oo11 oIo 1ool 01OI0 0011 oIo 4.87-16b (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.2TheBARElement 4.87.2.1 Input Data fortheBARElement I.TheECPT/EST entries fortheBARare: Symbol Descri ptions SILa,SILb Scalar indices ofgridpoints aandb Na’Xa’Ya’Za Nb’Xb\"Yb’ZbLocal coordinate systemnumber andlocation inbasic coordinates ofthegridpoints xI,x2,x3 Orientation vector (seeFigure linsection 1.3 oftheUser’s Manual) Flagfororientationvector definition Pa’Pb Pinflags foreither end MatI.D. Material property identification number Cross-sectional area iI,12 If2Bending inertials inelementcoordinates about axesnormal toreference planes land2respectively Cross-product bending inertia J Torsional Inertia Nonstructural massperunit length ax,ay,azlbx,by,bzVectors defining offsetdistancesbetween BARends andgridpoints (seeFigure1insection 1.3oftheUser’s Manual) Kl,K2 cIc2,dId2 flIf2’glIg2Shear factors Positions oncross sectionoffourpoints for stress calculations (seesection 1.3.2 ofthe User’s Manual) t 2.Coordinate system dataTemperature formaterial properties Thelocation (Xi,Yi’Zi)andlocal coordinate system number (Ni)ofeach grid point (i=aorb)areusedtocalculate the3by3global-to-basic coordinate transformation matrices, [Ta]and[Tb]. 4.87-17\nMODULE FUNCTIONAL DESCRIPTIONS 3.Material data Thematerial identification number “MatI.D.“andt following:areusedtoselect the E-Modulus ofelasticity G-Shearmodulus -Poisson’s ratio p -Density -Thermal expansion coefficient T-Reference temperatureo ge-Structural damping ratio ot-Stress limit, tension _c-Stress limit, compression os-Stresslimit, shear 4.87.2.2 l° coordinates : Otherwise,Stiffness MatrixCalculation (Subroutine KBARofModule SMAI) Iftheorientation flagFisnonzero, transform thegivenvectortobasic Ixll{vo}=[Ta] x2. x3 {vo}=x2• _x3 2.Transfer therelative beamendlocations tobasic coordinates: 6al6a2 6a3=[Ta]axI ay(I) (2) (3) 4.87-18\nSTRUCTURAL ELEMENT DESCRIPTIONS II xl_b2 :[Tb] by . 6b3 bz(4) 3.Thecenter axisofthebeam, defined as{i}iscalculated as: {Vi}Xa-Xb+_al-_bl Ya-Yb+_a2-ab2 Za-Zb+a3-6b3’ (5) 2 2 2I/2 (6)=(Vil+ Vi2+Vi3) , {i}:{Vi}. (7) 4.Thebending axisofthebeaminplane 2is: {k}={i}x{vo} l{i}x{Vo}I(8) 5.Thebending axis ofthebeam inplane lis: {k}x{i}{j}=({k}x{i}( (9) 6.The6x6matrix fortransforming element displacements intheelement coordinates to basic coordinate displacements is: [Teb] = :{j}.,{_k} 00 ,-CiTi -Tj3- T-{k-)t 7.The6by6matrices fortransforming global coordinate displacements tobasic coordinate displacements are:(lO) F-’-7Ta__0 [Ca]:[–0I-Ta]’ (II) 4.87-1g(3/I171)\nMODULE FUNCTIONAL DESCRIPTIONS [cb]:_-I(12) 8,The6by6matrices fortransforming displacements ofthe_ridpoints todisplacements oftheelement endsare: [Ea]=I 100I0az-ay 010-az0ax 001ay-ax0 100 0 010 001(13) [Eb]=I_bz0bx0101 I 001Iby-bx0 I I i100 I 0i010 I i001(14) 4.87-20\nSTRUCTURAL ELEMENT DESCRIPTIONS 9,The6by6partitions oftheelement stiffness matrix inelement coordinates are: [Kea]-AE i– 0 0 0 0 0 0 RI _ 0 -_8 ,R1 0 B R2 0 -R2 0 0 0 GJ- 0 0 £2o--o _2 0 R1 _ 0 - kI(]5) [K_b]p AE 0 0 0= 0 0D0 0 0 0 0 .o+ o o_GJ 0 o£ £2 o- 42 .+o-__I (16) [K_a]:[K_b]T,(17) 4.87-21 (311/71)\nI\"IODULE FUNCTIONAL DESCRIPTIONS [K_b]:-AE m 0 0 0 0 0 R1 B 0 0 B R2 0 _R2 0 0 0 G__JJ 0 0 t3 R2 0 k2 o “1 - o 3_0 -\u0026Rl2 0 2 – k1(18) Thetermsaredefined as: If112=0: =0 R1=12Eli Il12EIII-I JL3 KIAG_2(19) (20) R2- I+ 3 K2AG,2 Note: IfKiAG=O,set KiAG=O,i=1or2 If112_0 R1-12ElI 9.,3(22) R2=12El2 3 12El1 2 _3(23) (24) 4.87-22\nSTRUCTURAL ELEMENTDESCRIPTIONS Note:InthiscasenoshearingdeforRBtions arecalculated. Forbothcases ._2 El1 kl=4RI+T’ 2 El2 k2=‘R2+T’ £2 Ell k3=_R1 _,(25) (26) (27) _2 El2 k4:_R2-T”(28) lO.Process theendcondition (“pin”) data. integers PaandPbspecify thefollowing:Thenonzero digits ofthe\"pinflag” 1implies noforces aretransmitted totheelement inthex-direction atthepinned end 2implies noforces aretransmitted totheelement inthey-direction atthepinned end 3implies noforces aretransmitted totheelement inthez-direction atthepinned end 4implies noforces aretransmitted totheelement intheOx-direction atthepinned end 5implies noforces aretransmitted totheelement intheOy-direction atthepinned end 6implies noforces aretransmitted totheelement intheOz-direction atthepinned end l)Nonzero digits ofthenumber Pspecify theunconnected degrees offreedom ontheendoftheBAR. 2)Construct theoverall element matrix andperform thefollowing operations: a) eelkaa kab e e kba kbbkll =k21k12 kl2,12(29) 4.87-23\nMODULEFUNCTIONAL DESCRIPTIONS b)Convertthepinnumberstorownumbersinthe[k]matrix.Ifapinnumberrefersto end\"a”,itcorresponds totherownumber.Ifitreferstoend\"b”,therownumberis obtainedbyaddingsixtothepinnumber. c)Foreachrowofthe[k]matrixperformthefollowingoperationtoobtainthenew stiffnessmatrix[k’] ’ ki_k’iIj:l….12,j#i (30) kj_=kj_-i1=I,…12,#i’ kI andj=0forj=ior_=i,where iistherownumber obtained fromthepinnumber asinb). Thisoperation causes theithrowandcolumn tobezero, anddisconnects thatdegree offreedom fromthematrix. Repeat foreach pinindex. d)Repartition thematrix intothefouroriginal sections, carrying thezero rowsandcolumns along. If.Theequations toconvert thepartitions toglobal coordinates are: T T[k_a]{T_bCaEa } (31) [kaa] ={TebCaEa } [kab] {T_bCaEa}T eT (32) =[kab]{TebCbE b}, [kbb] ={T_bCbEb }T[k_b] {T_bCbEb} , (33) [kba] =[kab]T (34) 4.87-24\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.2.3 where:LumpedMassMatrixCalculation (Subroutine MBARofModule SMA2) [Ma] =[Mb]“m/2 m/2 o0 m/21I ! ! 0t0 !, (3s) m=(pA+p), (36) and: T T [Maa] ={TebCaEa}T[Ma]{TebCaEa}, (37) T T [Mbb] ={TebCbEb}T[Mb]{TebCbEb}, (38) [Mab] :[Mba]:[0] (39) Theequations forthegeneration ofthe\"consistent” orcoupled massmatrix fortheBARare giveninsection 4.87.2.8. 4.87,2.4 Element LoadCalculation (Subroutine BARofModule SSGI) a)Form,{i},[Ca], [Cn], [Ea], [Eb], and[k’]asinEquation 30. b)Partition the12x12matrix intofour6x6matrices [k’] Ke:Ke7,eiKel’l)a,bb](4O) 4.87-25 (9/I/70)"},"title":"Programmer's Manual P62"},"/docs/programmers/programmers_manual_063/":{"data":{"":"c)Form thevector -(T -TO)-6 --[T_a +2T_b] -[T_a +2T’]2b 0 , ,+T2bl. [T2a [T_a +T_b] where Tistheaverage ofa gradients.andTb,6istheenforced deformation andT_arethe • 1 d)Theload vectors inglobal coordinates are: {Pa}:[ET][cT][Teb][K_a]{U}(41) (42) 4.87-25a (9/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.2.5 Element Stress Calculations (Subroutines SBARIandSBAR2ofModule SDR2) Thestress andforcedataarecalculated intwophases. Thefirstphase (subroutine SBARI) calculates unique stress versus displacement, temperature andenforced deformation functions for eachelement. Thesecond phase(suBroutine SBAR2) applies thevarious subcase displacement vectors toproduct theelement forces andstresses. Phase1calculations areasfollows: I.Usingthealgorithms giveninthedescription ofthestiffness matrix calculations fortheelement (Section 4.87.2.2), calculate thefollowing data: 2. [kaa]and[kab].[Teb]=6x6element coordinate transformation [Ea],[Eb] -Offset transformation matrices (6x6) [Ca],[Cb] -6x6global tobasiccoordinate transformations K’[e]-12x12stiffness matrix inelement coordinates with pinjointeffects -Length ofBAR I Partition thestiffness matrix [Ke]saving onlytheupper6x6matrices, KI [e]–\u003elaa:kabI (43) 3.Thestress matrices are: [Sa]=[kaa][Teb]T[Ca][Ea ],(44) [Sb]=[kab][Teb]T[Cb]Eb 4.87-26 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.Thetemperature andenforced deformation matrix is: [St]=[Kaa]_ 0 0 o 0 0 0 0 0 0 O 0 0 O _ _2 20 0 0 0 6 0 0 2 2 0 0(46) Phase 2elementforce calculations areasfollows: I.Thestaticelement forces arecalculated bytheequation: {P}=[Sa]{U a}+[Sb]{U b}+[St]Tz Tla Tlb T2a T2b• (47) where [Sa]and[Sb]arethedisplacement-stress matrices, {ua}and{ub}arethedisplacement ! vectors• andTz’Tla’etc.aretheelement thermal resultants. Interms ofthegiven tempera- tures attheends, TaandTb’theequation forTzis: Tz Ta+Tb= 2 -TO (4B) 2.Theelement axial force is: Fx=[Pl+$66] , (49) 4.87-27 (911170)\nMODULE FUNCTIONAL DESCRIPTIONS 3.Theelement shearloadsare: V1=-P2,(51) 4.Thetorqueandmoments are:V2=-P3 T=-P4, Mla=-P6, M2a=P5, Mlb=Mla-VI_, M2b=M2a-V2C. Phase2element stresscalculations areasfollows:(52) (53) (54) (55) (56) (57) I.Thestresses duetobendinq are: kla=M2a112Mla12 2 I112-112(58) Mla112-M2aI1 k2a= I112-I_2(59) aca=klacI+k2ac2,(60) Oda=kladI+k2ad2, (61) _fa:klafl+k2af2’(62) Oga =klagl+k2ag2’ For_cb’Odb’Ofb’°gbusetheabove equations interchanging thesubscripts forbanda.(63) Equation 50isintentionally missing. 4.87-28 (11/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS Thestresses calculated atpoints c,d,e,andfonthecrosssection willbemodified bythe element temperatures Tac,Tad,…Tbc….ifatleastoneoftheTvalues isnonzero, atenda: ac=Ee(Tac Aad=E(Tad etc.I ! -TlacI-T2ac2-Ta) I I -Tlad1-T2ad2-Ta) Atendb: AoC Aod= etc.E(Tbc -T’IbCl-T2bc2-Tb) I I -E(Tbd -TlbdI-T2bd2-Tb)(63a) (TaandTbarethegiven average temperatures attheends.) Theabove stresses areadded tothe stresses calculated inEquations 60-63. 2. Theaxial stress is: Fx (64) Oax :–_ 3.Themaxima andminima are: aamax =aax+max(aca, ada,afa,aga),(65) °bmax =aax+max(acb, adb, afb, Oab) ,(66) aamin =aax+min(aca, ada’ afa’aga)(67) abmin =aax+min(acb, adb, afb,agb)•(68) 4.87-2Ba (9/I/70)\nSTRUCTURAL ELEMENT DESCRIPTIONS no Themargins ofsafety intension, M.S.t,andcompression• M.S.c, areasfollows: -1,ot\u003e0min ax’°bmax M’S’t =IInteger “l” ( )\u003co •t\u003c0ormax°amax’Obmax–(69) Define o’ c M.S. cI°Cl\"Then: °’)Imin c-l,oc#0°amin’°bmin (Inte r\"l\" O’=0ormin(Oamin,C_bminl\u003e 0, ! • C(70) 4.87.2.6 Differential Stiffness Matrix Calculation (Subroutine DBEAM ofModule DSMGI) Manyoftheequations usedinthiscalculation routine areidentical tothestiffness matrix andelement force calculations. Refer tosections 4.87.2.2 and4.87.2.5 fordetails. I.Calculate [Teb], [Ca],[Cb],[Ea],[Eb]and[K],thematrices usedintheBAR stiffness matrix generation• section 4.87.2.2. 2.Calculate theforces intheelement using theequations insection 4.87.2.5. 3.Thenumber 2,3,4,5•6,8,9,lO,IIand12throwsandcolumns ofthe 12by12differential stiffness matrix aregiven inFigure I.Thefirst and seventh rowsandcolumns arezero. Theterms areidentical totheelement forces calculated foroutput (Equations 51,52and54through 57ofsection 4.87.2.5) withthe following notational changes: May=M2a Mby=M2b Maz=Mla Mbz=Mlb Vy=Vl Vz=V2 4.87-29 (3/I/71)\nMODULEFUNCTIONAL DESCRIPTIONS LLX i LLx i °° 1iio ×I°S\u003eI_b0 0 I £bxo I !C ! mo ! i i i,,x i! ,ii’l[,,xio ‘IO 0 ! ! : ! ] 0 0 i m [! !! ! I_×I ! m i ! 0i Ii …. f…… i° N i.C)[ o! I° !,X° E % 0 E ,-,,.. 0 X T_4- E e\" “5 % c t,.. 4- N ! f,. ..-,i o II x/ 4.87-30\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.Theeffects of\"pinjoints” areadded byaoplying theelastic stiffness constraints. Theelastic stiffness matrix, [Ke], withnopinjoints isequivalent tothematrix [k]inEquation 29.Ifcoordinate number iisreleased byaoinflag thedifferential stiffness matrix mustbemodified asfollows: a.Ifi#jandZ#j,i=l,2….. 12andz=l,2….. 12: K_“d*-_ K_. d* K_jK_. d* (K£j)m_l e + dd j{Kvi}m-I I 31(Kjj)m-I (Ki)m =(Kiz)m-l - K. K_. + e 33 33 (Kjj)a(71) where misthe(row) index ofthepinjoint number, l\u003cm\u003c12. d_ (Ki_)o:(K_c)Form=O,define (72) b.Ifiorj = d* Kij=0 d* Kj_=0i=1…..12, j=l….. 12 5.The12by12matrix [Kd*]isnowpartitioned into6by6matrices related toeachgridpoint –did-I KaaiKabl [Kd*]I—— -J Idldl LKba IKbb] 6.Ifpoint “p\"isthepivot point (p=aorb),thematrices generated inglobal coordinates are: [K_a]:([Teb]T[Cp][Ep]) TK_: ,(73) (74) (75) (76) d [K_b] :([Teb]T[Cp][Ep]) T[Kpb] ([Teb]T[Cb][Eb ])(77) 4.87-31\nMODULEFUNCTIONAL DESCRIPTIONS 4.87.2.7PiecewiseLinearAnalysisCalculations (Subroutine PSBARofModulePLA3and Subroutine PKBARof_dulePLA4) Theadditional ECPTNLandESTNLdatablockentriesforaBARelementare: C0 E _c E Vl _k V2 T Mla “k M2aThepreviously computed axial strain value once removed. Thepreviously computed axial strain value. Thepreviously computed modulus ofelasticity. Thepreviously computed element forces andmoments. Alloftheabove values areinitially zerowith theexception ofE,which isinitially the original modulus ofelasticity present onaMAT1bulkdata card. Forbothstress (subroutine PSBAR) andstiffness matrix (subroutine PKBAR) calculations, thefollowing dataaregenerated: 4,[Teb], [Ca], [Cb], [Ea], [Eb], [k_a], and[k_b] asinEquations 6,I0,II,12,13,14and 30insection 4.87.2.I. Notethat: a)[k_a] and[k_b] arethepartitions ofthestiffness matrix withpinjoint effects taken intoaccount; b)forstress calculations, Eisused ketocompute [k_a] and[ab]; andc)forstiffness matrix calculations El(seeEquation 84 below) isusedtocompute [k_a] and[k_b]. Using theincremental displacement vectors, {\u0026ua}and{AUb}, calculate theincremental strain: AE:_I{TebI}TI[cb][Eb]{Aub} -[Ca][Ea]{AUa}](78) where {Tebl}isthefirst column of[Teb]. Ifcoordinate “l\"ofeither PaorPb(thepinflags) is\"on”,theelement istreated aslinear. Thisdetermination ismadeinthePiecewise Linear 4.87-32\nSTRUCTURAL ELEMENT DESCRIPTIONS Analysis pre-processormodule, PLAI. Calculate theextensional strains: A_ =C-COi CI=C+AEi(79) (80) E2=El+y(AE) ,(8]) where yistheratio ofthenextloadincrement tothepresent loadincrement. Thestresses oI:f(El) , 02=f(E2) ,(_2) (83) areconfuted, where fisthetabular stress-strain function. (When c 01=EoEI, where Eoisthemodulus ofelasticity ontheMATIcard) Forstiffness matrix generation thenewmaterial properties are:=O,define El02-oI E2-El E,ifc2fEl ,if_2=El(84) and El GI=E_OGO’(85) where E0andGOareelastic moduli obtained fromtheMFTIbulkdatacardviasubroutine MAT. Note that Eliscalculated inPSBAR onlytopredict thenext value ofE,i.e., toupdate theESTNL entry. 4.87-33 (311/71)\nMODULE FUNCTIONAL DESCRIPTIONS Forplastic element stresses andforces, thevaluesarecalculated inafashion similar tothatfoundinthephase2subroutine, SBAR2, (seesection 4.87.2.5) oftheSDR2module. Theyare: {AP}:[kaa][Teb]T[Ca][Ea]{SUa }+[kab][Teb]T[Cb][Eb]{SUb },(86) =AdFx I’(87) Vl=-P2+Vl’(88) V2=.AP3+V2,(89) T:-AP4+T,(90) Mla:.Z_P6+Mla,(91) “A” M2a:AP5+M2a,(92) Mlb:MlaVl,(93) M2b=M2a-V2_.(94) Thestresses duetobending, theaxialstress, theminimum andmaximum stresses, and themargins ofsafetyarecomputed asinEquations 58through 70. ThenewESTNLandECPTNL entries are: (95) _*=el’ (96) E:El, (97) 4.87-34\nSTRUCTURAL ELEMENT DESCRIPTIONS (98) (99) T=T, (loo) Mla:Mla, (ioi) M2a:M2a• (I02) 4.87-35\n4.87.2.8MODULE FUNCTIONAL DESCRIPTIONS “Consistent” MassMatrix Calculation (Subroutine MCBARofModule SMA2) I.Generate the12by12matrix: where[Me]m 175 m 42000 1560 156 SYM0 0 0 0 0 -22C 0 0 4_20 22C 0 0 0 I 4_2I3500000 0 54000-13_ 0054013_0 000000 00-13Z 0-3_20 0 13_000-3_2 1750 1560000 000-22Z 156022_0 000 4_20 4_2(I03) m:(pA+) (104) 2. If\"pin joints” exist (PaorPbnonzero), generate the\"unpinned” 12by12stiffness matrix inelement coordinates, [Ke], asinEquation 29,ection 4.87.2.2. Foreach pinjoint ofindex j,perform theoperations fori=l….. 12and =l,…, 12: KeMeKeMeKeKe.M. e __ + £jjlJ3 M_C =Mi£-K. K_. (e2 jj JJ Kjj) After each pinjoint joperation, replace [Me]bythe\"pinned” matrix [MP]. 4. Partition thematrix into 6by6submatrices:(105) 4.87-36\nSTRUCTURAL ELEMENT DESCRIPTIONS [M]=Maa IMab1I …. I——- 5.Thematrices areconverted toglobal coordinates bytheequation: [M?j] =[[Teb]T[ci][Ei]] T[Mij] [[Teb]T[cj][Ej]] where iisthepivot point (aorb)andjisusedtwice (forbothaandb).(I06) (107) 4.87.2.9 Thermal Analysis Calculations fortheBARElement (Subroutine KBARofModule S_l) Ifa\"stiffness\" matrix forheattransfer analysis istobegenerated, thefirst word, HEAT, inCBMMBN data block SMA2HT is.TRUE. Thelength, ,oftheelement iscalculated with the structure analysis code, described inSection 4.87.2.2. isobtained bycalling subroutine HMAT, rather thanMAT. Forthepivot point i, kA Kii-Thethermal conductivity coefficient, k, The6x6matrix partitions are: “I 001 0 10I0 00 lI o Io Forj #i, kA Kij=-_-]ool 0 1Ol 0 00 II o Io 4.87-37 (8/1/72)\n4.87.3 4.87.3.1 IoMODULE FUNCTIONAL DESCRIPTIONS TheSHEARPanelandTWISTPanelElements InputDataforSHEARandTWISTPanels TheECPT/EST entries forshear (SHEAR) andtwist (TWIST) panelelements are: 2.S_xmbol SILi,i=1,2,3,4 Ni’Xi’Yi’Zi}i=1,2,3,4 MatI.D. t t Coordinate system dataDescription Scalar indices fortheconnected Doints Localcoordinate system number andbasicco- ordinate location foreachoftheconnected points. Material identification number Panelthickness Nonstructural massperunitarea Temperature formaterial properties UsingNi,Xi,Yi’Zi’i=1,2,3,4 theprogram constructs [Ti],i=1,2,3,4, the3by3 global-to-basic transformation matrix foreachpoint. 3.Material data MATI.D.andtareused,byutility routine MAT,toproduce thefollowing termsfromthe MPTandDITdatablocks: Symbol E G P T0 ge °t’°c’_bDescription Modulus ofelasticity Shearmodulus Poisson’s ratio Density Thermal expansion coefficient Reference temperature Structural damping coefficient Stress limits 4.87-38\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.3,2 Definition ofElement Geometry Ameanplane isdefined asparallel tothetwodiagonal lines andhalfway between them. The projections ofthepoints atthecorners oftheelement ontotheplane andthenormal totheplane define theelement coordinate system. Using standard vector algebra, thesteps are: I.Define: IxII{Vol} =Yl ‘{V02} ZlX2 Y2 , Z2etc. (I) 2.Define diagonal vectors: {Vdl}={V03}-{VoI},(2) {Vd2}={V04}-{V02}•(3) 3,Define normal vector (xdenotes cross product): {kn}={Vdl}x{Vd2},(4) {kn} {k}=TT_ ’ A:½l{kn}I(theprojected areaoftheelement), 4.Define thevectors along thesideoftheelement (seeFigures 2and3)(5) (6) {v12} ={Vo2} -{Vol} ,(7) {v41} ={Vol} -{V04}(8) 4.87-39\nMODULEFUNCTIONAL DESCRIPTIONS 5o nates, using unitvectors:Define transformation matrix [Te], which transforms element coordinate tobasic coordi- {vP2}={v12} -({Vl2}T{k}){k} , (9) {v_2}{i}= (lO) l{v 2}l’ {j}:{k}x{i}, (ll) 6m system:Iil J3][Te] =i2 J2 i3 J Transform thefourcorner point oftheelement frombasic coordinates totheelement {rI}=(12) (13) {r2}(14) Ix3I[Te]T{r3}: : £Vdl}, Y3(15) Ix41{r4}= :_[Te]T{v41}. Y4(16) Thefour corners oftheelement arenowprojected onto themean plane. 4.87-40\nSTRUCTURAL ELEMENT DESCRIPTIONS 7.Thefollowing conditions shouldbemet. Otherwise, theinterior angle atthe indicated point isnotvalid. x4Y3\u003e0 Y3 x3\u003e4 x4 Y4\u003e0 Y4 \u003cX2-(x2-x3)3(Ifnot,theinterior angle atpoint 2\u003e180°),(17) (Ifnot,theinterior angle atpoint 4\u003e1800),(18) (Ifnot,theinterior angle atpoint 1\u003e1800),(19) (Ifnot,theinterior angle atpoint 3\u003e180°)•(20) 4.87.3.3 Coefficient Generation Theshapeofthepanelmaybeaparallelogram, atrapezoid, orageneral quadrilateral, and theequations willbedifferent foreach case. Theslopes oftheopposite sides arechecked for parallel effects, andthecorrect routine isusedforeachpossibility. I.Check forparallel effects: If I IY3-Y4\u003c x3x E, sides land3ofthepanel areparallel (E=10-1).(21) If Iy4(x3-x2) -Y3X4 I\u003c’ (22)x4(x3-x 2)+Y4Y3 sides2and4areparallel.Ifbothterms arelessthan_,(i.e., thepanelisa parallelogram), gotostep (4). Ifbothterms aregreater thanE,gotostep (5). Ifthe onepairofparallel sides island3,gotostep (2);iftheonepairofparallel sides is2 and4,gotostep(3). 4.87-41 (3/1/71)\nMODULE FUNCTIONAL DESCRIPTIONS 2.Inthis case theline connecting points 3and4isapproximately parallel totheline connecting points land2,Theequations are: x2Y3Y4 (23) Yp=Y3x4_Y4(X3_X2 )’ Pi=Yp-Yi(i=1,2,3,4) , (24) x2Y3X 4 Xp- (25)Y3x4-Y4(x3-x2 )’ (26) xI-Xp),c=yp(27) PlP2 A 2 (a2+ac+c2)} • (28) Z-P3P4 _ {l+T_ 3.Inthis case theline connecting points land4isapproximately parallel totheline connecting points 2and3.Theequations are: d=-_- +“Y3 ’ (29) x3-x4 Xq=x4Y3-Y4Y4’ (30) 4.87-42\nSTRUCTURAL ELEMENT DESCRIPTIONS Pi=[(Xq-xi)-yid] 1 (i:1,2,3,4)(31) b=(x9-x4)d+Y4 (Xq-x4)-Y4d(32) PlP2 A 2 d2 Z-p3P4 _ {l+3-7-6_- (b2+bd+)}.(33) 4.Inthiscasethepanel approximates aparallelogram. Theequations tosolve are: Pi=l,(i=1,2,3,4),(34) x3-x2 Y3-Y4 1lx4++ d=-Y4 Y3 x3-x4 !’(35) A2d2 .Z: (I+I+’(36) 5.Inthiscasenoparallel effects exist. Theequations are: (x3-x4) Xq=x4-_ Y4 ‘(37) 4.87-43"},"title":"Programmer's Manual P63"},"/docs/programmers/programmers_manual_064/":{"data":{"":"MODULEFUNCTIONAL DESCRIPTIONS x2x4Y3 Xp- (x3_x2) , Y3x4-Y4(38) x2Y3Y4 yp- (x3_x2) ’ Y3x4-Y4(39) =y(Xq Xp)2+yp2(40) Yp(41) Pi=YP(Xq_ -xi)-yid , (42) £c=—d, Pl(43) b:—c, P4(44) a=— d. P2(45) 4.87-44\nSTRUCTURAL ELEMENT DESCRIPTIONS Let: F PlP2P3P4 {[Ca’H)) +(a3+b3)+(a5+b5)] logela+bl 242 +[(c+d)+(c3+d3)+(c5+d5)] loge[c+dl [(b+c) +(b3+c3)+(b5+c5)] l°geIb+cl (46) -[(d+a) +(d3+a3)+}(d5+a5)] logeId+al +[(a2-c 2)(b3-d3)+(b2-d2)(a3-c3)] I • -[[(a-c) (b4-d4)+(b-d) (a4-c4)]} Then: Z —-PlP2 l _A+ i(477 4.87-45\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.3.4 Stiffness Matrix Formulation ForaSHEARPanel(Subroutine KPANEL ofModule SMAI) I.Calculate thelengths ofthediagonals: _13=\"_x32+Y32’(48) _x4-x2 )2+y42_24=(49) 2,Calculate theunitvectors alongthediagonals: x3 Ul=u3-\u002613’ Y3 Vl=v3-\u002613 x4-x2 u2=u4-_24(50) (51) (52) Y4 v2=v4=_24(53) 3.Theloadsalongthediagonals intermsoftheaverage shearstressalong side1are: A1x2Y4_l3 2(x4Y3-x3Y4)(54) 4,87-46\nSTRUCTUP4_L EL£MENT DESCRIPTIO_IS x2Y3_24 A2=2Cx4Y3-x3Y4-x2(Y3-y4))(55) A3=-Al,(56) A4=-A2.(57) 4.Theloads atgridpoint iinterms ofthedisplacements atgrid point jmaybe expressed interms ofa(3x3) matrix [kij] where AiA\" ]T[kij] :_ [Ti [Te]ui vi{ujvj} T[Te]T Tj i=1,2,3,4 , i:l,2….i. 5.The3x3matrices arerelated only todeflections andforces. Theterms inthe 6x6matrices, [Kij], corresponding torotations arezero. Expand thematrices to6x6: Ooi[Kij]= I- f Theelement structural damping matrix isequal toge’thestructural damping coefficient, multiplied bythestiffness matrix, [Kij]. 4.87.3.5 TWIST Element Stiffness Matrix Generation (Subroutine KPANEL ofModule SMAI)(59) Thefollowing datafortheSHEAR panel element areused forgeneration ofthe element stiffness matrix fortheTWIST panel. 4.87-47\nMODULEFUNCTIONAL D_SCRIPTIONS [Te] The3x2transformation matrix(Equation12). x2,x3,x4,Y3,Y 4 Thelocationsofthecornersintheelement system(Equations 14,15and16). Theenergycoefficient (Equation28,33,36,or47). UlU2U3U4 VlV2V3V4Unitvectorcoefficients atthecorners (Equations 50through53) AI,A2,A3,A4 Loadcoefficients forthecorners(Equations 54through57) ETI],ET2],[T3],[T 4] 3x3global-to-basic transformation matrices I.Generate thethree bythree matrices relating themoments atpoint itothe rotations atpoint j: AiA.t2 -vi [qij] :- [Ti]T[Te] {-vjuj}T[Te]T[Tj] • ui(60) These aregenerated onlyforonepoint i(thepivot point) andj=1,2,3 and4. 2.The3x3matrices [qij] areexpanded to6x6matrices [Kij] having zeros inthe translational displacement rowsandcolumns. [Kij] I} FO1=I _qqij(61) 4.87.3.6 Mass Matrix Generation (Subroutine MASSTQ ofModule SMA2) Themassateachpoint isdetermined bycutting thequadrilateral intofouroverlapping triangles. Eachtriangle isdefined bythree ofthefour points asfollows: 4.87-48\nSTRUCTURAL ELEMENTDESCRIPTIONS Triangle No. Connected Points K _Z j2 13 I 4-l-2 II l-2-3 III 2-3-4 IV 3-4-1 Theareaofeachtriangle isdetermined bytheequation : AK:II({Voj2}-{Vojl}) x({Voj3}-{Vojl}) I, (62) where {Vojl}isthelocation vector ofthefirst point definina thetriangle, {Voj2}thesecond point, and{Voj3}thethird ooint. Themass ofeach triangle isdivided equally among itsconnected points. Themass ateachpoint is: ml (‘p+pt) = 3 (A4+Al+A2)’ :+pt)m2 3 (AI+A2+A3)’ m3 (p+pt)(A2+A3+A4) : 3 t m4=(- (A3+A4+Al).(63) (64) (65) (66) 4.87-49\nMODULEFUNCTIONAL DESCRIPTIONS Foreachpointasixbysixdiagonalmassmatrixisconstructed. Thematrixis: [Mii]mi mi m. lI I i0 I I -I— io I I0 I i0I(67) 4.87.3.7 SHEAR Element Stress andForce Calculations (Subroutines SPANLI andSPANL2 ofModule SDR2) Thestress andforce calculations areperformed intwophases: phase linSPANLI; phase 2inSPANL2. PHASE1 I.Calculate the1by3matrices [Si],i:I,2,3,4: Ai [Si]=-Z_‘Z_-{ui:vi}[Te]T[Ti]’ (68) where Ai,Z,t,ui,vi,[Te]and[Ti]areasgiven insections 4.87.3.2 and4.87.3.3, 2,The[S]terms andthefollowing parameters: P2PIP2 PIP2 aresaved onascratch fileforphase 2calculatior:s. Pi’where i=l,2,3and4are calculated using theequations insection 4.87.3.3. 4.87-50\nSTRUCTURAL ELEMENT DESCRIPTIONS PHASE 2 I.Theaverage stress along side lis: 4 Tl=r,i=l arethetranslational vectors where: {Ugi}:’:\u003e[si]{ut}. (69) (70) 2.Thestresses onthecorners are: P2 l-PlS-l’ D_tl- T2=P2Sl’(71) (72) m3 PlP2-–Tl’ P3(73) PlP2 T4=—2– S-l P4(74) 3.Theaverage andmaximum stresses aredefined as: l Tavg =7r(Tl+T2+T3+T4)’(75) mmax=max(l_ll, IT21, IT31, IT4]). (76) 4.87-51\nMODULEFUNCTIONAL DESCRIPTIONS 4.Themarginofsafetyinshearisdefinedby: M.S.sC_s F_-i -l,ifOs\u003e0 Integer “l”,ifgs\u003c–0or_max 5.Thenetloads onthecorners inthediagonal direction are:=0(77) Pl3=AlTit’ (78) P24=A2S-lt\" (79) 4.87.3.8 TWIST Element Stress andForce Calculations (Subroutines SPANLI andSPANL2 ofModule SDR2) Thestress andforce calculations areperformed intwophases, asfortheSHEAR panel element, PHASE 1 I.Calculate fori=l,2,3,4 Ai ,ui}[Te]T [Si] =7-E{-vi : [Ti]. 2.The[Si]terms andthefollowing data: P2PlP2 PlP2 A1A2,t,- •aresaved onascratch fileforphase 2calculations. PHASE 2 I.Themeanouter fibre shear stress along sidelis: 4 T1:_[Si]{ur},i=l(80) (81) 4.87-52 (3/I/71)\nSTRUCTURAL ELEMENTDESCRIPTIONS where{u_}arethethreerotational displacements: 2.Thestresses are: (82) TlPl o2=_P2’(83) o3 _4PlP2 =—Z-._I, P3 PlP2 =p-_4 TI,(84) (85) 1 °avg =4(°l+2+3+o4)’(86) Omax=mx(loiI ,Io21,Io31,Io41). (87) 3.Themargin ofsafety inshear isdefined by\" uS F-I ,Os\u003e0 M.S.s= Inteoer “l”, os\u003c0orOmax=0(88) 4.Themoments are: (89) 4.87-53 (3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 4,87.3.9A2t2 (90) M24=–C–_I SHEARPanelDifferential Stiffness Calculations (Subroutine DSHEAR ofModule DSMGI) I.Data Thedatanecessary foranalysis areincluded intheECPT,CSTM,MPTandUGV datablocks. Thefollowing dataaregenerated asinsections 4.87.3.2, 4.87.3.3, and4.87.3.4. a.[Ti],i=1,2,3,4, the3x3transformation matrices between global and basic coordinates, atthefourcorners oftheshearpanel. b.[Te],the3x2transformations between basic andelement coordinates. c.{k},theunitvector normal totheplaneinbasiccoordinates. d.ui,vi,i=1,2,3,4, theunitvectors alongthediagonals inelement coordinates. e.Ai,i=1,2,3,4, theloadcoefficients forthecorners. f.Z,theenergy coefficient forthep_nel. g\"_13andL24’thelengths ofthediagonals. 2.Algorithm a.Theloadinthediagonal between points 1and3is: A14 }T[Te]T[Ti] Illi (91) tx, J 4.87-54\nSTRUCTURAL ELEMENT DESCRIPTIONS where {xi}isthevector ofthethree translations inglobal coordinates forpoint (i). b.Theloadintheother diagonal is: A2 F24=__13• (92) c.Construct aperpendicular, which isdefined inbasic coordinates, toeachdiagonal vector intheplane ofthepanel. Ivl1{Jl}=[Te] , (93) ul I{J2}=ITe] . (94) u2 d.Thenonzero partitions oftheoverall differential stiffness matrix for thedisplacements are: =-F_3[TI ]T[{Jl}{Jl }T+{k}{k}Tl [T3], [k_3] (96) [kd3]:F_3[T3]T [k_l]:[k_3]T,[{Jl}{jl}T +{k}{k}T] [T3], (97) (98) [kd22]:F_4[T2 IT[{J2}{J2 }T+{k}{k}T][T2 ], (99) [k_4] :-F_4[T2 ]TI{J2}{J2 }T+{k}{k}T][T4], (I00) 4.87-55\nMODULEFUNCTIONAL DESCRIPTIONS where: FI3 Fl3-_13’ F24 I F24 24(1oi) (1o2) (103) (I04) 5.Theactual 6x6partitions are r- - 1 ‘dik..,0I LO:o__1(I05) and (106) 4.87-56\nSTRUCTURAL ELEMENTDESCRIPTIONS SIDE3 FI3 SIDE4 SIDE2 x,,®-,,,,FI3 F24SIDE] Figure 2.Shear panel element coordinate system andelement forces, MI3 SIDE2 H24 SIDE4 SI Dr’t13 Figure 3.Twist panel element coordinate system andelement forces. 4.87-57\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.4 TRMEM andQDMEMElements 4.87.4.1 InputDatafortheTRMEN andQDMEM Elements I.ECPTentries fortheTRMEMandQDMEMare: Symbol Descripti on TRMEM SILl SIL2 SlL3 Ni Xi i=1,3 Yi Zi e MatI.D. t tQDMEM SILl SIL2 SIL3 SIL4 N. 1 Xi i=1,4 Yi ZiScalar indices oftheconnected gridpoints, Localcoordinate system numbers andlocation coordinates inthebasicsystem forthe connected gridDoints. Anisotronic material orientation angle Material identification number Thickness Nonstructural massperunitarea Temperature formaterial properties 2.Coordinate system data Thenumbers Ni,Xi,YiandZiareusedtocalculate the3by3global-to-basic coordinate transformation matrices [Ti]forpoints i=I,2,3,and4. 4.87-58\nSTRUCTURAL ELEMENT DESCRIPTIONS Material data S_xmbol [Ge] P _x’_y’_xy To ge _t,_c,Os Basic Equations ForTRMEMDescriotion 3x3stress-strain matrix Massdensity Three thermal expansion coefficients Reference temperature Structural damping coefficient Stress limits fortension, compression andshear l.Theelement coordinate system isdefined bythefollowing equations (seeFigure 4) {V12}X2-XlI =Y2Y1’(1) {V13}X3-Xl Y3-Yl Z3-ZlC2) {VI2} {i}= I{v12}lC3) {k}={i}x{Vl3} l{i}x{v13}I(4) {j}={k}x{i}. (5) 2.Thedisplacement transformation matrix frombasic coordinates toin-plane coordinates is: 4.87-59\nMODULEFUNCTIONAL DESCRIPTIONS [E]T Ii2i31: j 1J2J3(6) 3.Thecoordinates ofthepoints intheelement coordinate system are: Xl=Yl=Y2=0,(7) x2:l{Vl2}l ,(8) X3={V13}T{i} ,(9) Y3=l{i}x{v13}I.(lO) Theareais: A=½x2Y3\"(II) 4.Thetransformations fromdisplacements atthepoints tostrains are: [cI]_! 0 x2 IIx3-I)o _3_ l/‘x3-l)_z 3 x2m(12) 4.87-60\nSTRUCTURAL ELEMENTDESCRIPTIONS [C2]m l– 0 x2 x3 x2Y3 x3 l x2Y3 x2 w(13) [C3]0 0 l0 Y3 l- 0 Y3(14) 4.87.4.3 Stiffness Matrix Calculation forTRMEM (Subroutine KT_MEM ofModule SMAI) I.Theequation usedinthestiffness matrix generation inglobal coordinates is: [kij] =At([Ci][E]T[Ti])TGe,(15) where “i\"isthepivot point number, andj=l,2,3arethethree connected points, [kij] isa3x3matrix, 2.Foruseintheoverall structural matrix, thematrices areexpanded to6x6to form: [Kij] L I°]\"(16) 4.87-61\nMODULE FUNCTIONAL DESCRIPTIONS @.87.4.4 Mass Matrix Calculation fortheTRMEM Element (Subroutine MASSTQ ofModule SMA2) Themass isgenerated bythefollowing algorithm. Thevectors defining thesides are: {VI2}X2-Xl Y2-Yl Z2-Zl(17) {V13}X3-Xl Y3\"Yl Z3-Zl(18) Theareais• A = ½1{Vl2 }x{Vl3} j. (19) Themassateachpoint is: =(pt +), (20) which isone-third ofthetotal mass. Foreachpoint thediagonal massmatrix is: [Mii]m I i m I0 Imi i0 ! 0 ,0I I IB,i=1,2,3. 0m(21) 4.87-62\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.4.5 Element LoadCalculations ForTheTRMEM Element (SubroutineTRIVEMofModule SSGI) Using theloading temperature ontheelement, T,given intheGPTTdatablock, thetriangular membrane routine generates force vectors bytheequation: {Pi}=At[TilT[E] [ci]T[Ge]{a}(T -To) 4.87.4.6 I.•i:1,2,3 (22) where {Pi}isa3xlvector. Theforces areplaced inthePGloadvector datablock. Element Stress Calculations ForTheTP_I_.| Element (Subroutines STRMEI and STQME2 ofModule SDR2) Calculations performed inSTRMEI (Phase lcalculations). a.Using theformulae given insection 4.87.4.2, calculate thefollowing terms: [Ci] i=a,b,c (3x2) [Ti] i=a,b,c (3x3) [E] (3x2) [Ge] (3x3) Thetransformations fromdisplacementstostress are: [Si] :[Ge][Ci][E]T[Ti_] . _24) Equation 23isintentionally missing. 4.87-63 (8/I/72)"},"title":"Programmer's Manual P64"},"/docs/programmers/programmers_manual_065/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS Thetemperature tostress relation is: where forisotropic materials. formaterial angleby{St}=[Ge]{} (25) III,o 12oi {}isinputbytheuserforanisotropic materials andcorrected =[v]{C_m} . 2.Calculations performed bySTQME2 (Phase 2calculations) Theequation forstress is: [l ay =Z i=a,b,c [Si]{Ugi} _xy+{st}T-TO whereTistheloading temperature obtained fromtheGPTTdatablock. Theprincipal stresses are: oI+\" = +02 xy(28) \\2/- °xY ‘(29) 0=½arctan b_2°xy I(indegrees) , _x-_y/ where 0islimited to:-90o\u003c0\u003c90o(30) 4.87-64 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.4.7 l, 21 3oThemaximum shear is: _fferential Stiffness Matrix Calculations fortheTRMEM Element (Subroutine DTRMEM ofModule DSMGI) Input Data. ECPTforelement i-Pivot point scalar index {Ul},{u2}, {u3}-Displacements ofpivots ontriangle (UGV) -Average loading temperature ofthegridpoints oftheelement (GPTT) CSTM-coordinate systems MPT-Material properties table Output Data. [K_I], [K_2], [K_3] -partitions ofthedifferential stiffness matrix. Solution Algorithm. a.Theplanar stresses intheelement, Ox,_yand_xy’arecalculated asin theSDR2 (Stress Data Recovery) module. Thefollowing dataaresaved foruse inthedifferential stiffness calculatioh : {i},{j},{k}-Unitvectors defining theelement coordinate system. A,t-Areaandthickness x2’x3’Y3-Locations ofthepoints, element coordinates [Tl], [T2], [T3]-Global-to-basic coordinate transformations _x’Oy,Oxy -Stresses in_lemer_t system(31) 4.87-65 (ll/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS b.Thedifferential stiffness matrix intermsofthesixgeneralized coordinates (mx,my,mz,Exx,yy,andExy)is: [K]=At-Oy -Oxy 0 0 0 0 -Oxy °x 0 0 0 0 0 0(°x+Oy) -Oxy Oxy (Ox-°y) 0 0 -Oxy 00 0 0 0 _xy 00 0 _0 0(Ox-y) 00 0(32) Ifthesubroutine iscalledfromtheDTRIAorDQUADroutines thefollowing termsareset tozero: d Kdg12] Kdg21] d [Kll]y=[ =[ :[Kg22] =0 C. coordinates are:Thetransformation matrices fromdisplacements atthepoints togeneralized 0 0 y3-Y2 0 0 Y1 Y2-Y3 Y1 2 -T 0 -YI 0 0 0 y3-Y2 0 Y2-Y3 Y1 2 2 0(33) 4.87-66 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS [cI]:m 0 0 -Y3 0 0 -Yl Y3 Yl -E T o Yl 0 0 0-Y3O Y3 Y1 T T o(34) [CI]=0 Y2 -T 0 0 Y2 20 0 Y2Y2 0 (35) 4.87-66a (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS where l YI-x2’(36) l Y2-Y3’(37) X3 Y3=x2Y3(38) d.Thepartitions (3x3) ofthedifferential stiffness matrix inglobal coordinates are: [Kij] :([C_] [Ed]T [Ti])T[K_][C_][Ed]T [Tj] , (39) i=pivot point j=l,2and3 where led]T i}T]= {j}T (3x3) . {k}T(40) 4.87.4.8 General Calculations fortheQDMEM bytheQDMEM Driver Routines (Subroutines KQDMEM ofModule SMAI, SQDMEI ofModule SDR2, DQDMEM ofModule DSMGI). I.Thequadrilateral isdivided intofourtriangles asshown inthefigure below: 4.87-67 (811172)\nI,iODULEFUNCTIONAL DESCRIPTIONS = + 1 21 1 Thethickness usedforeachtriangle isone-half thatqivenforthequadrilateral. Since nospecial calculation timeissaved bygenerating aunique element coordinate system, thebasic locations ofthepoints areusedtocalculate individual coordinate systems forthetriangles. Aninteger mapping matrix [M]containing thequadrilateral point numbers is usedtoconvert point numbers forthetriangles topoint numbers forthequadrilateral. [M]Triangle Point No. -a b c- l 2 4 2 3 l 3 4 2 4 l 3 DTriangle No. (1) (II) (Ill) (IV)(41) Thedatacorresponding tothepoint numbers ineachrowofthematrix aretransferred to thetriangular membrane routine. Thepivot gridpoint iisalso transferred. 2.Material orientation forsubtriangles. Thematerial orientation angle fortheQDMEM element must betransformed toaset ofangles related tothebaseofeachsubtriangle. This requires thefollowing steps: 4.87-68\nSTRUCTURAL ELEMENTDESCRIPTIONS 1.Theelementcoordinate systemisdefinedasfollows: {Vi}=xiiYi Zii=l,2,3,4,(42) {d21} ={V2}-{VI} {dzl} {i}=_ , t{d21}l {d41} ={V4}-{Vl}(43) (44) (45) {i}x{d41} {k}= I{i}x{d41}l(46) {j}={k}x{i} .(47) Thematerial isoriented foreachtriangle asfollows: sI=sin(e), cI:cos(O), {p}=cI{i}+Sl{J} , {V_I} ={V3}-{V2},(48) (49) (50) (51) {V_lI}:{V4}-{V3},(52) {V_v} :{VI}-{V4},(53) 4.87-69\nMODULE FUNCTIONAL DESCRIPTIONS ci- I{v }1-cos(8i) ({V_}x{p})T{k} si= I{v }Ii=II,IIIandIV(54) =sin(@i). (55) Thevaluessi oftheangles 0..Iandcimaybepassedtothetriangular memhran_ _uSroutines inlieu 4.87.4.9 Stiffness Matrix Calculations fortheQDMEM. Three stiffness matrices, which thetriangular membrane routine calculates foreachsub- triangle, areadded tothefourmatrices which willbeoutput. (Note: onlythree triangles are needed foreach pivot point.) Forexample, consider thecasewhere point 2isthepivot grid point. (i.e., thesecond SILvalue inthegridpoint connection listequals thepivot gridpoint SILvalue). Triangle Iiscalculated byentering thegeometry andproperty dataforthel,2and 4points onthequadrilateral, withnumber 2asthepivot point. Theoutputs fromthestiffness matrix generation routines fortheTRMEM are: [K21],[K22],[K24] Datafortriangles IIandIllarealsoentered, andtheir corresponding matrix partitions are added. Triangle number IVisnotconnected topoint 2. 4.87.4.10 Flement StressCalculations fortheQDMEM(Subroutine SQDMEI andSTQME2 of Moc_e SDR2). Thesolution forstress inthequadrilateral involves twophases. Inthefirst phase (SQDMEI) thetriangular membrane partitions aresolved fortheir stress-displacement matrices. These matrices aremodified tocorrespond totheelement coordinate system. They 4.87-7O\nSTRUCTURAL ELEMENT DESCRIPTIONS areadded together toform four 3x3matrices relating displacements inglobal coordinates to element stress. Avector isalso calculated which transforms temperature tostress. Thesecond phase (STQME2) involves theacquisition ofthedisplacement andtemperature data andthecalculation ofthenetstress. Thefollowing steps areused tosetupanelement coordinate system andobtain triangle toelement stress transformations. Phase l I.Thefollowing quantities arecalculated: Ixil{Vi} =Yi i=l,2,3,4 Zi(56) {dI}:{V3}-{VI}, (57) {d2}:{V4}-{V2},(58) {k}{dI}x{d2} I{dI}x{d2}j’(59) {a12} ={V2}-{V4}, (60) {a23} ={V3}-{V2},(61) {a41} ={VI}-{V4},(62) {a34}={V4}-{V3}, (63) 4.87-71\nMODULE FUNCTIONAL DESCRIPTIONS h={al2}T{k} (64) histheperpendicular distance between thediagonals. Themean Diane oftheelement lieshalfway between thediagonals. 2.Theunitvectors along theedges ofthefourtriangles, projected onthemean plane, arecalculated from: x2=l{a12}-h{k}I,(65) {al2}- h{k} {i}: m x2(66) {j}={k}x{j}, Lif] (2x3),:L 3;T! (Vl2}:0_’ {vii}=[R]{aij} ij=23,34,41 l {wII} =TT_ {v23} ,(67) (68) (69) , (70) (71) (72) {will} = l I-C;_TF {v34}’ (73) {wIV} _ l l{v41} I{v41}, (74) 3.Foreachtriangular membrane, B=I,II,Ill,IV,ofthequadrilateral, thesubroutine STRMEI iscalled tocalculate thethree stress functions [Si]where 4.87-72\nSTRUCTURAL ELEMENTDESCRIPTIONS °‘I_12 triangle3 Z[Si]{Ugdi},i=l(75) where {Ugdi} arethedisplacements inglobal coordinates ofthenoints onthetriangle. [S_]iscalculated using thefull thickness oftheoanelfortriangle B. 4.Thestress functions, Equation 24,aretransformed totheelement coordinates bythe matrix [TB]: where ITB]SB=[TB][S_], [i]element w_ – w_ WlW2mw_ -2WlW2 w_ 2WlW2 22 -WlW2 w2-wla(76) , (77) and fortriangle B=I,II,III,IV.IwlI=w2{wB} (78) 5.Using themapping matrix [M],Equation41,thematrices areadded. Theactual equations are: IS1]={[S]+[SIclJ+[s_V]). (79) 4.87-73\nMODULEFUNCTIONAL DESCRIPTIONS where[S_]i Equation 25.=a,b,c,arethestressmatrices inEquation 76and{S_t}isthevector in Phase2 I.Inphase2thestresses arecalculated from: xIIC_xy_y4 :{Tt}T+z[i]{%di}, (84)i=l where 41 t-:T(ti-To), (85) i:l andtiaretheloading temperatures atthegridpoints, obtained fromtheGPTTdatablock. 2.Theprincipal stresses andtheanglesarecalculated inexactly thesamemanner asfortheTRMEMelement. 4.87.4.11 MassMatrix Generation fortheQDMEMElement (Subroutine MASSTQofModule SMA2). Themassisgenerated bythefollowing algorithm. Thevectors defining thesidesandthediagonals are: {Vij}:YjYi ’ ZjZiij:12,23,34,41,13,24 (86) 4.87-74\nSTRUCTURAL ELEMENT DESCRIPTIONS Theareaofthesubtriangles defined bytheinteger mapping matrix [M],Equatien 41,is: l AI=-2{v]4}x{v]2}I, {Vl2}x{v23}I ,(87) (88) l AllI: 1 AIV:-{V23} x{V34} j {V34} x{Vl4} j(89) (90) Theareaofthequadrilateral is: l Aq: {V13}x{V24}j(91) Themass ateachpoint is: (Ai+Aq) ml= 3 (All+Aq) m2= 3 (AllI+Aq) m3=3 (AIv+Aq) m4=3(p+pt) (p+pt) (+pt) (IJ+pt)(92) (93) (94) (gs) Foreachpoint, thediagonalmassmatrix is: [Mii]m ! I mi! m’I0 II ,0 0!‘0I i 0Ii:I,2,3,4 (96) 4.87-75\nNODULE FUNCTIONAL DESCRIPTIONS 4.87.4.12 Thermal LoadComputation ForTheQDMEM. Thethermal loadsarecalculated usingthetriangular membrane routine. TheEST dataarerearranged tocorrespond toeachofthefoursubtriangles, andeachtriangle produces aloadinglobal coordinates. 4.87.4.13 Differential Stiffness Computations ForTheQDMEM (Subroutines DQDMEM andDTRMEM ofModule DSMGI). Thedifferential stiffness matrices fortheQDMEMelement aregenerated byrearranging theECPTdataintofoursetsofTRMEMdata. TheTRMEMdifferential stiffness routine calculates thestresses, generates thedifferential stiffness matrix partitions inglobal coordinates andinserts themintheoverall matrix. 4.87-76\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.4.14 Piecewise Linear Analysis Calculations (Subroutines PSTRM andPSQDM ofModule PLA3and Subroutines PKTRM andPKQDM ofModule PLA4) Theadditional ECPTNL andESTNL entries are: _k co-Thepreviously computed strainvalue onceremoved. k E-Thepreviouslycomputedstrainvalue. E-Thepreviously computedmodulus ofelasticity. “I0x ,k C_y Thepreviouslycomputed membrane stresses Ik exy Alloftheabove values areinitially zerowith theexception ofE,which isinitially the originalmodulus ofelasticity present onaHATIcard. ForbothPLA3andPLA4, theelementstress matrix calculations aregeneratedinthesame manner asEquation 24ofsection 4.87.4.6 (Equations 79through 82ofsection 4.87.4.8 for theQDMEM), with theexception thatforallDMAPloops (ofthePiecewise Linear Analysis Rigid Fo_Inat) after thefirst, the3by3material properties matrix [Gelisreplaced byastress- dependent 3by3material propertiesmatrix [Gp]defined asfollows [Gp] =Eom l+s_F (sym)-V+SxSyF l+s2F2_xySxF 2axySyF 2(l+v)+4FC_xy2-1 (97) where ToEo 2 2]I/22a+ + x-x-y _y 3°xy g(Eo-E) F= 4_E*(98) (99) 4.87-76a (12-1-6g)\nMODULE FUNCTIONAL DESCRIPTIONS 2c_x-C_y SX:-3(too) 2oy-ox Sy: 3 gc andEoand_arethelinear type1material properties. IfE Calculate theincremental element stresses:(Ol) :O,orto=O,then[Gp]=[0]. box boy b°xy [Si]{AUgi}l(I02) where [Si]isgiven inEquation 24ofsection 4.87.4.6, and{bUgi}arethe3by1translational displacement vectors. Define theelement stresses foroutput andforupdating theECPTNL andESTNL: Oxl =ox+AOx(I03) @c OyI=oy+t,Oy OxyI:Oxy+AOxy(io4) (Io5) InPLA3, using theelement stresses above, theprincipal stresses arecalculated inthesame manner asinEquations 28through 31insection 4.87.4.6. Estimate thenextelastic coefficients asdefined bythefollowing equations: 2 2+30 TI = axl-axl_yl +ayl yl ’ El:f-I(Tl) ,(I06) (I07) where fisthetabular stress-strain function. define E1=O,E1=c,and=CO).(When _lisoutside therange ofthefunction, 4.87-76b (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Calculate: AC:C1-C(io8) A£ =c-CO(109) c2=cI+y(_) ,(llO) where yisaloadratio parameter calculated bythemodule driver (PLA3 orPLA4). Calculate: z2=f(c2) ,(Ill) where fisthetabular stress-strain function. Then theestimated nextmodulus ofelasticity, El,isgiven by: El I2\"I,forc2#c1c2-c1 0 ,forc2=cI.(If2) ThenewESTNL andECPTNL entries are: Eo C “k E=C =c1 =E1 ax=axl Oy =_yl axy =axyI(I13) (I14) (I15) (I16) (i17) (118) Inmodule PLA4, theelement stiffness matrices arecalculated inthesamemanner as Equations 15and16ofsection 4.87.4.3 (orasinsection 4.87.4.9 fcrtheQDMEM), with the 4.87-76c (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS exception that[Ge]matrix isreplaced bythe[Gp]matrix (Equation 97). Inthecalculation for [Gp],El(Equation 112)isusedforE*,andthenewlycalculated membrane stresses (Equations 103, 104and105)areusedinplaced ofOx’Oyand_xy” 4.87.4.15 Thermal Analysis Calculations fortheMembrane Elements (Subroutine KTRMEM and KQDMEM ofModule SMAI) Ifthesubroutines aretobeusedforthermal analysis, thelogical word, HEAT,inlabeled COMMON SMAIHT is.TRUE. Thegeometry oftheelement isprocessed, aswithastructural analysis problem, toproduce theparameters x2,x3,Y3’A,andt.Forthermal analysis, the2x2 material conductivity matrix [G_]isobtained bycalling subroutine HMAT. Thetransformation matrices (2xI)between temperatures attheconnected gridpoints andthermal gradients are: [c_]= [c_]=1x3-1 x3 [C_]: Thescalar heatconduction termsare: Ecj IJ where icorresponds tothepivotgridpoint, andj:l,2,and3. 4.87-76d (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS The6x6partitions ofthestiffness matrix are: l0 [Kij] =kijol 01OI0 ooII oIo Thebasic differences which exist insubroutine KQDMEM forthermal analysis arethat no transfomations between global andelement coordinates areperformed. 4.87-76e (811172)\nSTRUCTURAL ELEMENTDESCRIPTIONS 0,0 Figure4.Triangular membraneelement. 4.87-77"},"title":"Programmer's Manual P65"},"/docs/programmers/programmers_manual_066/":{"data":{"":"4.87.5 4.87.5.1 IoMODULE FUNCTIONAL DESCRIPTIONS TheTRBSC, TRPLT andQDPLT Elements Input Data fortheTRBSC andTRPLT Elements. TheECPT/EST entries fortheTRBSC andTRPLT are: Symbol Description SILl,SIL2,SIL3 Ni’Xi’Yi’Zi[ i:I,2,3 I t MatId.b Mat.Id.s 8 Z1,Z2 t 2.Scalar indices fortheconnected grid points Reference numbers forlocal coordinate system and__^.L___ ..____ ,o_o_,un_ inua_,cuoord,n_L_ ofthethree connected gridpoints Bending moment ofinertia perunitwidth Effective thickness fortransverse shear Material property identification number forbending Material property identification number forshear Material orientation angle Nonstructural massperarea Fiberdistances forstress calculations Temperature ofelement formaterial properties ECPTentries fortheQDPLT. Theentries arethesameasthosefortheTRPLTexcent thatfourpoints areused. Coordinate system data UsingNi,Xi,Yi’ZiandtheCSTMdatablockthe3by3global-to-basic coordinate trans- formation matrices [Ti]areproduced foreachpointiviasubroutines TRANSD orTRANSS. 4.Material data Using thematerial property identification numbers, theorientation angle, theelement temperature andtheMPTandDITdatablocks, thefollowing dataarecalculated: 4.87-78\nSTRUCTURAL ELEMENT DESCRIPTIONS Symbol Description [Gb] 3x3elastic property matrixforMatIdb ge Structural damping coefficient forMatIds Gs Shear coefficient FortheTRPLT andtheQDPLT, theorientation ofthematerial relative toeachsub- triangle mustbecalculated fromthegeometry andtheorientation given forthe whole element. Thedetails ofthiscalculation aregiven inthenextsection. 4.87.5.2 General Calculation fortheTRBSC Element I.Thecoordinate system isdefined bythethree connected points a,bandc. {i},{j}and{k}aretheunitvectors along thex,yandzaxis inbasic coordinates. Xi’YiandZiarethelocation coordinates ofthethree Points, i=a,b,c.(Theelement coordinate system forthebasic bending triangle isshown inFigure 2ofsection 5.8of theTheoreticalManual). {Vab} Ixb XaI’=Yb Ya Zb Za(1) {Vac} Xc Xa1=Yc-Xa ’ Zc-Za(2) Thexaxisisdefined bytheunitvector\" {i}-{Vab} l{Vab}](3) Calculate: {i}x{Vac} {k}:iyi}x{Vac} I’(4) 4.87-79\nMODULE FUNCTIONAL DESCRIPTIONS Theyaxisisdefined bytheunitvector, {J}={k}x{i}• (5) 2.Thelocations ofthepoints inelement coordinates are: Xa Ya Yb=0(6) Ycxb=I{Vab}[, xc=Vac}T{i}, {Vac}T{j}=l{i}x{Vac} (8) (9) 3.The3x6transformation matrix fromthesixdisplacements inelement coordinates tothethreedegrees offreedom usedintheplateis: [ElT 11Ik2k3000 0 0 iIi2i3. 0 0 JlJ2J(lO) 4.Thecoefficients usedfortheplateare: [D] [G2]::IEGb] ts[Gos(11) (12) 4.87-80\nSTRUCTURAL ELEMENT DESCRIPTIONS where [Gb]isthe3x3material matrix forbending andG_isthecoefficient for m transverse shear. Theareaofthetriangle, A,thelocations ofthec.g., and y, 2 andtheradii ofgyration about theorigin, p,p_andPxyaregiven by: A=½XbYc’ (13) :½(Xc+xb), – l Y=Yc ’ Px:T(+XbXc+X) ‘(16) [Kx]2 12 Py=TYc ’ 2 Yc Pxy=T(Xb+2Xc)\" 5.Thestiffness matrix ingeneralized coordinates {q}is: Dll JD13 J__ JD33 L__ =4AI I JD12 3x’DI1 -F-A– -I—V– LD22 SYMMETRICALJ_DI2 J x-D23 l+2y-D33 J3_D23 I +6PxyD13 2 J4PxyD23 J2 ++6pyD23 14/._°33 J’;_022(17) (18) •(Ig) 4.87-81\nMODULEFUNCTIONAL DESCRIPTIONS 6.Thetransformation fromgeneralized coordinates togridpointdisplacements (relative topoint\"a\"ofthetriangle)withnotransverse shearis: [_]m I Xb2 0 0 Xb3 0 0 0 xb 0 0 0 0 _\" 0 0 -3x2-:’b0 0b 2 Xc XcYc yc2 Xc3 2XcYc Yc3 0 xc 2yc 0 2XcYc 32Yc 2 0-2Xc -Yc 0 -3x# “Yc where {q}=[]{u} (notransverse shear) 7.Iftransverse shear effects aretobecalculated (Gsts#0),thefollowina steps arefollowed: a.Define(2O) [Hyq]b, _0J0J6(JliDll+Jl2Dl3 )JJll(2D12+4D33)+6JI2D23 L_O JOJ6(Jl2D ll+J22Dl 3)ljJ12(2D12+4D33)+6J22D23[G2]-l. (21)[J] Calculate thetransformation matrix oftheshear coordinates: 4.87-82\nwhere C6STRUCTURAL ELEMENTDESCRIPTIONS Yx :[Hyq] {q}• Yy! Thestiffness matrix oftheshear terms isadded tothebending stiffness matrix. [Kq]=[K×]+Ats[Hyq]T [G2][Hyq] i d.Theeffects ofshear deflection onthetransformation fromgeneral todisplacement 0 0XbHyql4 XbHyql5 XbHyql6 0 0 0 0 0 0 0 0 0 0coordinates iscalculated: 0 0 0 [HI:[7]- 0 0 0 Ifnoshear exists, [H]=[H] Thematrix [H]isinverted:0 0 0 0 0 0 Bo goXcHyql 4XcHxql5 XcHyql6 +YcHyq24 +YcHyq25 +YcHyq26 0 0 0 0 0 0 [Hqu] :[HI-l. Therigid bodyeffects aregiven bvthematrices [Bb]and[Bc]defined asfollows:(23) (24) (25) (26) 4.87-83 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS [Bb] [Bc]L]10-xb = 10, 01 Yc-Xc1= 10 01(27) (28) I0.The3x3stiffness matrix partitions inelement coordinates arecalculated as foI1ows: [K]:[H-I]T[Kq][H-l], (29) r”=\u003eL_c_i_ccJ o [kca]:[kcb]EBb]-[kcc][Bc], (31) [kba]=[kbb][Bb][kbc][Bc], (32) [kaa]=[Bb]T [kba][Bc]T[kca], (33) 4.87,5.3[kac]:[kca]T, (34) [kab]:[kbaIT (35) Stiffness Matrix Calculations fortheTRBSCElement (Subroutine KTRBSCofModule SMAI). l• are: I!I iliT [E][kij][E]T _0 [Kij]= ITi/ IJ iTi]Ifthebasictriangle isusedbyitselfasaTRBSCelement, thestiffness matrices ’ (36) 4.87-84\nSTRUCTURAL ELEMENTDESCRIPTIONS where i:a,bandc j=a,bandc 2.Thestructural damping matrices arecalculated using ge’thestructural damping coeffi- cient, forthereferenced bending material. The6by6damping matrix partitions are: [K_/] :ge[Kij]\" (37) 4.87.5.4 Stress Calculations fortheTRBSC Element. Thestress calculations involve twophases. Thefirst phase isusedtocalculate the matrix relations between element forces andgridpoint displacements. I.Therelation between element forces andgeneralized coordinates is: [ks]=2DlI 2D12 2Dl3 0 Lo2X-Dl2+ 2D132D12 6XDll 4)D13 6yDI2 2xD22+ 2D23 2D22 6RDI2 4yD23 6y-I)22 2xD23+ 2D33 2D23 6_Dl3 4.vD33 6yD23 -2D12- 0 0 -6DlI -6D23 4D33 0 0 -6D13 -6D23 -6D22(38) where IMxMxyI Vx Vy=[Ks]{q}.(39) 4.87-85\nMODULE FUNCTIONAL DESCRIPTIONS Note: Whenthebasictriangle routine isusedforstress recovery intheTRPLTor QDPLT, thevalues xand#intheabovematrix arereplaced byxcandYcorXqandYa\" 2.Thematrix [HIiscalculated andinverted. The[B]matrix iscalculated ([B]isa 6x3matrix, the[Bb]matrix (Equation 27)comprising thefirstthreerowsandtile[Bc] matrix, Equation 28,comprising thelastthreerows). The[E]matrix andtheglobal-to- basictransformation [Ta],[Tb],[Tc]aregenerated. [H]“Iispartitioned. [H]-I:[Hlb!Hlc]. (40) Theelement force-global displacement matrices are: p] [Sa]=_[ks][H]-I[B][E]T –,—a\"0, (41) LO:Tel I i°b][Sb]= {St}:[D]{m} (43a) wheremisthevector ofthermal expansion coefficients forthebending material. 3.Thesecond stageofstress calculations involves theuseofthedisplacement vectors {Ua},{ub}and{Uc}. Theelement forces are: Mx My Mxy Vx Vy[Si]{ui}-{Me}, (44) i=a,b,c 4.87-86 (9/I/70)\nMODULEFUNCTIONAL DESCRIPTIONS where{Me}isthevectorofthermalmomentsgivenonaTEMPP2datafieldorifthegradient isgiven: ! {Me}:-T{St} With nothermal loads thestresses are: (_xi °yi xyiZ° 1 IMX Mxy• i:I,2 (45) With direct thermal bending moments, {Me}, given• thestresses are: °xi °yi °xyZ° 1 IMx Mx+{Me}- ! Withthermal gradient data,T,thestresses are:(Ti-T){St} , i=l,2(45a) °xi (..jt =Zi iMx M.. y Mxy1 ! _-(T:-Z.T T)(S.} , (45b) 1\"i I L i=1,2 Tiisthegiven temperature atpoint iandTistheaverage temperature oftheelement. If noTivalues aregiven, Equation (45) isused. 4.87-86a (911170)\nSTRUCTURAL ELEMENT DESCRIPTIONS Theprincipal stresses andtheir orientation arecalculated inthesamemanner asthose for theTRMEM element, Section 4.87.4.6. Thermal loads aregenerated forthiselement intheSSGImodule. SeeSection 4.87.5.12 for theequations. 4.87.5.6 Stiffness Matrix Calculations fortheTRPLT Element (Subroutine KTRPLT ofModule SMAI). TheNASTRAN bending triangle (triangular plate element, TRPLT) isfabricated fromthree basic bending triangles. Thegeometry andnotation areshown inFigure 5.Thegeneral approach isto calculate thestiffness matrices forallthree subtriangles orbasic triangles andusethecon- straint equation ofequal slope atthemidpoints oftheconnected edges tocalculate areduced stiffness matrix. Since onlythepartitions ofthestiffness matrix related toonenoint (thepivot gridpoint) areusedforeach calculation, theextra partitions arenotused. IntheNASTRAN system, thebasic bending triangle calculations areinsubroutine form, andthevariables necessary tocall’itare: Xb’Xc’Yc’theproperty andmaterial coefficients, andthetransformations foro_enting theanisotropic materials. The following steps areusedtocalculate theoverall stiffness matrix forthecomposite triangle. I.Theelement coordinate system isdefined bythelocation ofthethree gridpoints inbasic coordinates, {x(1)}, {x(2)} and{x(3)}: {V2}:{x(2)}-{x(1)}, (46) {V3}:{x(3)} -{x(1)} , (47) X2:I{V2}I, {v2} {i}:T2, Y3:l{i}x{V311(4S) (49) • (so) {k}{i}”:{V3} Y3(51) 4.87-87 (9/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS {J}={k}x{i}, :LO-’:{i}II(6x3)(52) (53) Thelocations ofthepoints inthiscoordinate system are: I°l{R(1)} :0’ {R(2)} =., t(54) (55) X3:{v3}T {i}, (56) Ix31{R(3)}= Y3 R(4)}={X2Y3+(57) (58) 2.Foruseintransferring points tothesubtriangles, theinteger matrix [M]is formed: Pointa Pointb Pointc Subtriangle [H] I1 2 41 I= 2 3 4 II 3 1 4 III(59) TheRomannumerals I,IIandIIIindicate thesubtriangle numbers. Points I,2and3are thecorners ofthewhole triangle whose centroid isdenoted by4.Points a,b,andcare thecorners ofthesubtriangles. Pointcinthesubtriangles isalways thecenter point, 4. (seeFigure 5). Note: Steps3through 7areDerformed foreachsubtriangle. 4.87-88 I\nSTRUCTURAL ELEMENT DESCRIPTIONS 3.Thelocation ofthethree points foreachsubtriangle, B,isdefined bythe vectors {ri(a)}, {ri(b)}, {ri(c)}. Interms oftheoriginal vectors these are: ri(a)=Ri(M(B,I)) ri(b) :Ri(M(B,2)) ri(c) :Ri(4)i=l, 2,(60) (61) (62) where M(B,i)isthe(B,i)element ofthe[M]matrix. 4.Thevariables necessary tocalculate abasic bending triangle areXb,xcandYcsince thelocal coorGinate system foreachsubtriangle ischosen suchthatthe\"a\"point lieson theorigin andthe\"b\"point liesonthexBxis. Foreachtriangle thefollowing arecalculated: =V[rl(b) -rl(a)]2 +[r2(b) -r2(a)]2 (length ofbase), (63) l wI=(rl(b) -rl(a)), (64) w2=(r2(b) -r2(a)) (65) 5.Thematrix [T]usedfortransforming theelement coordinates tosubtriangle coordinates isformed: I 0 0iIT]= 0 wI w2• (66) 0 -w2wI Thematerial orientation angle, em,iscalculated foreachsubtriangle. Theequations are: sin(0m):wIsin(0)-w2cos(_), (67) cos(0m)=wIcos(0)+w2sin(0). (68) 4.87-89\nMODULEFUNCTIONAL DESCRIPTIONS Thedisplacements inthesubtriangle systemareequalto[T]timesthedisplace- mentsintheoriginalsystem(notedet[T]isunitlength,xb=Rl(2), xc=Rl(4) and Yc=R2(4) forsubtriangle I). 6.Theparameters xb,xcandYcarethencomputed: Xb=wl[rl(b) _rl(a)] +w2[r2(b) _r2(a)] , (69) Xc:wl[rl(c) _rl(a)]+w2[r2(c ).r2(a)] , (70) Yc=-w2[rl(c) -rl(a)]+wl[r2(c) -r2(a)]\" (71) 7.Thestiffness matrices areformed asinthebasic bending triangle (Equations 30through 35)andgive: [kia], [kib], [kic], [kca][kcb], [kcc] i=pivot gridpoint. Theyrelate forces anddisplacements inthesubtriangle coordinate system andaretrans- formed totheoverall element cooYdinate system (i.e., thesamesystem assubtriangle I). Since thestiffness matrices foreachpivot gridpoint arecalculated separately, notallofthese partitions areused. Foreachpivot gridpoint, i,thefollowing partitions areused: [Kil],[Ki2], [Ki3], and [KI4], [K24],[K34], [K44]• Theinteger mapping matrix [M]isusedtodetermine ifandwheretoaddthenartitions. Thestepsusedforpivotpointiandtriangle Bare: 4.87-90\nSTRUCTURAL ELEMENT DESCRIPTIONS a)[T]T[kac] [T]isadded to[Km,4], m=M(B,I) [T]T[kbc][T]isadded to[Km,4], m:M(B,2) [T]T[kcc] IT]isadded to[K4,4] b)IfM(B,I) =i: IT]T[kaa] LT]isadded to[Kii] IT]T[kab] [T]isadded to[Kiwi, _=M(E,2) orifM(6,2) =i IT]T[kbb] IT]isadded to[Kii] IT]T[kabIT[T]isadded to[Kic], _=M(B,l) c)Theabove isrepeated foreach ofthethree subtriangles. 8.Thenumber 4point inthe middle isadummy point, andsince thedisplacements atpoint 4arefunctions oftheotherCisplacements, itwillberemoved fromtheproblem byincluding thecalculations forthepoint 4displacements inthecalculations forthecorner displace- ments, asshown insteps8a,8b,8cand8d. a.Calculate thefollowing geometric constants: _l=(x2+cyc2)I/2, (72) I 21I/2 2= (Xb-Xc)2+Yc ’ (73) xC Sl:-T ’ (74) xb-xc S2=_2 ’ (75) Yc Cl-_l ’ (76) 4.87-91\nMODULEFUNCTIONAL DESCRIPTIONS Ycc2-2 b.Theformulas forthelocations ofthemidpoints are:(77) 1 xI:Xc(78) 1 Yl=2Yc(79) xb+xc x2=2 1 Y2=Yc(80) (81) C. The[H]matrix iscalculated asfollows: [Hu/]-2xIcI(XlSl-YlCl)2YlSl-3x_cl 2x2c2(x2s2+Y2C2)2Y2S23x_c2yl(2XlSl-ylCl)3y Sl1 y212x2s2+y2c213y s2(82) Theslopes interms ofthedeflections ofpoints a,bandcaredefined bythe matYices: [H–b!H/C]:[Hu/][H]-I (83) [H-a]:[H/][H]-I [B]+[00SlClIs2c2 (84) where[H]-Iand[B]arecalculated whilegenerating thestiffness matrices. [H]-I istheinverse ofthe6x6matrix inEquation 25,and[B]= isa6x3matrix where [Bb]and[Bc]arecalculated inEquations 27and28respectively. These aretransformed toelement coordinates by: [H_m] =[H_m] [T] (85) d.Eachrowofthematrix corresponds totheslope angle ofthemid-point ofthesides. 4.87-92 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS Thefirst rowdefines theslope ofthenormal tothelineconnecting point “a\"tothe center point. Thesecond rowdefines theslope ofthenormal tothelineconnecting point “b\"tothecenter point. Using the[H_] matrices, four3by3matrices, [GM], areformed asfollows: The[M]matrix isnowused: abc [M]= 234II=B, (86) 314III Forthe[H_]Bmatrix, (=a,bandc;8:I,IIorllI), thenumber M(8,) which identifies thematrix [GM]isfound. Thethree terms inthefirst rowof[H_]8areadded tothe M(B,I) rowofthe[GM]matrix. Thethree numbers inthesecond rowof[H_]Bareadded to theM(,2) rowofthe[GM]matrix. Thisprocedure isrepeated forthethree [H]matrices foreachtriangle 8. Thestiffness matrix partitions ofthewhole plate arecomputed from: [K_j] :[Kij] -([G4]-I[Gi])T[Kj4 ]T-[Ki4][G4]-I[G] +(LG4]-l[Gi])T[K44][G4]-l[Gj]fori=l,2,3 j=l,2,3 where [Kij] arecomputed asinstep7. 9.Using thelocations ofthethree gridPoints inbasic coordinates, the3x3 transformation matrices [Tj], j=l,2,3,arecalculated. The6x6matrices [Cj] areformed as: __[Tj] __[Cj] _-0 IIT j:l,2,3 lO.Thestiffness matrix partitions inglobal coordinates forDivot point iare computed from:(87) (88) 4.87-93\nMODULE FLiNCTIONAL DESCRIPTIONS where:[K_j] =[ci]TEE][KTj][E]T[cj] [KTj]wascalculated instep8 [E]wascalculated instep1 [Ci],[Cj]werecalculated instep9(6x6), (89) Q Figure 5.Thetriangular plateelement, TRPLT. I,2,3=GIVENGRIDPOINTS 4 =CENTROID OFTRIANGLE I,II,III =BASICSUBTRIANGLES a,b,c=ORDERED VERTICES OFSUBTRIANGLES 4.87-94\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.5.6 Structural Damping Matrices fortheTRPLT Element. Thestructural damping matrices are: [K14.,i] :ge[Kgi],(90) where geisthestructural damping coefficient forthebending material referenced. 4.87.5.7 Stress andElement Force Calculations fortheTRPLT Element (Subroutines STRPLI andSBSPL2 ofModule SDR2). Forstress recovery, therelationship between thecenter point andthecorner ooints isused todescribe thestress functions foreach subtriangle. Thestresses ineach sub- triangle atthecenter point areaveraged toprovide thefinal element stress andforces. I.STRPLI isused tocalculate thephase lstress-displacement relations. Thefollowing data arecalculated using thesa_e equations asthose forthestiffness matrix generation routines. [Ci] -i=l,2,3-Global-to-basic transformations [E] -element tobasic coordinate transformation Xb’Xc’Yc-subtriangle point locations sine, cosO -material orientation Values computed for each subtriangle wl,w2-element-to-subtriangle coordinate transformation -[g, -Ig_lUll- -BO_II_I IQI.X gll_l_ T’_ [H_a]’ b]’[H_c] ship matrices Foreach subtriangle, 8=I,II,III, thefollowing matrices areformed: 4.87-95\nMODULE FUNCTIONAL DESCRIPTIONS EV_]=0 w1 -w2 m oo 2 w2 w# 2WlW2 0 0 22 WlW2 -WlW2 Wl-W2 0 0 0 0 0 wI -w2 0 0 0 w2 wI_lio]IT]: w2, (91) wI (92) Foreachsubtriangle B,three 5x3transformations arecalculated, [S],a=a,b,c. These aretransformed andadded tothecorresponding matrices foreach point with theequation: [V_][S ][T_], (93) where the_,which denotes points onthesubtriangle, corresponds tothegridpoint M ontheoverall triangle. [H_]:[H_][T]:a,b,c The[H]matrices areaddedtot.h_corresponding [GM]matrixwiththeappropriate rowinterchanges. Whenthedataforallthreesubtriangles havebeengenerated, the following operations areperformed:(94) rs ]** 1 =[SM]-[$4][G4]” [Gi] forM=I,2,3; [SM]=[S_4][E]T[ci] forM=I,2,3.(95) (96) 4.87-96 (8/I/72)"},"title":"Programmer's Manual P66"},"/docs/programmers/programmers_manual_067/":{"data":{"":"STRUCTURAL ELEMENT DESCRIPTIONS 2.Phase 2 a)Thevector offorces iscomputed first. MX M Y Mxy Vx VZ3 i!l[Si]{ui}-{Mt}(97) where {Me}isthethermal moment vector. {Me}=Ifathermal gradient isgiven: ! {St}T b)With nogiven temperatures atthestress points, thestresses arethen calculated from theequations orMxZi °xi - I °yi: M 7 Oxyi = I(98) i:I,2 (99) (ioo) Iftemperature values Tiatthestress points aregiven thefollowing eauations areused. °xiI Zi°yi =-T OxyiIMy Mxy+{Me} (Ti-T){St} ,i:1or2 4.87-97 (9/I/70)\nSTRUCTURAL ELEMENTDESCRIPTIONS Oxi Oyi °xy 4.87.5.8MX Zi =–-My_1(Ti_ZiT__)St} •i:lor2 Mxy whereT’isthegradientor{Me}isthethermalmomentvector.Tistheaveragetempera- turefortheelement.Theprincipalstressesandanglesarecalculated usingthesame formulaasthoseforthemembraneelement(seeSection4.87.4.,,Equations28,29and30). ThermalloadsaregeneratedforthiselementintheSSGImodule.SeeSection4.87 4.87.5.11forthealgorithm. StiffnessMatrixCalculations fortheQDPLTElement(Subroutine KQDPLTofModuleSMA1) Thequadrilateral plateelementusestwosetsofoverlapping trianglesasshownin Figure6.Thelogicisthesameasthatforthequadrilateral membraneexceptthattheorderof thepointsofthetriangles ischosen toplace thetriangle coordinate systems along the diagonals. I.Thefollowing equations areused tocalculate thethree unit vectors, {i}, {} and{k}, which define theelen_nt coordinate system. 4.87-g7a(9/l/70)\nMODULE FUNCTIONAL DESCRIPTIONS {Vi}:Xi Yi Zi,i=I,2,3,4. (101) Thediagonals are: {dI}=(V3}-{VI},(102) {d2}={V4}-{V2}(103) Theareaiscalculated from: A=½1({dI}x{d2})l. (104) Thenormaltotheplaneiscalculated from: {dI}x{d2}{k}= I{d1}x{d2}I(105) {aI}:{V2}-{VI},(106) h:½{al}T{k},(I07) Thevectors lyinginthenewplanearecomputed from: {i}={aI}-2h{k} I{a1}-h{k}l(IO8) {,i}={k}x{i}. (I09) Thenonzero positions ofthepoints intheplanearecomputed from: 4.87-98 (811/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS X2={ai}T{i}, X3={di}T{i}, Y3={di}T{j}’ X4=X2+({d2}T{i}) Y4={d2}T{j}’ {R(i)} =(llO) (Ill) (I12) (I13) (114) (llS) 2.Element interior angle tests. Theinterior angles ofthequadrilateral mustbelessthan180o.Thefollowina checks accomplish thistask. Test Point withangle greater than180° If Y4\u003c0 1 If Y3\u003c0 2 Y4 If x4\u003ex2-(x2-x3)_ 3 Y3 If X3\u003cV_4X4 4 3.Therelative dataforeachsubt_angle mustbecalculated andpassed tothe matrix calculation subroutine. Theinteger mapping matrix [M]denotes which points, l,2,3,and4ofthequadrilateral, areusedinthesubtriangle. Therowposition indicates thesubtriangle towhich thepoint belongs, andthecolumn position indicates thecorresponding point inthatsubtriangle. 4.87-99\nMODULE FUNCTIONAL DESCRIPTIONS [M]Pointa Pointb Pointc m 2 4 1 3 1 2 4 2 3 1 3 4 BTriangle No. I II III IV 4.Foreachtriangle thestiffness matrix iscalculated initsowncoordinate system. Thissystem hasitsorigin atpointa,pointbliesonthexaxis, andpointchasapositive ycomponent. {R(i)} values aretransferred to{r()} values (=a,b,c),andthefollowing calculations areperformed: {v(b)} :{r(b)} -{r(a)}, (116) {v(c)} ={r(c)} -{r(a)}, (117) wllw2_{v(b)} l{v(b)}l(118) xb=l{v(b)}l, (llg) xb,xcandYc{v(c)}. arethepoint locations needed bythesubroutine. [T] I 0 010 wIw2. 0-w2wI(120) (121) 4.87-I00\nSTRUCTURAL ELEMENTDESCRIPTIONS wIisthexcomponentofthenewxaxisandw2isitsycomponent, [T]transforms thezdisplacement andthetwoanglesfromthequadrilateral systemtothetriangle system. Inordertocalculatethematerialmatricesinthebasictriangleroutine,thematerial orientation angle,em,is: sinOm=wIsine -w2cos8 ,(122) cosOm=wIcosO +w2sine . wIandw2arethecosine andsine oftheangle made between thebase ofthetriangle andthematerial orientation axis.(123) 5.Theoutput ofthebasic bending triangle routine arethe3x3matrices: [kaa], [kab], [kbb], [kac], [kbc], [kcc] Totransform these tothequadrilateral system thefollowing equation isused: [K_j] =½[T]T[kij][T] . These matrices areadded tothecurrent positions inthequadrilateral matrix partitions using the[M]matrix instep 3. 5.Fereach pivot point ithefollowing 3x3partitions areforn_d:(124) [kej], forj=l,2,3,4. 7.Using thegeometry data, the3x3global-to-basic transformations [Tj] areformed forj=l,2,3,4.These areexpanded tothe6x6matrices [Cj]’. 4.87-I01\nMODULE FUNCTIONAL DESCRIPTIONS [Cj]Tj o0 Tj(125) 8.Thestiffness matrix partitions inglobal coordinates arefoundfrom: [K_j]: where [E]isdefined inEquation 53.[ci]T[E][kTj][E]T[c j],(126) 4.87.5.9 Stress andElement ForceCalculations forQDPLT Element (Subroutines SQDPLI and SBSPL2 ofModule SDR21 I.SQDPLI calculates thephase1stress-displacement relations. Acoordinate system matrix [E],thesubtriangle basevectors {Wl,w2}Tandtheglobal-to-basic trans- formation matrices arecalculated withthesameequations asthoseusedintheplateelement stiffness matrix calculations. Foreachsubtriangle, B,thefollowing matrices areformed: I00iITB]=0wIw2, (127) 0-w2wI [v_]2 wI w_ -2WlW2 2 2 w2 wI 2WlW2 22 WlW2-WlW2 (Wl-W2) 0 0 0 0 0 00 0 0 0 wI -w2 w2 wI9 (128) 4.87-102\nSTRUCTURAL ELEMENT DESCRIPTIONS Foreachsubtriangle thestresses mustbecalculated attheintersection Point ofthe diagonals. Inthequadrilateral system: x2x3Y4 (12g) x5 +x3Y4(x2-x4)Y3 Y3 Y5-x3x5• (130) Foreach subtriangle: ixsi{V5}:{r(a)} - ;Xq_J{V5}]; J_:O; (131) Y5 where Xqandyqdenote thelocation oftheintersection ofthediagonals ofthequadrilateral in thesubtriangle coordinate system. Thestresses arecalculated atthis point. ITB]transforms thetranslation andtworotations intheelement system tothesub- triangle system. [VB]transforms thethree moments andtwoshears ofthesubtriangle tothe element system. Foreachsubtriangle B,three 5x3transformations arecalculated, [S_], =a,b,c.These aretransformed andadded tothecorresponding matrices foreach point with theequation: [se], #ZIVY]IS ]ITB], (132) P where them,which denotes points onthesubtriangle, corresponds tothegridpoint Monthe quadrilateral . 2.Using thebasic-to-element andglobal-to-basic transformations, thestress matrices [SM]inglobal coordinates areformed from: (133) 4.87-I03 (ll/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS 3,Thethermal loadvector is: {St}:[D]{m} Theadditional dataforphase2calculations are I,ZI,Z2fromtheECPTdata. 4.Phase2(Subroutine SBSPL2) The5by6[SM]matrices areusedinthesamemanner astheTRPLTelements (seeEquations 97through I00). 4.87.5.10 Lumped MassMatrix Generation fortheTRBSC, TRPLT, andQDPLTElements (Subroutine MASSTQ ofModule SMA2). Thelumped massmatrices arecalculated inthesamemanner asthetriangular orquadrilateral membrane except thatthematerial density isnotused(seeEquations 86through 96insection 4.87.4.10). Theonlycontribution tothemassmatrix fromtheseelements isthenonstructural mass, _. 4.87-104 (ll/I/70)\nMODULE FU_CTIOtIAL DESCRIPTIONS 4.87.5.11 Coupled ssMatrix Calculations fortheTRBSC Element (Subroutine MTRBSC ofModule SMA2). Themass properties ofthetwo-dimensional elements aredefined bytheir geometry, themass density given bythematerial, thethickness oftheelement andthenonstructural mass. The normal execution ofNASTRAN will result inthecalculation ofthetotal massoftheelement and distribute itaslumped masses attheconnected gridpoints (subroutine MASSTQ ofmodule SMA2). Iftheparameter C_UPBAR issetbytheuser, theelements with bending properties willhavetheir mass distributed according totheir elastic properties. Thisresults inelement massmatrices with directional properties andcoupling terms between points inanelement. Since thethickness oftheTRBSC element iszero, acoupled massmatrix forthiselement doesnotexist. The.RBSC subroutine isusedexclusively bysubroutines MTRPLT andMQDPLT. I.Themassmatrix [M]ingeneralized coordinates iscalculated inthefollowing steps. a.Integral values Iijusedinthemassmatrices arecalculated fromtheformulas: xb xb-xc]\" AOj= -_ YcJ+l , j=O,l….6 (134) (Xc)i+l (Yc)j+l ixb i=1,2….6 Aij =(i+l) (i+j+2) +T_Ai-l,j ‘j=0,I,…6 (135) (Xc)i+l = (yc)i+j+2 i=O,l….6 Bij (yc)_l (i+l)(i+j+2) ’ J=O,l….6 (136) li AijBij i=O,l….6 j=m[ + ]’ j=O,l….6 (137) where misthenonstructural mass, andwhere Xb,xcandYcarecomputed inEquations 7, 8,and9respectively. 4.87-I04a (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS b.Partition [M]intosubmatrices. – I I Maa’IMar [M]_ 1Tl’ar Mrr m where [Maa]isa3by3matrix, [Mar]isa3by6matrix and[Mrr]isa6by6matrix.(138) c.Themassmatrix [_Taa]isgivenby: [Maa]I00 =I01 -Ii0 mI01 I02 -Iii-Iii 120 m(139) d.Theothermatrices, [Mar]and[Mrr], arelesssimple. Thealgebraic expressions for theelements ofthesematrices aregiveninTables laandIbbelow. Table la.Elements ofthe3by6Matrix [Mar]. Notes: Hyqijiscontracted toHij,where [Hyq]iscomputed inEquation 22. Mar..iscontracted toMik,whereMikrepresents anelement of[M]given1j inEquation 138. MI4=120 MI5=Iii MI6=102 MI7=130+HI4110 +H24101 4.87-I04b (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Table la(con’d). Elements ofthe3by6Matrix [Mar]. Ml8=I12+HlsIlo +H25101 M19=103+Hl6Ilo +H26101 M24=121 M25=If2 M26 =I03 M27=I31+H14Ill +H24102 M2B=If3+Hl5Ill +H24102 M29=I04+Hi6111 +H26102 M34=-130 M35=-I21 M36=-I12 M37:-140-Hi4120 -H24111 M38 =-I22-Hi5120 -H25Ill M39 =-ll3-HI6120 -H26111 4.87-I04c (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Tablelb.Elements ofthe6by6Matrix [Mrr]. Notes: Hyqijiscontracted toHij;Mrrijiscontracted toMik,whereMikrepresents anelement of[M]giveninEquation 138;Mij=Mji. M44:140 M45=131 M46=122 M47=150+H14130 +H24121 M48=132+H15130 +H25121 M49=123+H16130 +H26121 M55=122 M56=113 M57=141+H14121 +H24112 M58=123+H15121 +H25112 M59=114+H16121 +H26112 M66=104 M67=132+H14112 +H24103 M68=114+H15112 +H25103 M69:105+H16112 +H26103 M77=160+2H14140 +2H24131 +(H14)2120 +2HI4H24111 +(H24)2102 4.87-I04d (12-I-69)\nDM78 M79 M88 M89 M99MODULE FUNCTIONAL DESCRIPTIONS Table Ib(con’d). Elements ofthe6by6Matrix [Hrr]. 142+H15140 +H25131 +H14122 +Hl4HlsI2o +H14H25111 +H24113 +H24H15111 +H24H25102 I33+Hi6140 +H26131 +Hl4113 +Hl4Hl612O +H14H26111 +H24104 +H24H16111 +H24H26102 124+2H15122 +2H25113 +(H15)2120 +2H15H25111 +(H25)2102 ll5+H16122 +H26113 +Hi5113 +Hl5Hl6120 +HlsH26111 +H25104 +H25H16111 +H25H26102 Io6+2Hl6Il3 +2H26104 +(H16)2120 +2H16H26111 +(H26)2102 4.87-I04e (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 2.Themassmatrix [Mmass]inelement coordinates iscalculated fromthefollowing equation: [Mmass]irI0T MaaiMar I’i0 I I :I_- Mr_-1_i,- -H-IB i ITar , I where [I]isa3x3identity matrix, [H]-Iiscalculated asinEquation 25,[B] calculated asinEquations 27and28.(14o) [cl= is Thecalculations arebroken downintothefollowing stepswhere: m Maa [Mmass] :Mba McaI I – iMabL…“a=__I Mbb IMbc blcb iMcc II and[;,lij], i=a,b,candj:a,b,care3by3matrices. a)Compute: [M]=[H-lIT[Mrr]H-I (142) b)Partition: c)Compute:Mcc] [Mail :[Mar] H-I (144) d)Partition: [Mail\u003e MabiMac 4.87-I04f (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS e)Calculate: [Mab] =[Mab]-[Bb]T[Mbb ]-[Bc]T[Mcb] , (146) [Mac] =[c]-[Bb]T[Mbc] -[Bc]T[Mcc] , (147) [Maa] =[Maa]-[Bb]T[Mab IT-[Bc]T[Mac IT (148) [Mab][Bb]-[Mac][Bc] [Mba]:[MabIT, (149) [Mca]=[MacIT (150) 4.87.5.12 MassMatrix Calculations fortheTRPLT Element (Subroutine MTRPLT ofModule SMA2) I.Thegeneral calculations forthemassmatrix ofthetriangular plate element, TRPLT, are thesameasthose forthestiffness matrix calculations (SeeEquations46through 71). 2.Foreachsubtriangle theoutput fromthebasic bending triangle subroutine arethenine 3x3matrices given inEquation141: mI I I I Ma I Mab I ac l_ I .__ ‘_IMbbIMbc 1 ! I I I IM ca I Mcb l c I I They relate forces andaccelerations inthesubtriangle coor6inate system andmustbetrans- formed totheoverall element coordinate system (i.e., thesamesystem assubtriangle I). Thematrix partitions inthesubtriangles areadded tothecorrect matrix partition for thewhole triangle. Forexample, forsubtriangle number II,[Maa]istransformed andadded to[M22], [Mab]istransformed andadded to[M23], [Mac] istransformed andadded to[M24], [Hba] istransformed andadded to[M32],etc. 4.87-I04g (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS Sincethemassmatrices foreachpivotgridpointarecalculated separately, notallof thesepartitions areused. Foreachpivotgridpoint, i,thematrices whichareusedwillbe: and 1,i=pointI,2or3ofcomposite triangle [M–14], [M24],[M34],[M44] Thenumber 4pointinthemiddle isadummypointandisremoved fromtheproblem inthe samemanner asinthecomputation ofthestiffness matrix (seeEquations 72through 86). Themassmatrix partitions ofthewholeplateare: [M_j] =[Mij]-(EG4]-I[Gi])T[_4 ]T-[Mi4][G4]-I[Gj] (151) +([G4]‘I[Gi ])T[M44][84]‘I[Gj] j:I,2, 3i:I,2,3 Notice thatifiandjwereinterchanged thematrix would betransposed; thisindicates thatthewholemassmatrix issymmetric. 4.Usingthelocations ofthethreegridpoints inbasiccoordinates, calculate the3x3 transformation matrices [Tj],j:I,2,3.Formthe6x6matrices: 5. coordinates usingthelogic:Lo!Tj] The3x3massmatrix partitions areexpanded to6x6sizeandtransformed toglobal(152) m M3=_X2Y3 ’ (153) where misthenonstructural mass, andX2,Y3arethex-coordinate andy-coordinate ofpoints 2and3respectively. 4.87-I04h (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS I M3 00 0 0 0 M30 0 0 0 Mll Hi2 Ml3 0 M21 M22 _23 0 M31 M32 M33 0 0 0 0 fori=j=I,2or3;and [_iij] :u 0 fori_j.0 m B 0 0 0 0 0 0 0 0 0 0 0 0 0 0 MlI M12 Ml3 0 0 0 M21 M22 M23 0 0 0 M31 M32 M33 0 0 0 0 0 0 0 Themassmatrix partitions inglobal coordinates are: [M_j] =[ci]T[E][_ij][E]T[cj] where Io [ci]: S(154) (155) (is6) (1.57) 4.87-I04i (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS istheglobal-to-basic transformation matrix, and [E]I {k}0:0 0{i}ll{j}I isthe6x6element-to-basic transformation matrix.(158) 4.87.5.13 MassMatrix Calculations fortheQDPLTElement (Subroutine MQDPLT ofModule SMA2). I.Thegeneral calculations forthemassmatrix ofthequadrilateral plateelement, QDPLT, arethesameasthoseforthestiffness matrix calculations (seeEquations I01through 123). 2.Foreachsubtriangle, theoutput fromthebasicbending triangle subroutine arethe nine3x3matrices: Maa Mab Mac Mba Mbb Mbc Mca Mcb IMcc I Thesearetransformed tothequadrilateral system bythefollowing equation: [Hij] =½IT]T[Mij][T], wher_ [T]isgiveninEquation 121. Thesematrices areaddedtotheircorresponding positions inthequadrilateral matrix partitions [M_j], inthesamemanner asthatforthestiffness matrix partitions ofthe quadrilateral (Seestep3ofSection 4.87.5.8).(159) 3.Foreachpivotpointi,thefollowing 3x3partitions areformed: [M_j],. forj=I,2,3,4 4.Themass ateach point intheplane oftheelement isduetothemass oftheattached triangles. Themasses ofthetriangles are: 4.87-I04j (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS mx_BmE=4bYc’B=I,II,I!landIV, where misthenonstructural mass, andxandYc points bandcrespectively ofsubtriangle B. Themasses atthepoints are:arethex-coordinate andy-coordinate of mI:½-[mI+mII+mIv] , m2:½[ml+mII+mllI] , m3=½[mII+mIll+mIv], m4=½ml+mIII+ mIv 5. effects areadded using thelogic:(161) (162) (163) (164) The3x3mass matrix partitions areexpanded to6x6matrices andthein-plane mass i mih mz=T mih2ii=z 4(165) (166) 4.87-I04k (12-I-69)"},"title":"Programmer's Manual P67"},"/docs/programmers/programmers_manual_068/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS [_iij]: fori=j=1or3;and [ej]=000 ° 0mi0mlzi -mz 00M11 M12 M13 i +ii0mzM21 M22 zM23 i0M31 -mz M32 000 0 000m mi 00mi0-mizM33 mi z 00M11 M12 M13 i M22+i 0-mzM21 IzM23 i0mz M31 M32 00 0M33+ii z i +Izw 0 0 m 0 0(167) (168) fori=j=2or4;and 4.87-I04 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS m 000 0 O 0 0OO 0 0 O 00MII MI2 MI3 0 00M21 M22 M23 0 00M31 M32 M33 0 000 0 0 0, (169) fori_j. 6.Using thegeometry data, the3x3global-to-basic transformations [Tj]areformed for j=l,2,3,4.These areexpanded to6x6matrices: [cj]Tj I0I ITj 0 I I 7.The6x6element-to-basic transformation matrix is:(170) [El i’‘‘‘Io___: ,i,}I_ I I I i] oIo,,Io,l_i_:J_i, 8.The6x6matrices aretransformed toglobal coordinates using theequation:(171) [M_j] :[Ci]T[El[_iij] [ElT[Cj] (172) 4.87-104m (12-1-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.5.14 Thermal LoadEquations fortheBending Elements (Subroutines TRBSC,TRPLT, andODPLTof Module SSGI). I.ThephaseISDR2routines forallbending elements generate forconnected points gl’g2’ g3’(andg4)the5x6matrices [Sl],[S2], S3. Thesematrices aregenerated in theSSGImodule withaminorchange inthebasictriangle routine. 2.Thematrix [Ks]isdescribed onpage4.87-85. IntheSDR2routine thevalues xandy depend onwhichelement isactually beingused. ForSSGImodule, calculate thematrix: [K_]=A[Ks(x,y)] , (173) thedefinition of[Ks]is: FDHXq] whereAistheareaofthebasictriangle and(x,y)isthecenter location ofthebasic triangle. Thelowerpartition willnotbeused. 3.Foreachtypeofelement thevector, {X},isgenerated where: {Xe}l ml2T\n0 0or {Xe}= [D]-I{Me} 10 0(175) I whereTisgivenonaTEMPPI datacardorcalculated fromaTEMPP3 card,ml’m?’_12arethe material thermal coefficient vector components, [D]isthe3by3material matrix, and{Me} arethethermal moments givenonaTEMPP2 card. 4.87-I04n (11/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS 4.The6xlthermal loadvectors inbasic coordinates are: {Pj} :N[Sj]T{Xe} ,j:I,2,3(and4) (176) where N=l:TRBSC N=3:TRPLT, TRIAl, TRIA2 N=2:QDPLT, QUADI, QUAD2 The[Sj]Tmatrix iscalculated fromthe[Ks]matrices ofthevarious basic triangles forming theelement. These [Ks]matrices aretransformed andcombined toproduce relations [Sj]between theaverage element moments andthedisplacements oftheconnected gridpoints, j. 4.87-104o (IIII170)\nSTRUCTURAL ELEMENTDESCRIPTIONS J v a)Definition ofplane l 24 3 4 3 1 2 1 2 b)Subtriangles Figure 6.Geometry ofthequadrilateral plate element, QDPLT. 4.87-I05 (8/1172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.6 TheTRIAI_ TRIA2tqUADIandqUAD2Elements Theseelements havetheproperties ofbothmembranes andbending plates. TheTRIAl andQUADIelements aretriangles andquadrilaterals whichmayuseseparate thicknesses andmaterials formembrane, bending andtransverse shearaction. TheTRIA2andnUAD2 elements aretriangles andquadrilaterals which useonethickness andonematerial to simulate ahomogeneous platewithconsistent membrane, bending andtransverse shear properties. Iftheseelements useanisotropic materials (defined onaMAT2bulkdatacard), the material isoriented withrespect totheelement coordinate system. Thedefinition ofthe coordinate system isasfollows: thevector fromthefirstpointtothesecond pointdefines thebaseorxaxis. Thezaxisisnormal totheaverage planeoftheelements, andthethird andfourth points havepositive yvalues. Massmatrices, thermal loads, anddifferential stiffness matrices fortheseelements useonlythemembrane properties. 4.87.6.1 InputDatafortheTRIAl, TRIA2, QUADIandQUAD2Elements I.TheECPT/EST entries fortheTRIAlorQUADielements are: Symbol Description SILi, i=1,2,3 _ Scalar indices oftheconnected gridpoints. ori=1,2,3,4 Ni Xi Yi Zii=1,2,3or i=1,2,3,4Referenced localcoordinate system andlocation inbasiccoordinates ofconnected gridpoints. @ MATIDm tm MATIDbMaterial orientation angle. Material identification number formembrane properties. Membrane thickness. Material identification number forbending properties. 4.87-I06\nSTRUCTURAL ELEMENT DESCRIPTIONS S bol I MATIDs ts P Zl,Z2 tDescription Bending inertia Material identification number fortransverse shear properties. Transverse shear thickness Nonstructural massperarea Outer fiber distances forstress calculations. Temperature formaterial properties 2.ECPTEntries fortheTRIA2 orQUAD2 Elements. S bol SILi i=1,2,3 or i=1,2,3,4 Ni Xi Yi Zi 0 MATID tm tp 4.87.6.2Description Scalar indices ofconnected grid points. i=1,2,3, or i=1,2,3,4Referenced local coordinate system andlocation vector inbasic coordinates ofconnected grid points. Material orientation angle. Material identification number Element L.,.._ Nonstructural massperarea. T_mperature formaterial properties Stiffness Matrix Calculations (Subroutine KTRInDofModule SMAI). TheTRIAlorQUADIelement ECPTdataarerearranged tocorrespond tothe(TRMEMorQDMEM) membrane ECPTform,andtheroutine oftheTRMEMorQDMEMelement isused.TheECPTdataare thenrearranged tocorrespond totheECPTdataofaTRPLTorQDPLTelement andtherespective plateroutine isused.Eachroutine isentirely independent. 4.87-107\nMODULEFUNCTIONAL DESCRIPTIONS properties ofthetype\"I\"element. thickness ofthetype\"2\"element.TheTRIA2 andQUAD2 elements aretreated inthesamemanner except thatthearrangement of theECPTdata isdifferent. Thetype\"2\"element usesthesingle material forallthree material Themembrane andtransverse shear thickness equal thesingle Thebending inertia, Ib,fortheplate property is: t3 Ib:_ (I) 4.87.6.3 Lumped MassMatrix Generation (Subroutine MASSTQ ofModule SMA2) Thebending properties aredisregarded forthelumped massmatrix calculations, andthe element massmatrices arecomputed exactly astheones fortheTRMEM andQDMEM elements. 4.87.6.4 Thermal LoadCalculations (Subroutine ofModule SSGI) TheTRPLT andQDPLT element routines areusedtogenerate loads duetothermal gradients or moments. TheTRMEM andQDMEM routines areusedtocalculate in-plane loads duetouniform thermal expansion. 4.87.6.5 Element Stress andForce Calculations (Subroutines STRQDI andSTRQD2 ofModule SDR2) Aswiththestiffness matrix calculations, thedataarerearranged andthestresses forboth themembrane andplate deformations arecalculated. Theelement forces arecalculated forthe plate only. I.FortheTRIA2 andQUAD2 elements theouter fiber distances ZlandZ2are: t Zl=_ (2) t Z__:-_ (3) Themembrane andplate stresses areadded together asfollows forZl: °xl °yl _xyl+ IOX=C_y °xy°xl °yl °xyl, (4) composite membrane bending 4.87-108 (911170)\nSTRUCTURAL ELEMENT DESCRIPTIONS andforZ2, Ox2 _y2 °xy2 composite membrane_x =Oy °xy°x2 +°y2 Oxy2 bending(5) 2.Theprincipal stresses andtheir orientation arecalculated from theabove results, as inEquations 28,29and30ofsection 4.87.4.6. 4.87.6.6 Coupled Mass Matrix Calculations (Subroutine MTRIQD ofModule SMA2) Inthelumped mass case these elements areprocessed using themembrane mass calculation routines (subroutine MASSTQ ofmodule SMA2). When coupled mass isrequested, theplate mass calculations will beused instead. TheECPT data arerearranged totheappropriate TRPLT or QDPLT for_t, andtherespective plate routine isused. Themass perarea isnowcalcuated using thematerial mass density pandthethickness tmforthemembrane definition ofthe element andadded tothenonstructural mass: m=p+ptm, andmisnowused instead ofufortheplate calculations.(6) 4.87-I09 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.6.7 Piecewise Linear Analysis Calculations (Subroutines PSTRII, PSTRI2, PSQADI, and PSQAD2 ofModule PLA3andPKTRII, PKTRI2, PKQADI andPKQAD2 ofModule PLA4). Theadditional ECPTNL andESTNLentries are: Eo-Thepreviously computed strain valueonceremoved. Thepreviously computed strain value. E Thepreviously computed modulus ofelasticity. 0x Oy Thepreviously computed membrane stresses. °xy “k Mx _k My -k Mxy Vx VyTheprevicusly computed element forces (ESTNL only). All originaloftheabove values areinitially zero with theexception ofE,which isinitially the modulus ofeiasticity H,………..,tonaMAT1 card. Inmodule PLA3, theincremental element stress matrix iscalculated byfirst rearranging theESTNL data tocorrespond totheESTNL data foraTRMEM orQDMEM, andthen themembrane stresses arecalculated inthesame manner asEquations I03through I05ofsection _.87.4.14. Then theESTNL data arerearranged tocorrespond totheESTdata foraTRPLT (orQDPLT) and theincremental ber!ding forces fortheTRPLT (orQDPLT) element arecalculated inthe same manner asinEquation 97ofsection 4.87.5.7. However, ifthebending material properties arethesame asthemembrane material properties, then the3by3bending material properties matrix ([Gb] inEquation IIofsection 4.87.5.2) isreplaced bythematrix given inEquation 97 ofsection 4.87.4.14. Inaddition thedisplacement vector {ui}inEquation 44ofsection 4.87-I09a (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.5.4 (orEquation 97ofsection 4.87.5.7) arereplaced byanincremental displacement vector {Aui}. Tieresults areincremental stresses andforces forthemen_brane andbending properties defined asfollows _xl =ax+AOx ayI=Oy+Aay axyl=Cxy+AaxyMembrane stresses ,(7) (8) (9) Mxl:Mx+AMx Mxl=My+AMy MxyI:Mxy+AMxy Vxl=Vx+AVx “k VyI=Vy+AVy(lO) (ll) Bending forces (12) (13) (14) Thetotal bending stresses arecalculated using thetotal bending forces given inEquations lO through 14inconjunction withEquations 98through lO0ofsection 4.87.5.7. Themembrane andbending stresses areadded together asfollows forZl: axl axyl composite membrane bendinglaxl =ia_l kaxyltaxl +Iayl _axyl; (15) 4.87-I09b (12-I-69)\nSTRUCTURAL ELEMENTDESCRIPTIONS andforZ2: !ax2I ay2 axy2. composite bendingaxl ayl O’xy1+ membraneax2 °y2 °xy2(16) Tkeprincipalstressesandtheir orientationforoutputarecalculated fromtheabove results, asinEquations 28through 30ofsection 4.87.4.6. Inmodule PLA4, thebending properties aredisregarded, andtheECPTNL dataarerearranged to correspond tctheECPTdatafortheTRMEM orQDMEM, andthestresses arecalculated exactly asthe ones fortheTRMEM orQDMEM elements (seesection4.87.4.14). Ipmodules PLA3andPLA4, after theabove stress calculations havebeencompleted, thenext elastic coefficients arecalculated inthesamemanner asEquations I06through If2ofsection 4.87.4.14. ThenewESTNL andECPTNL entries are: E0=¢ , (17) =E1, (18) “k E=El, (Ig) ax=axl, (20) °y=°yl’ (21) °xy=°xyl ’ (22) _k Mx=Mxl , (23) My=My1, Mxy=MxyI,(24) (25) 4.87-I09c (12-I-6g)\nSTRUCTURAL ELEMENT DESCRIPTIONS Vxl:Vxl, (26) VyI=VyI, (27) Inmodule PI_A4,theECPTNL dataarerearranged, andtheelement stiffness matrices are calculated inthesamemanner asfortheTRMEMorQDMEMelements insection 4.87.4.14. 4.87.6.8 Differential Stiffness Matrix Calculations fortheTRIAl andTRIA2Elements (Subroutine DTRIAofModule DSMGI) Thissubroutine usesthedisplacement vectors andthermal loadtemperature fromastatic solution toproduce adifferential stiffness matrix. TheDTRMEM subroutine isusedtocalculate inplane-stresses andin-plane differential stiffness. Thetriangle issubdivided intothree subtriangles andtheDTRBSC routine isusedtocalculate out-of-plane differential stiffness for eachofthethreesubtriangles. Thematrices arecombined andthecenter pointisremoved inthe samemanner astheKTRPLT subroutine (section 4.87.5.5). Thebasicstepsareasfollows: I.TheTRIA2datafromtheECPTisconverted toTRIAlformat while inbothcasesthedata ismovedtoaprotected location. TRIAlDATA MATIDm=MATIDbTheconversion is: TRIA2DATA =MATIDs=MATID (28) tm=ts=tm (29) 3 I-tm (30) 12.0 2.TheECPTdataarerearranged totheTRMEMformat (thesameastheTRIA2 format). 3.Thematerial property orientation angles areestablished andsubroutine DTRMEM iscalled. Thisroutine willinsert thein-plane differential stiffness termsintheKDGGmatrix and willreturn thestress values Gx’Gy’and_xy” 4.Theelement coordinate system andgeometric coefficients arecalculated asfollows wherethethreelocation vectors are{x(1)}, {x(2)}, and{x(3)}. {V2}={x(2)} -{x(1)} {V3}={x(3)} -{x(1)}(31) (32) 4.87-I09d (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS X2:l{V2}I (33) {V2} {i}-X2 (34) Y3:I{i}x{v3}I (35) {i}x{V3} {k}- Y3 (36) {j}={k}x{i} (37) X2+X3 X4- 3 (38) Y3 Y4-3 (39) Thelocations ofthefourpoints inthiscoordinate systemaredefined bythematrix [R] where each rowdefines onepoint [R]m 0 X2 X3 X4ml 0 0 Y3 Y4_(40) 5.Foruseintransferring points intheelement topoints inthesubtriangle, theinteger mapping matrix [M]isused. PointaPointbPointc [M]:2 3 4 (41) 3 1 4 Eachrowofthematrix corresponds tothethreepoints connected toeachsubtriangle. 6.Amajorloopisnowperformed withonecycleforeachofthethreesubtriangles. Corresponding topointsa,b,andcOftheMmatrix, thelocation vectors {ra},{rb},and {rc}areextracted fromthecorresponding rowsoftheRmatrix. Foreachtriangle the 4.87-I09e (811172)\nSTRUCTURAL ELEMENT DESCRIPTIONS following arecalculated: = )2 ra2)2 V(rbl ral-(rb2- W1=(rbl-ral) W2=_(rb2-ra2) Thetransformation between subtriangle coordinates toelement coordinates is: [T] I0 01=0W1W2 0-W2W1 Thematerial orientation dataare sin(8m)=W1sin(@)-W2cos.(8)I cos(em)=W1cos(0)+W2sin(e) 7° coefficients xb,Xc,Ycwhere xb=Wl(rbl -ral)+W2(rb2 -ra2) xc=Wl(rcl -ral)+W2(rc2 -ra2) Yc=-W2(rcl -ral)+Wl(rc2 -ra2) 8.Thestresses aretransformed tothesubtriangle system bytheequations:(42) (43) (44) (45) Thelocations ofthethreepoints ofeachsubtriangle aretransformed togeometric(46) Oy=w_Gx+.Gy-2wiW2_xy xy=-wIW2Gx +wIW2Gy+(w-w)_xy(47) (48) (49) (5O) (51) (52) 4.87-I09f (811172) k\nMODULE FUNCTIONAL DESCRIPTIONS 9.Thedifferential stiffness matrix foreachsubtriangle isformed insubroutine DTRBSC (Section 4.87.6.10). Theinput tothisroutine consists oftheECPTproperty data; the location parameters xb,Xc,andYc;andtheinplane stresses Ox’_yandTxy. Theoutput fromthisroutine consists ofthefollowing matrices: _ Ii:piv°t p°int [Kj] jI,2,and/or 3 [K_4] j=l,2,and/or 3 [HI,IS] lO.Theabove matrices arecombined andtransformed inexactly thesamemanner asthe triangular plate equations. Thedifferential stiffness matrices replace theelastic stiff- nessmatrices intheequations. Seesection 4.87.5.5, steps 7thrDugh lO. 4.87.6.9 Differential Stiffness Matrix Calculation fortheQUADI andQUAD2 Elements (Subroutine DQUAD ofModule DSMGI) Thedifferential stiffness matrix fortheQUADI andQUAD2 elements isconstructed fromthe matrices produced byfour subtriangles. Themethod usedtosubdivide thequadrilateral isshown inFigure 6.Thestress iscalculated foreachtriangle using theDTRMEM subroutine. Theout-of- plane differential stiffness foreachtriangle iscalculated using theDTRBSC subroutine. The element geometry andthemanipulation ofthematrices isdoneinthesamemanner astheelastic stiffness equations forthequadrilateral plates. Thesteps followed bythesubroutine are: I.IfaQUAD2 element isused, itsproperty data isconverted totheQUADI equivalent and theECPT isexpanded totheQUADI format. Theproperty conversion is: QUADI DATA qUAD2 DATA MATIDm=MATID6=MATID5=MATID tm=ts I=tm t3 m T.O(53) (54) (55) 4.87-I09g (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS Withbothcasesthedataisstored inaprotected location. 2.Theelement coordinate system andthelocation ofthegridpoints arecalculated as follows: {dl}:{V3}-{VI} I ( {d2}={V4}-{V2} ) where {VI},{V2},{V3},and{V4}arethelocation vectors oftheconnected gridpoints. {k}(56) :{dI}x{d2} (57) l{dI}x{d2}I {aI}:{V2}-{Vl} (58) h:{aI}•{k} (59) {aI}-h{k} {i}: (60) l{aI}-h{k}I {j}={k}x{i} (61) Thelocations ofthepoints intheelement planearestored inthe[R]matrix where eachrow corresponds tothexandylocation ofapoint. 3.Atthisstagethefourtriangles areprocessed inaloop. element issettozeroandtheresults foreachtriangle areaddedin. 4-8describe thisloop.RII=RI2:R22:0.0 (62) R21:X2={al}.{i} (63) R31:X3:{dl}.{i} (64) R32=Y3={dl}’{J} (65) R41=X4=X2+{d2}-{i} (66) R42=Y4={d2}’{J} (67) Thematrix partition forthe Thefollowing steps 4.87-I09h (8/I/72)\nMODULEFUNCTIONAL DESCR!PTIONS 4.ThethreepointsforeachtriangleareselectedusingthemappingmatrixM.Thedata corresponding tothesepointsareputintotheECPTformatforaTRMEMelement. 5.Thegeometryofthetriangleiscalculated usingthethreerowsoftheRmatrix corresponding tothethreepointsofthetrianglea,b,c.Theserowscorrespond tovectors {Va},{Vb},and{Vc}. {V}={Vb}-{Va} (68) {Vv}={Vc}-{Va} (69) xb:l{V}] (70) lWll {V} (71)w2 xb xc=WlVvl +W2Vv2 (72) Yc=-W2Vvl +WIVv2 (73) Thetransformation matrix between element andtriangle coordinates is: I00]IT]=0W1W2 (74) 0-W2W1 “….+,-i_Ii_6.Theorientation angle0mforthesubtriangle iscomputed incaseLf,,……… anisotropic. sin@m=W1sine-W2cosg (75) cos@m=W1cos0+W2sin@ (76) 7.Thetriangular membrane subroutine DTRMEM atthispointwillcalculate andinsert the in-plane differential stiffness termsandwillproduce thestress values ox,Oy,andTxyin thetriangle coordinates. Thebasictriangle subroutine willusethein-plane stresses and thebasiclocations xb,xc,andYctoproduce theoutofplanedifferential stiffness terms. Theoutput ofthedifferential stiffness subroutine, DTRBSC, isthe3by3matrix 4.87-I09i (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS partitions [Kia], [Kib], and[Kic], where iisthepivotpoint. Thesearetransformed to quadrilateral coordinates withthe[T]matrix. [K_j] =[T]T[Kij][T] (77) 8.Thematrices foreachtriangle areaddedintotherunning sumforthequadrilateral and steps4-8arerepeated. 9.Thedifferential stiffness matrix partitionsare transformed toglobal coordinates and inserted intotheoverall differential stiffness matrix inamanner identical tosteps7and 8ofsection 4.87.5.8. 4.87.6.10 Differential Stiffness Matrix Calculations fortheBasicBending Triangle (Subroutine DTRBSC ofModule DSMGI) Unlike thecaseofelastic stiffness matrix generation, thebasictriangle (TRBSC) maynotbe usedbyitself toproduce differential stiffness matrix terms. Thissubroutine, however, isused forthecalculation ofdifferential stiffness fortheTRIAl, TRIA2, QUADI, andQUAD2elements. Itspurpose isanalogous tothewaytheKTRBSC subroutine isusedinthecalculation ofelastic stiffness matrices. Thenecessary inputs tothissubroutine arepassed toitviathelabeled common blocks DSIAET andDSIADP. Theinput data used arexb,xc,Yc(the basic geometry), _x’_y’Txy(the in-plane stresses), andtheelement property data. Thebasic algorithm used bytheroutine isasfollows: I.Thepresence oftransverse shear istested andthesubroutine selects themethod of calculating theelement coordinate-to-generalized coordinate transformation matrices [Hb]and [Hc]. 2.Ifnotransverse shearflexibility exists, thematrices [Hb]and[Hc]arecalculated by thefollowing equations: 4.87-I09j (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS lr – xb ls- Yc Xc t- Yc(78) [Hb]Xc u-2_=r2st XbYc 3r2 0 r 0 r 0 -3r2t2 -rt -rt2 -2r3 0 -r2 -6ru(Xb-Xc) -rs u(3Xc-2X b) _2rtu(3xb-2Xc) rst 2tu(xb-Xc2(6x3) (79) [Hc]= L0 0 0- O 0 0 3s2 -S st 0 0 0 0 0 -S2 -2s3 S2 0(6x3) (80) 3.Ifbothshear material andshear thickness exist, thenthe[Hyq] and[HI-lmatrices are generated aswith theexisting equations fortheTRBSC element. Seepages 4.87-82, 83.The 6x6[H]“lmatrix, ispartitioned asfollows: [H]-l=\u003e[Hb:Hc] (81) andisusedinstead ofEquations (79)and(80). 4.87-I09k (8/1/72)"},"title":"Programmer's Manual P68"},"/docs/programmers/programmers_manual_069/":{"data":{"":"STRUCTURAL ELEMENT DESCRIPTIONS 4.Inordertoformthedifferential stiffness matYix [Kdq], referred togeneralized coordinates, thefollowing integral mustbeevaluated overthetriangular area. Inm=h(×nymdA Theresults are: hXbYc hA I00=hA=2 ll0=T(Xb+Xc) hAyc hAyc I01=3_ III=(Xb+2Xc) hAy2c hAy2c 102=6 112=(Xb_3Xc) hAy_ hAy_ 103-I0 113=(Xb÷4Xc)(82) hA2 2 120:T(Xb+XbXc+Xc) hAycIx+2XbXc•3x_l 121=30 hAy_ 2 122=90(Xb+3XbXc+6x_)(83) “A x X c,’ Ic hAyc 131 60Ix_ 2 2 3 - +2XbXc+3XbXc+4xcI 140 15 XbXc Xc 4.87-109_ (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 5.Theelements ofthe(8x8) differential stiffness matrix [Kdq]arelisted below. The matrix issymmetric soonly theupper triangle terms aregiven. Thesuperscript (dq) is omitted forconvenience. KII =oxI00 KI2 =TI00 KI3 =2axIi0 KI4 =oxI01÷Ii0 Kl5 =2_I01 Kl6 =3oxI20 Kl7 =oxIo2+2_lll Kl8 =3TI02 K22 =Oy100 K23 =2TIl0 K24 =TI01 +Oyll0 v=2“25 yI01 K26=3T120 K27=TI02_2OyIii K28=3Oy102 K33=4ex120 K34=2(oxIII+TI20) K35=4_111 K36=6ox130 4.87-I09m (8/I/72)(84)\nSTRUCTURAL ELEMENT DESCRIPTIONS K37 =2(ox112+2T121) K38 =6TIl2 K44 =OxI02+2Till +ay120 K45 =2(TI02 +ayIii) K46 =3(axI21+_130) K47 =axI03+3TIl2 +2Oy121 K48 =3(TI03 +ayI12) K55 =4OyI02 K56 =6TI21 (84) K57 =2(TI03 +2OyIf2) K58 =6ayI03 K66 =9axI40 K67 =3(ax122+2_I31) K68 =9_122 K77 =axI04+4TIl3 +4OyI22 K78 =3(TI04 +2Oyll3) K88 =9ayI04 6.Inorder totransform thematrix tothedisplacements ofpoints atthecorners ofthe triangle, thefollowing matrices aregenerated. [Ha] =[Hb][Sb] -[Hc][Sc] (6x3) (85) 4.87-I09n (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS iiLoo 1HqHa 01 [Ca]……… +- - (8x3) LHa ] 0(86) IHqHbl [Cb]………. (8x3) LHb_](87) IHqHcl [cc]…….. (8x3) LHc ] 7.Theoutput matrix partitions depend onthetype ofelement using this subroutine. theelement type isaQUADI orQUAD2 thethree output matrix paritions [Kde]are:(BB) If [K_el =[CiIT[Kdq][cj] (89)lj- where iisthepivot point andj=a,b,andc. Iftheelement type isaTRIAl orTRIA2 theoutput differential stiffness matrices are calculated using equation 89above. They are: [Kia] =[CiIT[Kdq][Ca ] (90) [Kib]=[CiIT[Kdq][Cb ] (91) ifiisthepivot point andi=aori=b. Inaddition, fortheTRIAl andTRIA2, elements thefollowing matrices areoutput: de [Kac] =[CaIT[Kdq][Cc ] (92) de [Kbc] =[CbIT[Kdq][Cc ] (93) [K_ ]:[CcIT[Kdq][Cc ] (94) Thematrices [HI-land[S], previously calculated arealso output fortheTRIAl andTRIA2 elements. 4.87-I09o (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.6.11 Thermal Calculations fortheCombination Elements (Subroutine KTRIQD ofModule SMAI) Iftheheattransfer parameter, HEAT,istrue,theelements aretreated exactly likethe membrane elements QDMEMandTRMEM. Thebending calculations arebypassed andsubroutines KQDMEM orKTRMEM areusedforcalculation oftheconductivity matrix terms. 4.87-I09p (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS 4.87.7TheELASi, MASSiandDAMPiElements Thescalar elements (ELASi, SSiandDAMPi, i=1,2,3,4) areconnected toscalar components ofgridpoints ortoscalar points. TheELASielements contribute onlyto: a)thestiffness matrix, [K_g], fori=1,2,3,4; andb)tothestructural damping matrix, F]fori=1,2,3. TheMASSielements contribute onlytothemassmatrix, [Mgg] andthe.gg-, DAMPielements contribute onlytotheviscous damping matrix, [Bgg]. Thescalar elements donotrequire material orgeometric properties intheircalculations. OnlytheELASielements areusedforstress orforcecalculations. 4.87.7.1 InputDatafortheELASi, MASSiandDAMPiElements TheECPT/EST entries forthescalar elements are: Symbol SILl,SIL2 Cl,C2 K ge S B mDescription Scalar indices ofconnected gridor scalar points Component numbers corresponding to SILlandSIL2, Spring constant Damping factor 1Stress coefficient Viscous damping coefficient Mass coefficient 4.87.7.2 I.Elements All Types 1and2 AllELASielements ELASI, 2and3 AllDAMPielements AllMASSielements ELASi Stiffness Matrix Generation (Subroutine KELAS ofModule SMAI) Thetwoconnected scalar indices areiIandi2_iven by: iISILl+(cI-I),ifPoint 1isagrid point SILl, ifPoint 1isascalar point 4.87-110\nSTRUCTURAL ELEMENT DESCRIPTIONS =_SIL2+(c2-l),ifPoint 2isagridpointi2 !SIL2,ifPoint 2isascalar point Kx2.Thefollowing terms areadded tothe[,gg]matrix: +Kinposition (il,il)andinposition (i2,i2), -Kinposition (i2,il)andinposition (il,i2). 3.Ifpoint 2isnotdefined, add+Ktoposition (il,il)- 4.Thedamping terms are: K4=Kge” These areadded to[K4gg]inthesamemanner asthestiffness terms were added to[K_g]. 4.87.7.3 MASSi MassMatrix Generation (Subroutine MASSD ofModule SMA2) These elements aretreated liketheELASi elements except the\"m\"termisadded tothe fourpositions in[Mgg]. 4.87.7.4 DMAPi Damping Matrix Generation (Subroutine MASSD ofModule SMA2) These elements aretreated liketheELASi elements except the\"B\"term isadded tothe fourpositions in[Bgg]. 4.87.7.5 ELASi Stress andForce Recovery (Subroutines SELASI andSELAS2 ofModule SDR2) Theelement force is: where uIF=K(u2-Ul), andu2arethedisplacements atscalar index numbers iIandi2.(i) (2) 4.87-III (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Theelement stress is: o=SF. (3) 4.87-112\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.8 Concentrated Mass Lie_e. LsCBNMI, C_NM2 Twotypes ofgrid point massdataareavailable. C_NMI defines themassmatrix directly atthepoint, with theaxesdefined byagiven local coordinate system. C_NM2 defines the samematrix forabodywith amassandthree inertias with acenter ofgravity offset from thegridpoint. 4.87.8.1 ECPTEntries fortheC_NMI MassElement Nm Ng,X,Y,Z mll m21,m22 m31,m32,m33 m41,m42,m43,m44 m51,m52,m53,m54,m55 m61,m62,m63,m64,m65,m66Description Local coordinate system number inwhich the massmatrix isdefined. Local coordinate system number andbasic coordinates ofthepoint. Terms ofmassmatrix given inrowform(out tothediagonal term). 4.87.8.2 MassMatrix Calculations fortheC_NMI Element (Subroutine MC_NMX ofModule SMA2) I.Using thesymmetrical relationships, fillouttheremainder ofthe6x6matrix, [m]: mij:mji (I) 2.Using thebasic coordinates ofthepoint andthelocal coordinate system definition, the3x3transformation matrices [Tg]and[Tm]aregenerated, andthemassmatrix inglobal coordinates is: 4.87-I13\nMODULE FUNCTIONAL DESCRIPTIONS ]FT:,!o,o[M]= –’-Ig_”- --1 [m] !-T_- :q’TJ(2) where [Tg]isthetransformation fromglobal-to-basic coordinates atthepoint, and [Tm]isthetransformation fromthecoordinates defined bythemasslocalsystem to thebasiccoordinate system. 4.87.8.3 ECPTEntries fortheC_NM2MassElement Symbol Description Nm Ng,X,Y,Z x,y,z III 121,122 131,132,133Localcoordinate system number inwhich the masstermsaredefined. Localcoordinate system number andbasic coordinates ofthepoint. Concentrated mass Offset ofcenter ofgravity inmasscoordinate system Inertias aboutthecenter ofgravity aivenin roworderouttothediagonal term 4.87.8.4 MassMatrix Calculations fortheC_NM2Element (Subroutine MCONMX ofModule SMA2) I.Thetransformation fromtheoffset tothegridpointis: [D]1 1Oz-y i 1 _-z 0x 1Jy-x 0 …… L……. 1 ,1 0 _ 1I i(3) 4.87-114\nSTRUCTURAL ELEMENTDESCRIPTIONS 2.Themassmatrix referenced totheoffset point is: [mo] =mI ! _ o I t- ! IIll -I21 -I31 ! 0 !-121 122 -132 i I-I31 -I32 I33(4) 3.Themassmatrix about thegridpoint along theg=ven coordinates is: [m]:[D]T[mo][D]. Theactualnonzero termsofmatrix [m]arecalculated directly fromtheequations:(5) mll=m22=m33:_ , (6) ml5 =m51 =-m24 =-m42 –+zm , (7) ml6=m61=-m34 =-m43 =-_ ’ (B) m26:m62=-m35=-m53:xm, (9) m44 :iiI+(y2+z2)_ , (lO) m55 =122+(x2+z2)_ , (ll) m66 =133+(x2+v2)_ (]2) m45 =m54 :-121 xym, (13) 4.87-I15\nMODULE FUNCTIONAL DESCRIPTIONS m46=m64=-131-xzm,(14) m56=m65=-132-yzm(15) 4.Thematrix [m]istransformed backtoglobal coordinates usingEquation 2. 4.87-116\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.9 4.87.9.1 l°TheC_NEAX Element Input DatafortheC_NEAX Element TheECPT/EST entries fortheC_NEAX element are: Symbol SILa,SILb n ra,rb Za_ zb tm MATIDm I MATIDb ts MATIDs Zl,Z2 i’i=lto14 t 4.87.9.2Description Scalar indices ofthenthharmonic ofthe connected rings Harmonic index Radii atpoints aandb Projected distances along theaxis Membrane thickness Membrane material identification number Bending coefficient Bending material identification number Shear thickness Shear material identification number Outer fiber distances forstress calculations Angles defining points around element Temperature formaterial properties Nonstructural mass Stiffness Matrix Calculations (Subroutine KC_NE ofModule SMAI). I.Theshell orientation isgiven by: =/(rb-ra)2+(zb-Za)2 rb-rasin_- zb-za cos_ -(1) (2) (3) 4.87-I17\nMODULE FUNCTIONAL DESCRIPTIONS 2.Thetransformation matrix [E]from element coordinates toring cylindrical coordinates is: [E]-0 sin_cos_0 0- 1 0 0 0 0 0 cos_-sin 0 0 0 0 0 0 sin 0 0 0 1 0 0 0 0 0 cos(4) 3.Theserial stepsforthebalance ofthestiffness matrix computations unique tothe axisymmetric conical shellelement areexplicitly described intheNASTRAN Theoretical Manual section 5.9.5.7 (Summary ofProcedures). 4.87.9.3 MassMatrix Computation (Subroutine MC_NEofModule SMA2) [Mii]-mi0 0 00 0 0 mi0 00 0 0 0 mi00 0 0 0 0 0 0 0 0 0 0 0 0 0 O 0 0 0 0 0i=aorb (5) where rhre ma=(_ +_–)(pt+V) ra mb=L(-b+–)(pt÷p)(6) 4.87.9.4 Element LoadCalculations (Subroutine C_NEofModule SSGI). TheFourier coefficients ofthetemperatures arestored intheGPTTdatablock. Theloads aregenerated bytheelements, which reference theconnected ringsandharmonics indirectly by thegridpointscalar indices. Thescalar indices areusedwiththeSIL(Scalar IndexList)data blocktoobtain thetemperatures. Thefollowing stepsareusedtogenerate theloads: I.Thedataforalogical element arereadfromtheESTdatablock. Theharmonic 4.87-118 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS number, n,isextractedfromtheelement ID,Ne,bytheequation: Ne=lO00N +(n+l), {7) where Nisthetotal numberofharmonics plusoneintheproblem. Thetemperatures forthisparticular element andharmonic(TaandTbn)areextracted from theGPTTdatablock. (Nodefaultnonzerotemperatures areallowed). 2.Thefollowing dataaregenerated inthesamemanner asinthestiffness matrix routine, KC(NE: ra,rb,za,zb-Ring locations -Linear distance sin, cos_ Inclination functions [El Element-to-global transformation matrix (6x5) t -Element thickness [Em] -Material matrix (3x3) as=¢= -Temperature coefficient Thegeometry coefficients, Imn,arecalculated asinthestiffness matrix routine bythe3. equation: Imn=_ smrl-nds =_? smrl-ndr, (8) r_a rb-ra where r=a+bs,a=ra,b= 4.Theloads aregeneratedingeneralized coordinates, {PR}, with theequations: {Pln} =n(IoiA n+IIIBn),(9) 4.87-I19 (12-1-6g)\nMODULE FUNCTIONAL DESCRIPTIONS {P2n}=n(lllAn+121Bn),(10) {P3n}=sin_(loiAn+IIIBn),(11) {P4n}=sin_(lllA n+121Bn)+IooCn+IIODn,(12) {P5n}:cos_(loiA n+IIIBn),(13) {P6n}=cos_(lllA n+121Bn),(14) {P7n}=cos@(121A n+131Bn),(15) {P8n}=cos#(131An +141Bn),(16) {P9n}:0,(17) {PlO,n}=0,(18) where E a aAn:t12(sTn )+tE22(qbTn) , t(T Ta) + , Bn=T-(E12asE22a@)(19) (2o) Cn=tEll(asTan) +tEl2(a@Ta)(21) Dn=t(T-TaT n)(Ell_s +EI2_@)\" (22) 4.87-120\nSTRUCTURAL ELENENT DESCRIPTIONS 5.Thetransformation fromgeneralized coordinates toelement coordinates, [Gqu], is calculated ifnotransverse shear material orthickness isgiven (i.e., MATIDs=0 orts=0). [Hqu] :[H]-l, (23) where Ill]isgiven explicitly inthestiffness matrix calculations. 6.Iftransverse shear exists, theshear matrix, [B],isgenerated. material terms are:Additional [D]=Ib[Eb], where [Eb]isthebending material 3x3matrix. Gll =G=Shear coefficient oftransverse shear material. Thenonzero terms of[B]are: l (.1 103 B4,l=B9,l=[Dl2n cos@ rbr–a)-cos sin_-T-(D33 +2D22) ], (24) B4,2=B9,21[D_- Insin_cos_Il3(3D3312rb T E½ B4,3=B9,3-Q T-‘I021 +D22)+nD33cos@TJ, (25) (26) B4, B_ 1_n2DRqcos_ 113=,=[ __ -T-] ’ (27) 12lZ)2 I03 B4,5:B9,5:[nDI2(Tb -ra-nsin--(2D33 +D22)] , (28) 1n2 113 102(2n2D33 sin2_D22)], (29)B4,6+B9,6:Q[DI2r–b-“n2sin@–(2D33 +D22)+T + n2C22112 l[2Dl + + (2n2D33 +sin2_ D22)(30)B4,7 =B9,7 =Q- l(ra-rb) Dl2rb 2 123 -nsin_T(2D33+D22)]’ 4.87-121\nMODULEFUNCTIONAL DESCRIPTIONS n2_33122 (31)==lB4,8B9,8_[-Dll6_rb+Dl2rb+-T–(2n2D33+sin2_bD225 133 D22)].n2sin_ (2D33 + B4,10l[,sin_I02 D33)], (32) B4,9:B9,9:_ --(D22+ ll21n +D335] l[nC(Dl 2+D335.nsin-_ u22=Bg,lO =(335 where Q =io2n2D33 +sin2_b D22].ra+rb CtsGlI [l+_ tsGllrar(345 7.Thetransformation [HItransforming displacements intheelement coordinate system to displacements ingeneralized coordinates ofthepower series is: [HIl 00000 0 0 00 0 0l000 0 0 00 0 000l0 0 0 00 0 0000 l 0 0 00 c°-9 ooon__.0oo ra ra 1 0000 0 0 0 0 0l_00 0 0 0 0 0001 _2 _3 0 0 0000 1 2_3_3-I _ 00nn_n_2 n____3 l rb rb rb rb rb rb0 0 0 0 0(35) 4.87-122\nSTRUCTURAL ELEMENTDESCRIPTIONS 8.Thetransformation [Hqu]fornonzerotransverse shearis: [Hqu]=([H–]-[B])-l(lOxlO) (36) 9.[Hqu] ispartitioned intotwofox5matrices [Hqu] :EHal Hb](37) lO.Theloads inglobal coordinates arecalculated with: {Pa}:[E][Ha]T{P }, (38) {Pb}:[£][Hb]T{P }. (39) 4.87.9.5 Element Stress Calculations (Subroutines SC_NEI, SC_NE2, SCONE3 ofModule SDR2) 1.Foreachelement thefollowing quantities arecalculated asinsection 4.87.9.2: r+rb £,sin,cos, [E],[Ha], [Hb], [Hq][H_q], [Hxq] (using s=r-a ) \" ’ 2 \" 2.Using thematerial properties, thefollowing matrices arecalculated: El [Em]: (I-)l ““I 0 “_I 1 0 0 01-_l 2(4o) 4.B7-123 (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS E21 [Db]= (I-_)1 -_2 0 -v2 1 0 0 01-v2 o][Gs]= G3 where [Em],[Db]and[Gs]arecomputed formembrane, bending andshearmaterials respectively. 3.Thestress matrices arethencalculated:(41) (42) [KS][Em][Hq] [D][H×q] ts[Gs] [Hq] [Sa]=[Ks][14a][E],(8x6 )(8xlO) (43) (44) [Sb]=[Ks][Hb][E ] StI=_IEII+_2E12 St2=_IEI2+_2E12,(8x6) (45) (_l=e2 fortype1materials) th 4.EachentryintheESTdatablockcontains datapertaining tothenharmonic motion oftheCBNEAX element. Theelements intheESTareordered byharmonic andC_NEAX I.D. number. Allharmonic elements foreachC_NEAX aregrouped together. a.Whentheharmonic, n,ofanelement iszero,thisindicates itisthefirst ofagroupofelements. Storage spaceisallotted forfourteen 8by1vectors defining theelement forces atpoints. TwoUGVvector datablocks mustbeused tocalculate stresses onpoints. These datablocks correspond tothetwosubcases “C\"and\"S\"andaresolved simultaneously using thesamedata. 4.87-124 (8/I/72)"},"title":"Programmer's Manual P69"},"/docs/programmers/programmers_manual_070/":{"data":{"":"STRUCTURAL ELEMENTDESCRIPTIONS b.Usingthe[Sa]and[Sb]matricesandthe6by1displacement vectors,{u}, bytheirSILnumbers,stressandforcevectorsarecomputed. Ifn#O: -C asn -C a@n _cq_n Mc sn Mc @n Mc s_n Vc sn Vc ,n:[San]{U_n}+[Sbn]{U_n}, (46) _S sn -S O_n –S Os_n Ms sn Ms _n Ms s@n Vs sn Vs _n:[San]ruSans+[Sbn]{U_n}.(47) 4.87-125 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS Ifn=O: C6 (TcandTSc_) whereOSO m _o m Os_o Mso M_o Ms_o Vso V@o:Saoo} +{uCo})-[Sbo] ({U_o} +{U_o}). Thetemperature effects areaddedusingtheGPTTdataforthetwosubcases, CI =C+(°sn) snStl’ C’ (on):oc+@nSt2 C’ (Us@n) =c°s@n n+T) -Tn:O =(Ta o’ n =½(Tn+Tb)n#0 Thesameequations areusedforthe\"S\"setandwhenn=O.(48) (49) (50) (51) 4.87-126 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS d.Theharmonic stresses arecalculated bytheequations fori=1,2,3: c c’Mcci °sni:(Osn)+snl (52) MC @n I c=c’M_.nci s@n (as@n)+_I(53) (54) 4.87-126a (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS Theequations arerepeated fortheSsetandwhenn=O. e.Principal stresses (_l’_2’e,Tmaxetc.) arecalculated aswiththe TRIAl orQUADI element, except thatwhenn_0thedataarecalculated forboththeSandCsets. f.Theincremental element stresses orforces forthepoints ontheconeare calculated fromthefollowing equations forj=1,2…..14: Forn_O: = I SI _Osj (__) cos(n,j) +(asn) sin(n,j) (55) i SI 6_j =(_n) cos(n_j) +(a_n)sin(n_j) , (56) Ci 6as@j=(_s@n) _Msj=McsnsI sin(nqbj) -(Os@n) cos(n@j) , cos(n_j)÷Mssin(nCj) sn ‘(57) (58) _M¢i =Mc Mssin(n@j) (59) @ncos(n@i) +@n =Mc MS_Ms@j s@nsin(n_j) -s@ncos(n@i) , (60) c Vssin (61)Vsi :Vsncos(n@j) +sn (n@j), ’–V\"(n@j)-vs,-n\u003c(n@j) (621 ‘@j n….. chn…. – g.Theincremental stress andforce values areadded totherunning sumsforthe points. After thelastelement iscalculated (n=N),theforces andstresses forthepoints arecalculated andoutput. Theequations areidentical tosteps d andeofthissection except thatl)the\"S\"and\"C\"setsarenotusedand2)upto14 points maybecalculated foroutput foreachphysical element. Since theusermayleave somespaces blank ontheproperty cardforthiselement, onlyoneofthe¢i=0points isusedinthecalculation. 4.87-127\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.9.6Differential StiffnessMatrixCalculations (Subroutine DCONEofModuleDSMGI) ThedatainputfromtheECPTtotheDC_NEsubroutine arethesameasthosegiveninsection 4.87.9.1. Additional dataforthegeneration ofthedifferential stiffnessmatrixareasfollows: {u_},{u_}-Displacement vectorsofthezeroharmonic(extracted fromtheUGVdatablock) o o Ta, Tb-Element loading temperatures ofthezeroharmonic (extracted fromtheGPTT datablock) Thefirst partofthecalculations involves calculation oftheelement force components. The following steps areperformed withharmonic num6er n=O. I.ThelObyIOtransformation matrix [H_q] iscomputed from: [H_q] =[Huq]+{Huy} {Hysq}T (63) where [Huq], alObyIOmatrix, and{Huy}, acolumn vector, arederived intheNASTRAN Theoretical Manual, section 5.9.5.3, and{Hysq}T, arowvector, isexplicitly written outin Equation 85ofsection 5.9oftheNASTRAN Theoretical Manual. 2.ThelOgeneralized displacement quantities qiare {q}=[H_q]-I [E]T_i (64) ………..w,,:,:lUaJ°_:,,,–__..o_t,b,..:o+ho………….byIHiRplac_ment vectors, and[Eliscalculated asin Equation 4ofsection 4.87.9.2. 3.Thestrain coefficients are Z_Es¢:{} _. (65) 4.87-127a (12-I-69)\nSTRUCTURAL ELEMENT DESCRIPTIONS Es o{}@ =Ta Cs@ oando whereTaTbaretheloading temperatures atthegridpoints, the{}vector isobtained fromtheMPTdatablockviasubroutine MATand_iscalculated asinEquation 1ofsection 4.87.9.2. 4.Theforcecoefficients arecalculated: a°=tmGI2(sin_q3+cos_q5),(66) (67) aI=tmGI2(sin_q4+cos_q6)(68) a2=tmGI2cos_q7 a3=tmGI2cos_q8(69) (70) bo=tmG22(sin_q3+cos_q5),(71) bI=tmG22(sin_q4+cos@q6),(72) b2=tmG22cos_q7’(73) b3=tmG22cos_q8’(74) Co:tmGII(q4-Cs)-tmGI2c@ cI=tmGIIAcstmGI26@,(7) (76) do=tmGI2(q4cs)-tmG22c@ dI=-tmGI2AcstmG22_c@,(77) (78) 4.87-127b (12-I-69)\nSTRUCTURAL ELEMENT DESCRIPTIONS where Gll,Gl2andG22areelements ofthe3by3symmetric material properties matrix, [G]. 5.Thegeometry coefficients arecalculated: Imn=fosmrl-nds Im=O,1…..9 n=O,I,2,3 ; (79) where rbra) r=ra+ _ s (80) Anexplicit formula fortheevaluation ofImnisgiven intheNASTRAN Theoretical Manual, section 5.9.5.8. 6.Thefollowing coefficients forthecomputation ofthedifferential stiffness matrix are calculated: Amn=aoIm,n+l+alIm+l, n+l+a2Im+2, n+l +cl +a3Im+3, n+l+CoIm,n Im+l, n ‘(81) Bmn=boIm,n+l+blIm+l, n+l+b2Im+2, n+l +dl +b3Ira+3, n+l+doIm,n Im+l, n ‘(82) Cmn=Amn+Bmn , (83) where m=O,l….6;n=O,l,2. Note: Theindex nusedabove isadummy index andisnottheharmonic number. Thesecond partofthecalculations involves generating thedifferential stiffness matrix. Theremaining steps usenastheharmonic number oftheelement. I.Thenonzero elements ofthesymmet_°ic differential stiffness matrix [Kqd], ingeneralized coordinates, aregiven inTable Icbelow. 4.87-127c (12-I-69)\nSTRUCTURAL ELEMENTDESCRIPTIONS TableIc.NonzeroElementsoftheDifferential Stiffness.Matrix, [Kqd]. Kllqd=cos2_B02+¼sin2_C02 K12qd=Cos2_BI2 +¼sin_Col +¼sin2_Cl2 K13qd=¼nsin_C02 qd=. KI4 nsin_Cl2 K15qd:ncos_B02 qd ncos_B1 KI6= 2 K17qd=ncos_B22 K18qd=ncos_B32 K22qd=cos2_B22 +¼Co0 +½sin_Cll +¼sin2_C22 K23qd=¼nCol+¼nsin_Cl2 K24qd=41nCll+¼nsin_C22 K25qd=ncos_Bl2 K26qd=ncos_B22 K27qd=ncos_B32 K28qd=ncos_B42 K33qd=.n2C02 qd=¼n2Cl K34 2 4.87-127d (12-I-69)\nSTRUCTURAL ELEMENTDESCRIPTIONS TableIc(con’d). qdK44=ElementsoftheDifferential Stiffness Matrix, [Kqd]. n2C22 qdn2Bo2 K55= qd n2Bl2 K56= K57qd=n2B22 K58qd=n2B32 qd +n2B22 K66=AO0 qd +n2B32 K67=2Alo K68qd=3A20+n2B42 K77qd=4A20+n2B42 K78qd=6A30+n2B52 K88qd=9A40+n2B62 Theformulas forn=0arethesameasinTable Icexcept thattheyareallmultiplied by2. Thenonzero terms forn=0fallintotwouncoupled setswhich are (ll) (12) (66)(67) (68) (22) (77) (7B) (88) Effect on “_ Twisting Effect onAxisymmetric Deformation 2o coordinates, forthenthharmonic iscomputed asinEquation 63. partitioned intotwolOby5matrices:ThelObylOtransformation matrix, [H_q], fromgeneralized coordinates toelement Thematrix isinverted and 4.87-127e (12-I-69)\nSTRUCTURAL ELEMENT DESCRIPTIONS [H_q]-l_-\u003e [HalHb] (84) 3.The6by6differential stiffness matrices inglobal coordinates are: Kd IT T[ij] =[E][Hi[Kqd][Hj][E] , (85) where i=pivotgridpoint; j=a,b;and[E]iscomputed asinEquation 4ofsection 4.87.9.2. 4.87-127f (12-I-69)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.10 TheTRIARG Element 4.87.10.I Input Data fortheTRIARG Element I.TheECPT/EST entries fortheaxisymmetric triangular ring (TRIARG) element are: Symbol Descriptions SILI,SIL2,SIL 3 Scalar index numbers forthethree grid points. Y MatI.D. Nl’Xl’Yl’Zl ) N2,X2,Y2,Z 2 N3,X3,Y3,Z 3Material property orientation angle (degrees) Material property identification number. Local coordinate system number andlocation inbasic coordinates ofthethree gridpoints. t Element temperature formaterial properties. Forthiselement, Yimustequal zerofori=l,2and3and,wedefine: I} {Zs} zsl/:Zs2 ZS3)zlI=Z2 Z3(2) 2.Coordinate systemdata Thelocation (Xi,Yi,Z i)andlocal coordinate system number (Ni)ofeachgrid point are used tocalculate the3by3global-to-basic coordinate system transformation matrices, [Ti], i=l,2,3. 3.Material data Thematerial property identification number, MatI.D., andtheelement temperature for material properties, t,areusedtoselect thefollowina dataitems. Forthiselement, material properties maybedefined onaMAT1orMAT3butnotaMAT2bulkdatacard. 4.87-128\nSTRUCTURAL ELEMENT DESCRIPTIONS s__ Er,Es,E z VrO,VOz,VzrDescription Young’s moduli intheradial, tangential andaxial directions respectively. Poisson’s ratios inthethree directions indicated. P GrB,GBz,Grz _r,O,z To ge 4.87.10.2 General Geometric CalculationsMassdensity Shear moduli inthethree directionsindicated. Coefficients ofthermal expansion inthethree directions indicated. Thermal expansion reference temperature. Structural element damping coefficient. I.Local coordinate calculations are: Zmin=minimum of(Zsl,Zs2,Zs3), (s) {RL)={Rs}, (4) 20 given by(RLiandZLiaretheithcomponents of{RL}and{ZL}respectively):Zmin) {ZL}={Zs}-!ZminZmin! Thetransformation fromfield coordinates togridpoint degrees offreedom is RLI ZLI 0 0 0- 0 0 lRLI ZLI RL2 ZL2 0 0 0 0 0 lRL2 ZL2 RL3 ZL3 0 0 0 0 0 1RL3 ZL3-l 0 l Ff_q] = 0 l -0(5) , (6) 6x6 4.87-129\nMODULE FUNCTIONAL DBSCRIPTIONS [rBq] :[TBq]-l(7) 3.Thetransformation matrix fromtwotothreedegrees offreedom perpointis: [Fqs]-I0000000O” 001000000 000100000 000001000 000000100 _00000000I_6x9(8) 4.87.10.3 Integral Calculations I.Theintegrals overtheareaofthecross-section areoftheform: forthevalues:5ij=rlzJdzdr, (9) 6-10'6-11 ‘600'610'620’_30'601 ‘611’_21'602'612'6-12 Toaccomplish thisweintegrate intwoparts: a.FromlineZ=Kl2r+m12tolineZ=Kl3r+m13 where andKij-ZLj-ZLi RLj-RLi mij=RLiZLj -RLjZLi RLj-RLi(lO) (ll) 4.87-130\nSTRUCTURAL ELEMENT DESCRIPTIONS andfrompolnz l_i-t-o-paint RL3. b.FromlineZ=Kl2r+ml2toZ Forthecasewhere=K32r+m32andfrompoint RL3toRL2. RLI=RL2or JRL2- RLIJ \u003clO-5 RL2 wemust integrate differently, that is,fromlineZ=K32r+m32toZ=K13r+m13 andfrom RLItoRL3. 2.After theintegrals arecomputed, acheck ismade todetermine ifanexcessive amount ofround-off error occurred. Ifround-off wasexcessive, anapproximate integral canbecalculated. These tests are: Ifany6ij\u003cO ,thenapproximation must beused. Ifal2_002, or6_i2_612,or612\u003e602,thenapproximation mustbeused. IfAr_rorAZ_Z,thenapproximation must beused. Theterms Ar,AZ,_andZare: _r=max.(JRLl -RL2J, JRL2-RL3J, [RL3_RLIJ), ^ r=[min.(RLl ,RL2,RL3)]/IO,(12) (13) \u0026Z=max.(JZLl -ZL2J, JZL2_ZL3J’JZL3_ZLIJ), (14) =[min(ZLI, ZL2,ZL3)]/IO . (15) 4.87-131\nMODULEFUNCTIONAL DESCRIPTIONS Theapproximation is: whereoij :(ra)i(Za)j A, ra:[RLI+RL2+RL3],(16) (17) Za=[ZLI+ZL2+ZL3],(18) A=½[RLI (ZL2-ZL3) +RL2(ZL3-ZLI) +RL3(ZLI-ZL2)].(19) 3.Formthematrix ofintegrals: liooo0610601 0 0 O0 0 0 0 06 0 610 06104x6(20) 4,87.10.4 Elastic Constants Matrix Calculations I.Generate thetransformation frommaterial axistoelement geometric axis: [Teo]m m cos2y 0 sin2y sinycosy 0 1 0 0 sin2y 0cos2y -sinycosy -2sinycosy 02sinycosy cos2y-sin2y m4x4 2.Generate thematrix ofelastic constants foranorthotropic bodywith respect tocylindrical coordinates:(21) 4.87-132\nSTRUCTURAL ELEMENTDESCRIPTIONS [Em]=l-Er(l-VezVze) Er(Ver+VzrVez ) Er(Vzr+VerVze) 0Ee(l-VrzVzr ) Ee(Vze+VrBVzr ) 0(Symmetric) Ez(l-VrOVOr) 0 GrzA_4x4(22) where Ver=VreEe/Er, (23) Vze=VezEz/Ee,(24) Vrz =VzrEr/Ez,(25) =1-VreVer-Vez Vze-VzrVrz-VreVezVzr-VrzVerVze.(26) 3.Calculate theelastic constants matrix inelement geometric axes: leg] =[Teo]TEEm][Teo]•(27) 4.87.10.5 Stiffness Matrix Generation (Subroutine KTRIRG ofModule SMAI) I.Generate theelement stiffness matrix infield coordinates: 4.87-133\nMODULE FUNCTIONAL DESCRIPTIONS 2_TE226_I0 (EI2+E22)600[_] (ElI+2EI2+E22)610 E22__II+E24500 (EI2+E22)601+(EI4+E24)610 E22__I2+2E24_01+E44_I0 0 0 0 E24800 (EI4+E24)610 E24601+E44510 0E44510 E23500 (EI3+E23)610 E23601+E34610 0E34810E33a1028) 6x6 where Eijisanelement of[Eg]. 2.Transform theelement stiffness matrix fromfieldcoordinates togridpoint degrees offreedom: [K]:[rsq]TEK]ErBq].(29) 3.Transform theelement stiffness matrix fromtwotothreedegrees offreedom per point. [K]=Lrqs]T[K][?qs].(3O) K3 4.The3by3partitions [pj]of[K]corresponding tothepivotpointpare transformed: K3 ITITrK3 [pj]=_p.Lpjj[Tj], j=1,2,3(31) 5.Finally these3by3partitions areexpanded to6by6partitions: 4.87-134\nSTRUCTURAL ELEF_NT DESCRIPTIONS P3: LKpj]=O-.\"-(32) 4.87.10.6 MassMatrix Calculations (Subroutine MTRIRGofModuleSMA2) I.Generate theconsistent massmatrix infieldcoordinates: where[M]:27–_I1610 _I1620 _I1630 _I1611 n_ll621mI1612 0 0 0 0 0 0 0 0 0 m_2261 0 m22620 m22_I 1(Symmetric) m22630 22621 m22_12i 6x6,(33) []= = . L0m22(34) 2Transform themdssreaL,,^,,u,,,fleldcoordinates togridpointdegrees offreedom: [M]:[rBq]T[M][rBq]. (35) 3.Transform themassmatrix fromtwotothreedegrees offreedom perpoint: [M]:[?qs]T[M][Fqs ].(36) 4.87-135\nMODULE FUNCTIONAL DESCRIPTIONS 4.The6by6partitions, [Mpj], arecalculated asinEquations 31and32. 4.87.10.7 Thermal Load Calculations (Subroutine TTRIRG ofModule SSGI) I.Form thevector ofthermal strains: {}=(Tavg-To) Iir_e z(4xl). (37) where Tavg istheaverage loading temperature atthegrid points. 2.Compute thermal load vector ingrid point degrees offreedom: {FT}=[FBq]T[D]T[Eg]{} (6xl). (38) 3.Transform thermal loadfromtwotothreedegrees offreedom perDoint {FT} =[Fqs]T{T }(9xl). (39) 1 Each partition,{F}, oflength 3of{FT}istransformed toglobal coordinates by {F3}g =[TiIT{FT3}(40) 5.These vectors areadded totheoverall load vector, {Pg}. 4.87.10.8 Element Force andStress Calculations (Subroutines STRIRI andSTRIR2 ofModule SDR2) Element stress andforce data items arecalculated intwophases. Thefirst phase (subroutine STRIRI) calculates theelement stiffness andstress matrices. Thesecond phase (subroutine STRIR2) calculates theactual element forces andstresses from thevarious subcase displacement vectors. 4.87-I 36(8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS Phase lcalculations areasfollows: I.Formtheelement stiffness matrix, [K],asinsection 4.87.10.5. 2.Compute theconstants: 31 ro:_-i=_lRLi’(41) l3 zo=i=lZLi\"(42) 3.Formthe[Do]matrix: [DO]n 01 000 l 1 Zo 0 0 ro 0 0 0 0 0 0 0 l 0 l0 0 l 04x6(43) 4.Compute thestress matrix m IS]=[Eg][Do][FBq ].(44) 5.Transform thestress matrix fromtwotothree degrees offreedom perpoint: [s]:[T][rqs] .(45) 6.Transform thestress matrix frombasic tolocal coordinates: [S] :rSj[Tl23] ,(46) 4.87-I 37"},"title":"Programmer's Manual P70"},"/docs/programmers/programmers_manual_071/":{"data":{"":"MODULE FUNCTIONAL DESCRIPTIONS where [TI23]IT__o2 Lo!o:T_j(47) 7.Compute thethermal stressvector {Ts}=[Eg]{\u0026}.(48) Phase2calculations areasfollows: I.Extract thedisplacement vector, {A},atthethreetranslational components ofthe gridpointsfromtheglobal displacement vector. 2.Calculate theelement forces: 3.Calculate theelement stresses:{P}=LK]{}. (49) {o}:[S]c{} -Td{Ts}(50) where Td=Tavg-To(51) 4.87-138\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.10.9 Thermal Analysis Calculations fortheTRIARG andTRAPRG Elements (Subroutine HRINGof Module SMAI) Ifaheattransfer problem isbeingsolved, thisroutine isusedinsteadof subroutines KTRIARG andKTRAPR. Thefollowing checks aremadeonthegeometry: y=O xi\u003eO Iftheseconditions arenotmet,afatalerrorexists. checked. Thefollowing equation mustbetrue: - (xs-xr)(zt-z_) (xt-Ii=I,2,3(or4). t Theorderofthegridpoints isalso ° xs)(zs-zr)\u003eO, wheretheindices r,s,tcorrespond tothreegridpoints intheelement where orr,s,t=I,2,3fortriangles, s,t=I,2,3 2,3,4 3,4,1 4,1=2fortrapezoids. Theconduction matrix forTRIARG iscompuLeo bycalling foraTRMEM, whose thickness is calculated from t=2_(xi+x2+x3)13. Tocompute theconduction matrix forTRAPRG, itwillbedivided intooverlapping triangles. Themapping isexactly thesameasthemapping ofquadrilaterals intotriangles. Thematerial orientation angles forthetriangles mustbecomputed aswasdoneforQDMEM. Thethickness of eachofthetriangles isgivenby t:_(xr+xs+xt)/3, where r,s,t,arethethreevertex indices usedfromthemapping matrix. subroutine isthencalled fourtimes.TheKTRMEM 4.87-138a (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.11TheTRAPRGElement 4.87.11.I Input DatafortheTRAPRG Element I. SILl,SIL2,SIL3,SIL4 Y Mat. I.D. Nl’Xl’Yl\"Zl N2,X2,Y2,Z2 N3,X3,Y3,Z3 N4’X4’Y4’Z4 tTheECPT/EST entries fortheaxisymmetric trapezoidal ring (TRAPRG) element are Description Scalar index numbers forthefourgridpoints. Material property orientation angle (degrees). Material property identification number. Localcoordinate system number andlocation inbasic coordinates ofthefourgrid points. Element temperature formaterial properties Forthis element Yimust equal zerofori=l,2,3and4,andwedefine: {Rs}Xl X2 X3 X4(I) Zs zslI=Zs2 Zs3 Zs4Zl Z2 Z3 Z4(2) 4.87-139\nMODULE FUNCTIONAL DESCRIPTIONS 2.Geometry Input Thelocation (Xi,Yi’Zi)andlocalcoordinate system number (Ni)ofeachgridpoint areusedtocalculate the3by3global-to-basic coordinate system transformation matrices, [Ti],i=1,2,3,4. 3.Material Property Input Thematerial property inputfortheTRAPRG element isthesameasthatfortheTRIARG element (seesection 4.87.10.1). 4.87.11.2 General Calculations I.Local coordinate calculations are: Zmin=minimum of(Zsl,Zs2,Zs3,Zs4), (3) {RL}={Rs}, (4) IZmin! {ZL}={Zs}- )Zmin_ (5) .)Zmin_ Zmin LetRLiandZLibetheithcomponent of{RL}and{ZL}respectively. Toinsure theuser hasinputhisgridpoints inaccordance withtherestrictions setdowninsection 2ofthe User’s Manual, thefollowing testsaremade: IfRLI_RL2orRL4_RL3orZL4SZLI,thentheuserhasviolated therestriction thatthe gridpoints beordered inacounterclockwise manner andauserfatalerroroccurs. IfIZLI-ZL21\u003e.001orIZL3-ZL41\u003e.001,thentherestriction thatthelinejoining grid points 1and2andthelinejoining gridpoints 3and4beparallel tother-axis hasbeen violated andauserfatalerroroccurs. 2.Testforarectangle. Define: RMI4=(RLI+RL4)/2,(6) 4.87-140 (3/I/71)\nsT oc o ,ELE ,E.TOESCRIPTIO.S RM23=IR,2+R,3 12 IIf RM14 \u003c0005thenRLI=RL4:RMI4. IRL2-RL31 If RM23 t\u003c0.005thenRL2=RL3=RM23. IfRLI=RL4andRL2=RL3,thentheelement isrectangular. IfRLI=RL4:O,thentheelement isacoreelement. 3.Generate thetransformation matrix fromfieldcoordinates togridpoint degrees offreedom: 1RLIZLIRLIZLI 000 0 0000 1RLIZLIRLIZLI 1RL2ZLIRL2ZLI 000 0 0000 1RL2RLIRL2ZLI 1RL3ZL4RL3ZL4 000 0 0000 1RL3ZL4RL3ZL4 1RL4ZL4RL4ZL4 0000 0000 1RL4ZL4RL4ZL4 m m [H]:[_]-I[R]: 8x8 4.Generate thetransformation matrix fromtwotothreedegrees offreedom perpoint: [?qs]:100000000000 001000000000 000100000000 000001000000 000000100000 000000001000 000000000100 0000000000018x12(7) (8) (9) (lO) 4.87-141 (3/I/71)\nMODULE FUNCTIONAL DESCRIPTIONS 5.Iftheelement isacoreelement, then: hlj:h3j:0j=1,2…..8 hil=hi7=0i=1,2…..8(II) wherehijisanelement of[H]. 4,87.11.3 Integral Calculations a.Compute theintegrals overthecross-section ofthetrapezoid that areoftheform: Ipq=ffrPzqdrdzrz(12) forthevalues: I_10,1_11,1.12,100,101,102,110,111,112,120,121,122,130,131,132 • Thelimitsofintegration arechosendepending onthegeometric shapeofthe trapezoid. ¢z z3:z4 4 3 rabz//rcdz1 zI=z22 Ifthelinesbetween points1and4andbetween points 2and3aredefined bytheequations r:a+bz_ (13) r=c+dz, (14) 4.87-142 (3/I/71)\nSTRUCTURAL ELEMENT DESCRIPTIONS respectively, then: (R,4-R,ll a=RLI-ZL4ZLIJZLI,(15) RL4-RLIb= ZL4-ZLI’(16) lRL3-RL2\nc=RL2- _ZL3 ZL2J ZL2,(17) RL3-RL2 ZL3-ZL2(18) Ingeneral, theintegration takes theform: Ipqz4c+dz =fIzIa+bzrPzqdrdz. (19) Forthecasewiththesider=c+dzparallel totheaxisofsymmetry (the zaxis) wehave: Ipq zIa+bzrPzqdrdz. (20) Forthecasewith thesider=a+bzparallel totheaxisofsymmetry we have: z4c+dz zIarPzqdrdz. (2]) Andfinally fortherectangle, theintegration takes theform 4.P_o143 {311/71)\n4,87,11.4MODULE FUNCTIONAL DESCRIPTIONS z4 Ipq= rPzqdrdz. Elastic Constants Matrix Calculation(22) Theelastic constants matrix inelement coordinates, lEg],fortheTRAPRG element iscalculated identically totheelastic constants matrix fortheTRIARG element (see section 4.87.10.4). 4.87.11.5 Stiffness Matrix Generation (Subroutine KTRAPR ofModule SMAI) I.Generate thetermsofthesymmetric element stiffness matrix infieldcoordinates as showninTable2.Eachtermmustbemultiplied by2_toform[K]. 2.Transform theelement stiffness matrix fromfieldcoordinates togridpoint degrees offreedom: [K]=[H]T[K][H]. (23) 3.Transform theelement stiffness matrix fromtwotothreedegrees offreedom perpoint: [K]=[Fqs]T[K][Fqs]. (24) 4.The3by3partitions LKpj]of[K]corresponding tothepivot pointpare transformed: 5.[K3pj]:[Tp]T[K_j]LTj], j=1,2,3,4. Finally, these3by3partitions areexpanded to6by6partitions:(25) [Kpj]r3’I L(26) 4.87-144\nTable 2.STRUCTURAL ELEMENT DESCRIPTIONS Elements ofthe8by8Symmetric Stiffness Matrix fortheTRAPRG Element. Row1 Row2 Row3 Row4 Row5 Row6 Row7 Row8Col.1 Col.2 Col.3Col.4 E221-I0 (E22+E12)Io0 (Ell+2E12+E22)Ilo E22I.ll (E12+E22)Iol E221.12+E44110 (E12+E22)Iol (Ell+2E12+E22)Ill (E12+E22)I02 (Ell+2El2+E22)Il2 +E44120 +E44130 0 0 0 0 0 0 E44110 E44120 E32100 (E13+E23)Ilo E23101 (E13+E23)Ill E32110 (E31+E32)I20 (E23+E44)Ill (E13+E23+E44)I21 Row5 Row6 Row7 Row8Col.5Col.6Col.7Col.8 0E44110 0 0 E33Ilo 0E44Ill E33120 E33130+E44II2 4.87-145\nMODULEFUNCTIONAL DESCRIPTIONS [M]=274.87.11.6 MassMatrixCalculation (Subroutine MTRAPRofModule SMA2) I.Formthecoupled massmatrix infield coordinates: Symmetric M2110 M2120 M2130 M2Ill M2121 M2121 M2131-M1Ii0 M1120M1130 MIll1 MII21 MIll2 M1121M1131M1122M1132 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0M2112 M2122 where Ml=M2=p. 2.Transform themassmatrix togrid point degrees offreedom:! M2132 8x8 [M]:[H]T[M]LH]. 3.Transform themassmatrix fromtwotothree degrees offreedom perpoint: no[M]:[?qs][M][?qs]. The6by6partitions, [Mpj], arecalculated asinEquations 25and26.(27) (28) (2g) (30) 4.87-146\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.11.7 Thermal Load Calculations (Subroutine TTRAPR ofModule SSGI) I.Formthetemperature gradient vector: {AT} ={T}-To To TO TO ,where {T}isthevector ofloading temperatures atthegridpoints. Formthethermal expansion coefficient vector:(31) r % {=}= =z 0 3.Multiply theelastic constants matrix bythethermal expansion coefficient vector: 4.Formthe[q]matrix: [Q]w AB2Io0 (ABI+AB2)IIo AB2IoI = (ABI+AB2) II1 0 0 AB3110 AB3120{AB} :[Eg]{} ° AB2110 AB2IOlAB2111 (ABI+AB2)I2o(ABI+AB2) Ill (ABI+AB2) I21 AB2111 AB210Z AB2II2 (ABI+AB2)I21 (ABI+AB2) Il2 (ABl+AB2)I22 0 0 0 0 0 0 AB312O AB3111 AB3121 AB3130 AB3121 AB31318x4 4.87-147(32) (33) (34)\nMODULE FUNCTIONAL DESCRIPTIONS 5,Partition thetransformation matrix [HItoform[H’]: where[H’]=[h’ij] 4x4,(35) h’ij=hikfori=1,2,4; j=1,2…..4;andk=2j-I andhikaretheelements of[H]. 6.Compute thethermal loadinfieldcoordinates: {FT}:2_[Q][H’]{ZIT}. 7.Transform thethermal loadtogridpointdegrees offreedom:(36) 8,{iT}:[H]T{FT }. Transform thethermal loadfromtwotothreedegrees offreedom perpoint:(37) go{FT}=[£qs]T{FT }. Eachpartition, {F_},oflength 3of{FT}istransformed toglobal coordinates by:(38) {F_}g :[Ti]T{F_}. lO. These vectors areadded totheoverall load vector, {Pg}. 4.87.11.8 Element Force andStress Calculations (Subroutines STRAPI andSTRAP2 of Module SDR2). Element stress andforce data items arecalculated intwophases. Thefirst phase (subroutine STRAPI) calculates theelement stiffness andstress matrices. Thesecond phase (subroutine STRAP2) calculates theelement forces andstresses from thevarious subcase displacement vectors.(39) 4.87-148\nSTRUCTURAL ELE_NT DESCRIPTIONS Phase lcalculations areasfollows: I,Formtheelement stiffness matrix, [K],asinsection 4.87.11.5. 2.Define afifth\"gridpoint\" tobetheaverage oftheotherfourpoints: RL5=(RLI +RL2+RL3+RL4), (40) ZL5={ZLI +ZL2+ZL3+ZL4). (41) 3.Formthematrices [D(1)],[D(2)],[D(3)],[D(4)],[D (5)] where [D(i)]0 1 0ZLi 0 0 0 0-_ ZLi 0 0 O O l l _ ZLi RLi RLi 00 00 00 0RLi 0 0 1 RLi 0 1 0 ZLi 4x8(42) where i=1to5denotes thefivegridpoints. 4.Compute thestress matrices foreachofthefivegridpoints infield coordinates: [_(i)] =[Eg][D(i)]. (43) 4.87-149\nMODULE FUNCTIONAL DESCRIPTIONS 5.Transform eachstressmatrix togridpointdegrees offreedom: [(i)]:[(i)][H]\" (44) 6.Transform eachstressmatrix fromtwotothreedegrees offreedom perpoint: [S(i)]=[s(i)][?qs]. 7.Formthemasterstress matrix: 8t\"s(1) s(2) [s]= s(3) S(4) s(5)B Transform thestressmatrix frombasictolocalcoordinates:20x12(45) (46) where [T1234][S_]:[S][T1234] , -T1'0!0'0\"n__I I–L. I I–I…. 0,T2?.O. –‘O!T_‘0I o_ ….J0J0,0’,T4_1 – i(47) (48) 9.Compute thethermal stressvector: {Ts}:[Eg]{_} • (49) Phase2calculazions arear#olIc.is: IoExtract thedisplacement vector, {A},atthethreetranslation coordinates ofeachofthe fourgridpointsfromtheglobal displacement vector. 4.87-150\nSTRUCTURAL ELEMENTDESCRIPTIONS 2.Calculatetheelementforces: {P}:[K]{A}. (50) 3.Calculatetheelementstresses: {0}=[Sc]{A}-Td{Ts}, (51) where TdTi-To,ifi#5(Tiisthetemperature atthe ithpoint) Tavg-To,ifi=5(Tavgistheaverage temperature overthefourgridpoints)(52) 4.87.11.9 Thermal Analysis Calculations fortheTRAPRG Element (Subroutine HRING byModule SMAI) Thecalculations aredescribed inthepreceding description fortheTRIARG element; see Section 4.87.10.9. 4.87-151 (8/I172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.12 TheT_)RDRG Element 4.87.12.1 InputDatafortheTORDRG Element I.TheECPT/EST entries fortheaxisymmetric toroidal ring(TORDRG) element are: Symbol Description SILl, SIL2 Scalar index numbers forthetwogrid points _l’2 Angles ofcurvature atthet_Dgrid points (degrees) y Material property orientation angle (currently notused) Hm,Hf Membrane andflexure thickness NI’XI’YI’ZI t Localcoordinate system number andlocation inbasic N2,X2,Y2,Z 2 coordinates ofthegridpoints. t Element temperature formaterial properties Forthiselement Yimustequalzerofori=1and2,andwedefine: Ix}{R}: , (I) X2 {Z}: (2) Z2 2.Coordinate system data Thelocation (Xi,Yi,Zi) andlocalcoordinate system number (Ni)ofeachgridpointare usedtocalculate the3by3global-to-basic coordinate system transformation matrices, [Ti],i=I,2. 3.Material data Thematerial property inputfortheT_RDRG element isthesameasthatforTRIARG element (seesection 4.87.10.1) withthefollowing notational changes: 4.87-152\nSTRUCTURAL ELEMENT DESCRIPTIONS Ep=Er, ET=EO, vPT =VrO {ALF} =I_rl c_e\" 4.87.12.2 General Calculations I.Compute thefollowing constants used instiffness matrix generation: C=Ep/ET, (3) DM=EpHm/(C -V_T), (4) OB=EpH /(12(c- (5) 2a orashell cap: (I)ifc_1 (2)ifc_1 (3)ifc_1 (4)ifc_1 3.Determine iftheelement isatoroidal ring, aconical ring, acylindrical ring, _2’then theelement isatoroidal ring. =_2=90o,then theelement isacylindrical ring. =_2#90°,then theelement isaconical ring. =O,then theelement isashell caD. Compute thelocal coordinate constants foratoroidal element: ¢8=_2-al’(6) Rp[(R2-Rl)2+(Z2-Zl)2] I/2 (7) l _I=Rp(B) 4.87-153\nMODULE FUNCTIONAL DESCRIPTIONS S=(m2\"ml)Rp ‘(9) BB=R1+Rp[sin(m I+-)-sin(ml)], (I0) RT=BB sin(_l +¢_B_B) 2(11) Pl=c°s(c_l +-’)’(12) )2 =- Rp(13) 4.Compute thelocal coordinate constants foraconical orcylindrical ring S:[(R2-RI)2+(Z2.Zl)2]I/2 ,(14) Scos_l BB=Rl+2 ‘(15) B RT=sln_I(16) Rp=0,(17) kI:0,(18) _1:cos_1,(19) _2:0. (20) 4.87-154\nSTRUCTURAL ELEMENTDESCRIPTIONS 5.Generate thetransformation matrix fromfield coordinates togridpoint degrees offreedom: [rsq]m 0 0 0 00 l 0 0 0 0 0 0 O 0 0 l 0 0 0 0 0 0 l 0 0 0 0 - 0 0 0 00 0- 0 0 0 0 l T -I o7 l (21) o2s-\" 0 0 -1 –go 010x12-l0-6 -3 l0-4 0 osT o_oo_7 0 15 8 0 3 O 0 -15 7 s_ sT 0 -6 -3 -I 6 -3 s-om oo2S3 7 7 l 0 0 0 0 0 0 0 0 0 0 0 0 0 0 l 0 0 0 0 0 0 -3 0 0 0 -2 0 3 s- - ooo 2 l -2 l ooo7o_ooo 4.87-155\nMODULE FUNCTIONAL DESCRIPTIONS Errs]6.Generate thetransformation matrix fromlocaltosystemcoordinates: -cos_I 0 sin_I 0 0 0 = 0 0 0 0 0 00-sin_I000000 000- 00 000000 000 0cos_I000000 000 00-I00000 000 00 010000 000 00 001000 000 00 000cos_20-sin_2000 00 000000 000 00 000sin_20cos_2000 00 000000-I00 00000000010 00000000 00I_12x12(22) 7.Rearrange thetransformation matrix [C6q]suchthatthemembrane andflexure termsarereversed. ?_q(2) I0x12 rBq(1)(23) (2) where[F_q(1)] isthefirstsixrowsof[?Bq]and[FBq]isthelastfourrowsof [rBq]. 4.87.12.3 Integral Calculations Themethod usedtocompute theintegrals depends onthegeometric shapeoftheelement. I.Toroidal ring-basicintegrals Therearesixbasicintegrals tobecomputed, ofwhichthefirstthreecanbestbe evaluated byseriesexpansion, butthelastthreerequire numerical integration, 4.87-156"},"title":"Programmer's Manual P71"},"/docs/programmers/programmers_manual_072/":{"data":{"":"STRUCTURAL ELEMENTDESCRIPTIONS llJ _0@B Rpj+I@Bj+I =Rpj+l @Jd@-j+l ‘(24) 0 _ )i@j+l+2i+l 12J=RpJ+l _Jsin@d =Rpj+lZ(-Ii=O(j+i+2i+l) (2i+I)[(25) _0 co13J=Rpj+l @BqbJcos@d@ =Rpj+l £ i=O(-I)i¢Bj+l+2i (j+l+2i) (2i)!(26) •=Rpj+l_B _ d@14J Jo B(27) •/0• @B_J2sin@cos@ dqb,15J=Rpj+I ‘‘B (28) •“16J:Rpj+I B (29) where B:R1Rpsin_1+Rpsin_icos @÷Rpcos_isin@, andj=O,1…..I0. Thesummations in12Jand13Jarecarried outuntilthetruncation errorisin- significant.(3o) 4.87-157\nMODULE FUNCTIONAL DESCRIPTIONS 2.Toroidal ring-required integrals Theactual integrals required cannowbedefined interms ofbasic integrals. 81J=(RlRpsin_l)llJ +RpCOS_iI2J +Rpsin_iI3 i,(31) • • ° 823=cos_I123+sin_I133, 63J=cos2_iI4 j+sin_icos_iI5 j+sin2_iI6 j, 64J=cosmll3J -sinmll2 j, 85J=sinmlcOSml(16 j-14J)+-(l-2sin2ml)I5 j, 66J=cos2mII6 j-sinmlcosmiI5 j+sin2miI4 j,(32) (33) j=O,l …..lO(34) (35) (36) 3,Conic ring-basic integrals J_roS Sj+lIl= Jd :, j=O,l….,lO(37) 123”:4S(Rl+#jcosml) d_,j:O,l….,lO(38) Rl+SCOSm l 120=1In( ),cosmI R1(39) R1 Rl+SCos_ 1 121 lIS-_ In( )],=cos_—-_ cosoI Rl(40) 123ScOS_l 1 sj+I _(-I)iI-RT—_s =TIi=o (j+l+i),j=2,3….,lO• (41) 4.87-158\nSTRUCTURAL ELEM£NTDESCRIPTIONS 4.Conicring-requiredintegrals 61J=RIIlj+4II1j+l, 623=sin_III3, 63J 64J=sin2_ll2 j, =_lllj, 65J:sinc_14I12j, 66J=_1212j,j=.O,l,…,10(42) (43) (44) (45) (46) (47) 5oCylindrical ring-basic integrals I13= Jdc j:0,1,…,10 (48) •/oS: 12J: R1 6.Cylindrical ring-required integralsSJ+1 l(j.T) ‘j:0,I ,10_l )°°e(49) 61J:RIllj+_IIij+l 62J=sin_lllJ , 63J:sin2_ll2 j, 64J:65J:66J:0,j=0,I,…,I0(50) (51) (52) (53) 4.87-159\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.12.4 Elastic Constants Matrix Calculations Formelastic constants matrix P[E]- 1 UEP ET_PT . (54)ET,O_T) ET 2x2(I-Fpp TvPT 4.87.!2.5 Stiffness MatrixCalculations (Subroutine KT_RDRofModule SMAI) I.Define theconstants A:Rp, (55) V=vpT, (56) C:Ep/ET. (57) 2.Formthestiffness matrix termsinfieldcoordinates asshowninTables 3.4and5. 3.Transform thestiffness matrixfromfieldcoordinates togridpointdegrees offreedom: 4_[K]:[r6q]T[K][FBq ]. Transform thestiffness matrix fromlocaltosystemcoordinates:(58) [K]:[rrs]T[_][Frs ]. 5.Theglobal-to-basic coordinate systemtransformation matrices [Ti]areexpanded to6by6matrices:(59) i-,L- : LT]= ,i1,2. Lo(60) 4.87-160\nSTRUCTURAL ELEMENTDESCRIPTIONS Table 3.Columns I,2and3oftheSynT_etric I0by!0Stiffness Matrix fortheT_RDRG Element. Column 1 Column 2 Column 3 A +6°) +2_62 Row6 DM(_6l 3C 5 4.87-161\nMODULEFUNCTIONAL DESCRIPTIONS Table4.Columns4,5,and6oftheSymmetriclObylOStiffnessMatrixfortheT_RDRGElement. Column 4 Column 5 Column 6 Row4 DB9(4C_ +4V_+64) C Row9 DM(6+S DM(6+__ DM(__+6 4.87-162\nSTRUCTURAL ELEMENT DESCRIPTIONS Table5.Columns 7,8,9,andI0oftheSymmetric I0byI0StiffnessMatrix fortheTORDRGElement. Col.7 Col.8 Col.9 Col. lO Row7 DM6_ +6_) +6V65 4.87-163\nMODULEFUNCTIONAL DESCRIPTIONS 6.Thestiffnessmatrix,[KJ,ispartitioned into6by6matrices: K2 (61) 7.These 6x6partitions aretransformed tolocal coordinates: [K6.]C –rT61Tr_6 irT6,PJ LpJL_pjJL jJ, where j=l,2,andpisthepivot point, p=lor2.(62) 4.87-164\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.12.6 MassMatrix Calculations (Subroutine MT_RDR ofModule SMA2) I.Formthemassmatrix infield coordinates: [M]=2_pHm-0 61 Symmetric 0 0 0 0 6_ 0000616_ oooo___ oooo___i oooo___ ooo__{(63) 10xl0 2.Transform themassmatrix togridpoint degrees offreedom: [M]:[_Bq]T[M]_Bq 3.Transform themassmatrix fromlocal tosystem coordinates: [M]:[rrsJT[M][rrs ]. 4.Themassmatrix, [M],ispartitioned into6x6matrices, andthese 6x6partitions aretransformed tolocal coordinates (seeEquations 61and62).(65) 4.87-165\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.12.7 Thermal LoadCalculations (Subroutine TTORDR ofModule SSGI) I.Compute thetemperature gradient constants: ATI(m) :Tl(m)_To,(66) AT2(m)=T2(m)_Tl(m) ,(67) ATI(f) :0,(68) T2(f) :0, whereTi(m)arethemembrane temperatures atpointi. 2.Compute thethermal strain vectors:(69) {ET(O)}=ATi(m){ALF },(70) {ET(1)} :Z_T2(m){ALF },(71) {HT(O)}=ATI(f){ALF },(72) {HT(1)} :AT2(f){ALF }, (73) where {ALF}isavector oflength two;thefirstcomponent is_randthesecond e\" 3.Formthematrices ofintegrals [ME(O)] =2_Hm FO 6_261136.1 _1611 16 .1 16 XI_I L(74) 4.87-166\nSTRUCTURAL ELE!.ENT DESCRIPTIONS x1_j J(75) 2xl0 (76) 2xl0 [FFE(1)]=ITZ_H3[000000-261-66#-1267 00000--’--(77) 2xlO 4.Compute thethermal loadvector infield coordinates 5.{FT}:[FME(O)]T[E]{CT (0)}+[FME(1)]T[E]{ET (I)} +[FFE(O)]T[E]{HT (0)}+[FFE(1)]T[E]{HT (0)}. Transform thethermal loadvectortogridpointdegrees offreedom:(78) {FT}:[?Bq]T{FT }•(79) 6.Transform thethermal loadvectorfromlocaltosystemcoordinates: {FT}=[rrs]T{FT }• (80) 7.Transform thethermal loadvectortobasiccoordinates: {FT}b:[TI2]T{FT }, (81) 4.87-167\nMODULE FUNCTIONAL DESCRIPTIONS where [TI2]‘0lO’O-“TI ii –“I–I–;– I0011iOi -..,I–I …. 0T2100i…. L- IOi0 Io, ‘1I, (82) and[Ti]and[I]are3by3matrices. 8.These vectors areadded totheoverall loadvector, {Pg}. 4.87.12.8 Element Force andStress Calculations (Subroutines STORDI andST_RD2 ofModule SDRI) Element stress andforce dataarecalculated intwophases. Thefirst phase (subroutine ST_RDI) calculates theelement stiffness andstress matrices. Thesecond Dhase (subroutine STORD2) calculates theelement forces andstresses fromthevarious subcase displacement vectors. Stresses areevaluated atbothendsandatthemid-span oftheelement. Phase lcalculations areasfollows: I.Formtheelement stiffness matrix, [K],asinsection 4.87o12.5. 2.Setupthecoordinates ofthethree stress points: {X}: (83) 3.Compute theconstants X2’X3’_4asafunction ofthestress points coordinates. a.Iftheelement isatoroidal ring, then: _2cos(_l+X(i)) (i): Rp R1-Rpsin _I-sin(I+XXp) 4.87-168\nSTRUCTURAL ELEMENTDESCRIPTIONS sin(I+XXp) X3(i): i:1,2,3, (85) RlRp[sin _l-sin(l+Xp)] L4(i)=-_3(i)/Rp . (86) b.Iftheelement isacylindrical orconical ring, then: k2(i) = cos_lRl+X(i)cos_l’ (87) _3(i) = cos_l Rl+X(i)cos_li=1,2,3, (88) _4(i)=0. (89) c.Iftheelement isashell cap,then: _2(i)cos(1+XXp’i) RIRp[sin_l-sin(I+XXp)] i=1,2,3(90) L3(i):1/Rp, (91) _4(i)=-I/(Rp2) (92) 4.Compute thestress matrix infield coordinates forthethree stress points asshown inTables 6and7.Notethatthefactors HandH3/12 havebeenomitted for[Sl(i)] and[2(i)]respectively. Iftheelement isashell cap,thenmodify [(i)] b/: S12=El2 Ell ’ (93) 4.87-169\nMODULEFUNCTIONAL DESCRIPTIONS $22=E22+El2 ,(94) $37=-2(El2+Ell),(95) 47=2(E22+El2),(96) $58 =3(E22 -4EII)(97) 5.Formthemaster stress matrix infield coordinates: Es]= I(i) i_(3)15xlO (98) 4.87-170\nCol.l _2(i)El2 _2(i)E22Table6.STRUCTURAL ELEMENTDESCRIPTIONS Terms inColumnslThrough 6ofthe2bylO[El 3bylOIS2(i)]Matrix, The[Sl(i)] Matrix(i)]Hatrixandthe Col.2Col.3 Col.4 Col.5 Col.6 Ell 2ElIX(i) 3EllX2(i) Xl(i)Ell +_2(i)El2X(i) +x2(i)El2X2(i) +x2(i)El2X3(i )+_3(i)El2 El2 2E12X2(i) 3E12X2(i) _l(i)El2 +_2(i)E22X(i) +_2(i)E22X2(i) +_2(i)E22X3(i) +_3(i)E22(Xl(i)Ell +_3(i)El2)X(i) (_l(i)El2 +3(i)E22)X(i) The[$2(i)]Matrix 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0-k2(i)El2 k2(i)E22 g(i) whereg(i) (%2(i)) 2 -(i)E= E22 412 Isi(i)I [(i)] : s2(i) 5xloand 4.87-171\nMODULEFUNCTIONAL DESCRIPTIONS Table7.TermsinColumns7ThroughlOofthe2bylO[Sl(i)]Matrixandthe 3bylO[_2(i)]Matrix. The[SI(i)]Matrix Col.l Col.2 Col.3 Col.4 Rowl Row2 Rowl Row2 Row3(xI(i)EII (Xl(i)Ell (Xl(i)Ell (_l(i)Ell +x3(i)E1(i) i)El2)X3(i)+_3(i)El2)X4(i) i) 2X2+_3( +X3(El2)X5(i) (_l(i)El2 (_l(i)El2 (_I(i)El2 (_I(i)El2 +_3(i)Ez2)X2(i) +_3(i)E22)X3(i) +_3(i)E22)X4(i) +x3(i)E22)X5(i) The[$2(i)]Matrix -2_2(i)El2)X(i) -3_2(i)El2X2(i) -4_2(i)El2X3(i) -5_2(i)El2X4(i) -2Ell -6EliX(i) -12EllX2(i) -20EllX3(i) 2_2(i)E22X(i) 3_2(i)El2X2(i) 4_2(i)E22X3(i)5_2(i)E22X4(i) +2E12 +6El2X(i) +12El2X2(i) +20El2X3(i) 2g(i)x(i) 3g(i)x2(i) 4g(i)X3(i) 5g(i)x4(i) -2_2(i)Eii -6_2(i)EliX(i )-I2_2(i)EllX2(i )-20_2(i)EliX3(i ) -6Ell -24EllX(i)-60EliX2(i) whereg(i)(_2(i))2 (i and = E22”_4)El2 4.87-172\nSTRUCTURAL ELEMENTDESCRIPTIONS 6.Transformthestressmatrixtogridpointdegreesoffreedom 7,[]:[][q]i Transform thestress matrix fromlocal tosystem coordinates(99) o[S]:[S][rrs] . Transform thestress matrix toglobal coordinates(lOO) [S]g:[S][Tl2] . 9.Compute thethermal stress vector forthethree stress points: ATl(m)Hm(Ell l+E12_2)+AT2(m)H m_-(Ell_1+EI2_2) Xi ATI(m)Hm(E21 1+E22_2)+AT2(m)Hm_- (E21_1+E22_2) _Tl(f) (Ell_l +E12a2)+AT2(f) H_Xi,F2-g-(Ellal +E12_2) {Ts(i)} :i_ATl(f )(E21_l +E22_2)AT2(f) H_Xi- _ (E21_l +E22_2 ) aTl(f) H__2(i)[(EllT2- -E12)_I +(El2-E22)2] +AT2(f) H31T‘Sx2(i)xi[(Ell -El2)_l +(El2-E22)_2]+[EII_1+E12_2] 1 where ATl(m), AT2(m), ATl(f)andAT2(f) areasgiven inEquations 66through 69.(I01) (Sxl) (102) 4.87-173\nMODULE FUNCTIONAL DESCRIPTIONS I0,Formthemaster thermal stress vector {Ts}=Ts(1) Ts(3)(103) Phase2calculations areasfollows: !.Extract thedisplacement vector, {A},atthetwogridpoints fromtheglobal displacement vector. 2.Calculate theelement forces: 3,{P}=[K]_A} Calculate theelement stresses without regard tothermal loading:(I04) {a’}=[S]g{A}(12xI)• 4.Ifthere isnothermal loading, then(105) {a}:{a’}• (106) 5.Ifthereisthermal loading, then aj:a!–To)TS.-(T2-TI)3(TI 3 TSj+15(107) forj=1and2and forj=3,4,5.(1o8) 4.87-174\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.13 TheVISCElement Theviscous element, VISC, hasthesameproperties astheRODelement (seesection 4.87.1) except that instead ofgenerating acontribution tothestiffness matrix, theelement generates acontribution tothedamping matrix, [Bgg]. 4.87.13.1 Input DatafortheVISC Element I.TheECPT/EST entries fortheVISCare: S__mbol Descriotion SILa,SILb Na,Xa,Ya,Z a Nb,Xb,Yb,Zb Cl C2Scalar indices forgridPoints aandb Local coordinate system number andbasic coordinates ofgrid points. Extensional damping coefficient Torsional damping coefficient Given Na,Xa,Ya\"Za’Nb’Xb’YbandZbandtheCSTM (Coordinate System Transformation Matrices) data block, the3by3transformation matrices, [Ta]and[Tb], arecalculated using utility routine TRANSD (seesection 3.4.37). 4.87.13.2 Damping Matrix Calculations (Subroutine BVISC efModule SMA2) I.Generate {n}asinEquation 2,section 4.87.1.2, andgenerate thetransformation matrices [Ta]and[Tb]. 2.Calculate: [bt]:CI’-n_ nln2nln3- nIn2 n2 n2n3 Lnln3n2n3 n_(i) 4.87-175\nMODULEFUNCTIONAL DESCRIPTIONS [br]:C2-n_ nln2 nln2 n_ nln3 n2n3nln3TM n2n3]n_(2) 3.The6x6damping matrices are: [Baa] [Bab]VT:TaioL-“0–!-T_brTa I TTb.T. i03 B_D i ]…. -– 0 )TabrTb m(3) (4) [Bbb] iTTbrT.IDD(B) [Bba]T1_t!o…. i-T– L0 ,,TbbrT a(6) 4.These matrices areadded to[Bgg]. 4.87-176"},"title":"Programmer's Manual P72"},"/docs/programmers/programmers_manual_073/":{"data":{"":"STRUCTURAL ELEMENTDESCRIPTIONS 4.87.14 Integral Calculations fortheTRIARG_ TRAPRG Elements Integrals oftheform RRifZk_rPzqdzdr (I)Ipq= JZmnJ must becalculated fortheTRIARG andTRAPRG elements (seesections 4.87.10. and4.87.11.3). Theintegration maybeperformed foranyinteger values ofpandq.Theareaofintegration isdefined bythetwolines r=Riandr=Rj,andbythetwolines z=bkcr+ak_and z=bmnR+amm. This integration isperformed bytheintegration “driver” suhroutine0 F_RTRAN function qKI inmodule SMAI, F_RTRAN function DMIinmodule SMA2, andF_RTRAN function AIinmodule SDR2. Thefollowing input dataarenecessary forthese routines: p -aninteger thatdefines thepower ofthervariable. q-aninteger that defines thepower ofthezvariable. {R} -avector ofthercoordinates ofallpoints usedtodescribe thearea ofintegration. {Z} -avector ofthezcoordinates ofallpoints usedtodescribetheareaof integration. k,_ thesubcripts ofR,Zdefining oneofthelines ofthelimit of integration (i.e., thelinebetween points (rk,zk)and(r_,z_)). m,n -thesubscripts ofR,Zdefining thesecond lineonthelimit of integration. i,j -thesubscripts ofRdefining theother twolines onthelimit of integration. Inthefollowing paragraphs F_RTRAN names offunctions auxiliary toDKIaregiven. The corresponding F_RTRAN function names auxiliary tofunctions DMIandAIcanbefound insections 4.28.8 and4.46.8 respectively. 4.87-177\nMODULE FUNCTIONAL DESCRIPTIONS Thefollowing slopes andy-intercepts arecalculated infunctions DKKandDKM R£Zk-RkZ£ ak£-R£Rk(2) Z£-Zk bk_\"=R£Fkk(3) RnZm-RmZn amn=Rn-Rm ZZm b n mn RnRm(4) (5) Atestforavanishing areaofintegration ismade: ifak£=amnandbk£=bmn,thenIpq=O.ifRi=Rj,thenIpq:O; Theformulas forevaluation oftheintegrals aredependent uponthevalues ofpandq asgiveninthefollowing sections. 4.87-178\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.14.1 Integral Calculation forq\u003e0andanyp.(Function DKINT) Define thefunction 1q+l xtCyq+l-t D fl(x’y) =q+-Tl\" t=O() where tq+l-s+l :is:l s (lfort#0, fort=0,(7) Rj(q+l+p+l-t) Ri(q+l+p+l-t) D:[q+1+p+1-t In(RJRi) CandDarecalculated infunctions DKEFandDKJrespectively. Theintegral is]for(q+l+p+l-t) #0 for(q+l+p+l-t) =0(8) Ipq:fl(amn’bmn) -fl(ak‘bkc)(9) 4.87.14.2 Integral Calculation forp_0andq\u003c-l(Function DK89) :1 P f2(‘x’y) yp+l s=OZp!(-x) sD,(IO) where and_=iorj.D =(x+yR)P+l+q +1-s (p-s)!s!(p+l+q+l-s) lnlx+yR:l (p+l+q+l)!(-q'2)!for(p+l+q+l-s) #0 for(p+l+q+l-s) =0(ll) 4.87-179\nMODULE FUNCTIONAL DESCRIPTIONS Theintegral is 1f2(i,a f2(i ) Ipq:2-_ k_‘bk_)\"‘amnbmn -f2(J,akc,bkc) +f2(J,amn,bmn) 4.87.14.3 Integral Calculation forp\u003c0andq\u003c-1(Function DKIO0) Definethefunction -I-p-q-3\n(-p-q-3) !D f3(‘x’Y) x(-p-q-2) s:O(13) where D =(x+yR)(-p-l-s) (y)S (-p-q-3-s)!s!(-p-l-s)R‘P-l’s)for(-n-l-s) #0 for(-p-l-s) :0(14) and_=iorj. Theintegral is 1 ,bk_).f3(iIpq:+_f3(i,akC ,amn,bmn) -f3(i,ak_,bk_) +f3(i,amn,hmn) 4.87-180 STRUCTURAL ELEMENTDESCRIPTIONS 4.87.14.4 Integral Calculations forp\u003e-landq=-l(Function DKJAB) Define thefunction RP+lln(Ix+yRJ) f4(‘x’y) - p+l o+–ZTf2(‘x’y) ‘(16) where f2isgiven inEquation lO. Theintegral is Ipq=f4(i,ak_,bk£) -f4(i,amn,bmn) -f4(J’ak£‘bk£) -f4(J’amn’bmn)(17) 4.87.14.5 Integral Calculations forp\u003c-landq=-l(Function DK219) Define thefunction In(Ix+yR l) f5(,x,y) - +- f3(_,x,Y) (_p_l)R (-p-l) •,(18) where f3isgiven inEquation 13. Theintegral is Ipq=f5(i,ak£,bk£) -f5(i,amn,bmn) -f5(J’ak£‘bk£) -f5(J’amn’bmn)(19) 4.87-181\n40DULE FUNCTIONAL DESCRIPTIONS 4.87.14.6 Integral Calculations forp=-Iandq=-I(Function DK211) Define thefunction f6(,x,Y)0, for yRx ½[In(12 yRI)]2, for(yR)2=x2 andyR#x co _ F’YR_ItInlxIInlRIZ1-— ,for(vR)2 t=l co 1[in(lyR i)]2+Z1]t t=l_[Y ,for(vR)22 \u003cx \u003cx2(2n) Thesummation termiscalculated untilitsvalue becomes lessthan1.0x10\"6. Theintegral is Ipq=f6(i,akc,bk\u0026) -f6(i,amn,bmn) -f6(i,akL,hk_) -f6(i,amn,bmn)(21) 4.87-182\nSTRUCTURAL ELEMENTDESCRIPTIONS 4.87.15TheFLUID2, FLUID3, FLUID4, AXIF2, AXIF2, AXIF4, andMFREEElements 4.87.15.1 InputDatafortheFluidElements I.TheECPT/EST entries fortheFLUID2 element are: SILl,SlL2 Ni=O,ri,zi,0 i=l,2 p B nDescription Scalar indices fortheconnected scalar points Reference number forthebasiccoordinate system andlocations inthefluidcoordinate systems. Fluiddensity Fluidbulkmodulus Harmonic number 2.TheECPT/EST entries fortheFLUID3 andFLUID4 elements areidentical except thatthree andfourpoints areusedrespectively. 3.TheECPT/EST entries fortheMFREEelement areidentical totheFLUID2 element except that aweight factor, y,isusedinstead ofpandB. 4.Noothermaterial orcoordinate system dataisnecessary. 5.TheAXlFelements areidentical totheFLUIDelements atthisstage. 4.87.15.2 Matrix Calculations fortheFLUID2 Element (Subroutine KFLUD2 ofModule SMAIand Subroutine MFLUD2 ofModule SMA2) TheFLUID2 element isintended tomodelafluidintheregion adjacent toandincluding the axisofsymmetry. Thevolume isdefined bytwocircular ringpoints inthefluid. Theshapeis thatofadischaving aconical orcylindrical outerboundary. I.Theintegral parameters, forthestiffness matrix, 12n,O, 12n,l, 12n,2, and12n+2,0 are calculated according tothefollowing equations: 12n,0=12n,1=12n,2 =0,I l Zl)(r +rlr2+r_)I2n+2,0- 6(z2n:o (I) 4.87-183 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS r2-rI I2n,O=– k2–fff–] I2n,O I2n,1 -2(z2+Zl) 12n,2 =3 + 2n2 12n+2,0 :12n,O(2-’n-+-2)rln\u003e0 • (2) __ 10-6:ifIr2-rli \u003e z2-zIl D-z2-zl r2-rI D (2n+l 2n+I\n12n,0 :2n2–n-C_TT) r2 -rI) D ,D_fr2n+2. r_n+2)] 12n,l –2n2–)[r2n+Iz2 -r_n+Izl -\\2n–n-+-J 2 D _2n+l 2 2n+l 2/2D\\F2n+2 2n+2 12n,2 -2n2n(2nTT) _r2 z2-rl Zl-_2–nT2)Lr2 z2-rl Zl D(r;n+3 _r_n+3)]}2n+3 D 12n+2,0 =(2n+2)(2n+3)r_ n+3 r_n+3 (4) n\u003eO 2.Theintegral parameters forthemass matrix, 12n+2,0, 12n+2,1, and12n+2,2 arecalculated with thesame equations asabove except thevalue k=2n+2 issubstituted fork=2n. 3.Thetransformation matrix [H_p] isdefined as: 4.87-184 (ll/I/70)\nSTRUCTURAL ELEMENT DESCRIPTIONS l [H;q] =z2-zIz2 zl n n rI r2 l l n r; r2(5) 4.Thestiffness matrix is: pn [K_] =_[H;q]T I2n’O) P L(2n2 12n,l) n\u003eO ifn=o,afactor of2isused. Note:(2n2I2n’l) H;q] (2n2I2n,2 +I2n+2,0 _ (6) 5.Themassmatrix is: I2n+2,0 [M] =7T[H;q]T I LI2n+2,112n+2’I ][H_q] I2n+2,2_J•n\u003e0.(7) Note: ifn=0afactor of2isused. 6.Various tests areperformed fortheelement. IfIz2-Zll=0,thecalculations areskipped, ifrI=0orr2=O•afatal error exists, ifp=O,afatal error exists, ifB=O,themasscalculations areskipped. 4.87-185 (ll/1/70)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.15.3 Matrix Calculations fortheFLUID3 Element (Subroutines KFLUD3 ofModule SMAIand Subroutine MFLUD3 ofModule SMA2) TheFLUID3 element isusedtomodel avolume offluiddefined bythreeconnected fluidring points. I.Thethreeconnected points arearranged intheordersuchthattheareafactor, R,is positive. Theareafactor isdefined bytheequation: R=(r2-rl)(Z3-Zl)-(r3-rl)(Z2-Zl). (8) 2. 3.Thetransformation matrix, [Hpq], iscalculated as: [Hpq] : m (r2z3-r3z2) (r3zI-rlz3) (rlz2-r2zl) (z2-z3) (z3zI) (zIz2) (r3-r2) (rIr3) (r2-rl)(9) Theintegral parameters, Ikc,forthestiffness matrix arethesumoftheintegrals, Gk\u0026, foreachofthethreesides. Thepoints defining eachsideare: SIDE POINTS -a,b 1 1,2 2 2,3 3 3,1 Thefollowing parameters areusedtogenerate theintegrals, Gk_: ar =rb-ra Az=zbza az =Za raTr(10) 4.87-186 (11/I/70)\nSTRUCTURAL ELEMENT DESCRIPTIONS Theintegrals foreach sideare: r a G00=Blog_-b-Az Glo Az(r2a_r 2) –BAr+ lBCr2a 2 (r_ r_) G20=2- rb)+3_r - =lB2 raGOl)-log b- +¼Az22Ar2(ra-r_ l(AzC3r3b) lB2 Az2_r)+ - Gll 2Ar+1_A-r(ra 6_r/ (ra ra lB3Iog B2AZ+1B(L_r)2 2r2)+l__Az 33r_)GO2-3 _ (ra- 9_r/ (ra-(ll) 4.Thestiffness matrix is: [K_]:P[Hpq]Tn2100 n2Ii0 n2Ioln2Ilo n2101 (n2+l)I20 n2Ill n2Ill (n2102+120) Thematrix termsaremultiplied bytwoifn=0.[Hpq] .(12) 5.Themassmatrix terms aresimply: Mn.__A13 60B(rl+r2+r3+ri+rj)cij(13) where andcij=2,i=j, cij=1,i}_j, A=_isthearea. 4.87-187 (ll/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS 6.Thetestsperformed are: ifri=0afatalerrorexists, ifR=0theroutine exits, ifp=0afatalerrorexists, ifB=0themassroutine exits. 4.87.15.4 Matrix Generation fortheFLUID4 Element (Subroutine KFLUD4 inModule SMAIand Subroutine MFLUD4 inModule SMA2) Thiselement describes anaxisymmetric volume offluiddefined byfourfluidringpoints. It isactually solved bysubdividing thequadrilateral crosssection intofourtriangles andcalling theappropriate FLUID3 subroutine foreachofthetriangles. Theparameters pandBaremultiplied bytwoinordertoaccount fortheoverlapping volumes andreduce thematrix terms. I.Atestismadeinthestiffness routine tochecktheinterior angles whichmustbeless than180°.Foreachofthefourtriangles, theareafactor Kiscalculated whichwillbe positive iftheorderofthepoints iscounterclockwise. IfKisnegative foroneor threeoutofthefourtriangles, afatalerrorexists. 2.Thetriangles andtheirthreeconnected points are: Triangle Connected Points a b c I 1 2 3 II 1 2 4 III 1 3 4 IV 2 3 4(14) 3,TheECPTdataismovedtoatemporary storage spaceandtheoriginal ECPTisusedforthe dataforeachtriangle. Sincematrix termsareonlycreated ifoneoftheconnected points isthe\"pivot point\", atestismadeandtheFLUID3 subroutine isnotcalled ifthe\"pivot point\" isnotone ofthethreepoints. 4.87-188 (IIII170)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.15.5 Matrix Calculations fortheMFREE Element (Subroutine MFREE inModule SMA2) Thedataforthiselement isgenerated bysubroutine IFP4fromthefreesurface information andisnotavailable asauser-input element. Theelement describes theeffect ofgravity ona surface inbetween twofluid ringpoints. Inaspecial case, thesurface isinterior toacircle defined byonefluid ringpoint. I.Ifthetwoconnected points areidentical (SILl=SIL2), thespecial caseexists andthe equations are: _r2 Mii=2y(2n +2)’n\u003e0 r2 Mii=2y ,n=0(15) Afactor oftwoisincluded inthedenominator because theterms willbecalculated twice. 2.Iftheconnected points areunique, theequation forthemassmatrix is: [M] _(r2- rl)13rl +r2 rl+r21 - _n\u003eO. 12y Lrl+r2 3r2+rlj(16) Thevalues aremultiplied bytwoforn=O. 4.87.15.6 Stress Calculations fortheAXIFElements, Phase I. TheSDR2calculations forthese elements areactually thecalculations ofthevelocity ofthe fluid passing through afluid element. Thedata placed ontheESTBfileare: I.Id-Element Ide 2.SILl,SIL2,__(SIL3, SIL4) -Scalar indices ofconnected points 3.[Sv]-thevelocity-pressure matrix The[Sv]matrix fortheCAXIF2 element isafourbytwomatrix given asfollows: 4.87-18g (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS (17) where VrclIIVzc =[Sv] Pl P2 Vse1 V_e(18) VrcandVzcarevelocities atr=O,VseandVsearevelocities atthemidpoint oftheouteredge, alongtheedgeandcircumferential. Thetwobytwomatrix [Sc],forthecenter, is: o]-I z2-zIn:o (19) rIr2 1 [S2c]= [$2c]:[0] Thetwobytwo[$2c]matrix, fortheouteredgeis: [S_]:()n-IpAI]rl+r2 0 n\u003e1n:1 (20) (nzAr+rAz)l [Hnqp] nz J(21) (22) 4.87-190 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS whereAr=r2-rI, Az=z2-zI, 1 =(r2+rI)• :1(z2+Zl), JL:7Ar2+Az2,(23) Hn [qp]IT;z2 z1 n r2 - !n r7 r2 t Theninebythree[Sv]matrix fortheCAXIF3 element iscalculated withthefollowing equations resellfA,2_) Thethreebythree [S_]matrix relates threepressures tothethreevelocities inthebasic coordinate system Vr,V¢,Vz. oo1t 1 n nZc [S]:-;ConoTic Hp where [H_p] isathreebythreetransformation matrix between pressures andgeneralized coordinates defined inSection 4.87.15.3. t Thesixbythreematrix, [S],which defines thevelocities ateachedge,tangential and circumferential, is: 4.87-191 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS [s_]=m l l_ o £12 £12 n n 0 rI+r2 rI+r2 1 1 £23 £23 n n0 r2+r3 r2+r3 1 0 1 £13 £13 n 0 n rI+r3 rI+r3 /)2 )2where £ij /(rj ri - : -+(zjzi TheCAXlF4element iscomposed offouroverlapping triangles. orIVtheconnected points I,2,3,4areallocated asfollows:(26) Foreachtriangle I,II,III Triangles Connected points a,b,c I 123 II 124 III 134 IV 234 Foreachtriangle calculate the3x3[S]matrix fromEquation 9andaddeachcolumn tooneof fourcolumns corresponding totheconnected point. Theresults aredivided by4toprovide an average [S_]matrixforthequadrilateral. The[S_]matrixforthequadrilateral is: 4.87-192 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS whereJ_ijlrQLS_1=- e_1 1 J_12 _12 n n rl+r2 rl+r2 1 _41 nrl =/(rj-ri)2+(zj-zi)2l l _23 _23 n n r2+r3 r2+r3 l _34 n r3+r4l _34 n r3+r4 l _41 nIr4+rI(27) Theresulting [Sv]matrix forthequadrilateral CAXIF4 element is: [sv]…… (28) 4.87-193 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.15.7 Stress Calculations fortheAXlFElements, Phase2. Theelement identification number, theindices oftheconnected points, andthe[Sv]matrices aregivenintheESTBtable. Thepressures attheconnected points, {Pi},aregiven intheUGV matrix datablock. Depending ontherigidformat, thepressure values areeither realorcomplex numbers andassociated witheachvector ofpressures isarealeigenvalue, _;afrequency, f,or acomplex eigenvalue, P.Theequation forvelocity is l[Sv] Pi (29) {v}}: where {V} =2_f co=p _=1.0 and [Sv]isthevector ofvelocities intheelement. (real) inRigidFormat 3({Pi}isreal) (real) inRigidFormats 8andII({Pi}iscomplex) (complex) inRigidFormats 7andI0({Pi}iscomplex) inallotherRigid Formats ({Pi}isreal) isdimensioned 4x2,9x3,orllx4 fortheCAXIF2, CAXIF3, andCAXIF4 elements respectively. 4.87.16 TheSLBT3andSLOT4FluidElements 4.87.16.1 InputDataFortheSL_T3andSLOT4Elements I.TheECPT/EST entires fortheSLOT3are: S_xmbol SILl,SIL2,SlL3 ri,zi,wi,i=1,2,3Description Scalar indices fortheconnected gridpoints Radius andaxislocation andslotwidth ofconnected gridpoints, i. Density BulkModulus Number ofSlots Harmonic Number 2. ECPT/EST entries fortheSLOT4 arethesame asfortheSL_T3 except four points areused. 4.87-194 (811172)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.16.2 General Calculations fortheSL_TElements I.Theoverall factor forthenumber ofslots is: .F=M,2N=O,M,2M,3M…… (1) M F=,2NtO,M,2M,3M…… (2) TheSL_T4 element iscomposed offouroverlapping triangles. IftheSL_T4 element isused, itsdataisrearranged totheSL_T3 format andthefollowing operations arecarried outfor allfoursubtriangles. Atestismadeonthedirection ofthevector normal tothesurface ofallfourtriangles ifthenumber ofnegative normal vectors (NNEG) isoneorthree, a valid quadrilateral isimpossible andafatal error isset. 4.87.16.3 Stiffness Matrix Generation fortheSL_BT3 Elements I.Foreachtriangle thefollowing terms arecalculated: 2-A=A2–[rl(z2-z3)+r2(z3-zl)+r3(zIz2 (3) 2.Thestiffness matrix terms are: whereF =-/(1,2,3) Fir (rkrj)I(i,j,k) =I_,I,2)‘3\"I) Fiz=(zj zk)(5) Kij=Co[Fij Fir+FizFjz] (6) i=the\"pivot point\" j=1,2,3 4.87-195(8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.16.4 MassMatrix Generation fortheSL_T3Elements I.Thefollowing coefficients aregenerated: 2.A=A2=(r2-rI)(z3-zI)-(r3rI)(z2-zI) (7) where iisthe\"pivot point\" 2.Themassmatrix termsare:=wI+w2+w3+wi FIA2I Co-120B Mij=Co(W+wj) j=1,2,3#i Mij=2Co(G+wj) j=i where iisthe\"pivot point\".(8) 4.87.16.5 Stress Matrix Calculations intheSL_TElements (Phase I) Thevelocities intheSL_Telements arecalculated inthesamemanner asstresses ina structural element. Phase1involves calculating pressure field-velocity matrices ofthefluid passing through theelement. I.Thedataplaced ontheESTBfileare: Id-element identification numbere SILl,SIL2….,SILi-scalar indices [Sv]-matrix relation between pressure andvelocity. 2.The[Sv]matrix fortheCSL_T3 element isafivebythreematrix givenasfollows: 4.87-196 (8/I/72)"},"title":"Programmer's Manual P73"},"/docs/programmers/programmers_manual_074/":{"data":{"":"STRUCTURAL ELEMENTDESCRIPTIONS l__LSvJ:-m z2-z3 z3-zI zl-z2 A A A r3-r2 rl-r3 r2-r1 A A A 1 1 £12 12 1 1 £23 £23 1 0 1 L23 I3:Is;lLse](9) 3.where :v_rjri)2 )2 ij - +(zj zi A:½rl(z2-z3)+r2(z3-Zl)+r3(zl-z2) Thefive rows ofthematrix correspond tothevelocities VrcandVzcatthecentroid inthe randzdirection andVl,V2,V3corresponding tovelocities along thethree edges. TheCSL_T4 element iscomposed offour overlapping triangles. Thevelocity attheinter- section ofthetriangles iscalculated tobetheaverage ofthevelocities ineach sub- triangle. Thesubtriangles I,II,IIIandIVareeach given three ofthefour points l,2, 3,4asinthefollowing chart: Triangle Number Connected Points a b c I l 2 3 II l 2 4 Ill l 3 4 IV 2 3 4 The[S] matrix foreach triangle iscalculated andeach ofthethree columns isinserted in oneofthefour corresponding columns inthe[S] matrix forthequadrilateral. Forinstance thefirst column of[S] fortriangle IVisinserted incolumn 2ofthe[S_] matrix. Rows four through seven ofthe[S_] matrix arerecalculated tocorrespond tothesides ofthe 4.87-197 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS quadrilateral. Theresulting matrix fortheCSL_T4 element is: where[sqv]First2rows:ZEStvI 1 1 PLI2 PC12 1 1 P_23 PC23 1 1 PC34 P_34 1 1 P_41 P_41 :/(rj-ri)2+(zj-zi)2 ij 4.87_16.6 CSL_Ti Element, Phase2 Thedatacalculated aboveareextracted fromtheESTBdatafileandthecorresponding pressures, Pi’areextracted fromtheUGVdatablock. Associated witheachvector isarealor complex number. Thegeneral equation forvelocity intheelement is:(II) where {V} and=2_f co=p w=l.O Isv]l (12) {V} =[Sv]{p i} isthevector ofvelocities intheelement (real) inRigid Format 3({pi}isreal) (real) inRigid Formats 8andII({pi}iscomplex) (complex) inRigid Formats 7andlO({pi}iscomplex) (real) inallother Rigid Formats ({pi}isreal) hasdimensions 7x3or8x4fortheCSL_)T3 andCSLOT4 elements respectively 4.87-198 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.17 Solid Polyhedra Elements, TETRA, WEDGE, HEXAI, HEXA2 These elements define three-dimensional shapes with fourpoints defining atetrahedron (TETRA), sixpoints defining awedge (WEDGE), andeight points defining ahexahedron (HEXAI or HEXA2). Constant strain andstress isassumed ineach tetrahedron. Thewedge andhexahedron elements areautomatically fabricated fromtetrahedron elements. 4.87.17.1 Input DatafortheSolid Polyhedra Elements I. 2. .TheECPTentries forthesolid elements are: S_bol Description Id Element identification number M Material identification number SILi,i=I,N Scalar indices ofconnected gridpoints. N=4,6,or8 CSi’Xi\"Yi\"ZiI Coordinate system identification nu_er and i=l,N } location inbasic coordinates ofconnected gridpoints T Average element temperature Coordinate System Data Thenumbers CSi,Xi,Yi’andZiareusedtocalculate 3x3global-to-basic transforma- tionmatrices [Ti]fortheconnected points. Subroutine TRANSD orTRANSS isused. Material Data Subroutine MATisusedtogenerate thefollowing material coefficients: E G P TOModulus ofelasticity Shear modulus Poisson’s Fatio Massdensity Thermal expansion coefficient Reference temperature 4.87-199 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.17.2 BasicEquations fortheTETRA Element I.Thematrix which transforms generalized displacements togridpointdisplacements is [Hqu]where 2,-IX1Y1Z1- 1X2Y2Z2 [Huq]= (I) 1X3Y3Z3 1X4Y4Z4 matrix isinverted toproduce thematrix [Hqu]=[Huq]-Iandthedeterminant, D,This of[Huq]. Thevalueofthedeterminant ischecked toseeifitisconsistent withthedeterminants oftheothertetrahedra beingusedinasingle element. Thematerial coefficients E,G,andvareusedtogenerate the6x6matrix [G]where thenonzero termsare: E(I-v) (2)GII=G22=G33= (1+v)(1-2v) GI2=G21=GI3= Ev (3) G31=G23=G32=(I+v)(I-2v)’ G44:G55=G66:G. (4) 3.Thefour6x3matrices [Ci]whichtransform displacements atpoints tostrains are generated usingelements oftheHqumatrix: HI1,HI2,etc.Theequation is: 4.87-200 (8/I172)\n4.87.17.3STRUCTURAL ELEMENT DESCRIPTIONS [Ci]:H2i 0 0 0 H3i 0 0 0H4i 0 H4i H3i H3i 0Hli H2i Hli 0(5) Stiffness Matrix Generations fortheTETRAElement (Subroutine KTETRAofModule SMAI) The3x3partition oftheelement stiffness matrix (inglobal coordinates) connecting points iandjis: [Kij] =[TilT [ci]T[G][Cj][Tj] , where [Ti]and[Tj]arethe3x3global-to-basic transformation matrices. Thematrices are produced forpoint jcorresponding tothepivot point inthematrix assembly process. 4.87.17.4 MassMatrix Generation fortheTETRA Element (Subroutine MS,LID ofModule SMA2) Themassmatrix foreachpointofthetetrahedron isformed asa6x6matrix andinserted onthediagonal oftheoverall massmatrix. Itsequation is: Mii\u002614 m14 -0-m/4-0- 0 0 O_(6) where m=I/6pIDI. (Disthedeterminant ofthe[Huq]matrix.) 4.87.17.5 Thermal LoadGeneration fortheTETRA Element (Subroutine TETRA ofModule SSGI) The3xlthermal loadvector {Pi}forpoint iofthetetrahedron is: 4.87-2ni (811172)\nMODULE FUNCTIONAL DESCRIPTIONS {Pi}=[Ti]T[CiIT[G]{Et},(7) where {Et}= (T-TO), (8) andT=I/4(T1+T2+T3+T4)istheaverage temperature ofthefourconnected points, given indatablock GPTT. 4.87.17.6 Stress Calculations fortheTETRAElements (Subroutines SS_LIDI andSS_LID2 of Module SPR2) Thestress iscalculated intwophases. PhaseIisusedtocalculate thetransformation matrices between displacements andtemperatures tostresses. PhaseIIusestheactual displace- mentsandtemperatures tocalculate stresses. I.InPhaseI,thefollowing calculations areperformed: [Si]:[G][Ci][Ti]i=I,2,3,4, where{St}=[G]{}, {}=(9) (lO) (11) 2, InPhaseII,the3x1displacement vector, {ui},foreachpoint, i,isextracted from the{Uq}displacement vector andtheaverage temperature, T,isextracted fromtheGPTT datablock. Thestresses arecalculated asfollows: 4.87-202 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS c_x oZ Tyz T×y]4 :X[si]{ui} i=l-{St}(T-TO). (12) Thehydrostatic pressure, P,andtheoctahedral shear stress, tO,arecalculated by theequations: P=-I/3(ox+_y+Oz), (13) tO=I/3[2ox(_x-oy-Oz)+2Oy(Oy-Oz)+2Oz2+6(Tyz2+Txz2+Txy2)]I/2 (14) 4.87.17.7 Basic Equations fortheWEDGE, HEXAI, andHEXA2 Elements Thewedge element isconnected tosixgridpoints andisdivided intofourtetrahedron sub- elements. Theconnected points assigned toeachtetrahedron are: TETRA Nu_er Connected Points I 1236 II l265 III l456 TheHEXAI andHEXA2 elements areconnected toeight grid points andaresubdivided into five tetrahedra fortheHEXAI element andtenoverlapping tetrahedra fortheHE)CA2 element. Theconnected points original toeach tetrahedron are: 4.87-203 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Subelement Number Connected Points HEXAI HEXA2 I I 1236 II II 1348 III III 1386 IV IV 1568 V V 3678 VI 2347 VII 1245 VIII 2457 IX 2567 X 4578 Thebasicprocedure usedwiththeseelements istoextract thedataassociated witheach tetrahedron subelement andgotothetetrahedron calculations. Insubroutine KS_LID ofModule SMAI,thetetrahedron calculations andmatrix insertion isdonebycalling subroutine KTETRA. Insubroutine MSOLID ofModule SMA2,thetetrahedron calculations andinsertion aredoneinan internal subroutine. Insubroutine S_LIDofModule SSGI,thetetrahedron subroutine STETRA is usedtocalculate andinvert thethermal loads. Insubroutines SS_LIDI andSS_LID2 ofModule SDR2,thetet_ahedron calculations aredonewithaninternal subroutine andtheresults are summed together toproduce average stresses. 4.87.17.8 Stiffness Matrix Calculations andGeometry Checks fortheWEDGE, HEXAI, andHEXA2 Elements (Subroutine KS_LID ofModule SMAI) Withtheseelements, theorderoftheconnections andtheresulting geometry iscritical forreasonable results. Threebasiccriteria mustbemet: I.Iftheconnections arecorrect, thecalculated volumes foralltetrahedron subelements willbeconsistent. Whenthesubroutine iscalled forthefirst timeforeachelement, allofthetetrahedra areprocessed toproduce thesignsofthedeterminants ofthe [Huq]matrices. Thesignsmustbeeither allpositive orallnegative, oranerror isindicated. 4.87-204 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS 2.Theorderoftheconnectedpointsischeckedbycalculating thenormalvectorstothe topandbottomfacesassumingaright-hand rule.Thenormalvectorsmustnothavea negativescalarproduct. 3.Thewedgehasthreequadrilateral facesandthehexagonalelementshavesixquadrilateral faces.Subroutine KPLTSTisusedtocheckthesefaces.Thepointsmustnotdeviate frombeingaplanebymorethanI0percent. Wedge FaceNumber Points onFace 1 1,2,5,4 2 1,4,6,3 3 2,3,6,5 Hexahedron FaceNumber Points onFace 1 1,2,3,4 2 1,2,6,5 3 2,3,7,6 4 3:4,8,7 5 4,l,5,8 6 5,6,7,8 IntheKS_LID subroutine, eachelement istested forgeometric consistency whenthepivot pointequals thefirstconnected point. Inanyevent, theECPTdataisconverted totheTETRA format forasmanytimesasnecessary, andsubroutine KTETRA iscalled eachtime. IfaHEXA2 element isbeing processed, aflagisset,sotheKTETRA subroutine willdivide thestiffness ofeachtetrahedron bytwo. 4.87.17.9 MassMatrix Generation fortheWEDGE, HEXAIandHEXA2Elements (Subroutine MS,LID of Module SMA2) Themasscalculations involve thecalculation ofthetotalmassofeachtetrahedron inthe element andassigning one-fourth ofthemasstoeachofthefourpoints. IfaHEXA2element is used,themassofeachtetrahedron isdivided bytwo. 4.87-205 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.17.10 Thermal LoadGeneration fortheWEDGE, HEXAIandHEXA2Elements (Subroutine SOLIDof Module SSG2) Thissubroutine arranges theECPTdataintotheTETRAformat foreachtetrahedron inthe element. Subroutine TETRAiscalled eachtimetocalculate thethermal loadsandinsert them intheloadvector. IfaHEXA2element isused,aflagisset,sothattheTETRA routine will divide theresults bytwo. 4.87.17.11 Stress DataRecovery fortheWEDGE, HEXAIandHEXA2Elements (Subroutines SSOLIDI and SS_LID2 ofModule SDR2) Thefirstphaseofstress recovery involves thecalculation ofdisplacement-stress matrices [Sie]andthetemperature stress vector {Ste}. connected point. Itsequation is:A6x3[Sie]matrix isgenerated foreach [Sie]=-Z[Si], (15) c_=1 where [Si]_isthematrix corresponding totetrahedron number _associated withpointi,andN isthetotalnumber oftetrahedra intheelement. The[Si]matrices aredescribed inSection 4.87.17.6. Aseachtetrahedron isprocessed, thefour[Si]matrices andtile{St}vector are addedtotheappropriate [Sie]matrices forthewholeelement. TheTETRA element isalsopro- cessed bythiscodewithN=I.Thethermal stress vectors areaddedbytheequation: {Ste} =N {St} (16) (:l InPhase IIofstress recovery, thelogicisgiveninSection 4.87.17.6. Thecodeis identical forallelements, withtheonlydifference beingthenumber ofconnected gridpoints. 4.87-206 (8/I/72)\nSTRUCTURAL ELEMENT DESCRIPTIONS 4.87.17.12 Thermal Analysis Calculations fortheSolid Elements (Subroutine KTETRA of Module SMAI) Allofthesolid elements (TETRA, WEDGE, HEXAI, andHEXA2) usetheKTETRA subroutine to calculate andinsert thefinal matrix terms. Forthermal analysis, thefollowing operations areperformed: I.Thegeometry isprocessed andthematrix [Huq] andthedeterminant, D,areproduced foreither structure orthermal analysis. SeeSection 4.87.17.3. 2.Forthermal analysis, subroutine HMATisusedwith INFLAG =3toproduce thefollowing data: KxxKxyKxzKyyKyzKzz 3.Thematerial matrix [Ge]iscalculated where: M 00 0 0 Kxx Kxy Kxz Kxy Kyy Kz Kxz KvzKzz0 [Ge] = 0 0 4.Thematrix terms associated with thepivot point (j)are: {KjlKj2Kj3Kj4}T D_q}T =_{H [Ge][Huq]- Thevector {H_q} isthecolumn ofthe[Huq] matrix associated withpoint j. 5.Eachscalar termKjiisexpanded toa6x6matrix andinserted. Theterms ineachof thefourmatrix partitions are: [Kij] =Kij10O] 01O[0 ooII oIo 4.87-207(8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.87.18 TheHBDYElements 4.87.18.1 InputDatafortheHBDYElements Theboundary condition element HBDYproduces matrix termsonlyfortheheatconduction option. Thefollowing datawillbeneeded fromtheECPTtable. Symbol IFLAG H AF SILi xi Yi zii=l,NDescription Flagforelement type(Ithrough 5) Thermal convection coefficient Geometric property Scalar indices andlocation inbasic coordinates ofthegridpoints Themeaning ofthedataforvarious values ofIFLAG are: IFLAG 1 2 3 4 5Element Type point line revolution triangle quadrilateralN=Number of GridPointsAF area thickness 4.87.18.2 Stiffness Matrix Calculations (Subroutine HHBDYofModule SMAI) Fortherevolution elements xi\u003e0andYi=O,otherwise thereisillegal geometry. The matrix produced willbeNxN,whichmustbeexpanded toputtermsintothefirstthreedegrees offreedom ateachconnect gridpoint. The[C]matrix foreachelement typeisgiveninthe following table: 4.87-208 (8/I/72)\nSTRUCTURAL ELEMENTDESCRIPTIONS IFLAG ! D 2(a2 H 48 I or whereC H(AF) H(2_)_ F(3Xl+x2) 12 /(x1+x2)(xI+x2) (xI+3x2)- 211 Ha 2-’_I2l !‘I12 +a3+a4) (a3+a4) (a2+a4) 2(a!+a3+a4) (a]+“a4) SYM 2(a]+a2+a4)(a2+a3) (a]+a3) (a]+a2) 2(ai+a2+a3) c…[ -(°+oj ] IJ=4\"8(i+_ij)(a I+a2+a3+a4) i ij i#j Thelength _appears onlywhenN=2: =[(x2-Xl)2+(Y2-Yl)2+(z2-Zl)2] Thefactor aistwicetheareaofatriangle (N=3). Let ÷ I×iri= Yi zil/2 4.87-209 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS a:l(_2-_l)x(_3-_2)I Thefactors aiaretwotimes theareaofthetriangle which doesnottouch vertex iofa quadrilateral. aI=I(_3-_2)x(_4-_3)I a2=r(r4-r3)x(rI-r4)I a3=l(rl-r4)x(r2-rl)I an=I(_2-_l)x(r3-r2)I 4.87.18.3 HBDYElement Thermal Loads (Subroutine HBDYofModule SSGI) When theoption HEATischosen, onlytheHBDYelement will produce thermal loads. When the option isSTRUCT, theHBDYelement produces noloads. Theheatconduction matrix [C]must be Thethermal loads are recomputed, exactly asinSection 4.87.18.2. {P} where thegrid point temperature vector is:[c]{T}, Tl {T}’=• Eachvalue, Pi’goesintothethree translation degrees offreedom corresponding togridpoint i. 4.87-210 (8/I/72)\nDETERMINANTMETHOD OFEIGENVALUEEXTRACTION 4.88 DETERMINANT METHOD OFEIGENVALUE EXTRACTION NASTR_I contains twodoubleprecision versions ofthedeterminantmethod. Oneversion isforthesolution ofrealeigenvalue problems; andoneversion isforthesolution ofcomplex eigenvalue problems. Thespecifications forbothversions arediscussed inthisdocument. Real arithmetic isusedfortherealproblem, complex forthecomplex problem. 4.88.I Fundamentals oftheDeterminant Method Thebasic notion employed inthedeterminant method ofeigenvalue extraction isverysimple. Iftheelements inamatrix [A]arefunctions oftheoperator p,thenthedeterminant of[A]can beexpressed as: D([A]) =(p-p_) (p-p2) …(p-pn), (1) where p,P2’P3\"“Pn aretheeigenvalues ofthematrix. Thevalue ofthedeterminant vanishes forp=Pi’i=1,2,….n. Inthedeterminant method, thedeterminant isevaluated fortrail values ofp,selected according tosomeiterative procedure, andacriteria isestablished todetermine whenD([A]) issufficiently small orwhen pissufficiently close toaneigenvaiue. Theeigenvector is thenfound bysolution oftheequation: [A]{u}–O, (2) with oneoftheelements of{u}settounity. 4.88.2 Evaluation ofDeterminant Themost convenient procedure forevaluatingthedeterminant ofamatrix employs the triangular decomposition ofthematrix: [A]=[L][U]where [L]isalower unittriangle (unit values onthediagonal). Thedeterminant of[A]isequal totheproduct ofthe diagonal terms of[U]. Thematrix [A]maybeexpressed as [A]=-p[M] +[K], (3) forrealeigenvalue problems andas 4.88-I\nMODULEFUNCTIONAL DESCRIPTIONS [A]:p2EM]*pEB]+[K], forcomplex eigenvalue problems. 4.88.3 Iteration Al_orithm (i),D(i) _i) Consider aseries ofdeterminants Dk.2k-l’Devaluated fortrialvalues ofthe eigenvalue p=Pk-2’Pk-l’Pk\"Thenabetterapproximation totheeigenvalue isobtained fromthefollowing calculations: Let Then wherehk=Pk\"Pk-l’ Xk=hk/hk_1, 5k=1+Xk. hk+1=Xk+1hk, Pk+l=Pk+hk+l’ -2D_i)6k Xk+l: +24D_i) L(i) .(i)SkD_i))]I/2’ gk-[gk” SkXk(Uk-2Xk-Uk-I + gkD!i) (i) +D_i) :K-2Xk2-Dk-16k2 (Xk+_k)’ The(+)or(-)signinEquation I0isselected tominimize theabsolute valueofXk+I. InthecasewherePk’Pk-IandPk-2areallaribitrarily selected initial values (starting points), thestarting pointsshould bearranged suchthatIDkl_IDk.iI_IDk.21 andthe(+)or (-)signinEquation I0should beselected tominimize thedistance fromPk+ltoall3 starting points. Inarealeigenvalue analysis itispossible tocalculate acomplex Xk+I.Inorderto(4) (5) (6) (7) (8) (9) (lO) (11) 4.88-2\nDETE_IRANT METHOD OFEIGENVALUE EXTRACTION preclude theuseofcomplex arithmetic inarealeigenvalue analysis problem, onlythe realpartoftheXk+lshould beused toestimate aPk+l’ 4.88.4 Incalculating thedeterminant of[A],thedeterminant isscaled bypowers oflOsince theaccumulated product willrapidly overflow orunderflow thefloating point sizeofa digital computer. Alloperations using thedeterminant arecalculated inscaled arithmetic. 4.88.5 Sweepin 9ofPreviously Extracted Eiqenvalues Onceaneigenvalue hasbeenfound tosatisfactory accuracy, areturn tothateigenvalue bytheiteration algorithm canbeprevented bydividing thedeterminant bythefactor (p-pi’) where Pi’istheaccepted approximation topinallsubsequent calculations. Thus: D(1)([A]): D([A]) P-PI’ should beusedinplace ofD([A]) after thefirst eigenvalue hasbeen found. reduced determinant usedforfinding thei+lsteigenvalue is: D(i-l)([A]) D(EA])D(i)([A]) == (p-pi’) (p-pl ‘)(p-p2’)—(p-pi ‘)(12) Ingeneral, the (13) This sweeping procedure isquite satisfactory provided thatallPi’havebeen calculated toan accuracy thatislimited onlybyround-off error. Forproblems inwhich zeroisaneigenvalue, thenumber ofsucheigenvalues isspecified bytheuser. Inusing thedeterminant method, zeroeigenvalues should beeliminated fromthe determinant byapreliminary operation, D(o)([A]) =D([A]) , (14) m P where misthemultiplicity ofthezeroeigenvalue. 4.88-3\nMODULE FUNCTIONAL DESCRIPTIONS Forproblems wit}_conjugate complex eigenvalues (complex eigenvalue analysis withreal matrices) theconjugates ofextracted eigenvalues should alsobesweptfromthedeterminant. Thus D(i)([A]) =D(i_l)([a]) , (15) (P-pi’)(p-_i’) wherePi’istheconjugate ofPi’Itshould benotedthatthesweeping equations arein- determinant forp=Pi’Thissituation willoccurwhenarootcoincides withastarting pointoranewestimate witharootalready extracted. Whenthefirstsituation occurs, the starting pointshould bemovedawayfro[_theroot. Whenthesecond situation occurs, Dk+1 should besetequaltoDk. 4.88.6 Convergence Criteria Convergence criteria arebasedonsuccessive values oftheincrement hkintheestimated eigenvalue. Notestsonthemagnitude ofthedeterminant oranyofthediagonal termsofthe triangular decomposition arenecessary ordesirable. Wilkinson (1)showsthatforhksufficiently small, themagnitude ofhkisapproximately squared foreachsuccessive iteration whenusing Muller’s method. Thisisanextremely rapidrateofconvergence. Inaveryfewiterations the\"zoneofindeterminacy” isreached within whichhkremains smallbutexhibits random behavior duetoround-off error. Wilkinson states thatifitisdesired tocalculate the roottothegreatest possible precision, theconvergence criterion foraccepting Pkasaroot should be: lhk+ll \u003elhkl. (16) Thedeterminant method accepts thisadvice, tempered bypractical considerations. Thefirst oftheseisthatEquation 16maybefalsely satisfied during thefirstfewiterations while the roottracking algorithm ispicking upthe\"scent\". Thusitmust, inaddition, berequired that lhkl,lhk.iIand lhk_21 bereasonably small, Thesecond practical consideration isthatwemay waste afewiterations within thezoneofindeterminacy whilewaiting forEquation 16tobc satisfiec. Thisisavoided byaccepting Pkiflhklissufficiently small. Finally, ifthe number ofiterations becomes excessively largewithout satisfying aconvergence criterion, theDeterminar_t Kethod assumes theexistence ofor_eiteration loop,givesupandproceeds to 4.88-4\nDETERMINANT METHOD OFEIGENVALUE EXTRACTION anewsetofstarting points. Figure lisaflowdiagram ofasetoftests which meet therequirements discussed above forrealeigenvalue problems. which aredefined as:Thetests arebased oncalculated values ofHI,H2,andH–3 HI=lhk-111 ‘‘T’PKI’ (17) H2=lhkll‘IPkl, H3=lhk+111 “IPkl, where Pk=kthestimate ofaneigenvalue andhk:Pk-Pk-l” Asimilar setoftests isdescribed inFigure 2forcomplex eigenvalue problen. thiscaseHI,H2andH3aredefined as:In(18) (lg) _l=lhk_ll, (20) _2=lhkl, (21) _3=lhk+ll. (22) Themagnitude oftheconvergence criterion _should beselected asacompromise between running timeandaccuracy. Currently E=!0-11.Iffailure occurs because thenumber of iterations exceeds theiteration limit, NIT,fortwosuccessive setsofstarting points, isincreased byafactor oflO.Ifsuccessive pairs offailures still occur, _isagain in- creased until thenumber ofpermissible changes in_isexceeded. Theuserisinformed ofthe reduced precision ofthecalculations. Since eigenvalues areswept outafter theyarefound, allsetsofstarting points will eventually leadtofailure bythepreliminary range checks orthrough successive iteration failure. When thisoccurs itispresumed thatalleigenvalues within therange ofinterest have beenfound andthecalculations arehalted. Ifforsome reason thisdoesnotoccurthe calculation must still behalted. Theoneremaining avenue forthecomputer tocontinue calculations indefinitely isifitcontinues tofind roots. Toblock thisavenue, thecalcula- 4.88-5\nMODUI.EFUNCTIONAL DESCRIPTIONS tionsarestoppedifthenumberofrootsfoundexceedsthemaximumnumberofNEVM.Asa safeguardtheorderinwhichtherootsarefoundisindicatedtotheuser. 4.88.7Extraction ofEiqenvectors Once anapproximate eigenvalue pjhasbeenaccepted, theeigenvector isdetermined by backsubstitution intothepreviously computed triangular decomposition of[A(pj)]. Nowsince [A(pj)]{u} =[L(pj)][U(pj)]{u} :O, (23) wework onlywith[U(pj)]. Because partial pivoting (rowinterchanges) havebeen used, thelast diagonal termin[U(pj)] will normally betheonlytermwith averysmall value. Thenormal appearance of[U(pj)] isasfollows, forn=7: X X X 0 X X X X X X X X X 0 Xo 0 0 x 0 X X X X X x={0}.(24) Theterms intheupper right corner arezeroduetobandwidth. 6isaverysmall number. The eigenvector maybeextracted byassigning anarbitrary value (such asl.O) tou7andsolving successively foru6,u5etc., from thepreceeding rows. Note thatthis isequivalent to placing aloadvector {F}ontheright-hand sidethatisnull except forthelasttermwhich issetequal to6. Situations mayoccur inwhich Unnisnotthesmallest diagonal term. LetUiibethe smallest diagonal termwith i\u003cn.Themost common reason forthisoccurrence isthatthe degrees offreedom Ui+l, ui+2….. unare,forsomereason, uncoupled tothepreceeding degrees offreedom. Inthiscasealloftheelements intheiTMrowof[U(pj)] will beverysmall asshown fori=4,n=7: 4.88-6"},"title":"Programmer's Manual P74"},"/docs/programmers/programmers_manual_075/":{"data":{"":"DETERMINANT METHOD OFEIGENVALUE EXTRACTION X X X 0 0 0 X X X 0 0 X X X X 0 0 X X X X X X:{0}. (25) Intheevent ofmultiple orpathologically close eigenvalues twoormore rowsof[U(pj)] will consist ofverysmall values, exhibited below fortheveryexceptional casewhere thenth rowisnotverysmall: X X X X X XX0 XX XX 6..6.s X0 0 0 0 X 0 6_6 4 X X 66 161ultu2 u3 iu5 u6 u7:{0}. (26) Inorder toaccommodate theexceptional cases described above with themore general case of6=Unn,afullloadvector {F}isusedfortheeigenvector calculations. Theloadvector will also contain elements ofthesame order ofmagnitude asthesmallest diagonal element of thetriangularized matrix [U(pj)] inorder toprevent digital overflow when theeigenvector iscalculated. Inaddition, adistinct loadvector isformed foreacheigenvalue toensure that independent eigenvectors arecalculated formultiple orpathologically close eigenvalue problems. Thefollowing equations areusedfor{F}. Forrealeiaenvalues, wehave Fi= 6(-I)ij l+(I-)j;(27) 4.88-7\nMODULE FUNCTIONAL DESCRIPTIONS Forcomplex eigenvalues, Re(Fi) :]61(-l)ij 1.0+(l.O-_)j, (28) Im(Fi):0.0, (29) where _=smallest Uii,j:eigenvalue count, i=ithelement of{F}andn=number ofrows. There isapossibility thatthesmallest diagonal element of[U]maybeexactly zero for someeigenvalue. Thiswill bethecasewhen theaccepted eigenvalue (pj)isexactly equal toaneigenvalue oftheproblem. When thisoccurs, 6=l.OxlO-8.Thecalculated eigenvectors arenormalized toaunitmaximum realelement value. REFERENCE I.Wilkinson, J.H., “TheAlgebraic Eigenvalue Problem”, Clarendon Press, Oxford, 1965. 4.88-8\nUETEI_.;I!?‘ANT IETHODOFEIGENVALUFEXTRACTION Begin Convergence Tests [This testforces theroutine] /4_tocomplete twoiterations J / IsK\u003e2?___ Continue K=K+1—IterationsJ Yes 2x104 ?No;IK=K+I Yes ;eje_teSrt_Tt_nga;:nt E=lOc IC=IC+l c-Convergence Criterion K-Iteration Counter IC-Criterion Change CounterR1:lhk.ll//IPkl R2=Ihkl/I,/-/_kl =lhk+11,/]Pkl Figure I.Realeigenvalue problems convergence tests 4.88-9\nMODULE FUNCTIONAL DESCRIPTIONS Begih Convergence Tests) _// This test forces theroutine] “Lto complete twoiterations ] …. on ,nue K =K+I”–Iterations) Is No H2-\u003c104_Rmax • ? Yes H3\u003eH2YesK=K+I KNContinue “ Iterations/ Yes Is H2\u003cI0_Rmax ? Aaccept P nYes ,eptPkas DidLast anEigenvalue Starting Point SetHave an No Failure andis IC\u003cil Reject Starting Point- SetIteration Failure j/=IOG IC=IC+l _-Convergence Criterion Ill:lhk.ll K-Iteration Counter Fi2=[hk] IC-Criterion Change Counter H3=lhk+11 Figure 2.Complex eigenvalue problems convergence tests 4.88-I0\nEXECUTIVE PREFACE MODULE IFP4(INPUTFILEPROCESSOR -PHASE4) 4.89EXECUTIVE PREFACE M_DULE IFP4(INPUTFILEPROCESSOR -PHASE4) 4.89.1 EntrXPoint: IFP4 4.89.2 I.Pu__r_pose Toconvert thedatacardimages related tofluid andhydroelastic analysis intoconven- tional datacard images asoutput fromtheIFPmodule. 2.Tocalculate datarelated totheboundaries andtheharmonic degrees offreedom ofthe axisymmetric fluid andappend thisdatatotheMATP_L datablock. 4.89.3 Calling Sequence CALL IFP4. IFP4, anExecutive Preface Module, iscalled onlybythePreface driver SEMINT. 4.89.4 Input DataBlocks AXIC -BulkDataDeckcards related tothehydroelastic problem asoutput fromIFP. GE_MI -GridPoint andCoordinate System Data. GERM2 -Scalar Point andElement Connection Data. GE_ Constraint n_ – UQ_a. MATPB_L -Direct InputMatrix Data. 4.89.5 Output DataBlocks Same astheInput DataBlocks. 4.89.6 Parameters Notapplicable toIFP4. 4.89.7 Method IFP4allocates theavailable coreasitproceeds. Eachtypeofdatacard image ontheAXlC datablock isreadandusedtoformtables ornewdatacard images. Thenewdataandanyexisting dataontheInput datablocks aremerged andwritten ononeoftwoscratch files. After the scratch filedataarecomplete thedataarethencopied backontheInput/Output datafiles. (This isnotnormally allowed. Thepreface modules, however, have theprivilege ofwriting onaninput file.) 4.89-I (ll/I/70)\nEXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4) Datacardsasreferenced belowrefertocardimages asfoundontheAXICinputdatablock. Theactual datacardsarereadandfirstprocessed bytheIFP.Thefluiddatacardtypesfound ontheAXlCdatablock, andusedbyIFP4,arelisted belowalongwithalistoftheoutput card images produced asaresult oftheirpresence, andthedatablocks effected. IFP4Input IFP4Output DataBlock CardImage CardImage Effected AXlF none allbelow BDYLIST data MATP_OL CFLUID2 CFLUID2 GEOM2 CFLUID3 CFLUID3 GEOM2 CFLUID4 CFLUID4 GEBM2 DMIAX DMIG MATPO_L FLSYM data(header) MATPOBL FREEPT SPOINT GERM2 MPC GERM4 FSLIST CMFREE GERM2 SPC GEOM4 GRIDB GRID GEOMI PRESPT SP_INT GEOM2 MPC GEOM4 RINGFL GRID GEOMI SEQGP GEOMI Itshould benotedthattheoutput cardimages maybeafunction ofseveral typesofinput cardimages asdetailed inthefollowing. 4.89.7.1 Datavalues foundontheAXIFcardarefirststored incoreforsubsequent use.They are: I. 2. 3. 4. 5.CSf,thecoordinate system number forthefluidsystem g,thevalueofgravity Pd’thedefault valueoffluiddensity Bd,thedefault valueofthecompression coefficient NOSYM, aninteger 0or1indicating whether theunsymmetric (*series) termsareusedin thecomputations. 4.89-2 (lllll70)\nMODULE FUNCTIONAL DESCRIPTIONS 6.Alistofharmonic numbers nj,j=1,2…..J,indicating theharmonics tobeformulated. Ifnonearesupplied bytheuser, itisimplied thatthefluid isnottobesolved, how- ever theprocessing oftheboundary points (GRIDB) maybenecessary asdiscussed later. Thelistofharmonic numbers (nj)areconverted toanincore listofindex numbers (lj)as follows. IfN_SYM=O, implying onlythesymmetric series: lj=2nj+2, nj_0 forj:1toJ. IfN_SYM=I, implying thesymmetric andunsymmetric (*)series: Ij=2nj+2, nj\u003e0, forj=ltoJ,plustheadditional indices: forj=1toJ.(I) (2) lj=2nj+l, nj\u003e0, (3) Thelistofindices asformed above issorted andheldincore forsubsequent use. The complete listofindices maythusbeupto2Jinlength. Henceforth thenumber ofindices inthe list isreferred toasN. GE_MI DataBlock Processing TheGE_MI file isreadandthecoordinate system asspecified byCSfislocated among the C_RDIC, C_RD2C, C_RDIS, orC_RD2S cardimages. Itstype (cylindrical orspherlcal) i_ saved asaflagforuseinlater processing. Ifthecoordinate system isnotlocated among theabove cardtypes afatal error isindicated totheuserandacylindrical type isassumed topermit further checking ofdata. GRIDB cardimages arereadandstored incore, 5words perimage. AGRIDB cardimage defines anormal gridpoint except thatit’slocation isfixed toafluid (RINGFL) point. IfanyGRIDB cardimages arepresent IFP4atthistimeforms aboundary listtable in core.. . 4.89-3 (ll/1/70)\n4. 5.EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4) Foreachfluidpoint, IDFj,contained inaBDYLIST cardimage, asevenwordentry is placed intheboundary listtable. Thecontents ofthisentry are,usingdatafromthe BDYLIST cardimage: I.IDF. J 2.1I3.1 4.1 5.IDFj_1 6.IDFj+1 7.obInteger l’s(temporary flags) wherejindicates therespective IDFintheBDYLIST listofIDFs. IfIDFj_1orIDFj+1doesnotexistazero(0)isentered. IfIDFj_1orIDFj+1isdesignated tobeAXISthenaminusone(-I)isentered. Should Pbasspecified intheBDYLIST cardimagebemissing, thedefault Pd’asspecified ontheAXIFcardimage, isusedforposition 7oftheentry. Ifbotharemissing, auser fatalerrorresults. Missing isdenoted byaninteger -I. AfterallBDYLIST cardimages havebeenprocessed andtheentries addedtotheboundary listtable, asortisperformed suchthattheentries areinsortbytheprimary IDF (found inthefirstposition ofeachentry). Aninitial “pass” ofRINGFL cardimages isnowmade. Themeridinal angles (x2fora cylindrical coordinate system orx3foraspherical system) mustbezeroandarechecked. Abinary search isperformed tofindoneormoreentries whose primary IDFmatches the IDFofeachRINGFL cardimage. Whenfoundthevalues XI,X2,andX3oftherespective images replace thethreeinteger onesinposition 2,3,and4ofthatentry. Ifan entry isnotfound, auserfatalerror isindicated. IfafterallRINGFL cardimages havebeenhassed, anyoftheentries intheboundary list table (residing incore)stillcontain thethreeinteger onesinpositions 2,3,and4, auserfatalerrormessage isindicated forthose particular BDYLIST identification numbers (IDFjs). 4.89-4 (11/I/70)\n6. 7.MODULE FUNCTIONAL DESCRIPTIONS Atthis timeanormal GRIDcardimage iscreated fromeach GRIDB image andmerged along with existing GRIDcardimages onGE_MI. Additional GRIDcardimages will beadded to GE_MI insubsequent manipulations. Foreach GRIDB cardimage nowresiding incore (note 4.89.7.2-2) anormal GRIDcardis created andconsists ofthefollowing eight values. Field SS_vmbol l ID g 2 CS_ 3-5 xI,x2,x3 6 CSd 7 PS 8 0Description IDgiven onGRIDB image. CSffromtheAXIFimage. These values areformulated byfinding Xl,X2,X3in theboundary listtable entry whose primary identifica- tionnumber matches thereference identification number (IDF) given ontheGRIDB card image, andthen: xI=Xl x2=@ifCSfiscylindrical, orX2ifCSf x3=X3ifCSfiscylindrical, or@ifCSf Where @issupplied bytheGRIDB cardimage. CDfromtheGRIDB image. PSfromtheGRIDB image. Notused.isspherical. isspherical. Theresulting GRIDdatacardimages aremerged withtheexisting GRIDcards ondatablocks GEBMI. Ifnoharmonics exist forthefluid, themodule processing iscomplete. Togenerate thenonsymmetric connection tables fortheboundary, theboundary listtable isfurther altered atthistimetoresult inatable listing thegeometry andrelated gridpoints foreach boundary fluid point. a.Foreach fluid point entry nowintheboundary listtable thevalues Xl,X2,andX3 areconverted torandzvalues which arestored respectively inplace ofXlandX2. IfCSfiscylindrical then: 4.89-5 (ll/I/70)\nEXECUTIVE PREFACE MODULE IFP4(INPUTFILEPROCESSOR -PHASE4) r=Xl z:X3 X2mustbezero.(4) IfCSfisspherical then: r=Xlsin(l-O X2) =cos( i X3mustbezero.(5) b° Foreachsetofthreefluidpointidentification numbers (position I,5,and6of eachentry), thethreepairsofcoordinates areextracted. Theprimary values rjand zjaregivenwitheachentry. Thesecondary values rj_I,zj_I,rj+I,zj+1mustbe foundbyfinding theentries whichhavethesameprimary identification number asthe secondary identification numbers (IDFj_1orIDFj+I)inquestion. If\"axis” (-I)isa secondary identification number, then: raxis Zaxis=0 =Z. J(6) If\"notavailable\" (0)isasecondary identification number, then: r:rj z:zj(7) Thevalues,c,andsarecalculated andreplace the4th,5thand6thwordofeach entryintheboundary pointlistatthistimesuchthateachentrywillnowcontain: 4.89-6 (11/I/70)\nC. d°MODULE FUNCTIONAL DESCRIPTIONS Field S_bol l IDFj 2 r. J 3 z. J 4 5 c 6 s 7 PbDescription Fluid point identification Radial location Vertical location Length andassociated angle components ofa conical section Fluid density where: =/Ar2+Az2 (8) c-Az (9) ArS- (10) +1 and: Ar=l{rj+ lrj_l[(rj+l -rj)2 -(rj_l -rj)2]} (ll) ,z , I AZ:{j-l-Zj+l +4Tj[(rj+l -rj)(zj -Zj+l) -(rj-rj_l)(Zj l-zj)] 2) This list, nowreferred toasthe\"boundary point geometry table\", remains incore. Thevalues _,s,andccorrespond tothecross section length, andthesine and cosine oftheangle _basgiven inEquation 14,Section 16.1.5 oftheTheoretical Manual. Asanynumber ofGRIDB points maybeconnected toafluid point, theGRIDB card images arenowsorted onthereferenced fluid point identification (the fifth word ofeach GRIDB entry). Foreach setofGRIDB points with thesame referenced fluid point the sort isfurther made ontheangle (¢). Theboundary point geometry table, generated above, isused atthis time toform the boundary matrix part oftheMATP_L data block. Foreach entry inthetable, all GRIDB points which reference itareappended toform anewentry ofthefollowing form. 4.89-7 (ll/I/70)\nEXECUTIVE PREFACE MODULE IFP4(INPUTFILEPROCESSOR -PHASE4) Field Symbol 1 Idf 2-7 r,z,_,c,s,Pb 8 Idg(1) 9 ¢lDescription Fluid point identification Fluid point properties GRIDB identification Angular position ofGRIDB point 8.6+2M Idg(M) 7+2M _M 8+2M -I 9+2M -lGRIDB identification Angular position ofGRIDB point Endofentry flags where Mequals thenumber ofGRIDB points that reference Idf. Eachnewboundary fluid point entry isthenplaced intheMATPO_L data block. Thelistofharmonic indices nj,thegravity G,theNOSYM flag, thefluid coordinate system CSf,andthesymmetric boundary information (from theFLSYM cardimage) areplaced inthefirst record of theboundary listdata intheMATP_L datablock. IfDMIGdatacardimages resulting fromDMIAX datacards arepresent ontheI_tATPOOL datablock, theyaremerged tothe existing DMIGcard image data. Matrix names arechecked foruniqueness. TheRINGFL datacards define aring (fluid point) withitsaxiscoincidental with the axisofthefluid coordinate system. Itsdegrees offreedom aretheharmonics ofthe pressure around thecircle. Special GRID point card images corresponding totheRINGFL datacards aregenerated atthistimeandadded totheGRID cardimages nowonGEOMI. EachRINGFL cardimage isreadandNGRIDcardimages arecreated containing thefollowing data. 4.89-8 (ll/I/70)\nMODULEFUNCTIONAL DESCRIPTIONS Field Value lIdf+5-I05-(Ii) 2 CSf 3-5 Xl,X2,X3 6 -1 7 0 8 0DesCription Point identification Fluid coordinate system number Location coordinates Fluid point flag PermanentSingle pointconstraints Notused where igoesfromltoNforeachRINGFL cardimage read. SEQGP cardimages arecreated foreachRINGFL cardimage andmerged with SEQGP cards on GE_MI. Thecontents oftheentry are: Field Value l Idf+5-I05-(Ii ) 2 Idf-lO3+(Ii-1) where igoesfrom1toNforeachRINGFL data cardimage.Description Grid identification Sequence number GEgM2 DataBlock Processing Thefluid element connections asspecified bytheCFLUID2, CFLUID3, andCFLUID4 card images arenowoperated upon. Eachinput cardimage isusedtogether withtheharmonic indices todefine N\"structural elements\". Thedatagiven bytheinput cardimage is: Field Value l Ide 2thruj+l Idj j+2 p j+3 BDescription Element identification number Where j=2,3,or4fluid point connections Fluid density Fluid bulkmodulus Foreach input cardimage, connection cardimages arecreated forallharmonics inthe problem. Their format is: 4.89-9 (II/I/70)\n2.EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4) Field Value 1 Ide-103 +Ii 2thruj+l Idj+5-105(I i) j+2 p j+3 B j+4 nDescription Converted element identification Wherej=2,3,or4connected fluidpoints Fluiddensity Fluidbulkmodulus Harmonic number wherei=I,2….. Nandnisaninteger suchthat, Ii-3 Ii1\u003cn\u003c (13) 2 2 Theharmonic element connection cardimages aremerged intotheGERM2datablockasthey aregenerated. FSLIST cardimages eachdefine asequential listoffluid (RINGFL) points onafree surface. TheFREEPT cardimages inputtoIFP4eachdefine apointonthefreesurface whereadisplacement maybeoutput. Thefollowing operations arearesult ofFSLIST and FREEPT cardimages data. Foreachfluidpoint (IDFj) defined inaFSLIST cardimage, athreewordentryisplaced incorecontaining IDFj,IDFj+I,andp.Thesubscript jindicates therespective IDFin theFSLIST cardimagelistofIDFs. ifIDFjorIDFj+1isrepresented by\"AXIS\" inthe FSLIST cardimage, aminusone(-I)isused. IfIDFjisthelastpointinthelist, IDFj+1issetto-2.Ifthefluiddensity (p)isnotpresent (aninteger -I)inthe FSLIST cardimage, thedefault fluiddensity (pd)fromtheAXIFimageisused. Ifbothp andPdaremissing auserfatalerror results. Asetofstructural masselements aregeneratea foreachoftheentries justaddedto core. Eachsetrepresents allharmonics intheproblem. Connection cardimages called CMFREE elements arecreated suchthateachelement consists ofthefollowing: 4.89-10 (11/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS Field _ Description l Id Element Id=106k+Ii 2 IdgI IDFk,l +5.105 Ii 3 Idg2 IDFk,2+5.105 li 4 Yj (ptimes G)theweight density, where G gravity fromAXIF image 5 n Integer harmonic number suchthat; Ii-3 Ii-l —T– \u003cn\u003c–_– where Iirepresents theithentry intheharmoric index list, andkistheindex ofthe entry intheFSLIST table ofentries. IfIDFk,l=-l,IDFk,lissettoIDFk,2.If IDFk,2=-l,thenIDFk,2issettoIDFk,I.Bothcannotbe-linitially. Thus foreach entry, k=lthruK(thetotal number ofentries), CMFREE images arecreated forall harmonic indices (Ii),i=lthruN.These CMFREE element entries aremerged intothe GERM2 datablock aswere theCFLUID2, CFLUID3, andCFLUID4 cardimages. GERM4 DataBlock Processing IfFREEPT (free surface displacement point) card images arepresent, andgravity as specified intheAXIF cardimage isnonzero, amultipoint constraint (MPC) isgenerated atthistimealong with ascalar point (SP_INT) having thesameidentification number (Idp) asspecified byeach FREEPT cardimage. Aseach FREEPT cardisreadanSP_INTcard image isplaced incoreandthefollowing MPCcardimage ismerged intotheMPCdataof GERM4: 4.89-II (IIII170)\nRepeatsfori:ltoNEXECUTIVEPREFACEMODULEIFP4(INPUTFILEPROCESSOR-PHASE4) FieldSymbol Value l SID I02 2 GID Id P 3 Comp 0 4 A1 -IpGI 2+3i GIDi Idf+5-105(Ii) 3+3i Comp 0 4+3i Ai+1 CiDescription Setidentification number FREEPT identification number Component Density times gravity Fluid point harmonic identification Component Harmonic coefficient 5+3N Flag -I 6+3N Flag -I 7+3N Flag -IEndofmageflag Iiisaharmonic index, andnequals aninteger suchthat; Ii-3 Ii1 T \u003cn_\u003cT ’ (14) then: Ci=cosine _-0 ifIiiseven, Ci=sine ifIiisodd,(15) where: @istheangle given intheFREEPT cardimage. 2,Additional MPCcard images arecreated ifPRESPT cardimages arepresent. Foreach PRESPT cardimage read, anSP_INT isadded tothein-core listofSPOINTs, andthefollow- ingMPCcardimage ismerged ontoGEBM4. 4.89-12 (IIII170)\nMODULEFUNCTIONAL DESCRIPTIONS Repeatfori=ltoNField Symbol Value l SID I02 2 GID Id P 3 Comp 0 4 Al -I.0 2+3i GIDi Idf+5.105(li ) 3+3i Comp 0 4+3i Ai+1 CiDescription Setidentification PRESPT identification Component Coefficient Connected fluid harmonic identification Component Harnonic coefficient 5+3N Flag -l 6+3N Flag -l 7+3N Flag -lEndofimage Nag Iiisaharmonic index, andnequals aninteger suchthat, I.-3 I=-l l , (16)T \u003cn_–‘2- n_¢ ifI.iseven.Ci:cosine 180 1 Ci=sinei-6 ifIiisodd. istheangle given inthePRESPT card image.(17) 3.IfanySP_INTs were placed incoreasaresult ofthepresence ofFREEPT orPRESPT card data, theyaremerged with theexisting scalar point dataonascratch file. 4,Atthistime, ifanyharmonics arespecified, anMPCADD cardimage isgenerated foreach unique setidentification present intheMPCanIMPCADD cardimages onGERM4. This MPCADD card image willthencontain thein:ern,l setidentification andinclude theuser setidentification. Thus astheMPCand)\u003eCADD card images arereadfromGE@M4, alistof thesetidentifications present iscreated incore. AnMPCADD cardisthengenerated for 4.89-I 3(ll/I/70)\n5,EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE4) eachunique setidentification (Id)present. Field Value 1 2\"108+Id 2 Id 3* 102 3or4* -IItsformat is: Description Internal setidentification Usersetidentification Generated MPCsetidentification Endofimageflag IfanyMPCADD cardimages arepresent onGERM4, asaresult oftheuser’s specifications, theirsetidentification (Id)infieldoneismodified toaninternal setidentification (2-108 +Id),andifanyMPCcardimages havebeeninternally generated forset102,the 102setidentification isaddedtothelistofincluded setidentifications therein. IfanyMPCcardimages havebeencreated forset102,thefollowing MPCADD cardisgener- atedinanyevent soastoassure thatthe102setbeincluded inthesolution. Theset identification usedhere(2\"108), willbereferenced inlatercomputations iftheuser hasnotreferenced anyMPCconstraint set. Field Value 1 2\"I08 2 102 3 -IDescription Setidentification Generated MPCsettobeincluded Endofimageflag Should theuserspecify gravity Gtobezero(0)ontheAXIFcard,itisassumed thatthe effects ofgravity onthefreesurface aretoberemoved. Toaccomplish this,asingle pointconstraint (SPCset102)setiscreated atthistimebyIFP4. ForeachfluidpointIdfnotequaltominusone(-I)orminus two(-2)inthefree surface list,anSPClcardimageismerged ontoGERM4containing theconstraint informa- tionforallharmonics ofthispoint. Itsformat isthefollowing: *Setidentification 102isinserted onlyifanyMPCcardimages havebeengenerated forset 102.IfId=102auserfatalerrorisindicated. 4.89-14 (11/I/70)\nMODULE FUNCTIONAL DESCRIPTIONS Field Value l I02 2 0 2+I Idf+5\"I05 IiDescription Setidentification Component tobeconstrained Point tobeconstrained 2+iIdf+5\"I05 Ii Point tobeconstrained 6. 4.89.8 4.89.8.1 I. 2. 3. 4.89.8.2 I. 2.2+N Idf+5\"I05 IN Point tobeconstrained 3+N -l Endofimage flag Iiistheithentry inthelistofharmonic indices. Analogous operations tothose described inparagraph (4)ofthissection areperformed at thistime forexisting SPC, SPCIandSPCADD cardimages. Thedata ismerged ontoa scratch fileandwhen complete, thescratch fileismerged ontotheGERM4 data block. Subroutines Subroutine Name: IFP4A Entry Point: IFP4A Purpose: Towrite thefirst lineoftheuserfatal error messages. Calling Sequence: CALL IFP4A(NUM) NUM-Message number minus 4030. Subroutine Name: IFP4B Entry Point: IFP4B Purpose :Tocopydata fromIFPdatafiles uptoandincluding agiven record onto a scratch file. Onoption thedataonthescratch filemaybecopied onto theoriginal datablock. 4.89-15 (fill/70)\n3. 4.89.8.3 I. 2. 3. 4.89.8.4 I. 2.EXECUTIVE PREFACE MODULE IFP4(INPUT FILEPROCESSOR -PHASE 4) Calling Sequence: CALL IFP4B(FILE,SCRT,ANY,SPACE,LSPACE,RECID,EOF) where: FILE SCRT ANY SPACE LSPACE RECID-FileNumber -Scratch FileNumber -Flag=.TRUE. ifRECID isfound onFILE, =.FALSE. ifrecord ismissing -Areaofcoreforworking space Length ofworking space Record Number ofFILEwhere thecopyprocess stops. If-lis usedthecopyprocess proceeds totheendofFILEandthedata onSCRTiscopied backontoFILE. Flag=.TRUE. ifendofrecord isencountered onreturn. EBF - Subroutine Name: IFP4C Entry Point: IFP4C Purpose: ToopenanIFPgenerated fileandascratch fileandtocopy theheader record fromtheIFPfileonto thescratch file. Calling Sequence: CALL IFP4C(FILE,SCRT,BUFI,BUF2,EBF) where: FILE Filenumber SCRT -Scratch filenumber BUFI -Buffer areaincoreforreading FILE BUF2 -Buffer areaincoreforwriting SCRT EOF -Flag=.TRUE. ifFILE isnull Subroutine Name: IFP4E Entry Point: IFP4E Purpose: Tocheck identification numbers offluid points forpossible difficulties with large numbers. 4.89-16 (II/I/70)"},"title":"Programmer's Manual P75"},"/docs/programmers/programmers_manual_076/":{"data":{"":"3. 4.89.8.5 I. 2. 3. 4.89.8.6 I. 2. 3.Calling Sequence: where:MODULE FUNCTIONAL DESCRIPTIONS CALLIFP4E(ID) ID-Identification number Subroutine Name: IFP4F Entry Point: IFP4F Purpose: Totestifabitinatrailer record wordisonoroff. Calling Sequence: CALLIFP4F(IBIT,FILE,BIT) where: IBIT-Position ofbitintrailer FILE-Filenumber BIT-Flag=.TRUE. ifbitison =.FALSE. ifbitisoff Subroutine Name: IFP4G Entry Point: IFP4G Purpose: Toturnonabit_natrailer record. Calling Sequence: CALLIFP4F(IBIT,FILE) where: IBIT-Position ofbitintrailer FILE-Filenumber 4.89-17 (ll/I/70)\n4.90 4.90.I 4.90.2FUNCTIONAL MODULEBMG(BOUNDARYMATRIXGENERATORFORHYDROELASTIC PROBLEMS) FUNCTIONAL MODULEBMG(BOUNDARYMATRIXGENERATORFORHYDROELASTIC PROBLEMS) Entry Point: BMG Purpose TheMATPOOL datablock maycontain datarelated tofluid boundaries which isgenerated bythe IFP4preface module. Thepurpose ofthismodule istocombine these datawith thegeometry data (EQEXIN, BGPDT, andCSTMdata blocks) toproduce matrix terms which describe fluid-structure con- nection forces. These matrix terms areproduced intheformofinternal DMIGdatacardimages. module MTRXIN mustalways beusedinconjunction withmodule BMGtoproduce NASTRAN matrices. 4.90.3 DMAPCallin 9Sequence BMG MATPOOL,BGPDT,EQEXIN,CSTM /BDPO_L /V,N,NOKBFL /V,N,NOABFL /V,N,MFACT $ 4.90.4 Input DataBlocks MATPOOL -Direct Input Matrices andHydroelastic Boundary data. BGPDT -Basic GridPoint Definition Table. EQEXIN -Equivalence between External andInternal Grid Point numbers. CSTM -Coordinate System Transformation Matrices. 4.90.5 Output DataBlocks BDPOOL -Boundary Matrices ABFLandKBFLinDMIGFormat. 4.90.6 Parameters NOKBFL -Existence ofKBFLMatrix Data=O, NoKBFLData=-l,output parameter. NOABFL -Existence ofABFLMatrix Data=O, NoABFLData=-l,output parameter. MFACT Complex Factor forSymmetric Structures, output parameter. 4.90.7 Method Thefluid boundary data, contained intheMATPOOL data block, isgrouped bythefluid points ontheboundary. Foreach fluid point thegeometric parameters ofthesurface andthepositions oftheassociated gridpoints arelisted. Theinput datareadforeach fluid point areoperated 4.90-I (8/I/72)The\nFUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC PROBLEMS) ontoproduce matrix terms. Theoutput matrix dataarewritten ontwofiles. arewritten ontheBDP_L file. TheKBFLdataarewritten onascratch file. oftheinputfileiscomplete, theKBFLdataisappended totheBDP_L file. During theprocessing thecoreisallocated forthegeometry datablocks. Foreachfluid point, tables arealsocreated whichmustfitintheremaining core. Thefollowing description liststheformoftheinputdataandthevarious stepsusedintheprocess. 4.90.7.1 FormoftheBoundary DataRecord ontheMATP_L DataBlock Three levels ofdataarecontained within thisrecord. Thefirstlevelisalistoftheover- alldefinition parameters ofthefluidandtheboundary. Thesecond levelconsists offluidpoints andtheirassociated data. Attached toeachfluidpointisathirdlevelconsisting ofalistof theconnected structural gridpoints andtheirangular position onthefluidcircle. Theactual dataintherecord are:TheABFLmatrix terms Aftertheprocessing I.Header data: S_xmbol CSf M Sl $2 g N_SYM k nl,n2…..nj…..nkDescriDtinn Fluidcoordinate system identification Number ofsymmetric sections Symmetry definitions offirstandsecond boundary Valueofgravity Flagforn*series Number ofharmonic indices below Listofharmonic indices 4.90-2 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 2. Fluid point data S_bol Idfl r,z,J_,C,S,p Ng Id1 Id2 02 Id.1 Id g g Idf2 ei;c.Descri ption First fluid point (RINGFL) identification Fluid point properties Number ofconnected grid points below Gridpoint identification Angular position ofFirst gridpoint (grid point data) Second fluid point etc. 4.90.7.2 Selection o_UarmonicstoMatch Boundary Conditions TheHeader Record fortheboundary dataisreadandalistofharmonics (njandn_)tobe included inthematrices areprecalculated. IfN_SYM =YES,theindices forthesineseries will beincluded. Atestismade oneachvalue ofnandnusing thevalues ofSland$2intheheader data. I.IfM=0orlaccept allvalues ofnandn. 2.IfSl=$2,Calculate: a° b.2n K=– M _r IfKisnotaninteger reject norn IfKisaninteger: accept nifSl=S accept nifSl=A(1) 4.90-3 (8/I/72)\nFUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC PROBLEMS) 3.IfS1#$2,calculate: K= a.IfKisnotaninteger reject norn* b.IfKisaninteger: accept nifS1=S accept nifSl=A Alistofallowable values ofnandn*isbuiltincore. Ifthefinallistisnull,onlythe KBFLmatrix isgenerated. Theparameter MFACTisthecomplex number (M,O)ifMisnonzero. The value(I,0)isusedifMiszero. 4.90.7.3 Formation ofGeometry TableforInternal Use Thecoreisallocated fortheBGPDTdatablockandanextrawordforeachofitsentries. Thedataisreadingroups offourwordsandstored infivewordentries, reserving thefirstword fortheexternal identification number. TheEQEXlN datacontains apaired listofexternal and internal numbers. TheEQEXIN isreadandtheexternal numbers areplaced inthecorresponding BGPDTentries incore. Theresulting BGPDTdataaresorted ontheexternal identification numbers. Thereferenced coordinate system number andthebasiclocation vector foranygridpointarenow available byusingasingle binary search. I4.90.7.4 CSTMProcessing TheCSTMdatablockisnowreadandstored incore. Thefluidcoordinate system identifica- tionnumber, CSf.isfoundandthe3by3transformation matrix, [Tof], isextracted directly from thedata. I4.90.7.5 FileInitialization Theprocessing ofthematrix datamaynowbegin. ThefilesfortheABFLandKBFLoutput data areopened andthematrix header dataiswritten. Theboundary dataontheMATPO_L datablock are readandonefluidpointatatimeisprocessed. 4.90-4 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.90.7.6 Calculations ofAreas Associated withBoundary Grid Points I Thefirst setoftheparameters Id,r,z,Ck’Ck\"Sk’andPkarereadforthefluid point where k=lifthefluid point hasonly oneentry ork=l,2,3…ifthefluid point isconnected with multiple boundaries. Theconnected gridpoint numbers (Idi) andangles (@i)arereadandplaced incore. Twenty-six words areallocated foreachgridpoint. Foreachconnected gridpoint thecalculated dataare: (1) Idi (2) @i (3) ¢0i (4) eli (5-22) [Vi] (23-26) {Wi}Identification number Azimuthal angle (radians) Angle midway toprevious point Angle midway tonextpoint 3x3double precision transformation 3xlvector Themidway angles aredefined ingeneral as: ¢i+¢i-I @Oi= 2 @i+qbi+l ¢Ii-2(3) Theangles forthefirst point are: Theangles forthelastpoint are:¢01=¢I’M\u003e2 ¢I+@N-27 COl- 2 ,M=O. @IN=@N’M\u003e2 @N+@l+2_ ¢IN=2 ,M=0(4) (5) Allofthegridpoint dataaresorted onthegridpoint numbers before thetransformations [Vi]andI {Wi}arecalculated. 4.90-5 (8/I/72)\nFUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC PROBLEMS) Theequations forthetransformation matrices are: [Vi]=[Ti]T[Tof] ]T{Wi}=[TiTof Where [Ti]isthe3by3global-to-basic transformation matrix forgridpointi. I4.90.7.7 Calculation ofMatrix Terms Thematrix termscorresponding toonefluidpointaregenerated fortheABFLandKBFLdata tables atthisstage. TheABFLmatrix termsaregenerated asfollows: I.Foreachallowable valueofnornamatrix column isgenerated intheABFLtable. internal numbers, Gj,forthefluidpointidentification number, Idf,are: Idf+(n+I)106 cosine series Gj= Gj Idf+2n+1106 = 2 sineseriesThe These numbers label thecolumn ofthematrix. 2.Eachrowposition inthematrix islabeled byagridpoint, Idi,anditsthreecomponents: Thevalues corresponding tothesepositions arethevalues ofthevector C:I,2,3. {Ain}where: Ckcos¢il{Ain} :_A_k[Vi] Cksin_i (7) S Thevector {Ain}issimilar. Thecoefficients are: A° =r_k(@li -¢0i) n=0 ik An r_k ik-n[sin(n@li) -sin(n¢oi)] ’n\u003eO n* r_k * * * Aik-n[cos(n @li)-cos(n@Oi)],n\u003e0(8) 4.90-6 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 3.where k=l,2,3…. isanindex ifthefluid point occurs more thanonceinthe boundary listtables. Ifgravity, g,isnonzero theKBFLmatrix terms arecalculated. Eachgridpoint, Idi, connected tothefluid point isusedtoproduce three columns ofthematrix corresponding tothethree components, Cj=l,2,3.Thethree rowsforeachcolumn arethesamethree components, Ci=l,2,3,ofthegridpoint. Theequation forthethree terms ineach column is: where:{Ki}jICkcos¢ik [Vii CkIBiiWij sin¢i Sk(9) Wijisthejthcomponent of{Wi}and: B_.=r_kPk(¢il-¢i0)g\"ll kistheindex usedifthepointsareincluded inmorethanoneboundary listentry. _.90.7.8 Wrapup Operation(10) Thefinal operations involve rewinding thescratch filecontaining theKBFLdataandappending thatdata totheBDP@_L datablock output file. 4.90.8 Additional Subroutines BMGTNS -This routine isaslightly modified version ofutility subroutine PRETRD soasto haveonlyoneentry point. 4.90.9 Design Requirements Themajor corerequirements arethattheBGPDT datamust fitandthattwenty-six words for eachboundary gridpoint converted toonefluid point must fitincore. 4.90-7 (8/I/72)\nFUNCTIONAL MODULE BMG(BOUNDARY MATRIX GENERATOR FORHYDROELASTIC PROBLEMS) 4.90.10 Diagnostic Messages Thefollowing system fatalmessages maybeissued byBMG: ***SYSTEM FATALMESSAGE 2148,C_RDINATE SYSTEM =XXXXXCANN_TBEFOUNDINCSTMDATA. ***SYSTEM FATALMESSAGE 2149,C_NNECTED FLUIDP_INTID=XXXXXISMISSING BGPDT DATA. 4.90-8 (8/I/72)\nEXECUTIVEPREFACEMODULEIFP5(INPUTFILEPROCESSOR-PHASE5) 4.91EXECUTIVEPREFACEMODULEIFP5(INPUTFILEPROCESSOR-PHASE5) 4.91.1EntryPoint: IFP5 4.91.2 Purpose I.Toconvert thedatacardimages related toacoustic analysis intoconventional grid points andelements. 2.Tocalculate slot-cavity interface matrix terms andgenerate corresponding scalar elements. 3.Togenerate plotelements describing thesidesoftheacoustic elements. 4.91.3 Callin9Sequence CALLIFP5. IFP5,anExecutive Preface Module, iscalled onlybythePreface driver SEMINT. 4.91.4 InputDataBlocks AXlC-Contains BulkDataCards related totheacoustic parameter, points, andboundaries. GERM1- Gridpointandcoordinate system data GEOM2- Element Data,including acoustic elements. 4.91.5 Output DataBlocks GERM1-Sameformat asinput, acoustic points aremerged inasGRIDpoints. GE_)M2 -Sameformat asinput, scalar elements andplotelements areadded. 4.91.6 Parameters Notapplicable toIFP5 4.91.7 Method IFP5converts thedataontheAXICdatablockintoconventional gridpoints andelements. TheGERM1andGEOM2dataarereadandmerged withthenewdataonscratch files. Thecomplete datasetsarecopied backontotheGERM1andGEOM2files. (Thisisnotnormally allowed ina NASTRAN Module. Thepreface modules, however, havetheprivilege ofwriting onaninputfile.) Thedatacardslisted below areprocessed byIFP5. Thecorresponding output cardimageand itsdatablockaregivenforeachcard. 4.91-I (8/I/72)\nEXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5) IFP5Input CardImage AXSL@T CAXlF2 CAXlF3 CAXlF4 CSL@T3 CSLOT4 GRIDF }GRIDS BDYLISTDataBlock IFP5Output DataBlock In CardImage Out AXlC (allbelow) (allbelow) (CAXIF21_CAXlF3# JCAXlF4\\ GERM2 GEOM2 ICSLBT3_ CSL@T4 _PLOTEL) AXlC GRID GE@MI AXlC CELAS2 GERM2 Itshould benotedthattheformats oftheCAXiFi datacardsareexactly thesameastheCFLUIDi datacardsasgenerated byIFP4,Section 4.89. Thefollowing stepsarefollowed toprocess the data: I.TheAXSLOT cardisreadfromtheAXICfile,itsdataare: 2.Pd default density Bddefault bulkmodulus N harmonic number wddefault slotwidth M Number ofslots TheGRIDSdatacardimages arereadandstored incore. Thecontents ofeachcardare: 3.Ids-identification number r-radius ( z-axialcoordinate w-slotwidth Idf-identification ofassoicated GRIDF TheGRIDFdatacardimages arereadandstored incore. Idf-identification number r-radius z-axialcoordinateThecontents ofeachcardare 4.91-2 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS . 5.Ifthevalue infield 5ofGRIDS cardisnonzero anIDFcardisgenerated with the values Idf,r,zasgiven ontheGRIDS card. These cards areadded totheGRIDF images andthecomplete listofGRIDF cards issorted. Datablcok GE_MI iscopied ontothefirst scratch fileuptothefirst GRIDcard. The GRIDF andGRIDS cards aremerged withtheGRIDcards intheGRIDcardformat asfollows: GRIDField Value GRIDF Value GRIDS l Idf Ids 2 0 0 3 r r 4 z z 5 0 w 6 -l -l 7 0 0 6.Theremainder ofGE_MI iscopied ontothescratch file. Thescratch fileisthencopied backontoGE_MI, starting fromthebeginning. 7.TheSLBDY datacardimages arereadfromtheAXICdatablock. Foreachentry, Idiona logical card, fivewords arealocated incoreandthefollowing isstored. Idi,Idi_l, Idi+l, RH_,M where Idiisapoint number inthelist Idi_1istheprevious point number inthelist Idi+listhenextpoint number inthelist RH_,Maregiven onthelogical card IfIdiisthefirst entry onalogical card, Idi_l=-l.IfIdiisthelastentry ona logical card, Idi+l=-l. 8.After allSLBDY cards areprocessed theabove listissorted onthefirst entry ineach group of5. 9.Plotelements (PL_TEL) aregenerated andplaced onthefirst scratch file. TheGERM2 datablock isreadandforeach (AXIFi) datacardaseries ofPL_TEL cards aregenerated andwritten onthefirst scratch file (SCRTI). 4.9]-3 (8/]/72)\nEXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5) CAXIF2 Data PLOTEL Data Id Id+106 G1 G1 G2 G2 P B N CAXIF3 Data PLBTEL Data Id Id+2-106 G1 G1 G2 G2 G3 p Id+3-106 B G2 N G3 Id+4.106 G3 G1 CAXIF4 Data PLBTEL Data Id Id+5-106 Id+6-106 G1 G1 G2 G2 G2 G3 G3 G4 Id+7-106 Id+8-106 p G3 G4 B G4 Gl N I0. Asecond scratch file(SCRT2) isopened andtheGERM2dataiscopied ontoSCRT2tothe CELAS2 datacardposition. Theboundary listdataisprocessed andCELAS2 datacardsare generated andappended toSCRT2. Foreachfivewordentry intheBoundary Tablesearch theGRIDSdatacardimages forthefollowing data ri,zi,wi,IDF ri_I,zi_I,wi_1 ri+I,zi+I,wi+1fromGRIDScard\"IDS.“1 fromGRIDScard\"IDSi_I” fromGRIDScard\"IDSi+I\" where r=ri,z=ziifthecorresponding identification number IDSis-I.IfaGRIDS cardcannotbefoundafatalerrorexists. Thefollowing dataiscalculated foreach entry: 4.91-4 (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 41=/(zi+1-zi)2+(ri+1-ri)2 , 2=(zi-I -zi)2+(ri-I -ri)2 ’ _ )2+ ri)2 :1_(Zi+l Zi_l (ri+l –l ’ _=4(_I+2)I [lri+l+2ri_l] +3ri Thecoefficients forslot interaction are: 6-2_r M (IfB-\u003e!afatalerrorexists) F 1 +I :Ll°ge(B–) +21 c(6+) oge(6+I)(6-I)]6r and e:Max(c’ .OIW) where Fi=MifN:0orN:,Gi:otherwise. II.Foreachentry intheBoundary Table, corresponding GRIDF datacardwith ID:IDFis found incore. Forthecorresponding GRIDF point IDFjcalculate thefollowing: sinNw 2F= N ZF 4.91-5 (811172)\nEXECUTIVE PREFACE MODULE IFP5(INPUT FILEPROCESSOR -PHASE5) 12. 13.CELAS2 elements arenowgenerated fortheslotpoint IDSiandthecorresponding axisym- metric fluidpointIDFj. Theformat ofthisdatais: Id K G1 C1 G2 C2 Ide+1 (l-m)Kf IDSi “I” blank blank Ide+2 Kf IDSi\"I\" IDFi “I” Ide+3(l-_)Kf IDFi\"I\" blank blank Theelement identification numbers Idearesequential starting withI0,000,001. With eachnewpointontheboundary list,IDFi,thevalueIdeisincremented by3. Whenallpoints ontheboundary listareprocessed, theremainder ofGERM2iscopied onto SCRT2. IfCSL_T3 and/or CSL_T4 elements areencountered, theywillproduce PLBTEL data cardimages which arewritten onSCRTIinthefollowing format: CSL_T3 Data PLBTEL Data Id Id+9\"106 G1 G1 G2 G2 G3 p Id+10\"106 B G2 M G3 N Id+II-I06 G3 G1 CSL_T4 Data PLOTEL Data Id Id+12\"106 G1 G1 G2 G2 G3 G4 Id+13\"106 p G2 B G3 M N Id+14\"106 G3 G4 Id+15\"106 G4 G1 4.91-6 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 14.When GERM2 hasbeencompletely copied ontoSCRT2, thefiles arerewound andthedatafrom SCRT2 (containing thenewCELAS2 elements) andthePL_TEL datafromSCRTI aremerged and copied backontoGERM2. 4.91.8 Subroutines 4.91.8.1 IFP5A I.Entry Point: IFP5A 2.Purpose: Prints formal partofmessages forIFP5. 3.Calling Sequence: CALLIFP5A (NUM) NUM=IFP5message number. 4.91.9 Desi9nRequirements Discussed under Method. 4.91.lO Diagnostic Messages Many usermessages relevant totheacoustic cavity modeling datamaybeissued. 4.91-7 (8/I/72)\nFUNCTIONAL MODULE PLTTRAN 4.92 FUNCTIONAL MODULE PLTTRAN 4.92.1 EntryPoint: PLTTRA 4.92.2 _ose Tomodify theSILandBGPDTtables forthepurpose ofplotting special scalar gridpoints. Eachgridpointwithonedegree offreedom isgivensixdegrees offreedom inthemodified SIL datablock. Thesepoints areidentified intheBGPDPdatablockbythevalue(-2)inthefirst entryforeachpoint. 4.92.3 DMAPCallin9Sequence PLTTRAN BGPDT,SIL /BGPDP,SIP /V,N,LUSET /V_N,IUSEP $ 4.92.4 InputDataBlocks DataBlockBGPDT-Fourentries pergridorscalar pointasfollows: I.Localcoordinate system number or-Iifpointisascalar point. 2-4.X,Y,Zlocation inbasiccoordinate system. DataBlockSlL-Oneentrypergridorscalar point. Thevalueoftheentryisthelocation ofthefirstdegree offreedom ofthepointinthevector containing alldegrees offreedom. 4.92.5 Output DataBlocks DataBlockBGPDP-Sameformat asBGPDT. Ifapoint isdetermined tohaveonedegree of freedom andisnotascalar point, thevalue(-2)isplaced inthefirstentryforthatpoint. DataBlockSIP-Sameformat asSIL.Allpoints except timescalar points aregivensix(6) degrees offreedom. Atruescalar pointhasthevalue (-I)inthefirstslotofitsBGPDTentry. 4.92.6 Parameters LUSET -Total number ofdegrees offreedom LUSEP -Newvalue forLUSET taking into account thechange inthenumber ofdegrees of freedom when thespecial scalar points areexpanded tosixdegrees offreedom. 4.92-1 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS 4.92.7 Method TheSILisreadlwordatatime;theBGPDT isread4wordsatatime. Ifthedifference between thenewSILnumber andtheprevious SILvalueis1andthefirstentry intheBGPDTis zeroafluidscalar gridpointexists. InthiseventthenewSIPincrement is6andthevalue-2 isplaced inthefirstwordoftheBGPDPentry. 4.92.8 Subroutines None. 4.92.9 Design Requirements Opencoreisdefined at/PLTRNI/ andmustbesufficient toholdfour(4)GIN_buffers. 4.92.10 Diagnostic Messages Messages 3001,3002,3003,3008,5011and5012maybeissued. 4.92-2 (8/I/72)\nMATRIXMODULEUPARTN 4.93MATRIXMODULEUPARTN(PARTITIONS AMATRIXBASEDONUSET) 4.93.1EntryPoint: DUPART 4.93.2 Purpose: Tocompute apartitioning vector basedonthedisplacement setsasdefined byUSETandcreate thesymmetric partitions oftheinputmatrix. Forexample thismodule willperform EKnnKffKsfKssKfSl4.93.3 DMAPCallin9Sequence UPARTN USET,KNN /KFF,KSF,KFS,KSS /C,Y,MAJ_R=N /C,Y,SUBO=F /C,Y,SUBI=S $ 4.93.4 Input DataBlocks USET Displacement setdefinitions table(ThismayalsobeUSETDifextra points are present). KNN Anysquare displacement matrix. Theassociated setofKNN(N)mustbegivenin thefirstparameter. Note: I.USETmaynotbepurged. 2.IfKNNispurged, UPARTN willreturn. 4.93.5 Output DataBlocks KFF -Matrix. Itwill have SUBO rows andcolumns. KSF -Matrix. Itwill have SUBI rows andSUBO columns. KFS -Matrix. Itwill have SUBO rows andSUBI columns. KSS -Matrix. Itwill have SUBI rows andcolumns. Note: Anypurged oromitted output data blocks will notbewritten. 4.93-I (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS 4.93.6 Parameters MAJOR SUBO SUB1 Note: I. 2.Input-BCD-Nodefault value. ThisisthesetofKNN. Input-BCD-Nodefault value. Thisisthefirstsubset ofMAJOR. Input-BCD-Nodefault value. Thisisthesecond subset ofMAJOR. MAJOR, SUBO,andSUBImustbeselected fromthefollowing list: M,_,R,SG,SB,L, A,F,S,N,G,E,P,NE,FE, andD. Thesetequation MAJOR=SUBO+SUB1should besatisfied. 4.93.7 Method Themodule driver, DUPART, checks thecompatibility oftheparameter dataanddirectly calls UPARTandMPART(anentry pointinUPART). Allworkisthenaccomplished intheUPARTroutine. 4.93.8 Subroutines UPART Seesubroutine description, section 3.5.9. 4.93.9 Design Requirements Onescratch file. 4.93.10 Diagnostic Messages UPARTN mayissueoneofthefollowing diagnostic messages: 3007or3059 4.93-2 (8/I/72)"},"title":"Programmer's Manual P76"},"/docs/programmers/programmers_manual_077/":{"data":{"":"MATRIX MODULE UMERGE 4.94 4.94.1 4.94.2MATRIX MODULE UMERGE (MERGES TWOMATRICES BASED ONUSET). Entry Point: DUMERG Purpose: Tomerge twomatrices intoathird based onthedisplacement sets. modulewill perform: 4.94.3DMAP Callin 9Sequence UMERGE USET,PHIA,PHIO /PHIF/C,Y,MAjOR=F /C,Y,SUBO=A /C,Y,SUBI=O $ 4.94.4 Input Data BlocksForexample, this USET PHIA PHIO Note:-Displacement setdefinitions table (this mayalsobeUSETD ifextra points are present.) Anytwomatrices except thattheir rowsmustbeassociated withdegrees-of-freedom specified byUSETandtheparameter list. PHIA’s degrees-of-freedom arespecified bySUBOandPHIO’s bySUBI. Either matrix maynotbepresent anditsrespective degrees-of-freedom will befilled with zeros. 4.94.5 Output Data Blocks PHIF Note:-Matrix. Itsterms willbeassociated withdegrees-of-freedom inthesetspecified byMAJOR. PHIFmustbepresent. 4.94.6 Parameters MAJOR SUBO SUB1-Input -BCD-Nodefault value. Input -BCD-Nodefault value. -Input -BCD-Nodefault value.ThisisthesetofPHIF. This isthesetofPHIA. ThisisthesetofPHIB. 4.94-I (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Note: I.MAJOR, SUBO,andSUB1mustbeselected fromthefollowing list: M,_,R,SG,SB,L,A, F,S,N,G,E,P,NE,FE andD. 2.Thesetequation MAJOR=SUBO+SUB1should besatisfied. 4.94.7 Method Themodule driver, DUMERG, checks thecompatibility oftheparameter dataanddirectly calls SDRIB. Allworkisthenaccomplished intheSDRIB routine. 4.94.8 Subroutines SDRIB -Seeitssubroutine description, section 3.5. 4.94.9 Design Requirements Onescratch file. 4.94.10 Diagnostic Messages UMERGE mayissueoneofthefollowing diagnostic messages: 3007or3059 4.94-2 (8/I/72)\nMATRIX MODULE VEC 4.95 MATRIX MODULE VEC(CREATES PARTITIONING VECTOR BASED ONUSET) 4.95.1 Entry Point: VEC 4.95.2 Purpose: VECcreates apartitioning vector based onUSETthatmaybeusedinPARTN andMERGE. 4.95.3 DMAPCalling Sequence VEC USET/V/C,N,SET /C,N,SETO /C,N,SETI $ 4.95.4 Input DataBlocks USET -Displacement setdefinition table (this maybeUSETD ifextra points arepresent). Note: USETmust bepresent. 4.95.5 Output DataBlocks V -Partitioning vector. Note: Vmaynotbepurged. 4.95.6 Parameters SET -Input-BCD-no default. SETO -Input-BCD-no default. SETI -Input-BCD-no default. 4.95.7 Method TheBCDparameters SET,SETO, andSETIareconverted tobitpositions inUSET. Theymust be oneofthefollowing 17symbols: M,O,R,SG,SB,L,A,F,S,N,G,E,P,NE,FE,D,H orelse afatal error will result. USET isreadintocoreandthefileclosed. Theoutput fileisthenopened andeachentry is compared with thethree converted parameters asfollows: I.USET issearched formembers ofSET. Iftheentry isnotamember ofSET,itischecked that itisnotamember ofSETOorSETIbefore going tothenextentry.SETindicates thesettowhich thepartitioning vector applies. SETOindicates theupper partition ofSET. SETIindicates thelower partition ofSET. 4.95-I (811172)\n4.95.8MODULE FUNCTIONAL DESCRIPTIONS 2.Theentrythatbelongs toSETisthenchecked ifitisalsoamember ofSET1. Ifitis, theentryisalsochecked ifitisamember ofSETO,whichisfatal, before replacing the entrywith1.0. 3.Iftheentryisamember ofSETandnotamember ofSET1,theentryischecked toverify thatitisamember ofSETObefore replacing itwitha0.0. 4.Afterallentries havebeensuccessfully processed, acheckismadetoinsure thata vector exists andthattheentries arenotallzerosorones(fatal error). 5.Therewritten entries arethenwritten ontotheoutput datablockasamatrix consisting ofone(I)column. Subroutines VEChasnoauxiliary subroutines. 4.95.9 Design Requirements I.Opencoreisdefined at/VECXXX / 2.Layout ofopencoreisasfollows: Unused I core/VECXXX / USET GIN_ BufferOpencore 4.95-2 (811172)\n4.96 4.96.1 4.96.2 Tocompute [X] 4.96.3 ADDMATRIX MODULE ADD5(ADDMATRICES) MATRIX MODULE ADD5(ADDMATRICES) EntryPoint: DADD5 Purpose =[A]+B[B]+y[C]+aID]+[E]. DMAPCallin9Sequence A,B,C,D,E/X/C,Y,ALPHA=(I.O,2.0)/C,Y,BETA=(3.0,4.0)/C,Y,GAMMA=(5.0,6.0)/ C,Y,DELTA=(7.0,B.O)/C,Y,EPSLN=(9.0,O.O) $ 4.96.4 Input Data Blocks A,B,C,D,andEmust bedistinct matrices. Note: Anyoftheinput matrices maybepurged. 4.96.5 Output Data Blocks X-Matrix. Thetype ofXismaximum ofthetypes ofA,B,C,D,E,,B,Y,6,a.TheshapeofXis theshapeofAifAispresent. Note: Xcannot bepurged. 4.96.6 ParametersOtherwise itisthat ofthefirst non-purged input. ALPHA -Input-complex-no default value. BETA -Input-complex-no default value. GAMMA -Input-complex-no default value. DELTA -Input-complex-no default value. EPSLN-Input-complex-no default value. Note:This isthescalar multiplier forA. This isthescalar multiplier forB. This isthescalar multiplier forC. This isthescalar multiplier forD. This isthescalar multiplier forE. IfIm(), Im(B), Im(y), Im(_) orIm(E) =0.0, theparameter will beconsidered real. 4.96.7 Method If[A]isnotpurged, thenumber ofcolumns, rows,andformof[X]=number ofcolumns, rows, andformof[A].Otherwise thedescriptors ofthefirstnon-purged inputareused. Thetypeof 4.96-I (8/I/72)\nEPSLN. zero.MODULEFUNCTIONAL DESCRIPTIONS [X]isthemaximumcompatible typeof[A],[B],[C],[D],[E],ALPHA,BETA,GAMMA,DELTAand ALPHA,BETA,GAMMA,DELTAandEPSLNareassumedtoberealiftheirimaginarypartsare 4.96.8Subroutines SADD-Seesubroutine description, Section 3.5.26. 4.96.9 Design Requirements Opencoreisdefined at/DADDA/. 4.96.10 Diagnostic Messages None. 4.96-2 (8/I/72)\nFUNCTIONAL MODULEINPUT(INPUTGENERATOR) 4.97FUNCTIONAL MODULEINPUT(INPUTGENERATOR) 4.97.1EntryPoint INPUT 4.97.2 Pu__u__pose Generates thebulkdatainputforalargenumber ofacademic testproblems. 4.97.3 DMAPCallin9Sequence INPUT 11,12,13,14,15 /BI,2,3,B4,B5 /C,N,/C,N,B/C,N,$ 4.97.4 InputDataBlocks li-Asrequired bytheexecution ofthemodule*. 4.97.5 Output DataBlocks Bi-Asrequired bytheexecution ofthemodule*. 4.97.6 Parameters -Problem TypeSelector* (Input, integer, default value=-I(anillegal valuefor execution)) -Problem typeoption selector* (Input, integer, default value:O) 6-Problem typeoption selector* (Input, integer, default value=O) 4.97.7 Method Based onthevalues oftheparameters, INPUTreads, viaFBRTRAN, oneormoredatacardsfrom theinputstream. Sincethedatadeckhasalready beenprocessed through theENDDATA cardatthis point, thesedatacardsalways follow theENDDATA card. SinceFBRTRAN I/_isused,integer data onthese cardsmustberight-justified. Oncethedatacardsarereadandchecked, INPUTgenerates thetabledatablocks thatwouldhavebeengenerated iftheequivalent actual cardshadappeared inthebulkdatadeck. Thesegenerated records aremerged inwithanycoming fromthecorrespond- inginputdatablock (generated byIFP)andarewritten ontotheappropriate output datablock. 4.97-I (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS 4.97.8Subroutines IUNI_N -Integer function which computes theunionofconstraint codes. INPABD -Initializes thecommon block/INPUTA/ 4.97.9 Design Requirement s Opencoreisdefined at/INPUTX/ andmustbesufficient toholdtwoGINBbuffers. 4.97.10 Diagnostic Messages Manyusermessages aregenerated byINPUT. Thesearemostly related toimproper orincon- sistent datapresented bytheuserandareusually self-explanatory. Themessages generated internally within INPUTarc1738through 1745. Inaddition, INPUTwrites anechoofalldataread fromtheinputstream andcertain informational output related totheprocessing thatoccurs while generating theuser’s problem data. *Theworkings ofINPUTaredescribed fromtheuser’s pointofviewinSection 2.6oftheNASTRAN ll_r’_ Manual. NASASP-222. 4.97-2 (8/I/72)\nFUNCTIONAL MODULE INPUTTI 4.98 FUNCTIONAL MODULE INPUTTI 4.98.1 Entry Point INPTTI 4.98.2 Purpose Recovers GINO-written data blocks (tables ormatrices) from User Tapes designated forthat purpose (NASTRAN permanent GINO files INPT, INPI, INP2, —, and/or INP9). Normally, these tapes would bewritten bythecompanion module OUTPUTI (see Section 4.100) inaprevious run. 4.98.3 DMAP Calling Sequence INPUTTI /01,02,03,04,05 /V,N,PI /V,N,P2 /V,N,P3 $ 4.98.4 InputDataBlocks None. 4.98.5 Output Data Blocks 0i-Anydata block which istoberecovered from theUser Tape. Purged outputs (either implicit orexplicit) areignored. 4.98.6 Parameters Pl-Tape positioning option (Input, integer, default value =O) P2-User Tape code (Input, integer, default value =O) P3-User Tape Label (Input, alphanumeric, default value =‘XXXXXXXX’) 4.98.7 MethoG INPTTI examines thefirst parameter andpositions theUser Tape designated bythesecond parameter (checking theUser Tape Label defined bythethird parameter ifappropriate). INPTTI then copies thenext data blocks from theUser Tape andwrites them onthenon-purged output data blocks intheDMAP instruction. TheUser Tape isleft positioned wherever itiswhen theDMAP instruction requirements aresatisfied. Inthis way, multiple calls canbemade. 4.98-I (8/I/72)\nMODULE FUNCTIONAL DESCRIPTIONS Theconfiguration offilesandrecords ontheUserTapeisshowninthesketch below. File I#0 File #I File #2 File #n EndofFile\nBin-LoadPoint 12-word idrecord 2-word header rec 7-word trailer rec Oneormore logical records 2-word header rec 7-word trailer rec Oneormore loqical records 2-v,ord header rec 7-word trailer rec Oneormore loqical records 4.98-2 (8/I/72)\nFUNCTIONAL MODULEINPUTTI 4.98.8 Subroutines None. 4.98.9 Design Requirements Opencoreisdefined at/INPIXX/ andmustbesufficient toholdtwoGIN_buffers plusone wordofworking core. SinceblastI/0techniques areused,efficiency isenhanced byanyadditional coreuptothelongest logical record tobereadinanyonedatablock. TheUserTapesmustbephysical tapes. 4.98.10 Diagnostic Messages Messages 3008,4105,4106,4107,4108,4109,4110,4111,4112,4113,4127,4132,4133,4134, 4135,4136,4137,4138,4139,4140,4141,and4142maybeissued. Inaddition, whenafiletableofcontents isrequested, printout isgenerated giving the filenumber andthevalueofthefirsttwowordsoftheheader record foreach’file’ onthetape. 4.98-3 (8/I/72)\nFUNCTIONAL MODULE INPUTT2 4.99 FUNCTIONAL MODULE INPUTT2 4.99.1 Entry Point: INPTT2 4.99.2 Recovers F_RTRAN-written data blocks (tables ormatrices) from User Tapes. Anylegitimate F_RTRAN unit number notalready utilized byNASTRAN maybeused forthis purpose. OntheCDC machines, these unit numbers must also becompiled into thesystem indeck NASTRAN. Normally, these files would bewritten bythecompanion module _L’TPUT2 (see Section 4.101) inaprevious run. Itisintended that files also beeasily generated byexternal FBRTRAN programs, however. 4.99.3 DMAP Callinq Sequence INPUTT2 /01,B2,03,_4,_5 /V,N,PI /V,N,P2 /V,N,P3 $ 4.99.4 Input Data Blocks None. 4.99.5 Output Data Blocks i-Anydata block which istoberecovered from theUser Tape. Purged outputs (either implicit orexplicit) areignored. 4.99.6 Parameters Pl-File Positioning Option (Input, integer, default value =O) P2-User Tape Code (Input, integer, default value =0). This istheF_RTRAN unit number forthefile. P3-User Tape Label (Input, Alphanumeric, default value =‘XXXXXXXX’.) 4.99.7 Method INPUTT2 examines thefirst parameter andpositions theUser Tape designed bythesecond parameter (checking theUser Tape Label defined bythethird parameter ifappropriate). INPTT2 then copies thenext data blocks from theUser Tape andwrites them (via GIN) onthenon-purged output data blocks intheDF_P instruction. 4.99-I (811/72)\nMODULE FUrlCTIONAL DESCRIPTIONS TheUserTapeisleftpositioned wherever itiswhentheDrIAPinstruction requirements are satisfied. Inthisway,multiple callsmaybemade. Adescription ofthefileconfiguration isgivenbelow forthoseF_RTRAN programmers whomay wishtogenerate UserTapeswiththeirownexternal programs forinputtoNASTRAN. NASTRAN File RecFormat ofINPUTT2/UTPUT2 File 1 1 KEY\u003e0 Data}IKEY KEY\u003e0 {DataIIKEY KEY\u003c0 E_R KEY\u003e0 {Data} IKEY KEY\u003c0 E_R KEY=0 E_F 2 1 KEY\u003e0 KEY\u003c0 E_R KEY=0 E_F 3 KEY=0 E_F=E_DFORTRAN Rec 1 2 3 4 5 6 7 8 9 lO II 12 13 14 Restrictions : I.Enough coremustbeavailable toholdthelongest record segment. 2.AF@RTRAr4 unitmustbeavailable. OntheCDC,thismeansthatthePROGRAM Deck(NASTRAH) mustbere-compiled andLink0re-done.ken 1 KEY 1 KEY 1 1 KEY 1 1 1 KEY 1 1 1 4.99-2 (8/I/72)\nFU!_CTIONAL MODULEI:_PUTT2 Thelogicbywhich theNASTRA;I logical ‘records’ areinterrogated isgiveninthesketch below: EndofRecord forRecord IKIRead K\n0 NextKwords are partofLogical Rec EndofFile Condition =0 NO Another file folImvs 4.99.8 Subroutines None. 4.99.9 Desi9nRequirements Opencoreisdefined at/INP2XX/ andmustbesufficient toholdtwoGINObuffers plusthe longest F_RTRAN logical record ontheUserTape. The’UserTape’ filesmaybeonanyF_RTRAN readable device. 4.99.10 Diagnostic Messages Messages 2187,2190,3008,4105,4106,4107,4108,4109,4110,4111,4112,4113,4132,4133, 4134,4135, 4136,4137,4138,4139,4140,4141,and4142maybeissued. 4.99-3 (8/I/72)\nFUNCTIO,‘IAL rlODULE (_UTPUTI 4.100 FUNCTIONAL MODULE _UTPUTI 4.100.I Entry Point: UTPTI 4.100.2 Purpose Creates GIN-written UserTapes containing datablocks (tables ormatrices) asrequested by theuserviatheD_P instruction. These tapes arewritten onNASTRAN permanent GIN_files INPT, INPI, INP2, —,and/or INP9. Itisanticipated that these tapes willbereadbythecompanion module INPUTTI inasubsequent run. 4.100.3 D_APCallin 9Sequence OUTPUTI II,I2,13,14,15 /V,N,PI /V,N,P2 /V,N,P3 $ 4.100.4 Input DataBlocks li-Anydatablock which theuserdesires tobewritten onaUserTape. Purged inputs (either implicit orexplicit) areignored. 4.100.5 Output DataBlocks None. 4.100.6 Parameters Pl-Tape positioning option (Input, integer, default value =O) P2-UserTapeCode(Input, integer, default value =O) P3oUserTapeLabel (Input, Alphanumeric, default value =‘XXXXXXXX’) 4.100.7 Method )UTPTI examlnes thefirst larameter andpositions theUserTapedesignated bythesecond )arameter (checking orwriting theUserTapeLabel defined bythethird parameter ifappropriate). BUTPTI thenwrites ontotheUserTapeallnon-purged input datablocks intheDMAPinstruction. TheUserTa :ioned wherever itiswhen theDMAPinstruction requirements aresatis- fied. Inthiswa_multi_le calls maybemadetowrite asmuchmaterial asdesired oneachUser 4.100-1 (811172)\nMODULE FUNCTIONAL DESCRIPTIONS Theconfiguration offilesandrecords ontheUserTapeisshowninthesketch below. File I#0 File #I File #2 File #n EndofFile_LoadPoint 12-word idrecord 2-word header rec 7-word trailer rec Oneormore logical records 2-word header rec 7-word trailer rec Oneormore logical records ’ _\\\\_ o 2-word header rec 7-word trailer rec Oneormore logical records 4.100-2 (8/1/72)\nFUNCTIONAL MODULEBUTPUTI 4.100.8Subroutines None. 4.100.9 Design Requirements Open core isdefined at/_UTIXX/andmust besufficient tohold twoGINB buffers plus one word ofworking core. Since blast I/_techniques areused, efficiency isenhanced byanyadditional core uptothelongest logical record toberead inanyonedata block. TheUser Tapes must bephysical tapes. 4.100.10 Diagnostic Messages Messages 3008,4114,4115,4116,4117,4118,4119,4120,4127,4128,4129,4130,and4131 maybeissued. Inaddition, whenafiletableofcontents isrequested, printout isgenerated giving the filenumber andthevalueofthefirsttwowordsoftheheader record foreach’file’ onthetape. 4.100-3 (8/I/72)\nFUNCTIONAL MODULEOUTPUT2 4.101FUNCTIONAL MODULEOUTPUT2 4.101.1EntryPoint: OUTPT2 4.101.2 Pu_uLoose Creates FORTRAN-written UserTapescontaining datablocks (tables ormatrices) asrequested bytheuserviatheDMAPinstruction. Anylegitimate FORTRAN unitnumber notalready utilized by NASTRAN maybeusedforthispurpose. OntheCDCmachine, theseunitnumbers mustalsobecompiled intothesystem indeckNASTRAN. Normally, itisanticipated thatthesefileswillbereadbythe compansion module INPUTT2 inasubsequent run.Itisexpected, however, thatuserswillwantto generate theirownUserTapeswithexternal programs completely unrelated toNASTRAN. Towards thisend,ascheme hasbeenimplemented bywhich_IASTRAN-Iike logical filesandrecords canbe simulated byunformatted FORTRAN I/0calls. 4.101.3 DMAPCallin_ Sequence OUTPUT2 11,12,13,14,15 /V,N,PI /V,N,P2 /V,N,P3 $ 4.101.4 InputDataBlocks li-Anydatablockwhichtheuserdesires tobewritten onaUserTapefile. Purged inputs (either implicit orexplicit) areignored. 4.101.5 Output DataBlocks None. 4.I01.6 Parameters P1-File positioning option (Input, integer, default value =O) P2-User Tape Code (Input, integer, default value =O) P3-User Tape Label (Input, Alphanumeric, default value =‘XXXXXXXX’) 4.101-1 (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS 4.101.7Method _UTPT2examinesthefirstparameterandpositionstheUserTapedesignated bythesecond parameter(checkingorwritingtheUserTapeLabeldefinedbythethirdparameterifappropriate). @UTPT2thenwritesontotheUserTapefileallnon-purged inputdatablocksintheDMAPinstruc- tions.TheUserTapefileisleftpositioned whereveritiswhentheDMAPinstruction requirements aresatisfied. Ir_thisway,multiplecallsmaybemadetowriteasmuchmaterialasdesiredon eachUserTapefile. Adescription ofthefileconfiguration isgivenbelowforthoseF_RTRAHprogrammers whomay wishtogenerateUserTapefileswiththeirowninternalprogramsforinputtoNASTRAN. NASTRANFiIeRecFormat ofINPUTTI/_UTPUT2 File 1 1 KEY\u003e0 {Datal $KEY KEY\u003e0 IDatal IKEY KEY\u003c0 E_R KEY\u003e0 {Datal IKEY KEY\u003c0 E_R KEY=0 E@F 2 1 KEY\u003e0 {Datal IKEY KEY\u003c0 E_R KEY=0 E_F KEY=0 EOF=E_DF_RTRAN Rec 1 1 2 KEY 3 1 4 KEY 5 1 6 1 7 KEY 8 1 9 1 I0 1 11 KEY 12 1 13 1 14 1 Restrictions : I.Enough coremustbeavailable toholdthelongest record segment. 2.AF_RTRAH unitmustbeavailable. OntheCDC,thismeans thatthePR_GRAI.I deck (NASTRA_I) mustbere-compiled andLink0re-done. 4.101-2 (8/I/72)\nFUNCTIONALMODULEINPUTT2 ThelogicbywhichtheNASTRANlogical below: IEndofRecordforRecordIKI.\u003c0’records’areinterrogated isgiveninthesketch ReadJK \u003c\u003e=0\u003e0INextKwordsare DartofLooical Rec 4.101.8 SubroutinesEndofFile Condition YESf NO -_Another file |follows None. 4.101.9 Design Reouirements Opencoreisdefined at/OUT2XX/ andmustbesufficient toholdtwoGINObuffers plusthe longest FORTRAN logical record ontheUserTape. The’UserTape’filesmaybeonanydevice accessible totheFORTRAN I/0routines. 4.101.10 Diagnostic Messages Messages 2187,2190,3008,4114,4115,4116,4118,4119,4120,4128,4129,4130,and4131 maybeissued. 4.101-3 (8/I/72)"},"title":"Programmer's Manual P77"},"/docs/programmers/programmers_manual_078/":{"data":{"":"OUTPUT MODULE OUTPUT3 4.102 OUTPUT MODULE OUTPUT3 4.102.1 Entry Point: BUTPT3 4.102.2 Punches onto DMIcards thecontents ofmatrix data blocks. Single-precision values are output ondouble-field cards. Iffull square matrices areconsidered, amaximum order of196is imposed since amaximum oflO000 cards (including theheader card) areallowed. 4.102.3 DMAP Callin 9Sequence _UTPUT3 11,12,13,14,15 //V,N,PRINTOPT /V,N,NI /V,N,N2 /V,N,N3 /V,N,N4 /V,N,N5 $ 4.102.4 InputDataBlocks li-Anyrealmatrix datablock. Onlysufficiently smallnon-purged datablocks will bepunched ontoDMIcards. 4.102.5 Output DataBlocks None. 4.102.6 Parameters PRINT_PT -Print echo option (Input, integer, default value =O) Ifthis parameter isnegative, anecho oftheDMIcard images generated will beprinted ontheF_RTRAN unit given by-PRINT_PT. Ni Continuation string -(Input, alphanumeric, default values: NI,NO default; N2-N5, default value =‘XXX’). Used toform aunique continuation string fortheDMIcards. 4.102.7 Method OUTPT3 readseachmatrix, non-zero termbynon-zero term(bycolumn), andpasses theseitems totheDMIcard-punching subroutine PHDMIA. 4.102-I (811172)\n,IODULEFUNCTIOHAL DESCRIPTIO,S 4.102.8 4.102.8.1 ], 2. 3. 4.Subroutines Subroutine Hame: PHDMIA EntryPoints: PHDMIA, PHDMIB, PHDMIC, PHDMID Purpose: Tocollect andpunchDMIcardimages. Calling Sequence: CALLPItDHIA CALLPHDMIB CALLPHDHIC CALLPHDHID-Initializes matrix. -Initializes non-null column. -Collect eachnon-zero termofcolumn. -Wrapsupcolumn. C@MM_N /PHDMIX /N(2),C,IF,TIN,T_UT,IR,IC,N@,KPP,NLP,ERN,IC@L,IR_,XX Communication areaforPHDMIA. Method: Asingle callismadetoPHDMIA foreachmatrix datablock tobepunched. AcallismadetoPHDMIB foreachnon-null column, followed byacalltoPHDMIC for eachnon-zero terminthecolumn, followed byawrap-up calltoPHDMID. 4.102.9 Desi_n_Ree_quirements Opencoreisdefined at/_UT3XX/ andmustbesufficient toholdasingle GI!,I_buffer. 4.102.10 Dia___nosticMessaqes I.lessages 3008,4100,4101,4102,4103,and4104maybeissued. 4.102-2 (8/I/72)\nOUTPUTMODULETABPRT(FORMATTED TABLEPRINTER) 4.103OUTPUTMODULETABPRT(FORmaTTED TABLEPRIr_TER) 4.103.1EntryPoint: TABF_ 4.103.2 Purpose Toprintselected tabledatablocks withformat foreaseofreading. 4.103.3 DMAPCalling Sequence TABPRT TDB//V,N,KEY /V,N,OPTI /V,N,OPT2 $ 4.103.4 InputDataBlocks TDB-TableDataBlockhaving aformat whichisprocessable bytheroutine. 4.103.5 Output DataBlocks None. 4.103.6 Parameters KEY-Keyword (Input, alphanumeric, nodefault value) ThevalueofKEYW_RD identifies theformat tobeusedinprinting thetable. _PTI-Option (Input, integer, default value=O) _PT2-Option (Input, integer, default value=O) 4.103.7 Method TABFMT examines theparameters andselects afon_at forprinting thecontents oftheinput datablock. Theinputdatablock isthenreadrecord byrecord andthecontents printed according totheselected format. Alineofprintout maycontain partofalogical record, acomplete logical record, ormorethanonelogical record. Coding ordecoding ofthedataitemsencountered maybedoneastheprogrammer wishes. Thetrailer dataarealsoprinted. 4.103.8 Subroutines TABFBD -BlockDataroutine tosettables forTABFMT incommon block /TABFTX/ . 4.103-I (8/I/72)\nMODULEFUNCTIONAL DESCRIPTIONS 4.103.9Design Requirements Opencoreisdefined at/TABFTZ/ andmustbesufficient toholdoneGlil_buffer plusa smallnumber ofwords ofdata,thenumber ofwhichdepends onKEY. 4.103.10 Diagnostic Messaeges Fatalmessage 3008maybeissued. Warning messages 2094,2095,2096,2097,2098,and2099maybeissued andwillcause termination ofthemodule butnotoftheprogram. 4.103-2 (8/I/72)\nI_,rIRODUCTION 5.1INTRODUCTION NASTRAN operateson:I)theIBM7094/7040(44) Direct Couple System undertheIBSYS operating system; 2)theIBMSystem/360 under Operating System (_S); 3)theUnivac ll08under theExec 8operating system; and4)theCDC6600under theSC_PE 3operatingsystem. Thissection dis- cusses theinterfaces between NASTRAN andthese operatingsystems with respect to:l)input/ output;2)linkswitching; 3)overlay considerations andimplementation oftheopencoreconcept; 4)thesetup oftheoperating system control cards preceding (and, inthecaseoftheUnivac ll08, following) theNASTRAN datadecks;5)generation ofanexecutable NASTRANsystem; and6)machine dependent routines. Thevocabulary usedineachsubsection istheoneusedbysystems programmers familiar with theparticular operating system being discussed.Itistothese systemprogrammers thateach subsection isaddressed. 5.1-I (12-I-69)\nNASTRAN ONTHEIBM7094/7040(44) DCS(IBSYS) 5.2NASTRAN ONTHEIBM7094/7040(44) DCS(IBSYS) Thissection hasbeendeleted sincetheIBM7094isnolonger anactive NASTRAN machine. 5.2-I (8/I/72)\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S) 5.3 NASTRAN ONTHEIBMSYSTEM 360-370* OPERATING SYSTEM (_S) 5.3.1 Introduction NASTRAN operates asasingle jobstep ontheIBMSystem 360-370 class ofcomputers under _S (Operating System). TheNASTRAN executable iscreated asaPartitioned Data Set(PDS) with each NASTRAN functional link comprising amember ofthePDS. Inaddition tothefourteen (14) functional links, theexecutable PDShasonemember unique totheIBM360configuration that con- trols theexecution oftheother links. This additional member isreferred toastheSuper-link. ThePDSmember name forthesuper-link isNASTRAN, andthemember names forthefourteen functional links areLINKNSOI thru LINKNSI4. NASTRAN execution cntheIBM360-370 involves twolinks incore atatime, theSuper-link (NASTRAN) andacurrently operating functional link (LINKNSxx). Thesuper-link isalways core resident andcontains theNASTRAN driver routine (NASTRAN), NASTRAN I/_package (PACKUNPK, GINO, NASTIO, IOMSG), andtheFBRTRAN I/0packages. Thefunctional links arelocated andloaded as required during execution. Within each functional link, a360dependent control routine with the same name asthelink (LINKNSxx) provides theintermediate entry point forthat link, aswell as thecommunication vector between links. TheSuper-link isalways loaded andentered first; it inturn always calls LINKNSOI (the preface link). From that point onthelink execution sequence isdetermined bySEARCH calls from thecurrently operating functional link which returns control totheSuper-link when another functional link isneeded. This sequence continues until aCALL EXIT within afunctional link returns control to0S. Thedownward calls from thesuper-link to thefunctional links areaccomplished viathe_Slink macro andallintra-link calls areaccom- plished viastandard FORTRAN call statements. 5.3.2 Input/Output Within theNASTRAN program alldata transfer operations between primary andsecondary storage with theexception ofcard, print, plot andspecial input/output areperformed through theGeneral Input/Output Routine (GINO). *The terms SYSTEM 360-370, IBM360, SYSTEM 360, etc. will beused synonymously inthis discussion asNASTRAN execution isidentical onboth theIBM360andtheIBM370computers. 5.3-I (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES A_Inon-GIN9 I/9isperformed through normal FgRTRAN I/9statements. Printed output is generated byformatted output statements toFORTRAN logical units4and6(DDNAME=FTO4FO01 and DDNAME=FTO6FO01). Thisoutput mayberouted asdesired although itnormally appears asasystem output (SYSgUT) class. Theusualoutput fortheNASTRAN execution appears onFTO6FO01 while the RunLogappears onFTO4FO01. Datacardinputisreadbyformatted inputstatements, acard(record) atati_e,fromFORTRAN logical unit5(DDNAME=FTO5FO01). Again, theinputsource maybedesignated asdesired although itnormally appears asthesystem input(SYSIN) unit. Punched cardsare written onFTO7FO01 which normally appears asasystem output (SYSgUT) class. Thetransliteration routine writes itsoutput onFTOIFO01 inaformasindicated inthePRgC giveninSection 5.3.5. OtherFORTRAN datasetsmaybeneeded byuserswhouseutility modules INPUTT2 or9UTPUT2 (seeSection 5oftheUser’s Manual). TheSGINO (Special GINO)plotter output routines within theS/360NASTRAN system function independently ofotherI/0.Unique DDcardswithin theExecution DeckSetup (seeSection 5.3.5) describe therequired output tapefileformats. Twoseparate plotter filesmaybegenerated, one onFgRTRAN unit13andtheotheronunit14. GINg,whichiswritten inassembly language, usestheBasisSequential Access Method (BSAM) to readandwrite blocks ofafixedsizethatmaybeadjusted tofithardware andproblem requirements byusingtheNASTRAN control card. GIN9input/output operations result incalls toGINglO which callsentrypoint 19360inNASTIO todothephysical readsorwrites. Inaddition totheuseoftheStandard BSAMREADandWRITEmacros, NASTRAN usestheNgTEand POINTmacros. TheuseoftheNgTEandPglNTmacros, alongwithfixedblocksizespermits theuse ofthedisksecondary storage inadirect access form,andthrough useofproperly keptlocators permits NASTRAN toaccomplish backspacing across diskboundaries. Itshould alsobenotedthatuse ofBSAMI/9processing permits I/0operations tobeaccomplished directly intheGIN9buffer areas. Asaresult, nodatatransfers takeplace(asopposed toFgRTRAN I/0which doestransfer thedata) andaconsiderable savings ofbothcorestorage andCPUtimeiseffected. Thewayinwhichtemporary storage (scratch files) areallocated inNASTRAN isaby-product oftheI/9method used. NASTRAN usesthreeclasses oftemporary files: primary files, secondary files, andtertiary files. 5.3-2(8/I172)\nNASTRANONTHEIBMSYSTEM360-370OPERATINGSYSTEM(_S) Thefollowingexampledepictsthewayinwhichthisspaceismanaged.AssumeNASTRANdata blocksA,B,C,DandEareofthefollowingsizes: A I0blocks(records) B I00blocks C 210blocks D 625blocks E 72blocks Furtherassumethateachprimaryunithaspreallocated spaceofI00blocksandthateachsecondary unithaspreallocated spaceof400blocks(e.g.,4blocks/track and25tracksallocatedto primariesandI00tracksallocatedtosecondaries). primaryunit 2 u 0 0 0 secondary unit U °I0 C_1 unused m l– unusedl\\\\_._i3 4 5 2T unused4 5 avail- ableavail- able Figure I.SpaceAllocation Diagram ontheIBM360 Intheprevious example, datablocks A,B,andEarecontained intheirinitial primary allocations. DatablockCiscontinued fromprimary unit3tosecondary unitI.DatablockDis 5.3-3(811172)\nNASTRAN-OPERATINGSYSTEMINTERFACES continuedfromprimaryunit4tosecondaryunit2tosecondaryunit3.Notethatsincedatablock Bexactlyfillsprimaryunit2,anyadditional writeoperationwillcauseanextent.Inthiscase, secondaryunit4willbeattachedtoprimaryunit2.“Backspacing acrossDisks”,forexamplefrom blocknumberI01indatablockCtoblocknumberI00,isaccomplished byrecognizing thatblock numberI00isinprimaryunit3andissuingaP_INTtothatblock. Inthisexamplenotertiaryfilesareused.Tertiaryfilesareforthemostpartreserved forextremelylargedatablocksandallsecondaryspaceisexhaustedbeforetertiaryfilesare attached. Unlikethesecondaryfileswhichmaybeattachedtoadatablockandthendetachedwhen thedatablockispurged,thetertiaryfilesremainattachedoncetheyareattachedforthedura- tionofthejob.Onlyafterthetertiaries areexhaustedis_Spermittedtoobtainextentson thedatasetitrecognizes. Throughefficientuseofthisprimary,secondary, andtertiaryfile conceptofallowingNASTRANtoallocateandattachfilesasneeded,theamountofscratchstorage spacecanbegreatlyreduced, andthesystem abendB37canbecontrolled. 5.3.3 LinkSwitchin 9 NASTRAN linkswitching onthe360isperformed bytheSuper-link anddirected bytheSEARCH entrywithin thecontrol routine, LINKNSii, ii:01,02….. 13.WhentheXSEMii subroutine within anoperating functional linkdetermines thatthenextmodule tobeoperated resides ina linkotherthanitsown,therequired linkisrequested through acalltoSEARCH. TheSEARCH call carries anargument naming thelinkrequested. SEARCH branches backtotheSuper-link withthe newlinkname. TheSuper-link executes theLINKmacrotoloadtheproper member andtransfer control intothisnewNASTRAN link. Onlyonefunctional linkatatimewilloccupy the360memory below theSuper-link. Sincethefunctional linksareindividual members oftheNASTRAN Partitioned DataSet,thenumber oflinksisessentially openended. 5.3.4 Overlay Considerations andImplementation ofOpenCore EachNASTRAN functional linkiscreated bythe_SLinkage Editor during thegeneration (SUBSYS) procedure (seeSection 5.3.6). Eachlinkcontains azerolevelorrootsegment andthe series ofoverlay segments necessary toNASTRAN operating logic. Thespecially namedcommon blocks whichdefine thebeginning ofvarious opencoreareasareplaced attheirrequired location by linkage editor INSERT directives. An_Soverlay treefunctions byautomatically loading all 5.3-4 (8/I/72)\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S) segmentsinthebranch between thecallingsegment andthecalled segment. Local FBRTRAN variables andcommon blocks residing within segments arenotcleared atloadtime. Several NASTRAN links contain aspecial typeorigin fortheoverlay tree. Thisorigin is created bydeclaring aparticular segment boundary tobeataregion boundary. This region boundary automatically begins attheendofthelongest branch intheprevious region. Since many links contain aseries ofsmall functional module drivers ofdifferent lengths followed bya structure ofmatrix routines usedbythese drivers, aregion boundary isusually utilized follow- ingthedrivers. Thefollowing sketch illustrates alinkstructure with regions. J4A ITAl;;l………. /_c2/T Regiin A —Region Boundary lRegion B ! Figure 2.Atreediagram foraNASTRAN linkontheIBM360 Notethatsince segment IBwasrequested tobebegun ataregion boundary, the_SLinkage Editor placed itsorigin following thelongest segment (7A)oftheprevious region. Special cautior, mustbeexercised whenoperating within opencoreunder aregion structure. Operations within eachregion areindependent ofo_ler regions. Thus, ifabranch ofsegments within region B,sayIBand3B,isincorebecause ofprevious calls, acallfromregion Ato region B,say5B,will notreload segments IBanl3B.Therefore, ifanopencoreareastarting at_Cl/wereutilized, some oftheprograms within region Bcould bedestroyed without theBS loader’s knowledge. Because ofthispossibility, allNASTRAN opencoreorigins liewithin alower level region. Therefore open corestarting areas suchas/_tl/arenotused inS/360 NASTRAN overlay structures. Because NASTRAN mustoperate onmostmodels ofSystem 360withavariety ofmemory sizes and _Soperating modes, aflexible method ofutilizing allmemory available tothejobisincorporated. 5.3-5 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES Inbothprimary andmulti-programmed environments, theOSloader requests storage fromthecore memory available tothejobthrough the_SGETMAIN macro. 0Sstorage-management routines make sufficient coreavailable, andthelinkisplaced inmemory. Corememory outside ofthatrequested forthelinkisstorage protected bythe0Ssystem. Anattempt tostoreintotheseprotected areas causes aninterrupt andjobtermination. TheNASTRAN opencoreconcept requires useofthoseareas thatareavailable butprotected (ioe., theareabetween thelinkandtheregion boundary). To remove thisprotected status, theNASTRAN initialization program within eachfunctional linkissues aconditional GETMAIN forallremaining memory within thejobregion. Thereturn fromthisGETMAIN specifies theorigin andthesizeoftheblockofcorememory acquired. Asmallportion ofthis blockisreturned (viatheFREEMAIN macro) to0SforuseasFORTRAN 1/0buffers andforotherOS functions. Theremainder ofthismemory ismade,available toNASTRAN byadjusting theuppercore address usedbytheNASTRAN CORSZfunction. AllNASTRAN modules maythusutilize themaximum core memory provided tothejob. 5.3.5 Execution DeckSetup__ Running orexecuting theNASTRAN system onaSystem 360computer oncethegeneration procedure (seeSection 5.3.6) iscomplete requires somebasicknowledge ofthetypeofstructural problem beingsolved andthetypeofoutput requested. Inaddition, thehardware configuration and capacities should beknowninordertomostadequately match theproblem beingsolved tothe computer. Thefollowing procedure should provide thebasicJobControl Language (JCL)necessary forall NASTRAN runs. 5.3-6(811172)\nNASTRAN ONTHE IBM SYSTEM 360-370 OPERATING SYSTEM (BS) Table I. Basic Job Control Language (JCL) for NASTRAN Runs I. II II II II II• II_-PROC PU_,!TS=TFK,Pl=.:5,P2:.,2., StJNI TS=TRK ,$I=C'7 ’,$2=C2-,, TU;,!ITS=C YLtT=:?06 ,T2=?C:, D_CK:Dg;- 313,i_ME=h,STNL M;J[, DLNPLT=I llm— II_— =PEE]C_D. UK_; ,‘ASTPAF II_— II_……………. II_ 2. II_S t\u003cEC 3.IIST.=PLI_ {)l! 4.II_TOI¢,CI 30 Ill 5. IIFTC4F:,I DL’. II 6.//FT,15F_,}OJ. OL’ 7.//FT.3_.F$.r.,1r)D II 8.//FTOTFG_:I DD II 9. //FTIJFO_ DO 10.//FTI’*FU,., 1_1.’, ]]. //INPT C, 12. IIINP_. 0:,’ 13. llihP2 DF_.. 14. /IINP_ C_ 15. IIIN_4 [;_ 16. IIItlP5 CZ, 17. IIINP6 [:) 18.//INP7 O 19.//INP p, OD 20. //INP_ CD 2l. //NPTP O.C 22. IINUu’y- DO 23. II3PTP C’,; 24.I/PLT! CI; I/ 25. //PLTZ L.) /! 26. /!DL),iL C,C. 27. //U_F r 28. //PRI(i Ob 29. I/PPI_2 [[?, 30. /IPRI’,3 ‘?-.,D 31. //PRI CD 32.l/meIJ5 3D 33. //\"I-\"s OC 34. //QI\"7 pr 35. //P:I: ’Pr:=NaST__N,v,LGIC!N=3c, K,fl #E=2 Z UqiT=2_L,VCL=SSR=6DACK,[,ISP=SH_ ,DS_I=SNa\"’[ U,XIT=SYSDA,SP_C_=(CYL,(5,I) l, L;CB=(R ECF#=F_, L_ECL=£; ,-LKSI ZE=728f., .RUFf!O=I| SYS__LJT—A,CCR=(RECF.V=V8A,LPECL=j37,RLKSIZE=l_II, SPA.CE={CYL,(2,Z| ) DDNA\"4E= SYSIN SYSFHJT:\u0026,DC:( RECFN_=VP.A,LRECL=I37_r_LK£IZE=3 L2°), S_ACE=ICYL,(I_;,I) | SYS:UT= R,DC=( PECF.=FR, L_ECL=n,LK’ IZE=£C’) ), SPAC=(CYL(?,I| ) DCN\u0026E=PLTI OJN\u0026‘4E:PLT2 I)S!=MJ[ LFILE,L\u0026BEL=( ,NL),OISP=CL r_ OSL_=!ULL =ILE,L\u0026£EL=(,;’.!L) •][SP=CLt) S_4=i41JLL.–I[.£,L\u0026BZL=( ,.%LI,hISP=CLD L)St4=,:ULL =I[.,LAqEL=(,NL),-3tSP=EL_J bS_.=!,ULL F[[.:,L-t\"L=(,NL) ,ISP=CLO CS=’-!ULLFILE,L;’,P_L=(,r;L),JISP=CiLD 3.£:=r’ULLFIIF,L_P, tL={,NL) ,UlSP=CLD 9£q:’;IJLL_ILk ,L’\u0026u:L:( ,NLI,i_ISP=CL,) 3Ft.,=NULLFIlt,L_q-L=(,NL),OISo=C_Lr) CSN=,‘ULLFIL. r,L_RLL=[ ,NLI,CISP=CL.3 U.NIT=SYSO,L_Sp_CE=(rp,I.ITS (ol,F, p2)),r:‘IFP=(T_4,D;3-) )Sq=,‘4ULLF IL-,L,#EL=( ,‘4LI ,£‘ISP=(t,ZW,P(.SI OSq:’;tJLL, CII.S.,L:BTL=( ,NL) ,.]ISP=SL [,S’q=NULLFILE ,L-\",;E L=(,k’L) , DC4=( ECF’t=U,SLKSIZ_=-I \u003e,4dF,J=I,T_TCH=! ,O:\";’=\u0026.-r LT) [SK=NULI rI1E,L_P..:L=( ,;L|, I.‘C_4=(KECF:.’=I/,,,3LK$ I/.=2e]:;, P’JCM =!,D_N=F,I’E\".’,PL “t\"1 Ut.‘IT=SYS!A SP;C ==([PU,.. TS,(P_L, ;D2) ) OS’,=’.ULLFIL£,L’-‘PFL=( ,NL|,r’ISF=CLO UNIT=SYSbA,SPACE=(PU:41T, (CP] ,r,p) U.\"IT:SYSD_SPCCE=(P[Y41TS, |[,PI,Fn2) !P;IT=SYS[L SP.C= (F.PI,J”ITS,(F.PI, F.,2) UNIT=SYSI2A,SP;Cc:!So[J:41TS, (£mi,£Pg) !I’IT=SYSgA_SP_CE=(CaU’.IT,(EPI,£P) El,tT=SVb\", SP\"C[=(£l.J’-J ITS,(£F!,,,’;P£) UNIT=SYSD;.,SP_C =([#U:4I’S, (£PI, £P/) ilblT=SYSC,,SP’-L; =(Er\u003e!JHi IS,(6Pi,F._2 } 5.3-7 (8/I!72)\nNASTRAN - OPERATING SYSTEM INTERFACES Table 1. Basic Job Control Language (JCL) for NASTRAN Runs (Continued) Ell UNIT=SYSdA,SP4Ck=(\u0026PU%IT$,(EPl,\u0026P2)) CD UNIT=SYSCIa9SPACE=( \u0026PIII\\IITS, ( GPlr CPZI ) CD U%IT=SYSDC,SPCC=( CPUIJITS, I: \u0026Pi,\u0026P2)) ED UYIT=SYSD4,SPCE=(\u0026PUhITS,(EPI\u0026P2lI ED U\u0026IT=SYSOb,SPACE=(EPUNITS~(EPlt\u0026PZI) CG UNIT=SYSDArSPACE=( EPUFJITS9 (EP1 9Gp2 1 I DD UNIT=SYSDA,SPACE=(\u0026DUNITS9(\u0026Pi~\u0026P2~) CD UNIT=SYSDP,SPACE=( KPUtJITS, ( EPl9GP2 )I CD UNIT=SYSDA,SPGCF=(\u0026PU?qi rS9( \u0026PI,\u0026P2) ) OD UNIT=SYSDA,SPhCE=( EPU!dITS? I EPl9C,P2 I ) DD UNIT=SYSC)A9SPACE=IGPUI:ITS9( EPlrCP2) I CC UN IT=SYSDASPkCE=(\u0026PJfJITS~ ( EPlo hP2f ) DO UY IT=SYS9i9SPhCE=(CPUQITSt (EPlEP21 I CD UNIT=SYS~~~SPCE=(\u0026P~~;\\JITSV(\u0026P~,P)) I39 UNIT=SYSOAv5PACE=t CPUi’JITSt ( \u0026PI 9GPZ I1 CD UNIT=SYSDASPACE=( EFLIIJI iSv (\u0026P19 EPL) 1 CD UhIT=SYSDAsSP\u0026Ct=(\u0026PUIITSr(\u0026P1EP2)l CD UNiT=SYSD.SPACE=(\u0026VUNITSv(\u0026Plq\u0026P2)t OD Uh!IT=SY5'9A,SP!iCk=( EPU%ITS, (F;PL EPZ 1 ) 00 UNIT=SYSOAqSPCCE=IEVUUITS, (\u0026Plo\u0026PZi) CD UWIT=SYSDSPACF=(FP~‘IGITS, (EP1 vCP7I ) O'3 UPiIT=SYSDCvSPhCE=( EPUhIT59 ( EP19 LPZ I) CO U~!IT=SYSDA7SPACC=(FPUI TS, (EPlqCP2 J f DL IIY IT=5YSDb qSPACE.=( ‘PlJUI TSq ( \u0026PI 7 \u0026P2 ) t DL JR’IT=SYS:JA*SPACF=( FDlJQIT59 (\u0026Pi ,\u0026P2) t DO U’YIT=SvSDA,SPACL=( tSUhITSq (ES19F.52)) DD L~~~IT=SSDAVSPGCE=(ESU~ITS~ ( FSi ,tSZ) I 00 UhIT=SYS3a ,SD\u0026CE=( \u0026SUhI TS* ( ES1 tES2) I 00 UhlIT=SYSQC,SPhC’=( E5IIYI 759 (ES19CSZ I I DD UNIT=SYSr)firSPLCE=( GSIJNITST (FS1 9 ESZ j 3D UFJIT=5YS’)SPGCF=(CSlJUITSt(\u0026S1,\u0026S2 CD UhIT=SY5D,SD4Ci=(\u0026SUNITS9ESitKS2)l DD UkIT=SYS3\u0026rSf’ACk=( \u0026SUkI TS9 (LS1 rES2 t ) DD UWIT=SSL)A,SPCE=(\u0026SUIIT~,(\u0026S~,~~~I) OD UR,IT=SSDAvSP3C=(F,SUI~ITS~(\u0026SlrhSZ~) 110 Uh:Ir=SYSSrkrSpriiC=(CSUr41 is9 (651 ,\u0026S?) 1 30 UhlIT=SYSDA,SPCCi=(ESUY!TS9 ( GSl r\u0026S2) I DD UNIT=SvSDA,SPkCF =( f,SUhI TS. ( ESI P \u0026SZ I t on ur~~~=ssrost.c~-=csu~~~rs,rs~,sz ED UNIT=SY\\rF,,SPLt=(\u0026Slli\\lITS~(\u0026S1ES211 3D UYIT=SYSCAvSPICE=( \u0026TIJhlITS9 (\u0026TI ,\u0026T2) DU UNI-T=SYS)P,,SPAC~=CTUNITS,(ET,ETZII DO UWIT=SYSGISPCE=(\u0026TUIT~~~ETIET~)~ OD UJIT=SYSDArSPCE=(\u0026TUtdITS, (\u0026TI e\u0026TZI I 30 SY51bT=ncnCS=( aECFM=Ve.rtv LkECL=lL59BLK,C I7F=I $?? 1 .———————————————————— EN9 SF PP(‘1CtD~JKC - – .————————————————————\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (IBS) Eachcardorgroup ofcards within theNASTRAN procedure isdiscussed byitembelow. The itemnumbers match those along theleftmargin ofthepreceding decklisting. Item I. thesymbolic parameters. SYMBOLIC DEFAULT PARAMETER VALUE PUNITS TRKDescription ThePR_Ccarddefines thenameoftheinstream procedure andsetsdefault values for P1 15 P2 20 SUNITS TRK Sl 7O $2 20 TUNITS CYL Tl 06 T2 5 PACK D00313 NAME NSTNLMBD DENPL_T lDESCRIPTION Defines thespace allocation units fortheprimary files. Defines theinitial space allocation fortheprimary files. Defines theincrement space allocation fortheprimary files. Defines thespace allocation units forthesecondary files. Defines theinitial space allocation forthesecondary files. Defines theincrement space allocation forthesecond- aryfiles. Defines thespace allocation uniss forthetertiary files. Defines theinitial space allocation fortertiary files. Defines theincrement space allocation fortertiary files. Defines theVolume Serial number ofthepack thatthe executable ison. Defines thedatasetnameoftheexecutable. Defines thedensity oftheplottape. 2.TheEXECcarddefines thenameoftheprogram tobeexecuted, NASTRAN, theregion size inwhich NASTRAN istobeexecuted, andthesteptime. 3.TheSTEPLIB carddefines thedatasetnameandthelocation oftheexecutable. 4.TheFTOIFOOI DDcarddefines thedatasettobeusedasintermediate storage for NASTRAN input. BCDorEBCDIC card images arereadandconverted toBCDcardimages and written onunit l,thenNASTRAN reads itsinput fromunit I. 5.3-9 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.TheFTO4FO01DD carddefines thedatasetthatwillcontain therunlog.TheNASTRAN runlogcontains internal timing forNASTRAN andatraceofthemodules thatareexecuted in anexecution. Itisusually assigned toaprinter (SYS@UT=A); however, itmaybeassigned to anydevice orsettodummyandthereby deleted asdesired. 6.lheFTO5FO01DD cardisdeferred bytheuseoftheDDNAME=SYSIN parameter andwillbe discussed intheexample forfollows. 7.TheFTO6FO01DD carddefines theprinted output fromtheNASTRAN run.Thisprinted output iswritten inBCD.AswithFTO4FO01, itcanbemodified atexecution timebythe userasdesired. 8.TheFTO7FO01DD carddefines thepunched output fromNASTRAN executions. Itcanbe modified asdesired. 9,TheFTI3FO01DD cardisdeferred bytheuseofDDNAME=PLTI (seeItem24). I0.TheFTI4FO01 DDcardisdeferred bytheuseofDDHAME=PLT2 (seeItem25). IIthru20. These DDcardsdefine datasetstobeusedasusertapes through theuse ofINPUT2 andBUTPUT2 routines. Allhavetheparameter DSN=NULLFILE which restricts _S fromallocating themunless theyaresupplied asoverride JCL. 21.TheNPTPDDcardisusedtodescribe thenewproblem tape(checkpoint tape)tobeused byNASTRAN. Itissetupasatemporary fileandshould beoverridden ifitistobesaved forlateruse. 22.TheNUMFDDcarddescribes thenewusermaster filethatistobecreated inthe current NASTRAH execution. ItissettoDSN:NULLFILE, andmustbeoverridden ifneeded. 23.TheBPTPcarddefines theoldproblem tape(previous checkpoint tape)fortheNASTRAN run.ItmustexistpriortotheNASTRAN runinwhich itisused,andinthisprocedure DSN=_WLLFILE mustbeoverridden before theOPTPcouldbeusedtoretrieve data. 24.ThePLTIDDcarddefines theoutput datasetcontaining EAIorBenson Lehner plotting data. 5.3-10 (8/I/72)\nNASTRANONTHEIBMSYSTEM360-370OPERATINGSYSTEM(BS) 25.ThePLT2DDcarddefinestheoutputdatasetcontaining theSC4020,CalcomporDD80 plottingdata. 26.TheP_LDDcardsdefinethedatasettobeusedastheDataPoolfile.Itisalways presentandreferstotemporaryscratchdisk. 27.TheUMFDDcarddefinesthedatasetthatcontainstheusermasterfiledatatobe inputtoNASTRAN.Itmustbespecifiedifitisneeded. 28thru60.TheseDDcardsdefinetheprimaryunitstobeusedbyNASTRANastemporary workingfiles. 61thru75.TheseDDcardsdefinethesecondaryunitstobeusedbyNASTRANastemporary workingfiles. 76thru79.TheseDDcardsdefinethetertiaryunitstobeusedbyNASTRANastemporary workingfiles. 80.TheSNAPSHOTDDcarddefinesthedatasetthatcontainsthediagnostic dumpifNASTRAN takesauserabort.Itisassignedtotheprinter. 81.ThePENDcardsignifiestheendofaninstreamprocedure. Itshouldberemovedbefore theJCLisplacedonthePR_CLib. AsampleNASTRANexecutionwiththeinstreamprocedurecouldbe: //NASTRAN J_B…………. {Instream }Procedure Deck //EXECNASTRAN //NS.SYSlNDD* INASTRAN InputIDeck /* 5.3-II (8/I/72)\nNASTRAN-OPERATINGSYSTEMINTERFACES Thefollowingrestrictions forLevel15shouldbenoted:I)Onlyonetypedirectaccess device(2314)isallowedforprimary,secondaryandtertiarystoragefiles.2)Plottapesmustbe 7-tracktapes;anyremainingtapes(problemtapes,UMF,etc.)maybe7or9trackastheuser desires. TheNASTRANexecutiondecksetupispresentedasaninstreamproceduresuchthatitmaybe verifiedbeforeadditiontotheinstallation procedurelibrary(PROCLIB)topermiteasyrecalland reuse. TheprocedureprovidedisintendedforuseonanIBM360computeroperatingunderstraight _S.Itshouldbereviewedforeachinstallation priortoactualuse.Amongtheitemsthatmay necessitate modification oftheprocedurearethefollowing: I.Anymodification tothestandardIBM_Soperatingsystemcouldmakemodification ofthePR_Cnecessary. Forexample,allSYS_UT=AandSYS_UT=Bdatasetsareprovided withDCBinformation andspaceallocation. Ifaparticular installation isusingH_SP (HoustonAutomaticSpoolingSystem),itbecomesnecessarytoremovetheDCBparameters andthespaceallocation isnolongerneeded.Similarmodifications willbenecessary whenrunningunderASP(Auxiliary SupportProcessor) orrelatedsystems. 2.Thisprocedureshouldbereviewedandchangedforanyinstallations thathave otherthan2314diskunitsdefinedforSYSDAdatasets.Theprimary,secondaryand tertiaryfilesaresupportedonlyforthe2314diskfacility. Theresultsofusing othertypesofDASDunitsareunpredictable butusuallydisastrous. 3.Theprocedureasprovidedhastemporaryscratchfilespacesufficient forsmall tomediumsizeproblems. Mediumtolargeproblemswillrequire theinitial space allocation forprimary andsecondary filestobedoubled (PI=030, SI=140), while very largeproblems often taxtheresources ofthecomputer andmustbedealtwithonan individual basis. 4.Ifthenumber ofDDstatements intheprocedure istoogreat, itmaybereduced (atsomecostinperformance) asfollows withthemostexpendable datasetslisted first: 5.3-12 (8/I/72)\na. b. c. d. 5.3.6 Physical 5.3.6.1NASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (0S) INPT,INPI,INP2,—,INP9,NUMF,PTP,UMF,PLTI(and FTI3FO01), PLT2(and FTI4FO01). ThesedatasetsarenotusedbyNASTRAN unless requested bytheuserthrough hisdata. TEROI,TER02,—. Tertiary filesmaybeeliminated ifcareful thought is giventotheselection ofthespaceallocation parameters P1andSI. Thesecondary files (SECOI,SECO2,—SECI5) maybecutbacktoasingle one(SECOI) aslongasenough spaceispre-allocated fortheprimary files (PRIOI,PRI02,—) toruntheproblem. Itisrecommended thatatleast fourorfivesecondary filesberetained, however. Thenumber ofprimary files(PRIOI,PRI02,—) canbecutbacktoa minimum number whichwillbeproblem-dependent. Forstatic analysis this number isaround 25.Thisisnotrecommended because theprogram willbe forced tocopydatablocks toandfromtheP_BLfileinordertofunction witharestricted number ofprimary files. ItemsandGeneration ofNASTRA.I Executable System Description ofNASTRAN Physical Items Thefollowing eleven tapesrepresent theofficial NASTRAN Level15delivery toNSM. They areall800BPI,unlabeled, 9-track tapesprepared bystandard IBMutilities (IEHMBVE, IEBGENER, orIEHDASDR). Alltapesother thantheIEHDASDR tapesaresingle filetapeswithaDCBof: DCB=(RECFM:FB, LRECL=80, BLKSIZE=8OO,DEN=2). TheIEHDASDR tapescontain twofilesspanning two volumes withaDCBof:DCB=(RECFM=U, BLKSIZE=7294,DEN=2). T_apeNo. Created by DataSet Description 1 IEHM_VE DEM_DATA 2 IEHM_VE NSTNLMBDDatasetcontains 50members whichare theinputforthe50official demonstration problems. Therestored PDSthatresults fromthistapehasthefollowing DCB: DCB=(DS_RG:P, RECFM=FB, LRECL=80, BLKSIZE:7280). Itrequires 44tracks of 2314diskstorage and3directory blocks. Datasetcontains 15members. Thiscon- stitutes theNASTRAN executable. The restored PDSthatresults fromthistapehas thefollowing DCB:DCB=(DS_RG=P_, RECFM=U, BLKSIZE:7294). Itrequires 1028 tracks of2314diskstorage and3directory blocks. 5.3-13 (811172)\nNASTRAN-OPERATINGSYSTEMINTERFACES I0\u0026IICreatedby IEHM_VE IEHM_VE IEHM_VE IEHM_VE IEHMOVE IEBGENER IEHM_VE IEHDASDRDataSet OBJ S_Ul S_U2 S_U3 SUBSYS UMFINDTA UTILMODS D00313Description Datasetcontains 843members whichareload modules ofeachindividual subroutine with unresolved external references intheformof acalllibrary tobeinputtotheLinkage Editor. Therestored PDShasthefollowing DCB:DCB=(DS@RG=PO, RECFM=U, BLKSIZE = 7294). Itrequires 567tracks of2314disk storage and121directory blocks. Datasetcontains 808members. Itisthe NASTRAN machine-independent F@RTRAN source code. Therestored PDShasthefollowing CDB:DCB=(DS_RG=P_, RECFM=FB, LRECL=80, BLKSIZE=7280). Itrequires 2015tracks of 2314diskstorage and29directory blocks. Datasetcontains IImembers. ItistheIBH 360machine-dependent F_RTRAN source code. Therestored PDShasthefollowing DCB: DCB=(DS_RG=P@, RECFM=FB, LRECL=80, BLKSIZE= 7280). Itrequires 7tracks of2314disk storage andldirectory block. Datasetcontains 25members, whicharethe Assembly Language routines usedbyNASTRAN. Therestored PDShasthefollowing DCB: DCB=(DS@RG=P_, RECFM=FB, LRECL=80, BLKSIZE=7280). Itrequires II0tracks of 2314diskstorage and2directory blocks. Datasetcontains 15members which arethe linkage editor control cardscorresponding tothe15members ofNSTNLM_D. Therestored PDShasthefollowing DCB:DCB=(DS@RG=P@, RECFM=FB, LRECL=80, BLKSIZE=3200). Itre- quires 26tracks of2314diskstorage and1 directory block. Datasetisasequential datasettobeinput toNASTRAN tobuildanewUMFtape. The datasetmaybeinputdirectly fromtapeor stored ontheNASTRAN pack. IthasaDCBof DCB=(RECFM=FB, LRECL=80, BLKSIZE=800, DEN=2) asdotheIEHM_VE tapes; however, it maybeblocked upto7280whenplaced onthe 2314diskpack. Itwillthenoccupy 141 tracks of2314diskstorage, Datasetconsists of4members. Theseare programs usedauxiliary toNASTRAN forcheck- outandmaintenance. Therestored dataset hasthefollowing DCB: DCB=(DS_RG=P_, RECFM=U, BLKSIZE=7294). Itwilloccupy 16 tracks of2314diskspaceand3directory blocks. Thesetwotapes_onstitute an800BPIIEHDASDR packdumpandconaintheprevious 9datasets. Whereusable, thisformwillsave80%ofthe computer timerequired forrestore thenine datasetsfromtheIEHM_VE andIEBGENER tapes. 5.3-14 (8/I/72)"},"title":"Programmer's Manual P78"},"/docs/programmers/programmers_manual_079/":{"data":{"":"NASTRANONTHEIBMSYSTEM360-370OPERATINGSYSTEM(S) 5.3.6.2 Installation ofNASTRANPhysicalItems Partitioned datasetstoberestoredbyIEHM_VEshouldbepre-allocated onthepack.Todo this,usethefollowingJCL(NSTNLM_Disusedhereasanexample): //ALBCAT EXEC //XXX DD // /*PGM=IEFBRI4 UNIT=2314,VBL=SER=xxxxxx,DISP=(NEW,KEEP),DSN=NSTMLMBD, SPACE=(TRK,(IO28,,3)),DCB=(DS_RG=P,RECFN=U,BLKSIZE=7294) Thefollowing JCLmaybeusedtorecreate thepartitioned datasetsunloaded byIEHMBVE. ThisJCLcanbeusedfordatasetsDEM_DATA, NSTNLM_D, BBJ,S_UI,S_U2,S_U3,SUBSYS, andUTILMBDS. WhenusingthisJCLforSBUIand_BJitwillbenecessary toincrease theinitial spaceallocation to80tracks ontheUNIDDcardandaddaPARM=‘POWER=2’ option totheIEHMBVE EXECcard. //ALL EXEC //UNI DD //MBV EXEC //SYSPRINT DD //SYSUTI DD //DDI DD //TAPE1 DD // // //SYSIN DD C_PY /JCI_FORIFIIMI_VE PGM=IEFBRI4 UNIT=2314,DISP=(NEW,DELETE),SPACE=(TRK,(40)),,CBNTIG) PGM=IEHMBVE SYS_UT=A UNIT-2314,V_L=REF=.ALL.UNI,DISP=_LD UNIT=2314,VBL=SER=xxxxxx,DSN=NSTNLM_D,DISP=(_LD,PASS) UNIT=2400,V_L=SER=zzzzzz,DISP=LD,LABEL=(,BLP), DCB:(RECFM=FB,LRECL=80,BLKSIZE=8OO,DEN=2), DSN:NSTNLM_D PDS=NSTNLM_D,FR_M=2400=zzzzzz,T=2314=xxxxxx,FRBMDD=TAPEI Thefollowing JCLmaybeusedtorestore theLevel 15archive packwhichincludes allofthe ninedatasetspreviously described fromtheIEHDASDR packdumptapes. JCLFORIEHDASDR //RE313 EXEC PGM=IEHDASDR //SYSPRINT DD SYS_UT=A //TAPE DD UNIT=2400,V_L:SER=(bbbbbb,cccccc),DISP=_LD, // DSN=DO0313,LABEL=(,BLP),DCB=DEN=2 //DISK DD UNIT-2314,VBL:SER=aaaaaa,DISP=LD //SYSIN DD * RESTBRE FR_MDD=TAPE,T_DD=DISK,CPYV_LID=N /* After preparation ofthearchive pack,either byprocessing theninedatasetsindividually orbyprocessing themthrough IEHDASDR asapackdump,theNASTRAN program maybeexecuted by theinstream procedure provided. Careshould betakentoinsure thattheinstream procedure provided doesnotconflict withanyrequirements placed ontheuserbyhisparticular installation. 5.3-15 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.3.6.3 Generation oftheNASTRAN Executable System (SUBSYSING) Thefollowing Instream Procedure wasusedtoproduce theindividual linksoftheNASTRAN executable (NASTNLM_D) ontheIBM360: Table2.BasicJobControl Language (JCL)forNASTRAN SUBSYSING I.//JPRPLINK PR_CN=I,LM_D=NSTNLM_D,PACKI=DOO313,PAKLMOD=DO0313, // PACKS=DO0313 //* //—LINKEDIT THE_VERLAY STRUCTURE FORTHELINKSPECIFIED— // 2.//LLLL EXECPGM=IEWL,PARM=‘MAP,LET,BVLY,LIST,SIZE:(230K,O62K) ’ // REGI_N=3OOK,TIME=5 3.//SYSPRINT DDSYSOUT:A,DCB=(RECFM=FBM,LRECL=I21,BLKSIZE=I210), 4, 5. 6. 7. 8.// //SYSUTI //SYSLIB //LIB //SYSLIN //SYSLMOD //* //SPACE=(CYL,(IO,I)) DDUNIT=SYSDA,SPACE=(7294,(80,20)),DCB=BLKSIZE:7294 DDDSN=SYSI.FORTLIB,DISP=SHR DDUNIT=2314,VOL=SER=\u0026PACKI,DISP=SHR,DSN:_BJ DDUNIT=2314,VOL=SER=\u0026PACKS,DISP=SHR,DSN=SUBSYS(\u0026N) DDUNIT=2314,VOL=SER=\u0026PAKLMOD,DISP=_LD,DSN=\u0026LMBD PEND Eachcardwithin theNASTRAN procedure isdiscussed byitembelow. Theitemnumbers match thosealongtheleftmargin ofthepreceding decklisting. Itern I.Description ThePROCcarddefines thenameoftheinstream procedure andsetsthedefault values forthesymbolic parameters. SYMBOLIC DEFAULT PARAMETER VALUE DESCRIPTION N 1 Defines thelinktobecreated bythisexecution of thelinkage editor. Thedefault valueissetto1 andwillproduce aJCLerrorunlessitissupplied. LMOD NSTNLM_D Defines thenameofthepreallocated datasetto contain thelinkage editor output loadmodule. PACK1 DO0313 Defines thepackthatcontains theindividual sub- routine loadmodule library (_BJ). PACKLMOD DO0313 Defines thepackthatcontains thepreallocated data setthatistocontain theoutput ofthelinkage editor. PACKS D00313 Defines thepackthatcontains thelinkage editor control cardsforeachlinkasmembers ofaPDSsuch thateachmember corresponds toamember oftheLM_D dataset(NSTNLM_D). 5.3-16 (8/I/72)\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S) Item Description 2. TheEXECcarddefines theprogram tobeexecuted, thelinkage editor (IEWL) andthe options selected (PARAM), aswellastheregion (30OK) andthesteptime(5Min.). 3. TheSYSPRINT DDcarddefines theprinter output dataset. 4. TheSYSUTI DDcarddefines thetemporary workdatasetforIEWL. 5. TheSYSLIB DDcarddefines thesystem library containing theF_RTRAN support modules available totheF_RTRAN programs. 6. TheLIBDDcarddefines theloadmodule library whereeachsubroutine haspreviously beencompiled andlinked independently. 7. TheSYSLIN DDcarddefines thelinkage editor control dataset(SUBSYS). 8. TheSYSLM_D DDcarddefines theoutput loadmodule forthelinkage editor. Thisprocedure assumes thatallnecessary NASTRAN subroutines havebeenpreviously compiled andlinked individually asmembers ofthepartitioned dataset_BJ.Also,theoutput partitioned\" dataset(NASTNLM_D) forthecompleted executable system mustbeavailable. Thelinkage editor control datasetisassumed tobeonthepartitioned datasetSUBSYS withonemember correspond- ingtoeachmember oftheexecutable NSTNLM_D PDS.Theseconditions willresult iftheNASTRAN system isrestored according toSection 5.4.6.2. 5.3.7 Machine Dependent Routines Theroutines discussed inthissection consist ofthoseprograms unique totheIBM360or thoseroutines which areimplemented differently ontheIBM360.Thelanguage foreachdeckis indicated bytheletter FfortheF_RTRAN decksortheletter Afortheassembly language decks following thedeckname. GIN_andGIN_related routines arediscussed inSection 5.3.8. 1•EJDUM2 (A) EJDUM2 initializes andestablishes opencore(seeSection 5.3.4). functional linkexcept LinkIoItisusedforeach 5.3-17 (8/I/72)\nNASTRAN-OPERATINGSYSTEMINTERFACES 2. 3.MAPFNS (A) Inaddition tothestandard functions described inSection 3,thefollowing wereadded: a.TDATE(L_C) Subroutine TDATEreturns thedateinathreewordinteger arrayL_Cwhere: L_C(1)=Month L_C(2)=Day L_C(3)=Year b.WHEN(WCLOCK) Subroutine WHENexecutes the0STIMEmacro, which returns timeinseconds aftermidnight. Theinitial callsavesthetimewhich isthenusedto calculate theelapsed time. WHENreturns thetimeininteger seconds after theinitial call. Co d, e°N_W(TTIME) TheN_Wroutine initializes andusertheinterval timeronS/360configurations withthetimeroption. NOWsetsandinterrogates theinterval timerthrough theSTIMER andTTIMER _Smacros. TheSTIMER macroisexecuted withtheTASK option whichspecifies thatthetimeristooperate onlywhenthetaskis active. Thishastheeffect ofmeasuring theCPUoperation timeforaparticular task. N_Wreturns thetimeininteger seconds fromtheinitial call. PDUMPX(SWITCH) Subroutine PDUMPX through execution oftheSNAPmacroproduces aproblem program memory dumporatracetabledepending onthevalueofSWITCH. SWITCH=I -Produces acomplete problem program dump. SWITCH=O -Produces onlyatracetable Theresulting dumportracetableisoutput ontheSNA_3;:?Td_taset. TYPWRT(MESSAGE) Thissubroutine willprintuptoeighty-character messages ontheoperator console defined inthevariable MESSAGE. f. DUMPME Subroutine DUMPME produces adumpoftheproblem areaofcoreandterminates therun. TYP_UT (A) TheTYP_UT routine isusedtoprintaneighty-character message onthetypwriter. 4.¸WALTIM (A) Subroutine WALTIM executes the_SmacroTIMEandreturns thetimeofdayininteger seconds aftermidnight inthecalling argument variable. 5.CDMPBD (F) CDMPBD isablockdataroutine toinitiate thecommon block/CDCHPX/. 5.3-18 (8/1/72)\nNASTRANONTHEIBMSYSTEM360-370OPERATINGSYSTEM(BS) 6.C_NMSG(F) ThisroutinehasseveralentrypointsotherthantheprimaryentrypointC_NMSG. Thedescription oftheentrypointsfollow. a.C_NMSG(BUF,N,K) Theprimaryentrypointforthisroutine,CBNMSG,isusedtowritemessages ontheoperator’s consoleandonunitfourrunlog.Themessageisdefined bytheinputvariableBUF,thelengthofthemessageisdefinedbythevariableN,andKisusedasaswitchtodeterminewhetherthemessageistobewrittentotheoperator’s consolewhere: K:ODonotwritemessageonconsole K#OWritemessageonoperator’s console b.DUMP TheDUMProutine callstheDUMPME routine described underMAPFNS above toterminate therun. c.PDUMP ThePDUMProutine callsthePDUMPX routine described aboveunderMAPFNS andproduces adumportraceback depending onwhether DIAG1issetornot. IfDIAG1issetafulldumpisproduced, otherwise onlyatraceback is produced. d.CL_CK, BPRMES, REWNLD Thesethreeroutines aredummyroutines only. Theyareincluded hereto avoidhaving unresolved external references fromthelinkage editor, and arenotusedinNASTRAN ontheIBM360. e. KL_CK(ITIME) TheKL_CKroutine usestheN_Wroutine described underMAPFNS abovetoreturn theCPUtimeininteger seconds inthevariable ITIME. f.SECOND(TIME) TheSECOND routine usestheN_Wroutine described underMAPFNS aboveto return theCPUtimeinthefloating pointvariable TIME. 7.CORSZ (F) Theinteger function C_RSZcallsthefunction XCBRSZ inMAPFNS andreturns thelength ofopencore. Thevalueofthefunction isprinted onunitfourifDIAG13issupplied. 8.DCMPBD (F) DCMPBD isablockdataroutine toinitialize the/DCBMPX/ common block. 9.I_MSG(F) TheI_MSGroutine isusedbytheNASTIB routine, described inSection 5.3.8, to write themessages needed bythatroutine. 5.3-19 (8/I/72)\nNASTRAN-OPERATINGSYSTEMINTERFACES I0.PMESG(F) The_PMESGroutine callstheTYPOUT routine described abovetowritemessages on theoperator console. II.PXIT36 ThePXIT36 routine isexecuted attheendofeachNASTRAN runinordertoinsure theprintbuffers areflushed properly. 12.SEMTRN (F) TheSEMTRN routine isusedtoconvert NASTRAN datacardsthatmaybeineither BCD orEBCDIC totheBCDcardimages acceptable toNASTRAN andoutput themontounit1 whereNASTRAN processing canreadthem. 13.TAPSWI (F) TheTAPSWI routine provides formulti-volume processing inNASTRAN. Whenprocessing a tapeandanE_Vindicator issensed, thisroutine writes amessage totheoperator, unloads thefirsttapeandpauses topermit theoperator tomount thenexttape. 5.3.8 GINB(Generalized Input/Output Processor forNASTRAN) TheGIN_package fortheIBM360consists ofthefollowing twodeckswithentrypoints as indicated. DECK GIN_ENTRYPOINT PEN CLBSE READ WRITE BCKREC FWDREC E_F SKPFIL NASTI 10360 Documentation forGIN_andthecalling sequence foritsentry points areessentially machine independent andarediscussed inSection 3oftheProgrammer’s Manual. Thedocumentation for NASTI isunique totheIBM360andisprovided asfollows: 5.3-20 (8/I/72)\nNASTRAN ONTHEIBMSYSTEM360-370 OPERATING SYSTEM (S) Pur_4rE Toperform I/_operations forNASTRAN filesusingtheBasicSequential Access Method (BSAM). Calling Sequence CALL I0360(BPC_DE,BL_CK), where _PC_DE =theoperation codefortheoperation tobeperformed according tothefollowSng list: I.-Rewind 2.-Write 3.-Read 4.-Backrec 5.-Forward rec 6.-Open 7.Close 8.-Reread I0.-Unload BL_CK =TheGIN_Reference Number ofthefilebeing processed. Additional communication isaccomplished through theuseoftheI_TABLE. TheI_TABLE isatable defined inNASTIO (like acommon block) which isinitialized byGNFIAT anduse byNASTIB. Thecontents areasfollows: I_TABLE DS H DS H DS H DS H DS H DS H DS H DS H DS H DS H DS H DS H DS H DS A DS A DS A DS A DS A DS H DS H Thistable isBLKSIZE INBYTES ISTUNITREFNO.–PERMANENT UNITS PRIMARY UNITS SECONDARY UNITS TERTIARY UNITS NUMBER BFUNITS –PERMANENT PRIMARY SECBNDARY TERTIARY NUMBER _FBLOCKS °-ISTALLBC –PRIMARY SECONDARY 2NDALL_C –PRIMARY SECBNDARY NUMBER FDECB’S ADDR_FFILEC_NTRBL BL_CKS (FCB) ADDR_FDATACBNTR_L BL_CKS (DCB) ADDRBFDATAEVENT C_NTRBL BL_CKS (DECB) NUMBER FBLBCKS PERTRACK DCBLENGTH INBYTES DECBLENGTH INBYTES onlyreferenced byNASTI andGNFIAT. Method TheNASTI routine performs transfers ofrecord blocks between main storage and secondary storage andperforms positioning ofsecondary storage devices. AllI/_operations 5.3-21 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES areperformed usingthemacros oftheBasicSequential Access Method (BSAM) suchasOpen, Close, Read,WRITE, CHECK, N_TE,andP_INT. Fields oftheappropriate FCBareupdated for eachoperation. Someexamples ofcallchains forNASTIO are: Level 0 1 2 3 4 User_ ZBLPKI_ QWRITE_ I_360_ (BSAM) User_ ZNTPKI_ QREAD–_ I_360_ (BSAM) User_ INTPK_ READ 19360 (BSAM) user_ WRITE_ I_360_ (BSAM) Note: 1ostcallsareserviced atlevels 1and2. Callstolevel3occurwhenablockistobetransferred between mainandsecondary storage. Allcallstolevel3result inatleastonecalltolevel4. Itshould benotedthatwhenawriteoperation isscheduled whichwould exceed thespace allocated totheunit,thepoolofsecondary unitsisexamined tofindanavailable unit. If aunitisavailable, itisattached totheprimary, andthewrite operation ismadeonthe secondary. Correspondingly, ifasecondary unitfills, another secondary unitisattached. Onlywhenallsecondary unitsarefilled doesNASTRAN attach atertiary unit,ifavailable, andonlywhenalltertiary unitsareuseddoes_Srequest anextent. Itshould alsobe notedthateachtimeafileisopened towritewithrewind, allsecondary unitspreviously assigned tothefilearereleased andmadeavailable forfuture assignment tootherfiles (datablocks). 5.3.9 S_pecial ErrorCodesfromNASTRAN ontheSystem 360 Oneofthefollowing twotypesoferrorcodeswillaccompany anyabnormal end(ABEND) output fromNASTRAN operating under_SontheIBMSystem 360: I.SYSTEM =XXX WhereXXXisan_Scodedescribed intheIBMSystem Reference Library (SRL), Form 628-6631, titled IB,I_S_(stem/360 O__era_ting_g ten Mes_saqesandCoa_s_. 2.USER=YYY WhereYYYisaHASTRAN codedescribed asfollows: 5.3-22 (8/I/72)\nNASTRANONTHEIBMSYSTEM360-370OPEP_TINGSYSTEM(S) USERCODE SUBROUTINE 001 NASTRAN 002 GNFIAT 003 GNFIAT 004 GNFIAT 005 EJDUM2 009 GNFIAT 012 MAPFNS 401 NASTIB 601 GINB 602 GINB 603 GIN 608 GINB 610 GINB 690 PACKUNPK 777 MAPFNS 900 NASTIB 901 NASTIB 902 NASTI_ 904 NASTIB 905 NASTIB 906 NASTI_ 907 NASTIB 984 GIN_CAUSE Alinknamehasbeenrequested thatisbeyond therangeof thoseavailable. Insufficient coreforNASTI_. Corerequirement forNASTI_ equals 26timesthenumber ofnon-dunTny DDstatements. Insufficient coretorelease thecoreto_Sthatisnecessary forF_RTRAN. Core isdiscontinuous. Insufficient core. TheSPACE parameter inaDDstatement foraprimary or secondary file wasnotcoded CYLorTRK. DUMP wascalled. Space forData Event Control Blocks hasbeen exceeded. Increase MAX_PN parameter onNASTRAN card. Block number check failed. Block number check failed. Incorrect return from MESAGE. Premature endofrecord segment. Premature endofrecord segment. Badorder ofrowdescriptors. SNAP macro failed. Block number check failed. Block nu_er check failed. Nounit associated with block nun_er. Block number check failed. Nounit associated with block number. I/output inprogress atthewrong time. Nounit associated with block number. User executed aCALL WRITE with anegative word count. 5.3.10 System 360FBRTRAN Compilers usedforNASTRAN AllNASTRAN Level 15FBRTPJ_N subroutines, wit thefollowing exceptions, were compiled using thestandard, IBMrelease 20,Hlevel F_RTRAN compiler using option I. 5.3-23 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES SUBROUTINE COMPILER CXL(_P H((_PT=2) DLB(_P H((_PT:2) LDOI G LD02 G LD03 G LD04 G LD05 G LD06 G LD07 G LD08 G LD09 G LDIO G LDll G LDI2 G LDI3 G L_OP H(_PT=2) PLOTBD G Thereason forselecting other compilers intheabove were, inthecase oftheinner loop routine. H(_PT=2) wasselected tooptimize thecode asmuch aspossible, while intheother routines theGcompiler wasused toovercome deficiencies intheHlevel compiler. 5.3.11 IBM360-370 Overlay Charts 5.3-24 (8/I/72)\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (S) NASTRAN IN_I .° Figure 3.Overlay Structure forLink NASTRAN ontheIBM360-370. 5.3-25 (8/I/72)\nL013[IIF’PRBO IF’I’I [FI’IB IF’F’IC IrPIB I_‘IE Ifl’l_ [n’IG [f’l’IX_’ SWIBRT FN3PLT ,/‘3[_ / /IFP’IR I Ill’IXm IFXIBO IF’XlBO EOIINT /IFI\"XO # /XOLOPT / /IF’P’X1 / /UIIF-Z22 i SolTr IF’P,I iIFI‘2Z / 10840IFI’_ II:‘pIIC II:‘I’_ I_lllf\" IF’_ IF’P5I_:“II; Igl’X_ORT ,/T / FA60In.o’s ISFT Uift'13T L’ORT AJ’X_i I E580 XitlI IVlI •llll.ll_XGPIm XO’I XGrIOG ,/‘Am’lr\"I IXI[O I /XI_Jl2 I IXg’|3 I IJiGPIq I, IXGr’I5 / IXG’I6 I /Xll‘I7 / /IIGI’lll / ,/XO’[2X /\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEt’: (S) LI 01 £ XIPFL XGPI1 /X_I1 /nn /IFI_m / IF’P IrPxx /IFI /IFX_O IFX’mO IFP /lf’P / /IFPX’J / /lnm’_ / /IFP_ / /IFI_A’I I If’d_ II_ [f_ IO01 13BD8i_[cm irP3 iFr,_ iIFt’J_ /nnn O[NO 16918 Figure 4.Overlay Structure forLinkOlontheIBM360-370. 5.3-Z7 (8/I/72)"},"title":"Programmer's Manual P79"},"/docs/programmers/programmers_manual_080/":{"data":{"":"NASTRAN ON THE IBM SYSTEM 360-370 OPERATING SYSTEM (VS) Figure 8. Overlay Structure for Link 05 on the IBM 360-370. rONnsG k% MPU3 Ee U’Nm kTOc HRTTAL w/ A Gm mTRx FNOPNT BRsr+B WL PERlUT BISRCn sRxe /Laps / /TW / /XCSTN / 55628 m FBYQ sllCmP COOP FIXTOR El x 9900 FILS1 /FBYROX / /wvm / C090 FRETRX SIX 1~~682 I WR mcv PFRTN /MG / SORB1 m FRS FeSSP FBS1P /FBSX / /SSGR3 / D40 8 LEYl /SORBI / /SS62X / - ZE ~TC GMWTS PREI)T INVERS 5S6ETO gMH1 /FPT / /wrm / /TRIPIEX / TIN / mTWT / /SSETRI / D2A8 ssQn PBVX /ssMRn / /SSGETT / SlR EXTERN CRRVCl CRRVC3 FPONT CQaIN GRRV ROAD PREW RFORCE CRRVC2 E5A8 E598 MRGE SORlB\nPFlRTX E5AO gGEL 1 OFCO HBDY TTRIRG CWE IMtl mi? TTRFPR We TRIttEN TTm Wf3 FQRL /SSGFIlX / (n~rr SSGa /Ssla / SSGRlX Ssla REGION PFlGE\nEJECT 2w Figure 11 . Overlay Structure for Link 08 on the IBM 360-370.\ny Structure for Link 09 on the IBM 360-370. [BM SYSTEM 360-370 OPERAT~NG SYSTEM (8s) 5.3-43 (8/1/72)\nNASTRAN ON THE IBM SYSTEM 360-370 OPERATING SYSTEM (OS) Figure 13. Overlay Structure for Link 10 on the IBM 360-370."},"title":"Programmer's Manual P80"},"/docs/programmers/programmers_manual_081/":{"data":{"":"GI{]4IIfXIT I11llT36 I.IMg61 130RsZ m_l\"lllm TmlEO 8JlTOI l’l_kOl: I_TTll /gl:lll I /1_1:111_ / IIs[m2 a mmSllr mg_lSl JIOuIN JIg_ilK 132F8 12FD8III_I 9498TR I_IIION II,Jl_ I\nNASTRAN ONTHEIBMSYSTEM 360-370 OPERATING SYSTEM (_S) ILINK 12 iFIBSm W C838_BFII._I AIPIX I m D078 DO80m C858 C850_R BD20_A 82E8m /TLtP / /VOI / BBAOWOORtB 7DAO Figure 15.Overlay Structure forLink12ontheIBM360-370. 5.3-49 (811172)\ni ECBO j 1 i ! 1 ! EXIT PX I T36 L I NUNS1 RETURN XEOT I*PFNs TNTW mnsG SSUTW SOPEN i I FlPRlE PRELOC rnT TRL xSEFI1q\nNASTRAN ONTHEUNIVAC ll08 (EXEC 8) 5.4NASTRAN ONTHEUNIVAC ll08 (EXEC 8) 5.4.1 Introduction Thepurpose ofthissection istodescribetheunique operating features ofNASTRAN onthe UNIVAC If08computer under theExec8operating system. Thissection contains muchmaterial ofinterest toboththeserious userofNASTRAN andthe support programmer. Ofparticular interest totheuserarethefollowing sections: Number 5.4.2 5.4.4 5.4.5 5.4.9.3 5.4.12 5.4.14 5.4.15 5.4.18User Massstorage estimates andmaximum filesizes. Control ofopencoresizes andthegeneration ofsmaller NASTRAN’s. Execution deckset-ups. Catalog theexecutable procedure (orcopy ineachtime). External names ofusertapes (QPTP, NPTP, PLT2, etc.). Description oftheUMFruns. UMFtimes andproblem numbers forthedemonstration problems. If08timeestimation. Thechoice ofExec8over ExecIIastheIf08Executive System wasmadeduetotheadded flexibility obtainable inthecontrol language. Thesizeandcomplexity oftheNASTRAN system necessitates theuseofasystem allowing open-ended expansion. Much ofthefinal checkout andvalidation ofNASTRAN wasdoneunder Exec8.Theuseof catalogued files forthesource, object, andabsolute program files simplified thetaskof modifying andupdating theNASTRAN system. NASTRAN operates asasingle jobonUNIVAC ll08computers under Exec8.NASTRAN iscreated as14separate absolute programs, witheach program containing thestructure andcontent ofa NASTRAN link. These links areexecuted serially (usually) bytheuseof’XQT°cards. 5.4.2 Input/Output Themachine dependent I/routines inNASTRAN canbeclassified intothree categories: l)obtaining thelogical files, 2)performing theactual I/(other thanplotoutput), and 3)generating theplottapes. 5.4-I (8/I172)\nNASTRAN -OPERATING SYSTEM INTERFACES GNFIAT isthesubroutine responsible foridentifying thelogical filesavailable foruse byNASTRAN. FortheUNIVAC 1108,itiswritten inFORTRAN. Itsfunctional description canbe foundinSection 3.Under Exec8,GNFIAT operates inconjunction withthesystem routine NTAB$. NTAB$wasreassembled forNASTRAN toallowaccess tological units1-40. Correspondingly, atable isgenerated inGNFIAT toindicate thestatus ofeachoftheseunits. Thestatus codeof1implies theunitisunconditionally available forinsertion intotheFIATExecutive Table. Acodeof2 meanstheunitcanbeusedifitisnotsetupasatape. Astatus codeof3meanstheunitis unavailable fortheFIAT,butisavailable forXFIAT. Astatus codeof4means theunitisnotto beassigned byNASTRAN. Anyunitswithstatus codesofI,2,or3willbedynamically assigned by NASTRAN unless theyhavebeenpreviously assigned byuser-supplied assign cards. thistableandinserts theavailable logical unitsintotheFIAT. Thefollowing tableindicates thestatus ofthe40units: F_RTRAN UnitNo. Status Code External NameGNFIAT searches 1 4 None 2 3 2 3 1 3 4 1 4 5 4 None(Input File) 6 4 None(Print File) 7 3 P_L 8 3 _PTP 9 3 NPTP I0 2 UMF II 2 NUMF 12 3 PLTI 13 3 PLT2 14 2 INPT 15 2 INPTI 16 2 INPT2 17 2 INPT3 18 2 INPT4 5.4-2 (8/I/72)\nNASTRAN ONTHEUNIVAC 1108 (EXEC 8) F_RTRAN UnitNo. Status Code External Name 19 2 INPT5 20 2 INPT6 21 2 INPT7 22 2 INPT8 23 2 INPT9 24 l 24 25 l 25 26 l 26 27 l 27 28 l 28 29 l 29 30 1 30 31 l 31 32 l 32 33 1 33 34 l 34 35 l 35 36 1 36 37 l 37 38 l 38 39 l 39 F_RTRAN unitnumbers7through 23areattached totheir external names bytheuseof@USE cards which areadded internally. Notethatthisrequires assignments bemadebytheexternal name, rather thantheF_RTRAN unitnumber, aswasdone inthepast. Dynamic assigns forall units notassigned bytheuser(uptoMAXFIL units (System (29)) willbeofthefollowing form @ASG,T XX,FI7//P_S/30. Thisassign cardallows amaximum of2,000 tracks, orapproximately 3,500,000 words, foreachfile. TheFl7requests massstorage asavailable fromfirst FHl782’s, second FH880’s, andthird FASTRAND model II.P_Srequests that64contiguous tracks beassigned atonce. 30will terminate therunifmorethan30x64tracks ofdata arewritten onanyone file. 5.4-3 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES Inaddition totheexpanded NTAB$, NTRAN$ wasassembled withthenumber ofpackets increased to30.Thiswasnecessary, duetothenumber offilesusedinNASTRAN atanyonetime. Theactual I/0ontheUNIVAC 1108iscontrolled through ablocked 1/0package, consisting ofGIN_anditsassociated routines. Thephysical I/directives arerestricted toGINOIO. Physical records ofsizeBUFFSlZE-3 (System (I))wordsarewritten onallunits. BUFFSIZE is currently setto871.Under Exec8,NTRANisusedexclusively forI/.Thereader should consult thesubroutine descriptions forGIN_andGIN_I_ inSection 3formoreinformation. Thefinal I/dependent routine isSGINO, whoseresponsibility istogenerate theunformatted BCDandbinary tapesfortheplotters. Therestriction inSGINOisthattheoutput records must befreeofanyNASTRAN orsystem control words. NTRANsatisfies theserequirements andisused toperform theI/. 5.4.3 Link Switchinq Alink ontheUNIVAC ll08 consists ofamain program, MAINi, that calls subroutine XSEMi, which inturn hascalls tothesubroutines corresponding tothemodules residing inthat link. Thus, alink is,initself, acomplete executable program. Theproblem oflink switching reduces totheproblem ofselectively controlling theexecution ofthevarious programs (links). This isaccomplished under Exec 8byvirtue oftheTEST control card andbytheexecutive request (ER) SETC$. Theoption toeither execute orskip alink isachieved bythefollowing twosystem control cards: @TEST TNE/i/S6 @XQT *NASTRAN.LINKi Therightsixthofthecondition wordwhich istested bytheTESTcommand issetbyanERtoSETS. Bysetting thissixthofthewordtothevalue i,LINKiwillbeexecuted. Ifthevalueofthe wordisnoti,theXQTinstruction willbeskipped. Apacket ofthesecontrol cardsconsisting ofTESTandXQTcardsforeachlinkgives the usertheflexibility hedesires. However, duetothecapability oflooping inNASTRAN, manyof thesepackets areusually putonacatalogued filesuchthatoneADDcardcanredirect thecontrol cardstream totheproper file. Twosuchpackets aresupplied withtheLevel 15NASTRAN: CONTRL, 5.4-4(8/I/72)\nNASTRAN ONTHEUNIVAC If08 (EXEC 8) which results inaNASTRAN userregion of65Kdecimal words andC_NTRL 42K,which results ina NASTRAN userregion of42Kdecimal words. Theabove description gives theexternal controls required forlinkswitching. Internally, NASTRAN usessubroutines ENDSYS andSEARCH todirect thelinkswitch. Their functional descrip- tions canbefound inSection 3.ENDSYS isusedmainly forsaving information required across links. SEARCH, however, istheroutine which controls thelinkswitch. Under EXEC8,this consists simply ofsetting thecondition word tothevalue ofthedesired link, andterminating theexecution ofthecurrent link. SEARCH ontheIf08willalsofree (after linkone) theUMF, theNUMF, orthe_PTPiftheyareassigned totape. Uponinitiation ofanewlink, BGNSYS iscalled torestore previous information. Anaddi- tional function ofBGNSYS ontheUNIVAC If08, controlled byabranch onmachine type, istorestore drumpointers forallfiles offtheloadpoint. Since GIN_maintains atable offilepositions, thistable canbeusedtoupdate thesystem drumpointers. 5.4.4 Overlay Considerations andImplementation ofOpenCore Thecomplex nature oftheNASTRAN overlay picture andthepecularities oftheExec8loader posesome special problems onthell08. Theloader under Exec8isa\"block\" or\"segment\" loader. Asegment isloaded onlywhen asubroutine within thatsegment iscalled. Also, whenasegment isloaded, local dataandcommon blocks aresettozero. Theimplications ofthese features oftheloader canbeseeninthefollowing overlay example, given inTable landFigure I.Ifcommon block /XX/isinitialized bytheBlock Data subprogram E,andsubroutine Acalls Ddirectly, thenDcannot reference thedata in/XX/,since thatsegment hasnotbeenloaded. Also, ifsubroutine Astores datain/YY/,andsubsequently calls subroutine C,/YY/willbereset tozeroasitisloaded. Asseen inTable landFigure l,somecommon blocks willhavetoberepositioned higher (inlower order core) intheoverlay ontheUNIVAC ll08thanontheIBM_360orCDC6600toprotect NASTRAN from theloader. Theimplementation ofopencoreontheUNIVAC ll08consists ofdefining acommon block (/DFC_R/) insubroutine DEFC_R andusing theexecutive request (ER)toMC_RE$ toreserve core fromthefirst cellofthecommon block to1777708. Thiswilldefine a65KNASTRAN system. Smaller NASTRAN versions canbedefined byshortening thelength ofopencoreasfollows: 5.4-5(811/72)\nTableI.NASTRAN -OPERATING SYSTEM INTERFACES Example ofInputtotheMAPProcessor foraNASTRAN Overlay ontheUNIVAC 1108. @MAP,I Sam__ SEG AA IN A SEG BB*,AA IN B,XX SEG CC*,BB IN C,YY SEG DD*,(CC) IN D SEG CORE*,BB IN DEFC_R,DFC_R Segment C_RE—-L DEFCOR /DFC_R/ Segment CC——–Subroutine A Subroutine C /YY/Segment AA Subroutine B DataBlockE /XX/ Segment DD_Segment BB Subroutine D Figure I.Example ofNASTRAN Overlay ontheUNIVAC 1108 5.4-6(8/I/72)\nNASTRAN ONTHEUNIVAC I108(EXEC 8) Opencorecanbeshortened bytwomethods: (1)Thenumber 1777708 insubroutine ZC_RSZ (MPAFNS) canbechanged toasmaller number with40Kbeing theminimum. Thismethod requires regenerating alltheabsolute elements. (2)Options canbeadded totheXQTcards. Theoptions will turnbitsoncorresponding totheletter inthealphabet (i.e., A=26thbit-Z=0thbit) inaword. Thiswordwill thenbesubtracted fromthenumber 1777708 insubroutine ZC_RSZ before theERtoMC_RE$. Execute cards oftheform@XQT,LM willmakeNASTRAN approximately 42Kinlength. 5.4.5 Execution DeckSet-Up Thefollowing table gives atypical deckset-up forNASTRAN onthell08. 5.4-7 (8/I/72)\nTable2. @RUN @ASG,T 2,F//P_S/30 @ASG,T 3,F//P_S/30 @ASG,T 4,F//POS/30 @ASG,T P_L,F//P_S/30 @ASG,T OPTP,F//P_S/30 @ASG,T NPTP,F//P_S/30 @ASG,T UMF,F//POS/30 @ASG,T NUMF,F//P_S/30 @ASG,T PLTI,F//P_S/30 @ASG,T PLT2,F//POS/30 @ASG,T INPT,F//P_S/30NASTRAN -OPERATING SYSTEM INTERFACES Execution DeckSet-Up forNASTRAN ontheUNIVAC 1108 POOL _PTP NPTP UMF NUMF PLTI PLT2001 002 003 004 OO5 006 OO7 OO8 009 010 011 012 @ASG,T 39,F//POS/30 @HDG,N @XQT *NASTRAN.LINKI NASTRAN DATADECKS(Executive Control Deck,Case Control Deck,BulkDataDeck) @TEST TNE/I/S6 @XQT *NASTRAN.LINKI @TEST TNE/2/S6 @XQT *NASTRAN.LINK2037 038 039 O4O 041 042 043 @TEST TNE/14/S6 @XQT *NASTRAN.LINKI2 @TEST TNE/17/S6 @JUMP END @END:PMD,EB052 053 054 O55 056 5.4-8(8/I/72)\nNASTRAN ONTHEUNIVAC If08(EXEC 8) Thefollowing comments explain particular cards orgroups ofcards: I.CardOOlconsists ofthestandard RUNcard required bytheinstallation. 2.Cards 002-037 assign thelogical files toFASTRAND orsomeother auxiliary storage device. These assign cards allow amaximum of2,000 tracks orapproximately 3,500,000 words foreachfile. Thisassignment canvaryperrunorperdevice used. 3.Cards O05-Oll haveadualusage andcanbeusedasusertapes. Ifacheckpoint is required, thencard007mustbereplaced with @ASG,T NPTP,T,TAPE# 4.Depending uponthedevices available, theassign cards canreference FASTRAND, drum, disk, ortape. 5.Card038turns offthestandard system heading. 6.Card039initiates execution ofLINKI. 7.TheNASTRAN datadecks areinserted between cards 039and040. 8.Cards 040to050constitute apacket ofNASTRAN control cards. Manyofthese packets mayberequired foronerun. 9.Foruserconvenience, 002-037 areautomatically generated byNASTRAN, except forany assignment supplied bytheuser(usually justtapes). Cards 038-039 canbecatalogued asthefileASGCRDS, andlO0packets ofthecards 040-056 canbecatalogued asthefile C_NTRL (orthefileC_NTRL42K forthesamecards, butwith theLandMoption onthe XQTcards). Theexecution deck set-up canthenconsist of: @RUN @ASG (option tapeassignment) @ADD ASGCRDS. NASTRAN DATACARDS @ADD C_NTRL. @FINor @ADD C_NTRL42K. (forsmaller NASTRAN) 5.4-9 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.4.6 Description ofNASTRAN Physical ItemsandGeneration oftheNASTRAN Executable System I.Symbolic Tape Thisphysical itemincludes aphysical tapeandanelement list(TOC). TheUNIVAC 1108 NASTRAN source library tapeconsists ofa2-file, 800-BPI tapecontaining approximately 900 separate symbolic elements inFUR/PUR format. Theelements areordered onthetapealphabeti- cally. Theelement namesandtheorderareshownontheelement list. File1consists of themachine independent decks. File2consists ofthe1108machine dependent decks. 2.Relocatable andDemonstration Problem Tape Thisphysical itemincludes aphysical tapeandanelement list(T_C). Thetapeisa two-file, 800-BPI tapeinFUR/PUR format which contains therelocatable elements fromthe source compiles, 14symbolic MAPdecks, andFORTRAN source oflocally modified decks. The MAPdeckswereplaced ontherelocatable tape,sothatanexecutable tapecouldbegenerated withjusttherelocatable tapefilecatalogued. Thenamesandorderoftherelocatable ele- mentsareshownontheelement list. File1consists oftherelocatable elements fromthe machine independent anddependent libraries. File2contains runsetups forexecuting demonstration problems. Thereare50NASTRAN demonstration problem decks. Theyhavebeensetupwithallthe control cardsincluding the\"RUN\"cardnecessary torunthedemonstration problems onthe UNIVAC 1108Exec8.Adescription ofoneofthedecksisshowninSection 5.4.14. In addition tobeingnecessary forrunning thedemonstration problems, theyareuseful assample problem decksfornewNASTRAN users. 3.Executable andUMFTape Thisphysical itemisafive-file, 800-BPI tapeinFUR/PUR format. Thefirstfile contains theNASTRAN executable elements orabsolute program, andtheexecutable program forPRTVEC. Thesecond filecontains aprogram filecalled ASGCRDS., thethirdfilecontains aprogram filecalled C_NTRL., thefourth filecontains aprogram filecalled CONTRL42K, and thefifthfileistheUserMaster File(UMF). 5.4-10 (8/I/72)"},"title":"Programmer's Manual P81"},"/docs/programmers/programmers_manual_082/":{"data":{"":"NASTRAN ONTHEUNIVAC I108 (EXEC 8) TheNASTRAN absolute program consists of14executable elements. These elements appear totheUNIVAC ll08 Exec 8system as14separate programs. Theexecution sequence ofthese programs, foranyproblem, iscontrolled bythefile CONTRL. orCONTRL42K. Thefile ASGCRDS isacontrol card file which contains thecontrol card toturn off thesystem heading andthecontrol card toexecute thefirst executable element. This file aswell astheCONTRL file aredescribed inmore detail inSections 5.4.12 and5.4.13, respectively. TheUMFfile must becopied toanother tape astheonly file. This single file isused tostore NASTRAN Bulk Data Decks sothat theinput card deck will besmaller. Each UMFtape hasatape andproblem number associated with each Bulk Data Deck; thenumbers areused by NASTRAN toretrieve theappropriate deck. TheUMFtape file delivered contains theBulk Data Deck fortheNASTRAN demonstration problems. Thetape andproblem numbers aregiven in Section 5.4.15. TheBUFFSIZE used togenerate this tape was871(the default value). 4. Sample Utility Procedure Deck This physical item includes afamily ofsample decks (procedures) which have been used during theNASTRAN project. Included aredecks to: a.Copy thefour system tapes (see Section 5.4.8). b.Catalogue thesource, relocatable, andexecutable tapes (see Section 5.4.9). c.Update thesystem (see Section 5.4.10). d.Regenerate theexecutable tape (see Section 5.4.11). Thetape copy procedure should beused toprovide backup copies oftheNASTRAN tapes delivered. Thecatalogue procedures should beused when doing system maintenance. Inaddition, thecatalogue procedure fortheexecutable tape must beused before running aNASTRAN problem. Theupdate shows onewayofsetting upacompile andexecutable regeneration forsystem maintenance ortemporary check outofupdates. Thedeck toregenerate theexecutable tape contains thecards necessary tomake anew executable tape from therelocatable tape. 5.4-II (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.4.7 Machine Dependent Routines Theroutines discussed inthissection consist ofthoseprograms unique totheUNIVAC 1108 orthosewhichareimplemented differently fromothermachines. Thelanguage foreachdeckis indicated byanF(F_RTRAN) orS(SLEUTH) following thedeckname. GIN_isdiscussed inSection 5.4.16, matrix packing isdiscussed inSection 5.4.17, andsingle precision decksarediscussed inSection 5.4.18. I.MAINi (F) NLAINiisthemainprogram forLINKi. Itssolefunction istocallDEFC_R andXSEMi. 2.DEFCOR (F) DEFC_R isresponsible forcalling ZCORSZ toreserve coreforNASTRAN. Thelast location ofthissegment issavedastheendofopencore. 3.MAPFNS (S) Inaddition tothestandard functions described inSection 3,thefollowing functions wereadded: a.SETC(1) -Setsthecondition wordtoI. b.FACIL(UNIT,ID) -SetsID=0ifUNITisassigned toFASTRAND. SetsID=1ifUNITisassigned asatape. SetsID=2ifUNITisnotassigned. c.XDATE(DATE) -Return thedateinafour-word arrayDATE. DATE(I )=MONTH DATE(2) =DaY DATE(3) =YEAR DATE(4) =timeinelapsed wallclockseconds frommidnight d.ZCORSZ(X(1),[ENGTH) -Reserves corebetween X(1)andthe65K(lessifoptions on theXQTcardareused)andreturn thelength inLENGTH. e.SEC(t) -Return CPUtimeusedinT. f.LOGFIL(I(1),WORDS) -Writes thenumber ofwords inW_RDS starting withI(I) ontherunlogfile. g.ELAPSE(T) -Return inTthewallclocktimeused. h.TSWAP(ID) -Unloads aunit(ID)andmounts another tapeonthatunit. 5.4-12 (8/I/72)\nNASTRANONTHEUNIVAC1108(EXEC8) i.ADDCRD(IMAGE,LENGTH) -AddacontrolcardimageoflengthLENGTHtothe controlstream. j.COM(IMAGE,LENGTH) -TypeanimageoflengthLENGTHontheoperatorconsole. k.ZCORSZ-PerformthefunctionofC_RSZ. 4.UTIL(F) a.SECOND(T)-ReturnstheCPUtimeinfloatingpointsecondsbycallingSEC. b.TDATE(II)-ReturnsthedateinthefirstthreewordsofIIandzerointhe fourthwordofIIbycallingXDATE.Italsoinitializes STIME (SYSTEM(32)) totheelapsedwallclocksecondsfrommidnight. c.KLOCK(1)-ReturnsthecurrentCPUtimeusedinintegerseconds. d.CONMSG(IX,IY,IZ) -WritesamessageoflengthIYwordsfromthefirstIYwordsof IX.Thismessageisdisplayedontheoperator’s consoleif IZ#0(controlled byDIAG5and6).Themessagesarenormally storedinthelogfile.Thenumberofmessagespreviously writtenisaccumulated inSYSTEM(7).IfSYSTEM(7)\u003eI00, messagesareincludedintothenormalprintfile. e.XTP_ACE-Isaprintroutineforatracebackroutine. f.WALTIM(1)-Returnstheelapsedwallclocksecondsfrommidnight. 5.XEOT (F) XEOT causes reels tobeswapped formultireel oldandnewproblem tapes. 6.NTRAN$ (S) NTPJ_N$ isastandard 1108NTRANreassembled toinclude 30packets. NTRAN$ varies from Exec8release torelease. IftheNTRAN$ supplied withNASTRAN willnotcollect without errors, thestandard version maybeobtained, thenumber ofpackets changed to30,andused. 7.NTAB$ (S) NTAB$ isastandard 1108NTABreassembled toallowupto40files. 5.4-13 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 8.RWUNLD (F) RWUNLD will,givenaGIN_filenameforapermanent entry, determine itsinternal (1108) filenameandcallTSWAPtoswitch toanother physical reel. ItisusedbyXCHKtomanipu- latethe_PTPandNPTPandbyTPSWIT tomanipulate theusertapes (INPT, etc.). 9.TPSWIT (F) TPSWIT callsRWUNLD toobtain another usertapeandprints amessage. I0.PEXlT(F) PEXITperforms normal (machine dependent) termination procedures andalsosetsthe condition code(15)forfinaltermination. II.SEARCH (F) SEARCH freesthe_PTP,UMF,andNUMFattheconclusion ofLINK1ifthesefilesreside onatape. Inaddition, SEARCH setsthecondition codeforthenextlinktobeexecuted. 12.SGIN_ (F) SGIN_performs physical I/0ontheplottapes (PLTIandPLT2). a.S_PEN($N,PLTTP, BUF,BUFSIZ) -Establishes abuffer forPLTTPoflength BUFSlZ at location BUF. Italsosetstheparity ofthefile, depending onwhether PLTTP=PLTIorPLT2. b.SWRITE (PLTTP,A,N,E_R) -Writes Ncharacters fromNwords starting atA(1)into theplot buffer. c.SCLOSE (PLTTP) -Flushes theplot buffer, places aphysical end-of-file onthe plot tape, andbackspaces uv_r it. d.SE@F (PLTTP) -Places aphysical end-of-file onPLTTP. ]3. C_RSZ (F) C_RSZ provides forthedisplay oftheopen core length (onDIAG 13)obtained from the SLEUTH subroutine ZCBRSZ. 14. MPYQ (S) MPYQ isaSLEUTH deck written toincrease thespeed ofMPYAD’s inner loops. Thedocu- mentation forMPYQ ismachine independent, andisinSection 3asanauxiliary routine to MPYAD. 5.4-14 (8/I/72)\n5.4.8 5.4.8.1NASTRAN ONTHEUNIVAC II08(EXEC 8) 15.PPDUMP (F) Supplies entry points DUMP, PDUMP, andPPDUMP. PPDUMP wastocapture control after aguard modeinterrupt. Thisfeature never was implemented. DUMPandPDUMP dumpopen corebeyond theallocated limit. DUMPwill dothis unconditionally andPDUMP will doitifDIAGlwassetbytheuser. NotethatPDUMP will force atrace back viaYTP_ACE ifNOdump istaken. Anelement dumpisgiven viaanillegal computed gotostatement toprovide a\"nicely\" formatted dumpandatrace backfornormal dumps. Since control cannot berecaptured after suchdumps, anymessages willhavetobe decoded fromcommon block /MSGX/bytheuser. 16.YTP_ACE (S) YTP_ACE provides awalkbacktrace toXSEMi fromthecalling routine toaidin subroutine debugging. Procedure toCopy theThree System Tapes Source Tape I.Tape assign @ASGstatement -assign theinput source tapetoatapeunitgiving its tapenu_er andafilename. @ASG,T SIBURCE,T,XXXX (file nanm, totape, nu_ers) 2.Tape assign @ASG statement -Assign theoutput source tapegiving itafilename andnu_er. @ASG,T NEWS(_U ,T,XXXX 3.Tape copy@CI_PY,M statement -Copytheinput source files totheoutput source files. @C_PY,M S_URCE. ,NEWS(BU. ,2 4.Freefile@FREEstatement -Release theinputsourcefilefromthejobstream. @FREESBURCE 5.4-15 (811172)\n5.4.8.2 5.4.8.3NASTRAN -OPERATING SYSTEM INTERFACES 5.Freefile@FREEstatement -Release theoutput source file. @FREENEWSBU Relocatable andDemonstration Problem Tape I.Assign theinputrelocatable tape @ASG,T OBJECT,Txxxxx 2.Assign theoutput relocatable tape. @ASG,T NEW@BJ,T,xxxxx 3.Copytwofilesfromtheinputtapetotheoutput tape. @C_PY,M _BJECT.,NEW_BJ.,2 4.FREEtheinputrelocatable tape. @FREEOBJECT 5.FREEtheoutput relocatable tape. @FREENEW_BJ Executable andUMFTape I.Assign theinputexecutable tape. @ASG,T ABSTAP,T,xxxxx 2.Assign theoutput executable tape. @ASG,T NEWABS,T,xxxxx 3.Copyfivefilesfromtheinputtapetotheoutput tape. @COPY,M ABSTAP.,NEWABS.,5 4.Freetheinputexecutable tape. @FREEABSTAP 5.Freetheoutput executable tape. @FR[_NEWABS 5.4.8.4 Demonstration Problem InputDataTape(UMF) I.Assign theinputexecutable andUMFtape. @ASG,T ABSTAP,T,xxxx 2.Position totheUMFfile. @MOVEABSTAP.,7 5.4-16 (811172)\nNASTRAN ONTHEUNIVAC ll08 (EXEC 8) 3.Assign theoutput UMFtape. @ASG,T NEWUMF,T,xxxxx 4.Copyonefilefromtheinput UMFtotheoutput UMFtape. @C_PY,M ABSTAP.,NEWUMF. 5.Freetheinput executable andUMFtape. @FREE ABSTAP 6.Freetheoutput UMFtape. @FREE NEWUMF 5.4.9 NASTRAN Tapes(Files) Catalogue Procedure 5.4.9.1 Source Catalogue Procedure I.Delete @DELETE statement -Delete afileifitexists, butproceed with therunifit does notexist (C-option). @DELETE,C SgU. (name tobeassigned tothemachine independent source FASTRAND file) @DELETE,C MDSgU. (name tobeassigned tothemachine dependent source FASTIb_ND file) 2.Assign aFASTRAND file@ASGstatement -Assign aFASTRAND filenameforthesource elements making itpermanently assigned, regardless ofthemanner oftermination ofthe run(U-option), making itpublic (P-option), andmaking itreadonly (R-option). @ASG,UPR SgU,F///1500 (file name, assign toFASTRAND with1500tracks asamaximum size) @ASG,UPR MDSgU,F///50O (file nameassign toFASTRAND with500tracks asamaximum size) 3.Assign theinput source tape. @ASG,T SgURCE,T,xxxxx 4.Copy anelement filefromoneunittoanother @C9PY statement -Copytheinput machine independent andmachine dependent source tapetoaFASTRAND file. @CgPY,G SgURCE.,SgU. @CgPY,G SgURCE.,MDS9U. 5.Freetheinput source tape. @FREE SgURCE 5.4-17 (811/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.4.9.2 Relocatable Catalogue Procedure l• @DELETE,C _BJ. 2.Assign aFASTRAND filefortherelocatable tape. ifthisfileistobeupdated. @ASG,UPR _BJ,F///1500 3.Assign theinputrelocatable tape. @ASG,T _BJECT,T,yyyyy 4.Delete afileifitexists, butproceed withtherunifitdoesnotexist. 5, processors canfindtherelocatable’s entrypoints. @PREP_BJ. 6.Freetheinputrelocatable tape. @FREEBBJECTNote: donotusetheR-option Copytheinputrelocatable tapetotheFASTRAND fileassigned. @COPY,G _BJECT.,_BJ. Prepare anentrypointtable@PREPstatement -Makeatableofentrypoints sosubsequent 5.4.9.3 l° @DELETE,C NASTRAN o 2.Assign aFASTRAND filefortheNASTRAN executable elements. R-option ifthisfileistobeupdated. @ASG,UPR NASTRAN,F///1000Executable Catalogue Procedure Delete afileifitexists, butcontinue therunifitdoesnot(C-option). Note: donotusethe 3.Delete afile ifitexists, butcontinue therunifitdoes notexist. @DELETE,C ASGCRDS. 4.Assign aFASTRAND file fortheprogram file ASGCRDS. @ASG,UPR ASGCRDS,F///IO 5.Delete file ifitexists, butcontinue therunifitdoes notexist. @DELETE,C C_NTRL. 5.4-18 (8/1/72)\nNASTRAN ONTHEUNIVAC ll08 (EXEC 8) 6.Assign aFASTRAND filefortheprogram fileC_NTRL. @ASG,UPR C_NTRL,F///IO 7.Delete file ifitexists, butcontinue therunifitdoesnotexist. @DELETE,C C_NTRL42K. 8.Assign aFASTRAND filefortheprogram fileC_NTRL42K. @ASG,UPR C_NTRL42K,F///lO 9.Assign theinput executable tape. @ASG,T ABSTAP,T,zzzzz lO.Copytheexecutable element filefromtapetotheFASTRAND file NASTRAN. @C_PY,G ABSTAP.,NASTRAN If.Copyaprogram file@C_PY,F statement -Copy theASGCRDS filefromtapetoFASTRAND. Noteprogram files (files withcontrol cards aspartofthefile) mustbecopied inadifferent manner thanelement files. Inaddition, the@CBPY,F statement doesnotposition atapepast thetape end-of-file whenusedtoreadafilein. @C_PY,F ABSTAP.,ASGCRDS. 12.Move atapepastanend-of-file mark@M_VE statement -Move theinput tapepastan end-of-file sothetapewillbepositioned properly forthenextfile. @M_VE ABSTAP.,I 13. Copytheprogram fileCBNTRL fromtapetoFASTRAND. @C_PY,F ABSTAP.,CBNTRL. 14.Move atapepastanend-of-file. @M_VE ABSTAP.,I 15.Copytheprogram fileC_NTRL42K fromtapetoFASTRAND. @C_PY,F ABSTAP.,C_NTRL42K. 16. Freetheinput executable tape. @FREE ABSTAP 5.4.10 I°NASTRAN Update Procedure Catalogue theexecutable tape (@ASG,UP NASTRAN,F///IO00). 5.4-19 (8/I/72)\n5.4.11NASTRAN -OPERATING SYSTEM INTERFACES 2.Catalogue therelocatable tape(@ASG,UPR _BJ,F///1500). 3.Catalogue thesource tape. @ASG,UPR SBU,F///1500 (@ASG,UPR MDS_U,F///500) 4.Addaheading forthecompile. Thismakes thedeckeasier tofindintheoutput. @HDGdeckname 5.Compile thedeck(seenote). @F_R,S S_U.deckname,deckname NOTE: Ifamachine dependent deckistobecompiled use @F_R,S MDS_U.deckname,deckname 6.Adding aheading fortheexecutable element tobeupdated. @HDGLINKxx 7.Prepare anentrypointtable. @PREP BBJ. 8.Map(regenerate) theexecutable element(s) inwhichthedeckcompiled resides. Notethe mapsymbolics areontherelocatable file. @MAP,S BBJ.LINKxx,NASTRAN.LINKxx 9.Runaproblem. @ADDASGCRDS. Regenerate theExecutable Tape I.Therelocatable tapemustbecatalogued. 2.ThefileASGCRDS mustbecatalogued. 3.ThefileCBNTRL mustbecatalogued. 4.Delete afile,butcontinue therunifitdoesnotexist. @DELETE,C NASTRAN 5.Assign thenameNASTRAN toaFASTRAND file. @ASG,UP NASTRAN,F///IO00 5.4-20 (811172)\nNASTRAN ONTHEUNIVAC If08(EXEC 8) 6.Addaheading foreachexecutable element. @HDG LINK/ 7.Addamessage foreachlink (only useful ifyouareattending therun) @MSGLINK/ 8.Map(regenerate) theexecutable element. @MAP,S _BJ.LINKI,NASTRAN.LINKI 9.Repeat steps 6through 8foralllinks (I,2,3,4,5,6,7,8,9,I0,II,12,13,14). I0.Print theelement list (TBC) fortheNASTRAN file. @PRT,T NASTRAN II.Assign anoutput executable tape. @ASG,T ABSTAP,T,xxxx 12.Copy theexecutableelements totape. @C_PY,GM NASTRAN.,ABSTAP. 13.Copy theASGCRDS program filetotape. usedforoutput tape. @C_PY,F ASGCRDS.,ABSTAP. NOTE:Note@C_PY,F writes anend-of-file when 14.Copy theC_NTRL program filetotape. @C_PY,F C_NTRL.,ABSTAP. 15.Copy theC_NTRL42K program file totape. @CBPY,F C_NTRL.,ABSTAP. 16.Assign theinput executable anddemonstration input datetape(UMF). @ASG,T _LDABS,T,xxxx 17.Position toUMFfileontheexecutable tape. @M_VE _LDABS.,7 18.Copy theUMFfiletotheendofthenewexecutable tape. @COPY,M _LDABS.,ABSTAP. 19. Freetheoutput executable tape. @FREE ABSTAP Alters tothemapsymbolics maybemadebyplacing thealter cards after the appropriate MAPcard. 5.4-21 (811/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.4.12 TheASGCRDS Proqram File TheASGCRDS program filecontains acardtoturnthesystem heading offbecause NASTRAN writes itsownheading andanexecute cardforthefirstexecutable element LINK1 (theNASTRAN preface). Theheading-off statement isasfollows: @HDG,N Thenextcardisa@XQTcardforthefirstelement: @XQTNASTRAN.LINKI Notetheuseofthe’‘before NASTRAN. Thissymbol isusedbecause ofthewaytheUNIVAC 1108Exec8reference files (orelements). Acomplete element reference hasthefollowing form: QUALIFIERFILENAME.ELEMENTNAME Thequalifier isnormally thenameintheproject fieldoftheruncard. Ifauserwitha different qualifier should wanttorunaproblem andtheexecutable tapewascatalogued inarun withtheabovequalifier, thentheuserwouldhavetoinclude a@QUALstatement asthefirstcard (after theruncard)inthisdeck. The@QUALcardwouldhavethefollowing form: @QUAL XXXXX(project fieldofrunwhich catalogued thefiles) Withthiscard,allfilesthathavea’‘before theirnamewillreference filescatalogued withtheabovequalifier. Notethe@ADDASGCRDS. and@ADDC_NTRL. statements should bechanged to@ASGASGCRDS. and@ADDC_NTRL. iftheexecutable tapewascatalogued underadifferent qualifier. TheASGCRDS fileisaddedtothecontrol cardstream withan@ADDstatement oftheform: @ADDASGCRDS. Thisstatement causes the@ADDcardtobereplaced inthecontrol stream withthefilenamed ASGCRDS. Sinceallthefilesareassigned toFASTRAND byNASTRAN, somewayofassigning atapeis needed. Tapeassignments aremadebyassigning atapetoafilebefore the@ADDASGCRDS statement isreached. Forexample, anassignment forfile(unit) 30@ASG,T 30,T,XXX willassign unit30to tape. Matricies mayberouted tothistapebytheDMAPcommand FILE. 5.4-22 (811/72)\nNASTRAN ONTHEUNIVAC ll08 (EXEC 8) InNASTRAN, anyunitmaybeassigned totapeiftheuserthinks itisnecessary, butsome units havespecific functions. These specific functions andtheunits involved areasfollows: Unit Function 7 (P_L)NASTRANP_LTape(TemporaryNASTRAN datablock storage) 8 (_PTP) OLDPROBLEM Tape (Previous checkpoint taperestart) 9 (NPTP) NEWPROBLEM Tape (Checkpoint Tape) lO (UMF) USERMASTER FILETape (Bulk datainput fromtape) II (NUMF) NEWUSERMASTER FILETape (Used whenbuilding aUMF) 12 (PLTI) PL_TTapefortheEAIandBenson Lehner plotters 13 (PLT2) PL_TTapefortheSC4020, CaIComp andDD80plotters 14 23(INPT) Usertapes forsubstructuring Themostcommon tapeassignments forNASTRAN problems arethecheckpoint, restart, and/or PLT2. Noteallnamed files mustbeassigned bytheir external names. 5.4.13 TheC_NTRL orC_NTRL42K Program File TheC_NTRL program fileconsists ofaseries of@TEST and@XQTcards. The@TEST card allows theoption ofeither skipping acontrol cardornotskipping acontrol card, depending onthe value ofthetestcontrol word. Thelower sixth ofthisword issetbytheexecutive request SETC$. TheNASTRAN executable element thatisincoreduring arunwillsetthecontrol word to theelement number which istogetcontrol next(i.e., LINK2 =2,LINKI4 =14). The@TEST TNE/i/S6 statements will cause theappropriate linktoexecute whenthecontrol word isequal toi.Thefilecontains thefollowing cards: @TEST TNE/I/S6 @XQT *NASTRAN.LINKI @ @TEST TNE/14/S6 @XQT *NASTRAN.LINKI4 @TEST TNE/17/S6 @JUMP END’ 5.4-23 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES theabovestream repeated I00times @END:PMD,EB Toexit,thecontrol wordissetto17andthe@JUMPinstruction willbeexecuted. Thiswill jumptothe@END:PMD,EB statement forapossible postmortem dump. TheC_NTRL42K filediffers fromtheC_NTRL filebyhaving options onthe@XQTcards(i.e., @XQT,LM *NASTRAN.LINKI). Theoptions areLM.Thiswillmakea42KNASTRAN system. Othersize systems canbemadebyvarying theoptions used(i.e., making another control file). 5.4.14 Description ofaDemonstration Problem Starter Deck Inordertoobtain alisting ofthedemonstration problem starter decks thefollowing is executed: I.Assign relocatable andproblem demonstration tape. @ASG,T OBJECT,T,xxxx 2.Position tothedemonstration deckfile. @MOVE_BJECT.,I 3.Assign FASTRAND ontowhich demonstration problem starter decksaretobecopied. @ASG,CP DEM_RUNS,F///IO0 4.Copydemonstration problem starter decks. @C_PY,G _BJECT.,DEM_RUNS. 5.Release relocatable andproblem demonstration tape. @FREEBBJECT 6.Listdemonstration problem starter deck. @ELT,LD DEM_RUNS.X,, @END Thefollowing willdescribe indetail thenecessary steps forexecuting demonstration problem I-IontheUNIVAC 1108usingExec8. 5.4-24 (811172)\nNASTRAN ONTHEUNIVAC 1108 (EXEC 8) I-5. Usefirst fivesteps ofprevious setup thatwasusedtoobtain anumbered listing of driver decks. 6.Extract demonstration problem l-lbyupdating thedemonstration problem starter deck, placing theresult inelement Y. @ELT,LD DEM_RUNS.X,.Y, -1,7 -36,4287 @END 7.Assign thenewproblem tape (checkpoint tape) toascratch tapeonunit9. @ASG,T NPTP,T, SCRTCH .NPTP 8.Assign thedemonstration problem input datatape (xxx) tounit lO. @ASG,T UMF,T,xxx .UMF 9.Addthefilecontaining thedemonstration problem deck. @ADDDEM_RUNS.Y Thefollowing isadescription ofthecontrol stream contained intheDEM_RUNS.Y element. AddthefileASGCRDS. Thiswill assign allthefiles except 9andlOwhich havealready been assigned. @ADDASGCRDS. Thebeginning oftheNASTRAN datadeck. TheNASTRAN datadeckhasthree parts – Executive Control Deck, CaseControl Deck, andBulkDataDeck. 5.4-25 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES ID DEMIOI,NASTRAN UMF 1972II0101 CHKPNT Yes TIME 5(State ofExecutive Control Deck) (Tapeandproblem number sothecorrect bulk datawillbeprocessed fromtheUMFtape) (Unit9mustbeassigned totapewhen checkpointing) (Should beapproximately twominutes less thanmaximum timeonjobcard) CEND (EndofExecutive Control Deckandstartof CaseControl Deck) I0.BEGINBULK (EndofCaseControl Deckandstartof BulkDataDeck) (TheBulkDataDeckwillbeinputfromtheUMFtape) ENDDATA (EndofBulkDataDeck) AddthefileC_NTRL sothattheotherexecutable elements canbeexecuted. @ADDC_NTRL42K. Endofjob. @FIN 5.4-26 (8/I/72)\n5.4.15NASTRAN ONTHEUNIVAC 1108 (EXEC 8) TapeandProblem Numbers fortheNASTRAN Demonstration Problem Input DataTape External ll08 Tape UMFTape Problem Numbers RunTime Number Problem Number 1-I 30 1-2 55 I-3 86 I-4 510 I-5 477 1-6 22 I-7 115 1-8 47 1-9 76 I-I0 18 I-I1 83 2-I 24 3-I 422 3-2 405 3-3 354 4-I I02 5-I 287 6-I 1361 7-I 188 7-2 765 8-I ll5 9-I 24 9-2 318 9-3 422 lO-I 54 Il-l 70 ll-2 495 12-I 1671972 lOlOlO 201020 2401030 2301042 (2601041) 301050 401060 501070 1301080 1401090 60110O 15011O 702010 2403011 (3103012) 1603020 1703030 1804010 805010 1906010 2707010 2007021 2208011 (2808012) 909010 2909020 2109030 lOlOOlO llllOlO 3011020 1212010 5.4-27 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES Thetapenumber andproblem number goontheUMFcardintheNASTRAN Executive Control Deck. Notethename\"tapenumber\" usedintheabovetableisnotanexternal tapenumber, butisreally alabelwritten byNASTRAN. 5.4.16 GIN_(Generalized l__put/Output forNASTRAN) 5.4.16.1 GIN_DataFlow GIN_provides acommon internal format forallNASTRAN datablocks. Italsoprovides an increased setofI/9commands overthoseusually available totheFORTRAN programmer. The functions provided are: I._PEN($N,FILEA,BUFF,_P) OpensGINBfilenamedFILEAintoBUFFaccording to_P. 2.CL_SE(FILEA,_P) Closes FILEAaccording toOP. 3.READ($NI,$N2,FILEA,IZ,NA,EOR,LEN) ReadsNZwordsfromFILEAintoIZ. 4.WRITE(FILEA,IZ,NA,EOR) Writes NZwordsontoFILEAfromIZ. 5.EOF(FILEA) Writes alogical end-of-file onFILEA. 6.REWIND(FILEA) Rewinds FILEA. 7.BCKREC(FILEA) Backspaces FILEAonrecord. 8.FWDREC($N,FILEA) Forward spaces FILEAonrecord. 9.SKPFIL(FILEA,IN) Forward orbackward skipFILEAINfiles. 5.4-28 (811/72)\nNASTRANONTHEUNIVAC If08 (EXEC 8) Theabove entry points maybecalled byanyNASTRAN programmer andtheir exact functions aredetailed inSection 3oftheProgrammer’s Manual. Inaddition, there isoneexecutive function: lO.RWUNLD(FILEA) Rewinds FILEA, dismounts thetapeassigned toit,andrequests asecond reeltobe mounted. Thisfunction isunique tothe7094andII08versions ofGIN_. Themanner inwhich these user-requested I/_functions areperformed ishighly machine dependent, butthebasic strategy issimilar onallmachines. Theprogramming language may becomputer dependent orallFORTRAN (asisthecaseontheIf08, except forNTRAN$ functions). Thebasic dataflowcanbetraced asfollows: Write Data Theusercalls _PEN, supplying aGIN_file.name (201-299, 301-399) andabuffer allocated fromhissubroutine’s opencoreoflength given bythefirst word (SYSBUF) inthecommon block /SYSTEM/.OPEN searches theFIST(located incommon block /XFIST/tofindapointer into theFIAT(located incommon block /XFIAT/.TheFIATsupplies theinternal filename (FILE). (Onthell08, thisisaF_RTRAN logical unitnumber suchas21.) Thisnumber isused asafileidentification number. Thebuffer location isadjusted tothebeginning ofthe common block /XNSTRN/andisstored inthearray BUFADD(FILE). Acheck ismadetoinsure that thisbuffer doesnotoverlap anyother currently opened buffers. BPENtheninitializes thebuffer area (itstores theword ‘WRIT’ inBUFF(1) andreturns awaiting further commands). Itmight beuseful toreview thenaming conventions fordatainNASTRAN. Acollection of data isbeing written bythecurrent module onthefirst output file(known tothemodule writer as201). TheDMAPcompiler assigns tothiscollection ofdatatheDataBlock Name ESTasthissymbol wasthefirst Alpha string intheDMAPoutput section forthismodule. The file allocator hasallocated theinternal FBRTRAN file21tothisdatablock. Physically, allwrites will takeplace ontounit21.Onthell08, thisunitmayalsohaveanexternal name attached viathe@USEcard. Thus theNewProblem Tape, which isFBRTRAN unitNo.9, hastheexternal nameNPTP. Theusernowcalls WRITE forthis file. WRITE again finds theinternal filenumber via theFISTandFIAT. Itchecks tobesurethefile isopentowrite andretrieves thebuffer address fromBUFADD incommon block /GIN_X/.Dataisstored inthebuffer bythisand 5.4-29 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES perhaps subsequent WRITEcallsuntiltheentire buffer isfilled. WRITEthencallsGIN_IO tocausethephysical write tooccur. GINOIO callsNTRANinthesynchronous mode. Finally, theprogrammer callsCLOSEandthecurrent buffer isflushed andaphysical end-of-file is placed attheendoftheGINOblocks. ReadData Thedatareadsequence isquiteparallel tothedatawritesequence. 5.4.16.2 GINOSubroutine Organization TheGINOpackage consists ofthefollowing decks: _PEN FWDREC XEOT CLOSE EOF GINO READ SKPFIL GINOIO WRITE RWUNLD NTRAN$ BCKREC XGINO REWIND Thecalling sequence forOPEN,CLOSE, READ,WRITE, FWDREC, BCKREC, REWIND, E_F,SKPFIL, XGINO, GINO,andXEOarediscussed inSection 3oftheProgrammer’s Manual. RWUNLD isdescribed inSection 5.4.16.1. XGIN_isaGIN_utility subroutine toperform thelook-up associated with theGIN_filenametointernal number conversion. XEOTiscalled byRWUNLD andcommunicates withtheoperator inmounting anddemounting multireel tapes. Thedocumentation forGIN_IO isasfollows: Purpose Toperform physical I/_onthe1108. Callin9Sequence CALLGINOIO($N,OPCODE,BUFF), where $Nisastatement number toreturn toifanI/0 erroroccurs. Inthiscase,GIN_IO willsettheERRORwordin/GINOX/ asfollows ERROR=6 ISTAT, whereISTATistheNTRANstatus word. 5.4-30 (811172)"},"title":"Programmer's Manual P82"},"/docs/programmers/programmers_manual_083/":{"data":{"":"NASTRAN ONTHEUNIVAC 1108(EXEC 8) PCBDE isaninteger 1through 5where: lisrewind file 2iswrite oneblock 3isreadoneblock 4isbackspace oneblock 5isforward space oneblock BUFFistheaddress oftheblock tobewritten. Thelength oftheblock isgiven by word NBUFF3 in/GIN_X/. Method NTRAN operations forRewind (lO), WRITE (1),READ (2),Backspace (6,7), orforward space (6,7) aregiven. Reads andwrites areproceeded byandfollowed bywaits (22). Backspace andforward space areproceeded bywaits. Theforward space andbackward space operations depend onproper identification ofthefiletype (tape ordisk). Todothis, theTAPE flag (word NTAPE) of/GIN_X/isconsidered. Diskfiles arepositioned forward orbackward, according totheword N_SECT in/GIN_X/. NTRAN documentation must beobtained from UNIVAC. TheGIN_buffer forthell08isexactly asdescribed intheProgrammer’s Manual inSection 3 (GINB). OntheIf08 subroutines READandWRITE donotcallXGIN andGIN_, butrather contain within themselves thiscodetoimprove efficiency. Most communication within theGIN_routines isaccomplished viathecommon block /GIN_X/. C_F_M_N/GIN_X/LENGTH,FILEx,E_R,_P,ENTRY,LSTNAM,N,NAME,NTAPE,xYZ(2),UNITAB(75),BUFADD(75), NBUFF3,ERR_R,N_SECT,DIAGI5,1FET,IMST,ISUB,NBUFF,CBP,CLR where: LENGTH isthe FILEX isthe E_R isthe P isthe ENTRY isthe LSTNAM isthe N isthelength ofGIN_X internal filenumber end-of-record flag operation requested entry typetoGIN internal filenumber ofthelastGIN_operation number ofwords totransmit 5.4-31 (811172)\nNASTRAN-OPERATINGSYSTEMINTERFACES NAMEistheGINOfilename NTAPEisthetapeflagforthisfile XYZ(2)isnotused UNITABistheunitstatustable Bits1-16arethelargestblocknumberonthefile Bits16-32arethenumberoflogicalrecordsonthefile BUFADDisthebufferaddresstable NBUFF3isthelengthofaphysicalblock ERRORistheGIN_I_errorflag NBSECTisthenumberof28wordsectors/record DIAGI5istheDIAGI5switchstatusforOPEN/CLOSE tracer IFET,IMST,ISUB arenotused NBUFFisthecurrentbuffersizefrom/SYSTEM/ CBPisthecurrent buffer pointer fromGIN_ CLRisthecurrent record pointer fromGIN_ Entry points QWRITE (inWRITE) andQREAD (inREAD) arespecial entry points formatrix packing/unpacking, andarediscussed inSection 5.4.17. 5.4.17 Matrix Packin9 Routines 5.4.17.1 Introduction Matrix packing isthemostcritical areatorunning times formost NASTRAN operations. The basic operation isquite simple; takeatermfromtheprogrammer andstore itinpacked format in aGIN_buffer, ormoreoften, takeatermfromaGINO buffer andprovide ittotheprogrammer. Functionally, theroutines are: BLDPK -Packoutamatrix onetermatatime. PACK-Packoutamatrix onecolumn atatime. INTPK -Unpack amatrix onetermatatime. UNPACK -Unpack amatrix onecolumn atatime. These routines arefunctionally documented inSection 3oftheProgrammer’s Manual. The nature ofapacked record isconceptually described inSection 3.5.1 oftheProgrammer’s Manual. 5.4-32 (8/I/72)\nNASTRAN ONTHEUNIVAC ll08(EXEC 8) Prior toLevel 15,datawasretrieved viathefollowing flow: I.Theprogrammer called UNPACK tounpack acolumn ofthematrix. 2.UNPACK called INTPK foreachnonzero terminthematrix. 3.INTPK called READforeach 50-word string. 4.READcalled XGIN_ foreachcall. 5.XGIN_ called GIN_foreachcall. 6.GIN_called GIN_I_ foreachblock needed. 7.GIN_I_ called NTRAN foreachblock needed. Thus, thefollowing treecould bedrawn: UNPACK te__INTK P50termDs READ 50term_ XGIN_ 50term_ GIN_blo__ck GIN_I_ blo__ck NASTRA N Theresult wasatime tounpack pertermthatwastentimes thetimetoreadtwowords. Level 14imbedded XGIN_ andGIN_ inREAD, reducing thetimeby20percent. Level 15rewrote thematrix packing routines, suchthattheyareallowed direct access intotheGIN_buffer. In particular, define astring ofmatrix terms asastring ofconsecutive nonzero terms. Thell08 matricies arepacked asstrings. Thus, ourflowdiagram nowappears asfollows: UNPACK str_iNTPK str___REA Dbloc_ GIN_I_ blo__ck NTRAN This wasdoneallinF_RTRAN (incontrast toIBMandCDCGIN_/PACK routines) forthree reasons: I. 2. (andnotatalliftheinstructions anddataareinseparate banks, which isusually the case). 3.Development andmaintenance costs ofF_RTRAN codearelessthanthose forassembly language code.TheFeRTRAN compiler produces reasonable code. Register-to-register operations areonlyafactor oftwofaster thancore-to-register 5.4-33 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.4.17.2 Format ofaPacked Column Theformat ofapacked column onthe1108isasfollows: WordNumber Con_ents Typeofelements (I-4) String descriptor (NS/R@W) Floating pointvalues 2+NS*NW_RDS String descriptor where: NOTES:TypeofElements 1 RealSingle Precision NW_RDS =1 2 RealDouble Precision NW_RDS =2 3 Complex Single Precision NW_RDS =2 4 Complex Double Precision NW@RDS =4 String descriptor istwopacked halfwords. Right16bitsaretherownumber ofthefirstelement inthestring (R_W). Leftbitsarethenumber ofelements whichfollow (NS). I.Nomatricies written underpre-Level 15NASTRAN’s canbereadbyLevel15. 2.Allstrings arebroken attheendofabuffer (i.e., aphoney string descriptor is inserted inthepacked column ifneeded). 3.Nullcolumns arenullrecords (i.e., GIN_records which contain 0words). Sucha record canbegenerated byCALLWRITE(FI,O,O,I). 4.Note2aboveimplies thatmatricies maynotbemanipulated byREADandWRITE, except forthetrivial caseofanexactcopy(suchasinP_Ling andcheckpointing). 5.4-34 (8/1/72)\nNASTRANONTHEUNIVAC1108(EXEC8) 5.4.17.3Programming Methods Twonewcommonblocks/QREADX/ and/QWRITX/ wereestablished toprovide communication between thematrix packing routines. /QREADX/PTYPE,M,L,IS,L_I,MM,I_PTI,NI,NS,IR_W,FILES,E_RI Name SetB PTYPE INTPK M INTPK L INTPK IS INTPK _LDI INTPK MM INTPK I_PTI INTPK N1 INTPK NS INTPK/ QREAD IR_W INTPK/ QREAD FILES QREAD EBRI QREADContent Typeofelement. Number ofwords perelements returned. Computed gotoforelement conversion. Number oftermsusedinthecurrent string. Rownumber offirst terminthestring. Number ofwordsperelement inthebuffer. Multifile version flag. Pointer from/XNSTRN/ tothecurrent element inthebuffer. Number ofelements inthecurrent string. Rownumber ofthefirstelement inthe current string. Internal GINBfilenumber ofthismatrix. Endofrecord flagforthecolumn. /QWR_Tx/XD(6),PTYPE,TYPE,Lx,LY,LD,C_UNT,NNZ,LPR,F_LES,BPT,R_W,N,WR_TE,LZ,MK,MM Name SetBy XD BLDPK PTYPE BLDPK TYPE BLDPK LX BLDPK LY LDI BLDPK/ PACK CBUNT BLDPK/ USER NNZ BLDPK/ QWRITContent Termandrownumber tobepacked. Formofelements afterpacking. Computed gotofortypeofelement packin Computed goto’s fortypecfelement backing. Rownumber ofpreviously packed element. Totalnumber ofelements packed. Number ofnonzero words todatein current string. 5.4-35 (8/I/72)\nNASTRAN-OPERATINGSYSTEMINTERFACES Name Set__ LPR BLDPK/ QWRIT FILES BLDPK/ QWRIT I_PTI BLDPK IROW BLDPK N1 BLDPK/ QWRIT NWRITE BLDPK/ QWRIT/PACK LZ BLDPK MK BLDPK MM BLDPKContent Pointerrelativeto/XNSTRN/ tothe laststring descriptor Internal GINOfilenumber forthis matrix. Multiple version flag. Rowposition offirst terminstring. Pointer relative to/XNSTRN/ tothe current buffer position. Number ofwordswhich canbewritten inthebuffer fromnowon. Firstnonzero termcomputed goto. Number ofwords pertermafterpacking. Number ofwords pertermbefore packing. Inaddition, fourspecial entrypoints wereprovided totheGIN_routines tofacilitate matrix work. Theseareasfollows: Deck WRITE EntryPoint QWRITE Callin9Sequence CALLQWRITE Method QWRITE moves theNwordsstored inXDintotheGINObuffer specified byFILES, where Nis setin/GIN_X/. Italsomaintains NNZ,CBP,NI,NWRITE, andLPR. Deck OPNCOR Entry Point QWC_R Callin 9Sequence CALL QWCOR(IZ,N) 5.4-36 (8/7/72)\nNASTRAN ONTHEUNIVAC If08(EXEC 8) Deck READMethod QWC_R moves theNwords stored inXDintothecorebuffer starting atIZ(1). maintains NNZ,Nl,andLPR.Italso Entry Point QREAD Callin9 Sequence CALLQREAD Method QREAD returns therowposition andnumber ofelements inastring onfileFILES. Italso maintains Nl,NS,IRBW, andE_RIincommon block /QREADX/. Deck PNC_R Entry Point QRC_R Callin 9Sequence CALLQRC@R(IZ) Method QRC_R returns therowposition andnumber ofelements inastring fromthecorefilestarting atIZ(1). Italso maintains Nl,NS,IR_W, andE@RIin/QREADX/. Eachofthefourmajor functional routines (BLDPK, INTPK, PACK, andUNPACK) usesaslightly lifferent strategy inutilizing theinformation available in/GIN_X/,/QREAD/,/QWRITX/,andthe newentry points intoGIN. PACK PACKprovides aspecial option (inaddition tosuccessive calls toBLDPK) where thetype oftheterms incorearethesameasthetypetobepassed toGIN_. Inthiscase, thefirst term ineachstring ispassed viaBLDPK, butsubsequent terms arestored directly inthe GIN_ buffer. 5.4-37 (811172)\nI° 2. 3. 4. 5. 6. 7. 8. 5.4.19NASTRAN -OPERATING SYSTEM INTERFACES BLDPK BLDPKprovides fortwooptions: I)Ifconversion oftypesmusttakeplace, eachtermis converted andQWRITE iscalled; 2)ifnoconversion oftypestakesplace, termsarestored directly intotheGIN_buffer untilthebuffer isfull, whenQWRITE iscalled. UNPACK UNPACK provides twospecial options (inaddition tosuccessive callstoZNTPK) when thetypeofthetermsincoreisthesameasthetypetobepassed totheuser. I)if INCUR=I,atight (3instruction loop)passes eachstring totheusercore. 2)If INCUR_I,aspecial looppasses eachstring totheusercore. Inbothcases, thefirst andlasttermsineachstring areobtained viaacalltoZNTPK. INTPK INTPKcallsQREADforeachstring. Allsubsequent requests fortermswithin thestring usedirect pointers intotheGIN_buffer. 5.4.18 1108TimeEstimation Inestimating running timesforvarious operations inNASTRAN, several machine dependent factors arecritical. Theseinclude: Buffer size(SYSBUF) =871. Basicdouble precision multiple andaddtightlooptime=14.0x10-6sec. Double precision multiply andaddnottightlooptime=35 Packorunpack 1D.P. term=25x10-6sec. INTPKorBLDPK1D.P. term=50x10-6sec. Readorwrite1word=6x10-6sec. Opencoreavailable –DIAG13onsmall problem. Stiffness matrix formulation (QUADPIate) :.7sec Single Precision Routines Fortheconvenience of1108users, single precision versions ofsomecritical routines have beenincluded onthe1108tapesandplaced properly intheoverlay structure. Itisnotthe 5.4-38 (8/I/72)\nNASTRAN ONTHEUNIVAC 1108 (EXEC 8) intent tosupport aprecision choice inLevel 15ortosupport single precision onthe1108, but manyproblems canbesuccessfully solved onsmaller cores andfaster bymaking useofthese single precision decks. Single precision versions ofthefollowing decks areavailable ontheIf08object tape: Function Realsymmetric decomposition RSPSDC Complex symmetric decomposition CSPSDC Realinverse power FBS(symmetric) INVFSPS.P.Name D.P.Name SDC_MP SCDCMP FBSINV Thecalling sequence toeachsingle precision routine isidentical tothecalltothedouble precision counterpart. Thus, thesingle precision version canbeactivated byadding anEQUcard toeachlink inwhich itisusedandrecollecting theexecutables. 5.4.20 UNIVAC Overlay Diagrams Figures 2through 15onthefollowing fold-out pages represent theNASTRAN overlay structure fortheUNIVAC ll08. NOTES: Thefollowing comments areincluded toaidtheuserinreading theoverlay diagram. I. Segments having 0000000 asthefirst routine aremost likely notaccurately represented. Thistypeofsegment should follow thelongest ofseveral segments enumerated inaSEGstate- ment. Instead itcanfollow anyoneofthese enumerated segments which isnotnecessarily thelongest. Forsuch0000000 flagged segments, themapprocessor input should be referenced. 2. Inorder tomeetrestrictions imposed byprinting overlay structures, someroutine names areomitted fromthemainsegments ofeachofthefourteen links. Thefollowing fourteen lists areofthose routines omitted fromeachmainsegment. 5.4-39 (811/72)\nNASTRAN -OPERATING SYSTEM INTERFACES LINK1 RWUNLD STAPID TW_ GIN_ READ XE_T TIME NAMES XGINO PPDUMP SKPFIL XLINK UTPUT GIN_I MAPFNS E_F SEM XVPS FNAME MESAGE PAGE QREADX XPFIST PEXlT QWRITX CBRSZ TYPE XXFIAT SSWTCH FWDREC DESCRP XMDMSK XFIST UTIL WRITE XCEITB @CLNT XFIAT PEN REWIND STIME GIN_X MSGX CLOSE BCKREC SYSTEM LINK2 QWRITX STIME TYPE OUTPUT MSGX PNCBR STAPID XMDMSK XVPS XDPL ZNTPKX TIME CLNT XPFIST OSCENT CORSZ XLINK GINOX XXFIAT XNSTRN DESCRP SEM TW XFIST SYSTEM XCEITB QREADX NAMES XFIAT LINK3 QREADX BUTPUT GIN OPEN FWDREC TYPE XVPS XGIN CLOSE WRITE XMDMSK XPFIST GIN_IO READ REWIND BCLNT XXFIAT FNAME PPDUMP BCKREC GINOX XFIST PEXlT MAPFNS XDPL TW_ XFIAT SSWTCH MESAGE _SCENT NAMES MSGX UTIL QWRITX XNSTRN SYSTEM LINK4 CORSZ TYPE XXFIAT SSWTCH FWDREC DESCRP XMDMSK XFIST UTIL WRITE XCEITB OCLNT XFIAT OPEN XDPL STIME GINBX MSGX CLOSE OSCENT STAPID TWO GINO READ XNSTRN TIME NAMES XGINO PPDUMP REWIND XLINK OUTPUT GINOIO MAPFNS BCKREC SEM XVPS FNAME MESAGE SYSTEM QREADX XPFIST PEXlT QWRITX LINK5 C_RSZ TYPE XXFIAT SSWTCH FWDREC DESCRP XMDMSK XFIST UTIL WRITE XCEITB _CLNT XFIAT PEN REQIND STIME GINBX MSGX CLOSE BCKREC STAPID TWO GINO READ XDPL TIME NAMES XGINO PPDUMP OSCENT XLINK OUTPUT GINOI MAPFNS XNSTRN SEM XVPS FNAME MESAGE SYSTEM QREADX XPFIST PEXlT QWRITX 5.4-40 (8/I172)\nLINK6NASTRAN ONTHEUNIVAC If08(EXEC 8) LINK 7C_RSZ TYPE XXFIAT SSWTCH FWDREC DESCRP XMDMSK XFIST UTIL WRITE XCEITB CLNT XFIAT PEN REWIND STIME GIN_X MSGX CLOSE BCKREC STAPID TW GIN READ XDPL TIME NAMES XGINO PPDUMP _SCENT XLINK UTPUT GIN_I MAPFNS XNSTRN SEM XVPS FNAME MESAGE SYSTEM QREADX XPFIST PEXIT QWRITX LINK8C_RSZ TYPE XXFIAT SSWTCH FWDREC DESCRP XMDMSK XFIST UTIL WRITE XCEITB CLNT XFIAT PEN REWIND STIME GINOX MSGX CLOSE BCKREC STAPID TW GIN READ PATX TIME NAMES XGINO PPDUMP PARMEG XLINK _UTPUT GIN_I@ MAPFNS XDPL SEM XVPS FNAME MESAGE SCENT QREADX XPFIST PEXIT QWRITX XNSTRN SYSTEM QREADX UTPUT GIN PEN FWDREC TYPE XVPS XGIN CLOSE WRITE SMDMSK XPFIST GIN_I READ BCKREC CLNT XXFIAT FNAME PPDUMP XDPL GIN_X XFIST PEXIT MAPFNS @SCENT TW XFIAT SSWTCH MESAGE XNSTRN NAMES MSGX UTIL QWRITX SYSTEM LINK9 GINg PEXIT CLOSE MAPFNS _SCENT XGINg SSWTCH READ MESAGE XNSTRN GINOIg UTIL PPDUMP XDPL SYSTEM FNAME _PEN LINK lO SKPFIL UNPAKX TYPE MSGX MAPFNS PACK ZNTPKX XMDMSK GINO MESAGE UNPACK ZBLPKX OCLNT XGINO QWRITX PRELOC CORSZ GINOX GINOIO FWDREC INTPK DESCRP TWO FNAME WRITE BLDPK XCEII’B NAMES PEXIT REWIND WRTTRL STIME OUTPUT SSWTCH BCKREC CDCMPX STAPID XVPS UTIL XDPL DCOMPX TIME XPFIST OPEN OSCENT TMTOGO XLINK XXFIAT CLOSE XNSTRN BITPOS SEM XFIST READ SYSTEM PACKX QREADX XFIAT PPDUMP 5.4-41 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES LINKII BLDPK UNPAKX XMDMSK GINO MESAGE PRELOC PACKX OCLNT XGINO QWRITX INTPK CORSZ GINOX GINOIO FWDREC PACK DESCRP TWO FNAME WRITE UNPACK XCEITB NAMES PEXlT REWIND WRTTRL STIME OUTPUT SSWTCH BCKREC BITPOS STAPID XVPS UTIL XDPL TMTOGO TIME XPFIST OPEN OSCENT CINVPX XLINK XXFIAT CLOSE XNSTRN ZBLPKX SEM XFIST READ SYSTEM ZNTPKX QREADX XFIAT PPDUMP TRDXX TYPE MSGX MAPFNS LINK12 SEMDBD STIME TWO XGINO MAPFNS XSEMI2 STAPID NAMES GINOIO MESAGE MAIN12 TIME OUTPUT FNAME QWRITX NTAB$ XLINK XVPS PEXIT FWDREC NTRAN$ SEM XPFIST SSWTCH WRITE PATX QREADX XXFIAT UTIL BCKREC PARMEG TYPE XFIST OPEN XDPL CORSZ XMDMSK XFIAT CLOSE OSCENT DESCRP OCLNT MSGX READ XNSTRN XCEITB GINOX GINO PPDUMP SYSTEM LINK13 BLDPK STIME NAMES GINOIO MESAGE INTPK STAPID OUTPUT FNAME QWRITX UNPACK TIME XVPS PEXlT FWDREC WRTTRL XLINK XPFIST SSWTCH WRITE ZBLPKX SEM XXFIAT UTIL REWIND SORT QREADX XFIST OPEN BCKREC ZNTPKX TYPE XFIAT CLOSE XDPL UNPAKX XMDMSK MSGX READ OSCENT CORSZ OCLNT OPNCOR PPDUMP XNSTRN DESCRP GINOX GINO MAPFNS SYSTEM XCEITB TWO XGINO LINK14 XXFIAT XGINO UTIL MAPFNS REWIND XFIST GINOIO OPEN MESAGE XDPL XFIAT FNAME CLOSE QWRITX OSCENT MSGX PEXIT READ FWDREC XNSTRN GINO SSWTCH PPDUMP WRITE SYSTEM 5.4-42 (8/I/72)\nNASTRAN ONTHEUNIVAC1108(EXEC8) 3.Notethatonthe1108, contrary toanyother NASTRAN computer, there arereally two similarly shaped overlay pictures, onefortheIbank(instructions), andanother for theDbank(data). 64,000IXXX2 _ /ZZZl/ /YYY3/IBank DBank Figure I.Overlay Sample Several important points result fromthisfigure. First, allmodules arepenalized by longinstruction banks inother modules. Second, areasonable overlay treederived from total routine lengths maynotbereasonable forthell08. Thus, thell08overlay tends tobemore complex thantheoverlay fortheother NASTRAN computers. Critical statistics arethelength oftheI-bank, thelength oftheD-bank, thetotal length ofeach link, andthesmallest opencoreaddress possible (EndofD-bank oftherootsegment). 5.4-43 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES Thefollowing tablesummarizes thesestatistics foreachlink: Link Ii0 DIO T_T8 _C8 1 19051 13638 101505 62724 2 20280 10941 76274 65426 3 22172 10963 102322 71300 4 16423 11032 67427 56721 5 19799 11264 75777 65301 6 18056 10908 72233 61525 7 16779 11056 67457 56751 8 15107 10367 64176 53575 9 13604 10165 63664 53030 I0 16643 11012 67403 56704 II 20910 11170 77641 67107 12 15939 10523 65432 54724 13 21192 11547 101432 70076 14 14067 15068 75333 53655 Notethatthesamemodule mayappear nmorethanonelink. The_ollowing table (Fi_ur 17)showswhich linkeachmodule occurs inonthe1108.4. 5°Eachlink LINK1 – LINK2 – LINK3 – LINK4 – LINK5 – LINK6 – LINK7 – LINK8 – LINK9 –mayhaveunresolved references. Theyareasfollows: LINK,SEMTRN, LD45,LD46,LD47,LD48, LD50,LD51,NCLOS$ NCL_S$, LINK,TAID,TAIE NCLOS$, LINK,KBEAM, MBEAM NCLOS$, LINK NCL_S$, LINK NCL_S$,RSTTVV, LINK NCLBS$, LINK NCL_S$, LINK NCLOS$, LINK 5.4-44 (811172)\nNASTRAN ONTHEUNIVAC I108(EXEC 8) LINKIO –NCLOS$, LINK LINKII –NCLOS$, LINK LINKI2 –NCLOS$, LINK LINKI3 –NCLOS$, LINK, SBEAMI, SBEAM2 LINKI4 –NCLOS$, LINK 5.4-45 (811172)\nNASTRAN ON THE UNIVAC 1108 (EXEC 8) u’t XH W XGP IfW XGPL XGPIDG , XGPIW X6PI2 XGPf3 XGPIY XGP IS ore XGPIS XGP 17 XGPI8 XGPLC 014 XGPID wm XBSBD KB OSm M)56EN XBPIBS MNIO HPWftT XSPR XLKSPC XPRRRti XSCNDn owwoo X6PI I Figure 2. Overlay Structure for Link 1 on the UNIVAC 1108."},"title":"Programmer's Manual P83"},"/docs/programmers/programmers_manual_084/":{"data":{"":"NASTRAN ON THE UNIVAC 1108 (EXEC 8) Figure 3. Overlay Structure for Link 2 on the UNIVAC 1108.\n/ _.D_IsT m _t_4 o5TR\nO2 O7 tt=Rl_ FB6 F_ F_ SSg_H_ flEfl_[ S_Rm 9Di!! URULER CRLL_ RgR_ OILOtO SSG_R 9t2 856R2X_ aRg_ NTnO PmW’F.G XNi\"F_ L ( mtl_g. Ul_KX THI\"060 B[IlIOS ze(X ZN11_X O_COR BI]COfiP LOOP gt3 O000OO0 FRCTOR 01_ FRClflX SSGm EXTERN Q’WLt 6RRVL3 F’PONT O.IBOY COlIBIN GRIN PLOI PRE:m:]X Or6 666RlX\nNASTRAN ONTHEUNIVAC If08(EXEC 8) LINK 5 xcsm FI(FNT 8ASg.B Y_YL PERNJT BISR_ SRXB V£0 GPml mllour mTW 11tlltBX FPT mTL ROD BARf_E_Br PRB_OC GPTABO DEL=I BSGEIg 88tuRK s-rr 1RFLT 1Rim TRIrlB! ODm_ GDI’f.T1\"El1_ SOLID TTOAI_R ffiBl FaJffi_ FR F'3 FlSPRE11_ Or8 TTI_f’RRI m m IF_ COEF FJAB BINr F88 fft_ 1:2tt FSe TTR.GOrSCONE OU DUm DUff/ ourm o1300ooo SSGBtX017DE_COR I]FCOR D Figure 6.Overlay Structure forLink5ontheUNIVAC ll08. 5.4-55 (8/1/72)\nNASTRAN ON THE UNIUAC 1108 (EXEC 8) Figure 7. Overlay Structure for Link 6 on the UNIVAC 1108."},"title":"Programmer's Manual P84"},"/docs/programmers/programmers_manual_085/":{"data":{"":"NASTRAN ON THE UNIVAC 1 108 (EXEC 8)\nNASTRAN ON THE UNIVAC 1108 (EXEC 8)\nNASTRAN -OPERATING SYSTEM INTERFACES ¢¢ C N C Z Ul 0 bJ t_ ..J =\u003e 0 0 r ar Z -,I II ),. Z_r b,,,c Z k_ ..JJ– OC :[eL | Ldt,,. ,,I[) 7 0 s-.o | .J,\u003c ::)L,,r:T=r__r=r=r_rIr 0f(000000NN m ¢LQ¢.,I¢,\"¢¢¢¢.¢¢, •4_“4:__-WDWDWDWDp- W Figure 16. LinkSpecification Table. 5.4-75 (8/I/72)"},"title":"Programmer's Manual P85"},"/docs/programmers/programmers_manual_086/":{"data":{"":"NASTRAN ONTHEUNIVAC 1108(EXEC8) c =r =r w 0 .J | Z Figure 16.LinkSpecification Table (Continued) 5.4-76 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES 0 c rf QC .J e. 0 z .J | Z I | Figure 16. LinkSpecification Table (Continued) 5.4-77(8/I/72)\nNASTRAN ONTHECDC6400/6600 (SCOPE 3) 5.5 NASTRAN ONTHECDC6400/6600 (SCOPE 3) 5.5.1 introduction NASTRAN operates asasingle jobstepontheCDC6400/6600 computers under theSCOPE 3 Operating System. NASTRAN iscreated bytheLinkage Editor (seeSection 5.6), aspecial program developed fortheCDC6400/6600 computers toprovide compatibility with theother computing systems forwhich NASTRAN hasbeendeveloped. Theoverlay structure forNASTRAN ontheCDC6400/6600 issomewhat different fromtheother computing systems inthatonelink, LinkO,remains incoreatalltimes during program execution. This linkcontains subroutines andExecutive tables common toalllinks (e.g., GINB, RDTRL, FNAME, /XXFIAT/,/XFIAT/,/SYSTEM/).Consequently, theprimary functions ofENDSYS andBGNSYS (see Section 3.3.5), which saveandrestore Executive tables, arenotrequired. Linkswitching is accomplished inamanner similar totheIBM360through aCALLLINK. LINKisanentry point in thesegment loader,which wasdeveloped inconjunction withthelinkage editor. TheNASTRAN executable program normally exists asasequential fileontape, although itmay exist asanindexed fileondisk. Thefirst fewrecords ofthefilecontain aninitial load program produced bythelinkage editor. Thisprogram iswritten asaCDCmain level overlay (0,0) andsettoreside onabsolute overlay filePPPPP. Theremainder ofthefile iscomprised ofthe NASTRAN links (onedirectory record perlinkplusonelogical record persegment). Toinitiate the NASTRAN program, acontrol statement suchasNASTRAN, isexecuted. Thiscauses theCDCoverlay loader toloadtheinitial program loadportion oftheNASTRAN fileandtransfer control toXB_T (seeSection 5.6.1.I). TheXBB_T program reads theremainder ofthefile, writes itonthedisk inindexed form, reads Link0intocentral memory andtransfers control toLinkO.Link0is entered through asmall mainprogram called NASTRAN which inturncalls Link l(thePreface Link). Execution continues until theprogram terminates through acall toPEXIT which inturncalls EXIT. ForLevel 15mostofthematrix operations, other thanthevarious matrix assemblers, have beenconverted tosingle precision (60bits) arithmetic. Since thepacking routines inNASTRAN will accept either single-precision ordouble-precision input andprepare either single-precision ordouble-precision output onrequest, itispossible tochange thearithmetic precision inthe matrix operations onaselective basis. Thefollowing routines areusedinLevel 15toprovide single-precision matrix operations ontheCDC6000series: 5.5-I (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES I.RSPSDC -Matrix decomposition forreal,symmetric matrices. 2.RSPL00 -InnerloopforRSPSDC. 3.FBSSP-InnerloopforFBS. 4.MPYQ-Innerloopforrealandcomplex multiply-add (MPYAD) operations. 5.CSPSDC -Matrix decomposition forcomplex, symmetric matrices. 6.CSPL00 -InnerloopforCSPSDC. 7.INVFSP -Equation solution forinverse powermethod ofeigenvalue extraction. 5.5.2 Input/Output NASTRAN input/output isperformed inthreeways: (I)cardinput, printed output, andpunched output isaccomplished through standard FORTRAN formatted inputandoutput statements; (2)all otherinput/output except plotsisaccomplished through theGINOroutines whichinturncall 106600 (seeSection 5.5.6.13) toperform readsandwrites; and(3)plotoutput isaccomplished through SGINO (seeSection 3.4.51). Thenumber offilesavailable toGINOisafunction oftheMAXFILES parameter intheSYSTEM common block (seesection 2.4.1.8). AllNASTRAN fileswhich havenotbeenassigned totapeare treated asindexed filesonthedisk. Amaster indexforeachfileispermanently maintained in central memory neartheendofthefieldlength (seeFigure 2).Themaster indexcontains adisk pointer foreachsubindex record. Thesubindex records contain diskpointers foreachofthe blocked NASTRAN records. 196600 maintains theposition ofeachfileinthecommon block GIN066. Subindex records arereadorwritten atopenandclosetimeandduring reading orwriting whena subindex boundary ispassed. Actual input/output isaccomplished through XIORTNS (seeSection 5.5.6.7), which isaCOMPASS subprogram. XIORTNS communicates withtheSCOPEOperating System through callstoCPC. SGINOontheCDC6400/6600 functions independently ofother I/0. Itspointofcommonality withotherI/9routines isXIORTNS, which isusedtoperform thephysical writing ofdata. Figure 1depicts acomplete buffer asusedbyGINO, 106600 andXIORTNS. 5.5-2(811172)\nNASTRAN ONTHECDC6400/6600 (SCOPE 3) I BCW=“READ” or\"WRIT\" t 0 CBP CLR (notused) NBL_CK (notused) number ofwords inrecord orsegment data\"words Control WordseeSection 3.4.12 t, l, Z A 0 (=C $ mm C_ mmnumber ofwords inrecord orsegment datawords t Control Word LLR FET ÷ CIRCULAR BUFFER SUBINDEX SYSBUFNBUFF+2 NBUFF+2+NBRCBU =NBUFF+2+NBRCBU+NBRSUB NBUFF3 =NBUFF-2 NBUFF =SYSBUF-2-NBRCBU-NRBSUB SYSBUF, NBRCBU, andNSRSUB aredefined intheSYSTEM common block (seeSection 2.4.1.8) Figure I.GIN_ buffer ontheCDC6400/6600. 5.5-3 (811172)\nNASTRAN -OPERA!ING SYSTEM INTERF_,CES 5.5.3 Layout ofCoreStorage Figure 2illustrates thelayout ofcorestorage ontheCDC6400/6600. 638 768 1008 FL’ FieldLengthFL’ FL’ Link0 Current Link “Open Core” Storage forMaster IndicesCommunication area forSCOPEOperating System NASTRAN code NASTRAN working storage length =MAXFIL* (NBRMST+I) (seesection 2.4.1.8) Figure2.Layout ofcorestorage ontheCDC6400/6600. 5.5-4 (12-I-69)\nNASTRANONTHECDC6400/6600(SCOPE3) TheprimaryfunctionofGNFIAT(seesection3.3.4),whichoperatesinLinkl,istoinitialize theXFIATandFIATExecutivetables.Asasecondaryfunction,GNFIATreservesanareaattheend ofcorestorage forstorage ofthemaster index pointersforeachfile. Thelength ofthis reserved areaissubtracted fromthefield length fortheproblem, andtheavailable memory, FL’, isstored inwords 638and768.Thelength ofopencoreisreturned toacalling program bythe CgRSZ function. CCRSZ subtracts theaddress passed toitfromthecontents ofword768. All NASTRAN modules maythenutilize maximum corestorage provided tothejob. Thediscussioninsection 5.3.4 regarding overlayconsiderations ontheIBM360applies equally totheCDC6400/6600. s.5-5(12-1-_g)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.5.4 Execution Deck Setup Thefollowing examples illustrate thecontrol statements necessary toexecute theNASTRAN program once thegeneration procedure {see section 5.5.5) iscomplete. Thenumbers inparentheses totheleft ofsome ofthecontrol statements refer tonotes, which follow theexamples. Problem Conditions Example A B C D E FNASTRAN tape tape disk(common) disk(common) tape tapeBulk Data Input Medium cards UMF cards UMF OPTP OPTPCheckpoint no no yes yes no yesRestart no no no no yes yesDD80 Plot no no yes no no yes Example A (I)J_B. MAP(_FF) REQUEST NASTRAN,HI. reel#,R@L NASTRAN. RETURN(NASTRAN) 789 INASTRAN DataDeck1 6789 Example B J_B. MAP(BFF) 5.5-6 (811172)\n(2)NASTRAN ONT_ECDC6400/6600 (SCOPE 3) REQUEST NSTRN,HI. reel#,R_L REQUEST UMF,HI. reel#,R_L NSTRN.CREATE(NASTRAN) RETURN(NSTRN) RETURN(UMF) 789 {NASTRAN DataDeck 6789 Example C JBB. MAP(_FF) REQUEST NPTP,HI. SAVTP,RIL REQUEST PLT2,HI. SAVTP,RIL (3)C_MMI_N(NASTRAN) NASTRAN.ATTACH RETURN(NPTP) RETURN(PLT2) 789 NASTRAN DataDeck} 6789 Example D JBB. MAP(_FF) REQUEST UMF,HI. reel#,R_L REQUEST NPTP,HI. SAVTP,RIL C_MM_N(NASTRAN) NASTRAN.ATTACH 5.5-7 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES RETURN(UMF) RETURN(NPTP) 789 INASTRAN DataDeck1 6789 Example E J_B. MAP(_FF) REQUEST OPTP,HI. reel#,ROL REQUEST NASTRAN,HI. reel#,ROL (4) NASTRAN.CATLOG(NASTDA) RETURN(NASTRAN) NASTDA.ATTACH RETURN(_PTP) NASTDA.ATTACH 789 789NASTRAN DataDeck(including RESTART packet intheExecutive Control Deck)1 2ndNASTRAN DataDeckl 6789 Example F J_B. MAP(_FF) REQUEST NASTRAN,HI. reel#,R_L REQUEST NPTP,HI. SAVTP,RIL REQUEST OPTP,HI. reel#,ROL REQUEST PLT2,HI. SAVTP,RIL 5.5-8(8/I/72)\n(5)NASTRAN ONTHECDC6400/6600 (SCOPE 3) NASTRAN(,,X) RETURN(NASTRAN) RETURN(NPTP) RETURN(gPTP) RETURN(PLT2) 789 _NASTRAN DataDeck(including RESTART packet intheExecutive Control Deck)} 6789 Notes (1) (2) (3) (4) (5)Theinstallation dependent JI_Bcardshould specify sufficient resources torun thejob. Inaddition toexecuting theNASTRAN program, thiscontrol statement will cause theNASTRAN filetobedeclared acommon file. Thiscontrol statement attaches thecommon filetothejob. IfNASTRAN isexecuted asacommon file, running timewillbeapproximately 5-8minutes faster inelapsed timeand20seconds faster inCPUtime. This control statement copies thesequential fileNASTRAN tothedirect access file NASTDA which canthenbeexecuted repeatedly. AnyoftheNASTRAN program files (INPUT, 9UTPUT, PUNCH) maybesubstituted for such asXreplaces PUNCH inthisexample. 5.5.5 Physical Deliverables andGeneration ofExecutable System TheCDC6400/6600 version ofNASTRAN isdelivered onfour (4)multifile tapes recorded at adensity of800bpiinabinary (oddparity) format. These tapes are: TAPEI -EXECUTABLE This tapecontains theexecutable versions ofthree programs plustheNASTRAN overlay loadmapoutput fromthelinkage editor 5.5-9 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES File1-NASTRAN executable File2-Linkage Editor executable File3-Langley RunCompiler executable File4-NASTRAN loadmap TAPE2-S_URCE Thistapecontains source codeforall6000NASTRAN decks, the6000linkage editor, andcontrol cardsfortheoverlay structure allinsequential _LDPL format forUPDATE Version 1.2. File1-NASTRAN LDPL Machine-independent decksappear firstinalphabetical orderfollowed bymachine-dependent decksinalphabetical order. File2-Linkage Editor OLDPL Source forlinkage editor routines isfollowed bysource forLINKERR, XL_ADER, XB@T, andXE_F. OntheC_MPILE filethesefourroutines are separated fromthemainbodyoflinkage editor routines byaCWEORafter theMAPFNS deck. File3-Overlay Control Cards_LDPL Several decksdefining theNASTRAN overlay structure arefollowed bya CWE_Randasingle deckdefining alinkage editor overlay structure. TAPE3 -_BJECT Thistapecontains object deckcodeonthreefiles. File1-NASTRAN object decksinalphabetical order(940records) File2-Linkage Editor object decks (26records) File3-LINKLIB object decks(105records) Object library fromwhich thelinkage editor satisfies external references. TAPE4 -DEMONSTRATION ITEMS File1-UserMaster File File2-Demonstration Problem Driver Decks (fifty records, onerecord perdeck) File3-52-Demonstration Problem execution output print files File53-Datadeckforgenerating theUserMaster File Thesource maybecompiled usingtheLangley RUNcompiler whichmustreside onabsolute overlay fileLRC.Thecompilation mustbehandled inpartssincetherearetoomanyBlock Data 5.5-10 (8/I/72)\nNASTRAN ONTHECDC6400/6600 (SCOPE 3) programs forasingle run. JOB,PI,TIOOO,CMI40000. REQUEST,TAPEI,HY. CBPYBF(TAPEI,X,2) CBPYBF(TAPEI,LRC) RETURN(TAPEI) REQUEST,_LDPL,HY. UPDATE(Q,L=I,C=@NE) UPDATE(Q,L=I,C=TWB) RETURN(_LDPL) LRC(S,,,_NE ….ASA,XREF) LRC(S,,,TWO ….ASA,XREF) EXIT. UNLOAD(TAPEI) UNLOAD(_LDPL) 789 *COMPILE,ADD.OUTPT4 789 *COMPILE,PAGE.XCBRSZ 6789Thefollowing setup willcompile theNASTP_AN system intwoparts. NASTRAN executable TAPE2 -Source Oncearelocatable object fileiscreated, itcanbeusedwiththelinkage editor and SUBSYS deck togenerate anexecutable system asfollows: JOB,PI,T2OO,CMI20000. REQUEST,TAPE2,HY. COPYBF(TAPE2,SCRATCH,2) COPYBF(TAPE2,_LDPL) RETURN(TAPE2) REQUEST,TAPE3,HY. C0PYBF(TAPE3,NASTBBJ)Source SUBSYS Source Object 5.5-II (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES COPYBF(TAPE3,LINKEDT) COPYBF(TAPE3,LINKLIB) RETURN(TAPE3) UPDATE(Q,L:I) LINKEDT(COMPILE) REQUEST,TAPE,HI. COPYBF(NEWX,TAPE) RETURN(TAPE) EXIT. UNLOAD(TAPE2) UNLOAD(TAPE3) UNLOAD(TAPE ) 789 *IDENT,_VERLAY *DELETE,LINKEDT.2 LINKEDIT LET,_UTFILE=NEWX(T), PARAM(2)=I200 ,PARAM(6)=I4000 LIBRARY NASTOBJ *C_MPILE,LINKEDT.ENDLINK 6789SAVETAPE 5.5.6 Machine Dependent Routines Thefollowing utility routines necessary toNASTRAN operation must,bytheirnature, be implemented inamachine dependent manner. Certain oftheroutines havebeenwritten inCOMPASS language, andtheremainder areinF_RTRAN language. 5.5.6.1 MAPFNS(C_MPASS) TheMAPFNSdeckembodies asetof25utility functions androutines. Theseareasfollows: Logical Functions ANDF(logical product oftwowords) 5.5-12 (811172)\nNASTRAN ONTHECDC6400/6600 (SCOPE 3) _RF(logical sumoftwowords) XBRF (logical difference oftwowords) C_MPLF (complement ofaword) LSHIFT (left shift ofaword) RSHIFT (right shift ofaword) Utility Functions C_RSZ (returns length of\"open core\") C_RWDS (returns difference oftwoaddresses +l) LW_RDS (returns difference oftwoaddresses. CDC6000 only) L_CF (returns thevalue ofanaddress. CDC6000 only) INSTAL (returns installation name, left justified, blank fill. CDC6000 only) Utility Routines (CDC 6600 only) XST_RE (stores anarray atanabsolute position incore) XFETCH (fetches anarray from anabsolute position incore) XJUMP (transfers control toanabsolute location incore) ZAP(stores zeros between specified locations incore) REC_VRY (initializes PProutine RCV) LINI(20. (provides aspecial call toLink 20,theNASTRAN exit link) XCIII_I_N (executes theC_MM_N macro andreturns thestatus ofafile) FIELDLN (returns thefield length assigned tothejob) FLUSH (makes aspecial call toSYSTEM. toempty output buffers) TDATE (returns Bw)nth, day,year, time) KL_CK (returns current value ofCPUclock) DAYTIME (returns current time onwall clock) DMPXXXX (writes exchange register dump onoutput) SET66 (stores installation name atdesignated location) 5.5.6.2 C_NMSG (F_RTRAN) TheC_NMSG routine enters messages intheDAYFILE denoting thetimesoftheinitiation and completion ofmodules during NASTRAN execution. 5.5-13 (811172)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.5.6.3 GNFIAT (F_RTRAN) GNFIAT initializes theXFIATandFIATtables andreserves storage forthemaster indices (seeSection 5.5.2). 5.5.6.4 DUMPandPDUMP(F_RTRAN) AcalltoPDUMPproduces atracebacklisting and,ifaDIAG1cardappeared intheExecutive Control Deck,amemory dumpisgiven. PDUMPreturns tothecalling program. DUMPoperates similarly except terminates withaCALLEXIT. 5.5.6.5 PEXIT66 (FORTRAN) PEXIT66 iscalled fromPEXlTonly. Itterminates activity onallNASTRAH files. Tapesare unloaded. Spaceassigned todiskfilesisevicted. PEXIT66 terminates withaCALLEXIT. 5.5.6.6 SGINO (F_RTRAN) SGINOisusedbytheplotroutines towriteplottapes. Actual writes areaccomplished by SGINBthrough callstoXI_RTNS. 5.5.6.7 XI_RTNS (C_MPASS) TheXIORTNS deckembodies asetofutility routines which communicate withtheSCBPEOpera- tingSystem through CPCtoaccomplish various fileoperations. Portions ofcodeinXCLOSE and READXareinstallation dependent. Theyaremodified afterdetermining theinstallation nameby acalltoSET66. EntryPoints X_PEN (constructs FETandinitiates activity forfile) XCL_SE (terminates activity forfile) XEVlCT (evicts spaceassigned toadiskfile) REINDX (resets indexpointers intheFET) XWRITE (writes aportion oracomplete logical record) XREAD(reads aportion oracomplete logical record) XREWIND (repositions filetoloadpoint) XBKREC (repositions fileonelogical record backwards) 5.5-14 (811172)\nNASTRAN ONTHECDC6400/6600 (SCOPE 3) XBKPREC (repositions fileonephysical record backwards) XFRDREC (repositions fileonelogical record forwards) XREQST (issues REQUEST macro) READX (reads acomplete logical record) WRITEX (writes acomplete logical record) 5.5.6.8 GIN_66 (F_RTRAN) GIN066 isaBLOCK DATAsubprogram which initializes theGIN066 common block with names of eachofthepossible NASTRAN files. 5.5.6.9 NASTRAN (FBRTRAN) NASTRAN isasmall mainprogram inLinkO.Itestablishes FBRTRAN buffers forthefiles INPUT, OUTPUT andPUNCH before calling thePreface inLinkI. 5.5.6.10 MPYQ (COMPASS) MPYQ isacompass routine written toincrease thespeed ofMPYAD’s inner loops (see Section 3.5.12.5). 5.5.6.11 WALTIM (FORTRAN) WALTIM calls DAYTIM fortime ofdayandthencalculates theelapsed timeinseconds after midnight. 5.5.6.12 XC_RSZ (F_RTRAN) Calls toCORSZ arerenamed toXCBRSZ ontheCDC6000andopencore length isprinted if DIAG13ison. 5.5.6.13 I_6600 (FORTRAN) I_6600 isaninterface routine between GINBandXI_RTNS. Itmaintains index andsubindex information fortheblock being operated onandissues openandclose messages asrequired by DIAG 15.Thecalling sequence is: CALL 106600 (_PC_DE,BUFF),RETURNS(RETURNI) 5.5-15 (8/I/72)\nNASTRAN -OPERATING SYSTEM INTERFACES IB6600 formats callstoappropriate entry points inXIBRTNS according to_PC_DE. andcallsare: OPCODE REQUEST CALL 1 rewind XREWIND 2 write WRITEX 3 read READX 4 backspace XBKREC 5 forward space REINDX/READX 6 open XOPEN 7 close XCLBSETherequests 5.5-16 (811172)\nNASTRAN ONTHE CDC 6400/6600 (SCOPE 3) ILINK 0 I G_ n I IIITl iTIAE7 WLRI ,¢6111_ i I'6LI_/ /‘Z_/ A,H_/ Figure 2. Overlay Structure for Link 0onthe CDC 6000. 5.5-17 (8/]/72)\nPage intentionally left blank"},"title":"Programmer's Manual P86"},"/docs/programmers/programmers_manual_087/":{"data":{"":"NASTRAN ONTHECDC6400/6600 (SCOPE 3) LINK 20 II’EXII I 1’I_IT6 I Figure 3.Overlay Structure forLink 20ontheCDC6000. 5.5-19 (811172)\nNASTRAN ON THE CDC 6400/6600 (SCOPE 3) -t xmBD ’ XGPIW XGPI XGP Ill6 XGPIM xGP106Z /WIC / /XGPIU / /XWI2 / } /XGP13 / /XGP14 / /XW15 / /X6PI6 / /XGPI7 / /XGP18 / /XGPIW / /ZXP t DG/ XFLORD XFLDEF 1 tm !@%! xtm m Figure 4. Overlay Structure for Link 1 on the CDC 6000.\nNASTRAN ON THE CDC 6400/6600 (SCOPE 3) Vlm1 /GPRl / pi- /GPR2 / 7 ONE Figure 5. Overlay Structure for Link 2 on the CDC 6000. @i@J 6i5B DELSET G4’TFleD /GPtAI / 6-iii@\n*, NASTRAN ON THE CDC 6400/6600 (SCOPE 3) Figure 8. Overlay Structure for Link 5 on the CDC 6000. 5.5-29 (8/1/72)"},"title":"Programmer's Manual P87"},"/docs/programmers/programmers_manual_088/":{"data":{"":"I EJECT WRTPRTZ VECPRT PRTVEC VECPRT Z /ZrnTPRT/ /mr / /NECPRT/\nNASTRAN ONTHE CDC6400/6600(SCOPE 3) LINK 9 6WRT Um_B6 nemm 33043xaot5 FIt6Et rla6 RIGEI_ /II’LI’RGE/ ABLR_..I XCI4K mIFISI lXSr’nl / 511753344731622 Figure 12.Overlay Structure for Link 9ontheCDC 6000. 5.5-37 (8/I/72)\nNASTRAN ON THE CDC 6400/6600 (SCOPE 3) Figure 13. Overlay Structure for Link 10 on the CDC 6000.\n.I- LL.\nION W IEN ,/]i] 35742f,mll B_E222 XOEI ILI .C 6NFISI 54066/II / 36334IR\nNASTRAN ON THE CDC 6400/6600 (SCOPE 3) Figure 16. Overlay Structure for Link 13 on the CDC 6000.\nTHECDC6400/6600 LINKAGE EDITOR 5.6THECDC6400/6600 LINKAGE EDITOR 5.6.1 Introduction 5.6.1.I Concept oftheLinkage Editor Thelinkage editor hasbeendesigned toprovide anefficient andeffective means ofutilizing corestorage formedium tolarge programs. Theexisting loader fortheCDC6400/6600 systems has thefollowing disadvantages: I.Onlytwolevels ofoverlay areprovided beyond therootsegment. 2.Anoverlay segment mustbeexplicitly called. Consequently, theoverlay structure must beknown whentheprogram iscoded. 3.Anoverlay segment maybeentered atonepoint only. Consequently, downward calls are extremely limited. 4.Nofacility exists toexplicitly position named common blocks. 5.Loading ofoverlay segments isaccomplished from asequential file, thusproviding unnecessary search time. TheCDC6400/6600 Linkage Editor inconjunction with itspartner, theSegment Loader, over- comes these disadvantages inthefollowing ways: I.Anunlimited number ofoverlay levels isprovided. 2.Theprogrammer describes theoverlay structure tothelinkage editor after theprogram iscoded. Thelinkage editor provides implicit segment loading. 3.Complete con_nunication between alllevels ofoverlay ismaintained. 4.Linkage editor control statements maybeusedtoexplicitly position subprograms and named common blocks. 5.Theoverlay segments aremaintained inanindexed file. Consequently, every segment is immediately available tothesegment loader. Asmaybeseenfrom Figure l,theprimary input sources tothelinkage editor include: I.Object decks (relocatable binary decks) 2.Control statements 5.6-1(12-1-69)\nNASTRAN -OPERATING SYSTEM INTERFACES 3.Acalllibrary fromwhichunsatisfied external references areresolved. Another source ofinput (notshowninFigure I)isafilecontaining executable linksfroma previous linkage editor run.Thisfeature allows changes oradditions oflinkswhilenotaltering previous linkstowhichnochanges arerequired. Thefileproduced bythelinkage editor contains threeportions: I.Asequence ofobject deckssuitable forloading bytheCDCloader. Themainprogram in thissequence, namedXBO_T, readstheremainder ofthefilecontaining theexecutable links andwrites itonthediskasanindexed file. XBOOTreadsLink0intocentral memory and transfers control totheentrypointwhich initiates execution oftheproblem program. This sequence ofdecksisterminated byanullrecord. 2.Threerecords: (I)Link0directory record; (2)Link0symbol dictionary containing entry points andcommon blocks inLink0and theirassociated addresses; (3)Link0executable record. 3.Adirectory record foreachsucceeding linkandonelogical record persegment containing executable instructions anddata. Thissequence ofrecords isterminated byadirectory record which contains thewordENDLINKS. Link0remains incentral memory atalltimesduring program execution. Link0contains no overlay segments. Thelinkage editor supplies aroutine namedXL_ADER whenLink0isconstructed. XL_ADER accomplishes theloading ofsegments andlinkswhenrequested. Segment loadrequests aresupplied automatically bythelinkage editor through tables called ENTAB$ (seesection 5.6.3.2) which a_’ewritten asapartofthetextforeachsegment whichmayrequire additional segment loading. Anadditional table, SEGTAB$ (seesection 5.6.3.2), which isconstructed by thelinkage editor asapartoftherootsegment ofevery link,isusedbyXLOADER tofacilitate segment loading. Majordivisions ofaprogram arelinks. Eachlinkconsists ofaself-contained overlay structure andmightbethought ofasacomplete program initself. Allroutines inalink communicate freely withLink0routines. Consequently, Link0maybethought ofaslogically 5.6-2 (12-I-69)\nTHECDC6400/6600 LINKAGE EDITOR belonging toevery link. Formany programs, asingle linkinaddition toLink0will besufficient. Because ofitssize, however, NASTRAN hasbeendivided into14links. 5.6.1.2 Functions oftheLinkage Editor Thebasic function ofthelinkage editor isthelinking ofseparately assembled orcompiled subprograms intoalink. Thelinkisinaformat suitable forloading andexecution. Although thislinking orc_ining ofsubprograms isitsprimary function, thelinkage editor also: I.Incorporates subprograms fromalibrary file toresolve undefined external references. 2.Constructs anoverlay program inaformat suitable forloading andexecution. 3.Rearranges control sections andrenames external references asdirected bylinkage editor control statements. 4.Reserves storage forcommon control sections generated byC_MPASS andF_RTRAN. 5.Provides processing options anddiagnostic messages. 5.6.1.3 Subprogram Linkage Processing bythelinkage editor makes itpossible fortheprogrammer todivide hisprogram intoseveral subprograms which maybeseparately assembled orcompiled. Thelinkage editor com- bines these subprograms intoalinkwithcontiguous storage addresses. Thelinkiswritten inan indexed file. Thelinkage editor canprocess more thanonelinkinasingle jobstep. Eachlink iswritten withaunique linknumber. 5.6.1.4 Input Sources Input tothelinkage editor consists ofoneormoresequential files (libraries) containing subprograms inrelocatable format asproduced byC_MPASS orF_RTP4_N, andlinkage editor control statements contained inINPUT, thestandard input file. External references thatareundefined after processing allsubprograms cause theautomatic library callmechanism tosearch forsubprograms thatwill resolve thereferences. Whenthese subprograms arefound, theyareprocessed bythelinkage editor andbecome partofthelink. 5.6-3(12-1-69)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.6.1.5 Programs inanOverlay Structure Tominimize mainstorage requirements, theprogrammer canorganize hisprogram intoanover- laystructure bydividing itintosegments according tothefunctional relationshp ofthesub- programs. Twoormoresegments thatneednotbeinmainstorage atthesametimecanbeassigned thesamestorage addresses, andcanbeloaded atdifferent times. Theprogrammer useslinkage editor control statements tospecify therelationship ofsegments within theoverlay structure. 5.6.1.6 Options andDiagnostic Messages Thelinkage editor canproduce astorage mapandacross-reference tablethatshowthe arrangement ofcontrol sections inthelinkandhowtheycommunicate witheachother. Alistof thelinkage editor control statements thatwereprocessed canbeproduced. Additionally, pro- cessing options thatnegate theeffect ofminorerrors andspecify thedisposition ofinputand output filescanbespecified bytheprogrammer. Throughout processing bythelinkage editor, errors andpossible errorconditions areprinted. Serious errors causealinknotbewritten ontheoutput file. 5.6-4 (12-I-69)"},"title":"Programmer's Manual P88"},"/docs/programmers/programmers_manual_089/":{"data":{"":"THECDC6400/6600 LINKAGE EDITOR _0_revi°usly mpiled )J jectDecksL,,PIObJectDeck LibraryCall Library SourcePrograms Compi 1er]File IContainingl Object DecksILINKLIB LINKAGE EDITOR / Indexed FileWith Links Link0 inCentral Memory EditorControl s_ttateeents Load _.File Containing Executable Links _r Loader Figure I.Linkage editor processing. 5.6-5(12-I-6g)\nNASTRAN-OPERATINGSYSTEMINTERFACES 5.6.2 Preparing forLinkage Editor Processing 5.6.2.1 Object Decks Anobject deck (relocatable binary deck), which isproduced bytheF@RTRAN compiler or C_MPASS assembler, consists ofthefollowing tables: I.Program Identification andLength (PIDL), which defines a)subprogram identification and length andb)eachofthecommon blocks referenced bythesubprogram; 2.Entry Point (ENTR), which defines eachoftheentry points tothesubprogram andits relative location; 3.Text (TEXT), which defines instructions anddataforrelocation; 4.Fill (FILL), which contains information torelocate previously defined address fields (inparticular, references tocommon blocks); 5.Link (LINK), which indicates eachexternal reference bythesubprogram anditsrelative location; 6.Replication (REPL), which permits therepetition ofablock ofdata. Anyother tables which maybecontained inanobject deckareignored bythelinkage editor. Foracomplete description oftheformat ofthese tables, seetheSC_PE Reference Manual, Appendix D. 5.6.2.2 Libraries Allobject decks thataretobeprocessed bythelinkage editor arecontained inlibraries. Alibrary isasequential file (which mayr_side ontapeordisk) consisting ofoneormore logical records withoneobject deckperlogical record. Afilenamed LINKLIB mustalways bedefined forlinkage editor processing. This filecon- tains object decks forautomatic library callplusobject decks which arerequired inconstruct- ingtheinitial loadportion oftheoutput file. Thereisnotheoretical limittothenumber oflibraries whichmaybedefined forlinkage editor processing. Subprograms ofthesamenamemayappear inmorethanonelibrary. 5.6-6(12-I-69)\nTHECDC6400/6600 LINKAGE EDITOR 5;6.3 Designing anOverlay Program 5.6.3.1 Overlay TreeStructure Inorder toplace aprogram inanoverlay structure, theprogrammer should befamiliar with thefollowing terms: I.Acontrol section consists ofallinstructions anddatadefined forasubprogram oi\"a commonblock. 2.A_is thesmallest functional unit(oneormore control sections) thatcanbe loaded asonelogical entity during program execution. 3.Apathconsists ofasegment andallsegments irthesame _’egion between itandtheroot segment (first segment). Therootsegment isapartofevery path inevery region. Whena segment isinmainstorage, allsegments initspatharealso inmain storage. 4.Aregion isacontinguous areaofmainstorage within which segments canbeloaded independently ofpaths inother regions. Anoverlayprogram canbedesigned insingle or multiple regions. 5.Alinkisacollection ofoneormoresegments which comprise alogical subdivision of theprogram. Link0(consisting ofonesegment only) isinmainstorage atalltimes. Itis thefirst linktoreceive control whenexecution oftheprogram isinitiated. Theroot segment ofanyother linkresides inmainstorage atalltimes thatthatlinkisbeing executed. Anoverlayprogram mustconsist ofatleast onelinkother thanLinkO. 6.Atree isthegraphic representation thatshows howsegments canusemain storage at different times. Itdoesnotimply theorder ofexecution. Thedesign ofanoverlay program requires theorganization ofthecontrol sections ofthe program inanoverlay treestructure. Thetreestructure isdeveloped considering: I.Theamount ofavailable mainstorage. 2.Thefrequency ofuseofeachcontrol section. 3.Thedependencies between control sections. 4.Themanner inwhich control should passwtLinapath, fromonepathtoanother, and from oneregion toanother. 5.6-7(12-I-69)\nNASTRAN -OPERATING SYSTEM INTERFACES Whentheprogrammer hasdetermined theoverlay structure foraprogram, heprepares _VERLAY, iNSERT andREGION statements thatwillsegment theprogram inthatmanner. Theuseofthesecon- trolstatements isdescribed insection 5.6.4. 5.6.3.2 Overlay Characteristics During execution ofanoverlay program, thesegment loader usestables thatweregenerated bythelinkage editor andincorporated intothetextofapplicable segments. Sincethesetables areanintegral partoftheprogram, theirsizemustbeconsidered whenplanning theuseof available mainstorage. Thesetables aredescribed asfollows. I.Input/Output Control Table There isoneInput/Output Control Table (LINKO$) intherootsegment ofLink0only which contains aFileEnvironment Table (FET), acircular buffer, amaster indexandasub- index. TheLINKO$ tableisusedbythesegment loader toreadrequested segments into LINKO$ isthefirstcontrol section inLinkO.Itssizeisdetermined as central memory. follows: Length inwords =PARAM(1) +PARAM(4) +PARAM(5) +4 Section 5.6.4.2 contains definitions oftheparameters. 2.Segment Table There isoneSegment Table (SEGTAB$) intherootsegment ofeachlinkexcept LinkO. Thesegment tableisusedtokeeptrackof:(I)therelationship ofthesegments inthe program; (2)which segments areinmainstorage orscheduled tobeloaded; (3)themain storage address andlength ofeachsegment; and(4)theentryaddress ofthelink. SEGTAB$ isthefirstcontrol section intherootsegment ofeachlink. Itssizeis determined asfollows: Length inwords =n+2, where nisthenumber ofsegments inthelink. 3.EntryTable There canbeanEntryTable (ENTAB$) ineachsegment oftheprogram. Theloader 5.6-8 (12-I-69)\nTHECDC6400/6600 LINF_GE EDITOR usestheentry table todetermine thesegment tobeloaded when anexternal reference is made toTM segment notinthepath. Anentry table maybeproduced asthelastcontrol section ofasegment. AnENTAB$ entry iscreated forasym_ol towhich control istobepassed. ThesyTnbol isdefined inaseg- mentnotinthepath. ThesizeofENTAB$ isdetermined asfollows: n Length inwords =3n+_6i,i=l where nisthenumber ofunique external references notinthepathand6i=MAX(mi-6,O), mi=number ofarguments foreachexternal reference notinthepath. 4.DumpControl Word Inthetextproduced bythelinkage editor foreachsegment, auniquely formatted word which identifies thecontrol section iswritten immediately prior toeachcontrol section. Thisword isrecognized bythestorage dumproutine XDUMP inorder toproduce relative addresses fereachcontrol section. 5.6.3.3 Overlay Communication There aretwoways inwhich theprogrammer canhavehisprogram request theoverlay facilities ofthesegment loader: I.ByaCALL statement (F_RTPJ_N language) orRJinstruction (C_MPASS language) which causes asegment tobeloaded andcontrol tobepassed tothesymbol defined inthatsegment. 2.ByaCALLLINK(N) (F_RTRAN language) ortheequivalent intheC_MPASS language, where N isthelinknu_er, which causes segment one(therootsegment) oftherequested linktobe loaded andcontrol tobepassed tothesjnnbol named onthelinkage editor control statement ENTRY. 5.6.3.4 Reserving Storage InF_RTPJ_N andC_MPf,SStheprogrammer cancreate coT_trol sections thatreserve mainstorage areas containing nodataorinstructions. Referred toas\"common\", these control sections are produced bythelanguage translator. These common areas areeither named orblank (unnamed). During processing, thelinkage editor collects these common areas. Ifmorethanoneblank common areaisfound, thelargest blank common area iscontained inthelink. Iftwoormore 5.6-9(12-1-69)\nNASTRAN -OPERATING SYSTEM INTERFACES common areashavethesamename,thelargest common areahaving thatnameisreserved inthelink. Allreferences toacommon area(named orblank) refertothelargest areadefined. Thislargest areaistheonewhichisretained. Ifthelinkage editor encounters dataortextforthesamecommon areainmorethanonesub- program, onlydatafromthefirstsubprogram encountered areretained andadiagnostic message is generated foranysubsequent datadefinitions. Whenobject deckswhichreference common areasaretobeplaced inanoverlay structure, the linkage editor automatically “promotes” thecommon areastetherootsegment (unless otherwise directed byanINSERT control statement, seesection 5.6.4.8). Theposition ofapromoted common areainrelation toothercontrol sections intherootsegment isgenerally unpredictable. Note: Blankcommon istreated bythelinkage editor asanamedcommon blockwiththe special nameBLANK.. andislisted onthestorage mapwiththisname. Consequently, itispossible toposition thiscontrol section withthestatement INSERT BLANK… 5.6.3.5 l°Processing Options Listofcontrol statements Thelinkage editor automatically produces alisting ofallcontrol statements unless theprogrammer selects theNOLIST option intheLINKEDIT statement (seesection 5.6.4.2). Inthelatter case,onlytheLINKEDIT, LIBRARY andENDLINKS statements arelisted (see sections 5.6.4.2, 5.6.4.3 and5.6.4.12 respectively fordetails). 2.Storage mapandcross-reference table Thelinkage editor automatically produces astorage mapofeachlinkunless theprogrammer selects theNOMAPoption intheLINKEDIT statement. Foreachsegment, thestorage maplists thecontrol sections inascending orderaccording totheirassigned address. Included with eachcontrol section isalistofallentry pointnamesandassigned addresses. WhentheXREFoption intheLINKEDIT statement isspecified, thelinkage editor produces atableofallreferences toeachentrypointinthelink. Additional options (PARAM(7) parameter, seesection 5.6.4.2) allowt_:etabletobeextended toinclude allreferences from thelinktoLINK0entrypoints andanadditional tableofallexternal references fromeach subprogram tobeproduced. 5.6-10 (12-I-69)\nTHECDC6400/6600 LINKAGE EDITOR TheN_F_AP andXREFoptions aremutually exclusive. Therefore, ifXREFisselected, N_MAP isignored andastorage mapisproduced. 3.TheLEToptio_ WhentheLEToption oftheLINKEDIT statement isselected, thelinkage editor disregards allerrors except twoandwrites thelinkontheoutput file. Thetwoerrors which preclude thelinkfrombeing written are: (1)anundefined entry point tothelink; and(2)insuffi- cient storage space toformthelinktobewritten. 5.6-11 (12-1-69)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.6.4 Linkage Editor Control Statements 5.6.4.1 General Statement Format Alllinkage editor control statements arecodedfromthefollowing possible forms: operation operand VERB a,b(c),KEYWORD, KEYWBRD =a,KEYW_RD =b(c), KEYW_RD(i) =n,a=a,b(c)=a,n where aisanunsubscripted symbol, bisasubscripted symbol, cisasubscript symbol, KEYWORD isanexplicit nameoroption, iisaninteger subscript, nisaninteger value. Theoperation fieldmustcontain thenameoftheoperation tobeperformed. Theoperand fieldmustcontain oneormoresymbols orsubscripted symbols (except REGION, ENDandENDLINKS whichhavenooperands). Operands intheoperand fieldareseparated byacommaorblank(orboth). Twoormoresymbols within parentheses aresimilarly separated. Akeyword mustbewritten exactly asshown. Theoperation fieldbegins withthefirstnonblank column onthecard. Theoperand fieldis separated fron:theoperation fieldbyatleastoneblankcolumn. TheLINKEDIT andLIBRARY control statements maybecontinued onsubsequent cardsbycoding a commaasthelastnonblank column. Thecontinuation begins withthefirstnonblank column ofthe succeeding card. Thesetwocontrol statements aretheonlyoneswhich maybecontinued. 5.6.4.2 TheLINKEDIT Statement TheLINKEDIT statement specifies inputandoutput filenamesandstatus, processing options andsizecharacteristics ofthelink(s) tobelink-edited. 5.6-12 (12-I-69)\nTHECDC6400/6600 LINKAGE EDITOR operation LINKEDIToperands INFILE =name(a),_UTFILE =name(b), LET,N_LIST,N@MAP,XREF,PARAM(i) =n INFILE _UTFILE LET N_LIST N_MAPspecifies thenameofafilewhich was previously produced bythelinkage editor. INFILE isnamed onlywhenpreviously link- edited links aretobeupdated. mustbecoded TorC.Tspecifies thatthe fileisasequential fileontapeordisk. Cspecifies thatthefile isanindexed file ondiskand,therefore, acommon fileas defined bySC@PE. specifies thenameofthefileonwhich the initial loadprogram andthelinks will be written. _UTFILE mustalways benamed. must becoded TorC.Thelinks arewritten internally bythelinkage editor onanindexed file. IfCiscoded, thelinks arewritten directly onthefilespecified by_UTFILE, which mustbeacommon file. IfTiscoded, theinitial loadprogram andthelinks are copied fromtheinternal filetothespecified sequential file (tape ordisk). directs thelinkage editor toignore theeffect of most errors. directs thelinkage editor tosuppress the listing ofcontrol statements. directs thelinkage editor tosuppress storage maps. 5.6-13 (12-1-69)\nK_evword PARAM(1) PARAM(2) PARAM(3) PARAM(4) PARAM(5i PARAM(6) PARAM(7) Placement: Notes:NASTRAN -OPERATING SYSTEM INTERFACES XREF directs thelinkage editor tolistatable of external references toeachentry point ineach link. Description Length ofFET+circular buffer 530 forallfiles usedbythelinkage editor Maximum number ofobject decks in lO00 alllibraries Maximum sizeofanytable inan 500 object deck Maximum number oflinks 32 Maximum number ofsegments inany 128 link Maximum length (inwords) ofany 5000 control section forwhich textis defined Additional options ifXREFis 0 selected =l:produce atable ofreferences fromeachsubprogram =2:listallreferences toentry points inLink,O =3:provide bothoftheaboveDefault Value TheLINKEDIT statement mustbethefirst statement oftheinput record. Onlyonesuchstatement mayappear inajobstep. (1)Thefiles named onINFILE and_UTFILE maybethesame; however, ifso, their status mustbethesame (i.e., bothTorbothC) 5.6-14 (12-I-69)\nTHECDC6400/6600LINKAGEEDITOR Examples:(2)IfXREFisselected, N_FtAP isignored (3)IfXREFisnotselected, PARAM(7) isignored LINKEDIT LINKEDIT LINKEDIT LINKEDIT_UTFILE:LINKS(T),LET,XREF INFILE=_LDLNKS(T),BUTFILE=NEWLNKS(T),N_LIST,PARAM(1)=I050 INFILE:ABS(C),_UTFILE=ABS(C),PARAM(6)=8000 _UTFILE=MYFILE(T) 5.6.4.3 TheLIBRARY Statement TheLIBRARY statement names eachfilewhich maypossibly occur onINCLUDE control statements (seeSection 5.6.4.5). operation LIBRARY LIBRARYoroperands namel,name2,… LIB=namel,name 2…. Placement: Example:name specifies thenameofasequential fi|e containing object decks. LIB concatenated file containing object decks fromallnamed files. TheLIBRARY state_nt must appear immediately after theLINKEDIT statement. Onlyonesuchstatement mayappear inajobstep. LIBRARY MASTER,NEWDCKS 5.6.4.4 TheLINKstatement DTheLINKstatement specifies thelinknumber anddirects thelinkage editor toinitiate processing ofalink. LINKoperation o_erandn 1 isanonnegative integer specifying the linknumber. 5.6-15(8/i/72)\nNASTRAN -OPERATING SYSTEM INTERFACES Placement: ThefirstLINKstatement mustappear immediately following theLIBRARY statement. Subsequent LINKstatements mustappear immediately following anENDstatement. IfLink0isbeingprocessed, itmustbethefirstlink tobeprocessed. LINK0 5.6.4.5 TheINCLUDE Statement TheINCLUDE statement directs thelinkage editor toinclude thenamed object deck fromthe specified library inthelinkcurrently being processed. operation operands I INCLUDE name(deck,BLKDATA(comname)) name specifies thenameofasequential filewhich waspreviously defined intheLIBRARY statement. deck specifies thenameofanobject deck contained inthefile. BLKDATA indicates thatthedecktobe included isaBLOCK DATAsub- program. comname isthenameofthefirst mentioned common block intheBL_CK DATA sub- program. Placement: AnINCLUDE statement mayappear inanyposition between theLINKandEND statements. Subprograms willbeincluded intheorder inwhich INCLUDE statements areencountered. Examples: INCLUDE INCLUDE INCLUDEMASTER(MAIN) NEWDCKS(MODI,M_D2,M_D3) MASTER(BLKDATA(C_MI),BLKDATA(COM2)) 5.6-16 (8/I/72)\nTHECDC6400/6600 LINKAGE EDITOR 5.6.4.6 TheREGION Statement TheREGION statement indicates thebeginning ofanewregion. operation IREGION Placement: TheREGI@N statement follows statements which define theoverlay structure foraprevious region, anditindicates thebeginning ofanewregion. 5.6.4.7 The_VERLAY Statement TheOVERLAY statement indicates thebeginning ofanoverlay segment. I°perati °n °er-p-_-d- I _VERLAY name name isthesymbolic origin ofasegment. Thesymbol isnot related toexternal symbols inthelink. Placement: The@VERLAY statement mayappear inanyposition between theLINKandEND statements. IfaREGION statement iscoded, an_VERLAY statement must appear immediately following theREGION statement. An_VERLAY statement maynotbecoded forLinkO. Examples: I.Single region structure (noREGION statement necessary) INCLUDE MASTER(SUBI) INCLUDE MASTER(BLKDATA(C_MI)) _VERLAY ALPHA INCLUDE NEWDCKS(M_DI) _VERLAY BETA INCLUDE NEWDCKS(M_D2,M_D3) _VERLAY BETA 5.6-17 (12-I-69)\nNASTRAN -OPERATING SYSTEM INTERFACES INCLUDE MASTER(PROGA) OVERLAY ALPHA INCLUDE MASTER(PR_GB,PR_GC) Figure 2depicts atreediagram fortheabove example. BETA M_D2 M_D3ALPHASUB1 IC_Mll M_DI PR_GAPROGB PR_GC Figure 2.Treediagram ofasingle region overlay structure. 2.Multiple region structure INCLUDE OBJ(A,B,C) _VERLAY NE INCLUDE DECKS(AA,BB) OVERLAY TW INCLUDE _BJ(D) BVERLAY TWO INCLUDE DECKS(CC,DD) @VERLAY _NE INCLUDE OBJ(E,F,G) REGION _VERLAY THREE INCLUDE @BJ(I,j) 5.6-18 (12-I-69)\nTHECDC6400/6600LINKAGEEDITOR _VERLAY THREE INCLUDE DECKS(EE) _VERLAY F_UR INCLUDE DECKS(FF,GG) _VERLAY F_UR INCLUDE _BJ(K) Region 1 Region 2Figure 3depictsatreediagram fortheabove example. ONE TW@ BB IoIcoo Ii FOUR lEE GGTHREE K Figure 3.Tree diagram ofamultiple region overlay structure. 5.6.4.8 TheINSERTStatement TheINSERT statement positions control sections inoverlay segments. operation INSERT namename°perands I specifies the nameofacontrol section that isto bepositioned. 5.6-19 (12-1-69)\nNASTRAN -OPERATING SYSTEM INTERFACES 5.6.4.9Placement: Caution: Examples:TheINSERT statement isplaced inthecontrol statement sequence following an_VERLAY statement thatdefines thesegment inwhich thecontrol section is tobeplaced. Acontrol section should benamedonlyonceonanINSERT statement sincea control section canappear onlyoncewithin alink. Ifthesamecontrol section appears onmorethanoneINSERT statement, thelaststatement encountered willcontrol positioning andprevious statements willbeignored. INSERT COMI INSERT C_M2,C_M3 TheRENAME Statement TheRENAME statement changes external references toasymbol toanewsymbol either globally (throughout thelink)orlocally (within asubprogram). Placement: Notes:operation o__perand RENAME oldname=newname [global] RENAME oldname(subprogram)=newname [local] oldname isthesymbol towhich anexternal reference exists. newname isthesymbol towhich theexternal reference istobemade. subprogram isthenameofthesubprogram inwhichthe change istobemade. TheRENAME statement mayappear inanyposition between theLINKandtheEND statements. (I)Onlyonerename maybecodedonasingle statement. (2)Noerror occurs ifnoreferences aremadetooldname. Ifreference ismadetooldname andnewname isnotspecifically included, theautomatic calllogicwillbeinvoked. 5.6-20 (12-I-69)\nTHECDC6400/6600 LINKAGE EDITOR 5.6.4.10Examples: RENAME RENAMESQRT=SQRTXX DUMP(M_DI)=RETURN TheENTRY Statement TheENTRY statement specifies thesymbolic nameoftheentry point inthelinktowhich control willbetransferred after thelink isloaded. operationENTRY nameoperand name isthesymbol defining the entry point forthelink. The namemustbedefined intheroot segment ofthelink. ForLinkO, namemustbethenameofa_in program. Foranylinkother than LinkO,namemust bethenameofa subroutine. Placement: Examples:TheENTRY statement mayappear inanyposition between theLINKandtheEND statements. ENTRY MAIN ENTRY SUBI 5.6-21 (12-I-69)\nNASTRAN-OPERATINGSYSTEMINTERFACE_ 5.6.4.11TheENDStatement TheENDstatementspecifiestheconclusion ofcontrolstatements forthecurrentlinkbeing processed. Placement:loperationEND TheENDstatement mustappear following allstatements whichdefine thelink. TheremustbeoneENDstatement foreachLINKstatement. 5.6.4.12 TheENDLINKS Statement TheENDLINKS statement defines theendofallprocessing bythelinkage editor. I°perati°n I ENDLINKS Placement: TheENDLINKS statement must immediately follow anENDstatement. statement isrequired.Onesuch 5.6-22 (12-I-69)\nTHECDC6400/6600LINKAGEEDITOR 5.6.5Exa_les ofLinkage Editor Processin_ Inthefollowing examples, itisassumed thatthefilecontaining thecalllibrary (LINKLIB) andafilecontaining thelinkage editor program (LINKEDT) arecontained onseparate magnetic tapes. These examples areintended toillustrate various decksetups. Conditions ofProblem Example Source Program Previously Compiled Decks Execution A B Cyes no noininput stream ontape input stream andontapeyes no yes Example A JOB,PI,TIOO,CM60000. MAP(OFF) RUN(S …..NEW) REWIND(NEW) COPYBR(INPUT,OLD,n) REWIND(OLD) REQUEST LINKEDT,HI. reel#,ROL REQUEST LINKLIB,HI. reel#,ROL COMMON(LINKS) LINKEDT. RETURN(LINKLIB) RETURN(LINKEDT) LINKS.ATTACH RELEASE(LINKS) EXIT. RELEASE(LINKS) UNL_AD(LINKLIB) 5.6-23 (8/I/72)\nNASTRAN -OPEP_ATING SYSTEM INTERFACES (1)UNL_AD(LINKEDT) 789 789RTRANorC_MPASS source programs I nobject decks1 LINKEDIT _UTFILE=LINKS(C) NEW,OLD LIBRARY LINK0 RENAME SYSTEM=SYSTEM. {INCLUDE statements} ENTRY entrypoint END LINK1 RENAME SYSTEM=SYSTEM. {INCLUDE,OVERLAY, etc.statements} ENTRY entrypoint END ENDLINKS 789 {dataforproblem program} 6789 Example B JOB,PI,TIOO,CM60000. MAP(OFF) REQUEST _BJECT,HI. reel#,R_L REQUEST LINKLIB,HI. reel#,ROL REQUEST LINKEDT,HI. reel#,ROL REQUEST LINKFIL,HI. SAVTP,RIL LINKEDT. 5.6-24 (8/I/72)"},"title":"Programmer's Manual P89"},"/docs/programmers/programmers_manual_090/":{"data":{"":"_ETURN(OBJECT) RETURN(LINKLIB) RETURN(LINKEDT) RETURN(LINKFIL) EXIT. UNLOAD(OBJECT) UNL_AD(LINKLIB) UNLOAD(LINKEDT) UNLOAD(LINKFIL) 789 LINKEDIT LIBRARY LINK 0OUTFILE:LINKFIL(T),LET,XREF,PARAM(7)=2 _BJECTTHECDC6400/6600 LINKAGE EDITOR RENAME SYSTEM =SYSTEM. {INCLUDE statements forLinkO} ENTRY entry point END LINK l RENAME SYSTEM=SYSTEM. INCLUDE, OVERLAY, etc. statements forLinkl ENTRY entry point END ENDLINKS 6789 Example C J_B,PI,T2OO,CM70000. MAP(_FF) C_PYBR(INPUT,OBJ,n) REWIND(OBJ) REQUEST MASTER,HI. reel#,ROL 5.6-25 (8/I172)\nNASTRAN -OPERATING SYSTEM INTERFACES REQUEST LINKLIB,HI. reel#,R_L REQUEST LINKEDT,HI. reel#,R_L REQUEST LINKFIL,HI. reel#,RIL LINKEDT. RETURN(MASTER) RETURN(LINKLIB) RETURN(LINKEDT) LINKFIL. RETURN(LINKEIL) EXIT. UNL@AD(MASTER) UNL_AD(LINKLIB) UNL_AD(LINKEDT) UNL_AD(LINKFIL) 789 {nobject decks} LINKEDIT INFILE=LINKFIL(T),OUTFILE=LINKFIL(T),PARAM(6)=90000 LIBRARY MASTER,@BJ LINK2 RENAME SYSTEM=SYSTEM. IINCLUDE, etc.statements forLink21_VERLAY, ENTRY entrypoint END ENDLINKS 789 {data forproblem program} 6789 5.6-26 (8/I/72)\nTHECDC6400/6600 LINKAGE EDITOR InExample A,theoutput ofthelinkage editor iswritten onacommon fileandexecuted from thatfile. Thismethod ismost efficient for\"compile-and-go\" typecodecheck runs. InExample B,theoutput ofthelinkage editor iswritten ontape. Thiswould bethemost common formofaruninwhich mostofthecoding errors havebeeneliminated andtheexecutable program issaved ontapeforsubsequent repeated executions. InExample C,itisassumed thatapreviously link-edited fileexits (created, forexample in Example B)andthat itisdesired toaddanewlink(ormodify anexisting link). Inthiscase, theinput andoutput files areboth thesame (although thisisnotnecessary). Theoutput ofthe linkage editor iswritten ontapeandtheproblem program isexecuted from thistapefile. Note: (1)Toavoid possible conflict withauser(viz. NASTRAN) named common withthename SYSTEM, theCDCsystem routine hasbeen reassembled with thenameSYSTEM. andhas beenplaced onLINKLIB withthenameSYSTEM.. Inorder thatother library routines maybeproperly linked, thestatement RENAME SYSTEM=SYSTEM. isrecommended forall links. Intheexample illustrated inFigure 4,thefollowing linkage editor control statements will produce theindicated overlay structure. LINKEDIT OUTFILE=LINKS(T) LIBRARY LIBA,LIBB LINK 0 RENAME SYSTEM=SYSTEM. INCLUDE LIBA(MAIN) INCLUDE LIBB(UTILI,UTIL2) INCLUDE LIBA(UTIL3) ENTRY MAIN END LINK l RENAME SYSTEM=SYSTEM. INCLUDE LIBB(START,MODI) OVERLAY A INCLUDE LIBA(MOD2) INCLUDE LIBB(M_D3) IFiSERT COMI 5.6-27 (811172)\n_VERLAYA INCLUDELIBA(M_D4) VERLAYB INCLUDELIBB(M_D5) INCLUDELIBA(!_D6) INSERTC_M2 OVERLAYB INCLUDELIBB(M_D7) INSERTC_M3 ENTRYSTART END ENDLINKSNASTRAN-OPERATINGSYSTEMINTERFACES 5.6-27a(811172)\nNASTRAN -OPERATING SYSTEM INTERFACES Link0 Link1 AMAIN UTILI UTIL2 UTIL3 START MODI M_D2 M_D3 IC_MIIM_D5 LIBA LIBB MAIN UTIL3 M_D2 M_D4 M_D6UTILI UTIL2 START M_DI M_D3 M@D5 MOD7 Figure 4.Example ofatwo-link overlay structure. 5.6-28 (8/I/72)\nTHECDC6400/6600 LINKAGE EDITOR 5.6.6 Storage Requirements fortheLinkage Editor Figure 5illustrates thelayout ofcorestorage forthelinkage editor. Forthediscussion below, itisassumed thatthelinkage editor hasnotitself been link-edited. Alink-edited version ofthelinkage editor isavailable. Amemory saving ofapproximately 400010(I00008) words results. Theprincipal open-ended table istheSymbol Chain Table. Athree-word entry iscreated in thistable foreach subprogram name, entry point, common block andunique external reference not inthepath. Foralinkother thanLinkO,athree-word entry foreachentry point andcommon block inLink0isalsocreated. Aconservative estimate fortherequirements ofthistable is asfollows: LinkO: length inwords = Link#O:length inwords =4*(no.ofentry points +con_non blocks), 6*(no.ofentry points +common blocks) +3*(no.ofentry points +common blocks inLink0). Thelargest table islikely tobetheWorking Storage Table. Itmustholdallinstructions anddataforthelargest control section forwhich textisdefined. Ifthisfigure isnotknown, alinkage editor runcanbemade. Thestorage mapwill beprinted even ifthelinkisnotwritten. Ascanofthelengths listed (inoctal) will identify thelargest control section. Notethat common blocks forwhich nodataaredefined arenottobeused indefining themaximum. Field length forthelinkage editor maybeestimated fromthefollowing: field lengthlo =15000 +MAX(ION,2000) +MAX(T,2000) +3PARAM(1) , where andN T=number ofsubprograms defined onINCLUDE statements, length oflargest subprogram orcommon block forwhich instructions ordataaredefined, PARAM(1) isdefined insection 5.6.4.2. 5.6-29 (12-I-69)\nNASTRAN -OPERATING SYSTEM INTERFACES Ifdefault values forthelinkage editor areused,aprogram oflessthan200deckswould require afieldlength of23,60010 =60,0008 . Efficiency ofthelinkage editor maybeimproved byincreasing thebuffer size(PARAM(1)). ForNASTRAN, PARAM(1) storage (PARAM(6) = as 5.6.7=2080isused. Additionally, onedeckrequires 16,00010 wordsoftext 16000). Consequently, foralinkof300decks, thefieldlength works out fieldlengthlo =15000+3000+16000+6240 Link-edited Linkage Editor=4024010 _1200008 TheLinkage Editor object decksmaybelink-edited themselves. Level15maybeusedtodothisasfollows: Object TapeJ_B,PI,TIOO,CMI20000. MAP(BFF) REQUEST,TAPE3,HY. C_PYBF(TAPE3,X) COPYBF(TAPE3,LINKEDT) C_PYBF(TAPE3,LINKLIB) RETURN(TAPE3) REQUEST,TAPE2,HY. COPYBF(TAPE2,X,2) C_PYBF(TAPE2,_LDPL) RETURN(TAPE2) UPDATE(Q,L=I) REWIND(LINKEDT) C_PYBF(LINKEDT,LKDT) LKDT(COMPILE) REQUEST,TAPE,HY. C_PYBF(EDT,TAPE) RETURN(TAPE) EXIT. UNLOAD(TAPE)Source Tape SUBSYS decksThematerials released with SAVETAPEforexecutable linkage editor 5.6-30 (8/I/72)\nUNLOAD(TAPE2) UNLOAD(TAPE3) 789 *CbMPILE,LKED 6789THECDC6400/6600 LINKAGE EDITOR 5.6-30a (811/72)\nTHECDC6400/6600LINKAGEEDITOR =1400010 FieldLengthInstructions andData Bufferl Buffer2 Buffer3 MasterIndex SegmentIndex LibraryIndex NamesTable EntryPointTable LibraryTable RegionDefinition Table SegmentDefinition Table SegmentChainsTable RenameTable S)_bolChainTable WorkingStorageSize PARAM(1) PARAM(l) PARAM(l) PARAM(4) PARAM(5) No.ofdecks inall Libraries (_PARAM(6)) No.ofdecks inall Libraries (_PARAM(6)) No.ofentry points in LINKLIB (=200) No.oflibraries No.ofregions +l No.ofsegments +l (_PARAM(4) +l) No.ofsegments +l (_PARAM(4) +l) 3*(no. ofRENAME statements) Remaining storage PARAM(3) +PARAM(6) Figure 5.Layout ofcorestorage forthelinkage editor. 5.6-31 (12-I-69)\nINTRODUCTION 6.1INTRODUCTION Modifications andadditions arecontinuously madetolarge programming systems. NASTRAN will notbeanexception tothisrule. Section 6.2presents theF@RTRAN IVlanguage restrictions that mustbefollowed inorder toproduce equivalent object codeacross thecomputing machines on which NASTRAN operates. Theremaining sections discuss areas oftheprogram which experience, gained during program development, hasshown tobethose areas mostsubject tomodifications and additions. 6.l-I\nFORTRAN IVLANGUAGE RESTRICTIONS 6.2 FORTRAN IVLANGUAGE RESTRICTIONS NASTRAN wasdeveloped intheF_RTRAH IVprogramming language tothegreatest extent possible inordertosimplify thetaskofconversion fromthedevelopment machine, which, forthemajority ofprogram development, wastheIBM7094/7040(44) DCS,tothirdgeneration computing systems. The sameFORTRAN IVcodecanexecute differently across computing machines. Thisfactisallbuttoo wellknowntothosewhohavelabored through thetaskofconversion fromonecomputing system to another. Forthisreason, modifications andadditions toNASTRAN mustbeaccomplished withF_RTRAN codethatwillproduce equivalent object codeacross computing mLchines. Thebasicsetofrules governing programming inFORTRAN IVforNASTRAN isincorporated inthefollowing manual inthe IBMSystems Reference Library: IBM7090/7094 IBSYSOperating System, Version 13,FORTRAN IV Language, FileNo.7090-25, FormC28-6390-3. Thefollowing isalistofexceptions totherules setforthinthismanual. I.Aninteger constant maynotbegreater than231-I. 2.Subscripted variables should contain nomorethan3subscripts. 3.Areference tothefirstvariable inasubscripted arraymustcontain the subscript I,e.g.,A(1)=0.0. 4.ACONTINUE statement requires aFBRTRAN statement number. 5.ThePAUSEstatement isnottobeused. 6.TheNAMELIST statement isnottobeused. 7.Implied DO’sinDATAstatements arenotallowed. 8.Thelaststatement ofaDOloopmaynotbealogical IFstatement. Itisrecommended thatitbeaCONTINUE statement. Itisalsoreco_nended thateachDOloophave itsownC_NTINUE statement. 9.BLOCK DATAsubprograms maycontain onlytype(e.g., REAL,INTEGER), DIMENSION, CO_ON, DATAandcomment statements. I0.AllHollerith datashould bedefined intheform4H….. II.Donotuseoctal(0)orhexidecimal (Z)inDATAorF@RMAT statements. 12.Specification statements should precede anyexecutable statement. 6.2-I(811172)\nMODIFICATIONS ANDADDITIONSTONASTRAN 13.Theorderofspecification statements shouldbeasfollows: C_MPLEX D_UBLEPRECISION REAL INTEGER L_GICAL DIMENSI@N C_MM_N EQUIVALENCE EXTERNAL DATA Arithmetic StatementFunctions 14.ThevariablesinblankCOMMONorablockofC_MM_Nshouldbeorderedasfollows: complex,doubleprecision, real,integerandlogical. 15.Variablesstoredassingleprecisioncannotbereferenced asdoubleprecisionvariables (viatheF_RTRANEQUIVALENCE statement) becauseofthedifferentinternalwordstorage formatforsingleanddoubleprecisionwordsontheUnivac1108. 16.Cautionmustbeexercisedtoinsurethattypes(REAL,INTEGER,etc.)ofFORTRANfunction valuesagreeinthefunctionsubprogram andinthecallingprogram.Thisagreement betweentypesisnecessaryformachines(e.g.,IBMS/360)onwhichREALandINTEGER valuesofF_RTRANfunctionsarereturnedindifferentregisters. 17.DonotattempttoextendthelengthofarraysthroughtheEQUIVALENCE statement. 18.CautionmustbeexercisedwhenusingtheEQUIVALENCE statement. Oneshouldnotusethe EQUIVALENCE statementtogivedifferentvariablenamestothesamecell,sincemodern compilers, becauseoftheiroptimization techniques, donotguaranteethatthevalues oftheequivalenced variableswillbethesame.HenceEQUIVALENCE shouldbeusedonly betweenvariableswhichhavenon-intersecting usespansinaprogram. 6.2-2(8/I/72)\nFORTRANIVLANGUAGERESTRICTIONS 19.Nonstandard returnsinaSUBROUTINE statementmustimmediately followtheleftparenthesis whichstartsthenamesofthesubroutine’s arguments, e.g.SUBROUTINE XYZ(,,A,B)is thecorrectform;SUBRBUTINE XYZ(,A,,B)isnotacceptable. OntheCDCcomputers, use SUBROUTINE XYZ(A,B),RETURNS(RETURNI,RETURN2). 20.Theremustbeagreementwithrespecttothenumberofargumentsandthetypeofeach argumentintheargumentlistofacallingprogramandthesubprogram called. 21.Forconsistency withcurrentNASTRANpractice,deck(ormember)namesforsubroutines shouldagreewiththeprimaryentrypointnames.DecknamesforBlockDatasubprograms shouldendwiththecharacters “BD”. 22.FUNCTIONsubprograms whosetypeisnotimplicitmustbetypedintheFUNCTIONstatement. Forexample,use D_UBLEPRECISIBNFUNCTIONABC(X) andnot FUNCTIONABC(X) D_UBLEPRECISIBNABC 23.ThenameofaFUNCTIONsubprogram mustappearsomewherewithinthesubprogram. 24.Allsubscripted variablesappearinginEQUIVALENCE statements mustbesubscripted. E.g.,useEQUIVALENCE (A(1),X(1)) insteadofEQUIVALENCE (A,B). 6.2-3 (811172)\nTHEEXECUTIVE CONTROL DECK 6.3THEEXECUTIVE CONTROL DECK Thecapabilities oftheExecutive Control Deckmaybechanged orincreased bymodifying existing control cardfunctions oraddition completely newcardtypes. Executive control cards areprocessed within twomodules ofthePreface: XCSA,(Executive Control Section Analysis, Section 4.2)andXGPI(Executive General Problem Initialization, Section 4.7). Somecardsare handled completely within XCSA,while others areonlypartially checked byXCSAandthenpassed toXGPI,viatheExecutive Control Table (Section 2.4.2.5), forfinalprocessing. Tomodify thecontent orfunction ofanexisting control card,firstlocate theproper section within module XCSA. TheblockofF_RTRAN statements related totheprocessing ofeach typeofcardisappropriately co_nnented. Also,itcanbedetermined fromthesestatements whether partoftheprocessing isbeingpassed tomodule XGPI. Therequired modifications can thenbemadewithin XCSAand/or XGPI. Toaddanewcontrol cardtypetothosecurrently acceptable, thefollowing stepsshould be taken. First, addthecardtypenametothelocalF_RTRAN arrayECTT(Executive Control Type Table) within module XCSA,andincrease thetablelength parameter (LECTT) bythreeforeach newentry. Thethreewordentryconsists oftwoBCDwords (4characters/word) forthecardtype mnemonic andaonewordinteger flagindicating whether thecardtypeistobeoptional (=0)or required (=I)within theNASTRAN Executive Control Deck. Second, addastatement number tothe computed-go-to branch vector. Thisbranch vector transfers theXCSAlogictothecorrect card processing section within themodule. Third, create theprocessing code,andaddittothe module. Ifadditional processing mustbeperformed inXGPI,theControl Tableformat should be modified andthenecessary logicaddedtotheXGPImodule. 6.3.1 TheNASTRAN Card Afacility isprovided whereby thedefault values in/SYSTEM/, whichareinitialized bythe system Block Datasubprogram, SEMDBD, orsubroutine BTSTRP, canbealtered atexecution time. Thecontents of/SYSTEM/ aredescribed inSection 2.4.1.8. Otherlocally usedvalues mayalso beredefined. Thecardwhich provides thiscapability iscalled theNASTRAN card. Ifthiscardisused, itmustbethefirstcardofthedatadeck(i.e., thecardmustprecede theExecutive Control 6.3-I(8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN Deck). ControlDecks).Itsformatisasfollows:TheNASTRANcardisafreefieldcard(similartocardsintheExecutiveControlandCase NASTRAN keywordl=Value, wherethelistofallowablekeywordsisasfollows:keyword2=value, … I.BUFFSIZE-DefinesthenumberofwordsinaGIN_buffer.Note:fixedlengthrecords writtenbyGIN_areoflengthBUFFSIZE-3.Thiskeywordchangesthefirstwordof /SYSTEM/. 2.MAX_PEN -Defines themaximum number offilesthatmaybeopenatanyonepoint inthe program. Thiskeyword changes the30thwordof/SYSTEM/. 3.C_NFIG -Defines thecomputer configuration foruseinthetiming equations inthe matrix decomposition subroutines SDC_MP, DECAMP andCDCOMP. Thiskeyword changes the 28thwordof/SYSTEM/. 4.MAXFILES -Defines themaximum number offilestobeplaced in/XFIAT/ byGNFIAT. Thiskeyword changes the29thwordof/SYSTEM/. 5.SYSTEM(1) -Irefers totheIthwordof/SYSTEM/. Thisisageneral formofaltering anywordin/SYSTEM/. NotethatBUFFSIZE andSYSTEM(1) areequivalent, andMAXFILES andSYSTEM(29) areequivalent. 6.K_N360 -Defines the31stwordof/SYSTEM/. UsedonlyontheIBM360-370 computers. Thisvaluesetsthenumber ofwordsoffourbytes eachtobereserved fromtheregion for_Sservice routines needed during execution. Iftheuserisgoing touseF_RTRAN units forUserTapesoriflocalmodifications aremadetotheprogram which require additional service routines atexecution time,thisvaluewillhavetobeincreased. 7.NLINES -Defines the9thwordof/SYSTEM/. Thisvaluesetsthenumber ofdatalines perprinted page. ForII\"paper, anappropriate value is50.For8-I/2\" paper, an appropriate valueis35. 8.TITLE_PT -Defines alocalvariable within SEMINT which ispassed toTTLPGE tocontrol theprinting oftheNASTRAN titlepage. SeeSection 3.3.13 foradescription of subroutine TTLPGE. 6.3-2 (8/I/72)\nTHEEXECUTIVECONTROLDECK Examples ofuseoftheNASTRAN card follow. NASTRAN BUFFSIZE=878, SYSTEM(2)=3, MAX_PEN=IO Theabovecardchanges theIst,2ndand30thwordsof/SYSTEM/. SYSTEM(2)=3 changes thesystem output unitfrom6to3. NASTRAN SYSTEM(4)=4, MAXFILES=21 Theabove cardchanges the4thand29thwordsof/SYSTEM/. SYSTEM(4)=4 changes thesystem input unitfrom5to4(which meansthatallsubsequent datamustbepresent onunit4). 6,3-3 (8/I/72)\nTHECASECONTROL DECK 6.4THECASECONTROL DECK TheCaseControl Deckisprocessed bytheIFPImodule, whose Module Functional Description canbefound insection 4.3. Acardcanbeadded totheCaseControl Deckbyimplementing the following steps. I.Assignment ofaWord intheCASECC DataBlock (seesection 2.3.1.I). Ifthecard datum istobepassed on,awordmustbeassigned inCASECC. Several words are currently empty inCASECC. Ifmorespace inthefixed portion ofCASECC isneeded, modules which useCASECC toprepare datablocks fortheOutput FileProcessor (_FP) module (e.g., SDR2, VDR,PLA3), willneedtobeupdated since theyBresensitive tothelength ofCASECC. Otherwise, justchange thevalue ofLENCC in/IFPIA/.SomeCaseControl Cards onlychange cells in/SYSTEM/anddonotneedspace inCASECC. 2.Addition (orchange of)aKeyWord. Toaddanother keywordsimply lengthen /IFPIA/bythenun_er ofnewwords, changing the IFPABD Block Datasubprogram. Thesameprocedure will allewyou tochange thespelling ofa current keyword. 3.Identification ofCardType. InIFPIthere areapproximately 30logical IFstatements inarew. Simply addanother one modeled after theexisting statements withthenewkeyword. 4.Addition ofCardDependent Code. Addasmall internal subroutine toprocess thenewcard. Thesimplest formofsuch an internal routine istoextract oneinteger fromacardoftheformSPC=I.Inthiscase set\"IK\"totheword assigned tothecardinCASECC andtransfer tothecommon codeforthis purpose. There aremanyexamples ofmorecomplex cards under eachcardtype. Changing these carddependent areas ofcodeallows easymodification ofexisting cardtypes. 5.Restart Implications Seethesubroutine description forIFPIB intheModule Function Description forIFPIfora description oftherestart functions ofIFPI. 6.4-I\nTHEBULKDATADECK 6.5THEBULKDATADECK ThemodulewhichprocessestheBulkDataDeckistheInputFileProcessor(IFP),whose ModuleFunctional Description canbefoundinsection4.5.Therearetwoprimaryreasonsfor addingormodifyingabulkdatacard.First,anewstructural elementorsomeotheritemisto beaddedtotheNASTRANsystem.Thiswillrequireadditional codeinseveralothermodules besidestheInputFileProcessor(IFP);however,onlyIFPchangeswillbediscussedhere. Second,analternateformofuserinputisdesiredforanalreadyexistingitem.Forexample, theSPCIcardisanalternateformoftheSPCcard.Insomecases,analternateformcanbe accommodated onthesamecare.AnexampleofthistechniqueisfoundoF,theSP_INTcard.The advantagegainedinthiscaseisthatchangestotheNASTRANsystemareisolatedtotheInput FileProcessor. Therearethreemajorreferences fortheprogrammer whodesirestomakemodifications or additionstotheInputFileProcessor. Section2oftheUser’sManualgivesafunctional description ofeachbulkdatacard.Section2.3.2oftheProgrammer’s Manualdescribesthe formatoftheoutputdatablocksgeneratedbytheInputFileProcessor, andsection4.5ofthe Programmer’s Manualcontainsadescription oftheprocessing flowwhichoccurswithinIFP.Any programmer responsible formakingchangestotheInputFileProcessorwouldbewelladvisedto selectacardwhichissimilartotheoneheischangingorimplementing and\"followitthrough\" thecode,usingthethreereferences describedabovetoguidehim. Inmostcases,theworkrequiredtoaddanewcardwillamounttoaddingentriestoalready existingtablesintheIFF_BlockDatasubprograms. Thedetailedstepsforaddinga_ewcardto theInputFileProcessorarelistedbelow. I.Addthecardnameandcorresponding tabledatatotheIFPdatatablescontainedin BlockDataSubprograms IFXIBD,IFX2BD,IFX3BD,IFX4BD,IFX5BD,IFX6BD,andifneeded, IFX7BD.Themeaningoftheseentriesisdiscussedinsection4.5.7. 2.AddanentryintheIFPcodetocalloneoftheIFPsecondaryroutinesIFSIP,IFS2P, IFS3P,orIFS4P,whereinthecarddependentprocessing takesplace,andaddthenecessary c_rddependentcodetotheappropriate secondaryroutine. 6.5-I\nMODIFICATIONS ANDADDITIONS TONASTRAN 3.Ifthenewcardistobeusedinconjunction withaRigidFormat, appropriate entries mustbemadeintherestart bittables in/IFXO/ andintheRigidFormat tables. See section I.I0fordetails. 6.5-2\n6.6RIGID FORMATS RIGID FORFt_TS Thefollowing stepswill allow theaddition ofanewNASTR/_J_Rigid Format. I.Compile andtesttheDMAPsequence throughly byrunning problems onitusing APPDMAP orbyusing theALTER feature withanexisting Rigid Format. 2.AllRigid Formats must beclassified F_RCE orDISPLACEMENT. Acalltcasubroutine which stores thenewRigid Format mustbeadded tosubroutine XRGDFM ofmodule XCSA (seesection 4.2). Thesubroutines which contain current Displacement Rigid Formats arecalled LDi, i=Of,02….,12.Dumnly calls arealready setup forDisplacement Rigid Formats LD45-LD50. Theycorrespond tosolutions 13through 19.Bychoosing tousesolutions 13through Igand creating theappropriate LDiroutine, thisstepcanbeskipped. 3.AnLDiroutine mustbewritten. TheLDiroutine mustwrite theDMAPsequence, the Decision Tables, theFileNameTable, andtheCardNameTable ontheNPTP. isasfollows: Record 1: This record contains thecoded DMAPsequence, 4characters perword. DMAP instruction mustendwiththecharacter: this record arestored intheRDarray. Record 2: Number of Words l l NBIT*DI_PTheformat Notethatevery $.Intheexisting LDiprograms thedatafor Contents Number ofDMAPinstructions (NDMAP). Number ofwords inthedecision table foreachDI_P instruction (NBIT), l\u003cNBIT\u003c5. Decision tableforeachinstruction with theentriesfor irstructions notinthissubset settozero. Thewords cannot beallzero. Thezeroing ofthesubset entries canbeacco_lished byacalltoXSBSET. (SeeXCSAMFD write-up). Intheexisting LDiprograms, thistable is stored intheISlarray. Nuh_er oTentries IntheFileNameTable (NFILE). This number maybezero ifnoFileNameTable isdesired. 6.6-I (8/I/72)"},"title":"Programmer's Manual P90"},"/docs/programmers/programmers_manual_091/":{"data":{"":"MODIFICATIONS ANDADDITIONS TONASTRAN Number of Words 3NFILE 3NCARDContents FileNameTable -Eachentry consists of2BCD words giving thedatablock nameofanydata block intheRigid Format andoneinteger giving itsbitposition intheDecision Table. Inthe existing LDiprograms, theFileNameTable isstored in theJNMarray. Number ofentries intheCardNameTable(NCARD). Thisnumber maybezeroifnoCardNameTableisdesired. CardNamefable-Eachentryconsists of2BCDwords giving thecardNameofanyNASTRAN DataCardand oneinteger giving itsbitposition intheDecision Table. Intheexisting LDiprograms, theCardNameTable isstored intheINMarray. Tomodify anexisting rigidformat theappropriate tables (Decision, CardName,FileNameor DMAP)shouldbechanged. Theirlocations intheexisting LDiroutines aredetailed above. 6.6-2\nFUNCTIONAL MODULES 6.7 FUNCTIONAL MODULES Afunctional module communicates with theNASTRAN Executive System, andhence indirectly with other functional modules, onlythrough itsinput datablocks, itsoutput datablocks andits DMAPparameters. Hence amodification toafunctional module which disturbs neither itsoutput datablocks noritsDMAPparameters canbemadewithout changing anyother functional modules. Ifamodification toafunctional module affects itsoutput datablocks oritsDMAPparameters, itmustbedetermined (byreferring tosection 4,Module Functional Descriptions, ofthePro- grammer’s Manual and/or section 3,Rigid Formats, oftheUser’s Manual) whatmodules usethese output datablocks andDMAPparameters asinput. Ifthese modules arenumercus, orifthe changes tothemareveryextensive, itmaybemoreprofitable towrite anewmodule(s) to accomplish thetaskathand. Toaddafunctional module tothesystem three changes mustbemade: l)update theModule Properties List (HPL), theExecutive table which contains the(DMAP) nameofthemodule, the number ofinput datablocks, thenumber ofoutput datablocks, thenumber ofscratch datablocks andtheDMAPparameter list(seethedescription oftheMPLinsection 2.4formoredetails); 2)update theLinkSpecification Table (LHKSPC), theExecutive table which contains the(DMAP) nameofthemodule, themodule’s entry point nameandthelinkresidence keysforthefourmachine types (seethedescription oftheLNKSPC table insection 2.4formore details); and3)update oneormore linkdriver routines, XSEMi, (seesection 3.3.7) sothatthemodule iscalled from oneormore links. Steps 2and3havebeen automated within theNASTRAN system. These auto- mated procedures aredescribed insections 6.11.3.1 and6.11.3.2 respectively. 4)Addthemodules totheoverlay structure fortheappropriate link(s). Themeans ofaccomplishing this taskis machine dependent, butabasic picture ofthemodule anditssubroutines andtheir relationships toother NASTRAN subroutines should bedrawn. Anupdated LinkMapsuchasthose insection 5 should bemade. 5)Toactually addthemodule section 5must beconsulted fortheparticular computer which NASTRAN isoperating on. Inaddition considerable number ofdocurmntation changes mustbemade. These aredescribed briefly foreachmanual. l)Programmer’s Manual: Anewsubsection forsection 4.0mustbewritten todescribe themodule. Thevarious table of contents andindexes mustbeupdated including sections 4.1.2 and4.1.3. Theoverlay maps in 6.7-I (311171)\nFUNCTIONAL MODULES section 5mustbeupdated. 2)User’sManual: Ifthemodule istobea\"usermodule\" itshouldalsobedocumented insection 5oftheUser’s Manual. Anynewerrormessages mustbedocumented insection 6.Themodule nameshould beadded tothedictionary insection 7. 3)Theoretical Manual: Noadditions arerequired hereunlessthemodule hassomesignificant analytic developments which needtobedocumented. 6.7-2 (3/I/71)\nADDINGASTRUCTURAL ELEMENT 6.8ADDINGASTRUCTURAL ELEMENT 6.8.1Introduction totheProblem Thissection defines theprogramming interfaces necessary toaddanewstructural element toNASTRAN. Weassume thereader ofthissection has: I.Agoodworking knowledge ofF_RTRAN IV 2.Experience inprogramming onalarge-scale scientific computer, including useof overlays. (Preferably thisexperience hasbeen ononeofthecomputers onwhich NASTRAN isoperational: IBM360,BS;UNIVAC ll08, Exec8;orCDC6600, SCOPE 3.0) 3.Aworking knowledge ofmatrix algebra, viz., addition, multiplication andinversion ofmatrices Wealsoassume thereader hashadprior experience withneither structural analysis northe NASTRAN program. Furthermore, weassume thatastructural analyst haswritten mathematical specifications forastructural element, andthatthereader mustdesign, code, andcheckout NASTRAN FBRTRAN subroutines thatconform tothese mathematical specifications. 6.8.1.I Introduction toStructural Analysis Ascientific programmer mustgainaminimal understanding ofthephysics andmathematical techniques involved intheapplication athand. Thefollowing paragraphs, condensed from section 3oftheTheoretical Manual, givethisminimal analytical background. Fromatheoretical viewpoint, thematrix equation [K]{u} :{P} , (1) completely describes theformulation ofastatic (themost basic) structural problem. [K]is called astiffness matrix, {P}iscalled aloadvector and{u},theunknown oftheequation, iscalled adisplacement vector. NASTRAN generates [K]and{P)fromavailable information about thestructure. OnceEquation lhasbeen formed, itissolved foreachspecified loading condition. Stresses inthestructural elements andother desired results arethenobtained from {u}byaset ofdata recovery operations. 6.8-I (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN NASTRAN embodies alumped element approach, i.e.,thedistributed physical properties ofa structure arerepresented byamodelconsisting ofafinite number ofidealized substructures or elements thatareinterconnected atafinite number ofpoints. Allinputandoutput datapertain totheidealized structural model. Theidealized structural modelinNASTRAN consists of\"gridpoints\" (G)towhich “loads” (P) areapplied, andatwhichdegrees-of-freedom aredefined, and\"elements\" (E)thatareconnected between thepoints, asshowninFigure I.Twogeneral typesofgridpoints areemployed. They are: I.Geometric gridpoint-apointinthree-dimensional spaceatwhichthree components ofdisplacement andthreecomponents ofrotation aredefined. The coordinates ofeachgridpointarespecified bytheuser. Components ofdisplacement androtation canbeeliminated asdegrees-of-freedom bymeansof\"single-point constraints\" 2.Scalar point-apointinvector spaceatwhich onedegree-of-freedom isdefined. A geometric gridpointcontains fromonetosixscalar points. Scalar points mayexist thatarenotassociated withgridpoints. Suchpoints canbecoupled togeometric grid points bymeansofscalar structural elements andbyconstraint relationships. Thestructural element isaconvenient localizing concept forspecifying manyofthepro- perties ofthestructure, including material properties, massdistribution andsometypesof applied loads. Structural elements aredefined on\"connection\" cardsbyreferencing thegrid points towhich theyareinterconnected. Inafewcases, alloftheinformation required to generate structural matrices fortheelement isgivenontheconnection card. Inmostcases, theconnection cardrefers toa\"property\" card,onwhich thecross-sectional properties ofthe element aregiven. Adding anewstructural element toNASTRAN necessitates designing andimple- menting anewconnection cardand,ifdefined, anewproperty card. Therearefourgeneral classes ofstructural elements: I.Metric elements connected between geometric gridpoints. Examples include rod, plate, andshellelements. 2.Scalar (orzero-dimensional) elements connected between pairsofscalar points, orbetween onescalar pointand\"ground\". Sinceeachgeometric gridpointcontains anumber 6.8-2 (8/I/72)\nADDING ASTRUCTURAL ELEMENT P4 G7E1P2 P5 _5 E3 E6P3 E2 P wG6 E4 -G9 E7 Figure I.Topology oftheidealized structural model. 6.8-3 (8!I!72)\nMODIFICATIONS ANDADDITIONS TONASTRAN ofscalar points corresponding tospecific components ofmotion, scalar elements canbe connected between selected components ofmotion atgeometric gridpoints. 3.General elements, whoseproperties aredefined intermsofdeflection influence coefficients (i.e., compliance matrices), andwhichmaybeinterconnected between any number ofgeometric andscalar gridpoints. Animportant application ofgeneral elements istherepresentation oflargecomponents ofstructure bytestdata. 4.Constraint elements (orConstraints). Theexistence ofaconstraint element implies alinear relationship amongthedegrees-of-freedom towhich itisattached. This relationship isoftheform RcgUg =Yc g where Ugaredegrees-of-freedom andYcisanenforced displacement. Alinear relationship amongtheforces ofconstraint isalsoimplied, since itisrequired thattheforces of constraint donowork. Theremainder ofthissection willconcentrate onclassI,metric elements, and,fromthis pointon,thephrase “structural element” orsimply “element” shallmeanmetric structural ele- mentasdefined above.(2) 6.8.1.2 General Problem Flow NASTRAN consists ofanumber ofsubprograms, ormodules, thatareexecuted according toa sequence ofmacro-instructions. TheNASTRAN Executive System (NES)controls theflowofthis sequence. Twelve suchsequences, called RigidFormats, arepermanently stored inNESandcanbe selected bymeansofcontrol cards. Eachrigidformat corresponds toaparticular typeof structural analysis. Detailed explanations ofeachrigid format canbefoundinsection 3ofthe User’s Manual. Sinceastiffness matrix [K]mustbegenerated forallrigid formats, structural elements interact withalltwelve rigidformats. However, ifthereader hasaminimal understanding of rigidformat I,BasicStatic Analysis; rigidformat 4,Static Analysis withDifferential Stiffness; andrigidformat 6,Piecewise Linear Analysis; thenhewillhaveenough background toaddanew 6.8-4 (8/I/72)\nADDING ASTRUCTURAL ELEMENT element. Rigid formats 4and6areminor variations ofrigid format I.Therefore, ifallthe module changes forrigid format lhavebeencompleted, only afewadditional modules must be changed toaddthenewelement tothedifferential stiffness andpiecewise linear analysis ele- ment libraries. Withthese points inmind, thefollowing subsection discusses theBasic Static Analysis rigid format insomedetail. 6.8.1.2.1 Basic Static Analysis Figure 2shows asimplified flowdiagram forBasic Static Analysis. Eachblock intheflow diagram represents anumber ofNASTRAN modules. Notevery module hastobechanged toaddan element. Those thatdohavetobechanged arecalled element-dependent; those thatdonothave tobechanged arecalled element-independent. Inblock lofFigure 2,theInput DataProcessor, asthenameimplies, reads andanalyzes theinformation oninput datacards andreorganizes itintodatablocks consisting oflists of similar quantities. NASTRAN input datacards reside inthree separate decks: theExecutive Control Deck, theCaseControl DeckandtheBulkDataDeck. Section 2oftheUser’s Manual describes thecontents ofeach ofthese decks. Thereader needonlybeconcerned withtheBulk DataDeck_ foritisinthisdeckthatthenewelement’s connection andproperty information will befound. TheInput FileProcessor (IFP) module analyzes eachcardoftheBulkDataDeckfor correctness offormat anddistributes thedataintheBulkDataDecktovarious data blocks. The primary function oftheExecutive Control Section Analysis (XCSA) module istoreadandanalyze thecards intheExecutive Control Deck. XCSAalso contains tables necessary forproblem restarts, anditisinthese tables thatupdates must bemade. Detailed explanations ofIFPandXCSA changes will befound inSections 6.8.3.1 and6.8.3.2, respectively. Inblock 2ofFigure 2,theGeometry Processor generates coordinate system transformation matrices, tables ofgridpoint locations, atable defining thestructural elements connected to eachgrid point, andother miscellaneous tables such asthose defining static loads andtempera- tures atgrid points. TheGeometry Processor consists of: Geometry Processor -Phase l(GPI); Geometry Processor -Phase 2(GP2); Geometry Processor -Phase 3(GP3); andtheTable Assembler (TAI). Section 6.8.3.3 explains Geometry Processor interfaces which areminimal. 6.8-5 (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN TheStructures Plotter generates tapeoutput foranautomatic plotter thatwillplotthe structure (i.e., thelocation ofgridpoints andtheboundaries ofelements) inoneofseveral available three-dimensional projections. TheStructures Plotter isparticularly useful forthe detection oferrors ingridpointcoordinates andintheconnection ofelements togridpoints. TheStructures Plotter mayalsobeusedattheendoftheprogram tosuperimpose images ofthe deformed andundeformed structure. TheStructures Plotter consists ofthePlotSetDefinition Processor (PLTSET) module andtheStructural Plotter (PL@T) module. TheStructural Matrix Assembler generates stiffness andmassmatrices referred tothegrid points fromtabular information generated bytheInputFileProcessor andtheGeometry Processor. NASTRAN usesthemassmatrix instatic analysis forthegeneration ofgravity loadsandinertia loadsonunsupported structures. TheStructural Matrix Assembler consists ofthreemodules: Structural Matrix Assembler -Phase 1(SMAI), whichgenerates thestiffness matrix forstructural elements; Structural Matrix Assembler -Phase2(SMA2), which generates themassmatrix; and Structural Matrix Assembler -Phase3(SMA3), which generates stiffness matrix contributions fromgeneral elements. Sincewearenotconcerned withgeneral elements (seeSection 6.8.1.1), programming interfaces inSMA3arenotdiscussed. Sections 6.8.3.5 and6.8.3.6 discuss SMAIand SMA2interfaces respectively. Inblock 5ofFigure 2,thestiffness matrix isreduced totheform inwhich itsmatrix equation isfinally solved through theimposition ofsingle-point andmultipoint constraints, and theoptional useofmatrix partitioning. Noelement-dependent code exists inblock 5. Inblock6ofFigure 2,theStatic Solution Generator -Phase1(SSGI) module generates loadvectors {Pi}fromavariety ofsources: concentrated loadsatgridpoints; pressure loads onsurfaces; gravity loads; temperature loads; andenforced deformations. Theonlytypesof loadsthatwillconcern thereader arethermal andenforced deformation loads, bothofwhich arecalculated usingthestiffness properties ofthestructural elements. However, thermal and enforced deformation loadsdonotexistforallelements. TheSSGIinterfaces arediscussed in section 6.8.3.7. Module SSG2,which iselement-independent, reduces theloadvectors {Pi}to finalformbytheapplication ofconstraints andmatrix partitioning. 6.8-6 (8/1/72)\nADDING ASTRUCTURAL ELEMENT I1InputFile Processor iIProcessor 3Structures ] Plotter I4Structural Matrix 1Assembler $ 5Application ofConstraints and Partitioning totheStiffness Matrix $ 6Generation andTransformation ofLoadVectors I7Solution forIndependent 1Displacements Recovery of_pendent Displacements andStresses I9OutputFileProcessor I0Deformed StructuresPlotterl I Figure 2.Simplified flowdiagram forbasic staticanalysis. 6.8-7 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTPJ_N Inblock7ofFigure 2,thesolution fortheindependent displacements {ui}isaccomplished intwosteps: decomposition ofthestiffness matrix [K]intoupperandlowertriangular factors; andsolution forthe{ui}corresponding tothespecific loadvectors, {Pi},bymeansofsuccessive substitutions intotheequations represented bythetriangular factors of[K](theso-called forward andbackward passes). Modules RBMG2andSSG3,bothofwhich areelement-independent, accomplish thissolution. Inblock8ofFigure 2,module SDRI,which iselement-independent, determines dependent displacements. Theinternal forces andstresses ineachelement arethencomputed intheStress DataRecovery -Phase2(SDR2) module fromknowledge ofthedisplacement components atthegrid points oftheelements andtheintrinsic structural equations oftheelement. SDR2programming interfaces arediscussed inSection 6.8.3.8. Finally inblock9ofFigure 2,theOutput FileProcessor (_FP)module formats theelement forces andstresses thatwerecomputed inSDR2forprinting onthesystem output file. _FP interfaces arediscussed inSection 6.8.3.9. 6.8.1.2.2 Static Analysis WithDifferential Stiffness Figure 3showsasimplified flowdiagram forrigidformat 4,Static Analysis withDifferential Stiffness. Acomparison between Figures 2and3showsthatthefirsteightblocks ofFigure 2 and3areidentical. Contributions tothedifferential stiffness matrix arenotdefined forallelements currently inNASTRAN, andtheymaynotbedefined foranewelement. Thedifferential stiffness matrix, which isafirstorderapproximation tolargedeformation effects andwhich isdirectly propor- tional totheleveloftheapplied loads, isgenerated inblockIIofFigure 3intheDifferential Stiffness Matrix Generator (DSMGI) module. Section 6.8.3.10 discusses DSMGIprogramming interfaces. Thedifferential stiffness matrix isreduced tofinalforminblock12inprecisely thesame waythatthestructural stiffness matrix isreduced tofinalforminblock5.Itisthenaddedto thestructural stiffness matrix, andthesolution anddatarecovery portions oftheprogram are re-executed. Additional solutions maybeobtained forconditions inwhichthedifferential stiffness matrix andtheapplied loadvector aremultiplied byasequence ofconstant factors, 6.8-8 (8/I/72)\nADDING ASTRUCTURAL ELEMENT 13AddtheStructural andDifferential Stiffness Matrices 12!plication of Constraints and Partitioning tothe Differential Stiffness Matrix IIForm Differen tial Stiffness J_ _ _-MatrixiInput File Processor 2Geometry Processor 3Structures Plotter _ 4Structural Matrix Assembler 75Application ofConstraints and Partitioning tothe-Stiffness Matrix I 6Generation an_dTransformation ofLoad_ctors Solution forIndependent | DisplacementsJ Recovery ofDependent Displacements andStresses No _¥es 9Output File l Processor 10Deformed Structures I Plotter] Figure 3.Simplified flowdiagram forstatic analysis withdifferential stiffness. 6.8-9 (811/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN corresponding todifferent levels ofthesameloading condition. Allmodules corresponding to blocks 12and13areelement-independent. 6.8.1.2.3 Piecewise Linear Analysis Figure 4showsasimplified flowdiagram forrigidformat 6,Piecewise Linear Analysis. In piecewise linear analysis, solutions areobtained forstructures withnonlinear, stress-dependent, material properties. Theloadlevelisincreased toitsfullvaluebysmallincrements, such thatstiffness properties canbeassumed tobeconstant overeachincrement. Aftereachincrement thecombined strains innonlinear elements duetoallloadincrements areused,inconjunction withstress-strain tabular functions, todetermine theappropriate stiffnesses forthenextload increment. Piecewise linear analysis isnotdefined forallelements currently inNASTRAN andit maynotbedefined foranewelement. Blocks Ithrough 4ofFigure 4areidentical toblocks 1through 4ofFigures 2and3. Blocks 4Aand4Bareperformed bythePiecewise Linear Analysis -Phase l(PLAI) module. PLAI classifies allelements aslinear ornonlinear. Anelement issaid tobelinear ifitsmodulus ofelasticity E,defined onaMATI bulk data card, isno__t_tdefined tobestress-dependent ona TABLESI bulk data card. PLAI generates thelinear stiffness matrix using theelement routines of theSMAI module, andthenonlinear elements comprise theESTNL andECPTNL data blocks. TheESTNL andECPTNL data blocks, used subsequently inmodules PLA3 andPLA4 respectively, have thesame general formats astheESTandECPT data blocks from which they arederived. PLAI reads the ESTandECPT, and, foreach element entry, appends stress information about theelement. Modules PLA3 andPLA4 update theappended stress information each time these modules areexecuted inthe loop that extends from block 5toblock 21inFigure 4.Section 6.8.3.11 discusses PLAI interfaces. Block5inFigure 4isidentical toblock5inFigures 2and3andiselement-independent. Block6contains module SSGI,which isnodifferent inthisrigidformat fromthetwopreviously discussed. Block17iselement-independent, andblock7,identical toblock7inFigures 2and3, isalsoelement-independent. Block8Adenotes module SDRIwhichis,asindicated above, element-independent. Notethat theSDR2module, block8B,isoutside theloop. 6.8-10 (8/I/72)\nADDING ASTRUCTURAL ELEMENT 21AddLinear and1NonIinear Stiffness MatricesI1Input File Processor 16Identify the _Ionlinear Elements !I2Geometry IProcessor 3Structures 1 Plotter 4(Linear} Structural Matrix Assembler Application ofConstraints andPartitioning tothe Stiffness Matrix I 6Generation and l Trans formati onof iLoadVectors t [2 nerateOeI17S°lut°nf° Nonli near Independent Stiffness Matrix DisplacementsI17Multiply Loads IbyCurrent Load IIncrement Factor Deformed Structures I PlotterI8ARecovery ofDependent Displacements I I18FormAccumulated Sumof Incremental Displacements Figure 4.Simplified flowdiagram forpiecewise linear analysis. 6.8-II (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN Block18denotes module PLA2whichiselement-independent, andinblock 19thestresses in thenonlinear elements arecomputed inthePiecewise Linear Analysis -Phase3(PLA3) module. Thismodule issimilar totheelement stress datarecovery portions oftheSDR2module. PLA3 interfaces arediscussed inSection 6.8.3.12. Inblock20ofFigure 4,thePiecewise Linear Analysis -Phase4(PLA4) module generates thestiffness matrix associated withthenonlinear elements. PLA4isverysimilar instructure to SMAI,andPLA4interfaces arediscussed inSection 6.8.3.13. Block21completes thePiecewise Linear Analysis rigidformat loop. Themodule hereadds thelinear stiffness matrix, which isconstant throughout theloop,tothenonlinear stiffness matrix, whichvaries eachtimethrough theloop. 6.8.1.3 Summary Summarizing Section 6.8.1, wehaveseenthat: I.NASTRAN embodies alumped element approach wherein thedistributed physical properties ofastructure arerepresented byamodelconsisting ofafinite number ofidealized sub- structures orelements thatareinterconnected atafinite number ofpoints. 2.Thereader, whoisanexperienced FORTRAN scientific programmer, whoknowsthebasics ofmatrix algebra butknowslittle ornothing aboutstructural analysis, mustdesign, code andcheckout subroutines thatwilladdthecapability ofanewelement totheNASTRAN element library. 3.Amajorcomponent ofNASTRAN isanExecutive System which controls thesequence of module executions according tooptions specified bytheuser. 4.Certain ofthemodules inNASTRAN areelement-dependent andhencemustbechanged. 5.Someelement-dependent modules havetobechanged substantially; otherelement-dependent modules havetobechanged onlyeither toupdate tables, whose definitions areisolated to BlockDataprograms, ortoskipelement-dependent datawhichwillnotbeusedincertain modules (e.g., ifdifferential stiffness andpiecewise linear analysis arenotdefined for theelement, nosubstantial changes needbemadetoDSMGIandthepiecewise linear analysis modules). Themodules thathavetobechanged substantially are: IFP,SMAI,SMA2,SDR2and 6.8-12 (811172)\nADDING ASTRUCTURAL ELEMENT @FP. Thosemodules which areinthesecondcategory are: XCSA, theGeometry Processor modules, PLTSET, SSGI, DSMGI, PLAI, PLA3andPLA4. 6.8.1.3.1 Modules Which MustbeChanged Thefollowing summary lists thenames ofthemodules thatmustbechanged, thesection ofthe Programmer’s Manual thatdescribes themodule, thepurpose ofthemodule, andthereason forthe change. I.NameandReference: Input FileProcessor (IFP); Section 4.5 Purpose: Toreadandanalyze theinformation oninput datacards that define themathematical model ofthestructure; andthento distribute these dataitems todatablocks consisting oflists ofsimilar quantities. Reason forChange: When adding anewelement, theusermustdefine aconnection card and,inmostcases, aproperty card. Hedefines structural elements onconnection cards byreferencing thegridpoints that define theboundary oftheelement, (e.g., seetheCR_Dcard in section 2.4oftheUser’s Manual). Inmostcases, theconnection cardrefers toaproperty card, onwhich thecross-sectional properties oftheelement aregiven (seethePRQDcardinsection 2.4oftheUser’s Manual). Inafewcases, theconnection card gives alltheinformation required togenerate thestructural matrices fortheelement. 2.NameandReference: Purpose: Reason forChange: 3.NameandReference:Executive Control Section Analysis (XCSA); Section 4.2 Toreadandanalyze theExecutive Control Deck; alsoitcontains tables forproblem restarts. Thenames ofthenewconnection andproperty cards must beadded totheCardNameTables, which areasubset oftherestart tables. Geometry Processor, consisting ofmodules GPI,GP2,GP3,andTAI; sections 4.21, 4.22, 4.25, and4.26, respectively. 6.8-13 (8/I/72)\nPurpose: Reason forChange: 4.NameandReference: Purpose: Reason forChange: 5.NameandReference: Purpose: Reason forChange: 6.NameandReference: Purpose: Reason forChange:MODIFICATIONS ANDADDITIONS TONASTRAN ForGPI,togenerate thecoordinate system transformation matrices; forGP2,toconvert external gridpointnumbers oncon- nection cardstointernal numbers; forGP3,toprocess static loads andtemperature data;forTAI,toprocess andcollect element connection data,element property data,element geometry data,and, ifapplicable, element temperature dataintotwodifferent data blocks forlaterprocessing. Onedatablock, theElement Connection andProperties Table(ECPT), isusedinmatrix assembler modules SMAI,SMA2andDSMGI; theother, theElement Summary Table (EST), is usedinloadgeneration andelement datarecovery modules SSGIand SDR2. Common blockGPTAImustbeupdated. Descriptive information inthis common blockcompletely describes element interfaces inthesefour modules. Structural Matrix Assembler -Phase1(SMAI); Section 4.27 Togenerate thestiffness matrix exclusive ofgeneral elements. Asubroutine, called an\"element routine\" which generates the element stiffness matrix forthenewelement mustbecoded. Structural Matrix Assembler -Phase2(SMA2); Section 4.28 Togenerate themassmatrix. Anelement routine whichgenerates theelement massmatrix for thenewelement mustbecoded. Static Solution Generator -Phase1(SSGI); Section 4.41 Tocompute thestatic loadsselected bytheuser Element-dependent codewhich generates loadvector contributions duetothermal orenforced deformation loadsmustbeaddedtoSSGI. 6.8-14 (8/I/72)\nADDINGASTRUCTURAL ELEMENT 7.Name andReferences: Purpose: Reason forChange:Stress Data Recovery -Phase 2(SDR2); Section 4.46 Torecover internal forces andstresses ineachelement using theESTdatablock. Twoelement routines which recover element stresses andforces forthenewelement must becoded. 8.NameandReference: Purpose: Reason forChange:Output FileProcessor (OFP); Section 4.70 Toformat andprintdatap,’epared foroutput byotherfunctional modules. Toincorporate formats fortheelement stresses andforces computed inSDR2. 9.NameandReference: Purpose: Reason forChange:Differential Stiffness Matrix Generator -Phase1(DSMGI); Section 4.49 Togenerate thedifferential stiffness matrix Iftheadded element istohave contributions tothedifferential stiffness matrix, anewelement routine must becoded. I0. Name andReference: Purpose:Piecewise Linear Analysis -Phase1(PLAI); Section 4.52 Topartition allelements into twoclasses, linear andnonlinear; andtobuild thedata blocks ESTNL andECPTNL, which aresimilar inform totheESTandECPT, andwhich areused inmodules PLA3 andPLA4 respectively. 6.8-15 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN Reason forChange: Ifthenewelement istobeadmissible totheclassofelements for which piecewise linear analysis isdefined, datathatwillbe appended totheelement’s ECPTand/or ESTentrytoformitsECPTNL and/or ESTNLentrymustbeinitialized. II.NameandReference: Purpose:Piecewise Linear Analysis -Phase3(PLA3); Section 4.54 Tocompute element stresses fornonlinear elements; toupdate the ESTNLdatablockwithaccumulated element stress information. Reason forChange: Tocodeanewelement routine whichwillcompute stresses andupdate accumulated stress information fortheelement. 12.NameandReference: Piecewise Linear Analysis -Phase4(PLA4); Section 4.55 Purpose: Togenerate thestiffness matrix fornonlinear elements; toupdate ECPTNL datablockwithaccumulated element stress information. Reason forChange: 6.8.2 General GuidelinesTocodeanewelement routine whichwillcompute stiffness matrix contributions andupdate accumulated stress information forthe element. Before proceeding withthedetails (given insection 6.8.3) ofcoding ineachofthemodules listed insection 6.8.1.3.1, thissection givesgeneral guidelines, someofwhichwillbeappli- cabletoallthemodules tobechanged, whilesomewillbeapplicable toonlyacertain classof modules. 6.8.2.1 F_RTRAN Rules Asindicated insection 6.2NASTRAN iswritten almost entirely inFORTRAN IV.Sincethe program operates onthreemachines (IBM360,UNIVAC 1108andCDC6600), theNASTRAN design teamchoseasubset ofF_RTRAN IVtobethe\"language\" forNASTRAN coding. Toplanfor thepossibility thatanelement addedlocally willbeincorporated intotheglobal NASTRAN system 6.8-16 (8/I/72)\nADDING ASTRUCTURAL ELEMENT Table 1gives theclassification ofthemodules listed insection 6.8.1.3.1. Table I.Classification ofModules tobeChanged A. Data Processing Modules NBB_ IFP XCSA GPTABD (I) PLAI 9FPFunction Processes theBulkData Deck Describes theCard Name Table forproblem restar:s Describes connection/property characteristics ofeach element used bymodules GPI, GP2, GP3, TAI, etc. Preprocessor forthePiecewise Linear Analysis rigid format Formats andprints answers B. Structural Modules Na_ SMAI SMA2 SSGI SDR2 DSMGI PLA3 PLA4Function Generates thestiffness matrix Generates themass matrix Generates load vectors Computes element stresses andforces Generates thedifferential stiffness matrix Computes element stresses fornonlinear elements Generates thestiffness matrix fornonlinear elements (1)GPTABD isaBlock Data subprogram 6.8-17 (8/1/72)"},"title":"Programmer's Manual P91"},"/docs/programmers/programmers_manual_092/":{"data":{"":"MODIFICATIONS ANDADDITIONSTONASTRAN (i.e.,becomeoperational onallNASTRANcomputers) withoutunnecessary conversion problems, itissuggestedthattheprogrammer followtheNASTRANF_RTRANrulesgiveninSection6.2forall modulechanges. 6.8.2.2Classification ofModules ThemodulesinNASTRANcanbeclassified inmanydifferentways.Forthepurposesofthis sectionweclassifythemodulesthatmustbechangedtoaddanewelementintotwocategories: dataprocessing modulesandstructural modules.Thedataprocessing modulesarethosewhose outputdatablocksareusedeitherasinputdatablockstootherdataprocessing modulesoras inputdatablockstothestructural modules.OFPisalsoclassified asadataprocessing module. Thestructural modulesarethosewhoseoutputdatablocksarethematricesandvectorsneeded forthesolutionofthestructural problem. 6.8.2.3DataProcessing Modules Wediscussthedataprocessing moduleswithrespecttothedatablocksoutputfromthem. Adatablockisasetofdata,amatrixoratable,occupyingafile,whichcanbethoughtofas alogicalFORTRANunit.Section2givesdetaileddescriptions oftheformatsofthedatablocks thatareusedinthetwelveNASTRANrigidformats.Theformatsareindependent ofrigidformat. Table2givesthedatablocksneededforelementgeneration alongwiththeiruseasinputtothe structural modules. 6.8.2.4Structural Modules Thestructural modulesperformtheactualfloating-point arithmetic operations togenerate matricesandloadvectorsandtorecoverelementstressandforcedata.Thestructural modules containelementroutinesthat:a)receivetheirinputsfromthemoduledriver;b)performmatrix operations togenerateelement-dependent matricesorvectors;andc)transfertheiroutputstothe driveroramoduleutilityroutinesotheycanbeincorporated intoadatablock. Thestructural modulesarefurtherclassified intotwoclasses:thematrixgeneration modules,consisting ofSMAI,SMA2,DSMGI,andPLA4;andtheloadvectorgeneration anddata recoverymodules,consisting ofSSGI,SDR2,andPLA3. 6.8-18(8/I/72)\nTable 2.ADDING ASTRUCTURAL ELEMENT DataBlocks Needed forElement Generation Data Block Name Output FromModule Input toModules MPT DIT EDT CSTM SIL GPTT ECPT GPCT EST ESTNL ECPTNLIFP IFP IFP GPI GPI GP3 TAI TAI TAI PLAI PLAISMAI,SMA2, SSGI, SDR2, DSMGI ,PLAI, PLA3, PLA4 SMAI, SMA2, SSGI, SDR2, DSMGI, PLAI, PLA3, PLA4 SSGI, SDR2, DSMGI SMAI,SMA2, SSGI, SDR2, DSMGI, PLAI PLA3, PLA4 SSGI, SDR2, DSMGI SSGI, SDR2, DSMGI SMAI,SMA2, DSMGI , PLAI SMAI,SMA2, DSMGI , PLAI, PLA4 SSGI, SDR2, PLAI PLA3 PLA4 6.B-19 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN Thematrix generation modules havethefollowing common characteristics: I.Theyusedouble precision arithmetic. 2.Theyusethefollowing datablocks: MPT,DIT,CSTMandGPCT. 3.TheyusetheECPTdatablock(oravariation, theECPTNL, inthecaseofPLA4) rather thantheESTdatablock, 4.Theyusetheutility routines GMMATD, INVERD, PREMAT andPRETRD. 5.Theygenerate thematrices sixcolumns (orrowssincethematrices aresymmetric) atatime. Theloadvector generation anddatarecovery modules havethefollowing common characteristics: I.Theyusesingle precision arithmetic. 2.Theyusethefollowing datablocks: MPT,DIT,EDT(except PLA3)CSTM,SlL,GPTT (except PLA3). 3.TheyusetheESTdatablock (oravariation, theESTNL, inthecaseofPLA3)rather thantheECPTdatablock. 4.Theyusetheutility routines GMMATS, INVERS, PREMAT andPRETRS. 6.8.2.4.1 TheESTversus theECPT TheTable Assembler module (TAI), thelastofthedataprocessing modules tobeexecuted, processes element connection data,element property data,element geometry dataand,ifapplicable, anelement temperature datum. TAImerges thesedataintotwodifferent sortsforefficiency in subsequent processing. TheElement Summary Table (EST)contains onelogical record foreach element type. Foreachelement (record) intheEST,connection, property, geometry, andtempera- turedataaregrouped. TheElement Connection andProp6rties Tableisessentially theESTina different sort. TheECPTcontains onelogical record foreachgridorscalar pointofthemodel. Eachlogical record contains ESTdataforeachelement connection tothegridorscalar point associated withtherecord. 6.8-20 (8/I/72)\nADDING ASTRUCTURAL ELEMENT Theloadvectorgeneration anddata recovery modules usetheEST,andthematrix generation modules usetheECPT. Section 6.8.2.4.2.1 morefully describes theuseoftheECPT. Table 3 shows theEST/ECPT dataforarodelement. Thelasttwocolumns giverespectively thedata block thatcontained thedataandthebulkdatacardtypewhere theuseroriginally placed thedata. 6.8.2.4.2 Matrix Generation Modules Thematrix [K]inEquation lofSection 6.8.1.I isaglobal orsystem stiffness matrix. It iscalled global because itcontains contributions fromallstructural elements ofthemathematical model. Ontheother hand, associated witheachelement isanelement stiffness matrix. The paragraphs below explain therelationship between element stiffness matrices andtheglobal stiffness matrix. Although theremarks aredirected towards stiffness matrices, theyapply equally aswell tomass anddifferential stiffness matrices. Thestiffness matrix [K]forastructural element consists ofasix-by-six matrix partition foreachcombination oftheconnected gridpoints. Eachsix-by-six partition relates thesix degrees-of-freedom oftwoconnecting gridpoints. Forexample, aR_Delement connects twogrid points “a\"and\"b”. Theelement stiffness matrix partitions are[Kaa], [Kab], [Kba]and[Kbb]. Atriangular element (e.g., TRMEM) connects three gridpoints, andtheelement stiffness matrix consists ofninesix-by-six partitions: [Kaa], [Kab], [Kac], [Kba], [Kbb], [Kbc], [Kca], [Kcb] and[Kcc]. Figure 5shows theposition ofthese partitions intheoverall element stiffness matrix fortriangular membrane androd. Figure 6shows thewayinwhich six-by-six element stiffness matrix partitions arerelated toaglobal stiffness matrix. Itshows astructure con- sisting offour gridpoints andtwoelements, atriangular membrane andarod. Thesix-by-six partition [K33]forthetriangular membrane element isadded tothesix-by-six partition [K33] fortherodelement. Thepartitions [Kl4], [K41], [K24]and[K42] arezerosince noelement connects either points land4orpoints 2and4.Intheprogram, anelement routine inamatrix generation module willpassasix-by-six partition toamodule utility routine through thecalling sequence. Theutility routine willaddthepartition totheproper cells inopencore. The module utility routine that performs thisaddition iscalled an\"insertion\" routine. 6.8-21 (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN Table3.EST/ECPT DataforaRodElement Word 1 2 3 4 5 6 7 8 9 I0 II 12 13 14 15 16 17Item Element ID Scalar Index forGrid Point A Scalar Index forGrid Point B Material ID Area (A) Polar Moment ofInertia (J) Torsional Stress Coefficient (c) Nonstructural Mass (MU) Coordinate System IDfor Grid Point A X-Coordinate ofGrid Point A Y-Coordinate ofGrid Point A Z-Coordinate ofGrid Point A Coordinate System IDforGrid X-Coordinate ofGrid Point B Y-Coordinate ofGrid Point B Z-Coordinate ofGrid Point B Element TemperatureType Integer Integer Integer Integer Real Real Real Real Integer Real Real Real Integer Real Real iReal RealData Block ECT ECT ECT EPT EPT EPT EPT EPT BGPDT BGPDT BGPDT BGPDT BGPDT BGPDT BGPDT BGPDT GPTTCardType CR_D CR_D CROD PRBD PROD PR_)D PRmD PROD GRID GRID GRID GRID GRID GRID GRID GRID TEMP 6.8-22 (8/I/72)\nADDING ASTRUCTURAL ELEMENT [K]18xl8:\u003eKaaii– ii II IKab IKac 1 I I I 1 I Kba IKbb IICoc I t t I I I KcaI IIKcb IKcc I I I I Triangular membrane element (3gridpoints) [K]12xl 2–\u003eKaa Kab Kba Kbb Rodelement (2gridpoints) Figure 5.Element stiffness matrix partitions foratriangular membrane andarod. 6.8-23 (8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN triangular membrancelement w v 1 2 1 2 3 4 Figure6.Asimple structure andtheassociated global stiffness matrix. 6.8-24 (8/I/72)\nADDING ASTRUCTURAL ELEMENT 6.8.2.4.2.1 Generation ofMatrices SixColumns ataTime Since astructural element willaffect terms intheglobal matrices onlyinrows andcolumns related toit_interconnected gridpoints, eachcolumn i,say, (orrowisince theglobal matrices aresymmetric) maybeformed using onlyelements connected tothegridpoint associated with column i.NASTRAN forms theglobal matrices sixcolumns atatime. Thedatablock thatenables thistobedone istheElement Connection andProperties Table (ECPT), output fromtheTable Assembler (TAI) module. Eachrecord oftheECPTcorresponds toagridpoint (orscalar point) ofthemodel, and,conversely every gridpoint (andscalar point) ofthemodel corresponds toa record oftheECPT. Thepoint towhich arecord oftheECPTcorresponds iscalled thepivot point oftherecord. Eachrecord contains theconnection, property, geometry, andtemperature data forallelements connected tothepivot point. Hence dataforanelement will appear n times intheECPT, where nisthenumber ofpoints defining theelement. Togenerate aparticular six-by-six element stiffness matrix partition [Kij], itisoften necessary togenerate theentire element stiffness matrix [K]. However, onlythose partitions [Kij], where iisthepivot point andj=l,2….. n(nbeing thenumber ofgridpoints defining theelement), areuseful forthecurrent ECPTrecord being processed, i.e., areuseful forthecurrent columns (orcolumn ifthepivot point isascalar point) being generated. The unused partitions arerecalculated andusedwhenj_iappears asapivot point inasubsequent ECPTrecord. Analternative procedure formatrix generation, which isnotused, would beto calculate alloftheelement matrices onceandstore themonanauxiliary storage unitforuse when needed. This alternative procedure islessefficient forlarge problems, where efficiency really counts, because therecalculation timeislessthanthetime required torecover element matrices fromtheauxiliary unit. Although thematrices generated bySMAI, SMA2, DSMGI andPLA4aresymmetric, NASTRAN generates complete columns andretains themforefficiency insucceeding matrix operations. This isnecessary because allmatrix operations areperformed onecolumn atatime (seesection 2of theTheoretical Manual). Moreover, theavailability ofsymmetric matrices byrowsorcolumns is advantageous insomeofthematrix operations. 6.8-25 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.8.2.4.2.2 Element Stiffness Matrix Partitions Although theactual equations fortheelement stiffness matrices aredifferent foreach element, theyfollow adefinite pattern. Thesix-by-six element stiffness matrix partition, [Kij], forthesixcolumns related topointjandthesixrowsrelated topointiisgivenby [Kij] =[Ti]T[Ke][Tj] ,(3) where [Ti]and[Tj]aretheglobal coordinate system orientation matrices associated withgrid points iandj,and[Ke]isanelement stiffness matrix inacoordinate system thatiselement- dependent. Thematrices [Ti]and[Tj]arecalculated fromdataintheCSTMdatablock, and[Ke] iscalculated from: a)connection, property, geometry, andtemperature datafromtheECPTdata block; andb)material property datafromtheMaterial Property Table (MPT)andtheDirect Input Table (DIT)datablocks. 6.8.2.5 Utility Routines Anumber ofutility routines areavailable toallthestructural modules. Thematrix generation modules usedouble precision versions oftheseroutines; theloadvector generation anddatarecovery modules usecorresponding single precision versions. These utility routines are: I.GMMATD -General Matrix Multiply andTranspose (Double Precision). Section 3.4.32 describes GMMATD. Aparticular restriction isthatallmatrices inthecalling sequence arestored byrows. 2.INVERD -In-core Matrix Inverse (Double Precision). Section 3.4.34 describes this standard matrix inversion routine. 3.PREMAT (withsecondary entrypointMAT)-Material Property Utility (Single Precision). PREMAT stores portions oftheMPTandDITdatablocks incore,andMATretrieves themwhen called byanelement routine. See_ection 3.4.36. 4.PRETRD (withsecondary entrypointTRANSD) -Utility forModules thatUsetheCSTM DataBlock (Double Precision). PRETRD readstheCSTMdatablock intocore,andelement routines callTRANSD togenerate thematrices [T]inEquation 3.SeeSection 3.4.37. 6.8-26 (8/I/72)\nADDING ASTRUCTURAL ELEMENT Single precision versions ofthese routines exist foruseinmodules SSGI, SDR2, andPLA3, allofwhich usesingle precision arithmetic. These single precision routines are: GMMATS, INVERS, andPRETRS (with secondary entry point TRANSS), andtheyaredocumented inSection 3.4.33, 3.4.35, and3.4.38 respectively. Theoutputs oftheMATroutine aresingle precision, andthe element routines ofthedouble precision matrix generation modules store themindouble precision cells orconvert themtodouble precision viatheDBLE function prior toarithmetic calculations. 6.8.3 Specific Checklists Thissubsection contains specific checklists forthemodules thatmustbechanged toadda newelement toNASTRAN. These checklists should beusedinconjunction withtheprogram source codeandtheNASTRAN documentation, particularly theModule Functional Descriptions inSection 4 andtheStructural Element Descriptions inSection 4.87. 6.8.3.1 Input FileProcessor (IFP) Anelement c_onnection (e.g., CNEWEL) bulkdatacardmust bedesigned andadded tothesetof admissible bulkdata cards. Anelement property card (e.g., PNEWEL) mayhavetobeadded. IFP processes bothofthese bulkdatacards. There arefourmajor references fortheIFPprogrammer: Section 2.4oftheUser’s Manual gives afunctional description ofeachbulkdatacard; Section 2.3.2 oftheProgrammer’s Manual describes theformat oftheoutput data blocks generated byIFP;Section 4.5oftheProgrammer’s Manual contains adescription oftheprocessing thatoccurs within IFP;andthesource listings contain implemented element-dependent code. 6.8.3.1.I CardDesign Before proceeding with theactual coding interfaces inIFP,itisnecessary todiscuss some aspects ofthedesigns ofthecards. Theelement mnemonic, minus the\"C\"for\"connection\", mustbenomorethansixcharacters, sotheentire mnemonic islessthanorequal toseven characters. Thisrestriction isnecessary because thecardmaybeusedasadouble-field card (seeSection 2.4oftheUser’s Manual). A 6.8-27 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN similar restriction ofcourse holdsfortheproperty card. Forconsistency andeaseofuse, follow theexisting convention thattheconnection andproperty cardshavethesamemnemonic, except fortheleading “C\"and\"P”. Ontheconnection card,field2mustbetheelement identification number (apositive integer), andfield3mustbe,ifaproperty cardisdefined, theproperty identification number (apositive integer). Thenextfields arereserved forthegridpointidentification numbers (positive integers) fortheconnecting gridpoints. Theorderofthegridpoints ontheconnection card defines thepositive orientation oftheelement. Otherconnection information follows. Ifno property cardisdefined, thematerial identification number (again apositive integer) follows. Before carddesign isinitiated, thereader should studyexisting connection cardsdocumented in Section 2.4oftheUser’s Manual. Field2oftheproperty cardmustbetheproperty identification number (apositive integer). Field3isthematerial identification number (apositive integer) whichwillbeused,during program execution, toreference amaterial identification number onaMAT1,MAT2orMAT3 material property card. Theremaining fields areusedfortheelement properties, whichforthe mostpartarerealnumbers. Required element properties mustbelisted first. Thisisdoneso thatifacontinuation card(s) isnecessary todefine alltheallowed properties, itmaybe possible todefine alltherequired element properties foraparticular application withonlythe firstcard(e.g., seethePBARcard). Additionally, thoseproperties thatmayleadtoill- conditioned element stiffness matrices ortooperating system interrupts (division byzero,for example) should berestricted. Typical restrictions mightbeareasandthicknesses mustbe positive. 6.8.3.1.2 Coding Changes IFPis,forthemainpart,table-driven. Entries incommon blocks control thecarddata processing. Theseentries areinitialized insevenBlockDatasubprograms, IFXiBD, i=I,2….. 7. Afterthereader updates theBlockDatasubprograms, heupdates acomputed-go-to statement whichperforms abranch oninternal cardidentification number (oneoftheentries inthetables). 6.8-28 (8/I/72)\nADDING ASTRUCTURAL ELEMENT Thestatement number towhichthebranch ismadeisacalltooneofthesubroutines IFSIP, IFS2P, IFS3PorIFS4P, wherein card-dependent codemustbeadded. Specific checklists follow. 6.8.3.1.2.1 BlockDataUpdates I.Thenames (mnemonics) oftheconnection andproperty cardsmustbeaddedto/IFPXI/, which isinitialized inBlockDatasubprogram IFXlBD. Theposition ofthenames inthis tabledefines theinternal cardidentification nun_Der. Currently, overtwo-hundred (200) cardsaredefined. Forthepurposes ofthisdiscussion, letusassume thatexactly two- hundred (200)cardsaredefined. Thenewconnection andproperty cardswillthenhaveinternal cardnumbers 201and202respectively. Thenamesmustbedefined asthefirstwordsofthe15 arrayinIFXIBD. 2./IFPX2/, initialized inBlock Datasubprogram IFX2BD, contains twowordspercardtype intheorderofascending internal cardidentification numbers. Thefirstwordofeachpair givestheGIN_output filenuraber, andthesecond givestheapproach acceptability flag (seeTables 1and2insection 4.5). Allconnection cardsareoutput ontheGERM2data block, which forIFPpurposes isdesignated filenumber 8;andproperty cardsareoutput on theEPTdatablock, whichforIFPpurposes isdesignated filenumber 2.Wemakethe assumption forourpresent purposes thattheelement isacceptable foranyproblem approach: force, displacement orDMAP. Hence, thefourwords tobeupdated are:8,O,2,O.These fourwordsshould beaddedtowords41through 44ofthearray13inIFX2BD. 3./IFPX3/, initialized inBlockDatasubprogram IFX3BD, contains twowords percardtype intheorderofascending internal cardidentification numbers. IFPusesthefirstword ofeachpairastheConical Shell Problem flag;thesecond wordcontains thenumber ofwords tobeoutput totheGIN_output file. Noelement connection orproperty cardsother than CC_NEAX andPC_NEAX areallowed foraConical ShellProblem; allsecond words ofthepairs in/IFPX3/ aresettozero. Hence, thefourwords tobeupdated are:-I,O,-I,O.These fourwordsshould beaddedtowords41through 44ofthearray13inIFX3BD. 4./IFPX4/, initialized inBlockDatasubprogram IFX4BD, contains twowords percardtype intheorderofascending internal cardidentification numbers. Thefirstwordofeachpair isthesmallest multiple of4greater thanorequaltothenumber ofrequired dataitemson thecard,andthesecond wo_dis4more thanthesmallest multiple of4greater thanorequal 6.8-29 (811172)\nMODIFICATIONS ANDADDITIONSTONASTRAN tothenumberofalloweddataitemsonthecard.Mathematically, letrbetherequired numberofdataitems;letabetheallowednumberofdataitems(r_a);letFbethevalue ofthefirstwordofthepair;andletGbethevalueofsecondwordofthepair.Then: F=4[---]andG=4+4_] where[x]isthegreatestinteger_x.Forexample,ontheCBARcard(seeSection2.4.2of theUser’sManual),thedataitemsonthecontinuation cardarenotrequiredsothatr=8. Clearly,a=16.Hence,F=8andG=20.Thefourwordsmustbeaddedtowords41through 44ofthearrayI3inIFX4BD. 5./IFPX5/, initialized inBlockDatasubprogram IFX5BD, contains twowordspercardtype intheorderofascending internal cardidentification numbers. Thefirstwordofeachpair isanindexinto/IFPX7/, andthesecond wordisthefield-2-uniqueness-check flag. For everybulkdatacard,eachfieldexcept thefirst(thecardmnemonic which isalways BCD)is defined aseither blank, integer, real,BCD,ordouble precision. Aninternal codehasbeen established (0=blank, 1=integer, 2=real,3=BCD,4=double precision, 5=anything ispermitted). Hence, astring ofintegers eachbetween 0and5describes acard’s format. Thelength ofthestring isthenumber offields allowed, including interior blankfields (e.g., fields 2,4and5onaDARERcard)butnotincluding trailing blankfields. This string iscontained in/IFPX7/, andthefirstwordofthepairin/IFPX5/ isanindextothe firstwordofthisstring. Before adding anewstring, thereader should search /IFPXT/ to seeifanexisting string corresponds tothestrings needed forthenew\"C\"and\"P\"cards. Wecanmakeacheckforduplicates infield2onboththe\"C\"and\"P\"cards. Wecandothis because: (a)noduplicates arepermitted inthesetofallelement identification numbers (similarly forthesetofproperty identification numbers associated withanelement type); (b)theBulkDataDeckissorted priortoIFPprocessing; and(c)IFP\"looks at\"twosuc- cessive cardsatatime. 6./IFPX6/, initialized inBlockDatasubprogram IFX6BD, contains twowordspercardtype intheorderofascending internal cardidentification numbers. IFPusesthetwowordsas header information inthelogical record associated withthecardtype(allthecardsofone typearewritten inonelogical record). Thefirstworddefines acard-type identification code,andthesecond worddefines abitposition ina96-bit “trailer.” Modules thatread, 6.8-30 (8/I/72)\nADDING ASTRUCTURAL ELEMENT viautility subroutine L_CATE, datablocks output byIFPusethese twoitems. Forthe connection card, alltheassigned card-type identification codes andtrailer bitpositions forGERM2, which arelisted inSection 2.3.2.2 mustbesearched andnewunique oneschosen. Theidentification codecanbeanypositive integer, butthetrailer bitposition mustbe between land96.Asimilar search andchoice mustbemade forthetwosimilar numbers for theproperty cardthatwill reside ontheEPTdata block, documented inSection 2.3.2.5. 7./IFPX7/,initialized inBlock Datasubprogram IFX7BD, contains format codestrings. Seeparagraph 5above fordetails. 6.8.3.1.2.2 Main Program andCard-Dependent CodeChanges TheBlock Datasubprograms having been updated, makethefollowing changes: I.Update, insubroutine IFP,thecomputed-go-to statement which branches oninternal cardidentification number. Thisstatement follows thecomment statement CCALLS SECONDARY R_UTINE T@EXAMINE EACHTYPE@FCARD 2.Addcard-dependent codetooneofthefourcard-dependent subroutines, IFSiP, i=l,2,3,4.IFSIP processes most oftheconnection andproperty cards. Therefore, for consistency, theprogrammer will probably choose it.Observe thatthesamecodeisusedfor cardtypes which aresimilar informat. TheBulkDataCardDescriptions insection 2ofthe User’s Manual ineffect laydown thecoding specifications. Observe that: a.Thereader must update oneofthethree computed-go-to statements atthe beginning ofIFSiP (note thatKistheinternal cardnumber, KX=K-lO0,and KY=K-200). b.Theinteger array Mdoesnotcontain thecardmnemonic, sothatM(1)contains field 2, M(2)contains field 3,etc. c.Nisthenumber ofwords tobewritten ontheoutput file. Itmust besetinthe card-dependent code. d.MisEQUIVALENCEd totherealarray RMwhich must beusedforfloating-point com- parisons oroperations. e.Ifthenewcard(s) hasaformat identical toanexisting one,thereader might choose tousetheexisting code. 6.8-31 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.8.3.2 Executive Control Section Analysis (XCSA) XCSAisresponsible forthetransmission totheremainder oftheprogram oftherestart tables associated withtherigidformat selected bytheuser. theCardNameTables, oftherestart tables mustbeupdated. restart tables arestored inasubroutine. Forrigidformat i theroutine nameisLDi.However, onlyasingle portion, Eachrigidformat anditsassociated (i=01,02….. 09,I0,II,12), Twoentries mustbeupdated inLDi,oneforthenew\"C\"cardandoneforthenew\"P\"card. Assume thenew\"C\"cardisCNEWEL andthenew\"P\"cardisPNEWEL. Thentheentries are: and4HCNEW, 4HELAA, 2 4HPNEW, 4HELAA, 3 whereAdenotes aBCDblank. Thenumbers 2and3refertobitpositions ofentries inamaster execution mask(seeSections 3.i+1.3.1, (i=1,2….. 12)oftheUser’s Manual). Theseupdates mustbemadeafterthelastentry intheDATAstatement forthearray INM.All12LDisubroutine programs mustbesoupdated. Thelastthreestatements ineachLDisubroutine are: CALLWRITE (NPTP, INM,m,I) RETURN END Change theargument mintheCALLWRITEstatement. TheCALLWRITE statement writes nwords oftheINMarray (ontotheNewProblem Tape, NPTP,withanend-of-record mark). Thenumber m, which varies withtheLDiroutine, mustbeincremented by6. 6.8.3.3 Geometry Processor andTable Assembler Modules (GPI,GP2,GP3,andTAI) Dataincommon block/GPTAI/ entirely controls processing ofelement datainGPI,GP2,GP3 andTAI.BlockDataprogram GPTABD initializes thesedata. Section 2.5.2.1 contains adescription of/GPTAI/. Whenadding anelement, thereader mustchange /GPTAI/ inthefollowing ways: 6.8-32 (8/I/72)\nADDINGASTRUCTURAL ELEMENT Words forTable HeaderChange Increase this word, thenumber ofentries, byI.Call this newnumber ofelement entries n. Words forNewElement Entry 1,2 4thru 24Increase this word, thepointer tothefirst word ofthelast element entry, bythenumber ofwords perentry, currently 24. Change Include thenewelement’s connection card mnemonic, e.g., CNEWEL. Assign anewelement-type identification number (this number should benforcon- sistency). Complete these items inaccordance with definitions inSection 2.5.2.1. NOTE WELL: Structural modules that read theECPT, EST, ECPTNL andESTNL data blocks will usethenewelement-type identification number, n.Hence, this number must bedetermined andcommunicated early inthedevelopment process toallinvolved. 6.8.3.4 Plot SetDefinition Processor (PLTSET) This section hasbeen deleted. 6.8.3.5 Structural Matrix Assembler -Phase 1(SMAI) Aprincipal interface inadding anewelement istochange SMAI,whichgenerates element stiffness matrix partitions andwhich, onoption, generates element structural damping matrix partitions. Thechanges areoftwokinds: module BlockDataandmodule driver changes; and theaddition ofanelement subroutine. 6.8-33 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN 648.3.5.1 BlockDataandModule Driver Changes Atleasttwochanges, andpossibly athird, mustbemadetoBlockDataprogram SMAIBD. thechanges pertain tovariables contained in/SMAICL/. Thesechanges are:All I.Update thearrayNWBRDS, whichdefines thenumber ofwords intheelement’s ECPTentry. Theposition inthearrayisdictated bytheinternal element-type identification number defined in/GPTAI/ (seeSection 6.8.3.3). 2.Update thearray10VRLY, whichdefines theoverlay segment inwhichthenewelement routine istoreside. (Anexplanation of10VRLY canbefound inSection 4.27.9.3, andthe SMAIoverlay structure isillustrated inSection 5). 3.Ifthenumber ofoverlay segments forelement routines mustbeincreased, thenthe variable NLINKS mustbeincremented byone. Thefollowing twochanges mustbemadetothemodule driver, subroutine SFtAIA: I.Update thecomputed-go-to statement atFORTRAN statement number 180which performs a branch oninternal element-type identification number. Forsomeexisting elements, thatdo notcontribute tothestiffness matrix, e.g.,C_NMI, insert atransfer toreadthenext element type. Mostelements docontribute tothestiffness matrix, andfortheseelements atransfer ismadetoanelement routine callstatement. 2.Insert acalltothenewelement stiffness matrix routine. Thiscallmustbefollowed byatransfer (G_T@)statement toreadthenextelement type. Thiscallstatement has,in general, noarguments. Theelement’s ECPTentryispassed totheelement routine via /SMAIET/. Thenameoftheelement routine should beginwith\"K\"followed bytheconnection cardmnemonic minus theinitial “C”,e.g.,KNEWEL. 6.8.3.5.2 Coding theKNEWEL Subroutine Whencoding thenewelement subroutine, follow thischecklist: I.Document theelement’s ECPTentryatthebeginning oftheroutine viacomments. 6.8-34 (811172)\nADDING ASTRUCTURAL ELEMENT 2. 3.Maintain theorderofFORTP_AN specification statements giveninSection 6.2. Restrict thecommon blockinterfaces tothefollowing: a./SMAIIO/. Onlyvariables IFKGGandIF4GGareused. b./SV_ICL/. Onlyvariables 1OPT4, K4GGSW andNPVTareused. c./SMAIET/. ThisblockisI00wordsinlength andisthemeansofcommunicating theelement datafromtheECPTdatablocktotheelement subroutines. Sincethe datain/SMAIET/ aremixed(realandinteger), anEQUIVALENCE mustbeused. d./MATIN/ andMATOUT/. Theseareinputandoutput datacommon blocks forthe material property utility subroutine MAT(seeSection 3.4.36). Theoutputs from MATin/MATBUT/ aresingle precision, andtheymustbestored indouble precision locations priortoarithmetic computations. e./SMAIDP/. Thiscommon blockcontains double precision variables which, for mostprograms, wouldbesubroutine localvariables. Itisusedsothatopencore (seeSection 1.5)forSMAIcanbeaslongaspossible. Theuseofthiscommon blockimplies thatelement subroutines arenotreentrant. 4.Makeatesttoinsure thatthescalar indexnumber (internal nut,per foragrid point) foroneoftheconnecting gridpoints matches thepivotpoint, NPVT. 5.Perform allarithmetic operations indouble precision. 6.Usetheutility routines GMMATD, TPJ_NSD, INVERD andMAT. 7.CallSMAIB(Section 4.27.8.3) to\"insert\" thesix-by-six matrix partitions. If1OPT4 isnonzero, compute thestructural damping matrix. Obtain six-by-six partition ofthe structural damping matrix bymultiplying asix-by-six stiffness matrix partition byascalar. viz.,GSUBE (ge)obtained fromMATvia/MATOUT/. SMAIBperforms theactual scalar multi- plication. Ifthestructural damping matrix iscomputed, setK4GGSW equaltoI.Usethe variables IFKGGandIF4GGinthecalling sequence forSMAIBtosignal theinsertion ofa stiffness matrix partition andastructural damping matrix partition respectively. 6.8-35 (811172)\nMODIFICATIONS ANDADDITIONS TONASTP_AN 6.8.3.6 Structural Matrix Assembler -Phase2(SMA2) SMA2generates themassmatrix andtheviscous damping matrix. Currently inNASTRAN, elements contribute tooneortheotherbutnotboth. However, fromthepointofviewofanelement- routine writer, theyarefunctionally thesame. Thestructure oftheSMA2module isverysimilar tomodule SMAI. Wecodedtwomodules because problem restarts canbehandled moreefficiently withseparate modules andbecause separate modules allowmoreefficient utilization ofopencore. LikeSMAI,theSMA2module changes areoftwokinds: module BlockDataandmodule driver changes; andtheaddition ofanelement subroutine. 6.8.3.6.1 BlockDataandModule Driver Changes Atleasttwochanges, andpossibly athird, mustbemadetoBlockDataprogram SMA2BD. The changes arethesameasthoseoutlined inthefirstparagraph ofsection 6.8.3.5.1, withthe exception thatthecommon blockthatcontains thethreevariables NW_RDS, 10VRLY andNLINKS is /SMA2CL/ instead of/SMAICL/. However, theoverlay structure fortheSMA2element routines is different fromthatofSFtAI,soI_VRLY andNLINKS, although functionally thesameasthevariables ofthesamenamesinSMAI,dohavedifferent values. Makethefollowing changes tothemodule driver, subroutine SMA2A: I.Update thecomputed-go-to statement atFORTRAN statement number 180whichperforms a branch oninternal element-type identification number. Someelements, e.g.,ELASI, contri- buteneither tothemassnorviscous damping matrix, inwhichcaseinsert atransfer toread thenextelement type. Mostelements docontribute toeither themassmatrix ortheviscous damping matrix, andfortheseelements insert acalltotheelement routine. Forelements forwhichbothlumped massandcoupled massroutines aredefined, testthevariable ICMBAR todetermine whichonetocall. IfICMBAR islessthanzero,callthelumped massroutine; otherwise callthecoupled massroutine. 2.Insert acalltothenewelement routine. Following thiscall,addaG_T_statement to transfer program control toreadthenextelement type. Anelement’s ECPTentry ispassed totheelement routine via/SMA2CL/. Beginthesubroutine nameformassmatrix routines with\"M\"followed bytheelement mnemonic, e.g.,MNEWEL. 6.8-36 (8/I/72)\nADDINGASTRUCTURAL ELEMENT 6.8.3.6.2 AddingtheNewElementRoutine TheruleswhichmustbefollowedincodinganelementroutineforSMA2aresimilartothose forcodingSMAIelementroutinesgiveninSection6.8.3.5.2. inthefollowingchecklist: I.SameasNo.1inSection6.8.3.5.2. 2.SameasNo.2inSection6.8.3.5.2. 3.Restrictthecommonblockinterfaces tothefollowing: a./SMA21_/. Onlyvariables IFMGGandIFBGGareused. b.References tothissection aremade 4. 5. 6. 7. 8./SMA2CL/.Only variables BGGIND andNPVT areused. c./SMA2ET/.This lO0word block performs thesame function as/SMAIET/inSMAI. d./MATIN/and/MAT_UT/.Seecomment inSection 6.8.3.5.2. e./SMA2DP/.Thecomments about /SMAIDP/inSection 6.8.3.5.2 apply here also. Same asNo.4inSection 6.8.3.5.2. Same asNo.5inSection 6.8.3.5.2. Same asNo.6inSection 6.8.3.5.2. Call SMA2B toperform thesix-by-six partition insertions (see Section 4.28.8.3). Iftheelement routine contributes partitions totheviscous damping matrix, setBGGIND tolatthebeginning oftheroutine. 9.“Lift” asmuch code aspossible from theelement stiffness routine KNEWEL ofmodule SMAI. 6.8.3.7 Static Solution Generator -Phase l(SSGI) Subroutine EDTL (which hasasecondary entry point, TEMPL) processes theESTdata block one element atatime tocompute temperature andenforced deformation loads. When anelement isadded toNASTP_AN, update EDTL whether ornottemperature orenforced deformation loads aredefined for the,_ewelement. Iftheelement hasthermal orenforced deformation loading, thereader must code anelement routine. 6.8-37 (8/I/72)"},"title":"Programmer's Manual P92"},"/docs/programmers/programmers_manual_093/":{"data":{"":"MODIFICATIONS ANDADDITIONSTONASTRAN 6.8.3.7.1 EDTLChanges Makethefollowingchangestosubroutine EDL: I.AddanentrytothelocalarrayNECPT.NECPT(1)isthenumberofwordsintheEST entryfortheelementwhoseinternalelement-type identification numberisI(recallIis setinGPTABD,seeSection6.8.3.3). 2.Changethecomputed-go-to elementtypetoreflectthenewelement.Ifthenewelement doesnothavethermalordeformation loadsdefined,insertatransfer(toFORTRANstatement number610)toskiptheentireESTrecord;ifitdoes,changethecomputed-go-to statement sothatitpointstoelement-dependent codeinEDTL. 3.Addelement-dependent codetoEDTLwhichwill: a.ReadtheESTentryinto/TRIMEX/. b.Look-up thetemperature ateach grid point associated with theelement. This look-up isaccomplished viaacall tosubroutine FGPTT (see Section 4.41.II.27). c.Call theelement routine, passing thetemperatures atthegrid points andthe beginning oftheload vector array (atC_RE(1)) through thecalling sequence. 6.8.3.7.2 Coding theElement Routine When coding theelement routine follow this checklist: I.Same asNo.linSection 6.8.3.5.2. 2.Same asNo.2inSection 6.8.3.5.2. 3.Restrict thecommon block interfaces tothefollowing: a./TRIMEX/.This block islO0words inlength andcontains theelement’s ESTentry. b./MATIN/and/MAT_UT/.These areused asinput andoutput blocks forsubroutine MAT. 4.Perform allarithmetic operations insingle precision. 5.Usesubroutine MATtofetch material properties; MPYL andMPYLT aremodule utilities available forin-core matrix multiplication (subroutine GMMATS mayalternatively beused); BASGLB andGLBBAS aremodule utilities that compute coordinate system transformation 6.8-38 (8/I/72)\nADDING ASTRUCTURAL ELEMENT matrices (TRANSS mayalternatively beused). SeeSection 4.41.11 forinformation onMPYL, MPYLT, BASGLB andGLBAS. 6.Thescalar indexnumbers (internal degree-of-freedom numbers) intheelement’s EST entryaredirect pointers intotheloadvector wheretheloading contributions should be added, i.e.,theelement routine doesitsown\"insertion\". 7.“Lift” asmuchcodeaspossible fromtheelement stiffness routine KNEWEL ofmodule SMAI. 6.8.3.8 Stress DataRecovery -Phase2(SDR2) TheSDR2module isdivided intofivestages. Twoofthestages, stage IIIandstageV,deal withrecovery ofstress andforcedataforelements. Inthefollowing paragraphs, wewillcall thesetwostages phase1andphase2,respectively. Phase1computes andsavesonascratch fileforphase2processing element stress matrices alongwithelement properties, which aredependent upontheelement. Phase2usestheoutputs ofphase 1inconjunction withdisplacement vectors {ui}tocompute finalstress andforcedata intheelements. Makechanges toamodule BlockDataprogram andthedriver routines forphase1andphase2; alsocodetwoelement routines, Sxxxxl andSxxxx2, where “xxxx” arefourletters oftheelement’s mnemonic, e.g.,xxxxmightbeNEWL. 6.8.3.8.1 Driver Routine Changes Insubroutine SDR2B, thephase1driver, update thecomputed-go-to statement thatperforms abranch onelement type,andaddacalltoSxxxxl. Insubroutine SDR2E, thephase2driver, update thecomputed-go-to statement, andaddacall toSxxxx2. Tooutput complex stresses andforces, increase thedimension oftheCBMPLX array, andaddapointer string forstresses andforces ifonedoesnotcurrently exist. Ifcomplex stresses andforces arenotpermitted, setthetwoCBMPLX pointers inBlockDatasubprogram containing /GPTAI/ toO. 6.8-39 (8/1/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN 6.8.3.8.2 TheElementRoutines Thefollowingsetofrulesapplytobothelementroutines: I.SameasNo.1inSection6.8.3.5.2. 2.SameasNo.2inSection6.8.3.5.2. 3.Performallarithmetic operations insingleprecision. 4.UsetheutilityroutinesTRANSSandGMMATS. 6.8.3.8.2.1 ThePhase1ElementRoutineSxxxxl Thefollowingtwoitemsapplytothephase1elementroutine: I.Restrictthecommonblockinterfaces tothefollowing: a./SDR2X5/. TheESTentry iscontained in/SDR2X5/. Attheconclusion ofSxxxxl, /SDR2X5/ contains theoutputs oftheroutine: stress matrices andmiscellaneous element properties. Output thescalar indexnumbers oftheESTentryforuseinphase2. b./SDR2X6/. Useforscratch storage. c./MATIN/ and/MAT_UT/. UsedbyMAT. 2.MATisavailable toSxxxxl, butnottoSxxxx2. 6.8.3.8.2.2 ThePhase2Element Routine Sxxxx2 Thefollowing remarks applytoSxxxx2: I.Thecommon block interfaces are: a./SDR2XX/. Thisblockdefines opencorewhere thephase2driver stores the displacement vector. b./SDR2X4/. Threewords areused,the36th,38th,and39th.Word36isanindexinto /SDR2XX/. Itpoints tothefirstwordofthedisplacement vector. Word38isan element loading temperature, andword39isanelement deformation. Ifthermal and deformation loading werenotdefined inSSGI,donotusetheselatter twowords. 6.8-40 (8/I/72)\nADDING ASTRUCTURAL ELEMENT c./SDR2X7/.This block contains thecomputed element stresses. Theelement identifi- cation number, thefirst wordoftheESTentry, must always bethefirst wordof /SDR2X7/. d./SDR2X8/.Computed element forces arestored here. Theelement identification number mustbethefirst word. 2.Thescalar index numbers areindexes tothose components ofthedisplacement vector needed forstress andforce computations. 6.8.3.9 Output FileProcessor (OFP) OFPprints, with headings, element stress and/or force output. Eachnewelement needs a unique heading andentries todescribe theoutput format desired. Thisheading isinaddition to thestandard title, subtitle, andlabel thatwillbeprinted frominformation intheCaseControl Deck. Pageejection iselement-independent andautomatic, with headings reprinted oneach page ofoutput until alldatarecords havebeenprinted. 6.8.3.9.1 OFPDesign OFPis,likeIFP,essentially table-driven. This technique allows OFPtoavoid many lengthy format statements. InOFPstandard format statements contain theheadings, andtheformats for theitems data record arebuilt fromtables. Before modifying OFP,theprogrammer should befamiliar withthedocumentation references forOFP, particularly those describing element stress andforce output. Section 4.70andthe source listings forthesubroutines described inthatsection arewhere thegeneral descriptions forOFPcanbefound. Sections 2.3.51 and2.3.52 describe thespecific makeup forelement stress andforce data blocks. OFPwillexpect anynewelement typeidentification record tohavea similar format astheother element types (seethedescription ofrecord linSection 2.3.28.15). _FPalsoassumes thatthenumber, order, andtypeofthenewelement’s datarecord(s) havebeen determined (seedescription forrecord 2ofSection 2.3.28.15). Normally, SDR2hassetthese data records for_FPdepending ontherequired output. Thecoding changes forBFPwilldepend ona)theheadings desired andb)thenumber, order, andtypeofitems inthedata record. 6.8-41 (BII172)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.8.3.9.2 Adding theHeadings Newelements mayrequire manydifferent headings, suchasforces fortherealcase,forces forthecomplex case,stresses fortherealcase,andstresses forthecomplex case. Andthen allofthesecasescanbeinSORTIorSORTIIformat. Changes havetobemadeforeachcase. Eachheading in_FPconsists offivelinesofoutput. Eachlineisprinted byaseparate writestatement, soifanytwolinesarethesame,thenthesamestatement canbeused. Thus, whentheanalyst andtheprogrammer aredeciding onwording andspacing oftheheadings, they should laythemoutinaconsistent manner. Theymaybeabletouseexisting formats forsome lines. Thebasicheading pointer iscontained inthedoubly subscripted Barray(seeSection 4.70.9). Theactual linepointers areintheCarray, andformat statements insubroutines _FPI and_FPIAcontain theoutput headings. Thepointer totheBarray issetinword2ofeachinput identification record (SDR2hassetthiswordcorrectly forthenewelement). Thereader then computes CP_INT, whereCPOINT isanindexintotheCarray. Todothis,word2ofrecord 1and theelement-type identification number (seeSection 6.8.3.3) areneeded foreachdesired typeof output. CPOINT indexes from0to1440areinBlockDataprogram _FP2BD, CPOINT indexes from 1441to2880areinBlockDataprogram OFP3BD, andCPOINT indexfrom2881to4320areinBlock Dataprogram _FP4BD. ThevalueofC(CP_INT) isapointer intotheDarray, whichwilldefine theformat string forthedatarecord. Thevalues ofthenextfiveentries intheCarray, (C(CPOINT +I)toC(CPOINT +5))areusedasnumbers inacomputed-go-to statement inOFPI. Each ofthesefivenumbers refers toawritestatement, whichprints onelineoftheheading. OFPIis solargethatthecomputed-go-to statement hasbeencontinued in_FPIA. Thus,newformat state- mentsandwrite statements should beaddedto_FPIA. Asnewwrite statements areadded, the computed-go-to nearthebeginning ofOFPIAandthetestforthemaximum number ofwrite statements mustbeupdated. 6.8-42 (8/I/72)\nADDINGASTRUCTURAL ELEMENT 6.8.3.9.3 AddingtheDataRecordCode C(CPOINT)isequaltoDPOINTwhichisanindextothenextavailablespaceintheDarray. TheDarrayiscontainedintheBlockDataprogramOFPIBD.ThevalueofD(DPOINT)isapacked four-digit number.Therighttwodigitsgivethenumberofoutputlinesthedatarecordwill produce,andthelefttwodigitsgivethenumberofdatarecordsusedperline.Ifthelefttwo digitsarenull,thenonlyonedatarecordisusedperline. ValuesforentriesD(DPOINT+I)toaD(DPOINT+N),whosevalueisO,definepointersto theEarrayorESINGLarray.PositivevaluespointtotheEarraybytheformula(5*D(DPOINT +I) -5),whereIvariesfrom1toN.NegativevaluesintheDarrayareusedaspointersintothe ESINGLarraybytheformulaID(DPOINT+I)I.BoththeEarrayandtheESINGLarrayarecontained intheBlockDataprogramOFP5BD.Bothofthesearrayscontainpiecesofaformatstatement, andtheprogrammer stringsthepiecestogethertospaceandplacethedataitemscorrectlyunder theheading.Theprogrammer canusethepiecesthatarelistedoraddmere.Theonlyruleisto excludetheendingcommafromanypieceofaformatstatement. Ingeneral,allthenecessary formatpiecestodescribealineofadatarecordareincludedintheEandESlNGLarrays. 6.8.3.10Differential StiffnessMatrixGenerator-Phase1(DSMGI) Theelementinterfaces withDSMGIareintwophases.Phase1readstheECPTdatablockand, foreachelement,appendsdisplacement vectorcomponents oftheassociated gridpoints,anaverage elementloadingtemperature, andanelementdeformation. Phase1writesthisappendedECPTentry ontoascratchfilewhichhasthesamegeneralformatastheECPT.Phase2processesthescratch fileinafashionsimilartoECPTprocessing inSMAI,sothedifferential stiffnesselementroutines resideinthephase2portionofthemodule. 6.8.3.10.1 Phase1Changes Whenappendingthecomponents ofthedisplacement vectortotheECPTelen_ntentryinsub- routineDSI,eitherappendthethreetranslational components ofdisplacement ateachgridpoint orappendallsixcomponents ofdisplacement ateachgridpoint.Thetestforthisdetermination ismadeimmediately afterFORTRANstatementnumber300. Ifanelementtypeisnotinthedifferential stiffnessset(DSARY(1)=O), phase1doesnot writeitsECPTentryonthescratchfile. 6.8-43 (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.8.3.10.2 Phase2Changes Change thecomputed-go-to statement insubroutine DSIAthatperforms abranch onelement- typeidentification number, andinsert acalltothenewelement routine. Namethenewelement routine DNEWEL. Thecomputed-go-to statement inDSIAneednotbechanged iftheelement isnot inthedifferential stiffness set. 6.8.3.10.3 Coding tileDNEWEL Subroutine Whencoding thenewelement subroutine, follow thischecklist: I.Document theelement’s appended ECPTentry atthebeginning oftheroutine viacomments. 2.SameasNo.2inSection 6.8.3.5.2. 3.Restrict thecommon blockinterfaces inDNEWEL tothefollowing: a./DSIAAA/. Thefirstwordisthepivotpoint. b./DSIAET/. Theappended ECPTentry fromthescratch fileisstored here. See Section 6.8.3.5.2, paragraph 3(c). c./DSIADP/. Thisistheelement “scratch” orlocalvariable common block. See Section 6.8.3.5.2, paragraph 3(e). d./MATIN/ and/MAT_UT/. Inputandoutput blocks forMAT. 4.SameasNo.4inSection 6.8.3.5.2. 5.“SameasNo.5inSection 6.8.3.5.2. 6.SameasNo.6inSection 6.8.3.5.2. 7.Usesubroutine DSIBtoperform theinsertions (seeSection 4.49.8.3). Insert onlythose six-by-six partitions corresponding tothepivotpoint. 8.“Lift” asmuchcodeaspossible forDNEWEL fromKNEWEL inSMAI. 6.8.3.11 Piecewise Linear Analysis -Phasel(PLAI) Makethefollowing changes tomodule PLAIiftheaddedelement istobeadmissible tothe setofelements forwhich Piecewise Linear Analysis isdefined. 6.8-44 (811172)\nADDINGASTRUCTURAL ELEMENT I.Changethecomputed-go-to statement(onelement-type identification number),which reflectswhetheranelementisinthesetofelementsforwhichPiecewiseLinearAnalysis isdefined. 2.Addelement-dependent codewhichinitializes stressinformation appendedtotheECPT andESTdatablocks.ThecommentedcodeinPLAIalongwiththedescriptions inSections 2.3.34.3and2.3.34.4fortheESTNLandECPTNLdatablocksrespectively serveasmodels fortheadditionofthiscode. 3.Updatethelocalarray,PLAARY.PLAARY(1)=1iftheIthelementtypeisanelement forwhichPiecewiseLinearAnalysisisdefined,andPLAARY(1)=0otherwise. PLAIusestheSFL_Imoduleenvironment sotheSMAIelementroutinesmaybecalledtomake contributions tothelinearstiffnessmatrix.HenceallofthecommonblocksofSMAImustbe availabletoPLAI.Alsothemajorityofthesubroutines, includingBlockDataprogramSFtAIBD, ofmoduleSNLAImustbeavailabletoPLAI.Theonlysubroutines ofSMAInotneededareSMAI,SMAIA andDETCK(seeFigure13inSection5.2). 6.8.3.12PiecewiseLinearAnalysis-Phase3(PLA3) Theelementinterfaces withPLA3areintwophases.PhaseI,accomplished insubroutine PLA31,readstheESTNLdatablockand,foreachelement,appendsdisplacement vectorcomponents corresponding tothegridpointsoftheelements. Theoutputofphase1isascratchfileof appendedESTNLdatatobeprocessedinphase2.Subroutine PLA32,thephase2driver,readsthe scratchfileandcallselementroutineswhichcomputestressesandwhichupdatetheaccumulated stressdataintheESTNLentry. 6.8.3.12.1 PLA31Changes Makethefollowingchangestosubroutine PLA31: I.UpdatethelocalarraysESTWDS,whichdefinesthenumberofwordstobereadfromthe ESTNLdatablockforeachelement,andNGPTS,whichdefinesthenumberofgridpointsfor eachelement.Botharraysareorderedbytheinternalelement-type identification number definedin/GPTABD/ (seeSection 6.8.3.3). 6.8-45 (8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN 2.Whenappendingthecomponents ofthedisplacement vectortotheESTNLelemententry, eitherappendthethreetranslational components ofdisplacement ateachgridpointorappend allsixcomponents ofdisplacement ateachgridpoint.Thedefaultvalueisthree.Ifsix components pergridpointaredesired,updatethelogicalIFstatementbetweenstatement numbers20and30. 6.8.3.12.2 PLA32Changes Makethefollowingchangestosubroutine PLA32: I.UpdatethearrayESTWDS,asdefinedinSection6.8.3.12.1; thearrayNSTWDS,which definesthenumberofwordsperelementwrittenonthe_NLESdatablock;andthearray NWDSP2,whichdefinesthenumberofwordsperentryinthescratchfile.Thesearraysare orderedbyelement-type identification number. 2.Changethecomputed-go-to statementwhichperformsabranchonelement-type identifica- tionnumber,andinsertacalltothenewelementroutine,PSNEWL. 6.8.3.12.3 CodingthePSNEWLSubroutine WhencodingPSNEWL,followthischecklist: I.Documenttheelement’sappendedESTNLentryatthebeginningoftheroutineviacomments. 2.SameasNo.2inSection6.8.3.5.2. 3.Thecommonblockinterfaces are: a./PLA32E/. Contains theelement’s appended ESTNLentry. b./PLA32S/. Scratch blockforvariables localtoPLA3element routines. c./PLA32C/. Contains twowordsGAMMAandGAMMAS, corresponding toyandy*defined inEquations 2and3ofSection 4.54. d./SOUT/. Contains thecomputed element stresses intheorderexpected byOFP.The firstwordof/SOUT/ mustbetheelement identification number, which isalways thefirst wordintheelement’s appended ESTNLentry. e./MATIN/ and/MATOUT/. Inputandoutput blocks forsubroutine MAT. 6.8-46 (8/I/72)\nADDINGASTRUCTURAL ELEMENT 4.Performallarithmetic operations insingleprecision. 5.UseutilityroutinesMAT,GMMATS,TRANSS,andINVERS. 6.Aftercompletion ofthecomputations andpriortoreturningtoPLA32,updatetheelement routine,inthecellsassignedtothemin/PLA32E/, thenewupdated stress information. These updated dataareusedthenexttimePLA3isexecuted. 7.SomeofthecodeinPSNEWEL mightbetakenfromsubroutine KNEWEL ofSMAIandsubroutines SNEWLI andSNEWL2 ofSDR2. 6.8.3.13 Piecewise Linear Analysis -Phase4(PLA4) PLA4hastwophases. PhaseI,incorporated insubroutine PLA41, readstheECPTNL datablock, and,foreachelement, appends displacement vector components oftheassociated gridpoints. The appended element ECPTNL dataarewritten onascratch fileinaformat thatisthesameas_t oftheECPTNL. Thephase2driver, PLA42, processes thescratch fileinawaysimilar toECPT processing inSMAI,calling element routines whichinturngenerate stiffness matrix partitions of thenonlinear stiffness matrix. 6.8.3.13.1 Phase 1Changes Make thefollowing changes tosubroutine PLA41. I.Update thelocal arrays NWBRDS andNGPTS. NW_RDS(1) isthenumber ofwords read from theECPTNL data block fortheIthelement type, andNGPTS(I) isthenumber ofgrid points associated with theIthelement type. 2.When appending thecomponents ofthedisplacement vector totheECPTNL element entry, either thethree translation components ofdisplacement ateach grid point orallsix components ofdisplacement ateach grid point canbeappended. Thedefault value isthree. Ifsixaretobeappended, then expand thelogical IFstatement: IF(ELTYPE. EQ.34)_WDS =6 located between statement numbers 20and30. 6.8-47 (811172)\nMODIFICATIONS ANDADDITIONSTONASTRAN 6.8.3.13.2 Phase2Changes MakethefollowingchangestoBlockDatasubprogram PLA4BDandsubroutine PLA42. I.Changethe/PLA42C/ variables I_VRLY, NW_RDS, andpossibly NLINKS inPLA4BD. The explanations inSection 6.8.3.5.1 ofthevariables ofthesamenamesin/SMAICL/ apply hereaswell. 2.InPLA42, update thelocalarrayNWDSP2, whichdefines thenumber ofwordsperelement entry tobewritten ontheECPTNL output datablock. 3.Change thecomputed-go-to statement inPLA42which performs abranch onelement-type identification number, andinsert acalltothenewelement routine, PKNEWL, following this computed-go-to statement. 6.8.3.13.3 Coding thePKNEWL Subroutine Whencoding PKNEWL, follow thischecklist: I.Document theelement’s appended ECPTNL entry atthebeginning oftheroutine viacomments. 2.SameasNo.2inSection 6.8.3.5.2. 3.PKNEWL common blockinterfaces are: a./PLA42C/. Thefirstword, NPVT,isthepivotpoint. Thenexttwcwords arethe sameasGAMMAandGAMMAS in/PLA32C/ (seeSection 6.8.3.12.2, paragraph 3(c)). b./PLA42E/. Contains theelement’s appended ECPTNL entry. c./PLA42D/. Scratch blockforvariables localtoPLA4element routines. d./MATIN/ and/MAT_UT. Inputandoutput blocks forMAT. 4.SameasNo.4inSection 6.8.3.5.2. 5.SameasNo.5inSection 6.8.3.5.2. 6.SameasNo.6inSection 6.8.3.5.2. 7.Subroutine PLA4Bperforms theinsertions (seeSection 4.55.8.3). Insert onlythose six-by-six partitions corresponding tothepivotpoint. 6.8-48 (8/I/72)\nADDINGASTRUCTURAL ELEMENT 8.Aftercompletion ofthecomputations andpriortoreturningtoPLA42,update,inthe cellsassignedtothemin/PLA42E/, thenewupdated stress information. Theseupdated data areusedthenexttimePLA4isexecuted. 9.SomeofthecodeinPKNEWL mightbetakenfromsubroutine KNEWEL ofSMAIandsubroutines SNEWLI andSNEWL2 ofSDR2. 6.8.4 Updating theNASTRAN Manuals Concurrent withcoding andcheckout,update theNASTRAN manuals. Updating willapplyto thethreeprincipal manuals, Theoretical, User’s andProgrammer’s. Ifdemonstration problems are formally devised, updates totheReport ontheDemonstration ProLlems maybedesired. However, onlytheinterfaces withthethreeprincipal manuals willbediscussed here. TheNASTRAN manuals havebeendesigned toaccommodate future additions andmodifications. Eachmajorsection (e.g., Section 6oftheProgran_ner’s Manual) stands alonewithitsownpage numbers, equation numbers, figure nun_)ers andtablenumbers, sothatnewsections canbeadded without significant disruption. Inthefollowing paragraphs, eachmajorsection ofeachofthe threemanuals willbeexamined todetermine whether ornotanupdate willbenecessary. 6.8.4.1 TheTheoretical Manual Themajor sections intheNASTP_AN Theoretical Manual arenumbered upto16.However, some ofthesections havebeenreserved forfuture development. Although thestructural analyst and nottheprogrammer willprobably update theTheoretical Manual, thefollowing paragraphs, preceded bymajorsection numbers, identify material thatmightbeupdated inthatsection. 2.Noupdates. Thematrix operations discussed inthissection arethesystem matrix operations routines andnotthein-core matrix subroutines usedbyelement routines. 3.OnlySection 3.8.4, Element Algorithms forPiecewise Linear Analysis, isanupdate candidate. Thenewelement mayormaynot(themembrane elements currently incorporated inNASTRAN arenotadmissible topiecewise linear analysis) beanalyzed inthepiecewise linear analysis rigidformat. 5.Thissection istheprimary candidate forupdating. Forexisting elements, thedis- cussion inthissection fallsshortofacomplete presentation ofalltheequations imple- mented intheprogram. Section 4.87oftheProgrammer’s Manual contains thecomplete 6.8-49 (8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN equationsforeachelement.Notethatneitherdifferential stiffnessnorpiecewiselinear analysiselement-dependent materialispresentedinthissection;theformerisdiscussed inSection7,andthelatterinSection3.8. 7.Ifthenewelementcontributes tothedifferential stiffnessmatrix,anewmajor subsection mustbewritten. 14.Thenewelementmayinvolvespecialmodelingtechniques. Ifthisisthecaseandthe analystdecidesitisworthyofnote,anewmajorsubsection mightbeaddedtoSection14 ratherthanincorporating thespecialtechniqueinSection3.8,5,or7. 15.Significant erroranalysesperformedduringprogramdevelopment mightbeincorporated here. 6.8.4.2TheUser’sManual TheNASTRANUser’sManualcontainssevenmajorsections. Thefollowingparagraphs, preceded bymajorsectionnumbers,identifies materialthatmightbeupdatedinthatsection. I.ForeachelementinNASTRAN,Section1.3givesthemnemonicsfortheconnection and (ifdefined)thepropertycard;definesthebasicstructural andinertiaproperties of theelement;describestheelementcoordinate system;liststhestressesandforcesin theelement;andgivesdiagramsfortheelementcoordinate systemanddirectionofelement forcesand/orstresses. Updatethissection. 2.Section2.4.2documentseachNASTRANbulkdatacardwithaone-pagedescription. The connection cardand,ifdefined,thepropertycardmustbedocumented. Thedesignofthese cardsshouldbeoneoftheinitialtasksthattheanalystandprogrammer perform. 3.Section3has13subsections. Section3.1isanintroduction, andSections3.2through 3.13documenteachoftheNASTRANrigidformats.Section3.1doesnothavetobeupdated. Subsections 3.i.Iand3.i.2(i=2,3…..13)donothavetobeupdated.Updatesubsections 3.i.3(i=2,3…..13)todocumentthe\"BitPositionsfortheCardNameRestartTable” fortheconnection andpropertybulkdatacardsassociated withthenewelement.Ifthe newelementhasbothlumpedandcoupledmassmatrixoptionsinmoduleSMA2,thenupdatethe explanation fortheC_UPMASSparameterinSections3.i.4(i=2,3,7,9,I0)and3.j.5 (j=4,5,6,8,II,12,13). 6.8-50(8/I/72)\nADDINGASTRUCTURAL ELE_IEIIT 4.Ifthenewelementcanbeplotted,thenupdatethelistofelementtypesthatcanbe specifiedonaSETdefinition cardintheStructural Plotterrequestpackettoreflectthe newelement’sname.ThislistisinSection4.2.2.1.Additionally, updatethelistof labelsforelementtypesthatareforelement-type identification. ThislistisinSection 4.2.2.3.Updatethetablesofelement-stress itemcodesandelement-force itemcodeswhich arekeystowhatcanbeplottedwiththeXYPLBTmodule.Thesetablesareattheendof Section4.3.3. 6.Iftheprogramer andanalystfindthatageneralusermessagerelatedtoelements,such asmessagenun_)er2026inSection6.2.3,doesnotfulfilltheirneeds,theymaychooseto addanewmessagetosubroutine MSGWRTorUSRMSG. beupdated. 7.AssumethenewelementhasthemnemonicNEWEL. NASTRANDictionary: CNEWEL IB NEWEL IC PNEWEL IBIfthisisthecase,Section6.2.3must Thenaddthefollowingentriestothe Newelementconnection definition card RequestsstructureplotforallNEWELelements Newelementpropertydefinition card 6.8.4.3TheProgrammer’s Manual TheNASTRANProgrammer’s Manualcontainssevenmajorsections. Thefollowingparagraphs, precededbymajorsectionnunfoers,identifymaterialthatmightbeupdatedinthatsection. 2.MakethefollowingchangestoSection2: a.Addthedataonthenewelementconnection card,CNEWEL,tothedatablock description forGERM2,Section2.3.2.2. b.Addthedataonthenewelementpropertycard,PNEWEL,tothedatablock description forECT,Section2.3.2.5. c.Updatethedatablockdescription forEST,Section2.3.8.1. d.Ifthenewelementisdefinedforpiecewiselinearanalysis,updatethedata blockdescription forESTNL,Section2.3.34.3. 6.8-51(8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN e.Ifthenewelementisdefinedforpiecewiselinearanalysis,updatethedatablock description forECPTNL,Section2.3.34.4. f.Updatetheelementstressandforceoutputdatadescriptions inSections2.3.51and 2.3.52respectively. 3.Ifthematerialpropertyoptionscurrentlyimplemented insubroutine PREMAT_Section 3.4.36,areinadequate forthenewelementandPREMATisconsequently modified,thenupdate thissection. 4.Section4containsnumeroussubsections thatmustbeupdated,someextensively. They are: a.UpdatetheindexinSection4.1.3toincludeallthenewentrypointsforelement routinescodedforSMAI,SMA2,SSGI,SDR2,DSMGI,PLA3andPLA4. b.UpdateTables1and2attheendofSection4.5. c.Addasubroutine description forthenewstiffnessmatrixelementroutine, e.g., KNEWEL_ toSection 4.27.8. d.Addasubroutine description forthenewmassmatrix element routine, e.g.,MNEWEL, toSection 4.28.8. (Ofcourse addtwodescriptions ifbothalumped massmatrix anda coupled massmatrix routine areadded.) e.Forsomeelements (e.g., atriangular ring), SSGIincorporates thermal loading in anelement subroutine; forothers, entrypointTEMPL ofsubroutine EDTLisused. Ifa newelement routine iscoded, addasubroutine description toSection 4.41.11. f.Addtwosubroutine descriptions forthenewphase1andphase2stress datarecovery element routines, e.g.,SNEWLI andSNEWL2, toSection 4.46.8. g.Formodule DSMGI (Section 4.49): (I)Update thefirstparagraph ofSection 4.49.7. (2)Ifnecessary, update indented paragraph 6inSection 4.49.7. (3)Addasubroutine description forthenewdifferential stiffness matrix element routine, e.g., DNEWEL, toSection 4.49.8. 6.8-52 (8/1/72)\n5°ADDING ASTRUCTURAL ELEMENT h.Formodule PLA3(Section 4.54): (I)Ifnecessary, update thesecond paragraph ofSection 4.54.7. (2)Addasubroutine description forthenewpiecewise linear analysis stress datarecovery element routine, e.g.,PSNEWEL, toSection 4.54.8. j.Formodule PLA4(Section 4.55): (I)Ifnecessary, update thesecond paragraph ofSection 4.55.7. (2)Addadescription forthenewnonlinear stiffness matrix generation element routine, e.g., PKNEWL, toSection 4.55.8. k.InSection 4.87,Structural Element Descriptions: (I)Update Table I. (2)Addanewsubsection, 4.87.15, todescribe theequations usedintheelement routines forallstructural modules. Thissection’s introduction stated thatit wasassumed thatastructural analyst haswritten mathematical specifications for thestructural element. Theanalyst should write thesespecifications inaformat similar tothoseinSection 4.87,thatis,listtheECPT/EST inputdata; list coordinate system dataobtainable fromtheCSTMdatablock; define thematerial property assumptions anddata;listtheequations common toallelement routines; listtheequations specific tostiffness andmassmatrix generation, thermal andenforced deformation loading, stress andforcedatarecovery, differential stiffness matrix generation, andstress datarecovery andstiffness matrix generation forpiecewise linear analysis. Update theoverlay diagrams inSection 5.2asfollows: a.Change link3toreflect thenewelement routines inSMAIandSFtA2. b.Change link5ifanewsubroutine wasaddedtoSSGI. c.Change link13toreflect thenewelement routines addedtoSDR2,DSMGI, PLA3 andPLA4. 6.8-53 (8/I/72)\nMODIFICATIONS ANDADDITIONSTONASTRAN 6.8.5Dumn_ UserElements (DUMIthruDUM9) Acapability exists within NASTRAN which permits ausertoenterhisownelement subroutines forpurposes ofgenerating stiffness andmassmatrix contributions, thermal loadcontributions and forcomputation ofvarious stress, force, etc.outputs. Through theuseofADUMi, CDUMi, and PDUMibulkdatacards(i=1to9),hemayentergeometry, property andconnection dataasisdone foranyotherNASTRAH structural element. Thedifference being thatthisinputdataisofa dynamic nature basedontheparameters heenters viatheADUMicard. Thusauserwhomayhaveastructural element formulation notfoundwithin NASTRAN may through thedummyelement capability implement itintoNASTRAN withalotlessdifficulty than would bethecaseofadding anentirely newelement. Theprocedure forutilizing adummyelement is: I.Create anelement stiffness routine KDUMimodeled after anexisting routine (e.g., subroutine KROD)whichwillcompute andoutput viainsertion routines one6x6matrix for eachconnecting gridpointwithrespect totheconnected pivotpoint. (Eachconnected gridpointbecomes thepivotpointindependently, seeSection 1.8). 2.Ifdesired, generate asimilar routine MDUMitocompute theMASSmatrix basedonan existing routine (e.g., subroutine MR_D). 3.Ifdesired, generate aroutine DUMisimilar toanexisting routine (e.g., R_D)to compute athermal loadorelement deformation load. Atpresent, theusermustupdate sub- routine EDTLbyadding acalltoSSGETD; thismaychange theparameters inthecalltoDUMi. 4.Ifstress and/or forceoutputs aredesired, generate tworoutines SDUMil and SDUMi2 similar toSR_DI andSROD2tocompute thestress and/or forceoutputs. 5.Foranyoftheaboveroutines prepared (KDUMi, MDUMi, DUMi,SDUMil, andSDUMi2), a “Linkedit” runwillbenecessary toloadtheseintotheNASTRAN executable. Inthedesign oftheseelement routines the\"userprogrammer\" needs tounderstand the format oftheESTtable(seeSections 2.3.8.1 and2.3.8.3). Notealsocommon blocktable/GPTAI/. (SeeSection 2.5.2). Notealsotheabovesections (seeSection 6.8.1 through 6.8.12). 6.8-54 (8/I/72)\nADDINGASTRUCTURAL ELEMENT AllmodulecodeforthebasicdummyelementshasbeenprovidedinmodulesSMAI,SMA2,DSI, SSGI,andSDR2. AselementroutinesdonotuseNASTRANexecutivefunctions, theuserprogrammer should,before attempting alinkeditofhiselementroutinesintotheNASTRANexecutable, dothefollowing: I.Preparea\"loadandgo\"environment which,e.g.,simulatesSMAI.Thisenvironment would containadriverroutinewhichwouldsetupinterfacecommonblockstotheelementroutine KDUMi.KDUMiwouldcalladummySMAIBinsertionroutinewhichmightonlyprintthematrices. 2.Preparesimilarenvironments forthethermalandstressdatarecoveryfunctions. Whentheuser-programmer feelshehaselementroutineswhicharemodeledcorrectlywith respecttoNASTRAN,alinkeditmightbeperformed. Linkeditsareingeneralnon-trivial systems- programmer’s taskswithlargeoverlayprograms,andthusallworkpossibleshouldbeaccomplished beforethisisattempted. DummyoutputformatsandheadingsareprovidedwithinNASTRAN.Theseencompassbothreal andcomplex(seeSection2.3.52). Refertosubroutine descriptions inSection3forthefollowingsubroutines: I.GMFLATD 2.GMFtATS 3.INVERD 4.INVERS 5.PREMAT 6.PRETRS 6.8-55(8/I/72)\nPRINTED OUTPUT 6.9 PRINTED OUTPUT The_,]ority oftheNASTRAN datascheduled foroutput areinput totheOutput FileProcessor (FP) module. Thismodule performs theactual formatting andoutputting ofthedata. Toimplement additional output capability intheOFP,thefollowing ground rules should be observed indesignin adatablock intended tobeinput to_FPforoutput tothesystem printer orpunch unit. I.Thedatablock’s name, forconsistency, should begin with an\"0\". 2.There should beoneormore repeating record pairs, where therecord pairisofthe following form: WORD MODE DESCRIPTION i Available forData 2 I MajorID 3 I MinorID 4 I Subcase ID 5 Available forData 9 lO I Number ofwords perentry II 5O 51Available forData BCD 146 BCD32Words Title 32Words Subtitle 32Words LabelIc’entification Record (Anodd- numbered Record) Repeating dataentries ofthelength specified inthe preceding record. Thisrecord maybenullbutshould exist.DataRecord(Aneven- numbered Record) 6.9-I\nMODIFICATIONS ANDADDITIONS TONASTRAN 3.TheMajorIDisformulated depending onthedatatypeasfollows. a.Foranewdatatypeaninteger should beselected whichequals I,where Iisavalue onegreater thanthecurrent number ofaccepted datatypeswithin _FP. b.TheMajorIDthendepends onthedataclassification I=S_RTI-Real I000+I=S_RTI-Complex Major ID 2000+I:S_RT2-Real 3000+I:SORT2-Complex 4.TheMinorIDisoptional todistinguish subclasses oftheMajor ID. Withthedatablockformat outlined above, theNASTRAN systems programmer mayimplement the newdataformats within thecurrent _FPprocedure bymodeling fromanycurrent datatypenow handled by_FP.Thecurrent _FPhasdynamic formatting fortheoutputting ofentries ofthe DataRecord. However, iftheprogrammer isnotfamiliar withthefivelevelpointer procedure usedforthedynamic formatting, itisrecommended thatheimplement logictoexplicitly output theDataRecord. _FPwill,without modification, output newdatablocks viathetableprintroutine, TABPT. 6.9-2"},"title":"Programmer's Manual P93"},"/docs/programmers/programmers_manual_094/":{"data":{"":"PLOTTER OUTPUT 6.10 PLOI-FER OUTPUT Plotted output in_STRAN isrestricted tothree medules: I)theStructural Plotter (PL_T - seesection 4.24); 2)theXYPlotter (XYPL_T -seesection 4.69); and3)theMatrix Plotter (SEEF_T -seesection 4.74). Eachofthese modules usestheNASTRAN plotter software package of utility routines, eachofwhich isindividually documented insection 3.4. 6.10.1 Change stothePlotter Software Inorder toaddanewplotter totheNASTRAN plotter software, thefollowing mustbedone: l)uptofour (4)newsubroutines (AJ(ISi, LINEi, TYPEi, WPLTi) mustbewritten, where “i\"isthe internal index ofthenewplotter (seesection 3.1forthecurrent values ofi);and,2)changes and/or additions mustbemadetoten(lO)existing subroutines (AXIS, FNDPLT, LINE, PL_TBD, SELCAM, SKPFRM, SYMB@L, TIPE, TYPFLT, TYPINT). Initially, itshould bedecided which ofthefourpossible newsubroutines willbeneeded for thenewplotter. Forthemostpart, three willbetheminimum: LINEi, TYPEi, WPLTi. Ifthenew plotter hasnotyping capability, anexisting subroutine, DRWCHR, will beusedinplace ofTYPEi. Itisstrongly recommended thatthecalling sequences ofanynewsubroutines bethesameasthose oftheir existing counterparts. Noneofthefourpossible newsubroutines should present much difficulty totheprogrammer ifheuses their existing counterparts asmodels. Subroutine AXISi needonlybewritten ifthefollowing twoconditions aretrueonthenew plotter: l)lines must bedrawn generally asaseries ofshort lines; and2)there doesexist a special plotter instruction permitting thedrawing ofahorizontalorvertical linewithout repre- senting itasaseries ofshort lines. Bothofthese conditions doexist forplotter 3andmay exist forplotter lO.Ifeither oneofthese twoconditions isnottrueforthenewplotter, then LINEshould beused inplace ofAXISi. Subroutine LINEi isalways required. Ifthenewplotter must beputintothelinedrawing modebefore anylines canbedrawn, LINEI, LINE2, LINE9 andLINEIO should beusedasmodels. If thenewplotter isanincremental plotter, LINE4 should beusedasthemodel. Otherwise, use LINE3 asthemodel. Inaddition, LINEI, LINE2 andLINE3 represent lines asseries ofshort lines; LINE9 andLINEIO useonlyoneplotcommand todrawalineofanylength. 6.10-I (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN Subroutine TYPEishould bewritten ifthereisatyping capability onthenewplotter. If thenewplotter mustbeputintothetyping modebefore anylinescanbedrawn, TYPE1, TYPE2, TYPE9andTYPEIO should beusedasmodels. Otherwise, useTYPE3asthemodel. Allcharacters should bevertically oriented andminiature insize. Eachofthemodelsubroutines hasthree important symbols initialized inaDATAstatement: LSTCHR, NCHRandCHAR. LSTCHR istheindex ofthelastlegitimate character intheCHAR94 table (seesection 2.5)available onthenew plotter. NCHRisthenumber ofcharacters forwhichthecharacter codeonthenewplotter differs fromthecorresponding character codeintheCHAR94 t_ble. CHARisalistofNCHRpairsof indices intotheCHAR94 table: CHAR1,jistheindexvalueofthecharacter codewhichwillpro- ducethewrongtypedcharacter ontheplotter, andCHAR2,jistheindexvalueofthecharacter codewhichwillproduce thecorrect typedcharacter. Onefurther note: someplotters haveboth a\"typewriter” and\"single-character typing\" mode. Theexisting TYPEisubroutines useonlythe “single-character typing” mode. Itisstrongly recommended thatthispolicy becontinued forall newplotters. Subroutine _IPLTiisalmost entirely dependent uponthestructure oftheplotcommands for thenewplotter. Theexisting WPLTisubroutines willhelptheprogrammer onlyinsofar astheover- alllogicisconcerned. Oncetheplotcommand isconstructed, itiswritten usingsubroutine SWRITE. Someplotters alsorequire special information atthebeginning and/or endofeach record ontheplottape. Ifthisisthecasewiththenewplotter, WPLT3, WPLT4, WPLT9andWPLTIO contain thelogicnecessary torecognize thebeginning and/or endofaplottaperecord. In addition, alltheexisting WPLTisubroutines, except forWPLT4, generate fixed-length plotcommands. Thisresults inasimpler subroutine andalsoadapts easier tothecomputer-independent char- acteristic ofNASTRAN. Itistherefore recommended thatthispolicy becontinued, ifatall possible, forallnewplotters. Oftheten(I0)subroutines towhich changes and/or additions mustbemade,changes insix ofthetensubroutines aredependent upona)theinternal indexofthenewplotter; andb)which ofthefourpossible newsubroutines havebeenwritten. Thesesix(6)subroutines are:AXIS, LINE,SY_IBOL, TIPE,TYPFLT andTYPINT. Ineachthereareoneortwocomputed-go-to statements basedupontheinternal indexofthenewplotter whichwillhavetobeenlarged. ThencoY’res- ponding statements calling thenewsubroutines (AXlSi, LINEi, orTYPEi) willhavetobeadded. IfanAXISisubroutine wasnotwritten forthenewplotter, subroutine LINEshould becalled 6.10-2 (12-I-69)\nPLOTTEROUTPUT fromsubroutine A](ISinsteadofcallingAXISi.IfaTYPEisubroutine wasnotwrittenforthenew plotter,thensubroutine DRWCHRshouldbecalledfromsubroutines SYI,IBOL,TIPE,TYPFLTandTYPINT insteadofcallingTYPEi. Subroutine FNDPLTrelatestheexternalplotterandmodelnameswithitsinternalplotterand modelindices.Thereisatablewithinthissubroutine whichreflectsthisrelationship. The programmer needonlyappendtheexternalnameofthenewplotterand/oranadditional modelname toanexistingplotter,togetherwiththecorresponding internalplotterandmodelindices.In addition,thevalueofthevariableNPLTRSwillhavetobeincremented byonewheneveranew externalplotternameisadded. Subroutine PLOTBDisaBlockDatasubprogram. BoththePLTDAIandSYMBLStables(see section2.5)mustbeexpandedtoreflecttheadditionofthenewplotter.Anew20-wordsection mustbeappendedtothePLTDATtablereflecting thephysicalcharacteristics ofthenewplotter. Thevaluesinthisnewsectionmustcorrespond onaone-to-one basiswiththevaluesdefinedfor theexistingplotters. Inaddition,thebuffersizedefinedforthenewplottermustbea multipleof60characters ifcomputerindependency istobepreserved. Anew20-wordsectionmust beappendedtotheSYi4BLSt_ble.Thefirst\"NSYI_I\"valuesinthisnewsectionareindicesinto theCHAR94orCHRDRWtables(seesection2.5).Theseindicesrepresentthespecialsymbolsused bytheSYMBOLsubroutine forthenewplotter. Anewsectionmustbeaddedtosubroutine SELCAM.Thefunctionofthenewsectionvaries dependingupontherequirements ofthenewplotter.Ifthenewplotterisatableplotter,a plotcommandshouldbegeneratedtostoptheplottersothattheoperatorcanprepareforthe nextplot.Ifthenewplotterisamicrofilmplotter,therequestedcameramustbeselected. Someplottersrequireaspecial\"header\"recordatthebeginningofeachplot.Ifso,itmust begeneratedinthissubroutine. Again,thefunctionofthissubroutine variesdependingupon therequirements ofthenewplotter,andasaresult,theaddedsectionisverylikelytobe entirelyplotter-dependent. Inaddition,therearetwocomputed-go-to statements (basedupon theinternalindexofthenewplotter)whichmustbeenlargedtoreflectthenewplotter. Thelastsubroutine towhichchangesand/oradditionsmustbemadeisSKPFRM.Itsfunction istoskipavariablenumberofframesonamicrofilmplotter,ortoskipoverthecurrentplot onadrumplotter.Ifthenewplotterisneitheramicrofilmnoradrumplotter,nonewsection 6.10-3(12-I-69)\nMODIFICATIONS ANDADDITIONSTONASTRAN isneeded.Ineithercase,thereisacomputed-go-to statement(basedupontheinternalindexof thenewplotter)whichmustbeenlargedtoreflectthenewplotter.Ifthenewplotterisa microfilmplotter,thecommandsnecessarytoskiptheframe(s)mustbeaddedtothesubroutine (e.g.,plotters3and9).Ifthenewplotterisadrumplotter,thenthecommandsnecessaryto skipoverthecurrentplotmustbeaddedtothesubroutine (e.g.,plotter4).Aswithsubroutine SELCAM,anyaddedsectionisverylikelygoingtobeplotter-dependent. Finally,animportantwordofcautiontotheprogrammer mustbestated:ifthecomputerand installation independence oftheNASTRANplottersoftwarepackageistobemaintained, noexisting software provided forhiscomputer orinstallation oughttobeusedtoaccomplish thetaskof adding anewplotter totheNASTRAN plotter software package. Thisrestriction prevents the direct usageofon-line plotters. NASTRAN doesprovide however fortheindirect usageofon-line plotters asdescribed insection 6.10.6. 6.10.2 Changes tothePb_TModule_ theStructural Plotter Inorder toaddanewplotter totheNASTRAN structural plotter module, PL_T,onlyone subroutine needbealtered: PLT_PR. Thissubroutine generates messages totheplotter operator. Probably theonlymessage whichshould beadded isonetoidentify theplotter forwhichthe structural plotsarebeinggenerated. There isarepertoire ofothermessages inthissubroutine whichshould begeneral enough toapplytoanyplotter type. Ifadditional messages areneeded, theprogrammer mustremember thattheplotter operator isnotnormally a\"programmer type\". Hencehewillbemoreapttorespond tomessages written inhislanguage thantomessages written inprogramming terminology. Inaddition, thereareseveral computed-go-to statements basedupon theinternal indexofthenewplotter. Thesewillhavetobeenlarged toreflect thenewplotter. 6.10.3 Changes totheXYPL_T Module, theXYPlotter Nochanges arerequired within theXYPLOT module whenadding anewplotter. However, aminor change isrequired insubroutine IFPIXY oftheIFPmodule ifandonlyifthenewplotter usesthe NASTRAN BCDplottape,PLTI. Ifthisisthecase,thenewinternal plotter number which isgen- erated bysubroutine FNDPLT oftheNASTRAN plotter software should beaddedtotheF_RTRAN logical IFstatement directly afterthefollowing comment insubroutine IFPIXY: 6.10-4 (3/I/70)\nPLOTTER OUTPUT IFM_REBCDPL_TTERS AREADDED EXPAND THEF_LLOWING TEST 6.10.4 Changes totheSEEMATModule_ theMatrixPlotter Nochanges totheSEENtAT module arenecessary whenanewplotter istobeadded since the plotter andmodel names arecommunicated tothemodule through theDMAPcalling sequence (see section 4.74). 6.10-5 (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.10.5 UseoftheNASTRAN Plotter Software inaNewModule Thereexists inNASTRAN aself-contained computer-independent environment forcreating plots onalargenumber ofplotters. Currently threemodules usethisenvironment: I)PLOT,the Structural Plotter; 2)XYPLOT, theXYPlotter; and3)SEEf,_T, theMatrix Plotter. Inorderfor another module togenerate plotsinthissameenvironment, itisessential thatthemodule writer understand thisenvironment. TheNASTRAN plotting environment canbeunderstood mosteasily ifviewed asbeingcomposed offiveparts: I)parameter definitions; 2)parameter initialization; 3)plotinitiation; 4)plot creation; and5)plottermination. ThereisoneDMAPparameter (passed through blankcommon) andtwonamedcommon blocks inthe parameter definition section oftheNASTRAN plotting environment. TheDMAPparameter isPLTNUM, theplotnumber ofthelastplotcreated, andisbothaninputandoutput integer value. Thetwo namedcommon blocks, withtheirsymbolic contents, areasfollows: COMMON/XXPARM/PBFS IZ,MEDIUM,BFRAMS,SKIP (4),XPAPSZ,YPAPSZ where: PBFSIZ MEDIUM=sizeoftheplottapebuffer (integer) =medium output request (integer, default value =2) 1=filmonly =2=paperonly 3=both BFRAMS =number ofblankframes (onfilmonly)between plots (integer, default value=I) XPAPSZ :widthofthepaper (inches, fortable plotters only)tobeused(real, default value=8.5inches) YPAPSZ =height ofthepaper (inches, fortableplotters only) tobeused(real, default value=II.0inches) C_MM_N/PLTDAT/I_DEL_PL_TER,REG_0N(4),AXMAX,AYMAX,EDGE,YEDGE_SK_P(),PCNT_N,NTCHX,CNT_HY SKIP(4),PLTYPE,PLTAPE,SKIP(2),FCNTIN 6.10-6 (12-I-69)\nPLOTTER OUTPUT where: M_DEL =model index oftheplotter tobeused(integer, default value =i) PL_TER =plotter index oftheplotter tobeused (integer, default value =3-the SC4020microfilm plotter) REGION =theregion oftheplotting surface (Xmin, Ymin’ Xmax’ Ymax)inwhich aplot isbeing created (real) AXMAX =width oftheplotting surface lessanyborders (real) AYI_X =height oftheplotting surface lessanyborders (real) XEDGE =width oftheborder ontheleftandright sideoftheplotting surface (real) YEDGE =height oftheborder onthetopandbottom oftheplotting surface (real) PCNTIN =number ofcounts (plotter units) perinchofpaper (real) CNTCHX =thewidth (includes horizontal spacing between characters) ofeachprinted ordrawn character (real) CNTCHY =theheight (includes vertical spacing between characters) ofeachprinted ordrawn character (real) PLTYPE =plotter type (integer) +l=microfilm plotter =+2=table plotter +3=drumplotter }\u003c0ifnotyping capability exists ontkeplotter. “\u003e0iftyping capability doesexist ontheplotter. PLTAPE =GINOfile nameoftheplottape(BCD) _PLTI foranevenparity plottape PLT2foranoddparity plottape FCNTIN =number ofcounts (plotter units) perinchoffilm (real, FCNTIN =PCNTIN if theplotter isnotamicrofilm plotter) Theusage andinitialization ofeachofthevariables listed above aredetailed inthefollowing descriptions ofthefour remaining sections oftheNASTRAN plotting environment (seesection 2.5 foramore detailed description of/XXPARM/and/PLTDAT/). 6.10-7(12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN Theparameter initialization section oftheNASTRAN plotting environment involves initializing allthevariables listed aboveforthe/XXPARM/ and/PLTDAT/ namedcommon blocks, withtheexcep- tionofMEDIUM andBFRAMS. First, theplotter andmodelindices (PL_TER, M_DEL) oftheplotter tobe_sedmustbesetbyusingsubroutine FNDPLT: CALLFNDPLT (PLTTER,M_DELN,PLTID,MODID) where: PLTTER : M_DELN = PLTID(2) =plotter indexoftheplotter specified inPLTIDandM_DID (integer, output) model indexoftheplotter specified inPLTIDandMODID (integer, output) 8character name(4characters perword, left-adjusted, withallremaining characters blank) oftheplotter ofinterest (BCD,input). M_DID(2) =model identification oftheplotter ofinterest. M_DIDimayeither be numeric orBCD,depending uponthewayinwhich various models areidentified fortheplotter ofinterest. IfM_DIDiisBCD,itmustbe4characters, left-adjusted, withallremaining characters blank. (Integer and/or BCD, inputandoutput). Seesection 3.1foralistofcurrent plotter andmodelnames. Subroutine FNDPLT willattempt tomatch PLTIDwithaninternal listofplotters available in theNASTRAN plotting environment. Ifnomatch isfound, FNDPLT setsbothPLTTER andM_DELN =0 andimmediately returns. Otherwise, FNDPLT willattempt tomatchM_DIDwithaninternal listof models fortheplotter ofinterest. Ifnomatchisfound, adefault modelfortheplotter is stored inM_DID. Thenthecorresponding plotter andmodelindices arestored inPLTTER andM_DELN. Generally, PLTIDandM_DIDwillbeprovided bytheNASTRAN user. Itissuggested thatthemodule writer setM_DID(1) andFI_DID(2) equaltozerobefore inserting theusersupplied values for M@DID. Thisprovides theuserwiththecapability ofdefaulting toastandard default model for hisspecified plotter bysupplying novalues forM_DID orbysupplying avalueonlyforM@DID(1). Having called subroutine FNDPLT todetermine theplotter andmodel indices, themodule writer should thensetPL_TER andM_DELequaltoPLTTER andM_DELN, respectively: PL_TER =PLTTER MODEL =MODELN 6.10-8 (12-I-69)\nPLOTTER OUTPUT Next, theremainder ofthe/PLTDAT/named common block must beinitialized. Subroutine PLTSET mustbeusedtodothis. PLTSET setsallthevariables in/PLTDAT/,except _,_DEL and PL_TER, tovalues dependent upon theplotter index (PLCTER). Inaddition, iftheplotter isa table plotter, AXMAX andAYI,X arealsofunctions ofthepaper size(XPAPSZ, YPAPSZ). Forthis reason, ifthecurrent ordefault paper sizeistobechanged, itmust bedonebefore calling PLTSET. Finally REGIgN isinitialized inPLTSET asfollows: REGI(/N(1) :O. REGI@N(2) =O. REGION(3) :AXMAX REGICN(4) =AYMAX andtheplottapebuffer size (PBFSIZ) inthe/XXPARM/named common block isinitialized. This completes theparameter initialization section oftheNASTRAN plotting environment. Thenextstepisplotinitiation. Once thisstepisinitiated, noneoftheparameters ineither the/XXPA/or/PLTDAT/named common blocks maybechanged, except forMEDIUM, BFRAMS and REGICN, without repeating theparameter initialization step. Intheplotinitiation step, themodule writer mustfirst ensure thattheplottape(PLTAPE) isindeed aPhysicaltape. Thiscanbedonebyusing logical function TAPBIT. Ifthefunction result is.FALSE., theplottapeisnotaphysical tapeandhence noplotting should beattempted bythemodule: IF(.NOT.TAPBIT(PLTAPE)) “nophysical tapesetup” Having verified theexistence ofaphysical plottape, anarray ofPBFSIZ words mustbeprovided fortheNASTRAN plotting software asfollows: CALLSOPEN ($n,PLTAPE,BUFFER,PBFSIZ) where: BUFFER=F_RTRAN statement number towhich S_PEN istoreturn ifPLTAPE hasnotbeen correctly initialized. =anarray ofPBFSIZ fullwords. 6.10-9 (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN Next, theplotter mustbestarted. However, before doingthis,theplotnumber (PLTNUM) should beincremented byone.Inaddition, thisisthemodu]e writer’s lastopportunity tochange themedium request ([IEDIUI4) andthenumber ofblankframes between plots(BFRAMS). [ostart the plotter, themodule writer mustcallsubroutine STPL_T: CALl..STPL_T (PLTNUM) Subroutine STPL_T willselect theproper medium (ifappropriate!, generate anidentification plot (ifnecessary), andinsert thespecified number ofblank frames (onfilmonly). Having initiated aplot, themodule writer mustthencreate theplot. Inthep!otcreation section oftheNASFRAN plotting environment, thereareseven (7)subroutines provided forvarious tasks: AXIS,LINE,PRINT, SYHBOL, TIPE,TYPFLT, TYPINT. Anexplanation ofthecalling sequence andpurpose ofeachofthesesubroutines exists insection 3.[tisessential thatthemodule writer familiarize himself withthecalling sequences andpurposes ofthesesubroutines. In addition, itisjustasessential thathealsounderstand acertain amount ofthephilosophy which exists inthesesubroutines asaclass. Whatfollows isanattempt toexplain thisphilosophy, together withpertinent suggestions. Therearethreeoperating modesdefined inthesesevensubroutines: I)axismode; 2)straight linemode;and3)typing mode. Thesethreemodes aretotally independent ofeachother andaremutually self-exclusive. Whatthisactually implies isthatonlyonemodecanbeactive atanyonepointintime. Subroutine AXISeperates intheaxismode;subroutine LINEoperates inthestraight linemode;andsubroutines PRINT, SYHB_L, TIPE,TYPFLT andTYPINT alloperate inthetyping mode. Eachofthesesubroutines hasacommon argument which isalways thelastargument ineach oftheca]ling sequences. Thisargument (_PT)isusedtoinitiate amode(OPT=-1), operate within amode(_PT=O), orterminate alogical subset ofplotcommands within amode(_PT=+I). Only while operating within amode(_PT=O) doanyoftheother arguments inacalling sequence have anymeaning. Forthisreason, itisusually agoodpractice tousezerosfortheotherarguments wheninitiating amodeorwhenterminating alogical subset ofplotcommands. Itisstrongly recommended thatthesetofallcommands usedtocreate aplotbegrouped into logical _ubsets ofcommands, witheachsubset operating inonlyoneofthethreepossible modes. 6.10-10 (12-]-69)\nPLOTTER OUTPUT Thisdoesnotmean thatallaxes oralllines oralltyping beincluded inonesubset ofcommands. Inmanycases itismore logical tocreate several subsets ofaxiscommands orstraight line commands. Themodule writer mustcalloneofthesubroutines which operates within thesamemode, withOPT=-I, sethatthemodewill beproperly initiated. Itisthen recommended that, following suchasubset ofcommands, themodule writer again calloneofthesubroutines which operates within thesamemode, withOPT=+I, toterminate thesubset ofplotcommands. Anexample ofthese recommendations isasfollows: CALLTIPE (O,O,O,O,O,-l) CALL PRINT (……… O) CALLTIPE (……… O) CALLSYMBOL (……… O) CALLTYPFLT (……… O) CALLTYPINT (……… O) CALLTIPE (0,0,0,0,0,+I) Generally, themodule writer should avoid constantly changing plotmodes. This issuggested fortworeasons. First, someplotters operate veryinefficiently inamode switching environment• Second, should anerror exist ineither tilesoftware orhardware, itmight benecessary todump thegenerated plottape. Interpreting thisdumpwould generally benoeasytask. However, ifthe ideaofcreating subsets ofcommands wasusedingenerating theplottape, thetaskoflocating thecommand(s) causing theproblem(s) would beeased considerably inmostcases. Allthesubroutines used increating aplotrequire thatatleast oneofthearguments bethe location ofapoint ontheplotting surface• Ineach case, thepoint(s) mustbespecified asreal 6.10-11 (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN numbers already scaled totheplotter units. Thereisnogeneral recommendation astowhenthis scaling should takeplace. Insomecases, itwouldbemorelogical toperform allthescaling at once. Inothercases, itwouldbemorelogical toperform thescaling oneachsubset ofplot commands. While inothercases, itwouldbemorelogical toperform scaling onlyonanas-needed basis. Thechoice isleftentirely tothediscretion ofthemodule writer. SinceAXMAXandAYMAX inthe/PLTDAT/ namedcommon blockdefine thewidth andheight oftheplotting surface inplotter units, andsincetheplotter origin canalways beassumed tobeinthelowerleftcorner ofthe plotting surface, therequired scaling oughttobearelatively easytask. Thelowerleftcerner oftheplotting surface isalways at(0.,0.), while theupperright corner oftheplotting surface isalways at(AXMAX,AYMAX). Thesearealsothedefault values of REGION (seethe/PLTDAT/ namedcommon block) assetbythePLTSET subroutine. Thepurpose ofthe REGION parameters istodefine arectangular plotting area,outside ofwhich noplotting istobe attempted. Forthisreason, eachofthesevensubroutines usedincreating aplotalways compares thepoint(s) specified inthecalling sequence withtheREGION values. Noportion ofanylineor axiswillbedrawnoutside thecorresponding rectangular plotting area. Norwillanytyping be attempted outside thissamearea. TheusageoftheseREGION parameters islefttothediscretion ofthemodule writer andtherequirements ofthemodule design. Inmostcases, thedefault values ofREGION willnotbealtered bythemodule. Onesituation inwhich theREGI_N parameters willbe altered iswhentheuserhasthecapability ofspecifying thataplotistobedrawnonlywithin aspecific portion ofthetotalplotting surface andthatanypartoftheplotwhich appears outside thisareaisnottobedrawn. Inanycase,iftheREGION parameters arealtered within themodule, thiscanbedoneatanytimeonanas-necessary basis. Having created thedesired plotintheplotcreation step,theonlyremaining taskforthe module writer isterminating theplot. Thisisaverysimple task,accomplished bycalling STPL@T: CALLSTPL_T (-I) Thissubroutine, whichwasalsousedtoinitiate theplot,uponsensing anegative argument, will terminate thecurrent subset ofplotcommands, skiptoanewframe (ifappropriate), andwrite an end-of-file markontheplottape(ifnecessary). 6.10-12 (12-I-69)\nPLOTTER OUTPUT Ifadditional plots aretobecreated within thesamemodule, theentire process justdes- cribed mustberepeated, starting withstep 3(plot initiation). If,however, anewplotter is specified forthesucceeding plots, step2(parameter initialization) mustalsoberepeated. If anewpaper sizeisspecified, subroutine PLTSET must bere-executed prior torepeating step3. This concludes thedescription oftheNASTh_AN plotting environ_mnt. There aret_‘oother sections intheNASTRAN Progran1_er’s Manual which dealwith thisenvironment. Itissuggested thatthemodule writer readthese sections alsosothathemayacquire moreofanunderstanding of theNASTRAN plotting environment thanthissection affords him. These othersections are: Changes tothePlotter Software, section 6.10.1, andNASTRAN General Purpose Plotter, section 6.10.6. 6.10-13 (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.10.6 NASTRAN General Purpose Plotter Onefeature whichtheNASTRAN plotting software lacksisthecapability ofdirect usageof theplotting equipment attached on-line toacomputer. Thisisduenottospecial purpose pro- gramming, butrather tooneofthebasiccharacteristics ofNASTRAN: computer independence. Te access on-line plotters wouldnotonlymakeNASTRAN computer-dependent, butprobably installation- dependent also. Thisinstallation dependency wouldresult fromthenecessity ofusingspecial subroutines provided bythecomputer installation toaccess theon-line plotter, withnoguarantee thatsubroutines havin_ thesamenameandcalling sequences would beavailable atanyother computer installation. Evenso,therewould almost certainly occurasubroutine naming conflict, duetothegreatnumber ofsubroutines inNASTRAN. Aneffort ismadeinNASTR/_N topartially overcome thisdeficiency. Ingeneral, NASTRAN will produce aplottapevJhichcanbeuseddirectly byanyoneofseveral off-line plotters. In addition, NASTRAN canbedirected bytheusertoproduce aso-calleG “General Purpose Plotter” tape. Another program, completely external toNASTRAN, would thenhavetoexist, itsfunction beingtotranslate this\"plot” tapefortheon-line plotter sothatitwillproduce theplots intended byNASTRAN. Thisin,pliesthatinordertoproduce aNASTRAN plot,twoprograms mustbe run:first, NASTRAN itself; andthentheexternal translator program. Thepurpose ofthissection istoexplain thecharacteristics andconstruction ofthe “NASTRAN General Purpose Plotter” tape,sothataprogrammer willbeabletowrite aprogram to translate this\"plot\" tapefortheon-linG plotter. Understanding theoverall logicusedbythe NASTRAN plotter software package inproducing aplottapewillsimplify thetaskofwriting this translator program. Itistherefore recommended thattheprogra_ner familiarize himself not onlywiththissection oftheProgrammer’s Manual, butalsowithsections 6.10.1 and6.10.5, whichdescribe thetechnique ofadding anewplotter totheNASTR/_N plotting software package. The\"NASTRAN General Purpose Plotter\" tapeiscomposed ofasimple setefelementary plot operations, which caneasily bedeciphered byaF_RTRAN program onanydigital computer. Aseach operation isdeciphered, thetranslator program should direct theon-line plotter toappropriate action. Thiswouldnormally bedonebyusingtheinstallation software tointerface between the translate program andtheon-line plotter. Withtheexistence ofthisexternal translator pro- gram,NASTRAN wouldthenhavethecapability ofindirectly referencing thecorresponding on-line 6.10-14 (12-I-69)\nPLOTTEROUTPUT plotter. Aby-product ofthis environment istheimplied capability ofindirectl Xaccessing any plotter, whether on-line oroff-line, assuming theappropriate external translator programs are written. The\"NASTRAN General Purpose Plotter\" tape isaseven-track, oddparity, fixed-iength record tape. Anend-of-file mark follows thelast plot only. Each record iscomposed of300six-bit unsigned integers (75words onanIBMS/360, 50words onanIBM7094 orUnivac II08, 30words on aCDC6600) andiscomposed ofI0plot commands, each being composed of30six-bit unsigned integers (15half-words onanIBMS/360, 5wor_s onanIBM7094 orUnivac ll08, 3words ona CDC6600). Notallplot commands will have useful information inall30six-bit integers. Some commands useonly twoofthe30six-bit integers, while others use22. Thegeneral format ofeach command isasfollows: PCR4R3R2RIRoS4S3S2SISoT4T3T211ToU4U3U2UIUo00000000 , where: P=plot command, C=control index, Ri=decimal digit ofaninteger called R, Si=decimal digit ofaninteger called S, Ti=decimal digit ofaninteger called T, Ui=decimal digit ofaninteger called U, 0:zero. Theplot command isasix-bit integer, anyoneofsever: (7)possible plot commands, as follows: 0=nooperation, 1=startnewplot, 2:select camera, 3=skiptoanewframe, 4=t)peacharacter (mayalso=14), 5=drawaline(mayalso=15), 6=drawanaxis(mayalso=16), 6.10-15 (12-I-69)\nMODIFICATIONS ANDADDITIONS TONASTRAN Thecontrol indexisalsoasix-bit integer. Itmaybeapennumber, alinedensity, acamera number, orapointer intoalistofcharacters andsymbols. Thefourinteger values (R,S,T,U) specified inacommand mustbereconstructed bytheexternal translator program. Eachinteger valueisrepresented inthecommand asfollows: d4d3d2dld 0, wheretheoriginal integer valueisgivenby: d4104 +d3103 +d2102 +dllO1+dolO0 . Thesignificance ofeach ofthefour integer values (R,S,T,U) mayvary from oneplot command to another. Theno-operation (0)command issimply apadding forplotrecords whichmayotherwise have beenlessthan300characters long. All30characters ofthiscommand willbezero. Thestart-new-plot (I)command will _ bethefirst command introducing each newplot. Thefirst integer (R)will betheplot number. Thesecond andthird integers (SandT)arethe maximum xandyvalues specified inanyother command forthis plot. Theminimum xandyvalues arealways zero andaretherefore notspecified inthestart newplot command. Ifnecessary, the translator program canusethese maximum xandyvalues toscale subsequent integer values so that theplot will notexceed thelimits oftheplotting surface. Theplot number isincluded because some plotters require theplot number aspart ofthefirst command foreach newplot. In addition, ifthereceiving plotter isatable plotter, thetranslator program should issue a command totheplotter which will stop itsothat theplotter operator canchange thepaper. If theplotter isadrum plotter, thetranslator program must skip asufficient amount ofpaper to insure that theprevious plot will notbeover-plotted. Andifthereceiving plotter isamicro- film plotter, nothing else need bedone. Theselect-camera (2)command uses only thecontrol index (C). Theremaining 28characters arealways zeros. This command ismeaningful only onamicrofilm plotter having both film and hardcopy output. Thecontrol index isthecamera ormedium request number: l=film only; 2=hardcopy (paper) only; and3=both. Upon receiving this command, thetranslator program should issue acommand tothereceiving plotter selecting therequested camera oroutput medium, 6.10-16 (8/I/72)\nPLOTTER OUTPUT thenthiscommand should beignored. Theskip-to-a-new-frame (3)command alsousesonlythecontrol index. Theremaining 28 characters arealways zeros. This command ismeaningful onlyonamicrofilm plotter. The control index isthecamera oroutput medium request number: l=filmonly; 2=hardcopy (paper) only; and3=both. Theappropriate camera willhavealready beenselected inapre- vious select-camera co_and. Theonlyreason thecamera number isincluded inthiscommand is because somemicrofilm plotters require thecamera oroutput medium tobespecified inbotha select camera andskipframe command. Upon receiving thiscommand, thetranslator program should issue acommand tothereceiving plotter toskiptoanewframe. Ifthereceiving plotter isnot amicrofilm plotter, thenthiscommand should beignored. Note: atleast oneskip-to-a-new-frame command will appear after eachstart-new-plot command andbefore thenextstart-new-plot command. Thetype-character (4),draw-line (5),anddraw-axis (6)commands willalways occur insets, i.e., asetoftype-character commands, asetofdraw-line commands, asetofdraw-axis con_nands. There maybemore thanonesetofeach typeofcommand, butwithin asetthecommands willallbe ofanidentical type. Thisisdonebecause onsomeplotters itisvery inefficient tofrequently change modes (e.g., typing mode, linedrawing mode) ofoperation. Theplotcommand ofthefirst command inasetwill_= lO+thebasic plotcommand value, i.e., type-character =14; draw-line =15;anddraw-axis =16.Inallsubsequent plotcommands intheset,theplotcommand value will always equal thebasic plotcommand value. Foratype-character command, thecontrol index isapointer intoaspecific listofcharac- tersandspecial symbols. Thelistofcharacters towhich thepointer applies isSection Iofthe CHAR94 table (seesection 2.5), withthefollowing exceptions: 48=dot,49=circle, 50=square, 51=diamond, 52=triangle (point up). Thefirst twointeger values (RandS)intheplotcommand represent thexandycoordinates ofthepoint ontheplotting surface atwhich thecenter ofthe character orsymbol should betyped. Theremaining 18characters ofthecommand arealways zeros. Uponreceipt ofatype-character command, thetranslator program should issue acommand tothe receiving plotter totypetherequested character orspecial symbol atthespecified point. Of course, there isnoguarantee thatallthepossible characters andspecial symbols canbetyped by thereceiving plotter. Ifanycharacter orspecial symbol cannot betyped bythereceiving plotter, thetranslator program willthenhavetomakeasubstitution ornottypethecharacter at all. 6.10-17 (12-I-69)\nMODIFICATIONS ANDADDITIONSTONASTRAN Foradraw-line command, thecontrol index iseither apennumber (fortable anddrumplot- ters) oralinedensity (formicrofilm plotters). Ifthereceiving plotter isamicrofilm plotter, itisrecommended thatthetranslator program simply drawthelineasmanytimes asisindicated by thelinedensity value, rather thanusing anyspecial density settings available ontheplotter hardware. Thefirst twointeger values (RandS)represent thexandycoordinates ofthestarting point oftheline. Thenexttwointeger values (TandU)represent thexandycoordinates ofthe ending point oftheline. Thelast8characters ofthecommand arealways zeros. Uponreceipt of thiscommand, thetranslator program should issue acommand tothereceiving plotter todrawthe line. Note: someplotters require thatalinebebroken intoaseries ofshort lines. Ifthis isthecaseonthereceiving plotter, thetranslator program will havetoaccomplish thistask unless theinstallation software makes provision forthisautomatically. Thedraw-axis command isidentical tothedraw-line command. Theonlydifference isinthe orientation ofthedrawn line. Thelinedrawn byadraw-axis command willalways beeither hori- zontal orvertical. Formostplotters, thetranslator program will handle this command justlike adraw-line command. However, someplotters which would ordinarily require thatlines bebroken intoaseries ofshort lines, mayhaveaspecial command available todrawahorizontal orvertical lineofanylength. Forthese fewplotters onlywill thiscommand haveanyspecial significance inthetranslator program. Ifsuch isthesituation, thetranslator program, uponreceipt of thiscommand, should issue acommand tothereceiving plotter todrawtheaxis. Otherwise, the translator program should simply issue acommand tothereceiving plotter todrawalinerepre- senting theaxis. 6.10-18 (12-I-69)\nADDITION OFANEWLINK 6.11 ADDITION OFANEWIINK Links canbeadded to_neNASTPJ_N system withlittle effort ifthetotal number oflinks does notexcepH fifteen (15). There areatpresent thirteen (13)links. Links arenumbered consecu- tively, andthis should bemaintained. Ifthetotal number oflinks mustexceed 15,Executive System changes toincrease thelinklimit willberequired. These Executive System changes are described insection 6.11.5. Itisassumed thatthereader isfamiliar with theother alternatives foradding newmaterial tothesystem (section 6.2through 6.10), andthatanewlinkisnormally needed only ifthe addition ofnewmodules toapresent linkmakes thatlinknon-executable because ofanexcess of overlay structure ordecks. Inthiscase, theprogrammer generates anewlinkthrough the following steps (assuming thelinklimit isnotexceeded): I.Decide what modules toinclude inthenewlink. 2.Addanynewmodules totheMPLExecutive table (seesection 2.4.2.2) indeckXMPLBD. 3.Generate anewLinkSpecification Table andanewlinkdriver. 4.Subsys (create anabsolute element of)thenewlink. 6.11.1 Modules toInclude Thefollowing entry points ofExecutive modules mustbeincluded ineachnewlink: XCHK, XCEI, XSAVE, XPURGE, XEQUIV, XSFAandQPARAM. Thefollowing non-root segment subroutines must beincluded ineachnewlink: F_GWRT, USRMSG, BTSTRP, ENDSYS andXE_T. Thefollowing DMAP output modules should beincluded ineachnewlink: TABPT, MATPRN andPRTPARM. Diagrams for theIBM7094/7040(44) DCSoverlay structures forallthese routines canbefound insection 5.2.9. Theaddition oruseofanyother module isatthediscretion oftheNASTRAN systems programmer. Anyexisting NASTRAN module canbeincluded inthenewlinkifitissodesired. 6.11.2 Addition ofNewModules Allnewmodules must beadded totheMPLExecutive table (seesection 2.4.2.2). unce thisis done, thenewMPLneeds tobeadded tothepresent NASTI_AN system before proceeding togenerate a newLinkSpecification Table andanewlinkdriver. Thenewmodules neednotbepresent inthe system, buttheir entry points intheMPLmustbeinthesystem. 6.11-I\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.11.3 Generation ofaNewLinkSpecification TableandaNewLinkDriver Theaddition ofanewlinkrequires that:a)theLinkSpecification Table, LNKSPC, (see section 2.4.2.7) beupdated; andb)anewXSEMideck(seesection 3.3.7), whichwillbethemain program forthenewlink,begenerated. TheF_RTRAN code,inpunched cardform,necessary toaccomplish bothoftheabovetaskscan beproduced automatically inaNASTRAN runusingaLNKSPCupdate deckasindicated below. 6.11.3.1 LinkSpecification Table Update ToupdatetheLinkSpecification Tabletheusermustinsert aLNKSPC updatedeckafterthe BulkDataDeckinaNASTRAN run.Theprocessing ofaLNKSPC updatedeckisinitiated bylogical “senseswitches” onaDIAGcardintheExecutive Control Deck(seeexplanation below); henceno special header cardisrequired intheLNKSPC updatedeck. Theformat ofeachcardoftheLNKSPC updatedeckisasfollows: whereBL1…..Ln = LI,..,.,Ln=Module DMAPname(Ito8characters) IEntry point name (lto6characters) “(NONE)” (6characters) ifthere isnoentry point name zeroormore integers, specifying alllinks themodule resides in. The,BandLifields must beseparated byatleast oneblank oronecomma. cardinaLNKSPC update deckis CHKPNT XCHK 1,2,3,4,5,6,7,8,9,10,11,12,13,14Anexample ofa Atpresent theExecutive module CHKPNT withentry point XCHK isinlinks 1to13;theabove card will addittoanewlink14.Besure toinclude alltheother Executive modules inanynewlink. Cards inthisformat arerepeated until allthemodules inthenewlinkhavebeennamed. Theend oftheLNKSPC update isspecified bythefollowing card: ENDDATA 6.11-2"},"title":"Programmer's Manual P94"},"/docs/programmers/programmers_manual_095/":{"data":{"end--#MODIFICATIONS ANDADDITIONS TONASTRAN\n2.\n3.Plotting\nAXIS STPL_T\nSKPFRM SYMB@L\nSELCAM TIPE\nIDPL_T TYPFLT\nLINE DRWCHR\nPRINT PLTSET\nS_PEN FNDPLT\nSCL_SE\nTrytolimitmaterial heldinthecentral memory toasfewitemsaspossible. Thus,\nmatrices should beprocessed acolumn atatime,ifpossible, andtables handled by\nlogical records.\nStaywithin theexisting overlay structure. InNASTRAN, certain typesofsubroutines\naregrouped together. Theexisting groupings canbedetermined byexamining theoverlay\nmapsinSection 5.Inparticular, eachmajormatrix operation isgrouped byitself.\nThisleadstotheconcept ofamodule driver andseveral subroutines whicheachcall\nonlyonemajormatrix routine. Forexample, assume amodule called M_DAwishes toread\ndatacards, assemble amatrix, multiply thismatrix byaninputmatrix, anddecompose\ntheresult. Itshould beorganized asfollows:\nMatrix Driver:\nSUBR_UTI_E M_DA\nCALLMODAl(\nCALLSSG2B(\nCALLFACTOR(\nRETURN\nEND=\u0026ndash;":"ADDITION OFANEWLINK Thefollowing logical sense switches, setbyaDIAG cardintheExecutive Control Deck, must beusedtoprocess theLNKSPC update deck: I.Logical sense switch 29allows theLNKSPC update decktobeprocessed. 2.Logical sense switch 28causes thenewLinkSpecification Table tobepunched.* 3.Logical sense switch 31causes thenewLinkSpecification Table tobeprinted. Thefollowing DIAGcardwithin theExecutive Control Deck DIAG 28,29,31 accomplishes thisresult. *This codeisfortheBlock Datasubprogram XBSBD, andmaybecompiled under thatnameaspunched, oraltered intothepresent decktoretain thecomments presently inthatdeck. Thelatter pro- cedure isrecommended. 6.11.3.2 Generating NewLinkDriver Decks TheF_RTPu_N codenecessary tomakeanewlinkdriver deckcanbeproduced bysetting logical sense switch 30andthelogical sense switches corresponding tothedesired link(s). Forexample theExecutive Control Deckcard: DIAG30,2,14 wi|l punch thecodeforXSEM2 andXSEMI4. TheF_RTP,ANcodeproduced, whenaltered intothedeck “XSEMXX” (seesection 3.3.8), will produce thedesired XSEMi routine. XSEMXX isthemodel forthe linkdrivers. Thisdriver codemaybeproduced inthesamerunasthecodefortheLinkSpecification Table, orthis cocemaybeproduced byadding thenewXBSBD decktotheuser’s system andthensetting theappropriate sense switches onasubsequent run. Iflogical sense switch 30isset,theprogram will automatically terminate after satisfying allsense switch requests topunch XSEMi’s. Inessence, _.hestructural problem submitted isonly adummy needed tostart NASTRAN. Theuser iscautio._ed iocheck hisDIAGcard(s) carefully when logical sense switch 30issettobesureonlythesn_eswitches corresponding tothedesired links areset. 6.11-3\nMODIFICATIONS ANDADDITIONS TONASTRAN 6.11.4 Subsys theNewLink Thesubsys decknecessary toaddanewlinkwillvarywiththecomputing machine (seesection 5).Thesafest wayfortheNASTRAN systems programmer todevelop thesubsys deckforthenewlink istocopytheoverlay structure ofthenecessary routines, whicharelisted insection 6.11.1, andthenaddthenewfunctional module(s) tothisbase. Themechanisms forswitching fromonelink toanother already exists inNASTRAN upto15links, sothat,oncethesubsys ofthenewlinkhas beenaccomplished, NASTRAN willbeabletoassimilate it. 6.11.5 Increasing theLinkLimit Toincrease thelinklimitbeyond 15,thefollowing Executive System changes mustbemade. I.Increase thesizeoftheNAMEarrayinthe/SEM/common blocktothedesired linklimit. Addtheadditional linknames (e.g., NSI6,NSI7,etc.)totheNAMEarrayviatheDATAstate- ment. The/SEM/common blockisdefined intheSystem BlockDatasubprogram, SEMDBD. 2.ItemsMAXLNK, DRVRNM, andLNKEDT, defined insubroutine XGPIBS ofExecutive Preface module XGPI(seesection 4.7),mustbeupdated. Increase thevalueforMAXLNK inthe/XLINK/ common block tothedesired linklimit. Addtheadditional XSEMinames (e.g., XSEMI6, XSEMI7, etc.)tothelocalDRVRNM arrayviatheDATAstatement. Addtheadditional linknumbers (e.g., 16,17,etc.) tothelocalLNKEDT arrayviatheDATAstatement. 6.11-4\nWRITING ANEWMODULE 6.12 WRITING ANEWMODULE Thepurpose ofthis section istodraw together material presented throughout themanual from thepoint ofview oftheNASTPJ_N applications programmer (i.e., theprogrammer assigned toadda newcapability toNASTI_N). This section isprovided asaguide forthegeneral module writer, andwill conclude with aspecific example ofasimple module. 6.12.1 Summary ofNASTRAN Coding Conventions andTerminology ThenewNASTPJ_N applications programmer istypically overwhelmed byt!evastness ofthe system into which hewill inject hismodifications andadditio:s Inthis section, areview of commonly used terminology andcoding conventions will begiven inanattempt toassist thenew programmer andprovide areview fortheprogrammer whoinfrequently works vith thesystem. Amodule inNASTRAN isacollection ofsubprograms which performs alogical setofdata processing tasks. Amodule isexecuted bytheuser bywriting andexecuting aDMAP instruction. Modules communicate with other modules andwith theI_ASTRAN Executive System (EXEC) only through: I.Data Blocks (Tables orMatrices existing ascollections ofdata onaphysical storage device) a. Input Data Blocks arereferenced bytheGINB file reference numbers lOl,102 ….. corresponding totheposition ofthedata block intheDMAP call statement. b. Output Data Blocks arereferenced bytheGIN file reference numbers 201,202 ….. corresponding totheposition ofthedata block intheDMAP call statement. c. Scratch Data Blocks arereferenced bytheGIN file reference numbers 301,302 ….. corresponding toanyarbitrary order themodule writer desires. d. Note that there arenodata blocks which areused forboth input andoutput except thescratch data blocks which exist only internally within themodule. Anexception ispresent when aoutput data block isAPPENDed. 2.Parameters (single values) a. Parameters maybeinput, output orbot_ _sdesired bythemodule programmer. b. Each parameter defined forthemodule hisatype andacorresponding number of computer words asfollows: 6.12-I (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN C.Type Exam___ No.Words (I) Integer -3 1 (2) Real 2.9 1 (3) BCD BX2 2 (4) Double Precision -3.2D0 2 (5) Complex (1.3,-4.9) 2 (6) Complex Double Precision (6.2DO,O.ODO) 4 Parameters arestore(! inblankcommon (/ /)intheorderdefined bythe DMAPcallstatement. 3. Executive System Common Blocks Several System Common Blocks areaccessible tothemodule programmer. Theseinclude parametric values usedbyvarious utility routines, F_RTRAN unitdefinitions, theGIN_ buffer length value, andnumerous communication areasforvarious utility routines such asthematrix packing routines. Adescription ofthesecommon blocks maybefoundin Section 2. 4. Executive System Utility andMatrix Operation Routines Alargenumber ofroutines aredirectly callable bythemodule programmer. Thesevary fromelementary bitmanipulation routines toextremely involved matrix operation routines. Routines whichareusable bymodule programmers aredescribed inSection 3. Thecharacteristics orproperties ofallmodules areprescribed bytheModule Properties List(MPL), atableusedbytheDMAPcompiler XGPIanddefined bytheBlock Dataprogram XMPLBD. Thenumber ofinputdatablocks, output datablocks, scratch datablocks, aswellasthenumber andtypeoftheparameters isdefined bytheMPLandmustbeadhered tobyboththeuserwhen usingthemodule andbythemodule writer. Theproperties ofamodule canbechanged onlyby recompiling XMPLBD. Thesubprograms ofamodule mayconsist ofSUBROUTINE subprograms, FUNCTION subprograms and/or unnamed BLBCKDATAsubprograms asdesired bytheprogrammer. Themainsubprogram forthe module, however, mustbeaSUBROUTINE subprogram without arguments. Thenameofthissubprogram isprescribed bytheLinkSpecification Tablewhich isdefined bytheBL_CKDATAprogram XBSBD. 6.12-2 (8/I/72)\nWRITING ANEWMODULE Labeled common blocks maybedefined forthemodule asdesired forintra-module communication solongasunique names arechosen. Similarly, thenames ofallnewsubprograms must beunique. Itisextremely important toremember toclose allopenGIN_files before executing aRETURN to theExecutive System. Thebasic GINOfileelement isthelogical record, which contains anarbitrary number of words ofdata. Amost important non-FORTRAN feature inNASTRAN istheability toreadandwrite part ofalogical record. Aninteresting anduseful application isthe\"blast read/write\" illustrated below. LetNWbethenumber ofwords ofworking core (open corelessGIN_buffers andanyother pre-assigned areas) available tothemodule starting atX(K). Ifwewish tocopy thecontents ofGIN_fileFlontoGIN_fileF2,thefollowing represents themostefficient way since thedataishandled inaslarge aspieces aspossible. Assume thatbothfiles areopenand rewound. lOCALLREAD($30,$20,FI,X(K),NW,O,M) CALLWRITE(F2,X(K),NW,O) GOTOIO 20CALLWRITE(F2,X(K),M,I) GOT_IO 30CALLCLOSE(F2,1) CALLCLOSE(FI,I) TheDMAPnameofadatablock isnotknown apriori totheprogrammer since itisdefined atexecution timebytheuserinhisD_Psequence. Iftheprogrammer desires toobtain the name ofthedatablock heisprocessing, hemaydosovia CALLFNAME(F,NAM) where FistheGIN_filereference identification number (I01,203, etc.), andNAMisatwo word array intowhich thenamewill bestored. 6.12.2 Module Design Before amodule canbewritten, itmustbedesigned. While thegeneral process ofdesign cannot beformalized, certain NASTRAN rules andconventions canbediscussed andillustrated. 6.12-3 (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN Amodule canobtain inputdatainthreeways: I)through anyofafixednumber ofinputdata blocks, 2)viaparameters maintained bytheEXEC,and3)fromsystem common blocks. Thus,the firstitemstodetermine aretheinputdatablocks required, theirnumber, andtheparameters. Amodule canonlycreate printed output, output datablocks, orparameters. Itmaynotupdate system tables. Thesecond itemtodetermine isthenumber ofoutput datablocks. Onlyonematrix canbewritten peroutput datablock, andtheformat isprescribed. Table datablocks, onthe otherhand,maybeformatted asthemodule designer pleases. Amodule mayrequire temporary storage (other thancentral memory), andhencerequire scratch files. (These areoften required byNASTRAN utility subroutines, suchasMPYAD, etc.) Amodule canbecompletely described bythenumber ofinputs, thenumber ofoutputs, the number ofscratch files, andanordered listofparameters andtheirtypes (integer, real,BCD, double precision, complex single precision orcomplex double precision). Thetotalnumber offiles required should belessthan26.Tobeused,amodule mustbescheduled intoaDMAPsequence alongwithothermodules. Aprimary module design consideration mustbetheDMAPsequence in which itwillfunction. Itemstobeconsidered include: I)Areallinputdatablocks available priortotherunning ofthismodule? 2)Aretheparameter typesconsistent? 3)Dotheformats oftheoutput datablocks agreewiththeinputformats forthemodules whichwillprocess them? Whiletheflowofdatawithin amodule canbeasdesired, afewguidelines aregivenbelow: I.Trytouseexisting utility routines. Inotherwords, trytoexpress operations to beperformed astaskswhichcanbesolved byexisting subroutines. Forthispurpose theutility routines ofSection 3canbeclassified asfollows: Processin 9Tables READ WRITE FWDREC BCKREC REWIND EOF RDTRL WRTTRL_PEN CLOSE FNAME SORT BISRCH GBPEN FREAD 6.12-4 (8/I/72)\nWRITINGANEWMODULE Printin_ Output CONMSG MATDUM SSWTCH TABPRT PEXIT DMPFIL PAGE BUG MESAGE EJECT In-Core Matrix Operations GF’#4ATD INVERS GMMATS PRETRD INVERD PRETRS Processing Data Cards PRELBC XRCARD PRETAB PREMAT Processing Matrices (General) _PEN G_PEN CLOSE FREAD FWDREC BLDPK RDTRL PACK WRTTRL INTPK FNAME UNPACK Processing Matrices (Operations) SSG2A SSG3A SDRIB S_LVER UPART FACTOR SSG2B TRANPI SSG2C 6.12-5 (BII172)\nMODIFICATIONS ANDADDITIONS TONASTRAN 2. 3.Plotting AXIS STPL_T SKPFRM SYMB@L SELCAM TIPE IDPL_T TYPFLT LINE DRWCHR PRINT PLTSET S_PEN FNDPLT SCL_SE Trytolimitmaterial heldinthecentral memory toasfewitemsaspossible. Thus, matrices should beprocessed acolumn atatime,ifpossible, andtables handled by logical records. Staywithin theexisting overlay structure. InNASTRAN, certain typesofsubroutines aregrouped together. Theexisting groupings canbedetermined byexamining theoverlay mapsinSection 5.Inparticular, eachmajormatrix operation isgrouped byitself. Thisleadstotheconcept ofamodule driver andseveral subroutines whicheachcall onlyonemajormatrix routine. Forexample, assume amodule called M_DAwishes toread datacards, assemble amatrix, multiply thismatrix byaninputmatrix, anddecompose theresult. Itshould beorganized asfollows: Matrix Driver: SUBR_UTI_E M_DA CALLMODAl( CALLSSG2B( CALLFACTOR( RETURN END=–=== ===Outputs newmatrix. Multiplies byinputmatrix. Decomposes matrix. BacktoEXEC. 6.12-6 (811172)\nWRITING ANEWMODULE Theoverlay environment might beasfollows: IModule Driver 1IINASTRAN 1 EXEC IModule Driver 2I MPYAD ] ILSDCOMPIMODAI MODAl Notethatallmatrix routines andallmajor areas ofcodeareplaced incoreafter allmodule drivers; therefore, eachmodule driver should beasshort aspossible. Notethatnodata canbeleftincentral memory between eachpartofthemodule; i.e., alldatamustbe transferred toscratch files, thusfreeing amaximum ofcentral memory foreachmajor matrix operation. Notealsothatthenames ofeachuser-generated subroutine should berelated to themodule name, asindicated intheexample. 6.12.3 Implementing theNewModule Actual implementation ofthenewmodule canbedoneintwoways. Thesimplest wayistopick anexisting dummy module (asdocumented inSection 5oftheUser’s Manual) which contains atleast asmany inputs, outputs, scratches, andparameters asneeded forthenewmodule. Failing this, theprocedures described inSections 6.11.2 and6.11.3 mustbefollowed. Thenewdecks must be added totheexisting overlay structure through theoverlay control language ofeach particular machine. TheNASTRAN EXECwill (attheproper moment) callthespecified entry point tothemodule. Note thatnoarguments areallowed. Thus, thenewmodule muststart asSUBROUTINE _DA, ifMODA isitsentry point. Themodule mustconclude withaRETURN statement. Parameters willbeplaced inBLANK C_MMON intheorder specified intheDMAPcalling sequence. Assume themodule hasthree parameters, aBCDvalue, aninteger, andacomplex single precision nun_Der. They could be referenced as C_MMON //BCD(2),INTGR,COMPLX(2) 6.12-7 (8/I/72)\nMODIFICATIONS ANDADDITIONS TONASTRAN Theparameter values maybechanged bythemodule atwill, andBLANKcommon usedasthemodule writer pleases. (NotethatBLANKCOMM@N isusually intherootsegment, andshould beheldto 300wordsorless.) 6.12.4 Codin9aModule Subroutine Theremaining tasksshould nowbebroken intocoding individual module subroutines. (Itmay bepossible tocodeamodule whichonlycallsexisting subroutines. SCEIissuchamodule.) Module subroutines arenormal F_RTRAN subprograms written inNASTRAN’s limited FORTRAN subset. Notethat bitoperations havebeenaddedtoNASTRAN F_RTRAN viaRSHIFT, LSHIFT, ANDF,BRF,etc.Twomajor differences arenotedbyexperienced FORTRAN programmers, opencoreandI/0management. Theseare treated insubsequent sections. 6.12.4.1 OpenCoreCoding Amodule subroutine can,ofcourse, havenormal FORTRAN arrays andC_MMON blocks asitpleases, butmanyitemsinNASTRAN, suchasthesizeofamatrix orthelength ofatable, areopenended orvariable fromruntorun.Theseitemsmustbeheldinavariable length storage space. Many F@RTRAN programs simply DIMENSION anarrayaslargeaspossible andworkwithin thisarray. NASTRAN chooses toviewthisarrayasstarting inaparticular COMMON BLOCK, thenameofwhich isassigned byeachmodule. ThisCBMMON BL_CKispositioned atthefirstavailable location within theexist- ingoverlay (usually immediately aftertheparticular module subroutine). Themodule subroutine obtains thelength ofthearrayinthisC_MM@N BL_CKbycalling uponaNASTRAN EXECUTIVE function CORSZ. Themodule writer mayorganize thisarrayashepleases, aslongashestayswithin its specified length. Consider thefollowing diagram, which showsapicture ofthemainmemory ofa hypothetical computer. 6.12-8 (8/I/72)\nWRITING ANEWMODULE Module Origin Sub-Module Origin Open CoreOrigin_S RS MD MS IMSXI Length NS _SlAddress 0 =NZ (EndofComputer) _Srepresents theareareserved fortheresident O_perating System, RSrepresents theareareserved fortheRootSegment ofNASTPJ_N, MDrepresents thearea reserved fortheM_odule D_river, andMS represents theareareserved fortheModule Subroutine which iscurrently executing. /MSX/isthe LABELED C_I_N BL_CK usedbyMStodelimit thebeginning ofthevariable array (open core). NS represents theareareserved fortheNASTRAN EXEC, and_Slrepresents theremainder ofthemachine controlled bytheoperating system. Thewords ofcorefrom/MSX/tothebeginning ofNScanbe used bymodule subroutine MS.There areNZofthem. Atypical module subroutine determines thelength ofopencoreasfollows: INTEGER CORSZ C_MH_N /MSX/IZ(1) NZ=CBRSZ(IZ,IZ) 6.12-9 (811172)\nMODIFICATIONS ANDADDITIONS TONASTRAN Thissubroutine mightorganize theopencoreasshownbelow: LENGTH FIRSTWnRK AREA SFCnNn WhRK AREA UNUSED CORE BUFFER GZNB B{IFFERSYSBUF SYSBUFP_INTER 1 12 IBUF2 IBUFI Suchdiagrams areindispensable tomodule programmers. Theprogrammer would locate items suchasthefirstGIN_buffer byIZ(IBUFI). Suchlocations canbecomputed by IBUFI =NZ-SYSBUF +1 IBUF2 :IBUFI-SYSBUF Theproper length ofopencoreshould bechecked before anyuseismadebyastatement suchas IF(2NR_W+2SYSBUF .LT.NZ)CALLMESAGE (-8,O,NAME) 6.12-10 (8/I/72)\nWRITING A NEW MODULE 6.12.4.2 I/@ Management Data blocks are selected via their GIN@ file names. The input data blocks have positional numbers beginning with 101. Thus, data for the fourth input data block can be obtained by referenc- ing GIN@ file number 104. Outputs have positional numbers beginning with 201; scratches with 301. A module must close all of its open files before returning to EXEC. The module writer must supply a buffer to GIN@ for each file as he uses it. Supplying this buffer is referred to as opening the file. This buffer should exist in the module’s open core. During the time the file is open, this area belongs to GIN@. Do not store in this area. The area may be reused after the GIN@ file is closed. The length of this area is given by the value of the first word in the /SYSTEM/ common block. A typical module subroutine might proceed as follows: SUBR@UTINE M@DAl( INPUT) INTEGER SYSBUF,C@RSZ C@MM@N / SYSTEM/SYSBUF ,N@UT C@MM@N / MSX/IZ(l) NZ = C@RSZ(IZ,IZ) IBUFl = NZ - SYSBUF+l IF(NZ .LT. SYSBUF) CALL MESAGE(-8 . CALL GflPEN(INPUT,IZ(IBUFl) ,0) Process file CALL CL~SE(INPUT,I) RETURN END\nMODIFICATIONS AND ADDITIONS TO NASTRAN Printed output should be written onto the FgRTRAN unit given by the value of the second word of /SYSTEM/. All NASTRAN data blocks have a header record, which can be supplied by GgPEN or FMAME, and a trailer, which can be supplied by RDTRL or WRTTRL. Nonzero trailers must be written for all output data blocks and should be written on all scratch data blocks. These trailers are particularly important when processing matrices. 6.12.5 Sample Module Coding This section wi 11 contain the entire FflRTRAN code for a new NASTRAN module. The module is to normalize a matrix to a maximum magnitude of 1.0 in each column. The module will also output the number of rows and columns of the matrix as output parameters. MgDULE NAME = NflRM Entry Point: NgRMM Inputs : 1 Outputs : 1 Scratches: 0 Parameters: 2 - integer - output DMAP Calling Sequence: NgRM ANYMAT / NgRMMAT / V,N,NC@L / V,N,NR@W $ SAVE NCgL,NRgW $ The module will be written as a single subroutine (rather than as a module driver/subroutine combination). Note the handling of multiple precision and complex values in open core and the liberal use of comments.\nWRITING A NEW MODULE ORI.IUT I NE NJRMM THIS 15 THC UMAP MUDUL~ NORM \u0026HOSE CALL INSThd:TIU.4 15 NL)At+l IIU / UJT / W,NerUCUL / VVNKCA $ irUMdtR uF INPUT UATA 6LJCkS 1 NUtJdER UF OJTPUT OATA dLJCI(S 1 NUMLitR OF SGKATCH OATA BLUCKS C NUMBER uf I \u0026PUT PAKAME TtRS 0 NU+lBER OF OUTPUT PAkAMETcRb 2–1NTC;;ER IuU.IM AILL IJOKMALILE fACd CCILUMIJ dF AV INPUT MATRIX 1rUiE;tk COKSL,SYbBUF,MCBt 7 ),NAt+EI 2) RAL L(1) OUJbLE PRECISIUN DLll)rOAX,LOLIL,A),LMAK COfiPLEX CLI 1) UIAENSIDN Nw141 CU.‘4MUN /SYS TEN/ SYbBUFvNJUT LUMLIN /UNP AKX/ I TC I I I JJ I INLK CO4MJN /PACKX / ITAg ITdrI I1tJJioINCRL EUJIWALNCE 4 ILAL~~~~~L~~~~CLL~~~CULAAJ) EXTtRNAL Kt AD,mKITE DArA INPUT/ 101/ ,IUUT/201/ 9 NAME/HNUKMIHY DATA NH/LeL 9L 94/ C L I%ORM WILL USE OPEN LUKE AT I L C C\nMODIFICATIONS AND ADDITIONS TO NASTRAN C MiSil) = INPUT LALL RdTKL I MCB) IFiMC6i1)eLEeUJ bU TU 503 G L UUTPJT PAKAMETERS NCOL = MCBlZ) C ALL3C4TE OP EN CORE C C LHECK kOK SUFFlCItlVT CORE Ti) HilLLt AN U\\IPAC\u0026EU C COLUMN LJF THt INPUT MAT\u0026IX AtW T#G GIhJ adt-tEA3 L UPEN INPUT AND UUTPUT MATKICES L CALL GUPtNI INPJTr lLLIBUF1IO LALL CUPEN ( kOUT 9 IL( IBUFZ)rL1 C C INI TIALI LE MAlKIX TRAILEg\nWRITING A NEW MODULE SET UP FOK MATRIX PACK/UNPACK ITC = Kw INtR = I ITA = ITC ITS = IT’C INCH1 = 1 LOdP ON EACH CULUMk CNLY BKibG IN BAND TERMS II = 0 CALL UIJPALA L INPUT $1 L,RkAU) rRtTclKNS( 80) iI1 = 11 JJI = JJ bTtHM = JJ-II+1 GO f O (2~930943950) ~KH FItliJ MAX – REAL SiNGLE PKkCiSION\nMOD1 FICATIONS AND ADDITIONS TO NASTRAN 213 KMAX = 000 00 2.2 J = lpNTERM XMAX = AHAXl(A\u0026SiL( J)BpXHAX) LL CONTIhdE iFIXM4XeLE.OeOJ GO TU 80 C C NURHALIZE C DO 25 J = IrcJTtKM LIJ) = LLJj/nMAX 25 CCiNiIhJE CIU TO 90 C i F IUO MAX – KkAL DOUBLE PRELISlON C 30 UMAX = 3,OUO DO 32 J = 1,MTEKM DMAK = DMAXl(OAtlSLDL(J~)~CIUIAX) 32 LONTINUE IF(dMAXeLEe3eDOOA 60 TO dU t C NOKMALI LE C UU 35 J = 1tNTEKM UZIJ) = ULIJ)/DMAX 35 LONiIhUE GO FLI YO L L FIND MAX – CtJMPLtA SINGLE P\u0026ELISIUN t 40 CMAX = 9.0 DU 42 J = 19hTtkM"},"title":"Programmer's Manual P95"},"/docs/programmers/programmers_manual_096/":{"data":{"":"INTRODUCTION 7.1INTRODUCTION Insection 3ofthismanual, wedescribed NASTRAN subroutines notanintegral partofa module. These subroutines werepartitioned intothree classes: Executive, matrix, andutility. AnExecutive subroutine isonewhich isclearly partoftheNASTRAN Executive System, i.e., no functional module usesit;amatrix subroutine isonewhich isclearly dedicated toNASTRAN matrix (data block) operations; allother subroutines aretermed utility subroutines. There exists another class ofsubroutines, better still, programs thatwhile notactually partofNASTRAN perse,areallimportant forthesmooth functioning ofNASTRAN. Theprograms inthis class arecalled support programs. NASTRAN together with itsassociated support programs comprise theNASTRAN System ofComputer Programs. Clearly themost important ofthesupport programs istheCDC6400/6600 Linkage Editor. development ofthisLinkage Editor wasnecessary toinsure thatthere bejustoneversion of NASTRAN. Thepolicy decision thatthere bejustoneversion ofNASTRAN wasderived fromthe criterion thatNASTRAN beaday-to-day production tool. This criterion imediately implies a oneversion, maintainable program. Section 5.6ofthismanual describes theusage ofthe Linkage Editor; section 7.2describes theprogramming details oftheLinkage Editor.The During theearly stages ofNASTRAN development, thedesign teamchose asubset ofFORTRAN IV tobethe\"language\" oftheoverwhelming majority ofNASTRAN code(less thanI%oftheNASTRAN System isinassembly language). Section 6.2describes thissubset. However, theFORTRAN RUN compiler atLangley Research Center andother CDC6600 series compilers havetwomajor differences inFORTRAN language specifications fromthe\"NASTRAN FORTRAN language.\" First, NASTRAN FORTRAN allows arguments ontheENTRY statement; CDCFORTRAN doesnot. Additionally, nonstandard returns inNASTRAN FORTRAN havedifferent formats fromthat inCDCFORTRAN. Table lillustrates this major difference. Toovercome these language differences, theSource Conversion Program (SCP) wasdeveloped. TheSCPaccepts aUNIVAC ll08NASTRAN source tapeandgenerates aCDC6600 NASTRAN source tape which, after compilation andlinkediting, produces anexecutable NASTRAN system tapethat is equivalent toitsUNIVAC ll08(andIBMS/360) counterpart(s). Section 7.3describes theSCP. 7.1-I (3/I/71)\nTableI.NASTRAN SUPPORT PROGRAMS Nonstandard return differences. NASTRAN FORTRAN CDCFORTRAN A.MAINPROGRAM A.MAINPROGRAM B°CALLSUBI($1OO,$2OO,A) B=A+C GOTO300 I00B=A+D GOTO300 200B=A+E 300.CALLSUBI(A)RETURNS(IO0,200) B=A+C GOTO300 I00B=A+D GOTO300 200B=A+E 300. SUBROUTINE SUB1 SUBROUTINE SUBI(,,A) IF(A-3.5) 10,20,30 I0RETURN1 20RETURN2 30RETURN ENDB. I0 20 30SUBROUTINE SUB1 SUBROUTINE SUBI(h)RETURNS(RETURNI,RETURN2 IF(A-3.5) 10,20,30 RETURN RETURN1 RETURN RETURN2 RETURN END 7.1-2 (3/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 7.2DESIGNOFTHECDC6400/6600LINKAGEEDITOR ThissectiondescribesthedesignoftheCDC6400/6600LinkageEditorthatwasdevelopedto insurethattheCDC6000versionofNASTRANwouldbeessentially thesameastheIBM360and UNIVACIf08versions. Itisassumedthatthereaderhasalreadyread,andisfamiliarwith, section5.6,whichdiscussesthelinkageeditorfromauser’spointofview. Theterm\"linkageeditor\"isnotusedunequivocally inthefollowingpages.Inaglobal sense,thelinkageeditorsystemconsistsofthreeprograms: thelinkageeditorprogramwhich combinesandlinksobjectdecksintoa{large)programinwhichallexternalreferences are resolved;thesegmentloaderwhichloadsprogramlinksintocoreasneeded(execution-time loader); andthebootstrapprogramwhichisloadedbytheCDCloaderatthebeginningofprogramexecution andthentransferstotheprincipalentrypointoftheprogramlink-edited bythelinkageeditor. Inmostinstances, wedonotdifferentiate thesystemfromtheprogram,butusuallywhichoneis underdiscussion isclearfromthecontext.Thelinkageeditordiscussedinsection5.6isthe programandnotthesystem. Section7.2isdividedintoIIsubsections. Section7.2.1isanintroduction describing the purposeofthelinkageeditor,itsrelationship toSCOPE,majordivisionsofthelinkageeditor, andlinkageeditorfilesandorganization. Section7.2.2describesthemajordivisionsofthe linkageeditor:thelinkageeditortablesarediscussed; asampleproblemisintroduced; linkage editorprocessing isdescribedwithregardtothesequenceofoperations performed(initialpro- cessing,controlstatementprocessing, objectdeckprocessing, addressassignment processing; relocation processing, andfinalprocessing); thenthebootstrapprogramandthesegmentloader arediscussed. Flowcharts comprisesection7.2.3.Descriptions forlinkageeditorsubroutines aregiveninsection7.2.4Section7.2.5describestheformatsofSCOPEobjectdecks,providing theinterfacebetweenSCOPEandthelinkageeditorviathetablesineachobjectdeck.Section 7.2.6describesintabularformtheprincipallinkageeditorvariables. Section7.2.7shows linkageeditoroutput,describesdiagnostic messagesandgivesalistofprogramsinLINKLIB.In section7.2.8,improvements totheLevel2.0Version(thecurrentVersion)ofthelinkageeditor arerecommended. Finally,section7.2.9givesaglossaryoftermsuniquetotheCDC6400/6600 LinkageEditor. 7.2-I(6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.1 Introduction 7.2.1.1 Purpose oftheLinkage Editor Thelinkage editor isaservice program designed tobeusedinassociation withtheRUN compiler toprepare anexecutable program fromsymbolic language programs written inF_RTRAN and COMPASS. Linkage editor processing isanecessary stepbetween source program compilation and object program execution. Linkage editor processing allows theprogrammer todivide hisprogram intoseveral parts, eachcontaining oneormorecontrol sections. Eachpartmaythenbecodedintheprogramming language bestsuited toitandmaythenbeseparately assembled orcompiled. Theprimary purpose ofthelinkage editor istocombine andlinkobject decks (theoutput oftheRUNcompiler) intoaprogram inwhich allcrossreferences between control sections are resolved asiftheyhadbeenassembled orcompiled asoneprogram. Theprogram produced bythe linkage editor consits ofexecutable machine language codeinaformat thatcanbeloaded intomain storage bythebootstrap program (seesection 7.2.1.4.7) andsegment loader (seesection 7.2.1.4.8). Themaindesign objective ofthelinkage editor/loader istoefficiently process andexecute unusually largeprograms thatrequire extensive segmentation (afeature entirely lacking inthe existing CDCloader). Inaddition tocombining andlinkage object decks, thelinkage editor performs thefollowing functions: I.Library CallProcessing. Ifunresolved external references remain afterthelinkage editor processes allinputtoit,anautomatic library callfeature retrieves subprograms required toresolve thereferences. 2.Program Modification. Control sections canberearranged during linkage editor processing asdirected bylinkage editor control statements. Common control sections arecollected. References toentrypoints canbealtered bycontrol statements. 3.Overlay Processing. Thelinkage editor prepares programs foroverlay byinserting tables (SEGTAB$, ENTAB$, seesection 7.2.2.7) tobeusedbythesegment loader during execution. 7.2-2 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.1.2 Relationship totheSC_PE Operating System Thelinkage editor isnotanintegral part oftheSC_PE operating system. Asaresult, itis executed asanormal “user” program, i.e., using thefacilities oftheCDCloader. Theobject decks that comprise thelinkage editor exist asacard, tape, ordisk file andthe linkage editor isexecuted asanormal jobstep. Theexecutable program produced bythelinkage editor maybeintheform ofasequential file ontape ordisk oranindexed (random) file ondisk. Ineither case, theinitial records ofthe file contain object decks that comprise thebootstrap program loads theinitial portion (Link O) oftheexecutable program into main storage andoptionally writes theremaining links ofthe executable program. Thereafter, allloading ofadditional segments oftheexecutable program is controlled bythesegment loader which wasincluded inLink 0bythelinkage editor. IntheLevel 2.0version ofthelinkage editor (the current version), processing islimited toobject decks produced bytheRUNcompiler because oflinkage conventions established bythat compiler. Reasonably extensive modification ofthelinkage editor/loader andLINKLIB (see below) isrequired toprocess object decks produced bytheFTNcompiler. Associated with SC_PE andtheRUNCompiler areanumber ofsubprograms which accomplish the primary interface between theuser andtheresident monitor. These subprograms areaprincipal input tothelinkage editor andreside onafile named LINKLIB. Since thelinkage editor isnot anintegral part ofSC_PE, modification oftheLINKLIB subprograms isnotautomatically accomplished with SCBPE updates andremains amaintenance task ateach installation. Linkage editor processing andsubsequent execution time loading isdependent onthefile concepts andoperations asdefined andsupported inSC_PE 3.1. Inparticular, changes tothe subfields oftheFile Environment Table (FET) orchanges totheobject deck format arelikely to require modification tothelinkage editor andsegment loader code. 7.2.1.3 General Description Input tothelinkage editor consists of: a)oneormore sequential files (libraries) con- taining subprograms inrelocatable format (object decks) asproduced bytheRUNcompiler, and 7.2-3 (611171)\nNASTRAN SUPPORT PROGRAMS b)linkage editor control statements contained inINPUT, thestandard input file. Theprimary function ofthelinkage editor istocombine these subprograms, inaccordance with therequire- ments stated onthecontrol statements, into amachine-language program suitable forloading into main storage andexecuting. External references that areundefined after processing allsubprograms cause theautomatic call mechanism tosearch forsubprograms that will resolve thereferences. When these subprograms arefound, they become part oftheexecutable program. Toproduce anexecutable program, thelinkage editor: I.Assigns relative main storage addresses tothecontrol sections tobeincluded inthe program. 2.Resolves references between control sections (translates symbolic references torelative main storage addresses) 3.Collects common sections andassigns asingle relative machine address toallsections ofthesame name. Thelength ofthecommon section istaken tobethelongest length ofany individual section. Figure lillustrates anexample oflinkage editor processing. Theexecutable program produced bythelinkage editor contains three portions: I.Asequence ofobject decks suitable forloading bytheCDCloader. Themain program inthis sequence, named XBBOT (see section 7.2.2.9), reads theremainder oftheprogram andwrites itonthedisk asanindexed file (unless theprogram isalready anindexed file). XBOOT reads Link 0inmain storage andpasses control totheentry point which initiates execution oftheproblem program. 2.Asequence ofthree records which defines Link 0-adirectory record, asymbol dictionary record, andtheexecutabTe machine language code. 3.Asequence ofrecords foreach oftheadditional links -onedirectory record perlink plus onerecord containing executable machine language code foreach segment inthelink. Link 0remains inmain storage atalltimes during program execution. Link 0contains no overlay segments. Thelinkage editor supplies thesegment loader (named XL_ADER, seesection 7.2.2.10) when Link 0isconstructed. XLOADER accomplishes theloading ofsegments andlinks 7.2-4 (6/I/71)\nNASTRAN SUPPORT PROGRAMS P//reviously Compiled II Object Decks LjlIIObjectDeck LibraryCall Library Programs Containing Compiler/ Object DecksLINKLIB LINKAGE EDITOR / Indexed FileWith Links Link0 inCentral MemoryI L_inkage IEditorControl _ /Bootstrap. F _x-Pr°gram /TMFile Containing Executable Links p \\Loade / Figure I.Linkage editor processing. 7.2-4a (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR whenrequested. Segmentloadrequestsaresuppliedautomatically bythelinkageeditorthrough tablescalledENTAB$(seeFigure29)whicharewrittenasapartofthetext(instructions and data)foreachsegmentwhichmayrequireadditional segmentloading.Anadditional table, SEGTAB$(seeFigure28)whichisconstructed bythelinkageeditorasapartoftherootsegment ofeverylinkisusedbyXL_ADERtofacilitate segmentloading. Majordivisionsofaprogramarelinks.Eachlinkconsistsofself-contained overlaystruc- tureandmightbethoughtofasacompleteprograminitself.Allroutinesinalinkcommunicate freelywithLink0routines. Consequently, Link0maybethoughtofaslogicallybelongingto everylink. 7.2.1.4MajorDivisionsoftheLinkageEditor 7.2.1.4.1 InitialProcessing Initialprocessing beginswhenthelinkageeditorreceivescontrolfromtheCDCloader. Aftercontrolisreceived,thefollowingfunctionsareperformed: I.TheLINKEDITcardisread,echoed,andconverted. Parameters aresetbasedonoptions selected. 2.Initialallocation ofworkingstorageandbuffersismade. 3.Iftheprogramfromapreviouslinkageeditorrunispresentasasequential file (INFILE),itisreadandwrittenasanindexedfile. 4.EachfilenamedontheLIBRARYcardisread.Eachdeckiswrittenonalocaldiskfile namedSYSUT2(indexedfile).Subprogram namesaresavedinamainstoragetable.Forthe filenamedLINKLIB,eachoftheentrypointnamesissavedinmainstorage. 7.2.1.4.2 ControlStatementProcessing Foralink,cardsfromLINKthroughENDarereadandconverted. Twopassesaremade.On thefirstpass,eachcardischeckedforproperformat,content,andorder(ifimportant). Variouscountsareaccumulated suchasthenumberofsegments,numberofregions,numberof RENAMEcards,etc.Thecontrolstatements areechoedon_UTPUTunlessthisoptionissuppressed. Attheendofthefirstpass,allocation ofworkingstorageiscompleted. Ifthecurrentlypro- cessedlinkisnotLinkO,thedictionary definingentrypointandcommonblocknamesandaddress 7.2-5(611171)\nNASTRAN SUPPORT PROGRAMS forLink 0isread, andentries aremade intheGeneral Table (see section 7.2.2.1.9) foreach Link 0name andaddress. Onthesecond pass ofthecontrol statements, each statement (having been saved inmain stor- ageduring thefirst pass) isagain converted, andentries aremade invarious tables depending onthecontrol statement anditscontents. Following thesecond pass ofthecontrol statements, control ispassed toLKED025 (see Figure 35,section 7.2.3) toread each oftheobject decks named onINCLUDE statements plus those subprograms required tosatisfy undefined external references. 7.2.1.4.3 Object Deck Processing Thelist ofsubprogram names ineach ofthenamed libraries isscanned. Foreach subprogram which ismarked forinclusion, thefollowing processing occurs: I.Thedeck isread from SYSUT2. 2.Subprogram (orcommon block) length isentered intheGeneral Table (GT). 3.Each common block referenced bythesubprogram isentered into theGT(ifnotalready present), andthelength field isupdated. Iftext (data) forthecommon block exists, a reference tothedefining subprogram isnoted. 4.Anentry intheGTiscreated foreach entry point ofthesubprogram. Therelative address oftheentry point issaved. Thenumber ofarguments associated with each entry point isfound bysearching theTEXT tables (see section 7.2.5) fortheconventional identi- fication word. Ifnotfound, less than seven arguments isassumed. 5.TheLINK table isprocessed. Foreach external reference bythesubprogram, theGT ischecked foranexisting entry. Ifpresent, apath analysis ismade. Ifthecall isnot inthepath, acall chain entry iscreated intheGT. Iftheentry isnotpresent, anentry intheGTiscreated andacall chain entry iscreated. When allobject decks have been processed, theautomatic call logic isinvoked. Foreach undefined external reference, thelist ofentry points toLINKLIB issearched. Iffound, the corresponding subprogram from LINKLIB isincluded. Ifnotfound, anerror message isissued. 7.2-6 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR When allobject decks fromLINKLIB havebeenprocessed, apassthrough eachoftheentries in theGTismade andvarious checks aremade. Callchains arechecked, andentries nowresolved (inthepath) areremoved. Remaining entries inthecallchains willrequire facilities ofthe segment loader, andthese entries will formtheENTAB$ tables. Atthispoint, allinformation isavailable toperform assignment offinal addresses forthe program. Control ispassed toLKED050 (seeFigure 36,section 7.2.3) forthistask. 7.2.1.4.4 Address Assiqnment Processing Theprogram computes final storage addresses forallsubprograms, entry points, andcommon blocks intheprogram byexecuting thefollowing steps: I.Lengths foreachsegment arecomputed bvsumming thelengthsofeachentry (subprogram orcommon block) inthesegment. This information isstored intheSegment Definition Table (seesection 7.2.2.1.7). 2.Thelengths foreach region arecomputed byfinding thelongest path intheregion and summing thelength ofallsegments inthatpath. 3.Region lengths areconverted toregion addresses bysumming theregion lengths. This information isstored intheRegion Definition Table (seesection 7.2.2.1.5). 4.Segment addresses arecomputed byfollowing thepaths ineachregion andsumming the previous segment lengths. 5.Finally, addresses foreachentry ineachsegment arecomputed bytracing theorder of eachentry inthesegment andsumming lengths ofprevious entries. 7.2.1.4.5 Relocation Processing Thefinal phase foreachlinkconsists ofbuilding theexecutable machine language code, performing allnecessary relocation ofrelative addresses. This isaccomplished byexecuting thefollowing steps: I.Ifthecurrent link isLinkO,object decks defining thebootstrap program arecopied from LINKLIB totheexecutable program file(either SYSUTI or_UTFILE). Adirectory record containing linknumber, number ofentries intheLink0dictionary, andtotal length ofthe 7.2-7 (6/I/71)\nNASTRAN SUPPORT PROGRAMS linkiswritten followed bytheLink0dictionary defining eachoftheentrypoints and common blocks andtheiraddresses inthelink. 2.Ifthecurrent linkisnotLinkO,adirectory record containing linknumber, number of segments, andtotallength ofthelinkiswritten asinI.above. 3.Thefirstentry intherootsegment ofeachlinkisatable (LINKO$ forLink0and SEGTAB$ foranyotherlink). Thistableisbuiltandwritten. 4.Executable machine language codeisbuiltandwritten onelogical record persegment. Eachentry (subprogram orcommon block) ineachsegment isexamined. Iftext(forasub- program) ordata(foracommon block) isdefined fortheentry, theobject deckcontaining thetextisreadfromSYSUT2. Address relocation defined inTEXT,FILL,LINK,andREPL tables (seesection 7.2.5) isperformed, andtherelocated textfortheentryiswritten. Ifnotextisdefined fortheentry, zerowords arewritten. 5.Astherelocation oftextisbeingperformed, thestorage mapisprinted on_UTPUT unless N_MAPwasselected. 6.Finally, ifanENTAB$ tableisdefined forthesegment, thetextforthistableis assembled andwritten asthelastentry forthesegment. 7.Whenallsegments forthelinkarecomplete, theXREFoption ontheLINKEDIT card(see section 5.6.4.2) istested. Ifselected, LKED077 (Figure 37,section 7.2.3) iscalled to produce alisting ofallcrossreferences inthelink. 7.2.1.4.6 FinalProcessing Whenprocessing foralllinksiscomplete (theENDLINKS cardhasbeenreadfromINPUT), the status of_UTFILE istested. IfBUTFILE =name(C) wascoded, nofurther processing isrequired. Otherwise, theexecutable program exists asalocalindexed file(SYSUTI) anditisnecessary to write itasasequential fileontheuser-requested file. Thisisaccomplished byLKED080 (Figure 38,section 7.2.3). Whenthelinkhasbeencopied toBUTFILE, amessage iswritten on _UTPUT indicating theevent. 7.2-8(6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 7.2.1.4.7 TheBootstrap Program Thebootstrap program isacomputer program madeupofrelocatable routines whichare appended bythelinkage editor tothebeginning oftheabsolute output ofthelinkage editor. Theseroutines consist of:a)adummyBlockDatasubprogram containing onelabeled common block ofalength sufficient toholdLinkO;b)thebootstrap program driving routine, XB_OT; c)an input/output utility routine XlORTNS; andd)MAPFNS, aroutine containing niscellaneous utility routines forbitmanipulation, fieldlength determination, etc. Thebootstrap program isemployed topermit theexecution oftheabs_l:te output ofthe linkage editor inawaythat requires nospecial handlin oftFejoband_llows thejobtoappear asanyother batch job. Itisasmall program, loaded by_heCDCloader _vhich ifnecessary reads andoutputs tothedisk thesequential linkage editor output inadirect _ccess (random) format. Thebootstrap program alsoreadsintothelocations 778+Ithrough 778+NLink0(Nbeing itslength). Thiscorespaceisavailable because theCDCloader hasplaced thedummyBlockDatasubprogram there. Having completed itsfunction, thebootstrap program callsC_MPASS routine XJUMPin,MAPFNS whichdirects thecentral processor tojumptolocation 1018inthejobscore,whichisinSuper- main, andexecution thencontinues fromthere. Figure 2illustrates corethrough thebootstrap process. Itshould benotedthatforthecompletion ofthisparticular jobstep,execution of thebootstrap program isnolonger required, norisitavailable. 7.2.1.4.8 TheSegment Loader Thebootstrap program isactually theinitial loader ofabsolute object codeasproduced by thelinkage editor. Itdoesinfactload\"Supermain,\" LinkO.Afterthebootstrap program directs thecentral processor tobranch intoSupermain, andexecution proceeds fromthere, any callsfortheloading ofalink’s rootsegment, results inanautomatic transfer intotheseg- mentloader totheentrypointLINK. Similarly, anycallstoasegment lowerinatreeorin another region results inanautomatic callintothesegnent loader totheentrypointLOADER.. Thistypeof\"downward\" callisforced through an_trytableENTAB$ (seesection 7.2.2.7) before reaching thesegment loader atentrypointLOADER. 7.2-9 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 08 778 lO08 IO0+N! Field Length(Core after SCgPE 3 loads thebootstrap program.) 1008words forsystem use. IXB_TBDI Dummy Block DataSubprogram XB_T XIBRTNS MAPFNS SC(_PE routines(Core after execution ofbootstrap program.) Es:entialI.!‘mchanged. Link0 Segment 1 (nowexecuting) “Supermain” loading of Figure 2.Corebefore andaf:er execution ofthebootstrap program. 7.2-9a (611171)\nNASTRAN SUPPORT PROGRAMS CallsmadetoLINKfromanysegment, anywhere incore,result inthesegment loader first checking thelinknumber forlegitimacy. Theindexes ofrelative diskaddresses forthesegments ofthelinkdesired isthenreadfromthedisk. Alinkdirectory isthenreadfromthediskand further legitimacy checks aremadealongwithachecktoinsure thatsufficient coreisavailable fortheloading ofthelowest segment ofthelink. Aftersuccessfully completing thesetasks, therootsegment ofthenewlinkisreadintocore, andabranch ismadetoitsentrypointandexecution oftheprogram continues. Downward callsreaching theentrypointL_ADER. viaanENTAB$ tableresult inaseries of conditional events bythesegment loader. Theloader firstchecks toseeifthesegment towhich thecallisdirected isincore. Ifthesegment isnotincore,itisloaded alongwithany segments aboveandinitspathasrequired. Oncethesegment isdetermined tobeincore,any argument addresses oversix(which areassigned toBregisters B1through B6bytheRUNcompiler generated code)aremovedfromtheENTAB$ entry andplaced intheactual subroutine beingcalled alongwiththeactual branch return. Ajumpisthenmadetothedesired entrypointtocomplete theautomatic loading process. Returns fromanycalled control section arealways madedirectly tothepointfromwhichthecallwasmade. 7.2.1.5 Linkage Editor Files 7.2.1.5.1 InputFiles Therearethreetypesoffilesthatmaybeinputtothelinkage editor. Theyare: I.Libraries. Allobject decksthataretobeprocessed bythelinkage editor arecon- tained inlibraries. Alibrary isdefined tobeasequential file(which mayreside ontape ordisk)consisting ofoneormorelogical records withoneobject deckperlogical record. Thenamesofthelibrary filesaredefined ontheLIBRARY control statement (seesection 5.6.4.2). AfilenamedLINKLIB mustalways exist forlinkage editor processing. LINKLIB contains object decksforautomatic library callplusobject deckswhich arerequired in constructing theinitial loadportion (bootstrap program) oftheexecutable program. There isnotheoretical limittothenumber oflibraries whichmaybedefined forlinkage editor processing. Subprograms ofthesamenamemayappear inmorethanonelibrary oreveninthe samelibrary. Inthelatter case,thefirstsuchsubprogram isincluded. 7.2-I0 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 2.Control statements. Statements which direct andcontrol processing bythelinkage editor arecontained asasingle logical record onthefilenamed INPUT. INPUT mustbe positioned tothelogical record containing thecontrol statements prior toexecuting the linkage editor. Foracomplete description ofthelinkage editor control statements, see section 5.6.4. 3.Previously link-edited links. Thisinput source isoptional andisrequired onlyifthe userdesires tomodify anexisting link(other thanLinkO)oraddanewlinktotheprogram. Thenameandstatus ofthisfile isdefined bytheINFILE keyword ontheLINKEDIT control statement (seesection 5.6.4.2). Itmaybeasequential fileontapeordiskoranindexed fileondisk. 7.2.1.5.2Local Files These maybeone,twoorthree local files generated bythelinkage editor during processing. Afilenamed SYSUT2 isalways generated. Itisanindexed fileandcontains allobject decks fromalldefined libraries (including LINKLIB). When thefileisbeing generated, adirectory of subprogram names aswell asalistofallentry points inLINKLIB isextracted andmaintained in working storage. Ifeither INFILE or_UTFILE isdeclared asacommon (indexed) file, then a second local filedoesnotexist (note that ifboth INFILE and_UTFILE aredeclared common files, theymust bethesame file). Otherwise, alocal filenamed SYSUTI isgenerated asanindexed filetocontain eachofthelinks astheyareconstructed. IftheXREFoption isselected onthe LINKEDIT control statement (seesection 5.6.4.2), asequential filenamed SYSUT3 iswritten by LKED075 andreadbyLKED077 (seeFigure 37,section 7.2.3). This filecontains information regarding calls madebyeachsubprogram andisusedbyLKED077 toproduce across reference listing. 7.2.1.5.3 Output Files There aretwofiles output bythelinkage editor. Oneisafilenamed _UTPUT which contains alisting ofcontrol statements, messages, astorage map,andacross reference dictionary. Most items scheduled forOUTPUT areselectable (orsuppressed) byoptions ontheLINKEDIT control statement. Thesecond output filecontains theexecutable program. Itmaybeasequential file ontapeordisk, oranindexed fileondisk. Itsname andstatus aredefined bytheOUTFILE key- word ontheLINKEDIT control statement. 7.2-11 (611171)\nNASTRAN SUPPORT PROGRAMS 7.2.1.5.4 Input/Output Flow Theflowofinformation between thefilesofthelinkage editor andthelinkage editor phases isillustrated inFigure 3.Thegeneral caseisshownwherebothINFILE and_UTFILE aresequential files. Dataflowthrough SYSUT3 isnotillustrated (XREFcaseonly). 7.2.1.6 Organization oftheLinkage Editor 7.2.1.6.1 MajorRoutines Therelationship ofthesixprincipal phases (major divisions) ofthelinkage editor discussed insection 7.2.1.5 isillustrated inFigure 4.Ifsymbol (e.g., arectangular box)oftheflow- chartisidentified byasymbolic nameaboveandneartheleft-hand edgeofthebox,thebox represents asubroutine callandthesymbolic nameisthesubroutine name. Thisconvention isalso followed insection 7.2.3. Section 7.2.3givesdetailed flowwithin eachoftheprincipal phases of thelinkage editor. Thisprocessing isexecuted inFORTRAN routines whose namesareoftheform LKEDxxx where 000\u003cxxx\u003c099.The\"main\" (intheFORTRAN sense) program ofthelinkage editor isLKED. Buffers forF_RTRAN filesINPUTandOUTPUT arelocated within thisprogram. LKEDO00 has twofunctions: a)provide themajor flowofcontrol; andb)process thecontrol statements. Communication between routines occurs through namedcommon blocks (seesection 7.2.1.6.3) and tables inworking storage (seesection 7.2.1.6.4). 7.2.1.6.2 Subroutines Subroutines ofthelinkage editor areclassified infourcategories: I.Majorsubroutines. ThesearecodedinF_RTRAN andarenamedLKEDxxx whereI00_xxx_299. Ingeneral, thesesubroutines perform various operations onthetables inworking storage. Detailed subroutine descriptions formajorsubroutines aregiveninsection 7.2.4.1. 2.Linkage editor utilities. Theseroutines areCOMPASS routines whose namesarerelated tothefunction theyperform. Theyareallentrypoints insubprograms whosenames areof theformLKEDxxx where 300\u003cxxx\u003c399.Mostofthese routines perform tasksdirectly related tothelinkage editor suchasmanipulating thevarious fields ofatableentry. Detailed subroutine descriptions forlinkage editor utilities aregiven insection 7.2.4.2. 7.2-12 (611/71)\nNASTRAN SUPPORT PROGRAMS e- ,-“GI_I/l e.-, I,.i.O $.,. tI ,–4 I Oe- ,,I 0U ,—0 QJS-. tI Iu,)r-r- ,,::Ln0 ,,:__),… tI e- •.Q_oU0 S- O I r I_V°°JL3 g_ I -°” II’.- I– 0e-r, Q.I0 GJ_ X We- (’-.I– 0fl 0 Z CI 0.- 0-I-,_,- e-0 4-) -’CLI Q.,- =_14. 0J 0 _. 0 GJ 7.2-12a (6/I/71)\nNASTRAN SUPPORT PROGRAMS LKEDO00LKED I SetFieldLength ForStep I IReadLINKEDIT Statement LKEDOIO I CopyINFILE toSYSUTI 1 LKEDOI5 ReadLIBRARY Statement and CopyAllSubprograms toSYSUT2 il ReadNextControl Statement ] n, Yes Control Statement Processing ForOneLinkI LKED025 I Object DeckProcessing I LKED050 I I LKED075 _I i Relocation Processing iAddress Assignment Processing LKED080 [ FinalProcessing I Figure 4.General flowofthelinkage editor. 7.2-12b (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 3.General utilities. These routines areC_MPASS andFBRTRAN routines whose primary functions aregeneral innature andnotlimited tolinkage editor applications. Several of these routines arealso common with theNASTRAN program (e.g., XRCARD). Nonaming convention exists. General utilities aredescribed insection 7.2.4.3. 4.Miscellaneous. These aresubroutines written primarily inFBRTRAN which perform auxiliary tasks forthelinkage editor. Thenaming convention isLKEDxxx, where 900_xxx_999. An example isLKED990, aroutine which abnormally terminates thelinkage editor intheevent of aerror inthelogic (i.e., an\"unplanned\" event). Subroutine descriptions formiscellaneous routines aregiven insection 7.2.4.4. 7.2.1.6.3 Named Common Blocks There areseven named common blocks inthelinkage editor which provide forcommunication of parameters andfixed length tables between thevarious subprograms ofthelinkage editor. Abrief description ofthese common blocks follows: I.LKEDCOI. Defines pointers totables andparameters defining table sizes inopen-ended working storage (blank common). 2.LKEDC02. Defines fixed-size working storage areas. 3.LKEDC03. Defines linkage editor control parameters. 4.LKEDC04. Defines names, characters, masks, andmiscellaneous data. 5.LKEDC05. Defines data forgenerating instructions, programs, etc. 6.LKEDC06. Ascratch area forsharing storage oflocal variables between independent programs inthelinkage editor. 7.LKEDC07. Defines thenames ofsubprograms onLINKLIB which comprise thebootstrap program. Section 7.2.6 gives definitions oftheprincipal variables inthese common blocks. 7.2.1.6.4 Working Storage Allopen-ended (variable length) tables arestored inblank common. Since theCDCloader loads blank common last, thedimension ofblank common is,effectively, itsorigin tothefield length. Section 7.2.2.1 provides acomplete description ofthelinkage editor tables. 7.2-13 (611171)\nNASTRAN SUPPORT PROGRAMS 7.2.2 Discussion oftheMajor Divisions oftheLinkage Editor/Loader 7.2.2.1 Linkage Editor Tables 7.2.2.1.I Introduction totheTables Allopen-ended working storage tables forthelinkage editor areheld inblank common. Since theCDCloader loads blank common last, storage fromthebeginning ofblank common tothefield length isavailable. Theusermaychoose afield length forthelink-edited stepasafunction of therequirements oftheproblem. (Foranestimate ofstorage requirements forthelinkage editor, seesection 5.6.6). Figure 5illustrates thearrangement ofthetables inblank common. (Table pointers arediscussed later inthissection). Thetechnique bywhich symbolic entries (e.g., entries intheRename Table andGeneral Table) arelocated inatable involves “hashing.” Thehashnumber ofasymbol isdefined asthemodulus (remainder upondivision) ofthenumerical value ofthesymbol ofand(by)thenumber ofentries available inthetable. Forexample, assume thatthere are128entries inatable. Then thehash number ofthesymbol KREDNER is1228 (note thatKREDNER=132205041605228) attheentry towhich 1228points isstored apointer tothebeginning ofachain ofentries with thehashnumber of 1228. Thatchain might contain onlytheentry corresponding toKREDNER, orthere might beseveral entries inthechain. Todetermine ifanentry forKREDNER isalready inthetable, each entry inthechain which begins attheentry towhich 1228points ischecked. Entries intheGeneral Table arechained inmanyways. Entries with identical hashnumbers isoneexample ofchains. Another includes allentries belonging tothesame segment. Inthis case, aforward aswellasbackward chain iskept. Aforward chain pointer points tothenext entry inthechain. Abackward chain pointer points totheprevious entry inthechain. By convention, anypointer which hasthevalue ofzeroindicates thebeginning orendofachain as thecasemaybe. Thisparagraph defines theword “pointer.” Aspreviously mentioned, allworking storage tables arestored inblank common; thearray name universally usedinthelinkage editor forblank common isZ.Thefirst word intheSegment Definition Table isZ(ISEGDEF). Apointer, P,to the5thsegment would havethevalue 5.Thusthereference would beZ(ISEGDEF+P-I). Pointers always havetherange l\u003cP\u003cLASTENT, where LASTENT, apointer, points tothelastentry inthe 7.2-14 (611171)"},"title":"Programmer's Manual P96"},"/docs/programmers/programmers_manual_097/":{"data":{"":"NASTRANSUPPORTPROGRAMS Table Pointer ISYSUT1 ISYSUT2 IBUFI IMASTER ISEGNDX ILIB IINDEX INAMES IEPS IREGDEF ISEGCHN ISEGDEF IRENMO ITABO IDECK ITEXT ZENDTable Name Buffer l Buffer 2 Buffer 3 LinkIndex Segment Index Library Table (LT) DeckIndex Subprogram Names Table (SNT) Entry Point Table (EPT) Region Definition Table (RDT) Segment Chains Table (SCT) Segment Definition Table (SDT) Rename Table (RT) General Table (GT) Object Deck Storage TextBuilding StorageTable Lenqth PARAM(I ) PARAM(I ) Seesection PARAM(I )5.6.4.2 PARAM(4) PARAM(5) (Number oflibraries _(including LINKLIB) +l Number ofobject decks inalllibraries SameasDeck Index Number ofentry points inLINKLIB Number ofregions Number ofsegments +l Number ofsegments +l 3*(number ofRENAMEs) Remaining storage after allother tables are allocated l2*PARAM(3) atfirst, largest object deck table sizelater Maximum textlength Figure 5.Arrangement oflinkage editor tables inworking storage (blank common). 7.2-14a (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR table.Ifthenumberofwordsperentryisn,thenP-lisalwaysdivisablebyn.Mosttablesare referenced bythe\"zero\"wordinthetable,e.g.,theentriesintheSegmentDefinition Tableare referenced relativetoISEGO=ISEGDEF -l. 7.2.2.1.2 Library Table (LT) no.ofwords perentry: l no.ofentries: oneentry foreach filenamed onLIBRARY control statements plusone. first constructed by:LKEDOI5 description: eachentry contains thefilenameofthelibrary andapointer totheentry in theSubprogram Names Table which corresponds tothefirst subprogram inthelibrary. LINKLIB isalways thefirst entry inthetable. Theadditional entry inthetable issothatanytwo adjacent entries inthetable will delimit alibrary. format: Library name 59 17 0 P:pointer totheentry inSubprogram Names Table forthefirst subprogram inthislibrary. 7.2.2.1.3 Subprogram Names Table (SNT) no.ofwords perentry: l no.ofentries: oneentry foreachsubprogram ineach library named ontheLIBRARY control statement plusoneentry foreachsubprogram inLINKLIB. first constructed by:LKEDOI5 description: eachentry contains asubprogram name format : 59Subprogram name 17 0 7.2-15 (6/I/71)\n7.2.2.1.4 Entry Point Table (EPT)NASTRAN SUPPORT PROGRAMS no.ofwordsperentry: 1 no.ofentries: oneentryforeachentrypointinLINKLIB first constructed by:LKEDOI5 description: eachentrycontains thenameofanentrypointandapointer totheentry in theSubprogram NamesTablewhichdefines thesubprogram inwhich theentrypointisdefined. format: Entrypointname 59 P=pointer inSubprogram NamesTable 7.2.2.1.5 Region Definition Table (RDT) no.ofwordsperentry: 1 no.ofentries: oneentryforeachregion intheLink firstconstructed by:LKEDO0017 0 description: eachentry contains thefirstandlastsegment numbers intheregion and,after LKED050 isexecuted, theinitial address intheregion. format : Segl [Segn 59 44 SegI=firstsegment number inregion Segn=lastsegment number inregion A=initial address inregion29 17 7.2-16 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGEEDITOR 7.2.2.1.6 Segment Chains Table (SCT) no.ofwords perentry: 1 no.ofentries: oneentry foreach segment intheLinkplusone first constructed by:LKEDO00 description: eachentry contains twopairs ofpointers toentries intheGeneral Table. The first pairofpointers points tothefirst andlastentries inthechain which defines all sy_olic entries inthesegment. Thesecond pairpoints tothefirst andlastentries ina chain ofcalls which arenotinthepath. This latter chain willeventually become the ENTAB$ table forthesegment.Thelastentry intheSegment Chains Table isthe\"undefined\" segment. Theundefined segment isachain ofentries which isgenerated byexternal references tosy_ols notyetdefined intheGeneral Table. Whenasymbol intheundefined chain becomes defined, itisremoved fromtheundefined chain andlinked toitsappropriate segment chain, consequently, whenalldecks havebeenprocessed, anysy_ols remaining intheundefined chain, iftheyaretobedefined, mustbedefined inLINKLIB. Theautomatic calllogic attempts todefine allsuchundefined sy_ols fromLINKLIB. forn_t: IPslIPs.I59 44 29 PSl=pointer tofirst entry insegment chain PSn=pointer tolastentry insegment chain PCl=pointer tofirst entry incallchain PCn=pointer tolastentry incallchainPCl IPCn 14 0 7.2.2.1.7 Segment Definition Table (SDT) no.ofwords perentry: l no.ofentries: oneentry foreachsegment intheLinkplusone first constructed by: LKEDOOO 7.2-17 (6/I/71)\nNASTRAN SUPPORT PROGRAMS description: initially, theSegment Definition Tablecontains thenameoftheoverlay seg- mentasrecorded onthe_VERLAY control statement (seesection 5.6.4.7) andthesegment number oftheprevious segment inthepath,i.e.,the\"parent\" ofthecurrent segment. After address assignment processing inLKED050, eachentrycontains theinitial address inthe segment, thelength ofthesegment, theregion number ofthesegment, andthesegment number oftheparent ofthesegment. TheSegment Definition Tableinitssecond format becomes the principal partoftheSEGTAB$ tableatexecution time. format: Before address assignment processing: 59Overlay name ////_PREV 17 II 0 PREV=segment number ofprevious segment inpath(i.e., parent ofsegment) Afteraddress assignment processing: A L 5953 35 A=initial address inthesegment L=length ofthesegment R=region number ofthesegment PREV=segment number oftheparent ofthesegment 7.2.2.1.8 Rename Table (RT) no.ofwords perentry: 3 no.ofentries: current link.IRPREV I 17II 0 oneentryforeachRENAME control statement (seesection 5.6.4.9) inthe firstconstructed by:LKEDO00 7.2-18 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR description: each entry contains adescription oftheinformation coded onaRENAME control statement plus information tochain theentries together. During processing, each external reference appearing inaLINK Table (see section 7.2.5) ischecked forpossible rename in this table. format: Oldname P1 Subprogram name PN Newname PS 59 7 0 Pl=pointer tofirst entry intable with hash number ofthis entry PN=pointer tonext entry inhash chain PS=pointer tonext entry with same oldname. 7.2.2.1.9 General Table (GT) noofwords perentry: 3 no.ofentries: oneentry foreach subprogram, alternate entry point andcommon block inthe Link plus, ifnotLink O,oneentry foreach entry point andcommon block inLink O,plus one entry foreach “tentative” call inthepath (calls which, atthetime encountered, areeither notinthepath orareundefined). Thenumber of\"tentative\" calls notinthepath usually exceeds theactual number ofcalls notinthepath. first constructed by: LKEDO00 description: theGeneral Table isthetable central toalllinkage editor processing. There aretwokinds ofentries intheGeneral Table: a)asymbol entry which includes subprogram names, alternate entry points andcommon blocks andwhich describes various characteristics such aslength, number ofarguments, segment number, chain pointers, etc., andb)acall entry which describes characteristics about acall toasymbol. These characteristics include the 7.2-19 (611171)\nNASTP_ANSUPPORTPROGRAMS thesegmentfromwhichthecallcomes,chainpointers,etc.Symbolentriesaregeneratedin thefollowingways: I.Subprogram namesdefinedonINCLUDEcontrolstatements (seesection5.6.4.5) 2.AlternateentrypointsdefinedintheENTRTable(seesection7.2.5)ofincluded subprograms. 3.CommonblocknamesmentionedonINSERTcontrolstatements ordefinedintheLCTofa PIDLTable(seesection7.2.5)ofanincludedsubprogram. 4.Externalreferences definedinLINKTables(seesection7.2.5)ofincludedsubprograms. 5.EntrypointorcommonblocknameinLinkOwhenprocessing alink_O. Acallentryisgeneratedinoneoftwoways: (1)Whenthesymbolcalledisnotinthepath (2)Whenthesymbolcalledisundefined. Symbol Entryformat: Symbol name ]LA P1 SS A INDEX R L PC PN G SEG A PREV NEXT 59 47 29 17 14 0 Symbol name =name ofsubprogram orentry point orcommon block CLASS =code defining entry 0=Link 0symbol when Link _0 l=Subprogram name (primary entry point) 2=Common block 3=Alternate (secondary) entry point 4=Subprogram marked forinclusion onINCLUDE card 5=Block data program marked forinclusion 7.2-20 (6/I/71)\nPl INDEX ARG ARG Pc PN SEG A PREV NEXTDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 6=Callentry (seebelow forformat) 7=undefined entry =pointer tofirst entry with hashnumber ofthisentry =Record number (index) ofsubprogram containing text (data) forthisentry. =Bitwhich defines Pcentry(before execution ofLKED050) 1:Pc 0:Pc =bitdefining address assignment status (during andafterexecution ofLKED050)=number ofarguments forprimary oralternate entry point =pointer tofirst entry incallchain. forCLASS =lentries only l:final address hasbeenassigned O:final address notyetassigned =depends onCLASS CLASS =l,2:L=Length CLASS =3:L=pointer toCLASS =lentry CLASS =4,5:L=pointer tolibrary nameinLibrary Table =depends onARG ARG=l:P=number ofargumentsc ARG=O:Pc=pointer tofirst entry incallchain =pointer tonextentry inhashchain =number ofsegment towhich thisentry belongs =relative andthenfinal address ofthisentry =pointer toprevious entry inthissegment =pointer tonextentry inthissegment 7.2-21 (611171)\nCallEntry:NASTRANSUPPORTPROGRAMS PREV NEXT NBRARG FROM PFR_M PNEXT JJJYJJJJ./‘JY/Y/ 59 44 29 PREV =pointer toprevious entry incallchain NEXT =pointer tonextentry incallchain NBRARG =number ofarguments passed tosymbol called CLASS P1 FROM PFROM PNEXT PSYM A=6 =pointer tofirst entry inhashchainSLAP1 SS PSYM 1714 =segment number ofsubprogram making call =pointer toprevious entry in’FRBM’ segment chain =pointer tonextentry in’FROM’ segment chain =pointer toentry defining symbol called =relative/final address ofENTAB$ entry (seesection 7.2.2.7). 7.2.2.1.I0 XREFTable no.ofwords perentry: 3or6depending onCLASS no.ofentries: one3-word entry foreachentry point inthelinkplusone6-word entry for eacheleven calls fromagiven subprogram toagiven entry point. first constructed by:LKED077 description: thistable isgenerated only iftheXREFoption isselected ontheLINKEDIT control statement (seesection 5.6.4.2). Theorigin ofthetable isthesameastheRegion Definition Table (seesection 7.2.2.1.5) andthetable extends totheendofworking storage (ZEND). There aretwotypes ofentries inthetable: (1)entry point entry which defines 7.2-22 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR anentrypointanditsaddressandpointerstothechainsemanatingfromtheentryand, (2)acallentrywhichdefinesuptoelevencallsfromasubprogram totheentrypoint.A callentryisasubservient entrytoaentrypointentry(i.e.,eachentrypointentryhas achainofcallentrieslinkedtoit).Information togeneratetheentriesiscreatedfrom theENTRandLINKTables(seesection7.2.5)ofeachofthesubprograms tobeincludedduring processing inLKED075. format: 59 CLASS=class ofentry =l Pl A PN PCl PCN PREV NEXTTheinformation ispassed toLKED077 onascratch file. Entrypointname PC1 PCN 4744 =pointer tofirst entry inhashchain =address ofentry point =pointer tonextentry inhashchain_‘L P1 ASS PREV NEXT 29 17 14 =pointer tofirst entry incallchain =pointer tolastentry incall chain =pointer toprevious entry inlistchain (i.e., chain ofentry points) =pointer tonextentry inlistchain 7.2-23 (611171)\nNASTRAN SUPPORT PROGRAMS XREFEntry Subprogram name 04I//I/ Cl0 5953 35C2CL P1 ASs PREV NEXT C3 C5 C6 C8 Cl1 29C9 17 14 0 CLASS:classofentry=2 P1 N PREV NEXT Ci=pointer tofirstentry inhashchain =number ofCiinthisentry (I\u003cN\u003cII) =pointer toprevious entry inthiscallchain =pointer tonextentryinthiscallchain =relative location within subprogram namedinthisentryofacalltotheentry pointtowhichthisentry ischained. 7.2.2.2 Sample Problem forDiscussion Tofacilitate discussion ofthemajor divisions oflinkage editor processing, asample problem hasbeenchosen. Theparticular problem illustrates mostofthefeatures oflinkage editor processing andwasactually theprincipal testproblem during initial checkout ofthelinkage editor. Figures 6through 17showlistings ofthemainprogram andthesubprograms. 7.2-24 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 20 123PROGRAM MAIN(_UTPUT,TAPE6=gUTPUT) CCMM_N/C_MO/JD C_MM_N/C_M3/J3 LENGTH =0 CALLFIELDLN( LENGTH ) CALLZAP F=28,4 PRINT 2O,F,F F_RMAT(I,E20,6,F2O,6) PRINT 123 CALLLINK( l) PRINT 123 F_RMAT(DCALLING LINKl) ST_P END Figure 6.Sample mainprogram. BL¢CK DATAPRT C_MM_N/CgMI/II C_MM_N/C_M2/12 C_MM_N/C_M4/14 CBMM_N/CBM5/15,KEITH(4) CgMM_N/CBM6/16 DATA ll,I2, I4,I5,16/71,72,74,75,76/ DATAKEITH/-I,-2,-3,-4/ END Figure 7.Block datasubprogram PRT. 7.2-25 (6/I/71)\nNASTRAN SUPPORT PROGRAMS SUBROUTINE PRTO COMM_N/COMO/JO COMM_N/COM3/J3 I:I I=I+I PRINTI00,l,JO I00FORMAT(*OPRTO CALLED *,2024) CALLPRTI(I) II=I001 12=1002 13=1003 14=1004 15=1005 16=1006 17=lnn7 18=1008 19=1009 II0=I010 III=I011 CALLPRT8(I,II,12,13,14,15,16,17,18,19,110,111) PRINT222,11,12,13,14,15,16,17,18,19,110,111 222FORMAT(1516) CALLPRT2( I) I=I+1 PRINTI00,l,J3 CALLXDUMP( OB,IO0000B, 0) IF(ao,NE,0)CaLLLINK(2) JO=7 CALLLINK(7) STOP END Figure 8.Subroutine PRTO. SUBROUTINE PRTI(1) C_MMON/COMI/JI I=I+1 PRINTI00,l,Jl Jl=I01 I00FORMAT(*OPRTI CALLED *,2024) CALLPRT7(I) RETURN END Figure 9.Subroutine PRTI. 7.2-26 (6/I/71)\nDESIGNOFTHECDC6400/6600 LINKAGE EDITOR I00SUBROUTINE PRT2(I) COMMON/COM2/J2 I=I+l PRINT lO0, I,J2 J2=I02 FORMAT(*OPRT2 CALLED *,2024) CALLPRT3( i) CALLPRT5( !) CALLPRT4( I) RETURN END Figure lO.Subroutine PRT2. SUBROUTINE PRT3(I) COMMON/COM3/J3 I=I+l PRINT lO0,I,J3 J3=I03 lO0FORMAT(*OPRT3 CALLED *,2024) CALLPRT4(I) RETURN END Figure II.Subroutine PRT3. SUBROUTINE PRT4(I) COMMON/COM4/J4 I=I+l PRINT IO0,I,J4 J4=I04 I00FORMAT(*OPRT4 CALLED *,2024) CALLPRT7(1) RETURN END Figure 12.Subroutine PRT4. lO0SUBROUTINE PRT5(1) COMMON/COM5/J5 I=I+l PRINT IO0,I,J5 J5=I05 F(BRMAT(*OPRT5 CALLED *,2024) RETURN END Figure 13.Subroutine PRT5. 7.2-27 (6/I/71)\nNASTRAN SUPPORT PROGRAM,S SUBROUTINE PRT6(1) COMMON/COM6/J6 I=I+l PRINT lO0,I,J6 J6=I06 lO0FORMAT(*OPRT6 CALLED *,2024) RETURN END Figure 14.Subroutine PRT6. SUBROUTINE PRT7(1) COMMON/COM3/J3 COMMON/COM7/J7 I=I+l PRINT lO0,I,J7 I=I+l PRINT lO0,I,J3 J7=I07 lO0FORMAT(*OPRT7 CALLED *,2024) RETURN END Figure 15.Subroutine PRT7. SUBROUTINE PRT8(I,II,12,13,I4,15,16,17,I8,19,110,111) COMMON/COM6/J6 COMMON/COM8/J8 PRINT 222,ll,I2,13,I4,15,I6,17,I8,19,110,Ill 222FORMAT(1516) II=2001 12=2002 I3=2003 I4=2004 15=2005 16=2006 17=2007 18=2008 19=2009 llO=2010 Ill=2011 I=I+l PRINT lO0, I,J8 lO0FORMAT(*OPRT8 CALLED *,2024) CALLPRT9( I) CALLPRT6(1) I=I+l PRINT lO0, I,J6 RETURN END Figure 16.Subroutine PRT8. 7.2-28 (611/71)\nNASTRANSUPPORTPROGRAMS SUBROUTINE PRT9(I) C_M_4BN/C_M9/J9I=I+l PRINTlO0,I,J9J9=I09 lO0F_RMAT(*OPRT9 CALLED *,2_24) RETURN END Figure 17.Subroutine PRT9. Figure 18illustrates theoverlay treefortheexample problem. Eachoftheobject decks forthesample problem isassumed toreside inafilenamed _BJ. Thelinkage editor control statements tobuild anexecutable program corresponding tooverlay tree inFigure 17aregiven inTable I. 7.2-28a (611171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR Tablel(a).LinkageEditorControlStatements forSampleProblem. LINKEDIT LET,_UTFILE:ABS(T),XREF,PARAM(7)=3 LIBRARY _BJ LINK 0 RENAME XDUMP=XTRACE RENAME SYSTEM=SYSTEM INCLUDE _BJ(MAIN) INSERT C_MO INSERT C_M3 ENTRY MAIN END LINK l RENAME XDUMP=XTRACE INCLUDE _BJ(PRTO) INCLUDE _BJ(BLKDATA(C_MI) _VERLAY AOOOOOA INCLUDE _BJ(PRTI) INSERT CBMI _VERLAY AOOOOOA INCLUDE _BJ(PRT2) INSERT CBM2 _VERLAY BOOOOOB INCLUDE _BJ(PRT3) INCLUDE _BJ(PRT4 INSERT C_M4 _VERLAY BOOOOB INCLUDE 9BJ(PRT5) INSERT C9M5 REGIgN 9VERLAY CO0000C INSERT C9M6 7.2-29(6/I/71)\nNASTRAN SUPPORT PROGRAMS Tablel(a). Linkage Editor Control Statements forSample Problem. INCLUDE PRT6 OVERLAY DOOOOOD INCLUDE _BJ(PRT7) INSERT C_M7 _VERLAY DOOOOOD INCLUDE _BJ(PRT8) INSERT C_M8 INCLUDE _BJ(PRT9) INSERT C_M9 ENTRY PRTO END ENDLINKS 7.2-30 (6/I/71)\nDESIGNOFTHECDC6400/6600 LINKAGE EDITOR Link0 Link1AOOOOOA PRTI IC_MIIMAIN IC_MOI /C_M3/ PRTO CO0000C (REGION) DOOOOOD PRT7 /CBM7/BOOOOOB PRT3 PRT4 /C_M4/ IC_M6/ PRT6PRT2 IC_M2/ PRT8 /C_M8/ PRT9 /C_M9/PRT5 /C_M5/ Figure18.Overlay treeforsample problem. 7.2-31 (611171)\nNASTRAN SUPPORT PROGRAMS 7.2.2.3 Initial Processing Theflowoftheinitial processing phaseofthelinkage editor isshowninFigure 31. NotshowninFigure 31istheprogram whichreceives initial control whenthelinkage editor isexecuted. Thefunctions ofthisprogram, LKED,aretoestablish buffers forINPUTandBUTPUT (through SCOPEroutine Q8ENTRY), setthefieldlength forexecution inwords 638and768(through routine FIELDLN), andcallLKEDO00. Ifthelinkage editor hasitself beenlinkedited, thenthe calltoLKEDO00 isrenamed toLINKandLKEDO00 becomes theentrypointinLinkI. INPUTisassumed tobepositioned atthebeginning ofalogical record whichcontains the linkage editor control statements. AcardisreadfromINPUT(viaFORTRAN formatted readroutines) andconverted byXRCARD. IfthiscardisnottheLINKEDIT control statement, orifthecontrol statement contains anerror, execution ofthelinkage editor isterminated. Inthesample problem Table I,section 7.2.2.2, thevariable LETissetto.TRUE., thename ABSisstored inthevariable OUTFILE, Tisstored inthevariable _UTSTAT, thevariable XREFis setto.TRUE., andthe7thwordofthearrayPARAMissetto3.SinceINFILE isnotdefined, LKEDOIO isbypassed andLKEDOI5 iscalled toprocess theobject decklibraries. Following conversion oftheLIBRARY statement, theLibrary Table (LT),section 7.2.2.1.2, appears asfollows: LINKLIB 1 OBJ 0 0 0 59 17 0 Theobject deckindex, Subprogram NamesTable(SNT) (section 7.2.2.1.3), EntryPointTable (EPT)(section 7.2.2.1.4) andobject deckstorage tableareallocated inworking storage based on:PARAM(2) fortheobject deckindexandSNT;PARAM(3)+PARAM(6) forobject deckstorage table; andallremaining storage fortheEPT(see5.6.4.2 foradiscussion ofthePARAMarray). Working storage atthispointisasfollows: 7.2-32 (6/I/71)"},"title":"Programmer's Manual P97"},"/docs/programmers/programmers_manual_098/":{"data":{"":"","0#..\nI\nI\nIUl\nIm.I\nml\nII\n¢\u003cem\u003eo\n\u0026lt;[I\nUl \u003cem\u003ec\nJI\n(JI\n1:1 c_o\n\u003cem\u003eDi(\u003cem\u003eo\nZI olo\nt\u003c/em\u003e! olo\u003c/em\u003e! oto\n0,.! C.lO\nT\nT\n\u003cem\u003eq\nJ\n°II\n0\nn\nu_ItI\nI\nI\nf\u003c/em\u003e\nb.\u0026ndash;\nZ\n\u003cem\u003eJ\n(D\nOc\n0\nb..\nZ\n\u0026lt;[\nZ\n(..)\n..J\nO\nlID\n,..\nin\nI\nI\nIz,,-\u003cem\u003eo1\u0026rsquo;-\n!\nm.m\n\u0026ldquo;iZ\n\u0026ldquo;ro\nU\n1.5\n|\nk-\nZ\ni\niz\n\u0026lsquo;)\n!7lr\nLJ\nJ\nJ\nbJ\nZ\n7\nlu*oo\ni\nt\ni\noo!oo\nIoo\nI\nI.t!\nU\nii\nfill\nI,.,i\nI\nUl\n\u0026ldquo;Gt\nzi\nJ\u003c/em\u003e\n.J\u003c/em\u003e\n¢.11\nIt\u0026ndash;i\nZi\nU.il\n..11\ni\n!\n,\u003cem\u003e1i\n\u0026lsquo;?ilg,\nZ .J\n_ U\nU _\nQ:\nI,-\nZP\u0026rsquo;-IO ot\not,\u0026hellip;,e\nCI\u003c/em\u003e\u0026lsquo;N\noa\nmml\nolool\nolool\no1oo1\n\u0026lt;H\u0026lt;I\u0026rdquo; ,el\nI\nolool\nI\noio,oi\nOlo\u003c/em\u003e(\nOlo_l\nOl\u003c/em\u003e)o]\notc) Ol\nIolo=i\nOlO o\n•,\u0026lsquo;Il,tl\u0026rsquo;-\n_I,,1\u0026quot;4-\nI,\u0026ndash;ll,,,\u0026ndash;\n\u003cem\u003e1rt\u0026quot;0\nli.IG.U\n,,i\u0026rsquo;ll\u0026rdquo;..o\nC,IC,-,\u0026rsquo;,,I\nl\u0026quot;ill\u0026rsquo;\u003c/em\u003e\u0026rsquo;lI\nI\nII\nunl\ni\u0026ndash;i\nZ!\nklJ\n:E\nI.m.l:\ncr\nO\n$.1..\nZ\ni..Wl\n\u0026ldquo;1\u0026rdquo;\nU\n.J\n0":"DESIGN OFTHECDC6400/6600 LINKAGE EDITOR ISYSUTI ISYSUT2 ISYSL_3 IMASTER ISEGNDX ILIB INDEX INAMES IEPS IDECK ZENDBuffer l Buffer 2 Buffer 3 Master Index Segment Index Library Table Object Deck Index Subprogram Names Table Entry Point Table Object DeckStorage-3*PARAM(1) IPARAM(4) PAR_M(5) 3Words PARAM(2) PARAM(2) Remaining Storage IPARAM(3) +PARAM(6) LINKLIB isopened toread. Foreachobject deckinLINKLIB: I.thePIDLTable islocated (seesection 7.2.5) 2.thesubprogram nameisextracted andstored intheSNT’ 3.theENTRTable islocated (seesection 7.2.5) 4.eachentry point nameisextracted andstored intheEPTwithapointer tothesubprogram nameintheSNT. When anend-of-file isencountered, LINKLIB isclosed, _BJisopened andprocessing similar to LINKLIB occurs except thatnoentries aremadeintheEPT. When_BJhasbeenprocessed, thetables will appear asfollows: 7.2-33 (611171)\nILIB IINDEX INAMES IEPSNASTRAN SUPPORT PROGRAMS ILINKLIB III I_B_ I_°3I XBOOT XLOADER XIORTNS XEOF0 0 0 0 LINE NUMBER MAIN LINK BLKDATA PRTO PRT8 PRT9 XBOOT LOADER. LINK XTRACE XDUMP0LINKLIB OBJ 7.2-34 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR PriortoreturningcontroltoLKEDO00,LKEDOI5compresses theSNTandEPTbasedonactual sizes. 7.2.2.4ControlStatementProcessing Foragivenlink,twopassesaremadethroughthecontrolstatements. Onthefirstpass,the formatofeachstatementischeckedandcountsofthevarioustypesofstatements areaccumulated. Thecardimagesarestoredinworkingstoragefromtheend(startingatZEND-7)andworkingtoward thebeginningusing8wordspercard.Attheendofthefirstpass,allremainingtablesare allocatedinworkingstorage. Inthesampleproblem,theimportantcountsindicateoneregion,onesegment,andtwoRENAME statements. Workingstoragewouldappearasinthefollowingdiagram.NotethatISEGCO,IRENMO, andITABOarezeropointers(e.g.,ISEGCO=ISEGCHN-I, whereISEGCHNisthepointertothebeginning ofSegmentChainsTable–see Figure5. ISYSUTI IREGDEF ISEGCO ISEGDEF IRENMO ITABO IDECK ZENDRegionDefinition Table SegmentChainsTable SegmentDefinition Table RenameTable GeneralTableI2words I2words I2words I6words remainingstorage IPARAM(3)+PARAM(6) 7.2-35 (611171)\nNASTRAN SUPPORT PROGRAMS ThefirstentryintheGTisanentryforLINKO$. Onthesecond passthrough thecontrol statements forLinkO,eachofthetables isupdated depending onthetypeofcontrol statement. Thetables astheyappear attheconclusion ofthesecond passareshowninFigure 19. When thecontrol statements forLink 1areprocessed (after allprocessing iscomplete for Link 0),thetables arefarmore dense. Note that there aretworegions, eight segments andone RENAME statement inLink I.Inaddition, attheconclusion ofthefirst pass through thecontrol statements forLink l,theLink 0entries areread from theLink 0dictionary orSYSUTI and entered into theGTsoallreferences from Link ltoLink 0maybecompleted. Thetables asthey appear attheconclusion ofthesecond pass through thecontrol statements forLink lareshown inFigure 20. Inspection ofFigure 20indicates that theentries forLink 0arenotchained. These entires always begin with thesecond entry intheGTandform consecutive entries until theCLASS (see section 7.2.2.1.9) ofanentry isnotzero. TheSDTismade clear bystudying itinconnection with theoverlay tree shown inFigure 18. 7.2.2.5 Object Deck Processing Thefollowing procedure isused toinclude object decks which were named onINCLUDE control statements: I.Asubprogram name istaken from theSNT(proceeding sequentially from thefirst tothe last entry) 2.Anentry corresponding tothesubprogram name islocated intheGT(ifnotlocated, of course, thesubprogram isnotincluded). 3.IftheCLASS oftheentry is4or5andtheAfield (section 7.2.2.1.9) points tothe library towhich thesubprogram belongs, itisincluded. Otherwise, itisnot. 4.Theposition ofthesubprogram intheSNTisitslogical record number inSYSUT2. The subprogram isread from SYSUT2 toworking storage. Referring tothepicture oftheSNTinsection 7.2.2.3, thefirst subprogram tobeincluded inLink 0isMAIN (the 103rd entry intheSNT). 7.2-36 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 0 0 0 0 -J I-,- fro. J 0 l,– bJ bd J I¢. 0 OL C} .J t_\n- D Jt.,- (J J m.-, q=[ .1 Z v rn Z t-4 i*-I J J.-4I I 0 o It m, !- “Z 0 .–, U_ 0 W Or_J J_ r 0– 0.- I– .Ji C) ! I m- J 9 J l.- “] {¢) ” m.- \u003c[ I– (/ J b_t ,-0 ,_” O–! (I (.5 2 O! J i i!II’ I I F- Ill t/} I– O 0 L_II_J 0 E: ,[: _z, I\"‘T I-.-! _ ZI °l 0 0 0 0 0LIJ Z Z :r J U I— OL C I (I) j i Z Illl,,-i |ZlWIo Ortl/) _.-)).- i I E\n_LLI (3_- I -…__.t I3r\" P\" oc (J ,-_ W Z laJ I e,_e-_o Z _J E ,n £ E E J J J F_ _;o 30 I “__ I aJir (I):T O_ .! .) LJ I\u003e I ‘‘b 1 ,,_.d” I0 e- 0 e- U 0 $ 3 e- 0 ql 4_ 0 e– ..J 7.2-37 (6/I171) NASTRAN SUPPORT PROGRAMS\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR Z EZ Z I U i Z m I ,.iJ ._I -_O Ll3 Z bul re rv I l– I Z I ILlibul l,– ) I I ,-’, I\n- rv z 0 U i¢.._ Z .J ! , ! I’[Z i=tn ! U i=T l=I\"’ i\u003c I I I ! iz II U …1 J U I ll- Z ..,I LIJ Z v i1- I I ¢¢1 .–I U ud )- nr I- X m,1l I oolocI ! odoooqo= ti oo4oc_o oo 1 ,;2 I 0o Jz,- I “J,,oooo_o_o !oHoo oi’ii°°.:I I !,°° 4’-i.-*‘H\u003ctunlun ur_tnurl __ ,o oolo,::4o_o_oc:4oc_ooo o_o_o_o_o_o o_o I\"l’’’ i!I|i (,0 I’.-! i 1! ,v !iI ooo=oo=ooo,ooloolo°i °°°°°°°°° °°°°°i ,, i_i ii.i,!,I,,i i_| oooo’.oooooooo’oo’o_oolo_o_ooioooooo,oo!ooloo°oolo°i I_ ,,,i oo ooo_ o:o_ooooo oo:oiooooooi:oi.’,”,ooi oo!ooooo’|,!‘i oO C¸ oo oooooo i •I/.OC3- I’-Z\" C)I 00C’,-,-,I U\u003cI(I o¢‘iWD0,, .e,,e.e,,elooo0 Z) ,.-,,r’)000!00_ O00Of=Z}OOf_,l\"-4O_0 ,lu,.,Ix I_-IOO000IO000 I XiW ZU_If) Or\" • (,..)I,Ljor LLJ;ZI–:’-’,..m.l (..)rl, (..)U.U’I.0,\u003cJ_J“xe- .1 o e- 0 0 c 0 t- O r Q_ 4_ 0 :g0.1 e- L5 v 0 7.2-39 (6/I171)\nNASTRAN SUPPORT PROGRAMS\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 0 0I ocPoOoc oc_ i un_mc ,0,q,0,ocIoc ocIoolo¢= oc i I 4 OQ OOI 00I 00I 00] 0O]O0 i 0(00 C OC ‘[P_I”¢¢.) 000eOOC, O0 OtOCO unWD,-.J oQe…e I IC\u003eO0 (_ OOOO I OOOOI 0[ eCOC O.IU NU_¢’-’t4\"I’..-oP)I,d_Z 1\" Z 1\" (J (D (/) | 0 ill n. l– 2 ¢D Z E (J 1- I\" Z ] (J -.I J ¢.3 “r c5 Z bJ I I i\u003c Iz I=-I- Z O. bd t.5 U bd ,el 1- nr 0 eO b. er) Z–I ,-4U Z Zo,4 o o F\u003c,,-I I I ! i oo! _o r…,o ooIoo 1°°II I I i– Z s” D ILl U (Z 0 b.. Z i,.\u003c “l” U ,.) O aD\n.. I I IUl Im.I ml II ¢o \u003c[I Ul c JI (JI 1:1 c_o Di(o ZI olo t! olo! oto 0,.! C.lO T T q J °II 0 n u_ItI I I f b.– Z J (D Oc 0 b.. Z \u003c[ Z (..) ..J O lID ,.. in I I Iz,,-o1’- ! m.m “iZ “ro U 1.5 | k- Z i iz ‘) !7lr LJ J J bJ Z 7 lu*oo i t i oo!oo Ioo I I.t! U ii fill I,.,i I Ul “Gt zi J .J ¢.11 It–i Zi U.il ..11 i ! ,1i ‘?ilg, Z .J _ U U _ Q: I,- ZP’-IO ot ot,…,e CI‘N oa mml olool olool o1oo1 \u003cH\u003cI” ,el I olool I oio,oi Olo( Olo_l Ol)o] otc) Ol Iolo=i OlO o •,‘Il,tl’- _I,,1\"4- I,–ll,,,– 1rt\"0 li.IG.U ,,i’ll”..o C,IC,-,’,,I l\"ill’’lI I II unl i–i Z! klJ :E I.m.l: cr O $.1.. Z i..Wl “1” U .J 0\r| | tr_ ..I s.. o f- u 0 E 3 e– o u s- o °_.. _J v e- -J “ov o 7.2-41 (6/1/71)\nNASTRAN SUPPORT PROGRAMS\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Theobject deckforMAIN isreadintoworking storage andthePIDLTable (section 7.2.5) is located. ThePIDLTable forMAINisasfollows: 348 3 MAIN 11068 C_MO I C_M3 1LCT Attheentry corresponding totheMAIN, thefollowing fields canbecompleted: L=ll068 CLASS =l INDEX =I03 Since theLCT(section 7.2.5) isnotempty, eachTEXTTable (section 7.2.5) ofthesubprogram is searched todetermine ifanyofthetables point tooneofthecommon blocks. Inthiscase, none do. However, inprocessing theBLKDATA subprogram inLinkl,data isdefined foreachofthe common blocks. This condition isnoted intheLCTbysetting thehighorder bitoflength field oftheentry. Anattempt ismadetolocate eachofthecommon blocks (C_MO andCOM3) intheGT.Neither ispresent soentries ofCLASS=2 arecreated andtheLfield issetineachentry. Theentries arechained tothesegment lchain andthepointers intheSCTareupdated. TheENTRTable (section 7.2.5) islocated next. Forthesubprogram MAINthistable will appear asfollows: 36 2 MAIN l 7.2-43 (611171)\nNASTRAN SUPPORT PROGRAMS Anattempt ismadetolocate theentrypointnameintheGT.Inthiscase,MAINislocated withaCLASS=I. Therelative entryaddress isstored intheAfieldoftheentry. Forsegments otherthanone,theTEXTTables (seesection 7.2.5) aresearched tolocatetheIDwordcorrespond- ingtotheentrypointandthusextract thenumber ofarguments defined fortheentry. Next,theLINKTableislocated. ForMAIN,thistableisasfollows: 44 168 Q8ENTRY 1 LN ZAP 5 1 5 l 5 12 05 5 1FIELD 1 STBP6 05 1485 1785 2385 318 338 05OUTPUT l LINK END 1128 168 228 308 258 0 358 7.2-44 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR Anattemptismadetolocateeachoftheexternalreferences intheLINKTable(section 7.3.5)(afterfirstcheckingforpossiblerenameviatheRT).Inthiscase,noneoftheentries existsintheGTTherefore, foreachexternalreference, thefollowingoccurs: I.AnewentryiscreatedwithCLASS=7(the\"undefined” class) 2.Theentryislinkedtothe\"undefined” segmentchain(segment2forLinkO) 3.Sinceitispossiblethatthenamesmaybedefinedsubsequently inasegmentnotinthe path(itistruethatinLink0thisisnotpossible,however,thiscaseisnottestedand soforthisprocessing, Link0istreatedasanyotherLink)acallentry(CLASS=6)is createdforeachofthesymbolentries.ThecallentriesformanENTAB$(seesection7.2.2.7) chainforthesegmentandeachischainedtothesy_olentryofthecall. Sincethereweresevenexternalreferences byMAIN,sevensymbolentriesintheundefinedsegment chainarecreatedandsevencallentriesinthesegmentoneENTAB$chainarecreated.Thecontents ofthetablesatthispointareshowninFigure21. Processing forMAINisnowcomplete. Sincenoothersubprograms weremarkedforinclusionin LinkO,theautomaticcalllogicisnowinvoked.Thisworksasfollows: I.Foreachentryintheundefinedsegmentchain,theEPTissearched. 2.Ifamatchisfound,anentryofCLASS=4iscreatedintheGT(unlessitalreadyexists) forthesubprogram towhichtheentrypointbelongs. 3.ThemainlogicisrepeatedwithalogicalvariableSYSLIBsetto.TRUE.. Notethepossiblecascadingeffectofautomaticlibrarycalls.ThishappenswhenaLINKLIB routinemakesexternalreferences tootherLINKLIBroutines. Thiscaseishandledasfollows: I.WhentheLINKTableisprocessedanditistheSYSLIBpass(i.e.,SYSLIB=.TRUE.), each externalreferencewhichisnot.intheGTislookedupintheEPT. 2.IftheexternalnameisfoundintheEPTandthecorresponding subprogram hasnotalready beenmarkedforinclusion, anentryintheGTiscreatedofCLASS=4. 3.Ifnecessary, thecurrentpointerintheSNTisresettotheentrycorresponding tothe newsubprogram toinsurethatisincluded. 7.2-45(6/I/71)\nNASTRAN SUPPORT PROGRAMS\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR a_ Q__ .7. b_ b_ O( 0 7_ ,-4! cl -r i-] i!I1 ‘i:i0 e- _.J e- Z _2 e-\" -T- O 0 0 e- ,L– ._1 v c%1 7.2-47 (6/I/71)\nNASTRAN SUPPORT PROGRAMS For example, in the sample problem, Q8ENTRY is an entry point in SYSTEM., which in turn references SIg, which is an entry point in SI@$ which in turn references GETBA which is an entry point in GETBA, and, in fact, the single INCLUDE 0BJ (MAIN) statement results in 14 additional LINKLIB subprograms to resolve all cross references for Link 0. When the SYSLIB pass is complete, any entries remaining in the undefined segment chain are truly undefined and an error message is printed for each one. At this point, a certain amount of “clean up” processing is necessary. For example, a number of call chain entries which were created because an entry was undefined at the time, may now be resolved and need to be removed. The final processing in this phase of the linkage editor is to create an ENTAB$ entry in the GT for each segment with calls not in the path. Relative addresses are computed for each entry in each ENTAB$ chain. At this point sufficient information is available to perform the assign- ment of final storage addresses to each entry and control passes to the Address Assignment Processor, LKED050. (see section 7.2.2.6) I 3 The linkage editor tables as they appear after object deck processing for Link 0 is shown in Figure 22. Similarly, Figure 23 shows the tables after Link 1. 7.2.2.6 Address Assignment Processing The computation of final storage addresses is relatively straightforward with the order of the computations being the key factor. When LKED050 receives control, each of the control section entries in the GT has a length assigned so what remains essentially is to accumulate the lengths of each of the control sections. The way in which the segments will reside in storage (the overlay tree) must be taken into consideration. As a result , the computation proceeds as follows:\nEach entry in a segment chain is traced. If the entry defines a control section (CLASS = 1 or 2), the length is accumulated. For each control section, an additional word is added to the length to account for the control section identification word which is placed at the beginning of each control section during relocation processing. The length of the segment is stored in the SDT (section 7.2.2.1.7) DESIGN OFTHECDC6400/6600 LINKAGE EDITOR lJn c_ e-.. hl V\" -J (I\" I\" bh. ,[ lhJ ‘5 :l.– blJ hlJ :Z -J 0 =E Q I I I 1. nnI– Z I.-,J rr..,a evW OC_r .;zIi,.,.i I.-Ic 0Ih I– b-i -4.j] l– LtJ bl..f C:)I’- Z 0o!c o o o o c ! I I –I .‘I’-, l.- u.I Z ,-j I I II i i_J.,E zl,\u003c! zl \u003c1[ 1\" Z .J 0 Z WZ I J /) Z 1_0,’I‘11\"I\" I oc\u003eloo OEoo_oo 0ooleo. r\",,oe\"o0 Z “‘i:g “ 1 °IZ E ’t “li1” t J J U _ t I C IzJo e- _J oq.. u o f,,,. u u o q- ,-g f,,.. o N ¢0 e- °p-J N N 7.2-49 (6/1/71)\nNASTRANSUPPORTPROGRAMS IOLD_D ,=*_ ,–,U_ Lr,r’)i_ ’,D!I’-I’–P’-_ COC_’ G’,..OOC,.-,.-.-Odl j°ooolc oo;o o:oooolooEooooo_ooio,:,o o,oooo,Ioolc., c:,oo_o c_oo I I`:‘0°°i° ‘:I°°i’==°°°°J°’:°=’°’:’°° |-I\"i\"II-’ _| i_c0 0 4- t- O K. D -g 0 Ill 0 :g e– 0 ._1 v Ill s- 7.2-50 (611171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR Lb0 ….I f,.. 0 4- {3”) (- “F_ _J 0 U (I) “0 4J J 0 4J 0 e- 0 –J v 7.2-51 (6/1/71)\nNASTRAN SUPPORT PROGRAMS I 0 I 3’CFOdcrrU eMQ9 m? mIm elnu’a mm07Fi I ! Ch!U+~3;00OCr mc\\l**aoocl0’ ~C”-JrD\\CNIDC .DbFhdK’Ne mmmmmmmm I"},"title":"Programmer's Manual P98"},"/docs/programmers/programmers_manual_099/":{"data":{"":"DESIGNOFTHECDC6400/6600LINKAGE EDITOR I\"‘io- IZ I\u003e( lui= IiU'1 iiI ‘IU ILl l– J.. I {/I I .,_ I .-r I.LI J ‘° ;I Cb hi Z I U bJ I t_J 0 e IAl Z I I Z 1- J ll f.b T I– Z .3 e_ Z mlg I ¢\n.. C J _Z i_i\u003e- ii in..-i i _, o,iP o°NNNge- _J o ¢- 0 S- _J U _J 0 4J 0 (IJ e- ..J 7.2-53 (611171)\nNASTRAN SUPPORT PROGRAMS o cI •–Gp,- f_f_ c:b_ OO coio_ocl_c_oc_r qbiE I e i . °’_ t_’ ’:ur),‘J\" -°i;°,,-4_ oI_o:___I,! ii I; 0 b u o U U g ? g E Z g g 7.2-54 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR t i II! q , m_,-,-_ _ _ _ C C CC C;C I;I !U, 16 I.1 L_ t_ 10 i0 102\" h+ Iu “T” Z !u I- Z W 7 Izi : i, + i 1 CClI_ p I iI t_ La_ n UI+ ILM q b2 j .J Io !l,– el:: im t IU !+,0 Il l i\" !’,iF iz T iz :U i-iJ Z ,,,..p i; ia-f M cc,;c I .,q’tZ U I ,,i r’, i_J U 0 +.- I– I I .I. I U I J ¢,+ 7t….- –I .+,… 0 t-..- U 0 u U U ,r– r 0 Q.; n 0 :g_J ° ..J v f,- .r- h 7.2-55 (6/I/71)\nNAFTRAN SUPPORT PROGRAMS -I*\u0026 000 0 0 0 0 0 0 OOC CCO mmm I clmo OF mrr) 0 x. (P 000 OOC 000 00 000 mmm 0 O CPOO .5 m add F7 C 000 300 000 009 em= 00 .-Id 000 dNN NNQ txt fro1 now oO4m QCb wmm d 0 wm C3 0 0 d te m 4 -i- 0 I*, i i9 U .: V) g a I 1: I .-I 0 “lo, q;\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR | ! | wl g N 0 Z I J 0 m !4- Z 1” U g I,- LcJ I!cIl_n p,) I I I I r IT I II ot °…-,j cl_ ,-,tL_/ t,,..ii_ o,-i_\" 1°L) 1®…) Z 2: U | (0) II) W !1.1 i iz 1 ir f_ J J Z L_J .J I I “-’ Z II_ Ii_’ L_U\"I n !T i I o!$ “E j , ot7 010- 0tzi ,tt o,, I- IO,I! !1 1 i Iolo°I i ,! °°!°_i t tI I °.,,_Ie– -J 0 c- O U U %,0 3 0 -V, e- v 1. 7.2-57 (6/I171)\nNASTRAN SUPPORT PROGRAMS 3.Steps (I)and(2)arerepeated foreachsegment inthelink. 4.Thesegment numbers defining aregion areextracted fromtheRDT(section 7.2.2.1.5). 5.Starting withthelastsegment intheregion, eachpossible pathintheregion istraced andlengths ofthepathsareaccumulated. Inspection oftheRDTforLink1inFigure 25 indicates thesegment numbers forRegion oneare1through 5.Looking attheSDTinthe samefigure, oneseesthatthepossible pathsare5-3-I, 4-3-I, 3-I,2-I,I.Whileitistrue thatcertain ofthesepathsaresubsets ofothers, thelongest pathwillbefoundbya\"brute force” technique. 6.Steps (4)and(5)arerepeated foreachregion inthelink. 7.IfLinkO,theinitial address inRegion 1isassigned as1008.Otherwise, theinitial address inRegion 1isthelastaddress inLink0plusone. 8.Theinitial address ineachregion isstored intheRDTbystarting withtheinitial address forRegion 1andaccumulating thelengths ofeachregion. 9.Thelogicofsteps (4)and(5)isrepeated andfinaladdresses arethusassigned toeach ofthesegments. Theseaddresses arestored intheSDT. I0.Itnowremains toassign addresses toeachoftheentries ineachofthesegments. Thisisaccomplished byfollowing thechainforeachsegment. Starting withtheinitial address inthesegment, lengths ofeachcontrol section entry (CLASS =1or2)areaccumulated. Addresses foralternate entrypoints (CLASS =3)areassigned byadding theaddress ofthe primary entry (theLfieldpoints toit)totherelative address oftheentrypointinthe Afield (seeGTexplanation, section 7.2.2.1.9). Whenaprimary entry (CLASS =I)iscom- pleted, theARGbitissettoindicate this. Ifanalternate entrypointisencountered prior toassigning anaddress totheprimary entry, alogicerror abort (LKED990) occurs. Figures 24and25showthetables astheyappear after address assignment processing for Links0andI,respectively. Theasterisk incertain ofthesymbol entries indicates thatthe ARGbitison. 7.2-58 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR .J !w ! !0,–: iI:IIZ ic!I’— I’–,r_ w ..i o I I I J (I )- I I IU J ZlZ –1!I’l ,tell t’-I–_ F–_ –41 .tI,-4 • bL]i ;.-L ol “It’ Ol n,“I_-,_ “) I_ .I IE wi o 0i!} W iZ -i-ri..,–icin! I 0 J 0 e- U 0 e e- E E “, 1..- 4- e- U $- S. 0 e- °r- -J v 7.2-59 (611171)\nNASTRANSUPPORTPROGRAMS CO,.-.i Un(”) 01,,-i ,.,I- O0 (DO Oo 0,’-_ ,,-,p.. U’lJr) O0 O0 I_D Oc :L¢) UUZ t–LL I/]D. (n:E IJr_a0 unu’•.e,1.,i:\")I,ON :).-qI-r,-I m._ ,),o-.r,-i.’–co:)o,0’I I ]0,,,_4. -r,-Iofe; 0t’lD,r.-II n © ‘,oI_r,- -cooo,I pc_ I_P- ,d,-61o.,,l’cfvl ._ rit_ “IN £\u003cI-l_O_ri,4:)3ol i-, _I–4 4-\u003cri\u003cI’.4” it-4 i’ILI_I I _“C_C O_C_O “_C _OI i OC –\"_C C_I_DC ‘D_DO _ I-I’–IP_I’,- C0t’ ‘-_C IC 00[00 DC_0 =ee.-i L)u..3EI.J.l F-C 4JU(I.. ,- 1”’ I_C _ _D¢’ _DP_OO _CDO _)-Z.qIE I”_[MIZ--,1” r,..P.:o_3”.0”un I”-,I\"I :)Oltr-,,,t -ot’) ’(Y ‘)ur 1,o ),D3r,- •.¢ .4,..¢ -,-_ -¢,-.¢ ,‘11’, “),,I ni_ nw[D_D _C OC _C _C _ COC “C _C _C0 r- .1 S- O q- O3 0 e- e- “7, m e- “, U 0 S,. :g e.’- .r- –J v S- -s 7.2-60 (611171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 0o,-,-e|,-t_I-I, i ! I 41”(,OtWC Owl: (N-…I,..,1wD,..4i 1 I i t_N_N OOOOOO 0_00_000 _ O_OO I D’O\"ooZ (..). .J 9:],,,l.J] rv ,, •-I Io.ow.-. 1 \u003e”/ [:w’ rap-., ,,-, I I_1 1 1 i i t **i oooo,oo I I I i :e,.- •e:; JICn o-LL a..lO: ...(,,[e,’t r,O,tU’}U_O01,0,,bOw_l,,t .....p,.. io[WD .%1_%1..%,1 i i ‘__WDil r.IXl’] cD_fflff3Jo c3o, 0., i I I I I I _ ! I i ! i’iI ie-,I I O000C. O0 0 000_000 00000000 O00000_O CbO0 C:.:}C_C0 %re}{“IP’“Ir”)if)aD O’ IXl ,ID f OU 0 0 U_ p_ 0 U0 v S- O q- 0 S- (3. O3 S. S.- a,I I:Z u_ (;1 0 0 S. 0 aJ C_ v .-I 0 v Od S.- :3 O3 IJ- 7.2-61(6/1/71)\nNASTRANSUPPORTPROGRAMS gc .J [=- J .J Q C_ }– _J J w” J tL 0 ft. I ! I J I II! ‘ilit’r ,.L:I j! iLrC¢, •.-,I-,JDI zi L) ,1 iZ L,-. !,z ,¢t\"EI i-ui It:D! Z OC I– k 71 m I L.JI I r0_lI i ¢d–*1÷ o\"o -.’tU,43,qD I L ! ii 1–‘1\"Cic-‘CIC o 2.: :ri wi-Jl “1 e’,LJ o _ 1”..-,\"‘1,\"‘3 ZOiO i..__! ., I– iii ‘. ? hi I I I.–I O 4– E (D O ..ID E .g ¢1 ¢1 4- E -g u 0 S- O :g e’- .–1 v 7.2-62 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR, ibd l”- X ioo iz I IL:”_ t wC l,- i…,Z I (..) i..J U’I I ,cI Z Z !(,., I :Z IT i…,!u “JE I…- Z ;.\u0026l J 7 BE. i– Q- I I U’) I T r,,r ,cl IZI Z I#’l ,-.i j i— U l,..,1 “, ILl tr Z Z i-_ )- ! t– It Z II I,_cc ,,,4B 1 OC OCo .l i.,- 0 Izz I.I 0 i,.,,, I=:: “, J “0 “0 f,,. (]J 4- t (.- 0 0 0r- _.J v 7.2-63(611171)\nNASTRAN SUPPORT PROGRAMS i i Io oc:::loJ OC _C ococ:_oc ccc-c I ccc ¢10 :IIv e- ll £. 0 4- .g 0 0 ID c- O E e- .g e- .p o £. £. o e- °.. -J o v 7.2-64 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR o o n,4(i ,,.-,t,,l url{,,I ,,D,, oc c\"oooI_=(oJo_o, | °j°°°J°°oIi I I I tr- N.-, o°1o I ooio ooo °, oc’o t- IE N I__WD Z •rc , p 0 ,s.I I °t -Ir 1,ooo I 1- J J ..1too i- 1:t -ri J c.I “i -I_i.-I- Imr’iwI I I 7 bJIt “liZ :IZ _ tJ I 31 -.t_I\"i ,I, I L “dl_m m., g J kl ÷ ,lil–.. I” I Jolo ,I’I CO 4, Z I” I I- f, (I I i I’r I. oiu,° IIi ,i t g’ i “” r I-! II I” __ !iIi_i ,Io (J 4, U I uOw_ r_,l_ llc -1 -J m IIe i°.J . 4. IU ! I I •1” U ,,-z_o II- ’ IIIz J_ I (.} 8, I u'1 QC j,.-?. I” U .J (.b I dv $.. o 13r} e- 0__J o t_ I- u o %.. S- o r-” °r,” “0v 12 7.2-65 (6/I/71)\nNASTRAN SUPPORT PROGRAMS I tl_tl_lfir ,=,-$,-4 .-,-f.-4 CC[ mmi.\nI E F •.-iI’k’I%1 Pq:_ I.-,__I…- ,‘1\"07 ‘_.utw 4 Im_lm iI ! I 0 LIL Z I I I OI I 7.2-66 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Z r d\"I’–__ m,,},.-;r…,) UlJ 4. Z ::I:,E,r-I-.i\"P’- L .,J ! i ,,-,4wJ_.., I’; C_C C” i-” gI::(:__ Z b_ ;f} Z “I” U_-C:‘C;,C ! :I: I\" f,..) “C,C 4” .,.J if\") J .’,,.,) I*– r'30_,0_.# E ..J 0 4- I:]’) {:: u'1 o 0 E aJ E ol f,… r.- 0 0 0 E °¢.. _J u,– 7,2-67 (6/1/71)\nNASTRAN SUPPORT PROGRAMS 7.2.2.7 Relocation Processing Theprimary taskoftherelocation processor (LKED075) istobuildtextforeachofthe control sections thatcomprise thelink. Thetextiswritten onSYSUTI, onesegment perlogical record. Theformat oftheoutput fileisshown inFigure 26.Thesegment iswritten insucha waythateachsegment maybe\"block\" loaded bythesegment loader, i.e.,thereexists onewordin thelogical record foreachwordinthesegment. Wordsforwhich notextordataisdefined are settozero. Secondary tasksfortherelocation processor arethelisting onOUTPUT ofthestorage map forthelink(ifMAPis.TRUE.) andwriting information onSYSUT3 (ifXREFis.TRUE.) toassist in thepreparation ofaalisting ofcrossreferences. Seetheexplanation oftheLINKEDIT statement, section 5.6.4.2. InthecaseofLinkO,anadditional taskistoconstruct thebootstrap program asthefirst partofSYSUTI. Askeleton BlockDatasubprogram isdefined intheDUMMYarrayinLKEDC05 (see section 7.2.6. Theappropriate length fields ofthisskeleton BlockDatasubprogram arecompleted, thelength ofthecommon blockXBOOTBD iscomputed astheLink0length +2008sothebootstrap program willloadbeyond thestorage areawhere Link0istobeloaded, andthesubprogram is written asthefirstrecord onSYSUTI. Theremaining subprograms which comprise thebootstrap program aredefined inthearrayB_OTDKS inLKEDC07. Thesesubprograms arecopied fromSYSUT2 to SYSUTI (fatal errorifnotfound). Finally, azerolength logical record iswritten tosignify the endofthebootstrap program. TheLink0directory record iswritten next,followed byaLink0dictionary record which contains alltheentrypointandcommon blocknamesandtheiraddresses. ForlinksotherthanLinkO,the3-word directory record iswritten. Thefirstcontrol section forLink0isLINKO$. Theformat ofLINKO$ isshowninFigure 27 (seesection 5.6.4.2 foranexplanation ofthePARAMarray). Thefirstcontrol section foralink otherthanLink0isSEGTAB$. Itsformat isshowninFigure 28.Depending onthelink,LINKO$ orSEGTAB$ isassembled andwritten asthefirstpartofsegment one. Thereafter, eachentryinthesegment chain isunpacked. Iftheentry isCLASS=I,thePIDL Table (seesection 7.2.5) ofthesubprogram isreadfromSYSUT2 (during relocation processing, 7.2-68 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR XB_TBD XB_T XI_RTNS MAPFNS Link0directory Link0dictionary Link0executable program Linkldirectory Segment l Segment n directory Segment lBootstrap program –O-length record Link0 Linkl Succeeding Links Figure 26. Format oftheoutput file. 7.2-69(6/I/71)\nNASTRAN SUPPORT PROGRAMS address at:execution 1008 I01 102 I03 10457 414035 37oooo EQaddress ofentry2917 address ofSEGTAB$-I PARAM(4) address of master index address of PARAM(5) subindex FEIandcircular buffer Master Index SubindexIDword PARAM(I ) PARAM(4) IPARAM(5) Figure 27.Format ofLINKO$. 7.2-70 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR objects decks areread onetable atatime thus minimizing object deck storage space andmaxi- mizing storage space available fortext building). Theentry corresponding toeach common block intheLCTofthePIDL T_ble islocated intheGTandtheaddress ofthecommon block isstored intheLCT. TheENTR Table (see section 7.2.5) isread next. Theaddress ofeach oftheentry points is determined bylocating theentry intheGTcorresponding totheentry point name. IfXREF is selected, thesubprogram name andaddress andeach oftheentry point names andaddresses are written onSYSUT3. Anarea inworking storage corresponding tothelength ofthecontrol section isinitialized tozero. Thecontrol section identification (ID) word (sometimes referred toasthe\"dump control word\") isstored inthefirst word ofthearea. Thereafter, thetext isasse_led andrelocation ofrelative tofinal addresses isperformed according totheTEXT, FILL, LINK andREPL Tables of theobject deck (see section 7.2.5). These tables areread oneatatime from SYSUT2 andthe appropriate relocation routine iscalled. When theendoftheobject deck isencountered, the text area inworking storage iswritten inthecurrent logical record onSYSUTI. Relocation ofexternal references intheLINK Table isperformed inthefollowing way: I.Ifthecall isintheload path ofthesegment making thecall, thefinal address isthe address ofthereference. 2.Otherwise, thecall chain istraced andthefinal address ofthereference isanentry intheENTAB$ table (see Figure 29)ofthecalling segment which inturn will call theseg- ment loader todetermine ifthecalled segment istobeloaded (itmayalready beinstorage). Ifnotext ordata isdefined forthecontrol section, then thecontrol section IDword iswritten inthelogical record followed byzero words equal innumber tothelength ofthecontrol section. Thelast control section inasegment maybeENTAB$. There will beanENTAB$ ineach segment which hasreferences notinthepath. Figure 29shows theformat ofanENTAB$ entry. Ifthis control section ispresent forthesegment, LKED075 assembles thetext foreach entry andwrites itinSYSUTI. 7.2-71 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 370000 1SEGTAB$ EQaddress ofentry xylength address region parent 5953 35 17 II 0IDword Segment 1 Segment n atexecution time: I:segment isincore x=O:segment isnotincore I:segment isscheduled tobeloaded Y=O:segment isnotscheduled tobeloaded Figure 28.Format ofSEGTAB$ address ofargument N number of entrynamearguments (N) EQreturn address 0 segment final RJL_ADER. number address of entry 59 29 17present onlyifN\u003e6 thesethreewords always present inentry Figure 29.Format ofanentry inENTAB$. 7.2-72 (611171)"},"title":"Programmer's Manual P99"},"/docs/programmers/programmers_manual_100/":{"data":{"":"DESIGN OFTHECDC6400/6600 LINKAGE EDITOR Wheneachofthesegments ofthelinkiscomplete, thestatus ofthelogical variable ofXREF (see7.2.6) istested. If.TRUE., LKED077 iscalled toformat andprint alisting ofcross references. LKED077 begins byallocating theXREFtable (seesection 7.2.2.1.I0) totheworking space formally occupied bytheRDT,SCT,SDT,RT,GT,andobject deckandtextbuilding storage areas asthese latter tables andareas arenolonger needed. Theprincipal input tothecross reference processing istheinformation onSYSUT3 written byLKED075. Figure 30shows theformat ofSYSUT3. Twotypes ofchains aremaintained. Thefirst isalistchain inwhich entry-point entries arechained inorder theyappear inthestorage map (andtheorder inwhich references willbelisted) andthesecond isachain ofallthecalls to eachentry point. Names arelocated intheXREFtable inthesamewayastheGTthrough thehashtechnique (seesection 7.2.2.1.I). (Aninspection oftheentry formats detailed insection 7.2.2.1.I0 indicates thattheinitial hashpointer andhashchain pointer fields areinthesameposition astheGT.) UptoIIcalls fromagiven subprogram toagiven entry point arestored inoneXREFentry since that isthemaximum number ofcalls thatcanbelisted inoneprinter line. Twolistoptions areprovided inconjunction with thecross reference processing. Both are controlled byPARAM(7) (seesection 5.6.4.2). Thefirst istoproduce alisting ofallreferences fromeach subprogram (essentially thecontents oftheLINKTable oftheobject deck). This is provided because ofadeficiency intheoutput oftheRUNcompiler. Thesecond option istolist allreferences toLink0entry points forlinks other thanLink O. 7.2.2.8 Final Processing LKED080 performs final processing. Itiscalled when theENDLINKS card (seesection 5.6.4.12) isencountered. Ifthestatus of_UTFILE isC,processing isalready complete andLKED080 returns. Otherwise, theoutput file iswritten. Figure 26shows theformat oftheoutput file. Thefirst stepistowrite thebootstrap program. This isdone inamanner similar tothat described insection 7.2.2.7 except thattherequired object decks arecopied fromLINKLIB instead 7.2-73 (611171)\nNASTRAN SUPPORT PROGRAMS 59 17 0 subprogram name address entry point name address entry point name address 4m nameofexternal reference 0 0Location of referen ce 1 0Location of reference 0 Location of Ii 0reference I 0 subprogram name address entrypointname addressendofentry points endofexternal _F—_referenc e Figure 30. Format ofSYSUT3. 7.2-74 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR ofSYSUT2 (thereason forthisdifference isthatinthelevel1.0version (theinitial version) ofthelinkage editor thebootstrap deckswerenotnecessarily onSYSUT2). Thereafter, eachof thelinksiscopied fromSYSUTI totheoutput file. Wheneachlinkiscopied, amessage iswritten on_UTPUT signifying theevent. Whenalllinkshavebeencopied, a3-word record iswritten with thecontents ofthefirstwordbeingENDLINKS. Thisisfollowed byanend-of-file. 7.2.2.9 TheBootstrap Program Asdiscussed briefly insection 7.2.1.4.7, thebootstrap program itself loaded bythestandard CDCloader. TheCDCloader loadsrelocatable records fromthebeginning ofinformation onafile untilanullrecord orendoffileisencountered. AftertheCDCloader completes theloading of thebootstrap program, corewillbeasdiagrammed here. 0 778 1008 FieldLength1008Words JobData IXBO_TBDI labeled common XB_T XI_RTNS MAPFNS SCQPEROUTINES / / blank commonspaceallocated tohold “Supermain” =LINK0 Bootstrap routines Opencore(blank common) used forworkspace 7.2-75 (611/71)\nNASTRANSUPPORTPROGRAMS ThebootstrapdriverXB_BTbeginsexecutionandimmediately fetchesthecontrolcardimage directingthecurrentjobstep.Thiscardandsubsequent controlcardimagesarenormallystored inlocations708through778ofthejobcontrolblock. Thecontrolcardshouldbeinoneofthefollowingformats. (I)Namel. Inthisformat,NAME1.isthefilenameofthesequential linkageeditoroutput. Executionofthecontrolcardcausesthebootstrapprogramtobeloaded,anditin turnwillcopytheentireexecutable filetodiskfileSYSLM_Dindirectaccess format.Link0willthenbeloadedandtransferofexecutionwillbemadeinto LinkO. (2)NameI.CREATE(Name2) Inthisformat,NAME1isthefilenameofthesequential linkageeditoroutput. Howeverinthiscase,thebootstrapprogramwillcopyfileNameltoadirectaccess fileName2anddeclareittobeacommonfile.Link0willthenbeloadedandtransfer ofexecutionwillbemadeintoLinkO. (3)NameI.CATL_G(Name2) InthisformatNamelisthefilenameofthesequential linkageeditoroutput. Howeverinthiscase,thebootstrapprogramwillonlycopyfileNameltoalocal directaccessfileName2. (4)NameI.ATTACH Inthiscase,Namelisthedirectaccessfilecontaining theexecutable programand ifitisavailabletothejobcontrolpointeitherlocallyorthroughapermanent fileattachoracommonfileattach,thebootstrapprogramwillbeloadedbythe CDCloader.ThebootstrapprograminturnwillloadLink0intocoreandtransfer ofexecutionwillbemadeintoLinkO. ThebootstrapprogrambreaksdownthecontrolcardintotwofilenamesNAME1andNAME2 (NAME2maybeblank),and_PTI_Nwillbeeitherblank,CREATE,CATL_G,orATTACH.Havingthis information, thebootstrapprogramwillthendecidewhetherornotthefileNAME1istobecata- loguedfordirectaccessonfileNAME2.Ifitdoeshavetobecatalogued, thatprocessisper- formedimmediately. 7.2-76(6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Onceitisdetermined thatthefileisindirect access format (anATTACH wasmadeoritwas putindirect access format) forexecution oftheprogram, \" \" Supermain =LinkO,thealways-core- resident program segment, isreaddirectly intocore. Atransfer ismadedirectly tolocation lOl8where ajump totheactual entry point ofsupermain isstored. Thebootstrap program isthen lostandisunrecoverable. However, itisnotneeded forthecontinuing execution oftheprogram. Detailed logic ofthecataloguing process ofthefilefordirect access maybefound inthe logic flowhcart forXB_T, Figure 39.Thebootstrap program iscontained entirely inone F_RTRAN subroutine which iswell andheavily commented andshould alsobereferenced. Refer also tosection 7.2.1.4.7. 7.2.2.10 TheSegment Loader Detailed execution ofthesegment loader XLBADER iscovered bestinthedetailed comments oftheactual codeandtheflowcharts ofXL_ADER’s twoentry points LINKandL_ADER.. (Figures 40and41). Entry point LINKinthesegment loader utilizes information stored inlocations lOl8, I028, andI038 (intheLINKO$ table) asfollows. 59 29 0 1018 I028 I038EQBO,BO,L_B ZER_-SEGTAB$ ADD. LENGTH-MAST MAST-INDX ADD. LENGTH-SUB SUB-INDX ADD. 59 35 17 0 L_Cistheentry pointofLinkO. LINK stores thecontents ofword I028intheFETword 8when reading inasubindex fora link. Thissubindex isreadintothelocation specified bythesubindex address inword I038. Then LINK stores theaddress ofthesubindex intheFETword8.TheFETisalways stored beginning inword I048 asallocated bythelinkage editor. Themaster index contains relative track addresses which point tothebeginning ofparticular logical records onthediskaslisted here. 7.2-77 (6/I171)\nNASTRAN SUPPORT PROGRAMS MASTER INDEX(1) =Notused MASTER INDEX(2) =Subindex forLink0 MASTER INDEX(3) =Subindex forLink1 MASTER INDEX(4) =Subindex forLink2 Thesubindex contains relative trackaddresses which pointtoparticular logical records defining aparticular link. SUBINDEX(1) points todirectory of3words containing thelinknumber, thenumber of segments inthelink,andlongest possible length ofthelinkwhenloaded. SUBINDEX(2) points toSegment l SUBINDEX(3) points toSegment 2 L_ADER. istheentrypointwhichiscalled inXL_ADER fromENTAB$ tables tohandle theauto- matic loading ofsegments asrequired. Eachsegment loaded bythesegment loader results inone calltothePP(peripheral processor) routine CI_which readsthesegment fromthediskdirectly intothecoreinwhichthesegment istoreside. (Thisisoftenreferred toasablastreadof arecord). L_ADER. calls READXforallsegment loads, thusavoiding theuseofthecircular buffer. L_ADER. isconcerned withtwotables incore. OneisSEGTAB$ (Figure 28)whichmaybelocated byfinding itszero-address intheright30bitsofcorelocation 1018.SEGTAB$ contains oneword foreachsegment possible inalinkandisterminated withafullwordofzerobits. SEGTAB$ is builtintotherootsegment (segment I)ofeachlink. Link0doesnothaveaSEGTAB$. Each wordoftheSEGTAB$ hasthefollowing format: Bits0through II=Number oftheparent segment or0ifthereisnoparent Bits12through 17=Thenumber oftheregion thesegment isin Bits18through 35=Theaddress where thesegment loadsat Bits36through 53=Thelength ofthesegment Bits54through 57=Unused Bit58 =lifasegment isabouttobeloaded bythesegment loader. (Ifthis bitisonforanysegment, L_ADER. orREADXshould beinexecution) 7.2-78 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Bit59 =1ifthesegment iscurrently considered incore andnotoverlayed by anyother segment whenexitfromtheloader hasbeenmade. Theother table usedbyLOADER. isENTAB$, atable thatresides inanysegment which has\"downward calls\" (calls toalower segment inatree oroutside agiven region). AnENTAB$ table ismade upofentries which are3words ormore inlength. SeeFigure 29fortheformat ofanentry in ENTAB$. Often adownward callpassing toENTAB$ andthentoLOADER. will, ifLBADER. determines the segment isincorepasscontrol directly totheaddress specified intheENTAB$ entry. Theloader knows where theENTAB$ entry isbecause attheentry point toLOADER. isstored ajumpbacktothe address +lofthelastword oftheENTAB$ entry. Thisjumpback isnever usedexcept todeter- minewhere LOADER. wascalled from. LOADER. never returns. Itonlycalls forward. Theroutine called byLOADER. always returns directly totheroutine that called LOADER. viatheENTAB$ entry. Step-by-step logic isdetailed inthelogic flowcharts forLINKandLOADER. (Figures 40and 41),thetwosubroutines ofXLOADER. Segment loads areaccomplished bycalls toutility routine READX. Thesystems programmer should alsoconsult theheavily commented COMPASS subroutine XLOADER. This isarelatively small, self-contained routine. Refer alsotosection 7.2.1.4.8. 7.2.3 Flowcharts Thefollowing pages giveflowcharts foreachofthemajor divisions ofthelinkage editor, (Figures 31through 38),thebootstrap program (Figure 39)andthesegment loader (Figures 40and 41). Thegeneral flowofthelinkage editor isgiven inFigure 3andreference toitinconnection with Figures 31through 38maybehelpful. Ifaflowchart symbol (e.g., aprocessing rectangle, adecision diamond) isidentified byanumber (e.g., 910,921)above andtotheleftofthe symbol, thenumber istheFORTRAN statement number where theprocessing ortestcanbefound. Anumber followed bytheletter “a”(e.g., 330a) inthesame position ontheflowchart implies the function canbefound intheneighborhood oftheFORTRAN statement numbered bythenumber–330 in theexample. Ifaprocessing symbol, arectangular box,oftheflowchart isidentified byasymbol name above andneartheleft-hand edgeofthebox,theboxrepresents asubroutine callandthe symbolic nameisthesubroutine name. Theabbreviation “nbr” stands fortheword “number”. 7.2-79 (611171)\nNASTRAN SUPPORT PROGRAMS LKEDO00 ,LReadPrint, Decode, andConvert 1stCard inINPUT Name =LINKEDIT YES 921 Is Continued NO910 PrintFatal ErrorMessage Read,Print, Decode, andConvert NextCard_fSTOP Endof NO rd? YES 960 FileSpecs_O_ YES Allocate Buffers andIndices and OpenSYSUTI _EXITYES toLKEDOI5PrintFatal ErrorMessage Figure 31(a).;_EXIT toLKEDOI0 STOP Flowchart forLKEDO00. 7.2-80 (6/I/71)\nP lr onDESIGN OFTHECDC6400/6600 LINKAGE EDITOR XREF LET928 930.TRUE. ÷XREF .TRUE. -_LET N_LIST932 .FALSE. ÷LIST NmMAP933 .FALSE. ÷MAP _UTFILEI’_921 935 934 Invalid Keyword950A 91o SaveValue I ofPARAMSaveFileName andStatus Figure 31(b). Flowchart forLKEDO00. 7.2-81 (6/1/71)\nNASTRAN SUPPORT PROGRAMS LKEDOI0 ,lOpenINFILE. Copy Bootstrap Program toSYSUTI ReadDirectory Record forLink 130 Close INFILE I.. _,,,3 words CopySegments FromINFILE to SYSUTI LWrite Index Record forLinkPrintFatal ErrorMessage Figure 32.Flowchart forLKEDOIO. 7.2-82 (6/I/71)\nDDESIGN OFTHECDC6400/6600 LINKAGE EDITOR LKEDOI 5 Read, Print, and Convert LIBRARY Card Check FormatPrintFatal ErrorMessBge Test _.._sition on End \u003c_nuation NO 210 OpenSYSUT2 inBuffer 2 /_llocate Storage for Subprogram Nameand EntryPointTables Initialize Table Pointers OpenaLibrary inBuffer 3 _230NotEnd Read,Print, and Convert NextCard IAdd NameofLibrary to_Library Table (ignore ifAlready inTable) Figure 33(a). Flowchart forLKEDOI5. 7.2-83 (6/]/7])\nNASTPJ_N SUPPORT PROGRAMS Read aDeck From theLibrary 350 CloseLibrary. Store Pointer inLibrary TabletoFirstDeck inNextLibrary I, Move Subprogram Name ] Table andEntry Point I Table soThat They Use I Only Actual Size Required I IResetTable Pointers toNewLocationsNO Trytofind PIDL TablePrintWarning Message Ignore Deck _230 NO AddNameofSubprogram toSubprogram Names Table. Advance Pointer toNextEntryPrintWarning Message Ignore Deck 230 YES .,J’ EXIT toLKED900 Print Fatal Message (5) WriteDeckonSYSUT2 Figure 33(b). Flowchart forLKEDOI5. 7.2-84 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 230 I Locate ENTRTable i NO ? ForEachEntry Point, Store NameandPointer inEntry Point Table NO 30 (EXITtoLKED900 Print Fatal Error Message (5)( ABORT With XDUMP Figure 33(c). Flowchart forLKEDOI5. 7.2-85 (611171)\nNASTRAN SUPPORT PROGRAMS Initialize For 1st Pass I I Echo Card in DAYFILE -a End of Print Fatal Error s/ I Message Decode and Convert 1'1 Figure 34(a). Flowchart for control statement processing.\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR NO BAD iPrintErrorMessageforREGI_N/_VRProblem InvalidVerb INCLUDE REGIBN _VERLAY INSERT RENAME ENTRY END LINKorENDLINKS 12oo _1300 _1400 1,3,6 _8A_1500 _1600 2 _1990 4,51910 ;IPrintErrorMessage ForBadFormat 1920 PrintErrorMessage Forlllegal Verb 1930 I 61PrintErrorMessage 1940 vIForMissing Name irintErrorMessageForMisplaced Card 010 Figure 34(b). Flowchart forcontrol statement processing. 7.2-87 (6/I/71)\nNASTRAN SUPPORT PROGRAMS II00 =2 1900 LookUpName inLibrary Table PrintErrorMessage SetN_G_:23÷KERR I010 Figure34(c). Flowchart forcontrol statement processing. 7.2-88 (6/I/71)\nDDESIGN OFTHECDC6400/6600 LINKAGE EDITOR LLookUpName inLibrary Table “1121ToLKED990 Logic Error Abort LookUpSubprogram NameinGT NotinTable able n_r\u003e– l.e,s_e I.reate Entry With LASS=4or5.Store _ointer toLibrary in Field YES r _lOll Figure 34(d). Flowchart forcontrol statement processing. 7.2-89 (6/1/71)\nNASTRANSUPPORTPROGPJ_MS 1200 ?Increment Regionnbr StoreSegment nbrs inRDT 1960 _PrintErrorMessage _…Li_k __ [_kl_legal CardFor 8oo1 SaveCardinWorking Storage I NO I0 _Exi__JTOLKED900 PrintFatalError Message (0) Figure34(e). Flowchart forcontrol statement processing 7.2-90 (6/I/71)\nDESIGN OF THE CDC 6400/6600 LINKAGE EDITOR Figure 34(f). Flowchart for control statement processing. 7.2-91 (6/1/71)\nNASTRANSUPPORTPROGRAMS 1400 =1 =2 LK 21 LKEDI50 DelinkEntryFromOld SegmentandLinkto CurrentSegmentLookUpINSERTNameinGT 1421A.,, InTable._-,,Link0 INotin Table5÷KERR _]900 PrintErrorMessage Create EntryWith CLASS=7(undef.) NO 1421 Figure 34(g). Flowchart forcontrol statement processing. 7.2-92 (6/I/71)"},"title":"Programmer's Manual P100"},"/docs/programmers/programmers_manual_101/":{"data":{"":"DESIGN OFTHECDC6400/6600 LINKAGE EDITOR 15O0 =l =2 Increment Count ofRENAME CardsGetHashnbrForOld Name; HashIntoRT; FindEndofHash Chain 6÷KERR 1900H Create NewEntry inRT.Chain Entry to Previous Entry IOll _1800 Figure 34(h). Flowchart forcontrol statement processing. 7.2-93 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 1600 =I =2 ° StoreENTRYName I010\u003cEXIT ToLKED990 LogicErrorAbort 4÷KERR 1900 Figure 34(i). Flowchart forcontrol statement processing. 7.2-94 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 1990 ?SetEndofTable for ) Cards ForPass2. ) Complete Allocation of Working Storage Create Entry inGT ForLINKO$ Create Entry inGT ForSEGTAB$ Read Dictionary For Link0FromSYSUTI Create Entry inGT ForEachItemin Link0Dictionary F SetPASS=2 1002 Figure 34(j). Flowchart forcontrol statement processing. 7.2-95 (6/I/71)\nLKED025 IReopen SYSUT2. IInitialize toPro- IcessEachEntryin ItheSubprogram Names —–ITable(SNT) LLL\u003e3OlO GetLibrary Name I FromLT.GetPointers i toSNTFromLT I I \u003e3015 _ GetNameFromSNT LookUpSubprogram Name inGT [ ICLASS : 3210 \u003c [YESNASTRAN SUPPORT PROGRAMS ReadDeckFromSYSUT2 Reset CLASS tolor2. Complete LField 3060 Search AllTEXT Tables inDeck IfanyTEXTTable Points toaCommon BlockintheLCT,Set HighOrderBitinthe LCTEntry 3050 GetNext Common Block NameFromLCT LKEDIO0 LookUpCommon Block NameinGT 30501a Figure 35(a). Flowchart forLKED025. 7.2-96 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 30501a -1 1,3,4Print Warning Message 2,53055 ® 3058 30599 ToLKED990 Logic Error Abort 3054 Reset CLASS to2 3_Bi30583051 SetCLASSandL FieldsofNewEntry SetINDEX Field Figure 35(b). Flowchart forLKED025. 7.2-97 (611171)\nNASTRAN SUPPORT PROGRAMS 30553055 SetMaxL NO NOPrintWarning Message SetINDEXField LocateENTRTable 3080NOPrintErrorMessage 3210 Figure 35(c). Flowchart forLKED025. 7.2-98 (611171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 3080 3080 PickUpEntryNameFromENTRTable LKED1O0 LookUpEntry Name inGT _r -l3091 SetCLASS, LandA Fields ofNewEntry 0,2,3,4,5 3095 ! .ISetAField ofOld 7Entry 30999 _C EXIT ) ToLKED990 Logic Error ‘_bort j–x 3_O0 II0 3092\u00263094 IPrint Error Message.SetNBGBFlag 3205 Reset CLASS to4and LtoLibrary Pointer _3210 Figure 35(d). Flowchart forLKED025. 7.2-99 (6/I/71)\n3100 _YES =Undef. / ,oNASTRAN SUPPORT PROGRAMS PrintWarning MessageCALLLKED150 ResetCLASS, Land AFields inEntry YES Search TEXTTables forIDWord EXIT PrintWarning MessageYES Figure 35(e).CALLLKED990 LogicErrorAbort Flowchart forLKED025. 7.2-100 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR c 313 Store Number of Arguments inEach Entry inCall ChainLI=0 NO 0803120a lTurnonARGBit. SetPc=Number Arguments Locate LINKTable N 315 3200 PickUpExternal Reference LKEDI75 IfRequested, Rename External Reference Figure 35(f). Flowchart forLKED025. 7.2-I01 (611/71)\nNASTRAN SUPPORT PROGRAMS LKEDIO0 LookUpExternal NameinGT r -I 3170 3164 IfCallNotinPath, AddEntrytoCall Chain 2,53165 IPrintWarning Message I \u003cEXITToLKED990 LogicErrorAbort3161 Ireate NewEntryWithCLASS=7 ,o_o’_i AddEntrytoCall Chain W 3170 Figure35(g). Flowchart forLKED025. 7.2-I02 (6/I/71)\nDESIGNOFTHECDC6400/6600 LINKAGEEDITOR 31620 I Search EPT NO NO IYES LKEDI50 + Delink Entry FromOld Segment andLinkto Current SegmentLKEDSO0 LookUpSubprogram NameinGT [ re te ew n r, n’ i_ Table WithCLASS=4 200 151 SetINDEX Field inGT.I SetMaxLength ofText andDeckTable! _3210NotinTable Figure 35(h). Flowchart forLKED025. 7.2-I03(6/I/71)\n3210NASTRANSUPPORTPROGRAMS of NO 3015 .TRUE. SYSLIB SE. NO Libraries YES 3010 Undef. S_._ 3 Initialize toTrace EachSegment Chain intheGTYES YES NO UNPKSYM r_ 3280 Unpack ItemsinGT Entry 3280PrintWarning Message 298ForEachEntry inChain1 Which Matches anEntry inLINKLIB, Create aGT Entry ofCLASS=4 for | Subprogram Name | SetSYSLIB to.TRUE. 3010 Figure 35(i). Flowchart forLKED025. 7.2-I04 (6/I171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 0,632899 ToLKED990 LogicErrorAbort 4,5_3287 32871 PrintErrorMessage. SetN_GBFlag 3288 IPrint Error Message.SetN_G_Flag329 Print Error Message SetNI_G_Flag 3295 Figure 35(j). Flowchart forLKED025. 7.2-I05 (611171)\nNASTRAN SUPPORT PROGRAMS YES ? NO NO_IPrint Error Message. -[SetNOG_Flag Print Error Message SetN_G_Flag OFF TurnOff 3295 3 EXIT OK ToLKED990 LogicErrorAbort_3295 GetEntryinCall Chain NO SetPSYM:0 Figure 35(k). Flowchart forLKED025. 7.2-I06 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR LYES 3280NO 3270a_ o IPrintError Message IEachEntry inChain. F°r SetN_G_Flag Initialize toProcess EachEntry inEach Segment CallChain ]3306 “4 GetSegment Limits FromRDT [ 3310 GetSegment Chain Pointers FromSCTUnpack CallChain Entry Delink Entry From CallChain3320 NO 31 Figure 35(I). Flowchart forLKED025. 7.2-107 (611/71)\nNASTRAN SUPPORT PROGRAMS 3320__-._ IPrint Error Message. iSetNBGBFlag 4 SetAField inEntry \u003c_fCall YES 3322 YES Chain Now EmptyNO 3311 NO Create Entry inGT ForENTAB$ yEs 3310_3306 Figure 35(m). Flowchart forLKED025. 7.2-108 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR LKED050 1Initialize toProcess EachSegment Chain GetSegment Chain Pointer FromSCT. SetLENGTH=O Unpack Entry ILENGTH=LENGTH+L+I J YES Store LENGTH inSDT Figdre 36(a). Flowchart forLKED050.Initialize toProcess EachRegion 4010a GetSegment Number Defining Region FromRDT. REGLEN=O 4012 PARENT=Last Segment inRegion. LENGTH=O 4014 LENGTH=LENGTH+Length ofSegment PARENT= Parent inSDT SetMaximum Region Length 7.2-I09 (6/I/71)\nNASTRAN SUPPORT PROGRAMS NO 12 N_4olOa Replace Region Lengths IWithRegion Addresses l IbyAccumulating Lengths I 1Initialize toProcess EachRegion 4030a _ GetSegment Numbers Defining Region From RDTGetRegion Address FromRDT AddLength ofSegment toCurrent AddressStoreSegment Address andRegion Number in SDT p o 4o3 4030aInitialize toProcess EachSegment Chain [_\u003eo-] UNPKSYM _ v4050 IUnpack Entry $ Figure 36(b). Flowchart forLKED050. 7.2-110 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 0,6 404440499 ToLKED990 Logic Error Abort IIStore SubprogramAddress inLField. TurnonARGBit 4046 Store “Entry” Address inAField. Increment Address 4047 IGetSubprogram Address /viaLField. Additt_ Relative Address, and| Store inAField | 4,5,7 2 4042 Figure 36(c). Flowchart forLKED050. 7.2-III(6/I/71)\nNASTRAN SUPPORT PROGRAMS YES NO_N 0 YES Accumulate andSet Address ofENTAB$ EntryEXIT ToLKED990 LogicErrorAbort 4042 LKEDIO0 _NO I LookUpEntryinGTI I rESPrintErrorMessage. SetNOGOFlag _4070 Figure 36(d). Flowchart forLKED050. 7.2-112 (6/I/71)"},"title":"Programmer's Manual P101"},"/docs/programmers/programmers_manual_102/":{"data":{"":"DESIGN OFTHECDC6400/6600 LINKAGE EDITOR =l ?_ SaveENTRY Address LI NO JPrint Error Message. ISetN_G_Flag Look UpL_ADER. inGT NO ,_ExITToLKED990 Logic Error Abort Generate RJL_ADER. Instruction Figure 36(e). Flowchart forLKED050. 7.2-I13 (6/I171)\nNASTRAN SUPPORT PROGRAMS LKED075 _ENTER _ I PrintErrorMessage. SetNOGBFlag SetWRIT_UT =.FALSE. SetWRIT_UT =.TRUE. 4 Build andWrite BLKDATA I Program andWrite on I SYSUTI I LookUpNameofa Bootstrap Deckin theSNT5010 NO_IWrite Directory Record “lon SYSUTI _5020 Figure 37(a). Flowchart forLKED075. 7.2-114 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR NO ? ReadDeck FromSYSUT2 Write DeckonSYSUTIPrint Fatal Error Message UNPKSYM _ v5180 Unpack Entry inGT ‘r C/5009a YESWrite Directory Record onSYSUTI. Write Dic- tionary Record on SYSUTI Initialize toBuild TextforSegments GetSegment Numbers ForRegion FromRDT GetSegment Chain Pointers FromSCT _50405044 Figure 37(b).ENTAB$ YES NO tryin YESNO Build SEGTAB$. Write SEGTAB$ onSYSUTINO YES Assemble LINKO$. Write LINKO$ on SYSUTI Print First Entry 5040 Flowchart forLKED075.517O 505O 7.2-I15 (6/I/71)\nNASTRAN SUPPORT PROGRAMS EXIT ”-j- ToLKED900 LogicErrorAbort\u003e3YES ReadPIDLTable ForSubprogram onSYSUT2 =2 SetLR=1Get Length FromPIDLNO GetAddress ofEach EntryinLCTFromGT IReadENTRTable For DeckonSYSUT2 PrintEntries. IfXREF,Write Entries onSYSUT3 5100 Figure 37(c). Flowchart forLKED075.5O8O NoText-Generate Zeros. PrintStorage MapLine _5040 GetLength FromEntry. | PrintStorage MapLine.| SetLRDepending on| Position ofCommon | BlockinLCT ZeroText-Building Area. WriteDump Control Word ReadaTableFrom Deck NO 516 WriteTextonSYSUTI 7.2-116 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR AnyOther Table LINK TEXT FILLFILLTAB _I Relocate Text 1 _5103TEXTTAB _YES Relocate Text L 5103 REPL _1 lREPLTAB Figure 37(d).Relocate Text Flowchart forLKED075. 7.2-I17 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 5130 GetExternal Name LookUpNameinGT UN Unpack EntryYES _ r YES_ 5134 GetAddress FromIGTEntry Figure 37(e).EXIT . ToLKED990 LogicErrorAbort5160 I WriteTextonSYSUTI I NO CloseRecord onSYSUT3 1 I Flowchart forLKED075.5040 7.2-I18 (611/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 5134 Trace CallChain toFindEntry NO ExIT)ToLKED990 Logic Error Abort NO ISetAddress toABSENT. GetAddress From ENTAB$ Entry Perform Relocation IofAllReferences to External Symbol 5103 5130 Figure 37(f). Flowchart forLKED075. 7.2-I19 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 5170 Build Text For ENTAB$ IWriteENTAB$ onSYSUTI CloseRecord For Segment NO 5034 NO 5025 XREF? .FALSE _RETURN CloseRecord onSYSUT3 Rewind SYSUT3 I_EXIT_ToLKED077 Figure 37(g). Flowchart forLKED075. 7.2-120 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR LKED077 Initialize For Processing 7010 Read Subprogram Name andAddress NO YES_N=a?e ReadEntry Point NameandAddress LookUpEntry NameinTable ? ‘ReadExternal ReferenceNOICreate Entry. LinktoJ ListChain L LinktoListChain 7020 Figure 37(h).Flowchart forLKED075. 7.2-121 (6/I/71)\nNASTRAN SUPPORT PROGRAMS }°LookUpNamein Table _o Create Entryin Table Create CallEntry ReadLocation of External Reference NO 7O5OireaeNewcanrlPrnne Figure 37(i).AddCurrent Call Location toCall Entry Flowchart forLKED075.7050 Complete CallEntry. PrintLine 7010 External Name= LastWordRead 7.2-122 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7060 ?Initialize For2nd Pass (SORT 2) ReadLink0Dictionary FromSYSUTI. ForEach Entry inLink0Which isAlsointheTable, Link theEntry tothe Call Chain ofList 7130 _YES I IRestore Table PointerUNPKEP Unpack ListChain Entry , yEs Initialize toTrace CallChainNO UNPKXRF _ v7110 1 Unpack CallChain I Entry { Print CallsPrint Entry Figure 37(j). Flowchart forLKED075. 7.2-123 (6/I171)\nNASTRAN SUPPORT PROGRAMS LKED080 YES Create BLKDATA Program 1 WhoseLength=Length of_ Link0+2008.WriteThisI Program as1stRecordon _UTFILE OpenLINKLIB in Buffer2RETURN 229 WriteRecordWith WordENDLINKS. Close BUTFILE. ReadaDeckFrom LINKLIB andLocate PIDLTable NO Write Deckon_UTFILEiCloseLINKLIB L Exist ForJ YES ReadSubindex For LinkPoint Index toSubindex ,LReadDirectory Record ForLink.WriteDirec- toryRecord onOUTFILE CopyEachSegment FromSYSUTI to (_UTFILE Figure 38.Flowchart forLKED080. 7.2-124 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR XBBBT 1PickupControl Card FromLocations 708- 778andUnpack Each Character Intoa Separate Word FromtheControl Card Characters Formthe TwoFileNames NAME1 andNAME2 andtheoptior Specified 220 YES _Print Illegal PTI_N ] sageS I STOP _ Figure 39(a). Print Message About lIllegal UseofFile l .a son YFS Open theDirect Access FileofNameNAME2 DeclareFileNamed NAME2 tobeaC_MM_N File YESRelease itFrom C_MM_N andEvict theDiskSpace it isUsing 420 _r Determine Amount of CoreThere isAvail- able inBlank C_4_N NO SetNAME2=“SYSLM_D” _ Flowchart forsubroutine XB_T ofthebootstrap program. 7.2-125 (6/I/71)\nNASTRAN SUPPORT PROGRAMS I OpentheSequential I FileNAME1WithRewind I] I ReadOneofthe I Bootstrap Relocatables I FromFileNAME1 I LooptoCopyI Bootstrap Program_ iriteitSequentiallyonFileNAME2465 ReadLink0Directory iRecord FromFileNAME1 WriteDirectory Record| asDirect Access Recor UsingSub-lndex on| FileNAME2 | ReadLink0Dictionary FromFileNAME1and Write itOutasDirect- Access Record 2Using Sub-lndex onFileNAME2 IReadLink0\"Supermain\" 1 Directly IntotheCoreI SpaceitWillOccupy atJ Z(1)in/XB_TBD/ FromI FileNAME1 1Writeout\"Supermain\" asDirect-Access Recorc Record Nbr3Using Subindex onFileNAME2 SetIndexSpecification inFETtoPointtothe Master Index WriteOuttheLink0] Subindex asDirect- Access Record 2Using theMaster Indexon FileNAME2IRedefine theSpaceOccupied forUseby theSubandMaster Indices tobethe Actual Predefined SpaceinSupermain Rebuild theFET ForDirect-Access FileNAME2inits Permanent Location inSllpPrm_._.n 570 _\" ReadaLink Directory From FileNAME1 v700 ! PrintErrorMessage i About Invalid J Directory Record STOP Figure 39(b). Flowchart forsubroutine XB_Tofthebootstrap program. 7.2-126 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR w 70 Close theSequential FileNAMEI WithRewindNOi _IDefine Index inFET toPoint totheSubindex J.,r SettheField Length inLocations 738and 768 YES CloseFileNAME2 WithRewind OnlyClose FileNAME2 WithUnload Execute C_MM_N Macro onNAME2 toRe-attach C(_ON FiIe ReopenFileNAME2Direct-AccessTransfer Control to Location lOl8inCore Figure 39(c). Flowchart forsubroutine XB_T ofthebootstrap program. 7.2-127 (611171)\nNASTRAN SUPPORT PROGRAMS WriteOuttheDirector) Record asDirect-Access Record 1UsingSub- IndexonFileNAME2 SetLINKNumber and NUMSEGS FromDirectory Record Data NUMSEGS _Complete Define IndexinFET toPointtoMaster Index IWrite Sub-lndex For LinkJustCataloged asDirect-Access Record LINKNUM+2 sing Master-lndex) onFileNAME2 570IReadaSegment FromI FileNAME1 l PrintInsufficient L _ _- ! WritetheSegment as T Direct-Access Record (STOP _)I+IUsingtheSub- j indexonFileNAME2 Figure 37(d). Flowchart forsubroutine XBOOTofthebootstrap program. 7.2-128 (6/I171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Print Message That NAME1 MayNotbe Different FromNAME2 on_PTI_N=“ATTACH” Write aMessage STOP220 or N/_ME2=\" B1ank\" ? YES 750 Insufficiel cient Core IOpentheDirect- Access FileNAMEI i ‘Read inSubindex For LinkO,Which is Record 2,Using the Master Index 1Define FETtoPoint toThisSubindex JustRead IReadinLink0Direc- tory=Record lUsing theSubindex iI SetLink0\"Supermain\"L Length ]ReadinSupermain = Record 3Using the Sub-lndex Supermain isRead Directly Intoits Permanent Location inC)re 1I Redefine FETinits I Permanent LocationIinSupermain MoveMaster Index FromWorking FETto Permanent Location lOl8inCore ransfer Control tOre_cation I018inCo Figure 39(e). Flowchart forsubroutine XB_T ofthebootstrap program. 7.2-129 (6/I/71)\nNASTRAN SUPPORT PROGRAMS LINK 1StoreinWord8of theFETtheMaster IndexAddress and Length Compare theRequested LinkNumber Withthe Master IndexLength toDetermine ifitis inRange ICallLINKERR to 1 theLink_ NO.]WriteMessage “LINKi Number inJ “|NUMBER ISOUTOFI “’,,_ngej,-/ L…_NGE.” _ j’Relative Track YES ReadintheSub-\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR ?Check LinkNum}_er in Directory toVerify WeHaveCorrect Link atHand Check ForSufficient CoretoLoadLowest Segment ofLinkNO NO Read inRecord 2UsingI Subindex. This is I theRootSegment ForI theLink ITurn onLeft-Most Bit inSEGTAB$ Segment l Word toIndicate Segment lisinCore Branch toEntry PointoftheLinkinthe Rootsegment JustLoaded (ACTUAL EXIT)ICallLINKERR toWrite I _lMessage INCORRECT IDIRECTQRY RECORD FQR ICallLINKERR toWrit_Message “INSUFFICIENT C_RE F_RLINK–.\";CSTOP STOP Figure 40(b). Flowchart forsubroutine LINKofthesegment loader. 7.2-131(6/I/71)\nNASTRAN SUPPORT PROGRAMS LOADER. 1Determine Address of theENTAB$ Entry WhichCalled L_ADER. 1 ickOffSegment NumberromLastWordof I NTAB$Entry(Thisis heSegment inWhichtheI ntryPointoftheTrue allResides) 1LookatSEGTAB$ Entry | ForThisSegment and NoteifitisLoaded l(Bit59willbeonif [Segment isinCore)MovetheActual Jump- BackInstruction From theNext-to-Last Word intheENTAB$ Entry, totheTrueEntryPoin Given intheRight18 BitsoftheLastWord intheENTAB$ Entry. IIftheNumber ofArgu- ments asGiven inthe Right18Bitsofthe ThirdWordFromthe Bottom oftheENTAB$ EntryisGreater Than 6,theNumber ofArgu- mentAddresses Over6 asStored intheTop oftheENTAB$ Entry areMovedtotheStor- ageAreaintheCalled RoutineNO Transfer Control tothe_TrueEntry+1asGiven intheLastWordofthe ,,ENTAB$ EntryISaveBRegistersB1Through B6 ITurnonMARKED-FOR- IL_ADBitForSEGTAB$ I EntryofSegment in| TreeIfIN-CORE BitOf ]PickupParent Segment Number of Segment JustMARKED- IF_R-L_AD _ _NO / PickupWordin I SEGTAB$ ForThis Segment Figure 41(a). Flowchart forsubroutine L_ADER. ofthesegment loader. 7.2-132 (611171)"},"title":"Programmer's Manual P102"},"/docs/programmers/programmers_manual_103/":{"data":{"":"DESIGN OFTHECDC6400/6600 LINKAGE EDITOR SetLoadOrigin Address ofHighest Segment tobeLoaded FromLastSEGTAB$ Entry MARKED-F_R- L_AD PickOffRegion Number ofLastSegment MARKED- F_R-L_AD inSEGTAB$ Entry Sweep Through SEGTAB$ Entries andFindFirst Segment Having Same Region Number asSeg- ments MARKED-F_R-L_AD PickupNextSEGTAB$ Entry inRegion Restore BRegisters Y_e OutRegion ADBit BitonandDoes Se, HaveanOrigin Lower Than TreeBeing Loaded ?ReadSegment Into | CoreandTurnOff MARKED-F_R-L_AD Bit andTurnonIN-C_RE Bit I Turn OffIN-C_RE | BitForSegment r Figure 41(b). Flowchart forsubroutine L_ADER. ofthesegment loader. 7.2-133 (611171)\nNASTRAN SUPPORT PROGRAMS 7.2.4 Subroutine Descriptions Thissection contains descriptions forlinkage editor subroutines, whichareclassified in fourcategories: I.Majorsubroutines. ThesearecodedinF_RTRAN andarenamedLKEDxxx, where I00\u003cxxx\u003c299. Ingeneral thesesubroutines operate onthelinkage editor tables in working storage. 2.Linkage editor utilities. TheseareC_MPASS routines thenamesofwhicharerelated tothefunction theyperform. Theyareallentry points insubprograms namedLKEDxxx, where300\u003cxxx\u003c399.Mostoftheseroutines perform tasksdirectly related tothe linkage editor suchasfieldmanipulation oftableentries. 3.General utilities. TheseareC_MPASS andF_RTRAN routines theprimary functions of whicharegeneral innature andnotlimited tolinkage editor applications. Nonaming convention exists forthegeneral utilities. Several oftheseroutines (e.g., XRCARD, MAPFNS) areusedintheNASTRAN program. 4.Miscellaneous. Thesearewritten primarily inFORTRAN andperform auxiliary tasksfor thelinkage editor. Thenaming convention isLKEDxxx, where900_xxx_999.Anexample isLKED990, aroutine which abnormally terminates thelinkage editor intheeventofan error inthelogic. Muchofthecommunication amonglinkage editor subroutines isviasevennamedcommon blocks, LKEDCxx, where Ol_xx_07.Section 7.2.6givesdefinitions oftheprincipal variables inthese common blocks. Table 2givesinalphabetical order theentrypoints described insection 7.2.4alongwith thesubsection numbers where thedescriptions canbefound. 7.2-134 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Table 2.Entry Points Described inSection 7.2.4. Entry Point Section Number Entry Point ABSENT. 7.2.4.3.5 REINDX ANDF 7.2.4.3.21 REPLTAB CALLCHN 7.2.4.2.8 RSHIFT CHARTST 7.2.4.2.12 RSHIFTX COMPARE 7.2.4.3.4 SEGPATH COMPLF 7.2.4.3.21 STOEXT CONVERT 7.2.4.2.10 SYMHASH CORDUMP 7.2.4.3.6 TEXTTAB C_RWDS 7.2,4.3.24 UNPK FIELDLN 7.2,4.3.27 UNPKI2 FILLTAB 7.2.4.2.21 UNPK30 GETEXT 7.2.4.2.17 UNPKCAL HASH 7,2.4,2,30 UNPKEP LINK20. 7.2.4.3.28 UNPKID LINKERR 7.2.4.3.29 UNPKMSK LINKTBI 7.2,4.2.22 UNPKSYM LINKTB2 7.2,4.2.22 UNPKXRF LKEDIO0 7.2,4.1.I UNPKXX LKEDI50 7.2.4,1.2 WRITEX LKED175 7.2.4.1.3 XBKPREC LKED200 7.2.4.1.4 XBKREC LKED201 7.2.4.1.4 XCL_SE LKED900 7.2.4.4.1 XDUMP LKED990 7.2.4.4.2 XEOF LKED995 7.2.4.4.3 XEVICT LSHIFT 7.2.4.3.21 XFETCH LWORDS 7.2,4.3.23 XFRDREC N_W 7.2.4.2.19 XJUMP ORF 7.2.4.3.21 XOPEN PACK 7.2.4.2.3 XRCARD PACK12 7.2.4.2.6 XREAD PACKCAL 7.2.4.2.16 XREQST PACKDMP 7.2.4.2.26 XREWIND PACKSYM 7.2.4.2.2 XSTORE PACKXRF 7.2.4.2.27 XTRACE PACKXX 7.2.4.2.14 XWRITE READX 7.2.4.3.15 ZAPSection Nu_er 7,2.4.3.11 7.2.4,2.23 7.2.4.3.21 7.2.4.2.11 7.2.4.2.9 7.2.4.2.18 7.2.4.2.7 7.2.4.2.20 7.2.4.2.4 7.2.4.2.5 7.2.4.2.24 7.2.4.2.15 7,2.4.2,29 7.2.4.2.25 7.2.4.2.4 7.2.4.2.1 7.2.4.2.28 7.2.4.2.13 7.2.4.3.14 7.2.4.3.19 7.2.4.3.17 7.2.4.3.9 7.2.4.3,3 7.2.4.3.7 7.2.4.3.10 7.2.4.3.22 7.2.4.3.18 7.2.4.3.25 7,2.4.3.8 7.2.4.3.1 7.2.4.3.13 7.2.4.3.20 7.2.4.3.16 7.2.4.3.22 7.2.4.3.2 7.2.4.3.12 7.2.4.3.26 7.2-135 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.4.1 Major Subroutines 7.2.4.1.1 LKEDIO0 Subprogram name: LKEDIO0 Type ofroutine: Subroutine Alternate entry points: None Purpose: Tolocate anentry intheGeneral Table. Ifnoentry isfound andanoption is selected, anewentry intheGTiscreated. Calling Sequence: CALL LKEDIOO(NAME,POINTER,ZPOINT,SEGNO,STATUS,FLAG) NAME -(input) symbolic name, left justified, zero filled POINTER -(output) relative location ofentry iffound orcreated; zero ifnotfound andnotcreated ZP_INT -(output) ITABO+POINTER iffoundorcreated; undefined otherwise, where ITABOisazeropointer totheGT SEGNO -(input) ifentry isnotfoundandFLAG#0andSEGNO_O,thenewlycreated entry ischained tothesegment defined bySEGNO. STATUS -(output) ifentrywasnotfound (whether created ornot),STATUS =-I. Otherwise, STATUS =CLASS (seesection 7.2.2.1.9) ofentry (0_STATUS _7) FLAG (input). Ifentry isfound, FLAGisignored. Ifentry isnotfoundand FLAG:O,return ismadewithPOINTER =0andSTATUS =-I.Otherwise, (i.e., FLAG_0),anewentry iscreated andPOINTER points toitwhile STATUS =-Iindicates thiscase. Method: HASH(section 7.2.4.2.30) iscalled toobtain thehashnumber forNAME. SYMHASH (section 7.2.4.2.7) iscalled tolocate theentry intheGeneral Table. Iftheentry isin thetable, thenreturn isgivenwithPOINTER pointing totheentry, ZP@INT =ITABO+P_INTER andSTATUS :CLASSoftheentry. Iftheentry isnotinthetableandFLAG=O,return is givenwithP_INTER =0andSTATUS =-I.Otherwise anewentryiscreated intheGT.If SEGNO_O,thenewentry ischained tothesegment chaindefined bySEGNO. Return isgiven withPOINTER pointing tothenewentry, ZPOINT =ITABO+POINTER andSTATUS =-I. 7.2-136 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Language: F_RTRAN 7.2.4.l.2 LKEDI50 LKEDI50 Type ofroutine: Subroutine Alternate entry points: None Purpose: Todelink asymbol entry intheGeneral Table from itsposted segment chain and linktheentry toanewsegment chain. Callinq Sequence: CALLLKEDI50(P_INTER,ZP_INT,SEGNBR) P_INTER -(input) points toanentry intheGT. ZP_INT -(input) =TABO+P_INTER, where ITABO isthezeropointer totheGT SEGNBR –(input) newsegment number towhich entry isnowtobelinked Method: Theposted segment number andsegment chain pointers areobtained fromthe3rd word oftheGTentry byUNPKXX (section 7.2.4.2.13). Thebeginning andending segment chain pointers areobtained fromtheSCTbyUNPKI2 (section 7.2.4.2.5). Theentry isthen delinked (removed) fromtheposted segment chain. Segment chain pointers forthenewsegment (defined bySEGNBR) areobtained fromtheSCTbyUNPKI2. Theentry isnowlinked (added) to theendofthenewsegment chain. Updated chain pointers forboth theoldandnewsegment chains arestored intheSCT. Anupdated 3rdword oftheGTentry isstored. Language: F_RTRAN 7.2.4.1.3 LKED175 Subprogram name: LKEDI75 Type ofroutine: Subroutine Alternate entry points: None Purpose: ToPerform therename function (seesection 5.6.4.9) Calling Sequence: CALLLKEDI75(NAME,DKNAME,NEWSTAT) NAME (input/output) nameoftheexternal reference tobetested forrenaming. therename occurs, NAMEisreplaced bythenewname.If 7.2-137 (6/I/71)\nNASTRAN SUPPORT PROGRAMS DKNAME (input) nameofsubprogram inwhichNAMEisanexternal reference NEWSTAT -(output) alogical variable setto.TRUE., ifarename occurred; .FALSE., otherwise. Method: NEWSTAT issetto.FALSE.. IftheRename Tableisempty, return isgiven. Other- wise, HASH(section 7.2.4.2.29) andSYMHASH (section 7.2.4.2.7) arecalled tolocate the entry intheRename Table. Iftheentryisnotinthetable, return isgiven. Otherwise, NAMEissettothenewname,NEWSTAT issetto.TRUE., andreturn isgiven. Lanquage: F_RTRAN 7.2.4.1.4 LKED200 Subproqram name: LKED200 Typeofroutine: Subroutine Alternate entrypoints: LKED201 Purpose: Todetermine ifacall(external reference) isinthepathofthesubprogram making thecall. Ifthecallisnotinthepath,anentryisaddedtothecallchainofthecurrent subprogram andlinked totheENTAB$ chainofthecalling segment. LKED201 performs allthe logicasLKED200 doesexcept thepathtest. Callinq Sequence: LKE02001CALLILKED2011 (TOPTR,TOSEG,FROMSEG) TOPTR (input) pointer inGTtoentrydefining thesymbol called (external reference). TOSEG (input) segment number ofexternal reference FROMSEG -(input) segment number fromwhich calloriginates. Method: Ifentrycomesthrough acalltoLKED200, thenSEGPATH (section 7.2.4.2.9) iscalled todetermine ifthecallisinthepath. Ifitis,return isgiven. Otherwise, codecommon withLKED201 isexecuted. CALLCHN (section 7.2.4.2.8) iscalled todetermine ifanyentry isalready inthecallchain. Ifso,return isgiven. Ifnot,anentry inthecallchain iscreated. Theentryislinked totheENTAB$ chainforthesegment defined byFRBMSEG. Thefields oftheentryarecompleted andreturn isgiven. Languaqe: FORTRAN 7.2-138 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 7.2.4.2LinkageEditorUtilities 7.2.4.2.1 UNPKSYM Subproqram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tounpack intoIIwordstheIIfields ofa3-word symbol entryintheGeneral Table (seesection 7.2.2.1.9) Callinq Sequence: CALLUNPKSYM(Z(ZPOINT),ITEMS) Z(ZP_INT) -(input) address oftheIstwordofthesymbol entry ITEMS -(output) address ofanarrayofdimension IIwhere thefields oftheentry willbestored asfollows: (I)Symbol name (2)CLASS (3)P1 (4)INDEX (5)L (6)Pc (7)PN (8)SEG (9) A (lO) PREV (ll) NEXT Note: theARGbitisnotunpacked Method: Fields areextracted using bitmasks constructed bytheMXiinstruction shifts and logical products. Language: C_MPASS 7.2-139 (6/I/71)\n7.2.4.2.2 PACKSYMNASTRAN SUPPORT PROGRAMS Subprogram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: TostoretheIIfields ofa3-word symbol entryintheGeneral Table froman ll-word array(seesection 7.2.2.1.9) Callinq Sequence: CALLPACKSYM(Z(ZP_INT),ITEMS) Thearguments aredefined asinUNPKSYM (seesection 7.2.4.2.1) Method: Eachwordofthe3-word entryisconstructed usingshiftandlogical suminstructions. Fields arenotexamined formaximum size. Language: C_MPASS 7.2.4.2.3 PACK Subprogram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: PACKMSK Purpose: Tostoreasingle iteminawordwhichcontains morethanoneitem. Calling Sequence: CALLPACK(ENTRY,ITEM,BIT,WIDTH) CALLPACKMSK(ENTRY,ITEM,BIT,MASK) ENTRY-(output) address ofwordwhere ITEMistobestored ITEM (input) itemtobestored BIT (input) position ofthelow-order bitinthefieldinENTRYwhere ITEMistobe stored (numbering convention isthatthehighorderbitinawordis59andthe loworderbitisO.Bitsarenumbered fromlefttoright). WIDTH -(input) widthofthefieldinbitpositions MASK-(input) amaskofl-bits intheloworder position oftheword,thenumber of l-bits isthewidthofthefieldwhere ITEMisstored. Theremainder ofMASK mustbezero-filled. 7.2-140 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Method: IFPACK iscalled, amaskof\"l\"bitsspecified byWIDTH isconstructed inthe low-order partofaword, with theremainder ofthewordzero-filled. IfPACKMSK iscalled, thisstepisnotnecessary. Thewordspecified byENTRYiis fetched, shifted according to BIT,therequested field iscleared using alogical product with thecomplement ofMASK, ITEMisentered using alogical sum,thewordisshifted toitsoriginal position, andstored backinmemory. Language: CI_MPASS 7.2.4.2.4 UNPK Subprogram name: LKED300 Type ofroutine: Integer function Alternate entry points: UNPKMSK Purpose: Toextract asingle itemfrom awordwhich contains more thanoneitem. Callinq Sequence: ITEM=UNPK(ENTRY,BIT,WIDTH) ITEM=UNPKMSK(ENTRY,BIT,MASK) Where thearguments aredefined asinPACKandPACKMSK (seesection 7.2.4.2.3) Method: IfUNPKiscalled, amaskof\"l\"bits specified byWIDTH isconstructed inthelow- order partoftheword, withtheremainder oftheword zero-filled. IfUNPKMSK iscalled, thisstepisunnecessary. Thewordspecified byENTRY isfetched, shifted according toBIT andtheitemisextracted using alogical product. ENTRY remains unchanged inmemory. Language: C_MPASS 7.2.4.2.5 UNPKi2 Subprogram name: LKED300 Type ofroutine: Subroutine Alternate entry points: None Purpose: Tounpack four15-bit items fromaone-word entry oreight 15-bit items fromatwo- word entry. 7.2-141(6/I/71)\nNASTRAN SUPPORT PROGRAMS Calling Sequence: CALLUNPKI2(ENTRY,ITEMS,K) ENTRY-(input) address oftheIstwordofaone-word ortwo-word entry. ITEMS-(output) address oftheIstwordofa4-word or8-word arraywherethe unpacked itemswillbestored, right-adjusted, zero-filled K Method : Language:(input) 1or2specifying thenumber ofwords tobeunpacked Itemsareextracted usinga15-bit mask, logical product and15-bit shiftinstructions. C_MPASS 7.2.4.2.6 PACK12 Subprogram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Topackfour15-bit items intoaone-word entryoreight 15-bit itemsintoatwo- wordentry. Call_____ing Sequence: CALLPACKI2(ENTRY,ITEMS,K) where thearguments aredefined asinUNPKI2 (seesection 7.2.4.2.5) Method: Usingashiftandlogical sum,theitemsarepacked together. Note: Itemsarenotexamined formaximum size(_15bits) Lanquaqe: COMPASS 7.2.4.2.7 SYMHASH Subprogram name: LKED300 Typeofroutine: Integer Function Alternate entrypoints: None Purpose: Tolocate asymbol entryinatable Calling Sequence: P_INTER =SYMHASH(TABLE,NAME,HASHNBR,STATUS) 7.2-142 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR TABLE -(input) address oftheOthword inthetable (i.e., address ofthe Istwordminus one) NAME -(input) symbol tobelocated, left-justified, zerofilled HASHNBR -(input) hashnumber ofthesymbol POINTER andSTATUS -(output) ifentry forsymbol isnotintable: POINTER =0 STATUS points tolastentry insymbol chain. ifentry isintable: POINTER points toentry STATUS =CLASS ofentry Method: Beginning with theentry towhich HASHNBR points, thesymbol chain issearched for amatch. Iffound, POINTER andSTATUS aresetasdefined above. Iftheendofchain is encountered before amatch occurs, P_INTER issettozero andSTATUS issettopoint tothe lastentry inthesymbol chain. Language: COMPASS 7.2.4.2.8 CALLCHN Subprogram name: LKED300 Typeofroutine: Integer Function Alternate entry points: None Purpose: Totrace thechain ofcalls toasymbol. Calling Sequence: POINTER =CALLCHN(TABLE,CALLPTR,FROMSEG,STATUS) TABLE -(input) address ofOthword intable CALLPTR -(input) pointer toentry ofsymbol called FROMSEG -(input) segment number fromwhich calloriginates POINTER andSTATUS -(output) ifnochain exists: POINTER =STATUS =0 ifcall isalready inchain: POINTER =O,STATUS _0 7.2-143 (611171)\nNASTRAN SUPPORT PROGRAMS ifcallisnotinchain: POINTER points tolastentryincallchain STATUS _0 Method: Acallchainexists iftheARGbit=0andPc#O.Thissituation istested. If nottrue,return ismadewithPOINTER =STATUS =O.Acallisdefined tobealready inthe chainifthesegment number fromwhichthecalloriginates matches theFROMfieldofthecall entry. Thechainissearched forthiscondition. Iffound, POINTER andSTATUS aresetas defined above. Otherwise, P_INTER points tothelastentryinthechainandSTATUS isset tononzero. Language: C@MPASS 7.2.4.2.9 SEGPATH Subprogram name: LKED300 Typeofroutine: Logical Function Alternate entrypoints: None Purpose: Todetermine ifthesegment called isinthepathofthesegment fromwhich the callismade. Calling Sequence: LVAR=SEGPATH(Z(ISEGDO),TOSEG,FROMSEG) LVAR -(output) logical variable whichis.TRUE. ifcallisinthepath; .FALSE. otherwise Z(ISEGDO) -(input) address oftheOthwordoftheSegment Definition Table TOSEG -(input) segment number towhichcallismade FROMSEG -(input) segment number fromwhich callismade Method: Starting withtheentryintheSDTtowhich FROMSEG points, theparent oftheseg- mentischecked. Ifitmaches T_SEG, LVARissetto.TRUE. andSEGPATH returns. Ifthe parent iszero,LVARissetto.FALSE. andreturn isgiven. Otherwise, thesegment to which theparent points isfetched andthetestsrepeated. Language: COMPASS 7.2-144 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.4.2.10 CONVERT Subproqram name: LKED300 Typeofroutine: Integer Function Alternate entry Points: None Purpose: Toconvert asymbol stored ina2-word array of4characters perword, left justified, blank filled (NASTRAN format) toasingle word, left-justified, zerofilled. Callinq Sequence: NEWNAME =CONVERT(OLDNAME) OLDNAME -(input) 2-word array of4characters perword, leftjustified, blank filled NEWNAME -(output) oneword, leftjustified, zerofilled Method: Eachcharacter of_LDNAME istested until ablank character isfound or8characters havebeenexamined. Character positions starting withtheblank andthose succeeding areset tozero. Languaqe: COMPASS 7.2.4.2.11 RSHIFTX Subprogram name: LKED300 Type ofroutine: Integer Function Alternate entry points: None Purpose: Toshift acomputer word totheright aspecified number ofbitpositions. Callin 9Sequence: SHIFTED =RSHIFTX(NUMBER,N) SHIFTED -(output) shifted word NUMBER -(input) computer word tobeshifted N -(input) number ofbitpositions toshift Method: Thenumber isassumed tohavethehighorder bitequal tozero (this isnottested). TheAXiinstruction isused. Lanquaqe: COMPASS 7.2-145 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.4.2.12 CHARTST Subprogram name: LKED300 Typeofroutine: Logical Function Alternate entrypoints: None Purpose: Totestaposition inaXRCARD output buffer (seesection 3.4.19) foraspecific delimiter. Callinq Sequence: LVAR=CHARTST(_UTBUF(K),CHAR) LVAR -(output) logical variable whichis.TRUE. ifOUTBUF(K) andOUTBUF(K+I) contain thespecified delimiter; .FALSE. otherwise _UTBUF(K) -(input) address ofa2-word arrayofcharacters stored 4characters per word, leftjustified, blankfilled CHAR (input) address ofacharacter stored inIHformat (i.e., leftjustified, blankfilled) Method: Letthecharacter beCandablankbeb.Thenthetwowords at_UTBUF(K) and _UTBUF(K+I) mustbeCbbbbbbbbb andbbbbbbbbbb. Thewordsaretested forthatcondition. Ifthecondition issatisfied, LVARissetto.TRUE.. Ifnot,LVARissetto.FALSE.. Language: C_MPASS 7.2.4.2.13 UNPKXX Subprogram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tounpack the2ndor3rdwordofasymbol entry intheGeneral Table (seesection 7.2.2.1.9). Calling Sequence: CALLUNPKXX(Z(1),ITEMS) Z(1)-(input) address ofthewordtobeunpacked (2ndor3rdwordofaGTentry) ITEMS-(output) address ofa4-word arraywhere thefouritemswillbestored. 7.2-146 (6/i171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Method: Usingappropriate bitmasks, shifts, andlogical products, thefields oftheword areextracted andstored. Language: COMPASS 7.2.4.2.14 PACKXX Subprogram name: LKED300 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Topack4itemsintothe2ndor3rdwordofasymbol entryintheGeneral Table (seesection 7.2.2.1.9) Calling Sequence: CALLPACKXX(Z(I),ITEMS) wherethearguments aredefined inUNPKXX (seesection 7.2.4.2.13) Method: Usingappropriate shifts andlogical sums,theitemsarepacked intoasingle word andstored inthetable. Theitemsarenotchecked forbeingwithin thespecified field width. Languaqe: COMPASS 7.2.4.2.15 UNPKCAL Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tounpack theitemsinthefirsttwowordsofacallentryintheGeneral Table (seesection 7.2.2.1.9) Calling Sequence: CALLUNPKCAL(Z(1),ITEMS) Z(1) (input) address ofcallentryinGT ITEMS-(output) a9-word arraywheretheitemsfromthefirsttwowordsofthecall entryarestored asfollows: (I)PREV (2)NEXT 7.2-147 (611/71)\nNASTRAN SUPPORT PROGRAMS (3)NBRARG (4)CLASS=6 (5)P1 (6)FR(_M (7)PFR(_M (8)PNEXT (9)PSYM Method.\" Theitemsareextracted usingappropriate bitmasks, shifts, andlogical products. Lanouaqe: C_MPASS 7.2.4.2.16 PACKCAL Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Topacktheitemscomprising thefirsttwowordsofacallentry intheGeneral Table (seesection 7.2.2.1.9) Calling Sequence: CALLPACKCAL(Z(1),ITEMS) wherethearguments aredefined asinUNPKCAL (seesection 7.2.4.2.15) Method: Theitemsarepacked usingshifts andlogical sums. Fieldwidthsizesarenot checked. Language: COMPASS 7.2.4.2.17 GETEXT Subprogram name: LKED320 Typeofroutine: Integer Function Alternate entrypoints: None Purpose: Toconvert asingle wordanexternal reference intheLINKTable (seesection 7.2.5) whenitissplitbetween twowords. 7.2-148 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINICAGE EDITOR Callinq Sequence:_ EXTNAME =GETEXT(Z(J)) EXTNAME -(output) external reference Z(J) (input) address ofthefirst oftwowords where theexternal reference is stored intheright half ofZ(J) andtheleft half ofZ(J+l) Method: Using a30-bit mask, shifts, andlogical products, theexternal reference is constructed from thetwowords. Lanquaqe: C_MPASS 7.2.4.2.18 STOEXT Subproqram name: LKED320 Type ofroutine: Subroutine Alternate entry points: None Purpose: Tostore anexternal name intheLINK Table (see section 7.2.5) when thename is split between twowords. ST_EXT istheinverse ofGETEXT (section 7.2.4.2.17) Calling Sequence: CALL ST_EXT(Z(J),EXTNAME) where thearguments aredefined asinGETEXT Method: Using masks andshifts, EXTNAME issplit into twohalves andstored intheright half ofZ(J) andleft half ofZ(J+l). Lanquaqe: C_MPASS 7.2.4.2.19 N_W Subprogram name: LKED320 Type ofroutine: Subroutine Alternate entry points: None Pur_E]_ose: Toreturn thedate andtime ofday Callinq Sequence: CALLN_W(A) A-(output) address ofatwo-word arraywhere 7.2-149 (611171)\nNASTRAN SUPPORT PROGRAMS A(1)=timeofday(BCD) A(2)=date Method: ThetimeofdayisfoundusingtheSC_PECLOCKmacro, andthedateisfoundusing theDATEmacro. Language: C_MPASS 7.2.4.2.20 TE×TTAB Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Toperform relocation oftextwords inaTEXTTable (seesection 7.2.5) Calling Sequence: CALLTEXTTAB(Z(L_C),Z(1),N,ADDRESS) Z(LOC) (output) address where thefirstwordofrelocated textwillbestored Z(1) (input) address offirstwordofTEXTTable. N (input) number ofwords inTEXTTable ADDRESS -(input) relocation address (i.e., address ofsubprogram orcommon block to whichtextrefers) Method: Seesection 7.2.5foradescription oftheTEXTTableofasubprogram. Thefirst wordofaTEXTTableisarelocation indicator word. Itisusedtodetermine whatkindof relocation applies toeachoftheaddress fields intheremaining wordsoftheTEXTTable. Lanquaqe: COMPASS 7.2.4.2.21 FILLTAB Subproqram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Toperform relocation ofaddress specified bytheFILLTable Callinq Sequence: CALLFILLTAB(Z(ITEXT),Z(JLCTO),Z(J),N,LR) 7.2-150 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Z(ITEXT) -(output) address oftheIstword oftext forthecontrol section currently being constructed Z(JLCTO) -(input) address oftheOthword oftheLocal Common Table (LCT) (see section 7.2.5) Z(J) (input) address oftheIstword oftheFILL Table N -(input) nun_er ofwords intheFILL Table LR (input) pointer intheLCTtothecontrol section currently being constructed. Method: Seesection 7.2.5 foradescription oftheFILL Table ofasubprogram. A30-bit byte isextracted from theFILL Table. Ifitisacontrol byte, therelocated address is fetched from theLCT. Ifitisadata byte, thetext word containing thereference tobe relocated isfetched, therelocation isperformed (upper, middle orlower depending onP), andtherelocated word isstored back inthetext area. This process isrepeated foreach 30-bit byte until theendofthetable isencountered. Language: COMPASS 7.2.4.2.22 LINKTBI Subprogram name: LKED320 Type ofroutine: Function Alternate entry points: LINKTB2 Purpose: LINKTBI returns anexternal name from theLINK Table (see section 7.2.5), and LINKTB2 performs relocation ofallreferences totheexternal name. Calling Sequences: EXTNAME =LINKTBI(Z(IO),J,SWITCH) LVAR =LINKTB2(ADDRESS,Z(ITEXT),LBC) EXTNAME J SWITCH Z(IO) LVAR-(output) name ofexternal reference -(input/output) current pointer inLINK Table (starting with l) -(input) current byte pointer (-=high order, +=loworder) -(input) address ofOthword inLINK Table (output) logical variable which if.TRUE. means thenext call must beto LINKTB2 andif.FALSE. means thenext call must betoLINKTBI. Note: 7.2-151 (611/71)\nNASTRAN SUPPORT PROGRAMS LINKTBI isalways called firstatthebeginning oftheanalysis oftheLINK Table. ADDRESS -(input) address oftheexternal namereturned fromlastLINKTBI call. Z(ITEXT) -(input/output) address offirstwordoftextbeingconstructed. L_C (input) relative address intextofexternal reference toberelocated. Method: Seesection 7.2.5foradescription oftheLINKTableofasubprogram. LINKTBI extracts thenameoftheexternal reference. Ifthebyteswitch isplus,thenameissplit between twowords. Theaddresses ofthearguments oftheLINKTBI callaresavedandrestored atentrytoLINKTB2. Actual relocation ofreferences totheexternal nameareperformed by thealternate entry. Depending ontherelocation bits,thewordlocated atZ(ITEXT +LOC)is relocated andreturned tomemory. Thebyteswitch, LINKTablepointer, andlogical variable aresetandreturn ismade. Lanquaqe: COMPASS 7.2.4.2.23 REPLTAB Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Toperform relocation specified byaREPLTable (seesection 7.2.5) ofasubprogram Calling Sequence: CALLREPLTAB(Z(J),Z(ITEXT),N,LR) Z(J) -(input) address oftheOthwordoftheREPLTable (i.e., theIDword) Z(ITEXT) -(input/output) address ofthefirstwordoftextbeingconstructed N (input) number ofwords inREPLTable LR (input) pointer inLCTtothecontrol section currently beingconstructed. Method: Seesection 7.2.5foradescription oftheREPLTableofasubprogram. Dataitems arebuilt, relocated, andstored inthetextareaasafunction oftheparameter intheREPL Table. Lanquaqe: C_MPASS 7.2-152 (6/I/71)"},"title":"Programmer's Manual P103"},"/docs/programmers/programmers_manual_104/":{"data":{"":"7.2.4.2.24 UNPK30DESIGN OFTHECDC6400/6600 LINKAGE EDITOR Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entry point: None Purpose: Tounpack two30-bit bytes fromaFILLTable (seesection 7.2.5) orLINKTable (seesection 7.2.5). Calling Sequence: CALLUNPK30(ENTRY,ITEMS) ENTRY -(input) address ofword inFILLorLINKTable tobeunpacked ITEMS -(output) an8-word array asfollows: (I) =high-byte control, 0orl (2) =high-byte relocation bitsor0if(1)=0 (3) =high-byte RLor0if(1)=0 (4) =high-byte LBCorARif(1)=0 (5)-(8)= same forlowbyte Method: Theitems areunpacked using shifts andlogical products with appropriate masks. Language: C_MPASS 7.2.4.2.25 UNPKID Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entry points: None Purpose: Tounpack atable identification word (seesection 7.2.5) Calling Sequence: CALL UNPKID(W_RD,ITEMS) W_RD -(input) IDword tobeunpacked ITEMS -(output) a4-word array asfollows: (I)=CN I(2)=WC Seesection 7.2.5 (3)=LR 1(4)=L 7.2-153 (611171)\nNASTRAN SUPPORT PROGRAMS Method: Theitemsareunpacked usingshifts andlogical products withappropriate masks. Language: COMPASS 7.2.4.2.26 PACKDMP Subprogram name: LKED320 Typeofroutine: Integer Function Alternate entrypoints: None Purpose: Toformat thedumpcontrol wordwhich isstored atthebeginning ofeachcontrol section. Calling Sequence: W_RD=PACKDMP(NAME) WORD-(output) formatted dumpcontrol word NAME-(input) control section name, leftjustified, zerofilled Method: Thedumpcontrol wordisconstructed tolookasfollows: [370000 _] NAME I 59 4241 0 where _Iforacommon block BIT=_0otherwise Lanquage: CBMPASS 7.2.4.2.27 PACKXRF Subprogram name: LKED350 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: TopacktheitemsoftheXREFentry intotheXREFTable (seesection 7.2.2.1.10). Calling Sequence: CALLPACKXRF(Z(ZP_INT),ITEMS) 7.2-154 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR Z(ZP_INT)-(output)addressoffirstwordof6-wordXREFentryinXREFTable. ITEMS (input)a19-wordarraycontaining theitemstobepackedintotheXREF entryasfollows: (I) Subprogram name (2) CLASS =2 (3)P1 (4)0(notused) (5)N Seesection 7.2.2.1.10 (6)PREV (7)NEXT (8)-(18) Ci (19)0(notused) Method: Theitemsarepacked usingappropriate shifts andlogical sums. Language: C_MPASS 7.2.4.2.28 UNPKXRF Subprogram name: LKED350 Type ofroutine: Subroutine Alternate entry points: None Purpose: Tounpack theitems ofanXREF entry intheXREF Table (see section 7.2.2.1.I0). Calling Sequence: CALL UNPKXRF(Z(ZP_INT),ITEMS) where thearguments aredefined asinPACKXRF (see section 7.2.4.2.27) Method: Using appropriate masks, shifts, andlogical products each ofthefields in Z(ZPBINT) isextracted andstored intheITEMS array. Language: C_MPASS 7.2-155 (611171)\nNASTRAN SUPPORT PROGRAMS 7.2.4.2.29 UNPKEP Subprogram name: LKED350 J Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tounpack theitemsofanentry-point entryintheXREFTable (seesection 7.2.2.1.10). Callinq Sequence: CALLUNPKEP(Z(ZPOINT),ITEMS) Z(ZPOINT) -(input) address ofthefirstwordofa3-word entry-point entryintheXREF Table ITEMS (output) anll-word arraywhere theitemsarestored asfollows: (I)Entrypointname (2)CLASS=1 (3)P1 (4)0(notused) (5)A (6)0(notused) Seesection 7.2.2.1.10 (7)PN (8)PCI (9)PCN (I0)PREV (II)NEXT Method: Usingappropriate masks, shifts, andlogical products, eachofthefields isex- tracted andstored intheITEMSarray. Language: C_MPASS 7.2-156 (6/I/71)\nDESIGN OFTHECDC6400/_600 LINKAGE EDITOR 7.2.4.2.30 HASH Subprogram name: HASH Typeofroutine: Integer Function Alternate entry points: None Purpose: Tocompute thehashnumber ofasymbolic name Calling Sequence: HASHNBR =HASH(NAME,NBRENTR) HASHNBR -(output) hashnumber ofthesymbolic name NAME -(input) symbolic name, leftjustified, zerofilled. NBRENTR -(number ofentries (notwords) intable Method: Thefollowing equation isevaluated: HASHNBR =M_D(RSHIFTX(NAME,18),NBRENTR)*3+I where RSHIFTX isdescribed insection 7.2.4.2.11 andM_Disthestandard M_Dfunction ofthe F_RTRAN language. Itisassumed thatthenumber ofwords pertable entry isthree. Language: F_RTRAN 7.2.4.3 General Utilities 7.2.4.3.1 XRCARD Subprogram name: XRCARD Type ofroutine: Subroutine Alternate entry points: None Purpose: Tointerpret andconvert free-field card images. Calling Sequence: CALLXRCARD(_UTBUF,N,INBUF) _UTBUF -(output) address ofanyarray where theconverted cardimage isstored N -(input) number ofwords in_UTBUF INBUF -(input) address ofan20-word array containing thecardimage. Method: Seesection 3.4.19. Languaqe: F_RTRAN 7.2-157(6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.4.3.2 XTRACE Subproqram name: XLgADER Type of routine: Subroutine A1 ternate entry points: None Purpose: XTRACE when called gives a traceback from itself to the program which called XTRACE and from that program to the one calling it and so forth. Note following sample output. Call ing Sequence: CALL XTRACE Method: From the entry point of XTRACE, XTRACE picks up the address + 1 of where the call to XTRACE was made from. Stored at the address of that call is the address of that program’s entry point - 1. From there a trace can be made to the next called routine in the same fashion. Language : 7.2.4.3.3 XDUMP Subprogram name : XL0ADER Type of routine: Subroutine A1 ternate entry points : None Purpose: XDUMP is called to dump an area of core storage. XDUMP does not actually perform the dumping. It uses the utility routine CBRDUMP (section 7.2.4.3.6) to actually format the dump. Call ing Sequence: CALL XDUMP(ADD1 ,ADD2,0P)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR ADDI-Variablecontaining firstaddressdesiredindump ADD2-Variablecontaining lastaddressdesiredindump(Ifitisgreaterthanfield length,XDUMPwillusethefieldlength-1asthelastaddressindump. OP-ilif°nlyan°ctaldumpisdesiredifoctalandBCDaredesired XDUMPdetermines thenumberofwordstobedumped.Itthensetsupacallto CORDUMPreceivestheaddressofthearrayandMethod: CORDUMPwhichperformstheactualdumping, dumpsitintheprescribed format. Language: COMPASS 7.2.4.3.4 COMPARE SubproBram name: XLBADER Type ofroutine: Integer Function Alternate entry points: None Purpose: COMPARE compares twowords ofcore memory andreturns acount (0to60)ofthe number ofbits that donotmatch inthetwowords. Calling Sequence: COUNT =COMPARE(W_RDI,W_RD2) Method: Anlogical difference isperformed andthenumber ofbits intheresult isreturned. Language: COMPASS 7.2.4.3.5 ABSENT. Subprogram name: XLOADER Type ofroutine: Subroutine Alternate entry points: None Purpose: Thelinkage editor automatically inserts acall toABSENT. forcalls tounsatisfied externals. ABSENT. will becalled ifthese unsatisfied externals areever called. Then ABSENT. will call XTRACE toinform theuser whence theunsatisfied external wascalled. 7.2-159 (6/I/71)\nNASTRAN SUPPORT PROGRAMS Calling Sequence: CALLABSENT. Usually called inassembly language orimplicitly viaaRENAME cardinthelinkage editor control cardlanguage. Method: ABSENT. callsXTRACE andthenexecutes areturn jumptoEXITtohaltthejob. Language: COMPASS 7.2.4.3.6 CORDUMP Subprogram name: CORDUMP Typeofroutine: Subroutine Alternate entrypoints: None Purpose: CORDUMP performs theactual dumping ofanareaofcore. Normally CORDUMP iscalled viathedriver XDUMPsinceaFORTRAN program normally cannot define anyareaofcoredirectly. Calling Sequence: CALLCORDUMP (BUF,LBUF,OP,NBUFF) BUF -Arraytobedumped. LBUF-Length ofthearrayBUF _IOforoctaldumponly OP foroctalandBCDdump. NBUFF-Variable containing theaddress ofthelastwordofthesegment loader’s buffer. (NBUFF isusedtoeliminate theformatting of10buffer intocontrol sections) Method: CORDUMP creates anormal dumpofcorestorage giving absolute addresses andcore storage fourwordsperline. CORDUMP alsolooksforthe\"control section IDword\"which starts eachcommon blockorsubprogram andoutputs relative addresses basedonthisword. Figure 42givesanexample ofacorestorage dump. Language :FORTRAN 7.2-160 (6/I/71)\nDESIGN OF THE CDC 6400/6600 LINKAGE EDITOR CCCCCC CCCCCC CC d * NC5\\ C CCCJ CC-NFl 0 CCOC COCGCO CCCl-CCCGOO coot COCGOO ECOC CCCOO0 0000 000000 000.3 000000 CC.C.C C C CGCC FCOO 0OOC.CC 0000 000000 O00D OOOQCC oooc CCCOC 0000 DOOOOO 0000 000000 0000 000000 0000 000000 OCC.0 C’CiCOCC. CCCC CCCCC.C OOOD 000000 NCNU m c .PI moo- -00- CDOU 0000 f 30- C3000 CCCC CDOC 0 0 C 0 0000 0302 C30^ 0000 0305 E..UCCC-.N C C L* CC- 8- CNCOGO 000C00 c0uoop? OOClCOOO OG00000 0000000 CCCCCCC: EOCCGOC OCCOCOO 00000E0 CCOO0\"O OOCOCOO 0000000 0000000 OOCCEC OCOOCC OOOGOGO OOOUCOO . . *’ * lTl /i 0- 9 C 9 C 5 a 0 5 0 C 9 0 G 9 9 C 9 9 C 4 0 C 9 9 C 5 9 C 9 9 C 9 0 C 9 5 0 9 9 C 9- 9.2 9 * C 9 9 C 9 9 9 5 0 a 4 9 9 c Od * C 4C 9 C *C 9 0 90 *LC OC 9 C ‘40 911- 10 * C xc *CC Oc CC C . C’C \\ C C. C: WC’ C YCC xc OOL YC 1-co Uf 7CC uc NO0 aC \\CC \\C 00 0 70 7 0.3 0 co r CC + LC- CC WCC LL’C moo ma Cc’ 0 J ‘2 _LC 020 00 I-0 IYO C-XO -0 ;I-0 ZC OZO 00 UOO UO VO 0 4 c 9c 9WO 9C bU0 90 1WO 90 410 *O 5 c 00 QCC QC 920 00 * Irl 9 9w 9 9 ‘U 9 +a t 9 C 4-4 9VlC *CC *DO *ro 1ao *co 100 900 930 9-c 9 n .YO 000 9CC QCC CC eco 9CO 000 400 OOO *co 90.3 * - OCO O 0 *a0 9 0 400 5 o ecn 9 C a00 9 ? too 5 0 900 B -. . C 0 0 co –C C.z, 0 CO C CC -, 2 2 irJ il’ (rl + %r 4 -JS ’ \" 45 - WC 7. - - 0 4; O C CC It. I1 I1 IP. c , :- c 0 - CCC c3 0 e ::I: .tr ,:a: -.:\\I N ram 6 CC C CC C 03 ?, De 3 nrccc 3 CC CCCC II I1 I1 I1 II It - -1 -3 -1 - LUIUI\".WLJ xolaaa dJCT-‘S r-CC c– cccc- - – n’N\u0026 \\ c. c 0’- = CCCCCC 11 11 I1 1) I1 11 WY V VlWY zmrms: . aaua 3 J-d .r n,o .ssc CCCCCC c20=c3 c=cccT. CCPCCC 11 II II I1 I1 I1 IJ_LJ_f-l- IA WLLIWWrl rZlctK.23 r P- 5 -.r nilrrre \u003c- 7 o==- n 1 h ~-1 C c C..\u003ec; CCCCCF I1 ’ I1 11 11 11 I1 (nlnirr vim DTxrs,Jj u=?\u003c.aua\nNASTRAN SUPPORT PROGRAMS C d’.J r -N h’ …— 0 ?C 0 “roc CCCC I1 11 11 It J JJ I IUWY)W 3 ZD n’ r -I n QUY a J QJ 0 LPULTJ, l mm m C CC C IIUUU C0r)OC ZCOCC COO00 UO 0 C 0 0000 * 00 c C *COO0 80000 80000 *OUOO *OCOO *CCCP *oooo * * * * *,I 4dCO * Lnme - *OCONN *OD000 *OClOhO 8CcCCe *OOUCO * OC000 * OC 0 CO *“0000 *oocoo *ooooa * OC COO *OO?CIO *occ.c,o 4C\"c.OC . *I JC oc-dW CC C C C OCCCD CCCCC CCCCC I1 I1 ,I 11 11 _12-dd Ul0Jvh.u XtTXXT c PC ~m -.-nCLc ‘Wr,,-IJ. liJl”‘Lr J mmmFm C.. r 11 I, I, I, It :%:I$: 4.14 414 Q *C c r *C Ch *C CC *CL\u003c *C Er *ECC *CL- *OC9 *CCC *CCC 4.-rd *CIC * ’ WC OF un 8 ns I- R’ 8NCO Od CC *CCC or J- ORCC * 0 0\nl C CC *CCCR 0 c C CC * c C oa O~CCC *PCCC * c om *.-CCd OC CCC C C CC XQ n nd C cmc V)CIn”-C unmmn .Innrn cc,nICc, r C d CC LLlC CiCC \\rFd.- o n. TO 7 ? CCU’CC (LC CCC VO CC om CO cm cc CCC.CC (LOCOW LO400 ZC C CU CS C CC v'3rtn.t ^ rJ) ON cmm ON nmm * m n, n,r d O ONO * 0 OJ C o c C.C J - CU I/ 0 ONC * * * ooc-mo QC CCC *CCRiO *OCP,O Itocsu *GOCO * 0 OW0 Q 0 =NO 0.-CCC OZCCC *–*u * C- t CCI * I4 SCU r-?rrzlm O NCINR 4 N 0 ON * t CC1 b c c oc ’% c y-? IN C CIU -\u003c 1 C C l… C CCF 0 0 00 CCCC C C cr It 11 I1 I1 J -’ -I - u’ ‘A’ l\" LA x Zl l I ,c 1. .r \u003c, I I Td I m ICIC, .\u003c–, la c a. u, -1 *. 1 C- J r. OC.- 4-8 RPI CCCCCCC C3C 50 no OCC C C. C C CCCCCC I1 Il 11 II I1 II W J J -’ _I -\u0026 _I _I WL’WLIWAJW zrmzzza 3-:4cc CCCC-..-R1 h.5 cccc or I .r\u003c sa ,rr.m 9\" (rm . CiCCT I, I# It II I1 I1 I1 V~u-(Fu-u-InV srrnma mm 44 4 \u003c.a* 7.2.4.3.7 XEOFDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Subprogram name: XEOP Type ofroutine: Subroutine Alternate entry points: None Purpose: Towrite anend-of-file onastorage device (tape ordisk). Calling Sequence: CALL XEOF(FET) FET-Address oftheFET Method: XE_F executes theSCOPE WRITEF macro viatheSC_PE routine CPCtowrite theend-of- file. Language: COMPASS 7.2.4.3.8 XOPEN Subprogram name: XI_RTNS Type ofroutine: Subroutine Alternate entry points: None Purpose: XOPEN generates theFile Environment Table (FET) forafile based ondata inthe calling sequence. Callin 9Sequence: CALLXOPEN(FET,LFET,INDEX,LINDEX,OP) FET -(output) arraywheretheFETistobebuilt. (First wordofFETshould have filenameleftadjusted andzerofilled.) LFET -(input) length ofFETplusthelength ofthecircular buffer INDEX -Variable arraywhererelative trackaddresses fordirect access records willbe stored. LINDEX -Length ofINDEX. (IfO,thennoindexisimplied andfilewillbesequential.) 7.2-163 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 0Opentoread/rewind 1Opentoread/no rewind 2Opentowrite/rewind OP-3Opentowrite/no rewind 4Openfordirect access-alter/rewind (seeSCOPEmanual) 5Openfordirect access-alter/no rewind (seeSCOPEmanual) -IConstruct FETbutdonotopenfile. Method: XOPENbuilds theFETasdescribed intheSCOPE3.1reference manual, chapter 3.The FETlength ismade15words long,andthebalance ofthespacesenttoXOPENandusedasthe circular buffer. Thecircular buffer isneverusedifonlyREADX(section 7.2.4.3.15) and WRITEX (section 7.2.4.3.14) aretobeused,andinthatcaseLFETmaybesetto30oncalls toXOPEN. Language: C_MPASS 7.2.4.3.9 XCLOSE Subprogram name: XIORTNS Type ofroutine: Subroutine Alternate entry points: None Purpose: XCLOSE closes afile butdoes notreturn ittothesystem. Calling Sequence: CALLXCLOSE(FET,OP) FET-Address oftheFET liClOse/no rewindOP-Close/rewind Close/unload Method: XCLOSE executes theSCOPE CLOSE macro which performs differently onthemany versions ofSCOPE 3inthefield. Consult with your systems programmer todetermine exact results foryour installation. Refer also totheSCOPE 3.1reference manual, chapter 3. Language: COMPASS 7.2-164 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.4.3.10 XEVICT Subproqram name:XI_RTNS Typeofroutine: Subroutine Alternate entry points: None Purpose: XEVICT releases allspace occupied byafileonthedisk. ispreserved. Calling Sequence: CALLXEVICT(FET) FET-Address oftheFET Method: XEVICT executes theSC_PE 3EVICT macro. LanBua_e: C_MPASSThelogical filename 7.2.4.3.11 REINDX Subprogram name: XI_RTNS Type ofroutine: Subroutine Alternate entry points: None Purpose: REINDX redefines theindex pointer field fortheFET. Calling Sequence: CALLREINDX(FET,INDEX,LINDEX) FET -Address oftheFET INDEX -Array where newindex istobedefined LINDEX -Length ofINDEX Method: REINDX places theindex address andindex length inword 8oftheFETinthe following format 59 35 17 0 FET(8) =l [LINDEX [ADD(INDEX) 1 where ADD=address Language: C_MPASS 7.2-165 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.4.3.12 XWRITE Subprogram name: XI_RTNS Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tostartwriting, continue writing, orcomplete writing alogical record ontape ordiskeither sequentially orrandomly. Calling Sequence: CALLXWRITE(FET,RECORD,BUF,LBUF,FLAG) FET -Arraywhere FETisstored. RECORD -0ifsequential writing istobeginorcontinue.\n0implies RECORD istherecord number ofadirect-access record. Usedonlywhenstarting towrite therecord BUF -Arrayofinformation tobewritten LBUF -Length ofBUF FLAG _IOifrecord isnottobecompleted. (iifrecord istobecompleted withend-of-record mark. Method: XWRITE stores theaddress ofBUFintheFET.Itthenbegins orcontinues writing therecord either sequentially using 10WRITE ordirect access using I_RW(bothareSCOPE utilities). IfFLAGisnonzero, therecord isthencompleted sequentially usingtheSCOPE WRITER macro. Alldataareprocessed through thecircular buffer. Language: C_MPASS 7.2.4.3.13 XREAD Subprogram name: XlORTNS Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Tostartreading, continue reading, orcomplete reading alogical record ontape ordiskeither sequentially orrandomly. Calling Sequence: CALLXREAD(FET,REC@RD,BUF,LBUF,FLAG,COUNT) 7.2-166 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR FET Array where FETforfile isstored. RECORD -0ifsequential reading istobegin orcontinue.\n0implies RECORD istherecord number ofadirect-access record. Usedonlywhen starting toreadtherecord BUF -Array where data readaretobeplaced LBUF -Length ofBUF iOtoreadLBUFwords ortoreadtotheendofrecord, which everoccurs first.FLAG ifuptoLBUFwords aretoberead andpositioning tonextrecord istooccur. -2onreturn ifend-of-file wasencountered. )-Ionreturn ifendofrecord wasnothitandLBUFwords were read.COUNT I_a°_ __ie_o _____________r_oi_st_r_UrI_p.°f words thatwere readifanendofrecord Method: XREAD defines where BUFislocated intheFET. Itthenbegins orcontinues reading therecord either sequentially using 10READ orrandomly using IORR(both areSCOPE utilites). IfFLAGisnonzero andtheendofrecord wasnotencountered, arecord isskipped tobypass anyremaining data. This isaccomplished byusing theSC_PE SKIPF macro. Language: COMPASS 7.2.4.3.14 WRITEX Subprogram name: XIORTNS T_zp_e ofroutine: Subroutine Alternate entry points: None Purpose: Towrite anentire logical record either sequentially orrandomly without using thecircular buffer. Calling Sequence: Identical toXWRITE except FLAGisnotinterpreted (seesection 7.2.4.3.12) Method: Thepointers FIRST, IN,GUT, andLIMIT aresettoreflect theactual output buffer BUF,which inturnbecomes thecircular buffer. Adirect callismade tothePProutine CIO. Language: COMPASS 7.2-167 (6/1/71)\nIWASTPJ_N SUPPORT PROGPJ_MS 7.2.4.3.15 READX Subprogram name: XlORTNS Typeofroutine: Subroutine Alternate entrypoints: None Pu__ur_Dose: Toreadanentire logical reocrd either sequentially orrandomly without usingthe circular buffer. Calling Sequence: Identical toXREADexcept FLAGisnotinterpreted (seesection 7.2.4.3.13). Method: Thepointers FIRST, IN,OUT,andLIMITaresettoreflect theactual inputbuffer BUF,which inturnbecomes thecircular buffer. Adirect callismadetothePProutine C10. Language: COMPASS 7.2.4.3.16 XREWIND Subprogram name: XIORTNS Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Torewind adiskortapefileandplace itatthebeginning ofinformation. Calling Sequence: CALLXREWIND(FET) FET-Address oftheFET Method: XREWIND executes theSCOPEREWIND macro. Language: COMPASS 7.2.4.3.17 XBKREC Subproqram name: XlORTNS Typeofroutine: Subroutine Alternate entrypoints: None Purpose: XBKREC backspaces atapeordiskfileonelogical record. Callinq Sequence: CALLXBKREC(FET) 7.2-168 (611/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR FET-Address oftheFET Method: XBKREC executes theSCBPE BKSPmacro. Languaqe: C_MPASS 7.2.4.3.18 XFRDREC Subprogram name: XI_RTNS Type ofroutine: Subroutine Alternate entry points: None Purpose: Toposition afileforward tothebeginning ofthenextlogical record crossing only oneend-of-record mark. Callin 9Sequence: CALLXFRDREC(FET) FET-Address oftheFET Method: XFRDREC executes theSC_PE SKIPF macro. Language: C_MPASS 7.2.4.3.19 XBKPREC Subprogram name: XI_RTNS Typeofroutine: Subroutine Alternate entry points: None Purpose: Toposition afilebackwards onephysical record. Calling Sequence: CALLXBKPREC(FET) FET-Address oftheFET Method: XBKPREC executes theSC_PE BKSPHRU macro. Language: C_MPASS 7.2-169 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.4.3.20 XREQST Subproqram name: XI_RTNS _ypeofroutine: Subroutine Purpose: Toexecute thestandard SC_PE request macro. Callinq Sequence: CALL XREQST(FET,PYQX,DC,DT) FET -Address oftheFET PYQX1DC DTSeeSCBPE 3.1reference manual, section 3.5 Method: XREQST executes theSCOPE REQUEST macro. Thismaybeinstallation dependent. Lanquaqe; C_MPASS 7.2.4.3.21 ANDF,_RF,C_MPLF, RSHIFT, LSHIFT Subproqram name: FtAPFNS Typeofroutines: AllInteger Functions. Purpose: Toperform alogical and,or,complement, right shift, orleftshift. Calling Sequence: RESULT =ANDF(WORDI,WORD2) RESULT =ORF(W@RDI,WORD2) RESULT =COMPLF(WBRDI) RESULT =RSHIFT(WORDI,COUNT) RESULT =LSHIFT(W_RDI,COUNT) where WBRDI andWBRD2 arewords being operated onandareunchanged after theexecution. COUNT isthenumber ofbits W_RDI istobeshifted right orleft. InRSHIFT andLSHIFT bits shifted outside ofthewordboundary arelostwhile theothers arezerofilled. Method: Direct assembly language logical instructions areused. Lanquage: COMPASS 7.2-170 (611171)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR 7.2.4.3.22 XFETCH,XSTORE Subprogram name: MAPFNS Typeofroutines: Subroutines Alternate entry points: None Purpose: Tofetch (store) anarray ofdatafrom (to)anywhere inthejob’s core. Calling Sequence: CALLXSTORE(BUF,LBUF,LOCADD) CALLXFETCH(BUF,LBUF,LOCADD) BUF -Receiving array (XFETCH); transmitting array (XSTORE) LBUF -Length ofBUF LOCADD -Variable containing theaddress fromwhich dataisfetched (XFETCH); oraddress intowhich data isstored (XSTORE) Method: Adirect moveofdataismade insuchawaythatitdoesnotmatter ifthearray fromwhich dataaremoved overlaps thearray towhich thedataaremoved. Language: COMPASS 7.2.4.3.23 LWORDS Subprogram name: MAPFNS Type ofroutine: Integer Function Alternate entry points: None Purpose: Todetermine howmanywords ofcorethere arefromtheargument tothefield length Callin 9Sequence: RESULT =LWORDS(ARG) ARG-Variable fromwhich thenunfoer ofwords tothefield length iscomputed. Method: Thefield length, stored inlocation 768ofthejob’s core, isusedtomake the computation. 7.2-171(6/I/71)\n7.2.4.3.24 CBRWDSNASTRANSUPPORTPROGRAMS Subprogram name: MAPFNS Typeofroutine: Integer Function Alternate entry points: None Purpose: Todetermine aninclusive distance inwords between twoarguments incore. Calling Sequence: RESULT =CORWDS(ARGI,ARG2) ARGI andARG2arethetwoarguments forwhich theinclusive difference isdesired. Method: RESULT =Absolute value ofthedifferences between thetwoaddresses plusone. Language: CBMPASS 7.2.4.3.25 XJUMP Subproqram name: MAPFNS Typeofroutine: Subroutine Alternate entry points: None Purpose: Tomakeanabsolute jumptocodeanywhere incore. Calling Sequence: CALLXJUMP(L_CAT) LOCAT =Variable where anabsolute location isstored. Method: Ajumpisexecuted towhatever address isinthelocation LBCAT. Lanq_aqe: CBMPASS 7.2.4.3.26 ZAP Subprogram name: MAPFNS Typeofroutine: Subroutine Alternate entry points: None Purpose: Tozerocorefromwhatever location isspecified incorelocation lOl8tothefield length asspecified inlocation 638. Calling Sequence: CALLZAP 7.2-172 (6/I/71)"},"title":"Programmer's Manual P104"},"/docs/programmers/programmers_manual_105/":{"data":{"":"DESIGNOFTHECDC6400/6600LINKAGEEDITOR Method:Storezerosinalllocationsdesired. Language: C_MPASS 7.2.4.3.27 FIELDLN Subprogram name:MAPFNS Typeofroutine: Subroutine Alternate entry points: None Pu__ose: Toobtain thefield length ofthejob,ortochange thefield length andtostore thefield length inlocations 638and768. Calling Sequence: CALLFIELDLN(LENGTH) LENGTH =0iffield length istobereturned inLENGTH. =Value \u003eOifthefield length istobechanged. Thefield length ischanged toLENGTH. Method: TheSC_PE memory macro (MEM) isexecuted. Language: CIaMPASS 7.2.4.3.28 LINK20. Subprogram name:MAPFNS Type ofroutine: Subroutine Alternate entry point: None Purpose: LINK20. makes acalltoLink20. when called canresult inaswitch toLink20. Calling Sequence: CALLLINK20. Method: AcalltoLink20ismade directly. Language: C_MPASSThrough theuseofaRENAME, aparticular routine (e.g., RENAME PEXIT=LINK20.) 7.2.4.3.29 LINKERR Subprogram name: LINKERR Type ofroutine: Subroutine 7.2-173 (6/I/71)\nNASTRAN SUPPORT PROGRAMS Purpose: Tooutput message whencalled bysubroutine LINKinXL{ADER. Calling Sequence: CALLLINKERR(LINK,ERROR) LINK-Alinknumber ERROR-Number ofanerrormessage Method: Writes theerrormessage specified byERR]R. Language: F_RTRAN 7.2.4.4 MISCELLANEOUS 7.2.4.4.1 LKED900 Subprogram name: LKED900 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Toabnormally terminate execution ofthelinkage editor withanerrormessage in caseoftableoverflow. Calling Sequence: CALLLKED9OO(C_DE) C_DE-(input) number whichdefines thetypeofoverflow whichhasoccurred. Method: Afatalerrormessage isprinted andthelinkage editor stops. Language: F_RTRAN 7.2.4.4.2 LKED990 Subprogram name: LKED320 Typeofroutine: Subroutine Alternate entrypoints: None Purpose: Toabortthelinkage editor intheeventanunexpected condition (logic error) is encountered. Calling Sequence: CALLLKED990 7.2-174 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Method: LKED990 passes theaddress from which thecall occurs toLKED995 which prints the fatal message. Languaqe: C_MPASS 7.2.4.4.3 LKED995 Subprogram name: LKED995 Type ofroutine: Subroutine Alternate entry points: None Purpose: Toabort thelinkage editor abnormally Callinq Sequence: CALL LKEDg95(LBC) L_C-(input) location atwhich logic error wasdetected. Method: LKED995 prints amessage indicating that alogic error hasbeen detected andthe location oftheerror. Thecontents ofthelinkage editor tables arethen printed byLKED999. Finally, amode error isforced sothat, iftheuser hasincluded aDMPcontrol card, a storage dump will betaken. Lanquage: F_RTRAN 7.2-175 (6/I/71)\nNASTRAN SUPPORT PROGRAMS 7.2.5 Object DeckFormat Theobject deckofasubprogram asitisoutput fromtheassembler orthecompiler comprises onelogical record. Eachlogical record ismadeupofanindefinite number oftables. Eachtable isproceeded byanidentification wordwhichhastheformat: IcNIwcl,Rl,I59 5347 35 26 17 0 where CN=codenumber identifying thetypeoftable WC=Wordcountofthetableexcluding identification word LR=Codedefining themethod ofrelocation oftherelative address L L=Relative address, 18bitsdefined differently foreachtypeoftable 7.2.5.1 PIDLTable TheProgram Identification andLength (PIDL) Tablecontains thesubprogram identification andnamesofeachofthecommon blocks referenced bythesubprogram. identification word CN:348 LR=ignored L=0 word 1 59name ofsubprogram PLJ 17 0 PL=length ofsubprogram 7.2-176 (6/I/71)\nwords 2-WCDESIGN OFTHECDC6400/6600 LINKAGE EDITOR nameofcommon block BL 59 17 0 where BL=length ofcommon block IfWC=l,noreferences tocommon blocks appear inthesubprogram. Thelinkage editor isprepared toprocess onlyonePIDLtable inanobject deck. Additional PIDLtables areignored with awarn- ingmessage. Thelistofcommon block names iscalled theLocal Common Table (LCT). Since relocation ofaddresses relative tocommon blocks isdesignated bypositions intheLCT,theorder ofcommon block names issignificant. 7.2.5.2 ENTRTable TheENTRy Point Table (ENTR Table) contains alistofallnamed entry points tothesub- program andtoassociated common blocks (note: anentry point toacommon block isignored bythe linkage editor andawarning message isissued). TheENTRTable must immediately follow thePIDL Table. identification word CN=368 LR=ignored L=ignored words I-WC Eachentry intheENTRtable consists oftwowords. Thefirst wordcontains thenameofthe entry point. Thesecond wordcontains therelative address oftheentry point anditsmethod ofrelocation. Istword I entry point name 59 17J0 7.2-177(6/I/71)\nNASTRAN SUPPORT PROGRAMS 2ndword IRLILOC 59 26 17 RL=codedefining therelocation specified byL_C: 0=absolute (therefore theTableisignored bythelinkage editor) 1=relative tosubprogram origin 3-778=relative tocommon blockM,whereMisinposition RL-2oftheLCT (ignored bylinkage editor) LOC=relative address oftheentrypoint 7.2.5.3 TEXTTable Textanddatatables (TEXTtables) contain datacomprising thesubprogram andinformation necessary forrelocating thedata. TheTEXTTableconsists ofanorigin forthedata,thedata itself, andindicators describing relocation (ifany)ofthethreepossible locations inadata wordwhichmayhaverelative storage addresses. numbers intheobject deck. identification word CN=408 WCsatisfies: 2_WC_208 LRt!_778TEXTTables mayappear inanyorderandany =absolute (therefore theTableisignored bythelinkage editor) =relative tosubprogram origin =relative tocommon blockM,whereMisintheposition LR-2ofLCT(seesection 7.2.5.1) L=relative address offirstwordofdata Firstword Thisrelocation wordconsists ofaseries upto15of4-bitbytesdescribing therelocation ofeachofthethreepossible address references ina60-bit dataword. Thefirstbyte (bits56-59) describes therelocation forthedatawordinthesecond wordoftheTEXTTable, etc.Thenumber ofrelevant bytesanddatawords isdetermined byWC.Relocation isrelative toprogram origin orthecomplement ofprogram origin (negative relocation). Thevalueand relocation foreachbytefollows: 7.2-178 (6/I171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR O00x lOxx llxx OlOx Ollx IxlO Ixll 0010 0011norelocation upperaddress, program relocation upperaddress, negative relocation middle address, program relocation middle address, negative relocation loweraddress, program relocation loweraddress, negative relocation same asIxlO same asIxll words2through WC Datawords arerelocated consecutively relative toL.Alladdresses arerelocated relative tosubprogram origin, never relative toacommon block. Relocation ofaddresses relative to common blocks isaccomplished through FILLTables (seesection 7.2.5.4). 7.2.5.4 FILLTable TheFILL Table contains information torelocate previously defined address fields. References tocommon blocks arerelocated through this table. identification word CN=428 LR=0 L=0 words 1through WC AllFILLTablewordsarepartitioned intosetsofcontiguous 30-bit bytes. Eachsetis headed byonecontrol byteandfollowed byanarbitrary number ofdatabytes. Thelast databytemaybezero. Thecontrol bytecontains information abouteachofthesubsequent databytesuntilanother control byteisencountered. control byte Ioi IARI29 28 8 0 7.2-179 (611171 )\nNASTRAN SUPPORT PROGRAMS ARistherelocation codepertaining tothesucceeding databytes. ARmayassume 0=absolute relocation (i.e., norelocation takesplace) 1=program relocation 2=negative relocation 3-778=relative tocommon blockMwhereMisinposition AR-2ofLCT(seesection 7.2.5.1) databyte 111PJRLJL°c292826 17 0 P=position within wordofaddress I0=upper Ol=middle O0=lower RL=codepertaining totherelocation oftheaddress specified byL_C.RLhasthesame rangeasAR(seeabove) except RL_2 LBC=relative address ofthedatawordtobemodified. Thecontents oftheaddress field position (F)atlocation L_Crelative toRLisaddedtotheorigin asspecified byAR inthecontrol byte. 7.2.5.5 LINKTable TheLINKTablespecifies external references within thesubprogram. external symbol mustappear asanentry intheLINKTable. identification word CN=448 LR=ignored L:0Eachreference toan 7.2-180 (6/1/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR words lthrou9 hWC Allremaining words arepartitioned intosets, each consisting ofone60-bit nameandaseries ofcontiguous 30-bit databytes indicating address positions which refer totheexternal s_nnbol described inthe60-bit name. Itispossible forthe60-bit nametobesplit between twoco_uter words. Names ofexternal s_nnbols must begin with acharacter forwhich the display coderepresentation hasthehighorder bitequal tozero. nameword 59name ofexternal s_nBbol databyte I IPIRL I29 28 26 17 0 P=position within theword ofthereference totheexternal s_nnbol lO=upper Ol=middle O0=lower RL=codepertaining totherelocation oftheaddress specified byL_C 0 =absolute (ignored bylinkage editor) l =program relocation 3-778 =relative tocommon block M,where Misinposition RL-2oftheLCT. L_C=relative address oftheword containing theexternal symbol 7.2.5.6 REPLTable T’_eREPLTable provides anefficient means forrepetition ofablock ofdata. identification word CN=438 LR=ignored 7.2-181 (6/I/71)\nNASTRAN SUPPORT PROGRAMS L=ignored words1through WC Eachentry inthetableconsists oftwowords intheformat C B 59 41 0SR S IDR D 26 ]7 S=initial relative address ofsource data SR=codefortherelocation oftheaddress specified byS 0=absolute (ignored bylinkage editor) 1=program relocation 3-778=relocation relative tocommon blockM,where Misinposition SR-2ofLCT (seesection 7.2.5.1) D=initial relative address ofdestination ofdata DR=codefortherelocation oftheaddress specified byD;samerangeofvalueasSR B=sizeofdatablockinwords C=number oftimesd_tablock istoberepeated; I=increment tobeaddedtoDbefore eachdatablock isrepeated; first repetition of blockisatD,second atD+I,etc. IfC=O,Cisinterpreted as1 IfB=O,Bisinterpreted as1 IfI=O,Iisinterpreted asB IfD=O,Disinterpreted asS+B 7.2-182 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.6 Principal Linkage Editor Variables Table 3describes principal linkage editor variables incommon blocks LKEDCxx, where Ol_xx_07. Thefollowing conventions apply: I. Inthedescription column, apointer, ifnotdefined further, isassumed topoint to theIstword rather theOthword ofatable 2. Twenty character symbols inthedefault value column imply octal representation 3. Theletter “b\"inthedefault value column implies ablank character 4. Tencharacter symbols inthedefault value column imply character string representations. Note these areleft-adjusted intheword andzero-filled. 5. Integers (less than tendigits) inthedefault value column aredecimal numbers. 6. Ablank inthedefault value column implies theentry hasnodefault value. 7.2-183 (611171)\nNASTRAN SUPPORT PROGRAMS 0 0 0 C_ OJ 0 %oO O O -_ O -Q r_ O OOO -Q °o__oooo O OOO r_ 4- O r_ .Q I— OZ00 .Z_ O -Q r-_ J .D- n O .D - …I mm–_ r_p,,. D,-. D— r–. cO p,.. D-,- p,,.O O O OO O O O O OO O O O O OO O O O O OO O O O O OO O O O O OO O O O _ O O O O O OO O O O O OO O O O O OO O OOO OOO OOOO n to O L e- “Z 0 c- O ;5 -- gI— 0 0 “b e-o r,- f,-…..1 Z .1 c- O co . to _ .-0 4=, to ..1 z3 f,- OJ 4-.to CD _ .Z _ EO J .z O _ ° E -J . - “10 “0 0 .- _ ..I-J tO (J “0 “0 ’- ..c= 0 4J 0 0 .- 4 4- - 0 ‘ T-o_to -0 .; 5,- O-I— -’:= O O O(-J \" J - _ -I(/)• . J _ .. O0J to 04- 0 0_- o0 e– 0 _ _ 0 4- e- E •I to e.- I_ 0_ ’ •._ to 4– _ 0\"0 tO Q; S-E -0 r-_ E(-_ E(-J 0to to h- l– r_” p– l- X Z uJ rO .0 to _ I– 4-0_J to to r J to r O O OO O O v’ _ ‘ ‘_ _._O O O O O Oto -I-J 0 (lJ “10 Ill -z (.0 I— .= x/ to .- 0.3 _.l ._I _.I– .- -t- oO z ___ Z N \u003e’- r- (=‘3 _ _ LO _to 0 ,.J 7.2-184 (6/I/71)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR O0 r– O0 O00 0 0 0 0 0 0 0 0 0r_ e_ i I– “Z S. 0 0_ lad 0 ._ e.- u . e- ¢L e,h %- o c- o oe- uIlJ I— I– x I–_ 0_ x e- _ J o L 0 ,.l.a -,i (,,- o S- e- U _ 0 r “_ E0 j e\"I”- Z $.. 0 I; .- 4-\u003e. r_G; .r-) W- Q; “I,’- G;I— e-cO 0 (” _ “13 0 “10 -_ - _ _ ) _ e= 4a .)a I.. - 0 “,– 03 .,(30 ,.– Zu,l.. ,r 0 I– {- 0- O_ {,_)e,mooooo__ooF:,oF:,go_o 3®_oE •‘o f,-z c0 7.2-185 (6/1/71 1\nNASTRAN SUPPORT PROGRAMS 111 %\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 np L_ L_O0 r’_ .j0 0 0 0 0 0 n 0 .-J O I.iJ z z .,-v. d 1 r ZU,- - O I– E_ .,m , E0 “’ ‘” O / v (¢-m -I .JooooS .-I J .–I J .–I JO O O O O O ILl _ IAJ I. ILl “’ J ,.J ,–I J J JO O O O O O L_J v_____v.d .–I .–I .–I –J J _ z ,_ -r 0 ,0 6,3r,. Z CD 0I ._1 z I– I– _ O I– _-D J ….I .J J_3 J O O N Z Z Z Z Z O'3 7.2-186 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR ,3 4– r-, .mc– \" E u’} (_ G.} .._ m:_ u’) “[- __ : 0 °_ K- “0 0 (IJ •_ Qj I..; 0 to _ ._ e- U e- I1J “G_ \u003e - a,I O _ O c- “ZU IlJOOOOOOOOOOOO OOOOOOOOOOOO OOOOOOOOOO_O OO_OOOOOO_O OZ_O_O_OOZO DO_O_O_OO O_O_O_O ZZ»ZZ_Z_ZZ0 0000000 0 0000000 0000000 0000_00 0_0_00 0__0 0_ Z __ Z_0 0 0 0 0 0 0 0 0 .Q 0 r 0 t 0 r_ 0 .Q • 0 r_ Ld 0 X__ 0 -C_ r_ 0 r_ I— 0 0 eO 4J t- O 0 l– ILl z .J ¢- 4 c- O I- O z% ..I _ ill r- E u.• .._ -4-_ O igo4- _ t K- oO a_ .%- K. l.i_ _ -o O- D E - 0J rr O - _ O f,..- m O O - K. V;. -QO K. 0 4-a v, • I— %T. _ t..- - 4- O _- C)- c”n r- E (I) .ZD O I– CO 00 e- O O– (.-) _o__h, (..)r__jeo or) 0 0 ,,l ll ..J ..JOd _- COCO r– (r) O O O O O O O -.I “,,I -./ - -,I “./ “-,” ..J -J -I .-I .-I -J –I Q) a cOE T__tO “-/\u003e- I— W ,,, I. -lJ -1J,, I– ,-w z I– _ l– ._J _J _” _– Z m,- Z 7.2-187 (6/I/71)\nNASTRAN SUPPORT PROGRAMS CZJ O00 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 0 000 0 T. S- O J .- 4- 0 C 0 “5 U v !,.,- Or) r’0 zu,-0 I— r- 0 0- _ v0 0 0 0 0 0 ___ ___ ___ _ _ L) - r_I= r_ _/ v v _-/ v v0 0 0 0 0 . _) ) .) . ___ C v v V / v v vO O0 Or) 0 0 0 -) ) r - L_L_1,1 x/x/”/ J .. .–J _ \u003e..- I;= L, Z Z Z Z Z ZI– ” kS.. Z \" Z Z L, -r L_I h X X _ _ _ _ I. Z Z Z Z ZZ _.-J ‘C LL C - _C 7.2-188 (6/I/71)\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR ‘3 Z3 ro 4– (I,; 0 CO c,.,l C) iv} _ I/)0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 430 (3: _ 0 0 C_ 0 43 430 0 r,. 0 0 0 0 43 0 0 _ 0 0 0 0 ..(3 •.(3 0 _ I_ _ 0 0 0 0 ._ m-., _ I- Im I– ._ 0 0 -I- 0 _ _ _ _ {/} _ Im0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0_J .J h ..(3 L eO 0 “0 laJ GJ rO ¢.- -,6e- T. %,.. 0 I.– 0 ._ S,- u o’_ .0 QJ Zu,- . 0 I– O.C E_J Eo o_0 0 0 0 0 0 0 0 0 0 0 _ 0 0 QJ E _ _ Od (“3 Z I _ ::_ _–I (_0 - t/’) Is’) t/’; t/} I–” I— I _ Ls.J 7.2-189 (611171)\n%\u003e q- r=- ¢0 0 0 •_ c’- -_ ¢- . uJ o “_ ,_ o °1 .- 4-J _ 0 T- 3= ‘– _ “ 0 0 e- . c” I 4- 0 c- e- 5 X\"ge. o .- “EU G.; m:l- r’- ,.– Zq”- e’_ 0 I’– c” 0 Or”- _ v’ .._QJ _-Z _”\nN NNASTRAN SUPPORT PROGRAMS 7.2-190 (6/I/71)\nj_ DESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.7 Linkage Editor Output andDiagnostic Messages Figure 43shows control statements andoutput ofalinkeditofthelinkage editor. 7.2.7.1 Diagnostic Messages Figures 31through 38showhowdiagnostic (orintermediate) output which maybeobtained from thelinkage editor. Thisoutput isintended primarily fortestormaintenance ofthelinkage editor. Theoutput isselected bysetting PARAM(8) toanappropriate value ontheLINKEDIT control statement (seesection 5.6.4.2). PARAM(8) actssimilarly toasense switch, i.e., eachdefined bittriggers acertain typeofoutput independently oftheother bitsettings. Thedecimal values (allpowers oftwo)forPARAM(8) andtheir functions areasfollows: Value l 4 8 16 32 64TypeofOutput Obtained Contents oftheGTafter eachINCLUDE andINSERT statement Contents ofeachobject deckasitisprocessed in LKED025 Alltables after processing eachdeck inLKED025 Text foreachsegment after construction inLKED075 Contents ofalltables after control statement processing Contents ofalltables after object deckprocessing Contents ofalltables after address assignment processing Contents ofeachlinkasitiswritten inLKED080 128 These values maybecombined inanydesired manner (e.g., PARAM(8) =52which is4+16+32). 7.2.7.2 LINKLIB Subprograms Table 4gives alistofsubprograms inLINKLIB. 7.2-191 (6/I/71)\no O iN; N W Z ..J O O 4 n¢ r’ X UJ o – t– Q O UJ ..J •Z .J W_ __ \" “J 11 .J ..l.J 0 ==1_,1 I,- =.1,.I ..elf.UJU.I ZNASTRAN SUPPORT PROGRAMS 0 O00c. 0 oO_1”¸¸ ,4” I o o o 0 - z _ ,. z,,.. __Z u__xu-,.“lJ xx zJO O’ f,} J 0 0000 0 O0 0 0000 0 OC,o_0 oo ¢k I )- ,o Z . Lu t 0 tu r_ N O. 0qc Z uJ 0 I,- I 0 w u. tu I _ _ ZO ._ __ OOOC, O O OO OOOO_O O OO NN,4” ,O.O,O O OOO O OOO N X XX00$ O O 00 OOOOO 0000000000000 O0 0000000_ O0 o z _ OOOOO_OOOOOOOOOOCOOOOO OOOOOOOOOOOOOOOOC’OOOOO O O OOOO_OO O O O OOOOOOO O OOOOOO_OO 0 0 0 OOOOOOO OO 000000000 0 0 00000000 O0 . __ _ 7.2-192 (611171)g 0 U v Z Z ,,w t ,r,,.j 0- .. 0 S- O -I_ ._ (lJ En tO ._- 03 _J r"},"title":"Programmer's Manual P105"},"/docs/programmers/programmers_manual_106/":{"data":{"":"C_ I- .¢I u C) .I O 0__.- •…a,.I zOC N 4\"(5 •N OI- N U C) –I 0 Z C) ,e[ U 0._ .j 0 I- .J Z t- 0 ZI– U 0 0 ..I a. Z 0 t.. I- )-,c[ u I– Z Z 0 U 0 _ Z O .J 0 Z r_DESIGN OFTHECDC6400/6600 LINKAGE EDITOR NO 0g-400 000-.4 OC*C, 0C’O0 OOO OO OO OO X II III IIIII IIII O I II ‘0. n, - I II IIIII III Z I L’!.) II IXZ\" at..nuj U I II IIIII III C:}u__..-’, _ _ uZ n\"euZ._ I–r\"C:) r_(::9 r-CD F..J F.J r-;.F,_ (DF,.J ._ I–I rc) II....I.,..,.E’X (D III IIII IIII uu I II II IIIII IIII I II II IIIII IIII 14. C_0 0 00 000 ¢0 0 0-’ _ 00 00 0 ¢D0 0 000 0 00 00 _ 0\"_0 0 ¢D00 _ 00 I– e _ O. –I I ,v. t,u f,,u uJ ,’.\"\n.. r_I– I– I.- I– - I– C I— :a_ _, )\")“Z l… x ,,n_L I–I– _U#‘I”%0 0 c- ..J 5- –.s 7.2-193(6/I/71)\nNASTRAN SUPPORT PROGRAMS ti_U__0 OU_,-(WDI 0 D I 0i ,-4r,-I e%lMr I’- ,-i 0 00 t3 O0 _ O.t “C” 0 0(D (D O cJC_c_O 0 0 (D0 0 O0 ( OC_O 0 0 iI IIIi!lI iIIII II I Z r-C C z zZ ZZCb_ (:3B-LIL.r_Z Z Z II I I!II II I IIl II I ,, ‘, , ,,,, ,, , IIl l, , C, o o0 O c,o o0 0* o0 o 0 oo o o ¢ 0o 0(J 0 0 o 0 _ o 0 _3, oc_00 00 _D o 0 ,-04 40 0 0 40 qJ J v 03 O kL 7.2-194 (611171)\nDESIGN OFTHECDC6400/6600 LINKAGE EDITOR ,4.,,-4. rn_IC edl,rjO0 CJC- CJC’C. O.IQ N*,wl(\" ,,-,I(Ml_’_ 0C’C_’ 0000 IW. 0 0 ooo _ Of_C 0 C ¢’t\"I,.- 4\" tM-4I N ,-4tM(M ooo C’C,O C\" 0 00C’ 0 O ,£’,,,I-l’_ WD ut_ 4. ,,.,i,,-.*(M N OOC.J 0 0 0 00C. 00 0 O OOCJ o¢) oOOC) 00 0000 000 N 0 0 0 4\" 0 000000 0 00_00 0 O OOOOO_ O O O OOOOOO O0 O O_OOOO O°O O O 000_00 oOO 0 0 NO° {f_(%1 Nh{elN_‘1 ,4 4 N I-I I_1twT_O.-II’llfr_Irjell e-I,,-iOO..4 C_O.t F.)C.I i-4° .e40 C OC)OC_O0 0 0¢C¢,.,00 000C’O ¢’ 000 0 II _ I II I I_:’__- II I Iu_,Y_ _t.u uu uu II I Ix.l I II I II I II ! Z _ _ Z ZZ __ II Z_Z Z Z _ ___ ZZ XX XX X__X __ II ! I II 00 _ 0 000 000 0 0 00 0 0 000 000t 00 0o 4-) £).. 4.-} 0 I,,..- 0 :g L5 c U U ,n x x X xC_ne, eJ • 7.2-195 (6/1/71)\nPnSFILo CG6542 OUTPTC OC0037 RDPRU. 006552 —NONE— OAT, 0C6574 OUTPTC 003042 000061 000075 OPEN, 0C,6133 SYSTEM. 09'2464 OUTPTC 090027 srn. 006274 OUTPTC 003074 CETRA C07025 OUTPTC 00J.010 KOOER GO7046 OUTPTC 050004 000045 SEGMENT w w I ;; SEGMENT cn - SEGMENT cn \\ ’ SEGMENT 2 V SEGMENT SEGMENT SEGMENT LINK 1 RENAME INCLUDE l NCLUDE INCLUDE OVERLAY 2 INCLllOE OVERLAY 3 INCLUDE INCLIJDE OVERLAY 4 INCLUDE INCLUDE OVERLAY 5 INCLUDE OVERL AY 6 INCLUDE I NCLtJOE INCLlJOE REGION OVERLAY 7 INSERT ENTRY END L E V E L 2 e 0 C D C 6 6 0 D L I N K A 6 E E D I T 0 R 2Oe4Ls29c 09/17/69 1 SYSTEM = SYSTEM. CINKEOTI LKEDCOOe LKEDlOOv CKED150v LKED175r LKED2OO ) LINKEOTI LKED900, LKED995r LKED999r LKE0300~ LKE0320 ) LINKEOT( HASH ) A LINKEDT( LKEDOlO 1 A LINKEDTI LKEDOl5 LINKEDT( XRCARD ) A LINKEDT( LKEDO25 I LINKEDTf LKED964 4 LINKEnT( LKED059 1 A LINKEOT( LKEOC75 ) LINKEDTI LKED077r LKED350 1 LINKEDT( RECDIJMP ) R RLANK,. LKEDOGO Figure 43(e). Linkage editor output.\nuJDESIGN OFTHECDC6400/6600 LINKAGE EDITOR Z C._ x Z_Z _ 0 I , Z o N t’- Z W J “=” 0 0 Z .=J . I ,v- -,“I– Z 0 tu u. _ Z JN N_N OOO OOO ===_ =- ==__,,4 0 oN N 0 0 0 u. cz\u003e r,” 0 x ,’ s Z 0 O0 O0 00_00 0 _ _ 0 _ 0 OC 0 OC_O 000_00000000 0 O0O0 0 0000 _O00000_OC O00 0 O O (000 O0 O0O0 O0 ZON Z O L0 W O ,,1- O %.3 r.a O O e- ° _J i2 7.2-197 (6/I/71)\nENTRY-PT LKF03:?3 LKF0130 PACK PACKM’iK REFERENCES TO EACH ENTRY POINT IN LINK 1 20.41.29. 09/17/69 AOORESS CALL FROM LOCATIPN LOCATION LOCATION LOCATION LOCATION LOCATION LOCATION LnCATION LOCATION LOCATION LOCATION C15057 LKE0030 061376 001752 LKEDlOO 3C3062 OC0151 LKEO150 03?336 00CQ47 000056 000062 000120 LKE02r9 600076 0CG117 000143 LKEnOlO 003265 020272 LKEnf25 Oi\u003e3712 fin0324 006337 000545 000601 000605 090611 000710 QC0725 001120 001124 f'31165 OU12?O Or1224 031325 031331 OC1511 091536 031hh4 001672 !‘01677 001703 Figure 43(9). Linkage editor output.\nDESIGNOFTHECDC6400/6600LINKAGEEDITOR r ,un lr t’n ,.4 000 _ ,-I ,.4 C)..C, 0 0 0 000 0 0 0 t’- g.w 0 C, 0 o 0 00o 000o 0 O0 000 0 O0 0,0 p- 0 0 0 000 0 O0 0 00 0 O0 0 0_0 0 O0 0,4\" 0 0 0 ,0 0 0 00 0O0 0 O0 oO 0 00 0 O0 0 0 _ O 0 00_ O0 OC\" 000 0 0 O0 000 O0 O0 000 0 0 O0 00 0 a_ ,i._ “0 CL) CP e- -r- .,..I e- G.} _n 7.2-199(6/I/71)\nPACKXX 015216 IJF+PKCI\\I. 015225 PbCKCAL 015240 GFTFXT 015252 S TOF XT 015257 LKF0990 615265 NOW LKEDCOG TEXTTAB V ‘, FILLTAR I N 0 LTNKTRl 0 LINKT92 rn ‘2r , REPLTAR 2 - llNPK33 IINPKID PACKDYP 015532 HAFH Of 5540 LKEDOOO LKEOlCO LKEn175 LKEDC77 I NPIJTC C15731 LKEDOCC LKE0315 Figure 43(i ) . Linkage editor output.\n,¢ 0 o 0 ,,0 o 0 0 u’_ 0 0DESIGN OFTHECDC6400/6600 LINKAGE EDITOR 0, ,,0 0 0 0 I– c) C” 4- 0 o 0 0 r_ 0 o 0 0 o orrt 0 _o ,¢-, r_,..,-= 0 0 _ O0 0 0 0 “0 0t Z t,,,= 0 0 .,,0 U C U uJt_u zz ..J.J ZZ 0(3 Z _ _ Z Z “r lg “, Z Z.d {:3- 0 I- 0 4-_ “0 _J (1} r .–J 7.2-201 (6/I/71)\nNASTRAN SUPPORT PROGRAMS Table 4(a). List of Subprograms in ‘LINKLIB. iiECOHD NO, LEVEL NO* LENGTH PACKAGE CHKSUM —— CHEATION DATE OCTAL DECIMAL OCTAL (8) 1 0 1'178 3362 XUOOT 666 1 UNKNOWN 2 0 283 4X32oADER 571 12/1 3 5/70 0 290 442 XIOwTrJS 5116 05/07/70 4 rl 3 0 -36 XEOF 4tj2n – ilYKNOWN .- 5 0 75 113 DIIMP 6137 LINKNOIN 0 25'1 401 MAPFNS 36 17 6 7 0 671 1237 SYSTEV. 2533 H 0 b84 1254 - – – – - sTO$ 6554 UNKNOWN- . 9 0 90 132 OUTPTC 2273 UNKNOIN lo -d 15 17 LOCF 600 UNKMOWN - 11 0 2 7 3 3 GLTBA 2246 UNKI’JOWN 0 1% 183 267 I0 6603 UNKNOWN 13 0 182 266 TORANDM 667 1 LJNKNOWN 0 191 14 -_ - - -271_– CPC 6017 urs - 15 0 42 5 3 Xf)lJMP 346.1 UNKNOWN i)- _ 143 —- %–_CUH[)IJMP-A-~KU— 17 0 179 263 LINKERR 5332 UNKNOWN 14 Lm1317KOOEH-.*652_UNWYI?J – - 19 0 549 1127 KRAKEH 7405 UNKNOWN 2 0 –O14-26 — - XRCL— 2040UNK!!!UW N - – 2 1 0 2 5 31 nC(jOEH 4374 UNKNOWN 22 0 14 -16 UBLE 13h0-_ UNKNOWN – - 23 0 8 6 126 SINCOS 6150 UNKNOWN n 6 1 24 - - 75 UBAIEX 6445 UNKNOWN 2 5 n 4 0 50 IBAIEX 1210 UNKFJOWN 2 6 0 213 - 325 INPUTB 6664 - UNKNOWN – 27 0 97 141 INPUTC 3116 IJNKNOWN 28 0 7 3 I 11 OUTPTS ?374 , UNKNOWN- - —A — - – .— - 2 9 0 35 43 PEMAHK 4750 UNKNOWN 0 33 3'3 —- SECOND 222 0 IJNKNOWN – 3 1 0 6 7 103 DSQRT 534 UNKNOWN 32 – - 11 - __ 26 . - -3 ? - – - DABS 4357 !!!!\u0026ow! - -_ 3 3 0 5 2 6 4 SORT 2347 UNKNOWN 3 4 0 pp - - – - - - - - - – .- 7 1_ . _ – - 10’I —- J!PuTS__3664 - - L,NI(No WB 3 5 0 6 6 1 rJ2 EXP 5003 UNKIJOWN 36 – 0 - -. -..- - 55 67 - [)MOD 4530 UNKNOWN 37 0 14 I6 LEGVAH 7325 UNKNOWN 38 0 EL 2Q!!cd– 3431 – UNKNOWN - 39 0 9 4 136 TAN 4044 UNKlJOWN 4 0 0 76 -_––~—- _611\u0026- ALNl oG 6537 UNKNOWN - 4 1 0 121 171 ASINCOS 1047 UNKNOWN 4 2 0 79 117 – – AT AN 5326 UNKNOWN .- 43 0 9 6 140 ATAN2 4315 UNKNOWN 4 4 – - – –2(34 43k\u0026CKSP __A205 UNKNOWN 45 0 97 141 MOFFt’X 570 UNKNOWN 4 b 0 - - - 96 140 – BUFFEP.– 3750— UNKNOWN – 4 7 (I 4 5 5 5 CARS 2510 UNKNOWN 4 H – 0 - - 53 65 - CHAXEX 7066 UNKNOWN 49 n h 0 74 CCOS 4042 lJNKNOWN 5 0 0 4 13 6 0 CEXP - – – . – 576 UNKNOWN 5 1 0 45 5 4 CLOG 6455 UNKNOWN\nDESIGN OF THE CDC 6400/6600 LINKAGE EDITOR Table 4(b). List of Subprograms in LINKLIB.\nKEC?HD NOa LEVEL NO* LENGTH PACKAGE CHKSUM —— CREATION DATE OCTAL UECIMAL OCTAL 1B1 - - - — – - - - 4 3 1 48 6 0 CSOYT 2672 UNKNOWN 0 - %–_ – - --261-.—- 2XDATAN3135 UNKNOWM . - 55 0 90 132 DBADEX 4624 UNKNOWN – Ll 50 l%L-3 DEXP 3Ki3 - WNUN – 5 7 0 200 310 OISPLA 1756 UNKNOWN 157 -24- –- - n– -. 235 DLNLOG _ 2776 UNKNOWN 5 9 0 3 1 37 OS I GN 5611 UNKNOWN 0 60 - - - - - - - - - - 154 - . - - - 231 - - - DbIfJCOS— - 5 324 UNKNQW - - - 6 1 0 16 2 0 DVCHK 26 UNKrJOWN h 2 n 7 1 5333 - UNKNOWN- – - – – – – - - - - 1.07 NDFJI b 3 0 36 44 XDINT 4143 UNKNOWN b 4 0 75 113 I FENDF 4500 UNKNOWN - — - 64 0 66 102 I OCHEK 4642 UNKNOWN UNKNOWN – - __ _ - r)- _ _ - 11- - - _ –l% -.!S!!Y.EC– -155 — – - h ‘I 0 34 42 LENGTH 6.31 1 UNKNOWN – -.b? –_ _ _ _ \" - - -. 215 - - - – 330 OUTPTB – - UNKNOWN - - b 9 0 15 17 OVERFL 3300 IJNKNOWN 7 U 0 3 0 36 - —- - - - - — - PALISE_- 1666 -VNK\"rlOWN– _ ‘7 1 D 2 1 25 HkNF 6147 UNKNOWN 7 2 - - (1 . - . _ 5_1 ._ _ 6 1 _ hRAIEX-23A AN KNOWN- - - 73 r) 65 in1 HRAUEX 5424 U!JKNOWr\\l 7 u - - - - - - - - - - .-- 0 - – 76 _ 114 _--E~~IY_II?— -A563- –LIN_K_N_O_U - , 75 n 2 6 32 Sl- X TE 2535 UNKNOWN 76 0 - – – - - .- . - - -31 - -31__31 ITET -ZL- IJNKIJOWN_ – 7 7 0 69 1 Q4 TAYH 6543 UNKIJOWN 7 8 – - - – - – - 0 — – -72 - 110 - - -.-SINH_14h UN-MOk!N - 7 9 0 72 11 0 COSH 1302 UNKNOWN _ - - E!O _ - 0 – 28 - - 3 4 . - .3SwTCH–4fj7–..–4MN4W ?I – - 8 1 0 17 2 1 START 1111 UNKNOWN – - 0 82 - - -. - - _ 3. - - - – -~—~~~-43bfi - UNKN_O_W-N – k 3 0 45 55 WHETEC 5100 UNKNOWN —– - 84 0 8 7 127 !!!!!f_IhlS –17_1?- -__–__ UNKNOWN 6 5 n 588 Ill4 TNPIITN 2671 UNKlJOvJN – - 86 n - 351 - -537 _ 2!JTf!m - - 1k2.2 _ – UNKNOWN 37 - - 0 74 ll? HEADEC 4432 CINKNOWN 8d – - - - - n 39 47 FTNHIN 4666 IJNKNO\\rJN _ -. —- - - - - - - — 8.19 0 96 l4n lNlTMS 6535 UNKNOWN 9 0 0 p- - - - - - - - - - 1L!l –- - 1 6 6 –__ _h$AJ-M\u003e - UNKlJOWN 1 - - _ - - - - - - 9 1 r) 2 5 MOYTt 5571 UNKNOWN 92 n - - —– – I%– - -16. 31 MXTFT – – 2304 UNKNOWN - - - - 93 0 3 2 4 n MXGET 5675 UNKNOWN -24- - - .- 1 _ __19–. - _–a – !!2_c/\\LL-..- -1315 U%KM!WN – 9 5 (I 3 2 4 0 MBPUT 7236 UNKNOWN\n9b - 0 32 f+ 0 – M\u0026-tUl. -k517_ – UNKlJoWN- 3 7 (1 3-47 533 C’LOT 673Q UNKNOWN – 96 – - - - - - - - 325 lINKNOWN_. 0 _ - - - 5A5 – _ SY M HOL– -36_64 . _ - - . – 9 9 0 184 270 SCALE 702 UMKIJOWN loo - I—- - - _ 0- P 99 353 AX\u0026- --— i~35.L llNIc_No41N 101 0 167 247 LINE 4511 UNKNOWN – 1-0 2 0 i.‘3_6 354 _ -N!FH3H 4 1 62– ._ — - __-LJW.!!NO w N lfr.3 17 0 0 0 – - - - - -. - - – LE(_kl- .7(jHULJP !-ENji_T)II IS - 4144 33513— – - - - - – NASTRAN SUPPORT PROGRAMS 7.2.8 Recommended Improvements to the Level 2.0 Version More and more CDC 6000 series installations are installing “private” disk packs thus providing a user mountable/demountable direct access storage device. The increasing use of these packs suggests two areas of improvement in the Level 2.0 version (the current version) of the linkage editor.\nProvide for the case where the individual links which comprise the executable program reside in more than one direct access file (presumably on different packs). Large programs such as NASTRAN will not fit on a single disk pack. Provide for object deck libraries in direct access format on the packs. Again, for a large program such as NASTRAN, considerable elapsed time is spent in initial processing in creating the single direct access file SYSUT2 from each of the sequential libraries. The first area could be implemented by modifying XBPIPIT and XLPIADER. Perhaps input could be supplied to XBBPIT which specifies a destination file ‘for the 1 ink. XB0DT could then modify the master index in LINKO$ with this information. XLOADER could be modified to accept the new format i in LINKO$. The second area could be implemented by changing the format of the LIBRARY control statement to the following: LIBRARY namel (a), name2(a) . . . where a = T or C as in the LINKEDIT statement. Files which are coded C are assumed to be already in direct access format (probably with a name index). Files coded T are sequential and are con- verted to direct access formation on SYSUT2 as now. This would imply changes to LKED015, LKED025 and LKED075. DESIGN OFTHECDC6400/6600 LINKAGE EDITOR 7.2.9 Linkage Editor Glossary control section Consists ofallinstructions anddatadefined forasubprogram orcommon block. delink todelete from ENTRTable Object decktable containing alistofallnamed entry points andcommon blocks. Seesection 7.2.5.2 EPT Entry Point Table. Seesection 7.2.2.1.4 FET FileEnvironment Table. SeeSCOPE reference manual. FILLTable Object decktable containing information torelocate previously defined GT ID LCT link link LINKTable LKEDO00 LT nbr path PIDLTableaddress fields. General Table. IdentificationSeesection 7.2.5.4 Seesection 7.2.2.1.9 Local Common Table, Seesection 7.2.5.1 when usedasaverb, “tolink” means “toaddto.” Collection ofoneormoresegments which co,rise alogical subdivision oftheprogram. Link0(consisting ofonesegment only) isinmain storage atalltimes. Itisthefirst linktoreceive control whenexecution of theprogram isinitiated. Therootsegment ofanyother linkresides in main storage atalltimes thatthelink isbeing executed. Anoverlay program must consist ofatleast onelinkother thanLinkO. Object deck table specifying external references withthesubprogram. Seesection 7.2.5.5 Mainprogram. SeeFigure 31. Library Table. Seesection 7.2.2.1.2 abbreviation for\"nu_er” Consists ofasegment, Asay,andallsegments inthesameregion between Aandtherootsegment (first segment). Therootsegment isapartof every path inevery region. Whenasegment isinmainstorage, allsegments initspatharealsoinmainstorage. Program Identification andLength Table. Object deck table containing thesubprogram identification andnames ofeachofthecommon blocks referenced bythesubprogram. Seesection 7.2.5.1. 7.2-205 (6/I/71)\nreg. region RDT REPLTable RT SCT SDT seg. segment SNT TEXTTable tree XREFTableNASTRAN SUPPORT PROGRAMS abbreviation for\"region” Contiguous areaofmainstorage within which segments canbeloaded independently ofpathsinotherregions. Anoverlay program canbe designed inasingle ormultiple regions. Region Definition Table. Seesection 7.2.2.1,5. Object decktablethatprovides foranefficient meansforrepeating a blockofdata. Rename Table. Seesection 7.2.2.1.8. Segment Chains Table. Seesection 7.2.2.1.6. Segment Definition Table. Seesection 7.2.2.1.7. abbreviation for\"segment.” Smallest functional unit(oneormerecontrol sections) thatcanbeloaded asonelogical entity during program execution. Subprogram NamesTable. Seesection 7.2.2.1.3. Object decktablecontaining instructions anddata. Seesection 7.2.5.3 Thegraphic representation thatshowshowsegments canusemainstorage at different times. Itdoesnotimplytheorderofexecution. Seesection 7.2.2.1.10. 7.2-206 (6/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) 7.3THESOURCE CONVERSION PROGRAM (SCP) 7.3.1 Purpose oftheSource Conversion Proqram TheSource Conversion Program (SCP) translates theNASTRAN FORTRAN codethatcompiles onthe UNIVAC ll08andIBMS/360 toaformacceptable totheNASALangley Research Center (LRC) CDC6000 series RUNcompiler. TheSCPisprimarily concerned withtwomajor differences between theFORTRAN acceptable to theLRCRUNcompiler andtheFORTRAN acceptable tothecompilers ofthethree other computers initially selected forNASTRAN’s execution: IBMSystem/360 (BS); UNIVAC ll08 (EXEC 8);andIBM 7094-7044 Direct Couple System (IBSYS). These twodifferences are: a)nonstandard returns from called subroutines, andb)subroutines withmultiple entry points. 7.3.2 Conversion Performed Figure lshows asubroutine containing special cases ofthetypes ofFORTRAN statements on which theSCPoperates. Thissubroutine wasgenerated merely forillustrative purposes; it clearly violates manyoftheNASTRAN FORTRAN rules setdowninsection 6.2. Figures 2,3,4,and5showtheFORTRAN statements generated bytheSCPfromthecodeshown inFigure I.These statements will compile ontheLRCRUNcompiler andwillproduce object code equivalent tothat produced bytheother compilers. 7.3.2.1 TheNonstandard Return (NSR) TheNSRaffects three types ofFORTRAN statements: a)theRETURN statement; b)theCALL statement; andc)theSUBROUTINE orENTRY statement. l°TheRETURN statement. SCPInput (e.g., seelines 0033and0015 inFigure l) RETURN or RETURNi where iisanalphanumeric constant. 7.3-I (311171)\nNASTRAN SUPPORT PROGRAMS SHROLTI IE SUE1 (,A# a) ca*** — C THrS SAMPLE SUBROUTrNE ILLUSTRATES PARTlCCULAR CASES OF ALL THE C STATEMENT TYPES CONVERTeG-P . - 8885 0004 C - C 11 MllLTlPCE EhTPIES, 0006 C 2) MULTIPLE ERTKIES WITH ‘.O-STANCARD RETURNS, —Q09!2- C 3) nUPMY ARGUFENT -A- APPtARI!vG Oh POHE THAN CNE ENTRYI 0008 C 41 DI FEWSION STATEMEQTS AI- TFR_AN ALTERNAJE ENTRY,– _ 0009 C 5) NOh*STANDARU RETURNS AS IN A CALLING PROGRAtlt 001 0 . C 6) YOhmSTAYDARD RTURWS A? IN THE CALLED PROGPAM, — 001 1 C 7) NOhsSTAVDARD RETURVS 0, LOGICAL IF STATEMEtvTS, 001 2 c***** – C SEsohD ETRY POINT ___4aUl__l 001 8 C**”** p————.—. 411l9- - FiTRY SOi32 0020 CALI FUNCl(A,P;100) - T—– - - -. – - .- _ _A’L— 303 CALl FUNC~(PIOOF %20(1, 3 0022 2oR CALL FUhJgR($It?O) – – – 0023- RFTURA 0024 Cc**, - - — – – - ___0025 C THIRC ENTRY POllNT C***a 0026\n—- - - – - - - - - - – - - - - - – - - – 0027 ELTRY SlJR3(A,f?C,DtFI*) 0028 – lh7FfH He($) .,…_ ___l_____i-_Y-d– IF( LI rFOc i ) CALL bh2($108,$300200~~) 0030 - RFTIIRh 1 -0931- - 303 IF( D cfOc 310 ) RkTURN 1 0032 – HFTtJHh- . -na33— Eh I) 0034 Figure 1. Subroutine acceptable to the UNIVAC 1108, IBM System/360, and IBM 7094-7044 Direct Couple System FORTRANs, but not to the CDC 6000 series FORTRAN. Figure 2. Driver deck generated for entry SUB1 of the sample subroutine. THE SOURCE CONVERSION PROGRAM (SCP) Figure 3. Driver deck generated for entry SUB2 of the sample subroutine. SL.JT’OJTI NE SIJB3 (-1 r %,IItF) 8 GETURNS (KETIJRVI 1 SUQ3 1 COU4Y/3YSTEhl /III!Ill(1) SUR3 COYrlOJ/%ZSJPl/I III~IIIIIIIII SUQ3 3\nTII11al=LilcT(~)- :J~'\\~JNN sus3 5 1 I I1 IOZ=L~CF(~C)- Ji'\\l'\\lJNNI\\I SURJ 6 I I I I I OJ=LOCF(UEF )-I'\\I J~v''JN~' SUR3 7 CALL ~~JHJZZZ(III~III(~~I~)~IIIII~~~II~IIO~II~~I~S~ 8 LFT'I?YS(~) SUW3 9 Figure 4. Driver deck generated for entry SUB3 of the sample subroutine. MSTRAN SUPPORT PROGRAMS c SUBROUTINE SUBI (+;2(*) SUR~ 3 C\u0026***+ SURl 3 ' - r: THtS SAMRLE SU_BRO_U_TSNE rLLUSTRATES PARTICULAR CASES OF ALL THE 5U~1 4 r: STATEMENS\" TYPES CONVERTED BY THE SOURCE CONVERSION PROGRAM. SUP1 5 8 c - SUP1 6 1 C 1) MULTIPLE ENTRIES, SUB1 7 C 2) M~JLTIPLF ENTRIES 4If~ WCNaSTANDARD RETURNS SUPl 8 C 3) DUMMY ARBUMENr *A\u0026 APPEARING ON MORE THAN ;)ME ENTRY,----- SURl 9 ' C 4) DIMENSIOV S~ATE~ENTS bFTEH AN ALTEFtNATE EVTRY, SWl 10 1 C 5) NO@-STANDARP nfTURNS AS 1Y A CALLING PROGRAM, SUB1 11 I C 6) VON-STANDARD sfETUSNS AS IN THF CALLFD PROGRAM. SUP1 13 C 7) +JON-STANDARD aESURNS ON LOGICAL 1F STATEMFNTS. SURI 13 I Ca**+a SURl 14 C f NTRY SUB3( A~BC~IJEF, *) SURl 15 , INTEGER bc(3) sun1 16 IFC A 385) 40,50,5Q SYRI 17 40 RETURN RETURN1 5URI 18 -- --- -- a 50 RETURN RETURN2 SURl 19 ct**rr sun1 ao C SECOND ENTRY POINT ----- ----- SUPl 21 e***+* -- SUP1 23 ENTRY SUH2ZZZ sun1 23 7 - C EVT9Y SUB2 - SUP 24 CALL FUNCI(A),RE~JRNS(~O@) SUP: F 100 CALL F~WC~~I~OIRI~~E~U~NS(~-OO~~~~) - - - - .- SUB1 26 200 CALL FUNC3,aFTLJR%S(100 SURI 27 RETURN - SUP1 28 Cut*+* 51191 29 c THIRD EVTPY P~~NT - -- qUR1 30 C+**+* SUB1 31 ENTRY SUB37ZZ -- JURl 33 If (DoEQrl)CACL F~~NC~~~~QCOID)~RETURNS(~OO~~QO) SUB1 33 RETURN RkTURN1 SUE1 34 - . 350 IFC3,EQ,2.O)RfTUQY RFTUR~~ sURl 35 RETURN -- -- -- SJR1 36 END 3URI 37 Figure 5. SCP output of the sample subroutine. THESOURCE CONVERSION PROGRAM (SCP)\r2,\r3.SCPOutput (e.g., seeline SUBI 36andSUBI 18inFigure 5)\rIfiisnotpresent intheinput then noconversion takes place.\rRETURN RETURNi\rwhere iisanalphanumeric constant identical totheioftheinput.\rTheCALL statement having nonstandard return arguments.\rSCPInput (e.g., seeline 0022 inFigure l)\rCALL s($nl,$n 2..... $nK,al,a 2..... aj)\rwhere sistheSUBROUTINE orENTRY name, theniareFORTRAN statement numbers\rassociated with nonstandard returns, andtheaiareordinary arguments.\rSCPOutput (e.g., seeline SUBI 26inFigure 5)\rCALL s(al,a 2..... aj), RETURNS(nl,n 2..... nK)\rwhere s,theai,andtheniareasdefined above. Note the\"$'s\" have been removed.\rTheSUBROUTINE orENTRY statement.\rSCPInput (e.g., seeline O001 inFigure l)\rSUBROUTINE S(*l,* 2..... *K,al,a2 ..... aj)\ror\rENTRY S(*l,* 2..... *K,al,a2 ..... aj)\rwhere sisthesubroutine orentry name, the*iarearguments representing the\rnonstandard returns andtheaiareordinary arguments.\rSCPOutput\rSUBROUTINE s(al,a 2..... aj), RETURNS (RETURNI, RETURN2 ..... RETURNK)\rwhere sandtheaiareasdefined above.\rNote: During theoverall conversion process thenonstandard return s(*'s) in\rENTRY statements areremoved bythemultiple-entry processor (see Figure 7)as\rdescribed insection 7.3.2.2. This process isperformed first, andthus the\rnonstandard return processor encounters only SUBROUTINE statements having\rnonstandard returns.\r7.3-5 (311171)\rNASTRAN SUPPORT PROGRAMS\r7.3.2.2 Subroutines Having Multiple Entries\rU_,like nonstandard return processing, which isessentially astatement-for-statement con-\rversion process, subroutines having multiple entries cannot beconverted inastraightforward\rwayforcompilation ontheLRCRUNcompiler.\rTheproblem ofmultiple-entry subroutines liesintherequirement thateachargument must\rcontinue torepresent thebeginning ofthesameareaincorethatisassigned uponthefirst\rentrywhereitappears asanargument untilitreceives another coreassignment atthesameor\ranother entryinwhich itappears inthesamesubroutine. ThusinFigure I,ifentryweremade\rtoSUB3(line0028)thedummyarguments A,BC,andDEFwould receive coreassignments. Ifthe\rnextentrytothissubroutine weremadeatSUB1(line0001), theargument Awouldreceive anew\rcoreassignment; however BCandDEFwouldretain theassignments received attheprevious entry,\rSUB3.\rTheLRCversion andallversions oftheCDC6000series RUNcompiler accept arguments only\rontheSUBROUTINE statement; ENTRYstatements maynothavearguments (1)\rThelistofarguments onanyCALLstatement, whether toaninitial orsecondary entry point,\rshould agreewiththeargument listoftheSUBROUTINE statement. InCDC6000series FORTRAN, for\reachargument inaCALLlist,anaddress andnotavariable, entire array, orexternal subroutine\rispassed tothecalled subroutine. Thefollowing paragraphs describe thetechnique usedto\rconvert subroutines having multiple entries.\rI.Ifalltheentries ofasubroutine haveprecisely thesamenumber ofarguments,\randthesearguments havethesamenamesandappear inthesameorder, thentheSCP\rdoesnothing morethanremove theargument listsfromtheENTRYstatements.\r(1)Control Data6400/6600 Computer _ystems FORTRAN Reference Manu_l CCDCpub,NO.60174900)\r7.3-6 (3/I/71)"},"title":"Programmer's Manual P106"},"/docs/programmers/programmers_manual_107/":{"data":{"":"THESOURCECONVERSION PROGRAM(SCP) 2.Iftheaboveconditionisnotmet,thentheSCPgenerates\"drivers\"asshownin Figures2,3,and4. 3.Toinsurethatacoreassignment foranargumentismaintained forfuturecallstoa subroutine withmultipleentries,allcallstothatsubroutine aretrappedthroughsmall subroutines called\"drivers.\" TheSCPgeneratesadriverforeachentrypointina multiple-entry subroutine. Thedriversubroutine nameisthesameastheentryit represents. Itsargumentlististhesameastheoriginal,e.g.,seetheentries inFiguresl,2,3,and4. 4.Thedriver’sfunctionistopreservethecoreassignments ofitsargumentsandto thencalltheentryoriginally intendedwithalistofallpossibleargumentcore assignments. 5.Theargumentlistoftheconverteddeckiscomprisedoftheset-theoretic union ofallargumentnamesforallentries(seeFigurel,linesO001and0028,andFigure5, lineSUBIl). 6.Thedriversdonotpreservetheactualcorelocations, butinsteadpreserve,in labeledCOMMON,indexesrelativetoafixedlocationincore(/SYSTEM/–see section 2.4.I.8). SeeforexamplelinesSUB35,SUB36,andSUB37inFigure4. 7.Theentrypointnamesoftheoriginalsubroutine arefilledtosevencharacters each,using\"Z’s.“Seven-character namesareingeneraluniquesincesixisthe maximumnumberofcharacters permittedfornamesinNASTRANFORTRAN.TheSCPdoes notconsiderthepossibility ofamultiple-entry subroutine havingtwoentrynames (suchasSUBZandSUBZZ)which,whenfilledwithZstosevencharacters, wouldproduce identicalentrynames.Inthiscase,thecodeproducedbytheSCPwillnotcompile, anditisuptotheprogrammer usingtheSCPtosolvetheproblem. 8.AtexecutiontimethedriverswillproducecorrectresultsonlywhenCALLsaremade inasequencethatwouldbevalidusingtheoriginalsubroutine ontheUNIVACll08 andtheIBMS/360. 7.3-7(311171)\nNASTRAN SUPPORT PROGRAMS 7.3.3 Major Divisions intheProgram Thefollowing discussion isintended fortheusebytheprogramming analyst responsible for theuseandmaintenance oftheSCP. Refer tothesymbolic FORTRAN code, which isheavily com- mented, inaddition tothis discussion andtheflowcharts given insection 7.3.5. 7.3.3.1 TheMain Driving Routine CONVSOU Themain driving routine CONVSOU isasingle subprogram that controls theconversion of FORTRAN subprograms itfinds ontheinput file. Itdoes thefollowing: I.Reads afull subprogram into core. 2.Calls MULTEN, themultiple-entry processor, which will convert thedeck formultiple entries. 3.Calls REORDR, thedelcarative statement reordering processor, which will rearrange into correct order anydeclaratives within thesubprogram. REORDR iscalled only if thesubprogram hasmultiple entries. 4.Calls NSRETN, thenonstandard return processor, which will complete theconversion bytranslating allnonstandard return statements within thesubprogram. 5.Outputs theconverted deck viaroutine DKOUT. 6.Repeats steps lthrough 5until nomore subprograms remain ontheinput file. Themain driving routine contains blank COMMON which isloaded below (i.e., atahigher core location than) allobject code oftheSCP. Itisthus used asopen core. Within themain driving routine andthethree processors, asubprogram being converted always lies inthis open core from Z(IDK) toZ(NDK), where Z=Open core array IDK=Relative location inZwhere thesubprogram begins. NDK=Relative location where thesubprogram ends. 7.3-8 (311171)\nTHESOURCECONVERSION PROGRAM(SCP) Eachcardimageofthesubprogram beingconvertedoccupiestwelvewordsofcore,eachword havingsixleft-adjusted characters. Consequently, theSCPisrecommended foruseonlyona CDC6000seriescomputeralthoughitistheoretically capableofrunningonanymachinehaving six-character words(e.g.,UNIVACIf08).Thisisreasonable sincetheSCPisdesignedtooperate onCDC6000seriesformatfiles. 7.3.3.2TheMultiple-Entry ProcessorMULTEN Themultiple-entry processorMULTENoperatesontheoriginalcodeonesubprogram atatime. Itscansthecodeforentrystatements and,iffound,callsutilityroutineNAMARGtoforman argumentlist.Afterallentrieshavebeenfound,thefollowingtakesplace. I.Ifonlyaprimaryentrywasfound,noactionistakenandthisprocessorreturns tothemaindrivingroutine. 2.Theargumentlistsofallentriesarecompared. Iftheyareidentical, thentheonly actiontakenistoremovetheargumentlistsfromallsecondaryentries. 3.Iftheargumentlistsarenotidentical, utilityroutineDRIVESiscalledtogenerate andoutputadriverdeckforeachentrypoint.Theentrystatements oftheoriginal programarethenalteredtoappearascommentstatements, newentriesareinsertedbefore them,andcontrolisreturnedtothemaindrivingroutine. MULTENwillinallcasessetaflagifmorethanoneentryisfoundtoindicatethatthe declarative statementprocessorRE_RDRistobecalled. 7.3.3.3TheDelcarative StatementReordering ProcessorRE_RDR Thefunctionofthedeclarative statementreordering processorRE_RDRistomoveall declarative statements tothetopofasubprogram andalsoinsurethattheyareinthefollowing order(seesection6.2): I.DBUBLEPRECISION 2.COMPLEX 3.REAL 4.INTEGER 7.3-9 (311171)\nNASTRAN SUPPORT PROGRAMS 5.LOGICAL 6.EXTERNAL 7.DIMENSION 8.COMMON 9.EQUIVALENCE I0.DATA RE_RDR iscalled forsubprograms withmultiple entries because DIMENSION statements appearing afterasecondary entrymustbemovedtothetopoftheprogram. Thisprocessor originally wasastand-alone program, andstillretains DIMENSION statements, while theothertwoprocessors usetheopencoreconcept. REORDR usesashuttle-exchange sortconsidering allnondeclarative statements tobestored last. Comments appearing directly above, orembedded within, adeclarative statement aremoved alongwiththerespective declarative inthesorting process. 7.3.3.4 TheNonstandard Return Processor NSRETN Thenonstandard return processor NSRETN analyzes eachstatement ofthesubprogram itreceives forconversion. Whenitfindsanyofthefollowing statement forms, itwillbranch toasection ofcodethatwillperform theconversion directly. I.SUBROUTINE statement having nonstandard returns (*’s)initsargument list. 2.RETURNi, whereiisaninteger constant. 3.IF(….)RETURNi, asin(2). 4.CALLstatement having nonstandard return FORTRAN statement numbers ($n)inits argument list. 5.IF(….)CALLstatement asin(4). 7.3-I0 (3/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) 7.3.3.5 Utility Subroutines Described below are25small utility subroutines usedbytheSCP. Allarewritten in FORTRAN except WRTEOR, ORF,LSHIFT, RSHIFT, LOCF, andFIELDLN, which arewritten inCOMPASS. Alloftheexceptions saveWRTEOR arepartoftheMAPFNS routine described insection 5.5.6.1. 7.3.3.5.1 WRTEOR ACOMPASS assembly language routine tocomplete alogical record ontheconverted deck output file. CALLWRTEOR 7.3.3.5.2 CDTYPE When called byREORDR, this routine will analyze one72-column cardimage andreturn a value indicating what kindofFORTRAN statement orstatement fragment itis. CALLCDTYPE(TYPE,BUFF,ADD) TYPE =Integer returned withoneofthefollowing -l -2 0 l 2 3 4 5 6 7 8 9 lO BUFF =Comment statement Continuation statement Undefined statement DOUBLE PRECISION statement COMPLEX statement REALstatement INTEGER statement LOGICAL statement EXTERNAL statement DIMENSION statement C0_@4_N statement EQUIVALENCE statement DATAstatement Eleven-word buffer containing cardcolumn characters 7through 72,sixcharacters toaword 7.3-11 (3/I/71)\nNASTRAN SUPPORT PROGRAMS ADD=BCDwordcontaining columns 1through 6ofthecardimage. 7.3.3.5.3 MOVE M_VEmovesagroupofcardimages, whencalled byREORDR, toahigher position inthedeck. Itperforms ashuttle-exchange. CALLM_VE(POINT,BEGIN,END,CARD,ADD) PBINT =Integer valuepointing tothelastcardsorted intoplace, afterwhichcards onthecurrent movewillgo. BEGIN =Integer cardnumber ofthefirstcardinagroupofcardstobemoved. END =Integer cardnumber ofthelastcardingrouptobemoved. CARD =Buffer containing thecardimages forthesubprogram. ADD =Buffer containing theaddress fieldofeachcardimage. 7.3.3.5.4 TOP TOP,asmallroutine, determines where thefirstnonentry, noncomment statement ofasub- program begins. CALLTOP(POINT,CARD,ADD,TOTAL) POINT =Integer valueofcardnumber returned. CARD =Arrayofcardimagestatement fields. ADD =Arrayofcardimageaddress fields. TOTAL =Integer valueofthetotalnumber ofcardsinsubprogram. 7.3.3.5.5 MASK2 MASK2unpacks aspecific character fromaspecific wordincore. CALLMASK2(WORD,CHAR,LETTER) WORD =Wordofcorewhere thecharacter tobeunpacked resides. CHAR =Integer countcounting fromleftofcharacter desired. 7.3-12 (3/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) LETTER =Word character isreturned in. Thecharacter isleft-justified andtheword isfilled with blank characters. 7.3.3.5.6 MASK3 MASK3 unpacks acharacter from aword inastring ofwords andincrements string pointers appropriately. CALLMASK3(W_RD,MW_RD,MCHAR,LETTER) W_RD =Current wordinstring tounpack character from. MW_RD :Wordcurrently beingoperated on. MCHAR =Character desired counting fromleftintheword. LETTER =Wordinwhichcharacter isreturned, left-justified filled withblanks. MCHAR isincremented byI.Ifitthenexceeds 6,itissetto1andMW_RDisincremented by1before return ismade. 7.3.3.5.7 MASK7 MASK7 analyzes astatement imagebuffer andreturns then-thnonblank character intheimage; oriftheimageisexhausted, itreturns ablank. CALLMASKT(CARD,N,LET,NCARDS) CARD =Statement imagebuffer N =Number ofthecharacter desired, N\u003e1 LET =Wordthecharacter isreturned in,left-justified filled withblanks NCARDS =Number ofcardsinstatement image. 7.3.3.5.8 GETNAME GETNAME determines thenameappearing ontheentrystatement ofasubprogram. CALLGETNAME(Z,NAME) Z=Entrystatement imagebuffer. NAME:Wordwhere thenameisreturned, left-justified filled withblanks. 7.3-13 (3/I/71)\nARGBUF(IARG+O) ARGBUF(IARG+I) ARGBUF(IARG+2) ARGBUF(IARG+3) ARGBUF(IARG+4)NASTRAN SUPPORT PROGRAMS 7.3.3.5.9 NAFtARG N_ARG operates onanykindofanentry statement (SUBROUTINE orENTRY) andreturns abuffer ofdata about theentry. CALLNAMARG(ARGBUF,IARG) ARGBUF =General buffer where data istobeplaced. IARG =Nextlocation ofARGBUF which maybefilled. Onreturn thefollowing values will havebeenplaced inARGBUF. =Location ofentry =Entry name =Number ofnonstandard returns intheentry statement =Number ofarguments =BCDnameofthefirst argument ARGBUF(IARG+3+ARGBUF(IARG+3)) =BCDnameofthelastargument 7.3.3.5.10 PACKCD PACKCD packs acharacter intotheoutput card image. Itwill generate continuation cards asneeded. CALLPACKCD(CHAR,1OPT) CHAR =Wordwith theleft-justified character tobepacked. 0implies continue thecurrent statement. 1implies startanewstatement. 2implies startthefirststatement atZ(1),theopencorearrayinblankcommon.\n2implies startanewstatement atZ(IBPT). 7.3-14 (3/I/71)\nTHESOURCECONVERSION PROGRAM(SCP) 7.3.3.5.11 INSERT INSERTinsertsnewentriesintomultiple-entry subroutines ifrequired,andconvertsthe oldentriesintocommentstatements. CALLINSERT(IDK,NDK,ARGS,jARGS,ARGBUF,IARG,STARS) IDK NDK ARGS JARGS ARGBUF IARG STARS=Pointertothefirstwordofthesubprogram inopencore. =Pointertothelastwordofthesubprogram inopencore. =Arraycontaining theunionofargumentnames. =NumberofnamesinARGS. =Buffer produced byNAMARG containing entry argument data. =Length ofARGBUF. =Number ofasterisks tobeplaced onmainentry. 7.3.3.5.12 UNPKZ UNPKZ unpacks thenextcharacter ofastatement, automatically considering continuation cards. CALL UNPKZ COMM_M/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR ISTATE JSTATE LASTWD ZW(_RD ZCHAR CHAR=Pointer tothefirst word ofastatement. =Pointer tothetentative lastwordofastatement. =Pointer totheactual lastwordofastatement. =Pointer tothecurrent wordofopencorebeing workon. =Lastcharacter position unpacked, 0\u003cZCHAR \u003c6. =Character unpacked. 7.3-15 (3/I/71)\nNASTRAN SUPPORT PROGRAMS 7.3.3.5.13 PACKZ PACKZpacksacharacter intoastring. CALLPACKZ(IBUMP,CH) C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZWORD,ZCHAR,CHAR ISTATE JSTATE LASTWD ZWORD ZCHAR CHAR IBUMP CH 7.3.3.5.14SeeUNPKZ, section 7.3.3.5.12 _0ifpointers arenottobealtered. 0ifautomatic pointers areused. =Character tobepacked. PACK1 PACK1packsaspecific character intoaspecific wordofcore. CALLPACKI(WORD,J,CHAR) WORD=Wordwherecharacter willbeplaced. j=Character position, 1to6,counting fromleftwhere thecharacter willbe placed inW_RD. CHAR=BCDcharacter left-justified. 7.3.3.5.15 UNPK(function) UNPKunpacks aspecific character fromaspecific wordofcore. CHAR=UNPK(W_RD,J) WORD=Wordofcorewhere character tobeunpacked resides. J=Character position, 1to6,counting fromleft. 7.3-16 (311171)\nTHESOURCECONVERSION PROGRAM(SCP) CHAR=Characterreturned,left-justified andfilledwithblanks. 7.3.3.5.16 ZW_RD ZW_RDunpacksthenextonetosixcharacters fromastatement, ignoringblanks,andpacks themintoasingleword,left-justified andfilledwithblanks. CALLZW_RD(NAME,JCHARS) C_MM_N/ZUNPKZ/ISTATE,JSTATE,LASTWD,ZW_RD,ZCHAR,CHAR ISTATE= JSTATE= LASTWD= SeeUNPKZsection7.3.3.5.12 ZWORD= ZCHAR= CHAR= NAME=Wordwherethecharacters arereturned. JCHARS=Numberofcharacters desired. 7.3.3.5.17 NAMEZ NAMEZfillsoutanametosevencharacters with\"Z’s\"ontheright. CALLNAMEZ(NAME,NEWNAME) NAME NEWNAME 7.3.3.5.18=Single word with name init. =Seven word buffer where theseven characters ofthenewname will be returned, each left-justified andfilled with blanks. ZNAME ZNAME isthesameasNAMEZ (7.3.3.5.17) except thatthenameisfilled with\"Z’s” left.onthe 7.3-17 (311171)\nNASTRAN SUPPORT PROGRAMS 7.3.3.5.19 ORF(function) ORFperforms thelogical sumoftwowords. RESULT =ORF(W_RDI,WORD2) 7.3.3.5.20 LSHIFT (function) LSHIFT performs logical shiftofawordn-bits totheleft. High-order bitsshifted out arelast;vacated low-order bitpositions arezero-filled. RESULT =LSHIFT(WORD,N) W(_RD =Wordtobeshifted. (Itsnotaltered) N =Number ofbitstoshiftleft. RESULT =Returned valueofshifted word. 7.3.3.5.21 RSHIFT (function) RSHIFT performs arightshiftwiththedualcharacteristics ofLSHIFT. Seesection 7.3.3.5.20. 7.3.3.5.22 LOCF(function) LOCFdetermines theabsolute location ofavariable address. RESULT =LOCF(W_RD) W@RD =Varaible whose address isdesired. RESULT =Returned address ofWORD. 7.3.3.5.23 FIELDLN FIELDLN returns thenumber ofwordsofcoreavailable forcodeanddatastorage. CALLFIELDLN(L) L=Number ofwordsofcoreavailable Lmustbesettozerobefore callismadeto FIELDLN. 7.3-18 (3/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) 7.3.3.5.24 D_UT DKOUT outputs theconverted deck. through 80ofeach card image. CALL DKOUT(IDK,NDK) IDK NDK =Itplaces thename andsequence numbers incolumns 73 =Pointer tothefirst word oftheconverted deck inopen core. Pointer tothelast word oftheconverted deck inopen core. 7.3.3.5.25 DRIVES DRIVES generates adriver deck foreach entry point ofthesubprograms that have multiple entries. CALL DRIVES(ARGBUF,IARG,ARGS,JARG) ARGBUF =Buffer ofnames andargument lists foralltheentries asprepared byNAMARG. Seesection 7.3.3.5.9. IARG =Length ofARGBUF ARGS =Buffer where DRIVES will place theunion ofallarguments found inARGBUF. JARG =Length ofARGS. 7.3.4 UseoftheSCP TheSCPoperates onaninput file ofsubprograms tobeconverted. This input file need only consist ofFORTRAN card images inaform capable ofbeing read byCDC6000 series formatted READ statements. These card images, thus, must beinCDC6000 series display code. Thefile maybeconstructed such that each deck isalogical record, orthecard images ofalldecks may becontinuous. TheFORTRAN code oftheroutines tobeconverted areassumed tobe\"correct,\" i.e., compilable ontheUNIVAC ll08 ortheIBMS/360. Toexecute theprogram, compile allroutines oftheSCPplacing theobject decks onsome file, e.g., SCPR. Then execute theprogram using thecontrol card: SCPR(OUTFILE,INFILE). where INFILE isthefile name where thecode tobeconverted istobefound, andOUTFILE iswhere theoutput code istobeplaced. Theoutput will beoneCDC6000 series logical record peroutput 7.3-19 (311171)\nNASTRAN SUPPORT PROGRAMS subroutine ordriver deck. Theprogram should beexecuted withapproximately 130,0008 wordsofcore. Thisamount will allowthehandling ofthelargest subprogram within NASTRAN. Figure 6showsasample decksetup foranSCPrun. 7.3.5 SCPFlowcharts Thissection contains flowcharts fortheroutines comprising theSCP. andthecorresponding routines are:Thefigure numbers Figure Number Routine No.ofSheets 7 C_NVS_U 1 8 MULTEN 2 9 NAMARG 1 I0 DRIVES 2 II RE_RDR 3 12 NSRETN 4 7.3-20 (3/I/71)\nTHESOURCECONVERSION PROGRAM (SCP) SUBROUTINE 2(tobeconverted) SUBROUTINE 1(tobeconverted_ 789 OBJECT DECKS OFSCP JOB,OI ,I00,I30000.\nFigure 6.Sample decksetup foranSCPrun. 7.3-21 (311171)\nNASTRAN SUPPORT PROGRAMS C_NVSOU _ Enter _ Determine Amount ofCore Available IPrint aLinel Read Card Images for OneDeck From Input File IMoveDeck IDowntoEnd ofOpenCore CalIMULTEN forMultiple Entry Process ing Call NSRETN forNonstandard RETURN ProcessingYes Yes CalIDKOUT toOutput theConverted DeckIRewind theConverted Deck Output File fPrint EOFMessage ! ICallREORDRforDeclarative Statement Reordering l Figure 7.Flowchart forCONVSOU. 7.3-22 (311171)\nTHESOURCECONVERSION PROGRAM(SCP) RemoveENTRYWhich _isAssumedtobea .JDummy EntryNeeded [toCircumvent a IUNIVAC ll08 Compiler Bug.MULTEN Yes CallNAMARG toGetthe NameandList ofArguments From theSUBROUTINE Statement Search Through CardImages of DeckforNext ENTRYStatement Yes No “SetTypeStatement IReorderin( FlagTrueJ= Return w No (es i i Call NAMARG to 1GetName andList ofArguments From theENTRY Statement I Figure 8(a). Flowchart forMULTEN. 7.3-23 (311171)\nNASTRAN SUPPORT PROGRAMS Compare theArgument ListsofAllEntries intheSubprogram Ye o Yes Add*‘stothe SUBROUTINE Statement Argument Listto Insure Maximum Count Remove Argument ListsFromAllEntries Except theSUBROUTINE Statement and PrintaMessaqe ToThisEffect Figure 8(b). Flowchart forMULTEN. 7.3-24 (3/I/71)CallDRIVES toGenerate Driver DecksforAllthe Entries inthe Subprogram LCallINSERT to TurnAllCurrent Entries IntoComment Statements and Insert New EntryStatements WithNewNames\nTHESOURCECONVERSION PROGRAM(SCP) NAMARG _ Enter _ Extract Name FromEntry Statement and PutitinBuffer Extract the Arguments and PlaceThemin theBuffer. Maintain aCount ofNonstandard Returns and Placeitinthe Buffer Figure 9.Flowchart forNAMARG. 7.3-25 (311171)\nNASTRAN SUPPORT PROGRAMS DRIVES FormaListofthe (Set-Theoretic) Union ofArguments FromAll theArgument Lists StartDriver Deck foranEntryby Forming aSUBROUTINE Statement Usingthe Original Nameand Arguments ofanEntry I Form C_MM_N/SYSTEM/ i i ii(1) I I Form I _MM_N/ZZ…namel/IIIIIOI …..lllllOn where, n=totalnumber ofarguments I intheunionlist,andnamel istheI nameoftheoriginal primary entry I point II ormI NNNNNNN=L_CF(IIIIIII(1))-I lFormastatement foreachargument ofthefollowing form IIIIIi-=L_CF(arg)-NNNNNNN where argistheargument, andi isitsposition itheunion list Figure lO(a). Flowchart forDRIVES. 7.3-26 (3/I/71)"},"title":"Programmer's Manual P107"},"/docs/programmers/programmers_manual_108/":{"data":{"":"THESOURCE CONVERSION PROGRAM (SCP) Form CALLnamei(lllllll(lllllOl),lllllll(lllll02) …..lllllll(lllllOn)) where, nameiisthenameofentrydriver deckisfor,filled outon righttosevencharacters withZs,andnisthenumber ofarguments intheunionlistofallarguments. Addnonstandard returns toprevious CALLif*‘swereinoriginal entry. Form, RETURNS(nl,n 2…..nk) wheretheniaretheFORTRAN statement numbers associated withtheknonstandard returns Formadditional returns ifnonstandard returns wereplaced ontheCALLstatement, RETURN RETURN1 RETURN RETURNk where, kisnumber ofnonstandard returns possible. Call DIq_UTtoOutput the DriverDeck YeS’No C Return _ Figure lO(b). Flowchart forDRIVES. 7.3-27 (3/I/71)\nNASTRAN SUPPORT PROGRAMS REBRDR (Entry) PrintMessage [ andDo I NotOrder I I (Return MovetheDeckI FromOpenCorei toDimensioned i Arrays i I Initialize TyPEArrayofLength i TentoZero,Setting TYPE(1)=1200I I TY Position Pointers toLastStatement ofLastDeclarative Statement ProcessedYes Figure ll(a). Flowchart forREORDR. 7.3-28 (3/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) JPosition Pointers toI Next Card and J CalICDTYPE I toDetermine itsTypeI No Determine Where EndofStatement Lies, That is,How Many Continuation Cards andEmbedded Comments Are Present _r Move This Complete Statement Under Last Declarative Statement Moved byMoving the Cards I_anedi ately Above itDown. (SHUTTLE-EXCHANGE) _r TYPE(This Type): I TYPE(This Type)-l ] YesYe:; r TYPE(This Type)+l No Figure ll(b). Flowchart forRE_RDR. 7.3-29 (3/I/71)\nNASTRAN SUPPORT PROGRAMS No IMoveDeckBackIIntoOpenCore Block 1 Figure ll(c). Flowchart forREORDR. 7.3-30 (3/I/71)\nTHESOURCE CONVERSION PROGRAM (SCP) Move Card Intothe Output Deck CoreSpace INo (Return)NSRETN ,lInitialize Pointers ForOutput Deck CoreSpace and Input DeckCore Position. Position to( NextCard N°_e s N_Yes Figure 12(a). Flowchart forNSRETN. 7.3-31 (3/1/71)\nNASTRAN SUPPORT PROGRAMS es IN° YPosition to Statement Contained ontheLogical IF Figure 12(b). Flowchart forNSRETN. 7.3-32 (3/I/71)\nTHESOURCECONVERSION PROGRAM(SCP) No COUNT theNumber 1 of*’s 1Convert SUBROUTINE Statement While Moving ittotheOutput Deck Core Space. Figure 12(c). Flowchart forNSRETN. 7.3-33 (3/I/71)\nNASTRAN SUPPORT PROGRAMS it is Moved to the Output Deck Core Convert RETURNi to RETURN RETURNi as it is Moved to Output Deck Core Space. Figure 12(d). Flowchart for NSRETN."},"title":"Programmer's Manual P108"},"/docs/summary/":{"data":{"":"This documents of Nastran 95 include:\nNASTRAN Programmers Manual NASTRAN Users Manual 2 The Python scripts to convert the manuals into markdown files can be found in the following zip file:\npdfs_processing_scripts.zip "},"title":"A Summary"},"/docs/users/":{"data":{"":"NASASP-222(08) VOLUME II NASTRAN@ USER’S MANUAL JUNE 1986 runm\nNASASP-222(08) Volume 11 NASTRAN USER’S MANUAL June1986\nForsalefromComputer Software Management andInformation Center(COSMIC) Computer Services Annex,University ofGeorgia, Athens, Georgia 30602 ‘ ●\nCOSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602 (404) 542-3265 NASTWN USER MANUAL UPDATE NOTE TheNASTRAN User Manual isscheduled forreview each year todetermine whether updates are required. Toaddyour name tothedatabase to receive notification when updates areavailable, youwill need tocomplete this form andreturn to COSMIC .This will betheonly mailing list for keeping users informed about themanual updates. Your Name: Company: Mailing Address: City: State: Zip: June, 1986 Fold, staple, and return this form asaself-mailer.\nII BUSINESS REPLYMAIL 1FIRSTCLASS PERMITNO,559 ATHENS, CiEORGIA I F’OSTAGE WILLBEPAIDBYADDRESSES COSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602NOPOSTAGE NECESSARY IFMAILED INTHE UNITEDSTATES\nINTRODUCTION TheUser’sManualisoneoffourmanuals thatconstitute thedocumentation forNASTRAN, the otherthreebeingtheTheoretical Manual, theProgrammer’s ManualandtheDemonstration Problem Manual.Although theUser’sManualcontains alloftheinformation thatisdirectly associated withthesolution ofproblems withNASTRAN, theuserwillfinditdesirable torefertotheother manuals forassistance inthesolution ofspecific userproblems. TheTheoretical Manualgivesanexcellent introduction toNASTRAN andpresents developments of theanalytical andnumerical procedures thatunderlie theprogram. TheUser’sManual is instructive andencyclopedic innature, butisrestricted tothoseitemsrelated totheuseof NASTRAN thataregenerally independent ofthecomputing systembeingused.Computer-dependent topicsandinformation thatisrequired forthemaintenance andmodification oftheprogram are treated intheProgrammer’s Manual. TheProgrammer’s Manualalsoprovides acomplete description oftheprogram, including themathematical equations implemented inthecode.TheDemonstration Problem Manualpresents adiscussion ofthesampleproblems delivered w!thNASTRAN, thereby illustrating theformulation ofthedifferent typesofprob’!ems thatcanbsolvedwithNASH?PN. Inaddition tothefourmanual described above,thereisalsoaNASTRAN User’sGuidethat servesasahandbook forusers. Itdescribes alloftheNASTRAN features andoptions and illustrates thembyexamples. Otherexcellent sources forNASTRAN-related topicsarethe proceedings oftheNASTRAN Users’Colloquia (heldnormally everyyear)whichprovide alargebody ofinformation basedonuserexperiences withNASTRAN. TheUser’sManualhasrecently beencompletely revised andupdated. Withaviewtofacilitate easierupdating ofthemanualinthefuturetokeepupwithnewerreleases ofNASTRAN, ithasnow beendivided intotwovolumes. VolumeIconsists ofsevensections dIldcontains allofthematerial thatwasintheold singlevolume, exceptSection 3.Thissection hasbeenre-arranged intofoursections andforms VolumeII.Inordertoavoidconfusion, Section 3ofVolumeIdoesnotcontain anything otherthan areference tothenewVolumeII.Also,itshouldbenotedherethat,unlessexplicitly indicated otherwise, allreferences tosections ineachvolumereferonl ——..—.—-—.. —….—.–………——..ytosections inthatvolume,—.——.—— —— ..——. . NASTRAN usesthefiniteelement approach tostructural modeling, wherein thedistributed physical properties ofastructure arerepresented byafinitenumberofstructural elements which areinterconnected atafinitenumberofgridpoints, towhichloadsareapplied andforwhich displacements are’calculated. Theprocedures fordefining andloading astructural modelare i(05/30/86)\ndescribed inVolumeI,Section 1.Thissection contains afunctional reference foreverycardthat isusedforstructural modeling. TheNASTRAN DataDeck,including thedetails foreachofthedatacards,isdescribed in VolumeI,Section 2.Thissection alsodiscusses theNASTRAN control cardsthatareassociated withtheuseoftheprogram. Asmentioned earlier, VolumeI,Section 3doesnotcontain anything otherthanareference to VolumeII. Theprocedures forusingtheNASTRAN plotting capability aredescribed inVolumeI,Section 4. Bothdeformed andundeformed plotsofthestructural modelareavailable. Response curvesarealso available forstatic, transient response, frequency response, modalflutter andmodalaeroelastic response analyses. NASTRAN contains problem solution sequences, calledrigidformats, Eachoftheserigid formats isassociated withthesolution ofproblems foraparticular typeofstaticordynamic analysis. inaddition totherigidformatprocedures, theusermaychoosetowritehisownDirect Abstraction Program (DMAP), Thisprocedure permits theusertoexecute aseriesofmatrix operations ofhischoicealongwithanyutility modules orexecutive operations thathemayneed. Therulesgoverning thecreation ofDMAPprograms aredescribed inVolumeI,Section 5. TheNASTRAN diagnostic messages aredocumented andexplained inVolumeI,Section 6.The NASTRAN Dictionary, inVolumeI,Section 7,contains descriptions ofmnemonics, acronyms, phrases, andothercommonly usedNASTRAN terms. VolumeII,Section 1contains ageneral description ofrigidformatprocedures. Specific instructions andinformation fortheuseofeachrigidformataregiveninVolumeII,Sections 2,3 and4,whichdealwiththerigidformats associated withtheDISPLACEMENT, HEATandAERO approaches, respectively. Thereisalimited numberofsampleproblems included intheUser’sManual. However, amore comprehensive setofdemonstration problems, atleastoneforeachoftherigidformats, is described intheNASTRAN Demonstration Problem Manual, Thedatadecksareavailable ontapefor eachofthecomputer systems onwhichNASTRAN hasbeenimplemented. Samples oftheprinter output andofstructure plotsandresponse plotscanbeobtained byexecuting thesedemonstration problems. Theprinter outputfortheseproblems isalsoavailable onmicrofiche. ii(05/30/86)Matrix @ I"},"title":"User's Manual"},"/docs/users/users_manual_001/":{"data":{"":"NASASP-222(08) VOLUME II NASTRAN@ USER’S MANUAL JUNE 1986 runm\nNASASP-222(08) Volume 11 NASTRAN USER’S MANUAL June1986\nForsalefromComputer Software Management andInformation Center(COSMIC) Computer Services Annex,University ofGeorgia, Athens, Georgia 30602 ‘ ●\nCOSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602 (404) 542-3265 NASTWN USER MANUAL UPDATE NOTE TheNASTRAN User Manual isscheduled forreview each year todetermine whether updates are required. Toaddyour name tothedatabase to receive notification when updates areavailable, youwill need tocomplete this form andreturn to COSMIC .This will betheonly mailing list for keeping users informed about themanual updates. Your Name: Company: Mailing Address: City: State: Zip: June, 1986 Fold, staple, and return this form asaself-mailer.\nII BUSINESS REPLYMAIL 1FIRSTCLASS PERMITNO,559 ATHENS, CiEORGIA I F’OSTAGE WILLBEPAIDBYADDRESSES COSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602NOPOSTAGE NECESSARY IFMAILED INTHE UNITEDSTATES\nINTRODUCTION TheUser’sManualisoneoffourmanuals thatconstitute thedocumentation forNASTRAN, the otherthreebeingtheTheoretical Manual, theProgrammer’s ManualandtheDemonstration Problem Manual.Although theUser’sManualcontains alloftheinformation thatisdirectly associated withthesolution ofproblems withNASTRAN, theuserwillfinditdesirable torefertotheother manuals forassistance inthesolution ofspecific userproblems. TheTheoretical Manualgivesanexcellent introduction toNASTRAN andpresents developments of theanalytical andnumerical procedures thatunderlie theprogram. TheUser’sManual is instructive andencyclopedic innature, butisrestricted tothoseitemsrelated totheuseof NASTRAN thataregenerally independent ofthecomputing systembeingused.Computer-dependent topicsandinformation thatisrequired forthemaintenance andmodification oftheprogram are treated intheProgrammer’s Manual. TheProgrammer’s Manualalsoprovides acomplete description oftheprogram, including themathematical equations implemented inthecode.TheDemonstration Problem Manualpresents adiscussion ofthesampleproblems delivered w!thNASTRAN, thereby illustrating theformulation ofthedifferent typesofprob’!ems thatcanbsolvedwithNASH?PN. Inaddition tothefourmanual described above,thereisalsoaNASTRAN User’sGuidethat servesasahandbook forusers. Itdescribes alloftheNASTRAN features andoptions and illustrates thembyexamples. Otherexcellent sources forNASTRAN-related topicsarethe proceedings oftheNASTRAN Users’Colloquia (heldnormally everyyear)whichprovide alargebody ofinformation basedonuserexperiences withNASTRAN. TheUser’sManualhasrecently beencompletely revised andupdated. Withaviewtofacilitate easierupdating ofthemanualinthefuturetokeepupwithnewerreleases ofNASTRAN, ithasnow beendivided intotwovolumes. VolumeIconsists ofsevensections dIldcontains allofthematerial thatwasintheold singlevolume, exceptSection 3.Thissection hasbeenre-arranged intofoursections andforms VolumeII.Inordertoavoidconfusion, Section 3ofVolumeIdoesnotcontain anything otherthan areference tothenewVolumeII.Also,itshouldbenotedherethat,unlessexplicitly indicated otherwise, allreferences tosections ineachvolumereferonl ——..—.—-—.. —….—.–………——..ytosections inthatvolume,—.——.—— —— ..——. . NASTRAN usesthefiniteelement approach tostructural modeling, wherein thedistributed physical properties ofastructure arerepresented byafinitenumberofstructural elements which areinterconnected atafinitenumberofgridpoints, towhichloadsareapplied andforwhich displacements are’calculated. Theprocedures fordefining andloading astructural modelare i(05/30/86)\ndescribed inVolumeI,Section 1.Thissection contains afunctional reference foreverycardthat isusedforstructural modeling. TheNASTRAN DataDeck,including thedetails foreachofthedatacards,isdescribed in VolumeI,Section 2.Thissection alsodiscusses theNASTRAN control cardsthatareassociated withtheuseoftheprogram. Asmentioned earlier, VolumeI,Section 3doesnotcontain anything otherthanareference to VolumeII. Theprocedures forusingtheNASTRAN plotting capability aredescribed inVolumeI,Section 4. Bothdeformed andundeformed plotsofthestructural modelareavailable. Response curvesarealso available forstatic, transient response, frequency response, modalflutter andmodalaeroelastic response analyses. NASTRAN contains problem solution sequences, calledrigidformats, Eachoftheserigid formats isassociated withthesolution ofproblems foraparticular typeofstaticordynamic analysis. inaddition totherigidformatprocedures, theusermaychoosetowritehisownDirect Abstraction Program (DMAP), Thisprocedure permits theusertoexecute aseriesofmatrix operations ofhischoicealongwithanyutility modules orexecutive operations thathemayneed. Therulesgoverning thecreation ofDMAPprograms aredescribed inVolumeI,Section 5. TheNASTRAN diagnostic messages aredocumented andexplained inVolumeI,Section 6.The NASTRAN Dictionary, inVolumeI,Section 7,contains descriptions ofmnemonics, acronyms, phrases, andothercommonly usedNASTRAN terms. VolumeII,Section 1contains ageneral description ofrigidformatprocedures. Specific instructions andinformation fortheuseofeachrigidformataregiveninVolumeII,Sections 2,3 and4,whichdealwiththerigidformats associated withtheDISPLACEMENT, HEATandAERO approaches, respectively. Thereisalimited numberofsampleproblems included intheUser’sManual. However, amore comprehensive setofdemonstration problems, atleastoneforeachoftherigidformats, is described intheNASTRAN Demonstration Problem Manual, Thedatadecksareavailable ontapefor eachofthecomputer systems onwhichNASTRAN hasbeenimplemented. Samples oftheprinter output andofstructure plotsandresponse plotscanbeobtained byexecuting thesedemonstration problems. Theprinter outputfortheseproblems isalsoavailable onmicrofiche. ii(05/30/86)Matrix @ I\nTABLEOFCONTENTS Section PageNo. 1.RIGIDFORMATS 1.1GENERAL DESCRIPTION OFRIGIDFORMATS ………………………………….1.1-1 1.1.1 InputFileProcessor …………………………………………1.1-2 1.1,2 Functional Modules andSupporting DMAPOperations ……………….1.1-4 1.1.3 Checkpoint/Restart Procedures …………………………………1.1-5 1.1.4 TypesofRestarts ……………………………………………1.1-7 1.1.4.1 Unmodified Restart …………………………………..1.1-8 1.1.4.2 Modified Restart …………………………………….1.1-8 1.1.4,3 Modified Restart withRigidFormatSwitch………………1.1-10 1.1.5 UseofDMAPALTERs inRestarts ………………………………..1.1-10 1.1.6 RigidFormatOutput………………………………………….1.1-11 1.1.7 RigidFormatDataBase……………………………………….1.1-13 1.1.7.1 DesignoftheDataBase………………………………1.1-13 1.1.7.2 Implementation oftheDataBase…….,.’……………….1.1-17 1.1.7,3 UsageoftheDataBase……………………………….1.1-17 1.1.7.4 Development ofUserRigidFormats ……………………..1.1-18 1.1.7.5 UsageofUser-Developed RigidFormats ………………….1.1-20 2.DISPLACEMENT RIGIDFORMATS 2.1STATICANALYSIS …………..0…………,……………………………2.1-1 2.1.1 2.1.2 2.1.3 2.1.4 2.1,5 2.1.6 2.1.7 2.2STATIC 2.2.1 2.2.2 2.2.3 2.2.4DMAPSequence forStaticAnalysis ……………………………..2.1-1 Description ofImportant DMAPOperations forStaticAnalysis ……..2.1-9 OutputforStaticAnalysis ……………………………………2.1-16 CaseControl DeckforStaticAnalysis ………………………….2.1-16 Parameters forStaticAnalysis ……………..4………………..2.1-16 Automatic AI.TERsforAutomated Multi-stage Substructuring ………..2.1-19 RigidFormatErrorMessages fromStaticAnalysis ………………..2.1-19 ANALYSIS WITHINERTIA RELIEF…………………..0….0…………2.2-1 DMAPSequence forStaticAnalysis withInertia Relief……………2.2-1 Description ofImportant DMAPOperations forStaticAnalysis withInertia Relief……………,….,,.,…………………….2.2-6 OutputforStaticAnalysis withInertia Relief………………….2.2-11 CaseControl DeckforStaticAnalysis withInertia Relief………..2.2-11 iii(05/30/86)\nTABLEOFCONTENTS (Continued) Section PageNo. 2.2.5 Parameters forStaticAnalysis withInertia Relief……,………..2.2-11 2.2.6 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.2-13 2.2.7 RigidFormatErrorMessages fromStaticAnalysis withInertia Relief…………………………………..,…….2.2-13 2.3NORMALMODESANALYSIS ……………………………………………….2.3-1 2.3.1 2.3.2 2.3.3 2.3.4 2.3.5 2,3.6 2.3.7 2.3.8 2.3.9DMAPSequence forNormalModesAnalysis ………………………..2.3-1 Description ofImportant DMAPOperations forNormalModesAnalysis ..2.3-6 OutputforNormalModesAnalysis …………,………………….O2.3-11 CaseControl DeckforNormalModesAnalysis ……,………………2.3-13 Parameters forNormalModesAnalysis …………….,………,…,,2.3-14 Optional Diagnostic OutputforFEER…….,,…..,………………2.3-15 TheAPPENDFeature ……………………………………..,…..2,3-17 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.3-18 RigidFormatErrorPles$ages fromNormalModesAnalysis …………..2.3-18 2.4STATICANALYSIS WITFIDIFFERENTIAL STIFFNESS .0………..,……………….2.4-1 2.4.1 DMAPSequence forStaticAnalysis with Differential Stiffness …………………………….. 2.4.2 Description ofImportant DMAPOperations forStaticAnalys withDifferential Stiffness …………0..,.,………… 2.4.3 OutputforStaticAnalysis withDifferential Stiffness … 2.4.4 CaseControl DeckforStaticAnalysis withDifferential St” 2.4.5 Parameters forStaticAnalysis withDifferential Stiffness 2.4.6 RigidFormatErrorMessaaes fromStaticAnalysis with……….2.4-1 s ……….2.4-9 ..,…….2.4-17 ffness….2.4-18 ……….2.4-18 Differential Stiffness -……………………………………….2.4-19 2.5BUCKLING ANALYSIS .,………,……………….,………………………2.5-1 2.5.1 DMAPSequence forBuckling Analysis ……………………………2.5-1 2.5.2 Description ofImportant DMAPOperations forBuckling Analysis ……2.5-7 2.5.3 OutputforBuckling Analysis …………….,….0……………,..2.5-13 2.5.4 CaseControl DeckforBuckling Analysis ………………………..2.5-13 2.5.5 Parameters forBuckling Analysis ………………….0…………,2.5-14 2.5.6 Optional Diagnostic OutputforFEER……………………,…,..,.2.5-14 2.5.7 RigidFormatErrorMessages fromBuckling Analysis ………,……..2.5-15 2.6PIECEWISE LINEARSTATICANALYSIS ………..,…………………………..2.6-1 2.6.1 DMAPSequence forPiecewise LinearStaticAnalysis ………………2.6-1 iv(05/30/86)\nTABLEOFCONTENTS (Continued Section ● 2.7 2.8 2.9PageNo. 2.6.2 Description ofImportant DMAPOperations forPiecewise Linear StaticAnalysis ,………….,…0………,…..0….,………….2.6-7 2.6.3 OutputforPiecewise LinearStaticAnalysis …………………….2.6-13 ?.6.4 CaseControl DeckforPiecewise LinearStaticAnalysis …………..2.6-13 2.6.5 Parameters forPiecewise LinearStaticAnalysis …………………2.6-13 2.6.6 RigidFormatErrorMessages fromPiecewise LinearStaticAnalysis …2.6-14 DIRECTCOMPLEX EIGENVALUE ANALYSIS .,………………………………….2.7-1 2.7.: DMAPSequence forDirectComplex Eigenv.1 ?,7.2 Description ofImportant DMAPOperations Eigenvalue Analysis ….,….,………. 2.7.3 output forDirectComplex Eigenvalue ha’reanalysis …………….2.7-I forDirectComplex ……………………….2.7-7 ysis,.,.,..,……….,.,..2.7-13 2,7.4 CaseContro”l DeckforDirectComplex Eigenvalue Analysis …………2.7-15 2.7.5 Parameters forDirectComplex Eigenvalu: Al:alysis ……………….?.7-1.6 2.7.6 RigidFormatErrorMessages frpm!irectComplex EigenYalue Analysis .?.7-17 DIRECTFREQUENCY ANDRANDOMRESpNSE……………………….!……….2.8-1 2.8.1 DMAPSequence forDirectFrequency andRandomResponse ?.G-l ………….. 2.8.2 Description ofImportant DMAPOperations forDirectFrequency and RandomResponse ……….,………………..-………………..2.8-9 2.8.3 OutputforDirect,Frequency andRandomResponse …………………2.8-16 2.8.4 CaseContro”l Deck,forDirectFrequency andRandomResponse ……….2.8-16 2.8.5 Parameters forDirectFrequency andRandomResponse ……………..2.8-17 2.8.6 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.8-18 2.8.7 RigidFormatErrorMessages fromDirectFrequency andRandomResponse …………………………0………….,….2.8-18 DIRECTTRANSIENT RESPONSE …….,…………………………………….2.9-1 2.9.1 2.9.2 2.9.3 2.9.4 2.9.5 2.9.6 2.9.7 2.9,8DMAPSequence forDirectTransient Response …………………….2.9-1 Description ofImportant DMAPOperations forDirect Transient Response …………………………o….o……..””. 2“9-8 OutputforDirectTransient Response …………………………..2,9-15 CaseControl DeckforDirectTransient Response ……………….“.2.9-:.5 Parameters forDirectTransient Response ……………………….2.9-16 TheCONTINUE Feature ……..0..,…..,………,………………..2.9-17 Automatic ALTERsforAutomated Multi-staSe Substructuring ………..2.9-18 RigidFormatErrorMessages fromDirect V(05/30/86)Transient Response ……….2.9-18\nTABLEOFCONTENTS (Continued) ..\u003eecrlon~ 2.10MODALCOMPLEX EIGENVALUE ANALYSIS …………………………………….2.10-1 2.10.1 2.10.2 2.10.3 2.10.4 2.10.5 2.10.6 2.10.7 2.10.8DMAPSequence forModalComplex Eigenvalue Analysis ……………..2.10-1 Description ofImportant DMAPOperations forModalComplex Eigenvalue Analysis ………..,……………………….,……..2.10-7 OutputforModalComplex Eigenvalue Analysis ……………,……..2.10-13 CaseControl DeckforModalComplex Eigenvalue Analysis ………,…2.10-13 Parameters forModalComplex Eigenvalue Analysis ………………..2,10-13 Optional Diagnostic OutputforFEER……,……..,..,.,…………2.10-14 TheAPPENDFeature ……………..0………………,…………,2.10-15 RigidFormatErrorMessages fromModalComplex Eigenvalue Analysis ,.2.10-15 2.11MODALFREQUENCY ANDRANDOMRESPONSE ……………….,“.e….,……….,..2.11-1 2.11.1 2.11.2 2.11.3 2.11.4 2.11.5 2.11.6 2.11.7 2.11.8DMAPSequence forModalFrequency andRandomResponse ……………2.11-1 Description ofImportant DMAPOperations forModalFrequency and RandomResponse …..,,…………,.,……………..,.,,…….,..2.11-9 OutputforModalFrequency andRandomResponse ………..,……….2.11-17 CaseControl DeckforModalFrequency andRandomResponse ………..2.11-17 Parameters forModalFrequency andRandomResponse ……..,….,….2,11-17 Optional Diagnostic OutputforFEER……….,.,….,….,……….2,11-18 TheAPPENDFeature …………………….,…….,…….,,…..,.2.11-19 RigidFormatErrorMessages fromModalFrequency andRandomResponse …,.,,………….,…………………,…..,2.11-19 2.12MODALTRANSIENT RESPONSE …………………0..,…….,.,…,.,,..,,….,.2,12-1 2.12.1 2.12,2 2.12.3 2.12.4 2.12.5 2.12.6 2.12.7 2.12.8 2.12.9DMAPSequence forModalTransient Response …………,…..,.,..,..2.12-1 Description ofImportant DMAPOperations forModal Transient Response ……………….,….,…,…..,……………2.12-8 OutputforModalTransient Response ………..,,…,……,.,…..,,2.12-15 CaseControl DeckforModalTransient Response ……,……,……,.2.12-15 Parameters forModalTransient Response …..,………….,…..,…2,12-15 Optional Diagnostic OutputforFEER……,….,,..,…,,…,……..2,12’-17 TheAPPENDFeature ..,…………….,…….,…..,…..,……….2.12-17 TheCONTINUE Feature ….,………………….,……,..,……,,..2,12-17 RigidFormatErrorMessages fromModalTransient Response ………..?!.12-1.7 2.13NORMALMODESWITHDIFFERENTIAL STIFFNESS ., 2.13.1 DMAPSequence forNormalModeswith vi(05/30/86)?,~~-1…………………,.,,,……\u003e Differential Stiffue$s ..,,..,.“~,13-!I\nTABLEOFCONTENTS (Continued) Section 2.13.2 2,13.3 2.13.4 2.13.5 2.13.6 2.13.7 2.1.3 2.14STAT 2.14c 1 2.14.2 2.14.3 2.14.4 2.14,5 2.14.6PageNo. Description ofImportant DMAPOperations forNormalModeswith Differential Stiffness …………,………….0……………….2.13-8 OutputforNormalModeswithDifferential Stiffness ……………..2.13-16 CaseControl DeckforNormalModeswithDifferential Stiffness ……2.13-16 Parameters forNormalModeswithDifferential Stiffness ………….2.13-17 Optional Diagnostic OutputforFEER……………………………2.13-18 TheAPPENDFeature ………………….,……………………..c2.13-18 RigidFormatErrorMessages fromNormalModeswith Differential Stiffness ……………………………………….2.13-18 ANALYSIS USINGCYCLICSYMMETRY …………..,……………………2.14-1 DMAPSequence forStaticAnalysis UsingCyclicSymmetry ………….2.14-1 Description ofImportant DMAPOperations forStaticAnalysis Using CyclicSymmetry ,…….0……………….,……………………2.14-7 OutputforStaticAnalysis UsingCyclicSymmetry ……,………….2.14-12 CaseControl DeckforStaticAnalysis UsingCyclic’Symmetry ………2.14-12 Parameters forStaticAnalysis UsingCyclicSymmetry …………….2.14-12 RigidFormatErrorMessages fromStaticAnalysis Using CyiilicSymmetry ……………………………………+……….2.14-14 2.15NORMALMODESANALYSIS USINGCYCLICSYMMETRY ……………………………2.15-1 2.15.1 2.15.2 2.15.3 2.15.4 2.15.5 2.15.6 2.15.7 2.15.8DMAPSequence forNormalModesAnalysis UsingCyclicSymmetry …….2.15-1 Description ofImportant DMAPOperations forNormalModesAnalysis UsingCyclicSymmetry ……………,………………………….2.15-6 OutputforNormalModesAnalysis UsingCyclicSymmetry …………..2.15-10 CaseControl DeckforNormalModesAnalysis UsingCyclicSymnetry …2.15-10 Parameters forNormalModesAnalysis UsingCyclicSymmetry ……….2.15-10 Optional Diagnostic OutputforFEER……………………………2.15-12 TheAPPENDFeature …..0…. ……0……………………………2.15-12 RigidFormatErrorMessages fromNormalModesAnalysis Using —.- CyclicSymmetry .,……………..0………0…………………..Z.15-lZ ?.1.6(STATIC AEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS ……….2.16-1 ‘2.16.1 ?,16.2 2.16.3DMAPSequence forStaticAerothermoelastic Design/Analysis of Axial-Flow Compressors o………………………………………2.16-1 Description ofImportant DMAPOperations forStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors ………2.16-10 OutputforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors …………………………………………………2.16-19 vii(05/30/86)\nTABLEOFCONTENTS (Continued) Section 2.16.4 2.16.5 2.16.6PageNo, CaseControl DeckforStaticAerothem,~elastic Design/Analysis of Axial-Flow Compressors ……………………………………….2.16-20 Parameters forStaticAerothermoelastic Design/Analysis ofAxial- FlowCompressors ……,………………#……………………..2.16-20 RigidFormatErrorMessages fromStaticAerothermoelastic Design/ Analysis ofAxial-Flow Compressors …,…………………………2.16-22 3.HEATRIGIDFORMATS 3.1STATICHEATTRANSFER ANALYSIS …,..,……………….,………………..3.1-1 3.1,1 3.1.2 3.1.3 3.1.4 3.1.5 3.1.6DMAPSequence forStaticHeatTransfer Analysis …………………3.I-1 Description ofImportant DMAPOperations forStaticHeat Transfer Analysis ……………………………..,……………3.1-6 OutputforStaticHeatTransfer Analysis ………………….,…,.3.1-11 CaseControl DeckforStaticHeatTransfer Analysis ….. Parameters forStaticHeatTransfer Analysis ,…..,0…. RigidFormatErrorMessages fromStaticHeatTransfer Aria’ 3,2NONLINEAR STATICHEATTRANSFER ANALYSIS ….,.,…..,……………………3.1-11 ………..3.1-11 ysis……3.1-12 ………..3.2-1 3.2.1 DMAPSequence forNonlinear StaticHeatTransfer Analysis ………..3.2-1 3.2.2 Description ofImportant DMAPOperations forNonlinear StaticHeat Transfer Analysis ………..,…………,……………………..3.2-5 3.2.3 OutputforNonlinear StaticHeatTransfer Analysis ………………3.2-8 3.2.4 CaseControl DeckforNonlinear StaticHeatTransfer Analysis …….3.2-8 3.2.5 Parameters forNonlinear StaticHiatTransfer Analysis …………..3.2-8 3.2.6 RigidFormatErrorMessages fromNonlinear StaticHeat Transfer Analysis ……………………….,..,…………….,..3.2-9 3.3TRANSIENT HEATTRANSFER ANALYSIS ……………………………………..3,3-1 3.3.1 DMAPSequence forTransient HeatTransfer Analysis ………………3.3-1 3.3.2 Description ofImportant DMAPOperations forTransient HeatTransfer Analysis ………,……………,……………….,……..,,..,.3.3-7 3,3.3 OutputforTransient HeatTransfer Analysis …………………….3.3-13 3.3.4 CaseControl DeckforTransient HeatTransfer Analysis …………..3.3-13 3.3.5 Parameters forTransient HeatTransfer 3.3.6 RigidFormatErrorMessages fromTrans 4.AERORIGIDFORMATS 4,1BLADECYCLICMODALFLUTTER ANALYSIS ……….Analysis …………………3.3-14 entHeatTransfer Analysis …3,3-14 …………………………4.1-1 4.1.1 DMAPSequence forBladeCyclicModalFlutter Analysis ……………4.1-1 viii(05/30/86)\nSection 4.1.2 4.1.3 4.1.4 4.1.5 4.1.6 4.1.7 4.1.8TABLEOFCONTENTS (Continued) PageNo. Description ofImportant DMAPOperations forBladeCyclicModal Flutter Analysis …………………………………………….4.1-9 OutputforBladeCyclicModalFlutter Analysis ………………….4.1-17 CaseControl DeckforBladeCyclicModalFlutter Analysis ………..4.1-17 Parameters forBladeCyclicModalFlutter Analysis ………………4.1-18 Optional Diagnostic OutputforFEER……………………………4.1-20 TheAPPENDFeature ………….,………………………………4.1-20 RigidFormatErrorMessages fromBladeCyclicModalFlutter—- Analysis …………….0…………………………………….4.1-ZU 4.2MODALFLUTTER ANALYSIS ………………………………………………4.2-1 4.2.1 4.2.2 4.2.3 4.2.4 4.2.5 4.2.6 4.2.7DMAPSequence forModalFlutter Analysis ……………………….4.2-1 Description ofImportant DMAPOperations forModalFlutter Analysis .4.2-8 OutputforModalFlutter Analysis ……………………………..4.2-16 CaseControl DeckforModalFlutter Analysis ……………………4.2-17 Parameters forModalFlutter Analysis ………………………….4.2-17 Optional Diagnostic OutputforFEER……………………………4.2-18 TheAPPENDFeature …………………………………………..4.2-18 4.2.8 RigidFormatErrorMessages fromModalFlutter Analysis ………….4.2-18 4.3MODALAEROELASTIC RESPONSE ……………….:…………………………4.3-1 4.3.1 DMAPSequence forModalAeroelastic Response ……………………4.3-1 4.3.2 Description ofImportant DMAPOperations forModalAeroelastic Response ……………………………………………………4.3-8 4.3.3 OutputforModalAeroelastic Response ………………………….4.3-16 4.3.4 CaseControl DeckforModalAeroelastic Response ………………..4.3-17 4.3.5 Parameters forModalAeroelastic Response ………………………4.3-17 4.3.6 Optional Diagnostic OutputforFEER……………………………4.3-19 4.3.7 TheAPPENDFeature …………………………………………..4.3-19 4.3.8 RigidFormatErrorMessages fromModalAeroelastic Response ………4.3-19 ix(05/30/86)\n1.RIGIDFORMATS 1.1GENERAL DESCRIPTION OFRIGIDFORMATS Themostgeneral wayofusingNASTRAN iswithauser-written DirectMatrixAbstraction Program (DMAP). Thisprocedure permits theusertoexecute aseriesofmatrixoperations ofhis choicealongwithanyutility modules orexecutive operations thathemayneed.Theusermayeven choosetowriteamoduleofhisown.Therulesgoverning alloftheseoperations aredescribed in VolumeI,Section 5. Inordertorelieve theuserofthenecessity ofconstructing aDMAPsequence foreachofhis problems, anumberofsuchsequences, calledrigidformats, havebeenincluded withNASTRAN, All oftheserigidformats areresident onadatabasecalledtheRigidFormatDataBase,whfchis described indetailinSection 1.1.7. Eachrigidformatinthisdatabaseconsists ofaDMAP sequence andtheassociated restart tables. Theserestart tablesareautomatically usedbythe program tomodifytheseriesofDMAPoperations toaccount foranychanges thataremadeinany partoftheDataDeckwhenmakingarestart, afterhavingpreviously runall,orapart,ofthe problem. Without suchtables, theuserwouldhavetocarefully modifyhisDMAPsequence toaccount fortheconditions surrounding eachrestart. Thechances forerrorinmakingthesemodifications forrestart areverygreat. Therestart tablesnotonlyrelieve theuseroftheburdenof modifying hisDMAPsequence, butalsoassurehimofacorrect andefficient program execution. Inaddition totheDkiAPsequence provided witheachrigidformat, anumberofoptions are available, whicharesubsets ofeachcomplete DMAPsequence. Subsets areselected byspecifying thesubsetnumbers (zeroforthecomplete DMAPsequence) alongwiththerigidformatnumberonthe SOLcardintheExecutive Control Deck.Seethedescription oftheSOLcardinVolumeI,Section 2.2forthelistofavailable subsets. IftheuserwishestomodifytheDMAPsequence ofarigidformatinsomemannernotprovided forintheavailable subsets, hecanusetheALTERfeature described inSection 2.2.Typical uses aretoschedule anEXITpriortocompletion, inordertocheckintermediate output, schedule the printing ofatableoramatrixfordiagnostic purposes, andtodeleteoraddafunctional module totheDMAPsequence. (ThemannerinwhichDMAPALTERsarehandled inrestarts isdiscussed in Section 1.1.5.) Theusershouldbefamilfar withtherulesforDMAPprograming, asdescribed in VolumeI,Section 5,priortomakingALTERstoarigidformat. Thefollowing rigidformats forstructural analysis arecurrently included inNASTRAN: 1.StaticAnalysis 1.1-1(05/30/86)\nRIGIDFORMATS 2.StaticAnalysis withInertia Relief 3.NormalModesAnalysis 4.StaticAnalysis withDifferential Stiffness 5.Buckling Analysis 6.Piecewise LinearStaticAnalysis 7.DirectComplex Eigenvalue Analysis 8.DirectFrequency andRandomResponse 9.DirectTransient Response 10.ModalComplex Eigenvalue Analysis 11.ModalFrequency andRandomResponse 12.ModalTransient Response 13.NormalModesAnalysis withDifferential Stiffness 14.StaticAnalysis withCyclicSynnnetry 15.NormalModesAnalysis with’CyclicSymmetry 16.StaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing rigidformats forheattransfer analysis areincluded inNASTRAN: 1.LinearStaticHeatTransfer Analysis 3.Nonlinear StaticHeatTransfer Analysis 9.Transient HeatTransfer Analysis Thefollowing rigidformats foraeroelastic analysis areincluded inNASTRAN: 9.BladeCyclicModalFlutter Analysis 10.ModalFlutter Analysis 11.ModalAeroelastic Response 1.1.1InputFileProcessor TheInputFileProcessor operates inthePreface priortotheexecution oftheDMAP operations intherigidformat. Acomplete description oftheoperations inthePreface isgiven intheProgrammer’s Manual. Themaininterest hereistoindicate thesourceofdatablocksthat arecreated inthePreface andhenceappearonlyasinputsintheDMAPsequences oftherigid formats. Noneofthedatablockscreated bytheInputFileProcessor arecheckpointed, astheyare alwaysregenerated onrestart. TheInputFileProcessor isdivided intofiveparts, Thefirst part(IFP1)processes theCaseControl Deck,thesecondpart(IFP)processes theBulkDataDeck, 1.1-2(05/30/86)I\nGENERAL DESCRIPTION OF thethirdpart(IFP3)performs additional processingRIGIDFORMATS ofthebulkdatacardsassociated withthe aconical shellelement, andthefourthpart(IFP4)performs additional processing ofthebulkdata cardsassociated withthefluidelement. Thefifthsection (IFP5)processes datarelated to acoustic cavityanalysis. IFP1processes theCaseControl Deckandcreates theCaseControl DataBlock(CASECC), the PlotControl Dat~Block(PCDB), andtheXY-Plot Control DataBlock(XYCDB). IFP1alsoexamines all ofthecards,exceptthoseassociated withplotting, forerrorsinformatoruse.Iferrorsare detected, theyareclassed aseitherfatalorwarning, andsuitable errormessages areprovided. Reference toVolumeI,Section 2.3willassisttheuserincorrecting errorsintheCaseControl Deck.Iftheerrorisfatal,theExecutive Systemwillnotallowtheexecution tocontinue beyond thecompletion ofthePreface. TheBulkDataDeckissortedinthePreface, ifnecessary, beforetheexecution ofthesecond partoftheInputFileProcessor. IFPchecksallofthebulkdatacardsforerrorsaccording to therulesgivenforeachcardinVolum(iI,Section 2.4.Iferrorsaredetected, suitable messages areprovided totheuser.Iftheerlorisclassed asfatal,theExecutive Systemwillnotallow theexecution tocontinue beyondthecompletion ofthePreface. IFPcreates thedatablocksthat areinputtothevarious partoftheGeometry Processor (GEOMl, GE!3M2,GE@M3andGE@M4), the oElement Properties Table(EP?’),theMaterial Properties Table(MPT),theElement Deformation Table (EDT),andtheDirectInputTable(DIT). ThethirdpartoftheInputFileProcessor (IFP3)converts theinformation onthespecial conical shellcards(CCONEAX, CTRAPAX, CTRIAAX, F!3RCEAX, M!3MAX,MPCAX,OMITAX, PCONEAX, P@INTAX, PRESAX, PTRAPAX, PTRIAAX, RINGAX, SECTAX, SPCAX,SUPAX,andTEMPAX) toreflect thenumberof harmonics specified bytheuserontheAXICcard.Thisconverted information isaddedtoany existing information ondatablocksGEfJMl,GEk3M2,GE!3M3andGE!3M4. Thefourthpartoftheinputfileprocessor (IFP4)converts theinformation onthefluid- related cards(AXIF,BDYLIST, CFLUID2, CFLUII13, CFLUID4, DMIAX,FLSYM,FREEPT, FSLIST, GRIDB, PRESPT, andRINGFL) toreflect thedesired harmonics, bolmdaries, andmatrixinput. Thisconverted information isaddedtoGEOMl,GE@M2,GE0M4andMATP!30L. Thefifthpartoftheinputfileprocessor (IFP5)converts theinformation ontheacoustic cavityrelated cards(AXSi.OT, CAXIF2, CAXIF3, CAXIF4, CSL0T3, CSL0T4, GRIDF,GRIDS,andSLBDY)to equivalent structural scalarpoints, elements, scalarsprings andplotting elements. This converted information isaddedtotheGEflMl 1.andGE0M2datablocks. -3(05/30/86)\nRIGIDFORMATS 1.1.2Functional Modules andSupporting DMAPOperations TheDMAPlistings oftherigidformats currently included withNASTRAN arepresented inthe following sections. Following eachlisting aresubsections thatdealwiththefollowing itemsfor e eachrigidformat: 1.Briefdescription ofimportant DMAPoperations fortherigidformat 2.Outputavailable fromtherigidformat 3.CaseControl Decksetupfortherigidformat 4.Parameters usedintherigidformat 5.Automatic ALTERsforAutomated Multi-stage Substructuring (ifapplicable totherigid format) 6.Rigidformaterrormessages 7.Anyotherfeatures peculiar totherigidformat Descriptions ofallmajorfunctional modules aregivenintheProgrammer’s Manual. Additional information isalsogivenintheTheoretical Manual. Descriptions ofallotherNASTRAN modules aregiveninVolumeI,Section 5. Themodules inthefollowing listappearrepeatedly intherigidformats. Sincethepurpose oftheseoperations inarigidformatisobvious, theyaregenerally omitted fromthedescriptions oftheDMAPoperations inthefollowing sections. giveninVolumeI,Section 5. 1.BEGINindicates thebeginning oftheDMAPMorecomplete descriptions ofthesemodules are ●sequence constituting therigidformat. 2.ENDindicates theendoftheDMAPsequence constituting therigidformat maltermination whenexecuted. 3._FILEmakesdeclarations relative toaparticular file. ABC=TAPEstatesthatfileABCwillbeassigned asasequential file. DEF=APPENDstatesthatfileDEFmaybeextended astheresultofan intherigidformat. GHI=SAVEstatesthatfileGHIshouldnotbedropped afteruseasit forsubsequent executions ofaninternaoop. 4,LABELspecifies alabeled pointinthesequence ofDMAPinstructions. referenced byREPT,JUMPandCI?JNDinstructions. 5.PARAMperforms specified operations oninteger DMAPparameters.andcausesa internal loop maybeneeded Labelsare 6.PRECHKactuates theautomatic generation ofexplicit CHKPNTinstructions. (PRECHK ALL Immediately andautomatically CHKPNTS alloutputdatablocksfromeachfunctional module, alldatablocksmentioned ineachPURGEinstruction andallsecondary datablocksineach EQUIVinstruction.)* TheCHKPNTinstruction specifies alistoffilestobewritten on %Theonlyexceptions to outputinsubstructurethisaretheCASESS, CASEIandCASECCdatablocksappearing as analyses. 1.1-4(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS thenewproblem tape(NPTP), including filesthatmayhavebeenpurged, eitherbecause theywerenotgenerated inthisparticular execution orwereexplicitly purgedwitha PURGEinstruction. 7.PURGEspecifies thenamesoffilesthat.areconditionally dropped basedontheparameter named. 1.1.3Checkpoint/Restart Procedures Thecheckpoint/restart feature available inNASTRAN isaverysophisticated anduseful capability. Thepurpose ofttlisfeature istoenableausertocheckpoint aNASTRAN runandthen restart it(withorwithout changes indata)byexecuting onlythosemodules thatneedtobe executed fortherestart. Thereareseveral situations inwhichtheuseofthecheckpoint/restart feature maybe desirable. Someofthesearelistedbelow: 1.Theusermaywishtoperform hisanalysis taskintwoormorestagesbyspecifying scheduled exitsinoneormoreruns. 2.Theusermaywanttoensurethatunscheduled exits(resulting fromsuchcausesasdata errors, insufficient timejii;suffic,ient coreorhardware failures) willnotrequire him torepeathisentireanalysis. 3.Theusermaywishtorerunhisproblem bymakinglimited changes inhisdata. Scheduled exitscanberequested atanypointinarigidformatbymeansoftheALTER feature. (ThemannerinwhichALTERsarehandled inrestarts isdiscussed inSection 1.1.5). An exitisscheduled byinsertirl~ thefollowing cardsintheExecutive Ccmtt’ol Deck: ALTER K1$ EXIT K2$ ENDALTER $ where K1=DMAPstatement numberafterwhichexitwilltakeplace and K2=NumberoftimesEXITinstruction willbeskipped before zero,Forusewithloops,wheretheuserwishestoexecute scheduling theexit. Iftheuserchooses torestart theproblem without makinganychanges, execute anunmodified restart following thelastcompleted checkpoint. Unscheduled exitsareusually causedbyerrorsoninputcardsorI~eingexecuted -default is theloopK2timesbefore theExecutive Systerrjwill errorsinthestructural modelresulting frommissing orinconsistent inputdata.Whensucherrorsaredetected, an unscheduled exitisperformed accompanied withtheolutputoftheapplicable usererrormessages. Following thecorrection oftheinputdataerrors, amodified restart canbeperformed. 1.1-5(05/30/86)\nRIGIDFORMATS Unscheduled exitsmayalsooccurbecause ofmachine failure orinsufficient timeallowance. Inthesecases,anunmodified restart isusually madefollowing thelastcompleted checkpoint. In somecases,whereaportion oftheproblem hasbeencompleted, including theoutputforthe completed portion, amodified restart mustbemadefollowing anunscheduled exitdueto insufficient timeallowance. Thesesituations arediscussed underCaseControl Deckrequirements inthesections dealing withtheindividual rigidformats. Theinitial execution ofanyproblem mustbemadewithacomplete NASTRAN DataDeck, including allofthebulkdata.However, allorpartofthebulkdatamaybeassembled from alternate inputsources, suchastheUser’sMasterFileoramodulewritten bytheusertogenerate input. TheUser’sMasterFileisdescribed inVolumeI,Section 2.5 discussed inVolumeI,Section 2,6. Forrestarts, theBulkDataDeckconsists onlyofdeletecards andnewcardswhichtheuserwishestoadd.Theprevious BulkDataandusergenerated inputis (seeVolumeI,Section 2.4) DeckisreadfromtheOld Problem Tape.AllotherpartsoftheNASTRAN DataDeck,including theExecutive Control Deck,the CaseControl Deck,theBEGINBULKcardandtheENDDATA cardmustberesubmitted eventhoughno changes aremadeinthecontrol decksandnonewbulkdataisadded. Inaddition, theRESTART cards(ordictionary) punched duringtheprevious execution mustbeincluded intheExecutive Control Deck.Whenchanging rigidformats, thesolution number ofthenewrigidformat. ANewProblem Tape(NPTP)isconstructed onlywhencheckpoS@L)mustbechanged tothenumber ntingisrequested (CHKPNT YES)in theExecutive Control Deck.TheNPTPshouldbeassigned toaphysical tapeorotherstorage device thatcanbedismounted andsavedattheconclusion oftheexecution. Atthecompletion ofan initial execution, theNPTPcontains theinputdeck,withthebulkdatainsortedform,andallof thefilesthatwerecheckpointed duringtheexecution. Forrestarts, theOldProblem Tape(13PTP)isdefined astheProblem Tapethatwaswritten duringtheprevious execution. TheNPTPisdefined astheProblem Tapewritten duringthecurrent execution, beginning withtherestart. Atthecompletion ofanunmodified restart, theNPTP contains theinputdeck,withthebulkdatainsortedform,allfilesfromtheOPTPthatare necessary tocomplete thesolution, andallofthefilescheckpointed duringthecurrent executicn. Atthecompletion ofamodified restart, theNPTPissimilar, except thattheinFutdeckis modified according totheinformation shbmitted fortherestart. 1.1-6(05/30/86)"},"title":"User's Manual P1"},"/docs/users/users_manual_002/":{"data":{"":"1.1.4GENERAL DESCRIPTION OFRIGIDFORMATS TypesofRestarts ●Thetypeofarestart isdetermined automatically bytheprogram bycomparing theinputdata oftherestart runwiththatofthecheckpoint run.Theuserneednotbeconcerned aboutthe mannerinwhichthisisdone,butmaybeinterested inknowing theresulting type. Thetypesofrestarts presently recognized inNASTRAN aresummarized inthefollowing table. TypesofRestarts inNASTRAN InearlierRestart data compared to checkpoint data Noeffective changes Effective changes only totheCase Control Deck andlorthe BulkData Deck Changein rigidformatResulting type ofrestart e Unmodified Yes restart Modified Yes restart Modified restart Yes withrigid formatswitch Imment DMAP Yes Yes No ~ersions ofNASTRAN, anadditional typeofrestart, calledthepseudomodified restart, wasrecognized forcasesinvolving changes onlyinoutputrequests. Thisisnolonger donesinceitisnowhandled asaspecial caseofthemodified restart. Themannerinwhicharestart ishandled bytheprogram depends onitstypeandonits environment (rigidformatorDMAPenvironment). Thisisdiscussed inthefollowing sections. Animportant termthatisfrequently encountered inthefollowing discussion isthereentry pointfora,restart. Thisisdefined asthelastreentry pointspecified intherestart dictionary. Itisaninteger equaltotheinstruction numberoftheDMAPinstruction inthe checkpoint runatwhichanunmodified restart willresumeexecution. (SeeVolumeI,Section 2.2.) 1.1-7(05/30/86)\nRIGIDFORMATS 1.1.4.1 Unmodified Restart Anunmodified restart involves noeffective changes tothedata.Theexecution inthistype ofrestart resumes atthereentry point. Unmodified restarts inbothrigidformatandDMAPe environments arehandled inanidentical manner. Itisusefultodistinguish between twotypesofunmodified restarts. Thesearedescribed below. -Unmodified restart inwhichthereentry pointisnotwithinaDMAPloop Thisisthesimplest typeofrestart possible. Inthiscase,theexecution flagsforallDMAP instructions priortothereentry pointareturnedoffandtheexecution flagsforallDMAP instructions fromthereentry pointonwards areturnedon.Allinputfilesordatablocksrequired fortherestart already existontheJ3PTPandwillberetrieved. -Unmodified restart inwhichthereentry pointiswithinaDMAPloop. Inthiscase,initially, theexecution flagsforallDMAPinstructions priortothereentry point areturnedoffandtheexecution flagsforallDMAPinstructions fromthereentry pointonwards are turnedGn.Thisissoindicated intheDMAPsourcelisting. However, subsequently, theDMAP instructions priortothereentry pointandwithintheDMAPlooparerecognized andtheirexecution flagsareturnedon.Theuserisinformed aboutthisintheoutput. Note,however, thatthe execution doesresumeatthereentry point,eventhoughDMAPinstructions priortothispointare turnedon.DMAPinstructions withintheDMAPloopandpriortothereentry pointareexecuted only o ifadditional passesintheloopneedtobeexecuted. Iftherestart iswithinthelastpassof theDMAPloop,obviously DMAPinstructions withintheloopandpriortothereentry pointarenot executed eventhoughtheirexecution flagsareon. Allinputfilesordatablocksrequired bytherestart already existontheOPTPandwillbe retrieved. 1.1.4.2 Modified Restart Thistypeofrestart involves oneormoreeffective changes tothedataintheCaseControl Deckand/orintheBulkDataDeck, Theheartoftherestart logicformodified restarts intherigidformatenvironment isthe Modu”leExecution Decision Table(MEDT)associated witheachrigidformat. TheMEDTforeachrigid furmatdciually comprises threedistinct tables. ThesearetheCardNameRestart Table,theRigid ~crmatChangeRestart TableandtheFileNameRestart Tableassociated withthatrigidformat. fr{.uediscussion inSection 1.1.7. SeealsoSections 1.10and7oftheProgrammer’s Manual.) 1.1-8(05/30/86) “\nGENERAL Inthecaseofmodified restartsDESCRIPTION OFRIGIDFORMATS intherigidformatenvironment, allDMAPinstructions from thereentry pointsonwards havetheirexecution flagsturnedon.Inaddition, thistypeofrestart generally requires thatcertain DMAPinstructions priortothereentry pointalsobeturnedon, depending onthespecific datachanges involved. TheDMAPinstructions thatneedtobesoturned onaredetermined fromtheCardNameRestart Table. TheDMAPsourcelisting provided intheoutput indicates alltheDMAPinstructions whoseexecution flagsareinitially turnedonbytheabove procedure. OncetheDMAPinstructions areinitially turnedonasdescribed above,theprogram checksto seeifalloftherequired inputdatablocksareeitherbeinggenerated bypriormodules orare available onthe13PTPforretrieval. Ifso,noadditional DMAPinstructions needtobeturnedon. If,however, thereareanyinputdatablocksthatareneither beinggenerated bypriormodules nor areavailable ontheOPTP,theprogram needstoturnonadditional DMAPinstructions inorderto generate therequired datablocks. TheDMAPinstructions thatneedtobesoturnedonare determined fromtheFileNameRestart Table. Aftertheadditional DMAPinstructions areturnedonasdescribed intheaboveparagraph, the process isrepeated untilitisensured thatalloftherequired inputdatablocksareeitherbeing generated bypriormodules orcanberetrieved from@PTP. AlltheDMAPinstructions thatareturnedonaspertheabovelogic(bytheuseoftheFil”e NameRestart Table)areidentified andlistedintherestart outputjustaftertheDMAPsource listing. Itshouldbenotedthattheexecution inamodified restart willstartatthefirstmodulein theDMAPsequence whoseexecution flagisturnedon.Generally, thisisbeforethereentry point. Inthecaseofmodified restarts intheDMAPenvironment, theeffectofchanges intheCase Control Deckand/orintheBulkDataDeckonparticular modules cannotbedetermined sincetheDMAP itselfis,bydefinition, notpredefine. (AnMEDTismeaningless foraDMAP.)Hence,itis assumed thatthechanges willaffecttheentireDMAPwhich,therefore, needstobere-executed. Thisisaccomplished intheprogram byre-setting thereentry pointtozero-and treating thiscase asanunmodified restart. ThiscausestheentireDMAPtobere-executed. Thoseinputfilesordatablocksthatareneededfortherestart andthatareavailable on thejlPTPareretrieved, justasitisdoneinthecaseofmodified restarts intherigidformat environment. 1.1-9(05/30/86)\nRIGIDFORMATS 1.1.4.3 Modified Restart withRigidFormatSwitch Thistypeofrestart involves aswitchfromonerigidformattoanother. Itmayormaynot involve effective changes tothedataintheCaseControl Deckand/orintheBulkDataDeck. Themostimportant pointtorecognize inthistypeofrestart isthatthereentry pointis quitemeaningless sinceitwasdetermined inrelation toanother rigidformat. Thisishandled in theprogram byresetting thereentry pointtoanextremely highvaluewhich,forallpractical purposes, canbeconsidered tobeinfinite. Asaresult, allDMAPinstructions intherestart are considered tobebeforethereentry pointandnoDMAPinstructions areconsidered toexistafter thereentry point. Oncethisimportant changeismade,thistypeofrestart ishandled intheprogram inthe samemannerasamodified restart, withoneimportant modification: theDMA.Pinstructions thatare initially turnedonaredetermined notonlyfromtheCardNameRestart Table,butalsofromthe RigidFormatChangeRestart Table. 1.1.5UseofDMAPALTERsinRestarts Because different typesofrestarts arehandled differently bytheprogram, theusershould becareful intheuseofDMAPALTERsinrestarts. Inthecaseofanunmodified restart inwhichthereentry pointisnotwithinaDMAPloop, theonlyDMAPinstructions thatareflagged forexecution arethosethatarebeyond(andinclude) thereentry point. Hence,aDMAPALTERwillbeflagged forexecution onlyifitisbeyondthe reentry pointandwillbeignored ifitisbeforethereentry point.* Inthecaseofanunmodified restart inwhichthereentry pointiswithinaDMAPloop,the onlyDMAPinstructions flagged forexecution arethosethatarebeyond(andinclude) thereentry pointandthosethatarebeforethereentry pointbutwithintheDMAPloop.Hence,aDMAPALTER willbeflagged forexecution onlyifitisbeyondthereentry pointorbeforeitbutwithinthe DMAPloop.Otherwise, itwillbe.ignored.* *TheusercanensurethataDMAPALTERinanunmodified restart isflagged forexecution by suitably deleting thelatterpartoftherestart dictionary sothatthereentry pointisbefore theDMAPALTER. This,ofcourse, willcausemoremodules tobeexecuted intherestart. 1,1-10(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS Inthecaseofamodified restart andamodified restart withrigidformatswitch, aDMAP ALTERwillbeflagged forexecution regardless ofitsposition intheDMAPwithrespect tothe reentry point. 1.1.6RigidFormatOutput Although mostoftherigidformatoutput isoptional, someoftheprinter outputis automatic. Theprinter outputisdesigned for132characters perline,withthelinesperpage controlled bytheNLINESkeyword ontheNASTRAN card(seeVolumeI,Section 2.1)andtheLINEcard intheCaseControl Deck(seeVolumeI,Section 2.3).TheNLINESandLINEdefault issettoffton n-inch paper. Optional titlesareprinted atthetopofeachpagefrominformation intheCase Control Deck.Thesetitlesmaybedefined atthesubcase level. Thepagesareautomatically dated andnumbered. Theoutputfromthedatarecovery andplotmodules isalloptional, anditsselection is controlled bycardsintheCaseControl Deck.Thedetails ofmakingselections intheCaseControl Deckaredescribed inVolumeI,Section 2.3forprinter andpunchoutput, andinVolumeI,Section 4forplotter output. Sincetheoutputs fromthedatarecovery andplotmodules varyconsiderably withtherigidformat, alistofavailable outputisincluded inthesection ontheCaseControl Deckforeachrigidformat. Information ontheforceandstressoutputavailable foreachelement typeisgiveninVolumeI,Section 1.3. ThefirstpartoftheoutputforaNASTRAN runisprepared duringtheexecution ofthe Preface, priortothebeginning oftheDMAPsequence oftherigidformat. Thefollowing outputis eitherautomatically oroptionally provided duringtheexecution ofthePreface: 1. 2. 3. 4. 5. 6.NASTRAN titlepage-Twofullpagesautomatic, unlesschanged withtheTITLEOPT keyword ontheNASTRAN card(seeVolumeI,Section 2.1)beforetheExecutive Control Deck. Executive Control Deckecho-Automatic. CaseControl Deckecho-Automatic. Unsorted BulkDataDeckecho-Optional, selected inCaseControl DeckwiththeECHO Card.(Automatic inrestart runsandinrunsemployin 7theUser’sMasterFile,unless suppressed intheCaseControl OeckwiththeECHOcard. SortedBulkDataDeckecho-Automatic, unlesssuppressed intheCaseControl Deckwith theECHOCard, DMAPlisting -Selected withDIAG14(ortheLISToptiononanXDMAPcard)inthe Executive Control Deck. Provides thelistOFDMAPinstructions, including those resulting fromALTERs, forthesubsetoftherigidformatbeingexecuted, (Automatic in restart runsandinrunsusingtheDMAPapproach (APPDMAP)orthesubstructure capability (APPDISP,SUBS),unlesssuppressed bytheNOLISToptiononanXDMAPcardin theExecutive Control Deck.) 1.1-11(05/30/86)\nKLtil!Ji_UKM/41S 7,Checkpoint Dictionary -Automatic, whenoperating inthecheckpoint mode.Aprinted echo (unless suppressed withtheDIAG9cardintheExecutive Control Deck)andpunched output areprepared foradditions tothecheckpoint dictionary aftertheexecution ofeach checkpoint. Whenmakingrestarts, thefollowing additional outputisautomatically prepared duringthe execution ofthePreface: 1, 2. 3. 4. 5. 6. 7.Asterisks ()areplacedbesidetheDMAPstatement numbers ofallinstructions thatare flagged forexecution intherestart. (ItshouldbeemrIhasized thataDMAPinstruction markedwiththesymbolisonlyflaedforexecution; ’whether itactually g *AP.)ets-executed ornotisdecided bythelogicinthe Pluses(+)areplacedbesidetheDMAPstatement numbers ofallinstructions thatare processed onlyatDMAPcompilation time.(DMAPinstructions BEGIN,COMPOFF, C@MPON, FILE,LABEL,PRECHKandXDMAParetheonlyinstructions thatbelongtothiscategory,) Message indicating thebitposition activated byarigidformatchange. Message indicating thetypeofrestart (unmodified, modified ormodified withrigid formatswitch). Tableindicating, amongotherthings, theeffective datachanges (ifany)andthe associated “packed bitpositions” thatcontrol therestart. Thetabledistinguishes between effective changes madetotheCaseControl DeckandthosemadetotheBulkData Deck,Thereaderisreferred totheProgrammer’s Manualforthefullinterpretation of thistable. ListoffilesalongwiththeDMAPinstructions thatweremarkedforexecution (ifany)by theFileNameRestart Table. ListoffilesfromtheOldProblem Tape,including purqedfiles,usedtoinitiate the-r- estart. Anumberoffatalerrorsaredetected bytheDMAPstatements inthevarious rigidformats. Thesemessages indicate thepresence offatalusererrorsthateithercannotbedetermined bythe functional modules orcanbemoreeffectively detected bytheDMAPstatements intherigidformat. Thedetection ofsuchanerrorcausesatransfer toaLABELinstruction neartheendoftherigid format.Thetextofthemessage isoutputandtheexecution isterminated. Thesemessages will alwaysappearattheendoftheNASTRAN output. Themessages applicable toeachrigidformatare described underthedescription ofthatrigidformat. NASTRAN diagnostic messages areusually identified bynumbers. Thesemessages maybe program diagnostics oruserdiagnostics, andtheymaycontain information, warnings, or indication ofafatalerror. Therearealsoafewunnumbered, self-explanatory messages, example, thetimethattheexecution ofeachfunctional modulebeginsandends.either an for TheGridPointSingularity Table(GPST)isautomatically outputfollowing theexecution of theGridPointSingularity Processor (GPSP)ifsingularities remaininthestiffness matrixatthe gridpointlevel. Thistablecontains allpossible combinations ofsingle-point constraints, in theglobalcoordinate system, thatcanbeusedtoremovethesingularities. Entries inthistable 1,1-12(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS @shouldonlybetreated aswarnings, because itcannotbedetermined atthegridpointlevelwhether ornotthesingularities areremoved byothermeans,suchasgeneral elements ormultipoint constraints. Further information onthismatterisgivenintheTheoretical Manual. Several itemsofoutputarediscussed inothersections. Outputthatisnotassociated with allof output (PARAMtherigidformats isdiscussed inthesections treating theindividual rigidformats. Some isunderthecontrol ofPARAMcards. Theseitemsarediscussed inVolumeI,Section 2.4 card). TheDIAGcardisusedtocontrol theprinting ofsomeoutput. Alistofthe available outputunderDIAGcontrol isgiveninthedescription oftheExecutive Control Deckin VolumeI,Section 2.2. Anyofthematrices ortablesthatareprepared bythefunctional modules canbeprinted by usingselected utility modules described inVolumeI,Section 5.5.Theseutility modules canbe scheduled atanypointinarigidformatbyusingtheALTERfeature. (SeeSection 1.1.5forthe mannerinwhichALTERsarehandled inrestarts.) Ingeneral, theyshouldbescheduled irrrinediately afterthefunctional modulethatgenerates thetableormatrixtobeprinted. Notethatfunctional modules cannotbeseparated fromaSAVEinstruction. However, theuseriscautioned tocheckthe calling sequence fortheutility egenerated priortothispoint. 1.1.7RigidFormatDataBase-——. Asindicated earlier, the information foralloftherigidmodule, inordertobecertain thatallrequired inputshavebeen RigidFormatDataBasecontains theDMAPsequences andother formats inNASTRAN. Itsdesignallowsforconvenient maintenance oftheexisting rigidformats aswellastheaddition ofnewrigidformats. Editing ofthedata basemaybedonebyusingstandard texteditors provided onthehostcomputer systems. 1.1.7.1 DesignoftheDataBase TheRigidFormatDataBaseisacollection ofallrigidformats available totheuserin NASTRAN. EachRigidFormatismaintained asaseparate card-image entrywithinthedatabase.The entryforeachrigidformatconsists ofthreeparts. ThefirstpartistheDMAPpart.It.contains theDMAPsequence fortherigidformat, theDMAPsequence subsetflags,therestart flags(card name,filenameandrigidformatswitchrestart flags)andthesubstructure DMAPALTERcontrol flags. Thesecondpartcontains thecardnametableandthethirdpartcontains thefilename table. Therestart flagsinthefirstpartandthenametablescomprising thesecondandthird 1.1-13(05/30/86)\nRIGIDFORMATS partsarenotprocessed byNASTRAN innon-restart runs.Similarly, thesubstructure control flags inthefirstpartarenotprocessed innon-substructure runs. @ Theformatofthedatabaseisfreefield. Eachofthethreepartsinarigidformatentry isseparated from’theotherpartsbya“$”card.Thefollowing fictitious example illustrates a rigidformatentryinthedatabase. APR.86 $$$$THISISACOMMENT$$$$***************************************************** MODULEl INl,IN2,/f3uTl,guT2//PARMl $ s8ST 1,3,9-12 RFMT 188,200-201 CARD 1-20,30,44 FILE 100-104,110 pHSl II pHS2 DB5 PHS3 D7 $$$$************************** MgDuLE2 IN3,1N4/0UT3/PARM2 $ CARD 1-40,45 FILE 101,102 pHS2 DE5 $$$$****************************************** . . . $$$$ $CARDNAMETABLE $$$$ AXICAXIFCELAS1 ;CELAS2 ADUM1CDUM1CR@D . . $$$$“$FILENAMETABLE $$$$ 94 SLTGPTT 95 KGGXGPST . . $ “ Theveryfirstcardofanentryidentifies therelease ofNASTRAN withwhichtherigidformat isassociated. Inthisexample, therigidformatisassociated withtheApril1986release. The“$CARD” cardseparates thecardnametablefromtheDMAPpartoftheentryandthe “$FILE” cardseparates thefilenametablefromthecardnametable. A“$”cardterminates the filendmetableandtherigidformatentry. Comment cardsareidentified inthedatabasebythe“$$$$”identification inthefirstfour columns ofthefieldandcontrol cardsareidentified bythe“**”identification inthefirst fourcolumns ofthefield. 1.1-14(05/30/86)\n● ● ●GENERAL DESCRIPTION OFRIGIDFORMATS Comment cardsmaybeplacedanywhere inthecardnameorfilenametables(thesecondand thirdpartsofarigidformatentry). However, comment cardshavearequired usageandservea specific purpose intheDMAPpartofarigidformatentry. Inthispart,aconment cardisusedto distinguish andseparate aOMAPentry(thatis,aDMAPstatement anditsassociated control cards) fromanother DMAPentry. fromthenextDMAPentry. stringof“”isusedfor entries. AllDMAPstatementsHence,theremustbeatleastonecomment cardseparating aDMAPentry Inthedatabasesupplied withNASTRAN, acomment cardwithatrailing thispurpose toserveasacosmetic delineation between successive DMAP mustconform totherulesasspecified inVolumeI,Section 5,2.Any cardintheDMAPpartofarigidformatentrythatdoesnotbeginwith“$$$$”or“”inthe firstfourcolumns ofthefieldisconsi( Comment andcontrol cardsinarig’ cardscanonlyextendupto72columns. Control cards(thatis,cardsthateredtobeaDMAPstatement orpartofaDMAPstatement. dformatentrycanextendup.to80columns. beginwith“*”inthefirstfourcolumnsHowever, DMAP ofthefield) repermitted onlyintheDMAPpartofarigidformatentry. Acontrol cardmusthaveanyoneof sevenfour-character namesincolumns fivethrough eight. Thepermissible namesare:SBST,RFMT, CARD,FILE,PHS1,PHS2andPHS3.Control cardsfollowthecorresponding DMAPstatement inthe entryandmaybespecified inanyorder. The“SBST”, “RFMT”, “CARD”and“FILE”control cardscontain sequences ofnumbers and/or rangesofnumbers inascending orderrepreseited bytheuseofadash.Acommaisrequired after eachnumberinasequence orafterarangeofnumbers, ifanadditional numberorrangeofnumbers istofo”llow. Theremaybemultiple cardsforanyoneofthesecontrol cardsforaspecific DMAP statement. The“SBST”control cardprovides DMAPsequence subsetcontrols. Ifauserrequests a9iven subsetontheSOLcardofaNASTRAN runandthatnumberisinthesequence ofnumbers givenonthe “SBST”card,thentheassociated DMAPstatement isdeleted. Therangeofsubsetnumbers isfrom1 to9andeachnumberisdocumented underthedescription oftheSOLExecutive Control cardin VolumeI,Section 2.2. The“RFMT”control cardisprocessed inrestart runsandisapplicable tocaseswherearigid formatswitchhasoccurred. Eachrigidformathasauniquenumberassigned toit.ForAPPROACH DISP,rigidformats 1through 16areassigned thenumbers 187through 202,respectively. For APPROACH HEAT,rigidformats 1,3and9areassigned thenumbers 207,2C8and209,respectively. 1.1-15(05/30/86)\nKltill.1tUKPIAIS ForAPPROACH AERO,rigidformats 9,10and11areassigned thenumbers 216,214and215, respectively. ADMAPstatement isflagged forexecution inamodified restart ifthenumber associated withtherigidformatthatwasusedinthecheckpointed runislistedinthesequence of numbers givenonthe“RFMT”cardprovided withtheDMAPstatement. The“CARD”and“FILE”control cardsprovide restart information forchanges thatinvolve inputdataorfileswithintheDMAP.Foragivenrigidformat, everytypeofeffective changein theCaseControl andBulkDataDecksandeachoutputfile(ordatablock)intheDMAPisassigned a numberasdefined inthecardnameandfilenametablesinthesecondandthirdpartsofarigid formatentry. Inamodified restart, ifthenumberassociated withaninputdatachangeoran affected fileappears inthesequence ofnumbers givenonthe“CARD”or“FILE”cards,thenthe corresponding DMAPstatement isflagged forexecution intherestart run. Theinformation provided byallofthe“CARD”control cardsinarigidformatentryis collectively referred toastheCardNameRestart Table. Similarly, theinformation provided by allofthe“FILE”and“RFMT”control cardsinarigidformatentryiscollectively referred toas theFileNameRestart TableandtheRigidFormatChangeRestart Table,respectively. Foragiven rigidformat, thesethreerestart tablescompose theModuleExecution Decision Table(MEDT)ofthat rigidformat. The“PHS1”, “PHS2”and“PHS3”control cardsareusedtoindicate wheresubstructure DMAp ,,LTERsaretobegenerated. Thenumberfollowing the“PHS”referstothesubstructure phase number. Thesecardsmusthaveoneofthefollowing flags: “In”,“Dn”,“DBn”or“DEn”. The“n”in theseflagsisaninteger thatreferstothesubroutine governing thesubstructure run(subroutine ASCMOI, ASCM05, ASCM07orASCM08) andmusthavethevalue“l”forPhase1cards,eitherthevalue “5”or“8”forPhase2cards,andeitherthevalue“l”or“7”forPhase3cards. The“I”inthe “In”flagindicates thataDMAPALTERistobeinserted afterthisDMAPstatement. The“D”inthe “Dn”flagindicates thatthisDMAPstatement istobedeleted andpossibly replaced byaDMAP ALTER. The“DB”inthe“DBn”flagandthe“DE”inthe“DEn”flagindicate thebeginning andthe endofagroupofcontiguous DMAPstatements thataretobedeleted andpossibly replaced byaDMAP ALTER. Usersarecautioned tobeverycareful inmakinganychanges tothesesubstructure control cardsbecause oftheirimpactontheDMAPALTERsautomatically generated insubstructure analyses. (Theautomated substructure capability iscurrently implemented onlyinrigidformats 1,2,3,8 and9,APPROACH DISP.) 1.1-16(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS Thecardnameandfilenametablesassignnumbers toeverytypeofeffective changeinthe CaseControl andBulkDataDecksandtoeveryoutputfile(ordatablock)intheDMAP.Numbers 1 through 93areallocated tocardnamesandnumbers 94through 186areallocated tofile(ordata block)names. Thisinformation isusedsubsequently todetermine theDMAPstatements tobeflagged forexecution inmodified restarts. Theformatofthesetablesisfreefield. Eachentryinthese tablesmusthaveaninteger numberinthefirstfieldandalistofnamesintheremaining fields oftheentry. characters. No thesetablestoAllnamesaretobealphanumeric andmaycontain uptoamaximum ofeight nameshouldappeartwiceinthese“tables. Comment cardsmaybefreelyusedin facilitate readability. 1.1,7.2 Implementation oftheDataBase TheRigidFormatDataBaseisimplemented differently ontheCDC,DECVAX,IBMandUNIVAC versions. OntheCDCandDECVAXversions, eachrigidformatentryisstoredasaseparate file. ThelocalnamesofthesefilesduringaNASTRAN execution are:DISPIthrough DISP16forAPPROACH DISP;HEAT1,HEAT3andHEAT9forAPPROACH HEAT;AER09,AEROIOandAERf311forAPPROACH AERi3.These samefilesarestoredasmembers ofapartitioned dataset(PDS)ontheIBMversion andiiselements oftheNASTRAN fileontheUNIVACversion. Thememberandelement namesareexactly thesameas thelocalfilenamesontheCDCandDECVAXversions. RigidFormatDataBasemustbereferred tobyaData RFDATA. OntheUNIVACversion, theNASTRAN fileis absolutes. (SeeReferences 1and2fortheformats ofOntheIBMversion, thePDScontaining the Definition card,“DD”,withtheDDnameof thefilecontaining theNASTRAN program filenamesfortheCDCandDECVAXversions, respectively. SeeReference 3fortheformats ofDDnames andmembernamesfortheIBMversion. SeeReference 4fortheformatofUNIVACfilenames.) 1.1.7.3 UsageoftheDataBase Thefollowing examples illustrate themannerinwhichtheRigidFormatDataBaseisaccessed andusedonallofthe,four versions ofNASTRAN. CDCVERSION /J17B. . ~ET,DISpl,DISP2, DISP3,DISP4,DISP5. GET,DISP6,DISP7,DISP8,DISP9,DISP1O. GET,DISP11,DISP12,DISP13,DISP14,DISP15,DISP16. 1.1-17 05/30/86)\nRIGIDFORMATS GET,HEAT1,HEAT3,HEAT9 ,AER!39,AER@10,AER011 . RFL,220000. REDUCE,-. LINKl,INPUT,@UTPUT ,PUNCH,UT1. {~@R …. . ~NDDATA /Ef3F DECVAXVERSION ASSIGN DDB1:[NASOIR]DISP1 .DTDISP1. ASSIGN DDB1:[NASOIR]DISP2. OTDISP2. . AssIGN bOBI:[NASOIR]HEAT1 .DTHEATI. . ASSIGN 6DBI:[NASDIR]AER011.DT AER1311. @DoBl:[NASDIR]NASTRAN DEM@.DT IBMVERSION //EXECNASTRAN //NS.RFDATA DDDSN=RIGID.FORMAT.DATA.DISP=SHR {NS.SySIN DD* ‘‘- …. . iNDDATA // UNIVACVERSION @ASG,A*NASTRAN. @XQT *NASTRAN.LINK1 1.1.7.4 Development ofUserRigidFormats Inaddition tousingCOSMIC-supplied formats, withrestart capabilities included. rulesexplained earlier andmustbesimilarrigidformats, usersmaydevelop theirownrigid Rigidformats developed byusersmustconform tothe incontent andstructure totheCOSMIC-supplied rigid formats. Eachuser-developed rigidformatmustresideasaseparate fileontheCDCandDECVAX versions, asamemberofaPDSontheIBMversion andasafileorfile.element ontheUNIVAC version. Beforedeveloping theirownrigidformats, usersarestrongly advised tocarefully studyand examine theCOSMIC-supplied rigidformats, particularly withregardtotheiruseofcontrol cards. Thefollowing important guidelines shouldhelpusersindeveloping theirownrigidformats. 1.1-18(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS 1. 2. 3. 4, 5. 6. 7.TheDMAPsequence oftheuserrigidformatmustbetestedforitscorrectness andlogic. Thistesting maybedoneeitherinaDMAPenvironment orintheenvironment ofan existing rigidformatbyuseofALTERs. Thecardnametable(thesecondpartofarigidformatentry)mustbeconstructed by assigning numbers 1through 93foralltypesofCaseControl andBulkDataDeckchanges thatwillaffectthelogicoftherigidformat. Normally, thoseinputdatachanges that havethesameeffectonthelogicoftherigidformatareassigned thesamenumber. Thefilenametable(thethirdpartofarigidformatentry)mustbeconstructed by assigning numbers 94through 186forallfiles(ordatablocks) thatareoutputbythe functional modules intherigidformat. Normally, allfiles(ordatablocks) outputfrom agivenfunctional moduleareassigned thesamenumber. TheDMAPpart(thefirstpartofarigidformatentry)mustbeconstructed byfollowing eachstatement intheDMAPsequence bytheappropriate control cardsandbyensuring that eachDMAPentry(thatis,aDMAPstatement anditsassociated control cards)isseparated fromthenextDMAPentrybyatleastonecomment card. AgivenDMAPstatement mustbefollowed bya“SBST”control cardifthatDMAPstatement belongs tooneormoreoftheDMAPsubsets. Thesesubsetnumbers mustbespecified on the“SBST”card.Theacceptable subsetnumbers andtheirmeanings aredocumented under thedescription oftheSOLExecutive Control cardinVolumeI,Section 2.2. A“RFMT”control cardmustfollowaDMAPstatement ifthatDMAPinstruction istobe flagged forexecution onrestart fromacheckpoint ofoneoftheCOSMIC-supplied rigid formats. (Itisnotpossible tohavearestart inaCOSMIC-supplied rigidformatfroma checkpoint ofanuser-developed rigidformat.) ThiswillbesoifthisDMAPinstruction isnotpartoftheDMAPsequence oftherigidformatthatwasusedinthecheckpoint run. The“RFMT”control cardmustlistthenumbers oftheappropriate COSMIC-supplied rigid formats (187through 202forrigidformats 1through 16,respectively, forAPPROACH DISP; 207,208and209forrigidformats 1,3and9,respectively, forAPPR9ACH HEAT;and216, 214and215forrigidformats 9,10and11,respectively, forAPPROACH AERO). ADMAPstatement mustbefollowed byoneormore“CARD”control cardsindicating the effective inputdatachanges thatrequire thatDMAPinstruction tobeflagged for execution onrestart. Anyeffective inputdatachangewillaffectoneormorefiles(or datablocks) orparameters intheDMAPsequence. Therefore, foragivendatachange, all 1.1-19(05/30/86)\n8, 9. 10.RIGIDFORMATS CMAPinstructions thatusetheaffected files(ordatablocks) orparameters asinputare potential candidates tobeflagged forexecution onrestart. However, thelogicofthese individual OMAPinstructions mustbechecked further (seetheProgrammer’s Manual) tosee iftheyarereallyimpacted bythegivendatachange. Thisprocedure mustbeapplied in turntothose input. This considered.DMAPinstructions thatusetheoutputoftheaffected DMAPinstructions as procedure mustberepeated untiltheentireDMAPsequence hasbeen ADMAPstatement mustbefollowed byoneormore“FILE”control cardsindicating theDMAP files(ordatablocks) whosegeneration requires theexecution flagforthatDMAP statement tobeturnedonduringrestart. Normally, foragivenDMAPfile(ordata block)thatisrequired onrestart butisnotavailable fromthecheckpoint run,theDMAP instruction thatgenerated itmustbeflagged forexecution. However, inpractice, additional DMAPinstructions likePURGEandEQUIVthatmanipulate thegivenfile(ordata block)mustalsobeflaggedfor execution. Therestart flagsforaC9NDDMAPinstruction (anditscompanion LABELDMAPinstruction) mustinclude therestart flagsforthoseDMAPinstructions whoseexecution itcontrols. “PHS1”, “PHS2”and“PHS3”control cardsmustnotbeusedasthesubstructure capability isnotapplicable touserrigidformats. 1.1.7.5 UsageofUser-Developed RigidFormats Anuser-developed rigidformatisreferenced through theuseoftheSOLcardintheExecutive Control Deck. However, instead ofspecifying thesolution number orthenameofthe COSMIC-supplied rigidformatonthiscard,thenameoftheuser-developed rigidformat is specified. ThisnameisafilenameontheCDCandDECVAXversions, amembernameof aPDSonthe IBMversion andafileorfile.element nameontheUNIVACversion. Themembernamegivenonthe IBMversion mustbeinthefilereferenced ontheRFDATADOstatement. Themannerinwhichan user-developed rigidformatisaccessed andusedissimilar tothatofaCOSMIC-supplied rigid format, asexplained intheexamples givenSection 1.1.7.3. Thus,forinstance, anuser-developed rigidformatcanbeaccessed andusedontheCDCversion inthefollowing manner. /J@B. . GET,NEWRF. RFL,220000. 1.1-20(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS REDUCE.-. LINK1,iNPUT,OUTPUT,pUNCH ,UT1. lEOR ID”…. S@LNEWRF ;EOF 1.1-21(05/30/86)\nRIGIDFORMATS REFERENCES 1.Control DataCorporation NOS1.0Reference Manual, Document No.60435400. 2.VAX/VMS Command Language User’sGuide,Digital Equipment Corporation, OrderNo.AA-D023C-TE. 3,IBMOS/VS2 MVSJCL,Document No,GC28-0692-4. 4.SperryUNIVAC1100SeriesExecutive SystemEXECProgrammer Reference, Volume2,Document No. UP-4144.2. 1.1-22(05/30/86)\n2.DISPLACEMENT RIGIDFORMATS 2,1STATICANALYSIS 2,1.1DMAPSequence forStaticAnalysis RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN DISP01-STATICANALYSIS -APR.86$ 2FILE oPTP2=sAvE/EsTl=sAvE $ 3FILE QG=APPEND/PGG=APPEND/UGV-APPEND/GM=SAVE/KNN=SAVE $ 4SETVAL //V,Y,lNTERACT/0/v,Y,5YS21/O $ 5PARAM //14PY/CARDNO/O/O $ 6COhPOFF l,INTERACT $ 7PRECHK ALL$ 8COMPON I,INTERACT $ 10COMPOFF LBLINT02,SYS21 $ v 11GPl GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ 12PLTTRAN BGPDTsSIL/BGPDP,SIP/LUSET/.S,N, LUSEP$ 13GP2 GEoM2,EQExlN/EcT $ 14PARAML PCOR//~~PRES*////JUMPPLOT $ 15PURGE PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ 16COND P1,JUMPPLOT $ 17PLTSET PCOB,EQEXIN,ECT/?LTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ 18PRTMSG PLTSETX// $ 19PARAM //MPY/PLTFLG/l/l $ 20PARAM //MPY/PFILE/O/O $ 21COND P1,JUMPPLOT $ 22PLOT PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/S,N,PFILE $ 2.1-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 23PRTMSG 24LABEL 25GP3 26PARAM 27TA1 28PARAH 29coNo 30PURGE 31oPTPR1 32LABEL 33CONO 34PARA14 35EQUIV 36Et4G 37COND 38EMA 39LABEL 40PURGE 41COND 42EMA 43LABEL 44COND 45COND 46GPWGPLOTX1// $ PI$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S,N,NOGRAV/NEVER=l $ /lANO/NOFtGG/NOGRAv/V,y,GRDPNT–I $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ //~NO/NOELMT/NOGENL/NOslMp $ ERRORk,NOELMT $ KGGX,GPST/NOSIMP/OGPST/GENEL $ MPT,EPT,ECT,OIT,EST/OPTPl/S,N,PR lNT/S,N,TSTART/S,N,COUNT $ LOOPTOP $ LBL1,NOSIMP $ //ADD/NOKGGX/l/O $ oPTPl,oPTP2/NEvER/EsT,EsTl/NEvER $ EST,CSTM,MPT,DIT,GEOM2,/KELM,KDl CT,MEL/l,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y, COUPMASS/C,Y,CPBAR/ C,Y,CPROD/C,Y,CPQUADl/C,Y, CPQUA02/C,Y,CPTRIAl/C,Y,CPTRl A2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ JMPKGG,NOKGGX $ GPECT,KO}CT,KELM/KGGX,GPST $ JMPKGG $ f4GG/NOMGG $ JMPMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GRDPNT $ ERROR2,NOMGG $ BGPOP,CSTM,EQEXlN,/IGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ 2.1-2(05/30/86)\nSTATICANALYSIS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 41 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6k 65 66 67 68 69 10 71OFP LABEL EQUIV CONO SMA3 LABEL PARAM LABEL GPk CONO PARAH PURGE COND PARAM COND GPSP OFP LABEL EQU[V COND HCE1 MCE2 LABEL EQUIV CONDOGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBLIIA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1lA $ //MPY/NSK IP/O/O$ LBL1l$ CASECC,GEOM4,EQEX lN,GPDT,BGPDT,CSTM,GPST/RG, YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,Sl NGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //AND/NOSR/SINGLE/REACT $ KRR,KLR,QR,DM/REACT/GM/MPCF l/GO,KOO,LOO,PO ,UOOV,RUOV/OMIT/PS , KFS,KSS/SINGLE/QG/NOSR $ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFi $ LBL2,MPCF2 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ 2.1-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 72SCE1 73LABEL 74EQUIV 75COND 76S14PI 77LABEL 78EQtJIV 79COUD 80RBMG1 81LABEL 82RBMG2 83CONO 8kRBMG3 85LABEL 86SSG1 87EQUIV 88CONO 89SSG2 90LABEL 91SSG3 92“COND 93MATGPR 94MATGPR 95LABEL 96SDRIUSET,KNN,,./KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMiT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ LBL5$ KAA,KLL/REA.CT $ LBL6,REACT $ USET,KAA,/KLL,KLR,KRR,,, $ LBL6$ KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ LBL7$ SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT, EDT,MGG,CASECC,OIT,/PG,,,,/ LUSET/NSKIP’ $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,OM,PG/QR,PO,PS,PL $ LBL1O$ LLL,KLL,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, iRES=-1/ NSKIP/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,QR/UGV,PGG,QG/NSKIP/ sTATlcs $ 2.1-4(05/30/86)"},"title":"User's Manual P2"},"/docs/users/users_manual_003/":{"data":{"":"STATICANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 97COND 98REPT 99JUMP 100PARAM 101COND 102LABEL 103GPFDR 104OFP 105COND 106EQMCK 107OFP 108LABEL 109SOR2 110COND 111CURV 112LABEL 113PURGE llkCOND 115SOR2 116COND 117CURV 118LABEL 119PURGELBL8,REPEAT $ LBL11,360 $ ERROR1 $ //NoT/TEST/REPEAT $ ERROR5,TEST $ LBL8$ CASECC,UGV,KELM,KDICT,ECT,EQEX lN,GPECT,PGG,QG/ONRGYl,DGPFBl/ sTATlcs $ ONRGY1,OGPFB1 ,,,,//S,N,CARONO $ NOMPCF,GROEQ $ CASECC,EQEXIN,GPL,BGPDT,SI L,USET,KGG,GM,UGV,PGG,QG,CSTM/ OQMl/V,Y,OPT=O/V,Y,GRDEQ/NSK IP$ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC, CSTM,MPT,DIT,EQEX IN,SIL,GPTT, EDT,BGPDP, ,QG,UGV,EST, XYCOB,PGG/OPGl ,OQG1,OUGV1,OES1 ,OEFl,PUGV1/STATICS/S,N, NosoRT2/-l/s,N,sTRNFLG $ LBLSTRS,STRESS $ OESl,MPT,CSTM,EST,SIL,GPL/OESIM,OES lG/V,Y,STRESS/ V,Y,NINTPTS $ LBLSTRS $ OESIM/STRESS $ LBLSTRN,STRNFLG $ ,CASECC,CSTM,MPT,OIT,EQEXIN ,SIL,GPTT,EDT,BGPDT, ,,UGV,EST, ,/ ,,,OESIA,,/STATICS//l $ LBLSTRN,STRAIN $ OESIA,MPT,CSTM,EST,SIL,GPL/OES lAM,OESIAG/V,Y,STRAIN/ V,Y,NINTPTS $ LBLSTRN $ OESIA/STRNFLG $ 2.1-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 120COND 121SOR3 122PARAM 123COND 124OFP 125SCAN 126OFP 127JUMP 128LABEL 129oFP 130SCAN 131OFP 132LABEL 133OFP 134XYTRAN 135XYPLOT 136JUMP 137LABEL 138PURGE 139COND 1400PTPR2 141EQUIV 142COND 143LABEL 144OFPLBL17,NosoRT2 $ ouGvl,oPGl,oQGl,oEFl,oEsl,/ouGv2 ,0PG2,0QG2,0EF2,0ES2, $ //suB/pRTsoRTz/NosoRT2/I $ LBLSORT1,PRTSORT2 $ 0UGV2,0PG2,0QG2,0EF2,0ES2,//S,N, CARDNO $ CASECC,0ES2,0EF2/OESF2/RF $ 0ESF2,,,,,//S,N,CARDNO $ LBLXYPLT $ LBLSORT1 $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N,CARDNO $ CASECC,OESl,OEFl/OESFl/RF $ OESF1,,,,,/lS,N,CARDNO $ LBLXYPLT $ OESIM,OESIG,OESIA,OESIAM,OESIAG,//S,N, CARDNO $ xYcDB,oPG2,oQG2,ouGv2,oEs2,oEF2/xYPLTT/TRAN/PsET/s,N, PFILE/S,N,CARONO $ XYPLTT// $ DPLOT$ LBL17$ ouGv2/NosoRT2 $ LBLOFP,COUNT $ OPTPl,OESl,EST/OPTP2,ESTl/S,N,PRlNT/TSTART/S,N,COUNT/S, N, CARONO $ EsTl,EsT/ALwAYs/oPTP2,0PTPl/ALwAYs $ LOOPENO,PRINT $ LBLOFP $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N,CARDNO $I 2.1-6(05/30/86)\nSTATICANALYSIS I RIGIDFORMAT DMAPLISTING APRILIg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT I LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING lk5SCAN 146OFP 147OFP 148LABEL 149CONO 150PLOT 151PRTMSG )52LABEL 153LABEL 154COND 155REPT 156JUMP 157LABEL 158PRTPARM 159LABEL 160PRTPARM 161LABEL 162PRTPARM 163LABEL 164PRTPARM 165LABELCASECC,OESl,OEF1/OESFIX/RF $ OESFIX,,,,,//S,N;CARDNO $ OESIM,OESIG,OESIA,OESIAM,OESIAG,//S,N,CARONO $ OPLOT$ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT,EQEXIN,SI P,PUGVl,,GPECT,OESl/ PLoTx2/NsIL/LuSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ LOOPENO $ FINIS,COUNT $ LOOPTOP,360 $ FINIS$ ERROR1 $ //-l/STATICS $ ERROR2 $ //-2/sTATlcs $ ERROR3 $ //-3/sTATlcs $ ERROR4 $ //-4/sTATlcs s ERROR5 $ 166PRTPARM //-5/STATlcs $ 167LABEL FINIS$ 168PURGE OUMMY/ALWAYS $ 169LABEL LBLINT02 $ 170CO14PON LBLINT01,SYS21 $ 2.1-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 224LABEL LBLINT1 $ 225END $ 2.1-8(05/30/86)\nSTATICANALYSIS 2.1.2 Description ofImportant DMAPOperations forStaticAnalysis Note:TheDMAPsequence forstaticanalysis involves theuseofparameters INTERACT and ml(seeSection 2.1.5), Theseparameters areofrelevance onlywhentheprimary purpose oftheuseristomakeinteractive restart runs.(Thetwoparameters arethenspecified via thePARAMcardintheBulkDataDeck.) However, thesetwoparameters arenotrequired for normalnon-interactive batchruns.Consequently, therigidformatDMAPlisting shownin Section 2.1.1wasgenerated bynotspecifying theseparameters (viathePARAMbulkdata card).AS aresult., the COMPOFnd COMPONinstructions usingtheseparameters assumea valueofOfortheseparameters (seeVolumeI,Section 5.7). 6.COMPOFF causestheDMAPcompiler tocompile thenextinstruction (DMAPNo.7)asthe parameter INTERACT isO(seeNoteabove). 8.COMPONcausestheDMAPcompiler toskipthecompilation ofthenextinstruction (DMAPNo.9, notshown)astheparameter INTERACT isO(seeNoteabove). 10.CklMPOFF causestheDMAPcompiler tocompile allofthefollowing instructions through LABEL LBLINT02 (DMAPNos.11through 169)astheparameter SYS21isO(seeNoteabove). 11,GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. 12.PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. 13.GP2generates Element Connection Tablewithinternal indices. 16.GotoDMAPNo.24iftherearenostructure plotrequests. 17.PLTStrtransforms userinputintoaformusedtodrivethestructure plotter. 18,PRTMSGprintserrormessages associated withthestructure plotter. 21.GotoDMAPNo.24ifnoundeformed structure plotsarerequested, 22.PLOTgenerates allrequested undeformed structure plots. 23.PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. 25.GP3generates StaticLoadsTableandGridPointTemperature Table. 27.TA1generates element tablesforuseinmatrixassembly andstressrecovery. 29.GotoDMAPNo.163andprintErrorMessage No.4ifnoelements havebeendefined. 31.i3PTPRlperforms phaseoneproperty optimization andinitialization check. 32.Beginning ofloopforproperty optimization, 33.GotoDMAPNo,48iftherearenostructural elements. 36.‘EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly,by theEMAmodule. 37.GotoDMAPNo.39ifnostiffness matrixistobeassembled. 38.EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. 41.GotoDMAPNo.43ifnomassmatrixistobeassembled. 42.EMAassembles massmatrix[Mgg]. 44.GotoDMAPNo.48ifnoweightandbalance information isrequested. 45.GotoDMAPNo.159andprintErrorMessage No.2ifnomassmatrixexists. 2.1-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 46.GPWGgenerates weightandbalance information. 47.klFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting.m 49. 50. 51. 54. 55. 56. 59. 61. 62, 63. 65. 66. 67.Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.52ifnogeneral elements exist. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. Beginning ofloopformultiple constraint sets. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.161andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.64ifgeneral elements arepresent, GotoDMAPNo.64ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities, flFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.69iftheMPCsetforthecurrent passisunchanged fromthatoftheprevious pass. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn] and solvesformultipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 68.MCE2partitions stiffness matrix [Kgg]= andperforms matrixreduction [Knn]=[Knm]+[G:][\\n +[n][Gm] 70.Equivalence [Knn] 71.GotoDMAPNo.73to[Kfflifnosingle-point constraints ifnosingle-point constraints exist. 72.SCE1partitions outsingle-point constraints [Knn]= [1fy- , Ksf1Kss 74.Equivalence [Kff] 75.GotoDMAPNo.77to[Kaa]ifnoomitted coordinates ifnoomitted coordinates exist. 2.1-10(05/30/86)+[G;][Km][Gm]. exist. exist.1\nSTATICANALYSIS 76.SMP1partitions constrained stiffness matrix [KIK [Kff]=‘a+N ‘oaI’00 solvesfortransformation matrix [Gol=-[Kool-l[Koal andperforms matrixreduction [Kaal=[Kaal+[K~al[Gol . 78.Equivalence [Kaa]to 79.GotoDMAPNo. 81if 80.RBMG1 82.RBMG2 83.GOto 84.RBMG3partitions out[KLL]ifnofree-body supports exist. nofree-body supports exist. free-body supports [1KkkIKgr [Kaa]= –+– . ‘rtI‘rr decomposes constrained stiffness matrix[KLB]=[LLL][ULR]. DMAPNo.85ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-[KLJ1[Kkr] , calculates rigidbodycheckmatrix [xl=[Krrl+[K;rl[Dl andcalculates rigidbodyerrorratio e= T14Tx. Krr 86.SSG1generates staticloadvectors {Pg}. 87.Equivalence {Pglto{pi}ifnoconstraints areaPpliedO 88.GotoDMAPNo.90ifnoconstraints areapplied. 89.SSG2applies constraints tostaticloadvectors HPn {Pg}= —–,{Pn}={~n}+[G;]{pml , Pm 2.1-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS (Pf}={Pf}-[KfJ{YJ , (Pa}={;a}+[G:]{PO}, andcalculates determinate forcesofreaction {qr}=-{Pr}-[DT]{PLI. 91.SSG3solvesfordisplacements ofindependent coordinates {ui}=[KIL]-l{Pl} , solvesfordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV) andresidual coordinates {6PL}={Pi}-[Kli]{ug}vector errorratioforindependent 9 {u:}{\u0026Pk} ‘t❑ {P:}{ui} andcalculates residual vector(RU@V) andresidual vectorerrorratioforomitted coordinates {tSPo}={Po}-[Koo]{u:l , {u:){fsPo?= ‘o {P:}{u:} 92.GotoDMAPNo.95ifresidual vectors arenottobeprinted. 93.MATGPR printstheresidual vectorforindependent coordinates (RULV), 94.MATGPR printstheresidual vectorforomitted coordinates (RUOV), 96.SDR1recovers dependent displacements H‘k={Ua}, —— ‘r HUa ——={Uf}, ‘o{Uo}=[Go]{ual +{u:}, H‘f——❑ {Un}, Y5 2,1-12(05/30/86)\n97. 98, 99. 101. 103. 104, 105. 106. 107. 109. 110. 111. 114. 115. 116. 117. 120. 121. 123. 124.{um}=[Gm]{un} ,STATICANALYSIS H‘n—.={Ugl Um andrecovers single-point forcesofconstraint {q5}=-{p~}+[KJ{uf} +[K5l{y~}. GotoDMAPNo.102ifallconstraint setshavebeenprocessed. GotoDMAPNo.54ifadditional setsofconstraints needtobeprocessed. GotoDMAPNo.157andprintErrorMessage No.1asthenumberofconstraint setsexceeds 360. GotoDMAPNo.165andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. GPFDRcalculates thegridpointforcebalance (OGPFB1) andelement strainenergy (ONRGyl) forrequested sets. OFPformats thetablesprepared byGPFDRandplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.108ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmoment equilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. !dFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates theelement forces(!3EFI)andstresses (PES1)andprepares loadvectors (OPGl), displacement vectors (OUGVl) andsingle-point forcesofconstraint (OQGl)foroutput andtranslation components ofthedisplacement vectors (PUGV1). GotoDMAPNo.112ifelement stresses inmaterial coordinate systemandstresses atthe connected gridpointsarenottobecalculated. CURVcalculates element stresses inmaterial coordinate system(!JESIM) andstresses atthe connected gridpoints(9ES1G). GotoDMAPNo.118ifelement strains/curvatures arenottobecalculated. SDR2calculates element strains/curvatures (!i3ESlA). GotoDMAPNo.118ifelement strains/curvatures inmaterial coordinate systemand strains/curvatures attheconnected gridpointsarenottobecalculated. CURVcalculates element strains/curvatures inmaterial coordinate system (OESIAM) and strains/curvatures attheconnected gridpoints(!JESIAG). GotoDMAPNo.137iftherearenorequests foroutputsortedbygridpointnumberor element number. SDR3prepares requested outputsortedbygridpointnumberofelement number. GotoDMAPNo.128ifprinted outputsortedbygridpointnumberorelement numberisnot required. @tPformats thetablesprepared bySDR3foroutputsortedbygridpointnumberorelement numberandplacesthemonthesystemoutputfileforprinting. 2.1-13(05/30/86)I\n1 DISPLACEMENT RIGIDFORMATS 125. 126, 127, 129. 130. 131. 133. 134. 135. 136. 139. 140. 141. 142. 144. 145. 146. 147. 149. 150. 151. 154, 155. 156, 158. 160. 162,SCANexamines theelement stresses andforcescalculated bySDR3andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.132. 13FPformats thetablesprepared bySDR2foroutputsortedbysubcase numberandplacesthem onthesystemoutputfileforprinting. SCANexamines theelement stresses andforcescalculated bySOR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. @FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. 13FPformats thetablesprepared byCURVandSDR2foroutputsortedbysubcase numberand placesthemonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPL13Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.subcase. GotoDMAPNo. 148. GotoDMAPNo.143ifthereisnophasetwoproperty optimization. 0PTPR2performs phasetwoproperty optimization. Equivalence EST1toESTand0PTP2toOPTP1. GotoDMAPNo.153ifnoadditional outputistobeprinted forthisloop. OFPformats thetablesprepared bySDR2foroutputsortedbysubcase numberandplacesthem onthesystemoutputfileforprinting. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. !3FPformats thetablesprepared byCURVandSDR2foroutputsortedbysubcase numberand placesthemonthesystemoutputfileforprinting. GotoDMAPNo. PLOTgenerates PRTMSGprints generated. Goto Goto Goto Print Print PrintDMAPNo. DMAPNo. DMAPNo.152ifnodeformed structure plotsarerequested. allrequested deformed structure andcontour plots. plotter data,engineering data,andcontour dataforeachdeformed 167andmakenormalexitifproperty optimization iscomplete. 32ifadditional loopsforproperty optimization areneeded. 167andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No,3andterminate execution. 2.1-14(05/30/86,plot\nSTATICANALYSIS 164.PrintErrorMessage No.4andterminate execution. ●166.PrintErrorMessage No.5andterminate execution. 170.C0MP$3Ncausesthe!3MAPcompiler toskipthecompilation ofal through LABELLBLINTOI (DMAPNos.171through 223,notshown (seeNoteatthebeginning ofthissection).ofthefollowing instructions asthep~rameter SYS21isO 2.1-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.1.3OutputforStaticAnalysis Thefollowing printed output, sortedbyloads(S9RT1) orbygridpointnumberorelement number(S!dRT2), mayberequested forStaticAnalysis solutions: 1.Displacements andcomponents ofstaticloadsandsingle-point forcesofconstraint at selected gridpointsorscalarpoints. 2.Forcesandstresses inselected elements. 3.Strains/curvatures inselected elements (onlyforTRIA1, IRIA2,QUAD1andQUAD? elements). Thefollowing plotter outputmayberequested: 1.Undeformed anddeformed plotsofthestructural model. 2.Contour plotsofstresses anddisplacements. 3.X-Yplotofanycomponent ofdisplacement, staticload,orsingle-point forceof constraint foragridpointorscalarpointversussubcase. 4.X-Yplotofanystressorforcecomponent foranelement versussubcase. 2.1.4CaseControl DeckforStaticAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis: 1.Aseparate subcase mustbedefined foreachuniquecombination ofconstraints andstatic loads. 2.Astaticloading condition mustbedefined for(notnecessarily within) eachsubcase withaLOAD,TEMPERATURE(L!3AD), orDEF!3RMselection unlessallloading isspecified with gridpointdisplacements onSPCcards. 3.AnSPCsetmustbeselected for(notnecessarily within) eachsubcase, unlessthemodel isaproperly supported freebody,orallconstraints arespecified onGRIOcards, ScalarConnection cards,orwithGeneral Elements. 4,Loading conditions associated withthesamesetsofconstraints shouldbeincontiguous subcases inordertoavoidunnecessary looping. 5.REPCASE maybeusedtorepeatsubcases inordertoallowmultiple setsofthesame outputitem. 2.1.5Parameters forStaticAnalysis Thefollowing parameters areusedinStaticAnalysis: 2.1-16(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9.STATIC ANALYSIS ASET@UT -optional. Apositive integer valueof——— datiiblocktobegenerated bytheGP4module. Athisparameter causestheASEToutput negative integf;r vdlueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTffSPC -reserved forfutureoptional use.Thedefault valueis-1...___ C@UPMASS -CPllAR,CPRf)D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint—— aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCFf3RLt. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. INTERACT -optional. Thisparameter,—— whentheprimary purpose oftheuserliketheSYS21parameter, isofrelevance only istomakeinteractive restart runs.Insucha case,theinteger vlueofthisparameter mustbesetto-1(viaaPARAMbulkdatacard) inbotht.hcbi}thcheckpoint run(thatprecedes theinteractive restart run)aswellas intheinteractive rest.~rt run.Ifnotsospecified viaaPARAMbulkdatacard,the CJ3MP(CIFF andC@MPONinstructions intheDMAPsequence thatusethisparameter assumea valueofOforthisparameter (seeVolumeI,Section 5.7). jRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following eachexecution oftheSSG3module. ~INTPTS -optional. Apositive integer valueofthisparameter specifies thenumberof closest independent pointstobeusedintheinterpolation forcomputing stresses or strains/curvatures atgridpoints(onlyforTRIA1,TRIA2,QUAD1andQUAD2elements). A negative integer valueorOspecifies thatallindependent pointsaretobeusedinthe interpolation. Thedefault valueisO. (4PT-optional. Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCF@RCE, Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. 2.1-17(05/30/86)\n10. 11, 12. 13. 14. 15,STRAIN-optional. ThisDISPLACEMENT RIGIDFORMATS parameter controls thetransformat onofelement strains/curvatures tothematerial coordinate system(onlyforTRIA1,TRIA2,QUAD1and QUAD2elements). Ifitisapositive integer, thestrains/curvatures fortheseelements aretransformed tothematerial coordinate system. Ifitiszero,strains/curvatures at theconnected gridpoints arealsocomputed inaddition totheelement strains/curvatures inthematerial coordinate system. Anegative integer vtilueresults innotransformation ofthestrains/curvatures. Thedefault valueis-1. STRESS-optional. Thisparameter controls thetransformation ofelement stresses to thematerial coordinate system(onlyforTRIA1,TRIA2,QUAD1andQUAD2elements). Ifit isapositive integer, thestresses fortheseelements aretransformed tothematerial coordinate system. Ifitiszero,stresses attheconnected gridpointsarealso computed inaddition totheelement stresses inthematerial coordinate system. A negative integer valueresults innotransformation ofthestresses. Thedefault value is-1, SURFACE -optional. Thecomputations oftheexternal surface areasforthe—— two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. SYS21-optional. Thisparameter, liketheINTERACT parameter, isofrelevance only whentheprimary purpose oftheuseristomakeinteractive restart runs.Insucha case,theinteger valueofthisparameter mustbesetto-1(viaaPARAMbulkdatacard) intheinteractive restart run(thatfollows abatchcheckpoint run).Ifnot so specified viaaPARAMbulkdatacard,theCOMPOFF andCOMPONinstructions intheDMAP sequence thatusethisparameter assumeavalueofOforthisparameter (seeVolumeI, Section 5.7). VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof—-. thisparameter whentheyaregenerated intheEMAmodule. 2.1-18(05/30/86)\nSTATICANALYSIS 2.1.6Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing lines substructure analyses. Phase1:5,56,oftheStaticAnalysis, RigidFormat1,areALTERed forautomated 78-85,87-153 Phase2:5,11-11,14-24,28-29,35-35,49-52,59-64,103-153 Phase3:78-85,88-95,96 IfAPPDISP,SU8Sisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.1.7RigidFormatErrorMessages fromStaticAnalysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis rigid format. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. STATICANALYSIS ERRORMESSAGE NO.1-ATTEMPT TOEXECUTE MORETHAN360L!30PS. Anattempt hasbeenmadetousemorethan360different setsofboundary conditions ormorethan 360passesintheoptimization loophavebeenattempted. Thisnumbermaybeincreased byALTERing theREPTinstruction following SDR1intheformercaseandtheREPTinstruction following thelast PRTMSGinstruction inthelattercase. STATICANALYSIS ERRklRMESSAGE NO.2-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATIONS, Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS ERRORMESSAGE NO.3-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP131NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUP@RT, OMITorGRDSETcards,or grounded onScalarConnection cards. STATICANALYSIS ERRORMESSAGE N@.4-NOELEMENTS HAVEBEENDEFINED. Noelements havebeendefined witheitherConnection cardsorGENELcards. STATICANALYSIS ERRORMESSAGE NO.5-ALOOPING pROBLEM RUNONANON-LOOpING SUBSET. Aproblem requiring boundary condition changes wasrunonsubset1or3.Theproblem shouldbe restarted onsubsetO. 2.1-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.1-20(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.2STATICANALYSIS WITHINERTIA RELIEF 2.2.1DMAPSequence forStaticAnalysis WithInertia Relief RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.oNASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NOOECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GPI 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND ?1PLTSET 12PRTMSG 13PARAM lkPARAN 15COND 16PLOT 17PR’TMSG 8LABEL 19GP3 20TA1 21CONDDISP02 -STATIC ANALYSIS WITHINERTIA RELIEF -APR.1986$ ALL$ QG=APPENO/PGG=APPEND/UGV=APPEND/GMESAVE/KNN=SAVE/MNN=SAVE $ //MPY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM, BGPOT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//~PREs*////JuMppLoT $ PLTSETX,PLTP.4R,GPSETS,ELSETS/JUHPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT S PLTSETX// $ //*Mpy,/pLTFLG/i/l $ //*MPvf/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N ,PLTFLG/S,N,PFILE $ PLOTX1// $ PI$ GEoM3.EQExlN,GEoM2/sLT$GpTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST ,GEl,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S .N,GENEL $ ERROR6,NOSIMP $ 2.2-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 4kPURGE PARAM PARAM EMG PURGE COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM LABEL GP4 COND CONDOGPST/GENEL $ //ADD /NoKGGx/l /o$ //ADD/NoMGG/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,/C, Y,CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAD2/c, Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V, Y.GROPNT=-I/C.Y.WTMASS $ OGPWG,,,,,//S!N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1lA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS lMP$ LBLIIA $ //Mpy/NsKIp/o/o $ LBLII$ CASECC,GEOM4,EQEXIN,GPDT,BGPDT ,CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S, N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ ERROR4,REACT $ 2.2-2(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF eRIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING k5PURGE k6 k7 48 49 50 51 52 53 54CONO PARAH CONO GPSP OFP LABEL EQUIV CONO NCE1 55MCE2 56LABEL 57EQUIV 58 59 60 61 62 63 64 65 66 67 68 69COND SCE1 LABEL EQUIV COND SMP1 LABEL RBMG1 RBMG2 RBMG3 RBMG4 SSG1GM/MPCFl/GO,KOO,LOO,MOO,MOA, PO,UOOV,RUOV/OMIT/KSS,KFS, PS/ SINGLE $ LBL4,GENEL $“ //EQ/GPSPFLG/AUTOSPC/O $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF2 $ USET,RG/Gll $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2s KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,KSS,MFF ,,$ LBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,MFF,,/GO,KAA,KOO, LOO,MAA,MOO,MOA, ,$ LBL5$ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR s KLL/LLL $ LLL,KLR,KRR/DM $ DM,MLL,MLR,MRR/MR $ SLT,BGPOT,CSTM,SIL,EST,MPT, GPTT,EDT,MGG,CASECC,DIT,/PG, ,,,/ LUSET/NSKIP $ 2.2-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70SSG2 71SSGk 72ssG3 73COND 74MATGPR 75MATGPR 76LABEL 77SOR1 78CONO 79REPT 80JUMP 81PARAM 82COND 83LABEL 84CDND 85EQMCK 86OFP 87LABEL 88SDR2 89OFP 90SCAN 91OFP 92coNo 93PLOTUSET,GM,YS,KFS,GO,DM,PG/QR,PO,PS, PL$ PL,QR,PO,MR,MLR,OM,MLL,MOO,MOA,GO,USET/pL I,pO~/OMT $ LLL,KLL,PLl,LOO,KOO,POl/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/NSKIP/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS ,KFS,KSS,QR/UGV,PGG,QG/NSKIP/ sTATlcs $ LBL8,REPEAT $ LBL1l,360$ ERROR2 $ //*NoTf\u003c/TEsT/REpEAT $ ERROR5,TEST $ LBL8$ NOMPCF,GRDEQ $ CASECC, EQEXIN,GPL,BGPDT,SIL, USET,KGG,GM,UGV,PGG,QG,CSTM/ OQMl/V,Y,OPT=O/V,Y,GRDEQ/NSK 1P$ OQMl,,,,,//S,N,CARDNO $ NDMPCF $ CASECC,CSTM,MPT,DIT,EQEXIN, SIL,GPTT,EDT,BGPDP, ,QG,LIGV, EST,,PGG/ OPG1,OQG1,OUGV1,OESI,OEF1, PUGV1/fSTATICS\u003c $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N ,CARDNO $ CASECC,OESl,OEF1/OESFl/*RF~: $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1, ,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ 2.2-4(05/30/86)"},"title":"User's Manual P3"},"/docs/users/users_manual_004/":{"data":{"":"STATICANALYSIS WITHINERTIA RELIEF eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94PRTMSG PLoTx2// $ 95LABEL P2$ g6JUMP FINIS$ 97LABEL ERROR]$ 98PRTPARM //-1/lNERTIA $ 99LABEL ERROR2$ 100PRTPAR!4 //-2/lNERTIA $ 101LABEL ERROR3 $ 102PRTPARM //-3/lNERTIA~’r $ 103LABEL ERROR4 $ 104PRTPARM //-4/lNERTIA $ m105LABEL ERROR5 $ 106PRTPARM //-5/\u003e~lNERTIA $ 107LABEL ERROR6 s 108PRTPARM //-6/:\u003clNERTIA~~ $ 109LABEL FINIS$ 110PURGE DUM!4Y/ALWAYS $ 111END $ 2.2-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.2,2Description ofImportant DMAPOperations forStaticAnalysis withInertia Relief 5,GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers.a 6.PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. 7.GP2generates Element Connection Tablewithinternal indices, 10,GotoDMAPNo.18iftherearenostructure plotrequests, 11.PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. 12.PRTMSGprintserrormessages associated withthestructure plotter. 15.GotoDMAPNo.18ifnoundeformed structure plotsarerequested, 16.PL17Tgenerates allrequested undeformed structure plots. 17.PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. 19.GP3generates StaticLoadsTableandGridPointTemperature Table. 20.TA1generates element tablesforuseinmatrixassembly andstressrecovery. 21.GotoDMAPNo.107andprintErrorMessage No.6iftherearenostructural elements. 25,EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. 27.GotoDMAPNo.’29ifnostiffness matrixistobeassembled. 28.EMAassembles stiffness matrix[K\u0026]andGridPointSingularity Table. 30.GotoDMAPNo.97andprintErrorMessage No,1ifnomassmatrixistobeassembled. 31.EMAassembles massmatrix[Mgg]. 32.GotoDMAPNo.35ifnoweightandbalance information isrequested. 33.GPWGgenerates weightandbalance information. 34.@FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. 36.Equivalence [Kg]to[Kgg]ifnogeneral elements exist. 37.GotoDMAPNo.39ifnogeneral elements exist, 38.SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. 41.Beginning ofloopformultiple constraint sets. 42.GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug} =Oandformsenforced displacement vector{Ys}. 43.GotoDMAPNo.10land printErrorMessage No.3ifnoindependent degrees offreedom are defined. 44.GotoDMAPNo.103andprintErrorMessage No.4ifnofree-body supports exist. 46.GotoDMAPNo.51ifgeneral elements arepresent. 2.2-6(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 48. 49. 50. 52. 53. 54. 55. 57. 58. 59. 61. 62. 63.GotoDMAPNo.51ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. !3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.56iftheMPCsetforthecurrent passisunchanged fromthatoftheprevious pass. MCEIpartitions multipoint constraint equations [Rgl=[RmRnl andsolvesfor . multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knn]=[iinn]+[G$[\\nl +[nl[Gml +[Gl[$JIGml and [Mnn]=[;nn]+[Gj[Mmnl +[M;nl[Gml +[G;IIMJIGMI. Equivalence [Knnlto[Kff]and[Mnnlto[Mff]ifnosin91e-Point constraints exist” GotoDMAPNo.60ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=–+–and [1[Mnn]=‘ff‘fs ‘SfI‘ss ‘SfI‘ss Equivalence [Kff]to[Kaaland[Mff]to[Maalifnoomitted GOtoDMAPNo.64ifnoomitted coordinates exist. SMP1partitions constrained stiffness [1lKao [Kffl =~~K– and oa00 solvesfortransformation matrix[Go]andmassmatrices IMIMao [Mff]=\u0026a+— ‘oa1’00 L. coordinates exist. =-[Koo]-l[Koa] andperforms matrixreductions [Kaal=[iaal+[Kal[Gol 2.2-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS and 65.RBMG1 66.RBMG2 67.RBMG3[Maa]❑ [;aa]+[Ma][Go] +[G][Moa] +[G~][Moo][Go] . partitions outfree-body supports decomposes constrained stiffness matrix[Klg]=[LIL][ULL], formsrigidbodytransformation matrix [D]=-[KLl]-l[Kir] , calculates rigidbodycheckmatrix [X]=[Krr]+[K:r][D] andcalculates rigidbodyerrorratio =x l-l-%Krr 68.RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mrl[Dl +[DTl[MLrl +[DTIIMLLIIDI. 69.SSG1generates staticloadvectors {Pg}. 70.SSG2applies constraints tostaticloadvectors HEn{Pg}= —– ,{Pnl={~n}+[G:]{Pm}, Pm 11‘f{Pn}’ —– ,{Pf}={Pf}-[Kfs]{ys} , P5 [1ia {Pf}= —– ,{Pa}={Pa}+[G;]{PO}, P. HP {Pa}=—L- Pr andcalculates determinate forcesofreaction {qr}=-{Pr}-[DT]{Pi}. 2.2-8(05/30/86)\n71. 0 72, 73. 74. 75. 77.SSG4calculates inertiaSTATICANALYSIS WITHINERTIA RELIEF loadsandcombines therewith staticloads (‘E‘r)and{P]I={Pil+[M][D]+[M][mr]-l{qr} ‘p:’={’o’+~“J[GJ+[MqH“[mr]-’{qr’SSG3solvesfordisplacements ofindependent coordinates {uL}=[KLL]-l{P:} , solvesfordisplacements ofomitted coordinates {u:}=[Kool-b) , calculates residual vector (RULV)andresidual vector errorratioforindependent coordinates {u:}{dP:} ‘L= {P:} andcalculates residual vector(RUOV)and coordinates {6P;}={P:}- -r{Ui} residual vectorerrorratioforomitted Koo]{U:}, {U:}{6P:} F. -0 GotoDMAPNo.76ifresidual vectors MATGPRprintstheresidual vectorfor MATGPRprintstheresidual vectorfor SDR1recovers dependent displacementsarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). H‘L={u,{uo}=[Go]{ua} +{u:}\u003e –u;a HUa NUf ——={Uf},——. {Un}, Y5‘o uUn {um}=[Gm]{un} ,––={Ugl urn 2.2-9(05/30/86)\n78. 79. 80. 82. 84. 85. 86. 88. 89. 90. 91. 92. 93. 94. 96. 98. 100. 102. 104. 106. 108.DISPLACEMENT RIGIDFORMATS andrecovers single-point forcesofconstraint {q5}=-{P51+[K;~]{Uf}+[Kss]{Ys}. GotoDMAPNo,83ifallconstraint setshavebeenprocessed. GotoDMAPNo.41ifadditional setsofconstraints needtobeprocessed. GotoDMAPNo.99andprintErrorMessage No.2asthenumberofconstraint setsexceeds 360. GotoDMAPNo.105andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. GotoDMAPNo.87ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. OFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates element forces(OEFl)andstresses (13ES1)andprepares loadvectors (f3PGl), displacement vectors (OUGVl), andsingle-point forcesofconstraint (k3QGl)foroutputand translation components ofthedisplacement vector(PUGV1). !3FPformats thetablesprepared bySDR2andplacesthereon thesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo. PLOTgenerates PRTMSGprints generated. GotoDMAPNO.95ifnodeformed structure plotsarerequested. allrequested deformed structure andcontour plots. plotter data,engineering data,andcontour dataforeachdeformed plot 109andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. PrintErrorMessage No.6andterminate execution. 2.2-10(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 2.2.3OutputforStaticAnalysis withInertia Relief The 1. 2. 3. 4. 5. The 1. 2.following output mayberequested forStatic Analysis withInertia Relief: Displacements atselected gridpoints duetothesumoftheapplied loadsandthe inertia loads. Nonzero components oftheapplied static loadsatselected gridpoints. Reactions onfree-body supports duetoapplied loads (single-point forces of constraint). Forces andstresses inselected elements duetothesumof 1oads. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model. Contour plotsofstresses anddisplacements.theapplied loadsandinertia 2.2.4CaseControl DeckforStaticAnalysis withInertia Relief Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis with Inertia Relief: 1. 2. 3, 4. 5.Aseparate subcase mustbedefined foreach loads. Astaticloading condition mustbedefined withaLllADselection.uniquecombination ofconstraints andstatic for(notnecessarily within) eachsubcase AnSPCsetmaybeselected onlyifusedtoremovegridpointsingularities orsome,but notall,ofthefreebodymotions. Atleastonefreebodysupport mustbeprovided with aSUPORTcardintheBulkDataDeck. Loading conditions associated withthesamesets subcases inordertoavoidunnecessary looping. REPCASE maybeusedtorepeatsubcases inorder outputitem. 2.2.5Parameters forStaticAnalysis withInertia Reliefofconstraints shouldbeincontiguous toallowmultiple setsforthesame Thefollowing parameters areusedinStaticAnalysis withInertia Relief: 2.2-11(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9. 10.DIsPLACEMENT RIGIDFORMATS ASETliMJT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis(). AUT~SPC -reserved forfutureoptional use.Thedefault valueis-1. CfJUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelelllents thatinclude bending stiffness. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCF@RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. WeightGenerator to printed, IRES-optional. AApositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe positive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. 13PT-optional. Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCFfJRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdata WTMASS-optional. Thetermsofthemass thisparameter whentheyaregenerated incardfordetails. matrixaremultiplied bytherealvalueof theEMAmodule. 2.2-12(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 2.2.6Automatic ALTERsforAutomated Multi-stage Substructurinq aThefollowing linesoftheStaticAnalysis withInertia Relief, RigidFormat2,areALTERed in automated substructure analyses. Phase1:4,44-44,65-68,70-96 Phase2:4,5-5,8-18,21-21,30-30,36-39,46-51,84-98 Phase3:65-68,70-76,77 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTLRslistedabove. SeeVolumeI, Section 5,9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.2.7RigidFormat ErrorMessages fromStatic Analysis withInertia Relief Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis with Inertia Reliefrigidformat. Thetextforeacherrormessage isgivenbelowincapital letters and isfollowed byadditional explanatory material, including suggestions forremedial action. ●STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORCALCULATION OF INERTIA Lf!ADS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.z-ATTEMPT TOEXECUTE MORETHAN360LOllPS. Anattempt hasbeenmadetousemorethan360different setsofboundary conditions. Thisnumber maybeincreased byALTERing theREPTinstruction following SDR1. STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE ND.3-NoINDEPENDENT DEGREES OFFREED17M HAVE BEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP$31NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,YJPORT,OMITOrGRDsETcards,Or grounded onScalarConnection cards. STATJCANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.4-FREE-BODY SUPP@RTS AREREQUIRED. Astatically determinate setofsupports mustbespecified onaSUPklRTcardinordertodetermine therigidbodycharacteristics ofthestructural model. 2.2-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS STATICANALYSIS WITHINERTIA RELIEFERR13RMESSAGE No.5- SUBSET. Aproblem requiring boundary condition changes wasrunon restarted onsubsetO. STATICANALYSIS WITHINERTIA RELIEFERR13RMESSAGE N@.6-ALOOPING PR@BLEM RUNONAN@N-LO@PING subset1or3,Theproblem shouldbe NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards, I 2.2-14(05/30/86)\nDISPLACEMENT 2.3NORMALMODESANALYSIS 2.3.1DMAPSequence forNormalModesAnalysis RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT3RIGIDFORMATS LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARA14 5GP1 6PLTTRAN ~GP2 8PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM J4PARAfl 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP03-NORMALMODESANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND $ //HPY/CARONO/O/O $ GEOMl,GEDM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ Pl,JU14PPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NS(L/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET\\S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1//$ P1$ GEoM3,EQExIN,GEom2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR4,NOSIMP $ 2.3-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44PURGE PARAII PARAM EMG PURGE CONO EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GPk COND PURGE CONDOGPST/GENEL $ //AoD/NoKGGx/I/o $ //Aoo/NoMGG/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ C,Y,CPROO/C,Y,CPQUADl/C,Y, CPQUAD2/C,Y,CPTRlAl/C,Y,CPTRl A2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //~~MPY*/NSKIP/O/O $ CASECC,GEOM4,EQEXIN,GPDT,BGPOT,CSTM, GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S, N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ KRR,KLR,DM,MLR,MR/REACT/GM/MPCF l/GO/OMIT/KFS/SINGLE/QG/NOSET $ LBL4,GENEL $ 2.3-2(05/30/86)\nNORMALMODESANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45PARAM b6COND 47GPSP 48OFP 49LABEL 50EQUIV 51COND 52mcEl 53MCE2 54LABEL 55EQUIV 56COND 57;CE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65COND 66RBMG1 67RBMG2 68RBMG3 69RBMGk 70LABEL//EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,, ,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,HNN/t4PCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,HNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGI.E $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO, LOO,,,,,$ USET,GO,MFF/t4AA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL ,MLR,MRR $ KLL/LLL $ LLL,KLR,KRR/OM $ Ofl,FILL,MLR,MRR/MR LBL6$ 2.3-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMATOMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING DYNAMICS,GPL,SIL,USET/GPLD,S lLD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR2,NOEED $ //Hpy/NEIGv/I/-l $ KAA,t4AA,MR,DM,EED,USET,CASECC/LAMA,PH lA,Ml,OEIGS/MODES/ S,N,NEIGV $ OEIGS,,,,,//S,N,CARDNO $ FINIS,NEIGV $ LAMA,,,,,//S,N,CARDNO $ USET,,PHIA,,,GO,GM,,KFS,,/PHIG,,QG/l/REl G$ NOMPCF,GRDEQ $ CASECC,EQEXIN,GPL,BGPDT,SIL, USET,KGG,GM,PHIG,LAMA,QG,CSTM/ OQM1/V,Y,OPT=O/V,Y,GRDEQ/-l $ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC,CSTM,MPT,DIT,EQEXI N,SIL,,,BGPDP,LAMA,QG,PHI G,EST,,/ ,OQGl,OPHIG,OESl,OEFl,PPHIG/\u003e?RE lG#~$ OPHIG,OQGl,OEFl,OESl,,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SI P,,PPHIG,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLOfX2// $ P2$ FINIS$ ERROR1 $71DPD 72COND 73PARA!4 74READ 75OFP 76COND 77OFP 78SDR1 79COND 80EQHCK 81OFP 82LABEL 83SOR2 8kOFP 85SCAN 86OFP 87COND 88PLOT 89PRTflsG 90LABEL 91JUMP 92LABEL 93PRTPARM //-1/MoDES $ 2.3-4(05/30/86)\nNORMALMODESANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING gh 95 96 97 98 99 100 10I 102LABEL PRTPARM LABEL PRTPARH LABEL PRTPARtl LABEL PURGE ENOERROR2 $ //-2/HODES $ ERROR3 $ //-3/MODES $ ERRORk $ //-b/tIODES $ FINIS$ DUMMY/ALWAYS $ s 2.3-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.3.2 5, 6. 7. 10. 110 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 42. 44. 46. 47.Description ofImportant DMAPOperations forNormalModesAnalysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests, PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PL@Tgenerates allrequested undeformed structure plots, PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.98andprintErrorMessage No.4iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table, GotoDMAPNo.92andprintErrorMessage No.1ifnomassmatrixisto EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information.beassembled. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [K\u0026]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ugl=O. GotoDMAPNo.96andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.49ifgeneral elements arepresent, GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 2.3-6(05/30/86)\nNORMALMODESANALYSIS 48.!3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 50.Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. 51.GotoDMAPNo.54ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rgl=[RmRnl andsolvesfor multipoint constraint transformation matrix[Gm]❑ -[Rm]-l[Rnj. 53.MCE2partitions stiffness andmassmatrices [KIK [Kgg]=flKm mnmmand [Mgg]=1 MIM ,1A“+~ MmnIMmm andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[Knl[Gml +[Gl[\\ml[Gml and [Mnnl=[inn]+[G;l[Mmnl +[M:nl[Gml +[G;l[Mmml[Gml . 55.Equivalence [Knnlto[Kff]and[Mnn]tO[Mff]ifnosin91e-point constraints exist” 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1Kff/Kfs [1‘ff’‘fs[Knn].—+—and [Mnn]= –+– . KsfIKs~ MsfIMss 59.Equivalence [Kff]to[Kaa]ifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates ‘xiSt” 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix HKIK [Kff]=:K , oa00 solvesfortransformation matrix [Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal=[aal+[Kal[Gol . 63.SMP2partitions constrained massmatrix 2.3-7(05/30/86)\nDISPLACEMENT RIGID r-7 IIM[M rMffl=:-+M~ ‘ oa00L J andperforms matrixreduction 65.Goto 66.RBMG1 67.RBt4G2 68,RBMG3[Maa] DMAPNo.70if partitions out [Kaa]=FORMATS =[iaal+[Mal[Gol +[Gj[Moal +[Gl[Mool[Gol . nofree-body supports exist. free-body supports [:] and[M’J=[?J?]decomposes constrained stiffness matrix[Kgk]=[LLL][ULL]. formsrigidbodytransformation matrix [D]=-[KiL]-l[K1r], calculates rigidbodycheckmatrix [X]=[Krrl+[K;rl[rIl andcalculates rigidbodyerrorratio E. \u0026x. Krr 69.RBMG4formsrigidbodymassmatrix [q.]=[Mrrl+[Mjrl[Dl +[DTl[Mkrl +[DTIIMILIIDI. 71.DPDextracts Eigenvalue Extraction DatafromDynamics datablock. 72.GotoDMAPNo.94andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. 74.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaal{ua} =O, calculates rigidbodymodesbyfinding asquare [mol=[ool[fnrl[$rol isdiagonal andnormalized, computes rigidbody [1DO [Oaol=–~, ‘$romatrix[@ro]suchthat eigenvectors 2.3-8(05/30/86)e ● e\nNORMALMODESANALYSIS calculates modalmassmatrix [Ml=[I$~l[Maal[tIa] 75. 76. 77. 78. 79. 80. 81. 83. 84. 85. 86. 87.andnormalizes eigenvectors according toone 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.ofthefollowing userrequests: f5FPformats thesummary ofeigenvalue extraction information (!JEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.lOOandmakenormalexitifnoeigenvalues werefound. @FPformats theeigenvalues(LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. SDR1recovers dependent components oftheeigenvectors {$.}=[Go]{$al, H4f ——❑ {On} , ‘$sH‘$a ={of} , —— 40 {+m}=[Gml{tIn}, H‘$n——={$91 ‘$M andrecovers single-point forcesofconstraint {qs}=[Kfs]Ti$f}. GotoDMAPNo.82ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (!3QMl)foroutput. OFPformats thetableprepared byEQMCKandplaces itonthesystem output filefor printing. SDR2calculates element forces(OEFl)andstresses (OEsl) andprepares eigenvectors (WHIG) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthe eigenvectors (PpHIG). i3FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses outputthatmeetsthespecifications !3FPformats thescanned outputtable fileforprinting.andforcescalculated bySDR2andgenerates scanned setbytheuser. prepared bySCANandplacesitonthesystemoutput GotoDMAPNo.90ifnodeformed structure plotsarerequested. 2.3-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 88.PLOTgenerates allrequested deformed structure andcontour plots. 89.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 91.GotoDMAPNo.100andmakenormalexit. 93.PrintErrorMessage No.1andterminate execution. 95.PrintErrorMessage No.2andterminate execution. 97.PrintErrorMessage No.3andterminate execution. 99.PrintErrorMessage No.4andterminate execution. 2.3-10(05/30/86)"},"title":"User's Manual P4"},"/docs/users/users_manual_005/":{"data":{"":"NORMALMODESANALYSIS 2.3.3OutputforNormalModesAnalysis ●Eacheigenvalue isidentified withamodenumberdetermined bysorting theeigenvalues by theiralgebraic magnitude. Thefollowing summary oftheeigenvalues extracted isautomatically printed: 1.ModeNumber 2.Extraction Order 3.Eigenvalue 4.RadianFrequency 5.CyclicFrequency 6.Generalized Mass 7.Generalized Stiffness Thefollowing summary oftheeigenvalue analysis performed, usingtheInverse Powermethod, isautomatically printed: 1.Numberofeigenvalues extracted. 2.Numberofstarting pointsused. 3.Numberofstarting pointmoves. 4.Numberoftriangular decompositions. 5.Numberofvectoriterations. 6.Reasonfortermination. (1)Twoconsecutive singularities encountered whileperforming triangular decomposition. (2)Fourshiftpointswhiletracking asingleroot. (3)Al1eigenval uesfoundinthefrequency rangespecified. (4)Threetimesthenumberofrootsestimated inthefrequency rangehavebeen extracted, (5)Alleigenvalues thatexistintheproblem havebeenfound. (6)Thenumberofrootsdesired havebeenfound. (7)Oneormoreeigenvalues havebeenfoundoutside thefrequency rangespecified. (8)Insufficient timeto (9)Unabletoconverge 7.Largest off-diagonal modalfindanother root. masstermandthenumberfailing thecriterion. 2.3-11(05/30/86)\nThefollowing summary ofthe automatically printed:DISPLACEMENT RIGIDFORMATS eigenvalue analysis performed, usingtheDeterminant method, is 1.Numberofeigenvalues extracted. 2.Numberofpassesthrough starting points. 3.Numberofcriteria changes. 4.Numberofstarting pointmoves. 5.Numberoftriangular decompositions. 6.Numberoffailures toiterate toaroot. i’.Reasonfortermination. (1)Thenumberofrootsdesiredhavebeenfound. (2)Allpredictions foreigenvalues areoutside thefrequency rangespecified. (3)Insufficient timetofindanother root. (4)Matrixissingular atfirstthreestarting points. 8.Largest off-diagonal modalmasstermandthenumberfailing thecriterion. 9.Sweptdeterminant function foreachstarting point. Thefollowing summary oftheeigenvalue analysis performed, usingtheGivensmethod, is automatically printed: 1.Numberofeigenvalues extracted. 2.Numberofeigenvectors computed. 3.Numberofeigenvalue convergence failures. 4.Numberofeigenvector convergence failures. 5.Reasonfortermination. (1)Normaltermination. (2)Insufficient timetocalcu”ateeigenvalues andnumber ofeigenvectors requested. (3)Insufficient timetofindadditional eigenvectors. 6.Largest off-diagonal modalmasstermandthenumberfailing thecriterion. Thefollowing summary oftheeigenvalue analysis performed, usingtheTridiagonal Reduction (FEER-FastEigenvalue Extraction Routine) method, isautomatically printed, 1.Numberofeigenvalues extracted. 2.Numberofstarting pointsused. Thiscorresponds tothetotalnumberofrandomstarting andrestart vectors usedbythe FEERprocess. 2.3-12(09;30/83)\nNORMALMODESANALYSIS 3.Numberofstarting pointmoves. NotusedinFEER(setequaltozero). 4.Numberoftriangular decompositions. Alwaysequaltoone,exceptforunshifted vibration problems (rootsstarting fromthe lowestrequested). Inthiscase,amaximum ofthreeshiftsandthreedecompositions are employed toremovepossible stiffness matrixsingularities. 5.Totalnumberofvectoriterations. Thetotalnumberofreorthogonal izations ofallthetrialvectors employed. 6.Reasonfortermination. (0)Normaltermination. (1)Fewerthan.therequested number ofeigenval uesandeigenvectors havebeen extracted, (3)Theproblem sizehasbeenreduced. However, thedesired numberofaccurate eigensolutions specified ontheEIGBorEIGRcardmayhavebeenobtained. A detailed listofthecomputed errorboundscanbeobtained byrequesting DIAG16in theExecutive Control Deck. 7.Largest off-diagonal modalmasstermandthenumberfailing themassorthogonality criterion. Thefollowing outputmayberequested: 1.Eigenvectors alongwiththeassociated eigenvalue foreachmode. 2.Nonzero components ofthesingle-point forcesofconstraint forselected modesat selected gridpoints. 3.Forcesandstresses inselected elements forselected modes. 4.Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputmayberequested: 1.Undeformed plotofthestructural modelandmodeshapesforselected modes. 2.Contour plotsofstresses anddisplacements forselected modes. 2.3.4CaseControl DeckforNormalModesAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Analysis: 1.METH@DmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 2,3-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.Onrestart, thecurrent EIGRcardcontrols theeigenvalue extraction, regardless ofwhat calculations weremadeintheprevious execution. Consequently, whenmakingrestarts witheithertheDeterminant method, theInverse Powermethod ortheTridiagonal Reduction (FEER)method, METHODshouldbechanged toselectanEIGRcardthatavoidsthe extraction ofpreviously foundeigenvalues. Thisisparticularly important following unscheduled exitsduetoinsufficient timetofindalleigenvalues intherangeof interest. 3.AnSPCsetmustbeselected unlessthemodelisafreebodyorallconstraints specified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. 4.Multiple subcases areusedonlytocontrol outputrequests. Asinglesubcase sufficient ifthesameoutputisdesired forallmodes. Ifmultiple subcasesare is are present, theoutputrequests MODESmaybeusedtorepeat several consecutive modes.willbehonored in subcases inordersuccession forincreasing modenumbers, tomakethesameoutputrequest for 2.3.5Parameters forNormalModesAnalysis Thefollowing parameters areusedinNormalModesAnalysis: 1. 2. 3. 4. 5.ASET@UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTR1A2 CPTUBE CPQDPLT, CPTRPLT, ——-l—-—~— —— CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. =-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outplltrequest, MPCF9RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. 2.3-14(05/30/86)\n6.13PT-opt— multipoint MPCFORCE. balance to 7. 8. 9.NORMALMOOESANALYSIS onal.Apositive integer valueofthisparameter causesbothequilibrium and constraint forcestobecalculated fortheCaseControl outputrequest, Anegative integer valueofthisparameter causesonlytheequilibrium force becalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. @2.3.6Optional Diagnostic OutputforFEER Special detailed information related tothegeneration ofthereduced problem size,the elements ofthereduced tridiagonal matrix, computed errorboundsandothernumerical testscanbe obtained byrequesting DIAG16intheNASTRAN Executive Control Deck. Themeaning ofthisinformation isexplained belowintheorderinwhichitappears inthe DIAG16output, ORDER MAXRANK - RED~RDER - 13RTHVCT - USERSHIFT - INTERNAL SHIFT-Theorderoftheunreduced problem (sizeofthe[Kaa]matrix) :~eRmaximum numberofexisting finiteeigensolutions asinitially detected by Theorderofthereduced eigenproblem whichwillbesolvedtoobtainthenumber ofaccurate solutions requested bytheuser Thenumberofpreviously computed accurate eigenvectors ontheeigenvector file whichweregenerated priortoarestart orbytheNASTRAN rigidbodymode generator Theuserspecified shiftafterconversion fromcyclestoradians -squared (used onlyinfrequency problems). Asmallpositive valueautomatically computed toremovesingularities ifthe userhasspecified azeroshift. Otherwise, thenegative oftheusershift (usedonlyinfrequency problems). 2,3-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS SINGULARITY CHECK-PASS:theshifted stiffness matrixisnon-singular -:thenumberofinternal shiftsneededtoremovestiffness matrix singularities TRIDIAGONAL ELEMENTS ROWj,,,-Thecomputed tridiagonal elements ofthereduced eigenmatrix: j-Matrixrow -Diagonal element -Off-diagonal element -Firstestimate ofoff-diagonal element inthenextrow @RTHITER -Thenumberoftimesareorthogonal ization ofatrialvectorhasbeenperformed. MAXPR13J -Themaximum projection oftheabovetrialvectoronthepreviously computed accurate trialvectors (priortothecurrent reorthogonal ization) N@RMALFACT -Thenormalization factorforthereorthogonalized trialvector OPENCORENOTUSEDFEER3-OpencorenotusedbySubroutine FEER3,insingle-precision words FEERQRWELEMENT ,ITER,,RATIO*,PROJ*****:\n-Theinternal eigenvalue numberintheorderofitsextraction byFEER ** -Thenumberofinverse poweriterations performed toextract theassociated eigenvector ofthereduced system(thisisnotaphysical eigenvector) *** -Ifamultiple roothasbeendetected, thenumberoftimesthattheprevious multiple-root, reduced-system eigenvectors havebeenprojected outofthe current multiple-root eigenvector beforerepeating theinverse poweriterations **** -Theabsolute ratioofmaximum, reduced-system eigenvector elements for successive inverse poweriterations ***** -Themaximum projection ofacurrent multiple-root eigenvector onpreviously computed eigenvectors forthesameroot PHYSICAL EIGENVALUE ,,THEORERRORPERCENT, PASS@RFAIL: Theinternal eigenvalue numberintheorderofitsextraction byFEER ** Theassociated physical eigenvalue (Aforbuckling problems, UZforfrequency problems) *** -Theoretical upperboundontherelative eigenvalue error PASS -Thecomputed errorislessthanorequaltotheallowable specified ontheEIGB orEIGRbulkdatacard(default is.001/nwherenistheorderofthestiffness matrix) FAIL -Thecomputed errorisgreater thantheallowable andthismodeisnotaccepted forfurther processing OPENCOREN@TUSEDFEER4-OpencorenotusedbySubroutine FEER4,insingle-precision words FEERCOMPLETE *,,,** Theremaining CPUtimeavailable following decomposition oftheshifted stiffness matrix, inseconds (thetotaltimeisspecified ontheTIMEcardin theExecutive Control Deck) ** Theremaining CPUtime,inseconds aftercompleting Subroutine FEER3 *** -Theremaining CPUtime,inseconds aftercompleting Subroutine FEER4 2.3-16(05/30/86) NORMALMODESANALYSIS ****Thetotaloperation countforFEERafterdecomposition oftheshifted stiffness matrix. Oneoperation isconsidered tobeamultiplication ordivision followed byanaddition 2.3.7TheAPPENDFeature Inrealeigenvalue analysis, itisfrequently necessary toaddneweigenvalues and eigenvectors tothosealready computed inaprevious run.TheAPPENDt’eature (seeSection 9.2.2of theTheoretical Manualfordetails) makesitpossible todothiswithout re-executing theentire problem. Itisavailable whenusingtheInverse Power,Determinant andIridiagonal Reduction (FEER)methods ofeigenvalue extraction. InordertousetheAPPEND feature, theusershould employ thefollowing steps: 1.Request acheckpoint ofaneigenvalue problem byemploying either theInverse Power, Determinant orTridiagonal Reduction (FEER) method. 2.Checktoensurethatatleastoneeigenvalue andoneeigenvector arecomputed inthis runandthattheLAMA(eigenvalue) andPHIA(eigenvector) filesaresuccessfully checkpointed. 3.Restart theproblem bychanging theEIGRcardintheBulkData satisfied:eithertheMETHODcardintheCaseControl Deckand/or Deckandensuring thatthefollowing conditions are a.Thestructural modelandtheconstraint datafortherestart mustbethesameas thatusedinthecheckpoint run, b.Themethodofeigenvalue extraction employed intherestart neednotbethesameas thatusedinthecheckpoint run,buttherangeofeigenvalues specified ontheEIGR BulkDatacardshouldnotinclude theeigenvalues already checkpointed inStepI. c.Iftheuserwishestoretrieve onlyasubsetofthecheckpointed eigenvalues and eigenvectors, aDMAPaltershouldbeemployed intheExecutive Control Decktoreset theparameter NEIGVtothedesired valuebymeansofaPARAMstatement justbefore theREADmoduleintheDMAPsequence, (SeeSection 9.2.2oftheTheoretical Manual fordetails.) 2.3-17(05/30/86)\nDISPLACEMENT RIGIDFORMATS 4.Notethattheeigenvalues andeigenvectors outputbytherestart include thoseretrieved fromthecheckpointed runofStep1.Also,theresulting eigenvectors arenormalized according tothemethodofnormalization specified intherestart. 2.3.8Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheNormalModesAnalysis, RigidFormat3,areALTERed inautomated substructure analyses. Phase1:4,42,65-70,71-91 Phase2:4,5-5,8-18,21.-21,30-30,36-39,44-49,79-93 Phase3:65-70,71-77,78 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.3.9RigidFormatErrorMessages fromNormalModesAnalysis—— Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNormalModesAnalysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. N@RMALMODEANALYSIS ERR13RMESSAGE NO.1-MASSMATRIXREQUIRED FORREALEIGENVALUE ANALYSIS. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. NORMALMODEANALYSIS ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. NORMALMODEANALYSIS ERRORMESSAGE NO.3-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP@INTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,K!PC,SUPORT, OMITorGRDSETcards,or grounded onScalarConnection cards. NORMALM@DEANALYSIS ERRORMESSAGE NO.4-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.3-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.4STATICANALYSIS WITHDIFFERENTIAL STIFFNESS 2.4.1DMAPSequence forStatic Analysis WithDifferential Stiffness RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT ~ LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM bGP1 5CONO 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 1:PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20PARAM 21TA1DISPok-DIFFERENTIAL STtFFNESS ANALYSIS -APR.1986$ ALL$ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SiL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ ERROR3,NOGPDT $ BGPDT,SIL/BGPDP,SIP/LLJSET/S ,N,LUSEP $ GEoM2,EQExlN/EcT $ PCDE//PRESJ’I////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ Pl,JUMPPLjlT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETXi/ $ j/W4PY/PLTFLG/l/i $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSiL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/s,N,pFILE $ PLOTX1// $ PI$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //AND/NOMGG/NOGRAV/V,Y,GRDPNT=- iS ECT,EPT,BGPOT,SIL,GPTT,CSTM/EST, GEl,GpECT+,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ 2.4-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT k LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 4kCONO PURGE PARAH EMG PURGE CONO EMA LABEL CONO EMA LABEL CONO CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL PARAM CASE GP4ERROR1,NOSIMP $ OGPST/GENEL $ //Aoo/NoKGGx/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KO ICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C, Y,COUPMASS/C,Y, CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAD2/c,Y, cPTRiA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ JMPKGG,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOLCT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ JMPMGG $ LBL1,GROPNT $ ERROR4,NOMGG $ BGPOP,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPYf/NSKIP/O/O $ CASECC,/CASEXX/*TRANRESP~/O/NOLOOP $ CASEXX,GEOM4, EQEXIN,GPDT,BGPOT, CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N ,SINGLE/S,N,OMIT/S,N,REACT/S ,N, NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ 2.4-2(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 45COND 46PURGE 47COND 48JUMP 49LABEL 50COND 51PARAM 52COND 53GPSP 54OFP 55LABEL 56EQUIV 57CONO 58MCE1 59MCE2 60LABEL 61EQUIV 62CONCI 63SCE1 64LABEL 65EQUIV 66COND 67SMP1 68LABEL 6gRBMG2ERROR5,NOL $ GM/MPCFl/GO,.KOO,LOO,PO,UOOV,RUOV/OMIT/PS, KFS,KSS,QG, YBS,PBS,KBFS,KBSS,KDFS,KOSS/S INGLE$ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL$ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,, ,$ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAAsKOO,LOO,,,,, $ LBL5s KAA/LLL $ 2.4-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70SSG1 71EQUIV 72COND 73SSG2 74LABEL 75SSG3 76COND 77MATGPR 78MATGPR 79LABEL 80.SOR1 81SOR2 82OFP 83SCAN 8bOFP 85CONO 86PLOT 87PRTMSG 88LABEL 89TA1 90OSMG1 91PARAM 92PARAMSLT,BGPOT,CSTM,SI L,EST,MPT,GPTT, EEIT,MGG,CASEXX,OIT,/ PG,,,,/LUSET/l $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO, PS,PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//Of~ $ LBL9$ USET,,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGl,QG/l/$~OSO $ CASECC,CSTM,MPT,DIT, EQEXIN.SIL,GPTT,EDT, BGPOP,,QG,UGV, EST,,PG/ OPG1,OQG1,OUGV1,OES1,OEF1 ,PUGV1/DSO( $ OUGV1,OPG1,OQG1,OEF1,OES1 ,//S,N,CARDNO $ CASECC,OESl,OEF1/OESFl/*RF~ $ OESF1,,,,,//S,N,CARONO $ P20JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1,,GPECT,OES1 / PL(lTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S, N,PFILE $ PLoTx2// $ P2s ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,S IL,EDT,UGV,CSTM,MPT, ECPT,GPCT,OIT/KOGG/ DSCOSET $ //~~AOOfc/SHIFT/-l/O $ //~’(ADO*/COUNT/ALWAYS=-l/NEVER= 1$ 2,4-4(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS RIGIDFORMATDMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT4 LEVEL2.0NASTRAN OMAPCOMPILER 93PARAMR 94PARAML 95LABEL 96EQUIV 97PARAM 98EQUIV 99COND 100MCF2 101LABEL 102EQUIV 103COND 104SCE1 105LABEL 106EQUIV 107COND 108SMF’2 109LABEL 110ADD 111ADD 112ADD 113COND 114tlPYAll 115MPYAO 116UMERGE 117EQUIV 118CONO//*ADDfi/DsEpsl/o.o/o.o YS//NULL////NOYS $ OUTLPTOP $ PG,PG1/NOYS $ //KLOCK/TO $ KDGG,KDNN/MPCFl $ LBL2D,MPCFI $-SOURCE LISTING $ USET,GM,KDGG ,,,/KDNN,,, $ LBL2D$ KDNN,KDFF/SINGLE $ LBL3D,SINGLE $ USET,KDNN ,,,/KDFF,KDFS,KDSS,,, $ LBL3D$ KDFF,KDAA/OMIT $ LBL5D,0MIT $ USET,GO,t(DFF/KDAA $ LBL5D$ KAA,KDAA/KBLL $ KFS,KDFS/KBFS $ KSS,KDSS/KBSS $ PGOK,NOYS $ KBSS,YS,/PSS/O/l/l/l $ KBFS,YS,/PFS/O/l/l/l $ USET,PFS,PSS/PN/*N$~/F/S $ PN,PGX/MPCFl $ LBL6D,MPCF1 $ 2.4-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORHAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 119UMERGE 120LABEL 121ADD 122EQUIV 123LABEL 124ADO 125RBMG2 126PRTPARM 127PRTPARM 128LABEL 129PARAII 130SSG2 131SSG3 132COND 133MATGPR 134LABEL 135SDR1 136ADD 137DSMGI 138MPYAD 139DSCHK 140COND 141COND 142EQUIV 143REPTUSET,PN,/PGX/G/N/M $ LBL6D$ PGX,PG/PGG/(-l.O,O.O) $ PGG,PG1/ALWAYS $ PGOK$ PGl,/PGO/ $ KBLL/LBLL/S,N,POWER/S,N,OET $ //O/DET $ //0/powERff $ INLPTOP $ //KLocK/TI $ USET,GM,YS,KDFS,GO,,PG1/,PBO, PBS,PBL $ LBLL,KBLL,PBL ,,,/UBLV,,RUBLV,/-l/V,Y,lRES/NDSK lP/S,N, EPSI$ LBL9D,IRES$ GPL,USET,SIL,RUBLV//~’rL $ LBL9D$ USET,,UBLV,,YS,GO,GM,PBS,KBFS ,KBSS,/UBGv,,QBG/l/DSl $ UBGV,UGV/DUGV/(-l.0,0.0) $ CASECC,GPTT,SI L,EDT,OUGV,CSTM,MPT, ECPT,GPCT,DIT/DKDGG/ DSCOSET $ DKOGG,UBGV,PGO/PGll/O/l/l/O $ PGl,PGll,UBGV//C,Y,EPSlO=l .E-5/S,N,DSEPSl/C,Y,NT=10/TO/ T1/S,N,l)ONE/S,N,SHIFT/S,N,COUNT/C,Y,BETAD=4 ~ 00NE,DONE $ SHIFT,SHIFT $ PG,PG1/NEVER/PGll,PGl/ALWAYS/PG l,PG1l/NEVER $ INLPTOP, IOOO$ 2.4-6(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS ●RIGIDFOIW!AT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING lk4TABPT 145LABEL 146ADO 147EQUIV 148EQUIV 149REPT 150TABPT 151LABEL 152sDR2 153OFP 154CONO ●155PLOT 156 157 158 159 160 161 162 163 164 165 166 167 168PRTMSG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARMPGll,PGl,PG,,// $ SHIFT$ DKDGG,KDGG/KDGGl/(-l.0,0.0) $ UBGV,UGV/ALWAYS/KOGGl,KDGG/ALWAYS $ KDGG,KOGGl/NEVER/UGV,UBGV/NEVER $ OUTLPTOP,1000 $ KOGGl,KDGG,UGvs,// $ 00NE$ CASECC,CSTM,HPT,DIT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QBG,UBGV,EST, ,/ ,OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/DSl $ OUBGVl,OQBGl,OEFBl,OESBl,,//S,N, CARONO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SI P,PUBGVI, ,GPECT, OESB1/PLOTX3/NSIL/LUSEP/JUMPPLOT/PLTFLG/S ,N, PFILE$ PLoTx3// $ P3$ FINIS$ ERROR1 $ //-1/DIFFSTIF $ ERROR2 $ //-2/DIFFsTIF $ ERROR3 $ //-3/olFFsTiF $ ERROR4 $ //-4/olFFsTIF $ ERROR5 $ //-5/DIFFsTIF $ 2.4-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 169LABEL FINIS$ 170PURGE OUMMY/MINUSl $ 171END $ 2.4-8(05/30/86)\n2.4.2 4. 5, 6. i’. 10. 11. 12. 15. 16. 17. 19. 21, 22. 25. 27, 28, 30, 31. 33. 34. 35. 36. 38. 39, 40. 43. 44. 45.STATICANALYSIS WITHDIFFERENTIAL STIFFNESS Description ofImportant DMAPOperations forStaticAnalysis withDifferential Stiffness GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoDMAPNo.163andprintErrorMessage No.3ifthereisnoGridPointDefinition Table. PLTTRAN modifies special scalargridpointsinthe8GPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesf-oruseinmatrixassembly andstressrecovery. GotoDMAPNo.159andprintErrorMessage No,1iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo,29ifnostiffness matrixistobeassembled, EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo,32ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.37ifnoweightandbalance information isrequested. GotoDMAPNo.165andprintErrorMessage No.4ifnomassmatrixexists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.41ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. CASEcopiesthefirstrecordofCASECCtoCASEXX. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]tug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.167andprintErrorMessage No.5ifnoindependent degrees offreedom are defined. 2.4-9(05/30/86)\n47. 48. 50. 52. 53. 54. 56. 57. 58. 59. 61. 62. 63. 65. 66. 67. 69.DISPLACEMENT RIGIDFORMATS GotoDMAPNo.49ifnofree-body supports aresupplied. GotoDMAPNo.161andprintErrorMessage No.2. GotoDMAPNo.55ifgeneral elements arepresent. GotoDMAPNo.55ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist, GotoDMAPNo.60ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. MCE2partitions stiffness matrix [1KIK [Kgg]=n+ ‘mn1‘mm andperforms matrixreduction [Knn]=[nn]+[G][Kmn] +[Knl[Gml +[G~l[Kmml[Gml. Equivalence [Knn]to[Kff]ifnosingle-point cOnstt’’aintS eXiSt. GotoDMAPNo.64ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints Equivalence [Kffl GotoDMAPNo.68[1‘ff1‘fs[Knn]= –+— . KsfIKss to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix [1iiIK [Kffl=:~K= ‘ oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . RMBG2decomposes constrained stiffness matrix[Kaa]=[LLI][ULL]. 2.4-10 (05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 70.SSG1generates staticloadvectors {Pg}. 71.Equivalence {Pg}to{Pi}ifnoconstraints areapplied. 72.GotoDMAPNo.74ifnoconstraints areapplied. 73.SSG2applies constraints tostaticloadvectors Hi{pg}.—n– , Pm II;’ {Pn}❑ ;f– , s II{pf}.+_and o 75.SSG3solves fordisplacements {Uk}{Pn}={n}+[G]{Pm} , {Pf}={f}-[Kfs]{Y5} s {PL}={Pa}+[G:]{PO}. ofindependent coordinates =[Kaa]-l{PL} ,‘ solvesfordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {15Pt}={Pg}-[Kaa]{uJ , {uj{fsPR} ‘L= {P}{ug} andcalculates residual vector(RU@V)andresidual vectorerrorratioforomitted coordinates {ISPO}={Po}-[KooI{u~} , {U:}(6PO} ‘o=— ‘ {P:}{u:} 76.GotoDMAPNo.79ifresidual vectors arenottobeprinted. 77.MATGPRprintstheresidual vectorforindependent coordinates (RULV). 78.MATGPRprintstheresidual vectorforomitted coordinates (RUOV). 2.4-11(05/30/86)\n80. 81. 82. 83. 84. 85. 86. 87. 89. 90. 95. 96. 98. 99. 100.-.–..–..-.,-UISPLALMILNI SDR1recovers dependent displacements {uo}=[GO]{UL} +{u:}, 11‘a——={Uf}, U.RIGIDFORMATS H‘f—.={Unl, Ys u {um}❑ [Gm]{un} \u003e Hn={Ug}—. ‘m andrecovers single-point forcesofconstraint {qs}=-{ps}+[K~~l{uf} +[Kssl{ys}. SDR2calculates element forces(OEFl)andstresses (OES1)andprepares loadvectors (OpGl), displacement vectors (k3UGVl) andsingle-point forcesofconstraint (!JQG1)foroutputand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. @FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.88ifnodeformed staticsolution structure plotsarerequested. PLOTgenerates allrequested staticsolution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed static solution plotgenerated. TA1generates element tablesforuseindifferential stiffness matrixassembly. DSMG1generates differential stiffness matrix[Kg]. Beginning ofouter(stiffness adjustment) loopfordifferential stiffness iteration. Equivalence {Pg}to{Pgl}ifnoenforced displacements arespecified. Equivalence [Kg]to[K~n]ifnomultipoint constraints exist. GotoDMAPNo.101ifnomultipoint constraints exist. MCE2partitions differential stiffness matrix [1idIl(d[Kjg]=J“+m ~dIKd mnmm andperforms matrixreductionI 2.4-12 (05/30/86)"},"title":"User's Manual P5"},"/docs/users/users_manual_006/":{"data":{"":"STATICANALYSIS WITHDIFFERENTIAL STIFFNESS 102. 103. 104. 106, 107. 108. 110. 111. 112. 113, 1140 115. 116. 117. 118. 119. 121. 122. 124. 125. 126.[Kn]=[~n]+[G][Kn] +[K\u0026][Gm] +[G~][Km][Gm]. Equivalence [Kn]to[Kf]ifnosingle-point constraints exist. GotoDMAPNo.105ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints r 1 HK$flK:s [Kin]= –+– . Kdid SfSs Equivalence [Kf]to[Ka]ifnoomitted coordinates exist. GotoDMAPNo.109ifnoomitted coordinates exist. SMP2partitions constrained differential stiffness matrix [1id1Kd [Kf]=Qa+w . KdIKd oa00 andperforms matrixreduction [Ka]=[iia]+[Ka]TIGo] +[Go]TIKa]+[Go]TIKo][Go], ADD[Kaa]and[Ka]toform[KL]. ADD[Kf~]and[Ks]toform[Ks]. ADD[Kss]and[Ks]toform[Ks]. GotoDMAPNo.123ifnoenforced displacements arespecified. MPYADmultiplies [Ks]and{Ys}toform{Pss}. MYPADmultiplies [Ks]and{Ys}toform{Pfs}. UMERGEcombines {Pfs}and{P~~}toform{Pn}. Equivalence {Pn}to{P~}ifnomultipoint constraints exist. GotoDMAPNo.120ifnomultipoint constraints exist. UMERGEexpands {Pn}toform{P;}. ADD-{P~}and{Pg}toform{Pgg}. Equivalence {Pgg}to{Pgl}. ADD{Pgllandnothing tocreate{Pgo}. RBMG2decomposes thecombined differential stiffness matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant matrixandelastic stiffness matrix. 2.4-13(05/30/86)ofthecombined dfferential stiffness\nDISPLACEMENT RIGIDFORMATS 127.PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. 128.Beginning ofinner(loadcorrection) loopfordifferential stiffness iteration. 130,SSG2applies constraints tostaticloadvectors {Pf}={+}-[K$s]{Ys} , 131.SSG3solvesfordisplacements ofindependent coordinates forcurrent differential stiffness loadvector {u!}=[K8]-l{P} , andcalculates residual vector (RBULV) andresidual vectorerrorratioforcurrent differential stiffness loadvector b_{u;}T{\u0026P;} ‘1- 132.GotoDMAPNo.134iftheresidual vectorforcurrent differential stiffness solution isnot tobeprinted. 133,MATGPRprintstheresidual vectorforcurrent differential stiffness solution. 135.SDR1recovers dependent displacements forthecurrent differential stiffness solution [1b ‘k{u~}=[Go]{U)+{U;b} , —–={Uf}, Ub o 2.4-14(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 136. 137. 138. 139. 140. 141. 142. 143. 144. 146. 147. 148. 149. 150. 152.Iiu: ={u:}, {u;}=[Gm]{U:},—— Yb s IIUb n={u;}—— “b m andrecovers single:point forces ofconstraint forthecurrent different solutionalstiffness {q!}=-{P:}+[Kf]{u} +[K:fl{Y:} . ADD-{U~}and{Ug}toform{U~}. DSMG1generates differential stiffness matrix[Kg]. MYPADformstheloadvectorforinnerloopiteration {P}911=[6K;9]{U:}+{Pgo}. DSCHKperforms differential stiffness convergence checks. GotoDMAPNo.151ifdifferential stiffness iteration iscomplete. GotoDMAPNo.145ifadditional differential stiffness matrixchanges arenecessary for further iteration. Breaktheprevious equivalence of{Pg}to{Pgl}and{Pgl}to{PgIl} andestablish equivalence of{P911}to{Pgl}. GotoDMAPNo.128foranadditional innerloopdifferential stiffness iteration. TABPTtableprintsvectors {PgIl},{Pgl},and{Pg}. ADD-[6Kg] and[Kg]toform[I$gll. Equivalence {Ulto{Ug}and[Kgll to[Kgl. Breaktheprevious equivalence of[Kglto[Kgll ancl{Ug)to{U}. GotoOMAPNo.95foranadditional outerloopdifferential stiffness iteratic:l. TA8PTtableprints[Kgl], [Kg],and{Ug}. SDR2calculates element forces (OEFB1) andstresses (9ESB1) andprepares displacement vectors (@uBGVl) andsingle-point forcesofconstraint (0Q8Gl) foroutputandtranslation components ofthedisplacement vector(PU8GV1) forthedifferential stiffness solution. 2.4-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 153. 154. 1550 156. 158. 160. 162. 164. 166. 168.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.157ifnodifferential stiffness solution deformed plotsarerequested, PLflTgenerates allrequested differential stiffness solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdifferential stiffness solution deformed plotgenerated. GotoDMAPNo.169andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 2.4-16(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 2.4.3OutputforStaticAnalysis withDifferential Stiffness Thevalueofthedeterminant ofthesumoftheelastic stiffness andthedifferential stiffness isautomatically printed foreachdifferential stiffness loading condition. Iterative differential Iteration termination reasons havethefollowing meanings: 1. 2. 3. 4. 5. Parameter 1. 2. 3.REASONOmeansthestiffness computations areterminated foroneoffivereasons. areautomatically printed inaninformation message. Thesereasons iteration procedure wasincomplete atthetimeofexit.Thisis causedbyeitheranunexpected interruption oftheiteration procedure (i.e.,system abort)ortermination isnotscheduled (fortheotherfourreasons) atthecompletion of thecurrent iteration. REASON1meanstheiteration procedure converged totheEPSIOvaluesupplied bytheuser onaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) REASON2meanstheiteration procedure isdiverging fromtheEPSIOvaluesupplied bythe useronaPARAMbulkdatacard.(Thedefault valueofEPS19is1.OE-5.) REASON3meansinsufficient timeremaining toachieve convergence totheEPSIOvalue supplied bytheuseronaPARAMbulkdatacard.(Thedefault valueofEPSIOis1.OE-5.) REASON4meansthenumberofiterations supplied bytheuseronaPARAMbulkdatacard hasbeenmet.(Thedefault numberofiterations is10.) tallyoutputasfollows: valuesatthetimeofexitareautomat Parameter DflNE:-1isnormal; toachieve convergence. Parameter SHIFT: +1indicates indicates areturntotopof iteration.+Nistheestimate ofthenumberofiterations required areturntothetopoftheinnerloopwasscheduled; theouterloopwasscheduled following thecurrent-1 Parameter DSEPSI: thevalueoftheratioofenergyerrortototalenergyatthetimeof exit. Thefollowing outputmayberequested: 1.Nonzero Components oftheapplied staticloadforthelinearsolution atselected grid points. 2.Displacements andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. 3.Forcesandstresses inselected elements, withandwithout different’ alstiffness. e 2.4-17 (05/30/86)\nThefollowing itemsrelatetosubcase definition anddataselection Differential Stiffness: 1.TheCaseControl Deckmustcontain twosubcases. 2.Astaticloading condition mustbedefined abovethesubcase TEMPERATURE (LOAD), orDEFORMselection, unlessallloading is displacements onSPCcards.I 4. The 1. 2.DISPLACEMENT RIGIDFORMATS Scanned outputofforcesandelements inselected elements, following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model. Contour plotsofstresses anddisplacements. 2,4.4CaseControl DeckforStaticAnalysis withDifferential Stiffness forStaticAnalysis with levelwithaLOAD, specified bygridpoint 3.AnSPCsetmustbeselected abovethesubcase levelunlessallconstraints arespecified onGRIDcards. 4.Outputrequests thatapplyonlytothelinearsolution mustappearinthefirstsubcase. 5.Outputrequests thatapplyonlytothesolution withdifferential stiffness mustbe placedinthesecondsubcase. 6.Outputrequests thatapplytobothsolutions, withandwithout differential stiffness, ● maybeplacedabovethesubcase level. 2.4.5 Parameters forStaticAnalysis withDifferential Stiffness The 1.following parameters areusedinStaticAnalysis withDifferential Stiffness: ASET!ilUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. 3.BETAD-optional. Theinteger valueofthisparameter isthenumberofiterations allowed forcomputing theloadcorrection intheinner(load)loopbeforeshifting to theouter(stiffness) loop,whichadjusts thedifferential stiffness. Thedefault value is4iterations. 4.COUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, 2.4-18(05/30/86)\n5. 6. 7. 8. 9. 10. .,11STATICANALYSIS WITHDIFFERENTIAL STIFFNESS CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. EPSIfl-optional. Therealvalueofthisparameter isusedtotesttheconvergence of -5theiterated differential stiffness. Thedefault valueis10. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. \u003c IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. NT-optional. Theinteger valueofthisparameter limitsthecumulative numberof— iterations inbothloops, Thedefault valueis10iterations. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter, See thedescription underthePARAMbulkdatacardfordetails. ,.WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.4.6RigidtormatErrorMessages fromStaticAnalysis withDifferential Stiffness Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis with Differential Stiffness rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERR@RMESSAGE NO.1-NfISTRUCTURAL ELEMENTS HAVEBEEN DEFINED. Nostructural elements havebeendefined withConnection cards. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRfiRMESSAGE No.2-FREEBODYSUPPORTS NOTALL9WED. Freebodiesarenotallowed inStaticAnalysis withDifferential Stiffness. TheSUPORTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. 2.4-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRORMESSAGE No.3-NoGRIDP@INTDATAISSPECIFIED. Nopointshavebeendefined withGRIDorSPOINTcards. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERR@RMESSAGE NO.4-MASSMATRIXREQUIRED F13RWEIGHT ANDBALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.5-NOINDEPENDENT DEGREES @FFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP131NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,OMITorGRDSETcards,orgrounded on ScalarConnection cards. 2.4-20 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.5BUCKLING ANALYSIS 2.5.1DMAPSequence forBuckling Analysis RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT5 LEVEL2.0NASTRAN DHAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NOOECK NO!iEF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAll 5GP1 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAII 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20PARAM 21TA1DISP05-BUCKLING ANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND $ //HPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSIF=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEom2,EQExlN/EcT $ PCDB//fiPRES*////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOl $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX//’ $ //*MPYf/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SI L,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/S,N,PFILE $ ‘PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //~~ANDI/NOMGG/NOGRAV/V,Y,GRDPNT=-l $ ECT,E?T,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL$ 2.5-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DHAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SoURCE LlsTING 22COND 23PURGE 24PARAM 25EMG 26PURGE 27COND 28EMA 29LABEL 30COND 31EMA 32LABEL 33COND 34COND 35GPWG 36OFP 37LABEL 38EQUIV 39COND 40SMA3 41LABEL 42PARAM 43GP4 44CONDERROR1,NOSIMP $ OGPST/GENEL $ //ADD/NoKGGx/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,/lDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ c,Y,cPRoo/c,Y,cPQuADl/c,Y,cPQuAD2/c,Y,cPTR lA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y ,CPQDPLT/C,Y,CPTRPLT/C ,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/tIGG/NOMGG $ JMPKGG,NOKGGX $ G?ECT,KCIICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GRDPNT $ ERROR5,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ \\*fipYf61NsKlpjolo $ CASECC,GEOM4,EQEXlN,GPDT,BGPOT,CSTM,GPST/RG,YS ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/’ S,Y,AUTOSPC $ ERROR6,NOL $ 2.5-2(05/30/86)\nBUCKLING ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45PARAM 46PURGE 47COND 48JUMP 49LABEL 50COND 51PARAH 52COND 53GPSP 54OFP 55LABEL 56EQUIV 57COND 58MCE1 59MCE2 60LABEL 61EQUIV 62COND 63SCE1 6kLABEL 65EQUIV 66COND 67SMP1 68LABEL 6gRBMG2 70SSG1//AND/NOSR/SINGLE/REACT $ GM/MPCFl/GO,KOO, LOO,PO,UOOV,RUOV/OMIT/PS,KFS, KSS,KDFS/SINGLE/ QG/NOSR $~ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KG6,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,I(FF ,,,/GO,KAA,KOO,LOO,,,., $ LBL5$ KAA/LLL $ SLT,BGPDT, CSTM,SI L,EST,MPT,GPTT,EDT,MGG ,CASECC,DIT,/ PG,,,,/LUSET/l $ 2.5-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71EQUIV 72COND 73SSG2 74LABEL 75SSG3 76COND 77MATGPR 78MATGPR 79LABEL 80SDR1 81SOR2 82OFP 83SCAN 84OFP 85COND 86PLOT 87PRTMSG 88LABEL 89TA1 90DSMG1 91EQUIV 92COND 93MCE2 94LABELPG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO, PS,PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM, PS,KFS,KSS,/UGV,PGG,QG/l/ ABKLo* $ CASECC, CSTM,MPT,DIT,EQEX IN,SIL,GPTT,EDT,BGPDP, .QG,UGV,EST,,PGG/ OPG1,OQG1,OUGV1,OES1,OEF l,PUGV1/fBKLO\u003e: $ OUGVl,OPGl,OQGl,OEFl,OESl,//S ,N,CARONO $ cASECC,OESl,OEF1/OESFl/*RFt $ OESFl,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1, ,GPECT, OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTF LG/S,N,PFILE $ PLoTx2// $ P2$’ ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,S IL,EDT,UGV, CSTM,MPT,ECPT,GPCT,DIT/KDGG/ DSCOSET $ KOGG,KDNN/MPCFl $ LBL2D,MPCF1 $ USET,GM,KOGG,,,/KDNN ,,,$ LBL2D$ 2.5-4(05/30/86)\nBUCKLING ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95 96 97 98 99 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119EQUIV COND SCE1 LABEL EQUIV SNP2 LABEL ADD DPD COND PARAM READ OFP COND SDR1 SDR2 OFP COND PLOT .PRTMSG LABEL JUMP LABEL PRTPARFIKDNN,KOFF/SINGLE $ LBL3D,SINGLE $ uSET,KDNN,,,/KDFF,KDFS, ,,,$ LBL3D$ KDFF,KDAA/OMIT $ USET,GO,KDFF/KDAA $ LBL5D$ KDAA,/KDAAM/(-l.0,0.0)/(0.0,0.0) $ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD, ,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR3,NOEED $ //MPY/NEIGV/l/-l $ KAA,KOAAM, ,,EEO,USET,CASECC/LAMA,PHIA, ,OEIGS/BUCKLING/ s,N,NEIGv/2 $ DEIGS,LAMA,,,,//s,N,cARDNO $ ERROR~,NEIGV $ USET,,PHIA,,,Go,GM,,KFS,,/PHIG,,BQG/l/BKLl $ cASECC,CSTM,MPT,OIT,EQEXI N,SIL,,,BGPDP,LAMA,BQG,PH lG,EsT,,/ ,OBQG1,OPHIG,OBES1,OBEF1,PPH lG/BKLl $ OPHIG,OBQGl,OBEFl,OBESl,,//S ,N,CARDNO $ P3,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SI P,,PPHIG,GPECT, 0BESl/PLDTX3/NS lL/LUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx3// $ P3$ FINIS$ ERROR1 $ //-1/~~BUCKLING* $ 2.5-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 120 121 122 123 124 I25 126 127 128 129 130 131 132LABEL pRTpARM LABEL PRTPARH LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDERROR2 $ //-2/aucKLING $ ERROR3 $ //-3/BucKLING $ ERROR4 $ //-4/BucKLING $ ERROR5 $ //-5/BucKLING $ ERROR6 $ //-6/BUCKLING $ FINIS$ DUMMY/MINUSl $ $ 2.5-6(05/30/86)\n2.5.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 21. 22. 25. 27. 28. 30. 31. 33. 34. 35. 36. 38. 39. 40. 43. 44. 47. 48.BUCKLING ANALYSIS Description ofImportant DMAPOperations forBuckling Analysis GP1generates coordinate system transformation matrices, tables ofgridpointlocations and tables relating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstress recovery. GotoDMAPNo.118andprintErrorMessage No,1ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix [Kg]andGridPointSingularity Table. GotoDMAPNo.32ifnomassmatrix istobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.37ifnoweight andbalance information isrequested. GOtoDMAPNo.126andprintErrorMessage No.5ifnomassmatrix exists. GPWGgenerates weight andbalance information. 13FPformats theweight andbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.41iftherearenogeneral elements. SMA3addsgeneral elements to[K\u0026]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rgl{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.128andprintErrorMessage No.6ifnoindependent degrees offreedom are defined. GotoDMAPNo.49iftherearenofree-body supports. GotoDMAPNo.120andprintErrorMessage No.2. 2,5-7(05/30/86)\n50. 52. 53. 54. 56. 57. 58, 59. 61. 62. 63. 65. 66. 67. 69. 70. 71.DISPLACEMENT RIGIDFORMATS GotoDMAPNo.55ifgeneral elements arepresent. GotoDMAPNo.55ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]iftherearenomultipoint constraints. GotoDMAPNo.60iftherearenomultipoint constraints. MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rml-l[Rnl. MCE2partitions stiffness matrix [Kgg]= [1\u003e+mnmm andperforms matrix reduction [Knn]=[knn]+[G;][Kmn] Equivalence [Knnlto[Kff]ifnosin91e-Point+[Kn][Gm] +[G~][Kmm][Gm]. constraints exist. GotoDMAPNo.64ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff‘‘fs[Knn]=~~K— . SfSs Equivalence [Kff]to[Kaalifnoomitted coordinates exist. GotoDMAPNo.68ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix r- 1 IIKIK [Kff]=:K 3 oa00L -1 solves fortransformation matrix [Go]=-[KGol-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . RMBG2decomposes constrained stiffness matrix[Kaa]=[LLLIIULLI. SSG1generates staticloadvectors {Pg}. Equivalence {Pg}to{PL}ifnoconstraints areapplied. 2.5-8(05/30/86)\nBUCKLING ANALYSIS 72.GotoDMAPNo,74ifnoconstraints areapplied. 73.SSG2applies constraints tostaticloadvectors HPn {Pg}=—–, Pm{Pn}={Fn}+[G;l{Pm} s Hif{Pn}=—-, {Pf}={f}-[Kfsl{ys} P 11Pa and{Pf}=—- and {Pi}={Pa}+[G;]{po? . P. 75.SSG3solvesfordisplacements ofindependent coordinates {uk}=[KLL]-l{PL} , solvesfordisplacements ofomitted coordinates {u;]=[KOOI-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {\u0026Pi} ‘k andcalculates residual vector coordinates {6PO} ‘o={PI]-[K~k]{ut} , {u:}{\u0026PL} . {P]}{ut} (RUOV) andresidual vector errorratioforomitted ={Po}-[KOOI{I.$ , {U:}{6PO} = . ~pT}{uol 00 76.GotoDMAPNo.79ifresidual vectors 77.MATGPRprintstheresidual vectorfor 78.MATGPRprintstheresidual vectorforarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). 2.5-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 80.SDR1recovers dependent displacements {uo}=[GO]{UL} +{us}, HUa ——={Uf}, U.II‘f_.{Un}, Ts {urn}=[Gm]{un} ,‘u IIn={Ug}—— ‘m andrecovers single-point forcesofconstraint {qs}=-{PS}+[K;sl{uf} +[KSSI{YS}. 81.SDR2calculates element forces(OEFl) andstresses (OESl)andprepares loadvectors (@pGl), displacement vectors (!3UGV1) andsingle-point forcesofconstraint (9QG1)foroutPutand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. 82.!2FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 83.SCANexamines theelement stresses andforces calculated bySDR2andgenerates scanned output thatmeetsthespecifications setbytheuser. 84.OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforDrintina.. 85.GotoDMAPNo.88ifnostaticsolution deformed structure plotsarerequested. 86.PLOTgenerates allrequested staticsolution deformed structure andcontour plots.— 87.PRTMSG prints plotter data,engineering data,andcontour dataforeachstatic solution deformed plotgenerated. 89.TA1generates element tablesforuseindifferential stiffness matrixassembly. 90.DSMG1generates differential stiffness matrix [Kg]. 91.Equivalence [Kg]to[Kn]ifnomultipaint constraints exist. 92.GotoDMAPNo.94ifnomultipoint constraints 93.MCE2partitions differential stiffness matrixexist. andperforms matrixreduction [Kn]=[;n]+[G:][K#n] +[K\u0026][Gm] 95.Equivalence [Kn] 96.GOtoDMAPNo,98to[K~f]ifnosingle-point constraints ifnosingle-point constraints exist. 2.5-10(05/30/86)+[G;][K;M][GM]. exist.\nBUCKLING ANALYSIS 97.SCE1partitions outsingle-point constraints r 1 K:fIK;s [K;n]=–+– . KdIKd SfSs 99.Equivalence [K$flto[Kalifnooitted cordinates exist, 100.GotoDMAPNo,102ifnoomitted coordinates exist. 101.SMP2partitions constrained differential stiffness matrix [K:f] andperforms matrix reduction [Ka]=[~a]+[1‘dKaaIKd .–+ . KdIKd oa00 [Ka]TIGo] +[Go]TIKa] +[Go]TIKol[Gol. 103,ADD-[Ka]andnothing tocreate[Kfll. 104.DPDextracts Eigenvalue Extraction DatafromDynamics datablock. 105.GotoDMAPNo.122andprintErrorMessage No.3ifthereisnoEigenvalue Extraction Data. 107.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa+A\u0026]{ua} =O andnormalizes eigenvectors according tooneo“ 1Unitvalueofaselected component ;Unitvalueofthelargest component.thefollowing userrequests: 108.flFPformats theeigenvalues (LAMA)andsumary ofeigenvalue extraction information (OEIGS) prepared byREADandplacesthemonthesystemoutputfileforprinting. 109.GotoDMAPNo.124andprintErrorMessage No.4ifnoeigenvalues werefound. 110.SDR1recovers dependent components oftheeigenvectors {+.}=[Go]{@a}\u003e‘$a H={Of}!—— ‘$0 II‘+n——={$g} @m 2.5-11 (05/30/86j\nandrecovers single-poDISPLACEMENT RIGIDFORMATS ntforcesofconstraint {qs}=[K~s]{Of}. 111.SDRZcalculates element forces(OBEFl) andstresses (OBES1) andprepares eigenvectorso (@PHIG)andsingle-point forcesofconstraint (@BQGl)foroutputandtranslation components oftheeigenvectors (PPHIG) forthebuckling solution. 112.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 113.GotoDMAPNo.116ifnobuckling solution deformed structure plotsarerequested. 114.PLOTgenerates allrequested buckling solution deformed structure andcontour plots. 115.PRTMSGprintsplotter data,engineering data,andcontour dataforeachbuckling solution deformed plotgenerated. 117.Goto 119.Print 121.Print 123.Print 125.Print 127.Print 129.PrintDMAPNo.130andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No.3andterminate execution. ErrorMessage No.4andterminate execution. ErrorMessage No.5andterminate execution. ErrorMessage No.6andterminate execution. 2.5-12 (05/30/86)"},"title":"User's Manual P6"},"/docs/users/users_manual_007/":{"data":{"":"BUCKLING ANALYSIS 2.5.3OutputforBuckling Analysis Thesummary oftheeigenvalues associated withthebuckling modesandthesummary ofthe eigenvalue analysis performed, asdescribed intheNormalModeAnalysis rigidformat(seeSection 2.3.3), areautomatically printed. The 1. 2. 3. 4. The 1. 2.following outputmayberequested: Displacements andnonzero components ofthestaticloadsandsingle-point forcesof constraint atselected gridpointsforthestaticanalysis. Forcesandstresses inselected elements forthestaticloading condition. Modeshapesandnonzero components ofthesingle-point forcesofconstraint atselected gridpointsforselected modes. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed plotofthestructural modelandmodeshapesforselected buckling modes. Contour plotsofstresses anddisplacements forselected buckling modes. 2.5.4CaseControl DeckforBuckling Analysis Thefollowing itemsrelatetosubcase definition anddataselection forBuckling Analysis: 1.TheCaseControl Deckmustcontain atleasttwosubcases. Subcases beyondthesecond areusedonlyforoutputselection. 2.METHODmustappearinthesecondsubcase toselectanEIGBcardfromtheBulkDataDeck. 3.Astaticloading condition mustbedefined inthefirstsubcase witha1.f9AD,TEMPERATURE (LOAD), orDEFORMselection, unlessallloading isspecified bygridpointdisplacements onSPCcards. 4.AnSPCsetmustbeselected abovethesubcase level,unlessallconstraints are specified onGRIDcards. 5.Outputrequests thatapplyonlytothesolution understaticloadmustbep“ firstsubcase. 6.Outputrequests thatapplytothebuckling solution onlymustbeplacedinacedinthe thesecond andsucceeding subcases. Ifonlytwosubcases exist,theoutputrequests inthesecond subcase willbehonored forallbuckling modes. 7.Outputrequests thatapplytoboththestaticsolution andthebuckling modesmaybe placedabovethesubcase level. 2.5-13(05/30/86)\nDISPLACEMENT RIGIDFORMAIS 2.5.5Parameters forBuckling Analysis Thefollowing parameters areusedinBuckling Analysis: 1. 2. 3. 4, ~ 6, 7. 8.ASETIINJT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. WeightGenerator to printed. IRES-optional. A residual vectors fo’ SURFACE -optional two-dimensional and aregenerated inth parameter, SeetheApositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe positive integer valueofthisparameter causestheprinting ofthe lowingtheexecution oftheSSG3module. Thecomputations oftheexternal surface areasforthe three-dimensional elements areactivated bythisparameter whenthey EMGmodule. Theresults aremultiplied bytherealvalueofthis ●description underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated In theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMA~-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.5.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormaModesAnalysis (seeSection 2.3.6). 2.5-14(05/30/86)\nBUCKLING ANALYSIS 2.5.7RigidFormatErrorMessages fromBuckling Analysis ●Thefollowing fatalerrors aredetected bytheDMAPstatements intheBuckling Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial .action. BUCKLING ANALYSIS ERRORMESSAGE NO.1-NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. BUCKLING ANALYSIS ERRORMESSAGE NO.2- Freebodiesarenotallowed inBuckling DataDeckandotherconstraints applied BUCKLING ANALYSIS ERR@RMESSAGE N@.3- ANALYSIS.FREEBODYSUPPORTS N@TALLOWED. Analysis. TheSUPORTcardsmustberemoved fromtheBulk ifrequired forstability. EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE Eigenvalue extraction datamustbesupplied onanEIGBcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGBset. BUCKLING ANALYSIS ERRORMESSAGE NO.4-Nf!EIGENVALUES FOUND. Nobuckling modesexistintherangespecified bytheuser. BUCKLING ANALYSIS ERRORMESSAGE N135-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATI13NS. aThemassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. BUCKLING ANALYSIS ERRORMESSAGE N!d.6-NOINDEPENDENT DEGREES OFFREEDOMHAVE BEENDEFINED. Either nodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards, orall defined degrees offreedom Scalar Connection cards.havebeenconstrained bySPC,MPC,klMITorGRDSETcards, orgrounded on 2.5-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.5-16(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.6PIECEWISE LINEARSTATICANALYSIS ●2.6,1DMAPSequence forPiecewise LinearStaticAnalysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7GP2 8PARAHL 9PURGE 10COIJD 11PLTSET 12PRTMSG 13PARAM lbPARA!I 15CONO 16PLOT 1?PRTmsG 18LABEL 19GP3 20PARAN 21TA1DISP06-PIECEWISE LINEARSTATICANALYSIS -APR.1986$ ALL$ QGl=APPEND/UGVl=APPEND/KGGSUM=SAVE/PGVl=APPEND $ //tipY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPOT/MINUSl=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $“ PI,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //fOIPYf~/PLTFLG/l/l $ //HPYfc/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/s ,N,PFILE $ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S,N,NOGRAV $ //f~AND/SKPMGG/NOGRAV/V,Y,GRDPNT $ ECT,EPT,BGPDT,SI L,GPTT,CSTM/EST,GEl ,GPECT,ECPT,GPCT/ LusET/s,N,NoslMP/2/s,N,NoGENL/s,N,GENEL $ 2.6-1(05/30/86)I\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 22 23. 2k 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41PARAM COND PURGE COND PARAH PARAN EMG PURGE COND EMA LABEL COND iEHA LABEL COND COND GPWG OFP LABEL PLA1 CON(I PURGE PARAM//AND/NOELMT/NOGENL/NOS IMP ERROR4,NOELMT $ KGGX,GPST/NOSl MP/OGPST/GENEL LBL1,NOSIMP $ //ADD/NOKGGX/l/O $ //AoD/NoIItGG/l/0 $$ $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBC,Y,,Y, CPROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y9cPTuBE/ C,Y,CPQDPLT/C,Y,CTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOt4GG $ JMPKGG,NOKGGX $ GPECT,KDlCT,KELM/KGGX,GP5T $ JMPKGG $ JMPMGG,NOMGG $ GPEC~,MDICT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ JHPHGG $ LBL1,GRDPNT $ ERROR3,NOMGG $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GROPNT=- l/V,Y,WTMASS $ OGPWG,,,,,//s,N.CARDNO $ LBL1$ CSTM,MPT,ECPT,GPCT,DIT,CASECC, EST/KGGXL,ECPTNL,ESTL,ESTNL/S ,N, KGGLPG/S,N,NPLAL lM/S,N,ECPTNLPG/S,N,PLSETNO/S,N,NONLSTR/S,N, PLFACT $ ERROR1,ECPTNLPG $ ONLES,ESTNLl/NONLSTR $ //*ADD$~/ALWAYS/-l/O $ 2.6-2(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS eRIGIDFORMAT DNAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45 46 47 48 49 50 51 52 53 54, 55 56 57 58 59 60 61 62 63 64 65 66 67 68PARAH EQUIV CONO SMA3 SMA3 LABEL PARAM GP4 PARAM PURGE SSG1 EQUIV COND PARAM CONO GPSP OFP LABEL PARAM EQUIV COND MCE1 LABEL EQUIV//ADD/NEVER/l/O $ KGGX,KGG/NOGENL/KGGXL,KGGL/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ GEl,KGGXL/KGGL/LUSET/NOGENL/KGGLPG $ LBLII$ //MPY/NSKIP/O/O $ CASECC,GEOM4,EQEXlN,GPDT,BGPOT,CSTM,GPST/RG,YS, USET,ASET/ LUSET/S,N,MPCFI/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //AND/NOSR/S INGLE/REACT $ KRR,KLR,QR,DM/REACT/Gt4/MPCF l/GO,KOO,LOO,PO, UOOV,RUOV/OMIT/PS, KFS,KSS/SINGLE/QG/NOSR $ SLT,BGPDT,CSTM,SIL,EST,MPT, ,,MGG,CASECC,OIT,/PGl,,, ,/ LUSET/1 $ PGl,PL/NOSET $ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4s //AOD/PLACOUNT/l/O $ KGG,KNN/MpCFl $ LBL2,MPCF1 $ USET,RG/GM $ LOOPBGN $ KGG,KNN.h’4PCFl $ 2.6-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69CONO 70MCE2 71LABEL 72EQUIV 73CONO 74SCE1 75LA8EL 76EQUIV 77COND 78SMP1 79LABEL 80EQUIV 81COND 82RBMGI 83LABEL 84OECOMP 85CONO 86CONO 87RBMG3 88LABEL 89ADO 90CONO 91SSG2 92LABEL 93SSG3LBL2,MPCF1 $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GG,KAA,KOO,LOO,,,,, $ LBL5s KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,/KLL,KLR,KRR,,, $ LBL6$ KLL/LLL,/l/O/MINDIAGK/OETKLLXX/ lDETKLLX/ S,N,SINGKLLX $ PLALBL4,SINGKLLX $ LBL7,REACT $ LLL,KLR,KRR/OM $ LBL7$ PGl,/PG/PLFACT $ LBLIO’,NOSET $ USET,GM,YS,KFS,GO,OM,PG/QR, PO,PS,PL $ LBL1O $ LLL,KLL,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMl T/V,Y,lRES=-l/ PLACOUNT/S,N,EPSl $ 2.6-4(05/30/86) 9\nPIECEWISE LINEARSTATICANALYSIS ,0RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94COND 95MATGPR 96MATGPR 97LABEL 98SDR1 99PLA2 100EQUIV 101COND 102PLA3 103OFP 104LABEL 105PARAM 106COND 107PLA4 106EQUIV 109COND 110ADD 111LABEL !12EQUIV 113REPT 114JUMP 115LABEL 116PRTPARM 117LABELLBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS,KFS,KSS,QR/DELTAUGV, OELTAPG, OELTAQG/1/STATICS $ DELTAUGV,DELTAPG,DELTAQG/UGVl ,PGVl,QGl/S,N,PLACOUNT $ ESTNL,ESTNLl/NEVER/ECPTNL,ECPTNL l/NEVER $ PLALBL2A,NONLSTR $ CSTM,MPT,DIT,DELTAUGV, ESTNL,CASECC/ONLES, ESTNLl/PLACOUNT/ PLSETNO $ ONLES,,,,,//S,N,CARDNO $ PLALBL2A $ //SUB/DIFF/NPLALIM/PLACOUNT $ PLALBL5,DIFF $ CSTM,MPT, ECPTNL,GPCT,D lT,DELTAUGV/KGGNL, ECPTNLl/S,N,PLACOUNT/S, N,PLSETNO/S,N,PLFACT $ KGGNL,KGGSUM/KGGLPG $ PLALBL3,KGGLPG $ KGGNL,KGGL/KGGSUM $ PLALBL3 $ ESTNLl,ESTNL/ALWAYS/ECPTNL l,ECPTNL/ALWAYS/KGGSUM,KGG/ALWAYS LDOPBGN,360 $ ERROR2 $ PLALBL4 $ //-5/?tPLA9f s PLALBL5 $s I 2.6-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 118SDR2 119OFP 120SCAN 121OFP 122COND 123PLOT 124PRTMSG 125LABEL 126JUMP 127LABEL 128PRTPARM 129LABEL 130PRTPARM 131LABEL 132PRTPARM 133LABEL 134PRTPARM 135LABEL 136PURGE 137‘ENDCASECC,CSTM,MPT,DIT, EQEXIN, SIL,GPTT, EDT,BGPDP, ,QG1,UGV1 ,ESTL,, PGVl/OPGl,OQGl,OUGVl,OESl,OEF l,PUGV1/PLA $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIP,PUGVl,,ECPT,OESl/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ FINIS$ ERROR1 $ //-1/pLA $ ERROR2 $ //-2/PLA $ ERROR3 $ //-3/FJLA $ ERROR4 $ //-4/PLA $ FINIS$ OUMMY/MINUSl $ $ 2.6-6(05/30/86)\n2.6.2 @5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 21. 23. 25. 28. 30. 031. 33. 34. 36. 37. 38. 39. 41. 42. 46. 47. 48.PIECEWISE LINEARSTATICANALYSIS Description ofImportant DMAPOperations forPiecewlse LinearStaticAnalysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo,18iftherearenostructure plotrequests. PLTSETtransforms userintputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. pRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.133andprintErrorMessage No.4ifnoelements havebeendefined. GotoOMAPNo.40iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAP No.32ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.35ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.40ifnoweightandbalance information isrequested. GotoDMAPNo.131andprintErrorMessage No.3ifnomassmatrix exists. GPWGgenerates weightandbalance information. !dFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. PLA1extracts thelineartermsfrom[K\u0026]togive[K~~],extracts thenonlinear entries fromtheElement Connection andProperties TabletogiveECPTNL, andseparates thelinear andnonlinear entries intheElement Summary TabletogiveESTLandESTNL. GotoDMAPNo.127andprintErrorMessage No.1ifnoelements haveastress-dependent modulus ofelasticity. Equivalence [Kg] GotoDMAPNo.50 SMA3addsgeneralto[Kgg]and[K~~]to[K\u0026]iftherearenogeneral elements. iftherearenogeneral elements. elements to[K~g]toobtainstiffness matrix[Kgg]. 2.6-7(05/30/86)\n49. 52. 55. 56. 57. 59. 60. 61. 64. 65. 66. 67. 68. 69. 70. 72. 73, 74. 76. 77. 78.DISPLACEMENT RIGIDFORMATS SMA3addsgeneral elements to[K~~]toobtainstiffness matrixoflinearelements [K;’]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. SSG1generates totalstaticloadvector{P:}. Equivalence {Pi}to{Pg}ifnoconstraints areapplied. GotoDMAPNo.62iggeneral elements arepresent. GotoDMAPNo.62ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.71ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmfRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rln]-l[Rn]. Beginning ofloopforadditional loadincrements. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.71ifnomultipoint constraints exist. MCE2partitions stiffness matrix [1iIK [Kgg]=fK mnmm andperforms matrixreduction [Knn]=[inn]+[G;l[Kmnl +[K:nl[Gml +[G:l[Kmml[$J. Equivalence [Knn]to[Kff]ifnosingle-point constraints exist. GotoDMAPNo.75ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K–. SfSs Equivalence [Kff] GotoDMAPNo.79to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix 2.6-8(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS [1KlKao [Kff]=~~K— , oa00 solvesfortransformation matrix [Go]=-[Kool-l[Koa] andperforms matrixreduction [Kaal=[aal+[Kal[Gol . 80.Equivalence [Kaa]to 81.GotoDMAPNo.83if 82.RBMG1partitions out[KLL]ifnofree-body nofree-body supports free-body supportssupports exist. exist. 84.DECOMPdecomposes constrained stiffness matrix 85.GotoDMAPNo.115andprintErrorMessage No. (i.e.,localplasticity).[Kit]=[LLJ[UJ. 5ifstiffness matrix[KLL]issingular 86.GotoDMAPNo.88ifnofree-body supports exist. 87.RBMG3formsrigidbodytransformation matrix [D]=-[Kiil-l[Kflrl, calculates rigidbodycheckmatrix [x]=[Krr]T+ [KJID1 andcalculates rigidbodyerrorratio E=x, TP-1-TKrr 89.ADOmultiplies totalloadvector{P~lbyfactor,PLFACT, andaddsittonothing toobtain applied loadvector{pg}forcurrent looP. 90.GotoDMAPNo.92ifnoconstraints areapplied. 91.SSG2applies constraints tostaticloadvectors forcurrent loop IIPn {Pg}=—– \u003e {Pn}={~n}+[G:]{pm}\u003e Pm Hif{Pn}=—– , Ps{Pf}={~f}-[Kfs]{ys} , 2.6-9(05/30/86)\nIIFj{Pf}=—– , P. andcalculates incrementalDISPLACEMENT RIGIDFORMATS . {Pa}={Pa}+[G~]{Po} , determinate forcesofreaction {Clr}=-{Pr}-[DT]{PL}, 93,SSG3solvesfordisplacements ofindependent coordinates {ul}=[KLL]-l{PL} , solves fordisplacements ofomitted coordinates {u~}=[KOOI-l{PO} , calculates residual vector (RULV)andresidual vector coordinatesforcurrent loop errorratioforindependent {\u0026PL}={Pk}-[KL,]{uLI , {u;}{\u0026Pt} ‘i= {P:}{UL} andcalculates residual vector(RUIBV)andresidual vectorerrorratioforomitted coordinates {bPo}={Pol-[KOO]{U:} , {U:}{6PO} and‘o= {P:}{u:} 94.GotoDMAPNo.97ifresidual vectors 95.MATGPRprintstheresidual vectorfor 96.MATGPRprintstheresidual vectorforarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). 2.J5-10(05/30/86)\n98. 99. 100. 101. 102. 103. 106. 107. 108. 109. 110. 112. 113.PIECEWISE LINEARSTATICANALYSIS SDR1recovers dependent displacements forcurrent loop N‘i—.={Ua} ‘r H‘a——={Uf}, ‘o {urn}=[Gm]{un} ,{uo}=[Go]{ua} +{u:}, MUf —.={Un}, Ys HUn ={Ugl —— urn andrecovers single-point forcesofconstraint forcurrent loop {dqs}=-{Ps}+[Ks]{uf}. PLA2addstheincremental displacement vectr(OELTAUGV) andtheincremental single-point forcesofconstraint vector(DELTAQG) forthecurrent looptotheaccumulated sumofthese vectors (DELTApG). {u9i+l1={6ug}+tug}and i i {q 9i+l1={Ciqg}+{qg}. i i Allocate separate filesforESTNLandESTNL1andforECPTNLandECPTNL1. GotoDMAPNo.104ifnostressoutputisrequested fornonlinear elements. PLA3calculates incremental stresses innonlinear elements (ONLES) forwhichanoutput request hasbeenmadeandupdates theaccumulated stresses (ESTNL1) intheseelements. !ilFPformats theaccumulated stresses innonlinear elements prepared byPLA3andplacesthem onthesystemoutputfileforprinting. GotoOMAPNo.117ifallloading increments havebeencompleted. PLA4generates stiffness matrixfornonlinear elements [Knf]andupdates stress information.YY- Equivalence [K~~]to[Kgg]ifallelements arenonlinear. GotoDMAPNo. 111 Addstiffness matr’ (KGGL)ifallelements arenonlinear. xfornonlinear elements (KGGNL) tostiffness matrixfor1nearelements Equivalence existing element tablestoupdated tablesandequivalence [K~~m] to[Kgg] fornextpassthrough loop. GotoOMAPNo.67ifadditional loadincrements needtobeprocessed. 2.6-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS 114. 116. 118. 119. 120. 121. 122. 123. 124. 126. 128. 130. 132. 134.GotoDMAPNo.129andprintErrorMessage No.2asthenumberofloadincrements exceeds 360, PrintErrorMessage No.5andterminate execution. SDR2calculates element forces(OEFl)andstresses forlinearelements (!3ES1)andprepares loadvectors (OPGl), displacement vectors (!3UGV1) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthedisplacement vector(PUGV1). @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. 13FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.125ifnodeformed structure plotsarerequested. PL13Tgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.135andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. 2.6-12(05/30/86)\n2’.6.3 ● 2.6.4 Static 2.6.5PIECEWISE LINEARSTATICANALYSIS OutputforPiecewise LinearStaticAnalysis The 1. 2. 3. Ihe 1. 2.following outputmayberequested forPiecewise LinearStaticAnalysis: Accumulated sumsofdisplacements andnonzero components ofthestat single-point forcesofconstraint atselected gridpointsforeachloadcloadsand increment. Stresses inselected elements. Ifanelement iscomposed ofanonlinear material, the accumulated stresswillbeoutputforeachloadincrement. Stresses inlinearelements areonlycalculated forthetotalload. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed plotofthestructural modeland Contour plotsofstresses anddisplacementsdeformed plotsforeachloadincrement. foreachloadincrement. CaseControl DeckforPiecewise LinearStaticAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forPiecewise Linear Analysis: 1.TheCaseControl Deckmustcontain oneandonlyonesubcase. 2.Astaticloading condition mustbedefined withaLOADselection. 3.AnSPCsetmustbeselected unlessallconstraints arespecified onGRIDcards. 4.PLC@EFFICIENT mustappeareithertoselectaPLFACTsetfromtheBulkDataDeckorto explicitly selectthedefault valueofunity. Parameters forPiecewise LinearStaticAnalysis Thefollowing parameters areusedinPiecewise LinearStaticAnalysis: 1.ASET!itlT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. 3.COUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. 2.6-13(05/30/86)\n2.6.6 Static andisDISPLACEMENT RIGIDFORMATS 4.GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed, 5.IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. 6.SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 7.V13LUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 8,WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. RigidFormatErrorMessages fromPiecewise LinearStaticAnalysis Thefollowing fatalerrorsaredetected bytheDMAPstatements inthePiecewise Linear Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters followed byadditional explanatory material, including suggestions forremedial action. PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE No.1-NoN$3NLINEAR ELEMENTS HAVEBEENDEFINED. Apiecewise linearproblem hasnotbeenformulated because noneoftheelements hasastress dependent modulus ofelasticity defined onaMaterial card. PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE NO.2-ATTEMPT TOEXECUTE MORETHAN360LO@PS. Anattempt hasbeenmadetousemorethan360loadincrements. Thisnumbermaybeincreased by ALTERing theREPTinstruction preceding SDR2. PIECEWISE LINEARSTATICANALYSIS ERR13RMESSAGE No.3-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2,6-14(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE Nfl.4-NOELEMENTS HAVEBEENDEFINED ●Noelements havebeendefined witheitherConnection cardsorGENELcards. PIECEWISE LINEARSTATIC PLASTICITY. Thestiffness matrixis material plasticity.ANALYSIS ERRORMESSAGE NO.5-STIFFNESS MATRIXSINGULAR DUETOMATERIAL singular dueeithertooneormoregridpointsingularities orelement 2.6-15(05/30/86) I\nDISPLACEMENT RIGIDFORMATS 2.6-16(05/30/86)"},"title":"User's Manual P7"},"/docs/users/users_manual_008/":{"data":{"":"DISPLACEMENT RIGIDFORMATS 2.7DIRECTCOMPLEX EIGENVALUE ANALYSIS 2.7.1DMAPSequence forDirectComplex Eigenvalue Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE bPARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAH 16PARAM 17COND 18PLOT 19PRTMSG 20LABEL 21GP3DISP07-DIRECT COMPLEX EIGENVALUE” ANALYSIS -APR.1986$ ALL$ GOD=SAVE/GMD=SAVE $ //*MPY~~/CARONO/O/O $ GEOM1,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ USET,GM,GO,KAA,BAA,MAA,KAAA, KFS,EST,ECT,PLTSETX,PLTPAR,GPSETS, ELSETS/NOGPDT $ LBL5,NOGPDT $ GEoM2,EQExlN/EcT $ PCDB//*PRES~~////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUIIPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLOTX1// $ P1$ GEoM3,EQEx1N,GEoM2/,GPTT/NoGRAv $ 2,7-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND EHA LABEL COND EMA LABEL PURGE PURGEECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP=-l/l/S,N,NOGENL=-l/S,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG,K4NN,K4FF ,K4AA,MNN,MFF,MAA,BNN,BFF,BAA, KGGX/NOSIMP /OGPST/GENEL $ LBL1,NOSIHP $ //ADD/NoKGGx/l/o $ //ADD/NoMGG/l/o $ //*ADDfi/NOBGG=-l/l/O $ //ADD/NoK4GG/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MOICT,BELM,BDICT,/S ,N, NOKGGX/S,N,NOMGG/S,N,NOBGG/S ,N,NOK4GG//C,Y,COUPMASS/ C,Y,CPBAR/C,Y,CPROD/C,Y,CPQUADl/C,Y,CPQUAD2/C,Y, CPTRIA1/ C,Y,CPTRlA2/C,Y,CPTUBE/C,Y,CPQOPLT/C,Y,CPTRPLT/C, Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/EGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.7-2(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING k5 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69COND COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GP4 PURGE COND COND PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL EQUIVLBL1,GROPNT $ ERROR3,NOMGG”$ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //HPY/NSKIP/O/O $ cASECC,GEOM4, EQEXIN,GPDT,BGPOT, CSTM,GPST/RG,,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/ C,Y,ASETOUT/S,Y,AUTOSPC $ GM,GMD/tlPCFl/GO,GOO/OMIT/KFS,QPC/S INGLE$ LBL4,GENEL $ LBL4,NOSIMP $ //EQ/GPSPFLG/AUTOSPC/O $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBLh$ KGG,KNN/MPCFl/MGG,MNN/llPCFl/ BGG,BNN/MPcF1/K4GG,K4NN/fipcF I$ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,BGG,K4GG/KNN,MNN,BNN, KLNN$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN, BFF/SINGLE/K4NN,K4FF/SINGLE $ 2.7-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS r RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70 71 72 73 711 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94CONO SCEI LABEL EQUIV COND SMP1 CONO SHP2 LABEL COND SMP2 LABEL CONO SMP2 LABEL DPD CONO EQUIV PARAM PARAM BMG PARAM PURGE CONO MTRXIN,LBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs ,,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT/BFF,BAA/OMIT/K4FF ,K4AA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO 9*9,,$ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLD ,SILD,USETO,TFPOOL, ,,,,,EED,EQDYN/ LUSET/S,N,LUSETO/NOTFL/NODLT/NOPSOL/NOFRL/ NONLFT/NDTRL/S,N,NOEEO/123/S,N ,NOUE$ ERROR1,NOEEO $ GO,GOO/NOUE/GM,GMD/NOUE $ //Aoo/NEvER/l/o $ //Mpy/REpEATE/l/-l $ MATPOOL,BGPOT,EQEXIN,CSTM/BDPOOL/S ,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //*ANof,/NoFL/NoABFL/NoKBFL $ KBFL/NOKBFL/ ABFL/NOABFL $ LBL13,NOFL $ ,BOPOOL,EQOYN,,/ABFL,KBFL,/’LUSETO/S ,N,NOABFL/S,N,NOKBFL/ 0$ 2,7-4(05/30/86)●\nDIRECTCOMPLEX EIGENVALUE ANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95LABEL g6PURGE 97CASE 98MTRXIN 99PARAM 100PARAM 101EQUIV 102CONO 1(J:AOD5 104COND 105TRNSP 106ADO 107LABEL 108PARAM 109PARAM 110PARAM 111PURGE 112EQUIV 113COND 114GKAO 115LABEL 116EQUIV 117CEAOLBL13$ PHID,CLAMA,OPHI O,OQPC1,OCPH IP,OESC1,OEFC1,CPHIP,QPC, K2PP,M2PP,B2PP,K2Do,M2DD,B2Do/NEvER $ CASECC,/CASEXX/CEIGN/S,N,REPEATE/S, N,NOLOOP $ cAsExx,MATPooL,EQDYN,,TFPooL/K2DPP,M2DPP, B2PP/LusETcl/s,N, NoK20PP/s,N,NoM2DPP/s,N,NoB2PP $ //\u003ekAND*/NoM2PP/NoABFL/NoM20PP $ //ANo/NoK2PP/NoFL /NoK20pP $ K2DPP,K2PP/NoFL/M20PP,M2PP/NoABFL LBLFL2,NOFL $ ABFL,KBFL,K20PP,,/K2PP/(-l.o,o.o) LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M20PP/M2PP/MFAcT $ LBLFL2 $ //*ANo)t/BDEBA/NouE/NoB2PP $ //f\u003cAND)t/MDEMA/NouE/NoM2PP $ //*ANo\u003e?/KDEK2/NOGENL/NOSIMP $$ $ K20D/NoK2PP/M2DD/NoM2PP/B20D/NoB2PP $ M2PP,M2DD/NoA/B2PP,B2DD/NoA/K2PF, K2DD/NoA/ MAA,MDD/MDEMA/BAA,BDD/BDEBA $ LBL18,NOGPDT $ uSET0,GM,G0,KAA,BAA,MAA,K4AA,K2PP,M2PP, B2PP/KOO,BOD,MDD,GMD, GoD,K2DD,M20D,B2DD/*CMPLEV$~/D lSP/?OIRECT’f/C,Y,G=O.O/ o.o/o.o/Nol(2PP/NoM2PP/NoB2PP/ MPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KoEK2/-l $ LBL18$ B2DD,BDD/NoBGG/ M200,MDD/NoslMP/ K20D,KDD/KoEK2 $ KOD,BDD,MOD,EEO,CASEXX/PHl D,CLAMA,OCEIGS,/S,N,EIGVS $ 2.7-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2,0NASTRAN OMAPCOMPILER -SOURCE LISTING 118OFP 119COND 120VDR 121CONO 122OFP 123LABEL 124CONO 125EQUIV 126COND 127SDR1 128LABEL 1295DR2 130OFP 131LABEL 132COND 133REPT 134PRTPARM 135JUMP 136LABELOCEIGS,CLAMA,,,,//S,N,CARDNO $ LBL16,EIGVS $ CASEXX,EQOYN,USETD,PHI D,CLAMA,,/OPHl D,/CEIGN/OIREcT/ O/S,N,NOO/S,N,NOP/O $ LBL15,NO0 $ OPHID,,,,,//S,N,CARDNO $ LBL15$ LBL16,NOP $ PHID,CPHIF’/NOA $ LBL17,NOA $ USETD,, PHID,,,GOD,GMD,,KFS,,/CPHIP,,QPC/l/OYW41 cS$ LBL17$ CASEXX,CSTM,MPT,DIT, EQDYN,SILO,,,,CLAMA,QPC,CPHlp, EST,s/cOQpCl, OCPHIP,OESCl,OEFCl,/~~CEIG* $ OCPHIP,OQPCl,OEFCl,OESCl,,//S,N, CARONO$ LBL16$ FINIS,REPEATE $ LBL13,1OO $ //-2/DIRcEAo $ FINIS$ ERROR1$ 137PRTPARM //-1/OIRcEAD $ 138LABEL ERROR3 $ 139PRTPARM //-3/olRcEAD $ 140LABEL FINIS$ lklPURGE OUMMY/MINUSl $ 142END $ 2.7-6(05/30/86)\n2.7.2 ●5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. a32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52,DIRECTCOMPLEX EIGENVALUE ANALYSIS Description ofImportant DMAPOperations forDirectComplex Eigenvalue Analysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheFIGPDTandSILtables. GotoDMAPNo,84ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PL9Tgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, massanddamping matrixtablesanddictionaris forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.39ifnoviscous damping matrix istobeassembled. EMAassembles viscous damping matrix[Bgg]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled, EMAassembles structural damping matrix[Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested. GotoDMAPNo.138andprintErrorMessage No.3ifnmassmatrixexists. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg] GotoDMAPNo.53 SMA3addsgeneralto[Kgg]iftherearenogeneral elements. iftherearenogeneral elements. elements to[Kg]toobtainstiffness matrix[Kgg]. 2.7-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS 55. 57. 58. 60. 61. 62, 64. 65. 66. 67, 69. 70.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O, GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo.63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. @FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn],[Mgg]to[Mnn],[Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist. GotoDMAPNo.68ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn] MCE2partitions stiffness, massanddamping matrices L [i [Bggl =Y. Bmnd~‘Mgg]‘k+;:[Kggj=Jn+ B 1[-4 nmKnn\\Km and Kg]= .—–+– BmmK$nIK4mm andperforms matrixreductions [Knn]=[Knn]+[G~][Kmn] +[Kn][Gm] +[G][Kmm’l[Gm] , [Mnn]=[;nn]+[G~][Mmn] +[M\u0026][Gm] +[G~][Mmm][Gm] , [Bnn]=[nn]+[G][Bmn] +[Bn][Gm] +[G][Bmm][Gm] , [Kin]=[n]+[G][Kn] +[Kn]T[Gm] +[G][Km][Gm] . Equivalence [Knn]to[Kff],[Mnnlto[Mff],[Bnnlto[Bffland[Knlto [K~f]ifnosingle-point constraints exist. GotoDMAPNo.72ifnosingle-point constraints exist. 2.7-8(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 71, 73. 74. 75. 76. 77. 79. 80.SCEIpartitions outsingle-point constraints ‘Knn]‘[w:]’ ‘Mnn]=kf:l’ Equivalence [Kff]to[Kaa], [Mfflto[Maal, [Bfflto[Baaland[Kff]4to [Ka]ifnoomitted coordinates exist. GotoDMAPNo.84ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix [Kff]= solvesfortransformation matrix. KoaIKoo, [Go]=-[’ool-l[’oal andperforms matrixreduction [Kaa]=[Kaa]+[Kao][Go] . GotoOMAPNo.78ifnomassmatrixexists. SMP2partitions constrained massmatrix [Mff]=MIMaa! MoaiMoo andperforms matrixreduction [Maa]=[Maa]+[Mao][Go] +[MaoGo]T +[G~JIMoo][Gol GotoDMAPNo.84ifnoviscous damping matrix exists. SMP2partitions constrained viscous damping matrix nBIBao [Bff]=\u0026~B— , oa00 andperforms matrixreduction 2.7-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 82. 83. 85. 86. 87. 90. 93. 94. 95. 97. 98. 101. 102. 103. 104. 105. 106.[Baa]=[iaa]+[Bao][Go] +[BaoGo]T +[G~][Bo_][Go] , GotoDMAPNo.84ifnostructural damping matrixexists. SMP2partitions constrained structural damping matrix [1i:a(Ko [K:f]=–+– j 4I4 oa00 andperforms matrixreduction [K:a]=[K:al+[K:OIIGOI +[K:OGOIT+lI@:ol[Gol DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP@@L), andEigenvalue Extraction Data(EED). GotoDMAPNo,136andprintErrorMessage No.1ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G;]iftherearenoextrapointsintroduced ford,ynamic analysis. BMGgenerates DMIGcardimagesdescribing theinterconnection ofthefluidandthe structure. GotoDMAPNo.95ifnofluid-structure interface isdefined, MTRXINgenerates fluidboundary matrices [A,ft]and[Kb,fll. Thematrix[Kb,fk] is generated onlyforanonzero gravity inthefluid. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices [K~~],[M~~]and[Bp]forthecurrent loop. Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequivalence [fp]to[$;1ifthereisno[Ab,fi]. GotoDMAPNo.107ifnofluid-structure interface isdefined. ADD5adds[Kbfi]and[1$1andsubtracts [Abfi]fromthemtoform[Kp]. 3 Y GotoDMAPNo.107ifthereisno[Ab,fL]. Transpose [Abfi]toobtain[Ab,ftlT.Y ADDassembles inputmatrix[Mp]=MFACT[AbfL]T+[M~~].9 2.7-10(05/30/86)I\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 112. 1130 114. 116. 117. 118. 119. 120. 121. 122. 124. 125. 126.Equivalence [Mfplto[Md], [BpltfJ[Bid]and[Kplto[Kdlifnoconstraints areapplied, [Maalto[Mdd]iftherearenodirectinputmassmatrices andnoextra points, and[Baa]to[Bdd]ifthereare points. GotoDMAPNo.115ifon” GKADassembles stiffness Analysisnodirectinputdamping matrices andnoextra yextrapointsaredefined. massanddampng matrices foruseinDirectComplex Eigenvalue [fjd]=(1+i9)[Kd] +[K\u0026]+i[Kd] , [Mold]=[Mid]+[Md] and [Bald]=[B:d]+[\u0026]o Directinputmatrices maybecomplex. Equivalence [Kd]to[Kdd]ifallstiffness isDirectMatrixInput,[Mid]to[Mddl ifallmassisDirectMatrixInputand[B~d]to[Bald]isalldamping isDirectMatrix Input. CEADextracts complex eigenvalues andeigenvectors fromtheequation [Mddp2+Bddp+Kdd]{ud}=O andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitmagnitude ofaselected component 2)Unitmagnitude ofthelargest component. OFPformats thesummary ofcomplex eigenvalues (CLAMA) andsummary ofeigenvalue extraction information (OCEIGS) prepared byCEADandplacesthemonthesystemoutPutfilefor printing. GotoDMAPNo.131ifnoeigenvalues werefound. VDRprepares eigenvectors foroutput, usingonlytheindependent degrees offreedom. GotoDMAPNo. 123ifthereisnooutputrequest forindependent degrees offreedom. OFPformats theeigenvectors forindependent degrees offreedom prepared byVDRandplaces themonthesystemoutputfileforprinting. GotoDMAPNo.131ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses Equivalence {@d}to GotoDMAPNo.128{@p}ifnoconstraints areapplied. fnoconstraints areapplied. 2.7-11 (05/30/86)\n127. 129. 130. 132. 133. 134. 135. 137. 139.DISPLACEMENT RIGIDFORMATS SDR1recovers dependent components ofeigenvectors ‘$~ {$.}❑ [G~]{$dl , II={@f+@e} —. $0 {$m}=[G:]{on+I+e}, H,$n +$e —— ={$p} ‘$M andrecovers single-point forcesofconstraint {qs}=[K~~]{+f}. SDR2calculates element forces (9EFC1) andstresses (OESCl) andprepares eigenvectors (OCpHIp) andsingle-point forcesofconstraint (OQpCl) foroutput. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. Goto Goto Print Goto Print PrintDMAPNo.140ifnoadditional setsofdirectinputmatrices needtobeprocessed, DMAPNo.95ifadditional setsofdirectinputmatrices needtobeprocessed. ErrorMessage No.2andterminate execution. DMAPNo,140andmakenormalexit, ErrorMessage No.1andterminate execution. ErrorMessage No.3andterminate execution. 2.7-12 (05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 2,7.3OutputforDirectComplex Eigenvalue Analysis Eachcomplex eigenvalue isidentified witharootnumberdetermined bysorting thecomplex eigenvalues according tothemagnitude oftheimaginary part,withpositive valuesconsidered asa groupaheadofallnegative values. Thefollowing summary ofthecomplex eigenvalues extracted is automatically printed foreachsetofdirectinputmatrices: 1.RootNumber 2.Extraction Order 3.RealandImaginary PartsoftheEigenvalue 4.Thecoefficients fj(frequency) andgj(damping coefficient) inthefollowing representation oftheeigenvalue Pj=2~fj(i-~gj) Thefollowing summary oftheeigenvalue analysis performed, usingtheDeterminant method, is automatically printed foreachsetofdirectinputmatrices: 1.I 2.I 3.I 4.I 5.I 6.I 7.I 8.I 9, The isautomat 1. 2. 3. 4.Numberofeigenvalues extracted Numberofpassesthrough starting points. Numberofcriteria changes. Numberofstarting pointmoves. Numberoftriangular decompositions. Numberoffailures toiterate toaroot. Numberofpredictions outside region. Reasonfortermination: (1) (2) (3) (4)Thenumberofrootsdesired havebeenfound. Allpredictions foreigenvalues areoutside theregions specified. Insufficient timetofindanother root. Matrixissingular atfirstthreestarting points. Sweptdeterminant functions foreachstarting point. following summary oftheeigenvalue analysis performed, usingtheInverse Powermethod, tallyprinted foreachregionspecified: Numberofeigenvalues extracted. Numberofstarting pointsused. Numberofstarting pointmoves. Numberoftriangular decompositions. 2.7-13(05/30/86)\n5. 6.DISPLACEMENT RIGIDFORMATS Numberofvectoriterations. Reasonfortermination. (1)Twoconsecutive singularities encountered whileperforming tr (2 (3 (4 (5iangular decomposition. Fourstarting pointmoveswhiletracking asingleroot. Alleigenvalues foundintheregionspecified, Threetimesthenumberofrootsestimated intheregionhavebeenextracted. Alleigenvalues thatexistintheproblem havebeenfound. (6)Thenumberofrootsdesired havebeenfound. (7)Oneormoreeigenvalues havebeenfoundoutside theregionspec (8)Insufficient timetofindanother root. (9)Unabletoconverge.fied. Thefollowing summary oftheeigenvalue analysis performed, usingthecomplex Tridiagonal Reduction 1. 2. 3. 4. 5. 6.(FEER)method, isautomatically printed: Numberofeigenvalues extracted. Numberofstarting pointsused. Thiscorresponds tothetotalnumberofrandomstarting andrestart vectors usedbythe complex FEERprocess forallneighborhoods. Numberofstarting pointmoves. NotusedinFEER(setequaltozero). Numberoftriangular decompositions. Alwaysequaltothenumberofpointsofinterest (neighborhoods) inthecomplex plane processed byFEER,sinceordinarily onlyonetriangular decomposition isrequired by FEERforeachpointofinterest, unlessthedynamic matrixissingular atagivenpoint ofinterest, inwhichcaseanadditional decomposition isrequired (obtained bymoving thepointofinterest slightly). Totalnumberofvectoriterations. Thetotalnumberofreorthogonal izations ofallthetrialvectors employed. Reasonfortermination. (0)All,ormoresolutions (normal termination).thanthenumberrequested bytheuser,havebeendetermined 2.7-14(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS (1)Allneighborhoods havebeenprocessed, butFEERhasnotobtained thedesired number ofrootsineachneighborhood, possibly because theyhavealready beenfoundin otherneighborhoods. (2)Abnormal termination -eithernorootsfoundornonepassestheFEERerrortest. Thefollowing printed output, sortedbycomplex eigenvalue rootnumber(SORTl), maybe requested foranycomplex eigenvalue extracted, aseitherrealandimaginary partsormagnitude and phaseangle(0°-360°lead): 1.Theeigenvector fora introduced fordynamic thedynamic equation). 2.Nonzero components of points. 3.Stresses andforcesinlistofPHYSICAL points(gridpointsandextrascalarpoints analysis) orSOLUTION points(points usedintheformulation of thesingle-point forcesofconstraint foralistofPHYSICAL selected elements. Inadd 2.7.4tion,anundeformed plotofthestructural modelmayberequested. CaseControl DeckforOirectComplex Eigenvalue Analysis Thefollowing itemsrelatetosubcase definition anddataselection forOirectComplex eEigenvalue Analysis: 10Atleastonesubcase mustbedefined foreachuniquesetofdirectinputmatrices (K2PP, M2PP,B2PP). 2.Multiple subcases foreachsetofdirectinputmatrices areusedonlytocontrol output requests. Asinglesubcase foreachsetofdirectinputmatrices issufficient ifthe sameoutputisdesired forallmodes. Ifconsecutive multiple subcases arepresent for asinglesetofdirectinputmatrices, theoutputrequests willbehonored insuccession forincreasing modenumbers. MODESmaybeusedtorepeatsubcases inordertomakethe sameoutputrequest forseveral consecutive modes. 3.CMETHOO mustbeusedtoselectanEIGCcardfromtheBulkOataDeckforeachsetof directinputmatrices. 4.Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure mustbechanged toreflect thesetsofdirectinputmatrices thatwerecompleted, and eitherCMETH!ilD mustbechanged toselectanEIGCcardthatreflects anycomplex eigenvalues foundintheprevious execution orEIGPcardsmustbeusedtoinsertpoles 2.7-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS forpreviously foundeigenvalues. Otherwise, thepreviously foundeigenvalues willbe extracted again. e 5.Constraints mustbedefined abovethesubcase level. 2.7.5Parameters forDirectComplex Eigenvalue Analysis Thefollowing parameters areusedinDirectComplex Eigenvalue Analysis: 1. 2, 3. ,L, 5. 6. 7. 8.ASETOUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT13SPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPR@D,CPQUAD1 CPQUAD2 CPTRIA1 CPIRIA2 CPTUBE, CPQDPLT, CPTRPLTe.~._… .—-…-?–——.-…2……….—.—–..—.—.—…——.—3.. CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. -optional. Therealvalueofthisparanlete isusedasauniform structural damping coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhydroelastic problems. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoinI WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe o printed. Allfluidrelated massesareignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMCimodule, Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.7-16(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 2,7.6RigidFormatErrorMessages fromDirectComplex Eigenvalue Analysis mThefollowing fatalerrorsaredetected bytheDMAPstatements intheDirectComplex Eigenvalue Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. DIRECT COMPLEX EIGENVALUE ANALYSIS ERRk7JRMESSAGE NO.1 COMPLEX EIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGC theCaseControl DeckmustselectanEIGCset, DIRECTCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FOR cardintheBulkDataDeckandCMETH!dD in -ATTEMPT TOEXECUTE MORETHAN100LOOPS. Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbermaybe increased byALTERing theREPTinstruction following SDR2. DIRECTC@lPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.3-MASSMATRIXREQUIRED FORWEIGHTAND BALANCE CALCULATIONS. Ihemassmatrixisnullbecause eithernoelements weredefined onConnection cards,nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.1-17(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.7-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8DIRECTFREQUENCY ANDRANDOM RESPONSE ●2.8.1 DMAPSequence forDirect Frequency andRandom Response RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NOOECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12CONO 13PLTSET 14PRTMSG 15PARAM 16PARAM 17CONO 18PLOT 19PRTMSG 20LABEL 21GP3DISP08-DIRECT FREQUENCY/RANDOM RESPONSE ANALYSIS-APR. 1986$ ALL$ KGGX=TAPE/KGG=TAPE/GOD=SAVE/GMD=SAVE/MOD-SAVE/BDO=SAVE $ //MpY/CARDNl)/O/o $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM,BGPDT,S lL/S,N,LUSET/ S,N,NOGPOT/ALWAYS=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ USET,GM,GO,KAA,BAA,MAA,KkAA,KFS,PSF ,QPC,EST,ECT,PLTSETX,PLTPAR, GPSETS,ELSETS/NOGPDT $ LBL5,NOGPOT $ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1//$ P1$ GEOM3,EQEXlN,GEOM2/,GPTT/NOGRAV $ 2.8-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA LABEL CONO EMA LABEL CONO EMA LABEL PURGE PURGEECT,EPT,BGPOT,SIL,GPTT,CSTM/EST, GEl,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG, K4NN,K4FF,K4AA,MNN,MFF,MAA,BNN, BFF,BAA, KGGX/NOSIMP/OGPST/GENEL $ LBL1,NOSIMP $ //f(ADD*/NoKGGX/l/O $ //*AoD,?/NoMGG/l/o $ //*AOD\u003e~/NOBGG=-l/l/O $ //*ADDf(/NoKIIGG/l/D $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDI CT,BELM,BOICT, / S,N,NOKGGX/S,N,NOMGG/S,N,NOBGG/S ,N,NOK4GG//C,Y9COUPMASS/ C,Y,CPBAR/C,Y,CPROO/C,Y,CPQUADl/C,Y ,CPQUA02/C,Y,CPTRIAl/ C,Y,CPTRlA2/C,Y,CPTUBE/C,Y ,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/BGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.8-2(05/30/86)"},"title":"User's Manual P8"},"/docs/users/users_manual_009/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#DISPLACEMENT RIGIDFORMATS\n2.9DIRECTTRANSIENT RESPONSE\n2.9.1DMAPSequence forDirectTransient Response\nRIGIDFORMAT DMAPLISTING\nAPRIL1986RELEASE\nDISPLACEMENT APPROACH, RIGIDFORMAT 9\nLEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"DIRECTFREQUENCY ANDRANDOM RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING kCOND 46COND k7GPWG 48OFP 49LABEL 50EQUIV 51COND 52S14A3 53LABEL 54PARAM 55GPk 56PURGE 57COND 58COND 59PARAM 60COND 61GPSP 62OFP 63LABEL 64EQUIV 65rCOND 66MCEI 67MCE2 68LABEL 69EQUIVLBL1,GRDPNT $ ERROR4,NOMGG $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-1/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MpY/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMD/MPCFl/GO,GOD/OMIT/KFS ,PSF,QPC/SINGLE $ LBL4,GENEL $ LBL4,NOSIMP $ //fEQ*/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,cARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl/ BGG,BNN/MpCFl/K4GG,KbNN/MpcF 1$ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,BGG,KkGG/KNN,MNN ,BNN,K4NN $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN, BFF/51NGLE/K4NN,K4FF/slNGLE $ 2,8-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 8 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94COND SCE1 LABEL EQUIV EQUIV EQUIV EQUIV CONO SMP1 COND SMP2 LABEL CONO SMP2 LABEL CONO SMP2 LABEL DPD EQUIV PARAM PARAM BMG PARAM PURGELBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs, ,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ BFF,BAA/OMIT $ K4FF,K4AA/oMIT $ LBL5,0MIT $. USET,KFF,,,/GO,KAA,KOO, LOO,,,,,$ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETO,TFPOOL,DLT,PSOL, FRL,,,, EQDYN/LUSET/S,N,LUSETO/NOTFL/S,N,NOOLT/S,N,NOPSOL/S ,N, NOFRL/NONLFT/NOTRL/NOEECl//S ,N,NOUE $ GO,GOD/NOUE/GM,GMD/NOUE $ //ADD/NEVER/l/O $ //MPY/REPEATF/- l/l$ MATPOOL,BGPDT,EQEXlN,CSTM/BDPOOL/S,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //AND/NOFL/NOABFL/NOKBFL $ KBFL/NOKBFL/ ABFL/NOABFL $ 2.8-4(05/30/86)\nDIRECT FREQUENCY ANDRANDOM RESPONSE ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95COND LBL13,NOFL $ 96MTRXIN, ,BDPOOL,EQDYN,,/ABFL,KBFL,/LUSETD/S,N,NOABFL/S,N,NOKBFL/ 0$ 97LABEL 98PURGELBL13$ 0UDVC1,0UOVC2,XYPLTFA,0PPC1 ,OQPC1,OUPVC1,OESC1 ,0EFC1,0PPC2, 0QPC2,0UPVC2,0ESC2,0EFC2,XYPLTF ,PSDF,AUTO,XYPLTR, K2PP,M2PP,B2PP,K2DD,M2Do,B2DD/NEvER $ 99CASE 100MTRXIN 101PARAM 102PARAM 103EQUIVCASECC,PSDL/CASEXX/FREQ/S,N,REPEATF/S,N,NOLOOP $ CASEXX,MATPOOL,EQDYN, ,TFPOOL/K2DPP,M2DPP,B2PP/LUSETD/S,N, NoK2DPP/s,N,NoM2DPP/s,N,NoB2PP $ //AND/NoM2PP/NoABFl./NoM2DPP $ //$(AND*/NOK2PP/NOFL /NOK2DPP $ K2DPP,K2PP/NoFL/M2DPP,M2PP/NoABFL $ 106 107 108 109 110 111 112 113 114COND ADD5 COND TRNSP ADD LABEL PARAM PARAM PARAM PURGE EQUIV 115COND 116GKADLBLFL2,NOFL $ ABFL,KBFL,K2DPP,,/K2PP/(-l.o,o.o) $ LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M2DPP/M2PP/MFAcT $ LBLFL2 $ //AND/BoEBA/NouE/NoB2PP $ //AND/KDEK2/NoGENL/NoslMP $ //AND/MOEMA/NOUE/NOM2PP $ K2DD/NoK2PP/M2DD/NoM2PP/B2DD/NoB2PP $ M2PP,M20D/NoA/B2PP, B2DD/NoA/K2PP,K2DD/NoA/ MAA,MDD/MDEMA/BAA,BDD/BDEBA $ LBL18,NOGPDT $ USETD,GM,GO,KAA, BAA,MAA, K4AA,K2PP,M2PP,B2PP/KDD,BDD,MDD,GMO, GoD,K2DD,M2DD,B2D0/FREQRESP/Dl SP/*DIRECT~~/C,Y,G=O.O/ o.o/o.o/NoK2PP/NoM2PP/NoB2PP/ MPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KDEK2/-l $ 2.8-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 117 118 119 120 121 122 123 124 I25 126 127 128 129 130 131 132 133 134 135 136 137 138 139LABEL EQUIV COND COND FRRD EQUIV VDR COND CONO SDR3 OFP XYTRAN XYPLOT JUMP LABEL OFP LABEL COND EQUIV CONO SDR1 LABEL SDR2LBL18$ B2DD,BDD/NoBGG/ M2DD,MoD/NoslMP/ K2DD,KDD/KoEK2 $ ERROR1,NOFRL $ ERROR2,NODLT $ CASEXX,USETD,DLT,FRL,GMD,GOD,KDD, BDD,MDD,,DIT/UDVF,PSF,PDF,PPF/ DISP/DIRECT~t/LUSETD/MPCF l/SINGLE/OMIT/ NONCUP/FRQSET $ PPF,PDF/NOSET $ CASEXX,EQDYN,USETD,UDVF ,PPF,XYCDB,/OUDVCl ,/FREQRESP/ DIRECT/S,N,NOSORT2/S,N ,NOD/S,NsNOP/o $ LBL15,NOD $ LBL15A,NosoRT2 $ OUDVC1,,,,,/0UDVC2,,,,, $ 0UDVC2, ,,,,//S,N,CARONO $ XYCDB,0UOVC2 ,,,,/XYPLTFA/FREQ/~DSET/S,N, PFILE/ S,N,CARDNO $ XYPLTFA// $ LBL15$ LBL15A $ OUDVC1,,,,,//S,N,CARONO $ LBL15$ LBL20,NOP $ UDVF,UPVC/NOA $ LBL19,NOA $ USETD,,UDVF,,,GOD,GMD,PSF, KFS,,/UPVC,,QPC/l/*DYNAMICS~~ $ LBL19$ CASEXX,CSTM,MPT,D IT,EQOYN, SILD,,,BGPDP,PPF,QPC,UPVC, EST,XYCDB, PPF/OPPCl,OQPCl ,OUPVC1,OESC1,OEFC1 ,PUPVC1/FREQRESP/ S,N,NOSORT2 $ 2.8-6(05/30/86)\nDIRECTFREQUENCY ANDRANDOM RESPONSE ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTIN6 140COND lklSDR3 142OFP 143XYTRAN 144XYPLOT 145COND 146RANDOM 147COND 148XYTRAN a149 150 151 152 153 154 I55 156 157XYPLOT JUMP LABEL PURGE OFP LABEL PURGE COND PLOT 158PRTMSG 159LABEL 160COND 161REPTLBL17,NOSORT2 $ OPPC1,OQPC1,OUPVC1 ,0ESCl,0EFCl,/OPPC2,0QPC2,0UPVC2,0ESC2, 0EFC2* $ 0PPC2,0QPC2,0UPVC2,0EFC2,0ESC2 ,//S,N,CARDNO $ xYcoB,oPPc2,oQPc2,ouPvc2,oEsc2,oEFc2/xYPLTF/*FREQ$~/PsET/ S,N,PFILE/S,N,CARDNO $ XYPLTF// $ LBL16,NOPSDL $ XYCDB,DIT,PSDL ,0UPVC2,0PPC2,0QPC2,0ESC2,0EFC2, CASEXX/PSDF,AUTO/ S,N,NORD $ LBL16,NORD $ XYCDB,PSDF,AUTO ,,,/XYPLTR/RAND/PSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTR// $ LBL16$ LBL17$ PsDF/NosoRT2 $ OUPVC1,OPPC1,OQPC1,OEFC1,OESC1 ,//S,N,CARDNO $ LBL16$ PSDF/NOPSDL $ LBL20,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASEXX,BGPDT, EQEXIN,S IP,,PUPVC1, GPECT,0ESCl/PLOTX2/NS lL/LUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx2// $ LBL20$ FINIS,REPEATF $ LBL13,1OO $ 162PRTPARM //-3/DIRFRRD $ 2.8-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 163JUMP 164LABEL 165PRTPARM 166LABEL 167PRTPARM 168LABEL 169PRTPARM 170LABEL 171PURGE 172ENDFINIS$ ERROR2 $ //-2/DIRFRRD $ ERROR1 $ //-1/DIRFRRD $ ERROR4 $ //-4/*DIRFRRDff $ FINIS$ DUMMY/ALWAYS $ $ 2.8-8(05/30/86)\n2.8.2 5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. 32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52.DIRECTFREQUENCY ANDRANDOMRESPONSE Description ofImportant DMAPoperations forOirectFrequency andRandomResponse GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers, PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GotoOMAPNo.87ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethes“ructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixis EMAassembles stiffness matrix[Kg]andGrmassanddamping matrixtablesanddictionaries tobeassembled. dPointSingularity Table. GotoDMAP No.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoOMAPNo.39ifnoviscous damping matrixistobeassembled. EMAassembles viscous damping matrix[699]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled. EMAassembles structural dampingamatrix [Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested. GotoDMAPNo.168andprintErrorMessage No.4ifnomassmatrixexists. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.53iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. 2.8-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 55. 57. 58. 60. 61. 62. 64. 65. 66. 67. 69. 70.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo.63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn],[Mgg]to[Mnn],[Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist, GotoDMAPNo.68ifnomultipoint constraints exist, MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn], MCE2partitions stiffness, massanddamping matrices I‘nnI‘nm[Bgg]= “+– 1Bmn]Bmm [1ii:n1K:m and [Kjg]= –+– K:nIK;m andperforms matrixreductions — [Knn]=[Knn]+[G][Kmn] +[Kn][Gm] +[G][Kmm][Gm] , [Mnn]=[inn]+[G~][Mmn] +[Mn][Gm] +[G][Mmm][Gm] , [Bnn]=[;nn]+[G~][Bmn] +[Bn][Gm] +[G][Bm][Gm] , [K:nl=[:nl+[Gj[K;nl +[K:nlTIGml +[G:l[K:ml[Gml . Equivalence [Knn]to[Kff],[Mnn]to [Kf]ifnosingle-point constraints GotoDMAPNo.72ifnosingle-point[Mff]s[Bnnlto[Bffland[Knn14to exist. constraints exist, 2.8-10 (05/30/86)\n71.SCE1partDIRECTFREQUENCY ANDRANDOMRESPONSE tionsoutsngle-point constraints [Knn]= [1‘ff‘‘fs [1‘ff’‘fs—+— , [Mnn]=TM– , KsfIKss sf:;;] [K:n]=[~~] [Bnnl=‘f_and 73.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 74.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 75.Equivalence [Bfflto[Baalifnoomitted coordinates exist. 76.Equivalence [Kf]to[Kalifnoomitted coordinates exist. 77.GotoDMAPNo.87ifnoomitted coordinates exist. 78,SMP1partitions constrained stiffness matrix [1iilK [Kff]=:-kK , oa00 solvesfortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[~aa]+[Kao][Go] . 79.GotoDMAPNo.81ifnomassmatrixexists. 80.SMP2partitions constrained massmatrix [1MlMao [Mffl=:~M– ‘ oa00 andperforms matrixreduction [Maa]❑ [aa]+[Maol[Gol +[MaoGolT +[G:IIMOOIIGOI 82.GotoDMAPNo.84ifnoviscous damping matrixexists. 83.SMP2partitions constrained viscous damping matrix [1IB [Bff]=;+= * OaIBOO 2,8-11(05/30/86)\n85. 86. 88. 89. 92. 95. 96. 97. 99. 100. 103. 104. 105. 106. 107. 108.DISPLACEMENT andperforms matrixreduction [Baa]=[Baal+[Baol[Gol + GotoDMAPNo.87ifnostructural dampingRIGIDFORMATS [BaoGOIT +[Gl[Bool[Gol matrixexists. SMP2partitions constrained structural damping matrix andperforms[K:f] matrix reduction[14,4 .a+3 K4I4 oa00 [Ko][Go] +[KoGo]T +[G][Ko][Go] . DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers, including extra pointsintroduced fordynamic analysis, andprepares Transfer Function Pool,Dynamics Load Table,PowerSpectral Density ListandFrequency Response List. Equivalence [Go]to[G:]and[Gm]to[Gjif fordynamic analysis. BMGgenerates DMIGcardimages describing structure.therearenoextrapointsintroduced theinterconnection ofthefluidandthe GotoDMAPNo.97ifnofluid-structure interface isdefined. MTRXINgenerates fluidboundary matrices [Ab,fL] and[Kb,fk]. Thematrix[Kb,fk] is generated onlyforanonzero gravity inthefluid. Beginning ofloopforadditional setsofdirect inputmatrices. CASEextracts theappropriate record fromCASECC corresponding tothecurrent copies itintoCASEXX. MTRXIN selects thedirect inputmatrices [K~~], [M~~]and[Bpjforthecurrent Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequiva’ [Mplto[Mlifthereisno[Ab,fL]. GotoDMAPNo.1D9ifnofluid-structure interface isdefined. ADD5adds[Kbfk]and[Kl* GotoDMAPNo.109ifthere Transpose [Ab,fg] toobtainandsubtracts [Ab,f]fromthemtoform[Kpl. isno[Ab,fk]. [Ab,fL]T. ADDassembles inputmatrix[Mp]=MFACT[AbfL]T+[M~~].9 2.8-12 (05/30/86)loopand Oop, ence\nDIRECTFREQUENCY ANDRANDOMRESPONSE @114.Equivalence [Mp]to[M\u0026l, [Bp1to[Bdland[Kplto[Kd]ifnoconstraints areapplied, [Maa]to[Mdd]iftherearenodirect inputmassmatrices andnoextra points, and[Baa]to[Bdd]iftherearenodirect inputdamping matrices andnoextra points. 115.GotoDMAPNo.117ifonlyextrapoints aredefined. 116.GKADassembles stiffness, massanddamping matrices foruseinDirectFrequency Response: [Kddl=(1+‘ig)[K;d] +[Kjd] +i[K:d] , [Mddl=[Mdl+[MdJ and [Bald]❑ [\u0026]+[B;dlo Directinputmatrices maybecomplex. 118,Equivalence [Kid]to[Kdd]ifallstiffness isDirectMatrixInput,[Md]to[Mold] ifallmassisDirectMatrixInputand[B~dlto[Bald]isalldamping isDirectMatrix Input. 119,GotoDMAPNo.166andprintErrorMessage No.1ifthereisnoFrequency Response List. 120,GotoDMAPNo.164andprintErrorMessage No.2ifthereisnoDynamics LoadTable. o121.FRRDformsthedynamic loadvectors {Pd}andsolvesforthedisplacements usingthe following equation [-MddU2+iBddu+Kdd]{ud}={Pd}. 122. 123. 124. 125. 126. 127. 128, 129. 130.Equivalence {Pplto{Pd}ifnoconstraints areapplied. VDRprepares solution setdisplacements, sorted byfrequency, foroutput. GotoOMAPNo.133ifthereisnooutputrequest forthesolution set. GotoDMAPNo.131ifthereisnooutputrequest forsolution setdisplacements sortedby pointnumber. SDR3sortsthesolution setdisplacements bypointnumber. OFPformats therequested solution setdisplacements, sortedbypointnumber, prepared by SDR3andplacesthemonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution setdisplacements vs. frequency. XYPLOTprepares therequested X-Yplotsofthesolution setdisplacements vs.frequency. GotoDMAPNo.133. 2.8-13(05/30/86)\n132. 134. 135. 136. 137. 139. 140. 141. 142. 143. 144. 145. 146. 147. 148. 149. 150. 153. 156.DISPLACEMENT RIGIDFORMATS OFPformats therequested solution setdisplacements, sortedbyfrequency, prepared byVDR andplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.159ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses. Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo.138ifnoconstraints areapplied. SDR1recovers dependent components ofdisplacements {Uo}=[G~]{Ud} , 11Uf+Ue ———={Un+Ue} , ‘s H+U‘ne—.— ={up} ‘m11‘d—-.{Uf+Ue) Y uo {Urn}=[G;]{uf +ue} , andrecovers single-point forcesofconstraint {qs}=-{Ps. SDR2calculates element forces(OEFCl) andstresses (k3ESCl+[K{s]{Uf}. andt)reuares loadvectors (!3PPC1), displacement vectors (OUPVCl) andsingle-poirit forcesof’constraint (~QpCl) for outputandtranslation components ofthedisplacement vector(PUGVC1), sortedbyfrequency, GotoDMAPNo.151iftherearenooutputrequests sortedbypointnumberorelement number. SDR3prepares requested outputsortedbypointnumberorelement number. 9FPformats thetablesprepared bySDR3sortedbypointnumberorelement number, andplaces themonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPLOTprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.frequency, GotoDMAPNo.154ifthereisnoPowerSpectral Density List. RANDOMcalculates powerspectral density functions (PSDF)andautocorrelation functions (AUTO)usingthepreviously calculated frequency response. GotoDMAPNo.154ifnoRANDOMcalculations arerequested. XYTRANprepares theinputforrequested X-YplotsoftheRANDOMoutput. XYPLOTprepares therequested X-Yplotsofautocorrelation functions andpowerspectral density functions. GotoDMAPNo.154. OFPformats thefrequency response outputrequests prepared bySCR2,sortedbyfrequency, andplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.159ifnodeformed structure plotsarerequested. 2.8-14 (05/30/86I\nDIRECTFREQUENCY ANDRANDOMRESPONSE 157.PLOTprepares allrequested deformed structure andcontour plots, ●158.PRTMSGprintsplotter data,engineering ciataandcontour dataforeachdeformed plot generated. 160.GotoDMAPNo,170ifnoadditional setsofdirectinputmatrices needtobeprocessed. 161.GotoDMAPNo.97ifadditional setsofdirectinputmatrices needtobeprocessed. 162,PrintErrorMessage No.3andterminate execution. 163.GotoDMAPNo.170andmakenormalexit. 165.PrintErrorMessage No.2andterminate execution. 167,PrintErrorMessage No.1andterminate execution. 169.PrintErrorMessage No.4andterminate execution. 2.8-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8.3OutputforDirectFrequency andRandomResponse Thefollowing printed output, sortedbyfrequency (S@RTl) orbypointnumberorelement number(S0RT2), isavailable, eitherasrealandimaginary partsormagnitude andphaseangle(0°-●360°lead),forthelistoffrequencies specified by(FREQUENCY: 1.Displacements, velocities andaccelerations foralistofPHYSICAL points (gridpoints andextrascalar points introduced fordynamic analysis) orS0LUTI!3N points(points used intheformulation ofthedynamic equation). 2.Nonzero components oftheapplied loadvectorandsingle-point forcesof alistofPHYSICAL points. 3.Stresses andforcesinselected elements (ALLavailable onlyforS@RTl). Thefollowing plotter outputisavailable forFrequency Response calculations: 1.Undeformed plotofthestructural model. 2,Deformed shapesofthestructural modelforselected frequencies. 3.Contour plotsofstresses anddisplacements for,selected frequencies. 4,X-Yplotofanycomponent ofdisplacement, velocity oracceleration ofa orS@LUTION point. 5.X-Yplotofanycomponent oftheapplied loadvectororsingle-point constraint. 6,X-Yplotofanystressorforcecomponent foranelement. Thefollowing plotter outputisavailable forRandomResponse calculations:constraint for PHYSICAL point forceof 1.X-Yplotofthepowerspectral density versusfrequency fortheresponse ofselected components forpointsorelements. 2.X-Yplotoftheautocorrelation versustimelagfortheresponse ofselected components forpointsorelements. Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabular form(seeSection 4.3).Thisistheonlyformofprinted outputthatisavailable forRandomResponse. Also,a printed summary isprepared foreachX-Yplotwhichincludes themaximum andminimum valuesofthe plotted function. 2.8,4CaseControl OeckforDirectFrequency andRandomResponse Thefollowing itemsrelatetosubcase definition anddataselection forDirectFrequency and RandomResponse: 2.8-16(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8.DIRECTFREQUENCY ANDRANDOMRESPONSE Atleastonesubcase mustbedefined foreachuniquesetofdirectinputmatrices (K2PP, M2PP,B2PP)orfrequencies. Consecutive subcases foreach definetheloading conditionssetofdirectinputmatrices orfrequencies areusedto onesubcase foreachdynamic loading condition. Constraints mustbedefined abovethesubcase level. DL@ADmustbeusedtodefineafrequency-dependent loading condition foreachsubcase. FREQUENCY mustbeusedtoselectone,andonlyone,FREQ,FREQ1, orFREQ2cardfromthe BulkDataDeckforeachunique setofdirect inputmatrices. Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure mustbechanged toreflect thesetsofdirectinputmatrices thatwerecompleted, and FREQUENCY mustbechanged toselectaFREQ,FREQ1,orFREQ2cardthatreflects any frequencies forwhichtheresponse hasalready beendetermined, Otherwise, theprevious calculations willberepeated. flFREQUENCY maybeusedabovethesubcase levelorwithineachsubcase toselectasubset ofthesolution frequencies foroutputrequests. Thedefault istouseallsolution frequencies. IfRandomResponse calculations aredesired, RANDOMmustbeusedtoselectRANDPSand RANDTicardsfromtheBulkDataDeck.OnlyoneOFREQUENCY andFREQUENCY cardcanbe usedforeachsetofdirectinputmatrices. 2.8.5 Parameters forDirectFrequency andRandomResponse Thefollowing parameters areusedinDirectFrequency 1, 2. 3. 4.ASETllJT -optional. Apositive integer valueofandRandomResponse: thisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorO“suppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, — CPTRBSC ,-optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. ~-optional, Therealvalueofthisparameter isusedasauniform structural damping coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhyclroelastic problems. 2.8-17(05/30j86)\n5, 6. 7. 8.DISPLACEMENT RIGIDFORMATS GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe ● printed. Allfluidrelated massesareignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional, Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.8,6Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheDirectFrequency andRandomResponse, RigidFormat8,areALTERed inautomated substructure analyses. e Phase1:4,56,88-120, 121-162 Phase2:4,5-5,10-20,23-24,43-53,111-112, 118-118, 135-158 Phase3:87,90-136, 138,160-162 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.8.7 RigidFormat ErrorMessages fromDirect Frequency andRandom Response Thefollowing fatalerrorsaredetected RandomReponse rigidformat. Thetextforeach isfollowed byadditional explanatory material,bytheDMAPstatements intheDirectFrequency and errormessage isgivenbelowincapital letters and including suggestions forremedial action. DIRECTFREQUENCY ANDRAND~MRESPONSE ERRORMESSAGE N@.1-FREQUENCY RESPONSE LISTREQUIRED FOR FREQUENCY RESP13NSE CALCULATIONS. Frequencies tobeusedinthesolution offrequency response problems mustbesupplied onaFREQ, 2.8-18(05/30/86) ●\nDIRECTFREQUENCY ANDRANDOMRESPONSE FREQ1,orFREQ2cardintheBulkDataDeckandFREQintheCaseContro’ frequency response set.Deckmustselecta DIRECTFREQUENCY ANDRANDL3MRESPONSE ERR@RMESSAGE N@.2-DYNAMIC LOADSTABLEREQUIRED FOR FREQUENCY RESPONSE CALCULATI!dNS. Dynamic loadstobeusedinthesolution offrequency response problems mustbespecified onan RLOADlorRL!3AD2cardintheBulkDataDeckandDL13ADintheCaseControl Deckmustselecta dynamic loadset. DIRECTFREQUENCY ANDRAND@MRESPONSE ERR!ZIRMESSAGE NO.3-ATTEMPT ToEXECUTE Mk3RETHAN100LOOPS. Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbermaybe increased byALTERing theREPTinstruction following thelastOFPinstruction. DIRECTFREQUENCY ANDRANDOMRESP@NSE ERR@RMESSAGE NO.4-MASSMATRIXREQUIRED FORWEIGHTAND BALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined onConnection cards,nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.8-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8-20(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.9DIRECTTRANSIENT RESPONSE 2.9.1DMAPSequence forDirectTransient Response RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAN 16PARAH 17COND 18PLOT 19PRTMSG 20LABEL 21GP3DISP09-DIRECT TRANSIENT RESPONSE ANALYSIS -APR.1986$ ALL$ UDVT=APPEND/TOL=APPEND $ //t4PY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPOT,CSTM,BGPDT,S lL/S,N,LUSET/ S,N,NOGPDT/ALWAYS=-l $ BGPOT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ USET,GM,G0,KAA,BAA,MAA,K4AA, PST,KFS,QP,EST,ECT,PLTSETX,PLTPAR, GPSETS,ELSETS/NOGPDT $ LBL5,NOGPDT $ GEom2,EQExlN/EcT s PcDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JLMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX;// $ PI$ GEoM3,EQEx1N,GEoM2/sLT,GPTT/NoGRAv $ 2.9-1(05/30/86)\nDISPLACEMENT RIGIDFORMAT\u003e RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 3b 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND EMA LABEL COND EMA LABEL PURGE PURGEECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP=-l/l/S,N,NOGENL=- l/S,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG, K4NN,K4FF,K4AA,MNN,MFF ,MAA,BNN,BFF,BAA,KGGX/NOS lMP/ OGPST/GENEL $ LBL1,NOSIMP $ //ADD~~/NOKGGX/l/O $ //~~ADD/NOMGG/l/O $ //ADD/NOBGG=-l/l/O $ //ADD/NoK4GG/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MDICT,BELM,BDICT,/ S,N,NOKGGX/S,N,NOMGG/S,N,NOBGG/S,N ,NOK4GG//C,Y,COUPMASS/ C,Y,CPBAR/C,Y,CPROD/C,Y,CPQUADl/C,Y, CPQUAD2/C,Y,CPTRIAl/ c,Y,CPTRlA2/C,Y,CPTUBE/C,Y, CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/BGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.9-2(05/30/86)"},"title":"User's Manual P9"},"/docs/users/users_manual_010/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#DISPLACEMENT RIGIDFORMATS\n2.10MODALCOMPLEX EIGENVALUE ANALYSIS\n●2.10,1 DMAPSequence forModalComplex Eigenvalu:_ Analysis\nRIGIDFORMAT DMAPLISTING\nAPRIL1986RELEASE\nDISPLACEMENT APPROACH, RIGIDFORMAT 10\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"DIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING k5 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69COND COND OFP LABEL EQUIV COND SMA3 LABEL PARAN GP4 PURGE COND COND PARAN COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL EQUIVLBL1,GRDPNT $ ERROR3,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,WMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOSl HP$ LBLll$ //Mpy/NsKIp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT,CSTM,GPST/RG, ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMO/llPCFl/GO,GOD/OMIT/KFS,PST,QP/S INGLE$ LBL4,GENEL $ LBL4,NOSIMP $ //*EQit/Gp5pFLG/AIJTospC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBL4s KGG,KNN/MPCFl/MGG,MNN/MPCFl/ BGG,BNN/MPCFl/K4GG,K4NN/MPCF 1$ LBL2,MPCF1 $ USET,RG/GM $ usET,GM,KGG,MGG,BGG,K4GG/KNN,MNN, BNN,K4NN $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN,BFF/S lNGLE/K4NN,K4FF/SlNGLE $ 2.9-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70CONO 71SCE1 72LABEL 73EQUIV 74EQUIV 75EQUIV 76EQUIV 77COND 78SMP1 79COND 80SMP2 81LABEL 82COND 83SMP2 84LABEL 85COND 86SMP2 87LABEL 88OPD 89COND 90PURGE 91EQUIV 92BMG 93PARAM 94PURGELBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs, ,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ BFF,BAA/OMIT $ K4FF,K4AA/oMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLO,S ILD,USETD,TFPOOL,DLT, ,,NLFT,TRL, , EQDYN/LUSET/S,N,LUSETD/NOTFL/S,N,NODLT/NOPSDL/ NoFRL/S,N,NONLFT/S,N,NOTRL/NOEED//S,N,NOUE $ ERROR1,NOTRL $ PNLD/NONLFT$ GO,GOD/NOUE/GM,GMD/NOUE $ MATPOOL,BGPDT,EQEXlN,CSTM/BDPOOL/S,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //*AND~t/NOFL/NOABF L/N0K9FL $ KBFL/NOKBFL/ ABFL/NOABFL $ 2.9-4(05/30/86)\nDIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95COND 96MTRXIN, 97LABEL 98MTRXIN 99PARAM 100PARAM 101EQUIV 102COtJD 103AO05 104CONO 105TRNSP 106ADO 107LABEL 108PARAM 109PARAM 110PARAM 111PURGE 112EQUIV 113COND 114GKAD 115LABEL 116EQUIV 117PARAMLBLFL3,NOFL $ ,BDPOOL,EQDYN,,/ABFL,KBFL,/LUSETD/S,N,NOABFL/S,N,NOKBFL/ 0$ LBLFL3 $ cAsEcc,MATPooL,EQDYN,,TFPooL/K2DPP,M2DPP, B2PP/LusETo/s,N, NoK2DPP/s,N,NoM2DPP/s,N,NoB2PP $ //AND/NoM2PP/NoABFL/NoM20PP $ //ANOfi/NOK2PP/NOFL /NOK2DPP $ K20PP,K2PP/NoFL/M2DPP,M2PP/NoABFL LBLFL2,NOFL $ ABFL,KBFL,K2DPP,,/K2PP/(-l.o,o.o) LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M2DPP/M2PP/rlFAcT $ LBLFL2 $ //AND/KDEKA/NOUE/N0K2PP $ //ANo/MoEMA/NouE/NoM2pp $ //AND/KDEK2/NOGENL/NOSIMP $$ s K2DD/NoK2PP/M20D/NoM2PP/B2DD/NoB2PP $ M2PP,M200/NoA/B2PP,B20D/NoA/K2PP, K20D/NoA/MAA,MDD/MoEMA/ KAA,KDD/KOEKA $ LBL16,NOGPDT $ USET0,GM,G0,KAA,BAA,MAA,K4AA, K2PP,M2PP,B2PP/KDo,BDo,MDo,GMo, GOD,K2DD,t42DD,B2DD/~~TRANRESP\u003e~/7’KI lSP/*DIRECT~~/C,Y,G=O.O/ C,Y,W3=0.0/C,Y,W4=0.0/NOK2PP/NOM2PP/NOB2PP/ mPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KoEK2/-l $ LBL16$ M2DD,MDD/NoslMP/B2DD,Boo/NoGPDT/K2DD ,KDo/KDEK2 $ //Aoo/NEvER/l/o $ 2.9-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 118PARAM 119LABEL 120PURGE 121CASE 122PARAM 123TRLG 124EQUIV 125TRD 126VDR 127COND 128SOR3 129OFP 130XYTRAN 131XYPLOT 132LABEL 133PARAM 134COND 135EQUIV 136COND 137SDR1 138LABEL 139SOR2 140SOR3//MPY/REPEATT/l/-l $ LBL13$ PNLD,OUDV1,OPNL1 ,0UDV2,0PNL2,XYPLTTA,0PP1 ,OQP1,OUPV1,OES1 , oEFl,oPP2,oQP2,ouPv2,oEs2,oEF2,PLoTx2,xYPLTT/NEvER $ CASECC,/CASEXX/\u003e’TRAN$/S,N,REPEATT/S, N,NOLOOP $ //,MpY,!C/NCOL/O/l $ CASEXX,USETO,OLT,SLT,BGPOT, SIL,CSTM,TRL,DIT,GMD,GOO,, EST,MGG, MPT/PPT,PST,PDT,PD,,TOL/S,N ,NOSET/NCOL $ PPT,POT/NOSET $ CASEXX,TRL,NLFT,OIT,KOD ,BOO,MDO,PD/UOVT,PNLD/D lRECT/ NOUE/NONCUP/S,N,NCOL/C,Y,lSTART $ CASEXX, EQDYN,USETD, UDVT,TOL, XYCDB,PNLD/OUDVl,OPNLl/ fcTRANREsp/,’?DIREcTjc/o/s ,N,NoD/s,N,NoFI/o $ LBL15,NO0 $ OUOV1,OPNL1 ●,,,/ouDv2,0PNL2,,,, $ 0UOV2,0PNL2 ,,,,//S,N,CARONO $ XYCDB,0UOV2,0PNL2, ,,/xyPLTTA/~~TRANI/oDsET*/5,N, PFiLE/ S,N,CARDNO $ XYPLTTA// $ LBL15$ //*AND$t/PJubtp/NOP/JuMPPLOT $ LBL18,PJUMP $ UDVT,UPV/NOA $ LBL17,NOA $ USETD,,UDVT,,,GOD,GMD,PST,KFS,,/UPV,,QP/l/DYNAMl CS$ LBL17$ CASEXX,CSTM,MPT,OIT,EQOYN, SILD,,,BGPOP,TOL,QP, UPV,EST,XYCDB, PPT/OPPl,OQPl,OUPVl,OESl,OEF l,PUGV/$cTRANRESP$ $ OPPl,OQPl,OUPVl,OESl,OEFl,/ 0PP2,0QP2,0UPV2,0ES2,0EF2’, $ 2.9-6(05/30/86)\nDIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 141OFP lh2SCAN 143OFP 144COND lb5PLOT 146PRTMSG 147LABEL 148XYTRAN 149XYPLOT 150LABEL 151COND 152REPT 153PRTPARM 154JUMP 155LABEL 156PRTPARM 157LABEL 158PRTPARM 159LABEL 160PURGE 161END0PP2,0QP2,0uPV2,0EF2,0ES2,//S ,N,CARDNO $ cAsEcc,oEs2,0EF2/oEsF2/RF $ 0ESF2,,,,,//S,N,CARONO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEXX,BGPDT, EQEXIN,SIP,,PUGV,GPECT,OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLoTx2// $ P2$ xYcDB,oPP2,oQP2,ouPv2,oEs2,oEF2/xYPLTT/’~TRAN/PsET/ S,N,PFILE/S,N,CARDNO $ XYPLTT// $ LBL18$ FINIS,REPEATT $ LBL13,1OO $ //-2/DIRTRD $ FINIS$ ERROR1 $ //-1/*DtRTRD\u003ek $ ERROR3 $ //-3/DIRTRD $ FINIS $ DUMMY/ALWAYS $ $ 2.9-7(05/30/86)\n2.9.2 5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. 32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forDirectTransient Response GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GotoDMAPNo.87ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. MtoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, mass,anddamping matrixtablesanddictionaries forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.39ifnoviscous damping matrixistobeassembled. EMAassembles viscous damping matrix[Bgg]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled. EMAassembles structural damping matrix[Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested, GotoDMAPNo.157andprintErrorMessage No.3ifnomassmatrixexists. GPWGgenerates weightandbalance information. giFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.53iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness 2.9-8(05/30/86)matrix[Kgg].\nDIRECTTRANSIENT RESPONSE 55, ●57, 58, 60. 61. 62. 64. 65. 66. 67.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ugl=0. GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo,63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. !3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn], [Mgg]to[Mnn], [Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist. GotoDMAPNo.68ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rnlandsolves for multipoint constraint transformation matrix [Gml=-[Rm]-l[Rnl. MCE2partitions stiffness, massanddamping matrices andperforms matrixreductions [Knn]=[nn]+[Gj[Kmnl +[nl[Gml +[Gj[\\ml[Gml , [Mnn]=[inn]+[G;l[Mmnl +[M;nl[Gml +[G;l[”mml[Gml , [Bnn]=[inn]+[G;][Bmnl +[B:nl[Gml +[G;l[Bl[Gm] , [K:n]=[i:n]+[G;][K:nl +[K:nlTIGml +[Gj[ml[Gml . 69.Equivalence [Knn]to[Kff],[Mnnlto[Mffls[Bnnlto[Bffland[Knl‘0 [Kf]ifnosingle-point constraints exist. 70.GotoDMAPNo.72ifnosingle-point constraints exist. 71.SCE1partitions outsingle-point constraints 2.9-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS [‘ff[Knn]=- Sf [‘ff [Bnnl=__ BSf1‘fs [1%‘‘fs[Mnn]= –+– , K;‘ MsfIMss i’”’‘K’n’=[$a” 73.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 74.Equivalence [Mff]to[Maalifnoomitted coordinates exist. 75.Equivalence [Bff]to[Baalifnoomitted coordinates exist. 76.Equivalence [Kf]to[Ka]ifnoomitted coordinates exist. 77.GotoDMAPNo.87ifnoomitted coordinates exist. 78.SMP1partitions constrained stiffness matrix [1iIKao [Kff]=flK— , oa00 . solvesfortransformation matrix[Go]=-[Kool-i[Koal andperforms matrixreduction [K~a]=[Kaa]+[Kao][Go] , 79.GotoDMAPNo.81ifthereisnomassmatrix. 80.SMP2partitions constrained massmatrix [1MIMao LMff]=~M— , oa00 andperforms matrixreduction lM;a]=[Maal+[Maol[Gol 82.GotoDMAPNo.84ifthereisnoviscous+[MaoGo]T +[G][Moo][Go] . damping matrix. 83.SMP2partitions constrained viscous damping matrix [18lBao [Bff]=\u0026B- , oa00 andperforms matrixreduction 2.9-10(05/30/86)\n85. 86. 88. 89. 91. 92. 95. 96. 98. 1010 102. 103. 104. 105. 106. 112.DIRECTTRANSIENT RESPONSE [BaI=[Baa]+[Bao][Go] +[BaOGJT +[Gl[BOOl[GJ GotoDMAPNo.87ifthereisnostructural damping matrix. SMP2partitions constrained structural damping matrix. [K:f]= andperforms matrixreduction [K:,]=[Ka]+[Ko][Go] +[K:OGOIT +[G:IIK:OIIGOI DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPflOL), Dynamics LoadTable(DLT),Nonlinear Function Table(NLFT), andTransient Response List(TRL). GotoDMAPNo.63ifnopotential gridpointsingularities exist. Equivalence [Go]to[G~]and[Gm]to[G~]iftherearenoextl fordynamic analysis. BMGgenerates DMIGcardimagesdescribing theinterconnect structure. GotoDMAPNo.97ifnofluid-structure interface isdefined.apointsintroduced onofthefluidandthe MTRXINgenerates fluidboundary matrices [Ab,fk]and[Kb,fg] ifafluid-structure interface isdefined. Thematrix[Kb,fg] isgenerated onlyforanonzero gravity inthe field. MTRXINselects thedirectinputmatrices [K~~],[M~~]and[Bp]. Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequivalence [Mplto[Mlifthereisno[Ab,ft]. GotoDMAPNo.107ifnofluid-structure interface isdefined. ,]and[K~~]andsubtracts [Ab,fg] fromthemtoform[Kpl. ADD5adds[Kbf GotoDMAPNo,107ifthereisno[Ab,fk]. T Transpose [Ab,fL] toobtain[Ab,fil ~ AODassembles inputmatrix [Mp]=MFACT[Abfk]‘+[M:;]. 9 Equivalence [Mplto[Mid],[Bp1to[Bd]and[Kplto[Kdlifnoconstraints 2.9-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS 113. 114. 116. 119. 121. 123. 124.areapplied, [Maa]to[Mdd]iftherearenodirectinputmassmatrices andnoextra Points, and[KaaltO[Kdd]iftherearenodirectinpUtstiffness matrices andnoextra points. GotoDMAPNo.115ifonlyextrapointsaredefined. GKADassembles stiffness, mass,anddamping matrices foruseinDirectTransient Response: and where and[fkj]=[K:d]+[K:d], [Mold]=[M:d]+[M:d)\u003e [Bdd]=[B:dl+[B:d]+L[K;d]+;[K:d], ‘3 [1KIO ;+; =\u003e[K:d], [1MIO ;\u003c‘)[M;d], [1BIO a+—‘\u003e[B;d], 010 Allmatrices arereal. Equivalence [Bd]to[Bddlifalldamping isDirectMatrixInPUt, [Mid]to[Mold]if allmassisDirect Matrix Inputand[Kdlto[Kdd]isallstiffness Input. Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding to copiesitintoCASEXX. TRLGgenerates matrices ofloadsversustime.{pl,tpl,and{p~} onecolumnperoutputtimestep.{Pd}isgenerated withonecolumnisDirectMatrix thecurrent loopand aregenerated with persolution time step,andtheTransient OutputList(TOL)isalistofoutputtimesteps. Equivalence {Plto{Plifthedandpsetsarethesame. 2,9-12 (05/30/86)\nDIRECTTRANSIENT RESPONSE ●125. 126. 127. 128. 129. 130. 131. 134. 135. 136. 139. 140. 141. 142.TRDformsthelinear, {Pd},andnonlinear, {PL},dynamic loadvectors andintegrates theequations ofmotion (usingthestandard oralternate starting procedure) overspecified timeperiods tosolveforthedisplacements, velocities, andaccelerations, usingthe following equation [M@2+Bddp+Kdd]{Ud}={Pd}+{P~~}. VDRprepares displacements, velocities andaccelerations, sortedbytimestep,foroutput usingonlythesolution setdegrees offreedom. GotoDMAPNo.132ifthereisnooutputrequest forthesolution set. SDR3prepares therequested output ofthesolution setdisplacements, velocities, accelerations andnonlinear loadvectors sortedbypointnumberofelement number. OFPformats thetablesprepared bySDR3sortedbypointnumberorelement numberandplaces themonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution setquantities. XYPLL3Tprepares therequested X-Yplotsofthesolution setdisplacements, velocities, accelerations andnonlinear loadvectors vs.time.. GotoDMAPNo.150ifnofurther outputisrequested. Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo.138ifnoconstraints areapplied. SDR1recovers dependent components ofdisplacements {Uo}=[@Ud} , M‘f+‘e——— ={Un+Ue}, ‘snUd ={Uf+uel ,—— U. {Um}=[G;]{uf+ue} , 11Un+Ue ———={up} ‘m andrecovers single-point forcesofconstraint {qs}❑ -{PSI+[K:s]{uf}. SDR2calculates element forces(!ilEFl)andstresses (OESl)andprepares loadvector (!3PP1), displacement, velocity andacceleration vectors(OWVl)andsingle-point forces of constraint (OQPl)foroutputandtranslation components ofthedisplacement vector(PUGV) sortedbytimestep. SDR3prepares requested outputsortedbypointnumberofelement number, 9FPformats thetablesprepared bySDR3foroutputsortedbypointnumberof element number andplacesthemonthesystemoutputfileforprinting. SCANexamines the outputthatmeetselement stresses andforcescalculated bySDR3andgenerates scanned thespecifications setbytheuser, 2.9-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS 143. 144. 145. 146. 148. 149. 150. 152. 153. 154. 156. 158.OFpformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.147ifnodeformed structure plotsarerequested. PLOTprepares allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. XYTRANprepares theinputforrequested X-Yplots. XYPL@Tprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint versustime. GotoDMAPNo.159ifnoadditional dynamic loadsetsneedtobeprocessed. GotoDMAPNo.119ifadditional dynamic loadsetsneedtobeprocessed. PrintErrorMessage No.2andterminate execution. GotoDMAPNo.159andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.3andterminate execution. 2.9-14(05/30/86)\nDIRECTTRANSIENT RESPONSE 2.9.3OutputforDirectTransient Response— ●Thefollowing printed output, sortedbypointnumberorelement number(S0RT2), isavailable atselected multiples oftheintegration timestep: 1.. 2. 3. 4. 5.Displacements, velocities, andaccelerations fora,listofPHYSICAL points(gridpoints andextrascalarpointsintroduced fordynamic analysis) orSOLUTION points(points used intheformulation ofthedynamic equation). Nonzero components oftheapplied loadvectorandsingle-point forcesofconstraint for alistofPHYSICAL points. Nonlinear forcevectorforalistofS!JLUTI~N points. Stresses andforcesinselected elements (Allnotallowed). Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputisavailable: 1.Undeformed plotofthestructural model. 2.Deformed shapesofthestructural modelforselected timeintervals. 3.Contour plotsofstresses anddisplacements forselected timeintervals. 4.X-Yplotofanycomponent ofdisplacement, velocity, oracceleration ofaPHYSICAL point oraSOLUTI@N point. 5.X-Yplotofanycomponent oftheapplied loadvector, nonlinear forcevector, or single-point forceofconstraint. 6.X-Yplotofanystressorforcecomponent foranelement. Thedatausedforpreapring theX-Yplotsmaybepunched orprinted intabular form(seeSection 4.3).Also,aprinted summary isprepared foreachX-Yplotwhichincludes valuesoftheplotted function. 2.9.4CaseControl DeckforDirectTransient Response Thefollowing itemsrelatetosubcase definition anddataselection Response: 1.Onesubcase mustbedefined foreachdynamic loading condition.themaximum andminimum forDirectTransient 2,DLOADand/orNONLINEAR mustbeusedtodefineatime-dependent loading condition for eachsubcase. 3.Allconstraints mustbedefined abovethesubcase level. 4.TSTEPmustbeusedtoselectthetime-step intervals tobeusedforintegration and outputineachsubcase. 2.9-15(05/30/86)\n2.9.5DISPLACEMENT RIGIDFORMATS 5.Ifnonzero initial conditions aredesired, ICmustbeusedtoselectaTICcardinthe BulkDataDeck. 6.Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure shouldbechanged toreflect anycompleted loading conditions. TheTSTEPselections mustbechanged ifitisdesired toresumetheintegration atthepointterminated. Parameters forDirectTransient Response Thefollowing parameters areusedinDirectTransient Response: 1. 2. 3. 4. 5. 6. 7. 8.ASET13UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. G-optional. Therealvalueofthisparameter isusedasauniform structural damping— coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhydroelastic problems. GRDPNT-optional. WeightGenerator to printed. Allfluid ISTART-optional.Apositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe related massesareignored. Apositive valueofthisparameter causestheTRDmoduletousethe second(oralternate) starting method(seeSection 11.4oftheTheoretical Manual). The alternate starting methodisrecommended wheninitial accelerations aresignificant and whenthemassmatrixisnon-singular. Thedefault valueis-1andcausesthefirst starting methodtobeused. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in 2.9-16(05/30/86)\nDIRECTTRANSIENT RESPONSE theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 9.W3andW4-optional. Therealvalues(radians/unit time)oftheseparameters areused aspivotal frequencies foruniform structura? damping andelement structural damping, respectively (seeSection 9.3.3oftheTheoretical Manual). Parameter W3isrequired if uniform structural damping isdesired. Parameter W4isrequired ifstructural damping isdesired foranyofthestructural elements. Parameter W3shouldnotbeusedfor hydroelastic prbblems, 10.WTMASS-optional, Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.9.6TheCONTINUL Feature Intransient analysis, equations beyondthelast(oritisfrequently necessary tocontinue theintegration ofthecoupled from~nyearlier intermediate) outputtimeforwhichthesolution was obtained inaprevious run.TheCON1-INUE feature (seeSection 11.4.2oftheTheoretical Manualfor details) makesitpossible todothiswithout re-executing theentireproblem. InordertousetheCONTINUE feature, theusershouldemploythefollowing steps: 1.Request acheckpoint ofacoupled transient analysis problem. 2.Checktoensurethatthesolution foratleastoneoutputtimeiscomputed inthisrun andthattheT13L(listofoutput times)andUDVT(displacement -velocity - acceleration) filesaresuccessfully checkpointed. 3.Restart theproblem bychanging anyoneormoreofseveral cardseitherintheCase Control Deck(DLOAD, NONLINEAR, TSTEPcards)and/orintheBulkDataDeck(TSTEP, OAREA, DLOAD,FORCE,etc.)thatdefineeither thedynamic loading and/orthetimestep selection. Ensurethatthefollowing conditions aresatisfied. a.Thestructural modelandtheconstraint datafortherestart mustbethesameas thatusedinthecheckpoint run. b.Thedynamic loading and/orthetimestepselection intherestart neednotbethe— sameasthatusedinthecheckpoint run. c.Iftheuserwishestocontinue theintegration fromanintermediate (rather than fromthelast)outputtimeofthecheckpoint run, theExecutive Control Decktoresettheparameter 2.9-17(05/30/86)aDMAPaltershouldbeemployed in NC13Ltotheappropriate valueby\nDISPLACEMENT RIGIDFORMATS meansofaPARAMstatement justbeforetheTRLGmoduleintheDMAPsequence. (See Section 11.4.2oftheTheoretical Manualfordetails). 4.Notethattheoutputoftherestart doesnotinclude thesolutions ofthecheckpoint●run,but~thosesolutions thatarecomputed bytherestart. Also,anyinitial conditions specified inthedatafortherestart areignored sincethesolution is continued byusingthedisplacements, velocities andaccelerations corresponding tothe specified outputtimeofthecheckpoint runasinitial conditions. 2.9.7Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheDirectTransient Response, RigidFormat9,areALTERed in automated substructure analyses. Phase1:4,56,88-124, 125-153 Phase2:4,5-5,10-20,23-24,43-53,109-110, 116-116, 135-149 Phase3:87,92-136, 138,151-153 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, interfere withtheautomatically generated DMAPstatement ALTERslistedabove.thesemustnot SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. a 2.9.8RigidFormatErrorMessages fromDirectTransient Response Thefollowing fatalerrorsaredetected bytheDMAPstatements intheDirectTransient Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. DIRECTTRANSIENT RESPONSE RESPONSE CALCULATIONS. Timestepintervals tobe selection mustbemadein DIRECTTRANSIENT RESPONSEERR@RMESSAGE NO.1-TRANSIENT RESP!3NSE LISTREQUIRED FORTRANSIENT usedmustbespecified onaTSTEPcardintheBulkDataDeckandaTSTEP theCaseControl Deck. ERRORMESSAGE NO.2-ATTEMPT T13EXECUTE M!3RETHAN100L!30PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbermaybeincreased by ALTERing theREPTinstruction following thelastXYPLOTinstruction. DIRECTTRANSIENT RESPONSE ERRORMESSAGE No.3-MASSMATRIXREQUIRED F(JRWEIGHTANDBALANCE CALCULATI!JNS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.9-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.10MODALCOMPLEX EIGENVALUE ANALYSIS ●2.10,1 DMAPSequence forModalComplex Eigenvalu:_ Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE kPARAM ~GP1 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP10-MODALCOMPLEX EIGENVALUE ANALYSIS -APR.1986$ ALL$ GOD=SAVE/GMD=SAVE/LAMA=APPEND/PH IA=APPENO $ //MPY/CARONO/O/O S GEOMl,GEOM2,/GPL,EQEX!N,GPDT,CSTM, BGPDT,SIL/S,N,LUSET/ NOGPOT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S, N,LUSEP $ GEoM2,EQExlN/EcT $ PCDB//$~PRES*////JUNPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //#,MpY,’i/pLTFLG/l/l .$ //9\u003cMpY*/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/JUMPPLOT/PLTFLG/S, N,PFILE $ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/,GPTT/NOGRAV $ ECT,EPT,BGPDT,S)L,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL $ ERROR5,NOSIMP $ 2.10-1 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26PURGE 27CONO 28E?lA 29LABEL 30COND 31EMA 32CONO 33GPWG 34OFP 35LABEL 36EQUIV 37COND 38SNA3 39LABEL 40PARAM 41GP~ 42PARAM 43PURGEOGPST/GENEL $ //ADO/NOKGGX/l/O $ //ADO/NOMGG/l/O $ EST,CSTM,MPT,01T,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ c,Y,cPRoo/c,Y,cPQuADl/c,Y,cPQuAD2/c,Y,cPTR lA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUllE/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,s,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSK IP/O/O$ CASECC,GEOM4, EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N ,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //ffAND*/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOD/OMIT/KFS/S lNGLE/QPC/NOSR/KLR,KRR,MLR,MRR, OH,MR/REACT $ 2.10-2(05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING bkCOND k5PARAM b6CONO 47GPSP h8OFP 49LABEL 50EQUIV 51CONO 52MCEI 53MCE2 54LABEL 55EQUIV 56CONO 57SCEI 58LABEL 59EQUIV 60EQUIV 61CONO 62SMPI 63SIIP2 6kLABEL 65CONO 66RBMGI 67RBMG2 68RBMG3 69RBMG4LBL4,GENEL $ //EQ/GpSpFLG/AUToSpC/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBLk$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPcFl $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3s KFF,KAA/OMIT $ MFF,HAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ KLL/LLL $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR $ 2.10-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70LABEL 71DPD 72COND 73EQUIV 74PARAM 75READ 76OFP 77COND 78OFP 79PARAM 80PARAH 81LABEL 82PURGE 83CASE 84MTRXIN 85PURGE 86EQUIV 87GKAD 88GKAM 89CEAD 90OFPLBL6$ OYNAMICS,GPL,SIL,USET/GPLD,S ILO,USETD,TFPOOL, ,,,,,EED,EQDYN/ LUSET/S,N,LUSETD/NOTFL/NODLT/NOPSDL/ NOFRL/NONLFT/NOTRL/S,N,NOEED//S,N,NOUE $ ERROR2,NOEED $ GO,GOD/NOUE/GM,GMD/NOUE $ //MpY/NEIGv/l/-l $ KAA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARDNO $ //ADD/NEVER/l/O $ //*/lPY~~/REPEATE/l/-l $ LBL13$ PHIH,CLAMA,OPHIH,CPHI D,CPHIP,QPC,OQPC1,OCPHIP,OESC1,OEFC1 , K2PP,M2PP,B2PP,K2DD,M20D,B2DD/NEvER $ CASECC,/CASEXX/CEIGN/S,N,REPEATE/S,N,NOLOOP $ CASEXX,MATPOOL, EQDYN,,TFPOOL/K2PP,M2PP, B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K2DD/NoK2PP/M2DD/NoM2PP/B2Do/NoB2PP $ M2PP,m2DD/NosET/B2PP,B2DD/NosET/K2PP,K2DD/NosET $ USETD,GM,GO, ,,,,K2PP,M2PP,B2PP/,, ,GMD,GOD,K2DD, M2DD,B2DD/cMPLEv/DlsP/moDAL/o.o/ ooo/o.o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/- 1/ -1/-1$ USETD,PH IA,MI,LAMA,DIT,M2DD ,B2DD,K2DD,CASEXX/MHH,BHH,KHH ,PHIDH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O.O/C ,Y,HFREQ=-1.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S ,N,FMODE $ KHH,BHH,MHH,EED,CASEXX/PHIH, CLAMA,OCEIGS,/S,N,EIGVS $ OCEIGS,,,,,//S,N,CARDNO $ 2.10-4(05/30/86)"},"title":"User's Manual P10"},"/docs/users/users_manual_011/":{"data":{"":"MODALCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 91COND 92OFP 93VDR 94COND 95OFP 96LABEL 97COND 9800R1 99EQUIV 100COND 101SDR1 102LABEL 103SOR2 104OFP 105LABEL 106COND 107REPT 108PRTPARM 109JUMP 110LABEL 111PRTPARM 112LABEL 113PRTPARM 114LABELLBL17,EIGVS $ CLAMA,,,,,//S,N,CARONO $ CASEXX,EQDYN, USETD,PH lH,CLAMA,,/OPHIH,/CE lGEN/W40DAL*/ NosoRT2/s,N,NoH/s,N,NoP/FmooE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ LBL17,NOP $ PHIH,PHIDH/CPHID $ CPHIO,CPHIP/NOA $ LBLNOA,NOA $ USETD,,CPHID, ,,GOO,GMD, ,KFS,,/cPHIP,,QPC/l/DYNAMICs $ LBLNOA $ CASEXX, CSTM,MPT,O IT,EQDYN,S ILD,,,,CLAMA,QPC,CPH IP,EST, ,/ ,OQPC1,OCPHIP,OESC1,OEFC1, /CEIGEN $ OCPHIP,OQPCl,OEFCl,OESCl,,//S,N ,CARDNO $ LBL17$ FINIS,REPEATE $ LBL13,1OO $ //-3/MDLcEAo $ FINIS$ ERROR2 $ //-2/MoLcEAo $ ERROR1 $ //-1/MDLCEAO $ ERROR4 $ 115PRTPARM //-4/MDLCEAD $ 2.10-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 116LABEL ERROR5 $ 117PRTPARM //-5/MDLCEAO $ 118LABEL FINIS$ 119PURGE DUMMY/MINUSl $ 120END s 2.10-6(05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS 2.10.2 Descripton ofImportant DMAPOperations forModalComplex Eigenvalue Analysis 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 44. 46. 47. 48.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers, PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprints GP3generates TA1generatesplotter dataandengineering dataforeachundeformed plotgenerated. GridPointTemperature Table. element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.116andprintErrorMessage No.5iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.112andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [K\u0026lto[Kgglifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 2.10-7 (05/30/86)\n50.Equivalence [Kggl 51.GotoDMAPNo.54DISPLACEMENT RIGIDFORMATS to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rgl=[RmRnlandsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices [Kggl.[:+’]and[“,,]=[++::] andperforms matrixreductions [Knn]=[nn]+[GJ[\\nl +[Knl[Gml +[Gl[Kmml[Gml and [Mnn]=[inn]+[G;l[Mmnl +[M;nlLGml +[G;l[Mmml[Gml ● 55.Equivalence [Knnlto[Kffland[Mnn]to[Mff]ifnosin91e-Point constraints exist” 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1Kffyfs[Knn]=~~K–and [1‘ff‘‘fs[Mnn]=-EM– . SfSs SfSs 59.Equivalence [Kff]tol.Kaa]ifnoomitted coordinates exist. 60.Equivalence [Mfflto[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1iIK [Kffl=:aK= , oa00 solvesfortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaal=[iaal+[Kal[Gol . 63.SMP2partitions constrained massmatrix [1iiMao [MffJ= :aM— oa00 2.10-8 (05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS andperforms matrixreduction 65.Goto 66,RBMG1 67.RBMG2 68.RBMG3[Maa] DMAPNo.70if partitions out [Kaa]=.[aal+[M:a][Go] +[G:l[Moal +[G:IIMOOIIGOI . therearenofree-body supports. free-body supports [1KLlIK [1MkkIM K and [Maa]= —+ . rkrrMrkIMrr decomposes constrained stiffness matrix[Kik]=lLLL][ULL]. formsrigidbodytransformation matrix [D]=-[KLL]-l[Kkr], calculates rigidbodycheckmatrix [x]=[Krr]+[Kr][D] andcalculates rigidbodyerrorratio E. x THTKrr 69.RBMG4formsrigidbodymassmatrix a[mr]=[Mrr]+[Mr][D] +[DT][MLr] +[DT][MLL][D]. 71.DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPOOL), andEigenvalue Extraction Data(EED). 72.GotoDMAPNo.110andprintErrorMessage No,2ifthereisnoEigenvalue Extraction Data. 73.Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced for dynamic analysis. 75.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{ua} =O, calculates rigidbodymodesbyfinding asquare [mol=[oolhnrl[tj.ol isdiagonal andnormalized, computes rigidbody [1[Oaol =o , ‘$romatrix[$ro]suchthat eigenvectors 2.10-9 (05/30/86)\n76. 77. 78. 81. 83. 84. 86. 87. 88.DISPLACEMENT RIGIDFORMATS calculates modalmassmatrix [ml=[Ol[Maa][4al andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. @FPformats thesummary ofeigenvalue extraction information (OEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.114andprintErrorMessage No.4ifnoeigenvalues werefound. OFPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices forthecurrent loop,[Kfp],[Mp]and [8p]. Equivalence [Mplto[Mid],[8plto[Bd]and[Kplto[Kid]ifnoconstraints areapplied. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,formin9 [Kd]$[kl\u0026]and[B$d]. GKAMassembles stiffness, massanddamping matrices inmodalcoordinates foruseinComplex Eigenvalue Analysis: e [Khh]=[k]+[\u0026j[K;d][$dh] s [Mhh] =[m]+[$~~][Md][$$dh] and [Bhh]=[b]+[$jh][Bd][$dh] , where andmi=modalmasses, bi=ml211fig(fi) ki.mT22 ii“ Directinputmatrices maybecomplex. 89.CEADextracts complex eigenvalues andeigenvectors fromtheequation [MhP2+Bhhp+Khh]{Uh}=O andnormalizes eigenvectors according tooneofthefollowing userrequests: 2.10-10 (05/30/86)\n90. 91. 92. 93. 94. 95. 97. 98. 99. 100. 101. 103. 104. 106. 107. 108.1)Unitmagnitude 2)Unitmagnitude OFPformats thesummary placesitonthesystemMODALCOMPLEX EIGENVALUE ANALYSIS ofaselected component ofthelargest component. ofeigenvalue extraction information (!3CEIGS) prepared byCEADand outputfileforprinting. GotoDMAPNo.105ifnocomplex eigenvalues werefound. 13FPformats thecomplex eigenvalues (CLAMA) prepared byCEADandplacesthemonthesystem outputfileforprinting. VDRprepares eigenvectors (!3PHIH) foroutput, usingonlytheextrapointsintroduced for dynamic analysis andmodalcoordinates. GotoDMAPNo.96if”there isnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. OFPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. GotoDMP.PNo.105ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses. DDR1transforms thecomplex eigenvectors frommodaltophysical coordinates Equivalence [$d]to[tplifnoconstraints areapplied. GotoDMAPNo.102ifnoconstraints areapplied. SDR1recovers dependent components ofeigenvectors M@f+$e —— ={$n++e} , +s{om}=[G:]{$n+I$e}, andrecovers single-point forcesofconstraint {qsl=[K~sl{+f}. SDRZcalculates element forces (@EFCl) andstresses (@ESCl) and (OCpHIp) andsingle-point forcesofconstraint (!JQpCl) foroutput.prepares eigenvectors OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.118andmakenormalexitifnoadditional setsofdirectinputmatrices need tobeprocessed. GotoDMAPNo.81ifadditional setsofdirectinputmatrices needtobeprocessed. PrintErrorMessage No.3andterminate execution. 2.10-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 109.GottoDMAPNo.118andmakenormalexit. 111.PrintErrorMessage No.2andterminate execution. 113.PrintErrorMessage No.1andterminate execution. 115.PrintErrorMessage No.4andterminate execution. 117.PrintErrorMessage No.5andterminate execution. 2.10-12 (05/30/86)\nMOOALCOMPLEX EIGENVALUE ANALYSIS 2.10.3 OutputforModalComplex Eigenvalue Analysis ●TherealEigenvalue Sunnnary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues extracted areincluded eventhoughnotallareusedinthemodalformulation. Thecomplex Eigenvalue Summary Tableandthecomplex Eigenvalue Analysis Summary, as described underDirectComplex Eigenvalue Analysis (seeSection 2.7.3), areautomatically printed foreachsetofdirectinputmatrices, Outputthatmayberequested isthesameasthatdescribed underDirectComplex Eigenvalue Analysis. OutputforSOLUTION pointswillhavethemodalcoordinates identified bythemodenumber determined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheSOLUTION pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis RigidFormatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.10.4 CaseControl DeckforModalComplex Eigenvalue Analysis ●Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectComplex Eigenvalue Analysis: 1.METHOD mustappear abovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck, 2,Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. 3.AnSPCsetmustbeselected abovethesubcase levelunlessthemodelisafreebodyor allconstraints arespecified onGRIDcards,ScalarConnection cards Elements. 4.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural dampingorwithGeneral isdesired. 2.10.5 Parameters forModalComplex Eigenvalue Analysis Thefollowing parameters areusedinModalComplex Eigenvalue Analysis: 2.10-13 (05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9.DISPLACEMENT RIGIDFORMATS ASET13UT -optional. Apositive integer valueofthisparameter causes theASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutput datablock. Thedefault valueisO. ●AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. CflUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint.— WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. LFREQandHFREQ-required, unlessparameter LMODESisused.Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. LMODES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey●aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails, VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.10.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.10-14 (05/30/86)\n( 2.10.7 TheAPPENDFeature TheAPPENDfeature canMODALCOMPLEX EIGENVALUE ANALYSIS beusedforrealeigenvalue extraction inModalComplex Eigenvalue Analysis. SeeSection 2.3.7fordetails. 2.10.8 RigidFormatErrorMessages fromModalComplex Eigenvalue Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalComplex Eigenvalue Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by‘additional explanatory material, including suggestions forremedial action. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORMODALF@RMULATI@N. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, ..-_—- nonstructural masswasnotdefined onaProperty card,orthedensity wasnot card. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE No.2-EIGENVALUE REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardinthe CaseControl DeckmustselectanEIGRset. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE Nfl.3-ATTEMPT TOEXTRACTIONdefined onaMaterial DATAREQUIRED F@R BulkDataDeckandMETHODinthe EXECUTE MORETHAN100LO@PS. Anattempt hasbeenmadetousemorethan100different setsofdirectinputmatrices. Thisnumber canbeincreased byALTERing theREPTinstruction following thelastOFPinstruction. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.4-REALEIGENVALUES REQUIRED FORMODAL F@RMULATIfiiN. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. M(ilDALC@MPLEX EIGENVALUE ANALYSIS ERRORMESSAGE Nfl.5-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.10-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS ● 2.10-16 (05/30/86)\nI DISPLACEMENT RIGIDFORMATS 2.11MODALFREQUENCY ANDRANDOMRESPONSE e2.11.1 RIGID APRILDMAPSequence forModalFrequency andRandomResponse FORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRAN OPTIONS INEFFECT GO\n1BEGIN 2PRECHK 3FILE kPARAM 5GP1 6PLTTRAN 7GP2 e8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP11- ALL$RIGIDFORMAT 11 DMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR MODALFREQUENCY/RANDOM RESPONSE ANALYSIS-APR. 1986$ GOD=SAVE/GMD=SAVE/LAMA=APPEND/PHl A=APPEND $ //ApY/CARDNO/o/o $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MpY/pLTFLG/I/l $ //MpY/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEoM3,EQEx1N,GEom2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/’I/S,N,NOGENL/S,N,GENEL $ ERROR7,NOSIMP $ 2.11-1(05/30/86)\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26PURGE 27CONO 28EMA 29LABEL 30CONO 31EMA 32COND 33GPWG 34OFP 35LABEL 36EQUIV 37CONO 38SNA3 39LABEL 40PARAM 41GP4 42PARAM 43PURGEOGPST/GENEL $ //AoD/NoKGGx/l/o $ //ADD/NoMGG/l/o $ EST,CSTM,MPT,01T,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,YC,Y ,CPBAR/ c,Y,cPRoo/c,Y,cPQuAol/c,Y,cPQuAD2/c, Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GROPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,,,,//S,N,cARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MpY/NsKIp/o/o $ CASECC,GEOM4, EQEXIN,GPOT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S ,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //*AND~~/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOO/OMIT/KFS ,PSF/SINGLE/QPC/NOSR/KLR,KRR,MLR, MRR,DM,MR/REACT/MDD/MODACC $ 2.11-2(05/30/86)\nMODALFREQUENCY ANDRANDOMRESPONSE RIGIDFORMAT DHAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 44CONO 45PARAM 46CONO 47GPSP 48OFP 49LABEL 50EQUIV 51COND 52MCEI 53MCE2 54LABEL 55EQUIV 56COND 57SCE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65EQUIV 66CONO 67RBMG1 68JUMP 69LABELLBL4,GENEL $ //EQ/GpsPFLG/AuTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBLk$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ LBL8$ LBL6$ 2,11-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 8G 81 82 83 8k 85 86 87 88 89 90 91COND LABEL RBMG2 COND RBMG3 RBMGk LABEL DPD COND PURGE EQUIV PARAM READ OFP COND OFP PARAM PARAM LABEL PURGE CASE MTRXINLBL7,MODACC $ LBL8s KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ OM,MLL,MLR,MRR/MR $ LBL7$ DYNAMICS,GPL,SIL,USET/GPLD, SILO,USETD,TFPOOL,DLT, pSDL,FRL)), EEO,EQOYN/LUSET/S,N,LUSETD/NOTFL/S, N,NOOLT/S,N,NOPSDL/ S,N,NOERL/NONLFT/NOTRL/S,N,NOEED//s ,N,NouE $ ERROR2,NOEED $ UEVF/NOUE $ GO,GOD/NOUE/GM,GMD/NOUE $ //MPY~~/NEIGV/l/-l $ KAA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MOOES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERRORJt,NEIGV $ LAMA,,,,,//S,N,CARDNO $ //ftADD/NEVER/l/O $ //MPY/REPEATF/l/-l $ LBL13$ 0UHVC1,0L!HVC2, XYPLTFA,0PPC1 ,OQPC1,OUPVC1,OESC1 ,0EFCi,0PPC2, 0QPC2,0UPVC2,0ESC2,0EFC2, XYPLTF, P5DF,AUTOXYPLTR, K2PPM2PP* B2PP,K2DD,M2DD,B2DD,0PPCA, IQP1,IPHIP1, IES1,IEF1,OPPCB, IQP2, IPHIP2, 1ES2,1EF2,ZQPC2,ZUPVC2 ,ZESC2,ZEFC2,ZQPC1,ZUPVC1,ZESC 1, ZEFC1/NEVER $ CASECC,PSOL/CASEXX/f(FREQ)f/S ,N,REPEATF/S,N,NOLOOP $ CASEXX,MATPOOL,EQDYN,,TFPOOL/K2PP,M2PP, B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ 2.11-4(D5/30/86)\nMODALFREQUENCY ANDRANOOMRESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 92PURGE 93PARAM 9kEQUIV 95GKAD 96GKAM 97COND 98COND 99FRRD 100EQUIV 101VDR 102COND 103COND 104SOR3 105OFP 106XYTRAN 107XYPLOT 108JUMP 109LABEL 110OFP 111LABEL 112CONDK200/NoK2PP/M2Do/NoM2PP/B200/NoB2PP $ //AND/fiDEMA/NouE/NoM2pp $ M2PP,M2DD/NoA/B2PP,B2DD/NoA/K2PP,K2oD/NoA/MAA,MDD/mDEMA $ USETD,GM,GO, ,,MAA,,K2PP,M2PP,B2PP/, ,MDD,GMD, GO0,K2DD,M2DD,B2DD/~~FREQRESP*/D lSP/MODAL/O.O/ o,o/o.o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/-l/ l/v.Y,MoDAcc =-1$ USETO,PHIA,MI, LAMA,DIT,M2DD, B2DD,K20D,CASEXX/MHH,BHH,KHH, PHIDH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O .O/C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N ,FMOOE $ ERROR5,NOFRL $ ERROR6,NODLT $ CASEXX,USETO,DLT, FRL,GMD,GOD,KHH ,BHH,MHH,PHIDH,DIT/UHVF,PSF, PDF,PPF/DISP/MODAL/LUSETD/MPCF I/SINGLE/ OMIT/NONCUP/S,N,FRQSET $ PPF,PDF/NOSET $ CASEXX, EQDYN,USETD,UHVF,PPF ,XYCOB,/OUHVCl ,/FREQRESP/ MOOAL/S,N,NOSORT2/S,N,NOH/S ,N,NOP/FMODE $ LBL16,NOH $ LBL16A,NOSORT2 $ ouHvcl,,,,,/ouHvc2,,, ,,$ 0UHVC2,,,,,//s,N,CARDNO $ XYCDB,0UHVC2, ,,,/XYPLTFA/FREQ/fiHSET*/S,N,PF lLE/ S,N,CARDNO $ XYPLTFA //$ LBL16$ LBL16A $ OUHVC1,,,,,//S,N,CARONO $ LBL16$ LBL14,NOP $ 2.11-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 113 114 115 116 117 118 119 120 121 122 123 124 125 126 i27 128 129 130 131 132 133 134 135PARA/1 COND DOR1 00R2 EQUIV EQUIV COND SOR1 LABEL SDR2 CONO SOR3 JUMP LABEL SOR1 SDR2 SOR2 EQUIV COND SDR3 EQUIV DDRMM EQUIV//NoT/NoMoo/v,y,HoDAcc $ LBODRM,MODACC $ UHVF,PHIDH/UOVIF $ USETD,UDV1 F,PDF,K2DD,B2D0,MDD,PPF ,LLL,DM/uDv2F,uEvF,PAF/ FREQRESP/NOUE/REACT/FRQSET $ uov2F,uDvlF/NoMoD $ UOVIF,UPVC/NOA $ LBLNOA,NOA $ USETD,,UOVIF, ,,GOD,GMO,PSF,KFS,,/UPVC,,QPC/l/OYNAMl CS$ LBLNOA $ CASEXX,CSTM,MPT,DIT, EQDYN,S ILD,,,BGPOP,PPF,QPC,UPVC,EST, XYCDB,PPF/OPPCl ,OQPC1,OUPVC1,OESC1 ,OEFCl,PUGV/FREQ/ S,N,NOSORT2 $ LBL18,NOSORT2 $ OPPC1,OQPC1,OUPVC1 ,0ESCl,0EFCl,/OPPC2,0QPC2,0UPVC2;OESC2, OEFC2, $ P2A$ LBDDRM $ USETO,,PHIOH, ,,GOO,GMO,,KFS,,/PHIPH,,QPH/l/~~DYNAMl CS*$ CASEXX,CSTM,MPT,D IT,EQDYN,S ILO,,,,LAMA,QPH,PHIPH, EST,XYCOB, / ,lQPl,lPHIPl,lESl,lEFl,/WIMRE lG*/S,N,NOSORT2 $ CASEXX,,,,EQDYN,SI LD,,,,PPF, ,,,XYCDB, PPF/OPPCA,,,,,/FREQ $ OPPCA,OPPC1/MOOACC $ LBLSORT,NOSORT2 $ IQP1,IPHIP1, IES1,IEF1,OPPCA, /lQP2,1PHlP2,1ES2,1EF2,0PPCB, $ oPPcB,oPPc2/MooAcc $ CASEXX,UHVF,PPF, IPHIP2,1QP2 ,IES2,1EF2,XYCDB,EST,MPT,0 lT/ ZUPVC2,ZQPC2,ZESC2,ZEFC2, $ zuPvc2,0uPvc2/MoDAcc/zQPc2,0QPc2/moDAcc/zEsc2 ,oEsc2/MooAcc/ zEFc2,0EFc2/MoDAcc $ 2.11-6(05/30/86)\nMODALFREQUENCY ANDRANDOM RESPONSE RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 136JUMP 137LABEL 138DORMM 139EQUIV 140JUMP 141LABEL lk2OFP 143XYTRAN 144XYPLOT 145COND 146PLOT 147PRTMSG ]48LABEL 149CONO 150RANOOM 151COND 152XYTRAN 153XYPLOT 154JUMP 155LABEL 156OFP 157LABEL 158CONDP2A$ LBLSORT $, CASEXX,UHVF,PPF, IPHIP1, IQP1,lESl,lEFl,,EST,MPT,OIT/ ZUPVC1,ZQPC1,ZESC1,ZEFC1, $ ZUPVCl,OUPVC1/MODACC/ZQPCl ,OQPCl/MOOACC/ZESCl ,OESC1/MODACC/ ZEFCl,OEFC1/MODACC $ LBL18$ P2A$ 0PPC2,0QPC2,0UPVC2,0EFC2,0ESC2,//S,N, EARDNo $ xYcDB,oPPc2,oQPc2,ouPvc2,oEsc2,oEFc2/xYPLTF/FREQ/PsET/ S,N,PFILE/S,N,CARONO $ XYPLTF// $ LBL21,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASEXX, BGPDT,EQEXIN,Slp, ,puGv,)/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N, PFILE$ PLoTx2// $ LBL21$ LBL14,NOPSDL $ XYCDB,DlT,PSDL,OUPVC2,OPPC2,OQPC2,OESC2,OEFC2,CASEXX/PSOF ,AUTO/ S,N,NORD $ LBL14,NORD $ XYCOB,PSDF,AUTO, ,,/XYPLTR/RAND/PSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTR// $ LBL14$ LBL18$ OUPVCl,OPPCl,OQPCl,OEFCl,OEScl ,//S,N,cARoNo $ LBL14$ FINIS,REPEATF $ 2.11-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 17b 175 176REPT PRTPARM JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDLBL13,1OO $ //-3/MDLFRRD $ FINIS$ ERROR2 $ //-2/*MDLFRRDt~ $ ERROR1 $ //-1/MOLFRRD $ ERROR4 $ //-4/MDLFRRD $ ERROR5 $ //-5/MDLFRRD~ $ ERROR6 $ //-6/MDLFRRo $ ERROR7 $ //-7/MDLFRRo $ FINIS$ DUMMY/MINUSl $ $ 2.11-8 (05/30/86)"},"title":"User's Manual P11"},"/docs/users/users_manual_012/":{"data":{"":"2.11.2 @5. 6. 7. 10, 11. 12. 15. 16, 17. 19, 20. 21. 25. 27. 28. a30. 31. 32. 33. 34. 36. 37. 38. 41. 44. 46. 47. 48.MOOAL Description ofImportant DMAPFREQUENCY ANDRANDOM Operations forModalRESPONSE Frequency andRandomResponse GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo,172andprintErrorMessage No.7iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.164andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET multipoint constraint equations [Rg]tug}=O. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities.andforms OFPformats thetableofpotential gridpointsingularities prepared byGPSP andplacesit onthesystemoutputfileforprinting. 2.11-9(05/30/86)\n50.Equivalence [Kgg] 51.GotoDMAPNo.54DISPLACEMENT RIGIOFORMATS to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rg]=[Rm\\Rn] andsolvesfor multipoint constraint transformation matrixLGM]=-[Rm]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices “99]‘[$tland‘Mgg]‘[+andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[nl[Gml +[Gl[Kmml[Gml and [Mnn]=[nnl+[Gj[Mmnl +LM;nl[Gml +[G;l[Mmml[Gml . 55.Equivalence [Knn]to[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [Knn]= [1‘ff’‘fs~~K— and [Mnn]= [1‘ff’‘fs:M— . SfSs Sf55 59.Equivalence [Kfflto[Kaalifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1KaaIKao rKffl=~~K—‘ oa00 . solvesfortransformation matrix[Go]=-[Koo]-l[Koa] andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 63.SMP2partitions constrained massmatrix [Mff]= [1MIM ~a+ ‘oa‘Moo 2,11-10 (05/30/86)I I a ●\nMODALFREQUENCY ANDRANDOMRESPONSE andperforms matrixreduction [Maa]=[iaa]+[M;a][Go] +[G~][Moa] +[G~][Moo][Goj . 65.Equivalence [Kaa]to[KLg]ifnofree-body supports exist. 66.GotoDMAPNo.69ifnofree-body supports exist. 67.RBMG1 68.Goto 70.Goto 72.RBMG2 73.Goto 74.RBMCi3partitions outfree-body supports [1KIK [Kaa]=.L+and [[Maa]=+- Krk1Krrr$M 1Er.— M“rr DMAPNo.71. DMAPNo.76ifthereisnorequest formodeacceleration datarecovery. decomposes constrained stiffness matrix[Ktk]=[Ltt][llit]. DMAPNo.76ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-LKBi]-l[Kgr], calculates rigidbodycheckmatrix [X]=[Krr]+[Kr][D] andcalculates rigidbodyerrorratio E. l+%x. IKIrr 75.RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mr][D] +[DT]l-MLr] +[DT][MLg][D]. 77.DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexterna”l gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPOOL), Dynamic LoadsTable(DLT),PowerSpectral Density List(PSDL), Frequency Response List(FRL),andEigenvalue Extraction Data(EED). 78.GotoDMAP’No.162andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data, 80.Equivalence [Go]toLG~]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. 82.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{ua} =O, calculates rigidbodymodesbyfinding asquarematrix[oro]such .2.11-11(05/30/86)that\n83. 84. 85. 88. 90. 91. 94. 95. 96.DISPLACEMENT RIGIO [mo]=[~~Ol[mrl[$rOl isdiagonal andnormaized, computes rigidbodyFORMATS eigenvectors [1[$ao] .32,@ro calculates modalmassmatrix [m]=[$l[Maal[@a] andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. gFpformats thesummary ofefgetlvalue .eXt.l”tiCtfOn information places itonthesystem output fileforprinting. GotoDMAPNo.166andprintErrorMessage No.4ifnoeigenva(JEIGS) prepared byREADand ueswerefound. !i!FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices forthecurrent loop,[Kpl, [Mpland [B;p]. 2]to[Bdland[Kpp Equivalence [Mp]to[Md]\u003e[Bpp2]to[Kid]ifnoconstraints areapplied, and[MaaltoLMdd]iftherearenodirectinputmassmatrices andnoextra pointsintroduced fordynamic analysis. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,forming [K~d],[M;d]and[B;d]. GKAMassembles stiffness, massanddamping matrices inmodalcoordinates forusein Frequency Response: LKhh]=[k]+[$h][Kd][$dh] , [Mhh]=[m]+[$~h]LM$d][$dh] and [Bhh]=[b]+[@h][Bd][$dh] , where mi=modalmasses , bi=mi2Trfig(fi) 2.11-12 (05/30/86)\n97. 98. 99. 100. 101. 102. 103. 104. 105. 106. 107. 108. 110. 112. 114. 115. 116. 117, 118. 119.MODALFREQUENCY ANDRANDOMRESPONSE and ki=mi41r2f;. Directinputmatrices maybecoinplex. GotoDMAPNo.168andprintErrorMessage No.5ifthereisnoFrequency Response List. GotoDMAPNo.170andprintErrorMessage No.6ifthereisnoDynamic LoadsTable. FRRDformsthedynamic loadvectors {Ph}andsolvesforthedisplacements usingthe following equation [-Mhhu2+ iBhhu+Khh]{uh} ={Ph}. Equivalence {Pp}to{Pd}ifnoconstraints areapplied. VDRprepares displacements (OUHVCl), sortedbyfrequency, foroutputusingonlytheextra pointsintroduced fordynamic analysis andmodalcoordinates (solution points). GotoDMAPNo.111ifthereisnooutputrequest forsolution points. GotoDMAPNo.109ifthereisnooutputrequest forsolution pointssortedbyextrapoint ormodenumber. SDR3sortsthesolution pointdisplacements byextrapointormodenumber. OFpformats therequested solution pointdisplacements prepared bySDR3 andplacesthemon thesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution pointdisplacements vs. frequency. XYPL13Tprepares therequested X-Yplotsofthesolution pointdisplacements vs.frequency. GotoDMAPNo.111. !Wformats therequested solution point thesystemoutputfileforprinting. GotoOMAPNo.157ifthereisnooutput forcesandstresses.displacements prepared byVDRandplacesthemon request involving dependent degrees offreedom or GotoDMAPNo,126ifthemodeacceleration technique isnotrequested. DDR1transforms thesolution vectorofdisplacements frommodaltophysical coordinates {Ud}=[$dh]{lj} . DDR2calculates animproved displacement vectorusingthemodeacceleration technique. Equivalence {ud}totheimproved displacement vector. (FlagN13M!IIDisnegative sincethe modeacceleration technique isrequested). Equivalence {ud}to{Up}ifnoconstraints areapplied. GotoDMAPNo.121ifnoconstraints areapplied. 2.11-13 (05/30/86)\n120. 122. 123. 124. 125. 127. 128. 129. 130. 131. 132.DISPLACEMENT RIGIDFORMATS SDR1recovers dependent components ofdisplacements {uOl=[G’j{ua} , 11‘f+‘e——— ={Un+Ue?, ‘sH‘d={Uf+ue} , —- “0 {um}=[G:]{uf +“e} , 11+U ‘ne———={up} Um andrecovers single-point forcesofconstraint {qs}=-{P~}+[K~s]{uf}. SOR2calculates element forces (OEFCl) andstresses (@ESCl) andprepares loadvectors (Oppcl), displacement vectors (OUPVCl) andsingle-point forcesofconstraint (!3QPC1) for outputandtranslation components ofthedisplacement vector(PUGV), sortedbyfrequency. GotoDMAPNo.155iftherearenorequests foroutputsortedbypointnumberorelement number. SDR3prepares therequested output GotoDMAPNo.141. SDR1recovers dependent components {+.}=[G:]{On} , 11@f+“e —— ={$n+ue} , +ssortedbypointnumberofelement number. ofeigenvectors on N={l$f+ue} ,—— 40 {Om}=[G:]{$n+“e}, H$n+ue _ —— -{$9+IJe}={$p} @m andrecovers single-point forcesofconstraint {qs}=[Kfs]T{$f}. SDR2calculates element forces(IEF1)andstresses (IES1)andprepares eigenvectors (IPHIP1) andsingle-point forcesofconstraint (IQP1)foroutputsortedbyfrequency, SDR2prepares loadvectors foroutput(flPPCA) sortedbyfrequency. Equivalence 13PPCAtoOPPC1. (FlagMODACC is isnotrequested). GotoDMAPNo.137iftherearenorequests number. SDR3prepares therequested output sorted bynegative sincethemodeacceleration technique foroutputsortedbypointnumberorelement pointnumberorelement number.I 2.11-14 (05/30/86)\n133. ●134. 135. 136. 138. 139. 140. 142. 143. 144. 145. 146. a147. 149. 150. 151. 152. 153. 154. 156. 158. 159. 160. 161.MOOALFREQUENCY ANDRANDOMRESPONSE Equivalence lJPPCBto0PPC2. (FlagMi3DACCisnegative sincethemodeacceleration technique isnotrequested). DDRMMprepares asubsetoftheelement forces(ZEFC2) andstresses (ZESC2), anddisplacement vectors (ZUPVC2) andsingle-point forcesofconstraint (ZQPC2) foroutputsortedbypoint numberorelement number. Equivalence ZUPVC2to!iLlPVC2, ZQPC2to0QPC2,ZESC2to13ESC2,andZEFC2to0EFC2. (Flag M9DACCisnegative sincethemodeacceleration technique isnotrequested). GotoDMAPNo.141. DDRMMprepares asubsetoftheelement forces(ZEFC1) andstresses (ZESC1), anddisplacement vectors (ZUPVC1) andsingle-point forcesofconstraint (ZQPC1) foroutputsortedby frequency. Equivalence ZUPVC1toOUPVCl, ZQPC1toOQPCl,ZESC1toklESCl, andZEFC1toOEFC1. (Flag MODACCisnegative sincethemodeacceleration technique isnotrequested). GotoOMAPNo.155. OFPformats therequested outputprepared bySDR3(withmodeacceleration) orDDRMM(nomode acceleration) andplacesitonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPL13Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.frequency. GotoDMAPNo.148ifnodeformed structure plotsarerequested. PL!3Tgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.157ifnopowerspectral density functions orautocorrelation functions are requested. RANDOMcalculates powerspectral density functions (PSOF)andautocorrelation functions (AUT@)usingthepreviously calculated frequency response. GotoDMAPNo.157ifnoX-YplotsofRANDOMcalculations arerequested. XYTRANprepares theinputforrequested X-YplotsoftheRANDOMoutput. XYPL13Tprepares therequested X-Yplotsofautocorrelation functions andpowerspectral density functions. GotoDMAPNo.157. OFPformats thefrequency response outputrequests prepared bySDR2(withmodeacceleration) orDDRMM(nomodeacceleration) andplacesthemonthesystemoutputfileforprinting. Goto tobe Goto Print GotoDMAPNo.174andmakenormalexitifnoadditional setsofdirectinputmatrices need processed. DMAPNo.88ifadditional setsofdirectinputmatrices needtobeprocessed. ErrorMessage No.3andterminate execution. DMAPNo.174andmakenormalexit. 2.11-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 163.PrintErrorMessage No.2andterminate execution. 165.PrintErrorMessage No.1andterminate execution. 167.PrintErrorMessage No.4andterminate execution, 169.PrintErrorMessage No.5andterminate execution. 171.PrintErrorMessage No.6andterminate execution. 173.PrintErrorMessage No.7andterminate execution. 2.11-16 (05/30/86)o\nMODALFREQUENCY ANDRANDOMRESPONSE 2.11.3 OutputforModalFrequency andRandomResponse TheEigenvalue Summary TableandtheEigenvalue Analysis Summary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues extracted are included eventhoughnotallareusedinthemodalformulation. Outputthatmayberequested isthesameasthatdescribed underDirectFrequency andRandom Response, OutputforS@LUTION pointswillhavethemodalcoordinates identified bythemodenumber determined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheS0LUTI13N pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis rigidformatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.11,4 CaseControl DeckforModalFrequency andRandomResponse Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectFrequency andRandomResponse: 1,METHODmustappearabovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck. 2.Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. 3.AnSPCsetmustbeselected abovethesubcase levelunlessthemodel allconstraints arespecified onGRIDcards,ScalarConnection cards Elements. 4.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping 2.11.5 Parameters forModalFrequency andRandomResponse Thefollowing parameters areusedinModalFrequency andRandomResponse:isafreebodyor orwithGeneral isdesired. 1.ASETOUT -optional. Apositive integer valueofthisparameter causes datablocktobegenerated bytheGP4module. Anegative integer value thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1.theASEToutput orOsuppresses 2,11-17 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 3.CflJPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. 4,GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. 5.LFREQandHFREQ-required, unlessparameter LMODESisused,Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. 6.LM@DES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter’is thenumberoflowestmodestobeusedinthemodalformulation. 7,MODACC-optional. Apositive integer valueofthisparameter causestheDynamic Data Recovery moduletousethemodeacceleration method. Notrecommended forusein hydroelastic problems. 8.SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 9.VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 10.WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.11.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6)i– 2.11-18 (05/30/86)\nMODALFREQUENCY ANDRANDOMRESPONSE 2.11.7 TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction inModalFrequency andRandom Response. SeeSection 2.3.7fordetails. 2.11.8 RigidFormatErrorMessages fromModalFrequency andRandomResponse Thefollowing fatalerrorsaredetected bytheModalFrequency andRandomResponse rigid format. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE NO.1-MASSMATRIXREQUIRED F9RMODAL FORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. MODALFREQUENCY ANDRANDf4MRESPONSE ERR@RMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED F@R REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MODALFREQUENCY ANDRAND@MRESPONSE ERRORMESSAGE NO.3-ATTEMPT TOEXECUTE M@RETHAN100Lf@PS, Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbercanbet increased byALTERing theREPTinstruction following thelast13FPinstruction. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE No.4-REALEIGENVALUES REQUIRED F9RMODAL FflRMULATI@N. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE Nfl.5-FREQUENCY RESP@NSE LISTREQUIRED FOR FREQUENCY RESP13NSE CALCULATIONS. Frequencies tobeusedinthesolution offrequency response problems mustbe”supplied onaFREQ, FREQ1orFREQ2cardintheBulkDataDeckandFREQintheCaseControl Deckmustselectafrequency response set. MODALFREQUENCY ANDRANDOMRESPONSE ERRfIRMESSAGE NO.6-DYNAMIC LOADSTABLEREQUIRED FOR FREQUENCY RESPONSE CALCULATIONS. Dynamic loadstobeusedinthesolution offrequency response problems mustbespecified onan RL@ADlorRL9AD2cardintheBulkDataDeckandDL@AllintheCaseControl Deckmustselecta dynamic loadset. MODALFREQUENCY ANDRAND@MRESPONSE ERRORMESSAGE No.7-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED, Nostructural elements havebeendefined withConnection cards. 2.1#19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.11-20 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.12MODALTRANSIENT RESPONSE o2,12.1 DMAPSequence forModalTransient Response RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL200NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN GP2 8PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDOISP12-MODALTRANSIENT RESPONSE ANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND/UHVT=APPEND/TOl–AF’pEND $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET NOGPOT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEF’$ GEoM2,EQExlN/EcT $ PCOB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSl L/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEoM3,EQEx1N,GEoM2/sLT,GpTT/NoGRAv $ ECT,EPT,BGPOT,SIL,GPTT,CSTH/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/s ,N,GENEL $ ERROR6,NOSIMP $ 2.12-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 3b 35 36 37 38 39 40 41 42 lk3PURGE PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL PARAH GP4 PARAM PURGEOGPST/GENEL $ //ADD/NOKGGX/l/O $ //AOD/NOMGG/l/O $ EST,CSTM,HPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBAR/ c,Y,cPRoolc,Y,cPQuAD1/c,Y,cPQuAD2/c,YscPTRl A1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,~MASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSKIP/O/O $ CASECC,GEOM4,EQEXIN,GPOT,BGPOT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //ANO/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOO/OMIT/KFS, PST/SINGLE/QP/NOSR/KLR,KRR,MLR,MR, MRR,OM/REACT $ 2.12-2(05/30/86)\nMODALTRANSIENT RESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING J+4 45 46 k7 b8 49 50 51 52 53 54COND PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL ●55EQUIV 56coNo 57SCE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65EQUIV 66COND 67RBMG1 68JUMP 6gLABELLBL4,GENEL $ //*EQ~~/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARoNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ uSET,GM,KGG,HGG,,/KNN,MNNS )$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ uSET,KNN,MNN,,/KFF,KFS,,HFF ,.$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ uSET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ USET,GO,MFF/MAA $ LBL5s KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ LBL8$ LBL6$ 2.12-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90COND LABEL RBMG2 COND RBHG3 RBHGh LABEL DPD COND PURGE EQUIV PARA14 READ OFP COND OFP MTRXIN PURGE PARAH EQUIV GKADLBL7*MODACC $ LBL8$ KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ DM,MLL,MLR,MRR/MR $ LBL7$ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD,TFPOOL,DLT, ,,NLFT,TRL, EED,EQDYN/LUSET/S,N,LUSETD/NOTFL/S,N,NODLT/NOPSDL/ NOFRL/S,N,NONLFT/S,N,NOTRL/S,N,NOEED//S ,N,NOUE $ ERROR2,NOEED $ UEVT/NOUE/PNLH/NONLFT $ GO,GOO/NDUE/GM,GMD/NOUE $ //MPY/NEIGV/l/-l $ KAA,MAA,MR,OM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARONO $ CASECC,MATPOOL,EQDYN, ,TFPOOL/K2PP,M2PP,B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K20D/NoK2PP/M2DD/NoM2PP/B2DD/NoB2PP $ //AND/flDEMA/NOUE/NOM2PP $ M2PP,M2DD/NOA/B2PP,B2DD/NOA/K2PP,K2DD/NOA/MAA,MDO/MOEMA $ USETD,GM,GO,, ,MAA,,K2PP,M2PP,B2PP/,,MDD ,GMD, GOD,K2DD,M2DD ,B2DD/*TRANRESP~c/D lSP/*MOOAL~~/O .0/ o,o/o,o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/- 1/ l/V,Y,MODACC =-1$ 2.12-4(05/30/86)\nMODALTRANSIENT RESPONSE ●RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGI’DFORMAT12 LEVEL2,0NASTRAN OMAPCOMPILER -SOURCELISTING 91GKAll 92coNo 93PARAM gkPARAM 95LABEL 96PURGE 97CASE 98PARAM 99TRLG 100EQUIV 101TRD 102VOR 103COND 104SDR3 105OFP 106XYTRAN 107XYPLOT 108LABEL 109PARAM 110COND 111PARAM 112PARAMUSETO,PHIA,MI, LAMA,DIT,M2D0, B2D0,K200,CASECC/MHH,BHH,KHH,PHl DH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O.O/C,Y,HFREQ=-l .0/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FMOOE$ ERROR5,NOTRL $ //~~ADO*/NEVER/l/O $ //MPY/REPEATT/l/-l $ LBL13$ PNLH,OUHV1,OPNL1 ,0UHV2,0PNL2,XYPLTTA,0PP1 ,OQP1,OUPV1,OES1,OEF1 , 0PP2,0QP2,0UPV2,0ES2,0EF2,PLOTX2 ,XYPLTT,OPPA, IQP1,IPHIP1, IES1, IEF1,OPPB, IQP2,1PHIP2,1ES2,1 EF2,zQP2,zuPv2,zEs2,zEF2/NEvER $ CASECC,/CASEXX/TRAN/S,N,REPEATT/S,N,NOLOOp $ //MpY/NcoL/o/I $ CASEXX,USETD,OLT,SLT,BGPDT,S IL,CSTM,TRL,OIT,GMO,GOD,PH IDH, EST,MGG,/PPT,PST,POT,PD,PH,TOL/S,N,NOSET/NCOL $ PPT,POT/NOSET $ CASEXX,TRL,NLFT,DIT,KHH,BHH,MHH, PH/UHVT,PNLH/MOOAL/ NOUE/NONCUP/S,N,NCOL/C,Y,lSTART $ CASEXX, EQDYN,USETD,UHVT,TOL, XYCDB,PNLH/OUHVl ,OPNL1/ $fTRANRESP*/%MODAL*/O/S,N,NOH/S,N ,NOP/FMODE $ LBL16,NOH $ OUHV1,OPNL1 ,,**/ouHv2,0PNL2,,,, $ 0UHV2,0PNL2 ,,,,//S,N,CARONO $ XYCOB,0UHV2,0PNL2 ,,,/XYPLTTA/TRAN/HSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTTA// $ LBL16$ //)tAND*/PJuMP/Nop/JuMppLOT $ LBL15,PJUMP $ //NoT/NoMocI/v, y,MocIAcc $ //ANo/MPJUMP/V,Y,MOOACC/JUMPPLOT $ 2,12-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 113COND 114DDR1 115CONO 116DDR2 117EQUIV 118LABEL 119EQUIV 120COND 121SOR1 122LABEL 123sDR2 124SDR3 125JUMp 126LABEL 127SDR1 128SDR2 129SDR2 130SDR3 131EQUIV 132DORMM 133EQUIV 134LABEL 135OFPLBDDRM,MPJUMP $ UHVT,PHIDH/UDVIT $ LBLMOD,MODACC $ USETD,UDV1T,PDT,K20D,B2DD,MOD, ,LLL,DM/uDv2T,uEvT,PAF/ TRANREsP/NouE/REAcT/o $ uDv2T,uDvlT/Not40D $ LBLMOD $ UDVIT,UPV/NOA $ LBL14,NOA $ USETO,,UOVIT, ,,GOD,GMD,PST,KFS,,/UPV,,QP/l/OYNAMl CS$ LBL14$ CASEXX,CSTM,MPT,DIT, EQDYN,S ILD,,,BGPDP,TOL,QP,UPV,EST,XYCDB, PPT/OPPl,OQPl,OUPVl,OESl,OEF l,PUGV/TRANRESP $ OPP1,OQP1,OUPV1,OES1,OEF1 ,/OPP2,0QP2,0UPV2,0ES2,0EF2, $ P2A$ LBDDRM $ USETO,,PHIDH, ,,GOD,GMO,,KFS,,/PHIPH,,QPH/l/”DYNAMl CS$ CASEXX,CSTM,MPT,DIT,EQDYN,S ILD,,,, LAMA,QPH,PHIPH,EST,XYCDB,/ *lQPl,lPHIPl,lESl,lEFl,/MMRE IG$ CASEXX, ,,,EQOYN,SILD, ,,,TOL,,,,XYCDB,PPT/OPPA, ,,,,/ TRANREsP $ OPPA,IQP1,IPHIP1, IES1,IEF1,/0PPB,lQP2,1PHlP2,1ES2,1EF2, $ oPPB,oPP2/MoDAcc $ CASEXX,UHVT,TOL, IPHIP2,1QP2,1ES2, lEF2,,EST,MPT,DlT/ ZUPV2,ZQP2,ZES2,ZEF2, $ zuPv2,0uPv2/MoDAcc/zQP2,0QP2/MoDAcc/zEF2, oEF2/MoDAcc/zEs2,0Es2/ MODACC $ P2A$ 0UPV2,0PP2,0QP2,0EF2,0ES2,//S ,N,CARDNO $ 2.12-6(05/30/86)\nMODALTRANSIENT RESPONSE ●RIGIDFORMAT DflAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 136SCAN cAsEcc,oEs2,0EF2/oEsF2/RF $ 137OFP 0ESF2,,,,,//S,N,CARONO $ 138CONLI P2,JUMPPLOT $ 139PLOT PLTPAR,GPSETS, ELSETS,CASEXX,BGPDT, EQEXIN,SIP, ,PUGV,,/PLOTX2/ NSlL/LUSEP/JUt4PPLOT/PLTFLG/S,N, PFILE$ lhOPRTMSG PLoTx2// $ 141LABEL P2$ 142XYTRAN XYCDB,0PP2,0QP2,0UPV2,0ES2 ,oEF2/xYPLTT/TRAN/PsET/ S,N,PFILE/S,N,CARDNO $ 143XYPLOT XYPLTT// $ 144LABEL LBL15$ 145COND FINIS,REPEATT $ 0146REPT LBL13,1OO $ 147PRTPARM //-3/MDLTRD $ 148 149 150 151 152 153 154 155 156 157 158 159 160 161JUMP LABEL PRTPARM LABEL PRTPARH LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENOFINIS$ ERROR2 $ //-2/MDLTRD $ ERROR1 $ //-1/MDLTRD $ ERROR4 $ //-b/MDLTRO $ ERROR5 $ //-5/MDLTRD $ ERROR6 $ //-6/MDLTRD $ FINIS$ DU/lMY/MINUSl $ $ 2.12-7(05/30/86)\n2.12.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36, 37. 38. 41, 44. 46. 47. 48.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forModalIransient Response GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrix GotoDMAPNo.157andprintErrorMessage No. EMGgenerates structural element stiffness and assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistoassembly andstressrecovery. 6iftherearenostructural elements. massmatrixtablesanddictionaries forlater beassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.151andprintErrorMessage No,1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information, @FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug)=o. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofDotential gridmintsingularities prepared byGpsI’andplacesit onthesystemoutputfile”forprinti;g. 2.12.8 (05/30/86)"},"title":"User's Manual P12"},"/docs/users/users_manual_013/":{"data":{"":"50.Equivalence [Kgg]MODALTRANSIENT RESPONSE to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ●51.GotoDMAPNo.54ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[RM]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices r- 7 1]KIK [Kgg]=K and [Mgg]= mnmmiIM “1Jn+ MmnIMmm andperforms matrixreductions [Knn]=[nnj+[G][Kmn] +[Kn][Gm] +[G~][Kmm][Gm] and [Mnn]=[iinn]+[G:][Mmn] +[M;n][Gml +[G;IIMJIGJ . 55.Equivalence [Knn]to[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1‘ffi‘fs[Knn]=K— and [1‘ff‘‘fs [“nn]=~TM—“ ●SfSs SfSs 59.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1itK [Kff]=%K= , oa00 solvesfortransformation matrix [Gol=-[Kool-l[Koal andperforms matrixreduction I.Kaa]=[aa]+[Ka][Go] . 63.SMP2partitions constrained massmatrix [1iIM [Mff]=;-tM= oa00 2.12-9 (05/30/86)\nDISPLACEMENT RIGIDFORMATS andperforms matrixreduction 65. 66. 67. 68. 70. 72. 73. 74. ?5. 77. 78. 80. 82,[Maa]=[aa]+LMa][Go] + Equivalence [Kaa]to[Kit]ifnofree-body Goto RBMG1 Goto Goto RBMG2 Goto RBMG3DMAPNo.69ifnofree-body supports partitions outfree-body supports[G~][Moa] +[G~][Moo][Go] . supports exist. exist. [1KIK [Kaa]=~~Kfl and [Maa]=- r!rr rfiM\u0026r.—. Mrr DMAPNo.710 DMAPNo.76ifthereisnorequest formodeacceleration datarecovery. decomposes constrained stiffness matrix[Ktk]=[LLL][ULL]. DMAPNo.76ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-[KLL]-l[Kkr], calculates rigidbodycheckmatrix [X]=[Krr]+[K:r][D] andcalculates rigidbodyerrorratio E= llKrl[-1111 RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[M~r][Dl +[DTIIMJ +[DTIIMLLIIDI. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPliX3L), Dynamic LoadsTable(DLT),Nonlinear Function Table(NLFT), Transient Response List(TRL). GotoDMAPNc.149andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-aMaa]{ua} =O, calculates rigidbodymodesbyfinding asquarematrix[$ro]such 2.12-10 (05/30/86)that\nMODALTRANSIENT RESPONSE 83. 84. 85. 86. 89. 0 90. 91. 92.[mol=[$ol[mrl[$rol isdiagonal andnormalized, computes rigidbodyeigenvectors [1DO [$aol=– , 4ro calculates modalmassmatrix [ml❑ [$][Maal[aJ andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. f3FPformats thesummary ofeigenvalue extraction information placesitonthesystemoutputfileforprinting. GotoDMAPNo.153andprintErrorMessage No,4ifnoeigenva’OEIGS)prepared by ueswerefound. 9FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystem fileforprinting. MTRXINselects thedirectinputmatrices [Kp],[Mp]and[Bp]. Equivalence [Mp]to[Md],[Bp]to[Bd]and[Kp]to[Kd]ifnoconstraints areapplied, andLMaa]to[Mdd]iftherearenodirectinputmassmatrices andno pointsintroduced fordynamic analysis. GKADapplies constraints todirectinputmatrices [K#P],[MP]and[B~D],forming [K:d]s[\u0026]and[Bf\u0026]. GKAMassembles stiffness, massanddamping matrices Transient Response: [Khh]=[k]+[$J:#K:#$dh] [Mhh]=[m]+[$@’\u0026][$dhl and [Bhh]=[b]+[$j#\u0026][’$dh] where m.1=modalmasses, bi=mi2mfig(fi) and Allmatrices arereal. GotoDMAPNo.155andki=mi41T2fiz. printErrorMessage No.5ifinmodalcoordinates s 9foruseinREADand output extra thereisnoTransient Response List. 2,12-11 (05/30/86)\n95. 97. 99. 100. 101. 102. 103. 104. 105. 106. 107. 110. 113. 114. 115. 116. 117. 119. 120.DISPLACEMENT RIGIDFORMATS Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. TRLGgenerates matrices ofloadsversustime.{P;},{P~}and{P:}aregenerated with onecolumnperoutputtimestep.{pal}and{ph}aregenerated withonecolumnper solution timestep,andtheTransient OutputList(TEIL)isalistofoutput timesteps. Equivalence {P:}to{P;}ifthedandpsetsarethesame. ntTRDformsthelinear, {Pd},andnonlinear, {Pd1,dynamic load theequations ofmotionoverspecified timeperiods tosolve velocities andaccelerations, usingthefollowing equationvectors andintegrates forthedisplacements, [$@2+‘hhp+‘hh]{lj} ={Ph}+{P~L}. VDRprepares displacements, velocities andaccelerations, sortedbytimestep,foroutput usingonlytheextrapointsintroduced fordynamic analysis andmodalcoordinates (solution points). GotoDMAPNo.108ifthereisnooutputrequest forthesolution points. SDR3sortsthesolution pointdisplacements, velocities, accelerations andnonlinear load vectors byextrapointormodenumber. ~FPformats therequested solution pointdisplacements, velocities, accelerations and nonlinear loadvectors prepared bySDR3andplacesthemonthesystemoutputfilefor printing. XYTRANprepares theinputforX-Yplotting ofthesolution pointdisplacements, velocities, accelerations andnonlinear loadvectors vs.time. XYPLOTprepares therequested X-Yplotsofthesolution pointdisplacements, velocities, accelerations andnonlinear loadvectors vs.time. GotoDMAPNo.144ifthereisnooutputrequest involving dependent degrees offreedom, forcesandstresses, ordeformed structure plots. GotoDMAPNo.126ifthemodeacceleration technique isnotrequested andifthereareno requests fordeformed structure plots. DOR1transforms thesolution vectordisplacements frommodaltophysical coordinates {Udl=[$dhl{uh} . GotoDMAPNo.118 DDR2calculates anifthemodeacceleration technique isnotrequested. improved displacement vectorusingthemodeacceleration technique Equivalence {ud}totheimproved displacement VeCtOr. (FlagNOMODisnegative sincethe modeacceleration technique isrequested), Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo,122ifnoconstraints areapplied. 2.12-12 (05/30/86)\n121. ● 123. 124. 125. 127. 128. 129. 130. 131. 132.MODALTRANSIENT RESPONSE SDR1recovers dependent components ofdisplacements {Uo} 11‘f+‘e——— ‘s IIun+ue——— um andrecovers s=[G~]{ud} , ={Un+Ue},II‘d—-={Uf+ue} , U. {urn}=[G#]{uf+ue} , ={up} ngle-point forcesofconstraint {qs}=-{ps}+[Ks]{Uf}o SDR2calculates element forces(OEFl)andstresses (i3ESl)andprepares loadvectors (@ppl), displacement, velocity andacceleration vectors (OUPVl) andsingle-point forces of constraint (OQPl)foroutputandtranslation components ofthedisplacement vector(PUGV), sortedbytimestep. SDR3prepares requested outputsortedbypointnumberorelement number. GotoOMAPNo.134. SDR1recovers dependent components ofeigenvectors {$.]=[G:]{$In} , H$f+Ue —— ={$n+oe} , ‘$s II$n+“e —— .{@g+ue} ={$p} OM andrecovers single-point forcesof‘$ II={$f+ue} , —— $0 {@m}=[G:]{On‘Ue} , constraint {qs}=[Kfs]T{$f}. SDR2calculates element forces(IEF1)andstresses (lESl)andprepares eigenvectors (IPHIP1) andsingle-point forcesofconstraint (IQP1)foroutputsortedbytimestep. SOR2prepares loadvectors foroutput(OPPA)sortedbytimestep. SDR3prepares therequested outputsortedbypointnumberorelement number. Equivalence OPPBto9PP2.(FlagMf3DACCisnegative sincethemode notrequested). DDRMMprepares asubsetoftheelement forces(ZEF2)andstresses vectors (ZUPV2) andsingle-point forcesofconstraint (ZQP2)for numberorelement number.acceleration technique is (ZES2), anddisplacement outputsortedbypoint 2.12-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 133,Equivalence ZUPV2toflUPV2,ZQP2to0QP2,ZES2to@ES2andZEF2to0EF2.(FlagMODACCis negative sincethemodeacceleration technique isnotrequested). 135.!3FPformats therequested outputprepared bySDR3(withmodeacceleration) orDDRMM(nomode● acceleration) andplacesitonthesystemoutputfileforprinting. 136,SCANexamines theelement stresses andforcescalculated bySDR3orDDRMMandgenerates scanned outputthatmeetsthespecifications setbytheuser. 137.@FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting, 138.GotoDMAPNo.141ifnodeformed structure plotsarerequested. 139,PLOTprepares allrequested deformed structure andcontour plots. 140.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 142.XYTRANprepares theinputforrequested X-Yplots. 143.XYPLflTprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint vs.time. 145.GotoDMAPNo.159andmakenormalexitifnoadditional dynamic loadsetsneedtobe processed. 146.GotoDMAPNo.95ifadditional dynamic loadsetsneedtobeprocessed. 147.PrintErrorMessage No.3andterminate execution. 148.GotoDMAPNo.159andmakenormalexit. 150.PrintErrorMessage No.2andterminate execution. 152.PrintErrorMessage No.1andterminate execution. 154.PrintErrorMessage No.4andterminate execution. 156.PrintErrorMessage No.5andterminate execution. 158.PrintErrorMessage No.6andterminate execution. 2.12-14 (05/30/86)\nMODALTRANSIENT RESPONSE 2.12.3 OutputforModalTransient Response TheEigenvalue Summary TableandtheEigenvalue Analysis Sunrnary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed.Allrealeigenvalues extracted are included eventhoughnotallareusedinthemodalformulation. Outputthatmayberequested isthesameasthatdescribed underDirectTransient Response. OutputforS0LUTI13N pointswillhavethemodalcoordinates identified bythemodenumberdetermined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheS@LUTI13N pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis rigidformatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.12.4 CaseControl DeckforModalTransient Response Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectTransient Response: 1. 2. 3. 4.METH@Dmustappearabovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck. Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. AnSPCsetmustbeselected abovethesubcase levelunlessthemodelisafreebodyor allconstraints arespecified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. SCIAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping isdesired. 2.12.5 Parameters forModalTransient Response Thefollowing parameters areusedinModalTransient Response: 1.ASETOUT -optional, Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0, 2.AUT9SPC -reserved forfutureoptional use.Thedefault valueis-1. 2.12-15 (05/30/86)\n3. 4. 5. 6. 7. 8. 9. 10. 11.DISPLACEMENT RIGIDFORMATS C@UPMASS -CPBAR,CPRf!D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT.——J CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. WeightGenerator to printed. Allfluid ISTART-optional.Apositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe related massesareignored. Apositive valueofthisparameter causestheTRDmoduletousethe second(oralternate) starting method(seeSection 11.4oftheTheoretical Manual). The alternate starting methodisrecommended wheninitial accelerations aresignificant and whenthemassmatrixisnon-singular. Thedefault valueis-1andcausesthefirst starting method LFREQandHFREQ parameters give upperlimit)oftobeused. required, unlessparameter LMODESisused.Therealvaluesofthese thecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe themodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. LMflDES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation. Mf)DACC-optional. Apositive integer valueofthisparameter causestheDynamic Oata Recovery moduletousethemodeacceleration method. Notrecommended forusein hydroelastic problems. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. V@LUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.12-16 (05/30/86)\n\\ MODALTRANSIENT RESPONSE 2.12.6 Optional Diagnostic OutputforFEER ●Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.12.7 TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction inModalTransient Response. SeeSection 2.3.7fordetails. 2,12.8 TheCONTINUE Feature TheCONTINUE feature canbeusedforcoupled transient analysis inModalTransient Response. SeeSection 2,9.6fordetails. 2.12.9 RigidFormatErrorMessages fromModalTransient Resyonse Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalTransient Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. ●MODALTRANSIENT RESPONSE ERRORMESSAGE No.1-MASSMATRIXREQUIRED FORM@DALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. M@DALTRANSIENT RESP13NSE ERRORMESSAGE NO.2-EIGENVALUE EXTRACTION DATAREQUIRED Ff3RREAL EIGENVALUE ANALYSIS, Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MODALTRANSIENT RESP@NSE ERRORMESSAGE N@.3-ATTEMPT ToEXECUTE MORETHAN100L09PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbercanbeincreased by ALTERing theREPTinstruction following thelastXYPLOTinstruction. M@DALTRANSIENT RESPONSE Norealeigenvalues were MODALTRANSIENT RESP@NSE RESPONSE CALCULATI!3NS.ERRflRMESSAGE N@.4-REALEIGENVALUES REQUIRED FORMODALFORMULATION. foundinthefrequency rangespecified bytheuser. ERRORMESSAGE NO,5-TRANSIENT RESPONSE LISTREQUIRED FORTRANSIENT Timestepintervals tobeusedmustbespecified onaTSTEP selection mustbemadeintheCaseControl Deck.cardintheBulkDataDeckandaTSTEP 2.12-17 (05/30/86)\nDISPLACEMENT RIGIDFORMATS MODALTRANSIENT RESPONSE ERR!2RMESSAGE N@.6-NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.12-18 (05/30/86) ,\nDISPLACEMENT RIGIDFORMATS 2.13NORMALMODESWITHDIFFERENTIAL STIFFNESS ●2.13.1 DMAPSequence forNormalModesWithDifferential Stiffness RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2,0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR ——– .——– 1BEGIN 2PRECHK 3FILE kPARAH 5GP1 6PLTTRAN ~GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTA4SG 18LABEL 19GP3 20TA1 21CONDDISP13-NORMAL MODESWITHDIFFERENTIAL STIFFNESS-APR. 1986$ ALL$ LAMA=APPENO/PHIAL=APPEND $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //W4PY*/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,EQEXI N,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/NOGRAV $ ECT,EPT,BGPOT,SIL,GPTT,CSTM/EST,GE I,GPECT LuSET/S,N,NOSIPIP/l/S,N,NOGENL/S,N,GENEL $ ERROR1,NOSIMP $ 2.13-1 (05/30/86,/\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26 27 28 29 30 31 32 33 31k 35 36 37 38 39 40 41PURGE COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GP4 42COND 43PARAMOGPST/GENEL $ //ADD/NoKGGx/l/o $ //ADD/NOMGG/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELN, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBAR/ c,Y,cPRoD/c,Y,cPQuADl/c,Y,cPQuAD2/c ,Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDl,CT,KELM/KGGX,GPST $ JMPKGG $ ERROR5,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBL1,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBLII,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //Mpy/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y ,ASETOUT/ S,Y,AUTOSPC $ ERROR6,NOL $ //AND/NosR/sINGLE/REAcT $@ 2.13-2(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45COND 46JUMP 47LABEL 48COND 49PARAM 50COND 51GPSP 52OFP 53LABEL ●5kEQUIV 55COND 56MCE1 57MCE2 58LABEL 59EQUIV 60COND 61SCE1 62LABEL 63EQUIV 64COND 65SMPI 66LABEL 67RBMG2 68SSG1GM/MPCFl/GO,KOO,LOO,PO,UOOV,RUOV/OMlT/PS,KFS,KSS/Sl NGLE/ QG/NOSR $ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,1’IPCF1 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN,,,/KFF,KFS,KSS, ,,$ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBL5$ KAA/LLL $ SLT,BGPDT,CSTM,SI L,EST,MPT,GPTT, EDT,MGG,CASECc,DIT,/PG,, ,,/ LUSET/~ $ 2.13-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69EQUIV 70COND 71SSG2 72LABEL 73SSG3 74COND 75HATGPR 76MATGPR 77LABEL 78SDR1 79SDR2 80OFP 81SCAN 82OFP 83COND 84PLOT 85PRTMSG 86LABEL 87TA1 88DSMG1 8gEQUIV 90COND 91MCE2PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS, PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,uSET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGG,QG/l/ *BKLo~ $ CASECC,CSTM,MPT,D IT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QG,UGV,EST, ,PGG/ OPGl,OQGl,OUGVl,OESl,OEFl,PUGV1/BKLO $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/C,N,RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,EQEXIN, SIP,PUGVl,,GPECT,OES1/ PLoTX2/NSIL/LUSEP/JUMPPLOT/PLTFLG/S,N, PFILE$ PLoTx2// $ P2$ ECT,EPT,BGPDT,SI L,GPTT,CSTM/Xl,X2,X3, ECPT,GPCT/LUSET/ NOSltlP/O/NOGENL/GENEL $ CASECC,GPTT,SlL,EDT,UGV,CSTM,MPT,ECPT,GPCT,DlT/KDGG/ S,N,DSCOSET $ KDGG,KDNN/MPcF2 /MGG,MNN/MPcF2 $ LBL2D,MPCF2 $ USET,GM,KDGG,MGG,,/KDNN,MNN, ,$ 2.13-4(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DHAPCOMPILER -SOURCE LISTING 92LABEL 93EQUIV 94CONO 95SCEI 96LABEL 97EQUIV 98CONO 99SMP2 100SMP2 101LABEL 102PARAM e103EQUIV 10kPARAM 1050SMG2 106RBMG2 107PRTPARM 108PRTPARM 109SSG3 110CONO 111MATGPR 112LABEL 113SOR1 114SOR2LBL20$ KONN,KOFF/SINGLE /MNN\u003eMFF/SINGLE $ LBL3D,SINGLE $ USET,KONN,ilNN,,/KDFF,KOFS, KDSS,MFF,, $ LBL30$ KDFF,KDAA/OMIT /MFF,MAA/OMIT $ LBL5D,0MIT $ USET,GO,KDFF/KOAA USET,GO,MFF/MAA $ LBL5D$ //AOO/OSCOSET/-l/O $ PL,PBL/DSCOSET/PS ,PBS/DSCOSET/YS, YBS/OSCOSET/UOOV,UBOOV/ DSCOSET $ //MPY/NDSKIP/O/O $ MPT,KAA,KDAA,KFS,KDFS,KSS,KDSS,PL,PS,YS,UOOV/KBLL,KBFS,KBSS, PBL,PBS,YBS,UBOOV/S,N,NDSKIP/S,N,REPEATD/DSCOSET $ KBLL/LBLL/S,N,POWER/S,N,DET $ //O/OET $ //O/POWER $ LBLL,KBLL,PBL, ,,/UBLV,,RUBLV,/-l/V,Y, lRES/NOSKIP/ S,N,EPSI $ LBL9D,IRES$ GPL,USET,SIL,RUBLv//L $ LBL9D$ USET,,UBLV,UBOOV,YBS,GO,GM,PBS,KBFS,KBSS ,/UBGV,,QBG/NDSKIP/ OS1$ CASECC,CSTM,MPT,D IT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QBG,UBGV, EST,,/, OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/DSl $ 2.13-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 }37OFP DPD COND PARAII READ OFP COND OFP SDR1 CASE SDR2 OFP COND PLOT PRTMSG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARMOQBGl,OUBGVl,OESBl,OEFBl,,//S, N,CARDNO $ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDl./NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR3,NOEED $ //Mpy/NEIGv/l/-l $ KBLL,MAA, ,,EED,USET,CASECC/LAMA,PHIA,Ml ,OEIGS/~~MODES*/ s,N,NEIGv/3 $ OEIGS,,,,,IIS,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,cARONO $ USET,,PHIA,,,GO,GM,,KDFS,,/PHIG,,BQG/l/RE IG$ cAsEcc,/cAsExx/TRANREsP/KEPEAT=3/LooP $ CASEXX,CSTM,MPT,DIT, EQEXIN, SIL,,,BGPOP,LAMA,BQG,PHIG,EST,,/, OBQG1,OPHIG,OBES1,OBEF1,PPHI G/REIG $ OPHIG,OBQGl,OBEFl,OBESl,,//S ,N,CARONO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIP, ,PPHIG,GPECT, oBEsl/PLoTx3/NslL/LusEP/JuMPPLoT/PLTFLG/ S,N,PFILE $ PLoTx3// $ P3!$ FINIS$ ERROR1 $ //-1/~tNMDS* $ ERROR2 $ //-21NMD5 $ ERROR3 $ //-3/NflDS $ 2.13-6(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 138 139 140 141 142 143 144 1b5 146LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENOERROR4$ //-k/NMos $ ERROR5$ //-5/NMOS $ ERROR6$ //-6/NMos s FINIS$ DUMMY/MINUSl $ $ 2.13-7(05/30/86)\n2.13.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 42. 45. 46. 48.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forNormalModeswithDifferential Stiffness GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. e PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices, GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots.plotter. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.132andprintErrorMessage No.1ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.140andprintErrorMessage No.5ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg] GotoDMAPNo.39 SMA3addsgeneralto[Kgg]iftherearenogeneral elements, iftherearenogeneral elements. elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.142andprintErrorMessage No.6ifnoindependent degrees offreedom are defined. GotoDMAPNo.47iftherearenosupport cards. GotoDMAPNo.134andprintErrorMessage No.2. GotoDMAPNo.53ifgeneral elements arepresent. 2.13-8 (05/30/86)\n50. 51. 52. 54. 55. 56. 57. 59. 60. 61. 63. 64. 65. 67. 68. 69. 70.NORMALMOUESWITHDIFFERENTIAL STIFFNESS GotoDMAPNo.53ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.58ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn] andsolvesfor multipoint constraint transformation matrix[Gml=-[Rml-l[Rnl. MCE2partitions stiffness matrix [1iIK [Kgg]=~~Kw mnmm andperforms matrixreduction [Knn]=[nn]+[G:JLKmnl +[nl[Gml +[Gj[$J[GmJ. Equivalence [Knn]to[Kff]ifnosin91e-Point constraints exist” GotoDMAPNo.62ifnosingle-point constraints exist. SCE1partitions outsingle-point [Knn]= Equivalence [Kff]to[Kaalifnoconstraints [1Kff;‘fs. KsfIKs omitted coordinates exist. GotoDMAPNo.66ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix r- 1 IIKIKao [Kffl=:\u0026 ‘ oa00L J solves fortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[Kaal+[Kal[Gol . RBMG2decomposes constrained stiffness matrix[Kaal=[LLLIIU1lI. SSG1generates staticloadvectors {Pg}. Equivalence {Pg}to{Pi}ifnoconstraints areapplied. GotoDMAPNo.72ifnoconstraints areapplied. 2.13-9(05/30/86)\nDISPLACEMENT RIGID 71.SSG2applies constraints tostatic loadvectorsFORMATS HPn {Pg}=—- , Pm{Pn}={;n}+[G~]{Pm} , H‘f{Pn}=—–, {Pf}={f}-[Kfs]{ys} , Ps HPa {Pf}=—–and {pg}={pa}+[G]{Po} . P. 73.SSG3solvesfordisplacements ofindependent coordinates {ug}=[Kti]-l{PL} , solves fordisplacements ofomitted coordinates {us}=[KOOI-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {ISPL}={PL}-[Klk]{uL} , andcalculates residual vector (RU@V) andresidual vector errorratioforomitted coordinates {dPO}={Po}-[Koo]{u:} , {U~]{6po} . ‘o. ~pTl{uo} 00 74.GotoDMAPNo.77ifresidual vectors arenottobeprinted. 75.MATGPRprintstheresidual vectorforindependent coordinates (RULV). 76.MATGPRprintstheresidual vectorforomitted coordinates (RU13V). 2.13-10 (05/30/86)"},"title":"User's Manual P13"},"/docs/users/users_manual_014/":{"data":{"upo#STATICANALYSIS USINGCYCLICSYMMETRY\n74.Equivalence {Pg}to{Pk}ifnoconstraints areapplied.\n●75.GotoDMAPNo.81ifnoconstraints areapplied.\n76.SSG2applies constraints tostaticloadvectors\nHin{Pg}= —– ,\nPm{Pn}={~n}+[G:]{i1m’\nIIif{Pn}= —– ,\nPs\n{Pf}=\nHFa——P.{Pf}={\u003cdel\u003efl-[Kfs]{ys} ,\n{Pa}={\u003cdel\u003ea}+[G:]{PO},\nNPk\n{Pa}=\nTr–\nandcalculates determinate forcesofreaction {qr}❑ -{Pr}-[DT]{PE}.\n77.GotoDMAPNo.81ifnoomitted coordinates exist.\n●78.SSG3solvesfordisplacements ofomitted coordinates (thesearenottransformed)\n{u\u003c/del\u003e}=[KOO]-l{ PO}\nandcalculates residual vector (RU!3V)andresidual vectorerrorratioforomitted\ncoordinates\n{\u0026amp;Po}={Pol-[Koo]{u\u003c/del\u003e} ,\n{u;}{\u0026amp;po}":"78. 79. 80. 81. 82. 83. 84. 85. 87. 88. 89. 90. 91. 93.NORMALMODESWITHDIFFERENTIAL STIFFNESS SDR1recovers dependent displacements {uo}=[GO]{UL} +{u:}, H‘a——={Uf}, ‘o {um}=[Gm]{un} ,N‘f——={Un}, Ys HUn ——={Ug} Um andrecovers single-point forces ofconstraint {qs}=-{PS}+[K;s]{uf} +[Kssl{ys} . SDR2calculates element forces (OEFl)andstresses (9ES1)andprepares loadvectors(OpGl)~ displacement vectors (!dUGVl) andsingle-point forcesofconstraint (OQGl)foroutPutand translation components ofthedisplacement vector (PUGV1) forthestatic solution. @FPformats thetables prepared bySDR2andplaces themonthesystem output filefor printing. SCANexamines theelement stresses output thatmeetsthespecifications @FPformats thescanned output table fileforprinting.andforcescalculated bySDR2andgenerates scanned setbytheuser. prepared bySCANandplacesitonthesystemoutput GotoDMAPNo.86ifnostaticsolution deformed structure plotsarerequested. PL!3Tgenerates allrequested staticsolution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachstaticsolution deformed plotgenerated. TA1generates element tablesforuseindifferential stiffness matrixassembly. DSMG1generates differential stiffness matrix[Kg]. Equivalence [Kg]to[Kn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.92ifnomultipoint constraints MCE2partitions differential stiffness matrix [Kjg]= andperforms matrixreduction [K:n]=[:nlexist. [G:][K;n] +[K:nl[Gml +[Gj[ml[Gml. Equivalence [Knlto[K~f]and[Mnn]to[Mff]ifnosingle-point constraints exist. 2.13-11 (05/30/86)\n-.,.-,”,…………. 94. 95. 97. 98, 99. 100. 103. 105.IJIJPLHLLMLNI KltilU GotoDMAPNo.96ifnosingle-point constraints SCE1partitions outsingle-point constraints 1-FORMATS exist. MK$fI\u0026 [Kn]= –+– and[Mnn]= K;f[KdSsMffIMfs –+– MsftMss Equivalence [Kff]to[Ka]and[Mff]to[Maa]ifnoomitted coordinates exist. GotoDMAPNo.10lifnoomitted coordinates exist. SMP2partitions constrained differential stiffness matrix [1~~a1Ko [Kf]= –+– KaIKo andperforms matrixreduction [Ka]=[~~a]+[Ko][Go] . SMP2partitions constrained massmatrix [1.-MlMao rMffJ=f-+M— ‘ oa00 andperforms matrixreduction [Maa]=[aa]+[Ma][Go] +[G~][Moa] +[G~][Moo][Go] Equivalence {PL}to{P!},{Ps}to{P;},{Y~}to{Y!}and{u~}to scalefactorisnotspecified onaDSFACTcard. DSMG2addspartitions ofstiffness matrixtosimilar partitions matrixuoblifa o ofdifferential stiffness [K:t]=[Kaa]+6[K:a] , [Ksl=[Kfsl+BIK$l and [K;s]=[Kss]+6[Ks] andmultiplies partitions ofloadvectors anddisplacement vectors bythevalueofthe differential stiffness scalefactor(8) {P;}=B{Pi} , {Y)=8{YS} and{P:}=i3{Ps},e 2.13-12 (05/30/86)\n106. 107.NORMALMODESWITHDIFFERENTIAL RBMG2decomposes thecombined differential stiffness [K:gl=[L:J[U;J .STIFFNESS matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. 108. 109. 110. 111. 113.PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandtheelastic stiffness matrix. SSG3solvesfordisplacements ofindependent coordinates forthevalueofdifferential stiffness scalefactor(S) {u!}=[K:g]-l{P~} andcalculates residual vector (RBULV) andresidual vectorerrorratioforcurrent differential stiffness loadvector GotoDMAPNo.112iftheresidual vectorforcurrent differential stiffness loadfactoris nottobeprinted. MATGPRprintstheresidual vectorfor SDR1recovers dependent displacements +~uob},tub}=[Go]{u!} o0 u: I={u:}, b- S ;b n I={u:] ;b- mcurrent differential stiffness loadfactor. forthecurrent different b II‘i={u:},—— Ub 0 {u:}=[Gm]{+,alstiffness scalefactor andrecovers single-point forcesofconstraint forthecurrent differential stiffness scalefactor {q:]=-{P:}+[K:fltu:? +[K:f]{y: s 2.13-13 (05/30/86)\n114. 115. 116. 117. 119. 120. 121. 122. 123.DISPLACEMENT RIGIDFORMATS SDR2calculates element forces(OEFBl) andstresses (klESBl) andprepares displacement vectors (@JBGVl) andsingle-point forces ofconstraint (OQBGl) foroutputandtranslation components ofthedisplacement vector(PUBGV1) forthedifferential stiffness solution. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor@ printing. DPDextracts Eigenvalue Extraction DatafromDynamics datablock. GotoDMAPNo.136andprintErrorMessage No.3ifthereisnoEigenvalue Extraction Data. READextracts realeigenvalues andeigenvectors fromtheequation [Kfl-AMaa]{ual =O, calculates rigidbodymodesbyfinding asquare [mol=[Jol[mr][$rol isdiagonal andnormalized, computes rigidbody [1[f$aol=fl$ , ‘$ro calculates modalmassmatrix’ [m]=[@~][Maa][@a] andnormalizes eigenvectors according tooneofmatrix[oro]suchthat eigenvectors thefollowing userrequests: 11Unitvalueofaselected component 2Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. 13FPformats thesummary ofeigenvalue extraction information (f?JEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.138andprintErrorMessage No,4ifnoeigenvalues werefound. ~FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. SDR1recovers dependent components ofthe,eigenvectors {$.}=[Go]{$a},@a H={$f} , —— ‘$0 {@m}=[Gm]{on}s H$n——=tog} ‘$m 2.13-14 (05/30/86)\n●124. 125. 126. 127. 128. 129. 131. 133. 135. 137. 139. 141. 143.NORMALMOOESWITHDIFFERENTIAL STIFFNESS andrecovers single-point forces ofconstraint {qs!=[KfSIT{@f}” CASEcopiestherecordcorresponding tothethirdsubcase fromCASECCintoCASEXX. SDR2calculates element forces (OBEFl) andstresses (OBESl) andprepares eigenvectors (OPHIG) andsingle-point forcesofconstraint (k3BQGl) foroutputandtranslation components oftheeigenvectors (PPHIG) forthenormalmodesolution. OFpformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.130ifnorealeigenvalue solution deformed structure plotsarerequested.’ PLOTgenerates allrequested realeigenvalue solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.144andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No,2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. PrintErrorMessage No.6andterminate execution. 2.13-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.13.3 OutputforNormalModeswithDifferential Stiffness TheEigenvalue Summary TableandtheEigenvalue Analysis ModesAnalysis (seeSection 2.3.3), areautomatically printed. Thevalueofthedeterminant ofthesumoftheelastic stiffness isalsoautomatically printed. The 1. 2* 3. 4. The 1. 2. TheI 1. 2. 3. 4. 5.Summary, asdescribed underNormal stiffness andthedifferential following outputmayberequested: Nonzero components oftheapplied staticloadforthelinearsolution atselected grid points. Displacement andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. Forcesandstresses inselected elements, withandwithout differential stiffness. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Deformed andundeformed plotswithandwithout differential stiffness. Contour plotsofstresses anddisplacements withandwithout differential stiffness. following outputmayberequested fortheeigenvector solution subcase: Eigenvectors alongwiththeassociated eigenvalue foreachmode. Nonzero components of selected gridpoints. Forcesandstresses in Undeformed plotofthethesingle-point selected elementsforcesofconstraint forselected modes forselected modes. structural modelandmodeshapesforselected modes. Contour plotsofstresses anddisplacements forselected modes, 2.13.4 CaseControl DeckforNormalModeswithDifferential Stiffness Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Differential Stiffness: 1.TheCaseControl Deckmustcontain threesubcases. Outputselections maybemade thesubcase levelandwithintheindividual subcases.at with above 2.Thelinearsolution isoutputfromthefirstsubcase. Thestaticdifferential stiffness solution isoutputfromthesecondsubcase. Theeigenvector solution isoutputfromthe thirdsubcase. 3.AnSPCsetmustbeselected abovethesubcase levelunlessallconstraints arespecified onGRIDcards. 2.13-16 (05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS 2.13.54.Astatic loading condition mustbedefined inthefirstsubcase withaLOAD, TEMPERATURE(LOAD), orDEFORMselection, unlessallloading isspecified bygridpoint displacements onSPCcards. 5.DSC@EFFICIENT mustappearinthesecondsubcase, eithertoselectaDSFACTsetfromthe BulkDataDeck,ortoexplicitly selecttheDEFAULT valueofunity. 6.METH@Dmustappearinthethirdsubcase toselectanEIGRbulkdatacard. Parameters forNormalModeswithDifferential Stiffness Thefollowing parameters areusedinNormalModeswithDifferential Stiffness: 1, 2. 3. 4. 5. 6. 7.ASETf3UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTft3PC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated masses areignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule, Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems.I 2.13-17 (05/30/86)\n2.13.6Dlbt’LALtMkNl K1tilLlFUKMAIS Optional Diagnostic Output forFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed 2.13.7 TheAPPENDFeature TheAPPENDfeatureunderNormal canbeusedModesAnalysis (seeSection 2.3.6). forrealeigenvalue extraction inNormalModeswith Differential Stiffness. SeeSection 2.3.7fordetails. 2.13.8 RigidFormatErrorMessages fromNormalModeswithDifferential Stiffness Thefollowing fatalerrorsaredetected by Differential Stiffness rigidformat. Thetextfor letters andisfollowed byadditional explanatory action. NORMALMODESWITHDIFFERENTIAL STIFFNESS DEFINED. Nostructural elements havebeendefined NORMALMODESWITHDIFFERENTIAL STIFFNESStheDMAPstatements eacherrormessage material, includingintheNormalModeswith isgivenbelowincapital suggestions forremedial ERRORMESSAGE N@.1-N@STRUCTURAL ELEMENTS HAVEBEEN withConnection cards. ERR@RMESSAGE N@.2-FREEB@DYSUPPf3RTS Nf3TALLOWED. Freebodiesarenotallowed inNormalModeswithDifferential Stiffness. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. NORMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE N@.3-EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGR’\u003cet, N@RMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.4-NOEIGENVALUE FOUND, Noeigenvalues werefoundinthefrequency rangespecified bytheuser. NORMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.5-MASSMATRIXREQUIRED EIGENVALUE ANALYSIS.FORREAL Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. N@RMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE N~.6-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUP@RT, OMITorGRDSE”Tcards,or grounded onScalarConnection cards. 2.13-18 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14STATIC ANALYSIS USINGCYCLIC SYMMETRY ●2.14.1 RIGID APRILDMAPSequence forStatic Analysis UsingCyclic Symmetry FORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, LEVEL200NASTRAN OPTIONS INEFFECT GO ——–.— .—-RIGIDFORMAT 14 OMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR 1BEGIN 2PRECHK 3FILE 4FILE ~PARAM 6PARAM 1GP1 ●8PLTTRAN 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAM 16PARAM 17CONO 18PLOT 19PRTMSG 20LABEL 21GP3OISP14-STATIC ANALYSIS WITHCYCLIC SYMMETRY -APR.1986$ ALL$ KKK=SAVE/PK-SAVE $ UXV=APPEND $ //fipY#(/cARDNo/o/o $ //~~NOP/V,Y,CYCIO=l $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JIJMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE $ PLOTX1// $ P1s GEoM3,EQExIN,GEoM2/sLT,GPTT/s,N,NoGRAv $ 2014-1 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 2h 25 26 27 28 29 30 31 32 33 311 35 36 37 38 39 40 41 42 43 Ak 45PARAM TA1 PARAM CONO PURGE COND PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL//AND/NOMGG/NOGRAV/V,y,GRDpNT=- 1$ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ //ANO/NOELtiT/NOGENL/N051MP $ ERROR4,NOELMT $ GPST/NOSIMP/OGPST/GENEL $ LBL1,NOSIMP $ //ADO/NOKGGX/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C, Y,COUPMASS/C,Y, CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAo2/c,Y, cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GROPNT $ ERROR2,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1lA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBLIIA $ 2.14-2 (05/30/86)\nSTATICANALYSIS USINGCYCLICSYMMETRYI ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING k6 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70PARAM GP4 COND PARAII COND PURGE GPCYC CONO CONO PARAM COND GPSP OFP LABEL EQUIV CONO MCE1 MCE2 LABEL EQUIV COND SCE1 LABEL EQUIV CONO//HpY/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPOT,BGPOT, CSTM,GPST/RG,YS,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //NOT/REACDATA/REACT $ ERROR6,REACDATA $ GM/MPCFl/GO,KOO,LOO,PO,UOOV,RUOV/OMIT/PS, KFS,KSS,QG/SINGLE $ GEOM4,EQEXlN,USET/CYCO/V,Y,CTYPE/S, N,NOGO $ ERROR7,NOG0 $ LBL4,GENEL $ //EQ/GpspFLG/AuTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N, NOGPST $ OGPST,,,,,//S.N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ 2.14-3 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 71SMP1 72LABEL 73SSG1 74EQUIV 75~ONO 76SSG2 77COND 78SSG3 79COND 80MATGPR 81LABEL 82EQUIV 83COND 84”’CYCT1 85LABEL 86COND 87PARAH 88LABEL 89CYCT2 90COND 91RBMG2 92ssG3 93CYCT2 94CONDUSET,KFF,,,/GO,KAA,KOO, LOO,,t,,$ LBL5$ SLT,BGPDT,CSTM,SI L,EST,MPT,GPTT, EDT,MGG,CASECC,DIT,/PG,,,,/ LUSET/NSKIP $ PGpPL/NOSET $ LBL9,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS,PL $ LBL9,0MIT $ LOO,KOO,PO,,,/UOOV,,RUOV,/-l/v,Y, IRES=-1 $ LBL9,1RES $ GPL,USET,SIL,RUOV//O $ LBL9s PL,PX/CYCIO $ LBL1O,CYCIO $ PL/PX,GCYCF/V,Y,CTYPE/FORE/V,Y,NSEGS=-l/S,Y,KMAX=-l/V,Y, NLOAO=l/S,N,NOGO $ LBL1O$ ERROR7,NOG0 $ //ADD/KINDEX/O/O $ LBL1l$ CYCDPKAA,,PX,,/KKK, ,PK,,/FORE/V,Y,NSEGS/KINDEX/V,Y, CYCSEQ=-1/V,Y,NLOAO/S,N,NOGO $ ERROR7,NOG0 $ KKK/LKK $ LKK,KKK,PK, ,,/UKV,,RUKV,/-l/V,Y,lRES $ CYCD,,,UKV,RUKV,/,,UXV,RUXV,/BACK/V,Y,NSEGS/Ki NDEX/ V,Y,CYCSEQ/V,Y,NLOAD/S,N,NOGO $ ERROR7,NOG0 $ 2.14-4 (05/30/86)\nSTATICANALYSIS USINGCYCLIC SYMMETRY RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT lb LEVEL2.0NASTRAN DMAPCOMPILER 95COND 96MATGPR 97LABEL 98PARAM 99PARAH 100CONO 101REPT 102JUMP 103LABEL 104EQUIV 105CONO 106CYCT1 107CONO 108LABEL 109SOR1 110CONO 111EQMCK 112OFP 113LABEL llkSDR2 115OFP 116SCAN 117OFP 118CONOLBLlh,lRES$ GPL,USET,SIL,RUXV//A LBL14$-SOURCE LISTING $ //AOO/KINOEX/KINDEX/l $ //suB/ooNE/V,Y,KMAX/KINOEX $ LBL15,00NE $ LBL1l,360$ ERROR1 $ LBL15$ UXV,ULV/CYCIO $ LBL16,CYCI0 $ UXV/ULV,GCYCB/V,Y,CTYPE/~~BACK*/V,Y,NSEGS/V,Y, KMAX/V,Y,NLOAO/ S,N,NOGO $ ERROR7,NOG0 $ LBL16$ USET,PG,ULV,UOOV,YS,GO,GM, PS,KFS,KSS,/UGV,PGG,QG/NSK lP/ STATlcS $ NOMPCF,GROEQ $ CASECC, EQEXIN,GPL,BGPOT,SI L,USET,KGG,GM,UGV,PGG,QG,CSTM/ OQM1/V,Y,OPT=O/V,Y,GROEQ/NSK 1P$ OQMl,,,,,//S,N,CARONO $ NOMPCF $ cASECC,CSTM,MPT,OIT,EQEXIN,S lL,GPTT,EOT,BGPOP, ,QG,uGV, EsT,,pGG/ oPGl,OQGl,OUGVl,OESl,OEFl,PuGvl/STATl cS$ OUGVl,OPGl,OQGl,OEFl,OESl,//s,N, CARONO $ CASECC,OESl,OEF1/OESFl/RF $ OESFl,,,,,//S,N,cARoNo $ P2,JUMPPLOT $ 2.14-5 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 119PLOT 120PRTMSG 121LABEL 122JUMP 123LABEL 124PRTPARM 125LABEL 126PRTPARM 127LABEL 128PRTPARM 129LABEL 130PRTPARM 131LABEL 132PRTPARM 133LABEL 134PRTPARM 135LABEL 136PURGE 137ENDPLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,SI P,PUGV1, ,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ FINIS$ ERROR1 $ //-1/CYCSTATICS $ ERROR2 $ //-2/cYcsTATlcs $ ERROR3 $ //-3/CYCSTATICS $ ERROR4 $ //-4/cYcSTATIC5 $ ERROR6 $ //-6/cyc5TATIcS $ ERROR7 $ //-7/cyc5TATIcS $ FINIS$ CWMMY/HINUSl $ $ 2.14-6 (05/30/86)I\nSTATICANALYSIS USINGCYCLICSYMMETRY 2.14.2 Description ofImportant DMAPOperations forStatic Analysis UsingCyclic Symmetry e7. 8. 9. 12. 13. 14. 17. 18. 19. 21. 23. 25. 27. 29. 31. @32. 34. 35. 37. 38. 39. 40. 42. 43. 44. 47. 48. 50.GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalar gridpoints intheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLPTgenerates allrequested undeformed structure plots. PRTMSG prints plotter dataandengineering dataforeachundeformed plotgenerated. GP3generates Static LoadsTableandGridPointTemperature Table. TA1generates element tables foruseinmatrix assembly andstress recovery. GotoDMAPNo.129andprintErrorMessage No.4ifnoelements havebeendefined. GotoDMAPNo.41ifthere EMGgenerates structural e’ assembly bytheEMAmodule GotoDMAPNo.33ifnost’arenostructural elements. ementstiffness andmassmatrixtablesanddictionaries forlater ffnessmatrixistobeassembled. EMAassembles stiffness matrix[K\u0026]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDt4APNo.41ifnoweightandbalance information isrequested. GotoDMAPNo.125andprintErrorMessage No.2ifnomassmatrix exists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.45iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{yS}. GotoDMAPNo.127andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.131andprintErrorMessage No.6iffree-body supports arepresent. 2.14-7(05/30/86)I\nDISPLACEMENT RIGIDFORMATS 52. 53. 54. 56. 57. 58. 60. 61.GPCYCprepares segment boundary table(CYCO). GotoDMAPNo.133andprintErrorMessage No.7ifCYJklINdataisinconsistent. GotoDMAPNo.59ifgeneral elements arepresent. GotoDMAPNo,59ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.64ifnomultipoint constraints exist. 62.MCE1partitions mu’ multipoint constra 63.MCE2partitions st’tipoint constraint equations [Rg]=[Rm~Rn]andsolvesfor nttransformation matrix[Gm]=-[Rm]-l[Rn]. ffnessmatrix-1 andperforms matrixreduction – [Knn]=[~nn]+[G:][Kmnl +[K:JIGMI+[(j[Kmml[Gml. 65.Equivalence [Knn]to[Kff]ifnosingle-point constraints exist. 66.GotoDMAPNo.68ifnosingle-point constraints exist. 67.SCE1partitions outsingle-point constraints [1‘ff‘‘fs[Knn]=;~K–. Sf55 69.Equivalence [Kfflto[Kaalifnoomitted coordinates exist. 70.GotoDMAPNo.72ifnoomitted coordinates exist. 71.SMP1partitions constrained stiffness matrix r- 7 IIKIK [Kff]=~a+= , ,KoalKoo L J solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal 73.SSG1generates staticloadvectors 2=[iaal+[K:a][Go] . Pg}. 14-8(05/30/86)e\nSTATICANALYSIS USINGCYCLICSYMMETRY 74.Equivalence {Pg}to{Pk}ifnoconstraints areapplied. ●75.GotoDMAPNo.81ifnoconstraints areapplied. 76.SSG2applies constraints tostaticloadvectors Hin{Pg}= —– , Pm{Pn}={~n}+[G:]{i1m’ IIif{Pn}= —– , Ps {Pf}= HFa——P.{Pf}={fl-[Kfs]{ys} , {Pa}={a}+[G:]{PO}, NPk {Pa}= Tr– andcalculates determinate forcesofreaction {qr}❑ -{Pr}-[DT]{PE}. 77.GotoDMAPNo.81ifnoomitted coordinates exist. ●78.SSG3solvesfordisplacements ofomitted coordinates (thesearenottransformed) {u}=[KOO]-l{ PO} andcalculates residual vector (RU!3V)andresidual vectorerrorratioforomitted coordinates {\u0026Po}={Pol-[Koo]{u} , {u;}{\u0026po}‘o. ~pT1{uo} 00 79.GotoDMAPNo,81ifresidual vectors arenottobeprinted. 80.MATGPRprintstheresidual vectorforomitted coordinates (RUOV). 82.Equivalence {Pi}to{Px}ifsynmetric components ofloadshavebeeninput. 83.GotoDMAPNo.85ifsynwnetric components ofloadshavebeeninput. 84.CYCT1transforms loadsonanalysis pointstosymmetric components bytheequation {Px}=[G]{Pk} . 2.14-9 (05130/86)\nDISPLACEMENT RIGIDFORMATS 86.GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT1errorwasfound. 88.Beginning ofloopforcyclicindex(KINDEX) values. 89.CYCT2transforms matrices andloadsfromsymmetric components tosolution setbythe equations [Kkk]❑ [G~][Kaal[G1l +[41[Kaa[G21 , whereG1=Gc(cosine) andG2=Gs(sine)forrotational symmetry, and‘1=GS(Syrrunetric {Pk}=[G\u0026’Pc} +andG2=GA(Antisymmetric) fordihedral syimletry, [G~]{Ps} forrotational symmetry, {P;}=[G~]{PcS} +[G~]{PsA} , and{Pl=[G]tPcA} +[G~]{PsS} fordihedral synxnetry. 90.GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT2errorwasfound, 91.RBMG2decomposes constrained stiffness matrix [Kkkl=[Lkk][Ukk] 92.SSG3solvesfordisplacements ofsolution set {uk}=[Kkk]-l{Pk}forsolution set coordinates andcalculates residual vector(RUKV)andresidual vectorerrorratioforsolution set coordinates {\u0026Pk}={Pk?- [Kk,]{ukl , {u:}{6Pk} ~k= . {P[}{uk} 93. 94. 95. 96. 100. 101. 102. 104. 105,CYCT2findssymmetric components ofdisplacement fromsolution setdataandappends to outputforeachKINDEX. GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT2errorwasfound. GotoDMAPNo.97ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectorforsolution setcoordinates (RUXV). GotoDMAPNo.103ifallcyclicindex(KINDEX) valuesarecomplete. GotoDMAPNo,88ifadditional cyclicindexvaluesareneeded. GotoDMAPNo.123andprintErrorMessage No.1ifnumberofloopsexceeds 360. Equivalence {ux}to{uL}ifoutputofsynunetric components wasrequested, GotoDMAPNo.108ifoutputofsymmetric components wasrequested, 2.14-10 (05/30/86)\n“-m ..-.,. …..,,-.,. ,,,. ..,- ….-, .- -i,…..–@… 106. ●107. 109. 110. 1110 112. 114. 116. 117. 118. 119. 120. 122. 124. 126. 128. 130. 132. 134.\u003eIAIIL ANALY\u003el\u003e USINtiLYLLIL SYMMLIKY CYCT1transforms displacements fromsynwnetric components tophysical components. GotoDMAPNo.131andprintErrorMessage No.7ifaCYCT1errorwasfound. SDR1recovers dependent displacements {uo}=[Go]{ual +{U:}, 11‘a——={uf] , ‘o 11‘f={Un}, —— Ys {urn}= [Gm]tun} , IIUn ——={Ug} ‘m andrecovers single-point forcesofconstraint {qs}=-{PSI+[Kjsl{uf} +[Kssl{ysl . GotoDMAPNo.113ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. OFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates element forces(fIEFl)andstresses (OESl)andprepares loadvectors (t3PGl), displacement vectors (@UGVl) andsingle-point forcesofconstraint (!3QG1)foroutputand translation components ofthedisplacement vector(PUGV1). OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.121ifnodeformed structure plotsarerequested. PLOTgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.135andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.6andterminate execution. PrintErrorMessage No.7andterminate execution, 2.14-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14.3 OutputforStaticAnalysis UsingCyclicSymmetry The index,may 1. 2. 3. The 1. 2. 3. 4.following printed output, foreachloading condition andeachsymmetric segment or berequested forStaticAnalysis UsingCyclicSymmetry: Displacements andcomponents ofstaticloadsandsingle-point forcesofconstraint at selected gridpointsorscalarpoints. Forcesandstreses inselected elements. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model(1segment). Contour plotsofstresses anddisplacements (1segment). X-Yplotofanycomponent ofdisplacement, staticload,orsingle-point forceof constraint foragridpointorscalarpoint. X-Yplotofanystressorforcecomponent foranelement. 2.14.4 CaseControl DeckforStaticAnalysis UsingCyclicSymmetry Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis UsingCyclicSymmetry: 1,Aseparate groupofsubcases mustbedefined foreachsymmetric segment. Fordihedral symmetry, aseparate groupOFsubcases mustbedefined foreachhalf.Theremaybeup to360subcases corresponding to1°segments. 2.Thedifferent loading conditions aredefined withineachgroupofsubcases. Theloads oneachsymmetric segment andtheselected outputrequests maybeindependent. The numberofloading casesisspecified onthePARAMcardNL(IAD. 3.TheSPCandMPCrequest mustappearabovethesubcase levelandmaynotbechanged. 4.Analternate loading methodistodefineaseparate groupofsubcases foreachharmonic index,k.Theparameter CYCI@isincluded andtheloadcomponents foreachindexare defined directly withineachgroupforthevarious loading conditions. 2.14.5 Parameters forStaticAnalysis UsingCyclicSymmetry Thefollowing parameters areusedinStaticAnalysis UsingCyclicSymmetry: 1.ASETf3UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.14-12 (05/30/86)"},"title":"User's Manual P14"},"/docs/users/users_manual_015/":{"data":{"":"2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12.STATICANALYSIS USINGCYCLICSYMMETRY AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. c!iluPMAss -CPBAR, CPR@D, CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsynumetry asfollows: (1)ROT-rotational symmetry (2)DRL-dihedral symmetry, usingrightandlefth~.lves (3)DSA-dihedral symmetry, usingsymmetric andantisymmetric components cYcIk3-optional. Theinteger valueofthisparameter specifies theformoftheinput andoutputdata.Avalueof+1isusedtospecify physical segment representation, and avalueof-1forcyclictransform representation. Thedefault valueis+1. CYCSEQ-optional. Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCF@RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional, Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. KMAX-optional. Theinteger valueofthisparameter specifies themaximum valueofthe harmonic index. Thedefault valueisALLwhichimplies NSEGS/2 forNSEGSevenand (NSEGS -1)/2forNSEGSodd. NL@AD-optional. Theinteger conditions. Thedefault value NSEGS-required. Theintegervalueofthisparameter is1. valueofthisparameteristhenumberofstaticloading isthenumberofidentical segments inthestructural model. 2.14-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 13. 14. 15. 16.OPT-optional, Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCF!llRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forces SURFACE -optional. Thecomputations two-dimensional andthree-dimensional aregenerated intheEMGmodule. The parameter. Seethedescription undertobecalculated fortheoutputrequest. oftheexternal surface areasforthe elements areactivated bythisparameter whenthey results aremultiplied bytherealvalueofthis thePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule, Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.14.6 RigidFormatErrorMessages fromStaticAnalysis UsingCyclicSymmetry Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis Using CyclicSymmetry rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.1-ATTEMPT T~EXECUTE MORETHAN360L013PS. Anattempt hasbeenmadetousemorethan360cyclicindex(KINDEX) values. Thisnumbermaybe increased byALTERing theREPTinstruction intheDMAP. STATICS WITHCYCLICSYMMETRY ERRf9RMESSAGE NO.2-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATI(INS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE No.3-NoINDEPENDENT DEGREES OFFREED13M HAVEBEEN DEFINED. Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUPORT, 9MITorGRDSETcards,or grounded onScalarConnection cards. 2.14-14 (05/30/86)\nSTATICANALYSIS USINGCYCLICSYMMETRY STATICS WITHCYCLICSYMMETRY ERR(3RMESSAGE NO.4-NOELEMENTS HAVEBEENDEFINED. ●Noelements havebeendefined witheitherConnection cardsorGENELcards. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.6-FREEBODYSUPP13RTS N@TALLOWED. Freebodiesarenotallowed inStaticAnalysis UsingCyclicSymmetry. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.7-CYCLICTRANSFORMATI@N DATAERROR, SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. 2.14-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14-16 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15NORMALMODESANALYSIS USINGCYCLICSYMMETRY ●2.15.1 DMAPSequence forNormalModesAnalysis UsingCyclicSynwnetry RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRAN OPTIONS INEFFECT GO .——- ——– -RIGIDFORMAT 15 DMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR 1BEGIN DISP15NORMAL MODES 2PRECHK ALL$ 3PARAM //APY~~/CARDNO/O/O $ANALYSIS WITHcycLlc syMHETRY-APR. 1986$ 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21GP1 PLTTRAN GP2 PARAML PURGE COND PLTSET PRT!tSG PARAM PARAM COND PLOT PRTNSG LABEL GP3 TA1 COND PURGEGEOMl,GEOM2,/GPL,EQEXIN,GPOT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //W4PY/PLTFLG/l/l $ //MpY/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE $ PLOTX1//$ P1$ GEOM3,EQEXIN,GEOm2/,GPTT/NOGRAV $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL $ ERROR6,NOSIMP $ OGPST/GENEL $ 2.15-1(05/30/86)\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT15 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 2“b 35 36 37 38 39 40 41 b2 43 44PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA CONO GPWG OFP LABEL EQUIV COND SF4A3 LABEL PARAH GPb CDND PARAM COND PURGE//*ADOfI/NOKGGX/l/O $ //AOO/NOMGG/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KOICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/C,Y,CPROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ C,Y,CPQOPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ v,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,~MASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSKIP/O/O $ CASECC,GEOMk,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //NOT/REACDATA/REACT $ ERROR4,REACOATA $ GM/tlPCFl/GO/OMIT/KFS,QG/SINGLE $ 2,15-2 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY ●RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRANRIGIDFORMAT 15 DHAPCOMPILER -SOURCELISTING 45 46 47 48 49 50 51 52 53 54 55ERROR5,NOG0 $GPCYC GEom4,EQExlN,usET/cYcD/v,Y,cTYPE/s,N,NoGo $ COND COND PARAM CONO GPSP OFP LABEL EQUIV COND MCE1 ●56MCE2 57LABEL 58EQUIV 59COND 60SCE1 61LABEL 62EQUIV 63EQUIV 64COND 65SMP1 66SMP2 67LABEL 68DPD 69CONOLBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGpST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,/lNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,t4FF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ USET,GO,MFF/MAA $ LBL5s DYNAMICS,GPL,SIL,USET/GPLD,S lLD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEEO//NOUE $ ERROR2,NOEED $ 2.15-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 15 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70CYCT2 71COND 72READ 73OFP 74COND 75OFP 76CYCT2 77CONO 78SDR1 79COND 80EQMCK 81OFP 82LABEL 83SDR2 8LOFP 85SCAN 86OFP 87COND 88PLOT 89PRTMSG 90LABEL 91JUMP 92LABELCYCD,KAA,MAA,,,/KKK,MKK,,, /FORE/V,Y,NSEGS=-l/V,Y,KINDEX=- 1/ v,Y,cYcSEQ=-1/l/S,N,NOGO $ ERROR5,NOG0 $ KKK,MKK, ,,EED,,CASECC/LAMK,PHIK,Ml,OE lGS/MODES~(/S,N,NEIGV $ OEIGS,,,,,//S,N,CARDNO $ FINIS,NEIGV $ LAMK,,,,,//s,N,cARDNO $ CYCD,,,,PHIK,LAMK/,,,PHIA,LAMA/BACKj~/V,Y,NSEGS/V,Y, KINDEX/ V,Y,CYCSEQ/l/S,N,NOGO $ ERROR5JNOG0 $ USET,,PHIA,,,GO,GM,,KFS, ,/PHIG,,QG/l/~:REIG $ NOMPCF,GRDEQ $ CASECC, EQEXIN,GPL,BGPDT,SI L,USET,KGG,GM,PH IG,LAMA,QG ,CSTM/ OQMl/V,Y,OPT=O/v,Y,GRDEQ/-l $ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC,CSTM,MPT,DIT,EQEX IN,SIL, ,,BGPDP,LAMA,QG, pHIG,EST,,/, OQGl,OPHIG,OESl,OEFl,PPHIG/$~RE IG$ OPHIG,OQGl,OEFl,OESl,,//S,N, CARONO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPOT,EQEX IN,SIP, ,PPHIG,GPECT, OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLoTx2// $ P2$ FINIS$ ERROR1 $ 93PRTPARM //-1/~~CYCMODES* $ 2.15-4(05/30/86)\nNORMALMODESANALYSIS USINGCYCLIC SYMMETRY ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 15 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94LABEL ERROR2 $ 95PRTPARM //-2/CYCMODES $ 96LABEL ERROR3 $ 97pRTpARfi //-3/cYCHODES $ 98LABEL ERROR4 $ 99PRTPARH //-4/cYcMODES $ 100LABEL ERROR5 $ 101PRTPARM //-5/CYCMOOES $ 102LABEL ERROR6 $ 103PRTPARM //-6/CYCMODES $ 104LABEL FINIS$ e105PURGE DUMMY/MINUSl $ 106END $ 2.15-5(05/30/86\nDISPLACEMENT RIGIDFORMATS 2.15.2 Description ofImportant DMAPOperations forNormalModesAnalysis UsingCyclicSymmetry 4. 5. 6. 9. 10. 11. 14. 15. 16. 18. 19. 20. 24. 26. 27. 29. 30. 31. 32. 33. 35. 36. 37. 40. 41. 43. 45. 46.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.17iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.17ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.102andprintErrorMessage No.6ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.28ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.92andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.34ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information, OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.38iftherearenogeneral elements. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.96andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.98andprintErrorMessage No.4iffree-body supports arepresent. GPCYCprepares segment boundary table(CYCD). GotoDMAPNo.lOOandprintErrorMessage No.5ifCYJ@INdatais 2.15-6 (05/30/86)nconsistent.\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 47.GotoDMAPNo.52ifgeneral elements arepresent. 49.GotoDMAPNo.52ifnopotential gridpointsingularities exist. 50.GPSPgenerates atableofpotential gridpointsingularities. 51.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. 53.Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. 54,GotoDMAPNo.57ifnomultipoint constraints exist. 55.MCE1partitions multipoint constraint equations [Rg]❑ [RmRn] andsolves for multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 56.MCE2partitions stiffness matrix [1iiIK [Kgg]=:K mnmm andperforms matrixreduction [Knnl=[inn]+[Gl[Kmnl +[nl[Gml +[G][Kmm][Gm] . 58.Equivalence [Knn]to[Kff]and[Mnnlto[Mff]ifnosin91e-Point constraints exist. 59.GotoDMAPNo.61ifnosingle-point constraints exist. 60.SCE1partitions outsingle-point constraints [1‘ff’‘fs [1‘ff’‘fs[Knn]=–+–and [Mnn]=;~M–. KSfIKSSSfSs 62.Equivalence [Kff]to[Kaalifnoomitted coordinates exist” 63.Equivalence [Mff]to[Maalifnoomitted coordinates exist” 64.GotoDMAPNo.67ifnoomitted coordinates exist. 65.SMP1partitions constrained stiffness matrix [1iiIKao [Kffl=:~K— ‘ oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 2.15-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS 66. 68. 69, 70. 71. 72. 73. 74. 75. 76. 77.SMP2partitions constrained massmatrix NMIMao [Mffl=::M— ‘ oa00 andperforms matrix reduction [Maa]=[;aa]+[M;a][Go] +[G~][Moa] +[G;][MOO][GO] . DPDextracts Eigenvalue Extraction DatafromDynamics datablock. GotoDMAPNo.94andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. CYCT2transforms matrices fromsymmetric components tosolution setbytheequations [Kkkl =[G@aa][Gl] +[@aa[G21 , and [Mkk] =[Gl[Maal[GJ +[G;l[Maa[G21 , whereGI=Gc(cosine) andG2=Gs(sine)forrotational symmetry, and‘1=G(Synnnetric) andG2=GA(Antisyrrrmetric) fordihedral symmetry, GotoDMAPNo.lOOandprintErrorMessage No.5ifaCYCT2errorwasfound. READextracts realeigenvalues andeigenvectors fromtheequation [Kk~-kMkk]{uk} =O, calculates modalmassmatrix [d=[$][Mk][@k] andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. OFPformats thesummary ofeigenvalue extraction information (9EIGS)prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.104andmakenormalexitifnoeigenvalues werefound. 13FPformats theeigenvalues (LAMK)prepared byREADandplacesthemonthesystemoutput fileforprinting. CYCT2findssymmetric components ofeigenvectors fromsolution seteigenvectors. GotoDMAPNo.lOOandprintErrorMessage No.5ifaCYCT2errorwasfound. 2,15-8(05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 78.SDR1recovers dependent components oftheeigenvectors H%{4.}=[Go]{I#a}, ={@f} , —— ‘+0 H4f ——={On} , ‘+{@m}=[Gm]{f.}., H‘+n——={$} om andrecovers single-point forces ofconstraint {qs}=[Kfs]T$f}. 79,GotoDMAPNo.82ifnomultipoint constraint forcebalance isrequested. 80,EQMCKcalculates theforceandmoment equilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. 81.!ilFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. 83.SDR2calculates element forces(OEFl)andstresses (OE.Sl)andPrepareseiwwectors (OpHIG) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthe eigenvectors (PPHIG). ●84.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 85,SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. 86.OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. 87.GotoDMAPNo.90ifnodeformed structure plotsarerequested. 88,PLOTgenerates allrequested deformed structure andcontour plots. 89.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 91.GotoDMAPNo.104andmakenormalexit. 93.PrintErrorMessage No.1andterminate execution. 95.PrintErrorMessage No.2andterminate execution. 97.PrintErrorMessage No.3andterminate execution. 99.PrintErrorMessage No.4andterminate execution. 101.PrintErrorMessage No.5andterminate execution. 103.PrintErrorMessage No.6andterminate execution. 2.15-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15.3 OutputforNormalModesAnalysis UsingCyclicSymmetry TheEigenvalue Summary TableandtheEigenvalue Analysis Summary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed. EachNASTRAN runcalculates modesforonlyonesymmetry index,k,Thefollowing outputmay berequested: 1.Eigenvectors alongwiththeassociated eigenvalue foreachmode. 2.Nonzero components ofthesingle-point forcesofconstraint forselected m~desat selected gridpoints. 3.Forcesandstresses inselected elements forselected modes. 4.Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputmayberequested: 1.Undeformed plotofthestructural modeland 2.Contour plotsofstresses anddisplacementsmodeshapesforselected modes. forselected modes. 2.15.4 CaseControl DeckforNormalModesAnalysis UsingCyclicSymmetry Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Analysis UsingCyclicSymmetry: 1.METHODmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 2.AnSPCsetmustbeselected unlessthemodelisafreebodyorallconstraints specified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. 3.Multiple subcases areusedonlytocontrol outputrequests. Asinglesubcaseare is sufficient ifthesameoutputisdesired forallmodes. If’multiple subcases are present, theoutputrequests willbehonored insuccession forincreasing modenumbers. M@DESmaybeusedtorepeatsubcases inordertomakethesameoutputrequest for several consecutive modes. 2.15.5 Parameters forNormalModesAnalysis UsingCyclicSynwnetry Thefollowing parameters areusedinNormalModesAnalysis UsingCyclicSymmetry: 1.ASET@.lT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0. 2.AUT@SPC -reserved forfuture optional use.Thedefault valueis-1. 2.15-10 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 3. 4. 5. 6. 7. 0 8. 9. 10. 11.CfiIUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsynunetry asfollows: (1)ROT-rotational symnetry (2)DRL-dihedral symmetry, usingrightandlefthalves (3)DSA-dihedral sytmnetry, usingsymmetric andantisymmetric components =-oPtional .Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDEQ-optiondl. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCFORCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. KINDEX-required. Theinteger valueofthisparameter specifies asinglevalueofthe harmonic index. NSEGS-required. Theinteger valueofthisparameter isthenumberofidentical segments inthestructural model. OPT-optjonal. Apositive integer valueofthisparameter causesbothequilibrium and— multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCFflRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 2.15-11 (05/30/86)\n12. 13.DISPLACEMENT RIGIDFORMATS V@LUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated i theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. Se thedescription underthePARAMbulkdatacardfordetails. WTMASS -optional. Thetermsofthestructural massmatrixaremultiplied bytherea” valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended ff useinhydroelastic problems, 2.15.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deck thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.15.7 Cyclic 2.15.8TheAPPENDFeature TheAPPENDfeature canbeused,forrealeigenvalue extraction inNormalModesAnalysis Us Symmetry. SeeSection 2.3.7fordetails, RigidFormatErrorMessages fromNormalModesAnalysis UsingCyclicSymmetry Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNormalModesAnalys UsingCyclicSynnnetry rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. N@RMAL MODESWITHCYCLICSYMMETRY ERR13RMESSAGE NO.1- ANALYSIS. Themassmatrixisnullbecause eithernoelements wereMASSMATRIXREQUIRED F@RREALEIGENVALUE defined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined-on aMateri card. NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FOR REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeck CaseControl DeckmustselectanEIGRset. NORMALMODESWITHCYCLICSYMMETRY ERR13RMESSAGE N@.3-N@INDEPENDENT DEGREES OF DEFINED.andMETHODint FREED@M HAVEBE Eithernodegrees offreedom havebeendefined onGRID,SPOINT, orScalarConnection cards,oral defined degrees offreedom havebeenconstrained bySPC,MPC,SUP!3RT, OMITorGRDSETcards,or grounded onScalarConnection cards. 2.15-12 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE NO.4-FREEBODYSUPPORTS NOTALLOWED. ●Freebodiesarenotallowed inNormalModesAnalysis UsingCyclicSymmetry. TheSUPORTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. N@RMALMODESWITHCYCLICSYMMETRY ERR@RMESSAGE NO.5-CYCLICTRANSF!3RMAT10N DATAERR(JR. SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE NO.6-NflSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.15-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15-14 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.16STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 2.16.1 DMAPSequence forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM 4GP1 5CONO 6PLTTRAN 7GP2 8PARAML 9PARAMR 10PURGE 11COND 12PLTSET 13PRTMSG 14PARAH 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3 21PARAMOISP16-STATIC AEROTHERMOELASTIC DESIGN/ANALYSIS-APR. 1986$ ALL$ //MPY/CARONO/O/O $ GEOH1,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LusET/s ,N, NOGPDT/MINUSl=-l $ ERROR3,NOGPDT $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//*PRES~~////JUMPPLOT $ //COMPLEX//V,Y,SlGN/O.O/CSlGN $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ PI,JUMPPLOT $ PCUB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETs/s,N,NslL/sSN, JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //fipy/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECc,BGpDT, EQExlN,SIL,S~I/pLoTxl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,pF ILE$ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //AND/NOMGG/NOGRAV/V,Y,GRDPNT–l $ 2.16-1 (05/30/86)I\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43TA1 COND PURGE PARAII EMG COND EMA LABEL COND EMA LABEL COND CONO GPWG OFP LABEL EQUIV COND SltA3 LABEL PARAM GP4 CONDECT,EPT,BGPOT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/LUSET/S,N, NOSIMP/1/S,N,NOGENL/S,N,GENEL $ ERROR1,NOSIMP $ OGPST/GENEL $ //Aoo/NoKGGx/l/o $ E5T,C5TM,MPT,01T,GEOM2,/KELM,KO lCT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/C,Y,CPROO/C,Y, cPQuAol/c,Y,cPQuAo2/c,Y,cPTRl A1/c,Y,cPTRlA2/c,Y,cPTuBE/c,Y, CPQOPLT/C,Y,CPTRPLT/C,Y,CPTRBSC $ JMPKGG,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOICT,flELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPIIGG $ LBL1,GRDPNT $ ERROR4,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO LBL1S KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //mPY/NsKIp/0/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPOT, CSTM,/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/S,N, NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y , AUTOSPC $ ERROR5,NOL $ 2.16-2(05/30/86)"},"title":"User's Manual P15"},"/docs/users/users_manual_016/":{"data":{"":"STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCELISTING 45PURGE 46CONO 47JUMP 48LABEL 49COND 50PARAH 51COND 52GpSP 53OFP 5kLABEL 55EQUIV 56COND 57MCE1 58MCE2 59LABEL 60EQUIV 6?COND 62SCEI 63LABEL 64EQUIV 65COND 66SMP1 67LABEL 68RBMG2 69SSG1GM/MPCFl/GO,KOO, LOO,PO,UOOV,RUOV/OMIT/PS,KFS, KSS,QG/SINGLE/ PBS,KBFS,KBSS,KDFS,KDSS/SINGLE $ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ l(GG,KNN/MPCFl $ LBL2,MPCF2 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMiT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBL5$ KAA/LLL $ SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT, EDT,HGG,CASECC,DIT,/PGNA, ,,,/ LUSET/1 $ 2.16-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70PARAM 71CONO 72ALG 73COND ~kPARAM 75CDND 76GP3 77SSG1 78AOD 79LABEL 80EQUIV 81EQUIV 82COND 83SSG2 84LABEL 85SSG3 86COND 87MATGPR 88MATGPR 8gLABEL 90SDR1 91SDR2 92OFP 93CONO//AND/ALoAo/v,y,ApREss/v,y,ATENp $ NOAL,ALOAD $ CASECC, ,EQEXIN, ,ALGDB,,/CASECCAl,GEOM3Al/S, Y,APRESS/S,Y, ATEMP/-l/-V,Y,lPRTClCS,N,l,l FAIL$ FINIS,IFAIL$ //AND/ALoAD/v,Y,ApREss/v,y,ATEMp $ NDAL,ALOAO $ GEOM3A1,EQEX1N,GEOM2/SLTA1,GPTTA1/NOGRAV $ SLTA1,BGPDT,CSTM,SIL,EST,MPT,GPTTA1 ,EDT,MGG,CASECCAl,DIT,/ PGA1,,,,/LUSET/l $ PGNA,PGA1/PG $ NOAL$ PGNA,PG/ALOAD $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS,PL $ LBLIO$ LLL,KAA,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGl,QG/l/DSO $ CASECC,CSTM,MPT OPGI,OQG1,OUGV1 OUGV1,OPG1,OQG1 P2,JUMPPLOT $DIT,EQEXIN,SI L,GPTT,EDT,BGPDP, ,QG,UGV,EST,,PG/ OESl,OEFl,PUGV1/OSO $ OEFl,OESl,//S,N,CARDNO $ 2.16-4(05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGID APRILFORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94PLOT 95PRTMSG g6LABEL 97TA1 98OSMG1 99COND 100EQUIV 101LABEL 102PARAM 103PARAM 104PARAt4R 105PARAML 106LABEL 107EQUIV 108PARAM 109EQUIV 110COND 111MCE2 112LABEL 113EQUIV 114COND 115SCE1 116LABEL 117EQUIV 118CONDPLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,S IP,PUGVI, ,GPECT,OES 1/ PLOTX2/NSlL/LUSET/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,SI L,EOT,UGV,CSTM,HPT, ECPT,GPCT,DIT/KDGG/ DSCOSET$ NOALO,ALOAD $ PGNA,PG $ NOALO$ //ADD/sHIFT/-l/o $ //ADO/COUNT/ALWAYS=-l/NEVER=l $ //fADD*/DSEPSl/O.O/O.O $ YS//*NULLt////NOYS $ OUTLPTDP $ PG,PG1/NOYS $ //~~KLOCK*/TO $ KDGG,KDNN/MPcF2 $ LBL20,MPCF2 $ USET,GM,KDGG,,,/KDNN,,, $ LBL2D$ KDNN,KDFF/SINGLE $ LBL3D,SINGLE $ USET,KDNN ,,,/KOFF,KDFS,KDSS,,, $ LBL3D$ KDFF,KDAA/OMIT $ LBL5D,0MIT $ 2.16-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 119SMP2 120LABEL 121AOO 122AOO 123Aoo 12kCONO 125ltPY’AD 126MPYAD 127UMERGE 128EQUIV 129COND 130UMERGE 131LABEL 132ADD 133EQUIV 134LABEL 135AOD 136COPY 137RBMG2 138PRTPARM 139PRTPARM lkOLABEL 141PARAM 142COND 143ALGUSET,GO,KDFF/KOAA $ LBL5D‘$ KAA,KDAA/KBLL/(1.0,0.0)/CSIGN $ KFS,KOFS/KBFS/(l.O,O.O)/CSIGN $ KSS,KDSS/KBSS/(1.0,0.0)/CSIGN $ PGOK,NOYS $ KBSS,YS,/PSS/O $ KBFS,YS,/PFS/O $ lJSET,PF~,PSS/PN/N/F/S $ PN,PGx/mPcF2 $ LBL60,MPCF2 $ USET,PN,/PGX/G/N/M LBL60$ PGX,PG/PGG/(-l.O,O.O) $ PGG,PG1/ALWAYS $ PGOK$ PGl,/PGO/ $ UGV/AUGV $ KBLL/LBLL/S,N,POWER/S,N,DET $ //0/DET $ //0/PowER $ INLPTOP $ //KLIxK/TI $ NOAL1,ALOAD $ CASECC,EDT, EQEXIN,AUGV,ALGDB, CSTM,BGPOT/CASECCA,GEOM3A/S,Y, AP!iESS/S,Y,ATEMP/-l/-V,Y,Y, lPRTCL/S,N,lFAIL/V,Y,SIGN/V, Y,ZORIGN/V,Y,FXCOOR/V,Y,FYCOOR/V,Y, FZCOOR $ 2.16-6(05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING lkkCOND 145PARAM 146PARAM 147COND 148GP3 149SSG1 150ADD 151LABEL 152EQUIV 153SSG2 154SSG3 155CDND 156MATGPR 157LABEL 158SDRI 159COND 160EQUIV 161LABEL 162ADD 163DSMG1 164MPYAO 165ADD 166OSCHK 167CONDDONE,IFAIL$ //MPY/v,y,IPRTcL/0 $ //AND#t/ALOAD/V,Y,APRESS/V,Y,ATEMP $ NOAL1,ALOAD $ GEoM3A,EQEx1N,GEoM2/sLTA,GPTTA/NoAsL/NoGRAv/NoATL $ SLTA,BGPDT,CSTM,SI L,EST,MPT,GPTTA, EDT,MGG,CASECCA,DIT,/PGA,,, ,/ LUSET/1 $ PGl,PGA/PG2 $ NOALl$ PGl,PG2/ALoAD $ uSET,GM,YS,KDFS,G0,,PG2/,PB0,PBS, PBL$ LBLL,KBLL,PBL, ,,/UBLV,,RUBLV,/-l/V,Y, lRES/NDSKIP/S,N, EPSI$ LBL90,1RES $ GPL,USET,SIL,RUBLV//L $ LBL9D$ USET,,UBLV,,YS,GO,GM,PBS,KBFS ,KBSS,/UBGV,,QBG/l/fiDSl $ NOAL2,ALOA0 $ UBGV,AUGV $ NOAL2$ UBGV,UGV/DUGV/(-l.0,0.0) $ CASECC,GPTT,S IL,EDT,DUGV,CSTM,MPT, ECPT,GPCT,DIT/DKDGG/V,N, DSCOSET $ OKDGG,UBGV,PGO/PGll/O $ PGll,PGA/PG12 $ PG2,PG12,uBGv//c,Y,EPslo=l .E-5/s,N,DsEPsl/c,Y,NT=lo/ TO/Tl/S,N,DONE/S,N,SHIFT/S,N, COUNT/C,Y,BET).3=k $ DONE,DONE $ 2.16-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 168CONO 169EQUIV 170EQUIV 171EQUIV 172REPT 173TABPT 174LABEL 175ADO 176EQUIV 177EQUIV 178REPT 179TABPT 180LABEL 181PARAM 182COND 183AOD 184OUTPUT1 185OUTPUT1,SHIFT,SHIFT $ PG,PG1/NEVER $ PGll,PG1/ALWAYS $ PGl,PG1l/NEVER $ INLPTOP,1OOO $ PGll,PGl,PG,,// $ SHIFT$ OKOGG,KOGG/KDGGl/(-l.0,0.0) $ UBGV,UGV/ALWAYS/KOGGl,KOGG/ALWAYS $ KOGG,KOGGl/NEVER/UGV,UBGV/NEVER $ OUTLPTOP,1OOO $ KOGGl,KOGG,UGV,,// $ OONE$ //NOP/V,Y,KTOUT=-l $ JMPKTOUT,KTOIJT $ KGG,KDGG/KTOTAL/(1.0,0.0)/CS IGN$ KTOTAL,,,,//C,Y,LOCATlON=-l/C,Y,lNPTUN IT=O$ ,,,,//-3/0 $ 186LABEL JMPKTOUT $ 187ALG CASECC,EOT,EQEXIN,UBGV,ALGOB, CSTM,BGPOT/CASECCB,GE0M3B/ -1/-l/V,Y,STREAHL/V,Y,PGEOM/V,Y, lPRTCF/S,N,lFAIL/V,Y,SIGN/ V,Y,ZORIGN/V,Y,FXCOOR/V,Y,FYCOOR/V,Y, FZCOOR$ 188SDR2 CASECC,CSTM,MPT,OIT,EQEXIN, SIL,GPTT,EOT,BGPOP, ,QBG,UBGV, EST,,/, OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/OSl $ 189OFP OUBGVl,OQBGl,OEFBl,OESBl,,//S, N,CARONO $ 190SOR1 uSET,PG2,UBLV, ,YS,G0,GM, PBS,KBFS,KBSS,/AUBGV,APGG,AQBG/ l/clsl $ 191GPFOR CASECC,AUBGV, KELM,KDICT,ECT, EQEXIN,GPECT,APGG,AQBG/ONRGY 1, OGPFB1/STATICS $ 2.16-8(05/30/86)\nSTATICAEROTHERMOELASTIC ●RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -DESiGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS SOURCELISTING I92 193 194 195 196 197 198 199 200 201 202 ●203 204 205 206 207 208 209 210OFP COND PLOT PRTt4SG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARII LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDONRGY1,OGPFB1 ,,,,//s,N,CARDNO $ P3,JUMPPLOT $ PLTP’AR,GPSETS, ELSETS, CASECC,BGPDT, EQEXIN,SIP,PUBGV1 ,,GPECT, 0ESBl/PLOTX3/NSlL/LUSET/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLDTx3// $ P3$ FINIS$ ERRORI $ //-1/ASTA $ ERROR2 $ //-2/fiAsTA* $ ERROR3 $ //-3/AsTA $ ERROR4 $ //-4/ASTA $ ERROR5 $ //-5/kAsTA* $ FINIS$ DUMMY/MINUSl $ $ 2.16-9(05/30/86)\n-…..–..-.,——— …-” 2.16.2 4. 5. 6. 7. 9. 11. 12. 13. 16. 17. 18. 20. 22. 23. 26, 27. 28. 30. 31. 33. 34. 35, 36. 38. 39. 40, 43. 44.Ul\u003ePLALtMtNl KltilUtUKMAl\u003e Description ofImportant DMAPOperations forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. ●GotoDMAPNo.202andprintErrorMessage No.3ifthereisnoGridPointDefinition Table. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. PARAMRsetsCSIGN=(SIGN, 0.0),whereSIGN=+1.0foranalysis typerunandSIGN=-1.0for designtyperun. GotoDMAPNo,19iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.198andprintErrorMessage No.1iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. ●EMAassembles stiffness matrix [Kg]andGridPointSingularity Table. GotoDMAPNo.32ifnomassmatrix istobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.37ifnoweight andbalance information isrequested. GotoDMAPNo.204andprintErrorMessage No.4ifnomassmatrix exists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elemsnts exist. GotoDMAPNo.41ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(IJSET), formsmultipoiflt constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.206andprintErrorMessage No.5ifnoindependent degrees offreedom are defined. 2.16-10 (05/30/86)\nSTATICAEROTHERMOELASTIC 46.GotoOMAPNo.48ifnofree-bodyDESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS supports aresupplied. 47. 49. 51. 52. 53. 55. 56. 57.GotoDMAPNo,200andprintErrorMessage No.2. GotoDMAPNo.54ifgeneral elements arepresent. GotoOMAPNo.54ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. Equivalence [Kgg]to[Knn-lifnomultipoint constraints exist. GotoDMAPNo.59ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rml-l[Rnl. 58.MCE2partitions stiffness matrix [Kgg]= andperforms matrixreductioniIK :+N mnI‘mm1[Knn]=[Knn]+[G][Kmnl +[{nl[Gml +[G~l[\\ml[Gml. 60.Equivalence [Knnlto[Kfflifnosingle-point constraints exist. 61.GotoDMAPNo.63ifnosingle-point constraints exist. 62.SCEIpartitions outsingle-point constraints r 1 II‘ff‘Kfs[Knn]= +— . SfI‘ss L -! 64.Equivalence [Kff]to[Kaa]ifnoomitted coordinates exist. 65.GotoOMAPNo.67ifnoomitted coordinates exist. 66.SMP1partitions constrained stiffness matrix [Kff]= solvesfortransformation matrixIaaKaoi 1‘oalK1 ‘ 01=-[Koo]-l[Koa] “andperforms matrixreduction [Kaa]=[aal+[Kal[Gol . 68.RMBG2decomposes constrained stiffness matrix[Kaa]=[LLL][ULLI. 2.16-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS NA 69.SSG1generates non-aerodynamic staticloadvectors {Pg}. 71.GotoDMAPNo,79ifnoaerodynamic loadsexist. 72,ALGgenerates aerodynamic loaddata. 77.SSG1generates aerodynamic loadvector{P~}, 78.Add{P;A}and{P9A}toformtotalloadvector{Pgl. 80.Equivalence {Pg}to{PgNA }ifnoaerodynamic loadsexist. 81.Equivalence {Pg}to{Pk}ifnoconstraints areapplied. 82.GotoDMAPNo.84ifnoconstraints areapplied. 83,SSG2applies constraints tostaticloadvectors !1;n{Pg}=——, Pm{Pn}={Pnl+[G:l{Pm} , 11if {Pn}= —– , {Pf}={f}-[Kfl{Ys} , Ps IIPa {Pf}=—– ,and {PL}={Pa}+[G;]{PO}. P. 85.SSG3solvesfordisplacements ofindependent coordinates {uk}=[Kaa]-l{Pk} , solves fordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV)andresidual vector errorratioforindependent coordinates {APL}={Pk}-[Kaa]{ut} , {uj}{6PL} ‘k= {Pj}{uL} andcalculates residual vector(RUOV)andresidual vectorerrorratioforomitted coordinates {fiPo}={Po}-[Koo]{u~} \u003e 2.16-12 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 86. 87. 88. 90. 91. 92. 93. 94. 95. 97. 98. 99. 1000 106. 107. e{uj{6Po} ‘o=. pT}{uol 00 GotoDMAPNo.89ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectorforindependent coordinates (RULV). MATGPRprintstheresidual vectorforomitted coordinates (RUOV). SDR1recovers dependent displacements Ut}+{u:}, 7{Uo}=[Go] IIUa ——={Uf} ‘o {urn}=[Gm]{unl , II‘n={Ugl—— ‘m andrecovers single-point forcesofconstraint {q5}=-{p}+[K\u0026]{uf} +[K51{y}. SDR2calculates element forces(9EF1)andstresses (OESl)andprepares loadVeCtOrS (pGl) displacement vectors (!JUGV1) andsingle-point forcesofconstraint (OQGl)foroutputand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.96ifnodeformed staticsolution structure plotsarerequested. PLOTgenerates allrequested PRTMSGprintsplotter data, solution plotgenerated. TA1generates element tables DSMG1generates differentialstaticsolution deformed structure andcontour plots. engineering data,andcontour dataforeachdeformed static foruseindifferential stiffness matrixassembly. stiffness matrix[Kg]. GotoDMAPNo.101ifnoaerodynamic loadsexist. Equivalence {PflNA}to{Poltoremoveaerodynamic loadsfromtotalloadvectorbefore entering thedfferentia~ stiffness loop.Newaerodynamic loadswillbegenerated inthe loop. Beginning ofouter(stiffness adjustment) loopfordifferential stiffness iteration. Equivalence {Pg}to{Pgllifnoenforced displacements arespecified. 2.16-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 109,Equivalence [Kg]to[Kn]ifnomultipoint constraints exist. 110.GotoDMAPNo.112ifnomultipoint constraints 111.MCE2partitions differential stiffness matrixexist. L J andperforms matrixreduction [Kn]=[jn]+[G;l[K:nl +[Kn][Gm] +[G][Km][Gm]. 113.Equivalence [Knlto[Kflifnosingle-point constraints exist. 114.GotoDMAPNo.116ifnosingle-point constraints exist. 115.SCE1partitions outsingle-point constraints [dK:ft+s[Kn]=—+— . KdKd SfSs L A 117.Equivalence [Kf]to[Kalifnoomitted coordinates exist- 118.GotoDMAPNo.120ifnoomitted coordinates exist, 119.SMP2partitions constrained differential stiffness matrix [K$f]= andperforms matrixreductionidiKd a-+- KdKd oa00. [Ka]= 121.ADD[Kaa]and[Ka]to 122,ADD[Kfsland[Kslto 123.ADD[Kss]and[Ks]to[i:al+[K:a]TIGo] +[GolT[fal +[GOIT[(OIIGOI. form[KL]. form[Ks]. form[Ks]. 124,GotoDMAPNo.134ifnoenforced displacements arespecified, 125.MPYADmultiplies [Ks]and{Ys}toform{Pss}. 126.MYPADmultiplies [Ksland{’fsltoform{pfs}. 127.UMERGEcombines {Pfs}and{Ps}toform{Pn}. 2.16-14 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 128. 129, 130. 132. 133. 135. 136. 137. 138. 139. 140. 142. 143. 144. 149. 150. 153.Equivalence {Pn}to{P;}ifnomultipoint constraints exist. GotoDMAPNo.131ifnomultipoint constraints exist. UMERGEexpands {Pn}toform{P~}. ADD-{P;}and{Pg}toform{Pgg}. Equivalence {Pgg}to{Pgl}. ADD{Pgl}andnothing tocreate{Pgo}. Copy{uglto{ultoinitialize aerodynamic displacements. RBMG2decomposes thecombined differential stiffness matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. Beginning ofinner(loadcorrection) loopfordifferential stiffness iteration. GotoDMAPNo.151ifnoaerodynamic loadsexist. ALGgenerates aerodynamic loaddata. GotoDMAPNo.180ifALGfailstoconverge whilegenerating aerodynamic loaddata. SSG1generates aerodynamic loadvector{P:}. ADD{Pgl}to{P;}toformtotalloadvector{Pgz}. SSG2applies constraints tostaticloadvectors {P:}={;}+[G:]{p;}, {Pf}={;!}-[Ks]{Ys} , and{Pl={P~}+[G~]{P~} . 2.16-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 154.SSG3solvesfordisplacements ofindependent coordinates forcurrent loadvector {u!}=[KL]-l{P} , andcalculates residual vector (RBULV) andresidual vectorerror differential stiffness loadvector 155,GotoDMAPNo.157iftheresidual vectorfor tobeprinted. 156.MATGPRprintstheresidual vectorforcurrent 158.SDR1recovers dependent displacements forthe {ub}=[Go]{U!}+{Ub] ,0differential stiffness ratioforcurrent current differential stiffness solution isnot differential stiffness solution. current differential stiffness solution Hb ‘i—.={Uf} , b ‘o Hu: ={u:},—.{u}=[Gml{u:}, b s andrecovers single-point forcesofconstraint forthecurrent differential stiffness solution 159.GotoDMAPNo.161ifnoaerodynamic loadsexist. 160.Equivalence {u:}and{u:}. 162.ADD-{U}and{Ug}toform{U;}. 163.DSMG1generates differential stiffness matrix[6K~g]. 2.16-16 (05/30/86)\n164. 165, 166, 167. 168. 169. 170. 171. 172, 173. 175. 176. ●177. 178. 179. 182. 183. 184. 185, 187. 188. 189. 190. 191.STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OF MYPADformstheloadvectorforinnerloopiteration {Pgll} =[\u0026K;g]{U;}+{Pgo}. ADD{PA gIl}and‘Pg}‘0‘orm‘pg12}”AXIAL-FLOW COMPRESSORS DSCHKperforms differential stiffness convergence checks. GotoDMAPNo.180ifdifferential stiffness iteration iscomplete. GotoDMAPNo.174ifadditional differential stiffness matrixchanges arenecessary for further iteration. Breaktheprevious Equivalence {Pgll} Breaktheprevious GotoDMAPtie.140 TABPTtable ADD-[6Kg] Equivalenceprintsequivalence of{Pg}and{Pgl}. to{Pgl}. ‘quivalence Of‘Pgl}‘0‘pgIl}” foranadditional innerloopdifferential stiffness iteration. vectors {P},gIl{Pgl},and{F’g}. and[Kg]toform[Kgl]. {U;}to{Ug}and[Kgl]to[Kg]. Breaktheprevious equivalence of[Kg]to[Kgl]and{Ug}to{U;}. GotoDMAPNo.106foranadditional outerloopdifferential stiffness iteration. TABPTtableprints[Kgl], [Kg],and{Ugl. GotoDMAPNo.186ifthetotalstiffness matrix[KTOTAL] isnottobesavedonanexternal file. ADD[Kgg]and[Kg]toform[KT@TAL]. OUTPUTl outputs [KTOTAL] toanexternal file. OUTPUTl printsthenamesofthedatablocksontheexternal file. ALGgenerates finalaerodynamic results andgenerates GRIOandSTREAML2 bulkdatacardson thesystempunchfile,ifrequested, SDR2calculates element forces (OEFBl) andstresses (@ESBl) andprepares displacement vectors (OUBGVl) andsingle-point forcesofconstraint (OQBGl) foroutputandtranslation components ofthedisplacement vector(PUBGV1) forthedifferential stiffness solution. @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SDR1recovers dependent displacements afterdifferential stiffness loopforgridpoint forcebalance. GPFDRcalculates forrequested setsthegridpointforcebalance andelement strainenergy foroutput. 2.16-17 (05/30/86)\nDISPLACEMENT 192,OFPformats thetablesprepared byGPFDR printing.RIGIDFORMATS andplacesthemonthesystemoutputfilefor 193.GotoDMAPNo.196ifnodifferential stiffness solution deformed plotsarerequested. 194. 195. 197. 199. 201. 203. 205. 207.PLOTgenerates allrequested differential stiffness solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdifferential stiffness solution deformed plotgenerated, GotoDMAPNo.208andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 2.16-18 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 2,16.3 OutputforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thevalueofthedeterminant ofthesumoftheelastic stiffness andthedifferential stiffness isautomatically printed foreachdifferential stiffness loading condition. Iterative differential Iteration termination reasons havethefollowing meanings: 1.REASONOmeansthestiffness computations areterminated foroneoffivereasons. areautomatically printed inaninformation message. Thesereasons iteration procedure wasincomplete atthetimeofexit.Thisis causedbyeitheranunexpected interruption oftheiteration procedure (i.e.,system abort)ortermination isnotscheduled (fortheotherfourreasons) atthecompletion of thecurrent iteration. 2.REASON1meanstheiteration procedure converged totheEPS19valuesupplied bytheuser onaPARAMbulkdatacard.(Thedefault valueofEPSIflis1.OE-5.) 3.REASON2meanstheiteration procedure isdiverging fromtheEPSIOvaluesupplied bythe useronaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) 4.REASON3 supplied 5.REASON 4 hasbeen Parameter values atmeansinsufficient timeremaining toachieve convergence totheEPSIOvalue bytheuseronaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) meansthenumberofiterations supplied bytheuseronaPARAMbulkdatacard met.(Thedefault numberofiterations is10.) thetimeofexitareautomatically outputasfollows: 1.Parameter D@NE:-1isnormal; +Nistheestimate ofthenumberofiterations required toachieve convergence. 2.Parameter SHIFT: +1indicates areturntothetopoftheinnerloopwasscheduled; -1 indicates areturntotopoftheouterloopwasscheduled following thecurrent iteration. 3.Parameter DSEPSI: thevalueoftheratioofenergyerrortototalenergyatthetimeof exit. Thefollowing outputmayberequested: 1.Nonzero Components oftheapplied staticloadforthelinearsolution atselected grid points. 2.Displacements andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. 3,Forcesandstresses inselected elements, withandwithout differential stiffness. 2.16-19 (05/30/86)\n2.16.4DISPLACEMENT RIGIDFORMATS 4.Undeformed anddeformed plotsofthestructural model. 5.Contour plotsofstresss anddisplacements. CaseControl DeckforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing itemsrelate tosubcase definition anddataselection forStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors: 1.TheCaseControl Deckmustcontain twosubcases. 2.Astaticloading condition mustbedefined above TEMPERATURE (LOAD), orDEFORMselection, unlessall displacements onSPCcards. 3.AnSPCsetmustbeselected abovethesubcase level onGRIDcards.thesubcase levelwithaLOAD, loading isspecified bygridpoint unlessallconstraints arespecified 4.Outputrequests thatapplyonlytothelinearsolution mustappearinthefirstsubcase. 5.Outputrequests thatapplyonlytothesolution withdifferential stiffness mustbe placedinthesecondsubcase. 6.Outputrequests thatapplytobothsolutions, withandwithout d’ maybeplacedabovethesubcase level.fferential stffness, 2.16.5 Parameters forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing parameters areusedinStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors: 1. 2. 3. 4.APRESS -optional. Apositive integer valuecausesthegeneration ofaerodynamic pressure loads. Anegative integer valuesuppresses thegeneration oftheseloads. The default valueis-l. ASETOUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated by thegeneration ofthisoutput ATEMP-optional. ApositivetheGP4module. Anegative integer valueorOsuppresses datablock. Thedefault valueisO. integer valuecausesthegeneration ofaerodynamic temperature loads. Anegative integer valuesuppresses thegeneration oftheseloads. Thedefault valueis-1. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. 2.16-20 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 5. 6. 7. 8. 9. 100 11. 12. 13. 14. 15.BETAD-optional. Theinteger valueofthisparameter isthenumberofiterations allowed forcomputing theloadcorrection intheinner(load)loopbeforeshifting to theouter(stiffness) loop,whichadjusts thedifferential stiffness. Thedefault value is4iterations. CflUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. EPSI@-optional. Therealvalueofthisparameter isusedtotesttheconvergence of -5theiterated differential stiffness. Thedefault valueis10. FXCO!ilR, FYCOORandFZC@OR-optional. Therealvaluesoftheseparameters arethe fractions ofthedisplacements usedtoredefine thebladegeometry. Thedefault values are:FXC0!3R=1.0,FYC!3!3R=1.0andFZCOOR=1.0. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. IPRTCI, IPRTCLandIPRTCF-optional. IfIPRTiisapositive integer, thenintermediate printwillbegenerated intheALGmodulebasedontheprintoptionintheALGDBdata table. IfIPRTi=O(thedefault), nointermediate printwillbegenerated. IRES-optional. Apositive integer valueofthisparameter causestheprinting of theresidual vectors following theexecution oftheSSG3module. KT@UT-optional. Apositive integer valueofthisparameter indicates thattheuser wantstosavethetotalstiffness matrixonanexternal file(GINOfileINPT)viathe ftlTPUTl moduleintherigidformat. Thedefault valueis-1whennotneeded. LOCATION andINPTUNIT -required whenusingtheKTOUTparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bythei3UTPUTl module. Thedefault values forLi3CAT10N andINPTUNIT are-1andO,respectively. NT-optional. Theinteger valueofthisparameter limitsthecumulative numberof— iterations inbothloops. Thedefault valueis10iterations. PGE@M-optional. Theinteger valueofthisparameter specifies thepunching ofvarious bulkdatacards. PGE!3M=1causesthepunching ofGRIDbulkdatacards. PGE!3M=2 causesthepunching ofGRID,CTRIA2andPTRIA2bulkdatacards. PGEII!M=3causesthe 2.16-21 (05/30/86)\n16. 17. 18. 19. 20.DISPLACEMENT RIGIDFORMATS punching ofGRIDcardsandthemodified ALGDBtableonDTIcards. Thedefault valueof -Isuppresses thepunching ofanyofthesecards. SIGN-optional. Therealvalueofthisparameter controls thetypeofrunbeing performed. SIGN=1.0specifies astandard analysis typerun.SIGN=-1,0specifies a designtyperun.Thedefault valueis1.0. STREAML -optional, Theinteger valueofthisparameter specifies thepunching of various bulkdatacards. STREAML =1causesthepunching ofSTREAML1 bulkdatacards. STREAML =2causesthepunching ofSTREAML2 bulkdatacards, STREAML =3causesboth STREAML1 andSTREAML2 cardstobepunched. Thedefault valueof-1suppresses the punching ofanyofthesecards. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdata WTMASS-optional. Thetermsofthemass thisparameter whentheyaregenerated incardfordetails. matrixaremultiplied bytherealvalueof theEMAmodule. 2.16.6 RigidFormatErrorMessages fromStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing fatalerrors aredetected bytheDMAPstatements intheStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors. Thetextforeacherrormessage is givenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action, AERf3THERM13ELASTIC ERR@RNO.1-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. AER13THERM!?JELASTIC ERRORNO.2-FREEBODYSUPPORTS NOTALL@WED. Freebodiesarenotallowed inStaticAnalysis withDifferential Stiffness. TheSUP9RTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. 2.16-22 (05/30/86)"},"title":"User's Manual P16"},"/docs/users/users_manual_017/":{"data":{"":"STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS AEROTHERMOELASTIC ERRORNO.3-NOGRIDPOINTDATAISSPECIFIED. aNopointshavebeendefined withGRIDorSPOINTcards. AERfiTHERMOELASTIC ERR13RNO.4-MASSMATRIXREQUIRED FORWEIGHT Themassmatrixisnullbecause eithernoelements weredefinedANDBALANCE CALCULATIONS. withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined-on aMaterial card. AER@THERM@ELASTIC ERR@RN@.5-N@INDEPENDENT DEGREES 13FFREEDIIM HAVEBEENDEFINED. Either nodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,OMITorGRDSETcards,orgrounded on ScalarConnection cards. 2.16-23 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.16-24 (05/30/86)\n3.HEATRIGIDFORMATS 3.1STATICHEATTRANSFER ANALYSIS 3.1.1DMAPSequence forStaticHeatTransfer Analysis RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT LEVEL2.0NASTRAN DMAP1 COMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NOOECK NOREF NOOSCAR —.—— ——- 1BEGIN 2PRECHK 3FILE 4PARAH 5GP1 6PLTTRAN 7GP2 6PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 1~PRTNSG 18LABEL 19GP3 20TA1 21CONDHEAT01-STATIC HEATTRANSFER ANALYSIS -APR.1985$ ALL$ HQG-APPEND/HPGG=APPEND/HUGV=APPEND/HGM=SAVE/HKNN=SAVE $ //mpy/cARDNo/o/o $ GEOMl,GEOM2,/GPL,HEQEXIN,GPDT, CSTM,BGPDT,HSIL/S,N,HLUSET/ NOGPOT/MINUSl=-l $ BGPDT,HSIL/BGPDP,HSIP/HLUSET/S,N,HLUSEP $ GEoM2,HEQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ PCDB,HEQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,HNS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //Mpy/pFILE/o/o $ HP1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,HEQEX lN,HSIL,,ECT,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1// $ HP1$ GEoM3,HEQEx1N,GEot42/HsLT,GPTT/NoGRAv $ ECT,EPT,BGPDT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP/l/NOGENL/GENEL $ ERROR4,NOSIMP $ 3.1-1(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 ho 41 42 43 44 45PURGE COND PARAH EMG PURGE COND EMA LABEL PARAM LABEL GPb COND PARAM PURGE PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABELHKGG,GPST/NOSIMP $ HLBL1,NOSIMP $ //AOD/HNOKGG/l/O $ HEST,CSTM,MPT,DlT,GEOM2,/HKELM,HKD lCT,,,,,/S,N,HNOKGG $ HKGG,GPST/HNOKGG $ HLBL),HNOKGG $ HGPECT,HKDICT,HKELM/HKGG,GPST $ HLBL1$ //tiPY/NSKIP/O/O $ HLBLII $ CASECC,GEOM4,HEQEXIN,GPDT, BGPOT,CSTM,GPST/RG,YS,HUSET,HASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMtT/S,N,REACT/ S,N,NSKIP/S,N,HREPEAT/S,N,NOSET/S,N,NOL/S ,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //*AND#6/NosR/siNGLE/REACT $ HKRR,HKLR,HQR,HDt4/REACT/GM/MPCF l/HGO,HKOO,HLOO,HPO,HUOOV, HRUOV/OMIT/HPS,HKFS,HKSS/SINGLE/HQG/NOSR $ //EQ/GPSPFLG/AUTOSPC/O $ HLBL4,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ HLBL4$ HKGG,HKNN/MPCFl $ HLBL2,MPCF1 $ HUSET,RG/GM $ HUSET,GM,HKGG,,,/HKNN,,, $ HLBL2$ 3.1-2(05/30/86)\nSTATICHEATTRANSFERANALYSIS eRIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46 47 b8 49 50 51 52 53 54 55 56EQUIV COND SCE1 LABEL EQUIV COND SHP1 LABEL EQUIV COND RBMG1 e57LABEL 58RBHG2 59COND 60RBMG3 61LABEL 62SSG1 63EQUIV 64COND 65SSG2 66LABEL 67SSG3 68COND 6gMATGPR 70MATGPRHt(NN,HKFF/SINGLE $ HLBL3,SINGLE $ HUSET,HKNN,,,/HKFF,HKFS,HKSS, ,,$ HLBL3$ HKFF,HKAA/OMIT $ HLSL5,0MIT $ HUSET,HKFF,,,/HGO,HKAA,HKOO,HLOO, ,,,,$ HLBL5$ HKAA,HKLL/REACT $ HLBL6,REACT $ HUSET,HKAA,/HKLL,HKLR,HKRR, ,,$ HLBL6$ HKLL/HLLL $ HLBL7,REACT $ HLLL,HKLR,HKRR/HDM $ HLBL7$ HSLT,BGPDT,CSTM,HSI L,HEST,MPT, GPTT,EDT,,CASECC,DIT,/ HPG,,,, SCR/HLUSET/NSKIP $ HPG,HPL/NOSET $ HLBL1O,NOSET $ HUSET,GM,YS,HKFS,HGO,HDM,HPG/HQR,HPO,HPS,HPL $ HLBL1O $ HLLL,HKLL,HPL,HLOO,HKOO,HPO/HULV,HUOOV,HRULV,HRUOV/OMlT/ V,Y,lRES=-l/NSKIP/S,N,EPSl $ HLBL9,1RES $ GPL,HUSET,HSIL,HRULV//L $ GPL,HUSET,HSIL,HRUOV//O $ 3.1-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71LABEL 72SDR1 73COND 7kREPT 75JUMP J6PARAM 77CONO 78LABEL 79SDR2 80OFP 81COND 82PLOT 83PRTMSG 84LABEL 85JUMP 86LABEL 87PRTPARM 88LABEL 8gPRTPARM 90LABEL 91PRTPARtl 92LABEL 93PRTPARM 94LABELHLBL9$ HUSET,HPG,HULV,HUOOV,YS,HGO,GM,HPS,HKFS,HKSS,HQR/HUGV,HPGG, HQG/NSKIP/HSTATICS $ HLBL8,HREPEAT $ HLBL11,1OO $ ERROR1 $ //NoT/HTEsT/HREpEAT $ ERROR5,HTEST $ HLBL8$ CASECC,CSTM,MPT,DIT,HEQEXIN,HS IL,GPTT,EDT,BGPDP, ,HQG,HUGV, HEST,,HPGG/HOPGl,HOQGl,HOUGVl ,,HOEFl,HPUGVl/STATICS $ HOUGVl,HOPGl,HOQGl,HOEFl,,//S,N,CARDNO $ HP2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,HEQEXIN,HSIP,HPUGV1, ,HGPECT, /PL0Tx2/HNStL/HLusEp/JLJMPPLOT/p:TF LG/ S,N,PFILE $ PLoTx2// $ HP2$ FINIS$ ERROR1 $ //-1/HSTA $ ERROR3 s //-3/*HsTAh $ ERROR4 $ /1-4/*HsTAfc $ ERROR5 $ //-5/*HsTAfi $ FINIS$ 3.1-4(05/30/86)\nSTATICHEATTRANSFERANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95PURGE DUMMY/MINUSl $ 96END s 3.1-5(05/30/86)\nHEATRIGIDFORMATS 3.1.2Description ofImportant DMAPOperations forStaticHeatTransfer Analysis 5.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal degreeoffreedom indices. ●6.PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. 7.GP2generates Element Connection Tablewithinternal indices. 10.GoToDMAPNo.18iftherearenostructure plotrequests. 11.PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. 12.PRTMSGprintserrormessages associated withthestructure plotter. 15.GotoDMAPNo.18ifnoboundary andstructure (heatconduction) element plotsare requested. 16.PLOTgenerates allrequested boundary andheatconduction element plots. 17.PRTMSGprintsplotter dataandengineering dataforeachplotgenerated. 19.GP3generates applied Static(Thermal) LoadsTable(HSLT)andGridPointTemperature Table. 20.TA1generates element tablesforuseinmatrixassembly, loadgeneration, anddatarecovery. 21.GotoDMAPNo.90andprintErrorMessage No.4ifnoelements havebeendefined. 23.GotoDMAPNo.29iftherearenoheatconduction elements. 25.EMGgenerates element heatconduction matrixtablesanddictionaries forlaterassembly by theEMAmodule. 27.GotoDMAPNo.29ifnoheatconduction matrixistobeassembled. 28.EMAassembles heatconduction matrix[K~g]andGridPointSingularity Table, 31.Beginning ofloopforadditional constraint sets. 32.GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ugl=Oandformsenforced displacement vector {Ys}. 33.GotoDMAPNo.88andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. 37.GotoDMAPNo.40ifnopotential gridpointsingularities exist. 38.GPSPgenerates atableofpotential gridpointsingularities. 39.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 41.Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. 42.GotoDMAPNo.45ifnomultipoint constraints exist. 43.MCE1partitions multipoint constraint equations [Rg]=[Rm\\Rn] andsolvesfor . multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 3.1-6(05/30/86)\nSTATICHEATTRANSFER ANALYSIS 44.MCE2partitions heatconduction matrix 46. 47. 48. 50. 51. 52. 54. 55. 56. 58. 59. 60.[1ilK [Kgg]=‘n+M KmnIKmm andperforms matrixreouction [Knnl=[~nnl+[Gj[Kmnl +[{nl[Gml +[G:l[\\ml[Gml. Equivalence [Knnlto[Kff]ifnosin91e-Point constraints ‘Xisto GotoDMAPNo.49ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K— . SfSs Equivalence [Kff] GOtoDMAPNo.53to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist, SMP1partitions constrained heatconduction matrix [1ii\\K [Kff]=:K , oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal=[aal+[Kal[Gol . Equivalence [Kaa]to GotoDMAPNo,57if RBMG1partitions out[KLL]ifnofree-body nofree-body supports free-body supportssupports exist. exist. RBMGZdecomposes constrained heatconduction matrix[Kkgl=[LLLIIULLI. GotoDMAPNo.61ifnofree-body supports exist. RBMG3formsrigidbodytransformation matrix [D]=-[KJ1[K%r] \u003e 3.1-7(05/30/86)\nHEATRIGID calculates rigidbodycheckmatrix [X]=[Krrl+ andcalculates rigidbodyerrorratio e= -Tt4Tx KrrFORMATS [K~r][D] . 62.SSG1generates staticthermal loadvectors {Pgl. 63.Equivalence {Pg}to{Pg} ifnoconstraints areapplied. 64.GotoDMAPNo.66ifnoconstraints areapplied. 65.SSG2applies constraints tostaticthermal loadvectors Hin{Pg}=—– ,{Pn}={n}+[G;]{Pm}, Pm Hi-f{Pn}=—– ,{Pf}={Pf}-[Kf]{Ys} , P5 11;a{Pf}=—– ,{Pa}={a}+[G:]{POI , P. Pi {Pa}= II–Fr– andcalculates determinate thermal powers {qr}=-{Prl- 67.SSG3solves fordisplacements ofindependent coordinates {uL}=[Kki]-l{PL} , solvesfordisplacements ofomitted coordinates {u}=[KOO]-l{PO} , calculates residual vector (HRULV) andresidual coordinates {6PE}={Pi}-[KkL]{uLJ[DT]{Pt}. vectorerrorratioforindependent 3.1-8(05/30/86)\nSTATICHEATTRANSFER ANALYSIS {u:}{wgl ‘i= {P;}{UL} andcalculates residual vector(HRUOV) andresidual vectorerrorratioforomitted coordinates {6PO}={Po}-[Koo]{u:} , {U:}{6PO} ‘o= {P:l{u:} 68.GotoDMAPNo.71ifresidual vectors 69.MATGPRprintstheresidual vectorfor 70.MATGPRprintstheresidual vectorfor 72.SDR1recovers dependent temperaturesarenottobeprinted. independent coordinates (HRULV). omitted coordinates (HRUOV). Huk={Ua}, —— ‘r II‘a——={uf}, ‘o {urn}=[Gml{un} ,{uo}=[Go]{ual +{u~~ , H‘f——={un} , Y5 HUn ={Ug} —— ‘m andrecovers single-point powersofsustained thermal constraint {qs}=-{PSI+[K~J{uf} +[KJtyJ. 73.GOtoDMAPNo.78 74.GotoDMAPNo.31 75.GotoDMAPNo.86 100.ifallconstraint setshavebeenprocessed. ifadditional setsofconstraints needtobeprocessed. andprintErrorMessage No.1asthenumberofconstraint setsexceeds 77.GotoDMAPNo.92andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. 79.SDR2calculates conduction andboundary element heatflowsandradients (H@EFl) and 7 prepares thermal loadvectors (H!3PG1), temperature vectors (H@JGVl andsingle-point powers ofconstraint (HOQGl) foroutputandcomponents ofthetemperature vector(HPUGV1). 3.1-9(05/30/86)\nHEATRIGIDFORMATS 80. 81. 82. 83. 85. 87. 89. 91. 93.13FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.84ifnotemperature profile plotsarerequested. PLOTgenerates allrequested temperature profile andthermal contour plots, PRTMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. GotoDMAPNo.94andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 3.1-10(05/30/86)\nSTATICHEATTRANSFER 3.1.3OutputforStaticHeatTransfer AnalysisANALYSIS Thefollowing outputmayberequested forStaticHeatTransfer Analysis: 3.1.41.Temperatures (THERMAL) andnonzero components ofstatic loads(W-OAD) andconstrained heatflow(SPCFORCE) atselected gridpointsorscalarpoints. 2,ThepunchoptionofaTHERMAL request willproduce TEMPbulkdatacards. 3.Fluxdensity (ELF@RCE) inselected elements. 4.Plotsofthestructural modelandtemperature profiles. 5.Contour plotsofthethermal field, CaseControl DeckforStaticHeatTransfer Analysis Thefollowing itemsrelatetosubcase definition anddataselection forStaticHeatTransfer Analysis: 1. 2. 3. 4. 5.Aseparate subcase mustbedefined foreachuniquecombination of loads. Astaticloading condition mustbedefined for(notnecessarily withaLOADselection, unlessallloading isspecified withgrid SPCcards.constraints andstatic within) eachsubcase pointtemperatures on AnSPCsetmustbeselected for(notnecessarily within) eachsubcase, unlessall constraints arespecified onGRI.DcardsorScalarConnection cards. Loading conditions associated withthesamesetsofconstraints shouldbeincontiguous subcases, inordertoavoidunnecessary looping. REPCASE maybeusedtorepeatsubcases inordertoallowmultiple setsofthesame outputitem. 3.1.5Parameters forStaticHeatTransfer Analysis The 1. 2. 3.following parameters areusedinStaticHeatTransfer Analysis: ASET13UT -optional. Apositive integer valueofthisparameter causestheHASET’output datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following eachexecution oftheSSG3module. 3.1-11(05/30/86)\nHEATRIGIDFORMATS 3.1.6RigidFormatErrorMessages fromStaticHeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticHeatTransfer Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. STATICHEATTRANSFER ANALYSIS ERRORMESSAGE N@.1-ATTEMPT T@EXECUTE MORETHAN100Lk30PS. Anattempt hasbeenmadetousemorethan100different setsofboundary conditions. Thisnumber maybeincreased byALTERing theREPTinstruction following SDR1. STATICHEATTRANSFER ANALYSIS ERRORMESSAGE NO.3-NoINDEPENDENT DEGREES OFFREED13M HAVEBEEN DEFINED, Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined dearees offreedom havebeenconstrained bvSPC.MPC.SUPORT. OMITorGRDSETcards.or grounded o; STATICHEAT Noelements STATICHEATScalarConnection TRANSFER ANALYSIS havebeendefined TRANSFER ANALYSIS….. cards, ERR@RMESSAGE NO.4-N@ELEMENTS HAVEBEENDEFINED. witheitherConnection cardsorGENELcards. ERRORMESSAGE N@.5-ALO@PING PROBLEM RUNONAN@N-L~@PING SUBSET. Aproblem requiring boundary condition changes wasrunonsubset1or3.Theproblem shouldbe restarted on-subset O. 3.1-12(05/30/86)\nHEATRIGIDFORMATS 3.2NONLINEAR STATICHEATTRANSFER ANALYSIS 3.2.1DMAPSequence forNonlinear StaticHeatTransfer Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR ——— .——- 1BEGIN 2PRECHK 3PARAM 4GP1 5PLTTRAN 6GP2 7PARA!4L 8PURGE 9COND 10PLTHBDY 11EQUIV 12PLTSET 13PRTMSG lbPARAM 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3HEAT03-NONLINEAR STATIC HEATTRANSFER ANALYSIS - ALL$ //MpY/cARoNo/o/o $APR.1986$ GEOMl,GEOM2,/GPL,HEQEXIN,GPDT,CSTM, BGPOT,HSIL/S,N,HLUSET/ NOGPDT/MINUSl=-l $ BGPOT,HSIL/BGPOP,HSIP/HLUSET/S,N,HLUSEP $ GEoH2,HEQExlN/EcT $ PCOB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ GEOM2,ECT,EPT,HS IL,HEQEXI N,BGPOT/PECT,PSIL,PEQEXIN,PBGPDT/ NHBOY/V,Y,MESH=NO $ ECT,PECT/NHBDY/HS lL,PSIL/NHBDY/HEQEXIN,PEQEXIN/NHBDY/ BGPDT,PBGPOT/NHBDY $ PCOB,PEQEXlN,PECT/PLTSETX,HPLTPAR,HGPSETS,HELSETS/S,N,HNSl L/ S,N,JUMPPLOT $ PLTSETX// $ //$,Mpy*/PLTFLG/l/l $ //MPY/PF ILE/O/O $ HP1,JUMPPLOT $ HPLTPAR,HGPSETS,HELSETS,CASECC,PBGPOT,PEQEXI N,PSIL,,,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ HPI$ GEoM3,HEQEx1N,GEoM2/HsLT,GPTT/NoGRAv $ 3.2-1(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCDMPILER -SOURCE LISTING 21SETVA1 22LABEL 23CASE 24PARAML 25PARAM 26TA1 27COND 28PARAM 29EMG 30PURGE 31COND 32EMA 33LABEL 34RAG 35EQUIV 36PURGE 37GP4 38CONO 39PURGE 40PARAM 41COND 42GPSP 43OFP 44LABEL//5,N,REPEATH/-I $ LOOPTOP $ CASECC,/CASEXX/TRANRESP/S,N,REPEATH/S,N,NOLOOP $ cAsExx//*oTlff/l/8//s,N,TEMPMATE $ //5T5R/v,N,TEMpMATE/-lo $ ECT,EPT,BGPOT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP/l/NOGENL/HXYZ $ ERROR2,NOSIMP $ //AOO/HNOKGG/l/O $ HEST,CSTM,MPT,DlT,GEOM2,/HKELM,HKDl CT,,,,,/S,N,HNoKGG $ HKGG,GPST/HNOKGG $ JMPKGGX,HNOKGG $ HGPECT,HKDICT,HKELM/HKGGX,GPST $ JMPKGGX $ HEST,MATPOOL,GPTT,HKGGX/HRGG,HQGE,HKGG/C,Y,TABS/C,Y, SIGMA=O.O/ S,N,HNLR/HLUSET $ HKGGX,HKGG/HNLR $ HQGE,HRGG/HNLR $ CASEXX,GEOM4,HEQEX IN,GPDT,BGPDT, CSTM,GPST/RG,,HUSET,HASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEATH/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y, ASETOUT/ S,Y,AUTOSPC $ ERROR1,NOL $ GM/MPcFl/HPS,HKFS,HKSS,HKSF,HRSN,HQG/S INGLE$ //EQ/GpSpFLG/AuToSpc/o $ HLBL5,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N ,NOGPST $ OGPST,,,,,//S,N,CARDNO $ HLBL5$ 3.2-2(05/30/86)\nNONLINEAR STATICHEATTRANSFER ANALYSIS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45 46 47 48 49 50 51 52 53 5.4 55EQUIV COND MCE1 MCE2 LABEL EQUIV COND VEC PARTN PARTN LABEL m56DECOMP 57COND 58SSGI 59EQUIV 60CONO 61SSG2 62LABEL 63SSGHT 64COND 65MATGPR 66LABEL 67SDR2 68OFPHKGG,HKNN/MPCFl/HRGG,HRNN/MPCF 1$ HLBLI,MPCFI $ HUSET,RG/GM $ HUSET,GM,HKGG,HRGG,,/HKNN,HRNN, ,$ HLBLI$ HKNN,HKFF/SINGLE/HRNN,HRFN/Sl NGLE$ HLBL2,SINGLE $ HUSET/VFS/N/*Ff~/*Sj’~ $ HKNN,VFS,/HKFF,HKSF,HKFS,HKSS $ HRNN,,VFS/HRFN,HRSN,,/l $ HLBL2$ HKFF/HLLL,HLILL/O/O/MDIAG/DET/PWR/S,N, KSING$ ERROR3,KSING $ HSLT,BGPDT,CSTM,HSI L,HEST,MPT,GPTT, EDT,,CASEXX,DIT,/ HPG,,,, SCR/HLUSET/NSKIP $ HPG,HPF/NOSET $ HLBL3,NOSET $ HUSET,GM,,HKFS,,,HPG/,,HPS ,HPF$ HLBL3$ HUSET,HSI L,GPTT,GM,HEST,MPT,D IT,HPF,HPS,HKFF,HKFS,HKSF, HKSS,HRFN,HRSN,HLLL,HULL/HUGV,HQG,HRULV/HNNLK=l/HNLR/ C,Y,EPSHT=.OOl/C,Y,TABS=O.O/C,Y,MAX lT=4/V,Y,lRES/ MPCF1/SINGLE $ HLBL4,1RES $ GPL,HUSET,HSIL,HRULV//F $ HLBL4$ CASEXX,CSTM,MPT,DIT,HEQEX IN,HSIL,GPTT,EDT,BGPDP, ,HQG,HUGV,HEST, , HPG/HOPGl,HOQGl,HOUGVl,HOES l,HOEFl,HPUGV1/STATICS $ HOUGVl,HOPGl,HOQGl,,,//S,N, CARDNO $ 3.2-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69SDRHT 70OFP 71COND 72PLTSET 73PLOT 74PRTMSG 75LABEL 76COND 77REPT 78JUMP 79LABEL 80PRTPARM 81LABEL 82PRTPARM 83LABEL 84PRTPARM 85LABEL 86PURGE 87ENDHSIL,HUSET,HUGV,HOEF1,HSLT,HEST, DIT,HQGE,,/HOEFIX/C,Y,TABS/ HNLR$ HOEFIX, ,,,,//5,N,cARDN0 $ HP2,JUMPPLOT $ PCDB,HEQEXIN,ECT/PSMES,DPLTPAR,DGPSETS ,DELSETS/S,N,DSIL/DJ $ DPLTPAR,DGPSETS,DELSETS,CASEXX, BGPDT,HEQEXIN,HSI P,HPUGV1 ,, HGPECT,HOESl/PLOTX2/DSlL/HLUSEP/JUNPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ HP2$ FINIS,REPEATH $ LOOPTOP,1OO $ FINIS$ ERROR1 $ //-1/HNLi $ ERROR2 $ //-2/HNLl $ ERROR3 $ //-3/~~HNLI* S FINIS$ DUMMY/MINUSl $ s 3.2-4(05/30/86)\nNONLINEAR STATICHEATTRANSFER ANALYSIS 3.2.2 e4. 5. 6. 9. 10. 11. 12. 13. 16. 17. 18. 20. 23. @24. 25. 26. 27. 29. 31. 32. 34. 35. 37. 38,Description ofImportant DMAPOperations forNonlinear StaticHeatTransfer Analysis GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal degree offreedom indices. PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. GP2generates theElement Connection Tablewithinternal indices. GotoDMAPNo.19iftherearenostructure plotrequests. PLTHBDY modifies thedataintheECT,HSIL,HEQEXIN andBGPDTtablestopermittheplotting ofHBOY(thermal boundary) elements. Equivalence PECTtoECT,PSILtoHSIL,PEQEXIN toHEQEXIN andPBGPDTtoBGPDTifthereare noHBDYelements, PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoboundary andstructure (heatconduction) element plotsare requested. PLOTgenerates allrequested boundary andheatconduction element plots. PRTMSGprintsplotter andengineering dataforeachgenerated plot. GP3generates applied Static(HeatFlux)LoadsTable(HSLT)andtheGridPointTemperature Table. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesittoCASEXX. PARAMLextracts the8thwordinthedatarecordofCASEXX(representing thethermal material setID)andstoresitsvalueintheparameter TEMPMATE. PARAMstoresthevalueoftheparameter TEMPMATE inthe10thwordofCOMMON/SYSTEM/. TA1generates element tables foruseinmatrix assembly, loadgeneration, andheatfluxdata recovery. GotoDMAPNo.81andprintErrorMessage No.2ifnoelements havebeendefined. EMGgenerates element heatconduction matrixtablesanddictionaries forlaterassembly by theEMAmodule. GotoDMAPNo.33ifnoheatconduction matrixistobeassembled. EMAassembles heatconduction matrix[Kg]andGridPointSingularity Table. RMGgenerates theradiation matrix, [Rgg],andaddstheestimated linearcomponent of radiation totheheatconduction matrix. Theelement radiation fluxmatrix, [Qge],is alsogenerated foruseinrecovery datafortheHBDYelements. Equivalence [Kg]to[Kgg]ifthereisnolinear component ofradiation. GP4generates flagsdefining members ofvarious displacement sets(HUSET) andforms multipoint constraint equations [Rg]{ug}={01. GotoDMAPNo.79andprintErrorMessage No.1ifnoindependent degrees offreedom are defined. 3.2-5(05/30/86)\n41. 42. 43. 45. 46. 47. 48. 50. 51. 52. 53. 54. 56. 57. 58.HEATRIGIDFORMATS GotoDMAPNo.44ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. Thesesingularities maybe extraneous inaradiation problem, sincesomepoints maytransfer heatthrough radiation only.@ @FPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. Equivalence [Kgg]to[Knn]and[Rgg]to[Rnn]ifnomultipoint constraints exist, GotoDMAPNo.49ifnomultipoint constraints exist. MCE1partitions themultipoint constraint eauation matrix [Rg]=[RmRn] andsolves forthemul MCE2partitipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. onsheatconduction andradiation matrices [1iIK [Kgg]=n+and [Rgg]= KmnIKmm andperforms matrix reductions [Knn]=[inn]+[G][Kmnj +[Km][Gm] +“[G][Kmm][Gm] and [Rnn]=[iinn]+[G~][Rmn] +[Rn][Gm] +[G][Rmm][Gm]. o Equivalence [Knn]to[Kff]and[Rnn]to[Rfn]ifnosingle-point constraints exist. GotoOMAPNo.55ifnosingle-point constraints exist. VECgenerates apartitioning vector{un}+ PARTNpartitions theheatconduction matrix [‘ff’‘fs[Knn]=—+— ‘fs’Kss, PARTNpartitions theradiation matrix [1‘fn[Rnn]=;-. snf}+{U5}. . DECOMPdecomosestheotentially unsymmetric matrix[Kff]intoupperandlowertriangular factors [Ukk?and[Lli!. GotoDMAPNo.83andprintErrorMessage No,3ifthematrixissingular. SSG1generates theinputheatfluxvector{Pg}, 3.2-6(05/30/86"},"title":"User's Manual P17"},"/docs/users/users_manual_018/":{"data":{"":"NONLINEAR STATICHEATTRANSFER ANALYSIS 59. e60. 61. 63. 64. 65. 67. ●68. 69. 70. 71. 72. 73, 74. 76. 77. 78. 80. 82. 74.Equivalence {Pg}to{Pf}ifnoconstraints areapplied. GotoDMAPNo.62ifnoconstraints ofanykindexist. SSG2reduces theheatfluxvector HPn {Pgl=—-, Pm {Pn}={~n}+[G:]{pm} 11‘fand {Pn}=—–. P5 SSGHTsolvesthenonlinear heattransfer problem byaniteration technique whichislimited byparameters EPSHTandMAXIT. Theoutputdatablocksare:{ug},thesolution temperature vector, {qg},theheatfluxduetosingle-point constraints, and{6Pt},the matrixofresidual heatfluxesateachiteration step. GotoDMAPNo.66ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectors forindependent coordinates (HRULV). SDR2calculates theheatfluxduetoconduction andconvection intheelements (HOEFl) and prepares thetemperature vector(H!3UGV1), theloadvector (HOPGl), andthepowerof constraint (HOQGl) foroutputandcomponents ofthetemperature vector(HPUGV1). 13FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SDRHTorocesses theHBDYelements toDroduce heatfluxintotheelements (HOEFIX) dueto convection, radiation, andapplied flux. 13FPformats theelement fluxtableprepared forprinting, GotoDMAPNo.75ifnotemperature profilebySDRHTandplacesitonthesystemoutputfile plotsarerequested. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PLOTgenerates allrequested temperature profile andthermal contour plots. PRIMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. Goto Goto Goto Print Print PrintOMAPNo.85andmakenormalexitifallconstraint setshavebeenprocessed. OMAPNo.22ifadditional constraint setsneedtobeprocessed. DMAPNo.85andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No,3andterminate execution. 3.2-7(05/30/86)\nHEATRIGIDFORMATS 3.2.3OutputforNonlinear StaticHeatTransfer Analysis Thefollowing outputmayberequested forthelastiteration inNonlinear StaticHeat Transfer Analysis: 1.Temperature (THERMAL) andnonzero components ofstaticloads(!JL!JAD) andconstrained heatflow(SPCFORCE) atselected gridpointsorscalarpoints. 2.ThepunchoptionofaTHERMAL request willproduce 3.Fluxdensity (ELFORCE) inselected elements. In density summary isproduced thatincludes applied flux.TEMPbulkdatacards. thecaseofCHBDYelements, aflux flux,radiation flux,andconvective 4,Plotsofthestructural modelandtemperature profiles. 5.Contour plotsofthethermal field, 3.2.4CaseControl DeckforNonlinear StaticHeatTransfer Analysis Thefollowing itemsrelatetosubcase definition anddataselection for HeatTransfer Analysis: 1.Aseparate subcase mustbedefined foreachuniquecombination of loading conditions. 2.Anestimated temperature distribution vectormustbedefined onTEMPNonlinear Static constraints and cardsandselected withaTEMP(MATERIAL) request foreachsubcase. Temperatures forconstrained components●aretakenfromtheseTEMPcardsandentries onSPCcardsareignored. 3.2.5Parameters forNonlinear StaticHeatTransfer Analysis Thefollowing parameters areusedinNonlinear StaticHeatTransfer Analysis: 1. 2. 3. 4.ASETOUT -optional. Apositive integer valueofthisparameter causestheHASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AuTfMPC -reserved forfutureoptional use.Thedefault valueis-1.—. EPSHT-optional. Therealvalueofthisparameter isusedtotesttheconvergence—- thenonlinear heattransfer solution (seeSection 8.4.1oftheTheoretical Manual). default valueis0.001. IRES-optional. Apositive integer valueofthisparameter causestheprinting of residual vectors following theexecution oftheSSGHTmoduleforeachiteration. 3,2-8(05/30/86)of The the\n5. 6. 7.NONLINEAR STATICHEATTRANSFER ANALYSIS MAXIT-optional. Theintege- valueofthisparameter limitsthemaximum numberof iterations. Thedefault valueis4iterations. SIGMA-optional. Thedefault value TABS-optional.Thereal is0.0. Thereal temperature. Thedefault vavalueofthisparameter istheStefan-Boltzmann constant. valueofthisparameter istheabsolute reference lueis0.0. 3.2.6RigidFormatErrorMessages fromNonlinear StaticHeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNonlinear StaticHeat Transfer Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. NfiNLINEAR STATICHEATTRANSFER ANALYSIS ERRORMESSAGE NO.,1-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP!31NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUPORT, OMITorGRDSET cards, or grounded onScalarConnection cards. Nf3NLINEAR STATICHEATTRANSFER ANALYSIS ERR@R ●Nostructural elements havebeendefined with NONLINEAR STATICHEATTRANSFER ANALYSIS ERROR Theheatconduction matrixissingular duetoMESSAGE NO.2-NOSIMPLESTRUCTURAL ELEMENTS. Connection Cards. MESSAGE N@.3-STIFFNESS MATRIXSINGULAR. unspecified gridpointtemperatures. I 3.2-9(05/30/86)\nHEATRIGIDFORMATS 3.2-10(05/30/86) .\nHEATRIGIDFORMATS 3.3TRANSIENT HEATTRANSFER ANALYSIS e3.3.1DMAPSequence forTransient HeatTransfer Analysis RIGIDFORMAT OMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM kGP1 5PLT7RAN 6PURGE 7COND 8GP2 9PARAML 10PURGE 11COND 12PLTSET 13PRTMSG 14PARAM 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3 21TA1HEAT09-TRANSIENT HEATTRANSFER ANALYSIS -APR.1986$ ALL$ //Mpy/CARDNI)/0/o $ GEoMl,GEoM2,/GPL,HEQEXlN,GPDT, CSTM,BGPDT,HSIL/S,N,HLUSET/ S,N,NOGPDT/MINUSIE-l $ BGPDT,HSIL/BGPDP,HSIP/HLUSET/S ,N,HLUSEP $ HUSET,GM,HGO,HKAA,HBAA,HPSO,HKFS,HQP,HEsT/NOGPDT $ HLBL5,NOGPDT $ GEoM2,HEQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ PCDB,HEQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,HNSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MpY/pLTFLG/l/l $ //*MPY$,/PFILE/O/o $ HP1,JUMPPLOT$ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,HEQEXIN,HS lL,,ECT,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1// $ HP1$ GEoM3,HEQExlN,GEoM2/HsLT,GPTT/l $ ECT,EPT,BGPDT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP=-l/l/123/l 23$ 3.3-1(05/30/86)I\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45PURGE COND PARAM PARAM EMG PURGE COND EMA LABEL CONO EMA LABEL PURGE LABEL RMG EQUIV PURGE GP4 PURGE COND PARAll COND GPSP OFPHKGG,GPST,HBGG/NOSIMP $ HLBL1,NOSIMP $ //ADD/NoKGGx/l/o $ //*AODfi/NOBGG/l/O $ HE5T,CSTM,MPT,DlT,GEOM2,/HKELM,HKD lCT,,,HBELM,HBDICT,/S,N, NOKGGX//S,N,NOBGG $ HKGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ HGPECT,HKOICT,HKEL/l/HKGGX;GPST $ JMPKGGX $ JMPHBGG,NOBGG $ HGPECT,HBOICT,HBELM/HBGG, $ JMPHBGG $ HBNN,HBFF,HBAA,HBGG/NOBGG $ HLBL1$ HEST,MATPOOL,GPTT,HKGGX/HRGG,HQGE ,HKGG/C,Y,TABS/C,Y,SIGMA=O.O/ S,N,HNLR/HLUSET $ HKGGX,HKGG/HNLR $ HRGG,HRNN,HRFF,HRAA,HRDD/HNLR $ CASECC,GEOM4,HEQEXlN,GPDT,BGPDT,CSTM,GPST/RG, ,HUSET,ASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/ S,N,REACT/O/123/S,N,NOSET/S,N,NOL/S, N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMD/MPCFl/HGO,HGOO/OMIT/HKFS,HPSO,HQP/S INGLE$ HLBL2,NOSIMP $ //EQ/Gp5PFLG/AuT05Pc/o $ HLBL2,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ 3.3-2(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS RIGIDFORMAT DMAPLISTING ABRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46 k~ 48 49 50 51 52 53 5b 55 56 57 58 59 60 61 62 63 64 65 66 67 68 6g 70LABEL EQUIV COND MCE1 HCE2 LABEL EQUIV CONO SCE1 LABEL EQUIV EQUIV EQUIV COND SMP1 COND S!IP2 LABEL COND SMP2 LABEL DPD COND EQUIV PURGEHLBL2$ HKGG,HKNN/MPCFl/HRGG,HRNN/MPCF l/HBGG,HBNN/MPCFl $ HL8L3,MPCF1 $ HUSET,RG/GM $ HUSET,Gtl,HKGG,HRGG,HBGG,/HKNN,HRNN,HBNN, $ HL8L3$ HKNN,HKFF/SlNGLE/HRNN,HRFF/SlNGLE/HBNN,HBFF/SlNGLE $ HLBL4,SINGLE $ HIJSET,HKNN,HRNN,HBNN,/HKFF,HKFS, ,HRFF,HBFF, $ HLBLk$ HKFF,HKAA/OMIT $ HRFF,HRAA/OMIT $ HBFF,HBAA/OMiT $ HLBL5,0MIT $ HUSET,HKFF ,,,/HGO,HKAA,HKOO,HLOO,, ,,,$ HLBLR,HNLR $ HUSET,HGO,HRFF/HRAA $ HLBLR$ HLBL5,NOBGG $ HUSET,HGO,HBFF/HBAA $ HLBL5$ DYNAMICS,GPL,HSIL,HUSET/GPLO,HSl LD,HUSETO,TFPOOL,HDLT, ,, HNLFT,HTRL,,HEQDYN/HLUSET/S,N,HLUSETD/123 /S,N,NODLT/ 123/123/S,N,NONLFT/S,N,NOTRL/123//S,N,NOUE $ ERROR1,NOTRL $ HGO,HGOD/NOUE/GM,GMO/NOUE $ HPPO,HPSO,HPDO,HPDT/NODLT $ 3,3-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71 72 73 lk 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91MTRXIN PARAM PURGE EQUIV CONO GKAO LABEL EQUIV PARAH LABEL CASE TRLG EQUIV TRHT VOR CONO SDR3 OFP XYTRAN XYPLOT LABELCASECC,MATPOOL,HEQDYN, ,TFPOOL/HK2PP,,HB2PP/HLUSETO/ S,N,NOK2PP/123/S,N,NOB2PP $ //AND/KDEKA/NOUE/NOK2PP $ HK2Do/NoK2PP/HB200/NoB2PP $ HKAA,HKDo/KoEKA/HB2PP,HB2DD/NoA/HK2PP,HK2oo/NoA/HRAA,HRoo/ NOUE$ HLBL6,NOGPDT $ HUSETD,GM,HGO,HKAA,HBAA,HRAA, ,HK2pP,,HB2PP/HKO0,HBD0, HROD,GM0,HGO0,HK200, ,HB200/TRANREsP/D15Pf’/ ~DIREcT/c,y,G=o,o/c,Y,w3=0.O/C,Y ,Wk=O.O/NOK2PP/-l/ NOB2PP/MPCFl/S lNGLE/OMIT/NOUE/ -1/NOBGG/NOSIMP/-l $ HLBL6$ HK2no,HKDD/NoslMP/HB2DD,HBDD/NoGPDT $ //$~MPY/REPEATT/l/-l $ HLBL1O $ CASECC,/CASEXX/*TRANt/S,N,REPEATT/S ,N,NOLOOP $ CASEXX,HUSETO,HDLT,HSLT, BGPDT,HS IL,CSTM,HTRL,O IT,GMO,HGOO, , HEST,,/HPPO,HPSO,HPOO,HPOT, ,HTDL/S,N,NOsET $ HPPO,HPOO/NOSET $ CASEXX,HUSETO,HNLFT,OIT,GPTT, HKOO,HBDD,HROO,HPDT,HTRL/ HUDVT,HPNLD/C,Y,BETA=.55/C,Y ,TABS=O.O/HNLR/C,Y,RAOLIN=-l/ C,Y,SIGMA=O.O $ CASEXX,HEQOYN,HUSETD,HUDVT,HTOL,XYCDB,HPNLD/HOUDVl ,HOPNL1/ *TRANREsP$c/*OIRECT)/O/S,N,NOO/s,N,Nop/o $ HLBL7,NOD $ Houovl,HoPNLl,,,,/Houov2,HoPNL2, ,,,$ HOUDV2,HOPNL2 ,,,,//S,N,CARDNO $ XYCDB,HOUDV2,HOPNL2, ,,/HXYPLTTA/’TRAN’/*DSE~’S/S ,N,HPFILE/ S,N,HCARONO $ HXYPLTTA// $ HLBL7$ 3.3-4(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2,0NASTRAN DMAPCOMPILER -SOURCE LISTING 92 93 94 95 g6 97 98 99 100 101 ●102 103 lok 105 106 107 108 109 110 111 112 113 114PARAM COND EQUIV COND SDR1 LABEL SDR2 SDRHT EQUIV SDR3 OFP COND PLOT PRTMSG LABEL XYTRAN XYPLOT LABEL COND REPT PRTPARM JUMP LABEL//AND/PJUMP/NOP/JUMPPLOT $ tlLBL9,PJU14P $ HUDVT,HUPV/NOA $ HLBL8,NOA $ HUSETD, ,HUDVT, ,,HGOD,GMD,HPSO,HKFS, ,/HUPV,,HQP/l/ *DYNAflIcsx $ HLBL8$ CASEXX,CSTM,MPT,DIT,HEQDYN,HS ILD,,,BGPDP,HTOL,HQP,HUPV,HEST, XYCDB,HPPO/HOPPl,HOQPl,HOUPV1 ,HOESl,HOEFl,HPUGV/TRANRESP $ HSILD,HUSETD,HUPV,HOEF 1,HSLT,HEST,DIT,HQGE ,HDLT,/HOEFIX/C,Y, TABS/HNLR $ HOEFIX,HOEF1/MINUSl $ HOPP1,HOQP1,HOUPV1 ,HOESl,HOEFl,/HOPP2,HOQP2,HOUPV2,HOES2, HOEF2, $ HoPP2,HoQP2,HouPv2,HoEF2,HoEs2,//s,N,cARDNo $ HP2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEXX,BGPDT,HEQEXI N,HSIP,,HPUGV, HGPECT,/PLOTX2/HNS lL/HLUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx2// $ HP2$ XYCDB,HOPP2,HOQP2 ,HOUPV2,HOES2,HOEF2/HXYPLTT/TRAN/PSET/S ,N, PFILE/S,N,CARDNO $ HXYPLTT// $ HLBL9$ FINIS,REPEATT $ HLBLIO,1OO $ //-2/HTRD $ FINIS$ ERROR1 $ 3.3-5(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIIJFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 115PRTPARM //-1/HTRD $ 116LABEL FINIS$ 117PURGE DUM/lY/MINUSl $ 118END $ 3,3-6(05/30/86)\n3.3.2TRANSIENT HEAT Description ofImportant DMAPOperationsTRANSFER ANALYSIS forTransient HeatTransfer Anal\u0026s_ ●4. 5. 7, 8. 11. 12. 130 16. 17, 18. 20. 21. 23. 26. ●28. 29. 31. 32. 36. 37. 39. 41. 43. 44. 45.s GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal dndexternal degreeoffreedom indices: PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. GotoDMAPNo.66ifthereisnoGridPointDefinition Table. GP2generates theElement Connection Tablewithinternal indices. GotoDMAPNo.19iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoboundary andstructure (heatconduction) element plotsare requested. PLOTgenerates allrequested boundary andheatconduction element plots. PRTMSGprintsplotter dataandengineering dataforeachgenerated plot. GP3generates applied Static(HeatFlux)LoadTables(HSLT)andtheGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly, loadgeneration, anddatarecoverl. GotoDMAPNo.35ifnoheatconduction orboundary elements eist. EMGgenerates element heatconduction andcapacitance matrixtablesanddictionaries for laterassembly bytheEMAmodule. GotoDMAPNo.30ifnoheatconduction matrix istobeassembled. EMAassembles heatconduction matrix [K~g]andGridPointSingularity Table. GotoDMAPNo.33ifnoheatcapacitance matrixistobeassembled. EMAassembles heatcapacitance matrix[Bgg]. RMGgenerates theradiation matrix, [Rgg],andaddstheestinlated linearcomponent of radiation totheconductivity matrix. generated foruseindatarecovery. Equivalence thelinearheattransfer radiation exists. GP4generates flagsdefining members multipoint constraint equations, [Rg]Theelement-radiation fluxmatrix, [Qge],isalso matrix, [Kgg],totheheatconduction matrixifno ofvarious displacement sets(HUSET) andformsthe {Ug}=o. GotoDMAPNo.46ifnosimpleelements exist. GotoDMAPNo.46ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. Thesesingularities maybe extraneous inaradiation problem, sincesomepointsmaytransfer heatthrough radiation only. @FPformats thetableofpotential gridpointsingularities pnepared byGPSPandplacesit onthesystemoutputfileforprinting. \u003c 3.3-7,(05/30/86)\n47.Equivalence [Kgg]to constraints exist. 48.GotoDMAPNo.51ifHEATRIGIDFORMATS [Knnl$[RggltO[Rnnl\u003eand[Bgglto[Bnnlifnomultipoint nomultipoint constraints exist. 49.MCE1partitions themultipoint constraint equationmatrix, [Rg]=[RmRn], andsolves forthemultipoint constraint transformation matrix, [Gm]=-[Rml-l[Rnl. 50.MCE2partitions heatconduction andradiation matrices [1iIK [Kgg]=fln+ $ %n1‘mm [1RIR [Rgg]=fl-+R~ s mnmm [ 1BIB [Bgg]=~~BM s mnmm andperforms matrixreductions [Knn]=[nnl+[G;l[Kmnl +[Kmnl[GmJ +[G;l[\u0026JIGml . Thesameequation isapplied to[Rnn]and[Bnn]. 52.Equivalence [Knnlto[Kffl [Bnnlto[Bffl’ and[Rnnl‘0[Rffl‘f‘0 single-point constraints exist. 53.GotoDMAPNo.55ifnosingle-point constraints exist. 54.SCE1partitions thematrices asfollows: ‘[lifflKfs [Knn]=~~K– o SfSs [Rnn]and[Bnnlarepartitioned inthesamemanner, exceptthatonlytheffpartitions aresaved. 56.Equivalence [Kff]to[Kaalifnoomitted coordinates ‘Xist” 57.Equivalence [Rff]to[Raa]ifnoomitted coordinates exist. 3.3-8(05/30/86)\n58. 59. 60. 61. 62. 64. 65. 67. 68. 69. 71. 74. 75. 76.TRANSIENT HEATTRANSFER ANAfYSIS Equivalence [Bff]to[Baa]ifnoomitted coordinates exist. GotoDMAPNo.66ifnoomitted coordinates exist. SMP1partitims theheatconduction matrix solvesforthe andsolvesfor GotoDMAPNo.[1i!K [Kff]=;K oa00 transformation matrix9 [Go]: [Koo][Go]=-[Koa], thereduced heatconduction matrix[Kaa]: [Kaa]=[aa]+[Kao][Go]. 63ifnoradiation matrixexists. SMP2partitions constrained radiation matrix [1ii!Rao [Rffl=fyR— ‘ oa00 andperforms matrixreduction [Raa]=[;aa]+[Ra][Go]+[G:][Roa]+[G:][Roo][Go], GotoDMAPNo.66ifnoheatcapacitance matrix, [Bff], exists. SMP2calculates areduced heatcapacitance matrix, [Baa], withthesameequation asDMAP t!o,62. DPDgenerates thetabledefining thedisplacement setseachdegreeoffreedom belongs to (HUSETD), including extrapoints. Itprepares theTransfer Function Pool,theDynamics Load Table,theNonlinear Function Table,andtheTransient Response List. GotoDMAPNo.114andprintErrorMessage No.1ifthereisnoTransient Response List. Equivalence [Go]to[G:]and[Gm]to[G:]ifnoextrapointsweredefined. MTRXINselects thedirectinputmatrices [Kp]and[Bp]. . Equivalence [Kaa]to[Kd]iftherearenodirectinputstiffness matrices andno extrapoints; [Bpp]to[Bd]and[Kpplto[Kjd]ifOnlyextrapoints areused; and[Raa]to[Rdd]ifnoextrapointsareused. GotoDMAPNo.77ifthereisnoGridPointDefinition Table. GKADexpands thematrices toinclude extrapoints andassembles heatconduction, capacitance, andradiation matrices foruseinthetransient analysis: 3.3-9(05/30/86)\n78. 80. 81. 82. 83. 84. 85. 86.and ,[Kid]= [Bd] [RddlHEATRIGIDFORMATS [1KIO -a+— , 010 [1BIO a+— , 010 [1RIO a+— , 010 [Kddl=[K;d]+[K;dl , [Bdd]=[B:dl+[B:dl . (Nonzero valuesoftheparameters W4,G,andW3(seethePARAMbulkdatacard)arenot recommended foruseinheattransfer analysis andtherefore donotappearintheabove equations. ) Equivalence [Kd]to[Kdd]and[Bid]to[Bdd]ifnomatrices weregenerated from theelement heatconduction andcapacitance assemblers. Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. TRLGgenerates matrices ofheatfluxloadsversustime.{P;},{P:},and{F$)are generated withonecolumnperoutputtimestep.{P}isgenerated withonecolumnper solution timestep,andtheTransient OutputListisalistofoutputtimesteps. Equivalence {P}to{Plifthedandpsetsarethesame. TRHTintegrates theequation ofmotion: [Bdd]{}+[Kdd] {u}={pdl+{Nd} , where {u}isavectoroftemperatures atanytime, {u}isthetimederivative of{u}(“velocity”), {Pd~is theapplied heatfluxatanytimestep,and {Nd}-is thetotalnonlinear heatfluxfromradiation and/orNPLINidata, extrapolated fromtheprevious solution vector. Theoutputconsists ofthe[u:]matrixcontaining temperature vectors andtemperature “velocity” vectors fortheoutputtimesteps. VDRprepares thesolution settemperatures, temperature “velocities”, andnonlinear loads, sortedbytimestep,foroutput. GotoDMAPNo.91ifthereisnooutputrequest forthesolution set. 3.3-10 (05/30/86)\nITRANSIENT HEATTRANSFER ANALYSIS 87.SDR3prepares therequested output ofthesolution settemperatures, temperature o“velocities”, andnonlinear loadssortedbypointnumberorelement number. 88.OFPformats thetablesprepared bySDR3foroutputsortedbypointnumberorelement number andplacesthemonthesystemoutputfileforprinting. 89.XYTRANprepares theinputforrequested X-Yplotsofthesolution setquantities. 90.XYPLOTprepares therequested X-Yplotsofthesolution settemperatures, “velocities” and nonlinear loadsversustime. 93.GotoDMAPNo.109ifnofurther outputisrequested. 94.Equivalence {ud}tO{Uplifnostructure points ‘ere‘nput” 95.GotoDMAPNo.97ifnostructure pointswereinput. 96.SDR1recovers thedependent temperatures: {Uo)=[G:]{Udl, HUd ——.{Uf),, uo MUf+Ue —— ={Unl, us {urn}=[G;]{uf+ue} 11Un+Ue and —— ={up}. ‘m Themodulealsorecovers theheatfluxintothepointshavingsingle-point constraints: {c$}=-{PSI+[K~s]{ufl. 98.SDR2calculates requested heatfluxtransfer intheelements andprepares temperatures, “velocities”, andheatfluxloadsforoutputsortedbytimestep. 99.SORHTmodifies theHOEFldatablockbcombining theheatflowdatafromdifferent sources fortheHBDYelements andwritestheresults ontheHOEFIXoutputdatablock. 100.Equivalence HOEFldatablocktotheHOEFIXdatablock. 101.SDR3prepares requested outputsortedbypointnumberorelement number. 102.OFPformats thetablesprepared bySDR3foroutputandplacesthemonthesystemoutputfile forprinting. 103.GotoDMAPNo.106ifnotemperature profile plotsarerequested. 104.PLOTgenerates allrequested temperature profile plotsandthermal contours forspecified times. 3.3-11(05/30/86)\nHEATRIGIDFORMATS 105.PRTMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. 107.XYTRANprepares theinputforrequested X-Yplots.●108,XYPLOTprepares therequested X-Yplotsoftemperatures, “velocities”, element flux,and applied heatloadsversustime. 110.Goto 111.Goto 112.Print 113.Goto 1150PrintDMAPNo.116ifnoadditional dynamic loadsetsneedtobeprocessed. DMAPNo.80ifadditional dynamic loadsetsneedtobeprocessed. ErrorMessage No.2andterminate execution. DMAPNo,116andmakenormalexit. ErrorMessage No.1andterminate execution. 3.3-12(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS 3.3.3OutputforTransient HeatTransfer Analysis Thefollowing printed output, sortedbypoint atselected multiples oftheintegration timestep: 1.Temperatures (THERMAL) andderivatives ofnumberorelement number(S0RT2), isavailable temperatures (VELOCITY) foralistofPHYSICAL points (gridpointsandextrascalarpointsintroduced fordynamic analysis) or SDISPLACEMENT andSVELOCITY forSOLUTI@N points(points usedintheformulation ofthe dynamic equation). 2.Nonzero components oftheapplied loadvector (!3L!3AD) andconstrained heatflow (SPCFORCE) fora1istofPHYsICAL points. 3.Nonlinear loadvectorforalistofS0LUTI13N points. 4.Fluxdensity (ELFORCE) inselected elements. Thefollowing plotter outputisavailable: 1.Plotofthe 2.Temperature 3.x-Yplotof point. 4.x-Yplotof 5.x-YplotofStructural model. profiles andthermal contours forselected timeintervals. temperature orderivative oftemperature foraPHYSICAL pointoraSOLUTION theapplied loadvector, nonlinear loadvector, orconstrained heatflow. fluxdensity foranelement. Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabular form(see VolumeI,Section 4.3).Also,aprinted summary isprepared foreachX-Yplotwhichincludes the maximum andminimum valuesoftheplotted function. 3.3.4CaseControl DeckforTransient HeatTransfer Analysis Thefollowing itemsrelatetosubcase definition and Transfer Analysis: 1. 2. 3.dataselection forTransient Heat Onesubcase mustbedefined foreachdynamic loading condition. DLOADand/orNONLINEAR mustbeusedtodefineatime-dependent eachsubcase. Thestaticloadcards(QVECT, QVklL,QHBDY,QBDY1,loading condition for andQBDY2)canalsobe usedtodefineadynamic loadbyusingthesecardswith,orinstead of,theDAREAcards. Thesetidentification numberonthestaticloadcards(field2)isusedinthesame mannerasthesetidentification numberontheDAREAcards(field2). Allconstraints mustbedefined abovethesubcase level. @3.3-13(05/30/86)\n4. 5. 6. ● 7.HEATRIGIDFORMATS TSTEPmustbeusedtoselectthetime-step intervals tobeusedforintegration and outputineachsubcase. Ifnonzero initial conditions aredesired, ICmustbeusedtoselectaTEMPsetinthe●BulkDataDeck. Anestimated temperature distribution vectormustbedefined onTEMPcardsandselected withaTEMP(MATERIAL) request ifradiation effects areincluded. Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure shouldbechanged toreflect anycompleted loading conditions. 3.3.5aameters forTransient HeatTransfer Analysis ..———-——.— Thefollowing parameters areusedinTransient HeatTransfer Analysis: 1. 2. 3. 4. 5. 6.ASETflJT -optional, Apositive integer valueofthisparameter causestheASEToutput——.. datablocktobegenerated by thegeneration ofthisoutput AUT@SPC -reserved forfuturetheGP4module. Anegative integer valueorOsuppresses datablock. Thedefault valueisO. optional use.Thedefault valueis-1. BETA-optional. Therealvalueofthisparameter isusedasafactorinthe integration algorithm (seeSection 8.4.2oftheTheoretical Manual). Thedefault value is0.55. RADLIN-optional. Apositive integer valueofthisparameter causessomeofthe radiation efffects tobelinearized (seeEquation 2,Section 8.4,2oftheTheoretical●Manual). Thedefault valueis-1. SIGMA-optional. Therealvalueofthisparameter istheStefan-Boltzmann constant. Thedefault valueis0.0. TABS_-optional. Therealvalueofthisparameter isthe temperature. Thedefault valueis0.0. 3.3.6RigidFormatErrorMessages fromTransient HeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPinstructions Transfer Analysis rigidformat. Thetextforeacherrormessage isgiven andisfollowed byadditional material, including suggestions forremedialabsolute reference intheTransient Heat belowincapital letters action. TRANSIENT HEATTRANSFER ANALYSIS ERRORMESSAGE N@,1-TRANSIENT RESPONSE L1STREQUIRED FOR TRANSIENT RESP!3NSE CALCULATIONS. 3.3-14(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS Timestepintervals tobeusedmustbespecified onaTSTEPcardintheBulkDataDeckandaTSTEP @selection mustbemadeintheCaseControl Deck. TRANSIENT HEATTRANSFER ANALYSIS ERRORMESSAGE Nli!.2-ATTEMPT TOEXECUTE M!3RETHAN100L!30PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbermaybeincreased by ALTERing theREPTinstruction following thelastXYPLllTinstruction. 3.3-15(05/30/86)\nHEATRIGIDFORMATS 3.3-16(05/30/86)"},"title":"User's Manual P18"},"/docs/users/users_manual_019/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#4.AERORIGIDFORMATS\n4.1BLADECYCLICMODALFLUTTER ANALYSIS\n●4.1.1DMAPSequence forBladeCyclicModalFlutter Analysis\nRIGIDFORMAT DMAPLISTING\nAPRILlg86RELEASE\nAEROAPPROACH, RIGIDFORMAT 9\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"4.AERORIGIDFORMATS 4.1BLADECYCLICMODALFLUTTER ANALYSIS ●4.1.1DMAPSequence forBladeCyclicModalFlutter Analysis RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6COND 1GP2 8GP3 9TA1 10COND 11PURGE 12PARAM 13PARAM 14PARAM 15COND 16PARAM i7INPUTT1 18EQUIV 19LABEL 20EMGAERO09-COMPRESSOR BLAOEMODALFLUTTER ANALYSIS -APR.1986$ ALL$ PHlHL=APPENO/AJJL=APPENO/FSAVE=APPEND/CASEYY=APPEND/CLAMAL= APPEND/OVG=APPENO/QHHL=APPEND $ //tiMp’fti/cARDNo/o/O $ GEoMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM,BGPDT,S lL/S,N,LUSET/S,N, NOGPDT/MINUSl=-l $ ERROR5,NOGPOT $ GEoM2,EQExlN/EcT $ GEoM3,EQEx1N,GEoM2/,GpTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/LUSET/S,N, NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR5,NOSIMP $ OGPST/GENEL $ //ADD/NoKGGX/l/O $ //ADD/NOMGG/l/o $ //NoP/V,Y,KGGIN–l $ JMPKGGIN,KGGIN $ //ADD/NOKGGX/-l/O $ /KTOTAL,,.,/c,y,LOcATION=-l/c.Y, lNPTuNIT”o $ KTOTAL,KGGX $ JMPKGGIN $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/s,N,NoKGGx/s, N,NOMGG////C,Y,COUPMAC,Y,,Y, CF’BAR/c,Y,CPROO/c,y, cPQuAD1/c,Y,cPQuAD2/c,Y,cPTR lA}/c,Y,cPTRlA2/c,Y,cPTuBE/c,Y, CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC $ 4.1-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 k3 bk k5COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL GP4 PARAH COND PURGE GPCYC COND CONO PARAH COND GPSP OFP LABELJMPKGGX,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTHASS=l .0$ LGPWG,GRDPNT $ BGPOT,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT=-l/C,Y,WMASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ CASECC,GEOt44,EQEXlN,GPDT,BGPDT,CSTM,/RG, ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S.N,REACT/O/ S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y, AUTOSPC $ //YfNOTff/REACDATA/REACT $ ERROR6,REACDATA $ GM,GMO/MPCFl/GO,GOD/OMIT/KFS,QPC/S INGLE$ GEOMh,EQEXIN,USET/CYCD/V,Y, CTYPE/S,N,NOGO $ ERROR7,NOG0 $ LBL4,GENEL $ //EQ/GpspF LG/AUTOSpC $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N ,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ 4.1-2(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46EQUIV 47COND 48MCE1 49MCE2 50LABEL 51EQUIV 52COND 53SCE1 54LABEL 55EQUIV 56COND 57SMPI 58SMP2 59LABEL 60DPD 61COND 62EQUIV 63cYCT2 64COND 65READ 66OFP 67COND 68cYCT2 6gCONDKGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ uSET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT/MFF,MAA/0t41T $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/HAA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLO, SILD,USETD,TFPOOL, ,,,,,EEO,EQOYN/ LUSET/S,N,LUSETD/NOTFL/NODLT/NOPSOL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//S,N,NOUE $ ERROR2,NOEE0 $ GO,GOD/NOUE/GM,GMD/NOUE $ CYCD,KAA,MAA, ,,/KKK,MKK,,,/FORE/V,Y,NSEGS=-l/V,Y, KINDEX=-1/V,Y,CYCSEQ=-l/l/S,N,NOGO $ ERROR7,NOG0 $ KKK,MKK,, ,EED,,CASECC/LAMK,PHIK, ,OEIGS/MODES/S,N, NEIGV$ OEIGS,LAMK,,,,//S,N,CARONO $ ERROR4,NEIGV $ CYCD,,,,PHIK,LAMK/, ,,PHIA,LAMA/BACK/V,Y,NSEGS/V,Y, KINDEX/V,Y,CYCSEQ/l/S,N,NOGO $ ERROR7,NOG0 $ 4.1-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 72 73 74 75 76 77 7a 79 80 81 82 83 84 85 86 87 88 89SDR1 SOR2 OFP PARA14L PURGE COND PLTSET PRTMSG CONO PLOT PRTMSG LABEL APDB PARTN SMPYAO MTRXIN PURGE EQUIV GKAO GKAMUSET,,PHIA,,,GO,GM,,KFS,,/PHIG,,/l/REIG $ CASECC,CSTM,MPT,DIT, EQEXIN, SIL,,,BGPDT,LAMA, ,PHIG,EST, ,/,, OPHIG,,,PPHIG/REIG $ OPHIG,,,,,//S,N,CARONO $ PCOB/)PRES////JUMPPLOT $ PLTSETZ,PLTPARZ,GPSETSZ,ELSETSZ/JUMPPLOT $ PZZ,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETZ,PLTPARZ,GPSETSZ, ELSETSZ/ S,N,NSILZ/S,N,JUMPZ=-l $ PLTStTZ// $ PZZ,JUMPZ $ PLTPARZ,GPSETSZ,ELSETSZ,CASECC, BGPDT,EQEXIN,SIL, ,PPHIG,,/ PLOTZ/NSILZ/LUSET/JUMPZ/PLTFLGZ=- l/S,N,PFILEZ=O $ PLOTZ// $ Pzzs EDT,USET,BGPOT,CSTM,EQEXIN, GM,GO/AERO,ACPT,FLIST,GTKA, PVECT/ S,N,NK/S,N,NJ/V,Y,MINMACH/V,Y,MAXMACH/V,Y, lREF/V,Y,MTYPE/ NEIGV/V,Y,KINDEX=-l $ PHIA,PVECT,/PHIAX,,,/l $ PHIAX,MAA,PHIAX ,,,/Ml/3/l/l/O/l $ CASECC,MATPOOL, EQOYN,,TFPOOL/K2PP,M2PP,B2PP/LUSETD/S ,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K200/NoK2PP/M2DD/NoM2PP/B200/NoB2PP $ M2PP,M2Do/NosET/B2PP,B2DD/NosET/K2PP, K2DD/NosET $ USETO,GM,GO, ,,,,K2PP,M2PP,B2PP/, ,,GM0,GOD,K2D0,M2DD,B20D/ cMpLEv/Dlsp/YtMoDAL#r/o ,o/o,o/o.o/NoK2pp/ NOM2PP/NOB2PP/MPCF l/SINGLE/OMIT/NOUE/ -1/-1/-1/-1 $ USETD,PHI AX,MI,LAMK,01T,M2D0, B20D,K2Do,cAsEcc/MHH,BHH,KHH, PH10H/NOUE/C,Y,LMODES=999999/C,Y, LFREQ=O.O/C,Y,HFREQ=O.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S, N,FMODE/C,Y, KOAMP=-1 $ 4.1-4(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 90PURGE 91COND 92PLTSET 93PRTMSG 94PARAM 95PARAM 96coNo 97PLOT 98PRTMSG 99LABEL 100PARAM 101AMG 102PURGE 103CONDPLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P2,JUMPPLOT $ PCDB,EQDYN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSl L1/S,N, JUMPPLOT $ PLTSETX//$ //t?MPY~~/PLTFLG/l/l $ //MPY/PF ILE/O/O $ P2,JUMPPLOT s PLTPAR,GPSETS, ELSETS,CASECC,BGPOT, EQDYN,,,,,/pLoTxl/NslLl/ LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S ,N,PFILE $ PLOTX1//$ P2$ //,tADD*/DEsTRY/O/l $ AERo,AcPT/AJJL,sKJ,DlJK,D2JK/NK/NJ/s,N,DEsTRY $ DlJE,D2JE/NoDJE $ NODJE,NODJE $ 104INPUTT2 /DlJE,02JE,,,/C,Y,POSlT10N=- l/C,Y,UNITNUM=ll/C,Y,USRLABEL= 105LABEL 106PARAM 107AMP 108PARAM 109PARAM 110PARAM 111LABEL 112FA1TAPEID $ NODJE$ //~~ADD*/XQHHL/l/O $ AJJL,SKJ,01JK,D2JK,GTKA,PHI DH,DlJE,D2JE,usETD,AERo/QHHL, ,/ NoUE/S,N,XQHHL $ //llPY/NOP/l/l $ //MPYf(/NOH/O/ 1$ //~~MPY/FLOOP/V,Y,NODJE=-l/O $ LOOPTOP $ KHH,BHH,MHH,QHHL,CASECC,FL lST/FSAVE,KXHH,BXHH,MXHH/S,N,FLOOP/ S,N,TSTART/S,N,NOCEAD $ 4.1-5(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 113 114 115 116 117 118 119 120 121 122 123 I24 125 126 127 128 129 130 131 132 I33 134 135 136EQUIV COND CEAD COND LABEL VDR COND OFP LABEL FA2 COND LABEL COND REPT JUMP LABEL PARAML COND XYTRAN XYPLOT LABEL PARAM COND HODACCKXHH,PHIH/NOCEAD/BXHH,CLAMA/NOCEAD/ KXHH,PHIHL/NOCEAD/BXHH,CLAMAL/NOCEAD/ CASECC,CASEYY/NOCEAD $ VDR,NOCEAD $ KXHH,BXHH,MXHH,EED,CASECC/PH lH,CLAMA,OCEIGS,/S,N,EIGVS $ LBLZAP,EIGVS $ VDR$ CASECC,EQDYN,USETD,PH IH,CLAMA, ,/OPHIH,/CEIGEN/MODAL/ 123/s,N,NoH/s,N,NoP/FmoDE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ PHIH,CLAMA,FSAVE/PHIHL,CLAMAL ,CASEYY,OVG/S,N,TSTART/C,Y,VREF= l.O/C,Y,PRINT=YESB $ CONTINUE,TSTART $ LBLZAP $ CONTINUE,FLOOP $ LOOPTOP,1OO $ ERROR3 $ CONTINUE $ XYCDB//PRES////NOXYCDB $ NOXYOUT,NOXYCDB $ XYCDB,OVG ,,,,/XYPLTCE/VG/PSET/S,N,PF lLE/S,N,CARDNO $ XYPLTCE//$ NOXYOUT $ //ANlj/pJUMp/NOp=-l/JUMppLOT $ FINIS,PJUMP $ CASEYY,CLAMAL,PHIHL,CASECC, ,/CLAMALl,CPHIHl ,CASEZZ,,/ cEIGN $ 4,1-6(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 137DDR1 138EQUIV 139CONO 140SOR1 141LABEL 142EQUIV 143COND 144VEC 145PARTN 146LABEL 147SOR2 148OFP 149COND 150PLOT 151PRTMSG 152LABEL 153JUMP 154LABEL 155PRTPARN 156LABEL 157PRTPARM 158LABEL 159PRTPARM 16oLABELCPHIHl,PHIOH/CPHIO $ CPHID,Cl?HIP/NOA $ LBL14,NOA $ USETO,,CPHID,, ,GOO,GMO,,KFS,,/CPHIP,,QPC/l/DYNAMl CS$ LBL14$ CPHID,CPHIA/NOUE $ LBLNOE,NOUE $ USETO/RP/D/A/E $ cPHID,,RP/cPHIA,,,/l/3 $ LBLNOE $ CASEZZ,CSTM,HPT,DIT,EQDYN,S ILD,,,BGPDT,CLAMAL1,QPC,CPHIP,EST, ,/ ,OQPC1,OCPHIP,OESC1,OEFC1,PCPHI P/CEIGN $ OCPHIP,OQPCl,OESCl,OEFCl,,//S, N,CARDNO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEZZ,BGPDT, EQDYN,SILD,,PCPHI P,,/pLOTX3/ NSILl/LUSET/JUMPPLOT/PLTFLG/PF ILE$ PLoTx3//$ P3$ FINIS$ ERROR1 $ //-1/BLADEMOS $ ERROR2 $ //-2/*BLADEMDS~~ $ ERROR3 $ //-3/BLADEMDs $ ERROR4 $ 161PRTPARM //-4/BLADEMOS $ 4.1-7(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 162 163 164 165 166 167 168 169 170LABEL PRTPARII LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDERROR5 s //-5/BLADEMDs $ ERROR6 $ //-6/BLADEMos $ ERROR7 $ //-7/BLADEMDs $ FINIS$ DUMMY/MINUSl $ $’ 4.1-8(05/30/86)\n4.1.2 5. 6. 7. 8. 9. 10. 15. 16. 17. 180 20. 21. 22. 24. 25. 26. 27. 28. 30. 31, 32. 34. 36. 38. 39. 40. 42. 43.BLADECYCLICMODALFLUTTER ANALYSIS Description ofImportant DMAPOperations forBladeCyclicModalFlutter Analysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoDMAPNo.162andprintErrorMessage No.5ifnogridpointsaredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GOtoDMAPNo.162andprintErrorMessage No.5ifnostructural elements defined.havebeen GotoDMAPNo.19ifnostiffness matrixissupplied bytheuseronanexternal file. Setparameter NEiKGGX=-1sothatthestiffness matrixwillnotbegenerated inDMAPNo.20. INPUTT1 readstheuser-supplied stiffness matrix[KTOTAL] fromanexternal file(GINOfile INPT). Equivalence [Kg]to[KTOTAL]. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.23ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.154andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.29ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. i3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.33iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]tug}=0. GotoDMAPNo.164andprintErrorMessage No.6iffree-body supports arepresent. GPCYCprepares segment boundary table. GotoDMAPNo.166andprintErrorMessage No.7iftheCYJ!31Ndataisinconsistent. GotoDMAPNo.45ifgeneral elements arepresent. GotoDMAPNo.45ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 4.1-9(05/30/86)\nAERORIGIDFORMATS 44.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 46.Equivalence [Kgg]to[Knn]andLMgg]to[Mnn]ifnomultipoint constraints exist, 47.GotoDMAPNo.50ifnomultipoint constraints exist. 48.MCE1partitions multipoint constraint equations [Rg]=[RmiRn] andsolvesfor multipoint constraint transformation matrix[Gm]❑ -[Rm]-l[Rn]. 49.MCE2partitions stiffness andmassmatrices [,iIK [Kgg]=fl+K~ mnmm andperforms matrixreductionsand [Mgg]= [Knn]=[inn]+[GJ[Kmn] +[Kn][Gm] +[G~][Kmm][Gm] and [Mnn]=[inn]+[G~][Mmn] +[Mn][Gm] +[G][Mmm][Gm] . 51.Equivalence [Knnlto[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 52.GotoOMAPNo.54ifnosingle-point constraints exist. 53.SCE1partitions outsingle-point constraints 55.Equivalence [Kff]to[Laa]and[Mff]tolMaa]ifnoomitted coordinates exist. 56.GotoDMAPNo.59ifnoomitted coordinates exist. 57.SMP1partitions constrained stiffness matrix [1iilKao [Kff]=a+—, ‘oa1’00 solvesfortransformation matrix[Go]=-[Koo]-l[Koa] andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 58.SMP2partitions constrained massmatrix [1iIM [Mff]=;+ oaIMOO 4,1-10(05/30/86)\n60. 61. 62. 63. 64. 65. 66. e67. 68. 69. 70. 71. 72. 75.BLADECYCLICMODALFLUTTER ANALYSIS andperforms matrixreduction [Maa]=[aa]+[Ma][Go] +[G~][Moo][Go] +[G~][Moa] . DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tables relating theinternal andexternal gridpointnumbers (GPLD), including extrapoints introduced fordynamic analysis (SILO), and Pool (TFPOOL), andEigenvalue Extraction Data(EED).“prepares Transfer Function GotoDMAPNo.156andprintErrorMessage No.2ifthere Equivalence [Go]tofG~]and[Gm]to[G~]ifthereareno fordynamic analysis.isnoEigenvalue Extraction extrapointsintroduced CYCT2transforms matrices fromsymmetric components tosolution set. GotoDMAPNo.166andprintErrorMessage No.7ifaCYCT2errorwasfound. READextracts realeigenvalues andeigenvectors fromtheequation [Kkk-AMkk]{@k} =O, andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.Data. OFPformats thesummary ofeigenvalue extraction information (OEIGS) andtheeigenvalues (LAMK)prepared byREADandplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.160andprintErrorMessage No.4ifnoeigenvalues werefound. CYCT2findssynunetric components ofengenvectors fromsolution seteigenvectors. GOtoDMAPNo.166andprintErrorMessage No.7ifaCYCT2errorwasfound. SDR1recovers dependent components oftheeigenvectors {$.}=[Go]{$a}, H‘$n——={$91. om{+m}=[Gm]{$n}, SDR2prepares eigenvectors (OPHIG) foroutputandPPHIGfordet’ormed plotting. OFPformats thetableprepared bySDR2andplacesitonthesystemoutput.fileforprinting. GotoDMAPNo.81iftherearenostructure plotrequests. 4.1-11(05/30/86)\n76. 77. 78. 79. 80, 82. 83. 84. 85. 87. 88. 89, 91.AERORIGIDFORMATS PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.81ifnodeformed (modal) structure plotsarerequested. PLOTgenerates allrequested deformed (modal) structure plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed (nlodal) structure p“lot. generated. APDBprocesses theaerodynamic datacardsfronEDT.AEROandACP’Treflect theaerodynamic parameters. PVECTisapartitioning vector andGTKAis)transt’orm,!tion matrix between aerodynamic (K)andstructural (a)degrees offreedom. PARTNpartitions theeigenvector intoallsineoral SMPYADcalculates themodalmassmatrix [M]=[ MXTRINselects thedirectinputmatr Equivalence [Mp]to[Md],[Bp]to areapplied.XT al[Maa][o:] 22cosinecomponents. 2 ces[Kpp],[Mpp]and[Bpp]. [Bdland[Kplto[Kd]ifnoconstraints GKADapplies constraints todirectinputmatrices [Kpl,[Mp]ani[Fpl,forming [Kid],[Mid]and[Bid]andforms[Gmdland[God]. GKAMselects eigenvectors toform[Odh]andassembles stiffness, massanddamping matrices inmodalcoordinates: [1’110[Mhh]=—— +[’$h][M:d][$dh] s 010 [1bi10 [Bhh].——+[’+jh][B:d][@dh] $ 010 where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses m.1=modalmasses bi=mi211fig(fi) bi=O ki=mi4r2f.1ki=(l+ig(fi)) 4m2fmi GotoDMAPNo.99ifnoplotoutputisrequested. 4,1-1.2(05/30/86)\n92. ●93. 96. 97. 98. 101. 103. 104. 107. 110. 111,BLADECYCLICMODALFLUTTER ANALYSIS PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.99ifnoundeformed aerodynamic orstructural element plotsarerequested. PLflTgenerates allrequested undeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated. AMGformstheaerodynamic matrixlist[Ajj],theareamatrix[Skj],andthedownwash coefficients LDk]and[Dkl. GotoDMAPNo.105iftherearenouser-supplied downwash coefficients. INPUTT2 provides theuser-supplied downwash factors duetoextrapoints ([De], [De]). PARAMN@DJEmustbesettoenterthesematrices. Thedownwash w,onbox.jduetotheJ motionofanextrapoint,Ue,isgivenby {Wj}= AMPcomputes theaerodynamic matr ‘ail‘ae [1[+dh]=‘—— , ‘eiI‘ee llD.l] , [Dh]\u003c=[Djil e 21D2] and [Dh]\u003c=[Dji ,je Foreach(m,k)pair:[De+ikDe]{ue} . xlistrelated tothemodalcoordinates asfo’lows: [Gki]=[Ga]T[6ai] , [Di]=[Dk]T[Gki] \u003e [Dfi] =[Dfk]T[Gki]. [Djh]=[Djl+ik[Dj] . Foreachgroup: [Qjh]=[A~j]~~ouP [Djh]group , [Qkh]=[Skj][Qjh] , [Qih] =[Gki]T[Qkh] Qih and [1[Qhh]\u003c=‘–.Qeh PARAMinitializes theflutter loopcounter (FLIIOP) tozero. Beginning ofloopforflutter. 4.1-13(05/30/86)\nAERORIGIDFORMATS 112.FA1computes thetotalaerodynamic massmatrix [Mhl, thetotalaerodynamic stiffness matrix [Kh]andthetotalaerodynamic damping matrix [B~h]aswellasalooPing table FSAVE, FortheK-method and‘~h=(k2/b2)Mhh +(P/2)Qhh, ‘h‘‘hh ‘ih=0, 113.Setupequivalences fortheKE-andPK-methods. 114.Got.oDMAPNo.117fortheKE-andPK-methods. 115,CEADextracts complex eigenvalues andeigenvectors fromtheequation [MhP2+B;hp+K;h]{$h} ‘O andnormalizes eigenvectors tounitmagnitude ofthelargest component. 116. 118. 119. 120. 122. 123. 125. 126. 127. 130. 131. 132. 135. 136.GotoDMAPNo.124ifnocomplex eigenvalues werefound. VDRprepares eigenvectors (!3PHIH) foroutput, usingonlytheextraPointsintroduced for dynamic analysis andmodalcoordinates.● GotoDMAPNo.121ifthereisnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. ●flFPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. FA2appends eigenvectors toPHIHL,eigenvalues toCLAMAL, CaseControl toCASEYY, andV-g plotdatato13VG. GotoDMAPNo.128.ifthereisinsufficient timeforanother flutter loop. GotoOMAPNo.128iftheflutter loopiscomplete. GotoDMAPNo.111foradditional aerodynamic configuration triplet values. GotoDMAPNo.158andprintErrorMessage No.3ifthenumberofflutter loopsexceeds 100. GotoOMAPNo.133iftherearenoX-Yplotrequests. XYTRANprepares theinputforrequested X-Yplots. XYPL!3Tprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint versustime. GotoDMAPNo.168andmakenormalexitiftherearenooutputrequests involving dependent degrees offreedom orforcesandstresses. M@DACCselects alistofeigenvalues andeigenvectors whoseimaginary parts(velocity in inputunits)areclosetoauserinputlist. 4.1-14(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS 137.!JDR1transforms thecomplex eigenvectors frommodaltophysical coordinates {$:}={@dh){$h} . 138.Equivalence {o:}to{$1ifnoconstraints areapplied. 139.GotoDMAPNo.141ifnoconstraints areapplied. 140.SDR1recovers dependent components ofeigenvectors {$:}=[G:]{$:} , andrecovers single-point forces ofconstraint {qs}=[K:s]{$f}, ___={Q;}. ~~ ●142.Equivalence {$}to{$:}iftherearenoextraPointsintroduced fordynamic analysis. 143.GotoDMAPNo.146iftherearenoextrapoints. 144.VECgenerates ad-sizepartitioning vector(RP)forthea-ande-sets {l+++{Ua}+{Ue}. 145.PARTNperforms partition of{$:}usingRP 147.SDR2calculates element forces (OEFCl) andstresses (OESCl) and (OCpHIp) andsingle-point forcesofconstraint (9QPC1)foroutput plotting.prepares eigenvectors andPCPHIPfordeformed 148.flFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 149.GotoDMAPNo.152ifnodeformed aerodynamic orstructural element plotsarerequested. 150.PL!3Tprepares alldeformed aerodynamic andstructural element plots. 1510PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated. 153,GotoDMAPNo.168andmakenormalexit. a 4.1-15(05/30/86)\nAERORIGIDFORMATS 155.PrintErrorMessage No.1andterminate execution. 157.PrintErrorMessage No.2andterminate execution. 159.PrintErrorMessage No.3andterminate execution. 161.PrintErrorMessage No.4andterminate execution. 163.PrintErrorMessage No.5andterminate execution. 165.PrintErrorMessage No.6andterminate execution. 167,PrintErrorMessage No.7andterminate execution. 4.1-16(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS ●4.1.3OutputforBladeCyclicModalFlutter Analysis TherealEigenvalue Summary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3,3), areautomatically printed. Allrealeigenvalues areincluded eventhoughallmaynotbeusedinthemodalformulation. Thecomplex eigenvalues areincluded intheFlutter Sumnary andareprinted foreach aerodynamic loop. Thegridpointsingularities fromthestructural modelarealsooutput. AFlutter Summary foreachvalueoftheconfiguration parameters isprinted outunless PRINT=Nf3. ThisshowsMachnumber, density, reduced frequency, velocity, damping, andfrequency for eachcomplex eigenvalue. V-gandV-fplotsmayberequested bytheXY!3UTcontrol cardsbyspecifying thecurvetype asVG.The“points” areloopnumbers andthe“components” areGorF. Printed outputofthefollowing types,sortedbycomplex eigenvalue rootnumber(S!3RT1) and (m,k,p),mayberequested forallcomplex eigenvalues kept,eitherasrealandimaginary partsor asmagnitude andphaseangle(0°-360°lead). (Eigenvectors arenotavailable fortheKE-method, ) 1.Theeigenvector foralistofPHYSICAL andAER!3DYNAMIC points(gridpoints, extra points, andaerodynamic points) orSOLUTION points(modalcoordinates andextrapoints), 2.Nonzero components ofthe’single-point forcesofconstraint foralistofPHYSICAL points. 3.Complex stresses andforcesinselected elements. TheOFREQUENCY CaseControl cardcanselectasubsetofthecomplex eigenvectors fordatarecovery. Inaddition, undeformed anddeformed shapesmayberequested. Undeformed shapesmayinclude only structural orstructural andaerodynamic elements. 4.1.4 CaseControl DeckforBladeCyclicModalFlutter Analysis Thefollowing itemsrelatetosubcase definition anddataselection forBladeCyclicModal Flutter Analysis: 1.Onlyonesubcase isallowed. 2.Desired directinputmatrices forstiffness [Kpl,mass[Mpl,anddamping [Bfpl mustbeselected viathekeywords K2PP,M2PP,orB2PP. 3.CMETHUD mustbeusedtoselectanEIGCcardfronltheBulkDataDeck.(Kmethodonly,) 4.FMETHk3D mustbeusedtoselectaFLUTTER cardfromtheBulkDataDeck. 4.1-17(05/30/86)\n5. 6. 7. 8.AERORIGIDFORMATS METHODmustbeusedtoselectanEIGRcardthat SDAMPING mustbeusedtoselectaTABDMP1 table AnSPCsetmustbeselected unlessthemodelisexistsinthe ifstructuralBulkDataDeck. damping isdesired. afreebodyorallconstraints are specified onGRIDcards,ScalarConnection CardsorwithGeneral Elements. EachNASTRAN runcalculates modesforonlyonesymmetry index,K. 4.1.5Parameters forBladeCyclicModalFlutter Analysis Thefollowing parameters areusedinBladeCyclicModalFlutter Analysis: 1. 2. 3. 4. 5. 6, 7.● ’ ASET13UT -optional, Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTflSPC -reserved forfutureoptional use,Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsymnetry asfollows: (1)ROT-rotational symmetry●(2)DRL-dihedral symmetry, usingrightandlefthalves (3)DSA-dihedral symmetry, usingsymnetric andantisymnetric components CYCSEQ-optional. Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed, Allfluid IREF-optional. A streamline number. default valueof-1related massesareignored. positive integer valueofthisparameter defines thereference IREFmustbeequaltoanSLNonaSTREAML2 bulkdatacard.The represents thestreamsurface atthebladetip.IfIREFdoesnot correspond toanSLN,thenthedefault willbetaken. 4.1-18 (05/30/86)\n8. e 9. 10. 11. 12. 13. ●14. 15. 16. 17. 18. 19.BLADECYCLICMODALFLUTTER ANALYSIS KDAMP-optional. Aninteger valueof+1causesmodaldamping termstobeputintothe complex stiffness matrixforstructural damping (+1recommended forKandKEmethods). Thedefault valueis-1. KGGIN-optional. Apositive integer ofthisparameter indicates thattheuser-supplied stiffness matrixistobereadfromanexternal file(GINOfileINPT)viatheINPUTT1 moduleintherigidformat. Thedefault valueis-1whennotneeded. KINDEX-required. Theinteger valueofthisparameter specifies asinglevalueofthe harmonic index. LFREQandHFREQ-required unlessparameter LM@DESisused.Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation, Tousethisoption, parameter LMODESmustbesetto0, LM@DES-usedunlesssettoO.Theinteger valueofthisparameter isthenumberof lowestmodestobeusedinthemodalformulation. Thedefault valueof999999will resultinallmodesbeingused. L0CATI!2N andINPTUNIT -required whenusingtheKGGINparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bytheINPUTT1 module. Thedefault valuesforLOCATION andINPTUNIT are-1andO,respectively. MAXMACH -optional. Therealvalueofthisparameter isthemaximum Machnumberbelow whichthesubsonic unsteady cascade theoryisvalid. Thedefault valueis0.80. MINMACH -optional. Therealvalueofthisparameter istheminimum Machnumberabove whichthesupersonic unsteady cascade theoryisvalid. Thedefault valueis1.01. MTYPE-optional. TheBCDvalueofthisparameter controls whichcomponents ofthe cyclicmodesaretobeusedinthemodalformulation. MTYPE=SINEusesonlysine components andMTYPE=COSINE usesonlycosinecomponents. Thedefault valueisC13SINE. NODJE-optional. Apositive integer ofthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadinfromanexternal fileviathe INPUTT2 moduleintherigidformat, NSEGS-required. Theinteger value segments inthestructural model.Thedefault value ofthisparameteris-1whennotneeded. isthenumberofidentical P!3SIT10N, UNITNUM andUSRLABEL -required whenusingtheNODJEparameter. SeeSection 5.5foradescription oftheseparameters whicharerequired bytheINPUTT2 module. The defaults forPOSITI@N, UNITNUM andUSRLABEL are-1,11andTAPEID, respectively. 4.1-19(05/30/86)\nAERORIGIDFORMATS 20. 21. 22. 23. 24.PRINT-optional. TheBCDvalue,NO,ofthisparameter suppresses theautomatic printing oftheflutter summary fortheKmethod. Thedefault valueisYESB. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. VREF-optional. Velocities aredivided bytherealvalueofthisparameter toconvert unitsortocompute flutter indices. Thedefault valueis1.0. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whenthey useinhydroelastic problems. 4.1.6Optional Diagnostic OutputforFEER Special detailed information obtainedaregenerated intheEMAmodule. Notrecommended for byrequesting DIAG16intheExecutive Control Deckis a thesameasthatdescribed 4.1.7TheAPPENDFeatureunderNormalModesAnalysis (seeSection 2.3.6).— TheAPPENDfeature canbeusedforrealeigenvalue extraction inBladeCyclicModalFlutter Analysis. SeeSection 2.3.7fordetails. 4.1.8RigidFormatErrorMessages fromBladeCyclicModalFlutter Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements IntheBladeCyclicModal Flutter Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. BLADEFLUTTER ANALYSIS ERRORNfl.1-MASSMATRIXREQUIRED FORMODALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. 4.1-20(05/30/86)"},"title":"User's Manual P19"},"/docs/users/users_manual_020/":{"data":{"":"BLADECYCLICMODALFLUTTER ANALYSIS BLADEFLUTTER ANALYSIS ERR@RNO.2-EIGENVALUE EXTRACTI13N DATAREQUIRED FflR eANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkData CaseControl DeckmustselectanEIGRset.REALEIGENVALUE DeckandMETHODinthe BLADEFLUTTER ANALYSIS ERRORNO.3-ATTEMPT TOEXECUTE MORE”THAN100LO@PS. Anattempt hasbeenmadetousemorethan100flutter loops. Thisnumbercanbeincreased by ALTERing theREPTinstruction following theFA2module. 3LADEFLUTTER ANALYSIS ERRORNO.4-REALEIGENVALUES REQUIRED FORM13DALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. BLADEFLUTTER ANALYSIS ERRORNO.5-NOGRIDP@INTDATAISSPECIFIED 13RN@STRUCTURAL ELEMENTS HAVE BEENDEFINED. Nopointshavebeendefined withGRIDorSPt31NTcardsornostructural elements havebeendefined withConnection cards. BLADEFLUTTER ANALYSIS ERRORN@.6-FREEBODYSUPPORTS NOTALLOWED. Freebodiesarenotallowed inBladeCyclicModalFlutter Analysis. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. BLADEFLUTTER ANALYSIS ERR@RNo.7-CYCLICTRANSF@RMATI@N DATAERROR. ●SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. 4.1-21(05/30/86)\nAERORIGIDFORMATS 4.1-22(05/30/86)\nAERORIGIDFORMATS 4.2MODALFLUTTER ANALYSIS ●4.2.1DMAPSequence forModalFlutter Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE kPARAM 5GP1 ●6COND 7GP2 8PARAtlL 9GP3 10TA1 11COND 12PARAM 13PARAM 14EMG 15PURGE 16COND 17EMA 18LABEL 19CONDAERO10-MODALFLUTTER ANALYSIS -APR.1986$ ALL$ PHlHL=APPENO/AJJL=APPENO/FSAVE=APPENO/CASEYY=APPEND/ CLAMAL=APPEND/OVG=APPEND/QHHL=APPENO/SKJ=APPEND/QHJL=APPEND/ QKHL=APPENO/ $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT,CSTM,BGPDT, SIL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ ERROR5,NOGPDT $ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ GEom3,EQEx1N,GEoM2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ ERROR1,NOSIMP $ //AOD/NOKGGX/l/O $ //ADD/NOMGG /1/0$ EST,CSTM,NPT,DlT,GEOM2,/KELM, KOICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBC,Y,,Y, CPROO/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ 4.2-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44EMA COND GPWG oFP LABEL EQUIV COND SMA3 AOO LABEL GP4 PARAM COND GPSP OFP LABEL EQUIV PURGE CONO MCE1 MCE2 LABEL EQUIV COND SCE1GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPOT,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,/KGGY/LUSET/NOGENL/-l $ KGGX,KGGY/KGG $ LBL1l$ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/LUSET/ S,N,MPCFl/S,N,MPCF2/S,N,SlNGLE/S,N, OMIT/S,N,REACT/O/ REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C, Y,ASETOUT/S,Y,AUTOSPC $ //*EQ,!/GpSpFLG/AIjTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCF1 $ GM/MPCFl/DM,MR/REACT $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2s KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ 4.2-2(05/30/86)\nMODALFLUTTER ANALYSIS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 45 46 47 b8 49 50 51 52 53 54 55LABEL EQUIV PURGE CONO PARAM SMP1 SMP2 LABEL CONO RBMG1 RBMG2 ●56RBMG3 57RBMGh 58LABEL 59OPO 60CONO 61EQUIV 62REAO 63OFP 64COND 65OFP ,66MTRXIN 67EQUIVLBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ GO/OMIT $ LBL5,0MIT $ //PREC/PREC $ USET,KFF,,,/GO,KAA,KOO, LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ KLL/LLL/ $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR $ LBL6$ DYNAMICS,GPL,SIL,USET/GPLD,S lLO,USETD~TFpOOLI ,,,~~EEDcEQDyN/ LUSET/S,N,LUSETD/NOTFL/NOOLT/NOPSOL/NOFRL/ NoNLFT/NoTRL/S,N,NOEEO/123/S,N,NOuE $ ERROR2,NOEE0 $ GO,GOO/NOUE/GM,GMD/NOUE $ KAA,MAA,MR,OM,EEO,USET,CASECC/LAMA,PH lA,t41,0ElGS/MOOES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARONO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARONO $ CASECC,MATPOOL, EQDYN,,TFPOOL/K2pp,M2pP,B2pp/LusETD/SSNS NoK2PP/s,N,NoM2PP/s*N,NoB2PP $ M2PP,M20D/NoA/B2PP,B200/NoA/K2PP,K200/NoA $ 4.2-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLlTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88GKAD GKAII APD PARAM PURGE COND PARAM PLTSET PRTMSG COND PLOT PRTMSG LABEL COND GI PARAM AMG COND INPUTT2 LABEL PARAMUSETO,GM,GO, ,,,,K2PP,M2PP,B2PP/,, ,GMD,GOD,K2DD,M2DD,B2DD/ *cMpLEvY/Dlsp/MoDALX/o,o/o .o/o.o/NoK2pp/ NoM2PP/NoB2PP/MPcFl/slNGLE/oMIT/NouE/ -1/-1/ -1/-1$ USETD,PHI A,,LAMA,DIT,M2DD, B20D,K2DD,cAsEcc/MHH,BHH,KHH, PHIDH/NOUE/C,Y,LMODES=O/C,Y, LFREQ=O./C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FMODE/C,Y,KDAMP $ EDT,EQDYN,ECT,BGPDT,SILD,USETD,CSTM,GPLD/EQAERO, ECTA,BGPA,SILA, USETA,SPL INE,AERO,ACPT,FLI ST,CSTMA,GPLA,SILGA/S,N,NK/S ,N,NJ/ S,N,LUSETA/S,N,BOV $ //W4PY/PFILE/O/l $ PLTSETA,PLTPARA,GPSETS~,ELSETSA/JUMPPLOT $ SKPPLT,JUMPPLOT $ //MpY,?/pLTFLG/o/l $ PCDB,EQAERO,ECTA/PLTSETA,PLTPARA, GPSETSA,ELSETSA/S,N,NSILl/S, N,JUMPPLOT $ PLTSETA //$ SKPPLT,JUMPPLOT $ PLTPARA,GPSETSA,ELSETSA,CASECC, BGPA,EQAERO, ,.,/PLoTx2/ NSILl/LUSETA/S,N,JUMPPLOT/S,N ,PLTFLG/S,N,PFILE $ PLOTX2 //$ SKPPLT $ ERROR2,NOEED $ SPLINE,USET ,CSTMA,BGPA,SIL ,,GM,GO/GTKA/NK/LUSET $ //ADD/DESTRY/O/l/ $ AERo,AcPT/AJJL,sKJ,DlJK,D2JK/NK/NJ/s,N,DEsTRY $ NODJE, NODJE$ /olJED2JE,, /C,Y,Pl=O/C,Y,P2=ll/C,Y,P3=XXXXXXXX $ NODJE$ //*ADD,t/xQHHL/l/o $ 4.2-4(05/30/86)\nMODALFLUTTER ANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 89AMP 90PARAM 91LABEL 92FA1 93EQUIV 94COND 95CEAD 96COND 97LABEL 98VDR 99COND 100OFP 101LABEL 102FA2 103 104 105 106 107 108 109 110 111CONO LABEL COND REPT JLIMP LABEL PARAML CONO XYTRANAJJL,SI(J,D1JK,D2JK,GTKA,PH loH,DlJE,D2JE,usETD,AERo/QHHL,QKHL , QHJL/NOUE/S,N,XQHHL/V,Y,GUSTAERO=- I$ //MPY/FLOOP/V,Y,NODJE=-l/O $ LOOPTOP $ KHH,BHH,MHH,QHHL,CASECC,FLIST/FSAVE ,KXHH,BXHH,MXHH/ S,N,FLOOP/S,N,TSTART/S,N,NOCEAO $ KXHH,PHIH/NOCEAD/BXHH,CLAMA/NOCEAD/KXHH, PHIHL/NOCEAD/BXHH, CLAMAL/NOCEAO/CASECC,CASEYY/NOCEAD $ VDR,NOCEAD $ KXHH,BXHH,MXHH,EED,CASECC/PH lH,CLAMA,OCEIGS,/S,N,EIGVS $ LBLZAP,EIGVS $ VDR$ CASECC,EQDYN ,USETO,PHIH,CLAMA,,/OPHIH,/CE lGEN/MODAL/ 123/S,N,NOH/S,N,NOP/FMODE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ PHIH,CLAMA,FSAVE/ PHIHL,CLAMAL,CASEYY,OVG/S,N,TSTART/ C,Y,VREF=leO/C,Y,PRINT=YES $ CONTINUE,TSTART $ LBLZAP $ CONTINUE,FLOOP $ LOOPTOP,1OO $ ERROR3 $ CONTINUE $ XYCDB//PRES////NOXYCDB $ NOXYOUT,NOXYCDB $ XYCDB,OVG ,,,,/XYPLTCE/VG/PSET/S,N,PF lLE/S,N,CARDNO/ S,N,NOXYPL $ 4.2-5(05/30/86)\nAERORIGIOFORMAIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 112COND 113XYPLOT 114LABEL 115PARAM 116CONO 117MOOACC 118ADR 119ODR1 120EQUIV 121PURGE 122CONO 123SDR1 124LABEL 125EQUIV 126CONO 127VEC 128PARTN 129LABEL 130MPYAD 131UMERGE 132UMERGE 133UMERGE 13hSDR2 135OFP 136CONONOXYOUT,NOXYPL $ XYPLTCE// $ NOXYOUT $ //ANO/pJUMp/NOp=.l/JUMppLOT $ FINIS,PJUMP $ CASEYY,CLAMAL,PH IHL,,,/CLAMALl,CPHIHl,CASEZZ,,/CE lGN$ CPHIH1,CASEZZ,QKHL,CLAMALI,SPL lNE,SILA,USETA/PKF/BOV/ C,Y,MACH =O.O/FLUTTER $ CPHIHl,PHIOH/CPHID $ CPHIO,CPHIP/NOA $ QPC/NOA $ LBL14,NOA $ USETD,,CPHIO ,,,GOD,GMO,,KFS,,/CPHIP,,QPC/l /DYNAMICS~~ $ LBLl~$ CPHID,CPHIA/NOUE $ LBLNOE,NOUE $ USETA/RP/0/A/E $ CPHIO,,RP/CPHIA,,,/l/3 $ LBLNOE $ GTKA,CPHIA,/CPHIK/l/l/O/PREC $ USETA,CPHIP,/CPHIPS/PS/P/SA $ USETA,CPHIPS,CPHIK/CPHIPA/PA/PS/~tK $ USETA,QPC,/QPAC/*PAI/P/K $ CASEZZ,CSTMA,MPT,D IT,EQAERO, SILA,,,BGPA,CLAMALI,QPAC, CPHIPA, EST,,/,OQPACl,OCPHIPA,OESCl ,OEFCl,PCPHIPA/*CEIGN’~ $ OCPHIPA,OQPACl,OESCl,OEFCl,,//S,N, CARONO $ FINIS,JUMPPLOT $ 4.2-6(05/30/86)\nMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 137 138 139 140 141 1k2 143 144 145 146PLOT PRTMSG JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABELPLTPARA,GPSETSA,ELSETSA,CASEZZ,BGPA, EQAERO,SI LGA,,PCPHIPA,, /PLoTx3/NslLl/LusETA/JuMPPLoT/PLTFLG/s,N, PFILE$ PLoTx3// $ FINIS$ ERROR3 $ //-3/FLuTTER $ ERROR2 $ //-2/*FLuTTER~~ $ ERROR1 $ //-1/FLUTTER$~ $ ERROR4 $ e147PRTPARM //-4/FLUTTER $ 148LABEL ERROR5$ 149PRTPARM //-5/~~FLUTTER $ 150LABEL FINIS$ 151PURGE DUMMY/MINUSl $ 152END $ 4,2-7(05/30/86)\n4.2.2 5. 6. 7. 9. 10. 11. 14. 16, 17. 19. 20. 21. 22. 23. 25. 26. 27. 28. 30. 32. 33, 34. 36. 38, 39.AERORIGIDFORMATS Description ofImportant DMAPOperations for\u0026dal Flutter Analysis GP1generates coordinte systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoOMAPNo.148andprintErrorMessage No.● 5ifnogridpoints aredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrix assembly andstress recovery. GotoDMAPNo.148andprintErrorMessage No.5ifnostru defined. EMGgenerates structural element stiffness andmassmatrixtb assembly bytheEMAmodule. GotoDMAPNo.18ifnostiffness matrixistobeassembled,turalelements havebeen esnddictionaries forlater EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.144andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.24ifnoweightandbalance information isrequest.ed. GPWGgenerates weightandbalance information. OFPformats theweightandbalance informtion prepared byGPWGndplacesitonthesystem outputfileforprinting. Equivalence [K\u0026]to[Kgg]iftheredrenogeneral elements. GotoDMAPNo.29iftherearenogeneral elements. SMA3formsthegeneral element stiffness matrix[Kg]. ADDcombines thestructural stiffness matrix[Kg]withthegeneral element stiffness matrix[Kg]toobtainthestiffness matrix[Kgg.J. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.35ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgglto[Knnland[MggltolMnnlifnomultipoint constraints exist. GotoDMAPNo.41ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRnjandsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 4.2-8(05/30/86)\n40. 42. 43. 44, 46. 48. 50. 51. 53.MOOALFLUTTER ANALYSIS MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knn]= [Mnn]=[inn]+-[+[,mn] [nn]+[G;][Mmn]+[Knl[Gml +[Gl[Kmml[Gml and +[M;n][Gm] +[Gj[Mmml[GmJ . Equivalence [Knn] GOtoDMAPNo,45 SCE1partitions outsingle-point constraintsto[Kff]andINnn]tO[t4ff]ifnosingle-point constraints exist” ifnosingle-point constraints exist. [1‘ff’‘fs [ -Mff’‘fs [Knn] =;-K— and [Mnn]=;M— . SfSs Sfss- Equivalence [KffltolKaaland[Nff]to[Maa]ifnoomitted coordinates exist. GotoDMAPNo.52ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix N,aalKao [Kff]=-:”,— 9 oa00 solves fortransformation matrix [Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=Laa]+[Ka][Go] , SMP2partitions constrained massmatrix [1M\\M [Mff]=:-+M~ oa00 andperforms matrixreduction [Maal=[~aa]+[M:al[Gol +[G:IIMOOIIGOI +[G@oaJ . GotoDMAPNo.58iftherearenofree-body supports. 4.2-9(05/30/86)\n54. 55. 56. 57. 59. 60. 61. 62.AERORIGIDFORMATS RBMG1partitions outfree-body supports RBMG2decomposes constrained stiffness matrix[Kkt]=[LkL][Ukl]. RBMG3formsrigidbodytransformation matrix [D]=-[KtL]-l[KLr], calculates rigidbodycheckmatrix [X]=[Krr]+[Kjr][D] andcalculates rigidbodyerrorratio E= +-J-Tx l,KrrI “ RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mr][Dl +[DTl[Mkrl +[DTIIMLLIIDI. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP@OL), andEigenvalue Extraction Data(EED). GotoDMAPNo.142andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{$al =O, calculates rigidbodymodesbyfinding amatrix [mol=[ool[mrl[$rol isdiagonal a’ndnormalized, computes rigidbody H[Oaol =“’-0 $ ‘$roL-1.- calculates modalmassmatrix [m]=[I#I~][Maa][4a] andnormalizes eigenvectors according tooneof[@ro]suchthat eigenvectors thefollowing userrequests: 4.2-10(05/30/86)\n63. 64. 65. 66. 67. 68. 69. 70. 73. 75. 76. 77.MODALFLUTTER 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.ANALYSIS OFPformats thesummary ofeigenvalue extraction information (OEIGS) prepared byREADand places itonthesystem output fileforprinting. GotoDMAPNo.146andprintErrorMessage No.4ifnoeigenvalues werefound. OFPformats theeigenvalues (LAMA)prepared byREADandplacesthereon thesystemoutput fileforprinting. MXTRINselects thedirectinputmatrices [Kp],[Mp]and[Bp]. Equivalence [Mplto[Md],[Bplto[BdlandLKpltoEK\u0026l‘f‘0constraints areapplied. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bplfoing and[Bdlandforms[Gmd]andtGod]. eigenvectors toform[$dh]andassembles stiffness, massanddamping matrices GKAMselects inmodalcoordinates:-.. [1kilo[Khh]=–~~ +[’$jh][K;d][$dh] ~ [1Mj10 [fjh] +[$:h][”:d][’$dh] ) =Th- [1biio [Bhhj=oo—.+[’$jh][B;dl[’$dhl $ where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses mi=modalmasses bi=mi211fig(fi) bi=O ki=mi41T2fi. ki=(l+ig(fi)) 42f~mi APDprocesses theaerodynamic datacardsfromEDT.ItaddsthekpointsandtheSApoints toUSETDmakingUSETA. EQAERO, ECTA,BGPA,CSTMA,GPLAandSILAareupdated toreflect the newelements. AEROandACPTreflect theaerodynamic parameters. SILGAisaspecial SILfor plotting. GotoDMAPNo.80ifnoplot PLTSETtransforms userinput PRTMSGprintserrormessagesoutputisrequested. intoaformusedtodrivethestructure plotter. associated withthestructure plotter. GotoDMAPNo.80ifnoundeformed aerodynamic orstructural element plotsarerequested. 4.2-11 (05/30/86)\nAERORIGIDFORMATS 78.PL13Tgenerates allrequested undeformed aerodynamic andstructural element plots. 79.PRTMSGprints plotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated, 81.GotoDMAPNo.142andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data, 82.GIformsatransformation matrix [Ga]whichinterpolates between aerodynamic (k)and structural (a)degrees offreedom. 84.AMGformstheaerodynamic matrixlist[Ajj],theareamatrix[Skj],andthedownwash coefficients [Dk]and[Dkl. 85.GotoDMAPNo.87iftherearenouser-supplied downwash coefficients. 86.INPUTT2 provides theuser-supplied downwash factors duetoextrapoints([De], [De]). PARAMNODJEmustbesettoenterthesematrices motionofanextrapoint,Ue,isgivenby {wj}=[De+ikfelThedownwash Wjonboxjduetothe Ue}. 89.AMPcomputes theaerodynamic matrixlistrelated tothemodalcoordinates asfollows: [1$iI$ae[$dh]=;+—$[Gkil=[GalT[+ail, Ibeeei l/D1] ,[Dh] [Dji,je [Di] =[DklTIGkil , 2ID.2]and [Dhl [Dji,e [Di]=[D$k]T[Gki]. Foreach(m,k)pair: [Djh]=[Dj~]+ik[Dj~] . Foreachgroup: [Qjhl =[Ajl~~oup ‘Djh]group ‘ [Qkh]=[sj][Qjh] s [Qih] =[GilTIQkhl [1Qih and [Qhh] ‘-– . Qeh 90.PARAMinitializes theflutter looPcounter (FLOOp) tozero. 91.Beginning ofloopforflutter. 92.FA1computes thetotalaerodynamic massmatrix[Mh],thetotalaerodynamic stiffness matrix[Kh]andthetotalaerodynamic damping matrix[B~h]aswellasa100pin9 table 4.2-12(05/30/86)\nMODALFLUTTER ANALYSIS FSAVE. FortheK-method ‘;h=(k2/b2)Mhh +(p/2)Qhhs ‘h=‘hh 93. 94. 95. 96. 98. 99. 100. ●102. 103. 105. 106. 107. 110. 111. 112. 113. 116. 117. 118.and‘h=0. Setupequivalences fortheKE-andPK-methods. GotoDMAPNo,97fortheKE-andPK-methods. CEAOextracts complex eigenvalues andeigenvectors fromtheequation [MhP2 +B;hP+Kh]{@h? =O andnormalizes eigenvectors tounitmagnitude ofthelargest component. GotoDMAPNo.104ifnocomplex eigenvalues werefound. VDRprepares eigenvectors (k3PHIH) foroutput, usingonlytheextrapointsintroduced for dynamic analysis andmodalcoordinates. GotoOMAPNo.101ifthereisnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. !3FPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. FA2appends eigenvectors toPHIHL,eigenvalues toCLAMAL, CaseControl toCASEYY, andV-g plotdatato@VG. GotoDMAPNo.108ifthereisinsufficient timeforanother flutter loop. GotoDMAPNo.108iftheflutter loopiscomplete. GotoDMAPNo.91foradditional aerodynamic configuration triplet values. GotoDMAPNo.140andprintErrorMessage No.3ifthenumberofflutter loopsexceeds 100. GotoDMAPNo.114iftherearenoX-Yplotrequests, XYTRANprepares theinputforrequested V-gplotting. GotoDMAPNo.114ifnoplotsarepossible asrequested. XYPLftTprepares therequested V-gplots. GotoDMAPNo.150andmakenormalexitiftherearenooutputrequests involving dependent degrees offreedom orforcesandstresses. MODACCselects alistofeigenvalues andeigenvectors whoseimaginary parts(velocity in inputunits)areclosetoauserinputlist. AORbuildsamatrixofaerodynamic forcesforeachaerodynamic pointandprintsrequested aerodynamic forcesforselected elements. 4.2-13 (05/30/86)\nAERORIGIDFORMATS 119.DDR1transforms thecomplex eigenvectors frommodaltophysical coordinates {$:1={+dh}{oh} . 120.Equivalence {0~1to{!lifnoconstraints areapplied. 122.GotoDMAPNo.124ifnoconstraints areapplied. 123.SDR1recovers dependent components ofeigenvectors 1 andrecovers single-point forces ofconstraint {qs)=[Ksl{@f}Y __”_={Q;}. qs I 125.Equivalence {$}to{O;}iftherearenoextrapointsintroduced fordynamic analysis. 126.GotoDMAPNo.129iftherearenoextrapoints, 127.VECgenerates ad-sizepartitioning vector(RP)forthea-ande-sets {Udl+{Ua}+{Ue}. 128.PARTNperforms partition of{$:}usingRP 130.MPYADrecovers thediSP1acements attheaerodynamic points(k) {’$;}=[G[a]T{$:}. 131.UMERGEisusedtoexpand{$;}totheps-set. 4.2-14 (05/30/86)\nMODALFLUTTER ANALYSIS 13z,UMERGEplaces{$;}initsproperplaceinthedisplacement vector 133.UMERGEisusedtoexpand{Q~}tothepa-set. 134.SDR2calculates element forces (OEFCl) adstresses (OE$C1) andprepares eigenvectors (OCPHIPA) andsingle-point forcesofconstraint (OQPACl) foroutput andPCPHIPA fordeformed plotting. 135.!3FPformats thetables printing. 136.GotoDMAPNo.150and plotsarerequested. 137. 138. 139. 141. 143. 145. 147. 149.prepared bySDR2andplacesthemonthesystemoutputfilefor makenormalexitifnodeformed aerodynamic orstructural element PLOTprepares alldeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated. GotoDMAPNo.150andmakenormalexit. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No,4andterminate execution. PrintErrorMessage No.5andterminate execution. 4.2-15 (05/30/86)\nAERORIGIDFORMATS 4.2.3Output forModalFlutter Analysis TherealEigenvalue Surrrnary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues areincluded eventhoughallmaynotbeusedinthemodalformulation, Thecomplex eigenvalues areincluded intheFlutter Summary andareprinted foreach aerodynamic loop. Thegridpointsingularities fromthestructural modelarealsooutput. AFlutter Summary foreachvalueoftheconfiguration PRINT=N@.ThisshowsMachnumber, density, reduced frequency, eachcomplex eigenvalue, V-gandV-fplotsmayberequested bytheXY~UTcontrolparameters isprinted outunless velocity, damping, andfrequency for cardsbyspecifying thecurvetype asVG.The“points” areloopnumbers andthe“components” areGorF. Printed outputofthefollowing types,sortedbycomplex eigenvalue rootnumber(SklRTl) and (m,k,p),mayberequested forallcomplex eigenvalues kept,eitherasrealandimaginary partsor asmagnitude ~ndphasedngle(0°-360°lead). (Eigenvectors arenotavailable fortheKE-method. ) 1.Theeigenvector foralistofPHYSICAL andAERODYNAMIC points(gridpoints, extra points, andaerodynamic points) orSOLUTION points(modalcoordinates andextrapoints). 2.Nonzero components ofthesingle-point forcesofconstraint foralistofPHYSICAL points. 3.Complex stresses andforcesinselected elements. ThefIFREQUENCY CaseControl cardcanselectasubsetofthecomplex eigenvectors fordatarecovery. Inaddition, undeformed anddeformed shapesmayberequested. Undeformed shapesmayinclude only structural orstructural andaerodynamic elements. Theeigenvectors usedinthemodalformulation maybeobtained fortheanalysis pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis RigidFormatorbymakingamodified restart usingtheNormalModesAnalysis RigidFormat. 4,2-16(05/30/86)\nMODALFLUTTER ANALYSIS 4.2.4CaseControl DeckforModalFlutter Analysis ●Thefollowing itemsrelatetosubcase definition anddataselection forModalFlutter Analysis: 1.Onlyonesubcase isallowed. 2.Desired directinput mustbeselected via 3.CMETH!3D mustbeused 4.FMETHOD mustbeusedmatrices forstiffness [Kp], mass[Mp], anddamping [B~p] thekeywords K2PP,M2PP,orB2PP. toselectanEIGCcardfromtheBulkDataDeck,(Kmethodonly.) toselectaFLUTTER cardfromtheBulkDataDeck. 5.METHODmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 6.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping isdesired. 4.2.5Parameters forModalFlutter Analysis Thefollowing parameters areusedinModalFlutter 1. 4. 5. 6.ASETOUT -optional. Apositive integer value datablocktobegenerated bytheGP4module. thegeneration ofthisoutputdatablock. TheAnalysis: ofthisparameter causestheASEToutput Anegative integer valueorOsuppresses default valueisO. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. CfiUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLTL CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. GUSTAERO -optional. Aninteger valueof+1causesgustloadstobecomputed. The default valueis-1fornogustloads. KDAMP-optional. Aninteger valueof+1causes complex stiffness matrixforstructural damping Thedefault valueis-1.modaldamping termstobeputintothe (+1recommended forKandKEmethods). LFREQandHFREQ- required, unlessLMODESisused.Therealvaluesoftheseparameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQistheupperlimit) ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODES mustbesettoO. 4.2-17(05/30/86)\nI 8. 9. 10. 11. 12. 13. 14.AERORIGIDFORMATS LM13DES-required, unlessLFREQandHFREQareused.Theinteger valueofthisparameter isthenumberoflowestmodestobeusedinthemodalformulation. MACH-optional. Therealvalueofthisparameter selects theclosest Machnumbers to beusedtocompute aerodynamic matrices. Thedefault valueis0,0. NODJE-optional. Apositive integer ofthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadfromanexternal fileviathe INPUTT2 moduleintherigidformat. Thedefault valueis-1whennotneeded. Pl,P2andP3-required whenusingtheNODJEparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bytheINPUTT2 module. Thedefault valuesforPl,P2andP3areO,11andXXXXXXXX, respectively. PRINT-optional. TheBCDvalue,NO,ofthisparameter suppresses theautomatic printing oftheflutter summary fortheKmethod. Thedefault valueisYES. VREF-optional. Velocities aredivided bytherealvalueofthisparameter toconvert unitsortocompute flutter, indices. Thedefault valueis1.0. WTMASS-optional, Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 4.2.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 4.2.7TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction Section 2.3.7fordetails.2.3.6). inModalFlutter Analyss.See 4.2.8RigidFormatErrorMessages fromModalFlutter Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalFlutter Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. 4.2-18(05/30/86)"},"title":"User's Manual P20"},"/docs/users/users_manual_021/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#AERORIGIDFORMATS\n4.3MODALAEROELASTIC RESPONSE\n4.3.1DMAPSequence forModalAeroelastic Response\nRIGIDFORMAT DMAPLISTING\nAPRILIg86RELEASE\nAERCAPPROACH, RIGIDFORMAT 11\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"MODALFLUTTER ANALYSIS MODALFLUTTER ANALYSIS ERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORMODALFORMULATION. l’hemassmatrixisnul” nonstructural masswas card. MODALFLUTTER ANALYSIS EIGENVALUE ANALYSIS.because eithernostructural elements weredefined withConnection cards, notdefined onaProperty cardorthedensity wasnotdefined onaMaterial ERRfiRMESSAGE NO.2-EIGENVALUE EXTRACTION DATAREQUIRED FORREAL Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MUDALFLUTTER ANALYSIS ERRORMESSAGE NO.3-ATTEMPT T@EXECUTE MORETHAN100LO@PS. Anattempt hasbeenmadetousemorethan100flutter loops. Thisnumbercanbeincreased by ALTERing theREPTinstruction following theFA2module. MODALFLUTTER ANALYSIS ERR~RMESSAGE No.4-REALEIGENVALUES REQUIRED Fl!lRMOOALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser, M@DALFLUTTER ANALYSIS ERR@RMESSAGE NO.5-NOGRIDPOINTDATAISSPECIFIED flRN!3STRUCTURAL ELEMENTS HAVEBEENOEFINED. Nopointshavebeendefined withGRIDorSPOINTcardsornostructural elements havebeendefined withConnection cards. 4.2-19(05/30/86)\nAERORIGIDFORMATS 4.2-20 (05/30/86)\nAERORIGIDFORMATS 4.3MODALAEROELASTIC RESPONSE 4.3.1DMAPSequence forModalAeroelastic Response RIGIDFORMAT DMAPLISTING APRILIg86RELEASE AERCAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6COND GP2 8PARAML 9PARAML 10GP3 11TA1 12CONO 13PARAM 14PARAM 15EMG 16PURGE 17COND 18EMA 19LABEL 20cONDAERO11-MOOALAEROELASTIC RESPONSE -APR.1986$ ALL$ AJJl.=APPEND/QHHL=APPEND/QKHL=APPEND/QHJL=ApPEND/sKJ=APpENO $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPOT,CSTM,BGPDT, SIL/S,N,LUSET/ S,N,NOGPDT/f’llNUSl=-l $ ERROR1,NOGPDT $ GEoM2,EQExlN/EcT $ PCOB//PRES/V,Y,NOOJE=-l///JUMPPLOT $ XYCDB//PRES////NOXYCDB $ GEom3,EQEx1N,GEom2/,GPTT/tJoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GF’EcT,)/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR3,NOSIMP $ //*ADOY/NOKGGX/l/O $ //ADD/NOMGG /1/0$ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MOICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,YC,Y ,CPBAR/C,y,cpROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ c,Y,cPQOPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ v,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $I I 94.3-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 b4 45EMA COND GPWG OFP LABEL EQUIV COND SMA3 AOD LABEL GP4 PARAM PURGE COND GPSP OFP LABEL EQUIV COND MCE1 14CE2 LABEL EQUIV COND SCE1GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GROPNT $ BGPDT,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,/KGGY/LUSET/NOGENL/-l $ KGGX,KGGY/KGG $ LBL1l$ CASECC,GEOM4,EQEX lN,GPOT,BGPDT,CSTM,GPST/RG, ,USET,ASET/LUSET/ s,N,MPcFl/s,N,MPcF2/s,N,slNGLE/s,N,oMlT/s,N,REAcT/o/s,N, REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y,AUTOSPC $ //EQ/GPSPFLG/AUTOSPC/O $ GM/MPCFl/OM,MR/REACT $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/l(FF,KFS,,MFF ,,$ 4.3-2(05/30/86)\nMODALAEROELASTIC RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 46 47 48 49 50 51 52 53 511 55 56 57 58 59 60 61 62 63 64 65 66 67 68LABEL EQUIV PURGE COND PARAM SMP1 SMP2 LABEL CONO RBMG1 RBMG2 RBMG3 RBAG4 LABEL DPO CONO EQUIV READ OFP COND OFP MTRXIN EQUIVLBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ GO/OMIT $ LBL5,0MIT $ //*PREC)~/PREC $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL ,MLR,MRR $ KLL/LLL/ $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR LBL6$$ DYNAMICS,GPL,SIL,USET/GPLD ,SILO,USETD,TFPOOL, OLT,PSDL ,FRL,,TRL, EED,EQOYN/LUSET/S,N,LUSETD/NOTFL/NOOLT/S,N,NOPSDL/ NOFRL/NONLFT/NOTRL/S,N,NOEED/123/S ,N,NOUE $ ERROR2,NOEED $ GO,GOD/NOUE/GM,GMD/NOUE $ l(AA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,/’/S,N,CARDNO $ cAsEcc,MATPooL,EQDYN,,TFPooL/K2PP,M2PP,B2PP/LusETD/s,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ M2PP,M200/NoA/B2PP,B2Do/NoA/K2PP, K2DD/NoA $ 4.3-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69 70 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89GKAD USETD,GM,GO, ,,,,K2PP,M2PP,B2PP/ ,,,GMo,GoD,K2DD,M2Do,B2DD/ *CMPLE1/f(/*DlSP~/kMODAL,?/O,O/OOO/OOO/NOK2fJp/ NoM2PP/NoB2PP/MPcFl/slNGLE/oMIT/NouE/ -1/-1/-1/-1 $ GKAM USETD,PHIA,,LAMA,DIT,M200, B2Do,K20D,cAsEcc/MHH,BHH,KHH, PHIDH/NOUE/C,Y,LMODES=O/C, Y,LFREQ=O./C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FflODE/C,Y,KOAMP $ APD ECIT,EQDYN, ECT,BGPDT,SI LO,USETO, CSTM,GPLO/EQAERO,ECTA,BGPA, SILA, USETA,SPL INE,AERO,ACPT,FLIST, CSTMA,GPLA,SILGA/S,N,NK/S,N,NJ/ S,N,LUSETA/S,N,BOV $ PARAll PURGE CONO PARAM PLTSET//*MpY#c/pFILE/D/l $ PLTSETA,PLTPARA,GPSETSA,ELSETSA/JUMPPLOT $ SKPPLT,JUMPPLOT $ //MpY/pLTFLG/o/l $ PCOB,EQAERO,ECTA/PLTSETA,PLTPARA,GPSETSA, ELSETSA/S,N,NSILl/S,N, JUMPPLOT S PRTMSG COND PLOTPLTSETA //$ SKPPLT,JUMPPLOT $ PLTPARA,GPSETSA,ELSETSA,CASECC,BGPA, EQAERO, ,,,,/PLOTX2/ NSIL1/LUSETA/S,N,JU14PPLOT/S,N,PLTFLG/S,N,PF ILE$ PRTMSG LABEL GIPLOTX2 //$ SKPPLT $ SPLINE,USET ,CSTMA,BGPA,SIL ,,GM,GO/GTKA/NK/ LUSET$ PARAH AMG COND INPUTT2 LABEL PARAM AMP//*ADDit/DEsTRY/o/l/ $ AERo,AcPT/AJJL,sKJ,olJK,D2JK/NK/NJ/s,N,DEsTRY $ NODJE,NODJE $ /DlJE,D2JE,,,/Cjy,PI=O/C,y,P2=I 1/c,Y,P3=xxxxxxxx $ NOOJE$ //ADD,/xQHHL/]/o $ AJJL,SKJ,D1JK,D2JK,GTKA,PHIOH, olJE,D2JE,usETD,AERo/QHHL,QKHL, QHJL/NOUE/S,N,XQHHL/V,Y,GUSTAERO=- 1$ 4.3-4(05/30/86) I\nMODALAEROELASTIC RESPONSE RIGIDFORMAT OMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIDFORHAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 90FRLG 91PARAM 92PURGE 93GUST 94EQUIV 95FRRD2 96EQUIV 97COND 98IFT 99LABEL 100MODACC 101AOR 102VDR 103CONO 104SDR3 105OFP 106CONO 107XYTRAN 108COND 109XYPLOT 110LABEL 111PARAM 112COND 1}3SOR1CASECC,USETD,DLT,FRL,GMD,GOO,O lT,PHIDH/PPF,PSF,PDF,FOL,PHF 1/ wIoDAL*/S,N,FREQY/S,N,AW $ //NOT /NOFRY/FREQY $ PPF/NOFRY $ CASECC,OLT,FRL,OIT,QHJL, ,,ACPT,CSTMA, PHF1/PHF/ S,N,NOGUST/BOV/C,Y,HACH/C,Y,Q $ PHFl,PHF/NOGUST $ KHH,BHH,MHH,QHHL,PHF,FOL/UHVF/BOV/C,Y,Q/C,Y,MACH $ UHVF,UHVT/FREQY/FOL,TOL/FREQY $ IFTSKP,FREQY $ UHVF,CASECC,TRL,FOL/UHVT,TOL/C,Y, IFTM=O $ IFTSKP $ CASECC,TOL,UHVT,,,/TOL?,UHVTl ,,,/APP $ UHVT1,CASECC,QKHL,TOL1,SPLI NE,SILA,USETA/PKF/BOV/ C,Y,MACH/APP $ CASECC, EQOYN,USETD, UHVTl,TOLl,XYCDB,/OUHVl ,/APP/MODAL/ O/S,N,NOH/S,N,NOP/FMODE $ NOH,NOH$ OUHVI,,,,,/0uHv2,,,,, $ 0UHV2,,, ,,//S,N,CARDNO $ NOH,NOXYCDB $ XYCDB,0UHV2, ,,,/XYPTTA/APP/HSET/S,N,PF lLE/S,N,CARDNO/ S,N,NOXYPL $ NOH,NOXYPL $ XYPTTA $ NOH$ //AND/PJUMP/NOP/JUMPPLOT $ FINIS,PJUMP $ USETO,,PHIDH, ,,GOD,GMD, ,KFS,,/PHIP,,QP/l/DYNAHICS $ 4.3-5(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING llkEQUIV 115CONO 116VEC 117PARTN 118LABEL 119MPYAO 120UMERGE 121UMERGE 122UMERGE 123soR2 124COND 125SDR2 126SDR3 127LABEL 128SOR3 129ODRMM 130OFP 131SCAN 132OFP 133COND 134MPYAD 135SCIR2 136PLOT 137PRTMSGPHIDH,PHIAH/NOUE $ NOUE1,NOUE $ UiETO/EVEC/D/A/E $ PHIDH,,EVEC/PHIAH,,,/l $ NOUE1$ GTKA,PHIAH,/PHIK/l/l/O/PREC $ USETA,PHIP,/PHIPS/PS/*P~~/SA $ USETA,PHIPS,PHIK/PHIPA/PA/PS/K $ USETA,QP,;QPA/*PA~~/P/PS $ CASECC,CSTMA,MPT,OIT,EQAERO,S ILA,,,BGPA,LAMA,QPA,PHIPA, EST,XYCOB,/,MQPl,MPHIPAl,MESl,MEF 1,/Mt4RElG $ NOPF,NOFRY $ CASECC, ,,,EQDYN,,,,,PPF,,,,XYCOB,/OPpl ,,,,,/FREQ $ OPP1,,,,,/QPP2,,,,,/$ NOPF$ MPHIPAl,MESl,MEFl,MQPl,,/MPH IPA2,MES2,MEF2,11QP2, ,$ CASECC,UHVT1,TOL1,MPHI PA2,MQP2 ,MES2,MEF2,XYCOB,EST,MPT,0 lT/ 0UPV2,0QP2,0ES2,0EF2, $ ouPv2,,oEs2,0EF2,0QP2,//s,N,cARDNo $ cAsEcc,oEs2,0EF2/oEsF2/c,N,RF $ 0ESF2,,,,,//s,N,CARONO $ P2,JUMPPLOT $ PHIPA,UHVTl,/UVTl/O $ CASECC,CSTMA ,,,EQAERO, ,,,BGPA,TOL ,,UVTl,,,/,,,,,PUVPAT/APP $ PLTPARA,GPSETSA,ELSETSA,CASECC,BGPA, EQAERO,SI LGA,,PUVPAT, ,/ PLOTX3/NSILl/LUSETA/JUMPPLOT/PLTFLG/PF ILE$ PLoTx3// $ 4.3-6(05/30/86)\nMODALAEROELASTIC RESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 138LABEL 139COND lkOXYTRAN 141COND lk2XYPLOT 143LABEL 144COND 145CONO 146RANOOM 147COND ●148XYTRAN 149COND 150XYPLOT 151JUMP 152LABEL 153PRTPARM 154LABEL 155PRTPARH 156LABEL 157PRTPARM 158LABEL 159PRTPARM 160LABEL 161PURGE 162ENDP2$ FINIS,NOXYCOB $ xYcoB,,oQP2,0uPv2,0Es2,0EF2/xYPLTT/APP/PsET~/ S,N,PFILE/S,N,CARONO/S.N,NOXYPL $ NOXYPLTT,NOXYPL $ XYPLTT $ NOXYPLTT $ FINIS,NOFRY $ FINIS,NOPSDL $ XYCDB,D IT,PSDL, 0UPV2,,0QP2,0ES2, oEF2,cAsEcc/PsoF,AuTo/ S,N,NORN $ FINIS,NORN $ XYCDB,PSDF,AUTO ,,,/XYPLTR/RANO/tPSETt/S,N ,PFILE/ S,N,CARDNO/S,N,NOXYPL $ FINIS,NOXYPL $ XYPLTR $ FINIS$ ERROR2 $ //-2/ftAERoREsP* $ ERROR1 $ //-1/AERORESP $ ERROR4 $ //-k/AERORESP $ ERROR3 $ //-3/*AERoREsPf( $ FINIS$ OUMMY/MINUSl $ s 14.3-7(05/30/86)\n4.3,2 5. 6. 7. 10. 11, 12, 15. 17. 18, 20. 21. 22. 23. 24. 26. 27. 28. 29. 31. 34. 35, 36. 38. 39. 40.AERORIGIOFORMATS Descrtion ofImportant DMAPOperations forModalAeroelastic Response—. GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal gridpointnumbers. e GotoDMAPNo.158andprintErrorMessage No.3ifnogridpointsaredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates GridPointTemperature Table(element temperature), TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.158andprintErrorMessage No.3ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrix tables anddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.19ifnostiffness matrix istobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.154andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.25ifnoweightandbalance information isrequested. GPWGgenerates weight andbalance information. @FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.30iftherearenogeneral elements. SMA3formsthegeneral element stiffness matrix [Kgl. AODcombines thestructural stiffness matrix[Kg]withthegeneral element stiffness matrix [Kg]toobtain thestiffness matrix [Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.37ifnopotential gridpointsingularities exist, GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.42ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn]andsolvesfor multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 4.3-8(05/30/86)\nMODALAEROELASTIC RESPONSE 41.MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[Knl[Gml +[Gl[Kmml[Gnll and [Mnn]=[nnl+[@Mmnl +[M;nl[Gml +[#JIMmml[Gml . 43.Equivalence [Knnlto[Kffland[Mnn]tO[Mff]ifnosin91e-Point constraints exist. 44.GotoDMAPNo.46ifnosingle-point. constraints exist. 45.SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K— [1ff‘‘fs and[Mnn]= ;M– . SfSs SfSs 47.Equivalence [Kfflto[Kaaland[Mfflto[Maa]ifnoomitted coordinates exist. 49.GotoDMAPNo.53ifnoomitted coordinates exist. ●51.SMP1partitions constrained stiffness matrix [1KIKao [Kff]=+—, OaIKoo solvesfortransformation matrix[Go]=-[Kool-l[Koa] andperforms matrixreduction [Kaal=[aal+[K:a][Go] . 52.SMP2partitions constrained massmatrix [1MIMao [Mff]=flM— oa00 andperforms matrixreduction [Maa]=[iaal+[M:al[Gol +[G:IIMOOIIGOI +[G:l[Moal . 54.GotoDMAPNo.59ifnofree-body supports exist. 4.3-9(05/30/86)\n55. 56. 57. 58. 60. 61. 62. 63.AERORIGIDFORMATS RBMG1partitions outfree-body supports RBMG2decomposes constrained stiffness matrix[KLL]=[LtL][(lkt]. RBMG3formsrigidbodytransformation matrix calcu[D]=-[KLi]-l[KLr], atesrigidbodycheckmatrx [x]=[Krr] andcalculates rigidbodyerrorratio E. xl +-l-rIKrr RBMG4formsrigidbodymassmatrix ,-+[Kr][D] . [nIr]=[Mrr]+[Mr][D] +[DT][MLr] +[DT][Mli][D]. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP!20L), andEigenvalue Extraction Data(EED). GotoDMAPNo.152andprintErrorMessage No,2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{$a} =O, calculates rigidbodymodesbyfinding amatrix [mol=[+ol[mrl[orol isdiagonal andnormalized, computes rigidbody [1D+ [f$aol❑ — , ‘$ro calculates modalmassmatrix [ml=[O~l[Maal[Oal andnormalizes eigenvectors according tooneof[oro]suchthat eigenvectors thefollowing userrequests: 4.3-10 (05/30/86)\nMODALAEROELASTIC RESPONSE 1)Unitvalueofaselected component o2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. 64.IZIFPformats thesummary ofeigenvalue extraction information (PJEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. 65.GotoDMAPNo.156andprintErrorMessage No.4ifnoeigenvalues werefound. [\u003e6.OFPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. 67.MXTRINselects thedirectinputmatrices [Kp],[Mp]and[Bpl. 68.Equivalence [Mplto[Mid],[Bp]to[Bd]and[Kplto[K~~lifnoconstraints areapplied. 69.GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,forming [K;d][Md]and[B:d]andforms[Gmd]and[God]. 70.GKAMselects eigenvectors toform[$dh]andassembles stiffness, massanddamping matrices inmodalcoordinates: [1k.1o [Khh]=;~~ +[$h][K:d][@dh] , [1milo[Mh]=;!;+[$:h][”:@$dhl3 [1bilo [Bhh]=-+T +[$\u0026][B;d][@dhl ~ where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses mi=modalmasses bi❑ mi2nfig(fi) bi=O k.emT2f2 1i iki❑ (l+ig(fi)) 4112fmi 71.APDprocesses theaerodynamic datacardsfromEDT.ItaddsthekpointsandtheSApoints toUSETDmakingUSETA. EQAERO, ECTA,BGPA,CSTMA,GPLAandSILAareupdated toreflect the newe“lements. AERflandACPTreflect theaerodynamic parameters. SILGAisaspecial SILfOr plotting 74.GotoDMAPNo.81ifnoplot 76.PLTSETtransforms userinput 77.PRTMSGprintserrormessagesoutputisrequested. intoaformusedtodrivethestructure plotter. associated withthestructure plotter. 4.3-11(05/30/86)\n78. 79. ‘80. 82. 84. 85. 86.AERORIGIDFORMATS GotoDMAPNo.81ifnoundeformed aerodynamic orstructural element plotsarerequested. PLf3Tgenerates allrequested undeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated. GIformsatransformation matrix [G(a]whichinterpolates between aerodynamic (k)and structural (a)degrees offreedom. AMGformstheaerodynamic matrixlist[Ajjl,theareamatrix[Skj],andthedownwash coefficients [Dk]and[Dkl. GotoDMAPNo.87iftherearenouser-supplied downwash coefficients. INPUTT2 provides theuser-supplied downwash factors duetoextrapoints([De],[De]). PARAMN@DJEmustbesettoenterthesematrices. Thedownwash Wjonboxjduetothe motionofanextrapoint,Ue,isgivenby {wj}=[De+ikllfe]{ue} . 89.AMPcomputes theaerodynamic matrixlistrelated tothemodalcoordinates asfollows: I I 90. 93. 94.Foreach Foreach andM$aiI@ [$dh]=—+= , $eiI@ee[Gki]=[GaIT[ai] \u003e [Dil =[DklTIGkil , 2tD?] and [Dh][Dji ,e [Di]=[Dk]T[Gki]. (m,k)pair: [Djh]=[Dh]+ik[Dh] . group: [Qjh] =[A~j]~~OUP‘Djh]group ‘ [Qkh]=[skj][Qjh] , [Qjh]=[Gkj]T[Qkh] [1Qjh[Qhh]+‘–.Qeh FRLGformsthedynamic loadvector{Ph}fromthefrequency response dataortransient data usingaFourier Transform. GUSTformstheloading duetogustsandaddstothedirectloads. Equivalence {PHF1}to{PHF}iftherearenogustloads.I e 4.3-12(05/30/86)\n95. 96. 97. 98. 100. 101. 102. 103. 104. 1050 106, 107. 108. 109. 112. 113. 114. 115. 116. 117. 119. 120.MODALAEROELASTIC FRRD2solvesforthemodaldisplacements usingRESPONSE [-MhhU2+ iBhhti+K+qQhh(k)]Uh =Ph(u). Equivalence {UHVF}to{UHVT}andFtlLtoTOLifitisafrequency response formulation. GotoDMAPNo.99ifitisafrequency response formulation. IFTperforms Inverse Fourier Transform ofthedisplacements fortransient formulation. MODACCusesdatafrom!3FREQor!JTIMEdatacardstoselectsolutions fordatarecovery. ADRproduces aerodynamic loadoutput(PKF)forselected pointsinfrequency response only. VDRprepares solution setdisplacements (klJHVl), sortedbyfrequency ortime,foroutput, Thesolution setincludes modeamplitudes andextrapoints. GotoDMAPNo.110iftherequest isforoutputsortedbyfrequency ortimestep, SOR3prepares requested outputsortedbysolution setpoints. OFPformats thetableprepared bySDR3foroutputsortedbysolution setpointandplacesit onthesystemoutputfileforprinting. GotoDMAPNo.110ifnoX-Yplotsarerequested; XYTRANprepares theinputforX-Yplotting ofsolution setpointsversustimeorfrequency. GotoDMAPNo.110ifnoplotsarepossible asrequested. XYPLOTprepares therequested X-Yplotsofsolution setpointsversustimeorfrequency. GotoDMAPNo.160ifnooutputforphysical pointsisrequested, SDR1recovers physical displacements (PHIP)andforcesofconstraint (QP)forthereal eigenvectors associated withthemodes. Equivalence {@dh)to{@ah}iftherearenoextrapointsintroduced fordynamic analysis, GotoDMAPNo.118ifnoextrapointsarepresent. VECgenerates ad-sizepartitioning vector(EVEC)forthea-ande-sets {Ud}+{Ua}+{Ue}. PARTNperforms partition of{$dh}usingEVEC {1@ah {$dh}‘\u003e—. 0 MPYADrecovers thedisplacements attheaerodynamic {I$kJ=[G;a]T{$ah} UMERGEisusedtoexpand{Qp}totheps-set.points(k) . 4.3-13 (05/30/86)\nAERORIGIDFORMATS 121.UMERGEplaces{Ok}initsproperplaceinthedisplacement vector 122.UMERGEisusedtoexpand{Qp}tothepa-set. 123.SDR2calculates element forces (MEF1)andstresses (MES1)andprepares eigenvectors (MPHIPAI) andsingle-point forcesofconstraint (MQP1)foroutputsortedbyfrequency or time. 124.GotoDMAPNo.127ifitisnotafrequency response formulation, 125,SDR2prepares loadvectors foroutput(!3PPI)sortedbyfrequency. 126.SDR3prepares requested loadoutputsortedbypointnumber, 128.SDR3prepares requested modalquantities outputsortedbypointnumber. 129.DDRMMprepares asubsetoftheelement forces(9EF2)andstresses (OES2), displacement vectors (!3uPv2), andsingle-point forcesofconstraint (OQP2)foroutputsortedbypoint numberorelement number. 130,OFPformats therequested physical outputprepared byDDRMMandplacesitonthesystem outputfileforprinting. 131.SCANexamines theelement stresses andforcescalculated byDDRMMandgenerates scanned outputthatmeetsthespecifications setbytheuser. 132.!ilFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting, 133.GotoDMAPNo.138ifnodeformed aerodynamic orstructural elemer~t plotsarerequested. 134.MPYADgenerates vectors forusebytheSDR2module. 135. 136. 137. 139. 140. 141. 142. 144.SDR2prepares vectors fordeformed plotting. PLOTprepares allrequested deformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated, GotoDMAPNo.160andmakenormalexitifnoX-Yplotsarerequested. XYTRANprepares theinputforphysical pointX-Yplots. GotoDMAPNo.143ifnoplotsarepossible asrequested. XYPL!3Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesoftheconstraint versusfrequency ortime. GotoDMAPNo.160andmakenormalexitifitisatransient response formulation. 145.GotoDMAPNo.160andmakenormalexitifnopowerspectral density functions or autocorrelation functions arerequested. 146.RANDOMcalculates powerspectral density functions (PSDF)andautocorrelation functions (AuTO)usingthepreviously calculated frequency response. 147.GotoDMAPNo,160andmakenormalexitifnoX-YplotsofRANDOMcalculations are requested.I I I I 148,XYTRANprepares theinputforrequested X-YplotsoftheRAND!3Moutput. 4.3-14 (05/30/86)\n149. e150. 151. 153. 155. 157. 159.MODALAEROELASTIC RESPONSE GotoDMAPNo.160andmakenormalexitifnoplotsarepossible asrequested. XYPLOTprepares therequested X-Yplotsofautocorrelation functions andpowerspectra density functions. GotoDMAPNo.160andmakenormalexit. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.3andterminate execution. 4.3-15(05/30/86)\n4.3.3 NormalAERORIGIDFORMATS OutputforModalAeroelastic Response TherealEigenvalue Summary TableandrealEigenvalue Analysis Summary, as ModesAnalysis (seeSection 2.3.3), areautomatically printed. Thefollowing printed output, sortedbypointnumberorelement numberdescribed under (Sf3RT2), is available, eitherasrealandimaginary partsorasmagnitude andphaseangle(0°-360°lead),for thelistoffrequencies ortimesspecified byINFREQUENCY orOTIME(intransient formulations, these arereal): 1. 2. 3. The 1. 2, The 1. 2. 3. 4. 5. The 1. 2.Displacements, velocities andaccelerations foralistofPHYSICAL points(gridpoints andextrascalarpointsintroduced fordynamic analysis) orSOLUTIflN points(points used intheformulation ofthedynamic equation). Velocities andaccelerations arenot available fortransient analysis. Nonzero components oftheapplied loadvector andsingle-point forces ofconstraint for alistofPHYSICAL points. Aerodynamic forces onselected aerodynamic elements. Stresses andforces inselected elements (ALLavailable onlyforSORTl). following printed outputisavailable forRandomResponse calculations: Powerspectral density function andmeandeviation fortheresponse ofselected components forpointsorelements. Theexpected frequency ofzerocrossings. Autocorrelation function fortheresponse ofselected components forpointsorelements. following plotter outputisavailable: Undeformed plotofthestructural model. Deformed shapesoftheaerodynamic andstructural modelforselected intervals. X-Yplotofanycomponent ofdisplacement, velocity oracceleration ofaPHYSICAL point oraS9LUT10N point. X-Yplotofanycomponent oftheapplied loadvectororsingle-point forceof constraint. X-Yplotofanystressorforcecomponent foranelement. following plotter outputisavailable forRandomResponse calculations: X-Yplotofthepowerspectral density versusfrequency fortheresponse ofselected components forpointsorelements. X-Yplotoftheautocorrelation versustimelagfortheresponse ofselected components forpointsorelements. 4.3-16 (05/30/86)\nMODALAEROELASTIC RESPONSE Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabuarform(see eVolume I,Section 4.3). Also,aprinted summary isprepared foreachX-Yplotwhichincludes the maximum andminimum valuesoftheplotted function. 4.3.4CaseControl DeckforModalAeroelastic Response Thefollowing itemsrelatetosubcase definition Response: 4.3.51. 2, 3, 4, 5. 6. 7. 8.METHODmustappearabovethesubcase levelto Atleastonesubcase mustbedefined foreach M2PP,B2PP)orfrequencies.anddataselection forModalAeroelastic selectaneigenvalue extraction method. uniquesetofdirectinputmatrices (K2PP, Consecutive subcases foreachsetofdirectinputmatrices orfrequencies areusedto definetheloading condition -onesubcase foreachdynamic loading condition. Constraints mustbedefined abovethesubcase level. DLOADmustbeusedtodefineafrequency-dependent loading condition foreachsubcase. Iftransient loadsareselected, aFourier Transform isused frequency-dependent loads. Allloadsinonerunmustbeofthesame FREQUENCY mustbeusedtoselectone,andonlyone,FREQ,FREQ1,or BulkDataDeck.IfTLOADsareselected, aTSTEPmustbeselected.tocompute type. FREQ2cardformthe 1NFREQUENC% (OTIME) maybeusedabovethesubcase levelorwithin eachsubcase toselect asubsetofthesolution frequencies (times) foroutputrequests. Thedefault istouse allsolution frequencies (times). IfRandomResponse calculations aredesired, RANDTicardsfromtheBulkDataDeck.Only usedforeachsetofdirectinputmatrices. Parameters forModalAeroelastic ResponseRANDOMmustbeusedtoselectRANDPSand oneOFREQUENCY andFREQUENCY cardcanbe Thefollowing parameters areusedinModalAeroelastic Response: 1,ASETOUT -optional. Apositive integer valueofthisparameter causestheASET output datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. 4.3-17(05/30/86)\n3. 4. 5. 6. 7. 8, 9. 10. 11. 12. 13.AERORIGIDFORMATS Cfl.lPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements @ thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignore~. GUSTAERO -optional. Aninteger valueof+1causesgustloadstobecomputed. The default valueis-1fornogust loads. IFTM-optional. Theinteger valueofthisparameter selects themethodforthe integration oftheInverse Fourier Transform. Aninteger valueofOspecifies a rectangular fit;1specifies atrapezoidal fit;and2specifies acubicsplinefitto obtainsolutions versustimeforwhichaerodynamic forcesarefunctions offrequency. Thedefault value KDAMP-optional. complex stiffness Thedefault value LFREQandHFREQ-isO. Aninteger valueof+1causesmodaldamping termstobeputintothe matrixforstructural damping (+1recommended forKandKEmethods). is-1. required, unless parameter LM@DESisused.Therealvaluesofthese aparameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LM!JDESmustbesettoO. LMODES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation, MACH-optional. Therealvalueofthisparameter selects theclosest Machnumbers to beusedtocompute aerodynamic matrices. Thedefault valueis0.0. N@DJE-optional. Apositive integer forthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadfrom INPUTT2 module Pl,P2,andP3 description of valuesforPl, Q-required,intherigidformat. Thedefault valueis -required whenusingtheN17DJEparameter. theseparameters whicharerequired bytheanexternal fileviathe -1whennotneeded. SeeSection 5,5fora INPUTT2 module. Thedefault P2andP3areO,11andXXXXXXXX, respectively. Therealvalueofthisparameter defines thedynamic pressure. 4.3-18(05/30/86)"},"title":"User's Manual P21"},"/docs/users/users_manual_022/":{"data":{"":"14. 15. 16.MODALAEROELASTIC RESPONSE SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VflLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 4.3.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 4.3.7TheAPPENDFeature QTheAPPENDfeature canbeusedforrealeigenvalue extraction inModalAeroelastic Response. SeeSection 2.3.7fordetails. 4.3.8RigidFormatErrorMessages fromModalAeroelastic Response Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalAeroelastic Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. M13DALAERf3ELASTIC RESPONSE ERRORNO.1-MASSMATRIXREQUIRED FORMODALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnecti6,1 cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. Mf3DALAERIDELASTIC RESP13NSE ERRORNO.2-EIGENVALUE EXTRACTIf3N DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. 4.3-19(05/30/86)\nAERORIGIDFORMATS MODALAER@ELASTIC RESPONSE ERR@RN@.3-NOGRIDPfjINTDATA HAVEBEENDEFINED. Nopointshavebeendefined withGRIDorSP91NTcardsorno withConnection cards.ISSPECIFIEDf3R N@STRUCTURAL ELEMENTS structural elements havebeendefined e M@DALAER@ELASTIC RESPflNSE ERRORNO.4-REALEIGENVALUES REQUIRED FORMODALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. I *"},"title":"User's Manual P22"}}